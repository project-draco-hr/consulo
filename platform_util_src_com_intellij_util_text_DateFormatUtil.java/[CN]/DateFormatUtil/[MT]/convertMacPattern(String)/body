{
  StringBuilder b=StringBuilderSpinAllocator.alloc();
  try {
    boolean isSpecial=false;
    boolean isText=false;
    for (int i=0; i < macPattern.length(); i++) {
      char c=macPattern.charAt(i);
      char next=i < macPattern.length() - 1 ? macPattern.charAt(i + 1) : 0;
      if (isSpecial) {
        String replacement=null;
        if (c == '%')         replacement="$";
        if (c == 'y')         replacement="yy";
        if (c == 'Y')         replacement="yyyy";
        if (c == 'm')         replacement="MM";
        if (c == 'b')         replacement="MMM";
        if (c == 'B')         replacement="MMMMM";
        if (c == 'e')         replacement="d";
        if (c == 'd')         replacement="dd";
        if (c == 'j')         replacement="DDD";
        if (c == 'w')         replacement="E";
        if (c == 'a')         replacement="EEE";
        if (c == 'A')         replacement="EEEEE";
        if (c == 'H')         replacement="HH";
        if (c == 'I')         replacement="hh";
        if (c == 'M')         replacement="mm";
        if (c == 'S')         replacement="ss";
        if (c == 'F')         replacement="SSS";
        if (c == 'p')         replacement="a";
        if (c == 'Z')         replacement="zzz";
        if (c == 'z')         replacement="Z";
        if (replacement == null)         replacement="'?%" + c + "?'";
        b.append(replacement);
        isSpecial=false;
      }
 else {
        isSpecial=c == '%';
        if (isSpecial) {
          isText=false;
        }
 else {
          if (isText) {
            if (c == '\'' || Character.isWhitespace(c))             b.append('\'');
            isText=!Character.isWhitespace(c);
          }
 else {
            if (c == '\'' || !Character.isWhitespace(c))             b.append('\'');
            isText=!Character.isWhitespace(c) && c != '\'';
          }
          b.append(c);
          if (isText && i == macPattern.length() - 1)           b.append('\'');
        }
      }
    }
    return b.toString();
  }
  finally {
    StringBuilderSpinAllocator.dispose(b);
  }
}
