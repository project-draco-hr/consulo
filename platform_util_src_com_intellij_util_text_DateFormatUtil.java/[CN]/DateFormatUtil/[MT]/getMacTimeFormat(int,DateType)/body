{
  final ID autoReleasePool=Foundation.invoke("NSAutoreleasePool","new");
  try {
    final ID dateFormatter=Foundation.invoke("NSDateFormatter","new");
    Foundation.invoke(dateFormatter,Foundation.createSelector("setFormatterBehavior:"),MacFormatterBehavior_10_4);
    int style;
switch (type) {
case DateFormat.SHORT:
      style=MacFormatterShortStyle;
    break;
case DateFormat.MEDIUM:
  style=MacFormatterMediumStyle;
break;
case DateFormat.LONG:
style=MacFormatterLongStyle;
break;
case DateFormat.FULL:
default :
style=MacFormatterFullStyle;
break;
}
int timeStyle;
int dateStyle;
switch (dateType) {
case DATE:
timeStyle=MacFormatterNoStyle;
dateStyle=style;
break;
case TIME:
timeStyle=style;
dateStyle=MacFormatterNoStyle;
break;
case DATETIME:
default :
timeStyle=style;
dateStyle=style;
break;
}
Foundation.invoke(dateFormatter,Foundation.createSelector("setTimeStyle:"),timeStyle);
Foundation.invoke(dateFormatter,Foundation.createSelector("setDateStyle:"),dateStyle);
return Foundation.toStringViaUTF8(Foundation.invoke(dateFormatter,Foundation.createSelector("dateFormat")));
}
  finally {
Foundation.invoke(autoReleasePool,Foundation.createSelector("release"));
}
}
