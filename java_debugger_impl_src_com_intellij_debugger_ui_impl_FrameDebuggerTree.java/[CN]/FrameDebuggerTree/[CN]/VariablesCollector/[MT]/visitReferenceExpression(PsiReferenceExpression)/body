{
  if (myLineRange.intersects(reference.getTextRange())) {
    final PsiElement psiElement=reference.resolve();
    if (psiElement instanceof PsiVariable) {
      final PsiVariable var=(PsiVariable)psiElement;
      if (var instanceof PsiField) {
        if (!DebuggerUtils.hasSideEffectsOrReferencesMissingVars(reference,myVisibleLocals)) {
          final PsiModifierList modifierList=var.getModifierList();
          boolean isConstant=(var instanceof PsiEnumConstant) || (modifierList != null && modifierList.hasModifierProperty(PsiModifier.STATIC) && modifierList.hasModifierProperty(PsiModifier.FINAL));
          if (!isConstant) {
            final TextWithImportsImpl textWithImports=new TextWithImportsImpl(reference);
            try {
              final ExpressionEvaluator evaluator=EvaluatorBuilderImpl.getInstance().build(textWithImports,reference,myPosition);
              evaluator.evaluate(myEvalContext);
              myExpressions.add(textWithImports);
            }
 catch (            EvaluateException ignored) {
            }
          }
        }
      }
 else {
        if (myVisibleLocals.contains(var.getName())) {
          myVars.add(var.getName());
        }
      }
    }
  }
  super.visitReferenceExpression(reference);
}
