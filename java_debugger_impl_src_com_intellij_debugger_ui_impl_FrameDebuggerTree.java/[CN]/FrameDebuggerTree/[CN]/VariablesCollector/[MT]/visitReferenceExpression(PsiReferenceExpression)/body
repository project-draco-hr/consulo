{
  if (myLineRange.intersects(reference.getTextRange())) {
    final PsiElement psiElement=reference.resolve();
    if (psiElement instanceof PsiVariable) {
      final PsiVariable var=(PsiVariable)psiElement;
      if (var instanceof PsiField) {
        if (!hasSideEffects(reference)) {
          if (var instanceof PsiEnumConstant && reference.getQualifier() == null) {
            final PsiClass enumClass=((PsiEnumConstant)var).getContainingClass();
            if (enumClass != null) {
              final PsiExpression expression=JavaPsiFacade.getInstance(var.getProject()).getParserFacade().createExpressionFromText(enumClass.getName() + "." + var.getName(),var);
              final PsiReference ref=expression.getReference();
              if (ref != null) {
                ref.bindToElement(var);
                myExpressions.add(new TextWithImportsImpl(expression));
              }
            }
          }
 else {
            myExpressions.add(new TextWithImportsImpl(reference));
          }
        }
      }
 else {
        if (myVisibleLocals.contains(var.getName())) {
          myVars.add(var.getName());
        }
      }
    }
  }
  super.visitReferenceExpression(reference);
}
