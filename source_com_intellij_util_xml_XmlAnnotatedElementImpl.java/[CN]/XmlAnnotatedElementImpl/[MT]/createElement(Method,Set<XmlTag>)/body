{
  final Class<?> returnType=method.getReturnType();
  final XmlTag tag=getXmlTag();
  if (XmlAnnotatedElement.class.isAssignableFrom(returnType)) {
    final String qname=getSubTagName(method);
    if (qname != null) {
      XmlTag subTag=tag == null ? null : tag.findFirstSubTag(qname);
      myChildren.put(method,XmlAnnotatedElementManagerImpl.createXmlAnnotatedElement((Class<XmlAnnotatedElement>)returnType,subTag,getProxy(),qname));
      tags.add(subTag);
      return;
    }
  }
  if (tag != null) {
    final Class<? extends XmlAnnotatedElement> aClass=extractElementType(method.getGenericReturnType());
    if (aClass != null) {
      final String qname=getSubTagNameForCollection(method);
      if (qname != null) {
        for (int i=0; i < tag.findSubTags(qname).length; i++) {
          XmlTag subTag=tag.findSubTags(qname)[i];
          if (!tags.contains(subTag)) {
            XmlAnnotatedElementManagerImpl.createXmlAnnotatedElement(aClass,subTag,getProxy(),qname);
            tags.add(subTag);
          }
        }
      }
    }
  }
}
