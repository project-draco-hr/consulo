{
  for (  Field field : object.getClass().getDeclaredFields()) {
    field.setAccessible(true);
    if (field.isAnnotationPresent(PropertyName.class)) {
      final PropertyName annotation=field.getAnnotation(PropertyName.class);
      final String stringValue=getValue(annotation.value(),annotation.defaultValue());
      Object value=null;
      final Class<?> type=field.getType();
      if (type.equals(boolean.class)) {
        value=Boolean.valueOf(stringValue);
      }
 else       if (type.equals(long.class)) {
        value=Long.parseLong(stringValue);
      }
 else       if (type.equals(int.class)) {
        value=Integer.parseInt(stringValue);
      }
 else       if (type.equals(short.class)) {
        value=Short.parseShort(stringValue);
      }
 else       if (type.equals(byte.class)) {
        value=Byte.parseByte(stringValue);
      }
 else       if (type.equals(double.class)) {
        value=Double.parseDouble(stringValue);
      }
 else       if (type.equals(float.class)) {
        value=Float.parseFloat(stringValue);
      }
 else       if (type.equals(String.class)) {
        value=stringValue;
      }
      if (value != null) {
        field.set(object,value);
      }
    }
  }
}
