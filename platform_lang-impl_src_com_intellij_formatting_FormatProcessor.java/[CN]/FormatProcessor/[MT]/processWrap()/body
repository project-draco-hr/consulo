{
  final SpacingImpl spacing=myCurrentBlock.getSpaceProperty();
  final WhiteSpace whiteSpace=myCurrentBlock.getWhiteSpace();
  final boolean wrapWasPresent=whiteSpace.containsLineFeeds();
  if (wrapWasPresent) {
    myFirstWrappedBlockOnLine=null;
    if (!whiteSpace.containsLineFeedsInitially()) {
      whiteSpace.removeLineFeeds(spacing,this);
    }
  }
  final boolean wrapIsPresent=whiteSpace.containsLineFeeds();
  final ArrayList<WrapImpl> wraps=myCurrentBlock.getWraps();
  for (  WrapImpl wrap : wraps) {
    wrap.setWrapOffset(myCurrentBlock.getStartOffset());
  }
  final WrapImpl wrap=getWrapToBeUsed(wraps);
  if (wrap != null || wrapIsPresent) {
    if (!wrapIsPresent && !canReplaceWrapCandidate(wrap)) {
      myCurrentBlock=myWrapCandidate;
      return true;
    }
    if (wrap != null && wrap.getChopStartBlock() != null) {
      myCurrentBlock=wrap.getChopStartBlock();
      wrap.setActive();
      return true;
    }
    if (wrap != null && isChopNeeded(wrap)) {
      wrap.setActive();
    }
    if (!wrapIsPresent) {
      whiteSpace.ensureLineFeed();
      if (!wrapWasPresent) {
        if (myFirstWrappedBlockOnLine != null && wrap.isChildOf(myFirstWrappedBlockOnLine.getWrap(),myCurrentBlock)) {
          wrap.ignoreParentWrap(myFirstWrappedBlockOnLine.getWrap(),myCurrentBlock);
          myCurrentBlock=myFirstWrappedBlockOnLine;
          return true;
        }
 else {
          myFirstWrappedBlockOnLine=myCurrentBlock;
        }
      }
    }
    myWrapCandidate=null;
  }
 else {
    for (    final WrapImpl wrap1 : wraps) {
      if (isCandidateToBeWrapped(wrap1) && canReplaceWrapCandidate(wrap1)) {
        myWrapCandidate=myCurrentBlock;
      }
      if (isChopNeeded(wrap1)) {
        wrap1.saveChopBlock(myCurrentBlock);
      }
    }
  }
  if (!whiteSpace.containsLineFeeds() && myWrapCandidate != null && !whiteSpace.isReadOnly() && lineOver()) {
    myCurrentBlock=myWrapCandidate;
    return true;
  }
  return false;
}
