{
  if (c == '@' && file instanceof PsiJavaFile) {
    autoPopupJavadocLookup(project,editor);
  }
 else   if (c == '#' || c == '.') {
    autoPopupMemberLookup(project,editor);
  }
  final FileType originalFileType=getOriginalFileType(file);
  int offsetBefore=editor.getCaretModel().getOffset();
  myJavaLTTyped='<' == c && file instanceof PsiJavaFile && !(file instanceof JspFile) && CodeInsightSettings.getInstance().AUTOINSERT_PAIR_BRACKET && PsiUtil.isLanguageLevel5OrHigher(file) && isAfterClassLikeIdentifierOrDot(offsetBefore,editor);
  if ('>' == c) {
    if (file instanceof PsiJavaFile && !(file instanceof JspFile) && CodeInsightSettings.getInstance().AUTOINSERT_PAIR_BRACKET&& PsiUtil.isLanguageLevel5OrHigher(file)) {
      if (handleJavaGT(editor,JavaTokenType.LT,JavaTokenType.GT,INVALID_INSIDE_REFERENCE))       return Result.STOP;
    }
  }
  if (c == ';') {
    if (handleSemicolon(editor,fileType))     return Result.STOP;
  }
  if (originalFileType == StdFileTypes.JAVA && c == '{') {
    int offset=editor.getCaretModel().getOffset();
    if (offset == 0) {
      return Result.CONTINUE;
    }
    HighlighterIterator iterator=((EditorEx)editor).getHighlighter().createIterator(offset - 1);
    while (!iterator.atEnd() && iterator.getTokenType() == TokenType.WHITE_SPACE) {
      iterator.retreat();
    }
    if (iterator.atEnd() || iterator.getTokenType() == JavaTokenType.RBRACKET || iterator.getTokenType() == JavaTokenType.EQ) {
      return Result.CONTINUE;
    }
    PsiDocumentManager.getInstance(project).commitDocument(editor.getDocument());
    final PsiElement leaf=file.findElementAt(offset);
    if (PsiTreeUtil.getParentOfType(leaf,PsiArrayInitializerExpression.class,false,PsiCodeBlock.class,PsiMember.class) != null) {
      return Result.CONTINUE;
    }
    if (PsiTreeUtil.getParentOfType(leaf,PsiCodeBlock.class,false,PsiMember.class) != null) {
      EditorModificationUtil.insertStringAtCaret(editor,"{",false,true);
      TypedHandler.indentOpenedBrace(project,editor);
      return Result.STOP;
    }
  }
  return Result.CONTINUE;
}
