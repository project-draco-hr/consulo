{
  TextRange elementRange=leaf.getTextRange();
  String elementText=leaf.getText();
  int changeStart=textRange.getStartOffset() - elementRange.getStartOffset();
  int changeEnd=textRange.getEndOffset() - elementRange.getStartOffset();
  String token1Data=elementText.substring(0,changeStart);
  String token2Data=elementText.substring(changeEnd);
  if (canInsertWhiteSpaceInto(leaf)) {
    StringBuffer buf=new StringBuffer(token1Data.length() + whiteSpace.length() + token2Data.length());
    buf.append(token1Data).append(whiteSpace).append(token2Data);
    final LeafElement singleLeafElement=Factory.createSingleLeafElement(leaf.getElementType(),buf.toString().toCharArray(),0,buf.length(),SharedImplUtil.findCharTableByTree(leaf),leaf.getPsi().getManager());
    leaf.getTreeParent().replaceChild(leaf,singleLeafElement);
  }
 else {
    LOG.assertTrue(token1Data.length() > 0);
    LOG.assertTrue(token2Data.length() > 0);
    final LeafElement leaf1=Factory.createSingleLeafElement(leaf.getElementType(),token1Data.toCharArray(),0,token1Data.length(),SharedImplUtil.findCharTableByTree(leaf),leaf.getPsi().getManager());
    final LeafElement leaf2=Factory.createSingleLeafElement(leaf.getElementType(),token2Data.toCharArray(),0,token2Data.length(),SharedImplUtil.findCharTableByTree(leaf),leaf.getPsi().getManager());
    final LeafElement ws=Factory.createSingleLeafElement(ElementType.WHITE_SPACE,whiteSpace.toCharArray(),0,whiteSpace.length(),SharedImplUtil.findCharTableByTree(leaf),leaf.getPsi().getManager());
    Project project=leaf.getPsi().getProject();
    final PomModel model=project.getModel();
    final ASTNode treeParent=leaf.getTreeParent();
    final TreeAspect aspect=model.getModelAspect(TreeAspect.class);
    try {
      model.runTransaction(new PomTransactionBase(treeParent.getPsi(),aspect){
        public PomModelEvent runInner(){
          treeParent.replaceChild(leaf,leaf1);
          treeParent.addChild(ws,leaf1.getTreeNext());
          treeParent.addChild(leaf2,ws.getTreeNext());
          return getAccumulatedEvent();
        }
      }
);
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
  }
}
