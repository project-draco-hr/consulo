{
  final boolean isAvailable=super.isAvailable(project,editor,element) && TestIntegrationUtils.isTest(element);
  if (isAvailable) {
    final PsiField field=PsiTreeUtil.getParentOfType(element,PsiField.class);
    LOG.assertTrue(field != null);
    final PsiClass aClass=field.getContainingClass();
    LOG.assertTrue(aClass != null);
    final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(project);
    for (    TestFramework framework : Extensions.getExtensions(TestFramework.EXTENSION_NAME)) {
      if (framework instanceof JavaTestFramework && framework.isTestClass(aClass)) {
        try {
          ((JavaTestFramework)framework).createSetUpPatternMethod(elementFactory);
          return true;
        }
 catch (        Exception e) {
          return false;
        }
      }
    }
    return true;
  }
  return false;
}
