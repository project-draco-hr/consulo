{
  DataInputStream reader=null;
  try {
    reader=new DataInputStream(new BufferedInputStream(new FileInputStream(file)));
    int lineNum=0;
    while (reader.available() > 0) {
      if (lineNum == CompositePrintable.this.getExceptionMark() && lineNum > 0)       printer.mark();
      final String line=IOUtil.readString(reader);
      boolean printed=false;
      for (      ConsoleViewContentType contentType : ConsoleViewContentType.OUTPUT_TYPES) {
        final String prefix=contentType.toString();
        if (line.startsWith(prefix)) {
          printer.print(line.substring(prefix.length()),contentType);
          myLastSelected=contentType;
          printed=true;
          break;
        }
      }
      if (!printed) {
        if (line.startsWith(HYPERLINK)) {
          new DiffHyperlink(IOUtil.readString(reader),IOUtil.readString(reader),IOUtil.readString(reader)).printOn(printer);
        }
 else {
          printer.print(line,myLastSelected != null ? myLastSelected : ConsoleViewContentType.NORMAL_OUTPUT);
        }
      }
      lineNum++;
    }
    for (int i=0; i < nestedPrintables.size(); i++) {
      if (i == getExceptionMark() && i > 0)       printer.mark();
      nestedPrintables.get(i).printOn(printer);
    }
  }
 catch (  FileNotFoundException e) {
    LOG.info(e);
  }
catch (  IOException e) {
    LOG.error(e);
  }
 finally {
    try {
      if (reader != null) {
        reader.close();
      }
    }
 catch (    FileNotFoundException e) {
      LOG.info(e);
    }
catch (    IOException e) {
      LOG.error(e);
    }
  }
}
