{
  super.visitMethod(method);
  if (ignorePrivateMethodsAndFields && method.hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  final PsiType type=method.getReturnType();
  if (!CollectionUtils.isCollectionClass(type)) {
    return;
  }
  if (LibraryUtil.isOverrideOfLibraryMethod(method)) {
    return;
  }
  final PsiTypeElement typeElement=method.getReturnTypeElement();
  if (typeElement == null) {
    return;
  }
  final PsiJavaCodeReferenceElement referenceElement=typeElement.getInnermostComponentReferenceElement();
  if (referenceElement == null) {
    return;
  }
  final PsiElement nameElement=referenceElement.getReferenceNameElement();
  if (nameElement == null) {
    return;
  }
  registerError(nameElement,nameElement);
}
