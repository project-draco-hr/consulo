{
  File oldFile=null;
  IdeaPluginDescriptor ideaPluginDescriptor=null;
  if (PluginManager.isPluginInstalled(PluginId.getId(myPluginId))) {
    ideaPluginDescriptor=PluginManager.getPlugin(PluginId.getId(myPluginId));
    LOG.assertTrue(ideaPluginDescriptor != null);
    if (myPluginVersion != null && IdeaPluginDescriptorImpl.compareVersion(ideaPluginDescriptor.getVersion(),myPluginVersion) >= 0)     return false;
    oldFile=ideaPluginDescriptor.getPath();
  }
  File file;
  String errorMessage=IdeBundle.message("unknown.error");
  try {
    file=downloadPlugin(pi);
  }
 catch (  IOException ex) {
    file=null;
    errorMessage=ex.getMessage();
  }
  if (file == null) {
    final String errorMessage1=errorMessage;
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        Messages.showErrorDialog(IdeBundle.message("error.plugin.was.not.installed",getPluginName(),errorMessage1),IdeBundle.message("title.failed.to.download"));
      }
    }
);
    return false;
  }
  if (ideaPluginDescriptor != null) {
    final IdeaPluginDescriptorImpl descriptor=PluginManager.loadDescriptorFromJar(file);
    if (descriptor == null)     return false;
    if (IdeaPluginDescriptorImpl.compareVersion(ideaPluginDescriptor.getVersion(),descriptor.getVersion()) >= 0)     return false;
    if (oldFile != null) {
      StartupActionScriptManager.ActionCommand deleteOld=new StartupActionScriptManager.DeleteCommand(oldFile);
      StartupActionScriptManager.addActionCommand(deleteOld);
    }
  }
  if (file.getName().endsWith(".jar")) {
    StartupActionScriptManager.ActionCommand copyPlugin=new StartupActionScriptManager.CopyCommand(file,new File(PathManager.getPluginsPath() + File.separator + file.getName()));
    StartupActionScriptManager.addActionCommand(copyPlugin);
  }
 else {
    String unzipPath;
    if (ZipUtil.isZipContainsFolder(file)) {
      unzipPath=PathManager.getPluginsPath();
    }
 else {
      unzipPath=PathManager.getPluginsPath() + File.separator + getPluginName();
    }
    StartupActionScriptManager.ActionCommand unzip=new StartupActionScriptManager.UnzipCommand(file,new File(unzipPath));
    StartupActionScriptManager.addActionCommand(unzip);
  }
  StartupActionScriptManager.ActionCommand deleteTemp=new StartupActionScriptManager.DeleteCommand(file);
  StartupActionScriptManager.addActionCommand(deleteTemp);
  return true;
}
