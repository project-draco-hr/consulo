{
  super(project,tree,treeModel,treeStructure,comparator);
  final MessageBusConnection connection=project.getMessageBus().connect(this);
  myPsiTreeChangeListener=createPsiTreeChangeListener(myProject);
  connection.subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootListener(){
    public void beforeRootsChange(    ModuleRootEvent event){
    }
    public void rootsChanged(    ModuleRootEvent event){
      getUpdater().addSubtreeToUpdate(getRootNode());
    }
  }
);
  connection.subscribe(BookmarksListener.TOPIC,new MyBookmarksListener());
  PsiManager.getInstance(myProject).addPsiTreeChangeListener(myPsiTreeChangeListener);
  myFileStatusListener=new MyFileStatusListener();
  FileStatusManager.getInstance(myProject).addFileStatusListener(myFileStatusListener);
  myCopyPasteListener=new CopyPasteUtil.DefaultCopyPasteListener(getUpdater());
  CopyPasteManager.getInstance().addContentChangedListener(myCopyPasteListener);
  myProblemListener=new MyProblemListener();
  WolfTheProblemSolver.getInstance(project).addProblemListener(myProblemListener);
  setCanYieldUpdate(true);
  initRootNode();
}
