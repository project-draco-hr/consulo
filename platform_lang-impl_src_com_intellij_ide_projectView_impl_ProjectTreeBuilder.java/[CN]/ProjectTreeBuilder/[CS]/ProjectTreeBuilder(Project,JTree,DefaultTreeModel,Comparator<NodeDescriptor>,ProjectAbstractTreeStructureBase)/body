{
  super(project,tree,treeModel,treeStructure,comparator);
  final MessageBusConnection connection=project.getMessageBus().connect(this);
  connection.subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootAdapter(){
    @Override public void rootsChanged(    ModuleRootEvent event){
      queueUpdate();
    }
  }
);
  connection.subscribe(BookmarksListener.TOPIC,new MyBookmarksListener());
  PsiManager.getInstance(project).addPsiTreeChangeListener(createPsiTreeChangeListener(project),this);
  FileStatusManager.getInstance(project).addFileStatusListener(new MyFileStatusListener(),this);
  CopyPasteManager.getInstance().addContentChangedListener(new CopyPasteUtil.DefaultCopyPasteListener(getUpdater()),this);
  WolfTheProblemSolver.getInstance(project).addProblemListener(new MyProblemListener(),this);
  setCanYieldUpdate(true);
  initRootNode();
}
