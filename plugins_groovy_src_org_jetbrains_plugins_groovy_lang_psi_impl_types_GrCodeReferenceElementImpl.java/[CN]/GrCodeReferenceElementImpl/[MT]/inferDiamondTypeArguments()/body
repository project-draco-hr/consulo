{
  PsiElement parent=getParent();
  if (!(parent instanceof GrNewExpression))   return PsiType.EMPTY_ARRAY;
  PsiElement pparent=PsiUtil.skipParentheses(parent.getParent(),true);
  PsiType ltype=null;
  if (pparent instanceof GrAssignmentExpression && PsiTreeUtil.isAncestor(((GrAssignmentExpression)pparent).getRValue(),parent,false)) {
    GrExpression lValue=((GrAssignmentExpression)pparent).getLValue();
    if (PsiUtil.mightBeLValue(lValue)) {
      ltype=lValue.getNominalType();
    }
  }
 else   if (pparent instanceof GrVariable && ((GrVariable)pparent).getInitializerGroovy() == parent) {
    ltype=((GrVariable)pparent).getDeclaredType();
  }
 else   if (pparent instanceof GrListOrMap) {
    PsiElement ppparent=PsiUtil.skipParentheses(pparent.getParent(),true);
    if (ppparent instanceof GrAssignmentExpression && PsiTreeUtil.isAncestor(((GrAssignmentExpression)ppparent).getRValue(),pparent,false)) {
      PsiElement lValue=PsiUtil.skipParentheses(((GrAssignmentExpression)ppparent).getLValue(),false);
      if (lValue instanceof GrTupleExpression) {
        GrExpression[] initializers=((GrListOrMap)pparent).getInitializers();
        int index=ArrayUtil.find(initializers,parent);
        GrExpression[] expressions=((GrTupleExpression)lValue).getExpressions();
        if (index < expressions.length) {
          ltype=expressions[index].getNominalType();
        }
      }
    }
  }
  if (ltype instanceof PsiClassType) {
    return ((PsiClassType)ltype).getParameters();
  }
  return PsiType.EMPTY_ARRAY;
}
