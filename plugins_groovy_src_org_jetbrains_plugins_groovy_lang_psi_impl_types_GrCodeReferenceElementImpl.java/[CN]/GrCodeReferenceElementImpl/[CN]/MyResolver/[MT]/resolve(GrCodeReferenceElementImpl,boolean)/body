{
  if (reference.getReferenceName() == null)   return GroovyResolveResult.EMPTY_ARRAY;
  final GroovyResolveResult[] results=_resolve(reference,reference.getManager(),reference.getKind());
  final PsiType[] args=reference.getTypeArguments();
  for (int i=0; i < results.length; i++) {
    GroovyResolveResult result=results[i];
    final PsiElement element=result.getElement();
    if (element instanceof PsiClass) {
      final PsiSubstitutor substitutor=result.getSubstitutor();
      final PsiSubstitutor newSubstitutor=substitutor.putAll((PsiClass)element,args);
      results[i]=new GroovyResolveResultImpl(element,result.getCurrentFileResolveContext(),newSubstitutor,result.isAccessible(),result.isStaticsOK());
    }
  }
  return results;
}
