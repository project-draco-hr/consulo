{
  if (__hashCodeCalc) {
    return 0;
  }
  __hashCodeCalc=true;
  int _hashCode=1;
  if (getId() != null) {
    _hashCode+=getId().hashCode();
  }
  if (getView_state() != null) {
    _hashCode+=getView_state().hashCode();
  }
  if (getLast_updated() != null) {
    _hashCode+=getLast_updated().hashCode();
  }
  if (getProject() != null) {
    _hashCode+=getProject().hashCode();
  }
  if (getCategory() != null) {
    _hashCode+=getCategory().hashCode();
  }
  if (getPriority() != null) {
    _hashCode+=getPriority().hashCode();
  }
  if (getSeverity() != null) {
    _hashCode+=getSeverity().hashCode();
  }
  if (getStatus() != null) {
    _hashCode+=getStatus().hashCode();
  }
  if (getReporter() != null) {
    _hashCode+=getReporter().hashCode();
  }
  if (getSummary() != null) {
    _hashCode+=getSummary().hashCode();
  }
  if (getVersion() != null) {
    _hashCode+=getVersion().hashCode();
  }
  if (getBuild() != null) {
    _hashCode+=getBuild().hashCode();
  }
  if (getPlatform() != null) {
    _hashCode+=getPlatform().hashCode();
  }
  if (getOs() != null) {
    _hashCode+=getOs().hashCode();
  }
  if (getOs_build() != null) {
    _hashCode+=getOs_build().hashCode();
  }
  if (getReproducibility() != null) {
    _hashCode+=getReproducibility().hashCode();
  }
  if (getDate_submitted() != null) {
    _hashCode+=getDate_submitted().hashCode();
  }
  if (getSponsorship_total() != null) {
    _hashCode+=getSponsorship_total().hashCode();
  }
  if (getHandler() != null) {
    _hashCode+=getHandler().hashCode();
  }
  if (getProjection() != null) {
    _hashCode+=getProjection().hashCode();
  }
  if (getEta() != null) {
    _hashCode+=getEta().hashCode();
  }
  if (getResolution() != null) {
    _hashCode+=getResolution().hashCode();
  }
  if (getFixed_in_version() != null) {
    _hashCode+=getFixed_in_version().hashCode();
  }
  if (getTarget_version() != null) {
    _hashCode+=getTarget_version().hashCode();
  }
  if (getDescription() != null) {
    _hashCode+=getDescription().hashCode();
  }
  if (getSteps_to_reproduce() != null) {
    _hashCode+=getSteps_to_reproduce().hashCode();
  }
  if (getAdditional_information() != null) {
    _hashCode+=getAdditional_information().hashCode();
  }
  if (getAttachments() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getAttachments()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getAttachments(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getRelationships() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getRelationships()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getRelationships(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getNotes() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getNotes()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getNotes(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getCustom_fields() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getCustom_fields()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getCustom_fields(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getDue_date() != null) {
    _hashCode+=getDue_date().hashCode();
  }
  if (getMonitors() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getMonitors()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getMonitors(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getSticky() != null) {
    _hashCode+=getSticky().hashCode();
  }
  if (getTags() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getTags()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getTags(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  __hashCodeCalc=false;
  return _hashCode;
}
