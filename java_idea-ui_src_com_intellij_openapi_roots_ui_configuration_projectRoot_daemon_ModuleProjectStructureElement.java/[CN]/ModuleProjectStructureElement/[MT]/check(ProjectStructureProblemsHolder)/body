{
  final ModifiableModuleModel moduleModel=myContext.getModulesConfigurator().getModuleModel();
  final Module[] all=moduleModel.getModules();
  for (  Module each : all) {
    if (each != myModule && myContext.getRealName(each).equals(myContext.getRealName(myModule))) {
      problemsHolder.registerError(ProjectBundle.message("project.roots.module.duplicate.name.message"));
      break;
    }
  }
  final ModuleRootModel rootModel=myContext.getModulesConfigurator().getRootModel(myModule);
  if (rootModel == null)   return;
  final OrderEntry[] entries=rootModel.getOrderEntries();
  for (  OrderEntry entry : entries) {
    if (!entry.isValid()) {
      if (entry instanceof JdkOrderEntry && ((JdkOrderEntry)entry).getJdkName() == null) {
        problemsHolder.registerError(ProjectBundle.message("project.roots.module.jdk.problem.message"));
      }
 else {
        problemsHolder.registerError(ProjectBundle.message("project.roots.library.problem.message",entry.getPresentableName()));
      }
    }
  }
}
