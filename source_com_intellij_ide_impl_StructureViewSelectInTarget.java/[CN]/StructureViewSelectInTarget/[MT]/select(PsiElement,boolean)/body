{
  PsiElement targetElement=element;
  while (true) {
    if (targetElement instanceof PsiClass && !(targetElement instanceof PsiAnonymousClass))     break;
    if (targetElement instanceof PsiMethod) {
      if (!(targetElement.getParent() instanceof PsiAnonymousClass))       break;
    }
    if (targetElement == null || targetElement instanceof PsiField || targetElement instanceof PsiFile)     break;
    targetElement=targetElement.getParent();
  }
  if (targetElement == null)   return;
  final PsiElement theElement=targetElement;
  final StructureView structureView=getStructureView();
  ToolWindowManager windowManager=ToolWindowManager.getInstance(element.getProject());
  final Runnable runnable=new Runnable(){
    public void run(){
      VirtualFile virtualFile=theElement.getContainingFile().getVirtualFile();
      FileEditor editor=FileEditorManager.getInstance(myProject).getSelectedEditor(virtualFile);
      structureView.select(theElement,editor,requestFocus);
    }
  }
;
  if (requestFocus) {
    windowManager.getToolWindow(ToolWindowId.STRUCTURE_VIEW).activate(runnable);
  }
 else {
    runnable.run();
  }
}
