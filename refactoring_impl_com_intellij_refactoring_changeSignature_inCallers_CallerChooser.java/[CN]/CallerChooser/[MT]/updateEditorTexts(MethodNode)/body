{
  final MethodNode parentNode=(MethodNode)node.getParent();
  final String callerText=node != myRoot ? getText(node.getMethod()) : "";
  final Document callerDocument=myCallerEditor.getDocument();
  final String calleeText=node != myRoot ? getText(parentNode.getMethod()) : "";
  final Document calleeDocument=myCalleeEditor.getDocument();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      callerDocument.replaceString(0,callerDocument.getTextLength(),callerText);
      calleeDocument.replaceString(0,calleeDocument.getTextLength(),calleeText);
    }
  }
);
  final PsiMethod caller=node.getMethod();
  final PsiMethod callee=parentNode != null ? parentNode.getMethod() : null;
  if (caller != null && callee != null) {
    HighlightManager highlighter=HighlightManager.getInstance(myProject);
    EditorColorsManager colorManager=EditorColorsManager.getInstance();
    TextAttributes attributes=colorManager.getGlobalScheme().getAttributes(EditorColors.TEXT_SEARCH_RESULT_ATTRIBUTES);
    int start=getStartOffset(caller);
    for (    PsiReference ref : ReferencesSearch.search(callee,new LocalSearchScope(caller),false).findAll()) {
      final PsiElement element=ref.getElement();
      if (element != null) {
        highlighter.addRangeHighlight(myCallerEditor,element.getTextRange().getStartOffset() - start,element.getTextRange().getEndOffset() - start,attributes,false,null);
      }
    }
  }
}
