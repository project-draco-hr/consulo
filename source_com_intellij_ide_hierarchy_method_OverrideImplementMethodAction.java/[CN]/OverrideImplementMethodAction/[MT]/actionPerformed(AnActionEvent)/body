{
  final DataContext dataContext=event.getDataContext();
  final MethodHierarchyBrowser methodHierarchyBrowser=(MethodHierarchyBrowser)dataContext.getData(MethodHierarchyBrowser.METHOD_HIERARCHY_BROWSER_DATA_CONSTANT);
  if (methodHierarchyBrowser == null)   return;
  final Project project=(Project)dataContext.getData(DataConstants.PROJECT);
  if (project == null)   return;
  final String commandName=event.getPresentation().getText();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      CommandProcessor.getInstance().executeCommand(project,new Runnable(){
        public void run(){
          try {
            final MethodHierarchyNodeDescriptor[] selectedDescriptors=methodHierarchyBrowser.getSelectedDescriptors();
            for (int i=0; i < selectedDescriptors.length; i++) {
              OverrideImplementUtil.overrideOrImplement(selectedDescriptors[i].getPsiClass(),methodHierarchyBrowser.getBaseMethod());
            }
            ToolWindowManager.getInstance(project).activateEditorComponent();
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
          }
        }
      }
,commandName,null);
    }
  }
);
}
