{
  if (!isOpen.compareAndSet(false,true))   return;
  MavenUtil.invokeLater(myProject,new Runnable(){
    public void run(){
      MessageView messageView=MessageView.SERVICE.getInstance(myProject);
      Content content=ContentFactory.SERVICE.getInstance().createContent(myConsoleView.getComponent(),myTitle,true);
      content.putUserData(CONSOLE_KEY,MavenConsoleImpl.this);
      messageView.getContentManager().addContent(content);
      messageView.getContentManager().setSelectedContent(content);
      for (      Content each : messageView.getContentManager().getContents()) {
        if (each.isPinned())         continue;
        if (each == content)         continue;
        MavenConsoleImpl console=each.getUserData(CONSOLE_KEY);
        if (console == null)         continue;
        if (!myTitle.equals(console.myTitle))         continue;
        if (console.isFinished()) {
          messageView.getContentManager().removeContent(each,false);
        }
      }
      ToolWindow toolWindow=ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.MESSAGES_WINDOW);
      if (!toolWindow.isActive()) {
        toolWindow.activate(null,false);
      }
    }
  }
);
}
