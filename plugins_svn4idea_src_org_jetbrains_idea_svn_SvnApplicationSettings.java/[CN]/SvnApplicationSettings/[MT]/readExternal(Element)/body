{
  File file=getCredentialsFile();
  if (!file.exists() || !file.canRead() || !file.isFile()) {
    return;
  }
  Document document;
  try {
    document=JDOMUtil.loadDocument(file);
  }
 catch (  JDOMException e) {
    return;
  }
catch (  IOException e) {
    return;
  }
  if (document == null || document.getRootElement() == null) {
    return;
  }
  Element authElement=document.getRootElement().getChild("kinds");
  if (authElement == null) {
    return;
  }
  myAuthenticationInfo=new HashMap<String,Map<String,Map<String,String>>>();
  List groupsList=authElement.getChildren();
  for (Iterator groups=groupsList.iterator(); groups.hasNext(); ) {
    Element groupElement=(Element)groups.next();
    String kind=groupElement.getName();
    if ("realm".equals(kind)) {
      continue;
    }
    Map<String,Map<String,String>> groupMap=new HashMap<String,Map<String,String>>();
    myAuthenticationInfo.put(kind,groupMap);
    List realmsList=groupElement.getChildren("realm");
    for (Iterator realms=realmsList.iterator(); realms.hasNext(); ) {
      Element realmElement=(Element)realms.next();
      String realmName=realmElement.getAttributeValue("name");
      StringBuffer sb=new StringBuffer(realmName);
      byte[] buffer=new byte[sb.length()];
      int length=SVNBase64.base64ToByteArray(sb,buffer);
      realmName=new String(buffer,0,length);
      Map<String,String> infoMap=new HashMap<String,String>();
      List attrsList=realmElement.getAttributes();
      for (Iterator attrs=attrsList.iterator(); attrs.hasNext(); ) {
        Attribute attr=(Attribute)attrs.next();
        if ("name".equals(attr.getName())) {
          continue;
        }
        String key=attr.getName();
        String value=attr.getValue();
        infoMap.put(key,value);
      }
      groupMap.put(realmName,infoMap);
    }
  }
}
