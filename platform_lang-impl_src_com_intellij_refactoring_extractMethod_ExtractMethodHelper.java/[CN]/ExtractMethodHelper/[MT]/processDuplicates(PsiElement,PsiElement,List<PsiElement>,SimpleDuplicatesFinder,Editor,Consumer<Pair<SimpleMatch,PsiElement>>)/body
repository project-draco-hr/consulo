{
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    replaceDuplicates(callElement,editor,replacer,finder.findDuplicates(scope,generatedMethod));
    return;
  }
  final Project project=callElement.getProject();
  ProgressManager.getInstance().run(new Task.Backgroundable(project,"Searching for duplicates...",true){
    public void run(    @NotNull ProgressIndicator indicator){
      if (myProject == null || myProject.isDisposed())       return;
      final List<SimpleMatch> duplicates=ApplicationManager.getApplication().runReadAction(new Computable<List<SimpleMatch>>(){
        @Override public List<SimpleMatch> compute(){
          return finder.findDuplicates(scope,generatedMethod);
        }
      }
);
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          replaceDuplicates(callElement,editor,replacer,duplicates);
        }
      }
);
    }
  }
);
}
