{
  mxIGraphModel model=graph.getModel();
  if (root == null) {
    if (graph.getEdges(parent,model.getParent(parent),invert,!invert,false).length > 0) {
      root=parent;
    }
 else {
      List<Object> roots=findTreeRoots(parent,invert);
      if (roots.size() > 0) {
        for (int i=0; i < roots.size(); i++) {
          if (!isVertexIgnored(roots.get(i)) && graph.getEdges(roots.get(i),null,invert,!invert,false).length > 0) {
            root=roots.get(i);
            break;
          }
        }
      }
    }
  }
  if (root != null) {
    if (resizeParent) {
      parentsChanged=new HashSet<Object>();
    }
 else {
      parentsChanged=null;
    }
    model.beginUpdate();
    try {
      TreeNode node=dfs(root,parent,null);
      if (node != null) {
        layout(node);
        double x0=graph.getGridSize();
        double y0=x0;
        if (!moveTree) {
          mxRectangle g=getVertexBounds(root);
          if (g != null) {
            x0=g.getX();
            y0=g.getY();
          }
        }
        mxRectangle bounds=null;
        if (horizontal) {
          bounds=horizontalLayout(node,x0,y0,null);
        }
 else {
          bounds=verticalLayout(node,null,x0,y0,null);
        }
        if (bounds != null) {
          double dx=0;
          double dy=0;
          if (bounds.getX() < 0) {
            dx=Math.abs(x0 - bounds.getX());
          }
          if (bounds.getY() < 0) {
            dy=Math.abs(y0 - bounds.getY());
          }
          if (dx != 0 || dy != 0) {
            moveNode(node,dx,dy);
          }
          if (resizeParent) {
            adjustParents();
          }
          if (edgeRouting) {
            localEdgeProcessing(node);
          }
        }
      }
    }
  finally {
      model.endUpdate();
    }
  }
}
