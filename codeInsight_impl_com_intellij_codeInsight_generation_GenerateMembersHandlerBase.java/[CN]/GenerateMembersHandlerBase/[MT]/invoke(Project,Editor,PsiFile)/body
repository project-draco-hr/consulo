{
  if (!file.isWritable()) {
    if (!FileDocumentManager.fileForDocumentCheckedOutSuccessfully(editor.getDocument(),project)) {
      return;
    }
  }
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  int offset=editor.getCaretModel().getOffset();
  PsiElement element=file.findElementAt(offset);
  do {
    element=PsiTreeUtil.getParentOfType(element,PsiClass.class);
  }
 while (element instanceof PsiTypeParameter);
  final PsiClass aClass=(PsiClass)element;
  if (aClass == null || aClass.isInterface())   return;
  LOG.assertTrue(aClass.isValid());
  LOG.assertTrue(aClass.getContainingFile() != null);
  final Object[] members=chooseOriginalMembers(aClass,project);
  if (members == null)   return;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      doGenerate(project,editor,aClass,members);
    }
  }
);
}
