{
  int offset=editor.getCaretModel().getOffset();
  int col=editor.getCaretModel().getLogicalPosition().column;
  int line=editor.getCaretModel().getLogicalPosition().line;
  editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(0,0));
  Object[] newMembers=null;
  try {
    Object[] prototypes=generateMemberPrototypes(aClass,members);
    newMembers=GenerateMembersUtil.insertMembersAtOffset(project,editor.getDocument(),aClass.getContainingFile(),offset,prototypes);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
    return;
  }
  editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(line,col));
  final ArrayList templates=new ArrayList();
  for (  Object member : newMembers) {
    if (member instanceof TemplateGenerationInfo) {
      templates.add(member);
    }
  }
  if (!templates.isEmpty()) {
    new ProcessTemplatesRunnable(project,templates,editor).run();
  }
 else   if (newMembers.length > 0) {
    positionCaret(editor,(PsiElement)newMembers[0]);
  }
}
