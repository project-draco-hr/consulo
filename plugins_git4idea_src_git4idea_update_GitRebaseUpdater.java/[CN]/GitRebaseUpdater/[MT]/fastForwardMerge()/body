{
  LOG.info("Trying fast-forward merge for " + myRoot);
  GitRepository repository=GitUtil.getRepositoryManager(myProject).getRepositoryForRoot(myRoot);
  if (repository == null) {
    LOG.error("Repository is null for " + myRoot);
    return false;
  }
  try {
    markStart(myRoot);
  }
 catch (  VcsException e) {
    LOG.info("Couldn't mark start for repository " + myRoot,e);
    return false;
  }
  GitCommandResult result=myGit.merge(repository,getRemoteBranchToMerge(),Collections.singletonList("--ff-only"));
  try {
    markEnd(myRoot);
  }
 catch (  VcsException e) {
    LOG.info("Couldn't mark end for repository " + myRoot,e);
    Notificator.getInstance(myProject).notifyWeakWarning("Couldn't collect the updated files info",String.format("Update of %s was successful, but we couldn't collect the updated changes because of an error",myRoot),null);
  }
  return result.success();
}
