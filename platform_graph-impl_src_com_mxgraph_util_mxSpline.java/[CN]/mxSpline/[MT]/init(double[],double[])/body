{
  if (x.length != y.length) {
    return;
  }
  if (x.length < 2) {
    return;
  }
  t=new double[x.length];
  t[0]=0.0;
  length=0.0;
  for (int i=1; i < t.length; i++) {
    double lx=x[i] - x[i - 1];
    double ly=y[i] - y[i - 1];
    if (0.0 == lx) {
      t[i]=Math.abs(ly);
    }
 else     if (0.0 == ly) {
      t[i]=Math.abs(lx);
    }
 else {
      t[i]=Math.sqrt(lx * lx + ly * ly);
    }
    length+=t[i];
    t[i]+=t[i - 1];
  }
  for (int j=1; j < (t.length) - 1; j++) {
    t[j]=t[j] / length;
  }
  t[(t.length) - 1]=1.0;
  splineX=new mxSpline1D(t,x);
  splineY=new mxSpline1D(t,y);
}
