{
  final String name=msg.getMessageName();
  if (KEY_TESTS_COUNT.equals(name)) {
    processTestCountInSuite(msg);
  }
 else   if (CUSTOM_STATUS.equals(name)) {
    processCustomStatus(msg);
  }
 else   if (MESSAGE.equals(name)) {
    final Map<String,String> msgAttrs=msg.getAttributes();
    final String text=msgAttrs.get(ATTR_KEY_TEXT);
    if (!StringUtil.isEmpty(text)) {
      final String status=msgAttrs.get(ATTR_KEY_STATUS);
      if (status.equals(ATTR_VALUE_STATUS_ERROR)) {
        final String stackTrace=msgAttrs.get(ATTR_KEY_ERROR_DETAILS);
        fireOnErrorMsg(text,stackTrace);
      }
 else       if (status.equals(ATTR_VALUE_STATUS_WARNING)) {
        fireOnUncapturedOutput(text,ProcessOutputTypes.STDERR);
      }
 else {
        fireOnUncapturedOutput(text,ProcessOutputTypes.STDOUT);
      }
    }
  }
 else   if (TEST_REPORTER_ATTACHED.equals(name)) {
    fireOnTestFrameworkAttached();
  }
 else {
    GeneralToSMTRunnerEventsConvertor.logProblem(LOG,"Unexpected service message:" + name,myTestFrameworkName);
  }
}
