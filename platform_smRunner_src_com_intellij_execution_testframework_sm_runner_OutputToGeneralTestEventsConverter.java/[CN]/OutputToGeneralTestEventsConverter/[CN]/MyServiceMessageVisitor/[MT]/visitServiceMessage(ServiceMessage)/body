{
  final String name=msg.getMessageName();
  if (KEY_TESTS_COUNT.equals(name)) {
    processTestCountInSuite(msg);
  }
 else   if (CUSTOM_STATUS.equals(name)) {
    processCustomStatus(msg);
  }
 else   if (MESSAGE.equals(name)) {
    final Map<String,String> msgAttrs=msg.getAttributes();
    final String text=msgAttrs.get(ATTR_KEY_TEXT);
    if (!StringUtil.isEmpty(text)) {
      fireOnUncapturedOutput(text,ProcessOutputTypes.STDOUT);
    }
  }
 else   if (TEST_REPORTER_ATTACHED.equals(name)) {
    fireOnTestFrameworkAttached();
  }
 else   if (SUITE_TREE_STARTED.equals(name)) {
    fireOnSuiteTreeStarted(msg.getAttributes().get("name"),msg.getAttributes().get(ATTR_KEY_LOCATION_URL));
  }
 else   if (SUITE_TREE_ENDED.equals(name)) {
    fireOnSuiteTreeEnded(msg.getAttributes().get("name"));
  }
 else   if (SUITE_TREE_NODE.equals(name)) {
    fireOnSuiteTreeNodeAdded(msg.getAttributes().get("name"),msg.getAttributes().get(ATTR_KEY_LOCATION_URL));
  }
 else   if (BUILD_TREE_ENDED_NODE.equals(name)) {
    fireOnBuildTreeEnded();
  }
 else   if (ROOT_PRESENTATION.equals(name)) {
    final Map<String,String> attributes=msg.getAttributes();
    fireRootPresentationAdded(attributes.get("name"),attributes.get("comment"),attributes.get("location"));
  }
 else {
    GeneralTestEventsProcessor.logProblem(LOG,"Unexpected service message:" + name,myTestFrameworkName);
  }
}
