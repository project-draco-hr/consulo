{
  if (!(initializer instanceof PsiNewExpression)) {
    return false;
  }
  final PsiNewExpression newExpression=(PsiNewExpression)initializer;
  final PsiJavaCodeReferenceElement classReference=newExpression.getClassReference();
  if (classReference == null) {
    return false;
  }
  final PsiElement target=classReference.resolve();
  if (!(target instanceof PsiClass)) {
    return false;
  }
  final PsiClass aClass=(PsiClass)target;
  final String qualifiedName=aClass.getQualifiedName();
  if (!"java.lang.StringBuilder".equals(qualifiedName) && !"java.lang.StringBuffer".equals(qualifiedName)) {
    return false;
  }
  final PsiExpressionList argumentList=newExpression.getArgumentList();
  if (argumentList == null) {
    return false;
  }
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length == 0) {
    return true;
  }
  final PsiExpression argument=arguments[0];
  final PsiType argumentType=argument.getType();
  return PsiType.INT.equals(argumentType);
}
