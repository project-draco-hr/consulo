{
  super.visitField(field);
  if (!field.hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  final PsiClass containingClass=PsiUtil.getTopLevelClass(field);
  if (!checkVariable(field,containingClass)) {
    return;
  }
  final boolean queried=stringBuilderContentsAreQueried(field,containingClass);
  final boolean updated=stringBuilderContentsAreUpdated(field,containingClass);
  if (queried == updated) {
    return;
  }
  registerFieldError(field,Boolean.valueOf(updated),field.getType());
}
