{
  myFindModel=findModel;
  myProject=project;
  myFilesToScanInitially=filesToScanInitially;
  myDirectory=FindInProjectUtil.getDirectory(findModel);
  myPsiManager=PsiManager.getInstance(project);
  final String moduleName=findModel.getModuleName();
  myModule=moduleName == null ? null : ApplicationManager.getApplication().runReadAction(new Computable<Module>(){
    @Override public Module compute(){
      return ModuleManager.getInstance(project).findModuleByName(moduleName);
    }
  }
);
  myProjectFileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  myFileIndex=myModule == null ? myProjectFileIndex : ModuleRootManager.getInstance(myModule).getFileIndex();
  final Condition<String> patternCondition=FindInProjectUtil.createFileMaskCondition(findModel.getFileFilter());
  myFileMask=new Condition<VirtualFile>(){
    @Override public boolean value(    VirtualFile file){
      return file != null && patternCondition.value(file.getName());
    }
  }
;
  final ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
  myProgress=progress != null ? progress : new EmptyProgressIndicator();
  String stringToFind=myFindModel.getStringToFind();
  if (myFindModel.isRegularExpressions()) {
    stringToFind=FindInProjectUtil.buildStringToFindForIndicesFromRegExp(stringToFind,myProject);
  }
  myStringToFindInIndices=stringToFind;
}
