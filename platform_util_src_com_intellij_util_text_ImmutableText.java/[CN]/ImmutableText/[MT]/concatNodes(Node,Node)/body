{
  final int length=node1.length() + node2.length();
  if (length <= BLOCK_SIZE) {
    return createLeafNode(new MergingCharSequence(node1,node2));
  }
 else {
    Node head=node1;
    Node tail=node2;
    if ((head.length() << 1) < tail.length() && tail instanceof CompositeNode) {
      if (((CompositeNode)tail).head.length() > ((CompositeNode)tail).tail.length()) {
        tail=((CompositeNode)tail).rightRotation();
      }
      head=concatNodes(head,((CompositeNode)tail).head);
      tail=((CompositeNode)tail).tail;
    }
 else     if ((tail.length() << 1) < head.length() && head instanceof CompositeNode) {
      if (((CompositeNode)head).tail.length() > ((CompositeNode)head).head.length()) {
        head=((CompositeNode)head).leftRotation();
      }
      tail=concatNodes(((CompositeNode)head).tail,tail);
      head=((CompositeNode)head).head;
    }
    return new CompositeNode(head,tail);
  }
}
