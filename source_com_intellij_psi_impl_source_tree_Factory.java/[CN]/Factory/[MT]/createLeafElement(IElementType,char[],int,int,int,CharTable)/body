{
  LeafElement element=null;
  if (type instanceof IChameleonElementType) {
    element=new ChameleonElement(type,buffer,startOffset,endOffset,lexerState,table);
  }
 else   if (type instanceof IXmlLeafElementType) {
    if (type == XmlTokenType.XML_REAL_WHITE_SPACE) {
      return new PsiWhiteSpaceImpl(buffer,startOffset,endOffset,lexerState,table);
    }
    element=new XmlTokenImpl(type,buffer,startOffset,endOffset,lexerState,table);
  }
 else   if (type == PLAIN_TEXT) {
    element=new PsiPlainTextImpl(buffer,startOffset,endOffset,lexerState,table);
  }
 else   if (type == WHITE_SPACE) {
    element=new PsiWhiteSpaceImpl(buffer,startOffset,endOffset,lexerState,table);
  }
 else   if (type == C_STYLE_COMMENT || type == END_OF_LINE_COMMENT) {
    element=new PsiCommentImpl(type,buffer,startOffset,endOffset,lexerState,table);
  }
 else   if (type == IDENTIFIER) {
    element=new PsiIdentifierImpl(buffer,startOffset,endOffset,lexerState,table);
  }
 else   if (type == JspTokenType.JSP_COMMENT) {
    element=new JspCommentImpl(buffer,startOffset,endOffset,lexerState,table);
  }
 else {
    if (KEYWORD_BIT_SET.contains(type)) {
      element=new PsiKeywordImpl(type,buffer,startOffset,endOffset,lexerState,table);
    }
 else     if (type instanceof IJavaElementType) {
      element=new PsiJavaTokenImpl(type,buffer,startOffset,endOffset,lexerState,table);
    }
 else     if (type instanceof IJspElementType) {
      element=new XmlTokenImpl(type,buffer,startOffset,endOffset,lexerState,table);
    }
 else     if (type instanceof IJavaDocElementType) {
      element=new PsiDocTokenImpl(type,buffer,startOffset,endOffset,lexerState,table);
    }
 else {
      for (int size=ourElementFactories.size(), i=0; i < size; i++) {
        TreeElementFactory elementFactory=ourElementFactories.get(i);
        if (elementFactory.isMyElementType(type)) {
          element=elementFactory.createLeafElement(type,buffer,startOffset,endOffset,lexerState,table);
        }
      }
      if (element == null) {
        element=new LeafPsiElement(type,buffer,startOffset,endOffset,lexerState,table);
      }
    }
  }
  LOG.assertTrue(element.getElementType() == type);
  return element;
}
