{
  final Project project=editor.getProject();
  final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  final Document document=editor.getDocument();
  final PsiFile file=documentManager.getPsiFile(document);
  final CaretModel caretModel=editor.getCaretModel();
  final int caretColumn=caretModel.getLogicalPosition().column;
  final int caretLine=caretModel.getLogicalPosition().line;
  final LineRange lineRange=getRangeToMove(editor,file);
  final int startLine=lineRange.startLine;
  final int endLine=lineRange.endLine;
  final int insertOffset=calcInsertOffset(editor,startLine,endLine);
  final int start=editor.logicalPositionToOffset(new LogicalPosition(startLine,0));
  final int end=editor.logicalPositionToOffset(new LogicalPosition(endLine + 1,0));
  final String toInsert=document.getCharsSequence().subSequence(start,end).toString();
  final int insStart=isDown ? insertOffset - toInsert.length() : insertOffset;
  final int insEnd=insStart + toInsert.length();
  final SelectionModel selectionModel=editor.getSelectionModel();
  final int selectionStart=selectionModel.getSelectionStart();
  final int selectionEnd=selectionModel.getSelectionEnd();
  final boolean hasSelection=selectionModel.hasSelection();
  caretModel.moveToOffset(0);
  document.deleteString(start,end);
  document.insertString(insStart,toInsert);
  documentManager.commitDocument(document);
  if (hasSelection) {
    restoreSelection(editor,selectionStart,selectionEnd,start,insStart);
  }
  try {
    final CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(project);
    final int line1=editor.offsetToLogicalPosition(insStart).line;
    final int line2=editor.offsetToLogicalPosition(insEnd).line;
    caretModel.moveToLogicalPosition(new LogicalPosition(line1,caretColumn));
    for (int line=line1; line <= line2; line++) {
      int lineStart=document.getLineStartOffset(line);
      codeStyleManager.adjustLineIndent(file,lineStart);
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
}
