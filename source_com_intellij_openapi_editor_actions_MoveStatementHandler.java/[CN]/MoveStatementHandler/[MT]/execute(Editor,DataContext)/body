{
  final Project project=editor.getProject();
  final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  final Document document=editor.getDocument();
  final PsiFile file=documentManager.getPsiFile(document);
  final CaretModel caretModel=editor.getCaretModel();
  final int caretColumn=caretModel.getLogicalPosition().column;
  final int caretLine=caretModel.getLogicalPosition().line;
  final LineRange lineRange=getRangeToMove(editor,file);
  final int startLine=lineRange.startLine;
  final int endLine=lineRange.endLine;
  final int insertOffset=editor.logicalPositionToOffset(new LogicalPosition(isDown ? endLine + 2 : startLine - 1,0));
  final int start=editor.logicalPositionToOffset(new LogicalPosition(startLine,0));
  final int end=editor.logicalPositionToOffset(new LogicalPosition(endLine + 1,0));
  final String toInsert=document.getCharsSequence().subSequence(start,end).toString();
  final int insStart=isDown ? insertOffset - toInsert.length() : insertOffset;
  final int insEnd=isDown ? insertOffset : insertOffset + toInsert.length();
  final SelectionModel selectionModel=editor.getSelectionModel();
  final int selectionStart=selectionModel.getSelectionStart();
  final int selectionEnd=selectionModel.getSelectionEnd();
  final boolean hasSelection=selectionModel.hasSelection();
  final PsiElement guard=PsiTreeUtil.getParentOfType(file.findElementAt(caretModel.getOffset()),new Class[]{PsiMethod.class,PsiClassInitializer.class,PsiClass.class});
  if (guard != null && !guard.getTextRange().contains(insertOffset))   return;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      document.deleteString(start,end);
      document.insertString(insStart,toInsert);
      documentManager.commitDocument(document);
      caretModel.moveToLogicalPosition(new LogicalPosition(caretLine + (isDown ? 1 : -1),caretColumn));
      if (hasSelection) {
        restoreSelection(editor,selectionStart,selectionEnd,start,insStart);
      }
      try {
        CodeStyleManager.getInstance(project).reformatRange(file,insStart,insEnd);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
);
}
