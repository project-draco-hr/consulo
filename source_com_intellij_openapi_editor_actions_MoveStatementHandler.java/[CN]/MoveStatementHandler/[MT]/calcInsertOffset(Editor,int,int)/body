{
  int line=isDown ? endLine + 2 : startLine - 1;
  final PsiFile file=PsiDocumentManager.getInstance(editor.getProject()).getPsiFile(editor.getDocument());
  if (!(file instanceof PsiJavaFile)) {
    return editor.logicalPositionToOffset(new LogicalPosition(line,0));
  }
  while (true) {
    final int offset=editor.logicalPositionToOffset(new LogicalPosition(line,0));
    PsiElement element=file.findElementAt(offset);
    if (element instanceof PsiWhiteSpace) {
      element=element.getNextSibling();
    }
    while (true) {
      if (element == null)       break;
      if ((element instanceof PsiStatement || element instanceof PsiComment) && element.getParent() instanceof PsiCodeBlock) {
        return offset;
      }
      if (element instanceof PsiJavaToken && ((PsiJavaToken)element).getTokenType() == JavaTokenType.RBRACE && element.getParent() instanceof PsiCodeBlock) {
        return offset;
      }
      element=element.getParent();
      if (!isDown && element.getTextOffset() < offset)       break;
      if (isDown && element.getTextRange().getEndOffset() >= editor.logicalPositionToOffset(new LogicalPosition(line + 1,0)))       break;
    }
    line+=isDown ? 1 : -1;
    if (line == 0 || line >= editor.getDocument().getLineCount()) {
      return 0;
    }
  }
}
