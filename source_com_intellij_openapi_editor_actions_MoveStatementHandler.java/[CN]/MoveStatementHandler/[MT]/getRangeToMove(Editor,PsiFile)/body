{
  final SelectionModel selectionModel=editor.getSelectionModel();
  final int startLine;
  final int endLine;
  LineRange result;
  if (selectionModel.hasSelection()) {
    startLine=editor.offsetToLogicalPosition(selectionModel.getSelectionStart()).line;
    final LogicalPosition endPos=editor.offsetToLogicalPosition(selectionModel.getSelectionEnd());
    endLine=endPos.column == 0 ? endPos.line - 1 : endPos.line;
    result=new LineRange(startLine,endLine);
  }
 else {
    startLine=editor.getCaretModel().getLogicalPosition().line;
    endLine=startLine;
    result=new LineRange(startLine,endLine);
  }
  if (file instanceof PsiJavaFile) {
    result=expandLineRangeToStatement(result,editor,file);
  }
  final int maxLine=editor.offsetToLogicalPosition(editor.getDocument().getTextLength()).line;
  if (result.startLine <= 1 && !isDown)   return null;
  if (result.endLine >= maxLine - 1 && isDown)   return null;
  return result;
}
