{
  final PsiLambdaExpression lambdaExpression=PsiTreeUtil.getParentOfType(element,PsiLambdaExpression.class);
  if (lambdaExpression != null) {
    PsiParameter[] parameters=lambdaExpression.getParameterList().getParameters();
    if (parameters.length == 0)     return false;
    for (    PsiParameter parameter : parameters) {
      if (parameter.getTypeElement() != null) {
        return false;
      }
    }
    if (PsiTreeUtil.isAncestor(lambdaExpression.getParameterList(),element,false)) {
      final PsiType functionalInterfaceType=lambdaExpression.getFunctionalInterfaceType();
      if (functionalInterfaceType != null && LambdaUtil.getFunctionalInterfaceMethod(functionalInterfaceType) != null && LambdaUtil.isLambdaFullyInferred(lambdaExpression,functionalInterfaceType)) {
        myInferredTypesText=getInferredTypes(functionalInterfaceType,lambdaExpression);
        return myInferredTypesText != null;
      }
    }
  }
  return false;
}
