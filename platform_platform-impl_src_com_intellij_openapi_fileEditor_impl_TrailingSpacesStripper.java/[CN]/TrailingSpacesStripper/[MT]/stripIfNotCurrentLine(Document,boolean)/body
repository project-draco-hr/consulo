{
  if (document instanceof DocumentWindow) {
    document=((DocumentWindow)document).getDelegate();
  }
  if (!(document instanceof DocumentImpl)) {
    return true;
  }
  DataContext dataContext=DataManager.getInstance().getDataContext(IdeFocusManager.getGlobalInstance().getFocusOwner());
  boolean isDisposeInProgress=ApplicationManager.getApplication().isDisposeInProgress();
  Editor activeEditor=isDisposeInProgress ? null : CommonDataKeys.EDITOR.getData(dataContext);
  boolean isVirtualSpaceEnabled=activeEditor == null || activeEditor.getSettings().isVirtualSpace();
  boolean markAsNeedsStrippingLater;
  if (activeEditor != null && activeEditor.getCaretModel().supportsMultipleCarets()) {
    List<Caret> carets=activeEditor.getCaretModel().getAllCarets();
    List<VisualPosition> visualCarets=new ArrayList<VisualPosition>(carets.size());
    List<Integer> caretOffsets=new ArrayList<Integer>(carets.size());
    for (    Caret caret : carets) {
      visualCarets.add(caret.getVisualPosition());
      caretOffsets.add(caret.getOffset());
    }
    markAsNeedsStrippingLater=((DocumentImpl)document).stripTrailingSpaces(activeEditor.getProject(),inChangedLinesOnly,isVirtualSpaceEnabled,caretOffsets);
    if (!ShutDownTracker.isShutdownHookRunning()) {
      final Iterator<VisualPosition> visualCaretIterator=visualCarets.iterator();
      activeEditor.getCaretModel().runForEachCaret(new CaretAction(){
        @Override public void perform(        Caret caret){
          if (visualCaretIterator.hasNext()) {
            caret.moveToVisualPosition(visualCaretIterator.next());
          }
        }
      }
);
    }
  }
 else {
    VisualPosition visualCaret=activeEditor == null ? null : activeEditor.getCaretModel().getVisualPosition();
    int caretLine=activeEditor == null ? -1 : activeEditor.getCaretModel().getLogicalPosition().line;
    int caretOffset=activeEditor == null ? -1 : activeEditor.getCaretModel().getOffset();
    final Project project=activeEditor == null ? null : activeEditor.getProject();
    markAsNeedsStrippingLater=((DocumentImpl)document).stripTrailingSpaces(project,inChangedLinesOnly,isVirtualSpaceEnabled,caretLine,caretOffset);
    if (!ShutDownTracker.isShutdownHookRunning() && activeEditor != null) {
      activeEditor.getCaretModel().moveToVisualPosition(visualCaret);
    }
  }
  return !markAsNeedsStrippingLater;
}
