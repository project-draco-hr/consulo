{
  if (document instanceof DocumentWindow) {
    document=((DocumentWindow)document).getDelegate();
  }
  if (!(document instanceof DocumentImpl)) {
    return true;
  }
  DataContext dataContext=DataManager.getInstance().getDataContext(IdeFocusManager.getGlobalInstance().getFocusOwner());
  Editor activeEditor=PlatformDataKeys.EDITOR.getData(dataContext);
  boolean isVirtualSpaceEnabled=activeEditor == null || activeEditor.getSettings().isVirtualSpace();
  VisualPosition visualCaret=activeEditor == null ? null : activeEditor.getCaretModel().getVisualPosition();
  int caretLine=activeEditor == null ? -1 : activeEditor.getCaretModel().getLogicalPosition().line;
  int caretOffset=activeEditor == null ? -1 : activeEditor.getCaretModel().getOffset();
  final Project project=activeEditor == null ? null : activeEditor.getProject();
  boolean markAsNeedsStrippingLater=((DocumentImpl)document).stripTrailingSpaces(project,inChangedLinesOnly,isVirtualSpaceEnabled,caretLine,caretOffset);
  if (!ShutDownTracker.isShutdownHookRunning() && activeEditor != null) {
    activeEditor.getCaretModel().moveToVisualPosition(visualCaret);
  }
  return !markAsNeedsStrippingLater;
}
