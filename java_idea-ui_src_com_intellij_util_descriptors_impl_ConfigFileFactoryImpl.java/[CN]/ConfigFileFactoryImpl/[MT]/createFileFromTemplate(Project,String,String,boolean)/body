{
  final LocalFileSystem fileSystem=LocalFileSystem.getInstance();
  final File file=new File(VfsUtil.urlToPath(url));
  final VirtualFile existingFile=fileSystem.refreshAndFindFileByIoFile(file);
  if (existingFile != null && !forceNew) {
    return existingFile;
  }
  try {
    String text=getText(templateName);
    final VirtualFile childData;
    if (existingFile == null || existingFile.isDirectory()) {
      final VirtualFile virtualFile;
      if (!FileUtil.createParentDirs(file) || (virtualFile=fileSystem.refreshAndFindFileByIoFile(file.getParentFile())) == null) {
        throw new IOException(IdeBundle.message("error.message.unable.to.create.file",file.getPath()));
      }
      childData=virtualFile.createChildData(this,file.getName());
    }
 else {
      childData=existingFile;
    }
    FileContentUtil.setFileText(project,childData,text);
    return childData;
  }
 catch (  final IOException e) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        Messages.showErrorDialog(IdeBundle.message("message.text.error.creating.deployment.descriptor",e.getLocalizedMessage()),IdeBundle.message("message.text.creating.deployment.descriptor"));
      }
    }
);
  }
  return null;
}
