{
  super(new GridBagLayout());
  myProject=project;
  myNotificationArea=area;
  myInstallButton=new JButton("Install");
  myUninstallButton=new JButton("Uninstall");
  myUpgradeButton=new JButton("Upgrade");
  myInstallButton.setMnemonic('I');
  myUninstallButton.setMnemonic('U');
  myUpgradeButton.setMnemonic('p');
  myInstallButton.setEnabled(false);
  myUninstallButton.setEnabled(false);
  myUpgradeButton.setEnabled(false);
  myPackagesTableModel=new DefaultTableModel(new String[]{"Package","Version","Latest"},0){
    @Override public boolean isCellEditable(    int i,    int i1){
      return false;
    }
  }
;
  final TableCellRenderer tableCellRenderer=new MyTableCellRenderer();
  myPackagesTable=new JBTable(myPackagesTableModel){
    @Override public TableCellRenderer getCellRenderer(    int row,    int column){
      return tableCellRenderer;
    }
  }
;
  myPackagesTable.getTableHeader().setReorderingAllowed(false);
  Insets anInsets=new Insets(2,2,2,2);
  JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(myPackagesTable,ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
  scrollPane.setPreferredSize(new Dimension(500,500));
  add(scrollPane,new GridBagConstraints(0,0,1,3,1.0,1.0,GridBagConstraints.CENTER,GridBagConstraints.BOTH,anInsets,0,0));
  addUninstallAction();
  addUpgradeAction();
  add(myInstallButton,new GridBagConstraints(1,0,1,1,0.0,0.0,GridBagConstraints.CENTER,GridBagConstraints.HORIZONTAL,anInsets,0,0));
  add(myUninstallButton,new GridBagConstraints(1,1,1,1,0.0,0.0,GridBagConstraints.CENTER,GridBagConstraints.HORIZONTAL,anInsets,0,0));
  add(myUpgradeButton,new GridBagConstraints(1,2,1,1,0.0,1.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,anInsets,0,0));
  myPackagesTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent event){
      updateUninstallUpgrade();
    }
  }
);
  myInstallButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (myPackageManagementService != null) {
        ManagePackagesDialog dialog=createManagePackagesDialog();
        dialog.show();
      }
    }
  }
);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      if (myPackageManagementService != null && myInstallButton.isEnabled()) {
        ManagePackagesDialog dialog=createManagePackagesDialog();
        Point p=e.getPoint();
        int row=myPackagesTable.rowAtPoint(p);
        int column=myPackagesTable.columnAtPoint(p);
        if (row >= 0 && column >= 0) {
          Object pkg=myPackagesTable.getValueAt(row,0);
          if (pkg instanceof InstalledPackage) {
            dialog.selectPackage((InstalledPackage)pkg);
          }
        }
        dialog.show();
        return true;
      }
      return false;
    }
  }
.installOn(myPackagesTable);
}
