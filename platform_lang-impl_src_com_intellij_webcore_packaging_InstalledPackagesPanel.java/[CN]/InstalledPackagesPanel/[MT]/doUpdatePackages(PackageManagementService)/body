{
  myPackagesTable.setPaintBusy(true);
  final Application application=ApplicationManager.getApplication();
  application.executeOnPooledThread(new Runnable(){
    @Override public void run(){
      Collection<InstalledPackage> packages=Lists.newArrayList();
      if (packageManagementService != null) {
        try {
          packages=packageManagementService.getInstalledPackages();
        }
 catch (        IOException e) {
        }
 finally {
          final Collection<InstalledPackage> finalPackages=packages;
          final Map<String,RepoPackage> cache=buildNameToPackageMap(packageManagementService.getAllPackagesCached());
          if (cache.isEmpty()) {
            refreshLatestVersions();
          }
          application.invokeLater(new Runnable(){
            @Override public void run(){
              if (packageManagementService == myPackageManagementService) {
                myPackagesTableModel.getDataVector().clear();
                for (                InstalledPackage pkg : finalPackages) {
                  RepoPackage repoPackage=cache.get(pkg.getName());
                  final String version=repoPackage != null ? repoPackage.getLatestVersion() : null;
                  myPackagesTableModel.addRow(new Object[]{pkg,pkg.getVersion(),version == null ? "" : version});
                }
                if (!cache.isEmpty()) {
                  myPackagesTable.setPaintBusy(false);
                }
              }
            }
          }
,ModalityState.any());
        }
      }
    }
  }
);
}
