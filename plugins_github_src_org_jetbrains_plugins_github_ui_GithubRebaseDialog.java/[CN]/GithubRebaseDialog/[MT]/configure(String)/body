{
  setTitle("Rebase GitHub");
  myShowRemoteBranchesCheckBox.setSelected(true);
  myShowRemoteBranchesCheckBox.getParent().remove(myShowRemoteBranchesCheckBox);
  myGitRootComboBox.setEnabled(false);
  myLocalBranches.clear();
  final String originName=parent.substring(0,parent.lastIndexOf('/'));
  final ArrayList<GitBranch> remoteCopy=new ArrayList<GitBranch>();
  remoteCopy.addAll(myRemoteBranches);
  myRemoteBranches.clear();
  final String filter="/" + originName + "/";
  for (  GitBranch branch : remoteCopy) {
    if (branch.getFullName().contains(filter)) {
      myRemoteBranches.add(branch);
    }
  }
  updateOntoFrom();
  final String preselected="/" + originName + "/master";
  for (  GitBranch remoteBranch : myRemoteBranches) {
    final String branchFullName=remoteBranch.getFullName();
    if (branchFullName.endsWith(preselected)) {
      myOntoComboBox.setSelectedItem(remoteBranch);
      GitUIUtil.getTextField(myOntoComboBox).setText(branchFullName);
      break;
    }
  }
}
