{
  while (relativeName.length() != 0 && relativeName.charAt(0) == '/') {
    relativeName=relativeName.substring(1);
  }
  boolean isDir=file.isDirectory();
  if (isDir && !StringUtil.endsWithChar(relativeName,'/')) {
    relativeName+="/";
  }
  if (fileFilter != null && !FileUtil.isFilePathAcceptable(file,fileFilter))   return false;
  if (writtenItemRelativePaths != null && !writtenItemRelativePaths.add(relativeName))   return false;
  if (LOG.isDebugEnabled()) {
    LOG.debug("Add " + file + " as "+ relativeName);
  }
  long size=isDir ? 0 : file.length();
  ZipEntry e=new ZipEntry(relativeName);
  e.setTime(file.lastModified());
  if (size == 0) {
    e.setMethod(ZipEntry.STORED);
    e.setSize(0);
    e.setCrc(0);
  }
  zos.putNextEntry(e);
  if (!isDir) {
    InputStream is=contentProcessor.getContent(file);
    try {
      FileUtil.copy(is,zos);
    }
  finally {
      is.close();
    }
  }
  zos.closeEntry();
  return true;
}
