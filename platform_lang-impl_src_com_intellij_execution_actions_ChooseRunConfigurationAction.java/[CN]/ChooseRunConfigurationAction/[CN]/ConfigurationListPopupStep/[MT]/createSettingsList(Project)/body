{
  final RunManagerEx manager=RunManagerEx.getInstanceEx(project);
  final List<ItemWrapper> result=new ArrayList<ItemWrapper>();
  final RunnerAndConfigurationSettingsImpl selectedConfiguration=manager.getSelectedConfiguration();
  final List<RunnerAndConfigurationSettingsImpl> existing=new ArrayList<RunnerAndConfigurationSettingsImpl>();
  final List<ItemWrapper> wrappedExisting=new ArrayList<ItemWrapper>();
  final ConfigurationType[] factories=manager.getConfigurationFactories();
  for (  final ConfigurationType factory : factories) {
    final RunnerAndConfigurationSettingsImpl[] configurations=manager.getConfigurationSettings(factory);
    for (    final RunnerAndConfigurationSettingsImpl configuration : configurations) {
      existing.add(configuration);
      final ItemWrapper wrapped=ItemWrapper.wrap(project,configuration);
      if (configuration == selectedConfiguration) {
        wrapped.setMnemonic(1);
      }
      wrappedExisting.add(wrapped);
    }
  }
  populateWithDynamicRunners(result,existing,project,manager,selectedConfiguration);
  result.addAll(wrappedExisting);
  final ItemWrapper edit=new ItemWrapper(null){
    @Override public Icon getIcon(){
      return EDIT_ICON;
    }
    @Override public String getText(){
      return "Edit configurations...";
    }
    @Override public void perform(    @NotNull final Project project,    @NotNull final Executor executor,    @NotNull DataContext context){
      final EditConfigurationsDialog dialog=new EditConfigurationsDialog(project){
        @Override protected void init(){
          setOKButtonText(executor.getStartActionText());
          setOKButtonIcon(executor.getIcon());
          super.init();
        }
      }
;
      dialog.show();
      if (dialog.isOK()) {
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            final RunnerAndConfigurationSettings configuration=RunManager.getInstance(project).getSelectedConfiguration();
            if (configuration instanceof RunnerAndConfigurationSettingsImpl) {
              if (canRun(executor,(RunnerAndConfigurationSettingsImpl)configuration)) {
                ExecutionUtil.executeConfiguration(project,(RunnerAndConfigurationSettingsImpl)configuration,executor,DataManager.getInstance().getDataContext());
              }
            }
          }
        }
);
      }
    }
    @Override public boolean available(    Executor executor){
      return true;
    }
  }
;
  edit.setMnemonic(0);
  result.add(0,edit);
  return result.toArray(new ItemWrapper[result.size()]);
}
