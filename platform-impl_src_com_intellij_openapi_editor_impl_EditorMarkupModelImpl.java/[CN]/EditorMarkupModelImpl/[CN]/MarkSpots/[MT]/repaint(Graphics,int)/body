{
  recalcMarkSpots();
  for (int i=0; i < mySpots.size(); i++) {
    MarkSpot markSpot=mySpots.get(i);
    int yStart=markSpot.yStart;
    RangeHighlighter mark=markSpot.highlighters[markSpot.highlighters.length - 1];
    int yEnd=markSpot.yEnd;
    final Color color=mark.getErrorStripeMarkColor();
    int x=1;
    int paintWidth=width;
    if (mark.isThinErrorStripeMark()) {
      paintWidth/=2;
      x+=paintWidth / 2;
    }
    g.setColor(color);
    g.fillRect(x + 1,yStart,paintWidth - 2,yEnd - yStart);
    Color brighter=color.brighter();
    Color darker=color.darker();
    g.setColor(brighter);
    UIUtil.drawLine(g,x,yStart,x,yEnd - 1);
    if (i == 0 || !isAdjacent(mySpots.get(i - 1),markSpot) || wider(markSpot,mySpots.get(i - 1))) {
      UIUtil.drawLine(g,x + 1,yStart,x + paintWidth - 2,yStart);
    }
    g.setColor(darker);
    if (i == mySpots.size() - 1 || !isAdjacent(markSpot,mySpots.get(i + 1)) || wider(markSpot,mySpots.get(i + 1))) {
      UIUtil.drawLine(g,x + 1,yEnd - 1,x + paintWidth - 2,yEnd - 1);
    }
    UIUtil.drawLine(g,x + paintWidth - 2,yStart,x + paintWidth - 2,yEnd - 1);
  }
}
