{
  final PsiForeachStatement statement=(PsiForeachStatement)element.getParent();
  if (statement == null) {
    return;
  }
  final Project project=statement.getProject();
  final JavaCodeStyleManager codeStyleManager=JavaCodeStyleManager.getInstance(project);
  final PsiExpression iteratedValue=statement.getIteratedValue();
  if (iteratedValue == null) {
    return;
  }
  final PsiType type=iteratedValue.getType();
  final PsiType iteratedValueParameterType;
  if (type instanceof PsiClassType) {
    final PsiClassType classType=(PsiClassType)type;
    final PsiType[] parameterTypes=classType.getParameters();
    if (parameterTypes.length == 0) {
      iteratedValueParameterType=null;
    }
 else {
      iteratedValueParameterType=parameterTypes[0];
    }
  }
 else {
    iteratedValueParameterType=null;
  }
  @NonNls final StringBuilder newStatement=new StringBuilder();
  final PsiParameter iterationParameter=statement.getIterationParameter();
  final PsiType parameterType=iterationParameter.getType();
  final String iterator=codeStyleManager.suggestUniqueVariableName("it",statement,true);
  final String typeText=parameterType.getCanonicalText();
  newStatement.append("for(java.util.Iterator");
  if (iteratedValueParameterType == null) {
    newStatement.append(' ');
  }
 else {
    newStatement.append('<');
    newStatement.append(iteratedValueParameterType.getCanonicalText());
    newStatement.append("> ");
  }
  newStatement.append(iterator);
  newStatement.append(" = ");
  newStatement.append(iteratedValue.getText());
  newStatement.append(".iterator();");
  newStatement.append(iterator);
  newStatement.append(".hasNext();) {");
  newStatement.append(typeText);
  newStatement.append(' ');
  newStatement.append(iterationParameter.getName());
  newStatement.append(" = ");
  if (iteratedValueParameterType == null && !"java.lang.Object".equals(typeText)) {
    newStatement.append('(');
    newStatement.append(typeText);
    newStatement.append(')');
  }
  newStatement.append(iterator);
  newStatement.append(".next();");
  final PsiStatement body=statement.getBody();
  if (body == null) {
    return;
  }
  if (body instanceof PsiBlockStatement) {
    final PsiCodeBlock block=((PsiBlockStatement)body).getCodeBlock();
    final PsiElement[] children=block.getChildren();
    for (int i=1; i < children.length - 1; i++) {
      newStatement.append(children[i].getText());
    }
  }
 else {
    newStatement.append(body.getText());
  }
  newStatement.append('}');
  replaceStatementAndShorten(newStatement.toString(),statement);
}
