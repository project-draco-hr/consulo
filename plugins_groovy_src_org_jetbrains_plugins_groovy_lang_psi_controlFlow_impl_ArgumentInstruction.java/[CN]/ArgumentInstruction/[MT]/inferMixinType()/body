{
  PsiElement element=getElement();
  LOG.assertTrue(element instanceof GrReferenceExpression);
  PsiElement parent=element.getParent().getParent();
  LOG.assertTrue(parent instanceof GrCall,"elemText: " + element.getText() + "\nParent = "+ (element.getParent() == null ? "null" : element.getParent().getClass())+ "\nPParent"+ (parent == null ? "null" : parent.getClass()));
  GrCall call=(GrCall)parent;
  int index=ArrayUtil.indexOf(call.getExpressionArguments(),element);
  if (call.getNamedArguments().length > 0)   index++;
  GroovyResolveResult[] variants=call.getCallVariants((GrReferenceExpression)element);
  PsiType result=null;
  for (  GroovyResolveResult variant : variants) {
    GrClosureSignature signature=createSignature(variant);
    if (signature == null)     continue;
    if (GrClosureSignatureUtil.mapParametersToArguments(signature,call) != null && !haveNullParameters(call)) {
      return null;
    }
    GrClosureParameter[] parameters=signature.getParameters();
    if (index >= parameters.length)     continue;
    result=TypesUtil.getLeastUpperBoundNullable(result,parameters[index].getType(),element.getManager());
  }
  return result;
}
