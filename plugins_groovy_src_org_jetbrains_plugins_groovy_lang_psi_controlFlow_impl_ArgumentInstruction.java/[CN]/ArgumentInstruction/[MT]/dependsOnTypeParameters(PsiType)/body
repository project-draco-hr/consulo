{
  return result.accept(new PsiTypeVisitor<Boolean>(){
    @Nullable @Override public Boolean visitClassType(    PsiClassType classType){
      if (classType.resolve() instanceof PsiTypeParameter) {
        return true;
      }
      for (      PsiType type : classType.getParameters()) {
        if (type.accept(this)) {
          return true;
        }
      }
      return false;
    }
    @Nullable @Override public Boolean visitArrayType(    PsiArrayType arrayType){
      return arrayType.getComponentType().accept(this);
    }
    @Nullable @Override public Boolean visitWildcardType(    PsiWildcardType wildcardType){
      PsiType bound=wildcardType.getBound();
      return bound != null && bound.accept(this);
    }
    @Nullable @Override public Boolean visitType(    PsiType type){
      return false;
    }
  }
);
}
