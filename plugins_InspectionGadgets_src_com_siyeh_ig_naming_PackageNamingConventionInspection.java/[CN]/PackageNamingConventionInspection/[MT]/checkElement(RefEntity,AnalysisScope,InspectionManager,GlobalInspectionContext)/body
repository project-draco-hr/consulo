{
  if (!(refEntity instanceof RefPackage)) {
    return null;
  }
  final String name=refEntity.getName();
  if (name == null) {
    return null;
  }
  final int length=name.length();
  if (length < m_minLength) {
    final String errorString=InspectionGadgetsBundle.message("package.naming.convention.problem.descriptor.short",name);
    return new CommonProblemDescriptor[]{inspectionManager.createProblemDescriptor(errorString)};
  }
  if (length > m_maxLength) {
    final String errorString=InspectionGadgetsBundle.message("package.naming.convention.problem.descriptor.long",name);
    return new CommonProblemDescriptor[]{inspectionManager.createProblemDescriptor(errorString)};
  }
  final Matcher matcher=m_regexPattern.matcher(name);
  if (matcher.matches()) {
    return null;
  }
 else {
    final String errorString=InspectionGadgetsBundle.message("package.naming.convention.problem.descriptor.regex.mismatch",name,m_regex);
    return new CommonProblemDescriptor[]{inspectionManager.createProblemDescriptor(errorString)};
  }
}
