{
  final Project project=getProject();
  final PsiDirectory psiDirectory=getValue();
  final VirtualFile directoryFile=psiDirectory.getVirtualFile();
  final String name=getParentValue() instanceof Project ? psiDirectory.getVirtualFile().getPresentableUrl() : ProjectViewDirectoryHelper.getInstance(psiDirectory.getProject()).getNodeName(getSettings(),getParentValue(),psiDirectory);
  if (name == null) {
    setValue(null);
    return;
  }
  final VirtualFile virtualFile=psiDirectory.getVirtualFile();
  final boolean isWritable=virtualFile.isWritable();
  data.setPresentableText(name);
  if (ProjectRootsUtil.isModuleContentRoot(directoryFile,project) || ProjectRootsUtil.isLibraryRoot(directoryFile,project)) {
    data.setLocationString(directoryFile.getPresentableUrl());
  }
 else {
    if (!ProjectRootsUtil.isInTestSource(directoryFile,project)) {
      data.setLocationString(ProjectViewDirectoryHelper.getInstance(project).getLocationString(psiDirectory,false));
    }
  }
  for (  final IconProvider provider : ApplicationManager.getApplication().getComponents(IconProvider.class)) {
    final Icon openIcon=provider.getIcon(psiDirectory,Iconable.ICON_FLAG_OPEN);
    if (openIcon != null) {
      final Icon closedIcon=provider.getIcon(psiDirectory,Iconable.ICON_FLAG_CLOSED);
      if (closedIcon != null) {
        data.setOpenIcon(addReadMark(openIcon,isWritable));
        data.setClosedIcon(addReadMark(closedIcon,isWritable));
        return;
      }
    }
  }
}
