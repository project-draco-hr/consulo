{
  myLogDataHolder=logDataHolder;
  myUI=vcsLogUI;
  myProject=project;
  myUiProperties=uiProperties;
  myLog=log;
  myFilterUi=new VcsLogClassicFilterUi(myUI,logDataHolder,uiProperties,initialDataPack);
  myGraphTable=new VcsLogGraphTable(vcsLogUI,logDataHolder,initialDataPack);
  myBranchesPanel=new BranchesPanel(logDataHolder,vcsLogUI,initialDataPack.getRefsModel());
  myBranchesPanel.setVisible(settings.isShowBranchesPanel());
  myDetailsPanel=new DetailsPanel(logDataHolder,myGraphTable,vcsLogUI.getColorManager(),initialDataPack);
  myChangesBrowser=new RepositoryChangesBrowser(project,null,Collections.<Change>emptyList(),null);
  myChangesBrowser.getDiffAction().registerCustomShortcutSet(CommonShortcuts.getDiff(),getGraphTable());
  myChangesBrowser.getEditSourceAction().registerCustomShortcutSet(CommonShortcuts.getEditSource(),getGraphTable());
  setDefaultEmptyText(myChangesBrowser);
  myChangesLoadingPane=new JBLoadingPanel(new BorderLayout(),project);
  myChangesLoadingPane.add(myChangesBrowser);
  final CommitSelectionListener selectionChangeListener=new CommitSelectionListener(myChangesBrowser);
  myGraphTable.getSelectionModel().addListSelectionListener(selectionChangeListener);
  myGraphTable.getSelectionModel().addListSelectionListener(myDetailsPanel);
  updateWhenDetailsAreLoaded(selectionChangeListener);
  myToolbar=createActionsToolbar();
  myDetailsSplitter=new Splitter(true,0.7f);
  myDetailsSplitter.setFirstComponent(setupScrolledGraph());
  setupDetailsSplitter(myUiProperties.isShowDetails());
  JComponent toolbars=new JPanel(new BorderLayout());
  toolbars.add(myToolbar,BorderLayout.NORTH);
  toolbars.add(myBranchesPanel,BorderLayout.CENTER);
  JComponent toolbarsAndTable=new JPanel(new BorderLayout());
  toolbarsAndTable.add(toolbars,BorderLayout.NORTH);
  toolbarsAndTable.add(myDetailsSplitter,BorderLayout.CENTER);
  final Splitter changesBrowserSplitter=new Splitter(false,0.7f);
  changesBrowserSplitter.setFirstComponent(toolbarsAndTable);
  changesBrowserSplitter.setSecondComponent(myChangesLoadingPane);
  setLayout(new BorderLayout());
  add(changesBrowserSplitter);
  Disposer.register(vcsLogUI,new Disposable(){
    @Override public void dispose(){
      myDetailsSplitter.dispose();
      changesBrowserSplitter.dispose();
    }
  }
);
  myGraphTable.resetDefaultFocusTraversalKeys();
  setFocusTraversalPolicyProvider(true);
  setFocusTraversalPolicy(new MyFocusPolicy());
}
