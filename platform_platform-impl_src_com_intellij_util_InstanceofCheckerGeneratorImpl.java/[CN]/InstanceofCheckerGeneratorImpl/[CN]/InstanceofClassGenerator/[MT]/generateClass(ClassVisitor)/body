{
  ClassEmitter cv=new ClassEmitter(classVisitor);
  cv.visit(Constants.V1_2,Modifier.PUBLIC,"com/intellij/util/InstanceofChecker$$$$$" + myCheckedClass.getName().replace('.','$'),toInternalName(Object.class),new String[]{toInternalName(Condition.class)},Constants.SOURCE_FILE);
  final Signature signature=new Signature("<init>","()V");
  final CodeEmitter cons=cv.begin_method(Modifier.PUBLIC,signature,new Type[0],null);
  cons.load_this();
  cons.dup();
  cons.super_invoke_constructor(signature);
  cons.return_value();
  cons.end_method();
  final CodeEmitter e=cv.begin_method(Modifier.PUBLIC,new Signature("value","(L" + toInternalName(Object.class) + ";)Z"),new Type[0],null);
  e.load_arg(0);
  e.instance_of(Type.getType(myCheckedClass));
  Label fail=e.make_label();
  e.if_jump(CodeEmitter.EQ,fail);
  e.push(true);
  e.return_value();
  e.mark(fail);
  e.push(false);
  e.return_value();
  e.end_method();
  cv.visitEnd();
}
