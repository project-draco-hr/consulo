{
  final GrMethodStub stub=getStub();
  if (stub != null) {
    Map<String,GroovyNamedArgumentProvider.ArgumentDescriptor> result=Maps.newHashMap();
    for (    String parameter : stub.getNamedParameters()) {
      result.put(parameter,GroovyNamedArgumentProvider.TYPE_ANY);
    }
    return result;
  }
  GrOpenBlock body=getBlock();
  if (body == null)   return Collections.emptyMap();
  GrParameter[] parameters=getParameters();
  if (parameters.length == 0)   return Collections.emptyMap();
  GrParameter firstParameter=parameters[0];
  PsiType type=firstParameter.getTypeGroovy();
  GrTypeElement typeElement=firstParameter.getTypeElementGroovy();
  if (type != null && typeElement != null && type.getPresentableText() != null && !type.getPresentableText().endsWith("Map")) {
    return Collections.emptyMap();
  }
  GrNamedArgumentSearchVisitor visitor=new GrNamedArgumentSearchVisitor(firstParameter.getNameIdentifierGroovy().getText());
  body.accept(visitor);
  return visitor.getResult();
}
