{
  final GlobalSearchScope scope=GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module);
  final PsiManager psiManager=PsiManager.getInstance(module.getProject());
  final PsiClass aClass=psiManager.findClass(component.getComponentClassName(),scope);
  if (aClass == null) {
    return;
  }
  for (  final IProperty prop : component.getModifiedProperties()) {
    final PsiMethod getter=PropertyUtil.findPropertyGetter(aClass,prop.getName(),false,true);
    InspectionProfileEntry profileEntry=InspectionProjectProfileManager.getInstance(aClass.getProject()).getInspectionProfile(aClass).getInspectionTool(Java15APIUsageInspection.SHORT_NAME);
    if (profileEntry instanceof LocalInspectionToolWrapper) {
      profileEntry=((LocalInspectionToolWrapper)profileEntry).getTool();
    }
    final Java15APIUsageInspection tool=(Java15APIUsageInspection)profileEntry;
    if (tool.isJava15ApiUsage(getter)) {
      registerError(component,collector,prop,"@since 1.5");
    }
 else     if (tool.isJava16ApiUsage(getter)) {
      registerError(component,collector,prop,"@since 1.6");
    }
  }
}
