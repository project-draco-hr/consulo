{
  final Document document=PsiDocumentManager.getInstance(project).getDocument(psiJavaFile);
  if (document == null)   return null;
  final int endOffset=document.getLineEndOffset(line);
  final MethodDescriptor[] descriptor=new MethodDescriptor[]{null};
  PsiDocumentManager.getInstance(project).commitAndRunReadAction(new Runnable(){
    public void run(){
      try {
        PsiMethod method=DebuggerUtilsEx.findPsiMethod(psiJavaFile,endOffset);
        if (method == null || document.getLineNumber(method.getTextOffset()) < line)         return;
        int methodNameOffset=method.getNameIdentifier().getTextOffset();
        descriptor[0]=new MethodDescriptor();
        descriptor[0].methodName=method.isConstructor() ? "<init>" : method.getName();
        descriptor[0].methodSignature=JVMNameUtil.getJVMSignature(method);
        descriptor[0].isStatic=method.hasModifierProperty(PsiModifier.STATIC);
        descriptor[0].methodLine=document.getLineNumber(methodNameOffset);
      }
 catch (      EvaluateException e) {
        descriptor[0]=null;
      }
    }
  }
);
  if (descriptor[0] == null) {
    return null;
  }
  if (descriptor[0].methodName == null || descriptor[0].methodSignature == null) {
    return null;
  }
  return descriptor[0];
}
