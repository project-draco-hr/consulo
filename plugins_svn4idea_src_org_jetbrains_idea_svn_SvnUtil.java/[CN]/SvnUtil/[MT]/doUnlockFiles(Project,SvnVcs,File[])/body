{
  final boolean force=true;
  final SVNException[] exception=new SVNException[1];
  final Collection<String> failedUnlocks=new ArrayList<String>();
  final int[] count=new int[]{ioFiles.length};
  final ISVNEventHandler eventHandler=new ISVNEventHandler(){
    public void handleEvent(    SVNEvent event,    double progress){
      if (event.getAction() == SVNEventAction.UNLOCK_FAILED) {
        failedUnlocks.add(event.getErrorMessage() != null ? event.getErrorMessage().getFullMessage() : event.getFile().getAbsolutePath());
        count[0]--;
      }
    }
    public void checkCancelled(){
    }
  }
;
  Runnable command=new Runnable(){
    public void run(){
      ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
      SVNWCClient wcClient;
      try {
        wcClient=activeVcs.createWCClient();
        wcClient.setEventHandler(eventHandler);
        if (progress != null) {
          progress.setText(SvnBundle.message("progress.text.unlocking.files"));
        }
        for (        File ioFile : ioFiles) {
          if (progress != null) {
            progress.checkCanceled();
          }
          if (progress != null) {
            progress.setText2(SvnBundle.message("progress.text2.processing.file",ioFile.getName()));
          }
          wcClient.doUnlock(new File[]{ioFile},force);
        }
      }
 catch (      SVNException e) {
        exception[0]=e;
      }
    }
  }
;
  ProgressManager.getInstance().runProcessWithProgressSynchronously(command,SvnBundle.message("progress.title.unlock.files"),false,project);
  if (!failedUnlocks.isEmpty()) {
    String[] failedFiles=ArrayUtil.toStringArray(failedUnlocks);
    List<VcsException> exceptions=new ArrayList<VcsException>();
    for (    String file : failedFiles) {
      exceptions.add(new VcsException(SvnBundle.message("exception.text.failed.to.unlock.file",file)));
    }
    AbstractVcsHelper.getInstance(project).showErrors(exceptions,SvnBundle.message("message.title.unlock.failures"));
  }
  StatusBarUtil.setStatusBarInfo(project,SvnBundle.message("message.text.files.unlocked",count[0]));
  if (exception[0] != null) {
    throw new VcsException(exception[0]);
  }
}
