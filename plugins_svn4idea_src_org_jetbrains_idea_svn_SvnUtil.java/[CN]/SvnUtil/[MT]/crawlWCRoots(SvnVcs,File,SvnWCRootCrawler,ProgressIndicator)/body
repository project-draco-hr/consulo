{
  final Collection result=new HashSet();
  File parent=path.isFile() || !path.exists() ? path.getParentFile() : path;
  if (SVNWCUtil.isVersionedDirectory(parent)) {
    if (progress != null && progress.isCanceled()) {
      throw new ProcessCanceledException();
    }
    final Collection pending=callback.handleWorkingCopyRoot(path,progress);
    if (progress != null && progress.isCanceled()) {
      throw new ProcessCanceledException();
    }
    for (Iterator pendingFiles=pending.iterator(); pendingFiles.hasNext(); ) {
      File file=(File)pendingFiles.next();
      result.addAll(crawlWCRoots(vcs,file,callback,progress));
    }
    result.add(path);
  }
 else   if (path.isDirectory()) {
    if (progress != null && progress.isCanceled()) {
      throw new ProcessCanceledException();
    }
    File[] children=path.listFiles();
    for (int i=0; children != null && i < children.length; i++) {
      if (progress != null && progress.isCanceled()) {
        throw new ProcessCanceledException();
      }
      File child=children[i];
      if (child.isDirectory()) {
        result.addAll(crawlWCRoots(vcs,child,callback,progress));
      }
    }
  }
  return result;
}
