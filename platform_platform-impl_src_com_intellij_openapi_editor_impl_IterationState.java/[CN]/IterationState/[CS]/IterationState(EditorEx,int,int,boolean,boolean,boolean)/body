{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  myDocument=editor.getDocument();
  myStartOffset=start;
  myEnd=end;
  myEditor=editor;
  myUseOnlyFullLineHighlighters=useOnlyFullLineHighlighters;
  LOG.assertTrue(myStartOffset <= myEnd);
  myHighlighterIterator=useOnlyFullLineHighlighters ? null : editor.getHighlighter().createIterator(start);
  if (!useCaretAndSelection) {
    mySelectionStarts=ArrayUtilRt.EMPTY_INT_ARRAY;
    mySelectionEnds=ArrayUtilRt.EMPTY_INT_ARRAY;
    myVirtualSelectionStarts=ArrayUtilRt.EMPTY_INT_ARRAY;
    myVirtualSelectionEnds=ArrayUtilRt.EMPTY_INT_ARRAY;
  }
 else {
    List<Caret> carets=editor.getCaretModel().getAllCarets();
    mySelectionStarts=new int[carets.size()];
    mySelectionEnds=new int[carets.size()];
    myVirtualSelectionStarts=new int[carets.size()];
    myVirtualSelectionEnds=new int[carets.size()];
    for (int i=0; i < carets.size(); i++) {
      Caret caret=carets.get(i);
      mySelectionStarts[i]=caret.getSelectionStart();
      mySelectionEnds[i]=caret.getSelectionEnd();
      if (useVirtualSelection) {
        myVirtualSelectionStarts[i]=caret.getSelectionStartPosition().column - editor.offsetToVisualPosition(mySelectionStarts[i]).column;
        myVirtualSelectionEnds[i]=caret.getSelectionEndPosition().column - editor.offsetToVisualPosition(mySelectionEnds[i]).column;
      }
    }
  }
  myFoldingModel=editor.getFoldingModel();
  myFoldTextAttributes=myFoldingModel.getPlaceholderAttributes();
  mySelectionAttributes=editor.getSelectionModel().getTextAttributes();
  myReadOnlyColor=myEditor.getColorsScheme().getColor(EditorColors.READONLY_FRAGMENT_BACKGROUND_COLOR);
  CaretModel caretModel=editor.getCaretModel();
  myCaretRowAttributes=editor.isRendererMode() ? null : caretModel.getTextAttributes();
  myDefaultBackground=editor.getColorsScheme().getDefaultBackground();
  myDefaultForeground=editor.getColorsScheme().getDefaultForeground();
  myCaretRowStart=caretModel.getVisualLineStart();
  myCaretRowEnd=caretModel.getVisualLineEnd();
  MarkupModelEx editorMarkup=editor.getMarkupModel();
  myView=new HighlighterSweep(editorMarkup,start,myEnd,useOnlyFullLineHighlighters);
  final MarkupModelEx docMarkup=(MarkupModelEx)DocumentMarkupModel.forDocument(editor.getDocument(),editor.getProject(),true);
  myDoc=new HighlighterSweep(docMarkup,start,myEnd,useOnlyFullLineHighlighters);
  myEndOffset=myStartOffset;
  advance();
}
