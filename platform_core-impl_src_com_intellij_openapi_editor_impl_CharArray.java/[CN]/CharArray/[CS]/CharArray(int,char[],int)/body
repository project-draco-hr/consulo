{
  myBufferSize=bufferSize;
  myDeferredChangesStorage=new TextChangesStorage();
  myArray=Arrays.copyOf(data,length);
  myCount=length;
  if (myDebug) {
    myDebugArray=new CharArray(bufferSize,data,length){
      @NotNull @Override protected DocumentEvent beforeChangedUpdate(      int offset,      CharSequence oldString,      CharSequence newString,      boolean wholeTextReplaced){
        return CharArray.this.beforeChangedUpdate(offset,oldString,newString,wholeTextReplaced);
      }
      @Override protected void afterChangedUpdate(      @NotNull DocumentEvent event,      long newModificationStamp){
      }
      @Override protected void assertWriteAccess(){
      }
      @Override protected void assertReadAccess(){
      }
      @Override boolean isDebug(){
        return false;
      }
    }
;
    myDebugDeferredChanges=new ArrayList<TextChangeImpl>();
  }
  assertConsistency();
}
