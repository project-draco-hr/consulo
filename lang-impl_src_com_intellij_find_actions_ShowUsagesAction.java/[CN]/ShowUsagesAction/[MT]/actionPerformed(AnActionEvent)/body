{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null)   return;
  hideHints();
  myWidth=-1;
  final RelativePoint popupPosition=JBPopupFactory.getInstance().guessBestPopupLocation(e.getDataContext());
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.goto.usages");
  UsageTarget[] usageTargets=e.getData(UsageView.USAGE_TARGETS_KEY);
  final Editor editor=e.getData(PlatformDataKeys.EDITOR);
  if (usageTargets == null) {
    FindUsagesAction.chooseAmbiguousTargetAndPerform(project,editor,new PsiElementProcessor<PsiElement>(){
      public boolean execute(      final PsiElement element){
        startFindUsages(element,popupPosition,editor,USAGES_PAGE_SIZE);
        return false;
      }
    }
);
  }
 else {
    PsiElement element=((PsiElementUsageTarget)usageTargets[0]).getElement();
    startFindUsages(element,popupPosition,editor,USAGES_PAGE_SIZE);
  }
}
