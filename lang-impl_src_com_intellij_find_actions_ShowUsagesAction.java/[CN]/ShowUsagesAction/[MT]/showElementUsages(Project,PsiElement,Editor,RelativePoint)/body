{
  ArrayList<Usage> usages=new ArrayList<Usage>();
  CommonProcessors.CollectProcessor<Usage> collect=new CommonProcessors.CollectProcessor<Usage>(usages);
  FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(project)).getFindUsagesManager();
  FindUsagesHandler handler=findUsagesManager.getFindUsagesHandler(element,false);
  UsageViewPresentation presentation=findUsagesManager.processUsages(element,collect,handler);
  if (presentation == null)   return;
  if (usages.isEmpty()) {
    String text=FindBundle.message("no.usages.found.in",searchScopePresentableName(element,handler));
    if (editor != null) {
      HintManager.getInstance().showInformationHint(editor,text);
    }
 else {
      JLabel label=HintUtil.createInformationLabel(text);
      HintManager.getInstance().showHint(label,popupPosition,HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_SCROLLING,0);
    }
  }
 else {
    final String title=presentation.getTabText();
    JBPopup popup=getUsagePopup(usages,title,project,element,handler);
    if (popup != null) {
      popup.show(popupPosition);
    }
  }
}
