{
  if (StringUtil.startsWithChar(line,'[') && StringUtil.endsWithChar(line,']')) {
    if (line.startsWith("[parsing started")) {
      String filePath=line.substring("[parsing started".length(),line.length() - 1).trim();
      processParsingMessage(callback,filePath.replace(File.separatorChar,'/'));
    }
 else     if (line.startsWith("[parsed") && line.indexOf(".java") >= 0) {
      int index=line.indexOf(".java");
      String filePath=line.substring("[parsed".length(),index + ".java".length()).trim();
      processParsingMessage(callback,filePath.replace(File.separatorChar,'/'));
    }
 else     if (line.startsWith("[read") && line.endsWith(".java]")) {
      String filePath=line.substring("[read".length(),line.length() - 1).trim();
      processParsingMessage(callback,filePath.replace(File.separatorChar,'/'));
    }
 else     if (line.startsWith("[parsing completed")) {
    }
 else     if (line.startsWith("[loading") || line.startsWith("[loaded") || line.startsWith("[read")) {
      callback.setProgressText(CompilerBundle.message("progress.loading.classes"));
    }
 else     if (line.startsWith("[checking")) {
      String className=line.substring("[checking".length(),line.length() - 1).trim();
      callback.setProgressText(CompilerBundle.message("progress.compiling.class",className));
    }
 else     if (line.startsWith("[wrote") || line.startsWith("[write")) {
      String filePath=line.substring("[wrote".length(),line.length() - 1).trim();
      processParsingMessage(callback,filePath.replace(File.separatorChar,'/'));
    }
    return true;
  }
  return false;
}
