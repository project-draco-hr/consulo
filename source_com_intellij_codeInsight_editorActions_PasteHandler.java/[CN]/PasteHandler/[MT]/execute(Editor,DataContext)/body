{
  if (editor.isViewer())   return;
  if (!editor.getDocument().isWritable()) {
    if (!FileDocumentManager.fileForDocumentCheckedOutSuccessfully(editor.getDocument(),(Project)dataContext.getData(DataConstants.PROJECT))) {
      return;
    }
  }
  final Project project=editor.getProject();
  if (project == null || editor.isColumnMode()) {
    if (myOriginalHandler != null) {
      myOriginalHandler.execute(editor,dataContext);
    }
    return;
  }
  final Document document=editor.getDocument();
  final PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(document);
  if (file == null) {
    if (myOriginalHandler != null) {
      myOriginalHandler.execute(editor,dataContext);
    }
    return;
  }
  final FileType fileType=file.getFileType();
  document.startGuardedBlockChecking();
  try {
    if (myPasteReferenceProvider.isPasteEnabled(dataContext)) {
      myPasteReferenceProvider.performPaste(dataContext);
    }
 else {
      doPaste(editor,project,file,fileType,document);
    }
  }
 catch (  ReadOnlyFragmentModificationException e) {
    EditorActionManager.getInstance().getReadonlyFragmentModificationHandler().handle(e);
  }
 finally {
    document.stopGuardedBlockChecking();
  }
}
