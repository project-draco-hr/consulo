{
  for (  List<MethodSignatureBackedByPsiMethod> methodSignatureBackedByPsiMethods : allMethodsCollection.values()) {
    List<MethodSignatureBackedByPsiMethod> overrideEquivalentSignatures=new ArrayList<MethodSignatureBackedByPsiMethod>(methodSignatureBackedByPsiMethods);
    PsiSuperMethodUtil.removeOverriddenMethods(overrideEquivalentSignatures,aClass,aClass);
    for (    MethodSignatureBackedByPsiMethod signature : overrideEquivalentSignatures) {
      PsiMethod method=signature.getMethod();
      PsiClass containingClass=method.getContainingClass();
      if (containingClass == null || aClass.equals(containingClass)) {
        continue;
      }
      if (method.hasModifierProperty(PsiModifier.ABSTRACT) && !method.hasModifierProperty(PsiModifier.STATIC) && !method.hasModifierProperty(PsiModifier.PRIVATE)&& aClass.getManager().getResolveHelper().isAccessible(method,aClass,aClass)) {
        return method;
      }
    }
  }
  return null;
}
