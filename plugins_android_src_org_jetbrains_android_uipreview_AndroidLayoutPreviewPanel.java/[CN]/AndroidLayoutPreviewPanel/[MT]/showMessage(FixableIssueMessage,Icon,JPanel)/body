{
  if (message.myLinkText.length() > 0 || message.myAfterLinkText.length() > 0) {
    final HyperlinkLabel warnLabel=new HyperlinkLabel();
    warnLabel.setOpaque(false);
    warnLabel.setHyperlinkText(message.myBeforeLinkText,message.myLinkText,message.myAfterLinkText);
    warnLabel.setIcon(icon);
    warnLabel.addHyperlinkListener(new HyperlinkListener(){
      public void hyperlinkUpdate(      final HyperlinkEvent e){
        final Runnable quickFix=message.myQuickFix;
        if (quickFix != null && e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
          quickFix.run();
        }
      }
    }
);
    panel.add(warnLabel);
  }
 else {
    final JBLabel warnLabel=new JBLabel();
    if (message.myAdditionalFixes.size() == 0 && message.myTips.size() == 0) {
      warnLabel.setBorder(IdeBorderFactory.createEmptyBorder(0,0,10,0));
    }
    warnLabel.setOpaque(false);
    warnLabel.setText("<html><body>" + message.myBeforeLinkText.replace("\n","<br>") + "</body></html>");
    warnLabel.setIcon(icon);
    panel.add(warnLabel);
  }
  if (message.myAdditionalFixes.size() > 0 || message.myTips.size() > 0) {
    final JPanel fixesAndTipsPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,0,0));
    fixesAndTipsPanel.setBorder(IdeBorderFactory.createEmptyBorder(0,0,10,0));
    fixesAndTipsPanel.setOpaque(false);
    fixesAndTipsPanel.add(Box.createHorizontalStrut(icon.getIconWidth()));
    final JPanel fixesAndTipsRight=new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP,0,0,true,false));
    fixesAndTipsRight.setOpaque(false);
    final JPanel fixesPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,5,0));
    fixesPanel.setBorder(IdeBorderFactory.createEmptyBorder(3,0,0,0));
    fixesPanel.setOpaque(false);
    for (    Pair<String,Runnable> pair : message.myAdditionalFixes) {
      final HyperlinkLabel fixLabel=new HyperlinkLabel();
      fixLabel.setOpaque(false);
      fixLabel.setHyperlinkText(pair.getFirst());
      final Runnable fix=pair.getSecond();
      fixLabel.addHyperlinkListener(new HyperlinkListener(){
        @Override public void hyperlinkUpdate(        HyperlinkEvent e){
          if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            fix.run();
          }
        }
      }
);
      fixesPanel.add(fixLabel);
    }
    fixesAndTipsRight.add(fixesPanel);
    final JPanel tipsPanel=new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP,5,0,true,false));
    tipsPanel.setOpaque(false);
    tipsPanel.setBorder(IdeBorderFactory.createEmptyBorder(3,0,0,0));
    for (    String tip : message.myTips) {
      tipsPanel.add(new JBLabel(tip));
    }
    fixesAndTipsRight.add(tipsPanel);
    fixesAndTipsPanel.add(fixesAndTipsRight);
    panel.add(fixesAndTipsPanel);
  }
}
