{
  if (message.myLinkText.length() > 0 || message.myAfterLinkText.length() > 0) {
    final HyperlinkLabel warnLabel=new HyperlinkLabel();
    warnLabel.setOpaque(false);
    warnLabel.setHyperlinkText(message.myBeforeLinkText,message.myLinkText,message.myAfterLinkText);
    warnLabel.setIcon(icon);
    warnLabel.addHyperlinkListener(new HyperlinkListener(){
      public void hyperlinkUpdate(      final HyperlinkEvent e){
        final Runnable quickFix=message.myQuickFix;
        if (quickFix != null && e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
          quickFix.run();
        }
      }
    }
);
    myMessagesPanel.add(warnLabel);
  }
 else {
    final JBLabel warnLabel=new JBLabel();
    warnLabel.setOpaque(false);
    warnLabel.setText("<html><body>" + message.myBeforeLinkText.replace("\n","<br>") + "</body></html>");
    warnLabel.setIcon(icon);
    myMessagesPanel.add(warnLabel);
  }
  if (message.myAdditionalFixes.size() > 0) {
    final JPanel fixesPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,5,0));
    fixesPanel.setBorder(IdeBorderFactory.createEmptyBorder(3,0,10,0));
    fixesPanel.setOpaque(false);
    fixesPanel.add(Box.createHorizontalStrut(icon.getIconWidth()));
    for (    Pair<String,Runnable> pair : message.myAdditionalFixes) {
      final HyperlinkLabel fixLabel=new HyperlinkLabel();
      fixLabel.setOpaque(false);
      fixLabel.setHyperlinkText(pair.getFirst());
      final Runnable fix=pair.getSecond();
      fixLabel.addHyperlinkListener(new HyperlinkListener(){
        @Override public void hyperlinkUpdate(        HyperlinkEvent e){
          if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            fix.run();
          }
        }
      }
);
      fixesPanel.add(fixLabel);
    }
    myMessagesPanel.add(fixesPanel);
  }
}
