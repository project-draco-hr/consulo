{
  myImagePanel.setVisible(true);
  myMessagesPanel.removeAll();
  if (myErrorMessage != null) {
    showMessage(myErrorMessage,Messages.getErrorIcon(),myMessagesPanel);
  }
  if (myWarnMessages != null && myWarnMessages.size() > 0) {
    final HyperlinkLabel showHideWarnsLabel=new HyperlinkLabel();
    showHideWarnsLabel.setOpaque(false);
    final String showMessage="Show " + myWarnMessages.size() + " warnings";
    final String hideMessage="Hide " + myWarnMessages.size() + " warnings";
    showHideWarnsLabel.setHyperlinkText("",myShowWarnings ? hideMessage : showMessage,"");
    final JPanel warningsPanel=new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP,0,0,true,false));
    warningsPanel.setOpaque(false);
    showHideWarnsLabel.addHyperlinkListener(new HyperlinkListener(){
      public void hyperlinkUpdate(      final HyperlinkEvent e){
        if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
          myShowWarnings=!warningsPanel.isVisible();
          warningsPanel.setVisible(myShowWarnings);
          showHideWarnsLabel.setHyperlinkText("",myShowWarnings ? hideMessage : showMessage,"");
        }
      }
    }
);
    final JPanel wrapper=new JPanel(new BorderLayout());
    wrapper.setOpaque(false);
    wrapper.add(showHideWarnsLabel);
    wrapper.setBorder(IdeBorderFactory.createEmptyBorder(5,0,5,0));
    myMessagesPanel.add(wrapper);
    for (    FixableIssueMessage warnMessage : myWarnMessages) {
      showMessage(warnMessage,Messages.getWarningIcon(),warningsPanel);
    }
    warningsPanel.setVisible(myShowWarnings);
    myMessagesPanel.add(warningsPanel);
  }
  revalidate();
  repaint();
}
