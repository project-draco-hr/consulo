{
  final String text=getText();
  final Collection<PsiFileSystemItem> contexts=getContexts();
  final Collection<ResolveResult> result=new ArrayList<ResolveResult>(contexts.size());
  for (  final PsiFileSystemItem context : contexts) {
    if (text.length() == 0 && !myFileReferenceSet.isEndingSlashNotAllowed() && isLast() || ".".equals(text) || "/".equals(text)) {
      result.add(new PsiElementResolveResult(context));
    }
 else     if ("..".equals(text)) {
      final PsiFileSystemItem resolved=context.getParent();
      if (resolved != null) {
        result.add(new PsiElementResolveResult(resolved));
      }
    }
 else {
      processVariants(context,new BaseScopeProcessor(){
        public boolean execute(        final PsiElement element,        final PsiSubstitutor substitutor){
          final String name=((PsiFileSystemItem)element).getName();
          if (myFileReferenceSet.isCaseSensitive() ? text.equals(name) : text.compareToIgnoreCase(name) == 0) {
            result.add(new PsiElementResolveResult(element));
            return false;
          }
          return true;
        }
      }
);
    }
  }
  final int resultCount=result.size();
  return resultCount > 0 ? result.toArray(new ResolveResult[resultCount]) : ResolveResult.EMPTY_ARRAY;
}
