{
  final Collection<PsiElement> contexts=getContexts();
  Collection<ResolveResult> result=new ArrayList<ResolveResult>(contexts.size());
  for (  PsiElement context : contexts) {
    PsiElement resolved=null;
    if (context instanceof WebDirectoryElement) {
      if (".".equals(myText)) {
        resolved=context;
      }
 else       if ("..".equals(myText)) {
        resolved=((WebDirectoryElement)context).getParentDirectory();
      }
 else {
        final PsiElement[] processingChildrenResult=new PsiElement[1];
        final WebDirectoryElement dirContext=((WebDirectoryElement)context);
        dirContext.processChildren(new WebDirectoryElement.WebDirectoryProcessor(){
          public boolean execute(          final String name,          boolean isDirectory) throws Exception {
            if (equalsTo(name)) {
              final WebDirectoryElement element=dirContext.createElement(name,isDirectory);
              processingChildrenResult[0]=element.isDirectory() ? element : element.getOriginalFile();
              return false;
            }
            return true;
          }
        }
);
        resolved=processingChildrenResult[0];
      }
    }
 else     if (context instanceof PsiDirectory) {
      if (".".equals(myText)) {
        resolved=context;
      }
 else       if ("..".equals(myText)) {
        resolved=((PsiDirectory)context).getParentDirectory();
      }
 else {
        final PsiElement[] processingChildrenResult=new PsiElement[1];
        ((PsiDirectoryImpl)context).processChildren(new PsiElementProcessor<PsiFileSystemItem>(){
          public boolean execute(          final PsiFileSystemItem element){
            if (equalsTo(element.getName())) {
              processingChildrenResult[0]=element;
              return false;
            }
            return true;
          }
        }
);
        resolved=processingChildrenResult[0];
      }
    }
    if (resolved != null) {
      result.add(new PsiElementResolveResult(resolved));
    }
  }
  return result.size() > 0 ? result.toArray(new ResolveResult[result.size()]) : ResolveResult.EMPTY_ARRAY;
}
