{
  if (!(element instanceof PsiFileSystemItem))   throw new IncorrectOperationException("Cannot bind to element");
  PsiFileSystemItem fileSystemItem=(PsiFileSystemItem)element;
  VirtualFile dstVFile=PsiUtil.getVirtualFile(fileSystemItem);
  final PsiFile file=getElement().getContainingFile();
  String newName=null;
  final WebModuleProperties properties=WebUtil.getWebModuleProperties(file);
  if (dstVFile == null)   throw new IncorrectOperationException("Cannot bind to non-physical element:" + element);
  final VirtualFile currentFile=file.getVirtualFile();
  LOG.assertTrue(currentFile != null);
  if (properties != null) {
    if (myFileReferenceSet.isAbsolutePathReference()) {
      return element;
    }
 else {
      final WebDirectoryElement dstWebElement=JspManager.getInstance(element.getProject()).findWebDirectoryByFile(dstVFile,properties);
      final WebDirectoryElement srcWebElement=JspManager.getInstance(element.getProject()).findWebDirectoryByFile(currentFile,properties);
      newName=WebUtil.getRelativePath(srcWebElement,dstWebElement);
    }
  }
  if (newName == null) {
    newName=VfsUtil.getPath(currentFile,dstVFile,'/');
    if (newName == null) {
      throw new IncorrectOperationException("Cannot find path between files; src = " + currentFile.getPresentableUrl() + "; dst = "+ dstVFile.getPresentableUrl());
    }
  }
  final TextRange range=new TextRange(myFileReferenceSet.getStartInElement(),getRangeInElement().getEndOffset());
  final ElementManipulator<PsiElement> manipulator=getManipulator(getElement());
  if (manipulator == null) {
    throw new IncorrectOperationException("Manipulator not defined for: " + getElement());
  }
  return manipulator.handleContentChange(getElement(),range,newName);
}
