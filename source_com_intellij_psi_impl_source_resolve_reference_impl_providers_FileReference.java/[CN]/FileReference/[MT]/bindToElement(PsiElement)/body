{
  if (!(element instanceof PsiFileSystemItem))   throw new IncorrectOperationException("Cannot bind to element, should be instanceof PsiFileSystemItem: " + element);
  final PsiFileSystemItem fileSystemItem=(PsiFileSystemItem)element;
  VirtualFile dstVFile=fileSystemItem.getVirtualFile();
  if (dstVFile == null)   throw new IncorrectOperationException("Cannot bind to non-physical element:" + element);
  final PsiFile file=getElement().getContainingFile();
  final VirtualFile curVFile=file.getVirtualFile();
  if (curVFile == null)   throw new IncorrectOperationException("Cannot bind from non-physical element:" + file);
  final Project project=element.getProject();
  final String newName;
  if (myFileReferenceSet.isAbsolutePathReference()) {
    PsiFileSystemItem root=null;
    PsiFileSystemItem dstItem=null;
    for (    final FileReferenceHelper helper : FileReferenceHelperRegistrar.getHelpers()) {
      PsiFileSystemItem _dstItem=helper.getPsiFileSystemItem(project,dstVFile);
      if (_dstItem != null) {
        PsiFileSystemItem _root=helper.findRoot(project,dstVFile);
        if (_root != null) {
          root=_root;
          dstItem=_dstItem;
          break;
        }
      }
    }
    if (root == null)     return element;
    newName="/" + PsiFileSystemItemUtil.getNotNullRelativePath(root,dstItem);
  }
 else {
    PsiFileSystemItem curItem=null;
    PsiFileSystemItem dstItem=null;
    for (    final FileReferenceHelper helper : FileReferenceHelperRegistrar.getHelpers()) {
      PsiFileSystemItem _curItem=helper.getPsiFileSystemItem(project,curVFile);
      if (_curItem != null) {
        PsiFileSystemItem _dstItem=helper.getPsiFileSystemItem(project,dstVFile);
        if (_dstItem != null) {
          curItem=_curItem;
          dstItem=_dstItem;
          break;
        }
      }
    }
    checkNotNull(curItem,curVFile,dstVFile);
    newName=PsiFileSystemItemUtil.getNotNullRelativePath(curItem,dstItem);
  }
  final TextRange range=new TextRange(myFileReferenceSet.getStartInElement(),getRangeInElement().getEndOffset());
  final ElementManipulator<PsiElement> manipulator=GenericReference.getManipulator(getElement());
  if (manipulator == null) {
    throw new IncorrectOperationException("Manipulator not defined for: " + getElement());
  }
  return manipulator.handleContentChange(getElement(),range,newName);
}
