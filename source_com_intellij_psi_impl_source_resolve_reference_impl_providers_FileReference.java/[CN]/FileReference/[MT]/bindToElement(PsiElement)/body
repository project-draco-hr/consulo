{
  if (!(element instanceof PsiFileSystemItem))   throw new IncorrectOperationException("Cannot bind to element");
  PsiFileSystemItem fileSystemItem=(PsiFileSystemItem)element;
  VirtualFile dstVFile=PsiUtil.getVirtualFile(fileSystemItem);
  final PsiFile file=getElement().getContainingFile();
  final String newName;
  if (WebUtil.getWebModuleProperties(file) != null) {
    newName=JspUtil.getDeploymentPath((PsiFileSystemItem)element);
    if (newName == null) {
      LOG.assertTrue(dstVFile != null);
      throw new IncorrectOperationException("Cannot find deployment path for " + dstVFile.getPresentableUrl());
    }
  }
 else {
    if (dstVFile == null)     throw new IncorrectOperationException("Cannot bind to non-physical element:" + element);
    final VirtualFile currentFile=file.getVirtualFile();
    LOG.assertTrue(currentFile != null);
    newName=VfsUtil.getPath(currentFile,dstVFile,'/');
    if (newName == null) {
      throw new IncorrectOperationException("Cannot find path between files; src = " + currentFile.getPresentableUrl() + "; dst = "+ dstVFile.getPresentableUrl());
    }
  }
  final TextRange range=new TextRange(myFileReferenceSet.getStartInElement(),getRangeInElement().getEndOffset());
  final ElementManipulator<PsiElement> manipulator=getManipulator(getElement());
  if (manipulator == null) {
    throw new IncorrectOperationException("Manipulator not defined for: " + getElement());
  }
  return manipulator.handleContentChange(getElement(),range,newName);
}
