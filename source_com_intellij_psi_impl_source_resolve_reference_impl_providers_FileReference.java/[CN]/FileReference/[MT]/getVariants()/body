{
  final String s=getText();
  if (s != null && s.equals("/")) {
    return ArrayUtil.EMPTY_OBJECT_ARRAY;
  }
  try {
    final List ret=new ArrayList();
    final List<Class> allowedClasses=new ArrayList<Class>();
    allowedClasses.add(PsiFile.class);
    for (    final FileReferenceHelper helper : getHelpers()) {
      allowedClasses.add(helper.getDirectoryClass());
    }
    final PsiScopeProcessor proc=myFileReferenceSet.createProcessor(ret,allowedClasses,Arrays.<PsiConflictResolver>asList(new DuplicateConflictResolver()));
    for (    PsiFileSystemItem context : getContexts()) {
      processVariants(context,proc);
    }
    return ret.toArray();
  }
 catch (  ProcessorRegistry.IncompatibleReferenceTypeException e) {
    LOG.error(e);
    return ArrayUtil.EMPTY_OBJECT_ARRAY;
  }
}
