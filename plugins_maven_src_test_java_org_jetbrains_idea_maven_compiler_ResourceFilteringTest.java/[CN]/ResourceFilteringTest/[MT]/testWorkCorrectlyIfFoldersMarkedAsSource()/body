{
  createProjectSubFile("src/main/resources/file1.properties","value=${project.artifactId}");
  createProjectSubFile("src/main/ideaRes/file2.properties","value=${project.artifactId}");
  importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<build>"+ "  <resources>"+ "    <resource>"+ "      <directory>src/main/resources</directory>"+ "      <filtering>true</filtering>"+ "    </resource>"+ "  </resources>"+ "</build>");
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      MavenRootModelAdapter adapter=new MavenRootModelAdapter(myProjectsTree.findProject(myProjectPom),getModule("project"),new MavenDefaultModifiableModelsProvider(myProject));
      adapter.addSourceFolder(myProjectRoot.findFileByRelativePath("src/main/resources").getPath(),false);
      adapter.addSourceFolder(myProjectRoot.findFileByRelativePath("src/main/ideaRes").getPath(),false);
      adapter.getRootModel().commit();
    }
  }
);
  assertSources("project","src/main/resources","src/main/ideaRes");
  compileModules("project");
  assertResult("target/classes/file1.properties","value=project");
  assertResult("target/classes/file2.properties","value=${project.artifactId}");
}
