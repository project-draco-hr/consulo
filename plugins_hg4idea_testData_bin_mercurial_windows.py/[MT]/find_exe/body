def find_exe(command):
    "Find executable for command searching like cmd.exe does.\n    If command is a basename then PATH is searched for command.\n    PATH isn't searched if command is an absolute or relative path.\n    An extension from PATHEXT is found and added if not present.\n    If command isn't found None is returned."
    pathext = os.environ.get('PATHEXT', '.COM;.EXE;.BAT;.CMD')
    pathexts = [ext for ext in pathext.lower().split(os.pathsep)]
    if (os.path.splitext(command)[1].lower() in pathexts):
        pathexts = ['']

    def findexisting(pathcommand):
        'Will append extension (if needed) and return existing file'
        for ext in pathexts:
            executable = (pathcommand + ext)
            if os.path.exists(executable):
                return executable
        return None
    if (os.sep in command):
        return findexisting(command)
    for path in os.environ.get('PATH', '').split(os.pathsep):
        executable = findexisting(os.path.join(path, command))
        if (executable is not None):
            return executable
    return findexisting(os.path.expanduser(os.path.expandvars(command)))
