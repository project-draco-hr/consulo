{
  if (aClass.isInterface() || aClass.isEnum() || aClass.isAnnotationType()) {
    return;
  }
  if (aClass instanceof PsiTypeParameter) {
    return;
  }
  final PsiMethod[] constructors=aClass.getConstructors();
  if (constructors.length > 0) {
    return;
  }
  final PsiMethod[] methods=aClass.getMethods();
  if (methods.length > 0) {
    return;
  }
  final PsiField[] fields=aClass.getFields();
  if (fields.length > 0) {
    return;
  }
  final PsiClassInitializer[] initializers=aClass.getInitializers();
  if (initializers.length > 0) {
    return;
  }
  if (ignoreClassWithParameterization && isSuperParametrization(aClass)) {
    return;
  }
  if (AnnotationUtil.isAnnotated(aClass,ignorableAnnotations)) {
    return;
  }
  if (ignoreThrowables && InheritanceUtil.isInheritor(aClass,"java.lang.Throwable")) {
    return;
  }
  registerClassError(aClass,aClass);
}
