{
  if (!(aClass instanceof PsiAnonymousClass)) {
    final PsiReferenceList extendsList=aClass.getExtendsList();
    final PsiReferenceList implementsList=aClass.getImplementsList();
    return hasTypeArguments(extendsList) || hasTypeArguments(implementsList);
  }
  final PsiAnonymousClass anonymousClass=(PsiAnonymousClass)aClass;
  final PsiJavaCodeReferenceElement reference=anonymousClass.getBaseClassReference();
  final PsiReferenceParameterList parameterList=reference.getParameterList();
  if (parameterList == null) {
    return false;
  }
  final PsiTypeElement[] elements=parameterList.getTypeParameterElements();
  for (  PsiTypeElement element : elements) {
    if (element != null) {
      return true;
    }
  }
  return false;
}
