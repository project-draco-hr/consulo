{
  if (ApplicationManager.getApplication().isHeadlessEnvironment())   return;
  StartupManager.getInstance(myProject).registerPostStartupActivity(new DumbAwareRunnable(){
    @Override public void run(){
      final ToolWindowManager toolWindowManager=ToolWindowManager.getInstance(myProject);
      if (toolWindowManager != null) {
        myToolWindow=toolWindowManager.registerToolWindow(TOOLWINDOW_ID,true,ToolWindowAnchor.BOTTOM,myProject,true);
        myToolWindow.setIcon(AllIcons.Toolwindows.ToolWindowChanges);
        updateToolWindowAvailability();
        final ContentManager contentManager=myToolWindow.getContentManager();
        myContentManagerListener=new MyContentManagerListener();
        contentManager.addContentManagerListener(myContentManagerListener);
        myVcsManager.addVcsListener(myVcsListener);
        Disposer.register(myProject,new Disposable(){
          @Override public void dispose(){
            contentManager.removeContentManagerListener(myContentManagerListener);
            myVcsManager.removeVcsListener(myVcsListener);
          }
        }
);
        loadExtensionTabs();
        myContentManager=contentManager;
        final List<Content> ordered=doPresetOrdering(myAddedContents);
        for (        Content content : ordered) {
          myContentManager.addContent(content);
        }
        myAddedContents.clear();
        if (contentManager.getContentCount() > 0) {
          contentManager.setSelectedContent(contentManager.getContent(0));
        }
        myInitializationWaiter.countDown();
      }
    }
  }
);
}
