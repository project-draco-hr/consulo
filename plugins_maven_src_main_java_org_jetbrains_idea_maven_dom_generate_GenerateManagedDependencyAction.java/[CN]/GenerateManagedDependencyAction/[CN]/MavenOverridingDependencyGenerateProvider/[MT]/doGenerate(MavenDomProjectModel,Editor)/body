{
  Set<MavenDomDependency> managingDependencies=collectManagingDependencies(mavenModel);
  List<MavenDomDependency> dependenciesToOverride=GenerateDependencyUtil.chooseDependencies(managingDependencies,mavenModel.getManager().getProject());
  for (  final MavenDomDependency parentDependency : dependenciesToOverride) {
    final String groupId=parentDependency.getGroupId().getStringValue();
    final String artifactId=parentDependency.getArtifactId().getStringValue();
    if (!StringUtil.isEmptyOrSpaces(groupId) && !StringUtil.isEmptyOrSpaces(artifactId)) {
      return new WriteCommandAction<MavenDomDependency>(editor.getProject(),mavenModel.getXmlTag().getContainingFile()){
        @Override protected void run(        Result result) throws Throwable {
          MavenDomDependency dependency=MavenDomUtil.createMavenDomDependency(mavenModel,editor);
          dependency.getGroupId().setStringValue(groupId);
          dependency.getArtifactId().setStringValue(artifactId);
          String typeValue=parentDependency.getType().getStringValue();
          if (!StringUtil.isEmptyOrSpaces(typeValue)) {
            dependency.getType().setStringValue(typeValue);
          }
          dependency.getVersion().undefine();
        }
      }
.execute().getResultObject();
    }
  }
  return null;
}
