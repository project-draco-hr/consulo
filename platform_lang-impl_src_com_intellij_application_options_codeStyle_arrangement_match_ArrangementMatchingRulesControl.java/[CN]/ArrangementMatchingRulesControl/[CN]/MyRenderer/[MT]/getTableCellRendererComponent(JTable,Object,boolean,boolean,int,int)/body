{
  if (isEditing() && getEditingRow() == row) {
    return EMPTY_RENDERER;
  }
  if (value instanceof ArrangementRepresentationAware) {
    return adjustHeight(((ArrangementRepresentationAware)value).getComponent(),row);
  }
  ArrangementListRowDecorator component=myComponents.get(row);
  if (component == null) {
    if (!(value instanceof StdArrangementMatchRule)) {
      return EMPTY_RENDERER;
    }
    StdArrangementMatchRule rule=(StdArrangementMatchRule)value;
    ArrangementUiComponent ruleComponent=myFactory.getComponent(rule.getMatcher().getCondition(),rule,true);
    component=new ArrangementListRowDecorator(ruleComponent,ArrangementMatchingRulesControl.this);
    myComponents.set(row,component);
  }
  component.setUnderMouse(myRowUnderMouse == row);
  component.setRowIndex((myEditorRow >= 0 && row > myEditorRow) ? row : row + 1);
  component.setSelected(getSelectionModel().isSelectedIndex(row) || (myEditorRow >= 0 && row == myEditorRow - 1));
  component.setBeingEdited(myEditorRow >= 0 && myEditorRow == row + 1);
  boolean showSortIcon=value instanceof StdArrangementMatchRule && StdArrangementTokens.Order.BY_NAME.equals(((StdArrangementMatchRule)value).getOrderType());
  component.setShowSortIcon(showSortIcon);
  return component.getUiComponent();
}
