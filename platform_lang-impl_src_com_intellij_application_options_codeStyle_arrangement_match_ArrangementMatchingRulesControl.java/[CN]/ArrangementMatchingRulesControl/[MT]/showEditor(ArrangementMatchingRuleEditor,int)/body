{
  if (myEditorRow == rowToEdit + 1) {
    return;
  }
  if (myEditorRow >= 0) {
    if (myEditorRow < rowToEdit) {
      rowToEdit--;
    }
    hideEditor();
  }
  myEditorRow=rowToEdit + 1;
  ArrangementEditorComponent editorComponent=new ArrangementEditorComponent(this,myEditorRow,editor);
  int width=getBounds().width;
  JScrollPane scrollPane=JBScrollPane.findScrollPane(getParent());
  if (scrollPane != null) {
    width-=scrollPane.getVerticalScrollBar().getWidth();
  }
  editorComponent.applyAvailableWidth(width);
  editor.reset(rowToEdit);
  mySkipSelectionChange=true;
  try {
    getModel().insertRow(myEditorRow,new Object[]{editorComponent});
  }
  finally {
    mySkipSelectionChange=false;
  }
  Rectangle bounds=getRowsBounds(rowToEdit,myEditorRow);
  if (bounds != null) {
    myRepresentationCallback.ensureVisible(bounds);
  }
  editorComponent.expand();
  repaintRows(rowToEdit,getModel().getRowCount() - 1,false);
  editCellAt(myEditorRow,0);
}
