{
  final PsiElement refElement=p.getElementToSearch();
  String text=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
    public String compute(){
      String text=null;
      if (refElement instanceof PsiFile) {
        final VirtualFile vFile=((PsiFile)refElement).getVirtualFile();
        if (vFile != null) {
          text=vFile.getNameWithoutExtension();
        }
      }
 else       if (refElement instanceof PsiNamedElement) {
        text=((PsiNamedElement)refElement).getName();
        if (refElement instanceof PsiMetaOwner) {
          final PsiMetaData metaData=((PsiMetaOwner)refElement).getMetaData();
          if (metaData != null)           text=metaData.getName();
        }
      }
      if (text == null && refElement instanceof PsiMetaOwner) {
        final PsiMetaData metaData=((PsiMetaOwner)refElement).getMetaData();
        if (metaData != null)         text=metaData.getName();
      }
      return text;
    }
  }
);
  if (StringUtil.isEmpty(text))   return true;
  if (DEBUG)   System.out.println("Searching for :" + text);
  SearchScope searchScope=ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>(){
    public SearchScope compute(){
      return p.getEffectiveSearchScope();
    }
  }
);
  final boolean ignoreInjectedPsi=searchScope instanceof LocalSearchScope && ((LocalSearchScope)searchScope).isIgnoreInjectedPsi();
  final TextOccurenceProcessor processor=new TextOccurenceProcessor(){
    public boolean execute(    PsiElement element,    int offsetInElement){
      ProgressManager.checkCanceled();
      if (DEBUG) {
        System.out.println("!!! About to check " + element);
      }
      if (ignoreInjectedPsi && element instanceof PsiLanguageInjectionHost)       return true;
      final PsiReference[] refs=element.getReferences();
      for (      PsiReference ref : refs) {
        if (DEBUG) {
          System.out.println("!!!!!!!!!!!!!! Ref " + ref);
        }
        if (ReferenceRange.containsOffsetInElement(ref,offsetInElement)) {
          if (DEBUG) {
            System.out.println("!!!!!!!!!!!!!!!!!!!!! Ref " + ref + " contains");
          }
          if (ref.isReferenceTo(refElement)) {
            if (DEBUG) {
              System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!   Found ref " + ref);
            }
            return consumer.process(ref);
          }
        }
      }
      return true;
    }
  }
;
  short searchContext=UsageSearchContext.IN_CODE | UsageSearchContext.IN_FOREIGN_LANGUAGES | UsageSearchContext.IN_COMMENTS;
  final PsiSearchHelper helper=PsiManager.getInstance(refElement.getProject()).getSearchHelper();
  return helper.processElementsWithWord(processor,searchScope,text,searchContext,refElement.getLanguage().isCaseSensitive());
}
