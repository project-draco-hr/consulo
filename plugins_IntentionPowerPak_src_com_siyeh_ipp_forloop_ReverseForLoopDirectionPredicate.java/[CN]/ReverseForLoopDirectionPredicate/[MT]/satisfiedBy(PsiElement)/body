{
  if (!(element instanceof PsiJavaToken)) {
    return false;
  }
  final PsiJavaToken keyword=(PsiJavaToken)element;
  final IElementType tokenType=keyword.getTokenType();
  if (!JavaTokenType.FOR_KEYWORD.equals(tokenType)) {
    return false;
  }
  final PsiElement parent=keyword.getParent();
  if (!(parent instanceof PsiForStatement)) {
    return false;
  }
  final PsiForStatement forStatement=(PsiForStatement)parent;
  final PsiStatement initialization=forStatement.getInitialization();
  if (!(initialization instanceof PsiDeclarationStatement)) {
    return false;
  }
  final PsiDeclarationStatement declarationStatement=(PsiDeclarationStatement)initialization;
  final PsiElement[] declaredElements=declarationStatement.getDeclaredElements();
  if (declaredElements.length != 1) {
    return false;
  }
  final PsiElement declaredElement=declaredElements[0];
  if (!(declaredElement instanceof PsiLocalVariable)) {
    return false;
  }
  final PsiLocalVariable localVariable=(PsiLocalVariable)declaredElement;
  final PsiType type=localVariable.getType();
  if (!PsiType.INT.equals(type) && !PsiType.LONG.equals(type)) {
    return false;
  }
  final PsiExpression condition=forStatement.getCondition();
  if (!VariableAccessUtils.isComparisonWithVariable(condition,localVariable)) {
    return false;
  }
  final PsiStatement update=forStatement.getUpdate();
  return VariableAccessUtils.isIncrementOfVariable(update,localVariable);
}
