{
  Collection<TreeElement> ungroupedObjects=collectValues(ungrouped);
  Collection<Group> groups=grouper.group(ungroupedObjects);
  Map<Group,GroupWrapper> groupNodes=createGroupNodes(groups);
  for (  Group group : groups) {
    for (Iterator<AbstractTreeNode<TreeElement>> eachUngrNode=ungrouped.iterator(); eachUngrNode.hasNext(); ) {
      AbstractTreeNode<TreeElement> node=eachUngrNode.next();
      if (group.contains(node.getValue())) {
        GroupWrapper groupWrapper=groupNodes.get(group);
        groupWrapper.addSubElement((CachingChildrenTreeNode)node);
        node.setParent(groupWrapper);
        eachUngrNode.remove();
      }
    }
  }
}
