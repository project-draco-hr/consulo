{
  ArrayList<AbstractTreeNode> ungrouped=new ArrayList<AbstractTreeNode>();
  Collection<AbstractTreeNode> children=getChildren();
  for (Iterator<AbstractTreeNode> iterator=children.iterator(); iterator.hasNext(); ) {
    CachingChildrenTreeNode node=(CachingChildrenTreeNode)iterator.next();
    if (node instanceof TreeElementWrapper) {
      ungrouped.add(node);
    }
 else {
      node.groupElements(grouper);
    }
  }
  processUngrouped(ungrouped,grouper);
  Collection<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  for (Iterator<AbstractTreeNode> iterator=children.iterator(); iterator.hasNext(); ) {
    AbstractTreeNode child=iterator.next();
    AbstractTreeNode parent=child.getParent();
    if (parent != this) {
      if (!result.contains(parent))       result.add(parent);
    }
 else {
      result.add(child);
    }
  }
  setChildren(result);
}
