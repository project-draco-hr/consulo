{
  StringBuilder output=new StringBuilder();
  StringTokenizer t=new StringTokenizer(text.toString(),"\n");
  while (t.hasMoreTokens()) {
    String line=StringUtil.escapeXml(t.nextToken()) + "\n";
    Filter.Result result=null;
    if (result != null && result.hyperlinkInfo instanceof OpenFileHyperlinkInfo) {
      output.append(line.substring(0,result.highlightStartOffset));
      OpenFileDescriptor descriptor=((OpenFileHyperlinkInfo)result.hyperlinkInfo).getDescriptor();
      output.append("<a href=\"javascript://\" onclick=\"Activator.doOpen('file?file=");
      output.append(descriptor.getFile().getPresentableUrl());
      output.append("&line=");
      output.append(descriptor.getLine());
      output.append("')\">");
      output.append(line.substring(result.highlightStartOffset,result.highlightEndOffset));
      output.append("</a>");
      output.append(line.substring(result.highlightEndOffset));
    }
 else {
      output.append(line);
    }
  }
  Map<String,String> a=new HashMap<String,String>();
  a.put(ATTR_OUTPUT_TYPE,getTypeString(type));
  startElement(ELEM_OUTPUT,a);
  writeText(output.toString());
  text.delete(0,text.length());
  endElement(ELEM_OUTPUT);
}
