{
  myResultHandler.startDocument();
  int total=0;
  int passed=0;
  for (  AbstractTestProxy node : myTestRoot.getAllTests()) {
    if (!node.isLeaf())     continue;
    total++;
    if (node.isPassed())     passed++;
  }
  Map<String,String> attrs=new HashMap<String,String>();
  attrs.put(ATTR_NAME,myRuntimeConfiguration.getName());
  Integer duration=myTestRoot.getDuration();
  if (duration != null) {
    attrs.put(ATTR_DURATION,String.valueOf(duration));
  }
  attrs.put(ATTR_TOTAL,String.valueOf(total));
  attrs.put(ATTR_PASSED,String.valueOf(passed));
  attrs.put(ATTR_FAILED,String.valueOf(total - passed));
  startElement(ELEM_RUN,attrs);
  if (myTestRoot.shouldSkipRootNodeForExport()) {
    for (    AbstractTestProxy node : myTestRoot.getChildren()) {
      processNode(node);
    }
  }
 else {
    processNode(myTestRoot);
  }
  endElement(ELEM_RUN);
  myResultHandler.endDocument();
}
