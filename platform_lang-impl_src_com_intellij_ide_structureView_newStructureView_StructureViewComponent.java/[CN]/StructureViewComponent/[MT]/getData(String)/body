{
  if (CommonDataKeys.PSI_ELEMENT.is(dataId)) {
    TreePath path=getSelectedUniquePath();
    if (path == null)     return null;
    DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
    Object element=getNodeValue(node);
    if (element instanceof StructureViewTreeElement) {
      element=((StructureViewTreeElement)element).getValue();
    }
    if (!(element instanceof PsiElement))     return null;
    if (!((PsiElement)element).isValid())     return null;
    return element;
  }
  if (LangDataKeys.PSI_ELEMENT_ARRAY.is(dataId)) {
    return convertToPsiElementsArray(getSelectedElements());
  }
  if (PlatformDataKeys.FILE_EDITOR.is(dataId)) {
    return myFileEditor;
  }
  if (PlatformDataKeys.CUT_PROVIDER.is(dataId)) {
    return myCopyPasteDelegator.getCutProvider();
  }
  if (PlatformDataKeys.COPY_PROVIDER.is(dataId)) {
    return myCopyPasteDelegator.getCopyProvider();
  }
  if (PlatformDataKeys.PASTE_PROVIDER.is(dataId)) {
    return myCopyPasteDelegator.getPasteProvider();
  }
  if (CommonDataKeys.NAVIGATABLE.is(dataId)) {
    Object[] selectedElements=getSelectedTreeElements();
    if (selectedElements == null || selectedElements.length == 0)     return null;
    if (selectedElements[0] instanceof Navigatable) {
      return selectedElements[0];
    }
  }
  if (PlatformDataKeys.HELP_ID.is(dataId)) {
    return getHelpID();
  }
  if (CommonDataKeys.PROJECT.is(dataId)) {
    return myProject;
  }
  return super.getData(dataId);
}
