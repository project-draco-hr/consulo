{
  myJavacCompiler=new EmbeddedJavac(tasksExecutor);
  myJavacCompiler.addClassProcessor(new EmbeddedJavac.ClassPostProcessor(){
    public void process(    CompileContext context,    OutputFileObject out){
      final Callbacks.Backend callback=DELTA_MAPPINGS_CALLBACK_KEY.get(context);
      if (callback != null) {
        final String className=out.getClassName();
        final OutputFileObject.Content content=out.getContent();
        final File srcFile=out.getSourceFile();
        if (srcFile != null && content != null) {
          final String outputPath=FileUtil.toSystemIndependentName(out.getFile().getPath());
          final String sourcePath=FileUtil.toSystemIndependentName(srcFile.getPath());
          try {
            context.getBuildDataManager().getOutputToSourceStorage().update(outputPath,sourcePath);
          }
 catch (          IOException ignored) {
          }
          final ClassReader reader=new ClassReader(content.getBuffer(),content.getOffset(),content.getLength());
synchronized (callback) {
            callback.associate(className,Callbacks.getDefaultLookup(sourcePath),reader);
          }
        }
      }
    }
  }
);
}
