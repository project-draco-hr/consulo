{
  List<String> cached=JAVAC_OPTIONS.get(context);
  if (cached == null) {
    loadJavacOptions(context);
    cached=JAVAC_OPTIONS.get(context);
  }
  final List<String> options=new ArrayList<String>(cached);
  final String langlevel=chunk.getModules().iterator().next().getLanguageLevel();
  if (!StringUtil.isEmpty(langlevel)) {
    options.add("-source");
    options.add(langlevel);
  }
  final BytecodeTargetConfiguration targetConfig=context.getProject().getCompilerConfiguration().getBytecodeTarget();
  String bytecodeTarget=null;
  for (  Module module : chunk.getModules()) {
    final String moduleTarget=getModuleTarget(targetConfig,module);
    if (moduleTarget == null) {
      continue;
    }
    if (bytecodeTarget == null) {
      bytecodeTarget=moduleTarget;
    }
 else {
      if (moduleTarget.compareTo(bytecodeTarget) < 0) {
        bytecodeTarget=moduleTarget;
      }
    }
  }
  if (bytecodeTarget != null) {
    options.add("-target");
    options.add(bytecodeTarget);
  }
  return options;
}
