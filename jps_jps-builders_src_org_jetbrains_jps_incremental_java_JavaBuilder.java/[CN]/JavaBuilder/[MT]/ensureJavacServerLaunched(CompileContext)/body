{
  final ExternalJavacDescriptor descriptor=ExternalJavacDescriptor.KEY.get(context);
  if (descriptor != null) {
    return descriptor.client;
  }
  final String hostString=System.getProperty(GlobalOptions.HOSTNAME_OPTION,"localhost");
  final int port=findFreePort();
  final int heapSize=getJavacServerHeapSize(context);
  String javaHome=SystemProperties.getJavaHome();
  int javaVersion=convertToNumber(SystemProperties.getJavaVersion());
  for (  JavaSdk sdk : context.getProjectDescriptor().getProjectJavaSdks()) {
    final String version=sdk.getVersion();
    final int ver=convertToNumber(version);
    if (ver > javaVersion) {
      javaVersion=ver;
      javaHome=sdk.getHomePath();
    }
  }
  final BaseOSProcessHandler processHandler=JavacServerBootstrap.launchJavacServer(javaHome,heapSize,port,Utils.getSystemRoot(),getCompilationVMOptions(context));
  final JavacServerClient client=new JavacServerClient();
  try {
    client.connect(hostString,port);
  }
 catch (  Throwable ex) {
    processHandler.destroyProcess();
    throw new Exception("Failed to connect to external javac process: ",ex);
  }
  ExternalJavacDescriptor.KEY.set(context,new ExternalJavacDescriptor(processHandler,client));
  return client;
}
