{
  final List<String> options=new ArrayList<String>();
  final List<String> vmOptions=new ArrayList<String>();
  final JpsProject project=context.getProjectDescriptor().getProject();
  final JpsJavaCompilerConfiguration compilerConfig=JpsJavaExtensionService.getInstance().getOrCreateCompilerConfiguration(project);
  final JpsJavaCompilerOptions compilerOptions=compilerConfig.getCurrentCompilerOptions();
  if (compilerOptions.DEBUGGING_INFO) {
    options.add("-g");
  }
  if (compilerOptions.DEPRECATION) {
    options.add("-deprecation");
  }
  if (compilerOptions.GENERATE_NO_WARNINGS) {
    options.add("-nowarn");
  }
  if (compilerOptions instanceof EclipseCompilerOptions) {
    final EclipseCompilerOptions eclipseOptions=(EclipseCompilerOptions)compilerOptions;
    if (eclipseOptions.PROCEED_ON_ERROR) {
      options.add("-proceedOnError");
    }
  }
  final String customArgs=compilerOptions.ADDITIONAL_OPTIONS_STRING;
  if (customArgs != null) {
    final StringTokenizer customOptsTokenizer=new StringTokenizer(customArgs," \t\r\n");
    boolean skip=false;
    while (customOptsTokenizer.hasMoreTokens()) {
      final String userOption=customOptsTokenizer.nextToken();
      if (FILTERED_OPTIONS.contains(userOption)) {
        skip=true;
        continue;
      }
      if (!skip) {
        if (!FILTERED_SINGLE_OPTIONS.contains(userOption)) {
          if (userOption.startsWith("-J-")) {
            vmOptions.add(userOption.substring("-J".length()));
          }
 else {
            options.add(userOption);
          }
        }
      }
    }
  }
  if (USE_ECLIPSE_COMPILER.isIn(context)) {
    for (    String option : options) {
      if (option.startsWith("-proceedOnError")) {
        Utils.PROCEED_ON_ERROR_KEY.set(context,Boolean.TRUE);
        break;
      }
    }
  }
  JAVAC_OPTIONS.set(context,options);
  JAVAC_VM_OPTIONS.set(context,vmOptions);
}
