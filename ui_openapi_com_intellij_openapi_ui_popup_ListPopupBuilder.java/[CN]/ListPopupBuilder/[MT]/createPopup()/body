{
  JPanel contentPane=new JPanel(new BorderLayout());
  if (myTitle != null) {
    JLabel label=new JLabel(" " + myTitle + " ");
    label.setHorizontalAlignment(JLabel.CENTER);
    contentPane.add(label,BorderLayout.NORTH);
  }
  myList.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  int modelSize=myList.getModel().getSize();
  if (modelSize >= 20) {
    myList.setVisibleRowCount(20);
  }
 else {
    myList.setVisibleRowCount(0);
  }
  ListScrollingUtil.installActions(myList);
  if (myList.getSelectedIndex() == -1) {
    myList.setSelectedIndex(0);
  }
  myMouseListener=new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (!e.isConsumed()) {
        closePopup(true);
      }
    }
  }
;
  myList.addMouseListener(myMouseListener);
  myList.addMouseMotionListener(new MouseMotionAdapter(){
    public void mouseMoved(    MouseEvent e){
      Point point=e.getPoint();
      int index=myList.locationToIndex(point);
      myList.setSelectedIndex(index);
    }
  }
);
  myKeyListener=new KeyAdapter(){
    public void keyTyped(    KeyEvent e){
      if (KeyEvent.VK_ENTER == e.getKeyChar()) {
        closePopup(true);
        e.consume();
      }
    }
    public void keyPressed(    KeyEvent e){
      KeyStroke keyStroke=KeyStroke.getKeyStroke(e.getKeyCode(),e.getModifiers());
      for (      KeyStroke keyStroke2 : myAdditionalKeystrokes) {
        if (keyStroke2.equals(keyStroke)) {
          e.consume();
          closePopup(true);
          return;
        }
      }
    }
  }
;
  myList.addKeyListener(myKeyListener);
  myList.registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      closePopup(false);
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  if (myContent == null) {
    contentPane.add(createScrollPane(myList),BorderLayout.CENTER);
  }
 else {
    contentPane.add(myContent);
  }
  myPopup=JBPopupFactory.getInstance().createComponentPopup(contentPane,myList,true);
  return myPopup;
}
