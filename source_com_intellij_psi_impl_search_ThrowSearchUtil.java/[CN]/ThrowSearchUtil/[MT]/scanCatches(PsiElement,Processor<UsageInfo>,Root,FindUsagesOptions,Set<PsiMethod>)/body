{
  while (elem != null) {
    final PsiElement parent=elem.getParent();
    if (elem instanceof PsiMethod) {
      final PsiMethod deepestSuperMethod=((PsiMethod)elem).findDeepestSuperMethod();
      final PsiMethod method=deepestSuperMethod != null ? deepestSuperMethod : (PsiMethod)elem;
      if (!processed.contains(method)) {
        processed.add(method);
        PsiSearchHelper helper=method.getManager().getSearchHelper();
        final PsiReference[] refs=MethodReferencesSearch.search(method,options.searchScope,true).toArray(PsiReference.EMPTY_ARRAY);
        for (int i=0; i != refs.length; ++i) {
          scanCatches(refs[i].getElement(),processor,root,options,processed);
        }
      }
      return;
    }
 else     if (elem instanceof PsiTryStatement) {
      final PsiTryStatement aTry=(PsiTryStatement)elem;
      final PsiParameter[] catches=aTry.getCatchBlockParameters();
      for (int i=0; i != catches.length; ++i) {
        if (!processExn(catches[i],processor,root)) {
          return;
        }
      }
    }
 else     if (parent instanceof PsiTryStatement) {
      final PsiTryStatement tryStmt=(PsiTryStatement)parent;
      if (elem != tryStmt.getTryBlock()) {
        elem=parent.getParent();
        continue;
      }
    }
    elem=parent;
  }
}
