{
  super(wizardContext);
  myModuleBuilder=moduleBuilder;
  ProjectSdksModel model=new ProjectSdksModel();
  Project project=wizardContext.getProject();
  model.reset(project,new Condition<Sdk>(){
    @Override public boolean value(    Sdk sdk){
      return sdk.getSdkType() instanceof JavaSdkType;
    }
  }
);
  myJdkComboBox=new JdkComboBox(model);
  JButton button=new JButton("\u001BNew...");
  myJdkComboBox.setSetupButton(button,project,model,project == null ? new JdkComboBox.NoneJdkComboBoxItem() : new JdkComboBox.ProjectJdkComboBoxItem(),null,false);
  JPanel jdkPanel=new JPanel(new BorderLayout());
  jdkPanel.add(myJdkComboBox);
  jdkPanel.add(button,BorderLayout.EAST);
  addField("Project \u001BSDK:",jdkPanel);
  if (moduleBuilder instanceof JavaModuleBuilder) {
    ComponentWithBrowseButton.BrowseFolderActionListener<JTextField> listener=new ComponentWithBrowseButton.BrowseFolderActionListener<JTextField>(IdeBundle.message("prompt.select.source.directory"),null,mySourcePath,project,BrowseFilesListener.SINGLE_DIRECTORY_DESCRIPTOR,TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT){
      @Override protected void onFileChoosen(      VirtualFile chosenFile){
        String contentEntryPath=myModuleBuilder.getContentEntryPath();
        String path=chosenFile.getPath();
        if (contentEntryPath != null) {
          int i=StringUtil.commonPrefixLength(contentEntryPath,path);
          mySourcePath.setText(path.substring(i));
        }
 else {
          mySourcePath.setText(path);
        }
      }
    }
;
    mySourcePath.addBrowseFolderListener(project,listener);
    myCreateSourceRoot.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        mySourcePath.setEnabled(myCreateSourceRoot.isSelected());
      }
    }
);
    addExpertPanel(myPanel);
  }
}
