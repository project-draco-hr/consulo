{
  final List<HighlightInfo> result=new ArrayList<HighlightInfo>();
  myFile.accept(new PsiRecursiveElementVisitor(){
    @Override public void visitElement(    PsiElement element){
      IElementType tokenType=element.getNode().getElementType();
      if (TokenSets.KEYWORDS.contains(tokenType)) {
        if (highlightKeyword(element,tokenType)) {
          addInfo(element,KEYWORD);
        }
      }
 else       if (!(element instanceof GroovyPsiElement || element instanceof PsiErrorElement)) {
        final TextAttributesKey attribute=getDeclarationAttribute(element);
        if (attribute != null) {
          addInfo(element,attribute);
        }
      }
 else {
        if (element instanceof GrLabel) {
          addInfo(element,LABEL);
        }
 else         if (element instanceof GrAnnotation) {
          addInfo(element,ANNOTATION);
        }
        super.visitElement(element);
      }
    }
    private void addInfo(    PsiElement element,    final TextAttributesKey attribute){
      result.add(HighlightInfo.createHighlightInfo(INFORMATION,element,null,attribute));
    }
  }
);
  toHighlight=result;
}
