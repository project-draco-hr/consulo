{
  if (index == segments.length) {
    return null;
  }
  final File[] children=parent.listFiles();
  if (children == null || children.length == 0) {
    return null;
  }
  String toMatch=segments[index];
  if (index == segments.length - 1) {
    toMatch+=".class";
    for (    File file : children) {
      if (file.getName().equals(toMatch)) {
        return file;
      }
    }
    return null;
  }
  String innerClassName=null;
  for (  File file : children) {
    if (file.isDirectory()) {
      if (toMatch.equals(file.getName())) {
        return findClassFile(file,segments,index + 1);
      }
    }
 else     if (file.getName().startsWith(toMatch)) {
      if (innerClassName == null) {
        final StringBuilder builder=new StringBuilder(segments[index]);
        for (int i=index + 1; i < segments.length; i++) {
          builder.append('$');
          builder.append(segments[i]);
        }
        builder.append(".class");
        innerClassName=builder.toString();
      }
      if (file.getName().equals(innerClassName)) {
        return file;
      }
    }
  }
  return null;
}
