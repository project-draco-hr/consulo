{
  while (lexer.getTokenType() != null) {
    TreeElement statement=parseStatement(lexer);
    if (statement != null) {
      elementToAdd.rawAddChildren(statement);
      continue;
    }
    IElementType tokenType=lexer.getTokenType();
    TreeElement tokenElement=ParseUtil.createTokenElement(lexer,myContext.getCharTable());
    lexer.advance();
    if (tokenType == JavaTokenType.RBRACE) {
      Label:       if (rbraceMode == RBRACE_IS_ERROR) {
      }
 else       if (rbraceMode == RBRACE_IS_END) {
        elementToAdd.rawAddChildren(tokenElement);
        return;
      }
 else       if (rbraceMode == LAST_RBRACE_IS_END) {
        if (lexer.getTokenType() == null) {
          elementToAdd.rawAddChildren(tokenElement);
          return;
        }
 else {
          break Label;
        }
      }
 else {
        LOG.assertTrue(false);
      }
    }
    String error;
    if (tokenType == JavaTokenType.ELSE_KEYWORD) {
      error=JavaErrorMessages.message("else.without.if");
    }
 else     if (tokenType == JavaTokenType.CATCH_KEYWORD) {
      error=JavaErrorMessages.message("catch.without.try");
    }
 else     if (tokenType == JavaTokenType.FINALLY_KEYWORD) {
      error=JavaErrorMessages.message("finally.without.try");
    }
 else {
      error=JavaErrorMessages.message("unexpected.token");
    }
    CompositeElement errorElement=Factory.createErrorElement(error);
    errorElement.rawAddChildren(tokenElement);
    elementToAdd.rawAddChildren(errorElement);
  }
}
