{
  final PsiCodeBlock containingScope=PsiTreeUtil.getParentOfType(variable,PsiCodeBlock.class,true,PsiClass.class);
  if (containingScope == null) {
    return false;
  }
  final PsiElement parent=variable.getParent();
  if (!(parent instanceof PsiDeclarationStatement)) {
    return false;
  }
  final PsiDeclarationStatement declarationStatement=(PsiDeclarationStatement)parent;
  PsiStatement nextStatement=null;
  final PsiStatement[] statements=containingScope.getStatements();
  for (int i=0; i < (statements.length - 1); i++) {
    if (statements[i].equals(declarationStatement)) {
      nextStatement=statements[i + 1];
      break;
    }
  }
  if (!(nextStatement instanceof PsiReturnStatement)) {
    return false;
  }
  final PsiReturnStatement returnStatement=(PsiReturnStatement)nextStatement;
  final PsiExpression returnValue=returnStatement.getReturnValue();
  if (!(returnValue instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)returnValue;
  final PsiElement referent=referenceExpression.resolve();
  if (referent == null || !referent.equals(variable)) {
    return false;
  }
  if (isVariableUsedInFollowingDeclarations(variable,declarationStatement)) {
    return false;
  }
  return true;
}
