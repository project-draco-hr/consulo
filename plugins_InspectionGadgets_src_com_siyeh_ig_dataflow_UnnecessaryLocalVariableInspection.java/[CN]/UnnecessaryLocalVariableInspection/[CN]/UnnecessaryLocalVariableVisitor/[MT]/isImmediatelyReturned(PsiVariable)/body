{
  final PsiCodeBlock containingScope=PsiTreeUtil.getParentOfType(variable,PsiCodeBlock.class);
  if (containingScope == null) {
    return false;
  }
  final PsiDeclarationStatement declarationStatement=PsiTreeUtil.getParentOfType(variable,PsiDeclarationStatement.class);
  if (declarationStatement == null) {
    return false;
  }
  PsiStatement nextStatement=null;
  final PsiStatement[] statements=containingScope.getStatements();
  for (int i=0; i < statements.length - 1; i++) {
    if (statements[i].equals(declarationStatement)) {
      nextStatement=statements[i + 1];
    }
  }
  if (!(nextStatement instanceof PsiReturnStatement)) {
    return false;
  }
  final PsiReturnStatement returnStatement=(PsiReturnStatement)nextStatement;
  final PsiExpression returnValue=returnStatement.getReturnValue();
  if (!(returnValue instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiElement referent=((PsiReference)returnValue).resolve();
  return !(referent == null || !referent.equals(variable));
}
