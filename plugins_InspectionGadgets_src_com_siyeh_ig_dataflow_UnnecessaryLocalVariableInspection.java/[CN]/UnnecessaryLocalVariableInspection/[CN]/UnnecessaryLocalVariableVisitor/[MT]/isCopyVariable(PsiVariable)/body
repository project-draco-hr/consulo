{
  final PsiExpression initializer=variable.getInitializer();
  if (!(initializer instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression reference=(PsiReferenceExpression)initializer;
  final PsiElement referent=reference.resolve();
  if (referent == null) {
    return false;
  }
  if (!(referent instanceof PsiLocalVariable || referent instanceof PsiParameter)) {
    return false;
  }
  final PsiCodeBlock containingScope=PsiTreeUtil.getParentOfType(variable,PsiCodeBlock.class);
  if (containingScope == null) {
    return false;
  }
  if (!variable.hasModifierProperty(PsiModifier.FINAL) && VariableAccessUtils.variableIsAssigned(variable,containingScope,false)) {
    return false;
  }
  final PsiVariable initialization=(PsiVariable)referent;
  if (!initialization.hasModifierProperty(PsiModifier.FINAL) && VariableAccessUtils.variableIsAssigned(initialization,containingScope,false)) {
    return false;
  }
  if (!initialization.hasModifierProperty(PsiModifier.FINAL) && variable.hasModifierProperty(PsiModifier.FINAL)) {
    if (VariableAccessUtils.variableIsUsedInInnerClass(variable,containingScope)) {
      return false;
    }
  }
  return true;
}
