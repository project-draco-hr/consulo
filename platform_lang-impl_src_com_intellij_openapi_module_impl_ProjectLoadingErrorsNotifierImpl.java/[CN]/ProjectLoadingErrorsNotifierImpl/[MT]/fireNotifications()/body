{
  final ConfigurationErrorDescription[] descriptions;
synchronized (myLock) {
    if (myErrors.isEmpty())     return;
    descriptions=myErrors.toArray(new ConfigurationErrorDescription[myErrors.size()]);
    myErrors.clear();
  }
  final String invalidElements=getInvalidElementsString(descriptions);
  final String errorText=ProjectBundle.message("error.message.configuration.cannot.load") + " " + invalidElements;
  final NotificationListener listener=new NotificationListener(){
    @NotNull public Continue perform(){
      final List<ConfigurationErrorDescription> validDescriptions=ContainerUtil.findAll(descriptions,new Condition<ConfigurationErrorDescription>(){
        public boolean value(        ConfigurationErrorDescription errorDescription){
          return errorDescription.isValid();
        }
      }
);
      RemoveInvalidElementsDialog.showDialog(myProject,CommonBundle.getErrorTitle(),invalidElements,validDescriptions);
      return Continue.REMOVE;
    }
    public Continue onRemove(){
      return Continue.LEAVE;
    }
  }
;
  myProject.getMessageBus().syncPublisher(Notifications.TOPIC).notify("project-configuration-error",errorText,"",NotificationType.ERROR,listener);
}
