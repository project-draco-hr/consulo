{
  final ConfigurationErrorDescription[] descriptions;
synchronized (myLock) {
    if (myErrors.isEmpty())     return;
    descriptions=myErrors.toArray(new ConfigurationErrorDescription[myErrors.size()]);
    myErrors.clear();
  }
  final String invalidElements=getInvalidElementsString(descriptions);
  final String errorText=ProjectBundle.message("error.message.configuration.cannot.load") + " " + invalidElements+ " <a href=\"\">Fix</a>";
  Notifications.Bus.notify(new Notification("Project Loading Error","Error Loading Project",errorText,NotificationType.ERROR,new NotificationListener(){
    public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      final List<ConfigurationErrorDescription> validDescriptions=ContainerUtil.findAll(descriptions,new Condition<ConfigurationErrorDescription>(){
        public boolean value(        ConfigurationErrorDescription errorDescription){
          return errorDescription.isValid();
        }
      }
);
      RemoveInvalidElementsDialog.showDialog(myProject,CommonBundle.getErrorTitle(),invalidElements,validDescriptions);
      notification.expire();
    }
  }
),myProject);
}
