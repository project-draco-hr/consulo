{
  try {
    if (myView.isProfileDefined()) {
      final ModifiableModel model=myView.getCurrentProfile().getModifiableModel();
      model.disableTool(myKey.toString(),myView.getProject());
      model.commit();
      myView.updateCurrentProfile();
    }
 else {
      final RefEntity[] selectedElements=myView.getTree().getSelectedElements();
      final Set<PsiElement> files=new HashSet<PsiElement>();
      final Project project=myView.getProject();
      final InspectionProjectProfileManager profileManager=InspectionProjectProfileManager.getInstance(project);
      for (      RefEntity selectedElement : selectedElements) {
        if (selectedElement instanceof RefElement) {
          final PsiElement element=((RefElement)selectedElement).getElement();
          files.add(element);
        }
      }
      ModifiableModel model=((InspectionProfileImpl)profileManager.getProjectProfileImpl()).getModifiableModel();
      for (      PsiElement element : files) {
        model.disableTool(myKey.toString(),element);
      }
      model.commit();
      DaemonCodeAnalyzer.getInstance(project).restart();
    }
  }
 catch (  IOException e1) {
    Messages.showErrorDialog(myView.getProject(),e1.getMessage(),CommonBundle.getErrorTitle());
  }
}
