{
  if (project.isDisposed() || !project.isOpen()) {
    return;
  }
  ExternalSystemManager<?,?,?,?,?> manager=ExternalSystemApiUtil.getManager(externalSystemId);
  if (!(manager instanceof ExternalSystemConfigurableAware)) {
    return;
  }
  String message=ExternalSystemApiUtil.buildErrorMessage(error);
  String title=ExternalSystemBundle.message("notification.project.refresh.fail.description",externalSystemId.getReadableName(),externalProjectName,message);
  String messageToShow=ExternalSystemBundle.message("notification.action.show.settings",externalSystemId.getReadableName());
  NotificationType notificationType=NotificationType.WARNING;
  final Configurable configurable=((ExternalSystemConfigurableAware)manager).getConfigurable(project);
  NotificationListener listener=new NotificationListener(){
    @Override public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      if (event.getEventType() != HyperlinkEvent.EventType.ACTIVATED) {
        return;
      }
      if ("configure".equals(event.getDescription())) {
        ShowSettingsUtil.getInstance().editConfigurable(project,configurable);
      }
 else       if (!StringUtil.isEmpty(event.getDescription())) {
        Matcher matcher=ERROR_LOCATION_PATTERN.matcher(event.getDescription());
        if (matcher.find()) {
          String file=matcher.group(1);
          String lineText=matcher.group(2);
          Integer line;
          try {
            line=Integer.valueOf(lineText);
          }
 catch (          NumberFormatException e) {
            line=0;
          }
          VirtualFile virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(file);
          if (virtualFile != null) {
            new OpenFileDescriptor(project,virtualFile,line - 1,-1).navigate(true);
          }
        }
      }
    }
  }
;
  for (  ExternalSystemNotificationExtension extension : ExternalSystemNotificationExtension.EP_NAME.getExtensions()) {
    if (!externalSystemId.equals(extension.getTargetExternalSystemId())) {
      continue;
    }
    ExternalSystemNotificationExtension.CustomizationResult customizationResult=extension.customize(project,error,ExternalSystemNotificationExtension.UsageHint.PROJECT_REFRESH);
    if (customizationResult == null) {
      continue;
    }
    if (customizationResult.getTitle() != null) {
      title=customizationResult.getTitle();
    }
    if (customizationResult.getMessage() != null) {
      messageToShow=customizationResult.getMessage();
    }
    if (customizationResult.getNotificationType() != null) {
      notificationType=customizationResult.getNotificationType();
    }
    if (customizationResult.getListener() != null) {
      listener=customizationResult.getListener();
    }
  }
  EditorNotifications.getInstance(project).updateAllNotifications();
  showNotification(title,messageToShow,notificationType,project,externalSystemId,listener);
}
