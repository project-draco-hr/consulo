{
  NotificationGroup group=ExternalSystemUtil.getToolWindowElement(NotificationGroup.class,project,ExternalSystemDataKeys.NOTIFICATION_GROUP,externalSystemId);
  if (group == null) {
    return;
  }
  ExternalSystemManager<?,?,?,?,?> manager=ExternalSystemApiUtil.getManager(externalSystemId);
  if (!(manager instanceof ExternalSystemConfigurableAware)) {
    return;
  }
  final Configurable configurable=((ExternalSystemConfigurableAware)manager).getConfigurable(project);
  EditorNotifications.getInstance(project).updateAllNotifications();
  final Notification notification=group.createNotification(ExternalSystemBundle.message("notification.project.refresh.fail.description",externalSystemId.getReadableName(),externalProjectName,message),ExternalSystemBundle.message("notification.action.show.settings",externalSystemId.getReadableName()),NotificationType.WARNING,new NotificationListener(){
    @Override public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      if (event.getEventType() != HyperlinkEvent.EventType.ACTIVATED) {
        return;
      }
      ShowSettingsUtil.getInstance().editConfigurable(project,configurable);
    }
  }
);
  applyNotification(notification,project);
}
