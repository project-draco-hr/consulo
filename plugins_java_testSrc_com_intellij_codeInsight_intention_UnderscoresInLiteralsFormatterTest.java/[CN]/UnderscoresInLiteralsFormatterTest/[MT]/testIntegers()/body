{
  assertEquals("0",LiteralFormatUtil.format("0",PsiType.INT));
  assertEquals("12",LiteralFormatUtil.format("12",PsiType.INT));
  assertEquals("123",LiteralFormatUtil.format("123",PsiType.INT));
  assertEquals("123L",LiteralFormatUtil.format("123L",PsiType.INT));
  assertEquals("1_234",LiteralFormatUtil.format("1234",PsiType.INT));
  assertEquals("123_456",LiteralFormatUtil.format("123456",PsiType.INT));
  assertEquals("1_234_567_890l",LiteralFormatUtil.format("1234567890l",PsiType.LONG));
  assertEquals("0x",LiteralFormatUtil.format("0x",PsiType.INT));
  assertEquals("0xL",LiteralFormatUtil.format("0xL",PsiType.LONG));
  assertEquals("0x1L",LiteralFormatUtil.format("0x1L",PsiType.LONG));
  assertEquals("0x1234",LiteralFormatUtil.format("0x1234",PsiType.INT));
  assertEquals("0x1234l",LiteralFormatUtil.format("0x1234l",PsiType.LONG));
  assertEquals("0x1_abcd",LiteralFormatUtil.format("0x1abcd",PsiType.INT));
  assertEquals("07",LiteralFormatUtil.format("07",PsiType.INT));
  assertEquals("0_777",LiteralFormatUtil.format("0777",PsiType.INT));
  assertEquals("077_777",LiteralFormatUtil.format("077777",PsiType.INT));
  assertEquals("0b",LiteralFormatUtil.format("0b",PsiType.INT));
  assertEquals("0b1010",LiteralFormatUtil.format("0b1010",PsiType.INT));
  assertEquals("0b0_1010",LiteralFormatUtil.format("0b01010",PsiType.INT));
  assertEquals("0b1010_1010",LiteralFormatUtil.format("0b10101010",PsiType.INT));
  assertEquals("0b1010_1010L",LiteralFormatUtil.format("0b10101010L",PsiType.LONG));
}
