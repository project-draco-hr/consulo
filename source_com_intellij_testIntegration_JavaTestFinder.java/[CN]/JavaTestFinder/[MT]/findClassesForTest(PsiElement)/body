{
  PsiClass klass=findSourceElement(element);
  if (klass == null)   return Collections.emptySet();
  List<Pair<PsiClass,Integer>> classesWithWeights=new ArrayList<Pair<PsiClass,Integer>>();
  GlobalSearchScope scope=GlobalSearchScope.moduleWithDependenciesScope(getModule(element));
  PsiShortNamesCache cache=JavaPsiFacade.getInstance(element.getProject()).getShortNamesCache();
  for (  Pair<String,Integer> eachNameWithWeight : collectPossibleClassNamesWithWeights(klass.getName())) {
    for (    PsiClass eachClass : cache.getClassesByName(eachNameWithWeight.first,scope)) {
      if (!TestUtil.isTestClass(eachClass)) {
        classesWithWeights.add(new Pair<PsiClass,Integer>(eachClass,eachNameWithWeight.second));
      }
    }
  }
  Collections.sort(classesWithWeights,new Comparator<Pair<PsiClass,Integer>>(){
    public int compare(    Pair<PsiClass,Integer> o1,    Pair<PsiClass,Integer> o2){
      return o2.second.compareTo(o1.second);
    }
  }
);
  List<PsiElement> result=new ArrayList<PsiElement>();
  for (  Pair<PsiClass,Integer> each : classesWithWeights) {
    result.add(each.first);
  }
  return result;
}
