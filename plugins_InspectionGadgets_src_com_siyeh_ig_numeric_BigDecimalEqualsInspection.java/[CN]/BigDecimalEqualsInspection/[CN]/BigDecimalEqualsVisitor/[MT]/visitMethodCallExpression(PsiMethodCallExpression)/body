{
  super.visitMethodCallExpression(expression);
  if (!MethodCallUtils.isEqualsCall(expression)) {
    return;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length == 0) {
    return;
  }
  final PsiExpression arg=arguments[0];
  if (!TypeUtils.expressionHasType(arg,"java.math.BigDecimal")) {
    return;
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (!TypeUtils.expressionHasType(qualifier,"java.math.BigDecimal")) {
    return;
  }
  final PsiElement context=expression.getParent();
  if (context instanceof PsiExpressionStatement) {
    return;
  }
  registerMethodCallError(expression);
}
