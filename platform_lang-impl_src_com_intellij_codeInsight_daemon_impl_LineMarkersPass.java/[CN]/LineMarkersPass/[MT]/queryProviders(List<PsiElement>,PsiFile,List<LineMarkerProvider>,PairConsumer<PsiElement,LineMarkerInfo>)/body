{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  Set<PsiFile> visitedInjectedFiles=new THashSet<>();
  for (int i=0; i < elements.size(); i++) {
    PsiElement element=elements.get(i);
    for (int j=0; j < providers.size(); j++) {
      ProgressManager.checkCanceled();
      LineMarkerProvider provider=providers.get(j);
      LineMarkerInfo info;
      try {
        info=provider.getLineMarkerInfo(element);
      }
 catch (      ProcessCanceledException|IndexNotReadyException e) {
        throw e;
      }
catch (      Exception e) {
        LOG.error(e);
        continue;
      }
      if (info != null) {
        consumer.consume(element,info);
      }
    }
    queryLineMarkersForInjected(element,containingFile,visitedInjectedFiles,consumer);
  }
  List<LineMarkerInfo> slowLineMarkers=new ArrayList<>();
  for (int j=0; j < providers.size(); j++) {
    ProgressManager.checkCanceled();
    LineMarkerProvider provider=providers.get(j);
    try {
      provider.collectSlowLineMarkers(elements,slowLineMarkers);
    }
 catch (    ProcessCanceledException|IndexNotReadyException e) {
      throw e;
    }
catch (    Exception e) {
      LOG.error(e);
      continue;
    }
    if (!slowLineMarkers.isEmpty()) {
      for (int k=0; k < slowLineMarkers.size(); k++) {
        LineMarkerInfo slowInfo=slowLineMarkers.get(k);
        PsiElement element=slowInfo.getElement();
        consumer.consume(element,slowInfo);
      }
      slowLineMarkers.clear();
    }
  }
}
