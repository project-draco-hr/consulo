{
  final InjectedLanguageManager manager=InjectedLanguageManager.getInstance(file.getProject());
  final List<LineMarkerInfo> injectedMarkers=new ArrayList<LineMarkerInfo>();
  final Set<PsiFile> injectedFiles=new THashSet<PsiFile>();
  for (  PsiElement element : elements) {
    InjectedLanguageUtil.enumerate(element,file,false,new PsiLanguageInjectionHost.InjectedPsiVisitor(){
      public void visit(      @NotNull final PsiFile injectedPsi,      @NotNull List<PsiLanguageInjectionHost.Shred> places){
        injectedFiles.add(injectedPsi);
      }
    }
);
  }
  for (  PsiFile injectedPsi : injectedFiles) {
    final Project project=injectedPsi.getProject();
    Document document=PsiDocumentManager.getInstance(project).getCachedDocument(injectedPsi);
    if (!(document instanceof DocumentWindow))     return;
    List<PsiElement> injElements=CollectHighlightsUtil.getElementsInRange(injectedPsi,0,injectedPsi.getTextLength());
    final List<LineMarkerProvider> providers=getMarkerProviders(injectedPsi.getLanguage(),project);
    processor.addLineMarkers(injElements,providers,injectedMarkers,progress);
    for (    final LineMarkerInfo<PsiElement> injectedMarker : injectedMarkers) {
      GutterIconRenderer gutterRenderer=injectedMarker.createGutterRenderer();
      TextRange injectedRange=new TextRange(injectedMarker.startOffset,injectedMarker.endOffset);
      List<TextRange> editables=manager.intersectWithAllEditableFragments(injectedPsi,injectedRange);
      for (      TextRange editable : editables) {
        TextRange hostRange=manager.injectedToHost(injectedPsi,editable);
        Icon icon=gutterRenderer == null ? null : gutterRenderer.getIcon();
        LineMarkerInfo converted=new LineMarkerInfo<PsiElement>(injectedMarker.getElement(),hostRange,icon,injectedMarker.updatePass,new Function<PsiElement,String>(){
          public String fun(          PsiElement element){
            return injectedMarker.getLineMarkerTooltip();
          }
        }
,injectedMarker.getNavigationHandler(),GutterIconRenderer.Alignment.RIGHT);
        result.add(converted);
      }
    }
    injectedMarkers.clear();
  }
}
