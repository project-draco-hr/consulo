{
  PsiElement[] children=scope.getChildren();
  for (  PsiElement child : children) {
    makeVariablesFinal(child,body);
    if (child instanceof PsiReferenceExpression) {
      if (child.getParent() instanceof PsiMethodCallExpression)       continue;
      if (PsiUtil.isAccessedForWriting((PsiReferenceExpression)child)) {
        continue;
      }
      PsiElement refElement=((PsiReferenceExpression)child).resolve();
      if (refElement instanceof PsiLocalVariable || refElement instanceof PsiParameter) {
        PsiVariable variable=(PsiVariable)refElement;
        final PsiModifierList modifierList=variable.getModifierList();
        if ((modifierList != null) && (modifierList.hasModifierProperty(PsiModifier.FINAL))) {
          continue;
        }
        PsiElement parent=variable.getParent();
        PsiMethod enclosingMethod=null;
        while (parent != null) {
          if (parent.equals(body))           break;
          if (parent instanceof PsiMethod) {
            enclosingMethod=(PsiMethod)parent;
          }
          parent=parent.getParent();
        }
        if ((parent == null) && canBeDeclaredFinal(variable,enclosingMethod)) {
          PsiUtil.setModifierProperty(variable,PsiModifier.FINAL,true);
        }
      }
    }
  }
}
