{
  PsiManager manager=container.getManager();
  PsiElementFactory factory=manager.getElementFactory();
  CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(project);
  @NonNls String text="Runnable runnable = new Runnable(){\npublic void run(){\n}};";
  PsiDeclarationStatement declarationStatement=(PsiDeclarationStatement)factory.createStatementFromText(text,null);
  declarationStatement=(PsiDeclarationStatement)codeStyleManager.reformat(declarationStatement);
  declarationStatement=(PsiDeclarationStatement)container.addAfter(declarationStatement,statements[statements.length - 1]);
  PsiVariable variable=(PsiVariable)declarationStatement.getDeclaredElements()[0];
  PsiNewExpression newExpression=(PsiNewExpression)variable.getInitializer();
  PsiElement[] children=newExpression.getChildren();
  PsiAnonymousClass anonymousClass=(PsiAnonymousClass)children[children.length - 1];
  PsiMethod method=anonymousClass.getMethods()[0];
  PsiCodeBlock body=method.getBody();
  body.addRange(statements[0],statements[statements.length - 1]);
  container.deleteChildRange(statements[0],statements[statements.length - 1]);
  makeVariablesFinal(body,body);
  TextRange range=variable.getNameIdentifier().getTextRange();
  return range;
}
