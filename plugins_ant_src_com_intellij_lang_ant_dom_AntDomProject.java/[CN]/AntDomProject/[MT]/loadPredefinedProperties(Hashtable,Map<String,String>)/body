{
  final Map<String,String> destination=new HashMap<String,String>();
  if (properties != null) {
    final Enumeration props=properties.keys();
    while (props.hasMoreElements()) {
      final String name=(String)props.nextElement();
      final String value=(String)properties.get(name);
      appendProperty(destination,name,value);
    }
  }
  final Map<String,String> envMap=System.getenv();
  for (  final String name : envMap.keySet()) {
    if (name.length() > 0) {
      final String value=envMap.get(name);
      appendProperty(destination,DEFAULT_ENVIRONMENT_PREFIX + name,value);
    }
  }
  if (externalProps != null) {
    for (    final String name : externalProps.keySet()) {
      final String value=externalProps.get(name);
      appendProperty(destination,name,value);
    }
  }
  String basedir=getProjectBasedirPath();
  if (basedir == null) {
    basedir=".";
  }
  if (!FileUtil.isAbsolute(basedir)) {
    final String containigFileDir=getContainingFileDir();
    if (containigFileDir != null) {
      try {
        basedir=new File(containigFileDir,basedir).getCanonicalPath();
      }
 catch (      IOException e) {
      }
    }
  }
  if (basedir != null) {
    appendProperty(destination,"basedir",FileUtil.toSystemIndependentName(basedir));
  }
  final AntInstallation installation=getAntInstallation();
  final String homeDir=installation.getHomeDir();
  if (homeDir != null) {
    appendProperty(destination,"ant.home",FileUtil.toSystemIndependentName(homeDir));
  }
  appendProperty(destination,"ant.version",installation.getVersion());
  final String projectName=getName().getRawText();
  appendProperty(destination,"ant.project.name",(projectName == null) ? "" : projectName);
  final Sdk jdkToRunWith=getTargetJdk();
  final String version=jdkToRunWith != null ? jdkToRunWith.getVersionString() : null;
  appendProperty(destination,"ant.java.version",version != null ? version : SystemInfo.JAVA_VERSION);
  final VirtualFile containingFile=getXmlTag().getContainingFile().getOriginalFile().getVirtualFile();
  if (containingFile != null) {
    final String antFilePath=containingFile.getPath();
    appendProperty(destination,"ant.file",antFilePath);
    if (projectName != null) {
      appendProperty(destination,"ant.file." + projectName,antFilePath);
    }
  }
  return destination;
}
