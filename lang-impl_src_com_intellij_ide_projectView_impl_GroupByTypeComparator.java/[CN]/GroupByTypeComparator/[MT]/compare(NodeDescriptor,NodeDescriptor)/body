{
  if (!isSortByType() && descriptor1 instanceof ResourceBundleNode) {
    final Collection<AbstractTreeNode> children=((ResourceBundleNode)descriptor1).getChildren();
    if (!children.isEmpty()) {
      descriptor1=children.iterator().next();
      descriptor1.update();
    }
  }
  if (!isSortByType() && descriptor2 instanceof ResourceBundleNode) {
    final Collection<AbstractTreeNode> children=((ResourceBundleNode)descriptor2).getChildren();
    if (!children.isEmpty()) {
      descriptor2=children.iterator().next();
      descriptor2.update();
    }
  }
  if (descriptor1 instanceof ModuleGroupNode != descriptor2 instanceof ModuleGroupNode) {
    return descriptor1 instanceof ModuleGroupNode ? -1 : 1;
  }
  if (descriptor1 instanceof ProjectViewModuleNode != descriptor2 instanceof ProjectViewModuleNode) {
    return descriptor1 instanceof ProjectViewModuleNode ? -1 : 1;
  }
  if (descriptor1 instanceof PsiDirectoryNode != descriptor2 instanceof PsiDirectoryNode) {
    return descriptor1 instanceof PsiDirectoryNode ? -1 : 1;
  }
  if (descriptor1 instanceof PackageElementNode != descriptor2 instanceof PackageElementNode) {
    return descriptor1 instanceof PackageElementNode ? -1 : 1;
  }
  if (isSortByType() && descriptor1 instanceof ClassTreeNode != descriptor2 instanceof ClassTreeNode) {
    return descriptor1 instanceof ClassTreeNode ? -1 : 1;
  }
  if (isSortByType() && descriptor1 instanceof ClassTreeNode && descriptor2 instanceof ClassTreeNode) {
    final PsiClass aClass1=((ClassTreeNode)descriptor1).getValue();
    final PsiClass aClass2=((ClassTreeNode)descriptor2).getValue();
    int pos1=getClassPosition(aClass1);
    int pos2=getClassPosition(aClass2);
    final int result=pos1 - pos2;
    if (result != 0)     return result;
  }
 else   if (isSortByType() && descriptor1 instanceof AbstractTreeNode && descriptor2 instanceof AbstractTreeNode&& (descriptor1 instanceof PsiFileNode || ((AbstractTreeNode)descriptor1).getValue() instanceof ResourceBundle)&& (descriptor2 instanceof PsiFileNode || ((AbstractTreeNode)descriptor2).getValue() instanceof ResourceBundle)) {
    String type1=descriptor1 instanceof PsiFileNode ? extension(((PsiFileNode)descriptor1).getValue()) : StdFileTypes.PROPERTIES.getDefaultExtension();
    String type2=descriptor2 instanceof PsiFileNode ? extension(((PsiFileNode)descriptor2).getValue()) : StdFileTypes.PROPERTIES.getDefaultExtension();
    if (type1 != null && type2 != null) {
      int result=type1.compareTo(type2);
      if (result != 0)       return result;
    }
  }
  if (isAbbreviatePackageNames()) {
    if (descriptor1 instanceof PsiDirectoryNode) {
      final PsiDirectory aDirectory1=((PsiDirectoryNode)descriptor1).getValue();
      final PsiDirectory aDirectory2=((PsiDirectoryNode)descriptor2).getValue();
      if (aDirectory1 != null && aDirectory2 != null) {
        final PsiDirectoryFactory factory=PsiDirectoryFactory.getInstance(aDirectory1.getProject());
        return factory.getQualifiedName(aDirectory1).compareToIgnoreCase(factory.getQualifiedName(aDirectory2));
      }
    }
 else     if (descriptor1 instanceof PackageElementNode) {
      final PackageElement packageElement1=((PackageElementNode)descriptor1).getValue();
      final PackageElement packageElement2=((PackageElementNode)descriptor2).getValue();
      if (packageElement1 != null && packageElement2 != null) {
        final PsiPackage aPackage1=packageElement1.getPackage();
        final PsiPackage aPackage2=packageElement2.getPackage();
        if (aPackage1 != null && aPackage2 != null) {
          return aPackage1.getQualifiedName().compareToIgnoreCase(aPackage2.getQualifiedName());
        }
      }
    }
  }
  return AlphaComparator.INSTANCE.compare(descriptor1,descriptor2);
}
