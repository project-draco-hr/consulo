{
  if (myShouldOptimizeImports) {
    myProcessor=new OptimizeImportsProcessor(myProject,myFile);
  }
  if (myProcessChangesTextOnly && !FormatChangedTextUtil.hasChanges(myFile)) {
    myNoChangesDetected=true;
  }
  myProcessor=mixWithReformatProcessor(myProcessor);
  if (myShouldRearrangeCode) {
    myProcessor=mixWithRearrangeProcessor(myProcessor);
  }
  if (shouldNotify()) {
    myProcessor.setCollectInfo(true);
    myProcessor.setPostRunnable(new Runnable(){
      @Override public void run(){
        String message=prepareMessage();
        if (!myEditor.isDisposed() && myEditor.getComponent().isShowing()) {
          HyperlinkListener hyperlinkListener=new HyperlinkAdapter(){
            @Override protected void hyperlinkActivated(            HyperlinkEvent e){
              AnAction action=ActionManager.getInstance().getAction("ShowReformatFileDialog");
              DataManager manager=DataManager.getInstance();
              if (manager != null) {
                DataContext context=manager.getDataContext(myEditor.getContentComponent());
                action.actionPerformed(AnActionEvent.createFromAnAction(action,null,"",context));
              }
            }
          }
;
          showHint(myEditor,message,hyperlinkListener);
        }
      }
    }
);
  }
  myProcessor.run();
}
