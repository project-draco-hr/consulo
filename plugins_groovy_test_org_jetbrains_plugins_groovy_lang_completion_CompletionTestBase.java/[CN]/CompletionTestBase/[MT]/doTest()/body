{
  final List<String> stringList=SimpleGroovyFileSetTestCase.readInput(getTestDataPath() + "/" + getTestName(true)+ ".test");
  final String fileName=getTestName(true) + "." + getExtension();
  myFixture.addFileToProject(fileName,stringList.get(0));
  myFixture.configureByFile(fileName);
  CompositeCompletionData.restrictCompletion(addReferenceVariants(),addKeywords());
  boolean old=CodeInsightSettings.getInstance().AUTOCOMPLETE_COMMON_PREFIX;
  CodeInsightSettings.getInstance().AUTOCOMPLETE_COMMON_PREFIX=false;
  CodeInsightSettings.getInstance().AUTOCOMPLETE_ON_CODE_COMPLETION=false;
  String result="";
  try {
    myFixture.completeBasic();
    final LookupImpl lookup=(LookupImpl)LookupManager.getActiveLookup(myFixture.getEditor());
    if (lookup != null) {
      LookupElement[] items=lookup.getItems();
      Arrays.sort(items);
      result="";
      for (      LookupElement item : items) {
        result=result + "\n" + item.getLookupString();
      }
      result=result.trim();
      LookupManager.getInstance(myFixture.getProject()).hideActiveLookup();
    }
  }
  finally {
    CodeInsightSettings.getInstance().AUTOCOMPLETE_ON_CODE_COMPLETION=true;
    CodeInsightSettings.getInstance().AUTOCOMPLETE_COMMON_PREFIX=old;
    CompositeCompletionData.restrictCompletion(true,true);
  }
  assertEquals(stringList.get(1),result);
}
