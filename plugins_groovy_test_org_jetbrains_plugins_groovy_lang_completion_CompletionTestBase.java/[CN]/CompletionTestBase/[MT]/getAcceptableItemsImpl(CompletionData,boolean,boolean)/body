{
  final Set<LookupItem> lookupSet=new LinkedHashSet<LookupItem>();
  final PsiElement elem=myFile.findElementAt(myOffset);
  String newFileText=myFile.getText().substring(0,myOffset + 1) + "IntellijIdeaRulezzz" + myFile.getText().substring(myOffset + 1);
  try {
    PsiFile newFile=TestUtils.createPseudoPhysicalFile(project,newFileText);
    PsiElement insertedElement=newFile.findElementAt(myOffset + 1);
    final int offset1=myEditor.getSelectionModel().hasSelection() ? myEditor.getSelectionModel().getSelectionStart() : myEditor.getCaretModel().getOffset();
    final int offset2=myEditor.getSelectionModel().hasSelection() ? myEditor.getSelectionModel().getSelectionEnd() : offset1;
    final CompletionContext context=new CompletionContext(project,myEditor,myFile,offset1,offset2);
    context.setPrefix(elem,context.startOffset,completionData);
    if (lookupSet.size() == 0) {
      if (addKeywords) {
        final Set<CompletionVariant> keywordVariants=new HashSet<CompletionVariant>();
        completionData.addKeywordVariants(keywordVariants,context,insertedElement);
        CompletionData.completeKeywordsBySet(lookupSet,keywordVariants,context,insertedElement);
      }
      if (addReferenceVariants) {
        final PsiReference ref=newFile.findReferenceAt(myOffset + 1);
        if (ref != null) {
          completionData.completeReference(ref,lookupSet,context,insertedElement);
        }
      }
    }
    ArrayList<LookupItem> lookupItems=new ArrayList<LookupItem>();
    final LookupItem[] items=lookupSet.toArray(new LookupItem[lookupSet.size()]);
    for (    LookupItem item : items) {
      if (CompletionUtil.checkName(item,context,false)) {
        lookupItems.add(item);
      }
    }
    return lookupItems.toArray(new LookupItem[0]);
  }
 catch (  IncorrectOperationException e) {
    e.printStackTrace();
    return new LookupItem[0];
  }
}
