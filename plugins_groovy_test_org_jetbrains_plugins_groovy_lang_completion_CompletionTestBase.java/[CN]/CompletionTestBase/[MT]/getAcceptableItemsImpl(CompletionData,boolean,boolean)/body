{
  final Set<LookupItem> lookupSet=new LinkedHashSet<LookupItem>();
  final PsiElement elem=myFile.findElementAt(myOffset);
  String newFileText=myFile.getText().substring(0,myOffset + 1) + "IntellijIdeaRulezzz" + myFile.getText().substring(myOffset + 1);
  PsiFile newFile=createFile(newFileText);
  PsiElement insertedElement=newFile.findElementAt(myOffset + 1);
  final int offset1=myEditor.getSelectionModel().hasSelection() ? myEditor.getSelectionModel().getSelectionStart() : myEditor.getCaretModel().getOffset();
  final int offset2=myEditor.getSelectionModel().hasSelection() ? myEditor.getSelectionModel().getSelectionEnd() : offset1;
  final CompletionContext context=new CompletionContext(myProject,myEditor,myFile,offset1,offset2);
  context.setPrefix(insertedElement,context.startOffset,completionData);
  if (lookupSet.size() == 0) {
    final PsiReference ref=newFile.findReferenceAt(myOffset + 1);
    if (addKeywords) {
      context.offset=offset1;
      final Set<CompletionVariant> keywordVariants=new HashSet<CompletionVariant>();
      completionData.addKeywordVariants(keywordVariants,context,insertedElement);
      CompletionData.completeKeywordsBySet(lookupSet,keywordVariants,context,insertedElement);
    }
    if (addReferenceVariants) {
      if (ref != null) {
        context.offset=myOffset + 1;
        completionData.completeReference(ref,lookupSet,context,insertedElement);
      }
    }
  }
  context.setPrefix(insertedElement,context.startOffset,completionData);
  ArrayList<LookupItem> lookupItems=new ArrayList<LookupItem>();
  final LookupItem[] items=lookupSet.toArray(new LookupItem[lookupSet.size()]);
  for (  LookupItem item : items) {
    if (CompletionUtil.checkName(item,context,false)) {
      lookupItems.add(item);
    }
  }
  return lookupItems.toArray(new LookupItem[lookupItems.size()]);
}
