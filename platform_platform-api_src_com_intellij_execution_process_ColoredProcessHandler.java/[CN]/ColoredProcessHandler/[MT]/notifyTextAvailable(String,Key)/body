{
  final List<Pair<String,Key>> textChunks=new ArrayList<Pair<String,Key>>();
  int pos=0;
  while (true) {
    int macroPos=text.indexOf(TEXT_ATTRS_PREFIX,pos);
    if (macroPos < 0)     break;
    if (pos != macroPos) {
      textChunks.add(Pair.create(text.substring(pos,macroPos),getCurrentOutputAttributes(outputType)));
    }
    final int macroEndPos=getEndMacroPos(text,macroPos);
    if (macroEndPos < 0) {
      break;
    }
    final String colorAttribute=text.substring(macroPos,macroEndPos).replaceAll(TEXT_ATTRS_PATTERN,";");
    myCurrentColor=ColoredOutputTypeRegistry.getInstance().getOutputKey(colorAttribute);
    pos=macroEndPos;
  }
  if (pos < text.length()) {
    textChunks.add(Pair.create(text.substring(pos),getCurrentOutputAttributes(outputType)));
  }
  textAvailable(textChunks);
}
