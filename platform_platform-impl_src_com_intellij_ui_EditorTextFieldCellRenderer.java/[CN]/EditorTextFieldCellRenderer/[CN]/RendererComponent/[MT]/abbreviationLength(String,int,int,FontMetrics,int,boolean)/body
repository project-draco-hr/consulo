{
  if (metrics.charWidth('m') * (end - start) <= maxWidth)   return end - start;
  int abbrWidth=metrics.charWidth(ABBREVIATION_SUFFIX);
  int abbrLength=0;
  CharSequenceSubSequence subSeq=new CharSequenceSubSequence(text,start,end);
  for (LineTokenizer lt=new LineTokenizer(subSeq); !lt.atEnd(); lt.advance()) {
    for (int i=0; i < lt.getLength(); i++, abbrLength++) {
      abbrWidth+=metrics.charWidth(subSeq.charAt(lt.getOffset() + i));
      if (abbrWidth >= maxWidth)       return abbrLength;
    }
    if (replaceSeparators && lt.getLineSeparatorLength() != 0) {
      abbrWidth+=metrics.charWidth(RETURN_SYMBOL);
      if (abbrWidth >= maxWidth)       return abbrLength;
      abbrLength+=lt.getLineSeparatorLength();
    }
  }
  return abbrLength;
}
