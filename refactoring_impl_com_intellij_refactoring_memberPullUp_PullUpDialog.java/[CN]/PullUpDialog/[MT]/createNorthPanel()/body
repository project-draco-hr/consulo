{
  JPanel panel=new JPanel();
  panel.setBorder(IdeBorderFactory.createBorder());
  panel.setLayout(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  gbConstraints.insets=new Insets(4,8,4,8);
  gbConstraints.weighty=1;
  gbConstraints.weightx=1;
  gbConstraints.gridy=0;
  gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
  gbConstraints.fill=GridBagConstraints.BOTH;
  gbConstraints.anchor=GridBagConstraints.WEST;
  final JLabel classComboLabel=new JLabel();
  panel.add(classComboLabel,gbConstraints);
  myClassCombo=new JComboBox(mySuperClasses.toArray());
  myClassCombo.setRenderer(new ClassCellRenderer());
  classComboLabel.setText(RefactoringBundle.message("pull.up.members.to",UsageViewUtil.getLongName(myClass)));
  PsiClass nearestBase=RefactoringHierarchyUtil.getNearestBaseClass(myClass,false);
  int indexToSelect=0;
  if (nearestBase != null) {
    indexToSelect=mySuperClasses.indexOf(nearestBase);
  }
  myClassCombo.setSelectedIndex(indexToSelect);
  myClassCombo.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        updateMemberInfo();
        if (myMemberSelectionPanel != null) {
          myMemberInfoModel.setSuperClass(getSuperClass());
          myMemberSelectionPanel.getTable().setMemberInfos(myMemberInfos);
          myMemberSelectionPanel.getTable().fireExternalDataChange();
        }
      }
    }
  }
);
  gbConstraints.gridy++;
  panel.add(myClassCombo,gbConstraints);
  return panel;
}
