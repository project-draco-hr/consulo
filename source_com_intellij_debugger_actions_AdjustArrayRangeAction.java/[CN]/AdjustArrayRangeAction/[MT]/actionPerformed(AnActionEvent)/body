{
  DebuggerContextImpl debuggerContext=DebuggerAction.getDebuggerContext(e.getDataContext());
  if (debuggerContext == null) {
    return;
  }
  DebugProcessImpl debugProcess=debuggerContext.getDebugProcess();
  if (debugProcess == null) {
    return;
  }
  Project project=debuggerContext.getProject();
  final DebuggerTreeNodeImpl selectedNode=getSelectedNode(e.getDataContext());
  if (selectedNode == null) {
    return;
  }
  NodeDescriptorImpl descriptor=selectedNode.getDescriptor();
  if (!(descriptor instanceof ValueDescriptorImpl && ((ValueDescriptorImpl)descriptor).isArray())) {
    return;
  }
  ArrayRenderer renderer=(ArrayRenderer)((ValueDescriptorImpl)selectedNode.getDescriptor()).getLastRenderer();
  String title=createNodeTitle("",selectedNode);
  String label=selectedNode.toString();
  int index=label.indexOf('=');
  if (index > 0) {
    title=title + " " + label.substring(index);
  }
  final ArrayRenderer cloneRenderer=renderer.clone();
  SingleConfigurableEditor editor=new SingleConfigurableEditor(project,new NamedArrayConfigurable(title,cloneRenderer)){
    protected Action[] createActions(){
      final String helpTopic=myConfigurable.getHelpTopic();
      return (helpTopic != null) ? new Action[]{getOKAction(),getCancelAction(),getHelpAction()} : new Action[]{getOKAction(),getCancelAction()};
    }
  }
;
  editor.show();
  if (editor.getExitCode() == DialogWrapper.OK_EXIT_CODE) {
    System.out.println("[AdjustArrayRangeAction] setting renderer + " + cloneRenderer + "@"+ cloneRenderer.hashCode());
    debugProcess.getManagerThread().invokeLater(new SuspendContextCommandImpl(debuggerContext.getSuspendContext()){
      public void contextAction() throws Exception {
        System.out.println("[Context Action] setting renderer + " + cloneRenderer + "@"+ cloneRenderer.hashCode());
        selectedNode.setRenderer(cloneRenderer);
      }
    }
);
  }
}
