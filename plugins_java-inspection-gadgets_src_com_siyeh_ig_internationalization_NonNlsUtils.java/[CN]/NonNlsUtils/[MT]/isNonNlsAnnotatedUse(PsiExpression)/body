{
  if (expression == null) {
    return false;
  }
  final Boolean value=getCachedValue(expression,KEY);
  if (value != null) {
    return value.booleanValue();
  }
  final PsiElement element=PsiTreeUtil.getParentOfType(expression,PsiExpressionList.class,PsiAssignmentExpression.class,PsiVariable.class,PsiReturnStatement.class);
  final boolean result;
  if (element instanceof PsiExpressionList) {
    final PsiExpressionList expressionList=(PsiExpressionList)element;
    result=isNonNlsAnnotatedParameter(expression,expressionList);
  }
 else   if (element instanceof PsiVariable) {
    result=isNonNlsAnnotatedModifierListOwner(element);
  }
 else   if (element instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)element;
    result=isAssignmentToNonNlsAnnotatedVariable(assignmentExpression);
  }
 else   if (element instanceof PsiReturnStatement) {
    final PsiMethod method=PsiTreeUtil.getParentOfType(element,PsiMethod.class);
    result=isNonNlsAnnotatedModifierListOwner(method);
  }
 else {
    result=false;
  }
  putCachedValue(expression,KEY,Boolean.valueOf(result));
  return result;
}
