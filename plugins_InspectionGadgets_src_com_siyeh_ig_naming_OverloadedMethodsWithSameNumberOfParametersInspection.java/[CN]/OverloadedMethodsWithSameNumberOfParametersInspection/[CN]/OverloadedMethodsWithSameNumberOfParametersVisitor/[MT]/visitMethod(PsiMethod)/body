{
  if (method.isConstructor()) {
    return;
  }
  if (method.getNameIdentifier() == null) {
    return;
  }
  final PsiParameterList parameterList=method.getParameterList();
  final int parameterCount=parameterList.getParametersCount();
  if (parameterCount == 0) {
    return;
  }
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null) {
    return;
  }
  final PsiMethod[] superMethods=method.findSuperMethods();
  if (superMethods.length > 0) {
    return;
  }
  final String methodName=method.getName();
  final PsiMethod[] sameNameMethods=aClass.findMethodsByName(methodName,true);
  for (  PsiMethod sameNameMethod : sameNameMethods) {
    if (method.equals(sameNameMethod)) {
      continue;
    }
    final PsiParameterList otherParameterList=sameNameMethod.getParameterList();
    if (parameterCount == otherParameterList.getParametersCount()) {
      if (ignoreInconvertibleTypes) {
        if (!areParameterTypesConvertible(parameterList,otherParameterList)) {
          return;
        }
      }
      registerMethodError(method);
      return;
    }
  }
}
