{
  if (method.isConstructor()) {
    return;
  }
  if (method.getNameIdentifier() == null) {
    return;
  }
  final int parameterCount=getParameterCount(method);
  if (parameterCount == 0) {
    return;
  }
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null) {
    return;
  }
  final PsiMethod[] superMethods=method.findSuperMethods();
  if (superMethods.length > 0) {
    return;
  }
  final String methodName=method.getName();
  final PsiMethod[] sameNameMethods=aClass.findMethodsByName(methodName,true);
  for (  PsiMethod sameNameMethod : sameNameMethods) {
    if (method.equals(sameNameMethod)) {
      continue;
    }
    if (parameterCount == getParameterCount(sameNameMethod)) {
      registerMethodError(method);
      return;
    }
  }
}
