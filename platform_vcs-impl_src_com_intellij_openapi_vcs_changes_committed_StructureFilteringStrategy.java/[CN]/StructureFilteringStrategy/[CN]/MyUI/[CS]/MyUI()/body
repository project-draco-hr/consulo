{
  myStructureTree=new Tree();
  myStructureTree.setRootVisible(false);
  myStructureTree.setShowsRootHandles(true);
  myStructureTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    final TreeSelectionEvent e){
      final List<FilePath> filePaths=new ArrayList<FilePath>(mySelection);
      mySelection.clear();
      final TreePath[] selectionPaths=myStructureTree.getSelectionPaths();
      if (selectionPaths != null) {
        for (        TreePath selectionPath : selectionPaths) {
          Collections.addAll(mySelection,((ChangesBrowserNode)selectionPath.getLastPathComponent()).getFilePathsUnder());
        }
      }
      if (Comparing.haveEqualElements(filePaths,mySelection))       return;
      for (      ChangeListener listener : myListeners) {
        listener.stateChanged(new ChangeEvent(this));
      }
    }
  }
);
  myScrollPane=ScrollPaneFactory.createScrollPane(myStructureTree);
  myBuilder=new TreeModelBuilder(myProject,false);
}
