{
  PsiClass aClass=null;
  if (item instanceof PsiClass) {
    aClass=(PsiClass)item;
  }
 else   if (item instanceof PsiType) {
    aClass=PsiUtil.resolveClassInType(((PsiType)item));
  }
  if (aClass != null) {
    if (aClass instanceof PsiTypeParameter) {
      if (((PsiTypeParameter)aClass).getOwner() instanceof PsiMethod) {
        int start=context.getStartOffset();
        PsiElement element=file.findElementAt(start);
        PsiMethod method=PsiTreeUtil.getParentOfType(element,PsiMethod.class);
        if (method != null) {
          PsiTypeParameterList paramList=method.getTypeParameterList();
          PsiTypeParameter[] params=paramList.getTypeParameters();
          for (int i=0; i < params.length; i++) {
            PsiTypeParameter param=params[i];
            if (param.getName().equals(aClass.getName()))             return;
          }
          try {
            toProcessChangedUpdate=false;
            paramList.add(aClass.copy());
            toProcessChangedUpdate=true;
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
          }
        }
      }
    }
 else {
      TextRange range=getCurrentVariableRange();
      if (range != null) {
        addImportForClass(aClass,range.getStartOffset(),range.getEndOffset());
      }
    }
  }
}
