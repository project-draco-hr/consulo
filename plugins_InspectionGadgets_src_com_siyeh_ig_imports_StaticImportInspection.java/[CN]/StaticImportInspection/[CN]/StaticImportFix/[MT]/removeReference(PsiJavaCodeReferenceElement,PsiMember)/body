{
  final PsiManager manager=reference.getManager();
  final Project project=manager.getProject();
  final JavaPsiFacade psiFacade=JavaPsiFacade.getInstance(project);
  final PsiElementFactory factory=psiFacade.getElementFactory();
  final PsiClass aClass=target.getContainingClass();
  final String qualifiedName=aClass.getQualifiedName();
  final String text=reference.getText();
  final String referenceText=qualifiedName + '.' + text;
  if (reference instanceof PsiReferenceExpression) {
    try {
      final PsiExpression newReference=factory.createExpressionFromText(referenceText,reference);
      reference.replace(newReference);
    }
 catch (    IncorrectOperationException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    final PsiJavaCodeReferenceElement referenceElement=factory.createReferenceElementByFQClassName(referenceText,reference.getResolveScope());
    try {
      reference.replace(referenceElement);
    }
 catch (    IncorrectOperationException e) {
      throw new RuntimeException(e);
    }
  }
}
