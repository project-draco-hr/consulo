{
  final PsiManager manager=reference.getManager();
  final Project project=manager.getProject();
  final JavaPsiFacade psiFacade=JavaPsiFacade.getInstance(project);
  final PsiElementFactory factory=psiFacade.getElementFactory();
  final PsiClass aClass=target.getContainingClass();
  if (aClass == null) {
    return;
  }
  final String qualifiedName=aClass.getQualifiedName();
  final String text=reference.getText();
  final String referenceText=qualifiedName + '.' + text;
  if (reference instanceof PsiReferenceExpression) {
    final PsiExpression newReference=factory.createExpressionFromText(referenceText,reference);
    final PsiElement insertedElement=reference.replace(newReference);
    JavaCodeStyleManager.getInstance(project).shortenClassReferences(insertedElement);
  }
 else {
    final PsiJavaCodeReferenceElement referenceElement=factory.createReferenceElementByFQClassName(referenceText,reference.getResolveScope());
    final PsiElement insertedElement=reference.replace(referenceElement);
    JavaCodeStyleManager.getInstance(project).shortenClassReferences(insertedElement);
  }
}
