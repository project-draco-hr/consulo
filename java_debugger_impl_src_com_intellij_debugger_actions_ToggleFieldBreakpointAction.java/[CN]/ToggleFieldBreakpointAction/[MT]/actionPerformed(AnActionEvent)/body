{
  Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null) {
    return;
  }
  final SourcePosition place=getPlace(e);
  if (place != null) {
    Document document=PsiDocumentManager.getInstance(project).getDocument(place.getFile());
    if (document != null) {
      DebuggerManagerEx debuggerManager=DebuggerManagerEx.getInstanceEx(project);
      BreakpointManager manager=debuggerManager.getBreakpointManager();
      final int offset=place.getOffset();
      final Breakpoint breakpoint=offset >= 0 ? manager.findBreakpoint(document,offset,FieldBreakpoint.CATEGORY) : null;
      if (breakpoint == null) {
        FieldBreakpoint fieldBreakpoint=manager.addFieldBreakpoint(document,offset);
        if (fieldBreakpoint != null) {
          if (DebuggerAction.isContextView(e)) {
            final DebuggerTreeNodeImpl selectedNode=DebuggerAction.getSelectedNode(e.getDataContext());
            if (selectedNode != null && selectedNode.getDescriptor() instanceof FieldDescriptorImpl) {
              ObjectReference object=((FieldDescriptorImpl)selectedNode.getDescriptor()).getObject();
              if (object != null) {
                long id=object.uniqueID();
                InstanceFilter[] instanceFilters=new InstanceFilter[]{InstanceFilter.create(Long.toString(id))};
                fieldBreakpoint.setInstanceFilters(instanceFilters);
                fieldBreakpoint.INSTANCE_FILTERS_ENABLED=true;
              }
            }
          }
          RequestManagerImpl.createRequests(fieldBreakpoint);
          DialogWrapper dialog=manager.createConfigurationDialog(fieldBreakpoint,null);
          dialog.show();
        }
      }
 else {
        manager.removeBreakpoint(breakpoint);
      }
    }
  }
}
