{
  if (myShouldNotShowPopup) {
    myShouldNotShowPopup=false;
    return;
  }
  final Ref<AnAction> selected=Ref.create();
  final Ref<AnAction> selectedTab=Ref.create();
  final Content[] contents=myManager.getContents();
  final Content selectedContent=myManager.getSelectedContent();
  final AnAction[] actions=new AnAction[contents.length];
  for (int i=0; i < actions.length; i++) {
    final Content content=contents[i];
    if (content instanceof TabbedContent) {
      final TabbedContent tabbedContent=(TabbedContent)content;
      final List<Pair<String,JComponent>> tabs=((TabbedContent)content).getTabs();
      final AnAction[] tabActions=new AnAction[tabs.size()];
      for (int j=0; j < tabActions.length; j++) {
        final int index=j;
        tabActions[j]=new DumbAwareAction(tabs.get(index).first){
          @RequiredDispatchThread @Override public void actionPerformed(          @NotNull AnActionEvent e){
            myManager.setSelectedContent(tabbedContent);
            tabbedContent.selectContent(index);
          }
        }
;
      }
      final DefaultActionGroup group=new DefaultActionGroup(tabActions);
      group.getTemplatePresentation().setText(((TabbedContent)content).getTitlePrefix());
      group.setPopup(true);
      actions[i]=group;
      if (content == selectedContent) {
        selected.set(group);
        final int selectedIndex=ContentUtilEx.getSelectedTab(tabbedContent);
        if (selectedIndex != -1) {
          selectedTab.set(tabActions[selectedIndex]);
        }
      }
    }
 else {
      actions[i]=new DumbAwareAction(content.getTabName()){
        @RequiredDispatchThread @Override public void actionPerformed(        @NotNull AnActionEvent e){
          myManager.setSelectedContent(content,true,true);
        }
      }
;
      if (content == selectedContent) {
        selected.set(actions[i]);
      }
    }
  }
  final ListPopup popup=JBPopupFactory.getInstance().createActionGroupPopup(null,new DefaultActionGroup(actions),DataManager.getInstance().getDataContext(myManager.getComponent()),false,true,true,null,-1,new Condition<AnAction>(){
    @Override public boolean value(    AnAction action){
      return action == selected.get() || action == selectedTab.get();
    }
  }
);
  getCurrentLayout().showContentPopup(popup);
  if (selectedContent instanceof TabbedContent) {
    new Alarm(Alarm.ThreadToUse.SWING_THREAD,popup).addRequest(new Runnable(){
      @Override public void run(){
        popup.handleSelect(true);
      }
    }
,30);
  }
}
