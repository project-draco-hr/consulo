{
  if (c.getClientProperty(ui) != null)   return;
  final Point[] myLastPoint=new Point[1];
  c.addMouseMotionListener(new MouseMotionAdapter(){
    public void mouseDragged(    final MouseEvent e){
      if (myLastPoint[0] == null)       return;
      final Window window=SwingUtilities.windowForComponent(c);
      if (window instanceof IdeFrame)       return;
      final Rectangle oldBounds=window.getBounds();
      final Point newPoint=e.getPoint();
      SwingUtilities.convertPointToScreen(newPoint,c);
      final Point offset=new Point(newPoint.x - myLastPoint[0].x,newPoint.y - myLastPoint[0].y);
      window.setLocation(oldBounds.x + offset.x,oldBounds.y + offset.y);
      myLastPoint[0]=newPoint;
    }
  }
);
  c.addMouseListener(new MouseAdapter(){
    public void mousePressed(    final MouseEvent e){
      myLastPoint[0]=e.getPoint();
      SwingUtilities.convertPointToScreen(myLastPoint[0],c);
      if (!e.isPopupTrigger()) {
        if (UIUtil.isCloseClick(e)) {
          ui.processHide(e);
        }
 else {
          ui.myWindow.fireActivated();
        }
      }
    }
  }
);
  myGroup=new DefaultActionGroup();
  if (c instanceof BaseLabel) {
    final Content content=((BaseLabel)c).getContent();
    if (content != null) {
      myGroup.add(ui.myShowContent);
      myGroup.addSeparator();
      myGroup.add(new TabbedContentAction.CloseAction(content));
      myGroup.add(ui.myCloseAllAction);
      myGroup.add(new TabbedContentAction.CloseAllButThisAction(content));
      myGroup.addSeparator();
      if (content.isPinnable()) {
        myGroup.add(PinToolwindowTabAction.getPinAction());
        myGroup.addSeparator();
      }
      myGroup.add(ui.myNextTabAction);
      myGroup.add(ui.myPreviousTabAction);
      myGroup.addSeparator();
    }
  }
  c.addMouseListener(new PopupHandler(){
    public void invokePopup(    final Component comp,    final int x,    final int y){
      ui.showContextMenu(comp,x,y,ui.myWindow.getPopupGroup());
    }
  }
);
  c.putClientProperty(ui,Boolean.TRUE);
}
