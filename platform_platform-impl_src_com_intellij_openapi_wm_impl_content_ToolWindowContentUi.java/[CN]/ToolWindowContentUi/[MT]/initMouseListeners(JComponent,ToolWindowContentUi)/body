{
  if (c.getClientProperty(ui) != null)   return;
  final Point[] myLastPoint=new Point[1];
  c.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseDragged(    final MouseEvent e){
      if (myLastPoint[0] == null)       return;
      final Window window=SwingUtilities.windowForComponent(c);
      if (window instanceof IdeFrame)       return;
      final Point windowLocation=window.getLocationOnScreen();
      final Point newPoint=MouseInfo.getPointerInfo().getLocation();
      Point p=myLastPoint[0];
      windowLocation.translate(newPoint.x - p.x,newPoint.y - p.y);
      window.setLocation(windowLocation);
      myLastPoint[0]=newPoint;
    }
  }
);
  c.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    final MouseEvent e){
      myLastPoint[0]=MouseInfo.getPointerInfo().getLocation();
      if (!e.isPopupTrigger()) {
        if (!UIUtil.isCloseClick(e)) {
          ui.myWindow.fireActivated();
        }
      }
    }
    @Override public void mouseReleased(    MouseEvent e){
      if (!e.isPopupTrigger()) {
        if (UIUtil.isCloseClick(e,MouseEvent.MOUSE_RELEASED)) {
          ui.processHide(e);
        }
      }
    }
  }
);
  c.addMouseListener(new PopupHandler(){
    @Override public void invokePopup(    final Component comp,    final int x,    final int y){
      final Content content=c instanceof BaseLabel ? ((BaseLabel)c).getContent() : null;
      ui.showContextMenu(comp,x,y,ui.myWindow.getPopupGroup(),content);
    }
  }
);
  c.putClientProperty(ui,Boolean.TRUE);
}
