{
  if (!(artifact.getArtifactType() instanceof AndroidApplicationArtifactType) || mySigningMode != AndroidArtifactSigningMode.RELEASE_SIGNED) {
    return;
  }
  final String errorPrefix="[Artifact '" + artifact.getName() + "'] ";
  final Pair<PrivateKey,X509Certificate> pair=getPrivateKeyAndCertificate(context,errorPrefix);
  if (pair == null) {
    return;
  }
  final String artifactFilePath=artifact.getOutputFilePath();
  final String prefix="Cannot sign artifact " + artifact.getName() + ": ";
  if (artifactFilePath == null) {
    context.addMessage(CompilerMessageCategory.ERROR,prefix + "output path is not specified",null,-1,-1);
    return;
  }
  final File artifactFile=new File(artifactFilePath);
  if (!artifactFile.exists()) {
    context.addMessage(CompilerMessageCategory.ERROR,prefix + "file " + artifactFilePath+ " hasn't been generated",null,-1,-1);
    return;
  }
  File tmpDir=null;
  try {
    tmpDir=FileUtil.createTempDirectory("android_artifact","tmp");
    final File tmpArtifact=new File(tmpDir,"tmpArtifact.apk");
    FileUtil.copy(artifactFile,tmpArtifact);
    if (!FileUtil.delete(artifactFile)) {
      context.addMessage(CompilerMessageCategory.ERROR,"Cannot delete file " + artifactFile.getPath(),null,-1,-1);
      return;
    }
    AndroidCommonUtils.signApk(tmpArtifact,artifactFile,pair.getFirst(),pair.getSecond());
  }
 catch (  IOException e) {
    context.addMessage(CompilerMessageCategory.ERROR,prefix + "I/O error: " + e.getMessage(),null,-1,-1);
  }
catch (  GeneralSecurityException e) {
    AndroidCompileUtil.reportException(context,prefix,e);
  }
 finally {
    if (tmpDir != null) {
      FileUtil.delete(tmpDir);
    }
  }
}
