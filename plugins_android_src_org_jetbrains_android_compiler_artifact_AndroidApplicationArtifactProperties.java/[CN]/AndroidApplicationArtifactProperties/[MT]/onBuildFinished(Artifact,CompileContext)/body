{
  if (!(artifact.getArtifactType() instanceof AndroidApplicationArtifactType) || mySigningMode != AndroidArtifactSigningMode.RELEASE_SIGNED) {
    return;
  }
  final AndroidFacet facet=AndroidArtifactUtil.getPackagedFacet(context.getProject(),artifact);
  if (facet == null) {
    return;
  }
  final String artifactName=artifact.getName();
  final String messagePrefix="[Artifact '" + artifactName + "'] ";
  final Module module=facet.getModule();
  final AndroidPlatform platform=AndroidPlatform.getInstance(module);
  if (platform == null) {
    context.addMessage(CompilerMessageCategory.ERROR,messagePrefix + AndroidBundle.message("android.compilation.error.specify.platform",module.getName()),null,-1,-1);
    return;
  }
  final String sdkLocation=platform.getSdkData().getLocation();
  final String artifactFilePath=artifact.getOutputFilePath();
  final String keyStorePath=myKeyStoreUrl != null ? VfsUtilCore.urlToPath(myKeyStoreUrl) : "";
  final String keyStorePassword=myKeyStorePassword != null && myKeyStorePassword.length() > 0 ? getPlainKeystorePassword() : null;
  final String keyPassword=myKeyPassword != null && myKeyPassword.length() > 0 ? getPlainKeyPassword() : null;
  try {
    final Map<AndroidCompilerMessageKind,List<String>> messages=AndroidCommonUtils.buildArtifact(artifactName,messagePrefix,sdkLocation,artifactFilePath,keyStorePath,myKeyAlias,keyStorePassword,keyPassword);
    AndroidCompileUtil.addMessages(context,AndroidCompileUtil.toCompilerMessageCategoryKeys(messages),null);
  }
 catch (  GeneralSecurityException e) {
    AndroidCompileUtil.reportException(context,messagePrefix,e);
  }
catch (  IOException e) {
    AndroidCompileUtil.reportException(context,messagePrefix,e);
  }
}
