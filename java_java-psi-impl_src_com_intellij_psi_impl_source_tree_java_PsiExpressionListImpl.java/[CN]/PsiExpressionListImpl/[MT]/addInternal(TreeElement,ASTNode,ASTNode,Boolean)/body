{
  final CharTable treeCharTab=SharedImplUtil.findCharTableByTree(this);
  if (anchor == null) {
    if (before == null || before.booleanValue()) {
      anchor=findChildByRole(ChildRole.RPARENTH);
      if (anchor == null) {
        LeafElement lparenth=Factory.createSingleLeafElement(JavaTokenType.LPARENTH,"(",0,1,treeCharTab,getManager());
        super.addInternal(lparenth,lparenth,null,Boolean.FALSE);
        LeafElement rparenth=Factory.createSingleLeafElement(JavaTokenType.RPARENTH,")",0,1,treeCharTab,getManager());
        super.addInternal(rparenth,rparenth,null,Boolean.TRUE);
        anchor=findChildByRole(ChildRole.RPARENTH);
        LOG.assertTrue(anchor != null);
      }
      before=Boolean.TRUE;
    }
 else {
      anchor=findChildByRole(ChildRole.LPARENTH);
      if (anchor == null) {
        LeafElement lparenth=Factory.createSingleLeafElement(JavaTokenType.LPARENTH,"(",0,1,treeCharTab,getManager());
        super.addInternal(lparenth,lparenth,null,Boolean.FALSE);
        LeafElement rparenth=Factory.createSingleLeafElement(JavaTokenType.RPARENTH,")",0,1,treeCharTab,getManager());
        super.addInternal(rparenth,rparenth,null,Boolean.TRUE);
        anchor=findChildByRole(ChildRole.LPARENTH);
        LOG.assertTrue(anchor != null);
      }
      before=Boolean.FALSE;
    }
  }
  TreeElement firstAdded=super.addInternal(first,last,anchor,before);
  if (ElementType.EXPRESSION_BIT_SET.contains(first.getElementType())) {
    ASTNode element=first;
    for (ASTNode child=element.getTreeNext(); child != null; child=child.getTreeNext()) {
      if (child.getElementType() == JavaTokenType.COMMA)       break;
      if (ElementType.EXPRESSION_BIT_SET.contains(child.getElementType())) {
        TreeElement comma=Factory.createSingleLeafElement(JavaTokenType.COMMA,",",0,1,treeCharTab,getManager());
        super.addInternal(comma,comma,element,Boolean.FALSE);
        break;
      }
    }
    for (ASTNode child=element.getTreePrev(); child != null; child=child.getTreePrev()) {
      final IElementType t=child.getElementType();
      if (t == JavaTokenType.COMMA)       break;
      if (ElementType.EXPRESSION_BIT_SET.contains(t) || ElementType.JAVA_COMMENT_BIT_SET.contains(t)) {
        TreeElement comma=Factory.createSingleLeafElement(JavaTokenType.COMMA,",",0,1,treeCharTab,getManager());
        super.addInternal(comma,comma,child,Boolean.FALSE);
        break;
      }
    }
  }
  return firstAdded;
}
