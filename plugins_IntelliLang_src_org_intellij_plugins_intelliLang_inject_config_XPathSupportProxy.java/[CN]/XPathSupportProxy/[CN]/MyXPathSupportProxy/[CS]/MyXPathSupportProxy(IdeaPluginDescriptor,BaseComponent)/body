{
  final ClassLoader pluginLoader=plugin.getPluginClassLoader();
  final Class provClass=pluginLoader.loadClass("org.intellij.lang.xpath.context.ContextProvider");
  final Class ctxTypeClass=pluginLoader.loadClass("org.intellij.lang.xpath.context.ContextType");
  final Class xpathTypeClass=pluginLoader.loadClass("org.intellij.lang.xpath.psi.XPathType");
  final Field ctxField=ctxTypeClass.getField("INTERACTIVE");
  final Object ctxType=ctxField.get(null);
  final Field booleanField=xpathTypeClass.getField("BOOLEAN");
  final Object booleanType=booleanField.get(null);
  final Enhancer e=new Enhancer();
  e.setSuperclass(provClass);
  e.setInterfaces(new Class[]{_ContextProvider.class});
  final CompositeClassLoader loader=new CompositeClassLoader();
  loader.add(getClass().getClassLoader());
  loader.add(pluginLoader);
  e.setClassLoader(loader);
  e.setCallback(new MethodInterceptor(){
    @SuppressWarnings({"ConstantConditions","StringEquality"}) public Object intercept(    Object object,    Method method,    Object[] args,    MethodProxy methodProxy) throws Throwable {
      final String name=method.getName();
      if (name == "getContextType") {
        return ctxType;
      }
 else       if (name == "getExpectedType") {
        return booleanType;
      }
 else       if (Modifier.isAbstract(method.getModifiers())) {
        return null;
      }
 else {
        return methodProxy.invokeSuper(object,args);
      }
    }
  }
);
  myProvider=(_ContextProvider)e.create();
  final Enhancer e2=new Enhancer();
  e2.setClassLoader(loader);
  e2.setSuperclass(component.getClass().getSuperclass());
  e2.setInterfaces(new Class[]{_XPathSupport.class});
  e2.setCallback(new MethodInterceptor(){
    public Object intercept(    Object object,    Method method,    Object[] objects,    MethodProxy methodProxy) throws Throwable {
      try {
        return method.invoke(component,objects);
      }
 catch (      InvocationTargetException e1) {
        throw e1.getTargetException();
      }
    }
  }
);
  mySupport=(_XPathSupport)e2.create();
  mySupport.createXPath(null,"a",Collections.emptyList());
}
