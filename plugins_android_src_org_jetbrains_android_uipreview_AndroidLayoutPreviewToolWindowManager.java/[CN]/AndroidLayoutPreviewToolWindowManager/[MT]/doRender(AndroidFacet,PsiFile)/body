{
  if (myToolWindowForm == null) {
    return;
  }
  BufferedImage image=null;
  RenderingErrorMessage errorMessage=null;
  String warnMessage=null;
  final String imgPath=FileUtil.getTempDirectory() + "/androidLayoutPreview.png";
  try {
    if (AndroidPlatform.getInstance(facet.getModule()) == null) {
      throw new AndroidSdkNotConfiguredException();
    }
    final LayoutDeviceConfiguration deviceConfiguration=myToolWindowForm.getSelectedDeviceConfiguration();
    if (deviceConfiguration == null) {
      throw new RenderingException("Device is not specified");
    }
    final FolderConfiguration config=new FolderConfiguration();
    config.set(deviceConfiguration.getConfiguration());
    config.setUiModeQualifier(new UiModeQualifier(myToolWindowForm.getSelectedDockMode()));
    config.setNightModeQualifier(new NightModeQualifier(myToolWindowForm.getSelectedNightMode()));
    final LocaleData localeData=myToolWindowForm.getSelectedLocaleData();
    if (localeData == null) {
      throw new RenderingException("Locale is not specified");
    }
    config.setLanguageQualifier(new LanguageQualifier(localeData.getLanguage()));
    config.setRegionQualifier(new RegionQualifier(localeData.getRegion()));
    final IAndroidTarget target=myToolWindowForm.getSelectedTarget();
    final ThemeData theme=myToolWindowForm.getSelectedTheme();
    final float xdpi=deviceConfiguration.getDevice().getXDpi();
    final float ydpi=deviceConfiguration.getDevice().getYDpi();
    final String layoutXmlText=psiFile.getText();
    final VirtualFile layoutXmlFile=psiFile.getVirtualFile();
synchronized (RENDERING_LOCK) {
      final StringBuilder warnBuilder=new StringBuilder();
      if (target != null && theme != null && RenderUtil.renderLayout(myProject,layoutXmlText,layoutXmlFile,imgPath,target,facet,config,xdpi,ydpi,theme,warnBuilder)) {
        warnMessage=warnBuilder.toString();
        final File input=new File(imgPath);
        image=ImageIO.read(input);
      }
    }
  }
 catch (  RenderingException e) {
    LOG.debug(e);
    String message=e.getPresentableMessage();
    message=message != null ? message : AndroidBundle.message("android.layout.preview.default.error.message");
    final Throwable cause=e.getCause();
    errorMessage=cause != null ? new RenderingErrorMessage(message + ' ',"Details","",new Runnable(){
      @Override public void run(){
        showStackStace(cause);
      }
    }
) : new RenderingErrorMessage(message);
  }
catch (  IOException e) {
    LOG.info(e);
    final String message=e.getMessage();
    errorMessage=new RenderingErrorMessage("I/O error" + (message != null ? ": " + message : ""));
  }
catch (  AndroidSdkNotConfiguredException e) {
    LOG.debug(e);
    errorMessage=new RenderingErrorMessage("Please ","configure"," Android SDK",new Runnable(){
      @Override public void run(){
        AndroidSdkUtils.openModuleDependenciesConfigurable(facet.getModule());
      }
    }
);
  }
  final RenderingErrorMessage finalErrorMessage=errorMessage;
  final String finalWarnMessage=warnMessage;
  final BufferedImage finalImage=image;
  if (!myRenderingQueue.isEmpty()) {
    return;
  }
  final String fileName=psiFile.getName();
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      if (!myToolWindowReady || myToolWindowDisposed) {
        return;
      }
      myToolWindowForm.setErrorMessage(finalErrorMessage);
      myToolWindowForm.setWarnMessage(finalWarnMessage);
      if (finalErrorMessage == null) {
        myToolWindowForm.setImage(finalImage,fileName);
      }
      myToolWindowForm.updatePreviewPanel();
    }
  }
);
}
