{
  myToolWindowUpdateQueue.cancelAllUpdates();
  myToolWindowUpdateQueue.queue(new Update("update"){
    public void run(){
      if (!myToolWindowReady || myToolWindowDisposed) {
        return;
      }
      final Editor activeEditor=newEditor != null ? newEditor.getEditor() : null;
      if (myToolWindow == null) {
        if (activeEditor == null) {
          return;
        }
        initToolWindow();
      }
      if (activeEditor == null) {
        myToolWindowForm.setFile(null);
        myToolWindow.setAvailable(false,null);
        return;
      }
      final PsiFile psiFile=PsiDocumentManager.getInstance(myProject).getPsiFile(activeEditor.getDocument());
      if (psiFile == null) {
        myToolWindowForm.setFile(null);
        myToolWindow.setAvailable(false,null);
        return;
      }
      if (myToolWindowForm.getFile() != psiFile) {
        ApplicationManager.getApplication().saveAll();
        myToolWindowForm.setFile(psiFile);
        render(false);
      }
      myToolWindow.setAvailable(true,null);
      final boolean visible=AndroidLayoutPreviewToolWindowSettings.getInstance(myProject).getState().isVisible();
      if (visible) {
        myToolWindow.show(null);
      }
    }
  }
);
}
