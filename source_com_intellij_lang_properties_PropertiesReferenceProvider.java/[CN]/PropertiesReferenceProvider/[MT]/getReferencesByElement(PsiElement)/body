{
  final Object value;
  String bundleName=null;
  if (element instanceof PsiLiteralExpression) {
    PsiLiteralExpression literalExpression=(PsiLiteralExpression)element;
    value=literalExpression.getValue();
    final Map<String,Object> annotationParams=new HashMap<String,Object>();
    annotationParams.put(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER,null);
    if (I18nUtil.mustBePropertyKey(literalExpression,annotationParams)) {
      final Object resourceBundleName=annotationParams.get(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER);
      if (resourceBundleName instanceof PsiExpression) {
        PsiExpression expr=(PsiExpression)resourceBundleName;
        final Object bundleValue=expr.getManager().getConstantEvaluationHelper().computeConstantExpression(expr);
        bundleName=bundleValue == null ? null : bundleValue.toString();
      }
    }
  }
 else   if (element instanceof XmlAttributeValue) {
    if (PsiTreeUtil.getChildOfType(element,ELExpressionHolder.class) == null && PsiTreeUtil.getChildOfType(element,JspXmlTagBase.class) == null) {
      value=((XmlAttributeValue)element).getValue();
    }
 else {
      value=null;
    }
  }
 else {
    value=null;
  }
  if (value instanceof String) {
    String text=(String)value;
    PsiReference reference=new PropertyReference(text,element,bundleName);
    return new PsiReference[]{reference};
  }
  return PsiReference.EMPTY_ARRAY;
}
