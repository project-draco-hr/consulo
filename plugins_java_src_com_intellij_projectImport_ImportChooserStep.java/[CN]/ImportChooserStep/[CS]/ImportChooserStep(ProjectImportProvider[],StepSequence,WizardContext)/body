{
  super(context);
  myProviders=providers;
  mySequence=sequence;
  myImportFrom.setText(ProjectBundle.message("project.new.wizard.import.title",context.getPresentationName()));
  myCreateFromSources.setText(ProjectBundle.message("project.new.wizard.from.existent.sources.title",context.getPresentationName()));
  final DefaultListModel model=new DefaultListModel();
  for (  ProjectImportProvider provider : sorted(providers)) {
    if (provider instanceof ImportFromSourcesProvider) {
      myFromSourcesProvider=provider;
    }
 else {
      model.addElement(provider);
    }
  }
  if (myFromSourcesProvider == null) {
    myCreateFromSources.setVisible(false);
  }
  myList.setModel(model);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setCellRenderer(new DefaultListCellRenderer(){
    public Component getListCellRendererComponent(    final JList list,    final Object value,    final int index,    final boolean isSelected,    final boolean cellHasFocus){
      final Component rendererComponent=super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      setText(((ProjectImportProvider)value).getName());
      Icon icon=((ProjectImportProvider)value).getIcon();
      setIcon(icon);
      setDisabledIcon(IconLoader.getDisabledIcon(icon));
      return rendererComponent;
    }
  }
);
  ActionListener actionListener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (myImportFrom.isSelected()) {
        IdeFocusManager.getInstance(context.getProject()).requestFocus(myList,false);
      }
      updateSteps();
    }
  }
;
  myImportFrom.addActionListener(actionListener);
  myCreateFromSources.addActionListener(actionListener);
  myList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    final ListSelectionEvent e){
      updateSteps();
    }
  }
);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      context.requestNextStep();
      return true;
    }
  }
.installOn(myList);
}
