{
  List<PsiClass> list=null;
  String packageName=psiPackage.getQualifiedName();
  for (  PsiDirectory dir : psiPackage.getDirectories(scope)) {
    PsiClass[] classes=JavaDirectoryService.getInstance().getClasses(dir);
    if (classes.length == 0)     continue;
    if (list == null)     list=new ArrayList<PsiClass>();
    for (    PsiClass aClass : classes) {
      String qualifiedName=aClass.getQualifiedName();
      if (qualifiedName != null)       qualifiedName=StringUtil.getPackageName(qualifiedName);
      if (Comparing.strEqual(qualifiedName,packageName)) {
        if (shortName == null || shortName.equals(aClass.getName()))         list.add(aClass);
      }
    }
  }
  if (list == null) {
    return PsiClass.EMPTY_ARRAY;
  }
  if (list.size() > 1) {
    ContainerUtil.quickSort(list,new Comparator<PsiClass>(){
      @Override public int compare(      PsiClass o1,      PsiClass o2){
        VirtualFile file2=PsiUtilCore.getVirtualFile(o2);
        VirtualFile file1=PsiUtilCore.getVirtualFile(o1);
        return scope.compare(file2,file1);
      }
    }
);
  }
  return list.toArray(new PsiClass[list.size()]);
}
