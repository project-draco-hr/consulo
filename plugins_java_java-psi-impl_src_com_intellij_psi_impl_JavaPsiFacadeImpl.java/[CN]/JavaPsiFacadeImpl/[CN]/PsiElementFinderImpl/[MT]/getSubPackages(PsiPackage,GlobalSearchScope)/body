{
  final Map<String,PsiPackage> packagesMap=new HashMap<String,PsiPackage>();
  final String qualifiedName=psiPackage.getQualifiedName();
  for (  PsiDirectory dir : psiPackage.getDirectories(scope)) {
    PsiDirectory[] subDirs=dir.getSubdirectories();
    for (    PsiDirectory subDir : subDirs) {
      final PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage(subDir);
      if (aPackage != null) {
        final String subQualifiedName=aPackage.getQualifiedName();
        if (subQualifiedName.startsWith(qualifiedName) && !packagesMap.containsKey(subQualifiedName)) {
          packagesMap.put(aPackage.getQualifiedName(),aPackage);
        }
      }
    }
  }
  packagesMap.remove(qualifiedName);
  return packagesMap.values().toArray(new PsiPackage[packagesMap.size()]);
}
