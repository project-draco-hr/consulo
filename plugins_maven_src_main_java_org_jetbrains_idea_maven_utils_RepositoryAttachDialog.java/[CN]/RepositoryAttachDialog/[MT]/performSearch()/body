{
  final String text=getCoordinateText();
  if (myCoordinates.contains(text))   return false;
  if (myProgressIcon.isRunning())   return false;
  myProgressIcon.resume();
  RepositoryAttachHandler.searchArtifacts(myProject,text,new PairProcessor<Collection<Pair<MavenArtifactInfo,MavenRepositoryInfo>>,Boolean>(){
    public boolean process(    Collection<Pair<MavenArtifactInfo,MavenRepositoryInfo>> artifacts,    Boolean tooMany){
      if (myProgressIcon.isDisposed())       return true;
      myProgressIcon.suspend();
      final int prevSize=myCoordinates.size();
      for (      Pair<MavenArtifactInfo,MavenRepositoryInfo> each : artifacts) {
        myCoordinates.put(each.first.getGroupId() + ":" + each.first.getArtifactId()+ ":"+ each.first.getVersion(),each);
        if (each.second != null && !myRepositories.containsKey(each.second.getUrl())) {
          myRepositories.put(each.second.getUrl(),each.second);
        }
      }
      if (Boolean.TRUE.equals(tooMany)) {
        final Point point=new Point(myCombobox.getWidth() / 2,0);
        JBPopupFactory.getInstance().createHtmlTextBalloonBuilder("Too many results found, please refine your query.",MessageType.WARNING,null).setHideOnClickOutside(true).createBalloon().show(new RelativePoint(myCombobox,point),Balloon.Position.above);
      }
      updateComboboxSelection(prevSize != myCoordinates.size());
      return true;
    }
  }
);
  return true;
}
