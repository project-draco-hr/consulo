{
  final String text=getCoordinateText();
  if (myCoordinates.contains(text))   return false;
  if (myProgressIcon.isRunning())   return false;
  myProgressIcon.resume();
  RepositoryAttachHandler.searchArtifacts(myProject,text,new PairProcessor<Collection<Pair<MavenArtifactInfo,MavenRepositoryInfo>>,Boolean>(){
    public boolean process(    Collection<Pair<MavenArtifactInfo,MavenRepositoryInfo>> artifacts,    Boolean tooMany){
      if (myProgressIcon.isDisposed())       return false;
      if (tooMany != null)       myProgressIcon.suspend();
      final int prevSize=myCoordinates.size();
      for (      Pair<MavenArtifactInfo,MavenRepositoryInfo> each : artifacts) {
        myCoordinates.put(each.first.getGroupId() + ":" + each.first.getArtifactId()+ ":"+ each.first.getVersion(),each);
        if (each.second != null && !myRepositories.containsKey(each.second.getUrl())) {
          myRepositories.put(each.second.getUrl(),each.second);
        }
      }
      String title=getTitle();
      String tooManyMessage=": too many results found";
      if (tooMany != null) {
        boolean alreadyThere=title.endsWith(tooManyMessage);
        if (tooMany.booleanValue() && !alreadyThere) {
          setTitle(title + tooManyMessage);
        }
 else         if (!tooMany.booleanValue() && alreadyThere) {
          setTitle(title.substring(0,title.length() - tooManyMessage.length()));
        }
      }
      updateComboboxSelection(prevSize != myCoordinates.size());
      return true;
    }
  }
);
  return true;
}
