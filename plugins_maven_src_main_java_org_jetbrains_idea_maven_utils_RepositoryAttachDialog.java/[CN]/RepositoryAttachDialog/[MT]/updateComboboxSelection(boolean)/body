{
  final String prevFilter=myFilterString;
  final JTextComponent field=(JTextComponent)myCombobox.getEditor().getEditorComponent();
  final String prefix=field.getText();
  final int caret=field.getCaretPosition();
  myFilterString=prefix.toUpperCase();
  if (!force && myFilterString.equals(prevFilter))   return;
  myShownItems.clear();
  final boolean itemSelected=Comparing.equal(myCombobox.getSelectedItem(),prefix);
  if (itemSelected) {
    myShownItems.addAll(myCoordinates.keySet());
  }
 else {
    final String[] parts=myFilterString.split(" ");
    main:     for (    String coordinate : myCoordinates.keySet()) {
      final String candidate=coordinate.toUpperCase();
      for (      String part : parts) {
        if (!candidate.contains(part))         continue main;
      }
      myShownItems.add(coordinate);
    }
    if (myShownItems.isEmpty()) {
      myShownItems.addAll(myCoordinates.keySet());
    }
    myCombobox.setSelectedItem(null);
  }
  Collections.sort(myShownItems);
  ((CollectionComboBoxModel)myCombobox.getModel()).update();
  field.setText(prefix);
  field.setCaretPosition(caret);
  updateInfoLabel();
  if (myCombobox.getEditor().getEditorComponent().hasFocus()) {
    myCombobox.setPopupVisible(!myShownItems.isEmpty() && !itemSelected);
  }
}
