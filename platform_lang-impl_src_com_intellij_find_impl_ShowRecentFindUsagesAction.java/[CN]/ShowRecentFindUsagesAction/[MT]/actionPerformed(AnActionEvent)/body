{
  UsageView usageView=e.getData(UsageView.USAGE_VIEW_KEY);
  Project project=e.getData(CommonDataKeys.PROJECT);
  final FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(project)).getFindUsagesManager();
  List<ConfigurableUsageTarget> history=new ArrayList<ConfigurableUsageTarget>(findUsagesManager.getHistory().getAll());
  if (!history.isEmpty()) {
    history.remove(history.size() - 1);
    Collections.reverse(history);
  }
  if (history.isEmpty()) {
    history.add(null);
  }
  BaseListPopupStep<ConfigurableUsageTarget> step=new BaseListPopupStep<ConfigurableUsageTarget>(FindBundle.message("recent.find.usages.action.title"),history){
    @Override public Icon getIconFor(    final ConfigurableUsageTarget data){
      ItemPresentation presentation=data == null ? null : data.getPresentation();
      return presentation == null ? null : presentation.getIcon(false);
    }
    @Override @NotNull public String getTextFor(    final ConfigurableUsageTarget data){
      if (data == null) {
        return FindBundle.message("recent.find.usages.action.nothing");
      }
      return data.getLongDescriptiveName();
    }
    @Override public PopupStep onChosen(    final ConfigurableUsageTarget selectedValue,    final boolean finalChoice){
      return doFinalStep(new Runnable(){
        @Override public void run(){
          if (selectedValue != null) {
            findUsagesManager.rerunAndRecallFromHistory(selectedValue);
          }
        }
      }
);
    }
  }
;
  RelativePoint point;
  if (e.getInputEvent() instanceof MouseEvent) {
    point=new RelativePoint((MouseEvent)e.getInputEvent());
  }
 else {
    point=new RelativePoint(usageView.getComponent(),new Point(4,4));
  }
  JBPopupFactory.getInstance().createListPopup(step).show(point);
}
