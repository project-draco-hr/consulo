{
  handler.checkIsValid();
  if (myConverter == Converter.EMPTY_CONVERTER) {
    return getValueInner(handler,myConverter);
  }
  CachedValue<ConcurrentFactoryMap<Converter,Object>> value;
synchronized (handler) {
    value=handler.getUserData(DOM_VALUE_KEY);
    if (value == null) {
      final DomManagerImpl domManager=handler.getManager();
      final CachedValuesManager cachedValuesManager=PsiManager.getInstance(domManager.getProject()).getCachedValuesManager();
      handler.putUserData(DOM_VALUE_KEY,value=cachedValuesManager.createCachedValue(new CachedValueProvider<ConcurrentFactoryMap<Converter,Object>>(){
        public Result<ConcurrentFactoryMap<Converter,Object>> compute(){
          final ConcurrentFactoryMap<Converter,Object> map=new ConcurrentFactoryMap<Converter,Object>(){
            protected Object create(            final Converter key){
              return getValueInner(handler,key);
            }
          }
;
          return Result.create(map,PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT,domManager,ProjectRootManager.getInstance(domManager.getProject()));
        }
      }
,false));
    }
  }
  return value.getValue().get(myConverter);
}
