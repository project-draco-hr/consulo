{
  return ApplicationManager.getApplication().runReadAction(new Computable<Integer>(){
    public Integer compute(){
      int result=0;
      if (project.isDisposed() || files.isEmpty())       return 0;
      final List<VirtualFile> currentFiles=new ArrayList<VirtualFile>(files);
      if (scope.getRecursivelyDirtyDirectories().size() == 0) {
        final Set<FilePath> dirtyFiles=scope.getDirtyFiles();
        boolean cleanedDroppedFiles=false;
        for (        FilePath dirtyFile : dirtyFiles) {
          VirtualFile f=dirtyFile.getVirtualFile();
          if (f != null) {
            files.remove(f);
            if (f.isDirectory())             ++result;
          }
 else {
            if (!cleanedDroppedFiles) {
              cleanedDroppedFiles=true;
              for (              VirtualFile file : currentFiles) {
                if (fileDropped(project,file)) {
                  files.remove(file);
                  if (file.isDirectory())                   ++result;
                }
              }
            }
          }
        }
      }
 else {
        for (        VirtualFile file : currentFiles) {
          if (fileDropped(project,file) || scope.belongsTo(new FilePathImpl(file))) {
            files.remove(file);
            if (file.isDirectory())             ++result;
          }
        }
      }
      return result;
    }
  }
);
}
