{
  final String levelName=toolElement.getAttributeValue(InspectionProfileImpl.LEVEL_TAG);
  final ProfileManager profileManager=profile.getProfileManager();
  HighlightDisplayLevel level=HighlightDisplayLevel.find(((SeverityProvider)profileManager).getOwnSeverityRegistrar().getSeverity(levelName));
  if (level == null || level == HighlightDisplayLevel.DO_NOT_SHOW) {
    level=HighlightDisplayLevel.WARNING;
  }
  myDefaultState.setLevel(level);
  final String enabled=toolElement.getAttributeValue(InspectionProfileImpl.ENABLED_TAG);
  final boolean isEnabled=enabled != null && Boolean.parseBoolean(enabled);
  myEnabled=isEnabled;
  final String enabledTool=toolElement.getAttributeValue(ENABLED_TAG);
  myDefaultState.setEnabled(enabledTool != null ? Boolean.parseBoolean(enabledTool) : isEnabled);
  final InspectionProfileEntry tool=myDefaultState.getTool();
  tool.readSettings(toolElement);
  final List children=toolElement.getChildren(InspectionProfileImpl.SCOPE);
  if (!children.isEmpty()) {
    for (    Object sO : children) {
      final Element scopeElement=(Element)sO;
      final String scopeName=scopeElement.getAttributeValue(InspectionProfileImpl.NAME);
      if (scopeName != null) {
        final NamedScope namedScope=profileManager.getScopesManager().getScope(scopeName);
        if (namedScope != null) {
          final String errorLevel=scopeElement.getAttributeValue(InspectionProfileImpl.LEVEL_TAG);
          final String enabledInScope=scopeElement.getAttributeValue(InspectionProfileImpl.ENABLED_TAG);
          final InspectionProfileEntry InspectionProfileEntry=((InspectionProfileImpl)profile).myRegistrar.createInspectionTool(myShortName,tool);
          InspectionProfileEntry.readSettings(scopeElement);
          addTool(namedScope,InspectionProfileEntry,enabledInScope != null && Boolean.parseBoolean(enabledInScope),errorLevel != null ? HighlightDisplayLevel.find(((SeverityProvider)profileManager).getOwnSeverityRegistrar().getSeverity(errorLevel)) : level);
        }
      }
    }
  }
}
