{
  final String levelName=toolElement.getAttributeValue(InspectionProfileImpl.LEVEL_TAG);
  final ProfileManager profileManager=profile.getProfileManager();
  HighlightDisplayLevel level=HighlightDisplayLevel.find(((SeverityProvider)profileManager).getOwnSeverityRegistrar().getSeverity(levelName));
  if (level == null || level == HighlightDisplayLevel.DO_NOT_SHOW) {
    level=HighlightDisplayLevel.WARNING;
  }
  myDefaultState.setLevel(level);
  final String enabled=toolElement.getAttributeValue(InspectionProfileImpl.ENABLED_TAG);
  final boolean isEnabled=enabled != null && Boolean.parseBoolean(enabled);
  myEnabled=isEnabled;
  final String enabledTool=toolElement.getAttributeValue(ENABLED_TAG);
  myDefaultState.setEnabled(enabledTool != null ? Boolean.parseBoolean(enabledTool) : isEnabled);
  final InspectionProfileEntry tool=myDefaultState.getTool();
  tool.readSettings(toolElement);
  final List children=toolElement.getChildren(InspectionProfileImpl.SCOPE);
  if (!children.isEmpty()) {
    for (    Object sO : children) {
      final Element scopeElement=(Element)sO;
      final String scopeName=scopeElement.getAttributeValue(InspectionProfileImpl.NAME);
      if (scopeName != null) {
        final NamedScopesHolder scopesHolder=profileManager.getScopesManager();
        final NamedScope namedScope;
        if (scopesHolder != null) {
          namedScope=scopesHolder.getScope(scopeName);
        }
 else {
          final Project[] projects=ProjectManager.getInstance().getOpenProjects();
          if (projects.length > 0) {
            namedScope=NamedScopesHolder.getScope(projects[0],scopeName);
          }
 else {
            namedScope=NamedScopesHolder.getScope(ProjectManager.getInstance().getDefaultProject(),scopeName);
          }
        }
        final String errorLevel=scopeElement.getAttributeValue(InspectionProfileImpl.LEVEL_TAG);
        final String enabledInScope=scopeElement.getAttributeValue(InspectionProfileImpl.ENABLED_TAG);
        final InspectionProfileEntry copyTool=((InspectionProfileImpl)profile).myRegistrar.createInspectionTool(myShortName,tool);
        copyTool.readSettings(scopeElement);
        final HighlightDisplayLevel scopeLevel=errorLevel != null ? HighlightDisplayLevel.find(((SeverityProvider)profileManager).getOwnSeverityRegistrar().getSeverity(errorLevel)) : level;
        if (namedScope != null) {
          addTool(namedScope,copyTool,enabledInScope != null && Boolean.parseBoolean(enabledInScope),scopeLevel);
        }
 else {
          addTool(scopeName,copyTool,enabledInScope != null && Boolean.parseBoolean(enabledInScope),scopeLevel);
        }
      }
    }
  }
}
