{
  if (aClass.isInterface() || aClass.isAnnotationType()) {
    return;
  }
  if (!aClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  final PsiClass superClass=aClass.getSuperClass();
  if (superClass == null) {
    return;
  }
  if (superClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  final String superclassName=superClass.getQualifiedName();
  if ("java.lang.Object".equals(superclassName)) {
    return;
  }
  registerClassError(aClass);
}
