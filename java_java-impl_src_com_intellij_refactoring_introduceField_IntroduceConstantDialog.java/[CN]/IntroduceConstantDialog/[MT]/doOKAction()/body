{
  final String targetClassName=getTargetClassName();
  PsiClass newClass=myParentClass;
  if (!"".equals(targetClassName) && !Comparing.strEqual(targetClassName,myParentClass.getQualifiedName())) {
    newClass=JavaPsiFacade.getInstance(myProject).findClass(targetClassName,GlobalSearchScope.projectScope(myProject));
    if (newClass == null) {
      if (Messages.showOkCancelDialog(myProject,RefactoringBundle.message("class.does.not.exist.in.the.project"),IntroduceConstantHandler.REFACTORING_NAME,Messages.getErrorIcon()) != OK_EXIT_CODE) {
        return;
      }
      myDestinationClass=new BaseExpressionToFieldHandler.TargetDestination(targetClassName,myParentClass);
    }
 else {
      myDestinationClass=new BaseExpressionToFieldHandler.TargetDestination(newClass);
    }
  }
  String fieldName=getEnteredName();
  String errorString=null;
  if ("".equals(fieldName)) {
    errorString=RefactoringBundle.message("no.field.name.specified");
  }
 else   if (!JavaPsiFacade.getInstance(myProject).getNameHelper().isIdentifier(fieldName)) {
    errorString=RefactoringMessageUtil.getIncorrectIdentifierMessage(fieldName);
  }
 else   if (newClass != null && !myParentClass.getLanguage().equals(newClass.getLanguage())) {
    errorString=RefactoringBundle.message("move.to.different.language",UsageViewUtil.getType(myParentClass),myParentClass.getQualifiedName(),newClass.getQualifiedName());
  }
  if (errorString != null) {
    CommonRefactoringUtil.showErrorMessage(IntroduceFieldHandler.REFACTORING_NAME,errorString,HelpID.INTRODUCE_FIELD,myProject);
    return;
  }
  if (newClass != null) {
    PsiField oldField=newClass.findFieldByName(fieldName,true);
    if (oldField != null) {
      int answer=Messages.showYesNoDialog(myProject,RefactoringBundle.message("field.exists",fieldName,oldField.getContainingClass().getQualifiedName()),IntroduceFieldHandler.REFACTORING_NAME,Messages.getWarningIcon());
      if (answer != 0) {
        return;
      }
    }
  }
  JavaRefactoringSettings.getInstance().INTRODUCE_CONSTANT_VISIBILITY=getFieldVisibility();
  RecentsManager.getInstance(myProject).registerRecentEntry(RECENTS_KEY,targetClassName);
  super.doOKAction();
}
