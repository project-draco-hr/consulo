{
  PsiClassType expectedType=null;
  PsiExpression expr=null;
  nextMethod:   for (int i=0; i < candidates.length && expectedType == null; i++) {
    ResolveResult candidate=candidates[i];
    PsiSubstitutor substitutor=candidate.getSubstitutor();
    PsiParameter[] parameters=((PsiMethod)candidate.getElement()).getParameterList().getParameters();
    if (parameters.length != expressions.length)     continue;
    for (int j=0; j < expressions.length; j++) {
      PsiExpression expression=expressions[j];
      if (expression.getType() != null) {
        PsiType paramType=parameters[j].getType();
        if (paramType != null) {
          paramType=substitutor != null ? substitutor.substitute(paramType) : paramType;
          if (paramType.isAssignableFrom(expression.getType()))           continue;
          if (paramType instanceof PsiClassType) {
            if (expectedType == null && findWrapper(expression.getType(),(PsiClassType)paramType) != null) {
              expectedType=(PsiClassType)paramType;
              expr=expression;
            }
 else {
              expectedType=null;
              expr=null;
              continue nextMethod;
            }
          }
        }
      }
    }
  }
  if (expectedType != null) {
    QuickFixAction.registerQuickFixAction(highlightInfo,expr.getTextRange(),new WrapExpressionFix(expectedType,expr),null);
  }
}
