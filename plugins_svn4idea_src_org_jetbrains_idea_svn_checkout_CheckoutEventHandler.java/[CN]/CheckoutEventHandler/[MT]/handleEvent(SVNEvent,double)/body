{
  final String path=SvnUtil.getPathForProgress(event);
  if (path == null) {
    return;
  }
  if (event.getAction() == SVNEventAction.UPDATE_EXTERNAL) {
    myExternalsCount++;
    ProgressManager.progress(SvnBundle.message("progress.text2.fetching.external.location",event.getFile().getAbsolutePath()),"");
  }
 else   if (event.getAction() == SVNEventAction.UPDATE_ADD) {
    ProgressManager.progress2(SvnBundle.message(myIsExport ? "progress.text2.exported" : "progress.text2.checked.out",event.getFile().getName(),myCnt));
    ++myCnt;
  }
 else   if (event.getAction() == SVNEventAction.UPDATE_COMPLETED) {
    myExternalsCount--;
    ProgressManager.progress2((SvnBundle.message(myIsExport ? "progress.text2.exported.revision" : "progress.text2.checked.out.revision",event.getRevision())));
    if (myExternalsCount == 0 && event.getRevision() >= 0 && myVCS != null) {
      myExternalsCount=1;
      Project project=myVCS.getProject();
      if (project != null) {
        StatusBar.Info.set(SvnBundle.message(myIsExport ? "progress.text2.exported.revision" : "status.text.checked.out.revision",event.getRevision()),project);
      }
    }
  }
 else   if (event.getAction() == SVNEventAction.COMMIT_ADDED) {
    ProgressManager.progress2((SvnBundle.message("progress.text2.adding",path)));
  }
 else   if (event.getAction() == SVNEventAction.COMMIT_DELTA_SENT) {
    ProgressManager.progress2((SvnBundle.message("progress.text2.transmitting.delta",path)));
  }
}
