{
  List<GroovyStructureViewElement> children=new ArrayList<GroovyStructureViewElement>();
  final GrTypeDefinition typeDefinition=(GrTypeDefinition)myElement;
  GrMembersDeclaration[] declarations=typeDefinition.getMemberDeclarations();
  final List<PsiMethod> allMethods=new ArrayList<PsiMethod>(Arrays.asList(typeDefinition.getAllMethods()));
  for (  GrMembersDeclaration declaration : declarations) {
    if (declaration instanceof GrVariableDeclaration) {
      GroovyStructureElementUtils.addVariables(children,(GrVariableDeclaration)declaration);
    }
 else     if (declaration instanceof GrMethod) {
      children.add(new GroovyMethodStructureViewElement(((GrMethod)declaration),false));
      allMethods.remove(declaration);
    }
  }
  for (  PsiMethod superMethod : allMethods) {
    children.add(new GroovyMethodStructureViewElement(superMethod,true));
  }
  return children.toArray(new GroovyStructureViewElement[children.size()]);
}
