{
  if (!myElement.isValid()) {
    return EMPTY_ARRAY;
  }
  Set<GroovyStructureViewElement> children=new LinkedHashSet<GroovyStructureViewElement>();
  final GrTypeDefinition typeDefinition=(GrTypeDefinition)myElement;
  for (  PsiClass innerClass : typeDefinition.getInnerClasses()) {
    if (innerClass instanceof GrTypeDefinition) {
      children.add(new GroovyTypeDefinitionStructureViewElement((GrTypeDefinition)innerClass));
    }
  }
  Set<PsiField> fields=new HashSet<PsiField>();
  ContainerUtil.addAll(fields,typeDefinition.getFields());
  for (  PsiField field : typeDefinition.getAllFields()) {
    final boolean contains=fields.contains(field);
    if (contains || !field.hasModifierProperty(PsiModifier.PRIVATE)) {
      children.add(new GroovyVariableStructureViewElement(field,!contains));
    }
  }
  Set<PsiMethod> methods=new HashSet<PsiMethod>();
  ContainerUtil.addAll(methods,typeDefinition.getGroovyMethods());
  for (  PsiMethod method : typeDefinition.getAllMethods()) {
    if (!method.isPhysical())     continue;
    if (method instanceof GrReflectedMethod) {
      method=((GrReflectedMethod)method).getBaseMethod();
    }
    if (methods.contains(method)) {
      children.add(new GroovyMethodStructureViewElement(method,false));
    }
 else {
      children.add(new GroovyMethodStructureViewElement(method,true));
    }
  }
  return children.toArray(new GroovyStructureViewElement[children.size()]);
}
