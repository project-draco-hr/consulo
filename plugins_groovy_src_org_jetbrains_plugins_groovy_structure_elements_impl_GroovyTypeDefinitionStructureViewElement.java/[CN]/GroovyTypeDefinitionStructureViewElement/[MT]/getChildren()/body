{
  List<GroovyStructureViewElement> children=new ArrayList<GroovyStructureViewElement>();
  final GrTypeDefinition typeDefinition=(GrTypeDefinition)myElement;
  for (  PsiClass innerClass : typeDefinition.getInnerClasses()) {
    if (innerClass instanceof GrTypeDefinition) {
      children.add(new GroovyTypeDefinitionStructureViewElement((GrTypeDefinition)innerClass));
    }
  }
  for (  GrField field : typeDefinition.getFields()) {
    children.add(new GroovyVariableStructureViewElement(field));
  }
  List<PsiMethod> methods=Arrays.asList(typeDefinition.getMethods());
  for (  PsiMethod method : typeDefinition.getAllMethods()) {
    if (method instanceof GrSyntheticMethod)     continue;
    if (methods.contains(method)) {
      children.add(new GroovyMethodStructureViewElement(method,false));
    }
 else {
      children.add(new GroovyMethodStructureViewElement(method,true));
    }
  }
  return children.toArray(new GroovyStructureViewElement[children.size()]);
}
