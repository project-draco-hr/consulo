{
  if (refEntity instanceof RefMethod) {
    final RefMethod refMethod=(RefMethod)refEntity;
    if (refMethod.isConstructor())     return null;
    if (refMethod.hasSuperMethods())     return null;
    String returnValue=refMethod.getReturnValueIfSame();
    if (returnValue != null) {
      final String message;
      if (refMethod.getDerivedMethods().isEmpty()) {
        message=InspectionsBundle.message("inspection.same.return.value.problem.descriptor","<code>" + returnValue + "</code>");
      }
 else       if (refMethod.hasBody()) {
        message=InspectionsBundle.message("inspection.same.return.value.problem.descriptor1","<code>" + returnValue + "</code>");
      }
 else {
        message=InspectionsBundle.message("inspection.same.return.value.problem.descriptor2","<code>" + returnValue + "</code>");
      }
      return new ProblemDescriptor[]{manager.createProblemDescriptor(refMethod.getElement().getNavigationElement(),message,false,null,ProblemHighlightType.GENERIC_ERROR_OR_WARNING)};
    }
  }
  return null;
}
