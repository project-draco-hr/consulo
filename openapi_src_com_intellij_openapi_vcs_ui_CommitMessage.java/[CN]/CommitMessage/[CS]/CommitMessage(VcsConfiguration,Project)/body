{
  super(new BorderLayout());
  final JScrollPane scrollPane=new JScrollPane(myCommentArea);
  scrollPane.setPreferredSize(myCommentArea.getPreferredSize());
  add(scrollPane,BorderLayout.CENTER);
  add(new JLabel(VcsBundle.message("label.commit.comment")),BorderLayout.NORTH);
  final ArrayList<String> recentMessages=configuration.getRecentMessages();
  Collections.reverse(recentMessages);
  if (!recentMessages.isEmpty()) {
    final JPanel buttonPanel=new JPanel(new BorderLayout());
    buttonPanel.add(myHistory,BorderLayout.EAST);
    add(buttonPanel,BorderLayout.SOUTH);
    myHistory.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        final ContentChooser<String> contentChooser=new ContentChooser<String>(project,VcsBundle.message("dialog.title.choose.commit.message.from.history"),false){
          protected void removeContentAt(          final String content){
            configuration.removeMessage(content);
          }
          protected String getStringRepresentationFor(          final String content){
            return content;
          }
          protected List<String> getContents(){
            return recentMessages;
          }
        }
;
        contentChooser.show();
        if (contentChooser.isOK()) {
          final int selectedIndex=contentChooser.getSelectedIndex();
          if (selectedIndex >= 0) {
            setText(contentChooser.getAllContents().get(selectedIndex));
          }
        }
        myCommentArea.requestFocus();
      }
    }
);
  }
}
