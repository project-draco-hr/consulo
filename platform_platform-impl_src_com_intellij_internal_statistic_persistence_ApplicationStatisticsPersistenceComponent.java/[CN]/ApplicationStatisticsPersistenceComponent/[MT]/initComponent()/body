{
  ProjectManager.getInstance().addProjectManagerListener(new ProjectManagerListener(){
    @Override public void projectOpened(    Project project){
    }
    @Override public boolean canCloseProject(    Project project){
      return true;
    }
    @Override public void projectClosed(    Project project){
    }
    @Override public void projectClosing(    Project project){
      if (project != null) {
        for (        UsagesCollector usagesCollector : Extensions.getExtensions(UsagesCollector.EP_NAME)) {
          if (usagesCollector instanceof AbstractApplicationUsagesCollector) {
            ((AbstractApplicationUsagesCollector)usagesCollector).persistProjectUsages(project);
          }
        }
      }
    }
  }
);
}
