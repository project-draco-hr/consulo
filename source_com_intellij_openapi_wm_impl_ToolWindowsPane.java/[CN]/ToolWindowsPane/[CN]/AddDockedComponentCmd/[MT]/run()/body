{
  try {
    final float weight=myInfo.getWeight() <= .0f ? WindowInfo.DEFAULT_WEIGHT : myInfo.getWeight();
    float newWeight=weight;
    final ToolWindowAnchor anchor=myInfo.getAnchor();
    if (ToolWindowAnchor.TOP == anchor) {
      if (myTopSplitter.getHeight() > 0) {
        newWeight=(myLayeredPane.getHeight() * weight + myTopSplitter.getDividerWidth() / 2) / (float)myTopSplitter.getHeight();
      }
      if (newWeight >= 1.0f) {
        newWeight=1 - WindowInfo.DEFAULT_WEIGHT;
      }
      myTopSplitter.setProportion(newWeight);
      setComponent(myComponent,ToolWindowAnchor.TOP);
    }
 else     if (ToolWindowAnchor.LEFT == anchor) {
      if (myLeftSplitter.getWidth() > 0) {
        newWeight=(myLayeredPane.getWidth() * weight + myLeftSplitter.getDividerWidth() / 2) / (float)myLeftSplitter.getWidth();
      }
      if (newWeight >= 1.0f) {
        newWeight=1 - WindowInfo.DEFAULT_WEIGHT;
      }
      myLeftSplitter.setProportion(newWeight);
      setComponent(myComponent,ToolWindowAnchor.LEFT);
    }
 else     if (ToolWindowAnchor.BOTTOM == anchor) {
      if (myBottomSplitter.getHeight() > 0) {
        newWeight=(myLayeredPane.getHeight() * weight + myBottomSplitter.getDividerWidth() / 2 + .5f) / (float)myBottomSplitter.getHeight();
      }
      if (newWeight >= 1.0f) {
        newWeight=1 - WindowInfo.DEFAULT_WEIGHT;
      }
      myBottomSplitter.setProportion(1 - newWeight);
      setComponent(myComponent,ToolWindowAnchor.BOTTOM);
    }
 else     if (ToolWindowAnchor.RIGHT == anchor) {
      if (myRightSplitter.getWidth() > 0) {
        newWeight=(myLayeredPane.getWidth() * weight + myRightSplitter.getDividerWidth() / 2 + .5f) / (float)myRightSplitter.getWidth();
      }
      if (newWeight >= 1.0f) {
        newWeight=1 - WindowInfo.DEFAULT_WEIGHT;
      }
      myRightSplitter.setProportion(1 - newWeight);
      setComponent(myComponent,ToolWindowAnchor.RIGHT);
    }
 else {
      LOG.error("unknown anchor: " + anchor);
    }
    if (!myDirtyMode) {
      myLayeredPane.validate();
      myLayeredPane.repaint();
    }
  }
  finally {
    finish();
  }
}
