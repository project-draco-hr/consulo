{
  if (ComponentEvent.COMPONENT_RESIZED == e.getID()) {
    final int width=getWidth();
    final int height=getHeight();
    if (width < 0 || height < 0) {
      return;
    }
    Component[] components=getComponentsInLayer(JLayeredPane.DEFAULT_LAYER.intValue());
    LOG.assertTrue(components.length <= 1);
    for (int i=0; i < components.length; i++) {
      final Component component=components[i];
      component.setBounds(0,0,getWidth(),getHeight());
    }
    components=getComponentsInLayer(JLayeredPane.PALETTE_LAYER.intValue());
    for (int i=0; i < components.length; i++) {
      final Component component=components[i];
      if (!(component instanceof InternalDecorator)) {
        continue;
      }
      final WindowInfo info=myDecorator2Info.get(component);
      if (info == null) {
        continue;
      }
      final float weight;
      if (ToolWindowAnchor.TOP == info.getAnchor() || ToolWindowAnchor.BOTTOM == info.getAnchor()) {
        weight=(float)component.getHeight() / (float)getHeight();
      }
 else {
        weight=(float)component.getWidth() / (float)getWidth();
      }
      setBoundsInPaletteLayer(component,info.getAnchor(),weight);
    }
    validate();
    repaint();
  }
 else {
    super.processComponentEvent(e);
  }
}
