{
  final PsiFile file;
  try {
    file=child.getContainingFile();
  }
 catch (  PsiInvalidElementAccessException e) {
    myFileStatusMap.markAllFilesDirty();
    return;
  }
  if (file == null || file instanceof PsiCompiledElement) {
    myFileStatusMap.markAllFilesDirty();
    return;
  }
  int fileLength=file.getTextLength();
  if (!file.getViewProvider().isPhysical()) {
    myFileStatusMap.markFileScopeDirty(document,new TextRange(0,fileLength),fileLength);
    return;
  }
  PsiElement element=whitespaceOptimizationAllowed && UpdateHighlightersUtil.isWhitespaceOptimizationAllowed(document) ? child : child.getParent();
  while (true) {
    if (element == null || element instanceof PsiFile || element instanceof PsiDirectory) {
      myFileStatusMap.markAllFilesDirty();
      return;
    }
    final PsiElement scope=getChangeHighlightingScope(element);
    if (scope != null) {
      myFileStatusMap.markFileScopeDirty(document,scope.getTextRange(),fileLength);
      return;
    }
    element=element.getParent();
  }
}
