{
  myPolyVariantResolveMaps[0]=new ConcurrentWeakHashMap<PsiPolyVariantReference,Reference<ResolveResult[]>>();
  myPolyVariantResolveMaps[1]=new ConcurrentWeakHashMap<PsiPolyVariantReference,Reference<ResolveResult[]>>();
  myResolveMaps[0]=new ConcurrentWeakHashMap<PsiReference,Reference>();
  myResolveMaps[1]=new ConcurrentWeakHashMap<PsiReference,Reference>();
  myPolyVariantResolveMaps[2]=new ConcurrentWeakHashMap<PsiPolyVariantReference,Reference<ResolveResult[]>>();
  myPolyVariantResolveMaps[3]=new ConcurrentWeakHashMap<PsiPolyVariantReference,Reference<ResolveResult[]>>();
  myResolveMaps[2]=new ConcurrentWeakHashMap<PsiReference,Reference>();
  myResolveMaps[3]=new ConcurrentWeakHashMap<PsiReference,Reference>();
  messageBus.connect().subscribe(PsiManagerImpl.ANY_PSI_CHANGE_TOPIC,new AnyPsiChangeListener(){
    @Override public void beforePsiChanged(    boolean isPhysical){
      clearCache(isPhysical);
    }
    @Override public void afterPsiChanged(    boolean isPhysical){
    }
  }
);
}
