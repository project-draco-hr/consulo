{
  bounds.clear();
  for (int i=0; i < getComponentCount(); i++) {
    bounds.add(new Rectangle());
  }
  if (myLayoutPolicy == NOWRAP_LAYOUT_POLICY) {
    calculateBoundsNowrapImpl(bounds);
  }
 else   if (myLayoutPolicy == WRAP_LAYOUT_POLICY) {
    calculateBoundsWrapImpl(size2Fit,bounds);
  }
 else   if (myLayoutPolicy == AUTO_LAYOUT_POLICY) {
    calculateBoundsAutoImp(size2Fit,bounds);
  }
 else {
    throw new IllegalStateException("unknonw layoutPolicy: " + myLayoutPolicy);
  }
  if (getComponentCount() > 0 && size2Fit.width < Integer.MAX_VALUE) {
    final Component component=getComponent(getComponentCount() - 1);
    if (component instanceof JComponent && ((JComponent)component).getClientProperty("SEARCH_EVERYWHERE") == Boolean.TRUE) {
      final Rectangle rect=bounds.get(bounds.size() - 1);
      int max=0;
      for (int i=0; i < bounds.size() - 2; i++) {
        max=Math.max(max,bounds.get(i).height);
      }
      bounds.set(bounds.size() - 1,new Rectangle(size2Fit.width - 25,0,25,max));
    }
  }
}
