{
  if (parameters.getCompletionType() != CompletionType.BASIC)   return true;
  if (parameters.getPosition().getContainingFile().getLanguage() == StdLanguages.JAVA) {
    final PsiFile file=parameters.getOriginalFile();
    final int startOffset=parameters.getOffset();
    final PsiElement lastElement=file.findElementAt(startOffset - 1);
    final PsiElement insertedElement=parameters.getPosition();
    final JavaAwareCompletionData completionData=ApplicationManager.getApplication().runReadAction(new Computable<JavaAwareCompletionData>(){
      public JavaAwareCompletionData compute(){
        return getCompletionDataByElementInner(lastElement);
      }
    }
);
    final boolean checkAccess=parameters.getInvocationCount() == 1;
    LegacyCompletionContributor.processReferences(parameters,_result,completionData,new PairConsumer<PsiReference,CompletionResultSet>(){
      public void consume(      final PsiReference ref,      final CompletionResultSet completionResultSet){
        insertedElement.putUserData(PREFIX_MATCHER,completionResultSet.getPrefixMatcher());
        final Set<LookupElement> lookupSet=new LinkedHashSet<LookupElement>();
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          public void run(){
            final boolean[] hasApplicableVariants=new boolean[]{false};
            for (            final CompletionVariant variant : completionData.findVariants(insertedElement,file)) {
              variant.processReferenceCompletions(new PairConsumer<ElementFilter,TailType>(){
                public void consume(                final ElementFilter elementFilter,                final TailType tailType){
                  hasApplicableVariants[0]=true;
                  completionData.completeReference(ref,insertedElement,lookupSet,tailType,file,elementFilter,variant,checkAccess);
                }
              }
);
            }
            if (!hasApplicableVariants[0]) {
              completionData.completeReference(ref,insertedElement,lookupSet,TailType.NONE,file,TrueFilter.INSTANCE,completionData.myGenericVariant,checkAccess);
            }
          }
        }
);
        for (        final LookupElement element : lookupSet) {
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            public void run(){
              final Object completion=element.getObject();
              if (completion instanceof PsiElement && JavaCompletionUtil.isCompletionOfAnnotationMethod((PsiElement)completion,insertedElement)) {
                ((LookupItem)element).setTailType(TailType.EQ);
              }
              JavaCompletionUtil.highlightMemberOfContainer((LookupItem)element);
            }
          }
);
          completionResultSet.addElement(element);
        }
      }
    }
);
    final Set<LookupElement> lookupSet=new LinkedHashSet<LookupElement>();
    final Set<CompletionVariant> keywordVariants=new HashSet<CompletionVariant>();
    completionData.addKeywordVariants(keywordVariants,insertedElement,parameters.getOriginalFile());
    final CompletionResultSet result=_result.withPrefixMatcher(completionData.findPrefix(insertedElement,startOffset));
    completionData.completeKeywordsBySet(lookupSet,keywordVariants,insertedElement,result.getPrefixMatcher(),parameters.getOriginalFile());
    for (    final LookupElement item : lookupSet) {
      if (item.getInsertHandler() == null) {
        ((LookupItem)item).setInsertHandler(new InsertHandler(){
          public void handleInsert(          final InsertionContext context,          final LookupElement item){
            analyzeItem((LookupItem)item,item.getObject(),parameters.getPosition());
            new DefaultInsertHandler().handleInsert(context,item);
          }
        }
);
      }
      result.addElement(item);
    }
    return false;
  }
  return true;
}
