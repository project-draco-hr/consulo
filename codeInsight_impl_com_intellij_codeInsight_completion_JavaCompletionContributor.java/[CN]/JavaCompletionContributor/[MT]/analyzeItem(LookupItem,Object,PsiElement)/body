{
  if (completion instanceof PsiKeyword) {
    if (PsiKeyword.BREAK.equals(((PsiKeyword)completion).getText()) || PsiKeyword.CONTINUE.equals(((PsiKeyword)completion).getText())) {
      PsiElement scope=position;
      while (true) {
        if (scope instanceof PsiFile || scope instanceof PsiMethod || scope instanceof PsiClassInitializer) {
          item.setTailType(TailType.SEMICOLON);
          break;
        }
 else         if (scope instanceof PsiLabeledStatement) {
          item.setTailType(TailType.NONE);
          break;
        }
        scope=scope.getParent();
      }
    }
    if (PsiKeyword.RETURN.equals(((PsiKeyword)completion).getText())) {
      PsiElement scope=position;
      while (true) {
        if (scope instanceof PsiFile || scope instanceof PsiClassInitializer) {
          item.setTailType(TailType.NONE);
          break;
        }
 else         if (scope instanceof PsiMethod) {
          final PsiMethod method=(PsiMethod)scope;
          if (method.isConstructor() || PsiType.VOID == method.getReturnType()) {
            item.setTailType(TailType.SEMICOLON);
          }
 else           item.setTailType(TailType.SPACE);
          break;
        }
        scope=scope.getParent();
      }
    }
    if (PsiKeyword.SYNCHRONIZED.equals(((PsiKeyword)completion).getText())) {
      if (PsiTreeUtil.getParentOfType(position,PsiMember.class,PsiCodeBlock.class) instanceof PsiCodeBlock) {
        item.setTailType(TailTypes.SYNCHRONIZED_LPARENTH);
      }
    }
  }
}
