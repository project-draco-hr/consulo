{
  root.update(null);
  Collection<PsiElement> leaves;
  DefaultMutableTreeNode duplicate=root.getDuplicate();
  if (duplicate != null) {
    SliceNode dupNode=(SliceNode)duplicate.getUserObject();
    leaves=dupNode.getLeafExpressions();
  }
 else {
    SliceUsage sliceUsage=root.getValue();
    Collection<? extends AbstractTreeNode> children=root.getChildrenUnderProgress(progress);
    if (children.isEmpty()) {
      PsiElement element=sliceUsage.getElement();
      leaves=ContainerUtil.singleton(element,LEAF_ELEMENT_EQUALITY);
    }
 else {
      leaves=new THashSet<PsiElement>(LEAF_ELEMENT_EQUALITY);
      for (      AbstractTreeNode child : children) {
        Collection<PsiElement> elements=calcLeafExpressions((SliceNode)child,progress);
        leaves.addAll(elements);
      }
    }
  }
  root.addLeafExpressions(leaves);
  return leaves;
}
