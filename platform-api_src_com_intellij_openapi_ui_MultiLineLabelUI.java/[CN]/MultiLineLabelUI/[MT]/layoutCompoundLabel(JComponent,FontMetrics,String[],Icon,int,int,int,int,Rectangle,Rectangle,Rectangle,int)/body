{
  boolean orientationIsLeftToRight=true;
  int hAlign=horizontalAlignment;
  int hTextPos=horizontalTextPosition;
  if (c != null) {
    if (!(c.getComponentOrientation().isLeftToRight())) {
      orientationIsLeftToRight=false;
    }
  }
switch (horizontalAlignment) {
case LEADING:
    hAlign=(orientationIsLeftToRight) ? LEFT : RIGHT;
  break;
case TRAILING:
hAlign=(orientationIsLeftToRight) ? RIGHT : LEFT;
break;
}
switch (horizontalTextPosition) {
case LEADING:
hTextPos=(orientationIsLeftToRight) ? LEFT : RIGHT;
break;
case TRAILING:
hTextPos=(orientationIsLeftToRight) ? RIGHT : LEFT;
break;
}
return layoutCompoundLabel(fm,text,icon,verticalAlignment,hAlign,verticalTextPosition,hTextPos,viewR,iconR,textR,textIconGap);
}
