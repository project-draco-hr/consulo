{
  if (queue.size() > 0) {
    Object[] q=queue.removeFirst();
    Object cell=q[0];
    Object incomingEdge=q[1];
    visitor.visit(cell,incomingEdge);
    final Object[] edges=aGraph.getEdges(cell,null,false,false);
    for (int i=0; i < edges.length; i++) {
      Object[] currEdge={edges[i]};
      Object opposite=aGraph.getOpposites(currEdge,cell)[0];
      if (!queued.contains(opposite)) {
        Object[] current={opposite,edges[i]};
        queue.addLast(current);
        queued.add(opposite);
      }
    }
    bfsRec(aGraph,queued,queue,visitor);
  }
}
