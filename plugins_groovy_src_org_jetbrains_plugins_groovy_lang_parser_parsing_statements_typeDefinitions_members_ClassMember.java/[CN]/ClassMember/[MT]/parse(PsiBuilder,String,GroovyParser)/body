{
  if (ConstructorDefinition.parse(builder,className,parser))   return true;
  PsiBuilder.Marker typeDeclStartMarker=builder.mark();
  if (TypeDeclarationStart.parse(builder,parser)) {
    typeDeclStartMarker.rollbackTo();
    if (!TypeDefinition.parseTypeDefinition(builder,parser)) {
      builder.error(GroovyBundle.message("type.definition.expected"));
      return false;
    }
    return true;
  }
  typeDeclStartMarker.rollbackTo();
  PsiBuilder.Marker initMarker=builder.mark();
  PsiBuilder.Marker modMarker=builder.mark();
  ParserUtils.getToken(builder,kSTATIC);
  ParserUtils.getToken(builder,mNLS);
  if (mLCURLY == builder.getTokenType()) {
    modMarker.done(MODIFIERS);
    if (OpenOrClosableBlock.parseOpenBlock(builder,parser)) {
      initMarker.done(CLASS_INITIALIZER);
      return true;
    }
  }
  modMarker.drop();
  initMarker.rollbackTo();
  return Declaration.parse(builder,true,parser);
}
