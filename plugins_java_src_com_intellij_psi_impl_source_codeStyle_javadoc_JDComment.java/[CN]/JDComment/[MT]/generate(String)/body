{
  final String prefix;
  if (myFormatter.getSettings().JD_LEADING_ASTERISKS_ARE_ENABLED) {
    prefix=indent + " * ";
  }
 else {
    prefix=indent;
  }
  @NonNls StringBuffer sb=new StringBuffer();
  int start=sb.length();
  if (!isNull(description)) {
    sb.append(myFormatter.getParser().splitIntoCLines(description,prefix));
    if (myFormatter.getSettings().JD_ADD_BLANK_AFTER_DESCRIPTION) {
      sb.append(prefix);
      sb.append('\n');
    }
  }
  generateSpecial(prefix,sb);
  if (!isNull(unknownList) && myFormatter.getSettings().JD_KEEP_INVALID_TAGS) {
    for (    Object aUnknownList : unknownList) {
      String s=(String)aUnknownList;
      sb.append(myFormatter.getParser().splitIntoCLines(s,prefix));
    }
  }
  if (!isNull(seeAlsoList)) {
    for (    Object aSeeAlsoList : seeAlsoList) {
      String s=(String)aSeeAlsoList;
      sb.append(prefix);
      sb.append("@see ");
      sb.append(myFormatter.getParser().splitIntoCLines(s,prefix + "     ",false));
    }
  }
  if (!isNull(since)) {
    sb.append(prefix);
    sb.append("@since ");
    sb.append(myFormatter.getParser().splitIntoCLines(since,prefix + "       ",false));
  }
  if (deprecated != null) {
    sb.append(prefix);
    sb.append("@deprecated ");
    sb.append(myFormatter.getParser().splitIntoCLines(deprecated,prefix + "            ",false));
  }
  if (sb.length() == start)   return null;
  int nlen=sb.length() - prefix.length() - 1;
  if (sb.substring(nlen,sb.length()).equals(prefix + "\n")) {
    sb.delete(nlen,sb.length());
  }
  if (!myFormatter.getSettings().JD_DO_NOT_WRAP_ONE_LINE_COMMENTS || sb.indexOf("\n") != sb.length() - 1) {
    sb.insert(0,"/**\n");
    sb.append(indent);
  }
 else {
    sb.replace(0,prefix.length(),"/** ");
    sb.deleteCharAt(sb.length() - 1);
  }
  sb.append(" */");
  return sb.toString();
}
