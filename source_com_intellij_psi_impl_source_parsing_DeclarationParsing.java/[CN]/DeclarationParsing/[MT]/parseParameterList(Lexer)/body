{
  CompositeElement paramList=Factory.createCompositeElement(PARAMETER_LIST);
  LOG.assertTrue(lexer.getTokenType() == LPARENTH);
  TreeUtil.addChildren(paramList,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  CompositeElement invalidElementsGroup=null;
  boolean commaExpected=false;
  int paramCount=0;
  while (true) {
    IElementType tokenType=lexer.getTokenType();
    if (tokenType == null || tokenType == RPARENTH) {
      boolean noLastParm=!commaExpected && paramCount > 0;
      if (noLastParm) {
        TreeUtil.addChildren(paramList,Factory.createErrorElement("Identifier or type expected"));
      }
      if (tokenType == RPARENTH) {
        TreeUtil.addChildren(paramList,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
        lexer.advance();
      }
 else {
        if (!noLastParm) {
          TreeUtil.addChildren(paramList,Factory.createErrorElement("')' expected"));
        }
      }
      break;
    }
    if (commaExpected) {
      if (tokenType == COMMA) {
        TreeUtil.addChildren(paramList,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
        lexer.advance();
        commaExpected=false;
        invalidElementsGroup=null;
        continue;
      }
    }
 else {
      TreeElement param=parseParameter(lexer,true);
      if (param != null) {
        TreeUtil.addChildren(paramList,param);
        commaExpected=true;
        invalidElementsGroup=null;
        paramCount++;
        continue;
      }
    }
    if (invalidElementsGroup == null) {
      if (tokenType == COMMA) {
        TreeUtil.addChildren(paramList,Factory.createErrorElement("Parameter expected"));
        TreeUtil.addChildren(paramList,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
        lexer.advance();
        continue;
      }
 else {
        invalidElementsGroup=Factory.createErrorElement(commaExpected ? "',' expected" : "Parameter expected");
        TreeUtil.addChildren(paramList,invalidElementsGroup);
      }
    }
    CompositeElement ref=parseJavaCodeReference(lexer,true,true);
    if (ref != null) {
      TreeUtil.addChildren(invalidElementsGroup,ref);
    }
 else {
      TreeUtil.addChildren(invalidElementsGroup,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
    }
  }
  return paramList;
}
