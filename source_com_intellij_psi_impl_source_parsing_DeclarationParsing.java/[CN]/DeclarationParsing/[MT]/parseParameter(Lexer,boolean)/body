{
  long pos=ParseUtil.savePosition(lexer);
  CompositeElement modifierList=parseModifierList(lexer);
  CompositeElement type=allowEllipsis ? parseTypeWithEllipsis(lexer) : parseType(lexer);
  if (type == null) {
    ParseUtil.restorePosition(lexer,pos);
    return null;
  }
  CompositeElement param=Factory.createCompositeElement(PARAMETER);
  TreeUtil.addChildren(param,modifierList);
  TreeUtil.addChildren(param,type);
  if (lexer.getTokenType() == IDENTIFIER) {
    TreeUtil.addChildren(param,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
    lexer.advance();
    while (lexer.getTokenType() == LBRACKET) {
      TreeUtil.addChildren(param,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
      if (lexer.getTokenType() != RBRACKET) {
        TreeUtil.addChildren(param,Factory.createErrorElement("']' expected"));
        break;
      }
      TreeUtil.addChildren(param,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
    }
    return param;
  }
 else {
    TreeUtil.addChildren(param,Factory.createErrorElement("Identifier expected"));
    return (TreeElement)param.getFirstChildNode();
  }
}
