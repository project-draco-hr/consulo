{
  CompositeElement parameterList=ASTFactory.composite(ANNOTATION_PARAMETER_LIST);
  if (lexer.getTokenType() == LPARENTH) {
    parameterList.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
    lexer.advance();
    IElementType tokenType=lexer.getTokenType();
    if (tokenType == RPARENTH) {
      parameterList.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
      return parameterList;
    }
    CompositeElement firstParam=parseAnnotationParameter(lexer,true);
    parameterList.rawAddChildren(firstParam);
    boolean isFirstParamNamed=firstParam.getChildRole(firstParam.getFirstChildNode()) == ChildRole.NAME;
    boolean afterBad=false;
    while (true) {
      tokenType=lexer.getTokenType();
      if (tokenType == null) {
        parameterList.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("expected.parameter")));
        return parameterList;
      }
      if (tokenType == RPARENTH) {
        parameterList.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
        lexer.advance();
        return parameterList;
      }
 else       if (tokenType == COMMA) {
        TreeElement comma=ParseUtil.createTokenElement(lexer,myContext.getCharTable());
        lexer.advance();
        CompositeElement param=parseAnnotationParameter(lexer,false);
        if (!isFirstParamNamed && param != null && param.getChildRole(param.getFirstChildNode()) == ChildRole.NAME) {
          parameterList.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("annotation.name.is.missing")));
        }
        parameterList.rawAddChildren(comma);
        parameterList.rawAddChildren(param);
      }
 else       if (!afterBad) {
        parameterList.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("expected.comma.or.rparen")));
        parameterList.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
        lexer.advance();
        afterBad=true;
      }
 else {
        afterBad=false;
        parameterList.rawAddChildren(parseAnnotationParameter(lexer,false));
      }
    }
  }
 else {
    return parameterList;
  }
}
