{
  CompositeElement parameterList=Factory.createCompositeElement(ANNOTATION_PARAMETER_LIST);
  if (lexer.getTokenType() == LPARENTH) {
    TreeUtil.addChildren(parameterList,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
    lexer.advance();
    IElementType tokenType=lexer.getTokenType();
    if (tokenType == RPARENTH) {
      TreeUtil.addChildren(parameterList,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
      return parameterList;
    }
 else {
      TreeUtil.addChildren(parameterList,parseAnnotationParameter(lexer,true));
    }
    boolean afterBad=false;
    while (true) {
      tokenType=lexer.getTokenType();
      if (tokenType == RPARENTH) {
        TreeUtil.addChildren(parameterList,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
        lexer.advance();
        return parameterList;
      }
 else       if (tokenType == COMMA) {
        TreeUtil.addChildren(parameterList,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
        lexer.advance();
        TreeUtil.addChildren(parameterList,parseAnnotationParameter(lexer,false));
      }
 else       if (tokenType == BAD_CHARACTER || KEYWORD_BIT_SET.contains(tokenType)) {
        TreeUtil.addChildren(parameterList,Factory.createErrorElement(JavaErrorMessages.message("expected.comma.or.rparen")));
        TreeUtil.addChildren(parameterList,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
        lexer.advance();
        afterBad=true;
      }
 else       if (afterBad) {
        afterBad=false;
        TreeUtil.addChildren(parameterList,parseAnnotationParameter(lexer,false));
      }
 else {
        TreeUtil.addChildren(parameterList,Factory.createErrorElement(JavaErrorMessages.message("expected.rparen")));
        parameterList.putUserData(ParseUtil.UNCLOSED_ELEMENT_PROPERTY,"");
        return parameterList;
      }
    }
  }
 else {
    return parameterList;
  }
}
