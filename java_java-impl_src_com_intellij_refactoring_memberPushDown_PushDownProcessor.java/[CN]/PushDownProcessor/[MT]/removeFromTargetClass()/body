{
  for (  MemberInfo memberInfo : myMemberInfos) {
    final PsiElement member=memberInfo.getMember();
    if (member instanceof PsiField) {
      member.delete();
    }
 else     if (member instanceof PsiMethod) {
      if (memberInfo.isToAbstract()) {
        final PsiMethod method=(PsiMethod)member;
        if (method.hasModifierProperty(PsiModifier.PRIVATE)) {
          PsiUtil.setModifierProperty(method,PsiModifier.PROTECTED,true);
        }
        RefactoringUtil.abstractizeMethod(myClass,method);
        myJavaDocPolicy.processOldJavaDoc(method.getDocComment());
      }
 else {
        member.delete();
      }
    }
 else     if (member instanceof PsiClass) {
      if (Boolean.FALSE.equals(memberInfo.getOverrides())) {
        RefactoringUtil.removeFromReferenceList(myClass.getImplementsList(),(PsiClass)member);
      }
 else {
        member.delete();
      }
    }
  }
}
