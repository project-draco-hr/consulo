{
  final List<LayoutUsageData> inlineInfos=new ArrayList<LayoutUsageData>();
  final List<PsiElement> nonXmlUsages=new ArrayList<PsiElement>();
  final List<PsiElement> unsupportedUsages=new ArrayList<PsiElement>();
  final List<PsiElement> unambiguousUsages=new ArrayList<PsiElement>();
  for (  UsageInfo usage : usages) {
    final PsiElement element=usage.getElement();
    if (element == null)     continue;
    if (element.getLanguage() != XMLLanguage.INSTANCE) {
      nonXmlUsages.add(element);
      continue;
    }
    final XmlTag tag=PsiTreeUtil.getParentOfType(element,XmlTag.class);
    final LayoutUsageData usageData=tag != null ? AndroidInlineUtil.getLayoutUsageData(tag) : null;
    if (usageData == null) {
      unsupportedUsages.add(element);
      continue;
    }
    if (usageData.getReference().computeTargetElements().length > 1) {
      unambiguousUsages.add(element);
      continue;
    }
    inlineInfos.add(usageData);
  }
  if (nonXmlUsages.size() > 0 || unambiguousUsages.size() > 0 || unsupportedUsages.size() > 0) {
    final String errorMessage=AndroidInlineUtil.buildErrorMessage(myProject,nonXmlUsages,unambiguousUsages,unsupportedUsages,Collections.<PsiElement>emptyList());
    AndroidUtils.reportError(myProject,errorMessage,AndroidBundle.message("android.inline.style.title"));
    return;
  }
  for (  LayoutUsageData info : inlineInfos) {
    try {
      info.inline(myLayoutRootTag);
    }
 catch (    AndroidRefactoringErrorException e) {
      LOG.info(e);
      String message=e.getMessage();
      if (message == null) {
        message="Refactoring was performed with errors";
      }
      AndroidUtils.reportError(myProject,message,AndroidBundle.message("android.inline.style.title"));
      return;
    }
  }
  if (myUsageElement == null) {
    myLayoutFile.delete();
  }
}
