{
  final Project project=ProjectManager.getInstance().getDefaultProject();
  CheckoutDialog dialog=new CheckoutDialog(project);
  dialog.show();
  if (!dialog.isOK() || dialog.getSelectedURL() == null || dialog.getSelectedFile() == null) {
    return;
  }
  try {
    final SVNException[] exception=new SVNException[1];
    final SVNUpdateClient client=SvnVcs.getInstance(project).createUpdateClient();
    final String url=dialog.getSelectedURL();
    final File target=new File(dialog.getSelectedFile());
    ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
      public void run(){
        ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
        client.setEventHandler(new CheckoutEventHandler(SvnVcs.getInstance(project),progressIndicator));
        try {
          progressIndicator.setText(SvnBundle.message("progress.text.checking.out",target.getAbsolutePath()));
          client.doCheckout(SVNURL.parseURIEncoded(url),target,SVNRevision.UNDEFINED,SVNRevision.HEAD,true);
        }
 catch (        SVNException e) {
          exception[0]=e;
        }
 finally {
          client.setEventHandler(null);
        }
      }
    }
,SvnBundle.message("message.title.check.out"),false,null);
    if (exception[0] != null) {
      throw exception[0];
    }
  }
 catch (  SVNException e1) {
    Messages.showErrorDialog(SvnBundle.message("message.text.cannot.checkout",e1.getMessage()),SvnBundle.message("message.title.check.out"));
  }
}
