{
  final Ref<String> errorMessage=new Ref<String>();
  final SVNCommitClient client=SvnVcs.getInstance(project).createCommitClient();
  final String targetPath=FileUtil.toSystemIndependentName(target.getAbsolutePath());
  ExclusiveBackgroundVcsAction.run(project,new Runnable(){
    public void run(){
      ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
        public void run(){
          ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
          client.setEventHandler(new CheckoutEventHandler(SvnVcs.getInstance(project),true,progressIndicator));
          try {
            progressIndicator.setText(SvnBundle.message("progress.text.import",target.getAbsolutePath()));
            final VirtualFile targetVf=SvnUtil.getVirtualFile(targetPath);
            if (targetVf == null) {
              errorMessage.set("Can not find file: " + targetPath);
            }
 else             if (!ExcludedFileIndex.getInstance(project).isInContent(targetVf)) {
              client.doImport(target,url,message,null,!includeIgnored,false,depth);
            }
 else {
              final SvnExcludingIgnoredOperation.Filter filter=new SvnExcludingIgnoredOperation.Filter(project);
              final LocalFileSystem lfs=LocalFileSystem.getInstance();
              final DefaultSVNCommitHandler commitHandler=new DefaultSVNCommitHandler(){
                @Override public boolean accept(                final File file) throws SVNException {
                  final VirtualFile vf=lfs.findFileByIoFile(file);
                  return vf != null && filter.accept(vf);
                }
              }
;
              client.setCommitHandler(commitHandler);
              client.doImport(target,url,message,null,!includeIgnored,false,depth);
            }
          }
 catch (          SVNException e) {
            errorMessage.set(e.getMessage());
          }
 finally {
            client.setIgnoreExternals(false);
            client.setEventHandler(null);
          }
        }
      }
,SvnBundle.message("message.title.import"),true,project);
    }
  }
);
  if (!errorMessage.isNull()) {
    Messages.showErrorDialog(SvnBundle.message("message.text.cannot.import",errorMessage.get()),SvnBundle.message("message.title.import"));
  }
}
