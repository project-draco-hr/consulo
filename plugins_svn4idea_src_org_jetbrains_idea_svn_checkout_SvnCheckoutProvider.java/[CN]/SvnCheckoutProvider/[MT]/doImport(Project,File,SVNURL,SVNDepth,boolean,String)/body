{
  final Ref<String> errorMessage=new Ref<String>();
  final SVNCommitClient client=SvnVcs.getInstance(project).createCommitClient();
  final String targetPath=FileUtil.toSystemIndependentName(target.getAbsolutePath());
  ExclusiveBackgroundVcsAction.run(project,new Runnable(){
    public void run(){
      ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
        public void run(){
          ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
          client.setEventHandler(new CheckoutEventHandler(SvnVcs.getInstance(project),true,progressIndicator));
          try {
            progressIndicator.setText(SvnBundle.message("progress.text.import",target.getAbsolutePath()));
            final SvnExcludingIgnoredOperation operation=new SvnExcludingIgnoredOperation(project,new SvnExcludingIgnoredOperation.Operation(){
              public void doOperation(              final VirtualFile file) throws SVNException {
                final String current=FileUtil.toSystemIndependentName(file.getPath());
                final String subpath=current.substring(targetPath.length());
                final SVNURL subUrl=url.appendPath(subpath,false);
                final File ioFile=new File(file.getPath());
                client.doImport(ioFile,subUrl,message,null,!includeIgnored,false,SVNDepth.EMPTY);
              }
            }
,depth);
            final VirtualFile targetVf=SvnUtil.getVirtualFile(targetPath);
            if (targetVf == null) {
              errorMessage.set("Can not find file: " + targetPath);
            }
 else {
              operation.execute(targetVf);
            }
          }
 catch (          SVNException e) {
            errorMessage.set(e.getMessage());
          }
 finally {
            client.setIgnoreExternals(false);
            client.setEventHandler(null);
          }
        }
      }
,SvnBundle.message("message.title.import"),true,project);
    }
  }
);
  if (!errorMessage.isNull()) {
    Messages.showErrorDialog(SvnBundle.message("message.text.cannot.import",errorMessage.get()),SvnBundle.message("message.title.import"));
  }
}
