{
  Document document=editor.getDocument();
  SelectionModel selectionModel=editor.getSelectionModel();
  int selectionStart=selectionModel.getLeadSelectionOffset();
  CaretModel caretModel=editor.getCaretModel();
  LogicalPosition blockSelectionStart=selectionModel.hasBlockSelection() ? selectionModel.getBlockStart() : caretModel.getLogicalPosition();
  int columnNumber=editor.getCaretModel().getLogicalPosition().column;
  int lineNumber=editor.getCaretModel().getLogicalPosition().line;
  VisualPosition visCaret=editor.getCaretModel().getVisualPosition();
  while (lineNumber >= 0 && editor.logicalToVisualPosition(new LogicalPosition(lineNumber,0)).line == visCaret.line)   lineNumber--;
  lineNumber++;
  EditorSettings editorSettings=editor.getSettings();
  if (!editorSettings.isSmartHome()) {
    LogicalPosition pos=new LogicalPosition(lineNumber,0);
    editor.getCaretModel().moveToLogicalPosition(pos);
    setupSelection(editor,isWithSelection,selectionStart,blockSelectionStart);
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    return;
  }
  int offset=editor.getCaretModel().getOffset();
  if (lineNumber >= document.getLineCount() || offset >= document.getTextLength()) {
    int newColNumber=0;
    if (columnNumber == 0) {
      newColNumber=findSmartIndent(editor,offset);
    }
    LogicalPosition pos=new LogicalPosition(lineNumber,newColNumber);
    editor.getCaretModel().moveToLogicalPosition(pos);
    setupSelection(editor,isWithSelection,selectionStart,blockSelectionStart);
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    return;
  }
  int start=findFirstNonspaceOffsetOnTheLine(document,lineNumber);
  int lineEnd=document.getLineEndOffset(lineNumber);
  if (lineNumber > 0 && lineEnd == start && columnNumber == 0) {
    int newColNumber=findSmartIndent(editor,offset);
    LogicalPosition pos=new LogicalPosition(lineNumber,newColNumber);
    editor.getCaretModel().moveToLogicalPosition(pos);
    setupSelection(editor,isWithSelection,selectionStart,blockSelectionStart);
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    return;
  }
  int lineStart=document.getLineStartOffset(lineNumber);
  int newOffset=lineStart;
  if (start < offset || columnNumber == 0) {
    newOffset=start;
  }
  editor.getCaretModel().moveToOffset(newOffset);
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  setupSelection(editor,isWithSelection,selectionStart,blockSelectionStart);
}
