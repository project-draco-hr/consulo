{
  Document document=editor.getDocument();
  SelectionModel selectionModel=editor.getSelectionModel();
  int selectionStart=selectionModel.getLeadSelectionOffset();
  CaretModel caretModel=editor.getCaretModel();
  LogicalPosition blockSelectionStart=selectionModel.hasBlockSelection() ? selectionModel.getBlockStart() : caretModel.getLogicalPosition();
  SoftWrapModel softWrapModel=editor.getSoftWrapModel();
  int lineNumber=editor.getCaretModel().getLogicalPosition().line;
  if (lineNumber >= document.getLineCount()) {
    LogicalPosition pos=new LogicalPosition(lineNumber,0);
    editor.getCaretModel().moveToLogicalPosition(pos);
    setupSelection(editor,isWithSelection,selectionStart,blockSelectionStart);
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    return;
  }
  VisualPosition currentVisualCaret=editor.getCaretModel().getVisualPosition();
  VisualPosition visualEndOfLineWithCaret=new VisualPosition(currentVisualCaret.line,EditorUtil.getLastVisualLineColumnNumber(editor,currentVisualCaret.line));
  if (currentVisualCaret.equals(visualEndOfLineWithCaret)) {
    LogicalPosition logical=editor.visualToLogicalPosition(visualEndOfLineWithCaret);
    int offset=editor.logicalPositionToOffset(logical);
    if (offset < editor.getDocument().getTextLength()) {
      SoftWrap softWrap=softWrapModel.getSoftWrap(offset);
      if (softWrap == null) {
        softWrap=softWrapModel.getSoftWrap(offset + 1);
      }
      int line=currentVisualCaret.line;
      int column=currentVisualCaret.column;
      if (softWrap != null) {
        line++;
        column=EditorUtil.getLastVisualLineColumnNumber(editor,line);
      }
      visualEndOfLineWithCaret=new VisualPosition(line,column);
    }
  }
  int offset;
  int newOffset;
  LogicalPosition logLineEnd=editor.visualToLogicalPosition(visualEndOfLineWithCaret);
  offset=editor.logicalPositionToOffset(logLineEnd);
  lineNumber=logLineEnd.line;
  newOffset=offset;
  CharSequence text=document.getCharsSequence();
  for (int i=newOffset - 1; i >= document.getLineStartOffset(lineNumber); i--) {
    if (softWrapModel.getSoftWrap(i) != null) {
      newOffset=offset;
      break;
    }
    if (text.charAt(i) != ' ' && text.charAt(i) != '\t') {
      break;
    }
    newOffset=i;
  }
  if (newOffset == offset || newOffset == caretModel.getOffset()) {
    caretModel.moveToVisualPosition(visualEndOfLineWithCaret);
  }
 else {
    caretModel.moveToOffset(newOffset);
  }
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  setupSelection(editor,isWithSelection,selectionStart,blockSelectionStart);
}
