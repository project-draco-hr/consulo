{
  if (elementsDepthStack.contains(element))   return;
  elementsDepthStack.add(element);
  final AntElement currentElement=getElement();
  try {
    for (    final PsiElement child : element.getChildren()) {
      if (child instanceof AntStructuredElement) {
        getVariants((AntStructuredElement)child,variants,elementsDepthStack,definedProperties);
        if (child instanceof AntImport) {
          AntImport antImport=(AntImport)child;
          final AntFile imported=antImport.getImportedFile();
          if (imported != null) {
            getVariants(imported.getAntProject(),variants,elementsDepthStack,definedProperties);
          }
        }
 else         if (child instanceof AntProperty) {
          AntProperty property=(AntProperty)child;
          final PropertiesFile propertiesFile=property.getPropertiesFile();
          if (propertiesFile == null) {
            if (currentElement != property) {
              addAntProperties(property,variants,definedProperties);
            }
          }
 else {
            for (            final Property importedProp : propertiesFile.getProperties()) {
              final String propName=importedProp.getName();
              if (!definedProperties.contains(propName)) {
                variants.add(importedProp);
                definedProperties.add(propName);
              }
            }
          }
        }
      }
    }
  }
  finally {
    elementsDepthStack.remove(element);
  }
}
