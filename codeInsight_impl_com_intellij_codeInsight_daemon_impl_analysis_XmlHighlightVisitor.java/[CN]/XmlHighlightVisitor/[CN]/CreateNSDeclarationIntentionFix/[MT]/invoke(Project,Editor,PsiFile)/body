{
  if (!CodeInsightUtil.prepareFileForWrite(file))   return;
  final boolean taglib=myTaglibDeclaration || file instanceof JspFile;
  final String[] namespaces=guessNamespace(file,project,taglib,!(file instanceof JspFile));
  if (namespaces.length > 1 && !ApplicationManager.getApplication().isUnitTestMode()) {
    final JList list=new JList(namespaces);
    list.setCellRenderer(new FQNameCellRenderer());
    Runnable runnable=new Runnable(){
      public void run(){
        final int index=list.getSelectedIndex();
        if (index < 0)         return;
        PsiDocumentManager.getInstance(project).commitAllDocuments();
        CommandProcessor.getInstance().executeCommand(project,new Runnable(){
          public void run(){
            ApplicationManager.getApplication().runWriteAction(new Runnable(){
              public void run(){
                try {
                  insertNsDeclaration(file,namespaces[index],project);
                }
 catch (                IncorrectOperationException e) {
                }
              }
            }
);
          }
        }
,getText(),getFamilyName());
      }
    }
;
    new PopupChooserBuilder(list).setTitle(XmlErrorMessages.message(myTaglibDeclaration ? "select.taglib.title" : "select.namespace.title")).setItemChoosenCallback(runnable).createPopup().showInBestPositionFor(editor);
  }
 else {
    String defaultNs=ApplicationManager.getApplication().isUnitTestMode() ? taglib ? XmlUtil.JSTL_CORE_URIS[0] : MY_DEFAULT_XML_NS : "";
    final XmlAttribute xmlAttribute=insertNsDeclaration(file,namespaces.length > 0 ? namespaces[0] : defaultNs,project);
    if (namespaces.length == 0) {
      final PsiElement valueToken=xmlAttribute.getValueElement().getChildren()[1];
      final TextRange textRange=valueToken.getTextRange();
      CommandProcessor.getInstance().executeCommand(project,new Runnable(){
        public void run(){
          if (valueToken instanceof XmlToken && ((XmlToken)valueToken).getTokenType() == XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN) {
            editor.getSelectionModel().setSelection(textRange.getStartOffset(),textRange.getEndOffset());
          }
          editor.getCaretModel().moveToOffset(textRange.getStartOffset());
        }
      }
,getText(),getFamilyName());
    }
  }
}
