{
  if (!(myElement instanceof XmlTag))   return;
  final XmlTag tag=(XmlTag)myElement;
  final ProgressIndicator pi=ProgressManager.getInstance().getProgressIndicator();
  if (acceptTaglib) {
    if (pi != null)     pi.setText(XmlErrorMessages.message("looking.in.tlds"));
    final JspManager instance=JspManager.getInstance(project);
    final JspFile jspFile=(JspFile)file;
    final String[] possibleTldUris=instance.getPossibleTldUris(jspFile);
    Arrays.sort(possibleTldUris);
    int i=0;
    final String localName=tag.getLocalName();
    for (    String uri : possibleTldUris) {
      if (pi != null) {
        pi.setFraction((double)i / possibleTldUris.length);
        pi.setText2(uri);
        ++i;
      }
      final XmlFile tldFileByUri=instance.getTldFileByUri(uri,jspFile);
      final boolean[] wordFound=new boolean[1];
      IdTableBuilding.ScanWordProcessor wordProcessor=new IdTableBuilding.ScanWordProcessor(){
        public void run(        char[] chars,        int start,        int end){
          if (end - start != localName.length() || wordFound[0])           return;
          for (int i=0; i < localName.length(); ++i) {
            if (chars[start + i] != localName.charAt(i))             return;
          }
          wordFound[0]=true;
        }
      }
;
      if (tldFileByUri == null)       continue;
      final CharSequence contents=tldFileByUri.getViewProvider().getContents();
      wordFound[0]=false;
      IdTableBuilding.scanWords(wordProcessor,CharArrayUtil.fromSequence(contents),0,contents.length());
      if (!wordFound[0])       continue;
      final PsiMetaDataBase metaData=tldFileByUri.getDocument().getMetaData();
      if (metaData instanceof TldDescriptor) {
        if (((TldDescriptor)metaData).getElementDescriptor(tag) != null) {
          possibleUris.add(uri);
        }
      }
    }
    if (file.getFileType() == StdFileTypes.JSPX && possibleUris.size() == 0) {
      final JspManager jspManager=JspManager.getInstance(file.getProject());
      final XmlElementDescriptor descriptor=((JspNsDescriptor)jspManager.getActionsLibrary()).getElementDescriptor(localName,XmlUtil.JSP_URI);
      if (descriptor != null)       possibleUris.add(XmlUtil.JSP_URI);
    }
  }
  if (acceptXmlNs) {
    if (pi != null)     pi.setText(XmlErrorMessages.message("looking.in.schemas"));
    final ExternalResourceManagerEx instanceEx=ExternalResourceManagerEx.getInstanceEx();
    final String[] availableUrls=instanceEx.getResourceUrls(null,true);
    int i=0;
    for (    String url : availableUrls) {
      if (pi != null) {
        pi.setFraction((double)i / availableUrls.length);
        pi.setText2(url);
        ++i;
      }
      final XmlFile xmlFile=XmlUtil.findXmlFile(file,url);
      if (xmlFile != null) {
        final PsiMetaDataBase metaData=xmlFile.getDocument().getMetaData();
        if (metaData instanceof XmlNSDescriptorImpl) {
          XmlElementDescriptor elementDescriptor=((XmlNSDescriptorImpl)metaData).getElementDescriptor(tag.getLocalName(),url);
          if (elementDescriptor != null && !(elementDescriptor instanceof AnyXmlElementDescriptor)) {
            possibleUris.add(url);
          }
        }
      }
    }
  }
}
