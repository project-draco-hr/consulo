{
  PsiReference[] references=value.getReferences();
  ProgressManager progressManager=ProgressManager.getInstance();
  for (  final PsiReference reference : references) {
    progressManager.checkCanceled();
    if (reference == null) {
      continue;
    }
    if (!reference.isSoft()) {
      if (hasBadResolve(reference)) {
        String description=getErrorDescription(reference);
        HighlightInfo info=HighlightInfo.createHighlightInfo(getTagProblemInfoType(PsiTreeUtil.getParentOfType(value,XmlTag.class)),reference.getElement().getTextRange().getStartOffset() + reference.getRangeInElement().getStartOffset(),reference.getElement().getTextRange().getStartOffset() + reference.getRangeInElement().getEndOffset(),description);
        addToResults(info);
        quickFixProvider.registerQuickfix(info,reference);
        if (reference instanceof QuickFixProvider)         ((QuickFixProvider)reference).registerQuickfix(info,reference);
      }
    }
    if (reference instanceof PsiJavaReference && myRefCountHolder != null) {
      final PsiJavaReference psiJavaReference=(PsiJavaReference)reference;
      myRefCountHolder.registerReference(psiJavaReference,psiJavaReference.advancedResolve(false));
    }
  }
}
