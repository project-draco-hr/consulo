{
  PsiReference[] references=value.getReferences();
  for (  final PsiReference reference : references) {
    if (reference != null) {
      if (!reference.isSoft()) {
        boolean hasBadResolve;
        if (reference instanceof PsiPolyVariantReference) {
          hasBadResolve=((PsiPolyVariantReference)reference).multiResolve(false).length == 0;
        }
 else {
          hasBadResolve=reference.resolve() == null;
        }
        if (hasBadResolve) {
          String message;
          if (reference instanceof EmptyResolveMessageProvider) {
            message=((GenericReference)reference).getUnresolvedMessage();
          }
 else {
            message=XmlErrorMessages.message("cannot.resolve.symbol");
          }
          HighlightInfo info=HighlightInfo.createHighlightInfo(getTagProblemInfoType(PsiTreeUtil.getParentOfType(value,XmlTag.class)),reference.getElement().getTextRange().getStartOffset() + reference.getRangeInElement().getStartOffset(),reference.getElement().getTextRange().getStartOffset() + reference.getRangeInElement().getEndOffset(),MessageFormat.format(message,reference.getCanonicalText()));
          addToResults(info);
          quickFixProvider.registerQuickfix(info,reference);
          if (reference instanceof QuickFixProvider)           ((QuickFixProvider)reference).registerQuickfix(info,reference);
        }
      }
      if (reference instanceof PsiJavaReference && myRefCountHolder != null) {
        final PsiJavaReference psiJavaReference=(PsiJavaReference)reference;
        myRefCountHolder.registerReference(psiJavaReference,psiJavaReference.advancedResolve(false));
      }
    }
  }
}
