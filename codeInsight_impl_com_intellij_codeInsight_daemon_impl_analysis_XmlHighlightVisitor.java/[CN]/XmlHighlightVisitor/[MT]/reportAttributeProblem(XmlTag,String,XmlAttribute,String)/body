{
  final RemoveAttributeIntentionFix removeAttributeIntention=new RemoveAttributeIntentionFix(localName,attribute);
  if (tag instanceof HtmlTag) {
  }
 else {
    final HighlightInfoType tagProblemInfoType=HighlightInfoType.WRONG_REF;
    IntentionAction[] quickFixes=new IntentionAction[]{removeAttributeIntention};
    final HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(tagProblemInfoType,XmlChildRole.ATTRIBUTE_NAME_FINDER.findChild(SourceTreeToPsiMap.psiElementToTree(attribute)),localizedMessage);
    addToResults(highlightInfo);
    for (    IntentionAction quickFix : quickFixes) {
      QuickFixAction.registerQuickFixAction(highlightInfo,quickFix);
    }
    return highlightInfo;
  }
  return null;
}
