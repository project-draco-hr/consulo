{
  final PsiReference reference=expression.getReference();
  if (reference == null) {
    for (    PsiElement child : expression.getChildren()) {
      replaceWithQualifiedReferences(child,root,factory);
    }
    return;
  }
  final PsiElement resolved=reference.resolve();
  if (resolved instanceof PsiVariable && !(resolved instanceof PsiField) && !PsiTreeUtil.isAncestor(root,resolved,false)) {
    final PsiVariable variable=(PsiVariable)resolved;
    PsiElement qualifiedExpr=factory.createExpressionFromText("this." + variable.getName(),expression);
    expression.replace(qualifiedExpr);
  }
}
