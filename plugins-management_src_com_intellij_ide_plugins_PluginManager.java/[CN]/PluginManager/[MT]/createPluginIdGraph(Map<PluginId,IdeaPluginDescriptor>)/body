{
  final PluginId[] ids=idToDescriptorMap.keySet().toArray(new PluginId[idToDescriptorMap.size()]);
  return GraphGenerator.create(CachingSemiGraph.create(new GraphGenerator.SemiGraph<PluginId>(){
    public Collection<PluginId> getNodes(){
      return Arrays.asList(ids);
    }
    public Iterator<PluginId> getIn(    PluginId pluginId){
      final IdeaPluginDescriptor descriptor=idToDescriptorMap.get(pluginId);
      ArrayList<PluginId> plugins=new ArrayList<PluginId>();
      for (      PluginId dependentPluginId : descriptor.getDependentPluginIds()) {
        if (idToDescriptorMap.containsKey(pluginId)) {
          plugins.add(pluginId);
        }
      }
      return plugins.iterator();
    }
  }
));
}
