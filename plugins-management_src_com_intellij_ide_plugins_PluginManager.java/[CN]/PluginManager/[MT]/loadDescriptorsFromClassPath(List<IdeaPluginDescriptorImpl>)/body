{
  try {
    final String homePath=PathManager.getHomePath();
    final ClassLoader classLoader=PluginManager.class.getClassLoader();
    final Class<? extends ClassLoader> aClass=classLoader.getClass();
    if (!aClass.getName().equals(IdeaClassLoader.class.getName()))     return;
    final ArrayList<URL> urls=(ArrayList<URL>)aClass.getDeclaredMethod("getUrls").invoke(classLoader);
    for (    URL url : urls) {
      final String protocol=url.getProtocol();
      if ("file".equals(protocol)) {
        final File file=new File(url.getFile());
        final String canonicalPath=file.getCanonicalPath();
        if (!canonicalPath.startsWith(homePath) || canonicalPath.endsWith(".jar"))         continue;
        final IdeaPluginDescriptorImpl pluginDescriptor=loadDescriptor(file);
        if (pluginDescriptor != null && !result.contains(pluginDescriptor)) {
          result.add(pluginDescriptor);
        }
      }
    }
  }
 catch (  Exception e) {
    System.err.println("Error loading plugins from classpath:");
    e.printStackTrace();
  }
}
