{
  if (isLoadingOfExternalPluginsDisabled()) {
    return IdeaPluginDescriptor.EMPTY_ARRAY;
  }
  final List<IdeaPluginDescriptor> result=new ArrayList<IdeaPluginDescriptor>();
  loadDescriptors(PathManager.getPluginsPath(),result);
  loadDescriptors(PathManager.getPreinstalledPluginsPath(),result);
  if (Boolean.valueOf(System.getProperty(IdeaApplication.IDEA_IS_INTERNAL_PROPERTY)).booleanValue()) {
    loadDescriptorsFromClassPath(result);
  }
  String errorMessage=filterBadPlugins(result);
  IdeaPluginDescriptor[] pluginDescriptors=result.toArray(new IdeaPluginDescriptor[result.size()]);
  try {
    Arrays.sort(pluginDescriptors,new PluginDescriptorComparator(pluginDescriptors));
  }
 catch (  Exception e) {
    errorMessage=IdeBundle.message("error.plugins.were.not.loaded",e.getMessage());
    pluginDescriptors=IdeaPluginDescriptor.EMPTY_ARRAY;
  }
  if (errorMessage != null) {
    JOptionPane.showMessageDialog(null,errorMessage,IdeBundle.message("title.plugin.error"),JOptionPane.ERROR_MESSAGE);
  }
  return pluginDescriptors;
}
