{
  configureExtensions();
  if (!shouldLoadPlugins()) {
    ourPlugins=new IdeaPluginDescriptorImpl[0];
    return;
  }
  final IdeaPluginDescriptorImpl[] pluginDescriptors=loadDescriptors();
  final Map<PluginId,IdeaPluginDescriptor> idToDescriptorMap=new HashMap<PluginId,IdeaPluginDescriptor>();
  for (  final IdeaPluginDescriptor descriptor : pluginDescriptors) {
    idToDescriptorMap.put(descriptor.getPluginId(),descriptor);
  }
  Arrays.sort(pluginDescriptors,getPluginDescriptorComparator(idToDescriptorMap));
  final Class callerClass=Reflection.getCallerClass(1);
  final ClassLoader parentLoader=callerClass.getClassLoader();
  for (  final IdeaPluginDescriptorImpl pluginDescriptor : pluginDescriptors) {
    final List<File> classPath=pluginDescriptor.getClassPath();
    final PluginId[] dependentPluginIds=pluginDescriptor.getDependentPluginIds();
    final ClassLoader[] parentLoaders=getParentLoaders(idToDescriptorMap,dependentPluginIds);
    final ClassLoader pluginClassLoader=createPluginClassLoader(classPath.toArray(new File[classPath.size()]),parentLoaders.length > 0 ? parentLoaders : new ClassLoader[]{parentLoader},pluginDescriptor);
    pluginDescriptor.setLoader(pluginClassLoader);
    pluginDescriptor.registerExtensions();
  }
  ourPlugins=pluginDescriptors;
}
