{
  if (pluginDescriptor.getUseIdeaClassLoader()) {
    try {
      final ClassLoader loader=PluginManager.class.getClassLoader();
      final Method addUrlMethod=getAddUrlMethod(loader);
      for (      File aClassPath : classPath) {
        final File file=aClassPath.getCanonicalFile();
        addUrlMethod.invoke(loader,file.toURL());
      }
      return loader;
    }
 catch (    NoSuchMethodException e) {
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
catch (    IllegalAccessException e) {
      e.printStackTrace();
    }
catch (    InvocationTargetException e) {
      e.printStackTrace();
    }
  }
  PluginId pluginId=pluginDescriptor.getPluginId();
  File pluginRoot=pluginDescriptor.getPath();
  if (ApplicationManager.getApplication().isUnitTestMode())   return null;
  try {
    final List<URL> urls=new ArrayList<URL>(classPath.length);
    for (    File aClassPath : classPath) {
      final File file=aClassPath.getCanonicalFile();
      urls.add(file.toURL());
    }
    return new PluginClassLoader(urls,parentLoaders,pluginId,pluginRoot);
  }
 catch (  MalformedURLException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  return null;
}
