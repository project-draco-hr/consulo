{
  if (!(element instanceof PsiBinaryExpression)) {
    return false;
  }
  if (element instanceof PsiLiteralExpression || element instanceof PsiClassObjectAccessExpression) {
    return false;
  }
  final PsiBinaryExpression expression=(PsiBinaryExpression)element;
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return false;
  }
  final PsiType type=rhs.getType();
  if (type == null || type.equalsToText("java.lang.String")) {
    return false;
  }
  if (!PsiUtil.isConstantExpression(expression)) {
    return false;
  }
  final PsiManager manager=element.getManager();
  final Project project=manager.getProject();
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
  final PsiConstantEvaluationHelper helper=facade.getConstantEvaluationHelper();
  try {
    final Object value=helper.computeConstantExpression(expression,true);
    if (value == null) {
      return false;
    }
  }
 catch (  ConstantEvaluationOverflowException ignore) {
    return false;
  }
  final PsiElement parent=element.getParent();
  return !(parent instanceof PsiExpression && PsiUtil.isConstantExpression((PsiExpression)parent));
}
