{
  final CyclicDependenciesBuilder builder=new CyclicDependenciesBuilder(myProject,new AnalysisScope(myProject,AnalysisScope.SOURCE_JAVA_FILES));
  builder.analyze();
  final HashMap<PsiPackage,Set<List<PsiPackage>>> cyclicDependencies=builder.getCyclicDependencies();
  HashMap<String,String[][]> expected=new HashMap<String,String[][]>();
  expected.put("com.b",new String[][]{{"com.a","com.b"}});
  expected.put("com.d",new String[][]{{"com.c","com.a","com.d"}});
  expected.put("com.c",new String[][]{{"com.a","com.d","com.c"}});
  expected.put("com.a",new String[][]{{"com.d","com.c","com.a"},{"com.b","com.a"}});
  checkResult(expected,cyclicDependencies,true);
}
