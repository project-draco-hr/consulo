{
  assertEquals(expected.size(),cycles.size());
  for (Iterator<PsiPackage> iterator=cycles.keySet().iterator(); iterator.hasNext(); ) {
    final PsiPackage psiPackage=iterator.next();
    assertTrue(expected.containsKey(psiPackage.getQualifiedName()));
    final String packs=psiPackage.getQualifiedName();
    if (forceContains) {
      assertEquals(expected.get(packs).length,cycles.get(psiPackage).size());
    }
    for (Iterator<ArrayList<PsiPackage>> iC=cycles.get(psiPackage).iterator(); iC.hasNext(); ) {
      final ArrayList<PsiPackage> cycle=iC.next();
      final String[][] expectedCycles=expected.get(packs);
      final String[] string=new String[cycle.size()];
      int i=0;
      for (Iterator<PsiPackage> iCycle=cycle.iterator(); iCycle.hasNext(); ) {
        final PsiPackage packageInCycle=iCycle.next();
        string[i++]=packageInCycle.getQualifiedName();
      }
      assertTrue(findInMatrix(expectedCycles,string) > -1);
    }
  }
}
