{
  if (!(another instanceof PsiClass))   return false;
  String name1=aClass.getName();
  if (name1 == null)   return false;
  if (!another.isValid())   return false;
  String name2=((PsiClass)another).getName();
  if (name2 == null)   return false;
  if (name1.hashCode() != name2.hashCode())   return false;
  if (!name1.equals(name2))   return false;
  String qName1=aClass.getQualifiedName();
  String qName2=((PsiClass)another).getQualifiedName();
  if (qName1 == null || qName2 == null) {
    if (qName1 != qName2)     return false;
    if (aClass instanceof PsiTypeParameter && another instanceof PsiTypeParameter) {
      PsiTypeParameter p1=(PsiTypeParameter)aClass;
      PsiTypeParameter p2=(PsiTypeParameter)another;
      return p1.getIndex() == p2.getIndex() && aClass.getManager().areElementsEquivalent(p1.getOwner(),p2.getOwner());
    }
 else {
      return false;
    }
  }
  if (qName1.hashCode() != qName2.hashCode() || !qName1.equals(qName2)) {
    return false;
  }
  if (originalElement(aClass).equals(originalElement((PsiClass)another))) {
    return true;
  }
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(aClass.getProject()).getFileIndex();
  final PsiFile file1=aClass.getContainingFile().getOriginalFile();
  final PsiFile file2=another.getContainingFile().getOriginalFile();
  if (file1.equals(file2)) {
    return true;
  }
  final VirtualFile vfile1=file1.getViewProvider().getVirtualFile();
  final VirtualFile vfile2=file2.getViewProvider().getVirtualFile();
  if ((fileIndex.isInSource(vfile1) || fileIndex.isInLibraryClasses(vfile1)) && (fileIndex.isInSource(vfile2) || fileIndex.isInLibraryClasses(vfile2))) {
    return true;
  }
  return false;
}
