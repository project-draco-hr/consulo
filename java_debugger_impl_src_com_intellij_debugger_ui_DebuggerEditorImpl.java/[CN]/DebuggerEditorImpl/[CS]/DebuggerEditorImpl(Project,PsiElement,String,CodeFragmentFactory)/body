{
  myProject=project;
  myContext=context;
  myRecentsId=recentsId;
  PsiManager.getInstance(project).addPsiTreeChangeListener(myPsiListener);
  setFactory(factory);
  myInitialFactory=true;
  setFocusable(false);
  myChooseFactory.setToolTipText("Click to change the language");
  myChooseFactory.setBorder(new EmptyBorder(0,3,0,3));
  new ClickListener(){
    @Override public boolean onClick(    MouseEvent e,    int clickCount){
      ListPopup oldPopup=myPopup != null ? myPopup.get() : null;
      if (oldPopup != null && !oldPopup.isDisposed()) {
        oldPopup.cancel();
        myPopup=null;
        return true;
      }
      if (!myChooseFactory.isEnabled()) {
        return true;
      }
      DefaultActionGroup actions=new DefaultActionGroup();
      for (      final CodeFragmentFactory fragmentFactory : getAllFactories()) {
        actions.add(new AnAction(fragmentFactory.getFileType().getLanguage().getDisplayName(),null,fragmentFactory.getFileType().getIcon()){
          @Override public void actionPerformed(          AnActionEvent e){
            setFactory(fragmentFactory);
            setText(getText());
            IdeFocusManager.getInstance(getProject()).requestFocus(DebuggerEditorImpl.this,true);
          }
        }
);
      }
      DataContext dataContext=DataManager.getInstance().getDataContext(DebuggerEditorImpl.this);
      ListPopup popup=JBPopupFactory.getInstance().createActionGroupPopup("Choose language",actions,dataContext,JBPopupFactory.ActionSelectionAid.SPEEDSEARCH,false);
      popup.showUnderneathOf(myChooseFactory);
      myPopup=new WeakReference<ListPopup>(popup);
      return true;
    }
  }
.installOn(myChooseFactory);
}
