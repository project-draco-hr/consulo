{
  return ApplicationManager.getApplication().runReadAction(new Computable<ProcessingItem[]>(){
    @Override public ProcessingItem[] compute(){
      final List<ProcessingItem> result=new ArrayList<ProcessingItem>();
      for (      Module module : ModuleManager.getInstance(context.getProject()).getModules()) {
        final AndroidFacet facet=AndroidFacet.getInstance(module);
        if (facet == null || !facet.getConfiguration().LIBRARY_PROJECT) {
          continue;
        }
        final CompilerModuleExtension extension=CompilerModuleExtension.getInstance(module);
        LOG.assertTrue(extension != null);
        final VirtualFile classesDir=extension.getCompilerOutputPath();
        if (classesDir == null) {
          continue;
        }
        final HashSet<VirtualFile> firstPackageDirs=new HashSet<VirtualFile>();
        AndroidDexCompiler.addModuleOutputDir(firstPackageDirs,classesDir);
        if (firstPackageDirs.size() == 0) {
          continue;
        }
        final VirtualFile outputDirectory=AndroidDexCompiler.getOutputDirectoryForDex(module);
        if (outputDirectory == null) {
          LOG.error("Cannot find output directory for dex");
          continue;
        }
        result.add(new MyProcessingItem(module,firstPackageDirs.toArray(new VirtualFile[firstPackageDirs.size()]),outputDirectory));
      }
      return result.toArray(new ProcessingItem[result.size()]);
    }
  }
);
}
