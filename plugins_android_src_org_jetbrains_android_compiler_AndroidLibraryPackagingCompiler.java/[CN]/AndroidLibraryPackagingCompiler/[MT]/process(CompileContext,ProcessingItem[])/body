{
  if (!AndroidCompileUtil.isFullBuild(context) || items == null || items.length == 0) {
    return ProcessingItem.EMPTY_ARRAY;
  }
  context.getProgressIndicator().setText("Packaging library modules...");
  final List<MyProcessingItem> result=new ArrayList<MyProcessingItem>();
  for (  ProcessingItem item : items) {
    final MyProcessingItem processingItem=(MyProcessingItem)item;
    if (!AndroidCompileUtil.isModuleAffected(context,processingItem.getModule())) {
      continue;
    }
    final String[] classesDirOsPaths=AndroidCompileUtil.toOsPaths(processingItem.getClassDirectories());
    final String outputJarOsPath=FileUtil.toSystemDependentName(processingItem.getOutputDirectory().getPath() + '/' + AndroidCompileUtil.CLASSES_JAR_FILE_NAME);
    final File outputJarFile=new File(outputJarOsPath);
    try {
      AndroidCompileUtil.packClassFilesIntoJar(ArrayUtil.EMPTY_STRING_ARRAY,classesDirOsPaths,outputJarFile);
      CompilerUtil.refreshIOFile(outputJarFile);
      result.add(processingItem);
    }
 catch (    IOException e) {
      if (e.getMessage() == null) {
        LOG.error(e);
      }
 else {
        LOG.info(e);
        context.addMessage(CompilerMessageCategory.ERROR,"Cannot pack sources of module " + processingItem.getModule().getName() + " to "+ outputJarFile.getName()+ ": "+ e.getMessage(),null,-1,-1);
      }
    }
  }
  return result.toArray(new MyProcessingItem[result.size()]);
}
