{
  Project project=(Project)e.getDataContext().getData(DataConstants.PROJECT);
  if (project != null) {
    ToolWindowManager toolWindowManager=ToolWindowManager.getInstance(project);
    String[] ids=toolWindowManager.getToolWindowIds();
    for (int i=0; i < ids.length; i++) {
      String id=ids[i];
      ToolWindow toolWindow=toolWindowManager.getToolWindow(id);
      if (ToolWindowType.FLOATING == toolWindow.getType() && toolWindow.isVisible()) {
        toolWindow.hide(null);
      }
    }
  }
  IdeFrame frame=getFrame(e);
  final Component focusedComponent=WindowManagerEx.getInstanceEx().getFocusedComponent(frame);
  GraphicsConfiguration graphicsConfiguration=frame.getGraphicsConfiguration();
  Rectangle bounds=graphicsConfiguration.getBounds();
  Insets insets=Toolkit.getDefaultToolkit().getScreenInsets(graphicsConfiguration);
  if (state) {
    frame.getRootPane().putClientProperty(PROP_BOUNDS_BEFORE_FULL_SCREEN,frame.getBounds());
    frame.dispose();
    frame.setUndecorated(true);
    frame.setBounds(bounds);
    frame.show();
    graphicsConfiguration.getDevice().setFullScreenWindow(frame);
  }
 else {
    Rectangle boundsBeforeFullScreen=(Rectangle)frame.getRootPane().getClientProperty(PROP_BOUNDS_BEFORE_FULL_SCREEN);
    frame.dispose();
    graphicsConfiguration.getDevice().setFullScreenWindow(null);
    frame.setUndecorated(false);
    if (boundsBeforeFullScreen != null) {
      frame.setBounds(boundsBeforeFullScreen);
      frame.show();
    }
 else {
      frame.setBounds(bounds.x + insets.left,bounds.y + insets.top,bounds.width - insets.left - insets.right,bounds.height - insets.top - insets.bottom);
      frame.show();
      frame.setExtendedState(Frame.MAXIMIZED_BOTH);
    }
  }
  if (focusedComponent != null) {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        focusedComponent.requestFocus();
      }
    }
);
  }
}
