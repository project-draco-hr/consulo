{
  final SSHPasswordProvider sshPasswordProvider=SSHPasswordProvider.getInstance();
  if (!myUsePrivateKeyFile.isSelected()) {
    final String cvsRoot=myRootProvider.getCurrentRoot();
    SshPasswordDialog sshPasswordDialog=new SshPasswordDialog(CvsBundle.message("propmt.text.enter.password.for",cvsRoot));
    sshPasswordDialog.show();
    if (!sshPasswordDialog.isOK())     return;
    sshPasswordProvider.removePPKPasswordFor(cvsRoot);
    sshPasswordProvider.storePasswordForCvsRoot(cvsRoot,sshPasswordDialog.getPassword(),sshPasswordDialog.saveThisPassword());
  }
 else {
    final String cvsRoot=myRootProvider.getCurrentRoot();
    SshPasswordDialog sshPasswordDialog=new SshPasswordDialog(CvsBundle.message("prompt.text.enter.private.key.file.password.for",cvsRoot));
    sshPasswordDialog.show();
    if (!sshPasswordDialog.isOK())     return;
    sshPasswordProvider.removePasswordFor(cvsRoot);
    sshPasswordProvider.storePPKPasswordForCvsRoot(cvsRoot,sshPasswordDialog.getPassword(),sshPasswordDialog.saveThisPassword());
  }
}
