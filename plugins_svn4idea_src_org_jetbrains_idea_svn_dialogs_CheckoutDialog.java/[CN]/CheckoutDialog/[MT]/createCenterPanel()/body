{
  JPanel panel=new JPanel();
  panel.setLayout(new GridBagLayout());
  GridBagConstraints gc=new GridBagConstraints();
  gc.insets=new Insets(2,2,2,2);
  gc.gridwidth=1;
  gc.gridheight=1;
  gc.gridx=0;
  gc.gridy=0;
  gc.anchor=GridBagConstraints.WEST;
  gc.fill=GridBagConstraints.NONE;
  gc.weightx=0;
  gc.weighty=0;
  JLabel label=new JLabel("Repository &URL:");
  panel.add(label,gc);
  gc.gridx+=1;
  gc.fill=GridBagConstraints.HORIZONTAL;
  gc.weightx=1;
  myRepositoryBox=new JComboBox();
  myRepositoryBox.setEditable(true);
  panel.add(myRepositoryBox,gc);
  DialogUtil.registerMnemonic(label,myRepositoryBox);
  gc.gridx+=1;
  gc.fill=GridBagConstraints.NONE;
  gc.anchor=GridBagConstraints.EAST;
  gc.weightx=0;
  DefaultActionGroup group=new DefaultActionGroup();
  group.add(new RefreshAction());
  ActionToolbar tb=ActionManager.getInstance().createActionToolbar("",group,false);
  panel.add(tb.getComponent(),gc);
  gc.gridy+=1;
  gc.gridx=0;
  gc.weightx=1;
  gc.weighty=1;
  gc.fill=GridBagConstraints.BOTH;
  gc.anchor=GridBagConstraints.WEST;
  gc.gridwidth=3;
  myRepositoryBrowser=new RepositoryBrowserComponent(SvnVcs.getInstance(myProject));
  panel.add(myRepositoryBrowser,gc);
  gc.gridy+=1;
  gc.weightx=0;
  gc.weighty=0;
  gc.gridwidth=1;
  gc.fill=GridBagConstraints.NONE;
  panel.add(new JLabel("Checkout From:"),gc);
  gc.gridx+=1;
  gc.gridwidth=2;
  gc.weightx=1;
  gc.fill=GridBagConstraints.HORIZONTAL;
  final JLabel URLLabel=new JLabel();
  URLLabel.setFont(URLLabel.getFont().deriveFont(Font.BOLD));
  panel.add(URLLabel,gc);
  myRepositoryBrowser.addChangeListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent treeSelectionEvent){
      String url=myRepositoryBrowser.getSelectedURL();
      if (url == null) {
        URLLabel.setText("");
      }
 else {
        URLLabel.setText(url);
        if (!myIsDstChanged) {
          String path=myDestinationText.getText();
          if (path != null && path.trim().length() > 0) {
            path=path.replace(File.separatorChar,'/');
            if (!PathUtil.isEmpty(path)) {
              path=PathUtil.removeTail(path);
              path=PathUtil.append(path,PathUtil.decode(PathUtil.tail(url)));
            }
 else {
              path=PathUtil.decode(PathUtil.tail(url));
            }
            path=path.replace('/',File.separatorChar);
          }
          myDestinationText.setText(path);
          myDestinationText.getTextField().selectAll();
        }
      }
      getOKAction().setEnabled(isOKActionEnabled());
    }
  }
);
  gc.gridy+=1;
  gc.weightx=0;
  gc.weighty=0;
  gc.gridx=0;
  gc.gridwidth=1;
  gc.fill=GridBagConstraints.NONE;
  JLabel checkoutFileLabel=new JLabel("Checkout &To:");
  panel.add(checkoutFileLabel,gc);
  gc.gridx+=1;
  gc.gridwidth=2;
  gc.weightx=1;
  gc.fill=GridBagConstraints.HORIZONTAL;
  myDestinationText=new TextFieldWithBrowseButton(this);
  myDestinationText.setEditable(true);
  panel.add(myDestinationText,gc);
  gc.gridy+=1;
  gc.gridx=0;
  gc.gridwidth=3;
  gc.weightx=1;
  gc.fill=GridBagConstraints.HORIZONTAL;
  gc.anchor=GridBagConstraints.WEST;
  DialogUtil.registerMnemonic(checkoutFileLabel,myDestinationText);
  panel.add(new JSeparator(),gc);
  return panel;
}
