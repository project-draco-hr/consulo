{
  super.init();
  SvnConfiguration config=SvnConfiguration.getInstance(myProject);
  Collection urls=config == null ? Collections.EMPTY_LIST : config.getCheckoutURLs();
  VirtualFile file=myProject.getProjectFile();
  if (file != null && file.getParent() != null) {
    VirtualFile parent=file.getParent();
    if (parent != null) {
      String defaultPath=parent.getPath().replace('/',File.separatorChar);
      myDestinationText.setText(defaultPath);
    }
  }
 else {
    String path=System.getProperty("user.home","");
    path=path.replace('/',File.separatorChar);
    myDestinationText.setText(path);
  }
  myDestinationText.getTextField().selectAll();
  myDestinationText.getTextField().getDocument().addDocumentListener(new DocumentListener(){
    public void insertUpdate(    DocumentEvent e){
      getOKAction().setEnabled(isOKActionEnabled());
    }
    public void removeUpdate(    DocumentEvent e){
      getOKAction().setEnabled(isOKActionEnabled());
    }
    public void changedUpdate(    DocumentEvent e){
      getOKAction().setEnabled(isOKActionEnabled());
    }
  }
);
  String lastURL=null;
  for (Iterator us=urls.iterator(); us.hasNext(); ) {
    String url=(String)us.next();
    myRepositoryBox.addItem(url);
    lastURL=url;
  }
  if (config != null && config.getLastSelectedCheckoutURL() != null) {
    lastURL=config.getLastSelectedCheckoutURL();
  }
  if (lastURL != null) {
    myRepositoryBox.getEditor().setItem(lastURL);
    myRepositoryBox.setSelectedItem(lastURL);
  }
 else {
    lastURL=(String)myRepositoryBox.getSelectedItem();
  }
  myRepositoryBox.getEditor().selectAll();
  if (urls.isEmpty()) {
    myRepositoryBrowser.setRepositoryURL(null,false);
  }
 else {
    myRepositoryBrowser.setRepositoryURL(lastURL,false);
    if (myRepositoryBrowser.getRootURL() != null) {
      myRepositoryBrowser.getPreferredFocusedComponent().requestFocus();
    }
  }
  final JTextField editor=(JTextField)myRepositoryBox.getEditor().getEditorComponent();
  editor.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ENTER) {
        e.consume();
        String url=editor.getText();
        myRepositoryBrowser.setRepositoryURL(url,false);
        if (myRepositoryBrowser.getRootURL() != null) {
          myRepositoryBrowser.getPreferredFocusedComponent().requestFocus();
        }
      }
    }
  }
);
  myRepositoryBox.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED && !myIsDialogClosed) {
        String url=(String)myRepositoryBox.getEditor().getItem();
        myRepositoryBrowser.setRepositoryURL(url,false);
        if (myRepositoryBrowser.getRootURL() != null) {
          SvnConfiguration.getInstance(myProject).addCheckoutURL(myRepositoryBrowser.getRootURL());
          myRepositoryBrowser.getPreferredFocusedComponent().requestFocus();
        }
      }
      getOKAction().setEnabled(isOKActionEnabled());
    }
  }
);
}
