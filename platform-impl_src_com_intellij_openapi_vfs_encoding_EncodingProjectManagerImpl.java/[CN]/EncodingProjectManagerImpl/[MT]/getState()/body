{
  Element element=new Element("x");
  List<VirtualFile> files=new ArrayList<VirtualFile>(myMapping.keySet());
  Collections.sort(files,new Comparator<VirtualFile>(){
    public int compare(    final VirtualFile o1,    final VirtualFile o2){
      if (o1 == null || o2 == null)       return o1 == null ? o2 == null ? 0 : 1 : -1;
      return o1.getPath().compareTo(o2.getPath());
    }
  }
);
  for (  VirtualFile file : files) {
    Charset charset=myMapping.get(file);
    Element child=new Element("file");
    element.addContent(child);
    child.setAttribute("url",file == null ? "PROJECT" : file.getUrl());
    child.setAttribute("charset",charset.name());
  }
  element.setAttribute("useUTFGuessing",Boolean.toString(myUseUTFGuessing));
  element.setAttribute("native2AsciiForPropertiesFiles",Boolean.toString(myNative2AsciiForPropertiesFiles));
  if (myDefaultCharsetForPropertiesFiles != null) {
    element.setAttribute("defaultCharsetForPropertiesFiles",myDefaultCharsetForPropertiesFiles.name());
  }
  return element;
}
