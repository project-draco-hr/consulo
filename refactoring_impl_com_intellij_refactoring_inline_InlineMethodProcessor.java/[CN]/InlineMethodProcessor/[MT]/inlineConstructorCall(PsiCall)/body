{
  final PsiMethod oldConstructor=constructorCall.resolveMethod();
  LOG.assertTrue(oldConstructor != null);
  final PsiExpression[] instanceCreationArguments=constructorCall.getArgumentList().getExpressions();
  final PsiParameter[] parameters=oldConstructor.getParameterList().getParameters();
  LOG.assertTrue(parameters.length == instanceCreationArguments.length);
  PsiStatement[] statements=oldConstructor.getBody().getStatements();
  LOG.assertTrue(statements.length == 1 && statements[0] instanceof PsiExpressionStatement);
  PsiExpression expression=((PsiExpressionStatement)statements[0]).getExpression();
  LOG.assertTrue(expression instanceof PsiMethodCallExpression);
  PsiMethodCallExpression methodCall=(PsiMethodCallExpression)expression.copy();
  final PsiExpression[] args=methodCall.getArgumentList().getExpressions();
  for (  PsiExpression arg : args) {
    replaceParameterReferences(arg,oldConstructor,instanceCreationArguments);
  }
  try {
    constructorCall.getArgumentList().replace(methodCall.getArgumentList());
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
