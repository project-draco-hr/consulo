{
  final PsiMethod oldConstructor=constructorCall.resolveMethod();
  LOG.assertTrue(oldConstructor != null);
  final PsiManager manager=oldConstructor.getManager();
  final PsiExpression[] instanceCreationArguments=constructorCall.getArgumentList().getExpressions();
  final PsiParameter[] parameters=oldConstructor.getParameterList().getParameters();
  LOG.assertTrue(parameters.length == instanceCreationArguments.length);
  PsiStatement[] statements=oldConstructor.getBody().getStatements();
  LOG.assertTrue(statements.length == 1 && statements[0] instanceof PsiExpressionStatement);
  PsiExpression expression=((PsiExpressionStatement)statements[0]).getExpression();
  LOG.assertTrue(expression instanceof PsiMethodCallExpression);
  PsiMethodCallExpression methodCall=(PsiMethodCallExpression)expression.copy();
  final PsiExpression[] args=methodCall.getArgumentList().getExpressions();
  for (  PsiExpression arg : args) {
    arg.accept(new PsiRecursiveElementVisitor(){
      public void visitReferenceExpression(      PsiReferenceExpression expression){
        PsiElement resolved=expression.resolve();
        if (resolved instanceof PsiParameter && manager.areElementsEquivalent(((PsiParameter)resolved).getDeclarationScope(),oldConstructor)) {
          PsiElement declarationScope=((PsiParameter)resolved).getDeclarationScope();
          PsiParameter[] declarationParameters=((PsiMethod)declarationScope).getParameterList().getParameters();
          for (int j=0; j < declarationParameters.length; j++) {
            if (declarationParameters[j] == resolved) {
              try {
                expression.replace(instanceCreationArguments[j]);
                break;
              }
 catch (              IncorrectOperationException e) {
                LOG.error(e);
              }
            }
          }
        }
      }
    }
);
  }
  try {
    constructorCall.getArgumentList().replace(methodCall.getArgumentList());
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
