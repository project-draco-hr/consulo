{
  boolean isAccessedForWriting=false;
  final Collection<PsiReference> refs=ReferencesSearch.search(variable).findAll();
  for (  PsiReference ref : refs) {
    PsiElement refElement=ref.getElement();
    if (refElement instanceof PsiExpression) {
      if (PsiUtil.isAccessedForWriting((PsiExpression)refElement)) {
        isAccessedForWriting=true;
      }
    }
  }
  PsiExpression initializer=variable.getInitializer();
  boolean shouldBeFinal=variable.hasModifierProperty(PsiModifier.FINAL) && strictlyFinal;
  return canInlineParmOrThisVariable(initializer,shouldBeFinal,strictlyFinal,refs.size(),isAccessedForWriting);
}
