{
  VfsUtilCore.visitChildrenRecursively(dir,new VirtualFileVisitor<String>(){
{
      setValueForChildren(packageName);
    }
    @Override public boolean visitFile(    @NotNull VirtualFile file){
      if (progress != null)       progress.checkCanceled();
      int dirId=getId(file);
      if (!file.isDirectory() && dirId != getId(dir) || isIgnored(file))       return false;
      DirectoryInfo info=getOrCreateDirInfo(dirId);
      if (info.isInLibrarySource()) {
        String definedPackage=myDirToPackageName.get(dirId);
        if (definedPackage != null && definedPackage.isEmpty())         return false;
      }
      info=info.withInLibrarySource(true).withSourceRoot(sourceRoot);
      storeInfo(info,dirId);
      final String packageName=getCurrentValue();
      final String newPackageName=Comparing.equal(file,dir) ? packageName : getPackageNameForSubdir(packageName,file.getName());
      setPackageName(dirId,newPackageName);
      setValueForChildren(newPackageName);
      return true;
    }
  }
);
}
