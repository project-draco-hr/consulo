{
  final boolean vertical=isVertical();
  int hGap=JBUI.scale(vertical ? 2 : 1);
  int vGap=JBUI.scale(vertical ? 1 : 2);
  int w=adjustThumbWidth(thumbBounds.width - hGap * 2);
  int h=thumbBounds.height - vGap * 2;
  if (vertical) {
    h-=JBUI.scale(1);
  }
 else {
    w-=JBUI.scale(1);
  }
  final Paint paint;
  final Color start=adjustColor(getGradientLightColor());
  final Color end=adjustColor(getGradientDarkColor());
  if (vertical) {
    paint=UIUtil.getGradientPaint(JBUI.scale(1),0,start,w + JBUI.scale(1),0,end);
  }
 else {
    paint=UIUtil.getGradientPaint(0,JBUI.scale(1),start,0,h + JBUI.scale(1),end);
  }
  g.setPaint(paint);
  g.fillRect(hGap + JBUI.scale(1),vGap + JBUI.scale(1),w - JBUI.scale(1),h - JBUI.scale(1));
  final Stroke stroke=g.getStroke();
  g.setStroke(BORDER_STROKE);
  g.setColor(getGradientThumbBorderColor());
  g.drawRoundRect(hGap,vGap,w,h,JBUI.scale(3),JBUI.scale(3));
  g.setStroke(stroke);
}
