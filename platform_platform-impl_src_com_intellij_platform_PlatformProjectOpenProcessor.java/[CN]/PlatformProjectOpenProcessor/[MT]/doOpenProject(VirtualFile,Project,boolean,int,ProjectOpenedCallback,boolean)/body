{
  VirtualFile baseDir=virtualFile;
  if (!baseDir.isDirectory()) {
    baseDir=virtualFile.getParent();
    while (baseDir != null) {
      if (new File(baseDir.getPath(),".idea").exists()) {
        break;
      }
      baseDir=baseDir.getParent();
    }
    if (baseDir == null) {
      baseDir=virtualFile.getParent();
    }
  }
  final File projectDir=new File(baseDir.getPath(),".idea");
  Project[] openProjects=ProjectManager.getInstance().getOpenProjects();
  if (!forceOpenInNewFrame && openProjects.length > 0) {
    if (projectToClose == null) {
      projectToClose=openProjects[openProjects.length - 1];
    }
    if (ProjectAttachProcessor.canAttachToProject() && allowAttach) {
      final OpenOrAttachDialog dialog=new OpenOrAttachDialog(projectToClose);
      dialog.show();
      if (dialog.getExitCode() != DialogWrapper.OK_EXIT_CODE) {
        return null;
      }
      if (dialog.isReplace()) {
        if (!ProjectUtil.closeAndDispose(projectToClose))         return null;
      }
 else       if (dialog.isAttach()) {
        if (attachToProject(projectToClose,projectDir,callback))         return null;
      }
    }
 else {
      int exitCode=ProjectUtil.confirmOpenNewProject(false);
      if (exitCode == 0) {
        if (!ProjectUtil.closeAndDispose(projectToClose))         return null;
      }
 else       if (exitCode != 1) {
        return null;
      }
    }
  }
  final ProjectManagerEx projectManager=ProjectManagerEx.getInstanceEx();
  Project project=null;
  if (projectDir.exists()) {
    try {
      for (      ProjectOpenProcessor processor : ProjectOpenProcessor.EXTENSION_POINT_NAME.getExtensions()) {
        processor.refreshProjectFiles(projectDir);
      }
      project=((ProjectManagerImpl)projectManager).convertAndLoadProject(baseDir.getPath());
    }
 catch (    Exception e) {
    }
  }
 else {
    projectDir.mkdirs();
  }
  if (project == null) {
    project=projectManager.newProject(projectDir.getParentFile().getName(),projectDir.getParent(),true,false);
  }
  if (project == null)   return null;
  final Module module=runDirectoryProjectConfigurators(baseDir,project);
  openFileFromCommandLine(project,virtualFile,line);
  projectManager.openProject(project);
  if (callback != null) {
    callback.projectOpened(project,module);
  }
  return project;
}
