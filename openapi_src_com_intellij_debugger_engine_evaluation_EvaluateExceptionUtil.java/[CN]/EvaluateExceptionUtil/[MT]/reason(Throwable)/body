{
  if (th instanceof InvalidTypeException) {
    return "Type mistmatch";
  }
 else   if (th instanceof AbsentInformationException) {
    return "Debug info unavailable";
  }
 else   if (th instanceof ClassNotLoadedException) {
    return "Class '" + ((ClassNotLoadedException)th).className() + "' is not loaded";
  }
 else   if (th instanceof ClassNotPreparedException) {
    return th.getMessage();
  }
 else   if (th instanceof IncompatibleThreadStateException) {
    return "Cannot evaluate: thread is not paused at breakpoint";
  }
 else   if (th instanceof InconsistentDebugInfoException) {
    return "Debug info inconsistent";
  }
 else   if (th instanceof ObjectCollectedException) {
    return "Object was collected";
  }
 else   if (th instanceof InvocationException) {
    InvocationException invocationException=(InvocationException)th;
    return "Method threw '" + invocationException.exception().referenceType().name() + "' exception.";
  }
 else   if (th instanceof EvaluateException) {
    return th.getMessage();
  }
 else {
    return th.getClass().getName() + " : " + (th.getMessage() != null ? th.getMessage() : "");
  }
}
