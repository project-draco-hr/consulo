{
  myConsole=executionResult.getExecutionConsole();
  myRunContentDescriptor=new RunContentDescriptor(myConsole,executionResult.getProcessHandler(),myContentPanel,getSessionName());
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    return myRunContentDescriptor;
  }
  Content content=findContent(CONSOLE_CONTENT);
  if (content != null) {
    myViewsContentManager.removeContent(content);
  }
  ArrayList<Content> logContents=new ArrayList<Content>();
  if (myConfiguration instanceof RunConfigurationBase && !(myConfiguration instanceof JUnitConfiguration)) {
    clearLogContents();
    RunConfigurationBase base=(RunConfigurationBase)myConfiguration;
    final Map<Pair<String,String>,Boolean> logFiles=base.getLogFiles();
    for (Iterator<Pair<String,String>> iterator=logFiles.keySet().iterator(); iterator.hasNext(); ) {
      Pair<String,String> pair=iterator.next();
      if (logFiles.get(pair).booleanValue()) {
        final LogConsoleTab logTab=new LogConsoleTab(myProject,new File(pair.first));
        myLogTabs.add(logTab);
        Content logContent=PeerFactory.getInstance().getContentFactory().createContent(logTab.getComponent(),"Log: " + pair.second,false);
        logContent.putUserData(CONTENT_KIND,LOG_CONTENTS);
        logContents.add(logContent);
      }
    }
  }
  content=PeerFactory.getInstance().getContentFactory().createContent(myConsole.getComponent(),"Console",false);
  content.setIcon(CONSOLE_ICON);
  content.putUserData(CONTENT_KIND,CONSOLE_CONTENT);
  Content[] contents=myViewsContentManager.getContents();
  myViewsContentManager.removeAllContents();
  myViewsContentManager.addContent(content);
  for (int i=0; i < contents.length; i++) {
    myViewsContentManager.addContent(contents[i]);
  }
  for (Iterator<Content> iterator=logContents.iterator(); iterator.hasNext(); ) {
    myViewsContentManager.addContent(iterator.next());
  }
  if (myToolBarPanel != null) {
    myContentPanel.remove(myToolBarPanel);
  }
  myFirstToolbar=createFirstToolbar(myRunContentDescriptor,myContentPanel);
  mySecondToolbar=createSecondToolbar();
  myToolBarPanel=new JPanel(new GridLayout(1,2));
  myToolBarPanel.add(myFirstToolbar.getComponent());
  myToolBarPanel.add(mySecondToolbar.getComponent());
  myContentPanel.add(myToolBarPanel,BorderLayout.WEST);
  return myRunContentDescriptor;
}
