{
  final File jdkHome=new File(sdk.getHomePath());
  VirtualFile[] classes=findClasses(jdkHome,false);
  VirtualFile sources=findSources(jdkHome);
  VirtualFile docs=findDocs(jdkHome,"docs/api");
  final SdkModificator sdkModificator=sdk.getSdkModificator();
  final Set<VirtualFile> previousRoots=new LinkedHashSet<VirtualFile>(Arrays.asList(sdkModificator.getRoots(OrderRootType.CLASSES)));
  sdkModificator.removeRoots(OrderRootType.CLASSES);
  previousRoots.removeAll(new HashSet<VirtualFile>(Arrays.asList(classes)));
  for (  VirtualFile aClass : classes) {
    sdkModificator.addRoot(aClass,OrderRootType.CLASSES);
  }
  for (  VirtualFile root : previousRoots) {
    sdkModificator.addRoot(root,OrderRootType.CLASSES);
  }
  if (sources != null) {
    sdkModificator.addRoot(sources,OrderRootType.SOURCES);
  }
  if (docs != null) {
    sdkModificator.addRoot(docs,JavadocOrderRootType.getInstance());
  }
 else   if (SystemInfo.isMac) {
    VirtualFile commonDocs=findDocs(jdkHome,"docs");
    if (commonDocs == null) {
      commonDocs=findInJar(new File(jdkHome,"docs.jar"),"doc/api");
      if (commonDocs == null) {
        commonDocs=findInJar(new File(jdkHome,"docs.jar"),"docs/api");
      }
    }
    if (commonDocs != null) {
      sdkModificator.addRoot(commonDocs,JavadocOrderRootType.getInstance());
    }
    VirtualFile appleDocs=findDocs(jdkHome,"appledocs");
    if (appleDocs == null) {
      appleDocs=findInJar(new File(jdkHome,"appledocs.jar"),"appledoc/api");
    }
    if (appleDocs != null) {
      sdkModificator.addRoot(appleDocs,JavadocOrderRootType.getInstance());
    }
  }
  attachJdkAnnotations(sdkModificator);
  sdkModificator.commitChanges();
}
