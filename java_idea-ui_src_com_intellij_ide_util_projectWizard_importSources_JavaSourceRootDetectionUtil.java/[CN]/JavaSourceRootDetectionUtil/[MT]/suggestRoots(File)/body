{
  final List<JavaSourceRootDetector> detectors=ContainerUtil.findAll(ProjectStructureDetector.EP_NAME.getExtensions(),JavaSourceRootDetector.class);
  final RootDetectionProcessor processor=new RootDetectionProcessor(dir,detectors.toArray(new JavaSourceRootDetector[detectors.size()]));
  final Map<ProjectStructureDetector,List<DetectedProjectRoot>> rootsMap=processor.findRoots();
  Map<File,JavaModuleSourceRoot> result=new HashMap<File,JavaModuleSourceRoot>();
  for (  List<DetectedProjectRoot> roots : rootsMap.values()) {
    for (    DetectedProjectRoot root : roots) {
      if (root instanceof JavaModuleSourceRoot) {
        final JavaModuleSourceRoot sourceRoot=(JavaModuleSourceRoot)root;
        final File directory=sourceRoot.getDirectory();
        final JavaModuleSourceRoot oldRoot=result.remove(directory);
        if (oldRoot != null) {
          result.put(directory,oldRoot.combineWith(sourceRoot));
        }
 else {
          result.put(directory,sourceRoot);
        }
      }
    }
  }
  return result.values();
}
