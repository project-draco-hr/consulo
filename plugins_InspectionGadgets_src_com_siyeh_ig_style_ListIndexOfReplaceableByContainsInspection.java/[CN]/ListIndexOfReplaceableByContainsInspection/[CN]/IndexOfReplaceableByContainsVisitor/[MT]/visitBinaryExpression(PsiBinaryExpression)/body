{
  super.visitBinaryExpression(expression);
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return;
  }
  if (!ComparisonUtils.isComparison(expression)) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  if (lhs instanceof PsiMethodCallExpression) {
    final PsiJavaToken sign=expression.getOperationSign();
    if (canBeReplacedByContains(lhs,sign,rhs,false)) {
      registerError(expression,expression);
    }
  }
 else   if (rhs instanceof PsiMethodCallExpression) {
    final PsiJavaToken sign=expression.getOperationSign();
    if (canBeReplacedByContains(rhs,sign,lhs,true)) {
      registerError(expression,expression);
    }
  }
}
