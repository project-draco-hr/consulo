{
  if (!interval.isValid())   return false;
  try {
    l.writeLock().lock();
    modCount++;
    if (!interval.isValid())     return false;
    checkBelongsToTheTree(interval,true);
    checkMax(true);
    processReferenceQueue();
    IntervalNode<T> node=lookupNode(interval);
    if (node == null)     return false;
    reportInvalidation(interval,"Explicit Dispose");
    node.removeInterval(interval);
    setNode(interval,null);
    checkMax(true);
    return true;
  }
  finally {
    l.writeLock().unlock();
  }
}
