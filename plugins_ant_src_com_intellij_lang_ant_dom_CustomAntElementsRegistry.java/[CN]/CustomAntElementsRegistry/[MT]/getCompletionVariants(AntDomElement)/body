{
  if (parentElement instanceof AntDomCustomElement) {
    return Collections.emptySet();
  }
  final Set<XmlName> result=new HashSet<XmlName>();
  final Pair<AntDomMacroDef,AntDomScriptDef> contextMacroOrScriptDef=getContextMacroOrScriptDef(parentElement);
  final AntDomMacroDef restrictToMacroDef=contextMacroOrScriptDef != null ? contextMacroOrScriptDef.getFirst() : null;
  final AntDomScriptDef restrictToScriptDef=contextMacroOrScriptDef != null ? contextMacroOrScriptDef.getSecond() : null;
  final boolean parentIsDataType=parentElement.isDataType();
  for (  final XmlName xmlName : myCustomElements.keySet()) {
    final AntDomNamedElement declaringElement=myDeclarations.get(xmlName);
    if (declaringElement instanceof AntDomMacrodefElement) {
      if (restrictToMacroDef == null || !restrictToMacroDef.equals(declaringElement.getParentOfType(AntDomMacroDef.class,true))) {
        continue;
      }
    }
 else     if (declaringElement instanceof AntDomScriptdefElement) {
      if (restrictToScriptDef == null || !restrictToScriptDef.equals(declaringElement.getParentOfType(AntDomScriptDef.class,true))) {
        continue;
      }
    }
    if (declaringElement != null) {
      if (declaringElement.equals(restrictToMacroDef) || declaringElement.equals(restrictToScriptDef)) {
        continue;
      }
    }
    if (parentIsDataType) {
      if (declaringElement instanceof AntDomMacroDef || declaringElement instanceof AntDomScriptDef || declaringElement instanceof AntDomTaskdef) {
        continue;
      }
      if (declaringElement instanceof AntDomTypeDef) {
        final AntDomTypeDef typedef=(AntDomTypeDef)declaringElement;
        final Class clazz=lookupClass(xmlName);
        if (clazz != null && typedef.isTask(clazz)) {
          continue;
        }
      }
    }
    result.add(xmlName);
  }
  return result;
}
