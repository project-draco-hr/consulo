{
  final String uri=typedef.getUri().getStringValue();
  final String customTagName=typedef.getName().getStringValue();
  final String classname=typedef.getClassName().getStringValue();
  if (classname != null && customTagName != null) {
    registerElement(typedef,customTagName,uri,classname,getClassLoader(typedef,antProject));
  }
 else {
    XmlFile xmlFile=null;
    PropertiesFile propFile=null;
    ClassLoader loader=null;
    final XmlElement xmlElement=antProject.getXmlElement();
    final Project project=xmlElement != null ? xmlElement.getProject() : null;
    if (project != null) {
      final String resource=typedef.getResource().getStringValue();
      if (resource != null) {
        loader=getClassLoader(typedef,antProject);
        if (loader != null) {
          final InputStream stream=loader.getResourceAsStream(resource);
          if (stream != null) {
            try {
              if (isXmlFormat(typedef,resource)) {
                xmlFile=(XmlFile)loadContentAsFile(project,stream,StdFileTypes.XML);
              }
 else {
                propFile=(PropertiesFile)loadContentAsFile(project,stream,StdFileTypes.PROPERTIES);
              }
            }
 catch (            IOException e) {
              LOG.info(e);
            }
          }
 else {
            myTypeDefErrors.put(typedef,"Resource \"" + resource + "\" not found in the classpath");
          }
        }
      }
 else {
        final PsiFileSystemItem file=typedef.getFile().getValue();
        if (file instanceof PsiFile) {
          if (isXmlFormat(typedef,file.getName())) {
            xmlFile=file instanceof XmlFile ? (XmlFile)file : (XmlFile)loadContentAsFile((PsiFile)file,StdFileTypes.XML);
          }
 else {
            propFile=file instanceof PropertiesFile ? (PropertiesFile)file : (PropertiesFile)loadContentAsFile((PsiFile)file,StdFileTypes.PROPERTIES);
          }
        }
      }
      if (propFile != null) {
        if (loader == null) {
          loader=getClassLoader(typedef,antProject);
        }
        for (        final IProperty property : propFile.getProperties()) {
          registerElement(typedef,property.getUnescapedKey(),uri,property.getValue(),loader);
        }
      }
      if (xmlFile != null) {
        loadDefinitionsFromAntlib(xmlFile,uri,loader != null ? loader : getClassLoader(typedef,antProject),typedef);
      }
    }
  }
}
