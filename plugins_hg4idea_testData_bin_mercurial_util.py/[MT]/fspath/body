def fspath(name, root):
    "Get name in the case stored in the filesystem\n\n    The name is either relative to root, or it is an absolute path starting\n    with root. Note that this function is unnecessary, and should not be\n    called, for case-sensitive filesystems (simply because it's expensive).\n    "
    if name.lower().startswith(root.lower()):
        l = len(root)
        if ((name[l] == os.sep) or (name[l] == os.altsep)):
            l = (l + 1)
        name = name[l:]
    if (not os.path.exists(os.path.join(root, name))):
        return None
    seps = os.sep
    if os.altsep:
        seps = (seps + os.altsep)
    seps.replace('\\', '\\\\')
    pattern = re.compile(('([^%s]+)|([%s]+)' % (seps, seps)))
    dir = os.path.normcase(os.path.normpath(root))
    result = []
    for (part, sep) in pattern.findall(name):
        if sep:
            result.append(sep)
            continue
        if (dir not in _fspathcache):
            _fspathcache[dir] = os.listdir(dir)
        contents = _fspathcache[dir]
        lpart = part.lower()
        lenp = len(part)
        for n in contents:
            if ((lenp == len(n)) and (n.lower() == lpart)):
                result.append(n)
                break
        else:
            result.append(part)
        dir = os.path.join(dir, lpart)
    return ''.join(result)
