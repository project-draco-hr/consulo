def system(cmd, environ={}, cwd=None, onerr=None, errprefix=None):
    'enhanced shell command execution.\n    run with environment maybe modified, maybe in different dir.\n\n    if command fails and onerr is None, return status.  if ui object,\n    print error message and return status, else raise onerr object as\n    exception.'

    def py2shell(val):
        'convert python object into string that is useful to shell'
        if ((val is None) or (val is False)):
            return '0'
        if (val is True):
            return '1'
        return str(val)
    origcmd = cmd
    if (os.name == 'nt'):
        cmd = ('"%s"' % cmd)
    env = dict(os.environ)
    env.update(((k, py2shell(v)) for (k, v) in environ.iteritems()))
    env['HG'] = hgexecutable()
    rc = subprocess.call(cmd, shell=True, close_fds=closefds, env=env, cwd=cwd)
    if ((sys.platform == 'OpenVMS') and (rc & 1)):
        rc = 0
    if (rc and onerr):
        errmsg = ('%s %s' % (os.path.basename(origcmd.split(None, 1)[0]), explain_exit(rc)[0]))
        if errprefix:
            errmsg = ('%s: %s' % (errprefix, errmsg))
        try:
            onerr.warn((errmsg + '\n'))
        except AttributeError:
            raise onerr(errmsg)
    return rc
