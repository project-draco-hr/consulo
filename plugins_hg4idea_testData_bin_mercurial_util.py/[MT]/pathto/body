def pathto(root, n1, n2):
    'return the relative path from one place to another.\n    root should use os.sep to separate directories\n    n1 should use os.sep to separate directories\n    n2 should use "/" to separate directories\n    returns an os.sep-separated path.\n\n    If n1 is a relative path, it\'s assumed it\'s\n    relative to root.\n    n2 should always be relative to root.\n    '
    if (not n1):
        return localpath(n2)
    if os.path.isabs(n1):
        if (os.path.splitdrive(root)[0] != os.path.splitdrive(n1)[0]):
            return os.path.join(root, localpath(n2))
        n2 = '/'.join((pconvert(root), n2))
    (a, b) = (splitpath(n1), n2.split('/'))
    a.reverse()
    b.reverse()
    while (a and b and (a[(-1)] == b[(-1)])):
        a.pop()
        b.pop()
    b.reverse()
    return (os.sep.join(((['..'] * len(a)) + b)) or '.')
