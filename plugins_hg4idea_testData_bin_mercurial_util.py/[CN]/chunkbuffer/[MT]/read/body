def read(self, l):
    'Read L bytes of data from the iterator of chunks of data.\n        Returns less than L bytes if the iterator runs dry.'
    if ((l > len(self.buf)) and self.iter):
        targetsize = max(l, self.targetsize)
        collector = cStringIO.StringIO()
        collector.write(self.buf)
        collected = len(self.buf)
        for chunk in self.iter:
            collector.write(chunk)
            collected += len(chunk)
            if (collected >= targetsize):
                break
        if (collected < targetsize):
            self.iter = False
        self.buf = collector.getvalue()
    if (len(self.buf) == l):
        (s, self.buf) = (str(self.buf), '')
    else:
        (s, self.buf) = (self.buf[:l], buffer(self.buf, l))
    return s
