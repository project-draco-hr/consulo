{
  Reader outReader=new BufferedReader(new InputStreamReader(myProcess.getInputStream(),getCharset()));
  final ReadProcessThread stdoutThread=new ReadProcessThread(outReader){
    protected void textAvailable(    String s){
      notifyTextAvailable(s,ProcessOutputTypes.STDOUT);
    }
  }
;
  Reader errReader=new BufferedReader(new InputStreamReader(myProcess.getErrorStream(),getCharset()));
  final ReadProcessThread stderrThread=new ReadProcessThread(errReader){
    protected void textAvailable(    String s){
      notifyTextAvailable(s,ProcessOutputTypes.STDERR);
    }
  }
;
  notifyTextAvailable(myCommandLine + '\n',ProcessOutputTypes.SYSTEM);
  addProcessListener(new ProcessAdapter(){
    public void startNotified(    final ProcessEvent event){
      try {
        stdoutThread.start();
        stderrThread.start();
        new Thread(){
          public void run(){
            int exitCode=0;
            try {
              exitCode=myWaitFor.waitFor();
              stderrThread.join(0);
              stdoutThread.join(0);
            }
 catch (            InterruptedException e) {
            }
            onOSProcessTerminated(exitCode);
          }
        }
.start();
      }
  finally {
        removeProcessListener(this);
      }
    }
  }
);
  super.startNotify();
}
