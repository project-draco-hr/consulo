{
  if (file instanceof LightVirtualFile) {
    final Language language=((LightVirtualFile)file).getLanguage();
    if (language != null) {
      return language;
    }
  }
  FileType fileType=file.getFileType();
  if (fileType == UnknownFileType.INSTANCE) {
    fileType=FileTypeRegistry.getInstance().detectFileTypeFromContent(file);
  }
  if (fileType.isBinary())   return Language.ANY;
  if (isTooLarge(file))   return PlainTextLanguage.INSTANCE;
  if (fileType instanceof LanguageFileType) {
    return LanguageSubstitutors.INSTANCE.substituteLanguage(((LanguageFileType)fileType).getLanguage(),file,project);
  }
  final ContentBasedFileSubstitutor[] processors=Extensions.getExtensions(ContentBasedFileSubstitutor.EP_NAME);
  for (  ContentBasedFileSubstitutor processor : processors) {
    Language language=processor.obtainLanguageForFile(file);
    if (language != null)     return language;
  }
  return PlainTextLanguage.INSTANCE;
}
