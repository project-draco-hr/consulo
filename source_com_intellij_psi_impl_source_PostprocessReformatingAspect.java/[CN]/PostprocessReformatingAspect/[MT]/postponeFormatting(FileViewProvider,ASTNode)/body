{
  if (CodeEditUtil.isNodeGenerated(child)) {
    ((TreeElement)child).acceptTree(new RecursiveTreeElementVisitor(){
      protected boolean visitNode(      TreeElement element){
        final boolean generatedFlag=CodeEditUtil.isNodeGenerated(element);
        if (!generatedFlag && element.getElementType() != ElementType.WHITE_SPACE)         postponeFormatting(viewProvider,element);
        return generatedFlag;
      }
    }
);
  }
 else   if (child.getElementType() != ElementType.WHITE_SPACE) {
    final int oldIndent=CodeEditUtil.getOldIndentation(child);
    LOG.assertTrue(oldIndent >= 0,"for not generated items old indentation must be defined");
  }
  List<ASTNode> list=myReformatElements.get(viewProvider);
  if (list == null)   myReformatElements.put(viewProvider,list=new ArrayList<ASTNode>());
  list.add(child);
}
