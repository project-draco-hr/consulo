{
  final PsiType returnType=psiMethod.getReturnType();
  if (returnType != null) {
    final PsiElement parent=getMatchEnd().getParent();
    if (parent instanceof PsiExpression) {
      JavaResolveResult result=null;
      if (parent instanceof PsiMethodCallExpression) {
        result=((PsiMethodCallExpression)parent).resolveMethodGenerics();
      }
 else       if (parent instanceof PsiReferenceExpression) {
        result=((PsiReferenceExpression)parent).advancedResolve(false);
      }
      if (result != null) {
        final PsiElement element=result.getElement();
        if (element instanceof PsiMember) {
          final PsiClass psiClass=((PsiMember)element).getContainingClass();
          if (psiClass != null) {
            final JavaPsiFacade facade=JavaPsiFacade.getInstance(parent.getProject());
            final PsiClassType expressionType=facade.getElementFactory().createType(psiClass,result.getSubstitutor());
            if (weakerType(psiMethod,returnType,expressionType)) {
              return expressionType;
            }
          }
        }
      }
    }
 else     if (parent instanceof PsiExpressionList) {
      final PsiExpression[] expressions=((PsiExpressionList)parent).getExpressions();
      final PsiElement call=parent.getParent();
      if (call instanceof PsiMethodCallExpression) {
        final JavaResolveResult result=((PsiMethodCallExpression)call).resolveMethodGenerics();
        final PsiMethod method=(PsiMethod)result.getElement();
        if (method != null) {
          final int idx=ArrayUtil.find(expressions,getMatchEnd());
          final PsiParameter[] psiParameters=method.getParameterList().getParameters();
          if (idx >= 0 && idx < psiParameters.length) {
            final PsiType type=result.getSubstitutor().substitute(psiParameters[idx].getType());
            if (weakerType(psiMethod,returnType,type)) {
              return type;
            }
          }
        }
      }
    }
 else     if (parent instanceof PsiLocalVariable) {
      final PsiType localVariableType=((PsiLocalVariable)parent).getType();
      if (weakerType(psiMethod,returnType,localVariableType))       return localVariableType;
    }
  }
  return null;
}
