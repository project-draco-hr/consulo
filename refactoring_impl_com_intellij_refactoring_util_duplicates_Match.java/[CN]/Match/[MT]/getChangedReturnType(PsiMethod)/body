{
  final PsiType returnType=psiMethod.getReturnType();
  final PsiExpression expression=PsiTreeUtil.getParentOfType(getMatchEnd(),PsiExpression.class);
  if (expression != null) {
    PsiMember member=null;
    if (expression instanceof PsiMethodCallExpression) {
      member=((PsiMethodCallExpression)expression).resolveMethod();
    }
 else     if (expression instanceof PsiReferenceExpression) {
      final PsiElement resolved=((PsiReferenceExpression)expression).resolve();
      member=resolved instanceof PsiMember ? (PsiMember)resolved : null;
    }
    if (member != null) {
      final PsiImmediateClassType expressionType=new PsiImmediateClassType(member.getContainingClass(),PsiSubstitutor.EMPTY);
      if (returnType != null && !TypeConversionUtil.isAssignable(expressionType,returnType)) {
        return expressionType;
      }
    }
  }
  return null;
}
