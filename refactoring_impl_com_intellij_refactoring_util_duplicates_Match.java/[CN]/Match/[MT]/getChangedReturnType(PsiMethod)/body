{
  final PsiType returnType=psiMethod.getReturnType();
  if (returnType != null) {
    final PsiExpression expression=PsiTreeUtil.getParentOfType(getMatchEnd(),PsiExpression.class);
    if (expression != null) {
      PsiMember member=null;
      if (expression instanceof PsiMethodCallExpression) {
        member=((PsiMethodCallExpression)expression).resolveMethod();
      }
 else       if (expression instanceof PsiReferenceExpression) {
        final PsiElement resolved=((PsiReferenceExpression)expression).resolve();
        member=resolved instanceof PsiMember ? (PsiMember)resolved : null;
      }
      if (member != null) {
        final PsiImmediateClassType expressionType=new PsiImmediateClassType(member.getContainingClass(),PsiSubstitutor.EMPTY);
        if (!TypeConversionUtil.isAssignable(expressionType,returnType)) {
          return expressionType;
        }
      }
    }
 else {
      final PsiDeclarationStatement statement=PsiTreeUtil.getParentOfType(getMatchEnd(),PsiDeclarationStatement.class);
      if (statement != null) {
        final PsiElement[] declaredElements=statement.getDeclaredElements();
        for (        PsiElement declaredElement : declaredElements) {
          if (declaredElement instanceof PsiLocalVariable) {
            final PsiType localVariableType=((PsiLocalVariable)declaredElement).getType();
            if (!TypeConversionUtil.isAssignable(localVariableType,returnType)) {
              return localVariableType;
            }
          }
        }
      }
    }
  }
  return null;
}
