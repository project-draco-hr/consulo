{
  myAlarm.cancelAllRequests();
  final Boolean removed=myApplication.runReadAction(new Computable<Boolean>(){
    @Override public Boolean compute(){
      final Alarm removed=myLineStatusUpdateAlarms.remove(myDocument);
      return removed != null;
    }
  }
);
  if (!Boolean.TRUE.equals(removed))   return;
  if ((!myProject.isOpen()) || myProject.isDisposed())   return;
  if (!myVirtualFile.isValid()) {
    log("installTracker() for file " + myVirtualFile.getPath() + " failed: virtual file not valid");
    return;
  }
  final String lastUpToDateContent=myStatusProvider.getBaseVersionContent(myVirtualFile);
  if (lastUpToDateContent == null) {
    log("installTracker() for file " + myVirtualFile.getPath() + " failed: no up to date content");
    return;
  }
  myApplication.invokeLater(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          log("initializing tracker for file " + myVirtualFile.getPath());
          final LineStatusTracker tracker=myLineStatusTrackers.get(myDocument);
          if (tracker != null) {
            tracker.initialize(lastUpToDateContent);
          }
        }
      }
);
    }
  }
,new Condition(){
    @Override public boolean value(    final Object ignore){
      return (!myProject.isOpen()) || myProject.isDisposed();
    }
  }
);
}
