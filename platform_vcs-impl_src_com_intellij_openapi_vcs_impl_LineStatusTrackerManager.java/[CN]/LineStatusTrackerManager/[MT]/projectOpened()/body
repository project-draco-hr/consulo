{
  final MyFileStatusListener myFileStatusListener=new MyFileStatusListener();
  final EditorFactoryListener myEditorFactoryListener=new MyEditorFactoryListener();
  final MyVirtualFileListener myVirtualFileListener=new MyVirtualFileListener();
  final EditorColorsListener myEditorColorsListener=new EditorColorsListener(){
    public void globalSchemeChange(    EditorColorsScheme scheme){
      resetTrackersForOpenFiles();
    }
  }
;
  myLineStatusTrackers=new HashMap<Document,LineStatusTracker>();
  FileStatusManager.getInstance(myProject).addFileStatusListener(myFileStatusListener,myProject);
  EditorFactory.getInstance().addEditorFactoryListener(myEditorFactoryListener);
  VirtualFileManager.getInstance().addVirtualFileListener(myVirtualFileListener,myProject);
  EditorColorsManager.getInstance().addEditorColorsListener(myEditorColorsListener);
  Disposer.register(myProject,new Disposable(){
    public void dispose(){
      EditorFactory.getInstance().removeEditorFactoryListener(myEditorFactoryListener);
      EditorColorsManager.getInstance().removeEditorColorsListener(myEditorColorsListener);
    }
  }
);
}
