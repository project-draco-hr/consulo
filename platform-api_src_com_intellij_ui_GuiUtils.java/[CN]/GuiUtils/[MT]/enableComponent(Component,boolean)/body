{
  if (component.isEnabled() == enabled)   return;
  component.setEnabled(enabled);
  if (component instanceof JPanel) {
    final Border border=((JPanel)component).getBorder();
    if (border instanceof TitledBorder) {
      Color color=enabled ? component.getForeground() : UIUtil.getTextInactiveTextColor();
      ((TitledBorder)border).setTitleColor(color);
    }
  }
 else   if (component instanceof JLabel) {
    Color color=UIUtil.getTextInactiveTextColor();
    if (color == null)     color=component.getForeground();
    @NonNls String changeColorString="<font color=#" + colorToHex(color) + ">";
    final JLabel label=(JLabel)component;
    @NonNls String text=label.getText();
    if (text != null && text.startsWith("<html>")) {
      if (text.startsWith("<html>" + changeColorString) && enabled) {
        text="<html>" + text.substring(("<html>" + changeColorString).length());
      }
 else       if (!text.startsWith("<html>" + changeColorString) && !enabled) {
        text="<html>" + changeColorString + text.substring("<html>".length());
      }
      label.setText(text);
    }
  }
 else   if (component instanceof JTable) {
    TableColumnModel columnModel=((JTable)component).getColumnModel();
    for (int i=0; i < columnModel.getColumnCount(); i++) {
      TableCellRenderer cellRenderer=columnModel.getColumn(0).getCellRenderer();
      if (cellRenderer instanceof Component) {
        enableComponent((Component)cellRenderer,enabled);
      }
    }
  }
}
