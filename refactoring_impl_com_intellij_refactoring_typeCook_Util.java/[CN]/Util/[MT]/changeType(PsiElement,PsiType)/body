{
  try {
    if (element instanceof PsiTypeCastExpression) {
      final PsiTypeCastExpression cast=((PsiTypeCastExpression)element);
      cast.getCastType().replace(JavaPsiFacade.getInstance(cast.getProject()).getElementFactory().createTypeElement(type));
    }
 else     if (element instanceof PsiVariable) {
      final PsiVariable field=((PsiVariable)element);
      field.normalizeDeclaration();
      field.getTypeElement().replace(JavaPsiFacade.getInstance(field.getProject()).getElementFactory().createTypeElement(type));
    }
 else     if (element instanceof PsiMethod) {
      final PsiMethod method=((PsiMethod)element);
      method.getReturnTypeElement().replace(JavaPsiFacade.getInstance(method.getProject()).getElementFactory().createTypeElement(type));
    }
 else     if (element instanceof PsiNewExpression) {
      final PsiNewExpression newx=(PsiNewExpression)element;
      final PsiClassType.ClassResolveResult result=Util.resolveType(type);
      if (result == null) {
        return;
      }
      final PsiSubstitutor subst=result.getSubstitutor();
      final PsiTypeParameter[] parms=result.getElement().getTypeParameters();
      if (parms.length > 0 && subst.substitute(parms[0]) != null) {
        PsiJavaCodeReferenceElement classReference=newx.getClassOrAnonymousClassReference();
        PsiReferenceParameterList list=classReference.getParameterList();
        if (list == null) {
          return;
        }
        final PsiElementFactory factory=JavaPsiFacade.getInstance(newx.getProject()).getElementFactory();
        PsiTypeElement[] elements=list.getTypeParameterElements();
        for (        PsiTypeElement element1 : elements) {
          element1.delete();
        }
        for (        PsiTypeParameter parm : parms) {
          PsiType aType=subst.substitute(parm);
          if (aType instanceof PsiWildcardType) {
            aType=((PsiWildcardType)aType).getBound();
          }
          list.add(factory.createTypeElement(aType == null ? PsiType.getJavaLangObject(list.getManager(),list.getResolveScope()) : aType));
        }
      }
    }
 else {
      LOG.error("Unexpected element type " + element.getClass().getName());
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error("Incorrect Operation Exception thrown in CastRole.\n");
  }
}
