{
  myProject=project;
  myAnnotationsManager=annotationsManager;
  pomModel.addModelListener(new PomModelListener(){
    public synchronized void modelChanged(    PomModelEvent event){
      if (myChanging)       return;
      final XmlChangeSet changeSet=(XmlChangeSet)event.getChangeSet(xmlAspect);
      if (changeSet != null) {
        new ExternalChangeProcessor(DomManagerImpl.this,changeSet).processChanges();
      }
    }
    public boolean isAspectChangeInteresting(    PomModelAspect aspect){
      return xmlAspect.equals(aspect);
    }
  }
);
  myReferenceProvidersRegistry=registry;
  myElementFactory=psiManager.getElementFactory();
  solver.registerFileHighlightFilter(new Condition<VirtualFile>(){
    public boolean value(    final VirtualFile file){
      return isDomFile(psiManager.findFile(file));
    }
  }
,project);
}
