{
  final Map<Class<? extends DomElement>,Class<? extends DomElement>> implementations=description.getImplementations();
  for (  final Map.Entry<Class<? extends DomElement>,Class<? extends DomElement>> entry : implementations.entrySet()) {
    registerImplementation(entry.getKey(),entry.getValue());
  }
  myTypeChooserManager.copyFrom(description.getTypeChooserManager());
  final DomElementsAnnotator annotator=description.createAnnotator();
  if (annotator != null) {
    myAnnotationsManager.registerDomElementsAnnotator(annotator,description.getRootElementClass());
  }
  myFileDescriptions.put(description,new HashSet<WeakReference<DomFileElementImpl>>());
  myRootTagName2FileDescription.get(description.getRootTagName()).add(description);
  if (description.acceptsOtherRootTagNames()) {
    myAcceptingOtherRootTagNamesDescriptions.add(description);
  }
  registerReferenceProviders(description);
}
