{
  final T initial=provider.create();
  final InvocationHandler handler=new StableInvocationHandler<T>(initial,provider);
  final Set<Class> intf=new HashSet<Class>();
  intf.addAll(Arrays.asList(initial.getClass().getInterfaces()));
  intf.add(StableElement.class);
  return AdvancedProxy.createProxy((Class<? extends T>)initial.getClass().getSuperclass(),intf.toArray(new Class[intf.size()]),handler,Collections.<JavaMethodSignature>emptySet());
}
