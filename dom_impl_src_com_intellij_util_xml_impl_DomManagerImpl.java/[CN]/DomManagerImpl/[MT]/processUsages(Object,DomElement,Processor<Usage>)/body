{
  final Class elementClass=target.getClass();
  final boolean[] stopped=new boolean[]{false};
  scope.accept(new DomElementVisitor(){
    public void visitGenericDomValue(    GenericDomValue reference){
      if (reference.getXmlTag() == null)       return;
      final Class parameter=DomUtil.getGenericValueParameter(reference.getDomElementType());
      if (parameter != null && ReflectionCache.isAssignable(parameter,elementClass) && target.equals(reference.getValue())) {
        if (!processor.process(new DomUsage(reference))) {
          stopped[0]=true;
        }
        return;
      }
      visitDomElement(reference);
    }
    public void visitDomElement(    DomElement element){
      if (!stopped[0] && element.getXmlTag() != null) {
        element.acceptChildren(this);
      }
    }
  }
);
}
