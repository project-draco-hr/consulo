{
  myLeftComponent.setOpaque(false);
  myRightComponent.setOpaque(false);
  myLeftComponent.setIconOpaque(false);
  myRightComponent.setIconOpaque(false);
  add(myLeftComponent);
  add(myRightComponent);
  Font font=EditorColorsManager.getInstance().getGlobalScheme().getFont(EditorFontType.PLAIN);
  myLeftComponent.setFont(font);
  myRightComponent.setFont(font);
  setPreferredSize(new Dimension(2000,myLeftComponent.getPreferredSize().height));
  setLayout(new AbstractLayoutManager(){
    @Override public Dimension preferredLayoutSize(    Container parent){
      return new Dimension(getVisibleWidth(),myLeftComponent.getPreferredSize().height);
    }
    @Override public void layoutContainer(    Container parent){
      int w=getVisibleWidth();
      Dimension ls=myLeftComponent.getPreferredSize();
      Dimension rs=myRightComponent.getPreferredSize();
      int lw=w - rs.width - 10;
      int rw=rs.width;
      myLeftComponent.setBounds(0,0,lw,ls.height);
      myRightComponent.setBounds(w - rw,0,rw,rs.height);
    }
    private int getVisibleWidth(){
      int w=tree.getVisibleRect().width - 10;
      Insets insets=tree.getInsets();
      w-=insets.left + insets.right;
      Container parent=tree.getParent();
      if (parent != null) {
        Container parentParent=parent.getParent();
        if (parentParent instanceof JScrollPane) {
          JScrollBar sb=((JScrollPane)parentParent).getVerticalScrollBar();
          if (sb != null) {
            w-=sb.getWidth();
          }
        }
      }
      return w;
    }
  }
);
}
