{
  mySearchField=new JTextField(initialText);
  myResultList=new Tree();
  setLayout(new BorderLayout());
  add(mySearchField,BorderLayout.NORTH);
  add(new JBScrollPane(myResultList),BorderLayout.CENTER);
  mySearchField.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    DocumentEvent e){
      scheduleSearch();
    }
  }
);
  myResultList.addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      if (myAlarm.getActiveRequestCount() > 0)       return;
      boolean hasSelection=!myResultList.isSelectionEmpty();
      myListener.canSelectStateChanged(MavenArtifactSearchPanel.this,hasSelection);
    }
  }
);
  mySearchField.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      final Object action=getAction(e,myResultList);
      if ("selectNext".equals(action)) {
        TreeUtil.moveDown(myResultList);
      }
 else       if ("selectPrevious".equals(action)) {
        TreeUtil.moveUp(myResultList);
      }
 else       if ("scrollUpChangeSelection".equals(action)) {
        TreeUtil.movePageUp(myResultList);
      }
 else       if ("scrollDownChangeSelection".equals(action)) {
        TreeUtil.movePageDown(myResultList);
      }
    }
    private Object getAction(    final KeyEvent e,    final JComponent comp){
      final KeyStroke stroke=KeyStroke.getKeyStroke(e.getKeyCode(),e.getModifiers());
      return comp.getInputMap().get(stroke);
    }
  }
);
  myResultList.setRootVisible(false);
  myResultList.setShowsRootHandles(true);
  myResultList.setModel(null);
  myResultList.setFocusable(false);
  myResultList.setCellRenderer(myClassMode ? new MyClassCellRenderer() : new MyArtifactCellRenderer());
  myResultList.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        Object sel=myResultList.getLastSelectedPathComponent();
        if (sel != null && myResultList.getModel().isLeaf(sel)) {
          myListener.doubleClicked();
        }
      }
      if (!mySearchField.hasFocus()) {
        mySearchField.requestFocus();
      }
    }
  }
);
}
