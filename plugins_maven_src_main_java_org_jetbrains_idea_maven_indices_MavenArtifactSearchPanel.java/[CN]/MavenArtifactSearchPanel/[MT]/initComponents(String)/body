{
  mySearchField=new JTextField(initialText);
  myResultList=new Tree();
  myResultList.getExpandableItemsHandler().setEnabled(false);
  myResultList.getEmptyText().setText("Loading...");
  myResultList.setRootVisible(false);
  myResultList.setShowsRootHandles(true);
  myResultList.setModel(null);
  myResultList.setCellRenderer(myClassMode ? new MyClassCellRenderer(myResultList) : new MyArtifactCellRenderer(myResultList));
  myResultList.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  setLayout(new BorderLayout());
  add(mySearchField,BorderLayout.NORTH);
  JScrollPane pane=ScrollPaneFactory.createScrollPane(myResultList);
  pane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
  add(pane,BorderLayout.CENTER);
  mySearchField.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    DocumentEvent e){
      scheduleSearch();
    }
  }
);
  myResultList.addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      if (myAlarm.getActiveRequestCount() > 0)       return;
      boolean hasSelection=!myResultList.isSelectionEmpty();
      myListener.canSelectStateChanged(MavenArtifactSearchPanel.this,hasSelection);
    }
  }
);
  myResultList.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ENTER && myResultList.getLastSelectedPathComponent() != null) {
        myListener.itemSelected();
        e.consume();
      }
    }
  }
);
  myResultList.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        Object sel=myResultList.getLastSelectedPathComponent();
        if (sel != null && myResultList.getModel().isLeaf(sel)) {
          myListener.itemSelected();
          e.consume();
        }
      }
    }
  }
);
}
