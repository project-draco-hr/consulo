{
  if (!(type instanceof PsiClassType))   return true;
  PsiClass psiClass=((PsiClassType)type).resolve();
  if (psiClass == null)   return true;
  if (!(psiClass instanceof GrTypeDefinition))   return true;
  GrTypeDefinition grClass=(GrTypeDefinition)psiClass;
  GrField[] fields=grClass.getFields();
  for (  GrField field : fields) {
    GrModifierList modifierList=field.getModifierList();
    if (modifierList == null)     return true;
    GrAnnotation[] annotations=modifierList.getAnnotations();
    for (    GrAnnotation annotation : annotations) {
      if (BINDABLE.equals(annotation.getQualifiedName())) {
        GrMethod addPropertyChangeListenerMethod=GroovyPsiElementFactory.getInstance(annotation.getProject()).createMethodFromText("def","addPropertyChangeListener",PsiType.VOID.getCanonicalText(),new String[]{"PropertyChangeListener"});
        GrMethod removePropertyChangeListenerMethod=GroovyPsiElementFactory.getInstance(annotation.getProject()).createMethodFromText("def","removePropertyChangeListener",PsiType.VOID.getCanonicalText(),new String[]{"PropertyChangeListener"});
        GroovyResolveResultImpl addPropertyResult=new GroovyResolveResultImpl(addPropertyChangeListenerMethod,true);
        GroovyResolveResultImpl removePropertyResult=new GroovyResolveResultImpl(removePropertyChangeListenerMethod,true);
        if (!processor.execute(addPropertyResult.getElement(),ResolveState.initial()))         return false;
        if (!processor.execute(removePropertyResult.getElement(),ResolveState.initial()))         return false;
      }
    }
  }
  return true;
}
