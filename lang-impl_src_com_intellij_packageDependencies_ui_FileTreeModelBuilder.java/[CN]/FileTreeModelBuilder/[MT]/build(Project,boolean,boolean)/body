{
  Runnable buildingRunnable=new Runnable(){
    public void run(){
      countFiles(project);
      final PsiManager psiManager=PsiManager.getInstance(project);
      myFileIndex.iterateContent(new ContentIterator(){
        public boolean processFile(        VirtualFile fileOrDir){
          if (!fileOrDir.isDirectory()) {
            final PsiFile psiFile=psiManager.findFile(fileOrDir);
            if (psiFile != null) {
              buildFileNode(psiFile);
            }
          }
          return true;
        }
      }
);
    }
  }
;
  if (showProgress) {
    ProgressManager.getInstance().runProcessWithProgressSynchronously(buildingRunnable,AnalysisScopeBundle.message("package.dependencies.build.process.title"),true,project);
  }
 else {
    buildingRunnable.run();
  }
  TreeUtil.sort(myRoot,new DependencyNodeComparator(sortByType));
  return new TreeModel(myRoot,myTotalFileCount,myMarkedFileCount);
}
