{
  if (myExecutionResult == null) {
    throw new IllegalStateException("Missing ExecutionResult");
  }
  if (myRunProfile == null) {
    throw new IllegalStateException("Missing RunProfile");
  }
  final JPanel panel=new JPanel(new BorderLayout(2,0));
  panel.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    if (myComponent == null) {
      final ExecutionConsole console=myExecutionResult.getExecutionConsole();
      if (console != null) {
        myComponent=new JTabbedPane();
        ((JTabbedPane)myComponent).addTab("Console",console.getComponent());
        if (myRunProfile instanceof RunConfigurationBase) {
          RunConfigurationBase base=(RunConfigurationBase)myRunProfile;
          final Map<String,Boolean> logFiles=base.getLogFiles();
          for (Iterator<String> iterator=logFiles.keySet().iterator(); iterator.hasNext(); ) {
            String file=iterator.next();
            if (logFiles.get(file).booleanValue()) {
              final LogConsoleTab logTab=new LogConsoleTab(myProject,new File(file));
              myDisposeables.add(logTab);
              ((JTabbedPane)myComponent).addTab("Log: " + file,logTab);
            }
          }
        }
      }
    }
    MyRunContentDescriptor contentDescriptor=new MyRunContentDescriptor(myRunProfile,myExecutionResult,myReuseProhibited,panel,myDisposeables.toArray(new Disposeable[myDisposeables.size()]));
    if (myComponent != null) {
      panel.add(myComponent,BorderLayout.CENTER);
    }
    panel.add(createActionToolbar(contentDescriptor,panel),BorderLayout.WEST);
    return contentDescriptor;
  }
  return new MyRunContentDescriptor(myRunProfile,myExecutionResult,myReuseProhibited,panel,myDisposeables.toArray(new Disposeable[myDisposeables.size()]));
}
