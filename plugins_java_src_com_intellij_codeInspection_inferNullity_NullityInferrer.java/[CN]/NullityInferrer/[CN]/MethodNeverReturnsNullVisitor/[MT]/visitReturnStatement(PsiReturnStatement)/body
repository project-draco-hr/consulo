{
  super.visitReturnStatement(statement);
  final PsiExpression value=statement.getReturnValue();
  if (expressionIsNeverNull(value)) {
    return;
  }
  if (value instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)value;
    final PsiMethod method=methodCallExpression.resolveMethod();
    final PsiMethod containingMethod=PsiTreeUtil.getParentOfType(value,PsiMethod.class);
    if (method != null && method.equals(containingMethod)) {
      return;
    }
  }
  neverReturnsNull=false;
}
