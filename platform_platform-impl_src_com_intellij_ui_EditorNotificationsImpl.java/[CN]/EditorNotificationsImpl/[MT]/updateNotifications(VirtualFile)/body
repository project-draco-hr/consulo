{
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      ProgressIndicator indicator=getCurrentProgress(file);
      if (indicator != null) {
        indicator.cancel();
      }
      file.putUserData(CURRENT_UPDATES,null);
      if (myProject.isDisposed() || !file.isValid()) {
        return;
      }
      indicator=new ProgressIndicatorBase();
      final ReadTask task=createTask(indicator,file);
      if (task == null)       return;
      file.putUserData(CURRENT_UPDATES,new WeakReference<ProgressIndicator>(indicator));
      if (ApplicationManager.getApplication().isUnitTestMode()) {
        ReadTask.Continuation continuation=task.performInReadAction(indicator);
        if (continuation != null) {
          continuation.getAction().run();
        }
      }
 else {
        ProgressIndicatorUtils.scheduleWithWriteActionPriority(indicator,ourExecutor,task);
      }
    }
  }
);
}
