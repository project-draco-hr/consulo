{
  if (myPopup != null) {
    myPopup.cancel();
  }
  tree.getModel().addTreeModelListener(createTreeListener(tree));
  myPopup=JBPopupFactory.getInstance().createComponentPopupBuilder(createMainPanel(tree),tree).setRequestFocus(true).setTitle(title).setResizable(true).setMovable(true).setDimensionServiceKey(myProject,DIMENSION_SERVICE_KEY,false).setMayBeParent(true).setKeyEventHandler(new BooleanFunction<KeyEvent>(){
    @Override public boolean fun(    KeyEvent event){
      if (AbstractPopup.isCloseRequest(event)) {
        SpeedSearchSupply supply=SpeedSearchSupply.getSupply(tree);
        return supply != null && StringUtil.isEmpty(supply.getEnteredPrefix());
      }
      return false;
    }
  }
).addListener(new JBPopupAdapter(){
    @Override public void onClosed(    LightweightWindowEvent event){
      if (myHideRunnable != null) {
        myHideRunnable.run();
      }
    }
  }
).setCancelCallback(new Computable<Boolean>(){
    @Override public Boolean compute(){
      Window parent=SwingUtilities.getWindowAncestor(tree);
      if (parent != null) {
        for (        Window child : parent.getOwnedWindows()) {
          if (child.isShowing()) {
            return false;
          }
        }
      }
      return true;
    }
  }
).createPopup();
  registerTreeDisposable(myPopup,tree);
  if (myEditor.getComponent().getRootPane() == null) {
    myPopup.cancel();
    return;
  }
  myPopup.show(new RelativePoint(myEditor.getContentComponent(),myPoint));
  updateInitialBounds(tree);
}
