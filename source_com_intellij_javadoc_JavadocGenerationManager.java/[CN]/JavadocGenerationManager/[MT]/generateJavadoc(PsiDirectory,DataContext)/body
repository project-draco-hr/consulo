{
  Component component=(Component)dataContext.getData(DataConstants.CONTEXT_COMPONENT);
  final PsiPackage aPackage=directory != null ? JavaDirectoryService.getInstance().getPackage(directory) : null;
  String packageFQName=aPackage != null ? aPackage.getQualifiedName() : null;
  final GenerateJavadocDialog dialog=new GenerateJavadocDialog(packageFQName,myProject,myConfiguration);
  dialog.reset();
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  if (component != null) {
    dataContext=DataManager.getInstance().getDataContext(component);
  }
 else {
    dataContext=SimpleDataContext.getProjectContext(myProject);
  }
  if (dialog.isGenerationForPackage() && !dialog.isGenerationWithSubpackages()) {
    final Module module=directory != null ? ModuleUtil.findModuleForPsiElement(directory) : null;
    if (module != null && packageFQName != null) {
      boolean reset=false;
      final ContentEntry[] contentEntries=ModuleRootManager.getInstance(module).getContentEntries();
      for (      ContentEntry contentEntry : contentEntries) {
        final SourceFolder[] sourceFolders=contentEntry.getSourceFolders();
        for (        SourceFolder sourceFolder : sourceFolders) {
          final String packagePrefix=sourceFolder.getPackagePrefix();
          final int prefixLength=packagePrefix.length();
          if (prefixLength > 0 && packageFQName.startsWith(packagePrefix) && packageFQName.length() > prefixLength) {
            packageFQName=packageFQName.substring(prefixLength + 1);
            reset=true;
            break;
          }
          if (reset)           break;
        }
      }
    }
  }
  myConfiguration.setGenerationOptions(new JavadocConfiguration.GenerationOptions(packageFQName,directory,dialog.isGenerationForPackage(),dialog.isGenerationWithSubpackages()));
  try {
    RunStrategy.getInstance().executeDefault(myConfiguration,dataContext);
  }
 catch (  ExecutionException e) {
    ExecutionErrorDialog.show(e,CommonBundle.getErrorTitle(),myProject);
  }
}
