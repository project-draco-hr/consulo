{
  ApplicationManager.getApplication().assertWriteAccessAllowed();
  LOG.assertTrue(!myInsideCommit,"Recusive commit");
  myInsideCommit=true;
  try {
    final List<ArtifactImpl> allArtifacts=artifactModel.getOriginalArtifacts();
    Set<ArtifactImpl> removed=new THashSet<ArtifactImpl>(myModel.myArtifactsList);
    List<ArtifactImpl> added=new ArrayList<ArtifactImpl>();
    List<ArtifactImpl> changed=new ArrayList<ArtifactImpl>();
    List<ArtifactImpl> newArtifacts=new ArrayList<ArtifactImpl>();
    for (    ArtifactImpl artifact : allArtifacts) {
      final boolean isAdded=!removed.remove(artifact);
      final ArtifactImpl newArtifact=artifactModel.getArtifactByOriginal(artifact);
      if (isAdded) {
        added.add(newArtifact);
      }
 else       if (artifactModel.isChanged(artifact)) {
        changed.add(artifact);
      }
      newArtifacts.add(newArtifact);
    }
    myModel.setArtifactsList(newArtifacts);
    final ArtifactListener publisher=myProject.getMessageBus().syncPublisher(TOPIC);
    for (    ArtifactImpl artifact : added) {
      publisher.artifactAdded(artifact);
    }
    for (    ArtifactImpl artifact : removed) {
      publisher.artifactRemoved(artifact);
    }
    for (    ArtifactImpl artifact : changed) {
      publisher.artifactChanged(artifact,artifactModel.getArtifactByOriginal(artifact));
    }
  }
  finally {
    myInsideCommit=false;
  }
}
