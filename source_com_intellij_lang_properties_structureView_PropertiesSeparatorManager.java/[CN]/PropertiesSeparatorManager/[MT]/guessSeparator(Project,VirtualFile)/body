{
  Collection<PropertiesFile> files;
  if (file instanceof ResourceBundleAsVirtualFile) {
    files=((ResourceBundleAsVirtualFile)file).getResourceBundle().getPropertiesFiles(project);
  }
 else {
    PsiManager psiManager=PsiManager.getInstance(project);
    files=Collections.singletonList((PropertiesFile)psiManager.findFile(file));
  }
  final TIntIntHashMap charCounts=new TIntIntHashMap();
  for (  PropertiesFile propertiesFile : files) {
    if (propertiesFile == null)     continue;
    List<Property> properties=propertiesFile.getProperties();
    for (    Property property : properties) {
      String key=property.getKey();
      if (key == null)       continue;
      for (int i=0; i < key.length(); i++) {
        char c=key.charAt(i);
        if (!Character.isLetterOrDigit(c)) {
          charCounts.put(c,charCounts.get(c) + 1);
        }
      }
    }
  }
  final char[] mostProbableChar=new char[]{'.'};
  charCounts.forEachKey(new TIntProcedure(){
    int count=-1;
    public boolean execute(    int ch){
      int charCount=charCounts.get(ch);
      if (charCount > count) {
        count=charCount;
        mostProbableChar[0]=(char)ch;
      }
      return true;
    }
  }
);
  return Character.toString(mostProbableChar[0]);
}
