{
  for (  T anObjects1 : objects1)   LOG.assertTrue(anObjects1 != null);
  for (  T anObjects2 : objects2)   LOG.assertTrue(anObjects2 != null);
  final int startShift=getStartShift(objects1,objects2);
  final int endCut=getEndCut(objects1,objects2,startShift);
  Ref<Change> changeRef=doBuildChangesFast(objects1.length,objects2.length,startShift,endCut);
  if (changeRef != null)   return changeRef.get();
  int trimmedLength=objects1.length + objects2.length - 2 * startShift - 2 * endCut;
  Enumerator<T> enumerator=new Enumerator<T>(trimmedLength,ContainerUtil.<T>canonicalStrategy());
  int[] ints1=enumerator.enumerate(objects1,startShift,endCut);
  int[] ints2=enumerator.enumerate(objects2,startShift,endCut);
  return doBuildChanges(ints1,ints2,new ChangeBuilder(startShift));
}
