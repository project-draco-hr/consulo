{
  FileElement treeElement;
synchronized (myStubLock) {
    treeElement=(FileElement)_getTreeElement();
    if (treeElement != null) {
      if (myLog != null) {
        myLog.add("had treeElement before:" + treeElement);
      }
      return treeElement;
    }
    final FileViewProvider viewProvider=getViewProvider();
    if (viewProvider.isPhysical() && myManager.isAssertOnFileLoading(viewProvider.getVirtualFile())) {
      LOG.error("Access to tree elements not allowed in tests." + viewProvider.getVirtualFile().getPresentableUrl());
    }
    final Document document=viewProvider.isEventSystemEnabled() ? viewProvider.getDocument() : null;
    treeElement=createFileElement(viewProvider.getContents());
    if (document != null) {
      treeElement.putUserData(HARD_REFERENCE_TO_DOCUMENT,document);
    }
    treeElement.setPsi(this);
    StubTree stub=derefStub();
    if (myLog != null) {
      myLog.add("do we have a stub?: " + stub);
    }
    if (stub != null) {
      final Iterator<StubElement<?>> stubs=stub.getPlainList().iterator();
      stubs.next();
      switchFromStubToAST(treeElement,stubs);
      myStub=null;
    }
    setTreeElement(treeElement);
    if (LOG.isDebugEnabled() && getViewProvider().isPhysical()) {
      LOG.debug("Loaded text for file " + getViewProvider().getVirtualFile().getPresentableUrl());
    }
  }
  if (getViewProvider().isEventSystemEnabled()) {
    ((PsiDocumentManagerImpl)PsiDocumentManager.getInstance(myManager.getProject())).contentsLoaded(this);
  }
  return treeElement;
}
