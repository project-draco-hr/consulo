{
  final CharSequence chars=inputData.content;
  final IndexPattern[] indexPatterns=IdCacheUtil.getIndexPatterns();
  if (indexPatterns.length > 0) {
    final TodoOccurrenceConsumer occurrenceConsumer=new TodoOccurrenceConsumer();
    for (    IndexPattern indexPattern : indexPatterns) {
      Pattern pattern=indexPattern.getPattern();
      if (pattern != null) {
        Matcher matcher=pattern.matcher(chars);
        while (matcher.find()) {
          if (matcher.start() != matcher.end()) {
            occurrenceConsumer.incTodoOccurrence(indexPattern);
          }
        }
      }
    }
    Map<TodoIndexEntry,Integer> map=new HashMap<TodoIndexEntry,Integer>();
    for (    IndexPattern indexPattern : indexPatterns) {
      final int count=occurrenceConsumer.getOccurrenceCount(indexPattern);
      if (count > 0) {
        map.put(new TodoIndexEntry(indexPattern.getPatternString(),indexPattern.isCaseSensitive()),count);
      }
    }
    return map;
  }
  return Collections.emptyMap();
}
