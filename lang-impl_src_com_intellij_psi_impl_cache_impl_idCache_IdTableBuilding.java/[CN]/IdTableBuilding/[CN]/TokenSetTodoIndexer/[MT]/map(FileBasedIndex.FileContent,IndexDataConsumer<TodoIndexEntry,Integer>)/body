{
  final CharSequence chars=inputData.content;
  if (IdCacheUtil.getIndexPatternCount() > 0) {
    final TodoOccurrenceConsumer occurrenceConsumer=new TodoOccurrenceConsumer();
    final EditorHighlighter highlighter=HighlighterFactory.createHighlighter(null,myFile);
    highlighter.setText(chars);
    final HighlighterIterator iterator=highlighter.createIterator(0);
    while (!iterator.atEnd()) {
      final IElementType token=iterator.getTokenType();
      if (IdCacheUtil.isInComments(token) || myCommentTokens.contains(token)) {
        BaseFilterLexer.advanceTodoItemsCount(chars.subSequence(iterator.getStart(),iterator.getEnd()),occurrenceConsumer);
      }
      iterator.advance();
    }
    for (    IndexPattern pattern : IdCacheUtil.getIndexPatterns()) {
      consumer.consume(new TodoIndexEntry(pattern.getPatternString(),pattern.isCaseSensitive()),occurrenceConsumer.getOccurrenceCount(pattern));
    }
  }
}
