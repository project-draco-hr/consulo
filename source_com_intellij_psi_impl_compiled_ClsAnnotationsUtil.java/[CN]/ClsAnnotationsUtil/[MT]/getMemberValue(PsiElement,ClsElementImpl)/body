{
  if (element instanceof PsiLiteralExpression) {
    PsiLiteralExpression expr=(PsiLiteralExpression)element;
    return new ClsLiteralExpressionImpl(parent,element.getText(),expr.getType(),expr.getValue());
  }
 else   if (element instanceof PsiClassObjectAccessExpression) {
    PsiClassObjectAccessExpression expr=(PsiClassObjectAccessExpression)element;
    return new ClsClassObjectAccessExpressionImpl(expr.getOperand().getType().getCanonicalText(),parent);
  }
 else   if (element instanceof PsiArrayInitializerMemberValue) {
    PsiAnnotationMemberValue[] initializers=((PsiArrayInitializerMemberValue)element).getInitializers();
    PsiAnnotationMemberValue[] clsInitializers=new PsiAnnotationMemberValue[initializers.length];
    ClsArrayInitializerMemberValueImpl arrayValue=new ClsArrayInitializerMemberValueImpl(parent);
    for (int i=0; i < initializers.length; i++) {
      PsiAnnotationMemberValue innerValue=getMemberValue(initializers[i],arrayValue);
      clsInitializers[i]=innerValue;
    }
    arrayValue.setInitializers(clsInitializers);
    return arrayValue;
  }
 else   if (element instanceof PsiAnnotation) {
    PsiAnnotation psiAnnotation=(PsiAnnotation)element;
    ClsJavaCodeReferenceElementImpl ref=new ClsJavaCodeReferenceElementImpl(null,psiAnnotation.getNameReferenceElement().getCanonicalText());
    ClsAnnotationImpl result=new ClsAnnotationImpl(ref,parent);
    ref.setParent(result);
    ClsAnnotationParameterListImpl list=new ClsAnnotationParameterListImpl(result);
    PsiNameValuePair[] psiAttributes=psiAnnotation.getParameterList().getAttributes();
    ClsNameValuePairImpl[] attributes=new ClsNameValuePairImpl[psiAttributes.length];
    list.setAttributes(attributes);
    for (int i=0; i < attributes.length; i++) {
      attributes[i]=new ClsNameValuePairImpl(list);
      attributes[i].setNameIdentifier(new ClsIdentifierImpl(attributes[i],psiAttributes[i].getName()));
      attributes[i].setMemberValue(getMemberValue(psiAttributes[i].getValue(),attributes[i]));
    }
    result.setParameterList(list);
    return result;
  }
 else   if (element instanceof PsiReferenceExpression) {
    return new ClsReferenceExpressionImpl(parent,(PsiReferenceExpression)element);
  }
 else {
    LOG.error("Unexpected source element for annotation member value: " + element);
    return null;
  }
}
