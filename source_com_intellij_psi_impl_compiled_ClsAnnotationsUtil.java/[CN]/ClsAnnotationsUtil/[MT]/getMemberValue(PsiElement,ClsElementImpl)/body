{
  if (element instanceof PsiLiteralExpression) {
    PsiLiteralExpression expr=(PsiLiteralExpression)element;
    return new ClsLiteralExpressionImpl(parent,element.getText(),expr.getType(),expr.getValue());
  }
 else   if (element instanceof PsiPrefixExpression) {
    PsiExpression operand=((PsiPrefixExpression)element).getOperand();
    ClsLiteralExpressionImpl literal=(ClsLiteralExpressionImpl)getMemberValue(operand,null);
    ClsPrefixExpressionImpl prefixExpression=new ClsPrefixExpressionImpl(parent,literal);
    literal.setParent(prefixExpression);
    return prefixExpression;
  }
 else   if (element instanceof PsiClassObjectAccessExpression) {
    PsiClassObjectAccessExpression expr=(PsiClassObjectAccessExpression)element;
    return new ClsClassObjectAccessExpressionImpl(expr.getOperand().getType().getCanonicalText(),parent);
  }
 else   if (element instanceof PsiArrayInitializerMemberValue) {
    PsiAnnotationMemberValue[] initializers=((PsiArrayInitializerMemberValue)element).getInitializers();
    PsiAnnotationMemberValue[] clsInitializers=new PsiAnnotationMemberValue[initializers.length];
    ClsArrayInitializerMemberValueImpl arrayValue=new ClsArrayInitializerMemberValueImpl(parent);
    for (int i=0; i < initializers.length; i++) {
      clsInitializers[i]=getMemberValue(initializers[i],arrayValue);
    }
    arrayValue.setInitializers(clsInitializers);
    return arrayValue;
  }
 else   if (element instanceof PsiAnnotation) {
    final PsiAnnotation psiAnnotation=(PsiAnnotation)element;
    final String canonicalText=psiAnnotation.getNameReferenceElement().getCanonicalText();
    return new ClsAnnotationValueImpl(parent){
      protected ClsJavaCodeReferenceElementImpl createReference(){
        return new ClsJavaCodeReferenceElementImpl(this,canonicalText);
      }
      protected ClsAnnotationParameterListImpl createParameterList(){
        PsiNameValuePair[] psiAttributes=psiAnnotation.getParameterList().getAttributes();
        return new ClsAnnotationParameterListImpl(this,psiAttributes);
      }
    }
;
  }
 else   if (element instanceof PsiReferenceExpression) {
    return new ClsReferenceExpressionImpl(parent,(PsiReferenceExpression)element);
  }
 else {
    LOG.error("Unexpected source element for annotation member value: " + element);
    return null;
  }
}
