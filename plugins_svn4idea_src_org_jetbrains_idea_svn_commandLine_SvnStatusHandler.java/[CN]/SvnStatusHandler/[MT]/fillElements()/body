{
  myElementsMap.put("repos-status",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new ReposStatus();
    }
  }
);
  myElementsMap.put("lock",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Lock();
    }
  }
);
  myElementsMap.put("token",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new LockToken();
    }
  }
);
  myElementsMap.put("owner",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new LockOwner();
    }
  }
);
  myElementsMap.put("comment",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new LockComment();
    }
  }
);
  myElementsMap.put("created",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new LockCreatedDate();
    }
  }
);
  myElementsMap.put("status",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Status();
    }
  }
);
  myElementsMap.put("author",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Author();
    }
  }
);
  myElementsMap.put("changelist",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Changelist();
    }
  }
);
  myElementsMap.put("commit",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Commit();
    }
  }
);
  myElementsMap.put("date",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Date();
    }
  }
);
  myElementsMap.put("entry",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Entry(myBase);
    }
  }
);
  myElementsMap.put("target",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Target();
    }
  }
);
  myElementsMap.put("wc-status",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new WcStatus();
    }
  }
);
}
