{
  myBase=base;
  myParseStack=new ArrayList<ElementHandlerBase>();
  myParseStack.add(new Fake());
  myElementsMap=new HashMap<String,Getter<ElementHandlerBase>>();
  fillElements();
  if (dataCallback != null) {
    myDataCallback=new DataCallback(){
      @Override public void startLock(){
        myLockWrapper=new SVNLockWrapper();
      }
      @Override public void endLock(){
        if (myInRemoteStatus) {
          myPending.setRemoteLock(myLockWrapper.create());
        }
 else {
          myPending.setLocalLock(myLockWrapper.create());
        }
        myLockWrapper=null;
      }
      @Override public void startRemoteStatus(){
        myInRemoteStatus=true;
      }
      @Override public void endRemoteStatus(){
        myInRemoteStatus=false;
      }
      @Override public void switchPath(){
        myAnythingReported=true;
        dataCallback.switchPath();
        newPending(infoGetter);
      }
      @Override public void switchChangeList(      String newList){
        dataCallback.switchChangeList(newList);
      }
    }
;
  }
 else {
    myDataCallback=new DataCallback(){
      @Override public void startLock(){
        myLockWrapper=new SVNLockWrapper();
      }
      @Override public void endLock(){
        if (myInRemoteStatus) {
          myPending.setRemoteLock(myLockWrapper.create());
        }
 else {
          myPending.setLocalLock(myLockWrapper.create());
        }
        myLockWrapper=null;
      }
      @Override public void startRemoteStatus(){
        myInRemoteStatus=true;
      }
      @Override public void endRemoteStatus(){
        myInRemoteStatus=false;
      }
      @Override public void switchPath(){
        myAnythingReported=true;
        if (myChangelistName == null) {
          myDefaultListStatuses.add(myPending);
        }
 else {
          myCurrentListChanges.putValue(myChangelistName,myPending);
        }
        newPending(infoGetter);
      }
      @Override public void switchChangeList(      String newList){
        myChangelistName=newList;
      }
    }
;
  }
  newPending(infoGetter);
  mySb=new StringBuilder();
}
