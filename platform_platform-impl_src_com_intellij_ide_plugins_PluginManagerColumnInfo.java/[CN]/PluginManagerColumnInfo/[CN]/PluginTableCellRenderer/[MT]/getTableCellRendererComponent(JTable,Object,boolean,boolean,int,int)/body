{
  Component orig=super.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
  final Color bg=orig.getBackground();
  final Color grayedFg=isSelected ? orig.getForeground() : Color.GRAY;
  myLabel.setForeground(grayedFg);
  myLabel.setBackground(bg);
  myLabel.setOpaque(true);
  if (column == COLUMN_DATE) {
    long date=myPluginDescriptor.getDate();
    myLabel.setText(date != 0 && date != Long.MAX_VALUE ? DateFormatUtil.formatDate(date) : "n/a");
  }
 else   if (column == COLUMN_DOWNLOADS) {
    String downloads=myPluginDescriptor.getDownloads();
    myLabel.setText(!StringUtil.isEmpty(downloads) ? downloads : "n/a");
  }
 else   if (column == COLUMN_CATEGORY) {
    String category=myPluginDescriptor.getCategory();
    if (StringUtil.isEmpty(category)) {
      category=myPluginDescriptor.getRepositoryName();
    }
    myLabel.setText(!StringUtil.isEmpty(category) ? category : "n/a");
  }
  myLabel.setVerticalAlignment(SwingConstants.BOTTOM);
  if (myPluginDescriptor.getStatus() == PluginNode.STATUS_INSTALLED) {
    PluginId pluginId=myPluginDescriptor.getPluginId();
    final boolean hasNewerVersion=InstalledPluginsTableModel.hasNewerVersion(pluginId);
    if (hasNewerVersion) {
      if (!isSelected)       myLabel.setBackground(LightColors.BLUE);
    }
  }
  return myLabel;
}
