{
  if (isSortByName()) {
    return new Comparator<IdeaPluginDescriptor>(){
      public int compare(      IdeaPluginDescriptor o1,      IdeaPluginDescriptor o2){
        return StringUtil.compare(o1.getName(),o2.getName(),true);
      }
    }
;
  }
  if (isSortByDownloads()) {
    return new Comparator<IdeaPluginDescriptor>(){
      public int compare(      IdeaPluginDescriptor o1,      IdeaPluginDescriptor o2){
        String count1=o1.getDownloads();
        String count2=o2.getDownloads();
        if (count1 != null && count2 != null) {
          return -Long.valueOf(count1).compareTo(Long.valueOf(count2));
        }
 else         if (count1 != null) {
          return -1;
        }
 else {
          return 1;
        }
      }
    }
;
  }
  if (isSortByDate()) {
    return new Comparator<IdeaPluginDescriptor>(){
      public int compare(      IdeaPluginDescriptor o1,      IdeaPluginDescriptor o2){
        long date1=(o1 instanceof PluginNode) ? ((PluginNode)o1).getDate() : ((IdeaPluginDescriptorImpl)o1).getDate();
        long date2=(o2 instanceof PluginNode) ? ((PluginNode)o2).getDate() : ((IdeaPluginDescriptorImpl)o2).getDate();
        if (date1 < date2) {
          return 1;
        }
 else         if (date1 > date2)         return -1;
        return 0;
      }
    }
;
  }
  if (isSortByStatus()) {
    return new Comparator<IdeaPluginDescriptor>(){
      public int compare(      IdeaPluginDescriptor o1,      IdeaPluginDescriptor o2){
        if (o1 instanceof PluginNode && o2 instanceof PluginNode) {
          final int status1=((PluginNode)o1).getStatus();
          final int status2=((PluginNode)o2).getStatus();
          if (status1 == PluginNode.STATUS_DOWNLOADED) {
            if (status2 != PluginNode.STATUS_DOWNLOADED)             return -1;
            return StringUtil.compare(o1.getName(),o2.getName(),true);
          }
          if (status2 == PluginNode.STATUS_DOWNLOADED)           return 1;
          if (status1 == PluginNode.STATUS_DELETED) {
            if (status2 != PluginNode.STATUS_DELETED)             return -1;
            return StringUtil.compare(o1.getName(),o2.getName(),true);
          }
          if (status2 == PluginNode.STATUS_DELETED)           return 1;
          if (status1 == PluginNode.STATUS_INSTALLED) {
            if (status2 != PluginNode.STATUS_INSTALLED)             return -1;
            final boolean hasNewerVersion1=InstalledPluginsTableModel.hasNewerVersion(o1.getPluginId());
            final boolean hasNewerVersion2=InstalledPluginsTableModel.hasNewerVersion(o2.getPluginId());
            if (hasNewerVersion1 != hasNewerVersion2) {
              if (hasNewerVersion1)               return -1;
              return 1;
            }
            return StringUtil.compare(o1.getName(),o2.getName(),true);
          }
          if (status2 == PluginNode.STATUS_INSTALLED) {
            return 1;
          }
        }
        return StringUtil.compare(o1.getName(),o2.getName(),true);
      }
    }
;
  }
  return new Comparator<IdeaPluginDescriptor>(){
    public int compare(    IdeaPluginDescriptor o,    IdeaPluginDescriptor o1){
      return 0;
    }
  }
;
}
