{
  final Comparator<IdeaPluginDescriptor> comparator=getColumnComparator();
  if (isSortByStatus()) {
    return new Comparator<IdeaPluginDescriptor>(){
      public int compare(      IdeaPluginDescriptor o1,      IdeaPluginDescriptor o2){
        if (o1 instanceof PluginNode && o2 instanceof PluginNode) {
          final int status1=((PluginNode)o1).getStatus();
          final int status2=((PluginNode)o2).getStatus();
          if (isDownloaded((PluginNode)o1)) {
            if (!isDownloaded((PluginNode)o2))             return -1;
            return comparator.compare(o1,o2);
          }
          if (isDownloaded((PluginNode)o2))           return 1;
          if (status1 == PluginNode.STATUS_DELETED) {
            if (status2 != PluginNode.STATUS_DELETED)             return -1;
            return comparator.compare(o1,o2);
          }
          if (status2 == PluginNode.STATUS_DELETED)           return 1;
          if (status1 == PluginNode.STATUS_INSTALLED) {
            if (status2 != PluginNode.STATUS_INSTALLED)             return -1;
            final boolean hasNewerVersion1=InstalledPluginsTableModel.hasNewerVersion(o1.getPluginId());
            final boolean hasNewerVersion2=InstalledPluginsTableModel.hasNewerVersion(o2.getPluginId());
            if (hasNewerVersion1 != hasNewerVersion2) {
              if (hasNewerVersion1)               return -1;
              return 1;
            }
            return comparator.compare(o1,o2);
          }
          if (status2 == PluginNode.STATUS_INSTALLED) {
            return 1;
          }
        }
        return comparator.compare(o1,o2);
      }
    }
;
  }
  return comparator;
}
