{
  params.setCharset(null);
  params.setJdk(ModuleRootManager.getInstance(module).getSdk());
  params.setWorkingDirectory(getAbsoluteWorkDir());
  final Pattern pattern=Pattern.compile(".*[\\\\/]groovy[^\\\\/]*jar");
  groovyJar:   for (  Library library : GroovyConfigUtils.getInstance().getSDKLibrariesByModule(module)) {
    for (    VirtualFile root : library.getFiles(OrderRootType.CLASSES)) {
      if (pattern.matcher(root.getPresentableUrl()).matches()) {
        params.getClassPath().add(root);
        break groovyJar;
      }
    }
  }
  String groovyHome=getGroovyHome(module);
  params.getVMParametersList().addParametersString(DGROOVY_HOME + "\"" + groovyHome+ "\"");
  String confpath=getConfPath(groovyHome);
  params.getVMParametersList().add(DGROOVY_STARTER_CONF + confpath);
  Sdk jdk=params.getJdk();
  if (jdk != null && jdk.getSdkType() instanceof JavaSdkType) {
    String toolsPath=((JavaSdkType)jdk.getSdkType()).getToolsPath(jdk);
    if (toolsPath != null) {
      params.getVMParametersList().add(DTOOLS_JAR + toolsPath);
    }
  }
  params.getVMParametersList().addParametersString(vmParams);
  params.setMainClass(GROOVY_STARTER);
}
