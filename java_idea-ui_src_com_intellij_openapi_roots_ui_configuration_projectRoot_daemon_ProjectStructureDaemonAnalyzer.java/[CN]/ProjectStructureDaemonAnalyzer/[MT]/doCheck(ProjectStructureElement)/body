{
  final ProjectStructureProblemsHolderImpl problemsHolder=new ProjectStructureProblemsHolderImpl();
  new ReadAction(){
    protected void run(    final Result result){
      if (myStopped.get())       return;
      if (LOG.isDebugEnabled()) {
        LOG.debug("checking " + element);
      }
      element.check(problemsHolder);
    }
  }
.execute();
  invokeLater(new Runnable(){
    public void run(){
      if (myStopped.get())       return;
      if (LOG.isDebugEnabled()) {
        LOG.debug("updating problems for " + element);
      }
      final ProjectStructureProblemDescription warning=myWarningsAboutUnused.get(element);
      if (warning != null)       problemsHolder.registerProblem(warning);
      myProblemHolders.put(element,problemsHolder);
      myDispatcher.getMulticaster().problemsChanged(element);
    }
  }
);
}
