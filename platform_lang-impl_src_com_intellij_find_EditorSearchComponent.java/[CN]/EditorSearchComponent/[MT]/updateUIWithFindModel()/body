{
  myCbMatchCase.setSelected(myFindModel.isCaseSensitive());
  myCbWholeWords.setSelected(myFindModel.isWholeWordsOnly());
  myCbWholeWords.setEnabled(!myFindModel.isRegularExpressions());
  myCbRegexp.setSelected(myFindModel.isRegularExpressions());
  myCbInComments.setSelected(myFindModel.isInCommentsOnly());
  myCbInLiterals.setSelected(myFindModel.isInStringLiteralsOnly());
  String stringToFind=myFindModel.getStringToFind();
  if (!StringUtil.equals(stringToFind,mySearchField.getText())) {
    mySearchField.setText(stringToFind);
  }
  myCbWholeWords.setEnabled(wholeWordsApplicable(stringToFind));
  setTrackingSelection(!myFindModel.isGlobal());
  if (myFindModel.isReplaceState() && myReplacementPane == null) {
    configureReplacementPane();
  }
 else   if (!myFindModel.isReplaceState() && myReplacementPane != null) {
    remove(myReplacementPane);
    myReplacementPane=null;
  }
  if (myFindModel.isReplaceState()) {
    mySelectionOnly.setSelected(!myFindModel.isGlobal());
    myPreserveCase.setSelected(myFindModel.isPreserveCase());
    myPreserveCase.setEnabled(!myFindModel.isRegularExpressions());
    myPreserveCase.setEnabled(!myFindModel.isWholeWordsOnly());
    String stringToReplace=myFindModel.getStringToReplace();
    if (!StringUtil.equals(stringToReplace,myReplaceField.getText())) {
      myReplaceField.setText(stringToReplace);
    }
    updateExcludeStatus();
  }
}
