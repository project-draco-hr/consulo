{
  JPanel replacement=createLeadPane();
  myReplaceField=createTextField();
  configureTextField(myReplaceField);
  replacement.add(myReplaceField);
  add(replacement,BorderLayout.SOUTH);
  myPreserveCase=new JCheckBox("Preserve case");
  mySelectionOnly=new JCheckBox("Selection only");
  final FindModel findInFileModel=FindManager.getInstance(myProject).getFindInFileModel();
  myPreserveCase.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      final boolean b=myPreserveCase.isSelected();
      findInFileModel.setPreserveCase(b);
      updateResults(true);
    }
  }
);
  myPreserveCase.setMnemonic('P');
  mySelectionOnly.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      updateModelWithSelectionMode(findInFileModel);
      updateResults(true);
    }
  }
);
  mySelectionOnly.setMnemonic('S');
  updateModelWithSelectionMode(findInFileModel);
  mySelectionOnly.setSelected(!findInFileModel.isGlobal());
  myPreserveCase.setSelected(findInFileModel.isPreserveCase());
  myPreserveCase.setEnabled(!findInFileModel.isRegularExpressions());
  replacement.add(mySelectionOnly);
  replacement.add(myPreserveCase);
  setSmallerFontAndOpaque(mySelectionOnly);
  setSmallerFontAndOpaque(myPreserveCase);
  setSmallerFont(myReplaceField);
}
