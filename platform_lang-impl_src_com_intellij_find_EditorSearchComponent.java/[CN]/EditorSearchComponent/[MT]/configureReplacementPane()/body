{
  myReplacementPane=createLeadPane();
  myReplaceField=createTextField();
  configureTextField(myReplaceField);
  myReplaceField.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    final DocumentEvent e){
      setMatchesLimit(MATCHES_LIMIT);
      myFindModel.setStringToReplace(myReplaceField.getText());
    }
  }
);
  myReplaceField.registerKeyboardAction(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      myLivePreviewController.performReplace();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),JComponent.WHEN_FOCUSED);
  myReplaceField.setText(myFindModel.getStringToReplace());
  myReplacementPane.add(myReplaceField);
  add(myReplacementPane,BorderLayout.SOUTH);
  myPreserveCase=new JCheckBox("Preserve case");
  mySelectionOnly=new JCheckBox("Selection only");
  myPreserveCase.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      final boolean b=myPreserveCase.isSelected();
      myFindModel.setPreserveCase(b);
    }
  }
);
  myPreserveCase.setMnemonic('P');
  mySelectionOnly.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      final boolean b=mySelectionOnly.isSelected();
      myFindModel.setGlobal(!b);
    }
  }
);
  mySelectionOnly.setMnemonic('S');
  myReplaceButton=new JButton("Replace");
  myReplaceButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      myLivePreviewController.performReplace();
    }
  }
);
  myReplaceButton.setMnemonic('p');
  myReplaceAllButton=new JButton("Replace all");
  myReplaceAllButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      myLivePreviewController.performReplaceAll();
    }
  }
);
  myReplaceAllButton.setMnemonic('a');
  myExcludeButton=new JButton("");
  myExcludeButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      myLivePreviewController.exclude();
    }
  }
);
  myExcludeButton.setMnemonic('l');
  myReplacementPane.add(myReplaceButton);
  myReplacementPane.add(myReplaceAllButton);
  myReplacementPane.add(myExcludeButton);
  myOptionsPane.add(mySelectionOnly);
  myOptionsPane.add(myPreserveCase);
  setSmallerFontAndOpaque(myReplaceButton);
  setSmallerFontAndOpaque(myReplaceAllButton);
  setSmallerFontAndOpaque(myExcludeButton);
  setSmallerFontAndOpaque(mySelectionOnly);
  setSmallerFontAndOpaque(myPreserveCase);
  setSmallerFont(myReplaceField);
  myReplaceField.putClientProperty("AuxEditorComponent",Boolean.TRUE);
}
