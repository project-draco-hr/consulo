{
  final DependenciesBuilder builder=new ForwardDependenciesBuilder(myProject,new AnalysisScope(myProject));
  builder.analyze();
  final Set<PsiFile> searchIn=new HashSet<PsiFile>();
  final PsiClass aClass=myPsiManager.findClass("A",GlobalSearchScope.allScope(myProject));
  searchIn.add(aClass.getContainingFile());
  final Set<PsiFile> searchFor=new HashSet<PsiFile>();
  final PsiClass bClass=myPsiManager.findClass("B",GlobalSearchScope.allScope(myProject));
  searchFor.add(bClass.getContainingFile());
  final UsageInfo[] usagesInfos=FindDependencyUtil.findDependencies(builder,searchIn,searchFor);
  final PsiFile psiFile=aClass.getContainingFile();
  final Document document=getDocument(psiFile);
  final LexerEditorHighlighter highlighter=getHighlighter(psiFile,document);
  final String[] psiUsages=new String[usagesInfos.length];
  for (int i=0; i < usagesInfos.length; i++) {
    psiUsages[i]=new UTUsageNode(usagesInfos[i],psiFile,highlighter,document,false,false).toString();
  }
  checkResult(new String[]{"(2, 3) B myB = new B();","(2, 15) B myB = new B();","(4, 9) myB.bb();"},psiUsages);
}
