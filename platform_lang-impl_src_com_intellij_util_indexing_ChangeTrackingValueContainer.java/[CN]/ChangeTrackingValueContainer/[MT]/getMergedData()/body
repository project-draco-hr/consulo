{
  ValueContainerImpl<Value> merged=myMerged;
  if (merged != null) {
    return merged;
  }
synchronized (myInitializer.getLock()) {
    merged=myMerged;
    if (merged != null) {
      return merged;
    }
    final ValueContainer<Value> fromDisk=myInitializer.compute();
    final ValueContainerImpl<Value> newMerged;
    if (fromDisk instanceof ValueContainerImpl) {
      newMerged=((ValueContainerImpl<Value>)fromDisk).clone();
    }
 else {
      newMerged=((ChangeTrackingValueContainer<Value>)fromDisk).getMergedData().clone();
    }
    myInvalidated.forEach(new TIntProcedure(){
      @Override public boolean execute(      int inputId){
        newMerged.removeAssociatedValue(inputId);
        return true;
      }
    }
);
    myRemoved.forEach(new ContainerAction<Value>(){
      @Override public void perform(      final int id,      final Value value){
        newMerged.removeValue(id,value);
      }
    }
);
    myAdded.forEach(new ContainerAction<Value>(){
      @Override public void perform(      final int id,      final Value value){
        newMerged.removeAssociatedValue(id);
        newMerged.addValue(id,value);
      }
    }
);
    setNeedsCompacting(fromDisk.needsCompacting());
    myMerged=newMerged;
    return newMerged;
  }
}
