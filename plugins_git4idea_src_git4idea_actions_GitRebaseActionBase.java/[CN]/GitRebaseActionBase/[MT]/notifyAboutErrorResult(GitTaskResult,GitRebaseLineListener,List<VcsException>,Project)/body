{
  if (taskResult == GitTaskResult.CANCELLED) {
    return;
  }
  final GitRebaseLineListener.Result result=resultListener.getResult();
  String messageId;
  boolean isError=true;
switch (result.status) {
case CONFLICT:
    messageId="rebase.result.conflict";
  break;
case ERROR:
messageId="rebase.result.error";
break;
case CANCELLED:
exceptions.clear();
return;
case EDIT:
isError=false;
messageId="rebase.result.amend";
break;
case FINISHED:
default :
messageId=null;
}
if (messageId != null) {
String message=GitBundle.message(messageId,result.current,result.total);
String title=GitBundle.message(messageId + ".title");
if (isError) {
Messages.showErrorDialog(project,message,title);
}
 else {
Messages.showInfoMessage(project,message,title);
}
}
}
