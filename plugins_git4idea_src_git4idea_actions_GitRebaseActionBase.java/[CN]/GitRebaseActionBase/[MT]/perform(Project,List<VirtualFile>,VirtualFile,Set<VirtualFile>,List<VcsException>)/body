{
  GitLineHandler h=createHandler(project,gitRoots,defaultRoot);
  if (h == null) {
    return;
  }
  final VirtualFile root=h.workingDirectoryFile();
  GitRebaseEditorService service=GitRebaseEditorService.getInstance();
  final GitInteractiveRebaseEditorHandler editor=new GitInteractiveRebaseEditorHandler(service,project,root,h);
  final GitRebaseLineListener resultListener=new GitRebaseLineListener();
  h.addLineListener(resultListener);
  configureEditor(editor);
  affectedRoots.add(root);
  service.configureHandler(h,editor.getHandlerNo());
  GitTask task=new GitTask(project,h,GitBundle.getString("rebasing.title"));
  task.executeInBackground(false,new GitTaskResultHandlerAdapter(){
    @Override protected void run(    GitTaskResult taskResult){
      editor.close();
      GitRepositoryManager.getInstance(project).updateRepository(root,GitRepository.TrackedTopic.ALL_CURRENT);
      notifyAboutErrorResult(taskResult,resultListener,exceptions,project);
    }
  }
);
}
