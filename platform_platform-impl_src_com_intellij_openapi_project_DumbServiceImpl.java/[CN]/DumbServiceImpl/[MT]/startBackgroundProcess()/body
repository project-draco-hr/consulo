{
  ProgressManager.getInstance().run(new Task.Backgroundable(myProject,IdeBundle.message("progress.indexing"),false){
    @Override public void run(    @NotNull final ProgressIndicator visibleIndicator){
      final ShutDownTracker shutdownTracker=ShutDownTracker.getInstance();
      final Thread self=Thread.currentThread();
      AccessToken token=HeavyProcessLatch.INSTANCE.processStarted("Performing indexing tasks");
      try {
        shutdownTracker.registerStopperThread(self);
        if (visibleIndicator instanceof ProgressIndicatorEx) {
          ((ProgressIndicatorEx)visibleIndicator).addStateDelegate(new AppIconProgress());
        }
        DumbModeTask task=null;
        while (true) {
          Pair<DumbModeTask,ProgressIndicatorEx> pair=getNextTask(task);
          if (pair == null)           break;
          task=pair.first;
          ProgressIndicatorEx taskIndicator=pair.second;
          if (visibleIndicator instanceof ProgressIndicatorEx) {
            taskIndicator.addStateDelegate((ProgressIndicatorEx)visibleIndicator);
          }
          runSingleTask(task,taskIndicator);
        }
      }
 catch (      Throwable unexpected) {
        LOG.error(unexpected);
      }
 finally {
        shutdownTracker.unregisterStopperThread(self);
        token.finish();
      }
    }
  }
);
}
