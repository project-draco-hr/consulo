{
  final CacheUpdateRunner runner=new CacheUpdateRunner(myProject,new ArrayList<CacheUpdater>(updaters));
  final Application application=ApplicationManager.getApplication();
  if (!forceDumbMode && !myDumb && application.isReadAccessAllowed()) {
    final ProgressIndicator currentIndicator=ProgressManager.getInstance().getProgressIndicator();
    final ProgressIndicator indicator;
    if (currentIndicator != null) {
      indicator=currentIndicator;
      currentIndicator.pushState();
    }
 else {
      indicator=new EmptyProgressIndicator();
    }
    try {
      final int size=runner.queryNeededFiles(indicator);
      if ((size + runner.getNumberOfPendingUpdateJobs(indicator)) < 50) {
        if (size > 0) {
          runner.processFiles(indicator,false);
        }
        runner.updatingDone();
        return;
      }
    }
  finally {
      if (currentIndicator != null) {
        currentIndicator.popState();
      }
    }
  }
  final IndexUpdateRunnable updateRunnable=new IndexUpdateRunnable(runner);
  invokeOnEDT(new DumbAwareRunnable(){
    public void run(){
      if (myProject.isDisposed()) {
        return;
      }
      final boolean wasDumb=myDumb;
      if (!wasDumb) {
        application.runWriteAction(new Runnable(){
          public void run(){
            myDumb=true;
            myPublisher.enteredDumbMode();
            updateRunnable.run();
          }
        }
);
      }
 else {
        myUpdatesQueue.addLast(updateRunnable);
      }
    }
  }
);
}
