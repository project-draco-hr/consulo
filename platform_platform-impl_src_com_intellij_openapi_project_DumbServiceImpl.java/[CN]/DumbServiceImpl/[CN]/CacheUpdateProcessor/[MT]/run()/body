{
  while (true) {
    CacheUpdateRunner runner=null;
    while (runner == null) {
      if (myProject.isDisposed())       return;
      try {
        runner=myUpdatesQueue.poll(500,TimeUnit.MILLISECONDS);
      }
 catch (      InterruptedException e) {
        LOG.info(e);
        return;
      }
    }
    if (myProject.isDisposed())     return;
    final Semaphore sema=new Semaphore();
    sema.down();
    final CacheUpdateRunner finalRunner=runner;
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        new Task.Backgroundable(myProject,IdeBundle.message("progress.indexing"),false){
          @Override public void run(          @NotNull final ProgressIndicator indicator){
            try {
              notifyStartedIfNotInDumbMode();
              try {
                processPendingUpdates(finalRunner,createIndicatorProxy(indicator));
              }
  finally {
                notifyFinishedIfQueueEmpty();
              }
            }
 catch (            Throwable e) {
              if (!(e instanceof ProcessCanceledException)) {
                LOG.error(e);
              }
            }
 finally {
              sema.up();
            }
          }
        }
.queue();
      }
    }
);
    sema.waitFor();
  }
}
