{
  return (ProgressIndicator)Proxy.newProxyInstance(indicator.getClass().getClassLoader(),new Class[]{ProgressIndicator.class},new InvocationHandler(){
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      if ("setFraction".equals(method.getName())) {
        double fraction=(Double)args[0];
        args[0]=new Double((myProcessedItems + fraction * myCurrentUpdateTotal) / myTotalItems);
      }
      try {
        return method.invoke(indicator,args);
      }
 catch (      InvocationTargetException e) {
        final Throwable cause=e.getCause();
        if (cause instanceof ProcessCanceledException) {
          throw cause;
        }
        throw e;
      }
    }
  }
);
}
