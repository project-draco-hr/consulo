{
  super(context);
  myTree.setShowsRootHandles(true);
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    private boolean myIgnore;
    @SuppressWarnings("SuspiciousMethodCalls") @Override public void valueChanged(    TreeSelectionEvent e){
      if (myIgnore) {
        return;
      }
      TreePath oldPath=e.getOldLeadSelectionPath();
      if (oldPath == null) {
        onNodeChange();
        return;
      }
      Object oldNode=oldPath.getLastPathComponent();
      if (oldNode == null) {
        onNodeChange();
        return;
      }
      Pair<String,GradleProjectStructureNodeSettings> pair=myCards.get(oldNode);
      if (pair == null || pair.second.validate()) {
        onNodeChange();
        return;
      }
      myIgnore=true;
      try {
        myTree.getSelectionModel().setSelectionPath(oldPath);
      }
  finally {
        myIgnore=false;
      }
    }
    @SuppressWarnings("SuspiciousMethodCalls") private void onNodeChange(){
      Object node=myTree.getLastSelectedPathComponent();
      Pair<String,GradleProjectStructureNodeSettings> pair=myCards.get(node);
      String cardName=EMPTY_CARD_NAME;
      if (pair != null) {
        cardName=pair.first;
        pair.second.refresh();
      }
      mySettingsCardLayout.show(mySettingsPanel,cardName);
    }
  }
);
  JPanel leftPanel=new JPanel(new GridBagLayout());
  JPanel rightPanel=new JPanel(new GridBagLayout());
  GridBagConstraints constraints=new GridBagConstraints();
  constraints.weightx=1;
  constraints.anchor=GridBagConstraints.NORTHWEST;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  constraints.insets=new Insets(5,5,5,5);
  constraints.gridwidth=GridBagConstraints.REMAINDER;
  leftPanel.add(new JLabel(ExternalSystemBundle.message("gradle.import.label.project.structure")),constraints);
  constraints=new GridBagConstraints();
  constraints.weightx=constraints.weighty=1;
  constraints.fill=GridBagConstraints.BOTH;
  constraints.anchor=GridBagConstraints.NORTHWEST;
  constraints.gridwidth=GridBagConstraints.REMAINDER;
  leftPanel.add(new JBScrollPane(myTree),constraints);
  myComponent.add(leftPanel);
  constraints=new GridBagConstraints();
  constraints.anchor=GridBagConstraints.NORTHWEST;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  constraints.insets=new Insets(5,10,5,5);
  constraints.gridwidth=GridBagConstraints.REMAINDER;
  rightPanel.add(new JLabel(ExternalSystemBundle.message("gradle.import.label.details")),constraints);
  constraints=new GridBagConstraints();
  constraints.weightx=constraints.weighty=1;
  constraints.fill=GridBagConstraints.BOTH;
  constraints.anchor=GridBagConstraints.NORTHWEST;
  constraints.gridwidth=GridBagConstraints.REMAINDER;
  constraints.insets.left=10;
  rightPanel.add(mySettingsPanel,constraints);
  myComponent.add(rightPanel);
}
