{
  getJavaFacade().setAssertOnFileLoadingFilter(new VirtualFileFilter(){
    @Override public boolean accept(    final VirtualFile file){
      return !"package-info.java".equals(file.getName());
    }
  }
);
  final PsiClass annotationTypeClass=findClass("annotations.AnnotationType");
  assertTrue(annotationTypeClass.isAnnotationType());
  final Collection<PsiMember> all=AnnotatedMembersSearch.search(annotationTypeClass,GlobalSearchScope.moduleScope(myModule)).findAll();
  assertEquals(2,all.size());
  Set<String> correctNames=new HashSet<String>(Arrays.asList("AnnotatedClass","correctMethod"));
  for (  PsiMember member : all) {
    assertTrue(correctNames.contains(member.getName()));
  }
  final Collection<PsiJavaPackage> packages=AnnotatedPackagesSearch.search(annotationTypeClass,GlobalSearchScope.moduleScope(myModule)).findAll();
  assertEquals(1,packages.size());
  assertEquals("annotated",packages.iterator().next().getQualifiedName());
  tearDownLoadingFilter();
}
