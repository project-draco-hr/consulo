{
  final String fileUrl=vfile.getUrl();
  final Runnable parseScript=new Runnable(){
    @Override public void run(){
      GroovyDslExecutor executor=getCachedExecutor(vfile,stamp);
      try {
        if (executor == null && isActivated(vfile)) {
          executor=createExecutor(text,vfile,project);
          vfile.putUserData(CACHED_EXECUTOR,Pair.create(executor,stamp));
          if (executor != null) {
            activateUntilModification(vfile);
          }
        }
      }
  finally {
synchronized (filesInProcessing) {
          for (          LinkedBlockingQueue<Pair<VirtualFile,GroovyDslExecutor>> queue : filesInProcessing.remove(fileUrl)) {
            queue.offer(Pair.create(vfile,executor));
          }
        }
      }
    }
  }
;
synchronized (filesInProcessing) {
    final boolean isNewRequest=!filesInProcessing.containsKey(fileUrl);
    filesInProcessing.putValue(fileUrl,queue);
    if (isNewRequest) {
      ourPool.execute(parseScript);
    }
  }
}
