{
  final Project project=dslFile.getProject();
  final Key<CachedValue<ConcurrentMap<T,V>>> key=new CachedValuesManager.MemoizationKey<CachedValue<ConcurrentMap<T,V>>>("GroovyDsl" + id);
  return CachedValuesManager.getManager(project).getCachedValue(dslFile,key,new CachedValueProvider<ConcurrentMap<T,V>>(){
    @Override public Result<ConcurrentMap<T,V>> compute(){
      final ConcurrentMap<T,V> map=new ConcurrentHashMap<T,V>();
      final Result<ConcurrentMap<T,V>> result=Result.create(map,PsiModificationTracker.MODIFICATION_COUNT,ProjectRootManager.getInstance(project));
      result.setLockValue(true);
      return result;
    }
  }
,false);
}
