{
  final Project project=descriptor.getProject();
  final ProcessingContext ctx=new ProcessingContext();
  ctx.put(ClassContextFilter.getClassKey(qname),descriptor.getPsiClass());
  try {
    if (!isApplicable(executor,descriptor,ctx)) {
      return CustomMembersHolder.EMPTY;
    }
    final ExtensibleCustomMembersGenerator generator=new ExtensibleCustomMembersGenerator(descriptor);
    executor.processVariants(descriptor,generator,ctx);
    return generator.getMembersHolder();
  }
 catch (  InvokerInvocationException e) {
    Throwable cause=e.getCause();
    if (cause instanceof ProcessCanceledException) {
      throw (ProcessCanceledException)cause;
    }
    if (cause instanceof OutOfMemoryError) {
      throw (OutOfMemoryError)cause;
    }
    handleDslError(e,project,dslFile);
  }
catch (  ProcessCanceledException e) {
    throw e;
  }
catch (  OutOfMemoryError e) {
    throw e;
  }
catch (  Throwable e) {
    handleDslError(e,project,dslFile);
  }
  return CustomMembersHolder.EMPTY;
}
