{
  final PsiFile placeFile=place.getContainingFile().getOriginalFile();
  final VirtualFile placeVFfile=placeFile.getVirtualFile();
  if (placeVFfile == null) {
    return true;
  }
  for (  final GroovyFile file : getDslFiles(new AdditionalIndexedRootsScope(place.getResolveScope(),StandardDslIndexedRootsProvider.class))) {
    final VirtualFile vfile=file.getVirtualFile();
    if (vfile == null || vfile.equals(placeVFfile)) {
      continue;
    }
    CachedValue<GroovyDslExecutor> cachedEnhanced=file.getUserData(CACHED_ENHANCED_KEY);
    if (cachedEnhanced == null) {
      file.putUserData(CACHED_ENHANCED_KEY,cachedEnhanced=file.getManager().getCachedValuesManager().createCachedValue(new CachedValueProvider<GroovyDslExecutor>(){
        public Result<GroovyDslExecutor> compute(){
          try {
            return Result.create(new GroovyDslExecutor(file.getText(),vfile.getName()),file);
          }
 catch (          CompilationFailedException e) {
            LOG.error(e);
            return Result.create(null,file);
          }
        }
      }
,false));
    }
    final GroovyDslExecutor value=cachedEnhanced.getValue();
    if (value != null && !consumer.process(file,value)) {
      return false;
    }
  }
  return true;
}
