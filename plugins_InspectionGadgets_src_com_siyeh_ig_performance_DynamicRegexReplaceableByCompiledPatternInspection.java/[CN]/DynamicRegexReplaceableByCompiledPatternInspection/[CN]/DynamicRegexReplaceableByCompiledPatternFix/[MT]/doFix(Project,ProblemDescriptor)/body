{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  final PsiClass aClass=PsiTreeUtil.getParentOfType(element,PsiClass.class);
  if (aClass == null) {
    return;
  }
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
  final GlobalSearchScope resolveScope=aClass.getResolveScope();
  final PsiClassType patternType=factory.createTypeByFQClassName("java.util.regex.Pattern",resolveScope);
  final PsiField newField=factory.createField("pattern",patternType);
  final PsiElement field=aClass.add(newField);
  final PsiIdentifier identifier=newField.getNameIdentifier();
  final TemplateBuilder templateBuilder=new TemplateBuilder(field);
  final Expression macroCallNode=new MacroCallNode(new SuggestVariableNameMacro());
  templateBuilder.replaceElement(identifier,macroCallNode);
  final Template template=templateBuilder.buildInlineTemplate();
  final FileEditorManager fileEditorManager=FileEditorManager.getInstance(project);
  final Editor editor=fileEditorManager.getSelectedTextEditor();
  if (editor == null) {
    return;
  }
  TemplateManager.getInstance(project).startTemplate(editor,template);
}
