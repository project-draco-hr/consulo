{
  if (item != null) {
    PsiDocumentManager.getInstance(myProject).commitAllDocuments();
    final OffsetMap offsetMap=new OffsetMap(myDocument);
    final InsertionContext context=new InsertionContext(offsetMap,(char)0,false,elements,psiFile,myEditor);
    context.setTailOffset(myEditor.getCaretModel().getOffset());
    offsetMap.addOffset(CompletionInitializationContext.START_OFFSET,context.getTailOffset() - item.getLookupString().length());
    offsetMap.addOffset(CompletionInitializationContext.SELECTION_END_OFFSET,context.getTailOffset());
    offsetMap.addOffset(CompletionInitializationContext.IDENTIFIER_END_OFFSET,context.getTailOffset());
    Integer bracketCount=item instanceof LookupItem ? (Integer)((LookupItem)item).getAttribute(LookupItem.BRACKETS_COUNT_ATTR) : null;
    if (bracketCount != null) {
      final StringBuilder tail=new StringBuilder();
      for (int i=0; i < bracketCount.intValue(); i++) {
        tail.append("[]");
      }
      new WriteCommandAction(myProject){
        protected void run(        com.intellij.openapi.application.Result result) throws Throwable {
          EditorModificationUtil.insertStringAtCaret(myEditor,tail.toString());
        }
      }
.execute();
      PsiDocumentManager.getInstance(myProject).commitDocument(myDocument);
    }
    final TemplateLookupSelectionHandler handler=item instanceof LookupItem ? ((LookupItem<?>)item).getAttribute(TemplateLookupSelectionHandler.KEY_IN_LOOKUP_ITEM) : null;
    if (handler != null) {
      handler.itemSelected(item,psiFile,myDocument,mySegments.getSegmentStart(currentSegmentNumber),mySegments.getSegmentEnd(currentSegmentNumber));
    }
 else {
      new WriteCommandAction(myProject){
        protected void run(        com.intellij.openapi.application.Result result) throws Throwable {
          item.handleInsert(context);
        }
      }
.execute();
    }
    if (completionChar == '.') {
      EditorModificationUtil.insertStringAtCaret(myEditor,".");
      AutoPopupController.getInstance(myProject).autoPopupMemberLookup(myEditor,null);
      return;
    }
    if (!isFinished()) {
      calcResults(true);
    }
  }
  nextTab();
}
