{
  PsiElement container=getContainer(element);
  if (container == null)   return;
  if (!FileModificationService.getInstance().preparePsiElementForWrite(container))   return;
  final List<? extends PsiElement> comments=getCommentsFor(container);
  if (comments != null) {
    for (    PsiElement comment : comments) {
      if (comment instanceof PsiComment && SuppressionUtil.isSuppressionComment(comment)) {
        replaceSuppressionComment(comment);
        return;
      }
    }
  }
  boolean caretWasBeforeStatement=editor != null && editor.getCaretModel().getOffset() == container.getTextRange().getStartOffset();
  try {
    createSuppression(project,element,container);
  }
 catch (  IncorrectOperationException e) {
    if (!ApplicationManager.getApplication().isUnitTestMode() && editor != null) {
      Messages.showErrorDialog(editor.getComponent(),InspectionsBundle.message("suppress.inspection.annotation.syntax.error",e.getMessage()));
    }
  }
  if (caretWasBeforeStatement) {
    editor.getCaretModel().moveToOffset(container.getTextRange().getStartOffset());
  }
  UndoUtil.markPsiFileForUndo(element.getContainingFile());
}
