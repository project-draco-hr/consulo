{
  ColumnInfo local=new ElementsColumnInfoBase<PathMappingSettings.PathMapping>("Local path"){
    public String valueOf(    PathMappingSettings.PathMapping pathMapping){
      return pathMapping.getLocalRoot();
    }
    public boolean isCellEditable(    PathMappingSettings.PathMapping pathMapping){
      return canDeleteElement(pathMapping);
    }
    public void setValue(    PathMappingSettings.PathMapping pathMapping,    String s){
      if (s.equals(valueOf(pathMapping))) {
        return;
      }
      pathMapping.setLocalRoot(s);
      setModified();
    }
    @Override protected String getDescription(    PathMappingSettings.PathMapping pathMapping){
      return valueOf(pathMapping);
    }
  }
;
  ColumnInfo remote=new ElementsColumnInfoBase<PathMappingSettings.PathMapping>("Remote path"){
    public String valueOf(    PathMappingSettings.PathMapping pathMapping){
      return pathMapping.getRemoteRoot();
    }
    public boolean isCellEditable(    PathMappingSettings.PathMapping pathMapping){
      return canDeleteElement(pathMapping);
    }
    public void setValue(    PathMappingSettings.PathMapping pathMapping,    String s){
      if (s.equals(valueOf(pathMapping))) {
        return;
      }
      pathMapping.setRemoteRoot(s);
      setModified();
    }
    @Override protected String getDescription(    PathMappingSettings.PathMapping pathMapping){
      return valueOf(pathMapping);
    }
  }
;
  return new ListTableModel((new ColumnInfo[]{local,remote}));
}
