{
  StringBuffer packageIndex=new StringBuffer();
  packageIndex.append("<html><body>");
  final Map<String,Set<RefEntity>> content=new HashMap<String,Set<RefEntity>>();
  for (  InspectionToolWrapper toolWrapper : toolWrappers) {
    InspectionToolPresentation presentation=myView.getGlobalInspectionContext().getPresentation(toolWrapper);
    final Map<String,Set<RefEntity>> toolContent=presentation.getContent();
    if (toolContent != null) {
      content.putAll(toolContent);
    }
  }
  final Set<RefEntity> defaultPackageEntities=content.remove(null);
  if (defaultPackageEntities != null) {
    content.put("default package",defaultPackageEntities);
  }
  List<String> packageNames=new ArrayList<String>(content.keySet());
  Collections.sort(packageNames);
  for (  String packageName : packageNames) {
    appendPackageReference(packageIndex,packageName);
    List<RefEntity> packageContent=new ArrayList<RefEntity>(content.get(packageName));
    Collections.sort(packageContent,RefEntityAlphabeticalComparator.getInstance());
    StringBuffer contentIndex=new StringBuffer();
    contentIndex.append("<html><body>");
    for (    RefEntity refElement : packageContent) {
      refElement=refElement.getRefManager().getRefinedElement(refElement);
      contentIndex.append("<a HREF=\"");
      contentIndex.append(exporter.getURL(refElement));
      contentIndex.append("\" target=\"elementFrame\">");
      contentIndex.append(refElement.getName());
      contentIndex.append("</a><br>");
      exporter.createPage(refElement);
    }
    contentIndex.append("</body></html>");
    HTMLExportUtil.writeFile(exporter.getRootFolder(),packageName + "-index.html",contentIndex,myView.getProject());
  }
  final Set<RefModule> modules=new HashSet<RefModule>();
  for (  InspectionToolWrapper toolWrapper : toolWrappers) {
    InspectionToolPresentation presentation=myView.getGlobalInspectionContext().getPresentation(toolWrapper);
    final Set<RefModule> problems=presentation.getModuleProblems();
    if (problems != null) {
      modules.addAll(problems);
    }
  }
  final List<RefModule> sortedModules=new ArrayList<RefModule>(modules);
  Collections.sort(sortedModules,RefEntityAlphabeticalComparator.getInstance());
  for (  RefModule module : sortedModules) {
    appendPackageReference(packageIndex,module.getName());
    StringBuffer contentIndex=new StringBuffer();
    contentIndex.append("<html><body>");
    contentIndex.append("<a HREF=\"");
    contentIndex.append(exporter.getURL(module));
    contentIndex.append("\" target=\"elementFrame\">");
    contentIndex.append(module.getName());
    contentIndex.append("</a><br>");
    exporter.createPage(module);
    contentIndex.append("</body></html>");
    HTMLExportUtil.writeFile(exporter.getRootFolder(),module.getName() + "-index.html",contentIndex,myView.getProject());
  }
  packageIndex.append("</body></html>");
  HTMLExportUtil.writeFile(exporter.getRootFolder(),"index.html",packageIndex,myView.getProject());
}
