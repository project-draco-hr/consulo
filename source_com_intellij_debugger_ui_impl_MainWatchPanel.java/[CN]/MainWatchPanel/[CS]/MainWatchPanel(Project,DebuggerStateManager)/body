{
  super(project,stateManager);
  AnAction removeWatchesAction=ActionManager.getInstance().getAction(DebuggerActions.REMOVE_WATCH);
  removeWatchesAction.registerCustomShortcutSet(new CustomShortcutSet(myRemoveWatchAccelerator),getWatchTree());
  AnAction newWatchAction=ActionManager.getInstance().getAction(DebuggerActions.NEW_WATCH);
  newWatchAction.registerCustomShortcutSet(new CustomShortcutSet(myNewWatchAccelerator),getWatchTree());
  ListenerUtil.addMouseListener(getWatchTree(),new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getButton() == MouseEvent.BUTTON1 && e.getClickCount() == 2) {
        AnAction editWatchAction=ActionManager.getInstance().getAction(DebuggerActions.EDIT_WATCH);
        Presentation presentation=(Presentation)editWatchAction.getTemplatePresentation().clone();
        DataContext context=DataManager.getInstance().getDataContext(getWatchTree());
        AnActionEvent actionEvent=new AnActionEvent(null,context,"WATCH_TREE",presentation,ActionManager.getInstance(),0);
        editWatchAction.actionPerformed(actionEvent);
      }
    }
  }
);
  AnAction editWatchAction=ActionManager.getInstance().getAction(DebuggerActions.EDIT_WATCH);
  editWatchAction.registerCustomShortcutSet(new CustomShortcutSet(myEditWatchAccelerator),getWatchTree());
}
