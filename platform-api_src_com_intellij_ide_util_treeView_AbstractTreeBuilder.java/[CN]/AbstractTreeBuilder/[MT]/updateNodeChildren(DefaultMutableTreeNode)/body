{
  myTreeStructure.commit();
  boolean wasExpanded=myTree.isExpanded(new TreePath(node.getPath()));
  final boolean wasLeaf=node.getChildCount() == 0;
  final NodeDescriptor descriptor=(NodeDescriptor)node.getUserObject();
  if (descriptor == null)   return;
  if (myUnbuiltNodes.contains(node)) {
    processUnbuilt(node,descriptor);
    processNodeActionsIfReady(node);
    return;
  }
  if (myTreeStructure.isToBuildChildrenInBackground(getTreeStructureElement(descriptor))) {
    if (queueBackgroundUpdate(node,descriptor))     return;
  }
  Map<Object,Integer> elementToIndexMap=collectElementToIndexMap(descriptor);
  processAllChildren(node,elementToIndexMap);
  ArrayList<TreeNode> nodesToInsert=collectNodesToInsert(descriptor,elementToIndexMap);
  insertNodesInto(nodesToInsert,node);
  updateNodesToInsert(nodesToInsert);
  if (wasExpanded) {
    expand(node);
  }
  if (wasExpanded || wasLeaf) {
    expand(node,descriptor,wasLeaf);
  }
  processNodeActionsIfReady(node);
}
