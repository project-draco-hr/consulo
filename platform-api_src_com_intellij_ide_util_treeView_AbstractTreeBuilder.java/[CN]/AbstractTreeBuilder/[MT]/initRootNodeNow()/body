{
  if (myRootNodeWasInitialized)   return;
  myRootNodeWasInitialized=true;
  Object rootElement=myTreeStructure.getRootElement();
  addNodeAction(rootElement,new NodeAction(){
    public void onReady(    final DefaultMutableTreeNode node){
      final Runnable[] runnables=myDeferredSelections.toArray(new Runnable[myDeferredSelections.size()]);
      myDeferredSelections.clear();
      for (      Runnable runnable : runnables) {
        runnable.run();
      }
    }
  }
);
  NodeDescriptor nodeDescriptor=myTreeStructure.createDescriptor(rootElement,null);
  myRootNode.setUserObject(nodeDescriptor);
  updateNodeDescriptor(nodeDescriptor);
  if (nodeDescriptor.getElement() != null) {
    createMapping(nodeDescriptor.getElement(),myRootNode);
  }
  addLoadingNode(myRootNode);
  boolean willUpdate=false;
  if (isAutoExpandNode(nodeDescriptor)) {
    willUpdate=myUnbuiltNodes.contains(myRootNode);
    expand(myRootNode);
  }
  if (!willUpdate) {
    updateNodeChildren(myRootNode);
  }
  if (myRootNode.getChildCount() == 0) {
    myTreeModel.nodeChanged(myRootNode);
  }
}
