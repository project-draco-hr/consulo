{
  assertEquals(expected,myArray.toString());
  assertEquals(expected.length(),myArray.length());
  for (int i=0; i < expected.length(); i++) {
    if (expected.charAt(i) != myArray.charAt(i)) {
      fail(String.format("Detected incorrect 'charAt()' processing for deferred changes. Text: '%1$s'. Expected to get symbol '%2$c' " + "(numeric value %2$d) at index %3$d but actual symbol is '%4$c' (numeric value %4$d)",expected,(int)expected.charAt(i),i,(int)myArray.charAt(i)));
    }
    assertEquals(expected.charAt(i),myArray.charAt(i));
  }
  for (int start=0; start < myArray.length() - 1; start++) {
    for (int end=start; end < myArray.length(); end++) {
      if (!expected.substring(start,end).equals(myArray.substring(start,end).toString())) {
        fail(String.format("Detected incorrect 'substring()' processing for deferred changes. Text: '%s', expected to get substring '%s' for " + "interval [%d; %d) but got '%s'",expected,expected.substring(start,end),start,end,myArray.substring(start,end)));
      }
      assertEquals(expected.substring(start,end),myArray.substring(start,end).toString());
    }
  }
}
