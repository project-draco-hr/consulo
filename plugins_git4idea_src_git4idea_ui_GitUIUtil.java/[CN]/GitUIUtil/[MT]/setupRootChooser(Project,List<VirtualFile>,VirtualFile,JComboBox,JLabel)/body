{
  for (  VirtualFile root : roots) {
    gitRootChooser.addItem(root);
  }
  gitRootChooser.setRenderer(getVirtualFileListCellRenderer());
  gitRootChooser.setSelectedItem(defaultRoot);
  final ActionListener listener=new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      try {
        VirtualFile root=(VirtualFile)gitRootChooser.getSelectedItem();
        GitBranch current=GitBranch.current(project,root);
        if (current == null) {
          currentBranchLabel.setText(GitBundle.getString("common.no.active.branch"));
        }
 else {
          currentBranchLabel.setText(current.getName());
        }
      }
 catch (      VcsException ex) {
        GitVcs.getInstance(project).showErrors(Collections.singletonList(ex),GitBundle.getString("merge.retriving.branches"));
      }
    }
  }
;
  listener.actionPerformed(null);
  gitRootChooser.addActionListener(listener);
}
