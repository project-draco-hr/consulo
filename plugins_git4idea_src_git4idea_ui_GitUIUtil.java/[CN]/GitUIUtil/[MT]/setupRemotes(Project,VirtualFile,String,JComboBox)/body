{
  try {
    List<GitRemote> remotes=GitRemote.list(project,root);
    String remote=null;
    if (currentBranch != null) {
      remote=GitConfigUtil.getValue(project,root,"branch." + currentBranch + ".remote");
    }
    remoteCombobox.setRenderer(getGitRemoteListCellRenderer(remote));
    GitRemote toSelect=null;
    remoteCombobox.removeAllItems();
    for (    GitRemote r : remotes) {
      remoteCombobox.addItem(r);
      if (r.name().equals(remote)) {
        toSelect=r;
      }
    }
    if (toSelect != null) {
      remoteCombobox.setSelectedItem(toSelect);
    }
  }
 catch (  VcsException e) {
    GitVcs.getInstance(project).showErrors(Collections.singletonList(e),GitBundle.getString("pull.retriving.remotes"));
  }
}
