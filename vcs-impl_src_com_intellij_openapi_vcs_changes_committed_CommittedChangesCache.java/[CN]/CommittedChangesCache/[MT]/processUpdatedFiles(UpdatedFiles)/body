{
  debug("Processing updated files");
  final Collection<ChangesCacheFile> caches=getAllCaches();
  for (  final ChangesCacheFile cache : caches) {
    myPendingUpdateCount++;
    final Task.Backgroundable task=new Task.Backgroundable(myProject,"Processing updated files"){
      public void run(      @NotNull final ProgressIndicator indicator){
        try {
          if (cache.isEmpty()) {
            pendingUpdateProcessed();
            return;
          }
          debug("Processing updated files in " + cache.getLocation());
          boolean needRefresh=cache.processUpdatedFiles(updatedFiles,myNewIncomingChanges);
          if (needRefresh) {
            debug("Found unaccounted files, requesting refresh");
            processUpdatedFilesAfterRefresh(cache,updatedFiles);
          }
 else {
            debug("Clearing cached incoming changelists");
            myCachedIncomingChangeLists=null;
            pendingUpdateProcessed();
          }
        }
 catch (        IOException e) {
          LOG.error(e);
        }
      }
    }
;
    myTaskQueue.run(task);
  }
}
