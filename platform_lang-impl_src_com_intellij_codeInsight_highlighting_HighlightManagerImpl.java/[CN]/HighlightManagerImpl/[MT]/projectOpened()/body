{
  AnActionListener anActionListener=new MyAnActionListener();
  ActionManagerEx.getInstanceEx().addAnActionListener(anActionListener,myProject);
  DocumentListener documentListener=new DocumentAdapter(){
    @Override public void documentChanged(    DocumentEvent event){
      Document document=event.getDocument();
      Editor[] editors=EditorFactory.getInstance().getEditors(document);
      for (      Editor editor : editors) {
        Map<RangeHighlighter,HighlightInfo> map=getHighlightInfoMap(editor,false);
        if (map == null)         return;
        ArrayList<RangeHighlighter> highlightersToRemove=new ArrayList<RangeHighlighter>();
        for (        RangeHighlighter highlighter : map.keySet()) {
          HighlightInfo info=map.get(highlighter);
          if (!info.editor.getDocument().equals(document))           continue;
          if ((info.flags & HIDE_BY_TEXT_CHANGE) != 0) {
            highlightersToRemove.add(highlighter);
          }
        }
        for (        RangeHighlighter highlighter : highlightersToRemove) {
          removeSegmentHighlighter(editor,highlighter);
        }
      }
    }
  }
;
  EditorFactory.getInstance().getEventMulticaster().addDocumentListener(documentListener,myProject);
}
