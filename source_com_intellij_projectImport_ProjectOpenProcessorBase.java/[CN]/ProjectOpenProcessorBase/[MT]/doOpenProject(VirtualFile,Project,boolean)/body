{
  final WizardContext wizardContext=new WizardContext(null);
  if (!doQuickImport(virtualFile,wizardContext))   return null;
  if (wizardContext.getProjectName() == null) {
    wizardContext.setProjectName(IdeBundle.message("project.import.default.name",getName()) + ProjectFileType.DOT_DEFAULT_EXTENSION);
  }
  wizardContext.setProjectFileDirectory(virtualFile.getParent().getPath());
  for (  Sdk projectJdk : ProjectJdkTable.getInstance().getAllJdks()) {
    if (projectJdk.getSdkType() instanceof JavaSdk) {
      final String jdkVersion=projectJdk.getVersionString();
      if (wizardContext.getProjectJdk() == null) {
        wizardContext.setProjectJdk(projectJdk);
      }
 else {
        final String version=wizardContext.getProjectJdk().getVersionString();
        if (jdkVersion == null || (version != null && version.compareTo(jdkVersion) < 0)) {
          wizardContext.setProjectJdk(projectJdk);
        }
      }
    }
  }
  final String projectPath=wizardContext.getProjectFileDirectory() + File.separator + wizardContext.getProjectName()+ ProjectFileType.DOT_DEFAULT_EXTENSION;
  boolean shouldOpenExisting=false;
  File projectFile=new File(projectPath);
  if (!ApplicationManager.getApplication().isHeadlessEnvironment() && projectFile.exists()) {
    int result=Messages.showDialog(projectToClose,IdeBundle.message("project.import.open.existing",projectFile.getName(),projectFile.getParent(),virtualFile.getName()),IdeBundle.message("title.open.project"),new String[]{IdeBundle.message("project.import.open.existing.reimport"),IdeBundle.message("project.import.open.existing.openExisting"),CommonBundle.message("button.cancel")},0,Messages.getQuestionIcon());
    if (result == 2)     return null;
    shouldOpenExisting=result == 1;
  }
  final Project projectToOpen;
  if (shouldOpenExisting) {
    try {
      projectToOpen=ProjectManagerEx.getInstanceEx().loadProject(projectPath);
    }
 catch (    IOException e) {
      return null;
    }
catch (    JDOMException e) {
      return null;
    }
catch (    InvalidDataException e) {
      return null;
    }
  }
 else {
    projectToOpen=ProjectManagerEx.getInstanceEx().newProject(FileUtil.getNameWithoutExtension(projectFile),projectPath,true,false);
    if (projectToOpen == null || !getBuilder().validate(projectToClose,projectToOpen)) {
      return null;
    }
    projectToOpen.save();
    final ProjectRootManagerEx rootManager=ProjectRootManagerEx.getInstanceEx(projectToOpen);
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        if (wizardContext.getProjectJdk() != null) {
          final String versionString=wizardContext.getProjectJdk().getVersionString();
          if (versionString != null) {
            rootManager.setProjectJdk(wizardContext.getProjectJdk());
            LanguageLevelProjectExtension.getInstance(projectToOpen).setLanguageLevel(NewProjectUtil.getDefaultLanguageLevel(versionString));
          }
        }
        final String projectFilePath=wizardContext.getProjectFileDirectory();
        CompilerProjectExtension.getInstance(projectToOpen).setCompilerOutputUrl(getUrl(StringUtil.endsWithChar(projectFilePath,'/') ? projectFilePath + "classes" : projectFilePath + "/classes"));
      }
    }
);
    getBuilder().commit(projectToOpen,null,ModulesProvider.EMPTY_MODULES_PROVIDER);
  }
  if (!forceOpenInNewFrame) {
    NewProjectUtil.closePreviousProject(projectToClose);
  }
  ProjectUtil.updateLastProjectLocation(projectPath);
  ProjectManagerEx.getInstanceEx().openProject(projectToOpen);
  return projectToOpen;
}
