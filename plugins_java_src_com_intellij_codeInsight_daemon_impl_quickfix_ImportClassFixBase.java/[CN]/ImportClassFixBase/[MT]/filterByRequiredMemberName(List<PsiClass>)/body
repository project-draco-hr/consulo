{
  final String memberName=getRequiredMemberName(myElement);
  if (memberName != null) {
    List<PsiClass> filtered=ContainerUtil.findAll(classList,new Condition<PsiClass>(){
      @Override public boolean value(      PsiClass psiClass){
        PsiField field=psiClass.findFieldByName(memberName,true);
        if (field != null && field.hasModifierProperty(PsiModifier.STATIC) && isAccessible(field,myElement))         return true;
        PsiClass inner=psiClass.findInnerClassByName(memberName,true);
        if (inner != null && isAccessible(inner,myElement))         return true;
        for (        PsiMethod method : psiClass.findMethodsByName(memberName,true)) {
          if (method.hasModifierProperty(PsiModifier.STATIC) && isAccessible(method,myElement))           return true;
        }
        return false;
      }
    }
);
    if (!filtered.isEmpty()) {
      classList=filtered;
    }
  }
  return classList;
}
