{
  if (item.getAttribute(LookupItem.WEIGHT) != null)   return item.getAttribute(LookupItem.WEIGHT);
  final int[] result=new int[10];
  String item1StringCap=capitalsOnly(item.getLookupString());
  result[0]=item1StringCap.startsWith(myPrefixCapitals) ? 1 : 0;
  final Object object=item.getObject();
  if (object instanceof PsiClass && myExpectedInfos != null) {
    final PsiClass psiClass=(PsiClass)object;
    for (    final ExpectedTypeInfo info : myExpectedInfos) {
      if (info.getType().getDeepComponentType().equals(psiClass.getManager().getElementFactory().createType(psiClass))) {
        result[0]=Integer.MAX_VALUE;
        break;
      }
    }
  }
  result[1]=item1StringCap.startsWith(capitalsOnly(myPrefix) + myPrefixCapitals) ? 1 : 0;
  result[2]=item.getLookupString().startsWith(myPrefix) ? 1 : 0;
  result[3]=item.getLookupString().toLowerCase().startsWith(myPrefixLowered) ? 1 : 0;
  result[4]=getExpectedTypeMatchingDegree(object,item);
  final String name=getName(object);
  if (name != null && myExpectedInfos != null) {
    final List<String> words=NameUtil.nameToWordsLowerCase(name);
    final List<String> wordsNoDigits=NameUtil.nameToWordsLowerCase(truncDigits(name));
    int max1=calcMatch(words,0);
    max1=calcMatch(wordsNoDigits,max1);
    result[5]=max1;
    int max=0;
    for (    ExpectedTypeInfo myExpectedInfo : myExpectedInfos) {
      String expectedName=((ExpectedTypeInfoImpl)myExpectedInfo).expectedName;
      if (expectedName != null) {
        final THashSet<String> set=new THashSet<String>(NameUtil.nameToWordsLowerCase(truncDigits(expectedName)));
        set.retainAll(wordsNoDigits);
        max=Math.max(max,set.size());
      }
    }
    result[6]=max;
  }
  if (object instanceof String)   result[5]=1;
 else   if (object instanceof PsiKeyword)   result[5]=-1;
  if (object instanceof PsiLocalVariable || object instanceof PsiParameter) {
synchronized (myItemToIndexMap) {
      result[7]=myItemToIndexMap.get(item) - 1;
    }
  }
 else   if (object instanceof PsiMember) {
    if (object instanceof PsiNamedElement) {
      result[7]=myPrefix.equals(((PsiNamedElement)object).getName()) ? 1 : 0;
    }
    final PsiType qualifierType1=CompletionUtil.getQualifierType(item);
    if (qualifierType1 != null) {
      result[8]=StatisticsManager.getInstance().getMemberUseCount(qualifierType1,(PsiMember)object);
    }
  }
  if (object instanceof PsiElement) {
    final int proximity=myProximityComparator.getProximity((PsiElement)object);
    result[9]=proximity < 0 ? -1 : 239 - proximity;
  }
  item.setAttribute(LookupItem.WEIGHT,result);
  return result;
}
