{
  String name;
  if (o instanceof PsiVariable) {
    name=((PsiVariable)o).getName();
    VariableKind variableKind=myCodeStyleManager.getVariableKind((PsiVariable)o);
    name=myCodeStyleManager.variableNameToPropertyName(name,variableKind);
  }
 else   if (o instanceof PsiMethod) {
    name=((PsiMethod)o).getName();
  }
 else   if (o instanceof PsiClass && myExpectedInfos.length == 1) {
    final PsiClass psiClass=(PsiClass)o;
    if ("true".equals(System.getProperty("sort.lookup.items.by.proximity"))) {
      final THashSet<PsiClass> classes=LookupManagerImpl.getFirstClasses(myExpectedInfos);
      if (classes.contains(psiClass)) {
        if (!psiClass.hasModifierProperty(PsiModifier.ABSTRACT) || !LookupManagerImpl.hasFewAbstractMethods(psiClass))         return -1;
      }
    }
    final PsiType type=myExpectedInfos[0].getType();
    final PsiType objectType=psiClass.getManager().getElementFactory().createType(psiClass);
    PsiType componentType=type.getDeepComponentType();
    if (type instanceof PsiArrayType && componentType.equals(objectType)) {
      return Integer.MAX_VALUE;
    }
    int count=StatisticsManager.getInstance().getMemberUseCount(type,psiClass);
    if (count == 0) {
      if (componentType.equals(objectType)) {
        return 1;
      }
 else       return 0;
    }
    return count + 1;
  }
 else   return 0;
  int max=calcMatch(NameUtil.nameToWords(name),0);
  max=calcMatch(NameUtil.nameToWords(truncDigits(name)),max);
  return max;
}
