{
  if (myExpectedInfos == null)   return 0;
  int delta=0;
  for (  final ExpectedTypeInfo expectedInfo : myExpectedInfos) {
    final PsiType defaultType=expectedInfo.getDefaultType();
    if (defaultType != expectedInfo.getType()) {
      final PsiType itemType;
      if (o instanceof PsiVariable) {
        itemType=((PsiVariable)o).getType();
      }
 else       if (o instanceof PsiMethod) {
        itemType=((PsiMethod)o).getReturnType();
      }
 else       if (o instanceof PsiClass) {
        final PsiClass psiClass=(PsiClass)o;
        itemType=psiClass.getManager().getElementFactory().createType(psiClass);
      }
 else       if (o instanceof PsiExpression) {
        itemType=((PsiExpression)o).getType();
      }
 else       return 0;
      if (itemType != null && defaultType.isAssignableFrom(itemType)) {
        delta=1;
      }
    }
  }
  if (o instanceof PsiMethod) {
    final PsiMethod method=(PsiMethod)o;
    PsiSubstitutor substitutor=(PsiSubstitutor)item.getAttribute(LookupItem.SUBSTITUTOR);
    if (substitutor != null) {
      final PsiType type=substitutor.substitute(method.getReturnType());
      if (type instanceof PsiClassType && ((PsiClassType)type).resolve() instanceof PsiTypeParameter) {
        return -1;
      }
    }
  }
 else   if (o instanceof PsiClass && myExpectedInfos.length == 1) {
    final PsiClass psiClass=(PsiClass)o;
    final PsiType type=myExpectedInfos[0].getType();
    final PsiType objectType=psiClass.getManager().getElementFactory().createType(psiClass);
    PsiType componentType=type.getDeepComponentType();
    if (type instanceof PsiArrayType && componentType.equals(objectType)) {
      return Integer.MAX_VALUE;
    }
    int count=StatisticsManager.getInstance().getMemberUseCount(type,psiClass);
    if (count == 0) {
      return componentType.equals(objectType) ? delta + 1 : delta;
    }
    return delta + count + 1;
  }
  return delta;
}
