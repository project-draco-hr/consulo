{
  super.visitLiteralExpression(expression);
  final PsiType type=expression.getType();
  if (type == null || !TypeUtils.isJavaLangString(type) && !type.equals(PsiType.CHAR)) {
    return;
  }
  final String text=expression.getText();
  final Matcher matcher=newlines.matcher(text);
  int end=0;
  while (matcher.find(end)) {
    final int start=matcher.start();
    end=matcher.end();
    registerErrorAtOffset(expression,start,end - start);
  }
}
