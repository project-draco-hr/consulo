{
  final PsiClass psiClass=JavaDirectoryService.getInstance().getClasses(getPackageDirectory("com/package1"))[0];
  final VirtualFile virtualFile=psiClass.getContainingFile().getVirtualFile();
  final FileEditorManager fileEditorManager=FileEditorManager.getInstance(myProject);
  FileEditor[] fileEditors=fileEditorManager.openFile(virtualFile,false);
  final FileEditor fileEditor=fileEditors[0];
  final StructureViewComponent structureViewComponent=(StructureViewComponent)fileEditor.getStructureViewBuilder().createStructureView(fileEditor,myProject);
  try {
    structureViewComponent.setActionActive(InheritedMembersFilter.ID,true);
    IdeaTestUtil.assertTreeEqual(structureViewComponent.getTree(),"-Class2.java\n" + " -Class2\n" + "  +InnerClass1\n"+ "  +InnerClass2\n"+ "  getValue():int\n"+ "  myField1:boolean\n"+ "  myField2:boolean\n"+ "  myField3:boolean\n"+ "  myField4:boolean\n");
    final PsiField innerClassField=psiClass.getInnerClasses()[0].getFields()[0];
    structureViewComponent.select(innerClassField,true);
    IdeaTestUtil.assertTreeEqual(structureViewComponent.getTree(),"-Class2.java\n" + " -Class2\n" + "  -InnerClass1\n"+ "   +InnerClass12\n"+ "   myInnerClassField:int\n"+ "  +InnerClass2\n"+ "  getValue():int\n"+ "  myField1:boolean\n"+ "  myField2:boolean\n"+ "  myField3:boolean\n"+ "  myField4:boolean\n");
    CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
      @Override public void run(){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          @Override public void run(){
            try {
              innerClassField.delete();
            }
 catch (            IncorrectOperationException e) {
              assertTrue(e.getLocalizedMessage(),false);
            }
          }
        }
);
      }
    }
,null,null);
    IdeaTestUtil.waitForAlarm(600);
    IdeaTestUtil.assertTreeEqual(structureViewComponent.getTree(),"-Class2.java\n" + " -Class2\n" + "  -InnerClass1\n"+ "   +InnerClass12\n"+ "  +InnerClass2\n"+ "  getValue():int\n"+ "  myField1:boolean\n"+ "  myField2:boolean\n"+ "  myField3:boolean\n"+ "  myField4:boolean\n");
  }
  finally {
    Disposer.dispose(structureViewComponent);
    fileEditorManager.closeFile(virtualFile);
  }
}
