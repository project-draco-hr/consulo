{
  final PsiClass psiClass=JavaDirectoryService.getInstance().getClasses(getPackageDirectory("com/package1"))[0];
  final VirtualFile virtualFile=psiClass.getContainingFile().getVirtualFile();
  final FileEditorManager fileEditorManager=FileEditorManager.getInstance(myProject);
  FileEditor[] fileEditors=fileEditorManager.openFile(virtualFile,false);
  final FileEditor fileEditor=fileEditors[0];
  try {
    final StructureViewComponent structureViewComponent=(StructureViewComponent)fileEditor.getStructureViewBuilder().createStructureView(fileEditor,myProject);
    final Document document=PsiDocumentManager.getInstance(myProject).getDocument(psiClass.getContainingFile());
    IdeaTestUtil.assertTreeEqual(structureViewComponent.getTree(),"-Class1.java\n" + " -Class1\n" + "  getValue():int\n"+ "  getClass():Class<? extends Object>\n"+ "  hashCode():int\n"+ "  equals(Object):boolean\n"+ "  clone():Object\n"+ "  toString():String\n"+ "  notify():void\n"+ "  notifyAll():void\n"+ "  wait(long):void\n"+ "  wait(long, int):void\n"+ "  wait():void\n"+ "  finalize():void\n"+ "  myField1:boolean\n"+ "  myField2:boolean\n");
    CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
      @Override public void run(){
        final int offset=document.getLineStartOffset(5);
        document.insertString(offset,"    boolean myNewField = false;\n");
      }
    }
,null,null);
    PsiDocumentManager.getInstance(myProject).commitDocument(document);
    IdeaTestUtil.waitForAlarm(600);
    IdeaTestUtil.assertTreeEqual(structureViewComponent.getTree(),"-Class1.java\n" + " -Class1\n" + "  getValue():int\n"+ "  getClass():Class<? extends Object>\n"+ "  hashCode():int\n"+ "  equals(Object):boolean\n"+ "  clone():Object\n"+ "  toString():String\n"+ "  notify():void\n"+ "  notifyAll():void\n"+ "  wait(long):void\n"+ "  wait(long, int):void\n"+ "  wait():void\n"+ "  finalize():void\n"+ "  myField1:boolean\n"+ "  myField2:boolean\n"+ "  myNewField:boolean = false\n");
    Disposer.dispose(structureViewComponent);
  }
  finally {
    fileEditorManager.closeFile(virtualFile);
  }
}
