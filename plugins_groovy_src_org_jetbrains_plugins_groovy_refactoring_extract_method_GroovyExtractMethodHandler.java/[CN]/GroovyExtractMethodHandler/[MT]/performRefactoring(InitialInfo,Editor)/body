{
  final PsiClass owner=PsiUtil.getContextClass(initialInfo.getStatements()[0]);
  LOG.assertTrue(owner != null);
  final ExtractMethodInfoHelper helper=getSettings(initialInfo,owner);
  if (helper == null)   return;
  CommandProcessor.getInstance().executeCommand(helper.getProject(),new Runnable(){
    public void run(){
      final AccessToken lock=ApplicationManager.getApplication().acquireWriteActionLock(GroovyExtractMethodHandler.class);
      try {
        createMethod(helper,owner);
        GrStatementOwner declarationOwner=GroovyRefactoringUtil.getDeclarationOwner(helper.getStatements()[0]);
        GrStatement realStatement=ExtractUtil.replaceStatement(declarationOwner,helper);
        if (editor != null) {
          PsiDocumentManager.getInstance(helper.getProject()).commitDocument(editor.getDocument());
          editor.getSelectionModel().removeSelection();
          editor.getCaretModel().moveToOffset(ExtractUtil.getCaretOffset(realStatement));
        }
      }
  finally {
        lock.finish();
      }
    }
  }
,REFACTORING_NAME,null);
}
