{
  super.visitArrayInitializerExpression(arrayInitializer);
  if (IGNORE_UNCHECKED_ASSIGNMENT)   return;
  if (!PsiUtil.isLanguageLevel5OrHigher(arrayInitializer))   return;
  final PsiType type=arrayInitializer.getType();
  if (!(type instanceof PsiArrayType))   return;
  final PsiType componentType=((PsiArrayType)type).getComponentType();
  boolean arrayTypeFixChecked=false;
  VariableArrayTypeFix fix=null;
  final PsiExpression[] initializers=arrayInitializer.getInitializers();
  for (  PsiExpression expression : initializers) {
    final PsiType itemType=expression.getType();
    if (itemType == null)     continue;
    if (!TypeConversionUtil.isAssignable(componentType,itemType))     continue;
    if (GenericsHighlightUtil.isRawToGeneric(componentType,itemType)) {
      String description=JavaErrorMessages.message("generics.unchecked.assignment",HighlightUtil.formatType(itemType),HighlightUtil.formatType(componentType));
      if (!arrayTypeFixChecked) {
        final PsiType checkResult=HighlightUtil.sameType(initializers);
        fix=checkResult != null ? new VariableArrayTypeFix(arrayInitializer,checkResult) : null;
        arrayTypeFixChecked=true;
      }
      if (fix != null) {
        registerProblem(description,expression,new LocalQuickFix[]{fix});
      }
    }
  }
}
