{
  super.visitCallExpression(callExpression);
  if (!PsiUtil.isLanguageLevel5OrHigher(callExpression))   return;
  final JavaResolveResult result=callExpression.resolveMethodGenerics();
  final String description=getUncheckedCallDescription(result);
  if (description != null) {
    if (IGNORE_UNCHECKED_CALL)     return;
    final PsiExpression element=callExpression instanceof PsiMethodCallExpression ? ((PsiMethodCallExpression)callExpression).getMethodExpression() : callExpression;
    registerProblem(description,element,myGenerifyFixes);
  }
 else {
    if (IGNORE_UNCHECKED_ASSIGNMENT)     return;
    final PsiSubstitutor substitutor=result.getSubstitutor();
    final PsiExpressionList argumentList=callExpression.getArgumentList();
    if (argumentList != null) {
      final PsiMethod method=(PsiMethod)result.getElement();
      if (method != null) {
        final PsiExpression[] expressions=argumentList.getExpressions();
        final PsiParameter[] parameters=method.getParameterList().getParameters();
        if (parameters.length != 0) {
          for (int i=0; i < expressions.length; i++) {
            PsiParameter parameter=parameters[Math.min(i,parameters.length - 1)];
            final PsiExpression expression=expressions[i];
            final PsiType parameterType=substitutor.substitute(parameter.getType());
            final PsiType expressionType=substitutor.substitute(expression.getType());
            if (expressionType != null) {
              checkRawToGenericsAssignment(expression,parameterType,expressionType,true,myGenerifyFixes);
            }
          }
        }
      }
    }
  }
}
