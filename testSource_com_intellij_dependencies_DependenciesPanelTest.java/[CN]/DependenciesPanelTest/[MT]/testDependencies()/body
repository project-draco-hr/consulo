{
  final PsiClass[] classes=getPackageDirectory("com/package1").getPackage().getClasses();
  final PsiFile file=classes[0].getContainingFile();
  final AnalysisScope scope=new AnalysisScope(file,new AnalysisScope.PsiFileFilter(){
    public boolean accept(    PsiFile another){
      return true;
    }
  }
);
  final DependenciesBuilder builder=new ForwardDependenciesBuilder(myProject,scope);
  builder.analyze();
  final DependenciesPanel dependenciesPanel=new DependenciesPanel(myProject,builder);
  JTree leftTree=dependenciesPanel.getLeftTree();
  IdeaTestUtil.assertTreeEqual(leftTree,"-Root\n" + " Library Classes\n" + " -Production Classes (1 entry)\n"+ "  -" + myModule.getName() + " (1 entry)\n"+ "   -com.package1 (1 entry)\n"+ "    [Class1.java]\n"+ " Test Classes\n",true);
  JTree rightTree=dependenciesPanel.getRightTree();
  IdeaTestUtil.assertTreeEqual(rightTree,"-Root\n" + " Library Classes\n" + " -Production Classes (1 entry)\n"+ "  -" + myModule.getName() + " (1 entry)\n"+ "   -com.package1 (1 entry)\n"+ "    Class2.java\n"+ " Test Classes\n",true);
}
