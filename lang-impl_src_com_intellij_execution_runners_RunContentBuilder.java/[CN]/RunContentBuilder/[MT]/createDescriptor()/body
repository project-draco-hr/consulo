{
  if (myExecutionResult == null) {
    throw new IllegalStateException("Missing ExecutionResult");
  }
  if (myEnvironment == null) {
    throw new IllegalStateException("Missing ExecutionEnvironment");
  }
  final RunProfile profile=myEnvironment.getRunProfile();
  final ExecutionConsole console=myExecutionResult.getExecutionConsole();
  final String runnerType=console instanceof ExecutionConsoleEx ? JAVA_RUNNER + "." + ((ExecutionConsoleEx)console).getExecutionConsoleId() : JAVA_RUNNER;
  myUi=RunnerLayoutUi.Factory.getInstance(myProject).create(runnerType,myExecutor.getId(),profile.getName(),this);
  myUi.getOptions().setMoveToGridActionEnabled(false).setMinimizeActionEnabled(false);
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    return new MyRunContentDescriptor(profile,myExecutionResult,myReuseProhibited,myUi.getComponent(),this);
  }
  if (console != null) {
    if (console instanceof ExecutionConsoleEx) {
      ((ExecutionConsoleEx)console).buildUi(myUi);
    }
 else {
      buildConsoleUiDefault(console);
    }
    if (profile instanceof RunConfigurationBase) {
      myManager.initLogConsoles((RunConfigurationBase)profile,myExecutionResult.getProcessHandler());
    }
  }
  MyRunContentDescriptor contentDescriptor=new MyRunContentDescriptor(profile,myExecutionResult,myReuseProhibited,myUi.getComponent(),this);
  myUi.getOptions().setLeftToolbar(createActionToolbar(contentDescriptor,myUi.getComponent()),ActionPlaces.UNKNOWN);
  return contentDescriptor;
}
