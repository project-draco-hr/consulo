{
  IntentionAction action=quickFix.findActionWithText(text);
  if (action == null) {
    if (actionShouldBeAvailable) {
      List<IntentionAction> actions=quickFix.getAvailableActions();
      List<String> texts=new ArrayList<String>();
      for (      IntentionAction intentionAction : actions) {
        texts.add(intentionAction.getText());
      }
      Collection<HighlightInfo> infos=quickFix.doHighlighting();
      fail("Action with text '" + text + "' is not available in test "+ testFullPath+ "\nAvailable actions ("+ texts.size()+ "): "+ texts+ "\n"+ actions+ "\nInfos:"+ infos);
    }
  }
 else {
    if (!actionShouldBeAvailable) {
      fail("Action '" + text + "' is available (but must not) in test "+ testFullPath);
    }
    quickFix.invoke(action);
    UIUtil.dispatchAllInvocationEvents();
    UIUtil.dispatchAllInvocationEvents();
    if (!quickFix.shouldBeAvailableAfterExecution()) {
      final IntentionAction afterAction=quickFix.findActionWithText(text);
      if (afterAction != null) {
        fail("Action '" + text + "' is still available after its invocation in test "+ testFullPath);
      }
    }
    final String expectedFilePath=quickFix.getBasePath() + "/after" + testName;
    quickFix.checkResultByFile("In file :" + expectedFilePath,expectedFilePath,false);
  }
}
