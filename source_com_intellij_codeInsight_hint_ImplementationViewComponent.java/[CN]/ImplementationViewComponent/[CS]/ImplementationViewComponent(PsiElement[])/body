{
  super(new BorderLayout());
  myElements=new PsiElement[elements.length];
  myIndex=0;
  FileDescriptor[] files=new FileDescriptor[myElements.length];
  for (int i=0; i < elements.length; i++) {
    myElements[i]=elements[i].getNavigationElement();
    files[i]=new FileDescriptor(myElements[i].getContainingFile().getVirtualFile());
  }
  final Project project=myElements[0].getProject();
  EditorFactory factory=EditorFactory.getInstance();
  Document doc=factory.createDocument("");
  doc.setReadOnly(true);
  myEditor=factory.createEditor(doc,project);
  EditorHighlighter highlighter=HighlighterFactory.createHighlighter(project,myElements[0].getContainingFile().getName());
  ((EditorEx)myEditor).setHighlighter(highlighter);
  ((EditorEx)myEditor).setBackgroundColor(EditorFragmentComponent.getBackgroundColor(myEditor));
  myEditor.getSettings().setAdditionalLinesCount(1);
  myEditor.getSettings().setAdditionalColumnsCount(1);
  myEditor.getSettings().setLineMarkerAreaShown(false);
  myEditor.getSettings().setLineNumbersShown(false);
  myEditor.getSettings().setFoldingOutlineShown(false);
  this.add(myEditor.getComponent(),BorderLayout.CENTER);
  myToolbar=createToolbar();
  myLocationLabel=new JLabel();
  myCountLabel=new JLabel();
  JPanel header=new JPanel(new BorderLayout());
  header.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  JPanel toolbar=new JPanel(new FlowLayout());
  toolbar.add(myToolbar.getComponent());
  myFileChooser=new JComboBox(files);
  myFileChooser.setRenderer(new DefaultListCellRenderer(){
    public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      VirtualFile file=((FileDescriptor)value).myFile;
      setIcon(file.getIcon());
      setForeground(FileStatusManager.getInstance(project).getStatus(file).getColor());
      setText(file.getPresentableName());
      return this;
    }
  }
);
  myFileChooser.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int index=myFileChooser.getSelectedIndex();
      if (myIndex != index) {
        myIndex=index;
        updateControls();
      }
    }
  }
);
  toolbar.add(myFileChooser);
  toolbar.add(myCountLabel);
  header.add(toolbar,BorderLayout.WEST);
  header.add(myLocationLabel,BorderLayout.EAST);
  this.add(header,BorderLayout.NORTH);
  this.setPreferredSize(new Dimension(600,400));
  updateControls();
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      myFileChooser.requestFocusInWindow();
    }
  }
);
}
