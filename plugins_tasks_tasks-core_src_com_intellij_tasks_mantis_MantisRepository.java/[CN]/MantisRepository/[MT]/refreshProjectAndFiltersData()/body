{
  final MantisConnectPortType soap=createSoap();
  myProject2FiltersCachedData=new HashMap<MantisProject,List<MantisFilter>>();
  ProjectData[] projectDatas=soap.mc_projects_get_user_accessible(getUsername(),getPassword());
  List<MantisProject> projects=ContainerUtil.map(projectDatas,new Function<ProjectData,MantisProject>(){
    @Override public MantisProject fun(    final ProjectData data){
      return new MantisProject(data.getId().intValue(),data.getName());
    }
  }
);
  projects.add(MantisProject.ALL_PROJECTS);
  String version=soap.mc_version();
  for (  MantisProject project : projects) {
    FilterData[] filterDatas=soap.mc_filter_get(getUsername(),getPassword(),BigInteger.valueOf(project.getId()));
    List<MantisFilter> filters=new ArrayList<MantisFilter>();
    if (!MantisProject.ALL_PROJECTS.equals(project) || !version.startsWith("1.1")) {
      filters.add(MantisFilter.LAST_TASKS);
    }
    filters.addAll(ContainerUtil.map(filterDatas,new Function<FilterData,MantisFilter>(){
      @Override public MantisFilter fun(      final FilterData data){
        return new MantisFilter(data.getId().intValue(),data.getName());
      }
    }
));
    myProject2FiltersCachedData.put(project,filters);
  }
}
