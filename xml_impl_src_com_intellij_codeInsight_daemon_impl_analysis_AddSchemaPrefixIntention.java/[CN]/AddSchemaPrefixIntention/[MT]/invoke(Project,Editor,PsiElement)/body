{
  final XmlAttribute xmlns=(XmlAttribute)element.getParent();
  final String namespace=xmlns.getValue();
  final XmlTag tag=xmlns.getParent();
  if (tag != null) {
    final Set<String> ns=tag.getLocalNamespaceDeclarations().keySet();
    final String nsPrefix=Messages.showInputDialog(project,"Namespace Prefix:",NAME,Messages.getInformationIcon(),"",new InputValidator(){
      @Override public boolean checkInput(      String inputString){
        return !ns.contains(inputString);
      }
      @Override public boolean canClose(      String inputString){
        return checkInput(inputString);
      }
    }
);
    if (nsPrefix == null)     return;
    final List<XmlTag> tags=new ArrayList<XmlTag>();
    final List<XmlAttributeValue> values=new ArrayList<XmlAttributeValue>();
    new WriteCommandAction(project,NAME,tag.getContainingFile()){
      @Override protected void run(      Result result) throws Throwable {
        tag.accept(new XmlRecursiveElementVisitor(){
          @Override public void visitXmlTag(          XmlTag tag){
            if (namespace.equals(tag.getNamespace()) && tag.getNamespacePrefix().length() == 0) {
              tags.add(tag);
            }
            super.visitXmlTag(tag);
          }
          @Override public void visitXmlAttributeValue(          XmlAttributeValue value){
            PsiReference ref=null;
            boolean skip=false;
            for (            PsiReference reference : value.getReferences()) {
              if (reference instanceof SchemaReferencesProvider.TypeOrElementOrAttributeReference) {
                ref=reference;
              }
 else               if (reference instanceof SchemaPrefixReference) {
                skip=true;
                break;
              }
            }
            if (!skip && ref != null) {
              final PsiElement xmlElement=ref.resolve();
              if (xmlElement instanceof XmlElement) {
                final XmlTag tag=PsiTreeUtil.getParentOfType(xmlElement,XmlTag.class,false);
                if (tag != null) {
                  if (namespace.equals(tag.getNamespace())) {
                    if (ref.getRangeInElement().getLength() == value.getValue().length()) {
                      values.add(value);
                    }
                  }
                }
              }
            }
          }
        }
);
        for (        XmlAttributeValue value : values) {
          ((XmlAttribute)value.getParent()).setValue(nsPrefix + ":" + value.getValue());
        }
        for (        XmlTag xmlTag : tags) {
          xmlTag.setName(nsPrefix + ":" + xmlTag.getLocalName());
        }
        xmlns.setName("xmlns:" + nsPrefix);
      }
    }
.execute();
  }
}
