{
  CheckUtil.checkWritable(element);
  if (!SourceTreeToPsiMap.hasTreeElement(element))   return element;
  ASTNode treeElement=SourceTreeToPsiMap.psiElementToTree(element);
  if (treeElement instanceof CompositeElement) {
    ChameleonTransforming.transformChildren(treeElement,true);
  }
  PsiFileImpl file=(PsiFileImpl)element.getContainingFile();
  FileType fileType=StdFileTypes.JAVA;
  if (file != null) {
    fileType=file.getFileType();
  }
  Helper helper=new Helper(fileType,myProject);
  final PsiElement formatted=SourceTreeToPsiMap.treeElementToPsi(new CodeFormatterFacade(getSettings(),helper).process(treeElement,-1));
  return new BraceEnforcer(getSettings()).process(formatted);
}
