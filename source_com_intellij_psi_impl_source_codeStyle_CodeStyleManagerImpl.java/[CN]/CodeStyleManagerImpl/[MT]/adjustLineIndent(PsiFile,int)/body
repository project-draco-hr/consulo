{
  final PsiElement element=file.findElementAt(offset);
  if (element == null) {
    return offset;
  }
  if (!(element instanceof PsiWhiteSpace) && insideElement(element,offset)) {
    return CharArrayUtil.shiftForward(file.textToCharArray(),offset," \t");
  }
  final Language fileLanguage=file.getLanguage();
  LOG.assertTrue(fileLanguage != null,file.getClass().getName());
  final FormattingModelBuilder builder=fileLanguage.getFormattingModelBuilder();
  final Language elementLanguage=element.getLanguage();
  LOG.assertTrue(elementLanguage != null,element.getClass().getName());
  final FormattingModelBuilder elementBuilder=elementLanguage.getFormattingModelBuilder();
  if (builder != null && elementBuilder != null) {
    final CodeStyleSettings settings=getSettings();
    final CodeStyleSettings.IndentOptions indentOptions=settings.getIndentOptions(file.getFileType());
    final TextRange significantRange=getSignificantRange(file,offset);
    final FormattingModel model=builder.createModel(file,settings);
    int result=FormatterEx.getInstanceEx().adjustLineIndent(model,settings,indentOptions,offset,significantRange);
    return result;
  }
 else {
    return offset;
  }
}
