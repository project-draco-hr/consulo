{
  final ASTNode elementAtOffset=SourceTreeToPsiMap.psiElementToTree(findElementInTreeWithFormatterEnabled(file,offset));
  if (elementAtOffset == null) {
    int significantRangeStart=CharArrayUtil.shiftBackward(file.getText(),offset - 1,"\r\t ");
    return new TextRange(significantRangeStart,offset);
  }
  if (file instanceof PsiJavaFile) {
    ASTNode current=elementAtOffset;
    current=findNearestExpressionParent(current);
    if (current == null) {
      if (elementAtOffset.getElementType() == TokenType.WHITE_SPACE) {
        ASTNode prevElement=elementAtOffset.getTreePrev();
        if (prevElement == null) {
          return elementAtOffset.getTextRange();
        }
 else {
          ASTNode prevExpressionParent=findNearestExpressionParent(prevElement);
          if (prevExpressionParent == null) {
            return elementAtOffset.getTextRange();
          }
 else {
            return new TextRange(prevExpressionParent.getTextRange().getStartOffset(),elementAtOffset.getTextRange().getEndOffset());
          }
        }
      }
 else {
        return elementAtOffset.getTextRange();
      }
    }
 else {
      return current.getTextRange();
    }
  }
 else {
    return elementAtOffset.getTextRange();
  }
}
