{
  PsiElement scope;
  if (lookForward) {
    scope=place.getParent();
    while (true) {
      if (scope instanceof PsiCodeBlock) {
        break;
      }
      if (scope instanceof PsiClass) {
        break;
      }
      if (scope instanceof PsiFile) {
        break;
      }
      scope=scope.getParent();
    }
    place=scope.getLastChild();
  }
 else {
    scope=null;
  }
  int index=0;
  while (true) {
    String name=baseName;
    if (index > 0) {
      name+=index;
    }
    index++;
    if (PsiUtil.isVariableNameUnique(name,place)) {
      if (scope instanceof PsiCodeBlock) {
        final String name1=name;
class Cancel extends RuntimeException {
        }
        try {
          scope.accept(new PsiRecursiveElementVisitor(){
            public void visitVariable(            PsiVariable variable){
              if (name1.equals(variable.getName())) {
                throw new Cancel();
              }
            }
          }
);
        }
 catch (        Cancel e) {
          continue;
        }
      }
      return name;
    }
  }
}
