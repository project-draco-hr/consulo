{
  super(CvsBundle.message("dialog.title.import.settings"),wizard);
  myCheckoutAfterImport.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateCheckoutSettingsVisibility();
    }
  }
);
  mySelectImportLocationStep=selectImportLocationStep;
  myImportConfiguration=importConfiguration;
  checkFields();
  final MyDocumentListener listener=new MyDocumentListener();
  myVendor.getDocument().addDocumentListener(listener);
  myReleaseTag.getDocument().addDocumentListener(listener);
  myLogMessageLabel.setLabelFor(myLogMessage);
  myNameLabel.setLabelFor(myModuleName);
  myReleaseTagLabel.setLabelFor(myReleaseTag);
  myVendorLabel.setLabelFor(myVendor);
  myLogMessage.setWrapStyleWord(true);
  myLogMessage.setLineWrap(true);
  myKeywordExpansionButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final CustomizeKeywordSubstitutionDialog dialog=new CustomizeKeywordSubstitutionDialog(project,CvsBundle.message("dialog.title.customize.keyword.substitutions"),importConfiguration);
      dialog.show();
    }
  }
);
  init();
}
