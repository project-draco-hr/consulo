{
  int size=result.length;
  if (size == 0)   return tailChunkAddress;
  force();
  int bytesRead=0;
  long chunk=tailChunkAddress;
  int chunkCount=0;
  byte[] headerBits=new byte[8 + 4];
  RAReader reader=myCompactionModeReader;
  CacheValue<RAReader> readerHandle=null;
  if (reader == null) {
    readerHandle=ourReadersCache.get(myPath);
    reader=readerHandle.get();
  }
  try {
    while (chunk != 0) {
      reader.get(chunk,headerBits,0,12);
      final long prevChunkAddress=Bits.getLong(headerBits,0);
      final int chunkSize=Bits.getInt(headerBits,8);
      final int off=size - bytesRead - chunkSize;
      checkPreconditions(result,chunkSize,off);
      reader.get(chunk + 12,result,off,chunkSize);
      chunk=prevChunkAddress;
      bytesRead+=chunkSize;
      chunkCount++;
    }
  }
  finally {
    if (readerHandle != null) {
      readerHandle.release();
    }
  }
  if (bytesRead != size) {
    throw new IOException("Read from storage " + bytesRead + " bytes, but requested "+ size+ " bytes");
  }
  if (chunkCount > 1 && !myCompactionMode) {
    return appendBytes(new ByteSequence(result),0);
  }
  return tailChunkAddress;
}
