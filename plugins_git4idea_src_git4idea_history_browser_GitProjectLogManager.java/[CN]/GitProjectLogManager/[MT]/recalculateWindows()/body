{
  final GitVcs vcs=GitVcs.getInstance(myProject);
  final VirtualFile[] roots=myVcsManager.getRootsUnderVcs(vcs);
  final List<VirtualFile> fileList=Arrays.asList(roots);
  final ChangesViewContentI cvcm=ChangesViewContentManager.getInstance(myProject);
  final Content currContent=myCurrentContent.get();
  if (currContent != null) {
    myLogRef.get().rootsChanged(fileList);
    return;
  }
  final GitLog gitLog=myLogFactoryService.createComponent(true);
  final ContentFactory contentFactory=ContentFactory.SERVICE.getInstance();
  final Content content=contentFactory.createContent(gitLog.getVisualComponent(),CONTENT_KEY,false);
  content.setCloseable(false);
  cvcm.addContent(content);
  Disposer.register(content,gitLog);
  myLogRef.set(gitLog);
  myCurrentContent.set(content);
  gitLog.rootsChanged(fileList);
}
