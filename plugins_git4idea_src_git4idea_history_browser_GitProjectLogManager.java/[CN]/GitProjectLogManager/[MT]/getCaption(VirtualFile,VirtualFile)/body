{
  String result=root.getPresentableUrl();
  if (baseDir != null) {
    if (baseDir.equals(root)) {
      result="<Project root>";
    }
 else {
      if (VfsUtil.isAncestor(baseDir,root,true)) {
        final String variant=VfsUtil.getRelativePath(root,baseDir,'/');
        if (variant != null) {
          result=variant;
        }
      }
    }
  }
  GitBranchesSearcher searcher=null;
  try {
    searcher=new GitBranchesSearcher(myProject,root,false);
  }
 catch (  VcsException e) {
    LOG.info(e);
  }
  if (searcher != null) {
    final GitBranch branch=searcher.getLocal();
    if (branch != null) {
      result+=" (" + branch.getName() + ")";
    }
  }
  return "Log: " + result;
}
