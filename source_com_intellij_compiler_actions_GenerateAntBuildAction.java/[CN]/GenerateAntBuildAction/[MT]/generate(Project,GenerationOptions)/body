{
  ApplicationManager.getApplication().saveAll();
  final List<File> filesToRefresh=new ArrayList<File>();
  try {
    final File[] generated;
    if (genOptions.generateSingleFile) {
      generated=generateSingleFileBuild(project,genOptions,filesToRefresh);
    }
 else {
      generated=generateMultipleFileBuild(project,genOptions,filesToRefresh);
    }
    if (generated != null) {
      StringBuffer filesString=new StringBuffer();
      for (int idx=0; idx < generated.length; idx++) {
        final File file=generated[idx];
        if (idx > 0) {
          filesString.append(",\n");
        }
        filesString.append(file.getPath());
      }
      Messages.showInfoMessage(project,CompilerBundle.message("message.ant.files.generated.ok",filesString.toString()),ActionsBundle.actionText(IdeActions.ACTION_GENERATE_ANT_BUILD));
    }
  }
 catch (  IOException e) {
    Messages.showErrorDialog(project,CompilerBundle.message("error.ant.files.generate.failed",e.getMessage()),ActionsBundle.actionText(IdeActions.ACTION_GENERATE_ANT_BUILD));
  }
 finally {
    if (filesToRefresh.size() > 0) {
      CompilerUtil.refreshIOFiles(filesToRefresh.toArray(new File[filesToRefresh.size()]));
    }
  }
}
