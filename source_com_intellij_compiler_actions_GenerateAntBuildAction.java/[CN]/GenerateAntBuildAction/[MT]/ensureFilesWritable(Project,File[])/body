{
  final List<VirtualFile> toCheck=new ArrayList<VirtualFile>(files.length);
  final LocalFileSystem lfs=LocalFileSystem.getInstance();
  for (int idx=0; idx < files.length; idx++) {
    final VirtualFile vFile=lfs.findFileByIoFile(files[idx]);
    if (vFile != null) {
      toCheck.add(vFile);
    }
  }
  final ReadonlyStatusHandler.OperationStatus status=ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(toCheck.toArray(new VirtualFile[toCheck.size()]));
  if (status.hasReadonlyFiles()) {
    throw new IOException(status.getReadonlyFilesMessage());
  }
}
