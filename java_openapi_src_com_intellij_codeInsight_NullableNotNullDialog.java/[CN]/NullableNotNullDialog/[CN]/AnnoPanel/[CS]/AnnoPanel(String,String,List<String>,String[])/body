{
  super(new GridBagLayout());
  myDefaultAnn=defaultAnn;
  myDefaultAnns=defaultAnns;
  setBorder(BorderFactory.createTitledBorder(title));
  myList=new JBList(anns);
  myList.setCellRenderer(new DefaultListCellRenderer(){
    @Override public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      final Component component=super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      if (Comparing.strEqual((String)value,myDefaultAnn)) {
        setIcon(Icons.ADVICE_ICON);
        setFont(UIUtil.getLabelFont().deriveFont(Font.BOLD));
      }
 else {
        setIcon(EmptyIcon.ICON_16);
      }
      setText((String)value);
      return component;
    }
  }
);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setSelectedValue(defaultAnn,true);
  final DefaultActionGroup group=new DefaultActionGroup();
  group.add(new AnAction("Add","Add",ADD_ICON){
{
      registerCustomShortcutSet(CommonShortcuts.INSERT,myList);
    }
    @Override public void actionPerformed(    AnActionEvent e){
      chooseAnnotation(title,myList,null);
    }
  }
);
  group.add(new AnAction("Delete","Delete",REMOVE_ICON){
{
      registerCustomShortcutSet(CommonShortcuts.DELETE,myList);
    }
    @Override public void update(    AnActionEvent e){
      final Object selectedValue=myList.getSelectedValue();
      e.getPresentation().setEnabled(ArrayUtil.find(myDefaultAnns,selectedValue) == -1);
    }
    @Override public void actionPerformed(    AnActionEvent e){
      ((DefaultListModel)myList.getModel()).removeElement(myList.getSelectedValue());
    }
  }
);
  group.add(new AnAction("Make default","Default",SAVE_ICON){
    @Override public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(!Comparing.strEqual(myDefaultAnn,(String)myList.getSelectedValue()));
    }
    @Override public void actionPerformed(    AnActionEvent e){
      myDefaultAnn=(String)myList.getSelectedValue();
    }
  }
);
  GridBagConstraints gc=new GridBagConstraints(0,0,1,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0);
  add(ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,group,true).getComponent(),gc);
  gc.gridy=1;
  gc.weighty=1;
  gc.fill=GridBagConstraints.BOTH;
  final JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(myList);
  scrollPane.setMinimumSize(new Dimension(-1,150));
  add(scrollPane,gc);
}
