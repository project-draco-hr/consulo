{
  if (items == null || items.length == 0) {
    return new GenerationItem[0];
  }
  context.getProgressIndicator().setText("Processing PNG files...");
  final List<GenerationItem> processedItems=new ArrayList<GenerationItem>();
  for (  GenerationItem GenerationItem : items) {
    final MyItem item=(MyItem)GenerationItem;
    final Module module=item.getModule();
    if (!AndroidCompileUtil.isModuleAffected(context,module)) {
      continue;
    }
    final String resDirOsPath=FileUtil.toSystemDependentName(item.getResourceDir().getPath());
    try {
      final String resCacheDirOsPath=AndroidCompileUtil.findResourcesCacheDirectory(module,true);
      if (resCacheDirOsPath == null) {
        context.addMessage(CompilerMessageCategory.ERROR,AndroidBundle.message("android.compilation.error.cannot.create.png.cache.directory",module.getName()),null,-1,-1);
        continue;
      }
      final Map<CompilerMessageCategory,List<String>> messages=AndroidApt.crunch(item.getTarget(),Collections.singletonList(resDirOsPath),resCacheDirOsPath);
      AndroidCompileUtil.addMessages(context,messages,null);
      if (context.getMessages(CompilerMessageCategory.ERROR).length == 0) {
        processedItems.add(item);
      }
    }
 catch (    IOException e) {
      final String message=e.getMessage();
      if (message != null) {
        LOG.info(e);
        context.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),null,-1,-1);
      }
 else {
        LOG.error(e);
      }
    }
  }
  return processedItems.toArray(new GenerationItem[processedItems.size()]);
}
