{
  String qName=rawCanonicalText(type);
  if (qName == null) {
    return true;
  }
  if (!NonCodeMembersContributor.processDynamicElements(type,processor,place,ResolveState.initial())) {
    return false;
  }
  if (type instanceof PsiClassType) {
    PsiClass psiClass=((PsiClassType)type).resolve();
    if (psiClass != null && !GroovyDslFileIndex.processExecutors(psiClass,place,processor)) {
      return false;
    }
  }
  final HashMap<String,PsiType> visited=getSuperTypes(type,project);
  for (  PsiType psiType : visited.values()) {
    for (    NonCodeMembersProcessor membersProcessor : NonCodeMembersProcessor.EP_NAME.getExtensions()) {
      if (!membersProcessor.processNonCodeMembers(psiType,processor,place,forCompletion))       return false;
    }
  }
  return true;
}
