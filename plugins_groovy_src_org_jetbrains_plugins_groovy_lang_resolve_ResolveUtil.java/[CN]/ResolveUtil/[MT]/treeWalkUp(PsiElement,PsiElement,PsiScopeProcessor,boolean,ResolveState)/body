{
  try {
    ClassHint hint=processor.getHint(ClassHint.KEY);
    if (hint != null) {
      return new DeclarationCacheKey(getNameHint(processor),hint,processNonCodeMethods,originalPlace).processCachedDeclarations(place,processor);
    }
    final PsiScopeProcessor nonCodeProcessor=processNonCodeMethods ? processor : null;
    return PsiTreeUtil.treeWalkUp(place,null,new PairProcessor<PsiElement,PsiElement>(){
      @Override public boolean process(      PsiElement scope,      PsiElement lastParent){
        if (!doProcessDeclarations(originalPlace,lastParent,scope,substituteProcessor(processor,scope),nonCodeProcessor,state)) {
          return false;
        }
        if (scope instanceof GrClosableBlock)         return false;
        issueLevelChangeEvents(processor,scope);
        return true;
      }
    }
);
  }
 catch (  StackOverflowError e) {
    LogMessageEx.error(LOG,"StackOverflow",e,place.getContainingFile().getText());
    throw e;
  }
}
