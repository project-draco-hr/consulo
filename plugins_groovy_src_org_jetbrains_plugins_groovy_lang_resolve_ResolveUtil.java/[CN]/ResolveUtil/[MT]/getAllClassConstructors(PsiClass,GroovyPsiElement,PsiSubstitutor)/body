{
  final List<GroovyResolveResult> result=CollectionFactory.arrayList();
  final PsiResolveHelper helper=JavaPsiFacade.getInstance(place.getProject()).getResolveHelper();
  for (  PsiMethod constructor : psiClass.getConstructors()) {
    result.add(new GroovyResolveResultImpl(constructor,null,substitutor,helper.isAccessible(constructor,place,null),true));
  }
  final PsiClassType qualifierType=JavaPsiFacade.getElementFactory(psiClass.getProject()).createType(psiClass);
  final MethodResolverProcessor processor=new MethodResolverProcessor(psiClass.getName(),place,true,null,null,PsiType.EMPTY_ARRAY);
  ResolveState state=ResolveState.initial().put(PsiSubstitutor.KEY,substitutor);
  NonCodeMembersContributor.runContributors(qualifierType,processor,place,state);
  Collections.addAll(result,processor.getCandidates());
  return result;
}
