{
  String qName=rawCanonicalText(type);
  if (visited.put(qName,type) != null) {
    return;
  }
  final PsiType[] superTypes=type.getSuperTypes();
  for (  PsiType superType : superTypes) {
    collectSuperTypes(TypeConversionUtil.erasure(superType),visited,project);
  }
  if (type instanceof PsiArrayType && superTypes.length == 0) {
    final PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
    collectSuperTypes(factory.createTypeFromText(CommonClassNames.JAVA_LANG_COMPARABLE,null),visited,project);
    collectSuperTypes(factory.createTypeFromText(CommonClassNames.JAVA_IO_SERIALIZABLE,null),visited,project);
  }
}
