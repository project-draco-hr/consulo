{
  String qName=rawCanonicalText(type);
  if (qName != null) {
    if (visited.contains(qName))     return true;
    visited.add(qName);
    for (    PsiMethod defaultMethod : GroovyPsiManager.getInstance(project).getDefaultMethods(qName)) {
      if (!processElement(processor,defaultMethod))       return false;
    }
    for (    PsiMethod method : DynamicManager.getInstance(project).getMethods(qName)) {
      if (!processElement(processor,method))       return false;
    }
    for (    PsiVariable var : DynamicManager.getInstance(project).getProperties(qName)) {
      if (!processElement(processor,var))       return false;
    }
    for (    PsiType superType : type.getSuperTypes()) {
      if (!processNonCodeMethods(TypeConversionUtil.erasure(superType),processor,project,visited))       return false;
    }
  }
  return true;
}
