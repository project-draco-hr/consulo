{
  if (scope instanceof GrTypeDefinition) {
    if (!processNonCodeMembers(createPsiType((GrTypeDefinition)scope),processor,place,ResolveState.initial()))     return false;
    PsiClassType categoryType=GdkMethodUtil.getCategoryType((PsiClass)scope);
    if (categoryType != null) {
      if (!processNonCodeMembers(categoryType,processor,place,ResolveState.initial()))       return false;
    }
  }
  if (scope instanceof GroovyFileBase && ((GroovyFileBase)scope).isScript()) {
    final PsiClass psiClass=((GroovyFileBase)scope).getScriptClass();
    if (psiClass != null) {
      if (!processNonCodeMembers(createPsiType(psiClass),processor,place,ResolveState.initial()))       return false;
    }
  }
  if (scope instanceof GrClosableBlock) {
    ResolveState state=ResolveState.initial().put(ResolverProcessor.RESOLVE_CONTEXT,scope);
    PsiClass superClass=getLiteralSuperClass((GrClosableBlock)scope);
    if (superClass != null && !superClass.processDeclarations(processor,state,null,place))     return false;
    if (!GdkMethodUtil.categoryIteration((GrClosableBlock)scope,processor,state))     return false;
    if (!processNonCodeMembers(GrClosureType.create(((GrClosableBlock)scope),false),processor,place,state))     return false;
  }
  if (scope instanceof GrStatementOwner) {
    if (!GdkMethodUtil.processMixinToMetaclass((GrStatementOwner)scope,processor,ResolveState.initial(),lastParent,place))     return false;
  }
  return true;
}
