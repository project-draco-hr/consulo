{
  final GrExpression qualifier=ref.getQualifierExpression();
  if (qualifier != null) {
    return qualifier;
  }
  PsiElement place=ref;
  while (true) {
    final GrClosableBlock closure=PsiTreeUtil.getParentOfType(place,GrClosableBlock.class,true,GrMember.class,GroovyFile.class);
    if (closure == null)     break;
    place=closure;
    PsiElement clParent=closure.getParent();
    if (clParent instanceof GrArgumentList)     clParent=clParent.getParent();
    if (!(clParent instanceof GrMethodCall))     continue;
    final GrExpression expression=((GrMethodCall)clParent).getInvokedExpression();
    if (expression instanceof GrReferenceExpression && GdkMethodUtil.WITH.equals(((GrReferenceExpression)expression).getReferenceName()) && ((GrReferenceExpression)expression).resolve() instanceof GrGdkMethod) {
      final GrExpression withQualifier=((GrReferenceExpression)expression).getQualifierExpression();
      if (withQualifier != null) {
        return withQualifier;
      }
    }
  }
  return null;
}
