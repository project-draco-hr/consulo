{
  return new TObjectHashingStrategy<Object>(){
    public int computeHashCode(    Object object){
      return object.hashCode();
    }
    public boolean equals(    Object o1,    Object o2){
      if (o1 instanceof Descriptor && o2 instanceof Descriptor) {
        if (o1.toString().equals(o2.toString())) {
          final NamedScope scope1=((Descriptor)o1).getScope();
          final NamedScope scope2=((Descriptor)o2).getScope();
          if (scope1 != null && scope2 != null) {
            return scope1.getName().equals(scope2.getName());
          }
        }
      }
      if (o1 instanceof String && o2 instanceof String)       return o1.equals(o2);
      return false;
    }
  }
;
}
