{
  try {
    return ApplicationManager.getApplication().runReadAction(new Computable<GeneralCommandLine>(){
      public GeneralCommandLine compute(){
        try {
          final GeneralCommandLine commandLine=new GeneralCommandLine();
          final ProjectJdk jdk=javaParameters.getJdk();
          if (jdk == null) {
            throw new CantRunException("No JDK specified");
          }
          final String exePath=jdk.getVMExecutablePath();
          if (exePath == null) {
            throw new CantRunException("Cannot find VM executable");
          }
          commandLine.setExePath(exePath);
          commandLine.addParameters(javaParameters.getVMParametersList().getList());
          Charset charset=javaParameters.getCharset();
          if (charset == null)           charset=CharsetToolkit.getIDEOptionsCharset();
          if (charset == null)           charset=CharsetToolkit.getDefaultSystemCharset();
          commandLine.setCharset(charset);
          if (!javaParameters.getVMParametersList().hasParameter("-classpath") && !javaParameters.getVMParametersList().hasParameter("-cp")) {
            commandLine.addParameter("-classpath");
            commandLine.addParameter(javaParameters.getClassPath().getPathsString());
          }
          String mainClass=javaParameters.getMainClass();
          if (mainClass == null)           throw new CantRunException("Main class is not specified");
          commandLine.addParameter(mainClass);
          commandLine.addParameters(javaParameters.getProgramParametersList().getList());
          commandLine.setWorkDirectory(javaParameters.getWorkingDirectory());
          final HashMap<String,String> env=javaParameters.getEnv();
          if (env != null) {
            commandLine.setEnvParams(env);
          }
          return commandLine;
        }
 catch (        CantRunException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
  }
 catch (  RuntimeException e) {
    if (e.getCause() instanceof CantRunException)     throw ((CantRunException)e.getCause());
 else     throw e;
  }
}
