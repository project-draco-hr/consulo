{
  args.put("type",stringifyType(args.get("type")));
  Object namedParams=args.get("namedParams");
  if (namedParams instanceof List) {
    LinkedHashMap newParams=new LinkedHashMap();
    newParams.put("args",namedParams);
    Object oldParams=args.get("params");
    if (oldParams instanceof Map) {
      newParams.putAll((Map)oldParams);
    }
    args.put("params",newParams);
  }
  Object params=args.get("params");
  if (params instanceof Map) {
    boolean first=true;
    for (    Map.Entry<Object,Object> entry : ((Map<Object,Object>)params).entrySet()) {
      Object value=entry.getValue();
      if (!first || !(value instanceof List)) {
        entry.setValue(stringifyType(value));
      }
      first=false;
    }
  }
  final Object toThrow=args.get(THROWS);
  if (toThrow instanceof List) {
    final ArrayList<String> list=new ArrayList<String>();
    for (    Object o : (List)toThrow) {
      list.add(stringifyType(o));
    }
    args.put(THROWS,list);
  }
 else   if (toThrow != null) {
    args.put(THROWS,Collections.singletonList(stringifyType(toThrow)));
  }
  myMethods.add(args);
}
