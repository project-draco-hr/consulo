{
  Set<String> deprecated=myClass2DeprecatedProperties.get(aClass.getName());
  if (deprecated == null) {
    deprecated=new HashSet<String>();
    PsiClass componentClass=JavaPsiFacade.getInstance(module.getProject()).findClass(aClass.getName(),module.getModuleWithDependenciesAndLibrariesScope(true));
    if (componentClass != null) {
      PsiMethod[] methods=componentClass.getAllMethods();
      for (      PsiMethod method : methods) {
        if (method.isDeprecated() && PropertyUtil.isSimplePropertySetter(method)) {
          deprecated.add(PropertyUtil.getPropertyNameBySetter(method));
        }
      }
    }
    myClass2DeprecatedProperties.put(aClass.getName(),deprecated);
  }
  return deprecated.contains(propertyName);
}
