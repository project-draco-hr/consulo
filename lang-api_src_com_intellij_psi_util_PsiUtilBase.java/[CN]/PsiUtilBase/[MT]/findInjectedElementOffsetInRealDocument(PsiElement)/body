{
  final PsiElement context=element.getContainingFile().getContext();
  if (context == null)   return 0;
  final int[] result=new int[1];
  ((PsiLanguageInjectionHost)context).processInjectedPsi(new PsiLanguageInjectionHost.InjectedPsiVisitor(){
    public void visit(    @NotNull final PsiFile injectedPsi,    @NotNull final List<PsiLanguageInjectionHost.Shred> places){
      if (injectedPsi != element.getContainingFile())       return;
      final PsiLanguageInjectionHost.Shred shred=places.get(0);
      final TextRange textRange=element.getTextRange();
      if (shred.prefix != null && textRange.getEndOffset() < shred.prefix.length()) {
        result[0]=-1;
        return;
      }
      final int injectedStart=shred.getRangeInsideHost().getStartOffset() + shred.host.getTextRange().getStartOffset() - (shred.prefix != null ? shred.prefix.length() : 0);
      result[0]=injectedStart;
    }
  }
);
  return result[0];
}
