{
  PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
  if (file == null)   return null;
  final SelectionModel selectionModel=editor.getSelectionModel();
  int caretOffset=editor.getCaretModel().getOffset();
  int mostProbablyCorrectLanguageOffset=caretOffset == selectionModel.getSelectionStart() || caretOffset == selectionModel.getSelectionEnd() ? selectionModel.getSelectionStart() : caretOffset;
  PsiElement elt=getElementAtOffset(file,mostProbablyCorrectLanguageOffset);
  Language lang=elt != null ? findLanguageFromElement(elt,file) : null;
  if (lang == null)   return null;
  if (selectionModel.hasSelection()) {
    final Language rangeLanguage=evaluateLanguageInRange(selectionModel.getSelectionStart(),selectionModel.getSelectionEnd(),file);
    if (rangeLanguage == null)     return file.getLanguage();
    lang=rangeLanguage;
  }
  return narrowLanguage(lang,file.getLanguage());
}
