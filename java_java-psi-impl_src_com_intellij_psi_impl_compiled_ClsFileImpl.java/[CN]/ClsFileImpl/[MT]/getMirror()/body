{
synchronized (MIRROR_LOCK) {
    if (myMirrorFileElement == null) {
      VirtualFile file=getVirtualFile();
      String mirrorText=decompile(getManager(),file);
      String ext=JavaFileType.INSTANCE.getDefaultExtension();
      PsiClass[] classes=getClasses();
      String fileName=(classes.length > 0 ? classes[0].getName() : file.getNameWithoutExtension()) + "." + ext;
      PsiFileFactory factory=PsiFileFactory.getInstance(getManager().getProject());
      PsiFile mirror=factory.createFileFromText(fileName,JavaLanguage.INSTANCE,mirrorText,false,false);
      TreeElement mirrorTreeElement=SourceTreeToPsiMap.psiToTreeNotNull(mirror);
      final NonCancelableSection section=ProgressIndicatorProvider.startNonCancelableSectionIfSupported();
      try {
        setMirror(mirrorTreeElement);
      }
 catch (      InvalidMirrorException e) {
        LOG.error(file.getPath(),e);
      }
 finally {
        section.done();
      }
      myMirrorFileElement=mirrorTreeElement;
    }
    return myMirrorFileElement.getPsi();
  }
}
