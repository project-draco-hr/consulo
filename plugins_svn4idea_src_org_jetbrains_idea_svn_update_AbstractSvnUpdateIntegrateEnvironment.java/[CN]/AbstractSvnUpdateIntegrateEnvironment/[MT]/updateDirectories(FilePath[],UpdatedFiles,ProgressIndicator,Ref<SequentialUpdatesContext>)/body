{
  final ArrayList<VcsException> exceptions=new ArrayList<VcsException>();
  UpdateEventHandler eventHandler=new UpdateEventHandler(myVcs,progressIndicator);
  eventHandler.setUpdatedFiles(updatedFiles);
  boolean totalUpdate=true;
  AbstractUpdateIntegrateCrawler crawler=createCrawler(eventHandler,totalUpdate,exceptions,updatedFiles);
  Collection<File> updatedRoots=new HashSet<File>();
  for (  FilePath contentRoot : contentRoots) {
    if (progressIndicator != null && progressIndicator.isCanceled()) {
      throw new ProcessCanceledException();
    }
    Collection<File> roots=SvnUtil.crawlWCRoots(contentRoot.getIOFile(),crawler,progressIndicator);
    updatedRoots.addAll(roots);
  }
  if (updatedRoots.isEmpty()) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        Messages.showErrorDialog(myVcs.getProject(),SvnBundle.message("message.text.update.no.directories.found"),SvnBundle.message("messate.text.update.error"));
      }
    }
);
    return new UpdateSessionAdapter(Collections.<VcsException>emptyList(),true);
  }
  return new MyUpdateSessionAdapter(contentRoots,updatedFiles,exceptions);
}
