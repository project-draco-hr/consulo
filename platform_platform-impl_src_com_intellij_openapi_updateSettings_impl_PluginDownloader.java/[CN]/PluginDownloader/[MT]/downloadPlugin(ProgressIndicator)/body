{
  final File pluginsTemp=new File(PathManager.getPluginTempPath());
  if (!pluginsTemp.exists() && !pluginsTemp.mkdirs()) {
    throw new IOException(IdeBundle.message("error.cannot.create.temp.dir",pluginsTemp));
  }
  final File file=FileUtil.createTempFile(pluginsTemp,"plugin","download",true,false);
  pi.setText(IdeBundle.message("progress.connecting"));
  URLConnection connection=null;
  try {
    connection=openConnection(myPluginUrl);
    final InputStream is=UrlConnectionUtil.getConnectionInputStream(connection,pi);
    if (is == null) {
      throw new IOException("Failed to open connection");
    }
    pi.setText(IdeBundle.message("progress.downloading.plugin",getPluginName()));
    final int contentLength=connection.getContentLength();
    pi.setIndeterminate(contentLength == -1);
    try {
      final OutputStream fos=new BufferedOutputStream(new FileOutputStream(file,false));
      try {
        NetUtils.copyStreamContent(pi,is,fos,contentLength);
      }
  finally {
        fos.close();
      }
    }
  finally {
      is.close();
    }
    if (myFileName == null) {
      guessFileName(connection,file);
    }
    final File newFile=new File(file.getParentFile(),myFileName);
    FileUtil.rename(file,newFile);
    return newFile;
  }
  finally {
    if (connection instanceof HttpURLConnection) {
      ((HttpURLConnection)connection).disconnect();
    }
  }
}
