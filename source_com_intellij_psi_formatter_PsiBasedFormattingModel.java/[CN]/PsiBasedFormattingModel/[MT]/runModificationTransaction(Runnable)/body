{
  final PomModel model=myProject.getModel();
  final TreeAspect aspect=model.getModelAspect(TreeAspect.class);
  try {
    model.runTransaction(new PomTransactionBase(SourceTreeToPsiMap.treeElementToPsi(myASTNode)){
      public PomModelEvent run(){
        myPomEvent=new PomModelEvent(model);
        final FileElement fileElement=getFileElement(myASTNode);
        myPomEvent.registerChangeSet(aspect,new TreeChangeEventImpl(aspect,fileElement));
        action.run();
        TreeUtil.clearCaches(fileElement);
        return myPomEvent;
      }
      private FileElement getFileElement(      final ASTNode element){
        return (FileElement)SourceTreeToPsiMap.psiElementToTree(SourceTreeToPsiMap.treeElementToPsi(element).getContainingFile());
      }
    }
,aspect);
  }
 catch (  IncorrectOperationException e) {
    throw e;
  }
  myPomEvent=null;
}
