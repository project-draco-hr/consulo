{
  return new PsiElementVisitor(){
    public void visitReferenceExpression(    PsiReferenceExpression expression){
    }
    public void visitMethod(    PsiMethod method){
      addDescriptors(checkMethod(method,holder.getManager(),isOnTheFly));
    }
    public void visitClass(    PsiClass aClass){
      addDescriptors(checkClass(aClass,holder.getManager(),isOnTheFly));
    }
    public void visitField(    PsiField field){
      addDescriptors(checkField(field,holder.getManager(),isOnTheFly));
    }
    public void visitFile(    PsiFile file){
      addDescriptors(checkFile(file,holder.getManager(),isOnTheFly));
    }
    private void addDescriptors(    final ProblemDescriptor[] descriptors){
      if (descriptors != null) {
        for (        ProblemDescriptor descriptor : descriptors) {
          holder.registerProblem(descriptor);
        }
      }
    }
  }
;
}
