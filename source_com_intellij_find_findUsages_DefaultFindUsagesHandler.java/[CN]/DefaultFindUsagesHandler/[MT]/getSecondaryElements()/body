{
  if (myPsiElement instanceof PsiField) {
    final PsiField field=(PsiField)myPsiElement;
    if (field.getContainingClass() != null) {
      final String propertyName=field.getManager().getCodeStyleManager().variableNameToPropertyName(field.getName(),VariableKind.FIELD);
      PsiMethod getter=PropertyUtil.findPropertyGetterWithType(propertyName,field.hasModifierProperty(PsiModifier.STATIC),field.getType(),ContainerUtil.iterate(field.getContainingClass().getMethods()));
      PsiMethod setter=PropertyUtil.findPropertySetterWithType(propertyName,field.hasModifierProperty(PsiModifier.STATIC),field.getType(),ContainerUtil.iterate(field.getContainingClass().getMethods()));
      if (getter != null || setter != null) {
        if (Messages.showDialog(FindBundle.message("find.field.accessors.prompt",field.getName()),FindBundle.message("find.field.accessors.title"),new String[]{CommonBundle.getYesButtonText(),CommonBundle.getNoButtonText()},0,Messages.getQuestionIcon()) == DialogWrapper.OK_EXIT_CODE) {
          final List<PsiElement> elements=new ArrayList<PsiElement>();
          if (getter != null) {
            elements.addAll(Arrays.asList(SuperMethodWarningUtil.checkSuperMethods(getter,ACTION_STRING)));
          }
          if (setter != null) {
            elements.addAll(Arrays.asList(SuperMethodWarningUtil.checkSuperMethods(setter,ACTION_STRING)));
          }
          return elements.toArray(new PsiElement[elements.size()]);
        }
      }
    }
  }
  return super.getSecondaryElements();
}
