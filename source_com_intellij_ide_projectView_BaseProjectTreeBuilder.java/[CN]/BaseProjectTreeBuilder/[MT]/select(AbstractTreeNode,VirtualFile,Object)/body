{
  if (Comparing.equal(current.getValue(),element))   return current;
  if (current instanceof ProjectViewNode && !(((ProjectViewNode)current).contains(file)))   return null;
  DefaultMutableTreeNode currentNode=getNodeForElement(current);
  boolean expanded=currentNode == null ? false : getTree().isExpanded(new TreePath(currentNode.getPath()));
  List<AbstractTreeNode> kids=getOrBuildChildren(current);
  for (int i=0; i < kids.size(); i++) {
    AbstractTreeNode node=kids.get(i);
    AbstractTreeNode result=select(node,file,element);
    if (result != null) {
      currentNode=getNodeForElement(current);
      if (currentNode != null) {
        final TreePath path=new TreePath(currentNode.getPath());
        if (!getTree().isExpanded(path)) {
          getTree().expandPath(path);
        }
      }
      return result;
    }
 else {
      if (!expanded) {
        hideChildrenFor(currentNode);
      }
    }
  }
  return null;
}
