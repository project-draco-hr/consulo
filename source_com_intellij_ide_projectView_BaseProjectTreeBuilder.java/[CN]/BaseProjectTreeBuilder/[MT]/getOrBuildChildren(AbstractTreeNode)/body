{
  buildNodeForElement(parent);
  DefaultMutableTreeNode node=getNodeForElement(parent);
  if (node == null) {
    return new ArrayList<AbstractTreeNode>();
  }
  myTree.expandPath(new TreePath(node.getPath()));
  List<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  for (int i=0; i < node.getChildCount(); i++) {
    javax.swing.tree.TreeNode childAt=node.getChildAt(i);
    DefaultMutableTreeNode defaultMutableTreeNode=(DefaultMutableTreeNode)childAt;
    if (defaultMutableTreeNode.getUserObject() instanceof AbstractTreeNode) {
      ProjectViewNode treeNode=(ProjectViewNode)defaultMutableTreeNode.getUserObject();
      result.add(treeNode);
    }
 else     if (defaultMutableTreeNode.getUserObject() instanceof FavoritesTreeNodeDescriptor) {
      AbstractTreeNode treeNode=((FavoritesTreeNodeDescriptor)defaultMutableTreeNode.getUserObject()).getElement();
      result.add(treeNode);
    }
  }
  return result;
}
