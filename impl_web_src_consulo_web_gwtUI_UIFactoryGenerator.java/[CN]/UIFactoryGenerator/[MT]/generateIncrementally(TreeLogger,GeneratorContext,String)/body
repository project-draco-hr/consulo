{
  final TypeOracle typeOracle=generatorContext.getTypeOracle();
  final JClassType marker=typeOracle.findType(InternalGwtComponent.class.getName());
  if (marker == null) {
    treeLogger.log(TreeLogger.Type.ERROR,"'InternalGwtComponent' not found");
    return null;
  }
  Map<String,String> targets=new HashMap<String,String>();
  for (  JClassType classType : typeOracle.getTypes()) {
    if (classType.isAbstract()) {
      continue;
    }
    if (classType.isAssignableTo(marker)) {
      final String name=classType.getName();
      targets.put("consulo.ui.internal.W" + name,classType.getQualifiedSourceName());
    }
  }
  final String implPackageName=UIFactory.class.getPackage().getName();
  String implClassName=UIFactory.class.getSimpleName() + "Impl";
  ClassSourceFileComposerFactory composer=new ClassSourceFileComposerFactory(implPackageName,implClassName);
  PrintWriter printWriter=generatorContext.tryCreate(treeLogger,implPackageName,implClassName);
  if (printWriter != null) {
    composer.addImplementedInterface(UIFactory.class.getName());
    SourceWriter sourceWriter=composer.createSourceWriter(generatorContext,printWriter);
    genClass(implClassName,composer,sourceWriter,treeLogger,targets);
  }
  return new RebindResult(RebindMode.USE_ALL_NEW,composer.getCreatedClassName());
}
