{
  PsiWildcardType wildcardToCapture=null;
  PsiType lowerBound=PsiType.NULL;
  PsiType upperBound=PsiType.NULL;
  if (parameters.length > 0) {
    for (int j=0; j < arguments.length; j++) {
      PsiExpression argument=arguments[j];
      final PsiParameter parameter=parameters[Math.min(j,parameters.length - 1)];
      if (j >= parameters.length && !parameter.isVarArgs())       break;
      PsiType parameterType=parameter.getType();
      PsiType argumentType=argument.getType();
      if (argumentType == null)       continue;
      if (parameterType instanceof PsiEllipsisType) {
        parameterType=((PsiEllipsisType)parameterType).getComponentType();
        if (arguments.length == parameters.length && argumentType instanceof PsiArrayType && !(((PsiArrayType)argumentType).getComponentType() instanceof PsiPrimitiveType)) {
          argumentType=((PsiArrayType)argumentType).getComponentType();
        }
      }
      final Pair<PsiType,ConstraintType> currentSubstitution=getSubstitutionForTypeParameterConstraint(typeParameter,parameterType,argumentType,true,PsiUtil.getLanguageLevel(argument));
      if (currentSubstitution == null)       continue;
      final ConstraintType constraintType=currentSubstitution.getSecond();
      final PsiType type=currentSubstitution.getFirst();
      if (type == null)       return null;
switch (constraintType) {
case EQUALS:
        if (!(type instanceof PsiWildcardType))         return type;
      if (wildcardToCapture != null)       return PsiType.NULL;
    wildcardToCapture=(PsiWildcardType)type;
  break;
case SUPERTYPE:
if (lowerBound == PsiType.NULL) {
  lowerBound=type;
}
 else {
  if (!lowerBound.equals(type)) {
    lowerBound=GenericsUtil.getLeastUpperBound(lowerBound,type,typeParameter.getManager());
    if (lowerBound == null)     return PsiType.NULL;
  }
}
break;
case SUBTYPE:
if (upperBound == PsiType.NULL) {
upperBound=type;
}
}
}
}
if (wildcardToCapture != null) {
if (lowerBound != PsiType.NULL) {
if (!wildcardToCapture.isAssignableFrom(lowerBound)) return PsiType.NULL;
lowerBound=GenericsUtil.getLeastUpperBound(lowerBound,wildcardToCapture,typeParameter.getManager());
}
 else {
if (upperBound != PsiType.NULL && !upperBound.isAssignableFrom(wildcardToCapture)) return PsiType.NULL;
return wildcardToCapture;
}
}
if (lowerBound == PsiType.NULL) lowerBound=upperBound;
if (lowerBound == PsiType.NULL && parent != null) {
lowerBound=inferMethodTypeParameterFromParent(typeParameter,partialSubstitutor,parent,forCompletion);
}
return lowerBound;
}
