{
  if (param instanceof PsiWildcardType) {
    if (arg instanceof PsiWildcardType && ((PsiWildcardType)arg).isExtends() == ((PsiWildcardType)param).isExtends()) {
      PsiType res=getSubstitutionForTypeParameterInner(((PsiWildcardType)param).getBound(),((PsiWildcardType)arg).getBound(),patternType,captureWildcard);
      if (res != PsiType.NULL)       return res;
    }
 else     if (patternType.equals(((PsiWildcardType)param).getBound())) {
      if (((PsiWildcardType)param).isExtends()) {
        return processArgType(arg,captureWildcard);
      }
    }
  }
 else   if (patternType.equals(param)) {
    return processArgType(arg,captureWildcard);
  }
  if (param instanceof PsiArrayType && arg instanceof PsiArrayType) {
    return getSubstitutionForTypeParameterInner(((PsiArrayType)param).getComponentType(),((PsiArrayType)arg).getComponentType(),patternType,captureWildcard);
  }
  if (param instanceof PsiClassType && arg instanceof PsiClassType) {
    PsiClass paramClass=((PsiClassType)param).resolve();
    if (paramClass == null)     return PsiType.NULL;
    PsiClass argClass=((PsiClassType)arg).resolve();
    if (argClass != paramClass)     return PsiType.NULL;
    PsiType[] paramTypes=((PsiClassType)param).getParameters();
    PsiType[] argTypes=((PsiClassType)arg).getParameters();
    if (paramTypes.length != argTypes.length)     return PsiType.NULL;
    PsiType capturedWildcard=PsiType.NULL;
    for (int i=0; i < argTypes.length; i++) {
      PsiType res=getSubstitutionForTypeParameterInner(paramTypes[i],argTypes[i],patternType,captureWildcard);
      if (res != PsiType.NULL) {
        if (!captureWildcard) {
          return res;
        }
 else {
          if (capturedWildcard != PsiType.NULL) {
            return PsiType.NULL;
          }
 else {
            capturedWildcard=res;
          }
        }
      }
    }
    return capturedWildcard;
  }
  return PsiType.NULL;
}
