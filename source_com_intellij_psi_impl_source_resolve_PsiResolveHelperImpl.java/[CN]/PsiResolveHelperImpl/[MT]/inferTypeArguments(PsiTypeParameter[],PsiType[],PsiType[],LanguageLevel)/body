{
  if (leftTypes.length != rightTypes.length)   throw new IllegalArgumentException("Types must be of the same length");
  PsiSubstitutor substitutor=PsiSubstitutor.EMPTY;
  for (  PsiTypeParameter typeParameter : typeParameters) {
    PsiType substitution=null;
    for (int i1=0; i1 < leftTypes.length; i1++) {
      PsiType leftType=leftTypes[i1];
      PsiType rightType=rightTypes[i1];
      final Pair<PsiType,ConstraintType> constraint=getSubstitutionForTypeParameterConstraint(typeParameter,leftType,rightType,true,languageLevel);
      if (constraint != null) {
        final ConstraintType constraintType=constraint.getSecond();
        final PsiType current=constraint.getFirst();
        if (constraintType == ConstraintType.EQUALS) {
          substitution=current;
          break;
        }
 else         if (constraintType == ConstraintType.SUBTYPE) {
          if (substitution == null) {
            substitution=current;
          }
 else {
            substitution=GenericsUtil.getLeastUpperBound(substitution,current,typeParameter.getManager());
          }
        }
      }
    }
    if (substitution == null)     substitution=TypeConversionUtil.typeParameterErasure(typeParameter);
    substitutor=substitutor.put(typeParameter,substitution);
  }
  return substitutor;
}
