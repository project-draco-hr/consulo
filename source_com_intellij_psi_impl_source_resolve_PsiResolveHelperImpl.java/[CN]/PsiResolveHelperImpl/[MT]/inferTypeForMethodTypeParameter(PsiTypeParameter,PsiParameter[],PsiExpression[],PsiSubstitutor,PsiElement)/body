{
  PsiType substitution=PsiType.NULL;
  if (parameters.length > 0) {
    for (int j=0; j < arguments.length; j++) {
      PsiExpression argument=arguments[j];
      final PsiParameter parameter=parameters[Math.min(j,parameters.length - 1)];
      if (j >= parameters.length && !parameter.isVarArgs())       break;
      final PsiType currentSubstitution=getSubstitutionForTypeParameter(typeParameter,parameter.getType(),argument.getType(),true);
      if (currentSubstitution == null) {
        substitution=null;
        break;
      }
 else       if (currentSubstitution instanceof PsiWildcardType) {
        if (substitution instanceof PsiWildcardType)         return PsiType.NULL;
      }
 else       if (currentSubstitution == PsiType.NULL)       continue;
      if (substitution == PsiType.NULL) {
        substitution=currentSubstitution;
        continue;
      }
      if (!substitution.equals(currentSubstitution) && !substitution.isAssignableFrom(currentSubstitution)) {
        substitution=GenericsUtil.getLeastUpperBound(substitution,currentSubstitution,typeParameter.getManager());
        if (substitution == null) {
          break;
        }
      }
    }
  }
  if (substitution == PsiType.NULL) {
    substitution=inferMethodTypeParameterFromParent(typeParameter,partialSubstitutor,parent);
  }
  return substitution;
}
