{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  final Project project=file.getProject();
  final Document document=editor.getDocument();
  LOG.assertTrue(!PsiDocumentManager.getInstance(project).isUncommited(document));
  ParameterizedCachedValue<Runnable,Pair<Boolean,Boolean>> value=editor.getUserData(CODE_FOLDING_KEY);
  if (value != null && value.hasUpToDateValue() && !applyDefaultState)   return null;
  if (quick)   return getUpdateResult(file,document,quick,project,editor,applyDefaultState).getValue();
  return CachedValuesManager.getManager(project).getParameterizedCachedValue(editor,CODE_FOLDING_KEY,new ParameterizedCachedValueProvider<Runnable,Pair<Boolean,Boolean>>(){
    public CachedValueProvider.Result<Runnable> compute(    Pair<Boolean,Boolean> param){
      Document document=editor.getDocument();
      PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(document);
      return getUpdateResult(file,document,param.first,project,editor,param.second);
    }
  }
,false,Pair.create(quick,applyDefaultState));
}
