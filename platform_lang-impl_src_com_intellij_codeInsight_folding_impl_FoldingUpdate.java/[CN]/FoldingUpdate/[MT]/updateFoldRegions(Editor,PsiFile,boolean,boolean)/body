{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  final Project project=file.getProject();
  Document document=editor.getDocument();
  LOG.assertTrue(!PsiDocumentManager.getInstance(project).isUncommited(document));
  final long timeStamp=document.getModificationStamp();
  Object lastTimeStamp=editor.getUserData(LAST_UPDATE_STAMP_KEY);
  if (lastTimeStamp instanceof Long && ((Long)lastTimeStamp).longValue() == timeStamp && !applyDefaultState)   return null;
  if (file instanceof PsiCompiledElement) {
    file=(PsiFile)((PsiCompiledElement)file).getMirror();
  }
  final TreeMap<PsiElement,FoldingDescriptor> elementsToFoldMap=new TreeMap<PsiElement,FoldingDescriptor>(COMPARE_BY_OFFSET);
  getFoldingsFor(file,document,elementsToFoldMap,quick);
  final Runnable operation=new UpdateFoldRegionsOperation(project,editor,elementsToFoldMap,applyDefaultState,false);
  return new Runnable(){
    public void run(){
      editor.getFoldingModel().runBatchFoldingOperationDoNotCollapseCaret(operation);
      if (!quick) {
        editor.putUserData(LAST_UPDATE_STAMP_KEY,timeStamp);
      }
    }
  }
;
}
