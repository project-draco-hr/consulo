{
  final XmlElement dtdUrlElement=getDtdUrlElement();
  PsiReference uriRef=null;
  if (dtdUrlElement != null) {
    final String uri=extractValue(dtdUrlElement);
    uriRef=new PsiReference(){
      public PsiElement getElement(){
        return XmlDoctypeImpl.this;
      }
      public TextRange getRangeInElement(){
        return new TextRange(dtdUrlElement.getTextRange().getStartOffset() - getTextRange().getStartOffset(),dtdUrlElement.getTextRange().getEndOffset() - getTextRange().getStartOffset());
      }
      public PsiElement resolve(){
        return XmlUtil.findXmlFile(XmlUtil.getContainingFile(XmlDoctypeImpl.this),uri);
      }
      public String getCanonicalText(){
        return uri;
      }
      public PsiElement handleElementRename(      String newElementName) throws IncorrectOperationException {
        throw new IncorrectOperationException();
      }
      public PsiElement bindToElement(      PsiElement element) throws IncorrectOperationException {
        throw new IncorrectOperationException();
      }
      public boolean isReferenceTo(      PsiElement element){
        return element == dtdUrlElement;
      }
      public Object[] getVariants(){
        return null;
      }
      public boolean isSoft(){
        return false;
      }
    }
;
  }
  final PsiReference[] referencesFromProviders=ResolveUtil.getReferencesFromProviders(this);
  return ArrayUtil.mergeArrays(uriRef != null ? new PsiReference[]{uriRef} : PsiReference.EMPTY_ARRAY,referencesFromProviders,PsiReference.class);
}
