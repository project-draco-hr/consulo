{
  if ((flags & ~mask) != 0) {
    throw new IllegalArgumentException("Flags must be between 0 and " + mask + " but got:"+ flags);
  }
  final int bitIndex=id / chunksPerWord * 64 + (id % chunksPerWord) * bitsPerChunk;
  long prevChunk=bits.changeWord(bitIndex,new TLongFunction(){
    @Override public long execute(    long word){
      return word & ~(mask << bitIndex) | (flags << bitIndex);
    }
  }
) >> bitIndex;
  return prevChunk & mask;
}
