{
  if (sign == JavaTokenType.PLUS) {
    if (rType == null)     return null;
    if (rType.equalsToText("java.lang.String")) {
      return rType;
    }
    if (lType == null)     return null;
    if (lType.equalsToText("java.lang.String")) {
      return lType;
    }
    return TypeConversionUtil.unboxAndBalanceTypes(lType,rType);
  }
  if (sign == JavaTokenType.MINUS || sign == JavaTokenType.ASTERISK || sign == JavaTokenType.DIV || sign == JavaTokenType.PERC) {
    if (lType == null && rType == null)     return null;
    return TypeConversionUtil.unboxAndBalanceTypes(lType,rType);
  }
  if (sign == JavaTokenType.LTLT || sign == JavaTokenType.GTGT || sign == JavaTokenType.GTGTGT) {
    if (lType == PsiType.BYTE || lType == PsiType.CHAR || lType == PsiType.SHORT) {
      return PsiType.INT;
    }
    return lType;
  }
  if (sign == JavaTokenType.EQEQ || sign == JavaTokenType.NE || sign == JavaTokenType.LT || sign == JavaTokenType.GT || sign == JavaTokenType.LE || sign == JavaTokenType.GE || sign == JavaTokenType.OROR || sign == JavaTokenType.ANDAND) {
    return PsiType.BOOLEAN;
  }
  if (sign == JavaTokenType.OR || sign == JavaTokenType.XOR || sign == JavaTokenType.AND) {
    if (lType instanceof PsiClassType)     lType=PsiPrimitiveType.getUnboxedType(lType);
    if (rType instanceof PsiClassType)     rType=PsiPrimitiveType.getUnboxedType(rType);
    if (lType == null && rType == null)     return null;
    if (lType == PsiType.BOOLEAN || rType == PsiType.BOOLEAN)     return PsiType.BOOLEAN;
    if (lType == PsiType.LONG || rType == PsiType.LONG)     return PsiType.LONG;
    return PsiType.INT;
  }
  LOG.assertTrue(false);
  return null;
}
