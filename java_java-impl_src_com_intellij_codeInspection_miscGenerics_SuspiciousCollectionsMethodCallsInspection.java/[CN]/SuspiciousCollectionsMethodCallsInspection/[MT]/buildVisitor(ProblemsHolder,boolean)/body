{
  final List<PsiMethod> patternMethods=new ArrayList<PsiMethod>();
  final IntArrayList indices=new IntArrayList();
  return new JavaElementVisitor(){
    @Override public void visitReferenceExpression(    final PsiReferenceExpression expression){
      visitExpression(expression);
    }
    @Override public void visitMethodCallExpression(    PsiMethodCallExpression methodCall){
      super.visitMethodCallExpression(methodCall);
      final String message=getSuspiciousMethodCallMessage(methodCall,REPORT_CONVERTIBLE_METHOD_CALLS,patternMethods,indices);
      if (message != null) {
        holder.registerProblem(methodCall.getArgumentList().getExpressions()[0],message);
      }
    }
  }
;
}
