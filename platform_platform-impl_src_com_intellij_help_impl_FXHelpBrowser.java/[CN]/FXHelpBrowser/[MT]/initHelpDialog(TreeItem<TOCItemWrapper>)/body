{
  if (isHelpDialogInitiated)   return;
  Group root=new Group();
  Scene scene=new Scene(root,Color.ANTIQUEWHITE);
  fxPanel.setScene(scene);
  tocTreeView.setShowRoot(true);
  tocTreeView.setRoot(rootNode);
  rootNode.setExpanded(true);
  tocTreeView.setMaxSize(Double.MAX_VALUE,Double.MAX_VALUE);
  tocTreeView.setShowRoot(false);
  tocTreeView.setEditable(false);
  tocTreeView.getSelectionModel().setSelectionMode(SelectionMode.SINGLE);
  tocTreeView.getSelectionModel().selectedItemProperty().addListener(new ChangeListener(){
    @Override public void changed(    ObservableValue observable,    Object oldValue,    Object newValue){
      final TreeItem<TOCItemWrapper> item=tocTreeView.getSelectionModel().getSelectedItem();
      if (item != null) {
        webEngine.load(item.getValue().get().getURL().toString());
      }
    }
  }
);
  searchResultsList.getSelectionModel().selectedItemProperty().addListener(searchResultsListener);
  contentHBox.getChildren().setAll(tocTreeView,webView);
  HBox.setHgrow(tocTreeView,Priority.ALWAYS);
  SearchField searchField=new SearchField();
  bodyVBox.getChildren().addAll(searchField,contentHBox);
  searchField.myField.setOnAction(new EventHandler<ActionEvent>(){
    @Override public void handle(    ActionEvent event){
      SearchView searchView=(SearchView)helpSet.getNavigatorView("Search");
      MergingSearchEngine search=new MergingSearchEngine(searchView);
      try {
        SearchQuery searchquery=search.createQuery();
        searchquery.addSearchListener(FXHelpBrowser.this);
        if (searchquery.isActive()) {
          searchquery.stop();
        }
        searchquery.start("button",Locale.getDefault());
      }
 catch (      Exception e) {
        LOG.error(e);
      }
    }
  }
);
  Tab tab1=new Tab();
  tab1.setText("Search");
  root.getChildren().add(bodyVBox);
  isHelpDialogInitiated=true;
}
