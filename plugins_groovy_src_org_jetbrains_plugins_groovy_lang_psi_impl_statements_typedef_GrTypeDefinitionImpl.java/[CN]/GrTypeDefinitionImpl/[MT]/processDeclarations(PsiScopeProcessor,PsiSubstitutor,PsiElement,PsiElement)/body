{
  NameHint nameHint=processor.getHint(NameHint.class);
  String name=nameHint == null ? null : nameHint.getName();
  ClassHint classHint=processor.getHint(ClassHint.class);
  if (classHint == null || classHint.shouldProcess(ClassHint.ResolveKind.PROPERTY)) {
    Map<String,PsiField> fieldsMap=CollectClassMembersUtil.getAllFields(this);
    if (name != null) {
      PsiField field=fieldsMap.get(name);
      if (field != null && !processor.execute(field,PsiSubstitutor.EMPTY))       return false;
    }
 else {
      for (      PsiField field : fieldsMap.values()) {
        if (!processor.execute(field,PsiSubstitutor.EMPTY))         return false;
      }
    }
  }
  if (classHint == null || classHint.shouldProcess(ClassHint.ResolveKind.METHOD)) {
    Map<String,List<PsiMethod>> methodsMap=CollectClassMembersUtil.getAllMethods(this);
    boolean isPlaceGroovy=place.getLanguage() == GroovyFileType.GROOVY_FILE_TYPE.getLanguage();
    if (name == null) {
      for (      List<PsiMethod> list : methodsMap.values()) {
        for (        PsiMethod method : list) {
          if (isMethodVisible(isPlaceGroovy,method) && !processor.execute(method,PsiSubstitutor.EMPTY))           return false;
        }
      }
    }
 else {
      List<PsiMethod> byName=methodsMap.get(name);
      if (byName != null) {
        for (        PsiMethod method : byName) {
          if (isMethodVisible(isPlaceGroovy,method) && !processor.execute(method,PsiSubstitutor.EMPTY))           return false;
        }
      }
    }
  }
  return true;
}
