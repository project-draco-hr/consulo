{
  final ArtifactsCompiler compiler=ArtifactsCompiler.getInstance(project);
  if (compiler == null || !filter.acceptCompiler(compiler)) {
    return Collections.emptyList();
  }
  final List<TargetTypeBuildScope> scopes=new ArrayList<TargetTypeBuildScope>();
  new ReadAction(){
    protected void run(    final Result result){
      final Set<Artifact> artifacts=ArtifactCompileScope.getArtifactsToBuild(project,baseScope,false);
      if (ArtifactCompileScope.getArtifacts(baseScope) == null) {
        Set<Module> modules=ArtifactUtil.getModulesIncludedInArtifacts(artifacts,project);
        CompileScopeUtil.addScopesForModules(modules,scopes);
      }
      if (!artifacts.isEmpty()) {
        TargetTypeBuildScope.Builder builder=TargetTypeBuildScope.newBuilder().setTypeId(ArtifactBuildTargetType.INSTANCE.getTypeId());
        for (        Artifact artifact : artifacts) {
          builder.addTargetId(artifact.getName());
        }
        scopes.add(builder.build());
      }
    }
  }
.execute();
  return scopes;
}
