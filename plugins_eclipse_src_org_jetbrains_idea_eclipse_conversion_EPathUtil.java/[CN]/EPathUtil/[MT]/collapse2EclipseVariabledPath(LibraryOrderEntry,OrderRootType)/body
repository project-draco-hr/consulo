{
  final VirtualFile[] virtualFiles=libraryOrderEntry.getFiles(type);
  if (virtualFiles.length > 0) {
    VirtualFile jarFile=virtualFiles[0];
    if (jarFile.getFileSystem() instanceof JarFileSystem) {
      jarFile=JarFileSystem.getInstance().getVirtualFileForJar(jarFile);
    }
    if (jarFile == null) {
      return null;
    }
    final Project project=libraryOrderEntry.getOwnerModule().getProject();
    final VirtualFile baseDir=project.getBaseDir();
    final String filePath=jarFile.getPath();
    if (baseDir != null && !VfsUtil.isAncestor(baseDir,jarFile,false)) {
      final String ideaCollapsed=PathMacroManager.getInstance(project).collapsePath(filePath);
      if (ideaCollapsed.contains(".."))       return null;
      final int index=ideaCollapsed.indexOf('$');
      if (index < 0)       return null;
      return ideaCollapsed.substring(index).replace("$","");
    }
 else {
      final PathMacros pathMacros=PathMacros.getInstance();
      final Set<String> names=pathMacros.getUserMacroNames();
      for (      String name : names) {
        final String path=FileUtil.toSystemIndependentName(pathMacros.getValue(name));
        if (filePath.startsWith(path + "/")) {
          final String substr=filePath.substring(path.length());
          return name + (substr.startsWith("/") || substr.length() == 0 ? substr : "/" + substr);
        }
      }
    }
  }
  return null;
}
