{
  myConfiguration=configuration;
  myAnnotationField=new ReferenceEditorWithBrowseButton(null,project,new Function<String,Document>(){
    public Document fun(    String s){
      return PsiUtilEx.createDocument(s,project);
    }
  }
,myConfiguration.getLanguageAnnotationClass());
  myAnnotationField.addActionListener(new BrowseClassListener(project,myAnnotationField));
  myAnnotationField.setEnabled(!project.isDefault());
  ShiftTabAction.attachTo(myAnnotationField.getEditorTextField());
  addField(myLanguageAnnotationPanel,myAnnotationField);
  myPatternField=new ReferenceEditorWithBrowseButton(null,project,new Function<String,Document>(){
    public Document fun(    String s){
      return PsiUtilEx.createDocument(s,project);
    }
  }
,myConfiguration.getPatternAnnotationClass());
  myPatternField.addActionListener(new BrowseClassListener(project,myPatternField));
  myPatternField.setEnabled(!project.isDefault());
  ShiftTabAction.attachTo(myPatternField.getEditorTextField());
  addField(myPatternAnnotationPanel,myPatternField);
  mySubstField=new ReferenceEditorWithBrowseButton(null,project,new Function<String,Document>(){
    public Document fun(    String s){
      return PsiUtilEx.createDocument(s,project);
    }
  }
,myConfiguration.getPatternAnnotationClass());
  mySubstField.addActionListener(new BrowseClassListener(project,mySubstField));
  mySubstField.setEnabled(!project.isDefault());
  ShiftTabAction.attachTo(mySubstField.getEditorTextField());
  addField(mySubstAnnotationPanel,mySubstField);
}
