{
  String progressTitle=ExecutionBundle.message("terminating.process.progress.title",descriptor.getDisplayName());
  ApplicationManager.getApplication().runProcessWithProgressSynchronously(new Runnable(){
    private ProgressIndicator myProgressIndicator;
    private Semaphore mySemaphore=new Semaphore();
    private Thread myWaitThread=new Thread(){
      public void run(){
        descriptor.getProcessHandler().waitFor();
        mySemaphore.up();
      }
    }
;
    private Thread myCancelListener=new Thread(){
      public void run(){
        for (; ; ) {
          if (myProgressIndicator.isCanceled() || !myProgressIndicator.isRunning()) {
            mySemaphore.up();
            break;
          }
          try {
synchronized (this) {
              wait(2000);
            }
          }
 catch (          InterruptedException e) {
          }
        }
      }
    }
;
    public void run(){
      myProgressIndicator=ProgressManager.getInstance().getProgressIndicator();
      myProgressIndicator.setText(ExecutionBundle.message("waiting.for.vm.detach.progress.text"));
      myWaitThread.start();
      myCancelListener.start();
      mySemaphore.down();
      mySemaphore.waitFor();
    }
  }
,progressTitle,true,myProject);
}
