{
  super(project,false);
  myProject=project;
  mySelector=selector;
  setTitle(title);
  myTree=new SimpleTree();
  myTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  MavenProjectsStructure treeStructure=new MavenProjectsStructure(myProject,MavenProjectsManager.getInstance(myProject),MavenTasksManager.getInstance(myProject),MavenProjectsNavigator.getInstance(myProject),myTree){
    @Override protected Class<? extends CustomNode>[] getVisibleNodesClasses(){
      return new Class[]{nodeClass};
    }
  }
;
  SimpleTreeBuilder treeBuilder=new SimpleTreeBuilder(myTree,(DefaultTreeModel)myTree.getModel(),treeStructure,null);
  treeBuilder.initRoot();
  Disposer.register(myProject,treeBuilder);
  treeStructure.buildTree();
  SimpleNode selection=null;
  for (  MavenProjectsStructure.ProjectNode each : treeStructure.getProjectNodes()) {
    if (mySelector != null) {
      selection=mySelector.findNode(each);
    }
    if (selection != null)     break;
  }
  treeBuilder.updateFromRoot(true);
  myTree.expandPath(new TreePath(myTree.getModel().getRoot()));
  if (selection != null) {
    myTree.setSelectedNode(treeBuilder,selection,true);
  }
  init();
}
