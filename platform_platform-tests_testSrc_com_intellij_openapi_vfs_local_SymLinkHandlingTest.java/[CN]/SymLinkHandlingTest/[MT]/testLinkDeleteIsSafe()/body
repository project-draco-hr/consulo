{
  if (!SystemInfo.areSymLinksSupported)   return;
  final File targetFile=FileUtil.createTempFile("target","");
  final File linkFile=createTempLink(targetFile.getAbsolutePath(),"link");
  final VirtualFile linkVFile=refreshAndFind(linkFile);
  assertTrue("link=" + linkFile + ", vLink="+ linkVFile,linkVFile != null && !linkVFile.isDirectory() && linkVFile.isSymLink());
  AccessToken token=ApplicationManager.getApplication().acquireWriteActionLock(getClass());
  try {
    linkVFile.delete(this);
  }
  finally {
    token.finish();
  }
  assertFalse(linkVFile.toString(),linkVFile.isValid());
  assertFalse(linkFile.exists());
  assertTrue(targetFile.exists());
  final File targetDir=FileUtil.createTempDirectory("targetDir","");
  final File childFile=new File(targetDir,"child.txt");
  assertTrue(childFile.getAbsolutePath(),childFile.exists() || childFile.createNewFile());
  final File linkDir=createTempLink(targetDir.getAbsolutePath(),"linkDir");
  final VirtualFile linkVDir=refreshAndFind(linkDir);
  assertTrue("link=" + linkDir + ", vLink="+ linkVDir,linkVDir != null && linkVDir.isDirectory() && linkVDir.isSymLink() && linkVDir.getChildren().length == 1);
  token=ApplicationManager.getApplication().acquireWriteActionLock(getClass());
  try {
    linkVDir.delete(this);
  }
  finally {
    token.finish();
  }
  assertFalse(linkVDir.toString(),linkVDir.isValid());
  assertFalse(linkDir.exists());
  assertTrue(targetDir.exists());
  assertTrue(childFile.exists());
}
