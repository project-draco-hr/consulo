{
  super.visitAssignmentExpression(expression);
  if (expression.getRExpression() == null) {
    return;
  }
  final PsiJavaToken sign=expression.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  if (!tokenType.equals(JavaTokenType.PLUSEQ)) {
    return;
  }
  PsiExpression lhs=expression.getLExpression();
  final PsiType type=lhs.getType();
  if (type == null) {
    return;
  }
  if (!TypeUtils.isJavaLangString(type)) {
    return;
  }
  if (!ControlFlowUtils.isInLoop(expression)) {
    return;
  }
  if (ControlFlowUtils.isInExitStatement(expression)) {
    return;
  }
  if (containingStatementExits(expression)) {
    return;
  }
  if (m_ignoreUnlessAssigned) {
    while (lhs instanceof PsiParenthesizedExpression) {
      final PsiParenthesizedExpression parenthesizedExpression=(PsiParenthesizedExpression)lhs;
      lhs=parenthesizedExpression.getExpression();
    }
    if (!(lhs instanceof PsiReferenceExpression)) {
      return;
    }
  }
  registerError(sign);
}
