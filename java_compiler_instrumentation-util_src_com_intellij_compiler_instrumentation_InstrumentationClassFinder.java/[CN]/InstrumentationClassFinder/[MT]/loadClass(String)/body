{
  final String internalName=name.replace('.','/');
  final PseudoClass aClass=myLoaded.get(internalName);
  if (aClass != null && aClass != PseudoClass.NULL_OBJ) {
    return aClass;
  }
  final InputStream is=aClass == null ? getClassBytesAsStream(internalName) : null;
  if (is == null) {
    if (aClass == null) {
      myLoaded.put(internalName,PseudoClass.NULL_OBJ);
    }
    throw new ClassNotFoundException("Class not found: " + name.replace('/','.')){
      @Override public synchronized Throwable fillInStackTrace(){
        return this;
      }
    }
;
  }
  try {
    final PseudoClass result=loadPseudoClass(is);
    myLoaded.put(internalName,result);
    return result;
  }
  finally {
    is.close();
  }
}
