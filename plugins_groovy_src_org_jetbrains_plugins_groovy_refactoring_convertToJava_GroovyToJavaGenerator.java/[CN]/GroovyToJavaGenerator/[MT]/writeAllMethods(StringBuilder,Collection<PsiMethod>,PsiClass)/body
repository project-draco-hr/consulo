{
  Set<MethodSignature> methodSignatures=new HashSet<MethodSignature>();
  for (  PsiMethod method : methods) {
    if (!shouldBeGenerated(method)) {
      continue;
    }
    if (method instanceof GrConstructor) {
      writeConstructor(text,(GrConstructor)method,aClass.isEnum(),true);
      continue;
    }
    PsiParameter[] parameters=method.getParameterList().getParameters();
    if (parameters.length > 0) {
      PsiParameter[] parametersCopy=new PsiParameter[parameters.length];
      PsiType[] parameterTypes=new PsiType[parameters.length];
      for (int i=0; i < parameterTypes.length; i++) {
        parametersCopy[i]=parameters[i];
        parameterTypes[i]=findOutParameterType(parameters[i]);
      }
      for (int i=parameters.length - 1; i >= 0; i--) {
        MethodSignature signature=MethodSignatureUtil.createMethodSignature(method.getName(),parameterTypes,method.getTypeParameters(),PsiSubstitutor.EMPTY);
        if (methodSignatures.add(signature)) {
          writeMethod(text,method,parametersCopy,true);
        }
        PsiParameter parameter=parameters[i];
        if (!(parameter instanceof GrParameter) || !((GrParameter)parameter).isOptional())         break;
        parameterTypes=ArrayUtil.remove(parameterTypes,parameterTypes.length - 1);
        parametersCopy=ArrayUtil.remove(parametersCopy,parametersCopy.length - 1);
      }
    }
 else {
      MethodSignature signature=method.getSignature(PsiSubstitutor.EMPTY);
      if (methodSignatures.add(signature)) {
        writeMethod(text,method,parameters,true);
      }
    }
  }
}
