{
  LOG.assertTrue(child.getTreeParent() == myParent);
  ASTNode current=myParent.getFirstChildNode();
  final Iterator<Pair<ASTNode,Integer>> iterator=myOffsets.iterator();
  Pair<ASTNode,Integer> currentChange=iterator.hasNext() ? iterator.next() : null;
  int currentOldOffset=0;
  do {
    boolean counted=false;
    while (currentChange != null && (currentOldOffset == currentChange.getSecond().intValue() && isAfter(currentChange.getFirst(),child))) {
      if (current == currentChange.getFirst()) {
        counted=true;
        current=current.getTreeNext();
      }
      final ChangeInfo changeInfo=myChanges.get(currentChange.getFirst());
      currentOldOffset+=changeInfo.getOldLength();
      currentChange=iterator.hasNext() ? iterator.next() : null;
    }
    if (current == child)     break;
    if (current == null)     break;
    if (!counted) {
      currentOldOffset+=current.getTextLength();
      current=current.getTreeNext();
    }
  }
 while (true);
  return currentOldOffset;
}
