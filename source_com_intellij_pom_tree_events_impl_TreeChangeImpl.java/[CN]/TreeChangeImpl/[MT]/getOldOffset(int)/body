{
  ASTNode current=myParent.getFirstChildNode();
  final Iterator<Pair<ASTNode,Integer>> iterator=myOffsets.iterator();
  Pair<ASTNode,Integer> currentChange=iterator.hasNext() ? iterator.next() : null;
  int currentOffset=0;
  int currentOldOffset=0;
  do {
    boolean counted=false;
    while (currentChange != null && currentOldOffset == currentChange.getSecond().intValue()) {
      if (current == currentChange.getFirst()) {
        final int textLength=current.getTextLength();
        counted=true;
        current=current.getTreeNext();
        currentOffset+=textLength;
      }
      final ChangeInfo changeInfo=myChanges.get(currentChange.getFirst());
      currentOldOffset+=changeInfo.getOldLength();
      currentChange=iterator.hasNext() ? iterator.next() : null;
    }
    if (current == null)     break;
    if (!counted) {
      final int textLength=current.getTextLength();
      currentOldOffset+=textLength;
      current=current.getTreeNext();
      currentOffset+=textLength;
    }
  }
 while (currentOffset < offset);
  return currentOldOffset;
}
