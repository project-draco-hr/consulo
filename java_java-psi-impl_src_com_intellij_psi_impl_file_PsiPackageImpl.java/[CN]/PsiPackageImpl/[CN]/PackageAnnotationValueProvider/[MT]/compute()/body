{
  List<PsiModifierList> list=new ArrayList<PsiModifierList>();
  for (  PsiDirectory directory : getDirectories()) {
    PsiFile file=directory.findFile(PACKAGE_INFO_FILE);
    if (file != null) {
      PsiPackageStatement stmt=PsiTreeUtil.getChildOfType(file,PsiPackageStatement.class);
      if (stmt != null) {
        final PsiModifierList modifierList=stmt.getAnnotationList();
        if (modifierList != null) {
          list.add(modifierList);
        }
      }
    }
  }
  final JavaPsiFacade facade=getFacade();
  final GlobalSearchScope scope=allScope();
  for (  PsiClass aClass : facade.findClasses(getQualifiedName() + ".package-info",scope)) {
    ContainerUtil.addIfNotNull(aClass.getModifierList(),list);
  }
  return new Result<PsiModifierList>(list.isEmpty() ? null : new PsiCompositeModifierList(getManager(),list),OOCB_DEPENDENCY);
}
