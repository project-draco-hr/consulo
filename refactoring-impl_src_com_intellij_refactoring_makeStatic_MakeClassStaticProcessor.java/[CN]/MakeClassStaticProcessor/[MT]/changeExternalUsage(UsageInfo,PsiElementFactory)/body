{
  final PsiElement element=usage.getElement();
  if (!(element instanceof PsiJavaCodeReferenceElement))   return;
  PsiJavaCodeReferenceElement methodRef=(PsiJavaCodeReferenceElement)element;
  PsiElement parent=methodRef.getParent();
  LOG.assertTrue(parent instanceof PsiCallExpression);
  PsiCallExpression call=(PsiCallExpression)parent;
  PsiExpression instanceRef;
  instanceRef=call instanceof PsiMethodCallExpression ? ((PsiMethodCallExpression)call).getMethodExpression().getQualifierExpression() : ((PsiNewExpression)call).getQualifier();
  PsiElement newQualifier;
  if (instanceRef == null || instanceRef instanceof PsiSuperExpression) {
    final PsiClass thisClass=RefactoringUtil.getThisClass(element);
    @NonNls String thisText;
    if (thisClass.getManager().areElementsEquivalent(thisClass,myMember.getContainingClass())) {
      thisText="this";
    }
 else {
      thisText=myMember.getContainingClass().getName() + ".this";
    }
    instanceRef=factory.createExpressionFromText(thisText,null);
    newQualifier=null;
  }
 else {
    newQualifier=factory.createReferenceExpression(myMember.getContainingClass());
  }
  if (mySettings.getNewParametersNumber() > 1) {
    int copyingSafetyLevel=RefactoringUtil.verifySafeCopyExpression(instanceRef);
    if (copyingSafetyLevel == RefactoringUtil.EXPR_COPY_PROHIBITED) {
      String tempVar=RefactoringUtil.createTempVar(instanceRef,call,true);
      instanceRef=factory.createExpressionFromText(tempVar,null);
    }
  }
  PsiElement anchor=null;
  PsiExpressionList argList=call.getArgumentList();
  PsiExpression[] exprs=argList.getExpressions();
  if (mySettings.isMakeClassParameter()) {
    if (exprs.length > 0) {
      anchor=argList.addBefore(instanceRef,exprs[0]);
    }
 else {
      anchor=argList.add(instanceRef);
    }
  }
  if (mySettings.isMakeFieldParameters()) {
    List<Settings.FieldParameter> parameters=mySettings.getParameterOrderList();
    for (    Settings.FieldParameter fieldParameter : parameters) {
      PsiReferenceExpression fieldRef;
      final String fieldName=convertToFieldName(fieldParameter.field.getName());
      if (newQualifier != null) {
        fieldRef=(PsiReferenceExpression)factory.createExpressionFromText("a." + fieldName,null);
        fieldRef.getQualifierExpression().replace(instanceRef);
      }
 else {
        fieldRef=(PsiReferenceExpression)factory.createExpressionFromText(fieldName,null);
      }
      if (anchor != null) {
        anchor=argList.addAfter(fieldRef,anchor);
      }
 else {
        if (exprs.length > 0) {
          anchor=argList.addBefore(fieldRef,exprs[0]);
        }
 else {
          anchor=argList.add(fieldRef);
        }
      }
    }
  }
  if (newQualifier != null) {
    methodRef.getQualifier().replace(newQualifier);
  }
}
