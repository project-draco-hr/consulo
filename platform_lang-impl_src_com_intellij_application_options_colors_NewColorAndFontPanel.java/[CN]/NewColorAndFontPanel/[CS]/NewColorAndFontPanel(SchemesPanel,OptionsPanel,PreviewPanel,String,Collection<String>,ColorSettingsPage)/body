{
  super(new BorderLayout(0,JBUI.scale(10)));
  mySchemesPanel=schemesPanel;
  myOptionsPanel=optionsPanel;
  myPreviewPanel=previewPanel;
  myCategory=category;
  myOptionList=optionList;
  mySettingsPage=page;
  JPanel top=new JPanel(new BorderLayout());
  top.add(mySchemesPanel,BorderLayout.NORTH);
  top.add(myOptionsPanel.getPanel(),BorderLayout.CENTER);
  if (myPreviewPanel.getPanel() != null && (page == null || !StringUtil.isEmptyOrSpaces(page.getDemoText()))) {
    add(top,BorderLayout.NORTH);
    add(myPreviewPanel.getPanel(),BorderLayout.CENTER);
  }
 else {
    add(top,BorderLayout.CENTER);
  }
  previewPanel.addListener(new ColorAndFontSettingsListener.Abstract(){
    @Override public void selectionInPreviewChanged(    final String typeToSelect){
      optionsPanel.selectOption(typeToSelect);
    }
  }
);
  optionsPanel.addListener(new ColorAndFontSettingsListener.Abstract(){
    @Override public void settingsChanged(){
      if (schemesPanel.updateDescription(true)) {
        optionsPanel.applyChangesToScheme();
        previewPanel.updateView();
      }
    }
    @Override public void selectedOptionChanged(    final Object selected){
      if (ApplicationManager.getApplication().isDispatchThread()) {
        myPreviewPanel.blinkSelectedHighlightType(selected);
      }
    }
  }
);
  mySchemesPanel.addListener(new ColorAndFontSettingsListener.Abstract(){
    @Override public void schemeChanged(    final Object source){
      myOptionsPanel.updateOptionsList();
      myPreviewPanel.updateView();
    }
  }
);
}
