{
  super(new BorderLayout());
  myChangeLists=changeLists;
  myChangesTree=new Tree(buildTreeModel());
  myChangesTree.setRootVisible(false);
  myChangesTree.setShowsRootHandles(true);
  myCellRenderer=new CommittedChangeListRenderer();
  myChangesTree.setCellRenderer(myCellRenderer);
  TreeUtil.expandAll(myChangesTree);
  myChangesView=new ChangesBrowser(project,changeLists,Collections.<Change>emptyList(),null,false,false);
  myChangesView.getListPanel().setBorder(null);
  OpenRepositoryVersionAction action=new OpenRepositoryVersionAction();
  action.registerCustomShortcutSet(CommonShortcuts.getEditSource(),this);
  myChangesView.addToolbarAction(action);
  myChangesTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      updateBySelectionChange();
    }
  }
);
  myChangesTree.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    final MouseEvent e){
      final TreePath path=myChangesTree.getPathForLocation(e.getX(),e.getY());
      if (path != null) {
        final Rectangle rectangle=myChangesTree.getPathBounds(path);
        int dx=e.getX() - rectangle.x;
        final DefaultMutableTreeNode treeNode=(DefaultMutableTreeNode)path.getLastPathComponent();
        myCellRenderer.customizeCellRenderer(myChangesTree,treeNode,false,false,false,-1,false);
        int i=myCellRenderer.findFragmentAt(dx);
        if (i >= 0) {
          String text=myCellRenderer.getFragmentText(i);
          if (text.equals(VcsBundle.message("changes.browser.details.marker"))) {
            ChangeListDetailsAction.showDetailsPopup(project,(CommittedChangeList)treeNode.getUserObject());
          }
        }
      }
    }
  }
);
  myLeftPanel=new JPanel(new BorderLayout());
  myChangesTreeScrollPane=new JScrollPane(myChangesTree);
  myFilterSplitter=new Splitter(false,0.5f);
  myFilterSplitter.setSecondComponent(myChangesTreeScrollPane);
  myLeftPanel.add(myFilterSplitter,BorderLayout.CENTER);
  mySplitter=new Splitter(false,0.7f);
  mySplitter.setFirstComponent(myLeftPanel);
  mySplitter.setSecondComponent(myChangesView);
  add(mySplitter,BorderLayout.CENTER);
  updateBySelectionChange();
  ActionManager.getInstance().getAction("CommittedChanges.Details").registerCustomShortcutSet(new CustomShortcutSet(KeymapManager.getInstance().getActiveKeymap().getShortcuts(IdeActions.ACTION_QUICK_JAVADOC)),this);
}
