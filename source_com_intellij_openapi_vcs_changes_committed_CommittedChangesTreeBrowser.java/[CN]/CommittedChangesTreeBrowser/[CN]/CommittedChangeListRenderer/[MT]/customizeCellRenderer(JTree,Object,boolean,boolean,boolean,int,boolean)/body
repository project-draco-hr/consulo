{
  DefaultMutableTreeNode node=(DefaultMutableTreeNode)value;
  if (node.getUserObject() instanceof CommittedChangeList) {
    CommittedChangeList changeList=(CommittedChangeList)node.getUserObject();
    int parentWidth=tree.getParent().getWidth() - 44;
    String date=", " + myDateFormat.format(changeList.getCommitDate());
    final FontMetrics fontMetrics=tree.getFontMetrics(tree.getFont());
    int size=fontMetrics.stringWidth(date);
    size+=tree.getFontMetrics(tree.getFont().deriveFont(Font.BOLD)).stringWidth(changeList.getCommitterName());
    boolean truncated=false;
    String description=changeList.getName().trim();
    int pos=description.indexOf("\n");
    if (pos >= 0) {
      description=description.substring(0,pos).trim();
      truncated=true;
    }
    int descWidth=fontMetrics.stringWidth(description);
    final int descMaxWidth=parentWidth - size - 8;
    if (description.length() == 0 && !truncated) {
      append("<no comment>",SimpleTextAttributes.GRAYED_ATTRIBUTES);
      appendAlign(parentWidth - size);
    }
 else     if (descMaxWidth < 0) {
      myRenderer.appendTextWithLinks(description);
    }
 else     if (descWidth < descMaxWidth && !truncated) {
      myRenderer.appendTextWithLinks(description);
      appendAlign(parentWidth - size);
    }
 else {
      final String moreMarker=VcsBundle.message("changes.browser.details.marker");
      int moreWidth=fontMetrics.stringWidth(moreMarker);
      while (description.length() > 0 && descWidth + moreWidth > descMaxWidth) {
        description=trimLastWord(description);
        descWidth=fontMetrics.stringWidth(description + " ");
      }
      myRenderer.appendTextWithLinks(description);
      append(" ",SimpleTextAttributes.REGULAR_ATTRIBUTES);
      append(moreMarker,LINK_ATTRIBUTES,MORE_TAG);
      appendAlign(parentWidth - size);
    }
    append(changeList.getCommitterName(),SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);
    append(date,SimpleTextAttributes.REGULAR_ATTRIBUTES);
  }
 else   if (node.getUserObject() != null) {
    append(node.getUserObject().toString(),SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);
  }
}
