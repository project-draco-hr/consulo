{
  if (variable == null)   return;
  final RenamePsiElementProcessor processor=RenamePsiElementProcessor.forElement(variable);
  final PsiElement substituted=processor.substituteElementToRename(variable,myEditor);
  if (substituted != null) {
    final RenamePsiElementProcessor substProcessor=RenamePsiElementProcessor.forElement(substituted);
    final LocalSearchScope localSearchScope=new LocalSearchScope(variable.getContainingFile());
    final Collection<PsiReference> references=ReferencesSearch.search(substituted,localSearchScope).findAll();
    CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
      public void run(){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            final HashMap<PsiElement,String> allRenames=new HashMap<PsiElement,String>();
            substProcessor.prepareRenaming(substituted,"",allRenames,localSearchScope);
            if (substituted != variable && substituted instanceof PsiNameIdentifierOwner) {
              ((PsiNameIdentifierOwner)substituted).setName(myOldName);
            }
            for (            PsiElement element : allRenames.keySet()) {
              if (element instanceof PsiNameIdentifierOwner && element != variable) {
                ((PsiNameIdentifierOwner)element).setName(myOldName);
              }
            }
            for (            PsiReference reference : references) {
              reference.handleElementRename(myOldName);
            }
            variable.setName(myOldName);
          }
        }
);
      }
    }
,commandName,null);
  }
}
