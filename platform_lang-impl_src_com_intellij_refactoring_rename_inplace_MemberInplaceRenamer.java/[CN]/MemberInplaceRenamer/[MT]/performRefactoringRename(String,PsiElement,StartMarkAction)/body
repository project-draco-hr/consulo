{
  try {
    final PsiNamedElement variable=getVariable();
    if (variable != null && !newName.equals(myOldName)) {
      RenamePsiElementProcessor processor=RenamePsiElementProcessor.forElement(variable);
      PsiElement substitutedElement=processor.substituteElementToRename(variable,myEditor);
      if (substitutedElement == null) {
        return;
      }
      final RenameDialog dialog=new RenameDialog(myProject,substitutedElement,context,myEditor){
        @Override public String[] getSuggestedNames(){
          return new String[]{newName};
        }
      }
;
      dialog.setPreviewResults(false);
      final String commandName=RefactoringBundle.message("renaming.0.1.to.2",UsageViewUtil.getType(variable),UsageViewUtil.getDescriptiveName(variable),newName);
      restore(variable,commandName);
      CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
        public void run(){
          dialog.performRename(newName);
        }
      }
,commandName,null);
    }
  }
  finally {
    CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
      public void run(){
        FinishMarkAction.finish(myProject,myEditor,markAction);
      }
    }
,RENAME_TITLE,null);
  }
}
