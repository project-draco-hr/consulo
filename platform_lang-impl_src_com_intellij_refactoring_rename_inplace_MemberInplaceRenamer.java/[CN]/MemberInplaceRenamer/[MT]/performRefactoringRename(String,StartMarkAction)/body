{
  try {
    final PsiNamedElement variable=getVariable();
    if (variable != null && !newName.equals(myOldName)) {
      final NamesValidator namesValidator=LanguageNamesValidation.INSTANCE.forLanguage(variable.getLanguage());
      LOG.assertTrue(namesValidator != null);
      if (namesValidator.isIdentifier(newName,myProject)) {
        final PsiElement substituted=getSubstituted();
        if (substituted == null) {
          return;
        }
        final String commandName=RefactoringBundle.message("renaming.0.1.to.2",UsageViewUtil.getType(variable),UsageViewUtil.getDescriptiveName(variable),newName);
        CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
          public void run(){
            performRenameInner(substituted,newName);
            PsiDocumentManager.getInstance(myProject).commitAllDocuments();
          }
        }
,commandName,null);
      }
    }
  }
  finally {
    try {
      ((EditorImpl)InjectedLanguageUtil.getTopLevelEditor(myEditor)).stopDumb();
    }
  finally {
      FinishMarkAction.finish(myProject,myEditor,markAction);
    }
  }
}
