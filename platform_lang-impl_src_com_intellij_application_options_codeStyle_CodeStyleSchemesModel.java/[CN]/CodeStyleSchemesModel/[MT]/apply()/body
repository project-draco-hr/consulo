{
  CodeStyleSettingsManager projectSettingsManager=getProjectSettings();
  projectSettingsManager.USE_PER_PROJECT_SETTINGS=myUsePerProjectSettings;
  projectSettingsManager.PREFERRED_PROJECT_CODE_STYLE=myUsePerProjectSettings || myGlobalSelected == null ? null : myGlobalSelected.getName();
  projectSettingsManager.PER_PROJECT_SETTINGS=myProjectScheme.getCodeStyleSettings();
  final CodeStyleScheme[] savedSchemes=CodeStyleSchemes.getInstance().getSchemes();
  final Set<CodeStyleScheme> savedSchemesSet=new HashSet<CodeStyleScheme>(Arrays.asList(savedSchemes));
  List<CodeStyleScheme> configuredSchemes=getSchemes();
  for (  CodeStyleScheme savedScheme : savedSchemes) {
    if (!configuredSchemes.contains(savedScheme)) {
      CodeStyleSchemes.getInstance().deleteScheme(savedScheme);
    }
  }
  for (  CodeStyleScheme configuredScheme : configuredSchemes) {
    if (!savedSchemesSet.contains(configuredScheme)) {
      CodeStyleSchemes.getInstance().addScheme(configuredScheme);
    }
  }
  CodeStyleSchemes.getInstance().setCurrentScheme(myGlobalSelected);
  mySettingsToClone.clear();
}
