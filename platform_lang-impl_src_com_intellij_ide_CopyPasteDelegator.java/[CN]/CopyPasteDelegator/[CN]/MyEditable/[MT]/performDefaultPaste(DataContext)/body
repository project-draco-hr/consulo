{
  final boolean[] isCopied=new boolean[1];
  final PsiElement[] elements=PsiCopyPasteManager.getInstance().getElements(isCopied);
  if (elements == null)   return false;
  try {
    PsiElement target=LangDataKeys.PASTE_TARGET_PSI_ELEMENT.getData(dataContext);
    if (isCopied[0]) {
      PsiDirectory targetDirectory=target instanceof PsiDirectory ? (PsiDirectory)target : null;
      if (targetDirectory == null && target instanceof PsiDirectoryContainer) {
        final PsiDirectory[] directories=((PsiDirectoryContainer)target).getDirectories();
        if (directories.length > 0) {
          targetDirectory=directories[0];
        }
      }
      if (CopyHandler.canCopy(elements)) {
        CopyHandler.doCopy(elements,targetDirectory);
      }
    }
 else     if (MoveHandler.canMove(elements,target)) {
      MoveHandler.doMove(myProject,elements,target,dataContext,new MoveCallback(){
        public void refactoringCompleted(){
          PsiCopyPasteManager.getInstance().clear();
        }
      }
);
    }
 else {
      return false;
    }
  }
  finally {
    updateView();
  }
  return true;
}
