{
  super(project,false);
  myExistingLists=changelists;
  myProject=project;
  final DefaultComboBoxModel model=new DefaultComboBoxModel();
  for (  ChangeList list : changelists) {
    model.addElement(list);
  }
  myExisitingsCombo.setModel(model);
  if (defaultSelection == null) {
    myExisitingsCombo.setSelectedIndex(0);
  }
 else {
    myExisitingsCombo.setSelectedItem(defaultSelection);
  }
  myRbExisting.addFocusListener(new FocusListener(){
    public void focusGained(    FocusEvent e){
      myExisitingsCombo.requestFocus();
    }
    public void focusLost(    FocusEvent e){
    }
  }
);
  myRbNew.addFocusListener(new FocusListener(){
    public void focusGained(    FocusEvent e){
      myNewListNameField.requestFocus();
    }
    public void focusLost(    FocusEvent e){
    }
  }
);
  myExisitingsCombo.setRenderer(new ColoredListCellRenderer(){
    protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      append(((ChangeList)value).getDescription(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
    }
  }
);
  myRbExisting.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      myExisitingsCombo.setEnabled(myRbExisting.isSelected());
      myNewListNameField.setEnabled(!myRbExisting.isSelected());
    }
  }
);
  if (myExistingLists.size() > 1) {
    myRbExisting.setSelected(true);
  }
 else {
    myRbNew.setSelected(true);
  }
  setTitle("Choose Changelist");
  init();
}
