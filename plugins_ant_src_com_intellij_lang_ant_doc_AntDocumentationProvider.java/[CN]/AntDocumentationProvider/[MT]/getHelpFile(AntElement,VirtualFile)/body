{
  @NonNls final String helpFileShortName;
  if (antElement instanceof AntElementCompletionWrapper) {
    final String name=((AntElementCompletionWrapper)antElement).getName();
    if (name == null) {
      return null;
    }
    helpFileShortName="/" + name.trim() + ".html";
  }
 else {
    final XmlElement xmlElement=antElement.getSourceElement();
    if (!(xmlElement instanceof XmlTag)) {
      return null;
    }
    final XmlTag xmlTag=(XmlTag)xmlElement;
    helpFileShortName="/" + xmlTag.getName() + ".html";
  }
  VirtualFile candidateHelpFile=documentationRoot.findFileByRelativePath(CORE_TASKS_FOLDER_NAME + helpFileShortName);
  if (candidateHelpFile != null) {
    return candidateHelpFile;
  }
  candidateHelpFile=documentationRoot.findFileByRelativePath(OPTIONAL_TASKS_FOLDER_NAME + helpFileShortName);
  if (candidateHelpFile != null) {
    return candidateHelpFile;
  }
  candidateHelpFile=documentationRoot.findFileByRelativePath(CORE_TYPES_FOLDER_NAME + helpFileShortName);
  if (candidateHelpFile != null) {
    return candidateHelpFile;
  }
  candidateHelpFile=documentationRoot.findFileByRelativePath(OPTIONAL_TYPES_FOLDER_NAME + helpFileShortName);
  if (candidateHelpFile != null) {
    return candidateHelpFile;
  }
  if (AntElementRole.TARGET_ROLE.equals(antElement.getRole()) || AntElementRole.PROJECT_ROLE.equals(antElement.getRole())) {
    candidateHelpFile=documentationRoot.findFileByRelativePath("using.html");
    if (candidateHelpFile != null) {
      return candidateHelpFile;
    }
  }
  return null;
}
