{
  if (!(originalElement instanceof AntElement)) {
    return null;
  }
  final File helpFile=getHelpFile(originalElement);
  if (helpFile == null) {
    return null;
  }
  final VirtualFile fileByIoFile=ApplicationManager.getApplication().runReadAction(new Computable<VirtualFile>(){
    public VirtualFile compute(){
      return LocalFileSystem.getInstance().findFileByIoFile(helpFile);
    }
  }
);
  if (fileByIoFile == null) {
    return null;
  }
  final StringBuilder builder=StringBuilderSpinAllocator.alloc();
  try {
    final AntElement antElement=(AntElement)originalElement;
    final String additionalDoc=generateDocForElement(antElement);
    if (additionalDoc != null) {
      builder.append(additionalDoc);
    }
    final String mainDoc=VfsUtil.loadText(fileByIoFile);
    if (mainDoc != null) {
      builder.append(mainDoc);
    }
    return builder.toString();
  }
 catch (  IOException ignored) {
  }
 finally {
    StringBuilderSpinAllocator.dispose(builder);
  }
  return null;
}
