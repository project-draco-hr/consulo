{
  if (oldFileNode.getTextLength() != document.getTextLength()) {
    final String documentText=document.getText();
    String fileText=file.getText();
    boolean sameText=Comparing.equal(fileText,documentText);
    LOG.error("commitDocument() left PSI inconsistent: " + DebugUtil.diagnosePsiDocumentInconsistency(file,document) + "; node.length="+ oldFileNode.getTextLength()+ "; doc.text"+ (sameText ? "==" : "!=")+ "file.text",new Attachment("file psi text",fileText),new Attachment("old text",documentText));
    file.putUserData(BlockSupport.DO_NOT_REPARSE_INCREMENTALLY,Boolean.TRUE);
    try {
      BlockSupport blockSupport=BlockSupport.getInstance(file.getProject());
      final DiffLog diffLog=blockSupport.reparseRange(file,file.getNode(),new TextRange(0,documentText.length()),documentText,createProgressIndicator(),oldFileNode.getText());
      doActualPsiChange(file,diffLog);
      if (oldFileNode.getTextLength() != document.getTextLength()) {
        LOG.error("PSI is broken beyond repair in: " + file);
      }
    }
  finally {
      file.putUserData(BlockSupport.DO_NOT_REPARSE_INCREMENTALLY,null);
    }
  }
}
