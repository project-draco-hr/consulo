{
  final String className=myContainingClass == null ? "???" : myContainingClass.getName();
  final String memberName=myMember.getName();
  if (!Boolean.FALSE.equals(qualify) && (!myShouldImport && StringUtil.isNotEmpty(className) || Boolean.TRUE.equals(qualify))) {
    presentation.setItemText(className + "." + memberName);
  }
 else {
    presentation.setItemText(memberName);
  }
  final String qname=myContainingClass == null ? "" : myContainingClass.getQualifiedName();
  String pkg=StringUtil.getPackageName(qname);
  String location=StringUtil.isEmpty(pkg) ? "" : " (" + pkg + ")";
  final String params=myMergedOverloads ? "(...)" : myMember instanceof PsiMethod ? PsiFormatUtil.formatMethod((PsiMethod)myMember,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE) : "";
  if (myShouldImport && StringUtil.isNotEmpty(className)) {
    presentation.setTailText(params + " in " + className+ location);
  }
 else {
    presentation.setTailText(params + location,!(myMember instanceof PsiMethod));
  }
  final PsiType type=myMember instanceof PsiMethod ? ((PsiMethod)myMember).getReturnType() : ((PsiField)myMember).getType();
  if (type != null) {
    presentation.setTypeText(substitutor.substitute(type).getPresentableText());
  }
}
