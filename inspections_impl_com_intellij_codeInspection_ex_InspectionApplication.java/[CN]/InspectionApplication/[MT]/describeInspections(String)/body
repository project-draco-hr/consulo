{
  final InspectionProfileEntry[] profileEntries=InspectionProfileImpl.DEFAULT_PROFILE.getInspectionTools();
  final Map<String,Set<InspectionProfileEntry>> map=new HashMap<String,Set<InspectionProfileEntry>>();
  for (  InspectionProfileEntry entry : profileEntries) {
    final String groupName=entry.getGroupDisplayName();
    Set<InspectionProfileEntry> groupInspections=map.get(groupName);
    if (groupInspections == null) {
      groupInspections=new HashSet<InspectionProfileEntry>();
      map.put(groupName,groupInspections);
    }
    groupInspections.add(entry);
  }
  FileWriter fw=null;
  try {
    fw=new FileWriter(myOutputPath);
    @NonNls final PrettyPrintWriter xmlWriter=new PrettyPrintWriter(fw);
    xmlWriter.startNode("inspections");
    for (    String groupName : map.keySet()) {
      xmlWriter.startNode("group");
      xmlWriter.addAttribute("group_name",groupName);
      final Set<InspectionProfileEntry> entries=map.get(groupName);
      for (      InspectionProfileEntry entry : entries) {
        xmlWriter.startNode("inspection");
        xmlWriter.addAttribute("short_name",entry.getShortName());
        xmlWriter.addAttribute("display_name",entry.getDisplayName());
        final URL descriptionUrl=InspectionToolRegistrar.getDescriptionUrl(entry);
        if (descriptionUrl != null) {
          final String description=ResourceUtil.loadText(descriptionUrl);
          xmlWriter.setValue(description);
        }
 else {
          LOG.error(entry.getShortName() + " descriptionUrl==null");
        }
        xmlWriter.endNode();
      }
      xmlWriter.endNode();
    }
    xmlWriter.endNode();
  }
  finally {
    if (fw != null) {
      fw.close();
    }
  }
}
