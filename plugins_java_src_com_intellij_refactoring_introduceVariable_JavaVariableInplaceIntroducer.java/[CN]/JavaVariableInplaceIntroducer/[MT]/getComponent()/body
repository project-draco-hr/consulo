{
  if (!myCantChangeFinalModifier) {
    myCanBeFinalCb=new NonFocusableCheckBox("Declare final");
    myCanBeFinalCb.setSelected(createFinals());
    myCanBeFinalCb.setMnemonic('f');
    final FinalListener finalListener=new FinalListener(myEditor);
    myCanBeFinalCb.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        new WriteCommandAction(myProject,getCommandName(),getCommandName()){
          @Override protected void run(          com.intellij.openapi.application.Result result) throws Throwable {
            PsiDocumentManager.getInstance(myProject).commitDocument(myEditor.getDocument());
            final PsiVariable variable=getVariable();
            if (variable != null) {
              finalListener.perform(myCanBeFinalCb.isSelected(),variable);
            }
          }
        }
.execute();
      }
    }
);
  }
 else {
    return null;
  }
  final JPanel panel=new JPanel(new GridBagLayout());
  panel.setBorder(null);
  if (myCanBeFinalCb != null) {
    panel.add(myCanBeFinalCb,new GridBagConstraints(0,1,1,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(5,5,5,5),0,0));
  }
  panel.add(Box.createVerticalBox(),new GridBagConstraints(0,2,1,1,1,1,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
  return panel;
}
