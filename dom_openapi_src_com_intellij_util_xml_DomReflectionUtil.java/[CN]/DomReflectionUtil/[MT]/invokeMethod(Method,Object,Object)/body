{
  try {
    return method.invoke(object,args);
  }
 catch (  IllegalArgumentException e) {
    throw new RuntimeException("Calling method " + method + " on object "+ object+ " with arguments "+ Arrays.asList(args),e);
  }
catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
catch (  InvocationTargetException e) {
    final Throwable cause=e.getCause();
    if (cause instanceof ProcessCanceledException) {
      throw (ProcessCanceledException)cause;
    }
 else     if (cause instanceof Error) {
      throw (Error)cause;
    }
 else     if (cause instanceof RuntimeException) {
      throw (RuntimeException)cause;
    }
    throw new RuntimeException(e);
  }
}
