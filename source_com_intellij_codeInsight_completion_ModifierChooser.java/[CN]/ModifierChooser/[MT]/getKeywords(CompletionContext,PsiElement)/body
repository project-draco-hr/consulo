{
  final List ret=new ArrayList();
  try {
    PsiElement scope;
    if (position == null)     scope=context.file;
 else     scope=position.getParent();
    final PsiModifierList list=getModifierList(position);
    scopes:     while (scope != null) {
      final Iterator iter=myMap.keySet().iterator();
      while (iter.hasNext()) {
        final ElementFilter filter=(ElementFilter)iter.next();
        if (filter.isClassAcceptable(scope.getClass()) && filter.isAcceptable(scope,scope.getParent())) {
          final String[][] keywordSets=(String[][])myMap.get(filter);
          keywordSets:           for (int i=0; i < keywordSets.length; i++) {
            final String[] keywords=keywordSets[keywordSets.length - i - 1];
            boolean containModifierFlag=false;
            if (list != null) {
              for (              String keyword : keywords) {
                if (list.hasModifierProperty(keyword)) {
                  containModifierFlag=true;
                  break;
                }
              }
            }
            if (!containModifierFlag) {
              ret.addAll(Arrays.asList(keywords));
            }
          }
          break scopes;
        }
      }
      scope=scope.getParent();
      if (scope instanceof PsiDirectory)       break;
    }
  }
 catch (  Exception e) {
  }
  return (String[])ret.toArray(new String[ret.size()]);
}
