{
  if (member.hasModifierProperty(PsiModifier.STATIC) && myResolveHelper.isAccessible(member,myPosition,null)) {
    final PsiClass containingClass=member.getContainingClass();
    if (containingClass != null) {
      if (!JavaCompletionUtil.isInExcludedPackage(containingClass) && (!(member instanceof PsiMethod) || !StaticImportMethodFix.isExcluded((PsiMethod)member))) {
        final boolean shouldImport=myStaticImportedClasses.contains(containingClass);
        if (!myHintShown && !shouldImport && FeatureUsageTracker.getInstance().isToBeShown(JavaCompletionFeatures.IMPORT_STATIC,myProject)&& CompletionService.getCompletionService().getAdvertisementText() == null) {
          final String shortcut=CompletionContributor.getActionShortcut("EditorRight");
          if (shortcut != null) {
            CompletionService.getCompletionService().setAdvertisementText("To import a method statically, press " + shortcut);
          }
          myHintShown=true;
        }
        consumer.consume(createLookupElement(member,containingClass,shouldImport));
      }
    }
  }
}
