{
  final Consumer<LookupElement> consumer=new Consumer<LookupElement>(){
    @Override public void consume(    LookupElement element){
      resultSet.addElement(element);
    }
  }
;
  final PrefixMatcher matcher=resultSet.getPrefixMatcher();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(myProject);
  final PsiShortNamesCache namesCache=JavaPsiFacade.getInstance(myProject).getShortNamesCache();
  final String[] methodNames=ApplicationManager.getApplication().runReadAction(new Computable<String[]>(){
    public String[] compute(){
      return namesCache.getAllMethodNames();
    }
  }
);
  for (  final String methodName : methodNames) {
    if (matcher.prefixMatches(methodName)) {
      final PsiMethod[] methods=ApplicationManager.getApplication().runReadAction(new Computable<PsiMethod[]>(){
        public PsiMethod[] compute(){
          return namesCache.getMethodsByName(methodName,scope);
        }
      }
);
      for (      final PsiMethod method : methods) {
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          public void run(){
            processMember(method,consumer);
          }
        }
);
      }
    }
  }
}
