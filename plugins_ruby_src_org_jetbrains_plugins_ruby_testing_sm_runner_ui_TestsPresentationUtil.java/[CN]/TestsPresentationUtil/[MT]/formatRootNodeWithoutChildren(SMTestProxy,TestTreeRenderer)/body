{
  final TestStateInfo.Magnitude magnitude=testProxy.getMagnitudeInfo();
  if (magnitude == TestStateInfo.Magnitude.RUNNING_INDEX) {
    renderer.setIcon(getIcon(testProxy,renderer.getConsoleProperties()));
    renderer.append(RBundle.message("sm.test.runner.ui.tests.tree.presentation.labels.instantiating.tests"),SimpleTextAttributes.REGULAR_ATTRIBUTES);
  }
 else   if (magnitude == TestStateInfo.Magnitude.NOT_RUN_INDEX) {
    renderer.setIcon(PoolOfTestIcons.NOT_RAN);
    renderer.append(RBundle.message("sm.test.runner.ui.tests.tree.presentation.labels.not.test.results"),SimpleTextAttributes.ERROR_ATTRIBUTES);
  }
 else   if (magnitude == TestStateInfo.Magnitude.TERMINATED_INDEX) {
    renderer.setIcon(PoolOfTestIcons.TERMINATED_ICON);
    renderer.append(RBundle.message("sm.test.runner.ui.tests.tree.presentation.labels.was.terminated"),SimpleTextAttributes.REGULAR_ATTRIBUTES);
  }
 else   if (magnitude == TestStateInfo.Magnitude.PASSED_INDEX) {
    renderer.setIcon(PoolOfTestIcons.PASSED_ICON);
    renderer.append(RBundle.message("sm.test.runner.ui.tests.tree.presentation.labels.all.tests.passed"),SimpleTextAttributes.REGULAR_ATTRIBUTES);
  }
 else {
    renderer.setIcon(PoolOfTestIcons.NOT_RAN);
    renderer.append(RBundle.message("sm.test.runner.ui.tests.tree.presentation.labels.no.tests.were.found"),SimpleTextAttributes.ERROR_ATTRIBUTES);
  }
}
