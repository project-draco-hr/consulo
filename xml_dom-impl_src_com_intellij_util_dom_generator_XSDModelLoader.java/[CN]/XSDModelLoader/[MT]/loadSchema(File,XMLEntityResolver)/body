{
  System.setProperty(DOMImplementationRegistry.PROPERTY,"org.apache.xerces.dom.DOMXSImplementationSourceImpl");
  DOMImplementationRegistry registry=DOMImplementationRegistry.newInstance();
  XSImplementation impl=(XSImplementation)registry.getDOMImplementation("XS-Loader");
  XSLoader schemaLoader=impl.createXSLoader(null);
  DOMConfiguration config=schemaLoader.getConfig();
  DOMErrorHandler errorHandler=new DOMErrorHandler(){
    public boolean handleError(    DOMError domError){
      Util.log("DOMError: " + domError.getMessage());
      Object relatedException=domError.getRelatedException();
      if (relatedException != null) {
        Util.log("DOMError: " + relatedException);
        if (relatedException instanceof Throwable) {
          ((Throwable)relatedException).printStackTrace(System.out);
        }
      }
      return false;
    }
  }
;
  config.setParameter("error-handler",errorHandler);
  config.setParameter("validate",Boolean.TRUE);
  config.setParameter("error-handler",errorHandler);
  config.setParameter("http://apache.org/xml/properties/internal/entity-resolver",resolver);
  XSModel model=schemaLoader.loadURI(schemaFile.getAbsolutePath());
  if (model == null)   return null;
  XSNamedMap components=model.getComponents(XSConstants.ELEMENT_DECLARATION);
  for (int i=0; i < components.getLength(); i++) {
    XSObject obj=components.item(i);
    QName qname=new QName(obj.getNamespace(),obj.getName());
    String file=this.model.qname2FileMap.get(qname);
    this.model.qname2FileMap.put(qname,(file == null ? "" : file + ";") + schemaFile.getName());
  }
  components=model.getComponents(XSConstants.TYPE_DEFINITION);
  for (int i=0; i < components.getLength(); i++) {
    XSObject obj=components.item(i);
    QName qname=new QName(obj.getNamespace(),obj.getName());
    String file=this.model.qname2FileMap.get(qname);
    this.model.qname2FileMap.put(qname,(file == null ? "" : file) + ":" + schemaFile.getName()+ ":");
  }
  return model;
}
