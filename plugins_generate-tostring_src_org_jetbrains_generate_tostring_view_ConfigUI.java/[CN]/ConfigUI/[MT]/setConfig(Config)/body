{
  fullyQualifiedName.setSelected(config.isUseFullyQualifiedName());
  DuplicatonPolicy option=config.getReplaceDialogInitialOption();
  for (  JRadioButton anInitialValueForReplaceDialog : initialValueForReplaceDialog) {
    if (anInitialValueForReplaceDialog.getText().equals(option.toString())) {
      anInitialValueForReplaceDialog.setSelected(true);
    }
  }
  InsertWhere option2=config.getInsertNewMethodInitialOption();
  for (  JRadioButton anInitialValueForNewMethodDialog : initialValueForNewMethodDialog) {
    if (anInitialValueForNewMethodDialog.getText().equals(option2.toString())) {
      anInitialValueForNewMethodDialog.setSelected(true);
    }
  }
  filterConstant.setSelected(config.isFilterConstantField());
  filterEnum.setSelected(config.isFilterEnumField());
  filterStatic.setSelected(config.isFilterStaticModifier());
  filterTransient.setSelected(config.isFilterTransientModifier());
  filterLoggers.setSelected(config.isFilterLoggers());
  enableMethods.setSelected(config.isEnableMethods());
  moveCaretToMethod.setSelected(config.isJumpToMethod());
  sortElements.setSelected(config.getSortElements() != 0);
  sortElementsComboBox.setEnabled(sortElements.isSelected());
  if (config.getSortElements() == 0 || config.getSortElements() == 1) {
    sortElementsComboBox.setSelectedIndex(0);
  }
 else   if (config.getSortElements() == 2) {
    sortElementsComboBox.setSelectedIndex(1);
  }
}
