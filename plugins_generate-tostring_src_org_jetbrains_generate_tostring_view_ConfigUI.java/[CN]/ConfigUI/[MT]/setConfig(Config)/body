{
  fullyQualifiedName.setSelected(config.isUseFullyQualifiedName());
  fieldChooseDialog.setSelected(config.isUseFieldChooserDialog());
  useDefaultConflict.setSelected(config.isUseDefaultAlways());
  ConflictResolutionPolicy option=config.getReplaceDialogInitialOption();
  for (int i=0; i < initialValueForReplaceDialog.length; i++) {
    if (initialValueForReplaceDialog[i].getText().equals(option.toString())) {
      initialValueForReplaceDialog[i].setSelected(true);
    }
  }
  InsertNewMethodPolicy option2=config.getInsertNewMethodInitialOption();
  for (int i=0; i < initialValueForNewMethodDialog.length; i++) {
    if (initialValueForNewMethodDialog[i].getText().equals(option2.toString())) {
      initialValueForNewMethodDialog[i].setSelected(true);
    }
  }
  if (StringUtil.isEmpty(config.getMethodBody())) {
    methodBody.setText(TemplateResourceLocator.getDefaultTemplateBody());
    activeTemplate.setTemplate(methodBody.getText());
  }
 else {
    methodBody.setText(config.getMethodBody());
    activeTemplate.setTemplate(config.getMethodBody());
  }
  methodBody.setCaretPosition(0);
  filterConstant.setSelected(config.isFilterConstantField());
  filterEnum.setSelected(config.isFilterEnumField());
  filterStatic.setSelected(config.isFilterStaticModifier());
  filterTransient.setSelected(config.isFilterTransientModifier());
  filterLoggers.setSelected(config.isFilterLoggers());
  filterFieldName.setText(config.getFilterFieldName());
  filterFieldType.setText(config.getFilterFieldType());
  filterMethodName.setText(config.getFilterMethodName());
  filterMethodType.setText(config.getFilterMethodType());
  autoAddImplementsSerializable.setSelected(config.isAddImplementSerializable());
  autoImport.setSelected(config.isAutoImports());
  autoImportPackages.setText(config.getAutoImportsPackages());
  autoImportPackages.setEnabled(autoImport.isSelected());
  enableInspectionOnTheFly.setSelected(config.inspectionOnTheFly);
  enableMethods.setSelected(config.isEnableMethods());
  enableTemplateQuickList.setSelected(config.isEnableTemplateQuickList());
  templateQuickSelectionConfigUI.initTemplateQuickSelectionList(config.getSelectedQuickTemplates());
  moveCaretToMethod.setSelected(config.isJumpToMethod());
  sortElements.setSelected(config.getSortElements() != 0);
  sortElementsComboBox.setEnabled(sortElements.isSelected());
  if (config.getSortElements() == 0 || config.getSortElements() == 1) {
    sortElementsComboBox.setSelectedIndex(0);
  }
 else   if (config.getSortElements() == 2) {
    sortElementsComboBox.setSelectedIndex(1);
  }
}
