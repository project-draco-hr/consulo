{
  Config config=new Config();
  config.setUseFullyQualifiedName(fullyQualifiedName.isSelected());
  for (  JRadioButton anInitialValueForReplaceDialog : initialValueForReplaceDialog) {
    if (anInitialValueForReplaceDialog.isSelected()) {
      config.setReplaceDialogInitialOption(((ConflictResolutionOptionAction)anInitialValueForReplaceDialog.getAction()).option);
    }
  }
  for (  JRadioButton anInitialValueForNewMethodDialog : initialValueForNewMethodDialog) {
    if (anInitialValueForNewMethodDialog.isSelected()) {
      config.setInsertNewMethodInitialOption(((InsertNewMethodOptionAction)anInitialValueForNewMethodDialog.getAction()).option);
    }
  }
  config.setFilterConstantField(filterConstant.isSelected());
  config.setFilterEnumField(filterEnum.isSelected());
  config.setFilterTransientModifier(filterTransient.isSelected());
  config.setFilterLoggers(filterLoggers.isSelected());
  config.setFilterStaticModifier(filterStatic.isSelected());
  config.setFilterFieldName(emptyToNull(filterFieldName.getText()));
  config.setFilterFieldType(emptyToNull(filterFieldType.getText()));
  config.setFilterMethodName(emptyToNull(filterMethodName.getText()));
  config.setFilterMethodType(emptyToNull(filterMethodType.getText()));
  config.setAddImplementSerializable(autoAddImplementsSerializable.isSelected());
  config.setEnableMethods(enableMethods.isSelected());
  config.setJumpToMethod(moveCaretToMethod.isSelected());
  if (!sortElements.isSelected()) {
    config.setSortElements(0);
  }
 else   if (sortElementsComboBox.getSelectedIndex() == 0) {
    config.setSortElements(1);
  }
 else {
    config.setSortElements(2);
  }
  return config;
}
