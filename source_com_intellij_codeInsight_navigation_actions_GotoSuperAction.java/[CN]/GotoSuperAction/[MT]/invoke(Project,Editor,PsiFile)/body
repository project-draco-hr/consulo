{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  if (new HighlightDefUseHandler().invoke(true,project,editor,file))   return;
  int offset=editor.getCaretModel().getOffset();
  PsiElement[] superElements=findSuperElements(file,offset);
  if (superElements == null || superElements.length == 0)   return;
  if (superElements.length == 1) {
    PsiElement superElement=superElements[0].getNavigationElement();
    OpenFileDescriptor descriptor=new OpenFileDescriptor(project,superElement.getContainingFile().getVirtualFile(),superElement.getTextOffset());
    FileEditorManager.getInstance(project).openTextEditor(descriptor,true);
  }
 else {
    String title=" Choose super " + (superElements[0] instanceof PsiMethod ? "method " : "class or interface ");
    ListPopup listPopup=NavigationUtil.getPsiElementPopup(superElements,title,project);
    LogicalPosition caretPosition=editor.getCaretModel().getLogicalPosition();
    Point caretLocation=editor.logicalPositionToXY(caretPosition);
    int x=caretLocation.x;
    int y=caretLocation.y;
    Point location=editor.getContentComponent().getLocationOnScreen();
    x+=location.x;
    y+=location.y;
    listPopup.show(x,y);
  }
}
