{
  super(parent,sourceElement,definition);
  final AntFile imported=getFile();
  if (imported != null) {
    imported.getChildren();
    final AntFile file=getAntFile();
    final AntFileImpl importedFile=(AntFileImpl)imported;
    for (    AntTypeDefinition def : importedFile.getBaseTypeDefinitions()) {
      if (file.getBaseTypeDefinition(def.getClassName()) == null) {
        registerCustomType(def);
      }
    }
    final AntProject project=getAntProject();
    final AntProjectImpl importedProject=(AntProjectImpl)importedFile.getAntProject();
    final AntElement[] importedChildren=importedProject.getChildren();
    if (importedChildren.length > 0) {
      for (      PsiElement prop : importedProject.getProperties()) {
        project.setProperty(((PsiNamedElement)prop).getName(),prop);
      }
      AntStructuredElement firstChild=PsiTreeUtil.getChildOfType(importedProject,AntStructuredElement.class);
      if (firstChild != null) {
        for (        String id : importedProject.getRefIds()) {
          project.registerRefId(id,firstChild.getElementByRefId(id));
        }
      }
    }
  }
}
