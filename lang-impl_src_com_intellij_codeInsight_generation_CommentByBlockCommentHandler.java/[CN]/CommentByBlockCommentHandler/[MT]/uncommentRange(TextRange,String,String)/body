{
  CharSequence chars=myDocument.getCharsSequence();
  int startOffset=range.getStartOffset();
  boolean endsProperly=CharArrayUtil.regionMatches(chars,range.getEndOffset() - commentSuffix.length(),commentSuffix);
  int delOffset1=startOffset;
  int delOffset2=startOffset + commentPrefix.length();
  int offset1=CharArrayUtil.shiftBackward(chars,delOffset1 - 1," \t");
  if (offset1 < 0 || chars.charAt(offset1) == '\n' || chars.charAt(offset1) == '\r') {
    int offset2=CharArrayUtil.shiftForward(chars,delOffset2," \t");
    if (offset2 == myDocument.getTextLength() || chars.charAt(offset2) == '\r' || chars.charAt(offset2) == '\n') {
      delOffset1=offset1 + 1;
      if (offset2 < myDocument.getTextLength()) {
        delOffset2=offset2 + 1;
        if (chars.charAt(offset2) == '\r' && offset2 + 1 < myDocument.getTextLength() && chars.charAt(offset2 + 1) == '\n') {
          delOffset2++;
        }
      }
    }
  }
  myDocument.deleteString(delOffset1,delOffset2);
  chars=myDocument.getCharsSequence();
  if (endsProperly) {
    int shift=delOffset2 - delOffset1;
    int delOffset3=range.getEndOffset() - shift - commentSuffix.length();
    int delOffset4=range.getEndOffset() - shift;
    int offset3=CharArrayUtil.shiftBackward(chars,delOffset3 - 1," \t");
    if (offset3 < 0 || chars.charAt(offset3) == '\n' || chars.charAt(offset3) == '\r') {
      int offset4=CharArrayUtil.shiftForward(chars,delOffset4," \t");
      if (offset4 == myDocument.getTextLength() || chars.charAt(offset4) == '\r' || chars.charAt(offset4) == '\n') {
        delOffset3=offset3 + 1;
        if (offset4 < myDocument.getTextLength()) {
          delOffset4=offset4 + 1;
          if (chars.charAt(offset4) == '\r' && offset4 + 1 < myDocument.getTextLength() && chars.charAt(offset4 + 1) == '\n') {
            delOffset4++;
          }
        }
      }
    }
    myDocument.deleteString(delOffset3,delOffset4);
  }
}
