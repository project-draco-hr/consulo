{
  final CharSequence text=myDocument.getCharsSequence();
  final FileType fileType=myFile.getFileType();
  if (fileType instanceof AbstractFileType) {
    Lexer lexer=new CustomFileTypeLexer(((AbstractFileType)fileType).getSyntaxTable());
    final int caretOffset=myEditor.getCaretModel().getOffset();
    int commentStart=CharArrayUtil.lastIndexOf(text,commenter.getBlockCommentPrefix(),caretOffset);
    if (commentStart == -1)     return null;
    lexer.start(text,commentStart,text.length(),0);
    if (lexer.getTokenType() == CustomHighlighterTokenType.MULTI_LINE_COMMENT && lexer.getTokenEnd() >= caretOffset) {
      return new TextRange(commentStart,lexer.getTokenEnd());
    }
    return null;
  }
  final String prefix=trim(commenter.getBlockCommentPrefix());
  final String suffix=trim(commenter.getBlockCommentSuffix());
  if (prefix == null || suffix == null)   return null;
  if (!testSelectionForNonComments()) {
    return null;
  }
  TextRange commentedRange=getSelectedComments(text,prefix,suffix);
  if (commentedRange == null) {
    PsiElement comment=findCommentAtCaret();
    if (comment != null) {
      String commentText=comment.getText();
      if (commentText.startsWith(prefix) && commentText.endsWith(suffix)) {
        commentedRange=comment.getTextRange();
      }
    }
  }
  return commentedRange;
}
