{
  super.update(e);
  DataContext dataContext=e.getDataContext();
  Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  Presentation presentation=e.getPresentation();
  if (presentation.isEnabled()) {
    Module module=LangDataKeys.MODULE.getData(dataContext);
    if (module != null) {
      IdeView view=LangDataKeys.IDE_VIEW.getData(dataContext);
      if (view != null) {
        ProjectFileIndex projectFileIndex=ProjectRootManager.getInstance(project).getFileIndex();
        PsiDirectory[] dirs=view.getDirectories();
        boolean inSourceRoot=false;
        for (        PsiDirectory dir : dirs) {
          String packageName=projectFileIndex.getPackageNameByDirectory(dir.getVirtualFile());
          if (projectFileIndex.isInSourceContent(dir.getVirtualFile()) && packageName != null) {
            inSourceRoot=true;
            break;
          }
        }
        if (!inSourceRoot)         return;
      }
    }
    presentation.setEnabled(false);
    presentation.setVisible(false);
  }
  final FileTypeManager manager=FileTypeManager.getInstance();
  final FileType fileType=manager.getFileTypeByExtension(HtmlFileType.DOT_DEFAULT_EXTENSION);
  if (fileType == FileTypes.PLAIN_TEXT) {
    presentation.setEnabled(false);
    presentation.setVisible(false);
  }
}
