{
  Collection<VirtualFile> defaultTemplates=getDefaultTemplates();
  for (  VirtualFile file : defaultTemplates) {
    if (file.getName().equals("default.html")) {
      myDefaultDescription=file;
    }
  }
  File templateDir=getParentDirectory(false);
  File[] files=templateDir.listFiles();
  if (files == null) {
    files=ArrayUtil.EMPTY_FILE_ARRAY;
  }
  if (myTemplates == null) {
    myTemplates=new MyTemplates();
  }
  List<FileTemplate> existingTemplates=new ArrayList<FileTemplate>();
  for (  File file : files) {
    if (file.isDirectory() || FileTypeManagerEx.getInstance().isFileIgnored(file.getName())) {
      continue;
    }
    String name=file.getName();
    String extension=myTypeManager.getExtension(name);
    name=name.substring(0,name.length() - extension.length() - 1);
    if (file.isHidden() || name.length() == 0) {
      continue;
    }
    FileTemplate existing=myTemplates.findByName(name);
    if (existing == null || existing.isDefault()) {
      if (existing != null) {
        myTemplates.removeTemplate(existing);
      }
      FileTemplateImpl fileTemplate=new FileTemplateImpl(file,name,extension,false);
      myTemplates.addTemplate(fileTemplate);
      existingTemplates.add(fileTemplate);
    }
 else {
      LOG.assertTrue(!((FileTemplateImpl)existing).isModified());
      ((FileTemplateImpl)existing).invalidate();
      existingTemplates.add(existing);
    }
  }
  LOG.debug("FileTemplateManagerImpl.loadTemplates() reading default templates...");
  for (  VirtualFile file : defaultTemplates) {
    if (FileTypeManagerEx.getInstance().isFileIgnored(file))     continue;
    String name=file.getName();
    @NonNls String extension=myTypeManager.getExtension(name);
    name=name.substring(0,name.length() - extension.length() - 1);
    if (extension.equals("html")) {
      continue;
    }
    if (!extension.equals(DEFAULT_TEMPLATE_EXTENSION)) {
      LOG.error(file.toString() + " should have *." + DEFAULT_TEMPLATE_EXTENSION+ " extension!");
    }
    extension=myTypeManager.getExtension(name);
    name=name.substring(0,name.length() - extension.length() - 1);
    FileTemplate aTemplate=myTemplates.findByName(name);
    if (aTemplate == null) {
      FileTemplate fileTemplate=new FileTemplateImpl(file,name,extension);
      myTemplates.addTemplate(fileTemplate);
      aTemplate=fileTemplate;
    }
    VirtualFile description=getDescriptionForTemplate(file);
    if (description != null) {
      ((FileTemplateImpl)aTemplate).setDescription(description);
    }
  }
  FileTemplate[] allTemplates=myTemplates.getAllTemplates();
  for (  FileTemplate template : allTemplates) {
    FileTemplateImpl templateImpl=(FileTemplateImpl)template;
    if (!templateImpl.isDefault()) {
      if (!existingTemplates.contains(templateImpl)) {
        if (!templateImpl.isNew()) {
          myTemplates.removeTemplate(templateImpl);
          templateImpl.removeFromDisk();
        }
      }
    }
  }
}
