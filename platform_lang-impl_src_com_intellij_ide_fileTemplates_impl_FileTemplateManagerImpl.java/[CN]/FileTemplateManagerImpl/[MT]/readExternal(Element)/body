{
  Element deletedTemplatesElement=element.getChild(ELEMENT_DELETED_TEMPLATES);
  if (deletedTemplatesElement != null) {
    myDeletedTemplatesManager.readExternal(deletedTemplatesElement);
  }
  Element deletedIncludesElement=element.getChild(ELEMENT_DELETED_INCLUDES);
  if (deletedIncludesElement != null) {
    myPatternsManager.myDeletedTemplatesManager.readExternal(deletedIncludesElement);
  }
  Element recentElement=element.getChild(ELEMENT_RECENT_TEMPLATES);
  if (recentElement != null) {
    myRecentList.readExternal(recentElement);
  }
  Element templatesElement=element.getChild(ELEMENT_TEMPLATES);
  if (templatesElement != null) {
    invalidate();
    List children=templatesElement.getChildren();
    notAdjusted.clear();
    for (    final Object aChildren : children) {
      Element child=(Element)aChildren;
      String name=child.getAttributeValue(ATTRIBUTE_NAME);
      boolean reformat=Boolean.TRUE.toString().equals(child.getAttributeValue(ATTRIBUTE_REFORMAT));
      if (!reformat) {
        notAdjusted.add(name);
      }
    }
  }
}
