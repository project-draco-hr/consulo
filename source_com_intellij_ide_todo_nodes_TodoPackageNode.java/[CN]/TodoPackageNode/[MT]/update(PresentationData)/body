{
  super.update(data);
  final PackageElement packageElement=getValue();
  if (packageElement == null || !packageElement.getPackage().isValid()) {
    setValue(null);
    return;
  }
  int fileCount=getStructure().getFileCount(packageElement);
  if (fileCount == 0) {
    setValue(null);
    return;
  }
  PsiPackage aPackage=packageElement.getPackage();
  String newName;
  if (getStructure().areFlattenPackages()) {
    newName=aPackage.getQualifiedName();
  }
 else {
    newName=myPresentationName != null ? myPresentationName : "";
  }
  int nameEndOffset=newName.length();
  int todoItemCount=getStructure().getTodoItemCount(packageElement);
  newName=IdeBundle.message("node.todo.group",newName,todoItemCount,fileCount);
  myHighlightedRegions.clear();
  TextAttributes textAttributes=new TextAttributes();
  Color newColor=null;
  if (CopyPasteManager.getInstance().isCutElement(packageElement)) {
    newColor=CopyPasteManager.CUT_COLOR;
  }
  textAttributes.setForegroundColor(newColor);
  myHighlightedRegions.add(new HighlightedRegion(0,nameEndOffset,textAttributes));
  EditorColorsScheme colorsScheme=UsageTreeColorsScheme.getInstance().getScheme();
  myHighlightedRegions.add(new HighlightedRegion(nameEndOffset,newName.length(),colorsScheme.getAttributes(UsageTreeColors.NUMBER_OF_USAGES)));
  data.setPresentableText(newName);
}
