{
  ArrayList<AbstractTreeNode> children=new ArrayList<AbstractTreeNode>();
  final Project project=getProject();
  final ProjectFileIndex projectFileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  final PsiPackage psiPackage=getValue().getPackage();
  final Module module=getValue().getModule();
  if (!getStructure().getIsFlattenPackages() || psiPackage == null) {
    final Iterator<PsiFile> iterator=myBuilder.getFiles(getValue());
    while (iterator.hasNext()) {
      final PsiFile psiFile=iterator.next();
      final Module psiFileModule=projectFileIndex.getModuleForFile(psiFile.getVirtualFile());
      if (module != null && psiFileModule != null && !module.equals(psiFileModule)) {
        continue;
      }
      final PsiDirectory containingDirectory=psiFile.getContainingDirectory();
      TodoFileNode todoFileNode=new TodoFileNode(project,psiFile,myBuilder,false);
      if (ArrayUtil.find(psiPackage.getDirectories(),containingDirectory) > -1 && !children.contains(todoFileNode)) {
        children.add(todoFileNode);
        continue;
      }
      PsiDirectory _dir=psiFile.getContainingDirectory();
      while (_dir != null) {
        final PsiDirectory parentDirectory=_dir.getParentDirectory();
        if (parentDirectory != null) {
          PsiPackage _package=_dir.getPackage();
          if (_package != null && _package.getParentPackage() != null && psiPackage.equals(_package.getParentPackage())) {
            final GlobalSearchScope scope=module != null ? GlobalSearchScope.moduleScope(module) : GlobalSearchScope.projectScope(project);
            _package=TodoPackageUtil.findNonEmptyPackage(_package,module,project,myBuilder,scope);
            final String name=_package.getParentPackage().equals(psiPackage) ? null : _package.getQualifiedName().substring(psiPackage.getQualifiedName().length() + 1);
            TodoPackageNode todoPackageNode=new TodoPackageNode(project,new PackageElement(module,_package,false),myBuilder,name);
            if (!children.contains(todoPackageNode)) {
              children.add(todoPackageNode);
              break;
            }
          }
        }
        _dir=parentDirectory;
      }
    }
    Collections.sort(children,TodoFileDirAndModuleComparator.ourInstance);
  }
 else {
    final Iterator<PsiFile> iterator=myBuilder.getFiles(getValue());
    while (iterator.hasNext()) {
      final PsiFile psiFile=iterator.next();
      final Module psiFileModule=projectFileIndex.getModuleForFile(psiFile.getVirtualFile());
      if (module != null && psiFileModule != null && !module.equals(psiFileModule)) {
        continue;
      }
      final PsiDirectory _dir=psiFile.getContainingDirectory();
      TodoFileNode todoFileNode=new TodoFileNode(getProject(),psiFile,myBuilder,false);
      if (ArrayUtil.find(psiPackage.getDirectories(),_dir) > -1 && !children.contains(todoFileNode)) {
        children.add(todoFileNode);
        continue;
      }
    }
    Collections.sort(children,TodoFileDirAndModuleComparator.ourInstance);
  }
  return children;
}
