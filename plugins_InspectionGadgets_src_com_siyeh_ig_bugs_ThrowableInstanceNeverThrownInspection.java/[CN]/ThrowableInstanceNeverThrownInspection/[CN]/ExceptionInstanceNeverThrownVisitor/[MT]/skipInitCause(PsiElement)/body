{
  if (!(parent instanceof PsiReferenceExpression)) {
    return null;
  }
  final PsiElement grandParent=parent.getParent();
  if (!(grandParent instanceof PsiMethodCallExpression)) {
    return null;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
  final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
  final String methodName=methodExpression.getReferenceName();
  if (!"initCause".equals(methodName)) {
    return null;
  }
  final PsiMethod method=methodCallExpression.resolveMethod();
  if (method == null) {
    return null;
  }
  final PsiParameterList parameterList=method.getParameterList();
  if (parameterList.getParametersCount() != 1) {
    return null;
  }
  final PsiParameter[] parameters=parameterList.getParameters();
  final PsiType type=parameters[0].getType();
  if (!type.equalsToText(CommonClassNames.JAVA_LANG_THROWABLE)) {
    return null;
  }
  return getParent(methodCallExpression.getParent());
}
