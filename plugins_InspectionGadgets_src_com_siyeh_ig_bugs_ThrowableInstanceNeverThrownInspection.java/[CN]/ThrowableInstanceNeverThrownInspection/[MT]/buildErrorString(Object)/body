{
  final PsiExpression expression=(PsiExpression)infos[0];
  final String type=TypeUtils.expressionHasTypeOrSubtype(expression,"java.lang.RuntimeException","java.lang.Exception","java.lang.Error");
  if ("java.lang.RuntimeException".equals(type)) {
    return InspectionGadgetsBundle.message("throwable.instance.never.thrown.runtime.exception.problem.descriptor");
  }
 else   if ("java.lang.Exception".equals(type)) {
    return InspectionGadgetsBundle.message("throwable.instance.never.thrown.checked.exception.problem.descriptor");
  }
 else   if ("java.lang.Error".equals(type)) {
    return InspectionGadgetsBundle.message("throwable.instance.never.thrown.error.problem.descriptor");
  }
 else {
    return InspectionGadgetsBundle.message("throwable.instance.never.thrown.problem.descriptor");
  }
}
