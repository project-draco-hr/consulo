{
  final PsiElement parent=expression.getParent();
  final PsiExpression child=expression.getExpression();
  if (child == null) {
    return;
  }
  if (!(parent instanceof PsiExpression) || parent instanceof PsiParenthesizedExpression) {
    registerError(expression);
    return;
  }
  final int parentPrecedence=ParenthesesUtils.getPrecedence((PsiExpression)parent);
  final int childPrecedence=ParenthesesUtils.getPrecedence(child);
  if (parentPrecedence > childPrecedence) {
    if (ignoreClarifyingParentheses) {
      if (parent instanceof PsiPolyadicExpression && child instanceof PsiPolyadicExpression) {
        return;
      }
 else       if (child instanceof PsiInstanceOfExpression) {
        return;
      }
    }
    if (ignoreParenthesesOnConditionals) {
      if (parent instanceof PsiConditionalExpression) {
        final PsiConditionalExpression conditionalExpression=(PsiConditionalExpression)parent;
        final PsiExpression condition=conditionalExpression.getCondition();
        if (expression == condition) {
          return;
        }
      }
    }
    registerError(expression);
    return;
  }
  if (parentPrecedence == childPrecedence) {
    if (!ParenthesesUtils.areParenthesesNeeded(expression,ignoreClarifyingParentheses)) {
      registerError(expression);
      return;
    }
  }
  super.visitParenthesizedExpression(expression);
}
