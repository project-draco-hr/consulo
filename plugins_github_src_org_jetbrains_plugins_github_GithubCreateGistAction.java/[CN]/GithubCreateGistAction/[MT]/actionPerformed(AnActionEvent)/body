{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null || project.isDefault()) {
    return;
  }
  final Editor editor=e.getData(PlatformDataKeys.EDITOR);
  final VirtualFile file=e.getData(PlatformDataKeys.VIRTUAL_FILE);
  final VirtualFile[] files=e.getData(PlatformDataKeys.VIRTUAL_FILE_ARRAY);
  if (editor == null && file == null && files == null) {
    return;
  }
  final GitHubCreateGistDialog dialog=new GitHubCreateGistDialog(project);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  final boolean anonymous=dialog.isAnonymous();
  if (!anonymous) {
    if (!GithubUtil.checkCredentials(project)) {
      final GithubLoginDialog loginDialog=new GithubLoginDialog(project);
      loginDialog.show();
      if (!loginDialog.isOK()) {
        showError(project,FAILED_TO_CREATE_GIST,"You have to login to GitHub to create non-anonymous Gists.",null,null);
        return;
      }
    }
  }
  GithubSettings settings=GithubSettings.getInstance();
  createGistWithProgress(project,editor,file,files,settings.getLogin(),settings.getPassword(),dialog.getDescription(),dialog.isPrivate(),anonymous,new Consumer<String>(){
    @Override public void consume(    String url){
      if (url == null) {
        return;
      }
      if (dialog.isOpenInBrowser()) {
        BrowserUtil.launchBrowser(url);
      }
 else {
        showNotificationWithLink(project,url);
      }
    }
  }
);
}
