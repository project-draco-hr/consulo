{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null || project.isDefault()) {
    return;
  }
  final Editor editor=e.getData(PlatformDataKeys.EDITOR);
  final VirtualFile file=e.getData(PlatformDataKeys.VIRTUAL_FILE);
  final VirtualFile[] files=e.getData(PlatformDataKeys.VIRTUAL_FILE_ARRAY);
  if (editor == null && file == null && files == null) {
    return;
  }
  final boolean useGitHubAccount;
  if (!GithubUtil.checkCredentials(project)) {
    final GithubLoginDialog dialog=new GithubLoginDialog(project);
    dialog.show();
    useGitHubAccount=GithubUtil.checkCredentials(project);
  }
 else {
    useGitHubAccount=true;
  }
  final GitHubCreateGistDialog dialog=new GitHubCreateGistDialog(project,useGitHubAccount);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  final GithubSettings settings=GithubSettings.getInstance();
  final String password=settings.getPassword();
  final Ref<String> url=new Ref<String>();
  final String description=dialog.getDescription();
  final boolean isPrivate=dialog.isPrivate();
  final boolean anonymous=dialog.isAnonymous();
  final boolean openInBrowser=dialog.isOpenInBrowser();
  ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    @Override public void run(){
      List<NamedContent> contents=collectContents(project,editor,file,files);
      if (contents == null) {
        return;
      }
      String gistUrl=createGist(project,settings.getLogin(),password,anonymous,contents,isPrivate,description);
      url.set(gistUrl);
    }
  }
,"Communicating With GitHub",false,project);
  if (url.isNull()) {
    return;
  }
  if (openInBrowser) {
    BrowserUtil.launchBrowser(url.get());
  }
 else {
    Notificator.getInstance(project).notify(GitVcs.IMPORTANT_ERROR_NOTIFICATION,"Gist Created Successfully","Your gist url: <a href='open'>" + url.get() + "</a>",NotificationType.INFORMATION,new NotificationListener(){
      @Override public void hyperlinkUpdate(      @NotNull Notification notification,      @NotNull HyperlinkEvent event){
        if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
          BrowserUtil.launchBrowser(url.get());
        }
      }
    }
);
  }
}
