{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null || project.isDefault()) {
    return;
  }
  final Editor editor=e.getData(PlatformDataKeys.EDITOR);
  final VirtualFile file=e.getData(PlatformDataKeys.VIRTUAL_FILE);
  final VirtualFile[] files=e.getData(PlatformDataKeys.VIRTUAL_FILE_ARRAY);
  if (editor == null && file == null && files == null) {
    return;
  }
  final boolean useGitHubAccount;
  if (!GithubUtil.checkCredentials(project)) {
    final GithubLoginDialog dialog=new GithubLoginDialog(project);
    dialog.show();
    useGitHubAccount=GithubUtil.checkCredentials(project);
  }
 else {
    useGitHubAccount=true;
  }
  final GitHubCreateGistDialog dialog=new GitHubCreateGistDialog(project,useGitHubAccount);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  GithubSettings settings=GithubSettings.getInstance();
  final String login=settings.getLogin();
  final String password=settings.getPassword();
  final String description=dialog.getDescription();
  final boolean isPrivate=dialog.isPrivate();
  final boolean anonymous=dialog.isAnonymous();
  final boolean openInBrowser=dialog.isOpenInBrowser();
  String url=createGistWithProgress(project,editor,file,files,login,password,description,isPrivate,anonymous);
  if (url == null) {
    return;
  }
  if (openInBrowser) {
    BrowserUtil.launchBrowser(url);
  }
 else {
    showNotificationWithLink(project,url);
  }
}
