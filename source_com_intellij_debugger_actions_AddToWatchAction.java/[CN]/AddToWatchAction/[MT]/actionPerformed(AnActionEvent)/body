{
  final DebuggerContextImpl debuggerContext=getDebuggerContext(e.getDataContext());
  if (debuggerContext == null)   return;
  final DebuggerSession session=debuggerContext.getDebuggerSession();
  if (session == null)   return;
  final MainWatchPanel watchPanel=DebuggerPanelsManager.getInstance(debuggerContext.getProject()).getWatchPanel();
  if (watchPanel == null)   return;
  final DebuggerTreeNodeImpl[] selectedNodes=getSelectedNodes(e.getDataContext());
  if (selectedNodes != null && selectedNodes.length > 0) {
    debuggerContext.getDebugProcess().getManagerThread().invokeLater(new DebuggerContextCommandImpl(debuggerContext){
      public void threadAction(){
        for (int idx=0; idx < selectedNodes.length; idx++) {
          DebuggerTreeNodeImpl node=selectedNodes[idx];
          final NodeDescriptorImpl descriptor=node.getDescriptor();
          final TextWithImports expression=DebuggerTreeNodeExpression.createEvaluationText(node,debuggerContext);
          if (expression != null) {
            DebuggerInvocationUtil.invokeLater(session.getProject(),new Runnable(){
              public void run(){
                NodeDescriptorImpl watchDescriptor=watchPanel.getWatchTree().addWatch(expression).getDescriptor();
                watchDescriptor.displayAs(descriptor);
              }
            }
);
          }
        }
      }
      protected void commandCancelled(){
        DebuggerInvocationUtil.invokeLater(debuggerContext.getProject(),new Runnable(){
          public void run(){
            for (int idx=0; idx < selectedNodes.length; idx++) {
              DebuggerTreeNodeImpl node=selectedNodes[idx];
              final NodeDescriptorImpl descriptor=node.getDescriptor();
              if (descriptor instanceof WatchItemDescriptor) {
                final TextWithImportsImpl expression=(TextWithImportsImpl)((WatchItemDescriptor)descriptor).getEvaluationText();
                if (expression != null) {
                  NodeDescriptorImpl watchDescriptor=watchPanel.getWatchTree().addWatch(expression).getDescriptor();
                  watchDescriptor.displayAs(descriptor);
                }
              }
            }
          }
        }
);
      }
    }
);
  }
 else {
    final Editor editor=(Editor)e.getDataContext().getData(DataConstants.EDITOR);
    TextWithImports editorText=DebuggerUtilsEx.getEditorText(editor);
    if (editorText != null) {
      watchPanel.getWatchTree().addWatch(editorText);
    }
  }
}
