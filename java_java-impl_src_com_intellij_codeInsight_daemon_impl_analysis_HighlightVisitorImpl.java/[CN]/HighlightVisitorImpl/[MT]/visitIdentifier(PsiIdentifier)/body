{
  PsiElement parent=identifier.getParent();
  if (parent instanceof PsiVariable) {
    myHolder.add(HighlightUtil.checkVariableAlreadyDefined((PsiVariable)parent));
  }
 else   if (parent instanceof PsiClass) {
    PsiClass aClass=(PsiClass)parent;
    if (aClass.isAnnotationType() && !PsiUtil.isLanguageLevel5OrHigher(aClass)) {
      HighlightInfo info=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,identifier,JavaErrorMessages.message("annotations.prior.15"));
      QuickFixAction.registerQuickFixAction(info,new IncreaseLanguageLevelFix(LanguageLevel.JDK_1_5));
      myHolder.add(info);
    }
    myHolder.add(HighlightClassUtil.checkClassAlreadyImported(aClass,identifier));
    myHolder.add(HighlightClassUtil.checkExternalizableHasPublicNoArgsConstructor(aClass,identifier));
    if (!(parent instanceof PsiAnonymousClass) && aClass.getNameIdentifier() == identifier) {
      myHolder.add(HighlightNamesUtil.highlightClassName(aClass,identifier));
    }
  }
 else   if (parent instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)parent;
    if (method.isConstructor()) {
      myHolder.add(HighlightMethodUtil.checkConstructorName(method));
    }
  }
  super.visitIdentifier(identifier);
}
