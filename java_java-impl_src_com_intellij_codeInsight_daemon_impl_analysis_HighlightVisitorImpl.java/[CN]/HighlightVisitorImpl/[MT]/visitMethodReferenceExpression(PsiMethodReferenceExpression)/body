{
  myHolder.add(HighlightUtil.checkMethodReferencesFeature(expression));
  JavaResolveResult result;
  try {
    result=expression.advancedResolve(true);
  }
 catch (  IndexNotReadyException e) {
    return;
  }
  if (myRefCountHolder != null) {
    myRefCountHolder.registerReference(expression,result);
  }
  if (!myHolder.hasErrorResults()) {
    final PsiType functionalInterfaceType=expression.getFunctionalInterfaceType();
    if (LambdaUtil.dependsOnTypeParams(functionalInterfaceType,functionalInterfaceType,expression,null)) {
      myHolder.add(HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,expression,"Cyclic inference"));
    }
  }
}
