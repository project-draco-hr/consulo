{
  myModuleSelector=moduleSelector;
  myActivityField.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
      PsiClass activityBaseClass=facade.findClass(AndroidUtils.ACTIVITY_BASE_CLASS_NAME,ProjectScope.getAllScope(project));
      if (activityBaseClass == null) {
        Messages.showErrorDialog(myPanel,AndroidBundle.message("cant.find.activity.class.error"));
        return;
      }
      Module module=moduleSelector.getModule();
      if (module == null) {
        Messages.showErrorDialog(myPanel,ExecutionBundle.message("module.not.specified.error.text"));
        return;
      }
      PsiClass initialSelection=facade.findClass(myActivityField.getText(),module.getModuleWithDependenciesScope());
      TreeClassChooser chooser=TreeClassChooserFactory.getInstance(project).createInheritanceClassChooser("Select activity class",module.getModuleWithDependenciesScope(),activityBaseClass,initialSelection,new ActivityClassFilter());
      chooser.showDialog();
      PsiClass selClass=chooser.getSelectedClass();
      if (selClass != null) {
        myActivityField.setText(selClass.getQualifiedName());
      }
    }
  }
);
  ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myActivityField.setEnabled(myLaunchCustomButton.isSelected());
    }
  }
;
  myLaunchCustomButton.addActionListener(listener);
  myLaunchDefaultButton.addActionListener(listener);
  myDoNothingButton.addActionListener(listener);
}
