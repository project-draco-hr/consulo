{
  if (!isValid())   return;
  if (intervalStart() == intervalEnd()) {
    processIfOnePoint(e);
    return;
  }
  final int offset=e.getOffset();
  final int oldLength=e.getOldLength();
  final int newLength=e.getNewLength();
  if (intervalEnd() < offset || !isGreedyToRight() && intervalEnd() == offset) {
    return;
  }
  if (intervalStart() > offset + oldLength || !isGreedyToLeft() && intervalStart() == offset + oldLength) {
    setIntervalStart(intervalStart() + newLength - oldLength);
    setIntervalEnd(intervalEnd() + newLength - oldLength);
    return;
  }
  if (intervalStart() <= offset && intervalEnd() >= offset + oldLength) {
    setIntervalEnd(intervalEnd() + newLength - oldLength);
    return;
  }
  if (intervalStart() >= offset && intervalStart() <= offset + oldLength && intervalEnd() > offset + oldLength) {
    setIntervalEnd(intervalEnd() + newLength - oldLength);
    setIntervalStart(offset + newLength);
    return;
  }
  if (intervalEnd() >= offset && intervalEnd() <= offset + oldLength && intervalStart() < offset) {
    setIntervalEnd(offset);
    return;
  }
  invalidate();
}
