{
  if (myProject != null) {
    final FileIndex projectFileIndex=ProjectRootManager.getInstance(myProject).getFileIndex();
    projectFileIndex.iterateContent(new ContentIterator(){
      public boolean processFile(      VirtualFile fileOrDir){
        if (projectFileIndex.isContentJavaSourceFile(fileOrDir) && (myIncludeTestSource ? true : !projectFileIndex.isInTestSourceContent(fileOrDir))) {
          PsiFile psiFile=PsiManager.getInstance(myProject).findFile(fileOrDir);
          LOG.assertTrue(psiFile != null);
          psiFile.accept(visitor);
        }
        return true;
      }
    }
);
  }
 else   if (myModule != null) {
    final FileIndex moduleFileIndex=ModuleRootManager.getInstance(myModule).getFileIndex();
    moduleFileIndex.iterateContent(new ContentIterator(){
      public boolean processFile(      VirtualFile fileOrDir){
        if (moduleFileIndex.isContentJavaSourceFile(fileOrDir) && (myIncludeTestSource ? true : moduleFileIndex.isInTestSourceContent(fileOrDir))) {
          PsiFile psiFile=PsiManager.getInstance(myModule.getProject()).findFile(fileOrDir);
          LOG.assertTrue(psiFile != null);
          psiFile.accept(visitor);
        }
        return true;
      }
    }
);
  }
 else   if (myModules != null) {
    for (Iterator<Module> iterator=myModules.iterator(); iterator.hasNext(); ) {
      final Module module=iterator.next();
      final FileIndex moduleFileIndex=ModuleRootManager.getInstance(module).getFileIndex();
      moduleFileIndex.iterateContent(new ContentIterator(){
        public boolean processFile(        VirtualFile fileOrDir){
          if (moduleFileIndex.isContentJavaSourceFile(fileOrDir) && (myIncludeTestSource ? true : moduleFileIndex.isInTestSourceContent(fileOrDir))) {
            PsiFile psiFile=PsiManager.getInstance(module.getProject()).findFile(fileOrDir);
            LOG.assertTrue(psiFile != null);
            psiFile.accept(visitor);
          }
          return true;
        }
      }
);
    }
  }
 else   if (myElement instanceof PsiPackage) {
    PsiPackage pack=(PsiPackage)myElement;
    PsiDirectory[] dirs=pack.getDirectories(GlobalSearchScope.projectScope(myElement.getProject()));
    for (int i=0; i < dirs.length; i++) {
      dirs[i].accept(visitor);
    }
  }
 else {
    myElement.accept(visitor);
  }
}
