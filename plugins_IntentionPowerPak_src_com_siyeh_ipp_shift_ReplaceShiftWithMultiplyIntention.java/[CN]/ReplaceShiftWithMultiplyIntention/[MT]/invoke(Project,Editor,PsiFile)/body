{
  final PsiElement element=findMatchingElement(file,editor);
  if (element instanceof PsiBinaryExpression) {
    final PsiBinaryExpression exp=(PsiBinaryExpression)element;
    final PsiExpression lhs=exp.getLOperand();
    final PsiExpression rhs=exp.getROperand();
    final PsiJavaToken sign=exp.getOperationSign();
    final IElementType tokenType=sign.getTokenType();
    final String operatorString;
    if (tokenType.equals(JavaTokenType.LTLT)) {
      operatorString="*";
    }
 else {
      operatorString="/";
    }
    final String expString=lhs.getText() + operatorString + ShiftUtils.getExpBase2(rhs);
    replaceExpression(project,expString,exp);
  }
 else {
    final PsiAssignmentExpression exp=(PsiAssignmentExpression)element;
    final PsiExpression lhs=exp.getLExpression();
    final PsiExpression rhs=exp.getRExpression();
    final PsiJavaToken sign=exp.getOperationSign();
    final IElementType tokenType=sign.getTokenType();
    final String assignString;
    if (tokenType.equals(JavaTokenType.LTLTEQ)) {
      assignString="*=";
    }
 else {
      assignString="/=";
    }
    final String expString=lhs.getText() + assignString + ShiftUtils.getExpBase2(rhs);
    replaceExpression(project,expString,exp);
  }
}
