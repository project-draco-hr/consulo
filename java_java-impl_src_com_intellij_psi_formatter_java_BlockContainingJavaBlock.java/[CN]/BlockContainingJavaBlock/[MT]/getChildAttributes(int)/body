{
  if (isAfter(newChildIndex,new IElementType[]{JavaDocElementType.DOC_COMMENT})) {
    return new ChildAttributes(Indent.getNoneIndent(),null);
  }
  if (myNode.getElementType() == ElementType.FOR_STATEMENT && mySettings.ALIGN_MULTILINE_FOR && isInsideForParens(newChildIndex)) {
    Alignment prev=getUsedAlignment(newChildIndex);
    if (prev != null) {
      return new ChildAttributes(null,prev);
    }
  }
  if (newChildIndex == 0) {
    return new ChildAttributes(getCodeBlockExternalIndent(),null);
  }
  boolean useExternalIndent=false;
  if (newChildIndex == getSubBlocks().size()) {
    useExternalIndent=true;
  }
 else   if (TYPES_OF_STATEMENTS_WITH_OPTIONAL_BRACES.contains(myNode.getElementType())) {
    Block prevBlock=getSubBlocks().get(newChildIndex - 1);
    Block nextBlock=getSubBlocks().get(newChildIndex);
    if (prevBlock instanceof ASTBlock && nextBlock instanceof ASTBlock) {
      ASTNode prevNode=((ASTBlock)prevBlock).getNode();
      ASTNode nextNode=((ASTBlock)nextBlock).getNode();
      if (prevNode != null && nextNode != null && prevNode.getElementType() == JavaTokenType.RPARENTH && nextNode.getElementType() != JavaTokenType.LBRACE) {
        useExternalIndent=true;
      }
    }
  }
  if (useExternalIndent) {
    return new ChildAttributes(getCodeBlockChildExternalIndent(newChildIndex),null);
  }
 else {
    return new ChildAttributes(myIndentsBefore.get(newChildIndex),null);
  }
}
