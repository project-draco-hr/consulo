{
  initExtensionPoints(PLUGIN_NAME,EXTENSION_POINTS_ROOT,null);
  initExtensionPoints(PLUGIN_NAME_2,EXTENSION_POINTS_ROOT_2,null);
  initExtensions(EXTENSIONS_ROOT,null);
  AreaInstance areaInstance1=new MyAreaInstance();
  Extensions.instantiateArea("area",areaInstance1,null);
  initExtensionsInAREA(areaInstance1);
  AreaInstance areaInstance2=new MyAreaInstance();
  Extensions.instantiateArea("area",areaInstance2,null);
  initExtensionsInAREA(areaInstance2);
  AreaInstance areaInstance3=new MyAreaInstance();
  Extensions.instantiateArea("area",areaInstance3,null);
  initExtensionsInAREA(areaInstance3);
  checkAreaInitialized(areaInstance1);
  checkAreaInitialized(areaInstance2);
  checkAreaInitialized(areaInstance3);
  MyAreaInstance childAreaInstance1=new MyAreaInstance();
  Extensions.instantiateArea("child_area",childAreaInstance1,areaInstance1);
  initExtensionsInCHILD_AREA(childAreaInstance1);
  MyAreaInstance childAreaInstance2=new MyAreaInstance();
  Extensions.instantiateArea("child_area",childAreaInstance2,areaInstance2);
  initExtensionsInCHILD_AREA(childAreaInstance2);
  DependentObjectOne dependentObjectOne=(DependentObjectOne)Extensions.getRootArea().getExtensionPoint(TEST_DEPENDENT1_NAME).getExtension();
  assertEquals(1,dependentObjectOne.getTestBeans().length);
  DependentObjectTwo dependentObjectTwo=(DependentObjectTwo)Extensions.getArea(areaInstance1).getExtensionPoint(TEST_DEPENDENT2_NAME).getExtension();
  assertSame(dependentObjectOne,dependentObjectTwo.getOne());
  DependentObjectThree dependentObjectThree=(DependentObjectThree)Extensions.getArea(areaInstance1).getExtensionPoint(TEST_DEPENDENT3_NAME).getExtension();
  assertSame(dependentObjectOne,dependentObjectThree.getOne());
  assertSame(dependentObjectTwo,dependentObjectThree.getTwo());
  assertTrue(Arrays.asList(dependentObjectThree.getTestBeans()).containsAll(Arrays.asList(dependentObjectOne.getTestBeans())));
  assertTrue(Extensions.getRootArea().getPicoContainer().getComponentInstances().contains(dependentObjectOne));
  assertTrue(Extensions.getArea(areaInstance1).getPicoContainer().getComponentInstances().contains(dependentObjectTwo));
  assertTrue(Extensions.getArea(areaInstance1).getPicoContainer().getComponentInstances().contains(dependentObjectThree));
  assertFalse(Extensions.getArea(areaInstance2).getPicoContainer().getComponentInstances().contains(dependentObjectThree));
  assertTrue(Extensions.getRootArea().getPluginContainer(PLUGIN_NAME).getComponentInstances().contains(dependentObjectOne));
  assertFalse(Extensions.getRootArea().getPluginContainer(PLUGIN_NAME_2).getComponentInstances().contains(dependentObjectOne));
  assertTrue(Extensions.getArea(areaInstance1).getPluginContainer(PLUGIN_NAME).getComponentInstances().contains(dependentObjectTwo));
  assertFalse(Extensions.getArea(areaInstance1).getPluginContainer(PLUGIN_NAME_2).getComponentInstances().contains(dependentObjectTwo));
  assertTrue(Extensions.getArea(areaInstance1).getPluginContainer(PLUGIN_NAME_2).getComponentInstances().contains(dependentObjectThree));
  DependentObjectThree dependentChild1=(DependentObjectThree)Extensions.getArea(childAreaInstance1).getExtensionPoint(TEST_DEPENDENT_CHILD_NAME).getExtension();
  DependentObjectThree dependentChild2=(DependentObjectThree)Extensions.getArea(childAreaInstance2).getExtensionPoint(TEST_DEPENDENT_CHILD_NAME).getExtension();
  assertSame(dependentObjectTwo,dependentChild1.getTwo());
  assertNotSame(dependentObjectTwo,dependentChild2.getTwo());
  assertNotSame(Extensions.getArea(areaInstance1).getExtensionPoint("the.test.plugin.extensionPoint4area").getExtensions()[0],Extensions.getArea(areaInstance2).getExtensionPoint("the.test.plugin.extensionPoint4area").getExtensions()[0]);
  XMLTestBean ownExtension=new XMLTestBean();
  ownExtension.setProp1(54321);
  Extensions.getArea(areaInstance1).getExtensionPoint("the.test.plugin.extensionPoint4area").registerExtension(ownExtension);
  ExtensionPoint ep=Extensions.getArea(areaInstance2).getExtensionPoint("the.test.plugin.extensionPoint4area");
  ep.unregisterExtension(ep.getExtension());
  ep.unregisterExtension(ep.getExtension());
  assertEquals(3,Extensions.getArea(areaInstance1).getExtensionPoint("the.test.plugin.extensionPoint4area").getExtensions().length);
  assertEquals(54321,((XMLTestBean)Extensions.getArea(areaInstance1).getExtensionPoint("the.test.plugin.extensionPoint4area").getExtensions()[2]).getProp1());
  assertEquals(0,Extensions.getArea(areaInstance2).getExtensionPoint("the.test.plugin.extensionPoint4area").getExtensions().length);
  assertEquals(2,Extensions.getArea(areaInstance3).getExtensionPoint("the.test.plugin.extensionPoint4area").getExtensions().length);
}
