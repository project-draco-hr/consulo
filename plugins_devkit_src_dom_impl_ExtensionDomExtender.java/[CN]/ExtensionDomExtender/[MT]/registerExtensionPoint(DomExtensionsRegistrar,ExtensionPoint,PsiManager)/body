{
  final String epName=extensionPoint.getName().getStringValue();
  if (epName != null) {
    final DomExtension domExtension=registrar.registerCollectionChildrenExtension(new XmlName(epName),Extension.class);
    domExtension.putUserData(DomExtension.KEY_DECLARATION,extensionPoint);
    domExtension.addExtender(new DomExtender(){
      public Object[] registerExtensions(      @NotNull final DomElement domElement,      @NotNull final DomExtensionsRegistrar registrar){
        final String interfaceName=extensionPoint.getInterface().getStringValue();
        if (interfaceName != null) {
          registrar.registerGenericAttributeValueChildExtension(new XmlName("implementation"),PsiClass.class).setConverter(CLASS_CONVERTER);
          final PsiClass implClass=JavaPsiFacade.getInstance(manager.getProject()).findClass(interfaceName,GlobalSearchScope.allScope(manager.getProject()));
          if (implClass != null) {
            registerXmlb(registrar,implClass);
          }
        }
 else {
          final String beanClassName=extensionPoint.getBeanClass().getStringValue();
          if (beanClassName != null) {
            final PsiClass beanClass=JavaPsiFacade.getInstance(manager.getProject()).findClass(beanClassName,GlobalSearchScope.allScope(manager.getProject()));
            if (beanClass != null) {
              registerXmlb(registrar,beanClass);
            }
          }
        }
        return new Object[]{};
      }
    }
);
  }
}
