{
  if (myProject.isDefault())   return null;
  final Set<String> rootPaths=new HashSet<String>();
  Module[] modules=ModuleManager.getInstance(myProject).getModules();
  for (  Module module : modules) {
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
    final String[] contentRootUrls=moduleRootManager.getContentRootUrls();
    rootPaths.addAll(getRootsToTrack(contentRootUrls));
    if (includeSourceRoots) {
      final String[] sourceRootUrls=moduleRootManager.getSourceRootUrls();
      rootPaths.addAll(getRootsToTrack(sourceRootUrls));
    }
    rootPaths.add(module.getModuleFilePath());
  }
  for (  WatchedRootsProvider extension : Extensions.getExtensions(WatchedRootsProvider.EP_NAME,myProject)) {
    rootPaths.addAll(extension.getRootsToWatch());
  }
  final VirtualFile projectFile=myProject.getStateStore().getProjectFile();
  if (projectFile != null) {
    rootPaths.add(projectFile.getPath());
  }
  final VirtualFile baseDir=myProject.getBaseDir();
  if (baseDir != null) {
    rootPaths.add(baseDir.getPath());
  }
  for (  Module module : modules) {
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
    final OrderEntry[] orderEntries=moduleRootManager.getOrderEntries();
    for (    OrderEntry entry : orderEntries) {
      if (entry instanceof LibraryOrderEntry) {
        final Library library=((LibraryOrderEntry)entry).getLibrary();
        for (        OrderRootType orderRootType : OrderRootType.getAllTypes()) {
          rootPaths.addAll(getRootsToTrack(library,orderRootType));
        }
      }
 else       if (entry instanceof JdkOrderEntry) {
        for (        OrderRootType orderRootType : OrderRootType.getAllTypes()) {
          rootPaths.addAll(getRootsToTrack(entry,orderRootType));
        }
      }
    }
  }
  for (  Module module : modules) {
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
    final String explodedDirectory=moduleRootManager.getExplodedDirectoryUrl();
    if (explodedDirectory != null) {
      rootPaths.add(extractLocalPath(explodedDirectory));
    }
  }
  return rootPaths;
}
