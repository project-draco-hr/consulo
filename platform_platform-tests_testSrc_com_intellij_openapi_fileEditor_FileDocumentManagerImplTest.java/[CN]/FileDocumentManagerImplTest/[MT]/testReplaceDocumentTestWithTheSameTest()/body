{
  final boolean[] canCallSave={true};
  final VirtualFile file=new MockVirtualFile("test.txt","test"){
    @NotNull @Override public OutputStream getOutputStream(    Object requestor,    long newModificationStamp,    long newTimeStamp) throws IOException {
      if (!canCallSave[0])       fail();
      return super.getOutputStream(requestor,newModificationStamp,newTimeStamp);
    }
  }
;
  DocumentEx document=(DocumentEx)myDocumentManager.getDocument(file);
  String newText="test text";
  document.replaceString(0,document.getTextLength(),newText);
  assertTrue(myDocumentManager.isDocumentUnsaved(document));
  myDocumentManager.saveDocument(document);
  canCallSave[0]=false;
  final long modificationStamp=document.getModificationStamp();
  document.replaceString(0,document.getTextLength(),newText);
  if (myDocumentManager.isDocumentUnsaved(document)) {
    assertTrue(document.getModificationStamp() > modificationStamp);
  }
 else {
    assertEquals(modificationStamp,document.getModificationStamp());
  }
}
