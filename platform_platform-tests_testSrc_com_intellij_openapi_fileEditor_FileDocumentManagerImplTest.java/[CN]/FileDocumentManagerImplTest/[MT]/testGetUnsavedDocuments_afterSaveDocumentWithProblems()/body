{
  try {
    final VirtualFile file=new MockVirtualFile("test.txt","test"){
      @Override @NotNull public OutputStream getOutputStream(      Object requestor,      long newModificationStamp,      long newTimeStamp) throws IOException {
        throw new IOException("");
      }
    }
;
    final Document document=myDocumentManager.getDocument(file);
    assertNotNull(file.toString(),document);
    WriteCommandAction.runWriteCommandAction(getProject(),new Runnable(){
      @Override public void run(){
        document.insertString(0,"xxx");
      }
    }
);
    try {
      myDocumentManager.saveDocument(document);
      fail("must throw IOException");
    }
 catch (    RuntimeException e) {
      assertTrue(e.getCause() instanceof IOException);
    }
    final Document[] unsavedDocuments=myDocumentManager.getUnsavedDocuments();
    assertEquals(1,unsavedDocuments.length);
    assertSame(document,unsavedDocuments[0]);
    assertTrue(Arrays.equals("test".getBytes("UTF-8"),file.contentsToByteArray()));
  }
  finally {
    myDocumentManager.dropAllUnsavedDocuments();
  }
}
