{
  super.visitTryStatement(statement);
  if (m_ignoreTestCases) {
    final PsiClass aClass=ClassUtils.getContainingClass(statement);
    if (aClass != null && ClassUtils.isSubclass(aClass,"junit.framework.TestCase")) {
      return;
    }
  }
  PsiCatchSection[] catchSections=statement.getCatchSections();
  for (int i=0; i < catchSections.length; i++) {
    final PsiParameter param=catchSections[i].getParameter();
    final PsiCodeBlock block=catchSections[i].getCatchBlock();
    if (param == null || block == null) {
      continue;
    }
    if (m_ignoreCatchBlocksWithComments) {
      final PsiElement[] children=block.getChildren();
      for (int j=0; j < children.length; j++) {
        final PsiElement child=children[j];
        if (child instanceof PsiComment) {
          return;
        }
      }
    }
    final CatchParameterUsedVisitor visitor=new CatchParameterUsedVisitor(param);
    block.accept(visitor);
    if (!visitor.isUsed()) {
      registerVariableError(param);
    }
  }
}
