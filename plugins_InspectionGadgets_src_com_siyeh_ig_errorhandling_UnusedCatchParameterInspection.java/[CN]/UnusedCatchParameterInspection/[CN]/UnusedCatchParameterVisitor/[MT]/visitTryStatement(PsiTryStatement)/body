{
  super.visitTryStatement(statement);
  if (m_ignoreTestCases) {
    final PsiClass containingClass=PsiTreeUtil.getParentOfType(statement,PsiClass.class);
    if (containingClass != null && TestUtil.isTestClass(containingClass)) {
      return;
    }
    if (TestUtils.isPartOfJUnitTestMethod(statement)) {
      return;
    }
  }
  final PsiCatchSection[] catchSections=statement.getCatchSections();
  for (  PsiCatchSection catchSection : catchSections) {
    checkCatchSection(catchSection);
  }
}
