{
  final MethodJavaDocHelper javaDocHelper=new MethodJavaDocHelper(myMethod);
  PsiParameterList paramList=myMethod.getParameterList();
  PsiElement addParameterAfter=null;
  PsiDocTag anchor=null;
  List<PsiType> addedTypes=new ArrayList<PsiType>();
  if (mySettings.isMakeClassParameter()) {
    PsiType parameterType=factory.createType(myMethodClass,PsiSubstitutor.EMPTY);
    addedTypes.add(parameterType);
    final String classParameterName=mySettings.getClassParameterName();
    PsiParameter parameter=factory.createParameter(classParameterName,parameterType);
    if (makeClassParameterFinal(usages)) {
      parameter.getModifierList().setModifierProperty(PsiModifier.FINAL,true);
    }
    addParameterAfter=paramList.addAfter(parameter,null);
    anchor=javaDocHelper.addParameterAfter(classParameterName,anchor);
  }
  if (mySettings.isMakeFieldParameters()) {
    List<Settings.FieldParameter> parameters=mySettings.getParameterOrderList();
    for (    Settings.FieldParameter fieldParameter : parameters) {
      final PsiType fieldParameterType=fieldParameter.field.getType();
      final PsiParameter parameter=factory.createParameter(fieldParameter.name,fieldParameterType);
      addedTypes.add(fieldParameterType);
      if (makeFieldParameterFinal(fieldParameter.field,usages)) {
        parameter.getModifierList().setModifierProperty(PsiModifier.FINAL,true);
      }
      addParameterAfter=paramList.addAfter(parameter,addParameterAfter);
      anchor=javaDocHelper.addParameterAfter(fieldParameter.name,anchor);
    }
  }
  addTypeParameters(addedTypes);
  final PsiModifierList modifierList=myMethod.getModifierList();
  modifierList.setModifierProperty(PsiModifier.STATIC,true);
  modifierList.setModifierProperty(PsiModifier.FINAL,false);
}
