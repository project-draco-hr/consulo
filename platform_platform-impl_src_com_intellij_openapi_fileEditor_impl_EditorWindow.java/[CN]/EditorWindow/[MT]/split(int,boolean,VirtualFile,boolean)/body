{
  checkConsistency();
  final FileEditorManagerImpl fileEditorManager=myOwner.getManager();
  if (splitAvailable()) {
    if (!forceSplit && inSplitter()) {
      final EditorWindow[] siblings=findSiblings();
      final EditorWindow target=siblings[0];
      if (virtualFile != null) {
        final FileEditor[] editors=fileEditorManager.openFileImpl3(target,virtualFile,focusNew,null,true).first;
        syncCaretIfPossible(editors);
      }
      return target;
    }
    final JPanel panel=myPanel;
    panel.setBorder(null);
    final int tabCount=getTabCount();
    if (tabCount != 0) {
      final EditorWithProviderComposite firstEC=getEditorAt(0);
      myPanel=new JPanel(new BorderLayout());
      myPanel.setBorder(new AdaptiveBorder());
      myPanel.setOpaque(false);
      final Splitter splitter=new Splitter(orientation == JSplitPane.VERTICAL_SPLIT,0.5f,0.1f,0.9f);
      final EditorWindow res=new EditorWindow(myOwner);
      if (myTabbedPane != null) {
        final EditorWithProviderComposite selectedEditor=getSelectedEditor();
        panel.remove(myTabbedPane.getComponent());
        panel.add(splitter,BorderLayout.CENTER);
        splitter.setFirstComponent(myPanel);
        myPanel.add(myTabbedPane.getComponent(),BorderLayout.CENTER);
        splitter.setSecondComponent(res.myPanel);
        final VirtualFile file=selectedEditor.getFile();
        final VirtualFile nextFile=virtualFile == null ? file : virtualFile;
        final FileEditor[] editors=fileEditorManager.openFileImpl3(res,nextFile,false,null,true).first;
        syncCaretIfPossible(editors);
        res.setFilePinned(nextFile,isFilePinned(file));
        if (!focusNew) {
          res.setSelectedEditor(selectedEditor,true);
          selectedEditor.getComponent().requestFocus();
        }
        panel.revalidate();
      }
 else {
        panel.removeAll();
        panel.add(splitter,BorderLayout.CENTER);
        splitter.setFirstComponent(myPanel);
        splitter.setSecondComponent(res.myPanel);
        panel.revalidate();
        final VirtualFile firstFile=firstEC.getFile();
        final VirtualFile nextFile=virtualFile == null ? firstFile : virtualFile;
        final FileEditor[] firstEditors=fileEditorManager.openFileImpl3(this,firstFile,!focusNew,null,true).first;
        syncCaretIfPossible(firstEditors);
        final FileEditor[] secondEditors=fileEditorManager.openFileImpl3(res,nextFile,focusNew,null,true).first;
        syncCaretIfPossible(secondEditors);
      }
      return res;
    }
  }
  return null;
}
