{
  while_label:   while (myTabbedPane.getTabCount() > limit && myTabbedPane.getTabCount() > 0) {
    boolean allTabsArePinned=true;
    for (int i=myTabbedPane.getTabCount() - 1; i >= 0; i--) {
      final VirtualFile file=getFileAt(i);
      if (fileCanBeClosed(file,fileToIgnore)) {
        allTabsArePinned=false;
        break;
      }
    }
    if (allTabsArePinned) {
      return;
    }
    if (closeNonModifiedFilesFirst) {
      final VirtualFile[] allFiles=getFiles();
      final VirtualFile[] histFiles=EditorHistoryManager.getInstance(getManager().getProject()).getFiles();
      for (int i=0; i != allFiles.length; ++i) {
        final VirtualFile file=allFiles[i];
        if (fileCanBeClosed(file,fileToIgnore)) {
          boolean found=false;
          for (int j=0; j != histFiles.length; j++) {
            if (histFiles[j] == file) {
              found=true;
              break;
            }
          }
          if (!found) {
            defaultCloseFile(file,transferFocus);
            continue while_label;
          }
        }
      }
      for (      final VirtualFile file : histFiles) {
        if (!fileCanBeClosed(file,fileToIgnore)) {
          continue;
        }
        final EditorComposite composite=findFileComposite(file);
        if (composite != null && composite.getInitialFileTimeStamp() == file.getTimeStamp()) {
          defaultCloseFile(file,transferFocus);
          continue while_label;
        }
      }
      final VirtualFile selectedFile=getSelectedFile();
      for (int i=0; i < myTabbedPane.getTabCount(); i++) {
        final VirtualFile file=getFileAt(i);
        final EditorComposite composite=getEditorAt(i);
        if (!fileCanBeClosed(file,fileToIgnore)) {
          continue;
        }
        if (!selectedFile.equals(file)) {
          if (composite.getInitialFileTimeStamp() == file.getTimeStamp()) {
            defaultCloseFile(file,transferFocus);
            continue while_label;
          }
        }
      }
    }
{
      final VirtualFile[] allFiles=getFiles();
      final VirtualFile[] histFiles=EditorHistoryManager.getInstance(getManager().getProject()).getFiles();
      for (int i=0; i != allFiles.length; ++i) {
        final VirtualFile file=allFiles[i];
        if (fileCanBeClosed(file,fileToIgnore)) {
          boolean found=false;
          for (int j=0; j != histFiles.length; j++) {
            if (histFiles[j] == file) {
              found=true;
              break;
            }
          }
          if (!found) {
            defaultCloseFile(file,transferFocus);
            continue while_label;
          }
        }
      }
      for (      final VirtualFile file : histFiles) {
        if (fileCanBeClosed(file,fileToIgnore)) {
          defaultCloseFile(file,transferFocus);
          continue while_label;
        }
      }
    }
{
      final VirtualFile selectedFile=getSelectedFile();
      for (int i=0; i < myTabbedPane.getTabCount(); i++) {
        final VirtualFile file=getFileAt(i);
        if (!fileCanBeClosed(file,fileToIgnore)) {
          continue;
        }
        if (!selectedFile.equals(file)) {
          defaultCloseFile(file,transferFocus);
          continue while_label;
        }
 else         if (i == myTabbedPane.getTabCount() - 1) {
          defaultCloseFile(file,transferFocus);
          continue while_label;
        }
      }
    }
  }
}
