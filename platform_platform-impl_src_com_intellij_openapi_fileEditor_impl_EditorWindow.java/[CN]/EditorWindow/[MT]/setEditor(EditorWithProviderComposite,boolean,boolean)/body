{
  if (editor != null) {
    onBeforeSetEditor(editor.getFile());
    if (myTabbedPane == null) {
      myPanel.removeAll();
      myPanel.add(new TCompForTablessMode(this,editor),BorderLayout.CENTER);
      myOwner.validate();
      return;
    }
    final int index=findEditorIndex(editor);
    if (index != -1) {
      if (selectEditor) {
        setSelectedEditor(editor,focusEditor);
      }
    }
 else {
      Integer initialIndex=editor.getFile().getUserData(INITIAL_INDEX_KEY);
      int indexToInsert=0;
      if (Registry.is("ide.editor.tabs.open.at.the.end")) {
        indexToInsert=myTabbedPane.getTabCount();
      }
 else {
        if (initialIndex == null) {
          int selectedIndex=myTabbedPane.getSelectedIndex();
          if (selectedIndex >= 0) {
            indexToInsert=selectedIndex + 1;
          }
        }
 else {
          indexToInsert=initialIndex;
        }
      }
      final VirtualFile file=editor.getFile();
      final Icon template=AllIcons.FileTypes.Text;
      myTabbedPane.insertTab(file,new EmptyIcon(template.getIconWidth(),template.getIconHeight()),new TComp(this,editor),null,indexToInsert);
      trimToSize(UISettings.getInstance().EDITOR_TAB_LIMIT,file,false);
      if (selectEditor) {
        setSelectedEditor(editor,focusEditor);
      }
      myOwner.updateFileIcon(file);
      myOwner.updateFileColor(file);
    }
    myOwner.setCurrentWindow(this,false);
  }
  myOwner.validate();
}
