{
  final FileEditorManagerImpl editorManager=getManager();
  editorManager.runChange(new FileEditorManagerChange(){
    @Override public void run(    EditorsSplitters splitters){
      final List<EditorWithProviderComposite> editors=splitters.findEditorComposites(file);
      if (editors.isEmpty())       return;
      try {
        final EditorWithProviderComposite editor=findFileComposite(file);
        final FileEditorManagerListener.Before beforePublisher=editorManager.getProject().getMessageBus().syncPublisher(FileEditorManagerListener.Before.FILE_EDITOR_MANAGER);
        beforePublisher.beforeFileClosed(editorManager,file);
        if (myTabbedPane != null && editor != null) {
          final int componentIndex=findComponentIndex(editor.getComponent());
          if (componentIndex >= 0) {
            final int indexToSelect=calcIndexToSelect(file,componentIndex);
            myRemovedTabs.push(Pair.create(file.getUrl(),componentIndex));
            myTabbedPane.removeTabAt(componentIndex,indexToSelect,transferFocus);
            editorManager.disposeComposite(editor);
          }
        }
 else {
          myPanel.removeAll();
          if (editor != null) {
            editorManager.disposeComposite(editor);
          }
        }
        if (disposeIfNeeded && getTabCount() == 0) {
          removeFromSplitter();
        }
 else {
          myPanel.revalidate();
          if (myTabbedPane == null) {
            myPanel.repaint();
          }
        }
      }
  finally {
        editorManager.removeSelectionRecord(file,EditorWindow.this);
        editorManager.notifyPublisher(new Runnable(){
          @Override public void run(){
            final Project project=editorManager.getProject();
            if (!project.isDisposed()) {
              final FileEditorManagerListener afterPublisher=project.getMessageBus().syncPublisher(FileEditorManagerListener.FILE_EDITOR_MANAGER);
              afterPublisher.fileClosed(editorManager,file);
            }
          }
        }
);
        splitters.afterFileClosed(file);
      }
    }
  }
,myOwner);
}
