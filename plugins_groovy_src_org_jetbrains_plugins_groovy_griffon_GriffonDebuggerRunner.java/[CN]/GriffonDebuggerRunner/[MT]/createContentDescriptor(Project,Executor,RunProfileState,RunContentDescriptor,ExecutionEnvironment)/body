{
  final JavaCommandLine javaCommandLine=(JavaCommandLine)state;
  final JavaParameters params=javaCommandLine.getJavaParameters();
  params.getVMParametersList().addParametersString("-Xdebug -Xnoagent -Dgriffon.full.stacktrace=true -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005");
  final boolean useSockets=true;
  String address="";
  try {
    address=DebuggerUtils.getInstance().findAvailableDebugAddress(useSockets);
    for (    String s : params.getProgramParametersList().getList()) {
      if (s.startsWith("run-")) {
        params.getProgramParametersList().replaceOrAppend(s,s + " --debug --debugPort=" + address);
        break;
      }
    }
  }
 catch (  ExecutionException ignored) {
  }
  RemoteConnection connection=new RemoteConnection(useSockets,"127.0.0.1",address,false);
  return attachVirtualMachine(project,executor,state,contentToReuse,env,connection,true);
}
