{
  final Mappings delta=context.createDelta();
  final List<File> successfullyCompiledFiles=new ArrayList<File>();
  if (!successfullyCompiled.isEmpty()) {
    final Callbacks.Backend callback=delta.getCallback();
    final FileGeneratedEvent generatedEvent=new FileGeneratedEvent();
    for (    GroovycOSProcessHandler.OutputItem item : successfullyCompiled) {
      final String sourcePath=FileUtil.toSystemIndependentName(item.sourcePath);
      final String outputPath=FileUtil.toSystemIndependentName(item.outputPath);
      final RootDescriptor moduleAndRoot=context.getModuleAndRoot(new File(sourcePath));
      if (moduleAndRoot != null) {
        final String moduleName=moduleAndRoot.module;
        context.getDataManager().getSourceToOutputMap(moduleName,moduleAndRoot.isTestRoot).appendData(sourcePath,outputPath);
        String moduleOutputPath=generationOutputs.get(context.getProject().getModules().get(moduleName));
        generatedEvent.add(moduleOutputPath,FileUtil.getRelativePath(moduleOutputPath,outputPath,'/'));
      }
      callback.associate(outputPath,sourcePath,new ClassReader(FileUtil.loadFileBytes(new File(outputPath))));
      successfullyCompiledFiles.add(new File(sourcePath));
    }
    context.processMessage(generatedEvent);
  }
  return updateMappings(context,delta,chunk,toCompile,successfullyCompiledFiles);
}
