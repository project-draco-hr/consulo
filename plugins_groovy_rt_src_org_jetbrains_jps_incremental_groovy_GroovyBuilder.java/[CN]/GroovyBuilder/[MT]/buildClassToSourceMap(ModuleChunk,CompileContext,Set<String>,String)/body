{
  final Map<String,String> class2Src=new HashMap<String,String>();
  for (  Module module : chunk.getModules()) {
    final SourceToOutputMapping srcToOut=context.getDataManager().getSourceToOutputMap(module.getName(),context.isCompilingTests());
    for (    String src : srcToOut.getKeys()) {
      if (!toCompilePaths.contains(src) && isGroovyFile(src) && !context.getProject().getCompilerConfiguration().getExcludes().isExcluded(new File(src))) {
        final Collection<String> outs=srcToOut.getState(src);
        if (outs != null) {
          for (          String out : outs) {
            if (out.endsWith(".class") && out.startsWith(moduleOutputPath)) {
              final String className=out.substring(moduleOutputPath.length(),out.length() - ".class".length()).replace('/','.');
              class2Src.put(className,src);
            }
          }
        }
      }
    }
  }
  return class2Src;
}
