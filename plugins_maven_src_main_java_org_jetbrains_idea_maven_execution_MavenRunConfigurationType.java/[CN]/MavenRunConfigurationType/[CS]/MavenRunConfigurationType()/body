{
  myFactory=new ConfigurationFactory(this){
    public RunConfiguration createTemplateConfiguration(    Project project){
      return new MavenRunConfiguration(project,this,"");
    }
    public RunConfiguration createTemplateConfiguration(    Project project,    RunManager runManager){
      return new MavenRunConfiguration(project,this,"");
    }
    @Override public RunConfiguration createConfiguration(    String name,    RunConfiguration template){
      MavenRunConfiguration cfg=(MavenRunConfiguration)super.createConfiguration(name,template);
      if (!StringUtil.isEmptyOrSpaces(cfg.getRunnerParameters().getWorkingDirPath()))       return cfg;
      Project project=cfg.getProject();
      if (project == null)       return cfg;
      MavenProjectsManager projectsManager=MavenProjectsManager.getInstance(project);
      List<MavenProject> projects=projectsManager.getProjects();
      if (projects.size() != 1) {
        return cfg;
      }
      VirtualFile directory=projects.get(0).getDirectoryFile();
      cfg.getRunnerParameters().setWorkingDirPath(directory.getPath());
      return cfg;
    }
    @Override public void configureBeforeRunTaskDefaults(    Key<? extends BeforeRunTask> providerID,    BeforeRunTask task){
      if (providerID == CompileStepBeforeRun.ID || providerID == CompileStepBeforeRunNoErrorCheck.ID) {
        task.setEnabled(false);
      }
    }
  }
;
}
