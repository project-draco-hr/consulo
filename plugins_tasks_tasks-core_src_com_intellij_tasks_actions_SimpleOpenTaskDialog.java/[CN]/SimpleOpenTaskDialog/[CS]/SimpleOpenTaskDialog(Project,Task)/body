{
  super(project,false);
  myProject=project;
  myTask=task;
  TaskManagerImpl taskManager=(TaskManagerImpl)TaskManager.getManager(myProject);
  setTitle("Open Task");
  myTaskNameLabel.setText(TaskUtil.getTrimmedSummary(task));
  TaskManagerImpl manager=(TaskManagerImpl)TaskManager.getManager(project);
  ControlBinder binder=new ControlBinder(manager.getState());
  binder.bindAnnotations(this);
  binder.reset();
  TaskRepository repository=task.getRepository();
  if (repository == null || !repository.getRepositoryType().getPossibleTaskStates().contains(TaskState.IN_PROGRESS)) {
    myMarkAsInProgressBox.setVisible(false);
  }
  ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
  for (Iterator<ChangeListInfo> it=taskManager.getOpenChangelists(task).iterator(); it.hasNext(); ) {
    ChangeListInfo changeListInfo=it.next();
    if (changeListManager.getChangeList(changeListInfo.id) == null) {
      it.remove();
    }
  }
  boolean vcsEnabled=manager.isVcsEnabled();
  if (!vcsEnabled) {
    myCreateChangelist.setEnabled(false);
    myCreateChangelist.setSelected(false);
  }
 else   if (!taskManager.getOpenChangelists(task).isEmpty()) {
    myCreateChangelist.setSelected(true);
    myCreateChangelist.setEnabled(false);
  }
 else {
    myCreateChangelist.setSelected(taskManager.getState().createChangelist);
    myCreateChangelist.setEnabled(true);
  }
  init();
  getPreferredFocusedComponent();
}
