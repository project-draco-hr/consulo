{
  final PsiManager manager=clazz.getManager();
  final PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
  final PsiMethod patternMethod=factory.createMethodFromText("protected void setUp() throws Exception {\nsuper.setUp();\n}",null);
  final PsiClass baseClass=clazz.getSuperClass();
  if (baseClass != null) {
    final PsiMethod baseMethod=baseClass.findMethodBySignature(patternMethod,false);
    if (baseMethod != null && baseMethod.hasModifierProperty(PsiModifier.PUBLIC)) {
      PsiUtil.setModifierProperty(patternMethod,PsiModifier.PROTECTED,false);
      PsiUtil.setModifierProperty(patternMethod,PsiModifier.PUBLIC,true);
    }
  }
  PsiMethod inClass=clazz.findMethodBySignature(patternMethod,false);
  if (inClass == null) {
    return (PsiMethod)clazz.add(patternMethod);
  }
 else   if (inClass.getBody() == null) {
    return (PsiMethod)inClass.replace(patternMethod);
  }
  return inClass;
}
