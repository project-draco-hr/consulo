{
  final PsiFile psiFile=doInReadActionIfProjectOpen(new Computable<PsiFile>(){
    @Nullable @Override public PsiFile compute(){
      return PsiManager.getInstance(myProject).findFile(file);
    }
  }
);
  if (psiFile != null && myCurrentSuitesBundle != null && psiFile.isPhysical()) {
    final CoverageEngine engine=myCurrentSuitesBundle.getCoverageEngine();
    if (!engine.coverageEditorHighlightingApplicableTo(psiFile)) {
      return;
    }
    for (    FileEditor editor : editors) {
      if (editor instanceof TextEditor) {
        final Editor textEditor=((TextEditor)editor).getEditor();
        SrcFileAnnotator annotator;
synchronized (ANNOTATORS_LOCK) {
          annotator=myAnnotators.remove(textEditor);
        }
        if (annotator != null) {
          Disposer.dispose(annotator);
        }
        break;
      }
    }
    for (    FileEditor editor : editors) {
      if (editor instanceof TextEditor) {
        final Editor textEditor=((TextEditor)editor).getEditor();
        SrcFileAnnotator annotator=getAnnotator(textEditor);
        if (annotator == null) {
          annotator=new SrcFileAnnotator(psiFile,textEditor);
synchronized (ANNOTATORS_LOCK) {
            myAnnotators.put(textEditor,annotator);
          }
        }
        if (myCurrentSuitesBundle != null && engine.acceptedByFilters(psiFile,myCurrentSuitesBundle)) {
          annotator.showCoverageInformation(myCurrentSuitesBundle);
        }
      }
    }
  }
}
