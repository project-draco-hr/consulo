{
  myProjectFixture=new GitCucumberLightProjectFixture();
  myProjectFixture.setUp();
  myProject=myProjectFixture.getProject();
  ((ProjectComponent)ChangeListManager.getInstance(myProject)).projectOpened();
  ((ProjectComponent)VcsDirtyScopeManager.getInstance(myProject)).projectOpened();
  myProjectRoot=myProject.getBasePath();
  myTestRoot=myProjectRoot;
  myPlatformFacade=ServiceManager.getService(myProject,GitPlatformFacade.class);
  myGit=ServiceManager.getService(myProject,Git.class);
  mySettings=myPlatformFacade.getSettings(myProject);
  myVcsHelper=overrideService(myProject,AbstractVcsHelper.class,MockVcsHelper.class);
  myChangeListManager=myPlatformFacade.getChangeListManager(myProject);
  myNotificator=overrideService(myProject,Notificator.class,TestNotificator.class);
  cd(myProjectRoot);
  myRepository=createRepo(myProjectRoot);
  ProjectLevelVcsManagerImpl vcsManager=(ProjectLevelVcsManagerImpl)ProjectLevelVcsManager.getInstance(myProject);
  AbstractVcs vcs=vcsManager.findVcsByName("Git");
  Assert.assertEquals(1,vcsManager.getRootsUnderVcs(vcs).length);
  virtualCommits=new GitTestVirtualCommitsHolder();
}
