{
  globalContext.getRefManager().iterate(new RefJavaVisitor(){
    @Override public void visitClass(    @NotNull RefClass refClass){
      if (!globalContext.shouldCheck(refClass,RedundantSuppressInspection.this))       return;
      CommonProblemDescriptor[] descriptors=checkElement(refClass,manager,globalContext.getProject());
      if (descriptors != null) {
        for (        CommonProblemDescriptor descriptor : descriptors) {
          if (descriptor instanceof ProblemDescriptor) {
            final PsiElement psiElement=((ProblemDescriptor)descriptor).getPsiElement();
            final PsiMember member=PsiTreeUtil.getParentOfType(psiElement,PsiMember.class);
            final RefElement refElement=globalContext.getRefManager().getReference(member);
            if (refElement != null) {
              problemDescriptionsProcessor.addProblemElement(refElement,descriptor);
              continue;
            }
          }
          problemDescriptionsProcessor.addProblemElement(refClass,descriptor);
        }
      }
    }
  }
);
}
