{
  final String prefix=StringUtil.repeatSymbol('a',128) + ".";
  final File dir=FileUtil.createTempDirectory(FileUtil.createTempDirectory(FileUtil.createTempDirectory(FileUtil.createTempDirectory(FileUtil.createTempDirectory(FileUtil.createTempDirectory(myTempDirectory,prefix,".dir"),prefix,".dir"),prefix,".dir"),prefix,".dir"),prefix,".dir"),prefix,".dir");
  final File file=FileUtil.createTempFile(dir,prefix,".txt",true);
  assertTrue(file.exists());
  FileUtil.writeToFile(file,myTestData);
  final FileAttributes attributes=getAttributes(file);
  assertEquals(FileAttributes.Type.FILE,attributes.type);
  assertEquals(0,attributes.flags);
  assertEquals(myTestData.length,attributes.length);
  assertTimestampEquals(file.lastModified(),attributes.lastModified);
  assertTrue(attributes.isWritable());
  if (SystemInfo.isWindows) {
    final String[] list1=dir.list();
    assertNotNull(list1);
    final FileInfo[] list2=IdeaWin32.getInstance().listChildren(dir.getPath());
    assertNotNull(list2);
    assertEquals(list1.length + 2,list2.length);
  }
}
