{
  if (atStart && element instanceof PsiStatement && element.getParent() instanceof PsiCodeBlock&& element.getPrevSibling() != null) {
    return;
  }
  for (int i=myUnhandledExceptionCatchBlocks.size() - 1; i >= 0; i--) {
    PsiElement block=myUnhandledExceptionCatchBlocks.get(i);
    if (block == null) {
      if (!myFinallyBlocks.isEmpty()) {
        break;
      }
 else {
        continue;
      }
    }
    ConditionalThrowToInstruction throwToInstruction=new ConditionalThrowToInstruction(-1);
    myCurrentFlow.addInstruction(throwToInstruction);
    if (!patchUncheckedThrowInstructionIfInsideFinally(throwToInstruction,element,block)) {
      addElementOffsetLater(block,true);
    }
  }
  if (!myFinallyBlocks.isEmpty()) {
    final PsiElement finallyBlock=myFinallyBlocks.get(myFinallyBlocks.size() - 1);
    ConditionalThrowToInstruction throwToInstruction=new ConditionalThrowToInstruction(-2);
    myCurrentFlow.addInstruction(throwToInstruction);
    if (!patchUncheckedThrowInstructionIfInsideFinally(throwToInstruction,element,finallyBlock)) {
      addElementOffsetLater(finallyBlock,true);
    }
  }
}
