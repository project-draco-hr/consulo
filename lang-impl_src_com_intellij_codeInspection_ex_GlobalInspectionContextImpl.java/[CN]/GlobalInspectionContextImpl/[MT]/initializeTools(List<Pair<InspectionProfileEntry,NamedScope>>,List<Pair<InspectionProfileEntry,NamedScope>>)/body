{
  myJobDescriptors=new ArrayList<JobDescriptor>();
  final InspectionProfile profile=getCurrentProfile();
  InspectionProfileWrapper inspectionProfile=InspectionProjectProfileManager.getInstance(myProject).getProfileWrapper(profile.getName());
  if (inspectionProfile == null) {
    inspectionProfile=new InspectionProfileWrapper(profile);
    final InspectionProfileWrapper profileWrapper=inspectionProfile;
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        profileWrapper.init(getProject());
      }
    }
);
  }
  final List<ScopeToolState> usedTools=inspectionProfile.getInspectionProfile().getModifiableModel().getAllEnabledInspectionTools();
  for (  ScopeToolState entry : usedTools) {
    final InspectionTool tool=(InspectionTool)entry.getTool();
    tool.initialize(this);
    final String shortName=tool.getShortName();
    Set<Pair<InspectionTool,NamedScope>> sertainTools=myTools.get(shortName);
    if (sertainTools == null) {
      sertainTools=new HashSet<Pair<InspectionTool,NamedScope>>();
      myTools.put(shortName,sertainTools);
    }
    final Pair<InspectionTool,NamedScope> scopePair=Pair.create(tool,entry.getScope());
    sertainTools.add(scopePair);
    if (tool instanceof LocalInspectionToolWrapper) {
      localTools.add(new Pair<InspectionProfileEntry,NamedScope>(tool,entry.getScope()));
      appendJobDescriptor(LOCAL_ANALYSIS);
    }
 else {
      tools.add(new Pair<InspectionProfileEntry,NamedScope>(tool,entry.getScope()));
      JobDescriptor[] jobDescriptors=tool.getJobDescriptors();
      for (      JobDescriptor jobDescriptor : jobDescriptors) {
        appendJobDescriptor(jobDescriptor);
      }
    }
  }
  for (  GlobalInspectionContextExtension extension : myExtensions.values()) {
    extension.performPreRunActivities(tools,localTools,this);
  }
}
