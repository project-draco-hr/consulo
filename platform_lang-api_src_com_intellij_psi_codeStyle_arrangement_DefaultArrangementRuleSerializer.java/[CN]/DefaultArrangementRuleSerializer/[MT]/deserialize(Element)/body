{
  StdArrangementSettings result=new StdArrangementSettings();
  Element groups=element.getChild(GROUPS_ELEMENT_NAME);
  if (groups != null) {
    for (    Object group : groups.getChildren(GROUP_ELEMENT_NAME)) {
      Element groupElement=(Element)group;
      result.addGrouping(ArrangementGroupingType.valueOf(groupElement.getText()));
    }
  }
  Element rulesElement=element.getChild(RULES_ELEMENT_NAME);
  if (rulesElement != null) {
    for (    Object o : rulesElement.getChildren(RULE_ELEMENT_NAME)) {
      Element ruleElement=(Element)o;
      Element matcherElement=ruleElement.getChild(MATCHER_ELEMENT_NAME);
      if (matcherElement == null) {
        continue;
      }
      StdArrangementEntryMatcher matcher=null;
      for (      Object c : matcherElement.getChildren()) {
        matcher=myMatcherSerializer.deserialize((Element)c);
        if (matcher != null) {
          break;
        }
      }
      if (matcher == null) {
        return null;
      }
      Element orderTypeElement=element.getChild(ORDER_TYPE_ELEMENT_NAME);
      ArrangementEntryOrderType orderType=ArrangementRule.DEFAULT_ORDER_TYPE;
      if (orderTypeElement != null) {
        orderType=ArrangementEntryOrderType.valueOf(orderTypeElement.getText());
      }
      result.addRule(new StdArrangementRule(matcher,orderType));
    }
  }
  return result;
}
