{
  final PsiType type=instruction.getResultType();
  final MethodCallInstruction.MethodType methodType=instruction.getMethodType();
  DfaValue dfaValue=null;
  if (type != null && (type instanceof PsiClassType || type.getArrayDimensions() > 0)) {
    @Nullable final Boolean nullability=myCalleeNullability.get(instruction);
    dfaValue=nullability == Boolean.FALSE ? factory.getNotNullFactory().create(type) : factory.getTypeFactory().create(type,nullability == Boolean.TRUE);
  }
 else   if (methodType == MethodCallInstruction.MethodType.UNBOXING) {
    dfaValue=factory.getBoxedFactory().createUnboxed(oldValue);
  }
 else   if (methodType == MethodCallInstruction.MethodType.BOXING) {
    dfaValue=factory.getBoxedFactory().createBoxed(oldValue);
  }
 else   if (methodType == MethodCallInstruction.MethodType.CAST) {
    if (oldValue instanceof DfaConstValue) {
      final DfaConstValue constValue=(DfaConstValue)oldValue;
      Object o=constValue.getValue();
      if (o instanceof Double || o instanceof Float) {
        double dbVal=o instanceof Double ? ((Double)o).doubleValue() : ((Float)o).doubleValue();
        if (Math.floor(dbVal) == dbVal)         o=TypeConversionUtil.computeCastTo(o,PsiType.LONG);
      }
 else {
        o=TypeConversionUtil.computeCastTo(o,PsiType.LONG);
      }
      dfaValue=factory.getConstFactory().createFromValue(o,type);
    }
 else {
      dfaValue=oldValue;
    }
  }
  state.push(dfaValue == null ? DfaUnknownValue.getInstance() : dfaValue);
}
