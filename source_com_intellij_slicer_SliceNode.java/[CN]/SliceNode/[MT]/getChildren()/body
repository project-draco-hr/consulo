{
  long count=PsiManager.getInstance(getProject()).getModificationTracker().getModificationCount();
  if (myCachedChildren == null || storedModificationCount != count) {
    myCachedChildren=Collections.synchronizedList(new ArrayList<SliceNode>());
    storedModificationCount=count;
    if (isValid()) {
      ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
        public void run(){
          getValue().processChildren(new Processor<SliceUsage>(){
            public boolean process(            SliceUsage sliceUsage){
              SliceNode node=new SliceNode(myProject,sliceUsage,targetEqualUsages,myTreeBuilder);
              myCachedChildren.add(node);
              return true;
            }
          }
);
        }
      }
,"Looking for Usages",false,getProject());
    }
  }
  return myCachedChildren;
}
