{
  LOG.debug("Guessing Git root...");
  ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(project);
  AbstractVcs gitVcs=GitVcs.getInstance(project);
  if (gitVcs == null) {
    LOG.debug("GitVcs not found.");
    return null;
  }
  VirtualFile[] gitRoots=vcsManager.getRootsUnderVcs(gitVcs);
  if (gitRoots.length == 0) {
    LOG.debug("No Git roots in the project.");
    return null;
  }
  if (gitRoots.length == 1) {
    VirtualFile onlyRoot=gitRoots[0];
    LOG.debug("Only one Git root in the project, returning: " + onlyRoot);
    return onlyRoot;
  }
  GitVcsSettings settings=GitVcsSettings.getInstance(project);
  if (settings != null) {
    String recentRootPath=settings.getRecentRootPath();
    if (recentRootPath != null) {
      VirtualFile recentRoot=VcsUtil.getVirtualFile(recentRootPath);
      if (recentRoot != null) {
        LOG.debug("Returning the recent root: " + recentRoot);
        return recentRoot;
      }
    }
  }
  VirtualFile projectBaseDir=project.getBaseDir();
  if (projectBaseDir == null) {
    VirtualFile firstRoot=gitRoots[0];
    LOG.debug("Project base dir is null, returning the first root: " + firstRoot);
    return firstRoot;
  }
  VirtualFile rootCandidate=null;
  for (  VirtualFile root : gitRoots) {
    if (root.equals(projectBaseDir)) {
      return root;
    }
 else     if (VfsUtilCore.isAncestor(root,projectBaseDir,true)) {
      rootCandidate=root;
    }
  }
  LOG.debug("Returning the best candidate: " + rootCandidate);
  return rootCandidate;
}
