{
  final Set<Module> modules=getNodes();
  final OrderedSet<VirtualFile> cpFiles=new OrderedSet<VirtualFile>((TObjectHashingStrategy<VirtualFile>)TObjectHashingStrategy.CANONICAL);
  final OrderedSet<VirtualFile> jdkFiles=new OrderedSet<VirtualFile>((TObjectHashingStrategy<VirtualFile>)TObjectHashingStrategy.CANONICAL);
  for (  final Module module : modules) {
    final OrderEntry[] orderEntries=CompilerPathsEx.getOrderEntries(module);
    for (    OrderEntry orderEntry : orderEntries) {
      if (orderEntry instanceof JdkOrderEntry) {
        jdkFiles.addAll(Arrays.asList(orderEntry.getFiles(OrderRootType.COMPILATION_CLASSES)));
        break;
      }
 else {
        cpFiles.addAll(Arrays.asList(orderEntry.getFiles(OrderRootType.COMPILATION_CLASSES)));
      }
    }
  }
  if ((mySourcesFilter & TEST_SOURCES) == 0) {
    cpFiles.removeAll(myContext.getTestOutputDirectories());
  }
  cpFiles.addAll(jdkFiles);
  return convertToStringPath(cpFiles);
}
