{
  List<String> nonexistentOutputRoots=new SmartList<String>();
  for (  File outputRoot : myTarget.getOutputRoots(context)) {
    if (!outputRoot.exists()) {
      nonexistentOutputRoots.add(outputRoot.getAbsolutePath());
    }
  }
  if (nonexistentOutputRoots.isEmpty())   return false;
  Set<String> storedNonExistentOutputs;
  File file=getNonexistentOutputsFile();
  if (!file.exists()) {
    storedNonExistentOutputs=Collections.emptySet();
  }
 else {
    List<String> lines=StringUtil.split(FileUtil.loadFile(file),"\n");
    storedNonExistentOutputs=new THashSet<String>(lines,FileUtil.PATH_HASHING_STRATEGY);
  }
  return !storedNonExistentOutputs.containsAll(nonexistentOutputRoots);
}
