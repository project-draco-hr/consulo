{
  final JButton include=new JButton(IdeBundle.message("button.include"));
  final JButton includeRec=new JButton(IdeBundle.message("button.include.recursively"));
  final JButton exclude=new JButton(IdeBundle.message("button.exclude"));
  final JButton excludeRec=new JButton(IdeBundle.message("button.exclude.recursively"));
  myPackageTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    @Override public void valueChanged(    TreeSelectionEvent e){
      final ArrayList<PackageSet> selectedRecSets=getSelectedSets(true);
      final boolean noRecursiveSet=selectedRecSets == null || selectedRecSets.isEmpty();
      includeRec.setEnabled(!noRecursiveSet);
      excludeRec.setEnabled(!noRecursiveSet);
      final ArrayList<PackageSet> selectedSets=getSelectedSets(false);
      final boolean noSet=selectedSets == null || selectedSets.isEmpty();
      include.setEnabled(!noSet);
      exclude.setEnabled(!noSet);
    }
  }
);
  JPanel buttonsPanel=new JPanel(new VerticalFlowLayout());
  buttonsPanel.add(include);
  buttonsPanel.add(includeRec);
  buttonsPanel.add(exclude);
  buttonsPanel.add(excludeRec);
  include.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      includeSelected(false);
    }
  }
);
  includeRec.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      includeSelected(true);
    }
  }
);
  exclude.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      excludeSelected(false);
    }
  }
);
  excludeRec.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      excludeSelected(true);
    }
  }
);
  return buttonsPanel;
}
