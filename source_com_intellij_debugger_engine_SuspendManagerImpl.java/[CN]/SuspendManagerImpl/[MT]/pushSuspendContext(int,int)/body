{
  SuspendContextImpl suspendContext=new SuspendContextImpl(myDebugProcess,suspendPolicy,nVotes,null){
    protected void resumeImpl(){
      LOG.debug("Start resuming...");
      myDebugProcess.logThreads();
switch (getSuspendPolicy()) {
case EventRequest.SUSPEND_ALL:
        try {
          myDebugProcess.getVirtualMachineProxy().resume();
        }
 catch (        InternalException e) {
          if (Patches.MAC_RESUME_VM_HACK && e.errorCode() == 13) {
            myDebugProcess.getVirtualMachineProxy().resume();
          }
 else {
            LOG.error(e);
          }
        }
      LOG.debug("VM resumed ");
    break;
case EventRequest.SUSPEND_EVENT_THREAD:
  getThread().resume();
if (LOG.isDebugEnabled()) {
  LOG.debug("Thread resumed : " + getThread().toString());
}
break;
case EventRequest.SUSPEND_NONE:
LOG.debug("None resumed");
break;
}
if (LOG.isDebugEnabled()) {
LOG.debug("Suspends = " + suspends);
}
myDebugProcess.logThreads();
}
}
;
pushContext(suspendContext);
return suspendContext;
}
