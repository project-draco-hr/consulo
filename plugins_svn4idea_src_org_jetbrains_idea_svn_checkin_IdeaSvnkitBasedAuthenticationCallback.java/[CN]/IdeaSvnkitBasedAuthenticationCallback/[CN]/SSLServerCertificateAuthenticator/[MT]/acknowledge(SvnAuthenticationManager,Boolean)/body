{
  if (myCertificate == null) {
    String stored=(String)manager.getRuntimeAuthStorage().getData("svn.ssl.server",myRealm);
    CertificateFactory cf=null;
    try {
      cf=CertificateFactory.getInstance("X509");
      final byte[] buffer=new byte[stored.length()];
      SVNBase64.base64ToByteArray(new StringBuffer(stored),buffer);
      myCertificate=(X509Certificate)cf.generateCertificate(new ByteArrayInputStream(buffer));
    }
 catch (    CertificateException e) {
      throw new SVNException(SVNErrorMessage.create(SVNErrorCode.AUTHN_CREDS_UNAVAILABLE,e));
    }
    myCertificateRealm=myRealm;
  }
  if (myTempDirectory != null && myCertificate != null) {
    if (!(myCertificate instanceof X509Certificate)) {
      throw new SVNException(SVNErrorMessage.create(SVNErrorCode.IO_ERROR,"Can not store server certificate: " + myCertificate));
    }
    X509Certificate x509Certificate=(X509Certificate)myCertificate;
    String stored=null;
    try {
      stored=SVNBase64.byteArrayToBase64(x509Certificate.getEncoded());
    }
 catch (    CertificateEncodingException e) {
      throw new SVNException(SVNErrorMessage.create(SVNErrorCode.IO_ERROR,e));
    }
    int failures=SVNSSLUtil.getServerCertificateFailures(x509Certificate,myUrl.getHost());
    storeServerCertificate(myTempDirectory,myCertificateRealm,stored,failures);
    if (myAuthentication != null) {
      final String realm=myCredentialsRealm == null ? myCertificateRealm : myCredentialsRealm;
      return storeCredentials(manager,myAuthentication,realm);
    }
  }
  return true;
}
