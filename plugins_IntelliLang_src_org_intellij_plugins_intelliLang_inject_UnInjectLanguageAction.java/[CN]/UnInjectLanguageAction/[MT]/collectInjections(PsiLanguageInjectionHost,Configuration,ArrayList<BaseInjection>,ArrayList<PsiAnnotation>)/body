{
  if (host instanceof XmlAttributeValue) {
    for (    final XmlAttributeInjection injection : configuration.getAttributeInjections()) {
      if (injection.isApplicable((XmlAttributeValue)host)) {
        injectionsToRemove.add(injection);
      }
    }
  }
 else   if (host instanceof XmlText) {
    final XmlTag tag=((XmlText)host).getParentTag();
    if (tag != null) {
      for (      XmlTagInjection injection : configuration.getTagInjections()) {
        if (injection.isApplicable(tag)) {
          injectionsToRemove.add(injection);
        }
      }
    }
  }
 else   if (host instanceof PsiLiteralExpression) {
    ConcatenationInjector.processLiteralExpressionInjectionsInner(configuration,new Processor<ConcatenationInjector.Info>(){
      public boolean process(      final ConcatenationInjector.Info info){
        final PsiAnnotation[] annotations=AnnotationUtilEx.getAnnotationFrom(info.owner,configuration.getLanguageAnnotationPair(),true);
        annotationsToRemove.addAll(Arrays.asList(annotations));
        for (        MethodParameterInjection injection : info.injections) {
          if (injection.isApplicable(info.method)) {
            injectionsToRemove.add(injection);
          }
        }
        return true;
      }
    }
,host);
  }
}
