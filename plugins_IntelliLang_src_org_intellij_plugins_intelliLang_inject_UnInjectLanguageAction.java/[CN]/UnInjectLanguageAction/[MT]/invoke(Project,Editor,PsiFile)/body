{
  PsiLanguageInjectionHost host=findInjectionHost(editor,file);
  Configuration configuration=Configuration.getInstance();
  if (host instanceof XmlAttributeValue) {
    for (Iterator<XmlAttributeInjection> it=configuration.getAttributeInjections().iterator(); it.hasNext(); ) {
      XmlAttributeInjection injection=it.next();
      if (injection.isApplicable((XmlAttributeValue)host)) {
        it.remove();
        break;
      }
    }
  }
 else   if (host instanceof XmlTag) {
    for (Iterator<XmlTagInjection> it=configuration.getTagInjections().iterator(); it.hasNext(); ) {
      XmlTagInjection injection=it.next();
      if (injection.isApplicable((XmlTag)host)) {
        it.remove();
        break;
      }
    }
  }
 else   if (host instanceof PsiMethod) {
    for (Iterator<MethodParameterInjection> it=configuration.getParameterInjections().iterator(); it.hasNext(); ) {
      MethodParameterInjection injection=it.next();
      if (injection.isApplicable((PsiMethod)host)) {
        it.remove();
        break;
      }
    }
  }
  configuration.configurationModified();
  FileContentUtil.reparseFiles(project,Collections.<VirtualFile>emptyList(),true);
}
