{
  final PsiLanguageInjectionHost host=findInjectionHost(editor,file);
  try {
    for (    LanguageInjectorSupport support : Extensions.getExtensions(LanguageInjectorSupport.EP_NAME)) {
      if (support.removeInjectionInPlace(host))       return;
    }
    final TemporaryPlacesRegistry places=TemporaryPlacesRegistry.getInstance(project);
    for (    Pair<SmartPsiElementPointer<PsiLanguageInjectionHost>,InjectedLanguage> pair : places.getTempInjectionsSafe()) {
      if (pair.first.getElement() == host) {
        places.removeTempInjection(pair);
      }
    }
  }
  finally {
    FileContentUtil.reparseFiles(project,Collections.<VirtualFile>emptyList(),true);
  }
}
