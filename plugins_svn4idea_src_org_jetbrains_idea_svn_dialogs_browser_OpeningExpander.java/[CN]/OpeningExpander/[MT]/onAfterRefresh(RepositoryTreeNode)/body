{
  myKeepingExpander.onAfterRefresh(node);
  if (node.isLeaf()) {
    return;
  }
  final String myUrl=node.getURL().toString();
  if (pathElements.contains(myUrl)) {
    myBrowser.expandNode(node);
    if (myLongest.equals(myUrl)) {
      removeSelf();
      return;
    }
    final Enumeration children=node.children();
    while (children.hasMoreElements()) {
      final TreeNode treeNode=(TreeNode)children.nextElement();
      if (treeNode instanceof RepositoryTreeNode) {
        final RepositoryTreeNode repositoryTreeNode=(RepositoryTreeNode)treeNode;
        final String childUrl=repositoryTreeNode.getURL().toString();
        if (pathElements.contains(childUrl)) {
          if ((mySelectionPath != null) && (mySelectionPath.equals(childUrl))) {
            myBrowser.setSelectedNode(repositoryTreeNode);
          }
          repositoryTreeNode.reload(this,false);
          return;
        }
      }
    }
    removeSelf();
  }
}
