{
  if (element == myRootElement) {
    final Library[] libraries=myParentEditor.getLibraries();
    Arrays.sort(libraries,LibrariesAlphaComparator.INSTANCE);
    LibraryElement[] elements=new LibraryElement[libraries.length];
    for (int idx=0; idx < libraries.length; idx++) {
      final Library library=libraries[idx];
      final boolean allPathsValid=allPathsValid(library,OrderRootType.CLASSES) && allPathsValid(library,OrderRootType.SOURCES) && allPathsValid(library,JavadocOrderRootType.INSTANCE)&& allPathsValid(library,AnnotationOrderRootType.INSTANCE);
      elements[idx]=new LibraryElement(library,myParentEditor,!allPathsValid);
    }
    return elements;
  }
  if (element instanceof LibraryElement) {
    final LibraryElement libraryItemElement=(LibraryElement)element;
    ArrayList<LibraryTableTreeContentElement> elements=new ArrayList<LibraryTableTreeContentElement>(3);
    final Library library=libraryItemElement.getLibrary();
    if (!libraryItemElement.isAnonymous()) {
      elements.add(new ClassesElement(libraryItemElement));
    }
    final String[] sources=myParentEditor.getLibraryEditor(library).getUrls(OrderRootType.SOURCES);
    if (sources.length > 0) {
      elements.add(new SourcesElement(libraryItemElement));
    }
    final String[] javadocs=myParentEditor.getLibraryEditor(library).getUrls(JavadocOrderRootType.INSTANCE);
    if (javadocs.length > 0) {
      elements.add(new JavadocElement(libraryItemElement));
    }
    final String[] annotations=myParentEditor.getLibraryEditor(library).getUrls(AnnotationOrderRootType.INSTANCE);
    if (annotations.length > 0) {
      elements.add(new AnnotationElement(libraryItemElement));
    }
    return elements.toArray();
  }
  if (element instanceof ClassesElement) {
    return buildItems(element,((ClassesElement)element).getParent().getLibrary(),OrderRootType.CLASSES);
  }
  if (element instanceof SourcesElement) {
    return buildItems(element,((SourcesElement)element).getParent().getLibrary(),OrderRootType.SOURCES);
  }
  if (element instanceof JavadocElement) {
    return buildItems(element,((JavadocElement)element).getParent().getLibrary(),JavadocOrderRootType.INSTANCE);
  }
  if (element instanceof AnnotationElement) {
    return buildItems(element,((AnnotationElement)element).getParent().getLibrary(),AnnotationOrderRootType.INSTANCE);
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
