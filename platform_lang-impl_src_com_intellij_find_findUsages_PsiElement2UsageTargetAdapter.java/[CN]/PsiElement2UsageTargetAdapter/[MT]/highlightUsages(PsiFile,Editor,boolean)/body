{
  PsiElement target=getElement();
  if (file instanceof PsiCompiledElement)   file=(PsiFile)((PsiCompiledElement)file).getMirror();
  final FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(target.getProject())).getFindUsagesManager();
  final FindUsagesHandler handler=findUsagesManager.getFindUsagesHandler(target,true);
  Collection<PsiReference> refs;
  PsiFile context=InjectedLanguageUtil.getTopLevelFile(file);
  SearchScope searchScope=new LocalSearchScope(context);
  if (handler != null) {
    refs=handler.findReferencesToHighlight(target,searchScope);
  }
 else {
    refs=ReferencesSearch.search(target,searchScope,false).findAll();
  }
  new HighlightUsagesHandler.DoHighlightRunnable(new ArrayList<PsiReference>(refs),target.getProject(),target,editor,context,clearHighlights).run();
}
