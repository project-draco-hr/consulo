{
  DiffRequestFactory requestFactory=DiffRequestFactory.getInstance();
  Collection<VirtualFile> files=myTable.getSelection();
  if (!beforeResolve(files)) {
    return;
  }
  for (  final VirtualFile file : files) {
    final MergeData mergeData;
    try {
      mergeData=myProvider.loadRevisions(file);
    }
 catch (    VcsException ex) {
      Messages.showErrorDialog(myRootPanel,"Error loading revisions to merge: " + ex.getMessage());
      break;
    }
    if (mergeData.CURRENT == null || mergeData.LAST == null || mergeData.ORIGINAL == null) {
      Messages.showErrorDialog(myRootPanel,"Error loading revisions to merge");
      break;
    }
    String leftTitle=myMergeDialogCustomizer.getLeftPanelTitle(file);
    String baseTitle=myMergeDialogCustomizer.getCenterPanelTitle(file);
    String rightTitle=myMergeDialogCustomizer.getRightPanelTitle(file,mergeData.LAST_REVISION_NUMBER);
    String title=myMergeDialogCustomizer.getMergeWindowTitle(file);
    final List<byte[]> byteContents=ContainerUtil.list(mergeData.CURRENT,mergeData.ORIGINAL,mergeData.LAST);
    List<String> contentTitles=ContainerUtil.list(leftTitle,baseTitle,rightTitle);
    Consumer<MergeResult> callback=new Consumer<MergeResult>(){
      @Override public void consume(      final MergeResult result){
        Document document=FileDocumentManager.getInstance().getCachedDocument(file);
        if (document != null)         FileDocumentManager.getInstance().saveDocument(document);
        checkMarkModifiedProject(file);
        if (result != MergeResult.CANCEL) {
          ApplicationManager.getApplication().runWriteAction(new Runnable(){
            @Override public void run(){
              markFileProcessed(file,getSessionResolution(result));
            }
          }
);
        }
      }
    }
;
    MergeRequest request;
    try {
      if (myProvider.isBinary(file)) {
        request=requestFactory.createBinaryMergeRequest(myProject,file,byteContents,title,contentTitles,callback);
      }
 else {
        request=requestFactory.createMergeRequest(myProject,file,byteContents,title,contentTitles,callback);
      }
    }
 catch (    InvalidDiffRequestException e) {
      LOG.error(e);
      Messages.showErrorDialog(myRootPanel,"Can't show merge dialog");
      break;
    }
    DiffManager.getInstance().showMerge(myProject,request);
  }
  updateModelFromFiles();
}
