{
  if (propertyMethod == null) {
    return null;
  }
  final PsiClass aClass=propertyMethod.getContainingClass();
  if (aClass == null) {
    return null;
  }
  final String methodName=propertyMethod.getName();
  final String prefix;
  if (methodName.startsWith("get")) {
    prefix="get";
  }
 else   if (methodName.startsWith(IS_PREFIX)) {
    prefix=IS_PREFIX;
  }
 else   if (methodName.startsWith("set")) {
    prefix="set";
  }
 else {
    return null;
  }
  final String name=methodName.substring(prefix.length());
  final PsiField field;
  if (prefix.equals("set")) {
    field=getFieldOfSetter(propertyMethod);
  }
 else {
    field=getFieldOfGetter(propertyMethod);
  }
  if (field == null) {
    return null;
  }
  if (prefix.equals("set")) {
    final PsiMethod result=findPropertyMethod(aClass,"get",name,field);
    if (result != null) {
      return result;
    }
    return findPropertyMethod(aClass,IS_PREFIX,name,field);
  }
 else {
    return findPropertyMethod(aClass,"set",name,field);
  }
}
