{
  if (group.size() < 2) {
    return;
  }
  GrStatement inner=((GrLabeledStatement)group.get(0)).getStatement();
  boolean embedded=inner != null && isTablePart(inner);
  GrStatement first=embedded ? inner : group.get(1);
  List<AlignmentProvider.Aligner> alignments=ContainerUtil.map2List(getSpockTable(first),new Function<LeafPsiElement,AlignmentProvider.Aligner>(){
    @Override public AlignmentProvider.Aligner fun(    LeafPsiElement leaf){
      return myAlignmentProvider.createAligner(leaf,true,Alignment.Anchor.RIGHT);
    }
  }
);
  int second=embedded ? 1 : 2;
  for (int i=second; i < group.size(); i++) {
    List<LeafPsiElement> table=getSpockTable(group.get(i));
    for (int j=0; j < Math.min(table.size(),alignments.size()); j++) {
      alignments.get(j).append(table.get(j));
    }
  }
}
