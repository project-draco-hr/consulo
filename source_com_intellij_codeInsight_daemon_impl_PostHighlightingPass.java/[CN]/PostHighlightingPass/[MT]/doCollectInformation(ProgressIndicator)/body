{
  if (myCompiled) {
    myHighlights=HighlightInfo.EMPTY_ARRAY;
    ;
    return;
  }
  PsiElement[] psiRoots=myFile.getPsiRoots();
  List<HighlightInfo> highlights=new ArrayList<HighlightInfo>();
  for (  final PsiElement psiRoot : psiRoots) {
    PsiElement[] elements=CodeInsightUtil.getElementsInRange(psiRoot,myStartOffset,myEndOffset);
    collectHighlights(elements,highlights);
  }
  PsiNamedElement[] unusedDcls=myRefCountHolder.getUnusedDcls();
  for (  PsiNamedElement unusedDcl : unusedDcls) {
    String message=MessageFormat.format(SYMBOL_IS_NOT_USED,new Object[]{unusedDcl.getName()});
    String dclType=UsageViewUtil.capitalize(UsageViewUtil.getType(unusedDcl));
    if (dclType == null || dclType.length() == 0)     dclType="Symbol";
    HighlightInfo highlightInfo=createUnusedSymbolInfo(unusedDcl.getNavigationElement(),dclType + message);
    highlights.add(highlightInfo);
  }
  myHighlights=highlights.toArray(new HighlightInfo[highlights.size()]);
}
