{
  PsiIdentifier identifier=variable.getNameIdentifier();
  if (!myRefCountHolder.isReferenced(variable)) {
    String message=MessageFormat.format(LOCAL_VARIABLE_IS_NOT_USED,new Object[]{identifier.getText()});
    HighlightInfo highlightInfo=createUnusedSymbolInfo(identifier,message);
    QuickFixAction.registerQuickFixAction(highlightInfo,new RemoveUnusedVariableFix(variable),options);
    return highlightInfo;
  }
  int count=myRefCountHolder.getReadRefCount(variable);
  if (count == 0) {
    String message=MessageFormat.format(LOCAL_VARIABLE_IS_NOT_USED_FOR_READING,new Object[]{identifier.getText()});
    HighlightInfo highlightInfo=createUnusedSymbolInfo(identifier,message);
    QuickFixAction.registerQuickFixAction(highlightInfo,new RemoveUnusedVariableFix(variable),options);
    return highlightInfo;
  }
  if (!variable.hasInitializer()) {
    count=myRefCountHolder.getWriteRefCount(variable);
    if (count == 0) {
      String message=MessageFormat.format(LOCAL_VARIABLE_IS_NOT_ASSIGNED,new Object[]{identifier.getText()});
      final HighlightInfo unusedSymbolInfo=createUnusedSymbolInfo(identifier,message);
      QuickFixAction.registerQuickFixAction(unusedSymbolInfo,new EmptyIntentionAction(HighlightDisplayKey.getDisplayNameByKey(HighlightDisplayKey.UNUSED_SYMBOL),options),options);
      return unusedSymbolInfo;
    }
  }
  return null;
}
