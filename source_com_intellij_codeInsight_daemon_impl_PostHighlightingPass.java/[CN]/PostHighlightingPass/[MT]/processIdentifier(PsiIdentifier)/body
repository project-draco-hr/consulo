{
  InspectionProfileImpl profile=mySettings.getInspectionProfile(identifier);
  if (!profile.isToolEnabled(HighlightDisplayKey.UNUSED_SYMBOL))   return null;
  if (InspectionManagerEx.inspectionResultSuppressed(identifier,HighlightDisplayKey.UNUSED_SYMBOL.getID()))   return null;
  PsiElement parent=identifier.getParent();
  if (PsiUtil.hasErrorElementChild(parent))   return null;
  List<IntentionAction> options=new ArrayList<IntentionAction>();
  options.add(new EditInspectionToolsSettingsAction(HighlightDisplayKey.UNUSED_SYMBOL));
  options.add(new AddNoInspectionCommentAction(HighlightDisplayKey.UNUSED_SYMBOL,identifier));
  options.add(new AddNoInspectionDocTagAction(HighlightDisplayKey.UNUSED_SYMBOL,identifier));
  options.add(new AddNoInspectionForClassAction(HighlightDisplayKey.UNUSED_SYMBOL,identifier));
  options.add(new AddNoInspectionAllForClassAction(identifier));
  options.add(new AddSuppressWarningsAnnotationAction(HighlightDisplayKey.UNUSED_SYMBOL,identifier));
  options.add(new AddSuppressWarningsAnnotationForClassAction(HighlightDisplayKey.UNUSED_SYMBOL,identifier));
  options.add(new AddSuppressWarningsAnnotationForAllAction(identifier));
  HighlightInfo info;
  InspectionProfile.UnusedSymbolSettings unusedSymbolSettings=profile.getUnusedSymbolSettings();
  if (parent instanceof PsiLocalVariable && unusedSymbolSettings.LOCAL_VARIABLE) {
    info=processLocalVariable((PsiLocalVariable)parent,options);
  }
 else   if (parent instanceof PsiField && unusedSymbolSettings.FIELD) {
    info=processField((PsiField)parent,options);
  }
 else   if (parent instanceof PsiParameter && unusedSymbolSettings.PARAMETER) {
    info=processParameter((PsiParameter)parent,options);
  }
 else   if (parent instanceof PsiMethod && unusedSymbolSettings.METHOD) {
    info=processMethod((PsiMethod)parent,options);
  }
 else   if (parent instanceof PsiClass && identifier.equals(((PsiClass)parent).getNameIdentifier()) && unusedSymbolSettings.CLASS) {
    info=processClass((PsiClass)parent,options);
  }
 else {
    return null;
  }
  return info;
}
