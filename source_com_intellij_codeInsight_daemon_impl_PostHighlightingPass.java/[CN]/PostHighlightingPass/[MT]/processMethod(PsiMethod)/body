{
  if (method.hasModifierProperty(PsiModifier.PRIVATE)) {
    int count=myRefCountHolder.getRefCount(method);
    if (count == 0) {
      if (isWriteObjectMethod(method) || isWriteReplaceMethod(method) || isReadObjectMethod(method)|| isReadObjectNoDataMethod(method)|| isReadResolveMethod(method)|| isIntentionalPrivateConstructor(method)) {
        return null;
      }
      String pattern=method.isConstructor() ? PRIVATE_CONSTRUCTOR_IS_NOT_USED : PRIVATE_METHOD_IS_NOT_USED;
      String symbolName=HighlightMessageUtil.getSymbolName(method,PsiSubstitutor.EMPTY);
      String message=MessageFormat.format(pattern,new Object[]{symbolName});
      HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.UNUSED_SYMBOL,method.getNameIdentifier(),message);
      QuickFixAction.registerQuickFixAction(highlightInfo,new SafeDeleteFix(method));
      return highlightInfo;
    }
  }
  return null;
}
