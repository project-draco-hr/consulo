{
  PsiElement qualifier=getQualifier();
  if (qualifier == null)   return;
  final ResolveCache resolveCache=ResolveCache.getInstance(getProject());
  qualifier.accept(new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      if (!(expression instanceof PsiReferenceExpressionImpl) || resolveCache.isCached(expression,true,false,true)) {
        return;
      }
      visitElement(expression);
    }
    @Override protected void elementFinished(    PsiElement element){
      if (!(element instanceof PsiReferenceExpressionImpl))       return;
      PsiReferenceExpressionImpl expression=(PsiReferenceExpressionImpl)element;
      resolveCache.resolveWithCaching(expression,OurGenericsResolver.INSTANCE,false,false);
    }
  }
);
}
