{
  final List<SVNURL> outdatedRequests=new LinkedList<SVNURL>();
  final Collection<SVNURL> keys=getAllCurrentKeys();
  for (  SVNURL key : keys) {
    final SVNURL commonURLAncestor=SVNURLUtil.getCommonURLAncestor(key,obj.getUrl());
    if ((!StringUtil.isEmptyOrSpaces(commonURLAncestor.getHost())) && (!StringUtil.isEmptyOrSpaces(commonURLAncestor.getPath()))) {
      final AuthenticationRequest currObj=getObj(key);
      if ((currObj != null) && passiveValidation(myVcs.getProject(),key,true,currObj.getRealm(),currObj.getKind())) {
        outdatedRequests.add(key);
      }
    }
  }
  log("on state changed ");
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      for (      SVNURL key : outdatedRequests) {
        removeLazyNotificationByKey(key);
      }
    }
  }
,ModalityState.NON_MODAL);
}
