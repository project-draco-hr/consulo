{
  final File basePath=basePath();
  basePath.mkdirs();
  final File namesFile=new File(basePath,"names.dat");
  final File attributesFile=new File(basePath,"attrib.dat");
  final File recordsFile=new File(basePath,"records.dat");
  if (!namesFile.exists()) {
    invalidateIndex();
  }
  try {
    if (getCorruptionMarkerFile().exists()) {
      invalidateIndex();
      throw new IOException("Corruption marker file found");
    }
    myNames=new PersistentStringEnumerator(namesFile);
    myAttributes=Storage.create(attributesFile.getCanonicalPath());
    myRecords=new ResizeableMappedFile(recordsFile,20 * 1024);
    if (myRecords.length() == 0) {
      cleanRecord(0);
      cleanRecord(1);
      setCurrentVersion();
    }
    if (getVersion() != VERSION) {
      throw new IOException("FS repository version mismatch");
    }
    if (myRecords.getInt(HEADER_CONNECTION_STATUS_OFFSET) != SAFELY_CLOSED_MAGIC) {
      throw new IOException("FS repostiory wasn't safely shut down");
    }
    markDirty();
  }
 catch (  IOException e) {
    LOG.info("Filesystem storage is corrupted or does not exist. [Re]Building. Reason: " + e.getMessage());
    try {
      closeFiles();
      boolean deleted=true;
      deleted&=FileUtil.delete(getCorruptionMarkerFile());
      deleted&=deleteWithSubordinates(namesFile);
      deleted&=Storage.deleteFiles(attributesFile.getCanonicalPath());
      deleted&=deleteWithSubordinates(recordsFile);
      if (!deleted) {
        throw new IOException("Cannot delete filesystem storage files");
      }
    }
 catch (    IOException e1) {
      final Runnable warnAndShutdown=new Runnable(){
        public void run(){
          JOptionPane.showMessageDialog(JOptionPane.getRootFrame(),"Files in " + basePath.getPath() + " are locked. IntelliJ IDEA will not be able to start up","Fatal Error",JOptionPane.ERROR_MESSAGE);
          System.exit(1);
        }
      }
;
      if (EventQueue.isDispatchThread()) {
        warnAndShutdown.run();
      }
 else {
        SwingUtilities.invokeLater(warnAndShutdown);
      }
      throw new RuntimeException("Can't rebuild filesystem storage ",e1);
    }
    init();
  }
}
