{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  if (methodExpression == null) {
    return;
  }
  final String methodName=methodExpression.getReferenceName();
  if (!methodName.startsWith("get") && !methodName.startsWith("update")) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  if (argumentList == null) {
    return;
  }
  final PsiExpression[] args=argumentList.getExpressions();
  if (args == null) {
    return;
  }
  if (args.length == 0) {
    return;
  }
  final PsiExpression arg=args[0];
  if (!TypeUtils.expressionHasType("int",arg)) {
    return;
  }
  if (!isConstant(arg)) {
    return;
  }
  final Integer val=(Integer)ConstantExpressionUtil.computeCastTo(arg,PsiType.INT);
  if (val == null || val.intValue() != 0) {
    return;
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (!TypeUtils.expressionHasTypeOrSubtype("java.sql.ResultSet",qualifier)) {
    return;
  }
  registerError(arg);
}
