{
  try {
    List<Accessor> accessors=new ArrayList<Accessor>();
    BeanInfo info=Introspector.getBeanInfo(aClass);
    PropertyDescriptor[] propertyDescriptors=info.getPropertyDescriptors();
    for (    PropertyDescriptor propertyDescriptor : propertyDescriptors) {
      if (propertyDescriptor.getName().equals(CLASS_PROPERTY))       continue;
      final Method readMethod=propertyDescriptor.getReadMethod();
      final Method writeMethod=propertyDescriptor.getWriteMethod();
      if (readMethod == null)       continue;
      if (writeMethod == null)       continue;
      if (XmlSerializerImpl.findAnnotation(readMethod.getAnnotations(),Transient.class) != null || XmlSerializerImpl.findAnnotation(writeMethod.getAnnotations(),Transient.class) != null)       continue;
      accessors.add(new PropertyAccessor(propertyDescriptor));
    }
    Field[] fields=aClass.getFields();
    for (    Field field : fields) {
      int modifiers=field.getModifiers();
      if (Modifier.isPublic(modifiers) && !Modifier.isStatic(modifiers) && XmlSerializerImpl.findAnnotation(field.getAnnotations(),Transient.class) == null) {
        accessors.add(new FieldAccessor(field));
      }
    }
    return accessors.toArray(new Accessor[accessors.size()]);
  }
 catch (  IntrospectionException e) {
    throw new XmlSerializationException(e);
  }
}
