{
  final TextRange rangeInElement=reference.getRangeInElement();
  final TextRange range=TextRange.from(reference.getElement().getTextRange().getStartOffset() + rangeInElement.getStartOffset(),rangeInElement.getLength());
  final Annotation annotation;
  if (reference instanceof EmptyResolveMessageProvider) {
    final String s=((EmptyResolveMessageProvider)reference).getUnresolvedMessagePattern();
    annotation=myHolder.createErrorAnnotation(range,s != null ? MessageFormat.format(s,reference.getCanonicalText()) : "Cannot resolve symbol");
  }
 else {
    annotation=myHolder.createErrorAnnotation(range,"Cannot resolve symbol");
  }
  annotation.setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
  if (reference instanceof QuickFixProvider) {
    final HighlightInfo info=new HighlightInfo(HighlightInfoType.WRONG_REF,annotation.getStartOffset(),annotation.getEndOffset(),"",null);
    ((QuickFixProvider)reference).registerQuickfix(info,reference);
    final List<Pair<HighlightInfo.IntentionActionDescriptor,TextRange>> ranges=info.quickFixActionRanges;
    if (ranges != null) {
      for (      Pair<HighlightInfo.IntentionActionDescriptor,TextRange> pair : ranges) {
        annotation.registerFix(pair.first.getAction(),pair.second);
      }
    }
  }
}
