{
  JavaResolveResult result=expr.advancedResolve(false);
  PsiElement resolve=result.getElement();
  if (resolve == null) {
    ASTNode refName=expr.findChildByRole(ChildRole.REFERENCE_NAME);
    if (refName != null && "length".equals(refName.getText())) {
      ASTNode qualifier=expr.findChildByRole(ChildRole.QUALIFIER);
      if (qualifier != null && ElementType.EXPRESSION_BIT_SET.contains(qualifier.getElementType())) {
        PsiType type=SourceTreeToPsiMap.<PsiExpression>treeToPsiNotNull(qualifier).getType();
        if (type instanceof PsiArrayType) {
          return PsiType.INT;
        }
      }
    }
    return null;
  }
  PsiTypeParameterListOwner owner=null;
  PsiType ret=null;
  if (resolve instanceof PsiVariable) {
    PsiType type=((PsiVariable)resolve).getType();
    ret=type instanceof PsiEllipsisType ? ((PsiEllipsisType)type).toArrayType() : type;
    if (resolve instanceof PsiField && !((PsiField)resolve).hasModifierProperty(PsiModifier.STATIC)) {
      owner=((PsiField)resolve).getContainingClass();
    }
  }
 else   if (resolve instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)resolve;
    ret=method.getReturnType();
    owner=method;
  }
  if (ret == null)   return null;
  final LanguageLevel languageLevel=PsiUtil.getLanguageLevel(expr);
  if (ret instanceof PsiClassType) {
    ret=((PsiClassType)ret).setLanguageLevel(languageLevel);
  }
  if (languageLevel.isAtLeast(LanguageLevel.JDK_1_5)) {
    final PsiSubstitutor substitutor=result.getSubstitutor();
    if (owner == null || !PsiUtil.isRawSubstitutor(owner,substitutor)) {
      PsiType substitutedType=substitutor.substitute(ret);
      return PsiImplUtil.normalizeWildcardTypeByPosition(substitutedType,expr);
    }
  }
  return TypeConversionUtil.erasure(ret);
}
