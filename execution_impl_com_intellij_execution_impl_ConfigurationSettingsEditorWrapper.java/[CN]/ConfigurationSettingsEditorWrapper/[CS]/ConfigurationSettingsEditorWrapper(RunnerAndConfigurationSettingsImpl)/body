{
  myEditor=new ConfigurationSettingsEditor(settings);
  Disposer.register(this,myEditor);
  final RunConfiguration runConfiguration=settings.getConfiguration();
  final RunManagerImpl runManager=RunManagerImpl.getInstanceImpl(runConfiguration.getProject());
  myCompileBeforeRunning=runManager.getCompileMethodBeforeRun(runConfiguration);
  final Set<String> list=runManager.getPossibleActionsBeforeRun();
  myCompilationMethodPanel.setLayout(new GridBagLayout());
  int gridy=0;
  for (  final String method : list) {
    final Boolean checked=myCompileBeforeRunning.get(method);
    final JCheckBox checkBox=new JCheckBox(method,checked != null && checked.booleanValue());
    final GridBagConstraints gc=new GridBagConstraints(0,gridy,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0);
    myCompilationMethodPanel.add(checkBox,gc);
    final Function<RunConfiguration,String> actionByName=runManager.getActionByName(method);
    final FixedSizeButton button;
    final JLabel label;
    if (actionByName != null) {
      final String descriptionByName=runManager.getDescriptionByName(method,runConfiguration);
      label=new JLabel(descriptionByName != null ? descriptionByName : "");
      gc.gridx++;
      myCompilationMethodPanel.add(label,gc);
      button=new FixedSizeButton(20);
      gc.gridx++;
      myCompilationMethodPanel.add(button,gc);
      button.addActionListener(new ActionListener(){
        public void actionPerformed(        ActionEvent e){
          final String description=actionByName.fun(runConfiguration);
          label.setText(description != null ? description : "");
        }
      }
);
      gc.gridx++;
      gc.weightx=1;
      myCompilationMethodPanel.add(Box.createHorizontalBox(),gc);
    }
 else {
      button=null;
      label=null;
    }
    enableSettings(button,checkBox,label);
    checkBox.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        myCompileBeforeRunning.put(method,checkBox.isSelected());
        enableSettings(button,checkBox,label);
      }
    }
);
    gridy++;
  }
  myStoreProjectConfiguration=runManager.isConfigurationShared(settings);
  myCbStoreProjectConfiguration.setSelected(myStoreProjectConfiguration);
  myCbStoreProjectConfiguration.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myStoreProjectConfiguration=myCbStoreProjectConfiguration.isSelected();
    }
  }
);
}
