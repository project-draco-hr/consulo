{
  final HashMap<Key,String> map=new HashMap<Key,String>();
  StdXMLReader reader;
  try {
    reader=new StdXMLReader(new ByteArrayInputStream(inputData.getContent())){
      @Override public Reader openStream(      String publicID,      String systemID) throws IOException {
        if (!"http://java.sun.com/dtd/properties.dtd".equals(systemID))         throw new IOException();
        return super.openStream(publicID,systemID);
      }
    }
;
  }
 catch (  IOException ignore) {
    return Collections.emptyMap();
  }
  MyIXMLBuilderAdapter builder=new MyIXMLBuilderAdapter(map);
  NanoXmlUtil.parse(reader,builder);
  if (builder.accepted)   map.put(MARKER_KEY,"");
  return map;
}
