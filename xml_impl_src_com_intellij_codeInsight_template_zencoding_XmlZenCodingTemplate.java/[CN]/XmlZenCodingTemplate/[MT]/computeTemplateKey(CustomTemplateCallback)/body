{
  Editor editor=callback.getEditor();
  int offset=callback.getOffset();
  PsiElement element=callback.getFile().findElementAt(offset > 0 ? offset - 1 : offset);
  int line=editor.getCaretModel().getLogicalPosition().line;
  int lineStart=editor.getDocument().getLineStartOffset(line);
  int parentStart;
  do {
    parentStart=element != null ? element.getTextRange().getStartOffset() : 0;
    int startOffset=parentStart > lineStart ? parentStart : lineStart;
    String key=computeKey(editor,startOffset);
    List<Token> tokens=parse(key,callback);
    if (tokens != null && check(tokens)) {
      if (tokens.size() == 2) {
        Token token=tokens.get(0);
        if (token instanceof TemplateToken) {
          if (key.equals(((TemplateToken)token).myKey) && callback.isLiveTemplateApplicable(key)) {
            return null;
          }
        }
      }
      return key;
    }
    if (element != null) {
      element=element.getParent();
    }
  }
 while (element != null && parentStart > lineStart);
  return null;
}
