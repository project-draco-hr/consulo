{
  final ArrayList<DefaultMutableTreeNode> parent=new ArrayList<DefaultMutableTreeNode>();
  TreeUtil.traverseDepth((TreeNode)myShortestPathTree.getRoot(),new TreeUtil.Traverse(){
    public boolean accept(    Object node){
      final DefaultMutableTreeNode treeNode=((DefaultMutableTreeNode)node);
      if (treeNode.getUserObject() != null && treeNode.getUserObject().equals(nodeToFind)) {
        parent.add(treeNode);
        return false;
      }
      return true;
    }
  }
);
  return parent.size() > 0 ? parent.get(0) : null;
}
