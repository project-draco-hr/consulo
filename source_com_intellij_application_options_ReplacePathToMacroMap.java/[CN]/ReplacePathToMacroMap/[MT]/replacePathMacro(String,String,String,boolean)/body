{
  if (text.length() < path.length()) {
    return text;
  }
  String text1=ignoreCase ? text.toLowerCase() : text;
  String path1=ignoreCase ? path.toLowerCase() : path;
  StringBuffer newText=null;
  int i=0;
  while (i < text1.length()) {
    int i1=text1.indexOf(path1,i);
    if (i1 >= 0) {
      int endOfOccurence=i1 + path1.length();
      if (endOfOccurence < text1.length() && text1.charAt(endOfOccurence) != '/') {
        i=endOfOccurence;
        continue;
      }
    }
    if (i1 < 0) {
      if (newText == null) {
        return text;
      }
      newText.append(text.substring(i));
      break;
    }
 else {
      if (macro == null) {
        return null;
      }
      if (newText == null) {
        newText=new StringBuffer();
      }
      newText.append(text.substring(i,i1));
      newText.append(macro);
      logUsage(macro);
      i=i1 + path.length();
    }
  }
  return newText != null ? newText.toString() : "";
}
