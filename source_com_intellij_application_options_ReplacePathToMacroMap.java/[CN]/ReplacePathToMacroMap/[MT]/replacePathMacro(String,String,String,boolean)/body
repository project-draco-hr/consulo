{
  if (text.length() < path.length()) {
    return text;
  }
  if (path.length() == 0)   return text;
  final StringBuilder newText=StringBuilderSpinAllocator.alloc();
  try {
    final boolean isWindowsRoot=path.endsWith(":/");
    int i=0;
    while (i < text.length()) {
      int occurrenceOfPath=caseSensitive ? text.indexOf(path,i) : StringUtil.indexOfIgnoreCase(text,path,i);
      if (occurrenceOfPath >= 0) {
        int endOfOccurence=occurrenceOfPath + path.length();
        if (!isWindowsRoot && endOfOccurence < text.length() && text.charAt(endOfOccurence) != '/') {
          i=endOfOccurence;
          continue;
        }
      }
      if (occurrenceOfPath < 0) {
        if (newText.length() == 0) {
          return text;
        }
        newText.append(text.substring(i));
        break;
      }
 else {
        newText.append(text.substring(i,occurrenceOfPath));
        newText.append(macro);
        logUsage(macro);
        i=occurrenceOfPath + path.length();
      }
    }
    return newText.toString();
  }
  finally {
    StringBuilderSpinAllocator.dispose(newText);
  }
}
