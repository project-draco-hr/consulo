{
  myAspectDependencies.put(aspect,dependencies);
  myAspects.put(aClass,aspect);
  final Iterator<PomModelAspect> iterator=dependencies.iterator();
  final List<PomModelAspect> deps=new ArrayList<PomModelAspect>();
  while (iterator.hasNext()) {
    final PomModelAspect depend=iterator.next();
    deps.addAll(getAllDependencies(depend));
  }
  deps.add(aspect);
  final Iterator<PomModelAspect> depsIterator=deps.iterator();
  while (depsIterator.hasNext()) {
    final PomModelAspect pomModelAspect=depsIterator.next();
    final List<PomModelAspect> pomModelAspects=myInvertedIncidence.get(pomModelAspect);
    if (pomModelAspects != null) {
      pomModelAspects.add(aspect);
    }
 else {
      myInvertedIncidence.put(pomModelAspect,new ArrayList<PomModelAspect>(Collections.singletonList(aspect)));
    }
  }
  myIncidence.put(aspect,deps);
}
