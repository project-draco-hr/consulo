{
  final ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
  if (progressIndicator != null)   progressIndicator.startNonCancelableSection();
  try {
synchronized (PsiLock.LOCK) {
      final PsiDocumentManagerImpl manager=(PsiDocumentManagerImpl)PsiDocumentManager.getInstance(myPomProject.getPsiProject());
      final PsiToDocumentSynchronizer synchronizer=manager.getSynchronizer();
      Document document=null;
      if (transaction.getChangeScope().getContainingFile() != null) {
        document=manager.getDocument(transaction.getChangeScope().getContainingFile());
      }
      myBlockedAspects.push(aspect);
      if (document != null)       synchronizer.startTransaction(document,transaction.getChangeScope());
      final PomModelEvent event;
      try {
        event=transaction.run();
        if (event == null)         return;
      }
 catch (      IncorrectOperationException ioe) {
        return;
      }
 finally {
        if (document != null)         synchronizer.commitTransaction(document);
        myBlockedAspects.pop();
      }
      final List<PomModelAspect> dependants=getAllDependants(aspect);
{
        final Iterator<PomModelAspect> depsIter=dependants.iterator();
        while (depsIter.hasNext()) {
          final PomModelAspect modelAspect=depsIter.next();
          if (myBlockedAspects.contains(modelAspect))           continue;
          modelAspect.update(event);
        }
      }
{
        final Iterator<PomModelListener> listenersIterator=myListeners.iterator();
        while (listenersIterator.hasNext())         listenersIterator.next().modelChanged(event);
      }
    }
  }
  finally {
    if (progressIndicator != null)     progressIndicator.finishNonCancelableSection();
  }
}
