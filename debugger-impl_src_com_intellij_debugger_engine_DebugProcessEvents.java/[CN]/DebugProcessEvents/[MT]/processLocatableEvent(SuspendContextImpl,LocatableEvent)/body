{
  ThreadReference thread=event.thread();
  LOG.assertTrue(thread.isSuspended());
  preprocessEvent(suspendContext,thread);
  getManagerThread().invokeLater(new SuspendContextCommandImpl(suspendContext){
    public void contextAction() throws Exception {
      final SuspendManager suspendManager=getSuspendManager();
      SuspendContextImpl evaluatingContext=SuspendManagerUtil.getEvaluatingContext(suspendManager,getSuspendContext().getThread());
      if (evaluatingContext != null && !evaluatingContext.getEvaluationContext().isAllowBreakpoints()) {
        suspendManager.voteResume(suspendContext);
        return;
      }
      LocatableEventRequestor requestor=(LocatableEventRequestor)getRequestsManager().findRequestor(event.request());
      final boolean requestorAsksResume=(requestor != null) ? requestor.processLocatableEvent(this,event) : true;
      final boolean userWantsResume=(requestor instanceof Breakpoint) ? DebuggerSettings.SUSPEND_NONE.equals(((Breakpoint)requestor).SUSPEND_POLICY) : false;
      if (requestor instanceof Breakpoint && !requestorAsksResume) {
        DebuggerManagerEx.getInstanceEx(getProject()).getBreakpointManager().processBreakpointHit((Breakpoint)requestor);
      }
      if (requestorAsksResume || userWantsResume) {
        suspendManager.voteResume(suspendContext);
      }
 else {
        suspendManager.voteSuspend(suspendContext);
        showStatusText(DebugProcessEvents.this,event);
      }
    }
  }
);
}
