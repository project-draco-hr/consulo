{
  final String methodName=aMethod.getName();
  if (!HardcodedMethodConstants.MAIN.equals(methodName)) {
    return;
  }
  if (!aMethod.hasModifierProperty(PsiModifier.PUBLIC)) {
    registerMethodError(aMethod);
    return;
  }
  if (!aMethod.hasModifierProperty(PsiModifier.STATIC)) {
    registerMethodError(aMethod);
    return;
  }
  final PsiType returnType=aMethod.getReturnType();
  if (!TypeUtils.typeEquals(PsiKeyword.VOID,returnType)) {
    registerMethodError(aMethod);
    return;
  }
  final PsiParameterList parameterList=aMethod.getParameterList();
  if (parameterList.getParametersCount() != 1) {
    registerMethodError(aMethod);
    return;
  }
  final PsiParameter[] parameters=parameterList.getParameters();
  final PsiType parameterType=parameters[0].getType();
  if (!TypeUtils.typeEquals(CommonClassNames.JAVA_LANG_STRING + "[]",parameterType)) {
    registerMethodError(aMethod);
  }
}
