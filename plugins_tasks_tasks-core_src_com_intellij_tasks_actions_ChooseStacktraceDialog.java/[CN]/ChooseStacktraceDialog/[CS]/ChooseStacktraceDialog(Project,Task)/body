{
  super(project,false);
  setTitle("Choose Stacktrace to Analyze");
  Comment[] comments=issue.getComments();
  ArrayList<Comment> list=new ArrayList<Comment>(comments.length + 1);
  final String description=issue.getDescription();
  if (description != null) {
    list.add(new Description(description));
  }
  ContainerUtil.addAll(list,comments);
  myList.setModel(new CollectionListModel<Comment>(list));
  myList.setCellRenderer(new ColoredListCellRenderer(){
    @Override protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value instanceof Description) {
        append("Description");
      }
 else {
        append("Commented by " + ((Comment)value).getAuthor() + " ("+ ((Comment)value).getDate()+ ")");
      }
    }
  }
);
  myEditor=AnalyzeStacktraceUtil.createEditorPanel(project,myDisposable);
  myEditorPanel.add(myEditor,BorderLayout.CENTER);
  myList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      Object value=myList.getSelectedValue();
      if (value instanceof Comment) {
        myEditor.setText(((Comment)value).getText());
      }
 else {
        myEditor.setText("");
      }
    }
  }
);
  myList.setSelectedValue(list.get(0),false);
  init();
}
