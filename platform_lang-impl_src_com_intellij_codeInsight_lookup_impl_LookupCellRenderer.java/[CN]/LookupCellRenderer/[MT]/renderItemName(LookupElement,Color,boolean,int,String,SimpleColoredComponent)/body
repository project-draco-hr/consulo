{
  final SimpleTextAttributes base=new SimpleTextAttributes(style,foreground);
  final String prefix=myLookup.itemPattern(item);
  if (prefix.length() > 0) {
    Iterable<TextRange> ranges=new MinusculeMatcher("*" + prefix,NameUtil.MatchingCaseSensitivity.NONE).matchingFragments(name);
    if (ranges != null) {
      SimpleTextAttributes highlighted=new SimpleTextAttributes(style,selected ? SELECTED_PREFIX_FOREGROUND_COLOR : PREFIX_FOREGROUND_COLOR);
      SpeedSearchUtil.appendColoredFragments(nameComponent,name,ranges,base,highlighted);
      return;
    }
  }
  nameComponent.append(name,base);
}
