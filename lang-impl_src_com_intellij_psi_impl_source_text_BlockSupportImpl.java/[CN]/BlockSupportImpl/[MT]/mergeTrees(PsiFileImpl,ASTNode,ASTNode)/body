{
synchronized (PsiLock.LOCK) {
    if (newRoot instanceof FileElement) {
      ((FileElement)newRoot).setCharTable(file.getTreeElement().getCharTable());
    }
    final PomModel model=PomManager.getModel(file.getProject());
    try {
      newRoot.putUserData(TREE_TO_BE_REPARSED,oldRoot);
      try {
        newRoot.getFirstChildNode();
      }
 catch (      ReparsedSuccessfullyException e) {
        return;
      }
      TreeUtil.ensureParsedRecursively(oldRoot);
      model.runTransaction(new PomTransactionBase(file,model.getModelAspect(TreeAspect.class)){
        public PomModelEvent runInner(){
          final ASTDiffBuilder builder=new ASTDiffBuilder(file);
          DiffTree.diff(new ASTStructure(oldRoot),new ASTStructure(newRoot),new ASTShallowComparator(),builder);
          file.subtreeChanged();
          return new TreeAspectEvent(model,builder.getEvent());
        }
      }
);
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
catch (    Throwable th) {
      LOG.error(th);
    }
 finally {
      ((PsiManagerEx)file.getManager()).invalidateFile(file);
    }
  }
}
