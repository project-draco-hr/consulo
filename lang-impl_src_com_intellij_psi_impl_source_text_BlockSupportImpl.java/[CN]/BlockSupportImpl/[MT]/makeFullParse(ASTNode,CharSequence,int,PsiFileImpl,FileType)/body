{
  if (parent instanceof CodeFragmentElement) {
    final FileElement holderElement=new JavaDummyHolder(fileImpl.getManager(),null).getTreeElement();
    TreeUtil.addChildren(holderElement,fileImpl.createContentLeafElement(newFileText,0,textLength,holderElement.getCharTable()));
    parent.replaceAllChildrenToChildrenOf(holderElement);
  }
 else {
    final PsiFileFactoryImpl fileFactory=(PsiFileFactoryImpl)PsiFileFactory.getInstance(fileImpl.getProject());
    final PsiFileImpl newFile=(PsiFileImpl)fileFactory.createFileFromText(fileImpl.getName(),fileType,fileImpl.getViewProvider().getBaseLanguage(),fileImpl.getLanguage(),fileImpl.getLanguageDialect(),newFileText,fileImpl.getModificationStamp(),true,false);
    newFile.setOriginalFile(fileImpl);
    final FileElement newFileElement=(FileElement)newFile.getNode();
    final FileElement oldFileElement=(FileElement)fileImpl.getNode();
    final Boolean data=fileImpl.getUserData(DO_NOT_REPARSE_INCREMENTALLY);
    if (data != null)     fileImpl.putUserData(DO_NOT_REPARSE_INCREMENTALLY,null);
    if (data != null && data.booleanValue()) {
      replaceFileElementWithEvents(fileImpl,oldFileElement,newFileElement);
    }
 else {
      mergeTrees(fileImpl,oldFileElement,newFileElement);
    }
  }
}
