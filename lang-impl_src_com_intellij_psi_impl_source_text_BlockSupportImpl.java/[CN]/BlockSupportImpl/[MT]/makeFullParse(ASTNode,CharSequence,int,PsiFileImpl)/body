{
  if (fileImpl instanceof PsiCodeFragment) {
    final FileElement holderElement=new DummyHolder(fileImpl.getManager(),null).getTreeElement();
    holderElement.rawAddChildren(fileImpl.createContentLeafElement(holderElement.getCharTable().intern(newFileText,0,textLength)));
    replaceFileElement(fileImpl,(FileElement)parent,(FileElement)holderElement.getFirstChildNode(),(PsiManagerEx)fileImpl.getManager());
  }
 else {
    final FileViewProvider viewProvider=fileImpl.getViewProvider();
    FileType fileType=viewProvider.getVirtualFile().getFileType();
    final LightVirtualFile lightFile=new LightVirtualFile(fileImpl.getName(),fileType,newFileText,viewProvider.getVirtualFile().getCharset(),fileImpl.getModificationStamp());
    FileViewProvider copy=viewProvider.createCopy(lightFile);
    final PsiFileImpl newFile=(PsiFileImpl)copy.getPsi(fileImpl.getLanguage());
    if (newFile == null) {
      LOG.error("View provider " + viewProvider + " refused to parse text with "+ fileImpl.getLanguage()+ "; base: "+ viewProvider.getBaseLanguage()+ "; copy: "+ copy.getBaseLanguage()+ "; fileType: "+ fileType);
      return;
    }
    newFile.setOriginalFile(fileImpl);
    final FileElement newFileElement=(FileElement)newFile.getNode();
    final FileElement oldFileElement=(FileElement)fileImpl.getNode();
    final Boolean data=fileImpl.getUserData(DO_NOT_REPARSE_INCREMENTALLY);
    if (data != null)     fileImpl.putUserData(DO_NOT_REPARSE_INCREMENTALLY,null);
    if (data != null && data.booleanValue()) {
      replaceFileElementWithEvents(fileImpl,oldFileElement,newFileElement);
    }
 else {
      mergeTrees(fileImpl,oldFileElement,newFileElement);
    }
  }
}
