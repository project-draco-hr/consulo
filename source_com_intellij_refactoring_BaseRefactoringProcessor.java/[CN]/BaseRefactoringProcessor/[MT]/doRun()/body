{
  final Ref<UsageInfo[]> refUsages=new Ref<UsageInfo[]>();
  final Runnable findUsagesRunnable=new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          refUsages.set(findUsages());
        }
      }
);
    }
  }
;
  if (!ApplicationManager.getApplication().runProcessWithProgressSynchronously(findUsagesRunnable,"Looking For Usages...",true,myProject))   return;
  LOG.assertTrue(!refUsages.isNull());
  if (!preprocessUsages(refUsages))   return;
  final UsageInfo[] usages=refUsages.get();
  if (!myIsPreviewUsages)   ensureFilesWritable(usages);
  boolean toPreview=isPreviewUsages(usages);
  if (toPreview) {
    FindUsagesCommand findUsagesCommand=new FindUsagesCommand(){
      public UsageInfo[] execute(      PsiElement[] elementsToSearch){
        refreshElements(elementsToSearch);
        findUsagesRunnable.run();
        return refUsages.get();
      }
    }
;
    UsageViewDescriptor descriptor=createUsageViewDescriptor(usages,findUsagesCommand);
    showUsageView(descriptor,isVariable(),isVariable());
  }
 else {
    execute(usages);
  }
}
