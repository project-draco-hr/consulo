{
  UsageViewManager viewManager=myProject.getComponent(UsageViewManager.class);
  final PsiElement[] initialElements=viewDescriptor.getElements();
  final UsageTarget[] targets=PsiElement2UsageTargetAdapter.convert(initialElements);
  final Usage[] usages=UsageInfo2UsageAdapter.convert(viewDescriptor.getUsages());
  final UsageViewPresentation presentation=createPresentation(viewDescriptor,usages);
  final UsageView usageView=viewManager.showUsages(targets,usages,presentation);
  final Runnable refactoringRunnable=new Runnable(){
    public void run(){
      final Set<UsageInfo> excludedUsageInfos=getExcludedUsages(usageView);
      doRefactoring(viewDescriptor.getUsages(),excludedUsageInfos);
    }
  }
;
  String canNotMakeString="Cannot perform the refactoring operation.\n" + "There were changes in code after the usages have been found.\n" + "Please, perform the usage search again.";
  usageView.addPerformOperationAction(refactoringRunnable,getCommandName(),canNotMakeString,"Do Refactor",SystemInfo.isMac ? 0 : 'D');
}
