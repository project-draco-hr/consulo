{
  super(project);
  myProject=project;
  myTargetClass=targetClass;
  myReturnType=returnType;
  myTypeParameterList=typeParameterList;
  myExceptions=exceptions;
  myStaticFlag=isStatic;
  myCanBeStatic=canBeStatic;
  myElementsToExtract=elementsToExtract;
  boolean canBeVarargs=false;
  for (  ParameterTablePanel.VariableData data : inputVariables.getInputVariables()) {
    canBeVarargs|=data.type instanceof PsiArrayType;
  }
  myVariableData=inputVariables;
  if (inputVariables.isFoldable()) {
    canBeVarargs|=inputVariables.isFoldingSelectedByDefault();
  }
  setTitle(title);
  myHelpId=helpId;
  myNameField=new EditorTextField(initialMethodName);
  int height=myVariableData.getInputVariables().size() + 2;
  if (myExceptions.length > 0) {
    height+=myExceptions.length + 1;
  }
  mySignatureArea=new JTextArea(height,30);
  myCbMakeStatic=new NonFocusableCheckBox();
  myCbMakeStatic.setText(RefactoringBundle.message("declare.static.checkbox"));
  if (canBeChainedConstructor) {
    myCbChainedConstructor=new NonFocusableCheckBox(RefactoringBundle.message("extract.chained.constructor.checkbox"));
  }
  if (canBeVarargs) {
    myCbMakeVarargs=new NonFocusableCheckBox(RefactoringBundle.message("declare.varargs.checkbox"));
  }
}
