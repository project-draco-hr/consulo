{
  if (!myProject.isOpen())   return;
  List<VirtualFile> files;
synchronized (myCheckingQueue) {
    files=new ArrayList<VirtualFile>(myCheckingQueue);
  }
  long progressLimit=0;
  for (  VirtualFile file : files) {
    progressLimit+=file.getLength();
  }
  pass.setProgressLimit(progressLimit);
  final StatusBar statusBar=WindowManager.getInstance().getStatusBar(myProject);
  Pair<String,String> oldInfo=saveStatusBarInfo(statusBar);
  try {
    for (    final VirtualFile virtualFile : files) {
      progress.checkCanceled();
      if (virtualFile == null)       break;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          if (progress.isCanceled())           return;
          statusBar.setInfo("Checking '" + virtualFile.getPresentableUrl() + "'");
        }
      }
);
      if (!virtualFile.isValid() || orderVincentToCleanTheCar(virtualFile,progress)) {
        doRemove(virtualFile);
      }
      pass.advanceProgress(virtualFile.getLength());
    }
  }
  finally {
    restoreStatusBarInfo(statusBar,oldInfo);
  }
}
