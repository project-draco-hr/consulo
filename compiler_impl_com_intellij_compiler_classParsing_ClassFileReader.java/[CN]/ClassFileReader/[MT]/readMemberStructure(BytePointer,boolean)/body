{
  int flags=ClsUtil.readU2(ptr);
  int nameIndex=ClsUtil.readU2(ptr);
  int descriptorIndex=ClsUtil.readU2(ptr);
  BytePointer p=new BytePointer(getData(),getOffsetInConstantPool(nameIndex));
  String name=ClsUtil.readUtf8Info(p);
  p.offset=getOffsetInConstantPool(descriptorIndex);
  String descriptor=ClsUtil.readUtf8Info(p);
  if (isField) {
    final ClsAttributeTable attributeTable=readAttributes(ptr);
    return new FieldInfo(mySymbolTable.getId(name),mySymbolTable.getId(descriptor),attributeTable.genericSignature != null ? mySymbolTable.getId(attributeTable.genericSignature) : -1,flags,attributeTable.constantValue,attributeTable.runtimeVisibleAnnotations,attributeTable.runtimeInvisibleAnnotations);
  }
 else {
    final ClsAttributeTable attributeTable=readAttributes(ptr);
    int[] intExceptions=null;
    if (attributeTable.exceptions != null) {
      intExceptions=new int[attributeTable.exceptions.length];
      for (int idx=0; idx < intExceptions.length; idx++) {
        intExceptions[idx]=mySymbolTable.getId(attributeTable.exceptions[idx]);
      }
    }
    return new MethodInfo(mySymbolTable.getId(name),mySymbolTable.getId(descriptor),attributeTable.genericSignature != null ? mySymbolTable.getId(attributeTable.genericSignature) : -1,flags,intExceptions,CONSTRUCTOR_NAME.equals(name),attributeTable.runtimeVisibleAnnotations,attributeTable.runtimeInvisibleAnnotations,attributeTable.runtimeVisibleParameterAnnotations,attributeTable.runtimeInvisibleParameterAnnotations,attributeTable.annotationDefault);
  }
}
