{
  initConstantPool();
  myMethods=new ArrayList<MethodInfo>();
  myFields=new ArrayList<FieldInfo>();
  BytePointer ptr=new BytePointer(getData(),getConstantPoolEnd());
  ptr.offset+=2;
  ptr.offset+=2;
  ptr.offset+=2;
  int count=ClsUtil.readU2(ptr);
  ptr.offset+=2 * count;
  count=ClsUtil.readU2(ptr);
  while (count-- > 0) {
    FieldInfo field=(FieldInfo)readMemberStructure(ptr,true);
    String name=mySymbolTable.getSymbol(field.getName());
    if (name.indexOf('$') < 0 && name.indexOf('<') < 0) {
      myFields.add(field);
    }
  }
  count=ClsUtil.readU2(ptr);
  while (count-- > 0) {
    MethodInfo method=(MethodInfo)readMemberStructure(ptr,false);
    String name=mySymbolTable.getSymbol(method.getName());
    if (name.indexOf('$') < 0 && name.indexOf('<') < 0) {
      myMethods.add(method);
    }
 else     if (CONSTRUCTOR_NAME.equals(name)) {
      myMethods.add(method);
    }
  }
  final ClsAttributeTable attributeTable=readAttributes(ptr);
  mySourceFileName=attributeTable.sourceFile;
  myGenericSignature=attributeTable.genericSignature;
  myRuntimeVisibleAnnotations=attributeTable.runtimeVisibleAnnotations;
  myRuntimeInvisibleAnnotations=attributeTable.runtimeInvisibleAnnotations;
}
