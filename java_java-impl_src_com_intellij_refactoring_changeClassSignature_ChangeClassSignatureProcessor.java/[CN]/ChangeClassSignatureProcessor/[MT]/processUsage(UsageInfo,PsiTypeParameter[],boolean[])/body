{
  PsiElementFactory factory=JavaPsiFacade.getInstance(myClass.getProject()).getElementFactory();
  PsiJavaCodeReferenceElement referenceElement=(PsiJavaCodeReferenceElement)usage.getElement();
  PsiSubstitutor usageSubstitutor=determineUsageSubstitutor(referenceElement);
  PsiReferenceParameterList referenceParameterList=referenceElement.getParameterList();
  PsiTypeElement[] oldValues=referenceParameterList.getTypeParameterElements();
  if (oldValues.length != originalTypeParameters.length)   return;
  List<PsiTypeElement> newValues=new ArrayList<PsiTypeElement>();
  for (  final TypeParameterInfo info : myNewSignature) {
    int oldIndex=info.getOldParameterIndex();
    if (oldIndex >= 0) {
      newValues.add(oldValues[oldIndex]);
    }
 else {
      PsiType type=info.getDefaultValue().getType(myClass.getLBrace(),PsiManager.getInstance(myProject));
      PsiTypeElement newValue=factory.createTypeElement(usageSubstitutor.substitute(type));
      newValues.add(newValue);
    }
  }
  ChangeSignatureUtil.synchronizeList(referenceParameterList,newValues,ReferenceParameterList.INSTANCE,toRemoveParms);
}
