{
  boolean htmlCode=HtmlUtil.hasHtml(containingFile);
  Set<String> notRequiredAttributes=Collections.emptySet();
  if (tag instanceof HtmlTag) {
    final InspectionProfile profile=InspectionProjectProfileManager.getInstance(tag.getProject()).getInspectionProfile();
    LocalInspectionToolWrapper localInspectionToolWrapper=(LocalInspectionToolWrapper)profile.getInspectionTool(RequiredAttributesInspection.SHORT_NAME,tag);
    RequiredAttributesInspection inspection=localInspectionToolWrapper != null ? (RequiredAttributesInspection)localInspectionToolWrapper.getTool() : null;
    if (inspection != null) {
      StringTokenizer tokenizer=new StringTokenizer(inspection.getAdditionalEntries(0));
      notRequiredAttributes=new HashSet<String>();
      while (tokenizer.hasMoreElements())       notRequiredAttributes.add(tokenizer.nextToken());
    }
  }
  XmlAttributeDescriptor[] attributes=descriptor.getAttributesDescriptors(tag);
  StringBuilder indirectRequiredAttrs=null;
  if (PRINT_DEBUG_MESSAGES) {
    System.out.println((tag != null ? tag.getName() : "null") + ": addRequiredAttributes");
  }
  if (WebEditorOptions.getInstance().isAutomaticallyInsertRequiredAttributes()) {
    final XmlExtension extension=XmlExtension.getExtension(containingFile);
    if (PRINT_DEBUG_MESSAGES) {
      System.out.println("Attributes count: " + attributes.length);
    }
    for (    XmlAttributeDescriptor attributeDecl : attributes) {
      String attributeName=attributeDecl.getName(tag);
      if (PRINT_DEBUG_MESSAGES) {
        System.out.println("Attribute " + attributeName);
        System.out.println("Required: " + attributeDecl.isRequired());
      }
      if (attributeDecl.isRequired() && (tag == null || tag.getAttributeValue(attributeName) == null)) {
        if (PRINT_DEBUG_MESSAGES) {
          System.out.println("Inside condition: " + attributeName);
        }
        if (!notRequiredAttributes.contains(attributeName)) {
          if (!extension.isIndirectSyntax(attributeDecl)) {
            template.addTextSegment(" " + attributeName + "=\"");
            template.addVariable(new MacroCallNode(new CompleteMacro()),true);
            template.addTextSegment("\"");
          }
 else {
            if (indirectRequiredAttrs == null)             indirectRequiredAttrs=new StringBuilder();
            indirectRequiredAttrs.append("\n<jsp:attribute name=\"").append(attributeName).append("\"></jsp:attribute>\n");
          }
        }
      }
 else       if (attributeDecl.isRequired() && attributeDecl.isFixed() && attributeDecl.getDefaultValue() != null && !htmlCode) {
        template.addTextSegment(" " + attributeName + "=\""+ attributeDecl.getDefaultValue()+ "\"");
      }
    }
  }
  return indirectRequiredAttrs;
}
