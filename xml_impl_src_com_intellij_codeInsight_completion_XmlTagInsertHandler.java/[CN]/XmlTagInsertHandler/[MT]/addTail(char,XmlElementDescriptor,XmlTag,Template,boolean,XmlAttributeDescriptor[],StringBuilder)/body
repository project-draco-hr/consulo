{
  if (completionChar == '>' || (completionChar == '/' && indirectRequiredAttrs != null)) {
    template.addTextSegment(">");
    boolean toInsertCDataEnd=false;
    if (descriptor instanceof XmlElementDescriptorWithCDataContent) {
      final XmlElementDescriptorWithCDataContent cDataContainer=(XmlElementDescriptorWithCDataContent)descriptor;
      if (cDataContainer.requiresCdataBracesInContext(tag)) {
        template.addTextSegment("<![CDATA[\n");
        toInsertCDataEnd=true;
      }
    }
    if (indirectRequiredAttrs != null)     template.addTextSegment(indirectRequiredAttrs.toString());
    template.addEndVariable();
    if (toInsertCDataEnd)     template.addTextSegment("\n]]>");
    if ((!(tag instanceof HtmlTag) || !HtmlUtil.isSingleHtmlTag(tag.getName())) && tag.getAttributes().length == 0) {
      if (WebEditorOptions.getInstance().isAutomaticallyInsertClosingTag()) {
        final String name=descriptor.getName(tag);
        if (name != null) {
          template.addTextSegment("</");
          template.addTextSegment(name);
          template.addTextSegment(">");
        }
      }
    }
  }
 else   if (completionChar == '/') {
    template.addTextSegment("/>");
  }
 else   if (completionChar == ' ' && template.getSegmentsCount() == 0) {
    if (WebEditorOptions.getInstance().isAutomaticallyStartAttribute() && (attributes.length > 0 || isTagFromHtml(tag) && !HtmlUtil.isTagWithoutAttributes(tag.getName()))) {
      template.addTextSegment(" ");
      final MacroCallNode completeAttrExpr=new MacroCallNode(MacroFactory.createMacro("complete"));
      template.addVariable("attrComplete",completeAttrExpr,completeAttrExpr,true);
      weInsertedSomeCodeThatCouldBeInvalidated=true;
      template.addTextSegment("=\"");
      template.addEndVariable();
      template.addTextSegment("\"");
    }
  }
 else   if ((completionChar == Lookup.AUTO_INSERT_SELECT_CHAR || completionChar == Lookup.NORMAL_SELECT_CHAR) && WebEditorOptions.getInstance().isAutomaticallyInsertClosingTag() && HtmlUtil.isSingleHtmlTag(tag.getName())) {
    template.addTextSegment(tag instanceof HtmlTag ? ">" : "/>");
  }
  return weInsertedSomeCodeThatCouldBeInvalidated;
}
