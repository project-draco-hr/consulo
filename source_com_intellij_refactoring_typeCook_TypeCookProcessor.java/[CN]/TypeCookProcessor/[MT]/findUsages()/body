{
  mySystemBuilder=new SystemBuilder(myProject,mySettings);
  final System commonSystem=mySystemBuilder.build(myElements);
  myResult=new Result(commonSystem);
  final System[] systems=commonSystem.isolate();
  for (  final System system : systems) {
    if (system != null) {
      final ResolverTree tree=new ResolverTree(system);
      tree.resolve();
      final Binding solution=tree.getBestSolution();
      if (solution != null) {
        myResult.incorporateSolution(solution);
      }
    }
  }
  final HashSet<PsiElement> cookedItems=myResult.getCookedElements();
  final UsageInfo[] usages=new UsageInfo[cookedItems.size()];
  int i=0;
  for (  final PsiElement element : cookedItems) {
    usages[i++]=new UsageInfo(element){
      public String getTooltipText(){
        return myResult.getCookedType(element).getCanonicalText();
      }
    }
;
  }
  return usages;
}
