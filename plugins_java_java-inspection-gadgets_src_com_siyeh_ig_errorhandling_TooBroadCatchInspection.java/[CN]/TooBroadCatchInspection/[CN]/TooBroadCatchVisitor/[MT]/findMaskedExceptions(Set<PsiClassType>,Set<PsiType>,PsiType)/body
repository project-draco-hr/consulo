{
  if (exceptionsThrown.contains(typeCaught)) {
    if (ignoreThrown) {
      return Collections.emptyList();
    }
    exceptionsCaught.add(typeCaught);
    exceptionsThrown.remove(typeCaught);
  }
  if (onlyWarnOnRootExceptions) {
    if (!ExceptionUtils.isGenericExceptionClass(typeCaught)) {
      return Collections.emptyList();
    }
  }
  final List<PsiClass> typesMasked=new ArrayList();
  for (  PsiClassType typeThrown : exceptionsThrown) {
    if (!exceptionsCaught.contains(typeThrown) && typeCaught.isAssignableFrom(typeThrown)) {
      exceptionsCaught.add(typeThrown);
      final PsiClass aClass=typeThrown.resolve();
      if (aClass != null) {
        typesMasked.add(aClass);
      }
    }
  }
  return typesMasked;
}
