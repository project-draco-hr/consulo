{
  if (!isNewTabsActive()) {
    super.paintSelectionAndBorder(g2d);
    return;
  }
  if (getSelectedInfo() == null)   return;
  Pair<ShapeInfo,ShapeTransform> pair=computeSelectedLabelShape2();
  final ShapeInfo shapeInfo=pair.getFirst();
  if (!isHideTabs()) {
    g2d.setColor(getBackground());
    g2d.fill(shapeInfo.fillPath.getShape());
  }
  final int alpha;
  int paintTopY=shapeInfo.labelTopY;
  int paintBottomY=shapeInfo.labelBottomY;
  final boolean paintFocused=shouldPaintFocus() && (myFocused || myActivePopup != null);
  Color bgPreFill=null;
  if (paintFocused) {
    final Color bgColor=getActiveTabColor(getActiveTabFillIn());
    if (bgColor == null) {
      shapeInfo.from=UIUtil.getFocusedFillColor();
      shapeInfo.to=UIUtil.getFocusedFillColor();
    }
 else {
      bgPreFill=bgColor;
      alpha=255;
      paintBottomY=shapeInfo.labelTopY + shapeInfo.labelPath.deltaY(getArcSize() - 2);
      shapeInfo.from=UIUtil.toAlpha(UIUtil.getFocusedFillColor(),alpha);
      shapeInfo.to=UIUtil.toAlpha(getActiveTabFillIn(),alpha);
    }
  }
 else {
    final Color bgColor=getActiveTabColor(getActiveTabFillIn());
    if (isPaintFocus()) {
      if (bgColor == null) {
        alpha=150;
        shapeInfo.from=UIUtil.toAlpha(UIUtil.getPanelBackground().brighter(),alpha);
        shapeInfo.to=UIUtil.toAlpha(UIUtil.getPanelBackground(),alpha);
      }
 else {
        alpha=255;
        shapeInfo.from=UIUtil.toAlpha(bgColor,alpha);
        shapeInfo.to=UIUtil.toAlpha(bgColor,alpha);
      }
    }
 else {
      alpha=255;
      final Color tabColor=getActiveTabColor(null);
      shapeInfo.from=UIUtil.toAlpha(tabColor == null ? Color.white : tabColor,alpha);
      shapeInfo.to=UIUtil.toAlpha(tabColor == null ? Color.white : tabColor,alpha);
    }
  }
  Color tabColor=getActiveTabColor(null);
  if (!isHideTabs()) {
    if (bgPreFill != null) {
      g2d.setColor(bgPreFill);
      g2d.fill(shapeInfo.fillPath.getShape());
    }
    ShapeTransform shadowPath=shapeInfo.path.copy().reset();
    g2d.setColor(new Color(0,0,0,25));
    g2d.fill(shadowPath.doRect(shapeInfo.path.getX(),shapeInfo.labelBottomY - 1,shapeInfo.path.getWidth(),1).getShape());
    g2d.setColor(new Color(0,0,0,7));
    g2d.fill(shadowPath.reset().doRect(shapeInfo.fillPath.getX(),shapeInfo.labelBottomY - 2,shapeInfo.fillPath.getWidth(),1).getShape());
    final Line2D.Float gradientLine=shapeInfo.fillPath.transformLine(shapeInfo.fillPath.getX(),paintTopY,shapeInfo.fillPath.getX(),paintBottomY);
    if (tabColor == null) {
      g2d.setPaint(new GradientPaint((float)gradientLine.getX1(),(float)gradientLine.getY1(),shapeInfo.fillPath.transformY1(new Color(255,255,255),new Color(230,230,230)),(float)gradientLine.getX2(),(float)gradientLine.getY2(),shapeInfo.fillPath.transformY1(new Color(230,230,230),new Color(255,255,255))));
    }
 else {
      tabColor=new Color(tabColor.getRed() * tabColor.getRed() / 275,tabColor.getGreen() * tabColor.getGreen() / 275,tabColor.getBlue() * tabColor.getBlue() / 275);
      g2d.setColor(tabColor);
      g2d.fill(shapeInfo.fillPath.getShape());
      Color from=new Color(255,255,255,100);
      Color to=new Color(255,255,255,0);
      g2d.setPaint(new GradientPaint((float)gradientLine.getX1(),(float)gradientLine.getY1(),shapeInfo.fillPath.transformY1(from,to),(float)gradientLine.getX2(),(float)gradientLine.getY2(),shapeInfo.fillPath.transformY1(to,from)));
    }
    g2d.fill(shapeInfo.fillPath.getShape());
    g2d.setColor(new Color(255,255,255,200));
    g2d.draw(shapeInfo.labelPath.transformLine(shapeInfo.labelPath.getX() + shapeInfo.labelPath.deltaX(getArcSize()) - 1,paintTopY + 2,shapeInfo.labelPath.getMaxX() - shapeInfo.labelPath.deltaX(getArcSize()) + 1,paintTopY + 2));
    g2d.setColor(new Color(0,0,0,12));
    g2d.draw(pair.getSecond().getShape());
  }
  Color borderColor=tabColor == null ? UIUtil.getBoundsColor(paintFocused) : tabColor.darker();
  g2d.setColor(borderColor);
  if (!isHideTabs()) {
    g2d.setColor(new Color(120,120,120));
    g2d.draw(shapeInfo.path.getShape());
  }
  paintBorder2(g2d,shapeInfo,tabColor == null ? new Color(230,230,230) : tabColor);
}
