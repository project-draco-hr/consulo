{
  final ShapeTransform shaper=shape.path.copy().reset();
  final Insets paintBorder=shape.path.transformInsets(getTabsBorder().getEffectiveBorder());
  int topY=shape.labelPath.getMaxY() + shape.labelPath.deltaY(1);
  int bottomY=topY + paintBorder.top - 2;
  int middleY=topY + (bottomY - topY) / 2;
  final int boundsX=shape.path.getX() + shape.path.deltaX(shape.insets.left);
  final int boundsY=isHideTabs() ? shape.path.getY() + shape.path.deltaY(shape.insets.top) : shape.labelPath.getMaxY() + shape.path.deltaY(1);
  final int boundsHeight=Math.abs(shape.path.getMaxY() - boundsY) - shape.insets.bottom - paintBorder.bottom;
  final int boundsWidth=Math.abs(shape.path.getMaxX() - (shape.insets.left + shape.insets.right));
  if (paintBorder.top > 0) {
    if (isHideTabs()) {
      if (isToDrawBorderIfTabsHidden()) {
        g2d.setColor(borderColor);
        g2d.fill(shaper.reset().doRect(boundsX,boundsY,boundsWidth,1).getShape());
      }
    }
 else {
      Color tabFillColor=getActiveTabColor(null);
      if (tabFillColor == null) {
        tabFillColor=shape.path.transformY1(shape.to,shape.from);
      }
      g2d.setColor(borderColor);
      g2d.fill(shaper.reset().doRect(boundsX,topY + shape.path.deltaY(1),boundsWidth,paintBorder.top - 1).getShape());
      g2d.setColor(new Color(0,0,0,50));
      if (paintBorder.top == 2) {
        final Line2D.Float line=shape.path.transformLine(boundsX,topY,boundsX + shape.path.deltaX(boundsWidth - 1),topY);
        g2d.drawLine((int)line.x1,(int)line.y1,(int)line.x2,(int)line.y2);
      }
 else       if (paintBorder.top > 2) {
        int deltaY=0;
        if (getPosition() == JBTabsPosition.bottom || getPosition() == JBTabsPosition.right) {
          deltaY=1;
        }
        final int topLine=topY + shape.path.deltaY(paintBorder.top - 1);
        g2d.fill(shaper.reset().doRect(boundsX,topLine + deltaY,boundsWidth,1).getShape());
      }
    }
  }
  g2d.setColor(borderColor);
}
