{
  super.visitMethodCallExpression(call);
  final PsiMethod method=PsiTreeUtil.getParentOfType(call,PsiMethod.class);
  if (method == null) {
    return;
  }
  if (!method.isConstructor()) {
    return;
  }
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  if (methodExpression == null) {
    return;
  }
  final PsiMethod calledMethod=(PsiMethod)methodExpression.resolve();
  if (calledMethod == null) {
    return;
  }
  if (calledMethod.isConstructor()) {
    return;
  }
  if (!calledMethod.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  final PsiClass calledMethodClass=calledMethod.getContainingClass();
  final PsiClass methodClass=method.getContainingClass();
  if (!calledMethodClass.equals(methodClass)) {
    return;
  }
  registerMethodCallError(call);
}
