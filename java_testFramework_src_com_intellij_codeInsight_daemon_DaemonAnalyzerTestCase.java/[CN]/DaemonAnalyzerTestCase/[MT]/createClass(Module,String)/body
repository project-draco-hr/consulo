{
  return new WriteCommandAction<PsiClass>(getProject()){
    @Override protected void run(    Result<PsiClass> result) throws Throwable {
      final String qname=((PsiJavaFile)PsiFileFactory.getInstance(getProject()).createFileFromText("a.java",text)).getClasses()[0].getQualifiedName();
      final VirtualFile[] files=ModuleRootManager.getInstance(module).getSourceRoots();
      File dir;
      if (files.length > 0) {
        dir=VfsUtil.virtualToIoFile(files[0]);
      }
 else {
        dir=createTempDirectory();
        VirtualFile vDir=LocalFileSystem.getInstance().refreshAndFindFileByPath(dir.getCanonicalPath().replace(File.separatorChar,'/'));
        addSourceContentToRoots(module,vDir);
      }
      File file=new File(dir,qname.replace('.','/') + ".java");
      FileUtil.createIfDoesntExist(file);
      VirtualFile vFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(file.getCanonicalPath().replace(File.separatorChar,'/'));
      VfsUtil.saveText(vFile,text);
      PsiClass psiClass=((PsiJavaFile)myPsiManager.findFile(vFile)).getClasses()[0];
      result.setResult(psiClass);
    }
  }
.execute().throwException().getResultObject();
}
