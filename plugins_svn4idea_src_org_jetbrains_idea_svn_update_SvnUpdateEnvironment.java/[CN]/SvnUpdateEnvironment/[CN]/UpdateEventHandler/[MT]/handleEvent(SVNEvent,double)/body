{
  if (event == null || event.getFile() == null) {
    return;
  }
  String path=event.getFile().getAbsolutePath();
  String displayPath=event.getFile().getName();
  if (event.getAction() == SVNEventAction.UPDATE_ADD || event.getAction() == SVNEventAction.ADD) {
    myProgressIndicator.setText2("Added " + displayPath);
    myUpdatedFiles.getGroupById(FileGroup.CREATED_ID).add(path);
  }
 else   if (event.getAction() == SVNEventAction.UPDATE_DELETE) {
    myProgressIndicator.setText2("Deleted " + displayPath);
    myUpdatedFiles.getGroupById(FileGroup.REMOVED_FROM_REPOSITORY_ID).add(path);
  }
 else   if (event.getAction() == SVNEventAction.UPDATE_UPDATE) {
    if (event.getContentsStatus() == SVNStatusType.CONFLICTED || event.getPropertiesStatus() == SVNStatusType.CONFLICTED) {
      myUpdatedFiles.getGroupById(FileGroup.MERGED_WITH_CONFLICT_ID).add(path);
      myProgressIndicator.setText2("Conflicted " + displayPath);
    }
 else     if (event.getContentsStatus() == SVNStatusType.MERGED || event.getPropertiesStatus() == SVNStatusType.MERGED) {
      myProgressIndicator.setText2("Merged " + displayPath);
      myUpdatedFiles.getGroupById(FileGroup.MERGED_ID).add(path);
    }
 else     if (event.getContentsStatus() == SVNStatusType.CHANGED || event.getPropertiesStatus() == SVNStatusType.CHANGED) {
      myProgressIndicator.setText2("Updated " + displayPath);
      myUpdatedFiles.getGroupById(FileGroup.UPDATED_ID).add(path);
    }
 else {
      myProgressIndicator.setText2("");
      myUpdatedFiles.getGroupById(FileGroup.UNKNOWN_ID).add(path);
    }
  }
 else   if (event.getAction() == SVNEventAction.UPDATE_EXTERNAL) {
    myExternalsCount++;
    if (myUpdatedFiles.getGroupById("external") == null) {
      myUpdatedFiles.registerGroup(new FileGroup("Externals","Externals",false,"external",true));
    }
    myUpdatedFiles.getGroupById("external").add(path);
    myProgressIndicator.setText("Updating external location at '" + event.getFile().getAbsolutePath() + "'");
  }
 else   if (event.getAction() == SVNEventAction.RESTORE) {
    myProgressIndicator.setText2("Restored " + displayPath);
    myUpdatedFiles.getGroupById(FileGroup.RESTORED_ID).add(path);
  }
 else   if (event.getAction() == SVNEventAction.UPDATE_COMPLETED && event.getRevision() >= 0) {
    myExternalsCount--;
    myProgressIndicator.setText2("Updated to revision " + event.getRevision() + ".");
    if (myExternalsCount == 0) {
      myExternalsCount=1;
      WindowManager.getInstance().getStatusBar(myVCS.getProject()).setInfo("Updated to revision " + event.getRevision() + ".");
    }
  }
 else   if (event.getAction() == SVNEventAction.SKIP) {
    myProgressIndicator.setText2("Skipped " + displayPath);
    if (myUpdatedFiles.getGroupById("skip") == null) {
      myUpdatedFiles.registerGroup(new FileGroup("Skipped","Skipped",false,"skip",true));
    }
    myUpdatedFiles.getGroupById("skip").add(path);
  }
}
