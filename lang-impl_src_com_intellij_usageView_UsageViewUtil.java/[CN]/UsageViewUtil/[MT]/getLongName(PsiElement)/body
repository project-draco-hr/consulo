{
  LOG.assertTrue(psiElement.isValid());
  String ret;
  if (psiElement instanceof PsiDirectory) {
    PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage(((PsiDirectory)psiElement));
    if (aPackage != null) {
      ret=aPackage.getQualifiedName();
    }
 else {
      ret=((PsiDirectory)psiElement).getVirtualFile().getPresentableUrl();
    }
  }
 else   if (psiElement instanceof PsiPackage) {
    ret=((PsiPackage)psiElement).getQualifiedName();
  }
 else   if (psiElement instanceof PsiClass) {
    if (psiElement instanceof PsiAnonymousClass) {
      ret=LangBundle.message("java.terms.anonymous.class");
    }
 else {
      ret=((PsiClass)psiElement).getQualifiedName();
      if (ret == null) {
        ret=((PsiClass)psiElement).getName();
      }
    }
  }
 else   if (psiElement instanceof PsiVariable) {
    ret=((PsiVariable)psiElement).getName();
  }
 else   if (psiElement instanceof XmlTag) {
    ret=((XmlTag)psiElement).getName();
  }
 else   if (psiElement instanceof XmlAttributeValue) {
    ret=((XmlAttributeValue)psiElement).getValue();
  }
 else   if (psiElement instanceof PsiMethod) {
    PsiMethod psiMethod=(PsiMethod)psiElement;
    ret=PsiFormatUtil.formatMethod(psiMethod,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE);
  }
 else {
    ret="";
  }
  return ret;
}
