{
  myIntentionSettingsTree=new IntentionSettingsTree(){
    @Override protected void selectionChanged(    Object selected){
      if (selected instanceof IntentionActionMetaData) {
        final IntentionActionMetaData actionMetaData=(IntentionActionMetaData)selected;
        final Runnable runnable=new Runnable(){
          @Override public void run(){
            intentionSelected(actionMetaData);
          }
        }
;
        myResetAlarm.cancelAllRequests();
        myResetAlarm.addRequest(runnable,100);
      }
 else {
        categorySelected((String)selected);
      }
    }
    @Override protected List<IntentionActionMetaData> filterModel(    String filter,    final boolean force){
      final List<IntentionActionMetaData> list=IntentionManagerSettings.getInstance().getMetaData();
      if (filter == null || filter.length() == 0)       return list;
      final HashSet<String> quoted=new HashSet<String>();
      List<Set<String>> keySetList=SearchUtil.findKeys(filter,quoted);
      List<IntentionActionMetaData> result=new ArrayList<IntentionActionMetaData>();
      for (      IntentionActionMetaData metaData : list) {
        if (isIntentionAccepted(metaData,filter,force,keySetList,quoted)) {
          result.add(metaData);
        }
      }
      final Set<String> filters=SearchableOptionsRegistrar.getInstance().getProcessedWords(filter);
      if (force && result.isEmpty()) {
        if (filters.size() > 1) {
          result=filterModel(filter,false);
        }
      }
      return result;
    }
  }
;
  myComponent=new OnePixelSplitter(false,0.4f);
  myComponent.setFirstComponent(myIntentionSettingsTree.getComponent());
  myComponent.setSecondComponent(myIntentionDescriptionPanel.getComponent());
}
