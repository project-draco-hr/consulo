{
  return ApplicationManager.getApplication().runReadAction(new Computable<GenerationItem[]>(){
    @Override public GenerationItem[] compute(){
      final List<GenerationItem> result=new ArrayList<GenerationItem>();
      for (      Module module : ModuleManager.getInstance(context.getProject()).getModules()) {
        final AndroidFacet facet=AndroidFacet.getInstance(module);
        if (facet == null || !facet.getConfiguration().LIBRARY_PROJECT) {
          continue;
        }
        final String mavenIdStr=AndroidMavenUtil.getMavenIdStringByExtApklibModule(facet.getModule());
        if (mavenIdStr == null) {
          continue;
        }
        final AndroidExternalApklibDependenciesManager manager=AndroidExternalApklibDependenciesManager.getInstance(context.getProject());
        final String artifactFilePath=manager.getArtifactFilePath(mavenIdStr);
        if (artifactFilePath == null) {
          context.addMessage(CompilerMessageCategory.ERROR,"Cannot find artifact file for generated module " + module.getName() + ". Try to force reimport Maven model",null,-1,-1);
          continue;
        }
        final VirtualFile root=AndroidRootUtil.getMainContentRoot(facet);
        if (root == null) {
          context.addMessage(CompilerMessageCategory.ERROR,"Cannot find main root in generated module containing AndroidManifest.xml" + module.getName() + ". Try to force reimport Maven model",null,-1,-1);
          continue;
        }
        result.add(new MyGenerationItem(module,FileUtil.toSystemDependentName(root.getPath()),FileUtil.toSystemDependentName(artifactFilePath)));
      }
      return result.toArray(new GenerationItem[result.size()]);
    }
  }
);
}
