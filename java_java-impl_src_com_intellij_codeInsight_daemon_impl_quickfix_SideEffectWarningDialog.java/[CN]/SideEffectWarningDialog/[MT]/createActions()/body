{
  List<AbstractAction> actions=new ArrayList<AbstractAction>();
  myRemoveAllAction=new AbstractAction(){
{
      UIUtil.setActionNameAndMnemonic(QuickFixBundle.message("side.effect.action.remove"),this);
      putValue(DEFAULT_ACTION,this);
    }
    @Override public void actionPerformed(    ActionEvent e){
      close(DELETE_ALL);
    }
  }
;
  actions.add(myRemoveAllAction);
  if (myCanCopeWithSideEffects) {
    myMakeStmtAction=new AbstractAction(){
{
        UIUtil.setActionNameAndMnemonic(QuickFixBundle.message("side.effect.action.transform"),this);
      }
      @Override public void actionPerformed(      ActionEvent e){
        close(MAKE_STATEMENT);
      }
    }
;
    actions.add(myMakeStmtAction);
  }
  myCancelAllAction=new AbstractAction(){
{
      UIUtil.setActionNameAndMnemonic(QuickFixBundle.message("side.effect.action.cancel"),this);
    }
    @Override public void actionPerformed(    ActionEvent e){
      doCancelAction();
    }
  }
;
  actions.add(myCancelAllAction);
  return actions.toArray(new Action[actions.size()]);
}
