{
  final PsiFile psiFile=PsiManager.getInstance(project).findFile(file);
  final ContentBasedFileSubstitutor[] processors=Extensions.getExtensions(ContentBasedFileSubstitutor.EP_NAME);
  for (  ContentBasedFileSubstitutor processor : processors) {
    if (processor.isApplicable(project,file)) {
      final Language language=processor.obtainLanguageForFile(file);
      if (language != null) {
        final PsiStructureViewFactory factory=LanguageStructureViewBuilder.INSTANCE.forLanguage(language);
        if (factory != null)         return factory.getStructureViewBuilder(psiFile);
      }
    }
  }
  final PsiJavaFile javaFile=(PsiJavaFile)psiFile;
  if (javaFile == null)   return null;
  return new TreeBasedStructureViewBuilder(){
    @NotNull public StructureViewModel createStructureViewModel(){
      return new JavaFileTreeModel(javaFile);
    }
  }
;
}
