{
  if (LOG.isDebugEnabled()) {
    LOG.debug("addSubtreeToUpdate:" + rootNode);
  }
  for (Iterator<DefaultMutableTreeNode> iterator=myNodesToUpdate.iterator(); iterator.hasNext(); ) {
    DefaultMutableTreeNode node=iterator.next();
    if (rootNode.isNodeAncestor(node)) {
      return;
    }
 else     if (node.isNodeAncestor(rootNode)) {
      iterator.remove();
    }
  }
  myNodesToUpdate.add(rootNode);
  myUpdateQueue.queue(new Update("ViewUpdate"){
    public boolean isExpired(){
      return myTreeBuilder.isDisposed();
    }
    public void run(){
      if (myTreeBuilder.getTreeStructure().hasSomethingToCommit()) {
        myUpdateQueue.queue(this);
        return;
      }
      myTreeBuilder.getTreeStructure().commit();
      try {
        performUpdate();
      }
 catch (      ProcessCanceledException e) {
        throw e;
      }
catch (      RuntimeException e) {
        LOG.error(myTreeBuilder.getClass().getName(),e);
      }
    }
  }
);
}
