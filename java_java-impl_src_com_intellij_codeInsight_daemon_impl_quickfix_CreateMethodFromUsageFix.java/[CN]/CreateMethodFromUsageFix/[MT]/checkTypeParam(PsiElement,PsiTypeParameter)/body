{
  final String typeParameterName=typeParameter.getName();
  final boolean[] found=new boolean[]{false};
  typeElement.accept(new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitElement(    PsiElement element){
      if (found[0])       return;
      super.visitElement(element);
    }
    @Override public void visitTypeElement(    PsiTypeElement type){
      super.visitTypeElement(type);
      final PsiClass psiClass=PsiUtil.resolveClassInType(type.getType());
      if (psiClass instanceof PsiTypeParameter && PsiTreeUtil.isAncestor(((PsiTypeParameter)psiClass).getOwner(),typeElement,true)) {
        return;
      }
      if (Comparing.strEqual(typeParameterName,type.getText())) {
        found[0]=true;
      }
    }
  }
);
  return found[0];
}
