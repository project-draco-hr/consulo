{
  final JPanel panel=new JPanel(new GridBagLayout());
  mySearchField.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    DocumentEvent e){
      final SearchableOptionsRegistrar optionsRegistrar=SearchableOptionsRegistrar.getInstance();
      final @NonNls String searchPattern=mySearchField.getText();
      if (searchPattern != null && searchPattern.length() > 0) {
        final String[] searchOptions=searchPattern.split("[\\W]");
        Set<Configurable> configurables=null;
        for (        String option : searchOptions) {
          if (option != null && option.length() > 0) {
            final Set<Configurable> optionConfigurables=optionsRegistrar.getConfigurables(myGroups,option);
            if (configurables == null) {
              configurables=optionConfigurables;
            }
 else {
              configurables.retainAll(optionConfigurables);
            }
          }
        }
        myOptionContainers=configurables;
        myGlassPanel.clear();
        myPanel.repaint();
      }
    }
  }
);
  final GridBagConstraints gc=new GridBagConstraints(0,0,1,1,1,0,GridBagConstraints.EAST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0);
  panel.add(Box.createHorizontalBox(),gc);
  gc.gridx++;
  gc.weightx=0;
  gc.fill=GridBagConstraints.NONE;
  panel.add(new JLabel(IdeBundle.message("search.textfield.title")),gc);
  gc.gridx++;
  final int height=mySearchField.getPreferredSize().height;
  mySearchField.setPreferredSize(new Dimension(100,height));
  panel.add(mySearchField,gc);
  return panel;
}
