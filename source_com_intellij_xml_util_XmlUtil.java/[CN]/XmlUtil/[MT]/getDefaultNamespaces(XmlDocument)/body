{
  final XmlFile file=getContainingFile(document);
  final XmlTag tag=document.getRootTag();
  if (tag == null)   return new String[][]{new String[]{EMPTY_URI}};
  if (file != null) {
    final @NotNull XmlFileNSInfoProvider[] nsProviders=ApplicationManager.getApplication().getComponents(XmlFileNSInfoProvider.class);
    NextProvider:     for (    XmlFileNSInfoProvider nsProvider : nsProviders) {
      final String[][] pairs=nsProvider.getDefaultNamespaces(file);
      if (pairs != null && pairs.length > 0) {
        for (        final String[] nsMapping : pairs) {
          if (nsMapping == null || nsMapping.length != 2 || nsMapping[0] == null || nsMapping[1] == null) {
            LOG.debug("NSInfoProvider " + nsProvider + " gave wrong info about "+ file.getVirtualFile());
            continue NextProvider;
          }
        }
        return pairs;
      }
    }
  }
  String namespace=getDtdUri(document);
  if (namespace != null)   return new String[][]{new String[]{"",namespace}};
  if ("taglib".equals(tag.getName())) {
    return new String[][]{new String[]{"",TAGLIB_1_2_URI}};
  }
  if (file != null) {
    final FileType fileType=file.getFileType();
    if (fileType == StdFileTypes.HTML || fileType == StdFileTypes.XHTML) {
      return new String[][]{new String[]{"",XHTML_URI}};
    }
 else     if (fileType == StdFileTypes.JSPX || fileType == StdFileTypes.JSP) {
      String baseLanguageNameSpace=EMPTY_URI;
      if (PsiUtil.isInJspFile(file)) {
        final Language baseLanguage=PsiUtil.getJspFile(file).getViewProvider().getTemplateDataLanguage();
        if (baseLanguage == StdLanguages.HTML || baseLanguage == StdLanguages.XHTML) {
          baseLanguageNameSpace=XHTML_URI;
        }
      }
      return new String[][]{new String[]{"",baseLanguageNameSpace},new String[]{"jsp",JSP_URI}};
    }
  }
  return new String[][]{new String[]{"",EMPTY_URI}};
}
