{
  int start=0;
  if (CharsetToolkit.hasUTF8Bom(bytes)) {
    start=CharsetToolkit.UTF8_BOM.length;
  }
  start=skipWhiteSpace(start,bytes);
  if (!ArrayUtil.startsWith(bytes,start,ENCODING_XML_PROLOG_BYTES))   return null;
  start+=ENCODING_XML_PROLOG_BYTES.length;
  while (start < bytes.length) {
    start=skipWhiteSpace(start,bytes);
    if (ArrayUtil.startsWith(bytes,start,XML_PROLOG_END_BYTES))     return null;
    if (ArrayUtil.startsWith(bytes,start,ENCODING_BYTES)) {
      start+=ENCODING_BYTES.length;
      start=skipWhiteSpace(start,bytes);
      if (start >= bytes.length || bytes[start] != '=')       continue;
      start++;
      start=skipWhiteSpace(start,bytes);
      if (start >= bytes.length || bytes[start] != '\'' && bytes[start] != '\"')       continue;
      byte quote=bytes[start];
      start++;
      StringBuilder encoding=new StringBuilder();
      while (start < bytes.length) {
        if (bytes[start] == quote)         return encoding.toString();
        encoding.append((char)bytes[start++]);
      }
    }
    start++;
  }
  return null;
}
