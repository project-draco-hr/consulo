{
  super(new BorderLayout(4,2));
  myChooser=new ComboBox();
  myChooser.setRenderer(new ColoredListCellRendererWrapper<LocalChangeList>(){
    @Override protected void doCustomize(    JList list,    LocalChangeList value,    int index,    boolean selected,    boolean hasFocus){
      if (value != null) {
        String name=StringUtil.shortenTextWithEllipsis(value.getName().trim(),MAX_LEN,0);
        append(name,value.isDefault() ? SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
    }
  }
);
  myChooser.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        final LocalChangeList changeList=(LocalChangeList)myChooser.getSelectedItem();
        setSelectedList(changeList);
        myChooser.setToolTipText(changeList == null ? "" : (changeList.getName()));
      }
    }
  }
);
  myChooser.setEditable(false);
  add(myChooser,BorderLayout.CENTER);
  JLabel label=new JLabel(VcsBundle.message("commit.dialog.changelist.label"));
  label.setLabelFor(myChooser);
  add(label,BorderLayout.WEST);
}
