{
  myProjectsModel=new DefaultListModel();
  myProjectsList=new JBList(myProjectsModel);
  myProjectsList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  addTitle(ExternalSystemBundle.message("settings.title.linked.projects",myExternalSystemId.getReadableName()));
  myComponent.add(new JBScrollPane(myProjectsList),ExternalSystemUiUtil.getFillLineConstraints(1));
  addTitle(ExternalSystemBundle.message("settings.title.project.settings"));
  List<ProjectSettings> settings=ContainerUtilRt.newArrayList(s.getLinkedProjectsSettings());
  myProjectsList.setVisibleRowCount(Math.max(3,Math.min(5,settings.size())));
  ContainerUtil.sort(settings,new Comparator<ProjectSettings>(){
    @Override public int compare(    ProjectSettings s1,    ProjectSettings s2){
      return getProjectName(s1.getExternalProjectPath()).compareTo(getProjectName(s2.getExternalProjectPath()));
    }
  }
);
  myProjectSettingsControls.clear();
  for (  ProjectSettings setting : settings) {
    ExternalSettingsControl<ProjectSettings> control=createProjectSettingsControl(setting);
    control.fillUi(myComponent,1);
    myProjectsModel.addElement(getProjectName(setting.getExternalProjectPath()));
    myProjectSettingsControls.add(control);
    control.showUi(false);
  }
  myProjectsList.addListSelectionListener(new ListSelectionListener(){
    @SuppressWarnings("unchecked") @Override public void valueChanged(    ListSelectionEvent e){
      if (e.getValueIsAdjusting()) {
        return;
      }
      int i=myProjectsList.getSelectedIndex();
      if (i < 0) {
        return;
      }
      if (myActiveProjectSettingsControl != null) {
        myActiveProjectSettingsControl.showUi(false);
      }
      myActiveProjectSettingsControl=myProjectSettingsControls.get(i);
      myActiveProjectSettingsControl.showUi(true);
    }
  }
);
  if (!myProjectsModel.isEmpty()) {
    addTitle(ExternalSystemBundle.message("settings.title.system.settings",myExternalSystemId.getReadableName()));
    myProjectsList.setSelectedIndex(0);
  }
}
