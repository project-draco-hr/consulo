{
  PsiClass[] cachedInners=myCachedInners;
  if (cachedInners == null) {
    if (getTreeElement() != null) {
      cachedInners=calcTreeElement().getChildrenAsPsiElements(CLASS_BIT_SET,PSI_CLASS_ARRAY_CONSTRUCTOR);
    }
 else {
      long[] classIds=getRepositoryManager().getClassView().getInnerClasses(getRepositoryId());
      PsiClass[] classes=classIds.length > 0 ? new PsiClass[classIds.length] : PsiClass.EMPTY_ARRAY;
      for (int i=0; i < classIds.length; i++) {
        long id=classIds[i];
        classes[i]=(PsiClass)getRepositoryElementsManager().findOrCreatePsiElementById(id);
      }
      cachedInners=classes;
    }
    myCachedInners=cachedInners;
  }
  return cachedInners;
}
