{
  if (myIsViewer) {
    return null;
  }
  DefaultActionGroup actions=new DefaultActionGroup();
  final DefaultActionGroup breakpointTypes=new DefaultActionGroup();
  for (  BreakpointPanelProvider provider : myBreakpointsPanelProviders) {
    breakpointTypes.addAll(provider.getAddBreakpointActions(myProject));
  }
  actions.add(new AnAction("Add Breakpoint",null,IconUtil.getAddIcon()){
    @Override public void actionPerformed(    AnActionEvent e){
      JBPopupFactory.getInstance().createActionGroupPopup(null,breakpointTypes,e.getDataContext(),JBPopupFactory.ActionSelectionAid.NUMBERING,false).showUnderneathOf(myPopupBuilder.getActionToolbar().getComponent());
    }
  }
);
  actions.add(new AnAction("Remove Breakpoint",null,PlatformIcons.DELETE_ICON){
    @Override public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(MasterDetailPopupBuilder.allowedToRemoveItems(myPopupBuilder.getSelectedItems()));
    }
    @Override public void actionPerformed(    AnActionEvent e){
      myPopupBuilder.removeSelectedItems(myProject);
    }
  }
);
  for (  XBreakpointGroupingRule rule : myRulesAvailable) {
    if (!rule.isAlwaysEnabled()) {
      actions.add(new ToggleBreakpointGroupingRuleEnabledAction(rule));
    }
  }
  return actions;
}
