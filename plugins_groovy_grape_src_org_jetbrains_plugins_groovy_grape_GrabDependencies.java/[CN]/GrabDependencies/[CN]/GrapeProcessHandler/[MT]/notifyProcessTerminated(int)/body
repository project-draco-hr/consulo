{
  super.notifyProcessTerminated(exitCode);
  final List<VirtualFile> jars=new ArrayList<VirtualFile>();
  for (  String line : myStdOut.toString().split("\n")) {
    if (line.startsWith(GrapeRunner.URL_PREFIX)) {
      try {
        final URL url=new URL(line.substring(GrapeRunner.URL_PREFIX.length()));
        final File libFile=new File(url.toURI());
        if (libFile.exists() && libFile.getName().endsWith(".jar")) {
          final VirtualFile vfile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(libFile);
          ContainerUtil.addIfNotNull(vfile,jars);
        }
      }
 catch (      MalformedURLException e) {
        LOG.error(e);
      }
catch (      URISyntaxException e) {
        LOG.error(e);
      }
    }
  }
  new WriteAction(){
    protected void run(    Result result) throws Throwable {
      final String title=jars.size() + " dependencies added";
      final String descr=myStdOut.toString().replaceAll("\n","<br>") + "<p>" + myStdErr.toString().replaceAll("\n","<br>");
      Notifications.Bus.notify(new Notification("Grape",title,descr,NotificationType.INFORMATION),NotificationDisplayType.BALLOON,myModule.getProject());
      if (!jars.isEmpty()) {
        addGrapeDependencies(jars);
      }
    }
  }
.execute();
}
