{
  if (subFile.isFile() && subFile.getName().endsWith(getFileExtension())) {
    final byte[] bytes=FileUtil.loadFileBytes(subFile);
    final String text=new String(bytes);
    final String fileName="before." + getFileExtension();
    final PsiFile file=PsiFileFactory.getInstance(getProject()).createFileFromText(fileName,getFileType(fileName),StringUtil.convertLineSeparators(text),LocalTimeCounter.currentTime(),true);
    try {
      CommandProcessor.getInstance().executeCommand(getProject(),new Runnable(){
        @Override public void run(){
          ApplicationManager.getApplication().runWriteAction(new Runnable(){
            @Override public void run(){
              try {
                if (formatWithPsi) {
                  performFormatting(file);
                }
 else {
                  performFormattingWithDocument(file);
                }
              }
 catch (              Throwable e) {
                e.printStackTrace();
                failedFiles.add(subFile);
              }
              System.out.println(subFile.getPath() + ": finished");
            }
          }
);
        }
      }
,"",null);
    }
  finally {
      final VirtualFile virtualFile=file.getVirtualFile();
      if (virtualFile != null) {
        ((UndoManagerImpl)UndoManager.getInstance(getProject())).clearUndoRedoQueueInTests(virtualFile);
        ((UndoManagerImpl)UndoManager.getGlobalInstance()).clearUndoRedoQueueInTests(virtualFile);
      }
    }
  }
}
