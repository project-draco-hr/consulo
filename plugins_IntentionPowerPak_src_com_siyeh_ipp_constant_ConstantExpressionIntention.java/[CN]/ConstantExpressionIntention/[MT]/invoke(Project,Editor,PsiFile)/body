{
  if (isFileReadOnly(project,file)) {
    return;
  }
  final PsiExpression expression=(PsiExpression)findMatchingElement(file,editor);
  final PsiManager psiManager=expression.getManager();
  final PsiConstantEvaluationHelper helper=psiManager.getConstantEvaluationHelper();
  final Object value=helper.computeConstantExpression(expression);
  final String newExpression;
  if (value instanceof String) {
    newExpression='\"' + StringUtil.escapeStringCharacters((String)value) + '\"';
  }
 else   if (value == null) {
    newExpression="null";
  }
 else {
    newExpression=String.valueOf(value);
  }
  replaceExpression(project,newExpression,expression);
}
