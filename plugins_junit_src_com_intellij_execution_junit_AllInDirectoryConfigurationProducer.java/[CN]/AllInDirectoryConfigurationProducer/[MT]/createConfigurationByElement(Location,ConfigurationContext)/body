{
  final Project project=location.getProject();
  final PsiElement element=location.getPsiElement();
  if (!(element instanceof PsiDirectory))   return null;
  final PsiJavaPackage aPackage=checkPackage(element);
  if (aPackage == null)   return null;
  final VirtualFile virtualFile=((PsiDirectory)element).getVirtualFile();
  final Module module=ModuleUtilCore.findModuleForFile(virtualFile,project);
  if (module == null)   return null;
  final ContentEntry[] entries=ModuleRootManager.getInstance(module).getContentEntries();
  int testRootCount=0;
  for (  ContentEntry entry : entries) {
    for (    ContentFolder sourceFolder : entry.getFolders(ContentFolderType.TEST)) {
      testRootCount++;
      if (testRootCount > 1) {
        break;
      }
    }
  }
  if (testRootCount < 2)   return null;
  myDir=(PsiDirectory)element;
  if (!LocationUtil.isJarAttached(location,aPackage,JUnitUtil.TESTCASE_CLASS))   return null;
  RunnerAndConfigurationSettings settings=cloneTemplateConfiguration(project,context);
  final JUnitConfiguration configuration=(JUnitConfiguration)settings.getConfiguration();
  setupConfigurationModule(context,configuration);
  final JUnitConfiguration.Data data=configuration.getPersistentData();
  data.setDirName(virtualFile.getPath());
  data.TEST_OBJECT=JUnitConfiguration.TEST_DIRECTORY;
  configuration.setGeneratedName();
  JavaRunConfigurationExtensionManager.getInstance().extendCreatedConfiguration(configuration,location);
  return settings;
}
