{
  final LayoutTreeComponent treeComponent=myArtifactEditor.getLayoutTreeComponent();
  final LayoutTreeSelection selection=treeComponent.getSelection();
  final CompositePackagingElement<?> parent=selection.getCommonParentElement();
  if (parent == null)   return;
  if (!treeComponent.checkCanRemove(selection.getNodes())) {
    return;
  }
  final Collection<? extends PackagingElement> selectedElements=selection.getElements();
  final String name=Messages.showInputDialog(myArtifactEditor.getMainComponent(),ProjectBundle.message("label.text.specify.artifact.name"),ProjectBundle.message("dialog.title.extract.artifact"),null);
  if (name != null) {
    final Project project=myArtifactEditor.getContext().getProject();
    final ModifiableArtifact artifact=myArtifactEditor.getContext().getModifiableArtifactModel().addArtifact(name,PlainArtifactType.getInstance());
    treeComponent.editLayout(new Runnable(){
      public void run(){
        for (        PackagingElement<?> element : selectedElements) {
          artifact.getRootElement().addOrFindChild(ArtifactUtil.copyWithChildren(element,project));
        }
        for (        PackagingElement element : selectedElements) {
          parent.removeChild(element);
        }
        parent.addOrFindChild(new ArtifactPackagingElement(project,ArtifactPointerManager.getInstance(project).create(artifact)));
      }
    }
);
    treeComponent.rebuildTree();
  }
}
