{
  @NonNls String[] completions={"d","D","s","S","w","W","b","B","A","G","Z","z","Q","E","t","n","r","f","a","e"};
  @NonNls String[] completionsTypes={"digit: [0-9]","nondigit: [^0-9]","whitespace [ \\t\\n\\x0B\\f\\r]","non-whitespace [^\\s]","word character [a-zA-Z_0-9]","nonword character [^\\w]","word boundary","non-word boundary","beginning of the input","end of the previous match","end of the input but for the final terminator, if any","end of input","Nothing, but quotes all characters until \\E"," \tNothing, but ends quoting started by \\Q","tab character ('\\u0009')","newline (line feed) character ('\\u000A')","carriage-return character ('\\u000D')","form-feed character ('\\u000C')","alert (bell) character ('\\u0007')","escape character ('\\u001B')"};
  for (int i=0; i < completions.length; ++i) {
    addLookupElement(result,completions[i],completionsTypes[i],emptyIcon);
  }
  for (  String[] stringArray : RegExpPropertyNameProvider.getAllKnownProperties()) {
    addLookupElement(result,"p{" + stringArray[0] + "}",stringArray.length > 1 ? stringArray[1] : null,PlatformIcons.PROPERTY_ICON);
  }
}
