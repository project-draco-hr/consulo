{
  final List<PsiExpression> result=new ArrayList<PsiExpression>();
  addIfNotNull(result,field.getInitializer());
  PsiClass containingClass=field.getContainingClass();
  if (containingClass != null) {
    LocalSearchScope scope=new LocalSearchScope(containingClass.getConstructors());
    ReferencesSearch.search(field,scope,false).forEach(new Processor<PsiReference>(){
      @Override public boolean process(      PsiReference reference){
        final PsiElement element=reference.getElement();
        if (element instanceof PsiReferenceExpression) {
          final PsiAssignmentExpression assignment=getAssignmentExpressionIfOnAssignmentLhs(element);
          final PsiMethod method=PsiTreeUtil.getParentOfType(assignment,PsiMethod.class);
          if (method != null && method.isConstructor() && assignment != null) {
            addIfNotNull(result,assignment.getRExpression());
          }
        }
        return true;
      }
    }
);
  }
  return result;
}
