{
  JPanel panel=new JPanel(new GridBagLayout());
  panel.add(new JLabel(ApplicationBundle.message("combobox.scheme.name")),new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,5,5),0,0));
  mySchemeComboBox=new JComboBox();
  panel.add(mySchemeComboBox,new GridBagConstraints(1,0,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,5,10),0,0));
  JButton saveAsButton=new JButton(ApplicationBundle.message("button.save.as"));
  saveAsButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      showSaveAsDialog();
    }
  }
);
  panel.add(saveAsButton,new GridBagConstraints(2,0,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,5,5),0,0));
  myDeleteButton=new JButton(ApplicationBundle.message("button.delete"));
  myDeleteButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (mySchemeComboBox.getSelectedIndex() != -1) {
        myOptions.removeScheme((String)mySchemeComboBox.getSelectedItem());
      }
    }
  }
);
  panel.add(myDeleteButton,new GridBagConstraints(3,0,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,5,5),0,0));
  SchemesManager<EditorColorsScheme,EditorColorsSchemeImpl> schemesManager=((EditorColorsManagerImpl)EditorColorsManager.getInstance()).getSchemesManager();
  if (schemesManager.isExportAvailable()) {
    myExportButton=new JButton("Share...");
    myExportButton.addActionListener(new ActionListener(){
      public void actionPerformed(      final ActionEvent e){
        EditorColorsScheme selected=myOptions.getOriginalSelectedScheme();
        ExportSchemeAction.doExport((EditorColorsSchemeImpl)selected,((EditorColorsManagerImpl)EditorColorsManager.getInstance()).getSchemesManager());
      }
    }
);
    panel.add(myExportButton,new GridBagConstraints(4,0,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(5,0,5,5),0,0));
    myExportButton.setMnemonic('S');
  }
  if (schemesManager.isImportAvailable()) {
    JButton myImportButton=new JButton("Import Shared...");
    myImportButton.setMnemonic('I');
    myImportButton.addActionListener(new ActionListener(){
      public void actionPerformed(      final ActionEvent e){
        SchemesToImportPopup<EditorColorsScheme,EditorColorsSchemeImpl> popup=new SchemesToImportPopup<EditorColorsScheme,EditorColorsSchemeImpl>(SchemesPanel.this){
          protected void onSchemeSelected(          final EditorColorsSchemeImpl scheme){
            if (scheme != null) {
              myOptions.addImportedScheme(scheme);
            }
          }
        }
;
        popup.show(((EditorColorsManagerImpl)EditorColorsManager.getInstance()).getSchemesManager(),myOptions.getSchemes());
      }
    }
);
    panel.add(myImportButton,new GridBagConstraints(5,0,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(5,0,5,5),0,0));
  }
  return panel;
}
