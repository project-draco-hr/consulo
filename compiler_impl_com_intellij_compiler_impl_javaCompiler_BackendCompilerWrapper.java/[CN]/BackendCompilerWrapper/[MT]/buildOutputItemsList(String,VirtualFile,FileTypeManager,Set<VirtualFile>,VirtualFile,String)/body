{
  final Ref<CacheCorruptedException> exRef=new Ref<CacheCorruptedException>(null);
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(myProject).getFileIndex();
  final ContentIterator contentIterator=new ContentIterator(){
    public boolean processFile(    final VirtualFile child){
      try {
        if (!child.isDirectory() && myCompiler.getCompilableFileTypes().contains(typeManager.getFileTypeByFile(child))) {
          updateOutputItemsList(outputDir,child,compiledWithErrors,sourceRoot,packagePrefix);
        }
        return true;
      }
 catch (      CacheCorruptedException e) {
        exRef.set(e);
        return false;
      }
    }
  }
;
  if (fileIndex.isInContent(from)) {
    fileIndex.iterateContentUnderDirectory(from,contentIterator);
  }
 else {
    new Object(){
      void iterateContent(      VirtualFile from){
        for (        VirtualFile child : from.getChildren()) {
          if (child.isDirectory()) {
            iterateContent(child);
          }
 else {
            contentIterator.processFile(child);
          }
        }
      }
    }
.iterateContent(from);
  }
  if (exRef.get() != null) {
    throw exRef.get();
  }
}
