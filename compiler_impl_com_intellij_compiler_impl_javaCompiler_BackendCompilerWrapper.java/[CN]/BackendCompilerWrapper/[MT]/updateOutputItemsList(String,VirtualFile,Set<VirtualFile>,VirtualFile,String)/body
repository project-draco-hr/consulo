{
  final Cache newCache=myCompileContext.getDependencyCache().getNewClassesCache();
  final Set<CompiledClass> paths=myFileNameToSourceMap.get(srcFile.getName());
  if (paths != null && !paths.isEmpty()) {
    final String prefix=packagePrefix != null && packagePrefix.length() > 0 ? packagePrefix.replace('.','/') + "/" : "";
    final String filePath="/" + prefix + VfsUtil.getRelativePath(srcFile,sourceRoot,'/');
    for (    final CompiledClass cc : paths) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Checking [pathToClass; relPathToSource] = " + cc);
      }
      if (FileUtil.pathsEqual(filePath,cc.relativePathToSource)) {
        final String outputPath=cc.pathToClass.replace(File.separatorChar,'/');
        final Pair<String,String> realLocation=moveToRealLocation(outputDir,outputPath,srcFile);
        if (realLocation != null) {
          myOutputItems.add(new OutputItemImpl(realLocation.getFirst(),new String(realLocation.getSecond().substring(realLocation.first.length() + 1)),srcFile));
          newCache.setPath(cc.qName,realLocation.getSecond());
          if (LOG.isDebugEnabled()) {
            LOG.debug("Added output item: [outputDir; outputPath; sourceFile]  = [" + realLocation.getFirst() + "; "+ realLocation.getSecond()+ "; "+ srcFile.getPresentableUrl()+ "]");
          }
          if (!compiledWithErrors.contains(srcFile)) {
            mySuccesfullyCompiledJavaFiles.add(srcFile);
          }
        }
 else {
          myCompileContext.addMessage(CompilerMessageCategory.ERROR,"Failed to copy from temporary location to output directory: " + outputPath + " (see idea.log for details)",null,-1,-1);
          if (LOG.isDebugEnabled()) {
            LOG.debug("Failed to move to real location: " + outputPath + "; from "+ outputDir);
          }
        }
      }
    }
  }
}
