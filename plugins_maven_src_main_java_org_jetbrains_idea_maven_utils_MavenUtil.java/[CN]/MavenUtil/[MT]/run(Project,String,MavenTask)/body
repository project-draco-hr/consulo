{
  final Exception[] canceledEx=new Exception[1];
  final RuntimeException[] runtimeEx=new RuntimeException[1];
  final Error[] errorEx=new Error[1];
  ProgressManager.getInstance().run(new Task.Modal(project,title,true){
    public void run(    @NotNull ProgressIndicator i){
      try {
        task.run(new MavenProgressIndicator(i));
      }
 catch (      MavenProcessCanceledException e) {
        canceledEx[0]=e;
      }
catch (      ProcessCanceledException e) {
        canceledEx[0]=e;
      }
catch (      RuntimeException e) {
        runtimeEx[0]=e;
      }
catch (      Error e) {
        errorEx[0]=e;
      }
    }
  }
);
  if (canceledEx[0] instanceof MavenProcessCanceledException)   throw (MavenProcessCanceledException)canceledEx[0];
  if (canceledEx[0] instanceof ProcessCanceledException)   throw new MavenProcessCanceledException();
  if (runtimeEx[0] != null)   throw runtimeEx[0];
  if (errorEx[0] != null)   throw errorEx[0];
}
