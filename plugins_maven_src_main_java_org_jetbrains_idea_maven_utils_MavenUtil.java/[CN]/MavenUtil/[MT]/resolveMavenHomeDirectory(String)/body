{
  if (!isEmptyOrSpaces(overrideMavenHome)) {
    return new File(overrideMavenHome);
  }
  String m2home=System.getenv(ENV_M2_HOME);
  if (!isEmptyOrSpaces(m2home)) {
    final File homeFromEnv=new File(m2home);
    if (isValidMavenHome(homeFromEnv)) {
      return homeFromEnv;
    }
  }
  String userHome=System.getProperty(PROP_USER_HOME);
  if (!isEmptyOrSpaces(userHome)) {
    final File underUserHome=new File(userHome,M2_DIR);
    if (isValidMavenHome(underUserHome)) {
      return underUserHome;
    }
  }
  if (SystemInfo.isMac) {
    final File brewDir=new File("/usr/local/Cellar/maven");
    final String[] list=brewDir.list();
    if (list == null || list.length == 0) {
      return null;
    }
    if (list.length == 1) {
      final File home;
      if ((home=fromBrew(brewDir,list)) != null) {
        return home;
      }
    }
 else {
      Arrays.sort(list,new Comparator<String>(){
        @Override public int compare(        String o1,        String o2){
          return StringUtil.compareVersionNumbers(o2,o1);
        }
      }
);
      return fromBrew(brewDir,list);
    }
  }
  return null;
}
