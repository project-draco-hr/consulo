{
  try {
    for (    Field each : ReflectionUtil.collectFields(object.getClass())) {
      Class<?> type=each.getType();
      each.setAccessible(true);
      Object value=each.get(object);
      if (shouldStrip(value)) {
        each.set(object,null);
      }
 else {
        if (value != null) {
          Package pack=type.getPackage();
          if (pack != null && Model.class.getPackage().getName().equals(pack.getName())) {
            stripDown(value);
          }
        }
      }
    }
  }
 catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
}
