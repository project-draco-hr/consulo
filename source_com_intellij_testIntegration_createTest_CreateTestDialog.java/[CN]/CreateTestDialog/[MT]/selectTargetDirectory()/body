{
  final String packageName=getPackageName();
  final PackageWrapper targetPackage=new PackageWrapper(PsiManager.getInstance(myProject),packageName);
  final VirtualFile selectedRoot=new ReadAction<VirtualFile>(){
    protected void run(    Result<VirtualFile> result) throws Throwable {
      VirtualFile[] roots=ModuleRootManager.getInstance(myTargetModule).getSourceRoots();
      if (roots.length == 0)       return;
      if (roots.length == 1) {
        result.setResult(roots[0]);
      }
 else {
        PsiDirectory defaultDir=chooseDefaultDirectory(packageName);
        result.setResult(MoveClassesOrPackagesUtil.chooseSourceRoot(targetPackage,roots,defaultDir));
      }
    }
  }
.execute().getResultObject();
  if (selectedRoot == null)   return null;
  return new WriteCommandAction<PsiDirectory>(myProject,CodeInsightBundle.message("create.directory.command")){
    protected void run(    Result<PsiDirectory> result) throws Throwable {
      result.setResult(RefactoringUtil.createPackageDirectoryInSourceRoot(targetPackage,selectedRoot));
    }
  }
.execute().getResultObject();
}
