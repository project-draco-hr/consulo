{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiParameter)) {
    return;
  }
  final PsiParameter parameter=(PsiParameter)parent;
  final PsiElement grandParent=parameter.getParent();
  if (!(grandParent instanceof PsiCatchSection)) {
    return;
  }
  final PsiCatchSection catchSection=(PsiCatchSection)grandParent;
  final PsiTryStatement tryStatement=catchSection.getTryStatement();
  final PsiCatchSection[] catchSections=tryStatement.getCatchSections();
  if (catchSections.length > 1) {
    catchSection.delete();
  }
 else {
    final PsiCodeBlock codeBlock=tryStatement.getTryBlock();
    if (codeBlock == null) {
      return;
    }
    final PsiStatement[] statements=codeBlock.getStatements();
    if (statements.length == 0) {
      tryStatement.delete();
    }
    final PsiStatement firstStatement=statements[0];
    final PsiElement newElement=tryStatement.replace(firstStatement);
    final PsiElement target=newElement.getParent();
    for (int i=1; i < statements.length; i++) {
      target.addAfter(statements[i],newElement);
    }
  }
}
