{
  if (myProjectFile == null) {
    throw new ConfigurationException(GradleBundle.message("gradle.import.text.error.project.undefined"));
  }
  if (myProjectFile.isDirectory()) {
    throw new ConfigurationException(GradleBundle.message("gradle.import.text.error.directory.instead.file"));
  }
  try {
    Project project=ProjectManager.getInstance().getDefaultProject();
    ProgressManager.getInstance().run(new Task.Modal(project,GradleBundle.message("gradle.import.progress.text"),true){
      @Override public void run(      @NotNull ProgressIndicator indicator){
        indicator.setIndeterminate(true);
        GradleApiFacadeManager manager=ServiceManager.getService(getProject(),GradleApiFacadeManager.class);
        try {
          GradleProjectResolver resolver=manager.getFacade().getResolver();
          myGradleProject=resolver.resolveProjectInfo(myProjectFile.getAbsolutePath(),false);
        }
 catch (        Exception e) {
          GradleLog.LOG.warn("Can't resolve gradle project",e);
        }
      }
    }
);
  }
 catch (  IllegalArgumentException e) {
    throw new ConfigurationException(e.getMessage(),GradleBundle.message("gradle.import.text.error.cannot.parse.project"));
  }
  if (myGradleProject == null) {
    throw new ConfigurationException(GradleBundle.message("gradle.import.text.error.resolve.generic",myProjectFile.getPath()),GradleBundle.message("gradle.import.title.error.resolve.generic"));
  }
}
