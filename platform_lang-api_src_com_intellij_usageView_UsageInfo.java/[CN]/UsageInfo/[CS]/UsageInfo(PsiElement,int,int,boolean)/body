{
  element=element.getNavigationElement();
  PsiFile file=element.getContainingFile();
  PsiElement topElement=file == null ? element : file;
  LOG.assertTrue(topElement.isValid(),element);
  TextRange elementRange=element.getTextRange();
  if (elementRange == null) {
    throw new IllegalArgumentException("text range null for " + element + "; "+ element.getClass());
  }
  if (startOffset == -1 && endOffset == -1) {
    startOffset=element.getTextOffset() - elementRange.getStartOffset();
    endOffset=elementRange.getEndOffset() - elementRange.getStartOffset();
  }
  if (startOffset < 0) {
    throw new IllegalArgumentException("element " + element + "; startOffset "+ startOffset);
  }
  if (startOffset > endOffset) {
    throw new IllegalArgumentException("element " + element + "; diff "+ (endOffset - startOffset));
  }
  Project project=topElement.getProject();
  SmartPointerManager smartPointerManager=SmartPointerManager.getInstance(project);
  mySmartPointer=smartPointerManager.createSmartPsiElementPointer(element,file);
  if (startOffset != element.getTextOffset() - elementRange.getStartOffset() || endOffset != elementRange.getLength()) {
    TextRange rangeToStore;
    if (file != null && InjectedLanguageManager.getInstance(project).isInjectedFragment(file)) {
      rangeToStore=elementRange;
    }
 else {
      rangeToStore=TextRange.create(startOffset,endOffset).shiftRight(elementRange.getStartOffset());
    }
    myPsiFileRange=smartPointerManager.createSmartPsiFileRangePointer(file,rangeToStore);
  }
 else {
    myPsiFileRange=null;
  }
  this.isNonCodeUsage=isNonCodeUsage;
}
