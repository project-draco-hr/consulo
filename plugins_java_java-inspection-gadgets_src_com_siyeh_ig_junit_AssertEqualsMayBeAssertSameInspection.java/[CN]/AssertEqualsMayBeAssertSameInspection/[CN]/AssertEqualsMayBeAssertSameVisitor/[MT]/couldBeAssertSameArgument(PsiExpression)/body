{
  final PsiType type=expression.getType();
  if (!(type instanceof PsiClassType)) {
    return false;
  }
  final PsiClassType classType=(PsiClassType)type;
  final PsiClass argumentClass=classType.resolve();
  if (argumentClass == null) {
    return false;
  }
  if (!argumentClass.hasModifierProperty(PsiModifier.FINAL)) {
    return false;
  }
  final PsiMethod[] methods=argumentClass.findMethodsByName("equals",true);
  final PsiManager manager=expression.getManager();
  final JavaPsiFacade psiFacade=JavaPsiFacade.getInstance(manager.getProject());
  final PsiClass objectClass=psiFacade.findClass(CommonClassNames.JAVA_LANG_OBJECT,argumentClass.getResolveScope());
  if (objectClass == null) {
    return false;
  }
  for (  PsiMethod method : methods) {
    final PsiClass containingClass=method.getContainingClass();
    if (!objectClass.equals(containingClass)) {
      return false;
    }
  }
  return true;
}
