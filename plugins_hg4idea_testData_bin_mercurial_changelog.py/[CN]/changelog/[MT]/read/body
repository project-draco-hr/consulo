def read(self, node):
    "\n        format used:\n        nodeid\n        : manifest node in ascii\n        user\n          : user, no \n or \r allowed\n        time tz extra\n : date (time is int or float, timezone is int)\n                        : extra is metadatas, encoded and separated by '\x00'\n                        : older versions ignore it\n        files\n\n       : files modified by the cset, no \n or \r allowed\n        (.*)            : comment (free text, ideally utf-8)\n\n        changelog v0 doesn't use extra\n        "
    text = self.revision(node)
    if (not text):
        return (nullid, '', (0, 0), [], '', {'branch': 'default', })
    last = text.index('\n\n')
    desc = encoding.tolocal(text[(last + 2):])
    l = text[:last].split('\n')
    manifest = bin(l[0])
    user = encoding.tolocal(l[1])
    extra_data = l[2].split(' ', 2)
    if (len(extra_data) != 3):
        time = float(extra_data.pop(0))
        try:
            timezone = int(extra_data[0])
        except:
            timezone = 0
        extra = {}
    else:
        (time, timezone, extra) = extra_data
        (time, timezone) = (float(time), int(timezone))
        extra = decodeextra(extra)
    if (not extra.get('branch')):
        extra['branch'] = 'default'
    files = l[3:]
    return (manifest, user, (time, timezone), files, desc, extra)
