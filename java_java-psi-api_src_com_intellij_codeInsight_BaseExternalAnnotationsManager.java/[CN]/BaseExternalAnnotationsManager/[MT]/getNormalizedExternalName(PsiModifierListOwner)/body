{
  String externalName=getExternalName(owner,true);
  if (externalName != null) {
    if (owner instanceof PsiParameter && owner.getParent() instanceof PsiParameterList) {
      final PsiMethod method=PsiTreeUtil.getParentOfType(owner,PsiMethod.class);
      if (method != null) {
        externalName=externalName.substring(0,externalName.lastIndexOf(' ') + 1) + method.getParameterList().getParameterIndex((PsiParameter)owner);
      }
    }
    final int idx=externalName.indexOf('(');
    if (idx == -1)     return externalName;
    final StringBuilder buf=StringBuilderSpinAllocator.alloc();
    try {
      final int rightIdx=externalName.indexOf(')');
      final String[] params=externalName.substring(idx + 1,rightIdx).split(",");
      buf.append(externalName.substring(0,idx + 1));
      for (      String param : params) {
        param=param.trim();
        final int spaceIdx=param.indexOf(' ');
        buf.append(spaceIdx > -1 ? param.substring(0,spaceIdx) : param).append(", ");
      }
      return StringUtil.trimEnd(buf.toString(),", ") + externalName.substring(rightIdx);
    }
  finally {
      StringBuilderSpinAllocator.dispose(buf);
    }
  }
  return externalName;
}
