{
  myLoginURLLabel=new JBLabel("Login URL:",SwingConstants.RIGHT);
  myLoginURLText=TextFieldWithAutoCompletion.create(myProject,ContainerUtil.newArrayList(SERVER_URL_PLACEHOLDER,USERNAME_PLACEHOLDER,PASSWORD_PLACEHOLDER),null,false,myRepository.getLoginURL());
  installListener(myLoginURLText.getDocument());
  myLoginMethodType=new ComboBox(new String[]{GET,POST},-1);
  myLoginMethodType.setSelectedItem(myRepository.getLoginMethodType());
  installListener(myLoginMethodType);
  JPanel loginPanel=new JPanel(new BorderLayout(UIUtil.DEFAULT_HGAP,UIUtil.DEFAULT_VGAP));
  loginPanel.add(myLoginURLText,BorderLayout.CENTER);
  loginPanel.add(myLoginMethodType,BorderLayout.EAST);
  myTasksListURLLabel=new JBLabel("Tasks List URL:",SwingConstants.RIGHT);
  final ArrayList<String> completionList1=ContainerUtil.newArrayList(SERVER_URL_PLACEHOLDER,QUERY_PLACEHOLDER,MAX_COUNT_PLACEHOLDER);
  myTasksListURLText=TextFieldWithAutoCompletion.create(myProject,completionList1,null,false,myRepository.getTasksListURL());
  installListener(myTasksListURLText.getDocument());
  myGetTasksMethodType=new ComboBox(new String[]{GET,POST},-1);
  myGetTasksMethodType.setSelectedItem(myRepository.getGetTasksMethodType());
  installListener(myGetTasksMethodType);
  JPanel tasksPanel=new JPanel(new BorderLayout(UIUtil.DEFAULT_HGAP,UIUtil.DEFAULT_VGAP));
  tasksPanel.add(myTasksListURLText,BorderLayout.CENTER);
  tasksPanel.add(myGetTasksMethodType,BorderLayout.EAST);
  myTaskPatternLabel=new JBLabel("Task Pattern:",SwingConstants.RIGHT);
  final Document document=EditorFactory.getInstance().createDocument(myRepository.getTaskPattern());
  myTaskPatternText=EditorFactory.getInstance().createEditor(document,myProject,HtmlFileType.INSTANCE,false);
  final ArrayList<String> completionList2=ContainerUtil.newArrayList("({id}.+?)","({summary}.+?)");
  TextFieldWithAutoCompletionContributor.installCompletion(document,myProject,new StringsCompletionProvider(completionList2,null),true);
  installListener(document);
  myTaskPatternText.getSettings().setLineMarkerAreaShown(false);
  myTaskPatternText.getSettings().setFoldingOutlineShown(false);
  String useCompletionText=". Use " + KeymapUtil.getFirstKeyboardShortcutText(ActionManager.getInstance().getAction(IdeActions.ACTION_CODE_COMPLETION)) + " for completion.";
  return FormBuilder.createFormBuilder().setAlignLabelOnRight(true).addLabeledComponent(myLoginURLLabel,loginPanel).addTooltip("<html>Available placeholders: " + SERVER_URL_PLACEHOLDER + ", "+ USERNAME_PLACEHOLDER+ ", "+ PASSWORD_PLACEHOLDER+ useCompletionText+ "</html>").addLabeledComponent(myTasksListURLLabel,tasksPanel).addTooltip("<html>Available placeholders: " + SERVER_URL_PLACEHOLDER + ", "+ MAX_COUNT_PLACEHOLDER+ ", "+ QUERY_PLACEHOLDER+ " (use for faster tasks search)"+ useCompletionText+ "</html>").addLabeledComponent(myTaskPatternLabel,myTaskPatternText.getComponent()).addTooltip("<html>Task pattern should be a regexp with two matching groups: ({id}.+?) and ({summary}.+?)" + useCompletionText + "</html>").getPanel();
}
