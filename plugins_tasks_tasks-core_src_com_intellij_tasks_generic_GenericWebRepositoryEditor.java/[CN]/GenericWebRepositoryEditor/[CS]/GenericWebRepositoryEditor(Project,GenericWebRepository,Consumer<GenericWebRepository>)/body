{
  super(project,repository,changeListener);
  myLoginAnonymouslyJBCheckBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      loginAnonymouslyChanged(!myLoginAnonymouslyJBCheckBox.isSelected());
    }
  }
);
  installListener(myTasksListURLText.getDocument());
  installListener(myLoginURLText.getDocument());
  myLoginMethodType.setSelectedItem(myRepository.getLoginMethodType());
  installListener(myLoginMethodType);
  myGetTasksMethodType.setSelectedItem(myRepository.getGetTasksMethodType());
  installListener(myGetTasksMethodType);
  final Document document=EditorFactory.getInstance().createDocument(myRepository.getTaskPattern());
  myTaskPatternText=EditorFactory.getInstance().createEditor(document,myProject,HtmlFileType.INSTANCE,false);
  final ArrayList<String> completionList=ContainerUtil.newArrayList("({id}.+?)","({summary}.+?)");
  installListener(document);
  myTaskPatternPanel.add(myTaskPatternText.getComponent(),BorderLayout.CENTER);
  myTaskPatternText.getSettings().setLineMarkerAreaShown(false);
  myTaskPatternText.getSettings().setFoldingOutlineShown(false);
  myTaskPatternText.getSettings().setLineNumbersShown(false);
  myTaskPatternText.getSettings().setWhitespacesShown(true);
  myTaskPatternText.getSettings().setRightMarginShown(false);
  myTaskPatternText.getSettings().setUseSoftWraps(true);
  myTaskPatternText.getSettings().setAdditionalLinesCount(0);
  myTaskPatternText.getSettings().setAdditionalPageAtBottom(false);
  myTaskPatternLabel.setLabelFor(myTaskPatternText.getContentComponent());
  String useCompletionText=". Use " + KeymapUtil.getFirstKeyboardShortcutText(ActionManager.getInstance().getAction(IdeActions.ACTION_CODE_COMPLETION)) + " for completion.";
  myLoginTooltip.setText("<html>Available placeholders: " + SERVER_URL_PLACEHOLDER + ", "+ USERNAME_PLACEHOLDER+ ", "+ PASSWORD_PLACEHOLDER+ useCompletionText+ "</html>");
  myTaskListTooltip.setText("<html>Available placeholders: " + SERVER_URL_PLACEHOLDER + ", "+ MAX_COUNT_PLACEHOLDER+ ", "+ QUERY_PLACEHOLDER+ " (use for faster tasks search)"+ useCompletionText+ "</html>");
  myTaskPatternTooltip.setText("<html>Task pattern should be a regexp with two matching groups: ({id}.+?) and ({summary}.+?)" + useCompletionText + "</html>");
  myTabbedPane.addTab("Additional",myPanel);
  loginAnonymouslyChanged(!myLoginAnonymouslyJBCheckBox.isSelected());
}
