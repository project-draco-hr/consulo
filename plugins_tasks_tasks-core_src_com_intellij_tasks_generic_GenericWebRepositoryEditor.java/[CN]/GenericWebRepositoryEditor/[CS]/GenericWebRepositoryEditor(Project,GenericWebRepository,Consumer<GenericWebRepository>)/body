{
  super(project,repository,changeListener);
  myTest2Button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      afterTestConnection(TaskManager.getManager(project).testConnection(repository));
    }
  }
);
  myLoginAnonymouslyJBCheckBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      loginUrlEnablingChanged();
    }
  }
);
  myUseHTTPAuthentication.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      loginUrlEnablingChanged();
    }
  }
);
switch (myRepository.getResponseType()) {
case XML:
    myXmlRadioButton.setSelected(true);
  myHtmlRadioButton.setSelected(false);
break;
case HTML:
myXmlRadioButton.setSelected(false);
myHtmlRadioButton.setSelected(true);
break;
}
ActionListener listener=new ActionListener(){
@Override public void actionPerformed(final ActionEvent e){
responseTypeChanged();
}
}
;
myXmlRadioButton.addActionListener(listener);
myHtmlRadioButton.addActionListener(listener);
myLoginMethodType.setSelectedItem(myRepository.getLoginMethodType());
myTasksListMethodType.setSelectedItem(myRepository.getTasksListMethodType());
installListener(myLoginMethodType);
installListener(myTasksListMethodType);
installListener(myTasksListURLText.getDocument());
installListener(myLoginURLText.getDocument());
installListener(myTaskPatternText.getDocument());
String useCompletionText=". Use " + KeymapUtil.getFirstKeyboardShortcutText(ActionManager.getInstance().getAction(IdeActions.ACTION_CODE_COMPLETION)) + " for completion.";
myLoginTooltip.setText("<html>Available placeholders: " + SERVER_URL_PLACEHOLDER + ", "+ USERNAME_PLACEHOLDER+ ", "+ PASSWORD_PLACEHOLDER+ useCompletionText+ "</html>");
myTaskListTooltip.setText("<html>Available placeholders: " + SERVER_URL_PLACEHOLDER + ", "+ MAX_COUNT_PLACEHOLDER+ ", "+ QUERY_PLACEHOLDER+ " (use for faster tasks search)"+ useCompletionText+ "</html>");
myTaskPatternTooltip.setText("<html>Task pattern should be a regexp with two matching groups: ({id}.+?) and ({summary}.+?)" + useCompletionText + "</html>");
myTabbedPane.addTab("Additional",myPanel);
loginUrlEnablingChanged();
}
