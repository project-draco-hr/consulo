{
  UserManager userManager=UserManager.getUserManager();
  environmentManager=EnvironmentManager.getEnvironmentManager(userManager.getUserName());
  Environment currentEnvironment=environmentManager.getCurrentEnvironment();
  environmentName.setText(currentEnvironment.getName());
  firstLogFolder.setText(currentEnvironment.getFirstLogFolder());
  optionalLogFolder.setText(currentEnvironment.getOptionalLogFolder());
  pathToOutputFile.setText(currentEnvironment.getPathToOutputFile());
  createDropDownList(currentEnvironment.getName());
  save.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (Setup.this.environmentName == null || Setup.this.environmentName.getText().equals("")) {
        JOptionPane dialog=new JOptionPane();
        dialog.showMessageDialog(null,"Environment name can not be blank");
        return;
      }
      if (Setup.this.firstLogFolder == null || Setup.this.firstLogFolder.getText().equals("")) {
        JOptionPane dialog=new JOptionPane();
        dialog.showMessageDialog(null,"First log folder can not be blank");
        return;
      }
      Environment environment=new Environment(Setup.this.environmentName.getText(),Setup.this.firstLogFolder.getText(),Setup.this.optionalLogFolder.getText(),Setup.this.pathToOutputFile.getText());
      try {
        Setup.this.environmentManager.saveEnvironment(environment);
        Setup.this.createDropDownList(environment.getName());
      }
 catch (      IOException e1) {
        JOptionPane dialog=new JOptionPane();
        dialog.showMessageDialog(null,"Could not persist the environment info: " + e1.getMessage());
        e1.printStackTrace();
        return;
      }
    }
  }
);
}
