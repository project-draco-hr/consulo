{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  final MavenTask task=MavenEventsState.getMavenTask(e.getDataContext());
  if (project != null && task != null) {
    final MavenEventsHandler eventsHandler=project.getComponent(MavenEventsHandler.class);
    final MavenEventsState state=eventsHandler.getState();
    final DialogWrapper dialog=new ExecuteOnRunDialog(project,EventsBundle.message("maven.event.execute.before.run.debug")){
      protected boolean isAssigned(      ConfigurationType type,      String configurationName){
        return task.equals(state.getAssignedTask(type,configurationName));
      }
      protected void assign(      final ConfigurationType type,      final String configurationName){
        state.assignTask(type,configurationName,task);
      }
      protected void clearAll(){
        state.clearAssignments(task);
      }
    }
;
    dialog.show();
    if (dialog.isOK()) {
      eventsHandler.updateTaskShortcuts(task);
      update(e);
    }
  }
}
