{
  ProgressWindowWithNotification progressWindow=new ProgressWindowWithNotification(true,debuggerContext.getProject());
  SuspendContextCommandImpl askSetAction=new DebuggerContextCommandImpl(debuggerContext){
    public void threadAction(){
      final NodeDescriptorImpl descriptor=node.getDescriptor();
      String initialString="";
      if (descriptor instanceof ValueDescriptorImpl) {
        Value currentValue=((ValueDescriptorImpl)descriptor).getValue();
        if (currentValue instanceof StringReference) {
          initialString=DebuggerUtilsEx.getValueOrErrorAsString(debuggerContext.createEvaluationContext(),currentValue);
          initialString=initialString == null ? "" : "\"" + DebuggerUtilsEx.translateStringValue(initialString) + "\"";
        }
 else         if (currentValue instanceof PrimitiveValue) {
          ValueLabelRenderer renderer=((ValueDescriptorImpl)descriptor).getRenderer(debuggerContext.getDebugProcess());
          initialString=getDisplayableString((PrimitiveValue)currentValue,renderer instanceof NodeRenderer && "HexRenderer".equals(((NodeRenderer)renderer).getUniqueId()));
        }
        final String initialString1=initialString;
        DebuggerInvocationUtil.invokeLater(debuggerContext.getProject(),new Runnable(){
          public void run(){
            showEditor(TextWithImportsImpl.createExpressionText(initialString1),node,debuggerContext,setValueRunnable);
          }
        }
);
      }
    }
  }
;
  progressWindow.setTitle("Evaluating...");
  debuggerContext.getDebugProcess().getManagerThread().startProgress(askSetAction,progressWindow);
}
