{
  List<VirtualFile> workQueue=myWorkQueue;
  myWorkQueue=new ArrayList<VirtualFile>();
  boolean hasEventsToFire=myFinishRunnable != null || !myEvents.isEmpty();
  if (!workQueue.isEmpty()) {
    ((LocalFileSystemImpl)LocalFileSystem.getInstance()).markSuspiciousFilesDirty(workQueue);
    final FileWatcher watcher=FileWatcher.getInstance();
    for (    VirtualFile file : workQueue) {
      final NewVirtualFile nvf=(NewVirtualFile)file;
      if (!myIsRecursive && (!myIsAsync || !watcher.isWatched(nvf))) {
        nvf.markDirty();
      }
      RefreshWorker worker=new RefreshWorker(file,myIsRecursive);
      worker.scan();
      List<VFileEvent> events=worker.getEvents();
      myEvents.addAll(events);
      if (!events.isEmpty())       hasEventsToFire=true;
    }
  }
  iHaveEventsToFire=hasEventsToFire;
}
