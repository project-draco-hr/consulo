{
  DataContext dataContext=e.getDataContext();
  Project project=(Project)dataContext.getData(DataConstants.PROJECT);
  VirtualFile[] files=(VirtualFile[])dataContext.getData(DataConstants.VIRTUAL_FILE_ARRAY);
  Options options=OptionsManager.getInstance().getOptions();
  String executablePath=options.getExternalEditorOptions().getExecutablePath();
  if (StringUtil.isEmpty(executablePath)) {
    Messages.showInfoMessage(project,"Please, configure external editor executable path","External Editor not Configured");
    OptionsConfigurabe.show(project);
  }
 else {
    if (files != null) {
      ImageFileTypeManager typeManager=ImageFileTypeManager.getInstance();
      StringBuffer commandLine=new StringBuffer(executablePath.replace('/',File.separatorChar));
      for (      VirtualFile file : files) {
        if ((file.getFileSystem() instanceof LocalFileSystem) && typeManager.isImage(file)) {
          commandLine.append(" \"");
          commandLine.append(VfsUtil.virtualToIoFile(file).getAbsolutePath());
          commandLine.append('\"');
        }
      }
      try {
        File executableFile=new File(executablePath);
        Runtime.getRuntime().exec(commandLine.toString(),null,executableFile.getParentFile());
      }
 catch (      IOException ex) {
        Messages.showErrorDialog(project,ex.getLocalizedMessage(),"Error opening executableFile");
      }
    }
  }
}
