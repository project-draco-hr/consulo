{
  final InspectionProfileEntry tool=((InspectionProfile)InspectionProfileManager.getInstance().getRootProfile()).getInspectionTool(shortName);
  if (tool == null)   return;
  final URL descriptionUrl=InspectionToolRegistrar.getDescriptionUrl(tool);
  String description=InspectionsBundle.message("inspection.tool.description.under.construction.text");
  if (descriptionUrl != null) {
    try {
      description=ResourceUtil.loadText(descriptionUrl);
    }
 catch (    IOException e) {
    }
  }
  final JEditorPane pane=initPane(description);
  pane.select(0,0);
  pane.setPreferredSize(new Dimension(3 * tooltip.getPreferredSize().width / 2,200));
  final JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(pane);
  scrollPane.setBorder(null);
  scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
  final JBPopup popup=JBPopupFactory.getInstance().createComponentPopupBuilder(scrollPane,scrollPane).createPopup();
  pane.addMouseListener(new MouseAdapter(){
    public void mousePressed(    final MouseEvent e){
      final Component contentComponent=editor.getContentComponent();
      MouseEvent newMouseEvent=SwingUtilities.convertMouseEvent(e.getComponent(),e,contentComponent);
      popup.cancel();
      contentComponent.dispatchEvent(newMouseEvent);
    }
  }
);
  popup.showUnderneathOf(tooltip);
}
