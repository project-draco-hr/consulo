{
  MavenCustomRepositoryHelper helper=new MavenCustomRepositoryHelper(myDir,"local1");
  setRepositoryPath(helper.getTestDataPath("local1"));
  importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>junit</groupId>"+ "    <artifactId>junit</artifactId>"+ "    <version>4.0</version>"+ "  </dependency>"+ "</dependencies>");
  removeFromLocalRepository("junit");
  scheduleResolveAll();
  resolveDependenciesAndImport();
  File jarFile=new File(getRepositoryFile(),"junit/junit/4.0/junit-4.0.jar");
  assertTrue(jarFile.exists());
  myProjectsManager.listenForExternalChanges();
  updateSettingsXml("<proxies>" + " <proxy>" + "    <id>my</id>"+ "    <active>true</active>"+ "    <protocol>http</protocol>"+ "    <host>proxy-auth-test.labs.intellij.net</host>"+ "    <port>3128</port>"+ "    <username>user1</username>"+ "    <password>invalid</password>"+ "  </proxy>"+ "</proxies>");
  removeFromLocalRepository("junit");
  assertFalse(jarFile.exists());
  try {
    scheduleResolveAll();
    resolveDependenciesAndImport();
  }
  finally {
    System.clearProperty("http.proxyHost");
    System.clearProperty("http.proxyPort");
  }
  assertFalse(jarFile.exists());
  restoreSettingsFile();
  scheduleResolveAll();
  resolveDependenciesAndImport();
  assertTrue(jarFile.exists());
}
