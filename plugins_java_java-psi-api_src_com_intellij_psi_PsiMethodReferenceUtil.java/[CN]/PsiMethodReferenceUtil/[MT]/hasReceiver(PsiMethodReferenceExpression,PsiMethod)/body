{
  final PsiClassType.ClassResolveResult resolveResult=PsiUtil.resolveGenericsClassInType(methodRef.getFunctionalInterfaceType());
  final PsiMethod interfaceMethod=LambdaUtil.getFunctionalInterfaceMethod(resolveResult);
  final MethodSignature signature=interfaceMethod != null ? interfaceMethod.getSignature(LambdaUtil.getSubstitutor(interfaceMethod,resolveResult)) : null;
  LOG.assertTrue(signature != null);
  final PsiType[] parameterTypes=signature.getParameterTypes();
  final QualifierResolveResult qualifierResolveResult=getQualifierResolveResult(methodRef);
  return method.getParameterList().getParametersCount() + 1 == parameterTypes.length && hasReceiver(parameterTypes,qualifierResolveResult,methodRef);
}
