{
  final PsiFile jspFile=PsiUtilBase.getTemplateLanguageFile(file);
  if (jspFile != null) {
    file=jspFile;
  }
  final PsiElement element=findElementInTreeWithFormatterEnabled(file,offset);
  if (element == null && offset != file.getTextLength()) {
    return offset;
  }
  if (element instanceof PsiComment && insideElement(element,offset)) {
    return CharArrayUtil.shiftForward(file.getViewProvider().getContents(),offset," \t");
  }
  final FormattingModelBuilder builder=LanguageFormatting.INSTANCE.forContext(file);
  FormattingModelBuilder elementBuilder=builder;
  if (element != null) {
    elementBuilder=LanguageFormatting.INSTANCE.forContext(element);
  }
  if (builder != null && elementBuilder != null) {
    final CodeStyleSettings settings=getSettings();
    final CodeStyleSettings.IndentOptions indentOptions=settings.getIndentOptions(file.getFileType());
    final TextRange significantRange=getSignificantRange(file,offset);
    FormattingModel model=builder.createModel(file,settings);
    final Document doc=PsiDocumentManager.getInstance(myProject).getDocument(file);
    if (doc != null) {
      model=new DocumentBasedFormattingModel(model.getRootBlock(),doc,getProject(),settings,file.getFileType(),file);
    }
    return FormatterEx.getInstanceEx().adjustLineIndent(model,settings,indentOptions,offset,significantRange);
  }
 else {
    return offset;
  }
}
