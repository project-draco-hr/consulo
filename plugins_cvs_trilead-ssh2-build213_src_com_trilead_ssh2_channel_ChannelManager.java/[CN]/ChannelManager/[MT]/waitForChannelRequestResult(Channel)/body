{
synchronized (c) {
    while ((c.successCounter == 0) && (c.failedCounter == 0)) {
      if (c.state != Channel.STATE_OPEN) {
        String detail=c.getReasonClosed();
        if (detail == null)         detail="state: " + c.state;
        throw new IOException("This SSH2 channel is not open (" + detail + ")");
      }
      try {
        c.wait();
      }
 catch (      InterruptedException ignore) {
      }
    }
    if ((c.failedCounter == 0) && (c.successCounter == 1))     return true;
    if ((c.failedCounter == 1) && (c.successCounter == 0))     return false;
    throw new IOException("Illegal state. The server sent " + c.successCounter + " SSH_MSG_CHANNEL_SUCCESS and "+ c.failedCounter+ " SSH_MSG_CHANNEL_FAILURE messages.");
  }
}
