{
  Graphics2D g2d=(Graphics2D)g;
  final Dimension size=getSize();
  int _size=Math.min(size.width,size.height);
  _size=Math.min(_size,600);
  if (myImage != null && myShouldInvalidate) {
    if (myImage.getWidth(null) != _size) {
      myImage=null;
    }
  }
  myShouldInvalidate=false;
  if (myImage == null) {
    myImage=createImage(new ColorWheelImageProducer(_size - BORDER_SIZE * 2,_size - BORDER_SIZE * 2,myBrightness));
    myWheel=new Rectangle(BORDER_SIZE,BORDER_SIZE,_size - BORDER_SIZE * 2,_size - BORDER_SIZE * 2);
  }
  g.setColor(UIManager.getColor("Panel.background"));
  g.fillRect(0,0,getWidth(),getHeight());
  g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,myOpacity));
  g.drawImage(myImage,myWheel.x,myWheel.y,null);
  g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC,1.0f));
  int mx=myWheel.x + myWheel.width / 2;
  int my=myWheel.y + myWheel.height / 2;
  g.setColor(Color.white);
  int arcw=(int)(myWheel.width * mySaturation / 2);
  int arch=(int)(myWheel.height * mySaturation / 2);
  double th=myHue * 2 * Math.PI;
  final int x=(int)(mx + arcw * Math.cos(th));
  final int y=(int)(my - arch * Math.sin(th));
  g.fillRect(x - 2,y - 2,4,4);
  g.setColor(Color.BLACK);
  g.drawRect(x - 2,y - 2,4,4);
}
