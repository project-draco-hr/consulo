{
  if (PsiUtil.isConstantExpression(expression)) {
    final PsiManager manager=expression.getManager();
    final PsiConstantEvaluationHelper constantEvaluationHelper=manager.getConstantEvaluationHelper();
    final Object result=constantEvaluationHelper.computeConstantExpression(expression);
    if (result instanceof Integer) {
      final Integer integer=(Integer)result;
      return integer.intValue();
    }
 else {
      return 0;
    }
  }
 else   if (expression instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExp=(PsiBinaryExpression)expression;
    final PsiExpression rhs=binaryExp.getROperand();
    if (rhs == null) {
      return 0;
    }
    final PsiManager manager=rhs.getManager();
    final PsiConstantEvaluationHelper constantEvaluationHelper=manager.getConstantEvaluationHelper();
    final Object result=constantEvaluationHelper.computeConstantExpression(rhs);
    if (!(result instanceof Integer)) {
      return 0;
    }
    final Integer integer=(Integer)result;
    final PsiJavaToken sign=binaryExp.getOperationSign();
    final IElementType tokenType=sign.getTokenType();
    if (JavaTokenType.MINUS.equals(tokenType)) {
      return -integer.intValue();
    }
 else {
      return integer.intValue();
    }
  }
 else {
    return 0;
  }
}
