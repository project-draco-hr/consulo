{
  final PsiExpression strippedExpression=ParenthesesUtils.stripParentheses(expression);
  if (strippedExpression == null) {
    return false;
  }
  if (!(strippedExpression instanceof PsiAssignmentExpression)) {
    return false;
  }
  final PsiAssignmentExpression assignment=(PsiAssignmentExpression)strippedExpression;
  final PsiJavaToken sign=assignment.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  if (!tokenType.equals(JavaTokenType.EQ)) {
    return false;
  }
  final PsiExpression lhs=assignment.getLExpression();
  if (SideEffectChecker.mayHaveSideEffects(lhs)) {
    return false;
  }
  if (!ExpressionUtils.isOffsetArrayAccess(lhs,variable)) {
    return false;
  }
  final PsiExpression rhs=assignment.getRExpression();
  if (rhs == null) {
    return false;
  }
  if (SideEffectChecker.mayHaveSideEffects(rhs)) {
    return false;
  }
  if (!areExpressionsCopyable(lhs,rhs)) {
    return false;
  }
  final PsiType type=lhs.getType();
  if (type instanceof PsiPrimitiveType) {
    final PsiExpression strippedLhs=ParenthesesUtils.stripParentheses(lhs);
    final PsiExpression strippedRhs=ParenthesesUtils.stripParentheses(rhs);
    if (!areExpressionsCopyable(strippedLhs,strippedRhs)) {
      return false;
    }
  }
  if (variable2 == null) {
    return ExpressionUtils.isOffsetArrayAccess(rhs,variable);
  }
 else {
    return VariableAccessUtils.evaluatesToVariable(rhs,variable2);
  }
}
