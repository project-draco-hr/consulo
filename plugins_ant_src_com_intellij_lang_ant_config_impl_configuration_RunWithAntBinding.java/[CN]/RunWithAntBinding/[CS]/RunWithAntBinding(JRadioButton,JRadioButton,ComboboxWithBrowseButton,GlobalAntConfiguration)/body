{
  myAntConfiguration=antConfiguration;
  myComponents.add(useDefaultAnt);
  myUseCustomAnt=useCustomAnt;
  myComponents.add(myUseCustomAnt);
  myAnts=ants;
  myUseDefaultAnt=useDefaultAnt;
  ButtonGroup group=new ButtonGroup();
  group.add(useDefaultAnt);
  group.add(myUseCustomAnt);
  myUseCustomAnt.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      updateEnableCombobox();
      if (myUseCustomAnt.isSelected() && !myLoadingValues)       myAnts.getComboBox().requestFocusInWindow();
    }
  }
);
  myAntsController=new ChooseAndEditComboBoxController<AntReference,AntReference>(myAnts,new ConvertingIterator.IdConvertor<AntReference>(),AntReference.COMPARATOR){
    public Iterator<AntReference> getAllListItems(){
      return antConfiguration.getConfiguredAnts().keySet().iterator();
    }
    public AntReference openConfigureDialog(    AntReference reference,    JComponent parent){
      AntSetPanel antSetPanel=new AntSetPanel();
      AntInstallation installation=myAntConfiguration.getConfiguredAnts().get(reference);
      if (installation == null)       installation=myAntConfiguration.getConfiguredAnts().get(AntReference.BUNDLED_ANT);
      antSetPanel.reset();
      antSetPanel.setSelection(installation);
      AntInstallation antInstallation=antSetPanel.showDialog(parent);
      return antInstallation != null ? antInstallation.getReference() : null;
    }
  }
;
  myAntsController.setRenderer(new AntUIUtil.AntReferenceRenderer(myAntConfiguration));
}
