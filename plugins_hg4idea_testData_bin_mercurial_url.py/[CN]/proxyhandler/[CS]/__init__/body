def __init__(self, ui):
    proxyurl = (ui.config('http_proxy', 'host') or os.getenv('http_proxy'))
    if proxyurl:
        if (not (proxyurl.startswith('http:') or proxyurl.startswith('https:'))):
            proxyurl = (('http://' + proxyurl) + '/')
        snpqf = urlparse.urlsplit(proxyurl)
        (proxyscheme, proxynetloc, proxypath, proxyquery, proxyfrag) = snpqf
        hpup = netlocsplit(proxynetloc)
        (proxyhost, proxyport, proxyuser, proxypasswd) = hpup
        if (not proxyuser):
            proxyuser = ui.config('http_proxy', 'user')
            proxypasswd = ui.config('http_proxy', 'passwd')
        no_list = ['localhost', '127.0.0.1']
        no_list.extend([p.lower() for p in ui.configlist('http_proxy', 'no')])
        no_list.extend([p.strip().lower() for p in os.getenv('no_proxy', '').split(',') if p.strip()])
        if ui.configbool('http_proxy', 'always'):
            self.no_list = []
        else:
            self.no_list = no_list
        proxyurl = urlparse.urlunsplit((proxyscheme, netlocunsplit(proxyhost, proxyport, proxyuser, (proxypasswd or '')), proxypath, proxyquery, proxyfrag))
        proxies = {'http': proxyurl, 'https': proxyurl, }
        ui.debug(('proxying through http://%s:%s\n' % (proxyhost, proxyport)))
    else:
        proxies = {}
    for env in ['HTTP_PROXY', 'http_proxy', 'no_proxy']:
        try:
            if (env in os.environ):
                del os.environ[env]
        except OSError:
            pass
    urllib2.ProxyHandler.__init__(self, proxies)
    self.ui = ui
