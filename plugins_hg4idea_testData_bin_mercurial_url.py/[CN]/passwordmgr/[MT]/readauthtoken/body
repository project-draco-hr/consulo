def readauthtoken(self, uri):
    config = dict()
    for (key, val) in self.ui.configitems('auth'):
        if ('.' not in key):
            self.ui.warn((_("ignoring invalid [auth] key '%s'\n") % key))
            continue
        (group, setting) = key.split('.', 1)
        gdict = config.setdefault(group, dict())
        if (setting in ('cert', 'key')):
            val = util.expandpath(val)
        gdict[setting] = val
    (scheme, hostpath) = uri.split('://', 1)
    bestlen = 0
    bestauth = None
    for auth in config.itervalues():
        prefix = auth.get('prefix')
        if (not prefix):
            continue
        p = prefix.split('://', 1)
        if (len(p) > 1):
            (schemes, prefix) = ([p[0]], p[1])
        else:
            schemes = (auth.get('schemes') or 'https').split()
        if (((prefix == '*') or hostpath.startswith(prefix)) and (len(prefix) > bestlen) and (scheme in schemes)):
            bestlen = len(prefix)
            bestauth = auth
    return bestauth
