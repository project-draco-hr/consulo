def quotepath(path):
    "quote the path part of a URL\n\n    This is similar to urllib.quote, but it also tries to avoid\n    quoting things twice (inspired by wget):\n\n    >>> quotepath('abc def')\n    'abc%20def'\n    >>> quotepath('abc%20def')\n    'abc%20def'\n    >>> quotepath('abc%20 def')\n    'abc%20%20def'\n    >>> quotepath('abc def%20')\n    'abc%20def%20'\n    >>> quotepath('abc def%2')\n    'abc%20def%252'\n    >>> quotepath('abc def%')\n    'abc%20def%25'\n    "
    global _safeset, _hex
    if (_safeset is None):
        _safeset = set(_safe)
        _hex = set('abcdefABCDEF0123456789')
    l = list(path)
    for i in xrange(len(l)):
        c = l[i]
        if ((c == '%') and ((i + 2) < len(l)) and (l[(i + 1)] in _hex) and (l[(i + 2)] in _hex)):
            pass
        elif (c not in _safeset):
            l[i] = ('%%%02X' % ord(c))
    return ''.join(l)
