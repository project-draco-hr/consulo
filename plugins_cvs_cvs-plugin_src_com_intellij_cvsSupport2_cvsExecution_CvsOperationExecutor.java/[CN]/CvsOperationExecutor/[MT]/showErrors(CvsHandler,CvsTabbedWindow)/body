{
  final List<VcsException> errors=handler.getErrorsExceptAborted();
  if (!myShowErrors || myIsQuietOperation)   return;
  if (tabbedWindow == null) {
    if (errors.isEmpty())     return;
    final List<String> messages=new ArrayList<String>();
    for (    VcsException error : errors) {
      if (!StringUtil.isEmptyOrSpaces(error.getMessage())) {
        messages.add(error.getMessage());
      }
    }
    final String errorMessage=StringUtil.join(messages,"\n");
    Messages.showErrorDialog(errorMessage,"CVS Error");
    return;
  }
  if (errors.isEmpty()) {
    tabbedWindow.hideErrors();
  }
 else {
    ErrorTreeView errorTreeView=tabbedWindow.getErrorsTreeView();
    for (    final VcsException exception : errors) {
      final String groupName=DateFormatUtil.formatDateTime(System.currentTimeMillis()) + ' ' + handler.getTitle();
      if (exception.isWarning()) {
        errorTreeView.addMessage(MessageCategory.WARNING,exception.getMessages(),groupName,DummyNavigatable.INSTANCE,null,null,exception);
      }
 else {
        errorTreeView.addMessage(MessageCategory.ERROR,exception.getMessages(),groupName,DummyNavigatable.INSTANCE,null,null,exception);
      }
    }
    tabbedWindow.ensureVisible(myProject);
  }
}
