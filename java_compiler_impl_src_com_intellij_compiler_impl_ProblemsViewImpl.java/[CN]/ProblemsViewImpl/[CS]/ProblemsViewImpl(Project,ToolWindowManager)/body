{
  super(project);
  myPanel=new ProblemsViewPanel(project);
  Disposer.register(project,new Disposable(){
    @Override public void dispose(){
      Disposer.dispose(myPanel);
    }
  }
);
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      if (project.isDisposed()) {
        return;
      }
      final ToolWindow tw=wm.registerToolWindow(PROBLEMS_TOOLWINDOW_ID,false,ToolWindowAnchor.BOTTOM,project);
      tw.setIcon(AllIcons.Toolwindows.Problems);
      final Content content=ContentFactory.SERVICE.getInstance().createContent(myPanel,"",false);
      tw.getContentManager().addContent(content);
      Disposer.register(project,new Disposable(){
        @Override public void dispose(){
          tw.getContentManager().removeAllContents(true);
        }
      }
);
    }
  }
);
}
