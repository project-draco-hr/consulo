{
  final ArrayList<PrioritizedQueryExecutor<LookupElement,CompletionParameters>> list=new ArrayList<PrioritizedQueryExecutor<LookupElement,CompletionParameters>>();
  for (  final CompletionPlaceImpl<LookupElement,CompletionParameters> place : providers.getValues()) {
    final ProcessingContext processingContext=new ProcessingContext();
    if (place.myPlace.accepts(parameters.getPosition(),processingContext)) {
      final CompletionContext context=parameters.getPosition().getUserData(CompletionContext.COMPLETION_CONTEXT_KEY);
      final PrefixMatcher matcher=new CamelHumpMatcher(CompletionData.findPrefixStatic(parameters.getPosition(),context.startOffset));
      list.add(new PrioritizedQueryExecutor<LookupElement,CompletionParameters>(){
        public void execute(        final CompletionParameters queryParameters,        final QueryResultSet<LookupElement> resultSet){
          place.myProvider.addCompletions(queryParameters,processingContext,new CompletionResultSetImpl(matcher,resultSet,context));
        }
        public String toString(){
          return place.myId != null ? place.myId : place.myProvider.toString();
        }
      }
);
    }
  }
  return new PrioritizedQueryFactory<LookupElement,CompletionParameters>(list);
}
