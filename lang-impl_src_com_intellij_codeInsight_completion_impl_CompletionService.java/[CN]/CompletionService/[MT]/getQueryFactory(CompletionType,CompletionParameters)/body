{
  final CompletionContext context=queryParameters.getPosition().getUserData(CompletionContext.COMPLETION_CONTEXT_KEY);
  final PrefixMatcher matcher=new CamelHumpMatcher(CompletionData.findPrefixStatic(queryParameters.getPosition(),context.getStartOffset()));
  final ArrayList<PrioritizedQueryExecutor<LookupElement,CompletionParameters>> list=new ArrayList<PrioritizedQueryExecutor<LookupElement,CompletionParameters>>();
  executeForMatchingProviders(type,queryParameters,new PairProcessor<ProcessingContext,CompletionPlaceImpl<LookupElement,CompletionParameters>>(){
    public boolean process(    final ProcessingContext processingContext,    final CompletionPlaceImpl<LookupElement,CompletionParameters> place){
      list.add(new PrioritizedQueryExecutor<LookupElement,CompletionParameters>(){
        public void execute(        final CompletionParameters parameters,        final QueryResultSet<LookupElement> resultSet){
          place.myProvider.addCompletions(parameters,processingContext,new CompletionResultSetImpl(matcher,resultSet,context));
        }
        public String toString(){
          return place.myId != null ? place.myId : place.myProvider.toString();
        }
      }
);
      return true;
    }
  }
);
  return new PrioritizedQueryFactory<LookupElement,CompletionParameters>(list);
}
