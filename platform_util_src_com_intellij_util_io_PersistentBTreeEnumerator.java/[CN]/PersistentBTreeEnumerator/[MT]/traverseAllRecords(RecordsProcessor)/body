{
  try {
    lockStorage();
    return btree.processMappings(new IntToIntBtree.KeyValueProcessor(){
      public boolean process(      int key,      int value) throws IOException {
        p.setCurrentKey(key);
        if (value > 0) {
          if (!p.process(value))           return false;
        }
 else {
          int rec=-value;
          while (rec != 0) {
            int id=myStorage.getInt(rec);
            if (!p.process(id))             return false;
            rec=myStorage.getInt(rec + COLLISION_OFFSET);
          }
        }
        return true;
      }
    }
);
  }
 catch (  IllegalStateException e) {
    CorruptedException corruptedException=new CorruptedException(myFile);
    corruptedException.initCause(e);
    throw corruptedException;
  }
 finally {
    unlockStorage();
  }
}
