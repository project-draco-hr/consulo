{
  if (containsAnotherChanges() || containsNonUndoableActions()) {
    reportCannotUndo();
    return;
  }
  if (myUndoableGroup.askConfirmation()) {
    if (canceledByUser()) {
      return;
    }
  }
 else {
    if (restore(getBeforeState())) {
      setBeforeState(new EditorAndState(myEditor,myEditor.getState(FileEditorStateLevel.UNDO)));
      return;
    }
  }
  Collection<VirtualFile> readOnlyFiles=collectReadOnlyAffectedFiles();
  if (!readOnlyFiles.isEmpty()) {
    VirtualFileManager.getInstance().fireReadOnlyModificationAttempt(readOnlyFiles.toArray(new VirtualFile[readOnlyFiles.size()]));
    return;
  }
  Collection<Document> readOnlyDocuments=collectReadOnlyDocuments();
  if (!readOnlyDocuments.isEmpty()) {
    for (Iterator<Document> iterator=readOnlyDocuments.iterator(); iterator.hasNext(); ) {
      Document document=iterator.next();
      document.fireReadOnlyModificationAttempt();
    }
    return;
  }
  removeLastFromMyStacks();
  addLastToReverseStacks();
  performAction();
  restore(getAfterState());
}
