def parse(self, path):
    errs = 0

    def check(name, mapping, listname):
        if (name in mapping):
            self.ui.warn((_('%s:%d: %r already in %s list\n') % (lex.infile, lex.lineno, name, listname)))
            return 1
        return 0
    lex = shlex.shlex(open(path), path, True)
    lex.wordchars += '!@#$%^&*()-=+[]{}|;:,./<>?'
    cmd = lex.get_token()
    while cmd:
        if (cmd == 'include'):
            name = lex.get_token()
            errs += check(name, self.exclude, 'exclude')
            self.include[name] = name
        elif (cmd == 'exclude'):
            name = lex.get_token()
            errs += check(name, self.include, 'include')
            errs += check(name, self.rename, 'rename')
            self.exclude[name] = name
        elif (cmd == 'rename'):
            src = lex.get_token()
            dest = lex.get_token()
            errs += check(src, self.exclude, 'exclude')
            self.rename[src] = dest
        elif (cmd == 'source'):
            errs += self.parse(lex.get_token())
        else:
            self.ui.warn((_('%s:%d: unknown directive %r\n') % (lex.infile, lex.lineno, cmd)))
            errs += 1
        cmd = lex.get_token()
    return errs
