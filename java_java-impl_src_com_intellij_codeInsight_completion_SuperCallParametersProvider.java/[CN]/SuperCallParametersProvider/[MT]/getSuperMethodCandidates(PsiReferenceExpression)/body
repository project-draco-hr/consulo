{
  List<PsiMethod> candidates=new ArrayList<PsiMethod>();
  for (  final JavaResolveResult candidate : expression.multiResolve(true)) {
    final PsiElement element=candidate.getElement();
    if (element instanceof PsiMethod) {
      final PsiClass psiClass=((PsiMethod)element).getContainingClass();
      if (psiClass != null) {
        for (        PsiMethod overload : psiClass.findMethodsByName(((PsiMethod)element).getName(),true)) {
          if (!overload.hasModifierProperty(PsiModifier.ABSTRACT) && !overload.hasModifierProperty(PsiModifier.STATIC)) {
            candidates.add(overload);
          }
        }
        break;
      }
    }
  }
  return candidates;
}
