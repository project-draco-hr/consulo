{
  if (descriptions.length == 1) {
    final ConfigurationErrorDescription description=descriptions[0];
    return description.getElementKind() + " " + description.getElementName();
  }
  TObjectIntHashMap<String> kind2count=new TObjectIntHashMap<String>();
  for (  ConfigurationErrorDescription description : descriptions) {
    final String kind=description.getElementKind();
    if (!kind2count.contains(kind)) {
      kind2count.put(kind,1);
    }
 else {
      kind2count.increment(kind);
    }
  }
  final StringBuilder message=new StringBuilder();
  kind2count.forEachEntry(new TObjectIntProcedure<String>(){
    public boolean execute(    String a,    int b){
      if (message.length() > 0) {
        message.append(' ').append(ProjectBundle.message("text.and")).append(' ');
      }
      message.append(b).append(' ').append(b > 1 ? StringUtil.pluralize(a) : a);
      return true;
    }
  }
);
  return message.toString();
}
