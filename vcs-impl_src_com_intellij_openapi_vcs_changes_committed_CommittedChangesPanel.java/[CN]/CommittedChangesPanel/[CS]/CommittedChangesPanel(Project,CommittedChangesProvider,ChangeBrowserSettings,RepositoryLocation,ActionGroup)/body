{
  super(new BorderLayout());
  mySettings=settings;
  myProject=project;
  myProvider=provider;
  myLocation=location;
  myShouldBeCalledOnDispose=new ArrayList<Runnable>();
  myBrowser=new CommittedChangesTreeBrowser(project,new ArrayList<CommittedChangeList>());
  add(myBrowser,BorderLayout.CENTER);
  myErrorLabel.setForeground(Color.red);
  add(myErrorLabel,BorderLayout.SOUTH);
  final VcsCommittedViewAuxiliary auxiliary=provider.createActions(myBrowser,location);
  JPanel toolbarPanel=new JPanel(new BorderLayout());
  ActionGroup group=(ActionGroup)ActionManager.getInstance().getAction("CommittedChangesToolbar");
  ActionToolbar toolBar=myBrowser.createGroupFilterToolbar(project,group,extraActions,auxiliary != null ? auxiliary.getToolbarActions() : Collections.<AnAction>emptyList());
  toolbarPanel.add(toolBar.getComponent(),BorderLayout.WEST);
  toolbarPanel.add(myFilterComponent,BorderLayout.EAST);
  myBrowser.addToolBar(toolbarPanel);
  if (auxiliary != null) {
    myShouldBeCalledOnDispose.add(auxiliary.getCalledOnViewDispose());
    myBrowser.setTableContextMenu(group,(auxiliary.getPopupActions() == null) ? Collections.<AnAction>emptyList() : auxiliary.getPopupActions());
  }
 else {
    myBrowser.setTableContextMenu(group,Collections.<AnAction>emptyList());
  }
  final AnAction anAction=ActionManager.getInstance().getAction("CommittedChanges.Refresh");
  anAction.registerCustomShortcutSet(CommonShortcuts.getRerun(),this);
}
