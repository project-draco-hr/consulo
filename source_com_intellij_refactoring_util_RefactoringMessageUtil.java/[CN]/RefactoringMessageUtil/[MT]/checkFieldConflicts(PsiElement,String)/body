{
  PsiField existingField=null;
  String name=newName;
  if (scope instanceof PsiClass) {
    existingField=((PsiClass)scope).findFieldByName(name,true);
  }
 else {
    LOG.assertTrue(false);
  }
  if (existingField != null) {
    if (scope instanceof PsiClass) {
      PsiClass aClass=(PsiClass)scope;
      if (existingField.getContainingClass().equals(aClass)) {
        String className=!(aClass instanceof PsiAnonymousClass) ? "class " + aClass.getName() : "current class";
        int ret=Messages.showYesNoDialog("Field " + existingField.getName() + " is already defined in the "+ className+ ".\nContinue anyway?","Warning",Messages.getWarningIcon());
        if (ret != 0) {
          return false;
        }
      }
 else {
        if (!existingField.hasModifierProperty(PsiModifier.PRIVATE)) {
          String fieldInfo=PsiFormatUtil.formatVariable(existingField,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.TYPE_AFTER,PsiSubstitutor.EMPTY);
          String protoFieldInfo=newName;
          String className=existingField.getContainingClass().getName();
          int ret=Messages.showYesNoDialog("Field " + protoFieldInfo + " will hide\n field "+ fieldInfo+ " of the base class "+ className+ ".\n"+ "Continue anyway?","Warning",Messages.getWarningIcon());
          if (ret != 0) {
            return false;
          }
        }
      }
    }
 else {
      PsiFile psiFile=existingField.getContainingFile();
      int ret=Messages.showYesNoDialog("Field " + existingField.getName() + " is already defined in the file\n"+ psiFile.getVirtualFile().getPresentableUrl()+ ".\nContinue anyway?","Warning",Messages.getWarningIcon());
      if (ret != 0) {
        return false;
      }
    }
  }
  return true;
}
