{
  if (myFile == null) {
    return;
  }
  final AndroidFacet facet=AndroidFacet.getInstance(myFile);
  if (facet == null) {
    return;
  }
  final List<Object> themes=new ArrayList<Object>();
  final HashSet<ThemeData> addedThemes=new HashSet<ThemeData>();
  final ArrayList<ThemeData> projectThemes=new ArrayList<ThemeData>();
  collectThemesFromManifest(facet,projectThemes,addedThemes,true);
  collectProjectThemes(facet,projectThemes,addedThemes);
  if (projectThemes.size() > 0) {
    themes.add("Project themes");
    themes.addAll(projectThemes);
  }
  final Module module=facet.getModule();
  AndroidTargetData targetData=null;
  final AndroidPlatform androidPlatform=AndroidPlatform.getInstance(module);
  if (androidPlatform != null) {
    IAndroidTarget target=getSelectedTarget();
    if (target == null) {
      target=androidPlatform.getTarget();
    }
    targetData=androidPlatform.getSdk().getTargetData(target);
  }
  if (targetData == null || targetData.areThemesCached()) {
    collectFrameworkThemes(themes,facet,targetData,addedThemes);
    doApplyThemes(themes,addedThemes);
  }
 else {
    final AndroidTargetData finalTargetData=targetData;
    ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
      @Override public void run(){
        ProgressManager.getInstance().runProcess(new Runnable(){
          @Override public void run(){
            collectFrameworkThemes(themes,facet,finalTargetData,addedThemes);
          }
        }
,new AndroidPreviewProgressIndicator(AndroidLayoutPreviewToolWindowForm.this,0));
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            doApplyThemes(themes,addedThemes);
            myToolWindowManager.render();
          }
        }
);
      }
    }
);
  }
}
