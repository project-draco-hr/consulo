{
  final AndroidSdkData sdkData=platform != null ? platform.getSdkData() : null;
  final Device selectedDevice=getSelectedDevice();
  final String selectedDeviceName=selectedDevice != null ? selectedDevice.getName() : null;
  final List<Device> devices;
  if (sdkData != null) {
    devices=new ArrayList<Device>();
    devices.addAll(myLayoutDeviceManager.getDefaultDevices());
    devices.addAll(myLayoutDeviceManager.getVendorDevices(sdkData.getLocation()));
    devices.addAll(myUserDeviceManager.parseUserDevices(new MessageBuildingSdkLog()));
  }
 else {
    devices=Collections.emptyList();
  }
  Device newSelectedDevice=devices.size() > 0 ? devices.get(0) : null;
  if (selectedDeviceName != null) {
    for (    Device device : devices) {
      if (selectedDeviceName.equals(device.getName())) {
        newSelectedDevice=device;
      }
    }
  }
  if (newSelectedDevice == null && devices.size() > 0) {
    newSelectedDevice=devices.get(0);
  }
  myDevices=devices;
  final List<Object> devicesCopy=new ArrayList<Object>(devices);
  myDevicesCombo.setModel(new CollectionComboBoxModel(devicesCopy,newSelectedDevice));
  if (newSelectedDevice != null) {
    updateDeviceConfigurations(newSelectedDevice);
  }
  final IAndroidTarget oldSelectedTarget=(IAndroidTarget)myTargetCombo.getSelectedItem();
  final String selectedTargetHashString=oldSelectedTarget != null ? oldSelectedTarget.hashString() : null;
  IAndroidTarget newSelectedTarget=null;
  final List<IAndroidTarget> targets;
  if (sdkData != null) {
    targets=new ArrayList<IAndroidTarget>();
    for (    IAndroidTarget target : sdkData.getTargets()) {
      if (target.isPlatform()) {
        if (target.hashString().equals(selectedTargetHashString)) {
          newSelectedTarget=target;
        }
        targets.add(target);
      }
    }
  }
 else {
    targets=Collections.emptyList();
  }
  if (newSelectedTarget == null) {
    IAndroidTarget targetFromModule=platform != null ? platform.getTarget() : null;
    if (targetFromModule != null) {
      String modulePlatformHash=null;
      if (targetFromModule.isPlatform()) {
        modulePlatformHash=targetFromModule.hashString();
      }
 else {
        final IAndroidTarget parent=targetFromModule.getParent();
        if (parent != null) {
          modulePlatformHash=parent.hashString();
        }
      }
      if (modulePlatformHash != null) {
        targetFromModule=sdkData.findTargetByHashString(modulePlatformHash);
        if (targetFromModule != null && targets.indexOf(targetFromModule) >= 0) {
          newSelectedTarget=targetFromModule;
        }
      }
    }
  }
  if (newSelectedTarget == null && targets.size() > 0) {
    newSelectedTarget=targets.get(0);
  }
  myTargets=targets;
  myTargetCombo.setModel(new CollectionComboBoxModel(targets,newSelectedTarget));
}
