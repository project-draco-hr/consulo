{
  return new DataExternalizer<Collection<IdIndexEntry>>(){
    @Override public void save(    @NotNull DataOutput out,    @NotNull Collection<IdIndexEntry> value) throws IOException {
      int size=value.size();
      final int[] values=spareBufferLocal.getBuffer(size);
      int ptr=0;
      for (      IdIndexEntry ie : value) {
        values[ptr++]=ie.getWordHashCode();
      }
      Arrays.sort(values,0,size);
      DataInputOutputUtil.writeINT(out,size);
      int prev=0;
      for (int i=0; i < size; ++i) {
        DataInputOutputUtil.writeLONG(out,(long)values[i] - prev);
        prev=values[i];
      }
    }
    @Override public Collection<IdIndexEntry> read(    @NotNull DataInput in) throws IOException {
      int length=DataInputOutputUtil.readINT(in);
      ArrayList<IdIndexEntry> entries=new ArrayList<IdIndexEntry>(length);
      int prev=0;
      while (length-- > 0) {
        final int l=(int)(DataInputOutputUtil.readLONG(in) + prev);
        entries.add(new IdIndexEntry(l));
        prev=l;
      }
      return entries;
    }
  }
;
}
