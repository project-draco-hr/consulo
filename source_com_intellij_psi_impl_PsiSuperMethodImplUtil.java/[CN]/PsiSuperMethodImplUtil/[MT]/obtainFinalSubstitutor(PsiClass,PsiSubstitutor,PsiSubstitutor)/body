{
  Iterator<PsiTypeParameter> superTypeParams=PsiUtil.typeParametersIterator(superClass);
  if (!superTypeParams.hasNext())   return PsiSubstitutor.EMPTY;
  PsiElementFactory elementFactory=JavaPsiFacade.getInstance(superClass.getProject()).getElementFactory();
  final Map<PsiTypeParameter,PsiType> map=new HashMap<PsiTypeParameter,PsiType>();
  while (superTypeParams.hasNext()) {
    PsiTypeParameter typeParameter=superTypeParams.next();
    PsiType type=superSubstitutor.substitute(typeParameter);
    final PsiType t=derivedSubstitutor.substitute(type);
    map.put(typeParameter,t);
  }
  return elementFactory.createSubstitutor(map);
}
