{
  final Iterator<PsiTypeParameter> it=PsiUtil.typeParametersIterator(candidateClass);
  if (!it.hasNext())   return PsiSubstitutor.EMPTY;
  final Map<PsiTypeParameter,PsiType> map=candidateSubstitutor.getSubstitutionMap();
  final Map<PsiTypeParameter,PsiType> m1=new HashMap<PsiTypeParameter,PsiType>();
  while (it.hasNext()) {
    final PsiTypeParameter typeParameter=it.next();
    if (map.containsKey(typeParameter)) {
      final PsiType t=substitutor.substitute(candidateSubstitutor.substitute(typeParameter));
      m1.put(typeParameter,t);
    }
  }
  PsiElementFactory elementFactory=candidateClass.getManager().getElementFactory();
  return elementFactory.createSubstitutor(m1);
}
