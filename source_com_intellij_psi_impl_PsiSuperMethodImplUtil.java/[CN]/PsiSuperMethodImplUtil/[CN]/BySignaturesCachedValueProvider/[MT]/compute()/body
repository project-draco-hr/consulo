{
  final Map<MethodSignature,Stack<HierarchicalMethodSignatureImpl>> map1=new THashMap<MethodSignature,Stack<HierarchicalMethodSignatureImpl>>(MethodSignatureUtil.METHOD_PARAMETERS_ERASURE_EQUALITY);
  final Map<MethodSignature,Stack<HierarchicalMethodSignatureImpl>> map2=new THashMap<MethodSignature,Stack<HierarchicalMethodSignatureImpl>>(MethodSignatureUtil.METHOD_PARAMETERS_ERASURE_EQUALITY);
  Map<MethodSignature,HierarchicalMethodSignatureImpl> result=new LinkedHashMap<MethodSignature,HierarchicalMethodSignatureImpl>();
  buildMethodHierarchy(myClass,PsiSubstitutor.EMPTY,new HashSet<PsiClass>(),map1,map2,result,true);
  return new Result<Map<MethodSignature,HierarchicalMethodSignatureImpl>>(result,PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);
}
