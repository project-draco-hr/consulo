{
  myEvaluator.evaluate(myExpression,new XEvaluationCallbackBase(){
    public void evaluated(    @NotNull final XValue result){
      result.computePresentation(new XValueNode(){
        @Override public void setPresentation(        @Nullable Icon icon,        @NonNls @Nullable String type,        @NonNls @NotNull String value,        boolean hasChildren){
          setPresentation(icon,type,XDebuggerUIConstants.EQ_TEXT,value,hasChildren);
        }
        @Override public void setPresentation(        @Nullable Icon icon,        @NonNls @Nullable String type,        @NonNls @NotNull String separator,        @NonNls @NotNull String value,        boolean hasChildren){
          setPresentation(icon,type,separator,value,null,hasChildren);
        }
        @Override public void setPresentation(        @Nullable Icon icon,        @NonNls @Nullable String type,        @NonNls @NotNull String value,        @Nullable NotNullFunction<String,String> valuePresenter,        boolean hasChildren){
          setPresentation(icon,type,XDebuggerUIConstants.EQ_TEXT,value,valuePresenter,hasChildren);
        }
        @Override public void setPresentation(        @Nullable Icon icon,        @NonNls @Nullable final String type,        @NonNls @NotNull final String separator,        @NonNls @NotNull final String value,        @Nullable final NotNullFunction<String,String> valuePresenter,        final boolean hasChildren){
          DebuggerUIUtil.invokeOnEventDispatch(new Runnable(){
            public void run(){
              doShowHint(result,separator,value,type,valuePresenter != null ? valuePresenter : XValueNodeImpl.DEFAULT_VALUE_PRESENTER,hasChildren);
            }
          }
);
        }
        public void setPresentation(        @NonNls final String name,        @Nullable final Icon icon,        @NonNls @Nullable final String type,        @NonNls @NotNull final String value,        final boolean hasChildren){
          setPresentation(icon,type,value,hasChildren);
        }
        public void setPresentation(        @NonNls final String name,        @Nullable final Icon icon,        @NonNls @Nullable final String type,        @NonNls @NotNull final String separator,        @NonNls @NotNull final String value,        final boolean hasChildren){
          setPresentation(icon,type,separator,value,hasChildren);
        }
        public void setFullValueEvaluator(        @NotNull XFullValueEvaluator fullValueEvaluator){
        }
        public boolean isObsolete(){
          return false;
        }
      }
,XValuePlace.TOOLTIP);
    }
    public void errorOccurred(    @NotNull final String errorMessage){
      LOG.debug("Cannot evaluate '" + myExpression + "':"+ errorMessage);
    }
  }
,myExpressionPosition);
}
