{
  if (myDisposed) {
    return;
  }
  myDisposed=true;
  Disposer.dispose(this,false);
  ApplicationManager.getApplication().assertIsDispatchThread();
  if (myPopup != null) {
    cancel(myDisposeEvent);
  }
  if (myContent != null) {
    myContent.removeAll();
    myContent.removeKeyListener(mySearchKeyListener);
  }
  myContent=null;
  myPreferredFocusedComponent=null;
  myComponent=null;
  myFocusTrackback=null;
  myCallBack=null;
  myListeners=null;
  if (myMouseOutCanceller != null) {
    final Toolkit toolkit=Toolkit.getDefaultToolkit();
    if (toolkit != null) {
      toolkit.removeAWTEventListener(myMouseOutCanceller);
    }
  }
  myMouseOutCanceller=null;
  resetWindow();
  if (myFinalRunnable != null) {
    final ActionCallback typeAheadDone=new ActionCallback();
    Runnable runFinal=new Runnable(){
      @Override public void run(){
        SwingUtilities.invokeLater(typeAheadDone.createSetDoneRunnable());
        myFinalRunnable.run();
        myFinalRunnable=null;
      }
    }
;
    IdeFocusManager.getInstance(myProject).typeAheadUntil(typeAheadDone);
    getFocusManager().doWhenFocusSettlesDown(runFinal);
  }
}
