{
  if (isDisposed())   return;
  if (myPopup != null) {
    if (!canClose()) {
      return;
    }
    storeDimensionSize(myContent.getSize());
    if (myUseDimServiceForXYLocation) {
      final JRootPane root=myComponent.getRootPane();
      if (root != null) {
        final Container popupWindow=root.getParent();
        if (popupWindow != null && popupWindow.isShowing()) {
          storeLocation(popupWindow.getLocationOnScreen());
        }
      }
    }
    if (e instanceof MouseEvent) {
      IdeEventQueue.getInstance().blockNextEvents(((MouseEvent)e));
    }
    myPopup.hide(false);
    if (ApplicationManagerEx.getApplicationEx() != null) {
      StackingPopupDispatcher.getInstance().onPopupHidden(this);
    }
    if (myInStack) {
      myFocusTrackback.setForcedRestore(!myOk);
      myFocusTrackback.restoreFocus();
    }
    disposePopup();
    if (myListeners != null) {
      for (      JBPopupListener each : myListeners) {
        each.onClosed(new LightweightWindowEvent(this,myOk));
      }
    }
  }
  Disposer.dispose(this,false);
}
