{
  if (PluginManager.isPluginClass(componentClassName)) {
    LOG.error(ex);
    PluginId pluginId=PluginManager.getPluginByClassName(componentClassName);
    @NonNls final String errorMessage="Plugin " + pluginId.getIdString() + " failed to initialize and will be disabled:\n"+ ex.getMessage()+ "\nPlease restart "+ ApplicationNamesInfo.getInstance().getFullProductName()+ ".";
    PluginManager.disablePlugin(pluginId.getIdString());
    if (!myHeadlessMode) {
      JOptionPane.showMessageDialog(null,errorMessage);
    }
 else {
      System.out.println(errorMessage);
      System.exit(1);
    }
    return;
  }
  if (fatal) {
    LOG.error(ex);
    @NonNls final String errorMessage="Fatal error initializing class " + componentClassName + ":\n"+ ex.toString()+ "\nComplete error stacktrace was written to idea.log";
    if (!myHeadlessMode) {
      JOptionPane.showMessageDialog(null,errorMessage);
    }
 else {
      System.out.println(errorMessage);
    }
  }
  super.handleInitComponentError(ex,fatal,componentClassName);
}
