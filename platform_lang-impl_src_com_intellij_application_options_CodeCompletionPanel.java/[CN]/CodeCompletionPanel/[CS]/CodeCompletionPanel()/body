{
  myCaseSensitiveCombo.setModel(new DefaultComboBoxModel(CASE_VARIANTS));
  ActionManager actionManager=ActionManager.getInstance();
  String basicShortcut=KeymapUtil.getFirstKeyboardShortcutText(actionManager.getAction(IdeActions.ACTION_CODE_COMPLETION));
  String smartShortcut=KeymapUtil.getFirstKeyboardShortcutText(actionManager.getAction(IdeActions.ACTION_SMART_TYPE_COMPLETION));
  if (StringUtil.isNotEmpty(basicShortcut)) {
    myCbOnCodeCompletion.setText(myCbOnCodeCompletion.getText() + " ( " + basicShortcut+ " )");
  }
  if (StringUtil.isNotEmpty(smartShortcut)) {
    myCbOnSmartTypeCompletion.setText(myCbOnSmartTypeCompletion.getText() + " ( " + smartShortcut+ " )");
  }
  myCbAutocompletion.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      boolean selected=myCbAutocompletion.isSelected();
      myCbSelectByChars.setEnabled(selected);
    }
  }
);
  myCbAutopopupJavaDoc.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      myAutopopupJavaDocField.setEnabled(myCbAutopopupJavaDoc.isSelected());
    }
  }
);
  myCbParameterInfoPopup.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      myParameterInfoDelayField.setEnabled(myCbParameterInfoPopup.isSelected());
    }
  }
);
  hideOption(myCbOnSmartTypeCompletion,OptionId.COMPLETION_SMART_TYPE);
  reset();
}
