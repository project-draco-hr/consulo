{
  myCaseSensitiveCombo.setModel(new DefaultComboBoxModel(CASE_VARIANTS));
  myFocusLookup.setModel(new DefaultComboBoxModel(FOCUS_VARIANTS));
  myCbAutocompletion.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      boolean selected=myCbAutocompletion.isSelected();
      myAutocompletionDelayField.setEnabled(selected);
      myFocusLookup.setEnabled(selected);
      myCbSelectByChars.setEnabled(selected);
    }
  }
);
  myCbAutopopupJavaDoc.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      myAutopopupJavaDocField.setEnabled(myCbAutopopupJavaDoc.isSelected());
    }
  }
);
  myCbParameterInfoPopup.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      myParameterInfoDelayField.setEnabled(myCbParameterInfoPopup.isSelected());
    }
  }
);
  hideOption(myCbShowStaticAfterInstance,OptionId.COMPLETION_SHOW_STATIC_AFTER_IMPORT);
  hideOption(myCbOnSmartTypeCompletion,OptionId.COMPLETION_SMART_TYPE);
  myCbAutocompleteCommonPrefix.setVisible(false);
  reset();
}
