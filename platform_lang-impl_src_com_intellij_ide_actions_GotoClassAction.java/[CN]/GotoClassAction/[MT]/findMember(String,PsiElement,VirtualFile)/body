{
  final PsiStructureViewFactory factory=LanguageStructureViewBuilder.INSTANCE.forLanguage(psiElement.getLanguage());
  final StructureViewBuilder builder=factory == null ? null : factory.getStructureViewBuilder(psiElement.getContainingFile());
  final FileEditor[] editors=FileEditorManager.getInstance(psiElement.getProject()).getEditors(file);
  if (builder != null && editors.length > 0) {
    final StructureView view=builder.createStructureView(editors[0],psiElement.getProject());
    final StructureViewModel model=view.getTreeModel();
    final StructureViewTreeElement root=model.getRoot();
    final StructureViewTreeElement element=findElement(root,psiElement,4);
    if (element != null) {
      final MinusculeMatcher matcher=new MinusculeMatcher(pattern,NameUtil.MatchingCaseSensitivity.NONE);
      int max=Integer.MIN_VALUE;
      Object target=null;
      for (      TreeElement treeElement : element.getChildren()) {
        if (treeElement instanceof StructureViewTreeElement) {
          final ItemPresentation presentation=treeElement.getPresentation();
          if (presentation != null) {
            final int degree=matcher.matchingDegree(presentation.getPresentableText());
            if (degree > max) {
              max=degree;
              target=((StructureViewTreeElement)treeElement).getValue();
            }
          }
        }
      }
      if (target instanceof Navigatable) {
        ((Navigatable)target).navigate(true);
      }
    }
  }
}
