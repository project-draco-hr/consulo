{
  final VirtualFile vcsRoot=ProjectLevelVcsManager.getInstance(project).getVcsRootFor(file);
  final String rootUrl;
  try {
    rootUrl=SvnVcs.getInstance(project).createWCClient().doInfo(new File(file.getPath()),SVNRevision.WORKING).getRepositoryRootURL().toString();
  }
 catch (  SVNException e) {
    Messages.showErrorDialog(project,e.getMessage(),SvnBundle.message("configure.branches.error.no.connection.title"));
    return;
  }
  SvnBranchConfiguration configuration;
  try {
    configuration=SvnBranchConfigurationManager.getInstance(project).get(vcsRoot);
  }
 catch (  VcsException ex) {
    Messages.showErrorDialog(project,"Error loading branch configuration: " + ex.getMessages(),SvnBundle.message("configure.branches.title"));
    return;
  }
  final SvnBranchConfiguration clonedConfiguration=configuration.copy();
  BranchConfigurationDialog dlg=new BranchConfigurationDialog(project,clonedConfiguration,rootUrl);
  dlg.show();
  if (dlg.isOK()) {
    SvnBranchConfigurationManager.getInstance(project).setConfiguration(vcsRoot,clonedConfiguration,true);
  }
}
