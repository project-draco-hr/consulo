{
  final VirtualFile vcsRoot=(isRoot) ? file : ProjectLevelVcsManager.getInstance(project).getVcsRootFor(file);
  if (vcsRoot == null) {
    return;
  }
  final VirtualFile directory=SvnUtil.correctRoot(project,file);
  if (directory == null) {
    return;
  }
  final RootUrlInfo wcRoot=SvnVcs.getInstance(project).getSvnFileUrlMapping().getWcRootForFilePath(new File(directory.getPath()));
  if (wcRoot == null) {
    return;
  }
  final String rootUrl=wcRoot.getRepositoryUrl();
  if (rootUrl == null) {
    Messages.showErrorDialog(project,SvnBundle.message("configure.branches.error.no.connection.title"),SvnBundle.message("configure.branches.title"));
    return;
  }
  SvnBranchConfigurationNew configuration;
  try {
    configuration=SvnBranchConfigurationManager.getInstance(project).get(vcsRoot);
  }
 catch (  VcsException ex) {
    Messages.showErrorDialog(project,"Error loading branch configuration: " + ex.getMessage(),SvnBundle.message("configure.branches.title"));
    return;
  }
  final SvnBranchConfigurationNew clonedConfiguration=configuration.copy();
  BranchConfigurationDialog dlg=new BranchConfigurationDialog(project,clonedConfiguration,rootUrl,vcsRoot);
  dlg.show();
  if (dlg.isOK()) {
    SvnBranchConfigurationManager.getInstance(project).setConfiguration(vcsRoot,clonedConfiguration);
  }
}
