{
  super(project,true);
  init();
  setTitle(SvnBundle.message("configure.branches.title"));
  myTrunkLocationTextField.setText(configuration.getTrunkUrl());
  myTrunkLocationTextField.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      SelectLocationDialog dlg=new SelectLocationDialog(project,configuration.getTrunkUrl());
      dlg.show();
      if (dlg.isOK()) {
        myTrunkLocationTextField.setText(dlg.getSelectedURL());
      }
    }
  }
);
  myTrunkLocationTextField.getTextField().getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    final DocumentEvent e){
      configuration.setTrunkUrl(myTrunkLocationTextField.getText());
    }
  }
);
  final MyListModel listModel=new MyListModel(configuration);
  myLocationList.setModel(listModel);
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      SelectLocationDialog dlg=new SelectLocationDialog(project,configuration.getTrunkUrl());
      dlg.show();
      if (dlg.isOK()) {
        if (!configuration.getBranchUrls().contains(dlg.getSelectedURL())) {
          configuration.getBranchUrls().add(dlg.getSelectedURL());
          listModel.fireItemAdded();
          myLocationList.setSelectedIndex(listModel.getSize() - 1);
        }
      }
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int selIndex=myLocationList.getSelectedIndex();
      Object[] selection=myLocationList.getSelectedValues();
      for (      Object urlObj : selection) {
        String url=(String)urlObj;
        int index=configuration.getBranchUrls().indexOf(url);
        configuration.getBranchUrls().remove(index);
        listModel.fireItemRemoved(index);
      }
      if (listModel.getSize() > 0) {
        if (selIndex >= listModel.getSize())         selIndex=listModel.getSize() - 1;
        myLocationList.setSelectedIndex(selIndex);
      }
    }
  }
);
}
