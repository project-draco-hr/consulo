{
  final FileGroup conflictedGroup=myUpdatedFiles.getGroupById(groupId);
  final Collection<String> conflictedFiles=conflictedGroup.getFiles();
  final Collection<VirtualFile> parents=new ArrayList<VirtualFile>();
  if ((conflictedFiles != null) && (!conflictedFiles.isEmpty())) {
    for (    final String conflictedFile : conflictedFiles) {
      final File file=new File(conflictedFile);
      VirtualFile vf=myLfs.findFileByIoFile(file);
      if (vf == null) {
        vf=myLfs.refreshAndFindFileByIoFile(file);
      }
      if (vf != null) {
        myFiles.add(vf);
        final VirtualFile parent=vf.getParent();
        if (parent != null) {
          parents.add(parent);
        }
      }
    }
  }
  if (!myFiles.isEmpty()) {
    final RefreshQueue refreshQueue=RefreshQueue.getInstance();
    final RefreshSession session=refreshQueue.createSession(true,true,null);
    session.addAllFiles(parents);
    session.launch();
    myDirtyScopeManager.filesDirty(myFiles,null);
  }
}
