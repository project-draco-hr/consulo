{
  PsiSearchHelper searchHelper=myClass.getManager().getSearchHelper();
  GlobalSearchScope projectScope=GlobalSearchScope.projectScope(myProject);
  PsiReference[] references=searchHelper.findReferences(myClass,projectScope,false);
  List<UsageInfo> result=new ArrayList<UsageInfo>();
  boolean hadTypeParameters=myClass.getTypeParameters().length > 0;
  for (int i=0; i < references.length; i++) {
    final PsiReference reference=references[i];
    if (reference.getElement() instanceof PsiJavaCodeReferenceElement) {
      PsiJavaCodeReferenceElement referenceElement=((PsiJavaCodeReferenceElement)reference.getElement());
      PsiElement parent=referenceElement.getParent();
      if (parent instanceof PsiTypeElement || parent instanceof PsiNewExpression || parent instanceof PsiAnonymousClass|| parent instanceof PsiReferenceList) {
        if (!hadTypeParameters || referenceElement.getTypeParameters().length > 0) {
          result.add(new UsageInfo(referenceElement));
        }
      }
    }
  }
  return (UsageInfo[])result.toArray(new UsageInfo[result.size()]);
}
