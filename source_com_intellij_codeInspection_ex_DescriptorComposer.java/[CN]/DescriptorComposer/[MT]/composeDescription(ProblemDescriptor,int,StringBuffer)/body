{
  PsiElement expression=description.getPsiElement();
  StringBuffer anchor=new StringBuffer();
  if (expression != null) {
    VirtualFile vFile=expression.getContainingFile().getVirtualFile();
    anchor.append("<a HREF=\"");
    try {
      anchor.append(new URL(vFile.getUrl() + "#descr:" + i));
    }
 catch (    MalformedURLException e) {
      LOG.error(e);
    }
    anchor.append("\">");
    anchor.append(expression.getText().replaceAll("\\$","\\\\\\$"));
    anchor.append("</a>");
  }
 else {
    anchor.append("<font style=\"font-family:verdana; font-weight:bold; color:#FF0000\";>invalidated item</font>");
  }
  String descriptionTemplate=description.getDescriptionTemplate();
  if (descriptionTemplate != null) {
    String res=descriptionTemplate.replaceAll("#ref",anchor.toString());
    final int lineNumber=description.getLineNumber();
    StringBuffer lineAnchor=new StringBuffer();
    if (expression != null && lineNumber > 0) {
      VirtualFile vFile=expression.getContainingFile().getVirtualFile();
      Document doc=FileDocumentManager.getInstance().getDocument(vFile);
      lineAnchor.append("at line ");
      lineAnchor.append("<a HREF=\"");
      try {
        int offset=doc.getLineStartOffset(lineNumber - 1);
        offset=CharArrayUtil.shiftForward(doc.getCharsSequence(),offset," \t");
        lineAnchor.append(new URL(vFile.getUrl() + "#" + offset));
      }
 catch (      MalformedURLException e) {
        LOG.error(e);
      }
      lineAnchor.append("\">");
      lineAnchor.append(Integer.toString(lineNumber));
      lineAnchor.append("</a>");
      res=res.replaceAll("#loc",lineAnchor.toString());
    }
    buf.append(res);
  }
 else {
    buf.append("No error message provided.");
  }
}
