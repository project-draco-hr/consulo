{
  WriteExternalException ex=PsiDocumentManager.getInstance(myProject).commitAndRunReadAction(new Computable<WriteExternalException>(){
    public WriteExternalException compute(){
      try {
        removeInvalidBreakpoints();
        final Map<String,Element> categoryToElementMap=new java.util.HashMap<String,Element>();
        for (        final Breakpoint breakpoint : getBreakpoints()) {
          final String category=breakpoint.getCategory();
          final Element group=getCategoryGroupElement(categoryToElementMap,category,parentNode);
          if (breakpoint.isValid()) {
            writeBreakpoint(group,breakpoint);
          }
        }
        final Element group=getCategoryGroupElement(categoryToElementMap,myAnyExceptionBreakpoint.getCategory(),parentNode);
        writeBreakpoint(group,myAnyExceptionBreakpoint);
        final Element rules=new Element(RULES_GROUP_NAME);
        parentNode.addContent(rules);
        for (        final EnableBreakpointRule myBreakpointRule : myBreakpointRules) {
          writeRule(myBreakpointRule,rules);
        }
        return null;
      }
 catch (      WriteExternalException e) {
        return e;
      }
    }
  }
);
  if (ex != null) {
    throw ex;
  }
  final Element props=new Element("ui_properties");
  parentNode.addContent(props);
  for (  final String name : myUIProperties.keySet()) {
    final String value=myUIProperties.get(name);
    final Element property=new Element("property");
    props.addContent(property);
    property.setAttribute("name",name);
    property.setAttribute("value",value);
  }
}
