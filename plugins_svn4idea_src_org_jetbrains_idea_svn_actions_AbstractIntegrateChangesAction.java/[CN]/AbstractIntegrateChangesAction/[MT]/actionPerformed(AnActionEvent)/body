{
  final DataContext dataContext=e.getDataContext();
  final Project project=CommonDataKeys.PROJECT.getData(dataContext);
  final T checker=createChecker();
  checker.execute(e);
  if (!checker.isValid()) {
    Messages.showErrorDialog(SvnBundle.message("action.Subversion.integrate.changes.error.no.available.files.text"),SvnBundle.message("action.Subversion.integrate.changes.messages.title"));
    return;
  }
  final SvnIntegrateChangesActionPerformer changesActionPerformer=new SvnIntegrateChangesActionPerformer(project,checker.getSameBranch(),createMergerFactory(checker));
  final String selectedBranchUrl=getSelectedBranchUrl(checker);
  if (selectedBranchUrl == null) {
    SelectBranchPopup.showForBranchRoot(project,checker.getRoot(),changesActionPerformer,SvnBundle.message("action.Subversion.integrate.changes.select.branch.text"));
  }
 else {
    changesActionPerformer.onBranchSelected(selectedBranchUrl,getSelectedBranchLocalPath(checker),getDialogTitle());
  }
}
