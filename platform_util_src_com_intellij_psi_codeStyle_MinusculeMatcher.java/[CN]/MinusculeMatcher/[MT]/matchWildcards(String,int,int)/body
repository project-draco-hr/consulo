{
  while (isWildcard(patternIndex)) {
    patternIndex++;
  }
  boolean space=isPatternChar(patternIndex - 1,' ');
  if (patternIndex == myPattern.length) {
    if (space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]))) {
      return null;
    }
    return FList.emptyList();
  }
  char p=myPattern[patternIndex];
  if (isWildcard(patternIndex - 1)) {
{
      FList<TextRange> ranges=matchFragment(name,patternIndex,nameIndex);
      if (ranges != null) {
        return ranges;
      }
    }
    while (true) {
      nameIndex=space ? indexOfWordStart(name,p,nameIndex) : StringUtil.indexOfIgnoreCase(name,p,nameIndex + 1);
      if (nameIndex < 0)       return null;
      if (!Character.isUpperCase(p) || NameUtil.isWordStart(name,nameIndex)) {
        FList<TextRange> ranges=matchFragment(name,patternIndex,nameIndex);
        if (ranges != null) {
          return ranges;
        }
      }
    }
  }
  return matchFragment(name,patternIndex,nameIndex);
}
