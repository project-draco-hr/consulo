{
  if (nameIndex < 0) {
    return null;
  }
  if (!isWildcard(patternIndex)) {
    if (patternIndex == myPattern.length) {
      return FList.emptyList();
    }
    return matchFragment(name,patternIndex,nameIndex,matchingState);
  }
  do {
    patternIndex++;
  }
 while (isWildcard(patternIndex));
  if (patternIndex == myPattern.length) {
    boolean space=isPatternChar(patternIndex - 1,' ');
    if (space && nameIndex != name.length() && (patternIndex < 2 || !NameUtil.isWordStart(myPattern[patternIndex - 2]))) {
      int spaceIndex=name.indexOf(' ',nameIndex);
      if (spaceIndex >= 0) {
        return FList.<TextRange>emptyList().prepend(TextRange.from(spaceIndex,1));
      }
      return null;
    }
    return FList.emptyList();
  }
  FList<TextRange> ranges=matchFragment(name,patternIndex,nameIndex,matchingState);
  if (ranges != null) {
    return ranges;
  }
  return matchSkippingWords(name,patternIndex,nameIndex,true,matchingState);
}
