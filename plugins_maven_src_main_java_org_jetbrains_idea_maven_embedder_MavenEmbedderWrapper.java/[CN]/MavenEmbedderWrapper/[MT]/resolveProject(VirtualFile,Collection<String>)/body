{
  return doExecute(new Executor<MavenExecutionResult>(){
    public MavenExecutionResult execute() throws Exception {
      MavenExecutionRequest request=createRequest(file,activeProfiles,Collections.EMPTY_LIST);
      ProjectBuilderConfiguration config=request.getProjectBuilderConfiguration();
      request.getGlobalProfileManager().loadSettingsProfiles(mySettings);
      ProfileManager globalProfileManager=request.getGlobalProfileManager();
      globalProfileManager.loadSettingsProfiles(request.getSettings());
      List<Exception> exceptions=new ArrayList<Exception>();
      MavenProject project=null;
      try {
        MavenProjectBuilder builder=getComponent(MavenProjectBuilder.class);
        project=builder.build(new File(file.getPath()),config);
        builder.calculateConcreteState(project,config,false);
        findExtensions(project);
        Artifact projectArtifact=project.getArtifact();
        Map managedVersions=project.getManagedVersionMap();
        ArtifactMetadataSource metadataSource=getComponent(ArtifactMetadataSource.class);
        project.setDependencyArtifacts(project.createArtifacts(getComponent(ArtifactFactory.class),null,null));
        ArtifactResolver resolver=getComponent(ArtifactResolver.class);
        ArtifactResolutionResult result=resolver.resolveTransitively(project.getDependencyArtifacts(),projectArtifact,managedVersions,myLocalRepository,project.getRemoteArtifactRepositories(),metadataSource);
        project.setArtifacts(result.getArtifacts());
      }
 catch (      ProjectBuildingException e) {
        exceptions.add(e);
      }
catch (      ArtifactResolutionException e) {
        exceptions.add(e);
      }
catch (      ArtifactNotFoundException e) {
        exceptions.add(e);
      }
      return new MavenExecutionResult(project,retrieveUnresolvedArtifactIds(),exceptions);
    }
  }
);
}
