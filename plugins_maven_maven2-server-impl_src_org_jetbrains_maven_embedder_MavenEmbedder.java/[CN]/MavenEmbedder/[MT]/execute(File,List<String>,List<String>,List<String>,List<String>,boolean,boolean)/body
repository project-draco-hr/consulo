{
  try {
    MavenExecutionRequest request=createRequest(file,activeProfiles,inactiveProfiles,goals);
    if (!selectedProjects.isEmpty()) {
      request.setRecursive(true);
      request.setSelectedProjects(selectedProjects);
      if (alsoMake && alsoMakeDependents) {
        request.setMakeBehavior(ReactorManager.MAKE_BOTH_MODE);
      }
 else       if (alsoMake) {
        request.setMakeBehavior(ReactorManager.MAKE_MODE);
      }
 else       if (alsoMakeDependents) {
        request.setMakeBehavior(ReactorManager.MAKE_DEPENDENTS_MODE);
      }
    }
    Maven maven=getComponent(Maven.class);
    Method method=maven.getClass().getDeclaredMethod("doExecute",MavenExecutionRequest.class,EventDispatcher.class);
    method.setAccessible(true);
    ReactorManager reactor=(ReactorManager)method.invoke(maven,request,request.getEventDispatcher());
    return new MavenExecutionResult(reactor.getTopLevelProject(),Collections.<Exception>emptyList());
  }
 catch (  InvocationTargetException e) {
    return handleException(e.getTargetException());
  }
catch (  NoSuchMethodException e) {
    throw new RuntimeException(e);
  }
catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
}
