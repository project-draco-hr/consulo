{
  MavenExecutionRequest request=createRequest(file,activeProfiles,Collections.<String>emptyList(),Collections.<String>emptyList());
  ProjectBuilderConfiguration config=request.getProjectBuilderConfiguration();
  request.getGlobalProfileManager().loadSettingsProfiles(mySettings);
  ProfileManager globalProfileManager=request.getGlobalProfileManager();
  globalProfileManager.loadSettingsProfiles(request.getSettings());
  List<Exception> exceptions=new ArrayList<Exception>();
  MavenProject project=null;
  try {
    MavenProjectBuilder builder=getComponent(MavenProjectBuilder.class);
    project=builder.build(new File(file.getPath()),config);
    builder.calculateConcreteState(project,config,false);
    findExtensions(project);
    Artifact projectArtifact=project.getArtifact();
    Map managedVersions=project.getManagedVersionMap();
    ArtifactMetadataSource metadataSource=getComponent(ArtifactMetadataSource.class);
    project.setDependencyArtifacts(project.createArtifacts(getComponent(ArtifactFactory.class),null,null));
    ArtifactResolver resolver=getComponent(ArtifactResolver.class);
    ArtifactResolutionResult result=resolver.resolveTransitively(project.getDependencyArtifacts(),projectArtifact,managedVersions,myLocalRepository,project.getRemoteArtifactRepositories(),metadataSource,null,listeners);
    project.setArtifacts(result.getArtifacts());
  }
 catch (  Exception e) {
    return handleException(e);
  }
  return new MavenExecutionResult(project,exceptions);
}
