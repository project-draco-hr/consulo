{
  WagonManager wagonManager=getComponent(WagonManager.class);
  wagonManager.setOnline(!mySettings.isOffline());
  if (wagonManager instanceof DefaultWagonManager) {
    ((DefaultWagonManager)wagonManager).setHttpUserAgent("Apache-Maven/2.2");
  }
  Proxy proxy=mySettings.getActiveProxy();
  if (proxy != null && proxy.getHost() != null) {
    String pass=decrypt(proxy.getPassword());
    wagonManager.addProxy(proxy.getProtocol(),proxy.getHost(),proxy.getPort(),proxy.getUsername(),pass,proxy.getNonProxyHosts());
  }
  for (  Object each : mySettings.getServers()) {
    Server server=(Server)each;
    String passWord=decrypt(server.getPassword());
    String passPhrase=decrypt(server.getPassphrase());
    wagonManager.addAuthenticationInfo(server.getId(),server.getUsername(),passWord,server.getPrivateKey(),passPhrase);
    wagonManager.addPermissionInfo(server.getId(),server.getFilePermissions(),server.getDirectoryPermissions());
    if (server.getConfiguration() != null) {
      wagonManager.addConfiguration(server.getId(),(Xpp3Dom)server.getConfiguration());
    }
  }
  for (  Object each : mySettings.getMirrors()) {
    Mirror mirror=(Mirror)each;
    if (mirror.getUrl() == null)     continue;
    wagonManager.addMirror(mirror.getId(),mirror.getMirrorOf(),mirror.getUrl());
  }
}
