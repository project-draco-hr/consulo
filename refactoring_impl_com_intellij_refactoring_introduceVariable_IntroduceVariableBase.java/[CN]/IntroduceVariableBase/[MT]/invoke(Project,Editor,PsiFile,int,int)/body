{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.introduceVariable");
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiExpression tempExpr=CodeInsightUtil.findExpressionInRange(file,startOffset,endOffset);
  if (tempExpr == null) {
    PsiElement[] statements=CodeInsightUtil.findStatementsInRange(file,startOffset,endOffset);
    if (statements.length == 1 && statements[0] instanceof PsiExpressionStatement) {
      tempExpr=((PsiExpressionStatement)statements[0]).getExpression();
    }
  }
  if (tempExpr == null) {
    try {
      tempExpr=JavaPsiFacade.getInstance(project).getElementFactory().createExpressionFromText(file.getText().subSequence(startOffset,endOffset).toString(),file);
      final PsiStatement statement=PsiTreeUtil.getParentOfType(file.findElementAt(startOffset),PsiStatement.class);
      tempExpr.putUserData(ANCHOR,statement);
    }
 catch (    IncorrectOperationException e) {
      tempExpr=null;
    }
  }
  return invokeImpl(project,tempExpr,editor);
}
