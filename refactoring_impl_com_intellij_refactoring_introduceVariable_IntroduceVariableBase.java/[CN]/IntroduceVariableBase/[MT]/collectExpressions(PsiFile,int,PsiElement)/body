{
  final PsiElement elementAtCaret=file.findElementAt(offset);
  final List<PsiExpression> expressions=new ArrayList<PsiExpression>();
  for (  PsiElement element : statementsInRange) {
    if (element instanceof PsiExpressionStatement) {
      expressions.add(((PsiExpressionStatement)element).getExpression());
    }
  }
  PsiExpression expression=PsiTreeUtil.getParentOfType(elementAtCaret,PsiExpression.class);
  while (expression != null) {
    if (!expressions.contains(expression) && !(expression instanceof PsiReferenceExpression) && !(expression instanceof PsiParenthesizedExpression)&& !(expression instanceof PsiSuperExpression)&& expression.getType() != PsiType.VOID) {
      expressions.add(expression);
    }
    expression=PsiTreeUtil.getParentOfType(expression,PsiExpression.class);
  }
  return expressions;
}
