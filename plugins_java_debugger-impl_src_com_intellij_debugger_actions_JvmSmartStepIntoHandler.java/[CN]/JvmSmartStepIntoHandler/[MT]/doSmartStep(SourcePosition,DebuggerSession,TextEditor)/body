{
  final List<PsiMethod> methods=findReferencedMethods(position);
  if (methods.size() > 0) {
    if (methods.size() == 1) {
      session.stepInto(true,getSmartStepFilter(methods.get(0)));
    }
 else {
      final PsiMethodListPopupStep popupStep=new PsiMethodListPopupStep(methods,new PsiMethodListPopupStep.OnChooseRunnable(){
        public void execute(        PsiMethod chosenMethod){
          session.stepInto(true,getSmartStepFilter(chosenMethod));
        }
      }
);
      final ListPopup popup=JBPopupFactory.getInstance().createListPopup(popupStep);
      final RelativePoint point=DebuggerUIUtil.calcPopupLocation(((TextEditor)fileEditor).getEditor(),position.getLine());
      popup.show(point);
    }
    return true;
  }
  return false;
}
