{
  createInitialStructure();
  myFixture.copyFileToProject(BASE_PATH + "RJavaFileMarkers.java","app/src/p1/p2/R.java");
  myFixture.copyFileToProject(BASE_PATH + "RJavaFileMarkers.java","app/src/p1/p2/lib/R.java");
  myFixture.copyFileToProject(BASE_PATH + "RJavaFileMarkers.java","lib/src/p1/p2/lib/R.java");
  List<LineMarkerInfo> markers=AndroidResourcesLineMarkerTest.collectMarkers(myFixture,BASE_PATH + "res/layout/main.xml","lib/res/layout/main.xml");
  assertEquals(2,markers.size());
  boolean fileMarker=false;
  for (  LineMarkerInfo marker : markers) {
    GutterIconNavigationHandler handler=marker.getNavigationHandler();
    PsiElement[] targets;
    if (marker.getElement() instanceof XmlFile) {
      fileMarker=true;
      assertInstanceOf(handler,AndroidResourcesLineMarkerProvider.MyNavigationHandler.class);
      targets=((AndroidResourcesLineMarkerProvider.MyNavigationHandler)handler).getTargets();
      assertNotNull(targets);
    }
 else {
      assertInstanceOf(handler,AndroidResourcesLineMarkerProvider.MyLazyNavigationHandler.class);
      Computable<PsiElement[]> targetProvider=((AndroidResourcesLineMarkerProvider.MyLazyNavigationHandler)handler).getTargetProvider();
      targets=targetProvider.compute();
      assertNotNull(targets);
    }
    assertEquals(3,targets.length);
    for (    PsiElement target : targets) {
      assertInstanceOf(target,PsiField.class);
    }
  }
  assertTrue("LineMarker for file not found",fileMarker);
}
