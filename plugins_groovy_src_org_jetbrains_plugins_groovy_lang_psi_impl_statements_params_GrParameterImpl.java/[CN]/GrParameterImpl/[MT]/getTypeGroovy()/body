{
  GrTypeElement typeElement=getTypeElementGroovy();
  if (typeElement != null) {
    PsiType type=typeElement.getType();
    if (!isVarArgs()) {
      return type;
    }
 else {
      return new PsiEllipsisType(type);
    }
  }
  if (isVarArgs()) {
    PsiClassType type=TypesUtil.getJavaLangObject(this);
    return new PsiEllipsisType(type);
  }
  GroovyPsiManager factory=GroovyPsiManager.getInstance(getProject());
  PsiElement parent=getParent();
  if (parent instanceof GrForInClause) {
    GrExpression iteratedExpression=((GrForInClause)parent).getIteratedExpression();
    if (iteratedExpression instanceof GrRangeExpression) {
      return factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_INTEGER,this);
    }
 else     if (iteratedExpression != null) {
      PsiType result=ClosureParameterEnhancer.findTypeForIteration(iteratedExpression,factory,this);
      if (result != null) {
        return result;
      }
    }
  }
 else   if (parent instanceof GrCatchClause) {
    return factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_THROWABLE,this);
  }
  return GrVariableEnhancer.getEnhancedType(this);
}
