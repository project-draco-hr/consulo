{
  GrTypeElement typeElement=getTypeElementGroovy();
  if (typeElement != null) {
    PsiType type=typeElement.getType();
    if (!isVarArgs()) {
      return type;
    }
 else {
      return new PsiEllipsisType(type);
    }
  }
  PsiElementFactory factory=JavaPsiFacade.getInstance(getProject()).getElementFactory();
  if (isVarArgs()) {
    PsiClassType type=factory.createTypeByFQClassName("java.lang.Object",getResolveScope());
    return new PsiEllipsisType(type);
  }
  PsiElement parent=getParent();
  if (parent instanceof GrForInClause) {
    GrExpression iteratedExpression=((GrForInClause)parent).getIteratedExpression();
    if (iteratedExpression instanceof GrRangeExpression) {
      return factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_INTEGER,getResolveScope());
    }
 else     if (iteratedExpression != null) {
      PsiType result=findTypeForCollection(iteratedExpression,factory,this);
      if (result != null) {
        return result;
      }
    }
  }
 else   if (parent instanceof GrCatchClause) {
    return factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_THROWABLE,getResolveScope());
  }
  String argumentName=getElementToCompare();
  GrClosableBlock closure=findClosureWithArgument(parent);
  return findClosureParameterType(closure,argumentName,factory,this);
}
