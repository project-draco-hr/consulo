{
  final GrTypeElement typeElement=getTypeElementGroovy();
  if (type == null) {
    if (typeElement != null)     typeElement.delete();
    return;
  }
  GrTypeElement newTypeElement;
  try {
    newTypeElement=GroovyPsiElementFactory.getInstance(getProject()).createTypeElement(type);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
    return;
  }
  if (typeElement == null) {
    final GrModifierList modifierList=getModifierList();
    newTypeElement=(GrTypeElement)addAfter(newTypeElement,modifierList);
  }
 else {
    newTypeElement=(GrTypeElement)typeElement.replace(newTypeElement);
  }
  PsiUtil.shortenReferences(newTypeElement);
}
