{
  PsiClass aClass=(PsiClass)referenceList.getParent();
  final PsiJavaCodeReferenceElement[] referenceElements=referenceList.getReferenceElements();
  HighlightInfo errorResult=null;
  PsiClass extendFrom=(PsiClass)resolveResult.getElement();
  if (!extendFrom.isInterface() && referenceElements.length != 0 && context != referenceElements[0]) {
    final String description=HighlightClassUtil.INTERFACE_EXPECTED;
    errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,context,description);
    PsiClassType type=aClass.getManager().getElementFactory().createType(extendFrom,resolveResult.getSubstitutor());
    QuickFixAction.registerQuickFixAction(errorResult,new MoveBoundClassToFrontFix(aClass,type));
  }
  return errorResult;
}
