{
  PsiType type=typeElement.getType();
  if (type instanceof PsiWildcardType) {
    if (typeElement.getParent() instanceof PsiReferenceParameterList) {
      PsiElement refParent=getSuperParent((PsiReferenceParameterList)typeElement.getParent());
      if (refParent instanceof PsiAnonymousClass)       refParent=refParent.getParent();
      if (refParent instanceof PsiNewExpression) {
        PsiNewExpression newExpression=(PsiNewExpression)refParent;
        if (!(newExpression.getType() instanceof PsiArrayType)) {
          String description=MessageFormat.format("Wildcard type ''{0}'' cannot be instantiated directly",new Object[]{HighlightUtil.formatType(type)});
          return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,typeElement,description);
        }
      }
 else       if (refParent instanceof PsiReferenceList) {
        PsiElement refPParent=refParent.getParent();
        if (!(refPParent instanceof PsiTypeParameter) || refParent != ((PsiTypeParameter)refPParent).getExtendsList()) {
          return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,typeElement,"No wildcard expected");
        }
      }
    }
 else {
      return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,typeElement,"Wildcards may be used only as reference parameters");
    }
  }
  return null;
}
