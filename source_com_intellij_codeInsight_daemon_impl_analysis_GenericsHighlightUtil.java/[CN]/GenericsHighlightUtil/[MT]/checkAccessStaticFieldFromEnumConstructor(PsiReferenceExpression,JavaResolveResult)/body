{
  final PsiElement resolved=result.getElement();
  if (!(resolved instanceof PsiField))   return null;
  if (!((PsiField)resolved).hasModifierProperty(PsiModifier.STATIC))   return null;
  final PsiMember constructorOrInitializer=PsiUtil.findEnclosingConstructorOrInitializer(expr);
  if (constructorOrInitializer == null)   return null;
  if (constructorOrInitializer.hasModifierProperty(PsiModifier.STATIC))   return null;
  final PsiClass aClass=constructorOrInitializer.getContainingClass();
  if (aClass == null)   return null;
  if (!aClass.isEnum())   return null;
  final PsiField field=(PsiField)resolved;
  if (field.getContainingClass() != aClass)   return null;
  final PsiType type=field.getType();
  if (type instanceof PsiClassType && ((PsiClassType)type).resolve() == aClass)   return null;
  if (PsiUtil.isCompileTimeConstant(field))   return null;
  String description=MessageFormat.format("It is illegal to access static member ''{0}'' from enum constructor or instance initializer",new Object[]{HighlightMessageUtil.getSymbolName(resolved,result.getSubstitutor())});
  return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,expr,description);
}
