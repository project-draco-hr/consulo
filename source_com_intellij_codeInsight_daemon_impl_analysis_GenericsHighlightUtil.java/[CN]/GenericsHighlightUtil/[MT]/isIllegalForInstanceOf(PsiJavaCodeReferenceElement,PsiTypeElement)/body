{
  final PsiElement resolved=ref.resolve();
  if (resolved instanceof PsiTypeParameter) {
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,ref,"Class or array expected");
  }
  final PsiType[] parameters=ref.getTypeParameters();
  for (  PsiType parameterType : parameters) {
    if (parameterType != null && !(parameterType instanceof PsiWildcardType && ((PsiWildcardType)parameterType).getBound() == null)) {
      return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,typeElement,"Illegal generic type for instanceof");
    }
  }
  return null;
}
