{
  if (refParamList.getTypeArguments().length == 0)   return null;
  JavaResolveResult resolveResult=null;
  PsiElement parent=refParamList.getParent();
  if (parent instanceof PsiJavaCodeReferenceElement) {
    resolveResult=((PsiJavaCodeReferenceElement)parent).advancedResolve(false);
  }
 else   if (parent instanceof PsiCallExpression) {
    resolveResult=((PsiCallExpression)parent).resolveMethodGenerics();
  }
  if (resolveResult != null) {
    PsiElement element=resolveResult.getElement();
    if (!(element instanceof PsiTypeParameterListOwner))     return null;
    if (((PsiTypeParameterListOwner)element).hasModifierProperty(PsiModifier.STATIC))     return null;
    PsiClass containingClass=((PsiTypeParameterListOwner)element).getContainingClass();
    if (containingClass != null && PsiUtil.isRawSubstitutor(containingClass,resolveResult.getSubstitutor())) {
      final String message;
      if (element instanceof PsiClass) {
        message=JavaErrorMessages.message("generics.type.arguments.on.raw.type");
      }
 else {
        message=JavaErrorMessages.message("generics.type.arguments.on.raw.method");
      }
      return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,refParamList,message);
    }
  }
  return null;
}
