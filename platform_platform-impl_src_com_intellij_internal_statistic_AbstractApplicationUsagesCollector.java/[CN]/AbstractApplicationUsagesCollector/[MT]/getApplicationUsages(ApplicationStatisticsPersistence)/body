{
  final Map<String,Integer> result=new HashMap<String,Integer>();
  for (  Set<UsageDescriptor> usageDescriptors : persistence.getApplicationData(getGroupId()).values()) {
    for (    UsageDescriptor usageDescriptor : usageDescriptors) {
      final String key=usageDescriptor.getKey();
      final Integer count=result.get(key);
      result.put(key,count == null ? 1 : count.intValue() + 1);
    }
  }
  return ContainerUtil.map2Set(result.entrySet(),new Function<Map.Entry<String,Integer>,UsageDescriptor>(){
    @Override public UsageDescriptor fun(    Map.Entry<String,Integer> entry){
      return new UsageDescriptor(entry.getKey(),entry.getValue());
    }
  }
);
}
