{
  final PsiElement element=findMatchingElement(file,editor);
  final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)element.getParent();
  final PsiExpression lOperand=binaryExpression.getLOperand();
  final PsiLiteralExpression leftLiteral=getLeftLiteralOperand(lOperand);
  final PsiLiteralExpression rightLiteral=(PsiLiteralExpression)binaryExpression.getROperand();
  final String leftText;
  if (leftLiteral.getText().charAt(0) == '"') {
    leftText=leftLiteral.getText().substring(0,leftLiteral.getTextLength() - 1);
  }
 else {
    leftText='"' + leftLiteral.getText();
  }
  final String rightText;
  if (rightLiteral.getText().charAt(0) == '"') {
    rightText=rightLiteral.getText().substring(1);
  }
 else {
    rightText=rightLiteral.getText() + '"';
  }
  final String newExpression;
  if (lOperand instanceof PsiBinaryExpression) {
    final PsiBinaryExpression lBinaryExpression=(PsiBinaryExpression)lOperand;
    newExpression=lBinaryExpression.getLOperand().getText() + " + " + leftText+ rightText;
  }
 else {
    newExpression=leftText + rightText;
  }
  replaceExpression(project,newExpression,binaryExpression);
}
