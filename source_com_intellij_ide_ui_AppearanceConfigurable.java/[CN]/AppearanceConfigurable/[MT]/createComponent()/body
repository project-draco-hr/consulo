{
  myComponent=new MyComponent();
  Font[] fonts=GraphicsEnvironment.getLocalGraphicsEnvironment().getAllFonts();
  DefaultComboBoxModel aModel=new DefaultComboBoxModel();
  for (int i=0; i < fonts.length; i++) {
    try {
      final Font font=fonts[i];
      if (font.canDisplay('a') && font.canDisplay('z') && font.canDisplay('A')&& font.canDisplay('Z')&& font.canDisplay('0')&& font.canDisplay('1')) {
        aModel.addElement(font.getName());
      }
    }
 catch (    Exception e) {
      continue;
    }
  }
  myComponent.myFontCombo.setModel(aModel);
  myComponent.myFontSizeCombo.setModel(new DefaultComboBoxModel(new String[]{"8","10","12","14","16","18","20","22","24","26","28","36","48","72"}));
  myComponent.myFontSizeCombo.setEditable(true);
  myComponent.myLafComboBox.setModel(new DefaultComboBoxModel(LafManager.getInstance().getInstalledLookAndFeels()));
  myComponent.myLafComboBox.setRenderer(new MyLafComboBoxRenderer());
  myComponent.myEnableAlphaModeCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      boolean state=myComponent.myEnableAlphaModeCheckBox.isSelected();
      myComponent.myAlphaModeDelayTextField.setEnabled(state);
      myComponent.myAlphaModeRatioSlider.setEnabled(state);
    }
  }
);
  myComponent.myAlphaModeRatioSlider.setSize(100,50);
  Dictionary<Integer,JLabel> dictionary=new Hashtable<Integer,JLabel>();
  dictionary.put(new Integer(0),new JLabel("0%"));
  dictionary.put(new Integer(50),new JLabel("50%"));
  dictionary.put(new Integer(100),new JLabel("100%"));
  myComponent.myAlphaModeRatioSlider.setLabelTable(dictionary);
  UIUtil.setSliderIsFilled(myComponent.myAlphaModeRatioSlider,Boolean.TRUE);
  myComponent.myAlphaModeRatioSlider.setPaintLabels(true);
  myComponent.myAlphaModeRatioSlider.setPaintTicks(true);
  myComponent.myAlphaModeRatioSlider.setPaintTrack(true);
  myComponent.myAlphaModeRatioSlider.setMajorTickSpacing(50);
  myComponent.myAlphaModeRatioSlider.setMinorTickSpacing(10);
  myComponent.myAlphaModeRatioSlider.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      myComponent.myAlphaModeRatioSlider.setToolTipText(myComponent.myAlphaModeRatioSlider.getValue() + "%");
    }
  }
);
  myComponent.myTransparencyPanel.setVisible(WindowManagerEx.getInstanceEx().isAlphaModeSupported());
  return myComponent.myPanel;
}
