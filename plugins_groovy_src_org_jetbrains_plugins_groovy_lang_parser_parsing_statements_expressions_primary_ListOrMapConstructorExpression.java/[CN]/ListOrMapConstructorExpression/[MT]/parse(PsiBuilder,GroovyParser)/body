{
  PsiBuilder.Marker marker=builder.mark();
  if (!ParserUtils.getToken(builder,mLBRACK,GroovyBundle.message("lbrack.expected"))) {
    marker.drop();
    return WRONGWAY;
  }
  if (ParserUtils.getToken(builder,mRBRACK)) {
    marker.done(LIST_OR_MAP);
    return LIST_OR_MAP;
  }
 else   if (ParserUtils.getToken(builder,mCOLON)) {
    ParserUtils.getToken(builder,mRBRACK,GroovyBundle.message("rbrack.expected"));
  }
 else {
    ArgumentList.parseArgumentList(builder,mRBRACK,parser);
    ParserUtils.getToken(builder,mNLS);
    ParserUtils.getToken(builder,mRBRACK,GroovyBundle.message("rbrack.expected"));
  }
  marker.done(LIST_OR_MAP);
  return LIST_OR_MAP;
}
