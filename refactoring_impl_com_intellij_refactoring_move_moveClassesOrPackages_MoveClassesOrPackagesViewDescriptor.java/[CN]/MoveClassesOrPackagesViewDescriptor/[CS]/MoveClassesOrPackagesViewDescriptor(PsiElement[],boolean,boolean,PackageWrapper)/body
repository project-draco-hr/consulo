{
  myPsiElements=psiElements;
  mySearchInComments=isSearchInComments;
  mySearchInNonJavaFiles=searchInNonJavaFiles;
  myTargetPackage=newParent;
  myNewParentPackageName=MoveClassesOrPackagesUtil.getPackageName(myTargetPackage);
  if (psiElements.length == 1) {
    myProcessedElementsHeader=StringUtil.capitalize(RefactoringBundle.message("move.single.element.elements.header",UsageViewUtil.getType(psiElements[0]),myNewParentPackageName));
    myCodeReferencesText=RefactoringBundle.message("references.in.code.to.0.1",UsageViewUtil.getType(psiElements[0]),UsageViewUtil.getLongName(psiElements[0]));
  }
 else {
    if (psiElements[0] instanceof PsiClass) {
      myProcessedElementsHeader=StringUtil.capitalize(RefactoringBundle.message("move.classes.elements.header",myNewParentPackageName));
    }
 else     if (psiElements[0] instanceof PsiDirectory) {
      myProcessedElementsHeader=StringUtil.capitalize(RefactoringBundle.message("move.packages.elements.header",myNewParentPackageName));
    }
    myCodeReferencesText=RefactoringBundle.message("references.found.in.code");
  }
  myHelpID=HelpID.getMoveHelpID(psiElements[0]);
}
