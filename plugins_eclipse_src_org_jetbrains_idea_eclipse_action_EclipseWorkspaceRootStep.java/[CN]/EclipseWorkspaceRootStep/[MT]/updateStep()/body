{
  String path=getContext().getRootDirectory();
  if (path == null) {
    path=getWizardContext().getProjectFileDirectory();
  }
  myWorkspaceRootComponent.setText(path.replace('/',File.separatorChar));
  myWorkspaceRootComponent.getTextField().selectAll();
  final String storageDir=Options.getProjectStorageDir(getWizardContext().getProject());
  final boolean colocated=StringUtil.isEmptyOrSpaces(getParameters().converterOptions.commonModulesDirectory) && StringUtil.isEmptyOrSpaces(storageDir);
  rbModulesColocated.setSelected(colocated);
  rbModulesDedicated.setSelected(!colocated);
  myDirComponent.setEnabled(!colocated);
  if (StringUtil.isEmptyOrSpaces(getParameters().converterOptions.commonModulesDirectory)) {
    PropertiesComponent propertiesComponent=PropertiesComponent.getInstance();
    myDirComponent.setText(!colocated ? propertiesComponent.getOrInit(_DIR,storageDir) : propertiesComponent.isValueSet(_DIR) ? propertiesComponent.getValue(_DIR) : storageDir);
  }
 else {
    myDirComponent.setText(getParameters().converterOptions.commonModulesDirectory);
  }
  myTestSourcesMask.setText(regexpToWildcard(getParameters().converterOptions.testPattern));
  myLinkCheckBox.setSelected(getParameters().linkConverted);
}
