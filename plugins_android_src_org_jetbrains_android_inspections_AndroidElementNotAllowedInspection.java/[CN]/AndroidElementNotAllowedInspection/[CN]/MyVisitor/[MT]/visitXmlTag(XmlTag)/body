{
  super.visitXmlTag(tag);
  if (tag.getNamespace().isEmpty()) {
    final XmlElementDescriptor descriptor=tag.getDescriptor();
    if (descriptor instanceof AndroidAnyTagDescriptor) {
      final XmlToken startTagNameElement=XmlTagUtil.getStartTagNameElement(tag);
      if (startTagNameElement != null) {
        myResult.add(myInspectionManager.createProblemDescriptor(startTagNameElement,XmlErrorMessages.message("element.is.not.allowed.here",tag.getName()),myOnTheFly,LocalQuickFix.EMPTY_ARRAY,ProblemHighlightType.GENERIC_ERROR_OR_WARNING));
      }
      final XmlToken endTagNameElement=XmlTagUtil.getEndTagNameElement(tag);
      if (endTagNameElement != null) {
        myResult.add(myInspectionManager.createProblemDescriptor(endTagNameElement,XmlErrorMessages.message("element.is.not.allowed.here",tag.getName()),myOnTheFly,LocalQuickFix.EMPTY_ARRAY,ProblemHighlightType.GENERIC_ERROR_OR_WARNING));
      }
    }
  }
}
