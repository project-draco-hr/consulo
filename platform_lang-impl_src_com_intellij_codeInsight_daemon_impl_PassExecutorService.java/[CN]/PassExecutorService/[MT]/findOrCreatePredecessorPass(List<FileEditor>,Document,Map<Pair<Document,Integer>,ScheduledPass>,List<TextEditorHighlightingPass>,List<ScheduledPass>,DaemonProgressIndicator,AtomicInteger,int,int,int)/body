{
  Pair<Document,Integer> predkey=Pair.create(document,predecessorId);
  ScheduledPass predecessor=toBeSubmitted.get(predkey);
  if (predecessor == null) {
    TextEditorHighlightingPass textEditorPass=findPassById(predecessorId,textEditorHighlightingPasses);
    if (textEditorPass == null && predecessorId == Pass.UPDATE_VISIBLE && passId != Pass.UPDATE_ALL && findPassById(Pass.UPDATE_ALL,textEditorHighlightingPasses) != null) {
      return findOrCreatePredecessorPass(fileEditors,document,toBeSubmitted,textEditorHighlightingPasses,freePasses,updateProgress,myThreadsToStartCountdown,jobPriority,Pass.UPDATE_ALL,passId);
    }
    predecessor=textEditorPass == null ? null : createScheduledPass(fileEditors,textEditorPass,toBeSubmitted,textEditorHighlightingPasses,freePasses,updateProgress,myThreadsToStartCountdown,jobPriority);
  }
  return predecessor;
}
