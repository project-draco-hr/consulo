{
  final CompileContext context=new CompileContext(scope,myProjectName,isMake,myMappings,myProductionChunks,myTestChunks,new MessageHandler(){
    public void processMessage(    BuildMessage msg){
      for (      MessageHandler h : myMessageHandlers) {
        h.processMessage(msg);
      }
    }
  }
);
  try {
    cleanOutputRoots(scope,context);
    runTasks(context,myBuilderRegistry.getBeforeTasks());
    context.setCompilingTests(false);
    buildChunks(context,myProductionChunks);
    context.setCompilingTests(true);
    buildChunks(context,myTestChunks);
    runTasks(context,myBuilderRegistry.getAfterTasks());
  }
 catch (  ProjectBuildException e) {
    context.processMessage(new ProgressMessage(e.getMessage()));
  }
 finally {
    context.getBuildDataManager().close();
    final File mappingsDataFile=Paths.getMappingsStorageFile(myProjectName);
    try {
      FileUtil.createIfDoesntExist(mappingsDataFile);
      final BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(new DeflaterOutputStream(new FileOutputStream(mappingsDataFile))));
      try {
        context.getMappings().write(writer);
      }
  finally {
        writer.close();
      }
    }
 catch (    IOException e) {
      context.processMessage(new CompilerMessage(JPS_SERVER_NAME,BuildMessage.Kind.WARNING,e.getMessage()));
    }
  }
}
