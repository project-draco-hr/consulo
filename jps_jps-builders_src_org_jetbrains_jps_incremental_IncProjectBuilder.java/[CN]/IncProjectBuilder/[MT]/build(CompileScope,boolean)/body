{
  final CompileContext context=createContext(scope,isMake);
  try {
    try {
      runBuild(context);
    }
 catch (    ProjectBuildException e) {
      if (e.getCause() instanceof PersistentEnumerator.CorruptedException) {
        context.processMessage(new CompilerMessage(JPS_SERVER_NAME,BuildMessage.Kind.INFO,"Internal caches are corrupted or have outdated format, forcing project rebuild: " + e.getMessage()));
        runBuild(createContext(new CompileScope(scope.getProject()),false));
      }
 else {
        throw e;
      }
    }
  }
 catch (  ProjectBuildException e) {
    context.processMessage(new ProgressMessage(e.getMessage()));
  }
 finally {
    context.processMessage(new ProgressMessage("Build complete"));
    context.getBuildDataManager().close();
    final File mappingsDataFile=Paths.getMappingsStorageFile(myProjectName);
    try {
      FileUtil.createIfDoesntExist(mappingsDataFile);
      final BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(new DeflaterOutputStream(new FileOutputStream(mappingsDataFile))));
      try {
        context.getMappings().write(writer);
      }
  finally {
        writer.close();
      }
    }
 catch (    IOException e) {
      context.processMessage(new CompilerMessage(JPS_SERVER_NAME,BuildMessage.Kind.WARNING,e.getMessage()));
    }
  }
}
