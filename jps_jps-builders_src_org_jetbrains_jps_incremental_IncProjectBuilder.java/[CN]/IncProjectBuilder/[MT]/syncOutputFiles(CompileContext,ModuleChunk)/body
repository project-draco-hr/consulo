{
  final BuildDataManager dataManager=context.getDataManager();
  final boolean compilingTests=context.isCompilingTests();
  try {
    context.processFilesToRecompile(chunk,new FileProcessor(){
      private final Map<Module,SourceToOutputMapping> storageMap=new HashMap<Module,SourceToOutputMapping>();
      @Override public boolean apply(      Module module,      File file,      String sourceRoot) throws Exception {
        SourceToOutputMapping srcToOut=storageMap.get(module);
        if (srcToOut == null) {
          srcToOut=dataManager.getSourceToOutputMap(module.getName().toLowerCase(Locale.US),compilingTests);
          storageMap.put(module,srcToOut);
        }
        final String srcPath=FileUtil.toSystemIndependentName(file.getPath());
        final Collection<String> outputs=srcToOut.getState(srcPath);
        if (outputs != null) {
          for (          String output : outputs) {
            FileUtil.delete(new File(output));
          }
          srcToOut.remove(srcPath);
        }
        return true;
      }
    }
);
  }
 catch (  Exception e) {
    throw new ProjectBuildException(e);
  }
}
