{
  final ProjectDescriptor pd=context.getProjectDescriptor();
  final BuildFSState fsState=pd.fsState;
  fsState.clearContextRoundData(context);
  fsState.clearContextChunk(context);
  if (!Utils.errorsDetected(context) && !context.getCancelStatus().isCanceled()) {
    boolean marked=false;
    for (    ModuleBuildTarget target : chunk.getTargets()) {
      if (context.isMake()) {
        context.clearNonIncrementalMark(target);
      }
      if (context.isProjectRebuild()) {
        fsState.markInitialScanPerformed(target);
      }
      final Timestamps timestamps=pd.timestamps.getStorage();
      for (      RootDescriptor rd : pd.getBuildRootIndex().getTargetRoots(target,context)) {
        marked|=fsState.markAllUpToDate(context.getProjectDescriptor().jpsProject,context.getScope(),rd,timestamps,context.getCompilationStartStamp());
      }
    }
    if (marked) {
      context.processMessage(UptoDateFilesSavedEvent.INSTANCE);
    }
  }
}
