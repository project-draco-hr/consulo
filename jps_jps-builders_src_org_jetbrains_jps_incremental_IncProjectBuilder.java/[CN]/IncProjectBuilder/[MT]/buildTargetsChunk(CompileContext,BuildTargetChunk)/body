{
  Set<BuildTarget<?>> targets=chunk.getTargets();
  if (targets.size() > 1) {
    Set<ModuleBuildTarget> moduleTargets=new HashSet<ModuleBuildTarget>();
    for (    BuildTarget<?> target : targets) {
      if (target instanceof ModuleBuildTarget) {
        moduleTargets.add((ModuleBuildTarget)target);
      }
 else {
        context.processMessage(new CompilerMessage(BUILD_NAME,BuildMessage.Kind.ERROR,"Cannot build " + target.getPresentableName() + " because it is included into a circular dependency"));
        return;
      }
    }
    buildModuleChunk(context,new ModuleChunk(moduleTargets));
    return;
  }
  BuildTarget<?> target=targets.iterator().next();
  if (target instanceof ModuleBuildTarget) {
    ModuleBuildTarget moduleBuildTarget=(ModuleBuildTarget)target;
    buildModuleChunk(context,new ModuleChunk(Collections.singleton(moduleBuildTarget)));
  }
 else {
    try {
      buildTarget(target,context);
    }
 catch (    IOException e) {
      throw new ProjectBuildException(e);
    }
  }
}
