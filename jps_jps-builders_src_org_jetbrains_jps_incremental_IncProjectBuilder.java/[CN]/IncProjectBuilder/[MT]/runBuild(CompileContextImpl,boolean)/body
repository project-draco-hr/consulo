{
  context.setDone(0.0f);
  LOG.info("Building project '" + context.getProjectDescriptor().project.getProjectName() + "'; isRebuild:"+ context.isProjectRebuild()+ "; isMake:"+ context.isMake()+ " parallel compilation:"+ BuildRunner.PARALLEL_BUILD_ENABLED);
  for (  ProjectLevelBuilder builder : myBuilderRegistry.getProjectLevelBuilders()) {
    builder.buildStarted(context);
  }
  for (  ModuleLevelBuilder builder : myBuilderRegistry.getModuleLevelBuilders()) {
    builder.buildStarted(context);
  }
  try {
    if (context.isProjectRebuild() || forceCleanCaches) {
      cleanOutputRoots(context);
    }
    context.processMessage(new ProgressMessage("Running 'before' tasks"));
    runTasks(context,myBuilderRegistry.getBeforeTasks());
    context.setCompilingTests(false);
    context.processMessage(new ProgressMessage("Checking production sources"));
    buildChunks(context,myProductionChunks);
    if (context.getScope().isIncludeTests()) {
      context.setCompilingTests(true);
      context.processMessage(new ProgressMessage("Checking test sources"));
      buildChunks(context,myTestChunks);
    }
    context.processMessage(new ProgressMessage("Building project"));
    runProjectLevelBuilders(context);
    context.processMessage(new ProgressMessage("Running 'after' tasks"));
    runTasks(context,myBuilderRegistry.getAfterTasks());
  }
  finally {
    for (    ProjectLevelBuilder builder : myBuilderRegistry.getProjectLevelBuilders()) {
      builder.buildFinished(context);
    }
    for (    ModuleLevelBuilder builder : myBuilderRegistry.getModuleLevelBuilders()) {
      builder.buildFinished(context);
    }
    context.processMessage(new ProgressMessage("Finished, saving caches..."));
  }
}
