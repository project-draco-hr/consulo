{
  myContext=context;
  final ProjectDescriptor pd=myContext.getProjectDescriptor();
  final BuildTargetIndex targetIndex=pd.getBuildTargetIndex();
  List<BuildTargetChunk> chunks=targetIndex.getSortedTargetChunks(myContext);
  myTasks=new ArrayList<BuildChunkTask>(chunks.size());
  Map<BuildTarget<?>,BuildChunkTask> targetToTask=new THashMap<BuildTarget<?>,BuildChunkTask>();
  for (  BuildTargetChunk chunk : chunks) {
    BuildChunkTask task=new BuildChunkTask(chunk);
    myTasks.add(task);
    for (    BuildTarget<?> target : chunk.getTargets()) {
      targetToTask.put(target,task);
    }
  }
  for (  BuildChunkTask task : myTasks) {
    for (    BuildTarget<?> target : task.getChunk().getTargets()) {
      for (      BuildTarget<?> dependency : targetIndex.getDependencies(target,myContext)) {
        BuildChunkTask depTask=targetToTask.get(dependency);
        if (depTask != null && depTask != task) {
          task.addDependency(depTask);
        }
      }
    }
  }
  myTasksCountDown=new CountDownLatch(myTasks.size());
}
