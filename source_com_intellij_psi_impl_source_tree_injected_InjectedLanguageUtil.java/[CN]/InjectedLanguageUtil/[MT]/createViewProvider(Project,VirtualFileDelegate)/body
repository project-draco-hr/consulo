{
  return new SingleRootFileViewProvider(PsiManager.getInstance(project),virtualFile){
    public void rootChanged(    PsiFile psiFile){
      super.rootChanged(psiFile);
      PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
      DocumentRange documentRange=(DocumentRange)documentManager.getDocument(psiFile);
      String text=psiFile.getText();
      text=StringUtil.trimStart(text,documentRange.getPrefix());
      text=StringUtil.trimEnd(text,documentRange.getSuffix());
      PsiLanguageInjectionHost injectionHost=(PsiLanguageInjectionHost)psiFile.getContext();
      PsiFile hostFile=injectionHost.getContainingFile();
      TextRange hostTextRange=injectionHost.getTextRange();
      RangeMarker documentWindow=documentRange.getTextRange();
      TextRange rangeInsideHost=new TextRange(documentWindow.getStartOffset(),documentWindow.getEndOffset()).shiftRight(-hostTextRange.getStartOffset());
      String newHostText=StringUtil.replaceSubstring(injectionHost.getText(),rangeInsideHost,text);
      if (!newHostText.equals(injectionHost.getText())) {
        injectionHost.fixText(newHostText);
        PsiDocumentManagerImpl.checkConsistency(psiFile,documentRange);
        PsiDocumentManagerImpl.checkConsistency(hostFile,documentRange.getDelegate());
      }
    }
    public FileViewProvider clone(){
      DocumentRange oldDocumentRange=((VirtualFileDelegate)getVirtualFile()).getDocumentRange();
      RangeMarker documentWindow=oldDocumentRange.getTextRange();
      DocumentEx delegate=oldDocumentRange.getDelegate();
      PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
      PsiFile hostFile=documentManager.getPsiFile(delegate);
      PsiFile hostPsiFileCopy=(PsiFile)hostFile.copy();
      TextRange oldTextRange=new TextRange(documentWindow.getStartOffset(),documentWindow.getEndOffset());
      T newHost=(T)findInjectionHost(hostPsiFileCopy.findElementAt(oldDocumentRange.getTextRange().getStartOffset()));
      List<Pair<PsiElement,TextRange>> newInjected=newHost.getInjectedPsi();
      if (newInjected == null)       return null;
      for (      Pair<PsiElement,TextRange> pair : newInjected) {
        PsiElement psi=pair.getFirst();
        TextRange rangeInsideHost=pair.getSecond();
        TextRange injectedRange=newHost.getTextRange().cutOut(rangeInsideHost);
        if (injectedRange.equals(oldTextRange)) {
          PsiFile newFile=(PsiFile)psi;
          return newFile.getViewProvider();
        }
      }
      return null;
    }
  }
;
}
