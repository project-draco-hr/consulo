{
  List<Pair<IElementType,TextRange>> tokens=new SmartList<Pair<IElementType,TextRange>>();
  SyntaxHighlighter syntaxHighlighter=language.getSyntaxHighlighter(project,virtualFile);
  Lexer lexer=syntaxHighlighter.getHighlightingLexer();
  lexer.start(outChars,0,outChars.length(),0);
  for (IElementType tokenType; (tokenType=lexer.getTokenType()) != null; lexer.advance()) {
    TextRange textRange=new TextRange(lexer.getTokenStart(),lexer.getTokenEnd());
    TextRange editable=documentRange.intersectWithEditable(textRange);
    if (editable == null || editable.getLength() == 0)     continue;
    TextRange rangeInHost;
    if (textEscaper == null) {
      rangeInHost=textRange.shiftRight(rangeInsideHost.getStartOffset() - documentRange.getPrefix().length());
    }
 else {
      int startInHost=textEscaper.getOffsetInHost(editable.getStartOffset() - documentRange.getPrefix().length(),rangeInsideHost);
      int endInHost=textEscaper.getOffsetInHost(editable.getEndOffset() - documentRange.getPrefix().length(),rangeInsideHost);
      rangeInHost=new TextRange(startInHost,endInHost);
    }
    tokens.add(Pair.create(tokenType,rangeInHost));
  }
  return tokens;
}
