{
  List<DocumentRange> injected=getCachedInjectedDocuments(hostDocument);
  if (injected.isEmpty())   return;
  List<DocumentRange> oldInjected=new ArrayList<DocumentRange>(injected);
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  PsiFile hostPsiFile=documentManager.getPsiFile(hostDocument);
  for (  DocumentRange injDocument : oldInjected) {
    final PsiFileImpl oldFile=(PsiFileImpl)documentManager.getCachedPsiFile(injDocument);
    RangeMarker rangeMarker=injDocument.getTextRange();
    if (!rangeMarker.isValid() || oldFile == null) {
      injected.remove(injDocument);
    }
    PsiElement element=hostPsiFile.findElementAt(rangeMarker.getStartOffset());
    PsiLanguageInjectionHost injectionHost=findInjectionHost(element);
    if (injectionHost == null) {
      injected.remove(injDocument);
      continue;
    }
    List<Pair<PsiElement,TextRange>> result=injectionHost.getInjectedPsi();
    if (result != null) {
      for (      Pair<PsiElement,TextRange> pair : result) {
        PsiElement injectedPsi=pair.getFirst();
        PsiFile psiFile=(PsiFile)injectedPsi;
        PsiDocumentManagerImpl.checkConsistency(psiFile,psiFile.getViewProvider().getDocument());
      }
    }
  }
  PsiDocumentManagerImpl.checkConsistency(hostPsiFile,hostDocument);
}
