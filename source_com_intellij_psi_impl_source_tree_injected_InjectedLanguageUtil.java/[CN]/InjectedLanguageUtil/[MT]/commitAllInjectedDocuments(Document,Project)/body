{
  List<DocumentWindow> injected=getCachedInjectedDocuments(hostDocument);
  if (injected.isEmpty())   return;
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  PsiFile hostPsiFile=documentManager.getPsiFile(hostDocument);
  for (  DocumentWindow injDocument : injected) {
    final PsiFileImpl oldFile=(PsiFileImpl)documentManager.getCachedPsiFile(injDocument);
    if (!injDocument.isValid() || oldFile == null) {
      injected.remove(injDocument);
      continue;
    }
    RangeMarker rangeMarker=injDocument.getFirstTextRange();
    PsiElement element=hostPsiFile.findElementAt(rangeMarker.getStartOffset());
    PsiLanguageInjectionHost injectionHost=findInjectionHost(element);
    if (injectionHost == null) {
      injected.remove(injDocument);
      continue;
    }
    enumerate(injectionHost,new PsiLanguageInjectionHost.InjectedPsiVisitor(){
      public void visit(      @NotNull PsiFile injectedPsi,      @NotNull List<Pair<PsiLanguageInjectionHost,TextRange>> places){
        PsiDocumentManagerImpl.checkConsistency(injectedPsi,injectedPsi.getViewProvider().getDocument());
      }
    }
,true);
  }
  PsiDocumentManagerImpl.checkConsistency(hostPsiFile,hostDocument);
}
