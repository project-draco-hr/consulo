{
  for (PsiElement current=element; current != null; current=ResolveUtil.getContext(current)) {
    if ("EL".equals(element.getLanguage().getID()))     break;
    ParameterizedCachedValue<Places> data=current.getUserData(INJECTED_PSI_KEY);
    if (data != null) {
      Places value=data.getValue(current);
      if (value != null) {
        return value;
      }
    }
    CachedValueProvider.Result<Places> result=INJECTED_PSI_PROVIDER.compute(current);
    if (result != null) {
      ParameterizedCachedValue<Places> cachedValue=current.getManager().getCachedValuesManager().createParameterizedCachedValue(INJECTED_PSI_PROVIDER,false);
      ((ParameterizedCachedValueImpl<Places>)cachedValue).setValue(result);
      Places places=result.getValue();
      for (      Place place : places) {
        for (        PsiLanguageInjectionHost.Shred pair : place.myShreds) {
          pair.host.putUserData(INJECTED_PSI_KEY,cachedValue);
        }
      }
      current.putUserData(INJECTED_PSI_KEY,cachedValue);
      return places;
    }
    if (!probeUp)     break;
  }
  return null;
}
