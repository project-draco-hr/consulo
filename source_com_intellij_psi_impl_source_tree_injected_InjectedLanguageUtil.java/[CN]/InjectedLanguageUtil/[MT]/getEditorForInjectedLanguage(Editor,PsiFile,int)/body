{
  if (editor == null || file == null || editor instanceof EditorDelegate)   return editor;
  PsiDocumentManager.getInstance(file.getProject()).commitAllDocuments();
  PsiLanguageInjectionHost injectionHost=findInjectionHost(file.findElementAt(offset));
  if (injectionHost == null && offset != 0) {
    injectionHost=findInjectionHost(file.findElementAt(offset - 1));
  }
  List<Pair<PsiElement,TextRange>> injectedPsi=injectionHost == null ? null : injectionHost.getInjectedPsi();
  if (injectedPsi == null) {
    return editor;
  }
  TextRange hostRange=injectionHost.getTextRange();
  for (  Pair<PsiElement,TextRange> pair : injectedPsi) {
    TextRange range=pair.getSecond();
    if (hostRange.cutOut(range).grown(1).contains(offset)) {
      PsiFile injectedFile=pair.getFirst().getContainingFile();
      Document document=PsiDocumentManager.getInstance(editor.getProject()).getDocument(injectedFile);
      return new EditorDelegate((DocumentRange)document,(EditorImpl)editor,injectedFile);
    }
  }
  return editor;
}
