{
  if (myMethodCache != null && myInjectionConfiguration.getModificationCount() == myConfigurationModificationCount) {
    return myMethodCache;
  }
  myConfigurationModificationCount=myInjectionConfiguration.getModificationCount();
  final MultiValuesMap<Trinity<String,Integer,Integer>,MethodParameterInjection> tmpMap=new MultiValuesMap<Trinity<String,Integer,Integer>,MethodParameterInjection>();
  for (  MethodParameterInjection injection : myInjectionConfiguration.getParameterInjections()) {
    for (    MethodParameterInjection.MethodInfo info : injection.getMethodInfos()) {
      final boolean[] flags=info.getParamFlags();
      for (int i=0; i < flags.length; i++) {
        if (!flags[i])         continue;
        tmpMap.put(Trinity.create(info.getMethodName(),flags.length,i),injection);
      }
      if (info.isReturnFlag()) {
        tmpMap.put(Trinity.create(info.getMethodName(),0,-1),injection);
      }
    }
  }
  myMethodCache=tmpMap;
  return tmpMap;
}
