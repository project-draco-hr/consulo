{
  myTree=new Tree(new DefaultTreeModel(new DefaultMutableTreeNode()));
  myTree.setRootVisible(false);
  myTree.setShowsRootHandles(true);
  new LibraryRootsTreeSpeedSearch(myTree);
  myTree.setCellRenderer(new LibraryTreeRenderer());
  final MyTreeSelectionListener treeSelectionListener=new MyTreeSelectionListener();
  myTree.getSelectionModel().addTreeSelectionListener(treeSelectionListener);
  myTreeBuilder=new LibraryTableTreeBuilder(myTree,(DefaultTreeModel)myTree.getModel(),treeStructure);
  myTreePanel.setLayout(new BorderLayout());
  myTreePanel.add(ScrollPaneFactory.createScrollPane(myTree),BorderLayout.CENTER);
  final JPanel buttonsPanel=new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP,0,5,true,false));
  final List<? extends RootDetector> detectors=myDescriptor.getRootDetectors();
  if (!detectors.isEmpty()) {
    JButton button=new JButton(ProjectBundle.message("button.text.attach.files"));
    button.addActionListener(new AttachFilesListener(detectors));
    buttonsPanel.add(button);
  }
  for (  AttachRootButtonDescriptor descriptor : myDescriptor.createAttachButtons()) {
    JButton button=new JButton(descriptor.getButtonText());
    button.addActionListener(new AttachItemAction(descriptor));
    buttonsPanel.add(button);
  }
  myAttachButtonsPanel.add(buttonsPanel,BorderLayout.CENTER);
  myRemoveButton.addActionListener(new RemoveAction());
  final LibraryTableAttachHandler[] handlers=LibraryTableAttachHandler.EP_NAME.getExtensions();
  if (handlers.length == 0 || myProject == null || getLibraryEditor().getType() != null) {
    myAttachMoreButton.setVisible(false);
  }
 else {
    myAttachMoreButton.addActionListener(new AttachMoreAction(handlers));
    if (handlers.length == 1) {
      myAttachMoreButton.setText(handlers[0].getLongName());
    }
  }
  treeSelectionListener.updateButtons();
  Disposer.register(this,myTreeBuilder);
}
