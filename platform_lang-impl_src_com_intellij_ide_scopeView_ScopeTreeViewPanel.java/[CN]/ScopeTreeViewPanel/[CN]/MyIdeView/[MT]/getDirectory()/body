{
  final TreePath[] selectedPaths=myTree.getSelectionPaths();
  if (selectedPaths != null) {
    if (selectedPaths.length != 1)     return null;
    TreePath path=selectedPaths[0];
    final PackageDependenciesNode node=(PackageDependenciesNode)path.getLastPathComponent();
    if (!node.isValid())     return null;
    if (node instanceof DirectoryNode) {
      DirectoryNode directoryNode=(DirectoryNode)node;
      while (directoryNode.getCompactedDirNode() != null) {
        directoryNode=directoryNode.getCompactedDirNode();
        LOG.assertTrue(directoryNode != null);
      }
      return (PsiDirectory)directoryNode.getPsiElement();
    }
 else     if (node instanceof BasePsiNode) {
      final PsiElement psiElement=node.getPsiElement();
      LOG.assertTrue(psiElement != null);
      final PsiFile psiFile=psiElement.getContainingFile();
      LOG.assertTrue(psiFile != null);
      return psiFile.getContainingDirectory();
    }
 else     if (node instanceof FileNode) {
      final PsiFile psiFile=(PsiFile)node.getPsiElement();
      LOG.assertTrue(psiFile != null);
      return psiFile.getContainingDirectory();
    }
  }
  return null;
}
