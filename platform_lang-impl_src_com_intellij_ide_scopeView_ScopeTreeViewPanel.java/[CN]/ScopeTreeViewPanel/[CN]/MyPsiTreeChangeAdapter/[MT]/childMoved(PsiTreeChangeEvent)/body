{
  final PsiElement newParent=event.getNewParent();
  final PsiElement child=event.getChild();
  if (newParent instanceof PsiDirectory) {
    if (child instanceof PsiFileSystemItem && (!(child instanceof PsiFile) || !isInjected((PsiFile)child))) {
      final PsiFileSystemItem file=(PsiFileSystemItem)child;
      queueUpdate(new Runnable(){
        @Override public void run(){
          final VirtualFile virtualFile=file.getVirtualFile();
          if (virtualFile != null && virtualFile.isValid()) {
            final PsiFileSystemItem newFile=file.isValid() ? file : (file.isDirectory() ? PsiManager.getInstance(myProject).findDirectory(virtualFile) : PsiManager.getInstance(myProject).findFile(virtualFile));
            if (newFile != null) {
              final PackageDependenciesNode rootToReload=newFile.isDirectory() ? myBuilder.addDirNode((PsiDirectory)newFile) : myBuilder.addFileNode((PsiFile)newFile);
              if (rootToReload != null) {
                reload(rootToReload);
              }
            }
          }
        }
      }
,true);
    }
  }
}
