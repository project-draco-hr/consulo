{
  if (oldElement == null || newElement != null && newElement.getModuleElements().isEmpty())   return;
  ModuleManager moduleManager=ModuleManager.getInstance(myProject);
  List<Module> modulesToProcess=new ArrayList<Module>();
  List<DisabledAutodetectionInModuleElement> moduleElements=oldElement.getModuleElements();
  for (  DisabledAutodetectionInModuleElement moduleElement : moduleElements) {
    if (moduleElement.isDisableInWholeModule()) {
      Module module=moduleManager.findModuleByName(moduleElement.getModuleName());
      if (module != null) {
        modulesToProcess.add(module);
      }
    }
 else {
      for (      String url : moduleElement.getFiles()) {
        if (newElement == null || !newElement.isDisabled(moduleElement.getModuleName(),url)) {
          addFile(facetType,url);
        }
      }
      for (      String directoryUrl : moduleElement.getDirectories()) {
        if (newElement == null || !newElement.isDisabled(moduleElement.getModuleName(),directoryUrl)) {
          addFile(facetType,directoryUrl);
        }
      }
    }
  }
  if (moduleElements.isEmpty()) {
    ContainerUtil.addAll(modulesToProcess,moduleManager.getModules());
  }
  if (newElement != null) {
    Set<String> toRemove=new THashSet<String>();
    for (    DisabledAutodetectionInModuleElement moduleElement : newElement.getModuleElements()) {
      if (moduleElement.isDisableInWholeModule()) {
        toRemove.add(moduleElement.getModuleName());
      }
    }
    Iterator<Module> iterator=modulesToProcess.iterator();
    while (iterator.hasNext()) {
      Module module=iterator.next();
      if (toRemove.contains(module.getName())) {
        iterator.remove();
      }
    }
  }
  if (!modulesToProcess.isEmpty()) {
    myModulesToProcess.putAll(facetType,modulesToProcess);
  }
}
