{
  final SmartPointerManager smartPointerManager=SmartPointerManager.getInstance(_element.getProject());
  return new DocumentationCollector(){
    private final SmartPsiElementPointer element=smartPointerManager.createSmartPsiElementPointer(_element);
    private final SmartPsiElementPointer original=originalElement == null ? null : smartPointerManager.createSmartPsiElementPointer(originalElement);
    @Nullable public String getDocumentation() throws Exception {
      PsiElement element1=element.getElement();
      final DocumentationProvider provider=getProviderFromElement(element1,original == null ? null : original.getElement());
      if (provider != null && myParameterInfoController != null) {
        final Object[] objects=myParameterInfoController.getSelectedElements();
        if (objects.length > 0) {
          @NonNls StringBuffer sb=null;
          for (          Object o : objects) {
            PsiElement parameter=null;
            if (o instanceof PsiElement) {
              parameter=(PsiElement)o;
            }
            if (parameter != null) {
              final SmartPsiElementPointer originalElement=parameter.getUserData(ORIGINAL_ELEMENT_KEY);
              final String str2=provider.generateDoc(parameter,originalElement != null ? originalElement.getElement() : null);
              if (str2 == null)               continue;
              if (sb == null)               sb=new StringBuffer();
              sb.append(str2);
              sb.append("<br>");
            }
 else {
              sb=null;
              break;
            }
          }
          if (sb != null)           return sb.toString();
        }
      }
      final SmartPsiElementPointer originalElement=element1 != null ? element1.getUserData(ORIGINAL_ELEMENT_KEY) : null;
      return provider != null ? provider.generateDoc(element1,originalElement != null ? originalElement.getElement() : null) : null;
    }
    @Nullable public PsiElement getElement(){
      return element.getElement();
    }
  }
;
}
