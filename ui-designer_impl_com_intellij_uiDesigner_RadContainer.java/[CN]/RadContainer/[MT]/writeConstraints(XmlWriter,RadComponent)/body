{
  if (child == null) {
    throw new IllegalArgumentException("child cannot be null");
  }
  if (child.getParent() != this) {
    throw new IllegalArgumentException("parent mismatch: " + child.getParent());
  }
  writer.startElement("xy");
  try {
    writer.addAttribute("x",child.getX());
    writer.addAttribute("y",child.getY());
    writer.addAttribute("width",child.getWidth());
    writer.addAttribute("height",child.getHeight());
  }
  finally {
    writer.endElement();
  }
  writer.startElement("grid");
  try {
    final GridConstraints constraints=child.getConstraints();
    writer.addAttribute("row",constraints.getRow());
    writer.addAttribute("column",constraints.getColumn());
    writer.addAttribute("row-span",constraints.getRowSpan());
    writer.addAttribute("col-span",constraints.getColSpan());
    writer.addAttribute("vsize-policy",constraints.getVSizePolicy());
    writer.addAttribute("hsize-policy",constraints.getHSizePolicy());
    writer.addAttribute("anchor",constraints.getAnchor());
    writer.addAttribute("fill",constraints.getFill());
    writer.writeDimension(constraints.myMinimumSize,"minimum-size");
    writer.writeDimension(constraints.myPreferredSize,"preferred-size");
    writer.writeDimension(constraints.myMaximumSize,"maximum-size");
  }
  finally {
    writer.endElement();
  }
}
