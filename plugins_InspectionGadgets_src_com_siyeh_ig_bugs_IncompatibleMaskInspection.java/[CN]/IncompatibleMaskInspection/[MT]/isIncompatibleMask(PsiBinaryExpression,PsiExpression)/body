{
  final PsiJavaToken sign=maskExpression.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  final Object constantValue=ConstantExpressionUtil.computeCastTo(constantExpression,PsiType.LONG);
  if (constantValue == null) {
    return false;
  }
  final long constantLongValue=((Long)constantValue).longValue();
  final long constantMaskValue;
  final PsiExpression maskRhs=maskExpression.getROperand();
  final PsiExpression maskLhs=maskExpression.getLOperand();
  if (isConstant(maskRhs)) {
    final Object rhsValue=ConstantExpressionUtil.computeCastTo(maskRhs,PsiType.LONG);
    constantMaskValue=((Long)rhsValue).longValue();
  }
 else {
    final Object lhsValue=ConstantExpressionUtil.computeCastTo(maskLhs,PsiType.LONG);
    constantMaskValue=((Long)lhsValue).longValue();
  }
  if (tokenType.equals(JavaTokenType.OR)) {
    if ((constantMaskValue | constantLongValue) != constantLongValue) {
      return true;
    }
  }
  if (tokenType.equals(JavaTokenType.AND)) {
    if ((constantMaskValue | constantLongValue) != constantMaskValue) {
      return true;
    }
  }
  return false;
}
