{
  final PsiElement psiElement=descriptor.getPsiElement();
  if (!psiElement.isValid())   return;
  if (!CodeInsightUtilBase.prepareFileForWrite(psiElement.getContainingFile()))   return;
  if (psiElement instanceof XmlToken) {
    PsiElement target=null;
    final String text=psiElement.getText();
    if (!myTargetName.equals(text)) {
      target=psiElement;
    }
 else {
      PsiElement parent=psiElement.getParent();
      if (parent instanceof PsiErrorElement) {
        parent=parent.getParent();
      }
      if (parent instanceof XmlTag) {
        if (myStart) {
          target=XmlTagUtil.getStartTagNameElement((XmlTag)parent);
        }
 else {
          target=XmlTagUtil.getEndTagNameElement((XmlTag)parent);
          if (target == null) {
            final PsiErrorElement errorElement=PsiTreeUtil.getChildOfType(parent,PsiErrorElement.class);
            target=XmlWrongClosingTagNameInspection.findEndTagName(errorElement);
          }
        }
      }
    }
    if (target != null) {
      try {
        final XmlTag newTag=XmlElementFactory.getInstance(project).createTagFromText("<" + myTargetName + "/>");
        target.replace(newTag.getChildren()[1]);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
}
