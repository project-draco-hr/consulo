{
  if (element == null) {
    return null;
  }
  if (element.getParent() instanceof PsiModifierList)   return (PsiModifierList)element.getParent();
  final PsiElement prev=FilterPositionUtil.searchNonSpaceNonCommentBack(element);
  if (prev != null) {
    final PsiModifierList modifierList=PsiTreeUtil.getParentOfType(prev,PsiModifierList.class);
    if (modifierList != null) {
      return modifierList;
    }
  }
  PsiElement parent=element.getParent();
  while (parent != null && (parent instanceof PsiJavaCodeReferenceElement || parent instanceof PsiErrorElement || parent instanceof PsiTypeElement|| parent instanceof PsiMethod|| parent instanceof PsiVariable|| parent instanceof PsiDeclarationStatement|| parent instanceof PsiImportList|| parent instanceof PsiDocComment|| element.getText().equals(parent.getText()))) {
    parent=parent.getParent();
    if (parent instanceof JspClassLevelDeclarationStatement) {
      parent=parent.getContext();
    }
  }
  if (parent == null)   throw new Exception();
  for (  final Object o : myMap.keySet()) {
    final ElementFilter filter=(ElementFilter)o;
    if (filter.isClassAcceptable(parent.getClass()) && filter.isAcceptable(parent,parent.getParent())) {
      if (prev == null || JavaCompletionData.END_OF_BLOCK.isAcceptable(element,prev.getParent())) {
        return null;
      }
    }
  }
  throw new Exception("Can't find modifier list");
}
