{
  boolean success=true;
  final File dataStorageRoot=context.getProjectDescriptor().dataManager.getDataStorageRoot();
  final boolean releaseBuild=AndroidJpsUtil.isReleaseBuild(context);
  AndroidFileSetStorage resourcesStorage=null;
  AndroidFileSetStorage assetsStorage=null;
  TimestampStorage manifestStorage=null;
  try {
    final String resourcesStorageName=releaseBuild ? "resources_packaging_release" : "resources_packaging_dev";
    resourcesStorage=new AndroidFileSetStorage(dataStorageRoot,resourcesStorageName);
    final String assetsStorageName=releaseBuild ? "assets_packaging_release" : "assets_packaging_dev";
    assetsStorage=new AndroidFileSetStorage(dataStorageRoot,assetsStorageName);
    final String manifestStorageName=releaseBuild ? "manifest_packaging_release" : "manifest_packaging_dev";
    manifestStorage=new TimestampStorage(AndroidJpsUtil.getStorageFile(dataStorageRoot,manifestStorageName),context.getProjectDescriptor().getTargetsState());
    final Set<JpsModule> modulesToUpdateState=new HashSet<JpsModule>();
    for (    JpsModule module : modules) {
      final JpsAndroidModuleExtension extension=AndroidJpsUtil.getExtension(module);
      if (extension == null) {
        continue;
      }
      final File manifestFile=manifestFiles.get(module);
      if (manifestFile == null) {
        context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.ERROR,AndroidJpsBundle.message("android.jps.errors.manifest.not.found",module.getName())));
        success=false;
        continue;
      }
      boolean updateState=true;
      if (!extension.isLibrary() && !(context.isMake() && checkUpToDate(module,resourcesStates,resourcesStorage) && checkUpToDate(module,assetsStates,assetsStorage)&& manifestFile.lastModified() == manifestStorage.getStamp(manifestFile,new ModuleBuildTarget(module,JavaModuleBuildTargetType.PRODUCTION)))) {
        updateState=packageResources(extension,manifestFile,context);
        if (!updateState) {
          success=false;
        }
      }
      if (updateState) {
        modulesToUpdateState.add(module);
      }
    }
    for (    JpsModule module : modules) {
      final boolean updateState=modulesToUpdateState.contains(module);
      resourcesStorage.update(module.getName(),updateState ? resourcesStates.get(module) : null);
      assetsStorage.update(module.getName(),updateState ? assetsStates.get(module) : null);
      final File manifestFile=manifestFiles.get(module);
      if (manifestFile != null) {
        manifestStorage.saveStamp(manifestFile,new ModuleBuildTarget(module,JavaModuleBuildTargetType.PRODUCTION),manifestFile.lastModified());
      }
    }
  }
  finally {
    if (resourcesStorage != null) {
      resourcesStorage.close();
    }
    if (assetsStorage != null) {
      assetsStorage.close();
    }
    if (manifestStorage != null) {
      manifestStorage.close();
    }
  }
  return success;
}
