{
  final Module module=facet.getModule();
  try {
    final File manifestFile=AndroidJpsUtil.getManifestFileForCompilationPath(facet);
    if (manifestFile == null) {
      context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.ERROR,AndroidJpsBundle.message("android.jps.errors.manifest.not.found",module.getName())));
      return false;
    }
    final File assetsDir=facet.getAssetsDir();
    final File outputDir=AndroidJpsUtil.getOutputDirectoryForPackagedFiles(context.getProjectPaths(),module);
    if (outputDir == null) {
      context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.ERROR,AndroidJpsBundle.message("android.jps.errors.output.dir.not.specified",module.getName())));
      return false;
    }
    final Pair<AndroidSdk,IAndroidTarget> pair=AndroidJpsUtil.getAndroidPlatform(module,context,BUILDER_NAME);
    if (pair == null) {
      return false;
    }
    final IAndroidTarget target=pair.getSecond();
    final String outputFilePath=getOutputFile(module,outputDir).getPath();
    final String assetsDirPath=assetsDir != null ? assetsDir.getPath() : null;
    final String[] resourceDirPaths=AndroidJpsUtil.collectResourceDirs(facet);
    if (resourceDirPaths.length == 0) {
      return true;
    }
    return doPackageResources(context,manifestFile,target,resourceDirPaths,assetsDirPath,outputFilePath,false);
  }
 catch (  IOException e) {
    AndroidJpsUtil.reportExceptionError(context,null,e,BUILDER_NAME);
    return false;
  }
}
