{
  if (context.isMake()) {
    final AndroidFileSetState savedState=storage.getState(module.getName());
    if (savedState != null && savedState.equalsTo(state)) {
      return true;
    }
  }
  final JpsAndroidModuleExtension extension=AndroidJpsUtil.getExtension(module);
  if (extension == null) {
    return true;
  }
  context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.INFO,AndroidJpsBundle.message("android.jps.progress.res.caching",module.getName())));
  final File resourceDir=AndroidJpsUtil.getResourceDirForCompilationPath(extension);
  if (resourceDir == null) {
    return true;
  }
  final AndroidPlatform platform=AndroidJpsUtil.getAndroidPlatform(module,context,BUILDER_NAME);
  if (platform == null) {
    return false;
  }
  final File resCacheDir=AndroidJpsUtil.getResourcesCacheDir(context,module);
  if (context.isProjectRebuild() && resCacheDir.exists()) {
    if (!FileUtil.delete(resCacheDir)) {
      context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.ERROR,AndroidJpsBundle.message("android.jps.cannot.create.directory",resCacheDir.getPath())));
      return false;
    }
  }
  if (!resCacheDir.exists()) {
    if (!resCacheDir.mkdirs()) {
      context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.ERROR,AndroidJpsBundle.message("android.jps.cannot.create.directory",resCacheDir.getPath())));
      return false;
    }
  }
  final IAndroidTarget target=platform.getTarget();
  final Map<AndroidCompilerMessageKind,List<String>> messages=AndroidApt.crunch(target,Collections.singletonList(resourceDir.getPath()),resCacheDir.getPath());
  AndroidJpsUtil.addMessages(context,messages,BUILDER_NAME,module.getName());
  final boolean success=messages.get(AndroidCompilerMessageKind.ERROR).isEmpty();
  storage.update(module.getName(),success ? state : null);
  return success;
}
