{
  final LibrariesModifiableModel modifiableModel=myModelProvider.getModifiableModel();
  final String initial=LibraryEditingUtil.suggestNewLibraryName(modifiableModel);
  final String prompt=ProjectBundle.message("library.name.prompt");
  final String title=ProjectBundle.message("library.create.library.action").replaceAll(String.valueOf(UIUtil.MNEMONIC),"");
  final Icon icon=Messages.getQuestionIcon();
  final String libraryName=Messages.showInputDialog(myProject,prompt,title,icon,initial,new InputValidator(){
    public boolean checkInput(    final String inputString){
      return true;
    }
    public boolean canClose(    final String inputString){
      if (inputString.length() == 0) {
        Messages.showErrorDialog(ProjectBundle.message("library.name.not.specified.error"),ProjectBundle.message("library.name.not.specified.title"));
        return false;
      }
      if (LibraryEditingUtil.libraryAlreadyExists(modifiableModel,inputString)) {
        Messages.showErrorDialog(ProjectBundle.message("library.name.already.exists.error",inputString),ProjectBundle.message("library.name.already.exists.title"));
        return false;
      }
      return true;
    }
  }
);
  if (libraryName == null)   return;
  final Library library=modifiableModel.createLibrary(libraryName);
  if (myProject != null) {
    final BaseLibrariesConfigurable rootConfigurable=ProjectStructureConfigurable.getInstance(myProject).getConfigurableFor(library);
    final ExistingLibraryEditor libraryEditor=modifiableModel.getLibraryEditor(library);
    if (libraryEditor.hasChanges()) {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          libraryEditor.commit();
        }
      }
);
    }
    final DefaultMutableTreeNode libraryNode=MasterDetailsComponent.findNodeByObject((TreeNode)rootConfigurable.getTree().getModel().getRoot(),library);
    rootConfigurable.selectNodeInTree(libraryNode);
    appendLibraryToModules(ModuleStructureConfigurable.getInstance(myProject),library);
  }
}
