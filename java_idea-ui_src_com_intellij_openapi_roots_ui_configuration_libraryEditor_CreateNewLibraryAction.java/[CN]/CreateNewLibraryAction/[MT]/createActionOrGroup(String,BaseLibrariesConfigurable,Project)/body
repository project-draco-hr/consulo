{
  final LibraryType<?>[] extensions=LibraryType.EP_NAME.getExtensions();
  List<LibraryType<?>> suitableTypes=new ArrayList<LibraryType<?>>();
  if (librariesConfigurable instanceof ProjectLibrariesConfigurable) {
    final ModuleStructureConfigurable configurable=ModuleStructureConfigurable.getInstance(project);
    for (    LibraryType<?> extension : extensions) {
      if (!LibraryEditingUtil.getSuitableModules(configurable,extension.getKind(),null).isEmpty()) {
        suitableTypes.add(extension);
      }
    }
  }
 else {
    Collections.addAll(suitableTypes,extensions);
  }
  if (suitableTypes.isEmpty()) {
    return new AnAction[]{new CreateNewLibraryAction(text,PlatformIcons.LIBRARY_ICON,null,librariesConfigurable,project)};
  }
  List<AnAction> actions=new ArrayList<AnAction>();
  actions.add(new CreateNewLibraryAction(IdeBundle.message("create.default.library.type.action.name"),PlatformIcons.LIBRARY_ICON,null,librariesConfigurable,project));
  for (  LibraryType<?> type : suitableTypes) {
    final String actionName=type.getCreateActionName();
    if (actionName != null) {
      actions.add(new CreateNewLibraryAction(actionName,type.getIcon(),type,librariesConfigurable,project));
    }
  }
  return actions.toArray(new AnAction[actions.size()]);
}
