{
  if (myProject.isDisposed()) {
    return;
  }
  if (!StartupManagerEx.getInstanceEx(myProject).postStartupActivityPassed()) {
    return;
  }
  for (  ToolWindowEP ep : ToolWindowEP.EP_NAME.getExtensions()) {
    Class<? extends ToolWindowFactory> aClass=ep.getFactoryClass();
    if (MvcToolWindowDescriptor.class.isAssignableFrom(aClass)) {
      final MvcToolWindowDescriptor descriptor=(MvcToolWindowDescriptor)ep.getToolWindowFactory();
      final String id=descriptor.getToolWindowId();
      final boolean shouldShow=MvcModuleStructureUtil.hasModulesWithSupport(myProject,descriptor.getFramework());
      final ToolWindowManager toolWindowManager=ToolWindowManager.getInstance(myProject);
      ToolWindow toolWindow=toolWindowManager.getToolWindow(id);
      if (shouldShow && toolWindow == null) {
        toolWindow=toolWindowManager.registerToolWindow(id,true,ToolWindowAnchor.LEFT,myProject,true);
        descriptor.createToolWindowContent(myProject,toolWindow);
      }
 else       if (!shouldShow && toolWindow != null) {
        toolWindowManager.unregisterToolWindow(id);
        Disposer.dispose(toolWindow.getContentManager());
      }
    }
  }
}
