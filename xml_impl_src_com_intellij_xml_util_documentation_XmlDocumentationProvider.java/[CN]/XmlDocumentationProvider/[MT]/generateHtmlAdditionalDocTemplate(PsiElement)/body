{
  StringBuilder buf=new StringBuilder();
  final PsiFile containingFile=element.getContainingFile();
  if (containingFile != null) {
    final XmlTag tag=PsiTreeUtil.getParentOfType(element,XmlTag.class,false);
    boolean append;
    if (tag instanceof HtmlTag) {
      append=true;
    }
 else {
      final FileViewProvider provider=containingFile.getViewProvider();
      Language language;
      if (provider instanceof TemplateLanguageFileViewProvider) {
        language=((TemplateLanguageFileViewProvider)provider).getTemplateDataLanguage();
      }
 else {
        language=provider.getBaseLanguage();
      }
      append=language == XHTMLLanguage.INSTANCE;
    }
    if (tag != null) {
      EntityDescriptor descriptor=HtmlDescriptorsTable.getTagDescriptor(tag.getName());
      if (descriptor != null && append) {
        buf.append("<br>");
        buf.append(XmlBundle.message("html.quickdoc.additional.template",HtmlDocumentationProvider.getBaseHtmlExtDocUrl() + descriptor.getHelpRef(),BASE_SITEPOINT_URL + tag.getName()));
      }
    }
  }
  return buf.toString();
}
