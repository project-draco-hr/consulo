{
  if (element instanceof XmlElementDecl) {
    PsiElement curElement=findPreviousComment(element);
    if (curElement != null) {
      return formatDocFromComment(curElement,((XmlElementDecl)element).getNameElement().getText());
    }
  }
 else   if (element instanceof XmlTag) {
    XmlTag tag=(XmlTag)element;
    MyPsiElementProcessor processor=new MyPsiElementProcessor();
    XmlUtil.processXmlElements(tag,processor,true);
    String name=tag.getAttributeValue(NAME_ATTR_NAME);
    String typeName=null;
    if (processor.result == null) {
      XmlTag declaration=getComplexTypeDefinition(element,originalElement);
      if (declaration != null) {
        XmlUtil.processXmlElements(declaration,processor,true);
        name=declaration.getAttributeValue(NAME_ATTR_NAME);
        typeName=declaration.getName();
      }
    }
    return generateDoc(processor.result,name,typeName);
  }
 else   if (element instanceof XmlAttributeDecl) {
    final PsiElement parent=element.getParent();
    final PsiElement previousComment=findPreviousComment(parent);
    final String referenceName=((XmlAttributeDecl)element).getNameElement().getText();
    if (previousComment instanceof PsiComment) {
      final PsiElement prevSibling=previousComment.getPrevSibling();
      if (prevSibling == null || (prevSibling instanceof PsiWhiteSpace && prevSibling.getText().indexOf('\n') >= 0)) {
        return formatDocFromComment(previousComment,referenceName);
      }
    }
    return findDocRightAfterElement(parent,referenceName);
  }
 else   if (element instanceof XmlEntityDecl) {
    final XmlEntityDecl entityDecl=(XmlEntityDecl)element;
    return findDocRightAfterElement(element,entityDecl.getName());
  }
  return null;
}
