{
  if (element instanceof XmlElementDecl) {
    PsiElement curElement=findPreviousComment(element);
    if (curElement != null) {
      return formatDocFromComment(curElement,((XmlElementDecl)element).getNameElement().getText());
    }
  }
 else   if (element instanceof XmlTag) {
    XmlTag tag=(XmlTag)element;
    MyPsiElementProcessor processor=new MyPsiElementProcessor();
    String name=tag.getAttributeValue(NAME_ATTR_NAME);
    String typeName=null;
    if (originalElement != null && originalElement.getParent() instanceof XmlAttributeValue) {
      String toSearch=StringUtil.stripQuotesAroundValue(originalElement.getText());
      XmlTag enumerationTag;
      if (XmlUtil.ENUMERATION_TAG_NAME.equals(tag.getLocalName())) {
        enumerationTag=tag;
        name=enumerationTag.getAttributeValue(XmlUtil.VALUE_ATTR_NAME);
      }
 else {
        enumerationTag=findEnumerationValue(toSearch,tag);
        name=toSearch;
      }
      if (enumerationTag != null) {
        XmlUtil.processXmlElements(enumerationTag,processor,true);
        if (processor.result != null) {
          typeName=XmlBundle.message("xml.javadoc.enumeration.value.message");
        }
      }
    }
    if (processor.result == null)     XmlUtil.processXmlElements(tag,processor,true);
    if (processor.result == null) {
      XmlTag declaration=getComplexOrSimpleTypeDefinition(element,originalElement);
      if (declaration != null) {
        XmlUtil.processXmlElements(declaration,processor,true);
        name=declaration.getAttributeValue(NAME_ATTR_NAME);
        typeName=XmlBundle.message("xml.javadoc.complex.type.message");
      }
    }
    if (processor.result == null) {
      final PsiElement comment=findPreviousComment(element);
      if (comment != null) {
        return formatDocFromComment(comment,((XmlTag)element).getName());
      }
    }
    String doc=generateDoc(processor.result,name,typeName,processor.version);
    if (doc != null && originalElement != null) {
      doc+=generateHtmlAdditionalDocTemplate(originalElement);
    }
    return doc;
  }
 else   if (element instanceof XmlAttributeDecl) {
    final PsiElement parent=element.getParent();
    final PsiElement previousComment=findPreviousComment(parent);
    final String referenceName=((XmlAttributeDecl)element).getNameElement().getText();
    if (previousComment instanceof PsiComment) {
      final PsiElement prevSibling=previousComment.getPrevSibling();
      if (prevSibling == null || (prevSibling instanceof PsiWhiteSpace && prevSibling.getText().indexOf('\n') >= 0)) {
        return formatDocFromComment(previousComment,referenceName);
      }
    }
    return findDocRightAfterElement(parent,referenceName);
  }
 else   if (element instanceof XmlEntityDecl) {
    final XmlEntityDecl entityDecl=(XmlEntityDecl)element;
    return findDocRightAfterElement(element,entityDecl.getName());
  }
  return null;
}
