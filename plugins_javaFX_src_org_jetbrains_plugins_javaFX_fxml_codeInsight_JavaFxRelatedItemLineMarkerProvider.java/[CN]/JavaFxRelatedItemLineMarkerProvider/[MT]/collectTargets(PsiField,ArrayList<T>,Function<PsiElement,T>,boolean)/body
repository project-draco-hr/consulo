{
  final PsiClass containingClass=field.getContainingClass();
  LOG.assertTrue(containingClass != null);
  final String qualifiedName=containingClass.getQualifiedName();
  LOG.assertTrue(qualifiedName != null);
  final List<VirtualFile> fxmls=JavaFxControllerClassIndex.findFxmlsWithController(field.getProject(),qualifiedName);
  if (fxmls.isEmpty())   return;
  ReferencesSearch.search(field,GlobalSearchScope.filesScope(field.getProject(),fxmls)).forEach(new Processor<PsiReference>(){
    @Override public boolean process(    PsiReference reference){
      final PsiElement referenceElement=reference.getElement();
      if (referenceElement == null)       return true;
      final PsiFile containingFile=referenceElement.getContainingFile();
      if (containingFile == null)       return true;
      if (!JavaFxFileTypeFactory.isFxml(containingFile))       return true;
      if (!(referenceElement instanceof XmlAttributeValue))       return true;
      final XmlAttributeValue attributeValue=(XmlAttributeValue)referenceElement;
      final PsiElement parent=attributeValue.getParent();
      if (!(parent instanceof XmlAttribute))       return true;
      targets.add(fun.fun(parent));
      return !stopAtFirst;
    }
  }
);
}
