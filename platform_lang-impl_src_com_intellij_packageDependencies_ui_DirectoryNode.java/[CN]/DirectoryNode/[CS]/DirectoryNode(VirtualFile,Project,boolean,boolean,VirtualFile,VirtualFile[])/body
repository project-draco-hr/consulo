{
  super(project);
  myVDirectory=aDirectory;
  final ProjectRootManager projectRootManager=ProjectRootManager.getInstance(project);
  final ProjectFileIndex index=projectRootManager.getFileIndex();
  String dirName=aDirectory.getName();
  if (showFQName) {
    final VirtualFile contentRoot=index.getContentRootForFile(myVDirectory);
    if (contentRoot != null) {
      if (myVDirectory == contentRoot) {
        myFQName=dirName;
      }
 else {
        final VirtualFile sourceRoot=index.getSourceRootForFile(myVDirectory);
        if (myVDirectory == sourceRoot) {
          myFQName=VfsUtil.getRelativePath(myVDirectory,contentRoot,'/');
        }
 else         if (sourceRoot != null) {
          myFQName=VfsUtil.getRelativePath(myVDirectory,sourceRoot,'/');
        }
 else {
          myFQName=VfsUtil.getRelativePath(myVDirectory,contentRoot,'/');
        }
      }
    }
 else {
      myFQName=FilePatternPackageSet.getLibRelativePath(myVDirectory,index);
    }
    dirName=myFQName;
  }
 else {
    if (contentRoots.length > 1 && ProjectRootsUtil.isModuleContentRoot(myVDirectory,project)) {
      if (baseDir != null) {
        if (myVDirectory != baseDir) {
          if (VfsUtil.isAncestor(baseDir,myVDirectory,false)) {
            dirName=VfsUtil.getRelativePath(myVDirectory,baseDir,'/');
          }
 else {
            dirName=myVDirectory.getPresentableUrl();
          }
        }
      }
 else {
        dirName=myVDirectory.getPresentableUrl();
      }
    }
  }
  myDirName=dirName;
  myCompactPackages=compactPackages;
}
