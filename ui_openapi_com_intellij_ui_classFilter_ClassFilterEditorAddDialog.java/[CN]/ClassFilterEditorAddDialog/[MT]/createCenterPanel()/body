{
  Box box=Box.createVerticalBox();
  JPanel _panel=new JPanel(new BorderLayout());
  myClassName=new TextFieldWithBrowseButton();
  _panel.add(new JLabel(UIBundle.message("label.class.filter.editor.add.dialog.filter.pattern")),BorderLayout.NORTH);
  _panel.add(myClassName,BorderLayout.CENTER);
  box.add(_panel);
  box.add(Box.createVerticalBox());
  JPanel panel=new JPanel(new BorderLayout());
  panel.setPreferredSize(new Dimension(310,-1));
  JLabel iconLabel=new JLabel(Messages.getQuestionIcon());
  panel.add(iconLabel,BorderLayout.WEST);
  panel.add(box,BorderLayout.CENTER);
  myClassName.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      PsiClass currentClass=getSelectedClass();
      TreeClassChooser chooser=TreeClassChooserFactory.getInstance(myProject).createNoInnerClassesScopeChooser(UIBundle.message("class.filter.editor.choose.class.title"),GlobalSearchScope.allScope(myProject),null,null);
      if (currentClass != null) {
        PsiFile containingFile=currentClass.getContainingFile();
        if (containingFile != null) {
          PsiDirectory containingDirectory=containingFile.getContainingDirectory();
          if (containingDirectory != null) {
            chooser.selectDirectory(containingDirectory);
          }
        }
      }
      chooser.showDialog();
      PsiClass selectedClass=chooser.getSelectedClass();
      if (selectedClass != null) {
        myClassName.setText(selectedClass.getQualifiedName());
      }
    }
  }
);
  myClassName.setEnabled(myProject != null);
  return panel;
}
