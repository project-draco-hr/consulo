{
  try {
    if (delayedReading && myContents.containsMapping(id))     return false;
    BufferExposingByteArrayOutputStream out=new BufferExposingByteArrayOutputStream(ourSpareByteArray.getBuffer(4 * data.size()));
    DataOutputStream stream=new DataOutputStream(out);
    int size=data.size();
    DataInputOutputUtil.writeINT(stream,size);
    if (size > 0) {
      THashMap<Value,List<Key>> values=new THashMap<Value,List<Key>>();
      List<Key> keysForNullValue=null;
      for (      Map.Entry<Key,Value> e : data.entrySet()) {
        Value value=e.getValue();
        List<Key> keys=value != null ? values.get(value) : keysForNullValue;
        if (keys == null) {
          if (value != null)           values.put(value,keys=new SmartList<Key>());
 else           keys=keysForNullValue=new SmartList<Key>();
        }
        keys.add(e.getKey());
      }
      if (keysForNullValue != null) {
        myValueExternalizer.save(stream,null);
        mySnapshotIndexExternalizer.save(stream,keysForNullValue);
      }
      for (      Value value : values.keySet()) {
        myValueExternalizer.save(stream,value);
        mySnapshotIndexExternalizer.save(stream,values.get(value));
      }
    }
    saveContents(id,out);
  }
 catch (  IOException ex) {
    throw new RuntimeException(ex);
  }
  return true;
}
