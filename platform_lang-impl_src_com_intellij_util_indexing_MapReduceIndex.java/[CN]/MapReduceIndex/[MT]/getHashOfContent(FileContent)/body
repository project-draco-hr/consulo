{
  FileType fileType=content.getFileType();
  if (myIsPsiBackedIndex && myHasSnapshotMapping && content instanceof FileContentImpl) {
    Integer previouslyCalculatedUncommittedHashId=content.getUserData(ourSavedUncommittedHashIdKey);
    if (previouslyCalculatedUncommittedHashId == null) {
      Document document=FileDocumentManager.getInstance().getCachedDocument(content.getFile());
      if (document != null) {
        PsiDocumentManager psiDocumentManager=PsiDocumentManager.getInstance(content.getProject());
        if (psiDocumentManager.isUncommited(document)) {
          PsiFile file=psiDocumentManager.getCachedPsiFile(document);
          Charset charset=((FileContentImpl)content).getCharset();
          if (file != null) {
            previouslyCalculatedUncommittedHashId=ContentHashesSupport.calcContentHashIdWithFileType(file.getText().getBytes(charset),charset,fileType);
            content.putUserData(ourSavedUncommittedHashIdKey,previouslyCalculatedUncommittedHashId);
          }
        }
      }
    }
    if (previouslyCalculatedUncommittedHashId != null)     return previouslyCalculatedUncommittedHashId;
  }
  Integer previouslyCalculatedContentHashId=content.getUserData(ourSavedContentHashIdKey);
  if (previouslyCalculatedContentHashId == null) {
    byte[] hash=content instanceof FileContentImpl ? ((FileContentImpl)content).getHash() : null;
    if (hash == null) {
      if (fileType.isBinary()) {
        previouslyCalculatedContentHashId=ContentHashesSupport.calcContentHashId(content.getContent(),fileType);
      }
 else {
        Charset charset=content instanceof FileContentImpl ? ((FileContentImpl)content).getCharset() : null;
        previouslyCalculatedContentHashId=ContentHashesSupport.calcContentHashIdWithFileType(content.getContent(),charset,fileType);
      }
    }
 else {
      previouslyCalculatedContentHashId=ContentHashesSupport.enumerateHash(hash);
    }
    content.putUserData(ourSavedContentHashIdKey,previouslyCalculatedContentHashId);
  }
  return previouslyCalculatedContentHashId;
}
