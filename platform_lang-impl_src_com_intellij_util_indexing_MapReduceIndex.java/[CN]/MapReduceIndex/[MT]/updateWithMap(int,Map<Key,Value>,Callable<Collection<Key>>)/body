{
  getWriteLock().lock();
  try {
    try {
      for (      Key key : oldKeysGetter.call()) {
        myStorage.removeAllValues(key,inputId);
      }
    }
 catch (    Exception e) {
      throw new StorageException(e);
    }
    for (    Map.Entry<Key,Value> entry : newData.entrySet()) {
      myStorage.addValue(entry.getKey(),inputId,entry.getValue());
    }
    if (myInputsIndex != null) {
      try {
        final Set<Key> newKeys=newData.keySet();
        if (newKeys.size() > 0) {
          myInputsIndex.put(inputId,newKeys);
        }
 else {
          myInputsIndex.remove(inputId);
        }
      }
 catch (      IOException e) {
        throw new StorageException(e);
      }
    }
  }
  finally {
    getWriteLock().unlock();
  }
  scheduleFlush();
}
