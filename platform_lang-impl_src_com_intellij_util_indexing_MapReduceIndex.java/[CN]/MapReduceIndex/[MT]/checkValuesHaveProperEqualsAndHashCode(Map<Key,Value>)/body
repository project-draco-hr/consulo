{
  for (  Map.Entry<Key,Value> e : data.entrySet()) {
    final Value value=e.getValue();
    if (!(Comparing.equal(value,value) && (value == null || value.hashCode() == value.hashCode()))) {
      LOG.error("Index " + myIndexId.toString() + " violates equals / hashCode contract for Value parameter");
    }
    if (myValueExternalizer != null) {
      try {
        final BufferExposingByteArrayOutputStream out=new BufferExposingByteArrayOutputStream();
        DataOutputStream outputStream=new DataOutputStream(out);
        myValueExternalizer.save(outputStream,value);
        outputStream.close();
        final Value deserializedValue=myValueExternalizer.read(new DataInputStream(new UnsyncByteArrayInputStream(out.getInternalBuffer(),0,out.size())));
        if (!(Comparing.equal(value,deserializedValue) && (value == null || value.hashCode() == deserializedValue.hashCode()))) {
          LOG.error("Index " + myIndexId.toString() + " deserialization violates equals / hashCode contract for Value parameter");
        }
      }
 catch (      IOException ex) {
        LOG.error(ex);
      }
    }
  }
}
