{
  final PsiElement oldParent=event.getOldParent();
  final PsiElement newParent=event.getNewParent();
  final PsiElement child=event.getChild();
  if (newParent instanceof PsiDirectory) {
    final Module module=ModuleUtil.findModuleForPsiElement(newParent);
    if (module == null)     return;
    AbstractUrl childUrl=null;
    if (child instanceof PsiFile) {
      childUrl=new PsiFileUrl(((PsiDirectory)newParent).getVirtualFile().getUrl() + "/" + ((PsiFile)child).getName(),module.getName());
    }
 else     if (child instanceof PsiDirectory) {
      childUrl=new DirectoryUrl(((PsiDirectory)newParent).getVirtualFile().getUrl() + "/" + ((PsiDirectory)child).getName(),module.getName());
    }
    for (    String listName : myName2FavoritesRoots.keySet()) {
      final List<Pair<AbstractUrl,String>> roots=myName2FavoritesRoots.get(listName);
      final List<Pair<AbstractUrl,String>> newRoots=new ArrayList<Pair<AbstractUrl,String>>();
      for (      Pair<AbstractUrl,String> root : roots) {
        final Object[] path=root.first.createPath(myProject);
        if (path == null || path.length < 1 || path[0] == null) {
          continue;
        }
        final Object element=path[path.length - 1];
        if (element == child && childUrl != null) {
          newRoots.add(Pair.create(childUrl,root.second));
        }
 else {
          if (element == oldParent) {
            newRoots.add(Pair.create(root.first.createUrlByElement(newParent),root.second));
          }
          newRoots.add(root);
        }
      }
      myName2FavoritesRoots.put(listName,newRoots);
    }
  }
}
