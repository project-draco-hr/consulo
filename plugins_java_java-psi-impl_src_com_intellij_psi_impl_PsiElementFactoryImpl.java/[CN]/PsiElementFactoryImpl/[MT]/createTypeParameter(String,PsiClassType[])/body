{
  StringBuilder builder=new StringBuilder();
  builder.append("public <").append(name);
  if (superTypes.length > 1) {
    builder.append(" extends ");
    for (    PsiClassType type : superTypes) {
      if (type.equalsToText(CommonClassNames.JAVA_LANG_OBJECT))       continue;
      builder.append(type.getCanonicalText()).append(',');
    }
    builder.delete(builder.length() - 1,builder.length());
  }
  builder.append("> void foo(){}");
  try {
    return createMethodFromText(builder.toString(),null).getTypeParameters()[0];
  }
 catch (  RuntimeException e) {
    throw new IncorrectOperationException("type parameter text: " + builder.toString());
  }
}
