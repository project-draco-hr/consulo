{
  final List<PsiMethod> result=new ArrayList<PsiMethod>();
  for (  PsiClassType superType : clazz.getSuperTypes()) {
    processClassInner(superType,superClassSubstitutor,false,result,classToDelegateTo,processedWithoutDeprecated,processedAll);
  }
  if (clazz instanceof GrTypeDefinition) {
    for (    GrField field : ((GrTypeDefinition)clazz).getFields()) {
      final PsiAnnotation delegate=PsiImplUtil.getAnnotation(field,GroovyCommonClassNames.GROOVY_LANG_DELEGATE);
      if (delegate == null)       continue;
      final PsiType type=field.getDeclaredType();
      if (!(type instanceof PsiClassType))       continue;
      processClassInner((PsiClassType)type,superClassSubstitutor,shouldDelegateDeprecated(delegate),result,classToDelegateTo,processedWithoutDeprecated,processedAll);
    }
  }
  collector.addAll(result);
}
