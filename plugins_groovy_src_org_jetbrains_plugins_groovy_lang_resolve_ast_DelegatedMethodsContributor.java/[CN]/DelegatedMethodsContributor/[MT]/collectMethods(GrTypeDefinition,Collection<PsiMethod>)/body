{
  Set<PsiClass> processed=new HashSet<PsiClass>();
  if (!checkForDelegate(clazz))   return;
  Map<MethodSignature,PsiMethod> signatures=new HashMap<MethodSignature,PsiMethod>();
  initializeSignatures(clazz,PsiSubstitutor.EMPTY,signatures,processed);
  List<PsiMethod> methods=new ArrayList<PsiMethod>();
  process(clazz,PsiSubstitutor.EMPTY,processed,methods,clazz);
  final Set<PsiMethod> result=new LinkedHashSet<PsiMethod>();
  for (  PsiMethod method : methods) {
    addMethodChecked(signatures,method,PsiSubstitutor.EMPTY,result);
  }
  collector.addAll(result);
}
