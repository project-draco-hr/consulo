{
  final IndexState copy=new IndexState();
  myExcludeRootsMap.forEachEntry(new TIntObjectProcedure<Set<String>>(){
    @Override public boolean execute(    int id,    Set<String> urls){
      if (idFilter == null || idFilter.execute(id)) {
        copy.myExcludeRootsMap.put(id,new THashSet<String>(urls));
      }
      return true;
    }
  }
);
  copy.myProjectExcludeRoots.addAll(myProjectExcludeRoots.toArray());
  myDirToInfoMap.forEachEntry(new TIntObjectProcedure<DirectoryInfo>(){
    @Override public boolean execute(    int id,    DirectoryInfo info){
      if (idFilter == null || idFilter.execute(id)) {
        copy.storeInfo(info,id);
      }
      return true;
    }
  }
);
  copy.multiDirPackages.clear();
  for (  int[] dirs : multiDirPackages) {
    int[] filtered=ContainerUtil.filter(dirs,new TIntProcedure(){
      @Override public boolean execute(      int id){
        return id == -1 || copy.getInfo(id) != null && (idFilter == null || idFilter.execute(id));
      }
    }
);
    copy.multiDirPackages.add(filtered);
  }
  myPackageNameToDirsMap.forEachEntry(new TObjectIntProcedure<int[]>(){
    @Override public boolean execute(    int[] name,    int id){
      if (id > 0) {
        if (copy.getInfo(id) == null)         id=0;
      }
 else       if (id < 0) {
        if (copy.multiDirPackages.get(-id).length == 0)         id=0;
      }
      if (id != 0 && (idFilter == null || idFilter.execute(id))) {
        copy.myPackageNameToDirsMap.put(name,id);
      }
      return true;
    }
  }
);
  myDirToPackageName.forEachEntry(new TIntObjectProcedure<int[]>(){
    @Override public boolean execute(    int id,    int[] name){
      if (idFilter == null || idFilter.execute(id)) {
        copy.myDirToPackageName.put(id,name);
      }
      return true;
    }
  }
);
  return copy;
}
