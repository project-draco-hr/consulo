{
  VfsUtilCore.visitChildrenRecursively(dir,new DirectoryVisitor(){
    private Stack<String> myPackages=new Stack<String>();
    @Override protected DirectoryInfo updateInfo(    VirtualFile file){
      DirectoryInfo info=myDirToInfoMap.get(file);
      if (info == null)       return null;
      if (!module.equals(info.module))       return null;
      if (info.isInModuleSource) {
        String definedPackage=myDirToPackageName.get(file);
        if (definedPackage != null && definedPackage.length() == 0)         return null;
      }
      info.isInModuleSource=true;
      info.isTestSource=isTestSource;
      info.sourceRoot=sourceRoot;
      String currentPackage;
      if (myPackages.isEmpty()) {
        currentPackage=packageName;
      }
 else {
        currentPackage=getPackageNameForSubdir(myPackages.peek(),file.getName());
      }
      myPackages.push(currentPackage);
      setPackageName(file,currentPackage);
      return info;
    }
    @Override protected void afterChildrenVisited(    DirectoryInfo info){
      super.afterChildrenVisited(info);
      myPackages.pop();
    }
  }
);
}
