{
  Map<VirtualFile,List<OrderEntry>> depEntries=new HashMap<VirtualFile,List<OrderEntry>>();
  Map<VirtualFile,List<OrderEntry>> libClassRootEntries=new HashMap<VirtualFile,List<OrderEntry>>();
  Map<VirtualFile,List<OrderEntry>> libSourceRootEntries=new HashMap<VirtualFile,List<OrderEntry>>();
  for (  OrderEntry orderEntry : getOrderEntries(module)) {
    if (orderEntry instanceof ModuleOrderEntry) {
      VirtualFile[] importedClassRoots=orderEntry.getFiles(OrderRootType.COMPILATION_CLASSES);
      for (      VirtualFile importedClassRoot : importedClassRoots) {
        addEntryToMap(importedClassRoot,orderEntry,depEntries);
      }
      VirtualFile[] sourceRoots=orderEntry.getFiles(OrderRootType.SOURCES);
      for (      VirtualFile sourceRoot : sourceRoots) {
        addEntryToMap(sourceRoot,orderEntry,depEntries);
      }
    }
 else     if (orderEntry instanceof ModuleSourceOrderEntry) {
      List<OrderEntry> oneEntryList=Arrays.asList(orderEntry);
      Module entryModule=orderEntry.getOwnerModule();
      VirtualFile[] sourceRoots=orderEntry.getFiles(OrderRootType.SOURCES);
      for (      VirtualFile sourceRoot : sourceRoots) {
        fillMapWithOrderEntries(sourceRoot,oneEntryList,entryModule,null,null,null,null);
      }
    }
 else     if (orderEntry instanceof LibraryOrderEntry || orderEntry instanceof JdkOrderEntry) {
      VirtualFile[] classRoots=orderEntry.getFiles(OrderRootType.CLASSES);
      for (      VirtualFile classRoot : classRoots) {
        addEntryToMap(classRoot,orderEntry,libClassRootEntries);
      }
      VirtualFile[] sourceRoots=orderEntry.getFiles(OrderRootType.SOURCES);
      for (      VirtualFile sourceRoot : sourceRoots) {
        addEntryToMap(sourceRoot,orderEntry,libSourceRootEntries);
      }
    }
  }
  for (  Map.Entry<VirtualFile,List<OrderEntry>> mapEntry : depEntries.entrySet()) {
    final VirtualFile vRoot=mapEntry.getKey();
    final List<OrderEntry> entries=mapEntry.getValue();
    fillMapWithOrderEntries(vRoot,entries,null,null,null,null,null);
  }
  for (  Map.Entry<VirtualFile,List<OrderEntry>> mapEntry : libClassRootEntries.entrySet()) {
    final VirtualFile vRoot=mapEntry.getKey();
    final List<OrderEntry> entries=mapEntry.getValue();
    fillMapWithOrderEntries(vRoot,entries,null,vRoot,null,null,null);
  }
  for (  Map.Entry<VirtualFile,List<OrderEntry>> mapEntry : libSourceRootEntries.entrySet()) {
    final VirtualFile vRoot=mapEntry.getKey();
    final List<OrderEntry> entries=mapEntry.getValue();
    fillMapWithOrderEntries(vRoot,entries,null,null,vRoot,null,null);
  }
}
