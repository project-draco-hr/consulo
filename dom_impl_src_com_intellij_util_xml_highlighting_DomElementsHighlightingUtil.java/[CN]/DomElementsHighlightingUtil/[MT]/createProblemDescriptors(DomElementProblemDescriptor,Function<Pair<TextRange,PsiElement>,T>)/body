{
  final List<T> descriptors=new SmartList<T>();
  if (problemDescriptor instanceof DomElementResolveProblemDescriptor) {
    final PsiReference reference=((DomElementResolveProblemDescriptor)problemDescriptor).getPsiReference();
    final PsiElement element=reference.getElement();
    final TextRange referenceRange=reference.getRangeInElement();
    final TextRange errorRange;
    if (referenceRange.getStartOffset() == referenceRange.getEndOffset()) {
      if (element instanceof XmlAttributeValue) {
        errorRange=TextRange.from(referenceRange.getStartOffset() - 1,2);
      }
 else {
        errorRange=TextRange.from(referenceRange.getStartOffset(),1);
      }
    }
 else {
      errorRange=referenceRange;
    }
    descriptors.add(creator.fun(Pair.create(errorRange,element)));
    return descriptors;
  }
  final DomElement domElement=problemDescriptor.getDomElement();
  final PsiElement psiElement=getPsiElement(domElement);
  final DomElementProblemDescriptor.HighlightingType highlightingType=problemDescriptor.getHighlightingType();
  if (highlightingType == DomElementProblemDescriptor.HighlightingType.WHOLE_ELEMENT) {
    if (psiElement instanceof XmlAttributeValue) {
      final PsiElement attr=psiElement.getParent();
      descriptors.add(creator.fun(Pair.create(new TextRange(0,attr.getTextLength()),attr)));
    }
 else {
      final XmlTag tag=(XmlTag)(psiElement instanceof XmlTag ? psiElement : psiElement.getParent());
      descriptors.add(creator.fun(Pair.create(new TextRange(0,tag.getTextLength()),(PsiElement)tag)));
    }
    return descriptors;
  }
  if (psiElement != null && StringUtil.isNotEmpty(psiElement.getText())) {
    if (psiElement instanceof XmlTag) {
      final XmlTag tag=(XmlTag)psiElement;
switch (highlightingType) {
case WHOLE_ELEMENT:
        descriptors.add(creator.fun(Pair.create(new TextRange(0,tag.getTextLength()),(PsiElement)tag)));
      break;
case START_TAG_NAME:
    addDescriptionsToTagEnds(tag,descriptors,creator);
  break;
}
return descriptors;
}
TextRange textRange=problemDescriptor.getTextRange();
if (textRange == null) {
int start=0;
int length=psiElement.getTextRange().getLength();
if (psiElement instanceof XmlAttributeValue) {
String value=((XmlAttributeValue)psiElement).getValue();
if (StringUtil.isNotEmpty(value)) {
  start=psiElement.getText().indexOf(value);
  length=value.length();
}
}
textRange=TextRange.from(start,length);
}
return Arrays.asList(creator.fun(Pair.create(textRange,psiElement)));
}
final XmlTag tag=getParentXmlTag(domElement);
if (tag != null) {
addDescriptionsToTagEnds(tag,descriptors,creator);
}
return descriptors;
}
