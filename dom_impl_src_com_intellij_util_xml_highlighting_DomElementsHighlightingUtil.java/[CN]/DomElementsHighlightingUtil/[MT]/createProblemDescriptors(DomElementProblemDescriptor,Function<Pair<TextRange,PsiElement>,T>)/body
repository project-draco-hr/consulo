{
  final List<T> descritors=new SmartList<T>();
  if (problemDescriptor instanceof DomElementResolveProblemDescriptor) {
    final PsiReference reference=((DomElementResolveProblemDescriptor)problemDescriptor).getPsiReference();
    final PsiElement element=reference.getElement();
    final int startOffset=element.getTextRange().getStartOffset();
    final TextRange referenceRange=reference.getRangeInElement();
    final TextRange errorRange;
    if (referenceRange.getStartOffset() == referenceRange.getEndOffset()) {
      errorRange=TextRange.from(referenceRange.getStartOffset() + startOffset,1);
    }
 else {
      errorRange=referenceRange.shiftRight(startOffset);
    }
    descritors.add(creator.fun(Pair.create(errorRange,element)));
    return descritors;
  }
  final DomElement domElement=problemDescriptor.getDomElement();
  final PsiElement psiElement=getPsiElement(domElement);
  if (psiElement != null && StringUtil.isNotEmpty(psiElement.getText())) {
    if (psiElement instanceof XmlTag) {
      final XmlTag tag=(XmlTag)psiElement;
      if (tag.getSubTags().length > 0) {
        addDescriptionsToTagEnds(tag,descritors,creator);
        return descritors;
      }
    }
    return Arrays.asList(creator.fun(Pair.create(psiElement.getTextRange(),psiElement)));
  }
  final XmlTag tag=getParentXmlTag(domElement);
  if (tag != null) {
    addDescriptionsToTagEnds(tag,descritors,creator);
  }
  return descritors;
}
