{
  return createProblemDescriptors(problemDescriptor,new Function<Pair<TextRange,PsiElement>,Annotation>(){
    public Annotation fun(    final Pair<TextRange,PsiElement> s){
      String text=problemDescriptor.getDescriptionTemplate();
      if (StringUtil.isEmpty(text))       text=null;
      final HighlightSeverity severity=problemDescriptor.getHighlightSeverity();
      final AnnotationHolderImpl holder=EMPTY_ANNOTATION_HOLDER;
      TextRange range=s.first;
      if (text == null)       range=TextRange.from(range.getStartOffset(),0);
      range=range.shiftRight(s.second.getTextRange().getStartOffset());
      final Annotation annotation=createAnnotation(severity,holder,range,text);
      if (problemDescriptor instanceof DomElementResolveProblemDescriptor) {
        annotation.setTextAttributes(CodeInsightColors.WRONG_REFERENCES_ATTRIBUTES);
      }
      for (      LocalQuickFix fix : problemDescriptor.getFixes()) {
        if (fix instanceof IntentionAction)         annotation.registerFix((IntentionAction)fix);
      }
      return annotation;
    }
  }
);
}
