{
  List<ProblemDescriptor> descritors=new SmartList<ProblemDescriptor>();
  final DomElement domElement=problemDescriptor.getDomElement();
  final PsiElement psiElement=getPsiElement(domElement);
  if (psiElement != null) {
    final XmlTag tag=PsiTreeUtil.getParentOfType(psiElement,XmlTag.class,false);
    if (tag != null && tag.getSubTags().length > 0) {
      addDescriptionsToTagEnds(tag,descritors,manager,problemDescriptor);
    }
 else {
      descritors.add(manager.createProblemDescriptor(psiElement,problemDescriptor.getDescriptionTemplate(),problemDescriptor.getFixes(),ProblemHighlightType.GENERIC_ERROR_OR_WARNING));
    }
  }
 else {
    final XmlTag tag=getParentXmlTag(domElement);
    if (tag != null) {
      addDescriptionsToTagEnds(tag,descritors,manager,problemDescriptor);
    }
  }
  return descritors;
}
