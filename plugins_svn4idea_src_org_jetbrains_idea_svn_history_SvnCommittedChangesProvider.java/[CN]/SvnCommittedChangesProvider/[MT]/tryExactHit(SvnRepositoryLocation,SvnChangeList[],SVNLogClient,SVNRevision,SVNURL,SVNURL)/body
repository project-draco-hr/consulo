{
  try {
    logger.doLog(svnurl,null,SVNRevision.UNDEFINED,revisionBefore,revisionBefore,false,true,false,1,null,new ISVNLogEntryHandler(){
      public void handleLogEntry(      SVNLogEntry logEntry){
        if (myProject.isDisposed())         throw new ProcessCanceledException();
        if (logEntry.getDate() == null) {
          return;
        }
        result[0]=new SvnChangeList(myVcs,(SvnRepositoryLocation)location,logEntry,repositoryUrl.toString());
      }
    }
);
  }
 catch (  SVNException e) {
    if (SVNErrorCode.FS_CATEGORY == e.getErrorMessage().getErrorCode().getCategory()) {
      return;
    }
    throw new VcsException(e);
  }
}
