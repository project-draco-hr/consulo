{
  final String url=((SvnRepositoryLocation)location).getURL();
  final long revision;
  try {
    revision=Long.parseLong(number.asString());
  }
 catch (  NumberFormatException e) {
    throw new VcsException(e);
  }
  final SvnChangeList[] result=new SvnChangeList[1];
  final SVNLogClient logger;
  final SVNRevision revisionBefore;
  final SVNURL repositoryUrl;
  final SVNURL svnurl;
  try {
    logger=myVcs.createLogClient();
    revisionBefore=SVNRevision.create(revision);
    svnurl=SVNURL.parseURIEncoded(url);
    final SVNWCClient client=myVcs.createWCClient();
    SVNInfo info=client.doInfo(svnurl,SVNRevision.UNDEFINED,SVNRevision.HEAD);
    if (info == null) {
      throw new VcsException("Can not get repository URL");
    }
    repositoryUrl=info.getRepositoryRootURL();
  }
 catch (  SVNException e) {
    throw new VcsException(e);
  }
  tryExactHit((SvnRepositoryLocation)location,result,logger,revisionBefore,repositoryUrl,svnurl);
  if (result[0] == null) {
    tryByRoot(result,logger,revisionBefore,repositoryUrl);
    if (result[0] == null) {
      tryStepByStep((SvnRepositoryLocation)location,result,logger,revisionBefore,repositoryUrl,svnurl);
    }
  }
  return result[0];
}
