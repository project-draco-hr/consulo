{
  final Project project=getProject();
  if (boundedComponent == null) {
    boundedComponent=new PsiClassPanel();
  }
  final ReferenceEditorWithBrowseButton editor=new ReferenceEditorWithBrowseButton(null,"",PsiManager.getInstance(project),true);
  final GlobalSearchScope resolveScope=getDomWrapper().getResolveScope();
  editor.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final PsiClass psiClass=showClassChooserDialog(project,resolveScope);
      if (psiClass != null) {
        setValue(getComponent(),psiClass.getQualifiedName());
      }
    }
  }
);
  boundedComponent.add(editor);
  final PsiCodeFragment file=(PsiCodeFragment)PsiDocumentManager.getInstance(project).getPsiFile(editor.getEditorTextField().getDocument());
  file.addAnnotator(new Annotator(){
    public void annotate(    PsiElement psiElement,    AnnotationHolder holder){
      if (isCommitted()) {
        for (        final DomElementProblemDescriptor problem : DomElementAnnotationsManager.getInstance().getProblems(getDomElement(),true)) {
          holder.createErrorAnnotation(psiElement.getContainingFile(),problem.getDescriptionTemplate());
        }
      }
    }
  }
);
  return boundedComponent;
}
