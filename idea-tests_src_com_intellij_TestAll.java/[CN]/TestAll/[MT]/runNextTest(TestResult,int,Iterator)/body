{
  myRunTests++;
  if (!checkAvaliableMemory(35,testResult)) {
    testResult.stop();
    return;
  }
  if (testResult.errorCount() + testResult.failureCount() > MAX_FAILURE_TEST_COUNT) {
    addErrorMessage(testResult,"Too many errors. Tests stopped. Total " + myRunTests + " of "+ totalTests+ " tests run");
    testResult.stop();
    return;
  }
  if (myStartTime == 0) {
    boolean ourClassLoader=this.getClass().getClassLoader().getClass().getName().startsWith("com.intellij.");
    if (!ourClassLoader) {
      beforeFirstTest();
    }
  }
 else {
    if (myInterruptedByOutOfMemory) {
      addErrorMessage(testResult,"Current Test Interrupted: OUT OF MEMORY! Class = " + myLastTestClass + " Total "+ myRunTests+ " of "+ totalTests+ " tests run");
      testResult.stop();
      return;
    }
 else     if (myInterruptedByOutOfTime) {
      addErrorMessage(testResult,"Current Test Interrupted: OUT OF TIME! Class = " + myLastTestClass + " Total "+ myRunTests+ " of "+ totalTests+ " tests run");
      testResult.stop();
      return;
    }
  }
  Class testCaseClass=(Class)i.next();
  System.out.println("\nRunning " + testCaseClass.getName());
  LOG.info("Running " + testCaseClass.getName());
  final Test test=getTest(testCaseClass);
  if (test != null) {
    myLastTestClass=null;
    myLastTestClass=testCaseClass.getName();
    myLastTestStartTime=System.currentTimeMillis();
    myLastTestTestMethodCount=test.countTestCases();
    try {
      try {
        Thread.sleep(100);
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
      test.run(testResult);
      try {
        final Application app=ApplicationManager.getApplication();
        if (app != null) {
          app.invokeAndWait(new Runnable(){
            public void run(){
              try {
                app.runWriteAction(new Runnable(){
                  public void run(){
                    FileDocumentManager manager=FileDocumentManager.getInstance();
                    if (manager instanceof FileDocumentManagerImpl) {
                      ((FileDocumentManagerImpl)manager).dropAllUnsavedDocuments();
                    }
                  }
                }
);
              }
 catch (              Throwable e) {
                e.printStackTrace(System.err);
              }
            }
          }
,ModalityState.NON_MMODAL);
        }
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
 catch (    Throwable t) {
      if (t instanceof OutOfMemoryError) {
        if ((ourMode & SAVE_MEMORY_SNAPSHOT) != 0) {
          try {
            mySavingMemorySnapshot=true;
            System.out.println("OutOfMemoryError detected. Saving memory snapshot started");
            ProfilingUtil.captureMemorySnapshot("allTests");
          }
  finally {
            System.out.println("Saving memory snapshot finished");
            mySavingMemorySnapshot=false;
          }
        }
      }
      testResult.addError(test,t);
    }
  }
}
