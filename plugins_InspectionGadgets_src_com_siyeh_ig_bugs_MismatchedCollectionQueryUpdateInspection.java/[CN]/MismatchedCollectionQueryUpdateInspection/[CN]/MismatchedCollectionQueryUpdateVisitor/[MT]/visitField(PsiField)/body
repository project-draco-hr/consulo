{
  super.visitField(field);
  if (!field.hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  final PsiClass containingClass=PsiUtil.getTopLevelClass(field);
  if (containingClass == null) {
    return;
  }
  final PsiType type=field.getType();
  if (!CollectionUtils.isCollectionClassOrInterface(type)) {
    return;
  }
  final boolean written=collectionContentsAreUpdated(field,containingClass);
  final boolean read=collectionContentsAreQueried(field,containingClass);
  if (read != written) {
    registerFieldError(field);
  }
}
