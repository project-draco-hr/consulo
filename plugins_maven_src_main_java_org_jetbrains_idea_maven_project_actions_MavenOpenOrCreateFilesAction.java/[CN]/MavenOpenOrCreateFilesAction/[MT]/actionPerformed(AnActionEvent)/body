{
  List<File> files=getFiles(e);
  final List<VirtualFile> virtualFiles=collectVirtualFiles(files);
  if (files.size() == 1 && virtualFiles.isEmpty()) {
    final File file=files.get(0);
    new WriteCommandAction(MavenActionUtil.getProject(e),e.getPresentation().getText()){
      @Override protected void run(      Result result) throws Throwable {
        try {
          VirtualFile newFile=VfsUtil.createDirectoryIfMissing(file.getParent()).createChildData(this,file.getName());
          virtualFiles.add(newFile);
        }
 catch (        IOException ex) {
          NotificationsManager.getNotificationsManager().notify("Cannot create " + file,ex.getMessage(),NotificationType.ERROR,NotificationListener.REMOVE);
        }
      }
    }
.execute();
  }
  for (  VirtualFile each : virtualFiles) {
    new OpenFileDescriptor(MavenActionUtil.getProject(e),each).navigate(true);
  }
}
