{
  if (myThemes == null) {
    myThemes=new HashSet<String>();
    final SystemResourceManager systemResourceManager=new SystemResourceManager(module,new AndroidPlatform(mySdk,myTarget));
    for (    VirtualFile valueResourceDir : systemResourceManager.getResourceSubdirs("values")) {
      for (      final VirtualFile valueResourceFile : valueResourceDir.getChildren()) {
        if (!valueResourceFile.isDirectory() && valueResourceFile.getFileType().equals(StdFileTypes.XML)) {
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            @Override public void run(){
              final Project project=module.getProject();
              if (module.isDisposed() || project.isDisposed()) {
                return;
              }
              final PsiManager psiManager=PsiManager.getInstance(project);
              final PsiFile psiFile=psiManager.findFile(valueResourceFile);
              if (psiFile instanceof XmlFile) {
                psiFile.accept(new XmlRecursiveElementVisitor(){
                  @Override public void visitXmlTag(                  XmlTag tag){
                    super.visitXmlTag(tag);
                    if ("style".equals(tag.getName())) {
                      final String styleName=tag.getAttributeValue("name");
                      if (styleName != null && (styleName.equals("Theme") || styleName.startsWith("Theme."))) {
                        myThemes.add(styleName);
                      }
                    }
                  }
                }
);
                psiManager.dropResolveCaches();
                InjectedLanguageManager.getInstance(project).dropFileCaches(psiFile);
              }
            }
          }
);
        }
      }
    }
  }
  return myThemes;
}
