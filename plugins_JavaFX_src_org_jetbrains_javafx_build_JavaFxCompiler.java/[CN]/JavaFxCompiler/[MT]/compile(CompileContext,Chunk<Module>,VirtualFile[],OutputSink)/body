{
  Map<Module,List<VirtualFile>> mapModulesToVirtualFiles;
  if (moduleChunk.getNodes().size() == 1) {
    mapModulesToVirtualFiles=Collections.singletonMap(moduleChunk.getNodes().iterator().next(),Arrays.asList(files));
  }
 else {
    mapModulesToVirtualFiles=CompilerUtil.buildModuleToFilesMap(context,files);
  }
  for (  final Module module : moduleChunk.getNodes()) {
    final List<VirtualFile> moduleFiles=mapModulesToVirtualFiles.get(module);
    if (moduleFiles == null) {
      continue;
    }
    final JavaFxFacet facet=FacetManager.getInstance(module).getFacetByType(JavaFxFacet.ID);
    if (facet == null) {
      continue;
    }
    final Sdk sdk=JavaFxSdkUtil.getSdk(facet);
    final JavaFxCompilerHandler compilerHandler=new JavaFxCompilerHandler(context,sdk,module.getProject());
    context.getProgressIndicator().checkCanceled();
    try {
      compilerHandler.runCompiler(context,module,moduleFiles);
    }
 catch (    CompilerException e) {
      LOG.debug(e);
      context.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),null,-1,-1);
    }
 finally {
      compilerHandler.compileFinished();
    }
    sink.add(compilerHandler.getCompilerOutputPath(),compilerHandler.getOutputItems(),VirtualFile.EMPTY_ARRAY);
  }
}
