{
  final PsiMethod method=p.getMethod();
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null)   return;
  final String name=method.getName();
  if (StringUtil.isEmpty(name))   return;
  final boolean strictSignatureSearch=p.isStrictSignatureSearch();
  final PsiMethod[] methods=strictSignatureSearch ? new PsiMethod[]{method} : aClass.findMethodsByName(name,false);
  SearchScope accessScope=methods[0].getUseScope();
  for (int i=1; i < methods.length; i++) {
    PsiMethod method1=methods[i];
    accessScope=accessScope.union(method1.getUseScope());
  }
  final SearchScope restrictedByAccess=p.getScope().intersectWith(accessScope);
  final String textToSearch=findLongestWord(name);
  p.getOptimizer().searchWord(textToSearch,restrictedByAccess,UsageSearchContext.IN_STRINGS,true,new MethodTextOccurrenceProcessor(aClass,strictSignatureSearch,methods));
}
