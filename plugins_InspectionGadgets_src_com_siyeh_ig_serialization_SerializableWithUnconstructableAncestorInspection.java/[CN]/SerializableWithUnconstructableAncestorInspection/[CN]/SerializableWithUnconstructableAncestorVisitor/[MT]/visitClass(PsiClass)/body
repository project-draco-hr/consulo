{
  if (aClass.isInterface() || aClass.isAnnotationType()) {
    return;
  }
  if (!SerializationUtils.isSerializable(aClass)) {
    return;
  }
  PsiClass ancestor=aClass.getSuperClass();
  final Set visitedClasses=new HashSet(16);
  while (ancestor != null && SerializationUtils.isSerializable(ancestor)) {
    ancestor=ancestor.getSuperClass();
    if (!visitedClasses.add(ancestor)) {
      return;
    }
  }
  if (ancestor == null) {
    return;
  }
  if (classHasNoArgConstructor(ancestor)) {
    return;
  }
  registerClassError(aClass);
}
