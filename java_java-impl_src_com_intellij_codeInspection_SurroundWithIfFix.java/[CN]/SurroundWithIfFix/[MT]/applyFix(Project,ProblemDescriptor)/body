{
  PsiElement element=descriptor.getPsiElement();
  PsiStatement anchorStatement=PsiTreeUtil.getParentOfType(element,PsiStatement.class);
  LOG.assertTrue(anchorStatement != null);
  Editor editor=getEditor(project,element);
  if (editor == null)   return;
  PsiFile file=element.getContainingFile();
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  Document document=documentManager.getDocument(file);
  if (!CodeInsightUtilBase.prepareFileForWrite(file))   return;
  PsiElement[] elements=new PsiElement[]{anchorStatement};
  PsiElement prev=PsiTreeUtil.skipSiblingsBackward(anchorStatement,PsiWhiteSpace.class);
  if (prev instanceof PsiComment && SuppressManager.getInstance().getSuppressedInspectionIdsIn(prev) != null) {
    elements=new PsiElement[]{prev,anchorStatement};
  }
  try {
    TextRange textRange=new JavaWithIfSurrounder().surroundElements(project,editor,elements);
    if (textRange == null)     return;
    @NonNls String newText=myText + " != null";
    document.replaceString(textRange.getStartOffset(),textRange.getEndOffset(),newText);
    editor.getCaretModel().moveToOffset(textRange.getEndOffset() + newText.length());
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
