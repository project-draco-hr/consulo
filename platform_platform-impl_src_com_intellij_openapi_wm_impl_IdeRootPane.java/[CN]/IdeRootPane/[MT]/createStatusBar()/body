{
  myUISettings.addUISettingsListener(this);
  myStatusBar=new IdeStatusBarImpl();
  myMemoryWidget=new MemoryUsagePanel();
  myStatusBar.addWidget(myMemoryWidget);
  myStatusBar.addWidget(new IdeNotificationArea(),"before Memory");
  myStatusBar.addWidget(new IdeMessagePanel(MessagePool.getInstance()),"before Memory");
  if (myStatusBarCustomComponentFactories != null) {
    for (    final StatusBarCustomComponentFactory componentFactory : myStatusBarCustomComponentFactories) {
      final JComponent c=componentFactory.createComponent(myStatusBar);
      myStatusBar.addWidget(new CustomStatusBarWidget(){
        public JComponent getComponent(){
          return c;
        }
        @NotNull public String ID(){
          return c.getClass().getSimpleName();
        }
        public Presentation getPresentation(        @NotNull Type type){
          return null;
        }
        public void install(        @NotNull StatusBar statusBar){
        }
        public void dispose(){
          componentFactory.disposeComponent(myStatusBar,c);
        }
      }
,"before Memory");
    }
  }
  setMemoryIndicatorVisible(myUISettings.SHOW_MEMORY_INDICATOR);
}
