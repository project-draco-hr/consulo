{
  myStatusBar=new IdeStatusBarImpl();
  myStatusBar.install(frame);
  myMemoryWidget=new MemoryUsagePanel();
  if (myStatusBarCustomComponentFactories != null) {
    for (    final StatusBarCustomComponentFactory<JComponent> componentFactory : myStatusBarCustomComponentFactories) {
      final JComponent c=componentFactory.createComponent(myStatusBar);
      myStatusBar.addWidget(new CustomStatusBarWidget(){
        @Override public JComponent getComponent(){
          return c;
        }
        @Override @NotNull public String ID(){
          return c.getClass().getSimpleName();
        }
        @Override public WidgetPresentation getPresentation(        @NotNull PlatformType type){
          return null;
        }
        @Override public void install(        @NotNull StatusBar statusBar){
        }
        @Override public void dispose(){
          componentFactory.disposeComponent(myStatusBar,c);
        }
      }
,"before " + MemoryUsagePanel.WIDGET_ID);
    }
  }
  myStatusBar.addWidget(myMemoryWidget);
  myStatusBar.addWidget(new IdeMessagePanel(frame,MessagePool.getInstance()),"before " + MemoryUsagePanel.WIDGET_ID);
  setMemoryIndicatorVisible(myUISettings.SHOW_MEMORY_INDICATOR);
}
