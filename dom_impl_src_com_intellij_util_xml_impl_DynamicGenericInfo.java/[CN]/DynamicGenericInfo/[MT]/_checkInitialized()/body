{
  myStaticGenericInfo.buildMethodMaps();
  if (myComputing.get() != null)   return;
  r.unlock();
  boolean rlocked=false;
  try {
    w.lock();
    try {
      myAttributes=myStaticGenericInfo.getAttributes();
      myFixeds=myStaticGenericInfo.getFixed();
      myCollections=myStaticGenericInfo.getCollections();
      myComputing.set(Boolean.TRUE);
    }
  finally {
      w.unlock();
    }
    DomExtensionsRegistrarImpl registrar=null;
    final DomElement domElement=myInvocationHandler.getProxy();
    for (    final DomExtenderEP extenderEP : Extensions.getExtensions(DomExtenderEP.EP_NAME)) {
      registrar=extenderEP.extend(myProject,domElement,registrar);
    }
    final AbstractDomChildDescriptionImpl description=myInvocationHandler.getChildDescription();
    if (description != null) {
      final List<DomExtender> extenders=description.getUserData(DomExtensionImpl.DOM_EXTENDER_KEY);
      if (extenders != null) {
        if (registrar == null)         registrar=new DomExtensionsRegistrarImpl();
        for (        final DomExtender extender : extenders) {
          extender.registerExtensions(domElement,registrar);
        }
      }
    }
    w.lock();
    try {
      if (registrar != null) {
        final List<DomExtensionImpl> attributes=registrar.getAttributes();
        if (!attributes.isEmpty()) {
          myAttributes=new ChildrenDescriptionsHolder<AttributeChildDescriptionImpl>(myStaticGenericInfo.getAttributes());
          for (          final DomExtensionImpl extension : attributes) {
            myAttributes.addDescription(extension.addAnnotations(new AttributeChildDescriptionImpl(extension.getXmlName(),extension.getType())));
          }
        }
        final List<DomExtensionImpl> fixeds=registrar.getFixeds();
        if (!fixeds.isEmpty()) {
          myFixeds=new ChildrenDescriptionsHolder<FixedChildDescriptionImpl>(myStaticGenericInfo.getFixed());
          for (          final DomExtensionImpl extension : fixeds) {
            myFixeds.addDescription(extension.addAnnotations(new FixedChildDescriptionImpl(extension.getXmlName(),extension.getType(),extension.getCount(),ArrayUtil.EMPTY_COLLECTION_ARRAY)));
          }
        }
        final List<DomExtensionImpl> collections=registrar.getCollections();
        if (!collections.isEmpty()) {
          myCollections=new ChildrenDescriptionsHolder<CollectionChildDescriptionImpl>(myStaticGenericInfo.getCollections());
          for (          final DomExtensionImpl extension : collections) {
            myCollections.addDescription(extension.addAnnotations(new CollectionChildDescriptionImpl(extension.getXmlName(),extension.getType(),Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST)));
          }
        }
        final DomExtensionImpl extension=registrar.getCustomChildrenType();
        if (extension != null) {
          myCustomChildren=new CustomDomChildrenDescriptionImpl(null,extension.getType());
        }
      }
    }
  finally {
      myComputing.set(null);
      r.lock();
      rlocked=true;
      w.unlock();
    }
  }
  finally {
    if (!rlocked) {
      r.lock();
    }
  }
}
