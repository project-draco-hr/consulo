{
  myStaticGenericInfo.buildMethodMaps();
  if (myCachedValue.hasUpToDateValue())   return;
  if (myComputing)   return;
  if (myInvocationHandler != null) {
    r.unlock();
    boolean rlocked=false;
    try {
      w.lock();
      try {
        if (myCachedValue.hasUpToDateValue())         return;
        myAttributes.clear();
        myFixeds.clear();
        myCollections.clear();
        myComputing=true;
      }
  finally {
        w.unlock();
      }
      DomExtensionsRegistrarImpl registrar=null;
      final DomElement domElement=myInvocationHandler.getProxy();
      for (      final DomExtenderEP extenderEP : Extensions.getExtensions(DomExtenderEP.EP_NAME)) {
        registrar=extenderEP.extend(myProject,domElement,registrar);
      }
      w.lock();
      try {
        if (myCachedValue.hasUpToDateValue())         return;
        if (registrar != null) {
          for (          final DomExtensionImpl extension : registrar.getAttributes()) {
            myAttributes.addDescription(extension.addAnnotations(new AttributeChildDescriptionImpl(extension.getXmlName(),extension.getType())));
          }
          for (          final DomExtensionImpl extension : registrar.getFixeds()) {
            myFixeds.addDescription(extension.addAnnotations(new FixedChildDescriptionImpl(extension.getXmlName(),extension.getType(),extension.getCount(),ArrayUtil.EMPTY_COLLECTION_ARRAY)));
          }
          for (          final DomExtensionImpl extension : registrar.getCollections()) {
            myCollections.addDescription(extension.addAnnotations(new CollectionChildDescriptionImpl(extension.getXmlName(),extension.getType(),Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST)));
          }
        }
        ((MyCachedValueProvider)myCachedValue.getValueProvider()).deps=registrar == null ? ArrayUtil.EMPTY_OBJECT_ARRAY : registrar.getDependencies();
        myCachedValue.getValue();
      }
  finally {
        myComputing=false;
        r.lock();
        rlocked=true;
        w.unlock();
      }
    }
  finally {
      if (!rlocked) {
        r.lock();
      }
    }
  }
}
