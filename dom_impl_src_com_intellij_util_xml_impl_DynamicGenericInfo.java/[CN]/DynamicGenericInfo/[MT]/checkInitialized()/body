{
  myStaticGenericInfo.buildMethodMaps();
  r.lock();
  try {
    if (myCachedValue.hasUpToDateValue())     return;
  }
  finally {
    r.unlock();
  }
  if (myInvocationHandler != null) {
    w.lock();
    try {
      if (myCachedValue.hasUpToDateValue())       return;
      if (myComputing)       return;
      myComputing=true;
      myAttributes.clear();
      myFixeds.clear();
      myCollections.clear();
      DomExtensionsRegistrarImpl registrar=null;
      for (      final DomExtenderEP extenderEP : Extensions.getExtensions(DomExtenderEP.EP_NAME)) {
        registrar=extenderEP.extend(myProject,myInvocationHandler.getProxy(),registrar);
      }
      if (registrar != null) {
        for (        final DomExtensionImpl extension : registrar.getAttributes()) {
          myAttributes.addDescription(extension.addAnnotations(new AttributeChildDescriptionImpl(extension.getXmlName(),extension.getType())));
        }
        for (        final DomExtensionImpl extension : registrar.getFixeds()) {
          myFixeds.addDescription(extension.addAnnotations(new FixedChildDescriptionImpl(extension.getXmlName(),extension.getType(),extension.getCount(),ArrayUtil.EMPTY_COLLECTION_ARRAY)));
        }
        for (        final DomExtensionImpl extension : registrar.getCollections()) {
          myCollections.addDescription(extension.addAnnotations(new CollectionChildDescriptionImpl(extension.getXmlName(),extension.getType(),Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST,Collections.EMPTY_LIST)));
        }
      }
      ((MyCachedValueProvider)myCachedValue.getValueProvider()).deps=registrar == null ? ArrayUtil.EMPTY_OBJECT_ARRAY : registrar.getDependencies();
      myCachedValue.getValue();
    }
  finally {
      myComputing=false;
      w.unlock();
    }
  }
}
