{
  PsiClass[] cachedClasses=myCachedClasses;
  if (cachedClasses == null) {
    if (getTreeElement() != null || getRepositoryId() < 0) {
      LOG.debug("Loading tree for " + getName());
      cachedClasses=calcTreeElement().getChildrenAsPsiElements(CLASS_BIT_SET,PSI_CLASS_ARRAY_CONSTRUCTOR);
    }
 else {
      long[] classIds=getRepositoryManager().getFileView().getClasses(getRepositoryId());
      cachedClasses=classIds.length > 0 ? new PsiClass[classIds.length] : PsiClass.EMPTY_ARRAY;
      for (int i=0; i < classIds.length; i++) {
        long id=classIds[i];
        cachedClasses[i]=(PsiClass)getRepositoryElementsManager().findOrCreatePsiElementById(id);
      }
    }
    myCachedClasses=cachedClasses;
  }
  return cachedClasses;
}
