{
  if (aClass.isInterface() || aClass.isAnnotationType()) {
    return;
  }
  if (m_ignoreCloneableDueToInheritance) {
    if (!CloneUtils.isDirectlyCloneable(aClass)) {
      return;
    }
  }
 else {
    if (!CloneUtils.isCloneable(aClass)) {
      return;
    }
  }
  final PsiMethod[] methods=aClass.getMethods();
  for (int i=0; i < methods.length; i++) {
    final PsiMethod method=methods[i];
    if (CloneUtils.isClone(method)) {
      return;
    }
  }
  registerClassError(aClass);
}
