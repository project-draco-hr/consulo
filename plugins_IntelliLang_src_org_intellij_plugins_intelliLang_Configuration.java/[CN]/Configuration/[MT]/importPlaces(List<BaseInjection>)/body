{
  final Map<String,Set<BaseInjection>> map=ContainerUtil.classify(injections.iterator(),new Convertor<BaseInjection,String>(){
    @Override public String convert(    final BaseInjection o){
      return o.getSupportId();
    }
  }
);
  final ArrayList<BaseInjection> originalInjections=new ArrayList<BaseInjection>();
  final ArrayList<BaseInjection> newInjections=new ArrayList<BaseInjection>();
  for (  String supportId : InjectorUtils.getActiveInjectionSupportIds()) {
    final Set<BaseInjection> importingInjections=map.get(supportId);
    if (importingInjections == null)     continue;
    importInjections(getInjections(supportId),importingInjections,originalInjections,newInjections);
  }
  if (!newInjections.isEmpty())   configurationModified();
  replaceInjections(newInjections,originalInjections,true);
  return newInjections.size();
}
