{
  final ArrayList<Configuration> cfgList=new ArrayList<Configuration>();
  final THashSet<Object> visited=new THashSet<Object>();
  for (  LanguageInjectionConfigBean configBean : Extensions.getExtensions(LanguageInjectionSupport.CONFIG_EP_NAME)) {
    PluginDescriptor descriptor=configBean.getPluginDescriptor();
    final ClassLoader loader=descriptor.getPluginClassLoader();
    try {
      final Enumeration<URL> enumeration=loader.getResources(configBean.getConfigUrl());
      if (enumeration == null || !enumeration.hasMoreElements()) {
        LOG.warn(descriptor.getPluginId() + ": " + configBean.getConfigUrl()+ " was not found");
      }
 else {
        while (enumeration.hasMoreElements()) {
          URL url=enumeration.nextElement();
          if (!visited.add(url.getFile()))           continue;
          try {
            cfgList.add(load(url.openStream()));
          }
 catch (          Exception e) {
            LOG.warn(e);
          }
        }
      }
    }
 catch (    Exception e) {
      LOG.warn(e);
    }
  }
  final ArrayList<BaseInjection> defaultInjections=new ArrayList<BaseInjection>();
  for (  String supportId : InjectorUtils.getActiveInjectionSupportIds()) {
    for (    Configuration cfg : cfgList) {
      final List<BaseInjection> imported=cfg.getInjections(supportId);
      defaultInjections.addAll(imported);
    }
  }
  return defaultInjections;
}
