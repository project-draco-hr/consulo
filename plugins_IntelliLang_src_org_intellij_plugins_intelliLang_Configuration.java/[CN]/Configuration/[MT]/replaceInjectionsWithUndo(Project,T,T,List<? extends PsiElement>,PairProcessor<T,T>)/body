{
  final UndoableAction action=new UndoableAction(){
    public void undo() throws UnexpectedUndoException {
      actualProcessor.process(remove,add);
    }
    public void redo() throws UnexpectedUndoException {
      actualProcessor.process(add,remove);
    }
    public DocumentReference[] getAffectedDocuments(){
      return DocumentReference.EMPTY_ARRAY;
    }
    public boolean isGlobal(){
      return true;
    }
  }
;
  final List<PsiFile> psiFiles=ContainerUtil.mapNotNull(psiElementsToRemove,new NullableFunction<PsiElement,PsiFile>(){
    public PsiFile fun(    final PsiElement psiAnnotation){
      return psiAnnotation instanceof PsiCompiledElement ? null : psiAnnotation.getContainingFile();
    }
  }
);
  new WriteCommandAction.Simple(project,"Language Injection Configuration Update",psiFiles.toArray(new PsiFile[psiFiles.size()])){
    public void run(){
      for (      PsiElement annotation : psiElementsToRemove) {
        annotation.delete();
      }
      actualProcessor.process(add,remove);
      UndoManager.getInstance(project).undoableActionPerformed(action);
    }
    @Override protected UndoConfirmationPolicy getUndoConfirmationPolicy(){
      return UndoConfirmationPolicy.REQUEST_CONFIRMATION;
    }
  }
.execute();
}
