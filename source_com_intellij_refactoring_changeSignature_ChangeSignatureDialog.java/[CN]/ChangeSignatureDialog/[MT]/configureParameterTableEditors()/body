{
  myParametersTable.getColumnModel().getColumn(0).setCellRenderer(new CodeFragmentTableCellRenderer(myProject));
  myParametersTable.getColumnModel().getColumn(1).setCellRenderer(new MyCellRenderer());
  myParametersTable.getColumnModel().getColumn(2).setCellRenderer(new CodeFragmentTableCellRenderer(myProject));
  if (myParametersTable.getColumnCount() == 4) {
    myParametersTable.getColumnModel().getColumn(3).setCellRenderer(new BooleanTableCellRenderer(){
      public Component getTableCellRendererComponent(      JTable table,      Object value,      boolean isSelected,      boolean hasFocus,      int row,      int column){
        super.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
        if (!myParametersTableModel.isCellEditable(row,myParametersTable.convertColumnIndexToModel(column))) {
          setBackground(getBackground().darker());
        }
        return this;
      }
    }
);
  }
  myParametersTable.getColumnModel().getColumn(0).setCellEditor(new CodeFragmentTableCellEditor(myProject));
  myParametersTable.getColumnModel().getColumn(1).setCellEditor(new MyNameTableCellEditor(myProject));
  myParametersTable.getColumnModel().getColumn(2).setCellEditor(new CodeFragmentTableCellEditor(myProject){
    public Component getTableCellEditorComponent(    JTable table,    Object value,    boolean isSelected,    int row,    int column){
      final Component editor=super.getTableCellEditorComponent(table,value,isSelected,row,column);
      if (myCodeFragment instanceof PsiExpressionCodeFragment) {
        final Object valueAt=table.getValueAt(row,0);
        if (valueAt != null) {
          try {
            final PsiType type=((PsiTypeCodeFragment)valueAt).getType();
            ((PsiExpressionCodeFragment)myCodeFragment).setExpectedType(type);
          }
 catch (          PsiTypeCodeFragment.TypeSyntaxException e) {
          }
catch (          PsiTypeCodeFragment.NoTypeException e) {
          }
        }
      }
      return editor;
    }
  }
);
}
