{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  @NonNls final String name=methodExpression.getReferenceName();
  if (!"arraycopy".equals(name)) {
    return;
  }
  final PsiExpression qualifierExpression=methodExpression.getQualifierExpression();
  if (!(qualifierExpression instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)qualifierExpression;
  final String canonicalText=referenceExpression.getCanonicalText();
  if (!canonicalText.equals("java.lang.System")) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 5) {
    return;
  }
  final PsiExpression src=arguments[0];
  final PsiType srcType=src.getType();
  final PsiExpression srcPos=arguments[1];
  if (isNegativeArgument(srcPos)) {
    errorString=InspectionGadgetsBundle.message("suspicious.system.arraycopy.problem.descriptor1");
    registerError(srcPos);
  }
  final PsiExpression destPos=arguments[3];
  if (isNegativeArgument(destPos)) {
    errorString=InspectionGadgetsBundle.message("suspicious.system.arraycopy.problem.descriptor2");
    registerError(destPos);
  }
  final PsiExpression length=arguments[4];
  if (isNegativeArgument(length)) {
    errorString=InspectionGadgetsBundle.message("suspicious.system.arraycopy.problem.descriptor3");
    registerError(length);
  }
  boolean notArrayReported=false;
  if (!(srcType instanceof PsiArrayType)) {
    errorString=InspectionGadgetsBundle.message("suspicious.system.arraycopy.problem.descriptor4");
    registerError(src);
    notArrayReported=true;
  }
  final PsiExpression dest=arguments[2];
  final PsiType destType=dest.getType();
  if (!(destType instanceof PsiArrayType)) {
    errorString=InspectionGadgetsBundle.message("suspicious.system.arraycopy.problem.descriptor5");
    registerError(dest);
    notArrayReported=true;
  }
  if (notArrayReported) {
    return;
  }
  if (!srcType.equals(destType)) {
    errorString=InspectionGadgetsBundle.message("suspicious.system.arraycopy.problem.descriptor6");
    registerError(dest);
  }
}
