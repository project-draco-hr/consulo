{
  final Border border=getBorder();
  int shiftX=0, shiftY=0;
  if (border != null) {
    shiftX=border.getBorderInsets(this).left;
    shiftY=border.getBorderInsets(this).top;
  }
  setForeground(myIsLinkActive ? getActive() : isVisited() ? getVisited() : getNormal());
  super.paintComponent(g);
  if (getText() != null) {
    g.setColor(myIsLinkActive ? getActive() : isVisited() ? getVisited() : getNormal());
    int x=myIconWidth;
    int y=getTextBaseLine();
    if (myUnderline) {
      int k=1;
      if (getFont().getSize() > 11) {
        k+=(getFont().getSize() - 11);
      }
      y+=k;
      if (getHorizontalAlignment() == LEFT) {
        g.drawLine(x + shiftX,y + shiftY,x + getFontMetrics(getFont()).stringWidth(getText()) + shiftX,y + shiftY);
      }
 else {
        g.drawLine(getWidth() - 1 - getFontMetrics(getFont()).stringWidth(getText()) + shiftX,y + shiftY,getWidth() - 1 + shiftX,y + shiftY);
      }
    }
 else {
    }
    if (myPaintDefaultIcon) {
      int endX=myIconWidth + getFontMetrics(getFont()).stringWidth(getText());
      int endY=getHeight() / 2 - LINK.getIconHeight() / 2 + 1;
      LINK.paintIcon(this,g,endX + shiftX + DEFAULT_ICON_GAP,endY);
    }
  }
}
