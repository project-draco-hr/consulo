{
  SuspendContextImpl suspendContext=new SuspendContextImpl(myDebugProcess,set.suspendPolicy(),set.size(),set){
    protected void resumeImpl(){
      if (LOG.isDebugEnabled()) {
        LOG.debug("Start resuming eventSet " + set.toString() + " suspendPolicy = "+ set.suspendPolicy()+ ",size = "+ set.size());
      }
      myDebugProcess.logThreads();
      final ThreadReferenceProxyImpl thread=getThread();
      if (thread != null) {
        try {
          if (!thread.isSuspended()) {
            final int status=thread.status();
            if ((status != ThreadReference.THREAD_STATUS_ZOMBIE) && (status != ThreadReference.THREAD_STATUS_NOT_STARTED) && (status != ThreadReference.THREAD_STATUS_UNKNOWN)) {
              LOG.error("Context thread must be suspended");
            }
          }
        }
 catch (        ObjectCollectedException ignored) {
        }
      }
      int attempts=5;
      while (--attempts > 0) {
        try {
          set.resume();
          break;
        }
 catch (        ObjectCollectedException e) {
          LOG.info(e);
          continue;
        }
catch (        InternalException e) {
          if (e.errorCode() == 13 && set.suspendPolicy() == EventRequest.SUSPEND_ALL) {
            continue;
          }
 else {
            LOG.error(e);
            break;
          }
        }
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("Set resumed ");
      }
      myDebugProcess.logThreads();
    }
  }
;
  pushContext(suspendContext);
  return suspendContext;
}
