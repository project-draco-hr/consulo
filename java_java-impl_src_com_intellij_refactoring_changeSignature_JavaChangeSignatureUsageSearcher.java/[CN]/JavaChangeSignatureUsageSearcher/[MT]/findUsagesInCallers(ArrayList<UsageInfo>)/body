{
  if (myChangeInfo instanceof JavaChangeInfoImpl) {
    JavaChangeInfoImpl changeInfo=(JavaChangeInfoImpl)myChangeInfo;
    for (    PsiMethod caller : changeInfo.propagateParametersMethods) {
      usages.add(new CallerUsageInfo(caller,true,changeInfo.propagateExceptionsMethods.contains(caller)));
    }
    for (    PsiMethod caller : changeInfo.propagateExceptionsMethods) {
      usages.add(new CallerUsageInfo(caller,changeInfo.propagateParametersMethods.contains(caller),true));
    }
    Set<PsiMethod> merged=new HashSet<PsiMethod>();
    merged.addAll(changeInfo.propagateParametersMethods);
    merged.addAll(changeInfo.propagateExceptionsMethods);
    for (    final PsiMethod method : merged) {
      findSimpleUsagesWithoutParameters(method,usages,changeInfo.propagateParametersMethods.contains(method),changeInfo.propagateExceptionsMethods.contains(method),false);
    }
  }
}
