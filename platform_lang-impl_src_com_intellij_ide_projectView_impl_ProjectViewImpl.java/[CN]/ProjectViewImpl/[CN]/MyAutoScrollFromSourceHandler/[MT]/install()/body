{
  FileEditorManagerAdapter myEditorManagerListener=new FileEditorManagerAdapter(){
    public void selectionChanged(    final FileEditorManagerEvent event){
      final FileEditor newEditor=event.getNewEditor();
      myAlarm.cancelAllRequests();
      myAlarm.addRequest(new Runnable(){
        public void run(){
          if (myProject.isDisposed() || !myViewContentPanel.isShowing())           return;
          if (isAutoscrollFromSource(getCurrentViewId())) {
            if (newEditor instanceof TextEditor) {
              Editor editor=((TextEditor)newEditor).getEditor();
              selectElementAtCaretNotLosingFocus(editor);
            }
 else             if (newEditor != null) {
              final VirtualFile file=FileEditorManagerEx.getInstanceEx(myProject).getFile(newEditor);
              if (file != null) {
                final PsiFile psiFile=PsiManager.getInstance(myProject).findFile(file);
                if (psiFile != null) {
                  final SelectInTarget target=mySelectInTargets.get(getCurrentViewId());
                  if (target != null) {
                    final MySelectInContext selectInContext=new MySelectInContext(psiFile,null){
                      @Override public Object getSelectorInFile(){
                        return psiFile;
                      }
                    }
;
                    if (target.canSelect(selectInContext)) {
                      target.selectIn(selectInContext,false);
                    }
                  }
                }
              }
            }
          }
        }
      }
,300,ModalityState.NON_MODAL);
    }
  }
;
  myFileEditorManager.addFileEditorManagerListener(myEditorManagerListener,this);
}
