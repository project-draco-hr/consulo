{
  RadComponent[][] components=myMainContainer.getGridComponents(false);
  for (int i=0; i < components.length; i++) {
    RadComponent[] rowComponents=components[i];
    List<RadViewComponent> editComponents=new ArrayList<RadViewComponent>();
    int count=0;
    for (    RadComponent component : myComponents) {
      int column=((RadCaptionColumn)component).getIndex();
      RadViewComponent editComponent=(RadViewComponent)rowComponents[column];
      editComponents.add(editComponent);
      if (editComponent != null) {
        RadGridLayoutComponent.clearCellSpans(editComponent);
        count++;
      }
    }
    if (count > 0) {
      RadViewComponent insertBeforeColumn=null;
      if (insertBefore != null) {
        int column=((RadCaptionColumn)insertBefore).getIndex();
        for (int j=column; j < rowComponents.length; j++) {
          insertBeforeColumn=(RadViewComponent)rowComponents[j];
          if (insertBeforeColumn != null) {
            if (!editComponents.isEmpty() && insertBeforeColumn == editComponents.get(0)) {
              editComponents.remove(0);
              insertBeforeColumn=null;
              continue;
            }
            break;
          }
        }
      }
      if (insertBefore == null || insertBeforeColumn != null) {
        for (        RadViewComponent component : editComponents) {
          if (component != insertBeforeColumn) {
            ModelParser.moveComponent(myMainContainer,component,insertBeforeColumn);
          }
        }
      }
    }
    List<RadComponent> rowList=new ArrayList<RadComponent>();
    Collections.addAll(rowList,rowComponents);
    rowList.removeAll(editComponents);
    if (insertBefore == null) {
      rowList.addAll(editComponents);
    }
 else {
      rowList.addAll(((RadCaptionColumn)insertBefore).getIndex(),editComponents);
    }
    for (    RadViewComponent component : editComponents) {
      Rectangle cellIndex=RadGridLayoutComponent.getCellInfo(component);
      GridInfo.setNull(components,null,cellIndex.y,cellIndex.y + cellIndex.height,cellIndex.x,cellIndex.x + cellIndex.width);
    }
    components[i]=rowList.toArray(new RadComponent[rowList.size()]);
  }
  for (  RadComponent component : myComponents) {
    component.removeFromParent();
    myContainer.add(component,insertBefore);
  }
  GridLayoutOperation.validateLayoutParams(components);
}
