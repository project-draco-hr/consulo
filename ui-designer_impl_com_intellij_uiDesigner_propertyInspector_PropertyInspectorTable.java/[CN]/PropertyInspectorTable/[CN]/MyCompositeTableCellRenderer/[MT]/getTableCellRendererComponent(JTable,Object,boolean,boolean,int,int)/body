{
  LOG.assertTrue(value != null);
  myPropertyNameRenderer.getTableCellRendererComponent(table,value,selected,hasFocus,row,column);
  column=table.convertColumnIndexToModel(column);
  final Property property=(Property)value;
  final Color background;
  if (property instanceof IntrospectedProperty) {
    background=table.getBackground();
  }
 else {
    background=property.getParent() == null ? SYNTETIC_PROPERTY_BACKGROUND : SYNTETIC_SUBPROPERTY_BACKGROUND;
  }
  if (!selected) {
    myPropertyNameRenderer.setBackground(background);
  }
  if (column == 0) {
    SimpleTextAttributes attrs=getTextAttributes(row,property);
    myPropertyNameRenderer.append(property.getName(),attrs);
    if (property.getChildren().length > 0) {
      if (myExpandedProperties.contains(property.getName())) {
        myPropertyNameRenderer.setIcon(myCollapseIcon);
      }
 else {
        myPropertyNameRenderer.setIcon(myExpandIcon);
      }
    }
 else {
      if (property.getParent() != null) {
        myPropertyNameRenderer.setIcon(myLevel2ShiftIcon);
      }
 else {
        myPropertyNameRenderer.setIcon(myLevel1ShiftIcon);
      }
    }
  }
 else   if (column == 1) {
    final PropertyRenderer renderer=property.getRenderer();
    final JComponent component=renderer.getComponent(myComponent,property.getValue(myComponent),selected,hasFocus);
    if (!selected) {
      component.setBackground(background);
    }
    if (property.isModified(myComponent)) {
      component.setFont(table.getFont().deriveFont(Font.BOLD));
    }
 else {
      component.setFont(table.getFont());
    }
    return component;
  }
 else {
    throw new IllegalArgumentException("wrong column: " + column);
  }
  if (!selected) {
    myPropertyNameRenderer.setForeground(PropertyInspectorTable.this.getForeground());
    if (property instanceof IntrospectedProperty) {
      final Class componentClass=myComponent.getComponentClass();
      if (Properties.getInstance().isExpertProperty(componentClass,property.getName())) {
        myPropertyNameRenderer.setForeground(Color.LIGHT_GRAY);
      }
    }
  }
  return myPropertyNameRenderer;
}
