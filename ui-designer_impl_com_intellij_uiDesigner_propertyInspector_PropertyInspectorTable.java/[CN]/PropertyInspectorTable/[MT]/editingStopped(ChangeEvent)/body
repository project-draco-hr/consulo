{
  LOG.assertTrue(isEditing());
  LOG.assertTrue(editingRow != -1);
  final Property property=myProperties.get(editingRow);
  final PropertyEditor editor=property.getEditor();
  editor.removePropertyEditorListener(myPropertyEditorListener);
  try {
    final Object value=editor.getValue();
    setValueAt(value,editingRow,editingColumn);
  }
 catch (  final Exception exc) {
    final Throwable cause=exc.getCause();
    if (cause != null) {
      Messages.showMessageDialog(cause.getMessage(),UIDesignerBundle.message("title.invalid.input"),Messages.getErrorIcon());
    }
 else {
      Messages.showMessageDialog(exc.getMessage(),UIDesignerBundle.message("title.invalid.input"),Messages.getErrorIcon());
    }
  }
 finally {
    removeEditor();
  }
}
