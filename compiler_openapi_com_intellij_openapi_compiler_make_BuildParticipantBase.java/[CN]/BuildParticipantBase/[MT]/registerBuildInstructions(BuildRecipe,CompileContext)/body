{
  final JavaeeDeploymentItem[] deploymentDescriptors=getDeploymentDescriptors();
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      for (      JavaeeDeploymentItem deploymentDescriptor : deploymentDescriptors) {
        if (deploymentDescriptor.isDescriptorOptional()) {
          continue;
        }
        try {
          deploymentDescriptor.checkIsValid();
          VirtualFile virtualFile=deploymentDescriptor.getVirtualFile();
          if (virtualFile != null) {
            final File file=VfsUtil.virtualToIoFile(virtualFile);
            instructions.addFileCopyInstruction(file,false,myModule,deploymentDescriptor.getOutputRelativePath(),null);
          }
        }
 catch (        VerificationException e) {
          String message=e.getMessage();
          if (message == null || message.length() == 0) {
            message="";
          }
          final String moduleDescription=myModule.getModuleType().getName() + " '" + myModule.getName()+ '\'';
          if (!deploymentDescriptor.isDescriptorOptional() && new File(VfsUtil.urlToPath(deploymentDescriptor.getUrl())).exists()) {
            context.addMessage(CompilerMessageCategory.ERROR,CompilerBundle.message("message.text.compiling.module.message",moduleDescription,message),deploymentDescriptor.getUrl(),-1,-1);
          }
 else {
            MakeUtil.getInstance().reportDeploymentDescriptorDoesNotExists(deploymentDescriptor,context,myModule);
          }
        }
      }
    }
  }
);
}
