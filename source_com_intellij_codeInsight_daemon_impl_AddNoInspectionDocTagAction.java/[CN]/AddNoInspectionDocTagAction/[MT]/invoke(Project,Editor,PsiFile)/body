{
  PsiDocCommentOwner container=getContainer();
  if (!CodeInsightUtil.prepareFileForWrite(container.getContainingFile()))   return;
  PsiDocComment docComment=container.getDocComment();
  PsiManager manager=myContext.getManager();
  if (docComment == null) {
    String commentText="/** @" + InspectionManagerEx.SUPPRESS_INSPECTIONS_TAG_NAME + " "+ myID+ "*/";
    docComment=manager.getElementFactory().createDocCommentFromText(commentText,null);
    manager.getCodeStyleManager().reformat(docComment);
    PsiElement firstChild=container.getFirstChild();
    container.addBefore(docComment,firstChild);
    manager.getCodeStyleManager().reformatRange(container,container.getTextRange().getStartOffset(),firstChild.getTextRange().getStartOffset());
    return;
  }
  PsiDocTag noInspectionTag=docComment.findTagByName(InspectionManagerEx.SUPPRESS_INSPECTIONS_TAG_NAME);
  if (noInspectionTag != null) {
    String tagText="@" + InspectionManagerEx.SUPPRESS_INSPECTIONS_TAG_NAME + " "+ noInspectionTag.getValueElement().getText()+ ","+ myID;
    noInspectionTag.replace(manager.getElementFactory().createDocTagFromText(tagText,null));
  }
 else {
    String tagText="@" + InspectionManagerEx.SUPPRESS_INSPECTIONS_TAG_NAME + " "+ myID;
    docComment.add(manager.getElementFactory().createDocTagFromText(tagText,null));
  }
}
