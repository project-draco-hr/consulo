{
  for (  RefElement refElement : to.getInReferences()) {
    if (!isAccessibleFrom(refElement,to,accessModifier))     return false;
  }
  if (to instanceof RefMethod) {
    RefMethod refMethod=(RefMethod)to;
    if (refMethod.isAbstract() && (refMethod.getDerivedMethods().size() == 0 || refMethod.getAccessModifier() == PsiModifier.PRIVATE))     return false;
    for (    RefMethod refOverride : refMethod.getDerivedMethods()) {
      if (!isAccessibleFrom(refOverride,to,accessModifier))       return false;
    }
    for (    RefMethod refSuper : refMethod.getSuperMethods()) {
      if (RefUtil.getInstance().compareAccess(refSuper.getAccessModifier(),accessModifier) > 0)       return false;
    }
  }
  if (to instanceof RefClass) {
    RefClass refClass=(RefClass)to;
    for (    RefClass subClass : refClass.getSubClasses()) {
      if (!isAccessibleFrom(subClass,to,accessModifier))       return false;
    }
    List children=refClass.getChildren();
    if (children != null) {
      for (      Object refElement : children) {
        if (!isAccessible((RefElement)refElement,accessModifier))         return false;
      }
    }
    for (    final RefElement refElement : refClass.getInTypeReferences()) {
      if (!isAccessibleFrom(refElement,refClass,accessModifier))       return false;
    }
    List<RefElement> classExporters=((RefClassImpl)refClass).getClassExporters();
    if (classExporters != null) {
      for (      RefElement refExporter : classExporters) {
        if (getAccessLevel(accessModifier) < getAccessLevel(refExporter.getAccessModifier()))         return false;
      }
    }
  }
  return true;
}
