{
  getRefManager().iterate(new RefVisitor(){
    public void visitElement(    RefEntity refEntity){
      if (!(refEntity instanceof RefElement))       return;
      if (getFilter().accepts((RefElement)refEntity)) {
        Element element=XMLExportUtl.createElement(refEntity,parentNode,-1,null);
        @NonNls Element problemClassElement=new Element(InspectionsBundle.message("inspection.export.results.problem.element.tag"));
        final HighlightSeverity severity=getCurrentSeverity((RefElement)refEntity);
        final String attributeKey=getTextAttributeKey((RefElement)refEntity,severity,null);
        problemClassElement.setAttribute("severity",severity.myName);
        problemClassElement.setAttribute("attribute_key",attributeKey);
        problemClassElement.addContent(InspectionsBundle.message("inspection.visibility.export.results.visibility"));
        element.addContent(problemClassElement);
        Element descriptionElement=new Element(InspectionsBundle.message("inspection.export.results.description.tag"));
        String possibleAccess=getFilter().getPossibleAccess((RefElement)refEntity);
        descriptionElement.addContent(InspectionsBundle.message("inspection.visibility.compose.suggestion",possibleAccess == PsiModifier.PACKAGE_LOCAL ? InspectionsBundle.message("inspection.package.local") : possibleAccess));
        element.addContent(descriptionElement);
      }
    }
  }
);
}
