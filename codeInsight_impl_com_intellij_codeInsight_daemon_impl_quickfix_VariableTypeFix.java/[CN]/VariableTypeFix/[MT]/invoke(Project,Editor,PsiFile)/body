{
  if (!CodeInsightUtilBase.prepareFileForWrite(myVariable.getContainingFile()))   return;
  try {
    myVariable.normalizeDeclaration();
    final TypeMigrationRules rules=new TypeMigrationRules(TypeMigrationLabeler.getElementType(myVariable));
    rules.setMigrationRootType(myReturnType);
    rules.setBoundScope(GlobalSearchScope.projectScope(project));
    new TypeMigrationProcessor(project,myVariable,rules).run();
    JavaCodeStyleManager.getInstance(project).shortenClassReferences(myVariable);
    UndoUtil.markPsiFileForUndo(file);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
