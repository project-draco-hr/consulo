{
  ArrayList<AbstractTreeNode> children=new ArrayList<AbstractTreeNode>();
  final PsiDirectory psiDirectory=getValue();
  if (!getStructure().getIsFlattenPackages() || psiDirectory.getPackage() == null) {
    final Iterator<PsiFile> iterator=myBuilder.getFiles(psiDirectory);
    while (iterator.hasNext()) {
      final PsiFile psiFile=iterator.next();
      final PsiDirectory containingDirectory=psiFile.getContainingDirectory();
      TodoFileNode todoFileNode=new TodoFileNode(getProject(),psiFile,myBuilder,false);
      if (psiDirectory.equals(containingDirectory) && !children.contains(todoFileNode)) {
        children.add(todoFileNode);
        continue;
      }
      PsiDirectory _dir=psiFile.getContainingDirectory();
      while (_dir != null) {
        if (_dir.getPackage() != null) {
          break;
        }
        final PsiDirectory parentDirectory=_dir.getParentDirectory();
        TodoDirNode todoDirNode=new TodoDirNode(getProject(),_dir,myBuilder);
        if (parentDirectory != null && psiDirectory.equals(parentDirectory) && !children.contains(todoDirNode)) {
          children.add(todoDirNode);
          break;
        }
        _dir=parentDirectory;
      }
    }
    Collections.sort(children,TodoFileDirComparator.ourInstance);
  }
 else {
    final PsiDirectory parentDirectory=psiDirectory.getParentDirectory();
    if (parentDirectory == null || parentDirectory.getPackage() == null || !ProjectRootManager.getInstance(getProject()).getFileIndex().isInContent(parentDirectory.getVirtualFile())) {
      final Iterator<PsiFile> iterator=myBuilder.getFiles(psiDirectory);
      while (iterator.hasNext()) {
        final PsiFile psiFile=iterator.next();
        TodoFileNode todoFileNode=new TodoFileNode(getProject(),psiFile,myBuilder,false);
        if (psiDirectory.equals(psiFile.getContainingDirectory()) && !children.contains(todoFileNode)) {
          children.add(todoFileNode);
          continue;
        }
        final PsiDirectory _dir=psiFile.getContainingDirectory();
        if (_dir.getPackage() != null) {
          continue;
        }
        TodoDirNode todoDirNode=new TodoDirNode(getProject(),_dir,myBuilder);
        if (PsiTreeUtil.isAncestor(psiDirectory,_dir,true) && !children.contains(todoDirNode) && !myBuilder.isDirectoryEmpty(_dir)) {
          children.add(todoDirNode);
          continue;
        }
      }
    }
 else {
      final Iterator<PsiFile> iterator=myBuilder.getFiles(psiDirectory);
      while (iterator.hasNext()) {
        final PsiFile psiFile=iterator.next();
        final PsiDirectory containingDirectory=psiFile.getContainingDirectory();
        TodoFileNode todoFileNode=new TodoFileNode(getProject(),psiFile,myBuilder,false);
        if (psiDirectory.equals(containingDirectory) && !children.contains(todoFileNode)) {
          children.add(todoFileNode);
        }
      }
    }
    Collections.sort(children,TodoFileDirComparator.ourInstance);
  }
  return children;
}
