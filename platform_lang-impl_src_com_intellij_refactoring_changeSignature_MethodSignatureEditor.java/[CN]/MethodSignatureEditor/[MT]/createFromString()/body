{
  final PsiFile file=PsiDocumentManager.getInstance(getProject()).getPsiFile(getDocument());
  if (file == null)   return null;
  final int startOffset=getCurrentSignatureTextRange().getStartOffset();
  final int endOffset=file.getTextLength();
  PsiTreeUtil.findElementOfClassAtRange(file,startOffset,endOffset,myClass);
  final FileViewProvider viewProvider=file.getViewProvider();
  M result=null;
  for (  Language lang : viewProvider.getLanguages()) {
    PsiElement elementAt=viewProvider.findElementAt(startOffset,lang);
    M run=PsiTreeUtil.getParentOfType(elementAt,myClass,false);
    M prev=run;
    while (run != null && run.getTextRange().getStartOffset() == startOffset && run.getTextRange().getEndOffset() <= endOffset) {
      prev=run;
      run=PsiTreeUtil.getParentOfType(run,myClass);
    }
    if (prev == null)     continue;
    final int elementStartOffset=prev.getTextRange().getStartOffset();
    final int elementEndOffset=prev.getTextRange().getEndOffset();
    return startOffset >= elementStartOffset && elementEndOffset <= endOffset ? prev : null;
  }
  return result;
}
