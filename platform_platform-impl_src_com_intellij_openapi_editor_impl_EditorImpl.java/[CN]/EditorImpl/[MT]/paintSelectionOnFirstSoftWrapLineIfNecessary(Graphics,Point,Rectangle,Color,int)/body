{
  VisualPosition selectionStartPosition=getSelectionModel().getSelectionStartPosition();
  VisualPosition selectionEndPosition=getSelectionModel().getSelectionEndPosition();
  if (selectionStartPosition.equals(selectionEndPosition)) {
    return;
  }
  int currentVisualLine=position.y / getLineHeight();
  int lastColumn=EditorUtil.getLastVisualLineColumnNumber(this,currentVisualLine);
  if (currentVisualLine < selectionStartPosition.line || currentVisualLine > selectionEndPosition.line || currentVisualLine == selectionEndPosition.line && selectionEndPosition.column <= lastColumn) {
    return;
  }
  final int columnsToSkip=selectionStartPosition.column - lastColumn;
  if (columnsToSkip > 0) {
    position.x+=getSoftWrapModel().getMinDrawingWidthInPixels(SoftWrapDrawingType.BEFORE_SOFT_WRAP_LINE_FEED);
    position.x+=(columnsToSkip - 1) * EditorUtil.getSpaceWidth(Font.PLAIN,this);
  }
  final int width;
  if (selectionEndPosition.line > currentVisualLine) {
    width=clip.x + clip.width - position.x;
  }
 else   if (selectionStartPosition.line < currentVisualLine || selectionStartPosition.column <= lastColumn) {
    width=getSoftWrapModel().getMinDrawingWidthInPixels(SoftWrapDrawingType.BEFORE_SOFT_WRAP_LINE_FEED) + (selectionEndPosition.column - lastColumn - 1) * EditorUtil.getSpaceWidth(fontType,this);
  }
 else {
    width=(selectionEndPosition.column - selectionStartPosition.column) * EditorUtil.getSpaceWidth(fontType,this);
  }
  drawBackground(g,getColorsScheme().getColor(EditorColors.SELECTION_BACKGROUND_COLOR),width,position,defaultBackground,clip);
}
