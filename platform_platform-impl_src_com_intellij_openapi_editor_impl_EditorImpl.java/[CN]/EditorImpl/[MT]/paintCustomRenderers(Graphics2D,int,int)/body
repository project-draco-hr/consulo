{
  myMarkupModel.processRangeHighlightersOverlappingWith(clipStartOffset,clipEndOffset,new Processor<RangeHighlighterEx>(){
    @Override public boolean process(    @NotNull RangeHighlighterEx highlighter){
      if (!highlighter.getEditorFilter().avaliableIn(EditorImpl.this))       return true;
      final CustomHighlighterRenderer customRenderer=highlighter.getCustomRenderer();
      if (customRenderer != null && clipStartOffset < highlighter.getEndOffset() && highlighter.getStartOffset() < clipEndOffset) {
        customRenderer.paint(EditorImpl.this,highlighter,g);
      }
      return true;
    }
  }
);
}
