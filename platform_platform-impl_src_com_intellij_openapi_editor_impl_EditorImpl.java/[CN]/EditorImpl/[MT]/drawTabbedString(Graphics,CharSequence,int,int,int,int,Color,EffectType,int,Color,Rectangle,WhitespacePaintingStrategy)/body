{
  int xStart=x;
  for (int i=start; i < end; i++) {
    if (text.charAt(i) != '\t')     continue;
    x=drawTablessString(text,start,i,g,x,y,fontType,fontColor,clip,context);
    int x1=EditorUtil.nextTabStop(x,this);
    drawTabPlacer(g,y,x,x1,i,context);
    x=x1;
    start=i + 1;
  }
  x=drawTablessString(text,start,end,g,x,y,fontType,fontColor,clip,context);
  if (effectColor != null) {
    final Color savedColor=g.getColor();
    int xEnd=x;
    if (xStart < clip.x && xEnd < clip.x || xStart > clip.x + clip.width && xEnd > clip.x + clip.width) {
      return x;
    }
    if (xEnd > clip.x + clip.width) {
      xEnd=clip.x + clip.width;
    }
    if (xStart < clip.x) {
      xStart=clip.x;
    }
    if (effectType == EffectType.LINE_UNDERSCORE) {
      EffectPainter.LINE_UNDERSCORE.paint((Graphics2D)g,xStart,y,xEnd - xStart,getDescent(),effectColor);
      g.setColor(savedColor);
    }
 else     if (effectType == EffectType.BOLD_LINE_UNDERSCORE) {
      EffectPainter.BOLD_LINE_UNDERSCORE.paint((Graphics2D)g,xStart,y,xEnd - xStart,getDescent(),effectColor);
      g.setColor(savedColor);
    }
 else     if (effectType == EffectType.STRIKEOUT) {
      EffectPainter.STRIKE_THROUGH.paint((Graphics2D)g,xStart,y,xEnd - xStart,getCharHeight(),effectColor);
      g.setColor(savedColor);
    }
 else     if (effectType == EffectType.WAVE_UNDERSCORE) {
      EffectPainter.WAVE_UNDERSCORE.paint((Graphics2D)g,xStart,y,xEnd - xStart,getDescent(),effectColor);
      g.setColor(savedColor);
    }
 else     if (effectType == EffectType.BOLD_DOTTED_LINE) {
      g.setColor(getBackgroundColor());
      EffectPainter.BOLD_DOTTED_UNDERSCORE.paint((Graphics2D)g,xStart,y,xEnd - xStart,getDescent(),effectColor);
    }
  }
  return x;
}
