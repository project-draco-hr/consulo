{
  if (x < 0) {
    x=0;
  }
  LogicalPosition pos=xyToLogicalPosition(new Point(x,y));
  int columnNumber=pos.column;
  int lineNumber=pos.line;
  int softWrapLines=pos.softWrapLines;
  int linesFromCurrentSoftWrap=pos.linesFromActiveSoftWrap;
  int softWrapColumns=pos.softWrapColumns;
  if (lineNumber < 0) {
    lineNumber=0;
    columnNumber=0;
    softWrapLines=0;
    linesFromCurrentSoftWrap=0;
    softWrapColumns=0;
  }
  final int totalLines=myDocument.getLineCount();
  if (totalLines <= 0) {
    getCaretModel().moveToOffset(0);
    return;
  }
  if (lineNumber >= totalLines) {
    moveCaretToScreenPos(x,logicalLineToY(totalLines - 1));
    return;
  }
  if (!mySettings.isVirtualSpace()) {
    int lineEndOffset=myDocument.getLineEndOffset(lineNumber);
    int lineEndColumnNumber=calcColumnNumber(lineEndOffset,lineNumber);
    if (columnNumber > lineEndColumnNumber) {
      columnNumber=lineEndColumnNumber;
      if (softWrapColumns != 0) {
        softWrapColumns-=columnNumber - lineEndColumnNumber;
      }
    }
  }
  if (!mySettings.isCaretInsideTabs()) {
    int offset=logicalPositionToOffset(new LogicalPosition(lineNumber,columnNumber));
    CharSequence text=myDocument.getCharsSequence();
    if (offset >= 0 && offset < myDocument.getTextLength()) {
      if (text.charAt(offset) == '\t') {
        columnNumber=calcColumnNumber(offset,lineNumber);
      }
    }
  }
  LogicalPosition pos1=new LogicalPosition(lineNumber,columnNumber,softWrapLines,linesFromCurrentSoftWrap,softWrapColumns);
  getCaretModel().moveToLogicalPosition(pos1);
}
