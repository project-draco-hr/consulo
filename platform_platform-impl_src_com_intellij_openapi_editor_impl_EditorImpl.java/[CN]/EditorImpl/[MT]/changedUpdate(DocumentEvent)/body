{
  myDocumentChangeInProgress=false;
  if (myDocument.isInBulkUpdate())   return;
  myImmediatePainter.paintUpdate(myEditorComponent.getGraphics(),e);
  if (myErrorStripeNeedsRepaint) {
    myMarkupModel.repaint(e.getOffset(),e.getOffset() + e.getNewLength());
    myErrorStripeNeedsRepaint=false;
  }
  clearTextWidthCache();
  setMouseSelectionState(MOUSE_SELECTION_STATE_NONE);
  if (!mySoftWrapModel.isSoftWrappingEnabled() && !myUseNewRendering) {
    mySizeContainer.changedUpdate(e);
  }
  validateSize();
  int startLine=offsetToLogicalLine(e.getOffset());
  int endLine=offsetToLogicalLine(e.getOffset() + e.getNewLength());
  boolean painted=false;
  if (myDocument.getTextLength() > 0) {
    if (startLine != endLine || StringUtil.indexOf(e.getOldFragment(),'\n') != -1) {
      myGutterComponent.clearLineToGutterRenderersCache();
    }
    if (countLineFeeds(e.getOldFragment()) != countLineFeeds(e.getNewFragment())) {
      repaintToScreenBottom(startLine);
      painted=true;
    }
  }
  updateCaretCursor();
  if (!painted) {
    repaintLines(startLine,endLine);
  }
  if (!Boolean.TRUE.equals(getUserData(DISABLE_CARET_POSITION_KEEPING)) && (getCaretModel().getOffset() < e.getOffset() || getCaretModel().getOffset() > e.getOffset() + e.getNewLength())) {
    restoreCaretRelativePosition();
  }
}
