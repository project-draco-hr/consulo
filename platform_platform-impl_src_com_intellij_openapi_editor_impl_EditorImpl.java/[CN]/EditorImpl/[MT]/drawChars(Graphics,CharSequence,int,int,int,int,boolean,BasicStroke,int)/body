{
  g.drawString(data.subSequence(start,end).toString(),x,y);
  if (drawWhitespace) {
    Stroke oldStroke=((Graphics2D)g).getStroke();
    Color oldColor=g.getColor();
    try {
      g.setColor(myScheme.getColor(EditorColors.WHITESPACES_COLOR));
      ((Graphics2D)g).setStroke(stroke);
      final FontMetrics metrics=g.getFontMetrics();
      y-=1;
      for (int i=start; i < end; i++) {
        final char c=data.charAt(i);
        final int charWidth=isOracleRetina ? GraphicsUtil.charWidth(c,g.getFont()) : metrics.charWidth(c);
        if (c == ' ') {
          g.fillRect(x + (charWidth - strokeWidth >> 1),y - strokeWidth + 1,strokeWidth,strokeWidth);
        }
 else         if (c == IDEOGRAPHIC_SPACE) {
          final int charHeight=getCharHeight();
          g.drawRect(x + JBUI.scale(2) + strokeWidth / 2,y - charHeight + strokeWidth / 2,charWidth - JBUI.scale(4) - (strokeWidth - 1),charHeight - (strokeWidth - 1));
        }
        x+=charWidth;
      }
    }
  finally {
      g.setColor(oldColor);
      ((Graphics2D)g).setStroke(oldStroke);
    }
  }
}
