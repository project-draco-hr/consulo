{
  final int clickOffset=logicalPositionToOffset(xyToLogicalPosition(e.getPoint()));
  putUserData(EditorActionUtil.EXPECTED_CARET_OFFSET,clickOffset);
  mySelectionTweaked=false;
  myMousePressedEvent=e;
  EditorMouseEvent event=new EditorMouseEvent(EditorImpl.this,e,getMouseEventArea(e));
  for (  EditorMouseListener mouseListener : myMouseListeners) {
    mouseListener.mousePressed(event);
  }
  if (event.isConsumed() && !(event.getMouseEvent().isPopupTrigger() || event.getArea() == EditorMouseEventArea.EDITING_AREA)) {
    return;
  }
  if (myCommandProcessor != null) {
    Runnable runnable=new Runnable(){
      @Override public void run(){
        if (processMousePressed(e) && myProject != null && !myProject.isDefault()) {
          IdeDocumentHistory.getInstance(myProject).includeCurrentCommandAsNavigation();
        }
      }
    }
;
    myCommandProcessor.executeCommand(myProject,runnable,"",DocCommandGroupId.noneGroupId(getDocument()),UndoConfirmationPolicy.DEFAULT,getDocument());
  }
 else {
    processMousePressed(e);
  }
}
