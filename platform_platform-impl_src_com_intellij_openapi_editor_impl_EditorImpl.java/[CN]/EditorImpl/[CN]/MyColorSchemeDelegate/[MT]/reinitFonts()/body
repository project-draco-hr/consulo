{
  String editorFontName=getEditorFontName();
  int editorFontSize=getEditorFontSize();
  myFontPreferences.clear();
  myFontPreferences.register(editorFontName,editorFontSize);
  EditorColorsScheme delegate=getDelegate();
  List<String> secondaryFonts=delegate != null ? delegate.getFontPreferences().getRealFontFamilies() : ContainerUtil.<String>emptyList();
  boolean first=true;
  for (  String font : secondaryFonts) {
    if (!first) {
      myFontPreferences.register(font,editorFontSize);
    }
    first=false;
  }
  myFontsMap=new EnumMap<EditorFontType,Font>(EditorFontType.class);
  Font plainFont=new Font(editorFontName,Font.PLAIN,editorFontSize);
  Font boldFont=new Font(editorFontName,Font.BOLD,editorFontSize);
  Font italicFont=new Font(editorFontName,Font.ITALIC,editorFontSize);
  Font boldItalicFont=new Font(editorFontName,Font.BOLD | Font.ITALIC,editorFontSize);
  myFontsMap.put(EditorFontType.PLAIN,plainFont);
  myFontsMap.put(EditorFontType.BOLD,boldFont);
  myFontsMap.put(EditorFontType.ITALIC,italicFont);
  myFontsMap.put(EditorFontType.BOLD_ITALIC,boldItalicFont);
}
