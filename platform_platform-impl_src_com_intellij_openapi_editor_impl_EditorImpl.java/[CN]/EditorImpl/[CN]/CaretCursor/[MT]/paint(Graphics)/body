{
  if (!isEnabled() || !myIsShown || !IJSwingUtilities.hasFocus(getContentComponent())|| isRendererMode())   return;
  int x=myLocation.x;
  int lineHeight=getLineHeight();
  int y=myLocation.y;
  Rectangle viewRectangle=getScrollingModel().getVisibleArea();
  if (x - viewRectangle.x < 0) {
    return;
  }
  g.setColor(myScheme.getColor(EditorColors.CARET_COLOR));
  if (!paintBlockCaret()) {
    if (UIUtil.isRetina()) {
      g.fillRect(x,y,mySettings.getLineCursorWidth(),lineHeight);
    }
 else {
      for (int i=0; i < mySettings.getLineCursorWidth(); i++) {
        UIUtil.drawLine(g,x + i,y,x + i,y + lineHeight - 1);
      }
    }
  }
 else {
    Color caretColor=myScheme.getColor(EditorColors.CARET_COLOR);
    if (caretColor == null)     caretColor=new JBColor(Color.BLACK,Color.WHITE);
    g.setColor(caretColor);
    g.fillRect(x,y,myWidth,lineHeight - 1);
    final LogicalPosition startPosition=getCaretModel().getLogicalPosition();
    final int offset=logicalPositionToOffset(startPosition);
    char[] chars=myDocument instanceof DocumentImpl ? ((DocumentImpl)myDocument).getRawChars() : myDocument.getChars();
    if (chars.length > offset && myDocument.getTextLength() > offset) {
      FoldRegion folding=myFoldingModel.getCollapsedRegionAtOffset(offset);
      final char ch;
      if (folding == null || folding.isExpanded()) {
        ch=chars[offset];
      }
 else {
        VisualPosition visual=getCaretModel().getVisualPosition();
        VisualPosition foldingPosition=offsetToVisualPosition(folding.getStartOffset());
        if (visual.line == foldingPosition.line) {
          ch=folding.getPlaceholderText().charAt(visual.column - foldingPosition.column);
        }
 else {
          ch=chars[offset];
        }
      }
      IterationState state=null;
      try {
        state=new IterationState(EditorImpl.this,offset,offset + 1,true);
        TextAttributes attributes=state.getMergedAttributes();
        if (attributes != null) {
          FontInfo info=EditorUtil.fontForChar(ch,attributes.getFontType(),EditorImpl.this);
          if (info != null) {
            g.setFont(info.getFont());
          }
        }
        g.setColor(CURSOR_FOREGROUND);
        g.drawChars(new char[]{ch},0,1,x,y + getAscent());
      }
  finally {
        if (state != null)         state.dispose();
      }
    }
  }
}
