{
  final int lineWidthSize=myLineWidths.size();
  if (lineWidthSize == 0 || myDocument.getTextLength() <= 0) {
    reset();
  }
 else {
    final int min=Math.min(oldEndLine,newEndLine);
    final boolean toAddNewLines=min >= lineWidthSize;
    if (toAddNewLines) {
      insertNewLines(min - lineWidthSize + 1,lineWidthSize);
    }
    for (int i=min; i > startLine - 1; i--) {
      myLineWidths.set(i,-1);
      if (maxCalculatedLine == i)       maxCalculatedLine--;
    }
    if (newEndLine > oldEndLine) {
      insertNewLines(newEndLine - oldEndLine,oldEndLine + 1);
    }
 else     if (oldEndLine > newEndLine && !toAddNewLines && newEndLine + 1 < lineWidthSize) {
      int length=Math.min(oldEndLine,lineWidthSize) - newEndLine - 1;
      int index=newEndLine + 1;
      myLineWidths.remove(index,length);
      if (index <= maxCalculatedLine) {
        maxCalculatedLine-=length;
      }
    }
    myIsDirty=true;
  }
}
