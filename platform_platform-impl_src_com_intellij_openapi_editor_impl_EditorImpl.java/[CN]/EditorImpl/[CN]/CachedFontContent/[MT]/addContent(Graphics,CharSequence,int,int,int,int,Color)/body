{
  final int count=myCount;
  if (count > 0) {
    final int lastCount=count - 1;
    final Color lastColor=color[lastCount];
    if (_data == myLastData && _start == ends[lastCount] && (_color == null || lastColor == null || _color.equals(lastColor)) && _y == y[lastCount] && (!myHasBreakSymbols || !myFontType.getSymbolsToBreakDrawingIteration().contains(_data.charAt(ends[lastCount] - 1)))) {
      ends[lastCount]=_end;
      if (lastColor == null)       color[lastCount]=_color;
      return;
    }
  }
  myLastData=_data;
  data[count]=_data;
  x[count]=_x;
  y[count]=_y;
  starts[count]=_start;
  ends[count]=_end;
  color[count]=_color;
  myCount++;
  if (count >= CACHED_CHARS_BUFFER_SIZE - 1) {
    flushContent(g);
  }
}
