{
  try {
    Project project=getContext().getProject();
    ProblemDescriptor[] problems=(ProblemDescriptor[])getDescriptions(refMethod);
    if (problems == null)     return;
    PsiManager psiManager=PsiManager.getInstance(project);
    List<PsiJavaCodeReferenceElement> refsToDelete=new ArrayList<PsiJavaCodeReferenceElement>();
    for (int i=0; i < problems.length; i++) {
      ProblemDescriptor problem=problems[i];
      PsiJavaCodeReferenceElement classRef=(PsiJavaCodeReferenceElement)problem.getPsiElement();
      if (classRef == null)       continue;
      PsiType psiType=psiManager.getElementFactory().createType(classRef);
      removeException(refMethod,psiType,refsToDelete);
    }
    for (Iterator<PsiJavaCodeReferenceElement> iterator=refsToDelete.iterator(); iterator.hasNext(); ) {
      iterator.next().delete();
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
