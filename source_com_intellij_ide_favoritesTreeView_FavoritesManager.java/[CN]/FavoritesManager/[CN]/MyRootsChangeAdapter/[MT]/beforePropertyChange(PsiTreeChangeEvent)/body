{
  if (event.getPropertyName().equals(PsiTreeChangeEvent.PROP_FILE_NAME) || event.getPropertyName().equals(PsiTreeChangeEvent.PROP_DIRECTORY_NAME)) {
    final PsiElement psiElement=event.getChild();
    if (psiElement instanceof PsiFile || psiElement instanceof PsiDirectory) {
      final Module module=ModuleUtil.findModuleForPsiElement(psiElement);
      if (module == null)       return;
      final String url=((PsiDirectory)psiElement.getParent()).getVirtualFile().getUrl() + "/" + event.getNewValue();
      final AbstractUrl childUrl=psiElement instanceof PsiFile ? new PsiFileUrl(url,module.getName()) : new DirectoryUrl(url,module.getName());
      for (      String listName : myName2FavoritesRoots.keySet()) {
        final List<Pair<AbstractUrl,String>> roots=myName2FavoritesRoots.get(listName);
        final List<Pair<AbstractUrl,String>> newRoots=new ArrayList<Pair<AbstractUrl,String>>();
        for (        Pair<AbstractUrl,String> root : roots) {
          final Object[] path=root.first.createPath(myProject);
          if (path == null || path.length < 1 || path[0] == null) {
            continue;
          }
          final Object element=path[path.length - 1];
          if (element == psiElement && psiElement instanceof PsiFile) {
            newRoots.add(Pair.create(childUrl,root.second));
          }
 else {
            newRoots.add(root);
          }
        }
        myName2FavoritesRoots.put(listName,newRoots);
      }
    }
  }
}
