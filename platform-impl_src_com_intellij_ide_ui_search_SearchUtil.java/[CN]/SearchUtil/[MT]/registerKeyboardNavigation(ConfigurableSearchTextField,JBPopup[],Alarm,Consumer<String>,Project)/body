{
  final Consumer<Integer> shower=new Consumer<Integer>(){
    public void consume(    final Integer direction){
      if (activePopup[0] != null) {
        activePopup[0].cancel();
      }
      if (activePopup[1] != null && activePopup[1].isVisible()) {
        return;
      }
      final JBPopup popup=createPopup(searchField,activePopup,showHintAlarm,selectConfigurable,project,direction.intValue());
      if (popup != null) {
        popup.showUnderneathOf(searchField);
      }
      activePopup[0]=null;
      activePopup[1]=popup;
    }
  }
;
  searchField.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      shower.consume(1);
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_DOWN,0),JComponent.WHEN_IN_FOCUSED_WINDOW);
  searchField.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      shower.consume(-1);
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_UP,0),JComponent.WHEN_IN_FOCUSED_WINDOW);
  searchField.addKeyboardListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ESCAPE && searchField.getText().length() > 0) {
        e.consume();
        if (cancelPopups(activePopup))         return;
        searchField.setText("");
      }
 else       if (e.getKeyCode() == KeyEvent.VK_ENTER) {
        searchField.addCurrentTextToHistory();
        cancelPopups(activePopup);
        if (e.getModifiers() == 0) {
          e.consume();
        }
      }
    }
  }
);
}
