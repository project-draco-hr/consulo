{
  final Project project=aPackage.getProject();
  ConcurrentMap<PsiPackage,Boolean> map=project.getUserData(SHOULD_ABBREV_PACK_KEY);
  if (map == null) {
    final ConcurrentWeakHashMap<PsiPackage,Boolean> newMap=new ConcurrentWeakHashMap<PsiPackage,Boolean>();
    map=((UserDataHolderEx)project).putUserDataIfAbsent(SHOULD_ABBREV_PACK_KEY,newMap);
    if (map == newMap) {
      ((PsiManagerEx)PsiManager.getInstance(project)).registerRunnableToRunOnChange(new Runnable(){
        @Override public void run(){
          newMap.clear();
        }
      }
);
    }
  }
  Boolean ret=map.get(aPackage);
  if (ret != null)   return ret;
  ret=scanPackages(aPackage,1);
  map.put(aPackage,ret);
  return ret;
}
