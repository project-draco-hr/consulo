{
  String name=element.getAttributeValue(NAME);
  String value=element.getAttributeValue(VALUE);
  String description;
  String resourceBundle=element.getAttributeValue(RESOURCE_BUNDLE);
  String key=element.getAttributeValue(KEY);
  String id=element.getAttributeValue(ID);
  if (resourceBundle != null && key != null) {
    ResourceBundle bundle=ResourceBundle.getBundle(resourceBundle);
    description=bundle.getString(key);
  }
 else {
    description=element.getAttributeValue(DESCRIPTION);
  }
  String shortcut=element.getAttributeValue(SHORTCUT);
  TemplateImpl template=addTemplate(name,value,groupName,description,shortcut,isDefault,id);
  template.setToReformat(Boolean.parseBoolean(element.getAttributeValue(TO_REFORMAT)));
  template.setToShortenLongNames(Boolean.parseBoolean(element.getAttributeValue(TO_SHORTEN_FQ_NAMES)));
  template.setDeactivated(Boolean.parseBoolean(element.getAttributeValue(DEACTIVATED)));
  for (  final Object o : element.getChildren(VARIABLE)) {
    Element e=(Element)o;
    String variableName=e.getAttributeValue(NAME);
    String expression=e.getAttributeValue(EXPRESSION);
    String defaultValue=e.getAttributeValue(DEFAULT_VALUE);
    boolean isAlwaysStopAt=Boolean.parseBoolean(e.getAttributeValue(ALWAYS_STOP_AT));
    template.addVariable(variableName,expression,defaultValue,isAlwaysStopAt);
  }
  Element context=element.getChild(CONTEXT);
  if (context != null) {
    template.getTemplateContext().readExternal(context);
  }
  return template;
}
