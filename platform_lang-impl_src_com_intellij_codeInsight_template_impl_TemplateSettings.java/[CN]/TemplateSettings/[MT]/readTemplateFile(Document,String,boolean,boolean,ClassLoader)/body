{
  if (document == null) {
    throw new InvalidDataException();
  }
  Element root=document.getRootElement();
  if (root == null || !TEMPLATE_SET.equals(root.getName())) {
    throw new InvalidDataException();
  }
  String groupName=root.getAttributeValue(GROUP);
  if (groupName == null || groupName.length() == 0)   groupName=defGroupName;
  TemplateGroup result=new TemplateGroup(groupName,root.getAttributeValue("REPLACE"));
  Map<String,TemplateImpl> created=new LinkedHashMap<String,TemplateImpl>();
  for (  final Object o1 : root.getChildren(TEMPLATE)) {
    Element element=(Element)o1;
    TemplateImpl template=readTemplateFromElement(isDefault,groupName,element,classLoader);
    boolean defaultTemplateModified=isDefault && (myDeletedTemplates.contains(TemplateKey.keyOf(template)) || myTemplatesById.containsKey(template.getId()) || getTemplate(template.getKey(),template.getGroupName()) != null);
    if (!defaultTemplateModified) {
      created.put(template.getKey(),template);
    }
  }
  if (registerTemplate) {
    TemplateGroup existingScheme=mySchemesManager.findSchemeByName(result.getName());
    if (existingScheme != null) {
      result=existingScheme;
    }
  }
  for (  TemplateImpl template : created.values()) {
    if (registerTemplate) {
      clearPreviouslyRegistered(template);
      addTemplateImpl(template);
    }
    addTemplateById(template);
    result.addElement(template);
  }
  if (registerTemplate) {
    TemplateGroup existingScheme=mySchemesManager.findSchemeByName(result.getName());
    if (existingScheme == null && !result.isEmpty()) {
      mySchemesManager.addNewScheme(result,false);
    }
  }
  return result.isEmpty() ? null : result;
}
