{
  processRowChanges(rowChanges);
  ArrangementTreeNode topMost=model.getTopMost();
  ArrangementTreeNode bottomMost=model.getBottomMost();
  doClearSelection();
  myExplicitSelectionChange=true;
  try {
    for (ArrangementTreeNode node=bottomMost; node != null; node=node.getParent()) {
      TreePath path=new TreePath(node.getPath());
      int row=myTree.getRowForPath(path);
      myRenderers.remove(row);
      mySelectionModel.addSelectionPath(path);
      myTreeModel.nodeChanged(node);
      mySelectionModel.addSelectionPath(path);
      ArrangementMatchCondition matchCondition=node.getBackingCondition();
      if (matchCondition != null) {
        getNodeComponentAt(row,matchCondition).setSelected(true);
      }
      if (node == topMost) {
        break;
      }
    }
  }
  finally {
    myExplicitSelectionChange=false;
  }
}
