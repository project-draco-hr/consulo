{
  expandAll(myTree,new TreePath(myTreeModel.getRoot()));
  myModels.forEachValue(myModelNodesRefresher);
  final TIntObjectHashMap<ArrangementRuleEditingModelImpl> changedModelMappings=new TIntObjectHashMap<ArrangementRuleEditingModelImpl>();
  rowChanges.forEachEntry(new TIntIntProcedure(){
    @Override public boolean execute(    int oldRow,    int newRow){
      ArrangementRuleEditingModelImpl m=myModels.remove(oldRow);
      if (m != null) {
        changedModelMappings.put(newRow,m);
        m.setRow(newRow);
      }
      return true;
    }
  }
);
  putAll(changedModelMappings,myModels);
  rowChanges.forEachEntry(new TIntIntProcedure(){
    @Override public boolean execute(    int oldRow,    int newRow){
      refreshTreeNode(oldRow);
      refreshTreeNode(newRow);
      return true;
    }
    private void refreshTreeNode(    int row){
      TreePath path=myTree.getPathForRow(row);
      if (path == null) {
        return;
      }
      TreeNode node=(TreeNode)path.getLastPathComponent();
      if (node == null) {
        return;
      }
      myTreeModel.nodeStructureChanged(node);
    }
  }
);
}
