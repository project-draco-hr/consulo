{
  int[] rows=myModels.keys();
  Arrays.sort(rows);
  List<StdArrangementRule> rules=new ArrayList<StdArrangementRule>();
  ArrangementMatchCondition prevGroup=null;
  Set<ArrangementMatchCondition> implicitGroupConditions=new HashSet<ArrangementMatchCondition>();
  for (  int row : rows) {
    ArrangementRuleEditingModelImpl model=myModels.get(row);
    ArrangementTreeNode topMost=model.getTopMost();
    ArrangementMatchCondition currentGroup=topMost.getBackingCondition();
    if (prevGroup != null && !prevGroup.equals(currentGroup)) {
      rules.add(new StdArrangementRule(new StdArrangementEntryMatcher(prevGroup)));
      implicitGroupConditions.add(prevGroup);
      prevGroup=null;
    }
    if (!myRoot.equals(topMost) && !topMost.equals(model.getBottomMost()) && !implicitGroupConditions.contains(currentGroup)) {
      prevGroup=currentGroup;
    }
    rules.add(model.getRule());
  }
  if (prevGroup != null) {
    rules.add(new StdArrangementRule(new StdArrangementEntryMatcher(prevGroup)));
  }
  return new StdArrangementSettings(rules);
}
