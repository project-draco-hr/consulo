{
  PsiIdentifier identifier=variable.getNameIdentifier();
  if (identifier == null)   return null;
  if (!myRefCountHolder.isReferenced(variable)) {
    String message=MessageFormat.format(LOCAL_VARIABLE_IS_NOT_USED,identifier.getText());
    HighlightInfo highlightInfo=createUnusedSymbolInfo(identifier,message);
    QuickFixAction.registerQuickFixAction(highlightInfo,new RemoveUnusedVariableFix(variable),options,displayName);
    return highlightInfo;
  }
  boolean referenced=myRefCountHolder.isReferencedForRead(variable);
  if (!referenced) {
    String message=MessageFormat.format(LOCAL_VARIABLE_IS_NOT_USED_FOR_READING,identifier.getText());
    HighlightInfo highlightInfo=createUnusedSymbolInfo(identifier,message);
    QuickFixAction.registerQuickFixAction(highlightInfo,new RemoveUnusedVariableFix(variable),options,displayName);
    return highlightInfo;
  }
  if (!variable.hasInitializer()) {
    referenced=myRefCountHolder.isReferencedForWrite(variable);
    if (!referenced) {
      String message=MessageFormat.format(LOCAL_VARIABLE_IS_NOT_ASSIGNED,identifier.getText());
      final HighlightInfo unusedSymbolInfo=createUnusedSymbolInfo(identifier,message);
      QuickFixAction.registerQuickFixAction(unusedSymbolInfo,new EmptyIntentionAction(UnusedSymbolLocalInspection.DISPLAY_NAME,options),options,displayName);
      return unusedSymbolInfo;
    }
  }
  return null;
}
