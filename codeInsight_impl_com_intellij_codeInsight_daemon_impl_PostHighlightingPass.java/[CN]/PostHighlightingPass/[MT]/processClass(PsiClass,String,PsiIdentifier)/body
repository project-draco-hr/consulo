{
  final HighlightDisplayKey key=HighlightDisplayKey.find(UnusedSymbolLocalInspection.SHORT_NAME);
  if (aClass.getContainingClass() != null && aClass.hasModifierProperty(PsiModifier.PRIVATE)) {
    if (!myRefCountHolder.isReferenced(aClass) && !isImplicitUsage(aClass)) {
      String pattern=aClass.isInterface() ? JavaErrorMessages.message("private.inner.interface.is.not.used") : JavaErrorMessages.message("private.inner.class.is.not.used");
      return formatUnusedSymbolHighlightInfo(aClass,pattern,key,displayName);
    }
  }
 else   if (aClass.getParent() instanceof PsiDeclarationStatement) {
    if (!myRefCountHolder.isReferenced(aClass) && !isImplicitUsage(aClass)) {
      return formatUnusedSymbolHighlightInfo(aClass,JavaErrorMessages.message("local.class.is.not.used"),key,displayName);
    }
  }
 else   if (aClass instanceof PsiTypeParameter) {
    if (!myRefCountHolder.isReferenced(aClass) && !isImplicitUsage(aClass)) {
      return formatUnusedSymbolHighlightInfo(aClass,JavaErrorMessages.message("type.parameter.is.not.used"),key,displayName);
    }
  }
  return null;
}
