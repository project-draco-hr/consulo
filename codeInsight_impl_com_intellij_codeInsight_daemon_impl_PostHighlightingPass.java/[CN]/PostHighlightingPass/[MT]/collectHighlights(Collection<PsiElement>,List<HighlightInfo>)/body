{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  InspectionProfile profile=InspectionProjectProfileManager.getInstance(myProject).getInspectionProfile(myFile);
  if (!profile.isToolEnabled(HighlightDisplayKey.find(UnusedSymbolLocalInspection.SHORT_NAME)))   return;
  final UnusedSymbolLocalInspection unusedSymbolInspection=(UnusedSymbolLocalInspection)((LocalInspectionToolWrapper)profile.getInspectionTool(UnusedSymbolLocalInspection.SHORT_NAME)).getTool();
  for (  PsiElement element : elements) {
    ProgressManager.getInstance().checkCanceled();
    if (element instanceof PsiIdentifier) {
      final HighlightInfo highlightInfo=processIdentifier((PsiIdentifier)element,unusedSymbolInspection);
      if (highlightInfo != null)       array.add(highlightInfo);
    }
 else     if (element instanceof PsiImportList) {
      final PsiImportStatementBase[] imports=((PsiImportList)element).getAllImportStatements();
      for (      PsiImportStatementBase statement : imports) {
        final HighlightInfo highlightInfo=processImport(statement);
        if (highlightInfo != null)         array.add(highlightInfo);
      }
    }
 else     if (element instanceof XmlAttributeValue) {
      final HighlightInfo highlightInfo=XmlHighlightVisitor.checkIdRefAttrValue((XmlAttributeValue)element,myRefCountHolder);
      if (highlightInfo != null)       array.add(highlightInfo);
    }
  }
}
