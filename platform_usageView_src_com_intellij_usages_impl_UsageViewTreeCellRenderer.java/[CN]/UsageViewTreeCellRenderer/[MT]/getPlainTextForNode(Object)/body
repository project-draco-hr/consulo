{
  boolean showAsReadOnly=false;
  StringBuilder result=new StringBuilder();
  if (value instanceof Node) {
    Node node=(Node)value;
    if (!node.isValid()) {
      result.append(UsageViewBundle.message("node.invalid") + " ");
    }
    if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) {
      showAsReadOnly=true;
    }
  }
  if (value instanceof DefaultMutableTreeNode) {
    DefaultMutableTreeNode treeNode=(DefaultMutableTreeNode)value;
    Object userObject=treeNode.getUserObject();
    if (userObject instanceof UsageTarget) {
      UsageTarget usageTarget=(UsageTarget)userObject;
      if (usageTarget.isValid()) {
        final ItemPresentation presentation=usageTarget.getPresentation();
        LOG.assertTrue(presentation != null);
        if (showAsReadOnly) {
          result.append(UsageViewBundle.message("node.readonly") + " ");
        }
        final String text=presentation.getPresentableText();
        result.append(text == null ? "" : text);
      }
 else {
        result.append(UsageViewBundle.message("node.invalid"));
      }
    }
 else     if (treeNode instanceof GroupNode) {
      GroupNode node=(GroupNode)treeNode;
      if (node.isRoot()) {
        result.append(StringUtil.capitalize(myPresentation.getUsagesWord()));
      }
 else {
        result.append(node.getGroup().getText(myView));
      }
      int count=node.getRecursiveUsageCount();
      result.append(" (" + StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(),count) + ")");
    }
 else     if (treeNode instanceof UsageNode) {
      UsageNode node=(UsageNode)treeNode;
      if (showAsReadOnly) {
        result.append(UsageViewBundle.message("node.readonly") + " ");
      }
      if (node.isValid()) {
        TextChunk[] text=node.getUsage().getPresentation().getText();
        for (        TextChunk textChunk : text) {
          result.append(textChunk.getText());
        }
      }
    }
 else     if (userObject instanceof String) {
      result.append((String)userObject);
    }
 else {
      result.append(userObject == null ? "" : userObject.toString());
    }
  }
 else {
    result.append(value);
  }
  return result.toString();
}
