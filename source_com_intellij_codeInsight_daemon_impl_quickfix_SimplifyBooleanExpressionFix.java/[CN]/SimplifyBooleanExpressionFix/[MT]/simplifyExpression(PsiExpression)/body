{
  trueExpression=expression.getManager().getElementFactory().createExpressionFromText(Boolean.toString(true),null);
  falseExpression=expression.getManager().getElementFactory().createExpressionFromText(Boolean.toString(false),null);
  final PsiExpression[] copy=new PsiExpression[]{(PsiExpression)expression.copy()};
  copy[0].accept(new PsiElementVisitor(){
    public void visitElement(    PsiElement element){
      final PsiElement[] children=element.getChildren();
      for (int i=0; i < children.length; i++) {
        PsiElement child=children[i];
        child.accept(this);
      }
    }
    public void visitExpression(    PsiExpression expression){
      super.visitExpression(expression);
      final ExpressionVisitor expressionVisitor=new ExpressionVisitor();
      expression.accept(expressionVisitor);
      if (expressionVisitor.resultExpression != null) {
        LOG.assertTrue(expressionVisitor.resultExpression.isValid());
        try {
          if (expression != copy[0]) {
            expression.replace(expressionVisitor.resultExpression);
          }
 else {
            copy[0]=expressionVisitor.resultExpression;
          }
        }
 catch (        IncorrectOperationException e) {
          LOG.error(e);
        }
      }
    }
  }
);
  return copy[0];
}
