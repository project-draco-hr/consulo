{
  if (DumbService.getInstance(project).isDumb()) {
    return null;
  }
  final int id=Math.abs(FileBasedIndex.getFileId(vFile));
  if (id > 0) {
    final List<SerializedStubTree> datas=FileBasedIndex.getInstance().getValues(StubUpdatingIndex.INDEX_ID,id,GlobalSearchScope.fileScope(project,vFile));
    final int size=datas.size();
    if (size == 1) {
      Stub stub=datas.get(0).getStub(false);
      return stub instanceof PsiFileStub ? new StubTree((PsiFileStub)stub) : new ObjectStubTree((ObjectStubBase)stub,true);
    }
 else     if (size != 0) {
      LOG.error("Twin stubs: " + vFile.getPresentableUrl() + " has "+ size+ " stub versions. Should only have one. id="+ id);
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          final Document doc=FileDocumentManager.getInstance().getCachedDocument(vFile);
          if (doc != null) {
            FileDocumentManager.getInstance().saveDocument(doc);
          }
        }
      }
,ModalityState.NON_MODAL);
      FileBasedIndex.getInstance().requestReindex(vFile);
    }
  }
  return null;
}
