{
  final ObjectStubTree fromIndices=readFromVFile(project,vFile);
  if (fromIndices != null) {
    return fromIndices;
  }
  try {
    final FileContent fc=new FileContentImpl(vFile,vFile.contentsToByteArray());
    fc.putUserData(IndexingDataKeys.PROJECT,project);
    if (psiFile != null && !vFile.getFileType().isBinary()) {
      fc.putUserData(IndexingDataKeys.FILE_TEXT_CONTENT_KEY,psiFile.getViewProvider().getContents());
    }
    Stub element=RecursionManager.doPreventingRecursion(vFile,false,new Computable<Stub>(){
      @Override public Stub compute(){
        return StubTreeBuilder.buildStubTree(fc);
      }
    }
);
    if (element instanceof PsiFileStub) {
      StubTree tree=new StubTree((PsiFileStub)element);
      tree.setDebugInfo("created from file content");
      return tree;
    }
  }
 catch (  IOException e) {
    LOG.info(e);
  }
  return null;
}
