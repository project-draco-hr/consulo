{
  if (startOffset == endOffset)   return null;
  final PsiElement left=findElementAtInRoot(root,startOffset);
  PsiElement right=findElementAtInRoot(root,endOffset - 1);
  if (left == null || right == null)   return null;
  PsiElement commonParent=PsiTreeUtil.findCommonParent(left,right);
  if (commonParent == null) {
    LOG.error("No common parent for " + left + " and "+ right+ "; root: "+ root+ "; startOffset: "+ startOffset+ "; endOffset: "+ endOffset);
  }
  LOG.assertTrue(commonParent.getTextRange() != null,commonParent);
  PsiElement parent=commonParent.getParent();
  while (parent != null && commonParent.getTextRange().equals(parent.getTextRange())) {
    commonParent=parent;
    parent=parent.getParent();
  }
  return commonParent;
}
