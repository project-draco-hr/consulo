{
  if (!myRecentlyUpdatedFiles.isEmpty()) {
    myResolveWorker.execute(myRecentlyUpdatedFiles);
  }
  final boolean haveConflicts=ResolveWorker.haveUnresolvedConflicts(myRecentlyUpdatedFiles);
  accomulate();
  if ((!myMerger.hasNext()) || haveConflicts || (!myExceptions.isEmpty())|| myAccomulatedFiles.containErrors()) {
    initMergeTarget();
    if (myAccomulatedFiles.isEmpty() && myExceptions.isEmpty() && (myMergeTarget == null)) {
      Messages.showMessageDialog(SvnBundle.message("action.Subversion.integrate.changes.message.files.up.to.date.text"),SvnBundle.message("action.Subversion.integrate.changes.messages.title"),Messages.getInformationIcon());
    }
 else {
      if (haveConflicts) {
        final VcsException exception=new VcsException(SvnBundle.message("svn.integrate.changelist.warning.unresolved.conflicts.text"));
        exception.setIsWarning(true);
        myExceptions.add(exception);
      }
      finishActions();
    }
    myMerger.afterProcessing();
  }
 else {
    stepToNextChangeList();
  }
}
