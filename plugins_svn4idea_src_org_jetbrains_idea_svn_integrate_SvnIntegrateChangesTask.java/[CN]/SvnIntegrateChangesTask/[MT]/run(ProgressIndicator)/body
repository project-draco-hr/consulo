{
  myHandler=new IntegrateEventHandler(myVcs,ProgressManager.getInstance().getProgressIndicator());
  myMerger=myMergerFactory.createMerger(myVcs,new File(myInfo.getLocalPath()),myHandler,myCurrentBranchUrl);
  myResolveWorker=new ResolveWorker(myInfo.isUnderProjectRoot(),myProject);
  BlockReloadingUtil.block();
  myProjectLevelVcsManager.startBackgroundVcsOperation();
  try {
    myRecentlyUpdatedFiles=UpdatedFiles.create();
    myHandler.setUpdatedFiles(myRecentlyUpdatedFiles);
    indicatorOnStart();
    while (true) {
      if (indicator.isCanceled()) {
        createMessage(false,true,SvnBundle.message("action.Subversion.integrate.changes.message.canceled.text"));
        return;
      }
      doMerge();
      RefreshVFsSynchronously.updateAllChanged(myRecentlyUpdatedFiles);
      indicator.setText(VcsBundle.message("progress.text.updating.done"));
      if (myResolveWorker.needsInteraction(myRecentlyUpdatedFiles) || (!myMerger.hasNext()) || (!myExceptions.isEmpty())|| UpdatedFilesReverseSide.containErrors(myRecentlyUpdatedFiles)) {
        break;
      }
      accomulate();
    }
  }
  finally {
    myProjectLevelVcsManager.stopBackgroundVcsOperation();
  }
}
