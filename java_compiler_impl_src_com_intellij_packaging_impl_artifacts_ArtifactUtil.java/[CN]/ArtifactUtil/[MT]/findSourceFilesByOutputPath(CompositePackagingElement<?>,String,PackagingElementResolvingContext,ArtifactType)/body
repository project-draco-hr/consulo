{
  final String path=StringUtil.trimStart(outputPath,"/");
  if (path.length() == 0) {
    return Collections.emptyList();
  }
  int i=path.indexOf('/');
  final String firstName=i != -1 ? path.substring(0,i) : path;
  final String tail=i != -1 ? path.substring(i + 1) : "";
  final List<VirtualFile> result=new SmartList<VirtualFile>();
  processElements(parent.getChildren(),context,artifactType,new Processor<PackagingElement<?>>(){
    public boolean process(    PackagingElement<?> element){
      if (element instanceof CompositePackagingElement) {
        final CompositePackagingElement<?> compositeElement=(CompositePackagingElement<?>)element;
        if (firstName.equals(compositeElement.getName())) {
          result.addAll(findSourceFilesByOutputPath(compositeElement,tail,context,artifactType));
        }
      }
 else       if (element instanceof FileCopyPackagingElement) {
        final FileCopyPackagingElement fileCopyElement=(FileCopyPackagingElement)element;
        if (firstName.equals(fileCopyElement.getOutputFileName()) && tail.length() == 0) {
          ContainerUtil.addIfNotNull(fileCopyElement.findFile(),result);
        }
      }
 else       if (element instanceof DirectoryCopyPackagingElement) {
        final VirtualFile sourceRoot=((DirectoryCopyPackagingElement)element).findFile();
        if (sourceRoot != null) {
          ContainerUtil.addIfNotNull(sourceRoot.findFileByRelativePath(path),result);
        }
      }
 else       if (element instanceof ModuleOutputPackagingElement) {
        final Module module=((ModuleOutputPackagingElement)element).findModule(context);
        final ContentEntry[] contentEntries=context.getModulesProvider().getRootModel(module).getContentEntries();
        for (        ContentEntry contentEntry : contentEntries) {
          for (          SourceFolder sourceFolder : contentEntry.getSourceFolders()) {
            final VirtualFile sourceRoot=sourceFolder.getFile();
            if (!sourceFolder.isTestSource() && sourceRoot != null) {
              ContainerUtil.addIfNotNull(sourceRoot.findFileByRelativePath(path),result);
            }
          }
        }
      }
      return true;
    }
  }
);
  return result;
}
