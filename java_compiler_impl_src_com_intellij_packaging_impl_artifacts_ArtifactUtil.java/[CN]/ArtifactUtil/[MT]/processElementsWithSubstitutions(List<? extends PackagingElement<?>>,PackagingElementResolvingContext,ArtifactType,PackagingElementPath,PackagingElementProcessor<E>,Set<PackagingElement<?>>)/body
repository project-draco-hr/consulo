{
  for (  PackagingElement<?> element : elements) {
    if (!processed.add(element)) {
      continue;
    }
    if (element instanceof ComplexPackagingElement<?> && processor.shouldProcessSubstitution((ComplexPackagingElement)element)) {
      final ComplexPackagingElement<?> complexElement=(ComplexPackagingElement<?>)element;
      final List<? extends PackagingElement<?>> substitution=complexElement.getSubstitution(context,artifactType);
      if (substitution != null && !processElementsWithSubstitutions(substitution,context,artifactType,parentPath.appendComplex(complexElement),processor,processed)) {
        return false;
      }
    }
 else     if (!processor.process((E)element,parentPath)) {
      return false;
    }
  }
  return true;
}
