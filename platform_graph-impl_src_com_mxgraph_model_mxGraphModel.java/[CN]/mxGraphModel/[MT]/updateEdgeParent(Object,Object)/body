{
  Object source=getTerminal(edge,true);
  Object target=getTerminal(edge,false);
  Object cell=null;
  while (source != null && !isEdge(source) && getGeometry(source) != null && getGeometry(source).isRelative()) {
    source=getParent(source);
  }
  while (target != null && !isEdge(target) && getGeometry(target) != null && getGeometry(target).isRelative()) {
    target=getParent(target);
  }
  if (isAncestor(root,source) && isAncestor(root,target)) {
    if (source == target) {
      cell=getParent(source);
    }
 else {
      cell=getNearestCommonAncestor(source,target);
    }
    if (cell != null && (getParent(cell) != root || isAncestor(cell,edge)) && getParent(edge) != cell) {
      mxGeometry geo=getGeometry(edge);
      if (geo != null) {
        mxPoint origin1=getOrigin(getParent(edge));
        mxPoint origin2=getOrigin(cell);
        double dx=origin2.getX() - origin1.getX();
        double dy=origin2.getY() - origin1.getY();
        geo=(mxGeometry)geo.clone();
        geo.translate(-dx,-dy);
        setGeometry(edge,geo);
      }
      add(cell,edge,getChildCount(cell));
    }
  }
}
