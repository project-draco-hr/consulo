def hook(ui, repo, hooktype, node=None, source=None, **kwargs):
    if (hooktype != 'pretxnchangegroup'):
        raise util.Abort((_('config error - hook type "%s" cannot stop incoming changesets') % hooktype))
    if (source not in ui.config('acl', 'sources', 'serve').split()):
        ui.debug(('acl: changes have source "%s" - skipping\n' % source))
        return
    user = None
    if ((source == 'serve') and ('url' in kwargs)):
        url = kwargs['url'].split(':')
        if ((url[0] == 'remote') and url[1].startswith('http')):
            user = urllib.unquote(url[3])
    if (user is None):
        user = getpass.getuser()
    cfg = ui.config('acl', 'config')
    if cfg:
        ui.readconfig(cfg, sections=['acl.allow', 'acl.deny'])
    allow = buildmatch(ui, repo, user, 'acl.allow')
    deny = buildmatch(ui, repo, user, 'acl.deny')
    for rev in xrange(repo[node], len(repo)):
        ctx = repo[rev]
        for f in ctx.files():
            if (deny and deny(f)):
                ui.debug(('acl: user %s denied on %s\n' % (user, f)))
                raise util.Abort((_('acl: access denied for changeset %s') % ctx))
            if (allow and (not allow(f))):
                ui.debug(('acl: user %s not allowed on %s\n' % (user, f)))
                raise util.Abort((_('acl: access denied for changeset %s') % ctx))
        ui.debug(('acl: allowing changeset %s\n' % ctx))
