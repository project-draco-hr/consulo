{
  return new RTestUnitEventsAdapter(){
    @Override public void onSuiteStarted(    @NotNull final RTestUnitTestProxy suite){
      if (myTableModel.shouldUpdateModelBySuite(suite)) {
        updateAndRestoreSelection();
      }
    }
    @Override public void onSuiteFinished(    @NotNull final RTestUnitTestProxy suite){
      if (myTableModel.shouldUpdateModelBySuite(suite)) {
        updateAndRestoreSelection();
      }
    }
    @Override public void onTestStarted(    @NotNull final RTestUnitTestProxy test){
      if (myTableModel.shouldUpdateModelByTest(test)) {
        updateAndRestoreSelection();
      }
    }
    @Override public void onTestFinished(    @NotNull final RTestUnitTestProxy test){
      if (myTableModel.shouldUpdateModelByTest(test)) {
        updateAndRestoreSelection();
      }
    }
    private void updateAndRestoreSelection(){
      UIUtil.addToInvokeLater(new Runnable(){
        public void run(){
          final RTestUnitTestProxy oldSelection=myStatisticsTableView.getSelectedObject();
          myTableModel.updateModel();
          if (oldSelection != null) {
            final int newRow=myTableModel.getIndexOf(oldSelection);
            if (newRow > -1) {
              myStatisticsTableView.setRowSelectionInterval(newRow,newRow);
            }
          }
        }
      }
);
    }
  }
;
}
