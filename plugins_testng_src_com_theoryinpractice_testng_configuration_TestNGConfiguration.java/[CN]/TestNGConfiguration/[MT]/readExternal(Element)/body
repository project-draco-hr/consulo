{
  PathMacroManager.getInstance(getProject()).expandPaths(element);
  super.readExternal(element);
  JavaRunConfigurationExtensionManager.getInstance().readExternal(this,element);
  readModule(element);
  DefaultJDOMExternalizer.readExternal(this,element);
  DefaultJDOMExternalizer.readExternal(getPersistantData(),element);
  EnvironmentVariablesComponent.readExternal(element,getPersistantData().getEnvs());
  Map<String,String> properties=getPersistantData().TEST_PROPERTIES;
  properties.clear();
  Element propertiesElement=element.getChild("properties");
  if (propertiesElement != null) {
    List<Element> children=propertiesElement.getChildren("property");
    for (    Element property : children) {
      properties.put(property.getAttributeValue("name"),property.getAttributeValue("value"));
    }
  }
  List<String> listeners=getPersistantData().TEST_LISTENERS;
  listeners.clear();
  Element listenersElement=element.getChild("listeners");
  if (listenersElement != null) {
    List<Element> children=listenersElement.getChildren("listener");
    for (    Element listenerClassName : children) {
      listeners.add(listenerClassName.getAttributeValue("class"));
    }
  }
  final Element patternsElement=element.getChild(PATTERNS_EL_NAME);
  if (patternsElement != null) {
    final Set<String> tests=new LinkedHashSet<String>();
    for (    Object o : patternsElement.getChildren(PATTERN_EL_NAME)) {
      Element patternElement=(Element)o;
      tests.add(patternElement.getAttributeValue(TEST_CLASS_ATT_NAME));
    }
    getPersistantData().setPatterns(tests);
  }
}
