{
  PsiSearchHelper helper=method.getManager().getSearchHelper();
  if (method.isConstructor()) {
    if (!options.isIncludeOverloadUsages) {
      addConstructorUsages(method,helper,searchScope,result,options);
    }
 else {
      PsiMethod[] constructors=method.getContainingClass().getConstructors();
      for (int i=0; i < constructors.length; i++) {
        addConstructorUsages(constructors[i],helper,searchScope,result,options);
      }
    }
  }
 else {
    helper.processReferencesIncludingOverriding(new PsiReferenceProcessor(){
      public boolean execute(      PsiReference ref){
        addResult(result,ref,options,method);
        return true;
      }
    }
,method,searchScope,!options.isIncludeOverloadUsages);
    PsiReference[] refs=EjbUsagesUtil.findEjbMethodReferences(method,helper,searchScope,!options.isIncludeOverloadUsages);
    addResults(result,refs,options,method);
  }
}
