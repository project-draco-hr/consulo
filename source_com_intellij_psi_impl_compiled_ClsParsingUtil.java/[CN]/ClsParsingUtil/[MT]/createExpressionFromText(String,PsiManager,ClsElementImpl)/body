{
  PsiJavaFile dummyJavaFile=((PsiElementFactoryImpl)manager.getElementFactory()).getDummyJavaFile();
  final FileElement holderElement=new DummyHolder(manager,dummyJavaFile).getTreeElement();
  CompositeElement _expr=ExpressionParsing.parseExpressionText(manager,exprText,0,exprText.length(),holderElement.getCharTable());
  if (_expr == null) {
    LOG.error("Could not parse expression:'" + exprText + "'");
    return null;
  }
  TreeUtil.addChildren(holderElement,_expr);
  if (_expr instanceof PsiLiteralExpression) {
    PsiLiteralExpression expr=(PsiLiteralExpression)_expr;
    return new ClsLiteralExpressionImpl(parent,exprText,expr.getType(),expr.getValue());
  }
 else   if (_expr instanceof PsiPrefixExpression) {
    PsiLiteralExpression operand=(PsiLiteralExpression)((PsiPrefixExpression)_expr).getOperand();
    ClsLiteralExpressionImpl literalExpression=new ClsLiteralExpressionImpl(null,operand.getText(),operand.getType(),operand.getValue());
    ClsPrefixExpressionImpl prefixExpression=new ClsPrefixExpressionImpl(parent,literalExpression);
    literalExpression.setParent(prefixExpression);
    return prefixExpression;
  }
 else   if (_expr instanceof PsiReferenceExpression) {
    PsiReferenceExpression patternExpr=(PsiReferenceExpression)SourceTreeToPsiMap.treeElementToPsi(_expr);
    return new ClsReferenceExpressionImpl(parent,patternExpr);
  }
 else {
    LOG.error(_expr.toString());
    return null;
  }
}
