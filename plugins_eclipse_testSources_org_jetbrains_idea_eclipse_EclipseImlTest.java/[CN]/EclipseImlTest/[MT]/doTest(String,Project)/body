{
  final String path=project.getBaseDir().getPath() + relativePath;
  final File classpathFile=new File(path,EclipseXml.DOT_CLASSPATH_EXT);
  String fileText=new String(FileUtil.loadFileText(classpathFile)).replaceAll("\\$ROOT\\$",project.getBaseDir().getPath());
  if (!SystemInfo.isWindows) {
    fileText=fileText.replaceAll(EclipseXml.FILE_PROTOCOL + "/",EclipseXml.FILE_PROTOCOL);
  }
  String communityAppDir=PathManager.getHomePath();
  if (new File(PathManager.getHomePath(),"community").exists()) {
    communityAppDir+="/community";
  }
  fileText=fileText.replaceAll("\\$" + JUNIT + "\\$",communityAppDir);
  final Element classpathElement=JDOMUtil.loadDocument(fileText).getRootElement();
  final Module module=ApplicationManager.getApplication().runWriteAction(new Computable<Module>(){
    public Module compute(){
      return ModuleManager.getInstance(project).newModule(new File(path) + File.separator + EclipseProjectFinder.findProjectName(path)+ IdeaXml.IML_EXT,StdModuleTypes.JAVA);
    }
  }
);
  final ModifiableRootModel rootModel=ModuleRootManager.getInstance(module).getModifiableModel();
  final EclipseClasspathReader classpathReader=new EclipseClasspathReader(path,project,null);
  classpathReader.init(rootModel);
  classpathReader.readClasspath(rootModel,new ArrayList<String>(),new ArrayList<String>(),new HashSet<String>(),new HashSet<String>(),null,classpathElement);
  rootModel.commit();
  final RootModelImpl model=(RootModelImpl)ModuleRootManager.getInstance(module).getModifiableModel();
  final Element actualImlElement=new Element("root");
  model.writeExternal(actualImlElement);
  model.dispose();
  PathMacros.getInstance().setMacro(JUNIT,communityAppDir);
  PathMacroManager.getInstance(module).collapsePaths(actualImlElement);
  PathMacroManager.getInstance(project).collapsePaths(actualImlElement);
  PathMacros.getInstance().removeMacro(JUNIT);
  final Element expectedIml=JDOMUtil.loadDocument(new File(project.getBaseDir().getPath() + "/expected","expected.iml")).getRootElement();
  Assert.assertTrue(new String(JDOMUtil.printDocument(new Document(actualImlElement),"\n")),JDOMUtil.areElementsEqual(expectedIml,actualImlElement));
}
