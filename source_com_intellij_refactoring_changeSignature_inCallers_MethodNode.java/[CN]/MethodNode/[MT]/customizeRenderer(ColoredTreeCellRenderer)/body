{
  int flags=Iconable.ICON_FLAG_VISIBILITY | Iconable.ICON_FLAG_READ_STATUS;
  renderer.setIcon(myMethod.getIcon(flags));
  final StringBuffer buffer=new StringBuffer(128);
  final PsiClass containingClass=myMethod.getContainingClass();
  if (containingClass != null) {
    buffer.append(ClassPresentationUtil.getNameForClass(containingClass,false));
    buffer.append('.');
  }
  final String methodText=PsiFormatUtil.formatMethod(myMethod,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE);
  buffer.append(methodText);
  final int style=isEnabled() ? SimpleTextAttributes.STYLE_PLAIN : SimpleTextAttributes.STYLE_STRIKEOUT;
  renderer.append(buffer.toString(),new SimpleTextAttributes(style,IdeaUIManager.getTreeForegroung()));
  final String packageName=getPackageName(myMethod.getContainingClass());
  renderer.append("  (" + packageName + ")",new SimpleTextAttributes(SimpleTextAttributes.STYLE_ITALIC,Color.GRAY));
}
