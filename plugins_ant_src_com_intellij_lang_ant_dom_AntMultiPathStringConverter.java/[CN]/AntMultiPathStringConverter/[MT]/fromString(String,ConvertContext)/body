{
  final GenericAttributeValue attribValue=context.getInvocationElement().getParentOfType(GenericAttributeValue.class,false);
  if (attribValue == null) {
    return null;
  }
  final String path=attribValue.getStringValue();
  if (path == null) {
    return null;
  }
  final List<PsiFileSystemItem> result=new ArrayList<PsiFileSystemItem>();
  Computable<String> basedirComputable=null;
  for (PathIterator it=new PathIterator(path); it.hasNext(); ) {
    final Pair<String,Integer> pair=it.next();
    File file=new File(pair.getFirst());
    if (!file.isAbsolute()) {
      if (basedirComputable == null) {
        basedirComputable=new Computable<String>(){
          final String myBaseDir;
{
            final AntDomProject antProject=getEffectiveAntProject(attribValue);
            myBaseDir=antProject != null ? antProject.getProjectBasedirPath() : null;
          }
          public String compute(){
            return myBaseDir;
          }
        }
;
      }
      final String baseDir=basedirComputable.compute();
      if (baseDir == null) {
        continue;
      }
      file=new File(baseDir,path);
    }
    final PsiFileSystemItem psi=toPsiFileItem(context,file);
    if (psi != null) {
      result.add(psi);
    }
  }
  return result;
}
