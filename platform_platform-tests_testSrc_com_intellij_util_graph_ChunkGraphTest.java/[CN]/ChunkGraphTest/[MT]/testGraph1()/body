{
  final Map<String,String> arcs=new HashMap<String,String>();
  arcs.put("a","b");
  arcs.put("b","c");
  arcs.put("c","bd");
  arcs.put("d","e");
  arcs.put("e","d");
  final Graph<Chunk<String>> graph=getAlgorithmsInstance().computeSCCGraph(initGraph(arcs));
  final List<Chunk<String>> expectedNodes=new ArrayList<Chunk<String>>();
  Chunk<String> A=new Chunk<String>("a");
  expectedNodes.add(A);
  Chunk<String> BC=new Chunk<String>(toSet("b","c"));
  expectedNodes.add(BC);
  Chunk<String> DE=new Chunk<String>(toSet("d","e"));
  expectedNodes.add(DE);
  checkVertices(expectedNodes,graph.getNodes().iterator());
  final Map<Chunk<String>,Set<Chunk<String>>> expectedArcs=new HashMap<Chunk<String>,Set<Chunk<String>>>();
  expectedArcs.put(A,toSet());
  expectedArcs.put(BC,toSet(A));
  expectedArcs.put(DE,toSet(BC));
  checkArcs(expectedArcs,graph);
}
