{
  StaticReferencesCollector collector=new StaticReferencesCollector(movedMembers);
  classMember.accept(collector);
  ArrayList<PsiJavaCodeReferenceElement> refs=collector.getReferences();
  ArrayList<PsiElement> members=collector.getReferees();
  ArrayList<PsiClass> classes=collector.getRefereeClasses();
  PsiElementFactory factory=classMember.getManager().getElementFactory();
  for (int i=0; i < refs.size(); i++) {
    PsiJavaCodeReferenceElement ref=refs.get(i);
    PsiElement namedElement=members.get(i);
    PsiClass aClass=classes.get(i);
    if (namedElement instanceof PsiNamedElement) {
      PsiReferenceExpression newRef=(PsiReferenceExpression)factory.createExpressionFromText("a." + ((PsiNamedElement)namedElement).getName(),null);
      newRef=(PsiReferenceExpression)CodeStyleManager.getInstance(myManager.getProject()).reformat(newRef);
      newRef.getQualifierExpression().replace(factory.createReferenceExpression(aClass));
      ref.replace(newRef);
    }
  }
}
