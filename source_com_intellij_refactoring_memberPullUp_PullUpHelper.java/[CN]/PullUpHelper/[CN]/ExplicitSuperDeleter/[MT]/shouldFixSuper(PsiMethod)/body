{
  for (Iterator<PsiMember> iterator=myMembersAfterMove.iterator(); iterator.hasNext(); ) {
    PsiMember element=iterator.next();
    if (element instanceof PsiMethod) {
      PsiMethod member=((PsiMethod)element);
      final PsiManager manager=method.getManager();
      if (manager.areElementsEquivalent(member.getContainingClass(),method.getContainingClass()) && MethodSignatureUtil.areSignaturesEqual(member,method)) {
        return false;
      }
    }
  }
  final PsiMethod methodFromSuper=myTargetSuperClass.findMethodBySignature(method,false);
  if (methodFromSuper != null) {
    return false;
  }
  return true;
}
