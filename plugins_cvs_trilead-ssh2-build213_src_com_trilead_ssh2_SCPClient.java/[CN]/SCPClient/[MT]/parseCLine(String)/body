{
  long len;
  if (line.length() < 8)   throw new IOException("Malformed C line sent by remote SCP binary, line too short.");
  if ((line.charAt(4) != ' ') || (line.charAt(5) == ' '))   throw new IOException("Malformed C line sent by remote SCP binary.");
  int length_name_sep=line.indexOf(' ',5);
  if (length_name_sep == -1)   throw new IOException("Malformed C line sent by remote SCP binary.");
  String length_substring=line.substring(5,length_name_sep);
  String name_substring=line.substring(length_name_sep + 1);
  if ((length_substring.length() <= 0) || (name_substring.length() <= 0))   throw new IOException("Malformed C line sent by remote SCP binary.");
  if ((6 + length_substring.length() + name_substring.length()) != line.length())   throw new IOException("Malformed C line sent by remote SCP binary.");
  try {
    len=Long.parseLong(length_substring);
  }
 catch (  NumberFormatException e) {
    throw new IOException("Malformed C line sent by remote SCP binary, cannot parse file length.");
  }
  if (len < 0)   throw new IOException("Malformed C line sent by remote SCP binary, illegal file length.");
  LenNamePair lnp=new LenNamePair();
  lnp.length=len;
  lnp.filename=name_substring;
  return lnp;
}
