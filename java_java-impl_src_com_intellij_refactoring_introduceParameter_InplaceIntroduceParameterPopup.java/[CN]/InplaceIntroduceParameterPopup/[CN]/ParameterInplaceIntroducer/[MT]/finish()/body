{
  super.finish();
  myBalloon.hide();
  final PsiParameter psiParameter=myMethod.getParameterList().getParameters()[myParameterIndex];
  myParameterName=psiParameter.getName();
  myFinal=psiParameter.hasModifierProperty(PsiModifier.FINAL);
  myParameterTypePointer=SmartTypePointerManager.getInstance(myProject).createSmartTypePointer(psiParameter.getType());
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      final PsiFile containingFile=myMethod.getContainingFile();
      final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(myProject);
      myExpression=restoreExpression(containingFile,elementFactory,myExprMarker);
      for (      RangeMarker marker : myOccurrenceMarkers) {
        if (myExprMarker != null && marker.getStartOffset() == myExprMarker.getStartOffset())         continue;
        restoreExpression(containingFile,elementFactory,marker);
      }
      if (psiParameter.isValid()) {
        psiParameter.delete();
      }
    }
  }
);
}
