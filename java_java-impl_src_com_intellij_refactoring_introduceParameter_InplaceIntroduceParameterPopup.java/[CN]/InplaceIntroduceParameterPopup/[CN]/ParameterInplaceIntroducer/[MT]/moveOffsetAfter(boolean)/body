{
  if (success) {
    boolean isDeleteLocalVariable=false;
    PsiExpression parameterInitializer=myExpr;
    if (myLocalVar != null) {
      if (isUseInitializer()) {
        parameterInitializer=myLocalVar.getInitializer();
      }
      isDeleteLocalVariable=isDeleteLocalVariable();
    }
    final TIntArrayList parametersToRemove=getParametersToRemove();
    final IntroduceParameterProcessor processor=new IntroduceParameterProcessor(myProject,myMethod,myMethodToSearchFor,parameterInitializer,myExpr,myLocalVar,isDeleteLocalVariable,myParameterName,isReplaceAllOccurences(),getReplaceFieldsWithGetters(),myMustBeFinal || myFinal,isGenerateDelegate(),myParameterTypePointer.getType(),parametersToRemove);
    final boolean[] conflictsFound=new boolean[]{true};
    processor.setPrepareSuccessfulSwingThreadCallback(new Runnable(){
      @Override public void run(){
        conflictsFound[0]=false;
      }
    }
);
    processor.run();
    normalizeParameterIdxAccordingToRemovedParams(parametersToRemove);
    success=!conflictsFound[0];
  }
  super.moveOffsetAfter(success);
}
