{
  for (int i=0; i < postorder.length; i++) {
    int j=postorder[i];
    Instruction curr=flow[j];
    if (curr instanceof ReadWriteVariableInstruction) {
      ReadWriteVariableInstruction readWriteInsn=(ReadWriteVariableInstruction)curr;
      int idx=namesIndex.get(readWriteInsn.getVariableName());
      TIntHashSet vars=definitelyAssigned.get(j);
      if (!readWriteInsn.isWrite()) {
        if (vars == null || !vars.contains(idx)) {
          result.add(readWriteInsn);
        }
      }
 else {
        if (vars == null) {
          vars=new TIntHashSet();
          definitelyAssigned.add(j,vars);
        }
        vars.add(idx);
      }
    }
    for (    Instruction succ : curr.succ(env)) {
      if (postorder[succ.num()] > postorder[curr.num()]) {
        TIntHashSet currDefinitelyAssigned=definitelyAssigned.get(curr.num());
        TIntHashSet succDefinitelyAssigned=definitelyAssigned.get(succ.num());
        if (currDefinitelyAssigned != null) {
          int[] currArray=currDefinitelyAssigned.toArray();
          if (succDefinitelyAssigned == null) {
            succDefinitelyAssigned=new TIntHashSet();
            succDefinitelyAssigned.addAll(currArray);
            definitelyAssigned.add(succ.num(),succDefinitelyAssigned);
          }
 else {
            succDefinitelyAssigned.retainAll(currArray);
          }
        }
 else         if (succDefinitelyAssigned != null) {
          succDefinitelyAssigned.clear();
        }
      }
    }
  }
}
