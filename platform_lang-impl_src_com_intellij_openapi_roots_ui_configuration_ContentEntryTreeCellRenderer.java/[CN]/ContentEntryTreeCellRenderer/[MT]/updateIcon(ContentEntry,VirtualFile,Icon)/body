{
  Icon icon=originalIcon;
  VirtualFile currentRoot=null;
  for (  ContentFolder contentFolder : entry.getFolders()) {
    final VirtualFile contentPath=contentFolder.getFile();
    if (file.equals(contentPath)) {
      icon=ContentFolderIconUtil.getRootIcon(contentFolder.getType());
    }
 else     if (contentPath != null && VfsUtilCore.isAncestor(contentPath,file,true)) {
      if (currentRoot != null && VfsUtilCore.isAncestor(contentPath,currentRoot,false)) {
        continue;
      }
switch (contentFolder.getType()) {
case EXCLUDED:
        icon=AllIcons.Modules.ExcludeRoot;
      break;
case SOURCE:
    final Module moduleForFile=ModuleUtil.findModuleForFile(file,myTreeEditor.getProject());
  if (moduleForFile == null) {
    continue;
  }
ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(moduleForFile);
for (ModuleExtension moduleExtension : moduleRootManager.getExtensions()) {
for (PsiPackageSupportProvider supportProvider : PsiPackageSupportProvider.EP_NAME.getExtensions()) {
  if (supportProvider.getSupportedModuleExtensionClass() == moduleExtension.getClass()) {
    icon=AllIcons.Modules.PackageFolder;
  }
}
}
break;
case RESOURCE:
break;
case TEST:
icon=AllIcons.Modules.TestSourceFolder;
}
currentRoot=contentPath;
}
}
return icon;
}
