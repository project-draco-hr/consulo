{
  List<Group> result=new ArrayList<Group>();
  Collection<String> parentGroupUsedStrings=parent.getValue() instanceof StringGroup ? ((StringGroup)parent.getValue()).myChildrenUsedStrings : Collections.<String>emptySet();
  Collection<TreeElement> elements=new LinkedHashSet<TreeElement>(children);
  for (  String subString : mySubStrings) {
    if (parentGroupUsedStrings.contains(subString))     continue;
    Set<String> childrenStrings=new THashSet<String>(parentGroupUsedStrings);
    ContainerUtil.addAll(childrenStrings,mySubStrings);
    StringGroup group=new StringGroup(subString,elements,childrenStrings);
    Collection<TreeElement> groupChildren=group.getChildren();
    if (!groupChildren.isEmpty()) {
      elements.removeAll(groupChildren);
      result.add(group);
    }
  }
  return result;
}
