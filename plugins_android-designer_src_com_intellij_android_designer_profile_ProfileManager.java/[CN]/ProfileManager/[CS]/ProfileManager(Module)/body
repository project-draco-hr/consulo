{
  myModule=module;
  myDeviceAction=new MyComboBoxAction<LayoutDevice>(){
    @Override protected boolean addSeparator(    DefaultActionGroup actionGroup,    LayoutDevice item){
      if (item == CUSTOM_DEVICE && myDevices.size() > 1) {
        actionGroup.addSeparator();
      }
      return false;
    }
    @Override protected boolean selectionChanged(    LayoutDevice item){
      if (item == CUSTOM_DEVICE) {
        LayoutDeviceConfiguration configuration=myDeviceConfigurationAction.getSelection();
        configuration=configuration != null && configuration.getDevice().getType() == LayoutDevice.Type.CUSTOM ? configuration : null;
        LayoutDeviceConfigurationsDialog dialog=new LayoutDeviceConfigurationsDialog(myModule.getProject(),configuration,myLayoutDeviceManager);
        dialog.show();
        if (dialog.getExitCode() == DialogWrapper.OK_EXIT_CODE) {
          myLayoutDeviceManager.saveUserDevices();
        }
        updatePlatform(getPlatform());
        String deviceName=dialog.getSelectedDeviceName();
        if (deviceName != null) {
          LayoutDevice newDevice=null;
          for (          LayoutDevice device : myDevices) {
            if (device.getName().equals(deviceName)) {
              newDevice=device;
              break;
            }
          }
          if (newDevice != null) {
            String configurationName=dialog.getSelectedDeviceConfigName();
            if (configurationName == null) {
              updateDevice(newDevice);
            }
 else {
              updateDevice(newDevice,configurationName);
            }
          }
        }
      }
 else {
        updateDevice(item);
      }
      return item != CUSTOM_DEVICE;
    }
  }
;
  myDeviceConfigurationAction=new MyComboBoxAction<LayoutDeviceConfiguration>(){
    @Override protected boolean selectionChanged(    LayoutDeviceConfiguration item){
      updateDeviceConfiguration(item);
      return true;
    }
  }
;
  myTargetAction=new MyComboBoxAction<IAndroidTarget>(){
    @Override protected boolean selectionChanged(    IAndroidTarget item){
      updateTarget(item);
      updateThemes();
      return true;
    }
  }
;
  myLocaleAction=new MyComboBoxAction<LocaleData>(){
    @Override protected boolean selectionChanged(    LocaleData item){
      updateLocale(item);
      return true;
    }
  }
;
  myDockModeAction=new MyComboBoxAction<UiMode>(){
    @Override protected boolean selectionChanged(    UiMode item){
      updateDockMode(item);
      return true;
    }
  }
;
  myDockModeAction.setItems(Arrays.asList(UiMode.values()),null);
  myNightModeAction=new MyComboBoxAction<NightMode>(){
    @Override protected boolean selectionChanged(    NightMode item){
      updateNightMode(item);
      return true;
    }
  }
;
  myNightModeAction.setItems(Arrays.asList(NightMode.values()),null);
  myThemeDataAction=new MyComboBoxAction<ThemeData>(){
    @Override protected boolean addSeparator(    DefaultActionGroup actionGroup,    ThemeData item){
      return super.addSeparator(actionGroup,item);
    }
    @Override protected boolean selectionChanged(    ThemeData item){
      return false;
    }
  }
;
}
