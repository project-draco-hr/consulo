{
  final PsiType componentType=type.getDeepComponentType();
  if (componentType instanceof PsiPrimitiveType) {
    buffer.append(componentType.getPresentableText());
  }
 else   if (componentType instanceof PsiWildcardType) {
    buffer.append("?");
    final PsiWildcardType wildcard=(PsiWildcardType)componentType;
    final PsiType bound=wildcard.getBound();
    if (bound != null) {
      buffer.append(wildcard.isExtends() ? " extends " : " super ");
      appendTypeString(bound,buffer);
    }
  }
 else   if (componentType instanceof PsiCapturedWildcardType) {
    appendTypeString(((PsiCapturedWildcardType)componentType).getWildcard(),buffer);
  }
 else   if (componentType instanceof PsiClassType) {
    final PsiClassType classType=((PsiClassType)componentType);
    final PsiClassType.ClassResolveResult resolveResult=classType.resolveGenerics();
    final PsiClass aClass=resolveResult.getElement();
    if (aClass == null) {
      buffer.append(classType.getPresentableText());
    }
 else {
      appendClass(aClass,buffer,resolveResult.getSubstitutor());
    }
  }
 else {
    buffer.append(componentType.getPresentableText());
  }
  int dim=type.getArrayDimensions();
  for (int i=0; i < dim; i++) {
    buffer.append("[]");
  }
}
