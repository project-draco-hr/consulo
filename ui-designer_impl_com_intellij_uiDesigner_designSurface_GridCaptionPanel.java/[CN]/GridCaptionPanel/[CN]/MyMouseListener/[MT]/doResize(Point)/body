{
  int[] coords=mySelectedContainer.getLayoutManager().getGridCellCoords(mySelectedContainer,myIsRow);
  int prevCoord=coords[myResizeLine - 1];
  int newCoord=myIsRow ? pnt.y : pnt.x;
  if (newCoord < prevCoord + MINIMUM_RESIZED_SIZE) {
    return;
  }
  int newSize=newCoord - prevCoord;
  if (!myEditor.ensureEditable()) {
    return;
  }
  if (mySelectedContainer.getParent().isXY() && myResizeLine == coords.length) {
    final JComponent parentDelegee=mySelectedContainer.getDelegee();
    Dimension containerSize=parentDelegee.getSize();
    if (myIsRow) {
      containerSize.height=newCoord;
    }
 else {
      containerSize.width=newCoord;
    }
    parentDelegee.setSize(containerSize);
    parentDelegee.revalidate();
  }
 else {
    for (    RadComponent component : mySelectedContainer.getComponents()) {
      GridConstraints c=component.getConstraints();
      if (c.getCell(myIsRow) == myResizeLine - 1 && c.getSpan(myIsRow) == 1) {
        Dimension preferredSize=new Dimension(c.myPreferredSize);
        if (myIsRow) {
          preferredSize.height=newSize;
          if (preferredSize.width == -1) {
            preferredSize.width=component.getDelegee().getPreferredSize().width;
          }
        }
 else {
          preferredSize.width=newSize;
          if (preferredSize.height == -1) {
            preferredSize.height=component.getDelegee().getPreferredSize().height;
          }
        }
        try {
          myPreferredSizeProperty.setValue(component,preferredSize);
        }
 catch (        Exception e) {
          LOG.error(e);
        }
      }
    }
  }
  myEditor.refreshAndSave(false);
}
