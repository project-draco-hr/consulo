{
  final Document document=ReferenceEditorWithBrowseButton.createDocument(value == null ? "" : (String)value,PsiManager.getInstance(myProject),true);
  myEditor=new EditorTextField(document,myProject,StdFileTypes.JAVA){
    protected boolean shouldHaveBorder(){
      return false;
    }
  }
;
  final JPanel panel=new JPanel();
  panel.setLayout(new BorderLayout());
  panel.add(myEditor);
  final FixedSizeButton button=new FixedSizeButton(myEditor);
  panel.add(button,BorderLayout.EAST);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      TreeClassChooser chooser=TreeClassChooserFactory.getInstance(myProject).createInheritanceClassChooser(UIBundle.message("choose.class"),mySearchScope,null,true,true,Conditions.<PsiClass>alwaysTrue());
      chooser.showDialog();
      final PsiClass psiClass=chooser.getSelectedClass();
      if (psiClass != null) {
        myEditor.setText(psiClass.getQualifiedName());
      }
    }
  }
);
  panel.addFocusListener(new FocusListener(){
    public void focusGained(    FocusEvent e){
      if (!e.isTemporary() && myEditor != null) {
        myEditor.requestFocus();
      }
    }
    public void focusLost(    FocusEvent e){
    }
  }
);
  myEditor.addFocusListener(new FocusListener(){
    public void focusGained(    FocusEvent e){
    }
    public void focusLost(    FocusEvent e){
      if (!e.isTemporary()) {
        stopCellEditing();
      }
    }
  }
);
  return panel;
}
