{
  if (nsd.superClass == null || nsd.superClass.length() == 0)   return;
  final String typeName=nsd.superClass.substring(nsd.superClass.lastIndexOf(".") + 1);
  final String typeQName=model.toJavaQualifiedTypeName("",nsd.superClass,false);
  String pkgName=typeQName.substring(0,typeQName.lastIndexOf('.'));
  File outFile=new File(outDir,toJavaFileName(typeQName));
  outFile=fileManager.getOutputFile(outFile);
  PrintWriter out=null;
  try {
    Util.log("Generating type: " + typeName + "..");
    out=new PrintWriter(new FileWriter(outFile));
    out.println("// Generated on " + new Date());
    out.println("// DTD/Schema  :    " + nsd.name);
    out.println("");
    if (pkgName != null) {
      out.println("package " + pkgName + ";");
    }
    out.println("");
    out.println("");
    out.println(JDOC_OPEN);
    out.println(JDOC_CONT + nsd.name + " base interface.");
    out.println(JDOC_CLOSE);
    out.print("public interface " + typeName + " ");
    out.println("{");
    out.println("}");
  }
 catch (  IOException ex) {
    ex.printStackTrace();
  }
 finally {
    try {
      if (out != null) {
        out.close();
      }
    }
 catch (    Exception ex) {
    }
    fileManager.releaseOutputFile(outFile);
  }
}
