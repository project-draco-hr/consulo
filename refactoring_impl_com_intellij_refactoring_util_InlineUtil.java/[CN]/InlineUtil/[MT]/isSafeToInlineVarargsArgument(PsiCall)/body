{
  final JavaResolveResult resolveResult=expression.resolveMethodGenerics();
  PsiElement element=resolveResult.getElement();
  final PsiSubstitutor substitutor=resolveResult.getSubstitutor();
  if (element instanceof PsiMethod && ((PsiMethod)element).isVarArgs()) {
    PsiMethod method=(PsiMethod)element;
    PsiParameter[] parameters=method.getParameterList().getParameters();
    PsiExpressionList argumentList=expression.getArgumentList();
    if (argumentList != null) {
      PsiExpression[] args=argumentList.getExpressions();
      if (parameters.length == args.length) {
        PsiExpression lastArg=args[args.length - 1];
        PsiParameter lastParameter=parameters[args.length - 1];
        PsiType lastParamType=lastParameter.getType();
        LOG.assertTrue(lastParamType instanceof PsiEllipsisType);
        if (lastArg instanceof PsiNewExpression && substitutor.substitute(((PsiEllipsisType)lastParamType).toArrayType()).equals(lastArg.getType())) {
          PsiArrayInitializerExpression arrayInitializer=((PsiNewExpression)lastArg).getArrayInitializer();
          PsiExpression[] initializers=arrayInitializer != null ? arrayInitializer.getInitializers() : PsiExpression.EMPTY_ARRAY;
          if (isSafeToFlatten(expression,method,initializers)) {
            return true;
          }
        }
      }
    }
  }
  return false;
}
