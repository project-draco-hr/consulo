{
  super(project);
  myCurrentInheritor=currentInheritor;
  mySuperClass=superClass;
  myPolicy=policy;
  myTargetClasses=currentInheritor != null ? new PsiClass[]{currentInheritor} : targetClasses;
  MemberInfoStorage memberInfoStorage=new MemberInfoStorage(mySuperClass,new MemberInfo.Filter<PsiMember>(){
    public boolean includeMember(    PsiMember element){
      return !(element instanceof PsiClass) || PsiTreeUtil.isAncestor(mySuperClass,element,true);
    }
  }
);
  List<MemberInfo> members=memberInfoStorage.getClassMemberInfos(mySuperClass);
  for (  MemberInfo member : members) {
    member.setChecked(true);
  }
  myMemberInfos=members.toArray(new MemberInfo[members.size()]);
}
