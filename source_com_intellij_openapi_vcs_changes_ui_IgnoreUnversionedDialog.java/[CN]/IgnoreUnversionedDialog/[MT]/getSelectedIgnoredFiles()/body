{
  if (myIgnoreSpecifiedFileRadioButton.isSelected()) {
    if (myFilesToIgnore == null) {
      IgnoredFileBean bean=new IgnoredFileBean();
      bean.setPath(myIgnoreFileTextField.getText().replace(File.separatorChar,'/'));
      return new IgnoredFileBean[]{bean};
    }
    return getBeansFromFilesToIgnore(false);
  }
  if (myIgnoreAllFilesUnderRadioButton.isSelected()) {
    if (getDirectoriesToIgnore() > 1) {
      return getBeansFromFilesToIgnore(true);
    }
    IgnoredFileBean result=new IgnoredFileBean();
    String path=myIgnoreDirectoryTextField.getText();
    if (new File(path).isAbsolute()) {
      final String relPath=ChangesUtil.getProjectRelativePath(myProject,new File(path));
      if (relPath != null) {
        path=relPath;
      }
    }
    if (!path.endsWith("/") && !path.endsWith(File.separator)) {
      path+=File.separator;
    }
    result.setPath(FileUtil.toSystemIndependentName(path));
    return new IgnoredFileBean[]{result};
  }
  if (myIgnoreAllFilesMatchingRadioButton.isSelected()) {
    IgnoredFileBean result=new IgnoredFileBean();
    result.setMask(myIgnoreMaskTextField.getText());
    return new IgnoredFileBean[]{result};
  }
  return new IgnoredFileBean[0];
}
