{
  if (!content.contains(JavaFXNamespaceProvider.JAVAFX_NAMESPACE)) {
    return null;
  }
  final String[] className=new String[]{null};
class StopException extends RuntimeException {
  }
  try {
    NanoXmlUtil.parse(new StringReader(content),new NanoXmlUtil.IXMLBuilderAdapter(){
      private boolean myFxRootUsed=false;
      @Override public void addAttribute(      String key,      String nsPrefix,      String nsURI,      String value,      String type) throws Exception {
        if (value != null && (FxmlConstants.FX_CONTROLLER.equals(nsPrefix + ":" + key) || FxmlConstants.TYPE.equals(key) && myFxRootUsed)) {
          className[0]=value;
        }
      }
      @Override public void elementAttributesProcessed(      String name,      String nsPrefix,      String nsURI) throws Exception {
        throw new StopException();
      }
      @Override public void startElement(      String name,      String nsPrefix,      String nsURI,      String systemID,      int lineNr) throws Exception {
        myFxRootUsed=FxmlConstants.FX_ROOT.equals(nsPrefix + ":" + name);
      }
    }
);
  }
 catch (  StopException ignore) {
  }
  return className[0];
}
