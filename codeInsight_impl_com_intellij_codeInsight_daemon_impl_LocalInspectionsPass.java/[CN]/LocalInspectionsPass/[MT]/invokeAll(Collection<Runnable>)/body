{
  if (myExecutorService == null) {
    for (    Runnable task : tasks) {
      task.run();
    }
    return;
  }
  List<Future<Object>> futures=new ArrayList<Future<Object>>(tasks.size());
  boolean done=false;
  try {
    for (    Runnable t : tasks) {
      FutureTask<Object> f=new FutureTask<Object>(t,null);
      futures.add(f);
      myExecutorService.execute(f);
    }
    for (    Future<Object> f : futures)     ((FutureTask)f).run();
    for (    Future<Object> f : futures) {
      if (!f.isDone()) {
        try {
          f.get();
        }
 catch (        CancellationException ignore) {
        }
catch (        ExecutionException e) {
          Throwable cause=e.getCause();
          if (cause != null) {
            throw cause;
          }
        }
      }
    }
    done=true;
  }
  finally {
    if (!done) {
      for (      Future<Object> f : futures) {
        f.cancel(false);
      }
    }
  }
}
