{
  myInitialCollection=collection;
  myWorkingCollection=new ArrayList<String>(myInitialCollection);
  myListModel=new DefaultListModel();
  myList.setModel(myListModel);
  reset();
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final FileChooserDescriptor dirChooser=FileChooserDescriptorFactory.createSingleFolderDescriptor();
      dirChooser.setShowFileSystemRoots(true);
      dirChooser.setHideIgnored(true);
      dirChooser.setTitle(UIBundle.message("file.chooser.default.title"));
      FileChooserDialog chooser=FileChooserFactory.getInstance().createFileChooser(dirChooser,myContentPane);
      VirtualFile[] files=chooser.choose(null,null);
      for (      VirtualFile file : files) {
        final String path=file.getPath();
        if (processor.addPath(myWorkingCollection,path)) {
          myListModel.addElement(path);
        }
      }
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int selected=myList.getSelectedIndex();
      if (selected != -1) {
        final String path=(String)myListModel.get(selected);
        if (processor.removePath(myWorkingCollection,path)) {
          myListModel.remove(selected);
        }
      }
    }
  }
);
}
