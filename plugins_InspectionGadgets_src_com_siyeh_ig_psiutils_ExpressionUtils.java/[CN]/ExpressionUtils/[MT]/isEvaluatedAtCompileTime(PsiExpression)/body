{
  if (expression instanceof PsiLiteralExpression) {
    return true;
  }
  if (expression instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)expression;
    final PsiExpression lhs=binaryExpression.getLOperand();
    final PsiExpression rhs=binaryExpression.getROperand();
    return isEvaluatedAtCompileTime(lhs) && isEvaluatedAtCompileTime(rhs);
  }
  if (expression instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)expression;
    final PsiExpression operand=prefixExpression.getOperand();
    return isEvaluatedAtCompileTime(operand);
  }
  if (expression instanceof PsiReferenceExpression) {
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)expression;
    final PsiElement qualifier=referenceExpression.getQualifier();
    if (qualifier instanceof PsiThisExpression) {
      return false;
    }
    final PsiElement element=referenceExpression.resolve();
    if (element instanceof PsiField) {
      final PsiField field=(PsiField)element;
      final PsiExpression initializer=field.getInitializer();
      return field.hasModifierProperty(PsiModifier.FINAL) && isEvaluatedAtCompileTime(initializer);
    }
    if (element instanceof PsiVariable) {
      final PsiVariable variable=(PsiVariable)element;
      if (PsiTreeUtil.isAncestor(variable,expression,true)) {
        return false;
      }
      final PsiExpression initializer=variable.getInitializer();
      return variable.hasModifierProperty(PsiModifier.FINAL) && isEvaluatedAtCompileTime(initializer);
    }
  }
  if (expression instanceof PsiParenthesizedExpression) {
    final PsiParenthesizedExpression parenthesizedExpression=(PsiParenthesizedExpression)expression;
    final PsiExpression unparenthesizedExpression=parenthesizedExpression.getExpression();
    return isEvaluatedAtCompileTime(unparenthesizedExpression);
  }
  if (expression instanceof PsiConditionalExpression) {
    final PsiConditionalExpression conditionalExpression=(PsiConditionalExpression)expression;
    final PsiExpression condition=conditionalExpression.getCondition();
    final PsiExpression thenExpression=conditionalExpression.getThenExpression();
    final PsiExpression elseExpression=conditionalExpression.getElseExpression();
    return isEvaluatedAtCompileTime(condition) && isEvaluatedAtCompileTime(thenExpression) && isEvaluatedAtCompileTime(elseExpression);
  }
  if (expression instanceof PsiTypeCastExpression) {
    final PsiTypeCastExpression typeCastExpression=(PsiTypeCastExpression)expression;
    final PsiTypeElement castType=typeCastExpression.getCastType();
    if (castType == null) {
      return false;
    }
    final PsiType type=castType.getType();
    return TypeUtils.typeEquals("java.lang.String",type);
  }
  return false;
}
