{
  final Map<String,List<RepositoryVersion>> byMessage=myCache.get(message);
  if (byMessage != null) {
    final List<RepositoryVersion> versions=byMessage.get(author);
    if (versions != null) {
      final CvsRepositoryVersion lastVersion=(CvsRepositoryVersion)versions.get(versions.size() - 1);
      if (lastVersion.containsDate(date)) {
        return lastVersion;
      }
    }
  }
  final CvsRepositoryVersion result=new CvsRepositoryVersion(myLastNumber,message,date,author,myRootPath,myEnvironment,myProject);
  myLastNumber+=1;
  if (!myCache.containsKey(message)) {
    myCache.put(message,new HashMap<String,List<RepositoryVersion>>());
  }
  final Map<String,List<RepositoryVersion>> filteredByMessages=myCache.get(message);
  if (!filteredByMessages.containsKey(author)) {
    filteredByMessages.put(author,new ArrayList<RepositoryVersion>());
  }
  filteredByMessages.get(author).add(result);
  return result;
}
