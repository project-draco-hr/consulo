{
  final Function<GrBinaryExpressionImpl,PsiType> typeCalculator=getTypeCalculator();
  if (typeCalculator != null) {
    final PsiType result=typeCalculator.fun(this);
    if (result != null)     return result;
  }
  final GroovyResolveResult resolveResult=PsiImplUtil.extractUniqueResult(multiResolve(false));
  final PsiType substituted=ResolveUtil.extractReturnTypeFromCandidate(resolveResult,this,new PsiType[]{getRightType(this)});
  return TypesUtil.boxPrimitiveType(substituted,getManager(),getResolveScope());
}
