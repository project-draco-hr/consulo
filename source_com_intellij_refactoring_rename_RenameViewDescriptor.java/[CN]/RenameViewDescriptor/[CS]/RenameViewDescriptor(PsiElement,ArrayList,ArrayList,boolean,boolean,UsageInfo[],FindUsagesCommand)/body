{
  myElements=elements;
  mySearchInComments=isSearchInComments;
  mySearchInNonJavaFiles=isSearchInNonJavaFiles;
  myUsages=usages;
  myRefreshCommand=refreshCommand;
  StringBuffer processedElementsHeader=new StringBuffer();
  StringBuffer codeReferencesText=new StringBuffer();
  codeReferencesText.append("References in code to ");
  for (int i=0; i < elements.size(); i++) {
    final PsiElement element=(PsiElement)elements.get(i);
    String newName=(String)names.get(i);
    String prefix="";
    if (element instanceof PsiDirectory) {
      String fullName=UsageViewUtil.getLongName(element);
      int lastDot=fullName.lastIndexOf('.');
      if (lastDot >= 0) {
        prefix=fullName.substring(0,lastDot + 1);
      }
    }
    processedElementsHeader.append(UsageViewUtil.capitalize(UsageViewUtil.getType(element) + " to be renamed to " + prefix+ newName));
    codeReferencesText.append(UsageViewUtil.getType(element) + " " + UsageViewUtil.getLongName(element));
    if (i < elements.size() - 1) {
      processedElementsHeader.append(", ");
      codeReferencesText.append(", ");
    }
  }
  codeReferencesText.append(" ");
  myProcessedElementsHeader=processedElementsHeader.toString();
  myCodeReferencesText=codeReferencesText.toString();
  myHelpID=HelpID.getRenameHelpID(primaryElement);
}
