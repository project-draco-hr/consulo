{
  final Object object=lookupItem.getObject();
  LOG.debug("object = " + object);
  handleInsertImpl(completionContext,lookupData,lookupItem,c);
  final CharSequence charsSequence=completionContext.editor.getDocument().getCharsSequence();
  final CaretModel caretModel=completionContext.editor.getCaretModel();
  int offset=caretModel.getOffset();
  if (object instanceof Lookup) {
    final Lookup item=(Lookup)object;
    if (item.isFunction()) {
      if (charAt(charsSequence,offset) != '(') {
        EditorModificationUtil.insertStringAtCaret(completionContext.editor,"()");
        if (item.hasParameters()) {
          caretModel.moveCaretRelatively(-1,0,false,false,true);
        }
      }
 else {
        caretModel.moveCaretRelatively(1,0,false,false,true);
      }
    }
 else     if (item instanceof NamespaceLookup) {
      if (charAt(charsSequence,offset) != ':') {
        EditorModificationUtil.insertStringAtCaret(completionContext.editor,":");
        return;
      }
    }
  }
  if (c == '\t') {
    if (charAt(charsSequence,offset) == ',') {
      offset++;
      caretModel.moveCaretRelatively(1,0,false,false,true);
      while (charAt(charsSequence,offset++) == ' ') {
        caretModel.moveCaretRelatively(1,0,false,false,true);
      }
    }
 else     if (isIdentifier(charAt(charsSequence,offset)) && isIdentifier(charAt(charsSequence,offset - 1))) {
      EditorModificationUtil.insertStringAtCaret(completionContext.editor," ");
    }
 else     if (charAt(charsSequence,offset) == ':') {
      caretModel.moveCaretRelatively(1,0,false,false,true);
    }
  }
}
