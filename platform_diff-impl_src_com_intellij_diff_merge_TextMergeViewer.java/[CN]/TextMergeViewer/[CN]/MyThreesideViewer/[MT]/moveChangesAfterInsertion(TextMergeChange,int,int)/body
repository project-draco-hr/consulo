{
  LOG.assertTrue(myCurrentMergeCommand != null);
  if (change.getStartLine() != newOutputStartLine || change.getEndLine() != newOutputEndLine) {
    change.setStartLine(newOutputStartLine);
    change.setEndLine(newOutputEndLine);
    reinstallHighlighter(change);
  }
  boolean beforeChange=true;
  for (  TextMergeChange otherChange : getAllChanges()) {
    int startLine=otherChange.getStartLine();
    int endLine=otherChange.getEndLine();
    if (endLine < newOutputStartLine)     continue;
    if (startLine > newOutputEndLine)     break;
    if (otherChange == change) {
      beforeChange=false;
      continue;
    }
    int newStartLine=beforeChange ? Math.min(startLine,newOutputStartLine) : Math.max(startLine,newOutputEndLine);
    int newEndLine=beforeChange ? Math.min(endLine,newOutputStartLine) : Math.max(endLine,newOutputEndLine);
    if (startLine != newStartLine || endLine != newEndLine) {
      otherChange.setStartLine(newStartLine);
      otherChange.setEndLine(newEndLine);
      reinstallHighlighter(otherChange);
    }
  }
}
