{
  final List<List<MergeWordFragment>> result=new ArrayList<List<MergeWordFragment>>(data.size());
  for (  InnerChunkData chunkData : data) {
    result.add(DiffUtil.compareThreesideInner(chunkData.text,ComparisonPolicy.DEFAULT,indicator));
  }
  ApplicationManager.getApplication().invokeAndWait(new Runnable(){
    @Override public void run(){
      if (!myEnabled || indicator.isCanceled())       return;
      myProgress=null;
      for (int i=0; i < scheduled.size(); i++) {
        TextMergeChange change=scheduled.get(i);
        if (myScheduled.contains(change))         continue;
        change.setInnerFragments(result.get(i));
      }
      myStatusPanel.setBusy(false);
      if (!myScheduled.isEmpty()) {
        launchRediff();
      }
    }
  }
,ModalityState.any());
}
