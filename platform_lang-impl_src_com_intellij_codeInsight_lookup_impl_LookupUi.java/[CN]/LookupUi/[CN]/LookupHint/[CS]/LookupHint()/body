{
  setOpaque(false);
  setBorder(INACTIVE_BORDER);
  setIcon(AllIcons.Actions.IntentionBulb);
  String acceleratorsText=KeymapUtil.getFirstKeyboardShortcutText(ActionManager.getInstance().getAction(IdeActions.ACTION_SHOW_INTENTION_ACTIONS));
  if (acceleratorsText.length() > 0) {
    setToolTipText(CodeInsightBundle.message("lightbulb.tooltip",acceleratorsText));
  }
  addMouseListener(new MouseAdapter(){
    @Override public void mouseEntered(    MouseEvent e){
      setBorder(ACTIVE_BORDER);
    }
    @Override public void mouseExited(    MouseEvent e){
      setBorder(INACTIVE_BORDER);
    }
    @Override public void mousePressed(    MouseEvent e){
      if (!e.isPopupTrigger() && e.getButton() == MouseEvent.BUTTON1) {
        myLookup.showElementActions();
      }
    }
  }
);
}
