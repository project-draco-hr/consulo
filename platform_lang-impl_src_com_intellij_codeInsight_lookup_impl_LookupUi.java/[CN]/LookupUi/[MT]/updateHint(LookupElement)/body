{
  myLookup.checkValid();
  if (myElementHint != null) {
    myLayeredPane.remove(myElementHint);
    myElementHint=null;
    final JRootPane rootPane=myLookup.getComponent().getRootPane();
    if (rootPane != null) {
      rootPane.revalidate();
      rootPane.repaint();
    }
  }
  if (!item.isValid()) {
    return;
  }
  final Collection<LookupElementAction> actions=myLookup.getActionsFor(item);
  if (!actions.isEmpty()) {
    myHintAlarm.addRequest(new Runnable(){
      @Override public void run(){
        if (!ShowHideIntentionIconLookupAction.shouldShowLookupHint() || ((CompletionExtender)myList.getExpandableItemsHandler()).isShowing()) {
          return;
        }
        myElementHint=new LookupHint();
        myLayeredPane.add(myElementHint,20,0);
        myLayeredPane.layoutHint();
      }
    }
,500,myModalityState);
  }
}
