{
  if (doClone && elements.length != 1) {
    throw new IllegalArgumentException("invalid number of elements to clone:" + elements.length);
  }
  if (newName != null && elements.length != 1) {
    throw new IllegalArgumentException("no new name should be set; number of elements is: " + elements.length);
  }
  final Project project=targetDirectory.getProject();
  Runnable command=new Runnable(){
    public void run(){
      final Runnable action=new Runnable(){
        public void run(){
          try {
            PsiFile firstFile=null;
            for (            PsiElement element : elements) {
              PsiFile f=copyToDirectory((PsiFileSystemItem)element,newName,targetDirectory);
              if (firstFile == null) {
                firstFile=f;
              }
            }
            if (firstFile != null) {
              CopyHandler.updateSelectionInActiveProjectView(firstFile,project,doClone);
              if (!(firstFile instanceof PsiBinaryFile)) {
                EditorHelper.openInEditor(firstFile);
                ApplicationManager.getApplication().invokeLater(new Runnable(){
                  public void run(){
                    ToolWindowManager.getInstance(project).activateEditorComponent();
                  }
                }
);
              }
            }
          }
 catch (          final IncorrectOperationException ex) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                Messages.showMessageDialog(project,ex.getMessage(),RefactoringBundle.message("error.title"),Messages.getErrorIcon());
              }
            }
);
          }
catch (          final IOException ex) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                Messages.showMessageDialog(project,ex.getMessage(),RefactoringBundle.message("error.title"),Messages.getErrorIcon());
              }
            }
);
          }
        }
      }
;
      ApplicationManager.getApplication().runWriteAction(action);
    }
  }
;
  CommandProcessor.getInstance().executeCommand(project,command,doClone ? RefactoringBundle.message("copy,handler.clone.files.directories") : RefactoringBundle.message("copy.handler.copy.files.directories"),null);
}
