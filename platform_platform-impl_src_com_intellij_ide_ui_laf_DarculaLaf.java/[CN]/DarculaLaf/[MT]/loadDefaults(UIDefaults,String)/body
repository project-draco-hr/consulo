{
  try {
    final Properties properties=new Properties();
    final String secondPart=postfix == null ? "" : "_" + postfix;
    final String name="darcula" + secondPart + ".properties";
    final InputStream stream=DarculaLaf.class.getResourceAsStream(name);
    properties.load(stream);
    for (    String key : properties.stringPropertyNames()) {
      final String value=properties.getProperty(key);
      if (key.endsWith("Insets")) {
        final List<String> numbers=StringUtil.split(value,",");
        defaults.put(key,new InsetsUIResource(Integer.parseInt(numbers.get(0)),Integer.parseInt(numbers.get(1)),Integer.parseInt(numbers.get(2)),Integer.parseInt(numbers.get(3))));
      }
 else {
        final Color color=ColorUtil.fromHex(value,null);
        final Integer invVal=getInteger(value);
        Icon icon=value != null && value.startsWith("AllIcons.") ? IconLoader.getIcon(value) : null;
        if (color != null) {
          defaults.put(key,new ColorUIResource(color));
        }
 else         if (invVal != null) {
          defaults.put(key,invVal);
        }
 else         if (icon != null) {
          defaults.put(key,new IconUIResource(icon));
        }
 else {
          defaults.put(key,value);
        }
      }
    }
  }
 catch (  IOException e) {
    log(e);
  }
}
