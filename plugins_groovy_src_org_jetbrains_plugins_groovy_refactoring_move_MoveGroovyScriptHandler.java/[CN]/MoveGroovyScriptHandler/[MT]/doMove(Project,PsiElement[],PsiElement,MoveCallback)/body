{
  if (!CommonRefactoringUtil.checkReadOnlyStatusRecursively(project,Arrays.asList(elements),true)) {
    return;
  }
  final String initialTargetPackageName=MoveClassesOrPackagesImpl.getInitialTargetPackageName(initialTargetElement,elements);
  final PsiDirectory initialTargetDirectory=MoveClassesOrPackagesImpl.getInitialTargetDirectory(initialTargetElement,elements);
  final boolean isTargetDirectoryFixed=MoveClassesOrPackagesImpl.getContainerDirectory(initialTargetElement) != null;
  boolean searchTextOccurences=false;
  for (int i=0; i < elements.length && !searchTextOccurences; i++) {
    PsiElement psiElement=elements[i];
    searchTextOccurences=TextOccurrencesUtil.isSearchTextOccurencesEnabled(psiElement);
  }
  final MoveGroovyScriptDialog moveDialog=new MoveGroovyScriptDialog(project,searchTextOccurences,elements,initialTargetElement,moveCallback);
  boolean searchInComments=JavaRefactoringSettings.getInstance().MOVE_SEARCH_IN_COMMENTS;
  boolean searchForTextOccurences=JavaRefactoringSettings.getInstance().MOVE_SEARCH_FOR_TEXT;
  moveDialog.setData(elements,initialTargetPackageName,initialTargetDirectory,isTargetDirectoryFixed,searchInComments,searchForTextOccurences,HelpID.getMoveHelpID(elements[0]));
  moveDialog.show();
}
