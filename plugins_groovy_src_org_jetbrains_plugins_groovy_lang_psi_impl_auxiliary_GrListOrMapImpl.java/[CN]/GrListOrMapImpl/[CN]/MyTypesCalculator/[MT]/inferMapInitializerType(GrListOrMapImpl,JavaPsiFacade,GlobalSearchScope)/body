{
  PsiClass mapClass=facade.findClass("java.util.LinkedHashMap",scope);
  if (mapClass == null) {
    mapClass=facade.findClass(CommonClassNames.JAVA_UTIL_MAP,scope);
  }
  PsiElementFactory factory=facade.getElementFactory();
  if (mapClass != null) {
    PsiTypeParameter[] typeParameters=mapClass.getTypeParameters();
    if (typeParameters.length == 2) {
      GrNamedArgument[] namedArgs=listOrMap.getNamedArguments();
      GrExpression[] values=new GrExpression[namedArgs.length];
      GrArgumentLabel[] labels=new GrArgumentLabel[namedArgs.length];
      for (int i=0; i < values.length; i++) {
        GrExpression expr=namedArgs[i].getExpression();
        if (expr == null)         return null;
        values[i]=expr;
        GrArgumentLabel label=namedArgs[i].getLabel();
        if (label == null)         return null;
        labels[i]=label;
      }
      PsiType initializerType=getInitializerType(values);
      PsiType labelType=getLabelsType(labels);
      PsiSubstitutor substitutor=PsiSubstitutor.EMPTY.put(typeParameters[0],labelType).put(typeParameters[1],initializerType);
      return factory.createType(mapClass,substitutor);
    }
 else {
      return facade.getElementFactory().createType(mapClass);
    }
  }
  return null;
}
