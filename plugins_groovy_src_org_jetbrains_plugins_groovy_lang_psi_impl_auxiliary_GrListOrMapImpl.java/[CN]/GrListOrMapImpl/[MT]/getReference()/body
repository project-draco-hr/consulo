{
  final PsiClassType conversionType=LiteralConstructorReference.getTargetConversionType(this);
  if (conversionType == null)   return null;
  PsiType ownType=getType();
  if (ownType instanceof PsiClassType) {
    ownType=((PsiClassType)ownType).rawType();
  }
  if (ownType != null && TypesUtil.isAssignableWithoutConversions(conversionType.rawType(),ownType,this))   return null;
  final PsiClass resolved=conversionType.resolve();
  if (resolved != null) {
    if (InheritanceUtil.isInheritor(resolved,CommonClassNames.JAVA_UTIL_SET))     return null;
    if (InheritanceUtil.isInheritor(resolved,CommonClassNames.JAVA_UTIL_LIST))     return null;
  }
  return new LiteralConstructorReference(this,conversionType);
}
