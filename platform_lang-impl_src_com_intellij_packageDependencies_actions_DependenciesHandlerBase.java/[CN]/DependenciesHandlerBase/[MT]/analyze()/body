{
  final List<DependenciesBuilder> builders=new ArrayList<DependenciesBuilder>();
  for (  AnalysisScope scope : myScopes) {
    builders.add(createDependenciesBuilder(scope));
  }
  ProgressManager.getInstance().run(new Task.Backgroundable(myProject,getProgressTitle(),true,new PerformAnalysisInBackgroundOption(myProject)){
    public void run(    @NotNull final ProgressIndicator indicator){
      for (      DependenciesBuilder builder : builders) {
        builder.analyze();
      }
    }
    public void onSuccess(){
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          final String displayName=getPanelDisplayName(builders.get(0).getScope());
          DependenciesPanel panel=new DependenciesPanel(DependenciesHandlerBase.this.myProject,builders,myExcluded);
          Content content=ContentFactory.SERVICE.getInstance().createContent(panel,displayName,false);
          content.setDisposer(panel);
          panel.setContent(content);
          ((DependencyValidationManagerImpl)DependencyValidationManager.getInstance(DependenciesHandlerBase.this.myProject)).addContent(content);
        }
      }
);
    }
  }
);
}
