{
  super(project);
  myProjectView=projectView;
  myDependencyValidationManager=dependencyValidationManager;
  myNamedScopeManager=namedScopeManager;
  myScopeListener=new NamedScopesHolder.ScopeListener(){
    Alarm refreshProjectViewAlarm=new Alarm();
    @Override public void scopesChanged(){
      refreshProjectViewAlarm.cancelAllRequests();
      refreshProjectViewAlarm.addRequest(new Runnable(){
        @Override public void run(){
          if (myProject.isDisposed())           return;
          final String subId=getSubId();
          final String id=myProjectView.getCurrentViewId();
          myProjectView.removeProjectPane(ScopeViewPane.this);
          myProjectView.addProjectPane(ScopeViewPane.this);
          if (id != null) {
            if (Comparing.strEqual(id,getId())) {
              myProjectView.changeView(id,subId);
            }
 else {
              myProjectView.changeView(id);
            }
          }
        }
      }
,10);
    }
  }
;
  myDependencyValidationManager.addScopeListener(myScopeListener);
  myNamedScopeManager.addScopeListener(myScopeListener);
}
