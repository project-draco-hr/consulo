{
  try {
    ChangeContextUtil.decodeContextInfo(member,null,null);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
  final PsiElementFactory factory=PsiManager.getInstance(myProject).getElementFactory();
  member.accept(new JavaRecursiveElementVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      decodeRef(expression,factory,targetClass,expression);
      super.visitReferenceExpression(expression);
    }
    @Override public void visitNewExpression(    PsiNewExpression expression){
      final PsiJavaCodeReferenceElement classReference=expression.getClassReference();
      if (classReference != null)       decodeRef(classReference,factory,targetClass,expression);
      super.visitNewExpression(expression);
    }
  }
);
}
