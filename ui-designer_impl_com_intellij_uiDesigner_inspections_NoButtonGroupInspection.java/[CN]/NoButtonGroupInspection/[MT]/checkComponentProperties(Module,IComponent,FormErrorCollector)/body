{
  if (FormInspectionUtil.isComponentClass(module,component,JRadioButton.class)) {
    final IRootContainer root=FormEditingUtil.getRoot(component);
    if (root == null)     return;
    if (root.getButtonGroupName(component) == null) {
      EditorQuickFixProvider quickFixProvider=null;
      IContainer parent=component.getParentContainer();
      for (int i=0; i < parent.getComponentCount(); i++) {
        IComponent child=parent.getComponent(i);
        if (child != component && FormInspectionUtil.isComponentClass(module,child,JRadioButton.class)) {
          final GridConstraints c1=component.getConstraints();
          final GridConstraints c2=child.getConstraints();
          if ((c1.getRow() == c2.getRow() && Math.abs(c1.getColumn() - c2.getColumn()) == 1) || (c1.getColumn() == c2.getColumn() && Math.abs(c1.getRow() - c2.getRow()) == 1)) {
            final String groupName=root.getButtonGroupName(child);
            if (groupName == null) {
              quickFixProvider=new EditorQuickFixProvider(){
                public QuickFix createQuickFix(                GuiEditor editor,                RadComponent component){
                  return new CreateGroupQuickFix(editor,component,c1.getColumn() == c2.getColumn());
                }
              }
;
              break;
            }
 else {
              quickFixProvider=new EditorQuickFixProvider(){
                public QuickFix createQuickFix(                GuiEditor editor,                RadComponent component){
                  return new AddToGroupQuickFix(editor,component,groupName);
                }
              }
;
            }
          }
        }
      }
      collector.addError(getID(),null,UIDesignerBundle.message("inspection.no.button.group.error"),quickFixProvider);
    }
  }
}
