{
  final HighlighterIterator it=myEditor.getHighlighter().createIterator(indentOffset);
  IElementType tokenType=it.getTokenType();
  Language language=tokenType.getLanguage();
  TokenSet comments=myComments.get(language);
  if (comments == null) {
    ParserDefinition definition=LanguageParserDefinitions.INSTANCE.forLanguage(language);
    if (definition != null) {
      comments=definition.getCommentTokens(myFile.getLanguageVersion());
    }
    if (comments == null) {
      return fallbackColumn;
    }
 else {
      myComments.put(language,comments);
    }
  }
  if (comments.contains(tokenType) && indentOffset == it.getStart()) {
    String prefix=COMMENT_PREFIXES.get(tokenType);
    if (prefix == null) {
      prefix=getCommentPrefix(tokenType);
    }
    if (!NO_COMMENT_INFO_MARKER.equals(prefix)) {
      final int indentInsideCommentOffset=CharArrayUtil.shiftForward(myChars,indentOffset + prefix.length(),lineEndOffset," \t");
      if (indentInsideCommentOffset < lineEndOffset) {
        int indent=myEditor.calcColumnNumber(indentInsideCommentOffset,line);
        indentAfterUncomment.put(line,indent - prefix.length());
        return indent;
      }
    }
  }
  return fallbackColumn;
}
