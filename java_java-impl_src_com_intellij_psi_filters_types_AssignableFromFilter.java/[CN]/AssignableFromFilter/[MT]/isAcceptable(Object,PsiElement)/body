{
  PsiType type=myType;
  if (type == null) {
    final PsiClass aClass=JavaPsiFacade.getInstance(context.getProject()).findClass(myClassName,context.getResolveScope());
    if (aClass != null) {
      type=JavaPsiFacade.getInstance(aClass.getProject()).getElementFactory().createType(aClass,PsiSubstitutor.EMPTY);
    }
 else {
      type=null;
    }
  }
  if (type == null)   return false;
  if (element == null)   return false;
  if (element instanceof PsiType)   return type.isAssignableFrom((PsiType)element);
  PsiSubstitutor substitutor=null;
  if (element instanceof CandidateInfo) {
    final CandidateInfo info=(CandidateInfo)element;
    substitutor=info.getSubstitutor();
    element=info.getElement();
  }
  if (element instanceof PsiMethod && isReturnTypeInferrable((PsiMethod)element,context,type,substitutor)) {
    return true;
  }
  PsiType typeByElement=FilterUtil.getTypeByElement((PsiElement)element,context);
  if (typeByElement == null) {
    return false;
  }
  if (substitutor != null) {
    typeByElement=substitutor.substitute(typeByElement);
  }
  if (!allowBoxing(context) && (type instanceof PsiPrimitiveType != typeByElement instanceof PsiPrimitiveType)) {
    return false;
  }
  return type.isAssignableFrom(typeByElement);
}
