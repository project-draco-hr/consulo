{
  List<VcsException> exceptions=new ArrayList<VcsException>();
  try {
    File messageFile=createMessageFile(message);
    try {
      Map<VirtualFile,List<Change>> sortedChanges=sortChangesByVcsRoot(changes);
      for (      VirtualFile root : sortedChanges.keySet()) {
        Set<FilePath> files=new HashSet<FilePath>();
        for (        Change change : changes) {
switch (change.getType()) {
case NEW:
case MODIFICATION:
            files.add(change.getAfterRevision().getFile());
          break;
case DELETED:
        files.add(change.getBeforeRevision().getFile());
      break;
case MOVED:
    files.add(change.getAfterRevision().getFile());
  files.add(change.getBeforeRevision().getFile());
break;
default :
throw new IllegalStateException("Unknown change type: " + change.getType());
}
}
try {
if (updateIndex(myProject,root,files,exceptions)) {
commit(myProject,root,files,messageFile,myNextCommitAuthor).run();
}
}
 catch (VcsException e) {
exceptions.add(e);
}
}
}
  finally {
if (!messageFile.delete()) {
log.warn("Failed to remove temporary file: " + messageFile);
}
}
}
 catch (IOException ex) {
exceptions.add(new VcsException("Creation of commit message file failed",ex));
}
return exceptions;
}
