{
  Map<Set<Map>,NonCodeMembersHolder> map=CachedValuesManager.getManager(place.getProject()).getCachedValue(place,new CachedValueProvider<Map<Set<Map>,NonCodeMembersHolder>>(){
    public Result<Map<Set<Map>,NonCodeMembersHolder>> compute(){
      final Map<Set<Map>,NonCodeMembersHolder> map=new ConcurrentSoftHashMap<Set<Map>,NonCodeMembersHolder>();
      return Result.create(map,PsiModificationTracker.MODIFICATION_COUNT);
    }
  }
);
  NonCodeMembersHolder result=map.get(methods);
  if (result == null) {
    map.put(methods,result=new NonCodeMembersHolder(methods,place));
  }
  return result;
}
