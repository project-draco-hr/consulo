{
  final ClosureDescriptor closure=new ClosureDescriptor(manager);
{
    final Object params=prop.get("params");
    if (params instanceof Map) {
      boolean first=true;
      for (      Object paramName : ((Map)params).keySet()) {
        Object value=((Map)params).get(paramName);
        boolean isNamed=first && value instanceof List;
        first=false;
        String typeName=isNamed ? CommonClassNames.JAVA_UTIL_MAP : String.valueOf(value);
        closure.addParameter(typeName,String.valueOf(paramName));
      }
    }
    Object doc=prop.get("doc");
    if (doc instanceof String) {
      closure.putUserData(DOCUMENTATION,(String)doc);
    }
    Object docUrl=prop.get("docUrl");
    if (docUrl instanceof String) {
      closure.putUserData(DOCUMENTATION_URL,(String)docUrl);
    }
  }
  final Object method=prop.get("method");
  if (method instanceof Map) {
    String name=String.valueOf(((Map)method).get("name"));
    List<PsiType> types=new ArrayList<PsiType>();
    final Object params=((Map)method).get("params");
    if (params instanceof Map) {
      boolean first=true;
      for (      Object paramName : ((Map)params).keySet()) {
        Object value=((Map)params).get(paramName);
        boolean isNamed=first && value instanceof List;
        first=false;
        String typeName=isNamed ? CommonClassNames.JAVA_UTIL_MAP : String.valueOf(value);
        types.add(convertToPsiType(typeName,place));
      }
    }
 else     if (params instanceof List) {
      for (      Object param : ((List)params)) {
        types.add(convertToPsiType(String.valueOf(param),place));
      }
    }
    final boolean isConstructor=Boolean.TRUE.equals(((Map)method).get("constructor"));
    final PsiType[] typeArray=types.toArray(new PsiType[types.size()]);
    final MethodSignature signature=MethodSignatureUtil.createMethodSignature(name,typeArray,PsiTypeParameter.EMPTY_ARRAY,PsiSubstitutor.EMPTY,isConstructor);
    closure.setMethodSignature(signature);
  }
  return closure;
}
