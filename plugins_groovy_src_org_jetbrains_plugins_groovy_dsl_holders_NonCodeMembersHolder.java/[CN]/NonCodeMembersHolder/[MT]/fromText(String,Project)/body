{
  return CachedValuesManager.getManager(project).getCachedValue(project,CACHED_HOLDERS,new CachedValueProvider<ConcurrentFactoryMap<String,NonCodeMembersHolder>>(){
    public Result<ConcurrentFactoryMap<String,NonCodeMembersHolder>> compute(){
      final ConcurrentFactoryMap<String,NonCodeMembersHolder> map=new ConcurrentFactoryMap<String,NonCodeMembersHolder>(){
        @Override protected NonCodeMembersHolder create(        String key){
          return new NonCodeMembersHolder(key,project);
        }
      }
;
      return Result.create(map,PsiModificationTracker.MODIFICATION_COUNT);
    }
  }
,false).get(classText);
}
