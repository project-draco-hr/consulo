{
  if (element != null && !canRename(project,editor,element)) {
    return;
  }
  VirtualFile contextFile=PsiUtilCore.getVirtualFile(nameSuggestionContext);
  if (nameSuggestionContext != null && nameSuggestionContext.isPhysical() && (contextFile == null || contextFile.getFileType() != ScratchFileType.INSTANCE) && !PsiManager.getInstance(project).isInProject(nameSuggestionContext)) {
    final String message="Selected element is used from non-project files. These usages won't be renamed. Proceed anyway?";
    if (ApplicationManager.getApplication().isUnitTestMode())     throw new CommonRefactoringUtil.RefactoringErrorHintException(message);
    if (Messages.showYesNoDialog(project,message,RefactoringBundle.getCannotRefactorMessage(null),Messages.getWarningIcon()) != Messages.YES) {
      return;
    }
  }
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.rename");
  rename(element,project,nameSuggestionContext,editor);
}
