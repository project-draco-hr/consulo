{
  if (element == null)   return "";
  if (!(element instanceof PsiFile) && CollectHighlightsUtil.isOutsideSourceRootJavaFile(element.getContainingFile()))   return "";
  if (!element.isWritable()) {
    return RefactoringBundle.getCannotRefactorMessage("This element cannot be renamed.");
  }
  boolean hasRenameProcessor=RenamePsiElementProcessor.forElement(element) != RenamePsiElementProcessor.DEFAULT;
  boolean hasWritableMetaData=element instanceof PsiMetaOwner && ((PsiMetaOwner)element).getMetaData() instanceof PsiWritableMetaData;
  if (!hasRenameProcessor && !hasWritableMetaData && !(element instanceof PsiNamedElement)) {
    return RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.wrong.caret.position.symbol.to.rename"));
  }
  if (!PsiManager.getInstance(project).isInProject(element) && element.isPhysical()) {
    return RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.out.of.project.element",UsageViewUtil.getType(element)));
  }
  if (InjectedLanguageUtil.isInInjectedLanguagePrefixSuffix(element)) {
    return RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.in.injected.lang.prefix.suffix",UsageViewUtil.getType(element)));
  }
  return null;
}
