{
  if (element == null)   return "";
  boolean hasRenameProcessor=RenamePsiElementProcessor.forElement(element) != RenamePsiElementProcessor.DEFAULT;
  boolean hasWritableMetaData=element instanceof PsiMetaOwner && ((PsiMetaOwner)element).getMetaData() instanceof PsiWritableMetaData;
  if (!hasRenameProcessor && !hasWritableMetaData && !(element instanceof PsiNamedElement)) {
    return RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.wrong.caret.position.symbol.to.rename"));
  }
  if (!PsiManager.getInstance(project).isInProject(element)) {
    if (element.isPhysical()) {
      final String message=RefactoringBundle.message("error.out.of.project.element",UsageViewUtil.getType(element));
      return RefactoringBundle.getCannotRefactorMessage(message);
    }
    if (!element.isWritable()) {
      return RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.cannot.be.renamed"));
    }
  }
  if (InjectedLanguageFacadeImpl.isInInjectedLanguagePrefixSuffix(element)) {
    final String message=RefactoringBundle.message("error.in.injected.lang.prefix.suffix",UsageViewUtil.getType(element));
    return RefactoringBundle.getCannotRefactorMessage(message);
  }
  return null;
}
