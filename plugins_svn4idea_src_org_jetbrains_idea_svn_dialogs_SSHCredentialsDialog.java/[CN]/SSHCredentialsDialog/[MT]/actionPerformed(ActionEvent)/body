{
  if (e.getSource() == myPasswordButton || e.getSource() == myKeyButton) {
    updateFields();
  }
 else {
    String path=myKeyFileText.getText();
    VirtualFile file;
    if (path != null && path.trim().length() > 0) {
      path="file://" + path.replace(File.separatorChar,'/');
      file=VirtualFileManager.getInstance().findFileByUrl(path);
    }
 else {
      path="file://" + System.getProperty("user.home") + "/.ssh/identity";
      path=path.replace(File.separatorChar,'/');
      file=VirtualFileManager.getInstance().findFileByUrl(path);
    }
    FileChooserDescriptor descriptor=new FileChooserDescriptor(true,false,false,false,false,false);
    descriptor.setShowFileSystemRoots(true);
    descriptor.setTitle("OpenSSH v2 Private Key");
    descriptor.setDescription("Select private key file for SSH authentication");
    descriptor.setHideIgnored(false);
    String oldValue=PropertiesComponent.getInstance().getValue("FileChooser.showHiddens");
    PropertiesComponent.getInstance().setValue("FileChooser.showHiddens","true");
    VirtualFile[] files=FileChooser.chooseFiles(myProject,descriptor,file);
    PropertiesComponent.getInstance().setValue("FileChooser.showHiddens",oldValue);
    if (files != null && files.length == 1) {
      path=files[0].getPath().replace('/',File.separatorChar);
      myKeyFileText.setText(path);
    }
  }
  updateOKButton();
}
