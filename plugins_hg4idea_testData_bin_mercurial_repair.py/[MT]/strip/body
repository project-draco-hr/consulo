def strip(ui, repo, node, backup='all'):
    cl = repo.changelog
    striprev = cl.rev(node)
    tostrip = set((striprev,))
    saveheads = set()
    savebases = []
    for r in xrange((striprev + 1), len(cl)):
        parents = cl.parentrevs(r)
        if ((parents[0] in tostrip) or (parents[1] in tostrip)):
            tostrip.add(r)
            if (parents[1] != nullrev):
                for p in parents:
                    if ((p not in tostrip) and (p > striprev)):
                        saveheads.add(p)
        else:
            if ((parents[0] < striprev) and (parents[1] < striprev)):
                savebases.append(cl.node(r))
            saveheads.difference_update(parents)
            saveheads.add(r)
    saveheads = [cl.node(r) for r in saveheads]
    files = _collectfiles(repo, striprev)
    extranodes = _collectextranodes(repo, files, striprev)
    if (backup == 'all'):
        _bundle(repo, [node], cl.heads(), node, 'backup')
    if (saveheads or extranodes):
        chgrpfile = _bundle(repo, savebases, saveheads, node, 'temp', extranodes)
    mfst = repo.manifest
    tr = repo.transaction()
    offset = len(tr.entries)
    tr.startgroup()
    cl.strip(striprev, tr)
    mfst.strip(striprev, tr)
    for fn in files:
        repo.file(fn).strip(striprev, tr)
    tr.endgroup()
    try:
        for i in xrange(offset, len(tr.entries)):
            (file, troffset, ignore) = tr.entries[i]
            repo.sopener(file, 'a').truncate(troffset)
        tr.close()
    except:
        tr.abort()
        raise
    if (saveheads or extranodes):
        ui.status(_('adding branch\n'))
        f = open(chgrpfile, 'rb')
        gen = changegroup.readbundle(f, chgrpfile)
        repo.addchangegroup(gen, 'strip', ('bundle:' + chgrpfile), True)
        f.close()
        if (backup != 'strip'):
            os.unlink(chgrpfile)
    repo.destroyed()
