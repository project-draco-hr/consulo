{
  final ContentRevision fileRevision=myDiffProvider.createFileContent(revisionNumber,mySelectedFile);
  if (fileRevision != null) {
    final Ref<VcsException> ex=new Ref<VcsException>();
    final StringBuilder contentBuilder=new StringBuilder();
    ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
      public void run(){
        try {
          final String content=fileRevision.getContent();
          if (!(fileRevision instanceof BinaryContentRevision)) {
            if (content == null) {
              ex.set(new VcsException("Failed to load content"));
            }
            contentBuilder.append(content);
          }
        }
 catch (        VcsException e) {
          ex.set(e);
        }
      }
    }
,VcsBundle.message("show.diff.progress.title"),true,myProject);
    if (!ex.isNull()) {
      AbstractVcsHelper.getInstance(myProject).showError(ex.get(),VcsBundle.message("message.title.diff"));
      return null;
    }
    if (fileRevision instanceof BinaryContentRevision) {
      if (Arrays.equals(mySelectedFile.contentsToByteArray(),((BinaryContentRevision)fileRevision).getBinaryContent())) {
        Messages.showInfoMessage(VcsBundle.message("message.text.binary.versions.are.identical"),VcsBundle.message("message.title.diff"));
      }
 else {
        Messages.showInfoMessage(VcsBundle.message("message.text.binary.versions.are.different"),VcsBundle.message("message.title.diff"));
      }
      return null;
    }
    return new SimpleContent(contentBuilder.toString(),mySelectedFile.getFileType());
  }
  return null;
}
