{
  int predictOffset=startIndex < elements.length ? elements[startIndex].getTextOffset() + elements[startIndex].getText().length() : 0;
  for (int i=startIndex; i < elements.length; i++) {
    if (elements[i].getTextOffset() > predictOffset)     buffer.append(" ");
    predictOffset=elements[i].getTextOffset() + elements[i].getText().length();
    PsiElement element=elements[i];
    if (element instanceof PsiInlineDocTag) {
      PsiInlineDocTag tag=(PsiInlineDocTag)element;
      final String tagName=tag.getName();
      if (tagName == null) {
        buffer.append(element.getText());
      }
 else       if (tagName.equals(LINK_TAG)) {
        generateLinkValue(tag,buffer,false);
      }
 else       if (tagName.equals(LITERAL_TAG)) {
        generateLiteralValue(tag,buffer);
      }
 else       if (tagName.equals(CODE_TAG)) {
        generateCodeValue(tag,buffer);
      }
 else       if (tagName.equals(LINKPLAIN_TAG)) {
        generateLinkValue(tag,buffer,true);
      }
 else       if (tagName.equals(INHERITDOC_TAG)) {
        Pair<PsiElement[],InheritDocProvider<PsiElement[]>> inheritInfo=provider.getInheritDoc();
        if (inheritInfo != null) {
          generateValue(buffer,inheritInfo.first,inheritInfo.second);
        }
      }
 else       if (tagName.equals(DOCROOT_TAG)) {
        buffer.append(getDocRoot());
      }
 else       if (tagName.equals(VALUE_TAG)) {
        generateValueValue(tag,buffer,element);
      }
 else {
        buffer.append(element.getText());
      }
    }
 else {
      buffer.append(element.getText());
    }
  }
}
