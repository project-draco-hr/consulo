{
  final boolean isStatic=mySetter.hasModifierProperty(PsiModifier.STATIC);
  final GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(myContext.project);
  PsiParameter[] parameters=mySetter.getParameterList().getParameters();
  PsiParameter parameter=parameters[parameters.length - 1];
  final PsiType parameterType=myContext.typeProvider.getParameterType(parameter);
  myBuffer.append("private static ");
  processTypeParameters(parameterType);
  myBuffer.append(myName);
  if (!(parameterType instanceof PsiPrimitiveType)) {
    parameter=factory.createParameter(parameter.getName(),"Value",null);
  }
  PsiParameter[] actual=inferActualParameters(isStatic,parameters,parameter);
  final GroovyPsiElement place=createStubMethod(actual);
  GenerationUtil.writeParameterList(myBuffer,actual,myClassNameProvider,myContext);
  writeBody(isStatic,parameters,parameter,place);
}
