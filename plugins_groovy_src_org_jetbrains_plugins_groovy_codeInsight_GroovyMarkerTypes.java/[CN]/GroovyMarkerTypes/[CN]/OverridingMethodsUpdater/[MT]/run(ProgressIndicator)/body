{
  super.run(indicator);
  for (  PsiMethod method : PsiImplUtil.getMethodOrReflectedMethods(myMethod)) {
    OverridingMethodsSearch.search(method,true).forEach(new CommonProcessors.CollectProcessor<PsiMethod>(){
      @Override public boolean process(      PsiMethod psiMethod){
        if (!updateComponent(com.intellij.psi.impl.PsiImplUtil.handleMirror(psiMethod),myRenderer.getComparator())) {
          indicator.cancel();
        }
        indicator.checkCanceled();
        return true;
      }
    }
);
  }
}
