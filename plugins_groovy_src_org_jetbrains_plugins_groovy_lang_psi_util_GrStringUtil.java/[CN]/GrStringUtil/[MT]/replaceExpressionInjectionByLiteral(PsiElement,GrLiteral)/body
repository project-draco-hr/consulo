{
  if (injection.getParent() instanceof GrClosableBlock) {
    injection=injection.getParent();
  }
  GrString grString=(GrString)injection.getParent();
  int injectionNumber=-1;
  for (  PsiElement child : grString.getChildren()) {
    injectionNumber++;
    if (child == injection) {
      break;
    }
  }
  if (injectionNumber == -1)   return grString;
  GrString grStringWithBraces=addAllBracesInGString(grString);
  injection=grStringWithBraces.getChildren()[injectionNumber];
  final int offset=injection.getStartOffsetInParent();
  final TextRange range=new TextRange(offset - 1,offset + injection.getTextLength());
  if (literal instanceof GrString) {
    literal=addAllBracesInGString((GrString)literal);
  }
  String literalText=literal.getText();
  if (isPlainString(literal)) {
    literalText=escapeSymbolsForGString(literalText);
  }
  String text=StringUtil.replaceSubstring(grStringWithBraces.getText(),range,removeQuotes(literalText));
  GrExpression newGrString=GroovyPsiElementFactory.getInstance(grString.getProject()).createExpressionFromText(text);
  if (newGrString instanceof GrString) {
    removeUnnecessaryBracesInGString((GrString)newGrString);
  }
  return grString.replaceWithExpression(newGrString,true);
}
