{
  if (event.isFromRefresh()) {
    return;
  }
  final VirtualFile file=event.getFile();
  if (!VcsUtil.isFileForVcs(file,project,vcs)) {
    return;
  }
  if (!isFileProcessable(file)) {
    return;
  }
  FileStatus status=FileStatusManager.getInstance(project).getStatus(file);
  if (status == FileStatus.UNKNOWN || status == FileStatus.IGNORED) {
    return;
  }
  String title=HgVcsMessages.message("hg4idea.delete.confirmation.title");
  String message=HgVcsMessages.message("hg4idea.delete.confirmation.body",file.getPath());
  VcsShowConfirmationOption option=ProjectLevelVcsManager.getInstance(project).getStandardConfirmation(VcsConfiguration.StandardConfirmation.REMOVE,vcs);
  boolean processDelete=false;
  if (DO_ACTION_SILENTLY == option.getValue()) {
    processDelete=true;
  }
 else   if (SHOW_CONFIRMATION == option.getValue()) {
    AbstractVcsHelper helper=AbstractVcsHelper.getInstance(project);
    processDelete=null != helper.selectFilesToProcess(Arrays.asList(file),title,null,title,message,option);
  }
  VirtualFile repo=VcsUtil.getVcsRootFor(project,file);
  if (processDelete && repo != null) {
    new HgRemoveCommand(project).execute(new HgFile(repo,new File(file.getPath())));
  }
}
