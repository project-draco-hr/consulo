{
  if (PsiUtil.getLanguageLevel(context).isAtLeast(LanguageLevel.JDK_1_7)) {
    final PsiJavaCodeReferenceElement classReference=expression.getClassOrAnonymousClassReference();
    if (classReference != null) {
      final PsiReferenceParameterList parameterList=classReference.getParameterList();
      if (parameterList != null) {
        final PsiTypeElement[] typeElements=parameterList.getTypeParameterElements();
        if (typeElements.length > 0) {
          if (typeElements.length == 1 && typeElements[0].getType() instanceof PsiDiamondType)           return false;
          final PsiDiamondType.DiamondInferenceResult inferenceResult=PsiDiamondType.resolveInferredTypes(expression);
          if (inferenceResult.getErrorMessage() == null) {
            final List<PsiType> types=inferenceResult.getInferredTypes();
            final PsiType[] typeArguments=parameterList.getTypeArguments();
            if (types.size() == typeArguments.length) {
              for (int i=0, typeArgumentsLength=typeArguments.length; i < typeArgumentsLength; i++) {
                PsiType typeArgument=typeArguments[i];
                if (types.get(i) instanceof PsiWildcardType) {
                  final PsiWildcardType wildcardType=(PsiWildcardType)types.get(i);
                  final PsiType bound=wildcardType.getBound();
                  if (bound != null) {
                    if (wildcardType.isExtends()) {
                      if (bound.isAssignableFrom(typeArgument))                       continue;
                    }
 else {
                      if (typeArgument.isAssignableFrom(bound))                       continue;
                    }
                  }
                }
                if (!typeArgument.equals(types.get(i))) {
                  return false;
                }
              }
            }
            return true;
          }
        }
      }
    }
  }
  return false;
}
