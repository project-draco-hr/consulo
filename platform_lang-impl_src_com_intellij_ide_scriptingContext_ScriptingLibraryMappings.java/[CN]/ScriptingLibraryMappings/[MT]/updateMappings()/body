{
  myLibraryManager.reset();
  Map<VirtualFile,ScriptingLibraryTable.LibraryModel> map=getMappings();
  myCompoundLibMap.clear();
  myProjectLibs=null;
  for (  VirtualFile file : map.keySet().toArray(new VirtualFile[map.size()])) {
    ScriptingLibraryTable.LibraryModel value=getImmediateMapping(file);
    if (value instanceof CompoundLibrary) {
      CompoundLibrary container=(CompoundLibrary)value;
      ScriptingLibraryTable.LibraryModel[] libModels=container.getLibraries().toArray(new ScriptingLibraryTable.LibraryModel[container.getLibraryCount()]);
      CompoundLibrary newContainer=new CompoundLibrary();
      for (      ScriptingLibraryTable.LibraryModel libraryModel : libModels) {
        String libName=libraryModel.getName();
        if (myLibraryManager.getLibraryByName(libName) != null) {
          newContainer.addLibrary(libraryModel);
        }
      }
      newContainer.applyChanges();
      setMapping(file,newContainer.isEmpty() ? null : newContainer);
      if (!newContainer.isEmpty()) {
        if (file == null) {
          myProjectLibs=newContainer;
        }
 else {
          myCompoundLibMap.put(file,newContainer);
        }
      }
    }
  }
}
