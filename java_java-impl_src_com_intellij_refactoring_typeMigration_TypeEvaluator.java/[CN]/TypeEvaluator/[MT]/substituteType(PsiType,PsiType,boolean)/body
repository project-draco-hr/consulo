{
  if (originalType instanceof PsiClassType && migrationTtype instanceof PsiClassType) {
    final PsiClass originalClass=((PsiClassType)originalType).resolve();
    if (isContraVariantPosition && ((PsiClassType)originalType).rawType().isAssignableFrom(((PsiClassType)migrationTtype).rawType())) {
      final PsiClass psiClass=((PsiClassType)migrationTtype).resolve();
      final PsiSubstitutor substitutor=TypeConversionUtil.getClassSubstitutor(originalClass,psiClass,PsiSubstitutor.EMPTY);
      if (substitutor != null) {
        final PsiType psiType=substituteType(migrationTtype,originalType,false,psiClass,JavaPsiFacade.getElementFactory(psiClass.getProject()).createType(originalClass,substitutor));
        if (psiType != null) {
          return psiType;
        }
      }
    }
 else     if (!isContraVariantPosition && ((PsiClassType)migrationTtype).rawType().isAssignableFrom(((PsiClassType)originalType).rawType())) {
      final PsiType psiType=substituteType(migrationTtype,originalType,false,originalClass,JavaPsiFacade.getElementFactory(originalClass.getProject()).createType(originalClass,PsiSubstitutor.EMPTY));
      if (psiType != null) {
        return psiType;
      }
    }
  }
  return migrationTtype;
}
