{
  final ModuleInsight moduleInsight=new ModuleInsight(new DelegatingProgressIndicator());
  final ProjectFromSourcesBuilder projectBuilder=new ProjectFromSourcesBuilder(moduleInsight);
  myProjectBuilder=projectBuilder;
  final ProjectWizardStepFactory factory=ProjectWizardStepFactory.getInstance();
  final StepSequence sequence=new StepSequence();
  final Icon icon=context.isCreatingNewProject() ? NEW_PROJECT_ICON : ICON;
  sequence.addCommonStep(new ProjectNameStep(context,sequence,this));
  sequence.addCommonStep(factory.createSourcePathsStep(context,projectBuilder,icon,"reference.dialogs.new.project.fromCode.source"));
  sequence.addCommonStep(new LibrariesDetectionStep(projectBuilder,moduleInsight,icon,"reference.dialogs.new.project.fromCode.page1"));
  sequence.addCommonStep(new ModulesDetectionStep(projectBuilder,moduleInsight,icon,"reference.dialogs.new.project.fromCode.page2"));
  sequence.addCommonStep(factory.createProjectJdkStep(context));
  if (FacetDetectionStep.isEnabled(StdModuleTypes.JAVA)) {
    FacetDetectionStep facetDetectionStep=new FacetDetectionStep(icon,StdModuleTypes.JAVA){
      protected List<ModuleDescriptor> getModuleDescriptors(){
        return projectBuilder.getModules();
      }
    }
;
    projectBuilder.addConfigurationUpdater(facetDetectionStep);
    sequence.addCommonStep(facetDetectionStep);
  }
  return sequence;
}
