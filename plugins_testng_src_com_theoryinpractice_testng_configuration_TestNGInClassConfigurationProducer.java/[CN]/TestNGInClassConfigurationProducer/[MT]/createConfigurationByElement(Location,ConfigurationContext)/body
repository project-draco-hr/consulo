{
  PsiElement element=location.getPsiElement();
  PsiClass psiClass;
  if (element instanceof PsiClass) {
    psiClass=(PsiClass)element;
  }
 else {
    psiClass=PsiTreeUtil.getParentOfType(element,PsiClass.class);
  }
  if (psiClass == null)   return null;
  if (!ExecutionUtil.isRunnableClass(psiClass))   return null;
  if (!TestNGUtil.hasTest(psiClass))   return null;
  myPsiElement=psiClass;
  final Project project=location.getProject();
  RunnerAndConfigurationSettings settings=cloneTemplateConfiguration(project,context);
  final TestNGConfiguration configuration=(TestNGConfiguration)settings.getConfiguration();
  final Module[] modules=configuration.getModules();
  final Module originalModule=modules == null || modules.length == 0 ? null : modules[0];
  configuration.setClassConfiguration(psiClass);
  PsiMethod method=PsiTreeUtil.getParentOfType(element,PsiMethod.class,false);
  if (method != null && TestNGUtil.hasTest(method)) {
    configuration.setMethodConfiguration(PsiLocation.fromPsiElement(project,method));
    myPsiElement=method;
  }
  configuration.restoreOriginalModule(originalModule);
  settings.setName(configuration.getName());
  return (RunnerAndConfigurationSettingsImpl)settings;
}
