{
  final AtomicBoolean start=new AtomicBoolean(true);
  LOG.assertTrue(!ApplicationManager.getApplication().isDispatchThread());
  final Semaphore semaphore=new Semaphore();
  semaphore.down();
  Runnable runnable1=new Runnable(){
    public void run(){
      try {
        runnable.run();
      }
  finally {
        semaphore.up();
      }
    }
    @NonNls public String toString(){
      return "PeriodicalTaskCloser's invoke and wait [" + runnable.toString() + "]";
    }
  }
;
  ApplicationManager.getApplication().invokeLater(runnable1,modalityState,new Condition<Object>(){
    public boolean value(    Object o){
      return !start.get();
    }
  }
);
  while (true) {
    if (semaphore.waitFor(1000)) {
      return;
    }
    if (project != null && !project.isOpen()) {
      start.set(false);
    }
  }
}
