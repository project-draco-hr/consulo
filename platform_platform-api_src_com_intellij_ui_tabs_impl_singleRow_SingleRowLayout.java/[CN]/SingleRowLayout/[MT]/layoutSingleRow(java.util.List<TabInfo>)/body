{
  SingleRowPassInfo data=new SingleRowPassInfo(this,visibleInfos);
  final TabInfo selected=myTabs.getSelectedInfo();
  final JBTabsImpl.Toolbar selectedToolbar=myTabs.myInfo2Toolbar.get(selected);
  final boolean layoutLabels=checkLayoutLabels(data);
  if (!layoutLabels) {
    data=myLastSingRowLayout;
  }
  data.insets=myTabs.getLayoutInsets();
  data.hToolbar=selectedToolbar != null && myTabs.myHorizontalSide && !selectedToolbar.isEmpty() ? selectedToolbar : null;
  data.vToolbar=selectedToolbar != null && !myTabs.myHorizontalSide && !selectedToolbar.isEmpty() ? selectedToolbar : null;
  myTabs.resetLayout(layoutLabels || myTabs.isHideTabs());
  if (layoutLabels && !myTabs.isHideTabs()) {
    data.position=getStrategy().getStartPosition(data);
    recomputeToLayout(data);
    layoutLabelsAndGhosts(data);
    if (data.toDrop.size() > 0) {
      data.moreRect=getStrategy().getMoreRect(data);
    }
  }
  if (selected != null) {
    data.comp=selected.getComponent();
    getStrategy().layoutComp(data);
  }
  if (data.toLayout.size() > 0 && data.myVisibleInfos.size() > 0) {
    final int left=data.myVisibleInfos.indexOf(data.toLayout.get(0));
    final int right=data.myVisibleInfos.indexOf(data.toLayout.get(data.toLayout.size() - 1));
    myMoreIcon.setPaintedIcons(left > 0,right < data.myVisibleInfos.size() - 1);
  }
 else {
    myMoreIcon.setPaintedIcons(false,false);
  }
  data.tabRectangle=new Rectangle();
  if (data.toLayout.size() > 0) {
    final TabLabel firstLabel=myTabs.myInfo2Label.get(data.toLayout.get(0));
    final TabLabel lastLabel=myTabs.myInfo2Label.get(data.toLayout.get(data.toLayout.size() - 1));
    if (firstLabel != null && lastLabel != null) {
      data.tabRectangle.x=firstLabel.getBounds().x;
      data.tabRectangle.y=firstLabel.getBounds().y;
      data.tabRectangle.width=(int)lastLabel.getBounds().getMaxX() - data.tabRectangle.x;
      data.tabRectangle.height=(int)lastLabel.getBounds().getMaxY() - data.tabRectangle.y;
    }
  }
  myLastSingRowLayout=data;
  return data;
}
