{
  final int fixedPosition=getStrategy().getFixedPosition(data);
  boolean reachedBounds=false;
  if (data.firstGhostVisible || myTabs.isGhostsAlwaysVisible()) {
    data.firstGhost=getStrategy().getLayoutRec(data.position,fixedPosition,myTabs.getGhostTabLength(),getStrategy().getFixedFitLength(data));
    myTabs.layout(myLeftGhost,data.firstGhost);
    data.position+=getStrategy().getLengthIncrement(data.firstGhost.getSize()) + myTabs.getInterTabSpaceLength();
  }
  int deltaToFit=0;
  if (data.firstGhostVisible || data.lastGhostVisible) {
    if (data.requiredLength < data.toFitLength && getStrategy().canBeStretched()) {
      deltaToFit=(int)Math.floor((data.toFitLength - data.requiredLength) / (double)data.toLayout.size());
    }
  }
  int totalLength=0;
  int positionStart=data.position;
  for (  TabInfo eachInfo : data.toLayout) {
    final TabLabel label=myTabs.myInfo2Label.get(eachInfo);
    final Dimension eachSize=label.getPreferredSize();
    boolean isLast=data.toLayout.indexOf(eachInfo) == data.toLayout.size() - 1;
    if (!isLast || deltaToFit == 0) {
      Rectangle rec=getStrategy().getLayoutRec(data.position,fixedPosition,getStrategy().getLengthIncrement(eachSize) + deltaToFit,getStrategy().getFixedFitLength(data));
      myTabs.layout(label,rec);
    }
 else {
      int length=data.toFitLength - totalLength;
      final Rectangle rec=getStrategy().getLayoutRec(data.position,fixedPosition,length,getStrategy().getFixedFitLength(data));
      myTabs.layout(label,rec);
    }
    label.setAlignmentToCenter((deltaToFit > 0 || myTabs.isEditorTabs()) && getStrategy().isToCenterTextWhenStretched());
    data.position=getStrategy().getMaxPosition(label.getBounds());
    data.position+=myTabs.getInterTabSpaceLength();
    totalLength=getStrategy().getMaxPosition(label.getBounds()) - positionStart + myTabs.getInterTabSpaceLength();
  }
  for (  TabInfo eachInfo : data.toDrop) {
    myTabs.resetLayout(myTabs.myInfo2Label.get(eachInfo));
  }
  if (data.lastGhostVisible || myTabs.isGhostsAlwaysVisible()) {
    data.lastGhost=getStrategy().getLayoutRec(data.position,fixedPosition,myTabs.getGhostTabLength(),getStrategy().getFixedFitLength(data));
    myTabs.layout(myRightGhost,data.lastGhost);
  }
}
