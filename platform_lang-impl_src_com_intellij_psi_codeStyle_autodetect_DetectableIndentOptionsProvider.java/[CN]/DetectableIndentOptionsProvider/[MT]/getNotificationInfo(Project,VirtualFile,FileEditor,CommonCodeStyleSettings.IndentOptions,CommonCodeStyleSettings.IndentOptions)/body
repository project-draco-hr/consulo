{
  final NotificationLabels labels=getNotificationLabels(userOptions,detectedOptions);
  final Editor editor=fileEditor instanceof TextEditor ? ((TextEditor)fileEditor).getEditor() : null;
  if (labels == null || editor == null)   return null;
  ActionLabelData okAction=new ActionLabelData(ApplicationBundle.message("code.style.indents.detector.accept"),new Runnable(){
    @Override public void run(){
      setAccepted(file);
    }
  }
);
  ActionLabelData disableForSingleFile=new ActionLabelData(labels.revertToOldSettingsLabel,new Runnable(){
    @Override public void run(){
      disableForFile(file);
      if (editor instanceof EditorEx) {
        ((EditorEx)editor).reinitSettings();
      }
    }
  }
);
  ActionLabelData showSettings=new ActionLabelData(ApplicationBundle.message("code.style.indents.detector.show.settings"),new Runnable(){
    @Override public void run(){
      ShowSettingsUtilImpl.showSettingsDialog(project,"preferences.sourceCode","detect indent");
    }
  }
);
  final List<ActionLabelData> actions=ContainerUtil.newArrayList(okAction,disableForSingleFile,showSettings);
  return new EditorNotificationInfo(){
    @NotNull @Override public List<ActionLabelData> getLabelAndActions(){
      return actions;
    }
    @NotNull @Override public String getTitle(){
      return labels.title;
    }
  }
;
}
