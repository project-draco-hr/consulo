{
  final GroovyCodeStyleSettings settings=CodeStyleSettingsManager.getInstance(getProject()).getCurrentSettings().getCustomSettings(GroovyCodeStyleSettings.class);
  final PackageEntryTable layoutTable=settings.IMPORT_LAYOUT_TABLE;
  final PackageEntry[] entries=layoutTable.getEntries();
  PsiElement next=result.getNextSibling();
  if (isWhiteSpace(next))   next=next.getNextSibling();
  if (hasElementType(next,GroovyTokenTypes.mSEMI))   next=next.getNextSibling();
  while (isWhiteSpace(next)) {
    next=next.getNextSibling();
  }
  if (next instanceof GrImportStatement) {
    final int idx_after=getPackageEntryIdx(entries,(GrImportStatement)next);
    final int idx=getPackageEntryIdx(entries,result);
    final int spaceCount=getMaxSpaceCount(entries,idx,idx_after);
    final FileASTNode node=getNode();
    while (isWhiteSpace(next.getPrevSibling())) {
      node.removeChild(next.getPrevSibling().getNode());
    }
    node.addLeaf(GroovyTokenTypes.mNLS,StringUtil.repeat("\n",spaceCount + 1),next.getNode());
  }
}
