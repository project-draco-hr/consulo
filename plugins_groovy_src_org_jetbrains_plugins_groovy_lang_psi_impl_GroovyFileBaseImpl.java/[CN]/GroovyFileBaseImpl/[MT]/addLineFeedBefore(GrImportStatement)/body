{
  final CodeStyleSettings settings=CodeStyleSettingsManager.getInstance(getProject()).getCurrentSettings();
  final PackageEntryTable layoutTable=settings.IMPORT_LAYOUT_TABLE;
  final PackageEntry[] entries=layoutTable.getEntries();
  PsiElement prev=result.getPrevSibling();
  while (isWhiteSpace(prev)) {
    prev=prev.getPrevSibling();
  }
  if (hasElementType(prev,GroovyTokenTypes.mSEMI))   prev=prev.getPrevSibling();
  if (isWhiteSpace(prev))   prev=prev.getPrevSibling();
  if (prev instanceof GrImportStatement) {
    final int idx_before=getPackageEntryIdx(entries,(GrImportStatement)prev);
    final int idx=getPackageEntryIdx(entries,result);
    final int spaceCount=getMaxSpaceCount(entries,idx_before,idx);
    if (isWhiteSpace(prev.getNextSibling()) && hasElementType(prev.getNextSibling().getNextSibling(),GroovyTokenTypes.mSEMI))     prev=prev.getNextSibling().getNextSibling();
    final FileASTNode node=getNode();
    while (isWhiteSpace(prev.getNextSibling())) {
      node.removeChild(prev.getNextSibling().getNode());
    }
    node.addLeaf(GroovyTokenTypes.mNLS,StringUtil.repeat("\n",spaceCount + 1),result.getNode());
  }
}
