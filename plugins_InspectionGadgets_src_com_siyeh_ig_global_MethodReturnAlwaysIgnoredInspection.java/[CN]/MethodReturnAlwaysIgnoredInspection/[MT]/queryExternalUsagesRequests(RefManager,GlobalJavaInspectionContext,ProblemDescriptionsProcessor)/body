{
  manager.iterate(new RefJavaVisitor(){
    @Override public void visitMethod(    final RefMethod refMethod){
      if (methodReturnUsed(refMethod)) {
        return;
      }
      final GlobalJavaInspectionContext.UsagesProcessor usagesProcessor=new GlobalJavaInspectionContext.UsagesProcessor(){
        public boolean process(        PsiReference psiReference){
          final PsiElement psiReferenceExpression=psiReference.getElement();
          final PsiElement parent=psiReferenceExpression.getParent();
          if (parent instanceof PsiMethodCallExpression && !isIgnoredMethodCall((PsiCallExpression)parent)) {
            descriptionsProcessor.ignoreElement(refMethod);
          }
          return false;
        }
      }
;
      context.enqueueMethodUsagesProcessor(refMethod,usagesProcessor);
    }
  }
);
  return false;
}
