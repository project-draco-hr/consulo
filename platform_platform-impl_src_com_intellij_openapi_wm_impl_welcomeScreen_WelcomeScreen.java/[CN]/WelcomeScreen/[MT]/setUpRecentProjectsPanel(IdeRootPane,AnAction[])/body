{
  myRecentProjectsPanel.setBackground(MAIN_PANEL_BACKGROUND);
  JLabel caption=new JLabel("Recent Projects");
  caption.setFont(GROUP_CAPTION_FONT);
  caption.setForeground(CAPTION_COLOR);
  myRecentProjectsPanel.add(caption,new GridBagConstraints(0,0,2,1,1,0,NORTHWEST,HORIZONTAL,new Insets(0,0,20,0),0,0));
  JLabel iconLabel=new JLabel();
  iconLabel.setIcon(IconLoader.getIcon("/general/reopenRecentProject.png"));
  myRecentProjectsPanel.add(iconLabel,new GridBagConstraints(0,1,1,5,0,0,NORTHWEST,NONE,new Insets(5,0,15,20),0,0));
  int row=1;
  for (  final AnAction action : recentProjectsActions) {
    final SimpleColoredComponent actionLabel=new SimpleColoredComponent();
    actionLabel.append(String.valueOf(row),CAPTION_UNDERLINE_ATTRIBUTES);
    actionLabel.append(". ",new SimpleTextAttributes(0,CAPTION_COLOR));
    actionLabel.append(action.getTemplatePresentation().getText(),CAPTION_BOLD_UNDERLINE_ATTRIBUTES);
    actionLabel.setIconOnTheRight(true);
    if (action instanceof ReopenProjectAction && ((ReopenProjectAction)action).needShowPath()) {
      String path=((ReopenProjectAction)action).getProjectPath();
      File pathFile=new File(path);
      if (pathFile.isDirectory() && pathFile.getName().equals(((ReopenProjectAction)action).getProjectName())) {
        path=pathFile.getParent();
      }
      path=FileUtil.getLocationRelativeToUserHome(path);
      actionLabel.append("   " + path,new SimpleTextAttributes(SimpleTextAttributes.STYLE_SMALLER,Color.GRAY));
    }
    actionLabel.setFont(new Font(CAPTION_FONT_NAME,Font.PLAIN,12));
    actionLabel.setForeground(CAPTION_COLOR);
    actionLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    actionLabel.addMouseListener(new MouseAdapter(){
      @Override public void mouseClicked(      MouseEvent e){
        if (e.getButton() == MouseEvent.BUTTON1) {
          DataContext dataContext=DataManager.getInstance().getDataContext(myWelcomePanel);
          int fragment=actionLabel.findFragmentAt(e.getX());
          if (fragment == SimpleColoredComponent.FRAGMENT_ICON) {
            final int rc=Messages.showOkCancelDialog(PlatformDataKeys.PROJECT.getData(dataContext),"Remove '" + action.getTemplatePresentation().getText() + "' from recent projects list?","Remove Recent Project",Messages.getQuestionIcon());
            if (rc == 0) {
              final RecentProjectsManagerBase manager=RecentProjectsManagerBase.getInstance();
              manager.removePath(((ReopenProjectAction)action).getProjectPath());
              final AnAction[] actions=manager.getRecentProjectsActions(false);
              if (actions.length == 0) {
                hideRecentProjectsPanel();
              }
 else {
                for (int i=myRecentProjectsPanel.getComponentCount() - 1; i >= 0; i--) {
                  myRecentProjectsPanel.remove(i);
                }
                setUpRecentProjectsPanel(rootPane,actions);
                myRecentProjectsPanel.revalidate();
              }
            }
          }
 else           if (fragment != -1) {
            AnActionEvent event=new AnActionEvent(e,dataContext,"",action.getTemplatePresentation(),ActionManager.getInstance(),0);
            action.actionPerformed(event);
          }
        }
      }
      @Override public void mouseEntered(      MouseEvent e){
        actionLabel.setIcon(IconLoader.getIcon("/actions/closeNew.png"));
      }
      @Override public void mouseExited(      MouseEvent e){
        actionLabel.setIcon(null);
      }
    }
);
    action.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_0 + row,InputEvent.ALT_DOWN_MASK)),rootPane,this);
    myRecentProjectsPanel.add(actionLabel,new GridBagConstraints(1,row++,1,1,1,0,NORTHWEST,HORIZONTAL,new Insets(5,0,5,0),0,0));
    if (row == 9)     break;
  }
}
