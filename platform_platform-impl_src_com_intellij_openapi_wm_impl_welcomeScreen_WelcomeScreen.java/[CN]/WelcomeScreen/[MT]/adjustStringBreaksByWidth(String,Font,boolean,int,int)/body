{
  string=string.trim();
  if (StringUtil.isEmpty(string)) {
    return "<html>" + UIBundle.message("welcome.script.text.not.specified.message") + "</html>";
  }
  string=string.replaceAll("<li>"," <>&gt; ");
  string=string.replaceAll("<br>"," <>");
  string=string.replaceAll("(<[^>]+?>)"," ");
  string=string.replaceAll("[\\s]{2,}"," ");
  Rectangle2D r=font.getStringBounds(string,new FontRenderContext(new AffineTransform(),isAntiAliased,false));
  if (r.getWidth() > maxWidth) {
    StringBuffer prefix=new StringBuffer();
    String suffix=string;
    int maxIdxPerLine=(int)(maxWidth / r.getWidth() * string.length());
    int lengthLeft=string.length();
    int rows=maxRows;
    if (rows <= 0) {
      rows=string.length() / maxIdxPerLine + 1;
    }
    while (lengthLeft > maxIdxPerLine && rows > 1) {
      int i;
      for (i=maxIdxPerLine; i > 0; i--) {
        if (suffix.charAt(i) == ' ') {
          prefix.append(suffix.substring(0,i)).append("<br>");
          suffix=suffix.substring(i + 1,suffix.length());
          lengthLeft=suffix.length();
          if (maxRows > 0) {
            rows--;
          }
 else {
            rows=lengthLeft / maxIdxPerLine + 1;
          }
          break;
        }
      }
      if (i == 0) {
        if (rows > 1 && maxRows <= 0) {
          prefix.append(suffix.substring(0,maxIdxPerLine)).append("<br>");
          suffix=suffix.substring(maxIdxPerLine,suffix.length());
          lengthLeft=suffix.length();
          rows--;
        }
 else {
          break;
        }
      }
    }
    if (suffix.length() > maxIdxPerLine) {
      suffix=suffix.substring(0,maxIdxPerLine - 3);
      for (int i=suffix.length() - 1; i > 0; i--) {
        if (suffix.charAt(i) == ' ') {
          if ("...".equals(suffix.substring(i - 3,i))) {
            suffix=suffix.substring(0,i - 1);
            break;
          }
 else           if (suffix.charAt(i - 1) == '>') {
            i--;
          }
 else           if (suffix.charAt(i - 1) == '.') {
            suffix=suffix.substring(0,i) + "..";
            break;
          }
 else {
            suffix=suffix.substring(0,i) + "...";
            break;
          }
        }
      }
    }
    string=prefix + suffix;
  }
  string=string.replaceAll(" <>","<br>");
  return HTML_PREFIX + string + HTML_SUFFIX;
}
