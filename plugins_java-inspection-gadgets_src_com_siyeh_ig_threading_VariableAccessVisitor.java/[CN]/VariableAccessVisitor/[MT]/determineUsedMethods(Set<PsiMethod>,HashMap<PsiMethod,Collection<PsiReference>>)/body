{
  final Set<PsiMethod> remainingMethods=new HashSet<PsiMethod>(privateMethods);
  boolean stabilized=false;
  while (!stabilized) {
    stabilized=true;
    final Set<PsiMethod> methodsDeterminedThisPass=new HashSet<PsiMethod>();
    for (    PsiMethod method : remainingMethods) {
      final Collection<PsiReference> references=referenceMap.get(method);
      for (      PsiReference reference : references) {
        if (isKnownToBeUsed(reference)) {
          usedMethods.add(method);
          methodsDeterminedThisPass.add(method);
          stabilized=false;
        }
      }
    }
    remainingMethods.removeAll(methodsDeterminedThisPass);
  }
  unusedMethods.addAll(remainingMethods);
}
