{
  final List<? extends ArtifactTemplate> templates=type.getNewArtifactTemplates(myPackagingEditorContext);
  final ArtifactTemplate emptyTemplate=new ArtifactTemplate(){
    @Override public String getPresentableName(){
      return "Empty";
    }
    @Override public CompositePackagingElement<?> createRootElement(    @NotNull String artifactName){
      return type.createRootElement(artifactName);
    }
  }
;
  if (templates.isEmpty()) {
    return new AddArtifactAction(type,emptyTemplate,type.getPresentableName(),type.getIcon());
  }
  final DefaultActionGroup group=new DefaultActionGroup(type.getPresentableName(),true);
  group.getTemplatePresentation().setIcon(type.getIcon());
  group.add(new AddArtifactAction(type,emptyTemplate,emptyTemplate.getPresentableName(),null));
  group.addSeparator();
  for (  ArtifactTemplate template : templates) {
    group.add(new AddArtifactAction(type,template,template.getPresentableName(),null));
  }
  return group;
}
