{
  LOG.debug("IDEA-wide proxy selector asked for " + uri.toString());
  String scheme=uri.getScheme();
  if (!("http".equals(scheme) || "https".equals(scheme))) {
    LOG.debug("No proxy: not http/https scheme: " + scheme);
    return CommonProxy.NO_PROXY_LIST;
  }
  if (myHttpConfigurable.USE_HTTP_PROXY) {
    if (isProxyException(uri)) {
      LOG.debug("No proxy: URI '",uri,"' matches proxy exceptions [",myHttpConfigurable.PROXY_EXCEPTIONS,"]");
      return CommonProxy.NO_PROXY_LIST;
    }
    if (myHttpConfigurable.PROXY_PORT < 0 || myHttpConfigurable.PROXY_PORT > 65535) {
      LOG.debug("No proxy: invalid port: " + myHttpConfigurable.PROXY_PORT);
      return CommonProxy.NO_PROXY_LIST;
    }
    Proxy.Type type=myHttpConfigurable.PROXY_TYPE_IS_SOCKS ? Proxy.Type.SOCKS : Proxy.Type.HTTP;
    Proxy proxy=new Proxy(type,new InetSocketAddress(myHttpConfigurable.PROXY_HOST,myHttpConfigurable.PROXY_PORT));
    LOG.debug("Defined proxy: ",proxy);
    myHttpConfigurable.LAST_ERROR=null;
    return Collections.singletonList(proxy);
  }
  if (myHttpConfigurable.USE_PROXY_PAC) {
    ProxySelector pacProxySelector=myPacProxySelector.get();
    if (myHttpConfigurable.USE_PAC_URL && !StringUtil.isEmpty(myHttpConfigurable.PAC_URL)) {
      myPacProxySelector.set(new PacProxySelector(new UrlPacScriptSource(myHttpConfigurable.PAC_URL)));
    }
 else     if (pacProxySelector == null) {
      ProxySearch proxySearch=ProxySearch.getDefaultProxySearch();
      proxySearch.setPacCacheSettings(32,10 * 60 * 1000);
      pacProxySelector=proxySearch.getProxySelector();
      myPacProxySelector.lazySet(pacProxySelector);
    }
    if (pacProxySelector != null) {
      List<Proxy> select=pacProxySelector.select(uri);
      LOG.debug("Autodetected proxies: ",select);
      return select;
    }
 else {
      LOG.debug("No proxies detected");
    }
  }
  return CommonProxy.NO_PROXY_LIST;
}
