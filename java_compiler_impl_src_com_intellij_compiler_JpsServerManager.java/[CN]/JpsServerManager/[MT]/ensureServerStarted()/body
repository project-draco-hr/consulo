{
  if (myProcessHandler != null) {
    return true;
  }
  try {
    final int port=NetUtils.findAvailableSocketPort();
    final Process process=launchServer(port);
    final OSProcessHandler processHandler=new OSProcessHandler(process,null);
    processHandler.addProcessListener(new ProcessAdapter(){
      public void startNotified(      ProcessEvent event){
        final boolean connected=createClient(port);
        if (!connected) {
          shutdownServer(myServerClient,processHandler);
        }
 else {
          myProcessHandler=processHandler;
        }
      }
      public void processTerminated(      ProcessEvent event){
        myProcessHandler=null;
        myServerClient=null;
      }
      public void processWillTerminate(      ProcessEvent event,      boolean willBeDestroyed){
        final Client client=myServerClient;
        if (client != null) {
          client.disconnect();
        }
      }
      public void onTextAvailable(      ProcessEvent event,      Key outputType){
        System.out.println(event.getText());
        LOG.info(event.getText());
      }
    }
);
    processHandler.startNotify();
    return true;
  }
 catch (  Throwable e) {
    LOG.error(e);
  }
  return false;
}
