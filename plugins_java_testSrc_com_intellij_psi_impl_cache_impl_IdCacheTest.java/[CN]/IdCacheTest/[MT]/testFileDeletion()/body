{
  final CacheManager cache=CacheManager.SERVICE.getInstance(myProject);
  final TodoCacheManager todocache=TodoCacheManager.SERVICE.getInstance(myProject);
  checkCache(cache,todocache);
  VirtualFile child=myRootDir.findChild("1.java");
  child.delete(null);
  final GlobalSearchScope scope=GlobalSearchScope.projectScope(myProject);
  checkResult(new String[]{},convert(cache.getFilesWithWord("xxx",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{},convert(cache.getFilesWithWord("a",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"2.java"},convert(cache.getFilesWithWord("b",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"2.java","3.java"},convert(cache.getFilesWithWord("c",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"2.java","3.java"},convert(cache.getFilesWithWord("d",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"3.java"},convert(cache.getFilesWithWord("e",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"3.java"},convert(todocache.getFilesWithTodoItems()));
  assertEquals(0,todocache.getTodoCount(myRootDir.findChild("2.java"),TodoIndexPatternProvider.getInstance()));
  assertEquals(2,todocache.getTodoCount(myRootDir.findChild("3.java"),TodoIndexPatternProvider.getInstance()));
}
