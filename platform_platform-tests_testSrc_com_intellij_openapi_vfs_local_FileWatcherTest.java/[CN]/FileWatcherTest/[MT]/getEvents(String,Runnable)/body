{
  LOG.debug("** waiting for " + msg);
  myAccept=true;
  if (action != null) {
    action.run();
  }
  long timeout=myTimeout, start=System.currentTimeMillis();
  try {
synchronized (myWaiter) {
      myWaiter.wait(timeout);
    }
  }
 catch (  InterruptedException e) {
    LOG.warn(e);
  }
  LOG.debug("** waited for " + (System.currentTimeMillis() - start) + " of "+ timeout);
  myFileSystem.refresh(false);
  List<VFileEvent> result;
synchronized (myEvents) {
    result=ContainerUtil.newArrayList(myEvents);
    myEvents.clear();
  }
  if (!result.isEmpty()) {
    nextEvent:     for (Iterator<VFileEvent> iterator=result.iterator(); iterator.hasNext(); ) {
      VFileEvent event=iterator.next();
      VirtualFile file=event.getFile();
      if (file != null) {
        for (        String acceptedDirectory : myAcceptedDirectories) {
          if (FileUtil.isAncestor(acceptedDirectory,file.getPath(),false)) {
            continue nextEvent;
          }
        }
        LOG.debug("~~ not accepted: " + event);
        iterator.remove();
      }
    }
  }
  LOG.debug("** events: " + result.size());
  return result;
}
