{
  if (log.isDebugEnabled())   log.debug("checkMethods: clazz=" + clazz);
  if (clazz == null || clazz.getName() == null) {
    return;
  }
  if (!GenerateToStringContext.getConfig().isEnableMethods()) {
    return;
  }
  PsiAdapter psi=PsiAdapterFactory.getPsiAdapter();
  PsiMethod toStringMethod=psi.findMethodByName(clazz,"toString");
  if (toStringMethod == null) {
    log.debug("No toString() method");
    return;
  }
  PsiCodeBlock code=toStringMethod.getBody();
  if (code == null) {
    log.debug("No toString() code");
    return;
  }
  String body=code.getText();
  if (body.contains("getDeclaredFields()")) {
    log.debug("Using reflection");
    return;
  }
  PsiMethod[] methods=clazz.getMethods();
  if (methods.length == 0) {
    log.debug("Class does not have any methods");
    return;
  }
  methods=GenerateToStringUtils.filterAvailableMethods(psi,clazz,GenerateToStringContext.getConfig().getFilterPattern());
  if (methods.length == 0) {
    log.debug("No getter methods to be dumped as all methods was excluded or a field existed for the getter method (exclude method by XXX from Settings)");
    return;
  }
  for (  PsiMethod method : methods) {
    final String methodName=method.getName();
    if (log.isDebugEnabled())     log.debug("Evaluating if method " + methodName + " is in toString() method");
    String pattern="(?s).*\\W" + StringUtil.escapeToRegexp(methodName) + "[\\W&&[^=]].*";
    if (log.isDebugEnabled())     log.debug("Match pattern = " + pattern);
    if (!body.matches(pattern)) {
      if (log.isDebugEnabled())       log.debug("Getter method is not used in toString() method (out-of-sync): " + method);
      final PsiIdentifier identifier=method.getNameIdentifier();
      final PsiElement target=identifier == null ? method : identifier;
      holder.registerProblem(target,"Method '" + methodName + "' is not used in 'toString()' method",ProblemHighlightType.GENERIC_ERROR_OR_WARNING,fix);
    }
  }
}
