{
  if (log.isDebugEnabled())   log.debug("checkMethods: clazz=" + clazz + ", onTheFly="+ onTheFly);
  if (clazz == null || clazz.getName() == null) {
    return;
  }
  if (!GenerateToStringContext.getConfig().isEnableMethods()) {
    return;
  }
  PsiAdapter psi=PsiAdapterFactory.getPsiAdapter();
  PsiMethod toStringMethod=psi.findMethodByName(clazz,"toString");
  if (toStringMethod == null) {
    log.debug("No toString() method");
    return;
  }
  PsiCodeBlock code=toStringMethod.getBody();
  if (code == null) {
    log.debug("No toString() code");
    return;
  }
  String body=code.getText();
  if (body.indexOf("getDeclaredFields()") != -1) {
    log.debug("Using reflection");
    return;
  }
  PsiMethod[] methods=psi.getMethods(clazz);
  if (methods.length == 0) {
    log.debug("Class does not have any methods");
    return;
  }
  Project project=im.getProject();
  methods=GenerateToStringUtils.filterAvailableMethods(psi,clazz,GenerateToStringContext.getConfig().getFilterPattern());
  if (methods == null || methods.length == 0) {
    log.debug("No getter methods to be dumped as all methods was excluded or a field existed for the getter method (exclude method by XXX from Settings)");
    return;
  }
  for (  PsiMethod method : methods) {
    if (log.isDebugEnabled())     log.debug("Evaluating if method " + method.getName() + " is in toString() method");
    String pattern="(?s).*\\W" + method.getName() + "[\\W&&[^=]].*";
    if (log.isDebugEnabled())     log.debug("Match pattern = " + pattern);
    if (!body.matches(pattern)) {
      if (log.isDebugEnabled())       log.debug("Getter method is not used in toString() method (out-of-sync): " + method);
      ProblemDescriptor problem=im.createProblemDescriptor(method,"Method '" + method.getName() + "' is not used in toString() method",fix,ProblemHighlightType.LIKE_UNUSED_SYMBOL);
      problems.add(problem);
    }
  }
}
