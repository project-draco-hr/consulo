{
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  if (indicator != null) {
    indicator.pushState();
    indicator.setText(IdeBundle.message("progress.parsing.files"));
  }
  int totalFiles=syncSession.getFilesToUpdate().size();
  final FileContentQueue contentQueue=new FileContentQueue(){
    @Override protected void addLast(    VirtualFile file) throws InterruptedException {
      if (!syncSession.shouldIndex(file)) {
        return;
      }
      super.addLast(file);
    }
  }
;
  contentQueue.queue(syncSession.getFilesToUpdate(),indicator);
  int count=0;
  while (true) {
    final FileContent content=contentQueue.take();
    if (content == null)     break;
    final VirtualFile file=content.getVirtualFile();
    if (file == null)     break;
    if (indicator != null) {
      indicator.checkCanceled();
      indicator.setFraction((double)++count / totalFiles);
      indicator.setText2(file.getPresentableUrl());
    }
    syncSession.processFile(content);
  }
  syncSession.updatingDone();
  if (indicator != null) {
    indicator.popState();
  }
}
