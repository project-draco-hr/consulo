{
  super(new MavenGenerateProvider<MavenDomParent>(MavenDomBundle.message("generate.parent"),MavenDomParent.class){
    protected MavenDomParent doGenerate(    final MavenDomProjectModel mavenModel,    Editor editor){
      SelectMavenProjectDialog d=new SelectMavenProjectDialog(editor.getProject(),null);
      d.show();
      if (!d.isOK())       return null;
      final MavenProject parentProject=d.getResult();
      if (parentProject == null)       return null;
      return new WriteCommandAction<MavenDomParent>(editor.getProject(),getDescription()){
        protected void run(        Result result) throws Throwable {
          result.setResult(MavenDomUtil.updateMavenParent(mavenModel,parentProject));
        }
      }
.execute().getResultObject();
    }
    @Override protected boolean isAvailableForModel(    MavenDomProjectModel mavenModel){
      return !DomUtil.hasXml(mavenModel.getMavenParent());
    }
  }
,MavenIcons.MAVEN_PROJECT_ICON);
}
