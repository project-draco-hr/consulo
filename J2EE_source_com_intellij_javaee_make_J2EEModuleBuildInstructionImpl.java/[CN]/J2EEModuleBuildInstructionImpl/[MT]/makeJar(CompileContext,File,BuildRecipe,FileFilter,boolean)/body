{
  final BuildRecipe buildRecipe=getChildInstructions(context);
  final Manifest manifest=MakeUtil.getInstance().createManifest(buildRecipe);
  if (manifest == null) {
    context.addMessage(CompilerMessageCategory.WARNING,J2EEBundle.message("message.text.using.user.supplied.manifest"),null,-1,-1);
  }
  FileUtil.createParentDirs(jarFile);
  final BufferedOutputStream out=new BufferedOutputStream(new FileOutputStream(jarFile));
  final JarOutputStream jarOutputStream=manifest == null ? new JarOutputStream(out) : new JarOutputStream(out,manifest);
  final Set<String> tempWrittenRelativePaths=new THashSet<String>();
  try {
    buildRecipe.visitInstructionsWithExceptions(new BuildInstructionVisitor(){
      public boolean visitInstruction(      BuildInstruction instruction) throws IOException {
        if (processExternalDependencies || !instruction.isExternalDependencyInstruction()) {
          instruction.addFilesToJar(context,jarFile,jarOutputStream,dependencies,tempWrittenRelativePaths,fileFilter);
        }
        return true;
      }
    }
,false);
  }
 catch (  IOException e) {
    throw e;
  }
catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
  }
 finally {
    jarOutputStream.close();
  }
}
