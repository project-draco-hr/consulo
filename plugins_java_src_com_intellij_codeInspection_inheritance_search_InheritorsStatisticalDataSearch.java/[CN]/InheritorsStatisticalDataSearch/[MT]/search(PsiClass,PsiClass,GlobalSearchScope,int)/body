{
  final String superClassName=superClass.getName();
  final String aClassName=aClass.getName();
  final Set<String> disabledNames=new HashSet<String>();
  disabledNames.add(aClassName);
  disabledNames.add(superClassName);
  final Set<InheritorsCountData> collector=new TreeSet<InheritorsCountData>();
  final Pair<Integer,Integer> collectingResult=collectInheritorsInfo(superClass,collector,disabledNames);
  final int allAnonymousInheritors=collectingResult.getSecond();
  final int allInheritors=collectingResult.getFirst() + allAnonymousInheritors - 1;
  final List<InheritorsStatisticsSearchResult> result=new ArrayList<InheritorsStatisticsSearchResult>();
  Integer firstPercent=null;
  for (  final InheritorsCountData data : collector) {
    final int inheritorsCount=data.getInheritorsCount();
    if (inheritorsCount < allAnonymousInheritors) {
      break;
    }
    final int percent=(inheritorsCount * 100) / allInheritors;
    if (percent < 1) {
      break;
    }
    if (firstPercent == null) {
      firstPercent=percent;
    }
 else     if (percent * minPercentRatio < firstPercent) {
      break;
    }
    final PsiClass psiClass=data.getPsiClass();
    final VirtualFile file=psiClass.getContainingFile().getVirtualFile();
    if (file != null && scope.contains(file)) {
      result.add(new InheritorsStatisticsSearchResult(psiClass,percent));
    }
  }
  return result;
}
