{
  if (!(element instanceof PsiJavaToken)) {
    return false;
  }
  final PsiJavaToken token=(PsiJavaToken)element;
  final PsiElement parent=token.getParent();
  if (!(parent instanceof PsiIfStatement)) {
    return false;
  }
  final PsiIfStatement ifStatement=(PsiIfStatement)parent;
  final PsiElement nextStatement=PsiTreeUtil.skipSiblingsForward(ifStatement,PsiWhiteSpace.class);
  if (!(nextStatement instanceof PsiIfStatement)) {
    return false;
  }
  final PsiIfStatement nextIfStatement=(PsiIfStatement)nextStatement;
  if (ErrorUtil.containsError(ifStatement)) {
    return false;
  }
  if (ErrorUtil.containsError(nextIfStatement)) {
    return false;
  }
  if (!ifStatementsCanBeMerged(ifStatement,nextIfStatement)) {
    return false;
  }
  final PsiExpression condition=ifStatement.getCondition();
  final Set<PsiVariable> variables=VariableAccessUtils.collectUsedVariables(condition);
  final PsiStatement thenBranch=ifStatement.getThenBranch();
  if (VariableAccessUtils.isAnyVariableAssigned(variables,thenBranch)) {
    return false;
  }
  final PsiStatement elseBranch=ifStatement.getElseBranch();
  return !VariableAccessUtils.isAnyVariableAssigned(variables,elseBranch);
}
