{
  PsiBuilder.Marker result=parseExpression(builder,type);
  if (result == null)   return null;
  int operandCount=1;
  IElementType tokenType=getGtTokenType(builder);
  IElementType currentExprTokenType=tokenType;
  while (true) {
    if (tokenType == null || !ops.contains(tokenType))     break;
    advanceGtToken(builder,tokenType);
    final PsiBuilder.Marker right=parseExpression(builder,type);
    operandCount++;
    tokenType=getGtTokenType(builder);
    if (tokenType == null || !ops.contains(tokenType) || tokenType != currentExprTokenType || right == null) {
      result=result.precede();
      if (right == null) {
        error(builder,JavaErrorMessages.message("expected.expression"));
      }
      result.done(operandCount > 2 ? JavaElementType.POLYADIC_EXPRESSION : JavaElementType.BINARY_EXPRESSION);
      if (right == null)       break;
      currentExprTokenType=tokenType;
      operandCount=1;
    }
  }
  return result;
}
