{
  PsiBuilder.Marker left=parseExpression(builder,type);
  if (left == null)   return null;
  while (true) {
    final IElementType tokenType=getGtTokenType(builder);
    if (tokenType == null || !ops.contains(tokenType))     break;
    final PsiBuilder.Marker binary=left.precede();
    advanceGtToken(builder,tokenType);
    final PsiBuilder.Marker right=parseExpression(builder,type);
    if (right == null) {
      error(builder,JavaErrorMessages.message("expected.expression"));
      binary.done(JavaElementType.BINARY_EXPRESSION);
      return binary;
    }
    binary.done(JavaElementType.BINARY_EXPRESSION);
    left=binary;
  }
  return left;
}
