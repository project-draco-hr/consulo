{
  myRequestsProcessor.submit(new Runnable(){
    @Override public void run(){
synchronized (myProjectDataMap) {
        if (IS_UNIT_TEST_MODE) {
          if (notifyDeletion) {
            LOG.info("Registering deleted paths: " + paths);
          }
 else {
            LOG.info("Registering changed paths: " + paths);
          }
        }
        for (        Map.Entry<String,ProjectData> entry : myProjectDataMap.entrySet()) {
          final ProjectData data=entry.getValue();
          if (notifyDeletion) {
            data.addDeleted(paths);
          }
 else {
            data.addChanged(paths);
          }
          final RequestFuture future=myBuildsInProgress.get(entry.getKey());
          if (future != null && !future.isCancelled() && !future.isDone()) {
            final UUID sessionId=future.getRequestID();
            final Channel channel=myMessageDispatcher.getConnectedChannel(sessionId);
            if (channel != null) {
              final CmdlineRemoteProto.Message.ControllerMessage message=CmdlineRemoteProto.Message.ControllerMessage.newBuilder().setType(CmdlineRemoteProto.Message.ControllerMessage.Type.FS_EVENT).setFsEvent(data.createNextEvent()).build();
              Channels.write(channel,CmdlineProtoUtil.toMessage(sessionId,message));
            }
          }
        }
      }
    }
  }
);
}
