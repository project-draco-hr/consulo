{
  myProjectManager=projectManager;
  final String systemPath=PathManager.getSystemPath();
  File system=new File(systemPath);
  try {
    system=system.getCanonicalFile();
  }
 catch (  IOException e) {
    LOG.info(e);
  }
  mySystemDirectory=system;
  projectManager.addProjectManagerListener(new ProjectWatcher());
  final MessageBusConnection conn=ApplicationManager.getApplication().getMessageBus().connect();
  conn.subscribe(VirtualFileManager.VFS_CHANGES,new BulkFileListener(){
    @Override public void before(    @NotNull List<? extends VFileEvent> events){
    }
    @Override public void after(    @NotNull List<? extends VFileEvent> events){
      if (shouldTriggerMake(events)) {
        scheduleAutoMake();
      }
    }
    private boolean shouldTriggerMake(    List<? extends VFileEvent> events){
      for (      VFileEvent event : events) {
        if (event.isFromRefresh() || event.getRequestor() instanceof SavingRequestor) {
          return true;
        }
      }
      return false;
    }
  }
);
  ShutDownTracker.getInstance().registerShutdownTask(new Runnable(){
    @Override public void run(){
      stopListening();
    }
  }
);
}
