{
  if (getSettings().CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT) {
    if (DumbService.getInstance().isDumb()) {
      if (Messages.showDialog(myProject,"Code analysis can't be performed while IntelliJ IDEA updates the indices in background.\n" + "You can commit the changes without running inspections, or you can wait until indices are built.","Code analysis is not possible right now",new String[]{"&Commit","&Wait"},1,null) != 0) {
        return ReturnResult.CANCEL;
      }
      return ReturnResult.COMMIT;
    }
    try {
      final List<CodeSmellInfo> codeSmells=CodeSmellDetector.getInstance(myProject).findCodeSmells(new ArrayList<VirtualFile>(myCheckinPanel.getVirtualFiles()));
      if (!codeSmells.isEmpty()) {
        return processFoundCodeSmells(codeSmells,executor);
      }
 else {
        return ReturnResult.COMMIT;
      }
    }
 catch (    ProcessCanceledException e) {
      return ReturnResult.CANCEL;
    }
  }
 else {
    return ReturnResult.COMMIT;
  }
}
