{
  final boolean needToBeStatic=RefactoringUtil.isInStaticContext(match.getMatchStart(),myExtractedMethod.getContainingClass());
  final String changedSignature=MatchUtil.getChangedSignature(match,myExtractedMethod,needToBeStatic,VisibilityUtil.getVisibilityStringToDisplay(myExtractedMethod));
  if (changedSignature != null) {
    return RefactoringBundle.message("replace.this.code.fragment.and.change.signature",changedSignature);
  }
  if (needToBeStatic && !myExtractedMethod.hasModifierProperty(PsiModifier.STATIC)) {
    return RefactoringBundle.message("replace.this.code.fragment.and.make.method.static");
  }
  return null;
}
