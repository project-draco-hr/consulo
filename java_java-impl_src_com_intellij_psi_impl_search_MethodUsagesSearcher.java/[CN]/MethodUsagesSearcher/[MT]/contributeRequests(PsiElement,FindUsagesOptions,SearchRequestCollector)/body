{
  if (target instanceof PsiMethod) {
    final boolean strictSignatureSearch=!options.isIncludeOverloadUsages;
    final PsiMethod method=(PsiMethod)target;
    contributeSearchTargets(method,options,collector,strictSignatureSearch);
    collector.searchCustom(new Processor<Processor<PsiReference>>(){
      public boolean process(      Processor<PsiReference> processor){
        return MethodReferencesSearch.search(new MySearchParameters(method,options,strictSignatureSearch)).forEach(processor);
      }
    }
);
  }
}
