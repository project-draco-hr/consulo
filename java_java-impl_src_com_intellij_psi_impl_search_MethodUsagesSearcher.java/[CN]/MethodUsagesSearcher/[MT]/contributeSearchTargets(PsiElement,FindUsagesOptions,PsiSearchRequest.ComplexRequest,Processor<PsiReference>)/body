{
  if (target instanceof PsiMethod) {
    final boolean strictSignatureSearch=!options.isIncludeOverloadUsages;
    final PsiMethod method=(PsiMethod)target;
    contributeSearchTargets(method,options,collector,processor,strictSignatureSearch,false);
    collector.addRequest(PsiSearchRequest.custom(new Computable<Boolean>(){
      public Boolean compute(){
        ourProcessing.set(true);
        try {
          return MethodReferencesSearch.search(method,options.searchScope,strictSignatureSearch).forEach(processor);
        }
  finally {
          ourProcessing.set(null);
        }
      }
    }
));
  }
}
