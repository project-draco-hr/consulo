{
  final Waiter waiter=new Waiter(){
    Boolean key=Boolean.FALSE;
    final Object LOCK=new Object();
    public void sayYes(){
      key=Boolean.TRUE;
synchronized (LOCK) {
        LOCK.notify();
      }
    }
    public boolean runMe(){
      try {
synchronized (LOCK) {
          LOCK.wait(600);
        }
      }
 catch (      InterruptedException e) {
        return false;
      }
      return key.booleanValue();
    }
  }
;
  final boolean[] fail=new boolean[1];
  final Exception[] ex=new Exception[1];
  new Thread(new Runnable(){
    public void run(){
      Reader stream=null;
      try {
        stream=getReaderByUrl(url,ProgressManager.getInstance().getProgressIndicator());
      }
 catch (      IOException e) {
        ex[0]=e;
      }
      if (stream == null) {
        fail[0]=true;
        return;
      }
      try {
        BufferedReader reader=null;
        try {
          reader=new BufferedReader(stream);
          int lookUp=6;
          while (lookUp > 0) {
            if (reader.readLine().indexOf(DOC_START_MARKER) != -1) {
              waiter.sayYes();
            }
            lookUp--;
          }
        }
  finally {
          if (reader != null) {
            reader.close();
          }
        }
      }
 catch (      final Exception e) {
        ex[0]=e;
      }
    }
  }
).start();
  if (ex[0] != null) {
    throw ex[0];
  }
  return !fail[0] && waiter.runMe();
}
