{
  myRoots=new ArrayList<VirtualFile>(roots);
  Collections.sort(myRoots,new Comparator<VirtualFile>(){
    @Override public int compare(    VirtualFile o1,    VirtualFile o2){
      return o1.getName().compareTo(o2.getName());
    }
  }
);
  myRoots2Colors=ContainerUtil.newHashMap();
  int i=0;
  for (  VirtualFile root : myRoots) {
    Color color;
    if (i >= ROOT_COLORS.length) {
      double balance=((double)(i / ROOT_COLORS.length)) / (roots.size() / ROOT_COLORS.length);
      Color mix=ColorUtil.mix(ROOT_COLORS[i % ROOT_COLORS.length],ROOT_COLORS[(i + 1) % ROOT_COLORS.length],balance);
      int tones=(int)(Math.abs(balance - 0.5) * 2 * (roots.size() / ROOT_COLORS.length) + 1);
      color=new JBColor(ColorUtil.darker(mix,tones),ColorUtil.brighter(mix,2 * tones));
    }
 else {
      color=ROOT_COLORS[i];
    }
    i++;
    myRoots2Colors.put(root,color);
  }
}
