{
  importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>junit</groupId>"+ "    <artifactId>junit</artifactId>"+ "    <version>4.0</version>"+ "  </dependency>"+ "</dependencies>");
  assertProjectLibraries("Maven: junit:junit:4.0");
  assertModuleLibDeps("project","Maven: junit:junit:4.0");
  Library lib=ProjectLibraryTable.getInstance(myProject).getLibraryByName("Maven: junit:junit:4.0");
  Library.ModifiableModel model=lib.getModifiableModel();
  for (  String each : model.getUrls(OrderRootType.SOURCES)) {
    model.removeRoot(each,OrderRootType.SOURCES);
  }
  for (  String each : model.getUrls(JavadocOrderRootType.getInstance())) {
    model.removeRoot(each,JavadocOrderRootType.getInstance());
  }
  model.addRoot("file://foo.sources",OrderRootType.SOURCES);
  model.addRoot("file://foo.javadoc",JavadocOrderRootType.getInstance());
  model.commit();
  assertModuleLibDep("project","Maven: junit:junit:4.0","jar://" + getRepositoryPath() + "/junit/junit/4.0/junit-4.0.jar!/","file://foo.sources","file://foo.javadoc");
  importProject();
  assertModuleLibDep("project","Maven: junit:junit:4.0","jar://" + getRepositoryPath() + "/junit/junit/4.0/junit-4.0.jar!/","file://foo.sources","file://foo.javadoc");
}
