{
  super(createStep(title,actionGroup,dataContext,showNumbers,useAlphaAsNumbers,showDisabledActions,honorActionMnemonics,preselectActionCondition,actionPlace),maxRowCount);
  myDisposeCallback=disposeCallback;
  myComponent=PlatformDataKeys.CONTEXT_COMPONENT.getData(dataContext);
  addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      final JList list=(JList)e.getSource();
      final ActionItem actionItem=(ActionItem)list.getSelectedValue();
      if (actionItem == null)       return;
      AnAction action=actionItem.getAction();
      Presentation presentation=new Presentation();
      presentation.setDescription(action.getTemplatePresentation().getDescription());
      final String actualActionPlace=actionPlace == null ? ActionPlaces.UNKNOWN : actionPlace;
      action.update(new AnActionEvent(null,DataManager.getInstance().getDataContext(myComponent),actualActionPlace,presentation,ActionManager.getInstance(),0));
      ActionMenu.showDescriptionInStatusBar(true,myComponent,presentation.getDescription());
    }
  }
);
}
