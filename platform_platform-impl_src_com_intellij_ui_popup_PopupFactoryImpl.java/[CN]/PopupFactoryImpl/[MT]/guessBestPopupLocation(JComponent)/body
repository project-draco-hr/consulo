{
  Point popupMenuPoint=null;
  final Rectangle visibleRect=component.getVisibleRect();
  if (component instanceof JList) {
    JList list=(JList)component;
    int firstVisibleIndex=list.getFirstVisibleIndex();
    int lastVisibleIndex=list.getLastVisibleIndex();
    int[] selectedIndices=list.getSelectedIndices();
    for (    int index : selectedIndices) {
      if (firstVisibleIndex <= index && index <= lastVisibleIndex) {
        Rectangle cellBounds=list.getCellBounds(index,index);
        popupMenuPoint=new Point(visibleRect.x + visibleRect.width / 4,cellBounds.y + cellBounds.height);
        break;
      }
    }
  }
 else   if (component instanceof JTree) {
    JTree tree=(JTree)component;
    int[] selectionRows=tree.getSelectionRows();
    if (selectionRows != null) {
      Arrays.sort(selectionRows);
      for (int i=0; i < selectionRows.length; i++) {
        int row=selectionRows[i];
        Rectangle rowBounds=tree.getRowBounds(row);
        if (visibleRect.contains(rowBounds)) {
          popupMenuPoint=new Point(rowBounds.x + 2,rowBounds.y + rowBounds.height - 1);
          break;
        }
      }
      if (popupMenuPoint == null) {
        Point visibleCenter=new Point(visibleRect.x + visibleRect.width / 2,visibleRect.y + visibleRect.height / 2);
        double minDistance=Double.POSITIVE_INFINITY;
        int bestRow=-1;
        Point rowCenter;
        double distance;
        for (int i=0; i < selectionRows.length; i++) {
          int row=selectionRows[i];
          Rectangle rowBounds=tree.getRowBounds(row);
          rowCenter=new Point(rowBounds.x + rowBounds.width / 2,rowBounds.y + rowBounds.height / 2);
          distance=visibleCenter.distance(rowCenter);
          if (minDistance > distance) {
            minDistance=distance;
            bestRow=row;
          }
        }
        if (bestRow != -1) {
          Rectangle rowBounds=tree.getRowBounds(bestRow);
          tree.scrollRectToVisible(new Rectangle(rowBounds.x,rowBounds.y,Math.min(visibleRect.width,rowBounds.width),rowBounds.height));
          popupMenuPoint=new Point(rowBounds.x + 2,rowBounds.y + rowBounds.height - 1);
        }
      }
    }
  }
 else   if (component instanceof PopupOwner) {
    popupMenuPoint=((PopupOwner)component).getBestPopupPosition();
  }
  if (popupMenuPoint == null) {
    popupMenuPoint=new Point(visibleRect.x + visibleRect.width / 2,visibleRect.y + visibleRect.height / 2);
  }
  return new RelativePoint(component,popupMenuPoint);
}
