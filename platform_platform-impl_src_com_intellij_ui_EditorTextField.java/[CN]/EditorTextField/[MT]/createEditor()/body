{
  LOG.assertTrue(myDocument != null);
  final EditorFactory factory=EditorFactory.getInstance();
  EditorEx editor=(EditorEx)(myIsViewer ? factory.createViewer(myDocument,myProject) : factory.createEditor(myDocument,myProject));
  final EditorSettings settings=editor.getSettings();
  settings.setAdditionalLinesCount(0);
  settings.setAdditionalColumnsCount(1);
  settings.setRightMarginShown(false);
  settings.setRightMargin(-1);
  settings.setFoldingOutlineShown(false);
  settings.setLineNumbersShown(false);
  settings.setLineMarkerAreaShown(false);
  settings.setIndentGuidesShown(false);
  settings.setVirtualSpace(false);
  settings.setWheelFontChangeEnabled(false);
  settings.setAdditionalPageAtBottom(false);
  editor.setHorizontalScrollbarVisible(false);
  editor.setVerticalScrollbarVisible(false);
  editor.setCaretEnabled(!myIsViewer);
  settings.setLineCursorWidth(1);
  if (myProject != null) {
    PsiFile psiFile=PsiDocumentManager.getInstance(myProject).getPsiFile(editor.getDocument());
    if (psiFile != null) {
      DaemonCodeAnalyzer.getInstance(myProject).setHighlightingEnabled(psiFile,!myIsViewer);
    }
  }
  if (myProject != null && myFileType != null) {
    editor.setHighlighter(EditorHighlighterFactory.getInstance().createEditorHighlighter(myProject,myFileType));
  }
  editor.getSettings().setCaretRowShown(false);
  editor.setOneLineMode(myOneLineMode);
  editor.getCaretModel().moveToOffset(myDocument.getTextLength());
  if (!shouldHaveBorder()) {
    editor.setBorder(null);
  }
  if (myIsViewer) {
    editor.getSelectionModel().removeSelection();
  }
 else   if (myWholeTextSelected) {
    doSelectAll(editor);
    myWholeTextSelected=false;
  }
  editor.putUserData(SUPPLEMENTARY_KEY,myIsSupplementary);
  editor.getContentComponent().setFocusCycleRoot(false);
  editor.getContentComponent().addFocusListener(this);
  editor.setPlaceholder(myHintText);
  initOneLineMode(editor);
  if (myIsRendererWithSelection) {
    ((EditorImpl)editor).setPaintSelection(true);
    editor.getColorsScheme().setColor(EditorColors.SELECTION_BACKGROUND_COLOR,myRendererBg);
    editor.getColorsScheme().setColor(EditorColors.SELECTION_FOREGROUND_COLOR,myRendererFg);
    editor.getSelectionModel().setSelection(0,myDocument.getTextLength());
    editor.setBackgroundColor(myRendererBg);
  }
  for (  EditorSettingsProvider provider : mySettingsProviders) {
    provider.customizeSettings(editor);
  }
  return editor;
}
