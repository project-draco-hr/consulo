{
  final PsiElement[] literals=PsiTreeUtil.collectElements(expr,new PsiElementFilter(){
    @Override public boolean isAccepted(    PsiElement element){
      if (isStringPsiLiteral(element) && StringUtil.isJavaIdentifier(StringUtil.unquoteString(element.getText()))) {
        final PsiElement exprList=element.getParent();
        if (exprList instanceof PsiExpressionList) {
          final PsiElement call=exprList.getParent();
          if (call instanceof PsiNewExpression) {
            return true;
          }
 else           if (call instanceof PsiMethodCallExpression) {
            return true;
          }
        }
      }
      return false;
    }
  }
);
  if (literals.length == 1) {
    final String text=StringUtil.unquoteString(literals[0].getText());
    return getSuggestionsByName(text,variableKind,expr.getType() instanceof PsiArrayType,correctKeywords);
  }
  return null;
}
