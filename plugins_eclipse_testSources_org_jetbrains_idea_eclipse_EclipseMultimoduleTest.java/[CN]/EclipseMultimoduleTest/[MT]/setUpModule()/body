{
  super.setUpModule();
  final File testRoot=new File(PluginPathManager.getPluginHomePath("eclipse") + "/testData","round");
  assertTrue(testRoot.getAbsolutePath(),testRoot.isDirectory());
  final File currentTestRoot=new File(testRoot,getTestName(true));
  assertTrue(currentTestRoot.getAbsolutePath(),currentTestRoot.isDirectory());
  try {
    FileUtil.copyDir(currentTestRoot,new File(getProject().getBaseDir().getPath()));
  }
 catch (  IOException e) {
    LOG.error(e);
  }
  final ModifiableRootModel model=ModuleRootManager.getInstance(getModule()).getModifiableModel();
  final VirtualFile file=ApplicationManager.getApplication().runWriteAction(new Computable<VirtualFile>(){
    public VirtualFile compute(){
      return LocalFileSystem.getInstance().refreshAndFindFileByPath(getProject().getBaseDir().getPath() + "/eclipse-ws-3.4.1-a/ws-internals");
    }
  }
);
  if (file != null) {
    model.addContentEntry(file);
  }
 else {
    model.dispose();
    Assert.assertTrue("File not found",false);
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      model.commit();
    }
  }
);
}
