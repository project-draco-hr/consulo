{
  if (!isSupported())   return;
  final ArrayList<VirtualFile> files=new ArrayList<VirtualFile>();
  final ArrayList<String> fileUrls=new ArrayList<String>();
  VirtualFile eachParent=file;
  while (eachParent != null) {
    final int index=files.size() == 0 ? 0 : files.size();
    files.add(index,eachParent);
    fileUrls.add(index,getPresentableUrl(eachParent));
    if (eachParent.getParent() == null && eachParent.getFileSystem() instanceof ArchiveFileSystem) {
      eachParent=ArchiveVfsUtil.getVirtualFileForJar(eachParent);
      if (eachParent == null)       break;
    }
    eachParent=eachParent.getParent();
  }
  final ArrayList<Icon> icons=new ArrayList<Icon>();
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    public void run(){
      for (      String each : fileUrls) {
        final File ioFile=new File(each);
        Icon eachIcon;
        if (ioFile.exists()) {
          eachIcon=FileSystemView.getFileSystemView().getSystemIcon(ioFile);
        }
 else {
          eachIcon=EmptyIcon.ICON_16;
        }
        icons.add(eachIcon);
      }
      LaterInvocator.invokeLater(new Runnable(){
        public void run(){
          show.show(createPopup(files,icons));
        }
      }
);
    }
  }
);
}
