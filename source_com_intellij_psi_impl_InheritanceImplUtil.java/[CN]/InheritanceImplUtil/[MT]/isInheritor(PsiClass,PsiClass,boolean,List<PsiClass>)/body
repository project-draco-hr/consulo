{
  if (candidateClass instanceof PsiAnonymousClass) {
    final PsiClass baseCandidateClass=((PsiAnonymousClass)candidateClass).getBaseClassType().resolve();
    if (baseCandidateClass == null)     return false;
    return InheritanceUtil.isInheritorOrSelf(baseCandidateClass,baseClass,checkDeep);
  }
  PsiManager manager=candidateClass.getManager();
  if (checkDeep && LOG.isDebugEnabled()) {
    LOG.debug("Using uncached version for " + candidateClass.getQualifiedName() + " and "+ baseClass);
  }
  PsiClass objectClass=manager.findClass("java.lang.Object",candidateClass.getResolveScope());
  if (manager.areElementsEquivalent(baseClass,objectClass)) {
    if (manager.areElementsEquivalent(candidateClass,objectClass))     return false;
    if (checkDeep || candidateClass.isInterface())     return true;
    return candidateClass.getExtendsListTypes().length == 0;
  }
  return isInheritorWithoutCaching(candidateClass,baseClass,checkDeep,checkedClasses);
}
