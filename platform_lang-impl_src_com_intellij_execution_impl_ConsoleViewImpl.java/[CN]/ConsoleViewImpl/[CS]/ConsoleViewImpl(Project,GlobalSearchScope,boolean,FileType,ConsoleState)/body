{
  super(new BorderLayout());
  isViewer=viewer;
  myState=initialState;
  myPsiDisposedCheck=new DisposedPsiManagerCheck(project);
  myProject=project;
  myFileType=fileType;
  myCustomFilter=new CompositeFilter(project);
  myPredefinedMessageFilter=new CompositeFilter(project);
  for (  ConsoleFilterProvider eachProvider : Extensions.getExtensions(ConsoleFilterProvider.FILTER_PROVIDERS)) {
    Filter[] filters=eachProvider instanceof ConsoleFilterProviderEx ? ((ConsoleFilterProviderEx)eachProvider).getDefaultFilters(project,searchScope) : eachProvider.getDefaultFilters(project);
    for (    Filter filter : filters) {
      myPredefinedMessageFilter.addFilter(filter);
    }
  }
  myHeavyUpdateTicket=0;
  myHeavyAlarm=myPredefinedMessageFilter.isAnyHeavy() ? new Alarm(Alarm.ThreadToUse.SHARED_THREAD,this) : null;
  Disposer.register(project,this);
  myFinishProgress=new Runnable(){
    @Override public void run(){
      myJLayeredPane.finishUpdating();
    }
  }
;
}
