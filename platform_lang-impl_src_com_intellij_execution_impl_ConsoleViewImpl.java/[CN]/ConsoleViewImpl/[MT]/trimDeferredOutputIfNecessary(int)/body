{
  if (!USE_CYCLIC_BUFFER || myDeferredOutput.length() <= 0 || myDeferredOutput.length() + numberOfNewSymbols <= CYCLIC_BUFFER_SIZE) {
    return numberOfNewSymbols;
  }
  final int numberOfSymbolsToRemove=myDeferredOutput.length() + numberOfNewSymbols - CYCLIC_BUFFER_SIZE;
  myDeferredTypes.clear();
  int removedSymbolsNumber=0;
  int endIndex=-1;
  for (int i=0; i < myDeferredTokens.size(); i++) {
    TokenInfo tokenInfo=myDeferredTokens.get(i);
    if (removedSymbolsNumber < numberOfSymbolsToRemove) {
      int tokenLength=tokenInfo.getLength();
      if (tokenInfo.contentType == ConsoleViewContentType.USER_INPUT) {
        tokenInfo.startOffset-=removedSymbolsNumber;
        tokenInfo.endOffset-=removedSymbolsNumber;
        removedSymbolsNumber+=tokenLength;
        continue;
      }
      int remainingNumberOfSymbolsToRemove=numberOfSymbolsToRemove - removedSymbolsNumber;
      if (remainingNumberOfSymbolsToRemove >= tokenLength) {
        myDeferredOutput.delete(tokenInfo.startOffset - removedSymbolsNumber,tokenInfo.endOffset - removedSymbolsNumber);
        removedSymbolsNumber+=tokenLength;
      }
 else {
        myDeferredOutput.delete(tokenInfo.startOffset - removedSymbolsNumber,tokenInfo.startOffset - removedSymbolsNumber + remainingNumberOfSymbolsToRemove);
        tokenInfo.startOffset+=remainingNumberOfSymbolsToRemove;
        removedSymbolsNumber=numberOfSymbolsToRemove;
      }
    }
    if (removedSymbolsNumber < numberOfSymbolsToRemove) {
      continue;
    }
    if (endIndex < 0) {
      endIndex=i;
    }
    tokenInfo.startOffset-=numberOfSymbolsToRemove;
    tokenInfo.endOffset-=numberOfSymbolsToRemove;
    myDeferredTypes.add(tokenInfo.contentType);
  }
  if (endIndex < 0) {
    myDeferredTokens.clear();
  }
 else   if (endIndex > 0) {
    myDeferredTokens.subList(0,endIndex).clear();
  }
  if (!myDeferredTokens.isEmpty()) {
    TokenInfo tokenInfo=myDeferredTokens.get(0);
    if (tokenInfo.startOffset > 0) {
      myDeferredTokens.add(0,new TokenInfo(ConsoleViewContentType.USER_INPUT,0,tokenInfo.startOffset));
      myDeferredTypes.add(ConsoleViewContentType.USER_INPUT);
    }
  }
  myContentSize-=removedSymbolsNumber;
  if (numberOfNewSymbols + myDeferredOutput.length() > CYCLIC_BUFFER_SIZE) {
    int result=CYCLIC_BUFFER_SIZE - myDeferredOutput.length();
    if (result < 0) {
      return 0;
    }
    return result;
  }
  return numberOfNewSymbols;
}
