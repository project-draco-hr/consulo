{
  boolean canHighlightHyperlinks=!myCustomFilter.isEmpty() || !myPredefinedMessageFilter.isEmpty();
  if (!canHighlightHyperlinks && myUpdateFoldingsEnabled) {
    return;
  }
  ApplicationManager.getApplication().assertIsDispatchThread();
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  if (canHighlightHyperlinks) {
    myHyperlinks.highlightHyperlinks(myCustomFilter,myPredefinedMessageFilter,line1,endLine);
  }
  if (myPredefinedMessageFilter.isAnyHeavy()) {
    final int startLine=Math.max(0,line1);
    final Document document=getEditor().getDocument();
    final Document documentCopy=new DocumentImpl(true);
    final int startOffset=document.getLineStartOffset(startLine);
    documentCopy.setText(new String(document.getText(new TextRange(startOffset,document.getLineEndOffset(endLine)))));
    documentCopy.setReadOnly(true);
    myJLayeredPane.startUpdating();
    final int currentValue=myHeavyUpdateTicket;
    myHeavyAlarm.addRequest(new Runnable(){
      @Override public void run(){
        myPredefinedMessageFilter.applyHeavyFilter(documentCopy,startOffset,startLine,new Consumer<FilterMixin.AdditionalHighlight>(){
          @Override public void consume(          final FilterMixin.AdditionalHighlight additionalHighlight){
            SwingUtilities.invokeLater(new Runnable(){
              @Override public void run(){
                myFlushAlarm.addRequest(new Runnable(){
                  @Override public void run(){
                    if (myHeavyUpdateTicket != currentValue)                     return;
                    myHyperlinks.adjustHighlighters(Collections.singletonList(additionalHighlight));
                  }
                }
,0);
              }
            }
);
          }
        }
);
        if (myHeavyAlarm.getActiveRequestCount() == 0) {
          SwingUtilities.invokeLater(myFinishProgress);
        }
      }
    }
,0);
  }
  if (myUpdateFoldingsEnabled) {
    updateFoldings(line1,endLine,true);
  }
}
