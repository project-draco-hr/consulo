{
  final int startLine=Math.max(0,line1);
  final Document document=getEditor().getDocument();
  final Document documentCopy=new DocumentImpl(true);
  final int startOffset=document.getLineStartOffset(startLine);
  documentCopy.setText(new String(document.getText(new TextRange(startOffset,document.getLineEndOffset(endLine)))));
  documentCopy.setReadOnly(true);
  myJLayeredPane.startUpdating();
  final int currentValue=myHeavyUpdateTicket;
  myHeavyAlarm.addRequest(new Runnable(){
    @Override public void run(){
      if (!myPredefinedMessageFilter.shouldRunHeavy())       return;
      myPredefinedMessageFilter.applyHeavyFilter(documentCopy,startOffset,startLine,new Consumer<FilterMixin.AdditionalHighlight>(){
        @Override public void consume(        final FilterMixin.AdditionalHighlight additionalHighlight){
          SwingUtilities.invokeLater(new Runnable(){
            @Override public void run(){
              if (myFlushAlarm.isDisposed())               return;
              myFlushAlarm.addRequest(new Runnable(){
                @Override public void run(){
                  if (myHeavyUpdateTicket != currentValue)                   return;
                  myHyperlinks.adjustHighlighters(Collections.singletonList(additionalHighlight));
                }
              }
,0);
            }
          }
);
        }
      }
);
      if (myHeavyAlarm.getActiveRequestCount() == 0) {
        SwingUtilities.invokeLater(myFinishProgress);
      }
    }
  }
,0);
}
