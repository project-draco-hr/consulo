{
  ApplicationManager.getApplication().assertIsDispatchThread();
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  final Document document=myEditor.getDocument();
  final CharSequence chars=document.getCharsSequence();
  final TextAttributes hyperlinkAttributes=getHyperlinkAttributes();
  final int startLine=Math.max(0,line1);
  final Set<FoldRegion> toRemove=clearOutdatedFolding(document,endLine,startLine);
  final List<FoldRegion> toAdd=new ArrayList<FoldRegion>();
  for (int line=startLine; line <= endLine; line++) {
    final int startOffset=document.getLineStartOffset(line);
    int endOffset=document.getLineEndOffset(line);
    if (endOffset < document.getTextLength()) {
      endOffset++;
    }
    final String text=chars.subSequence(startOffset,endOffset).toString();
    Filter.Result result=myCustomFilter.applyFilter(text,endOffset);
    if (result == null) {
      result=myPredefinedMessageFilter.applyFilter(text,endOffset);
    }
    if (result != null) {
      final int highlightStartOffset=result.highlightStartOffset;
      final int highlightEndOffset=result.highlightEndOffset;
      final HyperlinkInfo hyperlinkInfo=result.hyperlinkInfo;
      addHyperlink(highlightStartOffset,highlightEndOffset,result.highlightAttributes,hyperlinkInfo,hyperlinkAttributes);
      addFolding(document,chars,line,result.isInternal,toAdd);
    }
  }
  if (!toAdd.isEmpty() || !toRemove.isEmpty()) {
    doUpdateFolding(toRemove,toAdd);
  }
}
