{
  return ApplicationManager.getApplication().runReadAction(new Computable<EditorEx>(){
    @Override public EditorEx compute(){
      EditorEx editor=doCreateConsoleEditor();
      LOG.assertTrue(UndoUtil.isUndoDisabledFor(editor.getDocument()));
      editor.setContextMenuGroupId(null);
      editor.addEditorMouseListener(new EditorPopupHandler(){
        @Override public void invokePopup(        final EditorMouseEvent event){
          popupInvoked(event.getMouseEvent());
        }
      }
);
      editor.getDocument().addDocumentListener(new DocumentAdapter(){
        @Override public void documentChanged(        DocumentEvent event){
          onDocumentChanged(event);
        }
      }
,ConsoleViewImpl.this);
      int bufferSize=myBuffer.isUseCyclicBuffer() ? myBuffer.getCyclicBufferSize() : 0;
      editor.getDocument().setCyclicBufferSize(bufferSize);
      editor.putUserData(CONSOLE_VIEW_IN_EDITOR_VIEW,ConsoleViewImpl.this);
      editor.getSettings().setAllowSingleLogicalLineFolding(true);
      editor.setHighlighter(createHighlighter());
      return editor;
    }
  }
);
}
