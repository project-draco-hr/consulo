{
  ConsoleViewImpl consoleView=this;
  final Editor editor=consoleView.myEditor;
  final Document document=editor.getDocument();
  final int startOffset;
  final int endOffset;
synchronized (consoleView.LOCK) {
    if (consoleView.myTokens.isEmpty())     return;
    final TokenInfo info=consoleView.myTokens.get(consoleView.myTokens.size() - 1);
    if (info.contentType != ConsoleViewContentType.USER_INPUT)     return;
    if (consoleView.myDeferredUserInput.length() == 0)     return;
    final int deferredOffset=myContentSize - consoleView.myDeferredUserInput.length();
    startOffset=getStartOffset(offset,info,deferredOffset);
    endOffset=getEndOffset(offset + length,info);
    if (startOffset == -1 || endOffset == -1 || endOffset <= startOffset || startOffset < deferredOffset) {
      editor.getSelectionModel().removeSelection();
      editor.getCaretModel().moveToOffset(offset);
      return;
    }
    consoleView.myDeferredUserInput.delete(startOffset - deferredOffset,endOffset - deferredOffset);
    int charCountToDelete=endOffset - startOffset;
    info.endOffset-=charCountToDelete;
    if (info.startOffset == info.endOffset) {
      consoleView.myTokens.remove(consoleView.myTokens.size() - 1);
    }
    consoleView.myContentSize-=charCountToDelete;
  }
  document.deleteString(startOffset,endOffset);
  editor.getCaretModel().moveToOffset(startOffset);
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  editor.getSelectionModel().removeSelection();
}
