{
  final EditorFactoryImpl document=(EditorFactoryImpl)EditorFactory.getInstance();
  final Document editorDocument=document.createDocument(true);
  editorDocument.addDocumentListener(new DocumentListener(){
    public void beforeDocumentChange(    DocumentEvent event){
    }
    public void documentChanged(    DocumentEvent event){
      if (myFileType != null) {
        highlightUserTokens();
      }
    }
  }
);
  final EditorEx editor=(EditorEx)document.createViewer(editorDocument,myProject);
  editor.getSettings().setAllowSingleLogicalLineFolding(true);
  editor.setSoftWrapAppliancePlace(SoftWrapAppliancePlaces.CONSOLE);
  final EditorHighlighter highlighter=createHighlighter();
  editor.setHighlighter(highlighter);
  final EditorSettings editorSettings=editor.getSettings();
  editorSettings.setLineMarkerAreaShown(false);
  editorSettings.setIndentGuidesShown(false);
  editorSettings.setLineNumbersShown(false);
  editorSettings.setFoldingOutlineShown(true);
  editorSettings.setAdditionalPageAtBottom(false);
  editorSettings.setAdditionalColumnsCount(0);
  editorSettings.setAdditionalLinesCount(0);
  final DelegateColorScheme scheme=new DelegateColorScheme(editor.getColorsScheme()){
    @Override public Color getDefaultBackground(){
      final Color color=getColor(ConsoleViewContentType.CONSOLE_BACKGROUND_KEY);
      return color == null ? super.getDefaultBackground() : color;
    }
  }
;
  editor.setColorsScheme(scheme);
  scheme.setColor(EditorColors.CARET_ROW_COLOR,null);
  scheme.setColor(EditorColors.RIGHT_MARGIN_COLOR,null);
  if (!isViewer) {
    setEditorUpActions(editor);
  }
  return editor;
}
