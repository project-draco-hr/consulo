{
synchronized (LOCK) {
    myDeferredTypes.add(contentType);
    s=StringUtil.convertLineSeparators(s);
    myContentSize+=s.length();
    myDeferredOutput.append(s);
    if (contentType == ConsoleViewContentType.USER_INPUT) {
      myDeferredUserInput.append(s);
    }
    boolean needNew=true;
    if (!myTokens.isEmpty()) {
      final TokenInfo lastToken=myTokens.get(myTokens.size() - 1);
      if (lastToken.contentType == contentType) {
        lastToken.endOffset=myContentSize;
        needNew=false;
      }
    }
    if (needNew) {
      myTokens.add(new TokenInfo(contentType,myContentSize - s.length(),myContentSize));
    }
    if (s.indexOf('\n') >= 0 || s.indexOf('\r') >= 0) {
      if (contentType == ConsoleViewContentType.USER_INPUT) {
        flushDeferredUserInput();
      }
    }
    if (myFlushAlarm.getActiveRequestCount() == 0 && myEditor != null) {
      final boolean shouldFlushNow=USE_CYCLIC_BUFFER && myDeferredOutput.length() > CYCLIC_BUFFER_SIZE;
      myFlushAlarm.addRequest(myFlushDeferredRunnable,shouldFlushNow ? 0 : FLUSH_DELAY,getStateForUpdate());
    }
  }
}
