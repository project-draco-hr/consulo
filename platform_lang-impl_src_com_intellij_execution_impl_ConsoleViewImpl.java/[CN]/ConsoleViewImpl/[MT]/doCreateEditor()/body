{
  final EditorEx editor=createRealEditor();
  editor.addEditorMouseListener(new EditorMouseAdapter(){
    public void mouseReleased(    final EditorMouseEvent e){
      final MouseEvent mouseEvent=e.getMouseEvent();
      if (!mouseEvent.isPopupTrigger()) {
        navigate(e);
      }
    }
  }
);
  editor.addEditorMouseListener(new EditorPopupHandler(){
    public void invokePopup(    final EditorMouseEvent event){
      final MouseEvent mouseEvent=event.getMouseEvent();
      popupInvoked(mouseEvent.getComponent(),mouseEvent.getX(),mouseEvent.getY());
    }
  }
);
  final int bufferSize=USE_CYCLIC_BUFFER ? CYCLIC_BUFFER_SIZE : 0;
  editor.getDocument().setCyclicBufferSize(bufferSize);
  editor.putUserData(CONSOLE_VIEW_IN_EDITOR_VIEW,this);
  editor.getContentComponent().addMouseMotionListener(new MouseMotionAdapter(){
    public void mouseMoved(    final MouseEvent e){
      final HyperlinkInfo info=getHyperlinkInfoByPoint(e.getPoint());
      if (info != null) {
        editor.getContentComponent().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
      }
 else {
        editor.getContentComponent().setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));
      }
    }
  }
);
  return editor;
}
