{
  JPanel optionsPanel=new JPanel();
  optionsPanel.setBorder(IdeBorderFactory.createTitledBorder("Inline"));
  optionsPanel.setLayout(new BoxLayout(optionsPanel,BoxLayout.Y_AXIS));
  myRbInlineAll=new JRadioButton("All references and remove the field",true);
  myRbInlineAll.setMnemonic('A');
  myRbInlineThisOnly=new JRadioButton("This reference only and keep the field");
  myRbInlineThisOnly.setMnemonic('t');
  optionsPanel.add(myRbInlineAll);
  optionsPanel.add(myRbInlineThisOnly);
  ButtonGroup bg=new ButtonGroup();
  bg.add(myRbInlineAll);
  bg.add(myRbInlineThisOnly);
  myRbInlineThisOnly.setEnabled(myInvokedOnReference);
  final boolean writable=myField.isWritable();
  myRbInlineAll.setEnabled(writable);
  if (myInvokedOnReference) {
    if (writable) {
      final boolean inlineThis=RefactoringSettings.getInstance().INLINE_FIELD_THIS;
      myRbInlineThisOnly.setSelected(inlineThis);
      myRbInlineAll.setSelected(!inlineThis);
    }
 else {
      myRbInlineAll.setSelected(false);
      myRbInlineThisOnly.setSelected(true);
    }
  }
 else {
    myRbInlineAll.setSelected(true);
    myRbInlineThisOnly.setSelected(false);
  }
  getPreviewAction().setEnabled(myRbInlineAll.isSelected());
  myRbInlineAll.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      boolean enabled=myRbInlineAll.isSelected();
      getPreviewAction().setEnabled(enabled);
    }
  }
);
  return optionsPanel;
}
