{
  myPaletteWindow=paletteWindow;
  myGroup=group;
  if (group.getName() == null) {
    setVisible(false);
  }
 else {
    setText(group.getName());
  }
  setSelected(true);
  addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (myComponentList != null) {
        myComponentList.setVisible(isSelected());
      }
    }
  }
);
  addMouseListener(new PopupHandler(){
    public void invokePopup(    Component comp,    int x,    int y){
      showGroupPopupMenu(comp,x,y);
    }
  }
);
  setIcon(UIUtil.getTreeCollapsedIcon());
  setSelectedIcon(UIUtil.getTreeExpandedIcon());
  setFont(getFont().deriveFont(Font.BOLD));
  setFocusPainted(false);
  setMargin(new Insets(0,3,0,3));
  if (getBorder() instanceof CompoundBorder) {
    Dimension pref=getPreferredSize();
    pref.height-=3;
    setPreferredSize(pref);
  }
  DnDManager.getInstance(paletteWindow.getProject()).registerTarget(new DnDTarget(){
    public boolean update(    DnDEvent aEvent){
      setBorderPainted(true);
      aEvent.setDropPossible(aEvent.getAttachedObject() instanceof PaletteItem,null);
      return true;
    }
    public void drop(    DnDEvent aEvent){
      setBorderPainted(false);
      if (aEvent.getAttachedObject() instanceof PaletteItem) {
        myGroup.handleDrop(myPaletteWindow.getProject(),(PaletteItem)aEvent.getAttachedObject(),-1);
      }
    }
    public void cleanUpOnLeave(){
      setBorderPainted(false);
    }
    public void updateDraggedImage(    Image image,    Point dropPoint,    Point imageOffset){
    }
  }
,this);
  if (!GraphicsEnvironment.isHeadless()) {
    new DropTarget(this,new DropTargetAdapter(){
      public void dragEnter(      DropTargetDragEvent dtde){
        setBorderPainted(true);
      }
      public void dragExit(      DropTargetEvent dte){
        setBorderPainted(false);
      }
      public void drop(      DropTargetDropEvent dtde){
      }
    }
);
  }
  initActions();
}
