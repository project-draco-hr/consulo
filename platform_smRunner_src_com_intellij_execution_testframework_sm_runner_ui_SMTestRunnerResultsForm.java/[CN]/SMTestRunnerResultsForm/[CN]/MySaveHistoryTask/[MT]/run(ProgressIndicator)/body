{
  writeState();
  DaemonCodeAnalyzer.getInstance(getProject()).restart();
  try {
    SAXTransformerFactory transformerFactory=(SAXTransformerFactory)TransformerFactory.newInstance();
    TransformerHandler handler=transformerFactory.newTransformerHandler();
    handler.getTransformer().setOutputProperty(OutputKeys.INDENT,"yes");
    handler.getTransformer().setOutputProperty("{http://xml.apache.org/xslt}indent-amount","4");
    final String configurationNameIncludedDate=PathUtil.suggestFileName(myConfiguration.getName()) + " - " + new SimpleDateFormat(HISTORY_DATE_FORMAT).format(new Date());
    myOutputFile=new File(TestStateStorage.getTestHistoryRoot(myProject),configurationNameIncludedDate + ".xml");
    FileUtilRt.createParentDirs(myOutputFile);
    handler.setResult(new StreamResult(new FileWriter(myOutputFile)));
    final SMTestProxy.SMRootTestProxy root=myRoot;
    final RunConfiguration configuration=myConfiguration;
    if (root != null && configuration != null) {
      TestResultsXmlFormatter.execute(root,configuration,myConsoleProperties,handler);
    }
  }
 catch (  ProcessCanceledException e) {
    throw e;
  }
catch (  Exception e) {
    LOG.info("Export to history failed",e);
  }
}
