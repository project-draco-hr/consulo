{
  PsiElement result=resolveSystemPropety();
  if (result != null)   return result;
  DomElement domElement=DomUtil.getDomElement(myElement);
  DomFileElement<DomElement> fileElement=DomUtil.getFileElement(domElement);
  MavenDomProjectModel domProject=(MavenDomProjectModel)fileElement.getRootElement();
  if (myText.startsWith("project.") || myText.startsWith("pom.")) {
    String path=myText.startsWith("pom.") ? "project." + myText.substring("pom.".length()) : myText;
    return resolveModelProperty(domProject,path,new THashSet<DomElement>());
  }
  if (myText.startsWith("settings.")) {
    for (    VirtualFile each : myProjectsManager.getGeneralSettings().getEffectiveSettingsFiles()) {
      MavenDomSettingsModel settingsDom=MavenDomUtil.getMavenDomModel(myProject,each,MavenDomSettingsModel.class);
      if (settingsDom == null)       continue;
      result=MavenDomUtil.findTag(settingsDom,myText);
      if (result != null)       return result;
    }
  }
  return resolveProperty(domProject);
}
