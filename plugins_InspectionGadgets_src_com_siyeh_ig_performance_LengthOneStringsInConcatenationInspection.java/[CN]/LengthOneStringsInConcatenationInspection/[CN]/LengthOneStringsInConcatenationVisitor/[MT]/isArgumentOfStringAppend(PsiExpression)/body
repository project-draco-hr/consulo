{
  final PsiElement parent=expression.getParent();
  if (parent == null) {
    return false;
  }
  if (!(parent instanceof PsiExpressionList)) {
    return false;
  }
  final PsiElement grandparent=parent.getParent();
  if (!(grandparent instanceof PsiMethodCallExpression)) {
    return false;
  }
  final PsiMethodCallExpression call=(PsiMethodCallExpression)grandparent;
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  @NonNls final String name=methodExpression.getReferenceName();
  if (!"append".equals(name) && !"insert".equals(name)) {
    return false;
  }
  final PsiMethod method=call.resolveMethod();
  if (method == null) {
    return false;
  }
  final PsiClass methodClass=method.getContainingClass();
  if (methodClass == null) {
    return false;
  }
  final String className=methodClass.getQualifiedName();
  return CommonClassNames.JAVA_LANG_STRING_BUFFER.equals(className) || CommonClassNames.JAVA_LANG_STRING_BUILDER.equals(className);
}
