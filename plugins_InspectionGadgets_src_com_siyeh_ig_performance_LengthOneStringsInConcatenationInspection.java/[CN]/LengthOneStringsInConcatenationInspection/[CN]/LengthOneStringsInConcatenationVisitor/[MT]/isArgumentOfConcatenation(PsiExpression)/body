{
  final PsiElement parent=expression.getParent();
  if (!(parent instanceof PsiPolyadicExpression)) {
    return false;
  }
  final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)parent;
  if (!JavaTokenType.PLUS.equals(polyadicExpression.getOperationTokenType())) {
    return false;
  }
  final PsiExpression sibling=ExpressionUtils.getPrevOrNextSiblingOfType(expression,PsiExpression.class);
  if (sibling == null) {
    return false;
  }
  final PsiType siblingType=sibling.getType();
  return TypeUtils.isJavaLangString(siblingType);
}
