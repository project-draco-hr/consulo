{
  final PsiElement parent=expression.getParent();
  if (!(parent instanceof PsiBinaryExpression)) {
    return false;
  }
  final PsiBinaryExpression binaryExp=(PsiBinaryExpression)parent;
  final PsiJavaToken sign=binaryExp.getOperationSign();
  if (sign == null) {
    return false;
  }
  if (sign.getTokenType() != JavaTokenType.PLUS) {
    return false;
  }
  final PsiExpression sibling;
  final PsiExpression lhs=binaryExp.getLOperand();
  if (lhs.equals(expression)) {
    sibling=binaryExp.getROperand();
  }
 else {
    sibling=lhs;
  }
  if (sibling == null) {
    return false;
  }
  final PsiType siblingType=sibling.getType();
  if (!TypeUtils.isJavaLangString(siblingType)) {
    return false;
  }
  return true;
}
