{
  super.visitLiteralExpression(expression);
  final PsiType type=expression.getType();
  if (!TypeUtils.isJavaLangString(type)) {
    return;
  }
  final String value=(String)expression.getValue();
  if (value == null) {
    return;
  }
  if (value.length() != 1) {
    return;
  }
  if (!isArgumentOfConcatenation(expression) && !isArgumentOfStringAppend(expression)) {
    return;
  }
  registerError(expression);
}
