{
  final RefUnreferencedFilter filter=new RefUnreferencedFilter();
  final DeadHTMLComposer composer=new DeadHTMLComposer(this);
  checkForReachables();
  getRefManager().iterate(new RefManager.RefIterator(){
    public void accept(    RefElement refElement){
      if (filter.accepts(refElement)) {
        if (refElement instanceof RefImplicitConstructor)         return;
        org.jdom.Element element=XMLExportUtl.createElement(refElement,parentNode,-1);
        org.jdom.Element problemClassElement=new org.jdom.Element("problem_class");
        problemClassElement.addContent("unused declaration");
        element.addContent(problemClassElement);
        org.jdom.Element descriptionElement=new org.jdom.Element("description");
        StringBuffer buf=new StringBuffer();
        composer.appendProblemSynopsis(refElement,buf);
        descriptionElement.addContent(buf.toString());
        element.addContent(descriptionElement);
      }
    }
  }
);
}
