{
  final SvnIdeaRepositoryPoolManager poolManager=new SvnIdeaRepositoryPoolManager(true,null,null);
  final ApplicationLevelNumberConnectionsGuardImpl guard=SvnIdeaRepositoryPoolManager.getOurGuard();
  guard.setDelay(20);
  ((CachingSvnRepositoryPool)poolManager.getPool()).setConnectionTimeout(20);
  testBigFlow(poolManager,false);
  try {
    Thread.sleep(50);
  }
 catch (  InterruptedException e) {
  }
  Assert.assertEquals(0,guard.getCurrentlyActiveConnections());
  final CachingSvnRepositoryPool pool=(CachingSvnRepositoryPool)poolManager.getPool();
  Map<String,CachingSvnRepositoryPool.RepoGroup> groups=pool.getGroups();
  Assert.assertEquals(1,groups.size());
  CachingSvnRepositoryPool.RepoGroup group=groups.values().iterator().next();
  Assert.assertEquals(0,group.getUsedSize());
  Assert.assertEquals(0,group.getInactiveSize());
  poolManager.dispose();
  checkAfterDispose(poolManager);
}
