{
  final JPanel mainPanel=new JPanel();
  mainPanel.setLayout(new BorderLayout());
  myChangesBrowser=new RepositoryChangesBrowser(myProject,Collections.singletonList(myChangeList),new ArrayList<Change>(myChangeList.getChanges()),myChangeList){
    @Override protected void showDiffForChanges(    final Change[] changesArray,    final int indexInSelection){
      if (myInAir && (myConvertor != null)) {
        final Change[] convertedChanges=new Change[changesArray.length];
        for (int i=0; i < changesArray.length; i++) {
          Change change=changesArray[i];
          convertedChanges[i]=myConvertor.fun(change);
        }
        super.showDiffForChanges(convertedChanges,indexInSelection);
      }
 else {
        super.showDiffForChanges(changesArray,indexInSelection);
      }
    }
  }
;
  myChangesBrowser.setUseCase(myInAir ? CommittedChangesBrowserUseCase.IN_AIR : null);
  mainPanel.add(myChangesBrowser,BorderLayout.CENTER);
  if (myCommitMessageArea != null) {
    JPanel commitPanel=new JPanel(new BorderLayout());
    JComponent separator=SeparatorFactory.createSeparator(VcsBundle.message("label.commit.comment"),myCommitMessageArea);
    commitPanel.add(separator,BorderLayout.NORTH);
    commitPanel.add(new JScrollPane(myCommitMessageArea),BorderLayout.CENTER);
    mainPanel.add(commitPanel,BorderLayout.SOUTH);
  }
  return mainPanel;
}
