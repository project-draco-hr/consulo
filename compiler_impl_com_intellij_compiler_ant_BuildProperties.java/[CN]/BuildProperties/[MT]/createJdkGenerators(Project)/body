{
  final ProjectJdk[] jdks=getUsedJdks(project);
  if (jdks.length > 0) {
    add(new Comment(CompilerBundle.message("generated.ant.build.jdk.definitions.comment")),1);
    for (    final ProjectJdk jdk : jdks) {
      if (jdk.getHomeDirectory() == null) {
        continue;
      }
      final File home=VfsUtil.virtualToIoFile(jdk.getHomeDirectory());
      File homeDir;
      try {
        homeDir=home.getCanonicalFile();
      }
 catch (      IOException e) {
        homeDir=home;
      }
      final String jdkName=jdk.getName();
      final String jdkHomeProperty=getJdkHomeProperty(jdkName);
      final FileSet fileSet=new FileSet(propertyRef(jdkHomeProperty));
      final String[] urls=jdk.getRootProvider().getUrls(OrderRootType.COMPILATION_CLASSES);
      for (      String url : urls) {
        final String path=GenerationUtils.trimJarSeparator(VirtualFileManager.extractPath(url));
        final File pathElement=new File(path);
        final String relativePath=FileUtil.getRelativePath(homeDir,pathElement);
        if (relativePath != null) {
          fileSet.add(new Include(relativePath.replace(File.separatorChar,'/')));
        }
      }
      final Path jdkPath=new Path(getJdkPathId(jdkName));
      jdkPath.add(fileSet);
      add(jdkPath);
    }
  }
  final ProjectJdk projectJdk=ProjectRootManager.getInstance(project).getProjectJdk();
  add(new Property(PROPERTY_PROJECT_JDK_HOME,projectJdk != null ? propertyRef(getJdkHomeProperty(projectJdk.getName())) : ""),1);
  add(new Property(PROPERTY_PROJECT_JDK_BIN,projectJdk != null ? propertyRef(getJdkBinProperty(projectJdk.getName())) : ""),1);
  add(new Property(PROPERTY_PROJECT_JDK_CLASSPATH,projectJdk != null ? getJdkPathId(projectJdk.getName()) : ""));
}
