{
  if (aClass.isInterface() || aClass.isAnnotationType() || aClass.isEnum()) {
    return;
  }
  if (aClass instanceof PsiTypeParameter || aClass instanceof PsiAnonymousClass) {
    return;
  }
  if (aClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  if (UtilityClassUtil.isUtilityClass(aClass)) {
    return;
  }
  final PsiMethod[] methods=aClass.getMethods();
  for (  final PsiMethod method : methods) {
    final String methodName=method.getName();
    final PsiParameterList paramList=method.getParameterList();
    final PsiParameter[] parameters=paramList.getParameters();
    if (HardcodedMethodConstants.TO_STRING.equals(methodName) && parameters.length == 0) {
      return;
    }
  }
  registerClassError(aClass);
}
