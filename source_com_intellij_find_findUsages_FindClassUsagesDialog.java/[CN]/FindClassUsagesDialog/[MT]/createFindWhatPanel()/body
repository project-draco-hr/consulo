{
  JPanel findWhatPanel=new JPanel();
  findWhatPanel.setBorder(IdeBorderFactory.createTitledBorder("Find"));
  findWhatPanel.setLayout(new BoxLayout(findWhatPanel,BoxLayout.Y_AXIS));
  myCbUsages=addCheckboxToPanel("Usages",myFindUsagesOptions.isUsages,findWhatPanel,true,'U');
  PsiClass psiClass=(PsiClass)getPsiElement();
  myCbMethodsUsages=addCheckboxToPanel("Usages of methods",myFindUsagesOptions.isMethodsUsages,findWhatPanel,true,'m');
  if (!psiClass.isAnnotationType()) {
    myCbFieldsUsages=addCheckboxToPanel("Usages of fields",myFindUsagesOptions.isFieldsUsages,findWhatPanel,true,'f');
    if (psiClass.isInterface()) {
      myCbImplementingClasses=addCheckboxToPanel("Implementing classes",myFindUsagesOptions.isImplementingClasses,findWhatPanel,true,'I');
      myCbDerivedInterfaces=addCheckboxToPanel("Derived interfaces",myFindUsagesOptions.isDerivedInterfaces,findWhatPanel,true,'D');
    }
 else     if (!psiClass.hasModifierProperty(PsiModifier.FINAL)) {
      myCbDerivedClasses=addCheckboxToPanel("Derived classes",myFindUsagesOptions.isDerivedClasses,findWhatPanel,true,'D');
    }
  }
  return findWhatPanel;
}
