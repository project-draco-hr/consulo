{
  JPanel findWhatPanel=new JPanel();
  findWhatPanel.setBorder(IdeBorderFactory.createTitledBorder(FindBundle.message("find.what.group")));
  findWhatPanel.setLayout(new BoxLayout(findWhatPanel,BoxLayout.Y_AXIS));
  myCbUsages=addCheckboxToPanel(FindBundle.message("find.what.usages.checkbox"),myFindUsagesOptions.isUsages,findWhatPanel,true);
  PsiClass psiClass=(PsiClass)getPsiElement();
  myCbMethodsUsages=addCheckboxToPanel(FindBundle.message("find.what.methods.usages.checkbox"),myFindUsagesOptions.isMethodsUsages,findWhatPanel,true);
  if (!psiClass.isAnnotationType()) {
    myCbFieldsUsages=addCheckboxToPanel(FindBundle.message("find.what.fields.usages.checkbox"),myFindUsagesOptions.isFieldsUsages,findWhatPanel,true);
    if (psiClass.isInterface()) {
      myCbImplementingClasses=addCheckboxToPanel(FindBundle.message("find.what.implementing.classes.checkbox"),myFindUsagesOptions.isImplementingClasses,findWhatPanel,true);
      myCbDerivedInterfaces=addCheckboxToPanel(FindBundle.message("find.what.derived.interfaces.checkbox"),myFindUsagesOptions.isDerivedInterfaces,findWhatPanel,true);
    }
 else     if (!psiClass.hasModifierProperty(PsiModifier.FINAL)) {
      myCbDerivedClasses=addCheckboxToPanel(FindBundle.message("find.what.derived.classes.checkbox"),myFindUsagesOptions.isDerivedClasses,findWhatPanel,true);
    }
  }
  return findWhatPanel;
}
