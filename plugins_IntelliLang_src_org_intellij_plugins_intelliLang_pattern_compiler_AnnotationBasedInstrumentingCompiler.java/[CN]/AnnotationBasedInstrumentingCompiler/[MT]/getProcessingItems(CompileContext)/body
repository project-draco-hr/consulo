{
  if (!isEnabled()) {
    return ProcessingItem.EMPTY_ARRAY;
  }
  final Project project=context.getProject();
  final Set<InstrumentationItem> result=new HashSet<InstrumentationItem>();
  final PsiSearchHelper searchHelper=PsiManager.getInstance(context.getProject()).getSearchHelper();
  DumbService.getInstance(project).waitForSmartMode();
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      final String[] names=getAnnotationNames(project);
      for (      String name : names) {
        final GlobalSearchScope scope=GlobalSearchScope.projectScope(project);
        final PsiClass psiClass=JavaPsiFacade.getInstance(project).findClass(name,GlobalSearchScope.allScope(project));
        if (psiClass == null) {
          context.addMessage(CompilerMessageCategory.ERROR,"Cannot find class " + name,null,-1,-1);
          continue;
        }
        searchHelper.processAllFilesWithWord(StringUtil.getShortName(name),scope,new Processor<PsiFile>(){
          public boolean process(          PsiFile psifile){
            if (StdLanguages.JAVA == psifile.getLanguage() && psifile.getVirtualFile() != null && psifile instanceof PsiJavaFile) {
              addClassFiles((PsiJavaFile)psifile,result,project);
            }
            return true;
          }
        }
,true);
      }
    }
  }
);
  return result.toArray(new ProcessingItem[result.size()]);
}
