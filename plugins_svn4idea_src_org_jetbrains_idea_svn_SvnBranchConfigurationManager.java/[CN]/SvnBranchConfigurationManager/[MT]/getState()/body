{
  final ConfigurationBean result=new ConfigurationBean();
  result.myVersion=myConfigurationBean.myVersion;
  final UrlSerializationHelper helper=new UrlSerializationHelper(SvnVcs.getInstance(myProject));
  for (  VirtualFile root : myBunch.getMapCopy().keySet()) {
    final String key=root.getPath();
    final SvnBranchConfigurationNew configOrig=myBunch.getConfig(root);
    final SvnBranchConfiguration configuration=new SvnBranchConfiguration();
    configuration.setTrunkUrl(configOrig.getTrunkUrl());
    configuration.setUserinfoInUrl(configOrig.isUserinfoInUrl());
    configuration.setBranchUrls(configOrig.getBranchUrls());
    final HashMap<String,List<SvnBranchItem>> map=new HashMap<String,List<SvnBranchItem>>();
    final Map<String,InfoStorage<List<SvnBranchItem>>> origMap=configOrig.getBranchMap();
    for (    String origKey : origMap.keySet()) {
      map.put(origKey,origMap.get(origKey).getValue());
    }
    configuration.setBranchMap(map);
    result.myConfigurationMap.put(key,helper.prepareForSerialization(configuration));
  }
  result.mySupportsUserInfoFilter=true;
  return result;
}
