{
  super(new BorderLayout());
  JTabbedPane tabs=new JTabbedPane(JTabbedPane.BOTTOM);
  @NonNls String[] tags=new String[]{"@author","@version","@since"};
  tabs.add(InspectionsBundle.message("inspection.javadoc.option.tab.title"),createOptionsPanel(new String[]{JavaDocLocalInspection.NONE,JavaDocLocalInspection.PUBLIC,JavaDocLocalInspection.PACKAGE_LOCAL},tags,TOP_LEVEL_CLASS_OPTIONS));
  tags=new String[]{"@return","@param",InspectionsBundle.message("inspection.javadoc.throws.or.exception.option")};
  tabs.add(InspectionsBundle.message("inspection.javadoc.option.tab.title1"),createOptionsPanel(new String[]{JavaDocLocalInspection.NONE,JavaDocLocalInspection.PUBLIC,JavaDocLocalInspection.PROTECTED,JavaDocLocalInspection.PACKAGE_LOCAL,JavaDocLocalInspection.PRIVATE},tags,METHOD_OPTIONS));
  tabs.add(InspectionsBundle.message("inspection.javadoc.option.tab.title2"),createOptionsPanel(new String[]{JavaDocLocalInspection.NONE,JavaDocLocalInspection.PUBLIC,JavaDocLocalInspection.PROTECTED,JavaDocLocalInspection.PACKAGE_LOCAL,JavaDocLocalInspection.PRIVATE},null,FIELD_OPTIONS));
  tabs.add(InspectionsBundle.message("inspection.javadoc.option.tab.title3"),createOptionsPanel(new String[]{JavaDocLocalInspection.NONE,JavaDocLocalInspection.PUBLIC,JavaDocLocalInspection.PROTECTED,JavaDocLocalInspection.PACKAGE_LOCAL,JavaDocLocalInspection.PRIVATE},null,INNER_CLASS_OPTIONS));
  add(tabs,BorderLayout.CENTER);
  final JCheckBox checkBox=new JCheckBox(InspectionsBundle.message("inspection.javadoc.option.ignore.deprecated"),IGNORE_DEPRECATED);
  checkBox.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      IGNORE_DEPRECATED=checkBox.isSelected();
    }
  }
);
  add(checkBox,BorderLayout.SOUTH);
  add(createAdditionalJavadocTagsPanel(),BorderLayout.NORTH);
}
