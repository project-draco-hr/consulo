{
  if (IGNORE_JAVADOC_PERIOD)   return;
  PsiDocTag[] tags=docComment.getTags();
  int dotIndex=docComment.getText().indexOf('.');
  int tagOffset=0;
  if (dotIndex >= 0) {
    final PsiDocCommentOwner owner=PsiTreeUtil.getParentOfType(docComment,PsiDocCommentOwner.class);
    for (    PsiDocTag tag : tags) {
      final String tagName=tag.getName();
      final JavadocTagInfo tagInfo=tag.getManager().getJavadocManager().getTagInfo(tagName);
      if (tagInfo != null && tagInfo.isValidInContext(owner) && !tagInfo.isInline()) {
        tagOffset=tag.getTextOffset();
        break;
      }
    }
  }
  if (dotIndex == -1 || tagOffset > 0 && dotIndex + docComment.getTextOffset() > tagOffset) {
    problems.add(manager.createProblemDescriptor(docComment.getFirstChild(),InspectionsBundle.message("inspection.javadoc.problem.descriptor1"),null,ProblemHighlightType.GENERIC_ERROR_OR_WARNING,false));
  }
}
