{
  JPanel panel=new JPanel(new BorderLayout());
  final HashSet<String> packages=new HashSet<String>();
  for (int i=0; i < myDirectories.length; i++) {
    PsiDirectory directory=myDirectories[i];
    packages.add(directory.getPackage().getQualifiedName());
  }
  final String moveDescription;
  LOG.assertTrue(myDirectories.length > 0);
  LOG.assertTrue(packages.size() > 0);
  if (packages.size() > 1) {
    moveDescription="Move " + packages.size() + " packages to another package";
  }
 else {
    final String qName=packages.iterator().next();
    moveDescription="Move package '" + qName + "' to another package";
  }
  myRbMovePackage=new JRadioButton(moveDescription,true);
  final String rearrangeDescription;
  if (myDirectories.length > 1) {
    rearrangeDescription="Move " + myDirectories.length + " directories to another source root";
  }
 else {
    rearrangeDescription="Move directory " + myDirectories[0].getVirtualFile().getPresentableUrl() + " to another source root";
  }
  myRbRearrangePackage=new JRadioButton(rearrangeDescription);
  myRbMovePackage.setMnemonic('p');
  myRbRearrangePackage.setMnemonic('r');
  ButtonGroup gr=new ButtonGroup();
  gr.add(myRbMovePackage);
  gr.add(myRbRearrangePackage);
  Box box=Box.createVerticalBox();
  box.add(Box.createVerticalStrut(5));
  box.add(myRbMovePackage);
  box.add(myRbRearrangePackage);
  panel.add(box,BorderLayout.CENTER);
  return panel;
}
