{
  if (myEnvironment != null && myModuleName != null) {
    return loadCommittedChanges(settings,myModuleName,myEnvironment);
  }
  LinkedHashSet<CvsChangeList> result=new LinkedHashSet<CvsChangeList>();
  final CvsVcs2 vcs=CvsVcs2.getInstance(myProject);
  final VirtualFile[] files=ProjectLevelVcsManager.getInstance(myProject).getRootsUnderVcs(vcs);
  for (  VirtualFile file : files) {
    if (vcs.fileIsUnderVcs(PeerFactory.getInstance().getVcsContextFactory().createFilePathOn(file))) {
      result.addAll(getCommittedChanges(settings,file,0));
    }
  }
  return new ArrayList<CvsChangeList>(result);
}
