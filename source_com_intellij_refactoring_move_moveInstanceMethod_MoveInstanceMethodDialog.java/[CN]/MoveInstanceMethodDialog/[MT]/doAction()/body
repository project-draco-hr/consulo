{
  Map<PsiClass,String> parameterNames=new HashMap<PsiClass,String>();
  final Iterator<EditorTextField> fieldsIterator=myOldClassParameterNameFields.iterator();
  final Iterator<PsiClass> classesIterator=myRefThisClasses.iterator();
  for (; fieldsIterator.hasNext(); ) {
    EditorTextField field=fieldsIterator.next();
    final PsiClass aClass=classesIterator.next();
    String parameterName=field.getText().trim();
    if (!myMethod.getManager().getNameHelper().isIdentifier(parameterName)) {
      Messages.showErrorDialog(getProject(),"Please Enter a Valid name for Parameter",myRefactoringName);
      return;
    }
    parameterNames.put(aClass,parameterName);
  }
  final PsiVariable targetVariable=(PsiVariable)myList.getSelectedValue();
  final MoveInstanceMethodProcessor processor=new MoveInstanceMethodProcessor(myMethod.getProject(),myMethod,targetVariable,myVisibilityPanel.getVisibility(),parameterNames);
  if (!verifyTargetClass(processor.getTargetClass()))   return;
  invokeRefactoring(processor);
}
