{
  if (ApplicationManagerEx.getApplicationEx().isInternal()) {
    final PsiImportList[] resultList=new PsiImportList[1];
    final PsiManager psiManager=PsiManager.getInstance(myProject);
    final boolean[] writable=new boolean[1];
    writable[0]=true;
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        if (!file.isWritable()) {
          writable[0]=false;
          return;
        }
        final PsiFile psiFile=psiManager.findFile(file);
        if (psiFile instanceof PsiJavaFile) {
          resultList[0]=CodeStyleManager.getInstance(myProject).prepareOptimizeImportsResult((PsiJavaFile)psiFile);
        }
      }
    }
);
    if (!writable[0])     return;
    if (resultList[0] != null) {
      Runnable runnable=new Runnable(){
        public void run(){
          CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
            public void run(){
              ApplicationManager.getApplication().runWriteAction(new Runnable(){
                public void run(){
                  try {
                    final PsiFile psiFile=psiManager.findFile(file);
                    if (psiFile != null) {
                      final PsiImportList importList=((PsiJavaFile)psiFile).getImportList();
                      if (importList != null) {
                        importList.replace(resultList[0]);
                      }
                    }
                    final Document document=FileDocumentManager.getInstance().getDocument(file);
                    if (document != null) {
                      FileDocumentManager.getInstance().saveDocument(document);
                    }
                  }
 catch (                  IncorrectOperationException e) {
                    LOG.error(e);
                  }
                }
              }
);
            }
          }
,VcsBundle.message("process.title.optimize.imports"),null);
        }
      }
;
      if (ApplicationManager.getApplication().isDispatchThread()) {
        runnable.run();
      }
 else {
        ApplicationManager.getApplication().invokeAndWait(runnable,ModalityState.NON_MMODAL);
      }
    }
  }
}
