{
  try {
    final RefreshableOnComponent filterUI=provider.createFilterUI();
    boolean ok=true;
    if (filterUI != null) {
      final FilterDialog dlg=new FilterDialog(myProject,filterUI);
      dlg.show();
      ok=dlg.getExitCode() == DialogWrapper.OK_EXIT_CODE;
    }
 else {
      ok=true;
    }
    if (ok) {
      final List<RepositoryVersion> versions=new ArrayList<RepositoryVersion>();
      final List<VcsException> exceptions=new ArrayList<VcsException>();
      final boolean done=ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
        public void run(){
          try {
            versions.addAll(provider.getFilteredVersions());
          }
 catch (          VcsException e) {
            exceptions.add(e);
          }
        }
      }
,VcsBundle.message("browse.changes.progress.title"),true,myProject);
      if (!done)       return;
      if (!exceptions.isEmpty()) {
        Messages.showErrorDialog(myProject,VcsBundle.message("browse.changes.error.message",exceptions.get(0).getMessage()),VcsBundle.message("browse.changes.error.title"));
        return;
      }
      if (versions.isEmpty()) {
        Messages.showInfoMessage(myProject,VcsBundle.message("browse.changes.nothing.found"),VcsBundle.message("browse.changes.nothing.found.title"));
        return;
      }
      showChangesBrowser(new RepositoryVersionTableModel(provider,versions),provider,title,filterUI != null);
    }
  }
 catch (  VcsException e) {
    Messages.showErrorDialog(myProject,VcsBundle.message("browse.changes.error.message",e.getMessage()),VcsBundle.message("browse.changes.error.title"));
  }
}
