{
  final RefreshableOnComponent filterUI=provider.createFilterUI();
  boolean ok=true;
  if (filterUI != null) {
    final FilterDialog dlg=new FilterDialog(myProject,filterUI);
    dlg.show();
    ok=dlg.getExitCode() == DialogWrapper.OK_EXIT_CODE;
  }
 else {
    ok=true;
  }
  if (ok) {
    final List<CommittedChangeList> versions=new ArrayList<CommittedChangeList>();
    final List<VcsException> exceptions=new ArrayList<VcsException>();
    final Ref<CommittedChangesTableModel> tableModelRef=new Ref<CommittedChangesTableModel>();
    final boolean done=ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
      public void run(){
        try {
          versions.addAll(provider.getRecentChanges());
        }
 catch (        VcsException e) {
          exceptions.add(e);
        }
        tableModelRef.set(new CommittedChangesTableModel(versions));
      }
    }
,VcsBundle.message("browse.changes.progress.title"),true,myProject);
    if (!done)     return;
    if (!exceptions.isEmpty()) {
      Messages.showErrorDialog(myProject,VcsBundle.message("browse.changes.error.message",exceptions.get(0).getMessage()),VcsBundle.message("browse.changes.error.title"));
      return;
    }
    if (versions.isEmpty()) {
      Messages.showInfoMessage(myProject,VcsBundle.message("browse.changes.nothing.found"),VcsBundle.message("browse.changes.nothing.found.title"));
      return;
    }
    showChangesBrowser(tableModelRef.get(),provider,title,filterUI != null);
  }
}
