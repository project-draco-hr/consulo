{
  final ArrayList<VcsException> exceptions=new ArrayList<VcsException>();
  final ProgressWindow progressWindow=new ProgressWindow(true,myProject);
  progressWindow.setTitle("Checking In Files");
  final ProgressManager progressManager=ApplicationManager.getApplication().getComponent(ProgressManager.class);
  Collection<VirtualFile> roots=((CheckinProjectPanelImpl)checkinProjectPanel).getRoots();
  Collection<VirtualFile> correspondingRoots=new ArrayList<VirtualFile>();
  for (Iterator<VirtualFile> iterator=roots.iterator(); iterator.hasNext(); ) {
    VirtualFile virtualFile=iterator.next();
    AbstractVcs vcs=ProjectLevelVcsManager.getInstance(myProject).getVcsFor(virtualFile);
    CheckinEnvironment env=vcs.getCheckinEnvironment();
    if (env == abstractVcs.getCheckinEnvironment())     correspondingRoots.add(virtualFile);
  }
  final Map<CheckinEnvironment,List<VcsOperation>> checkinOperations=((CheckinProjectPanelImpl)checkinProjectPanel).getCheckinOperations();
  final Semaphore semaphore=new Semaphore();
  semaphore.down();
  new Thread("Check In"){
    public void run(){
      Runnable checkinAction=new Runnable(){
        public void run(){
          try {
            progressManager.runProcess(new Runnable(){
              public void run(){
                final CheckinHandler checkinHandler=new CheckinHandler(myProject,abstractVcs);
                Collection<VcsOperation> vcsOperations=checkinOperations.get(abstractVcs.getCheckinEnvironment());
                if (vcsOperations == null)                 vcsOperations=new ArrayList<VcsOperation>();
                final List<VcsException> abstractVcsExceptions=checkinHandler.checkin(vcsOperations.toArray(new VcsOperation[vcsOperations.size()]),checkinParameters);
                exceptions.addAll(abstractVcsExceptions);
                semaphore.up();
              }
            }
,progressWindow);
          }
 catch (          ProcessCanceledException e) {
            return;
          }
        }
      }
;
      ApplicationManager.getApplication().runReadAction(checkinAction);
    }
  }
.start();
  semaphore.waitFor();
  return exceptions;
}
