{
  boolean hasDirs=false;
  for (  VirtualFile file : files) {
    if (file.isDirectory()) {
      hasDirs=true;
    }
  }
  final List<VirtualFile> fileList=new ArrayList<VirtualFile>();
  if (!hasDirs) {
    Collections.addAll(fileList,files);
  }
 else {
    ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
      public void run(){
        for (        VirtualFile file : files) {
          if (file.isDirectory()) {
            ProjectRootManager.getInstance(project).getFileIndex().iterateContentUnderDirectory(file,new ContentIterator(){
              public boolean processFile(              final VirtualFile fileOrDir){
                ProgressManager.getInstance().checkCanceled();
                if (!fileOrDir.isDirectory() && isEnabled(project,activeVcs,fileOrDir) && !fileList.contains(fileOrDir)) {
                  fileList.add(fileOrDir);
                }
                return true;
              }
            }
);
          }
 else {
            if (!fileList.contains(file)) {
              fileList.add(file);
            }
          }
        }
      }
    }
,SvnBundle.message("progress.searching.for.files.with.conflicts"),true,project);
  }
  AbstractVcsHelper.getInstance(project).showMergeDialog(fileList,new SvnMergeProvider(project));
}
