{
  super.visitReferenceExpression(referenceExpression);
  if (containsClose) {
    return;
  }
  final String text=referenceExpression.getText();
  if (text == null || !text.equals(resourceName)) {
    return;
  }
  final PsiElement parent=referenceExpression.getParent();
  if (!(parent instanceof PsiExpressionList)) {
    return;
  }
  final PsiExpressionList argumentList=(PsiExpressionList)parent;
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 1) {
    return;
  }
  final PsiElement grandParent=parent.getParent();
  if (!(grandParent instanceof PsiMethodCallExpression)) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
  final PsiElement target=referenceExpression.resolve();
  if (target == null || !target.equals(resource)) {
    return;
  }
  final PsiMethod method=methodCallExpression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiCodeBlock codeBlock=method.getBody();
  if (codeBlock == null) {
    return;
  }
  final PsiParameterList parameterList=method.getParameterList();
  final PsiParameter[] parameters=parameterList.getParameters();
  if (parameters.length != 1) {
    return;
  }
  final PsiParameter parameter=parameters[0];
  final PsiStatement[] statements=codeBlock.getStatements();
  for (  PsiStatement statement : statements) {
    if (isResourceClose(statement,parameter)) {
      containsClose=true;
      return;
    }
  }
}
