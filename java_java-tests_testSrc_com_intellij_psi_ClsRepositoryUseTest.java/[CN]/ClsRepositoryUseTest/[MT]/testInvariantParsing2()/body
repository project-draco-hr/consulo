{
  disableJdk();
  final PsiClass collection=myJavaFacade.findClass("java.util.Collection",RESOLVE_SCOPE);
  assertNotNull(collection);
  final PsiMethod[] methods=collection.findMethodsByName("removeAll",false);
  assertEquals(1,methods.length);
  final PsiParameter[] parameters=methods[0].getParameterList().getParameters();
  assertEquals(1,parameters.length);
  final PsiType parameterType=parameters[0].getType();
  assertTrue(parameterType instanceof PsiClassType);
  final PsiClassType psiClassType=((PsiClassType)parameterType);
  final PsiClassType.ClassResolveResult resolveResult=psiClassType.resolveGenerics();
  final PsiTypeParameter[] typeParameters=resolveResult.getElement().getTypeParameters();
  assertEquals(1,typeParameters.length);
  final PsiType substitution=resolveResult.getSubstitutor().substitute(typeParameters[0]);
  assertTrue(substitution instanceof PsiWildcardType);
  assertEquals(PsiWildcardType.createUnbounded(myPsiManager),substitution);
}
