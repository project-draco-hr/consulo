{
  final File classes=createTempDir("classes");
  final File com=new File(classes,"com");
  com.mkdir();
  File dataPath=new File(PathManagerEx.getTestDataPath() + "/psi/cls");
  final File target=new File(com,"TestClass.class");
  FileUtil.copy(new File(dataPath,"1/TestClass.class"),target);
  target.setLastModified(System.currentTimeMillis());
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        VirtualFile vDir=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(classes);
        assertNotNull(vDir);
        addLibraryToRoots(vDir,OrderRootType.CLASSES);
      }
 catch (      Exception e) {
        LOG.error(e);
      }
    }
  }
);
  PsiClass psiClass=myJavaFacade.findClass("com.TestClass",GlobalSearchScope.allScope(myProject));
  PsiJavaFile psiFile=(PsiJavaFile)psiClass.getContainingFile();
  final VirtualFile vFile=psiFile.getVirtualFile();
  assertNotNull(psiClass);
  assertTrue(psiClass.isValid());
  assertTrue(psiFile.isValid());
  assertEquals(1,psiFile.getClasses().length);
  assertSame(psiClass,psiFile.getClasses()[0]);
  assertEquals(2,psiClass.getFields().length);
  assertEquals("field11",psiClass.getFields()[0].getName());
  assertEquals("field12",psiClass.getFields()[1].getName());
  assertEquals(2,psiClass.getMethods().length);
  assertEquals("TestClass",psiClass.getMethods()[0].getName());
  assertEquals("method1",psiClass.getMethods()[1].getName());
  FileUtil.copy(new File(dataPath,"2/TestClass.class"),target);
  target.setLastModified(System.currentTimeMillis() + 5000);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        vFile.refresh(false,false);
      }
 catch (      Exception e) {
        LOG.error(e);
      }
    }
  }
);
  assertTrue(psiFile.isValid());
  PsiClass oldClass=psiClass;
  psiClass=myJavaFacade.findClass("com.TestClass",GlobalSearchScope.allScope(myProject));
  assertNotSame(oldClass,psiClass);
  assertFalse(oldClass.isValid());
  assertNotNull(psiClass);
  assertEquals(1,psiFile.getClasses().length);
  assertSame(psiClass,psiFile.getClasses()[0]);
  assertTrue(psiClass.isValid());
  assertEquals(1,psiClass.getFields().length);
  assertEquals("field2",psiClass.getFields()[0].getName());
  assertEquals(2,psiClass.getMethods().length);
  assertEquals("TestClass",psiClass.getMethods()[0].getName());
  assertEquals("method2",psiClass.getMethods()[1].getName());
}
