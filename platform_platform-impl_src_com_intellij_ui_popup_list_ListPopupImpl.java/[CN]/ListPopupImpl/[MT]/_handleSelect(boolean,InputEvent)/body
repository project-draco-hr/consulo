{
  if (myList.getSelectedIndex() == -1)   return false;
  if (getSpeedSearch().isHoldingFilter() && myList.getModel().getSize() == 0)   return false;
  if (myList.getSelectedIndex() == getIndexForShowingChild()) {
    if (myChild != null && !myChild.isVisible())     setIndexForShowingChild(-1);
    return false;
  }
  final Object[] selectedValues=myList.getSelectedValues();
  final ListPopupStep<Object> listStep=getListStep();
  if (!listStep.isSelectable(selectedValues[0]))   return false;
  if ((listStep instanceof MultiSelectionListPopupStep<?> && !((MultiSelectionListPopupStep<Object>)listStep).hasSubstep(Arrays.asList(selectedValues)) || !listStep.hasSubstep(selectedValues[0])) && !handleFinalChoices)   return false;
  disposeChildren();
  if (myListModel.getSize() == 0) {
    setFinalRunnable(myStep.getFinalRunnable());
    setOk(true);
    disposeAllParents(e);
    setIndexForShowingChild(-1);
    return true;
  }
  valuesSelected(selectedValues);
  final PopupStep nextStep=listStep instanceof MultiSelectionListPopupStep<?> ? ((MultiSelectionListPopupStep<Object>)listStep).onChosen(Arrays.asList(selectedValues),handleFinalChoices) : listStep.onChosen(selectedValues[0],handleFinalChoices);
  return handleNextStep(nextStep,selectedValues.length == 1 ? selectedValues[0] : null,e);
}
