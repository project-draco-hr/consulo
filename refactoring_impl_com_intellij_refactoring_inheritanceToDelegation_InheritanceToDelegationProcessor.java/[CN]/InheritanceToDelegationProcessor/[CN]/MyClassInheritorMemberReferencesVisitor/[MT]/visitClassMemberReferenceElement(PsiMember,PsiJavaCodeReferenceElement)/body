{
  if ("super".equals(classMemberReference.getText()) && classMemberReference.getParent() instanceof PsiMethodCallExpression) {
    return;
  }
  if (classMember != null && myBaseClassMembers.contains(classMember) && !isDelegated(classMember)) {
    final FieldAccessibility delegateFieldVisibility=new FieldAccessibility(true,getPsiClass());
    final InheritanceToDelegationUsageInfo usageInfo;
    if (classMemberReference instanceof PsiReferenceExpression) {
      if (((PsiReferenceExpression)classMemberReference).getQualifierExpression() == null) {
        usageInfo=new UnqualifiedNonDelegatedMemberUsageInfo(classMemberReference,classMember,delegateFieldVisibility);
      }
 else {
        usageInfo=new NonDelegatedMemberUsageInfo(((PsiReferenceExpression)classMemberReference).getQualifierExpression(),classMember,delegateFieldVisibility);
      }
      myUsageInfoStorage.add(usageInfo);
    }
 else {
      usageInfo=new UnqualifiedNonDelegatedMemberUsageInfo(classMemberReference,classMember,delegateFieldVisibility);
      myUsageInfoStorage.add(usageInfo);
    }
  }
}
