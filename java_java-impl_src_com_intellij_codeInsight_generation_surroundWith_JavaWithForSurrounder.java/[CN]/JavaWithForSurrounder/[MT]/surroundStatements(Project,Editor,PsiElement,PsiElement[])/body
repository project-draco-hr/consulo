{
  PsiManager manager=PsiManager.getInstance(project);
  PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
  CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(project);
  statements=SurroundWithUtil.moveDeclarationsOut(container,statements,true);
  if (statements.length == 0) {
    return null;
  }
  @NonNls String text="for(a;b;c){\n}";
  PsiForStatement forStatement=(PsiForStatement)factory.createStatementFromText(text,null);
  forStatement=(PsiForStatement)codeStyleManager.reformat(forStatement);
  forStatement=(PsiForStatement)container.addAfter(forStatement,statements[statements.length - 1]);
  PsiStatement body=forStatement.getBody();
  if (!(body instanceof PsiBlockStatement)) {
    return null;
  }
  PsiCodeBlock bodyBlock=((PsiBlockStatement)body).getCodeBlock();
  SurroundWithUtil.indentCommentIfNecessary(bodyBlock,statements,factory);
  bodyBlock.addRange(statements[0],statements[statements.length - 1]);
  container.deleteChildRange(statements[0],statements[statements.length - 1]);
  forStatement=CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(forStatement);
  PsiStatement initialization=forStatement.getInitialization();
  if (initialization == null) {
    return null;
  }
  TextRange range1=initialization.getTextRange();
  PsiStatement update=forStatement.getUpdate();
  if (update == null) {
    return null;
  }
  TextRange range3=update.getTextRange();
  editor.getDocument().deleteString(range1.getStartOffset(),range3.getEndOffset());
  return new TextRange(range1.getStartOffset(),range1.getStartOffset());
}
