{
  MultiMap<StateStorage,VirtualFile> storageToFiles=MultiMap.createLinkedSet();
  for (  Pair<VirtualFile,StateStorage> pair : changedStorages) {
    storageToFiles.putValue(pair.second,pair.first);
  }
  Collection<String> notReloadableComponents;
  boolean willBeReloaded=false;
  try {
    AccessToken token=WriteAction.start();
    try {
      notReloadableComponents=store.reload(storageToFiles);
    }
 catch (    Throwable e) {
      Messages.showWarningDialog(ProjectBundle.message("project.reload.failed",e.getMessage()),ProjectBundle.message("project.reload.failed.title"));
      return ReloadComponentStoreStatus.ERROR;
    }
 finally {
      token.finish();
    }
    if (ContainerUtil.isEmpty(notReloadableComponents)) {
      return ReloadComponentStoreStatus.SUCCESS;
    }
    willBeReloaded=askToRestart(store,notReloadableComponents,changedStorages);
    return willBeReloaded ? ReloadComponentStoreStatus.RESTART_AGREED : ReloadComponentStoreStatus.RESTART_CANCELLED;
  }
  finally {
    if (!willBeReloaded) {
      for (      StateStorage storage : storageToFiles.keySet()) {
        if (storage instanceof StateStorageBase) {
          ((StateStorageBase)storage).enableSaving();
        }
      }
    }
  }
}
