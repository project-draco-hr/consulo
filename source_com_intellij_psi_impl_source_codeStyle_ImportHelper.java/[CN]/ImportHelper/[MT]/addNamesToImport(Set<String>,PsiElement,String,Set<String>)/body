{
  if (scope instanceof PsiImportList)   return;
  final PsiElement[] children=scope.getChildren();
  for (  PsiElement child : children) {
    addNamesToImport(names,child,thisPackageName,namesToImportStaticly);
    for (    final PsiReference reference : child.getReferences()) {
      if (!(reference instanceof PsiJavaReference))       continue;
      final PsiJavaReference javaReference=(PsiJavaReference)reference;
      PsiJavaCodeReferenceElement referenceElement=null;
      if (javaReference instanceof GenericReference) {
        if (((GenericReference)javaReference).getContextReference() != null)         continue;
      }
      if (reference instanceof PsiJavaCodeReferenceElement) {
        referenceElement=(PsiJavaCodeReferenceElement)child;
        if (referenceElement.getQualifier() != null) {
          continue;
        }
        if (reference instanceof PsiJavaCodeReferenceElementImpl && ((PsiJavaCodeReferenceElementImpl)reference).getKind() == PsiJavaCodeReferenceElementImpl.CLASS_IN_QUALIFIED_NEW_KIND) {
          continue;
        }
      }
      final JavaResolveResult resolveResult=javaReference.advancedResolve(true);
      PsiElement refElement=resolveResult.getElement();
      if (refElement == null && referenceElement != null) {
        refElement=ResolveClassUtil.resolveClass(referenceElement);
      }
      PsiElement currentFileResolveScope=resolveResult.getCurrentFileResolveScope();
      if (!(currentFileResolveScope instanceof PsiImportStatementBase))       continue;
      if (refElement != null) {
        if (referenceElement != null) {
          if (currentFileResolveScope instanceof PsiImportStaticStatement) {
            PsiImportStaticStatement importStaticStatement=(PsiImportStaticStatement)currentFileResolveScope;
            String name=importStaticStatement.getImportReference().getCanonicalText();
            if (importStaticStatement.isOnDemand()) {
              String refName=referenceElement.getReferenceName();
              if (refName != null)               name=name + "." + refName;
            }
            names.add(name);
            namesToImportStaticly.add(name);
            continue;
          }
        }
        if (refElement instanceof PsiClass) {
          String qName=((PsiClass)refElement).getQualifiedName();
          if (hasPackage(qName,thisPackageName))           continue;
          names.add(qName);
        }
      }
    }
  }
}
