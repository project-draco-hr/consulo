{
  PsiJavaCodeReferenceElement ref=statement.getImportReference();
  if (ref == null)   return null;
  int entryIndex=findEntryIndex(statement);
  PsiImportStatementBase[] allStatements=list.getAllImportStatements();
  int[] entries=new int[allStatements.length];
  ArrayList<PsiImportStatementBase> array=new ArrayList<PsiImportStatementBase>();
  for (int i=0; i < allStatements.length; i++) {
    PsiImportStatementBase statement1=allStatements[i];
    int entryIndex1=findEntryIndex(statement1);
    entries[i]=entryIndex1;
    if (entryIndex1 == entryIndex) {
      array.add(statement1);
    }
  }
  PsiImportStatementBase[] statements=array.toArray(new PsiImportStatementBase[array.size()]);
  if (statements.length == 0) {
    int index;
    for (index=entries.length - 1; index >= 0; index--) {
      if (entries[index] < entryIndex)       break;
    }
    index++;
    return index < entries.length ? SourceTreeToPsiMap.psiElementToTree(allStatements[index]) : null;
  }
 else {
    String text=ref.getCanonicalText();
    if (statement.isOnDemand()) {
      text+=".";
    }
    int index=text.length();
    while (true) {
      index=text.lastIndexOf('.',index - 1);
      if (index < 0)       break;
      String prefix=text.substring(0,index + 1);
      PsiImportStatementBase last=null;
      PsiImportStatementBase lastStrict=null;
      for (int i=0; i < statements.length; i++) {
        PsiImportStatementBase statement1=statements[i];
        PsiJavaCodeReferenceElement ref1=statement1.getImportReference();
        if (ref1 != null) {
          String text1=ref1.getCanonicalText();
          if (statement1.isOnDemand()) {
            text1+=".";
          }
          if (text1.startsWith(prefix)) {
            last=statement1;
            if (text1.indexOf('.',prefix.length()) < 0) {
              lastStrict=statement1;
            }
          }
        }
      }
      if (lastStrict != null) {
        return (SourceTreeToPsiMap.psiElementToTree(lastStrict)).getTreeNext();
      }
      if (last != null) {
        return (SourceTreeToPsiMap.psiElementToTree(last)).getTreeNext();
      }
    }
    return null;
  }
}
