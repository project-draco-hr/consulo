{
  final Set<String> importedPackagesOrClasses=new THashSet<String>();
  final StringBuffer buffer=new StringBuffer();
  for (int i=0; i < names.length; i++) {
    String name=names[i];
    String packageOrClassName=getPackageOrClassName(name);
    final boolean implicitlyImported="java.lang".equals(packageOrClassName);
    boolean useOnDemand=implicitlyImported || packagesOrClassesToImportOnDemand.contains(packageOrClassName);
    if (useOnDemand && namesToUseSingle.contains(name)) {
      useOnDemand=false;
    }
    if (useOnDemand && (importedPackagesOrClasses.contains(packageOrClassName) || implicitlyImported))     continue;
    buffer.append("import ");
    if (namesToImportStaticly.contains(name))     buffer.append("static ");
    if (useOnDemand) {
      importedPackagesOrClasses.add(packageOrClassName);
      buffer.append(packageOrClassName);
      buffer.append(".*");
    }
 else {
      buffer.append(name);
    }
    buffer.append(";\n");
  }
  final String text=buffer.toString();
  return text;
}
