{
  File hgrc=new File(new File(targetDir,".hg"),"hgrc");
  if (!hgrc.exists()) {
    return;
  }
  for (int i=0; i < 3; i++) {
    BufferedReader reader=null;
    PrintWriter writer=null;
    try {
      final File tempFile=FileUtil.createTempFile("hgrc","temp");
      tempFile.deleteOnExit();
      reader=new BufferedReader(new FileReader(hgrc));
      writer=new PrintWriter(new FileWriter(tempFile));
      String line;
      while ((line=reader.readLine()) != null) {
        String parseLine=line.trim();
        if (parseLine.startsWith("default") && parseLine.contains("@")) {
          int eqIdx=parseLine.indexOf('=');
          parseLine=parseLine.substring(eqIdx + 1).trim();
          try {
            final URI uri=new URI(parseLine);
            final String urlWithoutAuthData=uri.toString().replace(uri.getUserInfo() + "@","");
            writer.println("default = " + urlWithoutAuthData);
          }
 catch (          Throwable t) {
            writer.println(line);
          }
        }
 else {
          writer.println(line);
        }
      }
      if (!tempFile.renameTo(hgrc)) {
        FileUtil.copy(tempFile,hgrc);
        tempFile.delete();
      }
      return;
    }
 catch (    IOException e) {
      LOG.info(e);
    }
 finally {
      if (reader != null) {
        try {
          reader.close();
        }
 catch (        IOException e) {
          continue;
        }
      }
      if (writer != null) {
        writer.close();
      }
    }
  }
}
