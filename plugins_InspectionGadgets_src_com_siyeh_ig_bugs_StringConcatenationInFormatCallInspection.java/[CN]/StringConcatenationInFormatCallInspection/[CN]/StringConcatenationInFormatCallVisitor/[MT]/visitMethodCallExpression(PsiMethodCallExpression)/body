{
  super.visitMethodCallExpression(expression);
  if (!FormatUtils.isFormatCall(expression)) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression formatArgument=FormatUtils.getFormatArgument(argumentList);
  if (!ExpressionUtils.hasStringType(formatArgument)) {
    return;
  }
  if (!(formatArgument instanceof PsiPolyadicExpression)) {
    return;
  }
  final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)formatArgument;
  final PsiExpression[] operands=polyadicExpression.getOperands();
  int count=0;
  for (  final PsiExpression operand : operands) {
    if (!(operand instanceof PsiReferenceExpression)) {
      continue;
    }
    count++;
    if (count > 1) {
      break;
    }
  }
  if (count == 0) {
    return;
  }
  registerMethodCallError(expression,Boolean.valueOf(count > 1));
}
