{
  PsiManager manager=psiClass.getManager();
  GlobalSearchScope resolveScope=psiClass.getResolveScope();
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(manager.getProject());
  if (psiClass.isInterface()) {
    return facade.findClass(CommonClassNames.JAVA_LANG_OBJECT,resolveScope);
  }
  if (psiClass.isEnum()) {
    return facade.findClass(CommonClassNames.JAVA_LANG_ENUM,resolveScope);
  }
  if (psiClass instanceof PsiAnonymousClass) {
    PsiClassType baseClassReference=((PsiAnonymousClass)psiClass).getBaseClassType();
    PsiClass baseClass=baseClassReference.resolve();
    if (baseClass == null || baseClass.isInterface())     return facade.findClass(CommonClassNames.JAVA_LANG_OBJECT,resolveScope);
    return baseClass;
  }
  if (CommonClassNames.JAVA_LANG_OBJECT.equals(psiClass.getQualifiedName()))   return null;
  final PsiClassType[] referenceElements=psiClass.getExtendsListTypes();
  if (referenceElements.length == 0)   return facade.findClass(CommonClassNames.JAVA_LANG_OBJECT,resolveScope);
  PsiClass psiResoved=referenceElements[0].resolve();
  return psiResoved == null ? facade.findClass(CommonClassNames.JAVA_LANG_OBJECT,resolveScope) : psiResoved;
}
