{
  final Presentation presenation=(Presentation)action.getTemplatePresentation().clone();
  final DataManager dataManager=DataManager.getInstance();
  DataContext context=contextComponent != null ? dataManager.getDataContext(contextComponent) : dataManager.getDataContext();
  AnActionEvent event=new AnActionEvent(inputEvent,context,place != null ? place : ActionPlaces.UNKNOWN,presenation,this,inputEvent.getModifiersEx());
  ActionUtil.performDumbAwareUpdate(action,event,false);
  if (!event.getPresentation().isEnabled()) {
    result.setRejected();
    return;
  }
  ActionUtil.lastUpdateAndCheckDumb(action,event,false);
  if (!event.getPresentation().isEnabled()) {
    result.setRejected();
    return;
  }
  Component component=PlatformDataKeys.CONTEXT_COMPONENT.getData(context);
  if (component != null && !component.isShowing()) {
    result.setRejected();
    return;
  }
  fireBeforeActionPerformed(action,context,event);
  UIUtil.addAwtListener(new AWTEventListener(){
    public void eventDispatched(    AWTEvent event){
      if (event.getID() == WindowEvent.WINDOW_OPENED || event.getID() == WindowEvent.WINDOW_ACTIVATED) {
        if (!result.isProcessed()) {
          result.setDone();
        }
      }
    }
  }
,WindowEvent.WINDOW_EVENT_MASK,result);
  action.actionPerformed(event);
  result.setDone();
  queueActionPerformedEvent(action,context,event);
}
