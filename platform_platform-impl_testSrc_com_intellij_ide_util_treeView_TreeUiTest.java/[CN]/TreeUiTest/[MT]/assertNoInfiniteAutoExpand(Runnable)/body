{
class Level extends Node {
    int myLevel;
    Level(    Node parent,    int level){
      super(parent,"level" + level);
      myLevel=level;
    }
    @Override public Object[] getChildElements(){
      if (super.getChildElements().length == 0) {
        addChild(new Level(this,myLevel + 1));
      }
      return super.getChildElements();
    }
  }
  myRoot.addChild(new Level(myRoot,0));
  activate();
  buildNode("level0",false);
  assertTree("-/\n" + " -level0\n" + "  +level1\n");
  enableExpand.run();
  expand(getPath("level1"));
  assertTree("-/\n" + " -level0\n" + "  -level1\n"+ "   -level2\n"+ "    -level3\n"+ "     -level4\n"+ "      -level5\n"+ "       +level6\n");
  expand(getPath("level6"));
  assertTree("-/\n" + " -level0\n" + "  -level1\n"+ "   -level2\n"+ "    -level3\n"+ "     -level4\n"+ "      -level5\n"+ "       -level6\n"+ "        -level7\n"+ "         -level8\n"+ "          -level9\n"+ "           -level10\n"+ "            +level11\n");
}
