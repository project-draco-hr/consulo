{
  final NodeElement com=new NodeElement("com");
  final NodeElement actionSystem=new NodeElement("actionSystem");
  actionSystem.setForcedParent(com);
  doAndWaitForBuilder(new Runnable(){
    public void run(){
      myRoot.addChild(com).addChild(actionSystem);
      getBuilder().getUi().activate(true);
    }
  }
);
  select(actionSystem,false);
  assertTree("-/\n" + " -com\n" + "  [actionSystem]\n");
  removeFromParentButKeepRef(actionSystem);
  final NodeElement newActionSystem=new NodeElement("actionSystem");
  myStructure.getNodeFor(com).addChild("intellij").addChild("openapi").addChild(newActionSystem);
  assertSame(com,myStructure.getParentElement(actionSystem));
  assertNotSame(com,newActionSystem);
  assertEquals(new NodeElement("openapi"),myStructure.getParentElement(newActionSystem));
  myStructure.setRevalidator(new Revalidator(){
    public NodeElement revalidate(    NodeElement element){
      return element == actionSystem ? newActionSystem : null;
    }
  }
);
  updateFromRoot();
  assertTree("-/\n" + " -com\n" + "  -intellij\n"+ "   -openapi\n"+ "    [actionSystem]\n");
}
