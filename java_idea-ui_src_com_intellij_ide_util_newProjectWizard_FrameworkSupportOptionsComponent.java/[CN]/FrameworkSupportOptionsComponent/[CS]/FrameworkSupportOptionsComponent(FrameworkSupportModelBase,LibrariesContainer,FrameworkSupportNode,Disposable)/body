{
  myModel=model;
  myConfigurable=node.getConfigurable();
  VerticalFlowLayout layout=new VerticalFlowLayout();
  layout.setVerticalFill(true);
  myMainPanel=new JPanel(layout);
  JComponent separator=SeparatorFactory.createSeparator(node.getTitle() + " Settings",null);
  separator.setBorder(IdeBorderFactory.createEmptyBorder(0,0,5,5));
  myMainPanel.add(separator);
  final JComponent component=myConfigurable.getComponent();
  if (component != null) {
    myMainPanel.add(component);
  }
  final boolean addSeparator=component != null;
  final JPanel librariesOptionsPanelWrapper=new JPanel(new BorderLayout());
  myMainPanel.add(librariesOptionsPanelWrapper);
  myConfigurable.addListener(new FrameworkSupportConfigurableListener(){
    public void frameworkVersionChanged(){
      updateLibrariesPanel();
    }
  }
);
  model.addFrameworkListener(new FrameworkSupportModelAdapter(){
    @Override public void wizardStepUpdated(){
      updateLibrariesPanel();
    }
  }
,parentDisposable);
  final CustomLibraryDescription description=createLibraryDescription();
  if (description != null) {
    final boolean libraryOnly=myConfigurable instanceof FrameworkSupportWithLibrary && ((FrameworkSupportWithLibrary)myConfigurable).isLibraryOnly();
    myLibraryOptionsPanel=new LibraryOptionsPanel(description,myModel.getBaseDirectoryForLibrariesPath(),myConfigurable.getSelectedVersion(),container,!libraryOnly);
    Disposer.register(myConfigurable,myLibraryOptionsPanel);
    if (addSeparator) {
      JComponent separator1=SeparatorFactory.createSeparator("Libraries",null);
      separator1.setBorder(IdeBorderFactory.createEmptyBorder(5,0,5,5));
      librariesOptionsPanelWrapper.add(BorderLayout.NORTH,separator1);
    }
    librariesOptionsPanelWrapper.add(BorderLayout.CENTER,myLibraryOptionsPanel.getMainPanel());
  }
}
