{
  if (isStopped)   return;
  if (ApplicationManager.getApplication().isUnitTestMode()) {
synchronized (myQueue) {
      while (!myQueue.isEmpty()) {
        startProcessing(myQueue.poll());
      }
    }
    return;
  }
  final Semaphore semaphore=new Semaphore();
  semaphore.down();
  scheduleTask(new MavenProjectsProcessorTask(){
    public void perform(    Project project,    MavenEmbeddersManager embeddersManager,    MavenConsole console,    MavenProgressIndicator indicator) throws MavenProcessCanceledException {
      semaphore.up();
    }
  }
);
  while (true) {
    if (isStopped || semaphore.waitFor(1000))     return;
  }
}
