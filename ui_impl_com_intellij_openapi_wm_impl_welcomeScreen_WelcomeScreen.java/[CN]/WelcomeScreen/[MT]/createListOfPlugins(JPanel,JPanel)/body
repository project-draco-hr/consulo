{
  IdeaPluginDescriptor[] myInstalledPlugins=PluginManager.getPlugins();
  if (myInstalledPlugins == null || myInstalledPlugins.length == 0) {
    addListItemToPlugins(installedPluginsPanel,makeItalic(UIBundle.message("welcome.screen.plugins.panel.no.plugins.currently.installed.message.text")),null,null,null,null);
    addListItemToPlugins(bundledPluginsPanel,makeItalic(UIBundle.message("welcome.screen.plugins.panel.all.bundled.plugins.were.uninstalled.message.text")),null,null,null,null);
  }
 else {
    final Comparator<IdeaPluginDescriptor> pluginsComparator=new Comparator<IdeaPluginDescriptor>(){
      public int compare(      final IdeaPluginDescriptor o1,      final IdeaPluginDescriptor o2){
        return o1.getName().compareTo(o2.getName());
      }
    }
;
    Arrays.sort(myInstalledPlugins,pluginsComparator);
    int embeddedPlugins=0;
    int installedPlugins=0;
    String preinstalledPrefix=PathManager.getPreinstalledPluginsPath();
    for (    IdeaPluginDescriptor plugin : myInstalledPlugins) {
      if (plugin.getPath().getAbsolutePath().startsWith(preinstalledPrefix)) {
        embeddedPlugins++;
        addListItemToPlugins(bundledPluginsPanel,plugin.getName(),plugin.getDescription(),plugin.getVendorLogoPath(),plugin.getPluginClassLoader(),plugin.getUrl());
      }
 else {
        installedPlugins++;
        addListItemToPlugins(installedPluginsPanel,plugin.getName(),plugin.getDescription(),plugin.getVendorLogoPath(),plugin.getPluginClassLoader(),plugin.getUrl());
      }
    }
    if (embeddedPlugins == 0) {
      addListItemToPlugins(bundledPluginsPanel,makeItalic(UIBundle.message("welcome.screen.plugins.panel.all.bundled.plugins.were.uninstalled.message.text")),null,null,null,null);
    }
    if (installedPlugins == 0) {
      addListItemToPlugins(installedPluginsPanel,makeItalic(UIBundle.message("welcome.screen.plugins.panel.no.plugins.currently.installed.message.text")),null,null,null,null);
    }
  }
}
