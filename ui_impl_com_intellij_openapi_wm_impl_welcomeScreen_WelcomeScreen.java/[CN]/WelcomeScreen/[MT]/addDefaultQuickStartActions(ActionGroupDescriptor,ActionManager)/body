{
  MyActionButton newProject=new MyActionButton(NEW_PROJECT_ICON,null){
    protected void onPress(    InputEvent e){
      NewProjectUtil.createNewProject(null,null);
    }
  }
;
  quickStarts.addButton(newProject,UIBundle.message("welcome.screen.create.new.project.action.name"),UIBundle.message("welcome.screen.create.new.project.action.description"));
  MyActionButton openProject=new ButtonWithExtension(OPEN_PROJECT_ICON,null){
    protected void onPress(    InputEvent e,    final MyActionButton button){
      final AnAction action=new OpenProjectAction();
      action.actionPerformed(new AnActionEvent(e,new DataContext(){
        public Object getData(        String dataId){
          if (DataConstants.PROJECT.equals(dataId)) {
            return null;
          }
          return button;
        }
      }
,ActionPlaces.UNKNOWN,new PresentationFactory().getPresentation(action),actionManager,0));
    }
  }
;
  quickStarts.addButton(openProject,UIBundle.message("welcome.screen.open.project.action.name"),UIBundle.message("welcome.screen.open.project.action.description",ApplicationNamesInfo.getInstance().getFullProductName()));
  MyActionButton openRecentProject=new ButtonWithExtension(REOPEN_RECENT_ICON,null){
    protected void onPress(    InputEvent e,    final MyActionButton button){
      new RecentProjectsAction().showPopup(button,e);
    }
  }
;
  quickStarts.addButton(openRecentProject,UIBundle.message("welcome.screen.reopen.recent.project.action.name"),UIBundle.message("welcome.screen.reopen.recent.project.action.description"));
  MyActionButton getFromVCS=new ButtonWithExtension(FROM_VCS_ICON,null){
    protected void onPress(    InputEvent e,    final MyActionButton button){
      new GetFromVcsAction().showPopup(button,e);
    }
  }
;
  quickStarts.addButton(getFromVCS,UIBundle.message("welcome.screen.check.out.from.version.control.action.name"),UIBundle.message("welcome.screen.check.out.from.version.control.action.description"));
}
