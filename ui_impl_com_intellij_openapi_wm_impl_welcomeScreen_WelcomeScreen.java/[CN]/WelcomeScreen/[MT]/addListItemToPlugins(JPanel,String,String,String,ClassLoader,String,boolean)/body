{
  if (StringUtil.isEmptyOrSpaces(name)) {
    return;
  }
 else {
    name=name.trim();
  }
  final int y=myPluginsIdx+=2;
  Icon logoImage;
  if (StringUtil.isEmptyOrSpaces(iconPath)) {
    logoImage=new EmptyIcon(PLUGIN_LOGO_SIZE.width,PLUGIN_LOGO_SIZE.height);
  }
 else {
    logoImage=IconLoader.findIcon(iconPath,pluginClassLoader);
    if (logoImage == null)     logoImage=new EmptyIcon(PLUGIN_LOGO_SIZE.width,PLUGIN_LOGO_SIZE.height);
  }
  JLabel imageLabel=new JLabel(logoImage);
  GridBagConstraints gBC=new GridBagConstraints(0,y,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(15,20,0,0),0,0);
  panel.add(imageLabel,gBC);
  String shortenedName=adjustStringBreaksByWidth(name + " " + (enabled ? "" : UIBundle.message("welcome.screen.disabled.plugins.description")),LINK_FONT,false,PLUGIN_NAME_MAX_WIDTH,PLUGIN_NAME_MAX_ROWS);
  JLabel logoName=new JLabel(shortenedName);
  logoName.setFont(LINK_FONT);
  logoName.setForeground(enabled ? CAPTION_COLOR : DISABLED_CAPTION_COLOR);
  if (shortenedName.endsWith(___HTML_SUFFIX)) {
    logoName.setToolTipText(adjustStringBreaksByWidth(name,UIUtil.getToolTipFont(),false,MAX_TOOLTIP_WIDTH,0));
  }
  gBC=new GridBagConstraints(1,y,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(15,7,0,0),0,0);
  panel.add(logoName,gBC);
  if (!StringUtil.isEmpty(description)) {
    description=description.trim();
    if (description.startsWith(ActionGroupDescriptor.HTML_PREFIX)) {
      description=description.replaceAll(ActionGroupDescriptor.HTML_PREFIX,"");
      if (description.endsWith(ActionGroupDescriptor.HTML_SUFFIX)) {
        description=description.replaceAll(ActionGroupDescriptor.HTML_SUFFIX,"");
      }
    }
    description=description.replaceAll(ESC_NEW_LINE,"");
    String shortenedDcs=adjustStringBreaksByWidth(description,TEXT_FONT,false,PLUGIN_DSC_MAX_WIDTH,PLUGIN_DSC_MAX_ROWS);
    JLabel pluginDescription=new JLabel(shortenedDcs);
    pluginDescription.setFont(TEXT_FONT);
    if (shortenedDcs.endsWith(___HTML_SUFFIX)) {
      pluginDescription.setToolTipText(adjustStringBreaksByWidth(description,UIUtil.getToolTipFont(),false,MAX_TOOLTIP_WIDTH,0));
    }
    gBC=new GridBagConstraints(1,y + 1,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(5,7,0,0),5,0);
    panel.add(pluginDescription,gBC);
  }
  if (!StringUtil.isEmptyOrSpaces(url)) {
    gBC=new GridBagConstraints(2,y + 1,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,7,0,10),0,0);
    MyActionButton learnMore=new PluginsActionButton(LEARN_MORE_ICON,null){
      protected void onPress(      InputEvent e){
        try {
          BrowserUtil.launchBrowser(url);
        }
 catch (        IllegalThreadStateException ex) {
        }
      }
    }
;
    learnMore.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    learnMore.setToolTipText(UIBundle.message("welcome.screen.plugins.panel.learn.more.tooltip.text"));
    panel.add(learnMore,gBC);
    learnMore.setupWithinPanel(myPluginsPanel,PLUGINS_GROUP,myPluginsButtonsCount,0);
    myPluginsButtonsCount++;
  }
  gBC=new GridBagConstraints(2,y,2,2,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,10),0,0);
  JPanel emptyPane=new JPanel();
  emptyPane.setBackground(PLUGINS_PANEL_COLOR);
  panel.add(emptyPane,gBC);
}
