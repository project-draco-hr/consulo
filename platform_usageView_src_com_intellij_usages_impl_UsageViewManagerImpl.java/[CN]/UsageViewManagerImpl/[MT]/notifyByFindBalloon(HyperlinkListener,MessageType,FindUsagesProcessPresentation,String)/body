{
  com.intellij.usageView.UsageViewManager.getInstance(myProject);
  final List<String> lines=new ArrayList<String>(Arrays.asList(sLines));
  final Collection<PsiFile> largeFiles=processPresentation.getLargeFiles();
  List<String> resultLines=new ArrayList<String>(lines);
  HyperlinkListener resultListener=listener;
  if (!largeFiles.isEmpty()) {
    String shortMessage="(<a href='" + LARGE_FILES_HREF_TARGET + "'>"+ UsageViewBundle.message("large.files.were.ignored",largeFiles.size())+ "</a>)";
    resultLines.add(shortMessage);
    resultListener=new HyperlinkAdapter(){
      @Override protected void hyperlinkActivated(      HyperlinkEvent e){
        if (e.getDescription().equals(LARGE_FILES_HREF_TARGET)) {
          String detailedMessage=detailedLargeFilesMessage(largeFiles);
          List<String> strings=new ArrayList<String>(lines);
          strings.add(detailedMessage);
          ToolWindowManager.getInstance(myProject).notifyByBalloon(ToolWindowId.FIND,info,wrapInHtml(strings),AllIcons.Actions.Find,listener);
        }
 else         if (listener != null) {
          listener.hyperlinkUpdate(e);
        }
      }
    }
;
  }
  ToolWindowManager.getInstance(myProject).notifyByBalloon(ToolWindowId.FIND,info,wrapInHtml(resultLines),AllIcons.Actions.Find,resultListener);
}
