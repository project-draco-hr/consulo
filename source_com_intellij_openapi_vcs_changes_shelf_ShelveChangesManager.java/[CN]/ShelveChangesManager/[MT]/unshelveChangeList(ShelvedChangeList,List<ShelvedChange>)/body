{
  List<FilePatch> remainingPatches=new ArrayList<FilePatch>();
  try {
    List<FilePatch> patches=loadPatches(changeList.PATH);
    if (changes != null) {
      final Iterator<FilePatch> iterator=patches.iterator();
      while (iterator.hasNext()) {
        FilePatch patch=iterator.next();
        if (!needUnshelve(patch,changes)) {
          remainingPatches.add(patch);
          iterator.remove();
        }
      }
    }
    VirtualFile baseDir=myProject.getBaseDir();
    if (ApplyPatchAction.applyPatch(myProject,patches,baseDir,0,true,true) == ApplyPatchStatus.FAILURE) {
      return;
    }
  }
 catch (  IOException e) {
    LOG.error(e);
    return;
  }
catch (  PatchSyntaxException e) {
    LOG.error(e);
    return;
  }
  if (remainingPatches.size() == 0) {
    deleteChangeList(changeList);
  }
 else {
    saveRemainingPatches(changeList,remainingPatches);
  }
}
