{
  FindModel findModel=new FindModel();
  findModel.setStringToFind(query);
  findModel.setWholeWordsOnly(true);
  findModel.setFromCursor(false);
  findModel.setGlobal(true);
  findModel.setMultipleFiles(true);
  findModel.setProjectScope(true);
  findModel.setDirectoryName(mySourceDirs[0].getPath());
  findModel.setWithSubdirectories(true);
  List<UsageInfo> usages=findUsages(findModel);
  assertEquals(2,usages.size());
  if (!(usages.get(0).getElement().getContainingFile() instanceof PsiJavaFile)) {
    Collections.swap(usages,0,1);
  }
  PsiElement element=usages.get(0).getElement();
  PsiElement refElement=element.findElementAt(usages.get(0).getRangeInElement().getStartOffset()).getParent();
  assertTrue(refElement instanceof PsiLiteralExpression);
  assertEquals("xx.yy",((PsiLiteralExpression)refElement).getValue());
  VirtualFile file=mySourceDirs[0].findFileByRelativePath("x/dd.properties");
  PropertiesFile propertiesFile=(PropertiesFile)PsiManager.getInstance(myProject).findFile(file);
  element=usages.get(1).getElement();
  refElement=element.findElementAt(usages.get(1).getRangeInElement().getStartOffset()).getParent();
  assertTrue(refElement instanceof IProperty);
  assertSame(propertiesFile.findPropertyByKey("xx.yy"),refElement);
}
