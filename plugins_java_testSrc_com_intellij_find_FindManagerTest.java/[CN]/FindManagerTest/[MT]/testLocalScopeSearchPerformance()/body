{
  final int fileCount=3000;
  final int lineCount=500;
  TempDirTestFixture fixture=new LightTempDirTestFixtureImpl();
  fixture.setUp();
  try {
    String sampleText=StringUtil.repeat("zoo TargetWord foo bar goo\n",lineCount);
    for (int i=0; i < fileCount; i++) {
      fixture.createFile("a" + i + ".txt",sampleText);
    }
    PsiTestUtil.addSourceContentToRoots(myModule,fixture.getFile(""));
    VirtualFile file=fixture.createFile("target.txt",sampleText);
    PsiFile psiFile=PsiManager.getInstance(myProject).findFile(file);
    final FindModel findModel=new FindModel();
    findModel.setStringToFind("TargetWord");
    findModel.setWholeWordsOnly(true);
    findModel.setFromCursor(false);
    findModel.setGlobal(true);
    findModel.setMultipleFiles(true);
    ThrowableRunnable test=new ThrowableRunnable(){
      @Override public void run() throws Throwable {
        assertSize(lineCount,findUsages(findModel));
      }
    }
;
    findModel.setCustomScope(GlobalSearchScope.fileScope(psiFile));
    PlatformTestUtil.startPerformanceTest("slow",400,test).attempts(2).cpuBound().usesAllCPUCores().assertTiming();
    findModel.setCustomScope(new LocalSearchScope(psiFile));
    PlatformTestUtil.startPerformanceTest("slow",400,test).attempts(2).cpuBound().usesAllCPUCores().assertTiming();
  }
  finally {
    fixture.tearDown();
  }
}
