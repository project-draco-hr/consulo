{
  DataContext context=event.getDataContext();
  Project project=(Project)context.getData(DataConstants.PROJECT);
  Module module=(Module)context.getData(DataConstants.MODULE);
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  VirtualFile[] files=(VirtualFile[])context.getData(DataConstants.VIRTUAL_FILE_ARRAY);
  Editor editor=(Editor)context.getData(DataConstants.EDITOR);
  PsiFile file=null;
  PsiDirectory dir;
  if (editor != null) {
    file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
    if (file == null) {
      return;
    }
    dir=file.getContainingDirectory();
  }
 else {
    if (FileUtil.areFiles(files)) {
      (new UpdateCopyrightProcessor(project,null,FileUtil.convertToPsiFiles(files,project))).run();
      return;
    }
    Module modCtx=(Module)context.getData(DataConstants.MODULE_CONTEXT);
    if (modCtx != null) {
      ModuleDlg dlg=new ModuleDlg(project,module);
      dlg.show();
      if (!dlg.isOK()) {
        return;
      }
      (new UpdateCopyrightProcessor(project,module)).run();
      return;
    }
    PsiElement psielement=(PsiElement)context.getData(DataConstants.PSI_ELEMENT);
    if (psielement == null) {
      return;
    }
    if (psielement instanceof PsiPackage) {
      dir=((PsiPackage)psielement).getDirectories()[0];
    }
 else     if (psielement instanceof PsiDirectory) {
      dir=(PsiDirectory)psielement;
    }
 else {
      file=psielement.getContainingFile();
      if (file == null) {
        return;
      }
      dir=file.getContainingDirectory();
    }
  }
  RecursionDlg recDlg=new RecursionDlg(project,file != null ? file.getVirtualFile() : dir.getVirtualFile());
  recDlg.show();
  if (!recDlg.isOK()) {
    return;
  }
  if (recDlg.isAll()) {
    (new UpdateCopyrightProcessor(project,module,dir,recDlg.includeSubdirs())).run();
  }
 else {
    (new UpdateCopyrightProcessor(project,module,file)).run();
  }
}
