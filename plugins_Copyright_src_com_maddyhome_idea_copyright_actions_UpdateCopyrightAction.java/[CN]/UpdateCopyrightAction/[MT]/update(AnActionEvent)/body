{
  final Presentation presentation=event.getPresentation();
  final DataContext context=event.getDataContext();
  final Project project=PlatformDataKeys.PROJECT.getData(context);
  if (project == null) {
    presentation.setEnabled(false);
    return;
  }
  final VirtualFile[] files=PlatformDataKeys.VIRTUAL_FILE_ARRAY.getData(context);
  final Editor editor=PlatformDataKeys.EDITOR.getData(context);
  if (editor != null) {
    final PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
    if (file == null || !FileTypeUtil.getInstance().isSupportedFile(file)) {
      presentation.setEnabled(false);
      return;
    }
  }
 else   if (files != null && FileUtil.areFiles(files)) {
    boolean copyrightEnabled=false;
    for (    VirtualFile vfile : files) {
      if (FileTypeUtil.getInstance().isSupportedFile(vfile)) {
        copyrightEnabled=true;
        break;
      }
    }
    if (!copyrightEnabled) {
      presentation.setEnabled(false);
      return;
    }
  }
 else   if ((files == null || files.length != 1) && LangDataKeys.MODULE_CONTEXT.getData(context) == null && PlatformDataKeys.PROJECT_CONTEXT.getData(context) == null) {
    final PsiElement[] elems=LangDataKeys.PSI_ELEMENT_ARRAY.getData(context);
    if (elems != null) {
      boolean copyrightEnabled=false;
      for (      PsiElement elem : elems) {
        if (!(elem instanceof PsiDirectory)) {
          final PsiFile file=elem.getContainingFile();
          if (file == null || !FileTypeUtil.getInstance().isSupportedFile(file.getVirtualFile())) {
            copyrightEnabled=true;
            break;
          }
        }
      }
      if (!copyrightEnabled) {
        presentation.setEnabled(false);
        return;
      }
    }
  }
  presentation.setEnabled(true);
}
