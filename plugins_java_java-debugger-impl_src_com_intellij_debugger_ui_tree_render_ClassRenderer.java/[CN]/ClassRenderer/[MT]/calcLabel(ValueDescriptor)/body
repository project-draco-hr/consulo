{
  final ValueDescriptorImpl valueDescriptor=(ValueDescriptorImpl)descriptor;
  final Value value=valueDescriptor.getValue();
  if (value instanceof ObjectReference) {
    final StringBuilder buf=StringBuilderSpinAllocator.alloc();
    try {
      if (value instanceof StringReference) {
        buf.append('\"');
        buf.append(DebuggerUtils.convertToPresentationString(((StringReference)value).value()));
        buf.append('\"');
      }
 else       if (value instanceof ClassObjectReference) {
        ReferenceType type=((ClassObjectReference)value).reflectedType();
        buf.append((type != null) ? type.name() : "{...}");
      }
 else {
        final ObjectReference objRef=(ObjectReference)value;
        final Type type=objRef.type();
        if (type instanceof ClassType && ((ClassType)type).isEnum()) {
          final String name=getEnumConstantName(objRef,(ClassType)type);
          if (name != null) {
            buf.append(name);
          }
 else {
            buf.append(type.name());
          }
        }
 else {
          buf.append(ValueDescriptorImpl.getIdLabel(objRef));
        }
      }
      return buf.toString();
    }
  finally {
      StringBuilderSpinAllocator.dispose(buf);
    }
  }
 else   if (value == null) {
    return "null";
  }
 else {
    return DebuggerBundle.message("label.undefined");
  }
}
