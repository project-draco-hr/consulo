{
  LOG.assertTrue(originalScope != null);
  if (refElement instanceof PsiAnnotationMethod) {
    PsiMethod method=(PsiMethod)refElement;
    if (PsiAnnotation.DEFAULT_REFERENCED_METHOD_NAME.equals(method.getName()) && method.getParameterList().getParameters().length == 0) {
      PsiReference[] references=findReferences(method.getContainingClass(),originalScope,ignoreAccessScope);
      for (      PsiReference reference : references) {
        if (reference instanceof PsiJavaCodeReferenceElement) {
          PsiJavaCodeReferenceElement javaReference=(PsiJavaCodeReferenceElement)reference;
          if (javaReference.getParent() instanceof PsiAnnotation) {
            PsiNameValuePair[] members=((PsiAnnotation)javaReference.getParent()).getParameterList().getAttributes();
            if (members.length == 1 && members[0].getNameIdentifier() == null) {
              processor.execute(members[0].getReference());
            }
          }
        }
      }
    }
  }
  if (refElement instanceof PsiMethod && ((PsiMethod)refElement).isConstructor()) {
    if (!processConstructorReferences(processor,(PsiMethod)refElement,originalScope,ignoreAccessScope,isStrictSignatureSearch)) {
      return false;
    }
  }
  if (refElement instanceof PsiAntElement) {
    final PsiAntElement antElement=(PsiAntElement)refElement;
    final SearchScope searchScope=antElement.getSearchScope().intersectWith(originalScope);
    if (searchScope instanceof LocalSearchScope) {
      final PsiElement[] scopes=((LocalSearchScope)searchScope).getScope();
      for (      final PsiElement scope : scopes) {
        if (!processAntElementScopeRoot(scope,refElement,antElement,processor))         return false;
      }
    }
    return true;
  }
  String text;
  if (refElement instanceof XmlAttributeValue) {
    text=((XmlAttributeValue)refElement).getValue();
  }
 else   if (refElement instanceof PsiNamedElement) {
    text=((PsiNamedElement)refElement).getName();
    if (refElement instanceof PsiMetaOwner) {
      final PsiMetaData metaData=((PsiMetaOwner)refElement).getMetaData();
      if (metaData != null)       text=metaData.getName();
    }
  }
 else {
    return true;
  }
  if (text == null)   return true;
  SearchScope searchScope;
  if (!ignoreAccessScope) {
    SearchScope accessScope=refElement.getUseScope();
    searchScope=originalScope.intersectWith(accessScope);
    if (searchScope == null)     return true;
  }
 else {
    searchScope=originalScope;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("visitReferences() search scope: " + searchScope);
  }
  final PsiElementProcessorEx processor1=new PsiElementProcessorEx(){
    Set<PsiReference> myRefs=new HashSet<PsiReference>();
    public boolean execute(    PsiElement element,    int offsetInElement){
      final PsiReference reference=element.findReferenceAt(offsetInElement);
      if (reference == null)       return true;
      if (!myRefs.add(reference))       return true;
      if (reference.isReferenceTo(refElement)) {
        return processor.execute(reference);
      }
 else {
        return true;
      }
    }
  }
;
  short searchContext;
  if (refElement instanceof XmlAttributeValue) {
    searchContext=UsageSearchContext.IN_PLAIN_TEXT;
  }
 else {
    searchContext=UsageSearchContext.IN_CODE | UsageSearchContext.IN_FOREIGN_LANGUAGES | UsageSearchContext.IN_COMMENTS;
  }
  if (!processElementsWithWord(processor1,searchScope,text,searchContext,false)) {
    return false;
  }
  if (refElement instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)refElement;
    if (PropertyUtil.isSimplePropertyAccessor(method)) {
      final String propertyName=PropertyUtil.getPropertyName(method);
      if (searchScope instanceof GlobalSearchScope) {
        searchScope=GlobalSearchScope.getScopeRestrictedByFileTypes((GlobalSearchScope)searchScope,StdFileTypes.JSP,StdFileTypes.JSPX);
      }
      if (!processElementsWithWord(processor1,searchScope,propertyName,UsageSearchContext.IN_FOREIGN_LANGUAGES,false)) {
        return false;
      }
    }
  }
  if (refElement instanceof PsiPackage && originalScope instanceof GlobalSearchScope) {
    if (!UIFormUtil.processReferencesInUIForms(processor,(PsiPackage)refElement,(GlobalSearchScope)originalScope))     return false;
  }
 else   if (refElement instanceof PsiClass && originalScope instanceof GlobalSearchScope) {
    if (!UIFormUtil.processReferencesInUIForms(processor,(PsiClass)refElement,(GlobalSearchScope)originalScope))     return false;
  }
 else   if (refElement instanceof PsiField && originalScope instanceof GlobalSearchScope) {
    if (!UIFormUtil.processReferencesInUIForms(processor,(PsiField)refElement,(GlobalSearchScope)originalScope))     return false;
  }
 else   if (refElement instanceof Property && originalScope instanceof GlobalSearchScope) {
    if (!UIFormUtil.processReferencesInUIForms(processor,(Property)refElement,(GlobalSearchScope)originalScope))     return false;
  }
  return true;
}
