{
  ProgressManager progressManager=ProgressManager.getInstance();
  ProgressIndicator progress=progressManager.getProgressIndicator();
  int dotIndex=qName.lastIndexOf('.');
  int dollarIndex=qName.lastIndexOf('$');
  int maxIndex=Math.max(dotIndex,dollarIndex);
  String wordToSearch=maxIndex >= 0 ? qName.substring(maxIndex + 1) : qName;
  PsiFile[] files=myManager.getCacheManager().getFilesWithWord(wordToSearch,UsageSearchContext.IN_PLAIN_TEXT,searchScope);
  StringSearcher searcher=new StringSearcher(qName);
  searcher.setCaseSensitive(true);
  searcher.setForwardDirection(true);
  if (progress != null) {
    progress.pushState();
    progress.setText("Analyzing usages in non-java files...");
  }
  AllFilesLoop:   for (int i=0; i < files.length; i++) {
    ProgressManager.getInstance().checkCanceled();
    PsiFile psiFile=files[i];
    char[] text=psiFile.textToCharArray();
    for (int index=LowLevelSearchUtil.searchWord(text,0,text.length,searcher); index >= 0; ) {
      PsiReference referenceAt=psiFile.findReferenceAt(index);
      if (referenceAt == null) {
        if (!processor.process(psiFile,index,index + searcher.getPattern().length()))         break AllFilesLoop;
      }
      index=LowLevelSearchUtil.searchWord(text,index + searcher.getPattern().length(),text.length,searcher);
    }
    if (progress != null) {
      progress.setFraction((double)(i + 1) / files.length);
    }
  }
  if (progress != null) {
    progress.popState();
  }
}
