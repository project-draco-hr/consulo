{
  if (scopeElement == null)   return true;
  if (!bundleSearchDescriptor.myFiles.contains(scopeElement.getContainingFile()))   return true;
  final PsiElementProcessor processor1=new PsiBaseElementProcessor(){
    public boolean execute(    PsiElement element){
      PsiElement parent=element.getParent();
      if (parent instanceof PsiJavaCodeReferenceElement) {
        PsiReference ref=(PsiJavaCodeReferenceElement)parent;
        PsiElement target=ref.resolve();
        if (bundleSearchDescriptor.myElements.contains(target)) {
          return processor.execute(ref);
        }
      }
      return true;
    }
  }
;
  ASTNode scopeTreeElement=SourceTreeToPsiMap.psiElementToTree(scopeElement);
  ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
  return LowLevelSearchUtil.processIdentifiersBySet(processor1,scopeTreeElement,IDENTIFIER_BIT_SET,bundleSearchDescriptor.myNames,progress);
}
