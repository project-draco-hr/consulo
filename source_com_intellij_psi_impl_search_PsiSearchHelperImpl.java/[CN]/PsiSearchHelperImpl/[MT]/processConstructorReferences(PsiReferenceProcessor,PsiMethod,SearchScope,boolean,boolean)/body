{
  LOG.assertTrue(searchScope != null);
  PsiClass aClass=constructor.getContainingClass();
  if (aClass == null)   return true;
  if (aClass.isEnum()) {
    PsiField[] fields=aClass.getFields();
    for (    PsiField field : fields) {
      if (field instanceof PsiEnumConstant) {
        PsiReference reference=field.getReference();
        if (reference != null && reference.isReferenceTo(constructor)) {
          if (!processor.execute(reference))           return false;
        }
      }
    }
  }
  PsiReferenceProcessor processor1=new PsiReferenceProcessor(){
    public boolean execute(    PsiReference reference){
      PsiElement parent=reference.getElement().getParent();
      if (parent instanceof PsiAnonymousClass) {
        parent=parent.getParent();
      }
      if (parent instanceof PsiNewExpression) {
        PsiMethod constructor1=((PsiNewExpression)parent).resolveConstructor();
        if (constructor1 != null) {
          if (isStrictSignatureSearch) {
            if (myManager.areElementsEquivalent(constructor,constructor1)) {
              return processor.execute(reference);
            }
          }
 else {
            if (myManager.areElementsEquivalent(constructor.getContainingClass(),constructor1.getContainingClass())) {
              return processor.execute(reference);
            }
          }
        }
      }
      return true;
    }
  }
;
  if (!processReferences(processor1,aClass,searchScope,ignoreAccessScope))   return false;
  PsiMethod[] methods=aClass.getMethods();
  for (  PsiMethod method : methods) {
    if (method.isConstructor()) {
      PsiCodeBlock body=method.getBody();
      if (body != null) {
        PsiStatement[] statements=body.getStatements();
        if (statements.length > 0) {
          PsiStatement statement=statements[0];
          if (statement instanceof PsiExpressionStatement) {
            PsiExpression expr=((PsiExpressionStatement)statement).getExpression();
            if (expr instanceof PsiMethodCallExpression) {
              PsiReferenceExpression refExpr=((PsiMethodCallExpression)expr).getMethodExpression();
              if (PsiSearchScopeUtil.isInScope(searchScope,refExpr)) {
                if (refExpr.getText().equals(PsiKeyword.THIS)) {
                  PsiElement referencedElement=refExpr.resolve();
                  if (referencedElement instanceof PsiMethod) {
                    PsiMethod constructor1=(PsiMethod)referencedElement;
                    if (isStrictSignatureSearch) {
                      if (myManager.areElementsEquivalent(constructor1,constructor)) {
                        if (!processor.execute(refExpr))                         return false;
                      }
                    }
 else {
                      if (myManager.areElementsEquivalent(constructor.getContainingClass(),constructor1.getContainingClass())) {
                        if (!processor.execute(refExpr))                         return false;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  PsiElementProcessor<PsiClass> processor2=new PsiElementProcessor<PsiClass>(){
    public boolean execute(    PsiClass inheritor){
      PsiMethod[] methods=inheritor.getMethods();
      for (      PsiMethod method : methods) {
        if (method.isConstructor()) {
          PsiCodeBlock body=method.getBody();
          if (body != null) {
            PsiStatement[] statements=body.getStatements();
            if (statements.length > 0) {
              PsiStatement statement=statements[0];
              if (statement instanceof PsiExpressionStatement) {
                PsiExpression expr=((PsiExpressionStatement)statement).getExpression();
                if (expr instanceof PsiMethodCallExpression) {
                  PsiReferenceExpression refExpr=((PsiMethodCallExpression)expr).getMethodExpression();
                  if (PsiSearchScopeUtil.isInScope(searchScope,refExpr)) {
                    if (refExpr.getText().equals(PsiKeyword.SUPER)) {
                      PsiElement referencedElement=refExpr.resolve();
                      if (referencedElement instanceof PsiMethod) {
                        PsiMethod constructor1=(PsiMethod)referencedElement;
                        if (isStrictSignatureSearch) {
                          if (myManager.areElementsEquivalent(constructor1,constructor)) {
                            if (!processor.execute(refExpr))                             return false;
                          }
                        }
 else {
                          if (myManager.areElementsEquivalent(constructor.getContainingClass(),constructor1.getContainingClass())) {
                            if (!processor.execute(refExpr))                             return false;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return true;
    }
  }
;
  return processInheritors(processor2,aClass,searchScope,false);
}
