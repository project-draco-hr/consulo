{
  LOG.assertTrue(searchScope != null);
  String name=file.getVirtualFile().getName();
  final ArrayList<JspDirective> directives=new ArrayList<JspDirective>();
  PsiElementProcessorEx processor=new PsiElementProcessorEx(){
    public boolean execute(    PsiElement element,    int offsetInElement){
      CompositeElement parent=(SourceTreeToPsiMap.psiElementToTree(element)).getTreeParent();
      if (parent.getElementType() == ElementType.JSP_FILE_REFERENCE) {
        CompositeElement pparent=parent.getTreeParent();
        if (SourceTreeToPsiMap.treeElementToPsi(pparent) instanceof JspAttribute && pparent.getTreeParent().getElementType() == ElementType.JSP_DIRECTIVE) {
          JspDirective directive=(JspDirective)SourceTreeToPsiMap.treeElementToPsi(pparent.getTreeParent());
          if (directive.getName().equals("include")) {
            JspAttribute attribute=(JspAttribute)SourceTreeToPsiMap.treeElementToPsi(pparent);
            if (attribute.getName().equals("file")) {
              PsiFile refFile=(PsiFile)((PsiJavaCodeReferenceElement)SourceTreeToPsiMap.treeElementToPsi(parent)).resolve();
              if (file.equals(refFile)) {
                directives.add(directive);
              }
            }
          }
        }
      }
      return true;
    }
  }
;
  processElementsWithWord(processor,searchScope,name,JSP_DIRECTIVE_ATTRIBUTE_BIT_SET,WordInfo.JSP_INCLUDE_DIRECTIVE_FILE_NAME,false);
  return directives.toArray(new JspDirective[directives.size()]);
}
