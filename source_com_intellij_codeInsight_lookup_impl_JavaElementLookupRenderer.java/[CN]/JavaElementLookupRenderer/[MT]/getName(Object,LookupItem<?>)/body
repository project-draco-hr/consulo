{
  final String presentableText=item.getPresentableText();
  if (presentableText != null) {
    return presentableText;
  }
  String name="";
  if (o instanceof PsiElement) {
    final PsiElement element=(PsiElement)o;
    if (element.isValid()) {
      name=PsiUtilBase.getName(element);
      if (element instanceof PsiClass) {
        PsiSubstitutor substitutor=(PsiSubstitutor)item.getAttribute(LookupItem.SUBSTITUTOR);
        if (substitutor != null && !substitutor.isValid()) {
          PsiType type=(PsiType)item.getAttribute(LookupItem.TYPE);
          if (type != null) {
            name=type.getPresentableText();
          }
        }
 else {
          name=formatTypeName((PsiClass)element,substitutor);
        }
      }
 else       if (element instanceof PsiKeyword || element instanceof PsiExpression || element instanceof PsiTypeElement) {
        name=element.getText();
      }
    }
  }
 else   if (o instanceof PsiArrayType) {
    name=((PsiArrayType)o).getDeepComponentType().getPresentableText();
  }
 else   if (o instanceof PsiType) {
    name=((PsiType)o).getPresentableText();
  }
  if (item.getAttribute(LookupItem.FORCE_QUALIFY) != null) {
    if (o instanceof PsiMember && ((PsiMember)o).getContainingClass() != null) {
      name=((PsiMember)o).getContainingClass().getName() + "." + name;
    }
  }
  if (StringUtil.isEmpty(name))   return "";
  final String prefix=item.getAttribute(JavaCompletionUtil.QUALIFIER_PREFIX_ATTRIBUTE);
  if (StringUtil.isNotEmpty(prefix)) {
    return prefix + name;
  }
  return name;
}
