{
  super.visitReferenceExpression(ref);
  final PsiExpression qualifier=ref.getQualifierExpression();
  if (qualifier != null && !(qualifier instanceof PsiThisExpression)) {
    return;
  }
  final PsiElement element=ref.resolve();
  if (!(element instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)element;
  final Set<PsiField> overAccessedFields=m_overAccessedFields;
  if (overAccessedFields.contains(field)) {
    return;
  }
  if (ControlFlowUtils.isInLoop(field)) {
    overAccessedFields.add(field);
  }
  final Map<PsiField,Integer> accessCounts=m_accessCounts;
  final Integer count=accessCounts.get(field);
  if (count == null) {
    accessCounts.put(field,1);
  }
 else   if (count.intValue() == 1) {
    accessCounts.put(field,2);
  }
 else {
    overAccessedFields.add(field);
  }
}
