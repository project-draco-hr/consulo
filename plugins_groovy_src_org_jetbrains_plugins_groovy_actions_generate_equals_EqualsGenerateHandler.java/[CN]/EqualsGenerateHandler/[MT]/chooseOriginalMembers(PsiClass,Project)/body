{
  myEqualsFields=null;
  myHashCodeFields=null;
  myNonNullFields=PsiField.EMPTY_ARRAY;
  myClass=aClass;
  GlobalSearchScope scope=aClass.getResolveScope();
  final PsiMethod equalsMethod=GrGenerateEqualsHelper.findMethod(aClass,GrGenerateEqualsHelper.getEqualsSignature(project,scope));
  final PsiMethod hashCodeMethod=GrGenerateEqualsHelper.findMethod(aClass,GrGenerateEqualsHelper.getHashCodeSignature());
  boolean needEquals=equalsMethod == null;
  boolean needHashCode=hashCodeMethod == null;
  if (!needEquals && !needHashCode) {
    String text=aClass instanceof PsiAnonymousClass ? GroovyCodeInsightBundle.message("generate.equals.and.hashcode.already.defined.warning.anonymous") : GroovyCodeInsightBundle.message("generate.equals.and.hashcode.already.defined.warning",aClass.getQualifiedName());
    if (Messages.showYesNoDialog(project,text,GroovyCodeInsightBundle.message("generate.equals.and.hashcode.already.defined.title"),Messages.getQuestionIcon()) == DialogWrapper.OK_EXIT_CODE) {
      if (!ApplicationManager.getApplication().runWriteAction(new Computable<Boolean>(){
        public Boolean compute(){
          try {
            equalsMethod.delete();
            hashCodeMethod.delete();
            return Boolean.TRUE;
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
            return Boolean.FALSE;
          }
        }
      }
).booleanValue()) {
        return null;
      }
 else {
        needEquals=needHashCode=true;
      }
    }
 else {
      return null;
    }
  }
  GenerateEqualsWizard wizard=new GenerateEqualsWizard(project,aClass,needEquals,needHashCode);
  wizard.show();
  if (!wizard.isOK())   return null;
  myEqualsFields=wizard.getEqualsFields();
  myHashCodeFields=wizard.getHashCodeFields();
  myNonNullFields=wizard.getNonNullFields();
  return DUMMY_RESULT;
}
