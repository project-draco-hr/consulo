{
  if (!isNormalProject())   return;
  StartupManagerEx startupManager=StartupManagerEx.getInstanceEx(myProject);
  startupManager.registerStartupActivity(new Runnable(){
    public void run(){
      boolean wasMavenized=!myState.originalFiles.isEmpty();
      if (!wasMavenized)       return;
      initMavenized();
    }
  }
);
  startupManager.registerPostStartupActivity(new Runnable(){
    @Override public void run(){
      CompilerManager.getInstance(myProject).addBeforeTask(new CompileTask(){
        @Override public boolean execute(        CompileContext context){
          AccessToken token=ReadAction.start();
          try {
            if (!CompilerWorkspaceConfiguration.getInstance(myProject).useOutOfProcessBuild())             return true;
            generateBuildConfiguration(context.isRebuild());
          }
  finally {
            token.finish();
          }
          return true;
        }
      }
);
    }
  }
);
}
