{
  final RefactoringElementListener elementListener=getTransaction().getElementListener(myChangeInfo.getMethod());
  try {
    final ChangeSignatureUsageProcessor[] processors=ChangeSignatureUsageProcessor.EP_NAME.getExtensions();
    for (    UsageInfo usage : usages) {
      for (      ChangeSignatureUsageProcessor processor : processors) {
        if (processor.processUsage(myChangeInfo,usage,true,usages))         break;
      }
    }
    LOG.assertTrue(myChangeInfo.getMethod().isValid());
    for (    ChangeSignatureUsageProcessor processor : processors) {
      if (processor.processPrimaryMethod(myChangeInfo))       break;
    }
    for (    UsageInfo usage : usages) {
      for (      ChangeSignatureUsageProcessor processor : processors) {
        if (processor.processUsage(myChangeInfo,usage,false,usages))         break;
      }
    }
    final PsiElement method=myChangeInfo.getMethod();
    LOG.assertTrue(method.isValid());
    if (myChangeInfo.isNameChanged()) {
      elementListener.elementRenamed(method);
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
