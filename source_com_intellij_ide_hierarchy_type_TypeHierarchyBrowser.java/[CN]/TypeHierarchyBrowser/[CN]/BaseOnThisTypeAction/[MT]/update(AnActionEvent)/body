{
  final Presentation presentation=event.getPresentation();
  registerCustomShortcutSet(ActionManager.getInstance().getAction(IdeActions.ACTION_TYPE_HIERARCHY).getShortcutSet(),null);
  final DataContext dataContext=event.getDataContext();
  final TypeHierarchyBrowser browser=(TypeHierarchyBrowser)dataContext.getData(TYPE_HIERARCHY_BROWSER_DATA_CONSTANT);
  if (browser == null) {
    presentation.setVisible(false);
    presentation.setEnabled(false);
    return;
  }
  presentation.setVisible(true);
  final PsiClass selectedClass=browser.getSelectedClass();
  if (selectedClass != null && !selectedClass.equals(browser.mySmartPsiElementPointer.getElement()) && !"java.lang.Object".equals(selectedClass.getQualifiedName()) && selectedClass.isValid()) {
    presentation.setText(selectedClass.isInterface() ? IdeBundle.message("action.base.on.this.interface") : IdeBundle.message("action.base.on.this.class"));
    presentation.setEnabled(true);
  }
 else {
    presentation.setEnabled(false);
  }
}
