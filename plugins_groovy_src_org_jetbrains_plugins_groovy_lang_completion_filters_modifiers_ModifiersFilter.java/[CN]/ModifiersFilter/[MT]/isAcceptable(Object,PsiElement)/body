{
  if (GroovyCompletionUtil.asSimpleVariable(context) || GroovyCompletionUtil.asTypedMethod(context)) {
    return true;
  }
  if (context.getParent() instanceof GrReferenceElement && context.getParent().getParent() instanceof GrTypeElement) {
    PsiElement parent=context.getParent().getParent().getParent();
    if (parent instanceof GrVariableDeclaration && (parent.getParent() instanceof GrTypeDefinitionBody || parent.getParent() instanceof GroovyFile) || parent instanceof GrMethod) {
      GrModifierList list=((GrMembersDeclaration)parent).getModifierListGroovy();
      for (      PsiElement modifier : list.getModifiers()) {
        if (!(modifier instanceof GrAnnotation))         return false;
        if ("def".equals(modifier.getText()))         return false;
      }
      return true;
    }
  }
  if (context.getParent() instanceof GrExpression && context.getParent().getParent() instanceof GroovyFile && GroovyCompletionUtil.isNewStatement(context,false)) {
    return true;
  }
  if (context.getParent() instanceof PsiErrorElement && context.getParent().getParent() instanceof GrGspDeclarationHolder && GroovyCompletionUtil.isNewStatement(context,false)) {
    return true;
  }
  ASTNode astNode=context.getNode();
  if (context.getTextRange().getStartOffset() == 0 && astNode != null && !(GspTokenTypesEx.GSP_TEMPLATE_DATA == astNode.getElementType())) {
    return true;
  }
  final PsiElement leaf=GroovyCompletionUtil.getLeafByOffset(context.getTextRange().getStartOffset() - 1,context);
  if (leaf != null && GroovyCompletionUtil.isNewStatement(context,false)) {
    PsiElement parent=leaf.getParent();
    if (parent instanceof GroovyFile) {
      return true;
    }
  }
  return context.getParent() instanceof GrExpression && context.getParent().getParent() instanceof GrApplicationStatement && context.getParent().getParent().getParent() instanceof GroovyFile&& GroovyCompletionUtil.isNewStatement(context,false);
}
