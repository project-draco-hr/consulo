{
  final PropertiesFile propFile=PropertiesUtil.getPropertiesFile(descriptor.getBundleName(),module);
  if (propFile != null) {
    final Property propertyByKey=propFile.findPropertyByKey(descriptor.getKey());
    if (propertyByKey != null && !editedValue.equals(propertyByKey.getValue())) {
      final Collection<PsiReference> references=new ArrayList<PsiReference>();
      ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
        public void run(){
          references.addAll(ReferencesSearch.search(propertyByKey).findAll());
        }
      }
,UIDesignerBundle.message("edit.text.searching.references"),false,module.getProject());
      if (references.size() > 1) {
        final int rc=Messages.showYesNoDialog(module.getProject(),UIDesignerBundle.message("edit.text.multiple.usages",propertyByKey.getKey(),references.size()),UIDesignerBundle.message("edit.text.multiple.usages.title"),Messages.getWarningIcon());
        if (rc != OK_EXIT_CODE) {
          return;
        }
      }
      final ReadonlyStatusHandler.OperationStatus operationStatus=ReadonlyStatusHandler.getInstance(module.getProject()).ensureFilesWritable(propFile.getVirtualFile());
      if (operationStatus.hasReadonlyFiles()) {
        return;
      }
      CommandProcessor.getInstance().executeCommand(module.getProject(),new Runnable(){
        public void run(){
          ApplicationManager.getApplication().runWriteAction(new Runnable(){
            public void run(){
              try {
                propertyByKey.setValue(editedValue);
              }
 catch (              IncorrectOperationException e) {
                LOG.error(e);
              }
            }
          }
);
        }
      }
,null,null);
    }
  }
}
