{
  JPanel card=new JPanel(new BorderLayout());
  if (!USE_ICONS) {
    card.setOpaque(false);
  }
  JPanel withBottomFiller=new JPanel(new BorderLayout());
  if (!USE_ICONS) {
    withBottomFiller.setOpaque(true);
    withBottomFiller.setBackground(Color.white);
  }
  withBottomFiller.add(card,BorderLayout.NORTH);
  myContent.add(withBottomFiller,cardId);
  List<Button> buttons=buildButtons(group,cardId);
  JPanel buttonsPanel=new JPanel(new GridLayout(buttons.size(),1,5,5));
  if (!USE_ICONS) {
    buttonsPanel.setOpaque(false);
  }
  buttonsPanel.setBorder(new EmptyBorder(15,15,15,15));
  for (  Button button : buttons) {
    buttonsPanel.add(button);
  }
  card.add(buttonsPanel,BorderLayout.CENTER);
  if (parentId != null) {
    AnAction back=new AnAction(null,null,null){
      @Override public void actionPerformed(      AnActionEvent e){
        myLayout.swipe(myContent,parentId,JBCardLayout.SwipeDirection.BACKWARD);
      }
    }
;
    Presentation p=new Presentation("Back");
    p.setIcon(AllIcons.Actions.Back);
    card.add(new Button(back,p),BorderLayout.NORTH);
  }
}
