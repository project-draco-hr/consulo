{
  final MyChecker checker=new MyChecker();
  checker.execute(e);
  if (!checker.isEnabled())   return;
  final Project project=checker.getProject();
  final VirtualFile baseDir=project.getBaseDir();
  if (baseDir == null)   return;
  boolean success=false;
  boolean excThrown=false;
  try {
    success=ShareProjectAction.share(project,baseDir);
  }
 catch (  VcsException exc) {
    AbstractVcsHelper.getInstance(project).showError(exc,"Failed to Share Project");
    excThrown=true;
  }
 finally {
    if (success || excThrown) {
      baseDir.refresh(true,true,new Runnable(){
        public void run(){
          VcsDirtyScopeManager.getInstance(project).dirDirtyRecursively(project.getBaseDir());
          if (checker.isHadNoMappings() && SvnUtil.seemsLikeVersionedDir(baseDir)) {
            final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(project);
            vcsManager.setDirectoryMappings(Arrays.asList(new VcsDirectoryMapping("",SvnVcs.VCS_NAME)));
          }
        }
      }
);
    }
  }
}
