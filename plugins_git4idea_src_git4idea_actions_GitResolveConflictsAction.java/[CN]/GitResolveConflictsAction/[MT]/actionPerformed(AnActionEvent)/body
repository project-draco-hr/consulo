{
  final Project project=event.getProject();
  final Set<VirtualFile> conflictedFiles=new TreeSet<VirtualFile>(new Comparator<VirtualFile>(){
    @Override public int compare(    @NotNull VirtualFile f1,    @NotNull VirtualFile f2){
      return f1.getPresentableUrl().compareTo(f2.getPresentableUrl());
    }
  }
);
  for (  Change change : ChangeListManager.getInstance(project).getAllChanges()) {
    final ContentRevision before=change.getBeforeRevision();
    final ContentRevision after=change.getAfterRevision();
    if (before != null) {
      final VirtualFile file=before.getFile().getVirtualFile();
      if (file != null) {
        conflictedFiles.add(file);
      }
    }
    if (after != null) {
      final VirtualFile file=after.getFile().getVirtualFile();
      if (file != null) {
        conflictedFiles.add(file);
      }
    }
  }
  AbstractVcsHelper.getInstance(project).showMergeDialog(new ArrayList<VirtualFile>(conflictedFiles),GitVcs.getInstance(project).getMergeProvider());
}
