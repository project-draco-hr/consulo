{
  final DomElement domCandidate=DomManager.getDomManager(project).getDomElement(candidate);
  if (!(domCandidate instanceof LayoutViewElement)) {
    return false;
  }
  final LayoutViewElement candidateView=(LayoutViewElement)domCandidate;
  final Map<Pair<String,String>,String> attrsInCandidateMap=new HashMap<Pair<String,String>,String>();
  final List<XmlAttribute> attrsInCandidate=AndroidExtractStyleAction.getExtractableAttributes(candidate);
  if (attrsInCandidate.size() < attrMap.size()) {
    return false;
  }
  for (  XmlAttribute attribute : attrsInCandidate) {
    final String attrValue=attribute.getValue();
    if (attrValue != null) {
      attrsInCandidateMap.put(Pair.create(attribute.getNamespace(),attribute.getLocalName()),attrValue);
    }
  }
  for (  Map.Entry<AndroidAttributeInfo,String> entry : attrMap.entrySet()) {
    final String ns=entry.getKey().getNamespace();
    final String name=entry.getKey().getName();
    final String value=entry.getValue();
    final String valueInCandidate=attrsInCandidateMap.get(Pair.create(ns,name));
    if (valueInCandidate == null || !valueInCandidate.equals(value)) {
      return false;
    }
  }
  if (candidateView.getStyle().getStringValue() != null) {
    if (parentStyleNameAttrValue == null) {
      return false;
    }
    final PsiElement styleNameAttrValueForTag=getStyleNameAttrValueForTag(candidateView);
    if (styleNameAttrValueForTag == null || !parentStyleNameAttrValue.equals(styleNameAttrValueForTag)) {
      return false;
    }
  }
 else   if (parentStyleNameAttrValue != null) {
    return false;
  }
  return true;
}
