{
  final PsiParameterList parameterList=method.getParameterList();
  if (parameterList == null) {
    return;
  }
  final PsiParameter[] parameters=parameterList.getParameters();
  if (parameters == null) {
    return;
  }
  if (parameters.length <= getLimit()) {
    return;
  }
  final PsiMethod[] superMethods=PsiSuperMethodUtil.findSuperMethods(method);
  for (int i=0; i < superMethods.length; i++) {
    final PsiMethod superMethod=superMethods[i];
    final PsiClass containingClass=superMethod.getContainingClass();
    if (containingClass != null) {
      if (LibraryUtil.classIsInLibrary(containingClass)) {
        return;
      }
    }
  }
  registerMethodError(method);
}
