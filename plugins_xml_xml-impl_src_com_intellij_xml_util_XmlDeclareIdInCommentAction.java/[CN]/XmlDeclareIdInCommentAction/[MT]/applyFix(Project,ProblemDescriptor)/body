{
  final PsiElement psiElement=descriptor.getPsiElement();
  final PsiFile psiFile=psiElement.getContainingFile();
  new WriteCommandAction(project,psiFile){
    protected void run(    final Result result) throws Throwable {
      final XmlTag tag=PsiTreeUtil.getParentOfType(psiElement,XmlTag.class);
      if (tag == null)       return;
      final Language language=psiFile.getViewProvider().getBaseLanguage();
      final Commenter commenter=LanguageCommenters.INSTANCE.forLanguage(language);
      if (commenter == null)       return;
      final PsiFile tempFile=PsiFileFactory.getInstance(project).createFileFromText("dummy",language.getAssociatedFileType(),commenter.getBlockCommentPrefix() + "@declare id=\"" + myId+ "\""+ commenter.getBlockCommentSuffix()+ "\n");
      final XmlTag parent=tag.getParentTag();
      if (parent != null && parent.isValid()) {
        final XmlTag[] tags=parent.getSubTags();
        if (tags.length > 0) {
          final PsiFile psi=tempFile.getViewProvider().getPsi(language);
          if (psi != null) {
            final PsiElement element=psi.findElementAt(1);
            if (element instanceof PsiComment) {
              parent.getNode().addChild(element.getNode(),tags[0].getNode());
            }
          }
        }
      }
    }
  }
.execute();
}
