{
  int type=getCopyType(elements);
  if (type == NOT_SUPPORTED) {
    return;
  }
  Project project=elements[0].getProject();
  if (type == CLASS) {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.copyClass");
    PsiClass aClass=(PsiClass)elements[0];
    if (defaultTargetDirectory == null) {
      final PsiFile containingFile=aClass.getContainingFile();
      if (containingFile != null) {
        defaultTargetDirectory=containingFile.getContainingDirectory();
      }
    }
    CopyClassDialog dialog=new CopyClassDialog(aClass,defaultTargetDirectory,defaultPackage,project,false);
    dialog.setTitle("Copy Class");
    dialog.show();
    if (dialog.isOK()) {
      PsiDirectory targetDirectory=dialog.getTargetDirectory();
      String className=dialog.getClassName();
      copyClassImpl(className,project,aClass,targetDirectory,"Copy class",false);
    }
  }
 else   if (type == FILES || type == DIRECTORIES) {
    if (defaultTargetDirectory == null) {
      defaultTargetDirectory=getCommonParentDirectory(elements);
    }
    CopyFilesOrDirectoriesDialog dialog=new CopyFilesOrDirectoriesDialog(elements,defaultTargetDirectory,project,false);
    dialog.show();
    if (dialog.isOK()) {
      String newName=elements.length == 1 ? dialog.getNewName() : null;
      copyImpl(elements,newName,dialog.getTargetDirectory(),false);
    }
  }
 else {
    throw new IllegalArgumentException("wrong type " + type);
  }
}
