{
  PsiElement[] elements=new PsiElement[]{element};
  int type=getCopyType(elements);
  if (type == NOT_SUPPORTED) {
    return;
  }
  Project project=element.getProject();
  PsiDirectory targetDirectory;
  if (element instanceof PsiFile) {
    targetDirectory=((PsiFile)element).getContainingDirectory();
  }
 else   if (element instanceof PsiDirectory) {
    targetDirectory=((PsiDirectory)element).getParentDirectory();
  }
 else {
    PsiFile file=element.getContainingFile();
    targetDirectory=file.getContainingDirectory();
  }
  if (type == CLASS) {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.copyClass");
    PsiClass aClass=(PsiClass)element;
    CopyClassDialog dialog=new CopyClassDialog(aClass,null,project,true);
    dialog.setTitle("Clone Class");
    dialog.show();
    if (dialog.isOK()) {
      String className=dialog.getClassName();
      copyClassImpl(className,project,aClass,targetDirectory,"Clone class",true);
    }
  }
 else   if (type == FILES || type == DIRECTORIES) {
    CopyFilesOrDirectoriesDialog dialog=new CopyFilesOrDirectoriesDialog(elements,null,project,true);
    dialog.show();
    if (dialog.isOK()) {
      String newName=dialog.getNewName();
      copyImpl(elements,newName,targetDirectory,true);
    }
  }
 else {
    throw new IllegalArgumentException("wrong type " + type);
  }
}
