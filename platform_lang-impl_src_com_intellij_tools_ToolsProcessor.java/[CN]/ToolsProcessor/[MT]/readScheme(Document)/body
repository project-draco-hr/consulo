{
  Element root=document.getRootElement();
  if (root == null || !TOOL_SET.equals(root.getName())) {
    throw new InvalidDataException();
  }
  String groupName=root.getAttributeValue(ATTRIBUTE_NAME);
  ToolsGroup result=new ToolsGroup(groupName);
  final PathMacroManager macroManager=PathMacroManager.getInstance(ApplicationManager.getApplication());
  for (  final Object o : root.getChildren(TOOL)) {
    Element element=(Element)o;
    Tool tool=new Tool();
    tool.setName(ToolManager.convertString(element.getAttributeValue(NAME)));
    tool.setDescription(ToolManager.convertString(element.getAttributeValue(DESCRIPTION)));
    tool.setShownInMainMenu(Boolean.valueOf(element.getAttributeValue(SHOW_IN_MAIN_MENU)).booleanValue());
    tool.setShownInEditor(Boolean.valueOf(element.getAttributeValue(SHOW_IN_EDITOR)).booleanValue());
    tool.setShownInProjectViews(Boolean.valueOf(element.getAttributeValue(SHOW_IN_PROJECT)).booleanValue());
    tool.setShownInSearchResultsPopup(Boolean.valueOf(element.getAttributeValue(SHOW_IN_SEARCH_POPUP)).booleanValue());
    tool.setEnabled(!Boolean.valueOf(element.getAttributeValue(DISABLED)).booleanValue());
    tool.setUseConsole(Boolean.valueOf(element.getAttributeValue(USE_CONSOLE)).booleanValue());
    tool.setShowConsoleOnStdOut(Boolean.valueOf(element.getAttributeValue(SHOW_CONSOLE_ON_STDOUT)).booleanValue());
    tool.setShowConsoleOnStdErr(Boolean.valueOf(element.getAttributeValue(SHOW_CONSOLE_ON_STDERR)).booleanValue());
    tool.setFilesSynchronizedAfterRun(Boolean.valueOf(element.getAttributeValue(SYNCHRONIZE_AFTER_EXECUTION)).booleanValue());
    Element exec=element.getChild(EXEC);
    if (exec != null) {
      for (      final Object o1 : exec.getChildren(ELEMENT_OPTION)) {
        Element optionElement=(Element)o1;
        String name=optionElement.getAttributeValue(ATTRIBUTE_NAME);
        String value=optionElement.getAttributeValue(ATTRIBUTE_VALUE);
        if (WORKING_DIRECTORY.equals(name)) {
          if (value != null) {
            final String replace=macroManager.expandPath(value).replace('/',File.separatorChar);
            tool.setWorkingDirectory(replace);
          }
        }
        if (COMMAND.equals(name)) {
          tool.setProgram(macroManager.expandPath(ToolManager.convertString(value)));
        }
        if (PARAMETERS.equals(name)) {
          tool.setParameters(macroManager.expandPath(ToolManager.convertString(value)));
        }
      }
    }
    for (    final Object o2 : element.getChildren(FILTER)) {
      Element childNode=(Element)o2;
      FilterInfo filterInfo=new FilterInfo();
      filterInfo.readExternal(childNode);
      tool.addOutputFilter(filterInfo);
    }
    tool.setGroup(groupName);
    result.addElement(tool);
  }
  return result;
}
