{
  return new PsiReference(){
    public PsiElement resolve(){
      return getParameter(value);
    }
    public String getCanonicalText(){
      return value.getText();
    }
    public PsiElement handleElementRename(    String newElementName) throws IncorrectOperationException {
      final CharTable charTableByTree=SharedImplUtil.findCharTableByTree(SourceTreeToPsiMap.psiElementToTree(value.getFirstChild()));
      ASTNode newLeaf=Factory.createSingleLeafElement(ElementType.DOC_TAG_VALUE_TOKEN,newElementName.toCharArray(),0,newElementName.length(),charTableByTree,null);
      return value.getFirstChild().replace(SourceTreeToPsiMap.treeElementToPsi(newLeaf));
    }
    public PsiElement bindToElement(    PsiElement element) throws IncorrectOperationException {
      throw new IncorrectOperationException("Not Implemented");
    }
    public boolean isReferenceTo(    PsiElement element){
      if (!(element instanceof PsiParameter))       return false;
      PsiParameter parameter=(PsiParameter)element;
      if (!getCanonicalText().equals(parameter.getName()))       return false;
      return element.getManager().areElementsEquivalent(element,resolve());
    }
    public Object[] getVariants(){
      return getParameters(value);
    }
    public boolean isSoft(){
      return false;
    }
    public TextRange getRangeInElement(){
      return new TextRange(0,value.getTextLength());
    }
    public PsiElement getElement(){
      return value;
    }
  }
;
}
