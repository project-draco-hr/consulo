{
  GenerationUtil.writeStatement(builder,context,null,new StatementWriter(){
    @Override public void writeStatement(    StringBuilder builder,    ExpressionContext context){
      GrCaseSection section=caseSections[i];
      boolean isCase=!section.getCaseLabel().isDefault();
      if (isCase) {
        builder.append("if (");
        GenerationUtil.invokeMethodByName(section.getCaseLabel().getValue(),"isCase",args,GrNamedArgument.EMPTY_ARRAY,GrClosableBlock.EMPTY_ARRAY,new ExpressionGenerator(builder,context),section);
        builder.append(") ");
      }
      builder.append("{\n");
      final ExpressionContext extended=context.extend();
      CodeBlockGenerator generator=new CodeBlockGenerator(builder,extended);
      Outer:       for (int j=i; j < caseSections.length; j++) {
        section=caseSections[j];
        final GrStatement[] statements=section.getStatements();
        for (        GrStatement statement : statements) {
          if (statement instanceof GrBreakStatement && ((GrBreakStatement)statement).getLabelIdentifier() == null) {
            break Outer;
          }
          statement.accept(generator);
          builder.append("\n");
        }
      }
      builder.append('}');
      if (isCase && i + 1 < caseSections.length) {
        builder.append("\nelse ");
        StringBuilder elseBuilder=new StringBuilder();
        final ExpressionContext elseContext=context.extend();
        generateIfFromCaseSection(elseBuilder,elseContext,caseSections,i + 1,args);
        GenerationUtil.insertStatementFromContextBefore(builder,elseContext);
        builder.append(elseBuilder);
      }
      if (context.myStatements.size() > 0) {
        context.setInsertCurlyBrackets();
      }
    }
  }
);
}
