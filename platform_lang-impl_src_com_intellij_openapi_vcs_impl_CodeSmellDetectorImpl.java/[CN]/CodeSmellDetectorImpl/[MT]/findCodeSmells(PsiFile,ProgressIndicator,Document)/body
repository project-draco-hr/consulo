{
  final List<CodeSmellInfo> result=new ArrayList<CodeSmellInfo>();
  final DaemonCodeAnalyzerImpl codeAnalyzer=(DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(myProject);
  final DaemonProgressIndicator daemonIndicator=new DaemonProgressIndicator();
  ((ProgressIndicatorEx)progress).addStateDelegate(new AbstractProgressIndicatorExBase(){
    @Override public void cancel(){
      super.cancel();
      daemonIndicator.cancel();
    }
  }
);
  ProgressManager.getInstance().runProcess(new Runnable(){
    @Override public void run(){
      List<HighlightInfo> infos=ApplicationManager.getApplication().runReadAction(new Computable<List<HighlightInfo>>(){
        @Override public List<HighlightInfo> compute(){
          return codeAnalyzer.runMainPasses(psiFile,document,daemonIndicator);
        }
      }
);
      collectErrorsAndWarnings(infos,result,document);
    }
  }
,daemonIndicator);
  return result;
}
