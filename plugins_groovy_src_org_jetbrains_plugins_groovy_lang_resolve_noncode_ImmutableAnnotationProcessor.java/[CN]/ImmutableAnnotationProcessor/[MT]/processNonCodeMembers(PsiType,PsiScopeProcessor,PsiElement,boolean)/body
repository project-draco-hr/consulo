{
  if (!(type instanceof PsiClassType))   return true;
  PsiClass psiClass=((PsiClassType)type).resolve();
  if (!(psiClass instanceof GrTypeDefinition) || psiClass.getName() == null)   return true;
  PsiModifierList modifierList=psiClass.getModifierList();
  if (modifierList == null || modifierList.findAnnotation(GroovyImmutableAnnotationInspection.IMMUTABLE) == null)   return true;
  final LightMethodBuilder fieldsConstructor=new LightMethodBuilder(psiClass);
  for (  PsiField field : psiClass.getFields()) {
    fieldsConstructor.addParameter(field.getName(),field.getType());
  }
  if (!processor.execute(fieldsConstructor,ResolveState.initial()))   return false;
  final LightMethodBuilder defaultConstructor=new LightMethodBuilder(psiClass);
  return processor.execute(defaultConstructor,ResolveState.initial());
}
