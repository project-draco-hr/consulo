{
  final StringBuilder labelText=new StringBuilder(text);
  final String disabledTag=FLAG_TO_TAG.get(ParameterInfoUIContextEx.Flag.DISABLE);
  final Map<Integer,Integer> faultMap=new HashMap<Integer,Integer>();
  if (isDisabledBeforeHighlight) {
    final String tag=getTag(disabledTag);
    labelText.insert(0,tag);
    faultMap.put(0,tag.length());
  }
  for (  Map.Entry<TextRange,ParameterInfoUIContextEx.Flag> entry : flagsMap.entrySet()) {
    final TextRange highlightRange=entry.getKey();
    final ParameterInfoUIContextEx.Flag flag=entry.getValue();
    final String tagValue=FLAG_TO_TAG.get(flag);
    final String tag=getTag(tagValue);
    int startOffset=highlightRange.getStartOffset();
    int endOffset=highlightRange.getEndOffset() + tag.length();
    for (    Map.Entry<Integer,Integer> entry1 : faultMap.entrySet()) {
      if (entry1.getKey() < highlightRange.getStartOffset()) {
        startOffset+=entry1.getValue();
      }
      if (entry1.getKey() < highlightRange.getEndOffset()) {
        endOffset+=entry1.getValue();
      }
    }
    if (flag == ParameterInfoUIContextEx.Flag.HIGHLIGHT && isDisabledBeforeHighlight) {
      final String disableCloseTag=getClosingTag(disabledTag);
      labelText.insert(startOffset,disableCloseTag);
      faultMap.put(highlightRange.getStartOffset(),disableCloseTag.length());
    }
    labelText.insert(startOffset,tag);
    faultMap.put(highlightRange.getStartOffset(),tag.length());
    final String endTag=getClosingTag(tagValue);
    labelText.insert(endOffset,endTag);
    faultMap.put(highlightRange.getEndOffset(),endTag.length());
  }
  return "<html>" + labelText.toString() + "</html>";
}
