{
  StringBuilder buf=new StringBuilder();
  removeAll();
  setBackground(background);
  int index=0;
  int curOffset=0;
  final ArrayList<OneLineComponent> components=new ArrayList<OneLineComponent>();
  Map<TextRange,ParameterInfoUIContextEx.Flag> flagsMap=new TreeMap<TextRange,ParameterInfoUIContextEx.Flag>(TEXT_RANGE_COMPARATOR);
  String line="";
  for (int i=0; i < texts.length; i++) {
    String paramText=escapeString(texts[i],escapeFunction);
    if (paramText == null)     break;
    line+=texts[i];
    final EnumSet<ParameterInfoUIContextEx.Flag> flag=flags[i];
    if (flag.contains(ParameterInfoUIContextEx.Flag.HIGHLIGHT)) {
      flagsMap.put(TextRange.create(curOffset,curOffset + paramText.trim().length()),ParameterInfoUIContextEx.Flag.HIGHLIGHT);
    }
    if (flag.contains(ParameterInfoUIContextEx.Flag.DISABLE)) {
      flagsMap.put(TextRange.create(curOffset,curOffset + paramText.trim().length()),ParameterInfoUIContextEx.Flag.DISABLE);
    }
    if (flag.contains(ParameterInfoUIContextEx.Flag.STRIKEOUT)) {
      flagsMap.put(TextRange.create(curOffset,curOffset + paramText.trim().length()),ParameterInfoUIContextEx.Flag.STRIKEOUT);
    }
    curOffset+=paramText.length();
    if (line.length() >= 50) {
      final OneLineComponent component=new OneLineComponent();
      buf.append(component.setup(escapeString(line,escapeFunction),flagsMap,background));
      add(component,new GridBagConstraints(0,index,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
      index+=1;
      flagsMap.clear();
      curOffset=0;
      line="";
      components.add(component);
    }
  }
  final OneLineComponent component=new OneLineComponent();
  buf.append(component.setup(escapeString(line,escapeFunction),flagsMap,background));
  add(component,new GridBagConstraints(0,index,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  components.add(component);
  myOneLineComponents=components.toArray(new OneLineComponent[components.size()]);
  return buf.toString();
}
