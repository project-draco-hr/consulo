{
  if (myXsltFile == null)   throw new ExecutionException("No XSLT file selected");
  final VirtualFile baseFile=myXsltFile.getFile();
  final XsltCommandLineState state=new XsltCommandLineState(this,executionEnvironment);
  final TextConsoleBuilder builder=TextConsoleBuilderFactory.getInstance().createBuilder(getProject());
  builder.addFilter(new CustomRegexpFilter(getProject(),RegexpFilter.FILE_PATH_MACROS + "\\:" + "(?:(?: line )?"+ RegexpFilter.LINE_MACROS+ ")?"+ "(?:\\:(?: column )?"+ RegexpFilter.COLUMN_MACROS+ ")?",baseFile,STRICT_FILE_PATH_EXPR));
  builder.addFilter(new CustomRegexpFilter(getProject(),LOG_TAG + RegexpFilter.FILE_PATH_MACROS + "\\:"+ "(?:(?: line )?"+ RegexpFilter.LINE_MACROS+ ")?"+ "(?:\\:(?: column )?"+ RegexpFilter.COLUMN_MACROS+ ")?",baseFile,RELAXED_FILE_PATH_EXPR));
  builder.addFilter(new CustomRegexpFilter(getProject(),RegexpFilter.FILE_PATH_MACROS + ";" + " \\w+ #"+ RegexpFilter.LINE_MACROS+ "(?:; \\w+ #"+ RegexpFilter.COLUMN_MACROS+ ")?",baseFile,STRICT_FILE_PATH_EXPR));
  builder.addFilter(new CustomRegexpFilter(getProject(),LOG_TAG + RegexpFilter.FILE_PATH_MACROS + ";"+ " \\w+ #"+ RegexpFilter.LINE_MACROS+ "(?:; \\w+ #"+ RegexpFilter.COLUMN_MACROS+ ")?",baseFile,RELAXED_FILE_PATH_EXPR));
  builder.addFilter(new CustomRegexpFilter(getProject(),"(?:" + RegexpFilter.FILE_PATH_MACROS + ")?"+ " line "+ RegexpFilter.LINE_MACROS+ "(?:\\:(?: column )?"+ RegexpFilter.COLUMN_MACROS+ ")?",baseFile,STRICT_FILE_PATH_EXPR));
  state.setConsoleBuilder(builder);
  return state;
}
