{
  LOG.debug("actionPerformed. ");
  final Project project=context.getProject();
  if (project == null) {
    LOG.debug("project is null. returning.");
    return;
  }
  if (ChangeListManager.getInstance(project).isFreezedWithNotification("Can not " + getMnemonicsFreeActionName(context) + " now")) {
    LOG.debug("ChangeListManager is freezed. returning.");
    return;
  }
  if (ProjectLevelVcsManager.getInstance(project).isBackgroundVcsOperationRunning()) {
    LOG.debug("Background operation is running. returning.");
    return;
  }
  final FilePath[] roots=prepareRootsForCommit(getRoots(context),project);
  ChangeListManager.getInstance(project).invokeAfterUpdate(new Runnable(){
    @Override public void run(){
      performCheckIn(context,project,roots);
    }
  }
,InvokeAfterUpdateMode.SYNCHRONOUS_CANCELLABLE,VcsBundle.message("waiting.changelists.update.for.show.commit.dialog.message"),ModalityState.current());
}
