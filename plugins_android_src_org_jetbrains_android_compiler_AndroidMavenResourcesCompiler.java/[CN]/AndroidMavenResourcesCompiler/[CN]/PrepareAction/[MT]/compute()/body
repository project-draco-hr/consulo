{
  if (myContext.getProject().isDisposed()) {
    return EMPTY_GENERATION_ITEM_ARRAY;
  }
  Module[] modules=ModuleManager.getInstance(myContext.getProject()).getModules();
  List<GenerationItem> items=new ArrayList<GenerationItem>();
  for (  Module module : modules) {
    MavenProjectsManager mavenProjectsManager=MavenProjectsManager.getInstance(myContext.getProject());
    if (mavenProjectsManager != null && mavenProjectsManager.isMavenizedModule(module)) {
      AndroidFacet facet=AndroidFacet.getInstance(module);
      if (facet != null && facet.getConfiguration().RUN_PROCESS_RESOURCES_MAVEN_TASK) {
        MavenProject mavenProject=mavenProjectsManager.findProject(module);
        if (mavenProject != null) {
          Manifest manifest=facet.getManifest();
          String aPackage=manifest != null ? manifest.getPackage().getValue() : null;
          if (aPackage == null) {
            VirtualFile manifestFile=AndroidRootUtil.getManifestFile(facet);
            myContext.addMessage(CompilerMessageCategory.ERROR,"Cannot find package value in AndroidManifest.xml for module " + module.getName(),manifestFile != null ? manifestFile.getUrl() : null,-1,-1);
            continue;
          }
          items.add(new MyGenerationItem(module,aPackage,mavenProject.getGeneratedSourcesDirectory(false) + "/r"));
        }
      }
    }
  }
  return items.toArray(new GenerationItem[items.size()]);
}
