{
  if (candidate instanceof PsiExpressionStatement) {
    final PsiExpression expression=((PsiExpressionStatement)candidate).getExpression();
    if (expression instanceof PsiAssignmentExpression) {
      final PsiExpression returnValue=patternReturnStatement.getReturnValue();
      final PsiExpression rExpression=((PsiAssignmentExpression)expression).getRExpression();
      if (!matchPattern(returnValue,rExpression,candidates,match))       return false;
      final PsiExpression lExpression=((PsiAssignmentExpression)expression).getLExpression();
      return match.registerReturnValue(new ExpressionReturnValue(lExpression));
    }
 else     return false;
  }
 else   if (candidate instanceof PsiDeclarationStatement) {
    final PsiElement[] declaredElements=((PsiDeclarationStatement)candidate).getDeclaredElements();
    if (declaredElements.length != 1)     return false;
    if (!(declaredElements[0] instanceof PsiVariable))     return false;
    final PsiVariable variable=((PsiVariable)declaredElements[0]);
    if (!matchPattern(patternReturnStatement.getReturnValue(),variable.getInitializer(),candidates,match))     return false;
    return match.registerReturnValue(new VariableReturnValue(variable));
  }
 else   if (candidate instanceof PsiReturnStatement) {
    final PsiExpression returnValue=((PsiReturnStatement)candidate).getReturnValue();
    if (myMultipleExitPoints) {
      if (!match.registerReturnValue(new ConditionalReturnStatementValue(returnValue)))       return false;
    }
 else {
      if (!match.registerReturnValue(ReturnStatementReturnValue.INSTANCE))       return false;
    }
    return matchPattern(patternReturnStatement.getReturnValue(),returnValue,candidates,match);
  }
 else   return false;
}
