{
  final PsiElement codeFragment=ControlFlowUtil.findCodeFragment(candidates.get(0));
  try {
    final ControlFlow controlFlow=ControlFlowFactory.getInstance(codeFragment.getProject()).getControlFlow(codeFragment,new LocalsControlFlowPolicy(codeFragment),false);
    int startOffset;
    int i=0;
    do {
      startOffset=controlFlow.getStartOffset(candidates.get(i++));
    }
 while (startOffset < 0 && i < candidates.size());
    int endOffset;
    int j=candidates.size() - 1;
    do {
      endOffset=controlFlow.getEndOffset(candidates.get(j--));
    }
 while (endOffset < 0 && j >= 0);
    final IntArrayList exitPoints=new IntArrayList();
    ControlFlowUtil.findExitPointsAndStatements(controlFlow,startOffset,endOffset,exitPoints,ControlFlowUtil.DEFAULT_EXIT_STATEMENTS_CLASSES);
    final PsiVariable[] outVariables=ControlFlowUtil.getOutputVariables(controlFlow,startOffset,endOffset,exitPoints.toArray());
    if ((match.getReturnValue() != null ? 1 : 0) + outVariables.length > 1)     return true;
  }
 catch (  AnalysisCanceledException e) {
  }
  return false;
}
