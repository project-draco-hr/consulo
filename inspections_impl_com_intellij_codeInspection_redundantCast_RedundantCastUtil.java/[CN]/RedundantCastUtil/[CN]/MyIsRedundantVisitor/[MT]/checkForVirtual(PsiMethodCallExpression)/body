{
  PsiReferenceExpression methodExpr=methodCall.getMethodExpression();
  PsiExpression qualifier=methodExpr.getQualifierExpression();
  if (!(qualifier instanceof PsiParenthesizedExpression))   return;
  PsiExpression operand=((PsiParenthesizedExpression)qualifier).getExpression();
  if (!(operand instanceof PsiTypeCastExpression))   return;
  PsiTypeCastExpression typeCast=(PsiTypeCastExpression)operand;
  PsiExpression castOperand=typeCast.getOperand();
  if (castOperand == null)   return;
  PsiType type=castOperand.getType();
  if (type == null)   return;
  if (type instanceof PsiPrimitiveType)   return;
  final JavaResolveResult resolveResult=methodExpr.advancedResolve(false);
  PsiMethod targetMethod=(PsiMethod)resolveResult.getElement();
  if (targetMethod == null)   return;
  if (targetMethod.hasModifierProperty(PsiModifier.STATIC))   return;
  try {
    PsiManager manager=methodExpr.getManager();
    PsiElementFactory factory=manager.getElementFactory();
    PsiMethodCallExpression newCall=(PsiMethodCallExpression)factory.createExpressionFromText(methodCall.getText(),methodCall);
    PsiExpression newQualifier=newCall.getMethodExpression().getQualifierExpression();
    PsiExpression newOperand=((PsiTypeCastExpression)((PsiParenthesizedExpression)newQualifier).getExpression()).getOperand();
    newQualifier.replace(newOperand);
    final JavaResolveResult newResult=newCall.getMethodExpression().advancedResolve(false);
    if (!newResult.isValidResult())     return;
    final PsiMethod newTargetMethod=(PsiMethod)newResult.getElement();
    final PsiType newReturnType=newResult.getSubstitutor().substitute(newTargetMethod.getReturnType());
    final PsiType oldReturnType=resolveResult.getSubstitutor().substitute(targetMethod.getReturnType());
    if (newReturnType.equals(oldReturnType)) {
      if (newTargetMethod.equals(targetMethod)) {
        addToResults(typeCast);
      }
 else       if (newTargetMethod.getSignature(newResult.getSubstitutor()).equals(targetMethod.getSignature(resolveResult.getSubstitutor())) && !(newTargetMethod.isDeprecated() && !targetMethod.isDeprecated())) {
        addToResults(typeCast);
      }
    }
    qualifier=((PsiTypeCastExpression)((PsiParenthesizedExpression)qualifier).getExpression()).getOperand();
  }
 catch (  IncorrectOperationException e) {
  }
}
