{
  myRanges=new LinkedList<Range>();
  int shiftBefore=0;
  int minSize=Math.min(upToDate.size(),current.size());
  for (int i=0; i < minSize; i++) {
    if (upToDate.get(0).equals(current.get(0))) {
      upToDate.remove(0);
      current.remove(0);
      shiftBefore+=1;
    }
 else {
      break;
    }
  }
  minSize=Math.min(upToDate.size(),current.size());
  for (int i=0; i < minSize; i++) {
    if (upToDate.get(upToDate.size() - 1).equals(current.get(current.size() - 1))) {
      upToDate.remove(upToDate.size() - 1);
      current.remove(current.size() - 1);
    }
 else {
      break;
    }
  }
  Diff.Change ch=Diff.buildChanges(ArrayUtil.toStringArray(upToDate),ArrayUtil.toStringArray(current));
  while (ch != null) {
    Range range=Range.createOn(ch,shift + shiftBefore,uShift + shiftBefore);
    myRanges.add(range);
    ch=ch.link;
  }
}
