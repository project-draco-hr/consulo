{
  DirectoryIndex directoryIndex=DirectoryIndex.getInstance(psiDirectory.getProject());
  VirtualFile dir=psiDirectory.getVirtualFile();
  if (shouldBeShown(directoryIndex,dir,settings)) {
    final List<PsiElement> children=new ArrayList<PsiElement>();
    psiDirectory.processChildren(new PsiElementProcessor<PsiFileSystemItem>(){
      @Override public boolean execute(      @NotNull PsiFileSystemItem element){
        if (shouldBeShown(directoryIndex,element.getVirtualFile(),settings)) {
          children.add(element);
        }
        return true;
      }
    }
);
    return PsiUtilCore.toPsiElementArray(children);
  }
  PsiManager manager=psiDirectory.getManager();
  Set<PsiElement> directoriesOnTheWayToContentRoots=new THashSet<PsiElement>();
  for (  VirtualFile root : getTopLevelRoots(psiDirectory.getProject())) {
    VirtualFile current=root;
    while (current != null) {
      VirtualFile parent=current.getParent();
      if (Comparing.equal(parent,dir)) {
        final PsiDirectory psi=manager.findDirectory(current);
        if (psi != null) {
          directoriesOnTheWayToContentRoots.add(psi);
        }
      }
      current=parent;
    }
  }
  return PsiUtilBase.toPsiElementArray(directoriesOnTheWayToContentRoots);
}
