{
  Map<String,ArgumentDescriptor> namedArguments=new HashMap<String,ArgumentDescriptor>();
  GroovyResolveResult[] callVariants=call.getCallVariants(null);
  if (callVariants.length == 0) {
    for (    GroovyNamedArgumentProvider namedArgumentProvider : GroovyNamedArgumentProvider.EP_NAME.getExtensions()) {
      namedArgumentProvider.getNamedArguments(call,null,argumentName,forCompletion,namedArguments);
    }
  }
 else {
    for (    GroovyResolveResult result : callVariants) {
      PsiElement element=result.getElement();
      if (element instanceof PsiMethod) {
        PsiMethod method=(PsiMethod)element;
        PsiParameter[] parameters=method.getParameterList().getParameters();
        if (parameters.length == 0 ? method.isConstructor() : canBeMap(parameters[0])) {
          for (          GroovyNamedArgumentProvider namedArgumentProvider : GroovyNamedArgumentProvider.EP_NAME.getExtensions()) {
            namedArgumentProvider.getNamedArguments(call,method,argumentName,forCompletion,namedArguments);
          }
        }
      }
    }
  }
  return namedArguments;
}
