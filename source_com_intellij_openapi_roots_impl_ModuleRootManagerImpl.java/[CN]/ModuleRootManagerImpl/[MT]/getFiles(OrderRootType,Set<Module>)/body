{
  VirtualFile[] cachedFiles=myCachedFiles.get(type);
  if (cachedFiles == null) {
    final LinkedHashSet<VirtualFile> result=new LinkedHashSet<VirtualFile>();
    final Iterator orderIterator=myRootModel.getOrderIterator();
    while (orderIterator.hasNext()) {
      OrderEntry entry=(OrderEntry)orderIterator.next();
      final VirtualFile[] files;
      if (entry instanceof ModuleOrderEntry) {
        files=((ModuleOrderEntryImpl)entry).getFiles(type,processed);
      }
 else {
        files=entry.getFiles(type);
      }
      for (      VirtualFile file : files) {
        if (file != null) {
          result.add(file);
        }
      }
    }
    cachedFiles=result.toArray(new VirtualFile[result.size()]);
    myCachedFiles.put(type,cachedFiles);
  }
  return cachedFiles;
}
