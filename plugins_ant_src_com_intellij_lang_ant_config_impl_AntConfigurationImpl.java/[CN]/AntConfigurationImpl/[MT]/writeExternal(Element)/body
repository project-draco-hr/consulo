{
  getProperties().writeExternal(parentNode);
  try {
    ActionRunner.runInsideReadAction(new ActionRunner.InterruptibleRunnable(){
      public void run() throws WriteExternalException {
        for (        final AntBuildFileBase buildFile : getBuildFiles()) {
          final Element element=new Element(BUILD_FILE);
          element.setAttribute(URL,buildFile.getVirtualFile().getUrl());
          ((AntBuildFileBase)buildFile).writeProperties(element);
          saveEvents(element,buildFile);
          parentNode.addContent(element);
        }
        final List<VirtualFile> files=new ArrayList<VirtualFile>(myAntFileToContextFileMap.keySet());
        Collections.sort(files,new Comparator<VirtualFile>(){
          public int compare(          final VirtualFile o1,          final VirtualFile o2){
            return o1.getUrl().compareTo(o2.getUrl());
          }
        }
);
        for (        VirtualFile file : files) {
          final Element element=new Element(CONTEXT_MAPPING);
          final VirtualFile contextFile=myAntFileToContextFileMap.get(file);
          element.setAttribute(URL,file.getUrl());
          element.setAttribute(CONTEXT,contextFile.getUrl());
          parentNode.addContent(element);
        }
      }
    }
);
  }
 catch (  WriteExternalException e) {
    LOG.error(e);
    throw e;
  }
catch (  RuntimeException e) {
    LOG.error(e);
    throw e;
  }
catch (  Exception e) {
    LOG.error(e);
  }
}
