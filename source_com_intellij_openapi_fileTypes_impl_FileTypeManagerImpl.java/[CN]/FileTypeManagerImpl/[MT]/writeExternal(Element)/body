{
  parentNode.setAttribute(ATTRIBUTE_VERSION,String.valueOf(VERSION));
  Element element=new Element(ELEMENT_IGNOREFILES);
  parentNode.addContent(element);
  element.setAttribute(ATTRIBUTE_LIST,getIgnoredFilesList());
  Element map=new Element(ELEMENT_EXTENSIONMAP);
  parentNode.addContent(map);
  Map<String,FileType> defaultMappings=new THashMap<String,FileType>(myInitialAssociations);
  for (  String ext : myExtToFileTypeMap.keySet()) {
    FileType type=myExtToFileTypeMap.get(ext);
    if (type != null) {
      if (defaultMappings.get(ext) == type) {
        defaultMappings.remove(ext);
      }
 else       if (shouldSave(type)) {
        Element mapping=new Element(ELEMENT_MAPPING);
        mapping.setAttribute(ATTRIBUTE_EXT,ext);
        mapping.setAttribute(ATTRIBUTE_TYPE,type.getName());
        map.addContent(mapping);
      }
    }
  }
  for (  String ext : defaultMappings.keySet()) {
    FileType type=defaultMappings.get(ext);
    Element mapping=new Element(ELEMENT_REMOVED_MAPPING);
    mapping.setAttribute(ATTRIBUTE_EXT,ext);
    mapping.setAttribute(ATTRIBUTE_TYPE,type.getName());
    map.addContent(mapping);
  }
}
