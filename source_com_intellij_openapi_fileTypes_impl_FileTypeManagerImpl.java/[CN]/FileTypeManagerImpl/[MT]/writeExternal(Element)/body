{
  parentNode.setAttribute("version",String.valueOf(VERSION));
  Element element=new Element("ignoreFiles");
  parentNode.addContent(element);
  element.setAttribute("list",getIgnoredFilesList());
  Element map=new Element("extensionMap");
  parentNode.addContent(map);
  Map<String,FileType> defaultMappings=new HashMap<String,FileType>(myInitialAssociations);
  for (Iterator<String> iterator=myExtToFileTypeMap.keySet().iterator(); iterator.hasNext(); ) {
    String ext=iterator.next();
    FileType type=myExtToFileTypeMap.get(ext);
    if (type != null) {
      if (defaultMappings.get(ext) == type) {
        defaultMappings.remove(ext);
      }
 else       if (!shouldNotSave(type)) {
        Element mapping=new Element("mapping");
        mapping.setAttribute("ext",ext);
        mapping.setAttribute("type",type.getName());
        map.addContent(mapping);
      }
    }
  }
  for (Iterator<String> i=defaultMappings.keySet().iterator(); i.hasNext(); ) {
    String ext=i.next();
    FileType type=defaultMappings.get(ext);
    Element mapping=new Element("removed_mapping");
    mapping.setAttribute("ext",ext);
    mapping.setAttribute("type",type.getName());
    map.addContent(mapping);
  }
}
