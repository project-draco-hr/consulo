{
  UsageTarget[] usageTargets=UsageTargetUtil.findUsageTargets(editor,file);
  if (usageTargets == null) {
    PsiElement targetElement=getTargetElement(editor,file);
    if (targetElement != null && targetElement != file) {
      if (!(targetElement instanceof NavigationItem)) {
        targetElement=targetElement.getNavigationElement();
      }
      if (targetElement instanceof NavigationItem) {
        usageTargets=new UsageTarget[]{new PsiElement2UsageTargetAdapter(targetElement)};
      }
    }
  }
  if (usageTargets == null) {
    PsiReference ref=TargetElementUtil.findReference(editor);
    if (ref instanceof PsiPolyVariantReference) {
      ResolveResult[] results=((PsiPolyVariantReference)ref).multiResolve(false);
      if (results.length > 0) {
        usageTargets=ContainerUtil.mapNotNull(results,new Function<ResolveResult,UsageTarget>(){
          @Override public UsageTarget fun(          ResolveResult result){
            PsiElement element=result.getElement();
            return element == null ? null : new PsiElement2UsageTargetAdapter(element);
          }
        }
,UsageTarget.EMPTY_ARRAY);
      }
    }
  }
  return usageTargets;
}
