{
  Element newModuleRootManager=new Element("component");
  newModuleRootManager.setAttribute("name","NewModuleRootManager");
  Element jdk=projectRootManager.getChild("jdk");
  if (jdk != null) {
    String jdkName=jdk.getAttributeValue("name");
    if (jdkName != null) {
      Element orderEntry=new Element("orderEntry");
      orderEntry.setAttribute("type","jdk");
      orderEntry.setAttribute("jdkName",jdkName);
      newModuleRootManager.addContent(orderEntry);
    }
  }
  Element orderEntry=new Element("orderEntry");
  orderEntry.setAttribute("type","module");
  orderEntry.setAttribute("module-name",mainModule);
  newModuleRootManager.addContent(orderEntry);
  Element output=new Element("output");
  output.setAttribute("url","file://" + getModulePath("classes",module,moduleDirectory.getPath()));
  newModuleRootManager.addContent(output);
  Element content=new Element("content");
  content.setAttribute("url","file://" + getModulePath("",module,moduleDirectory.getPath()));
  newModuleRootManager.addContent(content);
  VirtualFile classesDir=moduleDirectory.findFileByRelativePath("WEB-INF/classes");
  if (classesDir != null) {
    Element classes=createLibraryEntry(classesDir,module,moduleDirectory);
    newModuleRootManager.addContent(classes);
  }
  VirtualFile lib=moduleDirectory.findFileByRelativePath("WEB-INF/lib");
  if (lib != null) {
    String modulePath=moduleDirectory.getPath();
    VirtualFile[] libs=lib.getChildren();
    for (int i=0; i < libs.length; i++) {
      VirtualFile virtualFile=libs[i];
      Element libEntry=createLibraryEntry(virtualFile,module,moduleDirectory);
      newModuleRootManager.addContent(libEntry);
    }
  }
  return newModuleRootManager;
}
