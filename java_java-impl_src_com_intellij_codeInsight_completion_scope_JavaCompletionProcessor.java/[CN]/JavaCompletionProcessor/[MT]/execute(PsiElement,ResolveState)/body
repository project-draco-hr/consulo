{
  if (myNonInitializedFields.contains(element)) {
    return true;
  }
  if (!(element instanceof PsiClass) && element instanceof PsiModifierListOwner) {
    PsiModifierListOwner modifierListOwner=(PsiModifierListOwner)element;
    if (myStatic) {
      if (!modifierListOwner.hasModifierProperty(PsiModifier.STATIC)) {
        return true;
      }
    }
 else {
      if (!myAllowStaticWithInstanceQualifier && modifierListOwner.hasModifierProperty(PsiModifier.STATIC) && !myMembersFlag) {
        return true;
      }
    }
  }
  final PsiElement elementParent=myElement.getParent();
  if (element instanceof PsiPackage && myScope instanceof PsiClass) {
    if (!(elementParent instanceof PsiQualifiedReference && ((PsiQualifiedReference)elementParent).getQualifier() != null)) {
      return true;
    }
  }
  if (satisfies(element,state) && isAccessible(element)) {
    CompletionElement element1=new CompletionElement(myQualifierType,element,state.get(PsiSubstitutor.KEY),myQualifierClass);
    if (myResultNames.add(element1.getUniqueId())) {
      myResults.add(element1);
    }
  }
  return true;
}
