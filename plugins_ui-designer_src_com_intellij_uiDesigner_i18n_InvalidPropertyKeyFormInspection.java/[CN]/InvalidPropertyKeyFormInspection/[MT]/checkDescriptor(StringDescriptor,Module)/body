{
  final String bundleName=descriptor.getDottedBundleName();
  final String key=descriptor.getKey();
  if (bundleName == null && key == null)   return null;
  if (bundleName == null) {
    return UIDesignerBundle.message("inspection.invalid.property.in.form.quickfix.error.bundle.not.specified");
  }
  if (key == null) {
    return UIDesignerBundle.message("inspection.invalid.property.in.form.quickfix.error.property.key.not.specified");
  }
  PropertiesReferenceManager manager=PropertiesReferenceManager.getInstance(module.getProject());
  List<PropertiesFile> propFiles=manager.findPropertiesFiles(module,bundleName);
  if (propFiles.size() == 0) {
    return UIDesignerBundle.message("inspection.invalid.property.in.form.quickfix.error.bundle.not.found",bundleName);
  }
  for (  PropertiesFile propFile : propFiles) {
    final com.intellij.lang.properties.IProperty property=propFile.findPropertyByKey(key);
    if (property == null) {
      return UIDesignerBundle.message("inspection.invalid.property.in.form.quickfix.error.key.not.found",key,bundleName,propFile.getLocale().getDisplayName());
    }
  }
  return null;
}
