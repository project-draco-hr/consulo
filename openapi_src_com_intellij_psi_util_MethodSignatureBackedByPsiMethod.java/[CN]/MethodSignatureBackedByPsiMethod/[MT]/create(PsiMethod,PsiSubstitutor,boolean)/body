{
  PsiTypeParameter[] methodTypeParameters=method.getTypeParameters();
  final PsiParameter[] parameters=method.getParameterList().getParameters();
  PsiType[] parameterTypes=new PsiType[parameters.length];
  if (isRaw) {
    for (    PsiTypeParameter typeParameter : methodTypeParameters) {
      substitutor=substitutor.put(typeParameter,null);
    }
    methodTypeParameters=PsiTypeParameter.EMPTY_ARRAY;
    for (int i=0; i < parameterTypes.length; i++) {
      parameterTypes[i]=TypeConversionUtil.erasure(substitutor.substitute(parameters[i].getType()));
    }
  }
 else {
    for (int i=0; i < parameterTypes.length; i++) {
      parameterTypes[i]=parameters[i].getType();
    }
  }
  return new MethodSignatureBackedByPsiMethod(method,substitutor,isRaw,parameterTypes,methodTypeParameters);
}
