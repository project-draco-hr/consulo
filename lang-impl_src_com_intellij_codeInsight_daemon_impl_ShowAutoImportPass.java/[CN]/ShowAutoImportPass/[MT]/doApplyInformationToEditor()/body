{
  ApplicationManager.getApplication().assertIsDispatchThread();
  if (!myEditor.getContentComponent().hasFocus())   return;
  HighlightInfo[] visibleHighlights=getVisibleHighlights(myStartOffset,myEndOffset,myProject,myEditor);
  PsiElement[] elements=new PsiElement[visibleHighlights.length];
  for (int i=0; i < visibleHighlights.length; i++) {
    ProgressManager.getInstance().checkCanceled();
    HighlightInfo highlight=visibleHighlights[i];
    final PsiElement elementAt=myFile.findElementAt(highlight.startOffset);
    elements[i]=elementAt;
  }
  int caretOffset=myEditor.getCaretModel().getOffset();
  for (int i=visibleHighlights.length - 1; i >= 0; i--) {
    HighlightInfo info=visibleHighlights[i];
    if (elements[i] != null && info.startOffset <= caretOffset && showAddImportHint(info,elements[i]))     return;
  }
  for (int i=0; i < visibleHighlights.length; i++) {
    HighlightInfo info=visibleHighlights[i];
    if (elements[i] != null && info.startOffset > caretOffset && showAddImportHint(info,elements[i]))     return;
  }
}
