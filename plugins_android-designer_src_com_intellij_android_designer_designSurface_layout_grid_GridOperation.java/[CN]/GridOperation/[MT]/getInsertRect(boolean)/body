{
  GridInfo gridInfo=getGridInfo();
  int startColumn=myColumn;
  int endColumn=myColumn + 1;
  int startRow=myRow;
  int endRow=myRow + 1;
  if (includeSpans) {
    RadComponent[] columnComponents=gridInfo.components[myRow];
    RadComponent existComponent=columnComponents[startColumn];
    while (startColumn > 0) {
      if (columnComponents[startColumn - 1] == existComponent) {
        startColumn--;
      }
 else {
        break;
      }
    }
    while (endColumn < columnComponents.length) {
      if (columnComponents[endColumn] == existComponent) {
        endColumn++;
      }
 else {
        break;
      }
    }
    while (startRow > 0) {
      if (gridInfo.components[startRow - 1][startColumn] == existComponent) {
        startRow--;
      }
 else {
        break;
      }
    }
    while (endRow < gridInfo.components.length) {
      if (gridInfo.components[endRow][startColumn] == existComponent) {
        endRow++;
      }
 else {
        break;
      }
    }
  }
  int x1=startColumn < gridInfo.vLines.length ? gridInfo.vLines[startColumn] : 0;
  int x2=endColumn < gridInfo.vLines.length ? gridInfo.vLines[endColumn] : gridInfo.width;
  int y1=startRow < gridInfo.hLines.length ? gridInfo.hLines[startRow] : 0;
  int y2=endRow < gridInfo.hLines.length ? gridInfo.hLines[endRow] : gridInfo.height;
  return new Rectangle(x1,y1,x2 - x1,y2 - y1);
}
