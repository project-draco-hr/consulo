{
  final CachedValue<Boolean> userData=psiClass.getUserData(HAS_GROOVY_OBJECT_METHODS);
  if (userData != null && userData.getValue() != null)   return userData.getValue();
  if (manager.areElementsEquivalent(groovyObjSupport,psiClass))   return true;
  final PsiClassType[] supers;
  if (psiClass instanceof GrTypeDefinition) {
    supers=getReferenceListTypes(((GrTypeDefinition)psiClass).getExtendsClause());
  }
 else {
    supers=psiClass.getExtendsListTypes();
  }
  boolean result=false;
  for (  PsiClassType superType : supers) {
    PsiClass aSuper=superType.resolve();
    if (aSuper == null || visited.contains(aSuper))     continue;
    visited.add(aSuper);
    if (hasGroovyObjectSupportInner(aSuper,visited,groovyObjSupport,manager)) {
      result=true;
      break;
    }
  }
  final boolean finalResult=result;
  psiClass.putUserData(HAS_GROOVY_OBJECT_METHODS,CachedValuesManager.getManager(manager.getProject()).createCachedValue(new CachedValueProvider<Boolean>(){
    @Override public Result<Boolean> compute(){
      return Result.create(finalResult,PsiModificationTracker.JAVA_STRUCTURE_MODIFICATION_COUNT);
    }
  }
,false));
  return finalResult;
}
