{
  ArrayList<PsiMethod> result=new ArrayList<PsiMethod>();
  final MethodSignature patternSignature=patternMethod.getSignature(PsiSubstitutor.EMPTY);
  for (  PsiMethod method : findMethodsByName(grType,patternMethod.getName(),checkBases,includeSynthetic)) {
    final PsiClass clazz=method.getContainingClass();
    if (clazz == null)     continue;
    PsiSubstitutor superSubstitutor=TypeConversionUtil.getClassSubstitutor(clazz,grType,PsiSubstitutor.EMPTY);
    if (superSubstitutor == null)     continue;
    final MethodSignature signature=method.getSignature(superSubstitutor);
    if (signature.equals(patternSignature)) {
      result.add(method);
    }
  }
  return result.toArray(new PsiMethod[result.size()]);
}
