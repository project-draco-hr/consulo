{
  final PsiClassType[] extendsTypes=getReferenceListTypes(grType.getExtendsClause());
  if (grType.isInterface())   return extendsTypes;
  for (  PsiClassType type : extendsTypes) {
    final PsiClass superClass=type.resolve();
    if (superClass instanceof GrTypeDefinition && !superClass.isInterface() || superClass != null && GroovyCommonClassNames.GROOVY_OBJECT_SUPPORT.equals(superClass.getQualifiedName())) {
      return extendsTypes;
    }
  }
  PsiClass grObSupport=GroovyPsiManager.getInstance(grType.getProject()).findClassWithCache(GroovyCommonClassNames.GROOVY_OBJECT_SUPPORT,grType.getResolveScope());
  if (grObSupport != null) {
    final PsiClassType type=JavaPsiFacade.getInstance(grType.getProject()).getElementFactory().createType(grObSupport);
    return ArrayUtil.append(extendsTypes,type,PsiClassType.ARRAY_FACTORY);
  }
  return extendsTypes;
}
