{
  Matcher localDelMatcher=LOCAL_DELETE_REMOTE_MODIFIED_CONFLICT_MESSAGE_PATTERN.matcher(message);
  Matcher localModifyMatcher=REMOTE_DELETE_LOCAL_MODIFIED_CONFLICT_MESSAGE_PATTERN.matcher(message);
  String filename;
  final String modifiedMessage;
  if (localDelMatcher.matches()) {
    filename=localDelMatcher.group(1);
    modifiedMessage="File " + filename + " is deleted locally, but modified remotely. Do you want to keep the modified version or remove the file?";
  }
 else   if (localModifyMatcher.matches()) {
    filename=localModifyMatcher.group(1);
    modifiedMessage="File " + filename + " is deleted remotely, but modified locally. Do you want to keep the modified version or remove the file?";
  }
 else {
    modifiedMessage="";
  }
  final int[] chosen=new int[]{-1};
  try {
    EventQueue.invokeAndWait(new Runnable(){
      public void run(){
        String[] choicePresentationArray=new String[choices.length];
        for (int i=0; i < choices.length; ++i) {
          choicePresentationArray[i]=choices[i].toString();
        }
        chosen[0]=Messages.showChooseDialog(modifiedMessage,"Delete-Modify Conflict",choicePresentationArray,defaultChoice.toString(),Messages.getQuestionIcon());
      }
    }
);
  }
 catch (  InterruptedException e) {
    LOG.error(e);
    return defaultChoice;
  }
catch (  InvocationTargetException e) {
    LOG.error(e);
    return defaultChoice;
  }
  return chosen[0] >= 0 ? choices[chosen[0]] : HgPromptChoice.ABORT;
}
