{
  final int[] chosen=new int[]{-1};
  try {
    EventQueue.invokeAndWait(new Runnable(){
      public void run(){
        String[] choicePresentationArray=new String[choices.length];
        for (int i=0; i < choices.length; ++i) {
          choicePresentationArray[i]=choices[i].toString();
        }
        chosen[0]=Messages.showChooseDialog(myMessage,"Delete-Modify Conflict",choicePresentationArray,defaultChoice.toString(),Messages.getQuestionIcon());
      }
    }
);
  }
 catch (  InterruptedException e) {
    LOG.error(e);
    return defaultChoice;
  }
catch (  InvocationTargetException e) {
    LOG.error(e);
    return defaultChoice;
  }
  return chosen[0] >= 0 ? choices[chosen[0]] : HgPromptChoice.ABORT;
}
