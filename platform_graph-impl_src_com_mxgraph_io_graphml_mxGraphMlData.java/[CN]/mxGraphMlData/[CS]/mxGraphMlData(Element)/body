{
  this.dataId=dataElement.getAttribute(mxGraphMlConstants.ID);
  this.dataKey=dataElement.getAttribute(mxGraphMlConstants.KEY);
  this.dataValue="";
  Element shapeNodeElement=mxGraphMlUtils.childsTag(dataElement,mxGraphMlConstants.JGRAPH + mxGraphMlConstants.SHAPENODE);
  Element shapeEdgeElement=mxGraphMlUtils.childsTag(dataElement,mxGraphMlConstants.JGRAPH + mxGraphMlConstants.SHAPEEDGE);
  if (shapeNodeElement != null) {
    this.dataShapeNode=new mxGraphMlShapeNode(shapeNodeElement);
  }
 else   if (shapeEdgeElement != null) {
    this.dataShapeEdge=new mxGraphMlShapeEdge(shapeEdgeElement);
  }
 else {
    NodeList childs=dataElement.getChildNodes();
    List<Node> childrens=mxGraphMlUtils.copyNodeList(childs);
    for (    Node n : childrens) {
      if (n.getNodeName().equals("#text")) {
        this.dataValue+=n.getNodeValue();
      }
    }
    this.dataValue=this.dataValue.trim();
  }
}
