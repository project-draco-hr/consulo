{
  final List<String> pieces=new ArrayList<String>();
  final List<IssueNavigationConfiguration.LinkMatch> list=myIssueNavigationConfiguration.findIssueLinks(text);
  int pos=0;
  for (  IssueNavigationConfiguration.LinkMatch match : list) {
    final TextRange textRange=match.getRange();
    if (textRange.getStartOffset() > pos) {
      final String piece=text.substring(pos,textRange.getStartOffset());
      pieces.add(piece);
      myColoredComponent.append(piece,baseStyle);
    }
    final String piece=textRange.substring(text);
    pieces.add(piece);
    myColoredComponent.append(piece,getLinkAttributes(baseStyle),new TreeLinkMouseListener.BrowserLauncher(match.getTargetUrl()));
    pos=textRange.getEndOffset();
  }
  if (pos < text.length()) {
    final String piece=text.substring(pos);
    pieces.add(piece);
    myColoredComponent.append(piece,baseStyle);
  }
  return pieces;
}
