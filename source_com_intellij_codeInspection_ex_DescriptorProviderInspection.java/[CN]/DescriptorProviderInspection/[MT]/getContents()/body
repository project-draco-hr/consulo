{
  List<InspectionTreeNode> content=new ArrayList<InspectionTreeNode>();
  Set<String> packages=myPackageContents.keySet();
  for (Iterator<String> iterator=packages.iterator(); iterator.hasNext(); ) {
    String p=iterator.next();
    InspectionPackageNode pNode=new InspectionPackageNode(p);
    Set<RefElement> elements=myPackageContents.get(p);
    for (Iterator<RefElement> iterator1=elements.iterator(); iterator1.hasNext(); ) {
      RefElement refElement=iterator1.next();
      final RefElementNode elemNode=new RefElementNode(refElement,false);
      pNode.add(elemNode);
      final ProblemDescriptor[] problems=myProblemElements.get(refElement);
      if (problems.length > 1) {
        for (int i=0; i < problems.length; i++) {
          ProblemDescriptor problem=problems[i];
          elemNode.add(new ProblemDescriptionNode(refElement,problem));
        }
      }
 else       if (problems.length == 1) {
        elemNode.setProblem(problems[0]);
      }
    }
    content.add(pNode);
  }
  return content.toArray(new InspectionTreeNode[content.size()]);
}
