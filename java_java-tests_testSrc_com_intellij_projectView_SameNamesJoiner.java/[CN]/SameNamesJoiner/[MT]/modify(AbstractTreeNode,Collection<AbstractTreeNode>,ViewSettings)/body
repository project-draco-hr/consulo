{
  if (parent instanceof JoinedNode)   return children;
  ArrayList<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  MultiValuesMap<Object,AbstractTreeNode> executed=new MultiValuesMap<Object,AbstractTreeNode>();
  for (Iterator<AbstractTreeNode> iterator=children.iterator(); iterator.hasNext(); ) {
    ProjectViewNode treeNode=(ProjectViewNode)iterator.next();
    Object o=treeNode.getValue();
    if (o instanceof PsiFile) {
      String name=((PsiFile)o).getVirtualFile().getNameWithoutExtension();
      executed.put(name,treeNode);
    }
 else {
      executed.put(o,treeNode);
    }
  }
  Iterator<Object> keys=executed.keySet().iterator();
  while (keys.hasNext()) {
    Object each=keys.next();
    Collection<AbstractTreeNode> objects=executed.get(each);
    if (objects.size() > 1) {
      result.add(new JoinedNode(objects,new Joined(findPsiFileIn(objects))));
    }
 else     if (objects.size() == 1) {
      result.add(objects.iterator().next());
    }
  }
  return result;
}
