{
  myProtectedQueueSize=protectedQueueSize;
  myProbationalQueueSize=probationalQueueSize;
  myProbationalQueue=new LinkedHashMap<K,V>(){
    protected boolean removeEldestEntry(    final Map.Entry<K,V> eldest){
      if (size() > myProtectedQueueSize) {
        myProbationalQueue.put(eldest.getKey(),eldest.getValue());
        return true;
      }
      return false;
    }
  }
;
  myProtectedQueue=new LinkedHashMap<K,V>(){
    protected boolean removeEldestEntry(    final Map.Entry<K,V> eldest){
      if (size() > myProbationalQueueSize) {
        onDropFromCache(eldest.getKey(),eldest.getValue());
        return true;
      }
      return false;
    }
  }
;
}
