{
  createReadChangesCache();
  myChangesBeforeUpdate=new ChangeHashSet(myChanges);
  myOutdatedChanges=new ArrayList<Change>();
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(scope.getProject()).getFileIndex();
  for (  Change oldBoy : myChangesBeforeUpdate) {
    final ContentRevision before=oldBoy.getBeforeRevision();
    final ContentRevision after=oldBoy.getAfterRevision();
    if (before != null && scope.belongsTo(before.getFile()) || after != null && scope.belongsTo(after.getFile()) || isIgnoredChange(oldBoy,fileIndex)) {
      myIsInUpdate=true;
      removeChange(oldBoy);
      myOutdatedChanges.add(oldBoy);
    }
  }
  if (isDefault()) {
    myIsInUpdate=true;
  }
}
