{
  super(getInitializer(initializer));
  PsiArrayType arrayType=new PsiArrayType(componentType);
  PsiArrayInitializerExpression arrayInitializer=initializer;
  while (arrayInitializer.getParent() instanceof PsiArrayInitializerExpression) {
    arrayInitializer=(PsiArrayInitializerExpression)arrayInitializer.getParent();
    arrayType=new PsiArrayType(arrayType);
  }
  myTargetType=arrayType;
  PsiExpression myNewExpression=getNewExpressionLocal(arrayInitializer);
  PsiVariable myVariable=getVariableLocal(arrayInitializer);
  myName=myVariable == null ? null : myTargetType.equals(myVariable.getType()) && myNewExpression != null ? QuickFixBundle.message("change.new.operator.type.text",getNewText(myNewExpression,arrayInitializer),myTargetType.getCanonicalText(),"") : QuickFixBundle.message("fix.variable.type.text",myVariable.getName(),myTargetType.getCanonicalText());
  myFamilyName=myVariable == null ? null : myTargetType.equals(myVariable.getType()) && myNewExpression != null ? QuickFixBundle.message("change.new.operator.type.family") : QuickFixBundle.message("fix.variable.type.family");
}
