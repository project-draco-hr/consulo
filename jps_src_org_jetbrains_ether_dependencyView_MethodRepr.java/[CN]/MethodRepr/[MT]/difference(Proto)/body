{
  final int d=super.difference(past).base();
  final Difference.Specifier<TypeRepr.AbstractType> excs=Difference.make(((MethodRepr)past).exceptions,exceptions);
  return new Diff(){
    @Override public boolean defaultAdded(){
      return hasValue() && !((MethodRepr)past).hasValue();
    }
    @Override public boolean defaultRemoved(){
      return !hasValue() && ((MethodRepr)past).hasValue();
    }
    @Override public Specifier<TypeRepr.AbstractType> exceptions(){
      return excs;
    }
    @Override public int base(){
      return d;
    }
  }
;
}
