{
  if (isQuickFixOnReadOnlyFile(project,descriptor))   return;
  final PsiElement nameElement=descriptor.getPsiElement();
  final PsiClass containingClass=(PsiClass)PsiTreeUtil.getParentOfType(nameElement,PsiClass.class);
  final PsiManager psiManager=containingClass.getManager();
  final PsiElementFactory elementFactory=psiManager.getElementFactory();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
  final PsiJavaCodeReferenceElement ref=elementFactory.createReferenceElementByFQClassName("java.io.Serializable",scope);
  try {
    containingClass.getImplementsList().add(ref);
  }
 catch (  IncorrectOperationException e) {
    s_logger.error(e);
  }
}
