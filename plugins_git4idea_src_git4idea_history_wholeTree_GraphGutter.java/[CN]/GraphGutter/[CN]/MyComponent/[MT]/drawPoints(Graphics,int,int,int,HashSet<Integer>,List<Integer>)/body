{
  final Color darker=new Color(35,107,178);
  final Color fill=new Color(166,220,255);
  final Color fillNotIncluded=Gray._200;
  while (idx <= lastIdx && idx < myModel.getRowCount()) {
    CommitI commitAt=myModel.getCommitAt(idx);
    final boolean contains=selected.contains(idx);
    final boolean isInActiveRoots=myModel.getActiveRoots().contains(commitAt.selectRepository(myModel.getRootsHolder().getRoots()));
    if (!commitAt.holdsDecoration() && isInActiveRoots) {
      int correctedWire=myModel.getCorrectedWire(commitAt);
      int startXPoint=startPoint(correctedWire,wiresGroups);
      final boolean inCurrentBranch=myCurrentBranchColored ? myModel.isInCurrentBranch(idx) : true;
      final Icon icon;
      if (inCurrentBranch) {
        icon=myStyle.getNodeIcon(correctedWire);
      }
 else {
        icon=ourGrey;
      }
      icon.paintIcon(this,graphics,startXPoint + 1,upBound + myRowHeight / 2 - 3);
    }
    ++idx;
    upBound+=myRowHeight;
  }
}
