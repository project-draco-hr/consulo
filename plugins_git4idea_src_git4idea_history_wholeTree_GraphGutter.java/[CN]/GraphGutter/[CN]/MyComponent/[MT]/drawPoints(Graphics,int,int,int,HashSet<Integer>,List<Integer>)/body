{
  final Color darker=UIUtil.getTableSelectionBackground().darker();
  final Color fill=new Color(176,230,255);
  while (idx <= lastIdx && idx < myModel.getRowCount()) {
    CommitI commitAt=myModel.getCommitAt(idx);
    final boolean contains=selected.contains(idx);
    final boolean isInActiveRoots=myModel.getActiveRoots().contains(commitAt.selectRepository(myModel.getRootsHolder().getRoots()));
    if (!commitAt.holdsDecoration() && isInActiveRoots) {
      int correctedWire=myModel.getCorrectedWire(commitAt);
      int startXPoint=startPoint(correctedWire,wiresGroups);
      graphics.setColor(contains ? Color.white : fill);
      ((Graphics2D)graphics).fillArc(startXPoint + ourLineWidth / 2 - 4,upBound + myRowHeight / 2 - 4,diameter,diameter,0,360);
      graphics.setColor(contains ? Color.white : UIUtil.getTableSelectionBackground());
      ((Graphics2D)graphics).drawArc(startXPoint + ourLineWidth / 2 - 4 + 1,upBound + myRowHeight / 2 - 4,diameter,diameter,0,360);
      if (!contains) {
        graphics.setColor(Color.white);
        ((Graphics2D)graphics).drawArc(startXPoint + ourLineWidth / 2 - 4 + 1,upBound + myRowHeight / 2 - 4 + 1,diameter - 1,diameter - 1,100,90);
      }
      graphics.setColor(contains ? Color.white : darker);
      ((Graphics2D)graphics).drawArc(startXPoint + ourLineWidth / 2 - 4,upBound + myRowHeight / 2 - 4,diameter,diameter,0,360);
    }
 else {
    }
    ++idx;
    upBound+=myRowHeight;
  }
}
