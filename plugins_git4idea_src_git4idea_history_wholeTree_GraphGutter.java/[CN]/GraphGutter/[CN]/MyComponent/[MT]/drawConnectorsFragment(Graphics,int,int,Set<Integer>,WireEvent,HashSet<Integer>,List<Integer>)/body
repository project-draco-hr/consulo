{
  final Color darker2=UIUtil.getTableSelectionBackground().darker();
  final Color darker=new Color(255,128,0);
  int rowYOffset=yOffset;
  for (int i=idxFrom; i < event.getCommitIdx(); i++) {
    for (    Integer wire : wires) {
      g.setColor(selected.contains(i) ? UIUtil.getTableSelectionForeground() : (wire / 2 % 2 == 1 ? darker : darker2));
      int startXPoint=startPoint(wire,wiresGroups) + ourLineWidth / 2;
      g.drawLine(startXPoint,rowYOffset,startXPoint,rowYOffset + myRowHeight);
    }
    rowYOffset+=myRowHeight;
  }
  final int eventWire=myModel.getCorrectedWire(myModel.getCommitAt(event.getCommitIdx()));
  g.setColor(selected.contains(event.getCommitIdx()) ? UIUtil.getTableSelectionForeground() : (eventWire / 2 % 2 == 1 ? darker : darker2));
  int eventStartXPoint=startPoint(eventWire,wiresGroups) + ourLineWidth / 2;
  final Set<Integer> skip=new HashSet<Integer>();
  if (event.isStart() && event.isEnd()) {
    return;
  }
  if (event.isStart()) {
    skip.add(eventWire);
    g.drawLine(eventStartXPoint,rowYOffset + myRowHeight / 2,eventStartXPoint,rowYOffset + myRowHeight);
  }
  if (event.isEnd()) {
    skip.add(eventWire);
    g.drawLine(eventStartXPoint,rowYOffset,eventStartXPoint,rowYOffset + myRowHeight / 2);
  }
  final int[] commitsStarts=event.getCommitsStarts();
  if (commitsStarts != null) {
    for (    int commitsStart : commitsStarts) {
      if (commitsStart == -1)       continue;
      final int wire=myModel.getCorrectedWire(myModel.getCommitAt(commitsStart));
      int startXPoint=startPoint(wire,wiresGroups) + ourLineWidth / 2;
      g.setColor(selected.contains(event.getCommitIdx()) ? UIUtil.getTableSelectionForeground() : (wire / 2 % 2 == 1 ? darker : darker2));
      g.drawLine(startXPoint,rowYOffset + myRowHeight,eventStartXPoint,rowYOffset + myRowHeight / 2);
    }
  }
  final int[] wireEnds=event.getWireEnds();
  if (wireEnds != null) {
    for (    int end : wireEnds) {
      if (end == -1)       continue;
      final int wire=myModel.getCorrectedWire(myModel.getCommitAt(end));
      skip.add(wire);
      int startXPoint=startPoint(wire,wiresGroups) + ourLineWidth / 2;
      g.setColor(selected.contains(event.getCommitIdx()) ? UIUtil.getTableSelectionForeground() : (wire / 2 % 2 == 1 ? darker : darker2));
      g.drawLine(startXPoint,rowYOffset,eventStartXPoint,rowYOffset + myRowHeight / 2);
    }
  }
  for (  Integer wire : wires) {
    if (skip.contains(wire))     continue;
    int startXPoint=startPoint(wire,wiresGroups) + ourLineWidth / 2;
    g.setColor(selected.contains(event.getCommitIdx()) ? UIUtil.getTableSelectionForeground() : (wire / 2 % 2 == 1 ? darker : darker2));
    g.drawLine(startXPoint,rowYOffset,startXPoint,rowYOffset + myRowHeight);
  }
}
