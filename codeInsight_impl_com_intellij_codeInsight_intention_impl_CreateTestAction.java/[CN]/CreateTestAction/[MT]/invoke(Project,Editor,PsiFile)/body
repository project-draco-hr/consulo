{
  PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
  final Module srcModule=ModuleUtil.findModuleForPsiElement(file);
  final PsiClass srcClass=PsiTreeUtil.getParentOfType(element,PsiClass.class);
  PsiDirectory srcDir=file.getContainingDirectory();
  PsiPackage srcPackage=JavaDirectoryService.getInstance().getPackage(srcDir);
  ensureJuntLibraryAttached(project,srcModule);
  CreateTestDialog d=new CreateTestDialog(project,getText(),srcClass.getName() + "Test",hasJUnitLib(project) ? "junit.framework.TestCase" : "",srcPackage,srcModule);
  d.show();
  if (!d.isOK())   return;
  final String targetClassName=d.getClassName();
  final String superClassName=d.getSuperClassName();
  final PsiDirectory targetDirectory=d.getTargetDirectory();
  if (targetDirectory == null)   return;
  PostprocessReformattingAspect.getInstance(project).postponeFormattingInside(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          try {
            IdeDocumentHistory.getInstance(project).includeCurrentPlaceAsChangePlace();
            PsiClass targetClass=JavaDirectoryService.getInstance().createClass(targetDirectory,targetClassName);
            addSuperClass(targetClass,project,superClassName);
            CodeInsightUtil.positionCursor(project,targetClass.getContainingFile(),targetClass.getLBrace());
          }
 catch (          IncorrectOperationException e) {
            showErrorLater(project,targetClassName);
          }
        }
      }
);
    }
  }
);
}
