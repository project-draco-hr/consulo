{
  final SortedMap<GroupDescriptor,Set<UsageDescriptor>> map=new TreeMap<GroupDescriptor,Set<UsageDescriptor>>(new Comparator<GroupDescriptor>(){
    @Override public int compare(    GroupDescriptor g1,    GroupDescriptor g2){
      final int priority=(int)(g2.getPriority() - g1.getPriority());
      return priority == 0 ? g1.getId().compareTo(g2.getId()) : priority;
    }
  }
);
  for (  UsageDescriptor descriptor : descriptors) {
    final GroupDescriptor group=descriptor.getGroup();
    if (!map.containsKey(group)) {
      map.put(group,new HashSet<UsageDescriptor>());
    }
    map.get(group).add(descriptor);
  }
  return map;
}
