{
  final Set<PatchedUsage> patchedUsages=ContainerUtil.map2Set(allUsages,new Function<UsageDescriptor,PatchedUsage>(){
    @Override public PatchedUsage fun(    UsageDescriptor usageDescriptor){
      return new PatchedUsage(usageDescriptor);
    }
  }
);
  for (  UsageDescriptor sentUsage : sentUsages) {
    final PatchedUsage descriptor=findDescriptor(patchedUsages,sentUsage.getId());
    if (descriptor == null) {
      patchedUsages.add(new PatchedUsage(sentUsage.getGroup(),sentUsage.getKey(),-sentUsage.getValue()));
    }
 else {
      descriptor.subValue(sentUsage.getValue());
    }
  }
  return packCollection(patchedUsages,new Condition<PatchedUsage>(){
    @Override public boolean value(    PatchedUsage patchedUsage){
      return patchedUsage.getDelta() != 0;
    }
  }
);
}
