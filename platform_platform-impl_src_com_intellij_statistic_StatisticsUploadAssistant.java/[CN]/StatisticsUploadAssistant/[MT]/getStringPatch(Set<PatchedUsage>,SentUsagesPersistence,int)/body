{
  if (patchedUsages.size() == 0)   return "";
  String patchStr=convertUsages(patchedUsages);
  if (maxSize > 0 && patchStr.getBytes().length > maxSize) {
    patchStr=cutPatchString(patchStr,maxSize);
    patchedUsages=ContainerUtil.map2Set(convertString(patchStr),new Function<UsageDescriptor,PatchedUsage>(){
      @Override public PatchedUsage fun(      UsageDescriptor usageDescriptor){
        return new PatchedUsage(usageDescriptor);
      }
    }
);
  }
  if (patchedUsages.size() > 0)   usagesPersistence.persistPatch(patchedUsages);
  return patchStr;
}
