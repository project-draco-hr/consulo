def ancestors(self, *revs):
    "Generate the ancestors of 'revs' in reverse topological order.\n\n        Yield a sequence of revision numbers starting with the parents\n        of each revision in revs, i.e., each revision is *not* considered\n        an ancestor of itself.  Results are in breadth-first order:\n        parents of each rev in revs, then parents of those, etc.  Result\n        does not include the null revision."
    visit = list(revs)
    seen = set([nullrev])
    while visit:
        for parent in self.parentrevs(visit.pop(0)):
            if (parent not in seen):
                visit.append(parent)
                seen.add(parent)
                yield parent
