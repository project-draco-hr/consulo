def _getchunk(self, offset, length):
    (o, d) = self._chunkcache
    l = len(d)
    cachestart = (offset - o)
    cacheend = (cachestart + length)
    if ((cachestart >= 0) and (cacheend <= l)):
        if ((cachestart == 0) and (cacheend == l)):
            return d
        return d[cachestart:cacheend]
    return self._loadchunk(offset, length)
