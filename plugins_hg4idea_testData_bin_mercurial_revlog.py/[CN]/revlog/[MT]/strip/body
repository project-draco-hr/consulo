def strip(self, minlink, transaction):
    "truncate the revlog on the first revision with a linkrev >= minlink\n\n        This function is called when we're stripping revision minlink and\n        its descendants from the repository.\n\n        We have to remove all revisions with linkrev >= minlink, because\n        the equivalent changelog revisions will be renumbered after the\n        strip.\n\n        So we truncate the revlog on the first of these revisions, and\n        trust that the caller has saved the revisions that shouldn't be\n        removed and that it'll readd them after this truncation.\n        "
    if (len(self) == 0):
        return
    if isinstance(self.index, lazyindex):
        self._loadindexmap()
    for rev in self:
        if (self.index[rev][4] >= minlink):
            break
    else:
        return
    end = self.start(rev)
    if (not self._inline):
        transaction.add(self.datafile, end)
        end = (rev * self._io.size)
    else:
        end += (rev * self._io.size)
    transaction.add(self.indexfile, end)
    self._cache = None
    self._chunkclear()
    for x in xrange(rev, len(self)):
        del self.nodemap[self.node(x)]
    del self.index[rev:(-1)]
