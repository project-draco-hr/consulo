def compress(text):
    ' generate a possibly-compressed representation of text '
    if (not text):
        return ('', text)
    l = len(text)
    bin = None
    if (l < 44):
        pass
    elif (l > 1000000):
        z = zlib.compressobj()
        p = []
        pos = 0
        while (pos < l):
            pos2 = (pos + (2 ** 20))
            p.append(z.compress(text[pos:pos2]))
            pos = pos2
        p.append(z.flush())
        if (sum(map(len, p)) < l):
            bin = ''.join(p)
    else:
        bin = _compress(text)
    if ((bin is None) or (len(bin) > l)):
        if (text[0] == '\x00'):
            return ('', text)
        return ('u', text)
    return ('', bin)
