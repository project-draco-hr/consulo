{
  List<Module> obsolete=collectObsoleteModules();
  if (obsolete.isEmpty())   return;
  MavenProjectsManager.getInstance(myProject).setMavenizedModules(obsolete,false);
  final String formatted=StringUtil.join(obsolete,new Function<Module,String>(){
    public String fun(    Module m){
      return "'" + m.getName() + "'";
    }
  }
,"\n");
  final int[] result=new int[1];
  MavenUtil.invokeAndWait(myProject,ModalityState.NON_MODAL,new Runnable(){
    public void run(){
      result[0]=Messages.showYesNoDialog(myProject,ProjectBundle.message("maven.import.message.delete.obsolete",formatted),ProjectBundle.message("maven.tab.importing"),Messages.getQuestionIcon());
    }
  }
);
  if (result[0] == 1)   return;
  for (  Module each : obsolete) {
    myModuleModel.disposeModule(each);
  }
}
