{
  List<MavenProjectsProcessorTask> postTasks=new ArrayList<MavenProjectsProcessorTask>();
  boolean hasChanges=false;
  myAllProjects=new LinkedHashSet<MavenProject>(myProjectsTree.getProjects());
  myAllProjects.addAll(myProjectsToImportWithChanges.keySet());
  hasChanges|=deleteIncompatibleModules();
  myProjectsToImportWithChanges=collectProjectsToImport(myProjectsToImportWithChanges);
  mapMavenProjectsToModulesAndNames();
  boolean projectsHaveChanges=projectsToImportHaveChanges();
  if (projectsHaveChanges) {
    hasChanges=true;
    importModules(postTasks);
    scheduleRefreshResolvedArtifacts(postTasks);
  }
  if (projectsHaveChanges || myImportModuleGroupsRequired) {
    hasChanges=true;
    configModuleGroups();
  }
  boolean modulesDeleted=deleteObsoleteModules();
  hasChanges|=modulesDeleted;
  if (hasChanges) {
    removeUnusedProjectLibraries();
  }
  if (hasChanges) {
    myModelsProvider.commit();
    if (projectsHaveChanges) {
      configSettings();
    }
  }
 else {
    myModelsProvider.dispose();
  }
  return postTasks;
}
