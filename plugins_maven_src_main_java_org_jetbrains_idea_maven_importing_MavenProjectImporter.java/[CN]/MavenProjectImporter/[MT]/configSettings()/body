{
  MavenUtil.invokeAndWaitWriteAction(myProject,new Runnable(){
    public void run(){
      String minPossibleTargetLevel=calcMinPossibleTargetLevel();
      if (minPossibleTargetLevel == null)       return;
      String options=JavacSettings.getInstance(myProject).ADDITIONAL_OPTIONS_STRING;
      Pattern pattern=Pattern.compile("(-target (\\S+))");
      Matcher matcher=pattern.matcher(options);
      if (matcher.find()) {
        String currentValue=MavenProject.normalizeCompilerLevel(matcher.group(2));
        if (currentValue == null || compareCompilerLevel(minPossibleTargetLevel,currentValue) > 0) {
          StringBuffer buffer=new StringBuffer();
          matcher.appendReplacement(buffer,"-target " + minPossibleTargetLevel);
          matcher.appendTail(buffer);
          options=buffer.toString();
        }
      }
 else {
        if (!StringUtil.isEmptyOrSpaces(options))         options+=" ";
        options+="-target " + minPossibleTargetLevel;
      }
      JavacSettings.getInstance(myProject).ADDITIONAL_OPTIONS_STRING=options;
    }
  }
);
}
