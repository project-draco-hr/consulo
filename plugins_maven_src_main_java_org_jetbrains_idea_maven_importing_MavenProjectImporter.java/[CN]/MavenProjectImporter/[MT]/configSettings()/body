{
  MavenUtil.invokeAndWaitWriteAction(myProject,new Runnable(){
    public void run(){
      CompilerConfigurationImpl configuration=(CompilerConfigurationImpl)CompilerConfiguration.getInstance(myProject);
      MavenProjectsManager projectsManager=MavenProjectsManager.getInstance(myProject);
      for (      MavenProject project : myAllProjects) {
        String targetLevel=project.getTargetLevel();
        if (targetLevel != null) {
          Module module=projectsManager.findModule(project);
          if (module != null) {
            configuration.setBytecodeTargetLevel(module,targetLevel);
          }
        }
        if (!Boolean.parseBoolean(System.getProperty("maven.disable.encode.import"))) {
          String encoding=project.getEncoding();
          if (encoding != null) {
            try {
              EncodingProjectManager.getInstance(myProject).setEncoding(project.getDirectoryFile(),Charset.forName(encoding));
            }
 catch (            UnsupportedCharsetException ignored) {
            }
catch (            IllegalCharsetNameException ignored) {
            }
          }
        }
      }
      final JpsJavaCompilerOptions javacOptions=JavacConfiguration.getOptions(myProject,JavacConfiguration.class);
      String options=javacOptions.ADDITIONAL_OPTIONS_STRING;
      options=options.replaceFirst("(-target (\\S+))","");
      javacOptions.ADDITIONAL_OPTIONS_STRING=options;
    }
  }
);
}
