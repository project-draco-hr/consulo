{
  final int[] result=new int[1];
  MavenUtil.invokeInDispatchThreadAndWait(myProject,ModalityState.NON_MODAL,new Runnable(){
    public void run(){
      String message=ProjectBundle.message("maven.import.incompatible.modules",formatProjectsWithModules(projectsWithModules),projectsWithModules.size() == 1 ? "" : "s");
      String[] options={ProjectBundle.message("maven.import.incompatible.modules.recreate"),ProjectBundle.message("maven.import.incompatible.modules.ignore")};
      result[0]=Messages.showDialog(myProject,message,ProjectBundle.message("maven.tab.importing"),options,0,Messages.getQuestionIcon());
    }
  }
);
  if (result[0] == 0) {
    for (    Pair<MavenProject,Module> each : projectsWithModules) {
      myFileToModuleMapping.remove(each.first.getFile());
      myModuleModel.disposeModule(each.second);
    }
  }
 else {
    myProjectsTree.setIgnoredState(MavenUtil.collectFirsts(projectsWithModules),true,true);
  }
}
