{
  Set<Library> allLibraries=new THashSet<Library>();
  Collections.addAll(allLibraries,myModelsProvider.getAllLibraries());
  Set<Library> usedLibraries=new THashSet<Library>();
  for (  ModuleRootModel eachModel : collectModuleModels()) {
    for (    OrderEntry eachEntry : eachModel.getOrderEntries()) {
      if (eachEntry instanceof LibraryOrderEntry) {
        Library lib=((LibraryOrderEntry)eachEntry).getLibrary();
        if (MavenRootModelAdapter.isMavenLibrary(lib))         usedLibraries.add(lib);
      }
    }
  }
  Set<Library> unusedLibraries=new THashSet<Library>(allLibraries);
  unusedLibraries.removeAll(usedLibraries);
  boolean removed=false;
  for (  Library each : unusedLibraries) {
    if (MavenRootModelAdapter.isMavenLibrary(each) && !MavenRootModelAdapter.isChangedByUser(each)) {
      myModelsProvider.removeLibrary(each);
      removed=true;
    }
  }
  return removed;
}
