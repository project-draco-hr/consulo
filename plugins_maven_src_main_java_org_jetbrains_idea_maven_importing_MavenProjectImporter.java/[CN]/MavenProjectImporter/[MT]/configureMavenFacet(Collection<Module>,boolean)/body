{
  if (modules.isEmpty()) {
    return;
  }
  final Map<Module,MavenProject> moduleToProjectMap=new HashMap<Module,MavenProject>();
  for (  Map.Entry<MavenProject,Module> entry : myMavenProjectToModule.entrySet()) {
    moduleToProjectMap.put(entry.getValue(),entry.getKey());
  }
  final MavenFacetType facetType=MavenFacetType.getInstance();
  for (  final Module module : modules) {
    final ModifiableFacetModel model=myModelsProvider.getFacetModel(module);
    MavenFacet facet=model.getFacetByType(facetType.getId());
    if (!modulesMavenized) {
      if (facet != null) {
        model.removeFacet(facet);
      }
      continue;
    }
    if (facet == null) {
      facet=facetType.createFacet(module,facetType.getPresentableName(),facetType.createDefaultConfiguration(),null);
      model.addFacet(facet);
    }
 else {
      final MavenFacetConfiguration config=facet.getConfiguration();
      config.clearState();
    }
    final MavenProject mavenProject=moduleToProjectMap.get(module);
    if (mavenProject != null) {
      final MavenFacetConfiguration config=facet.getConfiguration();
      config.addResources(mavenProject.getResources());
    }
  }
}
