{
  Set<MavenProject> result=new THashSet<MavenProject>();
  final Map<MavenProject,Module> projectsWithInconsistentModuleType=new HashMap<MavenProject,Module>();
  for (  MavenProject each : myProjectsTree.getProjects()) {
    Module module=myFileToModuleMapping.get(each.getFile());
    if (module == null) {
      result.add(each);
    }
 else {
      if (shouldCreateModuleFor(each) && !(module.getModuleType() instanceof JavaModuleType)) {
        projectsWithInconsistentModuleType.put(each,module);
      }
    }
  }
  removeModulesOrIgnoreMavenProjects(projectsWithInconsistentModuleType);
  for (  final MavenProject mavenProject : projectsWithInconsistentModuleType.keySet()) {
    if (!myProjectsTree.isIgnored(mavenProject)) {
      result.add(mavenProject);
    }
  }
  return result;
}
