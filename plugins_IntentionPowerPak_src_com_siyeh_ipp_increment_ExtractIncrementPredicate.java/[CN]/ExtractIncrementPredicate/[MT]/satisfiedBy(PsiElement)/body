{
  if (!(element instanceof PsiPrefixExpression) && !(element instanceof PsiPostfixExpression)) {
    return false;
  }
  final PsiJavaToken sign;
  if (element instanceof PsiPostfixExpression) {
    sign=((PsiPostfixExpression)element).getOperationSign();
  }
 else {
    sign=((PsiPrefixExpression)element).getOperationSign();
  }
  final IElementType tokenType=sign.getTokenType();
  if (!JavaTokenType.PLUSPLUS.equals(tokenType) && !JavaTokenType.MINUSMINUS.equals(tokenType)) {
    return false;
  }
  final PsiElement parent=element.getParent();
  if (parent instanceof PsiExpressionStatement) {
    return false;
  }
  final PsiStatement containingStatement=PsiTreeUtil.getParentOfType(element,PsiStatement.class);
  if ((containingStatement instanceof PsiReturnStatement || containingStatement instanceof PsiThrowStatement) && element instanceof PsiPostfixExpression) {
    return false;
  }
  if (containingStatement == null) {
    return false;
  }
  return !ErrorUtil.containsError(element);
}
