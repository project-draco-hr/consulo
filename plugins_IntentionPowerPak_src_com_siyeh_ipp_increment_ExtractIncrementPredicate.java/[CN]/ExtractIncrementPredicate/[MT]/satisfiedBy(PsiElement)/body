{
  if (!(element instanceof PsiPrefixExpression) && !(element instanceof PsiPostfixExpression)) {
    return false;
  }
  final IElementType tokenType;
  if (element instanceof PsiPostfixExpression) {
    final PsiPostfixExpression postfixExpression=(PsiPostfixExpression)element;
    final PsiExpression operand=postfixExpression.getOperand();
    if (!(operand instanceof PsiReferenceExpression)) {
      return false;
    }
    tokenType=postfixExpression.getOperationTokenType();
  }
 else {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)element;
    final PsiExpression operand=prefixExpression.getOperand();
    if (!(operand instanceof PsiReferenceExpression)) {
      return false;
    }
    tokenType=prefixExpression.getOperationTokenType();
  }
  if (!JavaTokenType.PLUSPLUS.equals(tokenType) && !JavaTokenType.MINUSMINUS.equals(tokenType)) {
    return false;
  }
  final PsiElement parent=element.getParent();
  if (parent instanceof PsiExpressionStatement) {
    return false;
  }
  final PsiStatement containingStatement=PsiTreeUtil.getParentOfType(element,PsiStatement.class);
  return containingStatement != null;
}
