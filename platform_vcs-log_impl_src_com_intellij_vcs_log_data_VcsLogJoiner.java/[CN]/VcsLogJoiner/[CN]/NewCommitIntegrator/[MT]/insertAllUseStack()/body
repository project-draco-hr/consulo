{
  while (!newCommitsMap.isEmpty()) {
    commitsStack.push(newCommitsMap.values().iterator().next());
    while (!commitsStack.isEmpty()) {
      Commit currentCommit=commitsStack.peek();
      boolean allParentsWereAdded=true;
      for (      Hash parentHash : currentCommit.getParents()) {
        Commit parentCommit=newCommitsMap.get(parentHash);
        if (parentCommit != null) {
          commitsStack.push(parentCommit);
          allParentsWereAdded=false;
          break;
        }
      }
      if (!allParentsWereAdded)       continue;
      int insertIndex;
      HashSet<Hash> parents=new HashSet<Hash>(currentCommit.getParents());
      for (insertIndex=0; insertIndex < list.size(); insertIndex++) {
        Commit someCommit=list.get(insertIndex);
        if (parents.contains(someCommit.getHash()))         break;
        if (someCommit.getTime() < currentCommit.getTime())         break;
      }
      list.add(insertIndex,currentCommit);
      newCommitsMap.remove(currentCommit.getHash());
      commitsStack.pop();
    }
  }
}
