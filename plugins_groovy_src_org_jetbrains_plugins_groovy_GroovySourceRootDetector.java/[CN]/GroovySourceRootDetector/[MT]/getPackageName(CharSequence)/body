{
  Lexer lexer=new GroovyLexer();
  lexer.start(text);
  skipWhitespacesAndComments(lexer);
  final IElementType firstToken=lexer.getTokenType();
  if (firstToken != GroovyTokenTypes.kPACKAGE) {
    return "";
  }
  lexer.advance();
  skipWhitespacesAndComments(lexer);
  final StringBuilder buffer=StringBuilderSpinAllocator.alloc();
  try {
    while (true) {
      if (lexer.getTokenType() != GroovyTokenTypes.mIDENT)       break;
      buffer.append(text,lexer.getTokenStart(),lexer.getTokenEnd());
      lexer.advance();
      skipWhitespacesAndComments(lexer);
      if (lexer.getTokenType() != GroovyTokenTypes.mDOT)       break;
      buffer.append('.');
      lexer.advance();
      skipWhitespacesAndComments(lexer);
    }
    String packageName=buffer.toString();
    if (packageName.length() == 0 || StringUtil.endsWithChar(packageName,'.'))     return null;
    return packageName;
  }
  finally {
    StringBuilderSpinAllocator.dispose(buffer);
  }
}
