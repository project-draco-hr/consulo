{
  final GroovyResolveResult[] candidates=expr.multiResolve(false);
  final String text=expr.getText();
  if (candidates.length > 0) {
    @NonNls final StringBuilder sb=new StringBuilder();
    for (    final GroovyResolveResult candidate : candidates) {
      final PsiElement element=candidate.getElement();
      if (!(element instanceof PsiMethod)) {
        continue;
      }
      final String str=PsiFormatUtil.formatMethod((PsiMethod)element,candidate.getSubstitutor(),PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_TYPE | PsiFormatUtilBase.SHOW_PARAMETERS,PsiFormatUtilBase.SHOW_TYPE);
      createElementLink(sb,element,str);
    }
    return CodeInsightBundle.message("javadoc.candiates",text,sb);
  }
  return CodeInsightBundle.message("javadoc.candidates.not.found",text);
}
