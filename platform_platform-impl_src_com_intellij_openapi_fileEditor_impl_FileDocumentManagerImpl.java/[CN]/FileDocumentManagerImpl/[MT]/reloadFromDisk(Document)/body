{
  final VirtualFile file=getFile(document);
  try {
    fireBeforeFileContentReload(file,document);
  }
 catch (  VetoDocumentReloadException e) {
    return;
  }
catch (  Exception e) {
    LOG.error(e);
  }
  final Project project=ProjectLocator.getInstance().guessProjectForFile(file);
  CommandProcessor.getInstance().executeCommand(project,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new ExternalChangeAction.ExternalDocumentChange(document,project){
        public void run(){
          boolean wasWritable=document.isWritable();
          DocumentEx documentEx=(DocumentEx)document;
          documentEx.setReadOnly(false);
          documentEx.replaceText(LoadTextUtil.loadText(file),file.getModificationStamp());
          documentEx.setReadOnly(!wasWritable);
        }
      }
);
    }
  }
,UIBundle.message("file.cache.conflict.action"),null);
  myUnsavedDocuments.remove(document);
  try {
    fireFileContentReloaded(file,document);
  }
 catch (  Exception e) {
    LOG.error(e);
  }
}
