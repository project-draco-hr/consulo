{
  ApplicationManager.getApplication().assertIsDispatchThread();
  if (!isDocumentUnsaved(document))   return true;
  String message=UIBundle.message("file.cache.conflict.message.text",file.getPresentableUrl());
  if (ApplicationManager.getApplication().isUnitTestMode())   throw new RuntimeException(message);
  final DialogBuilder builder=new DialogBuilder((Project)null);
  builder.setCenterPanel(new JLabel(message,Messages.getQuestionIcon(),SwingConstants.CENTER));
  builder.addOkAction().setText(UIBundle.message("file.cache.conflict.load.fs.changes.button"));
  builder.addCancelAction().setText(UIBundle.message("file.cache.conflict.keep.memory.changes.button"));
  builder.addAction(new AbstractAction(UIBundle.message("file.cache.conflict.show.difference.button")){
    @Override public void actionPerformed(    ActionEvent e){
      String title=UIBundle.message("file.cache.conflict.for.file.dialog.title",file.getPresentableUrl());
      final ProjectEx project=(ProjectEx)ProjectLocator.getInstance().guessProjectForFile(file);
      SimpleDiffRequest request=new SimpleDiffRequest(project,title);
      FileType fileType=file.getFileType();
      String fsContent=LoadTextUtil.loadText(file).toString();
      request.setContents(new SimpleContent(fsContent,fileType),new DocumentContent(project,document,fileType));
      request.setContentTitles(UIBundle.message("file.cache.conflict.diff.content.file.system.content"),UIBundle.message("file.cache.conflict.diff.content.memory.content"));
      DialogBuilder diffBuilder=new DialogBuilder(project);
      DiffPanelImpl diffPanel=(DiffPanelImpl)DiffManager.getInstance().createDiffPanel(diffBuilder.getWindow(),project,diffBuilder,null);
      diffPanel.getOptions().setShowSourcePolicy(DiffPanelOptions.ShowSourcePolicy.DONT_SHOW);
      diffBuilder.setCenterPanel(diffPanel.getComponent());
      diffBuilder.setDimensionServiceKey("FileDocumentManager.FileCacheConflict");
      diffPanel.setDiffRequest(request);
      diffBuilder.addOkAction().setText(UIBundle.message("file.cache.conflict.save.changes.button"));
      diffBuilder.addCancelAction();
      diffBuilder.setTitle(title);
      if (diffBuilder.show() == DialogWrapper.OK_EXIT_CODE) {
        builder.getDialogWrapper().close(DialogWrapper.CANCEL_EXIT_CODE);
      }
    }
  }
);
  builder.setTitle(UIBundle.message("file.cache.conflict.dialog.title"));
  builder.setButtonsAlignment(SwingConstants.CENTER);
  builder.setHelpId("reference.dialogs.fileCacheConflict");
  return builder.show() == 0;
}
