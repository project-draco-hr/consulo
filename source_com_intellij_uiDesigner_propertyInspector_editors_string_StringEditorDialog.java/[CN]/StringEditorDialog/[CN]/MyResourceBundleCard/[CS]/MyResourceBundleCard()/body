{
  myTfBundleName.registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    final ActionEvent e){
      myTfBundleName.getButton().doClick();
    }
  }
,KeyStroke.getKeyStroke(myLblBundleName.getDisplayedMnemonic(),KeyEvent.ALT_DOWN_MASK),JComponent.WHEN_IN_FOCUSED_WINDOW);
  myTfBundleName.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      Project project=myModule.getProject();
      PsiFile initialPropertiesFile=ReferenceUtil.getPropertiesFile(MyResourceBundleCard.this.myTfBundleName.getText(),myModule);
      final GlobalSearchScope moduleScope=GlobalSearchScope.moduleWithDependenciesScope(myModule);
      TreeFileChooser fileChooser=TreeClassChooserFactory.getInstance(project).createFileChooser("Choose Poperties File",initialPropertiesFile,StdFileTypes.PROPERTIES,new TreeFileChooser.PsiFileFilter(){
        public boolean accept(        PsiFile file){
          final VirtualFile virtualFile=file.getVirtualFile();
          return virtualFile != null && moduleScope.contains(virtualFile);
        }
      }
);
      fileChooser.showDialog();
      PropertiesFile propertiesFile=(PropertiesFile)fileChooser.getSelectedFile();
      if (propertiesFile == null) {
        return;
      }
      final String bundleName=ReferenceUtil.getBundleName(propertiesFile);
      if (bundleName == null) {
        return;
      }
      myTfBundleName.setText(bundleName);
    }
  }
);
  myTfKey.registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    final ActionEvent e){
      myTfKey.getButton().doClick();
    }
  }
,KeyStroke.getKeyStroke(myLblKey.getDisplayedMnemonic(),KeyEvent.ALT_DOWN_MASK),JComponent.WHEN_IN_FOCUSED_WINDOW);
  myTfKey.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final String bundleName=myTfBundleName.getText();
      if (bundleName.length() == 0) {
        Messages.showErrorDialog("Please specify name of the resource bundle","Error");
        return;
      }
      final PropertiesFile bundle=ReferenceUtil.getPropertiesFile(bundleName,myModule);
      if (bundle == null) {
        Messages.showErrorDialog("Bundle \"" + bundleName + "\" does not exist","Error");
        return;
      }
      final KeyChooserDialog dialog=new KeyChooserDialog(myTfKey,bundle,bundleName,myTfKey.getText());
      dialog.show();
      if (!dialog.isOK()) {
        return;
      }
      final StringDescriptor descriptor=dialog.getDescriptor();
      if (descriptor == null) {
        return;
      }
      myTfKey.setText(descriptor.getKey());
      myTfValue.setText(descriptor.getResolvedValue());
    }
  }
);
}
