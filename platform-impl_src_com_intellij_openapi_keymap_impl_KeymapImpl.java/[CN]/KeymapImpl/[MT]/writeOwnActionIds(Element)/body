{
  String[] ownActionIds=getOwnActionIds();
  Arrays.sort(ownActionIds);
  for (  String actionId : ownActionIds) {
    Element actionElement=new Element(ACTION);
    actionElement.setAttribute(ID_ATTRIBUTE,actionId);
    Shortcut[] shortcuts=getShortcuts(actionId);
    for (    Shortcut shortcut : shortcuts) {
      if (shortcut instanceof KeyboardShortcut) {
        KeyboardShortcut keyboardShortcut=(KeyboardShortcut)shortcut;
        Element element=new Element(KEYBOARD_SHORTCUT);
        element.setAttribute(FIRST_KEYSTROKE_ATTRIBUTE,getKeyShortcutString(keyboardShortcut.getFirstKeyStroke()));
        if (keyboardShortcut.getSecondKeyStroke() != null) {
          element.setAttribute(SECOND_KEYSTROKE_ATTRIBUTE,getKeyShortcutString(keyboardShortcut.getSecondKeyStroke()));
        }
        actionElement.addContent(element);
      }
 else       if (shortcut instanceof MouseShortcut) {
        MouseShortcut mouseShortcut=(MouseShortcut)shortcut;
        Element element=new Element(MOUSE_SHORTCUT);
        element.setAttribute(KEYSTROKE_ATTRIBUTE,getMouseShortcutString(mouseShortcut));
        actionElement.addContent(element);
      }
 else       if (shortcut instanceof KeyboardModifierGestureShortuct) {
        final KeyboardModifierGestureShortuct gesture=(KeyboardModifierGestureShortuct)shortcut;
        final Element element=new Element(KEYBOARD_GESTURE_SHORTCUT);
        element.setAttribute(KEYBOARD_GESTURE_SHORTCUT,getKeyShortcutString(gesture.getStroke()));
        element.setAttribute(KEYBOARD_GESTURE_MODIFIER,gesture.getType().name());
        actionElement.addContent(element);
      }
 else {
        throw new IllegalStateException("unknown shortcut class: " + shortcut);
      }
    }
    keymapElement.addContent(actionElement);
  }
}
