{
  if (!myContext.isMove()) {
    super.execute();
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      FeedbackLayer layer=myContext.getArea().getFeedbackLayer();
      Rectangle parentBounds=myContainer.getBounds();
      if (myContext.isCreate() || myContext.isPaste()) {
        Point location=myContainer.convertPoint(layer,myBounds.x,myBounds.y);
        Dimension delta=myContext.getSizeDelta();
        for (        RadComponent component : myComponents) {
          XmlTag tag=((RadViewComponent)component).getTag();
          tag.setAttribute("android:layout_x",Integer.toString(location.x - parentBounds.x) + "dp");
          tag.setAttribute("android:layout_y",Integer.toString(location.y - parentBounds.y) + "dp");
          if (delta != null && myComponents.size() == 1) {
            if (delta.width > 0) {
              tag.setAttribute("android:layout_width",Integer.toString(myBounds.width) + "dp");
            }
            if (delta.height > 0) {
              tag.setAttribute("android:layout_height",Integer.toString(myBounds.height) + "dp");
            }
          }
        }
      }
 else {
        int moveDeltaX=myBounds.x - myStartLocation.x;
        int moveDeltaY=myBounds.y - myStartLocation.y;
        for (        RadComponent component : myComponents) {
          Rectangle bounds=component.getBounds(layer);
          Point location=component.convertPoint(layer,bounds.x + moveDeltaX,bounds.y + moveDeltaY);
          XmlTag tag=((RadViewComponent)component).getTag();
          tag.setAttribute("android:layout_x",Integer.toString(location.x - parentBounds.x) + "dp");
          tag.setAttribute("android:layout_y",Integer.toString(location.y - parentBounds.y) + "dp");
        }
      }
    }
  }
);
}
