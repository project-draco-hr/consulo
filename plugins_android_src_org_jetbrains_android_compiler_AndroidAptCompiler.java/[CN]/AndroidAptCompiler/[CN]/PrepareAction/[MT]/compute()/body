{
  if (myContext.getProject().isDisposed()) {
    return EMPTY_GENERATION_ITEM_ARRAY;
  }
  Module[] modules=ModuleManager.getInstance(myContext.getProject()).getModules();
  List<GenerationItem> items=new ArrayList<GenerationItem>();
  for (  Module module : modules) {
    AndroidFacet facet=AndroidFacet.getInstance(module);
    if (facet != null) {
      AndroidFacetConfiguration configuration=facet.getConfiguration();
      if (!isToCompileModule(module,configuration)) {
        continue;
      }
      IAndroidTarget target=configuration.getAndroidTarget();
      if (target == null) {
        myContext.addMessage(CompilerMessageCategory.ERROR,AndroidBundle.message("android.compilation.error.specify.platform",module.getName()),null,-1,-1);
        continue;
      }
      String[] resPaths=AndroidCompileUtil.collectResourceDirs(facet);
      if (resPaths.length <= 0) {
        continue;
      }
      VirtualFile assetsDir=!configuration.LIBRARY_PROJECT ? AndroidRootUtil.getAssetsDir(module) : null;
      VirtualFile manifestFile=AndroidRootUtil.getManifestFileForCompiler(facet);
      if (manifestFile == null) {
        myContext.addMessage(CompilerMessageCategory.ERROR,AndroidBundle.message("android.compilation.error.manifest.not.found"),null,-1,-1);
        continue;
      }
      Manifest manifest=AndroidUtils.loadDomElement(module,manifestFile,Manifest.class);
      if (manifest == null) {
        myContext.addMessage(CompilerMessageCategory.ERROR,"Cannot parse file",manifestFile.getUrl(),-1,-1);
        continue;
      }
      String packageName=manifest.getPackage().getValue();
      if (packageName != null) {
        packageName=packageName.trim();
      }
      if (packageName == null || packageName.length() <= 0) {
        myContext.addMessage(CompilerMessageCategory.ERROR,AndroidBundle.message("package.not.found.error"),manifestFile.getUrl(),-1,-1);
        continue;
      }
      String sourceRootPath=facet.getAptGenSourceRootPath();
      if (sourceRootPath == null) {
        myContext.addMessage(CompilerMessageCategory.ERROR,AndroidBundle.message("android.compilation.error.apt.gen.not.specified",module.getName()),null,-1,-1);
        continue;
      }
      AndroidCompileUtil.createSourceRootIfNotExist(sourceRootPath,module);
      String assetsDirPath=assetsDir != null ? assetsDir.getPath() : null;
      final Set<String> packageSet=new HashSet<String>();
      items.add(new AptGenerationItem(module,manifestFile,resPaths,assetsDirPath,sourceRootPath,target,packageName,false));
      packageSet.add(packageName);
      for (      String libPackage : AndroidUtils.getDepLibsPackages(module)) {
        if (packageSet.add(libPackage)) {
          items.add(new AptGenerationItem(module,manifestFile,resPaths,assetsDirPath,sourceRootPath,target,libPackage,true));
        }
      }
    }
  }
  return items.toArray(new GenerationItem[items.size()]);
}
