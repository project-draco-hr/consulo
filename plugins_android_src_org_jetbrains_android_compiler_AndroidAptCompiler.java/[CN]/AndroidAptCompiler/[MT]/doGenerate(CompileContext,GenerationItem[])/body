{
  List<GenerationItem> results=new ArrayList<GenerationItem>(items.length);
  for (  GenerationItem item : items) {
    if (item instanceof AptGenerationItem) {
      final AptGenerationItem aptItem=(AptGenerationItem)item;
      if (!AndroidCompileUtil.isModuleAffected(context,aptItem.myModule)) {
        continue;
      }
      try {
        Map<CompilerMessageCategory,List<String>> messages=AndroidApt.compile(aptItem.myAndroidTarget,aptItem.myManifestFile.getPath(),aptItem.myPackage,aptItem.mySourceRootPath,aptItem.myResourcesPaths,aptItem.myLibraryPackages,aptItem.myIsLibrary);
        AndroidCompileUtil.addMessages(context,messages);
        if (messages.get(CompilerMessageCategory.ERROR).isEmpty()) {
          results.add(aptItem);
        }
        for (int i=0, n=aptItem.myGeneratedFiles.length; i < n; i++) {
          final File generatedFile=aptItem.myGeneratedFiles[i];
          final String aPackage=i == 0 ? aptItem.myPackage : aptItem.myLibraryPackages[i - 1];
          if (generatedFile.exists()) {
            ApplicationManager.getApplication().runReadAction(new Runnable(){
              public void run(){
                if (context.getProject().isDisposed() || aptItem.myModule.isDisposed()) {
                  return;
                }
                String className=FileUtil.getNameWithoutExtension(generatedFile);
                AndroidCompileUtil.removeDuplicatingClasses(aptItem.myModule,aPackage,className,generatedFile,aptItem.mySourceRootPath);
              }
            }
);
          }
        }
      }
 catch (      final IOException e) {
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          public void run(){
            if (context.getProject().isDisposed())             return;
            context.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),null,-1,-1);
          }
        }
);
      }
    }
  }
  return results.toArray(new GenerationItem[results.size()]);
}
