{
  if (items == null || items.length == 0) {
    return EMPTY_GENERATION_ITEM_ARRAY;
  }
  final String genRootPath=FileUtil.toSystemDependentName(outputRootDirectory.getPath());
  final File genRootDir=new File(genRootPath);
  List<GenerationItem> results=new ArrayList<GenerationItem>(items.length);
  boolean toRefresh=false;
  for (  GenerationItem item : items) {
    if (item instanceof AptGenerationItem) {
      final AptGenerationItem aptItem=(AptGenerationItem)item;
      if (!AndroidCompileUtil.isModuleAffected(context,aptItem.myModule)) {
        continue;
      }
      File tmpOutputDir=null;
      try {
        tmpOutputDir=FileUtil.createTempDirectory("android_apt_output","tmp");
        Map<CompilerMessageCategory,List<String>> messages=AndroidCompileUtil.toCompilerMessageCategoryKeys(AndroidApt.compile(aptItem.myAndroidTarget,aptItem.myPlatformToolsRevision,aptItem.myManifestFile.getPath(),aptItem.myPackage,tmpOutputDir.getPath(),aptItem.myResourcesPaths,aptItem.myLibraryPackages,aptItem.myNonConstantFields));
        toRefresh=true;
        AndroidCompileUtil.addMessages(context,messages,aptItem.myModule);
        if (messages.get(CompilerMessageCategory.ERROR).isEmpty()) {
          if (!AndroidCommonUtils.directoriesContainSameContent(tmpOutputDir,genRootDir,JavaFilesFilter.INSTANCE)) {
            if (genRootDir.exists() && !FileUtil.delete(genRootDir)) {
              context.addMessage(CompilerMessageCategory.ERROR,"Cannot delete directory " + genRootPath,null,-1,-1);
              continue;
            }
            if (!FileUtil.moveDirWithContent(tmpOutputDir,genRootDir)) {
              final String message="Cannot move content from " + tmpOutputDir.getPath() + " to "+ genRootPath;
              context.addMessage(CompilerMessageCategory.ERROR,message,null,-1,-1);
              continue;
            }
          }
          results.add(aptItem);
        }
      }
 catch (      final IOException e) {
        LOG.info(e);
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          public void run(){
            if (context.getProject().isDisposed())             return;
            context.addMessage(CompilerMessageCategory.ERROR,"I/O error: " + e.getMessage(),null,-1,-1);
          }
        }
);
      }
 finally {
        if (tmpOutputDir != null) {
          FileUtil.delete(tmpOutputDir);
        }
      }
    }
  }
  if (toRefresh) {
    outputRootDirectory.refresh(false,true);
  }
  return results.toArray(new GenerationItem[results.size()]);
}
