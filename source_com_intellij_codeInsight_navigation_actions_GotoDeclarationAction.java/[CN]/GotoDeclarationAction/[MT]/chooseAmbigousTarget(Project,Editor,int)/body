{
  final PsiElement[] candidates=suggestCandidates(project,editor,offset);
  if (candidates.length == 0) {
    return;
  }
 else   if (candidates.length == 1) {
    Navigatable navigatable=EditSourceUtil.getDescriptor(candidates[0]);
    if (navigatable != null) {
      navigatable.navigate(true);
    }
  }
 else {
    String title=" Go To Overloaded Declaration Of " + ((PsiNamedElement)candidates[0]).getName();
    ListPopup listPopup=NavigationUtil.getPsiElementPopup(candidates,title,project);
    LogicalPosition caretPosition=editor.getCaretModel().getLogicalPosition();
    Point caretLocation=editor.logicalPositionToXY(caretPosition);
    int x=caretLocation.x;
    int y=caretLocation.y;
    Point location=editor.getContentComponent().getLocationOnScreen();
    x+=location.x;
    y+=location.y;
    listPopup.show(x,y);
  }
}
