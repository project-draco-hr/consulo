{
  SoftReference<StubTree> stub=myStub;
  StubTree stubHolder=stub == null ? null : stub.get();
  if (stubHolder == null) {
synchronized (lock) {
      stub=myStub;
      stubHolder=stub == null ? null : stub.get();
      if (stubHolder != null) {
        return stubHolder;
      }
      stubHolder=StubTree.readOrBuild(getProject(),getVirtualFile());
      if (stubHolder == null) {
        LOG.info("Class file is corrupted: " + getVirtualFile().getPresentableUrl());
        stubHolder=new StubTree(new PsiJavaFileStubImpl("corrupted.classfiles",true));
      }
      myStub=new SoftReference<StubTree>(stubHolder);
      ((PsiFileStubImpl)stubHolder.getRoot()).setPsi(this);
synchronized (MIRROR_LOCK) {
        myMirrorFileElement=null;
      }
      myPackageStatement=new ClsPackageStatementImpl(this);
    }
  }
  return stubHolder;
}
