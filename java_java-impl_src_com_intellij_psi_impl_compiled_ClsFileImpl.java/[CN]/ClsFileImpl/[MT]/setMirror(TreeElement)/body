{
  PsiElement mirrorFile=SourceTreeToPsiMap.treeElementToPsi(element);
  if (mirrorFile instanceof PsiJavaFile) {
    PsiPackageStatement packageStatementMirror=((PsiJavaFile)mirrorFile).getPackageStatement();
    final PsiPackageStatement packageStatement=getPackageStatement();
    if (packageStatementMirror != null && packageStatement != null) {
      ((ClsElementImpl)packageStatement).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(packageStatementMirror));
    }
    PsiClass[] classes=getClasses();
    if (classes.length != 1 || JavaPsiFacade.getInstance(getProject()).getNameHelper().isIdentifier(classes[0].getName())) {
      PsiClass[] mirrorClasses=((PsiJavaFile)mirrorFile).getClasses();
      if (classes.length != mirrorClasses.length) {
        LOG.error("file: " + mirrorFile + " classes: "+ Arrays.toString(classes)+ " mirrors: "+ Arrays.toString(mirrorClasses));
      }
 else {
        for (int i=0; i < classes.length; i++) {
          ((ClsElementImpl)classes[i]).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirrorClasses[i]));
        }
      }
    }
  }
  myMirrorFileElement=element;
}
