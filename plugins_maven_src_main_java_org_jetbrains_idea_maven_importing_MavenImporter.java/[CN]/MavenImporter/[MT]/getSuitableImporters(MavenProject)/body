{
  final List<MavenImporter> result=new ArrayList<MavenImporter>();
  final Set<ModuleType> moduleTypes=new THashSet<ModuleType>();
  for (  MavenImporter importer : EXTENSION_POINT_NAME.getExtensions()) {
    if (importer.isApplicable(p)) {
      result.add(importer);
      moduleTypes.add(importer.getModuleType());
    }
  }
  if (moduleTypes.size() <= 1) {
    return result;
  }
  ModuleType moduleType=result.get(0).getModuleType();
  for (  MavenImporter importer : result) {
    final List<String> supportedPackagings=new ArrayList<String>();
    importer.getSupportedPackagings(supportedPackagings);
    if (supportedPackagings.contains(p.getPackaging())) {
      moduleType=importer.getModuleType();
      break;
    }
  }
  final ModuleType finalModuleType=moduleType;
  return ContainerUtil.filter(result,new Condition<MavenImporter>(){
    public boolean value(    final MavenImporter importer){
      return importer.getModuleType() == finalModuleType;
    }
  }
);
}
