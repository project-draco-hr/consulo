{
  myAction=action;
  myAlternativeAction=alternativeAction;
  myActiveIcon=activeIcon;
  myInactiveIcon=inactiveIcon;
  myAlternativeIcon=alternativeIcon;
  myCurrentAction=myAction;
  myButton=new InplaceButton(getToolTipTextByAction(action),EmptyIcon.ICON_16,this){
    @Override public boolean isActive(){
      return ActionButton.this.isActive();
    }
  }
;
  myButton.setHoveringEnabled(true);
  setContent(myButton);
  setOpaque(false);
  setIcon(getActiveIcon(),getInactiveIcon() == null ? getActiveIcon() : getInactiveIcon(),getActiveHoveredIcon());
  PropertyChangeListener listener=new PropertyChangeListener(){
    @Override public void propertyChange(    PropertyChangeEvent evt){
      if (myAlternativeAction == null)       return;
      if ("ancestor".equals(evt.getPropertyName())) {
        if (evt.getNewValue() == null) {
          AltStateManager.getInstance().removeListener(ActionButton.this);
          switchAlternativeAction(false);
        }
 else {
          AltStateManager.getInstance().addListener(ActionButton.this);
        }
      }
    }
  }
;
  addPropertyChangeListener(listener);
}
