{
  assertIsDispatchThread();
  if (myDisposed) {
    return;
  }
  myDisposed=true;
  myProperties.setValue(MAIN_SPLITTER_PROPORTION,String.valueOf(myMainSplitter.getProportion()));
  myProperties.setValue(DETAILS_SPLITTER_PROPORTION,String.valueOf(myContentWrapper.myLastSplitterProportion));
  myProperties.setValue(SEARCH_VISIBLE,Boolean.valueOf(isFilterFieldVisible()).toString());
  Toolkit.getDefaultToolkit().removeAWTEventListener(this);
  final Set<Configurable> configurables=new HashSet<Configurable>();
  configurables.addAll(myConfigurable2Content.keySet());
  configurables.addAll(myConfigurable2LoadCallback.keySet());
  for (  final Configurable each : configurables) {
    ActionCallback loadCb=myConfigurable2LoadCallback.get(each);
    if (loadCb != null) {
      loadCb.doWhenProcessed(new Runnable(){
        @Override public void run(){
          assertIsDispatchThread();
          each.disposeUIResources();
        }
      }
);
    }
 else {
      each.disposeUIResources();
    }
  }
  Disposer.clearOwnFields(this);
}
