{
  PsiExpression expression=statement.getExpression();
  HighlightInfo errorResult=null;
  if (expression != null && expression.getType() != null) {
    PsiType type=expression.getType();
    if (!isValidTypeForSwitchSelector(type)) {
      String message=JavaErrorMessages.message("incompatible.types",JavaErrorMessages.message("valid.switch.selector.types"),formatType(type));
      errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,expression,message);
      if (PsiType.LONG.equals(type) || PsiType.FLOAT.equals(type) || PsiType.DOUBLE.equals(type)) {
        QuickFixAction.registerQuickFixAction(errorResult,new AddTypeCastFix(PsiType.INT,expression));
      }
    }
  }
  return errorResult;
}
