{
  List<PsiClassType> unhandledExceptions=ExceptionUtil.getUnhandledExceptions(element);
  HighlightInfo errorResult=null;
  if (unhandledExceptions.size() > 0) {
    if (fixRange == null) {
      fixRange=element.getTextRange();
    }
    HighlightInfoType highlightType=getUnhandledExceptionHighlightType(element);
    if (highlightType == null)     return null;
    errorResult=HighlightInfo.createHighlightInfo(highlightType,fixRange,getUnhandledExceptionsDescriptor(unhandledExceptions));
    QuickFixAction.registerQuickFixAction(errorResult,new AddExceptionToCatchFix());
    QuickFixAction.registerQuickFixAction(errorResult,new AddExceptionToThrowsFix(element));
    QuickFixAction.registerQuickFixAction(errorResult,new SurroundWithTryCatchFix(element));
    if (unhandledExceptions.size() == 1) {
      QuickFixAction.registerQuickFixAction(errorResult,new GeneralizeCatchFix(element,unhandledExceptions.get(0)));
    }
  }
  return errorResult;
}
