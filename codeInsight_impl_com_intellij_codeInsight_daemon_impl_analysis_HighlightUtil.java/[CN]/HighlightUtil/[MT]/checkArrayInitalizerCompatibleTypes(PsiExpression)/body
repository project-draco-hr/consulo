{
  if (!(initializer.getParent() instanceof PsiArrayInitializerExpression))   return null;
  PsiElement element=initializer.getParent();
  int dimensions=0;
  while (element instanceof PsiArrayInitializerExpression) {
    element=element.getParent();
    dimensions++;
  }
  PsiType elementType;
  if (element instanceof PsiVariable) {
    elementType=((PsiVariable)element).getType();
  }
 else   if (element instanceof PsiNewExpression) {
    elementType=((PsiNewExpression)element).getType();
  }
 else {
    return null;
  }
  if (elementType == null)   return null;
  PsiType type=elementType;
  for (; dimensions > 0; dimensions--) {
    if (!(type instanceof PsiArrayType))     break;
    type=((PsiArrayType)type).getComponentType();
    if (type == null)     break;
  }
  if (dimensions != 0) {
    return null;
  }
  if (type != null) {
    PsiType initializerType=getInitializerType(initializer,type instanceof PsiArrayType ? ((PsiArrayType)type).getComponentType() : type);
    PsiExpression expression=initializer instanceof PsiArrayInitializerExpression ? null : initializer;
    return checkAssignability(type,initializerType,expression,initializer);
  }
  return null;
}
