{
  if (!psiFile.getViewProvider().isPhysical())   return;
  Project project=psiFile.getProject();
  if (!PsiManager.getInstance(project).isInProject(psiFile))   return;
  VirtualFile file=psiFile.getVirtualFile();
  List<Problem> problems=new SmartList<Problem>();
  for (  HighlightInfo info : infos) {
    if (info.getSeverity() == HighlightSeverity.ERROR) {
      Problem problem=new ProblemImpl(file,info,hasErrorElement);
      problems.add(problem);
    }
  }
  WolfTheProblemSolver wolf=WolfTheProblemSolver.getInstance(project);
  wolf.reportProblems(file,problems);
}
