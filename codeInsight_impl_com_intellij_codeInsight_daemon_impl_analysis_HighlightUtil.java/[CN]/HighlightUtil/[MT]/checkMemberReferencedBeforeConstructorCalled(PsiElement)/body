{
  if (expression.getParent() instanceof PsiJavaCodeReferenceElement)   return null;
  PsiClass referencedClass;
  String resolvedName;
  if (expression instanceof PsiJavaCodeReferenceElement) {
    PsiElement resolved=((PsiJavaCodeReferenceElement)expression).advancedResolve(true).getElement();
    if (resolved == null && isSuperMethodCall(expression.getParent())) {
      PsiExpression qualifier=((PsiReferenceExpression)expression).getQualifierExpression();
      if (qualifier instanceof PsiReferenceExpression) {
        resolved=((PsiReferenceExpression)qualifier).resolve();
        expression=qualifier;
      }
 else       if (qualifier instanceof PsiThisExpression) {
        resolved=PsiTreeUtil.getParentOfType(expression,PsiMethod.class,true,PsiMember.class);
        expression=qualifier;
      }
    }
    if (resolved instanceof PsiField) {
      PsiField referencedField=(PsiField)resolved;
      if (referencedField.hasModifierProperty(PsiModifier.STATIC))       return null;
      referencedClass=referencedField.getContainingClass();
      resolvedName=PsiFormatUtil.formatVariable(referencedField,PsiFormatUtil.SHOW_CONTAINING_CLASS | PsiFormatUtil.SHOW_NAME,PsiSubstitutor.EMPTY);
    }
 else     if (resolved instanceof PsiMethod) {
      PsiMethod method=(PsiMethod)resolved;
      if (method.hasModifierProperty(PsiModifier.STATIC))       return null;
      PsiElement nameElement=expression instanceof PsiThisExpression ? expression : ((PsiJavaCodeReferenceElement)expression).getReferenceNameElement();
      String name=nameElement == null ? null : nameElement.getText();
      if (PsiKeyword.SUPER.equals(name) || PsiKeyword.THIS.equals(name)) {
        PsiElement qualifier=expression instanceof PsiThisExpression ? expression : ((PsiJavaCodeReferenceElement)expression).getQualifier();
        if (!(qualifier instanceof PsiExpression))         return null;
        PsiType type=((PsiExpression)qualifier).getType();
        if (type == null)         return null;
        referencedClass=PsiUtil.resolveClassInType(type);
        resolvedName=qualifier.getText();
      }
 else {
        referencedClass=method.getContainingClass();
        resolvedName=PsiFormatUtil.formatMethod(method,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_CONTAINING_CLASS | PsiFormatUtil.SHOW_NAME,0);
      }
    }
 else     if (resolved instanceof PsiClass) {
      PsiClass aClass=(PsiClass)resolved;
      if (aClass.hasModifierProperty(PsiModifier.STATIC))       return null;
      referencedClass=aClass.getContainingClass();
      if (referencedClass == null)       return null;
      resolvedName=PsiFormatUtil.formatClass(aClass,PsiFormatUtil.SHOW_NAME);
    }
 else {
      return null;
    }
  }
 else   if (expression instanceof PsiThisExpression) {
    PsiType type=((PsiThisExpression)expression).getType();
    referencedClass=PsiUtil.resolveClassInType(type);
    resolvedName=referencedClass == null ? null : PsiFormatUtil.formatClass(referencedClass,PsiFormatUtil.SHOW_CONTAINING_CLASS | PsiFormatUtil.SHOW_NAME);
  }
 else {
    return null;
  }
  return checkReferenceToOurInstanceInsideThisOrSuper(expression,referencedClass,resolvedName);
}
