{
  boolean overflow=false;
  try {
    if (expr.getUserData(HAS_OVERFLOW_IN_CHILD) == null) {
      JavaPsiFacade.getInstance(expr.getProject()).getConstantEvaluationHelper().computeConstantExpression(expr,true);
    }
 else {
      overflow=true;
    }
  }
 catch (  ConstantEvaluationOverflowException e) {
    overflow=true;
    return HighlightInfo.createHighlightInfo(HighlightInfoType.OVERFLOW_WARNING,expr,JavaErrorMessages.message("numeric.overflow.in.expression"));
  }
 finally {
    PsiElement parent=expr.getParent();
    if (parent instanceof PsiExpression && overflow) {
      parent.putUserData(HAS_OVERFLOW_IN_CHILD,"");
    }
  }
  return null;
}
