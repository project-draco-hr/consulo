{
  PsiElement resolved=result.getElement();
  if (!DaemonCodeAnalyzerSettings.getInstance().getInspectionProfile(expr).isToolEnabled(HighlightDisplayKey.ACCESS_STATIC_VIA_INSTANCE)) {
    return null;
  }
  if (InspectionManagerEx.inspectionResultSuppressed(expr,HighlightDisplayKey.ACCESS_STATIC_VIA_INSTANCE.getID()))   return null;
  if (!(resolved instanceof PsiMember))   return null;
  PsiExpression qualifierExpression=expr.getQualifierExpression();
  if (qualifierExpression == null)   return null;
  if (qualifierExpression instanceof PsiReferenceExpression && ((PsiReferenceExpression)qualifierExpression).resolve() instanceof PsiClass) {
    return null;
  }
  if (!((PsiMember)resolved).hasModifierProperty(PsiModifier.STATIC))   return null;
  String description=JavaErrorMessages.message("static.member.accessed.via.instance.reference",formatType(qualifierExpression.getType()),HighlightMessageUtil.getSymbolName(resolved,result.getSubstitutor()));
  HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.ACCESS_STATIC_VIA_INSTANCE,expr,description);
  List<IntentionAction> options=IntentionManager.getInstance(expr.getProject()).getStandardIntentionOptions(HighlightDisplayKey.ACCESS_STATIC_VIA_INSTANCE,expr);
  QuickFixAction.registerQuickFixAction(highlightInfo,new AccessStaticViaInstanceFix(expr,result),options);
  return highlightInfo;
}
