{
  if (expression == null) {
    if (TypeConversionUtil.isAssignable(lType,rType))     return null;
  }
 else   if (TypeConversionUtil.areTypesAssignmentCompatible(lType,expression)) {
    return GenericsHighlightUtil.checkRawToGenericAssignment(lType,rType,expression);
  }
  HighlightInfo highlightInfo=createIncompatibleTypeHighlightInfo(lType,rType,textRange);
  if (rType != null && expression != null && isCastIntentionApplicable(expression,lType)) {
    QuickFixAction.registerQuickFixAction(highlightInfo,new AddTypeCastFix(lType,expression));
  }
  if (lType instanceof PsiClassType && expression != null) {
    QuickFixAction.registerQuickFixAction(highlightInfo,new WrapExpressionFix((PsiClassType)lType,expression));
  }
  return highlightInfo;
}
