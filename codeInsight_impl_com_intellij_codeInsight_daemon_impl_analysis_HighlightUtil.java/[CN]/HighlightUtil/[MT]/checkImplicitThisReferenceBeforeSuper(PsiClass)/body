{
  if (aClass instanceof PsiAnonymousClass)   return null;
  PsiClass superClass=aClass.getSuperClass();
  if (superClass == null || !PsiUtil.isInnerClass(superClass))   return null;
  PsiClass outerClass=superClass.getContainingClass();
  if (!InheritanceUtil.isInheritorOrSelf(aClass,outerClass,true)) {
    return null;
  }
  PsiMethod[] constructors=aClass.getConstructors();
  if (constructors.length == 0) {
    TextRange range=ClassUtil.getClassDeclarationTextRange(aClass);
    return createMemberReferencedError(aClass.getName() + ".this",range);
  }
  for (  PsiMethod constructor : constructors) {
    if (!isSuperCalled(constructor)) {
      return createMemberReferencedError(aClass.getName() + ".this",getMethodDeclarationTextRange(constructor));
    }
  }
  return null;
}
