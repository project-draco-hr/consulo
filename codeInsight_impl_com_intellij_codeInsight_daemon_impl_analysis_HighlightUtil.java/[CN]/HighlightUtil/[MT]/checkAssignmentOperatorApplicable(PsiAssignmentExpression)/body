{
  PsiJavaToken operationSign=assignment.getOperationSign();
  IElementType eqOpSign=operationSign.getTokenType();
  IElementType opSign=TypeConversionUtil.convertEQtoOperation(eqOpSign);
  if (opSign == null)   return null;
  HighlightInfo errorResult=null;
  if (!TypeConversionUtil.isBinaryOperatorApplicable(opSign,assignment.getLExpression(),assignment.getRExpression(),true)) {
    String operatorText=operationSign.getText().substring(0,operationSign.getText().length() - 1);
    String message=JavaErrorMessages.message("binary.operator.not.applicable",operatorText,formatType(assignment.getLExpression().getType()),formatType(assignment.getRExpression().getType()));
    errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,assignment,message);
  }
  return errorResult;
}
