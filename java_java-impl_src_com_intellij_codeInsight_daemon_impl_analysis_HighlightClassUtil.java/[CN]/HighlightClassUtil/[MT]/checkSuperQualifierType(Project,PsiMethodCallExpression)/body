{
  if (!HighlightUtil.isSuperMethodCall(superCall))   return null;
  PsiMethod ctr=PsiTreeUtil.getParentOfType(superCall,PsiMethod.class,true,PsiMember.class);
  if (ctr == null)   return null;
  final PsiClass aClass=ctr.getContainingClass();
  if (aClass == null)   return null;
  PsiClass targetClass=aClass.getSuperClass();
  if (targetClass == null)   return null;
  PsiExpression qualifier=superCall.getMethodExpression().getQualifierExpression();
  if (qualifier != null) {
    if (PsiUtil.isInnerClass(targetClass)) {
      PsiClass outerClass=targetClass.getContainingClass();
      if (outerClass != null) {
        PsiClassType outerType=JavaPsiFacade.getInstance(project).getElementFactory().createType(outerClass);
        return HighlightUtil.checkAssignability(outerType,null,qualifier,qualifier);
      }
    }
 else {
      return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,qualifier,"'" + HighlightUtil.formatClass(targetClass) + "' is not an inner class");
    }
  }
  return null;
}
