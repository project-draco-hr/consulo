{
  if (outerClass != null && !PsiTreeUtil.isAncestor(outerClass,place,false)) {
    String description=JavaErrorMessages.message("is.not.an.enclosing.class",HighlightUtil.formatClass(outerClass));
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,elementToHighlight,description);
  }
  PsiModifierListOwner staticParent=PsiUtil.getEnclosingStaticElement(place,outerClass);
  if (staticParent != null) {
    String description=JavaErrorMessages.message("cannot.be.referenced.from.static.context",outerClass == null ? "" : HighlightUtil.formatClass(outerClass) + "." + PsiKeyword.THIS);
    HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,elementToHighlight,description);
    IntentionAction fix=QUICK_FIX_FACTORY.createModifierListFix(staticParent,PsiModifier.STATIC,false,false);
    QuickFixAction.registerQuickFixAction(highlightInfo,fix);
    if (aClass != null && HighlightUtil.getIncompatibleModifier(PsiModifier.STATIC,aClass.getModifierList()) == null) {
      IntentionAction fix2=QUICK_FIX_FACTORY.createModifierListFix(aClass,PsiModifier.STATIC,true,false);
      QuickFixAction.registerQuickFixAction(highlightInfo,fix2);
    }
    return highlightInfo;
  }
  return null;
}
