{
  Disposer.register(Disposer.get("ui"),this);
  myTabs=new JBTabsImpl(null,ActionManager.getInstance(),null,this);
  myTabs.getPresentation().setInnerInsets(new Insets(4,0,0,0)).setPaintBorder(1,0,0,0).setActiveTabFillIn(Color.gray).setUiDecorator(new UiDecorator(){
    @NotNull public UiDecoration getDecoration(){
      return new UiDecoration(null,new Insets(4,4,4,4));
    }
  }
);
  final UiDebuggerExtension[] extensions={new DisposerDebugger()};
  init(extensions);
  myDialog=new DialogWrapper((Project)null,true){
{
      init();
    }
    protected JComponent createCenterPanel(){
      Disposer.register(getDisposable(),UiDebugger.this);
      for (      UiDebuggerExtension each : extensions) {
        Disposer.register(getDisposable(),each);
      }
      return myTabs.getComponent();
    }
    @Override public JComponent getPreferredFocusedComponent(){
      return myTabs.getComponent();
    }
    @Override protected String getDimensionServiceKey(){
      return "UiDebugger";
    }
    @Override protected Action[] createActions(){
      return new Action[]{new AbstractAction("Close"){
        public void actionPerformed(        ActionEvent e){
          doOKAction();
        }
      }
};
    }
  }
;
  myDialog.setModal(false);
  myDialog.setTitle("UI Debugger");
  myDialog.setResizable(true);
  myDialog.show();
}
