{
  super.setUp();
  myFooElementFile=new WriteCommandAction<XmlFile>(getProject()){
    @Override protected void run(    Result<XmlFile> result) throws Throwable {
      result.setResult((XmlFile)createFile("a.xml","<a/>"));
    }
  }
.execute().getResultObject();
  getDomManager().registerFileDescription(new MockDomFileDescription<FooElement>(FooElement.class,"a",myFooElementFile),getTestRootDisposable());
  myBarElementFile=new WriteCommandAction<XmlFile>(getProject()){
    @Override protected void run(    Result<XmlFile> result) throws Throwable {
      result.setResult((XmlFile)createFile("b.xml","<b/>"));
    }
  }
.execute().getResultObject();
  getDomManager().registerFileDescription(new DomFileDescription<BarElement>(BarElement.class,"b"){
    @Override public boolean isMyFile(    @NotNull final XmlFile file,    final Module module){
      return myFooElementFile.getText().contains("239");
    }
    @Override public boolean isAutomaticHighlightingEnabled(){
      return false;
    }
  }
,getTestRootDisposable());
  assertResultsAndClear();
}
