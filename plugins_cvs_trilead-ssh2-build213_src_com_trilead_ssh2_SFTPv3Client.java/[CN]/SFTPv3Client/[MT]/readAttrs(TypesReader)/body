{
  SFTPv3FileAttributes fa=new SFTPv3FileAttributes();
  int flags=tr.readUINT32();
  if ((flags & AttribFlags.SSH_FILEXFER_ATTR_SIZE) != 0) {
    if (debug != null)     debug.println("SSH_FILEXFER_ATTR_SIZE");
    fa.size=new Long(tr.readUINT64());
  }
  if ((flags & AttribFlags.SSH_FILEXFER_ATTR_V3_UIDGID) != 0) {
    if (debug != null)     debug.println("SSH_FILEXFER_ATTR_V3_UIDGID");
    fa.uid=new Integer(tr.readUINT32());
    fa.gid=new Integer(tr.readUINT32());
  }
  if ((flags & AttribFlags.SSH_FILEXFER_ATTR_PERMISSIONS) != 0) {
    if (debug != null)     debug.println("SSH_FILEXFER_ATTR_PERMISSIONS");
    fa.permissions=new Integer(tr.readUINT32());
  }
  if ((flags & AttribFlags.SSH_FILEXFER_ATTR_V3_ACMODTIME) != 0) {
    if (debug != null)     debug.println("SSH_FILEXFER_ATTR_V3_ACMODTIME");
    fa.atime=new Long(((long)tr.readUINT32()) & 0xffffffffl);
    fa.mtime=new Long(((long)tr.readUINT32()) & 0xffffffffl);
  }
  if ((flags & AttribFlags.SSH_FILEXFER_ATTR_EXTENDED) != 0) {
    int count=tr.readUINT32();
    if (debug != null)     debug.println("SSH_FILEXFER_ATTR_EXTENDED (" + count + ")");
    while (count > 0) {
      tr.readByteString();
      tr.readByteString();
      count--;
    }
  }
  return fa;
}
