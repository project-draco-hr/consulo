{
  Vector files=new Vector();
  while (true) {
    int req_id=generateNextRequestID();
    TypesWriter tw=new TypesWriter();
    tw.writeString(handle,0,handle.length);
    if (debug != null) {
      debug.println("Sending SSH_FXP_READDIR...");
      debug.flush();
    }
    sendMessage(Packet.SSH_FXP_READDIR,req_id,tw.getBytes());
    byte[] resp=receiveMessage(65536);
    if (debug != null) {
      debug.println("Got REPLY.");
      debug.flush();
    }
    TypesReader tr=new TypesReader(resp);
    int t=tr.readByte();
    int rep_id=tr.readUINT32();
    if (rep_id != req_id)     throw new IOException("The server sent an invalid id field.");
    if (t == Packet.SSH_FXP_NAME) {
      int count=tr.readUINT32();
      if (debug != null)       debug.println("Parsing " + count + " name entries...");
      while (count > 0) {
        SFTPv3DirectoryEntry dirEnt=new SFTPv3DirectoryEntry();
        dirEnt.filename=tr.readString(charsetName);
        dirEnt.longEntry=tr.readString(charsetName);
        dirEnt.attributes=readAttrs(tr);
        files.addElement(dirEnt);
        if (debug != null)         debug.println("File: '" + dirEnt.filename + "'");
        count--;
      }
      continue;
    }
    if (t != Packet.SSH_FXP_STATUS)     throw new IOException("The SFTP server sent an unexpected packet type (" + t + ")");
    int errorCode=tr.readUINT32();
    if (errorCode == ErrorCodes.SSH_FX_EOF)     return files;
    throw new SFTPException(tr.readString(),errorCode);
  }
}
