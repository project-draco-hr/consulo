{
  final T patchBase=patch.getPatch();
  final Application application=ApplicationManager.getApplication();
  final ApplyPatchException[] exc=new ApplyPatchException[1];
  final ApplyPatchStatus applyPatchStatus=application.runWriteAction(new Computable<ApplyPatchStatus>(){
    @Override public ApplyPatchStatus compute(){
      try {
        return patch.apply(file,context,project);
      }
 catch (      IOException e) {
        LOG.error(e);
        return ApplyPatchStatus.FAILURE;
      }
catch (      ApplyPatchException e) {
        exc[0]=e;
      }
      return ApplyPatchStatus.FAILURE;
    }
  }
);
  if (exc[0] != null) {
    if (!patchBase.isNewFile() && !patchBase.isDeletedFile() && patchBase instanceof TextFilePatch) {
      ApplyPatchStatus mergeStatus=mergeAgainstBaseVersion(project,file,new FilePathImpl(file),(TextFilePatch)patchBase,ApplyPatchMergeRequestFactory.INSTANCE);
      if (mergeStatus != null) {
        return mergeStatus;
      }
    }
    Messages.showErrorDialog(project,VcsBundle.message("patch.apply.error",patchBase.getBeforeName(),exc[0].getMessage()),VcsBundle.message("patch.apply.dialog.title"));
    return ApplyPatchStatus.FAILURE;
  }
  return applyPatchStatus;
}
