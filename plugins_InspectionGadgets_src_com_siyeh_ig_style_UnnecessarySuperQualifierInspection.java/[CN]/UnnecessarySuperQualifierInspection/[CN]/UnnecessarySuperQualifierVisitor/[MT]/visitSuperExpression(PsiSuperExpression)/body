{
  super.visitSuperExpression(expression);
  final PsiJavaCodeReferenceElement qualifier=expression.getQualifier();
  if (qualifier != null) {
    return;
  }
  final PsiElement parent=expression.getParent();
  if (!(parent instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)parent;
  final PsiElement grandParent=referenceExpression.getParent();
  if (grandParent instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
    if (!hasUnnecessarySuperQualifier(methodCallExpression)) {
      return;
    }
  }
 else {
    if (!hasUnnecessarySuperQualifier(referenceExpression)) {
      return;
    }
  }
  registerError(expression,ProblemHighlightType.LIKE_UNUSED_SYMBOL);
}
