{
  for (java.util.Iterator<AbstractUrl> it=myAbstractUrls.keySet().iterator(); it.hasNext(); ) {
    AbstractUrl abstractUrl=it.next();
    final Object[] path=abstractUrl.createPath(myProject);
    if (path == null || path.length < 1 || path[0] == null) {
      continue;
    }
    try {
      if (abstractUrl instanceof FormUrl) {
        final PsiManager psiManager=PsiManager.getInstance(myProject);
        myFavorites.add(FormNode.constructFormNode(psiManager,(PsiClass)path[0],myProject,myFavoritesConfiguration));
      }
 else {
        myFavorites.add(ProjectViewNode.createTreeNode((Class<? extends AbstractTreeNode>)Class.forName(myAbstractUrls.get(abstractUrl)),myProject,path[path.length - 1],myFavoritesConfiguration));
      }
    }
 catch (    Exception e) {
    }
  }
}
