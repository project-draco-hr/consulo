{
  if (!(element instanceof AbstractTreeNode)) {
    return ArrayUtil.EMPTY_OBJECT_ARRAY;
  }
  final AbstractTreeNode favoritesTreeElement=(AbstractTreeNode)element;
  try {
    if (element == myRoot) {
      Set<AbstractTreeNode> result=new HashSet<AbstractTreeNode>();
      for (Iterator<AbstractTreeNode> iterator=myFavorites.iterator(); iterator.hasNext(); ) {
        AbstractTreeNode abstractTreeNode=iterator.next();
        final Object val=abstractTreeNode.getValue();
        if (val != null && (!(val instanceof PsiElement) || ((PsiElement)val).isValid())) {
          result.add(abstractTreeNode);
        }
      }
      myFavorites=result;
      if (myFavorites.isEmpty()) {
        return new Object[]{getEmptyScreen()};
      }
      return myFavorites.toArray(new Object[myFavorites.size()]);
    }
    return super.getChildElements(favoritesTreeElement);
  }
 catch (  Exception e) {
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
