{
  if (!(element instanceof AbstractTreeNode)) {
    return ArrayUtil.EMPTY_OBJECT_ARRAY;
  }
  final AbstractTreeNode favoritesTreeElement=(AbstractTreeNode)element;
  try {
    if (element == myRoot) {
      if (myFavorites.isEmpty()) {
        return new Object[]{new AbstractTreeNode<String>(myProject,"There is nothing to display. Add node to favorites list."){
          public Collection<AbstractTreeNode> getChildren(){
            return null;
          }
          public void update(          final PresentationData presentation){
            presentation.setPresentableText(getValue());
          }
        }
};
      }
      return myFavorites.toArray(new Object[myFavorites.size()]);
    }
    return super.getChildElements(favoritesTreeElement);
  }
 catch (  Exception e) {
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
