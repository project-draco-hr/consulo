{
  final String userDefined=System.getProperty("gradle.launcher.class");
  if (StringUtil.isNotEmpty(userDefined)) {
    return userDefined;
  }
  VirtualFile launcher=gradleHome.findFileByRelativePath("bin/gradle");
  if (launcher == null) {
    launcher=gradleHome.findFileByRelativePath("bin/gradle.bat");
  }
  if (launcher != null) {
    try {
      final String text=StringUtil.convertLineSeparators(VfsUtilCore.loadText(launcher));
      final Matcher matcher=MAIN_CLASS_NAME_PATTERN.matcher(text);
      if (matcher.find()) {
        String candidate=matcher.group(1);
        if (StringUtil.isNotEmpty(candidate)) {
          return candidate;
        }
      }
    }
 catch (    IOException ignored) {
    }
  }
  final PsiFile grFile=PsiManager.getInstance(project).findFile(script);
  if (grFile != null && JavaPsiFacade.getInstance(project).findClass("org.gradle.BootstrapMain",grFile.getResolveScope()) != null) {
    return "org.gradle.BootstrapMain";
  }
  return "org.gradle.launcher.GradleMain";
}
