{
  VcsBackgroundTask task=new VcsBackgroundTask<VirtualFile[]>(project,getActionName(activeVcs),BackgroundFromStartOption.getInstance(),Collections.singleton(files),true){
    @Override protected void process(    VirtualFile[] items) throws VcsException {
      ProjectLevelVcsManager manager=ProjectLevelVcsManager.getInstance(project);
      manager.startBackgroundVcsOperation();
      try {
        SVNWCClient wcClient=activeVcs.createWCClient();
        Collection<SVNException> exceptions=SvnCheckinEnvironment.scheduleUnversionedFilesForAddition(wcClient,Arrays.asList(items),true);
        markDirty(project,items);
        if (!exceptions.isEmpty()) {
          final Collection<String> messages=new ArrayList<String>(exceptions.size());
          for (          SVNException exception : exceptions) {
            messages.add(exception.getMessage());
          }
          throw new VcsException(messages);
        }
      }
  finally {
        manager.stopBackgroundVcsOperation();
      }
    }
  }
;
  ProgressManager.getInstance().run(task);
}
