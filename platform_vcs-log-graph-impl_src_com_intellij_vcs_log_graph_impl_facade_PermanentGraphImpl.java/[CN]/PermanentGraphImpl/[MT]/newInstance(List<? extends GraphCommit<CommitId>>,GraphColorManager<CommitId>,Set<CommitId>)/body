{
  PermanentLinearGraphBuilder<CommitId> permanentLinearGraphBuilder=PermanentLinearGraphBuilder.newInstance(graphCommits);
  PermanentLinearGraphImpl linearGraph=permanentLinearGraphBuilder.build();
  Map<CommitId,GraphCommit<CommitId>> commitsWithNotLoadParent=permanentLinearGraphBuilder.getCommitsWithNotLoadParent();
  final PermanentCommitsInfoIml<CommitId> commitIdPermanentCommitsInfo=PermanentCommitsInfoIml.newInstance(graphCommits);
  GraphLayoutImpl permanentGraphLayout=GraphLayoutBuilder.build(linearGraph,new Comparator<Integer>(){
    @Override public int compare(    @NotNull Integer nodeIndex1,    @NotNull Integer nodeIndex2){
      CommitId commitId1=commitIdPermanentCommitsInfo.getCommitId(nodeIndex1);
      CommitId commitId2=commitIdPermanentCommitsInfo.getCommitId(nodeIndex2);
      return graphColorManager.compareHeads(commitId2,commitId1);
    }
  }
);
  return new PermanentGraphImpl<CommitId>(linearGraph,permanentGraphLayout,commitIdPermanentCommitsInfo,graphColorManager,branchesCommitId,commitsWithNotLoadParent);
}
