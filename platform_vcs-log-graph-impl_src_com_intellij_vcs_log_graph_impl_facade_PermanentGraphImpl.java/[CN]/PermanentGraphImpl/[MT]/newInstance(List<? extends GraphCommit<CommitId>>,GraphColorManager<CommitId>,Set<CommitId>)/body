{
  PermanentLinearGraphBuilder<CommitId> permanentLinearGraphBuilder=PermanentLinearGraphBuilder.newInstance(graphCommits);
  NotLoadedCommitsIdsGenerator<CommitId> idsGenerator=new NotLoadedCommitsIdsGenerator<>();
  PermanentLinearGraphImpl linearGraph=permanentLinearGraphBuilder.build(idsGenerator);
  final PermanentCommitsInfoImpl<CommitId> commitIdPermanentCommitsInfo=PermanentCommitsInfoImpl.newInstance(graphCommits,idsGenerator.getNotLoadedCommits());
  GraphLayoutImpl permanentGraphLayout=GraphLayoutBuilder.build(linearGraph,new Comparator<Integer>(){
    @Override public int compare(    @NotNull Integer nodeIndex1,    @NotNull Integer nodeIndex2){
      CommitId commitId1=commitIdPermanentCommitsInfo.getCommitId(nodeIndex1);
      CommitId commitId2=commitIdPermanentCommitsInfo.getCommitId(nodeIndex2);
      return graphColorManager.compareHeads(commitId2,commitId1);
    }
  }
);
  return new PermanentGraphImpl<>(linearGraph,permanentGraphLayout,commitIdPermanentCommitsInfo,graphColorManager,branchesCommitId);
}
