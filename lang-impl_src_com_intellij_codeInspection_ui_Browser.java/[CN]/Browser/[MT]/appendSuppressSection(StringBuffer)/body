{
  final InspectionTool tool=getTool();
  if (tool != null) {
    final HighlightDisplayKey key=HighlightDisplayKey.find(tool.getShortName());
    if (key != null) {
      final SuppressActionWrapper.SuppressTreeAction[] suppressActions=new SuppressActionWrapper(myView.getProject(),tool,myView.getTree().getSelectionPaths()).getChildren(null);
      if (suppressActions.length > 0) {
        final List<AnAction> activeSuppressActions=new ArrayList<AnAction>();
        for (        SuppressActionWrapper.SuppressTreeAction suppressAction : suppressActions) {
          if (suppressAction.isAvailable()) {
            activeSuppressActions.add(suppressAction);
          }
        }
        if (!activeSuppressActions.isEmpty()) {
          int idx=0;
          @NonNls String font="<font style=\"font-family:verdana;\" size = \"3\">";
          buf.append(font);
          @NonNls final String br="<br>";
          buf.append(br).append(br);
          HTMLComposerImpl.appendHeading(buf,InspectionsBundle.message("inspection.export.results.suppress"));
          for (          AnAction suppressAction : activeSuppressActions) {
            buf.append(br);
            HTMLComposer.appendAfterHeaderIndention(buf);
            @NonNls final String href="<a HREF=\"file://bred.txt#suppress:" + idx + "\">"+ suppressAction.getTemplatePresentation().getText()+ "</a>";
            buf.append(href);
            idx++;
          }
          @NonNls String closeFont="</font>";
          buf.append(closeFont);
        }
      }
    }
  }
}
