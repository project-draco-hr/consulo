{
  final Collection<String> unknownLibraries=new TreeSet<String>();
  final List<Module> result=new ArrayList<Module>();
  try {
    final ModifiableModuleModel moduleModel=model != null ? model : ModuleManager.getInstance(project).getModifiableModel();
    final ModifiableRootModel[] rootModels=new ModifiableRootModel[getParameters().projectsToConvert.size()];
    int idx=0;
    final Set<String> usedVariables=new HashSet<String>();
    for (    String path : getParameters().projectsToConvert) {
      String modulesDirectory=getParameters().converterOptions.commonModulesDirectory;
      if (modulesDirectory == null) {
        modulesDirectory=path;
      }
      final Element classpathElement=JDOMUtil.loadDocument(new File(path,EclipseXml.DOT_CLASSPATH_EXT)).getRootElement();
      final Module module=moduleModel.newModule(modulesDirectory + "/" + EclipseProjectFinder.findProjectName(path)+ IdeaXml.IML_EXT,StdModuleTypes.JAVA);
      final ModifiableRootModel rootModel=ModuleRootManager.getInstance(module).getModifiableModel();
      rootModels[idx++]=rootModel;
      new EclipseClasspathReader(path,project).readClasspath(rootModel,unknownLibraries,usedVariables,getParameters().converterOptions.testPattern,classpathElement);
      ClasspathStorage.setStorageType(module,getParameters().linkConverted ? EclipseClasspathStorageProvider.ID : ClasspathStorage.DEFAULT_STORAGE);
    }
    if (model == null) {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          ProjectRootManagerEx.getInstanceEx(project).multiCommit(moduleModel,rootModels);
        }
      }
);
    }
  }
 catch (  Exception e) {
    LOG.error(e);
  }
  createEclipseLibrary(project,unknownLibraries,IdeaXml.ECLIPSE_LIBRARY);
  if (unknownLibraries.size() != 0) {
    StringBuffer message=new StringBuffer();
    for (    String name : unknownLibraries) {
      message.append("\n");
      message.append(name);
    }
    Messages.showErrorDialog(project,EclipseBundle.message("eclipse.import.warning.undefinded.libraries",message.toString()),getTitle());
  }
  return result;
}
