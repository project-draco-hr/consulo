{
  myProject=project;
  myModel=new ListTableModel(new ColumnInfo[]{IS_SHOW,FILE});
  myFilesTable=new TableView(myModel);
  myFilesTable.setShowGrid(false);
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      ArrayList<MyFileListElement> newList=new ArrayList<MyFileListElement>(myModel.getItems());
      final FileChooserDialog fileChooser=FileChooserFactory.getInstance().createFileChooser(new FileChooserDescriptor(true,false,false,false,false,true),myProject);
      final VirtualFile[] virtualFiles=fileChooser.choose(null,myProject);
      for (int i=0; i < virtualFiles.length; i++) {
        VirtualFile virtualFile=virtualFiles[i];
        newList.add(new MyFileListElement(virtualFile.getPath(),true));
      }
      myModel.setItems(newList);
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      TableUtil.stopEditing(myFilesTable);
      int index=myFilesTable.getSelectedRow();
      if (0 <= index && index < myModel.getRowCount()) {
        myModel.removeRow(index);
        if (index < myModel.getRowCount()) {
          myFilesTable.setRowSelectionInterval(index,index);
        }
 else {
          if (index > 0) {
            myFilesTable.setRowSelectionInterval(index - 1,index - 1);
          }
        }
      }
      myFilesTable.requestFocus();
    }
  }
);
  myWholePanel.add(ScrollPaneFactory.createScrollPane(myFilesTable),BorderLayout.CENTER);
  myWholePanel.add(myButtonsPanel,BorderLayout.EAST);
}
