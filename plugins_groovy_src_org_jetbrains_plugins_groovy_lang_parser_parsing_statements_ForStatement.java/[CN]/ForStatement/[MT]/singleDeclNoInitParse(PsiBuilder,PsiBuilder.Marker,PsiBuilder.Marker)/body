{
  if (ParserUtils.getToken(builder,mIDENT)) {
    if (kIN.equals(builder.getTokenType()) || mCOLON.equals(builder.getTokenType())) {
      declMarker.done(PARAMETER);
      builder.advanceLexer();
      if (!ShiftExpression.parse(builder)) {
        builder.error(GroovyBundle.message("expression.expected"));
      }
      marker.done(FOR_IN_CLAUSE);
      return true;
    }
 else {
      marker.rollbackTo();
      return false;
    }
  }
 else {
    declMarker.drop();
    marker.rollbackTo();
    return false;
  }
}
