{
  final Project project=location.getProject();
  final PsiElement element=location.getPsiElement();
  myPackage=checkPackage(element);
  if (myPackage == null)   return null;
  RunnerAndConfigurationSettingsImpl settings=cloneTemplateConfiguration(project,context);
  final TestNGConfiguration configuration=(TestNGConfiguration)settings.getConfiguration();
  final TestData data=configuration.data;
  data.PACKAGE_NAME=myPackage.getQualifiedName();
  data.TEST_OBJECT=TestType.PACKAGE.getType();
  if (data.getScope() != TestSearchScope.WHOLE_PROJECT) {
    final Module predefinedModule=configuration.getConfigurationModule().getModule();
    if (predefinedModule == null) {
      Module module=null;
      if (element instanceof PsiDirectory) {
        module=VfsUtil.getModuleForFile(project,((PsiDirectory)element).getVirtualFile());
      }
      if (module != null) {
        configuration.setModule(module);
      }
 else {
        data.setScope(TestSearchScope.WHOLE_PROJECT);
      }
    }
  }
 else {
    final RunnerAndConfigurationSettingsImpl template=((RunManagerImpl)context.getRunManager()).getConfigurationTemplate(getConfigurationFactory());
    final Module selectedModule=context.getModule();
    if (selectedModule != null) {
      final ModuleBasedConfiguration templateConfiguration=(ModuleBasedConfiguration)template.getConfiguration();
      if (templateConfiguration.getConfigurationModule().getModule() == null) {
        configuration.setModule(selectedModule);
        data.setScope(TestSearchScope.SINGLE_MODULE);
      }
    }
  }
  configuration.setGeneratedName();
  return settings;
}
