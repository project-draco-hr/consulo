{
  if (myEvaluated != null) {
    myEvaluated.paintIcon(c,g,x,y);
  }
 else {
    myBaseIcon.paintIcon(c,g,x,y);
    if (!myIsScheduled) {
      myIsScheduled=true;
      final Component target;
      final Container list=SwingUtilities.getAncestorOfClass(JList.class,c);
      if (list != null) {
        target=list;
      }
 else {
        target=c;
      }
      final Job<Object> job=JobScheduler.getInstance().createJob("Evaluating deferred icon",Job.DEFAULT_PRIORITY);
      job.addTask(new Runnable(){
        public void run(){
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            public void run(){
              myEvaluated=myEvaluator.fun(myParam);
            }
          }
);
          SwingUtilities.invokeLater(new Runnable(){
            public void run(){
              if (c == target) {
                c.repaint(x,y,getIconWidth(),getIconHeight());
              }
 else {
                target.repaint();
              }
            }
          }
);
        }
      }
);
      job.schedule();
    }
  }
}
