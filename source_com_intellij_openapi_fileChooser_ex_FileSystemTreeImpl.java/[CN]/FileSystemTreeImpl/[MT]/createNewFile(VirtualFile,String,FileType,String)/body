{
  final Exception[] failReason=new Exception[]{null};
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          try {
            final String newFileNameWithExtension=newFileName.endsWith('.' + fileType.getDefaultExtension()) ? newFileName : newFileName + '.' + fileType.getDefaultExtension();
            VirtualFile file=parentDirectory.createChildData(this,newFileNameWithExtension);
            DeploymentItemUtil.setFileText(myProject,file,initialContent);
            updateTree();
            FileElement fileDesc=new FileElement(file,file.getName());
            myTreeBuilder.buildNodeForElement(fileDesc);
            DefaultMutableTreeNode fileNode=myTreeBuilder.getNodeForElement(fileDesc);
            if (fileNode != null) {
              TreePath treePath=new TreePath(fileNode.getPath());
              myTree.setSelectionPath(treePath);
              myTree.scrollPathToVisible(treePath);
              myTree.expandPath(treePath);
            }
          }
 catch (          IOException e) {
            failReason[0]=e;
          }
        }
      }
);
    }
  }
,UIBundle.message("file.chooser.create.new.file.command.name"),null);
  return failReason[0];
}
