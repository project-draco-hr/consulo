{
  final JComponent chooser=super.createCenterPanel();
  final JPanel panel=new JPanel(new GridBagLayout());
  final JButton editButton=new JButton(ProjectBundle.message("button.edit"));
  panel.add(chooser,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
  panel.add(editButton,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,2,0,0),0,0));
  myChooser.getComponent().addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        editButton.doClick();
      }
    }
  }
);
  editButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final HashSet<Library> librariesBeforeEdit=new HashSet<Library>(myChooseItemsProvider.getChooseItems());
      final boolean isOk=LibraryTableEditor.showEditDialog(editButton,myLibraryTable,getSelectedElements());
      final List<Library> librariesAfterEdit=myChooseItemsProvider.getChooseItems();
      myChooser.saveSelection();
      if (isOk) {
        final Set<Library> librariesToSelect=new HashSet<Library>(librariesAfterEdit);
        librariesToSelect.removeAll(librariesBeforeEdit);
        setElements(librariesAfterEdit,librariesToSelect);
        if (librariesToSelect.size() == 0) {
          myChooser.restoreSelection();
        }
      }
 else {
        setElements(librariesAfterEdit,Collections.<Library>emptyList());
        myChooser.restoreSelection();
      }
      if (myChooser.getSelectedElementRow() < 0 && myChooser.getElementCount() > 0) {
        myChooser.selectElements(Arrays.asList(myChooser.getElementAt(0)));
      }
    }
  }
);
  return panel;
}
