{
  PsiBinaryExpression element=PsiTreeUtil.getParentOfType(psiElement,PsiBinaryExpression.class,false,PsiMember.class);
  if (element == null)   return null;
  PsiBinaryExpression concatenation=null;
  boolean stringLiteralOccured=false;
  while (true) {
    PsiExpression lOperand=element.getLOperand();
    PsiExpression rOperand=element.getROperand();
    if (element.getOperationTokenType() != JavaTokenType.PLUS)     return concatenation;
    stringLiteralOccured|=lOperand instanceof PsiLiteralExpression && ((PsiLiteralExpression)lOperand).getValue() instanceof String || rOperand instanceof PsiLiteralExpression && ((PsiLiteralExpression)rOperand).getValue() instanceof String;
    if (stringLiteralOccured) {
      concatenation=element;
    }
    PsiElement parent=element.getParent();
    if (!(parent instanceof PsiBinaryExpression))     return concatenation;
    element=(PsiBinaryExpression)parent;
  }
}
