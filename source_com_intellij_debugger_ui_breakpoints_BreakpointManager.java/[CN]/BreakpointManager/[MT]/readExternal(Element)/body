{
  LOG.assertTrue(SwingUtilities.isEventDispatchThread());
  myStartupManager.registerPostStartupActivity(new Runnable(){
    public void run(){
      PsiDocumentManager.getInstance(myProject).commitAndRunReadAction(new Runnable(){
        public void run(){
          try {
            final List groups=parentNode.getChildren();
            for (Iterator it=groups.iterator(); it.hasNext(); ) {
              final Element group=(Element)it.next();
              final String category=group.getName();
              Element anyExceptionBreakpointGroup=null;
              if (!AnyExceptionBreakpoint.ANY_EXCEPTION_BREAKPOINT.equals(category)) {
                anyExceptionBreakpointGroup=group.getChild(AnyExceptionBreakpoint.ANY_EXCEPTION_BREAKPOINT);
                final BreakpointFactory factory=BreakpointFactory.getInstance(category);
                if (factory != null) {
                  for (Iterator i=group.getChildren("breakpoint").iterator(); i.hasNext(); ) {
                    Element breakpointNode=(Element)i.next();
                    Breakpoint breakpoint=factory.createBreakpoint(myProject);
                    breakpoint.readExternal(breakpointNode);
                    addBreakpoint(breakpoint);
                  }
                }
              }
 else {
                anyExceptionBreakpointGroup=group;
              }
              if (anyExceptionBreakpointGroup != null) {
                final Element breakpointElement=group.getChild("breakpoint");
                if (breakpointElement != null) {
                  myAnyExceptionBreakpoint.readExternal(breakpointElement);
                }
              }
            }
          }
 catch (          InvalidDataException e) {
          }
          DebuggerInvocationUtil.invokeLater(myProject,new Runnable(){
            public void run(){
              updateBreakpointsUI();
            }
          }
);
        }
      }
);
    }
  }
);
}
