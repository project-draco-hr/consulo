{
  LOG.assertTrue(SwingUtilities.isEventDispatchThread());
  myStartupManager.registerPostStartupActivity(new Runnable(){
    public void run(){
      PsiDocumentManager.getInstance(myProject).commitAndRunReadAction(new Runnable(){
        public void run(){
          try {
            readBreakpoints(parentNode,LINE_BREAKPOINTS);
            readBreakpoints(parentNode,EXCEPTION_BREAKPOINTS);
            final Element exceptionBreakpointsNode=parentNode.getChild(EXCEPTION_BREAKPOINTS);
            if (exceptionBreakpointsNode != null) {
              final Element anyExceptionBreakpoint=exceptionBreakpointsNode.getChild(ANY_EXCEPTION_BREAKPOINT);
              if (anyExceptionBreakpoint != null) {
                myAnyExceptionBreakpoint.readExternal(anyExceptionBreakpoint);
              }
            }
            readBreakpoints(parentNode,FIELD_BREAKPOINTS);
            readBreakpoints(parentNode,METHOD_BREAKPOINTS);
          }
 catch (          InvalidDataException e) {
          }
          DebuggerInvocationUtil.invokeLater(myProject,new Runnable(){
            public void run(){
              updateBreakpointsUI();
            }
          }
);
        }
      }
);
    }
  }
);
}
