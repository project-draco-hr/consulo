{
  if (!(expression instanceof PsiPolyadicExpression)) {
    return null;
  }
  final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)expression;
  final IElementType tokenType=polyadicExpression.getOperationTokenType();
  if (equals) {
    if (!JavaTokenType.EQEQ.equals(tokenType)) {
      return null;
    }
  }
 else {
    if (!JavaTokenType.NE.equals(tokenType)) {
      return null;
    }
  }
  final PsiExpression[] operands=polyadicExpression.getOperands();
  if (operands.length != 2) {
    return null;
  }
  final PsiExpression lhs=ParenthesesUtils.stripParentheses(operands[0]);
  if (lhs == null) {
    return null;
  }
  final PsiExpression rhs=ParenthesesUtils.stripParentheses(operands[1]);
  if (rhs == null) {
    return null;
  }
  if (PsiType.NULL.equals(lhs.getType())) {
    if (!(rhs instanceof PsiReferenceExpression)) {
      return null;
    }
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)rhs;
    final PsiElement target=referenceExpression.resolve();
    if (!(target instanceof PsiVariable)) {
      return null;
    }
    return (PsiVariable)target;
  }
 else   if (PsiType.NULL.equals(rhs.getType())) {
    if (!(lhs instanceof PsiReferenceExpression)) {
      return null;
    }
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)lhs;
    final PsiElement target=referenceExpression.resolve();
    if (!(target instanceof PsiVariable)) {
      return null;
    }
    return (PsiVariable)target;
  }
  return null;
}
