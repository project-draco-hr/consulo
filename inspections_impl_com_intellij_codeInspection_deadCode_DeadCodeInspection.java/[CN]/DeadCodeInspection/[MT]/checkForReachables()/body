{
  CodeScanner codeScanner=new CodeScanner();
  getRefManager().iterate(new RefManager.RefIterator(){
    public void accept(    RefElement refElement){
      ((RefElementImpl)refElement).setReachable(false);
      refElement.accept(new RefVisitor(){
        public void visitMethod(        RefMethod method){
          if (isAddMainsEnabled() && method.isAppMain()) {
            getEntryPointsManager().addEntryPoint(method,false);
          }
          if (isAddJUnitEnabled() && method.isTestMethod()) {
            getEntryPointsManager().addEntryPoint(method,false);
          }
        }
        public void visitClass(        RefClass aClass){
          if (isAddJUnitEnabled() && aClass.isTestCase()) {
            getEntryPointsManager().addEntryPoint(aClass,false);
          }
 else           if (isAddAppletEnabled() && aClass.isApplet() || isAddServletEnabled() && aClass.isServlet() || aClass.isEjb()) {
            getEntryPointsManager().addEntryPoint(aClass,false);
          }
        }
      }
);
    }
  }
);
  SmartRefElementPointer[] entryPoints=getEntryPointsManager().getEntryPoints();
  for (  SmartRefElementPointer entry : entryPoints) {
    if (entry.getRefElement() != null) {
      entry.getRefElement().accept(codeScanner);
    }
  }
  while (codeScanner.newlyInstantiatedClassesCount() != 0) {
    codeScanner.cleanInstantiatedClassesCount();
    codeScanner.processDelayedMethods();
  }
}
