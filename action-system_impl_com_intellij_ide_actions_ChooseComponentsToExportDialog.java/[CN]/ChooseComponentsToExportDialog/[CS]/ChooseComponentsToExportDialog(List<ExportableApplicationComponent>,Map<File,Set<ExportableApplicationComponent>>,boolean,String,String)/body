{
  super(false);
  myDescription=description;
  myShowFilePath=showFilePath;
  Map<ExportableApplicationComponent,ComponentElementProperties> componentToContainingListElement=new LinkedHashMap<ExportableApplicationComponent,ComponentElementProperties>();
  for (int i=0; i < components.size(); i++) {
    ExportableApplicationComponent component=components.get(i);
    if (!addToExistingListElement(component,componentToContainingListElement,fileToComponents)) {
      ComponentElementProperties componentElementProperties=new ComponentElementProperties();
      componentElementProperties.addComponent(component);
      componentToContainingListElement.put(component,componentElementProperties);
    }
  }
  final Set<ComponentElementProperties> componentElementProperties=new LinkedHashSet<ComponentElementProperties>(componentToContainingListElement.values());
  myChooser=new ElementsChooser<ComponentElementProperties>(true);
  for (Iterator iterator=componentElementProperties.iterator(); iterator.hasNext(); ) {
    ComponentElementProperties elementProperties=(ComponentElementProperties)iterator.next();
    myChooser.addElement(elementProperties,true,elementProperties);
  }
  myBrowseAction=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String oldPath=myPathPanel.getText();
      String path=chooseSettingsFile(oldPath,getWindow(),IdeBundle.message("title.export.file.location"),IdeBundle.message("prompt.choose.export.settings.file.path"));
      if (path == null)       return;
      myPathPanel.setText(FileUtil.toSystemDependentName(path));
    }
  }
;
  myPathPanel=new FieldPanel(IdeBundle.message("editbox.export.settings.to"),null,myBrowseAction,null);
  myPathPanel.setText(DEFAULT_PATH);
  setTitle(title);
  init();
}
