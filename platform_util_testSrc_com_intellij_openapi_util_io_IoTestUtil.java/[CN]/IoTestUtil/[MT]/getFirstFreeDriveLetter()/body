{
  final Set<Character> roots=ContainerUtil.map2Set(File.listRoots(),new Function<File,Character>(){
    @Override public Character fun(    File root){
      return root.getPath().toUpperCase(Locale.US).charAt(0);
    }
  }
);
  char drive=0;
  for (char c='E'; c <= 'Z'; c++) {
    if (!roots.contains(c)) {
      drive=c;
      break;
    }
  }
  assertFalse("Occupied: " + roots.toString(),drive == 0);
  return drive;
}
