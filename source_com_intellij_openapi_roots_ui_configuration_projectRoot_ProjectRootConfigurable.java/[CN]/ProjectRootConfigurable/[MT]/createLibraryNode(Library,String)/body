{
  final LibraryTable table=library.getTable();
  if (table != null) {
    final String level=table.getTableLevel();
    if (level == LibraryTablesRegistrar.APPLICATION_LEVEL) {
      final LibraryConfigurable configurable=new LibraryConfigurable(getGlobalLibrariesProvider(),library,myProject,TREE_UPDATER);
      final MyNode node=new MyNode(configurable);
      addNode(node,myGlobalLibrariesNode);
      return node;
    }
 else     if (level == LibraryTablesRegistrar.PROJECT_LEVEL) {
      final LibraryConfigurable configurable=new LibraryConfigurable(getProjectLibrariesProvider(),library,myProject,TREE_UPDATER);
      final MyNode node=new MyNode(configurable);
      addNode(node,myProjectLibrariesNode);
      return node;
    }
 else {
      final LibraryConfigurable configurable=new LibraryConfigurable(getApplicationServerLibrariesProvider(),library,myProject,TREE_UPDATER);
      final MyNode node=new MyNode(configurable);
      addNode(node,myApplicationServerLibrariesNode);
      return node;
    }
  }
 else {
    Module module=getSelectedModule();
    final LibraryConfigurable configurable=new LibraryConfigurable(getModifiableModelProvider(module),library,presentableName,myProject,TREE_UPDATER);
    final MyNode node=new MyNode(configurable);
    MyNode parent=(MyNode)myTree.getSelectionPath().getLastPathComponent();
    addNode(node,parent.getConfigurable().getEditableObject() instanceof Module ? parent : (MyNode)parent.getParent());
    return node;
  }
}
