{
  myProjectNode=new MyNode(myModulesConfigurable,true);
  final Map<ModuleGroup,MyNode> moduleGroup2NodeMap=new HashMap<ModuleGroup,MyNode>();
  final Module[] modules=myModuleManager.getModules();
  for (  final Module module : modules) {
    ModuleConfigurable configurable=new ModuleConfigurable(myModulesConfigurator,module,TREE_UPDATER);
    final MyNode moduleNode=new MyNode(configurable);
    createModuleLibraries(module,moduleNode);
    final String[] groupPath=myPlainMode ? null : myModulesConfigurator.getModuleModel().getModuleGroupPath(module);
    if (groupPath == null || groupPath.length == 0) {
      addNode(moduleNode,myProjectNode);
    }
 else {
      final MyNode moduleGroupNode=ModuleGroupUtil.buildModuleGroupPath(new ModuleGroup(groupPath),myProjectNode,moduleGroup2NodeMap,new Consumer<ModuleGroupUtil.ParentChildRelation<MyNode>>(){
        public void consume(        final ModuleGroupUtil.ParentChildRelation<MyNode> parentChildRelation){
          addNode(parentChildRelation.getChild(),parentChildRelation.getParent());
        }
      }
,new Function<ModuleGroup,MyNode>(){
        public MyNode fun(        final ModuleGroup moduleGroup){
          final NamedConfigurable moduleGroupConfigurable=new ModuleGroupConfigurable(moduleGroup);
          return new MyNode(moduleGroupConfigurable,true);
        }
      }
);
      addNode(moduleNode,moduleGroupNode);
    }
  }
  myProjectContentNode.add(myProjectNode);
  final LibraryTable table=LibraryTablesRegistrar.getInstance().getLibraryTable(myProject);
  myProjectLibrariesProvider=new LibrariesModifiableModel(table.getModifiableModel());
  final LibrariesConfigurable librariesConfigurable=new LibrariesConfigurable(table.getTableLevel(),myProjectLibrariesProvider);
  myProjectLibrariesNode=new MyNode(librariesConfigurable,true);
  final Library[] libraries=myProjectLibrariesProvider.getLibraries();
  for (  Library library1 : libraries) {
    addNode(new MyNode(new LibraryConfigurable(getProjectLibrariesProvider(),library1,myProject,TREE_UPDATER)),myProjectLibrariesNode);
  }
  myProjectContentNode.add(myProjectLibrariesNode);
}
