{
  final ArrayList<AnAction> result=new ArrayList<AnAction>();
  result.add(new MyRenameAction(){
    public void update(    AnActionEvent e){
      super.update(e);
      final Object selectedObject=getSelectedObject();
      if (selectedObject instanceof Library && ((Library)selectedObject).getTable() == null) {
        e.getPresentation().setEnabled(false);
      }
    }
  }
);
  final AnAction findUsages=new AnAction(ProjectBundle.message("find.usages.action.text")){
    public void update(    AnActionEvent e){
      final Presentation presentation=e.getPresentation();
      final Object selectedObject=getSelectedObject();
      presentation.setEnabled(selectedObject instanceof Module || selectedObject instanceof Library || selectedObject instanceof ProjectJdk);
    }
    public void actionPerformed(    AnActionEvent e){
      showDependencies();
    }
  }
;
  findUsages.registerCustomShortcutSet(ActionManager.getInstance().getAction(IdeActions.ACTION_FIND_USAGES).getShortcutSet(),myTree);
  result.add(findUsages);
  return result;
}
