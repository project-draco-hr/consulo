{
  DefaultActionGroup group=new DefaultActionGroup(ProjectBundle.message("add.new.library.text"),true);
  group.add(new AnAction(ProjectBundle.message("add.new.project.library.text")){
    public void actionPerformed(    AnActionEvent e){
      final LibraryTableEditor editor=LibraryTableEditor.editLibraryTable(getProjectLibrariesProvider(),myProject);
      editor.createAddLibraryAction(true,myWholePanel).actionPerformed(null);
      Disposer.dispose(editor);
    }
  }
);
  group.add(new AnAction(ProjectBundle.message("add.new.global.library.text")){
    public void actionPerformed(    AnActionEvent e){
      final LibraryTableEditor editor=LibraryTableEditor.editLibraryTable(getGlobalLibrariesProvider(),myProject);
      editor.createAddLibraryAction(true,myWholePanel).actionPerformed(null);
      Disposer.dispose(editor);
    }
  }
);
  group.add(new AnAction(ProjectBundle.message("add.new.module.library.text")){
    public void actionPerformed(    AnActionEvent e){
      Module module=(Module)getSelectedObject();
      final LibraryTableModifiableModelProvider modifiableModelProvider=getModifiableModelProvider(myModulesConfigurator.getModuleEditor(module).getModifiableRootModelProxy());
      final LibraryTableEditor editor=LibraryTableEditor.editLibraryTable(modifiableModelProvider,myProject);
      editor.createAddLibraryAction(true,myWholePanel).actionPerformed(null);
      Disposer.dispose(editor);
    }
    public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(getSelectedObject() instanceof Module);
    }
  }
);
  return group;
}
