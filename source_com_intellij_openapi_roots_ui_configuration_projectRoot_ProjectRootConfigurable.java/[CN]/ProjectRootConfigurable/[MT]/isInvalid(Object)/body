{
  if (object instanceof Module) {
    final Module module=(Module)object;
    if (myValidityCache.containsKey(module))     return myValidityCache.get(module).booleanValue();
    myUpdateDependenciesAlarm.addRequest(new Runnable(){
      public void run(){
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          public void run(){
            final OrderEntry[] entries=myModulesConfigurator.getRootModel(module).getOrderEntries();
            for (            OrderEntry entry : entries) {
              if (!entry.isValid()) {
                myValidityCache.put(module,Boolean.TRUE);
                SwingUtilities.invokeLater(new Runnable(){
                  public void run(){
                    if (!myDisposed) {
                      myTree.repaint();
                    }
                  }
                }
);
                return;
              }
            }
            myValidityCache.put(module,Boolean.FALSE);
          }
        }
);
      }
    }
,0);
  }
 else   if (object instanceof LibraryEx) {
    final LibraryEx library=(LibraryEx)object;
    if (myLibraryPathValidityCache.containsKey(library))     return myLibraryPathValidityCache.get(library).booleanValue();
    myUpdateDependenciesAlarm.addRequest(new Runnable(){
      public void run(){
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          public void run(){
            boolean valid=library.allPathsValid(OrderRootType.CLASSES) && library.allPathsValid(OrderRootType.JAVADOC) && library.allPathsValid(OrderRootType.SOURCES);
            myLibraryPathValidityCache.put(library,valid ? Boolean.FALSE : Boolean.TRUE);
            if (valid)             return;
            SwingUtilities.invokeLater(new Runnable(){
              public void run(){
                if (!myDisposed) {
                  myTree.repaint();
                }
              }
            }
);
          }
        }
);
      }
    }
,0);
  }
  return false;
}
