{
  JBPopupFactory jbPopupFactory=JBPopupFactory.getInstance();
  List<String> actions=new ArrayList<String>();
  final String libraryChoice=ProjectBundle.message("add.new.library.text");
  actions.add(libraryChoice);
  final String jdkChoice=ProjectBundle.message("add.new.jdk.text");
  actions.add(jdkChoice);
  final String moduleChoice=ProjectBundle.message("add.new.module.text");
  actions.add(moduleChoice);
  List<Icon> icons=new ArrayList<Icon>();
  final ListPopup listPopup=jbPopupFactory.createWizardStep(new BaseListPopupStep<String>(ProjectBundle.message("add.action.name"),actions,icons){
    public boolean hasSubstep(    final String selectedValue){
      return selectedValue.compareTo(moduleChoice) != 0;
    }
    public PopupStep onChosen(    final String selectedValue,    final boolean finalChoice){
      if (selectedValue.compareTo(libraryChoice) == 0) {
        return createLibrariesStep(e);
      }
 else       if (selectedValue.compareTo(jdkChoice) == 0) {
        return createJdksStep(e);
      }
      final Module module=myModulesConfigurator.addModule(myTree);
      if (module != null) {
        final MyNode node=new MyNode(new ModuleConfigurable(myModulesConfigurator,module),true);
        myProjectNode.add(node);
        TreeUtil.sort(myProjectNode,new Comparator(){
          public int compare(          final Object o1,          final Object o2){
            final MyNode node1=(MyNode)o1;
            final MyNode node2=(MyNode)o2;
            if (node1.getConfigurable() instanceof ModuleConfigurable)             return -1;
            if (node2.getConfigurable() instanceof ModuleConfigurable)             return 1;
            return node1.getDisplayName().compareTo(node2.getDisplayName());
          }
        }
);
        ((DefaultTreeModel)myTree.getModel()).reload(myProjectNode);
        selectNodeInTree(node);
      }
      return PopupStep.FINAL_CHOICE;
    }
  }
);
  listPopup.showUnderneathOf(myNorthPanel);
}
