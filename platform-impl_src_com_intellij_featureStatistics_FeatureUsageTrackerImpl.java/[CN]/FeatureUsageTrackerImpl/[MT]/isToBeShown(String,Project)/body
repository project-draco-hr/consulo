{
  ProductivityFeaturesRegistry registry=ProductivityFeaturesRegistry.getInstance();
  FeatureDescriptor descriptor=registry.getFeatureDescriptor(featureId);
  if (!descriptor.isUnused())   return false;
  String[] dependencyFeatures=descriptor.getDependencyFeatures();
  boolean locked=dependencyFeatures.length > 0;
  for (int i=0; locked && i < dependencyFeatures.length; i++) {
    if (!registry.getFeatureDescriptor(dependencyFeatures[i]).isUnused()) {
      locked=false;
    }
  }
  if (locked)   return false;
  ApplicabilityFilter[] filters=registry.getMatchingFilters(featureId);
  for (int i=0; i < filters.length; i++) {
    ApplicabilityFilter filter=filters[i];
    if (!filter.isApplicable(featureId,project))     return false;
  }
  long current=System.currentTimeMillis();
  long succesive_interval=descriptor.getDaysBetweenSuccesiveShowUps() * DAY + descriptor.getShownCount() * 2;
  long firstShowUpInterval=descriptor.getDaysBeforeFirstShowUp() * DAY;
  long lastTimeUsed=descriptor.getLastTimeUsed();
  long lastTimeShown=descriptor.getLastTimeShown();
  return lastTimeShown == 0 && firstShowUpInterval + getFirstRunTime() < current || lastTimeShown > 0 && current - lastTimeShown > succesive_interval && current - lastTimeUsed > succesive_interval;
}
