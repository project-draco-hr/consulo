{
  try {
    final DnDSource source=getSource(dge.getComponent());
    if (source == null || !MouseDragHelper.checkModifiers(dge.getTriggerEvent()))     return;
    DnDAction action=getDnDActionForPlatformAction(dge.getDragAction());
    if (source.canStartDragging(action,dge.getDragOrigin())) {
      if (myCurrentEvent == null) {
        LOG.debug("Starting dragging for " + action);
        hideCurrentHighlighter();
        final DnDDragStartBean dnDDragStartBean=source.startDragging(action,dge.getDragOrigin());
        myCurrentEvent=new DnDEventImpl(DnDManagerImpl.this,action,dnDDragStartBean.getAttachedObject(),dnDDragStartBean.getPoint());
        myCurrentEvent.setOrgPoint(dge.getDragOrigin());
        Pair<Image,Point> pair=dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action,dge.getDragOrigin());
        if (pair == null) {
          pair=Pair.create(EMPTY_IMAGE,new Point(0,0));
        }
        if (!DragSource.isDragImageSupported()) {
          myCurrentEvent.putUserData(DRAGGED_IMAGE_KEY,pair);
        }
        dge.startDrag(DragSource.DefaultCopyDrop,pair.first,pair.second,myCurrentEvent,new MyDragSourceListener(source));
      }
    }
  }
 catch (  InvalidDnDOperationException e) {
    LOG.info(e);
  }
}
