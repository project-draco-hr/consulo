{
  if (builder.getOkAction() == null && myActionButtonPresentation != null) {
    builder.addOkAction();
  }
  if (builder.getCancelAction() == null) {
    builder.addCancelAction();
  }
  if (myActionButtonPresentation != null) {
    builder.getOkAction().setText(myActionButtonPresentation.getName());
    builder.setOkActionEnabled(myActionButtonPresentation.isEnabled());
    final Action action=((DialogBuilder.ActionDescriptor)builder.getOkAction()).getAction(builder.getDialogWrapper());
    String actionName=myActionButtonPresentation.getName();
    final int index=actionName.indexOf('&');
    final char mnemonic;
    if (index >= 0 && index < actionName.length() - 1) {
      mnemonic=actionName.charAt(index + 1);
      actionName=actionName.substring(0,index) + actionName.substring(index + 1);
    }
 else {
      mnemonic=0;
    }
    action.putValue(Action.NAME,actionName);
    if (mnemonic > 0) {
      action.putValue(Action.MNEMONIC_KEY,Integer.valueOf(mnemonic));
    }
    builder.setOkOperation(new Runnable(){
      public void run(){
        myActionButtonPresentation.run((DiffViewer)DataManager.getInstance().getDataContext(builder.getCenterPanel()).getData(DataConstants.DIFF_VIEWER));
        if (myActionButtonPresentation.closeDialog()) {
          builder.getDialogWrapper().close(DialogWrapper.OK_EXIT_CODE);
        }
      }
    }
);
  }
  if (getMergeContent() != null) {
    builder.setCancelOperation(new Runnable(){
      public void run(){
        if (Messages.showYesNoDialog(getProject(),DiffBundle.message("merge.dialog.exit.without.applying.changes.confirmation.message"),DiffBundle.message("cancel.visual.merge.dialog.title"),Messages.getQuestionIcon()) == 0) {
          builder.getDialogWrapper().close(DialogWrapper.CANCEL_EXIT_CODE);
        }
      }
    }
);
    new AllResolvedListener(mergePanel,builder.getDialogWrapper());
  }
}
