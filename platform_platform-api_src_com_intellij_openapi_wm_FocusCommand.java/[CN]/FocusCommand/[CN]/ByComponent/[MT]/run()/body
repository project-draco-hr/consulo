{
  boolean shouldLogFocuses=Registry.is("ide.log.focuses");
  if (shouldLogFocuses) {
    myToFocus.addFocusListener(new FocusAdapter(){
      @Override public void focusGained(      FocusEvent e){
        if (isExpired())         return;
        super.focusGained(e);
        LOG.info("Focus gained on " + myToFocus.getClass().getName());
        myToFocus.removeFocusListener(this);
      }
    }
);
  }
  if (commandCreationTime > lastProcessedCommandTime) {
    if (!(myToFocus.requestFocusInWindow())) {
      if (shouldLogFocuses) {
        LOG.info("We could not request focus in window on " + myToFocus.getClass().getName());
        LOG.info(myAllocation);
      }
      if (ApplicationManager.getApplication().isActive()) {
        myToFocus.requestFocus();
        if (shouldLogFocuses) {
          LOG.info("Force request focus on " + myToFocus.getClass().getName());
        }
      }
    }
 else     if (shouldLogFocuses) {
      LOG.info("We have successfully requested focus in window on " + myToFocus.getClass().getName());
      LOG.info(myAllocation);
    }
    lastProcessedCommandTime=commandCreationTime;
  }
  clear();
  return ActionCallback.DONE;
}
