{
  boolean shouldLogFocuses=Registry.is("ide.log.focuses");
  if (shouldLogFocuses) {
    myToFocus.addFocusListener(new FocusAdapter(){
      @Override public void focusGained(      FocusEvent e){
        if (isExpired())         return;
        super.focusGained(e);
        LOG.info("Focus gained on " + myToFocus.getClass().getName());
        myToFocus.removeFocusListener(this);
      }
    }
);
  }
  if (!(myToFocus.requestFocusInWindow())) {
    if (shouldLogFocuses) {
      LOG.info("We could not request focus in window on " + myToFocus.getClass().getName());
      LOG.info(myAllocation);
    }
    if (isForced()) {
      myToFocus.requestFocus();
      if (shouldLogFocuses) {
        LOG.info("Force request focus on " + myToFocus.getClass().getName());
      }
    }
  }
 else   if (shouldLogFocuses) {
    LOG.info("We have successfully requested focus in window on " + myToFocus.getClass().getName());
    LOG.info(myAllocation);
  }
  clear();
  return new ActionCallback.Done();
}
