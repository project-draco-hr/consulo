{
  if (vfsUrl.startsWith(StandardFileSystems.JAR_PROTOCOL_PREFIX)) {
    try {
      return new URL("jar:file:///" + vfsUrl.substring(StandardFileSystems.JAR_PROTOCOL_PREFIX.length()));
    }
 catch (    MalformedURLException e) {
      return null;
    }
  }
  if (vfsUrl.startsWith(MAILTO)) {
    try {
      return new URL(vfsUrl);
    }
 catch (    MalformedURLException e) {
      return null;
    }
  }
  String[] split=vfsUrl.split("://");
  if (split.length != 2) {
    LOG.debug("Malformed VFS URL: " + vfsUrl);
    return null;
  }
  String protocol=split[0];
  String path=split[1];
  try {
    if (protocol.equals(StandardFileSystems.FILE_PROTOCOL)) {
      return new URL(StandardFileSystems.FILE_PROTOCOL,"",path);
    }
 else {
      return UrlClassLoader.internProtocol(new URL(vfsUrl));
    }
  }
 catch (  MalformedURLException e) {
    LOG.debug("MalformedURLException occurred:" + e.getMessage());
    return null;
  }
}
