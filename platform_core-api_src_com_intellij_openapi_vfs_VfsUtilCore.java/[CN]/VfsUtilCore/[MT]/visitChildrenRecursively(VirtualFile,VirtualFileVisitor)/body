{
  final boolean visited=visitor.allowVisitFile(file);
  if (visited) {
    VirtualFileVisitor.Result result=visitor.visitFileEx(file);
    if (result.skipChildren)     return result;
  }
  Iterable<VirtualFile> childrenIterable=null;
  VirtualFile[] children=null;
  try {
    if (!file.isValid() || !visitor.allowVisitChildren(file))     return VirtualFileVisitor.CONTINUE;
    if (!visitor.depthLimitReached()) {
      childrenIterable=visitor.getChildrenIterable(file);
      if (childrenIterable == null) {
        children=file.getChildren();
      }
    }
  }
 catch (  InvalidVirtualFileAccessException e) {
    LOG.info("Ignoring: " + e.getMessage());
    return VirtualFileVisitor.CONTINUE;
  }
  if (childrenIterable != null) {
    visitor.pushFrame();
    try {
      for (      VirtualFile child : childrenIterable) {
        VirtualFileVisitor.Result result=visitChildrenRecursively(child,visitor);
        if (result.skipToParent != null && !Comparing.equal(result.skipToParent,child))         return result;
      }
    }
  finally {
      visitor.popFrame();
    }
  }
 else   if (children != null && children.length != 0) {
    visitor.pushFrame();
    try {
      for (      VirtualFile child : children) {
        VirtualFileVisitor.Result result=visitChildrenRecursively(child,visitor);
        if (result.skipToParent != null && !Comparing.equal(result.skipToParent,child))         return result;
      }
    }
  finally {
      visitor.popFrame();
    }
  }
  if (visited) {
    visitor.afterChildrenVisited(file);
  }
  return VirtualFileVisitor.CONTINUE;
}
