{
  final Namespace namespace=DomReflectionUtil.findAnnotationDFS(myRootElementClass,Namespace.class);
  if (namespace != null) {
    final String key=namespace.value();
    final NotNullFunction<XmlTag,List<String>> function=myNamespacePolicies.get(key);
    LOG.assertTrue(function != null,"No namespace policy for namespace " + key + " in "+ this);
    final XmlDocument document=file.getDocument();
    if (document != null) {
      final XmlTag tag=document.getRootTag();
      if (tag != null) {
        final List<String> list=function.fun(tag);
        if (list.contains(tag.getNamespace()))         return true;
        final XmlProlog prolog=document.getProlog();
        if (prolog != null) {
          final XmlDoctype doctype=prolog.getDoctype();
          if (doctype != null) {
            final String publicId=doctype.getPublicId();
            if (publicId != null && list.contains(publicId))             return true;
          }
        }
      }
    }
    return false;
  }
  return true;
}
