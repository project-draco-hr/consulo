{
  String normalizedPath=FileUtil.toSystemIndependentName(path);
  normalizedPath=normalizedPath.endsWith("/") ? normalizedPath : normalizedPath + "/";
  final String normalizedLocation=normalizeLocation(location);
  if (!myKnownRepositoryLocations.exists(vcs.getName(),normalizedLocation))   return null;
  final PreparedStatement maxStatement=myConnection.getOrCreatePreparedStatement(SqliteTables.PREPARED_SELECT_PATH_DATA,new ThrowableConvertor<Connection,PreparedStatement,SQLException>(){
    @Override public PreparedStatement convert(    Connection connection) throws SQLException {
      final String innerQuery="SELECT MAX(R." + SqliteTables.REVISION.NUMBER_INT + ") MAX FROM "+ SqliteTables.PATHS_2_REVS.TABLE_NAME+ " PR INNER JOIN "+ SqliteTables.REVISION.TABLE_NAME+ " R, "+ SqliteTables.PATHS.TABLE_NAME+ " P ON PR."+ SqliteTables.PATHS_2_REVS.REVISION_FK+ "=R."+ SqliteTables.REVISION.ID+ " AND PR."+ SqliteTables.PATHS_2_REVS.PATH_FK+ "=P."+ SqliteTables.PATHS.ID+ " WHERE P."+ SqliteTables.PATHS.PATH+ "=? AND R."+ SqliteTables.REVISION.ROOT_FK+ "=?";
      return connection.prepareStatement("SELECT R." + SqliteTables.REVISION.NUMBER_INT + " REV_NU, PR."+ SqliteTables.PATHS_2_REVS.TYPE+ " TYPE FROM "+ SqliteTables.PATHS_2_REVS.TABLE_NAME+ " PR INNER JOIN "+ SqliteTables.REVISION.TABLE_NAME+ " R, "+ SqliteTables.PATHS.TABLE_NAME+ " P ON PR."+ SqliteTables.PATHS_2_REVS.REVISION_FK+ "=R."+ SqliteTables.REVISION.ID+ " AND PR."+ SqliteTables.PATHS_2_REVS.PATH_FK+ "=P."+ SqliteTables.PATHS.ID+ " WHERE P."+ SqliteTables.PATHS.PATH+ "=? AND R."+ SqliteTables.REVISION.ROOT_FK+ "=? AND R."+ SqliteTables.REVISION.NUMBER_INT+ " = ("+ innerQuery+ ")");
    }
  }
);
  try {
    maxStatement.setString(1,normalizedPath);
    maxStatement.setString(3,normalizedPath);
    final long locationId=myKnownRepositoryLocations.getLocationId(vcs.getName(),normalizedLocation);
    maxStatement.setLong(2,locationId);
    maxStatement.setLong(4,locationId);
    final long type[]=new long[1];
    final long maxRev[]=new long[1];
    maxRev[0]=-1;
    final ResultSet set=maxStatement.executeQuery();
    SqliteUtil.readSelectResults(set,new ThrowableRunnable<SQLException>(){
      @Override public void run() throws SQLException {
        maxRev[0]=set.getLong("REV_NU");
        type[0]=set.getLong("TYPE");
      }
    }
);
    if (maxRev[0] <= 0)     return null;
    if (type[0] == -100)     return null;
    final ChangeTypeEnum changeType=ChangeTypeEnum.getChangeType(type[0]);
    if (changeType == null)     return null;
    return new PathState(maxRev[0],!ChangeTypeEnum.DELETE.equals(changeType));
  }
 catch (  SQLException e) {
    throw new VcsException(e);
  }
}
