{
  final PreparedStatement statement=myConnection.getOrCreatePreparedStatement(SqliteTables.PREPARED_SELECT_MAX_REVISION,new ThrowableConvertor<Connection,PreparedStatement,SQLException>(){
    @Override public PreparedStatement convert(    Connection connection) throws SQLException {
      return connection.prepareStatement("SELECT MAX(" + SqliteTables.REVISION.NUMBER_INT + ") , MIN("+ SqliteTables.REVISION.NUMBER_INT+ ") "+ " FROM "+ SqliteTables.REVISION.TABLE_NAME+ " WHERE "+ SqliteTables.REVISION.ROOT_FK+ " =?");
    }
  }
);
  try {
    for (    final Long id : rootIdsToCheck) {
      statement.setLong(1,id);
      final ResultSet set=statement.executeQuery();
      SqliteUtil.readSelectResults(set,new ThrowableRunnable<SQLException>(){
        @Override public void run() throws SQLException {
          final long max=set.getLong(1);
          final long min=set.getLong(2);
          if (max > 0) {
            myKnownRepositoryLocations.setLastRevision(id,max);
            myKnownRepositoryLocations.setFirstRevision(id,min);
          }
        }
      }
);
    }
  }
 catch (  SQLException e) {
    throw new VcsException(e);
  }
}
