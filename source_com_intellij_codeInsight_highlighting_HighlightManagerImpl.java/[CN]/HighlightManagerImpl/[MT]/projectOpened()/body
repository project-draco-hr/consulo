{
  myAnActionListener=new MyAnActionListener();
  ActionManagerEx.getInstanceEx().addAnActionListener(myAnActionListener);
  myDocumentListener=new DocumentAdapter(){
    public void documentChanged(    DocumentEvent event){
      ArrayList<RangeHighlighter> highlightersToRemove=new ArrayList<RangeHighlighter>();
      Document document=event.getDocument();
      Editor[] editors=EditorFactory.getInstance().getEditors(document);
      for (int i=0; i < editors.length; i++) {
        Editor editor=editors[i];
        Map<RangeHighlighter,HighlightInfo> map=getHighlightInfoMap(editor,false);
        if (map == null)         return;
        for (Iterator<RangeHighlighter> iterator=map.keySet().iterator(); iterator.hasNext(); ) {
          RangeHighlighter highlighter=iterator.next();
          HighlightInfo info=map.get(highlighter);
          if (!info.editor.getDocument().equals(document))           continue;
          if ((info.flags & HIDE_BY_TEXT_CHANGE) != 0) {
            highlightersToRemove.add(highlighter);
          }
        }
        for (int j=0; j < highlightersToRemove.size(); j++) {
          RangeHighlighter highlighter=highlightersToRemove.get(j);
          removeSegmentHighlighter(editor,highlighter);
        }
      }
    }
  }
;
  EditorFactory.getInstance().getEventMulticaster().addDocumentListener(myDocumentListener);
}
