{
  boolean oldIsErrorElement=oldNode instanceof PsiErrorElement;
  boolean newIsErrorElement=newNode.getTokenType() == TokenType.ERROR_ELEMENT;
  if (oldIsErrorElement != newIsErrorElement)   return ThreeState.NO;
  if (oldIsErrorElement && newIsErrorElement) {
    final PsiErrorElement e1=(PsiErrorElement)oldNode;
    return Comparing.equal(e1.getErrorDescription(),getErrorMessage(newNode)) ? ThreeState.UNSURE : ThreeState.NO;
  }
  if (newNode instanceof Token) {
    if (oldNode instanceof ForeignLeafPsiElement) {
      final IElementType type=newNode.getTokenType();
      return type instanceof ForeignLeafType && ((ForeignLeafType)type).getValue().equals(oldNode.getText()) ? ThreeState.YES : ThreeState.NO;
    }
    if (oldNode instanceof LeafElement) {
      return ((LeafElement)oldNode).textMatches(myText,((Token)newNode).myTokenStart,((Token)newNode).myTokenEnd) ? ThreeState.YES : ThreeState.NO;
    }
    if (oldNode.getElementType() instanceof ILazyParseableElementType && newNode.getTokenType() instanceof ILazyParseableElementType || oldNode.getElementType() instanceof CustomParsingType && newNode.getTokenType() instanceof CustomParsingType) {
      return ((TreeElement)oldNode).textMatches(myText,((Token)newNode).myTokenStart,((Token)newNode).myTokenEnd) ? ThreeState.YES : ThreeState.NO;
    }
  }
  return ThreeState.UNSURE;
}
