{
  markTokenTypeChecked();
  balanceWhiteSpaces();
  final StartMarker rootMarker=(StartMarker)myProduction.get(0);
  rootMarker.myParent=rootMarker.myFirstChild=rootMarker.myLastChild=rootMarker.myNext=null;
  StartMarker curNode=rootMarker;
  final Stack<StartMarker> nodes=new Stack<StartMarker>();
  nodes.push(rootMarker);
  int lastErrorIndex=-1;
  for (int i=1; i < myProduction.size(); i++) {
    final ProductionMarker item=myProduction.get(i);
    if (curNode == null)     LOG.error("Unexpected end of the production");
    item.myParent=curNode;
    if (item instanceof StartMarker) {
      StartMarker marker=(StartMarker)item;
      marker.myFirstChild=marker.myLastChild=marker.myNext=null;
      curNode.addChild(marker);
      nodes.push(curNode);
      curNode=marker;
    }
 else     if (item instanceof DoneMarker) {
      curNode=nodes.pop();
    }
 else     if (item instanceof ErrorItem) {
      int curToken=item.myLexemeIndex;
      if (curToken == lastErrorIndex)       continue;
      lastErrorIndex=curToken;
      curNode.addChild(item);
    }
  }
  if (myCurrentLexeme < myLexemeCount) {
    final List<IElementType> missed=CollectionFactory.arrayList(myLexTypes,myCurrentLexeme,myLexemeCount);
    LOG.error("Tokens " + missed + " were not inserted into the tree. Text:\n"+ myText);
  }
  if (myLexStarts.length <= myCurrentLexeme + 1) {
    resizeLexemes(myCurrentLexeme + 1);
  }
  myLexStarts[myCurrentLexeme]=myText.length();
  myLexStarts[myCurrentLexeme + 1]=0;
  myLexTypes[myCurrentLexeme]=null;
  LOG.assertTrue(curNode == rootMarker,UNBALANCED_MESSAGE);
  return rootMarker;
}
