{
  final HighlightInfoType tagProblemInfoType;
  IntentionAction[] quickFixes;
  if (tag instanceof HtmlTag) {
    if (isAdditionallyDeclared(mySettings.getInspectionProfile().getAdditionalHtmlAttributes(),localName))     return;
    if (!mySettings.getInspectionProfile().isToolEnabled(HighlightDisplayKey.UNKNOWN_HTML_ATTRIBUTES))     return;
    tagProblemInfoType=HighlightInfoType.UNKNOWN_HTML_ATTRIBUTE;
    quickFixes=new IntentionAction[]{new AddHtmlTagOrAttributeToCustoms(localName,tagProblemInfoType),new SwitchOffToolAction(HighlightDisplayKey.UNKNOWN_HTML_ATTRIBUTES)};
  }
 else {
    tagProblemInfoType=HighlightInfoType.WRONG_REF;
    quickFixes=null;
  }
  final HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(tagProblemInfoType,XmlChildRole.ATTRIBUTE_NAME_FINDER.findChild(SourceTreeToPsiMap.psiElementToTree(attribute)),localizedMessage);
  myResult.add(highlightInfo);
  if (quickFixes != null) {
    for (    IntentionAction quickFix : quickFixes) {
      QuickFixAction.registerQuickFixAction(highlightInfo,quickFix,null);
    }
  }
}
