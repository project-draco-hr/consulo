{
  XmlTag tag=attribute.getParent();
  if (attribute.isNamespaceDeclaration()) {
    checkNamespaceAttribute(attribute);
    return;
  }
 else   if (attribute.getName().endsWith("Location")) {
    String namespace=attribute.getNamespace();
    if (namespace.equals(XmlUtil.XML_SCHEMA_INSTANCE_URI)) {
      checkSchemaLocationAttribute(attribute);
      return;
    }
  }
  XmlElementDescriptor elementDescriptor=tag.getDescriptor();
  if (elementDescriptor == null || ourDoJaxpTesting)   return;
  XmlAttributeDescriptor attributeDescriptor=elementDescriptor.getAttributeDescriptor(attribute);
  String name=attribute.getName();
  if (attributeDescriptor == null) {
    final String localizedMessage="Attribute " + name + " is not allowed here";
    reportAttributeProblem(tag,name,attribute,localizedMessage);
  }
 else {
    checkDuplicateAttribute(tag,attribute);
    if (tag instanceof HtmlTag && attribute.getValueElement() == null && !HtmlUtil.isSingleHtmlAttribute(attribute.getName())) {
      final String localizedMessage="Empty attribute " + name + " is not allowed";
      reportAttributeProblem(tag,name,attribute,localizedMessage);
    }
  }
}
