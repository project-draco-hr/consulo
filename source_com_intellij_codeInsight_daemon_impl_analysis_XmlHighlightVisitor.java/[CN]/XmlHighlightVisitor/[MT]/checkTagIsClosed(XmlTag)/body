{
  PsiElement[] children=tag.getChildren();
  String name=tag.getName();
  boolean insideEndTag=false;
  XmlToken startTagNameToken=null;
  for (  PsiElement child : children) {
    if (child instanceof XmlToken) {
      final XmlToken xmlToken=(XmlToken)child;
      if (xmlToken.getTokenType() == XmlTokenType.XML_EMPTY_ELEMENT_END)       return true;
      if (xmlToken.getTokenType() == XmlTokenType.XML_END_TAG_START) {
        insideEndTag=true;
      }
      if (xmlToken.getTokenType() == XmlTokenType.XML_NAME) {
        if (insideEndTag) {
          String text=xmlToken.getText();
          if (tag instanceof HtmlTag) {
            text=text.toLowerCase();
            name=name.toLowerCase();
          }
          boolean isExtraHtmlTagEnd=false;
          if (text.equals(name)) {
            isExtraHtmlTagEnd=tag instanceof HtmlTag && HtmlUtil.isSingleHtmlTag(name);
            if (!isExtraHtmlTagEnd)             return true;
          }
          HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(isExtraHtmlTagEnd ? HighlightInfoType.WARNING : HighlightInfoType.ERROR,xmlToken,isExtraHtmlTagEnd ? "Extra closing tag for empty element" : "Wrong closing tag name");
          myResult.add(highlightInfo);
          if (isExtraHtmlTagEnd) {
            QuickFixAction.registerQuickFixAction(highlightInfo,new RemoveExtraClosingTagIntentionAction(xmlToken),null);
          }
 else {
            IntentionAction intentionAction=new RenameTagBeginOrEndIntentionAction(tag,name,false);
            IntentionAction intentionAction2=new RenameTagBeginOrEndIntentionAction(tag,text,true);
            QuickFixAction.registerQuickFixAction(highlightInfo,intentionAction,null);
            QuickFixAction.registerQuickFixAction(highlightInfo,startTagNameToken.getTextRange(),intentionAction2,null);
          }
          return false;
        }
 else {
          startTagNameToken=xmlToken;
        }
      }
    }
  }
  return tag instanceof HtmlTag && (HtmlUtil.isOptionalEndForHtmlTag(name) || HtmlUtil.isSingleHtmlTag(name));
}
