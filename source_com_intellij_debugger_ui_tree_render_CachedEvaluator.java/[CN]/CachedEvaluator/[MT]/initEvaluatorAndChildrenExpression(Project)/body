{
  final Cache cache=new Cache();
  try {
    final PsiClass contextClass=DebuggerUtils.findClass(getClassName(),project);
    if (contextClass == null)     throw EvaluateExceptionUtil.CANNOT_FIND_SOURCE_CLASS;
    cache.myPsiChildrenExpression=null;
    PsiCodeFragment codeFragment=myReferenceExpression.createCodeFragment(contextClass,project);
    DebuggerUtils.checkSyntax(codeFragment);
    cache.myPsiChildrenExpression=((PsiExpressionCodeFragment)codeFragment).getExpression();
    cache.myEvaluator=DebuggerUtils.getInstance().getEvaluatorBuilder().build(cache.myPsiChildrenExpression);
  }
 catch (  EvaluateException e) {
    cache.myException=e;
  }
  myCache=new SoftReference<Cache>(cache);
  return cache;
}
