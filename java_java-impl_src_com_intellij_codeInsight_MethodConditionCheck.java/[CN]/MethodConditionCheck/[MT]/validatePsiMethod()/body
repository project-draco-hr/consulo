{
  PsiElement psiElement=myPsiMethod.getContainingClass();
  if (psiElement == null)   throw new IllegalArgumentException("PsiMethod " + myPsiMethod + " can not have a null containing class.");
  PsiType returnType=myPsiMethod.getReturnType();
  if (!isAssert()) {
    if (returnType == null)     throw new IllegalArgumentException("PsiMethod " + myPsiMethod + " has a null return type PsiType.");
    if (returnType != PsiType.BOOLEAN && !returnType.getCanonicalText().equals(Boolean.class.toString())) {
      throw new IllegalArgumentException("PsiMethod " + myPsiMethod + " must have a null return type PsiType of boolean or Boolean.");
    }
  }
  boolean parameterFound=false;
  for (int i=0; i < myPsiMethod.getParameterList().getParameters().length; i++) {
    if (myPsiParameter.equals(myPsiMethod.getParameterList().getParameters()[i])) {
      parameterFound=true;
      break;
    }
  }
  if (!parameterFound) {
    throw new IllegalArgumentException("PsiMethod " + myPsiMethod + " must have parameter "+ getFullyQualifiedName(myPsiParameter));
  }
}
