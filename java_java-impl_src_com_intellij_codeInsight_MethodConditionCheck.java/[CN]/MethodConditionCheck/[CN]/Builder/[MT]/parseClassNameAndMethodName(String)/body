{
  if (!fullyQualifiedClassMethodAndParameterName.contains("(")) {
    throw new IllegalArgumentException("Name should contain a opening parenthesis.  " + fullyQualifiedClassMethodAndParameterName);
  }
 else   if (!fullyQualifiedClassMethodAndParameterName.contains(")")) {
    throw new IllegalArgumentException("Name should contain a closing parenthesis.  " + fullyQualifiedClassMethodAndParameterName);
  }
 else   if (fullyQualifiedClassMethodAndParameterName.indexOf("(",fullyQualifiedClassMethodAndParameterName.indexOf("(") + 1) > -1) {
    throw new IllegalArgumentException("Name should only contain one opening parenthesis.  " + fullyQualifiedClassMethodAndParameterName);
  }
 else   if (fullyQualifiedClassMethodAndParameterName.indexOf(")",fullyQualifiedClassMethodAndParameterName.indexOf(")") + 1) > -1) {
    throw new IllegalArgumentException("Name should only contain one closing parenthesis.  " + fullyQualifiedClassMethodAndParameterName);
  }
 else   if (fullyQualifiedClassMethodAndParameterName.indexOf(")") < fullyQualifiedClassMethodAndParameterName.indexOf("(")) {
    throw new IllegalArgumentException("Opening parenthesis should precede closing parenthesis.  " + fullyQualifiedClassMethodAndParameterName);
  }
  String classNameAndMethodName=fullyQualifiedClassMethodAndParameterName.substring(0,fullyQualifiedClassMethodAndParameterName.indexOf("("));
  if (!classNameAndMethodName.contains(".")) {
    throw new IllegalArgumentException("Name should contain a dot between the class name and method name (before the opening parenthesis).  " + fullyQualifiedClassMethodAndParameterName);
  }
  return classNameAndMethodName;
}
