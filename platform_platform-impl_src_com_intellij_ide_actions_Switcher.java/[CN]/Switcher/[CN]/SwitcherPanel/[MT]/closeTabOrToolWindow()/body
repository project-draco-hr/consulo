{
  final Object value=getSelectedList().getSelectedValue();
  if (value instanceof FileInfo) {
    final FileInfo info=(FileInfo)value;
    final VirtualFile virtualFile=info.first;
    final FileEditorManagerImpl editorManager=((FileEditorManagerImpl)FileEditorManager.getInstance(project));
    final JList jList=getSelectedList();
    if (info.second == null) {
      editorManager.closeFile(virtualFile,false);
    }
 else {
      editorManager.closeFile(virtualFile,info.second,false);
    }
    final int selectedIndex=jList.getSelectedIndex();
    if (jList.getModel().getSize() == 1) {
      goLeft();
      ((DefaultListModel)jList.getModel()).removeElementAt(selectedIndex);
      this.remove(jList);
      this.remove(separator);
      final Dimension size=toolWindows.getSize();
      myPopup.setSize(new Dimension(size.width,myPopup.getSize().height));
      final IdeFocusManager focusManager=IdeFocusManager.getInstance(project);
      focusManager.doWhenFocusSettlesDown(new Runnable(){
        @Override public void run(){
          focusManager.requestFocus(SwitcherPanel.this,true);
        }
      }
);
    }
 else {
      goForward();
      ((DefaultListModel)jList.getModel()).removeElementAt(selectedIndex);
      jList.setSize(jList.getPreferredSize());
    }
    pack();
  }
 else   if (value instanceof ToolWindow) {
    final ToolWindow toolWindow=(ToolWindow)value;
    if (twManager instanceof ToolWindowManagerImpl) {
      ToolWindowManagerImpl manager=(ToolWindowManagerImpl)twManager;
      manager.hideToolWindow(ids.get(toolWindow),false,false);
    }
 else {
      toolWindow.hide(null);
    }
  }
}
