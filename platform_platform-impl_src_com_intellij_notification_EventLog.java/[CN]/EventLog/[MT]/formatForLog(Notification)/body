{
  DocumentImpl document=new DocumentImpl(true);
  AtomicBoolean showMore=new AtomicBoolean(false);
  Map<RangeMarker,HyperlinkInfo> links=new LinkedHashMap<RangeMarker,HyperlinkInfo>();
  List<RangeMarker> lineSeparators=new ArrayList<RangeMarker>();
  boolean hasHtml=parseHtmlContent(notification,document,showMore,links,lineSeparators);
  removeJavaNewLines(document,lineSeparators,hasHtml);
  insertNewLineSubstitutors(document,showMore,lineSeparators);
  String title=notification.getTitle();
  if (StringUtil.isNotEmpty(title)) {
    document.insertString(0,document.getTextLength() > 0 ? title + ": " : title);
  }
  String status=document.getText();
  ArrayList<Pair<TextRange,HyperlinkInfo>> list=new ArrayList<Pair<TextRange,HyperlinkInfo>>();
  for (  RangeMarker marker : links.keySet()) {
    if (!marker.isValid()) {
      showMore.set(true);
      continue;
    }
    list.add(Pair.create(new TextRange(marker.getStartOffset(),marker.getEndOffset()),links.get(marker)));
  }
  if (showMore.get()) {
    String sb="show balloon";
    appendText(document," (" + sb + ")");
    list.add(new Pair<TextRange,HyperlinkInfo>(TextRange.from(document.getTextLength() - 1 - sb.length(),sb.length()),new ShowBalloon(notification)));
  }
  return new LogEntry(document.getText(),status,list);
}
