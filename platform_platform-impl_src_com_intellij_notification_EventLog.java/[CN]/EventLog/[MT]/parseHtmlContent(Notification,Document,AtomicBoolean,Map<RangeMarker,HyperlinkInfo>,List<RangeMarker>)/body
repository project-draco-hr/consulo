{
  String content=notification.getContent();
  String title=notification.getTitle();
  if (StringUtil.isNotEmpty(title)) {
    content=title + (StringUtil.isNotEmpty(content) ? ": " + content : "");
  }
  content=StringUtil.replace(StringUtil.convertLineSeparators(content),"&nbsp;"," ");
  boolean hasHtml=false;
  while (true) {
    Matcher tagMatcher=TAG_PATTERN.matcher(content);
    if (!tagMatcher.find()) {
      appendText(document,content);
      break;
    }
    String tagStart=tagMatcher.group();
    appendText(document,content.substring(0,tagMatcher.start()));
    Matcher aMatcher=A_PATTERN.matcher(tagStart);
    if (aMatcher.matches()) {
      final String href=aMatcher.group(2);
      int linkEnd=content.indexOf(A_CLOSING,tagMatcher.end());
      if (linkEnd > 0) {
        String linkText=content.substring(tagMatcher.end(),linkEnd).replaceAll(TAG_PATTERN.pattern(),"");
        appendText(document,linkText);
        links.put(document.createRangeMarker(new TextRange(document.getTextLength() - linkText.length(),document.getTextLength())),new NotificationHyperlinkInfo(notification,href));
        content=content.substring(linkEnd + A_CLOSING.length());
      }
    }
 else {
      hasHtml=true;
      if ("<br>".equals(tagStart) || "</br>".equals(tagStart) || "</p>".equals(tagStart)|| "<p>".equals(tagStart)|| "<p/>".equals(tagStart)) {
        lineSeparators.add(document.createRangeMarker(TextRange.from(document.getTextLength(),0)));
      }
 else       if (!"<html>".equals(tagStart) && !"</html>".equals(tagStart) && !"<body>".equals(tagStart)&& !"</body>".equals(tagStart)) {
        showMore.set(true);
      }
      content=content.substring(tagMatcher.end());
    }
  }
  return hasHtml;
}
