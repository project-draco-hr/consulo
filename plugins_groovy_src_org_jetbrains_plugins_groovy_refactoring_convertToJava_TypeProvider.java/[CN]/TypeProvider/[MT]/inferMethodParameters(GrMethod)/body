{
  PsiType[] psiTypes=inferredTypes.get(method);
  if (psiTypes != null)   return psiTypes;
  final GrParameter[] parameters=method.getParameters();
  final TIntArrayList paramInds=new TIntArrayList(parameters.length);
  final PsiType[] types=new PsiType[parameters.length];
  for (int i=0; i < parameters.length; i++) {
    if (parameters[i].getTypeElementGroovy() == null) {
      paramInds.add(i);
    }
 else {
      types[i]=parameters[i].getType();
    }
  }
  if (paramInds.size() > 0) {
    final GrClosureSignature signature=GrClosureSignatureUtil.createSignature(method,PsiSubstitutor.EMPTY);
    MethodReferencesSearch.search(method,true).forEach(new Processor<PsiReference>(){
      @Override public boolean process(      PsiReference psiReference){
        final PsiElement element=psiReference.getElement();
        final PsiManager manager=element.getManager();
        final GlobalSearchScope resolveScope=element.getResolveScope();
        if (element instanceof GrReferenceExpression) {
          final GrCall call=(GrCall)element.getParent();
          final GrClosureSignatureUtil.ArgInfo<PsiElement>[] argInfos=GrClosureSignatureUtil.mapParametersToArguments(signature,call.getArgumentList(),((GrReferenceExpression)element),call.getClosureArguments());
          if (argInfos == null)           return true;
          paramInds.forEach(new TIntProcedure(){
            @Override public boolean execute(            int i){
              PsiType type=GrClosureSignatureUtil.getTypeByArg(argInfos[i],manager,resolveScope);
              types[i]=TypesUtil.getLeastUpperBoundNullable(type,types[i],manager);
              return true;
            }
          }
);
        }
        return true;
      }
    }
);
  }
  paramInds.forEach(new TIntProcedure(){
    @Override public boolean execute(    int i){
      if (types[i] == null)       types[i]=parameters[i].getType();
      return true;
    }
  }
);
  inferredTypes.put(method,types);
  return types;
}
