{
  final ScanningContext scanningContext=new ScanningContext(repository);
  for (  IAbstractFolder rootFolder : rootFolders) {
    for (    IAbstractResource file : rootFolder.listMembers()) {
      if (!(file instanceof IAbstractFolder)) {
        continue;
      }
      final IAbstractFolder folder=(IAbstractFolder)file;
      final ResourceFolder resFolder=repository.processFolder(folder);
      if (resFolder != null) {
        for (        final IAbstractResource childRes : folder.listMembers()) {
          if (childRes instanceof IAbstractFile) {
            final VirtualFile vFile;
            if (childRes instanceof BufferingFileWrapper) {
              final BufferingFileWrapper fileWrapper=(BufferingFileWrapper)childRes;
              final String filePath=FileUtil.toSystemIndependentName(fileWrapper.getOsLocation());
              vFile=LocalFileSystem.getInstance().findFileByPath(filePath);
              if (vFile != null && Comparing.equal(vFile,layoutXmlFile) && layoutXmlFileText != null) {
                resFolder.processFile(new MyFileWrapper(layoutXmlFileText,childRes),ResourceDeltaKind.ADDED,scanningContext);
              }
 else {
                resFolder.processFile((IAbstractFile)childRes,ResourceDeltaKind.ADDED,scanningContext);
              }
            }
 else {
              LOG.error("childRes must be instance of " + BufferingFileWrapper.class.getName());
            }
          }
        }
      }
    }
  }
  final List<String> errors=scanningContext.getErrors();
  if (errors != null && errors.size() > 0) {
    LOG.debug(new RenderingException(merge(errors)));
  }
}
