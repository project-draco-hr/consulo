{
  final Sdk sdk=ModuleRootManager.getInstance(facet.getModule()).getSdk();
  if (sdk == null || !(sdk.getSdkType() instanceof AndroidSdkType)) {
    throw new AndroidSdkNotConfiguredException();
  }
  final AndroidSdkAdditionalData data=(AndroidSdkAdditionalData)sdk.getSdkAdditionalData();
  if (data == null) {
    throw new RenderingException(AndroidBundle.message("sdk.broken.error"));
  }
  final AndroidPlatform platform=data.getAndroidPlatform();
  if (platform == null) {
    throw new RenderingException(AndroidBundle.message("sdk.broken.error"));
  }
  config.setVersionQualifier(new VersionQualifier(target.getVersion().getApiLevel()));
  final RenderServiceFactory factory=platform.getSdk().getTargetData(target).getRenderServiceFactory(project);
  if (factory == null) {
    throw new RenderingException(AndroidBundle.message("android.layout.preview.cannot.load.library.error"));
  }
  final ResourceRepository repository=new ResourceRepository(false){
    @Override protected ResourceItem createResourceItem(    String name){
      return new ResourceItem(name);
    }
  }
;
  final VirtualFile[] resourceDirs=facet.getLocalResourceManager().getAllResourceDirs();
  final IAbstractFolder[] resFolders=toAbstractFolders(resourceDirs);
  loadResources(repository,resFolders);
  final ResourceResolver resources=factory.createResourceResolver(config,repository,theme.getName(),theme.isProjectTheme());
  final int minSdkVersion=getMinSdkVersion(facet);
  final RenderService renderService=factory.createService(resources,config,xdpi,ydpi,new ProjectCallback(),minSdkVersion);
  final RenderSession session;
  try {
    session=renderService.createRenderSession(layoutXmlText,getAppLabelToShow(facet));
  }
 catch (  XmlPullParserException e) {
    throw new RenderingException(e);
  }
  if (session == null) {
    return false;
  }
  final Result result=session.getResult();
  if (!result.isSuccess()) {
    final Throwable exception=result.getException();
    if (exception != null) {
      throw new RenderingException(exception);
    }
    final String message=result.getErrorMessage();
    if (message != null) {
      LOG.info(message);
      throw new RenderingException();
    }
    return false;
  }
  final String format=FileUtil.getExtension(imgPath);
  ImageIO.write(session.getImage(),format,new File(imgPath));
  return true;
}
