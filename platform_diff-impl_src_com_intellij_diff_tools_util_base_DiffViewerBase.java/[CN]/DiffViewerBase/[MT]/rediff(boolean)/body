{
  if (isDisposed())   return;
  abortRediff();
  fireEvent(EventType.BEFORE_REDIFF);
  onBeforeRediff();
  boolean forceEDT=ApplicationManager.getApplication().isWriteAccessAllowed();
  int waitMillis=trySync || tryRediffSynchronously() ? ProgressWindow.DEFAULT_PROGRESS_DIALOG_POSTPONE_TIME_MILLIS : 0;
  myTaskExecutor.executeAndTryWait(new Function<ProgressIndicator,Runnable>(){
    @Override public Runnable fun(    final ProgressIndicator indicator){
      final Runnable callback=performRediff(indicator);
      return new Runnable(){
        @Override public void run(){
          callback.run();
          onAfterRediff();
          fireEvent(EventType.AFTER_REDIFF);
        }
      }
;
    }
  }
,new Runnable(){
    @Override public void run(){
      onSlowRediff();
    }
  }
,waitMillis,forceEDT);
}
