{
  final UsageViewImpl impl=(UsageViewImpl)view;
  if (view.getPresentation().isCodeUsages()) {
    final JComponent component=view.getComponent();
    final ShowImportsAction showImportsAction=new ShowImportsAction(impl);
    showImportsAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_I,KeyEvent.CTRL_DOWN_MASK)),component);
    final ReadWriteState readWriteSharedState=new ReadWriteState();
    final ShowReadAccessUsagesAction showReadAccessUsagesAction=new ShowReadAccessUsagesAction(impl,readWriteSharedState);
    showReadAccessUsagesAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_R,KeyEvent.CTRL_DOWN_MASK)),component);
    final ShowWriteAccessUsagesAction showWriteAccessUsagesAction=new ShowWriteAccessUsagesAction(impl,readWriteSharedState);
    showWriteAccessUsagesAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_W,KeyEvent.CTRL_DOWN_MASK)),component);
    impl.scheduleDisposeOnClose(new Disposable(){
      public void dispose(){
        showImportsAction.unregisterCustomShortcutSet(component);
        showReadAccessUsagesAction.unregisterCustomShortcutSet(component);
        showWriteAccessUsagesAction.unregisterCustomShortcutSet(component);
      }
    }
);
    return new AnAction[]{showImportsAction,showReadAccessUsagesAction,showWriteAccessUsagesAction};
  }
 else {
    return AnAction.EMPTY_ARRAY;
  }
}
