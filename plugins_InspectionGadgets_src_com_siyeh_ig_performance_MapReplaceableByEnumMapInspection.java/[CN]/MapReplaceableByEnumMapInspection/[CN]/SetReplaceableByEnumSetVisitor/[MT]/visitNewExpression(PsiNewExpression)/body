{
  super.visitNewExpression(expression);
  final PsiType type=expression.getType();
  if (!(type instanceof PsiClassType)) {
    return;
  }
  final PsiClassType classType=(PsiClassType)type;
  if (!classType.hasParameters()) {
    return;
  }
  final PsiType[] typeArguments=classType.getParameters();
  if (typeArguments.length != 2) {
    return;
  }
  final PsiType argumentType=typeArguments[0];
  if (!(argumentType instanceof PsiClassType)) {
    return;
  }
  if (!TypeUtils.expressionHasTypeOrSubtype("java.util.Map",expression)) {
    return;
  }
  if (TypeUtils.expressionHasTypeOrSubtype("java.util.EnumMap",expression)) {
    return;
  }
  final PsiClassType argumentClassType=(PsiClassType)argumentType;
  final PsiClass argumentClass=argumentClassType.resolve();
  if (argumentClass == null) {
    return;
  }
  if (!argumentClass.isEnum()) {
    return;
  }
  final PsiJavaCodeReferenceElement classReference=expression.getClassReference();
  if (classReference == null) {
    return;
  }
  registerError(classReference);
}
