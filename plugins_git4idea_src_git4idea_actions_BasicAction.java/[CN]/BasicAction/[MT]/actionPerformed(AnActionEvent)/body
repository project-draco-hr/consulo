{
  final Project project=event.getData(PlatformDataKeys.PROJECT);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      FileDocumentManager.getInstance().saveAllDocuments();
    }
  }
);
  final VirtualFile[] vFiles=event.getData(PlatformDataKeys.VIRTUAL_FILE_ARRAY);
  final GitVcs vcs=GitVcs.getInstance(project);
  if (!ProjectLevelVcsManager.getInstance(project).checkAllFilesAreUnder(vcs,vFiles)) {
    return;
  }
  String actionName=getActionName(vcs);
  AbstractVcsHelper helper=AbstractVcsHelper.getInstance(project);
  List<VcsException> exceptions=helper.runTransactionRunnable(vcs,new TransactionRunnable(){
    public void run(    List<VcsException> exceptions){
      final VirtualFile[] affectedFiles=collectAffectedFiles(project,vFiles);
      try {
        perform(project,vcs,exceptions,affectedFiles);
      }
 catch (      VcsException e) {
        exceptions.add(e);
      }
      GitUtil.refreshFiles(project,Arrays.asList(affectedFiles));
    }
  }
,null);
  vcs.showErrors(exceptions,actionName);
}
