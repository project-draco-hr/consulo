{
  final String PATH="dir with spaces/file with spaces.txt";
  GitTestUtil.createFileStructure(myProject,myRepo,PATH);
  myRepo.commit();
  myRepo.push("origin","master");
  editFileInCommand(myRepo.getDir().findFileByRelativePath(PATH),"my content");
  myRepo.addCommit();
  myBrotherRepo.pull();
  editFileInCommand(myBrotherRepo.getDir().findFileByRelativePath(PATH),"brother content");
  myBrotherRepo.addCommit();
  myBrotherRepo.push();
  myRepo.pull();
  editFileInCommand(myRepo.getDir().findFileByRelativePath(PATH),"my and brother content");
  myRepo.add();
  final ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
  changeListManager.ensureUpToDate(false);
  final LocalChangeList changeList=changeListManager.getDefaultChangeList();
  changeList.setName("Name");
  changeList.setComment("Commit message");
  final AtomicBoolean res=new AtomicBoolean();
  ApplicationManager.getApplication().invokeAndWait(new Runnable(){
    @Override public void run(){
      res.set(changeListManager.commitChangesSynchronouslyWithResult(changeList,new ArrayList<Change>(changeListManager.getChangesIn(myRepo.getDir()))));
    }
  }
,ModalityState.defaultModalityState());
  assertTrue(res.get());
  changeListManager.ensureUpToDate(false);
  assertTrue(changeListManager.getChangesIn(myRepo.getDir()).isEmpty());
}
