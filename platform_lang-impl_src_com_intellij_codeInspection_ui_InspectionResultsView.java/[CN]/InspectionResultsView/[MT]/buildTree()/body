{
  InspectionProfile profile=myInspectionProfile;
  boolean isGroupedBySeverity=myGlobalInspectionContext.getUIOptions().GROUP_BY_SEVERITY;
  myGroups=new HashMap<HighlightDisplayLevel,Map<String,InspectionGroupNode>>();
  final Map<String,Tools> tools=myGlobalInspectionContext.getTools();
  boolean resultsFound=false;
  for (  Tools currentTools : tools.values()) {
    InspectionToolWrapper defaultToolWrapper=currentTools.getDefaultState().getTool();
    final HighlightDisplayKey key=HighlightDisplayKey.find(defaultToolWrapper.getShortName());
    for (    ScopeToolState state : currentTools.getTools()) {
      InspectionToolWrapper toolWrapper=state.getTool();
      if (myProvider.checkReportedProblems(myGlobalInspectionContext,toolWrapper)) {
        addTool(toolWrapper,((InspectionProfileImpl)profile).getErrorLevel(key,state.getScope(myProject),myProject),isGroupedBySeverity);
        resultsFound=true;
      }
    }
  }
  return resultsFound;
}
