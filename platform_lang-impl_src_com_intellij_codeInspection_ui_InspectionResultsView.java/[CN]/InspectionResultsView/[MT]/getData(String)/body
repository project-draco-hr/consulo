{
  if (PlatformDataKeys.HELP_ID.is(dataId))   return HELP_ID;
  if (DATA_KEY.is(dataId))   return this;
  if (myTree == null)   return null;
  TreePath[] paths=myTree.getSelectionPaths();
  if (paths == null || paths.length == 0)   return null;
  if (paths.length > 1) {
    if (LangDataKeys.PSI_ELEMENT_ARRAY.is(dataId)) {
      return collectPsiElements();
    }
    return null;
  }
  TreePath path=paths[0];
  InspectionTreeNode selectedNode=(InspectionTreeNode)path.getLastPathComponent();
  if (selectedNode instanceof RefElementNode) {
    final RefElementNode refElementNode=(RefElementNode)selectedNode;
    RefEntity refElement=refElementNode.getElement();
    if (refElement == null)     return null;
    final RefEntity item=refElement.getRefManager().getRefinedElement(refElement);
    if (!item.isValid())     return null;
    PsiElement psiElement=item instanceof RefElement ? ((RefElement)item).getElement() : null;
    if (psiElement == null)     return null;
    final CommonProblemDescriptor problem=refElementNode.getProblem();
    if (problem != null) {
      if (problem instanceof ProblemDescriptor) {
        psiElement=((ProblemDescriptor)problem).getPsiElement();
        if (psiElement == null)         return null;
      }
 else {
        return null;
      }
    }
    if (CommonDataKeys.NAVIGATABLE.is(dataId)) {
      return getSelectedNavigatable(problem,psiElement);
    }
 else     if (CommonDataKeys.PSI_ELEMENT.is(dataId)) {
      return psiElement.isValid() ? psiElement : null;
    }
  }
 else   if (selectedNode instanceof ProblemDescriptionNode && CommonDataKeys.NAVIGATABLE.is(dataId)) {
    return getSelectedNavigatable(((ProblemDescriptionNode)selectedNode).getDescriptor());
  }
  return null;
}
