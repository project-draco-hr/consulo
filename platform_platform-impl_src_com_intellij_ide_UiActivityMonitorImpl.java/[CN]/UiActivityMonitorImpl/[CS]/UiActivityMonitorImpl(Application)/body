{
  myObjects.put(null,new BusyContainer(){
    @Override protected BusyImpl createBusyImpl(    HashSet<UiActivity> key){
      return new BusyImpl(key,this){
        @Override public boolean isReady(){
          for (          Map.Entry<Object,BusyContainer> entry : myObjects.entrySet()) {
            final BusyContainer eachContainer=entry.getValue();
            final BusyImpl busy=eachContainer.getOrCreateBusy(myToWatchArray);
            if (busy == this)             continue;
            if (!busy.isOwnReady())             return false;
          }
          return isOwnReady();
        }
      }
;
    }
  }
);
  application.getMessageBus().connect().subscribe(ProjectLifecycleListener.TOPIC,new ProjectLifecycleListener(){
    @Override public void projectComponentsInitialized(    Project project){
    }
    @Override public void beforeProjectLoaded(    @NotNull Project project){
    }
    @Override public void afterProjectClosed(    @NotNull Project project){
      myObjects.remove(project);
    }
  }
);
}
