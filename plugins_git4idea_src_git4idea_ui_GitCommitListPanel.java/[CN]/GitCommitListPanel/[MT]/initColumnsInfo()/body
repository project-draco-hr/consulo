{
  List<ColumnInfo<GitCommit,Object>> infos=new ArrayList<ColumnInfo<GitCommit,Object>>();
  infos.add(new ColumnInfo<GitCommit,Object>("Hash"){
    @Override public Object valueOf(    GitCommit commit){
      return commit.getShortHash();
    }
  }
);
  infos.add(new ColumnInfo<GitCommit,Object>("Subject"){
    @Override public Object valueOf(    GitCommit commit){
      return commit.getSubject();
    }
  }
);
  infos.add(new ColumnInfo<GitCommit,Object>("Author"){
    @Override public Object valueOf(    GitCommit commit){
      return commit.getAuthor();
    }
  }
);
  infos.add(new ColumnInfo<GitCommit,Object>("Author time"){
    @Override public Object valueOf(    GitCommit commit){
      return DateFormatUtil.formatPrettyDateTime(commit.getAuthorTime());
    }
  }
);
  return infos;
}
