{
  if (offset < 0) {
    throw new StringIndexOutOfBoundsException(offset);
  }
  if (count < 0) {
    throw new StringIndexOutOfBoundsException(count);
  }
  if (offset > codePoints.length - count) {
    throw new StringIndexOutOfBoundsException(offset + count);
  }
  int expansion=0;
  int margin=1;
  char[] v=new char[count + margin];
  int x=offset;
  int j=0;
  for (int i=0; i < count; i++) {
    int c=codePoints[x++];
    if (c < 0) {
      throw new IllegalArgumentException();
    }
    if (margin <= 0 && (j + 1) >= v.length) {
      if (expansion == 0) {
        expansion=(((-margin + 1) * count) << 10) / i;
        expansion>>=10;
        if (expansion <= 0) {
          expansion=1;
        }
      }
 else {
        expansion*=2;
      }
      char[] tmp=new char[Math.min(v.length + expansion,count * 2)];
      margin=(tmp.length - v.length) - (count - i);
      System.arraycopy(v,0,tmp,0,j);
      v=tmp;
    }
    if (c < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
      v[j++]=(char)c;
    }
 else     if (c <= Character.MAX_CODE_POINT) {
      Character.toSurrogates(c,v,j);
      j+=2;
      margin--;
    }
 else {
      throw new IllegalArgumentException();
    }
  }
  this.offset=0;
  this.value=v;
  this.count=j;
}
