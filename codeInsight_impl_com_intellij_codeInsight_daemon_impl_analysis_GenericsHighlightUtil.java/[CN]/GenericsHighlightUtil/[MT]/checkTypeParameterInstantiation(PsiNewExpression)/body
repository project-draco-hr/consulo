{
  PsiJavaCodeReferenceElement classReference=expression.getClassReference();
  if (classReference == null) {
    final PsiAnonymousClass anonymousClass=expression.getAnonymousClass();
    if (anonymousClass != null)     classReference=anonymousClass.getBaseClassReference();
  }
  if (classReference == null)   return null;
  final JavaResolveResult result=classReference.advancedResolve(false);
  if (result.getElement() instanceof PsiTypeParameter) {
    final PsiTypeParameter typeParameter=(PsiTypeParameter)result.getElement();
    String description=JavaErrorMessages.message("generics.type.parameter.cannot.be.instantiated",HighlightUtil.formatClass(typeParameter));
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,classReference,description);
  }
  return null;
}
