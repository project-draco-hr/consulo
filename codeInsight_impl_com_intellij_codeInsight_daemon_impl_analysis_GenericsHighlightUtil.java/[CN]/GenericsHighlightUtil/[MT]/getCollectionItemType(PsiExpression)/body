{
  final PsiType type=expression.getType();
  if (type == null)   return null;
  if (type instanceof PsiArrayType) {
    return ((PsiArrayType)type).getComponentType();
  }
  if (type instanceof PsiClassType) {
    final PsiClassType.ClassResolveResult resolveResult=((PsiClassType)type).resolveGenerics();
    PsiClass aClass=resolveResult.getElement();
    if (aClass == null)     return null;
    final PsiManager manager=aClass.getManager();
    final String qName=aClass.getQualifiedName();
    if (qName != null) {
      final PsiClass myClass=manager.findClass(qName,expression.getResolveScope());
      if (myClass != null)       aClass=myClass;
    }
    final PsiClass iterable=manager.findClass("java.lang.Iterable",aClass.getResolveScope());
    if (iterable == null)     return null;
    final PsiSubstitutor substitutor=TypeConversionUtil.getClassSubstitutor(iterable,aClass,PsiSubstitutor.EMPTY);
    if (substitutor == null)     return null;
    PsiTypeParameter[] typeParameters=iterable.getTypeParameters();
    if (typeParameters.length != 1)     return null;
    final PsiTypeParameter itemTypeParameter=typeParameters[0];
    PsiType itemType=substitutor.substitute(itemTypeParameter);
    itemType=resolveResult.getSubstitutor().substitute(itemType);
    return itemType == null ? PsiType.getJavaLangObject(manager,aClass.getResolveScope()) : itemType;
  }
  return null;
}
