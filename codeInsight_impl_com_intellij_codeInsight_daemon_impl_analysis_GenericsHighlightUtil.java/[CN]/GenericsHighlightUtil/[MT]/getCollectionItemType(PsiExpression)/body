{
  final PsiType type=expression.getType();
  if (type == null)   return null;
  if (type instanceof PsiArrayType) {
    return ((PsiArrayType)type).getComponentType();
  }
  if (type instanceof PsiClassType) {
    final PsiClassType.ClassResolveResult resolveResult=((PsiClassType)type).resolveGenerics();
    PsiClass aClass=resolveResult.getElement();
    if (aClass == null)     return null;
    final PsiManager manager=aClass.getManager();
    final String qName=aClass.getQualifiedName();
    PsiSubstitutor substitutor=resolveResult.getSubstitutor();
    JavaPsiFacade facade=JavaPsiFacade.getInstance(manager.getProject());
    if (qName != null) {
      PsiClass myClass=facade.findClass(qName,expression.getResolveScope());
      if (myClass != null && myClass != aClass) {
        PsiTypeParameter thisTypeParameter=getIterableTypeParameter(facade,myClass);
        if (thisTypeParameter == null)         return null;
        PsiTypeParameter thatTypeParameter=getIterableTypeParameter(facade,aClass);
        if (thatTypeParameter != null) {
          substitutor=substitutor.put(thisTypeParameter,substitutor.substitute(thatTypeParameter));
        }
        aClass=myClass;
      }
    }
    PsiTypeParameter typeParameter=getIterableTypeParameter(facade,aClass);
    if (typeParameter == null)     return null;
    PsiClass owner=(PsiClass)typeParameter.getOwner();
    if (owner == null)     return null;
    PsiSubstitutor superClassSubstitutor=TypeConversionUtil.getClassSubstitutor(owner,aClass,PsiSubstitutor.EMPTY);
    if (superClassSubstitutor == null)     return null;
    PsiType itemType=superClassSubstitutor.substitute(typeParameter);
    itemType=substitutor.substitute(itemType);
    return itemType == null ? PsiType.getJavaLangObject(manager,aClass.getResolveScope()) : itemType;
  }
  return null;
}
