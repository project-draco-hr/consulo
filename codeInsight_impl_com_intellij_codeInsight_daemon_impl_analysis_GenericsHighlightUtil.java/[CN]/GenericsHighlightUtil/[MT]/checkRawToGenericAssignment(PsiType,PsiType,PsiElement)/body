{
  if (elementToHighlight.getManager().getEffectiveLanguageLevel().compareTo(LanguageLevel.JDK_1_5) < 0)   return null;
  if (!InspectionProjectProfileManager.getInstance(elementToHighlight.getProject()).getInspectionProfile(elementToHighlight).isToolEnabled(HighlightDisplayKey.UNCHECKED_WARNING))   return null;
  if (!isGenericToRaw(lType,rType))   return null;
  String description=JavaErrorMessages.message("generics.unchecked.assignment",HighlightUtil.formatType(rType),HighlightUtil.formatType(lType));
  if (InspectionManagerEx.inspectionResultSuppressed(elementToHighlight,HighlightDisplayKey.UNCHECKED_WARNING.getID()))   return null;
  HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.UNCHECKED_WARNING,elementToHighlight,description);
  List<IntentionAction> options=IntentionManager.getInstance(elementToHighlight.getProject()).getStandardIntentionOptions(HighlightDisplayKey.UNCHECKED_WARNING,elementToHighlight);
  String displayName=HighlightDisplayKey.getDisplayNameByKey(HighlightDisplayKey.UNCHECKED_WARNING);
  QuickFixAction.registerQuickFixAction(highlightInfo,new GenerifyFileFix(elementToHighlight.getContainingFile()),options,displayName);
  return highlightInfo;
}
