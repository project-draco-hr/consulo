{
  getIndentOptions().USE_RELATIVE_INDENTS=true;
  getIndentOptions().CONTINUATION_INDENT_SIZE=4;
  doTextTest("public class FormattingTest {\n" + "\n" + "    public boolean test1(int a, int b, int c, int d) {\n"+ "        return a == 1 &&\n"+ "      b == 2;\n"+ "    }\n"+ "\n"+ "    public boolean multilineSignOnCurrent(int a, int b, int c, int d) {\n"+ "        return a == 0 &&\n"+ "                                  (b == 0 ||\n"+ "     c == 0) &&\n"+ "  d == 0;\n"+ "    }\n"+ "\n"+ "    public boolean multilineSignOnNext(int a, int b, int c, int d) {\n"+ "        return a == 0\n"+ "       && (b == 0\n"+ "                                     || c == 0)\n"+ "   && d == 0;\n"+ "    }\n"+ "\n"+ "    public boolean expectedMultilineSignOnNext(int a, int b, int c, int d) {\n"+ "        return a == 0\n"+ "    && (b == 0\n"+ "     || c == 0)\n"+ "                       && d == 0;\n"+ "    }\n"+ "}","public class FormattingTest {\n" + "\n" + "    public boolean test1(int a, int b, int c, int d) {\n"+ "        return a == 1 &&\n"+ "                   b == 2;\n"+ "    }\n"+ "\n"+ "    public boolean multilineSignOnCurrent(int a, int b, int c, int d) {\n"+ "        return a == 0 &&\n"+ "                   (b == 0 ||\n"+ "                        c == 0) &&\n"+ "                   d == 0;\n"+ "    }\n"+ "\n"+ "    public boolean multilineSignOnNext(int a, int b, int c, int d) {\n"+ "        return a == 0\n"+ "                   && (b == 0\n"+ "                           || c == 0)\n"+ "                   && d == 0;\n"+ "    }\n"+ "\n"+ "    public boolean expectedMultilineSignOnNext(int a, int b, int c, int d) {\n"+ "        return a == 0\n"+ "                   && (b == 0\n"+ "                           || c == 0)\n"+ "                   && d == 0;\n"+ "    }\n"+ "}");
}
