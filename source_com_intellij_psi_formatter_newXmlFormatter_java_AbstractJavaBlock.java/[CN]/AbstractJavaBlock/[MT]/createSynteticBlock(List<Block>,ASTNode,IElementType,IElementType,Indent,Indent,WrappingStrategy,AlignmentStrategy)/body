{
  myUseChildAttributes=true;
  setChildIndent(internalIndent);
  setChildAlignment(alignmentStrategy.getAlignment(null));
  ASTNode prev=child;
  List<Block> resultList=new ArrayList<Block>();
  List<Block> codeBlock=new ArrayList<Block>();
  while (child != null) {
    if (!containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {
      if (child.getElementType() == from) {
        resultList.add(createJavaBlock(child,mySettings));
      }
 else       if (child.getElementType() == ElementType.SWITCH_LABEL_STATEMENT) {
        child=createCaseBlockFrom(codeBlock,child);
      }
 else       if (child.getElementType() == to) {
        if (!codeBlock.isEmpty()) {
          resultList.add(new SynteticCodeBlock(codeBlock,null,mySettings,internalIndent,null));
        }
        resultList.add(createJavaBlock(child,mySettings,null,null,FormatterUtil.isAfterIncompleted(child) ? alignmentStrategy.getAlignment(null) : null));
        final SynteticCodeBlock externalBlock=new SynteticCodeBlock(resultList,null,mySettings,externalIndent,null);
        result.add(externalBlock);
        externalBlock.setChildIndent(internalIndent);
        externalBlock.setChildAlignment(alignmentStrategy.getAlignment(null));
        return child;
      }
 else {
        final IElementType elementType=child.getElementType();
        codeBlock.add(createJavaBlock(child,mySettings,null,wrappingStrategy.getWrap(elementType),alignmentStrategy.getAlignment(elementType)));
        if (to == null) {
          resultList.add(new SynteticCodeBlock(codeBlock,null,mySettings,internalIndent,null));
          result.add(new SynteticCodeBlock(resultList,null,mySettings,externalIndent,null));
          return child;
        }
      }
    }
    prev=child;
    if (child != null) {
      child=child.getTreeNext();
    }
  }
  if (!codeBlock.isEmpty()) {
    resultList.add(new SynteticCodeBlock(codeBlock,null,mySettings,internalIndent,null));
  }
  if (!resultList.isEmpty()) {
    result.add(new SynteticCodeBlock(resultList,null,mySettings,externalIndent,null));
  }
  return prev;
}
