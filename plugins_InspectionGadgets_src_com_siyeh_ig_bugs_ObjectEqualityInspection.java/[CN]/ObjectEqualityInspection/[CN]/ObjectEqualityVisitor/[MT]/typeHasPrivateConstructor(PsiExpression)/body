{
  if (expression == null) {
    return false;
  }
  final PsiType type=expression.getType();
  if (!(type instanceof PsiClassType)) {
    return false;
  }
  final PsiClassType classType=(PsiClassType)type;
  final PsiClass aClass=classType.resolve();
  if (aClass != null && aClass.isInterface()) {
    return implementorsHaveOnlyPrivateConstructors(aClass);
  }
 else {
    return hasOnlyPrivateConstructors(aClass);
  }
}
