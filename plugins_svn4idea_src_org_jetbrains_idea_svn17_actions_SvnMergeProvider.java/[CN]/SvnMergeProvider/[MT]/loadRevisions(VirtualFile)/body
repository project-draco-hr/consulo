{
  final MergeData data=new MergeData();
  VcsRunnable runnable=new VcsRunnable(){
    public void run() throws VcsException {
      SvnVcs17 vcs=SvnVcs17.getInstance(myProject);
      File oldFile=null;
      File newFile=null;
      File workingFile=null;
      SVNWCClient client;
      try {
        client=vcs.createWCClient();
        SVNInfo info=client.doInfo(new File(file.getPath()),SVNRevision.UNDEFINED);
        if (info != null) {
          oldFile=info.getConflictOldFile();
          newFile=info.getConflictNewFile();
          workingFile=info.getConflictWrkFile();
          data.LAST_REVISION_NUMBER=new SvnRevisionNumber(info.getRevision());
        }
      }
 catch (      SVNException e) {
        throw new VcsException(e);
      }
      if (oldFile == null || newFile == null || workingFile == null) {
        ByteArrayOutputStream bos=new ByteArrayOutputStream();
        try {
          client.doGetFileContents(new File(file.getPath()),SVNRevision.UNDEFINED,SVNRevision.BASE,true,bos);
        }
 catch (        SVNException e) {
        }
        data.ORIGINAL=bos.toByteArray();
        data.LAST=bos.toByteArray();
        data.CURRENT=readFile(new File(file.getPath()));
      }
 else {
        data.ORIGINAL=readFile(oldFile);
        data.LAST=readFile(newFile);
        data.CURRENT=readFile(workingFile);
      }
    }
  }
;
  VcsUtil.runVcsProcessWithProgress(runnable,VcsBundle.message("multiple.file.merge.loading.progress.title"),false,myProject);
  return data;
}
