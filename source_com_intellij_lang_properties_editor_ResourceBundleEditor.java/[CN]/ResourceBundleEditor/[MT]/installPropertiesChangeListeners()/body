{
  myPropertiesFileListener=new PropertiesFilesManager.PropertiesFileListener(){
    public void fileAdded(    VirtualFile propertiesFile){
      recreateEditorsPanel();
    }
    public void fileRemoved(    VirtualFile propertiesFile){
      recreateEditorsPanel();
    }
    public void fileChanged(    VirtualFile propertiesFile,    final VirtualFilePropertyEvent event){
      if (event != null && VirtualFile.PROP_NAME.equals(event.getPropertyName())) {
        recreateEditorsPanel();
      }
 else {
        updateEditorsFromProperties();
      }
    }
  }
;
  PropertiesFilesManager.getInstance().addPropertiesFileListener(myPropertiesFileListener);
  myPsiTreeChangeAdapter=new PsiTreeChangeAdapter(){
    public void childAdded(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childRemoved(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childReplaced(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childMoved(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childrenChanged(    PsiTreeChangeEvent event){
      final PsiFile file=event.getFile();
      if (!(file instanceof PropertiesFile))       return;
      if (!((PropertiesFile)file).getResourceBundle().equals(myResourceBundle))       return;
      updateEditorsFromProperties();
    }
  }
;
  PsiManager.getInstance(myProject).addPsiTreeChangeListener(myPsiTreeChangeAdapter);
}
