{
  if (!GradleAdjustImportSettingsUtil.validate(myModule,myNameControl)) {
    return false;
  }
  String moduleFileDir=myModuleFileLocationField.getText();
  if (moduleFileDir == null || StringUtil.isEmpty(moduleFileDir.trim())) {
    GradleUtil.showBalloon(myModuleFileLocationField,MessageType.ERROR,GradleBundle.message("gradle.import.text.error.module.undefined.config.location"));
    return false;
  }
  myModule.setModuleFileDirectoryPath(moduleFileDir.trim());
  if (myUseModuleCompileOutputPathButton.isSelected()) {
    String outputLocation=myOutputLocationField.getText();
    if (outputLocation == null || StringUtil.isEmpty(outputLocation.trim())) {
      GradleUtil.showBalloon(myOutputLocationField,MessageType.ERROR,GradleBundle.message("gradle.import.text.error.file.module.compile.output.location"));
      return false;
    }
    String testOutputLocation=myTestOutputLocationField.getText();
    if (testOutputLocation == null || StringUtil.isEmpty(testOutputLocation.trim())) {
      GradleUtil.showBalloon(myTestOutputLocationField,MessageType.ERROR,GradleBundle.message("gradle.import.text.error.file.module.test.output.location"));
      return false;
    }
    myModule.setCompileOutputPath(SourceType.SOURCE,outputLocation.trim());
    myModule.setCompileOutputPath(SourceType.TEST,testOutputLocation.trim());
  }
  myModule.setInheritProjectCompileOutputPath(myInheritProjectCompileOutputPathButton.isSelected());
  return true;
}
