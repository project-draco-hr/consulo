{
  presentation.setPresentableText(getValue().getName());
  final OrderEntry orderEntry=getValue().getOrderEntry();
  if (orderEntry instanceof ModuleExtensionWithSdkOrderEntry) {
    final ModuleExtensionWithSdkOrderEntry sdkOrderEntry=(ModuleExtensionWithSdkOrderEntry)orderEntry;
    final Sdk sdk=sdkOrderEntry.getSdk();
    presentation.setIcon(SdkUtil.getIcon(((ModuleExtensionWithSdkOrderEntry)orderEntry).getSdk()));
    if (sdk != null) {
      final String path=sdk.getHomePath();
      if (path != null) {
        presentation.setLocationString(FileUtil.toSystemDependentName(path));
      }
    }
    presentation.setTooltip(null);
  }
 else   if (orderEntry instanceof LibraryOrderEntry) {
    presentation.setIcon(getIconForLibrary(orderEntry));
    presentation.setTooltip(StringUtil.capitalize(IdeBundle.message("node.projectview.library",((LibraryOrderEntry)orderEntry).getLibraryLevel())));
  }
 else   if (orderEntry instanceof OrderEntryWithTracking) {
    OrderEntryTypeProvider provider=orderEntry.getProvider();
    Icon icon=null;
    CellAppearanceEx cellAppearance=provider.getCellAppearance(orderEntry);
    if (cellAppearance instanceof ModifiableCellAppearanceEx) {
      icon=((ModifiableCellAppearanceEx)cellAppearance).getIcon();
    }
    presentation.setIcon(icon == null ? AllIcons.Toolbar.Unknown : icon);
  }
}
