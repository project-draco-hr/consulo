{
  if (!(element instanceof PsiBinaryExpression)) {
    return element instanceof PsiInstanceOfExpression && element.getParent() instanceof PsiBinaryExpression;
  }
  final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)element;
  final IElementType tokenType=binaryExpression.getOperationTokenType();
  final PsiElement parent=element.getParent();
  if (parent instanceof PsiBinaryExpression) {
    final PsiBinaryExpression parentBinaryExpression=(PsiBinaryExpression)parent;
    final IElementType parentTokenType=parentBinaryExpression.getOperationTokenType();
    if (!tokenType.equals(parentTokenType)) {
      return true;
    }
 else     if (!ParenthesesUtils.isCommutativeBinaryOperator(tokenType)) {
      return true;
    }
  }
 else   if (parent instanceof PsiInstanceOfExpression) {
    return true;
  }
  final PsiExpression lhs=binaryExpression.getLOperand();
  if (needsParentheses(lhs,tokenType)) {
    return true;
  }
  final PsiExpression rhs=binaryExpression.getROperand();
  return needsParentheses(rhs,tokenType);
}
