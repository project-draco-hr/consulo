{
  super(project,true);
  setTitle("Create New Project");
  init();
  myLocationLabel.setLabelFor(myLocationField.getChildComponent());
  new LocationNameFieldsBinding(project,myLocationField,myProjectNameTextField,ProjectUtil.getBaseDir(),"Select Location for Project Directory");
  final DirectoryProjectGenerator[] generators=getGenerators();
  if (generators.length == 0) {
    myProjectTypePanel.setVisible(false);
    myGeneratorBeforeSeparator=null;
  }
 else {
    DefaultComboBoxModel model=new DefaultComboBoxModel();
    model.addElement(getEmptyProjectGenerator());
    List<DirectoryProjectGenerator> primaryGenerators=ContainerUtil.newArrayList();
    List<DirectoryProjectGenerator> otherGenerators=ContainerUtil.newArrayList();
    for (    DirectoryProjectGenerator generator : generators) {
      if (generator instanceof HideableProjectGenerator) {
        if (((HideableProjectGenerator)generator).isHidden()) {
          continue;
        }
      }
      boolean primary=true;
      if (generator instanceof WebProjectGenerator) {
        primary=((WebProjectGenerator)generator).isPrimaryGenerator();
      }
      if (primary) {
        primaryGenerators.add(generator);
      }
 else {
        otherGenerators.add(generator);
      }
    }
    if (!primaryGenerators.isEmpty() && !otherGenerators.isEmpty()) {
      myGeneratorBeforeSeparator=primaryGenerators.get(primaryGenerators.size() - 1);
    }
 else {
      myGeneratorBeforeSeparator=null;
    }
    for (    DirectoryProjectGenerator generator : primaryGenerators) {
      model.addElement(generator);
    }
    for (    DirectoryProjectGenerator generator : otherGenerators) {
      model.addElement(generator);
    }
    myProjectTypeComboBox.setModel(model);
    myProjectTypeComboBox.setRenderer(createProjectTypeListCellRenderer(myProjectTypeComboBox.getRenderer()));
  }
}
