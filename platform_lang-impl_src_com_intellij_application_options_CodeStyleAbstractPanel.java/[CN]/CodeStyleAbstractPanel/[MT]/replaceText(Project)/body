{
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      try {
        Pair<CharSequence,List<TextChange>> beforeReformat=null;
        if (!mySkipPreviewHighlighting) {
          beforeReformat=collectChangesBeforeCurrentSettingsAppliance(project);
        }
        PsiFile psiFile=createFileFromText(project,myTextToReformat);
        prepareForReformat(psiFile);
        PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
        Document document=null;
        if (documentManager != null && !mySkipPreviewHighlighting) {
          document=documentManager.getDocument(psiFile);
          if (document != null) {
            myChangesCollector.reset();
            myChangesCollector.setCollectChanges(true);
            document.addDocumentListener(myChangesCollector);
          }
        }
        apply(mySettings);
        CodeStyleSettings clone=mySettings.clone();
        clone.RIGHT_MARGIN=getAdjustedRightMargin();
        CodeStyleSettingsManager.getInstance(project).setTemporarySettings(clone);
        PsiFile formatted;
        try {
          formatted=doReformat(project,psiFile);
        }
  finally {
          CodeStyleSettingsManager.getInstance(project).dropTemporarySettings();
          myChangesCollector.setCollectChanges(false);
          if (!mySkipPreviewHighlighting && document != null) {
            document.removeDocumentListener(myChangesCollector);
          }
        }
        myEditor.getSettings().setTabSize(clone.getTabSize(getFileType()));
        document=myEditor.getDocument();
        document.replaceString(0,document.getTextLength(),formatted.getText());
        if (document != null && beforeReformat != null) {
          highlightChanges(beforeReformat);
        }
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
);
}
