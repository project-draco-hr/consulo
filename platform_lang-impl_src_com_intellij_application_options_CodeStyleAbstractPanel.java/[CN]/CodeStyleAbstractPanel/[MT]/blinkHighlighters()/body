{
  MarkupModel markupModel=myEditor.getMarkupModel();
  if (myShowsPreviewHighlighters) {
    boolean scrollToChange=true;
    Rectangle visibleArea=myEditor.getScrollingModel().getVisibleArea();
    VisualPosition visualStart=myEditor.xyToVisualPosition(visibleArea.getLocation());
    VisualPosition visualEnd=myEditor.xyToVisualPosition(new Point(visibleArea.x + visibleArea.width,visibleArea.y + visibleArea.height));
    int endColumnCandidate=visibleArea.width / EditorUtil.getSpaceWidth(Font.PLAIN,myEditor) + visualStart.column;
    if (endColumnCandidate > visualEnd.column) {
      visualEnd=new VisualPosition(visualEnd.line,endColumnCandidate);
    }
    int offsetToScroll=-1;
    CharSequence text=myEditor.getDocument().getCharsSequence();
    TextAttributes backgroundAttributes=myEditor.getColorsScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);
    TextAttributes borderAttributes=new TextAttributes(null,null,backgroundAttributes.getBackgroundColor(),EffectType.BOXED,Font.PLAIN);
    for (    TextRange range : myPreviewRangesToHighlight) {
      if (scrollToChange) {
        boolean rangeVisible=isWithinBounds(myEditor.offsetToVisualPosition(range.getStartOffset()),visualStart,visualEnd) || isWithinBounds(myEditor.offsetToVisualPosition(range.getEndOffset()),visualStart,visualEnd);
        scrollToChange=!rangeVisible;
        if (offsetToScroll < 0) {
          if (offsetToScroll < 0) {
            if (text.charAt(range.getStartOffset()) != '\n') {
              offsetToScroll=range.getStartOffset();
            }
 else             if (range.getEndOffset() > 0 && text.charAt(range.getEndOffset() - 1) != '\n') {
              offsetToScroll=range.getEndOffset() - 1;
            }
          }
        }
      }
      TextAttributes attributesToUse=range.getLength() > 0 ? backgroundAttributes : borderAttributes;
      markupModel.addRangeHighlighter(range.getStartOffset(),range.getEndOffset(),HighlighterLayer.SELECTION,attributesToUse,HighlighterTargetArea.EXACT_RANGE);
    }
    if (scrollToChange) {
      if (offsetToScroll < 0 && !myPreviewRangesToHighlight.isEmpty()) {
        offsetToScroll=myPreviewRangesToHighlight.get(0).getStartOffset();
      }
      if (offsetToScroll >= 0 && offsetToScroll < text.length() - 1 && text.charAt(offsetToScroll) != '\n') {
        offsetToScroll++;
      }
      if (offsetToScroll >= 0 && offsetToScroll < myEditor.getDocument().getTextLength()) {
        myEditor.getScrollingModel().scrollTo(myEditor.offsetToLogicalPosition(offsetToScroll),ScrollType.RELATIVE);
      }
    }
  }
 else {
    markupModel.removeAllHighlighters();
  }
  myShowsPreviewHighlighters=!myShowsPreviewHighlighters;
}
