{
  PsiFile psiFile=createFileFromText(project,myTextToReformat);
  prepareForReformat(psiFile);
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  Document document;
  if (documentManager != null) {
    document=documentManager.getDocument(psiFile);
    if (document != null) {
      myChangesCollector.reset();
      myChangesCollector.setCollectChanges(true);
      document.addDocumentListener(myChangesCollector);
      CodeStyleSettings clone=mySettings.clone();
      clone.RIGHT_MARGIN=getAdjustedRightMargin();
      CodeStyleSettingsManager.getInstance(project).setTemporarySettings(clone);
      try {
        CodeStyleManager.getInstance(project).reformat(psiFile);
      }
  finally {
        CodeStyleSettingsManager.getInstance(project).dropTemporarySettings();
        myChangesCollector.setCollectChanges(false);
        document.removeDocumentListener(myChangesCollector);
      }
      List<TextChange> result=new ArrayList<TextChange>(myChangesCollector.getChanges());
      myChangesCollector.reset();
      return new Pair<CharSequence,List<TextChange>>(document.getCharsSequence(),result);
    }
  }
  return null;
}
