{
  final PsiAnnotation[] annotations=getAnnotations();
  final boolean formattingAllowed=isAnnotationFormattingAllowed();
  for (  PsiAnnotation annotation : annotations) {
    ((ClsAnnotationImpl)annotation).appendMirrorText(indentLevel,buffer);
    if (formattingAllowed) {
      goNextLine(indentLevel,buffer);
    }
 else {
      buffer.append(' ');
    }
  }
  final PsiElement parent=getParent();
  final boolean isClass=parent instanceof PsiClass;
  final boolean isInterface=isClass && ((PsiClass)parent).isInterface();
  final boolean isInterfaceClass=isClass && parent.getParent() instanceof PsiClass && ((PsiClass)parent.getParent()).isInterface();
  final boolean isMethod=parent instanceof PsiMethod;
  final boolean isInterfaceMethod=isMethod && parent.getParent() instanceof PsiClass && ((PsiClass)parent.getParent()).isInterface();
  final boolean isField=parent instanceof PsiField;
  final boolean isInterfaceField=isField && parent.getParent() instanceof PsiClass && ((PsiClass)parent.getParent()).isInterface();
  if (hasModifierProperty(PsiModifier.PUBLIC) && !isInterfaceMethod && !isInterfaceField&& !isInterfaceClass) {
    buffer.append(PsiModifier.PUBLIC);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.PROTECTED)) {
    buffer.append(PsiModifier.PROTECTED);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.PRIVATE)) {
    buffer.append(PsiModifier.PRIVATE);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.STATIC) && !isInterfaceField) {
    buffer.append(PsiModifier.STATIC);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.ABSTRACT) && !isInterface && !isInterfaceMethod) {
    buffer.append(PsiModifier.ABSTRACT);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.FINAL) && !isInterfaceField) {
    buffer.append(PsiModifier.FINAL);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.NATIVE)) {
    buffer.append(PsiModifier.NATIVE);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.SYNCHRONIZED)) {
    buffer.append(PsiModifier.SYNCHRONIZED);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.TRANSIENT)) {
    buffer.append(PsiModifier.TRANSIENT);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.VOLATILE)) {
    buffer.append(PsiModifier.VOLATILE);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.STRICTFP)) {
    buffer.append(PsiModifier.STRICTFP);
    buffer.append(' ');
  }
}
