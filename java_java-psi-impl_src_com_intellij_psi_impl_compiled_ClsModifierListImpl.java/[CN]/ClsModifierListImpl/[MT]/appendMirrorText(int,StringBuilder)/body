{
  final PsiElement parent=getParent();
  final PsiAnnotation[] annotations=getAnnotations();
  final boolean separateAnnotations=parent instanceof PsiClass || parent instanceof PsiMethod || parent instanceof PsiField;
  for (int i=0; i < annotations.length; i++) {
    appendText(annotations[i],indentLevel,buffer,separateAnnotations ? NEXT_LINE : " ");
  }
  final boolean isClass=parent instanceof PsiClass;
  final boolean isInterface=isClass && ((PsiClass)parent).isInterface();
  final boolean isInterfaceClass=isClass && parent.getParent() instanceof PsiClass && ((PsiClass)parent.getParent()).isInterface();
  final boolean isMethod=parent instanceof PsiMethod;
  final boolean isInterfaceMethod=isMethod && parent.getParent() instanceof PsiClass && ((PsiClass)parent.getParent()).isInterface();
  final boolean isField=parent instanceof PsiField;
  final boolean isInterfaceField=isField && parent.getParent() instanceof PsiClass && ((PsiClass)parent.getParent()).isInterface();
  if (hasModifierProperty(PsiModifier.PUBLIC) && !isInterfaceMethod && !isInterfaceField&& !isInterfaceClass) {
    buffer.append(PsiModifier.PUBLIC);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.PROTECTED)) {
    buffer.append(PsiModifier.PROTECTED);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.PRIVATE)) {
    buffer.append(PsiModifier.PRIVATE);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.STATIC) && !isInterfaceField) {
    buffer.append(PsiModifier.STATIC);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.ABSTRACT) && !isInterface && !isInterfaceMethod) {
    buffer.append(PsiModifier.ABSTRACT);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.FINAL) && !isInterfaceField) {
    buffer.append(PsiModifier.FINAL);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.NATIVE)) {
    buffer.append(PsiModifier.NATIVE);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.SYNCHRONIZED)) {
    buffer.append(PsiModifier.SYNCHRONIZED);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.TRANSIENT)) {
    buffer.append(PsiModifier.TRANSIENT);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.VOLATILE)) {
    buffer.append(PsiModifier.VOLATILE);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.STRICTFP)) {
    buffer.append(PsiModifier.STRICTFP);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.DEFAULT)) {
    buffer.append(PsiModifier.DEFAULT);
    buffer.append(' ');
  }
}
