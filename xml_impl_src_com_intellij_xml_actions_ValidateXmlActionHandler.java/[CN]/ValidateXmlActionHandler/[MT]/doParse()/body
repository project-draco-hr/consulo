{
  try {
    if (myParser instanceof SAXParser) {
      SAXParser parser=(SAXParser)myParser;
      try {
        parser.parse(new InputSource(new StringReader(myFile.getText())),new DefaultHandler(){
          public void warning(          SAXParseException e){
            if (myErrorReporter.isUniqueProblem(e))             myErrorReporter.processError(e,true);
          }
          public void error(          SAXParseException e){
            if (myErrorReporter.isUniqueProblem(e))             myErrorReporter.processError(e,false);
          }
          public void fatalError(          SAXParseException e){
            if (myErrorReporter.isUniqueProblem(e))             myErrorReporter.processError(e,false);
          }
          public InputSource resolveEntity(          String publicId,          String systemId){
            final PsiFile psiFile=myXmlResourceResolver.resolve(null,systemId);
            if (psiFile == null)             return null;
            return new InputSource(new StringReader(psiFile.getText()));
          }
          public void startDocument() throws SAXException {
            super.startDocument();
            ((SAXParser)myParser).setProperty(ENTITY_RESOLVER_PROPERTY_NAME,myXmlResourceResolver);
          }
        }
);
        final String[] resourcePaths=myXmlResourceResolver.getResourcePaths();
        if (resourcePaths.length > 0) {
          final VirtualFile[] files=new VirtualFile[resourcePaths.length];
          for (int i=0; i < resourcePaths.length; ++i) {
            files[i]=UriUtil.findRelativeFile(resourcePaths[i],null);
          }
          myFile.putUserData(DEPENDENT_FILES_KEY,files);
          myFile.putUserData(GRAMMAR_POOL_TIME_STAMP_KEY,new Long(calculateTimeStamp(files,myProject)));
        }
      }
 catch (      SAXException e) {
        LOG.debug(e);
      }
    }
 else {
      LOG.error("unknown parser: " + myParser);
    }
  }
 catch (  Exception exception) {
    filterAppException(exception);
  }
catch (  StackOverflowError error) {
  }
}
