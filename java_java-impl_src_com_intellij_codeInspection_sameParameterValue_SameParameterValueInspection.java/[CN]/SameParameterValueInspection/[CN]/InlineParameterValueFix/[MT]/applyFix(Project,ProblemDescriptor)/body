{
  final PsiElement element=descriptor.getPsiElement();
  final PsiMethod method=PsiTreeUtil.getParentOfType(element,PsiMethod.class);
  LOG.assertTrue(method != null);
  PsiParameter parameter=PsiTreeUtil.getParentOfType(element,PsiParameter.class,false);
  if (parameter == null) {
    final PsiParameter[] parameters=method.getParameterList().getParameters();
    for (    PsiParameter psiParameter : parameters) {
      if (Comparing.strEqual(psiParameter.getName(),myParameterName)) {
        parameter=psiParameter;
        break;
      }
    }
  }
  if (parameter == null)   return;
  if (!CommonRefactoringUtil.checkReadOnlyStatus(project,parameter))   return;
  final PsiExpression defToInline;
  try {
    defToInline=JavaPsiFacade.getInstance(project).getElementFactory().createExpressionFromText(myValue,parameter);
  }
 catch (  IncorrectOperationException e) {
    return;
  }
  final PsiParameter parameterToInline=parameter;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      inlineSameParameterValue(method,parameterToInline,defToInline);
    }
  }
);
}
