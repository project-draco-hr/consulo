{
  for (  GradleModule gradleModule : gradleProject.getModules()) {
    Module intellijModule=moduleMappings.get(gradleModule);
    if (intellijModule == null) {
      GradleLog.LOG.warn(String.format("Can't find intellij module for the gradle module '%s'. Registered mappings: %s",gradleModule,moduleMappings));
      continue;
    }
    ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(intellijModule);
    final ModifiableRootModel moduleRootModel=moduleRootManager.getModifiableModel();
    GradleEntityVisitor visitor=new GradleEntityVisitorAdapter(){
      @Override public void visit(      @NotNull GradleLibraryDependency dependency){
        GradleLibrary gradleLibrary=dependency.getLibrary();
        Library intellijLibrary=libraryMappings.get(gradleLibrary);
        if (intellijLibrary == null) {
          GradleLog.LOG.warn(String.format("Can't find registered intellij library for gradle library '%s'. Registered mappings: %s",gradleLibrary,libraryMappings));
          return;
        }
        LibraryOrderEntry orderEntry=moduleRootModel.addLibraryEntry(intellijLibrary);
        orderEntry.setExported(dependency.isExported());
        orderEntry.setScope(dependency.getScope());
      }
    }
;
    try {
      for (      GradleDependency dependency : gradleModule.getDependencies()) {
        dependency.invite(visitor);
      }
    }
  finally {
      moduleRootModel.commit();
    }
  }
}
