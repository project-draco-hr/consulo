{
  LibraryTable projectLibraryTable=ProjectLibraryTable.getInstance(intellijProject);
  if (projectLibraryTable == null) {
    GradleLog.LOG.warn("Can't resolve external dependencies of the target gradle project (" + intellijProject + "). Reason: project "+ "library table is undefined");
    return null;
  }
  Map<GradleLibrary,Library> libraryMappings=new HashMap<GradleLibrary,Library>();
  for (  GradleLibrary gradleLibrary : gradleProject.getLibraries()) {
    Library intellijLibrary=projectLibraryTable.createLibrary(gradleLibrary.getName());
    libraryMappings.put(gradleLibrary,intellijLibrary);
    Library.ModifiableModel model=intellijLibrary.getModifiableModel();
    try {
      registerPath(gradleLibrary,model);
    }
  finally {
      model.commit();
    }
  }
  return libraryMappings;
}
