{
  Rearranger rearranger=new Rearranger();
  SAXBuilder builder=new SAXBuilder();
  org.jdom.Document doc=null;
  try {
    FileInputStream f=new FileInputStream(new File(DEFAULT_CONFIGURATION));
    doc=builder.build(f);
    f.close();
  }
 catch (  JDOMException e) {
    e.printStackTrace();
  }
catch (  FileNotFoundException e) {
    File f=new File(DEFAULT_CONFIGURATION);
    System.out.println(f.getAbsolutePath());
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  Element appElement=doc.getRootElement();
  java.util.List componentList=appElement.getChildren();
  Element rearrangerElement=null;
  if (appElement.getName().equals("component") && appElement.getAttributeValue("name").equals(Rearranger.COMPONENT_NAME)) {
    rearrangerElement=appElement;
  }
 else {
    ListIterator li=componentList.listIterator();
    while (li.hasNext()) {
      Element e=(Element)li.next();
      if (e.getAttributeValue("name").equals(Rearranger.COMPONENT_NAME)) {
        rearrangerElement=e;
        break;
      }
    }
  }
  if (rearrangerElement != null) {
    rearranger.readExternal(rearrangerElement);
  }
  final JDialog frame=new JDialog((Frame)null,"SwingApplication");
  final Constraints constraints=new Constraints(GridBagConstraints.NORTHWEST);
  constraints.fill=GridBagConstraints.BOTH;
  constraints.weightedLastRow();
  RearrangerSettings settings=rearranger.getSettings();
  final RearrangerSettingsPanel object=new RearrangerSettingsPanel(settings);
  frame.getContentPane().setLayout(new GridBagLayout());
  frame.getContentPane().add(object,constraints.weightedLastCol());
  frame.pack();
  frame.setResizable(true);
  frame.setModal(true);
  frame.setVisible(true);
  final RearrangerSettings rs=object.settings.deepCopy();
  assertTrue("Settings are unequal",rs.equals(object.settings));
  System.out.println("Class Order");
  ListIterator li;
  for (  Object o : object.settings.getClassOrderAttributeList()) {
    if (o instanceof IPrioritizableRule) {
      System.out.println(o + ", pri=" + ((IRule)o).getPriority());
    }
 else {
      System.out.println(o);
    }
  }
  System.out.println("Item order");
  for (  Object o : object.settings.getItemOrderAttributeList()) {
    if (o instanceof IPrioritizableRule) {
      System.out.println(o + ", pri=" + ((IRule)o).getPriority());
    }
 else {
      System.out.println(o);
    }
  }
  object.checkCommentsAgainstGlobalPattern(object.settings);
}
