{
  super(parentDisposable,applicationEnvironment);
  myProject.registerService(PsiElementFactory.class,new PsiElementFactoryImpl(myPsiManager));
  myProject.registerService(JavaPsiImplementationHelper.class,createJavaPsiImplementationHelper());
  myProject.registerService(PsiResolveHelper.class,new PsiResolveHelperImpl(myPsiManager));
  myProject.registerService(JavaResolveCache.class,new JavaResolveCache(myMessageBus));
  myProject.registerService(JavaCodeStyleSettingsFacade.class,new CoreJavaCodeStyleSettingsFacade());
  myProject.registerService(JavaCodeStyleManager.class,new CoreJavaCodeStyleManager());
  registerProjectExtensionPoint(PsiElementFinder.EP_NAME,PsiElementFinder.class);
  myFileManager=createCoreFileManager();
  myProject.registerService(JavaFileManager.class,myFileManager);
  PsiPackageManager manager=new PsiPackageManagerImpl(getProject(),PsiManager.getInstance(getProject()),DirectoryIndex.getInstance(getProject()),myMessageBus);
  myProject.registerService(PsiPackageManager.class,manager);
  JavaPsiFacadeImpl javaPsiFacade=new JavaPsiFacadeImpl(myProject,manager,myFileManager,myMessageBus);
  registerProjectComponent(JavaPsiFacade.class,javaPsiFacade);
  myProject.registerService(JavaPsiFacade.class,javaPsiFacade);
}
