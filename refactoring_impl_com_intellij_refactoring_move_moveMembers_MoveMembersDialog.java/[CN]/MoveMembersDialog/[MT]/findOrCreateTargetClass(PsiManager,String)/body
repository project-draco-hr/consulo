{
  final String className;
  final String packageName;
  int dotIndex=fqName.lastIndexOf('.');
  if (dotIndex >= 0) {
    packageName=fqName.substring(0,dotIndex);
    className=(dotIndex + 1 < fqName.length()) ? fqName.substring(dotIndex + 1) : "";
  }
 else {
    packageName="";
    className=fqName;
  }
  PsiClass aClass=manager.findClass(fqName,GlobalSearchScope.projectScope(myProject));
  if (aClass != null)   return aClass;
  final PsiDirectory directory=PackageUtil.findOrCreateDirectoryForPackage(myProject,packageName,mySourceClass.getContainingFile().getContainingDirectory(),true);
  if (directory == null) {
    return null;
  }
  int answer=Messages.showYesNoDialog(myProject,RefactoringBundle.message("class.0.does.not.exist",fqName),MoveMembersImpl.REFACTORING_NAME,Messages.getQuestionIcon());
  if (answer != 0)   return null;
  final Ref<IncorrectOperationException> eRef=new Ref<IncorrectOperationException>();
  final PsiClass newClass=ApplicationManager.getApplication().runWriteAction(new Computable<PsiClass>(){
    public PsiClass compute(){
      try {
        return directory.createClass(className);
      }
 catch (      IncorrectOperationException e) {
        eRef.set(e);
        return null;
      }
    }
  }
);
  if (!eRef.isNull())   throw eRef.get();
  return newClass;
}
