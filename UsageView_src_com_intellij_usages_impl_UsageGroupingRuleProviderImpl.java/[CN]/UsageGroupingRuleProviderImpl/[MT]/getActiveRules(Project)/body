{
  List<UsageGroupingRule> rules=new ArrayList<UsageGroupingRule>();
  rules.add(new NonCodeUsageGroupingRule());
  if (GROUP_BY_USAGE_TYPE) {
    rules.add(new UsageTypeGroupingRule());
  }
  if (GROUP_BY_MODULE) {
    rules.add(new ModuleGroupingRule());
  }
  if (GROUP_BY_PACKAGE) {
    rules.add(new PackageGroupingRule(project));
  }
  if (GROUP_BY_FILE_STRUCTURE) {
    FileStructureGroupRuleProvider[] providers=Extensions.getExtensions(FileStructureGroupRuleProvider.EP_NAME);
    for (    FileStructureGroupRuleProvider ruleProvider : providers) {
      final UsageGroupingRule rule=ruleProvider.getUsageGroupingRule(project);
      if (rule != null) {
        rules.add(rule);
      }
    }
  }
 else {
    rules.add(new FileGroupingRule(project));
  }
  return rules.toArray(new UsageGroupingRule[rules.size()]);
}
