{
  Module[] containingModules=getContainingModules(compileScope);
  final Collection<VirtualFile> j2eeSpecificFiles=new THashSet<VirtualFile>();
  final Collection<Module> affectedModules=new THashSet<Module>();
  for (  final JavaeeFacet facet : JavaeeFacetUtil.getInstance().getAllJavaeeFacets(containingModules)) {
    final Module module=facet.getModule();
    BuildConfiguration buildConfiguration=facet.getBuildConfiguration().getBuildProperties();
    if (buildConfiguration == null || !buildConfiguration.willBuildExploded()) {
      continue;
    }
    final ModuleCompileScope moduleCompileScope=new ModuleCompileScope(module,true);
    BuildRecipe buildRecipe=DeploymentUtil.getInstance().getModuleItems(module);
    ModuleBuilder.getInstance(module).clearBuildRecipeCaches();
    buildRecipe.visitInstructions(new BuildInstructionVisitor(){
      public boolean visitFileCopyInstruction(      FileCopyInstruction instruction) throws Exception {
        VirtualFile virtualFile=LocalFileSystem.getInstance().findFileByIoFile(instruction.getFile());
        if (virtualFile != null && !moduleCompileScope.belongs(virtualFile.getUrl())) {
          j2eeSpecificFiles.add(virtualFile);
          affectedModules.add(module);
        }
        return true;
      }
    }
,false);
  }
  if (j2eeSpecificFiles.size() == 0) {
    return null;
  }
  VirtualFile[] virtualFiles=j2eeSpecificFiles.toArray(new VirtualFile[j2eeSpecificFiles.size()]);
  Module[] affectedModuleArray=affectedModules.toArray(new Module[affectedModules.size()]);
  return new FileSetCompileScope(virtualFiles,affectedModuleArray);
}
