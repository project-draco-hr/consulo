{
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      String outputRelativePath;
      final PackagingMethod packagingMethod=libraryLink.getPackagingMethod();
      if (packagingMethod.equals(PackagingMethod.COPY_FILES_AND_LINK_VIA_MANIFEST) || packagingMethod.equals(PackagingMethod.JAR_AND_COPY_FILE_AND_LINK_VIA_MANIFEST)) {
        outputRelativePath=getRelativePathForManifestLinking(libraryLink.getURI());
      }
 else {
        outputRelativePath=libraryLink.getURI();
      }
      boolean isDestinationDirectory=libraryLink.getSingleFileName() == null;
      final List<String> urls=libraryLink.getUrls();
      for (      String url : urls) {
        final String path=PathUtil.toPresentableUrl(url);
        final File file=new File(path);
        String fileDestination=isDestinationDirectory ? appendToPath(outputRelativePath,file.getName()) : outputRelativePath;
        if (file.isDirectory()) {
          boolean ok;
          if (packagingMethod.equals(PackagingMethod.COPY_FILES_AND_LINK_VIA_MANIFEST) || packagingMethod.equals(PackagingMethod.COPY_FILES)) {
            ok=addItemsRecursively(items,file,module,fileDestination,null,possibleBaseOutputPath);
          }
 else {
            if (!packagingMethod.equals(PackagingMethod.JAR_AND_COPY_FILE_AND_LINK_VIA_MANIFEST) && !packagingMethod.equals(PackagingMethod.JAR_AND_COPY_FILE)) {
              libraryLink.setPackagingMethod(PackagingMethod.JAR_AND_COPY_FILE);
              context.addMessage(CompilerMessageCategory.WARNING,CompilerBundle.message("message.text.packaging.method.for.library.reset",libraryLink.getPresentableName(),PackagingMethod.JAR_AND_COPY_FILE),null,-1,-1);
            }
            BuildInstruction instruction=new JarAndCopyBuildInstructionImpl(module,file,fileDestination,null);
            items.addInstruction(instruction);
            ok=true;
          }
          if (!ok) {
            final String name=libraryLink.getPresentableName();
            String additionalMessage=CompilerBundle.message("message.text.adjust.library.path");
            reportRecursiveCopying(context,file.getPath(),fileDestination,CompilerBundle.message("directory.description.library.directory",name),additionalMessage);
          }
        }
 else {
          items.addFileCopyInstruction(file,false,module,fileDestination,null);
        }
      }
    }
  }
);
}
