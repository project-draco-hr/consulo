{
  if (fileFilter != null && !fileFilter.accept(fromFile)) {
    return;
  }
  checkPathDoNotNavigatesUpFromFile(fromFile);
  checkPathDoNotNavigatesUpFromFile(toFile);
  if (fromFile.isDirectory()) {
    final File[] fromFiles=fromFile.listFiles();
    toFile.mkdirs();
    for (    File file : fromFiles) {
      copyFile(file,new File(toFile,file.getName()),context,writtenPaths,fileFilter);
    }
    return;
  }
  if (toFile.isDirectory()) {
    context.addMessage(CompilerMessageCategory.ERROR,CompilerBundle.message("message.text.destination.is.directory",createCopyErrorMessage(fromFile,toFile)),null,-1,-1);
    return;
  }
  if (fromFile.equals(toFile) || writtenPaths != null && !writtenPaths.add(toFile.getPath())) {
    return;
  }
  if (!FileUtil.isFilePathAcceptable(toFile,fileFilter))   return;
  if (context.getProgressIndicator() != null) {
    context.getProgressIndicator().setText(CompilerBundle.message("progress.text.copying.file",fromFile.getPath()));
  }
  try {
    LOG.debug("Copy file '" + fromFile + "' to '"+ toFile+ "'");
    FileUtil.copy(fromFile,toFile);
  }
 catch (  IOException e) {
    context.addMessage(CompilerMessageCategory.ERROR,createCopyErrorMessage(fromFile,toFile) + ": " + e.getLocalizedMessage(),null,-1,-1);
  }
}
