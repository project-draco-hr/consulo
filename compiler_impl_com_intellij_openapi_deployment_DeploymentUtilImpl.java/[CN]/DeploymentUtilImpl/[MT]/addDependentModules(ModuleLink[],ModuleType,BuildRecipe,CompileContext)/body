{
  if (containingModules.length == 0)   return;
  final Module parentModule=containingModules[0].getParentModule();
  Arrays.sort(containingModules,new Comparator<ModuleLink>(){
    public int compare(    final ModuleLink o1,    final ModuleLink o2){
      return precedesInOrder(parentModule,o1.getName(),o2.getName()) ? 1 : -1;
    }
  }
);
  for (  ModuleLink moduleLink : containingModules) {
    if (moduleLink.getParentModule() != parentModule) {
      LOG.error("Expected: " + ModuleUtil.getModuleNameInReadAction(parentModule) + "; was:"+ ModuleUtil.getModuleNameInReadAction(moduleLink.getParentModule()));
    }
    Module module=moduleLink.getModule();
    if (module != null && moduleType.equals(module.getModuleType())) {
      final BuildRecipe childBuildRecipe=ModuleBuilder.getInstance(module).getModuleBuildInstructions(context);
      childBuildRecipe.visitInstructions(new BuildInstructionVisitor(){
        public boolean visitInstruction(        BuildInstruction instruction) throws RuntimeException {
          final BuildInstructionBase cloned=((BuildInstructionBase)instruction).clone();
          instructions.addInstruction(cloned);
          return true;
        }
      }
,false);
    }
  }
}
