{
  boundedComponent.add(editor);
  final GlobalSearchScope resolveScope=control.getDomWrapper().getResolveScope();
  editor.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final DomElement domElement=control.getDomElement();
      ExtendClass extend=domElement.getAnnotation(ExtendClass.class);
      PsiClass baseClass=null;
      TreeClassChooser.ClassFilter filter=null;
      if (extend != null) {
        baseClass=PsiManager.getInstance(control.getProject()).findClass(extend.value(),resolveScope);
        if (extend.instantiatable()) {
          filter=TreeClassChooser.INSTANTIATABLE;
        }
      }
      PsiClass initialClass;
      if (domElement instanceof GenericDomValue) {
        initialClass=(PsiClass)((GenericDomValue)domElement).getValue();
      }
 else {
        initialClass=null;
      }
      TreeClassChooser chooser=TreeClassChooserFactory.getInstance(control.getProject()).createInheritanceClassChooser(UIBundle.message("choose.class"),resolveScope,baseClass,initialClass,filter);
      chooser.showDialog();
      final PsiClass psiClass=chooser.getSelectedClass();
      if (psiClass != null) {
        control.setValue(psiClass.getQualifiedName());
      }
    }
  }
);
  return boundedComponent;
}
