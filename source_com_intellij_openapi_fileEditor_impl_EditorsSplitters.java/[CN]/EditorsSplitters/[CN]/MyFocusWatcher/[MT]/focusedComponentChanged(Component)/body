{
  if (myInsideChange > 0) {
    return;
  }
  final EditorWindow oldActiveWindow=getCurrentWindow();
  final EditorWindow newActiveWindow=findWindowWith(component);
  final boolean currentFileChanged=getCurrentFile() != myCurrentFile;
  if (oldActiveWindow != newActiveWindow || currentFileChanged) {
    if (currentFileChanged) {
      getManager().updateFileName(newActiveWindow == null ? null : newActiveWindow.getSelectedFile());
      myCurrentFile=getCurrentFile();
    }
    if (oldActiveWindow != newActiveWindow) {
      setCurrentWindow(newActiveWindow,false);
    }
    if (component == null && !currentFileChanged) {
      return;
    }
    EditorWithProviderComposite oldSelected=myCurrentSelectedEditor;
    EditorWithProviderComposite newSelected=newActiveWindow == null ? null : newActiveWindow.getSelectedEditor();
    try {
      getManager().fireSelectionChanged(oldSelected,newSelected);
    }
  finally {
      myCurrentSelectedEditor=newSelected;
    }
  }
}
