{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  final VirtualFile[] roots=ProjectRootManager.getInstance(project).getContentRoots();
  if (roots.length == 0) {
    Messages.showErrorDialog(project,"Project doesn't have any project roots","Cannot create new GitHub repository");
    return;
  }
  final VirtualFile root=roots[0];
  final boolean gitDetected=GitUtil.isUnderGit(root);
  if (gitDetected) {
    try {
      final List<GitRemote> gitRemotes=GitRemote.list(project,root);
      if (!gitRemotes.isEmpty()) {
        Messages.showErrorDialog(project,"Project is already under git with configured remote","Cannot create new GitHub repository");
        return;
      }
    }
 catch (    VcsException e2) {
      Messages.showErrorDialog(project,"Error happened during git operation: " + e2.getMessage(),"Cannot create new GitHub repository");
      return;
    }
  }
  BasicAction.saveAll();
  final GithubSettings settings=GithubSettings.getInstance();
  if (!GithubUtil.testConnection(settings.getLogin(),settings.getPassword())) {
    final GithubLoginDialog dialog=new GithubLoginDialog(project);
    dialog.show();
    if (!dialog.isOK()) {
      return;
    }
  }
  final HashSet<String> names=new HashSet<String>();
  for (  RepositoryInfo info : GithubUtil.getAvailableRepos(settings.getLogin(),settings.getPassword())) {
    names.add(info.getName());
  }
  final boolean privateRepoAllowed=GithubUtil.isPrivateRepoAllowed(settings.getLogin(),settings.getPassword());
  final GithubShareDialog shareDialog=new GithubShareDialog(project,names,privateRepoAllowed);
  shareDialog.show();
  if (!shareDialog.isOK()) {
    return;
  }
  final boolean isPrivate=shareDialog.isPrivate();
  final String name=shareDialog.getRepositoryName();
  final String description=shareDialog.getDescription();
  try {
    LOG.info("Creating GitHub repository");
    GithubUtil.doREST(settings.getLogin(),settings.getPassword(),"/repos/create?name=" + name + "&description="+ description+ "&public="+ (isPrivate ? "0" : "1"),true);
    LOG.info("Successfully created GitHub repository");
  }
 catch (  final Exception e1) {
    Messages.showErrorDialog(e1.getMessage(),"Failed to create new GitHub repository");
    return;
  }
  bindToGithub(project,root,gitDetected,settings.getLogin(),name);
}
