{
  final String newName=getNewName(element);
  if (newName != null) {
    final LinkedHashMap<PsiNamedElement,String> renames=new LinkedHashMap<PsiNamedElement,String>();
    renames.putAll(myRenames);
    if (allRenames != null) {
      for (      PsiElement psiElement : allRenames.keySet()) {
        if (psiElement instanceof PsiNamedElement) {
          renames.put((PsiNamedElement)psiElement,allRenames.get(psiElement));
        }
      }
    }
    final UsageInfo[] usages=RenameUtil.findUsages(element,newName,searchInStringsAndComments,searchInNonJavaFiles,renames);
    for (    final UsageInfo usage : usages) {
      if (usage instanceof UnresolvableCollisionUsageInfo) {
        if (unresolvedUsages != null) {
          unresolvedUsages.add((UnresolvableCollisionUsageInfo)usage);
        }
        return false;
      }
    }
    ContainerUtil.addAll(result,usages);
  }
  return true;
}
