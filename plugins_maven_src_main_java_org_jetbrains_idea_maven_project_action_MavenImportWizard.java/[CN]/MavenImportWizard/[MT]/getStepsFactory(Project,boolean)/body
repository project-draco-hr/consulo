{
  if ((currentProject != null && updateCurrent)) {
    preferencesForEditing=MavenImporterPreferencesComponent.getInstance(currentProject).getState().safeClone();
  }
 else {
    preferencesForEditing=new MavenImporterPreferences();
  }
  myImportProcessor=new MavenImportProcessor(updateCurrent ? currentProject : null,preferencesForEditing);
  return new AddModuleWizard.ModuleWizardStepFactory(){
    public ModuleWizardStep[] createSteps(    final WizardContext wizardContext){
      return new ModuleWizardStep[]{new MavenImportRootStep(wizardContext,myImportProcessor,preferencesForEditing),new SelectImportedProjectsStep<MavenProjectModel.Node>(MavenImportWizard.this,updateCurrent){
        protected String getElementText(        final MavenProjectModel.Node node){
          final StringBuilder stringBuilder=new StringBuilder();
          stringBuilder.append(node.getArtifact().toString());
          final String relPath=VfsUtil.getRelativePath(node.getFile().getParent(),myImportProcessor.getRootDirectory(),File.separatorChar);
          if (relPath.length() != 0) {
            stringBuilder.append(" [").append(relPath).append("]");
          }
          return stringBuilder.toString();
        }
      }
};
    }
  }
;
}
