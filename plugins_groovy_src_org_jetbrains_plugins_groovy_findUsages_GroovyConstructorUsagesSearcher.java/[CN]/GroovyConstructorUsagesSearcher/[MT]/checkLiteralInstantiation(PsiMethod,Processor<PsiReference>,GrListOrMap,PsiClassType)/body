{
  final PsiType listType=literal.getType();
  if (listType instanceof GrTupleType) {
    if (isConstructorCall(expectedType,((GrTupleType)listType).getComponentTypes(),constructor,literal)) {
      return consumer.process(PsiReferenceBase.createSelfReference(literal,TextRange.from(0,literal.getTextLength()),constructor));
    }
  }
 else   if (listType instanceof GrMapType) {
    final PsiType constructorArgs=((GrMapType)listType).getValueType("super");
    if (constructorArgs == null) {
      if (constructor.getParameterList().getParametersCount() == 0) {
        if (!consumer.process(PsiReferenceBase.createSelfReference(literal,TextRange.from(0,literal.getTextLength()),constructor))) {
          return false;
        }
      }
      return true;
    }
    for (    GrNamedArgument argument : literal.getNamedArguments()) {
      final GrArgumentLabel label=argument.getLabel();
      if (label != null && "super".equals(label.getName())) {
        if (mayInvokeConstructor(expectedType,constructor,argument.getExpression())) {
          return consumer.process(PsiReferenceBase.createSelfReference(label,TextRange.from(0,label.getTextLength()),constructor));
        }
        return true;
      }
    }
    if (constructor.getParameterList().getParametersCount() == 0) {
      return consumer.process(PsiReferenceBase.createSelfReference(literal,TextRange.from(0,literal.getTextLength()),constructor));
    }
  }
  return true;
}
