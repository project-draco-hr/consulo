{
  PsiElement parent=element.getParent();
  if (parent instanceof GrAnonymousClassDefinition) {
    parent=parent.getParent();
  }
  if (parent instanceof GrNewExpression) {
    final PsiMethod resolvedConstructor=((GrNewExpression)parent).resolveConstructor();
    if (constructor.getManager().areElementsEquivalent(resolvedConstructor,constructor) && !consumer.process(ref)) {
      return false;
    }
  }
 else   if (!usualCallsOnly && parent instanceof GrTypeElement) {
    final GrTypeElement typeElement=(GrTypeElement)parent;
    final PsiElement grandpa=typeElement.getParent();
    if (grandpa instanceof GrVariableDeclaration) {
      final GrVariable[] vars=((GrVariableDeclaration)grandpa).getVariables();
      if (vars.length == 1) {
        final GrVariable variable=vars[0];
        if (!checkListInstantiation(constructor,consumer,variable.getInitializerGroovy(),typeElement)) {
          return false;
        }
      }
    }
 else     if (grandpa instanceof GrMethod) {
      final GrMethod method=(GrMethod)grandpa;
      if (typeElement == method.getReturnTypeElementGroovy()) {
        ControlFlowUtils.visitAllExitPoints(method.getBlock(),new ControlFlowUtils.ExitPointVisitor(){
          @Override public boolean visitExitPoint(          Instruction instruction,          @Nullable GrExpression returnValue){
            if (!checkListInstantiation(constructor,consumer,returnValue,typeElement)) {
              return false;
            }
            return true;
          }
        }
);
      }
    }
 else     if (grandpa instanceof GrTypeCastExpression) {
      final GrTypeCastExpression cast=(GrTypeCastExpression)grandpa;
      if (cast.getCastTypeElement() == typeElement && !checkListInstantiation(constructor,consumer,cast.getOperand(),typeElement)) {
        return false;
      }
    }
 else     if (grandpa instanceof GrSafeCastExpression) {
      final GrSafeCastExpression cast=(GrSafeCastExpression)grandpa;
      if (cast.getCastTypeElement() == typeElement && !checkListInstantiation(constructor,consumer,cast.getOperand(),typeElement)) {
        return false;
      }
    }
  }
  return true;
}
