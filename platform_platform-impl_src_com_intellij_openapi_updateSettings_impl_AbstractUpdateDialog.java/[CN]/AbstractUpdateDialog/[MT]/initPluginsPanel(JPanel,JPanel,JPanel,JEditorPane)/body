{
  panel.setMinimumSize(new Dimension(-1,200));
  wholePluginsPanel.setVisible(myUploadedPlugins != null);
  if (myUploadedPlugins != null) {
    final DetectedPluginsPanel foundPluginsPanel=new DetectedPluginsPanel();
    foundPluginsPanel.addStateListener(new DetectedPluginsPanel.Listener(){
      public void stateChanged(){
        setButtonsText();
      }
    }
);
    for (    PluginDownloader uploadedPlugin : myUploadedPlugins) {
      foundPluginsPanel.add(uploadedPlugin);
    }
    pluginsPanel.add(foundPluginsPanel,BorderLayout.NORTH);
  }
  updateLinkPane.setBackground(UIUtil.getPanelBackground());
  updateLinkPane.setText(IdeBundle.message("updates.configure.label",UIUtil.getCssFontDeclaration(UIUtil.getLabelFont())));
  updateLinkPane.setEditable(false);
  LabelTextReplacingUtil.replaceText(panel);
  if (myEnableLink) {
    updateLinkPane.addHyperlinkListener(new HyperlinkListener(){
      public void hyperlinkUpdate(      final HyperlinkEvent e){
        if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
          final ShowSettingsUtil util=ShowSettingsUtil.getInstance();
          UpdateSettingsConfigurable updatesSettings=new UpdateSettingsConfigurable();
          updatesSettings.setCheckNowEnabled(false);
          util.editConfigurable(panel,updatesSettings);
        }
      }
    }
);
  }
}
