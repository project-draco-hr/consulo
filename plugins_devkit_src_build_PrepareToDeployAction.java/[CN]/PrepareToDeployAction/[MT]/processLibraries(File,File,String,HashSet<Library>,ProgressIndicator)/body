{
  if (zipFile.exists() || zipFile.createNewFile()) {
    ZipOutputStream zos=null;
    try {
      zos=new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(zipFile)));
      addStructure(name,zos);
      addStructure(name + "/" + "lib",zos);
      ZipUtil.addFileToZip(zos,jarFile,"/" + name + MIDDLE_LIB_DIR+ name+ JAR_EXTENSION,new HashSet<String>(),new FileFilter(){
        public boolean accept(        File pathname){
          if (progressIndicator != null) {
            progressIndicator.setText2("");
          }
          return !myFileTypeManager.isFileIgnored(FileUtil.toSystemIndependentName(pathname.getPath()));
        }
      }
);
      Set<String> names=new HashSet<String>();
      for (      Library library : libs) {
        final VirtualFile[] files=library.getFiles(OrderRootType.CLASSES);
        for (        VirtualFile virtualFile : files) {
          if (virtualFile.getFileSystem() instanceof JarFileSystem) {
            addLibraryJar(virtualFile,zipFile,name,zos,progressIndicator);
          }
 else {
            makeAndAddLibraryJar(virtualFile,zos,zipFile,name,library,names,progressIndicator);
          }
        }
      }
    }
  finally {
      if (zos != null)       zos.close();
    }
  }
}
