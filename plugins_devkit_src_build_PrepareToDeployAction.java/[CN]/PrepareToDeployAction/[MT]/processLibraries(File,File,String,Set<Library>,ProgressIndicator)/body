{
  if (zipFile.exists() || zipFile.createNewFile()) {
    ZipOutputStream zos=null;
    try {
      zos=new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(zipFile)));
      addStructure(pluginName,zos);
      addStructure(pluginName + "/" + "lib",zos);
      ZipUtil.addFileToZip(zos,jarFile,"/" + pluginName + MIDDLE_LIB_DIR+ pluginName+ JAR_EXTENSION,new HashSet<String>(),createFilter(progressIndicator,myFileTypeManager));
      Set<String> usedJarNames=new HashSet<String>();
      Set<VirtualFile> jarredVirtualFiles=new HashSet<VirtualFile>();
      for (      Library library : libs) {
        final VirtualFile[] files=library.getFiles(OrderRootType.CLASSES);
        for (        VirtualFile virtualFile : files) {
          if (jarredVirtualFiles.add(virtualFile)) {
            if (virtualFile.getFileSystem() instanceof JarFileSystem) {
              addLibraryJar(virtualFile,zipFile,pluginName,zos,usedJarNames,progressIndicator);
            }
 else {
              makeAndAddLibraryJar(virtualFile,zipFile,pluginName,zos,usedJarNames,progressIndicator,library.getName());
            }
          }
        }
      }
    }
  finally {
      if (zos != null)       zos.close();
    }
  }
}
