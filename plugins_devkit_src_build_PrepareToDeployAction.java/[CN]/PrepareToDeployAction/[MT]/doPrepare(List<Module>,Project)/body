{
  final List<String> errorMessages=new ArrayList<String>();
  final List<String> successMessages=new ArrayList<String>();
  final CompilerManager compilerManager=CompilerManager.getInstance(project);
  compilerManager.make(compilerManager.createModulesCompileScope(pluginModules.toArray(new Module[pluginModules.size()]),true),new CompileStatusNotification(){
    public void finished(    final boolean aborted,    final int errors,    final int warnings,    final CompileContext compileContext){
      if (aborted || errors != 0)       return;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          for (          Module aModule : pluginModules) {
            if (!doPrepare(aModule,errorMessages,successMessages)) {
              return;
            }
          }
          if (!errorMessages.isEmpty()) {
            Messages.showErrorDialog(errorMessages.iterator().next(),DevKitBundle.message("error.occurred"));
          }
 else           if (!successMessages.isEmpty()) {
            StringBuffer messageBuf=new StringBuffer();
            for (            String message : successMessages) {
              if (messageBuf.length() != 0) {
                messageBuf.append('\n');
              }
              messageBuf.append(message);
            }
            Messages.showInfoMessage(messageBuf.toString(),pluginModules.size() == 1 ? DevKitBundle.message("success.deployment.message",pluginModules.get(0).getName()) : DevKitBundle.message("success.deployment.message.all"));
          }
        }
      }
);
    }
  }
);
}
