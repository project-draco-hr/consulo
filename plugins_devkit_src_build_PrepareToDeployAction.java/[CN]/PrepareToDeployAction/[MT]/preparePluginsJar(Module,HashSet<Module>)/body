{
  final PluginBuildConfiguration pluginModuleBuildProperties=PluginBuildConfiguration.getInstance(module);
  File jarFile=FileUtil.createTempFile(TEMP_PREFIX,JAR_EXTENSION);
  jarFile.deleteOnExit();
  final Manifest manifest=createOrFindManifest(pluginModuleBuildProperties);
  ZipOutputStream jarPlugin=null;
  try {
    jarPlugin=new JarOutputStream(new BufferedOutputStream(new FileOutputStream(jarFile)),manifest);
    final ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
    final HashSet<String> writtenItemRelativePaths=new HashSet<String>();
    for (    Module module1 : modules) {
      final VirtualFile compilerOutputPath=CompilerModuleExtension.getInstance(module1).getCompilerOutputPath();
      if (compilerOutputPath == null)       continue;
      ZipUtil.addDirToZipRecursively(jarPlugin,jarFile,new File(compilerOutputPath.getPath()),"",createFilter(progressIndicator,myFileTypeManager),writtenItemRelativePaths);
    }
    final String pluginXmlPath=pluginModuleBuildProperties.getPluginXmlPath();
    @NonNls final String metainf="/META-INF/plugin.xml";
    ZipUtil.addFileToZip(jarPlugin,new File(pluginXmlPath),metainf,writtenItemRelativePaths,createFilter(progressIndicator,null));
  }
  finally {
    if (jarPlugin != null)     jarPlugin.close();
  }
  return jarFile;
}
