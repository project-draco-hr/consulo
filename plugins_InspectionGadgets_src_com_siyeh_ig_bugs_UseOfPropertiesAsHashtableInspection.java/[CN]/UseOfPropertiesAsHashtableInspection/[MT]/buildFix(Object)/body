{
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)infos[0];
  final String methodName=methodCallExpression.getMethodExpression().getReferenceName();
  final boolean put=HardcodedMethodConstants.PUT.equals(methodName);
  if (!(put || HardcodedMethodConstants.GET.equals(methodName))) {
    return null;
  }
  final PsiExpressionList argumentList=methodCallExpression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  for (  PsiExpression argument : arguments) {
    final PsiType type=argument.getType();
    if (type == null || !type.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {
      return null;
    }
  }
  return new UseOfPropertiesAsHashtableFix(put);
}
