{
  FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createMultipleJavaPathDescriptor();
  descriptor.setTitle("Exclude from Library");
  descriptor.setDescription("Select directories which should be excluded from the library content. Content of excluded directories won't be processed by IDE.");
  Set<VirtualFile> roots=getNotExcludedRoots();
  descriptor.setRoots(roots.toArray(new VirtualFile[roots.size()]));
  if (roots.size() < 2) {
    descriptor.setIsTreeRootVisible(true);
  }
  VirtualFile toSelect=null;
  for (  Object o : getSelectedElements()) {
    Object itemElement=o instanceof ExcludedRootElement ? ((ExcludedRootElement)o).getParentDescriptor() : o;
    if (itemElement instanceof ItemElement) {
      toSelect=VirtualFileManager.getInstance().findFileByUrl(((ItemElement)itemElement).getUrl());
      break;
    }
  }
  final VirtualFile[] files=FileChooser.chooseFiles(descriptor,myPanel,myProject,toSelect);
  if (files.length > 0) {
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      @Override public void run(){
        for (        VirtualFile file : files) {
          getLibraryEditor().addExcludedRoot(file.getUrl());
        }
      }
    }
);
    myLastChosen=files[0];
    libraryChanged(true);
  }
}
