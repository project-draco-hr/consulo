{
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator(myTree).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      addRow();
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      removeRows();
    }
  }
).disableDownAction().disableUpAction().addExtraAction(new AnActionButton("Copy",PlatformIcons.DUPLICATE_ICON){
    @Override public void actionPerformed(    AnActionEvent e){
      copyRow();
    }
    @Override public void updateButton(    AnActionEvent e){
      e.getPresentation().setEnabled(getTemplate(getSingleSelectedIndex()) != null);
    }
  }
);
  if (getSchemesManager().isExportAvailable()) {
    decorator.addExtraAction(new AnActionButton("Share...",PlatformIcons.EXPORT_ICON){
      @Override public void actionPerformed(      AnActionEvent e){
        exportCurrentGroup();
      }
      @Override public void updateButton(      AnActionEvent e){
        TemplateGroup group=getGroup(getSingleSelectedIndex());
        e.getPresentation().setEnabled(group != null && !getSchemesManager().isShared(group));
      }
    }
);
  }
  if (getSchemesManager().isImportAvailable()) {
    decorator.addExtraAction(new AnActionButton("Import Shared...",PlatformIcons.IMPORT_ICON){
      @Override public void actionPerformed(      AnActionEvent e){
        new SchemesToImportPopup<TemplateGroup,TemplateGroup>(TemplateListPanel.this){
          protected void onSchemeSelected(          final TemplateGroup scheme){
            for (            TemplateImpl newTemplate : scheme.getElements()) {
              for (              TemplateImpl existingTemplate : collectAllTemplates()) {
                if (existingTemplate.getKey().equals(newTemplate.getKey())) {
                  Messages.showMessageDialog(TemplateListPanel.this,CodeInsightBundle.message("dialog.edit.template.error.already.exists",existingTemplate.getKey(),existingTemplate.getGroupName()),CodeInsightBundle.message("dialog.edit.template.error.title"),Messages.getErrorIcon());
                  return;
                }
              }
            }
            insertNewGroup(scheme);
            for (            TemplateImpl template : scheme.getElements()) {
              registerTemplate(template);
            }
          }
        }
.show(getSchemesManager(),myTemplateGroups);
      }
    }
);
  }
  return decorator.setToolbarPosition(ActionToolbarPosition.RIGHT);
}
