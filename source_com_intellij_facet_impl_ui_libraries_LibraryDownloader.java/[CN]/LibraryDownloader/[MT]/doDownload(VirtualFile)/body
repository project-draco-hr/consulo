{
  HttpConfigurable.getInstance().setAuthenticator();
  final List<Pair<LibraryDownloadInfo,File>> downloadedFiles=new ArrayList<Pair<LibraryDownloadInfo,File>>();
  final List<VirtualFile> existingFiles=new ArrayList<VirtualFile>();
  final Ref<Exception> exceptionRef=Ref.create(null);
  final Ref<LibraryDownloadInfo> currentLibrary=new Ref<LibraryDownloadInfo>();
  String dialogTitle=IdeBundle.message("progress.download.libraries.title");
  if (myLibraryPresentableName != null) {
    dialogTitle=IdeBundle.message("progress.download.0.libraries.title",StringUtil.capitalize(myLibraryPresentableName));
  }
  ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
      try {
        for (int i=0; i < myLibraryInfos.length; i++) {
          LibraryDownloadInfo info=myLibraryInfos[i];
          currentLibrary.set(info);
          if (indicator != null) {
            indicator.checkCanceled();
            indicator.setText(IdeBundle.message("progress.0.of.1.file.downloaded.text",i,myLibraryInfos.length));
          }
          final VirtualFile existing=dir.findChild(getExpectedFileName(info));
          long size=existing != null ? existing.getLength() : -1;
          if (!download(info,size,downloadedFiles)) {
            existingFiles.add(existing);
          }
        }
      }
 catch (      ProcessCanceledException e) {
        exceptionRef.set(e);
      }
catch (      IOException e) {
        exceptionRef.set(e);
      }
    }
  }
,dialogTitle,true,myProject,myParent);
  Exception exception=exceptionRef.get();
  if (exception == null) {
    try {
      return moveToDir(existingFiles,downloadedFiles,dir);
    }
 catch (    IOException e) {
      final String title=IdeBundle.message("progress.download.libraries.title");
      if (myProject != null) {
        Messages.showErrorDialog(myProject,title,e.getMessage());
      }
 else {
        Messages.showErrorDialog(myParent,title,e.getMessage());
      }
      return VirtualFile.EMPTY_ARRAY;
    }
  }
  deleteFiles(downloadedFiles);
  if (exception instanceof IOException) {
    String message=IdeBundle.message("error.library.download.failed",exception.getMessage());
    if (currentLibrary.get() != null) {
      message+=": " + myMirrorsMap.getDownloadingUrl(currentLibrary.get());
    }
    final boolean tryAgain=IOExceptionDialog.showErrorDialog(IdeBundle.message("progress.download.libraries.title"),message);
    if (tryAgain) {
      return doDownload(dir);
    }
  }
  return VirtualFile.EMPTY_ARRAY;
}
