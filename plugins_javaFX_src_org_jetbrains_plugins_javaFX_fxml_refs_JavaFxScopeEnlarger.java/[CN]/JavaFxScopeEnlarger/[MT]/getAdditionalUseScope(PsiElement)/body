{
  PsiClass containingClass=null;
  if (element instanceof PsiField) {
    containingClass=((PsiField)element).getContainingClass();
  }
 else   if (element instanceof PsiParameter) {
    final PsiElement declarationScope=((PsiParameter)element).getDeclarationScope();
    if (declarationScope instanceof PsiMethod && PropertyUtil.isSimplePropertySetter((PsiMethod)declarationScope)) {
      containingClass=((PsiMethod)declarationScope).getContainingClass();
    }
  }
  if (containingClass != null) {
    if (element instanceof PsiField && ((PsiField)element).hasModifierProperty(PsiModifier.PRIVATE) || element instanceof PsiParameter) {
      final Project project=element.getProject();
      if (!JavaFxControllerClassIndex.findFxmlWithController(project,containingClass.getQualifiedName()).isEmpty()) {
        final GlobalSearchScope projectScope=GlobalSearchScope.projectScope(project);
        return new DelegatingGlobalSearchScope(projectScope){
          @Override public boolean contains(          VirtualFile file){
            return super.contains(file) && JavaFxFileTypeFactory.isFxml(file);
          }
        }
;
      }
    }
  }
  return null;
}
