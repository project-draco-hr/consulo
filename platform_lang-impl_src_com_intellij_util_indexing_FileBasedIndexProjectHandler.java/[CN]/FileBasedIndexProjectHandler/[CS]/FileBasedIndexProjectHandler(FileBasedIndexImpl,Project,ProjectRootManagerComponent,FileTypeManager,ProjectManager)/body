{
  super(project);
  myIndex=index;
  myRootManager=rootManager;
  myFileTypeManager=ftManager;
  final StartupManagerEx startupManager=(StartupManagerEx)StartupManager.getInstance(project);
  if (startupManager != null) {
    startupManager.registerPreStartupActivity(new Runnable(){
      @Override public void run(){
        UIUtil.invokeAndWaitIfNeeded(new Runnable(){
          @Override public void run(){
            if (!project.isDisposed()) {
              DumbService.getInstance(project).queueTask(new UnindexedFilesUpdater(project,true));
            }
          }
        }
);
        myIndex.registerIndexableSet(FileBasedIndexProjectHandler.this,project);
        projectManager.addProjectManagerListener(project,new ProjectManagerAdapter(){
          private boolean removed=false;
          @Override public void projectClosing(          Project project){
            if (!removed) {
              removed=true;
              myIndex.removeIndexableSet(FileBasedIndexProjectHandler.this);
            }
          }
        }
);
      }
    }
);
  }
}
