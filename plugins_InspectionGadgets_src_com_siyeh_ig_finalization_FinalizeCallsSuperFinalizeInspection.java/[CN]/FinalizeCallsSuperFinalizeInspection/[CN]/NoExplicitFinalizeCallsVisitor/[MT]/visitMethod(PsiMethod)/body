{
  final String methodName=method.getName();
  if (!"finalize".equals(methodName)) {
    return;
  }
  if (method.hasModifierProperty(PsiModifier.NATIVE) || method.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null) {
    return;
  }
  if (m_ignoreForObjectSubclasses) {
    final PsiClass superClass=containingClass.getSuperClass();
    if (superClass != null) {
      final String superClassName=superClass.getQualifiedName();
      if ("java.lang.Object".equals(superClassName)) {
        return;
      }
    }
  }
  final PsiParameterList parameterList=method.getParameterList();
  if (parameterList.getParameters().length != 0) {
    return;
  }
  final CallToSuperFinalizeVisitor visitor=new CallToSuperFinalizeVisitor();
  method.accept(visitor);
  if (visitor.isCallToSuperFinalizeFound()) {
    return;
  }
  registerMethodError(method);
}
