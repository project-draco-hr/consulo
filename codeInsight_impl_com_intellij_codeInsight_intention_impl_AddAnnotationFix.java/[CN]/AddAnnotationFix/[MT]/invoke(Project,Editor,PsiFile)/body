{
  final ExternalAnnotationsManager annotationsManager=ExternalAnnotationsManager.getInstance();
  if (myModifierListOwner != null) {
    final PsiModifierList modifierList=myModifierListOwner.getModifierList();
    LOG.assertTrue(modifierList != null);
    if (modifierList.findAnnotation(myFQN) != null)     return;
    if (annotationsManager.useExternalAnnotations(myModifierListOwner)) {
      annotationsManager.annotateExternally(myModifierListOwner,myFQN);
    }
 else {
      if (!CodeInsightUtil.prepareFileForWrite(file))       return;
      PsiManager manager=file.getManager();
      PsiElementFactory factory=manager.getElementFactory();
      PsiAnnotation annotation=factory.createAnnotationFromText("@" + myFQN,myModifierListOwner);
      PsiElement inserted=modifierList.addAfter(annotation,null);
      CodeStyleManager.getInstance(project).shortenClassReferences(inserted);
    }
  }
 else {
    final PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
    annotationsManager.annotateExternally(PsiTreeUtil.getParentOfType(element,PsiModifierListOwner.class),myFQN);
  }
}
