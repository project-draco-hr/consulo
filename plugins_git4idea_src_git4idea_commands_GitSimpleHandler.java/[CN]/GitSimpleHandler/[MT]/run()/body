{
  if (!isNoSSH()) {
    throw new IllegalStateException("Commands that require SSH could not be run using this method");
  }
  final VcsException[] ex=new VcsException[1];
  final String[] result=new String[1];
  addListener(new GitHandlerListener(){
    public void processTerminted(    final int exitCode){
      if (exitCode == 0) {
        result[0]=getStdout();
      }
 else {
        String msg=getStderr();
        if (msg.length() == 0) {
          msg=getStdout();
        }
        if (msg.length() == 0) {
          msg=GitBundle.message("git.error.exit",exitCode);
        }
        ex[0]=new VcsException(msg);
      }
    }
    public void startFailed(    final Throwable exception){
      ex[0]=new VcsException("Process failed to start: " + exception.toString(),exception);
    }
  }
);
  start();
  if (isStarted()) {
    waitFor();
  }
  if (ex[0] != null) {
    throw ex[0];
  }
  return result[0];
}
