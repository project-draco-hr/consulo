{
  final Module module=ModuleManager.getInstance(getProject()).findModuleByName(dynamicProperty.getModuleName());
  final File moduleXML=myPathsToXmls.get(module);
  Document document;
  try {
    document=JDOMUtil.loadDocument(moduleXML);
  }
 catch (  JDOMException e) {
    document=new Document();
  }
catch (  IOException e) {
    return null;
  }
  Element rootElement;
  if (document.hasRootElement()) {
    rootElement=document.getRootElement();
  }
 else {
    rootElement=new Element(DynamicPropertyXMLElement.PROPERTIES_TAG_NAME);
  }
  final String typeQualifiedName=dynamicProperty.getTypeQualifiedName();
  final List definedProperties=rootElement.getContent(new Filter(){
    public boolean matches(    Object o){
      if (!(o instanceof Element))       return false;
      if (!PROPERTY_TAG_NAME.equals(((Element)o).getQualifiedName()))       return false;
      return typeQualifiedName.equals(((Element)o).getAttribute(QUALIFIED_TYPE_TAG_NAME).getValue());
    }
  }
);
  Element newRootElement;
  if (definedProperties != null && definedProperties.size() != 0) {
    if (definedProperties.size() > 1)     return null;
    final Element definedTypeDef=((Element)definedProperties.get(0));
    final List definedPropertiesInTypeDef=definedTypeDef.getContent(new Filter(){
      public boolean matches(      Object o){
        if (!(o instanceof Element))         return false;
        if (!NAME_PROPERTY_TAG_NAME.equals(((Element)o).getQualifiedName()))         return false;
        return dynamicProperty.getPropertyName().equals(((Element)o).getText());
      }
    }
);
    if (definedPropertiesInTypeDef == null || (definedPropertiesInTypeDef != null && definedPropertiesInTypeDef.size() == 0)) {
      definedTypeDef.addContent(new DynamicPropertyNameElement(dynamicProperty.getPropertyName()));
    }
    newRootElement=rootElement;
  }
 else {
    rootElement.addContent(new DynamicPropertyXMLElementBase(dynamicProperty));
    newRootElement=rootElement;
  }
  FileWriter writer=null;
  try {
    writer=new FileWriter(moduleXML);
    JDOMUtil.writeElement(newRootElement,writer,"\n");
  }
 catch (  IOException e) {
  }
 finally {
    try {
      if (writer != null) {
        writer.flush();
        writer.close();
      }
    }
 catch (    IOException e) {
    }
  }
  return dynamicProperty;
}
