{
  String st=null;
  while (true) {
    int ttype=tokenizer.nextToken();
switch (ttype) {
case PosBufferTokenizer.TT_EOF:
      tokenStart=endOffset;
    tokenEnd=endOffset;
  tokenType=null;
return;
case PosBufferTokenizer.TT_WHITESPACE:
tokenType=CustomHighlighterTokenType.WHITESPACE;
break;
case PosBufferTokenizer.TT_WORD:
st=tokenizer.sval;
if (table.getKeywords1().contains(st)) {
tokenType=CustomHighlighterTokenType.KEYWORD_1;
}
 else if (table.getKeywords2().contains(st)) {
tokenType=CustomHighlighterTokenType.KEYWORD_2;
}
 else if (table.getKeywords3().contains(st)) {
tokenType=CustomHighlighterTokenType.KEYWORD_3;
}
 else if (table.getKeywords4().contains(st)) {
tokenType=CustomHighlighterTokenType.KEYWORD_4;
}
 else {
tokenType=CustomHighlighterTokenType.IDENTIFIER;
}
break;
case PosBufferTokenizer.TT_NUMBER:
tokenType=CustomHighlighterTokenType.NUMBER;
break;
case PosBufferTokenizer.TT_QUOTE:
tokenType=CustomHighlighterTokenType.STRING;
break;
default :
if (lineComment != null && !"".equals(lineComment.trim())) {
if (ttype == lineComment.charAt(0) && tokenizer.matchString(lineComment,1)) {
tokenType=CustomHighlighterTokenType.LINE_COMMENT;
tokenStart=tokenizer.getPos() - lineComment.length();
tokenizer.skipToEol();
tokenEnd=tokenizer.getPos();
return;
}
}
if (startComment != null && !"".equals(startComment.trim())) {
if (ttype == startComment.charAt(0) && tokenizer.matchString(startComment,1)) {
tokenType=CustomHighlighterTokenType.MULTI_LINE_COMMENT;
tokenStart=tokenizer.getPos() - startComment.length();
tokenizer.skipToStr(endComment);
tokenEnd=tokenizer.getPos();
return;
}
}
tokenType=CustomHighlighterTokenType.CHARACTER;
break;
}
tokenStart=tokenizer.startOffset;
tokenEnd=tokenizer.endOffset;
return;
}
}
