{
  if (!isSingleToolInSelection())   return;
  final TreePath path;
  if (myTree.hasFocus()) {
    path=myTree.getLeadSelectionPath();
  }
 else {
    path=null;
  }
  if (path == null)   return;
  DefaultActionGroup actions=new DefaultActionGroup();
  actions.add(ActionManager.getInstance().getAction(IdeActions.ACTION_EDIT_SOURCE));
  actions.add(ActionManager.getInstance().getAction(IdeActions.ACTION_FIND_USAGES));
  final InspectionTool tool=getSelectedTool();
  final QuickFixAction[] quickFixes=tool.getQuickFixes();
  if (quickFixes != null) {
    for (int i=0; i < quickFixes.length; i++) {
      actions.add(quickFixes[i]);
    }
  }
  actions.add(ActionManager.getInstance().getAction(IdeActions.GROUP_VERSION_CONTROLS));
  ActionPopupMenu menu=ActionManager.getInstance().createActionPopupMenu(ActionPlaces.CODE_INSPECTION,actions);
  menu.getComponent().show(component,x,y);
}
