{
  final String referenceName=reference.getReferenceName();
  if (referenceName == null) {
    return false;
  }
  final Project project=reference.getProject();
  final JavaPsiFacade psiFacade=JavaPsiFacade.getInstance(project);
  final PsiResolveHelper resolveHelper=psiFacade.getResolveHelper();
  if (member instanceof PsiMethod) {
    final PsiElementFactory factory=psiFacade.getElementFactory();
    final PsiExpression expression=factory.createExpressionFromText(referenceName + "()",reference);
    final CandidateInfo[] methodCandidates=resolveHelper.getReferencedMethodCandidates((PsiCallExpression)expression,false);
    for (    CandidateInfo methodCandidate : methodCandidates) {
      if (!(methodCandidate.getCurrentFileResolveScope() instanceof PsiImportStaticStatement)) {
        return false;
      }
    }
  }
 else   if (member instanceof PsiField) {
    final PsiVariable variable=resolveHelper.resolveAccessibleReferencedVariable(referenceName,reference);
    if (!member.equals(variable)) {
      return false;
    }
  }
 else   if (member instanceof PsiClass) {
    final PsiClass aClass=resolveHelper.resolveReferencedClass(referenceName,reference);
    if (!member.equals(aClass)) {
      return false;
    }
  }
  return true;
}
