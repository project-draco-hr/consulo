{
  final PsiElement problemElement=descriptor.getPsiElement();
  if (problemElement == null) {
    return false;
  }
  final PsiFile containingPsiFile=problemElement.getContainingFile();
  if (containingPsiFile == null) {
    return false;
  }
  final VirtualFile virtualFile=containingPsiFile.getVirtualFile();
  final PsiManager psiManager=problemElement.getManager();
  final Project project=psiManager.getProject();
  final ReadonlyStatusHandler handler=ReadonlyStatusHandler.getInstance(project);
  return handler.ensureFilesWritable(new VirtualFile[]{virtualFile}).hasReadonlyFiles();
}
