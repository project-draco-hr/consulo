{
  final PsiMethod method1=(PsiMethod)one.getElement();
  final PsiMethod method2=(PsiMethod)two.getElement();
  PsiClass class1=method1.getContainingClass();
  PsiClass class2=method2.getContainingClass();
  if (method1 != method2 && class1 == class2)   return false;
  final PsiParameter[] params1=method1.getParameterList().getParameters();
  final PsiParameter[] params2=method2.getParameterList().getParameters();
  if (params1.length != params2.length)   return false;
  final PsiSubstitutor substitutor1=one.getSubstitutor();
  final PsiSubstitutor substitutor2=two.getSubstitutor();
  for (int i=0; i < params1.length; i++) {
    final PsiType type1=substitutor1.substitute(params1[i].getType());
    final PsiType type2=substitutor2.substitute(params2[i].getType());
    if (type1 == null || !type1.equals(type2)) {
      return false;
    }
  }
  if (!Comparing.equal(method1.getReturnType(),method2.getReturnType()))   return false;
  return true;
}
