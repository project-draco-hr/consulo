{
  PsiClass innerMostClass=null;
  for (  CandidateInfo info : conflicts) {
    final PsiClass containingClass=((PsiMember)info.getElement()).getContainingClass();
    if (innerMostClass == null || PsiTreeUtil.isAncestor(innerMostClass,containingClass,true)) {
      innerMostClass=containingClass;
    }
  }
  for (Iterator<CandidateInfo> iterator=conflicts.iterator(); iterator.hasNext(); ) {
    CandidateInfo info=iterator.next();
    final PsiClass containingClass=((PsiMember)info.getElement()).getContainingClass();
    if (PsiTreeUtil.isAncestor(containingClass,innerMostClass,true)) {
      iterator.remove();
    }
  }
}
