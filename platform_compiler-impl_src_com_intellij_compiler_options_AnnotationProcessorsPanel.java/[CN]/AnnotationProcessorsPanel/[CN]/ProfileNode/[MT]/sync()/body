{
  final List<Module> nodeModules=new ArrayList<Module>();
  if (myIsDefault) {
    final Set<String> nonDefaultProfileModules=new HashSet<String>();
    for (    ProcessorConfigProfile profile : myModuleProfiles) {
      nonDefaultProfileModules.addAll(profile.getModuleNames());
    }
    for (    Map.Entry<String,Module> entry : myAllModulesMap.entrySet()) {
      if (!nonDefaultProfileModules.contains(entry.getKey())) {
        nodeModules.add(entry.getValue());
      }
    }
  }
 else {
    for (    String moduleName : myProfile.getModuleNames()) {
      final Module module=myAllModulesMap.get(moduleName);
      if (module != null) {
        nodeModules.add(module);
      }
    }
  }
  Collections.sort(nodeModules,ModuleComparator.INSTANCE);
  final Vector vector=new Vector();
  for (  Module module : nodeModules) {
    vector.add(new MyModuleNode(module,this));
  }
  children=vector;
  return this;
}
