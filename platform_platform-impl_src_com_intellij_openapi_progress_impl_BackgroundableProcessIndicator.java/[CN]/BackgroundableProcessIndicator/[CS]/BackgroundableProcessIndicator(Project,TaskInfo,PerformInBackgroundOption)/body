{
  super(info.isCancellable(),project != null && !project.isDefault(),project,info.getCancelText());
  if (project != null) {
    final ProjectManagerAdapter myListener=new ProjectManagerAdapter(){
      public void projectClosing(      Project closingProject){
        if (isRunning()) {
          cancel();
        }
      }
    }
;
    ProjectManager.getInstance().addProjectManagerListener(project,myListener);
    Disposer.register(this,new Disposable(){
      @Override public void dispose(){
        ProjectManager.getInstance().removeProjectManagerListener(project,myListener);
      }
    }
);
  }
  setOwnerTask(info);
  setProcessId(info.getProcessId());
  myOption=option;
  myInfo=info;
  setTitle(info.getTitle());
  final Project nonDefaultProject=project == null || project.isDisposed() ? null : project.isDefault() ? null : project;
  final IdeFrame frame=((WindowManagerEx)WindowManager.getInstance()).findFrameFor(nonDefaultProject);
  myStatusBar=frame != null ? (StatusBarEx)frame.getStatusBar() : null;
  myBackgrounded=shouldStartInBackground();
  if (myBackgrounded) {
    doBackground();
  }
}
