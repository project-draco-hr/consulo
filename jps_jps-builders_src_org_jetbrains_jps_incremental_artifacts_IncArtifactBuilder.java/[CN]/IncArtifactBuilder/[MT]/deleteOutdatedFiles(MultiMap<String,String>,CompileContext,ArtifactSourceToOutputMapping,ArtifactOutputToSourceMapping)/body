{
  if (filesToDelete.isEmpty())   return;
  context.processMessage(new ProgressMessage("Deleting outdated files..."));
  int notDeletedFilesCount=0;
  final THashSet<String> notDeletedPaths=new THashSet<String>();
  final THashSet<String> deletedPaths=new THashSet<String>();
  for (  String filePath : filesToDelete.keySet()) {
    if (notDeletedPaths.contains(filePath)) {
      continue;
    }
    boolean deleted=deletedPaths.contains(filePath);
    if (!deleted) {
      deleted=FileUtil.delete(new File(FileUtil.toSystemDependentName(filePath)));
    }
    if (deleted) {
      context.getLoggingManager().getArtifactBuilderLogger().fileDeleted(filePath);
      outSrcMapping.remove(filePath);
      deletedPaths.add(filePath);
      for (      String sourcePath : filesToDelete.get(filePath)) {
        srcOutMapping.removeValue(sourcePath,filePath);
      }
    }
 else {
      notDeletedPaths.add(filePath);
      if (notDeletedFilesCount++ > 50) {
        context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.WARNING,"Deletion of outdated files stopped because too many files cannot be deleted"));
        break;
      }
      context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.WARNING,"Cannot delete file '" + filePath + "'"));
    }
  }
}
