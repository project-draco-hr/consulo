{
  context.addBuildListener(new BuildListener(){
    @Override public void filesGenerated(    Collection<Pair<String,String>> paths){
      BuildFSState fsState=context.getProjectDescriptor().fsState;
      BuildRootIndex rootsIndex=context.getProjectDescriptor().getBuildRootIndex();
      for (      Pair<String,String> pair : paths) {
        File file=new File(pair.getFirst(),pair.getSecond());
        Collection<ArtifactRootDescriptor> descriptors=rootsIndex.findAllParentDescriptors(file,Collections.singletonList(ArtifactBuildTargetType.INSTANCE),context);
        for (        ArtifactRootDescriptor descriptor : descriptors) {
          try {
            fsState.markDirty(context,file,descriptor,context.getProjectDescriptor().timestamps.getStorage(),false);
          }
 catch (          IOException ignored) {
          }
        }
      }
    }
    @Override public void filesDeleted(    Collection<String> paths){
      BuildFSState state=context.getProjectDescriptor().fsState;
      BuildRootIndex rootsIndex=context.getProjectDescriptor().getBuildRootIndex();
      for (      String path : paths) {
        File file=new File(FileUtil.toSystemDependentName(path));
        Collection<ArtifactRootDescriptor> descriptors=rootsIndex.findAllParentDescriptors(file,Collections.singletonList(ArtifactBuildTargetType.INSTANCE),context);
        for (        ArtifactRootDescriptor descriptor : descriptors) {
          state.registerDeleted(descriptor.getTarget(),file);
        }
      }
    }
  }
);
}
