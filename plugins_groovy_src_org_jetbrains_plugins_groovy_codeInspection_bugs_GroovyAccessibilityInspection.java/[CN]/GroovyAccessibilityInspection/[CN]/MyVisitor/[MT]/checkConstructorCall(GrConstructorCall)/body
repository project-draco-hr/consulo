{
  final GroovyResolveResult result=call.advancedResolve();
  if (result.getElement() == null)   return;
  final PsiElement constructor=result.getElement();
  if (!(constructor instanceof PsiMethod))   return;
  if (!result.isAccessible()) {
    PsiElement refElement=null;
    if (call instanceof GrNewExpression) {
      refElement=((GrNewExpression)call).getReferenceElement();
    }
 else     if (call instanceof GrConstructorInvocation) {
      refElement=((GrConstructorInvocation)call).getThisOrSuperKeyword();
    }
    if (refElement == null) {
      refElement=call;
    }
    registerError(refElement,PsiFormatUtil.formatMethod((PsiMethod)constructor,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.TYPE_AFTER| PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE));
  }
}
