{
  LOG.assertTrue(ORDER_ENTRY_ELEMENT_NAME.equals(element.getName()));
  final String type=element.getAttributeValue(ORDER_ENTRY_TYPE_ATTR);
  if (type == null) {
    throw new InvalidDataException();
  }
  if (ModuleSourceOrderEntryImpl.ENTRY_TYPE.equals(type)) {
    return new ModuleSourceOrderEntryImpl(element,rootModel);
  }
 else   if (ModuleJdkOrderEntryImpl.ENTRY_TYPE.equals(type)) {
    return new ModuleJdkOrderEntryImpl(element,rootModel,projectRootManager);
  }
 else   if (InheritedJdkOrderEntryImpl.ENTRY_TYPE.equals(type)) {
    return new InheritedJdkOrderEntryImpl(element,rootModel,projectRootManager);
  }
 else   if (LibraryOrderEntryImpl.ENTRY_TYPE.equals(type)) {
    return new LibraryOrderEntryImpl(element,rootModel,projectRootManager);
  }
 else   if (ModuleLibraryOrderEntryImpl.ENTRY_TYPE.equals(type)) {
    return new ModuleLibraryOrderEntryImpl(element,rootModel,projectRootManager);
  }
 else   if (ModuleOrderEntryImpl.ENTRY_TYPE.equals(type)) {
    return new ModuleOrderEntryImpl(element,rootModel);
  }
 else   throw new InvalidDataException("Unknown order entry type:" + type);
}
