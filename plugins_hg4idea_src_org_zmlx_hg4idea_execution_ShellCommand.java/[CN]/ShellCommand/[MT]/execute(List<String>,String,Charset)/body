{
  if (commandLine == null || commandLine.isEmpty()) {
    throw new IllegalArgumentException("commandLine is empty");
  }
  if (myRunViaBash) {
    String hgCommand=StringUtil.join(commandLine," ");
    hgCommand=escapeBashControlCharacters(hgCommand);
    commandLine=new ArrayList<String>(3);
    commandLine.add("bash");
    commandLine.add("-cl");
    commandLine.add(hgCommand);
  }
  StringWriter out=new StringWriter();
  StringWriter err=new StringWriter();
  try {
    ProcessBuilder processBuilder=new ProcessBuilder(commandLine);
    if (dir != null) {
      processBuilder=processBuilder.directory(new File(dir));
    }
    Process process=processBuilder.start();
    Thread outReaderThread=startReader(new InputStreamReader(process.getInputStream(),charset),out);
    Thread errReaderThread=startReader(new InputStreamReader(process.getErrorStream()),err);
    process.waitFor();
    int exitValue=process.exitValue();
    outReaderThread.join();
    errReaderThread.join();
    return new HgCommandResult(out,err,exitValue);
  }
 catch (  IOException e) {
    throw new ShellCommandException(e);
  }
}
