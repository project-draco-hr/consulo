{
  StopWatch sw=StopWatch.start("joining new commits");
  Function<VcsRef,Integer> ref2Int=new Function<VcsRef,Integer>(){
    @Override public Integer fun(    @NotNull VcsRef ref){
      return myHashMap.getCommitIndex(ref.getCommitHash());
    }
  }
;
  Collection<Integer> prevRefIndices=ContainerUtil.map(ContainerUtil.concat(previousRefs.values()),ref2Int);
  Collection<Integer> newRefIndices=ContainerUtil.map(ContainerUtil.concat(newRefs.values()),ref2Int);
  try {
    List<GraphCommit<Integer>> commits=new VcsLogJoiner<Integer,GraphCommit<Integer>>().addCommits(fullLog,prevRefIndices,recentCommits,newRefIndices).first;
    sw.report();
    return commits;
  }
 catch (  VcsLogRefreshNotEnoughDataException e) {
    LOG.info(e);
  }
catch (  IllegalStateException e) {
    LOG.info(e);
  }
  return null;
}
