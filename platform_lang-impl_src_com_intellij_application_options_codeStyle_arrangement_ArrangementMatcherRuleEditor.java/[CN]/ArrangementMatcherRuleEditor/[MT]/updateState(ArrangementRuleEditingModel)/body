{
  myModel=model;
  for (  ArrangementAtomNodeComponent component : myComponents.values()) {
    component.setEnabled(false);
    component.setSelected(false);
  }
  if (model == null) {
    return;
  }
  Map<ArrangementSettingType,Collection<?>> available=ArrangementConfigUtil.buildAvailableOptions(myFilter,model.getMatchCondition());
  for (  Collection<?> ids : available.values()) {
    for (    Object id : ids) {
      ArrangementAtomNodeComponent component=myComponents.get(id);
      if (component != null) {
        component.setEnabled(true);
        component.setSelected(model.hasCondition(id));
      }
    }
  }
  repaint();
}
