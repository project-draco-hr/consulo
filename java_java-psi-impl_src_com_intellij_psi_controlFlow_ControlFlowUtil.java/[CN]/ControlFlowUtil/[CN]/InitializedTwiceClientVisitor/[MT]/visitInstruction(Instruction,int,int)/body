{
  if (nextOffset > myFlow.getSize())   nextOffset=myFlow.getSize();
  CopyOnWriteList writeVars=writtenVariables[nextOffset];
  CopyOnWriteList writeTwiceVars=writtenTwiceVariables[nextOffset];
  if (instruction instanceof WriteVariableInstruction) {
    final WriteVariableInstruction writeVariableInstruction=(WriteVariableInstruction)instruction;
    final PsiVariable variable=writeVariableInstruction.variable;
    final PsiElement element=myFlow.getElement(offset);
    PsiElement latestWriteVarExpression=null;
    if (writeVars != null) {
      List<VariableInfo> list=writeVars.getList();
      for (      final VariableInfo variableInfo : list) {
        if (variableInfo.variable == variable) {
          latestWriteVarExpression=variableInfo.expression;
          break;
        }
      }
    }
    if (latestWriteVarExpression == null) {
      PsiElement expression=null;
      if (element instanceof PsiAssignmentExpression && ((PsiAssignmentExpression)element).getLExpression() instanceof PsiReferenceExpression) {
        expression=((PsiAssignmentExpression)element).getLExpression();
      }
 else       if (element instanceof PsiPostfixExpression) {
        expression=((PsiPostfixExpression)element).getOperand();
      }
 else       if (element instanceof PsiPrefixExpression) {
        expression=((PsiPrefixExpression)element).getOperand();
      }
 else       if (element instanceof PsiDeclarationStatement) {
        expression=element;
      }
      if (writeVars == null) {
        writeVars=new CopyOnWriteList();
      }
      writeVars=writeVars.add(new VariableInfo(variable,expression));
    }
 else {
      if (writeTwiceVars == null) {
        writeTwiceVars=new CopyOnWriteList();
      }
      writeTwiceVars=writeTwiceVars.add(new VariableInfo(variable,latestWriteVarExpression));
    }
  }
  merge(offset,writeVars,writtenVariables);
  merge(offset,writeTwiceVars,writtenTwiceVariables);
}
