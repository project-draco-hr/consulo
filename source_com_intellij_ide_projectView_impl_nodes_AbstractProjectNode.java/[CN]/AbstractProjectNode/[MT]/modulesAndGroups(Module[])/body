{
  Map<String,List<Module>> groups=new THashMap<String,List<Module>>();
  List<Module> nonGroupedModules=new ArrayList<Module>(Arrays.asList(modules));
  for (int i=0; i < modules.length; i++) {
    final Module module=modules[i];
    final String[] path=ModuleManager.getInstance(getProject()).getModuleGroupPath(module);
    if (path != null) {
      final String topLevelGroupName=path[0];
      List<Module> moduleList=groups.get(topLevelGroupName);
      if (moduleList == null) {
        moduleList=new ArrayList<Module>();
        groups.put(topLevelGroupName,moduleList);
      }
      moduleList.add(module);
      nonGroupedModules.remove(module);
    }
  }
  List<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  for (Iterator<String> iterator=groups.keySet().iterator(); iterator.hasNext(); ) {
    String groupPath=iterator.next();
    result.add(new ModuleGroupNode(getProject(),new ModuleGroup(new String[]{groupPath}),getSettings(),getModuleNodeClass()));
  }
  result.addAll(ProjectViewNode.wrap(nonGroupedModules,getProject(),getModuleNodeClass(),getSettings()));
  return result;
}
