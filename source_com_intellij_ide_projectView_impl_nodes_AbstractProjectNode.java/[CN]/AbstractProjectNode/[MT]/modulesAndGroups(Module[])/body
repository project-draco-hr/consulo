{
  Map<String,List<Module>> groups=new HashMap<String,List<Module>>();
  List<Module> nonGroupedModules=new ArrayList<Module>(Arrays.asList(modules));
  for (int i=0; i < modules.length; i++) {
    final Module module=modules[i];
    String group=ModuleManager.getInstance(getProject()).getModuleGroup(module);
    if (group != null) {
      List<Module> moduleList=groups.get(group);
      if (moduleList == null) {
        moduleList=new ArrayList<Module>();
        groups.put(group,moduleList);
      }
      moduleList.add(module);
      nonGroupedModules.remove(module);
    }
  }
  String[] groupArray=groups.keySet().toArray(ArrayUtil.EMPTY_STRING_ARRAY);
  List<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  for (int j=0; j < groupArray.length; j++) {
    final String name=groupArray[j];
    result.add(new ModuleGroupNode(getProject(),new ModuleGroup(name),getSettings(),getModuleNodeClass()));
  }
  result.addAll(ProjectViewNode.wrap(nonGroupedModules,getProject(),getModuleNodeClass(),getSettings()));
  return result;
}
