{
  Document document=editor.getDocument();
  int docLength=document.getTextLength();
  int psiLength=psiFile.getTextLength();
  PsiDocumentManager manager=PsiDocumentManager.getInstance(psiFile.getProject());
  boolean committed=!manager.isUncommited(document);
  if (docLength == psiLength && committed) {
    return;
  }
  FileViewProvider viewProvider=psiFile.getViewProvider();
  String message="unsuccessful commit:";
  message+="\nmatching=" + (psiFile == manager.getPsiFile(document));
  message+="\ninjectedEditor=" + (editor instanceof EditorWindow);
  message+="\ninjectedFile=" + InjectedLanguageManager.getInstance(psiFile.getProject()).isInjectedFragment(psiFile);
  message+="\ncommitted=" + committed;
  message+="\nfile=" + psiFile.getName();
  message+="\nfile class=" + psiFile.getClass();
  message+="\nfile.valid=" + psiFile.isValid();
  message+="\nfile.physical=" + psiFile.isPhysical();
  message+="\nfile.eventSystemEnabled=" + viewProvider.isEventSystemEnabled();
  message+="\nlanguage=" + psiFile.getLanguage();
  message+="\ndoc.length=" + docLength;
  message+="\npsiFile.length=" + psiLength;
  String fileText=psiFile.getText();
  if (fileText != null) {
    message+="\npsiFile.text.length=" + fileText.length();
  }
  FileASTNode node=psiFile.getNode();
  if (node != null) {
    message+="\nnode.length=" + node.getTextLength();
    String nodeText=node.getText();
    if (nodeText != null) {
      message+="\nnode.text.length=" + nodeText.length();
    }
  }
  VirtualFile virtualFile=viewProvider.getVirtualFile();
  message+="\nvirtualFile=" + virtualFile;
  message+="\nvirtualFile.class=" + virtualFile.getClass();
  message+="\n" + DebugUtil.currentStackTrace();
  throw new LogEventException("Commit unsuccessful",message,new Attachment(virtualFile.getPath() + "_file.txt",fileText),createAstAttachment(psiFile,psiFile),new Attachment("docText.txt",document.getText()));
}
