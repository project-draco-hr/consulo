{
  final FileElement changedFile=TreeUtil.getFileElement(changedElement);
  final PsiManager manager=changedFile.getManager();
  final PomModel model=PomManager.getModel(manager.getProject());
  final TreeAspect treeAspect=model.getModelAspect(TreeAspect.class);
  model.runTransaction(new PomTransactionBase(changedElement.getPsi(),treeAspect){
    @Override public PomModelEvent runInner(){
      final PomModelEvent event=new PomModelEvent(model);
      final TreeChangeEvent destinationTreeChange=new TreeChangeEventImpl(treeAspect,changedFile);
      event.registerChangeSet(treeAspect,destinationTreeChange);
      action.makeChange(destinationTreeChange);
      TreeUtil.clearCaches(changedElement);
      if (changedElement instanceof CompositeElement) {
        ((CompositeElement)changedElement).subtreeChanged();
      }
      return event;
    }
  }
);
}
