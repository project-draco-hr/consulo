{
  final VirtualFile groovyJar=findGroovyJar(module);
  if (groovyJar != null) {
    params.getClassPath().add(groovyJar);
  }
  setToolsJar(params);
  final String groovyHome=FileUtil.toSystemDependentName(ObjectUtils.assertNotNull(LibrariesUtil.getGroovyHomePath(module)));
  setGroovyHome(params,groovyHome);
  String gantHome=GantUtils.getSDKInstallPath(module);
  final String confPath=getConfPath(groovyHome,gantHome);
  params.getVMParametersList().add("-Dgroovy.starter.conf=" + confPath);
  params.getVMParametersList().addParametersString(configuration.vmParams);
  params.setMainClass("org.codehaus.groovy.tools.GroovyStarter");
  params.getProgramParametersList().add("--conf");
  params.getProgramParametersList().add(confPath);
  addClasspathFromRootModel(module,tests,params);
  if (groovyHome.contains("grails")) {
    params.getClassPath().addAllFiles(GroovyUtils.getFilesInDirectoryByPattern(groovyHome + "/lib",".*\\.jar"));
  }
  String antHome=System.getenv("ANT_HOME");
  if (StringUtil.isEmpty(antHome)) {
    antHome=groovyHome;
  }
  params.getVMParametersList().addParametersString("-Dant.home=" + antHome);
  params.getVMParametersList().addParametersString("-Dgant.home=\"" + gantHome + "\"");
  params.getProgramParametersList().add("--main");
  params.getProgramParametersList().add("gant.Gant");
  params.getProgramParametersList().add("--file");
  params.getProgramParametersList().add(FileUtil.toSystemDependentName(configuration.scriptPath));
  params.getProgramParametersList().addParametersString(configuration.scriptParams);
}
