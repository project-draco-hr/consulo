{
  final File[] groovyJars=GroovyUtils.getFilesInDirectoryByPattern(gantHome + "/lib/",GroovyConfigUtils.GROOVY_ALL_JAR_PATTERN);
  if (groovyJars.length > 0) {
    params.getClassPath().add(groovyJars[0].getAbsolutePath());
    return;
  }
  if (module == null) {
    return;
  }
  final String groovyHome=LibrariesUtil.getGroovyHomePath(module);
  if (groovyHome != null) {
    File[] libJars=GroovyUtils.getFilesInDirectoryByPattern(groovyHome + "/lib/",".*\\.jar");
    if (libJars.length > 0) {
      params.getClassPath().addAllFiles(libJars);
      return;
    }
  }
  String[] characteristicClasses=ar(LibrariesUtil.SOME_GROOVY_CLASS,"org.apache.tools.ant.BuildException","org.apache.tools.ant.launch.AntMain","org.apache.commons.cli.ParseException");
  for (  String someClass : characteristicClasses) {
    VirtualFile jar=LibrariesUtil.findJarWithClass(module,someClass);
    if (jar != null) {
      params.getClassPath().add(jar);
    }
  }
}
