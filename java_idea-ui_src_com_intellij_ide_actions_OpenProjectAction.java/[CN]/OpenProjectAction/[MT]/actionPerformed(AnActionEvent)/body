{
  Project project=PlatformDataKeys.PROJECT.getData(e.getDataContext());
  final FileChooserDescriptor descriptor=new OpenProjectFileChooserDescriptor(true);
  descriptor.setTitle(IdeBundle.message("title.open.project"));
  String[] extensions=new String[]{ProjectFileType.DOT_DEFAULT_EXTENSION};
  final ProjectOpenProcessor[] openProcessors=Extensions.getExtensions(ProjectOpenProcessorBase.EXTENSION_POINT_NAME);
  for (  ProjectOpenProcessor openProcessor : openProcessors) {
    final String[] supportedExtensions=((ProjectOpenProcessorBase)openProcessor).getSupportedExtensions();
    if (supportedExtensions != null) {
      extensions=ArrayUtil.mergeArrays(extensions,supportedExtensions,String.class);
    }
  }
  descriptor.setDescription(IdeBundle.message("filter.project.files",StringUtil.join(extensions,", ")));
  final VirtualFile[] files=FileChooser.chooseFiles(project,descriptor);
  if (files.length == 0 || files[0] == null)   return;
  ProjectUtil.openOrImport(files[0].getPath(),project,false);
}
