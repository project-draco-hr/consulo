{
  if (mySpans != null) {
    return;
  }
  RadComponent container=getContainer();
  GridInfo gridInfo=((IGridProvider)container).getVirtualGridInfo();
  Point cellInfo=getCellInfo();
  RadComponent[] rowComponents=gridInfo.components[cellInfo.y];
  int column=cellInfo.x;
  FeedbackLayer layer=myContext.getArea().getFeedbackLayer();
  myContainerBounds=container.getBounds(layer);
  IntArrayList spans=new IntArrayList();
  IntArrayList offsets=new IntArrayList();
  if (right) {
    int span=1;
    for (int i=column; i < column + mySpan; i++) {
      spans.add(span++);
      offsets.add(myContainerBounds.x + gridInfo.vLines[i + 1]);
    }
    for (int i=column + mySpan; i < rowComponents.length; i++) {
      if (rowComponents[i] == null) {
        spans.add(span++);
        offsets.add(myContainerBounds.x + gridInfo.vLines[i + 1]);
      }
 else {
        myErrorFeedback.setBounds(myDecorator.getCellBounds(layer,rowComponents[i]));
        myShowErrorFeedback=true;
        break;
      }
    }
  }
 else {
    IntArrayList columns=new IntArrayList();
    int span=mySpan;
    for (int i=column; i < column + mySpan; i++) {
      spans.add(span--);
      offsets.add(myContainerBounds.x + gridInfo.vLines[i]);
      columns.add(i);
    }
    span=mySpan;
    for (int i=column - 1; i >= 0; i--) {
      if (rowComponents[i] == null) {
        spans.add(0,++span);
        offsets.add(0,myContainerBounds.x + gridInfo.vLines[i]);
        columns.add(0,i);
      }
 else {
        myErrorFeedback.setBounds(myDecorator.getCellBounds(layer,rowComponents[i]));
        myShowErrorFeedback=true;
        break;
      }
    }
    myCells=columns.toArray();
  }
  mySpans=spans.toArray();
  myOffsets=offsets.toArray();
}
