{
  DataContext dataContext=e.getDataContext();
  Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  if (project == null) {
    return;
  }
  PsiElement element=LangDataKeys.PSI_ELEMENT.getData(dataContext);
  if (element == null) {
    Messages.showMessageDialog(project,IdeBundle.message("message.please.select.element.for.javadoc"),IdeBundle.message("title.no.element.selected"),Messages.getErrorIcon());
    return;
  }
  PsiFile context=LangDataKeys.PSI_FILE.getData(dataContext);
  Editor editor=PlatformDataKeys.EDITOR.getData(dataContext);
  PsiElement originalElement=getOriginalElement(context,editor);
  DocumentationManager.storeOriginalElement(project,originalElement,element);
  final DocumentationProvider provider=DocumentationManager.getProviderFromElement(element);
  if (provider instanceof ExternalDocumentationHandler && ((ExternalDocumentationHandler)provider).handleExternal(element,originalElement)) {
    return;
  }
  final List<String> urls=provider.getUrlFor(element,originalElement);
  if (urls != null && !urls.isEmpty()) {
    showExternalJavadoc(urls);
  }
 else   if (provider instanceof ExternalDocumentationProvider) {
    final ExternalDocumentationProvider externalDocumentationProvider=(ExternalDocumentationProvider)provider;
    if (externalDocumentationProvider.canPromptToConfigureDocumentation(element)) {
      externalDocumentationProvider.promptToConfigureDocumentation(element);
    }
  }
}
