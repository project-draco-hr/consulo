{
  Presentation presentation=event.getPresentation();
  DataContext dataContext=event.getDataContext();
  Editor editor=CommonDataKeys.EDITOR.getData(dataContext);
  PsiElement element=getElement(dataContext,editor);
  final PsiElement originalElement=getOriginalElement(CommonDataKeys.PSI_FILE.getData(dataContext),editor);
  DocumentationManager.storeOriginalElement(CommonDataKeys.PROJECT.getData(dataContext),originalElement,element);
  final DocumentationProvider provider=DocumentationManager.getProviderFromElement(element);
  boolean enabled;
  if (provider instanceof ExternalDocumentationProvider) {
    final ExternalDocumentationProvider edProvider=(ExternalDocumentationProvider)provider;
    enabled=edProvider.hasDocumentationFor(element,originalElement) || edProvider.canPromptToConfigureDocumentation(element);
  }
 else {
    final List<String> urls=provider.getUrlFor(element,originalElement);
    enabled=urls != null && !urls.isEmpty();
  }
  if (editor != null) {
    presentation.setEnabled(enabled);
    if (ActionPlaces.isMainMenuOrActionSearch(event.getPlace())) {
      presentation.setVisible(true);
    }
 else {
      presentation.setVisible(enabled);
    }
  }
 else {
    presentation.setEnabled(enabled);
    presentation.setVisible(true);
  }
}
