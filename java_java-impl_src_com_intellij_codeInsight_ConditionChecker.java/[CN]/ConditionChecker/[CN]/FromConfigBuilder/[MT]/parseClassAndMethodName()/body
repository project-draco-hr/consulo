{
  if (!serializedRepresentation.contains("(")) {
    throw new IllegalArgumentException("Name should contain a opening parenthesis.  " + serializedRepresentation);
  }
 else   if (!serializedRepresentation.contains(")")) {
    throw new IllegalArgumentException("Name should contain a closing parenthesis.  " + serializedRepresentation);
  }
 else   if (serializedRepresentation.indexOf("(",serializedRepresentation.indexOf("(") + 1) > -1) {
    throw new IllegalArgumentException("Name should only contain one opening parenthesis.  " + serializedRepresentation);
  }
 else   if (serializedRepresentation.indexOf(")",serializedRepresentation.indexOf(")") + 1) > -1) {
    throw new IllegalArgumentException("Name should only contain one closing parenthesis.  " + serializedRepresentation);
  }
 else   if (serializedRepresentation.indexOf(")") < serializedRepresentation.indexOf("(")) {
    throw new IllegalArgumentException("Opening parenthesis should precede closing parenthesis.  " + serializedRepresentation);
  }
  String classAndMethodName=serializedRepresentation.substring(0,serializedRepresentation.indexOf("("));
  if (!classAndMethodName.contains(".")) {
    throw new IllegalArgumentException("Name should contain a dot between the class name and method name (before the opening parenthesis).  " + serializedRepresentation);
  }
  return classAndMethodName;
}
