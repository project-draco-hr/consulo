{
  final ModalityState modalityState=ModalityState.stateForComponent(getRootPane());
  myLoadingPanel.startLoading();
  myOutgoingCommitsCollector.collect(pushSpecs,new GitOutgoingCommitsCollector.ResultHandler(){
    @Override public void onSuccess(    @NotNull final GitCommitsByRepoAndBranch commits){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          myListPanel.setCommits(pushSpecs.getRepositories(),commits);
          myLoadingPanel.stopLoading();
        }
      }
,modalityState);
    }
    @Override public void onError(    @NotNull final String error){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          myListPanel.displayError(error);
        }
      }
,modalityState);
    }
  }
);
}
