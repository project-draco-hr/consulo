{
  if (repositories.isEmpty()) {
    return Collections.emptyList();
  }
  Iterator<GitRepository> iterator=repositories.iterator();
  List<GitRemote> commonRemotes=new ArrayList<GitRemote>(iterator.next().getRemotes());
  while (iterator.hasNext()) {
    GitRepository repository=iterator.next();
    Collection<String> remoteNames=getRemoteNames(repository);
    for (Iterator<GitRemote> commonIter=commonRemotes.iterator(); commonIter.hasNext(); ) {
      GitRemote remote=commonIter.next();
      if (!remoteNames.contains(remote.getName())) {
        commonIter.remove();
      }
    }
  }
  return commonRemotes;
}
