{
  CompileScope compileScope=myContext.getCompileScope();
  Module[] modules=compileScope.getAffectedModules();
  List<ProcessingItem> items=new ArrayList<ProcessingItem>();
  for (  Module module : modules) {
    AndroidFacet facet=FacetManager.getInstance(module).getFacetByType(AndroidFacet.ID);
    if (facet != null && !facet.getConfiguration().LIBRARY_PROJECT) {
      CompilerModuleExtension extension=CompilerModuleExtension.getInstance(module);
      VirtualFile outputDir=extension.getCompilerOutputPath();
      if (outputDir != null) {
        AndroidFacetConfiguration configuration=facet.getConfiguration();
        AndroidPlatform platform=configuration.getAndroidPlatform();
        if (platform != null) {
          Set<VirtualFile> dependencies=AndroidRootUtil.getExternalLibrariesAndModules(module,outputDir,platform.getLibrary());
          List<VirtualFile> files=new ArrayList<VirtualFile>();
          files.add(outputDir);
          files.addAll(dependencies);
          VirtualFile outputDirForTests=extension.getCompilerOutputPathForTests();
          if (outputDirForTests != null) {
            files.add(outputDirForTests);
          }
          IAndroidTarget target=configuration.getAndroidTarget();
          if (target != null) {
            Set<String> excludedFiles=new HashSet<String>();
            collectClassFilesInLibraryModules(facet,excludedFiles);
            items.add(new DexItem(module,outputDir,target,files,excludedFiles));
          }
        }
      }
    }
  }
  return items.toArray(new ProcessingItem[items.size()]);
}
