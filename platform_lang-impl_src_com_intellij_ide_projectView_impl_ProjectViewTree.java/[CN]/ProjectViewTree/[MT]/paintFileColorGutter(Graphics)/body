{
  final GraphicsConfig config=new GraphicsConfig(g);
  final Rectangle rect=getVisibleRect();
  final int firstVisibleRow=getClosestRowForLocation(rect.x,rect.y);
  final int lastVisibleRow=getClosestRowForLocation(rect.x,rect.y + rect.height);
  for (int row=firstVisibleRow; row <= lastVisibleRow; row++) {
    final TreePath path=getPathForRow(row);
    final Rectangle bounds=getRowBounds(row);
    final Object component=path.getLastPathComponent();
    final Object object=((DefaultMutableTreeNode)component).getUserObject();
    if (object instanceof BasePsiNode) {
      final Object element=((BasePsiNode)object).getValue();
      Color color=null;
      if (element instanceof PsiElement) {
        final PsiElement psi=(PsiElement)element;
        final Project project=psi.getProject();
        final PsiFile file=psi.getContainingFile();
        if (file != null) {
          color=FileColorManager.getInstance(project).getFileColor(file);
        }
 else         if (psi instanceof PsiDirectory) {
          color=FileColorManager.getInstance(project).getFileColor(((PsiDirectory)psi).getVirtualFile());
        }
 else         if (psi instanceof PsiDirectoryContainer) {
          final PsiDirectory[] dirs=((PsiDirectoryContainer)psi).getDirectories();
          for (          PsiDirectory dir : dirs) {
            Color c=FileColorManager.getInstance(project).getFileColor(dir.getVirtualFile());
            if (c != null && color == null) {
              color=c;
            }
 else             if (c != null && color != null) {
              color=null;
              break;
            }
          }
        }
      }
      if (color != null) {
        g.setColor(color);
        g.fillRect(0,bounds.y,getWidth(),bounds.height);
      }
    }
  }
  config.restore();
}
