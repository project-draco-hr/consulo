{
  if (RefactoringUtil.isInStaticContext(match.getMatchStart(),myMethod.getContainingClass())) {
    myMethod.getModifierList().setModifierProperty(PsiModifier.STATIC,true);
  }
  final PsiElementFactory factory=myMethod.getManager().getElementFactory();
  final boolean needQualifier=match.getInstanceExpression() != null;
  final @NonNls String text=needQualifier ? "q." + myMethod.getName() + "()" : myMethod.getName() + "()";
  PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)factory.createExpressionFromText(text,null);
  methodCallExpression=(PsiMethodCallExpression)CodeStyleManager.getInstance(myMethod.getManager()).reformat(methodCallExpression);
  final PsiParameter[] parameters=myMethod.getParameterList().getParameters();
  for (  final PsiParameter parameter : parameters) {
    methodCallExpression.getArgumentList().add(match.getParameterValue(parameter));
  }
  if (needQualifier) {
    methodCallExpression.getMethodExpression().getQualifierExpression().replace(match.getInstanceExpression());
  }
  match.replace(methodCallExpression,null);
}
