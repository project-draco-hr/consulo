{
  final PsiCodeBlock body=method.getBody();
  LOG.assertTrue(body != null);
  final PsiStatement[] statements=body.getStatements();
  final DuplicatesFinder duplicatesFinder;
  final PsiElement[] pattern;
  if (statements.length != 1 || !(statements[0] instanceof PsiReturnStatement)) {
    pattern=statements;
  }
 else {
    final PsiExpression returnValue=((PsiReturnStatement)statements[0]).getReturnValue();
    if (returnValue != null) {
      pattern=new PsiElement[]{returnValue};
    }
 else {
      pattern=statements;
    }
  }
  duplicatesFinder=new DuplicatesFinder(pattern,Arrays.asList(method.getParameterList().getParameters()),new ArrayList<PsiVariable>());
  final List<Match> duplicates=duplicatesFinder.findDuplicates(file);
  if (duplicates.isEmpty()) {
    return false;
  }
  final VirtualFile virtualFile=file.getVirtualFile();
  LOG.assertTrue(virtualFile != null);
  final Editor editor=FileEditorManager.getInstance(project).openTextEditor(new OpenFileDescriptor(project,virtualFile),false);
  LOG.assertTrue(editor != null);
  final int duplicatesNo=duplicates.size();
  final ArrayList<RangeHighlighter> highlighters=new ArrayList<RangeHighlighter>();
  for (  final Match match : duplicates) {
    DuplicatesImpl.highlightMatch(project,editor,match,highlighters);
  }
  final MethodDuplicatesDialog dialog=new MethodDuplicatesDialog(project,method,duplicatesNo);
  dialog.show();
  for (  final RangeHighlighter rangeHighlighter : highlighters) {
    HighlightManager.getInstance(project).removeSegmentHighlighter(editor,rangeHighlighter);
  }
  if (!dialog.isOK())   return true;
  WindowManager.getInstance().getStatusBar(project).setInfo(getStatusMessage(duplicatesNo));
  CommandProcessor.getInstance().executeCommand(project,new Runnable(){
    public void run(){
      PostprocessReformattingAspect.getInstance(project).postponeFormattingInside(new Runnable(){
        public void run(){
          DuplicatesImpl.invoke(project,editor,new MethodDuplicatesMatchProvider(method,duplicates));
        }
      }
);
    }
  }
,REFACTORING_NAME,null);
  WindowManager.getInstance().getStatusBar(project).setInfo("");
  return true;
}
