{
  if (anno != null) {
    GrCodeReferenceElement ref=anno.getClassReference();
    PsiElement resolved=ref.resolve();
    if (resolved instanceof PsiClass) {
      final PsiAnnotation annotationCollector=GrAnnotationCollector.findAnnotationCollector((PsiClass)resolved);
      if (annotationCollector != null) {
        final ArrayList<GrAnnotation> annotations=ContainerUtil.newArrayList();
        GrAnnotationCollector.collectAnnotations(annotations,anno,annotationCollector);
        Set<String> usedNames=ContainerUtil.newHashSet();
        List<LookupElement> result=new ArrayList<LookupElement>();
        for (        GrAnnotation annotation : annotations) {
          final PsiElement resolvedAliased=annotation.getClassReference().resolve();
          if (resolvedAliased instanceof PsiClass && ((PsiClass)resolvedAliased).isAnnotationType()) {
            for (            PsiMethod method : ((PsiClass)resolvedAliased).getMethods()) {
              if (usedNames.add(method.getName())) {
                result.addAll(createLookupElements(new GroovyResolveResultImpl(method,true),false,matcher,null));
              }
            }
          }
        }
        return result;
      }
 else       if (((PsiClass)resolved).isAnnotationType()) {
        List<LookupElement> result=new ArrayList<LookupElement>();
        for (        PsiMethod method : ((PsiClass)resolved).getMethods()) {
          result.addAll(createLookupElements(new GroovyResolveResultImpl(method,true),false,matcher,null));
        }
        return result;
      }
    }
  }
  return Collections.emptyList();
}
