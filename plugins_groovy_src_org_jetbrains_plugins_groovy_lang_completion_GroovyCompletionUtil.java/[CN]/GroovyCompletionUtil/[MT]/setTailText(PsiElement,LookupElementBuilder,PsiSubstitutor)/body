{
  if (element instanceof PsiMethod) {
    PsiClass aClass=((PsiMethod)element).getContainingClass();
    if (aClass != null && aClass.isAnnotationType()) {
      return builder;
    }
    builder=builder.withTailText(PsiFormatUtil.formatMethod((PsiMethod)element,substitutor,PsiFormatUtilBase.SHOW_PARAMETERS,PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_TYPE));
  }
 else   if (element instanceof PsiClass) {
    String tailText=getPackageText((PsiClass)element);
    final PsiClass psiClass=(PsiClass)element;
    if ((substitutor == null || substitutor.getSubstitutionMap().size() == 0) && psiClass.getTypeParameters().length > 0) {
      tailText="<" + StringUtil.join(psiClass.getTypeParameters(),new Function<PsiTypeParameter,String>(){
        public String fun(        PsiTypeParameter psiTypeParameter){
          return psiTypeParameter.getName();
        }
      }
,"," + (showSpaceAfterComma(psiClass) ? " " : "")) + ">"+ tailText;
    }
    builder=builder.withTailText(tailText,true);
  }
  return builder;
}
