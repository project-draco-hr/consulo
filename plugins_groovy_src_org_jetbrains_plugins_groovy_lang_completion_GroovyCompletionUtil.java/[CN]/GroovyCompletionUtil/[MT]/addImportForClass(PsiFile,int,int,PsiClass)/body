{
  final PsiManager manager=file.getManager();
  final Document document=FileDocumentManager.getInstance().getDocument(file.getViewProvider().getVirtualFile());
  int newStartOffset=startOffset;
  final PsiReference reference=file.findReferenceAt(startOffset);
  if (reference != null) {
    final PsiElement resolved=reference.resolve();
    if (resolved instanceof PsiClass) {
      if (((PsiClass)resolved).getQualifiedName() == null || manager.areElementsEquivalent(aClass,resolved)) {
        return newStartOffset;
      }
    }
  }
  String name=aClass.getName();
  document.replaceString(startOffset,endOffset,name);
  final RangeMarker toDelete=JavaCompletionUtil.insertTemporary(endOffset,document," ");
  PsiDocumentManager.getInstance(manager.getProject()).commitAllDocuments();
  final PsiReference ref=file.findReferenceAt(startOffset);
  if (ref instanceof GrCodeReferenceElement && aClass.isValid()) {
    PsiElement newElement=ref.bindToElement(aClass);
    RangeMarker marker=document.createRangeMarker(newElement.getTextRange());
    CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(newElement);
    newStartOffset=marker.getStartOffset();
  }
  if (toDelete.isValid()) {
    document.deleteString(toDelete.getStartOffset(),toDelete.getEndOffset());
  }
  return newStartOffset;
}
