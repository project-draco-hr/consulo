{
  if (element.getParent() instanceof GrTypeDefinitionBody) {
    String text=element.getContainingFile().getText();
    int i=CharArrayUtil.shiftBackward(text,element.getTextRange().getStartOffset() - 1," \t");
    return i >= 0 && (text.charAt(i) == '\n' || text.charAt(i) == '{');
  }
  final PsiElement parent=element.getParent();
  if (!(parent instanceof GrVariable))   return false;
  if (acceptParameter && parent instanceof GrParameter) {
    return ((GrParameter)parent).getTypeElementGroovy() == null;
  }
  final PsiElement pparent=parent.getParent();
  if (!(pparent instanceof GrVariableDeclaration))   return false;
  if (((GrVariableDeclaration)pparent).isTuple())   return false;
  final GrVariableDeclaration variableDeclaration=(GrVariableDeclaration)pparent;
  if (variableDeclaration.getTypeElementGroovy() != null)   return false;
  return variableDeclaration.getVariables()[0] == parent;
}
