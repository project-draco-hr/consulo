{
  super(new BorderLayout(0,1));
  myConfiguration=properties.getConfiguration();
  myLogFilesManager=new LogFilesManager(properties.getProject(),this);
  myPrinter=printer;
  myLeftPane=ScrollPaneFactory.createScrollPane();
  myStatisticsPanel=new StatisticsPanel();
  myToolbarPanel=new JUnitToolbarPanel(properties,runnerSettings,configurationSettings);
  myStatusLine=new StatusLine();
  myTreeView=new JUnitTestTreeView();
  final Splitter splitter=createSplitter(PROPORTION_PROPERTY,DEFAULT_PROPORTION);
  Disposer.register(this,new Disposable(){
    public void dispose(){
      remove(splitter);
      splitter.dispose();
    }
  }
);
  add(splitter);
  final JPanel leftPanel=new JPanel(new BorderLayout());
  leftPanel.add(myLeftPane,BorderLayout.CENTER);
  leftPanel.add(myToolbarPanel,BorderLayout.NORTH);
  splitter.setFirstComponent(leftPanel);
  myStatusLine.setMinimumSize(new Dimension(0,myStatusLine.getMinimumSize().height));
  final JPanel rightPanel=new JPanel(new BorderLayout());
  rightPanel.add(SameHeightPanel.wrap(myStatusLine,myToolbarPanel),BorderLayout.NORTH);
  myTabs=new TabbedPaneWrapper(SwingConstants.TOP);
  myTabs.addTab(ExecutionBundle.message("output.tab.title"),OUTPUT_TAB_ICON,console,null);
  myTabs.addTab(ExecutionBundle.message("statistics.tab.title"),STATISTICS_TAB_ICON,myStatisticsPanel,null);
  initAdditionalTabs();
  rightPanel.add(myTabs.getComponent(),BorderLayout.CENTER);
  splitter.setSecondComponent(rightPanel);
  myStartingProgress=new StartingProgress(myTreeView);
  setLeftComponent(myTreeView);
}
