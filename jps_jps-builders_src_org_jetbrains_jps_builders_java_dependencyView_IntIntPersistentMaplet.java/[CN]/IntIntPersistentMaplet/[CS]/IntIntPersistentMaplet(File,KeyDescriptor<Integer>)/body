{
  try {
    myMap=new PersistentHashMap<Integer,Integer>(file,k,new DataExternalizer<Integer>(){
      @Override public void save(      DataOutput out,      Integer value) throws IOException {
        out.writeInt(value);
      }
      @Override public Integer read(      DataInput in) throws IOException {
        return in.readInt();
      }
    }
);
    myCache=new SLRUCache<Integer,Object>(CACHE_SIZE,CACHE_SIZE){
      @NotNull @Override public Object createValue(      Integer key){
        try {
          final Integer v1=myMap.get(key);
          return v1 == null ? NULL_OBJ : v1;
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
;
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
