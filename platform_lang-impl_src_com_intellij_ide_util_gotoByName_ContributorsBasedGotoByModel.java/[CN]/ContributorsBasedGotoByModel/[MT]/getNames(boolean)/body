{
  final Set<String> names=new ConcurrentHashSet<String>();
  long start=System.currentTimeMillis();
  List<ChooseByNameContributor> liveContribs=filterDumb(myContributors);
  JobLauncher.getInstance().invokeConcurrentlyUnderProgress(liveContribs,ProgressManager.getInstance().getProgressIndicator(),false,new Processor<ChooseByNameContributor>(){
    @Override public boolean process(    ChooseByNameContributor contributor){
      try {
        if (!myProject.isDisposed()) {
          ContainerUtil.addAll(names,contributor.getNames(myProject,checkBoxState));
        }
      }
 catch (      ProcessCanceledException ex) {
      }
catch (      IndexNotReadyException ex) {
      }
catch (      Exception ex) {
        LOG.error(ex);
      }
      return true;
    }
  }
);
  long finish=System.currentTimeMillis();
  if (LOG.isDebugEnabled()) {
    LOG.debug("getNames(): " + (finish - start) + "ms; (got "+ names.size()+ " elements)");
  }
  return ArrayUtil.toStringArray(names);
}
