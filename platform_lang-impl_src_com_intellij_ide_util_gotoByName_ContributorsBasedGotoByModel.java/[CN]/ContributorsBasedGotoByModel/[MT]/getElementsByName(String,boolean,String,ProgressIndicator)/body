{
  final List<NavigationItem> items=Collections.synchronizedList(new ArrayList<NavigationItem>());
  Processor<ChooseByNameContributor> processor=new Processor<ChooseByNameContributor>(){
    @Override public boolean process(    ChooseByNameContributor contributor){
      if (myProject.isDisposed()) {
        return true;
      }
      try {
        for (        NavigationItem item : contributor.getItemsByName(name,pattern,myProject,checkBoxState)) {
          if (item == null) {
            PluginId pluginId=PluginManager.getPluginByClassName(contributor.getClass().getName());
            if (pluginId != null) {
              LOG.error(new PluginException("null item from contributor " + contributor + " for name "+ name,pluginId));
            }
 else {
              LOG.error("null item from contributor " + contributor + " for name "+ name);
            }
            continue;
          }
          if (acceptItem(item)) {
            items.add(item);
          }
        }
      }
 catch (      ProcessCanceledException ex) {
      }
catch (      Exception ex) {
        LOG.error(ex);
      }
      return true;
    }
  }
;
  JobLauncher.getInstance().invokeConcurrentlyUnderProgress(filterDumb(myContributors),canceled,false,processor);
  return ArrayUtil.toObjectArray(items);
}
