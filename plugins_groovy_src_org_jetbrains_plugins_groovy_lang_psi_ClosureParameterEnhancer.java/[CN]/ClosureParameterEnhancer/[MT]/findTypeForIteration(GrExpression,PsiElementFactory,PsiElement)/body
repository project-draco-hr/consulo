{
  PsiType iterType=qualifier.getType();
  if (iterType == null)   return null;
  if (iterType instanceof PsiArrayType) {
    return ((PsiArrayType)iterType).getComponentType();
  }
  if (iterType instanceof GrTupleType) {
    PsiType[] types=((GrTupleType)iterType).getParameters();
    return types.length == 1 ? types[0] : null;
  }
  if (InheritanceUtil.isInheritor(iterType,"groovy.lang.IntRange")) {
    return factory.createTypeFromText(CommonClassNames.JAVA_LANG_INTEGER,context);
  }
  if (InheritanceUtil.isInheritor(iterType,"groovy.lang.ObjectRange")) {
    PsiElement element=qualifier;
    element=org.jetbrains.plugins.groovy.lang.psi.util.PsiUtil.skipParentheses(element,false);
    if (element instanceof GrReferenceExpression) {
      GrReferenceExpression ref=(GrReferenceExpression)element;
      element=org.jetbrains.plugins.groovy.lang.psi.util.PsiUtil.skipParentheses(ref.resolve(),false);
    }
    if (element instanceof GrRangeExpression) {
      return getRangeElementType((GrRangeExpression)element);
    }
    return null;
  }
  PsiType res=PsiUtil.extractIterableTypeParameter(iterType,true);
  if (res != null) {
    return res;
  }
  if (iterType.equalsToText(CommonClassNames.JAVA_LANG_STRING) || iterType.equalsToText("java.io.File")) {
    return factory.createTypeFromText(CommonClassNames.JAVA_LANG_STRING,context);
  }
  if (InheritanceUtil.isInheritor(iterType,CommonClassNames.JAVA_UTIL_MAP)) {
    return getEntryForMap(iterType,factory,context);
  }
  return null;
}
