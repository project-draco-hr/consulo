{
  genPageHeader(buf,refEntity);
  if (refEntity instanceof RefElement) {
    RefElement refElement=(RefElement)refEntity;
    if (refElement.isSuspicious() && !refElement.isEntry()) {
      appendHeading(buf,InspectionsBundle.message("inspection.problem.synopsis"));
      buf.append("<br>");
      appendAfterHeaderIndention(buf);
      appendProblemSynopsis(refElement,buf);
      buf.append("<br><br>");
      appendResolution(buf,myTool,refElement);
      refElement.accept(new RefVisitor(){
        public void visitClass(        RefClass aClass){
          appendClassInstantiations(buf,aClass);
          appendDerivedClasses(buf,aClass);
          appendClassExtendsImplements(buf,aClass);
          appendLibraryMethods(buf,aClass);
          appendTypeReferences(buf,aClass);
        }
        public void visitMethod(        RefMethod method){
          appendElementInReferences(buf,method);
          appendElementOutReferences(buf,method);
          appendDerivedMethods(buf,method);
          appendSuperMethods(buf,method);
        }
        public void visitField(        RefField field){
          appendElementInReferences(buf,field);
          appendElementOutReferences(buf,field);
        }
      }
);
    }
 else {
      appendNoProblems(buf);
      throw new RuntimeException();
    }
    appendCallesList(refElement,buf,new HashSet<RefElement>(),true);
  }
}
