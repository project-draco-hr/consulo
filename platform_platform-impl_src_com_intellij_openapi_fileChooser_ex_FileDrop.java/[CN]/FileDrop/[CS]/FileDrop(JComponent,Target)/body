{
  final DropTargetListener listener=new DropTargetListener(){
    public void dragEnter(    final DropTargetDragEvent event){
    }
    public void dragOver(    final DropTargetDragEvent event){
    }
    public void dropActionChanged(    final DropTargetDragEvent event){
    }
    public void dragExit(    final DropTargetEvent dte){
    }
    public void drop(    final DropTargetDropEvent event){
      event.acceptDrop(event.getDropAction());
      final List<File> fileList=FileCopyPasteUtil.getFileList(event.getTransferable());
      if (fileList == null)       return;
      final List<VirtualFile> files=new ArrayList<VirtualFile>();
      final LocalFileSystem fileSystem=LocalFileSystem.getInstance();
      for (      File file : fileList) {
        final VirtualFile vFile=fileSystem.findFileByIoFile(file);
        if (vFile != null && vFile.exists() && target.getDescriptor().isFileVisible(vFile,target.isHiddenShown())) {
          files.add(vFile);
        }
      }
      if (files.size() > 0) {
        target.dropFiles(files);
      }
    }
  }
;
  new DropTarget(c,TransferHandler.COPY_OR_MOVE,listener,true);
}
