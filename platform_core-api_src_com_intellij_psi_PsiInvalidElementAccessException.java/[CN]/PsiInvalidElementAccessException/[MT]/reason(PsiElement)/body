{
  PsiElement element=root instanceof PsiFile ? root : root.getParent();
  if (element == null)   return "parent is null";
  while (element != null && !(element instanceof PsiFile) && element.getParent() != null) {
    element=element.getParent();
  }
  PsiFile file=element instanceof PsiFile ? (PsiFile)element : null;
  if (file == null)   return "containing file is null";
  FileViewProvider provider=file.getViewProvider();
  VirtualFile vFile=provider.getVirtualFile();
  if (!vFile.isValid())   return vFile + " is invalid";
  if (!provider.isPhysical())   return "non-physical provider";
  PsiManager manager=file.getManager();
  if (manager.getProject().isDisposed())   return "project is disposed";
  Language language=file.getLanguage();
  if (language != provider.getBaseLanguage())   return "File language:" + language + " != Provider base language:"+ provider.getBaseLanguage();
  FileViewProvider provider1=manager.findViewProvider(vFile);
  if (provider != provider1)   return "different providers: " + provider + "("+ Integer.toHexString(System.identityHashCode(provider))+ "); "+ provider1+ "("+ Integer.toHexString(System.identityHashCode(provider1))+ ")";
  return "psi is outdated";
}
