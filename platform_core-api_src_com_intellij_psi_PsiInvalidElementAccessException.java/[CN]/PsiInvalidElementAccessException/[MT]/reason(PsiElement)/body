{
  ASTNode element;
  for (element=root.getNode(); element != null && element.getTreeParent() != null; element=element.getTreeParent()) {
  }
  PsiElement psiElement=element == null ? null : element.getPsi();
  PsiFile file=psiElement instanceof PsiFile ? (PsiFile)psiElement : null;
  if (file == null)   return root.getParent() == null ? "parent is null" : "containing file is null";
  FileViewProvider provider=file.getViewProvider();
  VirtualFile vFile=provider.getVirtualFile();
  if (!vFile.isValid())   return vFile + " is invalid";
  if (!provider.isPhysical())   return "non-physical provider";
  PsiManager manager=file.getManager();
  if (manager.getProject().isDisposed())   return "project is disposed";
  Language language=file.getLanguage();
  if (language != provider.getBaseLanguage())   return "File language:" + language + " != Provider base language:"+ provider.getBaseLanguage();
  FileViewProvider provider1=manager.findViewProvider(vFile);
  if (provider != provider1)   return "different providers: " + provider + "("+ Integer.toHexString(System.identityHashCode(provider))+ "); "+ provider1+ "("+ Integer.toHexString(System.identityHashCode(provider1))+ ")";
  return "psi is outdated";
}
