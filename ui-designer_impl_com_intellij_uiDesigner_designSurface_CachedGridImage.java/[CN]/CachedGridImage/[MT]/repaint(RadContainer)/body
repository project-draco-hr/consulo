{
  final int width=container.getWidth();
  final int height=container.getHeight();
  Graphics2D g2d=(Graphics2D)myImage.getGraphics();
  try {
    g2d.setComposite(AlphaComposite.Clear);
    g2d.fillRect(0,0,width,height);
    g2d.setComposite(AlphaComposite.Src);
    if (container.isSelected()) {
      g2d.setColor(Painter.SELECTED_GRID_COLOR);
    }
 else {
      g2d.setColor(Painter.NON_SELECTED_GRID_COLOR);
    }
    g2d.setStroke(new BasicStroke(1.0f,0,0,1.0f,ourDashes,0.0f));
    for (int i=1; i < myHorzGridLines.length - 1; i++) {
      final int y=myHorzGridLines[i];
      g2d.drawLine(0,y,width,y);
    }
    for (int i=1; i < myVertGridLines.length - 1; i++) {
      final int x=myVertGridLines[i];
      g2d.drawLine(x,0,x,height);
    }
    g2d.setComposite(AlphaComposite.Clear);
    g2d.setStroke(new BasicStroke(1.0f));
    for (    RadComponent childComponent : container.getComponents()) {
      final GridConstraints constraints=childComponent.getConstraints();
      if (constraints.getColSpan() > 1) {
        for (int col=constraints.getColumn() + 1; col < constraints.getColumn() + constraints.getColSpan(); col++) {
          g2d.drawLine(myVertGridLines[col],myHorzGridLines[constraints.getRow()] + 4,myVertGridLines[col],myHorzGridLines[constraints.getRow() + constraints.getRowSpan()] - 4);
        }
      }
      if (constraints.getRowSpan() > 1) {
        for (int row=constraints.getRow() + 1; row < constraints.getRow() + constraints.getRowSpan(); row++) {
          g2d.drawLine(myVertGridLines[constraints.getColumn()] + 4,myHorzGridLines[row],myVertGridLines[constraints.getColumn() + constraints.getColSpan()] - 4,myHorzGridLines[row]);
        }
      }
    }
  }
  finally {
    g2d.dispose();
  }
}
