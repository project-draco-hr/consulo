{
  final Pair<String,String[]> typeAndPairs=new Pair<String,String[]>(type,paramTypes);
  final Pair<String,Pair<String,String[]>> methodPair=new Pair<String,Pair<String,String[]>>(name,typeAndPairs);
  final Pair<String,Pair<String,Pair<String,String[]>>> pair=new Pair<String,Pair<String,Pair<String,String[]>>>(containingClassName,methodPair);
  final GrDynamicImplicitMethodImpl implicitMethod=myNamesToMethodsMap.get(pair);
  if (implicitMethod != null)   return implicitMethod;
  final GrMethod method=GroovyPsiElementFactory.getInstance(myProject).createMethodFromText(name,type,paramTypes);
  final GrDynamicImplicitMethodImpl newMethod=new GrDynamicImplicitMethodImpl(manager,method,containingClassName,containingFile);
  myNamesToMethodsMap.put(pair,newMethod);
  return newMethod;
}
