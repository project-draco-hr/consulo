{
  if (referenceText.indexOf('<') < 0)   return ArrayUtil.EMPTY_STRING_ARRAY;
  referenceText=removeWhitespace(referenceText);
  final char[] chars=referenceText.toCharArray();
  int count=0;
  int dim=0;
  for (int i=0; i < chars.length; i++) {
    final char aChar=chars[i];
switch (aChar) {
case '<':
      count++;
    if (count == 1)     dim++;
  break;
case ',':
if (count == 1) dim++;
break;
case '>':
count--;
break;
}
}
if (count != 0 || dim == 0) return ArrayUtil.EMPTY_STRING_ARRAY;
final String[] result=new String[dim];
dim=0;
int ltPos=0;
for (int i=0; i < chars.length; i++) {
final char aChar=chars[i];
switch (aChar) {
case '<':
count++;
if (count == 1) ltPos=i;
break;
case ',':
if (count == 1) {
result[dim++]=new String(chars,ltPos + 1,i - ltPos - 1);
ltPos=i;
}
break;
case '>':
count--;
if (count == 0) result[dim++]=new String(chars,ltPos + 1,i - ltPos - 1);
break;
}
}
return result;
}
