{
  int endOffset=editor.getDocument().getTextLength();
  List<Caret> carets=editor.getCaretModel().getAllCarets();
  if (editor.isColumnMode() && editor.getCaretModel().supportsMultipleCarets()) {
    if (caret == null) {
      caret=carets.get(0) == editor.getCaretModel().getPrimaryCaret() ? carets.get(carets.size() - 1) : carets.get(0);
    }
    LogicalPosition leadSelectionPosition=editor.visualToLogicalPosition(caret.getLeadSelectionPosition());
    LogicalPosition targetPosition=editor.offsetToLogicalPosition(endOffset).leanForward(true);
    editor.getSelectionModel().setBlockSelection(leadSelectionPosition,targetPosition);
  }
 else {
    if (caret == null) {
      caret=carets.get(0);
    }
    int selectionStart=caret.getLeadSelectionOffset();
    if (editor instanceof EditorImpl && ((EditorImpl)editor).myUseNewRendering) {
      caret.moveToLogicalPosition(editor.offsetToLogicalPosition(endOffset).leanForward(true));
    }
 else {
      caret.moveToOffset(endOffset);
    }
    caret.setSelection(selectionStart,endOffset);
  }
  ScrollingModel scrollingModel=editor.getScrollingModel();
  scrollingModel.disableAnimation();
  scrollingModel.scrollToCaret(ScrollType.CENTER);
  scrollingModel.enableAnimation();
}
