{
  final LinkedHashMap<PsiTypeParameter,Boolean> result=new LinkedHashMap<PsiTypeParameter,Boolean>();
  final TypeParameterNameSuggester suggester=new TypeParameterNameSuggester(classTypeParameters);
  final Queue<PsiTypeParameter> classTypeParametersQueue=new LinkedList<PsiTypeParameter>(Arrays.asList(classTypeParameters));
  for (  PsiTypeElement typeElement : typeElements) {
    if (!classTypeParametersQueue.isEmpty()) {
      final PsiTypeParameter typeParameter=classTypeParametersQueue.peek();
      if (isAssignable(typeParameter,typeElement.getType())) {
        result.put(typeParameter,false);
        classTypeParametersQueue.poll();
        continue;
      }
    }
    result.put(toTypeParameter(factory,suggester,typeElement),true);
  }
  return result;
}
