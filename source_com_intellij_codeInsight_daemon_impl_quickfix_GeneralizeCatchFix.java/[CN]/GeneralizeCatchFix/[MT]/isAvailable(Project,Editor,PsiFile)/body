{
  PsiElement element1=myElement.getContainingFile();
  if (!(myElement != null && myElement.isValid() && myUnhandledException != null && myUnhandledException.isValid() && element1.getManager().isInProject(element1)))   return false;
  PsiElement element=myElement;
  while (element != null) {
    if (element instanceof PsiCodeBlock && element.getParent() instanceof PsiTryStatement && ((PsiTryStatement)element.getParent()).getTryBlock() == element) {
      myTryStatement=(PsiTryStatement)element.getParent();
      break;
    }
    if (element instanceof PsiMethod || (element instanceof PsiClass && !(element instanceof PsiAnonymousClass)))     break;
    element=element.getParent();
  }
  if (myTryStatement == null)   return false;
  final PsiParameter[] catchBlockParameters=myTryStatement.getCatchBlockParameters();
  for (int i=0; i < catchBlockParameters.length; i++) {
    PsiParameter catchBlockParameter=catchBlockParameters[i];
    final PsiType type=catchBlockParameter.getType();
    if (type == null)     continue;
    if (myUnhandledException.isAssignableFrom(type)) {
      myCatchParameter=catchBlockParameter;
      break;
    }
  }
  return myCatchParameter != null;
}
