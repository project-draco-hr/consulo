{
  super(session.getProject(),true);
  mySession=session;
  myEditorsProvider=editorsProvider;
  mySourcePosition=sourcePosition;
  setModal(false);
  setOKButtonText(XDebuggerBundle.message("xdebugger.button.evaluate"));
  setCancelButtonText(XDebuggerBundle.message("xdebugger.evaluate.dialog.close"));
  mySessionListener=new XDebugSessionAdapter(){
    @Override public void sessionStopped(){
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          close(CANCEL_EXIT_CODE);
        }
      }
);
    }
  }
;
  mySession.addSessionListener(mySessionListener);
  myTreePanel=new XDebuggerTreePanel(session,editorsProvider,myDisposable,sourcePosition,XDebuggerActions.EVALUATE_DIALOG_TREE_POPUP_GROUP);
  myResultPanel=new JPanel(new BorderLayout());
  myResultPanel.add(new JLabel(XDebuggerBundle.message("xdebugger.evaluate.label.result")),BorderLayout.NORTH);
  myResultPanel.add(myTreePanel.getMainPanel(),BorderLayout.CENTER);
  myEvaluator=evaluator;
  myMainPanel=new JPanel(new BorderLayout());
  mySwitchModeAction=new SwitchModeAction();
  new AnAction(){
    public void actionPerformed(    AnActionEvent e){
      doOKAction();
    }
  }
.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,KeyEvent.CTRL_DOWN_MASK)),getRootPane(),myDisposable);
  new AnAction(){
    public void actionPerformed(    AnActionEvent e){
      IdeFocusManager.getInstance(mySession.getProject()).requestFocus(myTreePanel.getTree(),true);
    }
  }
.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_R,KeyEvent.ALT_DOWN_MASK)),getRootPane(),myDisposable);
  EvaluationMode mode=EvaluationMode.EXPRESSION;
  if (text.indexOf('\n') != -1) {
    if (myEvaluator.isCodeFragmentEvaluationSupported()) {
      mode=EvaluationMode.CODE_FRAGMENT;
    }
 else {
      text=StringUtil.replace(text,"\n"," ");
    }
  }
  switchToMode(mode,text);
  init();
}
