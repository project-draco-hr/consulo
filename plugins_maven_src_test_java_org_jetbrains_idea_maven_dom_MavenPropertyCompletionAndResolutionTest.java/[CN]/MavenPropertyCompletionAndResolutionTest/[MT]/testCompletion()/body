{
  importProjectWithProfiles("one");
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<parent>"+ "  <groupId>test</groupId>"+ "  <artifactId>parent</artifactId>"+ "  <version>1</version>"+ "  <relativePath>./parent/pom.xml</version>"+ "</parent>"+ "<properties>"+ "  <pomProp>value</pomProp>"+ "</properties>"+ "<profiles>"+ "  <profile>"+ "    <id>one</id>"+ "    <properties>"+ "      <pomProfilesProp>value</pomProfilesProp>"+ "    </properties>"+ "  </profile>"+ "  <profile>"+ "    <id>two</id>"+ "    <properties>"+ "      <pomProfilesPropInactive>value</pomProfilesPropInactive>"+ "    </properties>"+ "  </profile>"+ "</profiles>"+ "<name>${<caret>}</name>");
  createProfilesXml("<profile>" + "  <id>one</id>" + "  <properties>"+ "    <profilesXmlProp>value</profilesXmlProp>"+ "  </properties>"+ "</profile>");
  createModulePom("parent","<groupId>test</groupId>" + "<artifactId>parent</artifactId>" + "<version>1</version>"+ "<properties>"+ "  <parentPomProp>value</parentPomProp>"+ "</properties>"+ "<profiles>"+ "  <profile>"+ "    <id>one</id>"+ "    <properties>"+ "      <parentPomProfilesProp>value</parentPomProfilesProp>"+ "    </properties>"+ "  </profile>"+ "</profiles>");
  createProfilesXml("parent","<profile>" + "  <id>one</id>" + "  <properties>"+ "    <parentProfilesXmlProp>value</parentProfilesXmlProp>"+ "  </properties>"+ "</profile>");
  updateSettingsXml("<profiles>" + "  <profile>" + "    <id>one</id>"+ "    <properties>"+ "      <settingsXmlProp>value</settingsXmlProp>"+ "    </properties>"+ "  </profile>"+ "</profiles>");
  List<String> variants=getCompletionVariants(myProjectPom);
  assertInclude(variants,"pomProp","pomProfilesProp","profilesXmlProp");
  assertInclude(variants,"parentPomProp","parentPomProfilesProp","parentProfilesXmlProp");
  assertInclude(variants,"artifactId","project.artifactId","pom.artifactId");
  assertInclude(variants,"basedir","project.basedir","pom.basedir");
  assertInclude(variants,"settingsXmlProp");
  assertInclude(variants,"settings.localRepository");
  assertInclude(variants,"user.home","env.TEMP");
}
