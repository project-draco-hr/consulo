{
  return new MergeInfoHolder(myProject,myManager,new Getter<WCPaths>(){
    public WCPaths get(){
      if (myFromHereDirection) {
        return panel.getWcInfo();
      }
 else {
        final WCInfoWithBranches.Branch branch=panel.getBranch();
        final String local=panel.getLocalBranch();
        if ((local != null) && (branch != null)) {
          final SVNURL repoRoot=SvnUtil.getRepositoryRoot(SvnVcs.getInstance(myProject),new File(local));
          if (repoRoot != null) {
            return new WCPathsImpl(local,branch.getUrl(),repoRoot.toString());
          }
        }
        return null;
      }
    }
  }
,new Getter<WCInfoWithBranches.Branch>(){
    public WCInfoWithBranches.Branch get(){
      if (myFromHereDirection) {
        return panel.getBranch();
      }
 else {
        final WCInfoWithBranches wcInfo=panel.getWcInfo();
        return new WCInfoWithBranches.Branch(wcInfo.getUrl().toString());
      }
    }
  }
,new Getter<String>(){
    public String get(){
      if (myFromHereDirection) {
        return panel.getLocalBranch();
      }
 else {
        final WCInfoWithBranches wcInfo=panel.getWcInfo();
        return wcInfo.getPath();
      }
    }
  }
,new Getter<Boolean>(){
    public Boolean get(){
      return myHighlightingOn && panel.isEnabled();
    }
  }
);
}
