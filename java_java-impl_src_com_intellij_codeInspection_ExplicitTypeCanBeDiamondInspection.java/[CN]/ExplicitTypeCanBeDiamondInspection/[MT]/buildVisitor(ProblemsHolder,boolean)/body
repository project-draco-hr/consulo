{
  return new JavaElementVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
    }
    @Override public void visitNewExpression(    PsiNewExpression expression){
      if (PsiDiamondTypeUtil.canCollapseToDiamond(expression,expression)) {
        final PsiJavaCodeReferenceElement classReference=expression.getClassOrAnonymousClassReference();
        LOG.assertTrue(classReference != null);
        final PsiReferenceParameterList parameterList=classReference.getParameterList();
        LOG.assertTrue(parameterList != null);
        holder.registerProblem(parameterList,"Redundant type argument #ref #loc",ProblemHighlightType.LIKE_UNUSED_SYMBOL,new ReplaceWithDiamondFix());
      }
    }
  }
;
}
