{
  final File moduleBaseDir=parameters.getChunk().getBaseDir();
  final String configurationName=parameters.getConfigurationName();
  final Module containingModule=parameters.getContainingModule();
  final Target buildTarget=new Target(targetName,depends,targetDescription,null);
  final BuildConfiguration buildConfiguration=parameters.getBuildConfiguration();
  final String baseDirProperty=BuildProperties.getModuleChunkBasedirProperty(parameters.getChunk());
  if (buildConfiguration.isExplodedEnabled()) {
    final String explodedPath=buildConfiguration.getExplodedPath();
    String location=GenerationUtils.toRelativePath(VirtualFileManager.extractPath(explodedPath),moduleBaseDir,baseDirProperty,parameters.getGenerationOptions(),!containingModule.isSavePathsRelative());
    add(new Property(parameters.getExplodedPathProperty(configurationName),location));
    final AntCall antCall=new AntCall(parameters.getBuildExplodedTargetName(configurationName));
    buildTarget.add(antCall);
    antCall.add(new Param(parameters.getExplodedPathProperty(),BuildProperties.propertyRef(parameters.getExplodedPathProperty(configurationName))));
  }
  if (jarPath == null) {
    jarPath=getJarPath(buildConfiguration);
  }
  if (jarPath != null) {
    String location=GenerationUtils.toRelativePath(VirtualFileManager.extractPath(jarPath),moduleBaseDir,baseDirProperty,parameters.getGenerationOptions(),!containingModule.isSavePathsRelative());
    add(new Property(parameters.getJarPathProperty(configurationName),location));
    final AntCall antCall=new AntCall(parameters.getBuildJarTargetName(configurationName));
    buildTarget.add(antCall);
    antCall.add(new Param(parameters.getJarPathProperty(),BuildProperties.propertyRef(parameters.getJarPathProperty(configurationName))));
  }
  add(buildTarget);
}
