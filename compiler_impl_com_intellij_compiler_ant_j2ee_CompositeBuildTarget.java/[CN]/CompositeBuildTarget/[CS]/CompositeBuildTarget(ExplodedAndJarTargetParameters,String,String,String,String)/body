{
  final File moduleBaseDir=parameters.getChunk().getBaseDir();
  final Module containingModule=parameters.getContainingModule();
  final Target buildTarget=new Target(targetName,depends,targetDescription,null);
  final BuildConfiguration buildConfiguration=parameters.getBuildConfiguration();
  final String baseDirProperty=BuildProperties.getModuleChunkBasedirProperty(parameters.getChunk());
  if (buildConfiguration.isExplodedEnabled()) {
    final String explodedPath=buildConfiguration.getExplodedPath();
    if (explodedPath != null) {
      String location=GenerationUtils.toRelativePath(VirtualFileManager.extractPath(explodedPath),moduleBaseDir,baseDirProperty,parameters.getGenerationOptions(),!containingModule.isSavePathsRelative());
      add(new Property(parameters.getExplodedPathProperty(),location));
    }
    final AntCall antCall=new AntCall(parameters.getBuildExplodedTargetName());
    buildTarget.add(antCall);
    antCall.add(new Param(parameters.getExplodedPathParameter(),BuildProperties.propertyRef(parameters.getExplodedPathProperty())));
  }
  if (jarPath == null) {
    jarPath=getJarPath(buildConfiguration);
  }
  if (jarPath != null) {
    String location=GenerationUtils.toRelativePath(VirtualFileManager.extractPath(jarPath),moduleBaseDir,baseDirProperty,parameters.getGenerationOptions(),!containingModule.isSavePathsRelative());
    add(new Property(parameters.getJarPathProperty(),location));
    final AntCall antCall=new AntCall(parameters.getBuildJarTargetName());
    buildTarget.add(antCall);
    antCall.add(new Param(parameters.getJarPathParameter(),BuildProperties.propertyRef(parameters.getJarPathProperty())));
  }
  add(buildTarget);
}
