{
  final ArrayList<String> list=new ArrayList<String>();
  getNamesByPattern(myCheckBox.isSelected(),null,list,pattern);
  if (pattern.indexOf('*') >= 0)   return;
  final String oldText=myTextField.getText();
  final int oldPos=myList.getSelectedIndex();
  final String newPattern;
  String commonPrefix=null;
  if (list.size() != 0) {
    for (int i=0; i < list.size(); i++) {
      final String string=list.get(i).toLowerCase();
      if (commonPrefix == null) {
        commonPrefix=string;
      }
 else {
        while (commonPrefix.length() > 0) {
          if (string.startsWith(commonPrefix)) {
            break;
          }
          commonPrefix=commonPrefix.substring(0,commonPrefix.length() - 1);
        }
        if (commonPrefix.length() == 0)         break;
      }
    }
    commonPrefix=list.get(0).substring(0,commonPrefix.length());
    for (int i=1; i < list.size(); i++) {
      final String string=list.get(i).substring(0,commonPrefix.length());
      if (!string.equals(commonPrefix)) {
        commonPrefix=commonPrefix.toLowerCase();
        break;
      }
    }
  }
  if (commonPrefix == null)   commonPrefix="";
  newPattern=commonPrefix;
  myHistory.add(Pair.create(oldText,new Integer(oldPos)));
  myTextField.setText(newPattern);
  myTextField.setCaretPosition(newPattern.length());
  rebuildList(0,REBUILD_DELAY,null,ModalityState.current());
}
