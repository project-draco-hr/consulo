{
  final PsiJavaToken token=(PsiJavaToken)element;
  final PsiStatement containingStatement=PsiTreeUtil.getParentOfType(token,PsiStatement.class);
  if (containingStatement == null) {
    return;
  }
  if (ExpandBooleanPredicate.isBooleanAssignment(containingStatement)) {
    final PsiExpressionStatement assignmentStatement=(PsiExpressionStatement)containingStatement;
    final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)assignmentStatement.getExpression();
    final PsiExpression rhs=assignmentExpression.getRExpression();
    if (rhs == null) {
      return;
    }
    final String rhsText=rhs.getText();
    final PsiExpression lhs=assignmentExpression.getLExpression();
    final String lhsText=lhs.getText();
    @NonNls final String statement="if(" + rhsText + "){"+ lhsText+ " = true;}else{"+ lhsText+ " = false;}";
    replaceStatement(statement,containingStatement);
  }
 else   if (ExpandBooleanPredicate.isBooleanReturn(containingStatement)) {
    final PsiReturnStatement returnStatement=(PsiReturnStatement)containingStatement;
    final PsiExpression returnValue=returnStatement.getReturnValue();
    if (returnValue == null) {
      return;
    }
    final String valueText=returnValue.getText();
    @NonNls final String statement="if(" + valueText + "){return true;}else{return false;}";
    replaceStatement(statement,containingStatement);
  }
}
