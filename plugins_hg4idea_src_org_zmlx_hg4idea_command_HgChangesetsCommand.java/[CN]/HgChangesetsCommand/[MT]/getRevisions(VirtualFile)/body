{
  HgCommandService commandService=HgCommandService.getInstance(project);
  List<String> args=new ArrayList<String>(Arrays.asList("--template","{rev}|{node|short}|{author}|{desc|firstline}" + SEPARATOR_STRING));
  addArguments(args);
  HgCommandResult result=commandService.execute(repo,Arrays.asList("--quiet"),command,args);
  if (result == null) {
    return Collections.emptyList();
  }
  String output=result.getRawOutput();
  if (StringUtils.isEmpty(output)) {
    return Collections.emptyList();
  }
  String[] changesets=output.split(SEPARATOR_STRING);
  List<HgRevisionNumber> revisions=new ArrayList<HgRevisionNumber>(changesets.length);
  for (  String changeset : changesets) {
    String[] parts=StringUtils.split(changeset,"|",4);
    if (parts.length == 4) {
      revisions.add(HgRevisionNumber.getInstance(parts[0],parts[1],parts[2],parts[3]));
    }
 else {
      LOG.warn("Could not parse changeset [" + changeset + "]");
    }
  }
  return revisions;
}
