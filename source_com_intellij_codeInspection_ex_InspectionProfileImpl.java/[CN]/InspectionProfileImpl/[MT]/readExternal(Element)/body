{
  myDisplayLevelMap.clear();
  final String version=element.getAttributeValue("version");
  if (version == null || !version.equals(VALID_VERSION)) {
    try {
      InspectionProfileConvertor.convertToNewFormat(myFile,this);
      element=JDOMUtil.loadDocument(myFile).getRootElement();
    }
 catch (    IOException e) {
      LOG.error(e);
    }
catch (    JDOMException e) {
      LOG.error(e);
    }
  }
  for (Iterator i=element.getChildren("inspection_tool").iterator(); i.hasNext(); ) {
    Element toolElement=(Element)i.next();
    String toolClassName=toolElement.getAttributeValue("class");
    HighlightDisplayKey key=HighlightDisplayKey.find(toolClassName);
    if (key == null) {
      key=HighlightDisplayKey.register(toolClassName);
    }
    final String levelName=toolElement.getAttributeValue("level");
    HighlightDisplayLevel level=HighlightDisplayLevel.find(levelName);
    if (level == null || level == HighlightDisplayLevel.DO_NOT_SHOW) {
      level=HighlightDisplayLevel.WARNING;
    }
    final String enabled=toolElement.getAttributeValue("enabled");
    myDisplayLevelMap.put(key,new ToolState(level,enabled != null && "true".equals(enabled)));
    InspectionTool tool=getInspectionTool(toolClassName);
    if (tool != null) {
      tool.readExternal(toolElement);
    }
  }
  myVisibleTreeState.readExternal(element);
  final Element additionalJavadocs=element.getChild("ADDITIONAL_JAVADOC_TAGS");
  if (additionalJavadocs != null) {
    myAdditionalJavadocTags=additionalJavadocs.getAttributeValue("value");
  }
  final String baseProfileName=element.getAttributeValue("base_profile");
  if (baseProfileName != null && myBaseProfile == null) {
    myBaseProfile=InspectionProfileManager.getInstance().getProfile(baseProfileName);
    if (baseProfileName.equals("Default")) {
      myBaseProfile.resetToBase();
    }
    if (!myBaseProfile.wasInitialized()) {
      myBaseProfile.load();
    }
  }
}
