{
  if (node instanceof ModuleGroupNode) {
    if (!recursively)     return null;
    @NonNls final String modulePattern="group:" + ((ModuleGroupNode)node).getModuleGroup().toString();
    return new FilePatternPackageSet(modulePattern,"*//*");
  }
 else   if (node instanceof ModuleNode) {
    if (!recursively)     return null;
    final String modulePattern=((ModuleNode)node).getModuleName();
    return new FilePatternPackageSet(modulePattern,"*/");
  }
 else   if (node instanceof DirectoryNode) {
    String pattern=((DirectoryNode)node).getFQName();
    if (pattern != null) {
      if (pattern.length() > 0) {
        pattern+=recursively ? "//*" : "/*";
      }
 else {
        pattern+=recursively ? "*/" : "*";
      }
    }
    return new FilePatternPackageSet(getModulePattern(node),pattern);
  }
 else   if (node instanceof FileNode) {
    if (recursively)     return null;
    FileNode fNode=(FileNode)node;
    final PsiFile file=(PsiFile)fNode.getPsiElement();
    final VirtualFile virtualFile=file.getVirtualFile();
    LOG.assertTrue(virtualFile != null);
    final VirtualFile contentRoot=ProjectRootManager.getInstance(file.getProject()).getFileIndex().getContentRootForFile(virtualFile);
    if (contentRoot == null)     return null;
    final String fqName=VfsUtilCore.getRelativePath(virtualFile,contentRoot,'/');
    if (fqName != null)     return new FilePatternPackageSet(getModulePattern(node),fqName);
  }
  return null;
}
