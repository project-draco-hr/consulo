{
  Dimension size=parent.getSize();
  Dimension prefSize=parent.getPreferredSize();
  if (prefSize.width <= size.width) {
    myLeft.setBounds(0,0,myLeft.getPreferredSize().width,parent.getHeight());
    Dimension rightSize=myRight.getPreferredSize();
    myRight.setBounds(parent.getWidth() - rightSize.width,0,rightSize.width,parent.getHeight());
  }
 else {
    Dimension leftMinSize=myLeft.getMinimumSize();
    Dimension rightMinSize=myRight.getMinimumSize();
    int delta=0;
    myLeft.setBounds(0,0,myLeft.getPreferredSize().width - delta,parent.getHeight());
    int rightX=(int)myLeft.getBounds().getMaxX();
    int rightWidth=size.width - rightX;
    if (rightWidth < rightMinSize.width) {
      Dimension leftSize=myLeft.getSize();
      int diffToRightMin=rightMinSize.width - rightWidth;
      if (leftSize.width - diffToRightMin >= leftMinSize.width) {
        leftSize.width-=diffToRightMin;
        myLeft.setSize(leftSize);
      }
    }
    myRight.setBounds((int)myLeft.getBounds().getMaxX(),0,parent.getWidth() - myLeft.getWidth(),parent.getHeight());
  }
  toMakeVerticallyInCenter(myLeft,parent);
  toMakeVerticallyInCenter(myRight,parent);
}
