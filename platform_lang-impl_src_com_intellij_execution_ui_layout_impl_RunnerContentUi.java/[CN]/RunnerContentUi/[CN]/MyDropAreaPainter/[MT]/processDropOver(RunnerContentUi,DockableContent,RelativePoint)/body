{
  myBoundingBox=null;
  setNeedsRepaint(true);
  if (!(dockable instanceof DockableGrid))   return;
  JComponent component=ui.myComponent;
  Point point=dropTarget != null ? dropTarget.getPoint(component) : null;
  if (ui.myTabs.shouldAddToGlobal(point))   return;
  PlaceInGrid targetPlaceInGrid=null;
  for (  Content c : ((DockableGrid)dockable).getContents()) {
    View view=ui.getStateFor(c);
    if (view.isMinimizedInGrid())     continue;
    PlaceInGrid defaultGridPlace=ui.getLayoutSettings().getDefaultGridPlace(c);
    targetPlaceInGrid=point == null ? defaultGridPlace : calcPlaceInGrid(point,component.getSize());
    break;
  }
  if (targetPlaceInGrid == null)   return;
  Dimension size=component.getSize();
  Rectangle r=new Rectangle(size);
switch (targetPlaceInGrid) {
case left:
    r.width/=3;
  break;
case center:
r.width/=3;
r.x+=r.width;
break;
case right:
r.width/=3;
r.x+=2 * r.width;
break;
case bottom:
r.height/=4;
r.y+=3 * r.height;
break;
}
for (Content c : ui.getContentManager().getContents()) {
GridCell cellFor=ui.findCellFor(c);
PlaceInGrid placeInGrid=cellFor == null ? null : ((GridCellImpl)cellFor).getPlaceInGrid();
if (placeInGrid != targetPlaceInGrid) continue;
Wrapper wrapper=UIUtil.getParentOfType(Wrapper.class,c.getComponent());
JComponent cellWrapper=wrapper == null ? null : (JComponent)wrapper.getParent();
if (cellWrapper == null || !cellWrapper.isShowing()) continue;
r=new RelativeRectangle(cellWrapper).getRectangleOn(component);
break;
}
myBoundingBox=new RoundRectangle2D.Double(r.x,r.y,r.width,r.height,16,16);
}
