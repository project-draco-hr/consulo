{
  saveUiState();
  final DockableGrid dockableGrid=(DockableGrid)dockable;
  final List<Content> contents=dockableGrid.getContents();
  final boolean wasRestoring=myOriginal != null && myOriginal.isStateBeingRestored();
  setStateIsBeingRestored(true,this);
  try {
    final Point point=dropTarget != null ? dropTarget.getPoint(myComponent) : null;
    JComponent component=point != null ? (JComponent)SwingUtilities.getDeepestComponentAt(myComponent,point.x,point.y) : null;
    boolean hadGrid=false;
    while (component != null && !(component instanceof JBTabs)) {
      if (component.getClientProperty(GridCellImpl.CELL_KEY) == Boolean.TRUE) {
        hadGrid=true;
        break;
      }
      component=(JComponent)component.getParent();
    }
    for (    Content content : contents) {
      dockableGrid.getRunnerUi().myManager.removeContent(content,false);
      myManager.removeContent(content,false);
      if (hadGrid && contents.size() == 1 && !wasRestoring) {
        getStateFor(content).assignTab(getTabFor(getSelectedGrid()));
        getStateFor(content).setPlaceInGrid(myLayoutSettings.getDefaultGridPlace(content));
      }
 else       if (contents.size() == 1 && !wasRestoring) {
        getStateFor(content).assignTab(myLayoutSettings.createNewTab());
        getStateFor(content).setPlaceInGrid(myLayoutSettings.getDefaultGridPlace(content));
      }
      getStateFor(content).setWindow(myWindow);
      myManager.addContent(content);
    }
  }
  finally {
    setStateIsBeingRestored(false,this);
  }
  saveUiState();
  updateTabsUI(true);
}
