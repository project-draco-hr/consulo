{
  GridImpl grid=(GridImpl)findGridFor(content);
  if (grid != null || !createIfMissing)   return grid;
  grid=new GridImpl(this,mySessionName);
  if (myCurrentOver != null || myOriginal != null) {
    Integer forcedDropIndex=content.getUserData(RunnerLayout.DROP_INDEX);
    final int index=myTabs.getDropInfoIndex() + (myOriginal != null ? myOriginal.getTabOffsetFor(this) : 0);
    final TabImpl tab=myLayoutSettings.getOrCreateTab(forcedDropIndex != null ? forcedDropIndex : -1);
    final Integer defaultIndex=content.getUserData(RunnerLayout.DEFAULT_INDEX);
    tab.setDefaultIndex(defaultIndex != null ? defaultIndex : -1);
    tab.setIndex(forcedDropIndex != null ? forcedDropIndex : index);
    getStateFor(content).assignTab(tab);
  }
  TabInfo tab=new TabInfo(grid).setObject(getStateFor(content).getTab()).setText("Tab");
  Wrapper left=new Wrapper();
  myCommonActionsPlaceholder.put(grid,left);
  Wrapper minimizedToolbar=new Wrapper();
  myMinimizedButtonsPlaceholder.put(grid,minimizedToolbar);
  final Wrapper searchComponent=new Wrapper();
  if (content.getSearchComponent() != null) {
    searchComponent.setContent(content.getSearchComponent());
  }
  TwoSideComponent right=new TwoSideComponent(searchComponent,minimizedToolbar);
  NonOpaquePanel sideComponent=new TwoSideComponent(left,right);
  tab.setSideComponent(sideComponent);
  tab.setTabLabelActions((ActionGroup)myActionManager.getAction(VIEW_TOOLBAR),TAB_TOOLBAR_PLACE);
  myTabs.addTab(tab);
  myTabs.sortTabs(myTabsComparator);
  return grid;
}
