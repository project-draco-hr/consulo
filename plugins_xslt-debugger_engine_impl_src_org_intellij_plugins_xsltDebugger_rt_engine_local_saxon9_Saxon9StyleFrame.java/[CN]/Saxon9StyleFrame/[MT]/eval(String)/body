{
  try {
    Expression expression=myElement.makeExpression(expr);
    final TypeHierarchy typeHierarchy=myXPathContext.getConfiguration().getTypeHierarchy();
    expression=expression.typeCheck(ExpressionVisitor.make(myElement.getStaticContext(),expression.getExecutable()),Type.ITEM_TYPE);
    final ItemType itemType=expression.getItemType(typeHierarchy);
    final SequenceIterator it=expression.iterate(myXPathContext);
    Item value=null;
    if (it.next() != null) {
      value=it.current();
    }
    if (it.next() == null) {
      return new SingleValue(value,itemType);
    }
    return new SequenceValue(value,it,itemType);
  }
 catch (  IllegalArgumentException e) {
    throw new Debugger.EvaluationException(e.getMessage() != null ? e.getMessage() : e.toString());
  }
catch (  XPathException e) {
    throw new Debugger.EvaluationException(e.getMessage() != null ? e.getMessage() : e.toString());
  }
catch (  AssertionError e) {
    throw new Debugger.EvaluationException(e.getMessage() != null ? e.getMessage() : e.toString());
  }
catch (  Exception e) {
    e.printStackTrace();
    throw new Debugger.EvaluationException(e.getMessage() != null ? e.getMessage() : e.toString());
  }
}
