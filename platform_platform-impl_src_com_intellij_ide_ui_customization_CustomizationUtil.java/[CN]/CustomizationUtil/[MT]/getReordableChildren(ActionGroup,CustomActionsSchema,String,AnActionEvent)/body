{
  String text=group.getTemplatePresentation().getText();
  ActionManager actionManager=ActionManager.getInstance();
  final ArrayList<AnAction> reorderedChildren=new ArrayList<AnAction>();
  ContainerUtil.addAll(reorderedChildren,group.getChildren(e));
  final List<ActionUrl> actions=schema.getActions();
  for (  ActionUrl actionUrl : actions) {
    if ((actionUrl.getParentGroup().equals(text) || actionUrl.getParentGroup().equals(defaultGroupName) || actionUrl.getParentGroup().equals(actionManager.getId(group)))) {
      AnAction componentAction=actionUrl.getComponentAction();
      if (componentAction != null) {
        if (actionUrl.getActionType() == ActionUrl.ADDED) {
          if (componentAction == group) {
            LOG.error("Attempt to add group to itself; group ID=" + actionManager.getId(group));
            continue;
          }
          if (reorderedChildren.size() > actionUrl.getAbsolutePosition()) {
            reorderedChildren.add(actionUrl.getAbsolutePosition(),componentAction);
          }
 else {
            reorderedChildren.add(componentAction);
          }
        }
 else         if (actionUrl.getActionType() == ActionUrl.DELETED && reorderedChildren.size() > actionUrl.getAbsolutePosition()) {
          final AnAction anAction=reorderedChildren.get(actionUrl.getAbsolutePosition());
          if (anAction.getTemplatePresentation().getText() == null ? (componentAction.getTemplatePresentation().getText() != null && componentAction.getTemplatePresentation().getText().length() > 0) : !anAction.getTemplatePresentation().getText().equals(componentAction.getTemplatePresentation().getText())) {
            continue;
          }
          reorderedChildren.remove(actionUrl.getAbsolutePosition());
        }
      }
    }
  }
  for (int i=0; i < reorderedChildren.size(); i++) {
    if (reorderedChildren.get(i) instanceof ActionGroup) {
      final ActionGroup groupToCorrect=(ActionGroup)reorderedChildren.get(i);
      final AnAction correctedAction=correctActionGroup(groupToCorrect,schema,"");
      reorderedChildren.set(i,correctedAction);
    }
  }
  return reorderedChildren.toArray(new AnAction[reorderedChildren.size()]);
}
