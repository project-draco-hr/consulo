{
  if (myClassesWithOverrideAnnotatedMethods == null) {
    final CacheCorruptedException[] ex=new CacheCorruptedException[]{null};
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        myClassesWithOverrideAnnotatedMethods=new TIntHashSet();
        final PsiClass overrideClass=PsiManager.getInstance(project).findClass(Override.class.getName(),GlobalSearchScope.allScope(project));
        if (overrideClass != null) {
          final Query<PsiMember> query=AnnotatedMembersSearch.search(overrideClass);
          query.forEach(new Processor<PsiMember>(){
            public boolean process(            final PsiMember psiMember){
              try {
                final String qualifiedName=psiMember.getContainingClass().getQualifiedName();
                if (qualifiedName != null) {
                  myClassesWithOverrideAnnotatedMethods.add(mySymbolTable.getId(qualifiedName));
                }
                return true;
              }
 catch (              CacheCorruptedException e) {
                ex[0]=e;
                return false;
              }
            }
          }
);
        }
      }
    }
);
    if (ex[0] != null) {
      throw ex[0];
    }
  }
  return myClassesWithOverrideAnnotatedMethods.contains(qName);
}
