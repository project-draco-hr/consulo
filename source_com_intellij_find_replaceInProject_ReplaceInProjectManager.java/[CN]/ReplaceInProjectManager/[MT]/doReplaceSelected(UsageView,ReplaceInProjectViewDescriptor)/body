{
  TreePath[] paths=usageView.getTree().getSelectionPaths();
  if (paths == null || paths.length == 0) {
    return;
  }
  final UsageInfo[] usages=usageView.getSelectedUsages();
  if (usages == null) {
    return;
  }
  if (UsageViewUtil.hasReadOnlyUsages(usages)) {
    int result=Messages.showOkCancelDialog(usageView.getTree(),"Occurrences found in read-only files.\n" + "The operation will not affect them.\n" + "Continue anyway?","Read-only Files Found",Messages.getWarningIcon());
    if (result != 0) {
      return;
    }
  }
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    public void run(){
      doReplace(usageView,usages,treeInfo);
      for (int i=0; i < usages.length; i++) {
        usageView.removeUsage(usages[i]);
      }
      if (usageView.getUsagesNodeCount() == 0) {
        UsageViewManager.getInstance(myProject).closeContent(usageView);
        return;
      }
      usageView.setFocused();
    }
  }
,"Replace",null);
}
