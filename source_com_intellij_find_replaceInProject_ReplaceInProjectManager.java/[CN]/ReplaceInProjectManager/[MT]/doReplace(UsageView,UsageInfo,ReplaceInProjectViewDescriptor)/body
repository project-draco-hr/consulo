{
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      if (usageView.isExcluded(usage)) {
        return;
      }
      PsiFile file=(PsiFile)usage.getElement();
      Project project=file.getProject();
      Document document=PsiDocumentManager.getInstance(project).getDocument(file);
      if (!document.isWritable())       return;
      final int textOffset=usageView.getTextOffset(usage);
      if (textOffset < 0 || textOffset >= document.getTextLength()) {
        return;
      }
      final int textEndOffset=usageView.getTextEndOffset(usage);
      if (textEndOffset < 0 || textOffset > document.getTextLength()) {
        return;
      }
      FindManager findManager=FindManager.getInstance(myProject);
      final CharSequence foundString=document.getCharsSequence().subSequence(textOffset,textEndOffset);
      FindResult findResult=findManager.findString(foundString,0,treeInfo.getFindModel());
      if (findResult == null || !findResult.isStringFound()) {
        return;
      }
      String stringToReplace=findManager.getStringToReplace(foundString.toString(),treeInfo.getFindModel());
      document.replaceString(textOffset,textEndOffset,stringToReplace);
    }
  }
);
}
