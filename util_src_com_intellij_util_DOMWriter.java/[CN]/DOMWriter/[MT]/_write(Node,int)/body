{
  if (node == null)   return;
  short type=node.getNodeType();
switch (type) {
case Node.DOCUMENT_NODE:
{
      Document document=(Document)node;
      myOut.println(XML_PROLOG);
      _write(document.getDoctype(),indent);
      _write(document.getDocumentElement(),indent);
      break;
    }
case Node.DOCUMENT_TYPE_NODE:
{
    DocumentType doctype=(DocumentType)node;
    myOut.print(DOCTYPE);
    myOut.print(doctype.getName());
    String publicId=doctype.getPublicId();
    String systemId=doctype.getSystemId();
    if (publicId != null) {
      myOut.print(PUBLIC);
      myOut.print(publicId);
      myOut.print("' '");
      myOut.print(systemId);
      myOut.print('\'');
    }
 else {
      myOut.print(SYSTEM);
      myOut.print(systemId);
      myOut.print('\'');
    }
    String internalSubset=doctype.getInternalSubset();
    if (internalSubset != null) {
      myOut.println(" [");
      myOut.print(internalSubset);
      myOut.print(']');
    }
    myOut.println('>');
    break;
  }
case Node.ELEMENT_NODE:
{
  indent(indent);
  myOut.print('<');
  myOut.print(node.getNodeName());
  final NamedNodeMap attributes=node.getAttributes();
  for (int i=0; i < attributes.getLength(); i++) {
    Attr attr=(Attr)attributes.item(i);
    myOut.print(' ');
    myOut.print(attr.getNodeName());
    myOut.print("=\"");
    normalizeAndPrint(attr.getNodeValue());
    myOut.print('"');
  }
  Node child=node.getFirstChild();
  if (child == null) {
    myOut.println(" />");
  }
 else {
    myOut.println('>');
    while (child != null) {
      _write(child,indent + INDENT);
      child=child.getNextSibling();
    }
    indent(indent);
    myOut.print("</");
    myOut.print(node.getNodeName());
    myOut.println('>');
    break;
  }
}
case Node.ENTITY_REFERENCE_NODE:
{
if (myCanonical) {
  Node child=node.getFirstChild();
  while (child != null) {
    _write(child,indent);
    child=child.getNextSibling();
  }
}
 else {
  myOut.print('&');
  myOut.print(node.getNodeName());
  myOut.print(';');
}
break;
}
case Node.CDATA_SECTION_NODE:
{
if (myCanonical) {
normalizeAndPrint(node.getNodeValue());
}
 else {
myOut.print(CDATA);
myOut.print(node.getNodeValue());
myOut.print("]]>");
}
break;
}
case Node.TEXT_NODE:
{
final String nodeValue=node.getNodeValue();
if (nodeValue.trim().length() > 0) {
normalizeAndPrint(nodeValue);
}
break;
}
case Node.PROCESSING_INSTRUCTION_NODE:
{
myOut.print("<?");
myOut.print(node.getNodeName());
String data=node.getNodeValue();
if (data != null && data.length() > 0) {
myOut.print(' ');
myOut.print(data);
}
myOut.println("?>");
break;
}
}
}
