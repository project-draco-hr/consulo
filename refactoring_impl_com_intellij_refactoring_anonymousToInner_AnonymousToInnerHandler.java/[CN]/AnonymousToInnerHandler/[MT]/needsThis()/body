{
  if (cachedNeedsThis == null) {
    ElementNeedsThis memberNeedsThis=new ElementNeedsThis(myTargetClass,myAnonClass);
    myAnonClass.accept(memberNeedsThis);
class HasExplicitThis extends PsiRecursiveElementVisitor {
      boolean hasExplicitThis=false;
      public void visitReferenceExpression(      PsiReferenceExpression expression){
      }
      public void visitThisExpression(      PsiThisExpression expression){
        hasExplicitThis=true;
      }
    }
    final HasExplicitThis hasExplicitThis=new HasExplicitThis();
    PsiExpressionList argList=myAnonClass.getArgumentList();
    if (argList != null)     argList.accept(hasExplicitThis);
    cachedNeedsThis=memberNeedsThis.usesMembers() || hasExplicitThis.hasExplicitThis;
  }
  return cachedNeedsThis.booleanValue();
}
