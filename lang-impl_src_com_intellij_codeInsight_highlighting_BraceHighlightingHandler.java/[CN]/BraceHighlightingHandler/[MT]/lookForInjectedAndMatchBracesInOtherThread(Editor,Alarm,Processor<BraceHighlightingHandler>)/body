{
  final Project project=editor.getProject();
  if (project == null)   return;
  final int offset=editor.getCaretModel().getOffset();
  Job<Object> job=JobScheduler.getInstance().createJob("Brace highlighter",Job.DEFAULT_PRIORITY);
  job.addTask(new Runnable(){
    public void run(){
      final PsiFile injected=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile>(){
        public PsiFile compute(){
          Document document=editor.getDocument();
          PsiFile psiFile=PsiDocumentManager.getInstance(project).getPsiFile(document);
          return getInjectedFileIfAny(editor,project,offset,psiFile,alarm);
        }
      }
);
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          Project editorProject=editor.getProject();
          if (editorProject != null && !editorProject.isDisposed() && !project.isDisposed() && editor.getComponent().isShowing() && !editor.isViewer()) {
            Editor newEditor=InjectedLanguageUtil.getInjectedEditorForInjectedFileIfAny(editor,injected);
            BraceHighlightingHandler handler=new BraceHighlightingHandler(project,newEditor,alarm,injected);
            processor.process(handler);
          }
        }
      }
,ModalityState.stateForComponent(editor.getComponent()));
    }
  }
);
  job.schedule();
}
