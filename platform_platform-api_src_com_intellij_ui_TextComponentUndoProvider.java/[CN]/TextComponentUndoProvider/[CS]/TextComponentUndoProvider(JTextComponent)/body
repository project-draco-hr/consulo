{
  myTextComponent=textComponent;
  myUndoableEditListener=new UndoableEditListener(){
    public void undoableEditHappened(    UndoableEditEvent e){
      myUndoManager.addEdit(e.getEdit());
    }
  }
;
  myTextComponent.getDocument().addUndoableEditListener(myUndoableEditListener);
  com.intellij.openapi.keymap.Keymap activeKeymap=KeymapManager.getInstance().getActiveKeymap();
  Shortcut[] undoShortcuts=activeKeymap.getShortcuts(IdeActions.ACTION_UNDO);
  Shortcut[] redoShortcuts=activeKeymap.getShortcuts(IdeActions.ACTION_REDO);
  AnAction undoAction=new AnAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      if (myUndoManager.canUndo()) {
        myUndoManager.undo();
      }
    }
  }
;
  AnAction redoAction=new AnAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      if (myUndoManager.canRedo()) {
        myUndoManager.redo();
      }
    }
  }
;
  undoAction.registerCustomShortcutSet(new CustomShortcutSet(undoShortcuts),myTextComponent);
  redoAction.registerCustomShortcutSet(new CustomShortcutSet(redoShortcuts),myTextComponent);
}
