{
  if (!CodeInsightUtil.prepareFileForWrite(file))   return;
  PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
  final PsiReferenceExpression refExpr=(PsiReferenceExpression)element.getParent();
  final PsiClass aClass=(PsiClass)refExpr.resolve();
  PsiImportStaticStatement importStaticStatement=file.getManager().getElementFactory().createImportStaticStatement(aClass,"*");
  ((PsiJavaFile)file).getImportList().add(importStaticStatement);
  PsiFile[] roots=file.getPsiRoots();
  for (  PsiFile root : roots) {
    root.accept(new PsiRecursiveElementVisitor(){
      public void visitReferenceExpression(      PsiReferenceExpression expression){
        if (isParameterizedReference(expression))         return;
        PsiExpression qualifierExpression=expression.getQualifierExpression();
        if (qualifierExpression instanceof PsiReferenceExpression && ((PsiReferenceExpression)qualifierExpression).isReferenceTo(aClass)) {
          try {
            PsiReferenceExpression copy=(PsiReferenceExpression)expression.copy();
            PsiElement resolved=copy.resolve();
            copy.getQualifierExpression().delete();
            PsiManager manager=expression.getManager();
            if (manager.areElementsEquivalent(copy.resolve(),resolved)) {
              qualifierExpression.delete();
              HighlightManager.getInstance(project).addRangeHighlight(editor,expression.getTextRange().getStartOffset(),expression.getTextRange().getEndOffset(),EditorColorsManager.getInstance().getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES),false,null);
            }
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
          }
        }
        super.visitElement(expression);
      }
    }
);
  }
}
