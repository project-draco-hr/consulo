{
  final JBTabs.Max max=computeMaxSize();
  myHeaderFitSize=new Dimension(getSize().width,myHorizontalSide ? Math.max(max.myLabel.height,max.myToolbar.height) : max.myLabel.height);
  final TabInfo selected=getSelectedInfo();
  final JComponent selectedToolbar=myInfo2Toolbar.get(selected);
  LayoutData data=new LayoutData();
  boolean layoutLabels=true;
  if (myLastLayout != null && myLastLayout.contentCount == getTabCount() && myLastLayout.laayoutSize.equals(getSize())) {
    for (    TabInfo each : myInfos) {
      if (getSelectedInfo() == each) {
        final JBTabs.TabLabel eachLabel=myInfo2Label.get(each);
        if (eachLabel.getBounds().width != 0) {
          data=myLastLayout;
          layoutLabels=false;
        }
      }
    }
  }
  Insets insets=getInsets();
  if (insets == null) {
    insets=new Insets(0,0,0,0);
  }
  resetLayout(layoutLabels);
  if (layoutLabels) {
    data.eachX=insets.left;
    if (!myHorizontalSide && selectedToolbar != null) {
      data.xAddin=selectedToolbar.getPreferredSize().width + 1;
    }
    recomputeToLayout(selectedToolbar,data,insets);
    layoutLabels(data,insets);
    if (data.toDrop.size() > 0) {
      data.moreRect=new Rectangle(data.eachX,insets.top,data.moreRectWidth - 1,myHeaderFitSize.height - 1);
    }
  }
  data.yComp=myHeaderFitSize.height + insets.top;
  if (selectedToolbar != null) {
    if (myHorizontalSide) {
      int toolbarX=data.eachX + getToolbarInset() + (data.moreRect != null ? data.moreRect.width : 0);
      selectedToolbar.setBounds(toolbarX,insets.top,getSize().width - insets.left - toolbarX,myHeaderFitSize.height - 1);
    }
 else {
      selectedToolbar.setBounds(insets.left + 1,data.yComp,selectedToolbar.getPreferredSize().width,getSize().height - data.yComp - insets.bottom- 1);
    }
  }
  if (selected != null) {
    final JComponent comp=selected.getComponent();
    comp.setBounds(insets.left + INNER + data.xAddin,data.yComp,getWidth() - insets.left - insets.right- INNER * 2 - data.xAddin,getHeight() - insets.top - insets.bottom- myHeaderFitSize.height- 1);
  }
  final JBTabs.TabLabel tabLabel=myInfo2Label.get(selected);
  if (tabLabel != null) {
    data.selectedTabBounds=tabLabel.getBounds();
  }
  if (data.toLayout.size() > 0 && myInfos.size() > 0) {
    final int left=myInfos.indexOf(data.toLayout.get(0));
    final int right=myInfos.indexOf(data.toLayout.get(data.toLayout.size() - 1));
    myMoreIcon.setPaintedIcons(left > 0,right < myInfos.size() - 1);
  }
 else {
    myMoreIcon.setPaintedIcons(false,false);
  }
  myLastLayout=data;
}
