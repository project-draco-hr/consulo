{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null)   return;
  final ShelvedChangeList[] changeLists=e.getData(ShelvedChangesViewManager.SHELVED_CHANGELIST_KEY);
  List<ShelvedChange> changes=e.getData(ShelvedChangesViewManager.SHELVED_CHANGE_KEY);
  List<ShelvedBinaryFile> binaryFiles=e.getData(ShelvedChangesViewManager.SHELVED_BINARY_FILE_KEY);
  if (changes != null && binaryFiles != null && changes.size() == 0 && binaryFiles.size() == 0) {
    changes=null;
    binaryFiles=null;
  }
  LOG.assertTrue(changeLists != null);
  final ChangeListManager changeListManager=ChangeListManager.getInstance(project);
  final List<LocalChangeList> allChangeLists=changeListManager.getChangeListsCopy();
  String defaultName=changeLists[0].DESCRIPTION;
  LocalChangeList list=null;
  if (changeLists.length == 1) {
    final LocalChangeList sameNamedList=changeListManager.findChangeList(defaultName);
    if (sameNamedList != null) {
      list=sameNamedList;
    }
  }
  if (list == null) {
    list=changeListManager.getDefaultChangeList();
  }
  final ChangeListChooser chooser=new ChangeListChooser(project,allChangeLists,list,VcsBundle.message("unshelve.changelist.chooser.title"),defaultName);
  chooser.show();
  if (!chooser.isOK()) {
    return;
  }
  FileDocumentManager.getInstance().saveAllDocuments();
  final List<ShelvedBinaryFile> finalBinaryFiles=binaryFiles;
  final List<ShelvedChange> finalChanges=changes;
  ProgressManager.getInstance().run(new Task.Backgroundable(project,"Unshelve changes",true,BackgroundFromStartOption.getInstance()){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      for (      ShelvedChangeList changeList : changeLists) {
        ShelveChangesManager.getInstance(project).unshelveChangeList(changeList,finalChanges,finalBinaryFiles,chooser.getSelectedList());
      }
    }
  }
);
}
