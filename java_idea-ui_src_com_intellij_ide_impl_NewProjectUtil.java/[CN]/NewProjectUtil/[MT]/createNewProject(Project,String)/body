{
  final boolean proceed=ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      ProjectManager.getInstance().getDefaultProject();
    }
  }
,ProjectBundle.message("project.new.wizard.progress.title"),true,null);
  if (!proceed)   return;
  final AddModuleWizard dialog=Registry.is("new.project.wizard") ? new AddModuleWizardPro(null,ModulesProvider.EMPTY_MODULES_PROVIDER,defaultPath) : new AddModuleWizard(null,ModulesProvider.EMPTY_MODULES_PROVIDER,defaultPath);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  try {
    doCreate(dialog,projectToClose);
  }
 catch (  final IOException e) {
    UIUtil.invokeLaterIfNeeded(new Runnable(){
      @Override public void run(){
        Messages.showErrorDialog(e.getMessage(),"Project Initialization Failed");
      }
    }
);
  }
}
