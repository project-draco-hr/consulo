{
  PsiJavaToken sign=expr.getOperationSign();
  IElementType i=sign.getTokenType();
  final PsiType type=expr.getType();
  final TailType tailType=expr.getParent() instanceof PsiAssignmentExpression && ((PsiAssignmentExpression)expr.getParent()).getRExpression() == expr ? getAssignmentRValueTailType((PsiAssignmentExpression)expr.getParent()) : TailType.NONE;
  if (i == JavaTokenType.PLUSPLUS || i == JavaTokenType.MINUSMINUS || i == JavaTokenType.TILDE) {
    ExpectedTypeInfoImpl info;
    if (myUsedAfter && type != null) {
      info=createInfoImpl(type,ExpectedTypeInfo.TYPE_STRICTLY,type,tailType);
    }
 else {
      if (type != null) {
        info=createInfoImpl(type,ExpectedTypeInfo.TYPE_OR_SUPERTYPE,PsiType.INT,tailType);
      }
 else {
        info=createInfoImpl(PsiType.LONG,ExpectedTypeInfo.TYPE_OR_SUBTYPE,PsiType.INT,tailType);
      }
    }
    myResult=new ExpectedTypeInfo[]{info};
  }
 else   if (i == JavaTokenType.PLUS || i == JavaTokenType.MINUS) {
    ExpectedTypeInfoImpl info=createInfoImpl(PsiType.DOUBLE,ExpectedTypeInfo.TYPE_OR_SUBTYPE,PsiType.INT,tailType);
    myResult=new ExpectedTypeInfo[]{info};
  }
 else   if (i == JavaTokenType.EXCL) {
    ExpectedTypeInfoImpl info=createInfoImpl(PsiType.BOOLEAN,ExpectedTypeInfo.TYPE_STRICTLY,PsiType.BOOLEAN,tailType);
    myResult=new ExpectedTypeInfo[]{info};
  }
}
