{
  PsiResolveHelper helper=JavaPsiFacade.getInstance(list.getProject()).getResolveHelper();
  if (list.getParent() instanceof PsiMethodCallExpression) {
    PsiMethodCallExpression methodCall=(PsiMethodCallExpression)list.getParent();
    CandidateInfo[] candidates=helper.getReferencedMethodCandidates(methodCall,false);
    myResult=getExpectedArgumentTypesForMethodCall(candidates,list,myExpr,myForCompletion);
  }
 else   if (list.getParent() instanceof PsiEnumConstant) {
    getExpectedArgumentsTypesForEnumConstant((PsiEnumConstant)list.getParent(),helper,list);
  }
 else   if (list.getParent() instanceof PsiNewExpression) {
    getExpectedArgumentsTypesForNewExpression((PsiNewExpression)list.getParent(),helper,list);
  }
 else   if (list.getParent() instanceof PsiAnonymousClass) {
    getExpectedArgumentsTypesForNewExpression((PsiNewExpression)list.getParent().getParent(),helper,list);
  }
}
