{
  if (myExpr.equals(statement.getIteratedValue())) {
    PsiType type=statement.getIterationParameter().getType();
    PsiType arrayType=type.createArrayType();
    ExpectedTypeInfoImpl info1=createInfoImpl(arrayType,ExpectedTypeInfo.TYPE_OR_SUBTYPE,arrayType,TailType.NONE);
    PsiManager manager=statement.getManager();
    PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
    PsiClass iterableClass=JavaPsiFacade.getInstance(manager.getProject()).findClass("java.lang.Iterable",statement.getResolveScope());
    if (iterableClass == null || iterableClass.getTypeParameters().length != 1) {
      myResult=new ExpectedTypeInfo[]{info1};
    }
 else {
      Map<PsiTypeParameter,PsiType> map=new HashMap<PsiTypeParameter,PsiType>();
      map.put(iterableClass.getTypeParameters()[0],PsiWildcardType.createExtends(manager,type));
      PsiSubstitutor substitutor=factory.createSubstitutor(map);
      PsiType iterableType=factory.createType(iterableClass,substitutor);
      ExpectedTypeInfoImpl info2=createInfoImpl(iterableType,ExpectedTypeInfo.TYPE_OR_SUBTYPE,iterableType,TailType.NONE);
      myResult=new ExpectedTypeInfo[]{info1,info2};
    }
  }
}
