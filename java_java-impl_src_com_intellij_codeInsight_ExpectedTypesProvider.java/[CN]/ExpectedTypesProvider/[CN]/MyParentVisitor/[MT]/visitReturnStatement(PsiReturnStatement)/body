{
  final PsiMethod scopeMethod=PsiTreeUtil.getParentOfType(statement,PsiMethod.class);
  if (scopeMethod != null) {
    PsiType type=scopeMethod.getReturnType();
    if (type != null) {
      ExpectedTypeInfoImpl info=createInfoImpl(type,ExpectedTypeInfo.TYPE_OR_SUBTYPE,type,TailType.SEMICOLON);
      if (PropertyUtil.isSimplePropertyAccessor(scopeMethod)) {
        info.expectedName=new NullableComputable<String>(){
          @Override public String compute(){
            return PropertyUtil.getPropertyName(scopeMethod);
          }
        }
;
      }
      myResult=new ExpectedTypeInfo[]{info};
    }
 else {
      myResult=ExpectedTypeInfo.EMPTY_ARRAY;
    }
  }
}
