{
  super.setUp();
  myVcs=SvnVcs.getInstance(myProject);
  myChangeListManager=ChangeListManager.getInstance(myProject);
  myBranchUrl=prepareBranchesStructure();
  myBranchRoot=new File(myTempDirFixture.getTempDirPath(),"b1");
  runInAndVerifyIgnoreOutput("co",myBranchUrl,myBranchRoot.getPath());
  Assert.assertTrue(myBranchRoot.exists());
  myBranchVf=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(myBranchRoot);
  Assert.assertNotNull(myBranchVf);
  myBranchTree=new SubTree(myBranchVf);
  myTree=new SubTree(myWorkingCopyDir);
  final SvnBranchConfigurationManager branchConfigurationManager=SvnBranchConfigurationManager.getInstance(myProject);
  final SvnBranchConfigurationNew configuration=new SvnBranchConfigurationNew();
  configuration.setTrunkUrl(myRepoUrl + "/trunk");
  configuration.addBranches(myRepoUrl + "/branches",new InfoStorage<List<SvnBranchItem>>(new ArrayList<SvnBranchItem>(),InfoReliability.empty));
  branchConfigurationManager.setConfiguration(myWorkingCopyDir,configuration);
  runInAndVerifyIgnoreOutput(new File(myWorkingCopyDir.getPath()),"up");
  Thread.sleep(10);
}
