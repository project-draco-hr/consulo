{
  myActionGroupPanel=new JPanel(){
    @Override public Dimension getPreferredSize(){
      return new Dimension(60,super.getPreferredSize().height);
    }
  }
;
  myLabel=new JLabel("View as:");
  myLabel.setDisplayedMnemonic('a');
  myCombo=new ComboBox();
  myLabel.setLabelFor(myCombo);
  final JPanel combo=new JPanel(new BorderLayout());
  combo.setBorder(new EmptyBorder(2,4,2,4));
  combo.add(myLabel,BorderLayout.WEST);
  combo.add(myCombo,BorderLayout.CENTER);
  final JPanel top=new JPanel(new GridBagLayout());
  top.add(combo,new GridBagConstraints(0,0,1,1,1.0,1.0,GridBagConstraints.CENTER,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
  top.add(myActionGroupPanel,new GridBagConstraints(1,0,1,1,0.0,1.0,GridBagConstraints.CENTER,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
  myStructureViewPanel=new JPanel(){
{
      setBorder(new EmptyBorder(1,0,0,0));
    }
    @Override protected void paintComponent(    final Graphics g){
      super.paintComponent(g);
      g.setColor(UIUtil.getBorderSeparatorColor());
      g.drawRect(0,0,getWidth(),0);
    }
  }
;
  myViewContentPanel=new JPanel();
  final Splitter splitter=new Splitter(true);
  splitter.setFirstComponent(myViewContentPanel);
  splitter.setSecondComponent(myStructureViewPanel);
  myPanel=new SimpleToolWindowPanel(true);
  myPanel.setToolbar(top);
  myPanel.setContent(splitter);
  myPanel.setBorder(new ToolWindow.Border(true,false,false,false));
}
