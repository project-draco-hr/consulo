{
  final MavenProjectsManager manager=MavenProjectsManager.getInstance(project);
  final MavenImportingSettings settings=manager.getImportingSettings();
  AccessToken accessToken=WriteAction.start();
  try {
    List<ModifiableRootModel> rootModels=new ArrayList<ModifiableRootModel>();
    for (    Module each : ModuleManager.getInstance(project).getModules()) {
      MavenProject mavenProject=manager.findProject(each);
      if (mavenProject == null)       continue;
      MavenRootModelAdapter a=new MavenRootModelAdapter(mavenProject,each,new MavenDefaultModifiableModelsProvider(project));
      new MavenFoldersImporter(mavenProject,settings,a).config(updateTargetFoldersOnly);
      ModifiableRootModel model=a.getRootModel();
      if (model.isChanged()) {
        rootModels.add(model);
      }
 else {
        model.dispose();
      }
    }
    if (!rootModels.isEmpty()) {
      ModifiableRootModel[] modelsArray=rootModels.toArray(new ModifiableRootModel[rootModels.size()]);
      ProjectRootManager.getInstance(project).multiCommit(modelsArray);
    }
  }
  finally {
    accessToken.finish();
  }
}
