{
  final Project project=configuration.getProject();
  parameters.getProgramParametersList().addParametersString(configuration.getProperty(RunJavaConfiguration.PROGRAM_PARAMETERS_PROPERTY));
  Module module=null;
  if (configuration instanceof ModuleBasedConfiguration) {
    module=((ModuleBasedConfiguration)configuration).getConfigurationModule().getModule();
  }
  String vmParameters=configuration.getProperty(RunJavaConfiguration.VM_PARAMETERS_PROPERTY);
  if (vmParameters != null) {
    vmParameters=expandPath(vmParameters,module,project);
  }
  if (parameters.getEnv() != null) {
    final Map<String,String> envs=new HashMap<String,String>();
    for (    String env : parameters.getEnv().keySet()) {
      final String value=expandPath(parameters.getEnv().get(env),module,project);
      envs.put(env,value);
      if (vmParameters != null) {
        vmParameters=StringUtil.replace(vmParameters,"$" + env + "$",value,false);
      }
    }
    parameters.setEnv(envs);
  }
  parameters.getVMParametersList().addParametersString(vmParameters);
  String workingDirectory=configuration.getProperty(RunJavaConfiguration.WORKING_DIRECTORY_PROPERTY);
  if (workingDirectory == null || workingDirectory.trim().length() == 0) {
    workingDirectory=PathUtil.getLocalPath(project.getBaseDir());
  }
  parameters.setWorkingDirectory(expandPath(workingDirectory,module,project));
}
