{
  super.visitAssignmentExpression(expression);
  if (!WellFormednessUtils.isWellFormed(expression)) {
    return;
  }
  final PsiJavaToken sign=expression.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  if (!JavaTokenType.EQ.equals(tokenType)) {
    return;
  }
  final PsiExpression lhs=expression.getLExpression();
  if (!(lhs instanceof PsiReferenceExpression)) {
    return;
  }
  if (!TypeUtils.expressionHasTypeOrSubtype("java.util.Date",lhs) && !TypeUtils.expressionHasTypeOrSubtype("java.util.Calendar",lhs)) {
    return;
  }
  final PsiElement lhsReferent=((PsiReference)lhs).resolve();
  if (!(lhsReferent instanceof PsiField)) {
    return;
  }
  final PsiExpression rhs=expression.getRExpression();
  if (!(rhs instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiElement rhsReferent=((PsiReference)rhs).resolve();
  if (!(rhsReferent instanceof PsiParameter)) {
    return;
  }
  if (!(rhsReferent.getParent() instanceof PsiParameterList)) {
    return;
  }
  registerError(lhs);
}
