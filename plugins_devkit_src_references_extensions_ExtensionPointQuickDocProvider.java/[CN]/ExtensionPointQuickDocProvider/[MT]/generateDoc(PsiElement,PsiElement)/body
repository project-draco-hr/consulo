{
  if (originalElement.getLanguage() == XMLLanguage.INSTANCE || DevKitInspectionBase.isPluginXml(originalElement.getContainingFile())) {
    final PsiElement context=element.getContext();
    String fqn=null;
    if (originalElement instanceof XmlToken && ((XmlToken)originalElement).getTokenType() == XmlTokenType.XML_NAME) {
      PsiElement attr;
      PsiElement tag;
      if (context != null && (attr=context.getParent()) instanceof XmlAttribute && (tag=attr.getParent()) instanceof XmlTag) {
        final String interfaceFqn=((XmlTag)tag).getAttributeValue("interface");
        final String beanClassFqn=((XmlTag)tag).getAttributeValue("beanClass");
        fqn=interfaceFqn == null ? beanClassFqn : interfaceFqn;
      }
    }
    if (fqn != null) {
      final Project project=element.getProject();
      final PsiClass psiClass=JavaPsiFacade.getInstance(project).findClass(fqn,GlobalSearchScope.allScope(project));
      if (psiClass != null) {
        return JavaDocumentationProvider.generateExternalJavadoc(psiClass);
      }
    }
  }
  return null;
}
