{
  myEditor=editor;
  myParameters=parameters;
  myHandler=handler;
  myLookup=(LookupImpl)LookupManager.getInstance(editor.getProject()).createLookup(editor,new LookupItem[0],"",new CompletionPreferencePolicy(parameters),adText);
  myLookup.addLookupListener(new LookupAdapter(){
    public void itemSelected(    LookupEvent event){
      cancel();
      finishCompletion();
      LookupElement item=event.getItem();
      if (item == null)       return;
      contextOriginal.setStartOffset(myEditor.getCaretModel().getOffset() - item.getLookupString().length());
      myHandler.selectLookupItem(item,CodeInsightSettings.getInstance().SHOW_SIGNATURES_IN_LOOKUPS || (item instanceof LookupItem && ((LookupItem)item).getAttribute(LookupItem.FORCE_SHOW_SIGNATURE_ATTR) != null),event.getCompletionChar(),contextOriginal,new LookupData(myLookup.getItems()));
    }
    public void lookupCanceled(    final LookupEvent event){
      cancel();
      finishCompletion();
    }
  }
);
  myLookup.setCalculating(true);
  myQueue=new MergingUpdateQueue("completion lookup progress",2000,true,myEditor.getContentComponent());
  myQueue.queue(new Update("initialShow"){
    public void run(){
      final AsyncProcessIcon processIcon=getShownLookup().getProcessIcon();
      processIcon.setVisible(true);
      processIcon.resume();
      updateLookup();
    }
  }
);
  ApplicationManager.getApplication().assertIsDispatchThread();
  registerItself();
}
