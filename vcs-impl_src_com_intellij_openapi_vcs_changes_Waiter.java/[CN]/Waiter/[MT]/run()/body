{
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  indicator.setIndeterminate(true);
  indicator.setText2(VcsBundle.message("commit.wait.util.synched.text"));
synchronized (myLock) {
    if (myStarted) {
      LOG.error("Waiter running under progress being started again.");
      return;
    }
    myStarted=true;
    while ((!myDone) && (!ProgressManager.getInstance().getProgressIndicator().isCanceled())) {
      try {
        myLock.wait();
      }
 catch (      InterruptedException e) {
      }
    }
  }
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
synchronized (myLock) {
        if (!myDone) {
          return;
        }
      }
      if (myProject.isDisposed())       return;
      myRunnable.run();
      ChangesViewManager.getInstance(myProject).refreshView();
    }
  }
);
}
