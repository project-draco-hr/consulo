{
  LOG.info("test");
  String filterText="[Group1]\n" + "com.intellij.package1.*\n" + "com.intellij.package2.ExcludedTest\n"+ "com.intellij.package3.*package4\n"+ "[Group2]\n"+ "com.intellij.package5.*\n"+ "com.intellij.package6.ExcludedTest\n"+ "com.intellij.package7.*package8";
  TestClassesFilter classesFilter=TestClassesFilter.createOn(new InputStreamReader(new ByteArrayInputStream(filterText.getBytes())));
  String group1Name="Group1";
  assertTrue(classesFilter.matches("com.intellij.package1.Test",group1Name));
  assertTrue(classesFilter.matches("com.intellij.package1.Test2",group1Name));
  assertFalse(classesFilter.matches("com.intellij.package2.Test",group1Name));
  assertTrue(classesFilter.matches("com.intellij.package2.ExcludedTest",group1Name));
  assertTrue(classesFilter.matches("com.intellij.package3.package4",group1Name));
  assertTrue(classesFilter.matches("com.intellij.package3.package5.package4",group1Name));
  assertFalse(classesFilter.matches("com.intellij.package3",group1Name));
  assertFalse(classesFilter.matches("com.intellij",group1Name));
  assertFalse(classesFilter.matches("com.intellij.Test",group1Name));
  assertFalse(classesFilter.matches("com.intellij.package5.Test",group1Name));
  assertFalse(classesFilter.matches("com.intellij.package5.Test2",group1Name));
  assertFalse(classesFilter.matches("com.intellij.package6.Test",group1Name));
  assertFalse(classesFilter.matches("com.intellij.package6.ExcludedTest",group1Name));
  assertFalse(classesFilter.matches("com.intellij.package7.package8",group1Name));
  assertFalse(classesFilter.matches("com.intellij.package7.package5.package8",group1Name));
  assertFalse(classesFilter.matches("com.intellij.package7",group1Name));
  String group2Name="Group2";
  assertFalse(classesFilter.matches("com.intellij.package1.Test",group2Name));
  assertFalse(classesFilter.matches("com.intellij.package1.Test2",group2Name));
  assertFalse(classesFilter.matches("com.intellij.package2.Test",group2Name));
  assertFalse(classesFilter.matches("com.intellij.package2.ExcludedTest",group2Name));
  assertFalse(classesFilter.matches("com.intellij.package3.package4",group2Name));
  assertFalse(classesFilter.matches("com.intellij.package3.package5.package4",group2Name));
  assertFalse(classesFilter.matches("com.intellij.package3",group2Name));
  assertFalse(classesFilter.matches("com.intellij",group2Name));
  assertFalse(classesFilter.matches("com.intellij.Test",group2Name));
  assertTrue(classesFilter.matches("com.intellij.package5.Test",group2Name));
  assertTrue(classesFilter.matches("com.intellij.package5.Test2",group2Name));
  assertFalse(classesFilter.matches("com.intellij.package6.Test",group2Name));
  assertTrue(classesFilter.matches("com.intellij.package6.ExcludedTest",group2Name));
  assertTrue(classesFilter.matches("com.intellij.package7.package8",group2Name));
  assertTrue(classesFilter.matches("com.intellij.package7.package5.package8",group2Name));
  assertFalse(classesFilter.matches("com.intellij.package7",group2Name));
  checkForNullGroup(classesFilter,null);
  checkForNullGroup(classesFilter,TestClassesFilter.ALL_EXCLUDE_DEFINED);
}
