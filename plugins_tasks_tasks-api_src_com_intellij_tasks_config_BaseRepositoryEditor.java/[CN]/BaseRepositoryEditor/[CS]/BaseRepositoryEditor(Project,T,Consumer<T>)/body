{
  myProject=project;
  myRepository=repository;
  myChangeListener=changeListener;
  myTestButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      afterTestConnection(TaskManager.getManager(project).testConnection(repository));
    }
  }
);
  myProxySettingsButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      HttpConfigurable.editConfigurable(myPanel);
      enableButtons();
    }
  }
);
  myURLText.setText(repository.getUrl());
  myUserNameText.setText(repository.getUsername());
  myPasswordText.setText(repository.getPassword());
  myShareUrlCheckBox.setSelected(repository.isShared());
  myUseProxy.setSelected(repository.isUseProxy());
  myUseHttpAuthenticationCheckBox.setSelected(repository.isUseHttpAuthentication());
  myUseHttpAuthenticationCheckBox.setVisible(repository.isSupported(TaskRepository.BASIC_HTTP_AUTHORIZATION));
  myLoginAnonymouslyJBCheckBox.setVisible(repository.isSupported(TaskRepository.LOGIN_ANONYMOUSLY));
  myLoginAnonymouslyJBCheckBox.setSelected(repository.isLoginAnonymously());
  myLoginAnonymouslyJBCheckBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      loginAnonymouslyChanged(!myLoginAnonymouslyJBCheckBox.isSelected());
    }
  }
);
  myAddCommitMessage.setSelected(repository.isShouldFormatCommitMessage());
  myDocument=EditorFactory.getInstance().createDocument(repository.getCommitMessageFormat());
  myEditor=EditorFactory.getInstance().createEditor(myDocument);
  myEditorPanel.add(myEditor.getComponent(),BorderLayout.CENTER);
  myComment.setText("Available placeholders: " + repository.getComment());
  installListener(myAddCommitMessage);
  installListener(myDocument);
  installListener(myURLText);
  installListener(myUserNameText);
  installListener(myPasswordText);
  installListener(myShareUrlCheckBox);
  installListener(myUseProxy);
  installListener(myUseHttpAuthenticationCheckBox);
  installListener(myLoginAnonymouslyJBCheckBox);
  enableButtons();
  JComponent customPanel=createCustomPanel();
  if (customPanel != null) {
    myCustomPanel.add(customPanel,BorderLayout.CENTER);
  }
  setAnchor(myUseProxy);
  loginAnonymouslyChanged(!myLoginAnonymouslyJBCheckBox.isSelected());
}
