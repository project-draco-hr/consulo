{
  GridLayoutManager gridLayout=(GridLayoutManager)container.getLayout();
  GridBagConverter converter=new GridBagConverter(gridLayout.getMargin(),getGap(container,true),getGap(container,false),gridLayout.isSameSizeHorizontally(),gridLayout.isSameSizeVertically());
  for (int i=0; i < container.getComponentCount(); i++) {
    final LwComponent component=(LwComponent)container.getComponent(i);
    if (component instanceof LwHSpacer || component instanceof LwVSpacer) {
      GridConstraints constraints=component.getConstraints().store();
      constraints.setHSizePolicy(constraints.getHSizePolicy() & ~GridConstraints.SIZEPOLICY_WANT_GROW);
      constraints.setVSizePolicy(constraints.getVSizePolicy() & ~GridConstraints.SIZEPOLICY_WANT_GROW);
      converter.addComponent(null,constraints);
    }
 else {
      converter.addComponent(null,component.getConstraints());
    }
  }
  Result[] results=converter.convert();
  int componentIndex=0;
  for (int i=0; i < results.length; i++) {
    if (!results[i].isFillerPanel) {
      final LwComponent component=(LwComponent)container.getComponent(componentIndex++);
      idToConstraintsMap.put(component.getId(),results[i]);
    }
  }
}
