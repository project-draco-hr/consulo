{
  prepareForFragments();
  DiffFragment a_b=new DiffFragment("a","b");
  DiffFragment x_x=new DiffFragment("x","x");
  DiffFragment cl_dl=new DiffFragment("c\n","d\n");
  DiffFragment yl_yl=new DiffFragment("y\n","y\n");
  DiffFragment zl_z=new DiffFragment("z\n","z");
  DiffFragment z_zl=new DiffFragment("z","z\n");
  DiffFragment al_=new DiffFragment("a\n",null);
  DiffFragment _al=new DiffFragment(null,"a\n");
  DiffFragment[] originalFragments=new DiffFragment[]{a_b,x_x,cl_dl,a_b,yl_yl,x_x,zl_z,z_zl,yl_yl,new DiffFragment("y\nx","y\nx"),a_b,al_,_al};
  CHECK.compareAll(new DiffFragment[][]{new DiffFragment[]{a_b,x_x,cl_dl,a_b,yl_yl},new DiffFragment[]{x_x,zl_z,z_zl,yl_yl},new DiffFragment[]{yl_yl},new DiffFragment[]{x_x,a_b,al_,_al}},Util.splitByUnchangedLines(originalFragments));
  CHECK.compareAll(new DiffFragment[][]{new DiffFragment[]{new DiffFragment("abc\n","abc\n")},new DiffFragment[]{DiffFragment.unchanged("123\n","123")}},Util.splitByUnchangedLines(new DiffFragment[]{DiffFragment.unchanged("abc\n123\n","abc\n123")}));
  CHECK.compareAll(new DiffFragment[][]{new DiffFragment[]{DiffFragment.unchanged("a\n ","a")}},Util.splitByUnchangedLines(new DiffFragment[]{DiffFragment.unchanged("a\n ","a")}));
}
