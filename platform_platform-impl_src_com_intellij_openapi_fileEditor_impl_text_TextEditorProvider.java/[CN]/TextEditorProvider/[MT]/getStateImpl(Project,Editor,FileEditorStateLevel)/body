{
  TextEditorState state=new TextEditorState();
  CaretModel caretModel=editor.getCaretModel();
  if (caretModel.supportsMultipleCarets()) {
    List<CaretState> caretsAndSelections=caretModel.getCaretsAndSelections();
    state.CARETS=new TextEditorState.CaretState[caretsAndSelections.size()];
    for (int i=0; i < caretsAndSelections.size(); i++) {
      CaretState caretState=caretsAndSelections.get(i);
      LogicalPosition caretPosition=caretState.getCaretPosition();
      LogicalPosition selectionStartPosition=caretState.getSelectionStart();
      LogicalPosition selectionEndPosition=caretState.getSelectionEnd();
      state.CARETS[i]=createCaretState(caretPosition,selectionStartPosition,selectionEndPosition);
    }
  }
 else {
    LogicalPosition caretPosition=caretModel.getLogicalPosition();
    LogicalPosition selectionStartPosition=editor.offsetToLogicalPosition(editor.getSelectionModel().getSelectionStart());
    LogicalPosition selectionEndPosition=editor.offsetToLogicalPosition(editor.getSelectionModel().getSelectionEnd());
    state.CARETS=new TextEditorState.CaretState[1];
    state.CARETS[0]=createCaretState(caretPosition,selectionStartPosition,selectionEndPosition);
  }
  state.VERTICAL_SCROLL_PROPORTION=level == FileEditorStateLevel.UNDO ? -1 : EditorUtil.calcVerticalScrollProportion(editor);
  return state;
}
