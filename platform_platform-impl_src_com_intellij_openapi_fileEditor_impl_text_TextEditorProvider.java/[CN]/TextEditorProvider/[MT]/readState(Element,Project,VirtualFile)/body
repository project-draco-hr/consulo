{
  TextEditorState state=new TextEditorState();
  try {
    List<Element> caretElements=element.getChildren(CARET_ELEMENT);
    if (caretElements.isEmpty()) {
      state.CARETS=new TextEditorState.CaretState[]{readCaretInfo(element)};
    }
 else {
      state.CARETS=new TextEditorState.CaretState[caretElements.size()];
      for (int i=0; i < caretElements.size(); i++) {
        state.CARETS[i]=readCaretInfo(caretElements.get(i));
      }
    }
    String verticalScrollProportion=element.getAttributeValue(VERTICAL_SCROLL_PROPORTION_ATTR);
    state.VERTICAL_SCROLL_PROPORTION=verticalScrollProportion == null ? 0 : Float.parseFloat(verticalScrollProportion);
    String verticalOffset=element.getAttributeValue(VERTICAL_OFFSET_ATTR);
    String maxVerticalOffset=element.getAttributeValue(MAX_VERTICAL_OFFSET_ATTR);
    if (!StringUtil.isEmpty(verticalOffset) && !StringUtil.isEmpty(maxVerticalOffset)) {
      state.VERTICAL_SCROLL_OFFSET=Integer.parseInt(verticalOffset);
      state.MAX_VERTICAL_SCROLL_OFFSET=Integer.parseInt(maxVerticalOffset);
    }
  }
 catch (  NumberFormatException ignored) {
  }
  return state;
}
