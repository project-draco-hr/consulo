{
  if (parentOfType != null && parentOfType.getTextLength() > MAX_SCOPE_SIZE_TO_SEARCH_UNRESOLVED)   return new String[0];
  final List<String> unresolvedRefs=new ArrayList<String>();
  if (parentOfType != null) {
    parentOfType.accept(new PsiRecursiveElementVisitor(){
      public void visitReferenceExpression(      PsiReferenceExpression reference){
        final PsiElement parent=reference.getParent();
        if (parent instanceof PsiReference)         return;
        if (referenceOnMethod && parent instanceof PsiMethodCallExpression && reference == ((PsiMethodCallExpression)parent).getMethodExpression()) {
          if (reference.resolve() == null && reference.getReferenceName() != null)           unresolvedRefs.add(reference.getReferenceName());
        }
 else         if (!referenceOnMethod && reference.resolve() == null && reference.getReferenceName() != null)         unresolvedRefs.add(reference.getReferenceName());
      }
    }
);
  }
  return unresolvedRefs.toArray(new String[unresolvedRefs.size()]);
}
