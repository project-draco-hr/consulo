{
  final List newSuggestions=new ArrayList();
  int longestOverlap=0;
  for (int i=0; i < suggestedNames.length; i++) {
    String suggestedName=suggestedNames[i];
    if (suggestedName.toUpperCase().startsWith(prefix.toUpperCase())) {
      newSuggestions.add(suggestedName);
      longestOverlap=prefix.length();
    }
    suggestedName="" + Character.toUpperCase(suggestedName.charAt(0)) + suggestedName.substring(1);
    final int overlap=getOverlap(suggestedName,prefix);
    if (overlap < longestOverlap)     continue;
    if (overlap > longestOverlap) {
      newSuggestions.clear();
      longestOverlap=overlap;
    }
    String suggestion=prefix.substring(0,prefix.length() - overlap) + suggestedName;
    final int lastIndexOfSuffix=suggestion.lastIndexOf(suffix);
    if (lastIndexOfSuffix >= 0 && suffix.length() < suggestion.length() - lastIndexOfSuffix) {
      suggestion=suggestion.substring(0,lastIndexOfSuffix) + suffix;
    }
    if (!newSuggestions.contains(suggestion)) {
      newSuggestions.add(suggestion);
    }
  }
  return (String[])newSuggestions.toArray(new String[newSuggestions.size()]);
}
