{
  HighlightInfoType errorType;
  if (PsiTreeUtil.getParentOfType(element,PsiDocComment.class) != null) {
    errorType=HighlightInfoType.JAVADOC_ERROR;
    if (!mySettings.getInspectionProfile().isToolEnabled(HighlightDisplayKey.JAVADOC_ERROR))     return;
  }
 else {
    errorType=HighlightInfoType.ERROR;
  }
  TextRange range=element.getTextRange();
  if (range.getLength() > 0) {
    myHolder.add(HighlightInfo.createHighlightInfo(errorType,range,element.getErrorDescription()));
  }
 else {
    int offset=range.getStartOffset();
    PsiFile containingFile=element.getContainingFile();
    int fileLength=containingFile.getTextLength();
    PsiElement elementAtOffset=containingFile.findElementAt(offset);
    String text=elementAtOffset == null ? null : elementAtOffset.getText();
    if (offset < fileLength && text != null && !StringUtil.startsWithChar(text,'\n') && !StringUtil.startsWithChar(text,'\r')) {
      int start=offset;
      PsiElement prevElement=containingFile.findElementAt(offset - 1);
      if (offset > 0 && prevElement != null && prevElement.getText().equals("(") && StringUtil.startsWithChar(text,')')) {
        start=offset - 1;
      }
      int end=offset + 1;
      HighlightInfo info=HighlightInfo.createHighlightInfo(errorType,start,end,element.getErrorDescription());
      myHolder.add(info);
      info.navigationShift=offset - start;
    }
 else {
      int start;
      int end;
      if (offset > 0) {
        start=offset - 1;
        end=offset;
      }
 else {
        start=offset;
        end=offset < fileLength ? offset + 1 : offset;
      }
      HighlightInfo info=HighlightInfo.createHighlightInfo(errorType,start,end,element.getErrorDescription());
      myHolder.add(info);
      info.isAfterEndOfLine=true;
    }
  }
}
