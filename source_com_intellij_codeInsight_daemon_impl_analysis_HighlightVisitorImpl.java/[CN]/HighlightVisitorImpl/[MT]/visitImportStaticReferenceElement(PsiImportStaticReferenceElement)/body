{
  String refName=ref.getReferenceName();
  JavaResolveResult[] results=ref.multiResolve(false);
  if (results.length == 0) {
    String description=JavaErrorMessages.message("cannot.resolve.symbol",refName);
    HighlightInfo info=HighlightInfo.createHighlightInfo(HighlightInfoType.WRONG_REF,ref.getReferenceNameElement(),description);
    myHolder.add(info);
    QuickFixAction.registerQuickFixAction(info,SetupJDKFix.getInstnace(),null);
  }
 else {
    PsiManager manager=ref.getManager();
    for (    JavaResolveResult result : results) {
      PsiElement element=result.getElement();
      if (!(element instanceof PsiModifierListOwner) || !((PsiModifierListOwner)element).hasModifierProperty(PsiModifier.STATIC)) {
        continue;
      }
      @NonNls String messageKey=null;
      if (element instanceof PsiClass) {
        PsiClass aClass=mySingleImportedClasses.get(refName);
        if (aClass != null && !manager.areElementsEquivalent(aClass,element)) {
          messageKey="class.is.already.defined.in.single.type.import";
        }
        mySingleImportedClasses.put(refName,(PsiClass)element);
      }
 else       if (element instanceof PsiField) {
        PsiField field=(PsiField)mySingleImportedFields.get(refName);
        if (field != null && !manager.areElementsEquivalent(field,element)) {
          messageKey="field.is.already.defined.in.single.type.import";
        }
        mySingleImportedFields.put(refName,element);
      }
 else       if (element instanceof PsiMethod) {
        MethodSignature signature=((PsiMethod)element).getSignature(PsiSubstitutor.EMPTY);
        PsiMethod method=(PsiMethod)mySingleImportedMethods.get(signature);
        if (method != null && !manager.areElementsEquivalent(method,element)) {
          messageKey="method.is.already.defined.in.single.type.import";
        }
        mySingleImportedMethods.put(signature,element);
      }
      if (messageKey != null) {
        String description=JavaErrorMessages.message(messageKey,refName);
        myHolder.add(HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,ref,description));
      }
    }
  }
}
