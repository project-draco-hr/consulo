{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  @NonNls final String methodName=methodExpression.getReferenceName();
  if (!HardcodedMethodConstants.EQUALS.equals(methodName) && !"equalsIgnoreCase".equals(methodName)) {
    return;
  }
  final PsiExpressionList argList=expression.getArgumentList();
  final PsiExpression[] args=argList.getExpressions();
  if (args.length != 1) {
    return;
  }
  final PsiExpression arg=args[0];
  final PsiType argType=arg.getType();
  if (argType == null) {
    return;
  }
  if (!(arg instanceof PsiLiteralExpression)) {
    return;
  }
  if (!TypeUtils.isJavaLangString(argType)) {
    return;
  }
  final PsiExpression target=methodExpression.getQualifierExpression();
  if (target instanceof PsiLiteralExpression) {
    return;
  }
  registerError(expression);
}
