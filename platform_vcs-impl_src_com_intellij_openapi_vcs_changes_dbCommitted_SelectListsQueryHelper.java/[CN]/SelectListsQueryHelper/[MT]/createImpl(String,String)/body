{
  final PreparedStatement statement=myConnection.getOrCreatePreparedStatement(queryName,new ThrowableConvertor<Connection,PreparedStatement,SQLException>(){
    @Override public PreparedStatement convert(    Connection connection) throws SQLException {
      return connection.prepareStatement("SELECT " + SqliteTables.REVISION.RAW_DATA + " FROM "+ SqliteTables.REVISION.TABLE_NAME+ " R INNER JOIN "+ SqliteTables.PATHS_2_REVS.TABLE_NAME+ " PR ON R."+ SqliteTables.REVISION.ID+ " = PR."+ SqliteTables.PATHS_2_REVS.REVISION_FK+ " , "+ SqliteTables.PATHS.TABLE_NAME+ " P ON PR."+ SqliteTables.PATHS_2_REVS.PATH_FK+ " = P."+ SqliteTables.PATHS.ID+ " WHERE R."+ SqliteTables.REVISION.ROOT_FK+ " = ? AND "+ whereClause+ " ORDER BY "+ SqliteTables.REVISION.NUMBER_INT+ " DESC");
    }
  }
);
  statement.setLong(1,myLocationId);
  return statement;
}
