{
  GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(myProject);
  IntroduceParameterUtil.processUsages(usages,this);
  final GrMethod toReplaceIn=(GrMethod)mySettings.getToReplaceIn();
  final PsiMethod toSearchFor=(PsiMethod)mySettings.getToSearchFor();
  final boolean methodsToProcessAreDifferent=toReplaceIn != toSearchFor;
  if (mySettings.generateDelegate()) {
    generateDelegate(toReplaceIn,toSearchFor,methodsToProcessAreDifferent);
  }
  final FieldConflictsResolver fieldConflictsResolver=new FieldConflictsResolver(mySettings.getName(),toReplaceIn.getBlock());
  processMethodSignature(usages,toReplaceIn,toSearchFor,methodsToProcessAreDifferent);
  processUsages(usages,factory);
  processStringPart();
  processVar();
  fieldConflictsResolver.fix();
}
