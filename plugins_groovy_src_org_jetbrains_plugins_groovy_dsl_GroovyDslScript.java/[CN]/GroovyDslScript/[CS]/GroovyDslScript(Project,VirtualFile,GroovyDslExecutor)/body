{
  this.project=project;
  this.file=file;
  this.executor=executor;
  myMaps=CachedValuesManager.getManager(project).createCachedValue(new CachedValueProvider<Pair<ConcurrentMap<String,Boolean>,ConcurrentMap<GroovyClassDescriptor,CustomMembersHolder>>>(){
    @Override public Result<Pair<ConcurrentMap<String,Boolean>,ConcurrentMap<GroovyClassDescriptor,CustomMembersHolder>>> compute(){
      ConcurrentMap<String,Boolean> specificities=new ConcurrentHashMap<String,Boolean>();
      ConcurrentMap<GroovyClassDescriptor,CustomMembersHolder> holders=new ConcurrentHashMap<GroovyClassDescriptor,CustomMembersHolder>();
      return Result.create(Pair.create(specificities,holders),PsiModificationTracker.MODIFICATION_COUNT,ProjectRootManager.getInstance(project));
    }
  }
,false);
}
