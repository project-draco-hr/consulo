{
  if (!(value.getParent() instanceof XmlAttribute)) {
    checkReferences(value,QuickFixProvider.NULL);
    return;
  }
  XmlAttribute attribute=(XmlAttribute)value.getParent();
  if (value.getUserData(DO_NOT_VALIDATE_KEY) != null) {
    return;
  }
  XmlTag tag=attribute.getParent();
  XmlElementDescriptor elementDescriptor=tag.getDescriptor();
  if (elementDescriptor == null)   return;
  XmlAttributeDescriptor attributeDescriptor=elementDescriptor.getAttributeDescriptor(attribute);
  if (attributeDescriptor == null)   return;
  String error=attributeDescriptor.validateValue(value,attribute.getValue());
  if (error != null) {
    addToResults(HighlightInfo.createHighlightInfo(getTagProblemInfoType(tag),value,error));
    return;
  }
  final RefCountHolder refCountHolder=myRefCountHolder;
  if (refCountHolder != null && attributeDescriptor.hasIdType() && tag.getParent().getUserData(DO_NOT_VALIDATE_KEY) == null) {
    final String unquotedValue=getUnquotedValue(value,tag);
    if (XmlUtil.isSimpleXmlAttributeValue(unquotedValue)) {
      XmlTag xmlTag=refCountHolder.getTagById(unquotedValue);
      if (xmlTag == null || !xmlTag.isValid() || xmlTag == tag) {
        refCountHolder.registerTagWithId(unquotedValue,tag);
      }
 else {
        XmlAttribute anotherTagIdValue=xmlTag.getAttribute(ID_ATT,null);
        if (anotherTagIdValue != null && getUnquotedValue(anotherTagIdValue.getValueElement(),xmlTag).equals(unquotedValue)) {
          addToResults(HighlightInfo.createHighlightInfo(HighlightInfoType.WRONG_REF,value,XmlErrorMessages.message("duplicate.id.reference")));
          addToResults(HighlightInfo.createHighlightInfo(HighlightInfoType.WRONG_REF,xmlTag.getAttribute(ID_ATT,null).getValueElement(),XmlErrorMessages.message("duplicate.id.reference")));
          return;
        }
 else {
          refCountHolder.registerTagWithId(unquotedValue,tag);
        }
      }
    }
  }
  QuickFixProvider quickFixProvider=QuickFixProvider.NULL;
  if (attributeDescriptor instanceof QuickFixProvider)   quickFixProvider=(QuickFixProvider)attributeDescriptor;
  checkReferences(value,quickFixProvider);
}
