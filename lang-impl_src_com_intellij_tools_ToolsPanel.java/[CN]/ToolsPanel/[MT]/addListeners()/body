{
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      update();
    }
  }
);
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      ToolEditorDialog dlg=new ToolEditorDialog(ToolsPanel.this);
      Tool tool=new Tool();
      tool.setUseConsole(true);
      tool.setFilesSynchronizedAfterRun(true);
      tool.setShownInMainMenu(true);
      tool.setShownInEditor(true);
      tool.setShownInProjectViews(true);
      tool.setShownInSearchResultsPopup(true);
      tool.setEnabled(true);
      dlg.setData(tool,getGroups());
      dlg.show();
      if (dlg.isOK()) {
        insertNewTool(dlg.getData(),true);
      }
      myTree.requestFocus();
    }
  }
);
  myCopyButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      Tool originalTool=getSelectedTool();
      if (originalTool != null) {
        ToolEditorDialog dlg=new ToolEditorDialog(ToolsPanel.this);
        Tool toolCopy=new Tool();
        toolCopy.copyFrom(originalTool);
        dlg.setData(toolCopy,getGroups());
        dlg.show();
        if (dlg.isOK()) {
          insertNewTool(dlg.getData(),true);
        }
        myTree.requestFocus();
      }
    }
  }
);
  myEditButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      editSelected();
      myTree.requestFocus();
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      removeSelected();
    }
  }
);
  myMoveUpButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      moveNode(Direction.UP);
      myIsModified=true;
    }
  }
);
  myMoveDownButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      moveNode(Direction.DOWN);
      myIsModified=true;
    }
  }
);
}
