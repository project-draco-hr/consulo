{
  final ProcessHandler handler=JUnitProcessHandler.runJava(getJavaParameters(),myProject);
  handler.addProcessListener(new ProcessAdapter(){
    public void processTerminated(    final ProcessEvent event){
      if (myTempFile != null) {
        myTempFile.delete();
      }
      final CoverageDataManager coverageDataManager=CoverageDataManager.getInstance(myProject);
      if (myCurrentCoverageSuite != null) {
        coverageDataManager.coverageGathered(myCurrentCoverageSuite);
      }
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          final boolean hasFailed=!Filter.DEFECTIVE_LEAF.and(JavaAwareFilter.METHOD(myProject)).select(consoleView.getModel().getRoot().getAllTests()).isEmpty();
          ToolWindowManager.getInstance(myProject).notifyByBalloon(consoleView.getProperties().isDebug() ? ToolWindowId.DEBUG : ToolWindowId.RUN,hasFailed ? MessageType.ERROR : MessageType.INFO,hasFailed ? ExecutionBundle.message("junit.runing.info.tests.failed.label") : ExecutionBundle.message("junit.runing.info.tests.passed.label"),null,null);
        }
      }
);
    }
  }
);
  return handler;
}
