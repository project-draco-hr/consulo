{
  final String forkMode=myConfiguration.getForkMode();
  if (Comparing.strEqual(forkMode,"none")) {
    return;
  }
  if (getRunnerSettings().getData() != null) {
    final String actionName=executor.getActionName();
    throw new CantRunException(actionName + " is disabled in fork mode.<br/>Please change fork mode to &lt;none&gt; to " + actionName.toLowerCase()+ ".");
  }
  final JavaParameters javaParameters=getJavaParameters();
  final Sdk jdk=javaParameters.getJdk();
  if (jdk == null) {
    throw new ExecutionException(ExecutionBundle.message("run.configuration.error.no.jdk.specified"));
  }
  try {
    final File tempFile=FileUtil.createTempFile("command.line","",true);
    final PrintWriter writer=new PrintWriter(tempFile,"UTF-8");
    try {
      writer.println(((JavaSdkType)jdk.getSdkType()).getVMExecutablePath(jdk));
      for (      String vmParameter : javaParameters.getVMParametersList().getList()) {
        writer.println(vmParameter);
      }
      writer.println("-classpath");
      writer.println(javaParameters.getClassPath().getPathsString());
    }
  finally {
      writer.close();
    }
    myJavaParameters.getProgramParametersList().add("@@@" + forkMode + ','+ tempFile.getAbsolutePath());
  }
 catch (  Exception e) {
    LOG.error(e);
  }
}
