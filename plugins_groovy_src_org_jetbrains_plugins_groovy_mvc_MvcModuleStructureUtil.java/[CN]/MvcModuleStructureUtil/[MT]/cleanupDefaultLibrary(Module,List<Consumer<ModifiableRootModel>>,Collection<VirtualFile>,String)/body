{
  final Library library=findUserLibrary(module,libName);
  if (library == null) {
    return;
  }
  final VirtualFileManager virtualFileManager=VirtualFileManager.getInstance();
  final List<String> toRemoveUrls=new ArrayList<String>();
  for (  String url : library.getUrls(OrderRootType.CLASSES)) {
    VirtualFile virtualFile=virtualFileManager.findFileByUrl(url);
    if (virtualFile == null) {
      toRemoveUrls.add(url);
    }
 else {
      if (library.isJarDirectory(url)) {
        if (!virtualFile.getName().equals("lib") || !appRoots.contains(virtualFile.getParent())) {
          toRemoveUrls.add(url);
        }
      }
    }
  }
  if (!toRemoveUrls.isEmpty()) {
    actions.add(new Consumer<ModifiableRootModel>(){
      public void consume(      ModifiableRootModel model){
        final Library.ModifiableModel modifiableModel=modifyDefaultLibrary(model,libName);
        for (        String url : toRemoveUrls) {
          modifiableModel.removeRoot(url,OrderRootType.CLASSES);
        }
        modifiableModel.commit();
      }
    }
);
  }
}
