{
  Library userLibraryTo=null;
  for (  OrderEntry entry : to.getOrderEntries()) {
    if (entry instanceof LibraryOrderEntry) {
      LibraryOrderEntry libraryEntry=(LibraryOrderEntry)entry;
      Library library=libraryEntry.getLibrary();
      if (library != null) {
        String libraryName=libraryEntry.getLibraryName();
        if (libraryName != null && libraryName.startsWith(framework.getUserLibraryName())) {
          userLibraryTo=library;
        }
 else {
          if (library.getTable() != null && (!libraryEntry.getScope().isForProductionRuntime() || framework.isSDKLibrary(library))) {
            to.removeOrderEntry(entry);
          }
        }
      }
    }
  }
  Library userLibraryFrom=null;
  for (  OrderEntry entry : from.getOrderEntries()) {
    if (entry instanceof LibraryOrderEntry) {
      LibraryOrderEntry libraryEntry=(LibraryOrderEntry)entry;
      Library library=libraryEntry.getLibrary();
      if (library != null) {
        String libraryName=library.getName();
        if (libraryName != null && libraryName.startsWith(framework.getUserLibraryName())) {
          userLibraryFrom=library;
        }
 else {
          if (library.getTable() != null) {
            LibraryOrderEntry libraryOrderEntry=to.addLibraryEntry(library);
            libraryOrderEntry.setScope(DependencyScope.PROVIDED);
          }
        }
      }
    }
  }
  if (userLibraryTo == null) {
    if (userLibraryFrom == null)     return;
    userLibraryTo=to.getModuleLibraryTable().createLibrary(framework.getUserLibraryName() + " (" + to.getModule().getName()+ ')');
  }
 else {
    OrderEntry[] orderEntries=to.getOrderEntries().clone();
    for (int i=0; i < orderEntries.length; i++) {
      OrderEntry orderEntry=orderEntries[i];
      if (orderEntry instanceof LibraryOrderEntry) {
        if (userLibraryTo == ((LibraryOrderEntry)orderEntry).getLibrary()) {
          System.arraycopy(orderEntries,i + 1,orderEntries,i,orderEntries.length - i - 1);
          orderEntries[orderEntries.length - 1]=orderEntry;
          to.rearrangeOrderEntries(orderEntries);
          break;
        }
      }
    }
  }
  Library.ModifiableModel model=userLibraryTo.getModifiableModel();
  for (  String url : model.getUrls(OrderRootType.CLASSES)) {
    if (!model.isJarDirectory(url)) {
      model.removeRoot(url,OrderRootType.CLASSES);
    }
  }
  if (userLibraryFrom != null) {
    for (    String url : userLibraryFrom.getUrls(OrderRootType.CLASSES)) {
      if (!userLibraryFrom.isJarDirectory(url)) {
        model.addRoot(url,OrderRootType.CLASSES);
      }
    }
  }
  model.commit();
}
