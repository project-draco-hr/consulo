{
  Module commonPluginsModule=framework.findCommonPluginsModule(appModule);
  Set<VirtualFile> pluginRoots=new HashSet<VirtualFile>();
  VirtualFile globalPluginsDir=refreshAndFind(framework.getGlobalPluginsDir(appModule));
  for (  VirtualFile pluginRoot : framework.getCommonPluginRoots(appModule,true)) {
    if (checkValidity(pluginRoot)) {
      if (globalPluginsDir == null || !VfsUtil.isAncestor(globalPluginsDir,pluginRoot,true)) {
        pluginRoots.add(pluginRoot);
      }
    }
  }
  if (pluginRoots.isEmpty()) {
    if (commonPluginsModule != null) {
      removeAuxiliaryModule(commonPluginsModule);
    }
    return null;
  }
  if (commonPluginsModule == null) {
    commonPluginsModule=createAuxiliaryModule(appModule,framework.getCommonPluginsModuleName(appModule),framework);
  }
  ensureDependency(appModule,commonPluginsModule,false);
  updateAuxModuleStructure(commonPluginsModule,pluginRoots,framework);
  return commonPluginsModule;
}
