{
  final MvcProjectStructure structure=framework.createProjectStructure(auxModule,true);
  final List<Consumer<ModifiableRootModel>> actions=getUpdateProjectStructureActions(pluginDirs,structure);
  for (  final ContentEntry root : ModuleRootManager.getInstance(auxModule).getContentEntries()) {
    if (!pluginDirs.contains(root.getFile())) {
      actions.add(removeStaleContentEntries(pluginDirs));
      break;
    }
  }
  if (!actions.isEmpty()) {
    actions.add(exportDefaultLibrary(structure.getUserLibraryName()));
  }
  if (!actions.isEmpty()) {
    final ModifiableRootModel model=ModuleRootManager.getInstance(auxModule).getModifiableModel();
    for (    final Consumer<ModifiableRootModel> pluginsUpdateAction : actions) {
      pluginsUpdateAction.consume(model);
    }
    model.commit();
  }
}
