{
  final ModuleRootManager auxRootManager=ModuleRootManager.getInstance(pluginsModule);
  final ModuleRootManager appRootManager=ModuleRootManager.getInstance(appModule);
  final boolean isSdkEquals=Comparing.equal(auxRootManager.getSdk(),appRootManager.getSdk());
  List<Library> appLibraries=new ArrayList<Library>();
  Library appUserLibrary=extractNonModuleLibraries(appLibraries,appRootManager,false,framework.getUserLibraryName());
  List<Library> auxLibraries=new ArrayList<Library>();
  Library auxUserLibrary=extractNonModuleLibraries(auxLibraries,auxRootManager,false,framework.getUserLibraryName());
  final boolean isLibrariesEquals=appLibraries.equals(auxLibraries) && getJarUrls(auxUserLibrary).equals(getJarUrls(appUserLibrary));
  if (!isSdkEquals || !isLibrariesEquals) {
    AccessToken token=WriteAction.start();
    try {
      final ModifiableRootModel model=auxRootManager.getModifiableModel();
      if (!isSdkEquals) {
        copySdk(appRootManager,model);
      }
      if (!isLibrariesEquals) {
        copyUserLibraries(appRootManager,model,framework);
      }
      model.commit();
    }
  finally {
      token.finish();
    }
  }
}
