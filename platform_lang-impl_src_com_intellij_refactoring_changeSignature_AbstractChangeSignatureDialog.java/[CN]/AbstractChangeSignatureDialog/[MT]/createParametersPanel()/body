{
  myParametersTable=new TableView<ParameterTableModelItemBase<PARAM_INFO>>(myParametersTableModel){
    @Override public void editingStopped(    ChangeEvent e){
      super.editingStopped(e);
      repaint();
    }
  }
;
  myParametersTable.setCellSelectionEnabled(true);
  JPanel panel=new JPanel(new BorderLayout());
  panel.setBorder(IdeBorderFactory.createTitledBorder(RefactoringBundle.message("parameters.border.title")));
  JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(myParametersTable);
  JPanel tablePanel=new JPanel(new BorderLayout());
  tablePanel.add(scrollPane,BorderLayout.CENTER);
  tablePanel.setBorder(BorderFactory.createEmptyBorder(4,4,4,4));
  panel.add(tablePanel,BorderLayout.CENTER);
  myParametersTable.setPreferredScrollableViewportSize(new Dimension(450,myParametersTable.getRowHeight() * 8));
  myParametersTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myParametersTable.getSelectionModel().setSelectionInterval(0,0);
  myParametersTable.setSurrendersFocusOnKeystroke(true);
  JPanel buttonsPanel=EditableRowTable.createButtonsTable(myParametersTable,myParametersTableModel,true);
  panel.add(buttonsPanel,BorderLayout.EAST);
  myParametersTableModel.addTableModelListener(new TableModelListener(){
    public void tableChanged(    TableModelEvent e){
      updateSignature();
    }
  }
);
  return panel;
}
