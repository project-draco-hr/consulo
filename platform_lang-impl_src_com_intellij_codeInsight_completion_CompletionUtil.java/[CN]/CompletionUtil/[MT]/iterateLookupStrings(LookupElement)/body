{
  return new Iterable<String>(){
    @NotNull @Override public Iterator<String> iterator(){
      final Iterator<String> original=element.getAllLookupStrings().iterator();
      return new UnmodifiableIterator<String>(original){
        @Override public boolean hasNext(){
          try {
            return super.hasNext();
          }
 catch (          ConcurrentModificationException e) {
            throw handleCME(e);
          }
        }
        @Override public String next(){
          try {
            return super.next();
          }
 catch (          ConcurrentModificationException e) {
            throw handleCME(e);
          }
        }
        private LogEventException handleCME(        ConcurrentModificationException e){
          final Attachment dump=new Attachment("threadDump.txt",ThreadDumper.dumpThreadsToString());
          return new LogEventException("Error while traversing lookup strings of " + element + " of "+ element.getClass(),ExceptionUtil.getThrowableText(e),dump);
        }
      }
;
    }
  }
;
}
