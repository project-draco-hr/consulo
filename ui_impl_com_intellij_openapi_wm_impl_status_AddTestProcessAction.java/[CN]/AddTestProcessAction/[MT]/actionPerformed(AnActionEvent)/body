{
  final Project project=e.getData(DataKeys.PROJECT);
  final BackgroundableProcessIndicator indicator=new BackgroundableProcessIndicator(project,"Test process",new PerformInBackgroundOption(){
    public boolean shouldStartInBackground(){
      return false;
    }
    public void processSentToBackground(){
    }
    public void processRestoredToForeground(){
    }
  }
,"Cancel","Cancel");
  indicator.start();
  new Thread(){
    public void run(){
      try {
        countTo(900,new Count(){
          public void onCount(          int each) throws InterruptedException {
            indicator.setText("Found: " + each / 20 + 1);
            if (each / 10.0 == Math.round(each / 10.0)) {
              indicator.setText("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            }
            indicator.setFraction(each / 100.0);
            sleep(75);
            indicator.checkCanceled();
          }
        }
);
        indicator.stop();
      }
 catch (      Exception e1) {
        indicator.stop();
        return;
      }
    }
  }
.start();
}
