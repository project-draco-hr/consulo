def _runcommand(ui, options, cmd, cmdfunc):

    def checkargs():
        try:
            return cmdfunc()
        except error.SignatureError:
            raise error.ParseError(cmd, _('invalid arguments'))
    if options['profile']:
        format = ui.config('profiling', 'format', default='text')
        if (not (format in ['text', 'kcachegrind'])):
            ui.warn((_("unrecognized profiling format '%s' - Ignored\n") % format))
            format = 'text'
        output = ui.config('profiling', 'output')
        if output:
            path = ui.expandpath(output)
            ostream = open(path, 'wb')
        else:
            ostream = sys.stderr
        try:
            from mercurial import lsprof
        except ImportError:
            raise util.Abort(_('lsprof not available - install from http://codespeak.net/svn/user/arigo/hack/misc/lsprof/'))
        p = lsprof.Profiler()
        p.enable(subcalls=True)
        try:
            return checkargs()
        finally:
            p.disable()
            if (format == 'kcachegrind'):
                import lsprofcalltree
                calltree = lsprofcalltree.KCacheGrind(p)
                calltree.output(ostream)
            else:
                stats = lsprof.Stats(p.getstats())
                stats.sort()
                stats.pprint(top=10, file=ostream, climit=5)
            if output:
                ostream.close()
    else:
        return checkargs()
