{
  final List<String> problems=StringUtil.split(UIUtil.getHtmlBody(new Html(myText).setKeepFont(true)),UIUtil.BORDER_LINE);
  String text="";
  for (  String problem : problems) {
    final String ref=getLinkRef(problem);
    if (ref != null) {
      String description=TooltipLinkHandlerEP.getDescription(ref,editor);
      if (description != null) {
        description=DefaultInspectionToolPresentation.stripUIRefsFromInspectionDescription(UIUtil.getHtmlBody(new Html(description).setKeepFont(true)));
        text+=UIUtil.getHtmlBody(new Html(problem).setKeepFont(true)).replace(DaemonBundle.message("inspection.extended.description"),DaemonBundle.message("inspection.collapse.description")) + END_MARKER + "<p>"+ description+ UIUtil.BORDER_LINE;
      }
    }
 else {
      text+=UIUtil.getHtmlBody(new Html(problem).setKeepFont(true)) + UIUtil.BORDER_LINE;
    }
  }
  if (!text.isEmpty()) {
    myText=XmlStringUtil.wrapInHtml(StringUtil.trimEnd(text,UIUtil.BORDER_LINE));
    return true;
  }
  return false;
}
