{
  final Library[] libraries=libraryTable.getLibraries();
  if (libraries.length == 0) {
    return null;
  }
  final CompositeGenerator gen=new CompositeGenerator();
  gen.add(new Comment(comment),1);
  TreeMap<String,Library> sortedLibs=new TreeMap<String,Library>();
  for (  final Library library : libraries) {
    final String libraryName=library.getName();
    if (!myUsedLibraries.contains(libraryName)) {
      continue;
    }
    sortedLibs.put(BuildProperties.getLibraryPathId(libraryName),library);
  }
  for (  final Library library : sortedLibs.values()) {
    final String libraryName=library.getName();
    final VirtualFile[] files=library.getFiles(OrderRootType.COMPILATION_CLASSES);
    final Path libraryPath=new Path(BuildProperties.getLibraryPathId(libraryName));
    TreeSet<String> visitedPaths=new TreeSet<String>();
    for (    final VirtualFile file : files) {
      final String path=GenerationUtils.toRelativePath(file,baseDir,BuildProperties.getProjectBaseDirProperty(),myGenOptions,!myProject.isSavePathsRelative());
      visitedPaths.add(path);
    }
    for (    final String path : visitedPaths) {
      libraryPath.add(new PathElement(path));
    }
    gen.add(libraryPath,1);
  }
  return gen.getGeneratorCount() > 0 ? gen : null;
}
