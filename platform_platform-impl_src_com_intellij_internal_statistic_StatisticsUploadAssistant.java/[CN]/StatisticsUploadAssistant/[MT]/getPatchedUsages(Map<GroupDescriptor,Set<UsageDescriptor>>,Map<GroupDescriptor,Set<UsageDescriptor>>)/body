{
  Map<GroupDescriptor,Set<PatchedUsage>> patchedUsages=mapToPatchedUsagesMap(allUsages);
  for (  Map.Entry<GroupDescriptor,Set<UsageDescriptor>> sentUsageEntry : sentUsageMap.entrySet()) {
    final GroupDescriptor sentUsageGroupDescriptor=sentUsageEntry.getKey();
    final Set<UsageDescriptor> sentUsages=sentUsageEntry.getValue();
    for (    UsageDescriptor sentUsage : sentUsages) {
      final PatchedUsage descriptor=findDescriptor(patchedUsages,Pair.create(sentUsageGroupDescriptor,sentUsage.getKey()));
      if (descriptor == null) {
        if (!patchedUsages.containsKey(sentUsageGroupDescriptor)) {
          patchedUsages.put(sentUsageGroupDescriptor,new HashSet<PatchedUsage>());
        }
        patchedUsages.get(sentUsageGroupDescriptor).add(new PatchedUsage(sentUsage.getKey(),-sentUsage.getValue()));
      }
 else {
        descriptor.subValue(sentUsage.getValue());
      }
    }
  }
  return packCollection(patchedUsages,new Condition<PatchedUsage>(){
    @Override public boolean value(    PatchedUsage patchedUsage){
      return patchedUsage.getDelta() != 0;
    }
  }
);
}
