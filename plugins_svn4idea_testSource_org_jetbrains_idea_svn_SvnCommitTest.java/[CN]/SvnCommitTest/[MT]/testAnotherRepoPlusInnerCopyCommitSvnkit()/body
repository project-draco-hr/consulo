{
  enableSilentOperation(VcsConfiguration.StandardConfirmation.ADD);
  enableSilentOperation(VcsConfiguration.StandardConfirmation.REMOVE);
  prepareInnerCopy(true);
  final MyRunner runner=new MyRunner(){
    @Override protected void run() throws Exception {
      final File file1=new File(myWorkingCopyDir.getPath(),"source/s1.txt");
      final File fileInner=new File(myWorkingCopyDir.getPath(),"source/inner1/inner2/inner/t11.txt");
      Assert.assertTrue(file1.exists());
      Assert.assertTrue(fileInner.exists());
      final VirtualFile vf1=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file1);
      final VirtualFile vf2=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(fileInner);
      Assert.assertNotNull(vf1);
      Assert.assertNotNull(vf2);
      editFileInCommand(vf1,"2317468732ghdwwe7y348rf");
      editFileInCommand(vf2,"2317468732ghdwwe7y348rf csdjcjksw");
      myDirtyScopeManager.markEverythingDirty();
      myChangeListManager.ensureUpToDate(false);
      checkinFiles(vf1,vf2);
    }
    @Override protected void cleanup() throws Exception {
    }
  }
;
  setNativeAcceleration(true);
  runner.run();
}
