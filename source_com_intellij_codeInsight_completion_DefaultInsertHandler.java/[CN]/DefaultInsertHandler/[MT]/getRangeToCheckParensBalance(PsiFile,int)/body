{
  PsiElement element=file.findElementAt(startOffset);
  PsiElement prevElement=element;
  element=element.getParent();
  while (true) {
    if (!(element instanceof PsiExpression) && !(element instanceof PsiExpressionList) && !(element instanceof PsiJavaCodeReferenceElement)&& !(element instanceof PsiTypeElement)) {
      if (element instanceof PsiIfStatement) {
        PsiIfStatement ifStatement=(PsiIfStatement)element;
        int start=ifStatement.getTextRange().getStartOffset();
        PsiStatement then=ifStatement.getThenBranch();
        int end=then != null ? then.getTextRange().getStartOffset() : ifStatement.getTextRange().getEndOffset();
        return new TextRange(start,end);
      }
 else {
        break;
      }
    }
    prevElement=element;
    element=element.getParent();
  }
  final int start=prevElement.getTextRange().getStartOffset();
  int end=prevElement.getTextRange().getEndOffset();
  PsiElement errorElement=prevElement.getNextSibling();
  while (errorElement instanceof PsiErrorElement) {
    end+=errorElement.getTextLength();
    while (errorElement.getNextSibling() == null && errorElement.getParent() != null)     errorElement=errorElement.getParent();
    errorElement=errorElement.getNextSibling();
  }
  return new TextRange(start,end);
}
