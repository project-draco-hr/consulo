{
  Collection<FilePath> dirtyPaths=dirtyPaths(false);
  if (dirtyPaths.isEmpty()) {
    return;
  }
  GitSimpleHandler handler=new GitSimpleHandler(myProject,myVcsRoot,GitCommand.LS_FILES);
  handler.addParameters("-v","--unmerged");
  handler.setSilent(true);
  handler.setStdoutSuppressed(true);
  parseFiles(handler.run());
  handler=new GitSimpleHandler(myProject,myVcsRoot,GitCommand.LS_FILES);
  handler.addParameters("-v","--others","--exclude-standard");
  handler.setSilent(true);
  handler.setStdoutSuppressed(true);
  handler.endOptions();
  handler.addRelativePaths(dirtyPaths);
  if (handler.isLargeCommandLine()) {
    handler=new GitSimpleHandler(myProject,myVcsRoot,GitCommand.LS_FILES);
    handler.addParameters("-v","--others","--exclude-standard");
    handler.setSilent(true);
    handler.setStdoutSuppressed(true);
    handler.endOptions();
  }
  parseFiles(handler.run());
}
