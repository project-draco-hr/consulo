{
  Runnable action=new Runnable(){
    public void run(){
      final Application application=ApplicationManager.getApplication();
      if (application.isDisposed())       return;
      application.assertIsDispatchThread();
      Runnable postRunnable=myPostRefreshRunnables.pop();
      application.runWriteAction(new Runnable(){
        public void run(){
          fireBeforeRefreshStart(asynchronous);
          for (int i=0; i < myRefreshEventsToFire.size(); i++) {
            Runnable runnable=myRefreshEventsToFire.get(i);
            try {
              runnable.run();
            }
 catch (            Exception e) {
              LOG.error(e);
            }
          }
          myRefreshEventsToFire.clear();
          myRefreshCount--;
          if (!asynchronous)           mySynchronousRefreshCount--;
          LOG.assertTrue(myRefreshCount >= 0 && mySynchronousRefreshCount >= 0);
          final ProgressIndicator indicator=asynchronous ? myAsyncRefreshIndicator : myRefreshIndicator;
          if (asynchronous) {
            if (getAsynchronousRefreshCount() == 0) {
              indicator.stop();
            }
          }
 else {
            if (mySynchronousRefreshCount == 0) {
              indicator.stop();
            }
          }
          if (myRefreshCount > 0) {
            if (!asynchronous && mySynchronousRefreshCount == 0) {
              fireAfterRefreshFinish(asynchronous);
            }
          }
 else {
            final FileSystemSynchronizer synchronizer;
            if (asynchronous) {
              synchronizer=new FileSystemSynchronizer();
              for (int i=0; i < myRefreshParticipants.size(); i++) {
                CacheUpdater participant=myRefreshParticipants.get(i);
                synchronizer.registerCacheUpdater(participant);
              }
            }
 else {
              synchronizer=null;
            }
            myRefreshEventsToFire=null;
            fireAfterRefreshFinish(asynchronous);
            if (asynchronous) {
              int filesCount=synchronizer.collectFilesToUpdate();
              if (filesCount > 0) {
                boolean runWithProgress=!application.isUnitTestMode() && filesCount > 5;
                if (runWithProgress) {
                  Runnable process=new Runnable(){
                    public void run(){
                      synchronizer.execute();
                    }
                  }
;
                  ProgressManager.getInstance().runProcessWithProgressSynchronously(process,VfsBundle.message("file.update.modified.progress"),false,null);
                }
 else {
                  synchronizer.execute();
                }
              }
            }
          }
        }
      }
);
      if (postRunnable != null) {
        postRunnable.run();
      }
    }
  }
;
  if (asynchronous) {
    ApplicationManager.getApplication().invokeLater(action,modalityState);
  }
 else {
    action.run();
  }
}
