{
  if (!myDirectory2Children.containsKey(psiDirectory)) {
    throw new IllegalArgumentException("directory is not in the tree: " + psiDirectory);
  }
  ArrayList children=myDirectory2Children.remove(psiDirectory);
  if (children == null) {
    throw new IllegalArgumentException("directory has no children list: " + psiDirectory);
  }
  if (children.size() > 0) {
    throw new IllegalArgumentException("directory isn't empty: " + psiDirectory);
  }
  myStrictDirectory2Children.remove(psiDirectory);
  ArrayList dirsToBeRemoved=null;
  for (Iterator<VirtualFile> i=myDirectory2Children.keySet().iterator(); i.hasNext(); ) {
    VirtualFile _directory=i.next();
    children=myDirectory2Children.get(_directory);
    LOG.assertTrue(children != null);
    if (children.contains(psiDirectory)) {
      children.remove(psiDirectory);
      if (children.size() == 0) {
        if (dirsToBeRemoved == null) {
          dirsToBeRemoved=new ArrayList(2);
        }
        dirsToBeRemoved.add(_directory);
      }
    }
  }
  if (dirsToBeRemoved != null) {
    for (int i=0; i < dirsToBeRemoved.size(); i++) {
      removeDir((VirtualFile)dirsToBeRemoved.get(i));
    }
  }
}
