{
  if (returnStatement == null) {
    return false;
  }
  final PsiElement lastChild=returnStatement.getLastChild();
  if (!(lastChild instanceof PsiErrorElement)) {
    return false;
  }
  PsiElement prev=lastChild.getPrevSibling();
  if (prev instanceof PsiWhiteSpace) {
    prev=prev.getPrevSibling();
  }
  if (!(prev instanceof PsiJavaToken)) {
    int offset=returnStatement.getTextRange().getEndOffset();
    final PsiMethod method=PsiTreeUtil.getParentOfType(returnStatement,PsiMethod.class);
    if (method != null && method.getReturnType() == PsiType.VOID) {
      offset=returnStatement.getTextRange().getStartOffset() + "return".length();
    }
    editor.getDocument().insertString(offset,";");
    return true;
  }
  PsiJavaToken prevToken=(PsiJavaToken)prev;
  if (prevToken.getTokenType() == JavaTokenType.SEMICOLON) {
    return false;
  }
  final int offset=returnStatement.getTextRange().getEndOffset();
  editor.getDocument().insertString(offset,";");
  if (prevToken.getTokenType() == JavaTokenType.RETURN_KEYWORD) {
    final PsiMethod method=PsiTreeUtil.getParentOfType(returnStatement,PsiMethod.class);
    if (method != null && method.getReturnType() != PsiType.VOID) {
      editor.getCaretModel().moveToOffset(offset);
      processor.setSkipEnter(true);
    }
  }
  return true;
}
