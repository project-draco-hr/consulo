{
  if (!CodeInsightUtilBase.prepareEditorForWrite(editor))   return;
  final Document document=editor.getDocument();
  if (!FileDocumentManager.getInstance().requestWriting(document,PlatformDataKeys.PROJECT.getData(dataContext))) {
    return;
  }
  DataContext context=new DataContext(){
    @Override public Object getData(    @NonNls String dataId){
      if (TRANSFERABLE_PROVIDER.equals(dataId)) {
        return transferableProvider;
      }
      return dataContext.getData(dataId);
    }
  }
;
  final Project project=editor.getProject();
  if (project == null || editor.isColumnMode() || editor.getSelectionModel().hasBlockSelection()) {
    if (myOriginalHandler != null) {
      myOriginalHandler.execute(editor,context);
    }
    return;
  }
  final PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(document);
  if (file == null) {
    if (myOriginalHandler != null) {
      myOriginalHandler.execute(editor,context);
    }
    return;
  }
  document.startGuardedBlockChecking();
  try {
    for (    PasteProvider provider : Extensions.getExtensions(EP_NAME)) {
      if (provider.isPasteEnabled(context)) {
        provider.performPaste(context);
        return;
      }
    }
    doPaste(editor,project,file,document,transferableProvider);
  }
 catch (  ReadOnlyFragmentModificationException e) {
    EditorActionManager.getInstance().getReadonlyFragmentModificationHandler(document).handle(e);
  }
 finally {
    document.stopGuardedBlockChecking();
  }
}
