{
  if (DumbService.isDumb(myProject)) {
    Messages.showMessageDialog(myProject,"Safe delete refactoring is not available while indexing is in progress","Indexing",null);
    return;
  }
  DumbService.allowStartingDumbModeInside(DumbModePermission.MAY_START_BACKGROUND,new Runnable(){
    @Override public void run(){
      if (myCallback != null && isSafeDelete()) {
        myCallback.run(SafeDeleteDialog.this);
      }
 else {
        SafeDeleteDialog.super.doOKAction();
      }
    }
  }
);
  final RefactoringSettings refactoringSettings=RefactoringSettings.getInstance();
  if (myCbSafeDelete != null) {
    refactoringSettings.SAFE_DELETE_WHEN_DELETE=myCbSafeDelete.isSelected();
  }
  if (isSafeDelete()) {
    if (myDelegate == null) {
      refactoringSettings.SAFE_DELETE_SEARCH_IN_COMMENTS=isSearchInComments();
      if (myCbSearchTextOccurrences != null) {
        refactoringSettings.SAFE_DELETE_SEARCH_IN_NON_JAVA=isSearchForTextOccurences();
      }
    }
 else {
      myDelegate.setToSearchInComments(myElements[0],isSearchInComments());
      if (myCbSearchTextOccurrences != null) {
        myDelegate.setToSearchForTextOccurrences(myElements[0],isSearchForTextOccurences());
      }
    }
  }
}
