{
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  if (indicator != null) {
    indicator.pushState();
    indicator.setText(IdeBundle.message("progress.parsing.files"));
  }
  final int updaterCount=myUpdaters.size();
  int totalFiles=myFilesToUpdate.size();
  final FileContentQueue contentQueue=new FileContentQueue();
  final Runnable contentLoadingRunnable=new Runnable(){
    public void run(){
      try {
        for (        VirtualFile file : myFilesToUpdate) {
          if (indicator != null) {
            indicator.checkCanceled();
          }
          if (myContentSets.contains(file)) {
            contentQueue.put(file);
          }
        }
      }
 catch (      ProcessCanceledException e) {
      }
catch (      InterruptedException e) {
        LOG.error(e);
      }
 finally {
        try {
          contentQueue.put(new FileContent(null));
        }
 catch (        InterruptedException e) {
          LOG.error(e);
        }
      }
    }
  }
;
  ApplicationManager.getApplication().executeOnPooledThread(contentLoadingRunnable);
  int count=0;
  while (true) {
    final FileContent content;
    try {
      content=contentQueue.take();
    }
 catch (    InterruptedException e) {
      LOG.error(e);
      break;
    }
    if (content == null)     break;
    final VirtualFile file=content.getVirtualFile();
    if (file == null)     break;
    if (indicator != null) {
      indicator.checkCanceled();
      indicator.setFraction((double)++count / totalFiles);
      indicator.setText2(file.getPresentableUrl());
    }
    for (int i=0; i < updaterCount; i++) {
      CacheUpdater updater=myUpdaters.get(i);
      if (updater != null && myIndexingSets.remove(i,file)) {
        try {
          updater.processFile(content);
        }
 catch (        ProcessCanceledException e) {
          throw e;
        }
catch (        Throwable e) {
          LOG.error(e);
        }
        if (myIndexingSets.isDoneForegroundly(i)) {
          try {
            updater.updatingDone();
          }
 catch (          ProcessCanceledException e) {
            throw e;
          }
catch (          Throwable e) {
            LOG.error(e);
          }
          myUpdaters.set(i,null);
        }
      }
    }
  }
  updatingDone();
  if (indicator != null) {
    indicator.popState();
  }
}
