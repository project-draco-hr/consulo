{
  if (!CodeInsightUtilBase.prepareFileForWrite(myClass.getContainingFile())) {
    return;
  }
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
  PsiField field=factory.createField(myCanonicalText,PsiType.INT);
  VisibilityUtil.setVisibility(field.getModifierList(),PsiModifier.PUBLIC);
  field=CreateFieldFromUsageHelper.insertField(myClass,field,element);
  final PsiClassType fieldType=factory.createType(myFieldClass);
  final ExpectedTypeInfo[] types={new ExpectedTypeInfoImpl(fieldType,ExpectedTypeInfo.TYPE_OR_SUBTYPE,0,fieldType,TailType.NONE)};
  CreateFieldFromUsageFix.createFieldFromUsageTemplate(myClass,project,types,field,false,element);
}
