{
  final PsiElement element=queryParameters.getElementToSearch();
  if (element instanceof PsiMethod) {
    final PsiMethod method=(PsiMethod)element;
    if (method.isConstructor()) {
      final PsiClass clazz=method.getContainingClass();
      ReferencesSearch.search(clazz).forEach(new Processor<PsiReference>(){
        public boolean process(        PsiReference ref){
          final PsiElement element=ref.getElement();
          if (element instanceof GrCodeReferenceElement && element.getParent() instanceof GrNewExpression) {
            final GrNewExpression newExpression=(GrNewExpression)element.getParent();
            final PsiMethod constructor=newExpression.resolveConstructor();
            if (constructor != null && constructor.getManager().areElementsEquivalent(constructor,method)) {
              if (!consumer.process(ref))               return false;
            }
          }
          return true;
        }
      }
);
      if (clazz instanceof GrTypeDefinition) {
        if (!ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
          public Boolean compute(){
            return processClassConstructors(clazz,method,consumer,true);
          }
        }
))         return false;
      }
      if (!DirectClassInheritorsSearch.search(clazz).forEach(new Processor<PsiClass>(){
        public boolean process(        PsiClass inheritor){
          if (inheritor instanceof GrTypeDefinition) {
            if (!processClassConstructors(inheritor,method,consumer,false))             return false;
          }
          return true;
        }
      }
))       return false;
    }
  }
  return true;
}
