{
  StringBuilder builder;
  final int count=1000000;
  long start=System.nanoTime();
  for (int i=0; i < count; ++i) {
    builder=new StringBuilder();
    builder.append(myStrings[i & 3]);
    builder.append(builder.toString());
  }
  final long regularTime=(System.nanoTime() - start) / 1000;
  System.out.println("StringBuilder regular allocations took: " + regularTime);
  System.gc();
  System.runFinalization();
  Thread.sleep(2000);
  start=System.nanoTime();
  for (int i=0; i < count; ++i) {
    builder=StringBuilderSpinAllocator.alloc();
    builder.append(myStrings[i & 3]);
    builder.append(builder.toString());
    StringBuilderSpinAllocator.dispose(builder);
  }
  final long spinTime=(System.nanoTime() - start) / 1000;
  System.out.println("StringBuilder spin allocations took: " + spinTime);
  if (!com.intellij.testFramework.PlatformTestUtil.COVERAGE_ENABLED_BUILD) {
    assertTrue("regular:" + regularTime + "mks, spin:"+ spinTime+ "mks",spinTime < regularTime);
  }
}
