{
  GitMergeDialog dialog=new GitMergeDialog(project,gitRoots,defaultRoot);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  GitLineHandler h=dialog.handler();
  final VirtualFile root=dialog.getSelectedRoot();
  affectedRoots.add(root);
  GitRevisionNumber currentRev=GitRevisionNumber.resolve(project,root,"HEAD");
  try {
    GitHandlerUtil.doSynchronouslyWithExceptions(h);
  }
  finally {
    exceptions.addAll(h.errors());
  }
  if (exceptions.size() != 0) {
    return;
  }
  final UpdatedFiles files=UpdatedFiles.create();
  MergeChangeCollector collector=new MergeChangeCollector(project,root,currentRev,files);
  collector.collect(exceptions);
  if (exceptions.size() != 0) {
    return;
  }
  ProjectLevelVcsManagerEx manager=(ProjectLevelVcsManagerEx)ProjectLevelVcsManager.getInstance(project);
  GitVcs vcs=GitVcs.getInstance(project);
  manager.showUpdateProjectInfo(files,getActionName(vcs),ActionInfo.INTEGRATE);
}
