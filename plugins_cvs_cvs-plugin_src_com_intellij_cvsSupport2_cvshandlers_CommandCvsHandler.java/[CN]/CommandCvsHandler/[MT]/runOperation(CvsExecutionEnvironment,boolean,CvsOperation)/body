{
  try {
    cvsOperation.execute(executionEnvironment,runInReadAction);
    return true;
  }
 catch (  VcsException e) {
    myErrors.add(e);
  }
catch (  InvalidModuleDescriptionException ex) {
    myErrors.add(new CvsException(ex,ex.getCvsRoot()));
  }
catch (  InvalidEntryFormatException e) {
    myErrors.add(new VcsException(CvsBundle.message("exception.text.entries.file.is.corrupted",e.getEntriesFile())));
  }
catch (  CvsProcessException ex) {
    myErrors.add(new CvsException(ex,cvsOperation.getLastProcessedCvsRoot()));
  }
catch (  CommandAbortedException ex) {
    LOG.error(ex);
    myErrors.add(new CvsException(ex,cvsOperation.getLastProcessedCvsRoot()));
  }
catch (  ProcessCanceledException ex) {
    myIsCanceled=true;
  }
catch (  Exception ex) {
    LOG.error(ex);
    myErrors.add(new CvsException(ex,myCvsOperation.getLastProcessedCvsRoot()));
  }
  return false;
}
