{
  if (new PsiMatcherImpl(keyword).dot(PsiMatcherImpl.hasText(PsiModifier.STATIC)).parent(PsiMatcherImpl.hasClass(PsiModifierList.class)).parent(PsiMatcherImpl.hasClass(PsiField.class)).parent(PsiMatcherImpl.hasClass(PsiClass.class)).dot(PsiMatcherImpl.hasModifier(PsiModifier.STATIC,false)).parent(PsiMatcherImpl.hasClass(new Class[]{PsiClass.class,PsiDeclarationStatement.class,PsiNewExpression.class,PsiEnumConstant.class})).getElement() == null) {
    return null;
  }
  final PsiField field=(PsiField)keyword.getParent().getParent();
  if (PsiUtil.hasErrorElementChild(field))   return null;
  if (PsiUtil.isCompileTimeConstant(field)) {
    return null;
  }
  HighlightInfo errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,keyword,STATIC_DECLARATION_IN_INNER_CLASS);
  QuickFixAction.registerQuickFixAction(errorResult,new ModifierFix(field,PsiModifier.STATIC,false));
  final PsiModifierList classModifiers=((PsiClass)field.getParent()).getModifierList();
  QuickFixAction.registerQuickFixAction(errorResult,new ModifierFix(classModifiers,PsiModifier.STATIC,true));
  return errorResult;
}
