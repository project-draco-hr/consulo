{
  final PsiElement staticParent=HighlightUtil.getPossibleStaticParentElement(place,outerClass);
  if (staticParent == null) {
    String description=MessageFormat.format("''{0}'' is not an enclosing class",new Object[]{outerClass == null ? "" : HighlightUtil.formatClass(outerClass)});
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,elementToHighlight,description);
  }
  final PsiModifierList modifierList=PsiUtil.getModifierList(staticParent);
  if (modifierList != null && modifierList.hasModifierProperty(PsiModifier.STATIC)) {
    String description=MessageFormat.format(REFERENCED_FROM_STATIC_CONTEXT,new Object[]{outerClass == null ? "" : HighlightUtil.formatClass(outerClass) + ".this"});
    final HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,elementToHighlight,description);
    QuickFixAction.registerQuickFixAction(highlightInfo,new ModifierFix(modifierList,PsiModifier.STATIC,false));
    if (aClass != null && HighlightUtil.getIncompatibleModifier(PsiModifier.STATIC,aClass.getModifierList()) == null) {
      QuickFixAction.registerQuickFixAction(highlightInfo,new ModifierFix(aClass,PsiModifier.STATIC,true));
    }
    return highlightInfo;
  }
  return null;
}
