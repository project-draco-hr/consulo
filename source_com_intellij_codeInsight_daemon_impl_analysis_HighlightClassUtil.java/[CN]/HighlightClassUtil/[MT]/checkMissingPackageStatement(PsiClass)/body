{
  if (!DaemonCodeAnalyzerSettings.getInstance().getInspectionProfile().isToolEnabled(HighlightDisplayKey.WRONG_PACKAGE_STATEMENT)) {
    return null;
  }
  if (ApplicationManager.getApplication().isUnitTestMode())   return null;
  final PsiFile file=aClass.getContainingFile();
  if (!(file instanceof PsiJavaFile))   return null;
  final PsiJavaFile javaFile=(PsiJavaFile)file;
  final PsiClass[] classes=javaFile.getClasses();
  if (classes == null || classes.length == 0 || !aClass.getManager().areElementsEquivalent(aClass,classes[0]))   return null;
  final PsiDirectory directory=javaFile.getContainingDirectory();
  if (directory == null)   return null;
  final PsiPackage dirPackage=directory.getPackage();
  if (dirPackage == null)   return null;
  final PsiPackageStatement packageStatement=javaFile.getPackageStatement();
  final String packageName=dirPackage.getQualifiedName();
  if (!Comparing.strEqual(packageName,"",true) && packageStatement == null) {
    String description=MessageFormat.format("Missing package statement: ''{0}''",new Object[]{packageName});
    final TextRange textRange=ClassUtil.getClassDeclarationTextRange(aClass);
    final HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.WRONG_PACKAGE_STATEMENT,textRange,description);
    QuickFixAction.registerQuickFixAction(highlightInfo,new AdjustPackageNameFix(javaFile,null,dirPackage));
    QuickFixAction.registerQuickFixAction(highlightInfo,new SwitchOffToolAction(HighlightDisplayKey.WRONG_PACKAGE_STATEMENT));
    return highlightInfo;
  }
  return null;
}
