{
  PsiType type=expression.getType();
  if (type == null || type instanceof PsiArrayType || type instanceof PsiPrimitiveType)   return null;
  PsiClass aClass=PsiUtil.resolveClassInType(type);
  if (aClass == null)   return null;
  if (aClass instanceof PsiAnonymousClass) {
    aClass=((PsiAnonymousClass)aClass).getBaseClassType().resolve();
    if (aClass == null)     return null;
  }
  if (!PsiUtil.isInnerClass(aClass)) {
    return null;
  }
  PsiClass outerClass;
  if (aClass instanceof PsiAnonymousClass) {
    outerClass=((PsiAnonymousClass)aClass).getBaseClassType().resolve();
  }
 else {
    outerClass=aClass.getContainingClass();
  }
  if (outerClass == null)   return null;
  PsiElement placeToSearchEnclosingFrom;
  if (expression.getQualifier() != null) {
    PsiType qtype=expression.getQualifier().getType();
    placeToSearchEnclosingFrom=PsiUtil.resolveClassInType(qtype);
  }
 else {
    placeToSearchEnclosingFrom=expression;
  }
  if (hasEnclosingInstanceInScope(outerClass,placeToSearchEnclosingFrom))   return null;
  return reportIllegalEnclosingUsage(placeToSearchEnclosingFrom,aClass,outerClass,expression);
}
