{
  HighlightInfo errorResult=null;
  if (aClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    String baseClassName=aClass.getName();
    String message=MessageFormat.format("''{0}'' is abstract; cannot be instantiated",new Object[]{baseClassName});
    errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,highlighElement,message);
    if (!aClass.isInterface() && ClassUtil.getAnyAbstractMethod(aClass,MethodSignatureUtil.getSameSignatureMethods(aClass)) == null) {
      QuickFixAction.registerQuickFixAction(errorResult,new ModifierFix(aClass,PsiModifier.ABSTRACT,false));
    }
  }
  return errorResult;
}
