{
  final PsiManager manager=psiElement.getManager();
  final GlobalSearchScope scope=getScope();
  if (myIndex == myJavaClassReferenceSet.getReferences().length - 1) {
    final PsiClass aClass=JavaPsiFacade.getInstance(manager.getProject()).findClass(qName,scope);
    if (aClass != null) {
      return new ClassCandidateInfo(aClass,PsiSubstitutor.EMPTY,false,psiElement);
    }
 else {
      if (!JavaClassReferenceProvider.ADVANCED_RESOLVE.getBooleanValue(getOptions())) {
        return JavaResolveResult.EMPTY;
      }
    }
  }
  PsiElement resolveResult=JavaPsiFacade.getInstance(manager.getProject()).findPackage(qName);
  if (resolveResult == null) {
    resolveResult=JavaPsiFacade.getInstance(manager.getProject()).findClass(qName,scope);
  }
  if (myInStaticImport && resolveResult == null) {
    resolveResult=resolveMember(qName,manager,getElement().getResolveScope());
  }
  if (resolveResult == null) {
    PsiFile containingFile=psiElement.getContainingFile();
    if (containingFile instanceof PsiJavaFile) {
      if (containingFile instanceof JspFile) {
        containingFile=containingFile.getViewProvider().getPsi(StdLanguages.JAVA);
        if (containingFile == null)         return JavaResolveResult.EMPTY;
      }
      final ClassResolverProcessor processor=new ClassResolverProcessor(getCanonicalText(),psiElement);
      containingFile.processDeclarations(processor,ResolveState.initial(),null,psiElement);
      if (processor.getResult().length == 1) {
        final JavaResolveResult javaResolveResult=processor.getResult()[0];
        if (javaResolveResult != JavaResolveResult.EMPTY && getOptions() != null) {
          final Boolean value=JavaClassReferenceProvider.RESOLVE_QUALIFIED_CLASS_NAME.getValue(getOptions());
          final PsiClass psiClass=(PsiClass)javaResolveResult.getElement();
          if (value != null && value.booleanValue() && psiClass != null) {
            final String qualifiedName=psiClass.getQualifiedName();
            if (!qName.equals(qualifiedName)) {
              return JavaResolveResult.EMPTY;
            }
          }
        }
        return javaResolveResult;
      }
    }
  }
  return resolveResult != null ? new CandidateInfo(resolveResult,PsiSubstitutor.EMPTY,false,false,psiElement) : JavaResolveResult.EMPTY;
}
