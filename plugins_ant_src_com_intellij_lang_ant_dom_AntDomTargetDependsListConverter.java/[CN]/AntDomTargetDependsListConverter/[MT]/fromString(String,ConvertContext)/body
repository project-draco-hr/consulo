{
  final AntDomProject project=context.getInvocationElement().getParentOfType(AntDomProject.class,false);
  if (project == null) {
    return null;
  }
  final AntDomTarget contextTarget=context.getInvocationElement().getParentOfType(AntDomTarget.class,false);
  if (contextTarget == null) {
    return null;
  }
  final List<String> refs;
  if (s == null) {
    refs=Collections.emptyList();
  }
 else {
    refs=new ArrayList<String>();
    final StringTokenizer tokenizer=new StringTokenizer(s,",",false);
    while (tokenizer.hasMoreTokens()) {
      final String ref=tokenizer.nextToken();
      refs.add(ref.trim());
    }
  }
  final TargetResolver.Result result=TargetResolver.resolve(project.getContextAntProject(),contextTarget,refs);
  result.setRefsString(s);
  return result;
}
