{
  final SmartPsiElementPointer classPointer=SmartPointerManager.getInstance(project).createSmartPsiElementPointer(aClass);
  final SmartPsiElementPointer interfacePointer=SmartPointerManager.getInstance(project).createSmartPsiElementPointer(aSuperClass);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      final PsiElement classElement=classPointer.getElement();
      final PsiElement interfaceElement=interfacePointer.getElement();
      if (classElement != null && classElement instanceof PsiClass && interfaceElement != null && interfaceElement instanceof PsiClass) {
        final PsiClass superClass=(PsiClass)interfaceElement;
        String interfaceName=superClass.getName();
        String className=((PsiClass)classElement).getName();
        String message=(superClass.isInterface() ? "Interface " : "Class ") + interfaceName + " has been successfully created.\n"+ "At this stage, IDEA can analyze usages of "+ className+ "\nand replace them with usages of the "+ (superClass.isInterface() ? "interface " : "superclass ")+ "where possible.\n"+ "Do you want to proceed?";
        YesNoPreviewUsagesDialog dialog=new YesNoPreviewUsagesDialog("Analyze and Replace Usages",message,RefactoringSettings.getInstance().EXTRACT_INTERFACE_PREVIEW_USAGES,null,project);
        dialog.show();
        if (dialog.isOK()) {
          RefactoringSettings.getInstance().EXTRACT_INTERFACE_PREVIEW_USAGES=dialog.isPreviewUsages();
          TurnRefsToSuperProcessor processor=new TurnRefsToSuperProcessor(project,(PsiClass)classElement,(PsiClass)interfaceElement,true);
          processor.run(null);
        }
      }
    }
  }
);
}
