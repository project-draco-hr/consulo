{
  DfaValue result=null;
  if (psiExpression instanceof PsiReferenceExpression) {
    PsiElement psiSource=((PsiReferenceExpression)psiExpression).resolve();
    if (psiSource != null) {
      if (psiSource instanceof PsiVariable) {
        final PsiVariable variable=(PsiVariable)psiSource;
        DfaValue constValue=getConstFactory().create(variable);
        if (constValue != null)         return constValue;
        PsiExpression initializer=variable.getInitializer();
        if (initializer != null && variable.hasModifierProperty(PsiModifier.FINAL)) {
          PsiType type=initializer.getType();
          if (initializer instanceof PsiNewExpression) {
            return getNotNullFactory().create(type);
          }
          if (initializer instanceof PsiPolyadicExpression) {
            if (type != null && type.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {
              return getNotNullFactory().create(type);
            }
          }
        }
      }
      PsiVariable psiVariable=resolveVariable((PsiReferenceExpression)psiExpression);
      if (psiVariable != null) {
        result=getVarFactory().createVariableValue(psiVariable,false);
      }
    }
  }
 else   if (psiExpression instanceof PsiLiteralExpression) {
    final PsiLiteralExpression literal=(PsiLiteralExpression)psiExpression;
    if (literal.getValue() instanceof String) {
      result=getNotNullFactory().create(psiExpression.getType());
    }
 else {
      result=getConstFactory().create(literal);
    }
  }
 else   if (psiExpression instanceof PsiNewExpression) {
    result=getNotNullFactory().create(psiExpression.getType());
  }
 else {
    final Object value=JavaConstantExpressionEvaluator.computeConstantExpression(psiExpression,false);
    PsiType type=psiExpression.getType();
    if (value != null && type != null) {
      if (value instanceof String) {
        result=getNotNullFactory().create(type);
      }
 else {
        result=getConstFactory().createFromValue(value,type);
      }
    }
  }
  return result;
}
