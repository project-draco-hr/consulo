{
  final PsiFile containingFile=listOwner.getContainingFile();
  if (!(containingFile instanceof PsiJavaFile)) {
    return null;
  }
  final PsiJavaFile javaFile=(PsiJavaFile)containingFile;
  final String packageName=javaFile.getPackageName();
  final VirtualFile virtualFile=containingFile.getVirtualFile();
  String fqn=getFQN(packageName,virtualFile);
  if (fqn == null)   return null;
  final List<XmlFile> files=myExternalAnnotations.get(fqn);
  if (files == NULL)   return null;
  if (files != null) {
    for (Iterator<XmlFile> it=files.iterator(); it.hasNext(); ) {
      if (!it.next().isValid())       it.remove();
    }
    return files;
  }
  if (virtualFile == null) {
    return null;
  }
  List<XmlFile> possibleAnnotationsXmls=new ArrayList<XmlFile>();
  for (  VirtualFile root : getExternalAnnotationsRoots(virtualFile)) {
    final VirtualFile ext=root.findFileByRelativePath(packageName.replace(".","/") + "/" + ANNOTATIONS_XML);
    if (ext == null)     continue;
    final PsiFile psiFile=myPsiManager.findFile(ext);
    if (!(psiFile instanceof XmlFile))     continue;
    possibleAnnotationsXmls.add((XmlFile)psiFile);
  }
  if (!possibleAnnotationsXmls.isEmpty()) {
    myExternalAnnotations.put(fqn,possibleAnnotationsXmls);
    return possibleAnnotationsXmls;
  }
  myExternalAnnotations.put(fqn,NULL);
  return null;
}
