{
  final List<XmlFile> files=findExternalAnnotationsFiles(listOwner);
  if (files == null) {
    return Collections.emptyMap();
  }
  final Map<String,PsiAnnotation> result=new HashMap<String,PsiAnnotation>();
  for (  XmlFile file : files) {
    if (!file.isValid())     continue;
    final XmlDocument document=file.getDocument();
    if (document == null)     continue;
    final XmlTag rootTag=document.getRootTag();
    if (rootTag == null)     continue;
    final String externalName=getExternalName(listOwner,false);
    final String oldExternalName=getNormalizedExternalName(listOwner);
    for (    final XmlTag tag : rootTag.getSubTags()) {
      final String className=StringUtil.unescapeXml(tag.getAttributeValue("name"));
      if (!Comparing.strEqual(className,externalName) && !Comparing.strEqual(className,oldExternalName)) {
        continue;
      }
      for (      XmlTag annotationTag : tag.getSubTags()) {
        final String annotationFQN=annotationTag.getAttributeValue("name");
        final StringBuilder buf=new StringBuilder();
        for (        XmlTag annotationParameter : annotationTag.getSubTags()) {
          buf.append(",");
          final String nameValue=annotationParameter.getAttributeValue("name");
          if (nameValue != null) {
            buf.append(nameValue).append("=");
          }
          buf.append(StringUtil.unescapeXml(annotationParameter.getAttributeValue("val")));
        }
        final String annotationText="@" + annotationFQN + (buf.length() > 0 ? "(" + StringUtil.trimStart(buf.toString(),",") + ")" : "");
        try {
          result.put(annotationFQN,JavaPsiFacade.getInstance(myPsiManager.getProject()).getElementFactory().createAnnotationFromText(annotationText,null));
        }
 catch (        IncorrectOperationException e) {
          LOG.error(e);
        }
      }
    }
  }
  return result;
}
