{
  VirtualFile formFile=ModuleUtil.findResourceFileInProject(myProject,myTfNestedForm.getText());
  if (formFile == null) {
    Messages.showErrorDialog(getWindow(),UIDesignerBundle.message("add.component.cannot.load.form",myTfNestedForm.getText()),CommonBundle.getErrorTitle());
    return false;
  }
  LwRootContainer lwRootContainer;
  try {
    lwRootContainer=Utils.getRootContainer(formFile.getInputStream(),null);
  }
 catch (  Exception e) {
    Messages.showErrorDialog(getWindow(),e.getMessage(),CommonBundle.getErrorTitle());
    return false;
  }
  if (lwRootContainer.getClassToBind() == null) {
    Messages.showErrorDialog(getWindow(),UIDesignerBundle.message("add.component.form.not.bound"),CommonBundle.getErrorTitle());
    return false;
  }
  if (lwRootContainer.getComponent(0).getBinding() == null) {
    Messages.showErrorDialog(getWindow(),UIDesignerBundle.message("add.component.root.not.bound"),CommonBundle.getErrorTitle());
    return false;
  }
  PsiClass psiClass=JavaPsiFacade.getInstance(myProject).findClass(lwRootContainer.getClassToBind(),GlobalSearchScope.projectScope(myProject));
  if (psiClass != null) {
    myItemToBeEdited.setClassName(getClassOrInnerName(psiClass));
  }
 else {
    myItemToBeEdited.setClassName(lwRootContainer.getClassToBind());
  }
  return true;
}
