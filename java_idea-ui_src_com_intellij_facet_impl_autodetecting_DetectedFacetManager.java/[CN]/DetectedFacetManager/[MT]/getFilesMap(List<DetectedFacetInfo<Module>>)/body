{
  MultiValuesMap<DetectedFacetInfo<Module>,DetectedFacetInfo<Module>> facet2Children=new MultiValuesMap<DetectedFacetInfo<Module>,DetectedFacetInfo<Module>>();
  for (  DetectedFacetInfo<Module> detected : detectedFacets) {
    FacetInfo2<Module> underlying=detected.getUnderlyingFacetInfo();
    if (underlying instanceof DetectedFacetInfo) {
      facet2Children.put((DetectedFacetInfo<Module>)underlying,detected);
    }
  }
  HashMap<DetectedFacetInfo<Module>,List<VirtualFile>> filesMap=new HashMap<DetectedFacetInfo<Module>,List<VirtualFile>>();
  Set<DetectedFacetInfo<Module>> toRemove=new HashSet<DetectedFacetInfo<Module>>();
  for (  DetectedFacetInfo<Module> detected : detectedFacets) {
    Set<String> urls=myAutodetectingManager.getFileIndex().getFiles(detected.getId());
    List<VirtualFile> files=new ArrayList<VirtualFile>();
    if (urls != null) {
      for (      String url : urls) {
        VirtualFile file=VirtualFileManager.getInstance().findFileByUrl(url);
        if (file != null) {
          files.add(file);
        }
      }
    }
    if (!files.isEmpty()) {
      filesMap.put(detected,files);
    }
 else {
      addWithChildren(detected,facet2Children,toRemove);
    }
  }
  detectedFacets.removeAll(toRemove);
  return filesMap;
}
