{
  Project project=event.getData(PlatformDataKeys.PROJECT);
  boolean enabled=false;
  Presentation presentation=event.getPresentation();
  boolean hidden=true;
  if (project != null) {
    for (    DebuggerSupport support : DebuggerSupport.getDebuggerSupports()) {
      MarkObjectActionHandler handler=support.getMarkObjectHandler();
      hidden&=handler.isHidden(project,event);
      if (handler.isEnabled(project,event)) {
        enabled=true;
        String text;
        if (handler.isMarked(project,event)) {
          text=ActionsBundle.message("action.Debugger.MarkObject.unmark.text");
        }
 else {
          text=ActionsBundle.message("action.Debugger.MarkObject.text");
        }
        presentation.setText(text);
        break;
      }
    }
  }
  presentation.setVisible(!hidden && (!ActionPlaces.isPopupPlace(event.getPlace()) || enabled));
  presentation.setEnabled(enabled);
}
