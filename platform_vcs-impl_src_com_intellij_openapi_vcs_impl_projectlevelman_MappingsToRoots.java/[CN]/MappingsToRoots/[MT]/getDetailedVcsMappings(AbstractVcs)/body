{
  List<VirtualFile> result=myMappings.getMappingsAsFilesUnderVcs(vcs);
  boolean addInnerModules=true;
  final String vcsName=vcs.getName();
  final List<VcsDirectoryMapping> directoryMappings=myMappings.getDirectoryMappings(vcsName);
  for (  VcsDirectoryMapping directoryMapping : directoryMappings) {
    if (directoryMapping.isDefaultMapping()) {
      addInnerModules=false;
      break;
    }
  }
  Collections.sort(result,FilePathComparator.getInstance());
  if (addInnerModules) {
    final DefaultVcsRootPolicy defaultVcsRootPolicy=DefaultVcsRootPolicy.getInstance(myProject);
    final List<VirtualFile> modules=new ArrayList<VirtualFile>();
    defaultVcsRootPolicy.addDefaultVcsRoots(myMappings,vcsName,modules);
    final Iterator<VirtualFile> iterator=modules.iterator();
    while (iterator.hasNext()) {
      final VirtualFile module=iterator.next();
      boolean included=false;
      for (      VirtualFile root : result) {
        if (ExcludedFileIndex.getInstance(myProject).isValidAncestor(root,module)) {
          included=true;
          break;
        }
      }
      if (!included) {
        iterator.remove();
      }
    }
    result.addAll(modules);
  }
  return result;
}
