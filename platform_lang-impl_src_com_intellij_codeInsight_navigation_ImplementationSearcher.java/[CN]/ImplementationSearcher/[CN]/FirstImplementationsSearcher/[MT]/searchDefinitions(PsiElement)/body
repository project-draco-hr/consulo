{
  final PsiElement[][] result=new PsiElement[1][];
  final PsiElementProcessor.CollectElementsWithLimit<PsiElement> collectProcessor=new PsiElementProcessor.CollectElementsWithLimit<PsiElement>(2,new THashSet<PsiElement>());
  if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    @Override public void run(){
      try {
        DefinitionsSearch.search(element).forEach(new PsiElementProcessorAdapter<PsiElement>(collectProcessor){
          @Override public boolean processInReadAction(          PsiElement element){
            if (!accept(element))             return true;
            return super.processInReadAction(element);
          }
        }
);
        result[0]=collectProcessor.toArray();
      }
 catch (      IndexNotReadyException e) {
        ImplementationSearcher.dumbModeNotification(element);
        result[0]=null;
      }
    }
  }
,SEARCHING_FOR_IMPLEMENTATIONS,true,element.getProject())) {
    return null;
  }
  return result[0];
}
