{
  try {
    boolean stopSignalled=false;
    while (true) {
      final boolean read=readAvailable();
      if (stopSignalled || mySleepingPolicy == SleepingPolicy.BLOCKING) {
        break;
      }
      stopSignalled=isStopped;
      if (!stopSignalled) {
synchronized (mySleepMonitor) {
          mySleepMonitor.wait(mySleepingPolicy.getTimeToSleep(read));
        }
      }
    }
  }
 catch (  IOException e) {
    LOG.info(e);
  }
catch (  Exception e) {
    LOG.error(e);
  }
 finally {
    try {
      close();
    }
 catch (    IOException e) {
      LOG.error("Can't close stream",e);
    }
  }
}
