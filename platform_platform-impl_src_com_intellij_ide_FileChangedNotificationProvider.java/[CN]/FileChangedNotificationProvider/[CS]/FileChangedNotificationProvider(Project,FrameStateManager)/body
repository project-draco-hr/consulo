{
  myProject=project;
  frameStateManager.addListener(new FrameStateListener.Adapter(){
    @Override public void onFrameActivated(){
      if (!myProject.isDisposed() && !GeneralSettings.getInstance().isSyncOnFrameActivation()) {
        EditorNotifications notifications=EditorNotifications.getInstance(myProject);
        for (        VirtualFile file : FileEditorManager.getInstance(myProject).getSelectedFiles()) {
          notifications.updateNotifications(file);
        }
      }
    }
  }
,project);
  MessageBusConnection connection=ApplicationManager.getApplication().getMessageBus().connect(myProject);
  connection.subscribe(VirtualFileManager.VFS_CHANGES,new BulkFileListener.Adapter(){
    @Override public void after(    @NotNull List<? extends VFileEvent> events){
      if (!myProject.isDisposed() && !GeneralSettings.getInstance().isSyncOnFrameActivation()) {
        Set<VirtualFile> openFiles=ContainerUtil.newHashSet(FileEditorManager.getInstance(myProject).getSelectedFiles());
        EditorNotifications notifications=EditorNotifications.getInstance(myProject);
        for (        VFileEvent event : events) {
          VirtualFile file=event.getFile();
          if (file != null && openFiles.contains(file)) {
            notifications.updateNotifications(file);
          }
        }
      }
    }
  }
);
}
