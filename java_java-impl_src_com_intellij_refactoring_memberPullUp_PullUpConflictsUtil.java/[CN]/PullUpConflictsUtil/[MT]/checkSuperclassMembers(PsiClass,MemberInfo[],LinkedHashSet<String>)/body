{
  for (  MemberInfo info : infos) {
    PsiMember member=info.getMember();
    boolean isConflict=false;
    if (member instanceof PsiField) {
      String name=member.getName();
      isConflict=superClass.findFieldByName(name,false) != null;
    }
 else     if (member instanceof PsiMethod) {
      PsiSubstitutor superSubstitutor=TypeConversionUtil.getSuperClassSubstitutor(superClass,member.getContainingClass(),PsiSubstitutor.EMPTY);
      MethodSignature signature=((PsiMethod)member).getSignature(superSubstitutor);
      final PsiMethod superClassMethod=MethodSignatureUtil.findMethodBySignature(superClass,signature,false);
      isConflict=superClassMethod != null;
    }
    if (isConflict) {
      String message=RefactoringBundle.message("0.already.contains.a.1",RefactoringUIUtil.getDescription(superClass,false),RefactoringUIUtil.getDescription(member,false));
      message=CommonRefactoringUtil.capitalize(message);
      conflictsList.add(message);
    }
  }
}
