{
  PsiElement startElement=file.findElementAt(rangeStart);
  if (startElement == null)   return null;
  PsiElement endElement=rangeEnd > rangeStart ? file.findElementAt(rangeEnd - 1) : startElement;
  if (endElement == null)   return null;
  PsiElement element=PsiTreeUtil.findCommonParent(startElement,endElement);
  while (element != null) {
    List<MoveElementLeftRightHandler> handlers=MoveElementLeftRightHandler.EXTENSION.allForLanguage(element.getLanguage());
    for (    MoveElementLeftRightHandler handler : handlers) {
      PsiElement[] elementList=handler.getMovableSubElements(element);
      if (elementList.length > 1) {
        Arrays.sort(elementList,BY_OFFSET);
        PsiElement first=elementList[0];
        PsiElement last=elementList[elementList.length - 1];
        if (rangeStart >= first.getTextRange().getStartOffset() && rangeEnd <= last.getTextRange().getEndOffset() && (rangeStart >= first.getTextRange().getEndOffset() || rangeEnd <= last.getTextRange().getStartOffset())) {
          return elementList;
        }
      }
    }
    element=element.getParent();
  }
  return null;
}
