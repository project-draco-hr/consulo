{
  for (  FilterInfo myFilter : myFilters) {
    myFiltersModel.addElement(myFilter.createCopy());
  }
  JPanel panel=ToolbarDecorator.createDecorator(myFiltersList).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      FilterInfo filterInfo=new FilterInfo();
      filterInfo.setName(suggestFilterName());
      boolean wasCreated=FilterDialog.editFilter(filterInfo,myFiltersList,ToolsBundle.message("tools.filters.add.title"));
      if (wasCreated) {
        myFiltersModel.addElement(filterInfo);
        setModified(true);
      }
      myFiltersList.requestFocus();
    }
  }
).setEditAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      int index=myFiltersList.getSelectedIndex();
      FilterInfo filterInfo=(FilterInfo)myFiltersModel.getElementAt(index);
      boolean wasEdited=FilterDialog.editFilter(filterInfo,myFiltersList,ToolsBundle.message("tools.filters.edit.title"));
      if (wasEdited) {
        setModified(true);
      }
      myFiltersList.requestFocus();
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      if (myFiltersList.getSelectedIndex() >= 0) {
        myFiltersModel.removeElementAt(myFiltersList.getSelectedIndex());
        setModified(true);
      }
      myFiltersList.requestFocus();
    }
  }
).setUpAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      int movedCount=ListUtil.moveSelectedItemsUp(myFiltersList);
      if (movedCount > 0) {
        setModified(true);
      }
      myFiltersList.requestFocus();
    }
  }
).setDownAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      int movedCount=ListUtil.moveSelectedItemsDown(myFiltersList);
      if (movedCount > 0) {
        setModified(true);
      }
      myFiltersList.requestFocus();
    }
  }
).createPanel();
  return panel;
}
