{
  EditorFileSwapper[] swappers=Extensions.getExtensions(EditorFileSwapper.EP_NAME);
  for (  EditorWindow eachWindow : getWindows()) {
    EditorWithProviderComposite selected=eachWindow.getSelectedEditor();
    EditorWithProviderComposite[] editors=eachWindow.getEditors();
    for (int i=0; i < editors.length; i++) {
      EditorWithProviderComposite editor=editors[i];
      VirtualFile file=editor.getFile();
      if (!file.isValid())       continue;
      Pair<VirtualFile,Integer> newFilePair=null;
      for (      EditorFileSwapper each : swappers) {
        newFilePair=each.getFileToSwapTo(myProject,editor);
        if (newFilePair != null)         break;
      }
      if (newFilePair == null)       continue;
      VirtualFile newFile=newFilePair.first;
      if (newFile == null)       continue;
      if (eachWindow.findFileIndex(newFile) != -1)       continue;
      try {
        newFile.putUserData(EditorWindow.INITIAL_INDEX_KEY,i);
        Pair<FileEditor[],FileEditorProvider[]> pair=openFileImpl2(eachWindow,newFile,editor == selected);
        if (newFilePair.second != null) {
          TextEditorImpl openedEditor=EditorFileSwapper.findSinglePsiAwareEditor(pair.first);
          if (openedEditor != null) {
            openedEditor.getEditor().getCaretModel().moveToOffset(newFilePair.second);
            openedEditor.getEditor().getScrollingModel().scrollToCaret(ScrollType.CENTER);
          }
        }
      }
  finally {
        newFile.putUserData(EditorWindow.INITIAL_INDEX_KEY,null);
      }
      closeFile(file,eachWindow);
    }
  }
}
