{
  final VirtualFile oldSelectedFile=oldSelectedComposite != null ? oldSelectedComposite.getFile() : null;
  final VirtualFile newSelectedFile=newSelectedComposite != null ? newSelectedComposite.getFile() : null;
  final FileEditor oldSelectedEditor=oldSelectedComposite != null && !oldSelectedComposite.isDisposed() ? oldSelectedComposite.getSelectedEditor() : null;
  final FileEditor newSelectedEditor=newSelectedComposite != null && !newSelectedComposite.isDisposed() ? newSelectedComposite.getSelectedEditor() : null;
  final boolean filesEqual=oldSelectedFile == null ? newSelectedFile == null : oldSelectedFile.equals(newSelectedFile);
  final boolean editorsEqual=oldSelectedEditor == null ? newSelectedEditor == null : oldSelectedEditor.equals(newSelectedEditor);
  if (!filesEqual || !editorsEqual) {
    final FileEditorManagerEvent event=new FileEditorManagerEvent(this,oldSelectedFile,oldSelectedEditor,newSelectedFile,newSelectedEditor);
    final FileEditorManagerListener publisher=getProject().getMessageBus().syncPublisher(FileEditorManagerListener.FILE_EDITOR_MANAGER);
    IdeFocusManager.getInstance(myProject).doWhenFocusSettlesDown(new Runnable(){
      @Override public void run(){
        publisher.selectionChanged(event);
      }
    }
);
  }
}
