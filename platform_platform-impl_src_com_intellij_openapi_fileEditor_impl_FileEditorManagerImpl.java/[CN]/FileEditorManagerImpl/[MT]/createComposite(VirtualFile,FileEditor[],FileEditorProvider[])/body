{
  if (NullUtils.hasNull(editors) || NullUtils.hasNull(providers)) {
    List<FileEditor> editorList=new ArrayList<FileEditor>(editors.length);
    List<FileEditorProvider> providerList=new ArrayList<FileEditorProvider>(providers.length);
    for (int i=0; i < editors.length; i++) {
      FileEditor editor=editors[i];
      FileEditorProvider provider=providers[i];
      if (editor != null && provider != null) {
        editorList.add(editor);
        providerList.add(provider);
      }
    }
    if (editorList.isEmpty())     return null;
    editors=editorList.toArray(new FileEditor[editorList.size()]);
    providers=providerList.toArray(new FileEditorProvider[providerList.size()]);
  }
  return new EditorWithProviderComposite(file,editors,providers,this);
}
