{
  final boolean async=Registry.is("ide.windowSystem.asyncSplitters") && !syncUsage;
  final AsyncResult<EditorsSplitters> result=new AsyncResult<EditorsSplitters>();
  final IdeFocusManager fm=IdeFocusManager.getInstance(myProject);
  Runnable run=new Runnable(){
    @Override public void run(){
      if (myProject.isDisposed()) {
        result.setRejected();
        return;
      }
      Component focusOwner=async ? fm.getFocusOwner() : KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
      DockContainer container=DockManager.getInstance(myProject).getContainerFor(focusOwner);
      if (container == null && !async) {
        focusOwner=KeyboardFocusManager.getCurrentKeyboardFocusManager().getActiveWindow();
        container=DockManager.getInstance(myProject).getContainerFor(focusOwner);
      }
      if (container instanceof DockableEditorTabbedContainer) {
        result.setDone(((DockableEditorTabbedContainer)container).getSplitters());
      }
 else {
        result.setDone(getMainSplitters());
      }
    }
  }
;
  if (async) {
    fm.doWhenFocusSettlesDown(run);
  }
 else {
    run.run();
  }
  return result;
}
