{
  return new DataExternalizer<Map<String,Collection<SvnBranchItem>>>(){
    @Override public void save(    DataOutput out,    Map<String,Collection<SvnBranchItem>> value) throws IOException {
      out.writeInt(value.size());
      ArrayList<String> keys=new ArrayList<String>(value.keySet());
      Collections.sort(keys);
      for (      String key : keys) {
        out.writeUTF(key);
        List<SvnBranchItem> list=new ArrayList<SvnBranchItem>(value.get(key));
        Collections.sort(list,SerializationComparator.getInstance());
        out.writeInt(list.size());
        for (        SvnBranchItem item : list) {
          out.writeUTF(item.getUrl());
          out.writeLong(item.getCreationDateMillis());
          out.writeLong(item.getRevision());
        }
      }
    }
    @Override public Map<String,Collection<SvnBranchItem>> read(    DataInput in) throws IOException {
      final HashMap<String,Collection<SvnBranchItem>> map=new HashMap<String,Collection<SvnBranchItem>>();
      int mapSize=in.readInt();
      for (int i=0; i < mapSize; i++) {
        final String key=in.readUTF();
        final int size=in.readInt();
        final ArrayList<SvnBranchItem> list=new ArrayList<SvnBranchItem>(size);
        for (int j=0; j < size; j++) {
          String url=in.readUTF();
          long creation=in.readLong();
          long revision=in.readLong();
          list.add(new SvnBranchItem(url,new Date(creation),revision));
        }
        map.put(key,list);
      }
      return map;
    }
  }
;
}
