{
  if (parentComponent instanceof AbstractButton) {
    final AbstractButton abstractButton=((AbstractButton)parentComponent);
    abstractButton.addPropertyChangeListener(AbstractButton.TEXT_CHANGED_PROPERTY,TEXT_LISTENER);
    DialogUtil.registerMnemonic(abstractButton);
  }
 else   if (parentComponent instanceof JLabel) {
    final JLabel jLabel=((JLabel)parentComponent);
    jLabel.addPropertyChangeListener(TEXT_CHANGED_PROPERTY,TEXT_LISTENER);
    DialogUtil.registerMnemonic(jLabel,null);
    if (SystemInfo.isMac) {
      final InputMap inputMap=jLabel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
      if (inputMap != null) {
        final KeyStroke[] strokes=inputMap.allKeys();
        if (strokes != null) {
          for (          KeyStroke stroke : strokes) {
            final int m=stroke.getModifiers();
            if (((m & KeyEvent.ALT_MASK) == KeyEvent.ALT_MASK) && ((m & KeyEvent.CTRL_MASK) == KeyEvent.CTRL_MASK)) {
              inputMap.put(KeyStroke.getKeyStroke(stroke.getKeyCode(),KeyEvent.ALT_MASK),"release");
            }
          }
        }
      }
    }
  }
}
