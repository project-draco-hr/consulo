{
  for (final Iterator<PsiElement> e=victims.iterator(); e.hasNext(); ) {
    final PsiElement element=e.next();
    Util.changeType(element,getCookedType(element));
  }
  if (mySettings.dropObsoleteCasts()) {
    myCastsRemoved=0;
    while (myCasts.size() > 0) {
      final PsiTypeCastExpression cast=myCasts.iterator().next();
      cast.accept(new PsiRecursiveElementVisitor(){
        public void visitTypeCastExpression(        final PsiTypeCastExpression expression){
          super.visitTypeCastExpression(expression);
          if (myCasts.contains(expression)) {
            if (expression.getType().equals(expression.getOperand().getType())) {
              try {
                expression.replace(expression.getOperand());
                myCastsRemoved++;
              }
 catch (              IncorrectOperationException e1) {
                LOG.error(e1);
              }
            }
            myCasts.remove(expression);
          }
        }
      }
);
    }
  }
}
