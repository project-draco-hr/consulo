{
  final Editor editor=context.getEditor();
  final Document document=editor.getDocument();
  context.commitDocument();
  PsiElement element=findNextToken(context);
  final char completionChar=context.getCompletionChar();
  final boolean putCaretInside=completionChar == '(' || placeCaretInsideParentheses(context,item);
  if (completionChar == '(') {
    context.setAddCompletionChar(false);
  }
  if (isToken(element,"(")) {
    int lparenthOffset=element.getTextRange().getStartOffset();
    if (mySpaceBeforeParentheses && lparenthOffset == context.getTailOffset()) {
      document.insertString(context.getTailOffset()," ");
      lparenthOffset++;
    }
    if (completionChar == '(' || completionChar == '\t') {
      editor.getCaretModel().moveToOffset(lparenthOffset + 1);
    }
 else {
      editor.getCaretModel().moveToOffset(context.getTailOffset());
    }
    context.setTailOffset(lparenthOffset + 1);
    PsiElement list=element.getParent();
    PsiElement last=list.getLastChild();
    if (isToken(last,")")) {
      int rparenthOffset=last.getTextRange().getStartOffset();
      context.setTailOffset(rparenthOffset + 1);
      if (!putCaretInside) {
        for (int i=lparenthOffset + 1; i < rparenthOffset; i++) {
          if (!Character.isWhitespace(document.getCharsSequence().charAt(i))) {
            return;
          }
        }
        editor.getCaretModel().moveToOffset(context.getTailOffset());
      }
 else       if (mySpaceBetweenParentheses && document.getCharsSequence().charAt(lparenthOffset) == ' ') {
        editor.getCaretModel().moveToOffset(lparenthOffset + 2);
      }
 else {
        editor.getCaretModel().moveToOffset(lparenthOffset + 1);
      }
      return;
    }
  }
 else {
    document.insertString(context.getTailOffset(),getSpace(mySpaceBeforeParentheses) + "(" + getSpace(mySpaceBetweenParentheses));
    editor.getCaretModel().moveToOffset(context.getTailOffset());
  }
  if (!myMayInsertRightParenthesis)   return;
  if (context.getCompletionChar() == '(') {
    int tail=context.getTailOffset();
    if (tail < document.getTextLength() && StringUtil.isJavaIdentifierPart(document.getCharsSequence().charAt(tail))) {
      return;
    }
  }
  document.insertString(context.getTailOffset(),getSpace(mySpaceBetweenParentheses) + ")");
  if (!putCaretInside) {
    editor.getCaretModel().moveToOffset(context.getTailOffset());
  }
}
