{
  final List<InspectionToolWrapper> list=new ArrayList<InspectionToolWrapper>();
  list.add(createTool("foo"));
  InspectionToolRegistrar registrar=new InspectionToolRegistrar(null){
    @Override public List<InspectionToolWrapper> createTools(){
      LocalInspectionEP foo=new LocalInspectionEP();
      foo.shortName="foo";
      return list;
    }
  }
;
  InspectionProfileImpl profile=new InspectionProfileImpl("Foo",registrar,InspectionProfileManager.getInstance());
  profile.setBaseProfile(null);
  List<ScopeToolState> tools=profile.getAllTools();
  assertEquals(1,tools.size());
  ModifiableModel model=profile.getModifiableModel();
  model.lockProfile(true);
  model.commit();
  Element element=new Element("element");
  profile.writeExternal(element);
  list.add(createTool("bar"));
  profile=new InspectionProfileImpl("Foo",registrar,InspectionProfileManager.getInstance());
  profile.readExternal(element);
  profile.setBaseProfile(null);
  tools=profile.getAllTools();
  assertEquals(2,tools.size());
  assertTrue(profile.isProfileLocked());
  assertFalse(profile.isToolEnabled(HighlightDisplayKey.find("bar")));
}
