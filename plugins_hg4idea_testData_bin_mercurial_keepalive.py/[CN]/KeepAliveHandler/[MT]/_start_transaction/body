def _start_transaction(self, h, req):
    headers = req.headers.copy()
    if (sys.version_info >= (2, 4)):
        headers.update(req.unredirected_hdrs)
    headers.update(self.parent.addheaders)
    headers = dict(((n.lower(), v) for (n, v) in headers.items()))
    skipheaders = {}
    for n in ('host', 'accept-encoding'):
        if (n in headers):
            skipheaders[('skip_' + n.replace('-', '_'))] = 1
    try:
        if req.has_data():
            data = req.get_data()
            h.putrequest('POST', req.get_selector(), **skipheaders)
            if ('content-type' not in headers):
                h.putheader('Content-type', 'application/x-www-form-urlencoded')
            if ('content-length' not in headers):
                h.putheader('Content-length', ('%d' % len(data)))
        else:
            h.putrequest('GET', req.get_selector(), **skipheaders)
    except socket.error as err:
        raise urllib2.URLError(err)
    for (k, v) in headers.items():
        h.putheader(k, v)
    h.endheaders()
    if req.has_data():
        h.send(data)
