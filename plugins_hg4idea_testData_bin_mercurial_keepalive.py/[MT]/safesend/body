def safesend(self, str):
    "Send `str' to the server.\n\n    Shamelessly ripped off from httplib to patch a bad behavior.\n    "
    if (getattr(self, '_broken_pipe_resp', None) is not None):
        return
    if (self.sock is None):
        if self.auto_open:
            self.connect()
        else:
            raise httplib.NotConnected()
    if (self.debuglevel > 0):
        print 'send:', repr(str)
    try:
        blocksize = 8192
        if hasattr(str, 'read'):
            if (self.debuglevel > 0):
                print 'sendIng a read()able'
            data = str.read(blocksize)
            while data:
                self.sock.sendall(data)
                data = str.read(blocksize)
        else:
            self.sock.sendall(str)
    except socket.error as v:
        reraise = True
        if (v[0] == errno.EPIPE):
            if (self._HTTPConnection__state == httplib._CS_REQ_SENT):
                self._broken_pipe_resp = None
                self._broken_pipe_resp = self.getresponse()
                reraise = False
            self.close()
        if reraise:
            raise
