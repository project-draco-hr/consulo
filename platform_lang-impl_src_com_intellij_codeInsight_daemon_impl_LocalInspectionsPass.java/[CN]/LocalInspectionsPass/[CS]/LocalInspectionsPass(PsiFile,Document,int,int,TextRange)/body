{
  super(file.getProject(),document,PRESENTABLE_NAME,file,true);
  myStartOffset=startOffset;
  myEndOffset=endOffset;
  myPriorityRange=priorityRange;
  setId(Pass.LOCAL_INSPECTIONS);
  final KeymapManager keymapManager=KeymapManager.getInstance();
  if (keymapManager != null) {
    final Keymap keymap=keymapManager.getActiveKeymap();
    myShortcutText=keymap == null ? "" : "(" + KeymapUtil.getShortcutsText(keymap.getShortcuts(IdeActions.ACTION_SHOW_ERROR_DESCRIPTION)) + ")";
  }
 else {
    myShortcutText="";
  }
  InspectionProfileWrapper profileToUse=InspectionProjectProfileManager.getInstance(myProject).getProfileWrapper();
  Function<InspectionProfileWrapper,InspectionProfileWrapper> customizationStrategy=file.getUserData(InspectionProfileWrapper.CUSTOMIZATION_KEY);
  if (customizationStrategy != null) {
    profileToUse=customizationStrategy.fun(profileToUse);
  }
  myProfileWrapper=profileToUse;
  mySeverityRegistrar=((SeverityProvider)myProfileWrapper.getInspectionProfile().getProfileManager()).getSeverityRegistrar();
  LOG.assertTrue(mySeverityRegistrar != null);
  setProgressLimit(300 * 2);
}
