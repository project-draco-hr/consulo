{
  TextRange textRange=((ProblemDescriptorBase)problemDescriptor).getTextRange();
  if (textRange == null || psiElement == null)   return null;
  boolean isFileLevel=psiElement instanceof PsiFile && textRange.equals(psiElement.getTextRange());
  final HighlightSeverity severity=highlightInfoType.getSeverity(psiElement);
  TextAttributes attributes=mySeverityRegistrar.getTextAttributesBySeverity(severity);
  HighlightInfo.Builder b=HighlightInfo.newHighlightInfo(highlightInfoType).range(psiElement,textRange.getStartOffset(),textRange.getEndOffset()).description(message).severity(severity);
  if (toolTip != null)   b.escapedToolTip(toolTip);
  if (attributes != null)   b.textAttributes(attributes);
  if (problemDescriptor.isAfterEndOfLine())   b.endOfLine();
  if (isFileLevel)   b.fileLevelAnnotation();
  if (problemDescriptor.getProblemGroup() != null)   b.problemGroup(problemDescriptor.getProblemGroup());
  return b.create();
}
