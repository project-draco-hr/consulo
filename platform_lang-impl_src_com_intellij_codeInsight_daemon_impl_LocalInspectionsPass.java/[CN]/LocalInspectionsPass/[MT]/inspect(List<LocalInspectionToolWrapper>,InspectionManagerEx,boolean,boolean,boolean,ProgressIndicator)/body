{
  myFailFastOnAcquireReadAction=failFastOnAcquireReadAction;
  if (toolWrappers.isEmpty())   return;
  List<PsiElement> inside=new ArrayList<PsiElement>();
  List<PsiElement> outside=new ArrayList<PsiElement>();
  Divider.divideInsideAndOutside(myFile,myStartOffset,myEndOffset,myPriorityRange,inside,outside,true,FILE_FILTER);
  MultiMap<LocalInspectionToolWrapper,String> tools=getToolsForElements(toolWrappers,checkDumbAwareness,inside,outside);
  setProgressLimit(1L * tools.size() * 2);
  final LocalInspectionToolSession session=new LocalInspectionToolSession(myFile,myStartOffset,myEndOffset);
  List<InspectionContext> init=visitPriorityElementsAndInit(tools,iManager,isOnTheFly,indicator,inside,session,toolWrappers,checkDumbAwareness);
  visitRestElementsAndCleanup(indicator,outside,session,init);
  inspectInjectedPsi(outside,isOnTheFly,indicator,iManager,false,checkDumbAwareness,toolWrappers);
  indicator.checkCanceled();
  myInfos=new ArrayList<HighlightInfo>();
  addHighlightsFromResults(myInfos,indicator);
}
