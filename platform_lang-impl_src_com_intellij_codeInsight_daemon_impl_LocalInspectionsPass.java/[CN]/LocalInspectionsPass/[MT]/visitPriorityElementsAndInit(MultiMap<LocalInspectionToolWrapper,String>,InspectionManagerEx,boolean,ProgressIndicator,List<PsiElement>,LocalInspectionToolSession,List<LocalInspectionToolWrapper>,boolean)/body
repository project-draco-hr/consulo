{
  final List<InspectionContext> init=new ArrayList<InspectionContext>();
  List<Map.Entry<LocalInspectionToolWrapper,Collection<String>>> entries=new ArrayList<Map.Entry<LocalInspectionToolWrapper,Collection<String>>>(toolToLanguages.entrySet());
  Processor<Map.Entry<LocalInspectionToolWrapper,Collection<String>>> processor=new Processor<Map.Entry<LocalInspectionToolWrapper,Collection<String>>>(){
    @Override public boolean process(    final Map.Entry<LocalInspectionToolWrapper,Collection<String>> pair){
      return runToolOnElements(pair.getKey(),pair.getValue(),iManager,isOnTheFly,indicator,elements,session,init);
    }
  }
;
  boolean result=JobLauncher.getInstance().invokeConcurrentlyUnderProgress(entries,indicator,myFailFastOnAcquireReadAction,processor);
  if (!result)   throw new ProcessCanceledException();
  inspectInjectedPsi(elements,isOnTheFly,indicator,iManager,true,checkDumbAwareness,wrappers);
  return init;
}
