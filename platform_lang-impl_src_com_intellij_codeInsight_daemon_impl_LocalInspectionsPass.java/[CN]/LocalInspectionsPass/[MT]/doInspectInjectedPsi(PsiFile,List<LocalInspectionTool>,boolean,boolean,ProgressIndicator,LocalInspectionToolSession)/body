{
  InspectionManager iManager=InspectionManager.getInstance(injectedPsi.getProject());
  final PsiElement host=injectedPsi.getContext();
  final List<PsiElement> elements=getElementsFrom(injectedPsi);
  if (elements.isEmpty()) {
    return;
  }
  for (  final LocalInspectionTool tool : tools) {
    indicator.checkCanceled();
    if (host != null && InspectionManagerEx.inspectionResultSuppressed(host,tool)) {
      continue;
    }
    ProblemsHolder holder=new ProblemsHolder(iManager,injectedPsi,isOnTheFly){
      @Override public void registerProblem(      @NotNull ProblemDescriptor descriptor){
        super.registerProblem(descriptor);
        if (isOnTheFly) {
          addDescriptorIncrementally(descriptor,tool,ignoreSuppressed,indicator);
        }
      }
    }
;
    createVisitorAndAcceptElements(tool,holder,isOnTheFly,session,elements,indicator);
    tool.inspectionFinished(session,holder);
    List<ProblemDescriptor> problems=holder.getResults();
    if (problems != null && !problems.isEmpty()) {
      InspectionResult res=new InspectionResult(tool,problems);
      appendResult(injectedPsi,res);
    }
  }
}
