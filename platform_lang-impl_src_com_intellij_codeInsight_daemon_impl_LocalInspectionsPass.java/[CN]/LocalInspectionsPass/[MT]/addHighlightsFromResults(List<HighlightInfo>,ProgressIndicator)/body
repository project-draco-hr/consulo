{
  InspectionProfile inspectionProfile=InspectionProjectProfileManager.getInstance(myProject).getInspectionProfile();
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(myProject);
  InjectedLanguageManager ilManager=InjectedLanguageManager.getInstance(myProject);
  Set<TextRange> emptyActionRegistered=new THashSet<TextRange>();
  for (  Map.Entry<PsiFile,List<InspectionResult>> entry : result.entrySet()) {
    indicator.checkCanceled();
    PsiFile file=entry.getKey();
    Document documentRange=documentManager.getDocument(file);
    if (documentRange == null)     continue;
    List<InspectionResult> resultList=entry.getValue();
synchronized (resultList) {
      for (      InspectionResult inspectionResult : resultList) {
        indicator.checkCanceled();
        LocalInspectionTool tool=inspectionResult.tool;
        HighlightSeverity severity=inspectionProfile.getErrorLevel(HighlightDisplayKey.find(tool.getShortName()),file).getSeverity();
        for (        ProblemDescriptor descriptor : inspectionResult.foundProblems) {
          indicator.checkCanceled();
          PsiElement element=descriptor.getPsiElement();
          createHighlightsForDescriptor(outInfos,emptyActionRegistered,ilManager,file,documentRange,tool,severity,descriptor,element);
        }
      }
    }
  }
}
