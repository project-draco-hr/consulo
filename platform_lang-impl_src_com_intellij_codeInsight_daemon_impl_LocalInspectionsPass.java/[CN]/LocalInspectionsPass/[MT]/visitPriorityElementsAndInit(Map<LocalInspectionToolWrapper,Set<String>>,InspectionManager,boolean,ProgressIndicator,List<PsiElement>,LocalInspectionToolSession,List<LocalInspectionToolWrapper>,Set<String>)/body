{
  final List<InspectionContext> init=new ArrayList<InspectionContext>();
  List<Map.Entry<LocalInspectionToolWrapper,Set<String>>> entries=new ArrayList<Map.Entry<LocalInspectionToolWrapper,Set<String>>>(toolToSpecifiedLanguageIds.entrySet());
  Processor<Map.Entry<LocalInspectionToolWrapper,Set<String>>> processor=new Processor<Map.Entry<LocalInspectionToolWrapper,Set<String>>>(){
    @Override public boolean process(    final Map.Entry<LocalInspectionToolWrapper,Set<String>> pair){
      LocalInspectionToolWrapper toolWrapper=pair.getKey();
      Set<String> dialectIdsSpecifiedForTool=pair.getValue();
      return runToolOnElements(toolWrapper,dialectIdsSpecifiedForTool,iManager,isOnTheFly,indicator,elements,session,init,elementDialectIds);
    }
  }
;
  boolean result=JobLauncher.getInstance().invokeConcurrentlyUnderProgress(entries,indicator,myFailFastOnAcquireReadAction,processor);
  if (!result)   throw new ProcessCanceledException();
  inspectInjectedPsi(elements,isOnTheFly,indicator,iManager,true,wrappers);
  return init;
}
