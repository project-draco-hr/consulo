{
  InspectionProfile inspectionProfile=InspectionProjectProfileManager.getInstance(myProject).getInspectionProfile();
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(myProject);
  InjectedLanguageManager ilManager=InjectedLanguageManager.getInstance(myProject);
  Set<TextRange> emptyActionRegistered=new THashSet<TextRange>();
  for (  Map.Entry<PsiFile,List<InspectionResult>> entry : result.entrySet()) {
    PsiFile file=entry.getKey();
    Document documentRange=documentManager.getDocument(file);
    if (documentRange == null)     continue;
    List<InspectionResult> resultList=entry.getValue();
    Map<PsiElement,String> text=new THashMap<PsiElement,String>(resultList.size());
    for (    InspectionResult inspectionResult : resultList) {
      LocalInspectionTool tool=inspectionResult.tool;
      HighlightSeverity severity=inspectionProfile.getErrorLevel(HighlightDisplayKey.find(tool.getShortName()),file).getSeverity();
      for (      ProblemDescriptor descriptor : inspectionResult.foundProblems) {
        PsiElement element=descriptor.getPsiElement();
        String psiText=element == null ? null : text.get(element);
        if (psiText == null && element != null) {
          psiText=element.getText();
        }
        createHighlightsForDescriptor(outInfos,emptyActionRegistered,ilManager,file,documentRange,tool,severity,descriptor,element,psiText);
      }
    }
  }
}
