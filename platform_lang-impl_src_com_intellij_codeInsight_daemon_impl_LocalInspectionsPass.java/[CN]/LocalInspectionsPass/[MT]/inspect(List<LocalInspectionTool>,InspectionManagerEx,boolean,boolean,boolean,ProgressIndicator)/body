{
  myFailFastOnAcquireReadAction=failFastOnAcquireReadAction;
  if (tools.isEmpty())   return;
  ArrayList<PsiElement> inside=new ArrayList<PsiElement>();
  ArrayList<PsiElement> outside=new ArrayList<PsiElement>();
  Divider.getInsideAndOutside(myFile,myStartOffset,myEndOffset,myPriorityRange,inside,outside,HighlightLevelUtil.AnalysisLevel.HIGHLIGHT_AND_INSPECT);
  setProgressLimit(1L * tools.size() * 2);
  final LocalInspectionToolSession session=new LocalInspectionToolSession(myFile,myStartOffset,myEndOffset);
  List<Trinity<LocalInspectionTool,ProblemsHolder,PsiElementVisitor>> init=new ArrayList<Trinity<LocalInspectionTool,ProblemsHolder,PsiElementVisitor>>();
  visitPriorityElementsAndInit(tools,iManager,isOnTheFly,ignoreSuppressed,indicator,inside,session,init);
  visitRestElementsAndCleanup(tools,isOnTheFly,ignoreSuppressed,indicator,outside,session,init);
  indicator.checkCanceled();
  myInfos=new ArrayList<HighlightInfo>();
  addHighlightsFromResults(myInfos);
}
