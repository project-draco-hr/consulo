{
  GlobalSearchScope scope=place.getResolveScope();
  processor.handleEvent(PsiScopeProcessor.Event.SET_DECLARATION_HOLDER,this);
  ElementClassHint classHint=processor.getHint(ElementClassHint.KEY);
  final JavaPsiFacadeImpl facade=getFacade();
  final PsiMigrationImpl migration=facade.getCurrentMigration();
  final Condition<String> prefixMatcher=processor.getHint(JavaCompletionProcessor.NAME_FILTER);
  if (classHint == null || classHint.shouldProcess(ElementClassHint.DeclaractionKind.CLASS)) {
    NameHint nameHint=processor.getHint(NameHint.KEY);
    if (nameHint != null) {
      if (processClassesByName(processor,state,place,scope,nameHint.getName(state)))       return false;
    }
 else     if (prefixMatcher != null && migration == null) {
      for (      String className : getClassNamesCache()) {
        if (prefixMatcher.value(className)) {
          if (processClassesByName(processor,state,place,scope,className))           return false;
        }
      }
    }
 else {
      PsiClass[] classes=getClasses(scope);
      if (!processClasses(processor,state,place,classes))       return false;
      if (migration != null) {
        for (        PsiClass psiClass : migration.getMigrationClasses(getQualifiedName())) {
          if (!processor.execute(psiClass,state)) {
            return false;
          }
        }
      }
    }
  }
  if (classHint == null || classHint.shouldProcess(ElementClassHint.DeclaractionKind.PACKAGE)) {
    NameHint nameHint=processor.getHint(NameHint.KEY);
    if (nameHint != null) {
      PsiPackage aPackage=findSubPackageByName(nameHint.getName(state));
      if (aPackage != null) {
        if (!processor.execute(aPackage,state))         return false;
      }
    }
 else {
      PsiPackage[] packs=getSubPackages(scope);
      for (      PsiPackage pack : packs) {
        final String packageName=pack.getName();
        if (packageName == null)         continue;
        if (!facade.getNameHelper().isIdentifier(packageName,PsiUtil.getLanguageLevel(this))) {
          continue;
        }
        if (!processor.execute(pack,state)) {
          return false;
        }
      }
      if (migration != null) {
        for (        PsiPackage aPackage : migration.getMigrationPackages(getQualifiedName())) {
          if (!processor.execute(aPackage,state)) {
            return false;
          }
        }
      }
    }
  }
  return true;
}
