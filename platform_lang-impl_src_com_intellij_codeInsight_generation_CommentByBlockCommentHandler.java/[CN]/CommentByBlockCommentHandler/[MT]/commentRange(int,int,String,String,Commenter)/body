{
  final CharSequence chars=myDocument.getCharsSequence();
  LogicalPosition caretPosition=myCaret.getLogicalPosition();
  if (startOffset == 0 || chars.charAt(startOffset - 1) == '\n') {
    if (endOffset == myDocument.getTextLength() || endOffset > 0 && chars.charAt(endOffset - 1) == '\n') {
      CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(myProject);
      CommonCodeStyleSettings settings=CodeStyleSettingsManager.getSettings(myProject).getCommonSettings(myFile.getLanguage());
      String space;
      if (!settings.BLOCK_COMMENT_AT_FIRST_COLUMN) {
        final FileType fileType=myFile.getFileType();
        int line1=myEditor.offsetToLogicalPosition(startOffset).line;
        int line2=myEditor.offsetToLogicalPosition(endOffset - 1).line;
        Indent minIndent=CommentUtil.getMinLineIndent(myProject,myDocument,line1,line2,fileType);
        if (minIndent == null) {
          minIndent=codeStyleManager.zeroIndent();
        }
        space=codeStyleManager.fillIndent(minIndent,fileType);
      }
 else {
        space="";
      }
      final StringBuilder nestingPrefix=new StringBuilder(space).append(commentPrefix);
      if (!commentPrefix.endsWith("\n")) {
        nestingPrefix.append("\n");
      }
      final StringBuilder nestingSuffix=new StringBuilder(space);
      nestingSuffix.append(commentSuffix.startsWith("\n") ? commentSuffix.substring(1) : commentSuffix);
      nestingSuffix.append("\n");
      TextRange range=insertNestedComments(startOffset,endOffset,nestingPrefix.toString(),nestingSuffix.toString(),commenter);
      myCaret.setSelection(range.getStartOffset(),range.getEndOffset());
      LogicalPosition pos=new LogicalPosition(caretPosition.line + 1,caretPosition.column);
      myCaret.moveToLogicalPosition(pos);
      return;
    }
  }
  TextRange range=insertNestedComments(startOffset,endOffset,commentPrefix,commentSuffix,commenter);
  myCaret.setSelection(range.getStartOffset(),range.getEndOffset());
  LogicalPosition pos=new LogicalPosition(caretPosition.line,caretPosition.column + commentPrefix.length());
  myCaret.moveToLogicalPosition(pos);
}
