{
  if (element == null) {
    myDefaultState.setEnabled(false);
    setEnabled(false);
    return;
  }
  final DependencyValidationManager validationManager=DependencyValidationManager.getInstance(element.getProject());
  if (myTools != null) {
    for (    ScopeToolState state : myTools) {
      final NamedScope scope=state.getScope();
      if (scope != null) {
        final PackageSet packageSet=scope.getValue();
        if (packageSet != null && packageSet.contains(element.getContainingFile(),validationManager)) {
          state.setEnabled(false);
          return;
        }
      }
    }
    myDefaultState.setEnabled(false);
  }
 else {
    myDefaultState.setEnabled(false);
    setEnabled(false);
  }
}
