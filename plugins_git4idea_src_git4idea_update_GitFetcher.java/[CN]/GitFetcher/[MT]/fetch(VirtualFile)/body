{
  GitRepository repository=myRepositoryManager.getRepositoryForRoot(root);
  boolean disposeRepository=false;
  if (repository == null) {
    repository=GitRepository.getTempRepository(root,myProject);
    disposeRepository=true;
  }
  GitFetchResult result=GitFetchResult.success();
  for (  GitRemote remote : repository.getRemotes()) {
    String url=remote.getFirstUrl();
    if (url == null) {
      continue;
    }
    if (GitHttpAdapter.isHttpUrl(url)) {
      GitFetchResult res=GitHttpAdapter.fetch(repository,remote.getName(),url);
      myErrors.addAll(res.getErrors());
      if (!res.isSuccess()) {
        result=res;
        break;
      }
    }
 else {
      if (!fetchNatively(root,remote)) {
        result=GitFetchResult.error(myErrors);
        break;
      }
    }
  }
  if (disposeRepository) {
    Disposer.dispose(repository);
  }
  return result;
}
