{
  Map<VirtualFile,String> additionalInfo=new HashMap<VirtualFile,String>();
  for (  GitRepository repository : roots) {
    LOG.info("fetching " + repository);
    GitFetchResult result=fetch(repository);
    String ai=result.getAdditionalInfo();
    if (!StringUtil.isEmptyOrSpaces(ai)) {
      additionalInfo.put(repository.getRoot(),ai);
    }
    if (!result.isSuccess()) {
      Collection<Exception> errors=new ArrayList<Exception>(getErrors());
      errors.addAll(result.getErrors());
      displayFetchResult(myProject,result,errorNotificationTitle,errors);
      return false;
    }
  }
  if (notifySuccess) {
    GitUIUtil.notifySuccess(myProject,"","Fetched successfully");
  }
  String addInfo=makeAdditionalInfoByRoot(additionalInfo);
  if (!StringUtil.isEmptyOrSpaces(addInfo)) {
    Notificator.getInstance(myProject).notify(GitVcs.MINOR_NOTIFICATION,"Fetch details",addInfo,NotificationType.INFORMATION);
  }
  return true;
}
