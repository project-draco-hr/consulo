{
  if (myTokenType != null)   return;
  if (myCurOffset >= myBufferEnd)   return;
  int state=0;
  int offset=myCurOffset;
  do {
    final char c=myBuffer.charAt(offset);
switch (c) {
case '\\':
      state+=state % 2 == 0 ? 1 : -1;
    if (state % 5 == 0)     state=4;
case '"':
case '\'':
  if ((state == 1 || state == 2) && c == mySurroundingQuote) {
    state=6 - state * 3;
    offset++;
    break;
  }
default :
offset+=state > 0 ? 1 : 0;
break;
case '\n':
case '\r':
state=0;
break;
}
if (offset == myBufferEnd - 1) state=0;
switch (state) {
case 0:
if (offset == myCurOffset) {
myJavaLexer.start(myBuffer,myCurOffset,myBufferEnd,0);
myTokenType=myJavaLexer.getTokenType();
myTokenEnd=myJavaLexer.getTokenEnd();
}
 else {
myTokenType=myTokenType=mySurroundingQuote == '"' ? JavaTokenType.STRING_LITERAL : JavaTokenType.CHARACTER_LITERAL;
myTokenEnd=offset;
}
break;
case 4:
myTokenType=JavaTokenType.BAD_CHARACTER;
myTokenEnd=offset;
state=0;
}
}
 while (state > 0);
}
