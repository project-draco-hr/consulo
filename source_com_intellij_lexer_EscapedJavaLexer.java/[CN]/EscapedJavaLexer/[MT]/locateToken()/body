{
  if (myTokenType != null)   return;
  if (myCurOffset >= myBufferEnd)   return;
  boolean esc=false;
  int offset=myCurOffset;
  int state=0;
  char literalStarter=0;
  do {
    char c=myBuffer.charAt(offset);
    boolean wasEsc=esc;
    esc=false;
    if (c == '\\') {
      if (!wasEsc) {
        esc=true;
      }
 else {
        state=2;
      }
    }
 else     if (state == 0) {
      if (c == '\'' || c == '\"') {
        literalStarter=c;
        state=1;
      }
    }
 else     if (state == 1) {
      if (c == literalStarter) {
        state=0;
        offset++;
        break;
      }
    }
 else     if (state == 2) {
      state=1;
    }
    if (!esc && state == 0 || offset >= myBufferEnd) {
      break;
    }
    offset++;
  }
 while (true);
  if (offset == myBufferEnd - 1)   state=0;
switch (state) {
case 0:
    if (offset == myCurOffset) {
      myJavaLexer.start(myBuffer,myCurOffset,myBufferEnd,0);
      myTokenType=myJavaLexer.getTokenType();
      myTokenEnd=myJavaLexer.getTokenEnd();
    }
 else {
      myTokenType=literalStarter == '\"' ? JavaTokenType.STRING_LITERAL : JavaTokenType.CHARACTER_LITERAL;
      myTokenEnd=offset;
    }
  break;
case 1:
myTokenType=literalStarter == '\"' ? JavaTokenType.STRING_LITERAL : JavaTokenType.CHARACTER_LITERAL;
myTokenEnd=offset;
break;
default :
myTokenType=JavaTokenType.BAD_CHARACTER;
myTokenEnd=offset;
break;
}
}
