{
  if (myPattern != null) {
    if (DumbService.isDumb(myElement.getProject())) {
      return new Object[]{ModificationTracker.EVER_CHANGED,ExternalResourceManager.getInstance()};
    }
    final Object[] a={myElement,ExternalResourceManager.getInstance()};
    final PsiElementProcessor.CollectElements<XmlFile> processor=new PsiElementProcessor.CollectElements<XmlFile>();
    RelaxIncludeIndex.processForwardDependencies(myFile,processor);
    if (processor.getCollection().size() > 0) {
      return ArrayUtil.mergeArrays(a,processor.toArray());
    }
 else {
      return a;
    }
  }
  return new Object[]{ModificationTracker.EVER_CHANGED};
}
