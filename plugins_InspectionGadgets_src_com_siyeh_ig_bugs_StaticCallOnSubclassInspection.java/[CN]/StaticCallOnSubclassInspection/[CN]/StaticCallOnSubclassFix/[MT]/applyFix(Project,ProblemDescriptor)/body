{
  if (ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(new VirtualFile[]{descriptor.getPsiElement().getContainingFile().getVirtualFile()}).hasReadonlyFiles())   return;
  final PsiIdentifier name=(PsiIdentifier)descriptor.getPsiElement();
  final PsiReferenceExpression expression=(PsiReferenceExpression)name.getParent();
  final PsiMethodCallExpression call=(PsiMethodCallExpression)expression.getParent();
  final PsiMethod method=call.resolveMethod();
  final String methodName=expression.getReferenceName();
  final PsiClass containingClass=method.getContainingClass();
  final PsiExpressionList argumentList=call.getArgumentList();
  replaceExpression(project,call,containingClass.getName() + '.' + methodName+ argumentList.getText());
}
