{
  super.visitReferenceExpression(expression);
  final PsiExpression qualifier=expression.getQualifierExpression();
  if (qualifier == null || qualifier instanceof PsiThisExpression) {
    return;
  }
  if (ignoreEquals) {
    final PsiMethod method=PsiTreeUtil.getParentOfType(expression,PsiMethod.class);
    if (MethodUtils.isEquals(method)) {
      return;
    }
  }
  final PsiElement referent=expression.resolve();
  if (!(referent instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)referent;
  if (ignoreSameClass) {
    final PsiClass parent=PsiTreeUtil.getParentOfType(expression,PsiClass.class);
    final PsiClass containingClass=field.getContainingClass();
    if (parent != null && parent.equals(containingClass)) {
      return;
    }
  }
  if (!field.hasModifierProperty(PsiModifier.PRIVATE) && !field.hasModifierProperty(PsiModifier.PROTECTED)) {
    return;
  }
  if (field.hasModifierProperty(PsiModifier.STATIC)) {
    return;
  }
  final PsiElement fieldNameElement=expression.getReferenceNameElement();
  if (fieldNameElement == null) {
    return;
  }
  registerError(fieldNameElement,field);
}
