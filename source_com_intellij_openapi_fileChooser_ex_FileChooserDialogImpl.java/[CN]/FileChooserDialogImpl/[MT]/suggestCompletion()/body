{
  final List<File> toComplete=getCompletion(getTextFieldText(),new FileFilter(){
    public boolean accept(    final File pathname){
      final VirtualFile vFile=LocalFileSystem.getInstance().findFileByIoFile(pathname);
      return myChooserDescriptor.isFileVisible(vFile,myFileSystemTree.areHiddensShown());
    }
  }
);
  myTextUpdate.queue(new Update("completion"){
    public void run(){
      if (myList == null) {
        myList=new JList();
        myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        myList.setCellRenderer(new ColoredListCellRenderer(){
          protected void customizeCellRenderer(          final JList list,          final Object value,          final int index,          final boolean selected,          final boolean hasFocus){
            clear();
            append(((File)value).getName(),new SimpleTextAttributes(list.getFont().getStyle(),list.getForeground()));
          }
        }
);
      }
      if (myCurrentPopup != null) {
        if (toComplete.equals(myCurrentCompletion)) {
          myCurrentPopup.setLocation(getLocationForCaret());
          return;
        }
 else {
          closePopup();
        }
      }
      myCurrentCompletion=toComplete;
      if (myCurrentCompletion.size() == 0)       return;
      final Object selected=myList.getSelectedIndex() < myList.getModel().getSize() ? myList.getSelectedValue() : null;
      myList.setModel(new AbstractListModel(){
        public int getSize(){
          return myCurrentCompletion.size();
        }
        public Object getElementAt(        final int index){
          return myCurrentCompletion.get(index);
        }
      }
);
      if (selected != null) {
        myList.setSelectedValue(selected,true);
      }
      final PopupChooserBuilder builder=JBPopupFactory.getInstance().createListPopupBuilder(myList);
      myCurrentPopup=builder.setRequestFocus(false).setResizable(false).setCancelCalllback(new Computable<Boolean>(){
        public Boolean compute(){
          SwingUtilities.invokeLater(new Runnable(){
            public void run(){
              myPathTextField.requestFocus();
            }
          }
);
          return Boolean.TRUE;
        }
      }
).createPopup();
      myCurrentPopup.showInScreenCoordinates(myPathTextField,getLocationForCaret());
    }
  }
);
}
