{
  final Editor editor=lookup.getEditor();
  final int offset=editor.getCaretModel().getOffset();
  CharSequence seq=editor.getDocument().getCharsSequence();
  if (seq.length() <= offset || !lookup.isCompletion()) {
    myOriginalHandler.execute(editor,caret,context);
    return;
  }
  char c=seq.charAt(offset);
  CharFilter.Result lookupAction=LookupTypedHandler.getLookupAction(c,lookup);
  if (lookupAction != CharFilter.Result.ADD_TO_PREFIX || Character.isWhitespace(c)) {
    myOriginalHandler.execute(editor,caret,context);
    return;
  }
  if (!lookup.performGuardedChange(new Runnable(){
    @Override public void run(){
      CaretAction action=new CaretAction(){
        @Override public void perform(        Caret caret){
          caret.removeSelection();
          caret.moveToOffset(caret.getOffset() + 1);
        }
      }
;
      if (caret == null) {
        editor.getCaretModel().runForEachCaret(action);
      }
 else {
        action.perform(caret);
      }
    }
  }
)) {
    return;
  }
  lookup.appendPrefix(c);
  final CompletionProgressIndicator completion=CompletionServiceImpl.getCompletionService().getCurrentCompletion();
  if (completion != null) {
    completion.prefixUpdated();
  }
}
