{
  myRunnerParameters=parameters;
  try {
    FileDocumentManager.getInstance().saveAllDocuments();
    executor=createExecutor(myRunnerParameters,mavenCore.getState(),mySettings);
    openToolWindow(executor.createConsole(project));
    ProgressManager.getInstance().run(new Task.Backgroundable(project,executor.getCaption(),true){
      public void run(      @NotNull ProgressIndicator indicator){
        executor.execute();
      }
      @Nullable public NotificationInfo getNotificationInfo(){
        return new NotificationInfo("Maven","Maven Task Finished","");
      }
      public void onSuccess(){
        onRunComplete();
      }
      public void onCancel(){
        onRunComplete();
      }
      public boolean shouldStartInBackground(){
        return mySettings.isRunMavenInBackground();
      }
      public void processSentToBackground(){
        mySettings.setRunMavenInBackground(true);
      }
      public void processRestoredToForeground(){
        mySettings.setRunMavenInBackground(false);
      }
    }
);
  }
 catch (  Exception e) {
    ErrorHandler.showError(project,e,false);
  }
}
