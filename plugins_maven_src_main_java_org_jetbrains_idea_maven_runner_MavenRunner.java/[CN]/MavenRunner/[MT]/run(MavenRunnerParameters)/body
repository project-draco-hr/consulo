{
  myRunnerParameters=parameters;
  try {
    FileDocumentManager.getInstance().saveAllDocuments();
    myProcessedProjects=new ArrayList<MavenProject>();
    myExecutor=createExecutor(myRunnerParameters,myMavenCore.getState(),mySettings);
    openToolWindow(myExecutor.createConsole(myProject));
    ProgressManager.getInstance().run(new Task.Backgroundable(myProject,myExecutor.getCaption(),true){
      public void run(      @NotNull ProgressIndicator indicator){
        try {
          myExecutor.execute(myProcessedProjects,indicator);
        }
 catch (        ProcessCanceledException e) {
        }
        onRunComplete();
      }
      @Nullable public NotificationInfo getNotificationInfo(){
        return new NotificationInfo("Maven","Maven Task Finished","");
      }
      public boolean shouldStartInBackground(){
        return mySettings.isRunMavenInBackground();
      }
      public void processSentToBackground(){
        mySettings.setRunMavenInBackground(true);
      }
      public void processRestoredToForeground(){
        mySettings.setRunMavenInBackground(false);
      }
    }
);
  }
 catch (  Exception e) {
    ErrorHandler.showError(myProject,e,false);
  }
}
