{
  if (LOG.isDebugEnabled()) {
    LOG.debug("visitThisExpression " + expression);
  }
  PsiJavaCodeReferenceElement qualifier=expression.getQualifier();
  int iterationCount=0;
  if (qualifier != null) {
    PsiElement targetClass=qualifier.resolve();
    if (targetClass == null || getContextPsiClass() == null) {
      throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.invalid.expression",qualifier.getText())));
    }
    try {
      PsiClass aClass=getContextPsiClass();
      while (aClass != null && !aClass.equals(targetClass)) {
        iterationCount++;
        aClass=getOuterClass(aClass);
      }
    }
 catch (    Exception e) {
      throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(e));
    }
  }
  myResult=new ThisEvaluator(iterationCount);
}
