{
  final DomStringWrapper stringWrapper=new DomStringWrapper(element);
  if (PsiClass.class.isAssignableFrom(DomUtil.getRawType(type))) {
    return getDomUIFactory().createPsiClassControl(stringWrapper,commitOnEveryChange);
  }
  if (type.equals(PsiType.class)) {
    return getDomUIFactory().createPsiTypeControl(stringWrapper,commitOnEveryChange);
  }
  if (type instanceof Class && Enum.class.isAssignableFrom((Class)type)) {
    return new ComboControl(stringWrapper,(Class)type);
  }
  final DomFixedWrapper wrapper=new DomFixedWrapper(element);
  if (type.equals(boolean.class) || type.equals(Boolean.class)) {
    return new BooleanControl(wrapper);
  }
  if (type.equals(String.class)) {
    return getDomUIFactory().createTextControl(wrapper,commitOnEveryChange);
  }
  throw new IllegalArgumentException("Not supported: " + type);
}
