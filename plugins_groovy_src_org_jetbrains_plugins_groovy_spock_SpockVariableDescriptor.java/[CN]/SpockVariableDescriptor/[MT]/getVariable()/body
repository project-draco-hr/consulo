{
  if (myVariable == null) {
    final PsiManager manager=myNavigationElement.getManager();
    PsiType type=guard.doPreventingRecursion(this,new Computable<PsiType>(){
      @Override public PsiType compute(){
        PsiType res=null;
        for (        GrExpression expression : myExpressions) {
          if (expression == null)           continue;
          res=TypesUtil.getLeastUpperBoundNullable(res,expression.getType(),manager);
        }
        if (myExpressionsOfCollection != null) {
          for (          GrExpression expression : myExpressionsOfCollection) {
            if (expression == null)             continue;
            PsiType listType=expression.getType();
            PsiType type=PsiUtil.extractIterableTypeParameter(listType,true);
            if (type == null) {
              if (listType == null)               continue;
              if (listType.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {
                type=PsiType.getJavaLangString(expression.getManager(),expression.getResolveScope());
              }
            }
            res=TypesUtil.getLeastUpperBoundNullable(res,type,manager);
          }
        }
        return res;
      }
    }
);
    if (type == null) {
      type=PsiType.getJavaLangObject(manager,myNavigationElement.getResolveScope());
    }
    myVariable=new SpockVariable(null,manager,myName,type,myNavigationElement);
  }
  return myVariable;
}
