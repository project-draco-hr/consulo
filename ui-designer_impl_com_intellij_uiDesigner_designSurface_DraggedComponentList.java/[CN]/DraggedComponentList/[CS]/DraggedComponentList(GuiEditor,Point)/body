{
  getSelectionFromEditor(editor);
  RadComponent componentUnderMouse=null;
  if (mySelection.size() > 0) {
    int componentUnderMouseIndex=0;
    if (pnt != null) {
      for (int i=0; i < mySelection.size(); i++) {
        Point aPoint=SwingUtilities.convertPoint(editor.getRootContainer().getDelegee(),pnt,myOriginalParents[i].getDelegee());
        if (myOriginalBounds[i].contains(aPoint)) {
          componentUnderMouseIndex=i;
        }
      }
    }
    componentUnderMouse=mySelection.get(componentUnderMouseIndex);
    myComponentUnderMouseColumn=myOriginalConstraints[componentUnderMouseIndex].getColumn();
    myComponentUnderMouseRow=myOriginalConstraints[componentUnderMouseIndex].getRow();
  }
  LOG.debug("myComponentUnderMouseColumn=" + myComponentUnderMouseColumn + ", myComponentUnderMouseRow="+ myComponentUnderMouseRow);
  if (mySelection.size() > 1 && componentUnderMouse != null) {
    for (    GridConstraints constraints : myOriginalConstraints) {
      myDragRelativeColumn=Math.max(myDragRelativeColumn,componentUnderMouse.getConstraints().getColumn() - constraints.getColumn());
    }
  }
  for (  RadComponent c : mySelection) {
    JComponent delegee=c.getDelegee();
    if (c == componentUnderMouse && pnt != null) {
      if (delegee.getX() > pnt.x && delegee.getX() + delegee.getWidth() < pnt.x) {
        myDragDeltaX=pnt.x - (delegee.getX() + delegee.getWidth() / 2);
      }
      if (delegee.getY() > pnt.y && delegee.getY() + delegee.getHeight() < pnt.y) {
        myDragDeltaY=pnt.y - (delegee.getY() + delegee.getHeight() / 2);
      }
      myHasDragDelta=true;
    }
  }
}
