{
  if (myOriginalFile instanceof PsiJavaFile)   return ((PsiJavaFile)myOriginalFile).getLanguageLevel();
  final LanguageLevel forcedLanguageLevel=getUserData(PsiUtil.FILE_LANGUAGE_LEVEL_KEY);
  if (forcedLanguageLevel != null)   return forcedLanguageLevel;
  VirtualFile virtualFile=getVirtualFile();
  if (virtualFile == null) {
    virtualFile=getUserData(IndexingDataKeys.VIRTUAL_FILE);
  }
  final Project project=getProject();
  if (virtualFile == null) {
    final PsiFile originalFile=getOriginalFile();
    if (originalFile instanceof PsiJavaFile && originalFile != this)     return ((PsiJavaFile)originalFile).getLanguageLevel();
    return LanguageLevelProjectExtension.getInstance(project).getLanguageLevel();
  }
  final VirtualFile folder=virtualFile.getParent();
  if (folder != null) {
    final LanguageLevel level=folder.getUserData(LanguageLevel.KEY);
    if (level != null)     return level;
  }
  final LanguageLevel classesLanguageLevel=JavaPsiImplementationHelper.getInstance(project).getClassesLanguageLevel(virtualFile);
  if (classesLanguageLevel != null) {
    return classesLanguageLevel;
  }
  return LanguageLevelProjectExtension.getInstance(project).getLanguageLevel();
}
