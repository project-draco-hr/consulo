{
  final PsiCodeBlock body=overridingMethod.getBody();
  if (body == null) {
    return;
  }
  final PsiStatement[] statements=body.getStatements();
  for (  PsiStatement statement : statements) {
    if (!(statement instanceof PsiExpressionStatement)) {
      continue;
    }
    final PsiExpressionStatement expressionStatement=(PsiExpressionStatement)statement;
    final PsiExpression expression=expressionStatement.getExpression();
    if (!(expression instanceof PsiMethodCallExpression)) {
      continue;
    }
    final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)expression;
    final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
    final PsiExpression qualifier=methodExpression.getQualifierExpression();
    if (!(qualifier instanceof PsiSuperExpression)) {
      continue;
    }
    final PsiMethod targetMethod=methodCallExpression.resolveMethod();
    if (targetMethod == null) {
      continue;
    }
    final PsiClass containingClass=targetMethod.getContainingClass();
    if (!superClass.equals(containingClass)) {
      continue;
    }
    statement.delete();
  }
}
