{
  final BindingImpl binding=(BindingImpl)create();
  for (final Iterator<PsiTypeVariable> v=myBoundVariables.iterator(); v.hasNext(); ) {
    final PsiTypeVariable var=v.next();
    final int index=var.getIndex();
    final PsiType type=myBindings[index];
    if (type != null) {
class Verifier extends PsiExtendedTypeVisitor {
        boolean myFlag=false;
        public Object visitTypeVariable(        final PsiTypeVariable var){
          if (var.getIndex() == index) {
            myFlag=true;
          }
          return null;
        }
      }
      final Verifier verifier=new Verifier();
      type.accept(verifier);
      if (verifier.myFlag) {
        myBindings[index]=Bottom.BOTTOM;
        binding.myBindings[index]=Bottom.BOTTOM;
      }
 else {
        binding.myBindings[index]=type;
      }
    }
 else {
      binding.myBindings[index]=type;
    }
  }
  for (final Iterator<PsiTypeVariable> v=myBoundVariables.iterator(); v.hasNext(); ) {
    final PsiTypeVariable var=v.next();
    final int index=var.getIndex();
    final PsiType type=myBindings[index];
    if (type != null) {
      myBindings[index]=binding.apply(type);
    }
  }
  return this;
}
