{
  int offset=TargetElementUtilBase.adjustOffset(editor.getDocument(),editor.getCaretModel().getOffset());
  PsiElement target=file.findElementAt(offset);
  if (target instanceof PsiKeyword) {
    PsiElement parent=target.getParent();
    if (PsiKeyword.TRY.equals(target.getText()) && parent instanceof PsiTryStatement) {
      FeatureUsageTracker.getInstance().triggerFeatureUsed("codeassists.highlight.throws");
      highlightTry(editor,file,target,(PsiTryStatement)parent);
      return true;
    }
    if (PsiKeyword.CATCH.equals(target.getText()) && parent instanceof PsiCatchSection) {
      FeatureUsageTracker.getInstance().triggerFeatureUsed("codeassists.highlight.throws");
      highlightCatch(editor,file,target,(PsiCatchSection)parent);
      return true;
    }
    if (PsiKeyword.THROWS.equals(target.getText())) {
      FeatureUsageTracker.getInstance().triggerFeatureUsed("codeassists.highlight.throws");
      highlightThrows(editor,file,target);
      return true;
    }
  }
  return false;
}
