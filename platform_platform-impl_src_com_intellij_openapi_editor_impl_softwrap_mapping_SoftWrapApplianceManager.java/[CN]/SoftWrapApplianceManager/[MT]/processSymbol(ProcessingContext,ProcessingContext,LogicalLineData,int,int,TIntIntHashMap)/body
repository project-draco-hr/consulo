{
  int spaceWidth;
  if (fontType2spaceWidth.contains(fontType)) {
    spaceWidth=fontType2spaceWidth.get(fontType);
  }
 else {
    spaceWidth=EditorUtil.getSpaceWidth(fontType,myEditor);
    fontType2spaceWidth.put(fontType,spaceWidth);
  }
  if (context.symbol == '\n') {
    context.symbolWidthInColumns=0;
    context.symbolWidthInPixels=0;
    notifyListenersOnProcessedSymbol(context);
    context.offset++;
    context.onNewLine();
    myOffset2fontType.clear();
    myOffset2widthInPixels.clear();
    startLineContext.from(context);
    logicalLineData.update(context.logicalLine,spaceWidth,myEditor);
    context.x=0;
    return;
  }
  context.symbolWidthInPixels=newX - context.x;
  context.symbolWidthInColumns=calculateWidthInColumns(context.symbol,context.symbolWidthInPixels,spaceWidth);
  notifyListenersOnProcessedSymbol(context);
  context.visualColumn+=context.symbolWidthInColumns;
  context.logicalColumn+=context.symbolWidthInColumns;
  context.x=newX;
  if (myOffset2widthInPixels.anchor <= 0) {
    myOffset2widthInPixels.anchor=context.offset;
  }
  if (context.offset - myOffset2widthInPixels.anchor >= myOffset2widthInPixels.data.length) {
    int[] newData=new int[myOffset2widthInPixels.data.length * 2];
    System.arraycopy(myOffset2widthInPixels.data,0,newData,0,myOffset2widthInPixels.data.length);
    myOffset2widthInPixels.data=newData;
  }
  myOffset2widthInPixels.data[context.offset - myOffset2widthInPixels.anchor]=context.symbolWidthInPixels;
  myOffset2widthInPixels.end++;
  context.offset++;
}
