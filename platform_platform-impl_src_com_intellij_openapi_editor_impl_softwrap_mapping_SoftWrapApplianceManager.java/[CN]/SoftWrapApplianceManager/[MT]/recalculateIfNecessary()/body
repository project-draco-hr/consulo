{
  if (myInProgress) {
    return false;
  }
  boolean indentChanged=false;
  IndentType currentIndentType=getIndentToUse();
  boolean useCustomIndent=currentIndentType == IndentType.CUSTOM;
  int currentCustomIndent=myEditor.getSettings().getCustomSoftWrapIndent();
  if (useCustomIndent ^ myCustomIndentUsedLastTime || (useCustomIndent && myCustomIndentValueUsedLastTime != currentCustomIndent)) {
    indentChanged=true;
  }
  myCustomIndentUsedLastTime=useCustomIndent;
  myCustomIndentValueUsedLastTime=currentCustomIndent;
  int currentVisibleAreaWidth=myWidthProvider.getVisibleAreaWidth();
  if (!indentChanged && myVisibleAreaWidth == currentVisibleAreaWidth) {
    return recalculateSoftWraps();
  }
  int softWrapsBefore=-1;
  final ScrollingModelEx scrollingModel=myEditor.getScrollingModel();
  int yScrollOffset=scrollingModel.getVerticalScrollOffset();
  int anchorOffset=myLastTopLeftCornerOffset;
  if (anchorOffset >= 0) {
    softWrapsBefore=getNumberOfSoftWrapsBefore(anchorOffset);
  }
  reset();
  myStorage.removeAll();
  myVisibleAreaWidth=currentVisibleAreaWidth;
  final boolean result=recalculateSoftWraps();
  if (!result) {
    return false;
  }
  if (softWrapsBefore >= 0) {
    int softWrapsNow=getNumberOfSoftWrapsBefore(anchorOffset);
    if (softWrapsNow != softWrapsBefore) {
      scrollingModel.disableAnimation();
      try {
        scrollingModel.scrollVertically(yScrollOffset + (softWrapsNow - softWrapsBefore) * myEditor.getLineHeight());
      }
  finally {
        scrollingModel.enableAnimation();
      }
    }
  }
  updateLastTopLeftCornerOffset();
  return result;
}
