{
  int limit=3 * (myContext.tokenEndOffset - myContext.lineStartPosition.offset);
  int counter=0;
  int startOffset=myContext.currentPosition.offset;
  while (myContext.currentPosition.offset < myContext.tokenEndOffset) {
    if (counter++ > limit) {
      String editorInfo=myEditor instanceof EditorImpl ? ((EditorImpl)myEditor).dumpState() : myEditor.getClass().toString();
      LogMessageEx.error(LOG,"Cycled soft wraps recalculation detected",String.format("Start recalculation offset: %d, visible area width: %d, calculation context: %s, editor info: %s",startOffset,myVisibleAreaWidth,myContext,editorInfo));
      for (int i=myContext.currentPosition.offset; i < myContext.tokenEndOffset; i++) {
        char c=myContext.text.charAt(i);
        if (c == '\n') {
          myContext.onNewLine();
        }
 else {
          myContext.onNonLineFeedSymbol(c);
        }
      }
      return;
    }
    int offset=myContext.currentPosition.offset;
    if (offset > myContext.rangeEndOffset) {
      return;
    }
    if (myContext.delayedSoftWrap != null && myContext.delayedSoftWrap.getStart() == offset) {
      processSoftWrap(myContext.delayedSoftWrap);
      myContext.delayedSoftWrap=null;
    }
    char c=myContext.text.charAt(offset);
    if (c == '\n') {
      myContext.onNewLine();
      continue;
    }
    if (myContext.skipToLineEnd) {
      myContext.skipToLineEnd=false;
      createSoftWrapIfPossible();
      continue;
    }
    int newX=offsetToX(offset,c);
    if (myContext.exceedsVisualEdge(newX) && myContext.delayedSoftWrap == null) {
      createSoftWrapIfPossible();
    }
 else {
      myContext.onNonLineFeedSymbol(c,newX);
    }
  }
}
