{
  final int offset=myContext.currentPosition.offset;
  myContext.logicalLineData.update(offset,myContext.getSpaceWidth());
  int softWrapStartOffset=myContext.softWrapStartOffset;
  SoftWrap softWrap=registerSoftWrap(softWrapStartOffset,Math.max(softWrapStartOffset,offset - 1),calculateSoftWrapEndOffset(softWrapStartOffset,myContext.logicalLineData.endLineOffset),myContext.getSpaceWidth(),myContext.logicalLineData);
  if (softWrap == null) {
    myContext.tryToShiftToNextLine();
    return;
  }
  notifyListenersOnVisualLineStart(myContext.lineStartPosition);
  int actualSoftWrapOffset=softWrap.getStart();
  if (actualSoftWrapOffset > myContext.endOffset) {
    myContext.delayedSoftWrap=softWrap;
    myContext.onNonLineFeedSymbol(myContext.text.charAt(offset));
    return;
  }
 else   if (actualSoftWrapOffset < offset) {
    revertListeners(actualSoftWrapOffset,myContext.currentPosition.visualLine);
    for (int j=offset - 1; j >= actualSoftWrapOffset; j--) {
      int pixelsDiff=myOffset2widthInPixels.data[j - myOffset2widthInPixels.anchor];
      int tmpFontType=myOffset2fontType.get(j);
      int columnsDiff=calculateWidthInColumns(myContext.text.charAt(j),pixelsDiff,myContext.getSpaceWidth(tmpFontType));
      myContext.currentPosition.offset--;
      myContext.currentPosition.logicalColumn-=columnsDiff;
      myContext.currentPosition.visualColumn-=columnsDiff;
    }
  }
 else   if (actualSoftWrapOffset > offset) {
    myContext.onNonLineFeedSymbol(myContext.text.charAt(offset));
    for (int j=offset + 1; j < actualSoftWrapOffset; j++) {
      myContext.onNonLineFeedSymbol(myContext.text.charAt(offset));
    }
  }
  processSoftWrap(softWrap);
  myContext.currentPosition.offset=actualSoftWrapOffset;
  myOffset2fontType.clear();
  myOffset2widthInPixels.clear();
}
