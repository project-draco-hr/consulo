{
  final PsiClass aClass=field.getContainingClass();
  if (aClass == null) {
    return;
  }
  final String fieldName=field.getName();
  if ("serialVersionUID".equals(fieldName)) {
    return;
  }
  PsiClass ancestorClass=aClass.getSuperClass();
  final Set visitedClasses=new HashSet();
  while (ancestorClass != null) {
    if (!visitedClasses.add(ancestorClass)) {
      return;
    }
    final PsiField ancestorField=ancestorClass.findFieldByName(fieldName,false);
    if (ancestorField != null) {
      if (!m_ignoreInvisibleFields || ClassUtils.isFieldVisible(ancestorField,aClass)) {
        registerFieldError(field);
        return;
      }
    }
    ancestorClass=ancestorClass.getSuperClass();
  }
}
