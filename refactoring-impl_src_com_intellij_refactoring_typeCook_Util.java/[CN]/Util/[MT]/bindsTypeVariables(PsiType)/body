{
  if (t == null) {
    return false;
  }
  if (t instanceof PsiTypeVariable) {
    return true;
  }
  if (t instanceof PsiArrayType) {
    return bindsTypeVariables(((PsiArrayType)t).getComponentType());
  }
  if (t instanceof PsiWildcardType) {
    return bindsTypeVariables(((PsiWildcardType)t).getBound());
  }
  if (t instanceof PsiIntersectionType) {
    final PsiType[] conjuncts=((PsiIntersectionType)t).getConjuncts();
    for (int i=0; i < conjuncts.length; i++) {
      if (bindsTypeVariables(conjuncts[i]))       return true;
    }
    return false;
  }
  final PsiClassType.ClassResolveResult result=resolveType(t);
  if (result.getElement() != null) {
    final PsiSubstitutor subst=result.getSubstitutor();
    for (Iterator<PsiType> types=subst.getSubstitutionMap().values().iterator(); types.hasNext(); ) {
      if (bindsTypeVariables(types.next())) {
        return true;
      }
    }
  }
  return false;
}
