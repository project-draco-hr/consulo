{
  RepositoryManager repositoryManager=JavaPsiFacadeEx.getInstanceEx(myManager.getProject()).getRepositoryManager();
  RepositoryIndex index=repositoryManager.getIndex();
  VirtualFileFilter rootFilter=null;
  long[] classIds=index.getClassesByQualifiedName(qName,rootFilter);
  if (classIds.length == 0)   return null;
  RepositoryElementsManager repositoryElementsManager=JavaPsiFacadeEx.getInstanceEx(myManager.getProject()).getRepositoryElementsManager();
  VirtualFile bestFile=null;
  PsiClass bestClass=null;
  for (  long classId : classIds) {
    PsiClass aClass=(PsiClass)repositoryElementsManager.findOrCreatePsiElementById(classId);
    LOG.assertTrue(aClass != null,"null class returned while looking for : " + qName);
    LOG.assertTrue(aClass.isValid(),"class is not valid while looking for : " + qName);
    if (!aClass.isValid())     continue;
    final String qualifiedName=aClass.getQualifiedName();
    if (qualifiedName == null || !qualifiedName.equals(qName))     continue;
    PsiFile file=aClass.getContainingFile();
    if (file == null) {
      LOG.error("aClass=" + aClass);
      continue;
    }
    VirtualFile vFile=file.getVirtualFile();
    if (!fileIsInScope(scope,vFile))     continue;
    if (bestFile == null || scope.compare(vFile,bestFile) > 0) {
      bestFile=vFile;
      bestClass=aClass;
    }
  }
  return bestClass;
}
