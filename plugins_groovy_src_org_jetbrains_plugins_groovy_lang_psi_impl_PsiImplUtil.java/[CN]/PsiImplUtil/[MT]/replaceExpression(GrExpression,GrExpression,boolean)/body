{
  ASTNode oldNode=oldExpr.getNode();
  PsiElement oldParent=oldExpr.getParent();
  if (oldParent == null)   throw new PsiInvalidElementAccessException(oldExpr);
  ASTNode parentNode=oldParent.getNode();
  if (newExpr instanceof GrApplicationStatement && !(oldExpr instanceof GrApplicationStatement)) {
    GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(oldExpr.getProject());
    newExpr=factory.createMethodCallByAppCall(((GrApplicationStatement)newExpr));
  }
  if (removeUnnecessaryParentheses && oldParent instanceof GrParenthesizedExpression) {
    return ((GrExpression)oldParent).replaceWithExpression(newExpr,removeUnnecessaryParentheses);
  }
  GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(oldExpr.getProject());
  if (oldParent instanceof GrExpression && !(oldParent instanceof GrParenthesizedExpression)) {
    GrExpression parentExpr=(GrExpression)oldParent;
    int parentPriorityLevel=getExprPriorityLevel(parentExpr);
    int newPriorityLevel=getExprPriorityLevel(newExpr);
    if (parentPriorityLevel > newPriorityLevel) {
      newExpr=factory.createParenthesizedExpr(newExpr);
    }
 else     if (parentPriorityLevel == newPriorityLevel && parentPriorityLevel != 0) {
      if (parentExpr instanceof GrBinaryExpression) {
        GrBinaryExpression binaryExpression=(GrBinaryExpression)parentExpr;
        if (isNotAssociative(binaryExpression) && oldExpr.equals(binaryExpression.getRightOperand())) {
          newExpr=factory.createParenthesizedExpr(newExpr);
        }
      }
    }
  }
  ASTNode newNode=newExpr.getNode();
  parentNode.replaceChild(oldNode,newNode);
  return ((GrExpression)newNode.getPsi());
}
