{
  final String name1=superSignatureCandidate.getName();
  final String name2=subSignature.getName();
  if (!name1.equals(name2))   return false;
  final PsiType[] superTypes=superSignatureCandidate.getParameterTypes();
  final PsiType[] subTypes=subSignature.getParameterTypes();
  if (subTypes.length != superTypes.length)   return false;
  for (int i=0; i < subTypes.length - 1; i++) {
    PsiType superType=TypeConversionUtil.erasure(superTypes[i]);
    PsiType subType=TypeConversionUtil.erasure(subTypes[i]);
    if (superType.isAssignableFrom(subType))     return false;
  }
  if (superTypes.length > 0) {
    final PsiType lastSuperType=TypeConversionUtil.erasure(superTypes[superTypes.length - 1]);
    final PsiType lastSubType=TypeConversionUtil.erasure(subTypes[superTypes.length - 1]);
    if (lastSuperType instanceof PsiArrayType && !(lastSubType instanceof PsiArrayType)) {
      final PsiType componentType=((PsiArrayType)lastSuperType).getComponentType();
      if (!lastSubType.isConvertibleFrom(componentType))       return false;
    }
 else {
      if (!lastSuperType.isAssignableFrom(lastSubType))       return false;
    }
  }
  return true;
}
