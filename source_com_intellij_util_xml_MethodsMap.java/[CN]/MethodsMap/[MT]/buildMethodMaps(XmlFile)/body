{
  if (myFixedChildrenMethods != null)   return;
  myFixedChildrenMethods=new HashMap<Method,String>();
  myVariableChildrenMethods=new HashMap<Method,Pair<String,Class<? extends DomElement>>>();
  myFixedChildrenNames=new HashSet<String>();
  for (  Method method : myClass.getMethods()) {
    if (!isCoreMethod(method)) {
      final Class<?> returnType=method.getReturnType();
      if (DomElement.class.isAssignableFrom(returnType)) {
        final String qname=getSubTagName(method,file);
        if (qname != null) {
          myFixedChildrenMethods.put(method,qname);
          myFixedChildrenNames.add(qname);
        }
      }
      final Class<? extends DomElement> aClass=extractElementType(method.getGenericReturnType());
      if (aClass != null) {
        final String qname=getSubTagNameForCollection(method,file);
        if (qname != null) {
          myVariableChildrenMethods.put(method,new Pair<String,Class<? extends DomElement>>(qname,aClass));
        }
      }
    }
  }
}
