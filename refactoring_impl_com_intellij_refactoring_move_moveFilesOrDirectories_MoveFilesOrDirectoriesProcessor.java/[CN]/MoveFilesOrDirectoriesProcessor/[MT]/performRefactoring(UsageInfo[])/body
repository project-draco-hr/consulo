{
  try {
    for (    final PsiElement element : myElementsToMove) {
      if (element instanceof PsiDirectory) {
        MoveFilesOrDirectoriesUtil.doMoveDirectory((PsiDirectory)element,myNewParent);
      }
 else       if (element instanceof PsiFile) {
        MoveFilesOrDirectoriesUtil.doMoveFile((PsiFile)element,myNewParent);
      }
      final RefactoringElementListener elementListener=getTransaction().getElementListener(element);
      elementListener.elementMoved(element);
    }
    for (    UsageInfo usageInfo : usages) {
      final MyUsageInfo info=(MyUsageInfo)usageInfo;
      final PsiElement element=myElementsToMove[info.myIndex];
      final PsiElement usageElement=info.getElement();
      if (usageElement != null) {
        final PsiFile usageFile=usageElement.getContainingFile();
        final PsiFile psiFile=usageFile.getViewProvider().getPsi(usageFile.getViewProvider().getBaseLanguage());
        if (psiFile != null && psiFile.equals(element)) {
          continue;
        }
      }
      info.myReference.bindToElement(element);
    }
    if (myMoveCallback != null) {
      myMoveCallback.refactoringCompleted();
    }
  }
 catch (  IncorrectOperationException e) {
    final @NonNls String message=e.getMessage();
    final int index=(message != null) ? message.indexOf("java.io.IOException") : -1;
    if (index >= 0) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          Messages.showMessageDialog(myProject,message.substring(index + "java.io.IOException".length()),RefactoringBundle.message("error.title"),Messages.getErrorIcon());
        }
      }
);
    }
 else {
      LOG.error(e);
    }
  }
}
