{
  try {
    final int classDeclarationId=getClassDeclarationId(qName);
    if (classDeclarationId != UNKNOWN) {
      final int[] fieldIds=getFieldIds(classDeclarationId);
synchronized (myViewPool.getFieldDeclarationsLock()) {
        for (        int fieldId : fieldIds) {
          final FieldDeclarationView fieldDeclarationView=myViewPool.getFieldDeclarationView(fieldId);
          myViewPool.removeFieldDeclarationRecord(fieldDeclarationView);
        }
      }
      final int[] methodIds=getMethodIds(classDeclarationId);
synchronized (myViewPool.getMethodDeclarationsLock()) {
        for (        int methodId : methodIds) {
          final MethodDeclarationView methodDeclarationView=myViewPool.getMethodDeclarationView(methodId);
          myViewPool.removeMethodDeclarationRecord(methodDeclarationView);
        }
      }
synchronized (myViewPool.getClassDeclarationsLock()) {
        myViewPool.removeClassDeclarationRecord(myViewPool.getClassDeclarationView(classDeclarationId));
        getQNameToClassDeclarationIdMap().remove(qName);
      }
    }
    final int classId=getClassId(qName);
    if (classId != UNKNOWN) {
synchronized (myViewPool.getClassInfosLock()) {
        final ClassInfoView classInfoView=myViewPool.getClassInfoView(classId);
        myViewPool.removeClassInfoRecord(classInfoView);
        getQNameToClassInfoIdMap().remove(qName);
      }
    }
  }
 catch (  Throwable e) {
    throw new CacheCorruptedException(e);
  }
}
