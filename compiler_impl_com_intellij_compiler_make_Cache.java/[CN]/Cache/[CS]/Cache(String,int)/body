{
  myStorePath=storePath;
  new File(storePath).mkdirs();
  myQNameToClassInfoMap=new CachedPersistentHashMap<StorageClassId,ClassInfo>(getOrCreateFile("classes"),ClassIdKeyDescriptor.INSTANCE,new DataExternalizer<ClassInfo>(){
    public void save(    DataOutput out,    ClassInfo value) throws IOException {
      value.save(out);
    }
    public ClassInfo read(    DataInput in) throws IOException {
      return new ClassInfo(in);
    }
  }
,cacheSize * 2);
  myQNameToReferencersMap=new CompilerDependencyStorage<StorageClassId>(getOrCreateFile("bdeps"),GenericIdKeyDescriptor.INSTANCE,cacheSize);
  myQNameToReferencedClassesMap=new CompilerDependencyStorage<StorageClassId>(getOrCreateFile("fdeps"),ClassIdKeyDescriptor.INSTANCE,cacheSize);
  myQNameToSubclassesMap=new CompilerDependencyStorage<StorageClassId>(getOrCreateFile("subclasses"),ClassIdKeyDescriptor.INSTANCE,cacheSize);
  myRemoteQNames=new PersistentHashMap<StorageClassId,Boolean>(getOrCreateFile("remote"),ClassIdKeyDescriptor.INSTANCE,new DataExternalizer<Boolean>(){
    public void save(    DataOutput out,    Boolean value) throws IOException {
      out.writeBoolean(value.booleanValue());
    }
    public Boolean read(    DataInput in) throws IOException {
      return in.readBoolean();
    }
  }
,cacheSize);
}
