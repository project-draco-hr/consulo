{
  final FindUsagesOptions findClassOptions=FindUsagesHandler.createFindUsagesOptions(project);
  final FindUsagesOptions findMethodOptions=FindUsagesHandler.createFindUsagesOptions(project);
  findMethodOptions.isCheckDeepInheritance=false;
  findMethodOptions.isIncludeSubpackages=false;
  findMethodOptions.isSearchForTextOccurences=false;
  final FindUsagesOptions findPackageOptions=FindUsagesHandler.createFindUsagesOptions(project);
  final FindUsagesOptions findThrowOptions=FindUsagesHandler.createFindUsagesOptions(project);
  final FindUsagesOptions findVariableOptions=FindUsagesHandler.createFindUsagesOptions(project);
  findVariableOptions.isCheckDeepInheritance=false;
  findVariableOptions.isIncludeSubpackages=false;
  findVariableOptions.isSearchForTextOccurences=false;
  ((FindManagerImpl)FindManager.getInstance(project)).getFindUsagesManager().registerFindUsagesHandler(new FindUsagesHandlerFactory(){
    public boolean canFindUsages(    final PsiElement element){
      return true;
    }
    public FindUsagesHandler createFindUsagesHandler(    final PsiElement element,    final boolean forHighlightUsages){
      if (element instanceof PsiDirectory) {
        final PsiPackage psiPackage=JavaDirectoryService.getInstance().getPackage((PsiDirectory)element);
        return psiPackage == null ? null : new JavaFindUsagesHandler(psiPackage,findClassOptions,findMethodOptions,findPackageOptions,findThrowOptions,findVariableOptions);
      }
      if (element instanceof PsiMethod && !forHighlightUsages) {
        final PsiMethod[] methods=SuperMethodWarningUtil.checkSuperMethods((PsiMethod)element,JavaFindUsagesHandler.ACTION_STRING);
        if (methods.length > 1) {
          return new JavaFindUsagesHandler(element,methods,findClassOptions,findMethodOptions,findPackageOptions,findThrowOptions,findVariableOptions);
        }
        if (methods.length == 1) {
          return new JavaFindUsagesHandler(methods[0],findClassOptions,findMethodOptions,findPackageOptions,findThrowOptions,findVariableOptions);
        }
        return null;
      }
      return new JavaFindUsagesHandler(element,findClassOptions,findMethodOptions,findPackageOptions,findThrowOptions,findVariableOptions);
    }
  }
);
}
