{
  HashSet<VirtualFile> unmerged=new HashSet<VirtualFile>();
  String rootPath=root.getPath();
  GitRepository repository=myRepositoryManager.getRepositoryForRoot(root);
  if (repository == null) {
    LOG.error("Repository not found for root " + root);
    return Collections.emptyList();
  }
  GitCommandResult result=myGit.getUnmergedFiles(repository);
  if (!result.success()) {
    throw new VcsException(result.getErrorOutputAsJoinedString());
  }
  String output=StringUtil.join(result.getOutput(),"\n");
  LocalFileSystem lfs=myPlatformFacade.getLocalFileSystem();
  for (StringScanner s=new StringScanner(output); s.hasMoreData(); ) {
    if (s.isEol()) {
      s.nextLine();
      continue;
    }
    s.boundedToken('\t');
    final String relative=s.line();
    String path=rootPath + "/" + GitUtil.unescapePath(relative);
    VirtualFile file=lfs.refreshAndFindFileByPath(path);
    if (file != null) {
      file.refresh(false,false);
      unmerged.add(file);
    }
  }
  if (unmerged.size() == 0) {
    return Collections.emptyList();
  }
 else {
    ArrayList<VirtualFile> rc=new ArrayList<VirtualFile>(unmerged.size());
    rc.addAll(unmerged);
    Collections.sort(rc,GitUtil.VIRTUAL_FILE_COMPARATOR);
    return rc;
  }
}
