{
  try {
    final Collection<VirtualFile> initiallyUnmergedFiles=getUnmergedFiles(myRoots);
    if (initiallyUnmergedFiles.isEmpty()) {
      LOG.info("merge: no unmerged files");
      return mergeDialogInvokedFromNotification ? true : proceedIfNothingToMerge();
    }
 else {
      showMergeDialog(initiallyUnmergedFiles);
      final Collection<VirtualFile> unmergedFilesAfterResolve=getUnmergedFiles(myRoots);
      if (unmergedFilesAfterResolve.isEmpty()) {
        LOG.info("merge no more unmerged files");
        return mergeDialogInvokedFromNotification ? true : proceedAfterAllMerged();
      }
 else {
        LOG.info("mergeFiles unmerged files remain: " + unmergedFilesAfterResolve);
        if (mergeDialogInvokedFromNotification) {
          notifyUnresolvedRemainAfterNotification();
        }
 else {
          notifyUnresolvedRemain();
        }
      }
    }
  }
 catch (  VcsException e) {
    if (((GitVcs)myPlatformFacade.getVcs(myProject)).getExecutableValidator().checkExecutableAndNotifyIfNeeded()) {
      notifyException(e);
    }
  }
  return false;
}
