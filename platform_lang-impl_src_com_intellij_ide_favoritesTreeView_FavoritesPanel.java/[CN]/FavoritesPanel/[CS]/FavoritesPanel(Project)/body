{
  myProject=project;
  myViewPanel=new FavoritesTreeViewPanel(myProject);
  myTree=myViewPanel.getTree();
  myTreeBuilder=myViewPanel.getBuilder();
  if (myTreeBuilder != null) {
    Disposer.register(myProject,myTreeBuilder);
    myTreeBuilder.setNodeDescriptorComparator(new Comparator<NodeDescriptor>(){
      @Override public int compare(      NodeDescriptor nd1,      NodeDescriptor nd2){
        if (nd1 instanceof FavoritesTreeNodeDescriptor && nd2 instanceof FavoritesTreeNodeDescriptor) {
          final AbstractTreeNode e1=((FavoritesTreeNodeDescriptor)nd1).getElement();
          final AbstractTreeNode e2=((FavoritesTreeNodeDescriptor)nd2).getElement();
          return e1 == null || e2 == null ? 0 : e1.getName().compareToIgnoreCase(e2.getName());
        }
        return 0;
      }
    }
);
  }
  myTreeStructure=myViewPanel.getFavoritesTreeStructure();
  setupDnD();
}
