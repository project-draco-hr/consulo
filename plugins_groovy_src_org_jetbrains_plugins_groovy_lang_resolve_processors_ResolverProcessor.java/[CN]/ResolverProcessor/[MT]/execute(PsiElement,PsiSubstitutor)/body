{
  if (myResolveTargetKinds.contains(ResolveUtil.getResolveKind(element))) {
    PsiNamedElement namedElement=(PsiNamedElement)element;
    if (namedElement instanceof PsiMethod && ((PsiMethod)namedElement).isConstructor())     return true;
    if (myTypeArguments.length > 0 && namedElement instanceof PsiClass) {
      substitutor=substitutor.putAll((PsiClass)namedElement,myTypeArguments);
    }
    boolean isAccessible=isAccessible(namedElement);
    boolean isStaticsOK=isStaticsOK(namedElement);
    myCandidates.add(new GroovyResolveResultImpl(namedElement,myCurrentFileResolveContext,substitutor,isAccessible,isStaticsOK));
    return myForCompletion || !isAccessible;
  }
  return true;
}
