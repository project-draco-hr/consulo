def _parsechangeset(self, data, rev):
    for l in data:
        l = l.strip()
        if (l.startswith('A') and (not l.startswith('A/'))):
            file = self._stripbasepath(l[1:].strip())
            if (not self._exclude(file)):
                self.changes[rev].add_files.append(file)
        elif (l.startswith('D') and (not l.startswith('D/'))):
            file = self._stripbasepath(l[1:].strip())
            if (not self._exclude(file)):
                self.changes[rev].del_files.append(file)
        elif l.startswith('Mb'):
            file = self._stripbasepath(l[2:].strip())
            if (not self._exclude(file)):
                self.changes[rev].mod_files.append(file)
        elif l.startswith('M->'):
            file = self._stripbasepath(l[3:].strip())
            if (not self._exclude(file)):
                self.changes[rev].mod_files.append(file)
        elif l.startswith('M'):
            file = self._stripbasepath(l[1:].strip())
            if (not self._exclude(file)):
                self.changes[rev].mod_files.append(file)
        elif l.startswith('=>'):
            files = l[2:].strip().split(' ')
            if (len(files) == 1):
                files = l[2:].strip().split('\t')
            src = self._stripbasepath(files[0])
            dst = self._stripbasepath(files[1])
            if ((not self._exclude(src)) and (not self._exclude(dst))):
                self.changes[rev].ren_files[src] = dst
        elif l.startswith('ch'):
            file = self._stripbasepath(l[2:].strip())
            if (not self._exclude(file)):
                self.changes[rev].mod_files.append(file)
        elif l.startswith('/>'):
            dirs = l[2:].strip().split(' ')
            if (len(dirs) == 1):
                dirs = l[2:].strip().split('\t')
            src = self._stripbasepath(dirs[0])
            dst = self._stripbasepath(dirs[1])
            if ((not self._exclude(src)) and (not self._exclude(dst))):
                self.changes[rev].ren_dirs[src] = dst
