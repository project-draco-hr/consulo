def __init__(self, ui, path, rev=None):
    super(gnuarch_source, self).__init__(ui, path, rev=rev)
    if (not os.path.exists(os.path.join(path, '{arch}'))):
        raise NoRepo((_('%s does not look like a GNU Arch repository') % path))
    self.execmd = None
    if util.find_exe('baz'):
        self.execmd = 'baz'
    elif util.find_exe('tla'):
        self.execmd = 'tla'
    else:
        raise util.Abort(_('cannot find a GNU Arch tool'))
    commandline.__init__(self, ui, self.execmd)
    self.path = os.path.realpath(path)
    self.tmppath = None
    self.treeversion = None
    self.lastrev = None
    self.changes = {}
    self.parents = {}
    self.tags = {}
    self.modecache = {}
    self.catlogparser = Parser()
    self.locale = locale.getpreferredencoding()
    self.archives = []
