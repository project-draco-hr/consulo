{
  final HashMap<PsiTypeParameter,PsiTypeParameter> result=new HashMap<PsiTypeParameter,PsiTypeParameter>();
  for (  PsiTypeParameter classTypeParameter : PsiUtil.typeParametersIterable(targetClass)) {
    final PsiType substitution=substitutor.substitute(classTypeParameter);
    if (!(substitution instanceof PsiClassType))     return null;
    final PsiClass aClass=((PsiClassType)substitution).resolve();
    if (!(aClass instanceof PsiTypeParameter))     return null;
    final PsiTypeParameter methodTypeParameter=(PsiTypeParameter)aClass;
    if (methodTypeParameter.getOwner() != containingElement)     return null;
    if (result.keySet().contains(methodTypeParameter))     return null;
    result.put(methodTypeParameter,classTypeParameter);
  }
  return result;
}
