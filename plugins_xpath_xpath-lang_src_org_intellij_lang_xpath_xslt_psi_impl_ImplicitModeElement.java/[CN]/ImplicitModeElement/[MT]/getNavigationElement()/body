{
  if (myNavigationElement == null && myAttribute.isValid()) {
    final XmlTag tag=myAttribute.getParent();
    final Class[] allInterfaces=CompletionLists.getAllInterfaces(tag.getClass());
    myNavigationElement=(PsiElement)Proxy.newProxyInstance(getClass().getClassLoader(),allInterfaces,new InvocationHandler(){
      @SuppressWarnings({"StringEquality","AutoBoxing","AutoUnboxing"}) public Object invoke(      Object proxy,      Method method,      Object[] args) throws Throwable {
        try {
          final ImplicitModeElement nameElement=ImplicitModeElement.this;
          if (method.getName() == "navigate") {
            nameElement.navigate((Boolean)args[0]);
            return null;
          }
 else           if (method.getName() == "canNavigate") {
            return nameElement.canNavigate();
          }
 else           if (method.getName() == "getTextOffset") {
            return nameElement.getTextOffset();
          }
          return method.invoke(tag,args);
        }
 catch (        InvocationTargetException e1) {
          throw e1.getTargetException();
        }
      }
    }
);
  }
  return myAttribute.isValid() ? myNavigationElement : null;
}
