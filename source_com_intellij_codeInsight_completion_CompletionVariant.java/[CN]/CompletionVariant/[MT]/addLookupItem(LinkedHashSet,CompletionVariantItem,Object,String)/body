{
  LookupItem ret=LookupItemUtil.objectToLookupItem(completion);
  if (ret == null)   return null;
  if (getInsertHandler() != null) {
    ret.setAttribute(LookupItem.INSERT_HANDLER_ATTR,getInsertHandler());
    ret.setTailType(TailType.UNKNOWN);
  }
 else {
    ret.setTailType(element.myTailType);
  }
  final Iterator iter=myItemProperties.keySet().iterator();
  while (iter.hasNext()) {
    final Object key=iter.next();
    if (key == LookupItem.FORCE_SHOW_FQN_ATTR && ret.getObject() instanceof PsiClass) {
      String packageName=((PsiClass)(ret.getObject())).getQualifiedName();
      if (packageName != null && packageName.lastIndexOf('.') > 0)       packageName=packageName.substring(0,packageName.lastIndexOf('.'));
 else       packageName="";
      if (packageName.length() == 0) {
        packageName="default package";
      }
      ret.setAttribute(LookupItem.TAIL_TEXT_ATTR," (" + packageName + ")");
      ret.setAttribute(LookupItem.TAIL_TEXT_SMALL_ATTR,"");
    }
 else {
      if (completion instanceof PsiNamedElement && key == LookupItem.FORCE_QUALIFY) {
        final PsiNamedElement completionElement=(PsiNamedElement)completion;
        final PsiElement parent=completionElement.getParent();
        if (parent instanceof PsiClass) {
          final String className=((PsiClass)parent).getName();
          ret.setLookupString(className + "." + ret.getLookupString());
          ret.setAttribute(key,myItemProperties.get(key));
        }
      }
      ret.setAttribute(key,myItemProperties.get(key));
    }
  }
  final String lookupString=ret.getLookupString();
  if (CompletionUtil.checkName(lookupString,prefix,caseInsensitive)) {
    set.add(ret);
    return ret;
  }
  return null;
}
