{
  if (item.myCompletion instanceof ElementFilter) {
    final CompletionProcessor processor=new CompletionProcessor(prefix,position,(ElementFilter)item.myCompletion);
    if (reference instanceof PsiJavaReference) {
      ((PsiJavaReference)reference).processVariants(processor);
    }
 else {
      final Object[] completions=reference.getVariants();
      if (completions == null) {
        return;
      }
      for (int j=0; j < completions.length; j++) {
        if (completions[j] instanceof PsiElement) {
          processor.execute((PsiElement)completions[j],PsiSubstitutor.EMPTY);
        }
 else         if (completions[j] instanceof CandidateInfo) {
          final CandidateInfo info=((CandidateInfo)completions[j]);
          if (info.isValidResult())           processor.execute(info.getElement(),PsiSubstitutor.EMPTY);
        }
 else {
          addLookupItem(set,item,completions[j],prefix);
        }
      }
    }
    final Iterator resultIter=processor.getResults().iterator();
    while (resultIter != null && resultIter.hasNext()) {
      final CompletionElement comElement=(CompletionElement)resultIter.next();
      final LookupItem lookupItem=addLookupItem(set,item,comElement.getElement(),prefix);
      lookupItem.setAttribute(LookupItem.SUBSTITUTOR,comElement.getSubstitutor());
      if (comElement.getQualifier() != null) {
        CompletionUtil.setQualifierType(lookupItem,comElement.getQualifier());
      }
    }
  }
}
