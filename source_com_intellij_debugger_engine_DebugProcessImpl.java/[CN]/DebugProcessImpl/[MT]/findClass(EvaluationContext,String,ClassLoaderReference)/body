{
  try {
    DebuggerManagerThreadImpl.assertIsManagerThread();
    ReferenceType result=null;
    final VirtualMachineProxyImpl vmProxy=getVirtualMachineProxy();
    if (vmProxy == null) {
      throw new VMDisconnectedException();
    }
    List list=vmProxy.classesByName(className);
    for (Iterator it=list.iterator(); it.hasNext(); ) {
      ReferenceType refType=(ReferenceType)it.next();
      if (refType.isPrepared() && Comparing.equal(refType.classLoader(),classLoader)) {
        result=refType;
        break;
      }
    }
    if (result == null) {
      return loadClass((EvaluationContextImpl)evaluationContext,className,classLoader);
    }
 else {
      return result;
    }
  }
 catch (  InvocationException e) {
    throw EvaluateExceptionUtil.createEvaluateException(e);
  }
catch (  ClassNotLoadedException e) {
    throw EvaluateExceptionUtil.createEvaluateException(e);
  }
catch (  IncompatibleThreadStateException e) {
    throw EvaluateExceptionUtil.createEvaluateException(e);
  }
catch (  InvalidTypeException e) {
    throw EvaluateExceptionUtil.createEvaluateException(e);
  }
}
