{
  if (LOG.isDebugEnabled()) {
    LOG.debug("DO_STEP: creating step request for " + stepThread.getThreadReference());
  }
  deleteStepRequests(stepThread);
  EventRequestManager requestManager=getVirtualMachineProxy().eventRequestManager();
  StepRequest stepRequest=requestManager.createStepRequest(stepThread.getThreadReference(),StepRequest.STEP_LINE,depth);
  DebuggerSettings settings=DebuggerSettings.getInstance();
  if (!(hint != null && hint.isIgnoreFilters()) && depth == StepRequest.STEP_INTO) {
    if (settings.TRACING_FILTERS_ENABLED) {
      String currentClassName=getCurrentClassName(stepThread);
      if (currentClassName == null || !settings.isNameFiltered(currentClassName)) {
        ClassFilter[] filters=settings.getSteppingFilters();
        for (int idx=0; idx < filters.length; idx++) {
          if (filters[idx].isEnabled()) {
            stepRequest.addClassExclusionFilter(filters[idx].getPattern());
          }
        }
      }
    }
  }
  stepRequest.setSuspendPolicy(getSuspendPolicy());
  if (hint != null) {
    stepRequest.putProperty("hint",hint);
  }
  stepRequest.enable();
}
