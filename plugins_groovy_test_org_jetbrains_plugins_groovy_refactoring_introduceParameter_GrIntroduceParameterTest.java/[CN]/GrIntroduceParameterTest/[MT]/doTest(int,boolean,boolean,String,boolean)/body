{
  final String beforeGroovy=getTestName(false) + "Before.groovy";
  final String afterGroovy=getTestName(false) + "After.groovy";
  final String clazz=getTestName(false) + "MyClass.groovy";
  final String afterClazz=getTestName(false) + "MyClass_after.groovy";
  final boolean beforeExists=exists(beforeGroovy);
  if (beforeExists) {
    myFixture.copyFileToProject(beforeGroovy);
  }
  myFixture.configureByFile(clazz);
  execute(replaceFieldsWithGetters,removeUnusedParameters,declareFinal,conflicts,generateDelegate,getProject(),myFixture.getEditor(),myFixture.getFile());
  PostprocessReformattingAspect.getInstance(getProject()).doPostponedFormatting();
  myFixture.getEditor().getSelectionModel().removeSelection();
  if (beforeExists) {
    myFixture.checkResultByFile(beforeGroovy,afterGroovy,true);
  }
  if (exists(afterClazz)) {
    myFixture.checkResultByFile(afterClazz);
  }
  return true;
}
