{
  return new GrIntroduceParameterSettings(){
    @Override public boolean generateDelegate(){
      return generateDelegate;
    }
    @Override public TIntArrayList parametersToRemove(){
      if (removeUnusedParameters) {
        final TObjectIntHashMap<GrParameter> parametersToRemove=GroovyIntroduceParameterUtil.findParametersToRemove(context);
        TIntArrayList list=new TIntArrayList(parametersToRemove.size());
        for (        Object o : parametersToRemove.keys()) {
          list.add(parametersToRemove.get((GrParameter)o));
        }
        return list;
      }
      return new TIntArrayList(0);
    }
    @Override public int replaceFieldsWithGetters(){
      return replaceFieldsWithGetters;
    }
    @Override public boolean declareFinal(){
      return declareFinal;
    }
    @Override public boolean removeLocalVariable(){
      return false;
    }
    @Override public String getName(){
      return "anObject";
    }
    @Override public boolean replaceAllOccurrences(){
      return true;
    }
    @Override public PsiType getSelectedType(){
      PsiType type=context.getVar() == null ? context.getExpression().getType() : context.getVar().getDeclaredType();
      return TypesUtil.unboxPrimitiveTypeWrapper(type);
    }
  }
;
}
