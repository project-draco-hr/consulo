{
  myUpdateWarningAlarm.cancelAllRequests();
  myUpdateWarningAlarm.addRequest(new Runnable(){
    public void run(){
      final Graph<Chunk<ModifiableRootModel>> graph=ModuleCompilerUtil.toChunkGraph(myModulesConfigurator.createGraphGenerator());
      final Collection<Chunk<ModifiableRootModel>> chunks=graph.getNodes();
      String cycles="";
      int count=0;
      for (      Chunk<ModifiableRootModel> chunk : chunks) {
        final Set<ModifiableRootModel> modules=chunk.getNodes();
        String cycle="";
        for (        ModifiableRootModel model : modules) {
          cycle+=", " + model.getModule().getName();
        }
        if (modules.size() > 1) {
          @NonNls final String br="<br>&nbsp;&nbsp;&nbsp;&nbsp;";
          cycles+=br + (++count) + ". "+ cycle.substring(2);
        }
      }
      @NonNls final String leftBrace="<html>";
      @NonNls final String rightBrace="</html>";
      String warningMessage=leftBrace + (count > 0 ? ProjectBundle.message("module.circular.dependency.warning",cycles,count) : "") + rightBrace;
      myWarningLabel.setIcon(count > 0 ? Messages.getWarningIcon() : null);
      myWarningLabel.setText(warningMessage);
      myWarningLabel.repaint();
    }
  }
,300,ModalityState.current());
}
