{
  if (myInLibrary)   return false;
  if (!myDeadCodeEnabled)   return false;
  if (myDeadCodeInspection.isEntryPoint(member))   return false;
  String name=member.getName();
  if (name == null)   return false;
  SearchScope useScope=member.getUseScope();
  if (!(useScope instanceof GlobalSearchScope))   return false;
  final int[] count={0};
  GlobalSearchScope scope=(GlobalSearchScope)useScope;
  if (member instanceof PsiClass)   scope=scope.uniteWith(GlobalSearchScope.projectScope(myProject));
  CacheManager cacheManager=((PsiManagerEx)myFile.getManager()).getCacheManager();
  if (!cacheManager.processFilesWithWord(new Processor<PsiFile>(){
    public boolean process(    PsiFile file){
      if (file == myFile)       return true;
      count[0]++;
      return count[0] <= 10;
    }
  }
,name,UsageSearchContext.ANY,scope,true))   return false;
  if (count[0] == 0 && !canbeReferencedViaWeirdNames(member))   return true;
  Query<PsiReference> query=member instanceof PsiMethod ? MethodReferencesSearch.search((PsiMethod)member,scope,true) : ReferencesSearch.search(member,scope,true);
  return query.findFirst() == null;
}
