{
  if (myInLibrary)   return false;
  if (!myDeadCodeEnabled)   return false;
  if (myDeadCodeInspection.isEntryPoint(member))   return false;
  String name=member.getName();
  if (name == null)   return false;
  SearchScope useScope=member.getUseScope();
  if (!(useScope instanceof GlobalSearchScope))   return false;
  GlobalSearchScope scope=(GlobalSearchScope)useScope;
  if (member instanceof PsiClass)   scope=scope.uniteWith(GlobalSearchScope.projectScope(myProject));
  PsiSearchHelper.SearchCostResult cheapEnough=myFile.getManager().getSearchHelper().isCheapEnoughToSearch(name,scope,myFile,progress);
  if (cheapEnough == PsiSearchHelper.SearchCostResult.TOO_MANY_OCCURRENCES)   return false;
  if (cheapEnough == PsiSearchHelper.SearchCostResult.ZERO_OCCURRENCES && !canbeReferencedViaWeirdNames(member))   return true;
  Query<PsiReference> query=member instanceof PsiMethod ? MethodReferencesSearch.search((PsiMethod)member,scope,true) : ReferencesSearch.search(member,scope,true);
  return query.findFirst() == null;
}
