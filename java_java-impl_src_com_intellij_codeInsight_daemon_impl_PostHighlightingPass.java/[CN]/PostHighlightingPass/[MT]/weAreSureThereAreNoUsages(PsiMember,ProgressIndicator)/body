{
  if (myInLibrary)   return false;
  if (!myDeadCodeEnabled)   return false;
  if (myDeadCodeInspection.isEntryPoint(member))   return false;
  String name=member.getName();
  if (name == null)   return false;
  SearchScope useScope=member.getUseScope();
  if (!(useScope instanceof GlobalSearchScope))   return false;
  GlobalSearchScope scope=(GlobalSearchScope)useScope;
  if (member instanceof PsiClass)   scope=scope.uniteWith(GlobalSearchScope.projectScope(myProject));
  PsiSearchHelper.SearchCostResult cheapEnough=PsiSearchHelper.SERVICE.getInstance(myFile.getProject()).isCheapEnoughToSearch(name,scope,myFile,progress);
  if (cheapEnough == PsiSearchHelper.SearchCostResult.TOO_MANY_OCCURRENCES)   return false;
  if (cheapEnough == PsiSearchHelper.SearchCostResult.ZERO_OCCURRENCES) {
    if (member instanceof PsiEnumConstant) {
      return checkEnumValuesUsages(member,progress);
    }
    if (!canbeReferencedViaWeirdNames(member))     return true;
  }
  FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(myProject)).getFindUsagesManager();
  boolean used=findUsagesManager.isUsed(member,scope);
  if (!used && member instanceof PsiEnumConstant) {
    return checkEnumValuesUsages(member,progress);
  }
  return !used;
}
