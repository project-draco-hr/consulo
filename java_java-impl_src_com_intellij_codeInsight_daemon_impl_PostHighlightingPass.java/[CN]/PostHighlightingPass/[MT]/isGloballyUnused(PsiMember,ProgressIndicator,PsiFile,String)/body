{
  if (name == null)   return false;
  SearchScope useScope=member.getUseScope();
  if (!(useScope instanceof GlobalSearchScope))   return false;
  GlobalSearchScope scope=(GlobalSearchScope)useScope;
  Project project=member.getProject();
  if (member instanceof PsiClass)   scope=GlobalSearchScope.projectScope(project).uniteWith(scope);
  PsiSearchHelper.SearchCostResult cheapEnough=PsiSearchHelper.SERVICE.getInstance(project).isCheapEnoughToSearch(name,scope,fileToIgnoreOccurrencesIn,progress);
  if (cheapEnough == PsiSearchHelper.SearchCostResult.TOO_MANY_OCCURRENCES)   return false;
  if (cheapEnough == PsiSearchHelper.SearchCostResult.ZERO_OCCURRENCES) {
    if (!canBeReferencedViaWeirdNames(member))     return true;
  }
  FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(project)).getFindUsagesManager();
  FindUsagesHandler handler=new JavaFindUsagesHandler(member,new JavaFindUsagesHandlerFactory(project));
  FindUsagesOptions findUsagesOptions=handler.getFindUsagesOptions();
  findUsagesOptions.searchScope=scope;
  return !findUsagesManager.isUsed(member,findUsagesOptions);
}
