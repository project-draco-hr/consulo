{
  if (!isClassUnused(aClass))   return null;
  String element="classes";
  if (aClass.getContainingClass() != null && aClass.hasModifierProperty(PsiModifier.PRIVATE)) {
    String pattern=aClass.isInterface() ? "private.inner.interface.is.not.used" : "private.inner.class.is.not.used";
    return formatUnusedSymbolHighlightInfo(pattern,aClass,element);
  }
  if (aClass.getParent() instanceof PsiDeclarationStatement) {
    return formatUnusedSymbolHighlightInfo("local.class.is.not.used",aClass,element);
  }
  if (aClass instanceof PsiTypeParameter) {
    return formatUnusedSymbolHighlightInfo("type.parameter.is.not.used",aClass,element);
  }
  return formatUnusedSymbolHighlightInfo("class.is.not.used",aClass,element);
}
