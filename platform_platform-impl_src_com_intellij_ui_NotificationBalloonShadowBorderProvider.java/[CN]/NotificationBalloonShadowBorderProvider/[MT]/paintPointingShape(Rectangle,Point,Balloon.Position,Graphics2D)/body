{
  int x, y, length;
  if (position == Balloon.Position.above) {
    length=INSETS.bottom;
    x=pointTarget.x;
    y=bounds.y + bounds.height + length;
  }
 else   if (position == Balloon.Position.below) {
    length=INSETS.top;
    x=pointTarget.x;
    y=bounds.y - length;
  }
 else   if (position == Balloon.Position.atRight) {
    length=INSETS.left;
    x=bounds.x - length;
    y=pointTarget.y;
  }
 else {
    length=INSETS.right;
    x=bounds.x + bounds.width + length;
    y=pointTarget.y;
  }
  Polygon p=new Polygon();
  p.addPoint(x,y);
  length+=2;
  if (position == Balloon.Position.above) {
    p.addPoint(x - length,y - length);
    p.addPoint(x + length,y - length);
  }
 else   if (position == Balloon.Position.below) {
    p.addPoint(x - length,y + length);
    p.addPoint(x + length,y + length);
  }
 else   if (position == Balloon.Position.atRight) {
    p.addPoint(x + length,y - length);
    p.addPoint(x + length,y + length);
  }
 else {
    p.addPoint(x - length,y - length);
    p.addPoint(x - length,y + length);
  }
  g.setColor(myFillColor);
  g.fillPolygon(p);
  g.setColor(myBorderColor);
  length-=2;
  if (position == Balloon.Position.above) {
    g.drawLine(x,y,x - length,y - length);
    g.drawLine(x,y,x + length,y - length);
  }
 else   if (position == Balloon.Position.below) {
    g.drawLine(x,y,x - length,y + length);
    g.drawLine(x,y,x + length,y + length);
  }
 else   if (position == Balloon.Position.atRight) {
    g.drawLine(x,y,x + length,y - length);
    g.drawLine(x,y,x + length,y + length);
  }
 else {
    g.drawLine(x,y,x - length,y - length);
    g.drawLine(x,y,x - length,y + length);
  }
}
