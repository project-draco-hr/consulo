{
  myProject=project;
  CompilerConfigurationImpl compilerConfiguration=(CompilerConfigurationImpl)CompilerConfiguration.getInstance(project);
  final FileChooserDescriptor descriptor=new FileChooserDescriptor(true,true,false,false,false,true);
  for (  LogicalRoot contentSourceRoot : LogicalRootsManager.getLogicalRootsManager(myProject).getLogicalRoots()) {
    descriptor.addRoot(contentSourceRoot.getVirtualFile());
  }
  myExcludedEntriesConfigurable=new ExcludedEntriesConfigurable(project,descriptor,compilerConfiguration.getExcludedEntriesConfiguration()){
    public void apply(){
      super.apply();
      FileStatusManager.getInstance(myProject).fileStatusesChanged();
    }
  }
;
  final JComponent exludedPanel=myExcludedEntriesConfigurable.createComponent();
  exludedPanel.setBorder(BorderFactory.createCompoundBorder(IdeBorderFactory.createTitledBorder(CompilerBundle.message("label.group.exclude.from.compile")),BorderFactory.createEmptyBorder(2,2,2,2)));
  myExcludeTablePanel.setLayout(new BorderLayout());
  myExcludeTablePanel.add(exludedPanel,BorderLayout.CENTER);
  myTabbedPanePanel.setLayout(new BorderLayout());
  myJavaCompilersTab=new JavaCompilersTab(project,compilerConfiguration.getRegisteredJavaCompilers(),compilerConfiguration.getDefaultCompiler());
  final TabbedPaneWrapper tabbedPane=new TabbedPaneWrapper();
  tabbedPane.addTab(CompilerBundle.message("java.compiler.description"),myJavaCompilersTab.createComponent());
  myRmicConfigurable=new RmicConfigurable(RmicSettings.getInstance(project));
  tabbedPane.addTab(CompilerBundle.message("rmi.compiler.description"),myRmicConfigurable.createComponent());
  myTabbedPanePanel.add(tabbedPane.getComponent(),BorderLayout.CENTER);
  ButtonGroup deployGroup=new ButtonGroup();
  deployGroup.add(myShowDialog);
  deployGroup.add(myDeploy);
  deployGroup.add(myDoNotDeploy);
}
