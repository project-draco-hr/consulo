{
  myProject=project;
  CompilerConfigurationImpl compilerConfiguration=(CompilerConfigurationImpl)CompilerConfiguration.getInstance(project);
  final FileChooserDescriptor descriptor=new FileChooserDescriptor(true,true,false,false,false,true);
  myExcludedEntriesConfigurable=new ExcludedEntriesConfigurable(project,descriptor,compilerConfiguration.getExcludedEntriesConfiguration()){
    public void apply(){
      super.apply();
      FileStatusManager.getInstance(myProject).fileStatusesChanged();
    }
  }
;
  final JComponent exludedPanel=myExcludedEntriesConfigurable.createComponent();
  exludedPanel.setBorder(BorderFactory.createCompoundBorder(IdeBorderFactory.createTitledBorder(CompilerBundle.message("label.group.exclude.from.compile")),BorderFactory.createEmptyBorder(2,2,2,2)));
  myExcludeTablePanel.setLayout(new BorderLayout());
  myExcludeTablePanel.add(exludedPanel,BorderLayout.CENTER);
  myTabbedPanePanel.setLayout(new BorderLayout());
  final TabbedPaneWrapper tabbedPane=new TabbedPaneWrapper();
  myCompilerConfigurables=new ArrayList<Configurable>();
  final CompilerSettingsFactory[] factories=Extensions.getExtensions(CompilerSettingsFactory.EP_NAME,project);
  if (factories.length > 0) {
    for (    CompilerSettingsFactory factory : factories) {
      myCompilerConfigurables.add(factory.create(project));
    }
    Collections.sort(myCompilerConfigurables,new Comparator<Configurable>(){
      public int compare(      final Configurable o1,      final Configurable o2){
        return Comparing.compare(o1.getDisplayName(),o2.getDisplayName());
      }
    }
);
  }
  myCompilerConfigurables.add(0,new RmicConfigurable(RmicSettings.getInstance(project)));
  myCompilerConfigurables.add(0,new JavaCompilersTab(project,compilerConfiguration.getRegisteredJavaCompilers(),compilerConfiguration.getDefaultCompiler()));
  for (  Configurable configurable : myCompilerConfigurables) {
    tabbedPane.addTab(configurable.getDisplayName(),configurable.createComponent());
  }
  myTabbedPanePanel.add(tabbedPane.getComponent(),BorderLayout.CENTER);
  ButtonGroup deployGroup=new ButtonGroup();
  deployGroup.add(myShowDialog);
  deployGroup.add(myDeploy);
  deployGroup.add(myDoNotDeploy);
}
