{
  checkConsistency();
  final Container splitter=myPanel.getParent();
  if (!(splitter instanceof Splitter))   return;
  EditorWithProviderComposite editorToSelect=getSelectedEditor();
  final EditorWindow[] siblings=findSiblings();
  final JPanel parent=(JPanel)splitter.getParent();
  for (  EditorWindow eachSibling : siblings) {
    final EditorWithProviderComposite selected=eachSibling.getSelectedEditor();
    if (editorToSelect == null) {
      editorToSelect=selected;
    }
  }
  for (  final EditorWindow sibling : siblings) {
    final EditorWithProviderComposite[] siblingEditors=sibling.getEditors();
    for (    final EditorWithProviderComposite siblingEditor : siblingEditors) {
      if (editorToSelect == null) {
        editorToSelect=siblingEditor;
      }
      processSiblingEditor(siblingEditor);
    }
    LOG.assertTrue(sibling != this);
    sibling.dispose();
  }
  parent.remove(splitter);
  if (myTabbedPane != null) {
    parent.add(myTabbedPane.getComponent(),BorderLayout.CENTER);
  }
 else {
    parent.add(myPanel.getComponent(0),BorderLayout.CENTER);
  }
  parent.revalidate();
  myPanel=parent;
  if (editorToSelect != null) {
    setSelectedEditor(editorToSelect,true);
  }
  myOwner.setCurrentWindow(this,false);
}
