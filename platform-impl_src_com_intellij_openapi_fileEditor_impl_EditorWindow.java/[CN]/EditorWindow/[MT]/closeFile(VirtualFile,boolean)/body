{
  final FileEditorManagerImpl editorManager=getManager();
  editorManager.runChange(new Runnable(){
    public void run(){
      try {
        final List<EditorWithProviderComposite> editors=editorManager.getEditorComposites(file);
        if (editors.isEmpty())         return;
        final EditorWithProviderComposite editor=findFileComposite(file);
        if (myTabbedPane != null) {
          final int componentIndex=findComponentIndex(editor.getComponent());
          if (componentIndex >= 0) {
            final int indexToSelect=calcIndexToSelect(file,componentIndex);
            myTabbedPane.removeTabAt(componentIndex,indexToSelect).doWhenDone(new Runnable(){
              public void run(){
                editorManager.disposeComposite(editor);
              }
            }
);
          }
        }
 else {
          myPanel.removeAll();
          editorManager.disposeComposite(editor);
        }
        if (unsplit && getTabCount() == 0) {
          unsplit();
        }
        myPanel.revalidate();
        if (myTabbedPane == null) {
          myPanel.repaint();
        }
      }
  finally {
        final FileEditorManagerListener publisher=editorManager.getProject().getMessageBus().syncPublisher(FileEditorManagerListener.FILE_EDITOR_MANAGER);
        publisher.fileClosed(editorManager,file);
      }
    }
  }
);
}
