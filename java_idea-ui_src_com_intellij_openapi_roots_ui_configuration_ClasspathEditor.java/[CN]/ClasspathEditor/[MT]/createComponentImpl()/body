{
  myPanel=new ClasspathPanel(getState());
  myPanel.addListener(new OrderPanelListener(){
    public void entryMoved(){
      flushChangesToModel();
    }
  }
);
  final JPanel panel=new JPanel(new BorderLayout());
  panel.setBorder(BorderFactory.createEmptyBorder(6,6,6,6));
  panel.add(myPanel,BorderLayout.CENTER);
  final ModuleJdkConfigurable jdkConfigurable=new ModuleJdkConfigurable(this,ProjectStructureConfigurable.getInstance(myProject).getProjectJdksModel()){
    @Override protected ModifiableRootModel getRootModel(){
      return getState().getRootModel();
    }
  }
;
  panel.add(jdkConfigurable.createComponent(),BorderLayout.NORTH);
  jdkConfigurable.reset();
  registerDisposable(jdkConfigurable);
  List<ClasspathStorageProvider> providers=ClasspathStorage.getProviders();
  if (providers.size() > 1) {
    myClasspathFormatPanel=new ClasspathFormatPanel(providers);
    panel.add(myClasspathFormatPanel,BorderLayout.SOUTH);
  }
  return panel;
}
