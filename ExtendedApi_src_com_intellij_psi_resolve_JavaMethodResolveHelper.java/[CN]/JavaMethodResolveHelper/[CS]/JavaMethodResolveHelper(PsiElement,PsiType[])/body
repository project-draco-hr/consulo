{
  myParameterTypes=parameterTypes;
  final PsiConflictResolver resolver=parameterTypes == null ? DuplicateConflictResolver.INSTANCE : new JavaMethodsConflictResolver(argumentList,parameterTypes);
  myProcessor=new MethodResolverProcessor(argumentList,new PsiConflictResolver[]{resolver}){
    protected MethodCandidateInfo createCandidateInfo(    final PsiMethod method,    final PsiSubstitutor substitutor,    final boolean staticProblem,    final boolean accessible){
      return new MethodCandidateInfo(method,substitutor,!accessible,staticProblem,argumentList,myCurrentFileContext,parameterTypes,PsiType.EMPTY_ARRAY);
    }
    @Override protected boolean isAccepted(    final PsiMethod candidate){
      return !candidate.isConstructor();
    }
  }
;
}
