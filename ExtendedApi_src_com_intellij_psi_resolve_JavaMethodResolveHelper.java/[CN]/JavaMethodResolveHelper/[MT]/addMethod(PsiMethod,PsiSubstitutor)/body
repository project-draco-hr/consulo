{
  final MethodSignature signature=method.getSignature(substitutor);
  final PsiMethod psiMethod=myMethods.get(signature);
  if (psiMethod != null) {
    for (    final MethodSignatureBackedByPsiMethod methodSignature : SuperMethodsSearch.search(psiMethod,psiMethod.getContainingClass(),true,false).findAll()) {
      if (methodSignature.equals(signature))       return;
    }
  }
  if (myParameterTypes != null) {
    MyApplicability applicability=getApplicability(method,myParameterTypes);
    if (applicability.compareTo(myApplicability) > 0) {
      myMethods.clear();
      myMethods.put(signature,method);
      myApplicability=applicability;
    }
 else     if (applicability == myApplicability) {
      myMethods.put(signature,method);
    }
  }
 else {
    myMethods.put(signature,method);
  }
}
