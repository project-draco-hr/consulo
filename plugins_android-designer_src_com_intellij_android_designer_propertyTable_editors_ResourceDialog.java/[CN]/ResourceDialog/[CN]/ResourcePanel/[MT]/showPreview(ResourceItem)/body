{
  CardLayout layout=(CardLayout)myPreviewPanel.getLayout();
  if (element == null || element.getGroup().getType() == ResourceType.ID) {
    layout.show(myPreviewPanel,NONE);
    return;
  }
  try {
    VirtualFile file=element.getFile();
    if (file == null) {
      String value=element.getPreviewString();
      if (value == null) {
        String[] values=element.getPreviewStrings();
        if (values == null) {
          long time=System.currentTimeMillis();
          List<ResourceElement> resources=myManager.findValueResources(element.getGroup().getType().getName(),element.toString());
          if (ApplicationManagerEx.getApplicationEx().isInternal()) {
            System.out.println("Time: " + (System.currentTimeMillis() - time));
          }
          int size=resources.size();
          if (size == 1) {
            value=getResourceElementValue(resources.get(0));
            element.setPreviewString(value);
          }
 else           if (size > 1) {
            values=new String[size];
            String[] tabNames=new String[size];
            for (int i=0; i < size; i++) {
              ResourceElement resource=resources.get(i);
              values[i]=getResourceElementValue(resource);
              PsiDirectory directory=resource.getXmlTag().getContainingFile().getParent();
              String tabName=directory == null ? "unknown-" + i : directory.getName();
              tabNames[i]=tabName.substring(tabName.indexOf('-') + 1);
            }
            element.setPreviewStrings(values,tabNames);
          }
 else {
            layout.show(myPreviewPanel,NONE);
            return;
          }
        }
        if (values != null) {
          int selectedIndex=myTabbedPane.getSelectedIndex();
          myTabbedPane.removeAll();
          String[] tabNames=element.getTabNames();
          if (selectedIndex == -1) {
            for (int i=0; i < tabNames.length; i++) {
              if (tabNames[i].startsWith("en")) {
                selectedIndex=i;
                break;
              }
            }
          }
          for (int i=0; i < tabNames.length; i++) {
            JTextArea textArea=new JTextArea(5,20);
            textArea.setText(values[i]);
            textArea.setEditable(false);
            myTabbedPane.addTab(tabNames[i],ScrollPaneFactory.createScrollPane(textArea));
          }
          if (selectedIndex >= 0 && selectedIndex < tabNames.length) {
            myTabbedPane.setSelectedIndex(selectedIndex);
          }
          layout.show(myPreviewPanel,TABS);
          return;
        }
      }
      if (value == null) {
        layout.show(myPreviewPanel,NONE);
        return;
      }
      myTextArea.setText(value);
      myTextArea.setEditable(false);
      layout.show(myPreviewPanel,TEXT);
    }
 else     if (ImageFileTypeManager.getInstance().isImage(file)) {
      Icon icon=element.getPreviewIcon();
      if (icon == null) {
        icon=new SizedIcon(100,100,new ImageIcon(file.getPath()));
        element.setPreviewIcon(icon);
      }
      myImageComponent.setIcon(icon);
      layout.show(myPreviewPanel,IMAGE);
    }
 else     if (file.getFileType() == XmlFileType.INSTANCE) {
      String value=element.getPreviewString();
      if (value == null) {
        value=new String(file.contentsToByteArray());
        element.setPreviewString(value);
      }
      myTextArea.setText(value);
      myTextArea.setEditable(false);
      layout.show(myPreviewPanel,TEXT);
    }
 else {
      layout.show(myPreviewPanel,NONE);
    }
  }
 catch (  IOException e) {
    layout.show(myPreviewPanel,NONE);
  }
}
