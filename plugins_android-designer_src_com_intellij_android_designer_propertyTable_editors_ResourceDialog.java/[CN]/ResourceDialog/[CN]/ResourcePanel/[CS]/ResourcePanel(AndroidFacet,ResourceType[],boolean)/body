{
  myTree=new Tree();
  myTree.setModel(new DefaultTreeModel(new DefaultMutableTreeNode()));
  myTree.setScrollsOnExpand(true);
  myTree.setRootVisible(false);
  myTree.setShowsRootHandles(true);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      if (!myTreeBuilder.getSelectedElements(ResourceItem.class).isEmpty()) {
        close(OK_EXIT_CODE);
        return true;
      }
      return false;
    }
  }
.installOn(myTree);
  ToolTipManager.sharedInstance().registerComponent(myTree);
  TreeUtil.installActions(myTree);
  myManager=facet.getResourceManager(system ? AndroidUtils.SYSTEM_RESOURCE_PACKAGE : null);
  myGroups=new ResourceGroup[types.length];
  for (int i=0; i < types.length; i++) {
    myGroups[i]=new ResourceGroup(types[i],myManager);
  }
  myTreeBuilder=new AbstractTreeBuilder(myTree,(DefaultTreeModel)myTree.getModel(),new TreeContentProvider(myGroups),null);
  myTreeBuilder.initRootNode();
  TreeSelectionModel selectionModel=myTree.getSelectionModel();
  selectionModel.setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  selectionModel.addTreeSelectionListener(ResourceDialog.this);
  myTree.setCellRenderer(new NodeRenderer(){
    @Override protected void doAppend(    @NotNull @Nls String fragment,    @NotNull SimpleTextAttributes attributes,    boolean isMainText,    boolean selected){
      SpeedSearchUtil.appendFragmentsForSpeedSearch(myTree,fragment,attributes,selected,this);
    }
    @Override public void doAppend(    @NotNull String fragment,    @NotNull SimpleTextAttributes attributes,    boolean selected){
      SpeedSearchUtil.appendFragmentsForSpeedSearch(myTree,fragment,attributes,selected,this);
    }
    @Override public void doAppend(    String fragment,    boolean selected){
      SpeedSearchUtil.appendFragmentsForSpeedSearch(myTree,fragment,SimpleTextAttributes.REGULAR_ATTRIBUTES,selected,this);
    }
  }
);
  new TreeSpeedSearch(myTree,TreeSpeedSearch.NODE_DESCRIPTOR_TOSTRING,true);
  myComponent=new JPanel(new BorderLayout(0,5));
  myComponent.add(ScrollPaneFactory.createScrollPane(myTree),BorderLayout.CENTER);
  myPreviewPanel=new JPanel(new CardLayout());
  myComponent.add(myPreviewPanel,BorderLayout.SOUTH);
  myTextArea=new JTextArea(5,20);
  myPreviewPanel.add(ScrollPaneFactory.createScrollPane(myTextArea),TEXT);
  myPreviewPanel.add(myTabbedPane=new JBTabbedPane(JTabbedPane.BOTTOM,JTabbedPane.SCROLL_TAB_LAYOUT),TABS);
  myImageComponent=new JLabel();
  myImageComponent.setHorizontalAlignment(SwingConstants.CENTER);
  myImageComponent.setVerticalAlignment(SwingConstants.CENTER);
  myPreviewPanel.add(myImageComponent,IMAGE);
  myNoPreviewComponent=new JLabel("No Preview");
  myNoPreviewComponent.setHorizontalAlignment(SwingConstants.CENTER);
  myNoPreviewComponent.setVerticalAlignment(SwingConstants.CENTER);
  myPreviewPanel.add(myNoPreviewComponent,NONE);
}
