{
  List<TextRange> textRanges=new ArrayList<TextRange>(refs.size());
  for (  PsiReference ref : refs) {
    PsiElement element=ref.getElement();
    TextRange rangeInElement=ref.getRangeInElement();
    TextRange range=element.getTextRange().cutOut(rangeInElement);
    range=InjectedLanguageManager.getInstance(element.getProject()).injectedToHost(element,range);
    textRanges.add(range);
  }
  if (clearHighlights) {
    clearHighlights(editor,highlightManager,textRanges,attributes);
    return;
  }
  ArrayList<RangeHighlighter> outHighlighters=new ArrayList<RangeHighlighter>();
  PsiReference[] refArray=refs.toArray(new PsiReference[refs.size()]);
  highlightManager.addOccurrenceHighlights(editor,refArray,attributes,false,outHighlighters);
  for (  RangeHighlighter highlighter : outHighlighters) {
    setLineTextErrorStripeTooltip(highlighter);
  }
}
