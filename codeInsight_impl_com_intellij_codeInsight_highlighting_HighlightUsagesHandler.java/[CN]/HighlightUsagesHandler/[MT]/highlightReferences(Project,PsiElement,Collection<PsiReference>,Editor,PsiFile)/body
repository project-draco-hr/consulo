{
  HighlightManager highlightManager=HighlightManager.getInstance(project);
  EditorColorsManager manager=EditorColorsManager.getInstance();
  TextAttributes attributes=manager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);
  TextAttributes writeAttributes=manager.getGlobalScheme().getAttributes(EditorColors.WRITE_SEARCH_RESULT_ATTRIBUTES);
  setupFindModel(project);
  if (element instanceof PsiVariable) {
    List<PsiReference> readRefs=new ArrayList<PsiReference>();
    List<PsiReference> writeRefs=new ArrayList<PsiReference>();
    for (    PsiReference ref : refs) {
      PsiElement refElement=ref.getElement();
      if (refElement instanceof PsiReferenceExpression && PsiUtil.isAccessedForWriting((PsiExpression)refElement)) {
        writeRefs.add(ref);
      }
 else {
        readRefs.add(ref);
      }
    }
    doHighlightRefs(highlightManager,editor,readRefs,attributes);
    doHighlightRefs(highlightManager,editor,writeRefs,writeAttributes);
  }
 else {
    doHighlightRefs(highlightManager,editor,refs,attributes);
  }
  PsiElement identifier=getNameIdentifier(element);
  if (identifier != null && PsiUtil.isUnderPsiRoot(file,identifier)) {
    TextAttributes nameAttributes=attributes;
    if (element instanceof PsiVariable && ((PsiVariable)element).getInitializer() != null) {
      nameAttributes=writeAttributes;
    }
    doHighlightElements(highlightManager,editor,new PsiElement[]{identifier},nameAttributes);
  }
 else   if (element instanceof PsiKeyword) {
    doHighlightElements(highlightManager,editor,new PsiElement[]{element},attributes);
  }
}
