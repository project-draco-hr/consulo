{
  if (myClasses.length == 1) {
    selected(myClasses[0]);
  }
 else   if (myClasses.length > 0) {
    PsiClassListCellRenderer renderer=new PsiClassListCellRenderer();
    Arrays.sort(myClasses,renderer.getComparator());
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      selected(myClasses);
      return;
    }
    Vector<Object> model=new Vector<Object>(Arrays.asList(myClasses));
    model.insertElementAt(CodeInsightBundle.message("highlight.thrown.exceptions.chooser.all.entry"),0);
    myList=new JList(model);
    myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    myList.setCellRenderer(renderer);
    renderer.installSpeedSearch(myList);
    final Runnable callback=new Runnable(){
      public void run(){
        int idx=myList.getSelectedIndex();
        if (idx < 0)         return;
        if (idx > 0) {
          selected(myClasses[idx - 1]);
        }
 else {
          selected(myClasses);
        }
      }
    }
;
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        new PopupChooserBuilder(myList).setTitle(myTitle).setItemChoosenCallback(callback).createPopup().showInBestPositionFor(myEditor);
      }
    }
);
  }
}
