{
  final Iterator<Location<? extends Ancestor>> fromClass=myClassLocation.getAncestors(ancestorClass,false);
  if (strict)   return fromClass;
  final Location<Ancestor> thisLocation=(Location<Ancestor>)(Location)this;
  return new Iterator<Location<? extends Ancestor>>(){
    private boolean myFirstStep=ancestorClass.isInstance(myMethod);
    public boolean hasNext(){
      return myFirstStep || fromClass.hasNext();
    }
    public Location<? extends Ancestor> next(){
      final Location<? extends Ancestor> location;
      if (myFirstStep) {
        location=thisLocation;
      }
 else {
        location=fromClass.next();
      }
      myFirstStep=false;
      return location;
    }
    public void remove(){
      LOG.assertTrue(false);
    }
  }
;
}
