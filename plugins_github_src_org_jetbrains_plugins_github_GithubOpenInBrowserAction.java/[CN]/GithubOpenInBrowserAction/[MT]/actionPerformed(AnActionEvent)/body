{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (!GithubUtil.checkCredentials(project)) {
    Messages.showErrorDialog(project,"Cannot login with GitHub credentials. Please configure them in File | Settings | GitHub",CANNOT_OPEN_IN_BROWSER);
    return;
  }
  final VirtualFile root=project.getBaseDir();
  final boolean gitDetected=GitUtil.isUnderGit(root);
  if (!gitDetected) {
    Messages.showErrorDialog(project,"Cannot find any git repository configured for the project",CANNOT_OPEN_IN_BROWSER);
    return;
  }
  final VirtualFile virtualFile=e.getData(PlatformDataKeys.VIRTUAL_FILE);
  final String rootPath=root.getPath();
  final String path=virtualFile.getPath();
  if (!path.startsWith(rootPath)) {
    Messages.showErrorDialog(project,"File is not under project root",CANNOT_OPEN_IN_BROWSER);
    return;
  }
  final GitRemote githubRemote=GithubUtil.getGithubBoundRepository(project);
  if (githubRemote == null) {
    Messages.showErrorDialog(project,"Configured github repository is not found",CANNOT_OPEN_IN_BROWSER);
    return;
  }
  final String pushUrl=githubRemote.pushUrl();
  int index=pushUrl.lastIndexOf('/');
  if (index == -1) {
    Messages.showErrorDialog(project,"Cannot extract info about repository name: " + pushUrl,CANNOT_OPEN_IN_BROWSER);
    return;
  }
  index=pushUrl.substring(0,index).lastIndexOf('/');
  if (index == -1) {
    Messages.showErrorDialog(project,"Cannot extract info about repository owner: " + pushUrl,CANNOT_OPEN_IN_BROWSER);
    return;
  }
  String repoInfo=pushUrl.substring(index + 1);
  if (repoInfo.endsWith(".git")) {
    repoInfo=repoInfo.substring(0,repoInfo.length() - 4);
  }
  BrowserUtil.launchBrowser("https://github.com/" + repoInfo + "/blob/master"+ path.substring(rootPath.length()));
}
