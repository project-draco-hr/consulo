{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  while (!checkCredentials(project)) {
    final GithubLoginDialog dialog=new GithubLoginDialog(project);
    dialog.show();
    if (!dialog.isOK()) {
      return;
    }
  }
  final VirtualFile root=project.getBaseDir();
  GitRepositoryManager manager=GitUtil.getRepositoryManager(project);
  if (manager == null) {
    return;
  }
  final GitRepository gitRepository=manager.getRepositoryForFile(root);
  final GitRemote gitRemote=findGitHubRemoteBranch(gitRepository);
  final String pushUrl=getGithubUrl(gitRemote);
  final VirtualFile virtualFile=e.getData(PlatformDataKeys.VIRTUAL_FILE);
  final String rootPath=root.getPath();
  final String path=virtualFile.getPath();
  if (!path.startsWith(rootPath)) {
    Messages.showErrorDialog(project,"File is not under project root",CANNOT_OPEN_IN_BROWSER);
    return;
  }
  String userAndRepository=getUserAndRepositoryOrShowError(project,pushUrl);
  final GitBranch tracked;
  try {
    final GitBranch current=GitBranch.current(project,root);
    if (current == null) {
      Messages.showErrorDialog(project,"Cannot find local branch",CANNOT_OPEN_IN_BROWSER);
      return;
    }
    tracked=current.tracked(project,root);
    if (tracked == null || !tracked.isRemote()) {
      Messages.showErrorDialog(project,"Cannot find tracked branch for branch: " + current.getFullName(),CANNOT_OPEN_IN_BROWSER);
      return;
    }
  }
 catch (  VcsException e1) {
    Messages.showErrorDialog(project,"Error occurred while inspecting branches: " + e1,CANNOT_OPEN_IN_BROWSER);
    return;
  }
  String branch=tracked.getName();
  if (branch.startsWith("origin/")) {
    branch=branch.substring(7);
  }
  final StringBuilder builder=new StringBuilder();
  builder.append("https://github.com/").append(userAndRepository).append("/blob/").append(branch).append(path.substring(rootPath.length()));
  final Editor editor=e.getData(PlatformDataKeys.EDITOR);
  if (editor != null) {
    final int line=editor.getCaretModel().getLogicalPosition().line;
    builder.append("#L").append(line);
  }
  BrowserUtil.launchBrowser(builder.toString());
}
