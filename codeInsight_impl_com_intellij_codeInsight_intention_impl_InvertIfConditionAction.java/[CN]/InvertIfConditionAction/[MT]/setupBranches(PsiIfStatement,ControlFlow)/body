{
  PsiElementFactory factory=JavaPsiFacade.getInstance(ifStatement.getProject()).getElementFactory();
  Project project=ifStatement.getProject();
  PsiStatement thenBranch=ifStatement.getThenBranch();
  PsiStatement elseBranch=ifStatement.getElseBranch();
  if (elseBranch != null) {
    elseBranch=(PsiStatement)elseBranch.copy();
    setElseBranch(ifStatement,thenBranch,flow);
    ifStatement.getThenBranch().replace(elseBranch);
    return;
  }
  final CodeStyleManager codeStyle=CodeStyleManager.getInstance(project);
  if (flow.getSize() == 0) {
    ifStatement.setElseBranch(thenBranch);
    PsiStatement statement=factory.createStatementFromText("{}",null);
    statement=(PsiStatement)codeStyle.reformat(statement);
    statement=(PsiStatement)ifStatement.getThenBranch().replace(statement);
    codeStyle.reformat(statement);
    return;
  }
  int endOffset=calcEndOffset(flow,ifStatement);
  LOG.assertTrue(endOffset >= 0);
  if (endOffset >= flow.getSize()) {
    PsiStatement statement=factory.createStatementFromText("return;",null);
    statement=(PsiStatement)codeStyle.reformat(statement);
    if (thenBranch instanceof PsiBlockStatement) {
      PsiStatement[] statements=((PsiBlockStatement)thenBranch).getCodeBlock().getStatements();
      int len=statements.length;
      if (len > 0) {
        if (statements[len - 1] instanceof PsiReturnStatement)         len--;
        if (len > 0) {
          PsiElement firstElement=statements[0];
          while (firstElement.getPrevSibling() instanceof PsiWhiteSpace || firstElement.getPrevSibling() instanceof PsiComment) {
            firstElement=firstElement.getPrevSibling();
          }
          ifStatement.getParent().addRangeAfter(firstElement,statements[len - 1],ifStatement);
        }
      }
    }
 else {
      if (!(thenBranch instanceof PsiReturnStatement)) {
        addAfter(ifStatement,thenBranch);
      }
    }
    ifStatement.getThenBranch().replace(statement);
    return;
  }
  PsiElement element=flow.getElement(endOffset);
  while (element != null && !(element instanceof PsiStatement))   element=element.getParent();
  if (element != null && element.getParent() instanceof PsiForStatement) {
    PsiForStatement forStatement=(PsiForStatement)element.getParent();
    if (forStatement.getUpdate() == element) {
      PsiStatement statement=factory.createStatementFromText("continue;",null);
      statement=(PsiStatement)codeStyle.reformat(statement);
      addAfter(ifStatement,thenBranch);
      ifStatement.getThenBranch().replace(statement);
      return;
    }
  }
  if (element instanceof PsiWhileStatement && flow.getStartOffset(element) == endOffset || element instanceof PsiForeachStatement && flow.getStartOffset(element) + 1 == endOffset) {
    PsiStatement statement=factory.createStatementFromText("continue;",null);
    statement=(PsiStatement)codeStyle.reformat(statement);
    addAfter(ifStatement,thenBranch);
    ifStatement.getThenBranch().replace(statement);
    return;
  }
  if (element instanceof PsiReturnStatement) {
    PsiReturnStatement returnStatement=(PsiReturnStatement)element;
    addAfter(ifStatement,thenBranch);
    ifStatement.getThenBranch().replace(returnStatement.copy());
    ControlFlow flow2=buildControlFlow(findCodeBlock(ifStatement));
    if (!ControlFlowUtil.isInstructionReachable(flow2,flow2.getStartOffset(returnStatement),0))     returnStatement.delete();
    return;
  }
  boolean nextUnreachable=flow.getEndOffset(ifStatement) == flow.getSize();
  if (!nextUnreachable) {
    PsiElement nearestCodeBlock=findNearestCodeBlock(ifStatement);
    if (nearestCodeBlock != null) {
      ControlFlow flow2=buildControlFlow(nearestCodeBlock);
      nextUnreachable=!ControlFlowUtil.isInstructionReachable(flow2,flow2.getEndOffset(ifStatement),getThenOffset(flow2,ifStatement));
    }
  }
  if (nextUnreachable) {
    setElseBranch(ifStatement,thenBranch,flow);
    PsiElement first=ifStatement.getNextSibling();
    if (first != null) {
      PsiElement last=first;
      PsiElement next=last.getNextSibling();
      while (next != null && !(next instanceof PsiSwitchLabelStatement)) {
        last=next;
        next=next.getNextSibling();
      }
      while (first != last && (last instanceof PsiWhiteSpace || last instanceof PsiJavaToken && ((PsiJavaToken)last).getTokenType() == JavaTokenType.RBRACE))       last=last.getPrevSibling();
      PsiBlockStatement codeBlock=(PsiBlockStatement)factory.createStatementFromText("{}",null);
      codeBlock.getCodeBlock().addRange(first,last);
      first.getParent().deleteChildRange(first,last);
      ifStatement.getThenBranch().replace(codeBlock);
    }
    codeStyle.reformat(ifStatement);
    return;
  }
  setElseBranch(ifStatement,thenBranch,flow);
  PsiStatement statement=factory.createStatementFromText("{}",null);
  statement=(PsiStatement)codeStyle.reformat(statement);
  statement=(PsiStatement)ifStatement.getThenBranch().replace(statement);
  codeStyle.reformat(statement);
}
