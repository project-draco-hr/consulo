{
  ApplicationManager.getApplication().assertIsDispatchThread();
  hideQuestionHint();
  TextAttributes attributes=new TextAttributes();
  attributes.setEffectColor(HintUtil.QUESTION_UNDERSCORE_COLOR);
  attributes.setEffectType(EffectType.LINE_UNDERSCORE);
  final RangeHighlighter highlighter=editor.getMarkupModel().addRangeHighlighter(offset1,offset2,HighlighterLayer.ERROR + 1,attributes,HighlighterTargetArea.EXACT_RANGE);
  hint.addHintListener(new HintListener(){
    @Override public void hintHidden(    EventObject event){
      highlighter.dispose();
      if (myQuestionHint == hint) {
        myQuestionAction=null;
        myQuestionHint=null;
      }
      hint.removeHintListener(this);
    }
  }
);
  showEditorHint(hint,editor,p,HIDE_BY_ANY_KEY | HIDE_BY_TEXT_CHANGE | UPDATE_BY_SCROLLING| HIDE_IF_OUT_OF_EDITOR,0,false,createHintHint(editor,p,hint,constraint));
  myQuestionAction=action;
  myQuestionHint=hint;
}
