{
  final DebuggerContextImpl context=getContext();
  final DebuggerExpressionComboBox comboBox=new DebuggerExpressionComboBox(getProject(),PositionUtil.getContextElement(context),"evaluation",DefaultCodeFragmentFactory.getInstance());
  comboBox.setText(((WatchItemDescriptor)node.getDescriptor()).getEvaluationText());
  comboBox.selectAll();
  DebuggerTreeInplaceEditor editor=new DebuggerTreeInplaceEditor(node){
    public JComponent createInplaceEditorComponent(){
      return comboBox;
    }
    public JComponent getPreferredFocusedComponent(){
      return comboBox.getPreferredFocusedComponent();
    }
    public Editor getEditor(){
      return comboBox.getEditor();
    }
    public JComponent getEditorComponent(){
      return comboBox.getEditorComponent();
    }
    public void doOKAction(){
      if (comboBox.isPopupVisible()) {
        comboBox.selectPopupValue();
      }
      TextWithImports text=comboBox.getText();
      WatchDebuggerTree.setWatchNodeText(node,text);
      comboBox.addRecent(text);
      try {
        super.doOKAction();
      }
  finally {
        comboBox.dispose();
      }
    }
    public void cancelEditing(){
      comboBox.setPopupVisible(false);
      try {
        super.cancelEditing();
      }
  finally {
        comboBox.dispose();
      }
    }
  }
;
  editor.show();
}
