{
  for (  Object o : classpathElement.getChildren(EclipseXml.CLASSPATHENTRY_TAG)) {
    final Element element=(Element)o;
    String path=element.getAttributeValue(EclipseXml.PATH_ATTR);
    if (path == null)     continue;
    final String kind=element.getAttributeValue(EclipseXml.KIND_ATTR);
    if (Comparing.strEqual(kind,EclipseXml.VAR_KIND)) {
      int slash=path.indexOf("/");
      if (slash > 0) {
        usedVariables.add(path.substring(0,slash));
      }
 else {
        usedVariables.add(path);
      }
      final String srcPath=element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);
      if (srcPath == null)       continue;
      final int varStart=srcPath.startsWith("/") ? 1 : 0;
      final int slash2=srcPath.indexOf("/",varStart);
      if (slash2 > 0) {
        usedVariables.add(srcPath.substring(varStart,slash2));
      }
 else {
        usedVariables.add(srcPath.substring(varStart));
      }
    }
 else     if (Comparing.strEqual(kind,EclipseXml.SRC_KIND)) {
      if (EclipseProjectFinder.isExternalResource(rootPath,path)) {
        usedVariables.add(EclipseProjectFinder.extractPathVariableName(path));
      }
    }
  }
}
