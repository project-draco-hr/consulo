{
  for (  Object o : classpathElement.getChildren(EclipseXml.CLASSPATHENTRY_TAG)) {
    final Element element=(Element)o;
    String path=element.getAttributeValue(EclipseXml.PATH_ATTR);
    if (path == null)     continue;
    final String kind=element.getAttributeValue(EclipseXml.KIND_ATTR);
    if (Comparing.strEqual(kind,EclipseXml.VAR_KIND)) {
      createEPathVariable(usedVariables,path,0);
      final String srcPath=element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);
      if (srcPath != null) {
        createEPathVariable(usedVariables,srcPath,srcVarStart(srcPath));
      }
    }
 else     if (Comparing.strEqual(kind,EclipseXml.SRC_KIND) || Comparing.strEqual(kind,EclipseXml.OUTPUT_KIND)) {
      if (EclipseProjectFinder.isExternalResource(rootPath,path)) {
        final String linkedLocation=EclipseProjectFinder.replaceLinkedPathLocationVariable(rootPath,path);
        usedVariables.add(EclipseProjectFinder.extractPathVariableName(linkedLocation));
      }
    }
  }
}
