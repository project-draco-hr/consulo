{
  mySdkModel=sdkModel;
  myInternalJdkComboBox.setModel(myJdksModel);
  myInternalJdkComboBox.setRenderer(new ListCellRendererWrapper(){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value instanceof Sdk) {
        setText(((Sdk)value).getName());
      }
    }
  }
);
  myBuildTargetComboBox.setModel(myBuildTargetsModel);
  myBuildTargetComboBox.setRenderer(new ListCellRendererWrapper(){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value instanceof IAndroidTarget) {
        setText(AndroidSdkUtils.getTargetPresentableName((IAndroidTarget)value));
      }
 else       if (value == null) {
        setText("<html><font color='red'>[none]</font></html>");
      }
    }
  }
);
  myBuildTargetComboBox.addItemListener(new ItemListener(){
    public void itemStateChanged(    final ItemEvent e){
      if (myFreeze) {
        return;
      }
      final IAndroidTarget target=(IAndroidTarget)e.getItem();
      List<OrderRoot> roots=AndroidSdkUtils.getLibraryRootsForTarget(target,mySdkLocation);
      Map<OrderRootType,String[]> configuredRoots=new HashMap<OrderRootType,String[]>();
      for (      OrderRootType type : OrderRootType.getAllTypes()) {
        final VirtualFile[] oldRoots=sdkModificator.getRoots(type);
        final String[] oldRootPaths=new String[oldRoots.length];
        for (int i=0; i < oldRootPaths.length; i++) {
          oldRootPaths[i]=oldRoots[i].getPath();
        }
        configuredRoots.put(type,oldRootPaths);
      }
      for (      OrderRoot root : roots) {
        if (e.getStateChange() == ItemEvent.DESELECTED) {
          sdkModificator.removeRoot(root.getFile(),root.getType());
        }
 else {
          String[] configuredRootsForType=configuredRoots.get(root.getType());
          if (ArrayUtil.find(configuredRootsForType,root.getFile().getPath()) == -1) {
            sdkModificator.addRoot(root.getFile(),root.getType());
          }
        }
      }
    }
  }
);
}
