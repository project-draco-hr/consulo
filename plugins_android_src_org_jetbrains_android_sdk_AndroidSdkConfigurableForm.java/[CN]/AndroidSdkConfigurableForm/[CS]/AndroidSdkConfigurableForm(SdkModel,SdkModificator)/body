{
  mySdkModel=sdkModel;
  myInternalJdkComboBox.setModel(myJdksModel);
  myInternalJdkComboBox.setRenderer(new ListCellRendererWrapper(myInternalJdkComboBox.getRenderer()){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value instanceof Sdk) {
        setText(((Sdk)value).getName());
      }
    }
  }
);
  myBuildTargetComboBox.setModel(myBuildTargetsModel);
  myBuildTargetComboBox.setRenderer(new ListCellRendererWrapper(myBuildTargetComboBox.getRenderer()){
    @Override public void customize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value instanceof IAndroidTarget) {
        setText(AndroidSdkUtils.getTargetPresentableName((IAndroidTarget)value));
      }
    }
  }
);
  myBuildTargetComboBox.addItemListener(new ItemListener(){
    public void itemStateChanged(    final ItemEvent e){
      final IAndroidTarget target=(IAndroidTarget)e.getItem();
      List<OrderRoot> roots=AndroidSdkUtils.getLibraryRootsForTarget(target,mySdkLocation);
      Map<OrderRootType,VirtualFile[]> configuredRoots=new HashMap<OrderRootType,VirtualFile[]>();
      for (      OrderRootType type : OrderRootType.getAllTypes()) {
        configuredRoots.put(type,sdkModificator.getRoots(type));
      }
      for (      OrderRoot root : roots) {
        if (e.getStateChange() == ItemEvent.DESELECTED) {
          sdkModificator.removeRoot(root.getFile(),root.getType());
        }
 else {
          VirtualFile[] configuredRootsForType=configuredRoots.get(root.getType());
          if (ArrayUtil.find(configuredRootsForType,root.getFile()) == -1) {
            sdkModificator.addRoot(root.getFile(),root.getType());
          }
        }
      }
    }
  }
);
}
