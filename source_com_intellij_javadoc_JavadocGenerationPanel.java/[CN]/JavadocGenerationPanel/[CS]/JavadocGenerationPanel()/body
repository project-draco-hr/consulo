{
  myTfOutputDir.addBrowseFolderListener("Browse Output directory",null,null,FileChooserDescriptorFactory.createSingleFolderDescriptor());
  myIndex.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      mySeparateIndex.setEnabled(myIndex.isSelected());
    }
  }
);
  myTagDeprecated.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      myDeprecatedList.setEnabled(myTagDeprecated.isSelected());
    }
  }
);
  Hashtable labelTable=new Hashtable();
  labelTable.put(new Integer(1),new JLabel("public"));
  labelTable.put(new Integer(2),new JLabel("protected"));
  labelTable.put(new Integer(3),new JLabel("package"));
  labelTable.put(new Integer(4),new JLabel("private"));
  myScopeSlider.setMaximum(4);
  myScopeSlider.setMinimum(1);
  myScopeSlider.setValue(1);
  myScopeSlider.setLabelTable(labelTable);
  myScopeSlider.putClientProperty("JSlider.isFilled",Boolean.TRUE);
  myScopeSlider.setPreferredSize(new Dimension(80,50));
  myScopeSlider.setPaintLabels(true);
  myScopeSlider.setSnapToTicks(true);
  myScopeSlider.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      handleSlider();
    }
  }
);
}
