{
  boolean isForcedLeaf=sliceUsage instanceof SliceDereferenceUsage;
  TextChunk[] text=sliceUsage.getPresentation().getText();
  for (  TextChunk textChunk : text) {
    SimpleTextAttributes attributes=textChunk.getSimpleAttributesIgnoreBackground();
    if (isForcedLeaf) {
      attributes=attributes.derive(attributes.getStyle(),Color.LIGHT_GRAY,attributes.getBgColor(),attributes.getWaveColor());
    }
    append(textChunk.getText(),attributes);
  }
  PsiElement element=sliceUsage.getElement();
  PsiMethod method;
  PsiClass aClass;
  while (true) {
    method=PsiTreeUtil.getParentOfType(element,PsiMethod.class);
    aClass=method == null ? PsiTreeUtil.getParentOfType(element,PsiClass.class) : method.getContainingClass();
    if (aClass instanceof PsiAnonymousClass) {
      element=aClass;
    }
 else {
      break;
    }
  }
  String location=method != null ? PsiFormatUtil.formatMethod(method,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS | PsiFormatUtil.SHOW_CONTAINING_CLASS,PsiFormatUtil.SHOW_TYPE,2) : aClass != null ? PsiFormatUtil.formatClass(aClass,PsiFormatUtil.SHOW_NAME) : null;
  if (location != null) {
    SimpleTextAttributes attributes=SimpleTextAttributes.GRAY_ATTRIBUTES;
    append(" in " + location,attributes);
  }
}
