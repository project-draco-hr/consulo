{
  final ConsoleHistoryModel myHistory=new ConsoleHistoryModel();
  final AnAction runAction=new ConsoleExecuteAction(languageConsole,myHistory,processHandler,consoleExecuteActionHandler);
  final PairProcessor<AnActionEvent,String> historyProcessor=new PairProcessor<AnActionEvent,String>(){
    public boolean process(    final AnActionEvent e,    final String s){
      new WriteCommandAction(languageConsole.getProject(),languageConsole.getFile()){
        protected void run(        final Result result) throws Throwable {
          languageConsole.getEditorDocument().setText(s == null ? "" : s);
        }
      }
.execute();
      return true;
    }
  }
;
  final EditorEx consoleEditor=languageConsole.getConsoleEditor();
  final Document document=consoleEditor.getDocument();
  final CaretModel caretModel=consoleEditor.getCaretModel();
  final AnAction upAction=new AnAction(){
    @Override public void actionPerformed(    final AnActionEvent e){
      final int lineNumber=consoleEditor.getDocument().getLineNumber(caretModel.getOffset());
      if (lineNumber > 0) {
        caretModel.moveCaretRelatively(0,-1,false,consoleEditor.getSelectionModel().hasBlockSelection(),true);
      }
 else {
        if (myHistory.hasHistory(false)) {
          historyProcessor.process(e,myHistory.getHistoryPrev());
        }
      }
    }
  }
;
  final AnAction downAction=new AnAction(){
    @Override public void actionPerformed(    final AnActionEvent e){
      final int lineNumber=document.getLineNumber(caretModel.getOffset());
      if (lineNumber < document.getLineCount() - 1) {
        caretModel.moveCaretRelatively(0,1,false,consoleEditor.getSelectionModel().hasBlockSelection(),true);
      }
 else {
        if (myHistory.hasHistory(true)) {
          historyProcessor.process(e,myHistory.getHistoryNext());
        }
      }
    }
  }
;
  upAction.getTemplatePresentation().setVisible(false);
  downAction.getTemplatePresentation().setVisible(false);
  upAction.registerCustomShortcutSet(KeyEvent.VK_UP,0,null);
  downAction.registerCustomShortcutSet(KeyEvent.VK_DOWN,0,null);
  return new ConsoleExecutionActions(runAction,downAction,upAction);
}
