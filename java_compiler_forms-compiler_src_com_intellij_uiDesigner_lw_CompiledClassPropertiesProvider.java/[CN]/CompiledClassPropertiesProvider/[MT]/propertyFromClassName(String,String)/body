{
  final LwIntrospectedProperty property;
  if (int.class.getName().equals(propertyClassName)) {
    property=new LwIntroIntProperty(name);
  }
 else   if (boolean.class.getName().equals(propertyClassName)) {
    property=new LwIntroBooleanProperty(name);
  }
 else   if (double.class.getName().equals(propertyClassName)) {
    property=new LwIntroPrimitiveTypeProperty(name,Double.class);
  }
 else   if (float.class.getName().equals(propertyClassName)) {
    property=new LwIntroPrimitiveTypeProperty(name,Float.class);
  }
 else   if (long.class.getName().equals(propertyClassName)) {
    property=new LwIntroPrimitiveTypeProperty(name,Long.class);
  }
 else   if (byte.class.getName().equals(propertyClassName)) {
    property=new LwIntroPrimitiveTypeProperty(name,Byte.class);
  }
 else   if (short.class.getName().equals(propertyClassName)) {
    property=new LwIntroPrimitiveTypeProperty(name,Short.class);
  }
 else   if (char.class.getName().equals(propertyClassName)) {
    property=new LwIntroCharProperty(name);
  }
 else   if (String.class.getName().equals(propertyClassName)) {
    property=new LwRbIntroStringProperty(name);
  }
 else   if ("java.awt.Insets".equals(propertyClassName)) {
    property=new LwIntroInsetsProperty(name);
  }
 else   if ("java.awt.Dimension".equals(propertyClassName)) {
    property=new LwIntroDimensionProperty(name);
  }
 else   if ("java.awt.Rectangle".equals(propertyClassName)) {
    property=new LwIntroRectangleProperty(name);
  }
 else   if ("java.awt.Color".equals(propertyClassName)) {
    property=new LwIntroColorProperty(name);
  }
 else   if ("java.awt.Font".equals(propertyClassName)) {
    property=new LwIntroFontProperty(name);
  }
 else   if ("javax.swing.Icon".equals(propertyClassName)) {
    property=new LwIntroIconProperty(name);
  }
 else {
    property=null;
  }
  return property;
}
