{
  if (processedModules.contains(module))   return;
  processedModules.add(module);
  ModuleRootManager.getInstance(module).processOrder(new RootPolicy<LinkedHashSet<VirtualFile>>(){
    public LinkedHashSet<VirtualFile> visitLibraryOrderEntry(    final LibraryOrderEntry libraryOrderEntry,    final LinkedHashSet<VirtualFile> value){
      value.addAll(Arrays.asList(libraryOrderEntry.getFiles(OrderRootType.CLASSES)));
      return value;
    }
    public LinkedHashSet<VirtualFile> visitModuleOrderEntry(    final ModuleOrderEntry moduleOrderEntry,    final LinkedHashSet<VirtualFile> value){
      final Module depModule=moduleOrderEntry.getModule();
      if (depModule != null) {
        buildEntries(depModule,processedModules);
      }
      return value;
    }
    public LinkedHashSet<VirtualFile> visitJdkOrderEntry(    final JdkOrderEntry jdkOrderEntry,    final LinkedHashSet<VirtualFile> value){
      if (myJDKProcessed)       return value;
      myJDKProcessed=true;
      value.addAll(Arrays.asList(jdkOrderEntry.getFiles(OrderRootType.CLASSES)));
      return value;
    }
  }
,myEntries);
}
