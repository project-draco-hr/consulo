{
  if (lexer.getTokenType() != TokenTypeEx.IDENTIFIER)   return PatternPackageSet.SCOPE_ANY;
  String id=getTokenText(lexer);
  String scope=PatternPackageSet.SCOPE_ANY;
  if (PatternPackageSet.SCOPE_SOURCE.equals(id)) {
    scope=PatternPackageSet.SCOPE_SOURCE;
  }
 else   if (PatternPackageSet.SCOPE_TEST.equals(id)) {
    scope=PatternPackageSet.SCOPE_TEST;
  }
 else   if (PatternPackageSet.SCOPE_PROBLEM.equals(id)) {
    scope=PatternPackageSet.SCOPE_PROBLEM;
  }
 else   if (PatternPackageSet.SCOPE_LIBRARY.equals(id)) {
    scope=PatternPackageSet.SCOPE_LIBRARY;
  }
 else   if (id.trim().length() > 0) {
    scope=null;
  }
  final CharSequence buf=lexer.getBufferSequence();
  int end=lexer.getTokenEnd();
  int bufferEnd=lexer.getBufferEnd();
  if (scope == PatternPackageSet.SCOPE_ANY || end >= bufferEnd || buf.charAt(end) != ':' && buf.charAt(end) != '[') {
    return PatternPackageSet.SCOPE_ANY;
  }
  lexer.advance();
  return scope;
}
