{
  final MessageBusConnection conn=project.getMessageBus().connect();
  myConnections.put(project,conn);
  conn.subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootListener(){
    private VirtualFile[] myRootsBefore;
    public void beforeRootsChange(    final ModuleRootEvent event){
      myRootsBefore=ProjectRootManager.getInstance(project).getContentSourceRoots();
    }
    public void rootsChanged(    final ModuleRootEvent event){
      final VirtualFile[] rootsAfter=ProjectRootManager.getInstance(project).getContentSourceRoots();
{
        final Set<VirtualFile> newRoots=new HashSet<VirtualFile>();
        newRoots.addAll(Arrays.asList(rootsAfter));
        if (myRootsBefore != null) {
          newRoots.removeAll(Arrays.asList(myRootsBefore));
        }
        scanSourceContent(project,newRoots,newRoots.size(),true);
      }
{
        final Set<VirtualFile> oldRoots=new HashSet<VirtualFile>();
        if (myRootsBefore != null) {
          oldRoots.addAll(Arrays.asList(myRootsBefore));
        }
        if (!oldRoots.isEmpty()) {
          oldRoots.removeAll(Arrays.asList(rootsAfter));
        }
        scanSourceContent(project,oldRoots,oldRoots.size(),false);
      }
      myRootsBefore=null;
      markOldOutputRoots(project,buildOutputRootsLayout(project));
    }
  }
);
  scanSourcesForCompilableFiles(project);
}
