{
  MultiMap<PsiElement,String> conflicts=new MultiMap<PsiElement,String>();
  if (myCreateInnerClassRb.isSelected()) {
    final PsiClass innerClass=myTargetClass.findInnerClassByName(myInnerClassName.getText(),false);
    if (innerClass != null) {
      conflicts.putValue(innerClass,"Inner class " + myInnerClassName.getText() + " already defined in class "+ myTargetClass.getName());
    }
  }
  if (conflicts.size() > 0) {
    final ConflictsDialog conflictsDialog=new ConflictsDialog(myProject,conflicts);
    conflictsDialog.show();
    if (!conflictsDialog.isOK()) {
      if (conflictsDialog.isShowConflicts())       close(CANCEL_EXIT_CODE);
      return;
    }
  }
  final JCheckBox makeVarargsCb=myCreateInnerClassRb.isSelected() ? myCbMakeVarargs : myCbMakeVarargsAnonymous;
  if (makeVarargsCb != null && makeVarargsCb.isSelected()) {
    final ParameterTablePanel.VariableData data=myInputVariables[myInputVariables.length - 1];
    if (data.type instanceof PsiArrayType) {
      data.type=new PsiEllipsisType(((PsiArrayType)data.type).getComponentType());
    }
  }
  super.doOKAction();
}
