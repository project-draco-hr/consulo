{
  int threshold=Registry.intValue("diff.unimportant.line.char.count");
  if (threshold == 0)   return diff(lines1,lines2,indicator);
  List<LineWrapper> newLines1=new ArrayList<LineWrapper>(lines1.size());
  List<LineWrapper> newLines2=new ArrayList<LineWrapper>(lines2.size());
  for (int i=0; i < lines1.size(); i++) {
    Line line=lines1.get(i);
    if (line.getNonSpaceChars() > threshold)     newLines1.add(new LineWrapper(line,i));
  }
  for (int i=0; i < lines2.size(); i++) {
    Line line=lines2.get(i);
    if (line.getNonSpaceChars() > threshold)     newLines2.add(new LineWrapper(line,i));
  }
  FairDiffIterable changes=diff(newLines1,newLines2,indicator);
  return new ChangeCorrector.SmartLineChangeCorrector(newLines1,newLines2,lines1,lines2,changes,indicator).build();
}
