{
  indicator.checkCanceled();
  List<Line> lines1=getLines(text1,policy);
  List<Line> lines2=getLines(text2,policy);
  List<Line> lines3=getLines(text3,policy);
  List<Line> iwLines1=convertToIgnoreWhitespace(lines1);
  List<Line> iwLines2=convertToIgnoreWhitespace(lines2);
  List<Line> iwLines3=convertToIgnoreWhitespace(lines3);
  FairDiffIterable iwChanges1=compareSmart(iwLines2,iwLines1,indicator);
  iwChanges1=optimizeLineChunks(lines2,lines1,iwChanges1,indicator);
  FairDiffIterable iterable1=correctChangesSecondStep(lines2,lines1,iwChanges1);
  FairDiffIterable iwChanges2=compareSmart(iwLines2,iwLines3,indicator);
  iwChanges2=optimizeLineChunks(lines2,lines3,iwChanges2,indicator);
  FairDiffIterable iterable2=correctChangesSecondStep(lines2,lines3,iwChanges2);
  List<MergeRange> conflicts=ComparisonMergeUtil.buildFair(iterable1,iterable2,indicator);
  return convertIntoFragments(conflicts);
}
