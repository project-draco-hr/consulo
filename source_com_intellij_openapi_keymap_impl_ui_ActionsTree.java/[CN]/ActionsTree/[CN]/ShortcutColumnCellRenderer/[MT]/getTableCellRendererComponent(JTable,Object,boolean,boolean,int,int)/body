{
  String actionId=null;
  TreePath treePath=myTreeTable.getTree().getPathForRow(row);
  if (treePath != null) {
    Object userObject=((DefaultMutableTreeNode)treePath.getLastPathComponent()).getUserObject();
    if (userObject instanceof QuickList) {
      userObject=((QuickList)userObject).getActionId();
    }
    if (userObject instanceof String) {
      actionId=(String)userObject;
    }
  }
  JPanel panel=new JPanel(new GridBagLayout());
  if (actionId != null) {
    Color foreground=isSelected ? table.getSelectionForeground() : table.getForeground();
    Shortcut[] shortcuts=myKeymap.getShortcuts(actionId);
    for (int i=0; i < shortcuts.length; i++) {
      Shortcut shortcut=shortcuts[i];
      String text=KeymapUtil.getShortcutText(shortcut);
      Icon icon=KeymapUtil.getShortcutIcon(shortcut);
      JLabel label=new JLabel();
      label.setForeground(foreground);
      label.setText(text);
      label.setIcon(icon);
      panel.add(label,new GridBagConstraints(i,0,1,1,(i < shortcuts.length - 1 ? 0 : 1),0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,5,0,5),0,0));
    }
  }
  if (isSelected) {
    panel.setBackground(table.getSelectionBackground());
  }
 else {
    panel.setBackground(table.getBackground());
  }
  panel.setBorder(hasFocus ? UIUtil.getTableFocusCellHighlightBorder() : BorderFactory.createEmptyBorder(1,1,1,1));
  return panel;
}
