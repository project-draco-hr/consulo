{
  if (!(element instanceof PsiLocalVariable || element instanceof PsiParameter)) {
    return;
  }
  PsiElement scope;
  PsiElement anchor=null;
  if (element instanceof PsiLocalVariable) {
    scope=RefactoringUtil.getVariableScope((PsiLocalVariable)element);
    if (!(element instanceof ImplicitVariable)) {
      anchor=element.getParent();
    }
  }
 else {
    scope=((PsiParameter)element).getDeclarationScope();
  }
  LOG.assertTrue(scope != null);
  final CollidingVariableVisitor collidingNameVisitor=new CollidingVariableVisitor(){
    public void visitCollidingElement(    PsiVariable collidingVariable){
      if (collidingVariable.equals(element))       return;
      LocalHidesRenamedLocalUsageInfo collision=new LocalHidesRenamedLocalUsageInfo(element,collidingVariable);
      result.add(collision);
    }
  }
;
  visitLocalsCollisions(element,newName,scope,anchor,collidingNameVisitor);
}
