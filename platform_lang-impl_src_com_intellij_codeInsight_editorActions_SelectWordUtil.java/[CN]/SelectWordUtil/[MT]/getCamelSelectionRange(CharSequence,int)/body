{
  if (cursorOffset < 0 || cursorOffset >= editorText.length()) {
    return null;
  }
  if (cursorOffset > 0 && !Character.isJavaIdentifierPart(editorText.charAt(cursorOffset)) && Character.isJavaIdentifierPart(editorText.charAt(cursorOffset - 1))) {
    cursorOffset--;
  }
  if (Character.isJavaIdentifierPart(editorText.charAt(cursorOffset))) {
    int start=cursorOffset;
    int end=cursorOffset + 1;
    final int textLen=editorText.length();
    while (start > 0 && Character.isJavaIdentifierPart(editorText.charAt(start - 1))) {
      final char prevChar=editorText.charAt(start - 1);
      final char curChar=editorText.charAt(start);
      final char nextChar=start + 1 < textLen ? editorText.charAt(start + 1) : 0;
      if (Character.isLowerCase(prevChar) && Character.isUpperCase(curChar) || prevChar == '_' && curChar != '_' || Character.isUpperCase(prevChar) && Character.isUpperCase(curChar) && Character.isLowerCase(nextChar)) {
        break;
      }
      start--;
    }
    while (end < textLen && Character.isJavaIdentifierPart(editorText.charAt(end))) {
      final char prevChar=editorText.charAt(end - 1);
      final char curChar=editorText.charAt(end);
      final char nextChar=end + 1 < textLen ? editorText.charAt(end + 1) : 0;
      if (Character.isLowerCase(prevChar) && Character.isUpperCase(curChar) || prevChar != '_' && curChar == '_' || Character.isUpperCase(prevChar) && Character.isUpperCase(curChar) && Character.isLowerCase(nextChar)) {
        break;
      }
      end++;
    }
    if (start + 1 < end) {
      return new TextRange(start,end);
    }
  }
  return null;
}
