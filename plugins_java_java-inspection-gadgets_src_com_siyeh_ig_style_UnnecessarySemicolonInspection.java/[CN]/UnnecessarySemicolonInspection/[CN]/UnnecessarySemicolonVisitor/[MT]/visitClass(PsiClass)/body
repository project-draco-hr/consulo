{
  super.visitClass(aClass);
  findUnnecessarySemicolonsAfterEnumConstants(aClass);
  if (!aClass.isEnum()) {
    return;
  }
  final PsiField[] fields=aClass.getFields();
  final PsiElement element;
  if (fields.length > 0) {
    final PsiField lastField=fields[fields.length - 1];
    if (!(lastField instanceof PsiEnumConstant)) {
      return;
    }
    element=skipForwardWhiteSpacesAndComments(lastField);
  }
 else {
    final PsiElement lBrace=aClass.getLBrace();
    element=skipForwardWhiteSpacesAndComments(lBrace);
  }
  if (!(element instanceof PsiJavaToken)) {
    return;
  }
  final PsiJavaToken token=(PsiJavaToken)element;
  final IElementType tokenType=token.getTokenType();
  if (!tokenType.equals(JavaTokenType.SEMICOLON)) {
    return;
  }
  final PsiElement next=skipForwardWhiteSpacesAndComments(element);
  if (next == null || !next.equals(aClass.getRBrace())) {
    return;
  }
  registerError(element);
}
