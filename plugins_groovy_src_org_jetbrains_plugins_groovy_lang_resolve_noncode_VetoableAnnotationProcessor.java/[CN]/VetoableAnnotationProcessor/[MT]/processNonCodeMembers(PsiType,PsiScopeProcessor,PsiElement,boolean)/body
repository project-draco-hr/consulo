{
  if (!(type instanceof PsiClassType))   return true;
  PsiClass psiClass=((PsiClassType)type).resolve();
  if (psiClass == null)   return true;
  if (!(psiClass instanceof GrTypeDefinition))   return true;
  GrTypeDefinition grClass=(GrTypeDefinition)psiClass;
  GrField[] fields=grClass.getFields();
  for (  GrField field : fields) {
    GrModifierList modifierList=field.getModifierList();
    if (modifierList == null)     return true;
    GrAnnotation[] annotations=modifierList.getAnnotations();
    for (    GrAnnotation annotation : annotations) {
      if (VETOABLE.equals(annotation.getQualifiedName())) {
        Project project=annotation.getProject();
        GrVariableDeclaration vetoableChangeVar=GroovyPsiElementFactory.getInstance(project).createVariableDeclaration(new String[]{"def"},null,PsiType.getJavaLangObject(PsiManager.getInstance(project),GlobalSearchScope.allScope(project)),"vetoableChange");
        GroovyResolveResultImpl vetoableChangeResult=new GroovyResolveResultImpl(vetoableChangeVar.getVariables()[0],true);
        if (!processor.execute(vetoableChangeResult.getElement(),ResolveState.initial()))         return false;
        break;
      }
    }
  }
  return true;
}
