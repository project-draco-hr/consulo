{
  final CompilerConfiguration config=CompilerConfiguration.getInstance(myProject);
  myCbEnableProcessing.setSelected(config.isAnnotationProcessorsEnabled());
  final boolean obtainFromClasspath=config.isObtainProcessorsFromClasspath();
  if (obtainFromClasspath) {
    myRbClasspath.setSelected(true);
  }
 else {
    myRbProcessorsPath.setSelected(true);
  }
  myProcessorPathField.setText(FileUtil.toSystemDependentName(config.getProcessorPath()));
  myProcessorsModel.setProcessorMap(config.getAnnotationProcessorsMap());
  myModulesTable.removeAllElements();
  for (  final Module module : ModuleManager.getInstance(myProject).getModules()) {
    if (config.isAnnotationProcessingEnabled(module)) {
      myModulesTable.addModule(module,config.getGeneratedSourceDirName(module));
    }
  }
  myModulesTable.sort(new Comparator<Module>(){
    public int compare(    Module o1,    Module o2){
      return o1.getName().compareToIgnoreCase(o2.getName());
    }
  }
);
}
