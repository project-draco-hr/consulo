{
  LOG.debug("invokeAfterUpdate for project: " + myProject.getName());
  final CallbackData data=createCallbackWrapperRunnable(afterUpdate,cancellable,silently,title,synchronously);
synchronized (myLock) {
    if (!myStopped) {
      myWaitingUpdateCompletionQueue.add(data.myCallback);
      schedule(true);
    }
  }
  if (myStopped) {
    LOG.debug("invokeAfterUpdate: stopped, invoke right now for project: " + myProject.getName());
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        afterUpdate.run();
      }
    }
);
    return;
  }
 else {
    if (data.myWrapperStarter != null) {
      data.myWrapperStarter.run();
    }
  }
  LOG.debug("invokeAfterUpdate: exit for project: " + myProject.getName());
}
