{
  final List<Runnable> copy=new ArrayList<Runnable>(myWaitingUpdateCompletionQueue.size());
  ScheduledData me=null;
  try {
    boolean updateUnversioned;
synchronized (myLock) {
      if ((!myStopped) && ((!myStarted) || myPlVcsManager.isBackgroundVcsOperationRunning())) {
        LOG.debug("MyRunnable: not started, not stopped, reschedule, project: " + myProject.getName() + ", runnable: "+ hashCode());
        mySentRequests.clear();
        schedule(myUpdateUnversionedRequested);
        return;
      }
      if (myStopped) {
        LOG.debug("MyRunnable: STOPPED, project: " + myProject.getName() + ", runnable: "+ hashCode());
        mySentRequests.clear();
        return;
      }
      me=takeMeRemoveDuplicates(this);
      if (me == null) {
        LOG.debug("MyRunnable: me == null, project: " + myProject.getName() + ", runnable: "+ hashCode());
        return;
      }
      copy.addAll(myWaitingUpdateCompletionQueue);
      updateUnversioned=myUpdateUnversionedRequested;
      myUpdateUnversionedRequested=false;
    }
    LOG.debug("MyRunnable: INVOKE, project: " + myProject.getName() + ", runnable: "+ hashCode());
    myAction.consume(updateUnversioned);
    LOG.debug("MyRunnable: invokeD, project: " + myProject.getName() + ", runnable: "+ hashCode());
  }
  finally {
    if (me != null) {
synchronized (myLock) {
        LOG.debug("MyRunnable: delete executed, project: " + myProject.getName() + ", runnable: "+ hashCode());
        mySentRequests.remove(me);
        if (!copy.isEmpty()) {
          myWaitingUpdateCompletionQueue.removeAll(copy);
        }
      }
      for (      Runnable runnable : copy) {
        runnable.run();
      }
      LOG.debug("MyRunnable: Runnables executed, project: " + myProject.getName() + ", runnable: "+ hashCode());
    }
  }
}
