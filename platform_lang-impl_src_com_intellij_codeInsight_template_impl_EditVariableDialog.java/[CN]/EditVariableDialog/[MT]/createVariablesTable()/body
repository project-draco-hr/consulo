{
  final String[] names={CodeInsightBundle.message("templates.dialog.edit.variables.table.column.name"),CodeInsightBundle.message("templates.dialog.edit.variables.table.column.expression"),CodeInsightBundle.message("templates.dialog.edit.variables.table.column.default.value"),CodeInsightBundle.message("templates.dialog.edit.variables.table.column.skip.if.defined")};
  TableModel dataModel=new VariablesModel(names);
  myTable=new JBTable(dataModel);
  myTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myTable.setPreferredScrollableViewportSize(new Dimension(500,myTable.getRowHeight() * 8));
  myTable.getColumn(names[0]).setPreferredWidth(120);
  myTable.getColumn(names[1]).setPreferredWidth(200);
  myTable.getColumn(names[2]).setPreferredWidth(200);
  myTable.getColumn(names[3]).setPreferredWidth(100);
  if (myVariables.size() > 0) {
    myTable.getSelectionModel().setSelectionInterval(0,0);
  }
  JComboBox comboField=new JComboBox();
  Macro[] macros=MacroFactory.getMacros();
  Arrays.sort(macros,new Comparator<Macro>(){
    @Override public int compare(    Macro m1,    Macro m2){
      return m1.getPresentableName().compareTo(m2.getPresentableName());
    }
  }
);
  eachMacro:   for (  Macro macro : macros) {
    for (    TemplateContextType contextType : myContextTypes) {
      if (macro.isAcceptableInContext(contextType)) {
        comboField.addItem(macro.getPresentableName());
        continue eachMacro;
      }
    }
  }
  comboField.setEditable(true);
  DefaultCellEditor cellEditor=new DefaultCellEditor(comboField);
  cellEditor.setClickCountToStart(1);
  myTable.getColumn(names[1]).setCellEditor(cellEditor);
  myTable.setRowHeight(comboField.getPreferredSize().height);
  JTextField textField=new JTextField();
  cellEditor=new DefaultCellEditor(textField);
  cellEditor.setClickCountToStart(1);
  myTable.setDefaultEditor(String.class,cellEditor);
  final ToolbarDecorator decorator=ToolbarDecorator.createDecorator(myTable).disableAddAction().disableRemoveAction();
  return decorator.createPanel();
}
