{
  super.visitClass(aClass);
  PsiElement child=aClass.getFirstChild();
  while (child != null) {
    if (child instanceof PsiJavaToken) {
      final PsiJavaToken token=(PsiJavaToken)child;
      final IElementType tokenType=token.getTokenType();
      if (tokenType.equals(JavaTokenType.SEMICOLON)) {
        final PsiElement prevSibling=skipBackwardWhiteSpacesAndComments(child);
        if (!(prevSibling instanceof PsiEnumConstant)) {
          registerError(child);
        }
      }
    }
    child=skipForwardWhiteSpacesAndComments(child);
  }
  if (!aClass.isEnum()) {
    return;
  }
  final PsiField[] fields=aClass.getFields();
  if (fields.length <= 0) {
    return;
  }
  final PsiField lastField=fields[fields.length - 1];
  if (!(lastField instanceof PsiEnumConstant)) {
    return;
  }
  final PsiElement element=skipForwardWhiteSpacesAndComments(lastField);
  if (!(element instanceof PsiJavaToken)) {
    return;
  }
  final PsiJavaToken token=(PsiJavaToken)element;
  final IElementType tokenType=token.getTokenType();
  if (!tokenType.equals(JavaTokenType.SEMICOLON)) {
    return;
  }
  final PsiElement next=skipForwardWhiteSpacesAndComments(element);
  if (next == null || !next.equals(aClass.getRBrace())) {
    return;
  }
  registerError(element);
}
