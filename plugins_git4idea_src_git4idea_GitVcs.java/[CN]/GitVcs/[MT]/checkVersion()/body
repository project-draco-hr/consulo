{
  final String executable=myAppSettings.getPathToGit();
synchronized (myCheckingVersion) {
    if (myVersion != null && myVersionCheckExcecutable.equals(executable)) {
      return;
    }
    myVersionCheckExcecutable=executable;
    myVersion=GitVersion.INVALID;
    final String version;
    try {
      version=version(myProject).trim();
    }
 catch (    VcsException e) {
      String reason=(e.getCause() != null ? e.getCause() : e).getMessage();
      if (!myProject.isDefault()) {
        showMessage(GitBundle.message("vcs.unable.to.run.git",executable,reason),ConsoleViewContentType.SYSTEM_OUTPUT.getAttributes());
      }
      return;
    }
    myVersion=GitVersion.parse(version);
    if (!GitVersion.parse(version).isSupported() && !myProject.isDefault()) {
      showMessage(GitBundle.message("vcs.unsupported.version",version,GitVersion.MIN),ConsoleViewContentType.SYSTEM_OUTPUT.getAttributes());
    }
  }
}
