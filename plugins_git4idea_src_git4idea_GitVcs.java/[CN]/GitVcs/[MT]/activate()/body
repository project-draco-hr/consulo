{
  if (!ApplicationManager.getApplication().isHeadlessEnvironment()) {
    if (myExecutableValidator.checkExecutableAndNotifyIfNeeded()) {
      checkVersion();
    }
  }
  if (!myProject.isDefault() && myRootTracker == null) {
    myRootTracker=new GitRootTracker(this,myProject,myRootListeners.getMulticaster());
  }
  if (myVFSListener == null) {
    myVFSListener=new GitVFSListener(myProject,this,myGit);
  }
  NewGitUsersComponent.getInstance(myProject).activate();
  GitProjectLogManager.getInstance(myProject).activate();
  if (!ApplicationManager.getApplication().isHeadlessEnvironment()) {
    StatusBar statusBar=WindowManager.getInstance().getStatusBar(myProject);
    if (statusBar != null) {
      myBranchWidget=new GitBranchWidget(myProject);
      statusBar.addWidget(myBranchWidget,"after " + (SystemInfo.isMac ? "Encoding" : "InsertOverwrite"),myProject);
    }
  }
  ((GitCommitsSequentialIndex)ServiceManager.getService(GitCommitsSequentially.class)).activate();
}
