{
  List<UsageInfo> allUsages=new ArrayList<UsageInfo>();
  ArrayList<String> conflicts=new ArrayList<String>();
  for (int idx=0; idx < myElementsToMove.length; idx++) {
    PsiElement element=myElementsToMove[idx];
    String newName=getNewQName(element);
    final UsageInfo[] usages=MoveClassesOrPackagesUtil.findUsages(element,mySearchInComments,mySearchInNonJavaFiles,newName);
    ArrayList<UsageInfo> usageInfos=new ArrayList<UsageInfo>(Arrays.asList(usages));
    EjbUsagesUtil.adjustEjbUsages(element,newName,usageInfos);
    allUsages.addAll(usageInfos);
  }
  myMoveDestination.analyzeModuleConflicts(Arrays.asList(myElementsToMove),conflicts);
  final UsageInfo[] usageInfos=allUsages.toArray(new UsageInfo[allUsages.size()]);
  detectPackageLocalsMoved(usageInfos,conflicts);
  detectPackageLocalsUsed(conflicts);
  if (conflicts.size() > 0) {
    allUsages.add(new ConflictsUsageInfo(myElementsToMove[0],conflicts));
  }
  return UsageViewUtil.removeDuplicatedUsages(allUsages.toArray(new UsageInfo[allUsages.size()]));
}
