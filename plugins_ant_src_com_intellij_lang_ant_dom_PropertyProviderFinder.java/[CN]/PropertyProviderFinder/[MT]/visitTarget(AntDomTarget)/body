{
  if (myStage == Stage.TARGETS_WALKUP_STAGE) {
    final String targetEffectiveName=myCurrentTargetEffectiveName.peek();
    if (!myProcessedTargets.contains(targetEffectiveName)) {
      myProcessedTargets.add(targetEffectiveName);
      final List<String> depsList=myDependenciesMap.get(targetEffectiveName);
      if (depsList != null) {
        for (        String dependencyName : depsList) {
          final AntDomTarget dependency=getTargetByName(dependencyName);
          if (dependency != null) {
            myCurrentTargetEffectiveName.push(dependencyName);
            try {
              dependency.accept(this);
            }
  finally {
              myCurrentTargetEffectiveName.pop();
            }
          }
        }
      }
      super.visitTarget(target);
    }
  }
 else   if (myStage == Stage.RESOLVE_MAP_BUILDING_STAGE) {
    final String declaredTargetName=target.getName().getRawText();
    String effectiveTargetName=null;
    final InclusionKind inclusionKind=myNameContext.getCurrentInclusionKind();
switch (inclusionKind) {
case IMPORT:
      if (!myTargetsResolveMap.containsKey(declaredTargetName)) {
        effectiveTargetName=declaredTargetName;
        final String alias=myNameContext.getShortPrefix() + declaredTargetName;
        myTargetsResolveMap.put(alias,target);
      }
 else {
        effectiveTargetName=myNameContext.getShortPrefix() + declaredTargetName;
      }
    break;
case INCLUDE:
  effectiveTargetName=myNameContext.getFQPrefix() + declaredTargetName;
break;
default :
if (!myTargetsResolveMap.containsKey(declaredTargetName)) {
effectiveTargetName=declaredTargetName;
}
break;
}
if (effectiveTargetName != null) {
myTargetsResolveMap.put(effectiveTargetName,target);
final String dependsStr=target.getDependsList().getStringValue();
Map<String,Pair<AntDomTarget,String>> depsMap=Collections.emptyMap();
if (dependsStr != null) {
depsMap=new HashMap<String,Pair<AntDomTarget,String>>();
final StringTokenizer tokenizer=new StringTokenizer(dependsStr,",",false);
while (tokenizer.hasMoreTokens()) {
final String token=tokenizer.nextToken().trim();
final String dependentTargetEffectiveName=myNameContext.calcTargetReferenceText(token);
final AntDomTarget dependent=getTargetByName(dependentTargetEffectiveName);
if (dependent != null) {
depsMap.put(token,new Pair<AntDomTarget,String>(dependent,dependentTargetEffectiveName));
}
addDependency(effectiveTargetName,dependentTargetEffectiveName);
}
}
targetDefined(target,effectiveTargetName,depsMap);
}
}
}
