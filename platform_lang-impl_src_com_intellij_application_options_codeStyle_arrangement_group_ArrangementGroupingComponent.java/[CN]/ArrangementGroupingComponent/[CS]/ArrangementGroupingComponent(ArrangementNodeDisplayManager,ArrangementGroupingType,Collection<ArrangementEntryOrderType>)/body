{
  myGroupingType=groupingType;
  FontMetrics metrics=getFontMetrics(getFont());
  int maxWidth=0;
  for (int i=0; i <= 99; i++) {
    maxWidth=Math.max(metrics.stringWidth(String.valueOf(i)),maxWidth);
  }
  int height=metrics.getHeight() - metrics.getDescent() - metrics.getLeading();
  int diameter=Math.max(maxWidth,height) * 5 / 3;
  myRowIndexControl=new ArrangementRuleIndexControl(diameter,height);
  myCheckedBox=new JBCheckBox();
  myCheckedBox.setBackground(UIUtil.getListBackground());
  myCheckedBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      refreshControl();
    }
  }
);
  myGroupingTypeLabel=new JLabel(displayManager.getDisplayValue(groupingType));
  myGroupingTypeLabel.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      myCheckedBox.setSelected(!myCheckedBox.isSelected());
    }
  }
);
  if (availableOrderTypes.isEmpty()) {
    myOrderTypeBox=null;
  }
 else {
    myOrderTypeBox=new JComboBox(availableOrderTypes.toArray());
    myOrderTypeBox.setRenderer(new ListCellRenderer(){
      @Override public Component getListCellRendererComponent(      JList list,      Object value,      int index,      boolean isSelected,      boolean cellHasFocus){
        return new JLabel(displayManager.getDisplayValue(value));
      }
    }
);
  }
  init();
}
