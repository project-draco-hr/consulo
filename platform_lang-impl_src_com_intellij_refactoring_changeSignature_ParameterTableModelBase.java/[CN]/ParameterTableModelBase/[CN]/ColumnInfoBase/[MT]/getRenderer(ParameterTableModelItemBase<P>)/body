{
  if (myRenderer == null) {
    final TableCellRenderer original=doCreateRenderer(item);
    final DefaultTableCellRenderer defaultRenderer=new DefaultTableCellRenderer();
    myRenderer=new TableCellRenderer(){
      public Component getTableCellRendererComponent(      JTable table,      Object value,      boolean isSelected,      boolean hasFocus,      int row,      int column){
        if (!table.isCellEditable(row,table.convertColumnIndexToModel(column))) {
          final Component c=defaultRenderer.getTableCellRendererComponent(table,null,isSelected,hasFocus,row,column);
          c.setBackground(UIUtil.getTableCellBackground(table,row));
          if (hasFocus && c instanceof JComponent) {
            final ListSelectionModel selModel=table.getSelectionModel();
            final Color color=(selModel.getMaxSelectionIndex() - selModel.getMinSelectionIndex()) == 0 ? table.getSelectionBackground() : table.getForeground();
            ((JComponent)c).setBorder(BorderFactory.createLineBorder(color));
          }
          return c;
        }
        Component component=original.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
        if (component instanceof EditorTextField) {
          ((EditorTextField)component).setCenterByHeight(false);
        }
        if (component instanceof SimpleColoredComponent) {
          ((SimpleColoredComponent)component).setIpad(new Insets(0,0,0,0));
        }
        return component;
      }
    }
;
  }
  return myRenderer;
}
