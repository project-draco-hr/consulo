{
  final Project project;
  final VirtualFile formFile;
  if (myEditor == null) {
    GuiEditor editor=FormEditingUtil.getEditorFromContext(e.getDataContext());
    project=editor.getProject();
    formFile=editor.getFile();
  }
 else {
    project=myEditor.getProject();
    formFile=myEditor.getFile();
  }
  try {
    final WizardData wizardData=new WizardData(project,formFile);
    final Module module=VfsUtil.getModuleForFile(wizardData.myProject,formFile);
    LOG.assertTrue(module != null);
    final LwRootContainer[] rootContainer=new LwRootContainer[1];
    Generator.exposeForm(wizardData.myProject,formFile,rootContainer);
    final String classToBind=rootContainer[0].getClassToBind();
    if (classToBind == null) {
      Messages.showInfoMessage(project,UIDesignerBundle.message("info.form.not.bound"),UIDesignerBundle.message("title.data.binding.wizard"));
      return;
    }
    final PsiClass boundClass=FormEditingUtil.findClassToBind(module,classToBind);
    if (boundClass == null) {
      Messages.showErrorDialog(project,UIDesignerBundle.message("error.bound.to.not.found.class",classToBind),UIDesignerBundle.message("title.data.binding.wizard"));
      return;
    }
    Generator.prepareWizardData(wizardData,boundClass);
    if (!hasBinding(rootContainer[0])) {
      Messages.showInfoMessage(project,UIDesignerBundle.message("info.no.bound.components"),UIDesignerBundle.message("title.data.binding.wizard"));
      return;
    }
    if (!wizardData.myBindToNewBean) {
      final String[] variants=new String[]{UIDesignerBundle.message("action.alter.data.binding"),UIDesignerBundle.message("action.bind.to.another.bean"),CommonBundle.getCancelButtonText()};
      final int result=Messages.showDialog(project,MessageFormat.format(UIDesignerBundle.message("info.data.binding.regenerate"),wizardData.myBeanClass.getQualifiedName()),UIDesignerBundle.message("title.data.binding"),variants,0,Messages.getQuestionIcon());
      if (result == 0) {
      }
 else       if (result == 1) {
        wizardData.myBindToNewBean=true;
      }
 else {
        return;
      }
    }
    final DataBindingWizard wizard=new DataBindingWizard(project,formFile,wizardData);
    wizard.show();
  }
 catch (  Generator.MyException exc) {
    Messages.showErrorDialog(project,exc.getMessage(),CommonBundle.getErrorTitle());
  }
}
