{
  final PsiElement element=psiReference.getElement();
  if (element == null)   return true;
  String alias=getAlias(element);
  if (alias == null)   return true;
  final PsiFile containingFile=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile>(){
    public PsiFile compute(){
      return element.getContainingFile();
    }
  }
);
  if (prefix != null) {
    if (!PsiManager.getInstance(element.getProject()).getSearchHelper().processElementsWithWord(processor,GlobalSearchScope.fileScope(containingFile),prefix + GroovyPropertyUtils.capitalize(alias),UsageSearchContext.IN_CODE,false)) {
      return false;
    }
  }
  return PsiManager.getInstance(element.getProject()).getSearchHelper().processElementsWithWord(processor,GlobalSearchScope.fileScope(containingFile),alias,UsageSearchContext.IN_CODE,false);
}
