{
  final PsiElement elementToSearch=parameters.getElementToSearch();
  if (!(elementToSearch instanceof PsiMember))   return true;
  if (I_WAS_HERE.get() != null)   return true;
  try {
    I_WAS_HERE.set(Boolean.TRUE);
    final TextOccurenceProcessor processor=new MyTextOccurenceProcessor(elementToSearch,consumer);
    final SearchScope groovySearchScope=PsiUtil.restrictScopeToGroovyFiles(new Computable<SearchScope>(){
      public SearchScope compute(){
        return parameters.getEffectiveSearchScope();
      }
    }
);
    if (!ReferencesSearch.search(elementToSearch,groovySearchScope).forEach(new MyProcessor(null,processor)))     return false;
    if (elementToSearch instanceof PsiMethod && isAccessor(elementToSearch)) {
      final PsiField field=ApplicationManager.getApplication().runReadAction(new Computable<PsiField>(){
        public PsiField compute(){
          return GroovyPropertyUtils.findFieldForAccessor((PsiMethod)elementToSearch,true);
        }
      }
);
      if (field != null) {
        final String prefix=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
          public String compute(){
            return GroovyPropertyUtils.getAccessorPrefix((PsiMethod)elementToSearch);
          }
        }
);
        if (prefix == null)         return true;
        if (!ReferencesSearch.search(field,groovySearchScope).forEach(new MyProcessor(prefix,processor)))         return false;
      }
    }
    return true;
  }
  finally {
    I_WAS_HERE.set(null);
  }
}
