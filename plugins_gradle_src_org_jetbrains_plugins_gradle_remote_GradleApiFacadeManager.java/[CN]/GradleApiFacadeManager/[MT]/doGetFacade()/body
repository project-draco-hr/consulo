{
  Pair<GradleApiFacade,RemoteGradleProcessSettings> pair=myFacade.get();
  if (pair != null) {
    if (isValid(pair)) {
      return pair.first;
    }
    mySupport.stopAll(true);
    myFacade.compareAndSet(pair,null);
  }
  GradleApiFacade result=mySupport.acquire(this,"");
  if (result == null) {
    throw new IllegalStateException("Can't obtain facade to working with gradle api at the remote process");
  }
  Pair<GradleApiFacade,RemoteGradleProcessSettings> newPair=new Pair<GradleApiFacade,RemoteGradleProcessSettings>(result,getRemoteSettings());
  if (!myFacade.compareAndSet(null,newPair)) {
    GradleLog.LOG.warn("Detected unexpected duplicate tooling api facade instance creation");
    return myFacade.get().first;
  }
  result.applySettings(getRemoteSettings());
  RemoteGradleProgressNotificationManager exported=(RemoteGradleProgressNotificationManager)UnicastRemoteObject.exportObject(myProgressManager,0);
  if (exported == null) {
    GradleLog.LOG.warn("Can't export progress manager");
  }
 else {
    result.applyProgressManager(exported);
  }
  return result;
}
