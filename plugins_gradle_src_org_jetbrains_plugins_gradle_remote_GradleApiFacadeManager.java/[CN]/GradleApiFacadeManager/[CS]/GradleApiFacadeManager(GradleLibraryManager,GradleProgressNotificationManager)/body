{
  myGradleLibraryManager=gradleLibraryManager;
  myProgressManager=(GradleProgressNotificationManagerImpl)manager;
  mySupport=new RemoteProcessSupport<Object,GradleApiFacade,Object>(GradleApiFacade.class){
    @Override protected void fireModificationCountChanged(){
    }
    @Override protected String getName(    Object o){
      return GradleApiFacade.class.getName();
    }
    @Override protected RunProfileState getRunProfileState(    Object o,    Object configuration,    Executor executor) throws ExecutionException {
      return createRunProfileState();
    }
  }
;
  myApiFacade=(GradleApiFacade)Proxy.newProxyInstance(GradleApiFacadeManager.class.getClassLoader(),new Class[]{GradleApiFacade.class},new MyHandler());
  ShutDownTracker.getInstance().registerShutdownTask(new Runnable(){
    public void run(){
      shutdown(false);
    }
  }
);
}
