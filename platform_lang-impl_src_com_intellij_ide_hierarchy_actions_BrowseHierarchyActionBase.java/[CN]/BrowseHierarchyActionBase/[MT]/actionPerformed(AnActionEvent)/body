{
  final DataContext dataContext=e.getDataContext();
  final Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  if (project == null)   return;
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  final HierarchyProvider provider=getProvider(e);
  if (provider == null)   return;
  final PsiElement target=provider.getTarget(dataContext);
  if (target == null)   return;
  final HierarchyBrowser hierarchyBrowser=provider.createHierarchyBrowser(target);
  final Content content;
  final HierarchyBrowserManager hierarchyBrowserManager=HierarchyBrowserManager.getInstance(project);
  final ContentManager contentManager=hierarchyBrowserManager.getContentManager();
  final Content selectedContent=contentManager.getSelectedContent();
  if (selectedContent != null && !selectedContent.isPinned()) {
    content=selectedContent;
    final Component component=content.getComponent();
    if (component instanceof Disposable) {
      Disposer.dispose((Disposable)component);
    }
    content.setComponent(hierarchyBrowser.getComponent());
  }
 else {
    content=ContentFactory.SERVICE.getInstance().createContent(hierarchyBrowser.getComponent(),null,true);
    contentManager.addContent(content);
  }
  contentManager.setSelectedContent(content);
  hierarchyBrowser.setContent(content);
  final Runnable runnable=new Runnable(){
    public void run(){
      provider.browserActivated(hierarchyBrowser);
    }
  }
;
  ToolWindowManager.getInstance(project).getToolWindow(ToolWindowId.HIERARCHY).activate(runnable);
}
