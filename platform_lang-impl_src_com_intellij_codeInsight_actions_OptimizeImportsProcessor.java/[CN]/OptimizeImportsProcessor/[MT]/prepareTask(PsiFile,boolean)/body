{
  final Set<ImportOptimizer> optimizers=LanguageImportStatements.INSTANCE.forFile(file);
  final List<Runnable> runnables=new ArrayList<Runnable>();
  List<PsiFile> files=file.getViewProvider().getAllFiles();
  for (  ImportOptimizer optimizer : optimizers) {
    for (    PsiFile psiFile : files) {
      if (optimizer.supports(psiFile)) {
        runnables.add(optimizer.processFile(psiFile));
      }
    }
  }
  Runnable runnable=runnables.isEmpty() ? EmptyRunnable.getInstance() : new Runnable(){
    @Override public void run(){
      CodeStyleManagerImpl.setSequentialProcessingAllowed(false);
      try {
        for (        Runnable runnable : runnables)         runnable.run();
      }
  finally {
        CodeStyleManagerImpl.setSequentialProcessingAllowed(true);
      }
    }
  }
;
  return new FutureTask<Boolean>(runnable,true);
}
