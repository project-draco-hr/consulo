{
  super.run(indicator);
  for (  PsiElement element : myGotoData.targets) {
    if (!updateComponent(element,createComparator(renderers,myGotoData))) {
      return;
    }
  }
  new ImplementationSearcher.BackgroundableImplementationSearcher(){
    @Override protected void processElement(    PsiElement element){
      indicator.checkCanceled();
      if (!TargetElementUtilBase.getInstance().acceptImplementationForReference(myReference,element))       return;
      if (myGotoData.addTarget(element)) {
        if (!updateComponent(element,createComparator(renderers,myGotoData))) {
          indicator.cancel();
        }
      }
    }
  }
.searchImplementations(myEditor,myGotoData.source,myOffset);
}
