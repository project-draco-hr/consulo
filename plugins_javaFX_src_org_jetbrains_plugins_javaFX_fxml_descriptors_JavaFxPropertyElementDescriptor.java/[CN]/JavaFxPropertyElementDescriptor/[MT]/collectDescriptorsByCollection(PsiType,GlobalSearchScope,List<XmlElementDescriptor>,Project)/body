{
  final PsiType collectionItemType=GenericsHighlightUtil.getCollectionItemType(psiType,resolveScope);
  if (collectionItemType != null) {
    final PsiClass aClass=PsiUtil.resolveClassInType(collectionItemType);
    if (aClass != null) {
      ClassInheritorsSearch.search(aClass).forEach(new Processor<PsiClass>(){
        @Override public boolean process(        PsiClass aClass){
          descriptors.add(new JavaFxClassBackedElementDescriptor(aClass.getName(),aClass));
          return true;
        }
      }
);
      descriptors.add(new JavaFxClassBackedElementDescriptor(aClass.getName(),aClass));
    }
  }
 else   if (InheritanceUtil.isInheritor(psiType,JavaFxCommonClassNames.JAVAFX_BEANS_PROPERTY)) {
    final PsiType propertyType=JavaFxPsiUtil.getPropertyType(psiType,project);
    final PsiClass aClass=PsiUtil.resolveClassInType(propertyType);
    if (aClass != null) {
      descriptors.add(new JavaFxClassBackedElementDescriptor(aClass.getName(),aClass));
    }
  }
}
