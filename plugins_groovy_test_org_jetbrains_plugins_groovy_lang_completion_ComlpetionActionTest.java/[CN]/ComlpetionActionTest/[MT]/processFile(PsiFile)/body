{
  String result;
  String fileText=file.getText();
  int offset=fileText.indexOf(CARET_MARKER);
  fileText=removeMarker(fileText);
  myFile=TestUtils.createPseudoPhysicalFile(project,fileText);
  fileEditorManager=FileEditorManager.getInstance(project);
  myEditor=fileEditorManager.openTextEditor(new OpenFileDescriptor(project,myFile.getVirtualFile(),0),false);
  myEditor.getCaretModel().moveToOffset(offset);
  final CodeInsightActionHandler handler=getCompetionHandler();
  final CompletionContext context=new CompletionContext(project,myEditor,myFile,0,myOffset);
  CompletionData data=CompletionUtil.getCompletionDataByElement(myFile.findElementAt(myOffset),context);
  LookupItem[] items=getAcceptableItems(data);
  try {
    performAction(project,new Runnable(){
      public void run(){
        handler.invoke(project,myEditor,myFile);
      }
    }
);
    offset=myEditor.getCaretModel().getOffset();
    result=myEditor.getDocument().getText();
    result=result.substring(0,offset) + CARET_MARKER + result.substring(offset);
    if (items.length > 0) {
      result=result + "\n#####";
      Arrays.sort(items);
      for (      LookupItem item : items) {
        result=result + "\n" + item.getLookupString();
      }
    }
  }
  finally {
    fileEditorManager.closeFile(myFile.getVirtualFile());
    myEditor=null;
  }
  return result;
}
