{
  myUsageInfo=usageInfo;
  myMergedUsageInfos.add(usageInfo);
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    @Override public void run(){
      PsiElement element=getElement();
      Document document=getDocument();
      int startOffset=myUsageInfo.getNavigationOffset();
      if (document != null) {
        myLineNumber=getLineNumber(document,startOffset);
        initChunks();
      }
 else {
        TextChunk[] chunks={new TextChunk(new TextAttributes(),element.getText())};
        myTextChunks=new SoftReference<TextChunk[]>(chunks);
        myOffset=element.getTextOffset();
      }
      if (element instanceof PsiFile) {
        myIcon=null;
      }
 else {
        myIcon=new ComputableIcon(new Computable<Icon>(){
          @Override public Icon compute(){
            PsiElement psiElement=getElement();
            return psiElement != null && psiElement.isValid() ? psiElement.getIcon(0) : null;
          }
        }
);
      }
      myTooltipText=usageInfo.getTooltipText();
    }
  }
);
  myModificationStamp=getCurrentModificationStamp();
}
