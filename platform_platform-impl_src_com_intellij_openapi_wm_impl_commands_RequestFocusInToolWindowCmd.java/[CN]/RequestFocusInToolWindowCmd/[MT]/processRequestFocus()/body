{
  try {
    if (myTimestamp.isExpired()) {
      return;
    }
    Component preferredFocusedComponent=myFocusWatcher.getFocusedComponent();
    if (preferredFocusedComponent == null && myToolWindow.getContentManager().getSelectedContent() != null) {
      preferredFocusedComponent=myToolWindow.getContentManager().getSelectedContent().getPreferredFocusableComponent();
      if (preferredFocusedComponent != null) {
        preferredFocusedComponent=IdeFocusTraversalPolicy.getPreferredFocusedComponent((JComponent)preferredFocusedComponent);
      }
    }
    if (preferredFocusedComponent == null) {
      preferredFocusedComponent=myFocusWatcher.getNearestFocusableComponent();
      if (preferredFocusedComponent instanceof JComponent) {
        preferredFocusedComponent=IdeFocusTraversalPolicy.getPreferredFocusedComponent((JComponent)preferredFocusedComponent);
      }
    }
    if (preferredFocusedComponent != null) {
      if (!preferredFocusedComponent.isShowing()) {
        preferredFocusedComponent=null;
      }
    }
    if (preferredFocusedComponent == null) {
      final JComponent component=myToolWindow.getComponent();
      preferredFocusedComponent=IdeFocusTraversalPolicy.getPreferredFocusedComponent(component);
    }
    if (preferredFocusedComponent != null) {
      requestFocus(preferredFocusedComponent).doWhenDone(new Runnable(){
        public void run(){
          bringOwnerToFront();
        }
      }
);
    }
 else {
      final JComponent componentToFocus=myToolWindow.getComponent();
      requestFocus(componentToFocus).doWhenDone(new Runnable(){
        public void run(){
          bringOwnerToFront();
        }
      }
);
    }
  }
  finally {
    finish();
  }
}
