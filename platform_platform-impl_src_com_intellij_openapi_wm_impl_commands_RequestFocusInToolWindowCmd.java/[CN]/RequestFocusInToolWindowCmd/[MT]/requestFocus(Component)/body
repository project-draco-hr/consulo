{
  final ActionCallback result=new ActionCallback();
  final Alarm checkerAlarm=new Alarm(result);
  Runnable checker=new Runnable(){
    final long startTime=System.currentTimeMillis();
    @Override public void run(){
      if (System.currentTimeMillis() - startTime > 10000) {
        result.setRejected();
        return;
      }
      if (c.isShowing()) {
        final Component owner=KeyboardFocusManager.getCurrentKeyboardFocusManager().getPermanentFocusOwner();
        if (owner != null && owner == c) {
          myManager.getFocusManager().requestFocus(new FocusCommand(){
            @Override @NotNull public ActionCallback run(){
              return new ActionCallback.Done();
            }
          }
,myForced).doWhenProcessed(new Runnable(){
            @Override public void run(){
              updateToolWindow(c);
            }
          }
).notify(result);
        }
 else {
          myManager.getFocusManager().requestFocus(new FocusCommand.ByComponent(c,myToolWindow.getComponent(),new Exception()),myForced).doWhenProcessed(new Runnable(){
            @Override public void run(){
              updateToolWindow(c);
            }
          }
).notify(result);
        }
      }
 else {
        checkerAlarm.addRequest(this,100);
      }
    }
  }
;
  checkerAlarm.addRequest(checker,0);
  return result;
}
