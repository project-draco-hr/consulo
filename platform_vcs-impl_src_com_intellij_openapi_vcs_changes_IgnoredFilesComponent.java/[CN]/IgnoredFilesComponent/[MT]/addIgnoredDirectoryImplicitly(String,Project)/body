{
  myWriteLock.lock();
  try {
    if (myDirectoriesManuallyRemovedFromIgnored.contains(path) || myDirectoriesManuallyRemovedFromIgnored.contains(path + "/")) {
      return;
    }
    for (    IgnoredFileBean bean : myFilesToIgnore) {
      if (bean.getType() == IgnoreSettingsType.UNDER_DIR && FileUtil.isAncestor(bean.getPath(),path,false)) {
        return;
      }
    }
    List<IgnoredFileBean> toRemove=new ArrayList<>();
    for (    IgnoredFileBean bean : myFilesToIgnore) {
      if ((bean.getType() == IgnoreSettingsType.UNDER_DIR || bean.getType() == IgnoreSettingsType.FILE) && FileUtil.isAncestor(path,bean.getPath(),false)) {
        toRemove.add(bean);
      }
    }
    myFilesToIgnore.removeAll(toRemove);
    myFilesToIgnore.add(IgnoredBeanFactory.ignoreUnderDirectory(path,project));
  }
  finally {
    myWriteLock.unlock();
  }
}
