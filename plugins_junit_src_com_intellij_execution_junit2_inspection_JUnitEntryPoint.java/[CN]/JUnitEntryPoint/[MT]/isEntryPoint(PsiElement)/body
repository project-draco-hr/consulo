{
  if (ADD_JUNIT_TO_ENTRIES) {
    if (psiElement instanceof PsiClass) {
      final PsiClass aClass=(PsiClass)psiElement;
      if (JUnitUtil.isTestClass(aClass,false,true)) {
        if (!PsiClassUtil.isRunnableClass(aClass,true,true)) {
          final CommonProcessors.FindProcessor<PsiClass> findProcessor=new CommonProcessors.FindProcessor<PsiClass>(){
            @Override protected boolean accept(            PsiClass psiClass){
              return !psiClass.hasModifierProperty(PsiModifier.ABSTRACT);
            }
          }
;
          return !ClassInheritorsSearch.search(aClass).forEach(findProcessor) && findProcessor.isFound();
        }
        return true;
      }
    }
 else     if (psiElement instanceof PsiMethod) {
      final PsiMethod method=(PsiMethod)psiElement;
      if (method.isConstructor() && method.getParameterList().getParametersCount() == 0) {
        return JUnitUtil.isTestClass(method.getContainingClass());
      }
      if (JUnitUtil.isTestMethodOrConfig(method))       return true;
    }
  }
  return false;
}
