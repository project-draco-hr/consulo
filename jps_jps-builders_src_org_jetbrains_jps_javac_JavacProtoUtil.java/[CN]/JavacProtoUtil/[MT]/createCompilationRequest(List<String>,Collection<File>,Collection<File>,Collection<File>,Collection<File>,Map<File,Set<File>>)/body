{
  final JavacRemoteProto.Message.Request.Builder builder=JavacRemoteProto.Message.Request.newBuilder();
  builder.setRequestType(JavacRemoteProto.Message.Request.Type.COMPILE);
  builder.addAllOption(options);
  for (  File file : files) {
    builder.addFile(FileUtil.toSystemIndependentName(file.getPath()));
  }
  for (  File file : classpath) {
    builder.addClasspath(FileUtil.toSystemIndependentName(file.getPath()));
  }
  for (  File file : platformCp) {
    builder.addPlatformClasspath(FileUtil.toSystemIndependentName(file.getPath()));
  }
  for (  File file : sourcePath) {
    builder.addSourcepath(FileUtil.toSystemIndependentName(file.getPath()));
  }
  for (  Map.Entry<File,Set<File>> entry : outs.entrySet()) {
    final JavacRemoteProto.Message.Request.OutputGroup.Builder groupBuilder=JavacRemoteProto.Message.Request.OutputGroup.newBuilder();
    groupBuilder.setOutputRoot(FileUtil.toSystemIndependentName(entry.getKey().getPath()));
    for (    File srcRoot : entry.getValue()) {
      groupBuilder.addSourceRoot(FileUtil.toSystemIndependentName(srcRoot.getPath()));
    }
    builder.addOutput(groupBuilder.build());
  }
  return builder.build();
}
