{
  JPanel panel=new JPanel(new BorderLayout());
  myMemberSelectionPanel=new MemberSelectionPanel(RefactoringBundle.message("members.to.be.pulled.up"),myMemberInfos,RefactoringBundle.message("make.abstract"));
  myMemberInfoModel=new MyMemberInfoModel();
  myMemberInfoModel.memberInfoChanged(new MemberInfoChange<PsiMember,MemberInfo>(myMemberInfos));
  myMemberSelectionPanel.getTable().setMemberInfoModel(myMemberInfoModel);
  myMemberSelectionPanel.getTable().addMemberInfoChangeListener(myMemberInfoModel);
  panel.add(myMemberSelectionPanel,BorderLayout.CENTER);
  myJavaDocPanel=new DocCommentPanel(RefactoringBundle.message("javadoc.for.abstracts"));
  myJavaDocPanel.setPolicy(JavaRefactoringSettings.getInstance().PULL_UP_MEMBERS_JAVADOC);
  boolean hasJavadoc=false;
  for (  MemberInfo info : myMemberInfos) {
    final PsiMember member=info.getMember();
    if (myMemberInfoModel.isAbstractEnabled(info) && member instanceof PsiDocCommentOwner && ((PsiDocCommentOwner)member).getDocComment() != null) {
      hasJavadoc=true;
      break;
    }
  }
  UIUtil.setEnabled(myJavaDocPanel,hasJavadoc,true);
  panel.add(myJavaDocPanel,BorderLayout.EAST);
  return panel;
}
