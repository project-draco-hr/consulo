{
  PsiElement position=parameters.getPosition();
  if (!inComment(position)) {
    if (AFTER_DOUBLE_COLON.accepts(position)) {
      PsiMethodReferenceExpression parent=PsiTreeUtil.getParentOfType(parameters.getPosition(),PsiMethodReferenceExpression.class);
      TailType tail=parent != null && !LambdaHighlightingUtil.insertSemicolon(parent.getParent()) ? TailType.SEMICOLON : TailType.NONE;
      result.addElement(new OverrideableSpace(createKeyword(position,PsiKeyword.NEW),tail));
      return;
    }
    if (isSuitableForClass(position)) {
      PsiElement scope=position.getParent();
      while (scope != null && !(scope instanceof PsiFile)) {
        if (scope instanceof PsiClass && ((PsiClass)scope).isInterface()) {
          result.addElement(new OverrideableSpace(createKeyword(position,PsiKeyword.DEFAULT),TailType.HUMBLE_SPACE_BEFORE_WORD));
          break;
        }
        scope=scope.getParent();
      }
    }
  }
  super.fillCompletions(parameters,result);
}
