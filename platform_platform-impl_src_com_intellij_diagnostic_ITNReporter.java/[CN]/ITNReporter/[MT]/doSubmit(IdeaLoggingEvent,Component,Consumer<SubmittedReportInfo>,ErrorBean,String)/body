{
  final DataContext dataContext=DataManager.getInstance().getDataContext(parentComponent);
  final Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  final ErrorReportConfigurable errorReportConfigurable=ErrorReportConfigurable.getInstance();
  if (!errorReportConfigurable.KEEP_ITN_PASSWORD && !StringUtil.isEmpty(errorReportConfigurable.ITN_LOGIN) && StringUtil.isEmpty(errorReportConfigurable.getPlainItnPassword())) {
    final JetBrainsAccountDialog dlg=new JetBrainsAccountDialog(parentComponent);
    dlg.show();
    if (!dlg.isOK()) {
      return;
    }
  }
  @NonNls String login=errorReportConfigurable.ITN_LOGIN;
  @NonNls String password=errorReportConfigurable.getPlainItnPassword();
  if (login.trim().length() == 0 && password.trim().length() == 0) {
    login="idea_anonymous";
    password="guest";
  }
  errorBean.setDescription(buildDescription(event,description));
  ErrorReportSender.sendError(project,login,password,errorBean,new Consumer<Integer>(){
    @SuppressWarnings({"AssignmentToStaticFieldFromInstanceMethod"}) @Override public void consume(    Integer threadId){
      previousExceptionThreadId=threadId;
      wasException=true;
      callback.consume(new SubmittedReportInfo(URL_HEADER + threadId,String.valueOf(threadId),SubmittedReportInfo.SubmissionStatus.NEW_ISSUE));
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          ReportMessages.GROUP.createNotification(ReportMessages.ERROR_REPORT,DiagnosticBundle.message("error.report.confirmation"),NotificationType.INFORMATION,null).notify(project);
        }
      }
);
    }
  }
,new Consumer<Exception>(){
    @Override public void consume(    final Exception e){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          String msg;
          if (e instanceof NoSuchEAPUserException) {
            msg=DiagnosticBundle.message("error.report.authentication.failed");
          }
 else           if (e instanceof InternalEAPException) {
            msg=DiagnosticBundle.message("error.report.posting.failed",e.getMessage());
          }
 else {
            msg=DiagnosticBundle.message("error.report.sending.failure");
          }
          if (Messages.showYesNoDialog(project,msg,ReportMessages.ERROR_REPORT,Messages.getErrorIcon()) != 0) {
            callback.consume(new SubmittedReportInfo(null,"0",SubmittedReportInfo.SubmissionStatus.FAILED));
          }
 else {
            if (e instanceof NoSuchEAPUserException) {
              final JetBrainsAccountDialog dialog;
              if (parentComponent.isShowing()) {
                dialog=new JetBrainsAccountDialog(parentComponent);
              }
 else {
                dialog=new JetBrainsAccountDialog(project);
              }
              dialog.show();
            }
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              @Override public void run(){
                doSubmit(event,parentComponent,callback,errorBean,description);
              }
            }
);
          }
        }
      }
);
    }
  }
);
}
