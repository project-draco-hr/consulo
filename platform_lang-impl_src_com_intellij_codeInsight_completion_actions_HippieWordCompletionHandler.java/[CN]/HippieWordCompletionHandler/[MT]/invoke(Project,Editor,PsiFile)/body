{
  if (!FileModificationService.getInstance().prepareFileForWrite(file))   return;
  LookupManager.getInstance(project).hideActiveLookup();
  final CharSequence charsSequence=editor.getDocument().getCharsSequence();
  final CompletionData data=computeData(editor,charsSequence);
  String currentPrefix=data.myPrefix;
  final CompletionState completionState=getCompletionState(editor);
  String oldPrefix=completionState.oldPrefix;
  CompletionVariant lastProposedVariant=completionState.lastProposedVariant;
  if (lastProposedVariant == null || oldPrefix == null || !new CamelHumpMatcher(oldPrefix).isStartMatch(currentPrefix) || !currentPrefix.equals(lastProposedVariant.variant)) {
    oldPrefix=currentPrefix;
    completionState.oldPrefix=oldPrefix;
    lastProposedVariant=null;
  }
  CompletionVariant nextVariant=computeNextVariant(editor,oldPrefix,lastProposedVariant,data,file);
  if (nextVariant == null)   return;
  int replacementEnd=data.startOffset + data.myWordUnderCursor.length();
  editor.getDocument().replaceString(data.startOffset,replacementEnd,nextVariant.variant);
  editor.getCaretModel().moveToOffset(data.startOffset + nextVariant.variant.length());
  completionState.lastProposedVariant=nextVariant;
  highlightWord(nextVariant,project,data);
}
