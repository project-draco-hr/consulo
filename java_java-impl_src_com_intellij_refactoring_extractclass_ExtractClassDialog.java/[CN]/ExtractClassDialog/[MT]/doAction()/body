{
  final List<PsiField> fields=getFieldsToExtract();
  final List<PsiMethod> methods=getMethodsToExtract();
  final List<PsiClass> classes=getClassesToExtract();
  final String newClassName=getClassName();
  final String packageName=getPackageName();
  Collections.sort(enumConstants,new Comparator<MemberInfo>(){
    public int compare(    MemberInfo o1,    MemberInfo o2){
      return o1.getMember().getTextOffset() - o2.getMember().getTextOffset();
    }
  }
);
  final ExtractClassProcessor processor=new ExtractClassProcessor(sourceClass,fields,methods,classes,packageName,newClassName,myVisibilityPanel.getVisibility(),isGenerateAccessors(),isExtractAsEnum() ? enumConstants : Collections.<MemberInfo>emptyList());
  if (processor.getCreatedClass() == null) {
    Messages.showErrorDialog(myVisibilityPanel,"Unable to create class with the given name");
    classNameField.requestFocusInWindow();
    return;
  }
  invokeRefactoring(processor);
}
