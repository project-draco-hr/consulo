{
  final HighlightVisitor[] highlightVisitors=createHighlightVisitors(progress);
  final Collection<HighlightInfo> result=new THashSet<HighlightInfo>(100);
  DaemonCodeAnalyzer daemonCodeAnalyzer=DaemonCodeAnalyzer.getInstance(myProject);
  FileStatusMap fileStatusMap=((DaemonCodeAnalyzerImpl)daemonCodeAnalyzer).getFileStatusMap();
  boolean finishedSuccessfully=false;
  try {
    final FileViewProvider viewProvider=myFile.getViewProvider();
    final Set<Language> relevantLanguages=viewProvider.getPrimaryLanguages();
    for (    Language language : relevantLanguages) {
      PsiElement psiRoot=viewProvider.getPsi(language);
      if (!HighlightLevelUtil.shouldHighlight(psiRoot))       continue;
      List<PsiElement> elements=CodeInsightUtil.getElementsInRange(psiRoot,myStartOffset,myEndOffset);
      if (elements.isEmpty()) {
        elements=Collections.singletonList(psiRoot);
      }
      result.addAll(collectHighlights(elements,highlightVisitors));
      result.addAll(highlightTodos());
      addInjectedPsiHighlights(elements);
    }
    if (myUpdateAll) {
      fileStatusMap.setErrorFoundFlag(myDocument,myErrorFound);
    }
    finishedSuccessfully=true;
  }
  finally {
    releaseHighlightVisitors(highlightVisitors,finishedSuccessfully);
  }
  myHighlights=result;
}
