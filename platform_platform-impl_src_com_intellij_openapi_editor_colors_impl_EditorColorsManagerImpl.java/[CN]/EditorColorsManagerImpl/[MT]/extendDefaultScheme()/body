{
  final EditorColorsScheme defaultColorsScheme=mySchemesManager.findSchemeByName("Default");
  for (  BundledColorSchemesProvider provider : BundledColorSchemesProvider.EP_NAME.getExtensions()) {
    final String extensionPath;
    try {
      extensionPath=provider.getDefaultSchemaExtensionPath();
    }
 catch (    AbstractMethodError e) {
      continue;
    }
    if (extensionPath == null) {
      continue;
    }
    try {
      final EditorColorsSchemeImpl extScheme=loadScheme(extensionPath,provider);
      if (extScheme != null) {
        for (        Map.Entry<TextAttributesKey,TextAttributes> keyTextAttributesEntry : extScheme.myAttributesMap.entrySet()) {
          final TextAttributesKey key=keyTextAttributesEntry.getKey();
          final TextAttributes attrs=keyTextAttributesEntry.getValue();
          ((AbstractColorsScheme)defaultColorsScheme).myAttributesMap.put(key,attrs);
        }
        for (        Map.Entry<ColorKey,Color> keyColorEntry : extScheme.myColorsMap.entrySet()) {
          final ColorKey key=keyColorEntry.getKey();
          final Color color=keyColorEntry.getValue();
          ((AbstractColorsScheme)defaultColorsScheme).myColorsMap.put(key,color);
        }
      }
    }
 catch (    final Exception e) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          LOG.error("Cannot read scheme from " + extensionPath + ": "+ e.getLocalizedMessage(),e);
        }
      }
);
    }
  }
}
