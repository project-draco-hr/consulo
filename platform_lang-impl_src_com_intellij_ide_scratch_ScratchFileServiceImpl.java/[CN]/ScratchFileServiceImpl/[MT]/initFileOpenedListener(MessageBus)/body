{
  final FileEditorManagerAdapter editorListener=new FileEditorManagerAdapter(){
    @Override public void fileOpened(    @NotNull FileEditorManager source,    @NotNull VirtualFile file){
      if (!isEditable(file))       return;
      RootType rootType=getRootType(file);
      if (rootType == null)       return;
      rootType.fileOpened(file,source);
    }
    @Override public void fileClosed(    @NotNull FileEditorManager source,    @NotNull VirtualFile file){
      if (Boolean.TRUE.equals(file.getUserData(FileEditorManagerImpl.CLOSING_TO_REOPEN)))       return;
      if (!isEditable(file))       return;
      RootType rootType=getRootType(file);
      if (rootType == null)       return;
      rootType.fileClosed(file,source);
    }
    boolean isEditable(    @NotNull VirtualFile file){
      return FileDocumentManager.getInstance().getDocument(file) != null;
    }
  }
;
  ProjectManagerAdapter projectListener=new ProjectManagerAdapter(){
    @Override public void projectOpened(    Project project){
      project.getMessageBus().connect(project).subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,editorListener);
      FileEditorManager editorManager=FileEditorManager.getInstance(project);
      for (      VirtualFile virtualFile : editorManager.getOpenFiles()) {
        editorListener.fileOpened(editorManager,virtualFile);
      }
    }
  }
;
  for (  Project project : ProjectManager.getInstance().getOpenProjects()) {
    projectListener.projectOpened(project);
  }
  messageBus.connect().subscribe(ProjectManager.TOPIC,projectListener);
}
