{
  PsiElement psiAnchor=instruction.getPsiAnchor();
  boolean underBinary=isAtRHSOfBooleanAnd(psiAnchor);
  if (instruction instanceof InstanceofInstruction && visitor.isInstanceofRedundant((InstanceofInstruction)instruction)) {
    if (visitor.canBeNull((BinopInstruction)instruction)) {
      holder.registerProblem(psiAnchor,InspectionsBundle.message("dataflow.message.redundant.instanceof"),new RedundantInstanceofFix());
    }
 else {
      final LocalQuickFix localQuickFix=createSimplifyBooleanExpressionFix(psiAnchor,true);
      holder.registerProblem(psiAnchor,InspectionsBundle.message(underBinary ? "dataflow.message.constant.condition.when.reached" : "dataflow.message.constant.condition",Boolean.toString(true)),localQuickFix == null ? null : new LocalQuickFix[]{localQuickFix});
    }
  }
 else   if (psiAnchor instanceof PsiSwitchLabelStatement) {
    if (falseSet.contains(instruction)) {
      holder.registerProblem(psiAnchor,InspectionsBundle.message("dataflow.message.unreachable.switch.label"));
    }
  }
 else   if (psiAnchor != null && !reportedAnchors.contains(psiAnchor) && !isCompileConstantInIfCondition(psiAnchor)) {
    boolean evaluatesToTrue=trueSet.contains(instruction);
    if (onTheLeftSideOfConditionalAssignemnt(psiAnchor)) {
      holder.registerProblem(psiAnchor,InspectionsBundle.message("dataflow.message.pointless.assignment.expression",Boolean.toString(evaluatesToTrue)),createSimplifyToAssignmentFix());
    }
 else     if (shouldReportConditionAlwaysTrueOrFalse(psiAnchor,evaluatesToTrue) && !visitor.silenceConstantCondition(psiAnchor)) {
      final LocalQuickFix fix=createSimplifyBooleanExpressionFix(psiAnchor,evaluatesToTrue);
      String message=InspectionsBundle.message(underBinary ? "dataflow.message.constant.condition.when.reached" : "dataflow.message.constant.condition",Boolean.toString(evaluatesToTrue));
      holder.registerProblem(psiAnchor,message,fix == null ? null : new LocalQuickFix[]{fix});
    }
    reportedAnchors.add(psiAnchor);
  }
}
