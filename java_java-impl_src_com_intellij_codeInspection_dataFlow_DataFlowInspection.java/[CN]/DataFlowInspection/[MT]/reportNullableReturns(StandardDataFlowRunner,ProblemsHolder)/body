{
  for (  PsiReturnStatement statement : runner.getNullableReturns()) {
    final PsiExpression expr=statement.getReturnValue();
    if (runner.isInNotNullMethod()) {
      final String text=isNullLiteralExpression(expr) ? InspectionsBundle.message("dataflow.message.return.null.from.notnull") : InspectionsBundle.message("dataflow.message.return.nullable.from.notnull");
      holder.registerProblem(expr,text);
    }
 else     if (AnnotationUtil.isAnnotatingApplicable(statement)) {
      final String text=isNullLiteralExpression(expr) ? InspectionsBundle.message("dataflow.message.return.null.from.notnullable") : InspectionsBundle.message("dataflow.message.return.nullable.from.notnullable");
      final NullableNotNullManager manager=NullableNotNullManager.getInstance(expr.getProject());
      holder.registerProblem(expr,text,new AnnotateMethodFix(manager.getDefaultNullable(),ArrayUtil.toStringArray(manager.getNotNulls())));
    }
  }
}
