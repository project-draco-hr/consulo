{
  super(new BorderLayout());
  myProject=project;
  myAllChanges=new ArrayList<Change>();
  myReadOnly=!showChangelistChooser;
  myShowingAllChangeLists=changeLists.equals(ChangeListManager.getInstance(project).getChangeLists());
  for (  ChangeList list : changeLists) {
    myAllChanges.addAll(list.getChanges());
    if (list instanceof LocalChangeList && initialListSelection == null) {
      for (      Change c : list.getChanges()) {
        if (changes.contains(c)) {
          initialListSelection=list;
          break;
        }
      }
    }
  }
  if (initialListSelection == null) {
    for (    ChangeList list : changeLists) {
      if (list instanceof LocalChangeList && ((LocalChangeList)list).isDefault()) {
        initialListSelection=list;
        break;
      }
    }
    if (initialListSelection == null) {
      initialListSelection=changeLists.get(0);
    }
  }
  myViewer=new ChangesTreeList(myProject,changes,capableOfExcludingChanges);
  myViewer.setDoubleClickHandler(new Runnable(){
    public void run(){
      showDiff();
    }
  }
);
  setSelectedList(initialListSelection);
  JPanel listPanel=new JPanel(new BorderLayout());
  listPanel.add(myViewer);
  listPanel.setBorder(IdeBorderFactory.createTitledHeaderBorder(VcsBundle.message("commit.dialog.changed.files.label")));
  add(listPanel,BorderLayout.CENTER);
  myHeaderPanel=new JPanel(new BorderLayout());
  if (showChangelistChooser) {
    myChangeListChooser=new ChangeListChooser(changeLists);
    myHeaderPanel.add(myChangeListChooser,BorderLayout.EAST);
  }
  myHeaderPanel.add(createToolbar(),BorderLayout.WEST);
  add(myHeaderPanel,BorderLayout.NORTH);
  myViewer.installPopupHandler(myToolBarGroup);
  myViewer.setShowFlatten(PropertiesComponent.getInstance(myProject).isTrueValue(FLATTEN_OPTION_KEY));
  ChangeListManager.getInstance(myProject).addChangeListListener(myChangeListListener);
}
