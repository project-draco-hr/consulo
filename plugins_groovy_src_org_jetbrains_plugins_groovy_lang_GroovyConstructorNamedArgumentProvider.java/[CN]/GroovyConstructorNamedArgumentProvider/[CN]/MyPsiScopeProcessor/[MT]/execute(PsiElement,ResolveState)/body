{
  if (element instanceof PsiMethod || element instanceof PsiField) {
    String propertyName;
    PsiType type;
    if (element instanceof PsiMethod) {
      if (!myResolveTargetKinds.contains(METHOD))       return true;
      PsiMethod method=(PsiMethod)element;
      if (!GroovyPropertyUtils.isSimplePropertySetter(method))       return true;
      propertyName=GroovyPropertyUtils.getPropertyNameBySetter(method);
      if (propertyName == null)       return true;
      type=method.getParameterList().getParameters()[0].getType();
    }
 else {
      if (!myResolveTargetKinds.contains(PROPERTY))       return true;
      type=((PsiField)element).getType();
      propertyName=((PsiField)element).getName();
    }
    if (propertyName.equals(METACLASS))     return true;
    if (((PsiModifierListOwner)element).hasModifierProperty(PsiModifier.STATIC))     return true;
    PsiSubstitutor substitutor=state.get(PsiSubstitutor.KEY);
    if (substitutor != null) {
      type=substitutor.substitute(type);
    }
    addNamedArgument(propertyName,type,element);
  }
  return true;
}
