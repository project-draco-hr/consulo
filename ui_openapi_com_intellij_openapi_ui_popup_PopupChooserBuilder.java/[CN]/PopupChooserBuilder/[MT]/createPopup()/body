{
  JPanel contentPane=new JPanel(new BorderLayout());
  if (myTitle != null) {
    JLabel label=new JLabel(myTitle);
    label.setBorder(BorderFactory.createEmptyBorder(2,5,2,5));
    label.setHorizontalAlignment(JLabel.CENTER);
    contentPane.add(label,BorderLayout.NORTH);
  }
  myChooserComponent.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  myChooserComponent.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (!e.isConsumed()) {
        closePopup(true);
      }
    }
  }
);
  myChooserComponent.addKeyListener(new KeyAdapter(){
    public void keyTyped(    KeyEvent e){
      if (KeyEvent.VK_ENTER == e.getKeyChar()) {
        closePopup(true);
        e.consume();
      }
    }
    public void keyPressed(    KeyEvent e){
      KeyStroke keyStroke=KeyStroke.getKeyStroke(e.getKeyCode(),e.getModifiers());
      for (      KeyStroke keyStroke2 : myAdditionalKeystrokes) {
        if (keyStroke2.equals(keyStroke)) {
          e.consume();
          closePopup(true);
          return;
        }
      }
    }
  }
);
  myChooserComponent.registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      closePopup(false);
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myChooserComponent.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  final JScrollPane scrollPane;
  if (myChooserComponent instanceof JList) {
    scrollPane=createScrollPane((JList)myChooserComponent);
  }
 else   if (myChooserComponent instanceof JTable) {
    scrollPane=createScrollPane((JTable)myChooserComponent);
  }
 else   if (myChooserComponent instanceof JTree) {
    scrollPane=createScrollPane((JTree)myChooserComponent);
  }
 else {
    throw new IllegalStateException("PopupChooserBuilder is intended to be constructed with one of JTable, JTree, JList components");
  }
  contentPane.add(scrollPane,BorderLayout.CENTER);
  if (mySouthComponent != null) {
    contentPane.add(mySouthComponent,BorderLayout.SOUTH);
  }
  myPopup=JBPopupFactory.getInstance().createComponentPopup(contentPane,myChooserComponent,true);
  return myPopup;
}
