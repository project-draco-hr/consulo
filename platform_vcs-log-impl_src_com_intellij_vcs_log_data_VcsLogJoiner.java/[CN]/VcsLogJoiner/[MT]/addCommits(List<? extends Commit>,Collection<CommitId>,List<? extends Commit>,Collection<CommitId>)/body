{
  Pair<Integer,Set<Commit>> newCommitsAndSavedGreenIndex=getNewCommitsAndSavedGreenIndex(savedLog,previousRefs,firstBlock,newRefs);
  Pair<Integer,Set<CommitId>> redCommitsAndSavedRedIndex=getRedCommitsAndSavedRedIndex(savedLog,previousRefs,firstBlock,newRefs);
  Set<CommitId> removeCommits=redCommitsAndSavedRedIndex.second;
  Set<Commit> allNewsCommits=newCommitsAndSavedGreenIndex.second;
  int unsafeBlockSize=Math.max(redCommitsAndSavedRedIndex.first,newCommitsAndSavedGreenIndex.first);
  List<Commit> unsafePartSavedLog=new ArrayList<>();
  for (  Commit commit : savedLog.subList(0,unsafeBlockSize)) {
    if (!removeCommits.contains(commit.getId())) {
      unsafePartSavedLog.add(commit);
    }
  }
  unsafePartSavedLog=new NewCommitIntegrator<>(unsafePartSavedLog,allNewsCommits).getResultList();
  return Pair.create(ContainerUtil.concat(unsafePartSavedLog,savedLog.subList(unsafeBlockSize,savedLog.size())),unsafePartSavedLog.size() - unsafeBlockSize);
}
