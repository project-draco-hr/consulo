{
  final List<GrClosureSignature> result=new ArrayList<GrClosureSignature>();
  signature.accept(new GrRecursiveSignatureVisitor(){
    @Override public void visitClosureSignature(    GrClosureSignature signature){
      final GrClosureParameter[] original=signature.getParameters();
      final ArrayList<GrClosureParameter> parameters=new ArrayList<GrClosureParameter>(original.length);
      for (      GrClosureParameter parameter : original) {
        parameters.add(new GrClosureParameterImpl(parameter.getType(),false,null));
      }
      final int pcount=signature.isVarargs() ? signature.getParameterCount() - 2 : signature.getParameterCount() - 1;
      for (int i=pcount; i >= 0; i--) {
        if (original[i].isOptional()) {
          result.add(new GrClosureSignatureImpl(parameters.toArray(new GrClosureParameter[parameters.size()]),signature.getReturnType(),signature.isVarargs(),false));
          parameters.remove(i);
        }
      }
      result.add(new GrClosureSignatureImpl(parameters.toArray(new GrClosureParameter[parameters.size()]),signature.getReturnType(),signature.isVarargs(),false));
    }
  }
);
  return result;
}
