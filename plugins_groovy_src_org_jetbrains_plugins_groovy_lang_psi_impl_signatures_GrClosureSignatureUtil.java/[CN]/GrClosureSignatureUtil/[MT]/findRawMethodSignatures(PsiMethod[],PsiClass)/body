{
  Map<PsiTypeParameter,PsiType> initialMap=ContainerUtil.newHashMap();
  for (  PsiTypeParameter parameter : clazz.getTypeParameters()) {
    initialMap.put(parameter,null);
  }
  final PsiSubstitutor initialSubstitutor=PsiSubstitutorImpl.createSubstitutor(initialMap);
  MultiMap<MethodSignature,PsiMethod> result=new MultiMap<MethodSignature,PsiMethod>();
  for (  PsiMethod method : methods) {
    final PsiMethod actual=method instanceof GrReflectedMethod ? ((GrReflectedMethod)method).getBaseMethod() : method;
    PsiSubstitutor substitutor=calcRawSubstitutor(initialMap,initialSubstitutor,actual);
    result.putValue(method.getSignature(substitutor),actual);
  }
  return result;
}
