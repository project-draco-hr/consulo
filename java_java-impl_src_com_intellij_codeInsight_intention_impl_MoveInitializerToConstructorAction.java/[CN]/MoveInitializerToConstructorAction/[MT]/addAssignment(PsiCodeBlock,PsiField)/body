{
  PsiElementFactory factory=JavaPsiFacade.getInstance(codeBlock.getProject()).getElementFactory();
  PsiExpressionStatement statement=(PsiExpressionStatement)factory.createStatementFromText(field.getName() + " = y;",codeBlock);
  PsiAssignmentExpression expression=(PsiAssignmentExpression)statement.getExpression();
  PsiExpression initializer=field.getInitializer();
  if (initializer instanceof PsiArrayInitializerExpression) {
    PsiType type=initializer.getType();
    PsiNewExpression newExpression=(PsiNewExpression)factory.createExpressionFromText("new " + type.getCanonicalText() + "{}",codeBlock);
    newExpression.getArrayInitializer().replace(initializer);
    initializer=newExpression;
  }
  expression.getRExpression().replace(initializer);
  PsiStatement[] statements=codeBlock.getStatements();
  PsiElement anchor=null;
  for (  PsiStatement blockStatement : statements) {
    if (blockStatement instanceof PsiExpressionStatement && HighlightUtil.isSuperOrThisMethodCall(((PsiExpressionStatement)blockStatement).getExpression())) {
      continue;
    }
    if (containsReference(blockStatement,field)) {
      anchor=blockStatement;
      break;
    }
  }
  PsiElement newStatement=codeBlock.addBefore(statement,anchor);
  replaceWithQualifiedReferences(newStatement,newStatement);
  return (PsiExpressionStatement)newStatement;
}
