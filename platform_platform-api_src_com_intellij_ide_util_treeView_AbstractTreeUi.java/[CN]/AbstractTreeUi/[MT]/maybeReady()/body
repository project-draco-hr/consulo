{
  assertIsDispatchThread();
  if (isReleased())   return;
  boolean ready=isReady(true);
  if (!ready)   return;
  myRevalidatedObjects.clear();
  setCancelRequested(false);
  myResettingToReadyNow.set(false);
  myInitialized.setDone();
  if (canInitiateNewActivity()) {
    if (myUpdaterState != null && !myUpdaterState.isProcessingNow()) {
      UpdaterTreeState oldState=myUpdaterState;
      if (!myUpdaterState.restore(null)) {
        setUpdaterState(oldState);
      }
      if (!isReady())       return;
    }
  }
  setHoldSize(false);
  if (myTree.isShowing()) {
    if (getBuilder().isToEnsureSelectionOnFocusGained() && Registry.is("ide.tree.ensureSelectionOnFocusGained")) {
      TreeUtil.ensureSelection(myTree);
    }
  }
  if (myInitialized.isDone()) {
    if (isReleaseRequested() || isCancelProcessed()) {
      myBusyObject.onReady(this);
    }
 else {
      myBusyObject.onReady();
    }
  }
  if (canInitiateNewActivity()) {
    TreePath[] selection=getTree().getSelectionPaths();
    Rectangle visible=getTree().getVisibleRect();
    if (selection != null) {
      for (      TreePath each : selection) {
        Rectangle bounds=getTree().getPathBounds(each);
        if (bounds != null && (visible.contains(bounds) || visible.intersects(bounds))) {
          getTree().repaint(bounds);
        }
      }
    }
  }
}
