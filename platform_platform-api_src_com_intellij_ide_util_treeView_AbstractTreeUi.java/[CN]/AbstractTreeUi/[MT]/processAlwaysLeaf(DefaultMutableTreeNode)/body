{
  Object element=getElementFor(node);
  NodeDescriptor desc=getDescriptorFrom(node);
  if (desc == null)   return false;
  if (getTreeStructure().isAlwaysLeaf(element)) {
    removeFromUnbuilt(node);
    removeLoading(node,true);
    if (node.getChildCount() > 0) {
      final TreeNode[] children=new TreeNode[node.getChildCount()];
      for (int i=0; i < node.getChildCount(); i++) {
        children[i]=node.getChildAt(i);
      }
      if (isSelectionInside(node)) {
        addSelectionPath(getPathFor(node),true,Condition.TRUE,null);
      }
      processInnerChange(new Runnable(){
        public void run(){
          for (          TreeNode each : children) {
            removeNodeFromParent((MutableTreeNode)each,true);
            disposeNode((DefaultMutableTreeNode)each);
          }
        }
      }
);
    }
    removeFromUnbuilt(node);
    desc.setWasDeclaredAlwaysLeaf(true);
    processNodeActionsIfReady(node);
    return true;
  }
 else {
    boolean wasLeaf=desc.isWasDeclaredAlwaysLeaf();
    desc.setWasDeclaredAlwaysLeaf(false);
    if (wasLeaf) {
      insertLoadingNode(node,true);
    }
    return false;
  }
}
