{
  final AsyncResult<Boolean> result=new AsyncResult<Boolean>();
  if (now || isPassthroughMode()) {
    result.setDone(update(nodeDescriptor));
  }
 else {
    Object element=getElementFromDescriptor(nodeDescriptor);
    boolean bgLoading=getTreeStructure().isToBuildChildrenInBackground(element);
    boolean edt=isEdt();
    if (bgLoading) {
      if (edt) {
        final AtomicBoolean changes=new AtomicBoolean();
        queueToBackground(new Runnable(){
          @Override public void run(){
            changes.set(update(nodeDescriptor));
          }
        }
,new Runnable(){
          @Override public void run(){
            result.setDone(changes.get());
          }
        }
);
      }
 else {
        result.setDone(update(nodeDescriptor));
      }
    }
 else {
      if (edt || !myWasEverShown) {
        result.setDone(update(nodeDescriptor));
      }
 else {
        invokeLaterIfNeeded(false,new Runnable(){
          @Override public void run(){
            execute(new Runnable(){
              @Override public void run(){
                result.setDone(update(nodeDescriptor));
              }
            }
);
          }
        }
);
      }
    }
  }
  result.doWhenDone(new AsyncResult.Handler<Boolean>(){
    @Override public void run(    final Boolean changes){
      if (changes) {
        invokeLaterIfNeeded(false,new Runnable(){
          @Override public void run(){
            Object element=nodeDescriptor.getElement();
            DefaultMutableTreeNode node=getNodeForElement(element,false);
            if (node != null) {
              TreePath path=getPathFor(node);
              if (myTree.isVisible(path)) {
                updateNodeImageAndPosition(node,false,changes);
              }
            }
          }
        }
);
      }
    }
  }
);
  return result;
}
