{
  int preselectedRow=-1;
  final Set<Object> selection=getSelectedElements();
  if (selection.contains(element)) {
    final TreePath[] paths=getTree().getSelectionPaths();
    for (    TreePath each : paths) {
      if (element.equals(getElementFor(each.getLastPathComponent()))) {
        preselectedRow=getTree().getRowForPath(each);
        break;
      }
    }
  }
 else   if (myElementToNodeMap.get(element) instanceof ArrayList) {
    final TreePath[] paths=getTree().getSelectionPaths();
    if (paths != null && paths.length > 0) {
      Set<DefaultMutableTreeNode> selectedNodes=new HashSet<DefaultMutableTreeNode>();
      for (      TreePath eachPAth : paths) {
        if (eachPAth.getLastPathComponent() instanceof DefaultMutableTreeNode) {
          selectedNodes.add((DefaultMutableTreeNode)eachPAth.getLastPathComponent());
        }
      }
      final ArrayList nodes=(ArrayList)myElementToNodeMap.get(element);
      for (      Object each : nodes) {
        DefaultMutableTreeNode eachNode=(DefaultMutableTreeNode)each;
        while (eachNode != null) {
          if (selectedNodes.contains(eachNode)) {
            preselectedRow=getTree().getRowForPath(getPathFor(eachNode));
            break;
          }
          eachNode=(DefaultMutableTreeNode)eachNode.getParent();
        }
        if (preselectedRow >= 0)         break;
      }
    }
  }
  return preselectedRow;
}
