{
  final ActionCallback result=new ActionCallback();
  if (isRerunNeeded(pass)) {
    getUpdater().addSubtreeToUpdate(pass);
    result.setRejected();
  }
 else {
    if (isToYieldUpdateFor(node)) {
      pass.setCurrentNode(node);
      boolean wasRun=yieldAndRun(new Runnable(){
        public void run(){
          if (validateReleaseRequested()) {
            result.setRejected();
            return;
          }
          if (pass.isExpired()) {
            result.setRejected();
            return;
          }
          if (isRerunNeeded(pass)) {
            runDone(new Runnable(){
              public void run(){
                if (!pass.isExpired()) {
                  getUpdater().addSubtreeToUpdate(pass);
                }
              }
            }
);
            result.setRejected();
          }
 else {
            processRunnable.run().notify(result);
          }
        }
      }
,pass);
      if (!wasRun) {
        result.setRejected();
      }
    }
 else {
      processRunnable.run().notify(result);
    }
  }
  return result;
}
