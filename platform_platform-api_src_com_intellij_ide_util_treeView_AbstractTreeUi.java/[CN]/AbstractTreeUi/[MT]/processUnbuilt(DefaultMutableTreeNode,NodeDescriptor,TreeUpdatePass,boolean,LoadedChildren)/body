{
  if (!isExpanded && getBuilder().isAlwaysShowPlus(descriptor)) {
    return new Pair<Boolean,LoadedChildren>(true,null);
  }
  final Object element=getElementFor(node);
  final LoadedChildren children=loadedChildren != null ? loadedChildren : new LoadedChildren(getChildrenFor(element));
  boolean processed;
  if (children.getElements().length == 0) {
    removeLoading(node,true);
    processed=true;
  }
 else {
    if (isAutoExpand(node)) {
      addNodeAction(getElementFor(node),new NodeAction(){
        public void onReady(        final DefaultMutableTreeNode node){
          final TreePath path=new TreePath(node.getPath());
          if (getTree().isExpanded(path) || children.getElements().length == 0) {
            removeLoading(node,false);
          }
 else {
            maybeYeild(new ActiveRunnable(){
              public ActionCallback run(){
                expand(element,null);
                return new ActionCallback.Done();
              }
            }
,pass,node);
          }
        }
      }
,false);
    }
    processed=false;
  }
  processNodeActionsIfReady(node);
  return new Pair<Boolean,LoadedChildren>(processed,children);
}
