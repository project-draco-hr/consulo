{
  if (elements.length <= 0) {
    done.setDone();
    return;
  }
  if (index >= elements.length) {
    return;
  }
  final int[] actualDepth=new int[]{currentDepth};
  boolean breakCallChain=false;
  if (actualDepth[0] > Registry.intValue("ide.tree.expandRecursionDepth")) {
    actualDepth[0]=0;
    breakCallChain=true;
  }
  Runnable expandRunnable=new Runnable(){
    public void run(){
      _expand(elements[index],new Runnable(){
        public void run(){
          done.setDone();
          expandNext(elements,index + 1,parentsOnly,checkIfInStricture,canSmartExpand,done,actualDepth[0] + 1);
        }
      }
,parentsOnly,checkIfInStricture,canSmartExpand);
    }
  }
;
  if (breakCallChain && !isPassthroughMode()) {
    SwingUtilities.invokeLater(expandRunnable);
  }
 else {
    expandRunnable.run();
  }
}
