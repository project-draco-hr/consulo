{
  try {
    AbstractTreeUpdater updater=getUpdater();
    if (updater == null) {
      return new ActionCallback.Rejected();
    }
    final ActionCallback result=new ActionCallback();
    Object eachParent=element;
    while (eachParent != null) {
      DefaultMutableTreeNode node=getNodeForElement(element,false);
      if (node != null) {
        addSubtreeToUpdate(node);
        break;
      }
      eachParent=getTreeStructure().getParentElement(eachParent);
    }
    if (eachParent == null) {
      addSubtreeToUpdate(getRootNode());
    }
    updater.runAfterUpdate(new Runnable(){
      public void run(){
        result.setDone();
      }
    }
);
    return result;
  }
 catch (  ProcessCanceledException e) {
    return new ActionCallback.Rejected();
  }
}
