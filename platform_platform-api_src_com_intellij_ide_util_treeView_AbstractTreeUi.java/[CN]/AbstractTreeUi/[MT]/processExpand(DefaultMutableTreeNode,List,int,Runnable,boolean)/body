{
  final Object element=getElementFor(toExpand);
  if (element == null) {
    runDone(onDone);
    return;
  }
  addNodeAction(element,new NodeAction(){
    public void onReady(    final DefaultMutableTreeNode node){
      if (node.getChildCount() > 0 && !myTree.isExpanded(new TreePath(node.getPath()))) {
        if (!isAutoExpand(node)) {
          expand(node,canSmartExpand);
        }
      }
      if (expandIndex <= 0) {
        runDone(onDone);
        return;
      }
      final DefaultMutableTreeNode nextNode=getNodeForElement(kidsToExpand.get(expandIndex - 1),false);
      if (nextNode != null) {
        processExpand(nextNode,kidsToExpand,expandIndex - 1,onDone,canSmartExpand);
      }
 else {
        runDone(onDone);
      }
    }
  }
,true);
  if (myTree.isExpanded(getPathFor(toExpand)) && !myUnbuiltNodes.contains(toExpand)) {
    processNodeActionsIfReady(toExpand);
  }
 else {
    if (!myUnbuiltNodes.contains(toExpand)) {
      getUpdater().addSubtreeToUpdate(toExpand);
    }
 else {
      expand(toExpand,canSmartExpand);
    }
  }
}
