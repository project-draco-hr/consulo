{
  TreeNode parent=node.getParent();
  if (parent instanceof DefaultMutableTreeNode) {
    addToUnbuilt((DefaultMutableTreeNode)parent);
  }
  if (node.getChildCount() > 0) {
    for (DefaultMutableTreeNode _node=(DefaultMutableTreeNode)node.getFirstChild(); _node != null; _node=_node.getNextSibling()) {
      disposeNode(_node);
    }
  }
  removeFromUpdating(node);
  removeFromUnbuilt(node);
  removeFromCancelled(node);
  if (isLoadingNode(node))   return;
  NodeDescriptor descriptor=getDescriptorFrom(node);
  if (descriptor == null)   return;
  final Object element=getElementFromDescriptor(descriptor);
  removeMapping(element,node,null);
  myAutoExpandRoots.remove(element);
  node.setUserObject(null);
  node.removeAllChildren();
}
