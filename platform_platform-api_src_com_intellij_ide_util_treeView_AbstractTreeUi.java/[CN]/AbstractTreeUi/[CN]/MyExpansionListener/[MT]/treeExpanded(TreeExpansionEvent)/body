{
  dropUpdaterStateIfExternalChange();
  TreePath path=event.getPath();
  if (myRequestedExpand != null && !myRequestedExpand.equals(path))   return;
  final DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
  if (!myUnbuiltNodes.contains(node)) {
    removeLoading(node,false);
    boolean hasUnbuiltChildren=false;
    for (int i=0; i < node.getChildCount(); i++) {
      DefaultMutableTreeNode each=(DefaultMutableTreeNode)node.getChildAt(i);
      if (myUnbuiltNodes.contains(each)) {
        makeLoadingOrLeafIfNoChildren(each);
        hasUnbuiltChildren=true;
      }
    }
    if (hasUnbuiltChildren) {
      addSubtreeToUpdate(node);
    }
  }
 else {
    getBuilder().expandNodeChildren(node);
  }
  processSmartExpand(node,canSmartExpand(node,true));
  processNodeActionsIfReady(node);
}
