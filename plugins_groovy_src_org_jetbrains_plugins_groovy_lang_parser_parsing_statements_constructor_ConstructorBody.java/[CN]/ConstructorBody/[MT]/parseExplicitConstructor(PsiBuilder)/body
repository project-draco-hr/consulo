{
  TypeArguments.parse(builder);
  if ((ParserUtils.getToken(builder,kTHIS) || ParserUtils.getToken(builder,kSUPER)) && ParserUtils.lookAhead(builder,mLPAREN)) {
    PsiBuilder.Marker marker=builder.mark();
    ParserUtils.getToken(builder,mLPAREN);
    ArgumentList.parseArgumentList(builder,mRPAREN);
    ParserUtils.getToken(builder,mRPAREN,GroovyBundle.message("rparen.expected"));
    marker.done(ARGUMENTS);
    return true;
  }
  return false;
}
