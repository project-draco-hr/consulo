{
  PsiBuilder.Marker cbMarker=builder.mark();
  if (!ParserUtils.getToken(builder,mLCURLY)) {
    builder.error(GroovyBundle.message("lcurly.expected"));
    cbMarker.rollbackTo();
    return WRONGWAY;
  }
  ParserUtils.getToken(builder,mNLS);
  PsiBuilder.Marker constructorInvokationMarker=builder.mark();
  boolean b=parseExplicitConstructor(builder);
  if (b) {
    constructorInvokationMarker.done(EXPLICIT_CONSTRUCTOR);
  }
 else {
    constructorInvokationMarker.rollbackTo();
  }
  Separators.parse(builder);
  OpenOrClosableBlock.parseBlockBody(builder);
  if (!ParserUtils.getToken(builder,mRCURLY)) {
    builder.error(GroovyBundle.message("rcurly.expected"));
    cbMarker.rollbackTo();
    return CONSTRUCTOR_BODY_ERROR;
  }
  cbMarker.done(OPEN_BLOCK);
  return OPEN_BLOCK;
}
