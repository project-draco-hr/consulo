{
  if (gradleProjectPath == null) {
    return null;
  }
  File file=new File(gradleProjectPath);
  File gradleDir;
  if (file.isFile()) {
    gradleDir=new File(file.getParentFile(),"gradle");
  }
 else {
    gradleDir=new File(file,"gradle");
  }
  if (!gradleDir.isDirectory()) {
    return null;
  }
  File wrapperDir=new File(gradleDir,"wrapper");
  if (!wrapperDir.isDirectory()) {
    return null;
  }
  File[] candidates=wrapperDir.listFiles(new FileFilter(){
    @Override public boolean accept(    File candidate){
      return candidate.isFile() && candidate.getName().endsWith(".properties");
    }
  }
);
  if (candidates == null) {
    GradleLog.LOG.warn("No *.properties file is found at the gradle wrapper directory " + wrapperDir.getAbsolutePath());
    return null;
  }
 else   if (candidates.length != 1) {
    GradleLog.LOG.warn(String.format("%d *.properties files instead of one have been found at the wrapper directory (%s): %s",candidates.length,wrapperDir.getAbsolutePath(),Arrays.toString(candidates)));
    return null;
  }
  Properties props=new Properties();
  BufferedReader reader=null;
  try {
    reader=new BufferedReader(new FileReader(candidates[0]));
    props.load(reader);
    String distribution=props.getProperty(WRAPPER_VERSION_PROPERTY_KEY);
    if (StringUtil.isEmpty(distribution)) {
      return null;
    }
    String shortName=StringUtil.getShortName(distribution,'/');
    return StringUtil.trimEnd(shortName,".zip");
  }
 catch (  IOException e) {
    GradleLog.LOG.warn(String.format("I/O exception on reading gradle wrapper properties file at '%s'",candidates[0].getAbsolutePath()),e);
  }
 finally {
    if (reader != null) {
      try {
        reader.close();
      }
 catch (      IOException e) {
      }
    }
  }
  return null;
}
