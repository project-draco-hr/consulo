{
  myPartner.checkCanceled();
  final File ioFile=status.getFile();
  final LocalFileSystem lfs=LocalFileSystem.getInstance();
  VirtualFile vFile=lfs.findFileByIoFile(ioFile);
  if (vFile == null) {
    vFile=lfs.refreshAndFindFileByIoFile(ioFile);
  }
  if ((vFile != null) && myPartner.isExcluded(vFile))   return;
  if ((vFile != null) && (SvnVcs17.svnStatusIsUnversioned(status))) {
    myReceiver.processUnversioned(vFile);
    if (vFile.isDirectory()) {
      processRecursively(vFile,myCurrentItem.getDepth());
    }
  }
 else {
    final FilePath path=VcsUtil.getFilePath(ioFile,status.getKind().equals(SVNNodeKind.DIR));
    myReceiver.process(path,status,myCurrentItem.isIsInnerCopyRoot());
  }
}
