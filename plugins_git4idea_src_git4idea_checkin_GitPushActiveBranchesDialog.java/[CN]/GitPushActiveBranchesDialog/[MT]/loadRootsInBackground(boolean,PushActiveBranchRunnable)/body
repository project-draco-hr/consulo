{
  Task.Backgroundable fetchTask=new Task.Backgroundable(myProject,GitBundle.getString("push.active.fetching")){
    public void run(    @NotNull ProgressIndicator indicator){
      final Collection<VcsException> exceptions=new HashSet<VcsException>(1);
      final List<Root> roots=loadRoots(myProject,myVcsRoots,exceptions,fetchData);
      if (!exceptions.isEmpty()) {
        setErrorText(GitBundle.getString("push.active.fetch.failed"));
        return;
      }
      if (postUiTask != null) {
        ApplicationManager.getApplication().invokeAndWait(new Runnable(){
          @Override public void run(){
            postUiTask.run(roots);
          }
        }
,ModalityState.stateForComponent(getRootPane()));
      }
    }
  }
;
  myTaskQueue.run(fetchTask);
}
