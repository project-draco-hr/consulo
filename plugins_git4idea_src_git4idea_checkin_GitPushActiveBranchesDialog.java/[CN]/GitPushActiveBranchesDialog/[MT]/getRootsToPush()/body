{
  final ArrayList<Root> rootsToPush=new ArrayList<Root>();
  for (int i=0; i < myTreeRoot.getChildCount(); i++) {
    CheckedTreeNode node=(CheckedTreeNode)myTreeRoot.getChildAt(i);
    Root r=(Root)node.getUserObject();
    if (r.remote == null || r.commits.size() == 0) {
      continue;
    }
    boolean topCommit=true;
    for (int j=0; j < node.getChildCount(); j++) {
      if (node.getChildAt(j) instanceof CheckedTreeNode) {
        CheckedTreeNode commitNode=(CheckedTreeNode)node.getChildAt(j);
        if (commitNode.isChecked()) {
          Commit commit=(Commit)commitNode.getUserObject();
          if (!topCommit) {
            r.commitToPush=commit.revision.asString();
          }
          rootsToPush.add(r);
          break;
        }
        topCommit=false;
      }
    }
  }
  return rootsToPush;
}
