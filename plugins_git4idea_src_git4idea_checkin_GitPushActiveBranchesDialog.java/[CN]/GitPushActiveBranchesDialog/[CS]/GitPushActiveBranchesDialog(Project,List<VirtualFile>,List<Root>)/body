{
  super(project,true);
  myProject=project;
  myVcsRoots=vcsRoots;
  updateTree(roots,null);
  TreeUtil.expandAll(myCommitTree);
  final GitVcsSettings settings=GitVcsSettings.getInstance(project);
  myAutoSaveFilesOnComboBox.addItem(UpdatePolicyUtils.SAVE_SHELVE);
  myAutoSaveFilesOnComboBox.addItem(UpdatePolicyUtils.SAVE_STASH);
  UpdatePolicyUtils.updatePolicyItem(settings.PUSH_ACTIVE_BRANCHES_REBASE_SAVE_POLICY,myAutoSaveFilesOnComboBox);
  myAutoSaveFilesOnComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      settings.PUSH_ACTIVE_BRANCHES_REBASE_SAVE_POLICY=UpdatePolicyUtils.getUpdatePolicy(myAutoSaveFilesOnComboBox);
    }
  }
);
  myCommitTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      TreePath path=myCommitTree.getSelectionModel().getSelectionPath();
      if (path == null) {
        myViewButton.setEnabled(false);
        return;
      }
      DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
      myViewButton.setEnabled(node != null && myCommitTree.getSelectionCount() == 1 && node.getUserObject() instanceof Commit);
    }
  }
);
  myViewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      TreePath path=myCommitTree.getSelectionModel().getSelectionPath();
      if (path == null) {
        return;
      }
      DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
      if (node == null || !(node.getUserObject() instanceof Commit)) {
        return;
      }
      Commit c=(Commit)node.getUserObject();
      GitShowAllSubmittedFilesAction.showSubmittedFiles(project,c.revision.asString(),c.root.root);
    }
  }
);
  myFetchButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      doFetch();
    }
  }
);
  myRebaseButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      doRebase();
    }
  }
);
  setTitle(GitBundle.getString("push.active.title"));
  setOKButtonText(GitBundle.getString("push.active.button"));
  init();
}
