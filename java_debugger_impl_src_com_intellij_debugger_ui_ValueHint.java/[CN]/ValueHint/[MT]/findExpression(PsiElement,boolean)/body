{
  if (!(element instanceof PsiIdentifier || element instanceof PsiKeyword)) {
    return null;
  }
  PsiElement expression=null;
  PsiElement parent=element.getParent();
  if (parent instanceof PsiVariable) {
    expression=element;
  }
 else   if (parent instanceof PsiReferenceExpression) {
    final PsiElement pparent=parent.getParent();
    if (pparent instanceof PsiMethodCallExpression) {
      parent=pparent;
    }
    if (allowMethodCalls || !DebuggerUtils.hasSideEffects(parent)) {
      expression=parent;
    }
  }
 else   if (parent instanceof PsiThisExpression) {
    expression=parent;
  }
  if (expression != null) {
    try {
      PsiElement context=element;
      if (parent instanceof PsiParameter) {
        try {
          context=((PsiMethod)((PsiParameter)parent).getDeclarationScope()).getBody();
        }
 catch (        Throwable ignored) {
        }
      }
 else {
        while (context != null && !(context instanceof PsiStatement) && !(context instanceof PsiClass)) {
          context=context.getParent();
        }
      }
      TextRange textRange=expression.getTextRange();
      PsiExpression psiExpression=JavaPsiFacade.getInstance(expression.getProject()).getElementFactory().createExpressionFromText(expression.getText(),context);
      return Pair.create(psiExpression,textRange);
    }
 catch (    IncorrectOperationException e) {
      LOG.debug(e);
    }
  }
  return null;
}
