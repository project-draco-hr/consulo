{
  final Vector<FileType> v=new Vector<FileType>();
  final FileType[] fileTypes=FileTypeManager.getInstance().getRegisteredFileTypes();
  for (  FileType fileType : fileTypes) {
    if (fileType == StdFileTypes.CLASS || fileType == StdFileTypes.IDEA_PROJECT || fileType == StdFileTypes.IDEA_WORKSPACE || fileType == StdFileTypes.GUI_DESIGNER_FORM) {
      continue;
    }
    try {
      if (fileType instanceof LanguageFileType) {
        final SyntaxHighlighter sh=SyntaxHighlighterFactory.getSyntaxHighlighter(((LanguageFileType)fileType).getLanguage(),project,null);
        if (sh != null) {
          v.add(fileType);
        }
      }
    }
 catch (    Throwable e) {
      Logger.getInstance(XsltRunSettingsEditor.class.getName()).info("Encountered incompatible FileType: " + fileType.getName(),e);
    }
  }
  Collections.sort(v,new Comparator<FileType>(){
    public int compare(    FileType o1,    FileType o2){
      return o1.getDescription().compareTo(o2.getDescription());
    }
  }
);
  v.insertElementAt(null,0);
  return v;
}
