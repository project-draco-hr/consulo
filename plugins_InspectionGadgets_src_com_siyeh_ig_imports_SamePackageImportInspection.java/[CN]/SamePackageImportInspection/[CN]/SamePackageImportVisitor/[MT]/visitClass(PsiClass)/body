{
  if (!(aClass.getParent() instanceof PsiJavaFile)) {
    return;
  }
  if (aClass.getContainingFile() instanceof JspFile) {
    return;
  }
  final PsiJavaFile file=(PsiJavaFile)aClass.getParent();
  if (file == null) {
    return;
  }
  if (!file.getClasses()[0].equals(aClass)) {
    return;
  }
  final String packageName=file.getPackageName();
  final PsiImportList importList=file.getImportList();
  if (importList == null) {
    return;
  }
  final PsiImportStatement[] importStatements=importList.getImportStatements();
  for (  final PsiImportStatement importStatement : importStatements) {
    final PsiJavaCodeReferenceElement reference=importStatement.getImportReference();
    if (reference != null) {
      final String text=importStatement.getQualifiedName();
      if (importStatement.isOnDemand()) {
        if (packageName.equals(text)) {
          registerError(importStatement);
        }
      }
 else {
        if (text == null) {
          return;
        }
        final int classNameIndex=text.lastIndexOf((int)'.');
        final String parentName;
        if (classNameIndex < 0) {
          parentName="";
        }
 else {
          parentName=text.substring(0,classNameIndex);
        }
        if (packageName.equals(parentName)) {
          registerError(importStatement);
        }
      }
    }
  }
}
