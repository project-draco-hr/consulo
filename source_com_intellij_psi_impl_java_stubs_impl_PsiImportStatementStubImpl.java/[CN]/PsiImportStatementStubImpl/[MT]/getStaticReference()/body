{
  PsiJavaCodeReferenceElement refElement;
  PsiManager manager=PsiManager.getInstance(getProject());
  final FileElement holderElement=DummyHolderFactory.createHolder(manager,getPsi()).getTreeElement();
  final JavaParsingContext context=new JavaParsingContext(holderElement.getCharTable(),PsiUtil.getLanguageLevel(getPsi()));
  final String refText=getImportReferenceText();
  if (refText == null)   return null;
  CompositeElement parsedRef=Parsing.parseJavaCodeReferenceText(manager,refText,context.getCharTable());
  refElement=(PsiJavaCodeReferenceElement)parsedRef;
  if (refElement == null)   return null;
  final boolean onDemand=isOnDemand();
  if (onDemand) {
    TreeUtil.addChildren(holderElement,(TreeElement)refElement);
    ((PsiJavaCodeReferenceElementImpl)refElement).setKindWhenDummy(PsiJavaCodeReferenceElementImpl.CLASS_FQ_NAME_KIND);
  }
 else {
    refElement=(PsiImportStaticReferenceElement)context.getImportsTextParsing().convertToImportStaticReference(parsedRef);
    TreeUtil.addChildren(holderElement,(TreeElement)refElement);
  }
  return refElement;
}
