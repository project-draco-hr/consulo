{
  try {
    final Application app=ApplicationManager.getApplication();
    if (app.isDisposed())     return false;
    final HashSet<Pair<VirtualFile,StateStorage>> causes=new HashSet<Pair<VirtualFile,StateStorage>>(myChangedApplicationFiles);
    if (causes.isEmpty())     return true;
    final boolean[] reloadOk={false};
    final LinkedHashSet<String> components=new LinkedHashSet<String>();
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        try {
          reloadOk[0]=((ApplicationImpl)app).getStateStore().reload(causes,components);
        }
 catch (        StateStorage.StateStorageException e) {
          Messages.showWarningDialog(ProjectBundle.message("project.reload.failed",e.getMessage()),ProjectBundle.message("project.reload.failed.title"));
        }
catch (        IOException e) {
          Messages.showWarningDialog(ProjectBundle.message("project.reload.failed",e.getMessage()),ProjectBundle.message("project.reload.failed.title"));
        }
      }
    }
);
    if (!reloadOk[0] && !components.isEmpty()) {
      String message="Application components were changed externally and cannot be reaload:\n";
      for (      String component : components) {
        message+=component + "\n";
      }
      message+="Shutdown IDEA?";
      if (Messages.showYesNoDialog(message,"Application Configuration Reload",Messages.getQuestionIcon()) == 0) {
        for (        Pair<VirtualFile,StateStorage> cause : causes) {
          StateStorage stateStorage=cause.getSecond();
          if (stateStorage instanceof XmlElementStorage) {
            ((XmlElementStorage)stateStorage).disableSaving();
          }
        }
        ApplicationManagerEx.getApplicationEx().exit(true);
      }
    }
    return reloadOk[0];
  }
  finally {
    myChangedApplicationFiles.clear();
  }
}
