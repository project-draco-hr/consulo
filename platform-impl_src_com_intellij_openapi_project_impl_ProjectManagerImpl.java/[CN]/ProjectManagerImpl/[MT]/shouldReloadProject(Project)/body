{
  if (project.isDisposed())   return false;
  final HashSet<Pair<VirtualFile,StateStorage>> causes=new HashSet<Pair<VirtualFile,StateStorage>>(myChangedProjectFiles.get(project));
  final boolean[] reloadOk=new boolean[]{false};
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      try {
        reloadOk[0]=((ProjectEx)project).getStateStore().reload(causes);
      }
 catch (      StateStorage.StateStorageException e) {
        Messages.showWarningDialog(ProjectBundle.message("project.reload.failed",e.getMessage()),ProjectBundle.message("project.reload.failed.title"));
      }
catch (      IOException e) {
        Messages.showWarningDialog(ProjectBundle.message("project.reload.failed",e.getMessage()),ProjectBundle.message("project.reload.failed.title"));
      }
    }
  }
);
  if (reloadOk[0])   return false;
  String message;
  if (causes.size() == 1) {
    message=ProjectBundle.message("project.reload.external.change.single",causes.iterator().next().first.getPresentableUrl());
  }
 else {
    StringBuilder filesBuilder=new StringBuilder();
    boolean first=true;
    Set<String> alreadyShown=new HashSet<String>();
    for (    Pair<VirtualFile,StateStorage> cause : causes) {
      String url=cause.first.getPresentableUrl();
      if (!alreadyShown.contains(url)) {
        if (!first)         filesBuilder.append("\n");
        first=false;
        filesBuilder.append(url);
        alreadyShown.add(url);
      }
    }
    message=ProjectBundle.message("project.reload.external.change.multiple",filesBuilder.toString());
  }
  return Messages.showYesNoDialog(project,message,ProjectBundle.message("project.reload.external.change.title"),Messages.getQuestionIcon()) == 0;
}
