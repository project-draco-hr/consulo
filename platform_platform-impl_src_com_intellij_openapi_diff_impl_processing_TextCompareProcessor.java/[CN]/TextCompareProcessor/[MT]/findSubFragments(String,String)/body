{
  DiffFragment[] fragments=new ByWord(myComparisonPolicy).buildFragments(text1,text2);
  fragments=DiffCorrection.ConnectSingleSideToChange.INSTANCE.correct(fragments);
  fragments=UniteSameType.INSTANCE.correct(fragments);
  fragments=PreferWholeLines.INSTANCE.correct(fragments);
  fragments=UniteSameType.INSTANCE.correct(fragments);
  DiffFragment[][] lines=Util.splitByUnchangedLines(fragments);
  lines=Util.uniteFormattingOnly(lines);
  LineFragmentsCollector collector=new LineFragmentsCollector();
  for (int i=0; i < lines.length; i++) {
    DiffFragment[] line=lines[i];
    DiffFragment[][] subLines=LineBlockDivider.SINGLE_SIDE.divide(line);
    subLines=Util.uniteFormattingOnly(subLines);
    for (int j=0; j < subLines.length; j++) {
      DiffFragment[] subLineFragments=subLines[j];
      LineFragment subLine=collector.addDiffFragment(Util.concatenate(subLineFragments));
      if (!subLine.isOneSide()) {
        subLine.setChildren(processInlineFragments(subLineFragments));
      }
    }
  }
  return collector.getFragments();
}
