{
  try {
    final MappedFile storage=myStorage;
    final int pos=(int)storage.length();
    storage.seek(pos);
    int len=value.length();
    if (len < 255 && isAscii(value)) {
      final byte[] buf=buffer;
      buf[0]=buf[1]=buf[2]=buf[3]=0;
      buf[7]=(byte)(hashCode & 0xFF);
      hashCode>>>=8;
      buf[6]=(byte)(hashCode & 0xFF);
      hashCode>>>=8;
      buf[5]=(byte)(hashCode & 0xFF);
      hashCode>>>=8;
      buf[4]=(byte)(hashCode & 0xFF);
      buf[8]=(byte)len;
      for (int i=0; i < len; i++) {
        buf[i + STRING_HEADER_SIZE]=(byte)value.charAt(i);
      }
      storage.put(buf,0,len + STRING_HEADER_SIZE);
    }
 else {
      storage.writeInt(0);
      storage.writeInt(hashCode);
      storage.writeByte((byte)0xFF);
      storage.writeUTF(value);
    }
    return pos;
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
