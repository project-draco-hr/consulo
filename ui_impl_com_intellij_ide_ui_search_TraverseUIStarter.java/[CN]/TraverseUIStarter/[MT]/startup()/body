{
  final HashMap<SearchableConfigurable,TreeSet<OptionDescription>> options=new HashMap<SearchableConfigurable,TreeSet<OptionDescription>>();
  SearchUtil.processProjectConfigurables(ProjectManager.getInstance().getDefaultProject(),options);
  Element root=new Element(OPTIONS);
  for (  SearchableConfigurable configurable : options.keySet()) {
    Element configurableElement=new Element(CONFIGURABLE);
    final String id=configurable.getId();
    if (id == null)     continue;
    configurableElement.setAttribute(ID,id);
    configurableElement.setAttribute(CONFIGURABLE_NAME,configurable.getDisplayName());
    final TreeSet<OptionDescription> sortedOptions=options.get(configurable);
    for (    OptionDescription option : sortedOptions) {
      append(option.getPath(),option.getHit(),option.getOption(),configurableElement);
    }
    if (configurable instanceof KeymapConfigurable) {
      processKeymap(configurableElement);
    }
 else     if (configurable instanceof ErrorOptionsConfigurable) {
      processInspectionTools(configurableElement);
    }
 else     if (configurable instanceof IntentionSettingsConfigurable) {
      processIntentions(configurableElement);
    }
 else     if (configurable instanceof ColorAndFontOptions) {
      processColorAndFontsSettings((ColorAndFontOptions)configurable,configurableElement);
    }
 else     if (configurable instanceof CodeStyleSchemesConfigurable) {
      processCodeStyleConfigurable((CodeStyleSchemesConfigurable)configurable,configurableElement);
    }
    root.addContent(configurableElement);
  }
  JDOMUtil.writeDocument(new Document(root),OUTPUT_PATH,"\n");
  ((ApplicationEx)ApplicationManager.getApplication()).exit(true);
}
