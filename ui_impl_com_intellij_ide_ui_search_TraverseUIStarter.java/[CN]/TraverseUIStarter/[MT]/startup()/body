{
  final HashMap<SearchableConfigurable,Set<Pair<String,String>>> options=new HashMap<SearchableConfigurable,Set<Pair<String,String>>>();
  SearchUtil.processProjectConfigurables(ProjectManager.getInstance().getDefaultProject(),options);
  Element root=new Element("options");
  for (  SearchableConfigurable configurable : options.keySet()) {
    Element configurableElement=new Element("configurable");
    final String id=configurable.getId();
    if (id == null)     continue;
    configurableElement.setAttribute("id",id);
    configurableElement.setAttribute("configurable_name",configurable.getDisplayName());
    TreeSet<Pair<String,String>> sortedOptions=new TreeSet<Pair<String,String>>(new Comparator<Pair<String,String>>(){
      public int compare(      final Pair<String,String> o1,      final Pair<String,String> o2){
        return o1.first.compareTo(o2.first);
      }
    }
);
    final Set<Pair<String,String>> strings=options.get(configurable);
    for (    Pair<String,String> option : strings) {
      if (option == null || option.first == null || option.first.length() == 0)       continue;
      final String singleOption=StringUtil.unpluralize(option.first.toLowerCase());
      sortedOptions.add(Pair.create(singleOption != null ? singleOption : option.first.toLowerCase(),option.second));
    }
    for (    Pair<String,String> option : sortedOptions) {
      Element optionElement=new Element("option");
      optionElement.setAttribute("name",option.first);
      if (option.second != null) {
        optionElement.setAttribute("path",option.second);
      }
      configurableElement.addContent(optionElement);
    }
    root.addContent(configurableElement);
  }
  JDOMUtil.writeDocument(new Document(root),OUTPUT_PATH,"\n");
}
