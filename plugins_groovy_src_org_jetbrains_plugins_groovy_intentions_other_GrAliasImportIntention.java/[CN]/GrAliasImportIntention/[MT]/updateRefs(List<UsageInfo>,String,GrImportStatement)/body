{
  if (updatedImport == null)   return;
  final String name=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
    @Nullable @Override public String compute(){
      return updatedImport.getImportedName();
    }
  }
);
  for (  final UsageInfo usage : usages) {
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      @Override public void run(){
        final PsiElement usageElement=usage.getElement();
        if (usageElement == null)         return;
        if (usageElement.getParent() instanceof GrImportStatement)         return;
        if (usageElement instanceof GrReferenceElement) {
          final GrReferenceElement ref=(GrReferenceElement)usageElement;
          final PsiElement qualifier=ref.getQualifier();
          if (qualifier == null) {
            final String refName=ref.getReferenceName();
            if (refName == null)             return;
            if (memberName.equals(refName)) {
              ref.handleElementRenameSimple(name);
            }
 else             if (refName.equals(GroovyPropertyUtils.getPropertyNameByAccessorName(memberName))) {
              final String newPropName=GroovyPropertyUtils.getPropertyNameByAccessorName(name);
              if (newPropName != null) {
                ref.handleElementRenameSimple(newPropName);
              }
 else {
                ref.handleElementRenameSimple(name);
              }
            }
 else             if (refName.equals(GroovyPropertyUtils.getGetterNameBoolean(memberName))) {
              final String getterName=GroovyPropertyUtils.getGetterNameBoolean(name);
              ref.handleElementRenameSimple(getterName);
            }
 else             if (refName.equals(GroovyPropertyUtils.getGetterNameNonBoolean(memberName))) {
              final String getterName=GroovyPropertyUtils.getGetterNameNonBoolean(name);
              ref.handleElementRenameSimple(getterName);
            }
 else             if (refName.equals(GroovyPropertyUtils.getSetterName(memberName))) {
              final String getterName=GroovyPropertyUtils.getSetterName(name);
              ref.handleElementRenameSimple(getterName);
            }
          }
        }
      }
    }
);
  }
}
