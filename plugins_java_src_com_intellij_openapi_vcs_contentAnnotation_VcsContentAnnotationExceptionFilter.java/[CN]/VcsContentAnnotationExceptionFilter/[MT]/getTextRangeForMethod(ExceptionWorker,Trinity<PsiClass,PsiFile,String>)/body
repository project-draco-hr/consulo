{
  String method=worker.getMethod();
  PsiClass psiClass=worker.getPsiClass();
  PsiMethod[] methods;
  if (method.contains("<init>")) {
    methods=psiClass.getConstructors();
  }
 else   if (method.contains("$")) {
    return null;
  }
 else {
    methods=psiClass.findMethodsByName(method,false);
  }
  if (methods.length > 0) {
    if (methods.length == 1) {
      final TextRange range=methods[0].getTextRange();
      return Collections.singletonList(range);
    }
 else {
      List<PsiMethod> selectedMethods=selectMethod(methods,previousLineResult);
      final List<PsiMethod> toIterate=selectedMethods == null ? Arrays.asList(methods) : selectedMethods;
      final List<TextRange> result=new ArrayList<TextRange>();
      for (      PsiMethod psiMethod : toIterate) {
        result.add(psiMethod.getTextRange());
      }
      return result;
    }
  }
  return null;
}
