{
  if (expression.getParent() instanceof PsiParenthesizedExpression) {
    return;
  }
  final PsiType expressionType=expression.getType();
  if (expressionType == null || expressionType.equals(PsiType.VOID) || !TypeConversionUtil.isPrimitiveAndNotNull(expressionType)) {
    return;
  }
  final PsiPrimitiveType primitiveType=(PsiPrimitiveType)expressionType;
  final PsiClassType boxedType=primitiveType.getBoxedType(expression);
  if (boxedType == null) {
    return;
  }
  final PsiType expectedType=ExpectedTypeUtils.findExpectedType(expression,false);
  if (expectedType == null || ClassUtils.isPrimitive(expectedType)) {
    return;
  }
  if (!expectedType.isAssignableFrom(boxedType)) {
    if (!(expectedType instanceof PsiClassType) || !PsiUtil.isConstantExpression(expression)) {
      return;
    }
    final PsiClassType classType=(PsiClassType)expectedType;
    final String className=classType.getCanonicalText();
    if (!convertableBoxedClassNames.contains(className)) {
      return;
    }
    if (!PsiType.BYTE.equals(expressionType) && !PsiType.CHAR.equals(expressionType) && !PsiType.SHORT.equals(expressionType)&& !PsiType.INT.equals(expressionType)) {
      return;
    }
  }
  if (ignoreAddedToCollection && isAddedToCollection(expression)) {
    return;
  }
  registerError(expression);
}
