{
  if (myUpdateSettings.getPruneEmptyDirectories()) {
    final IOFilesBasedDirectoryPruner pruner=new IOFilesBasedDirectoryPruner(ProgressManager.getInstance().getProgressIndicator());
    for (    final VirtualFile myRoot : myRoots) {
      pruner.addFile(new File(myRoot.getPath()));
    }
    pruner.execute();
  }
  if (!myCorruptedFiles.isEmpty()) {
    int showOptions=CvsConfiguration.getInstance(myProject).SHOW_CORRUPTED_PROJECT_FILES;
    if (showOptions == Options.PERFORM_ACTION_AUTOMATICALLY) {
      for (      final MergedWithConflictProjectOrModuleFile myCorruptedFile : myCorruptedFiles) {
        myCorruptedFile.setShouldBeCheckedOut();
      }
    }
 else     if (showOptions == Options.SHOW_DIALOG) {
      modalityContext.runInDispatchThread(new Runnable(){
        public void run(){
          new CorruptedProjectFilesDialog(myProject,myCorruptedFiles).show();
        }
      }
,myProject);
    }
    for (    final MergedWithConflictProjectOrModuleFile myCorruptedFile : myCorruptedFiles) {
      if (myCorruptedFile.shouldBeCheckedOut()) {
        addFileToCheckout(myCorruptedFile.getOriginal());
      }
 else {
        myUpdatedFiles.getGroupById(FileGroup.MODIFIED_ID).add(myCorruptedFile.getOriginal().getPath());
      }
    }
  }
}
