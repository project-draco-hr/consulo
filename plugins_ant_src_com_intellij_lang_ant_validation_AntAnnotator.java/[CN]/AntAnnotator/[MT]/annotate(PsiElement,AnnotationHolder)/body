{
  AntElement element=(AntElement)psiElement;
  if (element instanceof AntStructuredElement) {
    final AntStructuredElement se=(AntStructuredElement)element;
    AntTypeDefinition def=se.getTypeDefinition();
    final String name=se.getName();
    if (def == null) {
      holder.createErrorAnnotation(se,AntBundle.getMessage("undefined.element",name));
    }
 else {
      checkValidAttributes(se,def,holder);
      final AntElement parent=se.getAntParent();
      if (parent instanceof AntStructuredElement) {
        final AntStructuredElement pe=(AntStructuredElement)parent;
        final AntTypeDefinition parentDef=pe.getTypeDefinition();
        if (parentDef != null && parentDef.getNestedClassName(def.getTypeId()) == null) {
          final TextRange textRange=new TextRange(0,name.length()).shiftRight(se.getSourceElement().getTextOffset());
          holder.createErrorAnnotation(textRange,AntBundle.getMessage("nested.element.is.not.allowed.here",name));
        }
      }
    }
  }
  checkReferences(element,holder);
}
