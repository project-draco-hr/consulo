{
  if (tag == null) {
    return;
  }
  final String tagName=tag.getName();
  List<MyAttributeInfo> list=attributesMap.get(tagName);
  if (list == null) {
    list=new ArrayList<MyAttributeInfo>();
    final XmlAttribute[] attributes=tag.getAttributes();
    for (    final XmlAttribute attribute : attributes) {
      list.add(new MyAttributeInfo(attribute.getName()));
    }
  }
 else {
    final XmlAttribute[] attributes=tag.getAttributes();
    ContainerUtil.sort(list);
    Arrays.sort(attributes,new Comparator<XmlAttribute>(){
      public int compare(      XmlAttribute attr1,      XmlAttribute attr2){
        return attr1.getName().compareTo(attr2.getName());
      }
    }
);
    final Iterator<MyAttributeInfo> iter=list.iterator();
    list=new ArrayList<MyAttributeInfo>();
    int index=0;
    while (iter.hasNext()) {
      final MyAttributeInfo info=iter.next();
      boolean requiredFlag=false;
      while (attributes.length > index) {
        if (info.compareTo(attributes[index]) != 0) {
          if (info.compareTo(attributes[index]) < 0) {
            break;
          }
          if (attributes[index].getValue() != null)           list.add(new MyAttributeInfo(attributes[index].getName(),false));
          index++;
        }
 else {
          requiredFlag=true;
          index++;
          break;
        }
      }
      info.myRequired&=requiredFlag;
      list.add(info);
    }
    while (attributes.length > index) {
      if (attributes[index].getValue() != null) {
        list.add(new MyAttributeInfo(attributes[index++].getName(),false));
      }
 else {
        index++;
      }
    }
  }
  attributesMap.put(tagName,list);
  final List<String> tags=tagsMap.get(tagName) != null ? tagsMap.get(tagName) : new ArrayList<String>();
  tagsMap.put(tagName,tags);
  PsiFile file=tag.isValid() ? tag.getContainingFile() : null;
  processXmlElements(tag,new FilterElementProcessor(XmlTagFilter.INSTANCE){
    public void add(    PsiElement element){
      XmlTag tag=(XmlTag)element;
      if (!tags.contains(tag.getName())) {
        tags.add(tag.getName());
      }
      computeTag(tag,tagsMap,attributesMap,processIncludes);
    }
  }
,false,false,file,processIncludes);
}
