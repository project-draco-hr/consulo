{
  final SvnVcs17 vcs=SvnVcs17.getInstance(myProject);
  final SVNWCClient client=vcs.createWCClient();
  try {
    myBeforeRevisionValue=getBeforeRevisionValue(myChange,vcs);
    myAfterRevision=getAfterRevisionValue(myChange,vcs);
    myBeforeContent=getPropertyList(myChange.getBeforeRevision(),myBeforeRevisionValue,client);
    indicator.checkCanceled();
    myAfterContent=getPropertyList(myChange.getAfterRevision(),myAfterRevision,client);
  }
 catch (  SVNException exc) {
    myException=exc;
  }
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      if (myException != null) {
        Messages.showErrorDialog(myException.getMessage(),myErrorTitle);
        return;
      }
      if (myBeforeContent != null && myAfterContent != null && myBeforeRevisionValue != null && myAfterRevision != null) {
        final SimpleDiffRequest diffRequest=new SimpleDiffRequest(myProject,getDiffWindowTitle(myChange));
        if (compareRevisions(myBeforeRevisionValue,myAfterRevision) >= 0) {
          diffRequest.setContents(new SimpleContent(myAfterContent),new SimpleContent(myBeforeContent));
          diffRequest.setContentTitles(revisionToString(myAfterRevision),revisionToString(myBeforeRevisionValue));
        }
 else {
          diffRequest.setContents(new SimpleContent(myBeforeContent),new SimpleContent(myAfterContent));
          diffRequest.setContentTitles(revisionToString(myBeforeRevisionValue),revisionToString(myAfterRevision));
        }
        DiffManager.getInstance().getDiffTool().show(diffRequest);
      }
    }
  }
);
}
