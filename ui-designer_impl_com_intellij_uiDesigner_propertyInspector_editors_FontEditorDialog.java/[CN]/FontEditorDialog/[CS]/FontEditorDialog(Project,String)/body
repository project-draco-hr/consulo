{
  super(project,false);
  init();
  setTitle(UIDesignerBundle.message("font.chooser.title",propertyName));
  myFontNameList.setListData(UIUtil.getValidFontNames(true));
  myFontNameList.addListSelectionListener(new MyListSelectionListener(myFontNameEdit));
  myFontStyleList.setListData(new String[]{UIDesignerBundle.message("font.chooser.regular"),UIDesignerBundle.message("font.chooser.bold"),UIDesignerBundle.message("font.chooser.italic"),UIDesignerBundle.message("font.chooser.bold.italic")});
  myFontStyleList.addListSelectionListener(new MyListSelectionListener(myFontStyleEdit));
  myFontSizeList.setListData(UIUtil.getStandardFontSizes());
  myFontSizeList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      myFontSizeEdit.setValue(Integer.valueOf(myFontSizeList.getSelectedValue().toString()));
      updateValue();
    }
  }
);
  myFontSizeEdit.setModel(new SpinnerNumberModel(3,3,96,1));
  myFontSizeEdit.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      myFontSizeList.setSelectedValue(myFontSizeEdit.getValue().toString(),true);
      updateValue();
    }
  }
);
  mySwingFontList.setListData(collectSwingFontDescriptors());
  mySwingFontList.setCellRenderer(new ColoredListCellRenderer(){
    protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      FontDescriptor descriptor=(FontDescriptor)value;
      clear();
      append(descriptor.getSwingFont(),selected ? SimpleTextAttributes.SELECTED_SIMPLE_CELL_ATTRIBUTES : SimpleTextAttributes.SIMPLE_CELL_ATTRIBUTES);
      append(" (" + IntroFontProperty.fontToString(descriptor.getResolvedFont()) + ")",selected ? SimpleTextAttributes.SELECTED_SIMPLE_CELL_ATTRIBUTES : SimpleTextAttributes.GRAYED_ATTRIBUTES);
    }
  }
);
  mySwingFontList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      myValue=(FontDescriptor)mySwingFontList.getSelectedValue();
      updatePreview();
      showFont(myValue.getResolvedFont());
    }
  }
);
}
