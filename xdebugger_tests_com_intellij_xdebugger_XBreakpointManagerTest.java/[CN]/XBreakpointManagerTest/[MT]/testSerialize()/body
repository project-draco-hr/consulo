{
  XLineBreakpoint<MyBreakpointProperties> breakpoint=myBreakpointManager.addLineBreakpoint(MY_LINE_BREAKPOINT_TYPE,"myurl",239,new MyBreakpointProperties("abc"));
  breakpoint.setCondition("cond");
  breakpoint.setLogExpression("log");
  breakpoint.setSuspendPolicy(SuspendPolicy.NONE);
  breakpoint.setLogMessage(true);
  myBreakpointManager.addBreakpoint(MY_SIMPLE_BREAKPOINT_TYPE,new MyBreakpointProperties("123"));
  Element element=XmlSerializer.serialize(myBreakpointManager.getState());
  XBreakpointManagerImpl.BreakpointManagerState managerState=XmlSerializer.deserialize(element,XBreakpointManagerImpl.BreakpointManagerState.class);
  myBreakpointManager.loadState(managerState);
  XBreakpoint<?>[] breakpoints=myBreakpointManager.getAllBreakpoints();
  assertEquals(2,breakpoints.length);
  XLineBreakpoint lineBreakpoint=assertInstanceOf(breakpoints[0],XLineBreakpoint.class);
  assertEquals(239,lineBreakpoint.getLine());
  assertEquals("myurl",lineBreakpoint.getFileUrl());
  assertEquals("abc",assertInstanceOf(lineBreakpoint.getProperties(),MyBreakpointProperties.class).myOption);
  assertEquals("cond",lineBreakpoint.getCondition());
  assertEquals("log",lineBreakpoint.getLogExpression());
  assertTrue(lineBreakpoint.isLogMessage());
  assertEquals(SuspendPolicy.NONE,lineBreakpoint.getSuspendPolicy());
  assertEquals("123",assertInstanceOf(breakpoints[1].getProperties(),MyBreakpointProperties.class).myOption);
  assertEquals(SuspendPolicy.ALL,breakpoints[1].getSuspendPolicy());
  assertFalse(breakpoints[1].isLogMessage());
}
