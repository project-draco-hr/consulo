{
  final StringBuilder out=new StringBuilder();
  XBreakpointAdapter<MyBreakpointProperties> listener=new XBreakpointAdapter<MyBreakpointProperties>(){
    public void breakpointAdded(    @NotNull final XBreakpoint<MyBreakpointProperties> breakpoint){
      out.append("added[").append(breakpoint.getProperties().myOption).append("];");
    }
    public void breakpointRemoved(    @NotNull final XBreakpoint<MyBreakpointProperties> breakpoint){
      out.append("removed[").append(breakpoint.getProperties().myOption).append("];");
    }
  }
;
  myBreakpointManager.addBreakpointListener(MY_BREAKPOINT_TYPE,listener);
  XBreakpoint<MyBreakpointProperties> breakpoint=myBreakpointManager.addBreakpoint(MY_BREAKPOINT_TYPE,new MyBreakpointProperties("abc"));
  myBreakpointManager.removeBreakpoint(breakpoint);
  assertEquals("added[abc];removed[abc];",out.toString());
  myBreakpointManager.removeBreakpointListener(MY_BREAKPOINT_TYPE,listener);
  out.setLength(0);
  myBreakpointManager.addBreakpoint(MY_BREAKPOINT_TYPE,new MyBreakpointProperties("a"));
  assertEquals("",out.toString());
}
