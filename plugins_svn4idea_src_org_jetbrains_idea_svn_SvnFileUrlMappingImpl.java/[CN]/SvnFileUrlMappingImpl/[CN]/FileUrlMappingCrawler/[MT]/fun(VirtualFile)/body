{
  try {
    SVNInfo info=myVcs.getInfoWithCaching(virtualFile);
    if (info == null) {
      return Collections.emptyList();
    }
    final File ioFile=new File(virtualFile.getPath());
    SVNURL repositoryUrl=info.getRepositoryRootURL();
    if (repositoryUrl == null) {
      info=myClient.doInfo(ioFile,SVNRevision.HEAD);
      repositoryUrl=info.getRepositoryRootURL();
      if (repositoryUrl == null) {
        LOG.info("Error: cannot find repository URL for versioned folder: " + ioFile.getAbsolutePath());
        return Collections.emptyList();
      }
    }
    final String currentPath=FileUtil.toSystemDependentName(virtualFile.getPath()) + File.separator;
    final SvnFileUrlMappingRefresher.RootUrlInfo rootInfo=new SvnFileUrlMappingRefresher.RootUrlInfo(repositoryUrl,info.getURL(),SvnFormatSelector.getWorkingCopyFormat(ioFile));
    if ((!myUserRootsDiffersFromReal) && (!myCurrentRoot.equals(virtualFile))) {
      myUserRootsDiffersFromReal=true;
    }
    myFile2UrlMap.put(currentPath,rootInfo);
    myUrl2FileMap.put(rootInfo.getAbsoluteUrl(),new Pair<String,VirtualFile>(currentPath,virtualFile));
    myFileRootsMap.put(rootInfo.getAbsoluteUrl(),myCurrentRoot);
  }
 catch (  SVNException e) {
    LOG.info(e);
  }
  return Collections.emptyList();
}
