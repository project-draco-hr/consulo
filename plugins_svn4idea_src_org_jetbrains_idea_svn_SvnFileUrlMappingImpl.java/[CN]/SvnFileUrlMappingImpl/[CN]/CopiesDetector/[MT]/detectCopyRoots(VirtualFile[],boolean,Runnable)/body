{
  final Getter<Boolean> cancelGetter=new Getter<Boolean>(){
    public Boolean get(){
      return myVcs.getProject().isDisposed();
    }
  }
;
  for (  final VirtualFile vcsRoot : roots) {
    final List<Real> foundRoots=ForNestedRootChecker.getAllNestedWorkingCopies(vcsRoot,myVcs,false,cancelGetter);
    if (foundRoots.isEmpty()) {
      myLonelyRoots.add(vcsRoot);
    }
    for (    Real foundRoot : foundRoots) {
      final SVNURL repoRoot=foundRoot.getInfo().getRepositoryRootURL();
      if (repoRoot == null) {
        LOG.info("Error: cannot find repository URL for versioned folder: " + foundRoot.getFile().getPath());
      }
 else {
        myRepositoryRoots.register(repoRoot);
        myTopRoots.add(new RootUrlInfo(repoRoot,foundRoot.getInfo().getURL(),SvnFormatSelector.getWorkingCopyFormat(new File(foundRoot.getFile().getPath())),foundRoot.getFile(),vcsRoot));
      }
    }
  }
  addNestedRoots(clearState,callback);
}
