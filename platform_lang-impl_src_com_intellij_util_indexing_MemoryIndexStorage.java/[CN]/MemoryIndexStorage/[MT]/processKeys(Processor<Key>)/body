{
  r.lock();
  try {
    if (myBufferingEnabled) {
      final Set<Key> stopList=new HashSet<Key>();
      Processor<Key> decoratingProcessor=new Processor<Key>(){
        public boolean process(        final Key key){
          if (stopList.contains(key))           return true;
          final UpdatableValueContainer<Value> container=myMap.get(key);
          if (container != null && container.size() == 0)           return true;
          return processor.process(key);
        }
      }
;
      for (      Key key : myMap.keySet()) {
        if (!decoratingProcessor.process(key))         return false;
        stopList.add(key);
      }
      return myBackendStorage.processKeys(decoratingProcessor);
    }
  }
  finally {
    r.unlock();
  }
  return myBackendStorage.processKeys(processor);
}
