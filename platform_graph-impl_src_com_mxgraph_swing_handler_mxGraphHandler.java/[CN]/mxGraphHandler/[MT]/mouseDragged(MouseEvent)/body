{
  if (graphComponent.isAutoScroll()) {
    graphComponent.getGraphControl().scrollRectToVisible(new Rectangle(e.getPoint()));
  }
  if (!e.isConsumed()) {
    gridEnabledEvent=graphComponent.isGridEnabledEvent(e);
    constrainedEvent=graphComponent.isConstrainedEvent(e);
    if (constrainedEvent && first != null) {
      int x=e.getX();
      int y=e.getY();
      if (Math.abs(e.getX() - first.x) > Math.abs(e.getY() - first.y)) {
        y=first.y;
      }
 else {
        x=first.x;
      }
      e=new MouseEvent(e.getComponent(),e.getID(),e.getWhen(),e.getModifiers(),x,y,e.getClickCount(),e.isPopupTrigger(),e.getButton());
    }
    if (isVisible() && isMarkerEnabled()) {
      marker.process(e);
    }
    if (first != null) {
      if (movePreview.isActive()) {
        double dx=e.getX() - first.x;
        double dy=e.getY() - first.y;
        if (graphComponent.isGridEnabledEvent(e)) {
          mxGraph graph=graphComponent.getGraph();
          dx=graph.snap(dx);
          dy=graph.snap(dy);
        }
        boolean clone=isCloneEnabled() && graphComponent.isCloneEvent(e);
        movePreview.update(e,dx,dy,clone);
        e.consume();
      }
 else       if (cellBounds != null) {
        double dx=e.getX() - first.x;
        double dy=e.getY() - first.y;
        if (previewBounds != null) {
          setPreviewBounds(new Rectangle(getPreviewLocation(e,gridEnabledEvent),previewBounds.getSize()));
        }
        if (!isVisible() && graphComponent.isSignificant(dx,dy)) {
          if (imagePreview && dragImage == null && !graphComponent.isDragEnabled()) {
            updateDragImage(cells);
          }
          setVisible(true);
        }
        e.consume();
      }
    }
  }
}
