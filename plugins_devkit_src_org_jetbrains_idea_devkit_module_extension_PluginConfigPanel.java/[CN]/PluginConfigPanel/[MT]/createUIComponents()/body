{
  myRoot=this;
  myModuleExtensionWithSdkPanel=new ModuleExtensionWithSdkPanel(myMutableModuleExtension,new Runnable(){
    @Override public void run(){
      if (myUpdateOnCheck != null) {
        myUpdateOnCheck.run();
      }
      updateList();
    }
  }
);
  myPluginsList=new CheckBoxList<IdeaPluginDescriptorImpl>();
  myPluginsList.setCheckBoxListListener(new CheckBoxListListener(){
    @Override public void checkBoxSelectionChanged(    int index,    boolean value){
      final Object itemAt=myPluginsList.getItemAt(index);
      if (itemAt != null) {
        final LibraryTable moduleLibraryTable=myRootModel.getModuleLibraryTable();
        final IdeaPluginDescriptorImpl ideaPluginDescriptor=(IdeaPluginDescriptorImpl)itemAt;
        if (value) {
          final List<File> classPath=ideaPluginDescriptor.getClassPath();
          final Library library=moduleLibraryTable.createLibrary(LIBRARY_PREFIX + ideaPluginDescriptor.getName());
          final Library.ModifiableModel modifiableModel=library.getModifiableModel();
          JarFileSystem jarFileSystem=JarFileSystem.getInstance();
          for (          File file : classPath) {
            modifiableModel.addRoot(jarFileSystem.findFileByPath(file.getPath() + JarFileSystem.JAR_SEPARATOR),OrderRootType.CLASSES);
          }
          modifiableModel.commit();
        }
 else {
          final Library library=findLibrary(ideaPluginDescriptor);
          if (library != null) {
            moduleLibraryTable.removeLibrary(library);
          }
        }
        UIUtil.invokeLaterIfNeeded(myUpdateOnCheck);
      }
    }
  }
);
}
