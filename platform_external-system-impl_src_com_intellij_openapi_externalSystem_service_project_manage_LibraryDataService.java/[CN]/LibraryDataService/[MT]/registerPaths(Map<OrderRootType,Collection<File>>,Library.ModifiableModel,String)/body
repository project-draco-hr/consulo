{
  for (  Map.Entry<OrderRootType,Collection<File>> entry : libraryFiles.entrySet()) {
    for (    File file : entry.getValue()) {
      VirtualFile virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
      if (virtualFile == null) {
        if (ExternalSystemConstants.VERBOSE_PROCESSING && entry.getKey() == BinariesOrderRootType.getInstance()) {
          LOG.warn(String.format("Can't find %s of the library '%s' at path '%s'",entry.getKey(),libraryName,file.getAbsolutePath()));
        }
        String url=VfsUtil.getUrlForLibraryRoot(file);
        model.addRoot(url,entry.getKey());
        continue;
      }
      if (virtualFile.isDirectory()) {
        model.addRoot(virtualFile,entry.getKey());
      }
 else {
        VirtualFile jarRoot=ArchiveVfsUtil.getJarRootForLocalFile(virtualFile);
        if (jarRoot == null) {
          LOG.warn(String.format("Can't parse contents of the jar file at path '%s' for the library '%s''",file.getAbsolutePath(),libraryName));
          continue;
        }
        model.addRoot(jarRoot,entry.getKey());
      }
    }
  }
}
