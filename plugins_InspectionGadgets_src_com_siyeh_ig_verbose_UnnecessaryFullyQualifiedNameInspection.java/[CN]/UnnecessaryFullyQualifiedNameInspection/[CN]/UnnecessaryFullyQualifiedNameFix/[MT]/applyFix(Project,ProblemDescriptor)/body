{
  if (isQuickFixOnReadOnlyFile(project,descriptor))   return;
  final CodeStyleSettingsManager settingsManager=CodeStyleSettingsManager.getInstance(project);
  final CodeStyleSettings settings=settingsManager.getCurrentSettings();
  final boolean oldUseFQNamesInJavadoc=settings.USE_FQ_CLASS_NAMES_IN_JAVADOC;
  final boolean oldUseFQNames=settings.USE_FQ_CLASS_NAMES;
  try {
    settings.USE_FQ_CLASS_NAMES_IN_JAVADOC=false;
    settings.USE_FQ_CLASS_NAMES=false;
    final PsiJavaCodeReferenceElement reference=(PsiJavaCodeReferenceElement)descriptor.getPsiElement();
    final PsiManager psiManager=reference.getManager();
    final CodeStyleManager styleManager=psiManager.getCodeStyleManager();
    styleManager.shortenClassReferences(reference);
  }
 catch (  IncorrectOperationException e) {
    final Class thisClass=getClass();
    final String className=thisClass.getName();
    final Logger logger=Logger.getInstance(className);
    logger.error(e);
  }
 finally {
    settings.USE_FQ_CLASS_NAMES_IN_JAVADOC=oldUseFQNamesInJavadoc;
    settings.USE_FQ_CLASS_NAMES=oldUseFQNames;
  }
}
