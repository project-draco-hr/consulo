{
  final String text=element.getText();
  if (text.indexOf((int)'.') < 0) {
    return;
  }
  if (m_ignoreJavadoc) {
    final PsiElement containingComment=PsiTreeUtil.getParentOfType(element,PsiDocComment.class);
    if (containingComment != null) {
      return;
    }
  }
  final PsiElement psiElement=element.resolve();
  if (!(psiElement instanceof PsiClass)) {
    return;
  }
  final PsiReferenceParameterList typeParameters=element.getParameterList();
  if (typeParameters != null) {
    typeParameters.accept(this);
  }
  final PsiClass aClass=(PsiClass)psiElement;
  final PsiClass outerClass=ClassUtils.getOutermostContainingClass(aClass);
  final String fqName=outerClass.getQualifiedName();
  if (!text.startsWith(fqName)) {
    return;
  }
  final PsiJavaFile file=(PsiJavaFile)element.getContainingFile();
  if (!ImportUtils.nameCanBeImported(text,file)) {
    return;
  }
  registerError(element);
}
