{
  ((StartupManagerImpl)StartupManager.getInstance(myProject)).setBackgroundIndexing(true);
  final VirtualFile[] files=remaining.toArray(new VirtualFile[remaining.size()]);
  DumbServiceImpl.getInstance().queueIndexUpdate(myProject,new Consumer<ProgressIndicator>(){
    public void consume(    final ProgressIndicator indicator){
      try {
        for (int i=0; i < files.length; i++) {
          if (myProject != null && myProject.isDisposed())           return;
          final VirtualFile file=files[i];
          indicator.setFraction(((double)i) / files.length);
          indicator.setText2(file.getPresentableUrl());
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            public void run(){
              indicator.checkCanceled();
              if (myProject != null && myProject.isDisposed())               return;
              if (!file.isValid())               return;
              try {
                processFile(new FileContent(file));
              }
 catch (              NoProjectForFileException ignored) {
              }
catch (              Throwable e) {
                LOG.error("Error while indexing " + file.getPresentableUrl(),e);
                file.putUserData(DONT_INDEX_AGAIN_KEY,Boolean.TRUE);
              }
            }
          }
);
        }
      }
  finally {
        updatingDone();
      }
    }
  }
);
}
