{
  return new PsiElementVisitor(){
    @Override public void visitElement(    final PsiElement element){
      final ASTNode node=element.getNode();
      if (node == null) {
        return;
      }
      final Language language=element.getLanguage();
      final IElementType elementType=node.getElementType();
      final ParserDefinition parserDefinition=LanguageParserDefinitions.INSTANCE.forLanguage(language);
      if (parserDefinition != null) {
        if (parserDefinition.getStringLiteralElements().contains(elementType)) {
          if (!processLiterals) {
            return;
          }
        }
 else         if (parserDefinition.getCommentTokens().contains(elementType)) {
          if (!processComments) {
            return;
          }
        }
 else         if (!processLiterals) {
          return;
        }
      }
      ensureFactoriesAreLoaded();
      final SpellcheckingStrategy factoryByLanguage=getFactoryByLanguage(language);
      final Tokenizer tokenizer=factoryByLanguage.getTokenizer(element);
      @SuppressWarnings({"unchecked"}) final Token[] tokens=tokenizer.tokenize(element);
      if (tokens == null) {
        return;
      }
      for (      Token token : tokens) {
        inspect(token,holder,isOnTheFly,getNamesValidators());
      }
    }
  }
;
}
