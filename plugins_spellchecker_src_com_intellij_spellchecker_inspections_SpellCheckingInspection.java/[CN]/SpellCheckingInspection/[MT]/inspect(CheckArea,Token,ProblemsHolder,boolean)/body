{
  SpellCheckerManager manager=SpellCheckerManager.getInstance(token.getElement().getProject());
  final TextRange textRange=area.getTextRange();
  final String word=area.getWord();
  if (textRange == null || word == null) {
    return;
  }
  if (manager.hasProblem(word)) {
    List<LocalQuickFix> fixes=new ArrayList<LocalQuickFix>();
    if (isOnTheFly) {
      if (!token.isUseRename()) {
        fixes.add(new ChangeTo(textRange,word,token.getElement().getProject()));
      }
 else {
        fixes.add(new RenameTo(textRange,word,token.getElement().getProject()));
      }
    }
    final AcceptWordAsCorrect acceptWordAsCorrect=new AcceptWordAsCorrect();
    fixes.add(acceptWordAsCorrect);
    final ProblemDescriptor problemDescriptor=createProblemDescriptor(token,holder,textRange,word,fixes);
    holder.registerProblem(problemDescriptor);
    acceptWordAsCorrect.setDescriptor(problemDescriptor);
  }
}
