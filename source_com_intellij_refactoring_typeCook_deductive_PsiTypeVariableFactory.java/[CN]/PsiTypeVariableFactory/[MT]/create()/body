{
  return new PsiTypeVariable(){
    private int myIndex=myCurrent++;
    public String getPresentableText(){
      return "$" + myIndex;
    }
    public String getCanonicalText(){
      return getPresentableText();
    }
    public String getInternalCanonicalText(){
      return getCanonicalText();
    }
    public boolean isValid(){
      return true;
    }
    public boolean equalsToText(    String text){
      return text.equals(getPresentableText());
    }
    public <A>A accept(    PsiTypeVisitor<A> visitor){
      if (visitor instanceof PsiExtendedTypeVisitor) {
        return ((PsiExtendedTypeVisitor<A>)visitor).visitTypeVariable(this);
      }
      return null;
    }
    public GlobalSearchScope getResolveScope(){
      return null;
    }
    public PsiType[] getSuperTypes(){
      return new PsiType[0];
    }
    public boolean equals(    Object o){
      if (this == o)       return true;
      if (!(o instanceof PsiTypeVariable))       return false;
      final PsiTypeVariable psiTypeVariable=(PsiTypeVariable)o;
      if (myIndex != psiTypeVariable.getIndex())       return false;
      return true;
    }
    public int hashCode(){
      return myIndex;
    }
    public int getIndex(){
      return myIndex;
    }
  }
;
}
