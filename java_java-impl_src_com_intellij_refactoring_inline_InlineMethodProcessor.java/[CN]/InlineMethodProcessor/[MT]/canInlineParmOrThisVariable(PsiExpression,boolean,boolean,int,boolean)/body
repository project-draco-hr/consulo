{
  if (strictlyFinal) {
class CanAllLocalsBeDeclaredFinal extends JavaRecursiveElementWalkingVisitor {
      boolean success=true;
      @Override public void visitReferenceExpression(      PsiReferenceExpression expression){
        final PsiElement psiElement=expression.resolve();
        if (psiElement instanceof PsiLocalVariable || psiElement instanceof PsiParameter) {
          if (!RefactoringUtil.canBeDeclaredFinal((PsiVariable)psiElement)) {
            success=false;
          }
        }
      }
      @Override public void visitElement(      PsiElement element){
        if (success) {
          super.visitElement(element);
        }
      }
    }
    final CanAllLocalsBeDeclaredFinal canAllLocalsBeDeclaredFinal=new CanAllLocalsBeDeclaredFinal();
    initializer.accept(canAllLocalsBeDeclaredFinal);
    if (!canAllLocalsBeDeclaredFinal.success)     return false;
  }
  if (initializer instanceof PsiReferenceExpression) {
    PsiVariable refVar=(PsiVariable)((PsiReferenceExpression)initializer).resolve();
    if (refVar == null) {
      return !isAccessedForWriting;
    }
    if (refVar instanceof PsiField) {
      if (isAccessedForWriting)       return false;
      return true;
    }
 else {
      if (isAccessedForWriting) {
        if (refVar.hasModifierProperty(PsiModifier.FINAL) || shouldBeFinal)         return false;
        PsiReference[] refs=ReferencesSearch.search(refVar,GlobalSearchScope.projectScope(myProject),false).toArray(new PsiReference[0]);
        return refs.length == 1;
      }
 else {
        if (shouldBeFinal) {
          return refVar.hasModifierProperty(PsiModifier.FINAL) || RefactoringUtil.canBeDeclaredFinal(refVar);
        }
        return true;
      }
    }
  }
 else   if (isAccessedForWriting) {
    return false;
  }
 else   if (initializer instanceof PsiCallExpression) {
    if (accessCount > 1)     return false;
    if (initializer instanceof PsiNewExpression) {
      final PsiArrayInitializerExpression arrayInitializer=((PsiNewExpression)initializer).getArrayInitializer();
      if (arrayInitializer != null) {
        for (        PsiExpression expression : arrayInitializer.getInitializers()) {
          if (!canInlineParmOrThisVariable(expression,shouldBeFinal,strictlyFinal,accessCount,false)) {
            return false;
          }
        }
        return true;
      }
    }
    final PsiExpressionList argumentList=((PsiCallExpression)initializer).getArgumentList();
    if (argumentList == null)     return false;
    final PsiExpression[] expressions=argumentList.getExpressions();
    for (    PsiExpression expression : expressions) {
      if (!canInlineParmOrThisVariable(expression,shouldBeFinal,strictlyFinal,accessCount,false)) {
        return false;
      }
    }
    return true;
  }
 else   if (initializer instanceof PsiLiteralExpression) {
    return true;
  }
 else   if (initializer instanceof PsiArrayAccessExpression) {
    final PsiExpression arrayExpression=((PsiArrayAccessExpression)initializer).getArrayExpression();
    final PsiExpression indexExpression=((PsiArrayAccessExpression)initializer).getIndexExpression();
    return canInlineParmOrThisVariable(arrayExpression,shouldBeFinal,strictlyFinal,accessCount,false) && canInlineParmOrThisVariable(indexExpression,shouldBeFinal,strictlyFinal,accessCount,false);
  }
 else   if (initializer instanceof PsiParenthesizedExpression) {
    PsiExpression expr=((PsiParenthesizedExpression)initializer).getExpression();
    return expr == null || canInlineParmOrThisVariable(expr,shouldBeFinal,strictlyFinal,accessCount,false);
  }
 else   if (initializer instanceof PsiTypeCastExpression) {
    PsiExpression operand=((PsiTypeCastExpression)initializer).getOperand();
    return operand != null && canInlineParmOrThisVariable(operand,shouldBeFinal,strictlyFinal,accessCount,false);
  }
 else   if (initializer instanceof PsiBinaryExpression) {
    PsiBinaryExpression binExpr=(PsiBinaryExpression)initializer;
    PsiExpression lOperand=binExpr.getLOperand();
    PsiExpression rOperand=binExpr.getROperand();
    return rOperand != null && canInlineParmOrThisVariable(lOperand,shouldBeFinal,strictlyFinal,accessCount,false) && canInlineParmOrThisVariable(rOperand,shouldBeFinal,strictlyFinal,accessCount,false);
  }
 else   if (initializer instanceof PsiClassObjectAccessExpression) {
    return true;
  }
 else   if (initializer instanceof PsiThisExpression) {
    return true;
  }
 else   if (initializer instanceof PsiSuperExpression) {
    return true;
  }
 else {
    return false;
  }
}
