{
  Map<PsiMember,Set<PsiMember>> result=new HashMap<PsiMember,Set<PsiMember>>();
  for (  UsageInfo usage : usages) {
    final PsiElement container=ConflictsUtil.getContainer(usage.getElement());
    if (!(container instanceof PsiMember))     continue;
    PsiMember memberContainer=(PsiMember)container;
    Set<PsiMember> inaccessibleReferenced=result.get(memberContainer);
    if (inaccessibleReferenced == null) {
      inaccessibleReferenced=new HashSet<PsiMember>();
      result.put(memberContainer,inaccessibleReferenced);
      for (      PsiMember member : referencedElements) {
        if (!PsiUtil.isAccessible(member,usage.getElement(),null)) {
          inaccessibleReferenced.add(member);
        }
      }
    }
  }
  return result;
}
