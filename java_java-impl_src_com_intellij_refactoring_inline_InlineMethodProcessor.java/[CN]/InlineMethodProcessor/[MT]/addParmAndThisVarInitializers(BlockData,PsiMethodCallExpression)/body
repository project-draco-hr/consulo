{
  PsiExpression[] args=methodCall.getArgumentList().getExpressions();
  if (blockData.parmVars.length > 0) {
    for (int i=0; i < args.length; i++) {
      int j=Math.min(i,blockData.parmVars.length - 1);
      final PsiExpression initializer=blockData.parmVars[j].getInitializer();
      LOG.assertTrue(initializer != null);
      if (initializer instanceof PsiNewExpression && ((PsiNewExpression)initializer).getArrayInitializer() != null) {
        final PsiArrayInitializerExpression arrayInitializer=((PsiNewExpression)initializer).getArrayInitializer();
        arrayInitializer.add(args[i]);
        continue;
      }
      initializer.replace(args[i]);
    }
  }
  if (blockData.thisVar != null) {
    PsiExpression qualifier=methodCall.getMethodExpression().getQualifierExpression();
    if (qualifier == null) {
      PsiElement parent=methodCall.getParent();
      while (true) {
        if (parent instanceof PsiClass)         break;
        if (parent instanceof PsiFile)         break;
        parent=parent.getParent();
      }
      if (parent instanceof PsiClass) {
        PsiClass parentClass=(PsiClass)parent;
        final PsiClass containingClass=myMethod.getContainingClass();
        if (InheritanceUtil.isInheritorOrSelf(parentClass,containingClass,true)) {
          qualifier=myFactory.createExpressionFromText("this",null);
        }
 else {
          if (PsiTreeUtil.isAncestor(containingClass,parent,false)) {
            String name=containingClass.getName();
            if (name != null) {
              qualifier=myFactory.createExpressionFromText(name + ".this",null);
            }
 else {
              qualifier=myFactory.createExpressionFromText("this",null);
            }
          }
 else {
            do {
              parentClass=PsiTreeUtil.getParentOfType(parentClass,PsiClass.class,true);
              if (InheritanceUtil.isInheritorOrSelf(parentClass,containingClass,true)) {
                LOG.assertTrue(parentClass != null);
                final String childClassName=parentClass.getName();
                qualifier=myFactory.createExpressionFromText(childClassName != null ? childClassName + ".this" : "this",null);
                break;
              }
            }
 while (parentClass != null);
          }
        }
      }
 else {
        qualifier=myFactory.createExpressionFromText("this",null);
      }
    }
 else     if (qualifier instanceof PsiSuperExpression) {
      qualifier=myFactory.createExpressionFromText("this",null);
    }
    blockData.thisVar.getInitializer().replace(qualifier);
  }
}
