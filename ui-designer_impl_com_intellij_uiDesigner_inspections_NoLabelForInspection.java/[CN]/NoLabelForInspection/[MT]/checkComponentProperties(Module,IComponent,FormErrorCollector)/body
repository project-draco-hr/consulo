{
  if (FormInspectionUtil.isComponentClass(module,component,JTextComponent.class) || FormInspectionUtil.isComponentClass(module,component,JComboBox.class)) {
    IComponent root=component;
    while (root.getParentContainer() != null) {
      root=root.getParentContainer();
    }
    final Ref<Boolean> found=new Ref<Boolean>(Boolean.FALSE);
    final Ref<RadComponent> candidateLabel=new Ref<RadComponent>();
    IComponentUtil.iterate(root,new IComponentUtil.ComponentVisitor(){
      public boolean visit(      final IComponent c2){
        if (FormInspectionUtil.isComponentClass(module,c2,JLabel.class)) {
          IProperty prop=DuplicateMnemonicInspection.findProperty(c2,SwingProperties.LABEL_FOR);
          if (prop != null && component.getId().equals(prop.getPropertyValue(c2))) {
            found.set(Boolean.TRUE);
            return false;
          }
 else           if (component instanceof RadComponent && (prop == null || StringUtil.isEmpty((String)prop.getPropertyValue(c2)))) {
            RadComponent radComponent=(RadComponent)component;
            final RadComponent radComponent2=((RadComponent)c2);
            if (radComponent.getParent() == radComponent2.getParent()) {
              GridConstraints gc1=radComponent.getConstraints();
              GridConstraints gc2=radComponent2.getConstraints();
              if ((gc1.getRow() == gc2.getRow() && gc1.getColumn() == gc2.getColumn() + 1) || (gc1.getColumn() == gc2.getColumn() && gc1.getRow() == gc2.getRow() + 1)) {
                candidateLabel.set(radComponent2);
                candidateLabel.set(radComponent2);
              }
            }
          }
        }
        return true;
      }
    }
);
    if (!found.get().booleanValue()) {
      collector.addError(null,UIDesignerBundle.message("inspection.no.label.for.error"),candidateLabel.isNull() ? null : new EditorQuickFixProvider(){
        public QuickFix createQuickFix(        GuiEditor editor,        RadComponent component){
          return new MyQuickFix(editor,component,candidateLabel.get());
        }
      }
);
    }
  }
}
