{
  final JPanel result=new JPanel(){
    @Override public void doLayout(){
synchronized (getTreeLock()) {
        final Container container=getParent();
        if (container != null) {
          final Component[] components=getComponents();
          LOG.assertTrue(components.length == 1);
          for (          Component c : components) {
            Point location;
            if (myCachedSize == null) {
              myCachedSize=c.getPreferredSize();
              location=getLocationInCenter(myCachedSize,c.getLocation());
            }
 else {
              location=c.getLocation();
            }
            final double _width=myCachedSize.getWidth();
            final double _height=myCachedSize.getHeight();
            final DialogWrapper dialogWrapper=myDialogWrapper.get();
            if (dialogWrapper != null) {
              final int width=(int)(_width * dialogWrapper.getHorizontalStretch());
              final int height=(int)(_height * dialogWrapper.getVerticalStretch());
              c.setBounds((int)location.getX(),(int)location.getY(),width,height);
            }
 else {
              c.setBounds((int)location.getX(),(int)location.getY(),(int)_width,(int)_height);
            }
          }
        }
      }
      super.doLayout();
    }
  }
;
  result.setLayout(null);
  result.setOpaque(false);
  result.addMouseListener(new MouseAdapter(){
  }
);
  result.addMouseMotionListener(new MouseMotionAdapter(){
  }
);
  return result;
}
