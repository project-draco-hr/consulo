{
  if (signature == null)   return PsiSubstitutor.EMPTY;
  final PsiType[] types=method.getSignature(substitutor).getParameterTypes();
  final PsiType[] rightTypes=signature.getParameterTypes();
  if (types.length < rightTypes.length) {
    return PsiUtil.resolveGenericsClassInType(rightTypes[0]).getSubstitutor();
  }
 else   if (types.length > rightTypes.length) {
    return PsiUtil.resolveGenericsClassInType(types[0]).getSubstitutor();
  }
  PsiSubstitutor psiSubstitutor=JavaPsiFacade.getInstance(getProject()).getResolveHelper().inferTypeArguments(method.getTypeParameters(),types,rightTypes,languageLevel);
  psiSubstitutor=psiSubstitutor.putAll(substitutor);
  return LambdaUtil.inferFromReturnType(method.getTypeParameters(),psiSubstitutor.substitute(method.getReturnType()),interfaceMethodReturnType,psiSubstitutor,languageLevel,PsiMethodReferenceExpressionImpl.this.getProject());
}
