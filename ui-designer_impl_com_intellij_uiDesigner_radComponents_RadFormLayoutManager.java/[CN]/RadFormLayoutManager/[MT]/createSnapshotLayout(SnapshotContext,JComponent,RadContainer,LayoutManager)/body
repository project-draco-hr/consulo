{
  ColumnSpec[] colSpecs;
  RowSpec[] rowSpecs;
  int[][] rowGroups;
  int[][] columnGroups;
  try {
    Method method=layout.getClass().getMethod("getRowCount",ArrayUtil.EMPTY_CLASS_ARRAY);
    int rowCount=((Integer)method.invoke(layout,ArrayUtil.EMPTY_OBJECT_ARRAY)).intValue();
    method=layout.getClass().getMethod("getColumnCount",ArrayUtil.EMPTY_CLASS_ARRAY);
    int columnCount=((Integer)method.invoke(layout,ArrayUtil.EMPTY_OBJECT_ARRAY)).intValue();
    rowSpecs=new RowSpec[rowCount];
    colSpecs=new ColumnSpec[columnCount];
    method=layout.getClass().getMethod("getRowSpec",int.class);
    for (int i=0; i < rowCount; i++) {
      rowSpecs[i]=(RowSpec)createSerializedCopy(method.invoke(layout,i + 1));
    }
    method=layout.getClass().getMethod("getColumnSpec",int.class);
    for (int i=0; i < columnCount; i++) {
      colSpecs[i]=(ColumnSpec)createSerializedCopy(method.invoke(layout,i + 1));
    }
    method=layout.getClass().getMethod("getRowGroups",ArrayUtil.EMPTY_CLASS_ARRAY);
    rowGroups=(int[][])method.invoke(layout);
    method=layout.getClass().getMethod("getColumnGroups",ArrayUtil.EMPTY_CLASS_ARRAY);
    columnGroups=(int[][])method.invoke(layout);
  }
 catch (  Exception ex) {
    throw new RuntimeException(ex);
  }
  final FormLayout formLayout=new FormLayout(colSpecs,rowSpecs);
  formLayout.setRowGroups(rowGroups);
  formLayout.setColumnGroups(columnGroups);
  container.setLayout(formLayout);
}
