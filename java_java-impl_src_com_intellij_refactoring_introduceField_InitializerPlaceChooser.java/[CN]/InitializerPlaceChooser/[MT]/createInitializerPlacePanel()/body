{
  final JPanel initializationPanel=new JPanel();
  initializationPanel.setBorder(IdeBorderFactory.createTitledBorder(RefactoringBundle.message("initialize.in.border.title")));
  initializationPanel.setLayout(new BoxLayout(initializationPanel,BoxLayout.Y_AXIS));
  myRbInCurrentMethod=new JRadioButton();
  myRbInCurrentMethod.setFocusable(false);
  myRbInCurrentMethod.setText(RefactoringBundle.message("current.method.radio"));
  myRbInCurrentMethod.setEnabled(myAllowInitInMethod);
  myRbInFieldDeclaration=new JRadioButton();
  myRbInFieldDeclaration.setFocusable(false);
  myRbInFieldDeclaration.setText(RefactoringBundle.message("field.declaration.radio"));
  myRbInConstructor=new JRadioButton();
  myRbInConstructor.setFocusable(false);
  myRbInConstructor.setText(RefactoringBundle.message("class.constructors.radio"));
  initializationPanel.add(myRbInCurrentMethod);
  initializationPanel.add(myRbInFieldDeclaration);
  initializationPanel.add(myRbInConstructor);
  if (TestUtil.isTestClass(myParentClass)) {
    myRbInSetUp=new JRadioButton();
    myRbInSetUp.setFocusable(false);
    myRbInSetUp.setText(RefactoringBundle.message("setup.method.radio"));
    initializationPanel.add(myRbInSetUp);
  }
  ButtonGroup bg=new ButtonGroup();
  bg.add(myRbInCurrentMethod);
  bg.add(myRbInFieldDeclaration);
  bg.add(myRbInConstructor);
  if (myRbInSetUp != null)   bg.add(myRbInSetUp);
  return initializationPanel;
}
