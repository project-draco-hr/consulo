{
  super(new BorderLayout());
  myModel=new CollectionListModel<ConfigurationError>();
  final JLabel label=new JLabel("<html><body><b>Problems:</b></body></html>");
  label.setVisible(false);
  add(label,BorderLayout.NORTH);
  project.getMessageBus().connect().subscribe(ConfigurationErrors.TOPIC,new ConfigurationErrors(){
    @Override public void addError(    @NotNull ConfigurationError error){
      int elementIndex=myModel.getElementIndex(error);
      if (elementIndex != -1) {
        return;
      }
      myModel.add(error);
      label.setVisible(myModel.getSize() != 0);
    }
    @Override public void removeError(    @NotNull ConfigurationError error){
      myModel.remove(error);
      label.setVisible(myModel.getSize() != 0);
    }
  }
);
  myErrorList=new JBList(myModel);
  myErrorList.setEmptyText("");
  myErrorList.setBackground(UIUtil.getPanelBackground());
  myErrorList.setCellRenderer(new ErrorListRenderer(myErrorList));
  myErrorList.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    final MouseEvent e){
      if (!e.isPopupTrigger()) {
        processListMouseEvent(e,true);
      }
    }
  }
);
  myErrorList.addMouseMotionListener(new MouseAdapter(){
    @Override public void mouseMoved(    MouseEvent e){
      if (!e.isPopupTrigger()) {
        processListMouseEvent(e,false);
      }
    }
  }
);
  add(myErrorList,BorderLayout.CENTER);
}
