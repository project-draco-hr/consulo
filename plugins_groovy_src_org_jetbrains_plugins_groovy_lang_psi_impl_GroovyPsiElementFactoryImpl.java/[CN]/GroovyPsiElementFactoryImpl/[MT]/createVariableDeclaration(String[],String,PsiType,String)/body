{
  StringBuilder text=writeModifiers(modifiers);
  if (type != null && type != PsiType.NULL) {
    final PsiType unboxed=TypesUtil.unboxPrimitiveTypeWrapper(type);
    final String typeText=getTypeText(unboxed);
    text.append(typeText).append(" ");
  }
 else   if (text.length() == 0) {
    text.insert(0,"def ");
  }
  if (identifiers.length > 1 && initializer != null) {
    text.append('(');
  }
  for (int i=0; i < identifiers.length; i++) {
    if (i > 0)     text.append(", ");
    String identifier=identifiers[i];
    text.append(identifier);
  }
  if (identifiers.length > 1 && initializer != null) {
    text.append(')');
  }
  if (!StringUtil.isEmptyOrSpaces(initializer)) {
    text.append(" = ").append(initializer);
  }
  GrTopStatement[] topStatements=createGroovyFileChecked(text).getTopStatements();
  if (topStatements.length == 0 || !(topStatements[0] instanceof GrVariableDeclaration)) {
    topStatements=createGroovyFileChecked("def " + text).getTopStatements();
  }
  if (topStatements.length == 0 || !(topStatements[0] instanceof GrVariableDeclaration)) {
    throw new RuntimeException("Invalid arguments, text = " + text);
  }
  final GrVariableDeclaration statement=(GrVariableDeclaration)topStatements[0];
  CodeEditUtil.markToReformatBefore(statement.getNode().findLeafElementAt(0),true);
  return statement;
}
