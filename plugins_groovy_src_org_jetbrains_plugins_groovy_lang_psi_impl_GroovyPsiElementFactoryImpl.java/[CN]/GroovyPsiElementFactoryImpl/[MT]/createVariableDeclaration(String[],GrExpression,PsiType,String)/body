{
  StringBuffer text=writeModifiers(modifiers);
  text.append("def ");
  if (type != null) {
    type=TypesUtil.unboxPrimitiveTypeWrapper(type);
    final String typeText=getTypeText(type);
    text.append(typeText).append(" ");
  }
  for (int i=0; i < identifiers.length; i++) {
    if (i > 0)     text.append(", ");
    String identifier=identifiers[i];
    text.append(identifier);
  }
  GrExpression expr;
  if (initializer != null) {
    if (initializer instanceof GrApplicationStatement) {
      expr=createMethodCallByAppCall(((GrApplicationStatement)initializer));
    }
 else {
      expr=initializer;
    }
    text.append(" = ").append(expr.getText());
  }
  PsiFile file=createGroovyFile(text.toString());
  GrTopStatement[] topStatements=((GroovyFileBase)file).getTopStatements();
  if (topStatements.length == 0 || !(topStatements[0] instanceof GrVariableDeclaration)) {
    throw new RuntimeException("Invalid arguments, text = " + text.toString());
  }
  final GrVariableDeclaration declaration=(GrVariableDeclaration)topStatements[0];
  if (declaration.getTypeElementGroovy() != null) {
    declaration.getModifierList().setModifierProperty(GrModifier.DEF,false);
  }
  return declaration;
}
