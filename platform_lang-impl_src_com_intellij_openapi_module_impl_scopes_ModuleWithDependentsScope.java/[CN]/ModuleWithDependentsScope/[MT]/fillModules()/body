{
  Queue<Module> walkingQueue=new Queue<Module>(10);
  walkingQueue.addLast(myModule);
  Module[] allModules=ModuleManager.getInstance(myModule.getProject()).getModules();
  Set<Module> processed=new THashSet<Module>();
  while (!walkingQueue.isEmpty()) {
    Module current=walkingQueue.pullFirst();
    processed.add(current);
    for (    Module dependent : allModules) {
      for (      OrderEntry orderEntry : ModuleRootManager.getInstance(dependent).getOrderEntries()) {
        if (orderEntry instanceof ModuleOrderEntry && current.equals(((ModuleOrderEntry)orderEntry).getModule())) {
          myModules.add(dependent);
          if (!processed.contains(dependent) && ((ModuleOrderEntry)orderEntry).isExported()) {
            walkingQueue.addLast(dependent);
          }
        }
      }
    }
  }
}
