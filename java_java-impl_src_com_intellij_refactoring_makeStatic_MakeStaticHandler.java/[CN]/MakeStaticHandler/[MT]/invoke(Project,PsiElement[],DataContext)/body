{
  if (elements.length != 1 || !(elements[0] instanceof PsiTypeParameterListOwner))   return;
  final PsiTypeParameterListOwner member=(PsiTypeParameterListOwner)elements[0];
  if (!CommonRefactoringUtil.checkReadOnlyStatus(project,member))   return;
  String error=validateTarget(member);
  if (error != null) {
    Editor editor=PlatformDataKeys.EDITOR.getData(dataContext);
    CommonRefactoringUtil.showErrorHint(project,editor,error,REFACTORING_NAME,HelpID.MAKE_METHOD_STATIC);
    return;
  }
  final InternalUsageInfo[] classRefsInMember=MakeStaticUtil.findClassRefsInMember(member,false);
  AbstractMakeStaticDialog dialog;
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    if (classRefsInMember.length > 0) {
      final PsiType type=JavaPsiFacade.getInstance(member.getProject()).getElementFactory().createType(member.getContainingClass());
      String[] nameSuggestions=JavaCodeStyleManager.getInstance(project).suggestVariableName(VariableKind.PARAMETER,null,null,type).names;
      dialog=new MakeParameterizedStaticDialog(project,member,nameSuggestions,classRefsInMember);
    }
 else {
      dialog=new SimpleMakeStaticDialog(project,member);
    }
    dialog.show();
  }
}
