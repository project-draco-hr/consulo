{
  final TreeElement oldLastNodeInsideParens=getLastNodeInsideParens();
  final TreeElement oldFirstNodeInsideParens=getFirstNodeInsideParens();
  if (child.getElementType() == PARAMETER) {
    ASTNode next=TreeUtil.skipElements(child.getTreeNext(),StdTokenSets.WHITE_SPACE_OR_COMMENT_BIT_SET);
    if (next != null && next.getElementType() == COMMA) {
      deleteChildInternal(next);
    }
 else {
      ASTNode prev=TreeUtil.skipElementsBack(child.getTreePrev(),StdTokenSets.WHITE_SPACE_OR_COMMENT_BIT_SET);
      if (prev != null && prev.getElementType() == COMMA) {
        deleteChildInternal(prev);
      }
    }
  }
  super.deleteChildInternal(child);
  TreeElement newLastNodeInsideParens=getLastNodeInsideParens();
  if (newLastNodeInsideParens != null && newLastNodeInsideParens.getElementType() == WHITE_SPACE) {
    if (oldLastNodeInsideParens.getElementType() != WHITE_SPACE) {
      deleteChildInternal(newLastNodeInsideParens);
    }
 else {
      replaceChild(newLastNodeInsideParens,(ASTNode)oldLastNodeInsideParens.clone());
    }
  }
  final TreeElement newFirstNodeInsideParens=getFirstNodeInsideParens();
  if (newFirstNodeInsideParens != null && newFirstNodeInsideParens.getElementType() == WHITE_SPACE) {
    if (oldFirstNodeInsideParens == null || oldFirstNodeInsideParens.getElementType() != WHITE_SPACE) {
      deleteChildInternal(newFirstNodeInsideParens);
    }
 else {
      replaceChild(newFirstNodeInsideParens,(ASTNode)oldFirstNodeInsideParens.clone());
    }
  }
  try {
    CodeStyleManager.getInstance(getManager().getProject()).reformat(getPsi());
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
