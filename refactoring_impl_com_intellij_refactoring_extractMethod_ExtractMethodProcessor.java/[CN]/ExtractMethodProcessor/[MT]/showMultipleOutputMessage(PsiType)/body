{
  if (myShowErrorDialogs) {
    StringBuffer buffer=new StringBuffer();
    buffer.append(RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("there.are.multiple.output.values.for.the.selected.code.fragment")));
    buffer.append("\n");
    if (myHasExpressionOutput) {
      buffer.append("    ").append(RefactoringBundle.message("expression.result")).append(": ");
      buffer.append(PsiFormatUtil.formatType(expressionType,0,PsiSubstitutor.EMPTY));
      buffer.append(",\n");
    }
    if (myGenerateConditionalExit) {
      buffer.append("    ").append(RefactoringBundle.message("boolean.method.result"));
      buffer.append(",\n");
    }
    for (int i=0; i < myOutputVariables.length; i++) {
      PsiVariable var=myOutputVariables[i];
      buffer.append("    ");
      buffer.append(var.getName());
      buffer.append(" : ");
      buffer.append(PsiFormatUtil.formatType(var.getType(),0,PsiSubstitutor.EMPTY));
      if (i < myOutputVariables.length - 1) {
        buffer.append(",\n");
      }
 else {
        buffer.append(".");
      }
    }
    CommonRefactoringUtil.showErrorMessage(myRefactoringName,buffer.toString(),myHelpId,myProject);
  }
}
