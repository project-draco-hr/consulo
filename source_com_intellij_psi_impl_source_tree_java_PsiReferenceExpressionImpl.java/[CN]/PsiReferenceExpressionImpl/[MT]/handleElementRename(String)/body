{
  if (getQualifierExpression() != null) {
    return renameDirectly(newElementName);
  }
  final JavaResolveResult resolveResult=advancedResolve(false);
  if (resolveResult.getElement() == null) {
    return renameDirectly(newElementName);
  }
  PsiElement currentFileResolveScope=resolveResult.getCurrentFileResolveScope();
  if (!(currentFileResolveScope instanceof PsiImportStaticStatement) || ((PsiImportStaticStatement)currentFileResolveScope).isOnDemand()) {
    return renameDirectly(newElementName);
  }
  final PsiImportStaticStatement importStaticStatement=(PsiImportStaticStatement)currentFileResolveScope;
  final String referenceName=importStaticStatement.getReferenceName();
  LOG.assertTrue(referenceName != null);
  final PsiElement element=importStaticStatement.getImportReference().resolve();
  if (getManager().areElementsEquivalent(element,resolveResult.getElement())) {
    return renameDirectly(newElementName);
  }
  final PsiClass psiClass=importStaticStatement.resolveTargetClass();
  if (psiClass == null)   return renameDirectly(newElementName);
  final PsiElementFactory factory=getManager().getElementFactory();
  final PsiReferenceExpression expression=(PsiReferenceExpression)factory.createExpressionFromText("X." + newElementName,this);
  final PsiReferenceExpression result=((PsiReferenceExpression)this.replace(expression));
  ((PsiReferenceExpression)result.getQualifierExpression()).bindToElement(psiClass);
  return result;
}
