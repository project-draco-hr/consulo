{
  if (qualifierClass == null || qualifierClass.getQualifiedName() == null)   throw new IncorrectOperationException();
  String staticName=getReferenceName();
  if (getQualifierExpression() == null) {
    PsiImportList importList=((PsiJavaFile)getContainingFile()).getImportList();
    PsiImportStatementBase singleImportStatement=importList.findSingleImportStatement(staticName);
    if (singleImportStatement != null) {
      if (singleImportStatement instanceof PsiImportStaticStatement) {
        String qName=qualifierClass.getQualifiedName() + "." + staticName;
        if (singleImportStatement.getImportReference().getQualifiedName().equals(qName))         return this;
      }
      String qualifiedName=qualifierClass.getQualifiedName();
      if (qualifiedName != null) {
        PsiReferenceExpression classRef=getManager().getElementFactory().createReferenceExpression(qualifierClass);
        final CharTable treeCharTab=SharedImplUtil.findCharTableByTree(this);
        LeafElement dot=Factory.createSingleLeafElement(ElementType.DOT,new char[]{'.'},0,1,treeCharTab,getManager());
        addInternal(dot,dot,SourceTreeToPsiMap.psiElementToTree(getParameterList()),Boolean.TRUE);
        addBefore(classRef,SourceTreeToPsiMap.treeElementToPsi(dot));
        return this;
      }
    }
 else {
      importList.add(getManager().getElementFactory().createImportStaticStatement(qualifierClass,staticName));
      return this;
    }
  }
  throw new IncorrectOperationException();
}
