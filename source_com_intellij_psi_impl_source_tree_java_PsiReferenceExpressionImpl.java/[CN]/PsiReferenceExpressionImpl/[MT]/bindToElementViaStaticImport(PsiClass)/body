{
  String qualifiedName=qualifierClass.getQualifiedName();
  if (qualifiedName == null)   throw new IncorrectOperationException();
  if (getQualifierExpression() != null) {
    throw new IncorrectOperationException("Reference is qualified: " + getText());
  }
  String staticName=getReferenceName();
  PsiImportList importList=((PsiJavaFile)getContainingFile()).getImportList();
  PsiImportStatementBase singleImportStatement=importList.findSingleImportStatement(staticName);
  if (singleImportStatement == null) {
    importList.add(getManager().getElementFactory().createImportStaticStatement(qualifierClass,staticName));
  }
 else {
    if (singleImportStatement instanceof PsiImportStaticStatement) {
      String qName=qualifierClass.getQualifiedName() + "." + staticName;
      if (qName.equals(singleImportStatement.getImportReference().getQualifiedName()))       return this;
    }
    PsiReferenceExpression classRef=getManager().getElementFactory().createReferenceExpression(qualifierClass);
    final CharTable treeCharTab=SharedImplUtil.findCharTableByTree(this);
    LeafElement dot=Factory.createSingleLeafElement(DOT,".",0,1,treeCharTab,getManager());
    addInternal(dot,dot,SourceTreeToPsiMap.psiElementToTree(getParameterList()),Boolean.TRUE);
    addBefore(classRef,SourceTreeToPsiMap.treeElementToPsi(dot));
  }
  return this;
}
