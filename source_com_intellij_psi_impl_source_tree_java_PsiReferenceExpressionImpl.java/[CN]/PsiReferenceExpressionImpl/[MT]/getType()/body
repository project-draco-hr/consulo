{
  ResolveResult result=advancedResolve(false);
  PsiElement resolve=result.getElement();
  if (resolve == null) {
    ASTNode refName=findChildByRole(ChildRole.REFERENCE_NAME);
    if (refName != null && refName.getText().equals(LENGTH)) {
      ASTNode qualifier=findChildByRole(ChildRole.QUALIFIER);
      if (qualifier != null && ElementType.EXPRESSION_BIT_SET.isInSet(qualifier.getElementType())) {
        PsiType type=((PsiExpression)SourceTreeToPsiMap.treeElementToPsi(qualifier)).getType();
        if (type != null && type instanceof PsiArrayType) {
          return PsiType.INT;
        }
      }
    }
    return null;
  }
  final PsiType ret;
  if (resolve instanceof PsiVariable) {
    PsiType type=((PsiVariable)resolve).getType();
    ret=type instanceof PsiEllipsisType ? ((PsiEllipsisType)type).toArrayType() : type;
  }
 else   if (resolve instanceof PsiMethod) {
    ret=((PsiMethod)resolve).getReturnType();
  }
 else {
    return null;
  }
  if (ret == null)   return null;
  if (getManager().getEffectiveLanguageLevel().compareTo(LanguageLevel.JDK_1_5) >= 0) {
    PsiType substitutedType=result.getSubstitutor().substitute(ret);
    return PsiImplUtil.normalizeWildcardTypeByPosition(substitutedType,this);
  }
  return TypeConversionUtil.erasure(ret);
}
