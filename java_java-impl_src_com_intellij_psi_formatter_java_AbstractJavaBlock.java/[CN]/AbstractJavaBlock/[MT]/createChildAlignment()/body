{
  final IElementType nodeType=myNode.getElementType();
  if (nodeType == JavaElementType.ASSIGNMENT_EXPRESSION) {
    if (myNode.getTreeParent() != null && myNode.getTreeParent().getElementType() == JavaElementType.ASSIGNMENT_EXPRESSION && myAlignment != null) {
      return myAlignment;
    }
 else {
      return createAlignment(mySettings.ALIGN_MULTILINE_ASSIGNMENT,null);
    }
  }
 else   if (nodeType == JavaElementType.PARENTH_EXPRESSION) {
    return createAlignment(mySettings.ALIGN_MULTILINE_PARENTHESIZED_EXPRESSION,null);
  }
 else   if (nodeType == JavaElementType.CONDITIONAL_EXPRESSION) {
    return createAlignment(mySettings.ALIGN_MULTILINE_TERNARY_OPERATION,null);
  }
 else   if (nodeType == JavaElementType.FOR_STATEMENT) {
    return createAlignment(mySettings.ALIGN_MULTILINE_FOR,null);
  }
 else   if (nodeType == JavaElementType.EXTENDS_LIST || nodeType == JavaElementType.IMPLEMENTS_LIST) {
    return createAlignment(mySettings.ALIGN_MULTILINE_EXTENDS_LIST,null);
  }
 else   if (nodeType == JavaElementType.THROWS_LIST) {
    return createAlignment(mySettings.ALIGN_MULTILINE_THROWS_LIST,null);
  }
 else   if (nodeType == JavaElementType.PARAMETER_LIST) {
    return createAlignment(mySettings.ALIGN_MULTILINE_PARAMETERS,null);
  }
 else   if (nodeType == JavaElementType.BINARY_EXPRESSION) {
    Alignment defaultAlignment=null;
    if (shouldInheritAlignment()) {
      defaultAlignment=myAlignment;
    }
    return createAlignment(mySettings.ALIGN_MULTILINE_BINARY_OPERATION,defaultAlignment);
  }
 else   if (nodeType == JavaElementType.CLASS || nodeType == JavaElementType.METHOD) {
    return Alignment.createAlignment();
  }
 else   if (nodeType == JavaElementType.MODIFIER_LIST) {
    return myAlignment;
  }
 else {
    return null;
  }
}
