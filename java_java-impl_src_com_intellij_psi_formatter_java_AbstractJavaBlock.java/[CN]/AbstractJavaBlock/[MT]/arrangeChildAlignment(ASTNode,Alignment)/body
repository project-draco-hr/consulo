{
  int role=((CompositeElement)child.getTreeParent()).getChildRole(child);
  final IElementType nodeType=myNode.getElementType();
  if (nodeType == JavaElementType.FOR_STATEMENT) {
    if (role == ChildRole.FOR_INITIALIZATION || role == ChildRole.CONDITION || role == ChildRole.FOR_UPDATE) {
      return defaultAlignment;
    }
 else {
      return null;
    }
  }
 else   if (nodeType == JavaElementType.EXTENDS_LIST || nodeType == JavaElementType.IMPLEMENTS_LIST) {
    if (role == ChildRole.REFERENCE_IN_LIST || role == ChildRole.IMPLEMENTS_KEYWORD) {
      return defaultAlignment;
    }
 else {
      return null;
    }
  }
 else   if (nodeType == JavaElementType.THROWS_LIST) {
    if (role == ChildRole.REFERENCE_IN_LIST) {
      return defaultAlignment;
    }
 else {
      return null;
    }
  }
 else   if (nodeType == JavaElementType.CLASS) {
    if (role == ChildRole.CLASS_OR_INTERFACE_KEYWORD)     return defaultAlignment;
    if (myIsAfterClassKeyword)     return null;
    if (role == ChildRole.MODIFIER_LIST)     return defaultAlignment;
    if (role == ChildRole.DOC_COMMENT)     return defaultAlignment;
    return null;
  }
 else   if (nodeType == JavaElementType.METHOD) {
    if (role == ChildRole.MODIFIER_LIST)     return defaultAlignment;
    if (role == ChildRole.TYPE_PARAMETER_LIST)     return defaultAlignment;
    if (role == ChildRole.TYPE)     return defaultAlignment;
    if (role == ChildRole.NAME)     return defaultAlignment;
    return null;
  }
 else   if (nodeType == JavaElementType.ASSIGNMENT_EXPRESSION) {
    if (role == ChildRole.LOPERAND)     return defaultAlignment;
    if (role == ChildRole.ROPERAND && child.getElementType() == JavaElementType.ASSIGNMENT_EXPRESSION) {
      return defaultAlignment;
    }
 else {
      return null;
    }
  }
 else   if (child.getElementType() == JavaTokenType.END_OF_LINE_COMMENT) {
    ASTNode previous=child.getTreePrev();
    if (previous.getElementType() == JavaTokenType.WHITE_SPACE && previous.getChars().length() > 0 && previous.getChars().charAt(previous.getChars().length() - 1) == '\n') {
      return null;
    }
 else {
      return defaultAlignment;
    }
  }
 else {
    return defaultAlignment;
  }
}
