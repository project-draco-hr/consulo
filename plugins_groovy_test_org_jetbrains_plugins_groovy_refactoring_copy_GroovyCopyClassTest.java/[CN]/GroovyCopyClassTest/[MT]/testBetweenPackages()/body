{
  final String testName=getTestName(false);
  myFixture.copyFileToProject(testName + ".groovy","foo/" + testName + ".groovy");
  myFixture.addClass("package foo; public class Bar {}");
  myFixture.addClass("package bar; public class Bar {}");
  final PsiClass srcClass=myFixture.getJavaFacade().findClass("foo." + testName,GlobalSearchScope.allScope(getProject()));
  assertTrue(CopyClassesHandler.canCopyClass(srcClass));
  new WriteCommandAction(getProject()){
    @Override protected void run(    Result result) throws Throwable {
      CopyClassesHandler.doCopyClasses(Collections.singletonMap(srcClass.getNavigationElement().getContainingFile(),new PsiClass[]{srcClass}),testName + "_after",srcClass.getManager().findDirectory(myFixture.getTempDirFixture().getFile("bar")),getProject());
    }
  }
.execute();
  myFixture.checkResultByFile("bar/" + testName + "_after.groovy",testName + "_after.groovy",true);
}
