{
  long delay=TOO_LONG_EXECUTION_MS;
  Map<ExternalSystemTaskId,Long> newState=ContainerUtilRt.newHashMap();
  Map<ExternalSystemTaskId,Long> currentState=ContainerUtilRt.newHashMap(myTasksInProgress);
  if (currentState.isEmpty()) {
    return;
  }
  for (  Map.Entry<ExternalSystemTaskId,Long> entry : currentState.entrySet()) {
    long diff=System.currentTimeMillis() - entry.getValue();
    if (diff > 0) {
      delay=Math.min(delay,diff);
      newState.put(entry.getKey(),entry.getValue());
    }
 else {
      if (myFacadeManager.isTaskActive(entry.getKey())) {
        newState.put(entry.getKey(),System.currentTimeMillis() + TOO_LONG_EXECUTION_MS);
      }
    }
  }
  myTasksInProgress.clear();
  myTasksInProgress.putAll(newState);
  if (!newState.isEmpty()) {
    myAlarm.cancelAllRequests();
    myAlarm.addRequest(new Runnable(){
      @Override public void run(){
        update();
      }
    }
,delay);
  }
}
