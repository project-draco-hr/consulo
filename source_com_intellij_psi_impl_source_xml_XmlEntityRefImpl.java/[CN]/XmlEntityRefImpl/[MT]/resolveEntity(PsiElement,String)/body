{
  final List<PsiElement> deps=new ArrayList<PsiElement>();
  final XmlEntityDecl[] result=new XmlEntityDecl[]{null};
  PsiElementProcessor processor=new PsiElementProcessor(){
    public boolean execute(    PsiElement element){
      if (element instanceof XmlDoctype) {
        XmlDoctype xmlDoctype=(XmlDoctype)element;
        final String dtdUri=xmlDoctype.getDtdUri();
        if (dtdUri != null) {
          final XmlFile xmlFile=XmlUtil.findXmlFile(XmlUtil.getContainingFile(element),dtdUri);
          if (xmlFile != null) {
            if (xmlFile != targetElement) {
              deps.add(xmlFile);
              if (!PsiTreeUtil.processElements(xmlFile,this))               return false;
            }
          }
        }
        final XmlMarkupDecl markupDecl=xmlDoctype.getMarkupDecl();
        if (markupDecl != null)         if (!PsiTreeUtil.processElements(markupDecl,this))         return false;
      }
 else       if (element instanceof XmlEntityDecl) {
        XmlEntityDecl entityDecl=(XmlEntityDecl)element;
        final String declName=entityDecl.getName();
        if (declName.equals(entityName)) {
          result[0]=entityDecl;
          return false;
        }
      }
      return true;
    }
  }
;
  deps.add(targetElement);
  PsiTreeUtil.processElements(targetElement,processor);
  return new CachedValueProvider.Result<XmlEntityDecl>(result[0],deps.toArray(new Object[deps.size()]));
}
