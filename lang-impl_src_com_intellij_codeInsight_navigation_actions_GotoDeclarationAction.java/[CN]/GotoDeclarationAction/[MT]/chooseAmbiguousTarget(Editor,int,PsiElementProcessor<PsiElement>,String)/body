{
  if (TargetElementUtilBase.inVirtualSpace(editor,offset)) {
    return false;
  }
  final PsiReference reference=TargetElementUtilBase.findReference(editor,offset);
  final Collection<PsiElement> candidates=suggestCandidates(reference);
  if (candidates.size() == 1) {
    PsiElement element=candidates.iterator().next();
    processor.execute(element);
    return true;
  }
 else   if (candidates.size() > 1) {
    PsiElement[] elements=candidates.toArray(new PsiElement[candidates.size()]);
    final TextRange range=reference.getRangeInElement();
    final String refText=range.substring(reference.getElement().getText());
    String title=MessageFormat.format(titlePattern,refText);
    NavigationUtil.getPsiElementPopup(elements,new DefaultPsiElementCellRenderer(),title,processor).showInBestPositionFor(editor);
    return true;
  }
  return false;
}
