{
  myElementsMap.put("copy-from-url",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new CopyFromUrl();
    }
  }
);
  myElementsMap.put("copy-from-rev",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new CopyFromRev();
    }
  }
);
  myElementsMap.put("changelist",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new ChangeList();
    }
  }
);
  myElementsMap.put("author",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Author();
    }
  }
);
  myElementsMap.put("checksum",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Checksum();
    }
  }
);
  myElementsMap.put("commit",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Commit();
    }
  }
);
  myElementsMap.put("conflict",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Conflict();
    }
  }
);
  myElementsMap.put("cur-base-file",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new CurBase();
    }
  }
);
  myElementsMap.put("date",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Date();
    }
  }
);
  myElementsMap.put("depth",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Depth();
    }
  }
);
  myElementsMap.put("entry",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Entry(myBase);
    }
  }
);
  myElementsMap.put("info",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Info();
    }
  }
);
  myElementsMap.put("prev-base-file",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new PrevBase();
    }
  }
);
  myElementsMap.put("prev-wc-file",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new PrevWc();
    }
  }
);
  myElementsMap.put("prop-file",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new PropFile();
    }
  }
);
  myElementsMap.put("repository",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Repository();
    }
  }
);
  myElementsMap.put("root",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Root();
    }
  }
);
  myElementsMap.put("schedule",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Schedule();
    }
  }
);
  myElementsMap.put("text-updated",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new TextUpdated();
    }
  }
);
  myElementsMap.put("tree-conflict",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new TreeConflict();
    }
  }
);
  myElementsMap.put("url",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Url();
    }
  }
);
  myElementsMap.put("uuid",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Uuid();
    }
  }
);
  myElementsMap.put("version",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new Version();
    }
  }
);
  myElementsMap.put("wc-info",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new WcInfo();
    }
  }
);
  myElementsMap.put("wcroot-abspath",new Getter<ElementHandlerBase>(){
    @Override public ElementHandlerBase get(){
      return new WcRoot();
    }
  }
);
}
