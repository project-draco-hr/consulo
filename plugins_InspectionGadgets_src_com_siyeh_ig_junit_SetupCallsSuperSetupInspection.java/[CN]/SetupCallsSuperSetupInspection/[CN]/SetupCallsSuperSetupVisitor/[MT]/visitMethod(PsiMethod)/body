{
  @NonNls final String methodName=method.getName();
  if (!"setUp".equals(methodName)) {
    return;
  }
  if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  if (method.getBody() == null) {
    return;
  }
  final PsiParameterList parameterList=method.getParameterList();
  if (parameterList.getParametersCount() != 0) {
    return;
  }
  final PsiClass targetClass=method.getContainingClass();
  if (targetClass == null) {
    return;
  }
  if (!ClassUtils.isSubclass(targetClass,"junit.framework.TestCase")) {
    return;
  }
  final CallToSuperSetupVisitor visitor=new CallToSuperSetupVisitor();
  method.accept(visitor);
  if (visitor.isCallToSuperSetupFound()) {
    return;
  }
  registerMethodError(method);
}
