{
  setTitle(ReportMessages.ERROR_REPORT);
  getContentPane().add(myMainPanel);
  mySendAction=new AbstractAction("&Send"){
    public void actionPerformed(    ActionEvent e){
      if (myErrorDescriptionTextArea.getText().trim().length() == 0) {
        Messages.showMessageDialog(myMainPanel,"Please fill in error description",ReportMessages.ERROR_REPORT,Messages.getErrorIcon());
        return;
      }
      myShouldSend=true;
      storeInfo();
      dispose();
    }
  }
;
  mySendAction.putValue(Action.MNEMONIC_KEY,new Integer(KeyEvent.VK_S));
  mySendAction.putValue(DialogWrapper.DEFAULT_ACTION,"true");
  myCancelAction=new AbstractAction("&Cancel"){
    public void actionPerformed(    ActionEvent e){
      myShouldSend=false;
      dispose();
    }
  }
;
  myCancelAction.putValue(Action.MNEMONIC_KEY,new Integer(KeyEvent.VK_C));
  mySendingSettingsLabel.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      HTTPProxySettingsDialog settingsDialog=new HTTPProxySettingsDialog();
      settingsDialog.pack();
      settingsDialog.show();
    }
  }
);
  mySendingSettingsLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
  loadInfo();
  myErrorDescriptionTextArea.getDocument().addUndoableEditListener(new UndoableEditListener(){
    public void undoableEditHappened(    UndoableEditEvent e){
      undoManager.addEdit(e.getEdit());
    }
  }
);
  Keymap keymap=myErrorDescriptionTextArea.getKeymap();
  Shortcut[] undoShortcuts=KeymapManagerEx.getInstanceEx().getActiveKeymap().getShortcuts("$Undo");
  Shortcut[] redoShortcuts=KeymapManagerEx.getInstanceEx().getActiveKeymap().getShortcuts("$Redo");
  Action undoAction=new AbstractAction("Undo"){
    public void actionPerformed(    ActionEvent e){
      if (undoManager.canUndo())       undoManager.undo();
    }
  }
;
  Action redoAction=new AbstractAction("Redo"){
    public void actionPerformed(    ActionEvent e){
      if (undoManager.canRedo())       undoManager.redo();
    }
  }
;
  for (int i=0; i < undoShortcuts.length; i++) {
    Shortcut undoShortcut=undoShortcuts[i];
    if (undoShortcut instanceof KeyboardShortcut)     keymap.addActionForKeyStroke(((KeyboardShortcut)undoShortcut).getFirstKeyStroke(),undoAction);
  }
  for (int i=0; i < redoShortcuts.length; i++) {
    Shortcut redoShortcut=redoShortcuts[i];
    if (redoShortcut instanceof KeyboardShortcut)     keymap.addActionForKeyStroke(((KeyboardShortcut)redoShortcut).getFirstKeyStroke(),redoAction);
  }
  myErrorDescriptionTextArea.setKeymap(keymap);
  super.init();
}
