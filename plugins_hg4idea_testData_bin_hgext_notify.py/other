'hooks for sending email notifications at commit/push time\n\nSubscriptions can be managed through a hgrc file. Default mode is to\nprint messages to stdout, for testing and configuring.\n\nTo use, configure the notify extension and enable it in hgrc like\nthis::\n\n  [extensions]\n  notify =\n\n  [hooks]\n  # one email for each incoming changeset\n  incoming.notify = python:hgext.notify.hook\n  # batch emails when many changesets incoming at one time\n  changegroup.notify = python:hgext.notify.hook\n\n  [notify]\n  # config items go here\n\nRequired configuration items::\n\n  config = /path/to/file # file containing subscriptions\n\nOptional configuration items::\n\n  test = True            # print messages to stdout for testing\n  strip = 3              # number of slashes to strip for url paths\n  domain = example.com   # domain to use if committer missing domain\n  style = ...            # style file to use when formatting email\n  template = ...         # template to use when formatting email\n  incoming = ...         # template to use when run as incoming hook\n  changegroup = ...      # template when run as changegroup hook\n  maxdiff = 300          # max lines of diffs to include (0=none, -1=all)\n  maxsubject = 67        # truncate subject line longer than this\n  diffstat = True        # add a diffstat before the diff content\n  sources = serve        # notify if source of incoming changes in this list\n                         # (serve == ssh or http, push, pull, bundle)\n  merge = False          # send notification for merges (default True)\n  [email]\n  from = user@host.com   # email address to send as if none given\n  [web]\n  baseurl = http://hgserver/... # root of hg web site for browsing commits\n\nThe notify config file has same format as a regular hgrc file. It has\ntwo sections so you can express subscriptions in whatever way is\nhandier for you.\n\n::\n\n  [usersubs]\n  # key is subscriber email, value is ","-separated list of glob patterns\n  user@host = pattern\n\n  [reposubs]\n  # key is glob pattern, value is ","-separated list of subscriber emails\n  pattern = user@host\n\nGlob patterns are matched against path to repository root.\n\nIf you like, you can put notify config file in repository that users\ncan push changes to, they can manage their own subscriptions.\n'
from mercurial.i18n import _
from mercurial import patch, cmdutil, templater, util, mail
import email.Parser, email.Errors, fnmatch, socket, time
single_template = '\nSubject: changeset in {webroot}: {desc|firstline|strip}\nFrom: {author}\n\nchangeset {node|short} in {root}\ndetails: {baseurl}{webroot}?cmd=changeset;node={node|short}\ndescription:\n\t{desc|tabindent|strip}\n'.lstrip()
multiple_template = '\nchangeset {node|short} in {root}\ndetails: {baseurl}{webroot}?cmd=changeset;node={node|short}\nsummary: {desc|firstline}\n'
deftemplates = {'changegroup': multiple_template, }
