def hook(ui, repo, hooktype, node=None, source=None, **kwargs):
    'send email notifications to interested subscribers.\n\n    if used as changegroup hook, send one email for all changesets in\n    changegroup. else send one email per changeset.'
    n = notifier(ui, repo, hooktype)
    ctx = repo[node]
    if (not n.subs):
        ui.debug(('notify: no subscribers to repository %s\n' % n.root))
        return
    if n.skipsource(source):
        ui.debug(('notify: changes have source "%s" - skipping\n' % source))
        return
    ui.pushbuffer()
    data = ''
    count = 0
    if (hooktype == 'changegroup'):
        (start, end) = (ctx.rev(), len(repo))
        for rev in xrange(start, end):
            if n.node(repo[rev]):
                count += 1
            else:
                data += ui.popbuffer()
                ui.note((_('notify: suppressing notification for merge %d:%s\n') % (rev, repo[rev].hex()[:12])))
                ui.pushbuffer()
        if count:
            n.diff(ctx, repo['tip'])
    else:
        if (not n.node(ctx)):
            ui.popbuffer()
            ui.note((_('notify: suppressing notification for merge %d:%s\n') % (ctx.rev(), ctx.hex()[:12])))
            return
        count += 1
        n.diff(ctx)
    data += ui.popbuffer()
    if count:
        n.send(ctx, count, data)
