{
  final Ring.IntegerRing ring=new Ring.IntegerRing();
  final Map<Integer,Integer> recalculateMap=new HashMap<Integer,Integer>();
  int runningCommitNumber=0;
  final Iterator<TreeSkeletonImpl.WireEvent> iterator=mySkeleton.createWireEventsIterator(0);
  for (; iterator.hasNext(); ) {
    final TreeSkeletonImpl.WireEvent we=iterator.next();
    for (int i=runningCommitNumber; i <= we.getCommitIdx(); i++) {
      final TreeSkeletonImpl.Commit commit=mySkeleton.getCommitAt(i);
      final Integer newWire=recalculateMap.get(commit.getWireNumber());
      if (newWire != null) {
        commit.setWireNumber(newWire);
      }
    }
    runningCommitNumber=we.getCommitIdx() + 1;
    final int[] wireEnds=we.getWireEnds();
    if (wireEnds != null) {
      for (      int wireEnd : wireEnds) {
        ring.back(wireEnd);
      }
    }
    if (we.isStart()) {
      final TreeSkeletonImpl.Commit thisCommit=mySkeleton.getCommitAt(we.getCommitIdx());
      final int thisWireNum=thisCommit.getWireNumber();
      final Integer newNum=ring.getFree();
      if (newNum != thisWireNum) {
        recalculateMap.put(thisWireNum,newNum);
        thisCommit.setWireNumber(newNum);
      }
    }
    if (we.isEnd()) {
      ring.back(mySkeleton.getCommitAt(we.getCommitIdx()).getWireNumber());
    }
    final int[] commitsStarts=we.getCommitsStarts();
    if (commitsStarts.length > 0 && (!we.isEnd())) {
      for (      int commitStart : commitsStarts) {
        Integer corrected=recalculateMap.get(commitStart);
        corrected=(corrected == null) ? commitStart : corrected;
        if (!ring.isNumUsed(corrected)) {
          final Integer newNum=ring.getFree();
          recalculateMap.put(commitStart,newNum);
        }
      }
    }
  }
}
