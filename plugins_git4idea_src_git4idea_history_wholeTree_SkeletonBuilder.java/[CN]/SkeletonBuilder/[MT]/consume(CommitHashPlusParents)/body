{
  int wireNumber=-1;
  final Collection<WaitingCommit> awaiting=myAwaitingParents.remove(obj.getHash());
  if (awaiting != null) {
    final List<WaitingCommit> awaitingList=(List<WaitingCommit>)awaiting;
    if (awaitingList.size() > 1) {
      Collections.sort(awaitingList,CommitsComparator.getInstance());
    }
    if (awaitingList.size() > 1) {
      final int[] ends=new int[awaitingList.size()];
      for (int i=0; i < awaitingList.size(); i++) {
        final WaitingCommit commit=awaitingList.get(i);
        ends[i]=commit.myIdx;
      }
      mySkeleton.addWireEvent(rowCount,ends);
    }
    for (    final WaitingCommit commit : awaitingList) {
      final TreeSkeletonImpl.Commit correspCommit=mySkeleton.get(commit.myIdx);
      commit.parentFound();
      if (commit.isMerge()) {
        mySkeleton.addStartToEvent(commit.myIdx,rowCount);
      }
      final Integer seized=mySeizedWires.get(correspCommit.getWireNumber());
      if (seized != null && seized == commit.myIdx) {
        if (wireNumber == -1) {
          wireNumber=correspCommit.getWireNumber();
        }
 else {
          if (commit.allParentsFound()) {
            mySeizedWires.remove(correspCommit.getWireNumber());
            mySkeleton.parentWireEnds(rowCount,commit.myIdx);
          }
        }
      }
    }
    if (wireNumber == -1) {
      wireNumber=myWireCount++;
    }
  }
 else {
    wireNumber=myWireCount++;
    mySkeleton.wireStarts(rowCount);
  }
  mySeizedWires.put(wireNumber,rowCount);
  mySkeleton.addCommit(rowCount,obj.getHash(),wireNumber,obj.getTime());
  if (obj.getParents().length == 0) {
    mySkeleton.wireEnds(rowCount);
    mySeizedWires.remove(wireNumber);
  }
 else {
    final WaitingCommit me=new WaitingCommit(rowCount,obj.getParents().length);
    for (    String parent : obj.getParents()) {
      myAwaitingParents.putValue(parent,me);
    }
  }
  ++rowCount;
}
