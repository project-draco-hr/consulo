{
  ChameleonTransforming.transformChildren(this);
  if (getFirstChildNode().getElementType() == ElementType.JAVA_CODE_REFERENCE || getFirstChildNode().getElementType() == ElementType.REFERENCE_EXPRESSION) {
    PsiJavaCodeReferenceElement referenceElement=(PsiJavaCodeReferenceElement)SourceTreeToPsiMap.treeElementToPsi(getFirstChildNode());
    final PsiElement referencedElement=referenceElement.resolve();
    if (referencedElement instanceof PsiClass) {
      return referencedElement;
    }
  }
  final PsiElement place=SourceTreeToPsiMap.treeElementToPsi(TreeUtil.findParent(this,TreeElement.CLASS));
  if (place == null)   return getContainingFile();
  return place;
}
