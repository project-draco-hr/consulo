{
  myInitialTargetDirectory=initialTargetDirectory;
  mySourceRoots=ProjectRootManager.getInstance(project).getContentSourceRoots();
  new ComboboxSpeedSearch(getComboBox()){
    @Override protected String getElementText(    Object element){
      if (element instanceof DirectoryChooser.ItemWrapper) {
        final VirtualFile virtualFile=((DirectoryChooser.ItemWrapper)element).getDirectory().getVirtualFile();
        final Module module=ModuleUtil.findModuleForFile(virtualFile,project);
        if (module != null) {
          return module.getName();
        }
      }
      return super.getElementText(element);
    }
  }
;
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  getComboBox().setRenderer(new ListCellRendererWrapper<DirectoryChooser.ItemWrapper>(getComboBox().getRenderer()){
    @Override public void customize(    JList list,    DirectoryChooser.ItemWrapper itemWrapper,    int index,    boolean selected,    boolean hasFocus){
      if (itemWrapper != null) {
        setIcon(itemWrapper.getIcon(fileIndex));
        final PsiDirectory directory=itemWrapper.getDirectory();
        final VirtualFile virtualFile=directory != null ? directory.getVirtualFile() : null;
        setText(virtualFile != null ? ProjectUtil.calcRelativeToProjectPath(virtualFile,project,true,true) : itemWrapper.getPresentableUrl());
      }
 else {
        setText("Leave in same source root");
      }
    }
  }
);
  final VirtualFile initialSourceRoot=initialTargetDirectory != null ? fileIndex.getSourceRootForFile(initialTargetDirectory.getVirtualFile()) : null;
  addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      VirtualFile root=MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project),getTargetPackage()),mySourceRoots,initialTargetDirectory);
      if (root == null)       return;
      final ComboBoxModel model=getComboBox().getModel();
      for (int i=0; i < model.getSize(); i++) {
        DirectoryChooser.ItemWrapper item=(DirectoryChooser.ItemWrapper)model.getElementAt(i);
        if (fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()) == root) {
          getComboBox().setSelectedItem(item);
          return;
        }
      }
      setComboboxModel(getComboBox(),root,fileIndex,mySourceRoots,project,true,errorMessageUpdater);
    }
  }
);
  editorComboBox.addDocumentListener(new DocumentAdapter(){
    @Override public void documentChanged(    DocumentEvent e){
      JComboBox comboBox=getComboBox();
      DirectoryChooser.ItemWrapper selectedItem=(DirectoryChooser.ItemWrapper)comboBox.getSelectedItem();
      setComboboxModel(comboBox,selectedItem != null ? fileIndex.getSourceRootForFile(selectedItem.getDirectory().getVirtualFile()) : initialSourceRoot,fileIndex,mySourceRoots,project,false,errorMessageUpdater);
    }
  }
);
  setComboboxModel(getComboBox(),initialSourceRoot,fileIndex,mySourceRoots,project,false,errorMessageUpdater);
  getComboBox().addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateErrorMessage(errorMessageUpdater,fileIndex,getComboBox().getSelectedItem());
    }
  }
);
}
