{
  PsiElement element=getParent();
  while (element != null && (!(element instanceof PsiClass) || element instanceof PsiTypeParameter)) {
    if (element instanceof PsiMethod) {
      final PsiMethod method=(PsiMethod)element;
      final PsiTypeParameterList list=method.getTypeParameterList();
      if (list != null) {
        final PsiTypeParameter[] parameters=list.getTypeParameters();
        for (int i=0; parameters != null && i < parameters.length; i++) {
          final PsiTypeParameter parameter=parameters[i];
          if (myQualifiedName.equals(parameter.getName()))           return parameter;
        }
      }
    }
    element=element.getParent();
  }
  if (element == null)   return null;
  Iterator<PsiTypeParameter> it=PsiUtil.typeParametersIterator((PsiClass)element);
  while (it.hasNext()) {
    PsiTypeParameter parameter=it.next();
    if (myQualifiedName.equals(parameter.getName()))     return parameter;
  }
  return getManager().findClass(myQualifiedName,getResolveScope());
}
