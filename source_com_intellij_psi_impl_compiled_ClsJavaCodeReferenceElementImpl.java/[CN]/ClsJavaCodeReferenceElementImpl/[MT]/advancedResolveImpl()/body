{
  final PsiElement resolve=resolveElement();
  if (resolve instanceof PsiClass) {
    final Map<PsiTypeParameter,PsiType> substitutionMap=new HashMap<PsiTypeParameter,PsiType>();
    final Iterator<PsiTypeParameter> it=PsiUtil.typeParametersIterator((PsiClass)resolve);
    int index=0;
    while (it.hasNext()) {
      PsiTypeParameter parameter=it.next();
      if (index < myTypeParameters.length) {
        substitutionMap.put(parameter,myTypeParameters[index].getType());
      }
      index++;
    }
    return new CandidateInfo(resolve,PsiSubstitutorImpl.createSubstitutor(substitutionMap));
  }
 else {
    return new CandidateInfo(resolve,PsiSubstitutor.EMPTY);
  }
}
