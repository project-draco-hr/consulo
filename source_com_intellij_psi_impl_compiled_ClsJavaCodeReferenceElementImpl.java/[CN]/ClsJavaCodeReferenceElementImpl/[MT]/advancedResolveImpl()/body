{
  final PsiElement resolve=resolveElement();
  if (resolve instanceof PsiClass) {
    final PsiClass aClass=((PsiClass)resolve);
    final Map<PsiTypeParameter,PsiType> substitutionMap=new HashMap<PsiTypeParameter,PsiType>();
    int index=0;
    final PsiTypeParameter[] typeParameters=aClass.getTypeParameters();
    for (    PsiTypeParameter parameter : typeParameters) {
      if (index < myTypeParameters.length) {
        substitutionMap.put(parameter,myTypeParameters[index].getType());
      }
 else {
        substitutionMap.put(parameter,null);
      }
      index++;
    }
    return new CandidateInfo(resolve,PsiSubstitutorImpl.createSubstitutor(substitutionMap));
  }
 else {
    return new CandidateInfo(resolve,PsiSubstitutor.EMPTY);
  }
}
