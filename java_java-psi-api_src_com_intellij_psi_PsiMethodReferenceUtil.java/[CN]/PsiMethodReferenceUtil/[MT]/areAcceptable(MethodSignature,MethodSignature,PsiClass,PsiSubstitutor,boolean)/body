{
  int offset=0;
  final PsiType[] signatureParameterTypes1=signature1.getParameterTypes();
  final PsiType[] signatureParameterTypes2=signature2.getParameterTypes();
  if (signatureParameterTypes1.length != signatureParameterTypes2.length) {
    if (signatureParameterTypes1.length == signatureParameterTypes2.length + 1) {
      if (isReceiverType(signatureParameterTypes1[0],psiClass,psiSubstitutor)) {
        offset++;
      }
 else       if (!isVarargs) {
        return false;
      }
    }
 else     if (!isVarargs) {
      return false;
    }
  }
  final int min=Math.min(signatureParameterTypes2.length,signatureParameterTypes1.length);
  for (int i=0; i < min; i++) {
    final PsiType type1=GenericsUtil.eliminateWildcards(psiSubstitutor.substitute(signatureParameterTypes1[offset + i]));
    if (isVarargs && i == min - 1) {
      if (!(signatureParameterTypes2[i] instanceof PsiArrayType)) {
        return false;
      }
      if (!TypeConversionUtil.isAssignable(((PsiArrayType)signatureParameterTypes2[i]).getComponentType(),type1) && !TypeConversionUtil.isAssignable(signatureParameterTypes2[i],type1)) {
        return false;
      }
    }
 else {
      if (!TypeConversionUtil.isAssignable(signatureParameterTypes2[i],type1)) {
        return false;
      }
    }
  }
  return true;
}
