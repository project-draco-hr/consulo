{
  final EditorHighlighter highlighter=((EditorEx)editor).getHighlighter();
  HighlighterIterator iterator=highlighter.createIterator(caret - 1);
  if (iterator.getTokenType() != GspTokenTypesEx.JSCRIPT_BEGIN) {
    return false;
  }
  String text=editor.getDocument().getText();
  if (caret < 2 || text.length() < Math.min(caret - 2,2)) {
    return false;
  }
  if (text.charAt(caret - 1) == '%' && text.charAt(caret - 2) == '<') {
    if (!GroovyEditorActionUtil.areSciptletSeparatorsUnbalanced(iterator)) {
      myOriginalHandler.execute(editor,dataContext);
      return true;
    }
 else {
      EditorModificationUtil.insertStringAtCaret(editor,"%>");
      editor.getCaretModel().moveCaretRelatively(-2,0,false,false,true);
      myOriginalHandler.execute(editor,dataContext);
      myOriginalHandler.execute(editor,dataContext);
      editor.getCaretModel().moveCaretRelatively(0,-1,false,false,true);
      return true;
    }
  }
 else {
    return false;
  }
}
