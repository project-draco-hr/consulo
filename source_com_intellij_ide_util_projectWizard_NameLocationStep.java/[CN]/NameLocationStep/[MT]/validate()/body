{
  final String moduleName=getModuleName();
  if (moduleName.length() == 0) {
    Messages.showErrorDialog(myNamePathComponent.getNameComponent(),"Please specify module name","Module Name Not Specified");
    return false;
  }
  if (isAlreadyExists(moduleName)) {
    Messages.showErrorDialog("Module with name \"" + moduleName + "\" already exists in the project","Module Already Exists");
    return false;
  }
  final String moduleLocation=getModuleFileDirectory();
  if (moduleLocation.length() == 0) {
    Messages.showErrorDialog(myNamePathComponent.getPathComponent(),"Please specify module file location","Module File Location Not Specified");
    return false;
  }
  if (!ModuleType.J2EE_APPLICATION.equals(myBuilder.getModuleType())) {
    final String contentEntryPath=getContentEntryPath();
    if (contentEntryPath != null) {
      Module[] modules=myModulesProvider.getModules();
      for (int j=0; j < modules.length; j++) {
        final Module module=modules[j];
        ModuleRootModel rootModel=myModulesProvider.getRootModel(module);
        LOG.assertTrue(rootModel != null);
        final VirtualFile[] moduleContentRoots=rootModel.getContentRoots();
        final String moduleContentRoot=contentEntryPath.replace(File.separatorChar,'/');
        for (int k=0; k < moduleContentRoots.length; k++) {
          final VirtualFile root=moduleContentRoots[k];
          if (moduleContentRoot.equals(root.getPath())) {
            Messages.showErrorDialog(myNamePathComponent.getPathComponent(),"Content root \"" + contentEntryPath + "\" already defined for module \""+ module.getName()+ "\".\nTwo modules in a project cannot share the same content root.","Module Content Root Already Exists");
            return false;
          }
        }
      }
      if (!ProjectWizardUtil.createDirectoryIfNotExists("The module content root\n",contentEntryPath,myNamePathComponent.isPathChangedByUser())) {
        return false;
      }
    }
  }
  final String moduleFileDirectory=getModuleFileDirectory();
  if (!ProjectWizardUtil.createDirectoryIfNotExists("The module file directory\n",moduleFileDirectory,myModuleFileDirectoryChangedByUser)) {
    return false;
  }
  return true;
}
