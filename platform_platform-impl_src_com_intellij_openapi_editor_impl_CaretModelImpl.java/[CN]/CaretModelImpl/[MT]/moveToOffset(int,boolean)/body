{
  assertIsDispatchThread();
  validateCallContext();
  final LogicalPosition logicalPosition=myEditor.offsetToLogicalPosition(offset);
  moveToLogicalPosition(logicalPosition,locateBeforeSoftWrap,null);
  final LogicalPosition positionByOffsetAfterMove=myEditor.offsetToLogicalPosition(myOffset);
  if (!ignoreWrongMoves && !positionByOffsetAfterMove.equals(logicalPosition)) {
    StringBuilder debugBuffer=new StringBuilder();
    moveToLogicalPosition(logicalPosition,locateBeforeSoftWrap,debugBuffer);
    int textStart=Math.max(0,Math.min(offset,myOffset) - 1);
    final DocumentEx document=myEditor.getDocument();
    int textEnd=Math.min(document.getTextLength() - 1,Math.max(offset,myOffset) + 1);
    CharSequence text=document.getCharsSequence().subSequence(textStart,textEnd);
    LogMessageEx.error(LOG,"caret moved to wrong offset",String.format("Requested: offset=%d, logical position='%s' but actual: offset=%d, logical position='%s' (%s). %s%n" + "interested text [%d;%d): '%s'%n debug trace: %s",offset,logicalPosition,myOffset,myLogicalCaret,positionByOffsetAfterMove,myEditor.dumpState(),textStart,textEnd,text,debugBuffer));
  }
}
