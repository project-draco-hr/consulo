{
  finishUpdate();
  DocumentEventImpl event=(DocumentEventImpl)e;
  final DocumentEx document=myEditor.getDocument();
  boolean performSoftWrapAdjustment=e.getNewLength() > 0 || myEditor.getSoftWrapModel().getSoftWrap(e.getOffset()) != null;
  if (event.isWholeTextReplaced()) {
    int newLength=document.getTextLength();
    if (myOffset == newLength - e.getNewLength() + e.getOldLength() || newLength == 0) {
      moveToOffset(newLength,performSoftWrapAdjustment);
    }
 else {
      final int line;
      try {
        line=event.translateLineViaDiff(myLogicalCaret.line);
        moveToLogicalPosition(new LogicalPosition(line,myLogicalCaret.column),performSoftWrapAdjustment,null);
      }
 catch (      FilesTooBigForDiffException e1) {
        LOG.info(e1);
        moveToOffset(0);
      }
    }
  }
 else {
    if (document.isInBulkUpdate())     return;
    int startOffset=e.getOffset();
    int oldEndOffset=startOffset + e.getOldLength();
    int newOffset=myOffset;
    if (myOffset > oldEndOffset || myOffset == oldEndOffset && needToShiftWhiteSpaces(e)) {
      newOffset+=e.getNewLength() - e.getOldLength();
    }
 else     if (myOffset >= startOffset && myOffset <= oldEndOffset) {
      newOffset=Math.min(newOffset,startOffset + e.getNewLength());
    }
    newOffset=Math.min(newOffset,document.getTextLength());
    moveToOffset(newOffset,performSoftWrapAdjustment);
  }
  myVisualLineStart=myEditor.logicalPositionToOffset(myEditor.visualToLogicalPosition(new VisualPosition(myVisibleCaret.line,0)));
  myVisualLineEnd=myEditor.logicalPositionToOffset(myEditor.visualToLogicalPosition(new VisualPosition(myVisibleCaret.line + 1,0)));
}
