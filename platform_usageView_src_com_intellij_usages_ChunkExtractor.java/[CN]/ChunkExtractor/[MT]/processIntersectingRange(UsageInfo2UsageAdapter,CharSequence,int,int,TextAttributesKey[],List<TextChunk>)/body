{
  final TextAttributes originalAttrs=convertAttributes(tokenHighlights);
  final int[] lastOffset={hiStart};
  usageInfo2UsageAdapter.processRangeMarkers(new Processor<Segment>(){
    @Override public boolean process(    Segment segment){
      int usageStart=segment.getStartOffset();
      int usageEnd=segment.getEndOffset();
      if (rangeIntersect(lastOffset[0],hiEnd,usageStart,usageEnd)) {
        addChunk(chars,lastOffset[0],Math.max(lastOffset[0],usageStart),originalAttrs,false,result);
        addChunk(chars,Math.max(lastOffset[0],usageStart),Math.min(hiEnd,usageEnd),originalAttrs,true,result);
        lastOffset[0]=usageEnd;
        if (usageEnd > hiEnd) {
          return false;
        }
      }
      return true;
    }
  }
);
  if (lastOffset[0] < hiEnd) {
    addChunk(chars,lastOffset[0],hiEnd,originalAttrs,false,result);
  }
}
