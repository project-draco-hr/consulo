{
  final PsiMethod[] constructors=clazz.getConstructors();
  if (constructors.length > 0) {
    for (    PsiMethod cls : constructors) {
      if ((cls.hasModifierProperty(PsiModifier.PUBLIC) || allowProtected && cls.hasModifierProperty(PsiModifier.PROTECTED)) && cls.getParameterList().getParametersCount() == 0) {
        return true;
      }
    }
  }
 else {
    final PsiClass superClass=clazz.getSuperClass();
    return superClass == null || hasDefaultConstructor(superClass,true);
  }
  return false;
}
