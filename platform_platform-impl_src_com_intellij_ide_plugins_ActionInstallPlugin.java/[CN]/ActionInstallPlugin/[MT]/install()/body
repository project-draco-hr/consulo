{
  IdeaPluginDescriptor[] selection=getPluginTable().getSelectedObjects();
  if (userConfirm(selection)) {
    final ArrayList<PluginNode> list=new ArrayList<PluginNode>();
    for (    IdeaPluginDescriptor descr : selection) {
      PluginNode pluginNode=null;
      if (descr instanceof PluginNode) {
        pluginNode=(PluginNode)descr;
      }
 else       if (descr instanceof IdeaPluginDescriptorImpl) {
        pluginNode=new PluginNode(descr.getPluginId());
        pluginNode.setName(descr.getName());
        pluginNode.setDepends(Arrays.asList(descr.getDependentPluginIds()),descr.getOptionalDependentPluginIds());
        pluginNode.setSize("-1");
      }
      if (pluginNode != null) {
        list.add(pluginNode);
      }
    }
    try {
      final Runnable onInstallRunnable=new Runnable(){
        @Override public void run(){
          installedPluginsToModel(list);
          installed.setRequireShutdown(true);
          if (!installed.isDisposed()) {
            getPluginTable().updateUI();
            final InstalledPluginsTableModel pluginsModel=(InstalledPluginsTableModel)installed.getPluginsModel();
            final Set<IdeaPluginDescriptor> disabled=new HashSet<IdeaPluginDescriptor>();
            for (            PluginNode node : list) {
              final PluginId pluginId=node.getPluginId();
              if (pluginsModel.isDisabled(pluginId)) {
                disabled.add(node);
              }
            }
            if (!disabled.isEmpty()) {
              String message="Updated plugin" + (disabled.size() > 1 ? "s are " : " is ") + "disabled. Would you like to enable "+ (disabled.size() > 1 ? "them" : "it")+ "?";
              if (Messages.showOkCancelDialog(host.pluginTable,message,CommonBundle.getWarningTitle(),Messages.getQuestionIcon()) == DialogWrapper.OK_EXIT_CODE) {
                pluginsModel.enableRows(disabled.toArray(new IdeaPluginDescriptor[disabled.size()]),true);
              }
            }
          }
 else {
            notifyPluginsWereInstalled();
          }
        }
      }
;
      PluginManagerMain.downloadPlugins(list,host.getPluginsModel().view,onInstallRunnable);
    }
 catch (    IOException e1) {
      PluginManagerMain.LOG.error(e1);
      IOExceptionDialog.showErrorDialog(IdeBundle.message("action.download.and.install.plugin"),IdeBundle.message("error.plugin.download.failed"));
    }
  }
}
