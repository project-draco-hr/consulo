{
  final IdeaTestFixtureFactory fixtureFactory=IdeaTestFixtureFactory.getFixtureFactory();
  myTempDirFixture=fixtureFactory.createTempDirTestFixture();
  myTempDirFixture.setUp();
  final File projectDir=new File(myTempDirFixture.getTempDirPath(),"ultimate");
  assertTrue(projectDir.mkdir());
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      try {
        initProject(projectDir,testMethod.getName());
        initRepositories(VcsUtil.getVirtualFile(projectDir));
      }
 catch (      Exception e) {
        throw new RuntimeException("Exception initializing the test",e);
      }
    }
  }
);
  GitVcs vcs=GitVcs.getInstance(myProject);
  assertNotNull(vcs);
  myTraceClient=true;
  doActionSilently(VcsConfiguration.StandardConfirmation.ADD);
  doActionSilently(VcsConfiguration.StandardConfirmation.REMOVE);
  myNotificationManager=GitTestUtil.registerNotificationManager(myProject);
  myMessageManager=GitTestUtil.registerMessageManager(myProject);
  GitTestPlatformFacade platformFacade=GitTestUtil.registerPlatformFacade(myProject);
  myDialogManager=platformFacade.getDialogManager();
  createAddCommit(myUltimate,"a");
  createAddCommit(myCommunity,"a");
  createAddCommit(myContrib,"a");
  myUltimate.getRoot().refresh(false,true);
  updateRepositories();
}
