{
  prepareUntrackedFilesAndBranchWithSameTrackedFiles(myCommunity);
  branch(myUltimate,"feature");
  branch(myContrib,"feature");
  Class gitCheckoutOperationClass=Class.forName("git4idea.branch.GitCheckoutOperation");
  Class[] classes=gitCheckoutOperationClass.getDeclaredClasses();
  Class untrackedFilesDialogClass=null;
  for (  Class aClass : classes) {
    if (aClass.getName().endsWith("UntrackedFilesDialog")) {
      untrackedFilesDialogClass=aClass;
    }
  }
  assertNotNull(untrackedFilesDialogClass);
  final AtomicBoolean dialogShown=new AtomicBoolean();
  final Class finalUntrackedFilesDialogClass=untrackedFilesDialogClass;
  myDialogManager.registerDialogHandler(untrackedFilesDialogClass,new TestDialogHandler(){
    @Override public int handleDialog(    Object dialog){
      if (dialog.getClass().equals(finalUntrackedFilesDialogClass)) {
        dialogShown.set(true);
      }
      return DialogWrapper.CANCEL_EXIT_CODE;
    }
  }
);
  doCheckout("feature",null);
  assertTrue(dialogShown.get());
}
