{
  prepareLocalChangesAndBranchWithSameModifiedFilesWithoutConflicts(myUltimate);
  branch(myCommunity,"feature");
  branch(myContrib,"feature");
  final AtomicBoolean dialogShown=new AtomicBoolean();
  myDialogManager.registerDialogHandler(GitSmartOperationDialog.class,new TestDialogHandler<GitSmartOperationDialog>(){
    @Override public int handleDialog(    GitSmartOperationDialog dialog){
      dialogShown.set(true);
      return DialogWrapper.CANCEL_EXIT_CODE;
    }
  }
);
  doCheckout("feature",null);
  assertTrue(dialogShown.get());
}
