{
  return new JavaCommandLineState(env){
    protected JavaParameters createJavaParameters(){
      return myParams;
    }
    public ExecutionResult execute(    @NotNull final Executor executor,    @NotNull final ProgramRunner runner) throws ExecutionException {
      try {
        ExecutionResult executionResult=super.execute(executor,runner);
        executionResult.getProcessHandler().addProcessListener(new ProcessAdapter(){
          @Override public void processTerminated(          ProcessEvent event){
            FileUtil.asyncDelete(new File(myTempPath));
          }
        }
);
        return executionResult;
      }
  finally {
        final Project project=myModule.getProject();
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            WindowManager.getInstance().getStatusBar(project).setInfo(myStatusbarMessage);
          }
        }
);
      }
    }
  }
;
}
