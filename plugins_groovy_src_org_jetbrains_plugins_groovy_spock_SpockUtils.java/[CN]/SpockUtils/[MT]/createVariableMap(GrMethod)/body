{
  GrOpenBlock block=method.getBlock();
  if (block == null)   return Collections.emptyMap();
  PsiElement elementUnderLabel=null;
  PsiElement elementAfterLabel=null;
  main:   for (PsiElement e=block.getFirstChild(); e != null; e=e.getNextSibling()) {
    if (e instanceof GrLabeledStatement) {
      GrLabeledStatement l=(GrLabeledStatement)e;
      elementAfterLabel=l.getNextSibling();
      while (true) {
        GrStatement statement=l.getStatement();
        if ("where".equals(l.getLabelName())) {
          elementUnderLabel=statement;
          break main;
        }
        if (statement instanceof GrLabeledStatement) {
          l=(GrLabeledStatement)statement;
          continue;
        }
        break;
      }
    }
  }
  if (elementUnderLabel == null)   return Collections.emptyMap();
  Map<String,SpockVariableDescriptor> res=new HashMap<String,SpockVariableDescriptor>();
  PsiElement e=elementUnderLabel;
  while (e != null) {
    if (e instanceof GrShiftExpressionImpl) {
      GrShiftExpressionImpl shift=(GrShiftExpressionImpl)e;
      if (shift.getOperationTokenType() == GroovyElementTypes.COMPOSITE_LSHIFT_SIGN) {
        GrExpression leftOperand=shift.getLeftOperand();
        GrExpression rightOperand=shift.getRightOperand();
        if (leftOperand instanceof GrReferenceExpression) {
          String name=getNameByReference(leftOperand);
          if (name != null) {
            SpockVariableDescriptor descriptor=new SpockVariableDescriptor(leftOperand,name);
            descriptor.addExpressionOfCollection(rightOperand);
            res.put(name,descriptor);
          }
        }
 else         if (leftOperand instanceof GrListOrMap) {
          GrExpression[] variableDefinitions=((GrListOrMap)leftOperand).getInitializers();
          SpockVariableDescriptor[] variables=createVariables(res,Arrays.asList(variableDefinitions));
          if (rightOperand instanceof GrListOrMap) {
            for (            GrExpression expression : ((GrListOrMap)rightOperand).getInitializers()) {
              if (expression instanceof GrListOrMap) {
                add(variables,Arrays.asList(((GrListOrMap)expression).getInitializers()));
              }
 else {
                for (                SpockVariableDescriptor variable : variables) {
                  if (variable != null) {
                    variable.addExpressionOfCollection(expression);
                  }
                }
              }
            }
          }
        }
      }
    }
 else     if (e instanceof GrAssignmentExpression) {
      GrAssignmentExpression assExpr=(GrAssignmentExpression)e;
      GrExpression lValue=assExpr.getLValue();
      String name=getNameByReference(lValue);
      if (name != null) {
        res.put(name,new SpockVariableDescriptor(lValue,name).addExpression(assExpr.getRValue()));
      }
    }
 else     if (isOrStatement(e)) {
      List<GrExpression> variableDefinitions=new ArrayList<GrExpression>();
      splitOr(variableDefinitions,(GrExpression)e);
      SpockVariableDescriptor[] variables=createVariables(res,variableDefinitions);
      List<GrExpression> row=new ArrayList<GrExpression>();
      PsiElement rowElement=getNext(e,elementUnderLabel,elementAfterLabel);
      while (isOrStatement(rowElement)) {
        row.clear();
        splitOr(row,(GrExpression)rowElement);
        add(variables,row);
        rowElement=getNext(rowElement,elementUnderLabel,elementAfterLabel);
      }
      e=rowElement;
      continue;
    }
    e=getNext(e,elementUnderLabel,elementAfterLabel);
  }
  return res;
}
