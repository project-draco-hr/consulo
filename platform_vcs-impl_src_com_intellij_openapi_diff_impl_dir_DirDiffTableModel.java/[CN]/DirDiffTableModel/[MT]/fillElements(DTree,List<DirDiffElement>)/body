{
  if (!myUpdating.get())   return;
  boolean separatorAdded=tree.getParent() == null;
  text.set(prepareText(tree.getPath()));
  for (  DTree child : tree.getChildren()) {
    if (!myUpdating.get())     return;
    if (!child.isContainer()) {
      if (child.isVisible()) {
        if (!separatorAdded) {
          elements.add(DirDiffElement.createDirElement(tree,tree.getSource(),tree.getTarget(),tree.getPath()));
          separatorAdded=true;
        }
switch (child.getType()) {
case SOURCE:
          elements.add(DirDiffElement.createSourceOnly(tree,child.getSource()));
        break;
case TARGET:
      elements.add(DirDiffElement.createTargetOnly(tree,child.getTarget()));
    break;
case CHANGED:
  elements.add(DirDiffElement.createChange(tree,child.getSource(),child.getTarget()));
break;
case EQUAL:
elements.add(DirDiffElement.createEqual(tree,child.getSource(),child.getTarget()));
break;
case ERROR:
elements.add(DirDiffElement.createError(tree,child.getSource(),child.getTarget()));
}
}
}
 else {
fillElements(child,elements);
}
}
}
