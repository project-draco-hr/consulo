{
  if (!myUpdating.get())   myUpdating.set(true);
  final JBLoadingPanel loadingPanel=getLoadingPanel();
  if (!loadingPanel.isLoading()) {
    loadingPanel.startLoading();
    if (updater == null) {
      updater=new Updater(loadingPanel,100);
      updater.start();
    }
  }
  final Application app=ApplicationManager.getApplication();
  app.executeOnPooledThread(new Runnable(){
    public void run(){
      myTree.updateVisibility(mySettings);
      final ArrayList<DirDiffElement> elements=new ArrayList<DirDiffElement>();
      fillElements(myTree,elements);
      final Runnable uiThread=new Runnable(){
        public void run(){
          clear();
          myElements.addAll(elements);
          myUpdating.set(false);
          myTable.revalidate();
          DirDiffTableModel.this.text.set("");
          if (loadingPanel.isLoading()) {
            loadingPanel.stopLoading();
          }
          if (mySelectionConfig == null) {
            selectFirstRow();
          }
 else {
            mySelectionConfig.restore();
          }
          myPanel.update(true);
        }
      }
;
      if (myProject.isDefault()) {
        SwingUtilities.invokeLater(uiThread);
      }
 else {
        final AccessToken token=ApplicationManager.getApplication().acquireReadActionLock();
        try {
          ApplicationManagerEx.getApplicationEx().runEdtSafeAction(uiThread);
        }
  finally {
          token.finish();
        }
      }
    }
  }
);
}
