{
  if (myDeaf)   return;
  if (myInitialText == null) {
    final Document document=e.getDocument();
    final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(myProject);
    if (!documentManager.isUncommited(document)) {
      final String currentCommandName=CommandProcessor.getInstance().getCurrentCommandName();
      if (!Comparing.strEqual(EditorBundle.message("typing.in.editor.command.name"),currentCommandName) && !Comparing.strEqual(EditorBundle.message("paste.command.name"),currentCommandName)) {
        return;
      }
      final PsiFile file=documentManager.getPsiFile(document);
      if (file != null) {
        final PsiElement element=file.findElementAt(e.getOffset());
        if (element != null) {
          if (myBannedChangeInfo != null && LanguageChangeSignatureDetectors.wasBanned(element,myBannedChangeInfo))           return;
          myBannedChangeInfo=null;
          final ChangeInfo info=LanguageChangeSignatureDetectors.createCurrentChangeInfo(element,myCurrentInfo);
          if (info != null) {
            myInitialText=document.getText();
            myCurrentInfo=info;
          }
        }
      }
    }
  }
}
