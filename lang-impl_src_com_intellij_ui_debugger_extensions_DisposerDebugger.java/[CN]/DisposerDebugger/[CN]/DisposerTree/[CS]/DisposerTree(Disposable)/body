{
  Disposer.register(parent,this);
  final DisposerStructure structure=new DisposerStructure();
  final DefaultTreeModel model=new DefaultTreeModel(new DefaultMutableTreeNode());
  final Tree tree=new Tree(model);
  tree.setRootVisible(false);
  tree.setShowsRootHandles(true);
  tree.setCellRenderer(new NodeRenderer());
  tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  myTreeBuilder=new AbstractTreeBuilder(tree,model,structure,AlphaComparator.INSTANCE){
    @Override protected Object getTreeStructureElement(    NodeDescriptor nodeDescriptor){
      return nodeDescriptor;
    }
    @Override protected boolean isAutoExpandNode(    NodeDescriptor nodeDescriptor){
      return structure.getRootElement() == nodeDescriptor;
    }
  }
;
  Disposer.register(this,myTreeBuilder);
  myTreeBuilder.updateFromRoot();
  myTree=tree;
  setLayout(new BorderLayout());
  add(new JScrollPane(myTree),BorderLayout.CENTER);
  Disposer.getTree().addListener(this);
}
