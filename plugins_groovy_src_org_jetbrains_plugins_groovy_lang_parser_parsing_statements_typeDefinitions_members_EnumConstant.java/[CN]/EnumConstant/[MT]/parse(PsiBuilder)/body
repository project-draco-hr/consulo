{
  PsiBuilder.Marker ecMarker=builder.mark();
  ParserUtils.getToken(builder,mNLS);
  Annotation.parseAnnotationOptional(builder);
  if (!ParserUtils.getToken(builder,mIDENT)) {
    ecMarker.rollbackTo();
    return WRONGWAY;
  }
  if (ParserUtils.getToken(builder,mLPAREN)) {
    ArgumentList.parse(builder,mRPAREN);
    ParserUtils.getToken(builder,mNLS);
    if (!ParserUtils.getToken(builder,mRPAREN)) {
      builder.error(GroovyBundle.message("rparen.expected"));
      ecMarker.rollbackTo();
      return ENUM_CONSTANT_ERROR;
    }
  }
  if (ParserUtils.lookAhead(builder,mLCURLY)) {
    ClassBlock.parse(builder);
  }
  ecMarker.done(ENUM_CONSTANT);
  return ENUM_CONSTANT;
}
