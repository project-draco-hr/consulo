{
  final PsiPrimitiveType primitiveType=PRIMITIVE_TYPES.get(text);
  if (primitiveType != null)   return primitiveType;
  final DummyHolder holder=DummyHolderFactory.createHolder(myManager,new JavaDummyElement(text,TYPE,false),context);
  final PsiElement element=SourceTreeToPsiMap.treeElementToPsi(holder.getTreeElement().getFirstChildNode());
  if (!(element instanceof PsiTypeElement)) {
    throw new IncorrectOperationException("Incorrect type \"" + text + "\".");
  }
  if (markAsCopy) {
    holder.getTreeElement().acceptTree(new GeneratedMarkerVisitor());
  }
  return ((PsiTypeElement)element).getType();
}
