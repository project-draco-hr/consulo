{
  extend(CompletionType.BASIC,XmlPatterns.psiElement().inside(XmlPatterns.xmlAttributeValue()),new CompletionProvider<CompletionParameters>(){
    @Override protected void addCompletions(    @NotNull CompletionParameters parameters,    ProcessingContext context,    @NotNull final CompletionResultSet result){
      final XmlAttributeValue attributeValue=PsiTreeUtil.getParentOfType(parameters.getPosition(),XmlAttributeValue.class,false);
      if (attributeValue == null) {
        return;
      }
      final Set<String> usedWords=new THashSet<String>();
      final Ref<Boolean> addWordVariants=Ref.create(true);
      result.runRemainingContributors(parameters,new Consumer<CompletionResult>(){
        public void consume(        CompletionResult r){
          if (r.getLookupElement().getUserData(WORD_COMPLETION_COMPATIBLE) == null) {
            addWordVariants.set(false);
          }
          usedWords.add(r.getLookupElement().getLookupString());
          result.passResult(r.withLookupElement(LookupElementDecorator.withInsertHandler(r.getLookupElement(),QUOTE_EATER)));
        }
      }
);
      if (addWordVariants.get().booleanValue()) {
        addWordVariants.set(attributeValue.getReferences().length == 0);
      }
      if (addWordVariants.get().booleanValue()) {
        WordCompletionContributor.addWordCompletionVariants(result,parameters,usedWords);
      }
    }
  }
);
}
