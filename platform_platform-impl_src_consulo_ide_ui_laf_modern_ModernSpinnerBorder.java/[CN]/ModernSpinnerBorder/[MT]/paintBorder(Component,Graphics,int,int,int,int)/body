{
  final JSpinner spinner=(JSpinner)c;
  final JFormattedTextField editor=UIUtil.findComponentOfType(spinner,JFormattedTextField.class);
  final int x1=x + 3;
  final int y1=y + 3;
  final int width1=width - 8;
  final int height1=height - 6;
  final GraphicsConfig config=GraphicsUtil.setupAAPainting(g);
  if (c.isOpaque()) {
    g.setColor(UIUtil.getPanelBackground());
    g.fillRect(x,y,width,height);
  }
  g.setColor(UIUtil.getTextFieldBackground());
  g.fillRoundRect(x1,y1,width1,height1,5,5);
  g.setColor(UIUtil.getPanelBackground());
  if (editor != null) {
    final int off=editor.getBounds().x + editor.getWidth() + ((JSpinner)c).getInsets().left+ 1;
    g.fillRect(off,y1,17,height1);
    g.setColor(Gray._100);
    g.drawLine(off,y1,off,height1 + 2);
  }
  if (!c.isEnabled()) {
    ((Graphics2D)g).setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.4f));
  }
  ComponentUI componentUI=ModernUIUtil.getUI(c);
  if (componentUI instanceof ModernTextBorder.ModernTextUI) {
    if (((ModernTextBorder.ModernTextUI)componentUI).isFocused()) {
      g.setColor(ModernUIUtil.getSelectionBackground());
    }
 else     if (((ModernTextBorder.ModernTextUI)componentUI).getMouseEnterHandler().isMouseEntered()) {
      g.setColor(ModernUIUtil.getActiveBorderColor());
    }
 else {
      g.setColor(ModernUIUtil.getDisabledBorderColor());
    }
  }
 else {
    g.setColor(ModernUIUtil.getActiveBorderColor());
  }
  g.drawRect(x1,y1,width1,height1);
  config.restore();
}
