{
  super();
  setLayout(new BorderLayout());
  myRepositoryCheckbox=new JBCheckBox();
  myRepositoryCheckbox.setFocusable(false);
  myRepositoryCheckbox.setOpaque(false);
  myRepositoryCheckbox.setBorder(null);
  myRepositoryCheckbox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    @NotNull ActionEvent e){
      fireOnSelectionChange(myRepositoryCheckbox.isSelected());
    }
  }
);
  myRepositoryLabel=new JLabel(repoName);
  myLocalBranch=new JBLabel(sourceName);
  myArrowLabel=new JLabel(" " + UIUtil.rightArrow() + " ");
  myDestPushTargetPanelComponent=destPushTargetPanelComponent;
  myTextRenderer=new ColoredTreeCellRenderer(){
    @RequiredDispatchThread @Override public void customizeCellRenderer(    @NotNull JTree tree,    Object value,    boolean selected,    boolean expanded,    boolean leaf,    int row,    boolean hasFocus){
    }
  }
;
  myTextRenderer.setOpaque(false);
  layoutComponents();
  setInputVerifier(new InputVerifier(){
    @Override public boolean verify(    JComponent input){
      ValidationInfo error=myDestPushTargetPanelComponent.verify();
      if (error != null) {
        PopupUtil.showBalloonForComponent(error.component,error.message,MessageType.WARNING,false,project);
      }
      return error == null;
    }
  }
);
  JCheckBox emptyBorderCheckBox=new JCheckBox();
  emptyBorderCheckBox.setBorder(null);
}
