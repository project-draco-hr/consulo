{
  myProject=project;
  myContext=context;
  myFacetType=facetType;
  myModulesList.setCellRenderer(new ModulesListCellRenderer());
  myModulesListModel=new DefaultListModel();
  myModulesList.setModel(myModulesListModel);
  myFilesList.setCellRenderer(new FilesListCellRenderer());
  myFilesListModel=new DefaultListModel();
  myFilesList.setModel(myFilesListModel);
  myAddModuleButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      String description=ProjectBundle.message("choose.description.facet.auto.detection.will.be.disabled.in.the.selected.modules",myFacetType.getPresentableName());
      String title=ProjectBundle.message("choose.modules.dialog.title");
      ChooseModulesDialog dialog=new ChooseModulesDialog(myProject,getEnabledModules(),title,description);
      dialog.show();
      List<Module> chosenElements=dialog.getChosenElements();
      if (dialog.isOK() && !chosenElements.isEmpty()) {
        for (        Module module : chosenElements) {
          String moduleName=module.getName();
          myModulesListModel.addElement(moduleName);
        }
        updateButtons();
        myModulesList.repaint();
      }
    }
  }
);
  myRemoveModuleButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      ListUtil.removeSelectedItems(myModulesList);
      updateButtons();
    }
  }
);
  myRemoveFileButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      ListUtil.removeSelectedItems(myFilesList);
      updateButtons();
    }
  }
);
  myEnableAutoDetectionCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      updateButtons();
    }
  }
);
  ListSelectionListener selectionListener=new ListSelectionListener(){
    public void valueChanged(    final ListSelectionEvent e){
      updateRemoveButtons();
    }
  }
;
  myFilesList.addListSelectionListener(selectionListener);
  myModulesList.addListSelectionListener(selectionListener);
}
