{
  PsiTypeParameter[] typeParameters1=methodSignature.getTypeParameters();
  PsiTypeParameter[] typeParameters2=superMethodSignature.getTypeParameters();
  if (typeParameters1.length != typeParameters2.length)   return null;
  PsiSubstitutor substitutor1=methodSignature.getSubstitutor();
  PsiSubstitutor substitutor2=superMethodSignature.getSubstitutor();
  for (int i=0; i < typeParameters1.length; i++) {
    PsiElementFactory factory=typeParameters1[i].getManager().getElementFactory();
    substitutor2=substitutor2.put(typeParameters2[i],factory.createType(typeParameters1[i]));
  }
  for (int i=0; i < typeParameters1.length; i++) {
    PsiTypeParameter typeParameter1=typeParameters1[i];
    PsiTypeParameter typeParameter2=typeParameters2[i];
    final PsiClassType[] supers1=typeParameter1.getSuperTypes();
    final PsiClassType[] supers2=typeParameter2.getSuperTypes();
    if (supers1.length != supers2.length)     return null;
    for (int j=0; j < supers1.length; j++) {
      PsiType type1=substitutor1.substitute(supers1[j]);
      PsiType type2=substitutor2.substitute(supers2[j]);
      if (!type1.equals(type2))       return null;
    }
  }
  return substitutor2;
}
