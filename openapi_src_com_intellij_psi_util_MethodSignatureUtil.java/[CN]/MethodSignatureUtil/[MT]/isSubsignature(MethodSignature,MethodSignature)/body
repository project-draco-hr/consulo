{
  if (subSignature == superSignature)   return true;
  if (checkDifferentSignaturesLightweight(superSignature,subSignature))   return false;
  PsiSubstitutor unifyingSubstitutor=getSuperMethodSignatureSubstitutor(superSignature,subSignature);
  if (!checkSignaturesEqualInner(superSignature,subSignature,unifyingSubstitutor)) {
    if (subSignature.getTypeParameters().length > 0)     return false;
    final PsiType[] subParameterTypes=subSignature.getParameterTypes();
    final PsiType[] superParameterTypes=superSignature.getParameterTypes();
    for (int i=0; i < subParameterTypes.length; i++) {
      PsiType type1=subParameterTypes[i];
      PsiType type2=TypeConversionUtil.erasure(superParameterTypes[i]);
      if (!Comparing.equal(type1,type2))       return false;
    }
    return true;
  }
  return true;
}
