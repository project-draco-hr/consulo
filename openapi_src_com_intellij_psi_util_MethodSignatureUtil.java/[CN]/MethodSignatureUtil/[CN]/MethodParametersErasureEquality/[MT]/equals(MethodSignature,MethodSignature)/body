{
  final PsiType[] parameterTypes1=method1.getParameterTypes();
  final PsiType[] parameterTypes2=method2.getParameterTypes();
  if (parameterTypes1.length != parameterTypes2.length)   return false;
  for (int i=0; i < parameterTypes1.length; i++) {
    final PsiType type1=parameterTypes1[i];
    final PsiType type2=parameterTypes2[i];
    if (Comparing.equal(type1,type2))     continue;
    if (!(type1 instanceof PsiClassType))     return false;
    if (!(type2 instanceof PsiClassType))     return false;
    final PsiClass aClass1=getErasure(((PsiClassType)type1).resolve());
    final PsiClass aClass2=getErasure(((PsiClassType)type2).resolve());
    if (aClass1 != null && !aClass1.getManager().areElementsEquivalent(aClass1,aClass2))     return false;
    if (aClass1 == null != (aClass2 == null))     return false;
  }
  return true;
}
