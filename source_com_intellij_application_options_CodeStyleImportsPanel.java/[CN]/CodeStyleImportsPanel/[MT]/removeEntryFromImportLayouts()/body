{
  int selected=myImportLayoutTable.getSelectedRow();
  if (selected < 0)   return;
  CodeStyleSettings.ImportLayoutTable.Entry entry=myImportLayoutList.getEntryAt(selected);
  if (isOtherEntry(entry)) {
    boolean isFound=false;
    CodeStyleSettings.ImportLayoutTable.Entry[] entries=myImportLayoutList.getEntries();
    for (int i=0; i < entries.length; i++) {
      if (i != selected && isOtherEntry(entries[i])) {
        isFound=true;
        break;
      }
    }
    if (!isFound) {
      return;
    }
  }
  if (myImportLayoutTable.isEditing()) {
    TableCellEditor editor=myImportLayoutTable.getCellEditor();
    if (editor != null) {
      editor.stopCellEditing();
    }
  }
  myImportLayoutList.removeEntryAt(selected);
  AbstractTableModel model=(AbstractTableModel)myImportLayoutTable.getModel();
  model.fireTableRowsDeleted(selected,selected);
  if (selected >= myImportLayoutList.getEntryCount()) {
    selected--;
  }
  if (selected >= 0) {
    myImportLayoutTable.setRowSelectionInterval(selected,selected);
  }
}
