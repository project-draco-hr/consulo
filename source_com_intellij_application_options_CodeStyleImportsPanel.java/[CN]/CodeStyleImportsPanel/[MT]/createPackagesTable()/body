{
  final String[] names={"Package","With Subpackages"};
  TableModel dataModel=new AbstractTableModel(){
    public int getColumnCount(){
      return names.length;
    }
    public int getRowCount(){
      return myPackageList.getEntryCount();
    }
    public Object getValueAt(    int row,    int col){
      CodeStyleSettings.PackageTable.Entry entry=myPackageList.getEntryAt(row);
      if (col == 0) {
        if (entry != null) {
          return entry.getPackageName();
        }
      }
      if (col == 1) {
        if (entry != null) {
          return entry.isWithSubpackages() ? Boolean.TRUE : Boolean.FALSE;
        }
      }
      return null;
    }
    public String getColumnName(    int column){
      return names[column];
    }
    public Class getColumnClass(    int c){
      if (c == 0) {
        return String.class;
      }
      if (c == 1) {
        return Boolean.class;
      }
      return null;
    }
    public boolean isCellEditable(    int row,    int col){
      return true;
    }
    public void setValueAt(    Object aValue,    int row,    int col){
      CodeStyleSettings.PackageTable.Entry packageEntry=myPackageList.getEntryAt(row);
      if (col == 0) {
        CodeStyleSettings.PackageTable.Entry newPackageEntry=new CodeStyleSettings.PackageTable.Entry(((String)aValue).trim(),packageEntry.isWithSubpackages());
        myPackageList.setEntryAt(newPackageEntry,row);
      }
      if (col == 1) {
        CodeStyleSettings.PackageTable.Entry newPackageEntry=new CodeStyleSettings.PackageTable.Entry(packageEntry.getPackageName(),((Boolean)aValue).booleanValue());
        myPackageList.setEntryAt(newPackageEntry,row);
      }
    }
  }
;
  myPackageTable=new Table(dataModel);
  myPackageTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  TableCellEditor editor=myPackageTable.getDefaultEditor(String.class);
  myPackageTable.fixColumnWidthToHeader(1);
  if (editor instanceof DefaultCellEditor) {
    ((DefaultCellEditor)editor).setClickCountToStart(1);
  }
  myPackageTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateButtons();
    }
  }
);
  JScrollPane scrollpane=ScrollPaneFactory.createScrollPane(myPackageTable);
  return scrollpane;
}
