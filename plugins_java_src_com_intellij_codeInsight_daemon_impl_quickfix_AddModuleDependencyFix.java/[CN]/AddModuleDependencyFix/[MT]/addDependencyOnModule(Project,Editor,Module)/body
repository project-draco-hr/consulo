{
  final Runnable doit=new Runnable(){
    @Override public void run(){
      final boolean test=ModuleRootManager.getInstance(myCurrentModule).getFileIndex().isInTestSourceContent(myClassVFile);
      ModuleRootModificationUtil.addDependency(myCurrentModule,module,test ? DependencyScope.TEST : DependencyScope.COMPILE,false);
      if (editor != null) {
        final List<PsiClass> targetClasses=new ArrayList<PsiClass>();
        for (        PsiClass psiClass : myClasses) {
          if (ModuleUtilCore.findModuleForPsiElement(psiClass) == module) {
            targetClasses.add(psiClass);
          }
        }
        new AddImportAction(project,myReference,editor,targetClasses.toArray(new PsiClass[targetClasses.size()])).execute();
      }
    }
  }
;
  final Pair<Module,Module> circularModules=ModuleCompilerUtil.addingDependencyFormsCircularity(myCurrentModule,module);
  if (circularModules == null) {
    doit.run();
  }
 else {
    showCircularWarningAndContinue(project,circularModules,module,doit);
  }
}
