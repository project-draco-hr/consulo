{
  final CardLayout layout=new CardLayout();
  myConfigureRootPanel.setLayout(layout);
  final DefaultListModel listModel=new DefaultListModel();
  layout.addLayoutComponent(new JPanel(),EMPTY);
  for (  FilePath root : rootToPanel.keySet()) {
    myConfigureRootPanel.add(rootToPanel.get(root).getPanel(),root.getPath());
    listModel.addElement(root);
  }
  myConfigureRootPanel.revalidate();
  myList.setModel(listModel);
  myList.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setCellRenderer(new ColoredListCellRenderer(){
    protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value instanceof FilePath) {
        final FilePath path=((FilePath)value);
        if (path.getVirtualFile() != null) {
          append(VcsPathPresenter.getInstance(project).getPresentableRelativePathFor(path.getVirtualFile()),SimpleTextAttributes.REGULAR_ATTRIBUTES);
        }
 else {
          append(VcsPathPresenter.getInstance(project).getPresentableRelativePathFor(path.getVirtualFileParent()) + File.separator + path.getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
        }
      }
    }
  }
);
  myList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      final FilePath root=((FilePath)myList.getSelectedValue());
      if (root != null) {
        layout.show(myConfigureRootPanel,root.getPath());
      }
 else {
        layout.show(myConfigureRootPanel,EMPTY);
      }
    }
  }
);
  myList.setSelectedIndex(0);
  myList.requestFocus();
}
