{
  long delta=Math.abs(d1 - d2);
  if (delta == 0)   return CommonBundle.message("date.format.right.now");
  StringBuffer buf=new StringBuffer();
  int n=-1;
  int i;
  for (i=0; i < DELIMS.length; i++) {
    long delim=DELIMS[i];
    if (delta >= delim) {
      n=(int)(delta / delim);
      break;
    }
  }
  String result=buf.toString();
  if (d2 > d1) {
    if (n <= 0) {
      return CommonBundle.message("date.format.a.few.moments.ago");
    }
 else {
      return someTimeAgoMessage(PERIOD[i],n);
    }
  }
 else   if (d2 < d1) {
    if (n <= 0) {
      return CommonBundle.message("date.format.in.a.few.moments");
    }
 else {
      return composeInSomeTimeMessage(PERIOD[i],n);
    }
  }
  return result;
}
