{
  ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  String msg=null;
  double fraction=0.0D;
  if (indicator != null) {
    msg=indicator.getText();
    fraction=indicator.getFraction();
    indicator.setText(message);
  }
  final Runnable[] runnables=new Runnable[files.size()];
  for (int i=0; i < files.size(); i++) {
    PsiFile pfile=files.get(i);
    if (pfile == null) {
      logger.debug("Unexpected null file at " + i);
      continue;
    }
    if (indicator != null) {
      if (indicator.isCanceled()) {
        return null;
      }
      indicator.setFraction((double)i / (double)files.size());
    }
    if (pfile.isWritable()) {
      try {
        runnables[i]=preprocessFile(pfile);
      }
 catch (      IncorrectOperationException incorrectoperationexception) {
        logger.error(incorrectoperationexception);
      }
    }
    files.set(i,null);
  }
  if (indicator != null) {
    indicator.setText(msg);
    indicator.setFraction(fraction);
  }
  return new Runnable(){
    public void run(){
      ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
      String msg=null;
      double fraction=0.0D;
      if (indicator != null) {
        msg=indicator.getText();
        fraction=indicator.getFraction();
        indicator.setText(message);
      }
      for (int j=0; j < runnables.length; j++) {
        if (indicator != null) {
          if (indicator.isCanceled()) {
            return;
          }
          indicator.setFraction((double)j / (double)runnables.length);
        }
        Runnable runnable=runnables[j];
        if (runnable != null) {
          runnable.run();
        }
        runnables[j]=null;
      }
      if (indicator != null) {
        indicator.setText(msg);
        indicator.setFraction(fraction);
      }
    }
  }
;
}
