{
  @NonNls final DefaultMutableTreeNode root=new DefaultMutableTreeNode("Root");
  final Tree tree=new Tree(root);
  tree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      final TreePath selectionPath=tree.getSelectionPath();
      if (selectionPath != null) {
        final DefaultMutableTreeNode node=(DefaultMutableTreeNode)selectionPath.getLastPathComponent();
        final Object userObject=node.getUserObject();
        if (userObject instanceof AntTargetNodeDescriptor) {
          final AntTargetNodeDescriptor antBuildTarget=(AntTargetNodeDescriptor)userObject;
          mySelectedTarget=new Pair<AntBuildFile,String>(antBuildTarget.getBuildFile(),antBuildTarget.getAntTarget().getName());
        }
 else {
          mySelectedTarget=null;
        }
      }
    }
  }
);
  tree.setCellRenderer(new MyTreeCellRenderer());
  tree.setRootVisible(false);
  tree.setShowsRootHandles(true);
  tree.setLineStyleAngled();
  TreeToolTipHandler.install(tree);
  TreeUtil.installActions(tree);
  new TreeSpeedSearch(tree);
  DefaultMutableTreeNode selectedNode=null;
  final AntBuildFile[] antBuildFiles=myAntConfiguration.getBuildFiles();
  for (  AntBuildFile buildFile : antBuildFiles) {
    final DefaultMutableTreeNode buildFileNode=new DefaultMutableTreeNode(buildFile);
    DefaultMutableTreeNode selection=processFileTargets(myAntConfiguration.getMetaTargets(buildFile),buildFile,buildFileNode);
    if (selection != null) {
      selectedNode=selection;
    }
    selection=processFileTargets(myAntConfiguration.getModel(buildFile).getTargets(),buildFile,buildFileNode);
    if (selection != null) {
      selectedNode=selection;
    }
    root.add(buildFileNode);
  }
  TreeUtil.expandAll(tree);
  TreeUtil.selectInTree(selectedNode,true,tree);
  return tree;
}
