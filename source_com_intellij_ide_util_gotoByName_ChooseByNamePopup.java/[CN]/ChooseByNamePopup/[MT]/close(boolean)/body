{
  if (myDisposedFlag) {
    return;
  }
  if (isOk) {
    myModel.saveInitialCheckBoxState(myCheckBox.isSelected());
    final Object[] chosenElements=getChosenElements();
    if (chosenElements != null) {
      for (int i=0; i < chosenElements.length; i++) {
        myActionListener.elementChosen(chosenElements[i]);
      }
    }
 else {
      return;
    }
    if (chosenElements.length > 0) {
      final String enteredText=myTextField.getText().toLowerCase();
      if (enteredText.indexOf('*') >= 0) {
        FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.popup.wildcards");
      }
 else {
        for (int i=0; i < chosenElements.length; i++) {
          final String choosenElementText=myModel.getElementName(chosenElements[i]).toLowerCase();
          if (!choosenElementText.startsWith(enteredText)) {
            FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.popup.camelprefix");
            break;
          }
        }
      }
    }
 else {
      return;
    }
  }
  myDisposedFlag=true;
  myAlarm.cancelAllRequests();
  myProject.putUserData(CHOOSE_BY_NAME_POPUP_IN_PROJECT_KEY,null);
  cleanupUI();
  myActionListener.onClose();
}
