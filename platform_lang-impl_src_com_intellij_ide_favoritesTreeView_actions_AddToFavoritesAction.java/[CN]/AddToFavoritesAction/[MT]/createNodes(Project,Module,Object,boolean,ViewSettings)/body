{
  if (project == null)   return Collections.emptyList();
  ArrayList<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  for (  FavoriteNodeProvider provider : Extensions.getExtensions(FavoriteNodeProvider.EP_NAME,project)) {
    final AbstractTreeNode treeNode=provider.createNode(project,object,favoritesConfig);
    if (treeNode != null) {
      result.add(treeNode);
      return result;
    }
  }
  final PsiManager psiManager=PsiManager.getInstance(project);
  final String currentViewId=ProjectView.getInstance(project).getCurrentViewId();
  AbstractProjectViewPane pane=ProjectView.getInstance(project).getProjectViewPaneById(currentViewId);
  if (object instanceof PsiElement[]) {
    for (    PsiElement psiElement : (PsiElement[])object) {
      addPsiElementNode(psiElement,project,result,favoritesConfig);
    }
    return result;
  }
  if (object instanceof PsiElement) {
    Module containingModule=null;
    if (inProjectView && ProjectView.getInstance(project).isShowModules(currentViewId)) {
      if (pane != null && pane.getSelectedDescriptor() != null && pane.getSelectedDescriptor().getElement() instanceof AbstractTreeNode) {
        AbstractTreeNode abstractTreeNode=((AbstractTreeNode)pane.getSelectedDescriptor().getElement());
        while (abstractTreeNode != null && !(abstractTreeNode.getParent() instanceof AbstractModuleNode)) {
          abstractTreeNode=abstractTreeNode.getParent();
        }
        if (abstractTreeNode != null) {
          containingModule=((AbstractModuleNode)abstractTreeNode.getParent()).getValue();
        }
      }
    }
    addPsiElementNode((PsiElement)object,project,result,favoritesConfig);
    return result;
  }
  if (object instanceof VirtualFile[]) {
    for (    VirtualFile vFile : (VirtualFile[])object) {
      PsiElement element=psiManager.findFile(vFile);
      if (element == null)       element=psiManager.findDirectory(vFile);
      addPsiElementNode(element,project,result,favoritesConfig);
    }
    return result;
  }
  if (object instanceof VirtualFile) {
    final VirtualFile vFile=(VirtualFile)object;
    final PsiFile psiFile=psiManager.findFile(vFile);
    addPsiElementNode(psiFile,project,result,favoritesConfig);
    return result;
  }
  if (object instanceof ModuleGroup[]) {
    for (    ModuleGroup moduleGroup : (ModuleGroup[])object) {
      result.add(new ProjectViewModuleGroupNode(project,moduleGroup,favoritesConfig));
    }
    return result;
  }
  if (object instanceof Module)   object=new Module[]{(Module)object};
  if (object instanceof Module[]) {
    for (    Module module1 : (Module[])object) {
      result.add(new ProjectViewModuleNode(project,module1,favoritesConfig));
    }
    return result;
  }
  if (object instanceof LibraryGroupElement[]) {
    for (    LibraryGroupElement libraryGroup : (LibraryGroupElement[])object) {
      result.add(new LibraryGroupNode(project,libraryGroup,favoritesConfig));
    }
    return result;
  }
  if (object instanceof NamedLibraryElement[]) {
    for (    NamedLibraryElement namedLibrary : (NamedLibraryElement[])object) {
      result.add(new NamedLibraryElementNode(project,namedLibrary,favoritesConfig));
    }
    return result;
  }
  return result;
}
