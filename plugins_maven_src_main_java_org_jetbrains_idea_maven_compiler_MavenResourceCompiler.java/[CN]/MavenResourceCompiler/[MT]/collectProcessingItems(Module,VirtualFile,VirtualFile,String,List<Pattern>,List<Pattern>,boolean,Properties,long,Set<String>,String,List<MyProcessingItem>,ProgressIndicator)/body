{
  indicator.checkCanceled();
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(module.getProject()).getFileIndex();
  for (  VirtualFile eachSourceFile : currentDir.getChildren()) {
    if (eachSourceFile.isDirectory()) {
      collectProcessingItems(module,sourceRoot,eachSourceFile,outputDir,includes,excludes,isSourceRootFiltered,properties,propertiesHashCode,nonFilteredExtensions,escapeString,result,indicator);
    }
 else {
      String relPath=VfsUtilCore.getRelativePath(eachSourceFile,sourceRoot,'/');
      if (relPath == null) {
        MavenLog.LOG.error("Cannot calculate relate path for file: " + eachSourceFile + " in root: "+ sourceRoot);
        continue;
      }
      if (fileIndex.isIgnored(eachSourceFile))       continue;
      if (!MavenUtil.isIncluded(relPath,includes,excludes))       continue;
      String outputPath=outputDir + "/" + relPath;
      long outputFileTimestamp=-1;
      File outputFile=new File(outputPath);
      if (outputFile.exists()) {
        outputFileTimestamp=outputFile.lastModified();
      }
      boolean isFileterd=isSourceRootFiltered && !nonFilteredExtensions.contains(eachSourceFile.getExtension());
      result.add(new MyProcessingItem(module,eachSourceFile,outputPath,outputFileTimestamp,isFileterd,properties,propertiesHashCode,escapeString));
    }
  }
}
