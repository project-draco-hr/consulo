{
  if (impl == null) {
    addProblem(component,DevKitBundle.message("inspections.registration.problems.missing.implementation.class"),ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
  }
 else {
    final PsiClass implClass=myPsiManager.findClass(impl.getTrimmedText(),myScope);
    if (implClass == null) {
      addProblem(impl,DevKitBundle.message("inspections.registration.problems.cannot.resolve.class",DevKitBundle.message("class.implementation")),ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
    }
 else {
      final PsiClass compomentClass=myPsiManager.findClass(type.myClassName,myScope);
      if (compomentClass != null && !implClass.isInheritor(compomentClass,true)) {
        addProblem(impl,DevKitBundle.message("inspections.registration.problems.component.should.implement",type.myClassName),ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
      }
      if (isAbstract(implClass)) {
        addProblem(impl,DevKitBundle.message("inspections.registration.problems.abstract"),ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
      }
    }
    if (intf != null) {
      final PsiClass intfClass=myPsiManager.findClass(intf.getTrimmedText(),myScope);
      if (intfClass == null) {
        addProblem(intf,DevKitBundle.message("inspections.registration.problems.cannot.resolve.class",DevKitBundle.message("class.interface")),ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
      }
 else       if (implClass != null) {
        if (myInterfaceClasses.contains(intfClass)) {
          addProblem(intf,DevKitBundle.message("inspections.registration.problems.component.duplicate.interface",intfClass.getQualifiedName()),ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
        }
        if (intfClass != implClass && !implClass.isInheritor(intfClass,true)) {
          addProblem(impl,DevKitBundle.message("inspections.registration.problems.component.incompatible.interface",intfClass.getQualifiedName()),ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
        }
        myInterfaceClasses.add(intfClass);
      }
    }
  }
  return true;
}
