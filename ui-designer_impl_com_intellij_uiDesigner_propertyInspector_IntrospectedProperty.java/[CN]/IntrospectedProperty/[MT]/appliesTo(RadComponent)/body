{
  @NonNls String name=getName();
  if (name.equals("preferredSize") || name.equals("minimumSize") || name.equals("maximumSize")) {
    final RadContainer parent=component.getParent();
    return parent != null && !(parent.getLayoutManager() instanceof RadGridLayoutManager);
  }
  final PsiManager psiManager=PsiManager.getInstance(component.getProject());
  final GlobalSearchScope scope=component.getModule().getModuleWithDependenciesAndLibrariesScope(true);
  PsiClass componentClass=psiManager.findClass(component.getComponentClassName(),scope);
  if (componentClass == null)   return true;
  final PsiMethod[] psiMethods=componentClass.findMethodsByName(myReadMethod.getName(),true);
  for (  PsiMethod method : psiMethods) {
    if (!method.getModifierList().hasModifierProperty(PsiModifier.STATIC) && method.getParameterList().getParametersCount() == 0) {
      return true;
    }
  }
  return false;
}
