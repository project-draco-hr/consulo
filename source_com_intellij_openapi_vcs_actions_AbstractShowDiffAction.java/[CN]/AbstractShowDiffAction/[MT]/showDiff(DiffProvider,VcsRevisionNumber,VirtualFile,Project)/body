{
  try {
    final VcsFileContent fileRevision=diffProvider.createFileContent(revisionNumber,selectedFile);
    if (fileRevision != null) {
      fileRevision.loadContent();
      if (selectedFile.getFileType().isBinary()) {
        if (Arrays.equals(selectedFile.contentsToByteArray(),fileRevision.getContent())) {
          Messages.showInfoMessage(VcsBundle.message("message.text.binary.versions.are.identical"),VcsBundle.message("message.title.diff"));
        }
 else {
          Messages.showInfoMessage(VcsBundle.message("message.text.binary.versions.are.different"),VcsBundle.message("message.title.diff"));
        }
        return;
      }
      final SimpleDiffRequest request=new SimpleDiffRequest(project,selectedFile.getPresentableUrl());
      final SimpleContent content1=new SimpleContent(new String(fileRevision.getContent(),selectedFile.getCharset().name()),selectedFile.getFileType());
      final DocumentContent content2=new DocumentContent(project,FileDocumentManager.getInstance().getDocument(selectedFile));
      final VcsRevisionNumber currentRevision=diffProvider.getCurrentRevision(selectedFile);
      if (revisionNumber.compareTo(currentRevision) > 0) {
        request.setContents(content2,content1);
        request.setContentTitles(VcsBundle.message("diff.title.local"),revisionNumber.asString());
      }
 else {
        request.setContents(content1,content2);
        request.setContentTitles(revisionNumber.asString(),VcsBundle.message("diff.title.local"));
      }
      DiffManager.getInstance().getDiffTool().show(request);
    }
  }
 catch (  ProcessCanceledException e) {
  }
catch (  VcsException e) {
    AbstractVcsHelper.getInstance(project).showError(e,VcsBundle.message("message.title.diff"));
  }
catch (  IOException e) {
    AbstractVcsHelper.getInstance(project).showError(new VcsException(e),VcsBundle.message("message.title.diff"));
  }
}
