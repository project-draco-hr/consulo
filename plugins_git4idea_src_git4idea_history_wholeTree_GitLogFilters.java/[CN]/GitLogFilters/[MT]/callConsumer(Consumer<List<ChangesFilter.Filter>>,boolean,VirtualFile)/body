{
  final List<Set<ChangesFilter.Filter>> filters=new ArrayList<Set<ChangesFilter.Filter>>();
  if (takeComment && myCommentFilter != null) {
    filters.add(Collections.<ChangesFilter.Filter,ChangesFilter.Filter>singletonMap(myCommentFilter,myCommentFilter).keySet());
  }
  if (myCommitterFilters != null) {
    filters.add(myCommitterFilters);
  }
  if (myStructureFilters != null) {
    final ChangesFilter.Filter filter=myStructureFilters.get(root);
    if (filter != null) {
      filters.add(Collections.singleton(filter));
    }
  }
  if (myDateFilters != null) {
    filters.add(Collections.<ChangesFilter.Filter>singleton(new ChangesFilter.And(myDateFilters.toArray(new ChangesFilter.Filter[myDateFilters.size()]))));
  }
  final Set<List<ChangesFilter.Filter>> cartesian=Sets.cartesianProduct(filters);
  if (cartesian.isEmpty()) {
    consumer.consume(Collections.<ChangesFilter.Filter>emptyList());
  }
 else {
    for (    List<ChangesFilter.Filter> list : cartesian) {
      consumer.consume(list);
    }
  }
}
