{
  String tagName=tag.getName();
  PsiDocTagValue value=tag.getValueElement();
  if (value == null)   return;
  final JavadocTagInfo info=manager.getTagInfo(tagName);
  if (info != null && !info.isValidInContext(context))   return;
  String message=info == null || !info.isInline() ? null : info.checkTagValue(value);
  if (message != null) {
    problems.add(createDescriptor(value,message,inspectionManager,onTheFly));
  }
  final PsiReference reference=value.getReference();
  if (reference != null) {
    PsiElement element=reference.resolve();
    if (element == null) {
      final int textOffset=value.getTextOffset();
      if (textOffset != value.getTextRange().getEndOffset()) {
        final PsiDocTagValue valueElement=tag.getValueElement();
        if (valueElement != null) {
          @NonNls String params="<code>" + value.getContainingFile().getViewProvider().getContents().subSequence(textOffset,value.getTextRange().getEndOffset()) + "</code>";
          problems.add(createDescriptor(valueElement,InspectionsBundle.message("inspection.javadoc.problem.cannot.resolve",params),inspectionManager,onTheFly));
        }
      }
    }
  }
}
