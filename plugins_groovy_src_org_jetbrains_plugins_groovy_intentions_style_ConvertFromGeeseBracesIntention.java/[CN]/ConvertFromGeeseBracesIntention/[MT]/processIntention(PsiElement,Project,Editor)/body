{
  IElementType elementType=element.getNode().getElementType();
  if (TokenSets.WHITE_SPACES_SET.contains(elementType)) {
    element=PsiTreeUtil.prevLeaf(element);
  }
  LOG.assertTrue(GeeseUtil.isClosureRBrace(element));
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiFile file=element.getContainingFile();
  Document document=PsiDocumentManager.getInstance(project).getDocument(file);
  PsiElement first=null;
  PsiElement last=null;
  for (PsiElement cur=element; GeeseUtil.isClosureRBrace(cur); cur=getNext(cur)) {
    last=cur;
  }
  for (PsiElement cur=element; GeeseUtil.isClosureRBrace(cur); cur=getPrev(cur)) {
    first=cur;
  }
  LOG.assertTrue(first != null);
  LOG.assertTrue(last != null);
  RangeMarker rangeMarker=document.createRangeMarker(first.getTextRange().getStartOffset(),last.getTextRange().getEndOffset());
  String text=document.getText();
  for (PsiElement cur=getPrev(last); GeeseUtil.isClosureRBrace(cur); cur=getPrev(cur)) {
    int offset=last.getTextRange().getStartOffset();
    if (!StringUtil.contains(text,cur.getTextRange().getEndOffset(),offset,'\n')) {
      document.insertString(offset,"\n");
    }
    last=cur;
  }
  CodeStyleManager.getInstance(project).reformatText(file,rangeMarker.getStartOffset(),rangeMarker.getEndOffset());
}
