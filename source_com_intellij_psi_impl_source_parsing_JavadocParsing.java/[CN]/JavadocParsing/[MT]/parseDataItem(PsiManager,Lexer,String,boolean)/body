{
  if (lexer.getTokenType() == JavaDocTokenType.DOC_INLINE_TAG_START) {
    LeafElement justABrace=Factory.createLeafElement(JavaDocTokenType.DOC_COMMENT_DATA,lexer.getBufferSequence(),lexer.getTokenStart(),lexer.getTokenEnd(),myContext.getCharTable());
    CompositeElement tag=Factory.createCompositeElement(DOC_INLINE_TAG);
    final LeafElement leafElement=Factory.createLeafElement(JavaDocTokenType.DOC_INLINE_TAG_START,lexer.getBufferSequence(),lexer.getTokenStart(),lexer.getTokenEnd(),myContext.getCharTable());
    TreeUtil.addChildren(tag,leafElement);
    lexer.advance();
    if (myBraceScope > 0) {
      myBraceScope++;
      return justABrace;
    }
    if (lexer.getTokenType() != JavaDocTokenType.DOC_TAG_NAME && lexer.getTokenType() != JavaDocTokenType.DOC_COMMENT_BAD_CHARACTER) {
      return justABrace;
    }
    myBraceScope++;
    String inlineTagName="";
    while (true) {
      IElementType tokenType=lexer.getTokenType();
      if (tokenType == JavaDocTokenType.DOC_TAG_NAME) {
        inlineTagName=lexer.getBufferSequence().subSequence(lexer.getTokenStart(),lexer.getTokenEnd()).toString();
      }
      if (tokenType == null || tokenType == JavaDocTokenType.DOC_COMMENT_END)       break;
      TreeElement element=parseDataItem(manager,lexer,inlineTagName,true);
      TreeUtil.addChildren(tag,element);
      if (tokenType == JavaDocTokenType.DOC_INLINE_TAG_END) {
        if (myBraceScope > 0)         myBraceScope--;
        if (myBraceScope == 0)         break;
      }
    }
    return tag;
  }
 else   if (TAG_VALUE.contains(lexer.getTokenType())) {
    if (SEE_TAG.equals(tagName) && !isInlineItem) {
      return parseSeeTagValue(lexer);
    }
 else     if (LINK_TAG.equals(tagName) && isInlineItem) {
      return parseSeeTagValue(lexer);
    }
 else {
      if (JavaPsiFacade.getInstance(manager.getProject()).getEffectiveLanguageLevel().compareTo(LanguageLevel.JDK_1_4) >= 0 && LINKPLAIN_TAG.equals(tagName) && isInlineItem) {
        return parseSeeTagValue(lexer);
      }
 else       if (!isInlineItem && (THROWS_TAG.equals(tagName) || EXCEPTION_TAG.equals(tagName))) {
        final LeafElement element=parseReferenceOrType(lexer.getBufferSequence(),lexer.getTokenStart(),lexer.getTokenEnd(),false);
        lexer.advance();
        final CompositeElement tagValue=Factory.createCompositeElement(DOC_TAG_VALUE_TOKEN);
        TreeUtil.addChildren(tagValue,element);
        return tagValue;
      }
 else       if (!isInlineItem && tagName != null && tagName.equals(PARAM_TAG)) {
        return parseParamTagValue(lexer);
      }
 else {
        if (JavaPsiFacade.getInstance(manager.getProject()).getEffectiveLanguageLevel().compareTo(LanguageLevel.JDK_1_5) >= 0 && VALUE_TAG.equals(tagName) && isInlineItem) {
          return parseSeeTagValue(lexer);
        }
 else {
          return parseSimpleTagValue(lexer);
        }
      }
    }
  }
 else {
    TreeElement token=createTokenElement(lexer);
    lexer.advance();
    return token;
  }
}
