{
  if (lexer.getTokenType() == JavaDocTokenType.DOC_INLINE_TAG_START) {
    LeafElement justABrace=Factory.createLeafElement(JavaDocTokenType.DOC_COMMENT_DATA,lexer.getBuffer(),lexer.getTokenStart(),lexer.getTokenEnd(),lexer.getState(),myContext.getCharTable());
    justABrace.setState(lexer.getState());
    CompositeElement tag=Factory.createCompositeElement(DOC_INLINE_TAG);
    final LeafElement leafElement=Factory.createLeafElement(JavaDocTokenType.DOC_INLINE_TAG_START,lexer.getBuffer(),lexer.getTokenStart(),lexer.getTokenEnd(),lexer.getState(),myContext.getCharTable());
    leafElement.setState(lexer.getState());
    TreeUtil.addChildren(tag,leafElement);
    lexer.advance();
    if (myBraceScope > 0) {
      myBraceScope++;
      return justABrace;
    }
    if (lexer.getTokenType() != JavaDocTokenType.DOC_TAG_NAME && lexer.getTokenType() != JavaDocTokenType.DOC_COMMENT_BAD_CHARACTER) {
      return justABrace;
    }
    myBraceScope++;
    String inlineTagName="";
    while (true) {
      IElementType tokenType=lexer.getTokenType();
      if (tokenType == JavaDocTokenType.DOC_TAG_NAME) {
        inlineTagName=new String(lexer.getBuffer(),lexer.getTokenStart(),lexer.getTokenEnd() - lexer.getTokenStart());
      }
      if (tokenType == null || tokenType == JavaDocTokenType.DOC_COMMENT_END)       break;
      TreeElement element=parseDataItem(manager,lexer,inlineTagName,true);
      TreeUtil.addChildren(tag,element);
      if (tokenType == JavaDocTokenType.DOC_INLINE_TAG_END) {
        if (myBraceScope > 0)         myBraceScope--;
        if (myBraceScope == 0)         break;
      }
    }
    return tag;
  }
 else   if (TAG_VALUE.isInSet(lexer.getTokenType())) {
    if ("@see".equals(tagName) && !isInlineItem) {
      return parseSeeTagValue(lexer);
    }
 else     if ("@link".equals(tagName) && isInlineItem) {
      return parseSeeTagValue(lexer);
    }
 else     if (manager.getEffectiveLanguageLevel().compareTo(LanguageLevel.JDK_1_4) >= 0 && "@linkplain".equals(tagName) && isInlineItem) {
      return parseSeeTagValue(lexer);
    }
 else     if (!isInlineItem && ("@throws".equals(tagName) || "@exception".equals(tagName))) {
      final LeafElement element=parseReferenceOrType(lexer.getBuffer(),lexer.getTokenStart(),lexer.getTokenEnd(),false,lexer.getState());
      element.setState(lexer.getState());
      lexer.advance();
      final CompositeElement tagValue=Factory.createCompositeElement(DOC_TAG_VALUE_TOKEN);
      TreeUtil.addChildren(tagValue,element);
      return tagValue;
    }
 else     if (!isInlineItem && tagName != null && tagName.equals("@param")) {
      return parseParamTagValue(lexer);
    }
 else {
      return parseSimpleTagValue(lexer);
    }
  }
 else {
    TreeElement token=createTokenElement(lexer);
    lexer.advance();
    return token;
  }
}
