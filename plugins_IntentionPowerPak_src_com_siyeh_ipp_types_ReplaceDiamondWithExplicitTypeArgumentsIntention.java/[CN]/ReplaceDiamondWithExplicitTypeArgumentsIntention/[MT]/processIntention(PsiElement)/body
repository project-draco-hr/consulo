{
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiJavaCodeReferenceElement)) {
    return;
  }
  final PsiJavaCodeReferenceElement javaCodeReferenceElement=(PsiJavaCodeReferenceElement)parent;
  final PsiReferenceParameterList referenceParameterList=(PsiReferenceParameterList)element;
  final StringBuilder text=new StringBuilder();
  text.append(javaCodeReferenceElement.getQualifiedName());
  text.append('<');
  final PsiType[] typeArguments=referenceParameterList.getTypeArguments();
  boolean first=true;
  for (  PsiType typeArgument : typeArguments) {
    if (first) {
      first=false;
    }
 else {
      text.append(',');
    }
    text.append(typeArgument.getCanonicalText());
  }
  text.append('>');
  final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(element.getProject());
  final PsiJavaCodeReferenceElement newReference=elementFactory.createReferenceFromText(text.toString(),element);
  javaCodeReferenceElement.replace(newReference);
}
