{
  final PsiParameter parameter=PsiTreeUtil.getParentOfType(element,PsiParameter.class);
  if (parameter != null) {
    if (!parameter.getLanguage().isKindOf(StdLanguages.JAVA))     return false;
    final PsiElement declarationScope=parameter.getDeclarationScope();
    if (declarationScope instanceof PsiMethod) {
      final PsiMethod method=(PsiMethod)declarationScope;
      final PsiClass containingClass=method.getContainingClass();
      if (containingClass != null && !containingClass.isInterface()) {
        return containingClass.findMethodBySignature(generateMethodPrototype(method,parameter),false) == null;
      }
    }
  }
  return false;
}
