{
  final PsiExpression[] expressions=foundExpr.toArray(new PsiExpression[foundExpr.size() + 1]);
  expressions[foundExpr.size()]=originalExpression;
  final LocalQuickFix introduceConstFix=new LocalQuickFix(){
    public String getName(){
      return IntroduceConstantHandler.REFACTORING_NAME;
    }
    public void applyFix(    final Project project,    ProblemDescriptor descriptor){
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          final IntroduceConstantHandler handler=new IntroduceConstantHandler(){
            protected OccurenceManager createOccurenceManager(            PsiExpression selectedExpr,            PsiClass parentClass){
              final OccurenceFilter filter=new OccurenceFilter(){
                public boolean isOK(                PsiExpression occurence){
                  return true;
                }
              }
;
              return new BaseOccurenceManager(filter){
                protected PsiExpression[] defaultOccurences(){
                  return expressions;
                }
                protected PsiExpression[] findOccurences(){
                  return expressions;
                }
              }
;
            }
          }
;
          handler.invoke(project,expressions);
        }
      }
);
    }
    public String getFamilyName(){
      return getName();
    }
  }
;
  return introduceConstFix;
}
