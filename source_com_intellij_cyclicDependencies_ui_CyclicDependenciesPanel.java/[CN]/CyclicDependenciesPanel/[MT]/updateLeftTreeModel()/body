{
  final Set<PsiPackage> psiPackages=myDependencies.keySet();
  final Set<PsiFile> psiFiles=new HashSet<PsiFile>();
  for (Iterator<PsiPackage> iterator=psiPackages.iterator(); iterator.hasNext(); ) {
    PsiPackage psiPackage=iterator.next();
    psiFiles.addAll(getPackageFiles(psiPackage));
  }
  boolean showFiles=mySettings.UI_SHOW_FILES;
  mySettings.UI_FLATTEN_PACKAGES=true;
  mySettings.UI_SHOW_FILES=false;
  myLeftTreeExpantionMonitor.freeze();
  myLeftTree.setModel(TreeModelBuilder.createTreeModel(myProject,false,psiFiles,new TreeModelBuilder.Marker(){
    public boolean isMarked(    PsiFile file){
      return false;
    }
  }
,mySettings));
  myLeftTreeExpantionMonitor.restore();
  expandFirstLevel(myLeftTree);
  mySettings.UI_SHOW_FILES=showFiles;
  mySettings.UI_FLATTEN_PACKAGES=false;
}
