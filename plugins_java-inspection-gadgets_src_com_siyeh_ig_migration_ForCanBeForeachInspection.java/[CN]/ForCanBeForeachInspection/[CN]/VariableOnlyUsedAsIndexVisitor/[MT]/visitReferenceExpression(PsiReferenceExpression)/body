{
  if (!indexVariableUsedOnlyAsIndex) {
    return;
  }
  super.visitReferenceExpression(reference);
  final PsiElement element=reference.resolve();
  if (!indexVariable.equals(element)) {
    return;
  }
  final PsiElement parent=reference.getParent();
  if (!(parent instanceof PsiArrayAccessExpression)) {
    indexVariableUsedOnlyAsIndex=false;
    return;
  }
  final PsiArrayAccessExpression arrayAccessExpression=(PsiArrayAccessExpression)parent;
  final PsiExpression arrayExpression=arrayAccessExpression.getArrayExpression();
  if (!(arrayExpression instanceof PsiReferenceExpression)) {
    indexVariableUsedOnlyAsIndex=false;
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)arrayExpression;
  final PsiExpression qualifier=referenceExpression.getQualifierExpression();
  if (qualifier != null && !(qualifier instanceof PsiThisExpression) && !(qualifier instanceof PsiSuperExpression)) {
    indexVariableUsedOnlyAsIndex=false;
    return;
  }
  final PsiElement target=referenceExpression.resolve();
  if (!arrayVariable.equals(target)) {
    indexVariableUsedOnlyAsIndex=false;
    return;
  }
  final PsiElement arrayExpressionContext=arrayAccessExpression.getParent();
  if (arrayExpressionContext instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignment=(PsiAssignmentExpression)arrayExpressionContext;
    final PsiExpression lhs=assignment.getLExpression();
    if (lhs.equals(arrayAccessExpression)) {
      indexVariableUsedOnlyAsIndex=false;
    }
  }
}
