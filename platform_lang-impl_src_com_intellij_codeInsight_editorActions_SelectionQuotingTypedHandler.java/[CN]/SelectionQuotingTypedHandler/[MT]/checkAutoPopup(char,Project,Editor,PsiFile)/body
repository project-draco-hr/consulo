{
  myReplacedTextRange=null;
  if (CodeInsightSettings.getInstance().SURROUND_SELECTION_ON_QUOTE_TYPED && editor.getSelectionModel().hasSelection() && isDelimiter(c)) {
    String selectedText=editor.getSelectionModel().getSelectedText();
    if (selectedText.length() <= 1) {
      return super.checkAutoPopup(c,project,editor,psiFile);
    }
    if (isDelimiter(selectedText.charAt(0)) && selectedText.charAt(selectedText.length() - 1) == getMatchingDelimiter(selectedText.charAt(0))) {
      selectedText=selectedText.substring(1,selectedText.length() - 1);
    }
    char c2=getMatchingDelimiter(c);
    int caretOffset=editor.getSelectionModel().getSelectionStart();
    String newText=String.valueOf(c) + selectedText + c2;
    EditorModificationUtil.insertStringAtCaret(editor,newText);
    myReplacedTextRange=new TextRange(caretOffset,caretOffset + newText.length());
    return Result.STOP;
  }
  return super.checkAutoPopup(c,project,editor,psiFile);
}
