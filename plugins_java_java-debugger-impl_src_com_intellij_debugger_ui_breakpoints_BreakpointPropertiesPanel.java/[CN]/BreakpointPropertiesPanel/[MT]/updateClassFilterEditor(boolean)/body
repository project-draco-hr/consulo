{
  List<String> filters=new ArrayList<String>();
  for (  com.intellij.ui.classFilter.ClassFilter classFilter : myClassFilters) {
    if (classFilter.isEnabled()) {
      filters.add(classFilter.getPattern());
    }
  }
  List<String> excludeFilters=new ArrayList<String>();
  for (  com.intellij.ui.classFilter.ClassFilter classFilter : myClassExclusionFilters) {
    if (classFilter.isEnabled()) {
      excludeFilters.add("-" + classFilter.getPattern());
    }
  }
  if (updateText) {
    String editorText=StringUtil.join(filters," ");
    if (!filters.isEmpty()) {
      editorText+=" ";
    }
    editorText+=StringUtil.join(excludeFilters," ");
    myClassFiltersField.setText(editorText);
  }
  int width=(int)Math.sqrt(myClassExclusionFilters.length + myClassFilters.length) + 1;
  String tipText=concatWithEx(filters," ",width,"\n");
  if (!filters.isEmpty()) {
    tipText+="\n";
  }
  tipText+=concatWithEx(excludeFilters," ",width,"\n");
  myClassFiltersField.getTextField().setToolTipText(tipText);
}
