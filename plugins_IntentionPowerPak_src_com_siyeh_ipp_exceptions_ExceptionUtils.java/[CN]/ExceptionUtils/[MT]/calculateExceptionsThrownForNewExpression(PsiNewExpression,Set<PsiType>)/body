{
  final PsiExpressionList argumentList=newExpression.getArgumentList();
  if (argumentList != null) {
    final PsiExpression[] args=argumentList.getExpressions();
    for (    PsiExpression arg : args) {
      calculateExceptionsThrown(arg,exceptionTypes);
    }
  }
  final PsiExpression[] arrayDims=newExpression.getArrayDimensions();
  for (  PsiExpression arrayDim : arrayDims) {
    calculateExceptionsThrown(arrayDim,exceptionTypes);
  }
  final PsiExpression qualifier=newExpression.getQualifier();
  calculateExceptionsThrown(qualifier,exceptionTypes);
  final PsiArrayInitializerExpression arrayInitializer=newExpression.getArrayInitializer();
  calculateExceptionsThrown(arrayInitializer,exceptionTypes);
  final PsiMethod method=newExpression.resolveMethod();
  if (method != null) {
    final PsiReferenceList throwsList=method.getThrowsList();
    final PsiJavaCodeReferenceElement[] list=throwsList.getReferenceElements();
    for (    final PsiJavaCodeReferenceElement referenceElement : list) {
      final PsiClass exceptionClass=(PsiClass)referenceElement.resolve();
      if (exceptionClass != null) {
        final PsiManager psiManager=exceptionClass.getManager();
        final PsiElementFactory factory=JavaPsiFacade.getInstance(psiManager.getProject()).getElementFactory();
        final PsiClassType exceptionType=factory.createType(exceptionClass);
        exceptionTypes.add(exceptionType);
      }
    }
  }
}
