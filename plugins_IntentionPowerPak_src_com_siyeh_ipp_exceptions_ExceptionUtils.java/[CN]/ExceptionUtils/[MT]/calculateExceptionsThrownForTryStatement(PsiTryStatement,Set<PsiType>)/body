{
  final Set<PsiType> exceptionThrown=new HashSet<PsiType>(10);
  final PsiCodeBlock tryBlock=tryStatement.getTryBlock();
  calculateExceptionsThrownForCodeBlock(tryBlock,exceptionThrown);
  final Set<PsiType> exceptionHandled=getExceptionTypesHandled(tryStatement);
  for (  PsiType thrownType : exceptionThrown) {
    boolean found=false;
    for (    PsiType handledType : exceptionHandled) {
      if (handledType.isAssignableFrom(thrownType)) {
        found=true;
        break;
      }
    }
    if (!found) {
      exceptionTypes.add(thrownType);
    }
  }
  final PsiCodeBlock finallyBlock=tryStatement.getFinallyBlock();
  if (finallyBlock != null) {
    calculateExceptionsThrownForCodeBlock(finallyBlock,exceptionTypes);
  }
  final PsiCodeBlock[] catchBlocks=tryStatement.getCatchBlocks();
  for (  PsiCodeBlock catchBlock : catchBlocks) {
    calculateExceptionsThrownForCodeBlock(catchBlock,exceptionTypes);
  }
}
