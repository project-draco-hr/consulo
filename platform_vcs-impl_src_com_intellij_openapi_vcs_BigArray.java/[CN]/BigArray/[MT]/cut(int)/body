{
  if (idxFromIncluded >= getSize())   return ReadonlyList.EMPTY;
  final int itemNumber=idxFromIncluded >> mySize2Power;
  final int insideIdx=idxFromIncluded ^ (itemNumber << mySize2Power);
  final ArrayList<T> start=myList.get(itemNumber);
  final NotRegularReadonlyList<T> result=new NotRegularReadonlyList<T>(new ArrayList<ArrayList<T>>(myList.subList(itemNumber + 1,myList.size())),mySize2Power,start.subList(insideIdx,start.size()));
  myList.set(itemNumber,new ArrayList<T>(start.subList(0,insideIdx)));
  for (int i=myList.size() - 1; i > itemNumber; --i) {
    myList.remove(i);
  }
  mySize=myList.isEmpty() ? 0 : (((myList.size() - 1) * myPack + myList.get(myList.size() - 1).size()));
  return result;
}
