{
  if (targets.length == 0)   return;
  if (targets.length == 1) {
    targets[0].navigate(true);
  }
 else {
    final JList list=new JBList(targets);
    list.setCellRenderer(listRenderer);
    final PopupChooserBuilder builder=new PopupChooserBuilder(list);
    if (listRenderer instanceof PsiElementListCellRenderer) {
      ((PsiElementListCellRenderer)listRenderer).installSpeedSearch(builder);
    }
    builder.setTitle(title).setMovable(true).setItemChoosenCallback(new Runnable(){
      public void run(){
        int[] ids=list.getSelectedIndices();
        if (ids == null || ids.length == 0)         return;
        Object[] selectedElements=list.getSelectedValues();
        for (        Object element : selectedElements) {
          PsiElement selected=(PsiElement)element;
          LOG.assertTrue(selected.isValid());
          ((NavigatablePsiElement)selected).navigate(true);
        }
      }
    }
).createPopup().show(new RelativePoint(e));
  }
}
