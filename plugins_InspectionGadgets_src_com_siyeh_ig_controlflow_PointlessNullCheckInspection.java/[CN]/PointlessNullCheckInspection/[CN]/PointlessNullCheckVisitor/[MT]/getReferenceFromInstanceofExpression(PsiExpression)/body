{
  if (expression instanceof PsiParenthesizedExpression) {
    final PsiParenthesizedExpression parenthesizedExpression=(PsiParenthesizedExpression)expression;
    return getReferenceFromInstanceofExpression(parenthesizedExpression.getExpression());
  }
 else   if (expression instanceof PsiInstanceOfExpression) {
    final PsiInstanceOfExpression instanceOfExpression=(PsiInstanceOfExpression)expression;
    final PsiExpression operand=ParenthesesUtils.stripParentheses(instanceOfExpression.getOperand());
    if (!(operand instanceof PsiReferenceExpression)) {
      return null;
    }
    return (PsiReferenceExpression)operand;
  }
 else   if (expression instanceof PsiPolyadicExpression) {
    final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)expression;
    final IElementType tokenType=polyadicExpression.getOperationTokenType();
    if (JavaTokenType.OROR != tokenType) {
      return null;
    }
    final PsiExpression[] operands=polyadicExpression.getOperands();
    final PsiReferenceExpression referenceExpression=getReferenceFromInstanceofExpression(operands[0]);
    if (referenceExpression == null) {
      return null;
    }
    for (int i=1, operandsLength=operands.length; i < operandsLength; i++) {
      if (!referencesEqual(referenceExpression,getReferenceFromInstanceofExpression(operands[i]))) {
        return null;
      }
    }
    return referenceExpression;
  }
 else {
    return null;
  }
}
