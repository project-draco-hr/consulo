{
  final boolean pressed=getModel().isPressed();
  final boolean stateChanged=myWasPressed != pressed;
  myWasPressed=pressed;
  if (myBufferedImage == null || stateChanged) {
    final Dimension size=getSize();
    final Insets insets=FRAMED_STYLE ? getInsets() : new Insets(0,0,0,0);
    myBufferedImage=UIUtil.createImage(size.width,size.height,BufferedImage.TYPE_INT_ARGB);
    final Graphics2D g2=(Graphics2D)myBufferedImage.getGraphics().create();
    final Runtime rt=Runtime.getRuntime();
    final long maxMem=rt.maxMemory();
    final long allocatedMem=rt.totalMemory();
    final long unusedMem=rt.freeMemory();
    final long usedMem=allocatedMem - unusedMem;
    final int totalBarLength=size.width - insets.left - insets.right;
    final int usedBarLength=(int)(totalBarLength * usedMem / maxMem);
    final int unusedBarLength=(int)(totalBarLength * unusedMem / maxMem);
    final int barHeight=FRAMED_STYLE ? HEIGHT : size.height;
    final int yOffset=(size.height - barHeight) / 2;
    final int xOffset=insets.left;
    if (!UIUtil.isUnderAquaLookAndFeel()) {
      g2.setColor(UIUtil.getControlColor());
    }
 else {
      g2.setPaint(new GradientPaint(0,0,Gray._190,0,barHeight,Gray._230));
    }
    g2.fillRect(xOffset,yOffset,totalBarLength,barHeight);
    setGradient(g2,pressed,barHeight,USED_COLOR_1,USED_COLOR_2);
    g2.fillRect(xOffset,yOffset,usedBarLength,barHeight);
    setGradient(g2,pressed,barHeight,UNUSED_COLOR_1,UNUSED_COLOR_2);
    g2.fillRect(xOffset + usedBarLength,yOffset,unusedBarLength,barHeight);
    if (!UIUtil.isUnderDarcula()) {
      g2.setColor(UNUSED_COLOR_3);
      g2.drawLine(xOffset + usedBarLength + unusedBarLength,yOffset,xOffset + usedBarLength + unusedBarLength,barHeight);
    }
    if (FRAMED_STYLE && !UIUtil.isUnderDarcula()) {
      g2.setColor(USED_COLOR_2);
      g2.drawRect(xOffset,yOffset,totalBarLength,barHeight - 1);
    }
    g2.setFont(getFont());
    final long used=usedMem / MEGABYTE;
    final long total=maxMem / MEGABYTE;
    final String info=UIBundle.message("memory.usage.panel.message.text",used,total);
    final FontMetrics fontMetrics=g.getFontMetrics();
    final int infoWidth=fontMetrics.charsWidth(info.toCharArray(),0,info.length());
    final int infoHeight=fontMetrics.getHeight() - fontMetrics.getDescent();
    UIUtil.applyRenderingHints(g2);
    g2.setColor(UIUtil.getLabelForeground());
    g2.drawString(info,xOffset + (totalBarLength - infoWidth) / 2,yOffset + (barHeight + infoHeight) / 2 - 1);
    g2.dispose();
  }
  g.drawImage(myBufferedImage,0,0,null);
}
