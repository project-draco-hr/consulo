{
  final Dimension size=getSize();
  final Runtime runtime=Runtime.getRuntime();
  final long maxMemory=runtime.maxMemory();
  final long freeMemory=maxMemory - runtime.totalMemory() + runtime.freeMemory();
  final Insets insets=getInsets();
  final int totalBarLength=size.width - insets.left - insets.right- (SystemInfo.isMac ? 0 : 0);
  final int usedBarLength=totalBarLength - (int)(totalBarLength * freeMemory / maxMemory);
  final int barHeight=HEIGHT;
  final Graphics2D g2=(Graphics2D)g;
  final int yOffset=(size.height - barHeight) / 2;
  final int xOffset=insets.left + (SystemInfo.isMac ? 0 : 0);
  final boolean pressed=getModel().isPressed();
  g2.setPaint(new GradientPaint(0,0,new Color(190,190,190),0,size.height - 1,new Color(230,230,230)));
  g2.fillRect(xOffset,yOffset,totalBarLength,barHeight);
  if (pressed) {
    g2.setPaint(new GradientPaint(1,1,new Color(101,111,135),0,size.height - 2,new Color(175,185,202)));
    g2.fillRect(xOffset + 1,yOffset,usedBarLength,barHeight);
  }
 else {
    g2.setPaint(new GradientPaint(1,1,new Color(175,185,202),0,size.height - 2,new Color(126,138,168)));
    g2.fillRect(xOffset + 1,yOffset,usedBarLength,barHeight);
    g2.setColor(new Color(194,197,203));
    g2.drawLine(xOffset + 1,yOffset + 1,xOffset + usedBarLength,yOffset + 1);
  }
  g2.setColor(new Color(110,110,110));
  g2.drawRect(xOffset,yOffset,totalBarLength,barHeight - 1);
  g.setFont(getFont());
  final long used=(maxMemory - freeMemory) / MEGABYTE;
  final long total=maxMemory / MEGABYTE;
  final String info=UIBundle.message("memory.usage.panel.message.text",Long.toString(used),Long.toString(total));
  final FontMetrics fontMetrics=g.getFontMetrics();
  final int infoWidth=fontMetrics.charsWidth(info.toCharArray(),0,info.length());
  final int infoHeight=fontMetrics.getHeight() - fontMetrics.getDescent();
  UIUtil.applyRenderingHints(g);
  g.setColor(Color.black);
  g.drawString(info,xOffset + (totalBarLength - infoWidth) / 2,yOffset + (barHeight + infoHeight) / 2 - 1);
}
