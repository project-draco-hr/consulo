{
  final SubTree tree=new SubTree(myWorkingCopyDir);
  checkin();
  disableSilentOperation(VcsConfiguration.StandardConfirmation.REMOVE);
  final File wasFile=new File(tree.mySourceDir.getPath());
  final File wasFileS1=new File(tree.myS1File.getPath());
  final File wasFileS2=new File(tree.myS2File.getPath());
  deleteFileInCommand(myProject,tree.mySourceDir);
  myDirtyScopeManager.markEverythingDirty();
  myChangeListManager.ensureUpToDate(false);
  final List<LocallyDeletedChange> deletedFiles=((ChangeListManagerImpl)myChangeListManager).getDeletedFiles();
  Assert.assertNotNull(deletedFiles);
  Assert.assertTrue(deletedFiles.size() == 3);
  final Set<File> files=new HashSet<File>();
  files.add(wasFile);
  files.add(wasFileS1);
  files.add(wasFileS2);
  for (  LocallyDeletedChange file : deletedFiles) {
    files.remove(file.getPath().getIOFile());
  }
  Assert.assertTrue(files.isEmpty());
  rollbackLocallyDeleted(Collections.<FilePath>singletonList(new FilePathImpl(wasFile,true)),Collections.<FilePath>emptyList());
}
