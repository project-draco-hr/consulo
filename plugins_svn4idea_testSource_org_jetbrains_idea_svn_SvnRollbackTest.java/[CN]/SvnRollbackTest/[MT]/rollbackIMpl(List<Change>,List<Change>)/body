{
  final List<VcsException> exceptions=new ArrayList<VcsException>();
  myVcs.createRollbackEnvironment().rollbackChanges(changes,exceptions,RollbackProgressListener.EMPTY);
  if (!exceptions.isEmpty()) {
    throw exceptions.get(0);
  }
  myDirtyScopeManager.markEverythingDirty();
  myChangeListManager.ensureUpToDate(false);
  List<LocalChangeList> lists=myChangeListManager.getChangeLists();
  final HashSet<Change> afterCopy=new HashSet<Change>(allowedAfter);
  for (  LocalChangeList list : lists) {
    final Collection<Change> listChanges=list.getChanges();
    if (!listChanges.isEmpty()) {
      for (      Change change : listChanges) {
        final boolean removed=afterCopy.remove(change);
        Assert.assertTrue(removed);
      }
    }
  }
  Assert.assertTrue(afterCopy.isEmpty());
}
