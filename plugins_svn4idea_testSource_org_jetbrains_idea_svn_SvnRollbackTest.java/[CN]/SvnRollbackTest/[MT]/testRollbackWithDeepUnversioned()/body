{
  final SubTree tree=new SubTree(myWorkingCopyDir);
  checkin();
  final VirtualFile inner=createDirInCommand(tree.mySourceDir,"inner");
  final VirtualFile innerFile=createFileInCommand(inner,"inInner.txt","kdfjsdisdjiuewjfew wefn w");
  disableSilentOperation(VcsConfiguration.StandardConfirmation.ADD);
  final VirtualFile deepUnverioned=createFileInCommand(inner,"deepUnverioned.txt","deepUnverioned");
  final File was=new File(deepUnverioned.getPath());
  checkin();
  verify(runSvn("status"),"? root" + File.separator + "source"+ File.separator+ "inner"+ File.separator+ deepUnverioned.getName());
  renameFileInCommand(myProject,tree.mySourceDir,"newName");
  myDirtyScopeManager.markEverythingDirty();
  myChangeListManager.ensureUpToDate(false);
  final Change change=assertRenamedChange(tree.mySourceDir);
  final Change s1Change=assertMovedChange(tree.myS1File);
  final Change s2Change=assertMovedChange(tree.myS2File);
  assertMovedChange(inner);
  assertMovedChange(innerFile);
  Assert.assertTrue(!FileUtil.filesEqual(new File(deepUnverioned.getPath()),was));
  Assert.assertTrue(!was.exists());
  rollbackIMpl(Arrays.asList(change),Collections.<Change>emptyList());
  Assert.assertTrue(was.exists());
}
