{
  for (int idx=0; idx < elements.length; idx++) {
    PsiElement element=elements[idx];
    if (element instanceof PsiDirectory) {
      PsiPackage aPackage=((PsiDirectory)element).getPackage();
      LOG.assertTrue(aPackage == null);
      if (!RefactoringMessageUtil.checkReadOnlyStatusRecursively(project,element))       return;
    }
 else     if (element instanceof PsiFile) {
      PsiFile aFile=(PsiFile)element;
      if (!aFile.isWritable()) {
        if (!RefactoringMessageUtil.checkReadOnlyStatus(project,aFile))         return;
      }
    }
 else {
      throw new IllegalArgumentException("unexpected element type: " + element);
    }
  }
  final PsiDirectory initialTargetDirectory=getInitialTargetDirectory(initialTargetElement,elements);
  final MoveFilesOrDirectoriesDialog.Callback doRun=new MoveFilesOrDirectoriesDialog.Callback(){
    public void run(    final MoveFilesOrDirectoriesDialog moveDialog){
      final PsiDirectory targetDirectory=moveDialog.getTargetDirectory();
      LOG.assertTrue(targetDirectory != null);
      PsiManager manager=PsiManager.getInstance(project);
      try {
        for (int idx=0; idx < elements.length; idx++) {
          PsiElement psiElement=elements[idx];
          manager.checkMove(psiElement,targetDirectory);
        }
        new MoveFilesOrDirectoriesProcessor(project,elements,targetDirectory,false,false,moveCallback,new Runnable(){
          public void run(){
            moveDialog.close(DialogWrapper.CANCEL_EXIT_CODE);
          }
        }
).run(null);
      }
 catch (      IncorrectOperationException e) {
        String helpId=HelpID.getMoveHelpID(elements[0]);
        RefactoringMessageUtil.showErrorMessage("Error",e.getMessage(),helpId,project);
        return;
      }
    }
  }
;
  final MoveFilesOrDirectoriesDialog moveDialog=new MoveFilesOrDirectoriesDialog(project,doRun);
  boolean searchInComments=RefactoringSettings.getInstance().MOVE_SEARCH_IN_COMMENTS;
  boolean searchInNonJavaFiles=RefactoringSettings.getInstance().MOVE_SEARCH_IN_NONJAVA_FILES;
  moveDialog.setData(elements,initialTargetDirectory,searchInComments,searchInNonJavaFiles,HelpID.getMoveHelpID(elements[0]));
  moveDialog.show();
}
