{
  area.addSelectionListener(new ComponentSelectionListener(){
    @Override public void selectionChanged(    EditableArea area){
      List<RadComponent> selection=area.getSelection();
      if (selection.size() == 1) {
        final RadComponent component=selection.get(0);
        final RadComponent parent=component.getParent();
        if (parent instanceof RadViewComponent && parent.getLayout() instanceof RadViewAnimatorLayout) {
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              try {
                int index=parent.getChildren().indexOf(component);
                Object parentView=((RadViewComponent)parent).getViewInfo().getViewObject();
                Method method=parentView.getClass().getMethod("setDisplayedChild",int.class);
                method.invoke(parentView,index);
                Result result=mySession.render();
                if (!result.isSuccess()) {
                  System.out.println("No re render session: " + result.getErrorMessage() + " : "+ result.getStatus()+ " : "+ result.getData()+ " : "+ result.getException());
                }
 else {
                  RadViewComponent rootComponent=(RadViewComponent)myRootComponent;
                  RootView rootView=(RootView)rootComponent.getNativeComponent();
                  rootView.setImage(mySession.getImage());
                  ModelParser.updateRootComponent(rootComponent,mySession,rootView);
                  myLayeredPane.repaint();
                  DesignerToolWindowManager.getInstance(getProject()).refresh();
                }
              }
 catch (              Throwable e) {
                showError("reRender error: ",e);
              }
            }
          }
,new Condition(){
            @Override public boolean value(            Object o){
              return mySession == null;
            }
          }
);
        }
      }
    }
  }
);
}
