{
  if (mySession == null) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        if (mySession == null) {
          showProgress("Create RenderLib");
        }
      }
    }
,new Condition(){
      @Override public boolean value(      Object o){
        return mySession != null;
      }
    }
);
  }
 else {
    disposeSession();
  }
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    @Override public void run(){
      try {
        myProfileLastVersion=myProfileAction.getVersion();
        AndroidPlatform platform=AndroidPlatform.getInstance(myModule);
        if (platform == null) {
          throw new AndroidSdkNotConfiguredException();
        }
        AndroidFacet facet=AndroidFacet.getInstance(myModule);
        ProfileManager manager=myProfileAction.getProfileManager();
        LayoutDeviceConfiguration deviceConfiguration=manager.getSelectedDeviceConfiguration();
        if (deviceConfiguration == null) {
          throw new RenderingException("Device is not specified");
        }
        FolderConfiguration config=new FolderConfiguration();
        config.set(deviceConfiguration.getConfiguration());
        config.setUiModeQualifier(new UiModeQualifier(manager.getSelectedDockMode()));
        config.setNightModeQualifier(new NightModeQualifier(manager.getSelectedNightMode()));
        LocaleData locale=manager.getSelectedLocale();
        if (locale == null) {
          throw new RenderingException("Locale is not specified");
        }
        config.setLanguageQualifier(new LanguageQualifier(locale.getLanguage()));
        config.setRegionQualifier(new RegionQualifier(locale.getRegion()));
        float xdpi=deviceConfiguration.getDevice().getXDpi();
        float ydpi=deviceConfiguration.getDevice().getYDpi();
        Project project=getProject();
        IAndroidTarget target=manager.getSelectedTarget();
        ThemeData theme=manager.getSelectedTheme();
        while (true) {
          mySession=RenderUtil.createRenderSession(project,layoutXmlText,myFile,target,facet,config,xdpi,ydpi,theme,10000);
          if (mySession.getResult().getStatus() != Result.Status.ERROR_TIMEOUT) {
            break;
          }
        }
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            try {
              hideProgress();
              runnable.run();
            }
 catch (            Throwable e) {
              showError("Parse error: ",e);
              myParseTime=false;
            }
          }
        }
);
      }
 catch (      final Throwable e) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            showError("Render session error: ",e);
            myParseTime=false;
          }
        }
);
      }
    }
  }
);
}
