{
  super(editor,project,module,file);
  myXmlFile=(XmlFile)ApplicationManager.getApplication().runReadAction(new Computable<PsiFile>(){
    @Override public PsiFile compute(){
      return PsiManager.getInstance(getProject()).findFile(myFile);
    }
  }
);
  myPSIChangeListener=new ExternalPSIChangeListener(this,myXmlFile,100,new Runnable(){
    @Override public void run(){
      reparseFile();
    }
  }
);
  showProgress("Loading configuration...");
  myProfileAction=new ProfileAction(this,new Runnable(){
    @Override public void run(){
      if (isProjectClosed()) {
        return;
      }
      myPSIChangeListener.setInitialize();
      if (!myPSIChangeListener.isActive()) {
        return;
      }
      myActionPanel.update();
      if (myRootComponent == null || !Comparing.equal(myProfileAction.getProfileManager().getSelectedTarget(),myLastTarget)) {
        myPSIChangeListener.activate();
        myPSIChangeListener.addRequest();
      }
 else       if (myProfileLastVersion != myProfileAction.getVersion() || !ProfileManager.isAndroidSdk(myProfileAction.getCurrentSdk())) {
        myPSIChangeListener.addRequest(new Runnable(){
          @Override public void run(){
            updateRenderer(true);
          }
        }
);
      }
    }
  }
);
  myActionPanel.getPopupGroup().addSeparator();
  myActionPanel.getPopupGroup().add(buildRefactorActionGroup());
  AnAction gotoDeclaration=new AnAction("Go To Declaration"){
    @Override public void update(    AnActionEvent e){
      EditableArea area=e.getData(EditableArea.DATA_KEY);
      e.getPresentation().setEnabled(area != null && area.getSelection().size() == 1);
    }
    @Override public void actionPerformed(    AnActionEvent e){
      EditableArea area=e.getData(EditableArea.DATA_KEY);
      RadViewComponent component=(RadViewComponent)area.getSelection().get(0);
      PsiNavigateUtil.navigate(component.getTag());
    }
  }
;
  myActionPanel.registerAction(gotoDeclaration,IdeActions.ACTION_GOTO_DECLARATION);
  myActionPanel.getPopupGroup().add(gotoDeclaration);
}
