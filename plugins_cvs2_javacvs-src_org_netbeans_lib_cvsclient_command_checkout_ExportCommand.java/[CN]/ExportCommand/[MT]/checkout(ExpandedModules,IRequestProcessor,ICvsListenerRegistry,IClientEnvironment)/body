{
  processExistingModules(expandedModules,clientEnvironment);
  final ICvsFiles cvsFiles;
  try {
    if (getFileObjects().getFileObjects().size() > 0) {
      cvsFiles=scanFileSystem(getFileObjects(),clientEnvironment);
    }
 else {
      cvsFiles=null;
    }
  }
 catch (  IOException ex) {
    throw new IOCommandException(ex);
  }
  final Requests requests;
  requests=new Requests(CommandRequest.EXPORT,clientEnvironment);
  if (getAlternativeCheckoutDirectory() != null) {
    requests.addArgumentRequest("-d");
    requests.addArgumentRequest(getAlternativeCheckoutDirectory());
  }
  requests.addArgumentRequest(!isRecursive(),"-l");
  requests.addArgumentRequest(isUseHeadIfNotFound(),"-f");
  requests.addArgumentRequest(getUpdateByDate(),"-D");
  requests.addArgumentRequest(getUpdateByRevisionOrTag(),"-r");
  requests.addArgumentRequest(getKeywordSubstitution(),"-k");
  if (cvsFiles != null) {
    addFileRequests(cvsFiles,requests,clientEnvironment);
  }
  addModuleArguments(requests);
  requests.addLocalPathDirectoryRequest();
  try {
    return requestProcessor.processRequests(requests,new DummyRequestsProgressHandler());
  }
  finally {
  }
}
