{
  final PsiElement element=location.getPsiElement();
  final PsiFile file=element.getContainingFile();
  if (!(file instanceof GroovyFile)) {
    return null;
  }
  GroovyFile groovyFile=(GroovyFile)file;
  if (groovyFile.isScript()) {
    mySourceElement=element;
    final PsiClass scriptClass=getScriptClass(location.getPsiElement());
    if (scriptClass == null)     return null;
    final RunnerAndConfigurationSettings settings=createConfiguration(scriptClass);
    if (settings != null) {
      final GroovyScriptRunConfiguration configuration=(GroovyScriptRunConfiguration)settings.getConfiguration();
      GroovyScriptType.getScriptType(groovyFile).tuneConfiguration(groovyFile,configuration,location);
      return settings;
    }
  }
  PsiElement currentElement=element;
  PsiMethod method;
  while ((method=findRun(currentElement)) != null) {
    final PsiClass aClass=method.getContainingClass();
    if (isRunnable(aClass)) {
      mySourceElement=method;
      return createConfiguration(aClass);
    }
    currentElement=method.getParent();
  }
  final PsiClass aClass=getRunnableClass(element);
  if (aClass == null)   return null;
  mySourceElement=aClass;
  return createConfiguration(aClass);
}
