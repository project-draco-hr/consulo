{
  String binding=component.getBinding();
  if (binding == null)   return;
  if (!myFieldDescMap.containsKey(binding)) {
    throw new CodeGenerationException(component.getId(),"Cannot bind: field does not exist: " + myClassToBind + "."+ binding);
  }
  final Type fieldType=Type.getType((String)myFieldDescMap.get(binding));
  if (fieldType.getSort() != Type.OBJECT) {
    throw new CodeGenerationException(component.getId(),"Cannot bind: field is of primitive type: " + myClassToBind + "."+ binding);
  }
  Class fieldClass;
  try {
    fieldClass=myLoader.loadClass(fieldType.getClassName());
  }
 catch (  ClassNotFoundException e) {
    throw new CodeGenerationException(component.getId(),"Class not found: " + fieldType.getClassName());
  }
  if (!fieldClass.isAssignableFrom(componentClass)) {
    throw new CodeGenerationException(component.getId(),"Cannot bind: Incompatible types. Cannot assign " + componentClass.getName() + " to field "+ myClassToBind+ "."+ binding);
  }
}
