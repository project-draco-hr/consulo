{
  int componentLocal=((Integer)myIdToLocalMap.get(component.getId())).intValue();
  Class componentClass=getComponentClass(myLayoutCodeGenerator.mapComponentClass(component.getComponentClassName()),myLoader);
  final Type componentType=Type.getType(componentClass);
  final LwIntrospectedProperty[] introspectedProperties=component.getAssignedIntrospectedProperties();
  for (int i=0; i < introspectedProperties.length; i++) {
    final LwIntrospectedProperty property=introspectedProperties[i];
    if (property instanceof LwIntroComponentProperty) {
      String targetId=(String)component.getPropertyValue(property);
      if (targetId != null && targetId.length() > 0) {
        int targetLocal=((Integer)myIdToLocalMap.get(targetId)).intValue();
        generator.loadLocal(componentLocal);
        generator.loadLocal(targetLocal);
        generator.invokeVirtual(componentType,new Method(property.getWriteMethodName(),Type.VOID_TYPE,new Type[]{getSetterArgType(property)}));
      }
    }
  }
  if (component instanceof LwContainer) {
    LwContainer container=(LwContainer)component;
    for (int i=0; i < container.getComponentCount(); i++) {
      generateComponentReferenceProperties((LwComponent)container.getComponent(i),generator);
    }
  }
}
