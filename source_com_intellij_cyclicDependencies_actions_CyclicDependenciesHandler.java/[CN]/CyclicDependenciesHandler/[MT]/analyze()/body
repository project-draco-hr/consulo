{
  final CyclicDependenciesBuilder builder=new CyclicDependenciesBuilder(myProject,myScope);
  if (ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      builder.analyze();
    }
  }
,AnalysisScopeBundle.message("package.dependencies.progress.title"),true,myProject)) {
    CyclicDependenciesPanel panel=new CyclicDependenciesPanel(myProject,builder);
    Content content=PeerFactory.getInstance().getContentFactory().createContent(panel,AnalysisScopeBundle.message("action.analyzing.cyclic.dependencies.in.scope",builder.getScope().getDisplayName()),false);
    panel.setContent(content);
    ((DependencyValidationManagerImpl)DependencyValidationManager.getInstance(myProject)).addContent(content);
  }
}
