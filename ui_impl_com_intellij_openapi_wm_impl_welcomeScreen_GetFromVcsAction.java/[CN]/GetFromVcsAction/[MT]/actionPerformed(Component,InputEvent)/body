{
  final DefaultActionGroup group=new DefaultActionGroup();
  fillActions(null,group);
  if (group.getChildrenCount() == 0) {
    group.add(new AnAction(UIBundle.message("welcome.screen.get.from.vcs.action.no.vcs.plugins.with.check.out.action.installed.action.name")){
      public void actionPerformed(      AnActionEvent e){
        group.setPopup(false);
      }
    }
);
  }
  final ListPopup popup=ActionListPopup.createListPopup(UIBundle.message("welcome.screen.get.from.vcs.action.checkout.from.list.popup.title"),group,createDataContext(contextComponent),true,true);
  Rectangle r;
  int x;
  int y;
  Component focusedComponent=e.getComponent();
  if (focusedComponent != null) {
    r=focusedComponent.getBounds();
    x=r.x;
    y=r.y + r.height;
  }
 else {
    focusedComponent=WindowManagerEx.getInstanceEx().getFocusedComponent((Project)null);
    r=WindowManagerEx.getInstanceEx().getScreenBounds();
    x=r.x + r.width / 2;
    y=r.y + r.height / 2;
  }
  Point point=new Point(x,y);
  SwingUtilities.convertPointToScreen(point,focusedComponent.getParent());
  popup.getWindow().pack();
  popup.show(point.x,point.y);
}
