{
  UsageView usageView=e.getData(UsageView.USAGE_VIEW_KEY);
  Project project=e.getData(DataKeys.PROJECT);
  final FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(project)).getFindUsagesManager();
  List<FindUsagesManager.SearchData> history=new ArrayList<FindUsagesManager.SearchData>(findUsagesManager.getFindUsageHistory());
  if (!history.isEmpty()) {
    history.remove(history.size() - 1);
    Collections.reverse(history);
  }
  if (history.isEmpty()) {
    history.add(new FindUsagesManager.SearchData());
  }
  BaseListPopupStep<FindUsagesManager.SearchData> step=new BaseListPopupStep<FindUsagesManager.SearchData>(FindBundle.message("recent.find.usages.action.title"),history){
    public Icon getIconFor(    final FindUsagesManager.SearchData data){
      if (data.myElements == null) {
        return null;
      }
      PsiElement psiElement=data.myElements[0].getElement();
      if (psiElement == null)       return null;
      return psiElement.getIcon(0);
    }
    @NotNull public String getTextFor(    final FindUsagesManager.SearchData data){
      if (data.myElements == null) {
        return FindBundle.message("recent.find.usages.action.nothing");
      }
      PsiElement psiElement=data.myElements[0].getElement();
      if (psiElement == null)       return UsageViewBundle.message("node.invalid");
      String scopeString=data.myOptions.searchScope == null ? null : data.myOptions.searchScope.getDisplayName();
      return FindBundle.message("recent.find.usages.action.description",StringUtil.capitalize(UsageViewUtil.getType(psiElement)),UsageViewUtil.getDescriptiveName(psiElement),scopeString == null ? psiElement.getProject().getAllScope().getDisplayName() : scopeString);
    }
    public PopupStep onChosen(    final FindUsagesManager.SearchData selectedValue,    final boolean finalChoice){
      if (selectedValue.myElements != null) {
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            findUsagesManager.rerunAndRecallFromHistory(selectedValue);
          }
        }
);
      }
      return FINAL_CHOICE;
    }
  }
;
  JBPopupFactory.getInstance().createListPopup(step).show(usageView.getComponent());
}
