{
  if (!(_element instanceof GenericDomValue))   return Collections.emptyList();
  GenericDomValue element=(GenericDomValue)_element;
  final Class genericValueParameter=DomUtil.getGenericValueParameter(element.getDomElementType());
  if (genericValueParameter == null || (!ReflectionCache.isAssignable(genericValueParameter,PsiClass.class) && !ReflectionCache.isAssignable(genericValueParameter,PsiType.class))) {
    return Collections.emptyList();
  }
  final Object valueObject=element.getValue();
  PsiClass psiClass=null;
  if (valueObject instanceof PsiClass) {
    psiClass=(PsiClass)valueObject;
  }
 else   if (valueObject instanceof PsiClassType) {
    psiClass=((PsiClassType)valueObject).resolve();
  }
  if (psiClass != null) {
    return checkExtendClass(element,psiClass,extend.value(),extend.instantiatable(),extend.canBeDecorator(),extend.allowInterface(),extend.allowNonPublic(),extend.allowAbstract(),extend.allowEnum(),holder);
  }
  return Collections.emptyList();
}
