{
  if (!isPsiClassType(element)) {
    return Collections.emptyList();
  }
  final Object valueObject=element.getValue();
  if (!(valueObject instanceof PsiClass))   return Collections.emptyList();
  final PsiReference[] references=ourProvider.getReferencesByElement(DomUtil.getValueElement(element),new ProcessingContext());
  for (  PsiReference reference : references) {
    if (reference instanceof JavaClassReference) {
      final PsiReferenceProvider psiReferenceProvider=((JavaClassReference)reference).getProvider();
      final String[] value=psiReferenceProvider instanceof JavaClassReferenceProvider ? JavaClassReferenceProvider.EXTEND_CLASS_NAMES.getValue(((JavaClassReferenceProvider)psiReferenceProvider).getOptions()) : null;
      if (value != null && value.length != 0) {
        for (        String className : value) {
          final List<DomElementProblemDescriptor> problemDescriptors=checkExtendClass(element,((PsiClass)valueObject),className,false,false,true,false,true,true,holder);
          if (!problemDescriptors.isEmpty()) {
            return problemDescriptors;
          }
        }
      }
    }
  }
  return Collections.emptyList();
}
