{
  final String testObject=getTestObject();
  final String className=getJUnitTextValue(CLASS);
  data.TEST_OBJECT=testObject;
  if (testObject != JUnitConfiguration.TEST_PACKAGE && testObject != JUnitConfiguration.TEST_PATTERN && testObject != JUnitConfiguration.TEST_DIRECTORY) {
    try {
      data.METHOD_NAME=getJUnitTextValue(METHOD);
      final PsiClass testClass=JUnitUtil.findPsiClass(className,module,myProject);
      if (testClass != null && testClass.isValid()) {
        data.setMainClass(testClass);
      }
 else {
        data.MAIN_CLASS_NAME=className;
      }
    }
 catch (    ProcessCanceledException e) {
      data.MAIN_CLASS_NAME=className;
    }
catch (    IndexNotReadyException e) {
      data.MAIN_CLASS_NAME=className;
    }
  }
 else {
    if (testObject == JUnitConfiguration.TEST_PACKAGE) {
      data.PACKAGE_NAME=getJUnitTextValue(ALL_IN_PACKAGE);
    }
 else     if (testObject == JUnitConfiguration.TEST_DIRECTORY) {
      data.setDirName(getJUnitTextValue(DIR));
    }
 else {
      final LinkedHashSet<String> set=new LinkedHashSet<String>();
      final String[] patterns=getJUnitTextValue(PATTERN).split("\\|\\|");
      for (      String pattern : patterns) {
        if (pattern.length() > 0) {
          set.add(pattern);
        }
      }
      data.setPatterns(set);
    }
    data.MAIN_CLASS_NAME="";
    data.METHOD_NAME="";
  }
}
