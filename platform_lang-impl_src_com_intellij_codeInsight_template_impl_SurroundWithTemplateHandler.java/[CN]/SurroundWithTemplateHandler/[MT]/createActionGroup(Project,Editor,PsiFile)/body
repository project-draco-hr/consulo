{
  if (!editor.getSelectionModel().hasSelection()) {
    editor.getSelectionModel().selectLineAtCaret();
    if (!editor.getSelectionModel().hasSelection())     return null;
  }
  PsiDocumentManager.getInstance(project).commitDocument(editor.getDocument());
  List<CustomLiveTemplate> customTemplates=getApplicableCustomTemplates(editor,file);
  ArrayList<TemplateImpl> templates=getApplicableTemplates(editor,file,true);
  if (templates.isEmpty() && customTemplates.isEmpty()) {
    HintManager.getInstance().showErrorHint(editor,CodeInsightBundle.message("templates.surround.no.defined"));
    return null;
  }
  if (!FileModificationService.getInstance().preparePsiElementForWrite(file))   return null;
  Set<Character> usedMnemonicsSet=new HashSet<Character>();
  DefaultActionGroup group=new DefaultActionGroup();
  for (  TemplateImpl template : templates) {
    group.add(new InvokeTemplateAction(template,editor,project,usedMnemonicsSet));
  }
  for (  CustomLiveTemplate customTemplate : customTemplates) {
    group.add(new WrapWithCustomTemplateAction(customTemplate,editor,file,usedMnemonicsSet));
  }
  return group;
}
