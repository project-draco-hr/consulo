{
  if (otherClass.hasModifierProperty(PsiModifier.PRIVATE)) {
    final PsiClass containingClass=otherClass.getContainingClass();
    PsiClass containingPlaceClass=PsiTreeUtil.getParentOfType(myPlace,PsiClass.class,false);
    while (containingPlaceClass != null) {
      if (containingClass == containingPlaceClass) {
        return true;
      }
      containingPlaceClass=PsiTreeUtil.getParentOfType(containingPlaceClass,PsiClass.class);
    }
    return false;
  }
  return true;
}
