{
  final PsiMethod[] missings=aClass.findMethodsByName("propertyMissing",true);
  PsiMethod getter=null;
  PsiMethod setter=null;
  for (  PsiMethod missing : missings) {
    final PsiParameter[] parameters=missing.getParameterList().getParameters();
    if (parameters.length == 1) {
      if (isNameParam(parameters[0])) {
        getter=missing;
      }
    }
 else     if (parameters.length == 2) {
      if (isNameParam(parameters[0])) {
        setter=missing;
      }
    }
  }
  if (setter != null && getter != null) {
    String text=GroovyCodeInsightBundle.message("generate.property.missing.already.defined.warning");
    if (Messages.showYesNoDialog(project,text,GroovyCodeInsightBundle.message("generate.property.missing.already.defined.title"),Messages.getQuestionIcon()) == DialogWrapper.OK_EXIT_CODE) {
      final PsiMethod finalGetter=getter;
      final PsiMethod finalSetter=setter;
      if (!ApplicationManager.getApplication().runWriteAction(new Computable<Boolean>(){
        public Boolean compute(){
          try {
            finalSetter.delete();
            finalGetter.delete();
            return Boolean.TRUE;
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
            return Boolean.FALSE;
          }
        }
      }
).booleanValue()) {
        return null;
      }
    }
 else {
      return null;
    }
  }
  return new ClassMember[1];
}
