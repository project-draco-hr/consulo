{
  if (isSkippedExternalDependency(instruction))   return true;
  final String output=myOutputPaths.peek();
  final VirtualFile sourceFile=myLocalFileSystem.findFileByIoFile(instruction.getFile());
  if (sourceFile == null)   return true;
  PackagingFileFilter fileFilter=instruction.getFileFilter();
  String outputRelativePath=instruction.getOutputRelativePath();
  if (myBuildConfiguration.willBuildExploded()) {
    String outputRoot=DeploymentUtilImpl.getOrCreateExplodedDir(myBuildParticipant);
    String fullOutputPath=DeploymentUtil.concatPaths(outputRoot,output,outputRelativePath);
    fullOutputPath=getCanonicalPath(fullOutputPath);
    checkRecursiveCopying(sourceFile,fullOutputPath);
    addItemsToExplodedRecursively(sourceFile,fullOutputPath,fileFilter);
  }
  if (myNestedJars != null) {
    NestedJarInfo nestedJar=getNestedJar(myNestedJars,instruction.isExternalDependencyInstruction());
    if (nestedJar != null) {
      checkRecursiveCopying(sourceFile,nestedJar.myDestination.getOutputFilePath());
      addItemsToJarRecursively(sourceFile,DeploymentUtil.trimForwardSlashes(trimParentPrefix(outputRelativePath)),nestedJar.myDestination,nestedJar.myJarInfo,nestedJar.myAddJarContent,fileFilter);
    }
 else {
      String fullOutputPath=DeploymentUtil.concatPaths(myBuildConfiguration.getJarPath(),outputRelativePath);
      fullOutputPath=getCanonicalPath(fullOutputPath);
      checkRecursiveCopying(sourceFile,fullOutputPath);
      addItemsToExplodedRecursively(sourceFile,fullOutputPath,fileFilter);
    }
  }
  return true;
}
