{
  final VirtualFile sourceFile=myLocalFileSystem.findFileByIoFile(instruction.getFile());
  if (sourceFile == null)   return true;
  PackagingFileFilter fileFilter=instruction.getFileFilter();
  if (myBuildConfiguration.willBuildExploded()) {
    String outputRoot=DeploymentUtilImpl.getOrCreateExplodedDir(myBuildParticipant);
    String jarPath=getCanonicalConcat(outputRoot,myOutputPaths.peek(),instruction.getOutputRelativePath());
    checkRecursiveCopying(sourceFile,jarPath);
    addItemsToJar(sourceFile,createExplodedDestination(jarPath),fileFilter);
  }
  if (myNestedJars != null) {
    final NestedJarInfo nestedJar=getNestedJar(myNestedJars,instruction.isExternalDependencyInstruction());
    if (nestedJar != null) {
      final String outputRelativePath=trimParentPrefix(instruction.getOutputRelativePath());
      JarDestinationInfo destination=new JarDestinationInfo(outputRelativePath,nestedJar.myJarInfo,nestedJar.myDestination);
      checkRecursiveCopying(sourceFile,destination.getOutputFilePath());
      addItemsToJar(sourceFile,destination,fileFilter);
    }
 else {
      String jarPath=getCanonicalConcat(myBuildConfiguration.getJarPath(),instruction.getOutputRelativePath());
      checkRecursiveCopying(sourceFile,jarPath);
      addItemsToJar(sourceFile,createExplodedDestination(jarPath),fileFilter);
    }
  }
  return true;
}
