{
  final PsiElementVisitor visitor=new PsiRecursiveElementVisitor(){
    @Override public void visitClass(    PsiClass aClass){
      aClass.putCopyableUserData(PsiUtil.ORIGINAL_KEY,aClass);
      super.visitClass(aClass);
    }
    @Override public void visitVariable(    PsiVariable variable){
      variable.putCopyableUserData(PsiUtil.ORIGINAL_KEY,variable);
      super.visitVariable(variable);
    }
    @Override public void visitMethod(    PsiMethod method){
      method.putCopyableUserData(PsiUtil.ORIGINAL_KEY,method);
      super.visitMethod(method);
    }
    @Override public void visitXmlTag(    XmlTag tag){
      tag.putCopyableUserData(PsiUtil.ORIGINAL_KEY,tag);
      super.visitXmlTag(tag);
    }
  }
;
  visitor.visitFile(file);
  final PsiFile fileCopy=(PsiFile)file.copy();
  final PsiElementVisitor copyVisitor=new PsiRecursiveElementVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      visitExpression(expression);
    }
    @Override public void visitClass(    PsiClass aClass){
      final PsiElement originalElement=aClass.getCopyableUserData(PsiUtil.ORIGINAL_KEY);
      if (originalElement != null) {
        originalElement.putCopyableUserData(PsiUtil.ORIGINAL_KEY,null);
        originalElement.putUserData(CompletionUtil.COPY_KEY,aClass);
        aClass.putCopyableUserData(PsiUtil.ORIGINAL_KEY,null);
        aClass.putUserData(PsiUtil.ORIGINAL_KEY,originalElement);
      }
      super.visitClass(aClass);
    }
  }
;
  copyVisitor.visitFile(fileCopy);
  return fileCopy;
}
