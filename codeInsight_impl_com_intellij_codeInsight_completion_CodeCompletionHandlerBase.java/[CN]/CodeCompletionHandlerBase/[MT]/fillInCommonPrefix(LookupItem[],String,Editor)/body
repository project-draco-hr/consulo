{
  String commonPrefix=null;
  boolean isStrict=false;
  final int prefixLength=prefix.length();
  for (  final LookupItem item : items) {
    final String lookupString=item.getLookupString();
    if (!StringUtil.startsWithIgnoreCase(lookupString,prefix)) {
      return prefix;
    }
    if (commonPrefix != null) {
      int matchingRegLength=lookupString.length();
      while (!lookupString.regionMatches(0,commonPrefix,0,matchingRegLength--))       ;
      commonPrefix=lookupString.substring(0,matchingRegLength + 1);
      if (commonPrefix.length() < lookupString.length()) {
        isStrict=true;
      }
      if (commonPrefix.length() <= prefixLength) {
        return prefix;
      }
    }
 else {
      commonPrefix=lookupString;
    }
  }
  if (!isStrict)   return prefix;
  int offset=editor.getSelectionModel().hasSelection() ? editor.getSelectionModel().getSelectionStart() : editor.getCaretModel().getOffset();
  int lookupStart=offset - prefixLength;
  int replacedLength=prefixLength;
  final int commonPrefixLength=commonPrefix.length();
  if (prefixLength < commonPrefixLength) {
    final CharSequence sequence=editor.getDocument().getCharsSequence();
    for (; replacedLength < commonPrefixLength && sequence.charAt(lookupStart + replacedLength) == commonPrefix.charAt(replacedLength); ++replacedLength) {
    }
  }
  editor.getDocument().replaceString(lookupStart,lookupStart + replacedLength,commonPrefix);
  return commonPrefix;
}
