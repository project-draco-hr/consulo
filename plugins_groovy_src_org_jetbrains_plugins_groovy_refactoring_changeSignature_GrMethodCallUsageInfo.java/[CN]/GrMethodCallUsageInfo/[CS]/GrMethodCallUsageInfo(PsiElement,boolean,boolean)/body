{
  super(element);
  myToChangeArguments=isToChangeArguments;
  myToCatchExceptions=isToCatchExceptions;
  final GroovyResolveResult resolveResult=resolveMethod(element);
  myReferencedMethod=(PsiMethod)resolveResult.getElement();
  mySubstitutor=resolveResult.getSubstitutor();
  final GrArgumentList list=PsiUtil.getArgumentsList(element);
  if (list == null) {
    myMapToArguments=GrClosureSignatureUtil.ArgInfo.EMPTY_ARRAY;
  }
 else {
    final GrClosureSignature signature=GrClosureSignatureUtil.createSignature(myReferencedMethod,mySubstitutor);
    myMapToArguments=GrClosureSignatureUtil.mapParametersToArguments(signature,list,element.getManager(),myReferencedMethod.getResolveScope());
  }
}
