{
  final Collection<VirtualFile> affected=dirtyScope.getAffectedContentRoots();
  Collection<VirtualFile> roots=GitUtil.gitRootsForPaths(affected);
  if (roots.size() != affected.size()) {
    LOG.info("affected content roots size: " + affected.size() + " roots size: "+ roots.size());
  }
  final MyNonChangedHolder holder=new MyNonChangedHolder(myProject,dirtyScope.getDirtyFilesNoExpand(),addGate);
  for (  VirtualFile root : roots) {
    ChangeCollector c=new ChangeCollector(myProject,dirtyScope,root);
    final Collection<Change> changes=c.changes();
    holder.changed(changes);
    for (    Change file : changes) {
      builder.processChange(file,GitVcs.getKey());
    }
    for (    VirtualFile f : c.unversioned()) {
      builder.processUnversionedFile(f);
      holder.unversioned(f);
    }
    holder.feedBuilder(builder);
  }
}
