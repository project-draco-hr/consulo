{
  if (!CodeInsightUtilBase.prepareFileForWrite(file))   return;
  final PsiClass myClass=myField.getContainingClass();
  if (myClass.getConstructors().length == 0) {
    createDefaultConstructor(myClass,project,editor,file);
  }
  final List<PsiMethod> constructors=choose(filterIfFieldAlreadyAssigned(myField,myClass.getConstructors()),project);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final List<PsiExpressionStatement> statements=addFieldInitialization(constructors,myField,project);
      final PsiExpressionStatement highestStatement=getHighestElement(statements);
      if (highestStatement == null)       return;
      final PsiAssignmentExpression expression=(PsiAssignmentExpression)highestStatement.getExpression();
      final PsiElement rightExpression=expression.getRExpression();
      final TextRange expressionRange=rightExpression.getTextRange();
      editor.getCaretModel().moveToOffset(expressionRange.getStartOffset());
      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
      editor.getSelectionModel().setSelection(expressionRange.getStartOffset(),expressionRange.getEndOffset());
    }
  }
);
}
