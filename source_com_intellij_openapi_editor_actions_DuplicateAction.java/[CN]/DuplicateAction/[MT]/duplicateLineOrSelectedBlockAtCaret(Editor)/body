{
  Document document=editor.getDocument();
  if (editor.getSelectionModel().hasSelection()) {
    int start=editor.getSelectionModel().getSelectionStart();
    int end=editor.getSelectionModel().getSelectionEnd();
    String s=document.getCharsSequence().subSequence(start,end).toString();
    document.insertString(end,s);
    editor.getCaretModel().moveToOffset(end + s.length());
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    editor.getSelectionModel().removeSelection();
    editor.getSelectionModel().setSelection(end,end + s.length());
  }
 else {
    VisualPosition caret=editor.getCaretModel().getVisualPosition();
    LogicalPosition lineStart=editor.visualToLogicalPosition(new VisualPosition(caret.line,0));
    LogicalPosition nextLineStart=editor.visualToLogicalPosition(new VisualPosition(caret.line + 1,0));
    int start=editor.logicalPositionToOffset(lineStart);
    int end=editor.logicalPositionToOffset(nextLineStart);
    String s=document.getCharsSequence().subSequence(start,end).toString();
    final int lineToCheck=nextLineStart.line - 1;
    if (lineToCheck == document.getLineCount() || ((DocumentEx)document).getLineSeparatorLength(lineToCheck) == 0) {
      s="\n" + s;
    }
    document.insertString(end,s);
    editor.getCaretModel().moveCaretRelatively(0,1,false,false,true);
  }
}
