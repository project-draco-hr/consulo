{
  UISettings settings=UISettings.getInstance();
  Project project=e.getProject();
  settings.PRESENTATION_MODE=!settings.PRESENTATION_MODE;
  if (project != null) {
    hideToolWindows(project);
  }
  settings.fireUISettingsChanged();
  UIDefaults defaults=UIManager.getDefaults();
  Enumeration<Object> keys=defaults.keys();
  if (settings.PRESENTATION_MODE) {
    while (keys.hasMoreElements()) {
      Object key=keys.nextElement();
      if (key instanceof String && ((String)key).endsWith(".font")) {
        Font font=defaults.getFont(key);
        oldFonts.put(key,font);
      }
    }
    for (    Object key : oldFonts.keySet()) {
      Font font=oldFonts.get(key);
      defaults.put(key,new FontUIResource(font.getName(),font.getStyle(),Math.min(20,settings.PRESENTATION_MODE_FONT_SIZE)));
    }
  }
 else {
    for (    Object key : oldFonts.keySet()) {
      defaults.put(key,oldFonts.get(key));
    }
    oldFonts.clear();
  }
  if (project != null) {
    Window window=IdeFrameImpl.getActiveFrame();
    if (window instanceof IdeFrameImpl) {
      final IdeFrameImpl frame=(IdeFrameImpl)window;
      final PropertiesComponent propertiesComponent=PropertiesComponent.getInstance(project);
      if (settings.PRESENTATION_MODE) {
        propertiesComponent.setValue("full.screen.before.presentation.mode",String.valueOf(frame.isInFullScreen()));
        frame.toggleFullScreen(true);
      }
 else {
        if (frame.isInFullScreen()) {
          final String value=propertiesComponent.getValue("full.screen.before.presentation.mode");
          frame.toggleFullScreen("true".equalsIgnoreCase(value));
        }
      }
    }
  }
  int fontSize=settings.PRESENTATION_MODE ? settings.PRESENTATION_MODE_FONT_SIZE : EditorColorsManager.getInstance().getGlobalScheme().getEditorFontSize();
  for (  Editor editor : EditorFactory.getInstance().getAllEditors()) {
    if (editor instanceof EditorEx) {
      ((EditorEx)editor).setFontSize(fontSize);
    }
  }
  UISettings.getInstance().fireUISettingsChanged();
  LafManager.getInstance().updateUI();
  EditorUtil.reinitSettings();
}
