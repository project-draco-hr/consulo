{
  final List<ASTNode> children=visibleChildren(elem.getNode());
  if (elem instanceof GrMethodCallExpression) {
    GrExpression invokedExpression=((GrMethodCallExpression)elem).getInvokedExpression();
    if (invokedExpression instanceof GrQualifiedReference) {
      final PsiElement nameElement=((GrQualifiedReference)invokedExpression).getReferenceNameElement();
      if (nameElement != null) {
        List<ASTNode> grandChildren=visibleChildren(invokedExpression.getNode());
        int i=0;
        while (i < grandChildren.size() && nameElement != grandChildren.get(i).getPsi()) {
          i++;
        }
        if (i > 0) {
          processNestedChildrenPrefix(list,alignment,wrap,settings,false,grandChildren,i,alignments);
        }
        if (i < grandChildren.size()) {
          LOG.assertTrue(nameElement == grandChildren.get(i).getPsi());
          list.add(new MethodCallWithoutQualifierBlock(nameElement,null,wrap,settings,topLevel,children,elem,alignments));
        }
        return;
      }
    }
  }
  processNestedChildrenPrefix(list,alignment,wrap,settings,topLevel,children,children.size(),alignments);
}
