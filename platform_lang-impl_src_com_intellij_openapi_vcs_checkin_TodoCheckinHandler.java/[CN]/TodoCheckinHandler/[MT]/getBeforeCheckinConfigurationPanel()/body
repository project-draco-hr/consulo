{
  final JCheckBox checkBox=new JCheckBox(VcsBundle.message("before.checkin.new.todo.check",""));
  return new RefreshableOnComponent(){
    @Override public JComponent getComponent(){
      JPanel panel=new JPanel(new BorderLayout(4,0));
      panel.add(checkBox,BorderLayout.WEST);
      setFilterText(myConfiguration.myTodoPanelSettings.getTodoFilterName());
      if (myConfiguration.myTodoPanelSettings.getTodoFilterName() != null) {
        myTodoFilter=TodoConfiguration.getInstance().getTodoFilter(myConfiguration.myTodoPanelSettings.getTodoFilterName());
      }
      final Consumer<TodoFilter> consumer=new Consumer<TodoFilter>(){
        @Override public void consume(        TodoFilter todoFilter){
          myTodoFilter=todoFilter;
          final String name=todoFilter == null ? null : todoFilter.getName();
          myConfiguration.myTodoPanelSettings.setTodoFilterName(name);
          setFilterText(name);
        }
      }
;
      final LinkLabel linkLabel=new LinkLabel("Configure",null);
      linkLabel.setListener(new LinkListener(){
        @Override public void linkSelected(        LinkLabel aSource,        Object aLinkData){
          DefaultActionGroup group=SetTodoFilterAction.createPopupActionGroup(myProject,myConfiguration.myTodoPanelSettings,consumer);
          ActionPopupMenu popupMenu=ActionManager.getInstance().createActionPopupMenu(ActionPlaces.TODO_VIEW_TOOLBAR,group);
          popupMenu.getComponent().show(linkLabel,0,linkLabel.getHeight());
        }
      }
,null);
      panel.add(linkLabel,BorderLayout.CENTER);
      CheckinHandlerUtil.disableWhenDumb(myProject,checkBox,"TODO check is impossible until indices are up-to-date");
      return panel;
    }
    private void setFilterText(    final String filterName){
      if (filterName == null) {
        checkBox.setText(VcsBundle.message("before.checkin.new.todo.check",IdeBundle.message("action.todo.show.all")));
      }
 else {
        checkBox.setText(VcsBundle.message("before.checkin.new.todo.check","Filter: " + filterName));
      }
    }
    @Override public void refresh(){
    }
    @Override public void saveState(){
      myConfiguration.CHECK_NEW_TODO=checkBox.isSelected();
    }
    @Override public void restoreState(){
      checkBox.setSelected(myConfiguration.CHECK_NEW_TODO);
    }
  }
;
}
