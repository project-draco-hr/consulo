{
  String commitButtonText=executor != null ? executor.getActionText() : myCheckinProjectPanel.getCommitActionName();
  if (commitButtonText.endsWith("...")) {
    commitButtonText=commitButtonText.substring(0,commitButtonText.length() - 3);
  }
  final String text=createMessage(worker);
  final String[] buttons=worker.getAddedOrEditedTodos().size() + worker.getInChangedTodos().size() > 0 ? new String[]{VcsBundle.message("todo.in.new.review.button"),commitButtonText,CommonBundle.getCancelButtonText()} : new String[]{commitButtonText,CommonBundle.getCancelButtonText()};
  final int answer=Messages.showDialog(text,"TODO",buttons,0,UIUtil.getWarningIcon());
  if (answer == 0) {
    TodoView todoView=ServiceManager.getService(myProject,TodoView.class);
    final String title="For commit (" + DateFormatUtil.formatDateTime(System.currentTimeMillis()) + ")";
    todoView.addCustomTodoView(new TodoTreeBuilderFactory(){
      @Override public TodoTreeBuilder createTreeBuilder(      JTree tree,      DefaultTreeModel treeModel,      Project project){
        return new CustomChangelistTodosTreeBuilder(tree,treeModel,myProject,title,worker.inOneList());
      }
    }
,title,new TodoPanelSettings(myConfiguration.myTodoPanelSettings));
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        final ToolWindowManager manager=ToolWindowManager.getInstance(myProject);
        if (manager != null) {
          final ToolWindow window=manager.getToolWindow("TODO");
          if (window != null) {
            window.show(new Runnable(){
              @Override public void run(){
                final ContentManager cm=window.getContentManager();
                final Content[] contents=cm.getContents();
                if (contents.length > 0) {
                  cm.setSelectedContent(contents[contents.length - 1],true);
                }
              }
            }
);
          }
        }
      }
    }
,ModalityState.NON_MODAL,myProject.getDisposed());
    return ReturnResult.CLOSE_WINDOW;
  }
 else   if (answer == 2 || answer == -1) {
    return ReturnResult.CANCEL;
  }
 else {
    return ReturnResult.COMMIT;
  }
}
