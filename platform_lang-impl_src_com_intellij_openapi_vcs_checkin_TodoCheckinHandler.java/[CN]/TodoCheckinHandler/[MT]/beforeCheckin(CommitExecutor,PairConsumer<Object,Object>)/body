{
  if (!myConfiguration.CHECK_NEW_TODO)   return ReturnResult.COMMIT;
  if (DumbService.getInstance(myProject).isDumb()) {
    final String todoName=VcsBundle.message("before.checkin.new.todo.check.title");
    if (Messages.showOkCancelDialog(myProject,todoName + " can't be performed while " + ApplicationNamesInfo.getInstance().getFullProductName()+ " updates the indices in background.\n"+ "You can commit the changes without running checks, or you can wait until indices are built.",todoName + " is not possible right now","&Wait","&Commit",null) == Messages.OK) {
      return ReturnResult.CANCEL;
    }
    return ReturnResult.COMMIT;
  }
  final Collection<Change> changes=myCheckinProjectPanel.getSelectedChanges();
  final TodoCheckinHandlerWorker worker=new TodoCheckinHandlerWorker(myProject,changes,myTodoFilter,true);
  final Ref<Boolean> completed=Ref.create(Boolean.FALSE);
  ProgressManager.getInstance().run(new Task.Modal(myProject,"Looking for new and edited TODO items...",true){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      worker.execute();
    }
    @Override public void onSuccess(){
      completed.set(Boolean.TRUE);
    }
  }
);
  if (completed.get() && (worker.getAddedOrEditedTodos().isEmpty() && worker.getInChangedTodos().isEmpty() && worker.getSkipped().isEmpty()))   return ReturnResult.COMMIT;
  if (!completed.get())   return ReturnResult.CANCEL;
  return showResults(worker,executor);
}
