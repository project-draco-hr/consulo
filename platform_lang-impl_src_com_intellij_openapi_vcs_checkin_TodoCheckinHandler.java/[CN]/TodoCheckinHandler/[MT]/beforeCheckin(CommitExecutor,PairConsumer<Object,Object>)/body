{
  if (!myConfiguration.CHECK_NEW_TODO)   return ReturnResult.COMMIT;
  if (DumbService.getInstance(myProject).isDumb()) {
    final String todoName=VcsBundle.message("before.checkin.new.todo.check.title");
    if (Messages.showDialog(myProject,todoName + " can't be performed while IntelliJ IDEA updates the indices in background.\n" + "You can commit the changes without running checks, or you can wait until indices are built.",todoName + " is not possible right now",new String[]{"&Commit","&Wait"},1,null) != 0) {
      return ReturnResult.CANCEL;
    }
    return ReturnResult.COMMIT;
  }
  final Collection<Change> changes=myCheckinProjectPanel.getSelectedChanges();
  final TodoCheckinHandlerWorker worker=new TodoCheckinHandlerWorker(myProject,changes,myTodoFilter,true);
  final Runnable runnable=new Runnable(){
    public void run(){
      worker.execute();
    }
  }
;
  final boolean completed=ProgressManager.getInstance().runProcessWithProgressSynchronously(runnable,"Looking for new and edited TODO items...",true,myProject);
  if (!completed || (worker.getAddedOrEditedTodos().isEmpty() && worker.getInChangedTodos().isEmpty() && worker.getSkipped().isEmpty()))   return ReturnResult.COMMIT;
  return showResults(worker,executor);
}
