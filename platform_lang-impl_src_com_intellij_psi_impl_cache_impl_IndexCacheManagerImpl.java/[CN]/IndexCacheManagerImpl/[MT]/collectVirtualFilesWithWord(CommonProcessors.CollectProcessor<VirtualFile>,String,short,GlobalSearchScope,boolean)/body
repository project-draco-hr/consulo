{
  if (myProject.isDefault()) {
    return;
  }
  try {
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      @Override public void run(){
        FileBasedIndex.getInstance().processValues(IdIndex.NAME,new IdIndexEntry(word,caseSensitively),null,new FileBasedIndex.ValueProcessor<Integer>(){
          final FileIndexFacade index=FileIndexFacade.getInstance(myProject);
          @Override public boolean process(          final VirtualFile file,          final Integer value){
            ProgressManager.checkCanceled();
            final int mask=value.intValue();
            if ((mask & occurrenceMask) != 0 && scope.contains(file) && shouldBeFound(scope,file,index)) {
              if (!fileProcessor.process(file))               return false;
            }
            return true;
          }
        }
,GlobalSearchScope.allScope(myProject).union(scope));
      }
    }
);
  }
 catch (  IndexNotReadyException e) {
    throw new ProcessCanceledException();
  }
}
