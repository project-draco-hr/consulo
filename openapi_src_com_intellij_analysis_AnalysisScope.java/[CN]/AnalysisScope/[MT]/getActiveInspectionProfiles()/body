{
  Set<String> result=new HashSet<String>();
  if (myType == PROJECT || myType == CUSTOM) {
    final ProjectProfileManager profileManager=ProjectProfileManager.getProjectProfileManager(myProject,Profile.INSPECTION);
    LOG.assertTrue(profileManager != null);
    result.addAll(profileManager.getProfilesUsedInProject().values());
    result.add(profileManager.getProjectProfile());
  }
 else   if (myType == MODULE) {
    processModule(result,myModule);
  }
 else   if (myType == MODULES) {
    for (    Module module : myModules) {
      processModule(result,module);
    }
  }
 else   if (myType == FILE) {
    final ProjectProfileManager profileManager=ProjectProfileManager.getProjectProfileManager(myElement.getProject(),Profile.INSPECTION);
    LOG.assertTrue(profileManager != null);
    result.add(profileManager.getProfileName((PsiFile)myElement));
  }
 else   if (myType == DIRECTORY) {
    final ProjectProfileManager profileManager=ProjectProfileManager.getProjectProfileManager(myElement.getProject(),Profile.INSPECTION);
    LOG.assertTrue(profileManager != null);
    processDirectories(new PsiDirectory[]{(PsiDirectory)myElement},result,profileManager);
  }
 else   if (myType == PACKAGE) {
    final ProjectProfileManager profileManager=ProjectProfileManager.getProjectProfileManager(myElement.getProject(),Profile.INSPECTION);
    LOG.assertTrue(profileManager != null);
    final PsiDirectory[] psiDirectories=((PsiPackage)myElement).getDirectories();
    processDirectories(psiDirectories,result,profileManager);
  }
  return result;
}
