{
  if (myType == VIRTUAL_FILES) {
    final PsiManager psiManager=PsiManager.getInstance(myProject);
    for (    final VirtualFile file : myFilesSet) {
      if (!processFile(file,visitor,psiManager))       return;
    }
  }
 else   if (myScope instanceof GlobalSearchScope) {
    final PsiManager psiManager=PsiManager.getInstance(myProject);
    final FileIndex projectFileIndex=ProjectRootManager.getInstance(myProject).getFileIndex();
    projectFileIndex.iterateContent(new ContentIterator(){
      @SuppressWarnings({"SimplifiableIfStatement"}) public boolean processFile(      final VirtualFile fileOrDir){
        if (fileOrDir.isDirectory())         return true;
        if (((GlobalSearchScope)myScope).contains(fileOrDir) && (myIncludeTestSource || !projectFileIndex.isInTestSourceContent(fileOrDir))) {
          return AnalysisScope.processFile(fileOrDir,visitor,psiManager);
        }
        return true;
      }
    }
);
  }
 else   if (myScope instanceof LocalSearchScope) {
    final PsiElement[] psiElements=((LocalSearchScope)myScope).getScope();
    for (    PsiElement element : psiElements) {
      element.accept(visitor);
    }
  }
 else   if (myProject != null) {
    final PsiManager psiManager=PsiManager.getInstance(myProject);
    final FileIndex projectFileIndex=ProjectRootManager.getInstance(myProject).getFileIndex();
    projectFileIndex.iterateContent(new ContentIterator(){
      public boolean processFile(      final VirtualFile fileOrDir){
        return AnalysisScope.this.processFile(fileOrDir,visitor,projectFileIndex,psiManager);
      }
    }
);
  }
 else   if (myModule != null) {
    final FileIndex moduleFileIndex=ModuleRootManager.getInstance(myModule).getFileIndex();
    final PsiManager psiManager=PsiManager.getInstance(myModule.getProject());
    moduleFileIndex.iterateContent(new ContentIterator(){
      public boolean processFile(      VirtualFile fileOrDir){
        return AnalysisScope.this.processFile(fileOrDir,visitor,moduleFileIndex,psiManager);
      }
    }
);
  }
 else   if (myModules != null) {
    for (    final Module module : myModules) {
      final PsiManager psiManager=PsiManager.getInstance(module.getProject());
      final FileIndex moduleFileIndex=ModuleRootManager.getInstance(module).getFileIndex();
      moduleFileIndex.iterateContent(new ContentIterator(){
        public boolean processFile(        VirtualFile fileOrDir){
          return AnalysisScope.this.processFile(fileOrDir,visitor,moduleFileIndex,psiManager);
        }
      }
);
    }
  }
 else   if (myElement instanceof PsiPackage) {
    final PsiPackage pack=(PsiPackage)myElement;
    final Set<PsiDirectory> dirs=new HashSet<PsiDirectory>();
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        dirs.addAll(Arrays.asList(pack.getDirectories(GlobalSearchScope.projectScope(myElement.getProject()))));
      }
    }
);
    for (    PsiDirectory dir : dirs) {
      accept(dir,visitor);
    }
  }
 else {
    myElement.accept(visitor);
  }
}
