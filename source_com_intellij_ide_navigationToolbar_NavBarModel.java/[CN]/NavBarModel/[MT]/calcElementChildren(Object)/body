{
  final java.util.List<Object> result=new ArrayList<Object>();
  Object rootElement=size() > 1 ? getElement(1) : null;
  if (!(object instanceof Project) && rootElement instanceof Module && ((Module)rootElement).isDisposed())   return result;
  final PsiManager psiManager=PsiManager.getInstance(myProject);
  if (object instanceof Project) {
    result.addAll(Arrays.asList(ModuleManager.getInstance((Project)object).getModules()));
  }
 else   if (object instanceof Module) {
    Module module=(Module)object;
    if (!module.isDisposed()) {
      ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
      VirtualFile[] roots=moduleRootManager.getContentRoots();
      for (      VirtualFile root : roots) {
        final PsiDirectory psiDirectory=psiManager.findDirectory(root);
        if (psiDirectory != null) {
          result.add(psiDirectory);
        }
      }
    }
  }
 else   if (object instanceof PsiPackage) {
    final PsiPackage psiPackage=(PsiPackage)object;
    final PsiDirectory[] psiDirectories=rootElement instanceof Module ? psiPackage.getDirectories(GlobalSearchScope.moduleScope((Module)rootElement)) : psiPackage.getDirectories();
    for (    PsiDirectory psiDirectory : psiDirectories) {
      getDirectoryChildren(psiDirectory,rootElement,result);
    }
  }
 else   if (object instanceof PsiDirectory) {
    getDirectoryChildren((PsiDirectory)object,rootElement,result);
  }
  Collections.sort(result,new SiblingsComparator());
  return result;
}
