{
  if (!checkValid(object))   return IdeBundle.message("node.structureview.invalid");
  if (object instanceof Project) {
    return wrapPresentation(((Project)object).getName(),window);
  }
 else   if (object instanceof Module) {
    return wrapPresentation(((Module)object).getName(),window);
  }
 else   if (object instanceof PsiClass) {
    return wrapPresentation(ClassPresentationUtil.getNameForClass((PsiClass)object,false),window);
  }
 else   if (object instanceof PsiFile) {
    return wrapPresentation(((PsiFile)object).getName(),window);
  }
 else   if (object instanceof PsiDirectory) {
    return wrapPresentation(((PsiDirectory)object).getVirtualFile().getName(),window);
  }
 else   if (object instanceof PsiPackage) {
    final String name=((PsiPackage)object).getName();
    return wrapPresentation(name != null ? name : AnalysisScopeBundle.message("dependencies.tree.node.default.package.abbreviation"),window);
  }
 else   if (object instanceof JdkOrderEntry) {
    return wrapPresentation(((JdkOrderEntry)object).getJdkName(),window);
  }
 else   if (object instanceof LibraryOrderEntry) {
    final String libraryName=((LibraryOrderEntry)object).getLibraryName();
    return wrapPresentation(libraryName != null ? libraryName : AnalysisScopeBundle.message("package.dependencies.library.node.text"),window);
  }
 else   if (object instanceof ModuleOrderEntry) {
    final ModuleOrderEntry moduleOrderEntry=(ModuleOrderEntry)object;
    return wrapPresentation(moduleOrderEntry.getModuleName(),window);
  }
  return null;
}
