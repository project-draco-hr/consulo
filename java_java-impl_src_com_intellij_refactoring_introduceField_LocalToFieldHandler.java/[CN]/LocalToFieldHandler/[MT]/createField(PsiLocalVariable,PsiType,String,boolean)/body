{
  @NonNls StringBuilder pattern=new StringBuilder();
  pattern.append("private int ");
  pattern.append(fieldName);
  if (local.getInitializer() == null) {
    includeInitializer=false;
  }
  if (includeInitializer) {
    pattern.append("=0");
  }
  pattern.append(";");
  final Project project=local.getProject();
  PsiElementFactory factory=JavaPsiFacade.getInstance(project).getElementFactory();
  try {
    PsiField field=factory.createFieldFromText(pattern.toString(),null);
    field=(PsiField)CodeStyleManager.getInstance(project).reformat(field);
    field.getTypeElement().replace(factory.createTypeElement(forcedType));
    if (includeInitializer) {
      PsiExpression initializer=RefactoringUtil.convertInitializerToNormalExpression(local.getInitializer(),forcedType);
      field.getInitializer().replace(initializer);
    }
    return field;
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
    return null;
  }
}
