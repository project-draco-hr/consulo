{
  final PsiExpression[] occurences=CodeInsightUtil.findReferenceExpressions(RefactoringUtil.getVariableScope(local),local);
  if (editor != null) {
    RefactoringUtil.highlightAllOccurences(myProject,occurences,editor);
  }
  final BaseExpressionToFieldHandler.Settings settings=showRefactoringDialog(aClass,local,occurences,isStatic);
  if (settings == null)   return true;
  final PsiClass destinationClass=settings.getDestinationClass();
  boolean rebindNeeded=false;
  if (destinationClass != null) {
    aClass=destinationClass;
    rebindNeeded=true;
  }
  final PsiClass aaClass=aClass;
  final boolean rebindNeeded1=rebindNeeded;
  final Runnable runnable=new IntroduceFieldRunnable(rebindNeeded1,local,aaClass,settings,isStatic,occurences);
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(runnable);
    }
  }
,REFACTORING_NAME,null);
  return false;
}
