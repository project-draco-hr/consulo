{
  final PsiJavaFile file=(PsiJavaFile)createLightFile("test.java",source);
  final LazyParseableElement fileNode=(LazyParseableElement)file.getNode();
  assertNotNull(fileNode);
  assertFalse(fileNode.isParsed());
  long t1=System.nanoTime();
  final StubElement lighterTree=NEW_BUILDER.buildStubTree(file);
  t1=System.nanoTime() - t1;
  assertFalse(fileNode.isParsed());
  long t2=System.nanoTime();
  final StubElement originalTree=OLD_BUILDER.buildStubTree(file);
  t2=System.nanoTime() - t2;
  assertTrue(fileNode.isParsed());
  final String lightStr=DebugUtil.stubTreeToString(originalTree);
  final String originalStr=DebugUtil.stubTreeToString(lighterTree);
  if (tree != null) {
    final String msg="light=" + t1 / 1000 + "mks, heavy=" + t2 / 1000 + "mks";
    System.out.println(msg);
    assertEquals("wrong test data",tree,lightStr);
    if (!"".equals(tree)) {
      assertEquals("light tree differs",tree,originalStr);
    }
  }
}
