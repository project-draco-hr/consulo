{
  PsiMember enclosingContext=null;
  PsiClass parentClass;
  do {
    enclosingContext=PsiTreeUtil.getParentOfType(enclosingContext == null ? place : enclosingContext,PsiMethod.class,PsiField.class,PsiClassInitializer.class);
    parentClass=enclosingContext == null ? null : enclosingContext.getContainingClass();
  }
 while (parentClass instanceof PsiAnonymousClass);
  if (enclosingContext != null && enclosingContext.getParent() == parentClass && targetClass == parentClass && enclosingContext instanceof PsiField) {
    field=(PsiField)targetClass.addBefore(field,enclosingContext);
  }
 else   if (enclosingContext != null && enclosingContext.getParent() == parentClass && targetClass == parentClass && enclosingContext instanceof PsiClassInitializer) {
    field=(PsiField)targetClass.addBefore(field,enclosingContext);
    targetClass.addBefore(CodeEditUtil.createLineFeed(field.getManager()),enclosingContext);
  }
 else {
    field=(PsiField)targetClass.add(field);
  }
  return field;
}
