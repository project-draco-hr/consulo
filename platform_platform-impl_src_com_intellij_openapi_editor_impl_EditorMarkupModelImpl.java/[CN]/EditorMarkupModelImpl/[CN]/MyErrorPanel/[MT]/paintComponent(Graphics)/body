{
  if (UISettings.getInstance().PRESENTATION_MODE) {
    g.setColor(getEditor().getColorsScheme().getDefaultBackground());
    g.fillRect(0,0,getWidth(),getHeight());
    return;
  }
  Rectangle componentBounds=getBounds();
  ProperTextRange docRange=ProperTextRange.create(0,componentBounds.height);
  if (myCachedTrack == null || myCachedHeight != componentBounds.height) {
    myCachedTrack=UIUtil.createImage(componentBounds.width,componentBounds.height,BufferedImage.TYPE_INT_ARGB);
    myCachedHeight=componentBounds.height;
    myDirtyYPositions=docRange;
    paintBackground(myCachedTrack.getGraphics(),new Rectangle(0,0,componentBounds.width,componentBounds.height));
  }
  if (myDirtyYPositions == WHOLE_DOCUMENT) {
    myDirtyYPositions=docRange;
  }
  if (myDirtyYPositions != null) {
    final Graphics2D imageGraphics=myCachedTrack.createGraphics();
    ((ApplicationImpl)ApplicationManager.getApplication()).editorPaintStart();
    try {
      myDirtyYPositions=myDirtyYPositions.intersection(docRange);
      if (myDirtyYPositions == null)       myDirtyYPositions=docRange;
      repaint(imageGraphics,componentBounds.width,myDirtyYPositions);
      myDirtyYPositions=null;
    }
  finally {
      ((ApplicationImpl)ApplicationManager.getApplication()).editorPaintFinish();
    }
  }
  UIUtil.drawImage(g,myCachedTrack,null,0,0);
  if (myErrorStripeRenderer != null) {
    myErrorStripeRenderer.paint(this,g,new Point(JBUI.scale(1),0));
  }
}
