{
  if (!dimensionsAreValid) {
    recalcEditorDimensions();
  }
  final int safeY=Math.max(0,y - myEditorScrollbarTop);
  VisualPosition visual;
  if (myEditorSourceHeight < myEditorTargetHeight) {
    visual=myEditor.xyToVisualPosition(new Point(0,safeY));
  }
 else {
    float fraction=Math.max(0,Math.min(1,safeY / (float)myEditorTargetHeight));
    final int lineCount=myEditorSourceHeight / myEditor.getLineHeight();
    visual=new VisualPosition((int)(fraction * lineCount),0);
  }
  int line=myEditor.visualToLogicalPosition(visual).line;
  Document document=myEditor.getDocument();
  if (line < 0)   return 0;
  if (line >= document.getLineCount())   return document.getTextLength();
  final FoldingModelEx foldingModel=myEditor.getFoldingModel();
  if (beginLine) {
    final int offset=document.getLineStartOffset(line);
    final FoldRegion startCollapsed=foldingModel.getCollapsedRegionAtOffset(offset);
    return startCollapsed != null ? Math.min(offset,startCollapsed.getStartOffset()) : offset;
  }
 else {
    final int offset=document.getLineEndOffset(line);
    final FoldRegion startCollapsed=foldingModel.getCollapsedRegionAtOffset(offset);
    return startCollapsed != null ? Math.max(offset,startCollapsed.getEndOffset()) : offset;
  }
}
