{
  int startOffset=yPositionToOffset(scrollBarY - myMinMarkHeight,true);
  int endOffset=yPositionToOffset(scrollBarY + myMinMarkHeight,false);
  markupModel.processRangeHighlightersOverlappingWith(startOffset,endOffset,new Processor<RangeHighlighterEx>(){
    @Override public boolean process(    RangeHighlighterEx highlighter){
      if (highlighter.getErrorStripeMarkColor() != null) {
        ProperTextRange range=offsetsToYPositions(highlighter.getStartOffset(),highlighter.getEndOffset());
        if (scrollBarY >= range.getStartOffset() - myMinMarkHeight * 2 && scrollBarY <= range.getEndOffset() + myMinMarkHeight * 2) {
          nearest.add(highlighter);
        }
      }
      return true;
    }
  }
);
}
