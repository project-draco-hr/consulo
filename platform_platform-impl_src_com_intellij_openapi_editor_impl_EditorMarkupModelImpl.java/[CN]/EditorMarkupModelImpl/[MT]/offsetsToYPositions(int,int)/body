{
  if (!dimensionsAreValid) {
    recalcEditorDimensions();
  }
  Document document=myEditor.getDocument();
  int startLineNumber=end == -1 ? 0 : offsetToLine(start,document);
  int startY;
  int lineCount;
  if (myEditorSourceHeight < myEditorTargetHeight) {
    lineCount=0;
    startY=myEditorScrollbarTop + startLineNumber * myEditor.getLineHeight();
  }
 else {
    lineCount=myEditorSourceHeight / myEditor.getLineHeight();
    startY=myEditorScrollbarTop + (int)((float)startLineNumber / lineCount * myEditorTargetHeight);
  }
  int endY;
  int endLineNumber=offsetToLine(end,document);
  if (end == -1 || start == -1) {
    endY=Math.min(myEditorSourceHeight,myEditorTargetHeight);
  }
 else   if (start == end || offsetToLine(start,document) == endLineNumber) {
    endY=startY;
  }
 else {
    if (myEditorSourceHeight < myEditorTargetHeight) {
      endY=myEditorScrollbarTop + endLineNumber * myEditor.getLineHeight();
    }
 else {
      endY=myEditorScrollbarTop + (int)((float)endLineNumber / lineCount * myEditorTargetHeight);
    }
  }
  if (endY < startY)   endY=startY;
  if (startY < 0 || endY < 0) {
    LOGGER.error("Bad text range startY=" + startY + ", endY="+ endY+ ", myEditorSourceHeight="+ myEditorSourceHeight+ ", myEditorTargetHeight="+ myEditorTargetHeight+ ", myEditorScrollbarTop="+ myEditorScrollbarTop);
    return new ProperTextRange(0,0);
  }
  return new ProperTextRange(startY,endY);
}
