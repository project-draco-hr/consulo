{
  if (!mySettings.isChangeSignature())   return;
  PsiElement element=usage.getElement();
  if (element instanceof PsiReferenceExpression) {
    PsiReferenceExpression newRef=null;
    if (mySettings.isMakeFieldParameters()) {
      PsiElement resolved=((PsiReferenceExpression)element).resolve();
      if (resolved instanceof PsiField) {
        String name=mySettings.getNameForField((PsiField)resolved);
        if (name != null) {
          name=convertToFieldName(name);
          if (name != null) {
            newRef=(PsiReferenceExpression)factory.createExpressionFromText(name,null);
          }
        }
      }
    }
    if (newRef == null && mySettings.isMakeClassParameter()) {
      newRef=(PsiReferenceExpression)factory.createExpressionFromText(convertToFieldName(mySettings.getClassParameterName()) + "." + element.getText(),null);
    }
    if (newRef != null) {
      CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(myProject);
      newRef=(PsiReferenceExpression)codeStyleManager.reformat(newRef);
      element.replace(newRef);
    }
  }
 else   if (mySettings.isMakeClassParameter() && (element instanceof PsiThisExpression || element instanceof PsiSuperExpression)) {
    element.replace(factory.createExpressionFromText(convertToFieldName(mySettings.getClassParameterName()),null));
  }
 else   if (element instanceof PsiNewExpression && mySettings.isMakeClassParameter()) {
    final PsiNewExpression newExpression=((PsiNewExpression)element);
    LOG.assertTrue(newExpression.getQualifier() == null);
    final String newText=convertToFieldName(mySettings.getClassParameterName()) + "." + newExpression.getText();
    final PsiExpression expr=factory.createExpressionFromText(newText,null);
    element.replace(expr);
  }
}
