{
  final WeakReference reference=new WeakReference(listener);
  InvocationHandler handler=new InvocationHandler(){
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      Object o=reference.get();
      if (o == null) {
        if ("equals".equals(method.getName()))         return Boolean.FALSE;
        return null;
      }
      try {
        Object result=method.invoke(o,args);
        return result;
      }
 catch (      IllegalAccessException e) {
        LOG.error(e);
      }
catch (      IllegalArgumentException e) {
        LOG.error(e);
      }
catch (      InvocationTargetException e) {
        throw e.getTargetException();
      }
      return null;
    }
  }
;
  return (T)Proxy.newProxyInstance(listenerClass.getClassLoader(),new Class[]{listenerClass},handler);
}
