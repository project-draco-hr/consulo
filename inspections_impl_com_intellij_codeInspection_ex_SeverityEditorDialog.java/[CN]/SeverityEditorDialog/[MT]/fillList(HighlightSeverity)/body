{
  DefaultListModel model=new DefaultListModel();
  model.removeAllElements();
  final TreeSet<HighlightInfoType.HighlightInfoTypeImpl> infoTypes=new TreeSet<HighlightInfoType.HighlightInfoTypeImpl>(new Comparator<HighlightInfoType.HighlightInfoTypeImpl>(){
    public int compare(    final HighlightInfoType.HighlightInfoTypeImpl o1,    final HighlightInfoType.HighlightInfoTypeImpl o2){
      return -o1.getSeverity(null).compareTo(o2.getSeverity(null));
    }
  }
);
  infoTypes.addAll(SeverityRegistrar.getRegisteredHighlightingInfoTypes());
  infoTypes.add((HighlightInfoType.HighlightInfoTypeImpl)HighlightInfoType.ERROR);
  infoTypes.add((HighlightInfoType.HighlightInfoTypeImpl)HighlightInfoType.WARNING);
  infoTypes.add((HighlightInfoType.HighlightInfoTypeImpl)HighlightInfoType.INFO);
  final EditorColorsScheme scheme=EditorColorsManager.getInstance().getGlobalScheme();
  MyHighlightInfoTypeWithAtrributesDescription preselection=null;
  for (  HighlightInfoType.HighlightInfoTypeImpl type : infoTypes) {
    final MyHighlightInfoTypeWithAtrributesDescription typeWithAtrributesDescription=new MyHighlightInfoTypeWithAtrributesDescription(scheme.getAttributes(type.getAttributesKey()),type);
    model.addElement(typeWithAtrributesDescription);
    if (type.getSeverity(null).equals(severity)) {
      preselection=typeWithAtrributesDescription;
    }
  }
  myOptionsList.setModel(model);
  myOptionsList.setSelectedValue(preselection,true);
}
