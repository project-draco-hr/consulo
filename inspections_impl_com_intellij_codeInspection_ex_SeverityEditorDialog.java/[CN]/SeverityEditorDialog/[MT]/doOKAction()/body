{
  processListValueChanged((SeverityRegistrar.SeverityBasedTextAttributes)myOptionsList.getSelectedValue(),true);
  final Collection<HighlightInfoType.HighlightInfoTypeImpl> infoTypes=new HashSet<HighlightInfoType.HighlightInfoTypeImpl>(mySeverityRegistrar.getRegisteredHighlightingInfoTypes());
  Set<HighlightInfoType> currentTypes=new HashSet<HighlightInfoType>();
  final ListModel listModel=myOptionsList.getModel();
  final List<String> order=new ArrayList<String>();
  for (int i=0; i < listModel.getSize(); i++) {
    final SeverityRegistrar.SeverityBasedTextAttributes info=(SeverityRegistrar.SeverityBasedTextAttributes)listModel.getElementAt(i);
    order.add(info.getSeverity().myName);
    if (!isDefaultSetting(info.getType())) {
      currentTypes.add(info.getType());
      final Color stripeColor=info.getAttributes().getErrorStripeColor();
      mySeverityRegistrar.registerSeverity(info,stripeColor != null ? stripeColor : LightColors.YELLOW);
    }
  }
  infoTypes.removeAll(currentTypes);
  for (  HighlightInfoType.HighlightInfoTypeImpl info : infoTypes) {
    mySeverityRegistrar.unregisterSeverity(info.getSeverity(null));
  }
  mySeverityRegistrar.setOrder(order);
  super.doOKAction();
}
