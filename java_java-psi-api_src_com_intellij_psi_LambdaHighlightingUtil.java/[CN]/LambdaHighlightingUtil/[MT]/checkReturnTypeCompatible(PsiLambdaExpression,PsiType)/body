{
  if (functionalInterfaceReturnType == PsiType.VOID) {
    final PsiElement body=lambdaExpression.getBody();
    if (body instanceof PsiCodeBlock) {
      if (!LambdaUtil.getReturnExpressions(lambdaExpression).isEmpty())       return "Unexpected return value";
    }
 else     if (body instanceof PsiExpression) {
      final PsiType type=((PsiExpression)body).getType();
      if (type != PsiType.VOID) {
        return "Incompatible return type " + (type == PsiType.NULL || type == null ? "<null>" : type.getPresentableText()) + " in lambda expression";
      }
    }
  }
 else   if (functionalInterfaceReturnType != null) {
    final List<PsiExpression> returnExpressions=LambdaUtil.getReturnExpressions(lambdaExpression);
    for (    PsiExpression expression : returnExpressions) {
      final PsiType expressionType=expression.getType();
      if (expressionType != null && !functionalInterfaceReturnType.isAssignableFrom(expressionType)) {
        return "Incompatible return type " + expressionType.getPresentableText() + " in lambda expression";
      }
    }
    if (LambdaUtil.getReturnStatements(lambdaExpression).size() > returnExpressions.size() || returnExpressions.isEmpty() && !lambdaExpression.isVoidCompatible()) {
      return "Missing return value";
    }
  }
  return null;
}
