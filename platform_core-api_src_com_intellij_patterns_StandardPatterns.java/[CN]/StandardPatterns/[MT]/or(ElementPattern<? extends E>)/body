{
  return new ObjectPattern.Capture<E>(new InitialPatternConditionPlus(Object.class){
    @Override public boolean accepts(    @Nullable final Object o,    final ProcessingContext context){
      for (      final ElementPattern pattern : patterns) {
        if (pattern.getCondition().accepts(o,context))         return true;
      }
      return false;
    }
    @Override public void append(    @NotNull @NonNls final StringBuilder builder,    final String indent){
      boolean first=true;
      for (      final ElementPattern pattern : patterns) {
        if (!first) {
          builder.append("\n").append(indent);
        }
        first=false;
        pattern.getCondition().append(builder,indent + "  ");
      }
    }
    @Override public List<ElementPattern<?>> getPatterns(){
      return Arrays.<ElementPattern<?>>asList(patterns);
    }
  }
);
}
