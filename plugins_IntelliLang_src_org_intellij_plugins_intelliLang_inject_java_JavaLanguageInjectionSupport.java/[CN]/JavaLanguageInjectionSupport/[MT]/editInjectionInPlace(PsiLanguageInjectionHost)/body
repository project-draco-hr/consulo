{
  if (!isMine(psiElement))   return false;
  final Configuration configuration=Configuration.getInstance();
  final HashMap<BaseInjection,ConcatenationInjector.Info> injectionsMap=new HashMap<BaseInjection,ConcatenationInjector.Info>();
  final ArrayList<PsiAnnotation> annotations=new ArrayList<PsiAnnotation>();
  final PsiLiteralExpression host=(PsiLiteralExpression)psiElement;
  final Project project=host.getProject();
  collectInjections(host,configuration,injectionsMap,annotations);
  if (injectionsMap.isEmpty() || !annotations.isEmpty())   return false;
  final BaseInjection originalInjection=injectionsMap.keySet().iterator().next();
  final MethodParameterInjection methodParameterInjection=createMethodParameterInjection(originalInjection,injectionsMap.get(originalInjection).method,false);
  final MethodParameterInjection savedCopy=methodParameterInjection.copy();
  final AbstractInjectionPanel panel=new MethodParameterPanel(methodParameterInjection,project);
  panel.reset();
  final DialogBuilder builder=new DialogBuilder(project);
  builder.addOkAction();
  builder.addCancelAction();
  builder.setCenterPanel(panel.getComponent());
  builder.setTitle(EditInjectionSettingsAction.EDIT_INJECTION_TITLE);
  builder.setOkOperation(new Runnable(){
    public void run(){
      panel.apply();
      builder.getDialogWrapper().close(DialogWrapper.OK_EXIT_CODE);
    }
  }
);
  if (builder.show() == DialogWrapper.OK_EXIT_CODE) {
    methodParameterInjection.initializePlaces(false);
    savedCopy.initializePlaces(false);
    methodParameterInjection.mergeOriginalPlacesFrom(savedCopy,false);
    final BaseInjection newInjection=new BaseInjection(methodParameterInjection.getSupportId()).copyFrom(methodParameterInjection);
    newInjection.mergeOriginalPlacesFrom(originalInjection,true);
    final List<BaseInjection> newInjections=newInjection.isEnabled() ? Collections.singletonList(newInjection) : Collections.<BaseInjection>emptyList();
    Configuration.getInstance().replaceInjectionsWithUndo(project,newInjections,Collections.singletonList(originalInjection),Collections.<PsiAnnotation>emptyList());
  }
  return true;
}
