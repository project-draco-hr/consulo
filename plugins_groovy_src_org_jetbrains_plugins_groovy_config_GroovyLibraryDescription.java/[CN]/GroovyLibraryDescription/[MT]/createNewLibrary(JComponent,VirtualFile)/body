{
  final String envHome=System.getenv(myEnvVariable);
  VirtualFile initial=null;
  if (envHome != null && envHome.length() > 0) {
    initial=LocalFileSystem.getInstance().findFileByPath(FileUtil.toSystemIndependentName(envHome));
  }
  final VirtualFile[] files=FileChooser.chooseFiles(parentComponent,FileChooserDescriptorFactory.createSingleFolderDescriptor(),initial);
  if (files.length != 1)   return null;
  final VirtualFile dir=files[0];
  final GroovyLibraryPresentationProviderBase provider=findManager(dir);
  if (provider == null) {
    return null;
  }
  final String path=dir.getPath();
  final String sdkVersion=provider.getSDKVersion(path);
  if (AbstractConfigUtils.UNDEFINED_VERSION.equals(sdkVersion)) {
    return null;
  }
  return new NewLibraryConfiguration(provider.getLibraryPrefix() + "-" + sdkVersion){
    @Override public void addRoots(    @NotNull LibraryEditor editor){
      provider.fillLibrary(path,editor);
    }
  }
;
}
