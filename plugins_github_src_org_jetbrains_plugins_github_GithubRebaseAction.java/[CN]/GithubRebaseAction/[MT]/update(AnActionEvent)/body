{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (StringUtil.isEmptyOrSpaces(GithubSettings.getInstance().getLogin()) || project == null || project.isDefault()) {
    e.getPresentation().setEnabled(false);
    e.getPresentation().setVisible(false);
    return;
  }
  final GitRepository gitRepository=GitRepositoryManager.getInstance(project).getRepositoryForFile(project.getBaseDir());
  if (gitRepository == null) {
    e.getPresentation().setVisible(false);
    e.getPresentation().setEnabled(false);
    return;
  }
  final GitRemote gitHubRemoteBranch=GithubUtil.findGitHubRemoteBranch(gitRepository);
  if (gitHubRemoteBranch == null) {
    e.getPresentation().setVisible(false);
    e.getPresentation().setEnabled(false);
    return;
  }
  e.getPresentation().setVisible(true);
  e.getPresentation().setEnabled(true);
}
