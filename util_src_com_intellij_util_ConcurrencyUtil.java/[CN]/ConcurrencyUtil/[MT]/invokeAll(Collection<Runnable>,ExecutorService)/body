{
  if (executorService == null) {
    for (    Runnable task : tasks) {
      task.run();
    }
    return;
  }
  List<Future> futures=new ArrayList<Future>(tasks.size());
  boolean done=false;
  try {
    for (    Runnable t : tasks) {
      Future future=executorService.submit(t);
      futures.add(future);
    }
    for (    Future f : futures)     ((FutureTask)f).run();
    for (    Future f : futures) {
      try {
        f.get();
      }
 catch (      CancellationException ignore) {
      }
catch (      ExecutionException e) {
        Throwable cause=e.getCause();
        if (cause != null) {
          throw cause;
        }
      }
    }
    done=true;
  }
  finally {
    if (!done) {
      for (      Future f : futures) {
        f.cancel(false);
      }
    }
  }
}
