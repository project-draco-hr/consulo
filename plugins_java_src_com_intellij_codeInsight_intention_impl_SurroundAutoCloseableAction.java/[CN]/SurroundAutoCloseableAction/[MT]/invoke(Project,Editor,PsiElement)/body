{
  final PsiLocalVariable variable=PsiTreeUtil.getParentOfType(element,PsiLocalVariable.class);
  if (variable == null)   return;
  final PsiExpression initializer=variable.getInitializer();
  if (initializer == null)   return;
  final PsiElement declaration=variable.getParent();
  if (!(declaration instanceof PsiDeclarationStatement))   return;
  final PsiElement codeBlock=declaration.getParent();
  if (!(codeBlock instanceof PsiCodeBlock))   return;
  final LocalSearchScope scope=new LocalSearchScope(codeBlock);
  PsiElement last=null;
  for (  PsiReference reference : ReferencesSearch.search(variable,scope).findAll()) {
    final PsiElement usage=PsiTreeUtil.findPrevParent(codeBlock,reference.getElement());
    if ((last == null || usage.getTextOffset() > last.getTextOffset())) {
      last=usage;
    }
  }
  final String text="try (" + variable.getTypeElement().getText() + " "+ variable.getName()+ " = "+ initializer.getText()+ ") {}";
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
  final PsiTryStatement armStatement=(PsiTryStatement)declaration.replace(factory.createStatementFromText(text,codeBlock));
  List<PsiElement> toFormat=null;
  if (last != null) {
    final PsiElement first=armStatement.getNextSibling();
    if (first != null) {
      toFormat=moveStatements(first,last,armStatement);
    }
  }
  final CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(project);
  final PsiElement formattedElement=codeStyleManager.reformat(armStatement);
  if (toFormat != null) {
    for (    PsiElement psiElement : toFormat) {
      codeStyleManager.reformat(psiElement);
    }
  }
  if (last == null) {
    final PsiCodeBlock tryBlock=((PsiTryStatement)formattedElement).getTryBlock();
    if (tryBlock != null) {
      final PsiJavaToken brace=tryBlock.getLBrace();
      if (brace != null) {
        editor.getCaretModel().moveToOffset(brace.getTextOffset() + 1);
      }
    }
  }
}
