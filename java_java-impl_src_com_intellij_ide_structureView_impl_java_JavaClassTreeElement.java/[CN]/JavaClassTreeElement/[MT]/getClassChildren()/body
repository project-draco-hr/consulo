{
  final PsiClass aClass=getElement();
  if (aClass == null)   return Collections.emptyList();
  Collection<PsiElement> members=new ArrayList<PsiElement>();
  ContainerUtil.addAll(members,aClass.getFields());
  ContainerUtil.addAll(members,aClass.getMethods());
  ContainerUtil.addAll(members,aClass.getInnerClasses());
  ContainerUtil.addAll(members,aClass.getInitializers());
  List<StructureViewTreeElement> children=new ArrayList<StructureViewTreeElement>(members.size());
  for (  PsiElement child : members) {
    if (!child.isValid())     continue;
    if (child instanceof PsiClass && !myParents.contains((PsiClass)child)) {
      children.add(new JavaClassTreeElement((PsiClass)child,false,myParents));
    }
 else     if (child instanceof PsiField) {
      children.add(new PsiFieldTreeElement((PsiField)child,false));
    }
 else     if (child instanceof PsiMethod) {
      children.add(new PsiMethodTreeElement((PsiMethod)child,false));
    }
 else     if (child instanceof PsiClassInitializer) {
      children.add(new ClassInitializerTreeElement((PsiClassInitializer)child));
    }
  }
  return children;
}
