{
  PsiSearchHelper helper=PsiSearchHelper.SERVICE.getInstance(myProject);
  final List<PsiFile> filesList=new ArrayList<PsiFile>();
  final IntArrayList startsList=new IntArrayList();
  final IntArrayList endsList=new IntArrayList();
  helper.processUsagesInNonJavaFiles(originalElement,qNameToSearch,new PsiNonJavaFileReferenceProcessor(){
    @Override public boolean process(    PsiFile file,    int startOffset,    int endOffset){
      filesList.add(file);
      startsList.add(startOffset);
      endsList.add(endOffset);
      return true;
    }
  }
,GlobalSearchScope.projectScope(myProject));
  assertEquals("usages count",fileNames.length,filesList.size());
  for (int i=0; i < fileNames.length; i++) {
    assertEquals("files[" + i + "]",fileNames[i],filesList.get(i).getName());
  }
  for (int i=0; i < starts.length; i++) {
    assertEquals("starts[" + i + "]",starts[i],startsList.get(i));
  }
  for (int i=0; i < ends.length; i++) {
    assertEquals("ends[" + i + "]",ends[i],endsList.get(i));
  }
}
