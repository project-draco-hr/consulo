{
  AddModuleWizard dialog=new AddModuleWizard(null,ModulesProvider.EMPTY_MODULES_PROVIDER);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  final ProjectManagerEx projectManager=ProjectManagerEx.getInstanceEx();
  final String projectFilePath=dialog.getNewProjectFilePath();
  final Project newProject=projectManager.newProject(projectFilePath,true,false);
  final ProjectJdk jdk=dialog.getNewProjectJdk();
  if (jdk != null) {
    CommandProcessor.getInstance().executeCommand(newProject,new Runnable(){
      public void run(){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            final ProjectRootManagerEx projectRootManager=(ProjectRootManagerEx)ProjectRootManager.getInstance(newProject);
            projectRootManager.setProjectJdk(jdk);
            projectRootManager.setLanguageLevel(getDefaultLanguageLevel(jdk.getVersionString()));
          }
        }
);
      }
    }
,null,null);
  }
  newProject.save();
  Project[] openProjects=ProjectManager.getInstance().getOpenProjects();
  if (openProjects.length > 0) {
    int exitCode=Messages.showDialog("Would you like to open the project in a new frame?","New Project",new String[]{"_Yes","_No"},1,Messages.getQuestionIcon());
    if (exitCode == 1) {
      closeProject(projectToClose != null ? projectToClose : openProjects[openProjects.length - 1]);
    }
  }
  final ModuleBuilder moduleBuilder=dialog.getModuleBuilder();
  if (moduleBuilder != null) {
    Exception ex=ApplicationManager.getApplication().runWriteAction(new Computable<Exception>(){
      public Exception compute(){
        try {
          final ModifiableModuleModel moduleModel=ModuleManager.getInstance(newProject).getModifiableModel();
          final Module module=moduleBuilder.createModule(moduleModel);
          if (module != null) {
            moduleModel.commitAssertingNoCircularDependency();
          }
          return null;
        }
 catch (        Exception e) {
          return e;
        }
      }
    }
);
    if (ex != null) {
      Messages.showErrorDialog("Error adding module to project: " + ex.getMessage(),"Add Module");
    }
  }
 else {
    StartupManager.getInstance(newProject).registerPostStartupActivity(new Runnable(){
      public void run(){
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            ModulesConfigurator.showDialog(newProject,null,null,true);
          }
        }
);
      }
    }
);
  }
  updateLastProjectLocation(projectFilePath);
  projectManager.openProject(newProject);
}
