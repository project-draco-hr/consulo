{
  File file=new File(path);
  if (!file.exists()) {
    Messages.showMessageDialog("Cannot load " + path + ". The file does not exist.","Error",Messages.getErrorIcon());
    return null;
  }
  Project[] openProjects=ProjectManager.getInstance().getOpenProjects();
  for (int i=0; i < openProjects.length; i++) {
    Project project=openProjects[i];
    if (Comparing.equal(path,project.getProjectFilePath())) {
      return project;
    }
  }
  if (!forceOpenInNewFrame && openProjects.length > 0) {
    int exitCode=Messages.showDialog("Would you like to open the project in a new frame?","Open Project",new String[]{"_Yes","_No","Cancel"},1,Messages.getQuestionIcon());
    if (exitCode == 1) {
      if (!closeProject(projectToClose != null ? projectToClose : openProjects[openProjects.length - 1]))       return null;
    }
 else     if (exitCode != 0) {
      return null;
    }
  }
  ProjectManagerEx projectManager=ProjectManagerEx.getInstanceEx();
  Project project=null;
  try {
    project=projectManager.loadProject(path);
    projectManager.openProject(project);
  }
 catch (  IOException e) {
    Messages.showMessageDialog("Cannot load project: " + e.getMessage(),"Cannot Load Project",Messages.getErrorIcon());
  }
catch (  JDOMException e) {
    Messages.showMessageDialog("Project file is corrupted","Cannot Load Project",Messages.getErrorIcon());
  }
catch (  InvalidDataException e) {
    Messages.showMessageDialog("Project file is corrupted","Cannot Load Project",Messages.getErrorIcon());
  }
  return project;
}
