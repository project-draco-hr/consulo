{
  final List<Pair<PsiReferenceExpression,PsiParameter>> parameterReferences=new ArrayList<Pair<PsiReferenceExpression,PsiParameter>>();
  argument.accept(new PsiRecursiveElementVisitor(){
    public void visitReferenceExpression(    final PsiReferenceExpression expression){
      super.visitReferenceExpression(expression);
      final PsiElement psiElement=expression.resolve();
      if (psiElement instanceof PsiParameter) {
        parameterReferences.add(new Pair<PsiReferenceExpression,PsiParameter>(expression,(PsiParameter)psiElement));
      }
    }
  }
);
  for (  Pair<PsiReferenceExpression,PsiParameter> pair : parameterReferences) {
    PsiReferenceExpression ref=pair.first;
    PsiParameter param=pair.second;
    int index=constructorParameters.getParameterIndex(param);
    if (ref == argument) {
      argument=(PsiExpression)argument.replace(constructorArguments.getExpressions()[index]);
    }
 else {
      ref.replace(constructorArguments.getExpressions()[index]);
    }
  }
  return argument;
}
