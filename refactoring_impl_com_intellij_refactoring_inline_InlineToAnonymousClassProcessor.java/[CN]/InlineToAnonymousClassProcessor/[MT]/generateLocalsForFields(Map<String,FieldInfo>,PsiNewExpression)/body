{
  for (  Map.Entry<String,FieldInfo> e : fieldMap.entrySet()) {
    FieldInfo info=e.getValue();
    if (info.generateLocal) {
      final CodeStyleManager codeStyleManager=myClass.getManager().getCodeStyleManager();
      final String fieldName=e.getKey();
      String varName=codeStyleManager.variableNameToPropertyName(fieldName,VariableKind.FIELD);
      String localName=codeStyleManager.suggestUniqueVariableName(varName,newExpression,true);
      final PsiElementFactory factory=myClass.getManager().getElementFactory();
      try {
        final PsiDeclarationStatement declaration=factory.createVariableDeclarationStatement(localName,info.type,info.initializer);
        PsiVariable variable=(PsiVariable)declaration.getDeclaredElements()[0];
        variable.getModifierList().setModifierProperty(PsiModifier.FINAL,true);
        final PsiStatement newStatement=PsiTreeUtil.getParentOfType(newExpression,PsiStatement.class);
        if (newStatement != null) {
          newStatement.getParent().addBefore(declaration,newStatement);
        }
        info.localVar=variable;
      }
 catch (      IncorrectOperationException ex) {
        LOG.error(ex);
      }
    }
  }
}
