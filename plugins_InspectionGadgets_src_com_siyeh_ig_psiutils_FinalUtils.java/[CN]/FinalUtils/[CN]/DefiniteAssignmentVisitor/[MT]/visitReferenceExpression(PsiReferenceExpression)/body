{
  if (PsiType.BOOLEAN.equals(expression.getType())) {
    final Object constant=ExpressionUtils.computeConstantExpression(expression);
    if (Boolean.TRUE == constant) {
      this.constant=CONSTANT_TRUE;
    }
 else     if (Boolean.FALSE == constant) {
      this.constant=CONSTANT_FALSE;
    }
  }
  final PsiExpression qualifierExpression=expression.getQualifierExpression();
  if (qualifierExpression != null && !(qualifierExpression instanceof PsiThisExpression)) {
    final PsiElement target=expression.resolve();
    if (!field.equals(target)) {
      return;
    }
    if (isWriteAccess(expression)) {
      finalCandidate=false;
    }
    return;
  }
  if (isPrePostFixExpression(expression)) {
    final PsiElement target=expression.resolve();
    if (!field.equals(target)) {
      return;
    }
    if (!definitelyAssigned || !definitelyUnassigned) {
      finalCandidate=false;
    }
 else {
      definitelyUnassigned=false;
    }
  }
 else   if (isReadAccess(expression)) {
    final PsiElement target=expression.resolve();
    if (!field.equals(target)) {
      return;
    }
    if (!definitelyAssigned) {
      finalCandidate=false;
    }
  }
  super.visitReferenceExpression(expression);
}
