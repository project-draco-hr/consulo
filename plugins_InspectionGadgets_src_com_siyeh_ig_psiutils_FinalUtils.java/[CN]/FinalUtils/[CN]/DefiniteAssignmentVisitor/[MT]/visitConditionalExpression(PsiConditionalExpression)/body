{
  final PsiType type=expression.getType();
  final boolean booleanConditional=PsiType.BOOLEAN.equals(type);
  final PsiExpression condition=expression.getCondition();
  constant=NOT_CONSTANT;
  condition.accept(this);
  final byte constant=this.constant;
  final PsiExpression thenExpression=expression.getThenExpression();
  final PsiExpression elseExpression=expression.getElseExpression();
  final boolean da=definitelyAssigned;
  final boolean du=definitelyUnassigned;
  if (constant == CONSTANT_FALSE) {
    satisfyVacuously();
  }
  if (thenExpression != null) {
    thenExpression.accept(this);
  }
  final boolean thenDa=definitelyAssigned;
  final boolean thenDu=definitelyUnassigned;
  definitelyAssigned=da;
  definitelyUnassigned=du;
  byte constantOut=NOT_CONSTANT;
  if (constant == CONSTANT_TRUE) {
    if (booleanConditional) {
      constantOut=this.constant;
    }
    satisfyVacuously();
  }
  if (elseExpression != null) {
    elseExpression.accept(this);
  }
  if (constant == CONSTANT_TRUE) {
    definitelyAssigned=thenDa;
    definitelyUnassigned=thenDu;
    this.constant=constantOut;
  }
 else   if (constant != CONSTANT_FALSE) {
    definitelyAssigned&=thenDa;
    definitelyUnassigned&=thenDu;
    this.constant=NOT_CONSTANT;
  }
}
