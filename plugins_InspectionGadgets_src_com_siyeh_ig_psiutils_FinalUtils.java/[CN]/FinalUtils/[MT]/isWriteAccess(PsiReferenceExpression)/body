{
  final PsiElement parent=PsiTreeUtil.skipParentsOfType(expression,PsiParenthesizedExpression.class);
  if (parent instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)parent;
    final PsiExpression lhs=assignmentExpression.getLExpression();
    return PsiTreeUtil.isAncestor(lhs,expression,false);
  }
 else   if (parent instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)parent;
    final IElementType tokenType=prefixExpression.getOperationTokenType();
    return tokenType == JavaTokenType.PLUSPLUS || tokenType == JavaTokenType.MINUSMINUS;
  }
 else   if (parent instanceof PsiPostfixExpression) {
    final PsiPostfixExpression postfixExpression=(PsiPostfixExpression)parent;
    final IElementType tokenType=postfixExpression.getOperationTokenType();
    return tokenType == JavaTokenType.PLUSPLUS || tokenType == JavaTokenType.MINUSMINUS;
  }
  return false;
}
