{
  myErrorText=new ErrorText();
  myErrorText.setVisible(false);
  final JPanel root=new JPanel(new BorderLayout()){
    @Override public void paint(    Graphics g){
      UISettings.setupAntialiasing(g);
      super.paint(g);
    }
  }
;
  myPeer.setContentPane(root);
  final JPanel northSection=new JPanel(new BorderLayout());
  root.add(northSection,BorderLayout.NORTH);
  JComponent titlePane=createTitlePane();
  if (titlePane != null) {
    northSection.add(titlePane,BorderLayout.CENTER);
  }
  JComponent centerSection=new JPanel(new BorderLayout());
  root.add(centerSection,BorderLayout.CENTER);
  root.setBorder(createContentPaneBorder());
  final JComponent n=createNorthPanel();
  if (n != null) {
    centerSection.add(wrap(n,isNorthStrictedToPreferredSize()),BorderLayout.NORTH);
  }
  final JComponent c=createCenterPanel();
  if (c != null) {
    final JComponent wrap=wrap(c,isCenterStrictedToPreferredSize());
    centerSection.add(wrap,BorderLayout.CENTER);
    myErrorPane=wrap;
  }
  if (myErrorPane == null) {
    myErrorPane=root;
  }
  final JPanel southSection=new JPanel(new BorderLayout());
  root.add(southSection,BorderLayout.SOUTH);
  southSection.add(myErrorText,BorderLayout.CENTER);
  final JComponent south=createSouthPanel();
  if (south != null) {
    southSection.add(wrap(south,isSouthStrictedToPreferredSize()),BorderLayout.SOUTH);
  }
  new MnemonicHelper().register(root);
  if (!postponeValidation()) {
    startTrackingValidation();
  }
}
