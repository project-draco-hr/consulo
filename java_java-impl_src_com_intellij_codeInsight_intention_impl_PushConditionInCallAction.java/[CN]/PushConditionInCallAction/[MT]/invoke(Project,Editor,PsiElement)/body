{
  if (!CodeInsightUtilBase.preparePsiElementForWrite(element))   return;
  final PsiConditionalExpression conditionalExpression=PsiTreeUtil.getParentOfType(element,PsiConditionalExpression.class);
  final PsiExpression thenExpression=(PsiExpression)conditionalExpression.getThenExpression().copy();
  final PsiExpressionList thenArgsList=((PsiCallExpression)thenExpression).getArgumentList();
  final PsiExpression[] thenExpressions=thenArgsList.getExpressions();
  final PsiExpression elseExpression=conditionalExpression.getElseExpression();
  final PsiExpressionList elseArgsList=((PsiCallExpression)elseExpression).getArgumentList();
  final PsiExpression[] elseExpressions=elseArgsList.getExpressions();
  for (int i=0; i < thenExpressions.length; i++) {
    PsiExpression lExpr=thenExpressions[i];
    PsiExpression rExpr=elseExpressions[i];
    if (!PsiEquivalenceUtil.areElementsEquivalent(lExpr,rExpr)) {
      lExpr.replace(JavaPsiFacade.getElementFactory(project).createExpressionFromText(conditionalExpression.getCondition().getText() + "?" + lExpr.getText()+ ":"+ rExpr.getText(),lExpr));
      break;
    }
  }
  CodeStyleManager.getInstance(project).reformat(conditionalExpression.replace(thenExpression));
}
