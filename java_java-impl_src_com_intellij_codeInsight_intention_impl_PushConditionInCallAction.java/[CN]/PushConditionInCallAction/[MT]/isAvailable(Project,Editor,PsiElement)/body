{
  if (element instanceof PsiCompiledElement)   return false;
  if (!element.getManager().isInProject(element))   return false;
  final PsiConditionalExpression conditionalExpression=PsiTreeUtil.getParentOfType(element,PsiConditionalExpression.class);
  if (conditionalExpression == null)   return false;
  final PsiExpression thenExpression=conditionalExpression.getThenExpression();
  if (!(thenExpression instanceof PsiCallExpression))   return false;
  final PsiMethod thenMethod=((PsiCallExpression)thenExpression).resolveMethod();
  final PsiExpressionList thenArgsList=((PsiCallExpression)thenExpression).getArgumentList();
  if (thenArgsList == null)   return false;
  final PsiExpression[] thenExpressions=thenArgsList.getExpressions();
  final PsiExpression elseExpression=conditionalExpression.getElseExpression();
  if (!(elseExpression instanceof PsiCallExpression))   return false;
  final PsiMethod elseMethod=((PsiCallExpression)elseExpression).resolveMethod();
  final PsiExpressionList elseArgsList=((PsiCallExpression)elseExpression).getArgumentList();
  if (elseArgsList == null)   return false;
  final PsiExpression[] elseExpressions=elseArgsList.getExpressions();
  if (thenMethod != elseMethod || thenMethod == null)   return false;
  if (thenExpressions.length != elseExpressions.length)   return false;
  PsiExpression tExpr=null;
  PsiExpression eExpr=null;
  for (int i=0; i < thenExpressions.length; i++) {
    PsiExpression lExpr=thenExpressions[i];
    PsiExpression rExpr=elseExpressions[i];
    if (!PsiEquivalenceUtil.areElementsEquivalent(lExpr,rExpr)) {
      if (tExpr == null || eExpr == null) {
        tExpr=lExpr;
        eExpr=rExpr;
      }
 else {
        return false;
      }
    }
  }
  setText("Push condition '" + conditionalExpression.getCondition().getText() + "' inside "+ (thenMethod.isConstructor() ? "constructor" : "method")+ " call");
  return true;
}
