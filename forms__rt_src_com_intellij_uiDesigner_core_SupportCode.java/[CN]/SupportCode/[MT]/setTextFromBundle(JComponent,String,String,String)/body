{
  if (component == null) {
    throw new IllegalArgumentException("component cannot be null");
  }
  if (setterName == null) {
    throw new IllegalArgumentException("setterName cannot be null");
  }
  if (bundle == null) {
    throw new IllegalArgumentException("bundle cannot be null");
  }
  if (key == null) {
    throw new IllegalArgumentException("key cannot be null");
  }
  ClassLoader loader=null;
  try {
    loader=ourGetCallerClassLoaderMethod != null ? (ClassLoader)ourGetCallerClassLoaderMethod.invoke(null,EMPTY_OBJECT_ARRAY) : null;
  }
 catch (  IllegalAccessException e1) {
    e1.printStackTrace();
  }
catch (  InvocationTargetException e11) {
    e11.printStackTrace();
  }
  final String text=getResourceString(bundle,key,loader);
  final TextWithMnemonic textWithMnemonic=SupportCode.parseText(text);
  try {
    final Method setter=component.getClass().getMethod(setterName,new Class[]{String.class});
    setter.invoke(component,new Object[]{textWithMnemonic.myText});
  }
 catch (  Exception e) {
    throw new RuntimeException(e.toString());
  }
  if (textWithMnemonic.myMnemonicIndex != -1) {
    if (setterName.equals("setText")) {
      if (component instanceof JLabel) {
        final JLabel label=(JLabel)component;
        label.setDisplayedMnemonic(textWithMnemonic.getMnemonicChar());
        setDisplayedMnemonicIndex(label,textWithMnemonic.myMnemonicIndex);
      }
 else       if (component instanceof AbstractButton) {
        final AbstractButton button=(AbstractButton)component;
        button.setMnemonic(textWithMnemonic.getMnemonicChar());
        setDisplayedMnemonicIndex(button,textWithMnemonic.myMnemonicIndex);
      }
    }
  }
}
