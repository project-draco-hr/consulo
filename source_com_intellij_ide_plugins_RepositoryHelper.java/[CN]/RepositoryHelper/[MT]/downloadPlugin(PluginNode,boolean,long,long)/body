{
  ApplicationInfoEx ideInfo=(ApplicationInfoEx)ApplicationInfo.getInstance();
  String buildNumber="";
  try {
    buildNumber=Integer.valueOf(ideInfo.getBuildNumber()).toString();
  }
 catch (  NumberFormatException e) {
    buildNumber="3000";
  }
  String url=DOWNLOAD_URL + URLEncoder.encode(pluginNode.getName(),"UTF8") + "&build="+ buildNumber;
  HttpURLConnection connection=(HttpURLConnection)new URL(url).openConnection();
  final ProgressIndicator pi=ProgressManager.getInstance().getProgressIndicator();
  InputStream is=getConnectionInputStream(connection);
  if (is == null)   return null;
  pi.setText("Downloading plugin '" + pluginNode.getName() + "'");
  File file=File.createTempFile("plugin","download",new File(PathManagerEx.getPluginTempPath()));
  OutputStream fos=new BufferedOutputStream(new FileOutputStream(file,false));
  int responseCode=connection.getResponseCode();
switch (responseCode) {
case HttpURLConnection.HTTP_OK:
    break;
default :
  throw new IOException("Connection failed with HTTP code " + responseCode);
}
if (pluginNode.getSize().equals("-1")) {
if (connection.getContentLength() == -1) pi.setIndeterminate(true);
 else pluginNode.setSize(Integer.toString(connection.getContentLength()));
}
boolean cleanFile=true;
try {
is=new ProgressStream(packet ? count : 0,packet ? available : Integer.valueOf(pluginNode.getSize()).intValue(),is,pi);
int c;
while ((c=is.read()) != -1) {
  if (pi.isCanceled())   throw new RuntimeException(new InterruptedException());
  fos.write(c);
}
cleanFile=false;
}
 catch (RuntimeException e) {
if (e.getCause() != null && e.getCause() instanceof InterruptedException) return null;
 else throw e;
}
 finally {
fos.close();
if (cleanFile) file.delete();
}
String fileName=null;
String contentDisposition=connection.getHeaderField("Content-Disposition");
if (contentDisposition == null) {
String usedURL=connection.getURL().toString();
int startPos=usedURL.lastIndexOf("/");
fileName=usedURL.substring(startPos + 1);
}
 else {
int startIdx=contentDisposition.indexOf(FILENAME);
if (startIdx != -1) fileName=contentDisposition.substring(startIdx + FILENAME.length(),contentDisposition.length() - 1);
 else throw new IllegalArgumentException(contentDisposition);
}
connection.disconnect();
File newFile=new File(file.getParentFile(),fileName);
FileUtil.rename(file,newFile);
return newFile;
}
