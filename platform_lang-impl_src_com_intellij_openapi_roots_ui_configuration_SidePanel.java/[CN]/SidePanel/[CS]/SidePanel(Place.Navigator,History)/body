{
  myHistory=history;
  myNavigator=navigator;
  setLayout(new BorderLayout());
  myModel=new DefaultListModel();
  myList=new JBList(myModel);
  myList.setBorder(new EmptyBorder(5,0,0,0));
  final ListItemDescriptor descriptor=new ListItemDescriptor(){
    @Override public String getTextFor(    final Object value){
      return myPlace2Presentation.get(value).getText();
    }
    @Override public String getTooltipFor(    final Object value){
      return getTextFor(value);
    }
    @Override public Icon getIconFor(    final Object value){
      return null;
    }
    @Override public boolean hasSeparatorAboveOf(    final Object value){
      final int index=myPlaces.indexOf(value);
      return myIndex2Separator.get(index) != null;
    }
    @Override public String getCaptionAboveOf(    final Object value){
      return myIndex2Separator.get(myPlaces.indexOf(value));
    }
  }
;
  myList.setCellRenderer(new GroupedItemsListRenderer(descriptor));
  add(ScrollPaneFactory.createScrollPane(myList,true),BorderLayout.CENTER);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    final ListSelectionEvent e){
      if (e.getValueIsAdjusting())       return;
      final Object value=myList.getSelectedValue();
      if (value != null) {
        myNavigator.navigateTo(((Place)value),false);
      }
    }
  }
);
}
