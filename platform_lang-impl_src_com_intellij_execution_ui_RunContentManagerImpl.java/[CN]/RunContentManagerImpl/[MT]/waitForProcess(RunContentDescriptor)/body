{
  ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      final Semaphore semaphore=new Semaphore();
      semaphore.down();
      ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
        public void run(){
          final ProcessHandler processHandler=descriptor.getProcessHandler();
          try {
            if (processHandler != null) {
              processHandler.waitFor();
            }
          }
  finally {
            semaphore.up();
          }
        }
      }
);
      final ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
      if (progressIndicator != null) {
        progressIndicator.setText(ExecutionBundle.message("waiting.for.vm.detach.progress.text"));
        ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
          public void run(){
            while (true) {
              if (progressIndicator.isCanceled() || !progressIndicator.isRunning()) {
                semaphore.up();
                break;
              }
              try {
synchronized (this) {
                  wait(2000L);
                }
              }
 catch (              InterruptedException ignore) {
              }
            }
          }
        }
);
      }
      semaphore.waitFor();
    }
  }
,ExecutionBundle.message("terminating.process.progress.title",descriptor.getDisplayName()),true,myProject);
}
