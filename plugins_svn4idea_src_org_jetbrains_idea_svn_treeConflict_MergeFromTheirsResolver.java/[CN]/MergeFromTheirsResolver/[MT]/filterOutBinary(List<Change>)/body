{
  List<Change> result=null;
  for (Iterator<Change> iterator=paths.iterator(); iterator.hasNext(); ) {
    final Change change=iterator.next();
    if (ChangesUtil.isBinaryChange(change)) {
      result=(result == null ? new SmartList<Change>() : result);
      result.add(change);
      iterator.remove();
    }
  }
  return result;
}
