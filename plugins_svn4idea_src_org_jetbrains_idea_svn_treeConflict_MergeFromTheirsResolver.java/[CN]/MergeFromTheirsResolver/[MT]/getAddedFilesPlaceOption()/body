{
  final SvnConfiguration configuration=SvnConfiguration.getInstance(myVcs.getProject());
  boolean add=Boolean.TRUE.equals(configuration.TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE);
  if (configuration.TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE == null) {
    if (!containAdditions(myTheirsChanges) && !containAdditions(myTheirsBinaryChanges))     return false;
    final int i=Messages.showYesNoDialog("Keep newly created file(s) in their original place?",TreeConflictRefreshablePanel.TITLE,"Keep","Move",Messages.getQuestionIcon(),new DialogWrapper.DoNotAskOption(){
      @Override public boolean isToBeShown(){
        return true;
      }
      @Override public void setToBeShown(      boolean value,      int exitCode){
        if (!value) {
          if (exitCode == 0) {
            configuration.TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE=true;
          }
 else {
            configuration.TREE_CONFLICT_MERGE_THEIRS_NEW_INTO_OLD_PLACE=false;
          }
        }
      }
      @Override public boolean canBeHidden(){
        return true;
      }
      @Override public boolean shouldSaveOptionsOnCancel(){
        return true;
      }
      @Override public String getDoNotShowMessage(){
        return CommonBundle.message("dialog.options.do.not.ask");
      }
    }
);
    add=Messages.YES == i;
  }
  return add;
}
