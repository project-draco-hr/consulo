{
  final List<Change> changesForPatch;
  try {
    final List<CommittedChangeList> lst=loadSvnChangeListsForPatch(myDescription);
    changesForPatch=CommittedChangesTreeBrowser.collectChanges(lst,true);
    for (    Change change : changesForPatch) {
      if (change.getBeforeRevision() != null) {
        preloadRevisionContents(change.getBeforeRevision());
      }
      if (change.getAfterRevision() != null) {
        preloadRevisionContents(change.getAfterRevision());
      }
    }
  }
 catch (  VcsException e) {
    context.handleException(e,true);
    return;
  }
  final List<Change> binaryChanges=filterOutBinary(changesForPatch);
  if (binaryChanges != null && !binaryChanges.isEmpty()) {
    myTheirsBinaryChanges.addAll(binaryChanges);
  }
  if (!changesForPatch.isEmpty()) {
    myTheirsChanges.addAll(changesForPatch);
  }
}
