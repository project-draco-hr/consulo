{
  GrStatement stmt=call;
  PsiElement parent=call.getParent();
  if (parent instanceof GrReturnStatement) {
    stmt=((GrReturnStatement)parent);
    parent=parent.getParent();
  }
  if (parent instanceof GrOpenBlock) {
    if (parent.getParent() instanceof GrMethod) {
      GrStatement[] statements=((GrOpenBlock)parent).getStatements();
      return statements.length > 0 && stmt == statements[statements.length - 1];
    }
  }
  if (parent instanceof GrClosableBlock) {
    GrStatement[] statements=((GrClosableBlock)parent).getStatements();
    return statements.length > 0 && stmt == statements[statements.length - 1];
  }
  if (stmt instanceof GrReturnStatement) {
    GrMethod method=PsiTreeUtil.getParentOfType(stmt,GrMethod.class);
    if (method != null) {
      Collection<GrReturnStatement> returnStatements=GroovyRefactoringUtil.findReturnStatements(method);
      return returnStatements.contains(stmt) && !hasBadReturns(method);
    }
  }
  return false;
}
