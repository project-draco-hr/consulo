{
  if (argInfo == null)   return null;
  List<PsiElement> arguments=argInfo.args;
  if (argInfo.isMultiArg) {
    final PsiType type=parameter.getDeclaredType();
    return GroovyRefactoringUtil.generateArgFromMultiArg(signature.getSubstitutor(),arguments,type,project);
  }
 else {
    if (arguments.size() == 1) {
      PsiElement arg=arguments.iterator().next();
      if (isVararg(parameter,parameters)) {
        if (arg instanceof GrSafeCastExpression) {
          PsiElement expr=((GrSafeCastExpression)arg).getOperand();
          if (expr instanceof GrListOrMap && !((GrListOrMap)expr).isMap()) {
            return ((GrListOrMap)expr);
          }
        }
      }
      return (GrExpression)arg;
    }
 else {
      return parameter.getDefaultInitializer();
    }
  }
}
