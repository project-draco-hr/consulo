{
  if (!isTestMode() && ApplicationManager.getApplication().isHeadlessEnvironment()) {
    throw new MasterPasswordUnavailableException("The provider is not available in headless environment");
  }
  if (key.get() == null) {
    if (isPasswordEncrypted()) {
      try {
        String s=decryptPassword(database.getPasswordInfo());
        setMasterPassword(s);
      }
 catch (      PasswordSafeException e) {
      }
    }
    if (key.get() == null) {
      final Ref<PasswordSafeException> ex=new Ref<PasswordSafeException>();
      GuiUtils.invokeAndWaitIfNeeded(new Runnable(){
        public void run(){
          if (key.get() == null) {
            try {
              if (isTestMode()) {
                throw new MasterPasswordUnavailableException("Master password must be specified in test mode.");
              }
              if (database.isEmpty()) {
                if (!ResetPasswordDialog.newPassword(project,MasterKeyPasswordSafe.this)) {
                  throw new MasterPasswordUnavailableException("Master password is required to store passwords in the database.");
                }
              }
 else {
                MasterPasswordDialog.askPassword(project,MasterKeyPasswordSafe.this);
              }
            }
 catch (            PasswordSafeException e) {
              ex.set(e);
            }
catch (            Exception e) {
              ex.set(new MasterPasswordUnavailableException("The problem with retrieving the password",e));
            }
          }
        }
      }
,ModalityState.defaultModalityState());
      if (ex.get() != null) {
        throw ex.get();
      }
    }
  }
  return this.key.get();
}
