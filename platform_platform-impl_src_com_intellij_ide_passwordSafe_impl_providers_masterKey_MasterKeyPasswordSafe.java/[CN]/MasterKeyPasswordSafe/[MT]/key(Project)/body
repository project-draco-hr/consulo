{
  if (ApplicationManager.getApplication().isHeadlessEnvironment()) {
    throw new MasterPasswordUnavailableException("The provider is not available in headless environment");
  }
  if (key.get() == null) {
    final Ref<PasswordSafeException> ex=new Ref<PasswordSafeException>();
    UIUtil.invokeAndWaitIfNeeded(new Runnable(){
      public void run(){
        if (key.get() == null) {
          try {
            if (database.isEmpty()) {
              ResetPasswordDialog.newPassword(project,MasterKeyPasswordSafe.this);
            }
 else {
              if (isPasswordEncrypted()) {
                try {
                  String s=decryptPassword(database.getPasswordInfo());
                  if (setMasterPassword(s)) {
                    return;
                  }
                }
 catch (                PasswordSafeException e) {
                }
              }
              MasterPasswordDialog.askPassword(project,MasterKeyPasswordSafe.this);
            }
          }
 catch (          PasswordSafeException e) {
            ex.set(e);
          }
catch (          Exception e) {
            ex.set(new MasterPasswordUnavailableException("The problem with retrieving the password",e));
          }
        }
      }
    }
);
    if (ex.get() != null) {
      throw ex.get();
    }
  }
  return this.key.get();
}
