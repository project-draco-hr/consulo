{
  final PsiModifierListOwner listOwner=getContainer(editor,file);
  final ExternalAnnotationsManager annotationsManager=ExternalAnnotationsManager.getInstance(project);
  final PsiAnnotation[] externalAnnotations=annotationsManager.findExternalAnnotations(listOwner);
  JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<PsiAnnotation>(CodeInsightBundle.message("deannotate.intention.chooser.title"),externalAnnotations){
    public PopupStep onChosen(    final PsiAnnotation selectedValue,    final boolean finalChoice){
      new WriteCommandAction(project){
        protected void run(        final Result result) throws Throwable {
          final VirtualFile virtualFile=file.getVirtualFile();
          if (annotationsManager.deannotate(listOwner,selectedValue.getQualifiedName()) && virtualFile != null && virtualFile.isInLocalFileSystem()) {
            UndoUtil.markPsiFileForUndo(file);
          }
        }
      }
.execute();
      return PopupStep.FINAL_CHOICE;
    }
    @NotNull public String getTextFor(    final PsiAnnotation value){
      final String qualifiedName=value.getQualifiedName();
      LOG.assertTrue(qualifiedName != null);
      return qualifiedName;
    }
  }
).showInBestPositionFor(editor);
}
