{
  int i, j, k, x, tmp, jj, kk;
  if (len < 16) {
    for (k=start; k < start + len; k+=j) {
      j=1;
      x=V[I[k] + h];
      for (i=1; k + i < start + len; i++) {
        if (V[I[k + i] + h] < x) {
          x=V[I[k + i] + h];
          j=0;
        }
        if (V[I[k + i] + h] == x) {
          tmp=I[k + j];
          I[k + j]=I[k + i];
          I[k + i]=tmp;
          j++;
        }
      }
      for (i=0; i < j; i++) {
        V[I[k + i]]=k + j - 1;
      }
      if (j == 1) {
        I[k]=-1;
      }
    }
    return;
  }
  x=V[I[start + len / 2] + h];
  jj=0;
  kk=0;
  for (i=start; i < start + len; i++) {
    if (V[I[i] + h] < x) {
      jj++;
    }
    if (V[I[i] + h] == x) {
      kk++;
    }
  }
  jj+=start;
  kk+=jj;
  i=start;
  j=0;
  k=0;
  while (i < jj) {
    if (V[I[i] + h] < x) {
      i++;
    }
 else     if (V[I[i] + h] == x) {
      tmp=I[i];
      I[i]=I[jj + j];
      I[jj + j]=tmp;
      j++;
    }
 else {
      tmp=I[i];
      I[i]=I[kk + k];
      I[kk + k]=tmp;
      k++;
    }
  }
  while (jj + j < kk) {
    if (V[I[jj + j] + h] == x) {
      j++;
    }
 else {
      tmp=I[jj + j];
      I[jj + j]=I[kk + k];
      I[kk + k]=tmp;
      k++;
    }
  }
  if (jj > start) {
    split(I,V,start,jj - start,h);
  }
  for (i=0; i < kk - jj; i++) {
    V[I[jj + i]]=kk - 1;
  }
  if (jj == kk - 1) {
    I[jj]=-1;
  }
  if (start + len > kk) {
    split(I,V,kk,start + len - kk,h);
  }
}
