{
  final HashMap<String,String[]> graph=new HashMap<String,String[]>();
  graph.put("a",new String[]{"c"});
  graph.put("b",new String[]{"a"});
  graph.put("c",new String[]{"e"});
  graph.put("d",new String[]{"b"});
  graph.put("e",new String[]{"d","f","a"});
  graph.put("f",new String[]{"d"});
  myGraph=new GraphGenerator<String>(new GraphGenerator.SemiGraph<String>(){
    public Collection<String> getNodes(){
      return graph.keySet();
    }
    public Iterator<String> getIn(    final String n){
      String[] in=graph.get(n);
      if (in == null) {
        in=ArrayUtil.EMPTY_STRING_ARRAY;
      }
      return Arrays.asList(in).iterator();
    }
  }
);
  final ShortestPathUtil<String> algorithm=new ShortestPathUtil<String>(myGraph);
  final List<String> shortestPath=algorithm.getShortestPath("c","b");
  checkResult(new String[]{"b","d","e","c"},shortestPath);
}
