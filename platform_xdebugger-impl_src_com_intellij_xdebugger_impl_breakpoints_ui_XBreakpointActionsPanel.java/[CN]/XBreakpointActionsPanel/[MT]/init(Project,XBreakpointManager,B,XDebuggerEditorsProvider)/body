{
  init(project,breakpointManager,breakpoint);
  if (debuggerEditorsProvider != null) {
    ActionListener listener=new ActionListener(){
      public void actionPerformed(      final ActionEvent e){
        onCheckboxChanged();
      }
    }
;
    if (debuggerEditorsProvider instanceof XDebuggerComboBoxProvider) {
      logExpressionPanel=((XDebuggerComboBoxProvider<B>)debuggerEditorsProvider).createLogExpressionComboBoxPanel(project,debuggerEditorsProvider,DefaultLogExpressionComboBoxPanel.HISTORY_KEY,myBreakpoint.getSourcePosition());
    }
 else {
      logExpressionPanel=new DefaultLogExpressionComboBoxPanel<B>(project,debuggerEditorsProvider,myBreakpoint.getSourcePosition());
    }
    JComponent logExpressionComponent=logExpressionPanel.getComponent();
    myLogExpressionPanel.add(logExpressionComponent,BorderLayout.CENTER);
    logExpressionComponent.setEnabled(false);
    myTemporaryCheckBox.setVisible(breakpoint instanceof XLineBreakpoint);
    myLogExpressionCheckBox.addActionListener(listener);
    DebuggerUIUtil.focusEditorOnCheck(myLogExpressionCheckBox,logExpressionComponent);
  }
 else {
    myLogExpressionCheckBox.setVisible(false);
  }
}
