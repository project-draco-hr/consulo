{
  if (!hasAllEditors())   return;
  if (myMergeList != null)   return;
  myMergeList=MergeList.create(myData);
  myMergeList.addListener(myDividersRepainter);
  myStatusUpdater=StatusUpdater.install(myMergeList,myPanel);
  Editor left=getEditor(0);
  Editor base=getEditor(1);
  Editor right=getEditor(2);
  setupHighlighterSettings(left,base,right);
  myMergeList.setMarkups(left,base,right);
  EditingSides[] sides={getFirstEditingSide(),getSecondEditingSide()};
  EditingSides[] sidesWithApplied={getFirstEditingSide(true),getSecondEditingSide(true)};
  myScrollSupport.install(sides);
  for (int i=0; i < myDividers.length; i++) {
    myDividers[i].listenEditors(sidesWithApplied[i]);
  }
  if (myScrollToFirstDiff) {
    myPanel.requestScrollEditors();
  }
  if (myMergeList.getErrorMessage() != null) {
    myPanel.insertTopComponent(new EditorNotificationPanel(){
{
        myLabel.setText(myMergeList.getErrorMessage());
      }
    }
);
  }
}
