{
  if (!(element instanceof PsiFileSystemItem))   throw new IncorrectOperationException("Cannot bind to element");
  final VirtualFile dstVFile=PsiUtil.getVirtualFile(element);
  final AntStructuredElement se=getElement();
  final PsiFile file=se.getContainingFile();
  if (dstVFile == null)   throw new IncorrectOperationException("Cannot bind to non-physical element:" + element);
  VirtualFile currentFile=file.getVirtualFile();
  if (!(se instanceof AntImport)) {
    final String baseDir=se.getAntProject().getBaseDir();
    if (baseDir != null && baseDir.length() > 0) {
      final File f=new File(currentFile.getParent().getPath(),baseDir);
      currentFile=LocalFileSystem.getInstance().findFileByPath(f.getAbsolutePath().replace(File.separatorChar,'/'));
    }
  }
  final String newName=VfsUtil.getPath(currentFile,dstVFile,'/');
  if (newName == null) {
    throw new IncorrectOperationException("Cannot find path between files; src = " + currentFile.getPresentableUrl() + "; dst = "+ dstVFile.getPresentableUrl());
  }
  final PsiElement me=getManipulatorElement();
  TextRange range=new TextRange(getFileReferenceSet().getStartInElement(),getRangeInElement().getEndOffset());
  range=range.shiftRight(se.getTextRange().getStartOffset() - me.getTextRange().getStartOffset());
  return getManipulator(me).handleContentChange(me,range,newName);
}
