{
  final int EPSILON=4;
  final RadContainer container=FormEditingUtil.getRadContainerAt(myEditor,x,y,EPSILON);
  if (container == null || !container.isGrid()) {
    return new GridInsertLocation(GridInsertMode.None);
  }
  final GridLayoutManager grid=(GridLayoutManager)container.getLayout();
  final Point targetPoint=SwingUtilities.convertPoint(myEditor.getDragLayer(),x,y,container.getDelegee());
  int[] xs=grid.getXs();
  int[] ys=grid.getYs();
  int[] widths=grid.getWidths();
  int[] heights=grid.getHeights();
  int[] horzGridLines=grid.getHorizontalGridLines();
  int[] vertGridLines=grid.getVerticalGridLines();
  int row=ys.length - 1, col=xs.length - 1;
  for (int i=0; i < xs.length; i++) {
    if (targetPoint.getX() < xs[i] + widths[i]) {
      col=i;
      break;
    }
  }
  for (int i=0; i < ys.length; i++) {
    if (targetPoint.getY() < ys[i] + heights[i]) {
      row=i;
      break;
    }
  }
  GridInsertMode mode=GridInsertMode.None;
  int dx=(int)(targetPoint.getX() - xs[col]);
  if (dx < EPSILON) {
    mode=GridInsertMode.ColumnBefore;
  }
 else   if (widths[col] - dx < EPSILON) {
    mode=GridInsertMode.ColumnAfter;
  }
  int dy=(int)(targetPoint.getY() - ys[row]);
  if (dy < EPSILON) {
    mode=GridInsertMode.RowBefore;
  }
 else   if (heights[row] - dy < EPSILON) {
    mode=GridInsertMode.RowAfter;
  }
  Rectangle cellRect=new Rectangle(vertGridLines[col],horzGridLines[row],vertGridLines[col + 1] - vertGridLines[col],horzGridLines[row + 1] - horzGridLines[row]);
  if ((mode == GridInsertMode.RowBefore || mode == GridInsertMode.RowAfter) && col >= dragColumnDelta) {
    col-=dragColumnDelta;
  }
  return new GridInsertLocation(container,row,col,cellRect,mode);
}
