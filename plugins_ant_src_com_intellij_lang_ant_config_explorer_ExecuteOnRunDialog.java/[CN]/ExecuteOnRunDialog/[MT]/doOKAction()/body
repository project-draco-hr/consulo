{
  final RunManagerImpl runManager=(RunManagerImpl)RunManagerEx.getInstanceEx(myProject);
  for (Enumeration nodes=myRoot.depthFirstEnumeration(); nodes.hasMoreElements(); ) {
    final DefaultMutableTreeNode node=(DefaultMutableTreeNode)nodes.nextElement();
    final Descriptor descriptor=(Descriptor)node.getUserObject();
    final boolean isChecked=descriptor.isChecked();
    final String targetName;
    final String antfileUrl;
    if (isChecked) {
      final VirtualFile vFile=myTarget.getModel().getBuildFile().getVirtualFile();
      targetName=vFile != null ? myTarget.getName() : null;
      antfileUrl=vFile != null ? vFile.getUrl() : null;
    }
 else {
      targetName=null;
      antfileUrl=null;
    }
    if (descriptor instanceof ConfigurationTypeDescriptor) {
      final ConfigurationTypeDescriptor configurationTypeDescriptor=(ConfigurationTypeDescriptor)descriptor;
      for (      ConfigurationFactory factory : configurationTypeDescriptor.getConfigurationType().getConfigurationFactories()) {
        final RunnerAndConfigurationSettingsImpl settings=runManager.getConfigurationTemplate(factory);
        final AntBeforeRunTask task=runManager.getBeforeRunTask(settings.getConfiguration(),AntBeforeRunTaskProvider.ID);
        if (task != null && (isChecked || task.isRunningTarget(myTarget))) {
          task.setEnabled(isChecked);
          task.setAntFileUrl(antfileUrl);
          task.setTargetName(targetName);
        }
      }
    }
 else     if (descriptor instanceof ConfigurationDescriptor) {
      final ConfigurationDescriptor configurationDescriptor=(ConfigurationDescriptor)descriptor;
      final AntBeforeRunTask task=runManager.getBeforeRunTask(configurationDescriptor.getConfiguration(),AntBeforeRunTaskProvider.ID);
      if (task != null && (isChecked || task.isRunningTarget(myTarget))) {
        task.setEnabled(isChecked);
        task.setAntFileUrl(antfileUrl);
        task.setTargetName(targetName);
      }
    }
  }
  close(OK_EXIT_CODE);
}
