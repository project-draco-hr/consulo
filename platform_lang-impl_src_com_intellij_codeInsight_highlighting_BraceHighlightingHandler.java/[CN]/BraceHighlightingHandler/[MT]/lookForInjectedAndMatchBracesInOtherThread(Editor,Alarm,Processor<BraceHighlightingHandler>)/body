{
  if (!PROCESSED_EDITORS.add(editor)) {
    return;
  }
  final Project project=editor.getProject();
  if (project == null)   return;
  final int offset=editor.getCaretModel().getOffset();
  JobUtil.submitToJobThread(new Runnable(){
    public void run(){
      final PsiFile injected;
      try {
        injected=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile>(){
          public PsiFile compute(){
            if (isReallyDisposed(editor,project))             return null;
            PsiFile psiFile=PsiUtilBase.getPsiFileInEditor(editor,project);
            return psiFile == null || psiFile instanceof PsiCompiledElement ? null : getInjectedFileIfAny(editor,project,offset,psiFile,alarm);
          }
        }
);
      }
 catch (      RuntimeException e) {
        ApplicationManager.getApplication().invokeLater(new DumbAwareRunnable(){
          @Override public void run(){
            PROCESSED_EDITORS.remove(editor);
          }
        }
);
        throw e;
      }
      ApplicationManager.getApplication().invokeLater(new DumbAwareRunnable(){
        public void run(){
          try {
            if (!isReallyDisposed(editor,project)) {
              Editor newEditor=InjectedLanguageUtil.getInjectedEditorForInjectedFile(editor,injected);
              BraceHighlightingHandler handler=new BraceHighlightingHandler(project,newEditor,alarm,injected);
              processor.process(handler);
            }
          }
  finally {
            PROCESSED_EDITORS.remove(editor);
          }
        }
      }
,ModalityState.stateForComponent(editor.getComponent()));
    }
  }
,Job.DEFAULT_PRIORITY);
}
