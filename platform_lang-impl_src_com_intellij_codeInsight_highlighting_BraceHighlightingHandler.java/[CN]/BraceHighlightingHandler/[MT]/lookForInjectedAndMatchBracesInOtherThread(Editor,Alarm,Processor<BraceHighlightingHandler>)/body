{
  final Project project=editor.getProject();
  if (project == null)   return;
  final int offset=editor.getCaretModel().getOffset();
  JobUtil.submitToJobThread(new Runnable(){
    public void run(){
      final PsiFile injected=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile>(){
        public PsiFile compute(){
          if (isReallyDisposed(editor,project))           return null;
          PsiFile psiFile=PsiUtilBase.getPsiFileInEditor(editor,project);
          return psiFile != null ? getInjectedFileIfAny(editor,project,offset,psiFile,alarm) : null;
        }
      }
);
      ApplicationManager.getApplication().invokeLater(new DumbAwareRunnable(){
        public void run(){
          if (!isReallyDisposed(editor,project)) {
            Editor newEditor=InjectedLanguageUtil.getInjectedEditorForInjectedFile(editor,injected);
            BraceHighlightingHandler handler=new BraceHighlightingHandler(project,newEditor,alarm,injected);
            processor.process(handler);
          }
        }
      }
,ModalityState.stateForComponent(editor.getComponent()));
    }
  }
,Job.DEFAULT_PRIORITY);
}
