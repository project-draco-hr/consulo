{
  configure(and(atom(FIELD),atom(PUBLIC)));
  configure(and(atom(FIELD),atom(STATIC)));
  ArrangementRuleEditingModel modelToChange=myRowMappings.get(2);
  assertNotNull(modelToChange);
  ArrangementRuleEditingModel siblingModel=myRowMappings.get(3);
  assertNotNull(siblingModel);
  assertEquals(2,myRowMappings.size());
  modelToChange.removeAndCondition(atom(PUBLIC));
  assertEquals(2,myRowMappings.size());
  assertSame(modelToChange,myRowMappings.get(1));
  assertEquals(atom(FIELD),modelToChange.getSettingsNode());
  assertSame(siblingModel,myRowMappings.get(3));
  assertEquals(and(atom(FIELD),atom(STATIC)),siblingModel.getSettingsNode());
  ArrangementTreeNode atomFieldNode=myRoot.getFirstChild();
  assertNotNull(atomFieldNode);
  assertEquals(atom(FIELD),atomFieldNode.getBackingSetting());
  ArrangementTreeNode layeredFieldNode=atomFieldNode.getNextSibling();
  assertNotNull(atomFieldNode);
  assertEquals(atom(FIELD),atomFieldNode.getBackingSetting());
  ArrangementTreeNode staticNode=layeredFieldNode.getFirstChild();
  assertNotNull(staticNode);
  assertEquals(atom(STATIC),staticNode.getBackingSetting());
  checkTreeNodesConsistency();
}
