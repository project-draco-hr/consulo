{
  if (instruction instanceof ReadWriteVariableInstruction && ((ReadWriteVariableInstruction)instruction).isWrite()) {
    final PsiElement element=instruction.getElement();
    if (element != null) {
      map.put(((ReadWriteVariableInstruction)instruction).getVariableName(),doInference(map,new Computable<PsiType>(){
        @Override public PsiType compute(){
          return TypesUtil.boxPrimitiveType(getInitializerType(element),scope.getManager(),scope.getResolveScope());
        }
      }
));
    }
  }
  if (instruction instanceof ArgumentInstruction) {
    final String varName=((MixinTypeInstruction)instruction).getVariableName();
    map.put(varName,doInference(map,new Computable<PsiType>(){
      @Override public PsiType compute(){
        PsiType original=map.get(varName);
        final PsiType mixin=((MixinTypeInstruction)instruction).inferMixinType();
        if (mixin == null)         return original;
        if (original == null)         return mixin;
        return PsiIntersectionType.createIntersection(original,mixin);
      }
    }
));
  }
}
