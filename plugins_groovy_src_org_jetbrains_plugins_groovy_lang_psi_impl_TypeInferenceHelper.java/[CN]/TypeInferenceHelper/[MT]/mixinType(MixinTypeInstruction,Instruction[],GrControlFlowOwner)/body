{
  return RecursionManager.doPreventingRecursion(instruction,false,new NullableComputable<DFAType>(){
    @Override @Nullable public DFAType compute(){
      String varName=instruction.getVariableName();
      if (varName == null)       return null;
      ReadWriteVariableInstruction originalInstr=instruction.getInstructionToMixin(flow);
      LOG.assertTrue(originalInstr != null,scope.getContainingFile().getName() + ":" + scope.getText());
      DFAType original=getInferredType(varName,originalInstr,flow,scope);
      final PsiType mixin=instruction.inferMixinType();
      if (mixin == null)       return original;
      if (original == null) {
        original=DFAType.create(null);
      }
      original.addMixin(mixin,instruction.getConditionInstruction());
      return original;
    }
  }
);
}
