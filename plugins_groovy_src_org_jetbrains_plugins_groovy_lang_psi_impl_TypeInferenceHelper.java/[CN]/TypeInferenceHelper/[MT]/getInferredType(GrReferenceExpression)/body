{
  return RecursionManager.doPreventingRecursion(refExpr,true,new NullableComputable<PsiType>(){
    @Override public PsiType compute(){
      final GrControlFlowOwner scope=ControlFlowUtils.findControlFlowOwner(refExpr);
      if (scope == null)       return null;
      final Instruction[] flow=scope.getControlFlow();
      ReadWriteVariableInstruction instruction=findInstruction(refExpr,flow);
      if (instruction == null)       return null;
      if (instruction.isWrite()) {
        return getInitializerType(refExpr);
      }
      final DFAType type=getInferredType(refExpr.getReferenceName(),instruction,flow,scope,new HashSet<MixinTypeInstruction>());
      return type == null ? null : type.getResultType();
    }
  }
);
}
