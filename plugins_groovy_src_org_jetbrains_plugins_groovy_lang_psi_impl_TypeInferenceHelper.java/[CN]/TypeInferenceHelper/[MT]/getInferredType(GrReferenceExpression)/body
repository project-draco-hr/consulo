{
  if (isInferenceInProgress()) {
    return getTypeBinding(refExpr);
  }
  GroovyPsiElement scope=PsiTreeUtil.getParentOfType(refExpr,GrMethod.class,GrClosableBlock.class,GrClassInitializer.class,GroovyFileBase.class);
  if (scope instanceof GrMethod) {
    scope=((GrMethod)scope).getBlock();
  }
 else   if (scope instanceof GrClassInitializer) {
    scope=((GrClassInitializer)scope).getBlock();
  }
  if (scope != null) {
    Map<GrReferenceExpression,PsiType> map=myCalculatedTypeInferences.get(scope);
    if (map == null) {
      map=inferTypes((GrControlFlowOwner)scope);
      myCalculatedTypeInferences.put(scope,map);
    }
    return map.get(refExpr);
  }
  return null;
}
