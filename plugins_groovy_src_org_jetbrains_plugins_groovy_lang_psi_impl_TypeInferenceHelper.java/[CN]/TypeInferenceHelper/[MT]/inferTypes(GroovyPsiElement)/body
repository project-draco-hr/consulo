{
  final Instruction[] flow;
  if (scope instanceof GrCodeBlock) {
    flow=((GrCodeBlock)scope).getControlFlow();
  }
 else {
    flow=new ControlFlowBuilder().buildControlFlow(scope,null,null);
  }
  final TypeDfaInstance dfaInstance=new TypeDfaInstance();
  final TypesSemilattice semilattice=new TypesSemilattice(scope.getManager());
  final DFAEngine<Map<String,PsiType>> engine=new DFAEngine<Map<String,PsiType>>(flow,dfaInstance,semilattice);
  final ArrayList<Map<String,PsiType>> infos=engine.performDFA();
  Map<GrReferenceExpression,PsiType> result=new HashMap<GrReferenceExpression,PsiType>();
  for (int i=0; i < flow.length; i++) {
    Instruction instruction=flow[i];
    final PsiElement element=instruction.getElement();
    if (element instanceof GrReferenceExpression) {
      final GrReferenceExpression ref=(GrReferenceExpression)element;
      if (ref.getQualifierExpression() == null) {
        final String refName=ref.getReferenceName();
        if (refName != null) {
          final PsiType type=infos.get(i).get(refName);
          if (type != null) {
            result.put(ref,type);
          }
        }
      }
    }
  }
  return result;
}
