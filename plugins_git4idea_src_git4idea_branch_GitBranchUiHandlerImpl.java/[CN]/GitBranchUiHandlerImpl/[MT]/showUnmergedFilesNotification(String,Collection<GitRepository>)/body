{
  String title=unmergedFilesErrorTitle(operationName);
  String description=unmergedFilesErrorNotificationDescription(operationName);
  Notificator.getInstance(myProject).notify(GitVcs.IMPORTANT_ERROR_NOTIFICATION,title,description,NotificationType.ERROR,new NotificationListener(){
    @Override public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED && event.getDescription().equals("resolve")) {
        GitConflictResolver.Params params=new GitConflictResolver.Params().setMergeDescription(String.format("The following files have unresolved conflicts. You need to resolve them before %s.",operationName)).setErrorNotificationTitle("Unresolved files remain.");
        new GitConflictResolver(myProject,myGit,myFacade,GitUtil.getRootsFromRepositories(repositories),params).merge();
      }
    }
  }
);
}
