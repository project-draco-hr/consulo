{
  PsiSearchHelper helper=ApplicationManager.getApplication().runReadAction(new Computable<PsiSearchHelper>(){
    @Override public PsiSearchHelper compute(){
      return PsiSearchHelper.SERVICE.getInstance(element.getProject());
    }
  }
);
  return helper.processUsagesInNonJavaFiles(element,stringToSearch,new PsiNonJavaFileReferenceProcessor(){
    @Override public boolean process(    final PsiFile psiFile,    final int startOffset,    final int endOffset){
      try {
        UsageInfo usageInfo=ApplicationManager.getApplication().runReadAction(new Computable<UsageInfo>(){
          @Override public UsageInfo compute(){
            return factory.createUsageInfo(psiFile,startOffset,endOffset);
          }
        }
);
        return usageInfo == null || processor.process(usageInfo);
      }
 catch (      ProcessCanceledException e) {
        throw e;
      }
catch (      Exception e) {
        LOG.error(e);
        return true;
      }
    }
  }
,searchScope);
}
