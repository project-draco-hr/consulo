{
  VirtualFile vfile=file.getVirtualFile();
  if (vfile == null) {
    return EmptyRunnable.getInstance();
  }
  final ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
  if (progressIndicator != null) {
    progressIndicator.setText2(vfile.getPresentableUrl());
  }
  Module mod=module;
  if (module == null) {
    mod=ProjectRootManager.getInstance(project).getFileIndex().getModuleForFile(vfile);
  }
  if (mod == null) {
    return EmptyRunnable.getInstance();
  }
  UpdateCopyrightsProvider updateCopyrightsProvider=CopyrightUpdaters.INSTANCE.forFileType(file.getFileType());
  if (updateCopyrightsProvider == null) {
    return EmptyRunnable.getInstance();
  }
  CopyrightProfile copyrightProfile=CopyrightManager.getInstance(project).getCopyrightOptions(file);
  if (copyrightProfile != null && CopyrightUpdaters.hasExtension(file)) {
    logger.debug("process " + file);
    final UpdatePsiFileCopyright<?> updateCopyright=updateCopyrightsProvider.createInstance(file,copyrightProfile);
    return new Runnable(){
      @Override public void run(){
        try {
          updateCopyright.process();
        }
 catch (        Exception e) {
          logger.error(e);
        }
      }
    }
;
  }
 else {
    return EmptyRunnable.getInstance();
  }
}
