{
  checkSetModifierProperty(name,value);
  PsiElement parent=getParent();
  PsiElement grandParent=parent != null ? parent.getParent() : null;
  IElementType type=NAME_TO_KEYWORD_TYPE_MAP.get(name);
  CompositeElement treeElement=(CompositeElement)getNode();
  if (parent instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)parent;
    CodeEditUtil.markToReformat(method.getParameterList().getNode(),true);
  }
  if (value) {
    if (parent instanceof PsiField && grandParent instanceof PsiClass && ((PsiClass)grandParent).isInterface()) {
      if (type == JavaTokenType.PUBLIC_KEYWORD || type == JavaTokenType.STATIC_KEYWORD || type == JavaTokenType.FINAL_KEYWORD)       return;
    }
 else     if (parent instanceof PsiMethod && grandParent instanceof PsiClass && ((PsiClass)grandParent).isInterface()) {
      if (type == JavaTokenType.PUBLIC_KEYWORD || type == JavaTokenType.ABSTRACT_KEYWORD)       return;
      if (type == JavaTokenType.DEFAULT_KEYWORD && findExtensionMethodMarker((PsiMethod)parent) != null)       return;
    }
 else     if (parent instanceof PsiClass && grandParent instanceof PsiClass && ((PsiClass)grandParent).isInterface()) {
      if (type == JavaTokenType.PUBLIC_KEYWORD)       return;
    }
 else     if (parent instanceof PsiAnnotationMethod && grandParent instanceof PsiClass && ((PsiClass)grandParent).isAnnotationType()) {
      if (type == JavaTokenType.PUBLIC_KEYWORD || type == JavaTokenType.ABSTRACT_KEYWORD)       return;
    }
    if (type == JavaTokenType.PUBLIC_KEYWORD || type == JavaTokenType.PRIVATE_KEYWORD || type == JavaTokenType.PROTECTED_KEYWORD || type == null) {
      if (type != JavaTokenType.PUBLIC_KEYWORD) {
        setModifierProperty(PsiModifier.PUBLIC,false);
      }
      if (type != JavaTokenType.PRIVATE_KEYWORD) {
        setModifierProperty(PsiModifier.PRIVATE,false);
      }
      if (type != JavaTokenType.PROTECTED_KEYWORD) {
        setModifierProperty(PsiModifier.PROTECTED,false);
      }
      if (type == null)       return;
    }
    if (treeElement.findChildByType(type) == null) {
      TreeElement keyword=Factory.createSingleLeafElement(type,name,null,getManager());
      treeElement.addInternal(keyword,keyword,null,null);
    }
  }
 else {
    if (type == null) {
      throw new IncorrectOperationException("Cannot reset package local modifier.");
    }
    ASTNode child=treeElement.findChildByType(type);
    if (child != null) {
      SourceTreeToPsiMap.treeToPsiNotNull(child).delete();
    }
    if (type == JavaTokenType.DEFAULT_KEYWORD && parent instanceof PsiMethod) {
      final PsiJavaToken marker=findExtensionMethodMarker((PsiMethod)parent);
      if (marker != null) {
        marker.delete();
      }
    }
  }
}
