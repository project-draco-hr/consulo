{
  int width=myIpad.left + myIpad.right;
  if (myIcon != null) {
    width+=myIcon.getIconWidth() + myIconTextGap;
  }
  final Insets borderInsets=myBorder.getBorderInsets(this);
  width+=borderInsets.left + borderInsets.right;
  Font font=getFont();
  LOG.assertTrue(font != null);
  for (int i=0; i < myAttributes.size(); i++) {
    SimpleTextAttributes attributes=myAttributes.get(i);
    if (font.getStyle() != attributes.getStyle()) {
      font=font.deriveFont(attributes.getStyle());
    }
    final FontMetrics metrics=getFontMetrics(font);
    width+=metrics.stringWidth(myFragments.get(i));
    if (mainTextOnly && myMainTextLastIndex >= 0 && i == myMainTextLastIndex)     break;
  }
  int height=myIpad.top + myIpad.bottom;
  final FontMetrics metrics=getFontMetrics(font);
  int textHeight=metrics.getHeight();
  textHeight+=borderInsets.top + borderInsets.bottom;
  if (myIcon != null) {
    height+=Math.max(myIcon.getIconHeight(),textHeight);
  }
 else {
    height+=textHeight;
  }
  final Insets insets=getInsets();
  width+=insets.left + insets.right;
  height+=insets.top + insets.bottom;
  return new Dimension(width,height);
}
