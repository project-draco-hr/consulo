{
  if (!myHint.isVisible()) {
    dispose();
    return;
  }
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  final PsiFile file=PsiDocumentManager.getInstance(myProject).getPsiFile(myEditor.getDocument());
  CharSequence chars=myEditor.getDocument().getCharsSequence();
  final int offset=CharArrayUtil.shiftBackward(chars,myEditor.getCaretModel().getOffset() - 1," \t") + 1;
  final UpdateParameterInfoContext context=new MyUpdateParameterInfoContext(offset,file);
  final Object elementForUpdating=myHandler.findElementForUpdatingParameterInfo(context);
  if (elementForUpdating != null) {
    myHandler.updateParameterInfo(elementForUpdating,context);
    if (myHint.isVisible()) {
      HintManager.adjustEditorHintPosition(myHint,myEditor,myProvider.getBestPointPosition(myHint,(PsiElement)elementForUpdating,offset));
    }
  }
 else   context.removeHint();
  myComponent.update();
}
