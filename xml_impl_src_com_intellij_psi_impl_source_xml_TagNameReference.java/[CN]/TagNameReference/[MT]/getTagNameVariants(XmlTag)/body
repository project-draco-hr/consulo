{
  final String prefix=tag.getNamespacePrefix();
  final List<String> namespaces;
  if (prefix.isEmpty()) {
    namespaces=new ArrayList<String>(Arrays.asList(tag.knownNamespaces()));
    namespaces.add(XmlUtil.EMPTY_URI);
  }
 else {
    namespaces=new ArrayList<String>(Collections.singletonList(tag.getNamespace()));
  }
  final String[] variants=getTagNameVariants(tag,namespaces,null);
  return ContainerUtil.map2Array(variants,LookupElement.class,new Function<String,LookupElement>(){
    public LookupElement fun(    String qname){
      if (!prefix.isEmpty() && qname.startsWith(prefix)) {
        qname=qname.substring(prefix.length() + 1);
      }
      LookupElementBuilder builder=LookupElementBuilder.create(qname);
      int separator=qname.indexOf(':');
      if (separator > 0) {
        builder.addLookupString(qname.substring(separator + 1));
      }
      return builder.setInsertHandler(XmlTagInsertHandler.INSTANCE);
    }
  }
);
}
