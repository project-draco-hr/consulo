{
  final List<String> namespaces;
  if (prefix.isEmpty()) {
    namespaces=new ArrayList<String>(Arrays.asList(tag.knownNamespaces()));
    namespaces.add(XmlUtil.EMPTY_URI);
  }
 else {
    namespaces=new ArrayList<String>(Collections.singletonList(tag.getNamespace()));
  }
  List<String> nsInfo=new ArrayList<String>();
  final String[] variants=getTagNameVariants(tag,namespaces,nsInfo);
  List<LookupElement> elements=new ArrayList<LookupElement>(variants.length);
  for (int i=0, variantsLength=variants.length; i < variantsLength; i++) {
    String qname=variants[i];
    if (!prefix.isEmpty() && qname.startsWith(prefix + ":")) {
      qname=qname.substring(prefix.length() + 1);
    }
    LookupElementBuilder lookupElement=LookupElementBuilder.create(qname);
    final int separator=qname.indexOf(':');
    if (separator > 0) {
      lookupElement=lookupElement.addLookupString(qname.substring(separator + 1));
    }
    String ns=nsInfo.get(i);
    if (StringUtil.isNotEmpty(ns)) {
      lookupElement=lookupElement.setTypeText(ns,true);
    }
    elements.add(lookupElement.setInsertHandler(XmlTagInsertHandler.INSTANCE));
  }
  return elements.toArray(new LookupElement[elements.size()]);
}
