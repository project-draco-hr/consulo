{
  final Map<String,XmlElementDescriptor> descriptorsMap=new HashMap<String,XmlElementDescriptor>();
  XmlElementDescriptor elementDescriptor=null;
{
    PsiElement curElement=element.getParent();
    while (curElement instanceof XmlTag) {
      final XmlTag declarationTag=(XmlTag)curElement;
      final String namespace=declarationTag.getNamespace();
      if (!descriptorsMap.containsKey(namespace)) {
        final XmlElementDescriptor descriptor=declarationTag.getDescriptor();
        if (descriptor != null) {
          descriptorsMap.put(namespace,descriptor);
          if (elementDescriptor == null)           elementDescriptor=descriptor;
        }
      }
      curElement=curElement.getContext();
    }
  }
  final List<String> namespaces=new ArrayList<String>(Arrays.asList(element.knownNamespaces()));
  namespaces.add(XmlUtil.EMPTY_URI);
  final Iterator<String> nsIterator=namespaces.iterator();
  final Set<XmlNSDescriptor> visited=new HashSet<XmlNSDescriptor>();
  while (nsIterator.hasNext()) {
    final String namespace=nsIterator.next();
    if (descriptorsMap.containsKey(namespace)) {
      final XmlElementDescriptor descriptor=descriptorsMap.get(namespace);
      for (      XmlElementDescriptor containedDescriptor : descriptor.getElementsDescriptors(element)) {
        if (containedDescriptor != null)         variants.add(containedDescriptor);
      }
      if (element instanceof HtmlTag) {
        HtmlUtil.addHtmlSpecificCompletions(descriptor,element,variants);
      }
      visited.add(descriptor.getNSDescriptor());
    }
 else {
      if (namespace == null)       continue;
      if (namespace.length() == 0 && !visited.isEmpty())       continue;
      XmlNSDescriptor nsDescriptor=element.getNSDescriptor(namespace,false);
      if (nsDescriptor == null && PsiUtil.isInJspFile(element))       nsDescriptor=PsiUtil.getJspFile(element).getDocument().getRootTag().getNSDescriptor(namespace,false);
      if (nsDescriptor != null && !visited.contains(nsDescriptor) && (!(elementDescriptor instanceof XmlElementDescriptorImpl) || ((XmlElementDescriptorImpl)elementDescriptor).allowElementsFromNamespace(namespace,element.getParentTag()))) {
        visited.add(nsDescriptor);
        final XmlElementDescriptor[] rootElementsDescriptors=nsDescriptor.getRootElementsDescriptors(PsiTreeUtil.getParentOfType(element,XmlDocument.class));
        for (        XmlElementDescriptor containedDescriptor : rootElementsDescriptors) {
          if (containedDescriptor != null)           variants.add(containedDescriptor);
        }
      }
    }
  }
  final Iterator<XmlElementDescriptor> iterator=variants.iterator();
  String[] ret=new String[variants.size()];
  int index=0;
  while (iterator.hasNext()) {
    final XmlElementDescriptor descriptor=iterator.next();
    ret[index++]=descriptor.getName(element);
  }
  return ret;
}
