{
  try {
    XDebugSession session=XDebugView.getSession(getTree());
    final XSourcePosition debuggerPosition=session == null ? null : session.getCurrentPosition();
    if (debuggerPosition == null) {
      return;
    }
    final XInlineDebuggerDataCallback callback=new XInlineDebuggerDataCallback(){
      @Override public void computed(      XSourcePosition position){
        if (position == null)         return;
        VirtualFile file=position.getFile();
        if (!Comparing.equal(debuggerPosition.getFile(),file)) {
          return;
        }
        final Document document=FileDocumentManager.getInstance().getDocument(file);
        if (document == null)         return;
        XVariablesView.InlineVariablesInfo data=myTree.getProject().getUserData(XVariablesView.DEBUG_VARIABLES);
        final TObjectLongHashMap<VirtualFile> timestamps=myTree.getProject().getUserData(XVariablesView.DEBUG_VARIABLES_TIMESTAMPS);
        if (data == null || timestamps == null) {
          return;
        }
        data.put(file,position,XValueNodeImpl.this);
        timestamps.put(file,document.getModificationStamp());
        myTree.updateEditor();
      }
    }
;
    if (getValueContainer().computeInlineDebuggerData(callback) == ThreeState.UNSURE) {
      getValueContainer().computeSourcePosition(new XNavigatable(){
        @Override public void setSourcePosition(        @Nullable XSourcePosition position){
          callback.computed(position);
        }
      }
);
    }
  }
 catch (  Exception ignore) {
  }
}
