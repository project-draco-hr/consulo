{
  if (type.isArray()) {
    Class<?> componentType=type.getComponentType();
    Mirror componentMirror=new Mirror(componentType,null,classLoader,mirrorClassLoader);
    int length=value == null ? 0 : Array.getLength(value);
    Object mirrorValue=Array.newInstance(componentMirror.getMirrorType(),length);
    for (int i=0; i < length; i++) {
      Mirror itemMirror=new Mirror(componentType,Array.get(value,i),classLoader,mirrorClassLoader);
      Array.set(mirrorValue,i,itemMirror.getMirrorValue());
    }
    myMirrorType=mirrorValue.getClass();
    myMirrorValue=value == null ? null : mirrorValue;
  }
 else   if (type.isInterface()) {
    myMirrorType=mirrorClassLoader.loadClass(type.getName());
    myMirrorValue=value == null ? null : Proxy.newProxyInstance(mirrorClassLoader,new Class[]{myMirrorType},new ReflectiveInvocationHandler(value,classLoader,mirrorClassLoader));
  }
 else {
    myMirrorType=type;
    myMirrorValue=value;
  }
}
