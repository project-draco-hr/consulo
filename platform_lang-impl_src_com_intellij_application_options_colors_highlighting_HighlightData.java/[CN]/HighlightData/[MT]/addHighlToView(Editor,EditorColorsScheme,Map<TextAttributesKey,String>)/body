{
  if (HighlighterColors.BAD_CHARACTER.equals(myHighlightType)) {
    return;
  }
  final TextAttributes attr=scheme.getAttributes(myHighlightType);
  if (attr != null) {
    UIUtil.invokeAndWaitIfNeeded(new Runnable(){
      @Override public void run(){
        try {
          view.getMarkupModel().addRangeHighlighter(myStartOffset,myEndOffset,HighlighterLayer.ADDITIONAL_SYNTAX,TextAttributes.ERASE_MARKER,HighlighterTargetArea.EXACT_RANGE);
          RangeHighlighter highlighter=view.getMarkupModel().addRangeHighlighter(myStartOffset,myEndOffset,HighlighterLayer.ADDITIONAL_SYNTAX,attr,HighlighterTargetArea.EXACT_RANGE);
          final Color errorStripeColor=attr.getErrorStripeColor();
          highlighter.setErrorStripeMarkColor(errorStripeColor);
          final String tooltip=displayText.get(myHighlightType);
          highlighter.setErrorStripeTooltip(tooltip);
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
);
  }
}
