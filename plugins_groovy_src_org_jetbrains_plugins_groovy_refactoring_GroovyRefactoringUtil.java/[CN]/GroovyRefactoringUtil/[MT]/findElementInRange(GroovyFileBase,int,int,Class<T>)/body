{
  PsiElement element1=file.getViewProvider().findElementAt(startOffset,file.getLanguage());
  PsiElement element2=file.getViewProvider().findElementAt(endOffset - 1,file.getLanguage());
  if (element1 instanceof PsiWhiteSpace) {
    startOffset=element1.getTextRange().getEndOffset();
    element1=file.getViewProvider().findElementAt(startOffset,file.getLanguage());
  }
  if (element2 instanceof PsiWhiteSpace) {
    endOffset=element2.getTextRange().getStartOffset();
    element2=file.getViewProvider().findElementAt(endOffset - 1,file.getLanguage());
  }
  if (element2 == null || element1 == null)   return null;
  final PsiElement commonParent=PsiTreeUtil.findCommonParent(element1,element2);
  final T element=ReflectionCache.isAssignable(klass,commonParent.getClass()) ? (T)commonParent : PsiTreeUtil.getParentOfType(commonParent,klass);
  if (element == null || element.getTextRange().getStartOffset() != startOffset || element.getTextRange().getEndOffset() != endOffset) {
    return null;
  }
  return element;
}
