{
  GrStatement anchorStatement=(GrStatement)getParentStatement(context,true);
  assert(anchorStatement != null && anchorStatement.getParent() != null);
  Project project=expr.getProject();
  String[] suggestedNames=GroovyNameSuggestionUtil.suggestVariableNames(expr,new NameValidator(){
    public String validateName(    String name,    boolean increaseNumber){
      return name;
    }
    public Project getProject(){
      return context.getProject();
    }
  }
);
  final String prefix=suggestedNames[0];
  final String id=JavaCodeStyleManager.getInstance(project).suggestUniqueVariableName(prefix,context,true);
  GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(expr.getProject());
  String[] modifiers;
  if (declareFinal) {
    modifiers=finalModifiers;
  }
 else {
    modifiers=ArrayUtil.EMPTY_STRING_ARRAY;
  }
  GrVariableDeclaration decl=factory.createVariableDeclaration(modifiers,(GrExpression)skipParentheses(expr,false),expr.getType(),id);
  ((GrStatementOwner)anchorStatement.getParent()).addStatementBefore(decl,anchorStatement);
  return id;
}
