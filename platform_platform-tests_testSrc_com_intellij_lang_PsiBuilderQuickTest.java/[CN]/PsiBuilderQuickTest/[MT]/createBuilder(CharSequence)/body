{
  ParserDefinition parserDefinition=new ParserDefinition(){
    @NotNull @Override public Lexer createLexer(    @NotNull Project project,    @NotNull LanguageVersion languageVersion){
      return new MyTestLexer();
    }
    @NotNull @Override public PsiParser createParser(    @NotNull Project project,    @NotNull LanguageVersion languageVersion){
      return null;
    }
    @NotNull @Override public IFileElementType getFileNodeType(){
      return null;
    }
    @NotNull @Override public TokenSet getWhitespaceTokens(){
      return WHITESPACE_SET;
    }
    @NotNull @Override public TokenSet getCommentTokens(){
      return COMMENT_SET;
    }
    @NotNull @Override public TokenSet getStringLiteralElements(){
      return null;
    }
    @NotNull @Override public PsiElement createElement(    ASTNode node){
      return null;
    }
    @Override public PsiFile createFile(    FileViewProvider viewProvider){
      return null;
    }
    @Override public SpaceRequirements spaceExistanceTypeBetweenTokens(    ASTNode left,    ASTNode right){
      return null;
    }
  }
;
  return new PsiBuilderImpl(getProject(),null,parserDefinition,parserDefinition.createLexer(getProject(),Language.UNKNOWN_VERSION),null,text,null,null);
}
