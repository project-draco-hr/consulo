{
  final Runnable antAwareRunnable=new Runnable(){
    public void run(){
      final AntConfiguration antConfiguration=AntConfiguration.getInstance(myProject);
      if ((configuration instanceof RunConfiguration) && antConfiguration.hasTasksToExecuteBeforeRun((RunConfiguration)configuration)) {
        final Thread thread=new Thread(new Runnable(){
          public void run(){
            final DataContext dataContext=MapDataContext.singleData(DataConstants.PROJECT,myProject);
            final boolean result=antConfiguration.executeTaskBeforeRun(dataContext,(RunConfiguration)configuration);
            if (result) {
              ApplicationManager.getApplication().invokeLater(startRunnable);
            }
          }
        }
);
        thread.start();
      }
 else {
        startRunnable.run();
      }
    }
  }
;
  Module[] modulesToCompile=state.getModulesToCompile();
  if (modulesToCompile == null)   modulesToCompile=Module.EMPTY_ARRAY;
  if (getConfig().isCompileBeforeRunning() && modulesToCompile.length > 0) {
    final CompileStatusNotification callback=new CompileStatusNotification(){
      public void finished(      final boolean aborted,      final int errors,      final int warnings){
        if (errors == 0 && !aborted) {
          ApplicationManager.getApplication().invokeLater(antAwareRunnable);
        }
      }
    }
;
    if ("true".equals(System.getProperty("makeProjectOnRun","false"))) {
      CompilerManager.getInstance(myProject).make(callback);
    }
 else {
      if (modulesToCompile.length > 0) {
        CompilerManager.getInstance(myProject).make(myProject,modulesToCompile,callback);
      }
 else {
        CompilerManager.getInstance(myProject).make(callback);
      }
    }
  }
 else {
    antAwareRunnable.run();
  }
}
