{
  final String methodName=myElement.getValue();
  if (methodName == null) {
    return ResolveResult.EMPTY_ARRAY;
  }
  final Module module=ModuleUtilCore.findModuleForPsiElement(myElement);
  if (module == null) {
    return ResolveResult.EMPTY_ARRAY;
  }
  final Project project=myElement.getProject();
  final PsiShortNamesCache cache=PsiShortNamesCache.getInstance(project);
  final PsiMethod[] methods=cache.getMethodsByName(methodName,module.getModuleWithDependenciesScope());
  if (methods.length == 0) {
    return ResolveResult.EMPTY_ARRAY;
  }
  final List<ResolveResult> result=new ArrayList<ResolveResult>();
  for (  PsiMethod method : methods) {
    if (checkSignature(method)) {
      result.add(new PsiElementResolveResult(method));
    }
  }
  return result.toArray(new ResolveResult[result.size()]);
}
