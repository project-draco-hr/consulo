{
  final Project project=myElement.getProject();
  final GlobalSearchScope scope=ProjectScope.getAllScope(project);
  final PsiClass activityClass=JavaPsiFacade.getInstance(project).findClass(AndroidUtils.ACTIVITY_BASE_CLASS_NAME,scope);
  if (activityClass == null) {
    return EMPTY_ARRAY;
  }
  final List<Object> result=new ArrayList<Object>();
  final Set<String> methodNames=new HashSet<String>();
  ClassInheritorsSearch.search(activityClass,scope,true).forEach(new Processor<PsiClass>(){
    public boolean process(    PsiClass c){
      for (      PsiMethod method : c.getMethods()) {
        if (checkSignature(method) && methodNames.add(method.getName())) {
          result.add(createLookupElement(method));
        }
      }
      return true;
    }
  }
);
  return ArrayUtil.toObjectArray(result);
}
