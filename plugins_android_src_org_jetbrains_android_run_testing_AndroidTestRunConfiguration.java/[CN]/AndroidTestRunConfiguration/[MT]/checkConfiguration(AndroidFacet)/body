{
  Module module=facet.getModule();
  JavaPsiFacade facade=JavaPsiFacade.getInstance(module.getProject());
switch (TESTING_TYPE) {
case TEST_ALL_IN_PACKAGE:
    final PsiPackage testPackage=facade.findPackage(PACKAGE_NAME);
  if (testPackage == null) {
    throw new RuntimeConfigurationWarning(ExecutionBundle.message("package.does.not.exist.error.message",PACKAGE_NAME));
  }
break;
case TEST_CLASS:
final PsiClass testClass=getConfigurationModule().checkModuleAndClassName(CLASS_NAME,ExecutionBundle.message("no.test.class.specified.error.text"));
if (!JUnitUtil.isTestClass(testClass)) {
throw new RuntimeConfigurationWarning(ExecutionBundle.message("class.isnt.test.class.error.message",CLASS_NAME));
}
break;
case TEST_METHOD:
checkTestMethod();
break;
}
if (INSTRUMENTATION_RUNNER_CLASS.length() > 0) {
if (facade.findClass(INSTRUMENTATION_RUNNER_CLASS,module.getModuleWithDependenciesAndLibrariesScope(true)) == null) {
throw new RuntimeConfigurationError(AndroidBundle.message("instrumentation.runner.class.not.specified.error"));
}
}
}
