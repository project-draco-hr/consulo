{
  int offset=context.getStartOffset();
  Project project=context.getProject();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());
  PsiElement element=file.findElementAt(offset);
  element=PsiTreeUtil.getParentOfType(element,PsiAssignmentExpression.class,PsiVariable.class);
  if (element instanceof PsiAssignmentExpression) {
    PsiAssignmentExpression assignment=(PsiAssignmentExpression)element;
    PsiExpression rhs=assignment.getRExpression();
    if (rhs == null)     return null;
    final PsiType rhsType=rhs.getType();
    if (rhsType == null)     return null;
    return new PsiTypeResult(rhsType,rhs.getManager());
  }
 else   if (element instanceof PsiVariable) {
    PsiVariable var=(PsiVariable)element;
    PsiExpression initializer=var.getInitializer();
    if (initializer == null)     return null;
    PsiType type=RefactoringUtil.getTypeByExpression(initializer);
    if (type == null)     return null;
    return new PsiTypeResult(type,initializer.getManager());
  }
  return null;
}
