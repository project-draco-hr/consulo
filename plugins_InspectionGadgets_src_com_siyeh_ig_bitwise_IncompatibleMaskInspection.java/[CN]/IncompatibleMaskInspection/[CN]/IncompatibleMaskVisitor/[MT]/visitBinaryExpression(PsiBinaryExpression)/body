{
  super.visitBinaryExpression(expression);
  if (!(expression.getROperand() != null)) {
    return;
  }
  if (!ComparisonUtils.isEqualityComparison(expression)) {
    return;
  }
  final PsiType expressionType=expression.getType();
  if (expressionType == null) {
    return;
  }
  final PsiExpression rhs=expression.getROperand();
  final PsiExpression strippedRhs=stripExpression(rhs);
  if (strippedRhs == null) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  final PsiExpression strippedLhs=stripExpression(lhs);
  if (strippedLhs == null) {
    return;
  }
  if (isConstantMask(strippedLhs) && PsiUtil.isConstantExpression(strippedRhs)) {
    if (isIncompatibleMask((PsiBinaryExpression)strippedLhs,strippedRhs)) {
      registerError(expression);
    }
  }
 else   if (isConstantMask(strippedRhs) && PsiUtil.isConstantExpression(strippedLhs)) {
    if (isIncompatibleMask((PsiBinaryExpression)strippedRhs,strippedLhs)) {
      registerError(expression);
    }
  }
}
