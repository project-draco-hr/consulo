{
  final List<GitFileRevision> revisions=new ArrayList<GitFileRevision>(3);
  Consumer<GitFileRevision> consumer=new Consumer<GitFileRevision>(){
    public void consume(    GitFileRevision gitFileRevision){
      revisions.add(gitFileRevision);
    }
  }
;
  Consumer<VcsException> exceptionConsumer=new Consumer<VcsException>(){
    public void consume(    VcsException exception){
      fail("No exception expected",exception);
    }
  }
;
  GitHistoryUtils.history(myProject,bfilePath,consumer,exceptionConsumer);
  assertEquals(revisions.size(),myRevisions.size());
  for (int i=0; i < revisions.size(); i++) {
    assertEqualRevisions(revisions.get(i),myRevisions.get(i));
  }
}
