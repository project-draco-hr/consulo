{
  super.setUp();
  myRevisions=new ArrayList<GitTestRevision>(3);
  final String[] commitMessages={"simple commit","commit with {%n} some [%ct] special <format:%H%at> characters including \"--pretty=tformat:%x00%x01%x00%H%x00%ct%x00%an%x20%x3C%ae%x3E%x00%cn%x20%x3C%ce%x3E%x00%x02%x00%s%x00%b%x00%x02%x01\"","commit subject\n\ncommit body which is \n multilined.","first line\n" + "second line\n" + "third line\n"+ "\n"+ "fifth line\n"+ "\n"+ "seventh line & the end.","moved a.txt to dir/b.txt"};
  final String[] contents={"initial content","second content","third content","fourth content","fourth content"};
  int index=0;
  afile=myRepo.createFile("a.txt",contents[index]);
  myRepo.addCommit(commitMessages[index]);
  index++;
  editFileInCommand(myProject,afile,contents[index]);
  myRepo.addCommit(commitMessages[index]);
  index++;
  editFileInCommand(myProject,afile,contents[index]);
  myRepo.addCommit(commitMessages[index]);
  index++;
  editFileInCommand(myProject,afile,contents[index]);
  myRepo.addCommit(commitMessages[index]);
  index++;
  VirtualFile dir=myRepo.getDirFixture().findOrCreateDir("dir");
  myRepo.mv(afile,"dir/b.txt");
  bfilePath=VcsUtil.getFilePath(new File(dir.getPath(),"b.txt"));
  myRepo.commit(commitMessages[index]);
  index++;
  String[] revisions=myRepo.log("--pretty=format:%H#%at").getStdout().split("\n");
  int length=revisions.length;
  for (int i=length - 1, j=0; i >= 0; i--, j++) {
    String[] details=revisions[j].trim().split("#");
    myRevisions.add(new GitTestRevision(details[0],details[1],commitMessages[i],String.format("%s <%s>",CONFIG_USER_NAME,CONFIG_USER_EMAIL),null,contents[i]));
  }
}
