{
  if (!CodeInsightUtilBase.preparePsiElementForWrite(myElement)) {
    return;
  }
  final PsiElementFactory factory=JavaPsiFacade.getInstance(project).getElementFactory();
  try {
    final PsiClass psiClass=JavaPsiFacade.getInstance(project).findClass(myAnnotationName,myElement.getResolveScope());
    final InitializerRequirement requirement=InitializerRequirement.calcInitializerRequirement(psiClass);
    final String argList;
    if (myArgList == null) {
switch (requirement) {
case VALUE_REQUIRED:
case OTHER_REQUIRED:
        argList="(\"\")";
      break;
default :
    argList="";
}
}
 else {
argList=myArgList;
}
PsiAnnotation annotation=factory.createAnnotationFromText("@" + myAnnotationName + argList,myElement);
final PsiModifierList modifierList=myElement.getModifierList();
if (modifierList != null) {
annotation=(PsiAnnotation)modifierList.addBefore(annotation,modifierList.getFirstChild());
annotation=(PsiAnnotation)JavaCodeStyleManager.getInstance(project).shortenClassReferences(annotation);
final PsiAnnotationParameterList list=annotation.getParameterList();
if (requirement != InitializerRequirement.NONE_REQUIRED && myArgList == null) {
  ((NavigationItem)list).navigate(true);
}
}
}
 catch (IncorrectOperationException e) {
Logger.getInstance(getClass().getName()).error(e);
}
}
