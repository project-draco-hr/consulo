{
  if (refMethod.isLibraryOverride())   return null;
  if (!refMethod.getSuperMethods().isEmpty())   return null;
  ArrayList problems=null;
  RefParameter[] parameters=refMethod.getParameters();
  for (int i=0; i < parameters.length; i++) {
    RefParameter refParameter=parameters[i];
    String value=refParameter.getActualValueIfSame();
    if (value != null) {
      if (problems == null)       problems=new ArrayList(1);
      problems.add(getManager().createProblemDescriptor(refMethod.getElement(),"Actual value of parameter '<code>" + refParameter.getName() + "</code>' value is always '<code>"+ value+ "</code>'.",null,ProblemHighlightType.GENERIC_ERROR_OR_WARNING));
    }
  }
  return problems == null ? null : (ProblemDescriptor[])problems.toArray(new ProblemDescriptorImpl[problems.size()]);
}
