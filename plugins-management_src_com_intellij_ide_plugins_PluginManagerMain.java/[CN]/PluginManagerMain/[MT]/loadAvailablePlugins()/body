{
  try {
    if (root == null) {
      root=loadPluginList();
      if (root == null) {
        Messages.showErrorDialog(getMainPanel(),IdeBundle.message("error.list.of.plugins.was.not.loaded"),IdeBundle.message("title.plugins"));
        tabs.setSelectedIndex(INSTALLED_TAB);
        return;
      }
      availablePluginTable=new PluginTable<PluginNode>(new AvailablePluginsTableModel(root,myAvailableProvider));
      availablePluginTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(        ListSelectionEvent e){
          pluginInfoUpdate(availablePluginTable.getSelectedObject());
          toolbar.updateActionsImmediately();
        }
      }
);
      ActionGroup group=getActionGroup();
      PopupHandler.installUnknownPopupHandler(availablePluginTable,group,ActionManager.getInstance());
      availableScrollPane.getViewport().setBackground(availablePluginTable.getBackground());
      availableScrollPane.getViewport().setView(availablePluginTable);
      tabs.setTitleAt(AVAILABLE_TAB,IdeBundle.message("label.plugins.available.count",availablePluginTable.getRowCount()));
      availablePluginTable.requestFocus();
      new SpeedSearchBase<PluginTable<PluginNode>>(availablePluginTable){
        public int getSelectedIndex(){
          return availablePluginTable.getSelectedRow();
        }
        public Object[] getAllElements(){
          return availablePluginTable.getElements();
        }
        public String getElementText(        Object element){
          return ((PluginNode)element).getName();
        }
        public void selectElement(        Object element,        String selectedText){
          for (int i=0; i < availablePluginTable.getRowCount(); i++) {
            if (availablePluginTable.getObjectAt(i).getName().equals(((PluginNode)element).getName())) {
              availablePluginTable.setRowSelectionInterval(i,i);
              TableUtil.scrollSelectionToVisible(availablePluginTable);
              break;
            }
          }
        }
      }
;
    }
  }
 catch (  RuntimeException ex) {
    ex.printStackTrace();
    Messages.showErrorDialog(getMainPanel(),IdeBundle.message("error.available.plugins.list.is.not.loaded"),CommonBundle.getErrorTitle());
  }
}
