{
  myDescriptionTextArea.addHyperlinkListener(new MyHyperlinkListener());
  myChangeNotesTextArea.addHyperlinkListener(new MyHyperlinkListener());
  genericModel=new PluginsTableModel(installedProvider);
  pluginTable=new PluginTable<IdeaPluginDescriptor>(genericModel);
  installedScrollPane.getViewport().setBackground(pluginTable.getBackground());
  installedScrollPane.getViewport().setView(pluginTable);
  pluginTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      pluginInfoUpdate(pluginTable.getSelectedObject());
      toolbar.updateActionsImmediately();
    }
  }
);
  pluginTable.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      Point p=e.getPoint();
      int row=pluginTable.rowAtPoint(p);
      if (row != -1 && SwingUtilities.isRightMouseButton(e)) {
        pluginTable.setRowSelectionInterval(row,row);
      }
    }
  }
);
  PopupHandler.installUnknownPopupHandler(pluginTable,getActionGroup(),ActionManager.getInstance());
  myToolbarPanel.setLayout(new BorderLayout());
  toolbar=ActionManagerEx.getInstance().createActionToolbar("PluginManaer",getActionGroup(),true);
  myToolbarPanel.add(toolbar.getComponent(),BorderLayout.WEST);
  toolbar.updateActionsImmediately();
  myHttpProxySettingsButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      HTTPProxySettingsDialog settingsDialog=new HTTPProxySettingsDialog();
      settingsDialog.pack();
      settingsDialog.show();
    }
  }
);
  myVendorEmailLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
  myVendorEmailLabel.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      IdeaPluginDescriptor pluginDescriptor=pluginTable.getSelectedObject();
      if (pluginDescriptor != null) {
        LaunchStringAction(pluginDescriptor.getVendorEmail(),"mailto:");
      }
    }
  }
);
  myVendorUrlLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
  myVendorUrlLabel.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      IdeaPluginDescriptor pluginDescriptor=pluginTable.getSelectedObject();
      if (pluginDescriptor != null) {
        LaunchStringAction(pluginDescriptor.getVendorUrl(),"");
      }
    }
  }
);
  myPluginUrlLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
  myPluginUrlLabel.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      IdeaPluginDescriptor pluginDescriptor=pluginTable.getSelectedObject();
      if (pluginDescriptor != null) {
        LaunchStringAction(pluginDescriptor.getUrl(),"");
      }
    }
  }
);
  new MySpeedSearchBar(pluginTable);
  pluginTable.addHierarchyListener(new HierarchyListener(){
    public void hierarchyChanged(    HierarchyEvent e){
      if ((e.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) > 0 && pluginTable.isShowing()) {
        loadAvailablePlugins(true);
      }
    }
  }
);
}
