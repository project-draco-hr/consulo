{
  final int idx=putImpl(key,val);
  final List<Integer> toRemove=new LinkedList<Integer>();
  for (int i=idx - 1; i >= 0; --i) {
    if (myKeysResemblance.process(myKeys.get(i),key)) {
      toRemove.add(idx);
      break;
    }
  }
  if (toRemove.isEmpty()) {
    for (int i=idx + 1; i < myKeys.size(); ++i) {
      if (myKeysResemblance.process(key,myKeys.get(i))) {
        toRemove.add(i);
      }
 else {
        break;
      }
    }
  }
  Collections.sort(toRemove);
  for (int i=0; i < toRemove.size(); i++) {
    final Integer integer=toRemove.get(i);
    final int correctedIdx=integer - i;
    final Key keyToRemove=myKeys.remove(correctedIdx);
    myMap.remove(keyToRemove);
  }
}
