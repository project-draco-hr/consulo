{
  if (file == null)   return false;
  boolean isSource=fileIndex.isInSourceContent(file);
  if (myScope == SCOPE_ANY) {
    return fileIndex.isInContent(file) && FilePatternPackageSet.matchesModule(myModuleGroupPattern,myModulePattern,file,fileIndex);
  }
  if (myScope == SCOPE_SOURCE) {
    return isSource && !fileIndex.isInTestSourceContent(file) && FilePatternPackageSet.matchesModule(myModuleGroupPattern,myModulePattern,file,fileIndex);
  }
  if (myScope == SCOPE_LIBRARY) {
    return (fileIndex.isInLibraryClasses(file) || fileIndex.isInLibrarySource(file)) && matchesLibrary(myModulePattern,file,fileIndex);
  }
  if (myScope == SCOPE_TEST) {
    return isSource && fileIndex.isInTestSourceContent(file) && FilePatternPackageSet.matchesModule(myModuleGroupPattern,myModulePattern,file,fileIndex);
  }
  if (myScope == SCOPE_PROBLEM) {
    return isSource && WolfTheProblemSolver.getInstance(project).isProblemFile(file) && FilePatternPackageSet.matchesModule(myModuleGroupPattern,myModulePattern,file,fileIndex);
  }
  throw new RuntimeException("Unknown scope: " + myScope);
}
