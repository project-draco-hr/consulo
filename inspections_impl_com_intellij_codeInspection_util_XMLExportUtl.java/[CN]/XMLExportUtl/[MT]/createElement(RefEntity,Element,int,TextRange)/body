{
  if (refEntity instanceof RefImplicitConstructor) {
    return createElement(refEntity.getOwner(),parentNode,actualLine,range);
  }
  Element problem=new Element(InspectionsBundle.message("inspection.export.results.problem"));
  if (refEntity instanceof RefElement) {
    final RefElement refElement=(RefElement)refEntity;
    PsiElement psiElement=refElement.getElement();
    PsiFile psiFile=psiElement.getContainingFile();
    Element fileElement=new Element(InspectionsBundle.message("inspection.export.results.file"));
    Element lineElement=new Element(InspectionsBundle.message("inspection.export.results.line"));
    fileElement.addContent(psiFile.getVirtualFile().getUrl());
    if (actualLine == -1) {
      Document document=PsiDocumentManager.getInstance(refElement.getRefManager().getProject()).getDocument(psiFile);
      lineElement.addContent(String.valueOf(document.getLineNumber(psiElement.getTextOffset()) + 1));
    }
 else {
      lineElement.addContent(String.valueOf(actualLine));
    }
    problem.addContent(fileElement);
    problem.addContent(lineElement);
    final Element rangeElement=new Element("text_range");
    final TextRange textRange=range != null ? range : psiElement.getTextRange();
    rangeElement.setAttribute("start",String.valueOf(textRange.getStartOffset()));
    rangeElement.setAttribute("end",String.valueOf(textRange.getEndOffset()));
    problem.addContent(rangeElement);
  }
  if (refEntity instanceof RefMethod) {
    RefMethod refMethod=(RefMethod)refEntity;
    appendMethod(refMethod,problem);
  }
 else   if (refEntity instanceof RefField) {
    RefField refField=(RefField)refEntity;
    appendField(refField,problem);
  }
 else   if (refEntity instanceof RefClass) {
    RefClass refClass=(RefClass)refEntity;
    appendClass(refClass,problem);
  }
 else {
    LOG.info("Unknown refElement: " + refEntity);
  }
  parentNode.addContent(problem);
  return problem;
}
