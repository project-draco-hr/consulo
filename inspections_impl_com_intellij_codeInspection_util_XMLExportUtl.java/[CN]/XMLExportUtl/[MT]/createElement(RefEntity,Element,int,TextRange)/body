{
  if (refEntity instanceof RefImplicitConstructor) {
    return createElement(refEntity.getOwner(),parentNode,actualLine,range);
  }
  Element problem=new Element("problem");
  if (refEntity instanceof RefElement) {
    final RefElement refElement=(RefElement)refEntity;
    PsiElement psiElement=refElement.getElement();
    PsiFile psiFile=psiElement.getContainingFile();
    Element fileElement=new Element("file");
    Element lineElement=new Element("line");
    final VirtualFile virtualFile=psiFile.getVirtualFile();
    LOG.assertTrue(virtualFile != null);
    fileElement.addContent(virtualFile.getUrl());
    if (actualLine == -1) {
      final Document document=PsiDocumentManager.getInstance(refElement.getRefManager().getProject()).getDocument(psiFile);
      LOG.assertTrue(document != null);
      lineElement.addContent(String.valueOf(document.getLineNumber(psiElement.getTextOffset()) + 1));
    }
 else {
      lineElement.addContent(String.valueOf(actualLine));
    }
    problem.addContent(fileElement);
    problem.addContent(lineElement);
    appendModule(problem,refElement.getModule());
  }
 else   if (refEntity instanceof RefModule) {
    final RefModule refModule=(RefModule)refEntity;
    final VirtualFile moduleFile=refModule.getModule().getModuleFile();
    final Element fileElement=new Element("file");
    fileElement.addContent(moduleFile.getUrl());
    problem.addContent(fileElement);
    appendModule(problem,refModule);
    appendFakePackage(problem);
  }
  new SmartRefElementPointerImpl(refEntity,true).writeExternal(problem);
  if (refEntity instanceof RefMethod) {
    RefMethod refMethod=(RefMethod)refEntity;
    appendMethod(refMethod,problem);
  }
 else   if (refEntity instanceof RefField) {
    RefField refField=(RefField)refEntity;
    appendField(refField,problem);
  }
 else   if (refEntity instanceof RefClass) {
    RefClass refClass=(RefClass)refEntity;
    appendClass(refClass,problem);
  }
 else   if (refEntity instanceof RefFile) {
    appendFakePackage(problem);
  }
  parentNode.addContent(problem);
  return problem;
}
