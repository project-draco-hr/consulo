{
  ApplyPatchStatus result=null;
  int curLine=findStartLine(lines);
  for (  PatchLine line : myLines) {
    final String patchLineText=line.getText();
switch (line.getType()) {
case CONTEXT:
      if (curLine >= lines.size()) {
        throw new ApplyPatchException("Unexpected end of document. Expected line:\n" + patchLineText);
      }
    if (!patchLineText.equals(lines.get(curLine))) {
      throw new ApplyPatchException("Context mismatch. Expected line:\n" + patchLineText + "\nFound line:\n"+ lines.get(curLine));
    }
  curLine++;
break;
case ADD:
if (curLine < lines.size() && lines.get(curLine).equals(patchLineText)) {
result=ApplyPatchStatus.and(result,ApplyPatchStatus.ALREADY_APPLIED);
}
 else {
lines.add(curLine,patchLineText);
result=ApplyPatchStatus.and(result,ApplyPatchStatus.SUCCESS);
}
curLine++;
break;
case REMOVE:
if (curLine >= lines.size() || !patchLineText.equals(lines.get(curLine))) {
result=ApplyPatchStatus.and(result,ApplyPatchStatus.ALREADY_APPLIED);
}
 else {
lines.remove(curLine);
result=ApplyPatchStatus.and(result,ApplyPatchStatus.SUCCESS);
}
break;
}
}
if (result != null) {
return result;
}
return ApplyPatchStatus.SUCCESS;
}
