{
  if (!file.isWritable()) {
    if (!FileDocumentManager.fileForDocumentCheckedOutSuccessfully(editor.getDocument(),project)) {
      return;
    }
  }
  if (!editor.getSelectionModel().hasSelection()) {
    editor.getSelectionModel().selectLineAtCaret();
  }
  int startOffset=editor.getSelectionModel().getSelectionStart();
  int endOffset=editor.getSelectionModel().getSelectionEnd();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiElement element1=file.findElementAt(startOffset);
  PsiElement element2=file.findElementAt(endOffset - 1);
  if (element1 instanceof PsiWhiteSpace) {
    startOffset=element1.getTextRange().getEndOffset();
    element1=file.findElementAt(startOffset);
  }
  if (element2 instanceof PsiWhiteSpace) {
    endOffset=element2.getTextRange().getStartOffset();
  }
  if (element1 == null || element1.getLanguage() == null)   return;
  final SurroundDescriptor[] surroundDescriptors=element1.getLanguage().getSurroundDescriptors();
  if (surroundDescriptors.length == 0)   return;
  for (  SurroundDescriptor descriptor : surroundDescriptors) {
    final PsiElement[] elements=descriptor.getElementsToSurround(file,startOffset,endOffset);
    if (elements.length > 0) {
      if (surrounder == null) {
        PopupActionChooser popupActionChooser=new PopupActionChooser(CHOOSER_TITLE);
        popupActionChooser.invoke(project,editor,descriptor.getSurrounders(),elements);
        return;
      }
 else {
        doSurround(project,editor,surrounder,elements);
      }
    }
  }
}
