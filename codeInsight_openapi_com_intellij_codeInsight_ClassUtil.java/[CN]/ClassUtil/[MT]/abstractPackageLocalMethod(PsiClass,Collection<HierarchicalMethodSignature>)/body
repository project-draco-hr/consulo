{
  Set<PsiMethod> allMethods=new THashSet<PsiMethod>(Arrays.asList(aClass.getAllMethods()));
  Set<PsiMethod> suspects=new THashSet<PsiMethod>();
  for (  HierarchicalMethodSignature signature : allMethodsCollection) {
    removeSupers(signature,allMethods,suspects);
    PsiMethod method=signature.getMethod();
    if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {
      suspects.add(method);
    }
    allMethods.remove(method);
  }
  while (!allMethods.isEmpty()) {
    PsiMethod method=allMethods.iterator().next();
    removeSupers(method.getHierarchicalMethodSignature(),allMethods,suspects);
    if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {
      suspects.add(method);
    }
    allMethods.remove(method);
  }
  return suspects.isEmpty() ? null : suspects.iterator().next();
}
