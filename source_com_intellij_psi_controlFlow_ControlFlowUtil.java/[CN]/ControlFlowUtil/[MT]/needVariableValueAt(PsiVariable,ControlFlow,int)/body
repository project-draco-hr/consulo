{
  InstructionClientVisitor<Boolean> visitor=new InstructionClientVisitor<Boolean>(){
    final boolean[] neededBelow=new boolean[flow.getSize() + 1];
    @Override public void procedureEntered(    int startOffset,    int endOffset){
      for (int i=startOffset; i < endOffset; i++)       neededBelow[i]=false;
    }
    @Override public void visitReadVariableInstruction(    ReadVariableInstruction instruction,    int offset,    int nextOffset){
      if (nextOffset > flow.getSize())       nextOffset=flow.getSize();
      boolean needed=neededBelow[nextOffset];
      if (instruction.variable.equals(variable)) {
        needed=true;
      }
      neededBelow[offset]|=needed;
    }
    @Override public void visitWriteVariableInstruction(    WriteVariableInstruction instruction,    int offset,    int nextOffset){
      if (nextOffset > flow.getSize())       nextOffset=flow.getSize();
      boolean needed=neededBelow[nextOffset];
      if (instruction.variable.equals(variable)) {
        needed=false;
      }
      neededBelow[offset]=needed;
    }
    @Override public void visitInstruction(    Instruction instruction,    int offset,    int nextOffset){
      if (nextOffset > flow.getSize())       nextOffset=flow.getSize();
      boolean needed=neededBelow[nextOffset];
      neededBelow[offset]|=needed;
    }
    public Boolean getResult(){
      return neededBelow[offset];
    }
  }
;
  depthFirstSearch(flow,visitor,offset,flow.getSize());
  return visitor.getResult().booleanValue();
}
