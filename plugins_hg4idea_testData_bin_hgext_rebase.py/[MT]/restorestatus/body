def restorestatus(repo):
    'Restore a previously stored status'
    try:
        target = None
        collapse = False
        external = nullrev
        state = {}
        f = repo.opener('rebasestate')
        for (i, l) in enumerate(f.read().splitlines()):
            if (i == 0):
                originalwd = repo[l].rev()
            elif (i == 1):
                target = repo[l].rev()
            elif (i == 2):
                external = repo[l].rev()
            elif (i == 3):
                collapse = bool(int(l))
            elif (i == 4):
                keep = bool(int(l))
            elif (i == 5):
                keepbranches = bool(int(l))
            else:
                (oldrev, newrev) = l.split(':')
                state[repo[oldrev].rev()] = repo[newrev].rev()
        repo.ui.debug('rebase status resumed\n')
        return (originalwd, target, state, collapse, keep, keepbranches, external)
    except IOError as err:
        if (err.errno != errno.ENOENT):
            raise
        raise util.Abort(_('no rebase in progress'))
