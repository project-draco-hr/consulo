{
  if (!CodeInsightUtil.prepareFileForWrite(myMethod.getContainingFile()))   return;
  final PsiJavaCodeReferenceElement[] referenceElements=myMethod.getThrowsList().getReferenceElements();
  boolean alreadyThrows=false;
  try {
    for (int i=0; i < referenceElements.length; i++) {
      PsiJavaCodeReferenceElement referenceElement=referenceElements[i];
      if (referenceElement.getCanonicalText().equals(myThrowsClassType.getCanonicalText())) {
        alreadyThrows=true;
        if (!myShouldThrow) {
          referenceElement.delete();
          break;
        }
      }
    }
    if (myShouldThrow && !alreadyThrows) {
      myMethod.getThrowsList().add(myMethod.getManager().getElementFactory().createReferenceElementByType(myThrowsClassType));
    }
    QuickFixAction.markDocumentForUndo(file);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
