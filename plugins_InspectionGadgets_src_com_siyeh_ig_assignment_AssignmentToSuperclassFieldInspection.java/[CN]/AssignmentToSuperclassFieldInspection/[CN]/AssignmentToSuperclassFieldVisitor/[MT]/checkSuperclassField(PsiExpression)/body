{
  if (!(expression instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiMethod method=PsiTreeUtil.getParentOfType(expression,PsiMethod.class,true,PsiClass.class);
  if (method == null || !method.isConstructor()) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)expression;
  final PsiExpression qualifierExpression=referenceExpression.getQualifierExpression();
  if (qualifierExpression != null && !(qualifierExpression instanceof PsiThisExpression) && !(qualifierExpression instanceof PsiSuperExpression)) {
    return;
  }
  final PsiElement target=referenceExpression.resolve();
  if (!(target instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)target;
  final PsiClass fieldClass=field.getContainingClass();
  if (fieldClass == null) {
    return;
  }
  final PsiClass assignmentClass=method.getContainingClass();
  final String name=fieldClass.getQualifiedName();
  if (name == null || !InheritanceUtil.isInheritor(assignmentClass,true,name)) {
    return;
  }
  registerError(expression,referenceExpression,fieldClass);
}
