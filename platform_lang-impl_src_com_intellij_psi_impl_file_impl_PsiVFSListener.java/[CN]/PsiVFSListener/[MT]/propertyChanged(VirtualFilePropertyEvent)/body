{
  final String propertyName=event.getPropertyName();
  final VirtualFile vFile=event.getFile();
  final FileViewProvider oldFileViewProvider=myFileManager.findCachedViewProvider(vFile);
  final PsiFile oldPsiFile;
  if (oldFileViewProvider instanceof SingleRootFileViewProvider) {
    oldPsiFile=((SingleRootFileViewProvider)oldFileViewProvider).getCachedPsi(oldFileViewProvider.getBaseLanguage());
  }
 else {
    oldPsiFile=null;
  }
  VirtualFile parent=vFile.getParent();
  final PsiDirectory parentDir=oldPsiFile != null && parent != null ? myFileManager.findDirectory(parent) : getCachedDirectory(parent);
  if (oldFileViewProvider != null && FileContentUtilCore.FORCE_RELOAD_REQUESTOR.equals(event.getRequestor())) {
    myFileManager.forceReload(vFile);
    return;
  }
  if (parentDir == null) {
    boolean fire=VirtualFile.PROP_NAME.equals(propertyName) && vFile.isDirectory();
    if (fire) {
      PsiDirectory psiDir=myFileManager.getCachedDirectory(vFile);
      fire=psiDir != null;
    }
    if (!fire && !VirtualFile.PROP_WRITABLE.equals(propertyName)) {
      handleVfsChangeWithoutPsi(vFile);
      return;
    }
  }
  ((SmartPointerManagerImpl)SmartPointerManager.getInstance(myManager.getProject())).fastenBelts(vFile,0,null);
  ApplicationManager.getApplication().runWriteAction(new ExternalChangeAction(){
    @Override public void run(){
      PsiTreeChangeEventImpl treeEvent=new PsiTreeChangeEventImpl(myManager);
      treeEvent.setParent(parentDir);
      if (VirtualFile.PROP_NAME.equals(propertyName)) {
        if (vFile.isDirectory()) {
          PsiDirectory psiDir=myFileManager.getCachedDirectory(vFile);
          if (psiDir != null) {
            if (myFileTypeManager.isFileIgnored(vFile)) {
              myFileManager.removeFilesAndDirsRecursively(vFile);
              treeEvent.setChild(psiDir);
              myManager.childRemoved(treeEvent);
            }
 else {
              treeEvent.setElement(psiDir);
              treeEvent.setPropertyName(PsiTreeChangeEvent.PROP_DIRECTORY_NAME);
              treeEvent.setOldValue(event.getOldValue());
              treeEvent.setNewValue(event.getNewValue());
              myManager.propertyChanged(treeEvent);
            }
          }
 else {
            PsiDirectory psiDir1=myFileManager.findDirectory(vFile);
            if (psiDir1 != null) {
              treeEvent.setChild(psiDir1);
              myManager.childAdded(treeEvent);
            }
          }
        }
 else {
          final FileViewProvider fileViewProvider=myFileManager.createFileViewProvider(vFile,true);
          final PsiFile newPsiFile=fileViewProvider.getPsi(fileViewProvider.getBaseLanguage());
          if (oldPsiFile != null) {
            if (newPsiFile == null) {
              myFileManager.setViewProvider(vFile,null);
              treeEvent.setChild(oldPsiFile);
              myManager.childRemoved(treeEvent);
            }
 else             if (!FileManagerImpl.areViewProvidersEquivalent(fileViewProvider,oldFileViewProvider)) {
              myFileManager.setViewProvider(vFile,fileViewProvider);
              treeEvent.setOldChild(oldPsiFile);
              treeEvent.setNewChild(newPsiFile);
              myManager.childReplaced(treeEvent);
            }
 else {
              if (oldPsiFile instanceof PsiFileImpl) {
                ((PsiFileImpl)oldPsiFile).clearCaches();
              }
              treeEvent.setElement(oldPsiFile);
              treeEvent.setPropertyName(PsiTreeChangeEvent.PROP_FILE_NAME);
              treeEvent.setOldValue(event.getOldValue());
              treeEvent.setNewValue(event.getNewValue());
              myManager.propertyChanged(treeEvent);
            }
          }
 else           if (newPsiFile != null) {
            myFileManager.setViewProvider(vFile,fileViewProvider);
            if (parentDir != null) {
              treeEvent.setChild(newPsiFile);
              myManager.childAdded(treeEvent);
            }
          }
        }
      }
 else       if (VirtualFile.PROP_WRITABLE.equals(propertyName)) {
        if (oldPsiFile == null)         return;
        treeEvent.setElement(oldPsiFile);
        treeEvent.setPropertyName(PsiTreeChangeEvent.PROP_WRITABLE);
        treeEvent.setOldValue(event.getOldValue());
        treeEvent.setNewValue(event.getNewValue());
        myManager.propertyChanged(treeEvent);
      }
 else       if (VirtualFile.PROP_ENCODING.equals(propertyName)) {
        if (oldPsiFile == null)         return;
        treeEvent.setElement(oldPsiFile);
        treeEvent.setPropertyName(VirtualFile.PROP_ENCODING);
        treeEvent.setOldValue(event.getOldValue());
        treeEvent.setNewValue(event.getNewValue());
        myManager.propertyChanged(treeEvent);
      }
    }
  }
);
}
