{
  final VirtualFile vFile=event.getFile();
  final PsiDirectory oldParentDir=myFileManager.findDirectory(event.getOldParent());
  final PsiDirectory newParentDir=myFileManager.findDirectory(event.getNewParent());
  if (oldParentDir == null && newParentDir == null)   return;
  if (myFileTypeManager.isFileIgnored(vFile))   return;
  ApplicationManager.getApplication().runWriteAction(new ExternalChangeAction(){
    public void run(){
      PsiTreeChangeEventImpl treeEvent=new PsiTreeChangeEventImpl(myManager);
      boolean isExcluded=vFile.isDirectory() && myProjectFileIndex.isIgnored(vFile);
      if (oldParentDir != null && !isExcluded) {
        if (newParentDir != null) {
          treeEvent.setOldParent(oldParentDir);
          treeEvent.setNewParent(newParentDir);
          if (vFile.isDirectory()) {
            PsiDirectory psiDir=myFileManager.findDirectory(vFile);
            treeEvent.setChild(psiDir);
          }
 else {
            PsiFile psiFile=myFileManager.findFile(vFile);
            treeEvent.setChild(psiFile);
          }
          myManager.beforeChildMovement(treeEvent);
        }
 else {
          treeEvent.setParent(oldParentDir);
          if (vFile.isDirectory()) {
            PsiDirectory psiDir=myFileManager.findDirectory(vFile);
            treeEvent.setChild(psiDir);
          }
 else {
            PsiFile psiFile=myFileManager.findFile(vFile);
            treeEvent.setChild(psiFile);
          }
          myManager.beforeChildRemoval(treeEvent);
        }
      }
 else {
        LOG.assertTrue(newParentDir != null);
        treeEvent.setParent(newParentDir);
        myManager.beforeChildAddition(treeEvent);
      }
    }
  }
);
}
