{
  myProject=project;
  myFileTypeManager=FileTypeManager.getInstance();
  myProjectRootManager=ProjectRootManager.getInstance(project);
  myManager=(PsiManagerImpl)PsiManager.getInstance(project);
  myFileManager=(FileManagerImpl)myManager.getFileManager();
  myConnection=project.getMessageBus().connect(project);
  StartupManager.getInstance(project).registerPreStartupActivity(new Runnable(){
    @Override public void run(){
      final BulkVirtualFileListenerAdapter adapter=new BulkVirtualFileListenerAdapter(PsiVFSListener.this);
      myConnection.subscribe(VirtualFileManager.VFS_CHANGES,new BulkFileListener(){
        @Override public void before(        @NotNull List<? extends VFileEvent> events){
          adapter.before(events);
        }
        @Override public void after(        @NotNull List<? extends VFileEvent> events){
          myReportedUnloadedPsiChange=false;
          adapter.after(events);
          myReportedUnloadedPsiChange=false;
        }
      }
);
      myConnection.subscribe(ProjectTopics.PROJECT_ROOTS,new MyModuleRootListener());
      myConnection.subscribe(FileTypeManager.TOPIC,new FileTypeListener.Adapter(){
        @Override public void fileTypesChanged(        @NotNull FileTypeEvent e){
          myFileManager.processFileTypesChanged();
        }
      }
);
      myConnection.subscribe(AppTopics.FILE_DOCUMENT_SYNC,new MyFileDocumentManagerAdapter());
      myFileManager.markInitialized();
    }
  }
);
}
