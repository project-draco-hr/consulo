{
  Set<String> documentedParamNames=null;
  Set<String> documentedExceptions=null;
  Set<String> uniqueTags=null;
  for (  PsiDocTag tag : tags) {
    if ("param".equals(tag.getName())) {
      PsiDocTagValue value=tag.getValueElement();
      if (value instanceof PsiDocParamRef) {
        PsiDocParamRef paramRef=(PsiDocParamRef)value;
        final PsiReference reference=paramRef.getReference();
        if (reference != null) {
          final String paramName=reference.getCanonicalText();
          if (documentedParamNames == null) {
            documentedParamNames=new HashSet<String>();
          }
          if (documentedParamNames.contains(paramName)) {
            problems.add(createDescriptor(tag.getNameElement(),InspectionsBundle.message("inspection.javadoc.problem.duplicate.param",paramName),manager));
          }
          documentedParamNames.add(paramName);
        }
      }
    }
 else     if ("throws".equals(tag.getName()) || "exception".equals(tag.getName())) {
      PsiDocTagValue value=tag.getValueElement();
      if (value != null) {
        final PsiElement firstChild=value.getFirstChild();
        if (firstChild != null && firstChild.getFirstChild() instanceof PsiJavaCodeReferenceElement) {
          PsiJavaCodeReferenceElement refElement=(PsiJavaCodeReferenceElement)firstChild.getFirstChild();
          if (refElement != null) {
            PsiElement element=refElement.resolve();
            if (element instanceof PsiClass) {
              String fqName=((PsiClass)element).getQualifiedName();
              if (documentedExceptions == null) {
                documentedExceptions=new HashSet<String>();
              }
              if (documentedExceptions.contains(fqName)) {
                problems.add(createDescriptor(tag.getNameElement(),InspectionsBundle.message("inspection.javadoc.problem.duplicate.throws",fqName),manager));
              }
              documentedExceptions.add(fqName);
            }
          }
        }
      }
    }
 else     if (JavaDocLocalInspection.ourUniqueTags.contains(tag.getName())) {
      if (uniqueTags == null) {
        uniqueTags=new HashSet<String>();
      }
      if (uniqueTags.contains(tag.getName())) {
        problems.add(createDescriptor(tag.getNameElement(),InspectionsBundle.message("inspection.javadoc.problem.duplicate.tag",tag.getName()),manager));
      }
      uniqueTags.add(tag.getName());
    }
  }
}
