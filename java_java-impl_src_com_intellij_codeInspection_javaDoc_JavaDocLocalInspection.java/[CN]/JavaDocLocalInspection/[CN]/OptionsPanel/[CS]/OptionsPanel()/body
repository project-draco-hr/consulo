{
  super(new GridBagLayout());
  GridBagConstraints gc=new GridBagConstraints(0,GridBagConstraints.RELATIVE,2,1,1,0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0);
  add(createAdditionalJavadocTagsPanel(),gc);
  JTabbedPane tabs=new JTabbedPane(SwingConstants.BOTTOM);
  @NonNls String[] tags=new String[]{"@author","@version","@since","@param"};
  tabs.add(InspectionsBundle.message("inspection.javadoc.option.tab.title"),createOptionsPanel(new String[]{NONE,PUBLIC,PACKAGE_LOCAL},tags,TOP_LEVEL_CLASS_OPTIONS));
  tags=new String[]{"@return","@param",InspectionsBundle.message("inspection.javadoc.throws.or.exception.option")};
  tabs.add(InspectionsBundle.message("inspection.javadoc.option.tab.title.method"),createOptionsPanel(new String[]{NONE,PUBLIC,PROTECTED,PACKAGE_LOCAL,PRIVATE},tags,METHOD_OPTIONS));
  tabs.add(InspectionsBundle.message("inspection.javadoc.option.tab.title.field"),createOptionsPanel(new String[]{NONE,PUBLIC,PROTECTED,PACKAGE_LOCAL,PRIVATE},null,FIELD_OPTIONS));
  tabs.add(InspectionsBundle.message("inspection.javadoc.option.tab.title.inner.class"),createOptionsPanel(new String[]{NONE,PUBLIC,PROTECTED,PACKAGE_LOCAL,PRIVATE},null,INNER_CLASS_OPTIONS));
  add(tabs,gc);
  final JCheckBox checkBox=new JCheckBox(InspectionsBundle.message("inspection.javadoc.option.ignore.deprecated"),IGNORE_DEPRECATED);
  checkBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      IGNORE_DEPRECATED=checkBox.isSelected();
    }
  }
);
  gc.gridwidth=1;
  add(checkBox,gc);
  final JCheckBox periodCheckBox=new JCheckBox(InspectionsBundle.message("inspection.javadoc.option.ignore.period"),IGNORE_JAVADOC_PERIOD);
  periodCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      IGNORE_JAVADOC_PERIOD=periodCheckBox.isSelected();
    }
  }
);
  add(periodCheckBox,gc);
  final JCheckBox ignoreDuplicateThrowsCheckBox=new JCheckBox("Ignore duplicate throws tag",IGNORE_DUPLICATED_THROWS);
  ignoreDuplicateThrowsCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      IGNORE_DUPLICATED_THROWS=ignoreDuplicateThrowsCheckBox.isSelected();
    }
  }
);
  add(ignoreDuplicateThrowsCheckBox,gc);
  final JCheckBox ignorePointToItselfCheckBox=new JCheckBox("Ignore javadoc pointing to itself",IGNORE_POINT_TO_ITSELF);
  ignorePointToItselfCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      IGNORE_POINT_TO_ITSELF=ignorePointToItselfCheckBox.isSelected();
    }
  }
);
  add(ignorePointToItselfCheckBox,gc);
}
