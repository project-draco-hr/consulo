{
  if (descriptors == null || descriptors.isEmpty())   return;
  Map<RefElement,List<ProblemDescriptor>> problems=new HashMap<RefElement,List<ProblemDescriptor>>();
  RefManager refManager=getContext().getRefManager();
  for (  ProblemDescriptor descriptor : descriptors) {
    final PsiElement elt=descriptor.getPsiElement();
    if (elt == null)     continue;
    if (filterSuppressed && InspectionManagerEx.inspectionResultSuppressed(elt,myTool))     continue;
    final PsiNamedElement problemElement=PsiTreeUtil.getNonStrictParentOfType(elt,PsiFile.class,PsiClass.class,PsiMethod.class,PsiField.class);
    RefElement refElement=refManager.getReference(problemElement);
    List<ProblemDescriptor> elementProblems=problems.get(refElement);
    if (elementProblems == null) {
      elementProblems=new ArrayList<ProblemDescriptor>();
      problems.put(refElement,elementProblems);
    }
    elementProblems.add(descriptor);
  }
  for (  Map.Entry<RefElement,List<ProblemDescriptor>> entry : problems.entrySet()) {
    final List<ProblemDescriptor> problemDescriptors=entry.getValue();
    addProblemElement(entry.getKey(),problemDescriptors.toArray(new CommonProblemDescriptor[problemDescriptors.size()]));
  }
}
