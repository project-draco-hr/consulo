{
  final ContentRevision bRev=change.getBeforeRevision();
  final ContentRevision aRev=change.getAfterRevision();
  String beforePath=bRev != null ? bRev.getFile().getPath() : null;
  String afterPath=aRev != null ? aRev.getFile().getPath() : null;
  String title;
  if (beforePath != null && afterPath != null && !beforePath.equals(afterPath)) {
    beforePath=FileUtil.toSystemDependentName(beforePath);
    afterPath=FileUtil.toSystemDependentName(afterPath);
    title=beforePath + " -> " + afterPath;
  }
 else   if (beforePath != null) {
    beforePath=FileUtil.toSystemDependentName(beforePath);
    title=beforePath;
  }
 else   if (afterPath != null) {
    afterPath=FileUtil.toSystemDependentName(afterPath);
    title=afterPath;
  }
 else {
    title=VcsBundle.message("diff.unknown.path.title");
  }
  request.setWindowTitle(title);
  boolean result=ProgressManager.getInstance().runProcessWithProgressSynchronously(CancelHelper.getInstance(myProject).proxyRunnable(new Runnable(){
    public void run(){
      final ProgressIndicator pi=ProgressManager.getInstance().getProgressIndicator();
      if (pi != null) {
        pi.setIndeterminate(true);
      }
      request.setContents(createContent(bRev),createContent(aRev));
    }
  }
),VcsBundle.message("progress.loading.diff.revisions"),true,myProject);
  if (!result)   return false;
  String beforeRevisionTitle=(bRev != null) ? bRev.getRevisionNumber().asString() : "";
  String afterRevisionTitle=(aRev != null) ? aRev.getRevisionNumber().asString() : "";
  if ((beforeRevisionTitle == null) || (beforeRevisionTitle.length() == 0)) {
    beforeRevisionTitle="Base version";
  }
  if ((afterRevisionTitle == null) || (afterRevisionTitle.length() == 0)) {
    afterRevisionTitle="Your version";
  }
  request.setContentTitles(beforeRevisionTitle,afterRevisionTitle);
  return true;
}
