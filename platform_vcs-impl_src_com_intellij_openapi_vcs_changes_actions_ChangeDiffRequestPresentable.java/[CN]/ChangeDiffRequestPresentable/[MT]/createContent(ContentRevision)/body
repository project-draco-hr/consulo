{
  ProgressManager.checkCanceled();
  if (revision == null)   return SimpleContent.createEmpty();
  if (revision instanceof CurrentContentRevision) {
    final CurrentContentRevision current=(CurrentContentRevision)revision;
    final VirtualFile vFile=current.getVirtualFile();
    return vFile != null ? new FileContent(myProject,vFile) : new SimpleContent("");
  }
  FilePath filePath=revision.getFile();
  if (revision instanceof BinaryContentRevision) {
    final String name=filePath.getName();
    try {
      return FileContent.createFromTempFile(myProject,name,name,((BinaryContentRevision)revision).getBinaryContent());
    }
 catch (    IOException e) {
      LOG.info(e);
      try {
        return FileContent.createFromTempFile(myProject,name,name,ArrayUtil.EMPTY_BYTE_ARRAY);
      }
 catch (      IOException e1) {
        LOG.info(e1);
        return null;
      }
    }
catch (    VcsException e) {
      LOG.info(e);
      try {
        return FileContent.createFromTempFile(myProject,name,name,ArrayUtil.EMPTY_BYTE_ARRAY);
      }
 catch (      IOException e1) {
        LOG.info(e1);
        return null;
      }
    }
  }
  String revisionContent;
  try {
    revisionContent=revision.getContent();
  }
 catch (  VcsException ex) {
    LOG.info(ex);
    revisionContent=null;
  }
  SimpleContent content=revisionContent == null ? new SimpleContent("") : new FileAwareSimpleContent(myProject,filePath,revisionContent,filePath.getFileType());
  VirtualFile vFile=filePath.getVirtualFile();
  if (vFile != null) {
    content.setCharset(vFile.getCharset());
    content.setBOM(vFile.getBOM());
  }
  content.setReadOnly(true);
  return content;
}
