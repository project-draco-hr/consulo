{
  final AntProject project=model.getAntProject();
  final AntTarget[] targets=(project == null) ? AntTarget.EMPTY_ARRAY : project.getTargets();
  final List<AntBuildTargetBase> list=new ArrayList<AntBuildTargetBase>(targets.length);
  final VirtualFile sourceFile=model.getBuildFile().getVirtualFile();
  final AntTarget defaultTarget=project.getDefaultTarget();
  for (  final AntTarget target : targets) {
    list.add(new AntBuildTargetImpl(target,model,sourceFile,false,target.equals(defaultTarget)));
  }
  if (project != null) {
    for (    final AntTarget target : project.getImportedTargets()) {
      final PsiFile containingFile=target.getContainingFile();
      final AntTarget fileDefaultTarget;
      if (containingFile instanceof AntFile) {
        final AntProject antProject=((AntFile)containingFile).getAntProject();
        fileDefaultTarget=antProject != null ? antProject.getDefaultTarget() : null;
      }
 else {
        fileDefaultTarget=null;
      }
      list.add(new AntBuildTargetImpl(target,model,containingFile != null ? containingFile.getVirtualFile() : null,true,target.equals(fileDefaultTarget)));
    }
  }
  return list;
}
