{
  ObjectNode<Disposable> node=Disposer.getTree().getNode(pointer);
  if (node == null) {
    Disposer.register(parentDisposable,pointer);
  }
 else   if (node.getParent().getObject() == parentDisposable) {
    pointer.myNode.incrementUsageCount(-1);
  }
 else {
    DelegatingDisposable delegating=new DelegatingDisposable(pointer);
    DelegatingDisposable registered=Disposer.findRegisteredObject(parentDisposable,delegating);
    if (registered == null) {
      Disposer.register(parentDisposable,delegating);
    }
 else {
      registered.disposeCount++;
    }
  }
  if (node != null && !node.getChildren().isEmpty()) {
    LOG.error("You must not register disposable having VirtualFilePointer as a parent: " + node.getChildren());
  }
}
