{
  if (!myQueue.isEmpty()) {
    debug("Starting delayed works.");
    for (    final Triple t : myQueue) {
      final Callbacks.ConstantAffection affection=t.getAffection();
      debug("Class: ",t.owner);
      debug("Field: ",t.field.name);
      if (!affection.isKnown()) {
        if (myConstantSearch != null) {
          debug("No external dependency information available.");
        }
 else {
          debug("Constant search service not available.");
        }
        debug("Trying to soften non-incremental decision.");
        if (!incrementalDecision(t.owner,t.field,affectedFiles,myFilter)) {
          debug("No luck.");
          debug("End of delayed work, returning false.");
          return false;
        }
      }
 else {
        debug("External dependency information retrieved.");
        final Collection<File> files=affection.getAffectedFiles();
        if (myFilter == null) {
          affectedFiles.addAll(files);
        }
 else {
          for (          File file : files) {
            if (myFilter.accept(file)) {
              affectedFiles.add(file);
            }
          }
        }
      }
    }
    debug("End of delayed work, returning true.");
  }
  return true;
}
