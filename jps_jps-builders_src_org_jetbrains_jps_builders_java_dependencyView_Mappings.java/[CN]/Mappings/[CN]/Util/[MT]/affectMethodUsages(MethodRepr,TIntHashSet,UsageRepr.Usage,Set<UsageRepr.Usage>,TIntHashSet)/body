{
  affectedUsages.add(rootUsage);
  if (subclasses != null) {
    subclasses.forEach(new TIntProcedure(){
      @Override public boolean execute(      int p){
        final TIntHashSet deps=myClassToClassDependency.get(p);
        if (deps != null) {
          addAll(dependents,deps);
        }
        debug("Affect method usage referenced of class ",p);
        final UsageRepr.Usage usage=rootUsage instanceof UsageRepr.MetaMethodUsage ? method.createMetaUsage(myContext,p) : method.createUsage(myContext,p);
        affectedUsages.add(usage);
        return true;
      }
    }
);
  }
}
