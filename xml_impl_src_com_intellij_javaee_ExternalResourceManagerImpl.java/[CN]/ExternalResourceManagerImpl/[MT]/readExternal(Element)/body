{
  final ExpandMacroToPathMap macroExpands=new ExpandMacroToPathMap();
  myPathMacros.addMacroExpands(macroExpands);
  macroExpands.substitute(element,SystemInfo.isFileSystemCaseSensitive);
  myModificationCount++;
  for (  final Object o1 : element.getChildren(RESOURCE_ELEMENT)) {
    Element e=(Element)o1;
    addSilently(e.getAttributeValue(URL_ATTR),DEFAULT_VERSION,e.getAttributeValue(LOCATION_ATTR).replace('/',File.separatorChar));
  }
  for (  final Object o : element.getChildren(IGNORED_RESOURCE_ELEMENT)) {
    Element e=(Element)o;
    addIgnoredSilently(e.getAttributeValue(URL_ATTR));
  }
  Element child=element.getChild(HTML_DEFAULT_DOCTYPE_ELEMENT);
  if (child != null) {
    String text=child.getText();
    if (FileUtil.toSystemIndependentName(text).endsWith("idea.jar!/resources/html5-schema/html5.rnc")) {
      text=HTML5_DOCTYPE_ELEMENT;
    }
    myDefaultHtmlDoctype=text;
  }
  Element catalogElement=element.getChild(CATALOG_PROPERTIES_ELEMENT);
  if (catalogElement != null) {
    myCatalogPropertiesFile=catalogElement.getTextTrim();
  }
}
