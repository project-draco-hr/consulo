{
  if (!(usage.getElement() instanceof GrMethod) || !isGroovyUsage(usage))   return true;
  GrMethod constructor=(GrMethod)usage.getElement();
  if (!constructor.isConstructor())   return true;
  final GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(data.getProject());
  GrExpression superCall=(GrExpression)factory.createStatementFromText("super();");
  superCall=(GrExpression)CodeStyleManager.getInstance(data.getProject()).reformat(superCall);
  GrOpenBlock body=constructor.getBlock();
  final GrStatement[] statements=body.getStatements();
  if (statements.length > 0) {
    superCall=(GrExpression)body.addStatementBefore(superCall,statements[0]);
  }
 else {
    superCall=(GrExpression)body.addStatementBefore(superCall,null);
  }
  processChangeMethodUsage(data,new UsageInfo(((GrMethodCallExpression)superCall).getInvokedExpression()),usages);
  return false;
}
