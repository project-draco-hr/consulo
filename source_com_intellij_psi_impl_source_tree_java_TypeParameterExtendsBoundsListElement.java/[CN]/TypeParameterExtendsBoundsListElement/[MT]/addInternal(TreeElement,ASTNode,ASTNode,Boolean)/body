{
  if (first == last && first.getElementType() == JAVA_CODE_REFERENCE) {
    if (getLastChildNode() != null && getLastChildNode().getElementType() == ERROR_ELEMENT) {
      super.deleteChildInternal(getLastChildNode());
    }
  }
  final TreeElement firstAdded=super.addInternal(first,last,anchor,before);
  final CharTable treeCharTab=SharedImplUtil.findCharTableByTree(this);
  if (first == last && first.getElementType() == JAVA_CODE_REFERENCE) {
    ASTNode element=first;
    for (ASTNode child=element.getTreeNext(); child != null; child=child.getTreeNext()) {
      if (child.getElementType() == AND)       break;
      if (child.getElementType() == JAVA_CODE_REFERENCE) {
        TreeElement comma=Factory.createSingleLeafElement(AND,"&",0,1,treeCharTab,getManager());
        super.addInternal(comma,comma,element,Boolean.FALSE);
        break;
      }
    }
    for (ASTNode child=element.getTreePrev(); child != null; child=child.getTreePrev()) {
      if (child.getElementType() == AND)       break;
      if (child.getElementType() == JAVA_CODE_REFERENCE) {
        TreeElement comma=Factory.createSingleLeafElement(AND,"&",0,1,treeCharTab,getManager());
        super.addInternal(comma,comma,child,Boolean.FALSE);
        break;
      }
    }
  }
  final IElementType keywordType=JavaTokenType.EXTENDS_KEYWORD;
  final String keywordText=PsiKeyword.EXTENDS;
  if (findChildByType(keywordType) == null && findChildByType(JAVA_CODE_REFERENCE) != null) {
    LeafElement keyword=Factory.createSingleLeafElement(keywordType,keywordText,treeCharTab,getManager());
    super.addInternal(keyword,keyword,getFirstChildNode(),Boolean.TRUE);
  }
  return firstAdded;
}
