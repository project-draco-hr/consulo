{
  final List<String> additionalOptions=new ArrayList<String>();
  StringTokenizer tokenizer=new StringTokenizer(javacSettings.getOptionsString(project)," ");
  if (versionIndex < 6) {
    isAnnotationProcessing=false;
  }
  if (isAnnotationProcessing) {
    final CompilerConfiguration config=CompilerConfiguration.getInstance(project);
    additionalOptions.add("-Xprefer:source");
    additionalOptions.add("-implicit:none");
    additionalOptions.add("-proc:only");
    if (!config.isObtainProcessorsFromClasspath()) {
      final String processorPath=config.getProcessorPath();
      if (processorPath.length() > 0) {
        additionalOptions.add("-processorpath");
        additionalOptions.add(FileUtil.toSystemDependentName(processorPath));
      }
    }
    for (    Map.Entry<String,String> entry : config.getAnnotationProcessorsMap().entrySet()) {
      additionalOptions.add("-processor");
      additionalOptions.add(entry.getKey());
      final String options=entry.getValue();
      if (options.length() > 0) {
        StringTokenizer optionsTokenizer=new StringTokenizer(options," ",false);
        while (optionsTokenizer.hasMoreTokens()) {
          final String token=optionsTokenizer.nextToken();
          if (token.startsWith("-A")) {
            additionalOptions.add(token.substring("-A".length()));
          }
 else {
            additionalOptions.add("-A" + token);
          }
        }
      }
    }
  }
 else {
    if (versionIndex > 5) {
      if (annotationProcessorsEnabled) {
        additionalOptions.add("-proc:none");
      }
    }
  }
  while (tokenizer.hasMoreTokens()) {
    @NonNls String token=tokenizer.nextToken();
    if (versionIndex == 0) {
      if ("-deprecation".equals(token)) {
        continue;
      }
    }
    if (versionIndex <= 4) {
      if ("-Xlint".equals(token)) {
        continue;
      }
    }
    if (token.startsWith("-proc:")) {
      continue;
    }
    if (isAnnotationProcessing) {
      if (token.startsWith("-implicit:")) {
        continue;
      }
    }
    if (token.startsWith("-J-")) {
      commandLine.add(token.substring("-J".length()));
    }
 else {
      additionalOptions.add(token);
    }
  }
  return additionalOptions;
}
