{
  if (!isValid())   return null;
  final ApplicationServersManager serversManager=ApplicationServersManager.getInstance();
  final AppEngineServerIntegration integration=AppEngineServerIntegration.getInstance();
  final List<ApplicationServer> servers=serversManager.getApplicationServers(integration);
  File sdkHomeFile=new File(FileUtil.toSystemDependentName(myHomePath));
  for (  ApplicationServer server : servers) {
    final String path=((AppEngineServerData)server.getPersistentData()).getSdkPath();
    if (sdkHomeFile.equals(new File(FileUtil.toSystemDependentName(path)))) {
      return server;
    }
  }
  final ApplicationServersManager.ApplicationServersManagerModifiableModel model=serversManager.createModifiableModel();
  final AppEngineServerData serverData=new AppEngineServerData(myHomePath);
  final ApplicationServerInfo serverInfo;
  try {
    serverInfo=integration.getApplicationServerHelper().getApplicationServerInfo(serverData);
  }
 catch (  CantFindApplicationServerJarsException e) {
    LOG.info(e);
    return null;
  }
  final ApplicationServer server=model.createNewApplicationServer(serverInfo.getDefaultName(),serverInfo.getDefaultLibraries(),serverData);
  new WriteAction(){
    protected void run(    final Result result){
      model.commit();
    }
  }
.execute();
  return server;
}
