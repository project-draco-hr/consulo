{
  final String name=childTag.getName();
  if (FxmlConstants.FX_DEFAULT_ELEMENTS.contains(name)) {
    return new JavaFxDefaultPropertyElementDescriptor(name,childTag);
  }
  final String shortName=StringUtil.getShortName(name);
  if (!name.equals(shortName)) {
    final PsiMethod propertySetter=JavaFxPsiUtil.findPropertySetter(name,childTag);
    if (propertySetter != null) {
      return new JavaFxPropertyElementDescriptor(propertySetter.getContainingClass(),shortName,true);
    }
    final Project project=childTag.getProject();
    if (JavaPsiFacade.getInstance(project).findClass(name,GlobalSearchScope.allScope(project)) == null) {
      return null;
    }
  }
  final String parentTagName=contextTag.getName();
  if (myPsiClass != null) {
    if (!FxmlConstants.FX_DEFINE.equals(parentTagName)) {
      JavaFxPropertyElementDescriptor elementDescriptor=new JavaFxPropertyElementDescriptor(myPsiClass,name,false);
      if (FxmlConstants.FX_ROOT.equals(parentTagName)) {
        final PsiField fieldByName=myPsiClass.findFieldByName(name,true);
        if (fieldByName != null) {
          return elementDescriptor;
        }
      }
 else {
        final PsiAnnotation defaultProperty=AnnotationUtil.findAnnotationInHierarchy(myPsiClass,Collections.singleton(JavaFxCommonClassNames.JAVAFX_BEANS_DEFAULT_PROPERTY));
        if (defaultProperty != null) {
          final PsiAnnotationMemberValue defaultPropertyAttributeValue=defaultProperty.findAttributeValue("value");
          if (defaultPropertyAttributeValue instanceof PsiLiteralExpression) {
            final Object value=((PsiLiteralExpression)defaultPropertyAttributeValue).getValue();
            if (value instanceof String && ((String)value).equalsIgnoreCase(name) && myPsiClass.findFieldByName(name,true) == null) {
              elementDescriptor=null;
            }
          }
        }
        if (elementDescriptor != null && elementDescriptor.getDeclaration() != null) {
          return elementDescriptor;
        }
      }
    }
  }
  return new JavaFxClassBackedElementDescriptor(name,childTag);
}
