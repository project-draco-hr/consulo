{
  final String name=childTag.getName();
  if (FxmlConstants.FX_DEFAULT_ELEMENTS.contains(name)) {
    return new JavaFxDefaultPropertyElementDescriptor(name,childTag);
  }
  final String shortName=StringUtil.getShortName(name);
  if (!name.equals(shortName)) {
    final PsiMethod propertySetter=JavaFxPsiUtil.findPropertySetter(name,childTag);
    if (propertySetter != null) {
      return new JavaFxPropertyElementDescriptor(propertySetter.getContainingClass(),shortName,true);
    }
    final Project project=childTag.getProject();
    if (JavaPsiFacade.getInstance(project).findClass(name,GlobalSearchScope.allScope(project)) == null) {
      return null;
    }
  }
  final String parentTagName=contextTag.getName();
  if (myPsiClass != null) {
    if (!FxmlConstants.FX_DEFINE.equals(parentTagName)) {
      JavaFxPropertyElementDescriptor elementDescriptor=new JavaFxPropertyElementDescriptor(myPsiClass,name,false);
      if (FxmlConstants.FX_ROOT.equals(parentTagName)) {
        final PsiField fieldByName=myPsiClass.findFieldByName(name,true);
        if (fieldByName != null) {
          return elementDescriptor;
        }
      }
 else {
        final JavaFxPropertyElementDescriptor defaultPropertyDescriptor=getDefaultPropertyDescriptor();
        if (defaultPropertyDescriptor != null) {
          final String defaultPropertyName=defaultPropertyDescriptor.getName();
          if (StringUtil.equalsIgnoreCase(defaultPropertyName,name) && !StringUtil.equals(defaultPropertyName,name)) {
            final XmlElementDescriptor childDescriptor=defaultPropertyDescriptor.getElementDescriptor(childTag,contextTag);
            if (childDescriptor != null) {
              return childDescriptor;
            }
          }
        }
        final PsiElement declaration=elementDescriptor.getDeclaration();
        if (declaration != null) {
          if (declaration instanceof PsiField && ((PsiField)declaration).getType() instanceof PsiPrimitiveType) {
            return null;
          }
          return elementDescriptor;
        }
      }
    }
  }
  return new JavaFxClassBackedElementDescriptor(name,childTag);
}
