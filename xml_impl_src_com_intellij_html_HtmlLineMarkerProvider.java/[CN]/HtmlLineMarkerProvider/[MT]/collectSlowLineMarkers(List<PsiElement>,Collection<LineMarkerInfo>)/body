{
  Map<Language,LineMarkerProvider> localEmbeddedLanguagesLineMarkerProviders=null;
  Map<LineMarkerProvider,List<PsiElement>> embeddedLineMarkersWorkItems=null;
  for (  PsiElement element : elements) {
    if (element instanceof PsiWhiteSpace)     continue;
    final Language language=element.getLanguage();
    if (!(language instanceof XMLLanguage)) {
      if (localEmbeddedLanguagesLineMarkerProviders == null) {
        localEmbeddedLanguagesLineMarkerProviders=new THashMap<Language,LineMarkerProvider>();
      }
      final LineMarkerProvider lineMarkerProvider=getLineMarkerProviderFromLanguage(language,localEmbeddedLanguagesLineMarkerProviders);
      if (lineMarkerProvider != null) {
        if (embeddedLineMarkersWorkItems == null)         embeddedLineMarkersWorkItems=new THashMap<LineMarkerProvider,List<PsiElement>>();
        List<PsiElement> elementList=embeddedLineMarkersWorkItems.get(lineMarkerProvider);
        if (elementList == null) {
          elementList=new ArrayList<PsiElement>(5);
          embeddedLineMarkersWorkItems.put(lineMarkerProvider,elementList);
        }
        elementList.add(element);
      }
    }
  }
  if (embeddedLineMarkersWorkItems != null) {
    for (    Map.Entry<LineMarkerProvider,List<PsiElement>> entry : embeddedLineMarkersWorkItems.entrySet()) {
      entry.getKey().collectSlowLineMarkers(entry.getValue(),result);
    }
  }
}
