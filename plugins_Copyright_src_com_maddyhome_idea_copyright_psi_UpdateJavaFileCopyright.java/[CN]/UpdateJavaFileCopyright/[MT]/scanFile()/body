{
  logger.debug("updating " + getFile().getVirtualFile());
  PsiJavaFile javaFile=(PsiJavaFile)getFile();
  PsiElement pkg=javaFile.getPackageStatement();
  PsiElement imports=javaFile.getImportList();
  PsiClass topclass=null;
  PsiClass[] classes=javaFile.getClasses();
  if (classes.length > 0) {
    topclass=classes[0];
  }
  PsiElement first=javaFile.getFirstChild();
  int location=getLanguageOptions().getFileLocation();
  if (pkg != null) {
    checkComments(first,pkg,location == JavaOptions.LOCATION_BEFORE_PACKAGE);
    first=pkg;
  }
 else   if (location == JavaOptions.LOCATION_BEFORE_PACKAGE) {
    location=JavaOptions.LOCATION_BEFORE_IMPORT;
  }
  if (imports != null && imports.getChildren().length > 0) {
    checkComments(first,imports,location == JavaOptions.LOCATION_BEFORE_IMPORT);
    first=imports;
  }
 else   if (location == JavaOptions.LOCATION_BEFORE_IMPORT) {
    location=JavaOptions.LOCATION_BEFORE_CLASS;
  }
  if (topclass != null) {
    final List<PsiComment> comments=new ArrayList<PsiComment>();
    collectComments(first,topclass,comments);
    collectComments(topclass.getFirstChild(),topclass.getModifierList(),comments);
    checkComments(topclass.getModifierList(),location == JavaOptions.LOCATION_BEFORE_CLASS,comments);
  }
 else   if (location == JavaOptions.LOCATION_BEFORE_CLASS) {
  }
}
