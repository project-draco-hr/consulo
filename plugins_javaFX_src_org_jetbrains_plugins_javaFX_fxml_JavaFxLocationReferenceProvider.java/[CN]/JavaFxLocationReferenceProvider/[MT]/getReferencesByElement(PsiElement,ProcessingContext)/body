{
  final String value=((XmlAttributeValue)element).getValue();
  final String relativePathToResource=value.substring(1);
  final VirtualFile virtualFile=element.getContainingFile().getOriginalFile().getVirtualFile();
  if (virtualFile != null) {
    final VirtualFile parent=virtualFile.getParent();
    final VirtualFile resourceFile=parent != null ? parent.findFileByRelativePath(relativePathToResource) : null;
    final PsiReferenceBase.Immediate<XmlAttributeValue> ref=new PsiReferenceBase.Immediate<XmlAttributeValue>((XmlAttributeValue)element,resourceFile != null ? element.getManager().findFile(resourceFile) : null){
      @NotNull @Override public Object[] getVariants(){
        if (parent != null) {
          final PsiDirectory psiDirectory=element.getManager().findDirectory(parent);
          if (psiDirectory != null) {
            final PsiElement[] children=psiDirectory.getChildren();
            final List<String> paths=new ArrayList<String>();
            for (            PsiElement child : children) {
              if (child instanceof PsiFileSystemItem) {
                paths.add("@" + ((PsiFileSystemItem)child).getName());
              }
            }
            return ArrayUtil.toStringArray(paths);
          }
        }
        return super.getVariants();
      }
    }
;
    return new PsiReference[]{ref};
  }
  return PsiReference.EMPTY_ARRAY;
}
