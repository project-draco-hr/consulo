{
  Map<K,List<V>> result=ContainerUtilRt.newHashMap();
  for (  V data : nodes) {
    K key=grouper.fun(data);
    if (key == null) {
      LOG.warn(String.format("Skipping entry '%s' during grouping. Reason: it's not possible to build a grouping key with grouping strategy '%s'. " + "Given entries: %s",data,grouper.getClass(),nodes));
      continue;
    }
    List<V> grouped=result.get(key);
    if (grouped == null) {
      result.put(key,grouped=ContainerUtilRt.newArrayList());
    }
    grouped.add(data);
  }
  if (!result.isEmpty() && result.keySet().iterator().next() instanceof Comparable) {
    List<K> ordered=ContainerUtilRt.newArrayList(result.keySet());
    Collections.sort(ordered,COMPARABLE_GLUE);
    Map<K,List<V>> orderedResult=ContainerUtilRt.newLinkedHashMap();
    for (    K k : ordered) {
      orderedResult.put(k,result.get(k));
    }
    return orderedResult;
  }
  return result;
}
