{
  Collection<File> filesToRemove=getFilesToRemove(context);
  ArrayList<File> files=new ArrayList<File>();
  for (Iterator each=filesToRemove.iterator(); each.hasNext(); ) {
    File file=(File)each.next();
    if (CvsUtil.fileIsLocallyAdded(file)) {
      CvsUtil.removeEntryFor(file);
    }
 else {
      files.add(file);
    }
  }
  if (files.isEmpty())   return CvsHandler.NULL;
  Project project=context.getProject();
  Collection<File> filesToBeRemoved=files;
  if (myOptions.isToBeShown(project) || OptionsDialog.shiftIsPressed(context.getModifiers())) {
    AbstractDeleteConfirmationDialog dialog=AbstractDeleteConfirmationDialog.createDialog(project,files,myOptions);
    dialog.show();
    if (!dialog.isOK())     return CvsHandler.NULL;
    if (dialog.getFilesToRemove().isEmpty())     return CvsHandler.NULL;
    filesToBeRemoved=dialog.getFilesToRemove();
  }
  return CommandCvsHandler.createRemoveFilesHandler(filesToBeRemoved);
}
