{
  g.setColor(GroupedElementsRenderer.POPUP_SEPARATOR_FOREGROUND);
  if (hasCaption()) {
    Rectangle viewR=new Rectangle(0,getVgap(),getWidth() - 1,getHeight() - getVgap() - 1);
    Rectangle iconR=new Rectangle();
    Rectangle textR=new Rectangle();
    String s=SwingUtilities.layoutCompoundLabel(g.getFontMetrics(),myCaption,null,CENTER,myCaptionCentered ? CENTER : LEFT,CENTER,myCaptionCentered ? CENTER : LEFT,viewR,iconR,textR,0);
    final int lineY=textR.y + textR.height / 2;
    if (s.equals(myCaption) && viewR.width - textR.width > 2 * getHgap()) {
      if (myCaptionCentered) {
        g.drawLine(0,lineY,textR.x - getHgap(),lineY);
      }
      g.drawLine(textR.x + textR.width + getHgap(),lineY,getWidth() - 1,lineY);
    }
    UIUtil.applyRenderingHints(g);
    g.setColor(GroupedElementsRenderer.POPUP_SEPARATOR_TEXT_FOREGROUND);
    g.drawString(s,textR.x,textR.y + g.getFontMetrics().getAscent());
  }
 else {
    g.drawLine(0,getVgap(),getWidth() - 1,getVgap());
  }
}
