{
  PsiType type=expression.getType();
  if (type == null) {
    throw new EvaluateRuntimeException(EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.unknown.expression.type",expression.getText())));
  }
  expression.getOperand().accept(this);
  final Evaluator operand=myResult;
  final IElementType opType=expression.getOperationSign().getTokenType();
  if (opType == JavaTokenType.PLUSPLUS || opType == JavaTokenType.MINUSMINUS) {
    final boolean isPlus=opType == JavaTokenType.PLUSPLUS;
    try {
      PsiElementFactory elementFactory=expression.getManager().getElementFactory();
      PsiExpression one=elementFactory.createExpressionFromText("1",null);
      one.accept(this);
      myResult=new AssignmentEvaluator(operand,new BinaryExpressionEvaluator(operand,myResult,isPlus ? JavaTokenType.PLUS : JavaTokenType.MINUS,type.getCanonicalText()));
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
  }
 else {
    myResult=new UnaryExpressionEvaluator(opType,expression.getType().getCanonicalText(),operand,expression.getOperationSign().getText());
  }
}
