{
  super.visitAssignmentExpression(assignment);
  final IElementType sign=assignment.getOperationTokenType();
  if (!sign.equals(GroovyTokenTypes.mASSIGN)) {
    return;
  }
  final GrExpression lhs=assignment.getLValue();
  final GrExpression rhs=assignment.getRValue();
  if (rhs == null) {
    return;
  }
  if (!(rhs instanceof GrReferenceExpression) || !(lhs instanceof GrReferenceExpression)) {
    return;
  }
  final GrReferenceExpression rhsReference=(GrReferenceExpression)rhs;
  final GrReferenceExpression lhsReference=(GrReferenceExpression)lhs;
  final GrExpression rhsQualifier=rhsReference.getQualifierExpression();
  final GrExpression lhsQualifier=lhsReference.getQualifierExpression();
  if (rhsQualifier != null || lhsQualifier != null) {
    if (!EquivalenceChecker.expressionsAreEquivalent(rhsQualifier,lhsQualifier)) {
      return;
    }
  }
  final String rhsName=rhsReference.getReferenceName();
  final String lhsName=lhsReference.getReferenceName();
  if (rhsName == null || lhsName == null) {
    return;
  }
  if (!rhsName.equals(lhsName)) {
    return;
  }
  final PsiElement rhsReferent=rhsReference.resolve();
  final PsiElement lhsReferent=lhsReference.resolve();
  if (rhsReferent != null && lhsReferent != null && !rhsReferent.equals(lhsReferent)) {
    return;
  }
  registerError(assignment);
}
