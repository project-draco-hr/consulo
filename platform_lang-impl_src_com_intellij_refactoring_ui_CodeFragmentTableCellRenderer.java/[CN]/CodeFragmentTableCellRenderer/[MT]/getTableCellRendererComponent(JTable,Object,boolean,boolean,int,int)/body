{
  PsiCodeFragment codeFragment=(PsiCodeFragment)value;
  final EditorTextField editorTextField;
  if (codeFragment != null) {
    Document document=PsiDocumentManager.getInstance(myProject).getDocument(codeFragment);
    editorTextField=new EditorTextField(document,myProject,myFileType){
      protected boolean shouldHaveBorder(){
        return false;
      }
    }
;
  }
 else {
    editorTextField=new EditorTextField("",myProject,myFileType){
      protected boolean shouldHaveBorder(){
        return false;
      }
    }
;
  }
  if (!table.isShowing()) {
    editorTextField.ensureWillComputePreferredSize();
  }
  editorTextField.putClientProperty("JComboBox.isTableCellEditor",Boolean.TRUE);
  ListSelectionModel selModel=table.getSelectionModel();
  final Color color=(selModel.getMaxSelectionIndex() - selModel.getMinSelectionIndex()) == 0 ? table.getSelectionBackground() : table.getForeground();
  editorTextField.setBorder(hasFocus ? BorderFactory.createLineBorder(color) : IdeBorderFactory.createEmptyBorder(1));
  return editorTextField;
}
