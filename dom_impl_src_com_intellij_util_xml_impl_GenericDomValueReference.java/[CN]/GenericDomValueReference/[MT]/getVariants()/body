{
  final Converter<T> converter=getConverter();
  if (converter instanceof ResolvingConverter) {
    final ResolvingConverter<T> resolvingConverter=(ResolvingConverter<T>)converter;
    ArrayList<Object> result=new ArrayList<Object>();
    final ConvertContext convertContext=getConvertContext();
    for (    T variant : resolvingConverter.getVariants(convertContext)) {
      String name=converter.toString(variant,convertContext);
      if (name != null) {
        final Icon presentationIcon=ElementPresentationManager.getIcon(variant);
        final Icon icon=presentationIcon == null && variant instanceof Iconable ? ((Iconable)variant).getIcon(Iconable.ICON_FLAG_READ_STATUS) : presentationIcon;
        final String hint=ElementPresentationManager.getHintForElement(variant);
        result.add(hint == null ? LookupValueFactory.createLookupValue(name,icon) : LookupValueFactory.createLookupValueWithHint(name,icon,hint));
      }
    }
    for (    final String string : resolvingConverter.getAdditionalVariants(convertContext)) {
      result.add(LookupValueFactory.createLookupValue(string,null));
    }
    return result.toArray();
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
