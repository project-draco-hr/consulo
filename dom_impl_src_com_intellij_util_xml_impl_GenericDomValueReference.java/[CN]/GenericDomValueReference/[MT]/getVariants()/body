{
  final Converter<T> converter=myGenericValue.getConverter();
  if (converter instanceof ResolvingConverter) {
    final ResolvingConverter<T> resolvingConverter=(ResolvingConverter<T>)converter;
    final ConvertContext convertContext=new ConvertContextImpl(DomManagerImpl.getDomInvocationHandler(myGenericValue));
    final Collection<T> variants=resolvingConverter.getVariants(convertContext);
    ArrayList<Object> result=new ArrayList<Object>(variants.size());
    for (    T variant : variants) {
      String name=converter.toString(variant,convertContext);
      if (name != null) {
        Icon icon=ElementPresentationManager.getIcon(variant);
        Object value=LookupValueFactory.createLookupValue(name,icon);
        result.add(value);
      }
    }
    return result.toArray();
  }
  return super.getVariants();
}
