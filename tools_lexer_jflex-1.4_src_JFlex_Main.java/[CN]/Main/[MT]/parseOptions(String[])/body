{
  Vector files=new Vector();
  for (int i=0; i < argv.length; i++) {
    if (argv[i].equals("-d") || argv[i].equals("--outdir")) {
      if (++i >= argv.length) {
        Out.error(ErrorMessages.NO_DIRECTORY);
        throw new GeneratorException();
      }
      Options.setDir(argv[i]);
      continue;
    }
    if (argv[i].equals("--skel") || argv[i].equals("-skel")) {
      if (++i >= argv.length) {
        Out.error(ErrorMessages.NO_SKEL_FILE);
        throw new GeneratorException();
      }
      Options.setSkeleton(new File(argv[i]));
      continue;
    }
    if (argv[i].equals("-jlex") || argv[i].equals("--jlex")) {
      Options.jlex=true;
      continue;
    }
    if (argv[i].equals("-v") || argv[i].equals("--verbose") || argv[i].equals("-verbose")) {
      Options.verbose=true;
      Options.progress=true;
      continue;
    }
    if (argv[i].equals("-q") || argv[i].equals("--quiet") || argv[i].equals("-quiet")) {
      Options.verbose=false;
      Options.progress=false;
      continue;
    }
    if (argv[i].equals("--dump") || argv[i].equals("-dump")) {
      Options.dump=true;
      continue;
    }
    if (argv[i].equals("--time") || argv[i].equals("-time")) {
      Options.time=true;
      continue;
    }
    if (argv[i].equals("--version") || argv[i].equals("-version")) {
      Out.println(ErrorMessages.THIS_IS_JFLEX,version);
      throw new SilentExit();
    }
    if (argv[i].equals("--dot") || argv[i].equals("-dot")) {
      Options.dot=true;
      continue;
    }
    if (argv[i].equals("--help") || argv[i].equals("-h") || argv[i].equals("/h")) {
      printUsage();
      throw new SilentExit();
    }
    if (argv[i].equals("--info") || argv[i].equals("-info")) {
      Out.printSystemInfo();
      throw new SilentExit();
    }
    if (argv[i].equals("--nomin") || argv[i].equals("-nomin")) {
      Options.no_minimize=true;
      continue;
    }
    if (argv[i].equals("--pack") || argv[i].equals("-pack")) {
      Options.gen_method=Options.PACK;
      continue;
    }
    if (argv[i].equals("--table") || argv[i].equals("-table")) {
      Options.gen_method=Options.TABLE;
      continue;
    }
    if (argv[i].equals("--switch") || argv[i].equals("-switch")) {
      Options.gen_method=Options.SWITCH;
      continue;
    }
    if (argv[i].equals("--nobak") || argv[i].equals("-nobak")) {
      Options.no_backup=true;
      continue;
    }
    if (argv[i].equals("--charat") || argv[i].equals("-charat")) {
      Options.char_at=true;
      continue;
    }
    if (argv[i].equals("--sliceandcharat") || argv[i].equals("-sliceandcharat")) {
      Options.sliceAndCharAt=true;
      continue;
    }
    if (argv[i].startsWith("-")) {
      Out.error(ErrorMessages.UNKNOWN_COMMANDLINE,argv[i]);
      printUsage();
      throw new SilentExit();
    }
    File f=new File(argv[i]);
    if (f.isFile() && f.canRead())     files.addElement(f);
 else {
      Out.error("Sorry, couldn't open \"" + f + "\"");
      throw new GeneratorException();
    }
  }
  return files;
}
