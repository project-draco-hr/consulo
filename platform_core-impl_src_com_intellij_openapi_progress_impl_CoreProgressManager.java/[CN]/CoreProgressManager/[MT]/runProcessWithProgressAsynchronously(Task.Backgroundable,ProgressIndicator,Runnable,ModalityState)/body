{
  if (progressIndicator instanceof Disposable) {
    Disposer.register(ApplicationManager.getApplication(),(Disposable)progressIndicator);
  }
  final Runnable process=new TaskRunnable(task,progressIndicator,continuation);
  Runnable action=new TaskContainer(task){
    @Override public void run(){
      boolean processCanceled=false;
      Exception exception=null;
      try {
        runProcess(process,progressIndicator);
      }
 catch (      ProcessCanceledException e) {
        processCanceled=true;
      }
catch (      Exception e) {
        exception=e;
      }
      final boolean finalCanceled=processCanceled || progressIndicator.isCanceled();
      final Exception finalException=exception;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          finishTask(task,finalCanceled,finalException);
        }
      }
,modalityState);
    }
  }
;
  return ApplicationManager.getApplication().executeOnPooledThread(action);
}
