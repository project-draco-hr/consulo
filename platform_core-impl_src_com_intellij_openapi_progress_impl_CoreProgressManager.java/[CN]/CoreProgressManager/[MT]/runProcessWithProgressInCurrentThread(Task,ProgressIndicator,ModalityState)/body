{
  if (progressIndicator instanceof Disposable) {
    Disposer.register(ApplicationManager.getApplication(),(Disposable)progressIndicator);
  }
  final Runnable process=new TaskRunnable(task,progressIndicator);
  boolean processCanceled=false;
  Exception exception=null;
  try {
    runProcess(process,progressIndicator);
  }
 catch (  ProcessCanceledException e) {
    processCanceled=true;
  }
catch (  Exception e) {
    exception=e;
  }
  final boolean finalCanceled=processCanceled || progressIndicator.isCanceled();
  final Exception finalException=exception;
  if (ApplicationManager.getApplication().isDispatchThread()) {
    finishTask(task,finalCanceled,finalException);
  }
 else {
    ApplicationManager.getApplication().invokeAndWait(new Runnable(){
      @Override public void run(){
        finishTask(task,finalCanceled,finalException);
      }
    }
,modalityState);
  }
}
