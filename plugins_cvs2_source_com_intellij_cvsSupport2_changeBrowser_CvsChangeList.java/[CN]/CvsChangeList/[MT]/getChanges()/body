{
  if (myChanges == null) {
    myChanges=new ArrayList<Change>();
    for (    RevisionWrapper wrapper : myRevisions) {
      final Revision revision=wrapper.getRevision();
      final String state=revision.getState();
      String path=wrapper.getFile();
      File localFile;
      if (myRootFile != null) {
        String directorySuffix=myRootFile.isDirectory() ? "/" : "";
        if (path.startsWith(myRootPath + directorySuffix)) {
          path=path.substring(myRootPath.length() + directorySuffix.length());
          localFile=new File(myRootFile.getPresentableUrl(),path);
        }
 else {
          localFile=new File(wrapper.getFile());
        }
      }
 else {
        localFile=new File(wrapper.getFile());
      }
      final boolean added=isAdded(revision);
      ContentRevision beforeRevision=added ? null : new CvsContentRevision(new File(wrapper.getFile()),localFile,new SimpleRevision(new CvsRevisionNumber(revision.getNumber()).getPrevNumber().asString()),myEnvironment,myProject);
      ContentRevision afterRevision=(!added && DEAD_STATE.equals(state)) ? null : new CvsContentRevision(new File(wrapper.getFile()),localFile,new SimpleRevision(revision.getNumber()),myEnvironment,myProject);
      myChanges.add(new Change(beforeRevision,afterRevision));
    }
  }
  return myChanges;
}
