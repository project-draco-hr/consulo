{
  final Project project=e.getData(CommonDataKeys.PROJECT);
  final Change[] changes=e.getData(VcsDataKeys.CHANGES);
  if (project == null || !canShowDiff(project,changes))   return;
  if (ChangeListManager.getInstance(project).isFreezedWithNotification(null))   return;
  final boolean needsConversion=checkIfThereAreFakeRevisions(project,changes);
  final List<Change> changesInList=e.getData(VcsDataKeys.CHANGES_IN_LIST_KEY);
  final Runnable performer=new Runnable(){
    public void run(){
      Change[] convertedChanges;
      if (needsConversion) {
        convertedChanges=loadFakeRevisions(project,changes);
      }
 else {
        convertedChanges=changes;
      }
      if (convertedChanges == null || convertedChanges.length == 0) {
        return;
      }
      Change selectedChane=null;
      List<Change> result=null;
      if (convertedChanges.length == 1) {
        selectedChane=convertedChanges[0];
        ChangeList changeList=((ChangeListManagerImpl)ChangeListManager.getInstance(project)).getIdentityChangeList(selectedChane);
        if (changeList != null) {
          result=changesInList != null ? changesInList : new ArrayList<>(changeList.getChanges());
        }
      }
      if (result == null)       result=ContainerUtil.newArrayList(convertedChanges);
      int index=selectedChane == null ? 0 : Math.max(0,ContainerUtil.indexOfIdentity(result,selectedChane));
      showDiffForChange(project,result,index);
    }
  }
;
  if (needsConversion) {
    ChangeListManager.getInstance(project).invokeAfterUpdate(performer,InvokeAfterUpdateMode.BACKGROUND_CANCELLABLE,ActionsBundle.actionText("ChangesView.Diff"),ModalityState.current());
  }
 else {
    performer.run();
  }
}
