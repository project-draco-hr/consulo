{
  super(project);
  bus.connect().subscribe(ProjectTopics.MODULE_LAYERS,new ModuleRootLayerListener.Adapter(){
    @Override public void currentLayerChanged(    @NotNull final Module module,    @NotNull final String oldName,    @NotNull final ModuleRootLayer oldLayer,    @NotNull final String newName,    @NotNull final ModuleRootLayer newLayer){
      final List<Couple<ModuleExtension>> list=new ArrayList<Couple<ModuleExtension>>();
      for (      ModuleExtensionProviderEP providerEP : ModuleExtensionProviderEP.EP_NAME.getExtensions()) {
        MutableModuleExtension oldExtension=oldLayer.getExtensionWithoutCheck(providerEP.getKey());
        MutableModuleExtension newExtension=newLayer.getExtensionWithoutCheck(providerEP.getKey());
        if (oldExtension == null || newExtension == null) {
          continue;
        }
        if (oldExtension.isModified(newExtension)) {
          list.add(Couple.<ModuleExtension>of(oldExtension,newExtension));
        }
      }
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          ModuleExtensionChangeListener moduleExtensionChangeListener=bus.syncPublisher(ModuleExtension.CHANGE_TOPIC);
          for (          Couple<ModuleExtension> couple : list) {
            moduleExtensionChangeListener.beforeExtensionChanged(couple.getFirst(),couple.getSecond());
          }
        }
      }
,ModalityState.NON_MODAL);
    }
  }
);
}
