{
  final File file=new File(CompilerPaths.getCompilerSystemDirectory(),PATHS_TO_DELETE_FILENAME);
  try {
    if (!file.exists()) {
      file.createNewFile();
    }
    final DataOutputStream os=new DataOutputStream(new BufferedOutputStream(new FileOutputStream(file)));
    try {
synchronized (myOutputsToDelete) {
        os.writeInt(myOutputsToDelete.size());
        for (        Map.Entry<String,SourceUrlClassNamePair> entry : myOutputsToDelete.entrySet()) {
          CompilerIOUtil.writeString(entry.getKey(),os);
          final SourceUrlClassNamePair pair=entry.getValue();
          CompilerIOUtil.writeString(pair.getSourceUrl(),os);
          CompilerIOUtil.writeString(pair.getClassName(),os);
        }
      }
    }
  finally {
      os.close();
    }
  }
 catch (  IOException e) {
    LOG.error(e);
  }
}
