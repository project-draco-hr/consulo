{
  final Set<Node> toProcess=new HashSet<Node>();
  final Set<Node> alreadyProcessed=new HashSet<Node>();
  toProcess.add(node);
  while (!toProcess.isEmpty()) {
    alreadyProcessed.addAll(toProcess);
    final List<Node> nodes=new ArrayList<Node>(toProcess);
    toProcess.clear();
    for (Iterator<Node> nodesToProcessIterator=nodes.iterator(); nodesToProcessIterator.hasNext(); ) {
      final Node n=nodesToProcessIterator.next();
      for (Iterator<Node> it=graph.getNodes().iterator(); it.hasNext(); ) {
        final Node n1=it.next();
        if (fromTheNode ? hasArc(graph,n,n1) : hasArc(graph,n1,n)) {
          reachableSet.add(n1);
          if (!alreadyProcessed.contains(n1)) {
            toProcess.add(n1);
          }
        }
      }
    }
  }
}
