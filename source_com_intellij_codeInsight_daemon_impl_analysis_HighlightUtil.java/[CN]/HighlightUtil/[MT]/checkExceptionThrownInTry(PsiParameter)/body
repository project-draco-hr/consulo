{
  PsiElement declarationScope=parameter.getDeclarationScope();
  if (!(declarationScope instanceof PsiCatchSection))   return null;
  PsiTryStatement statement=((PsiCatchSection)declarationScope).getTryStatement();
  PsiClassType[] classes=ExceptionUtil.collectUnhandledExceptions(statement.getTryBlock(),statement.getTryBlock());
  if (classes == null)   classes=PsiClassType.EMPTY_ARRAY;
  final PsiType caughtType=parameter.getType();
  if (!(caughtType instanceof PsiClassType))   return null;
  if (ExceptionUtil.isUncheckedExceptionOrSuperclass((PsiClassType)caughtType))   return null;
  for (int i=0; i < classes.length; i++) {
    PsiClassType exceptionType=classes[i];
    if (exceptionType.isAssignableFrom(caughtType) || caughtType.isAssignableFrom(exceptionType))     return null;
  }
  String description=MessageFormat.format(EXCEPTION_NEVER_THROWN_IN_TRY,new Object[]{formatType(caughtType)});
  HighlightInfo errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,parameter,description);
  QuickFixAction.registerQuickFixAction(errorResult,new DeleteCatchFix(parameter));
  return errorResult;
}
