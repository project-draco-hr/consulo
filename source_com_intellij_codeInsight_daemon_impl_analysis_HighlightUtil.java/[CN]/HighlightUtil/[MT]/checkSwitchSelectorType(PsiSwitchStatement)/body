{
  final PsiExpression expression=statement.getExpression();
  HighlightInfo errorResult=null;
  if (expression != null && expression.getType() != null) {
    final PsiType type=expression.getType();
    if (!isValidTypeForSwitchSelector(type)) {
      String message=MessageFormat.format(INCOMPATIBLE_TYPES,new Object[]{"byte, char, short or int",formatType(type)});
      errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,expression,message);
      if (PsiType.LONG == type || PsiType.FLOAT == type || PsiType.DOUBLE == type) {
        QuickFixAction.registerQuickFixAction(errorResult,new AddTypeCastFix(PsiType.INT,expression));
      }
    }
  }
  return errorResult;
}
