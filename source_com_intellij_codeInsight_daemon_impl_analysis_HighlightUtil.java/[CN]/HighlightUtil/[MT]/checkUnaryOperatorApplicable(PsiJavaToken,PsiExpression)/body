{
  if (token != null && expression != null && !TypeConversionUtil.isUnaryOperatorApplicable(token,expression)) {
    final PsiType type=expression.getType();
    if (type == null)     return null;
    String message=MessageFormat.format("Operator ''{0}'' cannot be applied to ''{1}''",new Object[]{token.getText(),formatType(type)});
    final PsiElement parentExpr=token.getParent();
    final HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,parentExpr,message);
    if (parentExpr instanceof PsiPrefixExpression && token.getTokenType() == JavaTokenType.EXCL) {
      QuickFixAction.registerQuickFixAction(highlightInfo,new NegationBroadScopeFix((PsiPrefixExpression)parentExpr));
    }
    return highlightInfo;
  }
  return null;
}
