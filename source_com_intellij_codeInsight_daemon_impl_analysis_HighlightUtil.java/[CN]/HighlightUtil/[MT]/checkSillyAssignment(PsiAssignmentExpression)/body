{
  if (!DaemonCodeAnalyzerSettings.getInstance().getInspectionProfile().isToolEnabled(HighlightDisplayKey.SILLY_ASSIGNMENT)) {
    return null;
  }
  InspectionManagerEx iManager=((InspectionManagerEx)InspectionManager.getInstance(assignment.getProject()));
  if (iManager.inspectionResultSuppressed(assignment,HighlightDisplayKey.SILLY_ASSIGNMENT.toString()))   return null;
  if (assignment.getOperationSign().getTokenType() != JavaTokenType.EQ)   return null;
  PsiExpression lExpression=assignment.getLExpression();
  PsiExpression rExpression=assignment.getRExpression();
  if (lExpression == null || rExpression == null)   return null;
  lExpression=PsiUtil.deparenthesizeExpression(lExpression);
  rExpression=PsiUtil.deparenthesizeExpression(rExpression);
  if (!(lExpression instanceof PsiReferenceExpression) || !(rExpression instanceof PsiReferenceExpression))   return null;
  PsiReferenceExpression lRef=(PsiReferenceExpression)lExpression;
  PsiReferenceExpression rRef=(PsiReferenceExpression)rExpression;
  PsiManager manager=assignment.getManager();
  if (!sameInstanceReferences(lRef,rRef,manager))   return null;
  HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.SILLY_ASSIGNMENT,assignment,"Silly assignment");
  QuickFixAction.registerQuickFixAction(highlightInfo,new AddNoInspectionCommentAction(HighlightDisplayKey.SILLY_ASSIGNMENT,assignment));
  QuickFixAction.registerQuickFixAction(highlightInfo,new SwitchOffToolAction(HighlightDisplayKey.SILLY_ASSIGNMENT));
  return highlightInfo;
}
