{
  boolean overflow=false;
  try {
    if (expr.getUserData(HAS_OVERFLOW_IN_CHILD) == null) {
      expr.getManager().getConstantEvaluationHelper().computeConstantExpression(expr,true);
    }
 else {
      overflow=true;
    }
  }
 catch (  ConstantEvaluationOverflowException e) {
    overflow=true;
    return HighlightInfo.createHighlightInfo(HighlightInfoType.OVERFLOW_WARNING,expr,"Numeric overflow in expression");
  }
 finally {
    final PsiElement parent=expr.getParent();
    if (parent instanceof PsiExpression && overflow) {
      parent.putUserData(HAS_OVERFLOW_IN_CHILD,"");
    }
  }
  return null;
}
