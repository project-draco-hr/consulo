{
  final PsiElement resolved=result.getElement();
  if (!DaemonCodeAnalyzerSettings.getInstance().getInspectionProfile().isToolEnabled(HighlightDisplayKey.ACCESS_STATIC_VIA_INSTANCE)) {
    return null;
  }
  if (!(resolved instanceof PsiMember))   return null;
  final PsiExpression qualifierExpression=expr.getQualifierExpression();
  if (qualifierExpression == null)   return null;
  if (qualifierExpression instanceof PsiReferenceExpression && ((PsiReferenceExpression)qualifierExpression).resolve() instanceof PsiClass) {
    return null;
  }
  if (!((PsiMember)resolved).hasModifierProperty(PsiModifier.STATIC))   return null;
  String description=MessageFormat.format("Static member ''{0}.{1}'' accessed via instance reference",new Object[]{formatType(qualifierExpression.getType()),HighlightMessageUtil.getSymbolName(resolved,result.getSubstitutor())});
  final HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.ACCESS_STATIC_VIA_INSTANCE,expr,description);
  QuickFixAction.registerQuickFixAction(highlightInfo,new AccessStaticViaInstanceFix(expr,result));
  QuickFixAction.registerQuickFixAction(highlightInfo,new SwitchOffToolAction(HighlightDisplayKey.ACCESS_STATIC_VIA_INSTANCE));
  return highlightInfo;
}
