{
  final InspectionManagerEx.UIOptions uiOptions=((InspectionManagerEx)InspectionManagerEx.getInstance(myProject)).getUIOptions();
  JPanel wholePanel=new JPanel(new BorderLayout());
  JPanel panel=new JPanel();
  panel.setBorder(IdeBorderFactory.createTitledBorder(myAnalysisNoon + " scope"));
  panel.setLayout(new BoxLayout(panel,BoxLayout.Y_AXIS));
  myFileButton=new JRadioButton(myFileName);
  myFileButton.setMnemonic(myFileName.indexOf("F") > -1 ? KeyEvent.VK_F : KeyEvent.VK_M);
  myProjectButton=new JRadioButton("Whole project");
  myProjectButton.setMnemonic(KeyEvent.VK_W);
  ButtonGroup group=new ButtonGroup();
  group.add(myProjectButton);
  group.add(myFileButton);
  panel.add(myProjectButton);
  boolean useModuleScope=false;
  if (myModuleName != null) {
    myModuleButton=new JRadioButton("Module \'" + myModuleName + "\'");
    myModuleButton.setMnemonic(KeyEvent.VK_M);
    group.add(myModuleButton);
    useModuleScope=uiOptions.SCOPE_TYPE == AnalysisScope.MODULE;
    myModuleButton.setSelected(useModuleScope);
    panel.add(myModuleButton);
  }
  panel.add(myFileButton);
  wholePanel.add(panel,BorderLayout.CENTER);
  myInspectTestSource=new JCheckBox("Include Test Sources",uiOptions.ANALYZE_TEST_SOURCES);
  wholePanel.add(myInspectTestSource,BorderLayout.SOUTH);
  myProjectButton.setSelected(uiOptions.SCOPE_TYPE == AnalysisScope.PROJECT);
  myFileButton.setSelected(uiOptions.SCOPE_TYPE != AnalysisScope.PROJECT && !useModuleScope);
  return wholePanel;
}
