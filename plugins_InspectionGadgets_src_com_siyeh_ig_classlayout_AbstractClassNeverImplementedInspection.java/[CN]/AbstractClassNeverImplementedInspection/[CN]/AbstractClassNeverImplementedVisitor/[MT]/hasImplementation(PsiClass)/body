{
  final PsiManager psiManager=aClass.getManager();
  final PsiSearchHelper searchHelper=psiManager.getSearchHelper();
  final SearchScope searchScope=aClass.getUseScope();
  final PsiClass[] inheritors=searchHelper.findInheritors(aClass,searchScope,true);
  for (int i=0; i < inheritors.length; i++) {
    final PsiClass inheritor=inheritors[i];
    if (!inheritor.isInterface() && !inheritor.isAnnotationType() && !inheritor.hasModifierProperty(PsiModifier.ABSTRACT)) {
      return true;
    }
  }
  return false;
}
