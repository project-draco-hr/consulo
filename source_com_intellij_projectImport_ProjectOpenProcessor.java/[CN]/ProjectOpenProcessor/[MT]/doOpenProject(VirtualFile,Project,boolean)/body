{
  final WizardContext wizardContext=new WizardContext(null);
  if (doQuickImport(virtualFile,wizardContext)) {
    if (wizardContext.getProjectName() == null) {
      wizardContext.setProjectName(IdeBundle.message("project.import.default.name",getName()) + ProjectFileType.DOT_DEFAULT_EXTENSION);
    }
    wizardContext.setProjectFileDirectory(virtualFile.getParent().getPath());
    if (wizardContext.getProjectJdk() == null) {
      for (      ProjectJdk projectJdk : ProjectJdkTable.getInstance().getAllJdks()) {
        if (wizardContext.getProjectJdk() == null || wizardContext.getProjectJdk().getVersionString().compareTo(projectJdk.getVersionString()) < 0) {
          wizardContext.setProjectJdk(projectJdk);
        }
      }
    }
    final String newProjectPath=wizardContext.getProjectFileDirectory() + File.separator + wizardContext.getProjectName()+ ProjectFileType.DOT_DEFAULT_EXTENSION;
    final Project projectToUpdate=ProjectManagerEx.getInstanceEx().newProject(newProjectPath,true,false);
    if (!getBuilder().validate(projectToClose,projectToUpdate)) {
      return null;
    }
    projectToUpdate.save();
    final ProjectRootManagerEx rootManager=ProjectRootManagerEx.getInstanceEx(projectToUpdate);
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        if (wizardContext.getProjectJdk() != null) {
          final String versionString=wizardContext.getProjectJdk().getVersionString();
          if (versionString != null) {
            rootManager.setProjectJdk(wizardContext.getProjectJdk());
            rootManager.setLanguageLevel(ProjectUtil.getDefaultLanguageLevel(versionString));
          }
        }
        final String projectFilePath=wizardContext.getProjectFileDirectory();
        rootManager.setCompilerOutputUrl(getUrl(StringUtil.endsWithChar(projectFilePath,'/') ? projectFilePath + "classes" : projectFilePath + "/classes"));
      }
    }
);
    getBuilder().commit(projectToUpdate);
    if (!forceOpenInNewFrame) {
      ProjectUtil.closePreviousProject(projectToClose);
    }
    ProjectUtil.updateLastProjectLocation(newProjectPath);
    ProjectManagerEx.getInstanceEx().openProject(projectToUpdate);
    return projectToUpdate;
  }
  return null;
}
