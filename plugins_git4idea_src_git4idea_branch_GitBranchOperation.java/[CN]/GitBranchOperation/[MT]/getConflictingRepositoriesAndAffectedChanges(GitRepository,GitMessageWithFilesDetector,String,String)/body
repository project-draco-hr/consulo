{
  List<Change> affectedChanges=convertPathsToChanges(currentRepository,localChangesOverwrittenBy.getRelativeFilePaths(),true);
  Map<GitRepository,List<Change>> conflictingChangesInRepositories=collectLocalChangesConflictingWithBranch(getRemainingRepositoriesExceptGiven(currentRepository),currentBranch,nextBranch);
  Set<GitRepository> otherProblematicRepositories=conflictingChangesInRepositories.keySet();
  List<GitRepository> allConflictingRepositories=new ArrayList<GitRepository>(otherProblematicRepositories);
  allConflictingRepositories.add(currentRepository);
  for (  List<Change> changes : conflictingChangesInRepositories.values()) {
    affectedChanges.addAll(changes);
  }
  return Pair.create(allConflictingRepositories,affectedChanges);
}
