{
  final PsiExpression expression=statement.getExpression();
  if (expression == null) {
    return false;
  }
  final PsiType type=expression.getType();
  if (type == null) {
    return false;
  }
  if (!(type instanceof PsiClassType)) {
    return false;
  }
  final PsiClass aClass=((PsiClassType)type).resolve();
  if (aClass == null) {
    return false;
  }
  if (!aClass.isEnum()) {
    return false;
  }
  final PsiCodeBlock body=statement.getBody();
  if (body == null) {
    return false;
  }
  final PsiStatement[] statements=body.getStatements();
  boolean containsDefault=false;
  int numCases=0;
  for (  final PsiStatement child : statements) {
    if (child instanceof PsiSwitchLabelStatement) {
      if (((PsiSwitchLabelStatement)child).isDefaultCase()) {
        containsDefault=true;
      }
 else {
        numCases++;
      }
    }
  }
  if (!containsDefault) {
    return false;
  }
  final PsiField[] fields=aClass.getFields();
  int numEnums=0;
  for (  final PsiField field : fields) {
    if (field.getType().equals(type)) {
      numEnums++;
    }
  }
  return numEnums == numCases;
}
