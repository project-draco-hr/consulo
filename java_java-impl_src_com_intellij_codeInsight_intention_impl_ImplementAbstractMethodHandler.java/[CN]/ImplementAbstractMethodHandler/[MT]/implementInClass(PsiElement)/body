{
  if (!psiClassOrEnumConstant.isValid())   return;
  if (!FileDocumentManager.getInstance().requestWriting(PsiDocumentManager.getInstance(myProject).getDocument(psiClassOrEnumConstant.getContainingFile()),myProject)) {
    MessagesEx.fileIsReadOnly(myProject,psiClassOrEnumConstant.getContainingFile().getVirtualFile()).showNow();
    return;
  }
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          try {
            PsiClass psiClass;
            if (psiClassOrEnumConstant instanceof PsiEnumConstant) {
              psiClass=addClassInitializer((PsiEnumConstant)psiClassOrEnumConstant);
            }
 else {
              psiClass=(PsiClass)psiClassOrEnumConstant;
            }
            CodeInsightUtilBase.prepareFileForWrite(psiClass.getContainingFile());
            OverrideImplementUtil.overrideOrImplement(psiClass,myMethod);
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
          }
        }
      }
);
    }
  }
,CodeInsightBundle.message("intention.implement.abstract.method.command.name"),null);
}
