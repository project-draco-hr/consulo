{
  for (  Object o : selection) {
    if (!((PsiElement)o).isValid())     return;
  }
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    @Override public void run(){
      final LinkedHashSet<PsiClass> classes=new LinkedHashSet<PsiClass>();
      for (      Object o : selection) {
        if (o instanceof PsiEnumConstant) {
          classes.add(((PsiEnumConstant)o).getOrCreateInitializingClass());
        }
 else {
          classes.add((PsiClass)o);
        }
      }
      if (!CodeInsightUtilBase.preparePsiElementsForWrite(classes))       return;
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          for (          PsiClass psiClass : classes) {
            try {
              OverrideImplementUtil.overrideOrImplement(psiClass,myMethod);
            }
 catch (            IncorrectOperationException e) {
              LOG.error(e);
            }
          }
        }
      }
);
    }
  }
,CodeInsightBundle.message("intention.implement.abstract.method.command.name"),null);
}
