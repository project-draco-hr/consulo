{
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints constraints=new GridBagConstraints();
  constraints.gridx=0;
  constraints.gridy=0;
  constraints.weightx=0.0;
  constraints.anchor=GridBagConstraints.WEST;
  constraints.fill=GridBagConstraints.NONE;
  panel.add(new JLabel("Exclude classes (reg exp):"),constraints);
  final JTextField excludeClassNamesField=new JTextField(excludeClassNames,40);
  excludeClassNamesField.setMinimumSize(new Dimension(140,20));
  Document document=excludeClassNamesField.getDocument();
  document.addDocumentListener(new DocumentListener(){
    public void changedUpdate(    DocumentEvent e){
      textChanged();
    }
    public void insertUpdate(    DocumentEvent e){
      textChanged();
    }
    public void removeUpdate(    DocumentEvent e){
      textChanged();
    }
    private void textChanged(){
      excludeClassNames=excludeClassNamesField.getText();
    }
  }
);
  constraints.gridx=1;
  constraints.gridy=0;
  constraints.weightx=1.0;
  constraints.anchor=GridBagConstraints.NORTHWEST;
  constraints.fill=GridBagConstraints.NONE;
  panel.add(excludeClassNamesField,constraints);
  final JCheckBox excludeExceptionCheckBox=new JCheckBox("Exclude exception classes",excludeException);
  final ButtonModel bmException=excludeExceptionCheckBox.getModel();
  bmException.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent changeEvent){
      excludeException=bmException.isSelected();
    }
  }
);
  constraints.gridx=0;
  constraints.gridy=1;
  constraints.gridwidth=2;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  panel.add(excludeExceptionCheckBox,constraints);
  final JCheckBox excludeDeprectedCheckBox=new JCheckBox("Exclude deprecated classes",excludeDeprecated);
  final ButtonModel bmDeprecated=excludeDeprectedCheckBox.getModel();
  bmDeprecated.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent changeEvent){
      excludeDeprecated=bmDeprecated.isSelected();
    }
  }
);
  constraints.gridx=0;
  constraints.gridy=2;
  constraints.gridwidth=2;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  panel.add(excludeDeprectedCheckBox,constraints);
  final JCheckBox excludeEnumCheckBox=new JCheckBox("Exclude enum classes",excludeEnum);
  final ButtonModel bmEnum=excludeEnumCheckBox.getModel();
  bmEnum.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent changeEvent){
      excludeEnum=bmEnum.isSelected();
    }
  }
);
  constraints.gridx=0;
  constraints.gridy=3;
  constraints.gridwidth=2;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  panel.add(excludeEnumCheckBox,constraints);
  final JCheckBox excludeAbstractCheckBox=new JCheckBox("Exclude abstract classes",excludeAbstract);
  final ButtonModel bmAbstract=excludeAbstractCheckBox.getModel();
  bmAbstract.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent changeEvent){
      excludeAbstract=bmAbstract.isSelected();
    }
  }
);
  constraints.gridx=0;
  constraints.gridy=4;
  constraints.gridwidth=2;
  constraints.weighty=1.0;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  panel.add(excludeAbstractCheckBox,constraints);
  return panel;
}
