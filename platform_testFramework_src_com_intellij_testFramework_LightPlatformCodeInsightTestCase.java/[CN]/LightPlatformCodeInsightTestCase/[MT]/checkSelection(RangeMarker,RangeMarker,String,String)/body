{
  if (selStartMarker != null && selEndMarker != null) {
    int selStartLine=StringUtil.offsetToLineNumber(newFileText,selStartMarker.getStartOffset());
    int selStartCol=selStartMarker.getStartOffset() - StringUtil.lineColToOffset(newFileText,selStartLine,0);
    int selEndLine=StringUtil.offsetToLineNumber(newFileText,selEndMarker.getEndOffset());
    int selEndCol=selEndMarker.getEndOffset() - StringUtil.lineColToOffset(newFileText,selEndLine,0);
    assertEquals(getMessage("selectionStartLine",message),selStartLine + 1,StringUtil.offsetToLineNumber(newFileText,myEditor.getSelectionModel().getSelectionStart()) + 1);
    assertEquals(getMessage("selectionStartCol",message),selStartCol + 1,myEditor.getSelectionModel().getSelectionStart() - StringUtil.lineColToOffset(newFileText,selStartLine,0) + 1);
    assertEquals(getMessage("selectionEndLine",message),selEndLine + 1,StringUtil.offsetToLineNumber(newFileText,myEditor.getSelectionModel().getSelectionEnd()) + 1);
    assertEquals(getMessage("selectionEndCol",message),selEndCol + 1,myEditor.getSelectionModel().getSelectionEnd() - StringUtil.lineColToOffset(newFileText,selEndLine,0) + 1);
  }
 else {
    assertTrue(getMessage("must not have selection",message),!myEditor.getSelectionModel().hasSelection());
  }
}
