{
  for (int i=text.indexOf(replaceFrom); i >= 0 && i < text.length() - 1; i=text.indexOf(replaceFrom,i + 1)) {
    int end=i + replaceFrom.length();
    if (intersects(readOnlyChanges,i,end)) {
      continue;
    }
    if (!"\n".equals(replaceFrom)) {
      if (end < text.length() && !ALLOWED_LINK_SEPARATORS.contains(text.charAt(end))) {
        continue;
      }
      if (i > 0 && !ALLOWED_LINK_SEPARATORS.contains(text.charAt(i - 1))) {
        continue;
      }
    }
    text.replace(i,end,replaceTo);
    int diff=replaceTo.length() - replaceFrom.length();
    for (int j=0; j < readOnlyChanges.size(); j++) {
      TextRange range=readOnlyChanges.get(j);
      if (range.getStartOffset() >= end) {
        readOnlyChanges.set(j,range.shiftRight(diff));
      }
    }
    readOnlyChanges.add(new TextRange(i,i + replaceTo.length()));
  }
}
