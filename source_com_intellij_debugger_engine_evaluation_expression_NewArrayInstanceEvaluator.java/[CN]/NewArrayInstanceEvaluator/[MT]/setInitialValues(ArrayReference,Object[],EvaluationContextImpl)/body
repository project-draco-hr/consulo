{
  ArrayType type=(ArrayType)arrayReference.referenceType();
  DebugProcessImpl debugProcess=context.getDebugProcess();
  try {
    if (type.componentType() instanceof ArrayType) {
      ArrayType componentType=(ArrayType)type.componentType();
      int length=arrayReference.length();
      for (int idx=0; idx < length; idx++) {
        ArrayReference componentArray=(ArrayReference)arrayReference.getValue(idx);
        Object[] componentArrayValues=(Object[])values[idx];
        if (componentArray == null) {
          componentArray=debugProcess.newInstance(componentType,componentArrayValues.length);
          arrayReference.setValue(idx,componentArray);
        }
        setInitialValues(componentArray,componentArrayValues,context);
      }
    }
 else {
      if (values.length > 0) {
        List list=new ArrayList(values.length);
        for (int idx=0; idx < values.length; idx++) {
          list.add(values[idx]);
        }
        arrayReference.setValues(list);
      }
    }
  }
 catch (  ClassNotLoadedException ex) {
    final ReferenceType referenceType;
    try {
      referenceType=debugProcess.loadClass(context,ex.className(),type.classLoader());
    }
 catch (    InvocationException e) {
      throw EvaluateExceptionUtil.createEvaluateException(e);
    }
catch (    ClassNotLoadedException e) {
      throw EvaluateExceptionUtil.createEvaluateException(e);
    }
catch (    IncompatibleThreadStateException e) {
      throw EvaluateExceptionUtil.createEvaluateException(e);
    }
catch (    InvalidTypeException e) {
      throw EvaluateExceptionUtil.createEvaluateException(e);
    }
    if (referenceType != null) {
      setInitialValues(arrayReference,values,context);
    }
 else {
      throw EvaluateExceptionUtil.createEvaluateException("Initializer's class is not loaded");
    }
  }
catch (  InvalidTypeException ex) {
    throw EvaluateExceptionUtil.createEvaluateException("Initializer type is not assignment-compatible with array's component type");
  }
catch (  IndexOutOfBoundsException ex) {
    throw EvaluateExceptionUtil.createEvaluateException("Invalid array size");
  }
catch (  ClassCastException ex) {
    throw EvaluateExceptionUtil.createEvaluateException("Cannot initialize array");
  }
}
