{
  DebugProcessImpl debugProcess=context.getDebugProcess();
  Object obj=myArrayTypeEvaluator.evaluate(context);
  if (!(obj instanceof ArrayType)) {
    throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.array.type.expected"));
  }
  ArrayType arrayType=(ArrayType)obj;
  int dimension;
  Object[] initialValues=null;
  if (myDimensionEvaluator != null) {
    Object o=myDimensionEvaluator.evaluate(context);
    if (!(o instanceof Value && DebuggerUtilsEx.isNumeric((Value)o))) {
      throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.array.dimention.numeric.value.expected"));
    }
    PrimitiveValue value=(PrimitiveValue)o;
    dimension=value.intValue();
  }
 else {
    Object o=myInitializerEvaluator.evaluate(context);
    if (!(o instanceof Object[])) {
      throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.cannot.evaluate.array.initializer"));
    }
    initialValues=(Object[])o;
    dimension=initialValues.length;
  }
  ArrayReference arrayReference=debugProcess.newInstance(arrayType,dimension);
  if (initialValues != null && initialValues.length > 0) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Setting initial values: dimension = " + dimension + "; array size is "+ initialValues.length);
    }
    setInitialValues(arrayReference,initialValues,context);
  }
  return arrayReference;
}
