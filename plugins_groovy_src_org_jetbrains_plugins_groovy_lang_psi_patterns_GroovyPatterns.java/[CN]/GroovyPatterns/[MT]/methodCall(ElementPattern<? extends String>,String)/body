{
  return new GroovyMethodCallPattern().withMethodName(names).withMethod(psiMethod().with(new PatternCondition<PsiMethod>("psiMethodClassNameCondition"){
    @Override public boolean accepts(    @NotNull PsiMethod psiMethod,    ProcessingContext context){
      PsiClass containingClass=psiMethod.getContainingClass();
      if (containingClass != null) {
        if (InheritanceUtil.isInheritor(containingClass,className)) {
          return true;
        }
      }
      return false;
    }
  }
));
}
