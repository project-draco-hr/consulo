{
  return new GroovyElementPattern.Capture<GrNamedArgument>(new InitialPatternCondition<GrNamedArgument>(GrNamedArgument.class){
    public boolean accepts(    @Nullable final Object o,    final ProcessingContext context){
      if (!(o instanceof GrNamedArgument))       return false;
      PsiElement parent=((GrNamedArgument)o).getParent();
      PsiElement eMethodCall;
      if (parent instanceof GrArgumentList) {
        eMethodCall=parent.getParent();
      }
 else {
        if (!(parent instanceof GrListOrMap))         return false;
        PsiElement eArgumentList=parent.getParent();
        if (!(eArgumentList instanceof GrArgumentList))         return false;
        GrArgumentList argumentList=(GrArgumentList)eArgumentList;
        if (argumentList.getNamedArguments().length > 0)         return false;
        if (argumentList.getExpressionArgumentIndex((GrListOrMap)parent) != 0)         return false;
        eMethodCall=eArgumentList.getParent();
      }
      if (!(eMethodCall instanceof GrCall))       return false;
      return methodCall == null || methodCall.accepts(eMethodCall);
    }
  }
);
}
