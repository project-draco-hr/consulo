{
  if (dfaCond instanceof DfaUnknownValue)   return true;
  if (dfaCond instanceof DfaVariableValue) {
    DfaVariableValue dfaVar=(DfaVariableValue)dfaCond;
    DfaVariableValue dfaNormalVar=dfaVar.isNegated() ? (DfaVariableValue)dfaVar.createNegated() : dfaVar;
    DfaConstValue dfaTrue=myFactory.getConstFactory().getTrue();
    DfaRelationValue dfaEqualsTrue=myFactory.getRelationFactory().create(dfaNormalVar,dfaTrue,"==",dfaVar.isNegated());
    return applyCondition(dfaEqualsTrue);
  }
  if (dfaCond instanceof DfaConstValue) {
    if (dfaCond == myFactory.getConstFactory().getTrue())     return true;
    if (dfaCond == myFactory.getConstFactory().getFalse())     return false;
    return true;
  }
  if (!(dfaCond instanceof DfaRelationValue)) {
    return true;
  }
  DfaRelationValue dfaRelation=(DfaRelationValue)dfaCond;
  DfaValue dfaLeft=dfaRelation.getLeftOperand();
  DfaValue dfaRight=dfaRelation.getRightOperand();
  if (dfaRight instanceof DfaTypeValue) {
    if (dfaLeft instanceof DfaVariableValue) {
      DfaVariableState varState=getVariableState((DfaVariableValue)dfaLeft);
      DfaVariableValue dfaVar=(DfaVariableValue)dfaLeft;
      if (dfaRelation.isNegated()) {
        return varState.addNotInstanceofValue((DfaTypeValue)dfaRight) ? true : applyCondition(compareToNull(dfaVar,false));
      }
      return applyCondition(compareToNull(dfaVar,true)) ? varState.setInstanceofValue((DfaTypeValue)dfaRight) : false;
    }
    return true;
  }
  if (dfaLeft instanceof DfaUnknownValue || dfaRight instanceof DfaUnknownValue) {
    return true;
  }
  int c1Index=getOrCreateEqClassIndex(dfaLeft);
  int c2Index=getOrCreateEqClassIndex(dfaRight);
  if (!dfaRelation.isNegated()) {
    if (c1Index == c2Index)     return true;
    if (!unitClasses(c1Index,c2Index))     return false;
  }
 else {
    if (c1Index == c2Index)     return false;
    makeClassesDistinct(c1Index,c2Index);
  }
  return true;
}
