{
  if (!(usage.getElement() instanceof PsiClass) || !isGroovyUsage(usage))   return true;
  PsiClass aClass=(PsiClass)usage.getElement();
  final GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(data.getProject());
  GrMethod constructor=factory.createConstructorFromText(aClass.getName(),ArrayUtil.EMPTY_STRING_ARRAY,ArrayUtil.EMPTY_STRING_ARRAY,"{}");
  constructor=(GrMethod)aClass.add(constructor);
  constructor.getModifierList().setModifierProperty(VisibilityUtil.getVisibilityModifier(aClass.getModifierList()),true);
  processAddSuperCall(data,new UsageInfo(constructor),usages);
  return false;
}
