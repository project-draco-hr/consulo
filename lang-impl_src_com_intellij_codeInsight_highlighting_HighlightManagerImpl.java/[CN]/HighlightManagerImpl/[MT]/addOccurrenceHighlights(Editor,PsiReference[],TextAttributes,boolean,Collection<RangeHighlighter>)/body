{
  if (occurrences.length == 0)   return;
  int flags=HIDE_BY_ESCAPE;
  if (hideByTextChange) {
    flags|=HIDE_BY_TEXT_CHANGE;
  }
  Color scrollmarkColor=getScrollMarkColor(attributes);
  int oldOffset=editor.getCaretModel().getOffset();
  int horizontalScrollOffset=editor.getScrollingModel().getHorizontalScrollOffset();
  int verticalScrollOffset=editor.getScrollingModel().getVerticalScrollOffset();
  for (  PsiReference occurrence : occurrences) {
    PsiElement element=occurrence.getElement();
    int startOffset=element.getTextRange().getStartOffset();
    int start=startOffset + occurrence.getRangeInElement().getStartOffset();
    int end=startOffset + occurrence.getRangeInElement().getEndOffset();
    PsiFile containingFile=element.getContainingFile();
    Project project=element.getProject();
    Editor textEditor=InjectedLanguageUtil.openEditorFor(containingFile,project);
    if (textEditor != null) {
      addOccurrenceHighlight(textEditor,start,end,attributes,flags,outHighlighters,scrollmarkColor);
    }
  }
  editor.getCaretModel().moveToOffset(oldOffset);
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  editor.getScrollingModel().scrollHorizontally(horizontalScrollOffset);
  editor.getScrollingModel().scrollVertically(verticalScrollOffset);
}
