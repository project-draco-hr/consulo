{
  if (basePath.equals(filePath))   return "";
  if (!basePath.endsWith(File.separator))   basePath+=File.separatorChar;
  int len=0;
  int lastSeparatorIndex=0;
  while (len < filePath.length() && len < basePath.length() && filePath.charAt(len) == basePath.charAt(len)) {
    if (basePath.charAt(len) == File.separatorChar) {
      lastSeparatorIndex=len;
    }
    len++;
  }
  if (len == 0) {
    return null;
  }
  final StringBuilder relativePath=StringBuilderSpinAllocator.alloc();
  try {
    for (int i=len; i < basePath.length(); i++) {
      if (basePath.charAt(i) == File.separatorChar) {
        relativePath.append("..");
        relativePath.append(File.separatorChar);
      }
    }
    relativePath.append(filePath.substring(lastSeparatorIndex + 1));
    return relativePath.toString();
  }
  finally {
    StringBuilderSpinAllocator.dispose(relativePath);
  }
}
