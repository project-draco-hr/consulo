{
  final ProcessBuilder builder=new ProcessBuilder().command(params);
  builder.directory(ourCurrentDir());
  builder.redirectErrorStream(true);
  Process clientProcess;
  try {
    clientProcess=builder.start();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  CapturingProcessHandler handler=new CapturingProcessHandler(clientProcess,CharsetToolkit.getDefaultSystemCharset());
  ProcessOutput result=handler.runProcess(30 * 1000);
  if (result.isTimeout()) {
    throw new RuntimeException("Timeout waiting for the command execution. Command: " + StringUtil.join(params," "));
  }
  if (result.getExitCode() != 0) {
    log("{" + result.getExitCode() + "}");
  }
  String stdout=result.getStdout().trim();
  if (!StringUtil.isEmptyOrSpaces(stdout)) {
    log(stdout.trim());
  }
  return stdout;
}
