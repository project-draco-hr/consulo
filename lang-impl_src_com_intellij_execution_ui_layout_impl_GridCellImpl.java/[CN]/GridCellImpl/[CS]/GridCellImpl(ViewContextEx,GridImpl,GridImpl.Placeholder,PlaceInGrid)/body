{
  myContext=context;
  myContainer=container;
  Disposer.register(container,this);
  myPlaceInGrid=placeInGrid;
  myPlaceholder=placeholder;
  myTabs=new JBTabsImpl(myContext.getProject(),myContext.getActionManager(),myContext.getFocusManager(),container).setDataProvider(new DataProvider(){
    @Nullable public Object getData(    @NonNls final String dataId){
      if (ViewContext.CONTENT_KEY.getName().equals(dataId)) {
        TabInfo target=myTabs.getTargetInfo();
        if (target != null) {
          return new Content[]{getContentFor(target)};
        }
      }
 else       if (ViewContext.CONTEXT_KEY.getName().equals(dataId)) {
        return myContext;
      }
      return null;
    }
  }
);
  myTabs.setUiDecorator(new UiDecorator(){
    @NotNull public UiDecoration getDecoration(){
      return new UiDecoration(null,new Insets(1,-1,1,-1));
    }
  }
);
  myTabs.setSideComponentVertical(!context.getLayoutSettings().isToolbarHorizontal());
  myTabs.setStealthTabMode(true);
  myTabs.setFocusCycle(false);
  myTabs.addTabMouseListener(new MouseAdapter(){
    public void mousePressed(    final MouseEvent e){
      if (UIUtil.isCloseClick(e)) {
        if (isDetached()) {
          myPopup.cancel();
        }
 else {
          minimize(e);
        }
      }
    }
  }
);
  rebuildPopupGroup();
  myTabs.addListener(new TabsListener(){
    public void selectionChanged(    final TabInfo oldSelection,    final TabInfo newSelection){
      updateSelection(myTabs.getComponent().isShowing());
      if (!myTabs.getComponent().isShowing())       return;
      if (newSelection != null) {
        newSelection.stopAlerting();
      }
    }
  }
);
}
