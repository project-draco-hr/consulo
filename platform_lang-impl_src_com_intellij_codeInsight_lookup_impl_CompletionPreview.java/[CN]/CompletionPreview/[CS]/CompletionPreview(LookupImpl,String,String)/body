{
  myLookup=lookup;
  final Editor editor=myLookup.getEditor();
  final int caret=editor.getCaretModel().getOffset();
  int previewStart=caret - prefix.length();
  final int previewEnd=previewStart + text.length();
  myLookup.performGuardedChange(new Runnable(){
    @Override public void run(){
      Runnable runnable=new Runnable(){
        public void run(){
          AccessToken token=WriteAction.start();
          try {
            editor.getDocument().insertString(caret,text.substring(prefix.length()));
          }
  finally {
            token.finish();
          }
        }
      }
;
      CommandProcessor.getInstance().runUndoTransparentAction(runnable);
    }
  }
,"preview");
  final RangeHighlighter highlighter=myLookup.getEditor().getMarkupModel().addRangeHighlighter(caret,previewEnd,HighlighterLayer.LAST,new TextAttributes(Color.GRAY,null,null,null,Font.PLAIN),HighlighterTargetArea.EXACT_RANGE);
  myUninstaller=new Disposable(){
    @Override public void dispose(){
      myLookup.setPreview(null);
      myUninstaller=null;
      if (editor.isDisposed() || !highlighter.isValid()) {
        return;
      }
      myLookup.performGuardedChange(new Runnable(){
        @Override public void run(){
          Runnable runnable=new Runnable(){
            public void run(){
              AccessToken token=WriteAction.start();
              try {
                editor.getDocument().deleteString(highlighter.getStartOffset(),highlighter.getEndOffset());
              }
  finally {
                token.finish();
              }
            }
          }
;
          CommandProcessor.getInstance().runUndoTransparentAction(runnable);
        }
      }
,"remove preview");
      editor.getMarkupModel().removeHighlighter(highlighter);
    }
  }
;
  myLookup.setPreview(this);
  Disposer.register(myLookup,myUninstaller);
}
