{
  super.visitAssignmentExpression(assignment);
  GrExpression lValue=assignment.getLValue();
  if (!PsiUtil.mightBeLValue(lValue))   return;
  IElementType opToken=assignment.getOperationToken();
  if (opToken != GroovyTokenTypes.mASSIGN)   return;
  GrExpression rValue=assignment.getRValue();
  if (rValue == null)   return;
  PsiType lType=lValue.getNominalType();
  PsiType rType=rValue.getType();
  if (isListAssignment(lValue) && lType != null && lType instanceof PsiClassType) {
    final PsiClassType pct=(PsiClassType)lType;
    final PsiClass clazz=pct.resolve();
    if (clazz != null && CommonClassNames.JAVA_UTIL_LIST.equals(clazz.getQualifiedName())) {
      final PsiType[] types=pct.getParameters();
      if (types.length == 1 && types[0] != null && rType != null) {
        checkAssignability(types[0],rValue,rValue);
      }
    }
    return;
  }
  if (lValue instanceof GrReferenceExpression && ((GrReferenceExpression)lValue).resolve() instanceof GrReferenceExpression) {
    return;
  }
  if (isNewInstanceInitialingByTuple(rValue)) {
    return;
  }
  if (lValue instanceof GrIndexProperty)   return;
  if (lType != null && rType != null) {
    checkAssignability(lType,rValue,rValue);
  }
}
