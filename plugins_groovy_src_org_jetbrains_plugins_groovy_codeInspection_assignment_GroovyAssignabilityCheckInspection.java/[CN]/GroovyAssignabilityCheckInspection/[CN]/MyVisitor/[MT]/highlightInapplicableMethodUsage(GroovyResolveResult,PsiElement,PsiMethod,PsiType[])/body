{
  PsiElement elementToHighlight=PsiUtil.getArgumentsList(place);
  if (elementToHighlight == null) {
    elementToHighlight=place;
  }
  final String typesString=buildArgTypesList(argumentTypes);
  String message;
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass != null) {
    final PsiClassType containingType=JavaPsiFacade.getInstance(method.getProject()).getElementFactory().createType(containingClass,methodResolveResult.getSubstitutor());
    message=GroovyBundle.message("cannot.apply.method1",method.getName(),containingType.getInternalCanonicalText(),typesString);
  }
 else {
    message=GroovyBundle.message("cannot.apply.method.or.closure",method.getName(),typesString);
  }
  registerError(elementToHighlight,message);
}
