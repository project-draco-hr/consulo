{
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null) {
    registerCannotApplyError(place,argumentTypes,method.getName());
    return;
  }
  final String typesString=buildArgTypesList(argumentTypes);
  final PsiElementFactory factory=JavaPsiFacade.getInstance(method.getProject()).getElementFactory();
  final PsiClassType containingType=factory.createType(containingClass,methodResolveResult.getSubstitutor());
  final String canonicalText=containingType.getInternalCanonicalText();
  String message=GroovyBundle.message("cannot.apply.method1",method.getName(),canonicalText,typesString);
  PsiElement elementToHighlight=PsiUtil.getArgumentsList(place);
  if (elementToHighlight == null || elementToHighlight.getTextRange().getLength() == 0) {
    elementToHighlight=place;
  }
  registerError(elementToHighlight,message);
}
