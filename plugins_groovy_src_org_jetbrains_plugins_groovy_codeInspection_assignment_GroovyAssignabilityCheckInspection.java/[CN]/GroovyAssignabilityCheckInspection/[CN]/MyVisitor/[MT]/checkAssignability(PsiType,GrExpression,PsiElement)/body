{
  if (PsiUtil.isRawClassMemberAccess(expression))   return;
  if (checkForImplicitEnumAssigning(expectedType,expression,expression))   return;
  final PsiType rType=expression.getType();
  if (rType == null)   return;
  if (!TypesUtil.isAssignable(expectedType,rType,expression)) {
    final List<LocalQuickFix> fixes=ContainerUtil.newArrayList();
    fixes.add(new GrCastFix(expectedType));
    String varName=getLValueVarName(toHighlight);
    if (varName != null) {
      fixes.add(new GrChangeVariableType(rType,varName));
    }
    final String message=GroovyBundle.message("cannot.assign",rType.getPresentableText(),expectedType.getPresentableText());
    registerError(toHighlight,message,fixes.toArray(new LocalQuickFix[fixes.size()]),ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
  }
}
