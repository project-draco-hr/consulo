{
  super.visitReferenceExpression(referenceExpression);
  GroovyResolveResult resolveResult=referenceExpression.advancedResolve();
  GroovyResolveResult[] results=referenceExpression.multiResolve(false);
  PsiElement resolved=resolveResult.getElement();
  final PsiElement parent=referenceExpression.getParent();
  if (resolved == null) {
    GrExpression qualifier=referenceExpression.getQualifierExpression();
    if (qualifier == null && GroovyAnnotator.isDeclarationAssignment(referenceExpression))     return;
  }
  if (parent instanceof GrCall) {
    if (resolved == null && results.length > 0) {
      resolved=results[0].getElement();
      resolveResult=results[0];
    }
    if (resolved instanceof PsiMethod && resolved.getUserData(GrMethod.BUILDER_METHOD) == null) {
      checkMethodApplicability(resolveResult,referenceExpression);
    }
 else {
      checkClosureApplicability(resolveResult,referenceExpression.getType(),referenceExpression);
    }
  }
}
