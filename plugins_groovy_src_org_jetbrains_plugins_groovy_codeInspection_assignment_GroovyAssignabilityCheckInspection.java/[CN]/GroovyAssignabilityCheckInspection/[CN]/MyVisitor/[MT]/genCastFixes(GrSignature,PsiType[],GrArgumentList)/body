{
  if (argumentList == null)   return LocalQuickFix.EMPTY_ARRAY;
  final List<GrClosureSignature> signatures=GrClosureSignatureUtil.generateSimpleSignature(signature);
  List<Pair<Integer,PsiType>> allErrors=new ArrayList<Pair<Integer,PsiType>>();
  for (  GrClosureSignature closureSignature : signatures) {
    final GrClosureSignatureUtil.MapResultWithError<PsiType> map=GrClosureSignatureUtil.mapSimpleSignatureWithErrors(closureSignature,argumentTypes,Function.ID,argumentList,1);
    if (map != null) {
      final List<Pair<Integer,PsiType>> errors=map.getErrors();
      for (      Pair<Integer,PsiType> error : errors) {
        if (!(error.first == 0 && PsiImplUtil.hasNamedArguments(argumentList))) {
          allErrors.add(error);
        }
      }
    }
  }
  final ArrayList<LocalQuickFix> fixes=new ArrayList<LocalQuickFix>();
  for (  Pair<Integer,PsiType> error : allErrors) {
    fixes.add(new ParameterCastFix(error.first,error.second));
  }
  return fixes.toArray(new LocalQuickFix[fixes.size()]);
}
