{
  final PsiClass containingClass=method instanceof GrGdkMethod ? ((GrGdkMethod)method).getStaticMethod().getContainingClass() : method.getContainingClass();
  if (containingClass == null) {
    registerCannotApplyError(place,argumentTypes,method.getName());
    return;
  }
  final String typesString=buildArgTypesList(argumentTypes);
  final PsiElementFactory factory=JavaPsiFacade.getInstance(method.getProject()).getElementFactory();
  final PsiClassType containingType=factory.createType(containingClass,methodResolveResult.getSubstitutor());
  final String canonicalText=containingType.getInternalCanonicalText();
  String message;
  if (method.isConstructor()) {
    message=GroovyBundle.message("cannot.apply.constructor",method.getName(),canonicalText,typesString);
  }
 else {
    message=GroovyBundle.message("cannot.apply.method1",method.getName(),canonicalText,typesString);
  }
  registerError(getElementToHighlight(place,PsiUtil.getArgumentsList(place)),message,genCastFixes(GrClosureSignatureUtil.createSignature(methodResolveResult),argumentTypes,place),ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
}
