{
  Annotation annotation=myHolder.createErrorAnnotation(location,description);
  if (fixes != null) {
    for (    final LocalQuickFix fix : fixes) {
      annotation.registerFix(new IntentionAction(){
        @NotNull @Override public String getText(){
          return fix.getName();
        }
        @NotNull @Override public String getFamilyName(){
          return fix.getFamilyName();
        }
        @Override public boolean isAvailable(        @NotNull Project project,        Editor editor,        PsiFile file){
          return true;
        }
        @Override public void invoke(        @NotNull Project project,        Editor editor,        PsiFile file) throws IncorrectOperationException {
          InspectionManager manager=InspectionManager.getInstance(project);
          ProblemDescriptor descriptor=manager.createProblemDescriptor(location,description,fixes,highlightType,fixes.length == 1,false);
          fix.applyFix(project,descriptor);
        }
        @Override public boolean startInWriteAction(){
          return true;
        }
      }
);
    }
  }
}
