{
  ExternalProject externalProjectToUse=externalProject;
  for (  ExternalProjectStructureChangesPreProcessor preProcessor : myCommonPreProcessors) {
    externalProjectToUse=preProcessor.preProcess(externalProjectToUse,ideProject);
  }
  ProjectSystemId externalSystemId=externalProject.getOwner();
  IntegrationKey key=new IntegrationKey(ideProject,externalSystemId);
  myExternalProjects.putIfAbsent(key,externalProjectToUse);
  final ExternalProjectChangesCalculationContext context=getCurrentChangesContext(externalProjectToUse,ideProject,onIdeProjectStructureChange);
  if (!context.hasNewChanges()) {
    return;
  }
  myChanges.put(key,context.getCurrentChanges());
  for (  ExternalProjectStructureChangeListener listener : myListeners) {
    listener.onChanges(ideProject,externalSystemId,context.getKnownChanges(),context.getCurrentChanges());
  }
}
