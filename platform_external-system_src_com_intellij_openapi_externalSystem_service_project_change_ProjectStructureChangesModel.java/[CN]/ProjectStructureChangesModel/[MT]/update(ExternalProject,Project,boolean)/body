{
  ExternalProject externalProjectToUse=externalProject;
  for (  ExternalProjectStructureChangesPreProcessor preProcessor : myCommonPreProcessors) {
    externalProjectToUse=preProcessor.preProcess(externalProjectToUse,ideProject);
  }
  ProjectSystemId externalSystemId=externalProject.getSystemId();
  Pair<ProjectSystemId,String> key=key(externalSystemId,ideProject);
  myExternalProjects.putIfAbsent(key,externalProjectToUse);
  final ExternalProjectChangesCalculationContext context=getCurrentChangesContext(externalProjectToUse,ideProject,onIdeProjectStructureChange);
  if (!context.hasNewChanges()) {
    return;
  }
  myChanges.put(key,context.getCurrentChanges());
  Set<ExternalProjectStructureChangeListener> listeners=myListeners.get(externalSystemId);
  if (listeners != null) {
    for (    ExternalProjectStructureChangeListener listener : listeners) {
      listener.onChanges(ideProject,externalSystemId,context.getKnownChanges(),context.getCurrentChanges());
    }
  }
}
