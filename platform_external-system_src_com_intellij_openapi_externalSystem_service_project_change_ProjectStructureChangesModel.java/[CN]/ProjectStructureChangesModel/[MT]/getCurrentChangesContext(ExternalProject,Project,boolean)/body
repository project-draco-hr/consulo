{
  Pair<ProjectSystemId,String> key=key(externalProject.getSystemId(),ideProject);
  ExternalProjectChangesCalculationContext context=new ExternalProjectChangesCalculationContext(myChanges.get(key),myPlatformFacade,myLibraryPathTypeMapper);
  myChangesCalculator.calculate(externalProject,ideProject,context);
  for (  ExternalProjectStructureChangesPostProcessor processor : myCommonPostProcessors) {
    processor.processChanges(context.getCurrentChanges(),ideProject,onIdeProjectStructureChange);
  }
  Set<ExternalProjectStructureChangesPostProcessor> postProcessors=mySpecificPostProcessors.get(externalProject.getSystemId());
  if (postProcessors != null)   for (  ExternalProjectStructureChangesPostProcessor processor : myCommonPostProcessors) {
    processor.processChanges(context.getCurrentChanges(),ideProject,onIdeProjectStructureChange);
  }
  return context;
}
