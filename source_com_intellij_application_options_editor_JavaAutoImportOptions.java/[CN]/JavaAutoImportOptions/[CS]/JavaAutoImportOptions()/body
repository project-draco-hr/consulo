{
  mySmartPasteCombo.addItem(INSERT_IMPORTS_ALWAYS);
  mySmartPasteCombo.addItem(INSERT_IMPORTS_ASK);
  mySmartPasteCombo.addItem(INSERT_IMPORTS_NONE);
  myAddPackageButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      InputValidator validator=new InputValidator(){
        public boolean checkInput(        String inputString){
          return ourPackagePattern.matcher(inputString).matches();
        }
        public boolean canClose(        String inputString){
          return checkInput(inputString);
        }
      }
;
      String packageName=Messages.showInputDialog(myWholePanel,ApplicationBundle.message("exclude.from.completion.prompt"),ApplicationBundle.message("exclude.from.completion.title"),Messages.getWarningIcon(),"",validator);
      if (packageName != null) {
        myExcludePackagesModel.add(myExcludePackagesModel.size(),packageName);
        myExcludePackagesList.setSelectedValue(packageName,true);
      }
    }
  }
);
  myExcludePackagesList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      myRemoveButton.setEnabled(myExcludePackagesList.getSelectedValue() != null);
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      ListUtil.removeSelectedItems(myExcludePackagesList);
    }
  }
);
}
