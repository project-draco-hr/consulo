{
  myProject=project;
  myManager=new LogFilesManager(project,this);
  myContentPanel=new JPanel(new BorderLayout());
  final DebuggerSettings debuggerSettings=DebuggerSettings.getInstance();
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    getContextManager().addListener(new DebuggerContextListener(){
      public void changeEvent(      DebuggerContextImpl newContext,      int event){
switch (event) {
case DebuggerSession.EVENT_DETACHED:
          DebuggerSettings settings=debuggerSettings;
        myFirstToolbar.updateActionsImmediately();
      mySecondToolbar.updateActionsImmediately();
    if (settings.HIDE_DEBUGGER_ON_PROCESS_TERMINATION) {
      try {
        ExecutionManager.getInstance(getProject()).getContentManager().hideRunContent(myRunner,myRunContentDescriptor);
      }
 catch (      NullPointerException e) {
        LOG.debug(e);
      }
    }
  break;
case DebuggerSession.EVENT_PAUSE:
if (myIsJustStarted) {
  final Content frameView=findContent(DebuggerContentInfo.FRAME_CONTENT);
  final Content watchView=findContent(DebuggerContentInfo.WATCHES_CONTENT);
  if (frameView != null) {
    Content content=myViewsContentManager.getSelectedContent();
    if (content == null || content.equals(frameView) || content.equals(watchView)) {
      return;
    }
    showFramePanel();
  }
  myIsJustStarted=false;
}
}
}
}
);
}
myViewsContentManager=getContentFactory().createContentManager(new DebuggerContentUI(this),false,getProject());
myWatchPanel=new MainWatchPanel(getProject(),getContextManager());
myWatchPanel.setUpdateEnabled(debuggerSettings.WATCHES_VISIBLE);
myFramePanel=new FramePanel(getProject(),getContextManager()){
protected boolean isUpdateEnabled(){
return myViewsContentManager.getSelectedContent().getComponent() == this;
}
}
;
myFramePanel.getFrameTree().setAutoVariablesMode(debuggerSettings.AUTO_VARIABLES_MODE);
myWatchesContent=createContent(myWatchPanel,DebuggerBundle.message("debugger.session.tab.watches.title"),WATCHES_ICON,WATCHES_CONTENT);
if (debuggerSettings.WATCHES_VISIBLE) {
myViewsContentManager.addContent(myWatchesContent);
}
myFramesContent=createContent(myFramePanel,DebuggerBundle.message("debugger.session.tab.frames.title"),IconLoader.getIcon("/debugger/frame.png"),FRAME_CONTENT);
myViewsContentManager.addContent(myFramesContent);
myVarsContent=createContent(myFramePanel.getVarsPanel(),DebuggerBundle.message("debugger.session.tab.variables.title"),IconLoader.getIcon("/debugger/value.png"),VARIABLES_CONTENT);
myViewsContentManager.addContent(myVarsContent);
myViewsContentManager.addContentManagerListener(new ContentManagerAdapter(){
public void selectionChanged(ContentManagerEvent event){
Content selectedContent=myViewsContentManager.getSelectedContent();
if (selectedContent != null) {
JComponent component=selectedContent.getComponent();
if (component instanceof DebuggerPanel) {
DebuggerPanel panel=(DebuggerPanel)component;
if (panel.isRefreshNeeded()) {
panel.rebuildIfVisible(DebuggerSession.EVENT_CONTEXT);
}
}
}
}
}
);
myContentPanel.add(myViewsContentManager.getComponent(),BorderLayout.CENTER);
}
