{
  final Ref<Content> content=new Ref<Content>();
  final LogConsole log=new LogConsole(project,new File(path),skipContent,name){
    public boolean isActive(){
      return myViewsContentManager.isSelected(content.get());
    }
  }
;
  log.attachStopLogConsoleTrackingListener(myRunContentDescriptor.getProcessHandler());
  content.set(addLogComponent(log));
  final ContentManagerAdapter l=new ContentManagerAdapter(){
    public void selectionChanged(    final ContentManagerEvent event){
      log.activate();
    }
  }
;
  myContentListeners.put(log,l);
  myViewsContentManager.addContentManagerListener(l);
  Disposer.register(this,new Disposable(){
    public void dispose(){
      myViewsContentManager.removeContentManagerListener(myContentListeners.remove(log));
    }
  }
);
}
