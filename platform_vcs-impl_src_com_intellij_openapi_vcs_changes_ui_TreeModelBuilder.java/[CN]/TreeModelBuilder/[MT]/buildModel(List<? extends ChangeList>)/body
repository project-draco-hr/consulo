{
  final RemoteRevisionsCache revisionsCache=RemoteRevisionsCache.getInstance(myProject);
  for (  ChangeList list : changeLists) {
    final List<Change> changes=new ArrayList<>(list.getChanges());
    ChangesBrowserChangeListNode listNode=createChangeListNode(list,changes);
    model.insertNodeInto(listNode,root,0);
    resetGrouping();
    final ChangesGroupingPolicy policy=createGroupingPolicy();
    Collections.sort(changes,PATH_LENGTH_COMPARATOR);
    for (int i=0; i < changes.size(); i++) {
      insertChangeNode(changes.get(i),policy,listNode,createChangeListChild(revisionsCache,listNode,changes,i));
    }
  }
  return model;
}
