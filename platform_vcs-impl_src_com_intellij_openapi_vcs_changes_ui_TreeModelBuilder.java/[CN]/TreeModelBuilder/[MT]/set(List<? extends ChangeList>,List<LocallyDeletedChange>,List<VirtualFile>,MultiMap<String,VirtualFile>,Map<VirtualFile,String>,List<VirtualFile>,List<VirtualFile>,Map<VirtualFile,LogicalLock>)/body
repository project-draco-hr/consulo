{
  resetGrouping();
  buildModel(changeLists);
  if (!modifiedWithoutEditing.isEmpty()) {
    resetGrouping();
    buildVirtualFiles(modifiedWithoutEditing,ChangesBrowserNode.MODIFIED_WITHOUT_EDITING_TAG);
  }
  if (switchedRoots != null && !switchedRoots.isEmpty()) {
    resetGrouping();
    buildSwitchedRoots(switchedRoots);
  }
  if (!switchedFiles.isEmpty()) {
    resetGrouping();
    buildSwitchedFiles(switchedFiles);
  }
  if (ignoredFiles != null && !ignoredFiles.isEmpty()) {
    resetGrouping();
    buildVirtualFiles(ignoredFiles,ChangesBrowserNode.IGNORED_FILES_TAG);
  }
  if (lockedFolders != null && !lockedFolders.isEmpty()) {
    resetGrouping();
    buildVirtualFiles(lockedFolders,ChangesBrowserNode.LOCKED_FOLDERS_TAG);
  }
  if (logicallyLockedFiles != null && !logicallyLockedFiles.isEmpty()) {
    resetGrouping();
    buildLogicallyLockedFiles(logicallyLockedFiles);
  }
  if (!locallyDeletedFiles.isEmpty()) {
    resetGrouping();
    ChangesBrowserNode locallyDeletedNode=ChangesBrowserNode.create(myProject,LOCALLY_DELETED_NODE);
    model.insertNodeInto(locallyDeletedNode,root,root.getChildCount());
    buildLocallyDeletedPaths(locallyDeletedFiles,locallyDeletedNode);
  }
  return this;
}
