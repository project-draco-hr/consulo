{
  final HashMap<String,ChangesBrowserNode> foldersCache=new HashMap<String,ChangesBrowserNode>();
  final ChangesGroupingPolicy policy=createGroupingPolicy();
  for (  LocallyDeletedChange change : locallyDeletedChanges) {
    ChangesBrowserNode oldNode=foldersCache.get(change.getPresentableUrl());
    if (oldNode == null) {
      final ChangesBrowserNode node=ChangesBrowserNode.create(myProject,change);
      final ChangesBrowserNode parent=getParentNodeFor(node,foldersCache,policy,baseNode);
      model.insertNodeInto(node,parent,parent.getChildCount());
      foldersCache.put(change.getPresentableUrl(),node);
    }
  }
}
