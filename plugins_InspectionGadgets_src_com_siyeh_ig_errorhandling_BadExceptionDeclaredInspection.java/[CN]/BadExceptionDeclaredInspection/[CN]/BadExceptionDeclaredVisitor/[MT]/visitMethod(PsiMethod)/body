{
  super.visitMethod(method);
  if (ignoreTestCases) {
    final PsiClass containingClass=method.getContainingClass();
    if (containingClass != null && TestUtil.isTestClass(containingClass)) {
      return;
    }
  }
  final PsiReferenceList throwsList=method.getThrowsList();
  final PsiJavaCodeReferenceElement[] references=throwsList.getReferenceElements();
  for (  PsiJavaCodeReferenceElement reference : references) {
    final PsiElement element=reference.resolve();
    if (!(element instanceof PsiClass)) {
      continue;
    }
    final PsiClass thrownClass=(PsiClass)element;
    final String qualifiedName=thrownClass.getQualifiedName();
    if (qualifiedName != null && exceptionSet.contains(qualifiedName)) {
      registerError(reference);
    }
  }
}
