{
  if (element.getParent().getLanguage() == StdLanguages.JAVA)   return false;
  PsiElement nextSibling=element.getNextSibling();
  if (nextSibling != null) {
    ASTNode node=nextSibling.getNode();
    if (nextSibling instanceof PsiErrorElement || node != null && node.getElementType() == TokenType.BAD_CHARACTER) {
      nextSibling=nextSibling.getNextSibling();
    }
  }
  final PsiFile containingFile=element.getContainingFile();
  if (!(containingFile instanceof PsiFileImpl) || !((PsiFileImpl)containingFile).isTemplateDataFile())   return false;
  if (nextSibling == null) {
    if (PsiUtil.isInJspFile(containingFile)) {
      final JspxFileViewProvider viewProvider=(JspxFileViewProvider)containingFile.getViewProvider();
      nextSibling=viewProvider.findElementAt(element.getTextOffset() + 1,viewProvider.getTemplateDataLanguage());
      if (containingFile.getFileType() == StdFileTypes.JSPX) {
        final ELExpressionHolder expressionHolder=PsiTreeUtil.getParentOfType(nextSibling,ELExpressionHolder.class);
        if (expressionHolder != null) {
          return true;
        }
      }
    }
  }
  while (nextSibling instanceof PsiWhiteSpace) {
    nextSibling=nextSibling.getNextSibling();
  }
  final PsiElement psiElement=nextSibling == null ? null : PsiTreeUtil.findCommonParent(nextSibling,element);
  final boolean nextIsOuterLanguageElement=nextSibling instanceof OuterLanguageElement || nextSibling instanceof JspExpression || nextSibling instanceof ELExpressionHolder;
  if (nextIsOuterLanguageElement && psiElement != null && !(psiElement instanceof PsiFile)) {
    return !(nextSibling.getPrevSibling() instanceof XmlTag);
  }
  final XmlAttributeValue parentOfType=PsiTreeUtil.getParentOfType(element,XmlAttributeValue.class);
  if (parentOfType != null && parentOfType.getUserData(XmlHighlightVisitor.DO_NOT_VALIDATE_KEY) != null) {
    return true;
  }
  PsiElement prevLeaf=PsiTreeUtil.prevLeaf(element,true);
  while (prevLeaf instanceof PsiWhiteSpace) {
    prevLeaf=prevLeaf.getPrevSibling();
  }
  if (prevLeaf instanceof OuterLanguageElement && prevLeaf.getTextRange().getEndOffset() != element.getContainingFile().getTextLength()) {
    return true;
  }
  PsiElement grandPrevLeaf=prevLeaf != null ? PsiTreeUtil.prevLeaf(prevLeaf) : null;
  if (grandPrevLeaf != null && containingFile.getFileType() == StdFileTypes.JSPX) {
    final ELExpressionHolder languageElement=PsiTreeUtil.getParentOfType(grandPrevLeaf,ELExpressionHolder.class);
    if (languageElement != null && PsiTreeUtil.findCommonParent(grandPrevLeaf,element,languageElement.getFirstChild()) != languageElement) {
      return true;
    }
  }
  return element.getParent().getUserData(XmlHighlightVisitor.DO_NOT_VALIDATE_KEY) != null || nextIsOuterLanguageElement && prevLeaf == null;
}
