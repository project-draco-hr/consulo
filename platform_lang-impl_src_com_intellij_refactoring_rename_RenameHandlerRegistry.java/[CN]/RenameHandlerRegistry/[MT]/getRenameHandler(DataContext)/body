{
  final Map<String,RenameHandler> availableHandlers=new TreeMap<String,RenameHandler>();
  for (  RenameHandler renameHandler : Extensions.getExtensions(RenameHandler.EP_NAME)) {
    if (renameHandler.isRenaming(dataContext)) {
      if (ApplicationManager.getApplication().isUnitTestMode())       return renameHandler;
      availableHandlers.put(getHandlerTitle(renameHandler),renameHandler);
    }
  }
  for (  RenameHandler renameHandler : myHandlers) {
    if (renameHandler.isRenaming(dataContext)) {
      if (ApplicationManager.getApplication().isUnitTestMode())       return renameHandler;
      availableHandlers.put(getHandlerTitle(renameHandler),renameHandler);
    }
  }
  if (availableHandlers.size() == 1)   return availableHandlers.values().iterator().next();
  if (availableHandlers.size() > 1) {
    final String[] strings=availableHandlers.keySet().toArray(new String[availableHandlers.keySet().size()]);
    final HandlersChooser chooser=new HandlersChooser(PlatformDataKeys.PROJECT.getData(dataContext),strings);
    chooser.show();
    if (chooser.isOK()) {
      return availableHandlers.get(chooser.getSelection());
    }
    return null;
  }
  return myDefaultElementRenameHandler.isRenaming(dataContext) ? myDefaultElementRenameHandler : null;
}
