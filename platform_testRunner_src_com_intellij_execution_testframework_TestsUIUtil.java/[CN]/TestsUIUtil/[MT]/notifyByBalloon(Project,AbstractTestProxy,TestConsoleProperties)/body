{
  if (project.isDisposed())   return;
  if (properties == null)   return;
  final String testRunDebugId=properties.isDebug() ? ToolWindowId.DEBUG : ToolWindowId.RUN;
  final ToolWindowManager toolWindowManager=ToolWindowManager.getInstance(project);
  String title;
  String text;
  String balloonText;
  MessageType type;
  if (root == null) {
    balloonText=title=ExecutionBundle.message("test.not.started.progress.text");
    text="";
    type=MessageType.WARNING;
  }
 else {
    int passedCount=root.getAllTests().size();
    int failedCount=Filter.DEFECTIVE_LEAF.select(root.getAllTests()).size();
    if (failedCount > 0) {
      title=ExecutionBundle.message("junit.runing.info.tests.failed.label");
      text=passedCount + " passed, " + failedCount+ " failed";
      type=MessageType.ERROR;
    }
 else {
      title=ExecutionBundle.message("junit.runing.info.tests.passed.label");
      text=passedCount + " passed";
      type=MessageType.INFO;
    }
    balloonText=title + ": " + text;
  }
  if (!Comparing.strEqual(toolWindowManager.getActiveToolWindowId(),testRunDebugId)) {
    toolWindowManager.notifyByBalloon(testRunDebugId,type,balloonText,null,null);
  }
  SystemNotifications.getInstance().notify("TestRunner",title,text);
}
