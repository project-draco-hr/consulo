{
  if (myRoot == null) {
    myBalloonText=myTitle=myStarted ? "Tests were interrupted" : ExecutionBundle.message("test.not.started.progress.text");
    myText="";
    myType=MessageType.WARNING;
  }
 else {
    List allTests=Filter.LEAF.select(myRoot.getAllTests());
    final List<AbstractTestProxy> failed=Filter.DEFECTIVE_LEAF.select(allTests);
    final List<AbstractTestProxy> notStarted=Filter.NOT_PASSED.select(allTests);
    notStarted.removeAll(failed);
    final List ignored=Filter.IGNORED.select(allTests);
    notStarted.removeAll(ignored);
    failed.removeAll(ignored);
    int failedCount=failed.size();
    int notStartedCount=notStarted.size() + ignored.size();
    int passedCount=allTests.size() - failedCount - notStartedCount;
    if (failedCount > 0) {
      myTitle=ExecutionBundle.message("junit.runing.info.tests.failed.label");
      myText=passedCount + " passed, " + failedCount+ " failed"+ (notStartedCount > 0 ? ", " + notStartedCount + " not started" : "");
      myType=MessageType.ERROR;
    }
 else     if (notStartedCount > 0) {
      myTitle=ExecutionBundle.message("junit.runing.info.failed.to.start.error.message");
      myText=passedCount + " passed, " + notStartedCount+ " not started";
      myType=MessageType.ERROR;
    }
 else {
      myTitle=ExecutionBundle.message("junit.runing.info.tests.passed.label");
      myText=passedCount + " passed";
      myType=MessageType.INFO;
    }
    if (myComment != null) {
      myText+=" " + myComment;
    }
    myBalloonText=myTitle + ": " + myText;
  }
  return this;
}
