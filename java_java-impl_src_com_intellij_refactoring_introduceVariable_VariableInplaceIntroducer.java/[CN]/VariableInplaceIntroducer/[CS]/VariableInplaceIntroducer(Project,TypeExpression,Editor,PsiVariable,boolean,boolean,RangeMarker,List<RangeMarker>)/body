{
  super(elementToRename,editor);
  myProject=project;
  myEditor=editor;
  myElementToRename=elementToRename;
  myExpression=expression;
  myExprMarker=exprMarker;
  myOccurrenceMarkers=occurrenceMarkers;
  myDefaultType=elementToRename.getType();
  final PsiDeclarationStatement declarationStatement=PsiTreeUtil.getParentOfType(elementToRename,PsiDeclarationStatement.class);
  myPointer=declarationStatement != null ? SmartPointerManager.getInstance(project).createSmartPsiElementPointer(declarationStatement) : null;
  editor.putUserData(ReassignVariableUtil.DECLARATION_KEY,myPointer);
  editor.putUserData(ReassignVariableUtil.OCCURRENCES_KEY,occurrenceMarkers.toArray(new RangeMarker[occurrenceMarkers.size()]));
  setAdvertisementText(getAdvertisementText(declarationStatement,myDefaultType,hasTypeSuggestion));
  if (!cantChangeFinalModifier) {
    myCanBeFinal=new NonFocusableCheckBox("Declare final");
    myCanBeFinal.setSelected(createFinals());
    myCanBeFinal.setMnemonic('f');
    myCanBeFinal.addActionListener(new FinalListener(project));
  }
}
