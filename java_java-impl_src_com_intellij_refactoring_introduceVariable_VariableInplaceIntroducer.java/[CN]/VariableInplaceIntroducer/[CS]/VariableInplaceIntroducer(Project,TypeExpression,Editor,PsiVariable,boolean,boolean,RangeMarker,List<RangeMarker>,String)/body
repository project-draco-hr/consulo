{
  super(elementToRename,editor);
  myProject=project;
  myEditor=editor;
  myElementToRename=elementToRename;
  myExpression=expression;
  myExprMarker=exprMarker;
  myOccurrenceMarkers=occurrenceMarkers;
  final PsiType defaultType=elementToRename.getType();
  myDefaultType=SmartTypePointerManager.getInstance(project).createSmartTypePointer(defaultType);
  final PsiDeclarationStatement declarationStatement=PsiTreeUtil.getParentOfType(elementToRename,PsiDeclarationStatement.class);
  myPointer=declarationStatement != null ? SmartPointerManager.getInstance(project).createSmartPsiElementPointer(declarationStatement) : null;
  editor.putUserData(ReassignVariableUtil.DECLARATION_KEY,myPointer);
  editor.putUserData(ReassignVariableUtil.OCCURRENCES_KEY,occurrenceMarkers.toArray(new RangeMarker[occurrenceMarkers.size()]));
  setAdvertisementText(getAdvertisementText(declarationStatement,defaultType,hasTypeSuggestion));
  if (!cantChangeFinalModifier) {
    myCanBeFinalCb=new NonFocusableCheckBox("Declare final");
    myCanBeFinalCb.setSelected(createFinals());
    myCanBeFinalCb.setMnemonic('f');
    myCanBeFinalCb.addActionListener(new FinalListener(project,commandName));
  }
}
