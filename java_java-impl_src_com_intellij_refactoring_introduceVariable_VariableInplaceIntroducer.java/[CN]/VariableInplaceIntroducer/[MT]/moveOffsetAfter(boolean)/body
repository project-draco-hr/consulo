{
  try {
    if (success) {
      final Document document=myEditor.getDocument();
      final @Nullable PsiVariable psiVariable=getVariable();
      if (psiVariable == null) {
        return;
      }
      saveSettings(psiVariable);
      adjustLine(psiVariable,document);
      int startOffset=myExprMarker.getStartOffset();
      final PsiFile file=psiVariable.getContainingFile();
      final PsiReference referenceAt=file.findReferenceAt(startOffset);
      if (referenceAt != null && referenceAt.resolve() instanceof PsiLocalVariable) {
        startOffset=referenceAt.getElement().getTextRange().getEndOffset();
      }
 else {
        final PsiDeclarationStatement declarationStatement=PsiTreeUtil.getParentOfType(psiVariable,PsiDeclarationStatement.class);
        if (declarationStatement != null) {
          startOffset=declarationStatement.getTextRange().getEndOffset();
        }
      }
      myEditor.getCaretModel().moveToOffset(startOffset);
      if (psiVariable.getInitializer() != null) {
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            appendTypeCasts(myOccurrenceMarkers,file,myProject,psiVariable);
          }
        }
);
      }
    }
  }
  finally {
    myEditor.putUserData(ReassignVariableUtil.DECLARATION_KEY,null);
    for (    RangeMarker occurrenceMarker : myOccurrenceMarkers) {
      occurrenceMarker.dispose();
    }
    myEditor.putUserData(ReassignVariableUtil.OCCURRENCES_KEY,null);
    myExprMarker.dispose();
  }
}
