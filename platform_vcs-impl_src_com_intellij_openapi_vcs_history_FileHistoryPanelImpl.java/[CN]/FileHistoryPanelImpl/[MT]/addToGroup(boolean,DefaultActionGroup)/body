{
  if (popup) {
    result.add(ActionManager.getInstance().getAction(IdeActions.ACTION_EDIT_SOURCE));
  }
  final MyDiffAction diffAction=new MyDiffAction();
  result.add(diffAction);
  if (!popup) {
    List<Shortcut> shortcuts=new SmartList<Shortcut>();
    ContainerUtil.addAll(shortcuts,CommonShortcuts.getDiff().getShortcuts());
    ContainerUtil.addAll(shortcuts,CommonShortcuts.DOUBLE_CLICK_1.getShortcuts());
    CustomShortcutSet shortcutSet=new CustomShortcutSet(ContainerUtil.toArray(shortcuts,new Shortcut[shortcuts.size()]));
    diffAction.registerCustomShortcutSet(shortcutSet,myDualView.getFlatView());
    diffAction.registerCustomShortcutSet(shortcutSet,myDualView.getTreeView());
  }
 else {
    diffAction.registerCustomShortcutSet(CommonShortcuts.getDiff(),this);
  }
  result.add(ActionManager.getInstance().getAction("Vcs.ShowDiffWithLocal"));
  final AnAction diffGroup=ActionManager.getInstance().getAction(VCS_HISTORY_ACTIONS_GROUP);
  if (diffGroup != null)   result.add(diffGroup);
  result.add(new MyCreatePatch());
  result.add(new MyGetVersionAction());
  result.add(new MyAnnotateAction());
  AnAction[] additionalActions=myProvider.getAdditionalActions(new Runnable(){
    public void run(){
      refreshImpl(true);
    }
  }
);
  if (additionalActions != null) {
    for (    AnAction additionalAction : additionalActions) {
      if (popup || additionalAction.getTemplatePresentation().getIcon() != null) {
        result.add(additionalAction);
      }
    }
  }
  result.add(new RefreshFileHistoryAction());
  if (!myIsStaticAndEmbedded) {
    result.add(new MyToggleAction());
  }
  if (!popup && supportsTree()) {
    result.add(new MyShowAsTreeAction());
  }
  return result;
}
