{
  final String[] pieces=RelativePathCalculator.split(myAfterName);
  final VirtualFile afterFileParent=makeSureParentPathExists(pieces);
  if (afterFileParent == null) {
    setErrorMessage(fileNotFoundMessage(myAfterName));
    return false;
  }
  final VirtualFile beforeFile=PatchApplier.getFile(myBaseDirectory,myBeforeName);
  if (!checkExistsAndValid(beforeFile,myBeforeName)) {
    return false;
  }
  final VirtualFile oldParent=beforeFile.getParent();
  final VirtualFile afterFile;
  if (afterFileParent.equals(oldParent)) {
    afterFile=beforeFile;
  }
 else {
    afterFile=moveFile(beforeFile,afterFileParent);
    if (!checkExistsAndValid(afterFile,myAfterName)) {
      return false;
    }
  }
  if (!Comparing.equal(myPatch.getBeforeFileName(),myPatch.getAfterFileName())) {
    afterFile.rename(PatchApplier.class,myPatch.getAfterFileName());
  }
  myMovedFiles.add(new MovedFileData(oldParent,afterFile,myPatch.getBeforeFileName()));
  addPatch(myPatch,afterFile);
  return true;
}
