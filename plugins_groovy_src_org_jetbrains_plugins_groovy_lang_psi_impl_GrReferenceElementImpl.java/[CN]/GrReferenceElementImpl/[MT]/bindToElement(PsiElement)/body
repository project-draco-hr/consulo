{
  if (isReferenceTo(element))   return this;
  if (element instanceof PsiClass) {
    final String newName=((PsiClass)element).getName();
    handleElementRename(newName);
    if (isReferenceTo(element))     return this;
    return bindWithQualifiedRef(((PsiClass)element).getQualifiedName());
  }
 else   if (element instanceof PsiMember) {
    PsiMember member=(PsiMember)element;
    if (!isPhysical()) {
      return this;
    }
    final PsiClass psiClass=member.getContainingClass();
    if (psiClass == null)     throw new IncorrectOperationException();
    String qName=psiClass.getQualifiedName() + "." + member.getName();
    return bindWithQualifiedRef(qName);
  }
 else   if (element instanceof PsiPackage) {
    final String qName=((PsiPackage)element).getQualifiedName();
    return bindWithQualifiedRef(qName);
  }
  throw new IncorrectOperationException("Cannot bind to:" + element + " of class "+ element.getClass());
}
