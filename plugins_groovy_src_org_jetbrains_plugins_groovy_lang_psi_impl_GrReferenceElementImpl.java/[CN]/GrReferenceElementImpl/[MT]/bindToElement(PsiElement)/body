{
  if (isReferenceTo(element))   return this;
  if (element instanceof PsiClass) {
    final String newName=((PsiClass)element).getName();
    handleElementRename(newName);
    if (isReferenceTo(element))     return this;
    final GroovyFileBase file=(GroovyFileBase)getContainingFile();
    final PsiClass clazz=(PsiClass)element;
    final String qName=clazz.getQualifiedName();
    if (qName != null) {
      if (mayInsertImport()) {
        final GrImportStatement added=file.addImportForClass(clazz);
        if (!bindsCorrectly(element)) {
          file.removeImport(added);
          return bindWithQualifiedRef(qName);
        }
        return this;
      }
    }
 else {
      return bindWithQualifiedRef(qName);
    }
  }
 else   if (element instanceof PsiPackage) {
    final String qName=((PsiPackage)element).getQualifiedName();
    return bindWithQualifiedRef(qName);
  }
  throw new IncorrectOperationException("Cannot bind");
}
