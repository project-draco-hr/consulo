{
  if (!myHint.isVisible()) {
    Disposer.dispose(this);
    return;
  }
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  final PsiFile file=PsiDocumentManager.getInstance(myProject).getPsiFile(myEditor.getDocument());
  CharSequence chars=myEditor.getDocument().getCharsSequence();
  final int offset=CharArrayUtil.shiftBackward(chars,myEditor.getCaretModel().getOffset() - 1," \t") + 1;
  final UpdateParameterInfoContext context=new MyUpdateParameterInfoContext(offset,file);
  final Object elementForUpdating=myHandler.findElementForUpdatingParameterInfo(context);
  if (elementForUpdating != null) {
    myHandler.updateParameterInfo(elementForUpdating,context);
    if (!myDisposed && myHint.isVisible() && myEditor.getComponent().getRootPane() != null) {
      myComponent.update();
      Pair<Point,Short> pos=myProvider.getBestPointPosition(myHint,(PsiElement)elementForUpdating,offset,true,HintManager.UNDER);
      HintManagerImpl.adjustEditorHintPosition(myHint,myEditor,pos.getFirst(),pos.getSecond());
    }
  }
 else {
    context.removeHint();
  }
}
