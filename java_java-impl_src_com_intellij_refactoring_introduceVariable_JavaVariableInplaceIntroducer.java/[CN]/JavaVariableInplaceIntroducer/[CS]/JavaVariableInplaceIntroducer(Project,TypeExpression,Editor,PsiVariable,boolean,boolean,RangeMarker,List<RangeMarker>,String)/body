{
  super(elementToRename,editor,project,title,new PsiExpression[0],null);
  myProject=project;
  myEditor=editor;
  myCantChangeFinalModifier=cantChangeFinalModifier;
  myTitle=title;
  setExprMarker(exprMarker);
  setOccurrenceMarkers(occurrenceMarkers);
  final PsiDeclarationStatement declarationStatement=PsiTreeUtil.getParentOfType(elementToRename,PsiDeclarationStatement.class);
  myPointer=declarationStatement != null ? SmartPointerManager.getInstance(project).createSmartPsiElementPointer(declarationStatement) : null;
  editor.putUserData(ReassignVariableUtil.DECLARATION_KEY,myPointer);
  if (occurrenceMarkers != null) {
    editor.putUserData(ReassignVariableUtil.OCCURRENCES_KEY,occurrenceMarkers.toArray(new RangeMarker[occurrenceMarkers.size()]));
  }
  myExpression=expression;
  final PsiType defaultType=elementToRename.getType();
  myDefaultType=SmartTypePointerManager.getInstance(project).createSmartTypePointer(defaultType);
  setAdvertisementText(getAdvertisementText(declarationStatement,defaultType,hasTypeSuggestion));
}
