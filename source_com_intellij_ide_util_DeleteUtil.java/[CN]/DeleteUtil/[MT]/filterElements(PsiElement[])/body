{
  if (LOG.isDebugEnabled()) {
    for (int i=0; i < elements.length; i++) {
      PsiElement element=elements[i];
      LOG.debug("element = " + element);
    }
  }
  ArrayList filteredElements=new ArrayList();
  for (int i=0; i < elements.length; i++) {
    PsiElement element=elements[i];
    filteredElements.add(element);
  }
  int previousSize;
  do {
    previousSize=filteredElements.size();
    outer:     for (Iterator iterator1=filteredElements.iterator(); iterator1.hasNext(); ) {
      PsiElement element1=(PsiElement)iterator1.next();
      for (Iterator iterator2=filteredElements.iterator(); iterator2.hasNext(); ) {
        PsiElement element2=(PsiElement)iterator2.next();
        if (element1 == element2)         continue;
        if (PsiTreeUtil.isAncestor(element1,element2,false)) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("removing " + element2);
          }
          filteredElements.remove(element2);
          break outer;
        }
      }
    }
  }
 while (filteredElements.size() != previousSize);
  if (LOG.isDebugEnabled()) {
    for (Iterator iterator=filteredElements.iterator(); iterator.hasNext(); ) {
      PsiElement element=(PsiElement)iterator.next();
      LOG.debug("filtered element = " + element);
    }
  }
  return (PsiElement[])filteredElements.toArray(new PsiElement[filteredElements.size()]);
}
