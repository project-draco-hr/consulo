{
  List<RadComponent> components=rootContainer.getGroupContents(group);
  if (components.size() < 2)   return;
  Rectangle[] allBounds=new Rectangle[components.size()];
  int lastTop=-1;
  int minLeft=Integer.MAX_VALUE;
  for (int i=0; i < components.size(); i++) {
    final Rectangle rc=SwingUtilities.convertRectangle(components.get(i).getParent().getDelegee(),components.get(i).getBounds(),rootContainer.getDelegee());
    allBounds[i]=rc;
    minLeft=Math.min(minLeft,rc.x);
    if (i == 0) {
      lastTop=rc.y;
    }
 else     if (lastTop != rc.y) {
      lastTop=Integer.MIN_VALUE;
    }
  }
  Graphics2D g2d=(Graphics2D)g;
  Stroke oldStroke=g2d.getStroke();
  g2d.setStroke(new BasicStroke(2.0f));
  g2d.setColor(new Color(104,107,130));
  if (lastTop != Integer.MIN_VALUE) {
    int left=Integer.MAX_VALUE;
    int right=Integer.MIN_VALUE;
    for (    Rectangle rc : allBounds) {
      final int midX=(int)rc.getCenterX();
      left=Math.min(left,midX);
      right=Math.max(right,midX);
      g2d.drawLine(midX,lastTop - 8,midX,lastTop);
    }
    g2d.drawLine(left,lastTop - 8,right,lastTop - 8);
  }
 else {
    int top=Integer.MAX_VALUE;
    int bottom=Integer.MIN_VALUE;
    for (    Rectangle rc : allBounds) {
      final int midY=(int)rc.getCenterY();
      top=Math.min(top,midY);
      bottom=Math.max(bottom,midY);
      g2d.drawLine(minLeft - 8,midY,rc.x,midY);
    }
    g2d.drawLine(minLeft - 8,top,minLeft - 8,bottom);
  }
  g2d.setStroke(oldStroke);
}
