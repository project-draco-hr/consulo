{
  boolean hasConflicts=false;
  int mask=getModiferMask(myModifiers);
  KeyboardShortcut sc=new KeyboardShortcut(KeyStroke.getKeyStroke(actionKey,mask),null);
  Map<String,ArrayList<KeyboardShortcut>> conflictMap=myKeymap.getConflicts(actionId,sc);
  if (conflictMap.size() > 0) {
    hasConflicts=true;
    JLabel scText=new JLabel(sc.toString());
    c.gridy++;
    c.gridx=0;
    myConflicts.add(scText,c);
    Iterator<String> actions=conflictMap.keySet().iterator();
    while (actions.hasNext()) {
      String each=actions.next();
      AnAction eachAnAction=ActionManager.getInstance().getAction(each);
      if (eachAnAction != null) {
        String text=eachAnAction.getTemplatePresentation().getText();
        JLabel eachAction=new JLabel(text != null && text.length() > 0 ? text : each);
        c.gridx=1;
        myConflicts.add(eachAction,c);
        c.gridy++;
      }
    }
  }
  c.gridx=0;
  c.gridwidth=2;
  c.gridy++;
  myConflicts.add(new SeparatorWithText(),c);
  c.gridwidth=1;
  return hasConflicts;
}
