{
  try {
    final Collection<URL> urls=getClassLoaderUrls();
    for (    URL url : urls) {
      final String protocol=url.getProtocol();
      if ("file".equals(protocol)) {
        final File file=new File(URLDecoder.decode(url.getFile()));
        final String platformPrefix=System.getProperty("idea.platform.prefix");
        if (platformPrefix != null) {
          IdeaPluginDescriptorImpl platformPluginDescriptor=loadDescriptor(file,platformPrefix + "Plugin.xml");
          if (platformPluginDescriptor != null && !result.contains(platformPluginDescriptor)) {
            platformPluginDescriptor.setUseCoreClassLoader(true);
            result.add(platformPluginDescriptor);
          }
        }
        IdeaPluginDescriptorImpl pluginDescriptor=loadDescriptor(file,PLUGIN_XML);
        if (platformPrefix != null && pluginDescriptor != null && pluginDescriptor.getName().equals("IDEA CORE")) {
          continue;
        }
        if (pluginDescriptor != null && !result.contains(pluginDescriptor)) {
          result.add(pluginDescriptor);
        }
      }
    }
  }
 catch (  Exception e) {
    System.err.println("Error loading plugins from classpath:");
    e.printStackTrace();
  }
}
