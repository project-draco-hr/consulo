{
  processed.add(pluginDescriptor.getPluginId());
  final PluginId[] dependentPluginIds=pluginDescriptor.getDependentPluginIds();
  final Set<PluginId> optionalDependencies=new HashSet<PluginId>(Arrays.asList(pluginDescriptor.getOptionalDependentPluginIds()));
  for (  final PluginId dependentPluginId : dependentPluginIds) {
    if (processed.contains(dependentPluginId))     continue;
    if (ourAvailableModules.isEmpty() && isModuleDependency(dependentPluginId)) {
      continue;
    }
    if (!optionalDependencies.contains(dependentPluginId)) {
      if (!check.value(dependentPluginId)) {
        return false;
      }
      final IdeaPluginDescriptor dependantPluginDescriptor=pluginId2Descriptor.fun(dependentPluginId);
      if (dependantPluginDescriptor != null && !checkDependants(dependantPluginDescriptor,pluginId2Descriptor,check,processed)) {
        return false;
      }
    }
  }
  return true;
}
