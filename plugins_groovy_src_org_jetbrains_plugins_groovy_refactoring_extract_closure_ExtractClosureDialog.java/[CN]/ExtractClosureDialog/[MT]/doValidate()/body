{
  final String text=myNameField.getText().trim();
  if (!StringUtil.isJavaIdentifier(text)) {
    return new ValidationInfo(GroovyRefactoringBundle.message("name.is.wrong",text),myNameField);
  }
  final Ref<ValidationInfo> info=new Ref<ValidationInfo>();
  toRemoveCBs.forEachEntry(new TObjectIntProcedure<JBCheckBox>(){
    @Override public boolean execute(    JBCheckBox checkbox,    int index){
      if (!checkbox.isSelected())       return true;
      final GrParameter param=myHelper.getOwner().getParameters()[index];
      final ParameterInfo pinfo=findParamByOldName(param.getName());
      if (pinfo == null || !pinfo.passAsParameter())       return true;
      final String message=GroovyRefactoringBundle.message("you.cannot.pass.as.parameter.0.because.you.remove.1.from.base.method",pinfo.getName(),param.getName());
      info.set(new ValidationInfo(message));
      return false;
    }
  }
);
  return info.get();
}
