{
  if (myLoadingParents.contains(descriptor.getElement()))   return false;
  myLoadingParents.add(descriptor.getElement());
  if (!isNodeBeingBuilt(node)) {
    LoadingNode loadingNode=new LoadingNode(getLoadingNodeText());
    myTreeModel.insertNodeInto(loadingNode,node,node.getChildCount());
  }
  Runnable updateRunnable=new Runnable(){
    public void run(){
      if (isReleased())       return;
      getBuilder().updateNodeDescriptor(descriptor);
      Object element=descriptor.getElement();
      if (element == null)       return;
      getChildrenFor(getBuilder().getTreeStructureElement(descriptor));
    }
  }
;
  Runnable postRunnable=new Runnable(){
    public void run(){
      if (isReleased())       return;
      updateNodeChildren(node,pass);
      myLoadingParents.remove(descriptor.getElement());
      getBuilder().updateNodeDescriptor(descriptor);
      Object element=descriptor.getElement();
      if (element != null) {
        myUnbuiltNodes.remove(node);
        for (int i=0; i < node.getChildCount(); i++) {
          TreeNode child=node.getChildAt(i);
          if (isLoadingNode(child)) {
            if (TreeBuilderUtil.isNodeSelected(myTree,node)) {
              addSelectionPath(new TreePath(myTreeModel.getPathToRoot(node)),true,Condition.FALSE);
            }
            removeIfLoading(child);
            i--;
          }
        }
        processNodeActionsIfReady(node);
      }
    }
  }
;
  addTaskToWorker(updateRunnable,true,postRunnable);
  return true;
}
