{
  final Set<Object> currentElements=getSelectedElements();
  if (checkCurrentSelection && currentElements.size() > 0 && elements.length == currentElements.size()) {
    boolean runSelection=false;
    for (    Object eachToSelect : elements) {
      if (!currentElements.contains(eachToSelect)) {
        runSelection=true;
        break;
      }
    }
    if (!runSelection) {
      if (onDone != null) {
        onDone.run();
      }
      return;
    }
  }
  Set<Object> toSelect=new HashSet<Object>();
  myTree.clearSelection();
  toSelect.addAll(Arrays.asList(elements));
  if (addToSelection) {
    toSelect.addAll(currentElements);
  }
  final Object[] elementsToSelect=toSelect.toArray(new Object[toSelect.size()]);
  if (wasRootNodeInitialized()) {
    final int[] originalRows=myTree.getSelectionRows();
    if (!addToSelection) {
      myTree.clearSelection();
    }
    addNext(elementsToSelect,0,onDone,originalRows);
  }
 else {
    myDeferredSelections.clear();
    myDeferredSelections.add(new Runnable(){
      public void run(){
        select(elementsToSelect,onDone);
      }
    }
);
  }
}
