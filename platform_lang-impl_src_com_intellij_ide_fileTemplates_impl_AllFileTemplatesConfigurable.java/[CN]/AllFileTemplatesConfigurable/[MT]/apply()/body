{
  if (myEditor != null && myEditor.isModified()) {
    myModified=true;
    myEditor.apply();
  }
  for (  FileTemplateTab list : myTabs) {
    checkCanApply(list);
  }
  final FileTemplateManager templatesManager=FileTemplateManager.getInstance();
  final List<FileTemplate> templates=new ArrayList<FileTemplate>();
  final List<FileTemplate> internalTemplates=new ArrayList<FileTemplate>();
  for (  FileTemplate template : myTemplatesList.getTemplates()) {
    if (myInternalTemplateNames.contains(((FileTemplateBase)template).getQualifiedName())) {
      internalTemplates.add(template);
    }
 else {
      templates.add(template);
    }
  }
  templatesManager.setTemplates(FileTemplateManager.DEFAULT_TEMPLATES_CATEGORY,templates);
  templatesManager.setTemplates(FileTemplateManager.INTERNAL_TEMPLATES_CATEGORY,internalTemplates);
  templatesManager.setTemplates(FileTemplateManager.INCLUDES_TEMPLATES_CATEGORY,Arrays.asList(myIncludesList.getTemplates()));
  templatesManager.setTemplates(FileTemplateManager.CODE_TEMPLATES_CATEGORY,Arrays.asList(myCodeTemplatesList.getTemplates()));
  if (myJ2eeTemplatesList != null) {
    templatesManager.setTemplates(FileTemplateManager.J2EE_TEMPLATES_CATEGORY,Arrays.asList(myJ2eeTemplatesList.getTemplates()));
  }
  templatesManager.saveAll();
  if (myEditor != null) {
    myModified=false;
    fireListChanged();
    reset();
  }
}
