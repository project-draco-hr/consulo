{
  configureByFile(BASE_PATH + getTestName(false) + ".java");
  new MockIntroduceConstantHandler(null){
    @Override protected Settings showRefactoringDialog(    Project project,    Editor editor,    PsiClass parentClass,    PsiExpression expr,    PsiType type,    PsiExpression[] occurences,    PsiElement anchorElement,    PsiElement anchorElementIfAll){
      final TypeSelectorManagerImpl selectorManager=new TypeSelectorManagerImpl(project,type,PsiTreeUtil.getParentOfType(anchorElement,PsiMethod.class),expr,occurences);
      final PsiType psiType=selectorManager.getDefaultType();
      Assert.assertEquals(psiType.getCanonicalText(),expectedType);
      return new Settings("xxx",expr,occurences,true,true,true,InitializationPlace.IN_FIELD_DECLARATION,getVisibility(),null,psiType,false,parentClass,false,false);
    }
  }
.invoke(getProject(),getEditor(),getFile(),null);
}
