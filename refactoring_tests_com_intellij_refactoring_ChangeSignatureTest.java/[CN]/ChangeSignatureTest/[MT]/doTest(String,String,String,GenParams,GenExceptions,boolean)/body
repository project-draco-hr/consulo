{
  String basePath="/refactoring/changeSignature/" + getTestName(false);
  @NonNls final String filePath=basePath + ".java";
  configureByFile(filePath);
  final PsiElement targetElement=TargetElementUtil.findTargetElement(getEditor(),TargetElementUtil.ELEMENT_NAME_ACCEPTED);
  assertTrue("<caret> is not on method name",targetElement instanceof PsiMethod);
  PsiMethod method=(PsiMethod)targetElement;
  final PsiElementFactory factory=JavaPsiFacade.getInstance(getProject()).getElementFactory();
  PsiType newType=newReturnType != null ? factory.createTypeFromText(newReturnType,method) : method.getReturnType();
  new ChangeSignatureProcessor(getProject(),method,generateDelegate,newVisibility,newName != null ? newName : method.getName(),newType,genParams.genParams(method),genExceptions.genExceptions(method)).run();
  @NonNls String after=basePath + "_after.java";
  checkResultByFile(after);
}
