{
  byte[] bytes;
  try {
    bytes=virtualFile.contentsToByteArray();
  }
 catch (  IOException e) {
    return true;
  }
  FileDocumentManager documentManager=FileDocumentManager.getInstance();
  Document document=documentManager.getDocument(virtualFile);
  if (document == null)   return true;
  String separator=LoadTextUtil.detectLineSeparator(virtualFile,false);
  if (separator == null) {
    separator=documentManager.isDocumentUnsaved(document) ? FileDocumentManagerImpl.getLineSeparator(document,virtualFile) : CodeStyleFacade.getInstance(project).getLineSeparator();
  }
  String toSave=StringUtil.convertLineSeparators(text,separator);
  byte[] bom=virtualFile.getBOM();
  byte[] bytesToSave=toSave.getBytes(charset);
  if (bom != null && !ArrayUtil.startsWith(bytesToSave,bom)) {
    bytesToSave=ArrayUtil.mergeArrays(bom,bytesToSave);
  }
  boolean equals=Arrays.equals(bytesToSave,bytes);
  if (!equals && LOG.isDebugEnabled()) {
    try {
      FileUtil.writeToFile(new File("C:\\temp\\bytesToSave"),bytesToSave);
      FileUtil.writeToFile(new File("C:\\temp\\bytes"),bytes);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
  return equals;
}
