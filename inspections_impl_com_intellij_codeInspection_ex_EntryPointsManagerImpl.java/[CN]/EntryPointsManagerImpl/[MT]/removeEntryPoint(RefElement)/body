{
  if (anEntryPoint instanceof RefClass) {
    RefClass refClass=(RefClass)anEntryPoint;
    if (!refClass.isInterface()) {
      anEntryPoint=refClass.getDefaultConstructor();
    }
  }
  if (anEntryPoint == null)   return;
  myTemporaryEntryPoints.remove(anEntryPoint);
  Set<Map.Entry<String,SmartRefElementPointer>> set=myPersistentEntryPoints.entrySet();
  String key=null;
  for (  Map.Entry<String,SmartRefElementPointer> entry : set) {
    SmartRefElementPointer value=entry.getValue();
    if (value.getRefElement() == anEntryPoint) {
      key=entry.getKey();
      break;
    }
  }
  if (key != null) {
    myPersistentEntryPoints.remove(key);
    ((RefElementImpl)anEntryPoint).setEntry(false);
  }
  if (anEntryPoint.isPermanentEntry() && anEntryPoint.isValid()) {
    final Project project=anEntryPoint.getElement().getProject();
    final EntryPointsManagerImpl entryPointsManager=EntryPointsManagerImpl.getInstance(project);
    if (this != entryPointsManager) {
      entryPointsManager.removeEntryPoint(anEntryPoint);
    }
  }
}
