{
  if (file instanceof PsiPlainTextFile) {
    FileType fType=file.getFileType();
synchronized (PsiLock.LOCK) {
      if (fType instanceof CustomFileType) {
        TokenSet commentTokens=TokenSet.create(CustomHighlighterTokenType.LINE_COMMENT,CustomHighlighterTokenType.MULTI_LINE_COMMENT);
        Lexer lexer=fType.getHighlighter(file.getProject(),file.getVirtualFile()).getHighlightingLexer();
        findComments(lexer,chars,range,commentTokens,commentStarts,commentEnds);
      }
 else {
        commentStarts.add(0);
        commentEnds.add(file.getTextLength());
      }
    }
  }
 else {
synchronized (PsiLock.LOCK) {
      final Language lang=file.getLanguage();
      Lexer lexer=lang.getSyntaxHighlighter(file.getProject(),file.getVirtualFile()).getHighlightingLexer();
      TokenSet commentTokens=null;
      if (file instanceof PsiJavaFile && !(file instanceof JspFile)) {
        lexer=new JavaLexer(((PsiJavaFile)file).getLanguageLevel());
        commentTokens=TokenSet.orSet(StdTokenSets.COMMENT_BIT_SET,XML_COMMENT_BIT_SET,JavaDocTokenType.ALL_JAVADOC_TOKENS,XML_DATA_CHARS);
      }
 else       if (PsiUtil.isInJspFile(file)) {
        final JspFile jspFile=PsiUtil.getJspFile(file);
        commentTokens=TokenSet.orSet(XML_COMMENT_BIT_SET,StdTokenSets.COMMENT_BIT_SET);
        final ParserDefinition parserDefinition=jspFile.getViewProvider().getTemplateDataLanguage().getParserDefinition();
        if (parserDefinition != null) {
          commentTokens=TokenSet.orSet(commentTokens,parserDefinition.getCommentTokens());
        }
        final EditorHighlighter highlighter=HighlighterFactory.createHighlighter(file.getProject(),file.getVirtualFile());
        lexer=new LexerEditorHighlighterLexer(highlighter);
      }
 else       if (file instanceof XmlFile) {
        commentTokens=XML_COMMENT_BIT_SET;
      }
 else {
        final ParserDefinition parserDefinition=lang.getParserDefinition();
        if (parserDefinition != null) {
          commentTokens=parserDefinition.getCommentTokens();
        }
      }
      if (commentTokens != null) {
        findComments(lexer,chars,range,commentTokens,commentStarts,commentEnds);
      }
    }
  }
}
