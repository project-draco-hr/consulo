{
  if (context != null) {
    final String name=context.getName();
    if (Comparing.equal(name,getName()) && myPsiClass != null) {
      final List<XmlAttributeDescriptor> simpleAttrs=new ArrayList<XmlAttributeDescriptor>();
      final PsiField[] fields=myPsiClass.getAllFields();
      if (fields.length > 0) {
        for (        PsiField field : fields) {
          if (field.hasModifierProperty(PsiModifier.STATIC))           continue;
          final PsiType fieldType=field.getType();
          if (PropertyUtil.findPropertyGetter(myPsiClass,field.getName(),false,true) != null && InheritanceUtil.isInheritor(fieldType,JavaFxCommonClassNames.JAVAFX_BEANS_PROPERTY_PROPERTY) || fieldType.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {
            simpleAttrs.add(new JavaFxPropertyAttributeDescriptor(field.getName(),myPsiClass));
          }
        }
      }
      XmlTag tag=context.getParentTag();
      while (tag != null) {
        final XmlElementDescriptor descriptor=tag.getDescriptor();
        if (descriptor instanceof JavaFxClassBackedElementDescriptor) {
          final PsiElement element=descriptor.getDeclaration();
          if (element instanceof PsiClass) {
            for (            PsiMethod method : ((PsiClass)element).getMethods()) {
              if (method.hasModifierProperty(PsiModifier.STATIC) && method.getName().startsWith("set")) {
                final PsiParameter[] parameters=method.getParameterList().getParameters();
                if (parameters.length == 2 && InheritanceUtil.isInheritor(parameters[0].getType(),JavaFxCommonClassNames.JAVAFX_SCENE_NODE)) {
                  simpleAttrs.add(new JavaFxSetterAttributeDescriptor(method,(PsiClass)element));
                }
              }
            }
          }
        }
        tag=tag.getParentTag();
      }
      return simpleAttrs.isEmpty() ? XmlAttributeDescriptor.EMPTY : simpleAttrs.toArray(new XmlAttributeDescriptor[simpleAttrs.size()]);
    }
  }
  return XmlAttributeDescriptor.EMPTY;
}
