{
  PsiBuilder.Marker argMarker=builder.mark();
  if (argumentLabelStartCheck(builder,parser)) {
    ParserUtils.getToken(builder,mCOLON,GroovyBundle.message("colon.expected"));
    if (!AssignmentExpression.parse(builder,parser)) {
      builder.error(GroovyBundle.message("expression.expected"));
    }
    argMarker.done(NAMED_ARGUMENT);
    return true;
  }
  if (ParserUtils.getToken(builder,mSTAR)) {
    if (AssignmentExpression.parse(builder,parser)) {
      argMarker.done(SPREAD_ARGUMENT);
    }
 else {
      builder.error(GroovyBundle.message("colon.expected"));
      argMarker.done(NAMED_ARGUMENT);
    }
    return true;
  }
  argMarker.drop();
  return AssignmentExpression.parse(builder,parser);
}
