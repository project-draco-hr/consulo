{
  boolean hasntFirstArg=false;
  if (hasntFirstArg=!argumentParse(builder,closingBrace)) {
    if (!closingBrace.equals(builder.getTokenType())) {
      builder.error(GroovyBundle.message("expression.expected"));
    }
    if (!mCOMMA.equals(builder.getTokenType()) && !closingBrace.equals(builder.getTokenType())) {
      builder.advanceLexer();
    }
  }
  ParserUtils.getToken(builder,mNLS);
  while (!builder.eof() && !closingBrace.equals(builder.getTokenType())) {
    if (hasntFirstArg) {
      ParserUtils.getToken(builder,mCOMMA);
    }
 else {
      ParserUtils.getToken(builder,mCOMMA,GroovyBundle.message("comma.expected"));
    }
    ParserUtils.getToken(builder,mNLS);
    if (!argumentParse(builder,closingBrace)) {
      if (!closingBrace.equals(builder.getTokenType())) {
        builder.error(GroovyBundle.message("expression.expected"));
      }
      if (!mCOMMA.equals(builder.getTokenType()) && !closingBrace.equals(builder.getTokenType())) {
        builder.advanceLexer();
      }
    }
    ParserUtils.getToken(builder,mNLS);
  }
  ParserUtils.getToken(builder,mNLS);
}
