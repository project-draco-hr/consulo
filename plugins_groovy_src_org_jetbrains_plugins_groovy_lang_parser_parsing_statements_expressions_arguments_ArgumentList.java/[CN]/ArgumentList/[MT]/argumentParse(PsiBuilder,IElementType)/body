{
  PsiBuilder.Marker argMarker=builder.mark();
  boolean labeled=argumentLabelStartCheck(builder);
  boolean expanded=ParserUtils.getToken(builder,mSTAR);
  if (labeled) {
    ParserUtils.getToken(builder,mCOLON,GroovyBundle.message("colon.expected"));
  }
  boolean exprParsed=AssignmentExpression.parse(builder);
  if (labeled && !exprParsed) {
    builder.error(GroovyBundle.message("expression.expected"));
  }
  while (!builder.eof() && labeled && !mCOMMA.equals(builder.getTokenType())&& !closingBrace.equals(builder.getTokenType())) {
    builder.error(GroovyBundle.message("expression.expected"));
    builder.advanceLexer();
    if (AssignmentExpression.parse(builder))     break;
  }
  if (labeled || expanded) {
    argMarker.done(ARGUMENT);
  }
 else {
    argMarker.drop();
  }
  return labeled || exprParsed;
}
