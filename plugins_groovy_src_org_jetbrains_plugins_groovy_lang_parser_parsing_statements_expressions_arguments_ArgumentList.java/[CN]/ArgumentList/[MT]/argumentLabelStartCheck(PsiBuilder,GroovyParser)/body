{
  PsiBuilder.Marker marker=builder.mark();
  if (ParserUtils.lookAhead(builder,mSTAR,mCOLON)) {
    builder.advanceLexer();
    marker.done(ARGUMENT_LABEL);
    return true;
  }
  final IElementType type=builder.getTokenType();
  if (ParserUtils.lookAhead(builder,mIDENT,mCOLON) || TokenSets.KEYWORDS.contains(type) || mSTRING_LITERAL.equals(type)|| mGSTRING_LITERAL.equals(type)) {
    builder.advanceLexer();
    if (mCOLON.equals(builder.getTokenType())) {
      marker.done(ARGUMENT_LABEL);
      return true;
    }
 else {
      marker.rollbackTo();
      return false;
    }
  }
  if (mGSTRING_BEGIN.equals(type) || mREGEX_BEGIN.equals(type) || mDOLLAR_SLASH_REGEX_BEGIN.equals(type)|| TokenSets.NUMBERS.contains(type)|| mLBRACK.equals(type)|| mLPAREN.equals(type)|| mLCURLY.equals(type)) {
    PrimaryExpression.parsePrimaryExpression(builder,parser);
    if (mCOLON.equals(builder.getTokenType())) {
      marker.done(ARGUMENT_LABEL);
      return true;
    }
 else {
      marker.rollbackTo();
      return false;
    }
  }
  marker.drop();
  return false;
}
