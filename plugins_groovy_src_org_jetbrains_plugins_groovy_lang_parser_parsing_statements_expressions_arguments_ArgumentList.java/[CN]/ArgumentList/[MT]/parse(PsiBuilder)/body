{
  PsiBuilder.Marker marker=builder.mark();
  if (ParserUtils.getToken(builder,mCOMMA)) {
    marker.done(ARGUMENTS);
    return ARGUMENTS;
  }
  boolean flag=true;
  GroovyElementType result=argumentParse(builder);
  if (result.equals(WRONGWAY)) {
    flag=cleanGarbageAfter(builder);
  }
  while (flag && !builder.eof()) {
    ParserUtils.getToken(builder,mNLS);
    boolean flag1=ParserUtils.getToken(builder,mCOMMA);
    if (!flag1 && !argsFinishSoon(builder)) {
      builder.error(GroovyBundle.message("comma.expected"));
    }
    ParserUtils.getToken(builder,mNLS);
    result=argumentParse(builder);
    if (result.equals(WRONGWAY)) {
      flag=cleanGarbageAfter(builder);
    }
  }
  marker.done(ARGUMENTS);
  return ARGUMENTS;
}
