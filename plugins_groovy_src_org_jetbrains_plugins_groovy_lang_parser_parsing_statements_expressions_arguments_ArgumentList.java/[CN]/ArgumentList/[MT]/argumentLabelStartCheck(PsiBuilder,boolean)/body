{
  if (ParserUtils.lookAhead(builder,mIDENT,mCOLON) || TokenSets.KEYWORD_PROPERTY_NAMES.contains(builder.getTokenType()) || mNUM_INT.equals(builder.getTokenType())|| mSTRING_LITERAL.equals(builder.getTokenType())|| mGSTRING_LITERAL.equals(builder.getTokenType())) {
    PsiBuilder.Marker marker=builder.mark();
    builder.advanceLexer();
    boolean itIs=mCOLON.equals(builder.getTokenType());
    if (dropMarker) {
      marker.drop();
    }
 else {
      marker.rollbackTo();
    }
    return itIs;
  }
 else   if (mGSTRING_SINGLE_BEGIN.equals(builder.getTokenType())) {
    PsiBuilder.Marker marker=builder.mark();
    StringConstructorExpression.parse(builder);
    boolean itIs=mCOLON.equals(builder.getTokenType());
    if (dropMarker) {
      marker.drop();
    }
 else {
      marker.rollbackTo();
    }
    return itIs;
  }
  return false;
}
