{
  final PsiElement element=usage.getElement();
  if (!(element instanceof PsiReferenceExpression))   return;
  PsiReferenceExpression methodRef=(PsiReferenceExpression)element;
  PsiElement parent=methodRef.getParent();
  PsiExpression instanceRef;
  instanceRef=methodRef.getQualifierExpression();
  PsiElement newQualifier;
  final PsiClass memberClass=myMember.getContainingClass();
  if (instanceRef == null || instanceRef instanceof PsiSuperExpression) {
    PsiClass contextClass=PsiTreeUtil.getParentOfType(element,PsiClass.class);
    if (!InheritanceUtil.isInheritorOrSelf(contextClass,memberClass,true)) {
      instanceRef=factory.createExpressionFromText(memberClass.getQualifiedName() + ".this",null);
    }
 else {
      instanceRef=factory.createExpressionFromText("this",null);
    }
    newQualifier=null;
  }
 else {
    newQualifier=factory.createReferenceExpression(memberClass);
  }
  if (mySettings.getNewParametersNumber() > 1) {
    int copyingSafetyLevel=RefactoringUtil.verifySafeCopyExpression(instanceRef);
    if (copyingSafetyLevel == RefactoringUtil.EXPR_COPY_PROHIBITED) {
      String tempVar=RefactoringUtil.createTempVar(instanceRef,parent,true);
      instanceRef=factory.createExpressionFromText(tempVar,null);
    }
  }
  PsiElement anchor=null;
  PsiExpressionList argList=null;
  PsiExpression[] exprs=new PsiExpression[0];
  if (parent instanceof PsiMethodCallExpression) {
    argList=((PsiMethodCallExpression)parent).getArgumentList();
    exprs=argList.getExpressions();
    if (mySettings.isMakeClassParameter()) {
      if (exprs.length > 0) {
        anchor=argList.addBefore(instanceRef,exprs[0]);
      }
 else {
        anchor=argList.add(instanceRef);
      }
    }
  }
  if (mySettings.isMakeFieldParameters()) {
    List<Settings.FieldParameter> parameters=mySettings.getParameterOrderList();
    for (    Settings.FieldParameter fieldParameter : parameters) {
      PsiReferenceExpression fieldRef;
      if (newQualifier != null) {
        fieldRef=(PsiReferenceExpression)factory.createExpressionFromText("a." + fieldParameter.field.getName(),null);
        fieldRef.getQualifierExpression().replace(instanceRef);
      }
 else {
        fieldRef=(PsiReferenceExpression)factory.createExpressionFromText(fieldParameter.field.getName(),null);
      }
      if (anchor != null) {
        anchor=argList.addAfter(fieldRef,anchor);
      }
 else {
        if (exprs.length > 0) {
          anchor=argList.addBefore(fieldRef,exprs[0]);
        }
 else {
          anchor=argList.add(fieldRef);
        }
      }
    }
  }
  if (newQualifier != null) {
    methodRef.getQualifierExpression().replace(newQualifier);
  }
}
