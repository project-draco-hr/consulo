{
  final List<PsiElement> references=new ArrayList<PsiElement>();
  final List<PsiElement> sideEffects=new ArrayList<PsiElement>();
  final boolean[] canCopeWithSideEffects={true};
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      try {
        final PsiElement context=variable instanceof PsiField ? ((PsiField)variable).getContainingClass() : PsiUtil.getVariableCodeBlock(variable,null);
        collectReferences(context,variable,references);
        references.add(variable);
        for (int i=0; i < references.size(); i++) {
          PsiElement element=references.get(i);
          canCopeWithSideEffects[0]&=processUsage(element,variable,sideEffects,SideEffectWarningDialog.CANCEL);
        }
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
);
  final int ret=showSideEffectsWarning(sideEffects,variable,editor,canCopeWithSideEffects[0]);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      try {
        deleteReferences(variable,references,ret);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
);
}
