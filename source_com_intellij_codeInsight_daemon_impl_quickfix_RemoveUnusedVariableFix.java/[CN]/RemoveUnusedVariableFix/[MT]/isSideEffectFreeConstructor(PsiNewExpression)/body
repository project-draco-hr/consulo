{
  final PsiJavaCodeReferenceElement classReference=newExpression.getClassReference();
  final PsiClass aClass=classReference == null ? null : (PsiClass)classReference.resolve();
  final String qualifiedName=aClass == null ? null : aClass.getQualifiedName();
  if (qualifiedName == null)   return false;
  if (ourSideEffectFreeClasses.contains(qualifiedName))   return true;
  final PsiFile file=aClass.getContainingFile();
  final PsiDirectory directory=file.getContainingDirectory();
  final PsiPackage classPackage=directory.getPackage();
  String packageName=classPackage.getQualifiedName();
  if ("java.lang".equals(packageName) || "java.io".equals(packageName)) {
    PsiClass throwableClass=aClass.getManager().findClass("java.lang.Throwable",aClass.getResolveScope());
    if (throwableClass != null && InheritanceUtil.isInheritorOrSelf(aClass,throwableClass,true)) {
      return true;
    }
  }
  return false;
}
