{
  if (ClassUtilCore.isLoadingOfExternalPluginsDisabled()) {
    return IdeaPluginDescriptorImpl.EMPTY_ARRAY;
  }
  final List<IdeaPluginDescriptorImpl> result=new ArrayList<IdeaPluginDescriptorImpl>();
  int pluginsCount=countPlugins(PathManager.getPluginsPath()) + countPlugins(PathManager.getPreInstalledPluginsPath());
  loadDescriptors(PathManager.getPluginsPath(),result,progress,pluginsCount);
  loadDescriptors(PathManager.getPreInstalledPluginsPath(),result,progress,pluginsCount);
  loadDescriptorsFromProperty(result);
  loadDescriptorsFromClassPath(result,progress);
  IdeaPluginDescriptorImpl[] pluginDescriptors=result.toArray(new IdeaPluginDescriptorImpl[result.size()]);
  final Map<PluginId,IdeaPluginDescriptorImpl> idToDescriptorMap=new THashMap<PluginId,IdeaPluginDescriptorImpl>();
  for (  IdeaPluginDescriptorImpl descriptor : pluginDescriptors) {
    idToDescriptorMap.put(descriptor.getPluginId(),descriptor);
  }
  Arrays.sort(pluginDescriptors,getPluginDescriptorComparator(idToDescriptorMap));
  return pluginDescriptors;
}
