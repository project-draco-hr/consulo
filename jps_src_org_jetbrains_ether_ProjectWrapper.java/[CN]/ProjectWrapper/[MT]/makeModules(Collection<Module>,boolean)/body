{
  final Set<Module> modules=new HashSet<Module>();
  final Map<Module,Set<Module>> reversedDependencies=new HashMap<Module,Set<Module>>();
  for (  Module m : myProject.getModules().values()) {
    for (    Module.ModuleDependency mdep : m.getDependencies()) {
      final ClasspathItem cpi=mdep.getItem();
      if (cpi instanceof Module) {
        Set<Module> sm=reversedDependencies.get(cpi);
        if (sm == null) {
          sm=new HashSet<Module>();
          reversedDependencies.put((Module)cpi,sm);
        }
        sm.add(m);
      }
    }
  }
  new Object(){
    public void run(    final Collection<Module> initial){
      if (initial == null)       return;
      for (      Module module : initial) {
        if (modules.contains(module))         continue;
        modules.add(module);
        run(reversedDependencies.get(module));
      }
    }
  }
.run(initial);
  myProject.makeSelected(modules,tests);
  rescan();
}
