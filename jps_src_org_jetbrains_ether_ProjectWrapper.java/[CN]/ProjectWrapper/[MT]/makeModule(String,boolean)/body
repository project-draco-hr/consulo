{
  final Module module=myProject.getModules().get(modName);
  if (module == null) {
    System.err.println("Module \"" + modName + "\" not found in project \""+ myRoot+ "\"");
    return;
  }
  if (structureChanged() && !force) {
    System.out.println("Project \"" + myRoot + "\" structure changed, performing rebuild.");
    rebuild();
    return;
  }
  final ModuleHistory h=myPresent.myModuleHistories.get(modName);
  if (h != null && !h.isDirty() && !force) {
    System.out.println("Module \"" + modName + "\" in project \""+ myRoot+ "\" is up-to-date.");
    return;
  }
  final Set<Module> modules=new HashSet<Module>();
  new Object(){
    public void run(    final Module module){
      if (modules.contains(module))       return;
      modules.add(module);
      for (      Module.ModuleDependency dep : module.getDependencies()) {
        final ClasspathItem cpi=dep.getItem();
        if (cpi instanceof Module) {
          run((Module)cpi);
        }
      }
    }
  }
.run(module);
  myProject.makeSelected(modules);
}
