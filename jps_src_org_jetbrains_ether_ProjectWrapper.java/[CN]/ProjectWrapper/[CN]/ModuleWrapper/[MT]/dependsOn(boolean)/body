{
  if (tests) {
    if (myTestDependsOn != null) {
      return myTestDependsOn;
    }
  }
 else   if (myDependsOn != null) {
    return myDependsOn;
  }
  final List<ClasspathItemWrapper> result=new ArrayList<ClasspathItemWrapper>();
  for (  ClasspathItem cpi : myModule.getClasspath(ClasspathKind.compile(tests))) {
    if (cpi instanceof Module) {
      result.add(getModule(((Module)cpi).getName()));
    }
 else     if (cpi instanceof Library) {
      result.add(new LibraryWrapper((Library)cpi));
    }
 else {
      result.add(new GenericClasspathItemWrapper(cpi));
    }
  }
  if (tests) {
    myTestDependsOn=result;
  }
 else {
    myDependsOn=result;
  }
  return result;
}
