{
  writeln(w,"Module:" + myName);
  writeln(w,"SourceProperties:");
  mySource.write(w);
  writeln(w,"TestProperties:");
  myTest.write(w);
  writeln(w,"Excludes:");
  writeln(w,myExcludes,null);
  writeln(w,"Libraries:");
  writeln(w,myLibraries);
  writeln(w,"Dependencies:");
  final List<ClasspathItemWrapper> weakened=new ArrayList<ClasspathItemWrapper>();
  for (  ClasspathItemWrapper cpiw : dependsOn()) {
    if (cpiw instanceof ModuleWrapper) {
      weakened.add(new WeakClasspathItemWrapper((ModuleWrapper)cpiw));
    }
 else     if (cpiw instanceof LibraryWrapper) {
      weakened.add(new WeakClasspathItemWrapper((LibraryWrapper)cpiw));
    }
 else     weakened.add(cpiw);
  }
  writeln(w,weakened);
}
