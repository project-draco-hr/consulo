{
  if (targetElement.getUserData(EVALUATION_IN_PROCESS) != null) {
    return new CachedValueProvider.Result<XmlEntityDecl>(null,targetElement);
  }
  try {
    targetElement.putUserData(EVALUATION_IN_PROCESS,"");
    final List<PsiElement> deps=new ArrayList<PsiElement>();
    final XmlEntityDecl[] result=new XmlEntityDecl[]{null};
    PsiElementProcessor processor=new PsiElementProcessor(){
      public boolean execute(      PsiElement element){
        if (element instanceof XmlDoctype) {
          XmlDoctype xmlDoctype=(XmlDoctype)element;
          final String dtdUri=xmlDoctype.getDtdUri();
          if (dtdUri != null) {
            final XmlFile xmlFile=XmlUtil.findNamespace(XmlUtil.getContainingFile(element),dtdUri);
            if (xmlFile != null) {
              if (xmlFile != targetElement) {
                deps.add(xmlFile);
                if (!XmlUtil.processXmlElements(xmlFile,this,true))                 return false;
              }
            }
          }
          final XmlMarkupDecl markupDecl=xmlDoctype.getMarkupDecl();
          if (markupDecl != null) {
            if (!XmlUtil.processXmlElements(markupDecl,this,true))             return false;
          }
        }
 else         if (element instanceof XmlEntityDecl) {
          XmlEntityDecl entityDecl=(XmlEntityDecl)element;
          final String declName=entityDecl.getName();
          if (declName.equals(entityName)) {
            result[0]=entityDecl;
            return false;
          }
        }
        return true;
      }
    }
;
    deps.add(targetElement);
    boolean notfound=PsiTreeUtil.processElements(targetElement,processor);
    if (notfound) {
      if (contextFile != targetElement && contextFile != null && contextFile.isValid()) {
        notfound=PsiTreeUtil.processElements(contextFile,processor);
      }
    }
    if (notfound && targetElement instanceof XmlFile && deps.size() == 1 && ((XmlFile)targetElement).getFileType() != StdFileTypes.DTD) {
      XmlDocument document=((XmlFile)targetElement).getDocument();
      final XmlTag rootTag=document.getRootTag();
      if (rootTag != null && document.getUserData(DISABLE_ENTITY_EXPAND) == null) {
        final XmlElementDescriptor descriptor=rootTag.getDescriptor();
        if (descriptor != null && !(descriptor instanceof AnyXmlElementDescriptor)) {
          PsiElement element=descriptor.getDeclaration();
          final PsiFile containingFile=element != null ? element.getContainingFile() : null;
          final XmlFile descriptorFile=containingFile instanceof XmlFile ? (XmlFile)containingFile : null;
          if (descriptorFile != null && !descriptorFile.getName().equals(((XmlFile)targetElement).getName() + ".dtd")) {
            deps.add(descriptorFile);
            XmlUtil.processXmlElements(descriptorFile,processor,true);
          }
        }
      }
    }
    return new CachedValueProvider.Result<XmlEntityDecl>(result[0],ArrayUtil.toObjectArray(deps));
  }
  finally {
    targetElement.putUserData(EVALUATION_IN_PROCESS,null);
  }
}
