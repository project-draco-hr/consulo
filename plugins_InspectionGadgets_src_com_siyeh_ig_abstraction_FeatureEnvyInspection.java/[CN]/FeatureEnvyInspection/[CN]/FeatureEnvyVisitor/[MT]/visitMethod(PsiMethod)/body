{
  if (ignoreTestCases) {
    final PsiClass containingClass=method.getContainingClass();
    if (containingClass != null && TestFrameworks.getInstance().isTestClass(containingClass)) {
      return;
    }
    if (TestUtils.isJUnitTestMethod(method)) {
      return;
    }
  }
  final PsiIdentifier nameIdentifier=method.getNameIdentifier();
  if (nameIdentifier == null) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  final ClassAccessVisitor visitor=new ClassAccessVisitor(containingClass);
  method.accept(visitor);
  final Set<PsiClass> overaccessedClasses=visitor.getOveraccessedClasses();
  for (  PsiClass aClass : overaccessedClasses) {
    registerError(nameIdentifier,aClass);
  }
}
