{
  if (PlatformDataKeys.NAVIGATABLE.is(dataId)) {
    TreePath path=myTree.getSelectionPath();
    if (path == null) {
      return null;
    }
    DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
    Object userObject=node.getUserObject();
    if (!(userObject instanceof NodeDescriptor)) {
      return null;
    }
    Object element=((NodeDescriptor)userObject).getElement();
    if (!(element instanceof TodoFileNode || element instanceof TodoItemNode)) {
      return null;
    }
    TodoItemNode pointer=myTodoTreeBuilder.getFirstPointerForElement(element);
    if (pointer != null) {
      return new OpenFileDescriptor(myProject,pointer.getValue().getTodoItem().getFile().getVirtualFile(),pointer.getValue().getRangeMarker().getStartOffset());
    }
 else {
      return null;
    }
  }
 else   if (PlatformDataKeys.VIRTUAL_FILE.is(dataId)) {
    final PsiFile file=getSelectedFile();
    return file != null ? file.getVirtualFile() : null;
  }
 else   if (LangDataKeys.PSI_ELEMENT.is(dataId)) {
    return getSelectedElement();
  }
 else   if (PlatformDataKeys.VIRTUAL_FILE_ARRAY.is(dataId)) {
    PsiFile file=getSelectedFile();
    if (file != null) {
      return new VirtualFile[]{file.getVirtualFile()};
    }
 else {
      return VirtualFile.EMPTY_ARRAY;
    }
  }
 else   if (PlatformDataKeys.HELP_ID.is(dataId)) {
    return "find.todoList";
  }
  return super.getData(dataId);
}
