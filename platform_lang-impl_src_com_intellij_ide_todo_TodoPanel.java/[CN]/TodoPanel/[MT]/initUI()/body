{
  UIUtil.setLineStyleAngled(myTree);
  myTree.setShowsRootHandles(true);
  myTree.setRootVisible(false);
  myTree.setCellRenderer(new TodoCompositeRenderer());
  EditSourceOnDoubleClickHandler.install(myTree);
  new TreeSpeedSearch(myTree);
  DefaultActionGroup group=new DefaultActionGroup();
  group.add(ActionManager.getInstance().getAction(IdeActions.ACTION_EDIT_SOURCE));
  group.addSeparator();
  group.add(ActionManager.getInstance().getAction(IdeActions.GROUP_VERSION_CONTROLS));
  PopupHandler.installPopupHandler(myTree,group,ActionPlaces.TODO_VIEW_POPUP,ActionManager.getInstance());
  myTree.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      if (!e.isConsumed() && KeyEvent.VK_ENTER == e.getKeyCode()) {
        TreePath path=myTree.getSelectionPath();
        if (path == null) {
          return;
        }
        final Object userObject=((DefaultMutableTreeNode)path.getLastPathComponent()).getUserObject();
        NodeDescriptor desciptor=userObject instanceof NodeDescriptor ? (NodeDescriptor)userObject : null;
        if (!(desciptor instanceof TodoItemNode)) {
          return;
        }
        OpenSourceUtil.openSourcesFrom(DataManager.getInstance().getDataContext(TodoPanel.this),false);
      }
    }
  }
);
  myUsagePreviewPanel=new UsagePreviewPanel(myProject,new UsageViewPresentation());
  Disposer.register(this,myUsagePreviewPanel);
  myUsagePreviewPanel.setVisible(mySettings.isShowPreview());
  setContent(createCenterComponent());
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    @Override public void valueChanged(    final TreeSelectionEvent e){
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          if (myUsagePreviewPanel.isVisible()) {
            updatePreviewPanel();
          }
        }
      }
);
    }
  }
);
  JPanel toolBarPanel=new JPanel(new GridLayout());
  DefaultActionGroup leftGroup=new DefaultActionGroup();
  leftGroup.add(new PreviousOccurenceToolbarAction(myOccurenceNavigator));
  leftGroup.add(new NextOccurenceToolbarAction(myOccurenceNavigator));
  leftGroup.add(new ContextHelpAction("find.todoList"));
  toolBarPanel.add(ActionManager.getInstance().createActionToolbar(ActionPlaces.TODO_VIEW_TOOLBAR,leftGroup,false).getComponent());
  DefaultActionGroup rightGroup=new DefaultActionGroup();
  AnAction expandAllAction=CommonActionsManager.getInstance().createExpandAllAction(myTreeExpander,this);
  rightGroup.add(expandAllAction);
  AnAction collapseAllAction=CommonActionsManager.getInstance().createCollapseAllAction(myTreeExpander,this);
  rightGroup.add(collapseAllAction);
  if (!myCurrentFileMode) {
    MyShowModulesAction showModulesAction=new MyShowModulesAction();
    showModulesAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_M,SystemInfo.isMac ? InputEvent.META_MASK : InputEvent.CTRL_MASK)),myTree);
    rightGroup.add(showModulesAction);
    MyShowPackagesAction showPackagesAction=new MyShowPackagesAction();
    showPackagesAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_P,SystemInfo.isMac ? InputEvent.META_MASK : InputEvent.CTRL_MASK)),myTree);
    rightGroup.add(showPackagesAction);
    MyFlattenPackagesAction flattenPackagesAction=new MyFlattenPackagesAction();
    flattenPackagesAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F,SystemInfo.isMac ? InputEvent.META_MASK : InputEvent.CTRL_MASK)),myTree);
    rightGroup.add(flattenPackagesAction);
  }
  MyAutoScrollToSourceHandler autoScrollToSourceHandler=new MyAutoScrollToSourceHandler();
  autoScrollToSourceHandler.install(myTree);
  rightGroup.add(autoScrollToSourceHandler.createToggleAction());
  SetTodoFilterAction setTodoFilterAction=new SetTodoFilterAction(myProject,mySettings,new Consumer<TodoFilter>(){
    @Override public void consume(    TodoFilter todoFilter){
      setTodoFilter(todoFilter);
    }
  }
);
  rightGroup.add(setTodoFilterAction);
  rightGroup.add(new MyPreviewAction());
  toolBarPanel.add(ActionManager.getInstance().createActionToolbar(ActionPlaces.TODO_VIEW_TOOLBAR,rightGroup,false).getComponent());
  setToolbar(toolBarPanel);
}
