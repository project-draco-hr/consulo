{
  final PsiFile containingFile=operands[0].getContainingFile();
  processLiteralExpressionInjections(new PairProcessor<Language,List<Trinity<PsiLanguageInjectionHost,InjectedLanguage,TextRange>>>(){
    public boolean process(    final Language language,    List<Trinity<PsiLanguageInjectionHost,InjectedLanguage,TextRange>> list){
      CustomLanguageInjector.registerInjection(language,list,containingFile,registrar);
      return true;
    }
  }
,operands);
}
