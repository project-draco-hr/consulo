{
  final PsiFile containingFile=operands[0].getContainingFile();
  PsiLiteralExpression literal=null;
  for (  PsiElement operand : operands) {
    if (CustomLanguageInjector.isStringLiteral(operand)) {
      literal=(PsiLiteralExpression)operand;
      break;
    }
  }
  processLiteralExpressionInjections(literal,new PairProcessor<Language,List<Trinity<PsiLanguageInjectionHost,InjectedLanguage,TextRange>>>(){
    public boolean process(    final Language language,    List<Trinity<PsiLanguageInjectionHost,InjectedLanguage,TextRange>> list){
      CustomLanguageInjector.registerInjection(language,list,containingFile,registrar);
      return true;
    }
  }
);
}
