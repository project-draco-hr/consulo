{
  PsiElement element=PsiUtil.deparenthesizeExpression(originalExpression);
  if (element == null) {
    return null;
  }
  PsiElementFactory factory=JavaPsiFacade.getInstance(originalExpression.getProject()).getElementFactory();
  PsiTypeCastExpression typeCast=(PsiTypeCastExpression)factory.createExpressionFromText("(Type)value",null);
  typeCast=(PsiTypeCastExpression)CodeStyleManager.getInstance(project).reformat(typeCast);
  typeCast.getCastType().replace(factory.createTypeElement(type));
  if (element instanceof PsiConditionalExpression) {
    PsiConditionalExpression expression=(PsiConditionalExpression)element.copy();
    PsiExpression thenE=expression.getThenExpression();
    PsiExpression elseE=expression.getElseExpression();
    PsiType thenType=thenE == null ? null : thenE.getType();
    PsiType elseType=elseE == null ? null : elseE.getType();
    if (elseType != null && thenType != null) {
      boolean replaceThen=!TypeConversionUtil.isAssignable(type,thenType);
      boolean replaceElse=!TypeConversionUtil.isAssignable(type,elseType);
      if (replaceThen != replaceElse) {
        if (replaceThen) {
          typeCast.getOperand().replace(thenE);
          thenE.replace(typeCast);
        }
 else {
          typeCast.getOperand().replace(elseE);
          elseE.replace(typeCast);
        }
        return expression;
      }
    }
  }
  typeCast.getOperand().replace(element);
  return typeCast;
}
