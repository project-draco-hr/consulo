{
  final PsiFile psiFile=atCaret.getContainingFile();
  final RangeMarker rangeMarker=createRangeMarker(atCaret);
  if (myFirstErrorOffset != Integer.MAX_VALUE) {
    editor.getCaretModel().moveToOffset(myFirstErrorOffset);
    reformat(atCaret);
    return;
  }
  reformat(atCaret);
  commit(editor);
  atCaret=GroovyRefactoringUtil.findElementInRange(((GroovyFileBase)psiFile),rangeMarker.getStartOffset(),rangeMarker.getEndOffset(),atCaret.getClass());
  if (atCaret != null && new GroovyPlainEnterProcessor().doEnter(editor,atCaret,isModified(editor)))   return;
  if (!isModified(editor)) {
    plainEnter(editor);
  }
 else {
    if (myFirstErrorOffset == Integer.MAX_VALUE) {
      editor.getCaretModel().moveToOffset(rangeMarker.getEndOffset());
    }
 else {
      editor.getCaretModel().moveToOffset(myFirstErrorOffset);
    }
  }
}
