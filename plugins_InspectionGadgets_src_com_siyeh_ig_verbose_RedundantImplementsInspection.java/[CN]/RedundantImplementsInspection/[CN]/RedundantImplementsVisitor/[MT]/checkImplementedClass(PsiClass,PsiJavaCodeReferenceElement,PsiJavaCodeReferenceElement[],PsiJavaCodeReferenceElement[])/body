{
  for (int j=0; j < extendsElements.length; j++) {
    final PsiJavaCodeReferenceElement extendsElement=extendsElements[j];
    final PsiElement extendsReferent=extendsElement.resolve();
    if (extendsReferent != null && extendsReferent instanceof PsiClass) {
      final PsiClass extendedClass=(PsiClass)extendsReferent;
      if (extendedClass.isInheritor(implementedClass,false)) {
        registerError(implementsElement);
        return;
      }
    }
  }
  for (int j=0; j < implementsElements.length; j++) {
    final PsiJavaCodeReferenceElement testImplementElement=implementsElements[j];
    if (!testImplementElement.equals(implementsElement)) {
      final PsiElement implementsReferent=testImplementElement.resolve();
      if (implementsReferent != null && implementsReferent instanceof PsiClass) {
        final PsiClass testImplementedClass=(PsiClass)implementsReferent;
        if (testImplementedClass.isInheritor(implementedClass,false)) {
          registerError(implementsElement);
          return;
        }
      }
    }
  }
}
