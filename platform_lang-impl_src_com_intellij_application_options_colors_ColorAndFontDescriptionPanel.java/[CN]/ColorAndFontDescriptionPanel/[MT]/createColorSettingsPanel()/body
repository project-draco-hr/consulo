{
  JPanel panel=new JPanel();
  panel.setLayout(new GridBagLayout());
  GridBagConstraints gc=new GridBagConstraints();
  gc.fill=GridBagConstraints.HORIZONTAL;
  gc.weightx=0;
  gc.weighty=1;
  gc.gridwidth=1;
  gc.gridx=0;
  gc.gridy=0;
  panel.add(myCbForeground,gc);
  gc.gridy++;
  panel.add(myCbBackground,gc);
  gc.gridy++;
  panel.add(myCbErrorStripe,gc);
  gc.gridy++;
  panel.add(myCbEffects,gc);
  gc.gridy++;
  gc.insets=JBUI.insets(0,10,0,0);
  gc.weighty=0;
  panel.add(myEffectsCombo,gc);
  gc.gridx=1;
  gc.gridy=0;
  panel.add(myForegroundChooser,gc);
  gc.gridy++;
  panel.add(myBackgroundChooser,gc);
  gc.gridy++;
  panel.add(myErrorStripeColorChooser,gc);
  gc.gridy+=2;
  panel.add(myEffectsColorChooser,gc);
  gc.gridx=2;
  gc.gridy=0;
  gc.weightx=1;
  panel.add(new TailPanel(),gc);
  gc.gridy++;
  panel.add(new TailPanel(),gc);
  gc.gridy++;
  panel.add(new TailPanel(),gc);
  gc.gridy++;
  panel.add(new TailPanel(),gc);
  myEffectsColorChooser.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (myActionListener != null) {
        myActionListener.actionPerformed(e);
      }
    }
  }
);
  myForegroundChooser.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (myActionListener != null) {
        myActionListener.actionPerformed(e);
      }
    }
  }
);
  myCbForeground.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myForegroundChooser.setEnabled(myCbForeground.isSelected());
      if (myActionListener != null) {
        myActionListener.actionPerformed(e);
      }
    }
  }
);
  myBackgroundChooser.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (myActionListener != null) {
        myActionListener.actionPerformed(e);
      }
    }
  }
);
  myErrorStripeColorChooser.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (myActionListener != null) {
        myActionListener.actionPerformed(e);
      }
    }
  }
);
  myCbBackground.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myBackgroundChooser.setEnabled(myCbBackground.isSelected());
      if (myActionListener != null) {
        myActionListener.actionPerformed(e);
      }
    }
  }
);
  myCbErrorStripe.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myErrorStripeColorChooser.setEnabled(myCbErrorStripe.isSelected());
      if (myActionListener != null) {
        myActionListener.actionPerformed(e);
      }
    }
  }
);
  myCbEffects.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      boolean checked=myCbEffects.isSelected();
      myEffectsColorChooser.setEnabled(checked);
      myEffectsCombo.setEnabled(checked);
      if (myActionListener != null) {
        myActionListener.actionPerformed(e);
      }
    }
  }
);
  myEffectsCombo.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (!updatingEffects) {
        if (myActionListener != null) {
          myActionListener.actionPerformed(e);
        }
      }
    }
  }
);
  return panel;
}
