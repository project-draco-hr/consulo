{
  if (description != null) {
    int fontType=Font.PLAIN;
    if (myCbBold.isSelected())     fontType+=Font.BOLD;
    if (myCbItalic.isSelected())     fontType+=Font.ITALIC;
    description.setFontType(fontType);
    description.setForegroundChecked(myCbForeground.isSelected());
    description.setForegroundColor(myForegroundChooser.getSelectedColor());
    description.setBackgroundChecked(myCbBackground.isSelected());
    description.setBackgroundColor(myBackgroundChooser.getSelectedColor());
    description.setErrorStripeChecked(myCbErrorStripe.isSelected());
    description.setErrorStripeColor(myErrorStripeColorChooser.getSelectedColor());
    description.setEffectsColorChecked(myCbEffects.isSelected());
    description.setEffectColor(myEffectsColorChooser.getSelectedColor());
    if (myEffectsCombo.isEnabled()) {
      Object effectType=myEffectsCombo.getModel().getSelectedItem();
      if (BORDERED_EFFECT.equals(effectType)) {
        description.setEffectType(EffectType.BOXED);
      }
 else       if (UNDERWAVED_EFFECT.equals(effectType)) {
        description.setEffectType(EffectType.WAVE_UNDERSCORE);
      }
 else       if (UNDERSCORED_EFFECT.equals(effectType)) {
        description.setEffectType(EffectType.LINE_UNDERSCORE);
      }
 else       if (BOLD_UNDERSCORED_EFFECT.equals(effectType)) {
        description.setEffectType(EffectType.BOLD_LINE_UNDERSCORE);
      }
 else       if (STRIKEOUT_EFFECT.equals(effectType)) {
        description.setEffectType(EffectType.STRIKEOUT);
      }
 else {
        LOG.assertTrue(false);
      }
    }
    description.apply(scheme);
  }
}
