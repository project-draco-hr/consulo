{
  final SVNStatusClient client=myVcs.createStatusClient();
  try {
    final SVNStatus svnStatus=client.doStatus(file,true);
    if (svnStatus == null) {
      final SVNInfo info=myVcs.createWCClient().doInfo(file,SVNRevision.HEAD);
      if (info == null || info.getURL() == null) {
        LOG.info("No SVN status returned for " + file.getPath());
        return defaultResult();
      }
      return createResult(info.getRevision(),true,false);
    }
    final boolean exists=!SVNStatusType.STATUS_DELETED.equals(svnStatus.getRemoteContentsStatus()) && !SVNStatusType.STATUS_DELETED.equals(svnStatus.getRemoteNodeStatus());
    if (!exists) {
      final LatestExistentSearcher searcher=new LatestExistentSearcher(myVcs,svnStatus.getURL());
      final long revision=searcher.getDeletionRevision();
      return createResult(SVNRevision.create(revision),exists,false);
    }
    final SVNRevision remoteRevision=svnStatus.getRemoteRevision();
    if (remoteRevision != null) {
      return createResult(remoteRevision,exists,false);
    }
    return createResult(svnStatus.getRevision(),exists,false);
  }
 catch (  SVNException e) {
    LOG.debug(e);
    return defaultResult();
  }
}
