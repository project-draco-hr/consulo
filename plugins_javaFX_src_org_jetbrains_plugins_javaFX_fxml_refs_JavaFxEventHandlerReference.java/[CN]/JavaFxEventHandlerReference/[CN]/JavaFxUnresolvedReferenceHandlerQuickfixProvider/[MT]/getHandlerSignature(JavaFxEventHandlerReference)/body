{
  final XmlAttributeValue element=ref.getElement();
  String canonicalText=JavaFxCommonClassNames.JAVAFX_EVENT;
  final PsiElement parent=element.getParent();
  if (parent instanceof XmlAttribute) {
    final XmlAttribute xmlAttribute=(XmlAttribute)parent;
    final Project project=element.getProject();
    final PsiField handlerField=ref.myCurrentTagClass.findFieldByName(xmlAttribute.getName(),true);
    if (handlerField != null) {
      final PsiClassType classType=JavaFxPsiUtil.getPropertyClassType(handlerField);
      if (classType != null) {
        final PsiClass eventHandlerClass=JavaPsiFacade.getInstance(project).findClass(JavaFxCommonClassNames.JAVAFX_EVENT_EVENT_HANDLER,GlobalSearchScope.allScope(project));
        final PsiTypeParameter[] typeParameters=eventHandlerClass != null ? eventHandlerClass.getTypeParameters() : null;
        if (typeParameters != null && typeParameters.length == 1) {
          final PsiTypeParameter typeParameter=typeParameters[0];
          final PsiSubstitutor substitutor=TypeConversionUtil.getSuperClassSubstitutor(eventHandlerClass,classType);
          final PsiType eventType=substitutor.substitute(typeParameter);
          if (eventType != null) {
            canonicalText=eventType.getCanonicalText();
          }
        }
      }
    }
  }
  return "public void " + element.getValue().substring(1) + "("+ canonicalText+ " e)";
}
