{
  if (PropertiesComponent.getInstance().getBoolean(TabbedContent.SPLIT_PROPERTY_PREFIX + groupPrefix,false)) {
    final Content content=ContentFactory.SERVICE.getInstance().createContent(contentComponent,groupPrefix + ": " + tabName,true);
    content.putUserData(Content.TABBED_CONTENT_KEY,Boolean.TRUE);
    content.putUserData(Content.TAB_GROUP_NAME_KEY,groupPrefix);
    addContent(manager,content,select);
    return;
  }
  TabbedContent tabbedContent=null;
  for (  Content content : manager.getContents()) {
    if (content instanceof TabbedContent && content.getTabName().startsWith(groupPrefix + ": ")) {
      tabbedContent=(TabbedContent)content;
      break;
    }
  }
  if (tabbedContent == null) {
    final Disposable disposable=Disposer.newDisposable();
    tabbedContent=new TabbedContentImpl(contentComponent,tabName,true,groupPrefix);
    ContentsUtil.addOrReplaceContent(manager,tabbedContent,select);
    Disposer.register(tabbedContent,disposable);
  }
 else {
    for (    Pair<String,JComponent> tab : new ArrayList<Pair<String,JComponent>>(tabbedContent.getTabs())) {
      if (Comparing.equal(tab.second,contentComponent)) {
        tabbedContent.removeContent(tab.second);
      }
    }
    if (select) {
      manager.setSelectedContent(tabbedContent,true,true);
    }
    tabbedContent.addContent(contentComponent,tabName,true);
  }
  if (childDisposable != null) {
    Disposer.register(tabbedContent,childDisposable);
  }
}
