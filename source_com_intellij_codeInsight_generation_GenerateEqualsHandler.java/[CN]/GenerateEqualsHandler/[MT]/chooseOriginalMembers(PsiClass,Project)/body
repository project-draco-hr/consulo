{
  myEqualsFields=null;
  myHashCodeFields=null;
  myNonNullFields=PsiField.EMPTY_ARRAY;
  GlobalSearchScope scope=aClass.getResolveScope();
  final PsiMethod equalsMethod=GenerateEqualsHelper.findMethod(aClass,GenerateEqualsHelper.getEqualsSignature(project,scope));
  final PsiMethod hashCodeMethod=GenerateEqualsHelper.findMethod(aClass,GenerateEqualsHelper.getHashCodeSignature());
  boolean needEquals=equalsMethod == null;
  boolean needHashCode=hashCodeMethod == null;
  if (!needEquals && !needHashCode) {
    final String classText=aClass instanceof PsiAnonymousClass ? "this anonymous class" : "class " + aClass.getQualifiedName();
    String text="Methods 'boolean equals(Object)' and 'int hashCode()' are already defined\n" + "for " + classText + ". Do you want to delete them and proceed?";
    if (Messages.showYesNoDialog(project,text,"Generate equals() and hashCode()",Messages.getQuestionIcon()) == DialogWrapper.OK_EXIT_CODE) {
      if (!ApplicationManager.getApplication().runWriteAction(new Computable<Boolean>(){
        public Boolean compute(){
          try {
            equalsMethod.delete();
            hashCodeMethod.delete();
            return Boolean.TRUE;
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
            return Boolean.FALSE;
          }
        }
      }
).booleanValue()) {
        return null;
      }
 else {
        needEquals=needHashCode=true;
      }
    }
 else {
      return null;
    }
  }
  GenerateEqualsWizard wizard=new GenerateEqualsWizard(project,aClass,needEquals,needHashCode);
  wizard.show();
  if (!wizard.isOK())   return null;
  myEqualsFields=wizard.getEqualsFields();
  myHashCodeFields=wizard.getHashCodeFields();
  myNonNullFields=wizard.getNonNullFields();
  return DUMMY_RESULT;
}
