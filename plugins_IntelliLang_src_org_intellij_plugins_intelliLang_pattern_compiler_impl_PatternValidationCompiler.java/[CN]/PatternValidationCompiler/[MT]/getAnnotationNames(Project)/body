{
synchronized (myAnnotations) {
    myAnnotations.clear();
    final Pair<String,? extends Set<String>> patternAnnotation=Configuration.getInstance().getPatternAnnotationPair();
    final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
    final PsiClass psiClass=JavaPsiFacade.getInstance(project).findClass(patternAnnotation.first,scope);
    if (psiClass == null) {
      return ArrayUtil.EMPTY_STRING_ARRAY;
    }
    final Query<PsiMember> query=AnnotatedMembersSearch.search(psiClass,GlobalSearchScope.allScope(project));
    query.forEach(new Processor<PsiMember>(){
      public boolean process(      PsiMember psiMember){
        if (psiMember instanceof PsiClass) {
          final PsiClass clazz=(PsiClass)psiMember;
          if (clazz.isAnnotationType()) {
            final PsiAnnotation annotation=AnnotationUtil.findAnnotation(clazz,patternAnnotation.second);
            if (annotation != null) {
              final String s=AnnotationUtilEx.calcAnnotationValue(annotation,"value");
              if (s != null) {
                myAnnotations.put(clazz.getQualifiedName(),s);
              }
            }
          }
        }
        return true;
      }
    }
);
    myAnnotations.put(patternAnnotation.first,null);
    final Set<String> names=myAnnotations.keySet();
    return ArrayUtil.toStringArray(names);
  }
}
