{
  final PsiClass parentClass=queryParameters.getPsiClass();
  final PsiMethod method=queryParameters.getMethod();
  HierarchicalMethodSignature signature=PsiSuperMethodImplUtil.getHierarchicalMethodSignature(parentClass,method);
  if (signature == null)   return true;
  final boolean checkBases=queryParameters.isCheckBases();
  final boolean allowStaticMethod=queryParameters.isAllowStaticMethod();
  PsiMethod hisMethod=signature.getMethod();
  if (checkBases) {
    for (    HierarchicalMethodSignature superSignature : signature.getSuperSignatures()) {
      if (suits(superSignature.getMethod(),method,allowStaticMethod)) {
        if (!consumer.process(superSignature))         return false;
      }
    }
  }
 else {
    if (parentClass.equals(hisMethod.getContainingClass())) {
      return consumer.process(signature);
    }
  }
  return true;
}
