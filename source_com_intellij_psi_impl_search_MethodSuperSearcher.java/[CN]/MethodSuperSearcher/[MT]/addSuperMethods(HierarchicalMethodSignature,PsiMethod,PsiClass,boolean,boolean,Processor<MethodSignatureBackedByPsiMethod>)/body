{
  PsiMethod signatureMethod=signature.getMethod();
  PsiClass hisClass=signatureMethod.getContainingClass();
  if (InheritanceUtil.isInheritorOrSelf(parentClass,hisClass,true)) {
    if (isAcceptable(signatureMethod,method,allowStaticMethod)) {
      if (parentClass.equals(hisClass) || checkBases) {
        return consumer.process(signature);
      }
 else {
        return true;
      }
    }
  }
  for (  HierarchicalMethodSignature superSignature : signature.getSuperSignatures()) {
    addSuperMethods(superSignature,method,parentClass,allowStaticMethod,checkBases,consumer);
  }
  return true;
}
