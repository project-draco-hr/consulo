{
  super(new BorderLayout());
  myProject=project;
  myCapableOfExcludingChanges=capableOfExcludingChanges;
  myViewer=new ChangesTreeList<Change>(myProject,changes,capableOfExcludingChanges,highlightProblems){
    protected DefaultTreeModel buildTreeModel(    final List<Change> changes){
      TreeModelBuilder builder=new TreeModelBuilder(myProject,false);
      return builder.buildModel(changes);
    }
    protected List<Change> getSelectedObjects(    final ChangesBrowserNode node){
      return node.getAllChangesUnder();
    }
    @Nullable protected Change getLeadSelectedObject(    final ChangesBrowserNode node){
      final Object o=node.getUserObject();
      if (o instanceof Change) {
        return (Change)o;
      }
      return null;
    }
  }
;
  myViewer.setDoubleClickHandler(new Runnable(){
    public void run(){
      showDiff();
    }
  }
);
  setInitialSelection(changeLists,changes,initialListSelection);
  rebuildList();
  myListPanel=new JPanel(new BorderLayout());
  myListPanel.add(myViewer,BorderLayout.CENTER);
  JComponent separator=SeparatorFactory.createSeparator(VcsBundle.message("commit.dialog.changed.files.label"),myViewer);
  myListPanel.add(separator,BorderLayout.NORTH);
  add(myListPanel,BorderLayout.CENTER);
  myHeaderPanel=new JPanel(new BorderLayout());
  myHeaderPanel.add(createToolbar(),BorderLayout.CENTER);
  add(myHeaderPanel,BorderLayout.NORTH);
  myViewer.installPopupHandler(myToolBarGroup);
}
