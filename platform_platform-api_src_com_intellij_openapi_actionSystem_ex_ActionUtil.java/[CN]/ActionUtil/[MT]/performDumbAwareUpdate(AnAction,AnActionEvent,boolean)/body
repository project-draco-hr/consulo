{
  final Presentation presentation=e.getPresentation();
  final Boolean wasEnabledBefore=(Boolean)presentation.getClientProperty(WAS_ENABLED_BEFORE_DUMB);
  final boolean dumbMode=isDumbMode(e.getProject());
  if (wasEnabledBefore != null && !dumbMode) {
    presentation.putClientProperty(WAS_ENABLED_BEFORE_DUMB,null);
    presentation.setEnabled(wasEnabledBefore.booleanValue());
    presentation.setVisible(true);
  }
  final boolean enabledBeforeUpdate=presentation.isEnabled();
  final boolean notAllowed=dumbMode && !action.isDumbAware();
  if (insidePerformDumbAwareUpdate++ == 0) {
    ActionPauses.STAT.started();
  }
  try {
    boolean enabled=checkModuleExtensions(action,e);
    if (enabled && action instanceof ActionGroup) {
      presentation.setEnabledAndVisible(true);
    }
 else     if (!enabled) {
      presentation.setEnabledAndVisible(enabled);
    }
    if (beforeActionPerformed) {
      action.beforeActionPerformedUpdate(e);
    }
 else {
      action.update(e);
    }
    presentation.putClientProperty(WOULD_BE_ENABLED_IF_NOT_DUMB_MODE,notAllowed && presentation.isEnabled());
    presentation.putClientProperty(WOULD_BE_VISIBLE_IF_NOT_DUMB_MODE,notAllowed && presentation.isVisible());
  }
 catch (  IndexNotReadyException e1) {
    if (notAllowed) {
      return true;
    }
    throw e1;
  }
 finally {
    if (--insidePerformDumbAwareUpdate == 0) {
      ActionPauses.STAT.finished(presentation.getText() + " action update (" + action.getClass()+ ")");
    }
    if (notAllowed) {
      if (wasEnabledBefore == null) {
        presentation.putClientProperty(WAS_ENABLED_BEFORE_DUMB,enabledBeforeUpdate);
      }
      presentation.setEnabled(false);
    }
  }
  return false;
}
