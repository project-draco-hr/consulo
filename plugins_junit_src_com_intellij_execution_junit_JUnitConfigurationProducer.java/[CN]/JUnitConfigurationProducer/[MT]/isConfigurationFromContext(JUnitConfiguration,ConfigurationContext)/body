{
  if (PatternConfigurationProducer.isMultipleElementsSelected(context)) {
    return false;
  }
  final RunConfiguration predefinedConfiguration=context.getOriginalConfiguration(JUnitConfigurationType.getInstance());
  Location location=JavaExecutionUtil.stepIntoSingleClass(context.getLocation());
  final PsiElement element=location.getPsiElement();
  final PsiClass testClass=JUnitUtil.getTestClass(element);
  final PsiMethod testMethod=JUnitUtil.getTestMethod(element,false);
  final PsiJavaPackage testPackage;
  if (element instanceof PsiJavaPackage) {
    testPackage=(PsiJavaPackage)element;
  }
 else   if (element instanceof PsiDirectory) {
    testPackage=JavaDirectoryService.getInstance().getPackage(((PsiDirectory)element));
  }
 else {
    testPackage=null;
  }
  RunnerAndConfigurationSettings template=RunManager.getInstance(location.getProject()).getConfigurationTemplate(getConfigurationFactory());
  final Module predefinedModule=((JUnitConfiguration)template.getConfiguration()).getConfigurationModule().getModule();
  final String vmParameters=predefinedConfiguration instanceof JUnitConfiguration ? ((JUnitConfiguration)predefinedConfiguration).getVMParameters() : null;
  if (vmParameters != null && !Comparing.strEqual(vmParameters,unitConfiguration.getVMParameters()))   return false;
  final TestObject testobject=unitConfiguration.getTestObject();
  if (testobject != null) {
    if (testobject.isConfiguredByElement(unitConfiguration,testClass,testMethod,testPackage)) {
      final Module configurationModule=unitConfiguration.getConfigurationModule().getModule();
      if (Comparing.equal(location.getModule(),configurationModule))       return true;
      if (Comparing.equal(predefinedModule,configurationModule)) {
        return true;
      }
    }
  }
  return false;
}
