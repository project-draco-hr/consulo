{
  myProject=project;
  myVcsManager=ProjectLevelVcsManager.getInstance(project);
  List<VcsDirectoryMapping> mappings=new ArrayList<VcsDirectoryMapping>();
  for (  VcsDirectoryMapping mapping : ProjectLevelVcsManager.getInstance(project).getDirectoryMappings()) {
    mappings.add(new VcsDirectoryMapping(mapping.getDirectory(),mapping.getVcs()));
  }
  myModel=new ListTableModel<VcsDirectoryMapping>(new ColumnInfo[]{DIRECTORY,VCS_SETTING},mappings,0);
  myVcsComboBox.getComboBox().setModel(buildVcsWrappersModel(project));
  myVcsComboBox.getComboBox().setRenderer(new EditorComboBoxRenderer(myVcsComboBox.getComboBox().getEditor()));
  myVcsComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final VcsWrapper vcsWrapper=((VcsWrapper)myVcsComboBox.getComboBox().getSelectedItem());
      AbstractVcs abstractVcs=null;
      if (vcsWrapper != null) {
        abstractVcs=vcsWrapper.getOriginal();
      }
      new VcsConfigurationsDialog(project,myVcsComboBox.getComboBox(),abstractVcs).show();
    }
  }
);
  myDirectoryMappingTable=new TableView<VcsDirectoryMapping>(myModel);
  myDirectoryMappingTable.setRowHeight(myVcsComboBox.getPreferredSize().height);
  myDirectoryMappingTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    final ListSelectionEvent e){
      updateButtons();
    }
  }
);
  initPanel();
  updateButtons();
}
