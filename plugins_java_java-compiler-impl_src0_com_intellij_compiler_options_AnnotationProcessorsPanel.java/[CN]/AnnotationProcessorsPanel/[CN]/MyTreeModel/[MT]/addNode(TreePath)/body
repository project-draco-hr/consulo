{
  final String newProfileName=Messages.showInputDialog(myProject,"Profile name","Create new profile",null,"",new InputValidatorEx(){
    @Override public boolean checkInput(    String inputString){
      if (StringUtil.isEmpty(inputString) || Comparing.equal(inputString,myDefaultProfile.getName())) {
        return false;
      }
      for (      ProcessorConfigProfile profile : myModuleProfiles) {
        if (Comparing.equal(inputString,profile.getName())) {
          return false;
        }
      }
      return true;
    }
    @Override public boolean canClose(    String inputString){
      return checkInput(inputString);
    }
    @Override public String getErrorText(    String inputString){
      if (checkInput(inputString)) {
        return null;
      }
      return StringUtil.isEmpty(inputString) ? "Profile name shouldn't be empty" : "Profile " + inputString + " already exists";
    }
  }
);
  if (newProfileName != null) {
    final ProcessorConfigProfile profile=new ProcessorConfigProfileImpl(newProfileName);
    myModuleProfiles.add(profile);
    ((DataSynchronizable)getRoot()).sync();
    final DefaultMutableTreeNode object=TreeUtil.findNodeWithObject((DefaultMutableTreeNode)getRoot(),profile);
    if (object != null) {
      TreeUtil.selectNode(myTree,object);
    }
  }
  return null;
}
