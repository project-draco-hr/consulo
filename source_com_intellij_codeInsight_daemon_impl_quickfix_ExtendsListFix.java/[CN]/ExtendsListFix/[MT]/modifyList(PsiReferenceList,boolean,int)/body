{
  final PsiJavaCodeReferenceElement[] referenceElements=extendsList.getReferenceElements();
  boolean alreadyExtends=false;
  for (int i=0; i < referenceElements.length; i++) {
    PsiJavaCodeReferenceElement referenceElement=referenceElements[i];
    if (referenceElement.resolve() == myClassToExtendFrom) {
      alreadyExtends=true;
      if (!add) {
        referenceElement.delete();
      }
    }
  }
  PsiReferenceList list=extendsList;
  if (add && !alreadyExtends) {
    final PsiElement anchor;
    if (position == -1) {
      anchor=referenceElements.length == 0 ? null : referenceElements[referenceElements.length - 1];
    }
 else     if (position == 0) {
      anchor=null;
    }
 else {
      anchor=referenceElements[position - 1];
    }
    final PsiJavaCodeReferenceElement classReferenceElement=myClass.getManager().getElementFactory().createReferenceElementByType(myTypeToExtendFrom);
    PsiElement element;
    if (anchor == null) {
      if (referenceElements.length == 0) {
        element=extendsList.add(classReferenceElement);
      }
 else {
        element=extendsList.addBefore(classReferenceElement,referenceElements[0]);
      }
    }
 else {
      element=extendsList.addAfter(classReferenceElement,anchor);
    }
    list=(PsiReferenceList)element.getParent();
  }
  return list;
}
