{
  return new PsiElementVisitor(){
    @Override public void visitAssignmentExpression(    PsiAssignmentExpression expression){
      checkSillyAssignment(expression,holder);
    }
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      visitElement(expression);
    }
    @Override public void visitVariable(    final PsiVariable variable){
      final PsiExpression initializer=variable.getInitializer();
      if (initializer instanceof PsiAssignmentExpression) {
        final PsiExpression lExpr=((PsiAssignmentExpression)initializer).getLExpression();
        if (lExpr instanceof PsiReferenceExpression) {
          final PsiReferenceExpression refExpr=(PsiReferenceExpression)lExpr;
          if (!refExpr.isQualified() && refExpr.isReferenceTo(variable)) {
            holder.registerProblem(lExpr,JavaErrorMessages.message("assignment.to.declared.variable",variable.getName()),ProblemHighlightType.LIKE_UNUSED_SYMBOL,(LocalQuickFix[])null);
          }
        }
      }
    }
  }
;
}
