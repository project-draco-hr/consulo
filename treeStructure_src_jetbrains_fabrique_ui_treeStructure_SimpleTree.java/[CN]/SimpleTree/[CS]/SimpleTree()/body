{
  setModel(new DefaultTreeModel(new PatchedDefaultMutableTreeNode()));
  TreeToolTipHandler.install(this);
  TreeUtil.installActions(this);
  new TreeSpeedSearch(this);
  addMouseListener(myMouseListener);
  setCellRenderer(new SimpleNodeRenderer());
  setEditable(false);
  getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);
  ToolTipManager.sharedInstance().registerComponent(this);
  getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      if (!myIgnoreSelectionChange && hasSingleSelection()) {
        getNodeFor(getSelectionPath()).handleSelection(SimpleTree.this);
      }
    }
  }
);
  addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ENTER && hasSingleSelection()) {
        handleDoubleClickOrEnter(getSelectionPath(),e);
      }
      if (e.getKeyCode() == KeyEvent.VK_F2 && e.getModifiers() == 0) {
        e.consume();
      }
    }
  }
);
  putClientProperty("JTree.lineStyle","Angled");
  setUI(new BasicTreeUI());
}
