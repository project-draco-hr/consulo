{
  if (!(element instanceof PsiBinaryExpression)) {
    return;
  }
  PsiBinaryExpression concatenationExpression=(PsiBinaryExpression)element;
  PsiElement parent=concatenationExpression.getParent();
  while (parent instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)parent;
    final IElementType tokenType=binaryExpression.getOperationTokenType();
    if (tokenType != JavaTokenType.PLUS) {
      break;
    }
    final PsiType type=binaryExpression.getType();
    if (type == null || !type.equalsToText("java.lang.String")) {
      break;
    }
    concatenationExpression=binaryExpression;
    parent=concatenationExpression.getParent();
  }
  final StringBuilder text=new StringBuilder();
  buildConcatenationText(concatenationExpression,text);
  final Transferable contents=new StringSelection(text.toString());
  CopyPasteManager.getInstance().setContents(contents);
}
