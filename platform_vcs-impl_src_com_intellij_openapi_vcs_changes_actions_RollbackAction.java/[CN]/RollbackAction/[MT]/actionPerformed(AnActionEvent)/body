{
  Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null) {
    return;
  }
  final String title=ActionPlaces.CHANGES_VIEW_TOOLBAR.equals(e.getPlace()) ? null : "Can not " + RollbackUtil.getRollbackOperationName(project) + " now";
  if (ChangeListManager.getInstance(project).isFreezedWithNotification(title))   return;
  FileDocumentManager.getInstance().saveAllDocuments();
  List<FilePath> missingFiles=e.getData(ChangesListView.MISSING_FILES_DATA_KEY);
  boolean hasChanges=false;
  if (missingFiles != null && !missingFiles.isEmpty()) {
    hasChanges=true;
    new RollbackDeletionAction().actionPerformed(e);
  }
  LinkedHashSet<VirtualFile> modifiedWithoutEditing=getModifiedWithoutEditing(e,project);
  if (modifiedWithoutEditing != null && !modifiedWithoutEditing.isEmpty()) {
    hasChanges=true;
    rollbackModifiedWithoutEditing(project,modifiedWithoutEditing);
  }
  List<Change> changes=getChanges(project,e);
  if (changes != null) {
    if (modifiedWithoutEditing != null) {
      for (Iterator<Change> iterator=changes.iterator(); iterator.hasNext(); ) {
        Change next=iterator.next();
        if (modifiedWithoutEditing.contains(next.getVirtualFile())) {
          iterator.remove();
        }
      }
    }
    if (!changes.isEmpty() || !hasChanges) {
      RollbackChangesDialog.rollbackChanges(project,changes);
    }
  }
}
