{
  if (!tag.isValid()) {
    throw new AssertionError("Invalid tag");
  }
  final XmlTag[] tags=tag.getSubTags();
  if (tags.length == 0) {
    return Collections.emptyList();
  }
  return ContainerUtil.findAll(tags,new Condition<XmlTag>(){
    public boolean value(    XmlTag childTag){
      try {
        return isNameSuitable(name,childTag.getLocalName(),childTag.getName(),childTag.getNamespace(),file);
      }
 catch (      PsiInvalidElementAccessException e) {
        if (!childTag.isValid()) {
          LOG.error("tag.getSubTags() returned invalid, " + "tag=" + tag + ", "+ "containing file: "+ tag.getContainingFile()+ "subTag.parent="+ childTag.getNode().getTreeParent());
          return false;
        }
        throw e;
      }
    }
  }
);
}
