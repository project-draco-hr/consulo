{
  final List<XmlElementDescriptor> variants=new ArrayList<XmlElementDescriptor>();
  final XmlTag element=getElement();
  if (!myStartTagFlag) {
    final String name=element.getName();
    if (name == null)     return new Object[0];
    return new Object[]{name};
  }
  final Map<String,XmlElementDescriptor> descriptorsMap=new HashMap<String,XmlElementDescriptor>();
{
    PsiElement curElement=element.getParent();
    while (curElement instanceof XmlTag) {
      final XmlTag declarationTag=(XmlTag)curElement;
      final String namespace=declarationTag.getNamespace();
      if (!descriptorsMap.containsKey(namespace)) {
        final XmlElementDescriptor descriptor=declarationTag.getDescriptor();
        if (descriptor != null)         descriptorsMap.put(namespace,descriptor);
      }
      curElement=curElement.getContext();
    }
  }
  final List<String> namespaces=new ArrayList<String>(Arrays.asList(element.knownNamespaces()));
  namespaces.add(XmlUtil.EMPTY_URI);
  final Iterator<String> nsIterator=namespaces.iterator();
  final Set<XmlNSDescriptor> visited=new HashSet<XmlNSDescriptor>();
  while (nsIterator.hasNext()) {
    final String namespace=nsIterator.next();
    if (descriptorsMap.containsKey(namespace)) {
      final XmlElementDescriptor descriptor=descriptorsMap.get(namespace);
      variants.addAll(Arrays.asList(descriptor.getElementsDescriptors(element)));
      if (element instanceof HtmlTag) {
        HtmlUtil.addHtmlSpecificCompletions(descriptor,element,variants);
      }
      visited.add(descriptor.getNSDescriptor());
    }
 else {
      if (namespace.length() == 0 && !visited.isEmpty())       continue;
      final XmlNSDescriptor NSDescriptor=element.getNSDescriptor(namespace,false);
      if (NSDescriptor != null && !visited.contains(NSDescriptor)) {
        visited.add(NSDescriptor);
        variants.addAll(Arrays.asList(NSDescriptor.getRootElementsDescriptors()));
      }
    }
  }
  final Iterator<XmlElementDescriptor> iterator=variants.iterator();
  String[] ret=new String[variants.size()];
  int index=0;
  while (iterator.hasNext()) {
    final XmlElementDescriptor descriptor=iterator.next();
    ret[index++]=descriptor.getName(element.getParent());
  }
  return ret;
}
