{
  if (aClass.isInterface() || aClass.isEnum() || aClass.isAnnotationType()) {
    return;
  }
  if (aClass instanceof PsiTypeParameter || aClass instanceof PsiAnonymousClass) {
    return;
  }
  if (aClass.getContainingClass() != null) {
    return;
  }
  final PsiField[] fields;
  if (ignoreSuperLoggers) {
    fields=aClass.getAllFields();
  }
 else {
    fields=aClass.getFields();
  }
  for (  PsiField field : fields) {
    if (isLogger(field)) {
      if (PsiUtil.isAccessible(field,aClass,aClass)) {
        return;
      }
    }
  }
  registerClassError(aClass);
}
