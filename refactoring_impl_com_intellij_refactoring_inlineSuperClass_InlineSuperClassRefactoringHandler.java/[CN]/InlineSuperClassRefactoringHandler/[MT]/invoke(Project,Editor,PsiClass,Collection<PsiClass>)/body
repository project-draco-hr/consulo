{
  for (  PsiClass inheritor : inheritors) {
    if (PsiTreeUtil.isAncestor(superClass,inheritor,false)) {
      CommonRefactoringUtil.showErrorHint(project,editor,"Cannot inline into the inner class. Move \'" + inheritor.getName() + "\' to upper level",REFACTORING_NAME,null);
      return;
    }
    if (inheritor instanceof PsiAnonymousClass) {
      CommonRefactoringUtil.showErrorHint(project,editor,"Cannot inline into anonymous class.",REFACTORING_NAME,null);
      return;
    }
  }
  new InlineSuperClassRefactoringDialog(project,superClass,inheritors.toArray(new PsiClass[inheritors.size()])).show();
}
