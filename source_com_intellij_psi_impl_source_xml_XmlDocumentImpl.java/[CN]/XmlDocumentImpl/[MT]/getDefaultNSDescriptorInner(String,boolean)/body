{
  final XmlFile containingFile=XmlUtil.getContainingFile(this);
  final XmlProlog prolog=getProlog();
  final XmlDoctype doctype=(prolog != null) ? prolog.getDoctype() : null;
  if (XmlUtil.ANT_URI.equals(namespace)) {
    final AntDOMNSDescriptor antDOMNSDescriptor=new AntDOMNSDescriptor();
    antDOMNSDescriptor.init(this);
    return antDOMNSDescriptor;
  }
 else   if (XmlUtil.HTML_URI.equals(namespace)) {
    XmlNSDescriptor nsDescriptor=(doctype != null) ? getNsDescriptorFormDocType(doctype,containingFile) : null;
    if (nsDescriptor == null)     nsDescriptor=getDefaultNSDescriptor(XmlUtil.XHTML_URI,false);
    final XmlNSDescriptor htmlDescriptor=new HtmlNSDescriptorImpl(nsDescriptor);
    return htmlDescriptor;
  }
 else   if (namespace != null && namespace != XmlUtil.EMPTY_URI && (doctype == null || !namespace.equals(doctype.getDtdUri()))) {
    final XmlFile xmlFile=XmlUtil.findXmlFile(containingFile,ExternalResourceManager.getInstance().getResourceLocation(namespace));
    if (xmlFile != null) {
      final XmlNSDescriptor descriptor=(XmlNSDescriptor)xmlFile.getDocument().getMetaData();
      return descriptor;
    }
  }
  if (strict)   return null;
  if (doctype != null) {
    final XmlNSDescriptor descr=getNsDescriptorFormDocType(doctype,containingFile);
    if (descr != null) {
      return descr;
    }
  }
  try {
    final PsiFile fileFromText=getManager().getElementFactory().createFileFromText(containingFile.getName() + ".dtd",XmlUtil.generateDocumentDTD(this));
    if (fileFromText instanceof XmlFile) {
      return (XmlNSDescriptor)((XmlFile)fileFromText).getDocument().getMetaData();
    }
  }
 catch (  RuntimeException ex) {
  }
  return null;
}
