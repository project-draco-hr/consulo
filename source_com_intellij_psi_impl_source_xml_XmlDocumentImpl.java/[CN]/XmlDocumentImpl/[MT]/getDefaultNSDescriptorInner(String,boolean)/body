{
  final XmlFile containingFile=XmlUtil.getContainingFile(this);
  final XmlDoctype doctype=getProlog().getDoctype();
  if (XmlUtil.ANT_URI.equals(namespace)) {
    final AntDOMNSDescriptor antDOMNSDescriptor=new AntDOMNSDescriptor();
    antDOMNSDescriptor.init(this);
    return antDOMNSDescriptor;
  }
 else   if (XmlUtil.HTML_URI.equals(namespace) && doctype == null) {
    final XmlNSDescriptor xhtmlNSDescriptor=getDefaultNSDescriptor(XmlUtil.XHTML_URI,false);
    final XmlNSDescriptor htmlDescriptor=new HtmlNSDescriptorImpl(xhtmlNSDescriptor);
    return htmlDescriptor;
  }
 else   if (namespace != null && namespace != XmlUtil.EMPTY_URI && (doctype == null || !namespace.equals(doctype.getDtdUri()))) {
    final XmlFile xmlFile=XmlUtil.findXmlFile(containingFile,ExternalResourceManager.getInstance().getResourceLocation(namespace));
    if (xmlFile != null) {
      final XmlNSDescriptor descriptor=(XmlNSDescriptor)xmlFile.getDocument().getMetaData();
      return descriptor;
    }
  }
  if (strict)   return null;
  if (doctype != null) {
    XmlNSDescriptor descr=null;
    if (doctype.getMarkupDecl() != null) {
      descr=(XmlNSDescriptor)doctype.getMarkupDecl().getMetaData();
    }
    if (doctype.getDtdUri() != null) {
      final XmlFile xmlFile=XmlUtil.findXmlFile(containingFile,doctype.getDtdUri());
      final XmlNSDescriptor descr1=xmlFile == null ? null : (XmlNSDescriptor)xmlFile.getDocument().getMetaData();
      if (descr != null && descr1 != null) {
        descr=new XmlNSDescriptorSequence(new XmlNSDescriptor[]{descr,descr1});
      }
 else       if (descr1 != null) {
        descr=descr1;
      }
    }
    if (descr != null)     return descr;
  }
  try {
    return (XmlNSDescriptor)((XmlFile)getManager().getElementFactory().createFileFromText(containingFile.getName() + ".dtd",XmlUtil.generateDocumentDTD(this))).getDocument().getMetaData();
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
  return null;
}
