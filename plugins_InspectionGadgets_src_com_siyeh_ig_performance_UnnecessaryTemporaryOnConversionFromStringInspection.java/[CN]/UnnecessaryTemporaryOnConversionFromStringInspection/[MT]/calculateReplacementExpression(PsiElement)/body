{
  final PsiMethodCallExpression expression=(PsiMethodCallExpression)location;
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiExpression qualifierExpression=methodExpression.getQualifierExpression();
  if (!(qualifierExpression instanceof PsiNewExpression)) {
    return null;
  }
  final PsiNewExpression qualifier=(PsiNewExpression)qualifierExpression;
  final PsiExpressionList argumentList=qualifier.getArgumentList();
  if (argumentList == null) {
    return null;
  }
  final PsiExpression arg=argumentList.getExpressions()[0];
  final PsiType type=qualifier.getType();
  if (type == null) {
    return null;
  }
  final String qualifierType=type.getPresentableText();
  final String canonicalType=type.getCanonicalText();
  final String conversionName=s_conversionMap.get(canonicalType);
  if (TypeUtils.typeEquals("java.lang.Boolean",type)) {
    final LanguageLevel languageLevel=PsiUtil.getLanguageLevel(location);
    if (languageLevel.compareTo(LanguageLevel.JDK_1_5) < 0) {
      return qualifierType + '.' + conversionName+ '('+ arg.getText()+ ").booleanValue()";
    }
 else {
      return qualifierType + ".parseBoolean(" + arg.getText()+ ')';
    }
  }
 else {
    return qualifierType + '.' + conversionName+ '('+ arg.getText()+ ')';
  }
}
