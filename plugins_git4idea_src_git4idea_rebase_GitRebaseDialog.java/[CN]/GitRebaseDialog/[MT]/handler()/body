{
  GitLineHandler h=new GitLineHandler(myProject,gitRoot(),GitHandler.REBASE);
  h.setNoSSH(true);
  if (myInteractiveCheckBox.isSelected() && myInteractiveCheckBox.isEnabled()) {
    h.addParameters("-i");
  }
  h.addParameters("-v");
  if (!myDoNotUseMergeCheckBox.isSelected()) {
    if (myMergeStrategyComboBox.getSelectedItem().equals(GitMergeUtil.DEFAULT_STRATEGY)) {
      h.addParameters("-m");
    }
 else {
      h.addParameters("-s",myMergeStrategyComboBox.getSelectedItem().toString());
    }
  }
  if (myPreserveMergesCheckBox.isSelected()) {
    h.addParameters("-p");
  }
  String from=GitUIUtil.getTextField(myFromComboBox).getText();
  String onto=GitUIUtil.getTextField(myOntoComboBox).getText();
  if (from.length() == 0) {
    h.addParameters(onto);
  }
 else {
    h.addParameters("--onto",onto,from);
  }
  final String selectedBranch=(String)myBranchComboBox.getSelectedItem();
  if (myCurrentBranch != null && !myCurrentBranch.getName().equals(selectedBranch)) {
    h.addParameters(selectedBranch);
  }
  return h;
}
