{
  try {
    final VirtualFile root=gitRoot();
    String currentBranch=(String)myBranchComboBox.getSelectedItem();
    final GitBranch trackedBranch;
    if (currentBranch != null) {
      String remote=GitConfigUtil.getValue(myProject,root,"branch." + currentBranch + ".remote");
      String merge=GitConfigUtil.getValue(myProject,root,"branch." + currentBranch + ".merge");
      String name=(merge != null && merge.startsWith(GitBranch.REFS_HEADS_PREFIX)) ? merge.substring(GitBranch.REFS_HEADS_PREFIX.length()) : null;
      if (remote == null || merge == null || name == null) {
        trackedBranch=null;
      }
 else {
        if (remote.equals(".")) {
          trackedBranch=new GitBranch(name,false);
        }
 else {
          trackedBranch=new GitBranch(remote + "/" + name,true);
        }
      }
    }
 else {
      trackedBranch=null;
    }
    if (trackedBranch != null) {
      myOntoComboBox.setSelectedItem(trackedBranch);
    }
 else {
      GitUIUtil.getTextField(myOntoComboBox).setText("");
    }
    GitUIUtil.getTextField(myFromComboBox).setText("");
  }
 catch (  VcsException e) {
    GitUIUtil.showOperationError(myProject,e,"git config");
  }
}
