{
  return with(new PatternCondition<T>("methodCallParameter"){
    public boolean accepts(    @NotNull final T literal,    final ProcessingContext context){
      final PsiElement parent=literal.getParent();
      if (parent instanceof PsiExpressionList) {
        final PsiExpressionList psiExpressionList=(PsiExpressionList)parent;
        final PsiExpression[] psiExpressions=psiExpressionList.getExpressions();
        if (!(psiExpressions.length > index && psiExpressions[index] == literal))         return false;
        final PsiElement element=psiExpressionList.getParent();
        if (element instanceof PsiNewExpression) {
          PsiJavaCodeReferenceElement reference=((PsiNewExpression)element).getClassOrAnonymousClassReference();
          if (reference != null) {
            String qualifiedName=reference.getQualifiedName();
            for (            String fqn : fqns) {
              if (fqn.equals(qualifiedName))               return true;
            }
          }
        }
      }
      return false;
    }
  }
);
}
