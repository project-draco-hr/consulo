{
  myTextField.getTextField().setBorder(null);
  myTextField.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final TreeClassChooserFactory factory=TreeClassChooserFactory.getInstance(myModule.getProject());
      PsiFile iconFile=null;
      if (myValue != null) {
        iconFile=ModuleUtil.findResourceFileInDependents(myModule,myValue.getIconPath(),PsiFile.class);
      }
      TreeFileChooser fileChooser=factory.createFileChooser(UIDesignerBundle.message("title.choose.icon.file"),iconFile,null,new MyImageFileFilter(myModule));
      fileChooser.showDialog();
      PsiFile file=fileChooser.getSelectedFile();
      if (file != null) {
        PsiDirectory directory=file.getContainingDirectory();
        if (directory != null) {
          PsiPackage pkg=directory.getPackage();
          String packageName=pkg != null ? pkg.getQualifiedName() : "";
          IconDescriptor descriptor=new IconDescriptor(packageName.replace('.','/') + '/' + file.getName());
          IntroIconProperty.loadIconFromFile(file,descriptor);
          myValue=descriptor;
          myTextField.setText(descriptor.getIconPath());
        }
      }
    }
  }
);
}
