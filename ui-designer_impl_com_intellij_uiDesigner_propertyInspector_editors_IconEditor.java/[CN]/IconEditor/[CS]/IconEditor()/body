{
  myTextField.getTextField().setBorder(null);
  myTextField.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final TreeClassChooserFactory factory=TreeClassChooserFactory.getInstance(myModule.getProject());
      PsiFile iconFile=null;
      if (myValue != null) {
        VirtualFile iconVFile=ModuleUtil.findResourceFileInDependents(myModule,myValue.getIconPath());
        if (iconVFile != null) {
          iconFile=PsiManager.getInstance(myModule.getProject()).findFile(iconVFile);
        }
      }
      TreeFileChooser fileChooser=factory.createFileChooser(UIDesignerBundle.message("title.choose.icon.file"),iconFile,null,new ImageFileFilter(myModule),false,true);
      fileChooser.showDialog();
      PsiFile file=fileChooser.getSelectedFile();
      if (file != null) {
        String resourceName=FormEditingUtil.buildResourceName(file);
        if (resourceName != null) {
          IconDescriptor descriptor=new IconDescriptor(resourceName);
          IntroIconProperty.loadIconFromFile(file.getVirtualFile(),descriptor);
          myValue=descriptor;
          myTextField.setText(descriptor.getIconPath());
        }
      }
    }
  }
);
}
