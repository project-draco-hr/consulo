{
  final StringBuffer sb=new StringBuffer(commentText.trim());
  if (sb.length() > 60) {
    for (int i=0; i < sb.length() - 4; i++) {
      if (sb.charAt(i) == sb.charAt(i + 1) && sb.charAt(i + 1) == sb.charAt(i + 2) && sb.charAt(i + 2) == sb.charAt(i + 3)) {
        int j=0;
        while (i + 4 < sb.length() && sb.charAt(i) == sb.charAt(i + 4)) {
          j++;
          sb.deleteCharAt(i + 4);
        }
        if (j > 3) {
          sb.insert(i + 4,"<" + j + ">");
        }
 else {
          while (j-- > 0) {
            sb.insert(i + 4,sb.charAt(i));
          }
        }
      }
    }
  }
  if (sb.length() > 60) {
    sb.delete(60,sb.length());
    sb.append("...");
  }
  String condition="";
switch (emitCondition) {
case EMIT_ALWAYS:
    break;
case EMIT_IF_ITEMS_MATCH_PRECEDING_RULE:
  condition=" when " + precedingRuleString();
break;
case EMIT_IF_ITEMS_MATCH_SUBSEQUENT_RULE:
condition=" when " + subsequentRuleString();
break;
case EMIT_IF_ITEMS_MATCH_SURROUNDING_RULES:
condition=" when " + precedingRuleString() + ", and "+ subsequentRuleString();
}
return ("Comment (" + sb.toString() + ")"+ condition);
}
