{
  List<TextRange> result=super.select(e,editorText,cursorOffset,editor);
  PsiElement firstChild=e.getFirstChild();
  PsiElement[] children=e.getChildren();
  if (firstChild instanceof PsiDocComment) {
    int i=1;
    while (children[i] instanceof PsiWhiteSpace) {
      i++;
    }
    TextRange range=new TextRange(children[i].getTextRange().getStartOffset(),e.getTextRange().getEndOffset());
    result.addAll(expandToWholeLine(editorText,range));
    range=new TextRange(firstChild.getTextRange().getStartOffset(),firstChild.getTextRange().getEndOffset());
    result.addAll(expandToWholeLine(editorText,range));
  }
 else   if (firstChild instanceof PsiComment) {
    int i=1;
    while (children[i] instanceof PsiComment || children[i] instanceof PsiWhiteSpace) {
      i++;
    }
    PsiElement last=children[i - 1] instanceof PsiWhiteSpace ? children[i - 2] : children[i - 1];
    TextRange range=new TextRange(firstChild.getTextRange().getStartOffset(),last.getTextRange().getEndOffset());
    if (range.contains(cursorOffset)) {
      result.addAll(expandToWholeLine(editorText,range));
    }
    range=new TextRange(children[i].getTextRange().getStartOffset(),e.getTextRange().getEndOffset());
    result.addAll(expandToWholeLine(editorText,range));
  }
  if (e instanceof PsiClass) {
    int start=findOpeningBrace(children);
    int end=findClosingBrace(children);
    result.addAll(expandToWholeLine(editorText,new TextRange(start,end)));
  }
  return result;
}
