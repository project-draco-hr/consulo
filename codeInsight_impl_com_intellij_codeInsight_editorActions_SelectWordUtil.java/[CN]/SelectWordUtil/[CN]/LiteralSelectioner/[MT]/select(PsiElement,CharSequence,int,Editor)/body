{
  List<TextRange> result=super.select(e,editorText,cursorOffset,editor);
  TextRange range=e.getTextRange();
  final StringLiteralLexer lexer=new StringLiteralLexer('\"',JavaTokenType.STRING_LITERAL);
  char[] chars=CharArrayUtil.fromSequence(editorText);
  lexer.start(chars,range.getStartOffset(),range.getEndOffset());
  while (lexer.getTokenType() != null) {
    if (lexer.getTokenStart() <= cursorOffset && cursorOffset < lexer.getTokenEnd()) {
      if (StringEscapesTokenTypes.STRING_LITERAL_ESCAPES.isInSet(lexer.getTokenType())) {
        result.add(new TextRange(lexer.getTokenStart(),lexer.getTokenEnd()));
      }
 else {
        TextRange word=getWordSelectionRange(editorText,cursorOffset);
        if (word != null) {
          result.add(new TextRange(Math.max(word.getStartOffset(),lexer.getTokenStart()),Math.min(word.getEndOffset(),lexer.getTokenEnd())));
        }
      }
      break;
    }
    lexer.advance();
  }
  result.add(new TextRange(range.getStartOffset() + 1,range.getEndOffset() - 1));
  return result;
}
