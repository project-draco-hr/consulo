{
  checkSetSize(generator,componentLocal,"setMinimumSize",result.minimumSize);
  checkSetSize(generator,componentLocal,"setPreferredSize",result.preferredSize);
  checkSetSize(generator,componentLocal,"setMaximumSize",result.maximumSize);
  int gbcLocal=generator.newLocal(myGridBagConstraintsType);
  generator.newInstance(myGridBagConstraintsType);
  generator.dup();
  generator.invokeConstructor(myGridBagConstraintsType,myDefaultConstructor);
  generator.storeLocal(gbcLocal);
  GridBagConstraints defaults=new GridBagConstraints();
  GridBagConstraints constraints=result.constraints;
  if (defaults.gridx != constraints.gridx) {
    setIntField(generator,gbcLocal,"gridx",constraints.gridx);
  }
  if (defaults.gridy != constraints.gridy) {
    setIntField(generator,gbcLocal,"gridy",constraints.gridy);
  }
  if (defaults.gridwidth != constraints.gridwidth) {
    setIntField(generator,gbcLocal,"gridwidth",constraints.gridwidth);
  }
  if (defaults.gridheight != constraints.gridheight) {
    setIntField(generator,gbcLocal,"gridheight",constraints.gridheight);
  }
  if (defaults.weightx != constraints.weightx) {
    setDoubleField(generator,gbcLocal,"weightx",constraints.weightx);
  }
  if (defaults.weighty != constraints.weighty) {
    setDoubleField(generator,gbcLocal,"weighty",constraints.weighty);
  }
  if (defaults.anchor != constraints.anchor) {
    setIntField(generator,gbcLocal,"anchor",constraints.anchor);
  }
  if (defaults.fill != constraints.fill) {
    setIntField(generator,gbcLocal,"fill",constraints.fill);
  }
  if (defaults.ipadx != constraints.ipadx) {
    setIntField(generator,gbcLocal,"ipadx",constraints.ipadx);
  }
  if (defaults.ipady != constraints.ipady) {
    setIntField(generator,gbcLocal,"ipady",constraints.ipady);
  }
  if (!defaults.insets.equals(constraints.insets)) {
    generator.loadLocal(gbcLocal);
    AsmCodeGenerator.pushPropValue(generator,"java.awt.Insets",constraints.insets);
    generator.putField(myGridBagConstraintsType,"insets",Type.getType(Insets.class));
  }
  generator.loadLocal(parentLocal);
  generator.loadLocal(componentLocal);
  generator.loadLocal(gbcLocal);
  generator.invokeVirtual(Type.getType(Container.class),Method.getMethod("void add(java.awt.Component,java.lang.Object)"));
}
