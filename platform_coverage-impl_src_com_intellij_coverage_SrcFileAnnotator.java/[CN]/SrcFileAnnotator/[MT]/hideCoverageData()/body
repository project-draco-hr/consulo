{
  if (myEditor == null)   return;
  final FileEditorManager fileEditorManager=FileEditorManager.getInstance(myProject);
  final List<RangeHighlighter> highlighters=myEditor.getUserData(COVERAGE_HIGHLIGHTERS);
  if (highlighters != null) {
    for (    final RangeHighlighter highlighter : highlighters) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          highlighter.dispose();
        }
      }
);
    }
    myEditor.putUserData(COVERAGE_HIGHLIGHTERS,null);
  }
  final Map<FileEditor,EditorNotificationPanel> map=myFile.getCopyableUserData(NOTIFICATION_PANELS);
  if (map != null) {
    final VirtualFile vFile=myFile.getVirtualFile();
    LOG.assertTrue(vFile != null);
    boolean freeAll=!fileEditorManager.isFileOpen(vFile);
    myFile.putCopyableUserData(NOTIFICATION_PANELS,null);
    for (    FileEditor fileEditor : map.keySet()) {
      if (!freeAll && !isCurrentEditor(fileEditor)) {
        continue;
      }
      fileEditorManager.removeTopComponent(fileEditor,map.get(fileEditor));
    }
  }
  final DocumentListener documentListener=myEditor.getUserData(COVERAGE_DOCUMENT_LISTENER);
  if (documentListener != null) {
    myDocument.removeDocumentListener(documentListener);
    myEditor.putUserData(COVERAGE_DOCUMENT_LISTENER,null);
  }
}
