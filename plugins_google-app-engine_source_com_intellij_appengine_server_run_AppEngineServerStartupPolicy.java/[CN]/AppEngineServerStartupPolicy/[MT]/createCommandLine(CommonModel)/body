{
  final AppEngineServerData data=(AppEngineServerData)commonModel.getApplicationServer().getPersistentData();
  final String sdkHomePath=data.getSdkPath();
  if (StringUtil.isEmpty(sdkHomePath)) {
    throw new ExecutionException("Path to App Engine SDK isn't specified");
  }
  final JavaParameters javaParameters=new JavaParameters();
  javaParameters.getClassPath().add(FileUtil.toSystemDependentName(sdkHomePath + "/lib/appengine-tools-api.jar"));
  javaParameters.setMainClass("com.google.appengine.tools.development.DevAppServerMain");
  final ServerModel serverModel=commonModel.getServerModel();
  final WebFacet webFacet=((AppEngineServerModel)serverModel).getWebFacet();
  if (webFacet == null) {
    throw new ExecutionException("Web Facet isn't specified");
  }
  final Sdk sdk=ModuleRootManager.getInstance(webFacet.getModule()).getSdk();
  if (sdk == null) {
    throw new ExecutionException("JDK isn't specified for module '" + webFacet.getModule().getName() + "'");
  }
  javaParameters.setJdk(sdk);
  final ParametersList parameters=javaParameters.getProgramParametersList();
  parameters.add("-p",String.valueOf(serverModel.getLocalPort()));
  parameters.add("--disable_update_check");
  final BuildConfiguration buildProperties=webFacet.getBuildConfiguration().getBuildProperties();
  final String explodedPath=buildProperties.getExplodedPath();
  if (!buildProperties.isExplodedEnabled() || explodedPath == null) {
    throw new ExecutionException("Exploded directory isn't specified for '" + webFacet.getName() + "' Facet");
  }
  final String explodedPathParameter=FileUtil.toSystemDependentName(explodedPath);
  parameters.add(explodedPathParameter);
  javaParameters.setWorkingDirectory(explodedPathParameter);
  if (SystemInfo.isMac) {
    javaParameters.getVMParametersList().add("-XstartOnFirstThread");
  }
  return javaParameters;
}
