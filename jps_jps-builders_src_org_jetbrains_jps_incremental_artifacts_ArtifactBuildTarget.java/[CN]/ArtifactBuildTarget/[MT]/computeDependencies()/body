{
  final LinkedHashSet<BuildTarget<?>> dependencies=new LinkedHashSet<BuildTarget<?>>();
  JpsArtifactUtil.processPackagingElements(myArtifact.getRootElement(),new Processor<JpsPackagingElement>(){
    @Override public boolean process(    JpsPackagingElement element){
      if (element instanceof JpsArtifactOutputPackagingElement) {
        JpsArtifact included=((JpsArtifactOutputPackagingElement)element).getArtifactReference().resolve();
        if (included != null && !included.equals(myArtifact)) {
          if (!StringUtil.isEmpty(included.getOutputPath())) {
            dependencies.add(new ArtifactBuildTarget(included));
            return false;
          }
        }
      }
 else       if (element instanceof JpsProductionModuleOutputPackagingElement) {
        JpsModule module=((JpsProductionModuleOutputPackagingElement)element).getModuleReference().resolve();
        if (module != null) {
          dependencies.add(new ModuleBuildTarget(module,JavaModuleBuildTargetType.PRODUCTION));
        }
      }
 else       if (element instanceof JpsTestModuleOutputPackagingElement) {
        JpsModule module=((JpsTestModuleOutputPackagingElement)element).getModuleReference().resolve();
        if (module != null) {
          dependencies.add(new ModuleBuildTarget(module,JavaModuleBuildTargetType.TEST));
        }
      }
      return true;
    }
  }
);
  return dependencies;
}
