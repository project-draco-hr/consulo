{
  final Set<PsiPackage> psiPackages=myDependencies.keySet();
  final Set<PsiFile> psiFiles=new HashSet<PsiFile>();
  for (  PsiPackage psiPackage : psiPackages) {
    final Set<List<PsiPackage>> cycles=myDependencies.get(psiPackage);
    if (!mySettings.UI_FILTER_OUT_OF_CYCLE_PACKAGES || cycles != null && !cycles.isEmpty()) {
      psiFiles.addAll(getPackageFiles(psiPackage));
    }
  }
  boolean showFiles=mySettings.UI_SHOW_FILES;
  mySettings.UI_FLATTEN_PACKAGES=true;
  mySettings.UI_SHOW_FILES=false;
  myLeftTreeExpansionMonitor.freeze();
  myLeftTree.setModel(TreeModelBuilder.createTreeModel(myProject,false,psiFiles,new Marker(){
    public boolean isMarked(    PsiFile file){
      return false;
    }
  }
,mySettings));
  myLeftTreeExpansionMonitor.restore();
  expandFirstLevel(myLeftTree);
  mySettings.UI_SHOW_FILES=showFiles;
  mySettings.UI_FLATTEN_PACKAGES=false;
}
