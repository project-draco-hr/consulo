{
  final PsiDocumentManager docManager=PsiDocumentManager.getInstance(project);
  final Document document=docManager.getDocument(psiJavaFile);
  if (document == null) {
    return null;
  }
  final int endOffset=document.getLineEndOffset(line);
  final MethodDescriptor descriptor=docManager.commitAndRunReadAction(new Computable<MethodDescriptor>(){
    public MethodDescriptor compute(){
      try {
        PsiMethod method=DebuggerUtilsEx.findPsiMethod(psiJavaFile,endOffset);
        if (method == null || document.getLineNumber(method.getTextOffset()) < line) {
          return null;
        }
        int methodNameOffset=method.getNameIdentifier().getTextOffset();
        final MethodDescriptor descriptor=new MethodDescriptor();
        descriptor.methodName=method.isConstructor() ? "<init>" : method.getName();
        descriptor.methodSignature=JVMNameUtil.getJVMSignature(method);
        descriptor.isStatic=method.hasModifierProperty(PsiModifier.STATIC);
        descriptor.methodLine=document.getLineNumber(methodNameOffset);
        return descriptor;
      }
 catch (      EvaluateException ignored) {
      }
      return null;
    }
  }
);
  if (descriptor == null || descriptor.methodName == null || descriptor.methodSignature == null) {
    return null;
  }
  return descriptor;
}
