{
  ArrayList<Usage> usages=new ArrayList<Usage>();
  CommonProcessors.CollectProcessor<Usage> collect=new CommonProcessors.CollectProcessor<Usage>(usages);
  FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(project)).getFindUsagesManager();
  FindUsagesHandler handler=findUsagesManager.getFindUsagesHandler(element);
  UsageViewPresentation presentation=findUsagesManager.processUsages(element,collect,handler);
  if (presentation == null)   return;
  if (usages.isEmpty()) {
    HintManager.getInstance().showInformationHint(editor,FindBundle.message("no.usages.found.in",searchScopePresentableName(element,handler)));
  }
 else   if (usages.size() == 1) {
    Usage usage=usages.iterator().next();
    navigateAndHint(usage,FindBundle.message("show.usages.only.usage",searchScopePresentableName(element,handler)));
  }
 else {
    final String title=presentation.getTabText();
    JBPopup popup=getUsagePopup(usages,title,project,element,handler);
    if (popup != null) {
      popup.showInBestPositionFor(editor);
    }
  }
}
