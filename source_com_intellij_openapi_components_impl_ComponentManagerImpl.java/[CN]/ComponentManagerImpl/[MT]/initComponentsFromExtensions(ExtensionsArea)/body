{
  if (ApplicationManagerEx.getApplicationEx().isUnitTestMode())   return;
  final ComponentDescriptor[] componentDescriptors=(ComponentDescriptor[])extensionsArea.getExtensionPoint(PluginManager.COMPONENT_EXTENSION_POINT).getExtensions();
  for (int i=0; i < componentDescriptors.length; i++) {
    ComponentDescriptor descriptor=componentDescriptors[i];
    final Map<String,String> options=descriptor.getOptionsMap();
    if (isComponentSuitable(options)) {
      ClassLoader loader=findLoader(descriptor.getPluginName());
      try {
        registerComponent(Class.forName(descriptor.getInterface(),true,loader),Class.forName(descriptor.getImplementation(),true,loader),options,true,isTrue(options,"lazy"));
      }
 catch (      Exception e) {
        LOG.error(new PluginException(e,PluginManager.getPlugin(descriptor.getPluginName())));
      }
catch (      Error e) {
        LOG.error(new PluginException(e,PluginManager.getPlugin(descriptor.getPluginName())));
      }
    }
  }
}
