{
  final Set<File> cp=new LinkedHashSet<File>();
  cp.add(getResourcePath(JavacServer.class));
  for (  String path : PathManager.getUtilClassPath()) {
    cp.add(new File(path));
  }
  cp.add(getResourcePath(JpsModel.class));
  cp.add(getResourcePath(JpsModelImpl.class));
  cp.add(getResourcePath(Message.class));
  cp.add(getResourcePath(Version.class));
  final Class<StandardJavaFileManager> optimizedFileManagerClass=getOptimizedFileManagerClass();
  if (optimizedFileManagerClass != null) {
    cp.add(getResourcePath(optimizedFileManagerClass));
  }
  try {
    final Class<?> cmdLineWrapper=Class.forName("com.intellij.rt.execution.CommandLineWrapper");
    cp.add(getResourcePath(cmdLineWrapper));
  }
 catch (  Throwable th) {
    LOG.info(th);
  }
  final JavaCompiler systemCompiler=ToolProvider.getSystemJavaCompiler();
  if (systemCompiler != null) {
    try {
      final String localJarPath=FileUtil.toSystemIndependentName(getResourcePath(systemCompiler.getClass()).getPath());
      final String localJavaHome=FileUtil.toSystemIndependentName(SystemProperties.getJavaHome());
      if (FileUtil.pathsEqual(localJavaHome,FileUtil.toSystemIndependentName(sdkHome))) {
        cp.add(new File(localJarPath));
      }
 else {
        final File candidate=new File(sdkHome,"lib/tools.jar");
        if (candidate.exists()) {
          cp.add(candidate);
        }
 else {
          String relPath=FileUtil.getRelativePath(localJavaHome,localJarPath,'/');
          if (relPath != null) {
            if (relPath.contains("..")) {
              relPath=FileUtil.getRelativePath(FileUtil.toSystemIndependentName(new File(localJavaHome).getParent()),localJarPath,'/');
            }
            if (relPath != null) {
              final File targetFile=new File(sdkHome,relPath);
              cp.add(targetFile);
            }
          }
        }
      }
    }
 catch (    Throwable th) {
      LOG.info(th);
    }
  }
  return new ArrayList<File>(cp);
}
