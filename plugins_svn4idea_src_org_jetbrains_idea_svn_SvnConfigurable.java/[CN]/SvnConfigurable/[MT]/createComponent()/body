{
  myComponent=new JPanel();
  GridBagLayout layout=new GridBagLayout();
  myComponent.setLayout(layout);
  GridBagConstraints gb=new GridBagConstraints();
  gb.weightx=0;
  gb.weighty=0;
  gb.gridx=0;
  gb.gridy=0;
  gb.anchor=GridBagConstraints.WEST;
  gb.gridwidth=3;
  myUseDefaultCheckBox=new JCheckBox(SvnBundle.message("checkbox.configure.use.system.default.configuration.directory"));
  DialogUtil.registerMnemonic(myUseDefaultCheckBox);
  add(myUseDefaultCheckBox,gb);
  myUseDefaultCheckBox.addActionListener(this);
  gb.gridy+=1;
  gb.fill=GridBagConstraints.HORIZONTAL;
  gb.gridwidth=3;
  gb.insets=new Insets(5,5,1,5);
  JLabel label=new JLabel(SvnBundle.message("label.configuration.configuration.directory"));
  myConfigurationDirectoryLabel=label;
  myConfigurationDirectoryText=new TextFieldWithBrowseButton(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (myBrowserDescriptor == null) {
        myBrowserDescriptor=new FileChooserDescriptor(false,true,false,false,false,false);
        myBrowserDescriptor.setShowFileSystemRoots(true);
        myBrowserDescriptor.setTitle(SvnBundle.message("dialog.title.select.configuration.directory"));
        myBrowserDescriptor.setDescription(SvnBundle.message("dialog.description.select.configuration.directory"));
        myBrowserDescriptor.setHideIgnored(false);
      }
      @NonNls String path=myConfigurationDirectoryText.getText().trim();
      path="file://" + path.replace(File.separatorChar,'/');
      VirtualFile root=VirtualFileManager.getInstance().findFileByUrl(path);
      String oldValue=PropertiesComponent.getInstance().getValue("FileChooser.showHiddens");
      PropertiesComponent.getInstance().setValue("FileChooser.showHiddens",Boolean.TRUE.toString());
      VirtualFile[] files=FileChooser.chooseFiles(myComponent,myBrowserDescriptor,root);
      PropertiesComponent.getInstance().setValue("FileChooser.showHiddens",oldValue);
      if (files == null || files.length != 1 || files[0] == null) {
        return;
      }
      myConfigurationDirectoryText.setText(files[0].getPath().replace('/',File.separatorChar));
    }
  }
);
  myConfigurationDirectoryText.setEditable(false);
  DialogUtil.registerMnemonic(label,myConfigurationDirectoryText);
  add(label,gb);
  gb.gridy+=1;
  gb.fill=GridBagConstraints.HORIZONTAL;
  gb.weightx=1;
  gb.insets=new Insets(0,5,5,0);
  gb.gridwidth=3;
  add(myConfigurationDirectoryText,gb);
  gb.weighty=0;
  gb.insets=new Insets(5,5,5,5);
  gb.weightx=0;
  gb.fill=GridBagConstraints.NONE;
  gb.gridwidth=1;
  gb.gridheight=1;
  gb.gridx=0;
  gb.gridy+=1;
  myClearAuthButton=new JButton(SvnBundle.message("button.text.clear.authentication.cache"));
  DialogUtil.registerMnemonic(myClearAuthButton);
  myClearAuthButton.addActionListener(this);
  add(myClearAuthButton,gb);
  gb.gridwidth=2;
  gb.gridx=1;
  gb.fill=GridBagConstraints.HORIZONTAL;
  label=new JLabel(SvnBundle.message("label.text.delete.stored.credentials"));
  label.setEnabled(false);
  add(label,gb);
  gb.fill=GridBagConstraints.NONE;
  gb.gridheight=1;
  gb.gridx=0;
  gb.gridy+=1;
  gb.weighty=1;
  gb.weightx=1;
  gb.fill=GridBagConstraints.HORIZONTAL;
  gb.gridwidth=3;
  add(new JLabel(),gb);
  return myComponent;
}
