{
  super(project);
  myHideReplace=hideReplace;
  setTitle(title);
  init();
  ClickListener listener=new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent event){
      doOKAction();
      return true;
    }
  }
;
  listener.installOn(myCurrentWindowButton);
  listener.installOn(myOpenInNewWindowButton);
  final String mode=PropertiesComponent.getInstance().getValue(MODE_PROPERTY);
  if (MODE_NEW.equals(mode)) {
    myOpenInNewWindowButton.setSelected(true);
  }
 else   if (mode == null || MODE_REPLACE.equals(mode) || hideReplace) {
    myCurrentWindowButton.setSelected(true);
    myAddCheckbox.setSelected(false);
  }
 else {
    myCurrentWindowButton.setSelected(true);
    myAddCheckbox.setSelected(true);
  }
  if (hideReplace) {
    myAddCheckbox.setVisible(false);
  }
  myAddCheckbox.setEnabled(myCurrentWindowButton.isSelected());
  final ActionListener listener1=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myAddCheckbox.setEnabled(myCurrentWindowButton.isSelected());
    }
  }
;
  myCurrentWindowButton.addActionListener(listener1);
  myOpenInNewWindowButton.addActionListener(listener1);
}
