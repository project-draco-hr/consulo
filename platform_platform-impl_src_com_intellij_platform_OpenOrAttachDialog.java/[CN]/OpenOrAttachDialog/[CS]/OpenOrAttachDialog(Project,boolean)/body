{
  super(project);
  myHideReplace=hideReplace;
  setTitle("Open Project");
  init();
  MouseAdapter listener=new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      if (e.getButton() == MouseEvent.BUTTON1 && e.getClickCount() == 2) {
        doOKAction();
      }
    }
  }
;
  myCurrentWindowButton.addMouseListener(listener);
  myOpenInNewWindowButton.addMouseListener(listener);
  final String mode=PropertiesComponent.getInstance().getValue(MODE_PROPERTY);
  if (MODE_NEW.equals(mode)) {
    myOpenInNewWindowButton.setSelected(true);
  }
 else   if (MODE_REPLACE.equals(mode) || hideReplace) {
    myCurrentWindowButton.setSelected(true);
    myReplaceCheckBox.setSelected(true);
  }
 else {
    myCurrentWindowButton.setSelected(true);
    myReplaceCheckBox.setSelected(false);
  }
  if (hideReplace) {
    myReplaceCheckBox.setVisible(false);
  }
  myReplaceCheckBox.setEnabled(myCurrentWindowButton.isSelected());
  final ActionListener listener1=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myReplaceCheckBox.setEnabled(myCurrentWindowButton.isSelected());
    }
  }
;
  myCurrentWindowButton.addActionListener(listener1);
  myOpenInNewWindowButton.addActionListener(listener1);
}
