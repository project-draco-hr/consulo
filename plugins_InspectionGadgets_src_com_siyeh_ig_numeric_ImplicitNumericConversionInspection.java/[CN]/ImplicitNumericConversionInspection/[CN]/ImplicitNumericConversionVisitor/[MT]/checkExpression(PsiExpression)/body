{
  final PsiElement parent=expression.getParent();
  if (parent != null && parent instanceof PsiParenthesizedExpression) {
    return;
  }
  final PsiType expressionType=expression.getType();
  if (!ClassUtils.isPrimitiveNumericType(expressionType)) {
    return;
  }
  final PsiType expectedType=ExpectedTypeUtils.findExpectedType(expression);
  if (!ClassUtils.isPrimitiveNumericType(expectedType)) {
    return;
  }
  if (expectedType.equals(expressionType)) {
    return;
  }
  if (m_ignoreWideningConversions && hasLowerPrecision(expressionType,expectedType)) {
    return;
  }
  registerError(expression);
}
