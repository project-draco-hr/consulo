{
  final Ref<Transferable> result=new Ref<Transferable>();
  final JRootPane pane=getRootPane();
  if (pane != null) {
    try {
      Runnable run=new Runnable(){
        @Override public void run(){
          ID synchronizer_=Foundation.getClass("ClipboardSynchronizer_");
          final ID synchronizer=Foundation.invoke(Foundation.invoke(synchronizer_,"alloc"),"init");
          Foundation.invoke(synchronizer,"performSelectorOnMainThread:withObject:waitUntilDone:",Foundation.createSelector("run:"),null,false);
          pane.putClientProperty(MAC_CLIPBOARD_SYNC_ACTIVE,Boolean.TRUE);
          MacUtil.startModal(pane,MAC_CLIPBOARD_SYNC_ACTIVE);
          Foundation.cfRelease(synchronizer);
          Object contents=pane.getClientProperty(CLIPBOARD_CONTENTS);
          pane.putClientProperty(CLIPBOARD_CONTENTS,null);
          if (contents != null) {
            result.set((Transferable)contents);
          }
        }
      }
;
      if (SwingUtilities.isEventDispatchThread()) {
        run.run();
      }
 else {
        SwingUtilities.invokeAndWait(run);
      }
      Transferable transferable=result.get();
      if (transferable != null)       return transferable;
    }
 catch (    InterruptedException e) {
    }
catch (    InvocationTargetException e) {
    }
  }
  return null;
}
