{
  final Ref<Transferable> result=new Ref<Transferable>();
  if (Registry.is("ide.mac.useNativeClipboard.async")) {
    final JRootPane pane=getRootPane();
    if (pane != null) {
      try {
        Runnable run=new Runnable(){
          @Override public void run(){
            ID synchronizer_=Foundation.getClass("ClipboardSynchronizer_");
            final ID synchronizer=Foundation.invoke(Foundation.invoke(synchronizer_,"alloc"),"init");
            Foundation.invoke(synchronizer,"performSelectorOnMainThread:withObject:waitUntilDone:",Foundation.createSelector("run:"),null,false);
            pane.putClientProperty(MacUtil.MAC_NATIVE_WINDOW_SHOWING,Boolean.TRUE);
            MacUtil.startModal(pane);
            Foundation.cfRelease(synchronizer);
            Object contents=pane.getClientProperty(CLIPBOARD_CONTENTS);
            pane.putClientProperty(CLIPBOARD_CONTENTS,null);
            if (contents != null) {
              result.set((Transferable)contents);
            }
          }
        }
;
        if (SwingUtilities.isEventDispatchThread()) {
          run.run();
        }
 else {
          SwingUtilities.invokeAndWait(run);
        }
        Transferable transferable=result.get();
        if (transferable != null)         return transferable;
      }
 catch (      InterruptedException e) {
      }
catch (      InvocationTargetException e) {
      }
    }
    return null;
  }
  Foundation.executeOnMainThread(new Runnable(){
    @Override public void run(){
      Transferable transferable=getClipboardContentNatively();
      if (transferable != null) {
        result.set(transferable);
      }
    }
  }
,true,true);
  return result.get();
}
