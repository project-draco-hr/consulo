{
  final ReadonlyStatusHandler.OperationStatus operationStatus=ensureConfigFilesWritable();
  if (operationStatus == null) {
    throw new IOException();
  }
 else   if (operationStatus.hasReadonlyFiles()) {
    MessagesEx.error(myProject,ProjectBundle.message("project.save.error",operationStatus.getReadonlyFilesMessage())).showLater();
    throw new SaveCancelledException();
  }
  final ProjectConversionHelper conversionHelper=getConversionHelper();
  final XmlElementStorage wsStorage=(XmlElementStorage)getStateStorageManager().getFileStateStorage(WS_FILE_STORAGE);
  if (conversionHelper != null && wsStorage != null) {
    try {
      final Element root=wsStorage.getRootElement();
      if (root != null) {
        conversionHelper.convertWorkspaceRootToOldFormat(root);
      }
    }
 catch (    StateStorage.StateStorageException e) {
    }
  }
  try {
    for (    SaveSession moduleSaveSession : myModuleSaveSessions) {
      moduleSaveSession.save();
    }
    super.save();
  }
  finally {
    if (conversionHelper != null && wsStorage != null) {
      try {
        final Element root=wsStorage.getDocument().getRootElement();
        if (root != null) {
          conversionHelper.convertWorkspaceRootToNewFormat(root);
        }
      }
 catch (      StateStorage.StateStorageException e) {
      }
    }
  }
  return this;
}
