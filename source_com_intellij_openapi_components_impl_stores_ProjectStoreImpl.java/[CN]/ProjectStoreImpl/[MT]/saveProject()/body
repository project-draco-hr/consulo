{
  try {
    if (!ourSaveSettingsInProgress) {
      try {
        ourSaveSettingsInProgress=true;
        PathMacroManager.startLoggingUsedMacros();
        myProject.saveSettingsSavingComponents();
        final Module[] modules=ModuleManager.getInstance(myProject).getModules();
        final ReadonlyStatusHandler.OperationStatus operationStatus=ensureConfigFilesWritable();
        if (operationStatus.hasReadonlyFiles()) {
          MessagesEx.error(myProject,ProjectBundle.message("project.save.error",operationStatus.getReadonlyFilesMessage())).showLater();
          return;
        }
        final Exception[] exception=new Exception[]{null};
        CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
          public void run(){
            for (            Module module : modules) {
              try {
                ((ModuleImpl)module).getStateStore().save();
              }
 catch (              Exception e) {
                exception[0]=e;
                return;
              }
            }
            try {
              save();
            }
 catch (            Exception e) {
              exception[0]=e;
            }
          }
        }
,ProjectBundle.message("project.save.settings.command"),null);
        if (exception[0] != null) {
          LOG.info(exception[0]);
          MessagesEx.error(myProject,ProjectBundle.message("project.save.error",exception[0].getMessage())).showLater();
        }
      }
  finally {
        PathMacroManager.endLoggingUsedMacros();
        ourSaveSettingsInProgress=false;
      }
    }
  }
  finally {
    ShutDownTracker.getInstance().unregisterStopperThread(Thread.currentThread());
  }
}
