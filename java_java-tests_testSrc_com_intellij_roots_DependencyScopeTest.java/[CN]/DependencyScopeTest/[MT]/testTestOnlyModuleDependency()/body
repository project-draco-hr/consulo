{
  Module moduleA=createModule("a.iml",StdModuleTypes.JAVA);
  Module moduleB=addDependentModule(moduleA,DependencyScope.TEST);
  VirtualFile classB=myFixture.createFile("b/Test.java","public class Test { }");
  assertTrue(moduleA.getModuleWithDependenciesAndLibrariesScope(true).contains(classB));
  assertFalse(moduleA.getModuleWithDependenciesAndLibrariesScope(false).contains(classB));
  assertFalse(moduleA.getModuleWithDependenciesAndLibrariesScope(false).isSearchInModuleContent(moduleB));
  final VirtualFile[] compilationClasspath=ModuleRootManager.getInstance(moduleA).getFiles(OrderRootType.COMPILATION_CLASSES);
  assertEquals(1,compilationClasspath.length);
  final VirtualFile[] productionCompilationClasspath=ModuleRootManager.getInstance(moduleA).getFiles(OrderRootType.PRODUCTION_COMPILATION_CLASSES);
  assertEquals(0,productionCompilationClasspath.length);
  final PathsList pathsList=OrderEnumerator.orderEntries(moduleA).recursively().getPathsList();
  assertEquals(1,pathsList.getPathList().size());
  final PathsList pathsListWithoutTests=OrderEnumerator.orderEntries(moduleA).productionOnly().recursively().getPathsList();
  assertEquals(0,pathsListWithoutTests.getPathList().size());
}
