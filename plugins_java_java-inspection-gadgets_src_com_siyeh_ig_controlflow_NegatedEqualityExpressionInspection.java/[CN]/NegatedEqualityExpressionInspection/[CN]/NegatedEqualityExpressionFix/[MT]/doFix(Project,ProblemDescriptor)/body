{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiPrefixExpression)) {
    return;
  }
  final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)parent;
  if (!JavaTokenType.EXCL.equals(prefixExpression.getOperationTokenType())) {
    return;
  }
  final PsiExpression operand=ParenthesesUtils.stripParentheses(prefixExpression.getOperand());
  if (!(operand instanceof PsiBinaryExpression)) {
    return;
  }
  final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)operand;
  final IElementType tokenType=binaryExpression.getOperationTokenType();
  StringBuilder text=new StringBuilder(binaryExpression.getLOperand().getText());
  if (JavaTokenType.EQEQ.equals(tokenType)) {
    text.append("!=");
  }
 else   if (JavaTokenType.NE.equals(tokenType)) {
    text.append("==");
  }
 else {
    return;
  }
  final PsiExpression rhs=binaryExpression.getROperand();
  if (rhs != null) {
    text.append(rhs.getText());
  }
  replaceExpression(prefixExpression,text.toString());
}
