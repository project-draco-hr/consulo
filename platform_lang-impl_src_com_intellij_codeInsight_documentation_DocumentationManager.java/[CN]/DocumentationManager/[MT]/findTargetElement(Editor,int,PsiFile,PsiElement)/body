{
  TargetElementUtilBase util=TargetElementUtilBase.getInstance();
  PsiElement element=editor != null ? util.findTargetElement(editor,ourFlagsForTargetElements,offset) : null;
  assertSameProject(element);
  if (element != null || contextElement != null) {
    final PsiElement adjusted=util.adjustElement(editor,ourFlagsForTargetElements,element,contextElement);
    if (adjusted != null) {
      element=adjusted;
      assertSameProject(element);
    }
  }
  if (element == null && editor != null) {
    element=getElementFromLookup(editor,file);
    assertSameProject(element);
    if (element == null) {
      final PsiReference ref=TargetElementUtilBase.findReference(editor,offset);
      if (ref != null) {
        element=util.adjustReference(ref);
        assertSameProject(element);
        if (element == null && ref instanceof PsiPolyVariantReference) {
          element=ref.getElement();
          assertSameProject(element);
        }
      }
    }
  }
  storeOriginalElement(myProject,contextElement,element);
  return element;
}
