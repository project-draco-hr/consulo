{
  Project project=getProject(element);
  if (!project.isOpen())   return;
  storeOriginalElement(project,originalElement,element);
  myPreviouslyFocused=WindowManagerEx.getInstanceEx().getFocusedComponent(project);
  JBPopup _oldHint=getDocInfoHint();
  if (myToolWindow == null && PropertiesComponent.getInstance().isTrueValue(SHOW_DOCUMENTATION_IN_TOOL_WINDOW)) {
    createToolWindow(element,originalElement);
  }
 else   if (myToolWindow != null) {
    Content content=myToolWindow.getContentManager().getSelectedContent();
    if (content != null) {
      DocumentationComponent component=(DocumentationComponent)content.getComponent();
      if (element.getManager().areElementsEquivalent(component.getElement(),element)) {
        JComponent preferredFocusableComponent=content.getPreferredFocusableComponent();
        boolean focus=requestFocus || CommandProcessor.getInstance().getCurrentCommand() != null;
        if (preferredFocusableComponent != null && focus) {
          IdeFocusManager.getInstance(myProject).requestFocus(preferredFocusableComponent,true);
        }
      }
 else {
        content.setDisplayName(getTitle(element,true));
        fetchDocInfo(getDefaultCollector(element,originalElement),component,true);
      }
    }
    if (!myToolWindow.isVisible()) {
      myToolWindow.show(null);
    }
  }
 else   if (_oldHint != null && _oldHint.isVisible() && _oldHint instanceof AbstractPopup) {
    DocumentationComponent oldComponent=(DocumentationComponent)((AbstractPopup)_oldHint).getComponent();
    fetchDocInfo(getDefaultCollector(element,originalElement),oldComponent);
  }
 else {
    showInPopup(element,requestFocus,updateProcessor,originalElement,closeCallback);
  }
}
