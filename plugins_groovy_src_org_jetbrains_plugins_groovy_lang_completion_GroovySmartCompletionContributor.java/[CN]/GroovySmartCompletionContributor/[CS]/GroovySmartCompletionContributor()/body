{
  extend(CompletionType.SMART,INSIDE_EXPRESSION,new CompletionProvider<CompletionParameters>(){
    @Override protected void addCompletions(    @NotNull final CompletionParameters params,    ProcessingContext context,    @NotNull final CompletionResultSet result){
      final PsiElement position=params.getPosition();
      if (position.getParent() instanceof GrLiteral)       return;
      final THashSet<ExpectedTypeInfo> _infos=new THashSet<ExpectedTypeInfo>();
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          _infos.addAll(Arrays.asList(getExpectedTypes(params)));
        }
      }
);
      final Set<ExpectedTypeInfo> infos=ApplicationManager.getApplication().runReadAction(new Computable<Set<ExpectedTypeInfo>>(){
        public Set<ExpectedTypeInfo> compute(){
          return new THashSet<ExpectedTypeInfo>(_infos,EXPECTED_TYPE_INFO_STRATEGY);
        }
      }
);
      final PsiReference reference=position.getContainingFile().findReferenceAt(params.getOffset());
      if (reference == null)       return;
      final Object[] variants=reference.getVariants();
      for (      Object variant : variants) {
        PsiType type=null;
        if (variant instanceof PsiElement) {
          type=getTypeByElement((PsiElement)variant,position);
        }
 else         if (variant instanceof String) {
          if ("true".equals(variant) || "false".equals(variant)) {
            type=PsiType.BOOLEAN;
          }
        }
        for (        ExpectedTypeInfo info : infos) {
          if (TypesUtil.isAssignable(info.getType(),type,position.getManager(),GlobalSearchScope.allScope(position.getProject()))) {
            final LookupElement lookupElement=CompletionData.objectToLookupItem(variant);
            result.addElement(lookupElement);
            break;
          }
        }
      }
    }
  }
);
}
