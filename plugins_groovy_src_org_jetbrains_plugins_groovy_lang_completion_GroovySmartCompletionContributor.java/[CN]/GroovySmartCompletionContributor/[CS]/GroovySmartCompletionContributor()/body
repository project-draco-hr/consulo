{
  extend(CompletionType.SMART,INSIDE_EXPRESSION,new CompletionProvider<CompletionParameters>(){
    @Override protected void addCompletions(    @NotNull final CompletionParameters params,    ProcessingContext context,    @NotNull final CompletionResultSet result){
      final PsiElement position=params.getPosition();
      if (position.getParent() instanceof GrLiteral)       return;
      final THashSet<TypeConstraint> _infos=new THashSet<TypeConstraint>();
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          _infos.addAll(Arrays.asList(getExpectedTypes(params)));
        }
      }
);
      final Set<TypeConstraint> infos=ApplicationManager.getApplication().runReadAction(new Computable<Set<TypeConstraint>>(){
        public Set<TypeConstraint> compute(){
          return new THashSet<TypeConstraint>(_infos,EXPECTED_TYPE_INFO_STRATEGY);
        }
      }
);
      final PsiElement reference=position.getParent();
      if (reference == null)       return;
      if (reference instanceof GrReferenceElement) {
        ((GrReferenceElement)reference).processVariants(new Consumer<Object>(){
          public void consume(          Object variant){
            PsiType type=null;
            if (variant instanceof PsiElement) {
              type=getTypeByElement((PsiElement)variant,position);
            }
 else             if (variant instanceof String) {
              if ("true".equals(variant) || "false".equals(variant)) {
                type=PsiType.BOOLEAN;
              }
            }
            if (type == null)             return;
            for (            TypeConstraint info : infos) {
              if (info.satisfied(type,position.getManager(),GlobalSearchScope.allScope(position.getProject()))) {
                final LookupElement lookupElement=LookupItemUtil.objectToLookupItem(variant);
                result.addElement(lookupElement);
                break;
              }
            }
          }
        }
);
      }
    }
  }
);
}
