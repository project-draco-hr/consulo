{
  super(name);
  int testClassCount=0;
  final Set allNames=new HashSet(Arrays.asList(classMethodNames));
  for (int i=0; i < classMethodNames.length; i++) {
    String classMethodName=classMethodNames[i];
    Test suite=TestRunnerUtil.createClassOrMethodSuite(runner,classMethodName);
    if (suite != null) {
      skipSuiteComponents(allNames,suite);
    }
  }
  for (int i=0; i < classMethodNames.length; i++) {
    String classMethodName=classMethodNames[i];
    Test suite=TestRunnerUtil.createClassOrMethodSuite(runner,classMethodName);
    if (suite != null) {
      final boolean isTestSuite=suite instanceof TestSuite;
      if (!isTestSuite || allNames.contains(((TestSuite)suite).getName())) {
        if (isTestSuite && ((TestSuite)suite).getName() == null) {
          attachSuiteInfo(suite,classMethodName);
        }
        addTest(suite);
        testClassCount++;
      }
    }
  }
  String message=TestRunnerUtil.testsFoundInPackageMesage(testClassCount,name);
  System.out.println(message);
}
