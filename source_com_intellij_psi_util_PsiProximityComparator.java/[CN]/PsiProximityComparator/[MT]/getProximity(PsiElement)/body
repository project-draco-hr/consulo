{
  if (myContext == null)   return -1;
  Module contextModule=ModuleUtil.findModuleForPsiElement(myContext);
  if (contextModule == null)   return -1;
  if (!element.isPhysical())   return -1;
  final PsiElement context=PsiTreeUtil.findCommonContext(myContext,element);
  if (PsiTreeUtil.getParentOfType(context,PsiMethod.class) != null)   return 0;
  if (PsiTreeUtil.getParentOfType(context,PsiClass.class) != null)   return 1;
  Module elementModule=ModuleUtil.findModuleForPsiElement(element);
  if (contextModule == elementModule)   return 2;
  if (elementModule != null) {
    return elementModule.getProject() == contextModule.getProject() ? 3 : 4;
  }
  ProjectFileIndex fileIndex=ProjectRootManager.getInstance(myProject).getFileIndex();
  VirtualFile virtualFile=PsiUtil.getVirtualFile(element);
  List<OrderEntry> orderEntries=virtualFile == null ? Collections.<OrderEntry>emptyList() : fileIndex.getOrderEntriesForFile(virtualFile);
  if (orderEntries.isEmpty())   return 7;
  OrderEntry orderEntry=orderEntries.get(0);
  return orderEntry instanceof JdkOrderEntry ? 6 : 5;
}
