{
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 1) {
    return null;
  }
  final PsiExpression argument=arguments[0];
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier == null) {
    return null;
  }
  final String qualifierText=qualifier.getText();
  if (argument instanceof PsiNewExpression) {
    final PsiNewExpression newExpression=(PsiNewExpression)argument;
    final PsiExpression[] dimensions=newExpression.getArrayDimensions();
    if (dimensions.length != 1) {
      return null;
    }
    final PsiExpression dimension=dimensions[0];
    @NonNls final String replacementText=qualifierText + ".size()";
    return getElementText(expression,dimension,replacementText);
  }
 else   if (argument instanceof PsiReferenceExpression) {
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)argument;
    final PsiArrayType type=(PsiArrayType)referenceExpression.getType();
    if (type == null) {
      return null;
    }
    final PsiType componentType=type.getComponentType();
    final String typeText=componentType.getCanonicalText();
    @NonNls final String replacementText="new " + typeText + "["+ qualifierText+ ".size()]";
    return getElementText(expression,referenceExpression,replacementText);
  }
  return null;
}
