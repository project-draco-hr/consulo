{
  if (!(element instanceof PsiMethodCallExpression)) {
    return null;
  }
  final PsiMethodCallExpression expression=(PsiMethodCallExpression)element;
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 1) {
    return null;
  }
  final PsiExpression argument=arguments[0];
  if (!(argument instanceof PsiNewExpression)) {
    return null;
  }
  final PsiNewExpression newExpression=(PsiNewExpression)argument;
  final PsiExpression[] dimensions=newExpression.getArrayDimensions();
  if (dimensions.length != 1) {
    return null;
  }
  final PsiExpression dimension=dimensions[0];
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier == null) {
    return null;
  }
  final String text=qualifier.getText();
  final String replacementText=text + ".size()";
  final StringBuilder builder=new StringBuilder();
  appendElementText(expression,dimension,replacementText,builder);
  return builder.toString();
}
