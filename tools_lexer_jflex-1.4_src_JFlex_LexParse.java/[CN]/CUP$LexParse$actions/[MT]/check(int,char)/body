{
switch (type) {
case sym.JLETTERCLASS:
    return Character.isJavaIdentifierStart(c);
case sym.JLETTERDIGITCLASS:
  return Character.isJavaIdentifierPart(c);
case sym.LETTERCLASS:
return Character.isLetter(c);
case sym.DIGITCLASS:
return Character.isDigit(c);
case sym.UPPERCLASS:
return Character.isUpperCase(c);
case sym.LOWERCLASS:
return Character.isLowerCase(c);
case sym.UNICODE_UNASSIGNED:
return Character.getType(c) == Character.UNASSIGNED;
case sym.UNICODE_UPPERCASE_LETTER:
return Character.getType(c) == Character.UPPERCASE_LETTER;
case sym.UNICODE_LOWERCASE_LETTER:
return Character.getType(c) == Character.LOWERCASE_LETTER;
case sym.UNICODE_TITLECASE_LETTER:
return Character.getType(c) == Character.TITLECASE_LETTER;
case sym.UNICODE_MODIFIER_LETTER:
return Character.getType(c) == Character.MODIFIER_LETTER;
case sym.UNICODE_OTHER_LETTER:
return Character.getType(c) == Character.OTHER_LETTER;
case sym.UNICODE_NON_SPACING_MARK:
return Character.getType(c) == Character.NON_SPACING_MARK;
case sym.UNICODE_ENCLOSING_MARK:
return Character.getType(c) == Character.ENCLOSING_MARK;
case sym.UNICODE_COMBINING_SPACING_MARK:
return Character.getType(c) == Character.COMBINING_SPACING_MARK;
case sym.UNICODE_DECIMAL_DIGIT_NUMBER:
return Character.getType(c) == Character.DECIMAL_DIGIT_NUMBER;
case sym.UNICODE_LETTER_NUMBER:
return Character.getType(c) == Character.LETTER_NUMBER;
case sym.UNICODE_OTHER_NUMBER:
return Character.getType(c) == Character.OTHER_NUMBER;
case sym.UNICODE_SPACE_SEPARATOR:
return Character.getType(c) == Character.SPACE_SEPARATOR;
case sym.UNICODE_LINE_SEPARATOR:
return Character.getType(c) == Character.LINE_SEPARATOR;
case sym.UNICODE_PARAGRAPH_SEPARATOR:
return Character.getType(c) == Character.PARAGRAPH_SEPARATOR;
case sym.UNICODE_CONTROL:
return Character.getType(c) == Character.CONTROL;
case sym.UNICODE_FORMAT:
return Character.getType(c) == Character.FORMAT;
case sym.UNICODE_PRIVATE_USE:
return Character.getType(c) == Character.PRIVATE_USE;
case sym.UNICODE_SURROGATE:
return Character.getType(c) == Character.SURROGATE;
case sym.UNICODE_DASH_PUNCTUATION:
return Character.getType(c) == Character.DASH_PUNCTUATION;
case sym.UNICODE_START_PUNCTUATION:
return Character.getType(c) == Character.START_PUNCTUATION;
case sym.UNICODE_END_PUNCTUATION:
return Character.getType(c) == Character.END_PUNCTUATION;
case sym.UNICODE_CONNECTOR_PUNCTUATION:
return Character.getType(c) == Character.CONNECTOR_PUNCTUATION;
case sym.UNICODE_OTHER_PUNCTUATION:
return Character.getType(c) == Character.OTHER_PUNCTUATION;
case sym.UNICODE_MATH_SYMBOL:
return Character.getType(c) == Character.MATH_SYMBOL;
case sym.UNICODE_CURRENCY_SYMBOL:
return Character.getType(c) == Character.CURRENCY_SYMBOL;
case sym.UNICODE_MODIFIER_SYMBOL:
return Character.getType(c) == Character.MODIFIER_SYMBOL;
case sym.UNICODE_OTHER_SYMBOL:
return Character.getType(c) == Character.OTHER_SYMBOL;
case sym.UNICODE_INITIAL_QUOTE_PUNCTUATION:
return Character.getType(c) == Character.INITIAL_QUOTE_PUNCTUATION;
case sym.UNICODE_FINAL_QUOTE_PUNCTUATION:
return Character.getType(c) == Character.FINAL_QUOTE_PUNCTUATION;
default :
return false;
}
}
