{
  try {
    StackFrameDescriptorImpl stackDescriptor=(StackFrameDescriptorImpl)getNode().getDescriptor();
    StackFrameProxyImpl frame=stackDescriptor.getStackFrame();
    LOG.assertTrue(frame.threadProxy().isSuspended());
    ObjectReference thisObjectReference=frame.thisObject();
    EvaluationContextImpl evaluationContext=getDebuggerContext().createEvaluationContext();
    if (thisObjectReference != null) {
      myChildren.add(myDescriptorManager.createNode(myDescriptorManager.getThisDescriptor(stackDescriptor,thisObjectReference),evaluationContext));
    }
 else {
      ReferenceType type=frame.location().method().declaringType();
      myChildren.add(myDescriptorManager.createNode(myDescriptorManager.getStaticDescriptor(stackDescriptor,type),evaluationContext));
    }
    try {
      for (Iterator<LocalVariableProxyImpl> iterator=frame.visibleVariables().iterator(); iterator.hasNext(); ) {
        LocalVariableProxyImpl local=iterator.next();
        myChildren.add(myDescriptorManager.createNode(myDescriptorManager.getLocalVariableDescriptor(stackDescriptor,local),evaluationContext));
      }
    }
 catch (    EvaluateException e) {
      myChildren.add(myDescriptorManager.createMessageNode(new MessageDescriptor(e.getMessage())));
    }
  }
 catch (  EvaluateException e) {
    myChildren.clear();
    myChildren.add(myDescriptorManager.createMessageNode(new MessageDescriptor(e.getMessage())));
  }
  updateUI();
}
