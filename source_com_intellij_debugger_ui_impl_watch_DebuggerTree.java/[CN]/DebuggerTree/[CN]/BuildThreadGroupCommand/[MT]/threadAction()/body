{
  ThreadGroupDescriptorImpl groupDescriptor=(ThreadGroupDescriptorImpl)getNode().getDescriptor();
  ThreadGroupReferenceProxyImpl threadGroup=groupDescriptor.getThreadGroupReference();
  List threads=new ArrayList(threadGroup.threads());
  Collections.sort(threads,ThreadReferenceProxyImpl.ourComparator);
  EvaluationContextImpl evaluationContext=getDebuggerContext().createEvaluationContext();
  boolean showCurrent=ThreadsViewSettings.getInstance().SHOW_CURRENT_THREAD;
  for (Iterator it=threadGroup.threadGroups().iterator(); it.hasNext(); ) {
    ThreadGroupReferenceProxyImpl group=(ThreadGroupReferenceProxyImpl)it.next();
    if (group != null) {
      DebuggerTreeNodeImpl threadNode=myDescriptorManager.createNode(myDescriptorManager.getThreadGroupDescriptor(groupDescriptor,group),evaluationContext);
      if (showCurrent && ((ThreadGroupDescriptorImpl)threadNode.getDescriptor()).isCurrent()) {
        myChildren.add(0,threadNode);
      }
 else {
        myChildren.add(threadNode);
      }
    }
  }
  ArrayList<DebuggerTreeNodeImpl> threadNodes=new ArrayList<DebuggerTreeNodeImpl>();
  for (Iterator it=threads.iterator(); it.hasNext(); ) {
    ThreadReferenceProxyImpl thread=(ThreadReferenceProxyImpl)it.next();
    if (thread != null) {
      DebuggerTreeNodeImpl threadNode=myDescriptorManager.createNode(myDescriptorManager.getThreadDescriptor(groupDescriptor,thread),evaluationContext);
      if (showCurrent && ((ThreadDescriptorImpl)threadNode.getDescriptor()).isCurrent()) {
        threadNodes.add(0,threadNode);
      }
 else {
        threadNodes.add(threadNode);
      }
    }
  }
  myChildren.addAll(threadNodes);
  updateUI();
}
