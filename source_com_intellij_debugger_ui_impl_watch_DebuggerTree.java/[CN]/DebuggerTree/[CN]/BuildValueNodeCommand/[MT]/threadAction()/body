{
  ValueDescriptorImpl descriptor=(ValueDescriptorImpl)getNode().getDescriptor();
  try {
    descriptor.getRenderer(getSuspendContext().getDebugProcess()).buildChildren(descriptor.getValue(),new ChildrenBuilder(){
      public NodeManagerImpl getNodeManager(){
        return myDescriptorManager;
      }
      public NodeManagerImpl getDescriptorManager(){
        return myDescriptorManager;
      }
      public ValueDescriptorImpl getParentDescriptor(){
        return (ValueDescriptorImpl)getNode().getDescriptor();
      }
      public void setChildren(      final List<DebuggerTreeNode> children){
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            final DebuggerTreeNodeImpl node=getNode();
            node.removeAllChildren();
            for (Iterator<DebuggerTreeNode> iterator=children.iterator(); iterator.hasNext(); ) {
              DebuggerTreeNode debuggerTreeNode=iterator.next();
              node.add(debuggerTreeNode);
            }
            node.childrenChanged(false);
          }
        }
);
      }
    }
,getDebuggerContext().createEvaluationContext());
  }
 catch (  ObjectCollectedException e) {
    getNode().removeAllChildren();
    getNode().add(getNodeFactory().createMessageNode(new MessageDescriptor("Cannot evaluate descendants, object was collected. " + e.getMessage())));
    getNode().childrenChanged(false);
  }
}
