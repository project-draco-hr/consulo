{
  if (pattern.isOn(descriptor.getOldQName())) {
    if (composite == null) {
      composite=new RefactoringElementListenerComposite();
    }
    composite.addListener(new RefactoringElementListener(){
      @Override public void elementMoved(      @NotNull PsiElement newElement){
        setName(newElement);
      }
      @Override public void elementRenamed(      @NotNull PsiElement newElement){
        setName(newElement);
      }
      private void setName(      @NotNull PsiElement newElement){
        LOG.assertTrue(newElement instanceof PsiQualifiedNamedElement);
        try {
          final String newPattern=text.replace(descriptor.getOldQName(),((PsiQualifiedNamedElement)newElement).getQualifiedName());
          final PackageSet newSet=PackageSetFactory.getInstance().compile(newPattern);
          NamedScope newScope=new NamedScope(descriptor.getScope().getName(),newSet);
          final NamedScope[] currentScopes=descriptor.getHolder().getEditableScopes();
          currentScopes[descriptor.getIdx()]=newScope;
          descriptor.getHolder().setScopes(currentScopes);
        }
 catch (        ParsingException ignore) {
        }
      }
    }
);
  }
  return composite;
}
