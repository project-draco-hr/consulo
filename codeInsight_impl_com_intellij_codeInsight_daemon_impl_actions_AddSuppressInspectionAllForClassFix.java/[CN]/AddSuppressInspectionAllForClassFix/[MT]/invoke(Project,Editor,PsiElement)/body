{
  final PsiDocCommentOwner container=getContainer(element);
  LOG.assertTrue(container != null);
  final ReadonlyStatusHandler.OperationStatus status=ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(container.getContainingFile().getVirtualFile());
  if (status.hasReadonlyFiles())   return;
  if (use15Suppressions(container)) {
    final PsiModifierList modifierList=container.getModifierList();
    if (modifierList != null) {
      final PsiAnnotation annotation=modifierList.findAnnotation(SuppressManagerImpl.SUPPRESS_INSPECTIONS_ANNOTATION_NAME);
      if (annotation != null) {
        annotation.replace(JavaPsiFacade.getInstance(project).getElementFactory().createAnnotationFromText("@" + SuppressManagerImpl.SUPPRESS_INSPECTIONS_ANNOTATION_NAME + ID,container));
        return;
      }
    }
  }
 else {
    PsiDocComment docComment=container.getDocComment();
    if (docComment != null) {
      PsiDocTag noInspectionTag=docComment.findTagByName(SuppressManagerImpl.SUPPRESS_INSPECTIONS_TAG_NAME);
      if (noInspectionTag != null) {
        String tagText="@" + SuppressManagerImpl.SUPPRESS_INSPECTIONS_TAG_NAME + " "+ ID;
        noInspectionTag.replace(JavaPsiFacade.getInstance(project).getElementFactory().createDocTagFromText(tagText,null));
        DaemonCodeAnalyzer.getInstance(project).restart();
        return;
      }
    }
  }
  super.invoke(project,editor,element);
}
