{
  map=new PersistentHashMap<K,Collection<V>>(file,k,new DataExternalizer<Collection<V>>(){
    @Override public void save(    final DataOutput out,    final Collection<V> value) throws IOException {
      final int size=value.size();
      out.writeInt(size);
      for (      V x : value) {
        v.save(out,x);
      }
    }
    @Override public Collection<V> read(    final DataInput in) throws IOException {
      final Collection<V> result=c.create();
      final int size=in.readInt();
      for (int i=0; i < size; i++) {
        result.add(v.read(in));
      }
      return result;
    }
  }
);
  constr=c;
}
