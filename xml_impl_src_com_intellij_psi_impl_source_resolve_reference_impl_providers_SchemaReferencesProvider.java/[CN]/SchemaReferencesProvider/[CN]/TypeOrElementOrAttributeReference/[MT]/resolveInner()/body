{
  final XmlTag tag=PsiTreeUtil.getContextOfType(myElement,XmlTag.class,false);
  if (tag == null)   return PsiUtilCore.NULL_PSI_ELEMENT;
  String canonicalText=getCanonicalText();
  XmlNSDescriptorImpl nsDescriptor=getDescriptor(tag,canonicalText);
  if (myType != null && nsDescriptor != null && nsDescriptor.getTag() != null) {
switch (myType) {
case GroupReference:
      return nsDescriptor.findGroup(canonicalText);
case AttributeGroupReference:
    return nsDescriptor.findAttributeGroup(canonicalText);
case ElementReference:
{
    XmlElementDescriptor descriptor=nsDescriptor.getElementDescriptor(XmlUtil.findLocalNameByQualifiedName(canonicalText),getNamespace(tag,canonicalText),new HashSet<XmlNSDescriptorImpl>(),true);
    return descriptor != null ? descriptor.getDeclaration() : PsiUtilCore.NULL_PSI_ELEMENT;
  }
case AttributeReference:
{
  final String localNameByQualifiedName=XmlUtil.findLocalNameByQualifiedName(canonicalText);
  XmlAttributeDescriptor descriptor=nsDescriptor.getAttribute(localNameByQualifiedName,getNamespace(tag,canonicalText),tag);
  if (descriptor != null)   return descriptor.getDeclaration();
  return PsiUtilCore.NULL_PSI_ELEMENT;
}
case TypeReference:
{
TypeDescriptor typeDescriptor=nsDescriptor.getTypeDescriptor(canonicalText,tag);
if (typeDescriptor instanceof ComplexTypeDescriptor) {
  return ((ComplexTypeDescriptor)typeDescriptor).getDeclaration();
}
 else if (typeDescriptor instanceof TypeDescriptor) {
  return myElement;
}
}
}
}
return PsiUtilCore.NULL_PSI_ELEMENT;
}
