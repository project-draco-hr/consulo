{
  final XmlTag tag=PsiTreeUtil.getContextOfType(myElement,XmlTag.class,true);
  if (tag == null || myType == null)   return ArrayUtil.EMPTY_OBJECT_ARRAY;
  String[] tagNames=null;
switch (myType) {
case GroupReference:
    tagNames=new String[]{GROUP_TAG_NAME};
  break;
case AttributeGroupReference:
tagNames=new String[]{ATTRIBUTE_GROUP_TAG_NAME};
break;
case AttributeReference:
tagNames=new String[]{ATTRIBUTE_TAG_NAME};
break;
case ElementReference:
tagNames=new String[]{ELEMENT_TAG_NAME};
break;
case TypeReference:
tagNames=new String[]{SIMPLE_TYPE_TAG_NAME,COMPLEX_TYPE_TAG_NAME};
break;
}
CompletionProcessor processor=new CompletionProcessor();
processor.tag=tag;
final XmlElement context=PsiTreeUtil.getContextOfType(myElement,XmlElement.class,false);
if (context == null) {
return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
final XmlDocument document=((XmlFile)context.getContainingFile()).getDocument();
if (document == null) {
return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
final XmlTag rootTag=document.getRootTag();
String ourNamespace=rootTag != null ? rootTag.getAttributeValue(TARGET_NAMESPACE) : "";
if (ourNamespace == null) ourNamespace="";
for (String namespace : tag.knownNamespaces()) {
if (ourNamespace.equals(namespace)) continue;
final XmlNSDescriptor nsDescriptor=tag.getNSDescriptor(namespace,true);
if (nsDescriptor instanceof XmlNSDescriptorImpl) {
processNamespace(namespace,processor,nsDescriptor,tagNames);
}
}
XmlNSDescriptor nsDescriptor=(XmlNSDescriptor)document.getMetaData();
if (nsDescriptor != null) {
processNamespace(ourNamespace,processor,nsDescriptor,tagNames);
}
return ArrayUtil.toStringArray(processor.myElements);
}
