{
  final PsiElement parent=element.getParent();
  if (!(parent instanceof XmlAttribute))   return PsiReference.EMPTY_ARRAY;
  final String attrName=((XmlAttribute)parent).getName();
  if (VALUE_ATTR_NAME.equals(attrName)) {
    if (PATTERN_TAG_NAME.equals(((XmlAttribute)parent).getParent().getLocalName())) {
      return new PsiReference[]{new RegExpReference(element)};
    }
 else {
      return PsiReference.EMPTY_ARRAY;
    }
  }
 else   if (NAME_ATTR_NAME.equals(attrName)) {
    return new PsiReference[]{new NameReference(element)};
  }
 else   if (MEMBER_TYPES_ATTR_NAME.equals(attrName)) {
    final List<PsiReference> result=new ArrayList<PsiReference>(1);
    final String text=element.getText();
    int lastIndex=1;
    final int testLength=text.length();
    for (int i=1; i < testLength; ++i) {
      if (Character.isWhitespace(text.charAt(i))) {
        if (lastIndex != i)         result.add(new TypeOrElementOrAttributeReference(element,new TextRange(lastIndex,i)));
        lastIndex=i + 1;
      }
    }
    if (lastIndex != testLength - 1)     result.add(new TypeOrElementOrAttributeReference(element,new TextRange(lastIndex,testLength - 1)));
    return result.toArray(new PsiReference[result.size()]);
  }
 else {
    return new PsiReference[]{createTypeOrElementOrAttributeReference(element)};
  }
}
