{
  Module linkedModule=unprocessedFiles.get(pomFile);
  unprocessedFiles.remove(pomFile);
  if (indicator != null && indicator.isCanceled())   return null;
  if (indicator != null) {
    indicator.setText(ProjectBundle.message("maven.reading.pom",FileUtil.toSystemDependentName(pomFile.getPath())));
  }
  MavenProject mavenProject;
  try {
    mavenProject=projectReader.readBare(pomFile.getPath());
  }
 catch (  Exception e) {
    LOG.info(e);
    return null;
  }
  if (mavenProject == null) {
    LOG.info("Cannot load " + pomFile.getPath());
    return null;
  }
  imported|=linkedModule == null;
  final Node node=new Node(pomFile,mavenProject,imported ? null : linkedModule);
  if (!createChildNodes(projectReader,pomFile,profiles,unprocessedFiles,imported,indicator,mavenProject,node))   return null;
  return node;
}
