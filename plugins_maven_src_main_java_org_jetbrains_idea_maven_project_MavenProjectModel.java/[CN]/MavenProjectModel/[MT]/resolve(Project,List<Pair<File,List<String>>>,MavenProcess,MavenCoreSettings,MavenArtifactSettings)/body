{
  MavenEmbedder embedder=EmbedderFactory.createEmbedderForResolve(coreSettings,myProjectIdToFileMapping);
  try {
    resolveNodes(new MavenProjectReader(embedder),p);
    p.checkCanceled();
    final List<MavenProjectModel.Node> projects=new ArrayList<MavenProjectModel.Node>();
    final List<Artifact> allArtifacts=new ArrayList<Artifact>();
    final LinkedHashMap<File,List<String>> problemsMap=new LinkedHashMap<File,List<String>>();
    visit(new MavenProjectModel.PlainNodeVisitor(){
      public void visit(      MavenProjectModel.Node node){
        if (!node.isValid())         return;
        projects.add(node);
        MavenProject mavenProject=node.getMavenProject();
        collectUnresolvedArtifacts(mavenProject,problemsMap);
        allArtifacts.addAll((Set<Artifact>)mavenProject.getArtifacts());
      }
    }
);
    convertToList(problemsMap,problems);
    refreshResolvedArtifacts(allArtifacts);
    MavenArtifactDownloader d=new MavenArtifactDownloader(artifactSettings,embedder,p);
    d.download(project,projects,false);
  }
  finally {
    EmbedderFactory.releaseEmbedder(embedder);
  }
}
