{
  final SmartPsiElementPointer<PsiExpression>[] pointers=new SmartPsiElementPointer[expressions.length];
  for (int i=0; i < expressions.length; i++) {
    pointers[i]=SmartPointerManager.getInstance(expressions[i].getProject()).createSmartPsiElementPointer(expressions[i]);
  }
  return new LocalQuickFix(){
    @NotNull public String getName(){
      return IntroduceConstantHandler.REFACTORING_NAME;
    }
    public void applyFix(    @NotNull final Project project,    @NotNull ProblemDescriptor descriptor){
      List<PsiExpression> exprList=new ArrayList<PsiExpression>();
      for (      SmartPsiElementPointer<PsiExpression> ptr : pointers) {
        PsiExpression expr=ptr.getElement();
        if (expr != null && expr.isValid()) {
          exprList.add(expr);
        }
      }
      new IntroduceConstantHandler().invoke(project,exprList.toArray(new PsiExpression[exprList.size()]));
    }
    @NotNull public String getFamilyName(){
      return getName();
    }
  }
;
}
