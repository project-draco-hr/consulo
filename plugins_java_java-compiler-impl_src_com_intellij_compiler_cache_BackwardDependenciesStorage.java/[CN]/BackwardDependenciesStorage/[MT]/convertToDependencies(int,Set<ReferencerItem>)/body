{
  final TIntObjectHashMap<Dependency> dependencies=new TIntObjectHashMap<Dependency>();
  for (  ReferencerItem item : data) {
    if (item.qName == classToSkip) {
      continue;
    }
    final Dependency dependency=addDependency(dependencies,item.qName);
    if (item instanceof FieldReferencerItem) {
      dependency.addField(((FieldReferencerItem)item).name);
    }
 else     if (item instanceof MethodReferencerItem) {
      final MethodReferencerItem methodItem=(MethodReferencerItem)item;
      dependency.addMethod(methodItem.name,methodItem.descriptor);
    }
  }
  final Dependency[] dependencyArray=new Dependency[dependencies.size()];
  dependencies.forEachValue(new TObjectProcedure<Dependency>(){
    private int index=0;
    public boolean execute(    Dependency object){
      dependencyArray[index++]=object;
      return true;
    }
  }
);
  return dependencyArray;
}
