{
  startElement(switchStmt);
  PsiElementFactory psiFactory=switchStmt.getManager().getElementFactory();
  PsiExpression caseExpression=switchStmt.getExpression();
  if (caseExpression != null) {
    caseExpression.accept(this);
    generateBoxingUnboxingInstructionFor(caseExpression,PsiType.INT);
    addInstruction(new PopInstruction());
  }
  PsiCodeBlock body=switchStmt.getBody();
  if (body != null) {
    PsiStatement[] statements=body.getStatements();
    PsiSwitchLabelStatement defaultLabel=null;
    for (    PsiStatement statement : statements) {
      if (statement instanceof PsiSwitchLabelStatement) {
        PsiSwitchLabelStatement psiLabelStatement=(PsiSwitchLabelStatement)statement;
        if (psiLabelStatement.isDefaultCase()) {
          defaultLabel=psiLabelStatement;
        }
 else {
          try {
            int offset=getStartOffset(statement);
            PsiExpression caseValue=psiLabelStatement.getCaseValue();
            if (caseExpression instanceof PsiReferenceExpression && ((PsiReferenceExpression)caseExpression).getQualifierExpression() == null && body.getManager().getConstantEvaluationHelper().computeConstantExpression(caseValue) != null) {
              PsiExpression psiComparison=psiFactory.createExpressionFromText(caseExpression.getText() + "==" + caseValue.getText(),switchStmt);
              psiComparison.accept(this);
            }
 else {
              pushUnknown();
            }
            addInstruction(new ConditionalGotoInstruction(offset,false,statement));
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
          }
        }
      }
    }
    int offset=defaultLabel != null ? getStartOffset(defaultLabel) : getEndOffset(body);
    addInstruction(new GotoInstruction(offset));
    body.accept(this);
  }
  finishElement(switchStmt);
}
