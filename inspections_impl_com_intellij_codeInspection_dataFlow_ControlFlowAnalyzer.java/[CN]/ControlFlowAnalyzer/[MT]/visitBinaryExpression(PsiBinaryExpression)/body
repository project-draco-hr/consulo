{
  startElement(expression);
  try {
    DfaValue dfaValue=myFactory.create(expression);
    if (dfaValue != null) {
      addInstruction(new PushInstruction(dfaValue));
    }
 else {
      String op=expression.getOperationSign().getText();
      PsiExpression lExpr=expression.getLOperand();
      PsiExpression rExpr=expression.getROperand();
      if (rExpr == null) {
        pushUnknown();
        return;
      }
      PsiType type=expression.getType();
      boolean shouldUnboxArgs=TypeConversionUtil.isPrimitiveAndNotNull(type);
      if ("&&".equals(op)) {
        generateAndExpression(lExpr,rExpr,shouldUnboxArgs);
      }
 else       if ("||".equals(op)) {
        generateOrExpression(lExpr,rExpr,shouldUnboxArgs);
      }
 else       if ("^".equals(op) && type == PsiType.BOOLEAN) {
        generateXorExpression(expression,lExpr,rExpr,shouldUnboxArgs);
      }
 else {
        lExpr.accept(this);
        if (shouldUnboxArgs) {
          generateUnboxingInstructionFor(lExpr);
        }
        rExpr.accept(this);
        if (shouldUnboxArgs) {
          generateUnboxingInstructionFor(rExpr);
        }
        addInstruction(new BinopInstruction(op,expression.isPhysical() ? expression : null));
      }
    }
  }
  finally {
    finishElement(expression);
  }
}
