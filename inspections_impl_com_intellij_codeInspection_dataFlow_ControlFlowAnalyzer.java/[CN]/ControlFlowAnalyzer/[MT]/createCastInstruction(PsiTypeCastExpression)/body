{
  PsiExpression expr=castExpression.getOperand();
  final PsiTypeElement typeElement=castExpression.getCastType();
  if (typeElement != null && !RedundantCastUtil.isTypeCastSemantical(castExpression)) {
    PsiType castType=typeElement.getType();
    if (expr != null) {
      return new TypeCastInstruction(castExpression,expr,castType);
    }
  }
  return new Instruction(){
    @Override public DfaInstructionState[] apply(    DataFlowRunner runner,    DfaMemoryState memState){
      memState.pop();
      memState.push(DfaUnknownValue.getInstance());
      return super.apply(runner,memState);
    }
    @Override public DfaInstructionState[] accept(    DataFlowRunner runner,    DfaMemoryState stateBefore,    InstructionVisitor visitor){
      return apply(runner,stateBefore);
    }
  }
;
}
