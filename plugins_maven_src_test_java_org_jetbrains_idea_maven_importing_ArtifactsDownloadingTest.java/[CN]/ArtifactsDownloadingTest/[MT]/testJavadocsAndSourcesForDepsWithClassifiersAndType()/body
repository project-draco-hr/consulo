{
  String remoteRepo=FileUtil.toSystemIndependentName(myDir.getPath() + "/repo");
  updateSettingsXmlFully("<settings>" + "<mirrors>" + "  <mirror>"+ "    <id>central</id>"+ "    <url>" + VfsUtil.pathToUrl(remoteRepo) + "</url>"+ "    <mirrorOf>*</mirrorOf>"+ "  </mirror>"+ "</mirrors>"+ "</settings>");
  createDummyArtifact(remoteRepo,"/xxx/xxx/1/xxx-1-sources.jar");
  createDummyArtifact(remoteRepo,"/xxx/xxx/1/xxx-1-javadoc.jar");
  createDummyArtifact(remoteRepo,"/xxx/yyy/1/yyy-1-test-sources.jar");
  createDummyArtifact(remoteRepo,"/xxx/yyy/1/yyy-1-test-javadoc.jar");
  createDummyArtifact(remoteRepo,"/xxx/xxx/1/xxx-1-foo-sources.jar");
  createDummyArtifact(remoteRepo,"/xxx/xxx/1/xxx-1-foo-javadoc.jar");
  createDummyArtifact(remoteRepo,"/xxx/zzz/1/zzz-1-test-foo-sources.jar");
  createDummyArtifact(remoteRepo,"/xxx/zzz/1/zzz-1-test-foo-javadoc.jar");
  importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>xxx</groupId>"+ "    <artifactId>xxx</artifactId>"+ "    <version>1</version>"+ "    <classifier>foo</classifier>"+ "  </dependency>"+ "  <dependency>"+ "    <groupId>xxx</groupId>"+ "    <artifactId>yyy</artifactId>"+ "    <version>1</version>"+ "    <type>test-jar</type>"+ "  </dependency>"+ "  <dependency>"+ "    <groupId>xxx</groupId>"+ "    <artifactId>zzz</artifactId>"+ "    <version>1</version>"+ "    <classifier>foo</classifier>"+ "    <type>test-jar</type>"+ "  </dependency>"+ "</dependencies>");
  List<File> files1=Arrays.asList(new File(getRepositoryPath(),"/xxx/xxx/1/xxx-1-sources.jar"),new File(getRepositoryPath(),"/xxx/xxx/1/xxx-1-javadoc.jar"),new File(getRepositoryPath(),"/xxx/yyy/1/yyy-1-test-sources.jar"),new File(getRepositoryPath(),"/xxx/yyy/1/yyy-1-test-javadoc.jar"));
  List<File> files2=Arrays.asList(new File(getRepositoryPath(),"/xxx/xxx/1/xxx-1-foo-sources.jar"),new File(getRepositoryPath(),"/xxx/xxx/1/xxx-1-foo-javadoc.jar"),new File(getRepositoryPath(),"/xxx/zzz/1/zzz-1-test-foo-sources.jar"),new File(getRepositoryPath(),"/xxx/zzz/1/zzz-1-test-foo-javadoc.jar"));
  for (  File each : files1) {
    assertFalse(each.toString(),each.exists());
  }
  for (  File each : files2) {
    assertFalse(each.toString(),each.exists());
  }
  downloadArtifacts();
  for (  File each : files1) {
    assertTrue(each.toString(),each.exists());
  }
  for (  File each : files2) {
    assertFalse(each.toString(),each.exists());
  }
}
