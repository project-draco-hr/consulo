{
  extend(CompletionType.BASIC,PlatformPatterns.psiElement(PropertiesTokenTypes.KEY_CHARACTERS),new CompletionProvider<CompletionParameters>(){
    @Override protected void addCompletions(    @NotNull CompletionParameters parameters,    ProcessingContext context,    @NotNull CompletionResultSet result){
      PsiElement position=parameters.getPosition();
      if (!DGMUtil.isInDGMFile(position))       return;
      Map<String,String> map=((PropertiesFile)position.getContainingFile()).getNamesMap();
      for (      String key : DGMUtil.KEYS) {
        if (!map.containsKey(key)) {
          result.addElement(LookupElementBuilder.create(key));
        }
      }
    }
  }
);
  extend(CompletionType.BASIC,PlatformPatterns.psiElement(PropertiesTokenTypes.VALUE_CHARACTERS),new CompletionProvider<CompletionParameters>(){
    @Override protected void addCompletions(    @NotNull CompletionParameters parameters,    ProcessingContext context,    @NotNull final CompletionResultSet result){
      PsiElement position=parameters.getPosition();
      if (!DGMUtil.isInDGMFile(position))       return;
      AllClassesGetter.processJavaClasses(parameters,result.getPrefixMatcher(),true,new Consumer<PsiClass>(){
        @Override public void consume(        PsiClass aClass){
          result.addElement(GroovyCompletionUtil.createClassLookupItem(aClass));
        }
      }
);
    }
  }
);
}
