{
  RefactoringActionHandler moveHandler=RefactoringActionHandlerFactory.getInstance().createMoveHandler();
  DataManager dataManager=DataManager.getInstance();
  DataContext dataContext=dataManager.getDataContext();
  final String fqName=aClass.getQualifiedName();
  LOG.assertTrue(fqName != null);
  PsiDirectory directory=PackageUtil.findOrCreateDirectoryForPackage(myCurrentModule,StringUtil.getPackageName(fqName),mySourceRoot,true);
  DataContext context=SimpleDataContext.getSimpleContext(LangDataKeys.TARGET_PSI_ELEMENT.getName(),directory,dataContext);
  moveHandler.invoke(project,new PsiElement[]{aClass},context);
  PsiReference reference=file.findReferenceAt(editor.getCaretModel().getOffset());
  PsiClass newClass=JavaPsiFacade.getInstance(project).findClass(fqName,GlobalSearchScope.moduleScope(myCurrentModule));
  if (reference != null && newClass != null) {
    final QuestionAction action=new AddImportAction(project,reference,editor,newClass);
    action.execute();
  }
}
