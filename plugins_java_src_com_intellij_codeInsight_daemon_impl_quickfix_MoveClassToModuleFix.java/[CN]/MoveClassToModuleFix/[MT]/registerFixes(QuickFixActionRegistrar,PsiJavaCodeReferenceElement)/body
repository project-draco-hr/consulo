{
  final PsiElement psiElement=reference.getElement();
  @NonNls final String referenceName=reference.getRangeInElement().substring(psiElement.getText());
  Project project=psiElement.getProject();
  final PsiFile containingFile=psiElement.getContainingFile();
  if (containingFile == null)   return;
  PsiDirectory dir=containingFile.getContainingDirectory();
  if (dir == null)   return;
  VirtualFile classVFile=containingFile.getVirtualFile();
  if (classVFile == null)   return;
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  final Module currentModule=fileIndex.getModuleForFile(classVFile);
  if (currentModule == null)   return;
  VirtualFile[] sourceRoots=ModuleRootManager.getInstance(currentModule).getSourceRoots();
  if (sourceRoots.length == 0)   return;
  final PsiDirectory sourceDirectory=PsiManager.getInstance(project).findDirectory(sourceRoots[0]);
  if (sourceDirectory == null)   return;
  VirtualFile vsourceRoot=fileIndex.getSourceRootForFile(classVFile);
  if (vsourceRoot == null)   return;
  final PsiDirectory sourceRoot=PsiManager.getInstance(project).findDirectory(vsourceRoot);
  if (sourceRoot == null)   return;
  registrar.register(new MoveClassToModuleFix(referenceName,currentModule,sourceRoot,psiElement));
}
