{
  myFileTextArea.getTextComponent().setEditable(false);
  myFileTextArea.setTitle(DiagnosticBundle.message("error.dialog.filecontent.title"));
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      if (e.getValueIsAdjusting()) {
        return;
      }
      final Attachment selection=myTable.getSelectedObject();
      if (selection != null) {
        LabeledTextComponent.setText(myFileTextArea.getTextComponent(),selection.getContent(),true);
      }
 else {
        LabeledTextComponent.setText(myFileTextArea.getTextComponent(),null,true);
      }
    }
  }
);
  myTable.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final int[] selectedRows=myTable.getSelectedRows();
      boolean aggregateValue=true;
      for (      final int selectedRow : selectedRows) {
        if (selectedRow < 0 || !myTable.isCellEditable(selectedRow,0)) {
          return;
        }
        final Boolean value=(Boolean)myTable.getValueAt(selectedRow,0);
        aggregateValue&=value == null || value.booleanValue();
      }
      for (      int selectedRow : selectedRows) {
        myTable.setValueAt(aggregateValue ? Boolean.FALSE : Boolean.TRUE,selectedRow,0);
      }
      myTable.repaint();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_SPACE,0),JComponent.WHEN_FOCUSED);
}
