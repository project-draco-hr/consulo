{
  try {
    final Document document=file.getViewProvider().getDocument();
    PsiDocumentManagerImpl documentManager=(PsiDocumentManagerImpl)PsiDocumentManager.getInstance(file.getProject());
    PsiToDocumentSynchronizer.DocumentChangeTransaction transaction=documentManager.getSynchronizer().getTransaction(document);
    final PsiFileImpl fileImpl=(PsiFileImpl)file;
    final ASTDiffBuilder astDiffBuilder=new ASTDiffBuilder(fileImpl);
    if (transaction == null) {
      final PomModel model=PomManager.getModel(fileImpl.getProject());
      model.runTransaction(new PomTransactionBase(fileImpl,model.getModelAspect(TreeAspect.class)){
        public PomModelEvent runInner(){
          for (          LogEntry entry : myEntries) {
            entry.doActualPsiChange(file,astDiffBuilder);
          }
          fileImpl.subtreeChanged();
          return new TreeAspectEvent(model,astDiffBuilder.getEvent());
        }
      }
);
    }
 else {
      for (      LogEntry entry : myEntries) {
        entry.doActualPsiChange(file,astDiffBuilder);
      }
      fileImpl.subtreeChanged();
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
