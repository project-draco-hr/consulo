{
  final ToolWindowManager manager=ToolWindowManager.getInstance(project);
  final String toolWindowId=AndroidBundle.message("android.console.tool.window.title");
  ToolWindow toolWindow=manager.getToolWindow(toolWindowId);
  if (toolWindow != null) {
    runAfterActivation.run();
    return;
  }
  toolWindow=manager.registerToolWindow(toolWindowId,true,ToolWindowAnchor.BOTTOM);
  final ConsoleView console=new ConsoleViewImpl(project,false);
  project.putUserData(CONSOLE_VIEW_KEY,console);
  toolWindow.getContentManager().addContent(new ContentImpl(console.getComponent(),"",false));
  final ToolWindowManagerListener listener=new ToolWindowManagerListener(){
    @Override public void toolWindowRegistered(    @NotNull String id){
    }
    @Override public void stateChanged(){
      ToolWindow window=manager.getToolWindow(toolWindowId);
      if (window != null && !window.isVisible()) {
        ((ToolWindowManagerEx)manager).removeToolWindowManagerListener(this);
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          @Override public void run(){
            manager.unregisterToolWindow(toolWindowId);
          }
        }
);
      }
    }
  }
;
  toolWindow.show(new Runnable(){
    @Override public void run(){
      runAfterActivation.run();
      ((ToolWindowManagerEx)manager).addToolWindowManagerListener(listener);
    }
  }
);
}
