{
  LOG.info(commandLine.getCommandLineString());
  OSProcessHandler handler=new OSProcessHandler(commandLine.createProcess(),"");
  final ProcessAdapter listener=new ProcessAdapter(){
    public void onTextAvailable(    final ProcessEvent event,    final Key outputType){
      if (processor != null) {
        final String message=event.getText();
        processor.onTextAvailable(message);
      }
    }
  }
;
  if (!(strategy instanceof WaitingStrategies.DoNotWait)) {
    handler.addProcessListener(listener);
  }
  handler.startNotify();
  try {
    if (!(strategy instanceof WaitingStrategies.WaitForever)) {
      if (strategy instanceof WaitingStrategies.WaitForTime) {
        handler.waitFor(((WaitingStrategies.WaitForTime)strategy).getTimeMs());
      }
    }
 else {
      handler.waitFor();
    }
  }
 catch (  ProcessCanceledException e) {
    return ExecutionStatus.ERROR;
  }
  if (!handler.isProcessTerminated()) {
    return ExecutionStatus.TIMEOUT;
  }
  if (!(strategy instanceof WaitingStrategies.DoNotWait)) {
    handler.removeProcessListener(listener);
  }
  int exitCode=handler.getProcess().exitValue();
  return exitCode == 0 ? ExecutionStatus.SUCCESS : ExecutionStatus.ERROR;
}
