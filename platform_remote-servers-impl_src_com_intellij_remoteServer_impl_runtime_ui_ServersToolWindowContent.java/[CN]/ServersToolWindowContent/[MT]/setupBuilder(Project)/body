{
  ServersTreeStructure structure=new ServersTreeStructure(project);
  myBuilder=new TreeBuilderBase(myTree,structure,myTreeModel){
    @Override protected boolean isAutoExpandNode(    NodeDescriptor nodeDescriptor){
      return nodeDescriptor instanceof ServersTreeStructure.RemoteServerNode || nodeDescriptor instanceof ServersTreeStructure.DeploymentNodeImpl;
    }
  }
;
  Disposer.register(this,myBuilder);
  project.getMessageBus().connect().subscribe(ServerConnectionListener.TOPIC,new ServerConnectionListener(){
    @Override public void onConnectionCreated(    @NotNull ServerConnection<?> connection){
      getBuilder().queueUpdate();
    }
    @Override public void onConnectionStatusChanged(    @NotNull ServerConnection<?> connection){
      getBuilder().queueUpdate();
      updateSelectedServerDetails();
    }
    @Override public void onDeploymentsChanged(    @NotNull ServerConnection<?> connection){
      getBuilder().queueUpdate();
      updateSelectedServerDetails();
    }
  }
);
}
