{
  super(new GridBagLayout());
  this.factory=factory;
  currentObject=null;
  nameLabel=new JLabel(nameLabelText);
  name=new JTextField(3);
  addButton=makeButton("general/add");
  removeButton=makeButton("general/remove");
  copyButton=makeButton("general/copy");
  list=new JList(new DefaultListModel());
  addButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      buttonPressInProgress=true;
      currentObject=factory.create(getUniqueName("unnamed"));
      factory.getObjectList().add(currentObject);
      ((DefaultListModel)list.getModel()).addElement(currentObject);
      list.setSelectedIndex(list.getModel().getSize() - 1);
      updateListSelection();
      buttonPressInProgress=false;
    }
  }
);
  removeButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      buttonPressInProgress=true;
      DefaultListModel dlm=((DefaultListModel)list.getModel());
      int selectedIndex=list.getSelectedIndex();
      IListManagerObject lmo=(IListManagerObject)dlm.getElementAt(selectedIndex);
      factory.getObjectList().remove(lmo);
      dlm.remove(selectedIndex);
      if (selectedIndex >= dlm.getSize()) {
        selectedIndex=dlm.getSize() - 1;
      }
      list.setSelectedIndex(selectedIndex);
      currentObject=(IListManagerObject)(selectedIndex < 0 ? null : dlm.getElementAt(selectedIndex));
      updateListSelection();
      buttonPressInProgress=false;
    }
  }
);
  copyButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      buttonPressInProgress=true;
      DefaultListModel dlm=((DefaultListModel)list.getModel());
      int selectedIndex=list.getSelectedIndex();
      IListManagerObject lmo=(IListManagerObject)dlm.getElementAt(selectedIndex);
      currentObject=lmo.deepcopy();
      currentObject.setDescription(getUniqueName(lmo.getDescription()));
      dlm.addElement(currentObject);
      list.setSelectedIndex(list.getModel().getSize() - 1);
      updateListSelection();
      buttonPressInProgress=false;
    }
  }
);
  name.getDocument().addDocumentListener(new DocumentListener(){
    private void updateList(){
      if (buttonPressInProgress) {
        return;
      }
      String newText=name.getText();
      final IListManagerObject listObject=(IListManagerObject)list.getSelectedValue();
      if (listObject != null) {
        listObject.setDescription(newText);
      }
      int index=list.getSelectedIndex();
      DefaultListModel dlm=((DefaultListModel)list.getModel());
      dlm.setElementAt(listObject,index);
      validate();
    }
    public void changedUpdate(    DocumentEvent e){
      updateList();
    }
    public void insertUpdate(    DocumentEvent e){
      updateList();
    }
    public void removeUpdate(    DocumentEvent e){
      updateList();
    }
  }
);
  list.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      if (buttonPressInProgress) {
        return;
      }
      buttonPressInProgress=true;
      int selectedIndex=list.getSelectedIndex();
      DefaultListModel dlm=((DefaultListModel)list.getModel());
      currentObject=(IListManagerObject)(selectedIndex < 0 ? null : ((java.lang.Object)dlm.getElementAt(selectedIndex)));
      updateListSelection();
      buttonPressInProgress=false;
    }
  }
);
}
