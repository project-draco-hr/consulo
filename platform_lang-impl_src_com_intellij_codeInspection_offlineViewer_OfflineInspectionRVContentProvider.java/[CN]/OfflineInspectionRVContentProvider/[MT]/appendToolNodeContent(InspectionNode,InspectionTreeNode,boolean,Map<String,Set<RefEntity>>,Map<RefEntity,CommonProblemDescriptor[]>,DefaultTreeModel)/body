{
  final InspectionTool tool=toolNode.getTool();
  final Map<String,Set<OfflineProblemDescriptor>> filteredContent=getFilteredContent(tool);
  if (filteredContent != null && !filteredContent.values().isEmpty()) {
    final Function<OfflineProblemDescriptor,UserObjectContainer<OfflineProblemDescriptor>> computeContainer=new Function<OfflineProblemDescriptor,UserObjectContainer<OfflineProblemDescriptor>>(){
      @Override public UserObjectContainer<OfflineProblemDescriptor> fun(      final OfflineProblemDescriptor descriptor){
        return new OfflineProblemDescriptorContainer(descriptor);
      }
    }
;
    final List<InspectionTreeNode> list=buildTree(filteredContent,false,tool,computeContainer,showStructure);
    for (    InspectionTreeNode node : list) {
      toolNode.add(node);
    }
    parentNode.add(toolNode);
  }
}
