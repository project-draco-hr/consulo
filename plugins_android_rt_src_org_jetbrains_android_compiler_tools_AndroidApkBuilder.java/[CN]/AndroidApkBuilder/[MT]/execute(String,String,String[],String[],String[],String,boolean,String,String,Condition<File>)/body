{
  if (unsigned) {
    return filterUsingKeystoreMessages(finalPackage(dexPath,sourceRoots,externalJars,nativeLibsFolders,finalApk,resPackagePath,customKeystorePath,false,resourceFilter));
  }
  final Map<AndroidCompilerMessageKind,List<String>> map=new HashMap<AndroidCompilerMessageKind,List<String>>();
  final String zipAlignPath=sdkPath + File.separator + AndroidCommonUtils.toolPath(SdkConstants.FN_ZIPALIGN);
  boolean withAlignment=new File(zipAlignPath).exists();
  String unalignedApk=finalApk + UNALIGNED_SUFFIX;
  Map<AndroidCompilerMessageKind,List<String>> map2=filterUsingKeystoreMessages(finalPackage(dexPath,sourceRoots,externalJars,nativeLibsFolders,withAlignment ? unalignedApk : finalApk,resPackagePath,customKeystorePath,true,resourceFilter));
  map.putAll(map2);
  if (withAlignment && map.get(ERROR).size() == 0) {
    map2=AndroidExecutionUtil.doExecute(zipAlignPath,"-f","4",unalignedApk,finalApk);
    map.putAll(map2);
  }
  return map;
}
