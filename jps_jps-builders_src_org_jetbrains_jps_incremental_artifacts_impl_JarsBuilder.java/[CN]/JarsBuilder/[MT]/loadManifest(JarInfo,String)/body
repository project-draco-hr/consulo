{
  for (  Pair<String,Object> pair : jar.getContent()) {
    if (pair.getSecond() instanceof ArtifactSourceRoot) {
      final String rootPath=pair.getFirst();
      if (!JarFile.MANIFEST_NAME.startsWith(rootPath)) {
        continue;
      }
      final String manifestPath=JpsPathUtil.trimForwardSlashes(JarFile.MANIFEST_NAME.substring(rootPath.length()));
      final ArtifactSourceRoot root=(ArtifactSourceRoot)pair.getSecond();
      if (root instanceof FileBasedArtifactSourceRoot) {
        final File manifestFile=new File(root.getRootFile(),manifestPath);
        if (manifestFile.exists()) {
          final String fullManifestPath=FileUtil.toSystemIndependentName(manifestFile.getAbsolutePath());
          myContext.getLoggingManager().getArtifactBuilderLogger().fileCopied(fullManifestPath);
          mySrcOutMapping.appendData(fullManifestPath,Collections.singletonList(targetJarPath));
          return createManifest(new FileInputStream(manifestFile),manifestFile);
        }
      }
 else {
        final Ref<Manifest> manifestRef=Ref.create(null);
        ((JarBasedArtifactSourceRoot)root).processEntries(new JarBasedArtifactSourceRoot.EntryProcessor(){
          @Override public void process(          @Nullable InputStream inputStream,          @NotNull String relativePath) throws IOException {
            if (manifestRef.isNull() && relativePath.equals(manifestPath) && inputStream != null) {
              manifestRef.set(createManifest(inputStream,root.getRootFile()));
            }
          }
        }
);
        if (!manifestRef.isNull()) {
          return manifestRef.get();
        }
      }
    }
  }
  return null;
}
