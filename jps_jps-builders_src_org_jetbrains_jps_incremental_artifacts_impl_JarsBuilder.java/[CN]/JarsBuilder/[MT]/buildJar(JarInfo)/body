{
  if (jar.getContent().isEmpty()) {
    final String message="Archive '" + jar.getPresentableDestination() + "' has no files so it won't be created";
    myContext.processMessage(new CompilerMessage(IncArtifactBuilder.BUILDER_NAME,BuildMessage.Kind.WARNING,message));
    return;
  }
  myContext.processMessage(new ProgressMessage("Building " + jar.getPresentableDestination() + "..."));
  File jarFile=FileUtil.createTempFile("artifactCompiler","tmp");
  myBuiltJars.put(jar,jarFile);
  FileUtil.createParentDirs(jarFile);
  final String targetJarPath=jar.getDestination().getOutputFilePath();
  List<String> packedFilePaths=new ArrayList<String>();
  Manifest manifest=loadManifest(jar,packedFilePaths);
  final JarOutputStream jarOutputStream=createJarOutputStream(jarFile,manifest);
  try {
    final THashSet<String> writtenPaths=new THashSet<String>();
    if (manifest != null) {
      writtenPaths.add(JarFile.MANIFEST_NAME);
    }
    for (    Pair<String,Object> pair : jar.getContent()) {
      final String relativePath=pair.getFirst();
      if (pair.getSecond() instanceof ArtifactRootDescriptor) {
        final ArtifactRootDescriptor descriptor=(ArtifactRootDescriptor)pair.getSecond();
        final int rootIndex=descriptor.getRootIndex();
        if (descriptor instanceof FileBasedArtifactRootDescriptor) {
          addFileToJar(jarOutputStream,jarFile,descriptor.getRootFile(),descriptor.getFilter(),relativePath,targetJarPath,writtenPaths,packedFilePaths,rootIndex);
        }
 else {
          final String filePath=FileUtil.toSystemIndependentName(descriptor.getRootFile().getAbsolutePath());
          packedFilePaths.add(filePath);
          myOutSrcMapping.appendData(targetJarPath,Collections.singletonList(new ArtifactOutputToSourceMapping.SourcePathAndRootIndex(filePath,rootIndex)));
          extractFileAndAddToJar(jarOutputStream,(JarBasedArtifactRootDescriptor)descriptor,relativePath,writtenPaths);
        }
      }
 else {
        JarInfo nestedJar=(JarInfo)pair.getSecond();
        File nestedJarFile=myBuiltJars.get(nestedJar);
        if (nestedJarFile != null) {
          addFileToJar(jarOutputStream,jarFile,nestedJarFile,SourceFileFilter.ALL,relativePath,targetJarPath,writtenPaths,packedFilePaths,-1);
        }
 else {
          LOG.debug("nested jar file " + relativePath + " for "+ jar.getPresentableDestination()+ " not found");
        }
      }
    }
    final ArtifactBuilderLogger logger=myContext.getLoggingManager().getArtifactBuilderLogger();
    if (logger.isEnabled()) {
      for (      String filePath : packedFilePaths) {
        logger.fileCopied(filePath);
      }
    }
    myOutputConsumer.registerOutputFile(targetJarPath,packedFilePaths);
  }
  finally {
    jarOutputStream.close();
  }
}
