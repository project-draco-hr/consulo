{
  final String filePath=FileUtil.toSystemIndependentName(file.getAbsolutePath());
  if (!filter.accept(filePath,myContext.getProjectDescriptor().dataManager)) {
    return;
  }
  if (file.isDirectory()) {
    final String directoryPath=relativePath.length() == 0 ? "" : relativePath + "/";
    if (!directoryPath.isEmpty()) {
      addDirectoryEntry(jarOutputStream,directoryPath,writtenItemRelativePaths);
    }
    final File[] children=file.listFiles();
    if (children != null) {
      for (      File child : children) {
        addFileOrDirRecursively(jarOutputStream,child,filter,directoryPath + child.getName(),targetJarPath,writtenItemRelativePaths,packedFilePaths,rootIndex);
      }
    }
    return;
  }
  final boolean added=ZipUtil.addFileToZip(jarOutputStream,file,relativePath,writtenItemRelativePaths,null);
  if (rootIndex != -1) {
    myOutSrcMapping.appendData(targetJarPath,Collections.singletonList(new ArtifactOutputToSourceMapping.SourcePathAndRootIndex(filePath,rootIndex)));
    if (added) {
      packedFilePaths.add(filePath);
    }
  }
}
