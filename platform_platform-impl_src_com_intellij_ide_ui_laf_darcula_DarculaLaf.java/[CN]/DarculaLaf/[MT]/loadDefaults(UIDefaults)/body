{
  final Properties properties=new Properties();
  final String osSuffix=SystemInfo.isMac ? "mac" : SystemInfo.isWindows ? "windows" : "linux";
  try {
    InputStream stream=DarculaLaf.class.getResourceAsStream("darcula.properties");
    properties.load(stream);
    stream.close();
    stream=DarculaLaf.class.getResourceAsStream("darcula_" + osSuffix + ".properties");
    properties.load(stream);
    stream.close();
    HashMap<String,Object> darculaGlobalSettings=new HashMap<String,Object>();
    final String prefix="darcula.";
    for (    String key : properties.stringPropertyNames()) {
      if (key.startsWith(prefix)) {
        darculaGlobalSettings.put(key.substring(prefix.length()),parseValue(key,properties.getProperty(key)));
      }
    }
    for (    Object key : defaults.keySet()) {
      if (key instanceof String && ((String)key).contains(".")) {
        final String s=(String)key;
        final String darculaKey=s.substring(s.lastIndexOf('.') + 1);
        if (darculaGlobalSettings.containsKey(darculaKey)) {
          defaults.put(key,darculaGlobalSettings.get(darculaKey));
        }
      }
    }
    for (    String key : properties.stringPropertyNames()) {
      final String value=properties.getProperty(key);
      defaults.put(key,parseValue(key,value));
    }
  }
 catch (  IOException e) {
    log(e);
  }
}
