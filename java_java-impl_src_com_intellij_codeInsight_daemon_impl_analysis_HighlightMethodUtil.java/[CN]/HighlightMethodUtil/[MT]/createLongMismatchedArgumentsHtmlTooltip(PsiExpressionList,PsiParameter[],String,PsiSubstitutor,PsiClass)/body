{
  PsiExpression[] expressions=list.getExpressions();
  @NonNls @Language("HTML") String s="<html><body><table border=0>" + " <caption align=top><nobr><b>" + methodName + "() </b> in <b>"+ HighlightUtil.formatClass(aClass,false)+ "</b>  cannot be applied to:</nobr></caption>"+ "  <tr><th colspan=2 align=left>Expected<br>Parameters:</th><th align=left>Actual<br>Arguments:</th></tr>"+ "  <tr><td colspan=3><hr></td></tr>";
  for (int i=0; i < Math.max(parameters.length,expressions.length); i++) {
    PsiParameter parameter=i < parameters.length ? parameters[i] : null;
    PsiExpression expression=i < expressions.length ? expressions[i] : null;
    @NonNls String mismatchColor=showShortType(i,parameters,expressions,substitutor) ? null : "red";
    s+="<tr>";
    s+="<td><b><nobr>";
    if (parameter != null) {
      s+=esctrim(parameter.getName()) + ":";
    }
    s+="</nobr></b></td>";
    s+="<td><b><nobr>";
    if (parameter != null) {
      PsiType type=substitutor.substitute(parameter.getType());
      s+="<font " + (mismatchColor == null ? "" : "color=" + mismatchColor) + ">"+ esctrim(showShortType(i,parameters,expressions,substitutor) ? type.getPresentableText() : HighlightUtil.formatType(type))+ "</font>";
    }
    s+="</nobr></b></td>";
    s+="<td><b><nobr>";
    if (expression != null) {
      PsiType type=expression.getType();
      s+="<font " + (mismatchColor == null ? "" : "color=" + mismatchColor) + ">"+ esctrim(expression.getText())+ "&nbsp;&nbsp;"+ (mismatchColor == null || type == null || type == PsiType.NULL ? "" : "(" + esctrim(HighlightUtil.formatType(type)) + ")")+ "</font>";
    }
    s+="</nobr></b></td>";
    s+="</tr>";
  }
  s+="  </table></body></html>";
  return s;
}
