{
  PsiExpression[] expressions=list.getExpressions();
  @NonNls String s="<html><body><table border=0>" + "<tr><td colspan=3>" + "<nobr><b>" + methodName + "()</b> in <b>"+ HighlightUtil.formatClass(aClass,false)+ "</b> cannot be applied to:</nobr>"+ "</td></tr>"+ "<tr><td colspan=2 align=left>Expected<br>Parameters:</td><td align=left>Actual<br>Arguments:</td></tr>"+ "<tr><td colspan=3><hr></td></tr>";
  for (int i=0; i < Math.max(parameters.length,expressions.length); i++) {
    PsiParameter parameter=i < parameters.length ? parameters[i] : null;
    PsiExpression expression=i < expressions.length ? expressions[i] : null;
    boolean showShort=showShortType(i,parameters,expressions,substitutor);
    @NonNls String mismatchColor=showShort ? null : "red";
    s+="<tr" + (i % 2 == 0 ? " style='background-color: #eeeeee'" : "") + ">";
    s+="<td><b><nobr>";
    if (parameter != null) {
      String name=parameter.getName();
      if (name != null) {
        s+=esctrim(name) + ":";
      }
    }
    s+="</nobr></b></td>";
    s+="<td><b><nobr>";
    if (parameter != null) {
      PsiType type=substitutor.substitute(parameter.getType());
      s+="<font " + (mismatchColor == null ? "" : "color=" + mismatchColor) + ">"+ esctrim(showShort ? type.getPresentableText() : HighlightUtil.formatType(type))+ "</font>";
    }
    s+="</nobr></b></td>";
    s+="<td><b><nobr>";
    if (expression != null) {
      PsiType type=expression.getType();
      s+="<font " + (mismatchColor == null ? "" : "color=" + mismatchColor) + ">"+ esctrim(expression.getText())+ "&nbsp;&nbsp;"+ (mismatchColor == null || type == null || type == PsiType.NULL ? "" : "(" + esctrim(HighlightUtil.formatType(type)) + ")")+ "</font>";
    }
    s+="</nobr></b></td>";
    s+="</tr>";
  }
  s+="</table></body></html>";
  return s;
}
