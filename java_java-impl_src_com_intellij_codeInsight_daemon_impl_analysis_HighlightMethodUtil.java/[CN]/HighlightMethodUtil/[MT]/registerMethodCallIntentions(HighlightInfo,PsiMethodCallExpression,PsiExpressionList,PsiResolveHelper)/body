{
  TextRange fixRange=getFixRange(methodCall);
  QuickFixAction.registerQuickFixAction(highlightInfo,fixRange,new CreateMethodFromUsageFix(methodCall));
  QuickFixAction.registerQuickFixAction(highlightInfo,fixRange,new CreateAbstractMethodFromUsageFix(methodCall));
  QuickFixAction.registerQuickFixAction(highlightInfo,fixRange,new CreateConstructorFromSuperFix(methodCall));
  QuickFixAction.registerQuickFixAction(highlightInfo,fixRange,new CreateConstructorFromThisFix(methodCall));
  QuickFixAction.registerQuickFixAction(highlightInfo,fixRange,new CreatePropertyFromUsageFix(methodCall));
  CandidateInfo[] methodCandidates=resolveHelper.getReferencedMethodCandidates(methodCall,false);
  CastMethodArgumentFix.REGISTRAR.registerCastActions(methodCandidates,methodCall,highlightInfo,fixRange);
  PermuteArgumentsFix.registerFix(highlightInfo,methodCall,methodCandidates,fixRange);
  AddTypeArgumentsFix.REGISTRAR.registerCastActions(methodCandidates,methodCall,highlightInfo,fixRange);
  registerMethodAccessLevelIntentions(methodCandidates,methodCall,list,highlightInfo);
  ChangeMethodSignatureFromUsageFix.registerIntentions(methodCandidates,list,highlightInfo,fixRange);
  ConvertDoubleToFloatFix.registerIntentions(methodCandidates,list,highlightInfo,fixRange);
  WrapExpressionFix.registerWrapAction(methodCandidates,list.getExpressions(),highlightInfo);
  ChangeParameterClassFix.registerQuickFixActions(methodCall,list,highlightInfo);
  if (methodCandidates.length == 0) {
    QuickFixAction.registerQuickFixAction(highlightInfo,fixRange,new StaticImportMethodFix(methodCall));
  }
  VariableTypeFromCallFix.registerQuickFixActions(methodCall,list,highlightInfo);
  QuickFixAction.registerQuickFixAction(highlightInfo,fixRange,new ReplaceAddAllArrayToCollectionFix(methodCall));
  QuickFixAction.registerQuickFixAction(highlightInfo,fixRange,new SurroundWithArrayFix(methodCall));
  QualifyThisArgumentFix.registerQuickFixAction(methodCandidates,methodCall,highlightInfo,fixRange);
  CandidateInfo[] candidates=resolveHelper.getReferencedMethodCandidates(methodCall,true);
  ChangeStringLiteralToCharInMethodCallFix.registerFixes(candidates,methodCall,highlightInfo);
}
