{
  final Collection<PsiClass> weakerClasses=(Collection<PsiClass>)infos[1];
  final StringBuilder builder=new StringBuilder();
  final Iterator<PsiClass> iterator=weakerClasses.iterator();
  if (iterator.hasNext()) {
    builder.append('\'');
    builder.append(iterator.next().getQualifiedName());
    builder.append('\'');
    while (iterator.hasNext()) {
      builder.append(", '");
      builder.append(iterator.next().getQualifiedName());
      builder.append('\'');
    }
  }
  final PsiElement element=(PsiElement)infos[0];
  if (element instanceof PsiField) {
    return InspectionGadgetsBundle.message("type.may.be.weakened.field.problem.descriptor",builder.toString());
  }
 else   if (element instanceof PsiParameter) {
    return InspectionGadgetsBundle.message("type.may.be.weakened.parameter.problem.descriptor",builder.toString());
  }
 else   if (element instanceof PsiMethod) {
    return InspectionGadgetsBundle.message("type.may.be.weakened.method.problem.descriptor",builder.toString());
  }
  return InspectionGadgetsBundle.message("type.may.be.weakened.problem.descriptor",builder.toString());
}
