{
  final PsiElement parent=location.getParent();
  final Collection<PsiClass> weakestClasses=calculateWeakestClassesNecessary(parent,useRighthandTypeAsWeakestTypeInAssignments);
  if (weakestClasses.isEmpty()) {
    return null;
  }
  final Collection<InspectionGadgetsFix> fixes=new ArrayList();
  for (  PsiClass weakestClass : weakestClasses) {
    final String qualifiedName=weakestClass.getQualifiedName();
    fixes.add(new TypeMayBeWeakenedFix(qualifiedName));
  }
  return fixes.toArray(new InspectionGadgetsFix[fixes.size()]);
}
