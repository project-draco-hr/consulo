{
  super.visitVariable(variable);
  if (variable instanceof PsiParameter) {
    final PsiParameter parameter=(PsiParameter)variable;
    final PsiElement declarationScope=parameter.getDeclarationScope();
    if (declarationScope instanceof PsiCatchSection) {
      return;
    }
 else     if (declarationScope instanceof PsiMethod) {
      final PsiMethod method=(PsiMethod)declarationScope;
      final Query<MethodSignatureBackedByPsiMethod> superSearch=SuperMethodsSearch.search(method,null,true,false);
      if (superSearch.findFirst() != null) {
        return;
      }
      final Query<PsiMethod> overridingSearch=OverridingMethodsSearch.search(method);
      if (superSearch.findFirst() != null) {
        return;
      }
    }
  }
  if (isOnTheFly() && variable instanceof PsiField) {
    if (!variable.hasModifierProperty(PsiModifier.PRIVATE)) {
      return;
    }
  }
  if (ignoreLocals) {
    if (variable instanceof PsiLocalVariable) {
      return;
    }
 else     if (variable instanceof PsiParameter) {
      final PsiParameter parameter=(PsiParameter)variable;
      final PsiElement scope=parameter.getDeclarationScope();
      if (!(scope instanceof PsiMethod)) {
        return;
      }
      final PsiMethod method=(PsiMethod)scope;
      if (method.hasModifierProperty(PsiModifier.PRIVATE)) {
        return;
      }
    }
  }
  final Collection<PsiClass> weakestClasses=calculateWeakestClassesNecessary(variable);
  if (weakestClasses.isEmpty()) {
    return;
  }
  registerVariableError(variable,variable,weakestClasses);
}
