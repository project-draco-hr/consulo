{
  TypeConstraint constraint=new TypeConstraint(PsiType.INT){
    @Override public boolean satisfied(    PsiType type,    @NotNull PsiElement context){
      final PsiType boxed=TypesUtil.boxPrimitiveType(type,context.getManager(),context.getResolveScope());
      final IElementType opToken=expression.getOperationTokenType();
      final GroovyResolveResult[] candidates=TypesUtil.getOverloadedUnaryOperatorCandidates(boxed,opToken,expression,PsiType.EMPTY_ARRAY);
      return candidates.length > 0;
    }
    @NotNull @Override public PsiType getDefaultType(){
      return PsiType.INT;
    }
  }
;
  myResult=new TypeConstraint[]{constraint};
}
