{
  GrExpression rValue=expression.getRValue();
  GrExpression lValue=expression.getLValue();
  if (myExpression.equals(rValue)) {
    PsiType lType=lValue.getNominalType();
    if (lType != null) {
      myResult=new TypeConstraint[]{SubtypeConstraint.create(lType)};
    }
 else     if (lValue instanceof GrReferenceExpression) {
      GroovyResolveResult result=((GrReferenceExpression)lValue).advancedResolve();
      PsiElement resolved=result.getElement();
      if (resolved instanceof GrVariable) {
        PsiType type=((GrVariable)resolved).getTypeGroovy();
        if (type != null) {
          myResult=new TypeConstraint[]{SubtypeConstraint.create(result.getSubstitutor().substitute(type))};
        }
      }
    }
  }
 else   if (myExpression.equals(lValue)) {
    if (rValue != null) {
      PsiType rType=rValue.getType();
      if (rType != null) {
        myResult=new TypeConstraint[]{SupertypeConstraint.create(rType)};
      }
    }
  }
}
