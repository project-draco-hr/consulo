{
  final IElementType type=expression.getOperationTokenType();
  final GrExpression left=expression.getLeftOperand();
  final GrExpression right=expression.getRightOperand();
  if (type == mREGEX_FIND || type == mREGEX_MATCH) {
    final PsiClassType string=TypesUtil.createType(CommonClassNames.JAVA_LANG_STRING,expression);
    myResult=new TypeConstraint[]{new SubtypeConstraint(string,string)};
    return;
  }
  final GrExpression other=myExpression == left ? right : left;
  final PsiType otherType=other != null ? other.getType() : null;
  if (otherType == null)   return;
  if (type == mPLUS && otherType.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {
    final PsiClassType obj=TypesUtil.getJavaLangObject(expression);
    myResult=new TypeConstraint[]{new SubtypeConstraint(obj,obj)};
    return;
  }
  myResult=new TypeConstraint[]{new SubtypeConstraint(otherType,otherType)};
}
