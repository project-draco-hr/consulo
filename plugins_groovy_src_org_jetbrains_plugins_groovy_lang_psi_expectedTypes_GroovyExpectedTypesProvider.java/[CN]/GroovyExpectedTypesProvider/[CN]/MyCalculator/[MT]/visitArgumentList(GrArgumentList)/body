{
  int idx=list.getExpressionArgumentIndex(myExpression);
  List<TypeConstraint> constraints=new ArrayList<TypeConstraint>();
  for (  GroovyResolveResult variant : ResolveUtil.getCallVariants(list)) {
    PsiParameter[] parameters=getCallParameters(variant);
    if (parameters == null || parameters.length <= idx)     continue;
    PsiType parameterType=variant.getSubstitutor().substitute(parameters[idx].getType());
    constraints.add(SubtypeConstraint.create(parameterType));
  }
  if (!constraints.isEmpty()) {
    myResult=constraints.toArray(new TypeConstraint[constraints.size()]);
  }
}
