{
  long before=System.currentTimeMillis();
  MavenUtil.invokeAndWait(myProject,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          throw new UnsupportedOperationException();
        }
      }
);
    }
  }
);
  new WriteAction(){
    protected void run(    Result result) throws Throwable {
      ((ProjectRootManagerEx)ProjectRootManager.getInstance(myProject)).mergeRootsChangesDuring(new Runnable(){
        public void run(){
          for (          Library.ModifiableModel each : myLibraryModels.values()) {
            each.commit();
          }
          myLibrariesModel.commit();
          Collection<ModifiableRootModel> rootModels=myRootModels.values();
          ProjectRootManager.getInstance(myProject).multiCommit(myModuleModel,rootModels.toArray(new ModifiableRootModel[rootModels.size()]));
          for (          ModifiableFacetModel each : myFacetModels.values()) {
            each.commit();
          }
        }
      }
);
    }
  }
.execute();
  myCommitTime=System.currentTimeMillis() - before;
}
