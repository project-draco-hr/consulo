{
  boolean shallEncodeEscapedTexts=shallEncodeEscapedTexts(original,encodingState);
  if (original instanceof CompositeElement) {
    if (original.getElementType() == JavaElementType.JAVA_CODE_REFERENCE || original.getElementType() == JavaElementType.REFERENCE_EXPRESSION) {
      encodeInformationInRef(element,original);
    }
 else     if (original.getElementType() == JavaElementType.MODIFIER_LIST && (original.getTreeParent().getElementType() == JavaElementType.FIELD || original.getTreeParent().getElementType() == JavaElementType.METHOD || original.getTreeParent().getElementType() == JavaElementType.ANNOTATION_METHOD) && original.getTreeParent().getTreeParent().getElementType() == JavaElementType.CLASS && (((PsiClass)SourceTreeToPsiMap.treeElementToPsi(original.getTreeParent().getTreeParent())).isInterface() || ((PsiClass)SourceTreeToPsiMap.treeElementToPsi(original.getTreeParent().getTreeParent())).isAnnotationType())) {
      element.putUserData(INTERFACE_MODIFIERS_FLAG_KEY,Boolean.TRUE);
    }
  }
 else   if (shallEncodeEscapedTexts && original instanceof LeafElement && !(original instanceof OuterLanguageElement)) {
    if (!isInCData(original)) {
      final String originalText=element.getText();
      final String unescapedText=StringUtil.unescapeXml(originalText);
      if (!Comparing.equal(originalText,unescapedText)) {
        LeafElement replaced=((LeafElement)element).rawReplaceWithText(unescapedText);
        element.putCopyableUserData(ALREADY_ESCAPED,null);
        replaced.putCopyableUserData(ALREADY_ESCAPED,null);
      }
    }
  }
}
