{
  JPanel panel=new JPanel(new GridLayout(5,1,2,2));
  final JCheckBox local=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option"));
  final JCheckBox field=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option1"));
  final JCheckBox method=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option2"));
  final JCheckBox classes=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option3"));
  final JCheckBox parameters=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option4"));
  ChangeListener listener=new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      InspectionProfile.UnusedSymbolSettings settings=new InspectionProfile.UnusedSymbolSettings();
      settings.LOCAL_VARIABLE=local.isSelected();
      settings.CLASS=classes.isSelected();
      settings.FIELD=field.isSelected();
      settings.PARAMETER=parameters.isSelected();
      settings.METHOD=method.isSelected();
      inspectionProfile.setUnusedSymbolSettings(settings);
    }
  }
;
  local.addChangeListener(listener);
  field.addChangeListener(listener);
  method.addChangeListener(listener);
  classes.addChangeListener(listener);
  parameters.addChangeListener(listener);
  panel.add(local);
  panel.add(field);
  panel.add(method);
  panel.add(classes);
  panel.add(parameters);
  if (inspectionProfile != null) {
    final InspectionProfile.UnusedSymbolSettings unusedSymbolSettings=inspectionProfile.getUnusedSymbolSettings();
    local.setSelected(unusedSymbolSettings.LOCAL_VARIABLE);
    field.setSelected(unusedSymbolSettings.FIELD);
    method.setSelected(unusedSymbolSettings.METHOD);
    classes.setSelected(unusedSymbolSettings.CLASS);
    parameters.setSelected(unusedSymbolSettings.PARAMETER);
  }
  JPanel doNotExpand=new JPanel(new BorderLayout());
  doNotExpand.add(panel,BorderLayout.NORTH);
  return doNotExpand;
}
