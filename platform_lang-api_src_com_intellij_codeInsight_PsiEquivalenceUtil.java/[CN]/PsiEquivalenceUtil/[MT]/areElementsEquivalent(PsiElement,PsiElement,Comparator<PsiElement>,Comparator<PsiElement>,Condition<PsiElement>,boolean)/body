{
  if (element1 == element2)   return true;
  ASTNode node1=element1.getNode();
  ASTNode node2=element2.getNode();
  if (node1 == null || node2 == null)   return false;
  if (node1.getElementType() != node2.getElementType())   return false;
  PsiElement[] children1=getFilteredChildren(element1,isElementSignificantCondition,areCommentsSignificant);
  PsiElement[] children2=getFilteredChildren(element2,isElementSignificantCondition,areCommentsSignificant);
  if (children1.length != children2.length)   return false;
  for (int i=0; i < children1.length; i++) {
    PsiElement child1=children1[i];
    PsiElement child2=children2[i];
    if (!areElementsEquivalent(child1,child2,resolvedElementsComparator,leafElementsComparator,isElementSignificantCondition,areCommentsSignificant))     return false;
  }
  if (children1.length == 0) {
    if (!element1.textMatches(element2))     return false;
    if (leafElementsComparator != null && leafElementsComparator.compare(element1,element2) != 0)     return false;
  }
  PsiReference ref1=element1.getReference();
  if (ref1 != null) {
    PsiReference ref2=element2.getReference();
    if (ref2 == null)     return false;
    PsiElement resolved1=ref1.resolve();
    PsiElement resolved2=ref2.resolve();
    if (!Comparing.equal(resolved1,resolved2) && (resolvedElementsComparator == null || resolvedElementsComparator.compare(resolved1,resolved2) != 0))     return false;
  }
  return true;
}
