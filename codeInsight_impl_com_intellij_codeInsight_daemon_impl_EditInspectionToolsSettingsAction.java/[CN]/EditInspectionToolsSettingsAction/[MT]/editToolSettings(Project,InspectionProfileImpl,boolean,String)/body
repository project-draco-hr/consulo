{
  Project[] projects=ProjectManager.getInstance().getOpenProjects();
  final boolean isOK=ShowSettingsUtil.getInstance().editConfigurable(project,"#com.intellij.codeInsight.daemon.impl.EditInspectionToolsSettingsAction",new Configurable(){
    private InspectionToolsPanel myPanel=new InspectionToolsPanel(inspectionProfile.getName(),project,editorHighlighting);
    public String getDisplayName(){
      return ApplicationBundle.message("title.errors");
    }
    public Icon getIcon(){
      return IconLoader.getIcon("/general/configurableErrorHighlighting.png");
    }
    public String getHelpTopic(){
      return "preferences.errorHighlight";
    }
    public JComponent createComponent(){
      if (selectedToolShortName != null) {
        myPanel.selectInspectionTool(selectedToolShortName);
      }
      return myPanel;
    }
    public boolean isModified(){
      return myPanel.isModified();
    }
    public void apply() throws ConfigurationException {
      myPanel.apply();
      final InspectionProfileImpl editedProfile=(InspectionProfileImpl)myPanel.getSelectedProfile().getParentProfile();
      if (editorHighlighting) {
        DaemonCodeAnalyzerSettings.getInstance().setInspectionProfile(editedProfile);
      }
      inspectionProfile.copyFrom(editedProfile);
    }
    public void reset(){
      myPanel.reset();
    }
    public void disposeUIResources(){
      if (myPanel != null) {
        myPanel.saveVisibleState();
        myPanel=null;
      }
    }
  }
);
  if (isOK) {
    for (    Project project1 : projects) {
      DaemonCodeAnalyzer.getInstance(project1).restart();
    }
  }
  return isOK;
}
