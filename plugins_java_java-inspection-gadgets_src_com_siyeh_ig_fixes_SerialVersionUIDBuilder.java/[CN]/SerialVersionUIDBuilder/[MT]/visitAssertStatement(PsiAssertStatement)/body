{
  super.visitAssertStatement(statement);
  if (assertStatement) {
    return;
  }
  final MemberSignature memberSignature=MemberSignature.getAssertionsDisabledFieldMemberSignature();
  nonPrivateFields.add(memberSignature);
  final PsiManager manager=clazz.getManager();
  final PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
  final PsiClassType classType=factory.createType(clazz);
  createClassObjectAccessSynthetics(classType);
  if (staticInitializers.isEmpty()) {
    final MemberSignature initializerSignature=MemberSignature.getStaticInitializerMemberSignature();
    staticInitializers.add(initializerSignature);
  }
  assertStatement=true;
}
