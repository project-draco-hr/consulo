{
  super.visitReferenceElement(reference);
  final PsiElement parentClass=ClassUtils.getContainingClass(reference);
  if (reference.getParent() instanceof PsiTypeElement) {
    return;
  }
  final PsiElement element=reference.resolve();
  if (!(element instanceof PsiClass)) {
    return;
  }
  final PsiClass elementParentClass=ClassUtils.getContainingClass(element);
  if (elementParentClass == null || !elementParentClass.equals(clazz) || element.equals(parentClass)) {
    return;
  }
  final PsiClass innerClass=(PsiClass)element;
  if (!innerClass.hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  final PsiMethod[] constructors=innerClass.getConstructors();
  if (constructors.length == 0) {
    getAccessMethodIndex(innerClass);
  }
}
