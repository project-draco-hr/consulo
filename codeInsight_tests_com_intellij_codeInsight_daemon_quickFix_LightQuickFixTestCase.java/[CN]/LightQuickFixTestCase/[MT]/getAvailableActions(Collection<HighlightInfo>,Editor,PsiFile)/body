{
  final int offset=editor.getCaretModel().getOffset();
  final List<IntentionAction> availableActions=new ArrayList<IntentionAction>();
  if (infos != null) {
    for (    HighlightInfo info : infos) {
      final int startOffset=info.fixStartOffset;
      final int endOffset=info.fixEndOffset;
      if (startOffset <= offset && offset <= endOffset && info.quickFixActionRanges != null) {
        for (        Pair<HighlightInfo.IntentionActionDescriptor,TextRange> pair : info.quickFixActionRanges) {
          IntentionAction action=pair.first.getAction();
          TextRange range=pair.second;
          if (range.getStartOffset() <= offset && offset <= range.getEndOffset() && action.isAvailable(editor.getProject(),editor,file)) {
            availableActions.add(action);
            if (pair.first.getOptions() != null) {
              for (              IntentionAction intentionAction : pair.first.getOptions()) {
                if (intentionAction.isAvailable(editor.getProject(),editor,file)) {
                  availableActions.add(intentionAction);
                }
              }
            }
          }
        }
      }
    }
  }
  return availableActions;
}
