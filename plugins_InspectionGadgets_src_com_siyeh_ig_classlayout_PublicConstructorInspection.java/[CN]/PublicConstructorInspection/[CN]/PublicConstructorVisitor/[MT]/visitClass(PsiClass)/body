{
  super.visitClass(aClass);
  if (aClass.isInterface() || aClass.isEnum()) {
    return;
  }
  if (!aClass.hasModifierProperty(PsiModifier.PUBLIC) || aClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  final PsiMethod[] constructors=aClass.getConstructors();
  if (constructors.length > 0) {
    return;
  }
  if (SerializationUtils.isExternalizable(aClass)) {
    return;
  }
  registerClassError(aClass,Boolean.TRUE);
}
