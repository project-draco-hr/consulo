{
  final PsiManager manager=aClass.getManager();
  final LanguageLevel languageLevel=manager.getEffectiveLanguageLevel();
  if (languageLevel.equals(LanguageLevel.JDK_1_3) || languageLevel.equals(LanguageLevel.JDK_1_4)) {
    return;
  }
  if (aClass.isAnnotationType()) {
    return;
  }
  final PsiReferenceList extendsList=aClass.getExtendsList();
  if (extendsList != null) {
    final PsiJavaCodeReferenceElement[] elements=extendsList.getReferenceElements();
    for (    final PsiJavaCodeReferenceElement element : elements) {
      final PsiElement referent=element.resolve();
      if (referent instanceof PsiClass) {
        ((PsiClass)referent).isAnnotationType();
        if (((PsiClass)referent).isAnnotationType()) {
          registerError(element);
        }
      }
    }
  }
  final PsiReferenceList implementsList=aClass.getImplementsList();
  if (implementsList != null) {
    final PsiJavaCodeReferenceElement[] elements=implementsList.getReferenceElements();
    for (    final PsiJavaCodeReferenceElement element : elements) {
      final PsiElement referent=element.resolve();
      if (referent instanceof PsiClass) {
        ((PsiClass)referent).isAnnotationType();
        if (((PsiClass)referent).isAnnotationType()) {
          registerError(element);
        }
      }
    }
  }
}
