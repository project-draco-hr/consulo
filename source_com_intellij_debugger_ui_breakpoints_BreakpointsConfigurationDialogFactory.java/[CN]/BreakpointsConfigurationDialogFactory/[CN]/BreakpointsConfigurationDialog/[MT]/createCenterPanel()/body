{
  myTabbedPane=new TabbedPaneWrapper();
  myPanel=new JPanel(new BorderLayout());
  myLineBreakpointsPanel=new BreakpointPanel(new BreakpointTableModel(),new LineBreakpointPropertiesPanel(myProject),new BreakpointPanel.BreakpointPanelAction[]{new BreakpointPanel.GotoSourceAction(myProject){
    public void actionPerformed(    ActionEvent e){
      super.actionPerformed(e);
      close(OK_EXIT_CODE);
    }
  }
,new BreakpointPanel.ViewSourceAction(myProject),new BreakpointPanel.RemoveAction(myProject)});
  myExceptionBreakpointsPanel=new BreakpointPanel(new BreakpointTableModel(),new ExceptionBreakpointPropertiesPanel(myProject),new BreakpointPanel.BreakpointPanelAction[]{new AddExceptionBreakpointAction(),new BreakpointPanel.RemoveAction(myProject){
    protected void update(){
      super.update();
      if (getButton().isEnabled()) {
        Breakpoint[] selectedBreakpoints=getPanel().getSelectedBreakpoints();
        for (int i=0; i < selectedBreakpoints.length; i++) {
          Breakpoint bp=selectedBreakpoints[i];
          if (bp instanceof AnyExceptionBreakpoint) {
            getButton().setEnabled(false);
          }
        }
      }
    }
  }
});
  myFieldBreakpointsPanel=new BreakpointPanel(new BreakpointTableModel(),new FieldBreakpointPropertiesPanel(myProject),new BreakpointPanel.BreakpointPanelAction[]{new AddFieldBreakpointAction(),new BreakpointPanel.GotoSourceAction(myProject){
    public void actionPerformed(    ActionEvent e){
      super.actionPerformed(e);
      close(OK_EXIT_CODE);
    }
  }
,new BreakpointPanel.ViewSourceAction(myProject),new BreakpointPanel.RemoveAction(myProject)});
  myMethodBreakpointsPanel=new BreakpointPanel(new BreakpointTableModel(),new MethodBreakpointPropertiesPanel(myProject),new BreakpointPanel.BreakpointPanelAction[]{new BreakpointPanel.GotoSourceAction(myProject){
    public void actionPerformed(    ActionEvent e){
      super.actionPerformed(e);
      close(OK_EXIT_CODE);
    }
  }
,new BreakpointPanel.ViewSourceAction(myProject),new BreakpointPanel.RemoveAction(myProject)});
  addPanel(myLineBreakpointsPanel,LINE_BREAKPOINTS_NAME);
  addPanel(myExceptionBreakpointsPanel,EXCEPTION_BREAKPOINTS_NAME);
  addPanel(myFieldBreakpointsPanel,FIELD_WATCHPOINTS_NAME);
  addPanel(myMethodBreakpointsPanel,METHOD_BREAKPOINTS_NAME);
  myTabbedPane.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      BreakpointPanel panel=getSelectedPanel();
      JTable table=panel.getTable();
      if (table.getRowCount() > 0 && table.getSelectedRow() < 0) {
        ListSelectionModel model=table.getSelectionModel();
        model.clearSelection();
        model.addSelectionInterval(0,0);
        table.requestFocus();
      }
    }
  }
);
  myPanel.add(myTabbedPane.getComponent(),BorderLayout.CENTER);
  myTabbedPane.installKeyboardNavigation();
  ActionListener closeAction=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      close(CANCEL_EXIT_CODE);
    }
  }
;
  myPanel.registerKeyboardAction(closeAction,KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myPanel.setPreferredSize(new Dimension(600,500));
  return myPanel;
}
