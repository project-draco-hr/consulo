{
  myTabbedPane=new TabbedPaneWrapper();
  myPanel=new JPanel(new BorderLayout());
  final BreakpointFactory[] allFactories=ApplicationManager.getApplication().getComponents(BreakpointFactory.class);
  for (  final BreakpointFactory breakpointFactory : allFactories) {
    final BreakpointPanel breakpointPanel=breakpointFactory.createBreakpointPanel(myProject,this);
    if (breakpointPanel != null) {
      setupPanelUI(breakpointPanel);
      myPanels.add(breakpointPanel);
      addPanel(breakpointPanel,breakpointPanel.getDisplayName());
    }
  }
  final ChangeListener tabPaneChangeListener=new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      BreakpointPanel panel=getSelectedPanel();
      panel.ensureSelectionExists();
    }
  }
;
  myTabbedPane.addChangeListener(tabPaneChangeListener);
  myDisposeActions.add(new Runnable(){
    public void run(){
      myTabbedPane.removeChangeListener(tabPaneChangeListener);
    }
  }
);
  myPanel.add(myTabbedPane.getComponent(),BorderLayout.CENTER);
  myTabbedPane.installKeyboardNavigation();
  ActionListener closeAction=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      close(CANCEL_EXIT_CODE);
    }
  }
;
  myPanel.registerKeyboardAction(closeAction,KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myPanel.setPreferredSize(new Dimension(600,500));
  return myPanel;
}
