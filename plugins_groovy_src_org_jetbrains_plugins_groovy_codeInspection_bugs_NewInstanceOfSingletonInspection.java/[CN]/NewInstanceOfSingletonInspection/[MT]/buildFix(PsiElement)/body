{
  final GrCodeReferenceElement refElement=((GrNewExpression)location).getReferenceElement();
  LOG.assertTrue(refElement != null);
  final GrTypeDefinition singleton=(GrTypeDefinition)refElement.resolve();
  LOG.assertTrue(singleton != null);
  return new GroovyFix(){
    @Override protected void doFix(    Project project,    ProblemDescriptor descriptor) throws IncorrectOperationException {
      final GrExpression instanceRef=GroovyPsiElementFactory.getInstance(project).createExpressionFromText(singleton.getQualifiedName() + ".instance");
      final GrExpression replaced=((GrNewExpression)location).replaceWithExpression(instanceRef,true);
      GrReferenceAdjuster.shortenReferences(replaced);
    }
    @NotNull @Override public String getName(){
      return GroovyInspectionBundle.message("replace.new.expression.with.0.instance",singleton.getName());
    }
  }
;
}
