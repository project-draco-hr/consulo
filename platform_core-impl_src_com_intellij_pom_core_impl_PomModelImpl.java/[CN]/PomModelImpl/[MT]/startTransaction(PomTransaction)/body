{
  final ProgressIndicator progressIndicator=ProgressIndicatorProvider.getGlobalProgressIndicator();
  if (progressIndicator != null)   progressIndicator.startNonCancelableSection();
  final PsiDocumentManagerBase manager=(PsiDocumentManagerBase)PsiDocumentManager.getInstance(myProject);
  final PsiToDocumentSynchronizer synchronizer=manager.getSynchronizer();
  final PsiElement changeScope=transaction.getChangeScope();
  LOG.assertTrue(changeScope != null);
  final PsiFile containingFileByTree=getContainingFileByTree(changeScope);
  boolean physical=changeScope.isPhysical();
  if (physical && synchronizer.toProcessPsiEvent() && isDocumentUncommitted(containingFileByTree)) {
    throw new IllegalStateException("Attempt to modify PSI for non-committed Document!");
  }
  BlockSupportImpl.sendBeforeChildrenChangeEvent((PsiManagerImpl)PsiManager.getInstance(myProject),changeScope,true);
  Document document=containingFileByTree == null ? null : physical ? manager.getDocument(containingFileByTree) : manager.getCachedDocument(containingFileByTree);
  if (document != null) {
    synchronizer.startTransaction(myProject,document,changeScope);
  }
}
