{
  PsiToDocumentSynchronizer synchronizer=((PsiDocumentManagerBase)PsiDocumentManager.getInstance(myProject)).getSynchronizer();
  TextRange changedPsiRange=DocumentCommitProcessor.getChangedPsiRange(file,treeElement,newText);
  if (changedPsiRange == null)   return;
  final DiffLog log=BlockSupport.getInstance(myProject).reparseRange(file,changedPsiRange,newText,new EmptyProgressIndicator());
  synchronizer.setIgnorePsiEvents(true);
  try {
    CodeStyleManager.getInstance(file.getProject()).performActionWithFormatterDisabled(new Runnable(){
      @Override public void run(){
        runTransaction(new PomTransactionBase(file,getModelAspect(TreeAspect.class)){
          @Nullable @Override public PomModelEvent runInner() throws IncorrectOperationException {
            return new TreeAspectEvent(PomModelImpl.this,log.performActualPsiChange(file));
          }
        }
);
      }
    }
);
  }
  finally {
    synchronizer.setIgnorePsiEvents(false);
  }
}
