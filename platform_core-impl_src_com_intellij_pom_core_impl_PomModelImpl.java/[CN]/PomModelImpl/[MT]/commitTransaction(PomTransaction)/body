{
  final ProgressIndicator progressIndicator=ProgressIndicatorProvider.getGlobalProgressIndicator();
  final PsiDocumentManagerBase manager=(PsiDocumentManagerBase)PsiDocumentManager.getInstance(myProject);
  final PsiToDocumentSynchronizer synchronizer=manager.getSynchronizer();
  final PsiFile containingFileByTree=getContainingFileByTree(transaction.getChangeScope());
  Document document=containingFileByTree != null ? manager.getCachedDocument(containingFileByTree) : null;
  if (document != null) {
    final int oldLength=containingFileByTree.getTextLength();
    boolean success=synchronizer.commitTransaction(document);
    if (success) {
      BlockSupportImpl.sendAfterChildrenChangedEvent((PsiManagerImpl)PsiManager.getInstance(myProject),(PsiFileImpl)containingFileByTree,oldLength,true);
    }
  }
  if (containingFileByTree != null) {
    boolean isFromCommit=ApplicationManager.getApplication().isDispatchThread() && ApplicationManager.getApplication().hasWriteAction(CommitToPsiFileAction.class);
    if (!isFromCommit && !synchronizer.isIgnorePsiEvents()) {
      reparseParallelTrees(containingFileByTree);
    }
  }
  if (progressIndicator != null)   progressIndicator.finishNonCancelableSection();
}
