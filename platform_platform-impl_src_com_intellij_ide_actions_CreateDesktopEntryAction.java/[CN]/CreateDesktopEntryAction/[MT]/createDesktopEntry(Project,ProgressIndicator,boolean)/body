{
  if (!isAvailable())   return;
  final double step=(1.0 - indicator.getFraction()) / 3.0;
  try {
    indicator.setText(ApplicationBundle.message("desktop.entry.checking"));
    check();
    indicator.setFraction(indicator.getFraction() + step);
    indicator.setText(ApplicationBundle.message("desktop.entry.preparing"));
    final File entry=prepare();
    indicator.setFraction(indicator.getFraction() + step);
    indicator.setText(ApplicationBundle.message("desktop.entry.installing"));
    install(entry,globalEntry);
    indicator.setFraction(indicator.getFraction() + step);
    final String message=ApplicationBundle.message("desktop.entry.success",ApplicationNamesInfo.getInstance().getProductName());
    Notifications.Bus.notify(new Notification(Notifications.SYSTEM_MESSAGES_GROUP_ID,"Desktop entry created",message,NotificationType.INFORMATION));
  }
 catch (  Exception e) {
    final String message=e.getMessage();
    if (!StringUtil.isEmptyOrSpaces(message)) {
      LOG.warn(e);
      Notifications.Bus.notify(new Notification(Notifications.SYSTEM_MESSAGES_GROUP_ID,"Failed to create desktop entry",message,NotificationType.ERROR),project);
    }
 else {
      LOG.error(e);
    }
  }
}
