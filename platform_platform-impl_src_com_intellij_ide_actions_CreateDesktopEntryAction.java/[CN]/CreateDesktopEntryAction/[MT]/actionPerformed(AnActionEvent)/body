{
  if (!SystemInfo.isLinux)   return;
  ProgressManager.getInstance().run(new Task.Backgroundable(null,event.getPresentation().getText()){
    @Override public void run(    @NotNull final ProgressIndicator indicator){
      try {
        indicator.setText(ApplicationBundle.message("desktop.entry.checking"));
        check();
        indicator.setFraction(0.33);
        indicator.setText(ApplicationBundle.message("desktop.entry.preparing"));
        final File entry=prepare();
        indicator.setFraction(0.66);
        indicator.setText(ApplicationBundle.message("desktop.entry.installing"));
        install(entry);
        indicator.setFraction(1.0);
        final String message=ApplicationBundle.message("desktop.entry.success",ApplicationNamesInfo.getInstance().getProductName());
        Notifications.Bus.notify(new Notification(Notifications.SYSTEM_MESSAGES_GROUP_ID,"Desktop entry created",message,NotificationType.INFORMATION));
      }
 catch (      Exception e) {
        final String message=e.getMessage();
        if (!StringUtil.isEmptyOrSpaces(message)) {
          LOG.warn(e);
          Notifications.Bus.notify(new Notification(Notifications.SYSTEM_MESSAGES_GROUP_ID,"Failed to create desktop entry",message,NotificationType.ERROR),event.getProject());
        }
 else {
          LOG.error(e);
        }
      }
    }
  }
);
}
