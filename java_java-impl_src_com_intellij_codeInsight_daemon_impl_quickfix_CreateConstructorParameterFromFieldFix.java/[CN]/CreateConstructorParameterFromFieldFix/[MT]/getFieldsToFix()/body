{
  Map<SmartPsiElementPointer<PsiField>,Boolean> fields=myClass.getUserData(FIELDS);
  if (fields == null)   myClass.putUserData(FIELDS,fields=new ConcurrentWeakHashMap<SmartPsiElementPointer<PsiField>,Boolean>(1));
  final Map<SmartPsiElementPointer<PsiField>,Boolean> finalFields=fields;
  return new AbstractCollection<SmartPsiElementPointer<PsiField>>(){
    @Override public boolean add(    SmartPsiElementPointer<PsiField> psiVariable){
      return finalFields.put(psiVariable,Boolean.TRUE) == null;
    }
    @Override public Iterator<SmartPsiElementPointer<PsiField>> iterator(){
      return finalFields.keySet().iterator();
    }
    @Override public int size(){
      return finalFields.size();
    }
  }
;
}
