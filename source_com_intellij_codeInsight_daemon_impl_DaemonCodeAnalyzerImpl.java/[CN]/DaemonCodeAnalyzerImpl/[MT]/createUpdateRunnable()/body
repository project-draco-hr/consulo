{
  return new Runnable(){
    public void run(){
      if (LOG.isDebugEnabled()) {
        LOG.debug("update runnable (myUpdateByTimerEnabled = " + myUpdateByTimerEnabled + ")");
      }
      if (!myUpdateByTimerEnabled)       return;
      final FileEditor[] activeEditors=getSelectedEditors();
      if (activeEditors.length == 0) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("no active editors");
        }
        return;
      }
class UpdateEditorRunnable implements Runnable {
        private int editorIndex;
        UpdateEditorRunnable(        int editorIndex){
          this.editorIndex=editorIndex;
        }
        public void run(){
          UpdateEditorRunnable postRunnable=editorIndex < activeEditors.length - 1 ? new UpdateEditorRunnable(editorIndex + 1) : null;
          updateAll(activeEditors[editorIndex],postRunnable);
        }
      }
      new UpdateEditorRunnable(0).run();
    }
  }
;
}
