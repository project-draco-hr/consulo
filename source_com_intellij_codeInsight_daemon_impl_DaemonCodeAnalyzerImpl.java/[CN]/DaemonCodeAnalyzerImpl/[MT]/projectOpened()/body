{
  EditorEventMulticaster eventMulticaster=EditorFactory.getInstance().getEventMulticaster();
  myDocumentListener=new DocumentAdapter(){
    public void documentChanged(    DocumentEvent e){
      stopProcess(true);
      UpdateHighlightersUtil.updateHighlightersByTyping(myProject,e);
    }
  }
;
  eventMulticaster.addDocumentListener(myDocumentListener);
  myCaretListener=new CaretListener(){
    public void caretPositionChanged(    CaretEvent e){
      stopProcess(true);
    }
  }
;
  eventMulticaster.addCaretListener(myCaretListener);
  eventMulticaster.addEditorMouseMotionListener(myEditorMouseMotionListener);
  myEditorTracker=createEditorTracker();
  myEditorTracker.addEditorTrackerListener(new EditorTrackerListener(){
    public void activeEditorsChanged(    final Editor[] editors){
      if (editors.length > 0) {
        myIsFrameFocused=true;
      }
      stopProcess(true);
    }
  }
);
  myEditorFactoryListener=new EditorFactoryAdapter(){
    public void editorCreated(    EditorFactoryEvent event){
      Editor editor=event.getEditor();
      Document document=editor.getDocument();
      PsiFile file=PsiDocumentManager.getInstance(myProject).getPsiFile(document);
      if (file != null) {
        ((EditorMarkupModel)editor.getMarkupModel()).setErrorStripeRenderer(new RefreshStatusRenderer(myProject,DaemonCodeAnalyzerImpl.this,document));
      }
    }
  }
;
  EditorFactory.getInstance().addEditorFactoryListener(myEditorFactoryListener);
  PsiManager.getInstance(myProject).addPsiTreeChangeListener(new PsiChangeHandler(myProject,this));
  CommandProcessor.getInstance().addCommandListener(myCommandListener);
  ApplicationManager.getApplication().addApplicationListener(myApplicationListener);
  EditorColorsManager.getInstance().addEditorColorsListener(myEditorColorsListener);
  TodoConfiguration.getInstance().addPropertyChangeListener(myTodoListener);
  ActionManagerEx.getInstanceEx().addAnActionListener(myAnActionListener);
  ExternalResourceManagerEx.getInstanceEx().addExteralResourceListener(myExternalResourceListener);
  if (myProject.hasComponent(AntConfiguration.class)) {
    AntConfiguration.getInstance(myProject).addAntConfigurationListener(myAntConfigurationListener);
  }
  myStatusBarUpdater=new StatusBarUpdater(myProject);
  myErrorStripeHandler=new ErrorStripeHandler(myProject);
  ((EditorEventMulticasterEx)eventMulticaster).addErrorStripeListener(myErrorStripeHandler);
  ProjectManager.getInstance().addProjectManagerListener(myProject,new ProjectManagerAdapter(){
    public void projectClosing(    Project project){
      dispose();
    }
  }
);
  IdeFrame frame=((WindowManagerEx)WindowManager.getInstance()).getFrame(myProject);
  if (frame != null) {
    frame.addWindowFocusListener(myIdeFrameFocusListener);
  }
  myInitialized=true;
}
