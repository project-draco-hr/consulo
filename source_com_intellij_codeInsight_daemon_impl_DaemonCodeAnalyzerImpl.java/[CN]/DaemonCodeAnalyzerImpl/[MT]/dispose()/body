{
  if (myDisposed)   return;
  EditorEventMulticaster eventMulticaster=EditorFactory.getInstance().getEventMulticaster();
  eventMulticaster.removeDocumentListener(myDocumentListener);
  eventMulticaster.removeCaretListener(myCaretListener);
  eventMulticaster.removeEditorMouseMotionListener(myEditorMouseMotionListener);
  EditorFactory.getInstance().removeEditorFactoryListener(myEditorFactoryListener);
  CommandProcessor.getInstance().removeCommandListener(myCommandListener);
  ApplicationManager.getApplication().removeApplicationListener(myApplicationListener);
  EditorColorsManager.getInstance().removeEditorColorsListener(myEditorColorsListener);
  TodoConfiguration.getInstance().removePropertyChangeListener(myTodoListener);
  ActionManagerEx.getInstanceEx().removeAnActionListener(myAnActionListener);
  ExternalResourceManagerEx.getInstanceEx().removeExternalResourceListener(myExternalResourceListener);
  if (myProject.hasComponent(AntConfiguration.class)) {
    AntConfiguration.getInstance(myProject).removeAntConfigurationListener(myAntConfigurationListener);
  }
  if (myStatusBarUpdater != null)   myStatusBarUpdater.dispose();
  if (myEditorTracker != null)   myEditorTracker.dispose();
  ((EditorEventMulticasterEx)eventMulticaster).removeErrorStripeListener(myErrorStripeHandler);
  myFileStatusMap.markAllFilesDirty();
  myDisposed=true;
  stopProcess(false);
  myUpdateThreadSemaphore.waitFor();
  myLastSettings=null;
  IdeFrame frame=((WindowManagerEx)WindowManager.getInstance()).getFrame(myProject);
  if (frame != null) {
    frame.removeWindowFocusListener(myIdeFrameFocusListener);
  }
}
