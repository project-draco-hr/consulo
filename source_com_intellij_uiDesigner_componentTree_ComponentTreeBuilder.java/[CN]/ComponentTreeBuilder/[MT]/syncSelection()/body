{
  final RadContainer rootContainer=myEditor.getRootContainer();
  final ArrayList<RadComponent> selection=new ArrayList<RadComponent>();
  FormEditingUtil.iterate(rootContainer,new FormEditingUtil.ComponentVisitor<RadComponent>(){
    public boolean visit(    final RadComponent component){
      if (component.isSelected()) {
        selection.add(component);
      }
      return true;
    }
  }
);
  if (selection.size() == 0) {
    selection.add(rootContainer);
  }
  myTree.clearSelection();
  TreePath firstSelectedPath=null;
  for (int i=selection.size() - 1; i >= 0; i--) {
    final ComponentPtr ptr=new ComponentPtr(myEditor,selection.get(i));
    buildNodeForElement(ptr);
    final DefaultMutableTreeNode nodeForElement=getNodeForElement(ptr);
    if (nodeForElement == null) {
      return;
    }
    final TreePath selectedPath=new TreePath(nodeForElement.getPath());
    myTree.addSelectionPath(selectedPath);
    if (firstSelectedPath == null) {
      firstSelectedPath=selectedPath;
    }
  }
  LOG.assertTrue(firstSelectedPath != null);
  myTree.scrollPathToVisible(firstSelectedPath);
  myEditor.fireSelectedComponentChanged();
}
