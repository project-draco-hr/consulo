{
  int p0=name.indexOf("$");
  int p1=p0 > 0 ? name.indexOf("$",p0 + 1) : -1;
  String base=p0 > 0 ? name.substring(0,Math.max(p0,p1)) : name;
  long hash=StringHash.calc(base);
  ClassLoader loader=myLuckyGuess.get(hash);
  if (loader == this)   throw new ClassNotFoundException(name);
  Class<?> c=null;
  if (loader != null) {
    try {
      c=loader.loadClass(name);
    }
 catch (    ClassNotFoundException ignored) {
    }
  }
  if (c == null) {
    boolean first=true;
    for (    IdeaPluginDescriptor descriptor : PluginManagerCore.getPlugins()) {
      ClassLoader l=descriptor.getPluginClassLoader();
      if (l == null || l == loader)       continue;
      try {
        l.loadClass(base);
        if (first) {
          myLuckyGuess.put(hash,l);
        }
        first=false;
        try {
          c=l.loadClass(name);
          break;
        }
 catch (        ClassNotFoundException e) {
          if (p0 > 0)           break;
          if (name.startsWith("java.") || name.startsWith("groovy."))           break;
        }
      }
 catch (      ClassNotFoundException ignored) {
      }
    }
    if (first && loader == null) {
      myLuckyGuess.put(hash,this);
    }
  }
  if (c != null)   return c;
  myLuckyGuess.put(StringHash.calc(name),this);
  throw new ClassNotFoundException(name);
}
