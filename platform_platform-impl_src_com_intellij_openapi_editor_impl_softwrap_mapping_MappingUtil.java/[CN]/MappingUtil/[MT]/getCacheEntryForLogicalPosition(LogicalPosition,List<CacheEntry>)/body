{
  int start=0;
  int end=cache.size() - 1;
  while (start <= end) {
    int i=(end + start) >>> 1;
    CacheEntry cacheEntry=cache.get(i);
    if (cacheEntry.startLogicalLine < position.line || cacheEntry.startLogicalLine == position.line && cacheEntry.startLogicalColumn < position.column) {
      start=i + 1;
      continue;
    }
    if (cacheEntry.startLogicalLine > position.line || cacheEntry.startLogicalLine == position.line && cacheEntry.startLogicalColumn > position.column) {
      end=i - 1;
      continue;
    }
    return assertEnd(position,cache.get(i));
  }
  return end < 0 ? null : assertEnd(position,cache.get(end));
}
