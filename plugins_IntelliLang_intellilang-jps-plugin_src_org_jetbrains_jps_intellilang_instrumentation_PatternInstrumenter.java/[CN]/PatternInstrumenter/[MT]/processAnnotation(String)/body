{
  if (!myProcessedAnnotations.add(annotationClassName)) {
    return;
  }
  try {
    final InputStream is=myClassFinder.getClassBytesAsStream(annotationClassName);
    if (is != null) {
      try {
        final Ref<String> patternString=new Ref<String>(null);
        final ClassVisitor visitor=new ClassVisitor(Opcodes.ASM4){
          @Override public AnnotationVisitor visitAnnotation(          String desc,          boolean visible){
            if (patternString.get() != null || !myPatternAnnotationClassName.equals(Type.getType(desc).getClassName())) {
              return null;
            }
            return new AnnotationVisitor(Opcodes.ASM4){
              public void visit(              @NonNls String name,              Object value){
                if ("value".equals(name) && value instanceof String) {
                  patternString.set((String)value);
                }
              }
            }
;
          }
        }
;
        new ClassReader(is).accept(visitor,ClassReader.SKIP_CODE | ClassReader.SKIP_DEBUG | ClassReader.SKIP_FRAMES);
        final String pattern=patternString.get();
        if (pattern != null) {
          myAnnotationNameToPatternMap.put(annotationClassName,pattern);
        }
      }
  finally {
        is.close();
      }
    }
  }
 catch (  IOException ignored) {
  }
}
