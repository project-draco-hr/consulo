{
  final MethodVisitor methodvisitor=cv.visitMethod(access,name,desc,signature,exceptions);
  if ((access & ACC_STATIC) != 0 && name.equals("<clinit>")) {
    myHasStaticInitializer=true;
    return new MethodVisitor(Opcodes.ASM4,methodvisitor){
      public void visitCode(){
        super.visitCode();
        patchStaticInitializer(mv);
      }
    }
;
  }
  final Type[] argTypes=Type.getArgumentTypes(desc);
  final Type returnType=Type.getReturnType(desc);
  if (isStringType(returnType)) {
    return new InstrumentationAdapter(this,methodvisitor,argTypes,returnType,access,name);
  }
 else {
    for (    Type type : argTypes) {
      if (isStringType(type)) {
        return new InstrumentationAdapter(this,methodvisitor,argTypes,returnType,access,name);
      }
    }
  }
  return methodvisitor;
}
