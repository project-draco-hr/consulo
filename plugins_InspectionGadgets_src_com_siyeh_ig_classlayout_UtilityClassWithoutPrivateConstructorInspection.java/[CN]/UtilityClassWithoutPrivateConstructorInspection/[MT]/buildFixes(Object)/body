{
  final List<InspectionGadgetsFix> fixes=new ArrayList();
  final PsiClass aClass=(PsiClass)infos[0];
  final PsiMethod constructor=getNullArgConstructor(aClass);
  if (constructor == null) {
    fixes.add(new CreateEmptyPrivateConstructor());
  }
 else {
    final Query<PsiReference> query=ReferencesSearch.search(constructor,constructor.getUseScope());
    final PsiReference reference=query.findFirst();
    if (reference == null) {
      fixes.add(new MakeConstructorPrivateFix());
    }
  }
  AddToIgnoreIfAnnotatedByListQuickFix.build(aClass,ignorableAnnotations,fixes);
  return fixes.toArray(new InspectionGadgetsFix[fixes.size()]);
}
