{
  if (isQuickFixOnReadOnlyFile(descriptor))   return;
  try {
    final PsiElement classNameIdentifier=descriptor.getPsiElement();
    final PsiClass psiClass=(PsiClass)classNameIdentifier.getParent();
    final PsiManager psiManager=PsiManager.getInstance(project);
    final PsiElementFactory factory=psiManager.getElementFactory();
    final PsiMethod constructor=factory.createConstructor();
    final PsiModifierList modifierList=constructor.getModifierList();
    modifierList.setModifierProperty(PsiModifier.PRIVATE,true);
    psiClass.add(constructor);
    final CodeStyleManager styleManager=psiManager.getCodeStyleManager();
    styleManager.reformat(constructor);
  }
 catch (  IncorrectOperationException e) {
    final Class aClass=getClass();
    final String className=aClass.getName();
    final Logger logger=Logger.getInstance(className);
    logger.error(e);
  }
}
