{
  XmlNSDescriptorImpl nsDescriptor=getNSDescriptorToSearchIn(rootTag,name,descriptor);
  if (nsDescriptor != descriptor) {
    return findSpecialTag(XmlUtil.findLocalNameByQualifiedName(name),specialName,nsDescriptor.getDescriptorFile().getDocument().getRootTag(),nsDescriptor);
  }
  XmlTag[] tags=rootTag.getSubTags();
  for (int i=0; i < tags.length; i++) {
    XmlTag tag=tags[i];
    if (equalsToSchemaName(tag,specialName)) {
      String attribute=tag.getAttributeValue("name");
      if (name.equals(attribute) || name.indexOf(":") >= 0 && name.substring(name.indexOf(":") + 1).equals(attribute)) {
        return tag;
      }
    }
 else     if (equalsToSchemaName(tag,"include") || (equalsToSchemaName(tag,"import") && rootTag.getNamespaceByPrefix(XmlUtil.findPrefixByQualifiedName(name)).equals(tag.getAttributeValue("namespace")))) {
      final String schemaLocation=tag.getAttributeValue("schemaLocation");
      if (schemaLocation != null) {
        final XmlFile xmlFile=XmlUtil.findXmlFile(rootTag.getContainingFile(),schemaLocation);
        if (xmlFile != null) {
          final XmlDocument document=xmlFile.getDocument();
          if (document != null) {
            final XmlTag rTag=findSpecialTag(name,specialName,document.getRootTag(),descriptor);
            if (rTag != null)             return rTag;
          }
        }
      }
    }
  }
  return null;
}
