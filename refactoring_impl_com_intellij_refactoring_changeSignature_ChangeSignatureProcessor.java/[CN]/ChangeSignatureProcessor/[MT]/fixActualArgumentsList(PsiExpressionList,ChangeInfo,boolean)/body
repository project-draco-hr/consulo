{
  final PsiElementFactory factory=JavaPsiFacade.getInstance(list.getProject()).getElementFactory();
  if (changeInfo.isParameterSetOrOrderChanged) {
    if (changeInfo.isPropagationEnabled) {
      final ParameterInfo[] createdParmsInfo=changeInfo.getCreatedParmsInfoWithoutVarargs();
      for (      ParameterInfo info : createdParmsInfo) {
        PsiExpression newArg;
        if (toInsertDefaultValue) {
          newArg=createDefaultValue(factory,info,list);
        }
 else {
          newArg=factory.createExpressionFromText(info.getName(),list);
        }
        list.add(newArg);
      }
    }
 else {
      final PsiExpression[] args=list.getExpressions();
      final int nonVarargCount=getNonVarargCount(changeInfo,args);
      final int varargCount=args.length - nonVarargCount;
      PsiExpression[] newVarargInitializers=null;
      final int newArgsLength;
      final int newNonVarargCount;
      if (changeInfo.arrayToVarargs) {
        newNonVarargCount=changeInfo.newParms.length - 1;
        final ParameterInfo lastNewParm=changeInfo.newParms[changeInfo.newParms.length - 1];
        final PsiExpression arrayToConvert=args[lastNewParm.oldParameterIndex];
        if (arrayToConvert instanceof PsiNewExpression) {
          final PsiNewExpression expression=(PsiNewExpression)arrayToConvert;
          final PsiArrayInitializerExpression arrayInitializer=expression.getArrayInitializer();
          if (arrayInitializer != null) {
            newVarargInitializers=arrayInitializer.getInitializers();
          }
        }
        newArgsLength=newVarargInitializers == null ? changeInfo.newParms.length : newNonVarargCount + newVarargInitializers.length;
      }
 else       if (changeInfo.retainsVarargs) {
        newNonVarargCount=changeInfo.newParms.length - 1;
        newArgsLength=newNonVarargCount + varargCount;
      }
 else       if (changeInfo.obtainsVarags) {
        newNonVarargCount=changeInfo.newParms.length - 1;
        newArgsLength=newNonVarargCount;
      }
 else {
        newNonVarargCount=changeInfo.newParms.length;
        newArgsLength=changeInfo.newParms.length;
      }
      final PsiExpression[] newArgs=new PsiExpression[newArgsLength];
      for (int i=0; i < newNonVarargCount; i++) {
        newArgs[i]=createActualArgument(list,changeInfo.newParms[i],toInsertDefaultValue,args);
      }
      if (changeInfo.arrayToVarargs) {
        if (newVarargInitializers == null) {
          newArgs[newNonVarargCount]=createActualArgument(list,changeInfo.newParms[newNonVarargCount],toInsertDefaultValue,args);
        }
 else {
          for (int i=0; i < newVarargInitializers.length; i++) {
            newArgs[i + newNonVarargCount]=newVarargInitializers[i];
          }
        }
      }
 else {
        final int newVarargCount=newArgsLength - newNonVarargCount;
        LOG.assertTrue(newVarargCount == 0 || newVarargCount == varargCount);
        for (int i=0; i < newVarargCount; i++) {
          newArgs[newNonVarargCount + i]=args[nonVarargCount + i];
        }
      }
      ChangeSignatureUtil.synchronizeList(list,Arrays.asList(newArgs),ExpressionList.INSTANCE,changeInfo.toRemoveParm);
    }
  }
}
