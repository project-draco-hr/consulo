{
  return new PsiReferenceProcessor(){
    public boolean execute(    PsiReference reference){
      AnalysisScope scope=getRefManager().getScope();
      if ((scope.contains(reference.getElement()) && reference.getElement().getContainingFile() instanceof PsiJavaFile) || PsiTreeUtil.getParentOfType(reference.getElement(),PsiDocComment.class) != null) {
        return true;
      }
      UsagesProcessor[] processorsArrayed=processors.toArray(new UsagesProcessor[processors.size()]);
      for (int j=0; j < processorsArrayed.length; j++) {
        UsagesProcessor processor=processorsArrayed[j];
        if (!processor.process(reference)) {
          processors.remove(processor);
        }
      }
      return processors.size() > 0;
    }
  }
;
}
