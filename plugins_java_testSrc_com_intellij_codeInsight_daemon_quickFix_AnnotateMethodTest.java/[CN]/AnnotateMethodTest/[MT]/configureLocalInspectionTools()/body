{
  return new LocalInspectionTool[]{new NullableStuffInspection(){
    @Override protected AnnotateMethodFix createAnnotateMethodFix(    String defaultNotNull,    String[] annotationsToRemove){
      return new AnnotateMethodFix(defaultNotNull,annotationsToRemove){
        @Override public int shouldAnnotateBaseMethod(        final PsiMethod method,        final PsiMethod superMethod,        final Project project){
          @NonNls String name=method.getName();
          int ret=name.startsWith("annotateBase") ? 0 : name.startsWith("dontAnnotateBase") ? 1 : 2;
          myMustBeAvailableAfterInvoke=ret == 2;
          return ret;
        }
      }
;
    }
  }
};
}
