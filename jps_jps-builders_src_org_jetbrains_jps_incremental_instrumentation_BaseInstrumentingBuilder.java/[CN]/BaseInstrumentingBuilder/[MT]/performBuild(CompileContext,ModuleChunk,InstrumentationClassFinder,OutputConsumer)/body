{
  ExitCode exitCode=ExitCode.NOTHING_DONE;
  for (  CompiledClass compiledClass : outputConsumer.getCompiledClasses().values()) {
    final BinaryContent originalContent=compiledClass.getContent();
    final ClassReader reader=new ClassReader(originalContent.getBuffer(),originalContent.getOffset(),originalContent.getLength());
    final int version=getClassFileVersion(reader);
    if (IS_INSTRUMENTED_KEY.get(compiledClass,Boolean.FALSE) || !canInstrument(compiledClass,version)) {
      continue;
    }
    final ClassWriter writer=new InstrumenterClassWriter(getAsmClassWriterFlags(version),finder);
    try {
      final BinaryContent instrumented=instrument(context,compiledClass,reader,writer,finder);
      if (instrumented != null) {
        compiledClass.setContent(instrumented);
        IS_INSTRUMENTED_KEY.set(compiledClass,Boolean.TRUE);
        exitCode=ExitCode.OK;
      }
    }
 catch (    Throwable e) {
      LOG.info(e);
      final String message=e.getMessage();
      if (message != null) {
        context.processMessage(new CompilerMessage(getPresentableName(),BuildMessage.Kind.ERROR,message,compiledClass.getSourceFile().getPath()));
      }
 else {
        context.processMessage(new CompilerMessage(getPresentableName(),e));
      }
    }
  }
  return exitCode;
}
