{
  final PsiExpressionList list=PsiTreeUtil.getParentOfType(element,PsiExpressionList.class,true,PsiStatement.class);
  if (list != null) {
    final PsiElement parent=list.getParent();
    if (parent instanceof PsiCallExpression) {
      final PsiExpression[] arguments=list.getExpressions();
      for (int i=0; i < arguments.length; i++) {
        final PsiExpression argument=arguments[i];
        if (argument == element) {
          final PsiCallExpression call=(PsiCallExpression)parent;
          final PsiMethod method=call.resolveMethod();
          if (method != null) {
            final PsiParameter[] parameters=method.getParameterList().getParameters();
            if (parameters.length > i) {
              return parameters[i];
            }
 else             if (parameters.length > 0) {
              final PsiParameter lastParam=parameters[parameters.length - 1];
              if (lastParam.getType() instanceof PsiEllipsisType) {
                return lastParam;
              }
            }
          }
          break;
        }
      }
    }
  }
  return null;
}
