{
  myFulfilledWorkGate=new DeferredActionsQueue(){
    public void addLast(    final Runnable runnable){
      myQueue.queue(new Update(runnable){
        @Override public void run(){
          queue.addLast(runnable);
        }
      }
);
    }
    public void setDispactchListener(    final DispatchListener listener){
      queue.setDispactchListener(listener);
    }
  }
;
  myEventsDispatcher=new OutputPacketProcessor(){
    public void processPacket(    final String packet){
      myFulfilledWorkGate.addLast(new Runnable(){
        public void run(){
          packetProcessor.processPacket(packet);
        }
      }
);
    }
    @Override public void processOutput(    final Printable printable){
      LOG.assertTrue(packetProcessor instanceof OutputPacketProcessor);
      myFulfilledWorkGate.addLast(new Runnable(){
        public void run(){
          ((OutputPacketProcessor)packetProcessor).processOutput(printable);
        }
      }
);
    }
  }
;
  myStream.setEventsDispatcher(myEventsDispatcher);
}
