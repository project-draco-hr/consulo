{
  PsiExpression[] expressions=callExpression.getArgumentList().getExpressions();
  if (expressions.length < 2)   return;
  PsiType[] types=new PsiType[expressions.length];
  for (int i=0; i < expressions.length; i++) {
    PsiExpression expression=expressions[i];
    types[i]=expression.getType();
  }
  List<int[]> permutations=new ArrayList<int[]>();
  try {
    registerSwapFixes(expressions,callExpression,permutations);
    registerShiftFixes(expressions,callExpression,permutations);
    if (permutations.size() == 1) {
      PermuteArgumentsFix fix=new PermuteArgumentsFix(callExpression,permutations.get(0));
      QuickFixAction.registerQuickFixAction(info,fixRange,fix,null,null);
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
