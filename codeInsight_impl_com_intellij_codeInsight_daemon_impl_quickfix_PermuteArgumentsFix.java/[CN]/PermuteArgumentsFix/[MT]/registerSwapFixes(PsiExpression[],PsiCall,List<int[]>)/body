{
  for (int i=0; i < expressions.length; i++) {
    for (int j=i + 1; j < expressions.length; j++) {
      PsiCall copy=(PsiCall)callExpression.copy();
      PsiExpression[] copyExpressions=copy.getArgumentList().getExpressions();
      copyExpressions[i].replace(expressions[j]);
      copyExpressions[j].replace(expressions[i]);
      JavaResolveResult result=copy.resolveMethodGenerics();
      if (result.getElement() != null && result.isValidResult()) {
        int[] permutation=new int[expressions.length];
        for (int k=0; k < expressions.length; k++) {
          permutation[k]=k;
        }
        permutation[i]=j;
        permutation[j]=i;
        permutations.add(permutation);
        if (permutations.size() > 1)         return;
      }
    }
  }
}
