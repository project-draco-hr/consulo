{
  for (  VirtualFile root : myRoots) {
    try {
      final GitBranch branch=GitBranch.current(myProject,root);
      if (branch == null) {
        LOG.info("checkTrackedBranchesConfigured current branch is null");
        notifyImportantError(myProject,"Can't update: no current branch","You are in 'detached HEAD' state, which means that you're not on any branch" + rootStringIfNeeded(root) + "Checkout a branch to make update possible.");
        return false;
      }
      final GitBranch tracked=branch.tracked(myProject,root);
      if (tracked == null) {
        final String branchName=branch.getName();
        LOG.info("checkTrackedBranchesConfigured tracked branch is null for current branch " + branch);
        notifyImportantError(myProject,"Can't update: no tracked branch","No tracked branch configured for branch " + GitUIUtil.code(branchName) + rootStringIfNeeded(root)+ "To make your branch track a remote branch call, for example,<br/>"+ "<code>git branch --set-upstream "+ branchName+ " origin/"+ branchName+ "</code>");
        return false;
      }
      if (!tracked.exists(root)) {
        LOG.info("checkTrackedBranchesConfigured tracked branch " + tracked + "  doesn't exist.");
        notifyMessage(myProject,"Can't update: tracked branch doesn't exist.","Tracked branch <code>" + tracked.getName() + "</code> doesn't exist, so there is nothing to update"+ rootStringIfNeeded(root)+ "The branch will be automatically created when you push to it.",NotificationType.WARNING,true,null);
        return false;
      }
      myTrackedBranches.put(root,new GitBranchPair(branch,tracked));
    }
 catch (    VcsException e) {
      LOG.info("checkTrackedBranchesConfigured ",e);
      notifyImportantError(myProject,"Can't update: error identifying tracked branch",e.getLocalizedMessage());
      return false;
    }
  }
  return true;
}
