{
  LOG.info("checking tracked branch configuration...");
  for (  GitRepository repository : myRepositories) {
    VirtualFile root=repository.getRoot();
    final GitBranch branch=repository.getCurrentBranch();
    if (branch == null) {
      LOG.info("checkTrackedBranchesConfigured: current branch is null in " + repository);
      notifyImportantError(myProject,"Can't update: no current branch","You are in 'detached HEAD' state, which means that you're not on any branch" + rootStringIfNeeded(root) + "Checkout a branch to make update possible.");
      return false;
    }
    GitBranchTrackInfo trackInfo=GitBranchUtil.getTrackInfoForBranch(repository,branch);
    if (trackInfo == null) {
      final String branchName=branch.getName();
      LOG.info(String.format("checkTrackedBranchesConfigured: no track info for current branch %s in %s",branch,repository));
      notifyImportantError(myProject,"Can't update: no tracked branch","No tracked branch configured for branch " + code(branchName) + rootStringIfNeeded(root)+ "To make your branch track a remote branch call, for example,<br/>"+ "<code>git branch --set-upstream "+ branchName+ " origin/"+ branchName+ "</code>");
      return false;
    }
    GitBranch tracked=GitBranchUtil.findRemoteBranchByName(repository,trackInfo.getRemote(),trackInfo.getRemoteBranch());
    if (tracked == null) {
      LOG.info(String.format("checkTrackedBranchesConfigured: tracked branch %s not found in %s",tracked,repository));
      notifyMessage(myProject,"Can't update: tracked branch doesn't exist.","Tracked branch <code>" + trackInfo.getRemoteBranch() + "</code> doesn't exist"+ rootStringIfNeeded(root)+ "The branch will be automatically created when you push to it.",NotificationType.WARNING,true,null);
      return false;
    }
    myTrackedBranches.put(root,new GitBranchPair(branch,tracked));
  }
  return true;
}
