{
  try {
    Collection<VirtualFile> unmergedFiles=GitMergeUtil.getUnmergedFiles(myProject,myRoots);
    if (!unmergedFiles.isEmpty()) {
      LOG.info("checkUnmergedFiles unmergedFiles: " + unmergedFiles);
      return !new GitMergeConflictResolver(myProject,false,"Unmerged files detected. These conflicts must be resolved before update.","Can't update",""){
        @Override protected boolean proceedAfterAllMerged() throws VcsException {
          myMerger.mergeCommit(myRoots);
          return true;
        }
      }
.merge(myRoots);
    }
  }
 catch (  VcsException e) {
    LOG.info("areUnmergedFiles. Couldn't get unmerged files",e);
  }
  return false;
}
