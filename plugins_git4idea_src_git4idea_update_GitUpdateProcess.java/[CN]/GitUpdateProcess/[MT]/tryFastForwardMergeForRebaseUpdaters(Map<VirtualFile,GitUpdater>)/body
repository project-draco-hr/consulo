{
  Map<VirtualFile,GitUpdater> modifiedUpdaters=new HashMap<VirtualFile,GitUpdater>();
  Map<VirtualFile,Collection<Change>> changesUnderRoots=new LocalChangesUnderRoots(ChangeListManager.getInstance(myProject),ProjectLevelVcsManager.getInstance(myProject)).getChangesUnderRoots(updaters.keySet());
  for (  Map.Entry<VirtualFile,GitUpdater> updaterEntry : updaters.entrySet()) {
    VirtualFile root=updaterEntry.getKey();
    GitUpdater updater=updaterEntry.getValue();
    Collection<Change> changes=changesUnderRoots.get(root);
    if (updater instanceof GitRebaseUpdater && changes != null && !changes.isEmpty()) {
      GitRebaseUpdater rebaseUpdater=(GitRebaseUpdater)updater;
      if (rebaseUpdater.fastForwardMerge()) {
        continue;
      }
    }
    modifiedUpdaters.put(root,updater);
  }
  return modifiedUpdaters;
}
