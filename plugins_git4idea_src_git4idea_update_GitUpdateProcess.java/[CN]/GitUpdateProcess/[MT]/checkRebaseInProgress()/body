{
  final GitRebaser rebaser=new GitRebaser(myProject);
  final Collection<VirtualFile> rebasingRoots=rebaser.getRebasingRoots();
  if (rebasingRoots.isEmpty()) {
    return false;
  }
  LOG.info("checkRebaseInProgress rebasingRoots: " + rebasingRoots);
  return !new GitMergeConflictResolver(myProject,true,"You have unfinished rebase process. These conflicts must be resolved before update.","Can't update","Then you may <b>continue rebase</b>. <br/> You also may <b>abort rebase</b> to restore the original branch and stop rebasing."){
    @Override protected boolean proceedIfNothingToMerge(){
      return rebaser.continueRebase(rebasingRoots);
    }
    @Override protected boolean proceedAfterAllMerged(){
      return rebaser.continueRebase(rebasingRoots);
    }
  }
.merge(rebasingRoots);
}
