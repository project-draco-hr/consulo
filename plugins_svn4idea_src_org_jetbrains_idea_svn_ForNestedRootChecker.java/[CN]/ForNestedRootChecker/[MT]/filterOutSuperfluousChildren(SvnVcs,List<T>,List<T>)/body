{
  final UrlConstructor constructor=new UrlConstructor(vcs);
  Collections.sort(list,new Comparator<RootUrlPair>(){
    public int compare(    final RootUrlPair o1,    final RootUrlPair o2){
      return o1.getVirtualFile().getPath().compareTo(o2.getVirtualFile().getPath());
    }
  }
);
  for (int i=0; i < list.size(); i++) {
    final T child=list.get(i);
    boolean add=true;
    for (    T parent : result) {
      if (parent.getVirtualFile().getPath().equals(child.getVirtualFile().getPath())) {
        add=false;
        break;
      }
      final List<String> subpath=subpathIfAncestor(parent.getVirtualFile(),child.getVirtualFile());
      if (subpath != null) {
        final String supposed=constructor.getSupposedUrl(parent.getUrl(),subpath);
        if (supposed.equals(child.getUrl())) {
          add=false;
          break;
        }
      }
    }
    if (add) {
      result.add(child);
    }
  }
}
