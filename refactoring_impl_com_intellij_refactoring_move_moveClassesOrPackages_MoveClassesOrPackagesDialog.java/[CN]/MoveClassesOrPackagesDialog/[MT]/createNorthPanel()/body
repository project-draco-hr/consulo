{
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  panel.setBorder(IdeBorderFactory.createBorder());
  gbConstraints.insets=new Insets(4,8,4,8);
  gbConstraints.weighty=1;
  gbConstraints.weightx=1;
  gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
  gbConstraints.fill=GridBagConstraints.BOTH;
  panel.add(myNameLabel,gbConstraints);
  gbConstraints.gridx=0;
  gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
  gbConstraints.fill=GridBagConstraints.BOTH;
  gbConstraints.weightx=1;
  gbConstraints.anchor=GridBagConstraints.CENTER;
  myWithBrowseButtonReference.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      PackageChooserDialog chooser=new PackageChooserDialog(RefactoringBundle.message("choose.destination.package"),myProject);
      chooser.selectPackage(myWithBrowseButtonReference.getText());
      chooser.show();
      PsiPackage aPackage=chooser.getSelectedPackage();
      if (aPackage != null) {
        myWithBrowseButtonReference.setText(aPackage.getQualifiedName());
        validateOKButton();
      }
    }
  }
);
  JPanel _panel=new JPanel(new BorderLayout(4,0));
  _panel.add(myPromptTo,BorderLayout.WEST);
  _panel.add(myWithBrowseButtonReference,BorderLayout.CENTER);
  panel.add(_panel,gbConstraints);
  gbConstraints.gridx=0;
  gbConstraints.weightx=1;
  gbConstraints.gridwidth=1;
  gbConstraints.fill=GridBagConstraints.BOTH;
  myCbSearchInComments=new NonFocusableCheckBox();
  myCbSearchInComments.setText(RefactoringBundle.getSearchInCommentsAndStringsText());
  panel.add(myCbSearchInComments,gbConstraints);
  gbConstraints.gridx=1;
  gbConstraints.weightx=1;
  gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
  gbConstraints.fill=GridBagConstraints.BOTH;
  myCbSearchTextOccurences=new NonFocusableCheckBox();
  myCbSearchTextOccurences.setText(RefactoringBundle.getSearchForTextOccurrencesText());
  panel.add(myCbSearchTextOccurences,gbConstraints);
  if (!mySearchTextOccurencesEnabled) {
    myCbSearchTextOccurences.setEnabled(false);
    myCbSearchTextOccurences.setVisible(false);
    myCbSearchTextOccurences.setSelected(false);
  }
  gbConstraints.gridx=0;
  gbConstraints.gridwidth=2;
  myCbMoveToAnotherSourceFolder=new NonFocusableCheckBox();
  myCbMoveToAnotherSourceFolder.setText(RefactoringBundle.message("move.classes.move.to.another.source.folder"));
  panel.add(myCbMoveToAnotherSourceFolder,gbConstraints);
  myWithBrowseButtonReference.getChildComponent().getDocument().addDocumentListener(new DocumentAdapter(){
    public void documentChanged(    DocumentEvent e){
      validateOKButton();
    }
  }
);
  return panel;
}
