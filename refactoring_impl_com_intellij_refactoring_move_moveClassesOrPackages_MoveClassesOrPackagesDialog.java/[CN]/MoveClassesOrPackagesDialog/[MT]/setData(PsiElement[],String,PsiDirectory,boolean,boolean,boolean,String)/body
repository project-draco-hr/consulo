{
  myInitialTargetDirectory=initialTargetDirectory;
  if (targetPackageName.length() != 0) {
    myWithBrowseButtonReference.prependItem(targetPackageName);
    myClassPackageChooser.prependItem(targetPackageName);
  }
  String nameFromCallback=myMoveCallback instanceof MoveClassesOrPackagesCallback ? ((MoveClassesOrPackagesCallback)myMoveCallback).getElementsToMoveName() : null;
  if (nameFromCallback != null) {
    myNameLabel.setText(nameFromCallback);
  }
 else   if (psiElements.length == 1) {
    PsiElement firstElement=psiElements[0];
    PsiElement parent=firstElement.getParent();
    LOG.assertTrue(parent != null);
    myNameLabel.setText(RefactoringBundle.message("move.single.class.or.package.name.label",UsageViewUtil.getType(firstElement),UsageViewUtil.getLongName(firstElement)));
  }
 else   if (psiElements.length > 1) {
    myNameLabel.setText(psiElements[0] instanceof PsiClass ? RefactoringBundle.message("move.specified.classes") : RefactoringBundle.message("move.specified.packages"));
  }
  selectInitialCard();
  myCbSearchInComments.setSelected(searchInComments);
  myCbSearchTextOccurences.setSelected(searchForTextOccurences);
  if (getSourceRoots().length == 1) {
    myCbMoveToAnotherSourceFolder.setSelected(false);
    myCbMoveToAnotherSourceFolder.setEnabled(false);
  }
 else {
    myCbMoveToAnotherSourceFolder.setSelected(!isTargetDirectoryFixed);
  }
  validateButtons();
  myHelpID=helpID;
}
