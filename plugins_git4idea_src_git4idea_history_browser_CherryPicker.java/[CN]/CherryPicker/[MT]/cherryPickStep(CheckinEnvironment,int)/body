{
  final GitCommit commit=myCommits.get(i);
  try {
    myAccess.cherryPick(commit);
  }
 catch (  VcsException e) {
    myExceptions.add(e);
  }
  final List<Change> changes=commit.getChanges();
  final Collection<FilePath> paths=ChangesUtil.getPaths(changes);
  String message=ce.getDefaultMessageFor(paths.toArray(new FilePath[paths.size()]));
  message=(message == null) ? new StringBuilder().append(commit.getDescription()).append("(cherry picked from commit ").append(commit.getShortHash()).append(")").toString() : message;
  myMessagesInOrder.add(message);
  myFilesToMove.put(message,paths);
  myDirtyFiles.addAll(paths);
}
