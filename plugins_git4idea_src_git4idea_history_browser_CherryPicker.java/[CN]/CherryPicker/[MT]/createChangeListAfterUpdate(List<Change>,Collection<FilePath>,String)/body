{
  final AtomicReference<LocalChangeList> changeList=new AtomicReference<LocalChangeList>();
  GuiUtils.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      myChangeListManager.invokeAfterUpdate(new Runnable(){
        public void run(){
          changeList.set(createChangeList(changes,commitMessage));
        }
      }
,InvokeAfterUpdateMode.SYNCHRONOUS_NOT_CANCELLABLE,"",new Consumer<VcsDirtyScopeManager>(){
        public void consume(        VcsDirtyScopeManager vcsDirtyScopeManager){
          vcsDirtyScopeManager.filePathsDirty(paths,null);
        }
      }
,ModalityState.current());
    }
  }
,ModalityState.NON_MODAL);
  return changeList.get();
}
