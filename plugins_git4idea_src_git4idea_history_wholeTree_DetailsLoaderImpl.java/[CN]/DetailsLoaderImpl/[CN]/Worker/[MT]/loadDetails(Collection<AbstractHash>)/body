{
  final List<String> converted=new ArrayList<String>();
  for (  final AbstractHash hash : hashes) {
    if (myDetailsCache.convert(myVirtualFile,hash) == null) {
      converted.add(hash.getString());
    }
  }
  if (!hashes.isEmpty()) {
    final Collection<GitCommit> result=myAccess.getCommitDetails(converted,myRefs.get(myAccess.getRoot()));
    if (result != null && (!result.isEmpty())) {
      myDetailsCache.acceptAnswer(result,myAccess.getRoot());
      for (      GitCommit gitCommit : result) {
        converted.remove(gitCommit.getShortHash().getString());
      }
    }
    if (!converted.isEmpty()) {
      final Collection<GitCommit> error=new ArrayList<GitCommit>();
      for (      String s : converted) {
        error.add(createNotLoadedCommit(AbstractHash.create(s)));
      }
      myDetailsCache.acceptAnswer(error,myAccess.getRoot());
    }
  }
}
