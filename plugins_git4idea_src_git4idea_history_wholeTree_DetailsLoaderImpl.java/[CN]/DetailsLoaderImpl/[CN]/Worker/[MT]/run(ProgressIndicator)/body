{
  final CommitIdsHolder<AbstractHash> holder;
  final SymbolicRefsI refs;
synchronized (myLock) {
    holder=myLoadIdsGatherer.get(myVirtualFile);
    refs=myRefs.get(myAccess.getRoot());
  }
  if (holder == null)   return;
  final Collection<AbstractHash> hashes=holder.get(ourLoadSize);
  try {
    loadDetails(hashes,refs);
  }
 catch (  VcsException e) {
    LOG.info(e);
    for (    AbstractHash hash : hashes) {
      try {
        loadDetails(Collections.singletonList(hash),refs);
      }
 catch (      VcsException e1) {
        LOG.info(e1);
        myDetailsCache.acceptAnswer(Collections.singletonList(createNotLoadedCommit(hash)),myAccess.getRoot());
      }
    }
  }
  if (holder.haveData()) {
    myQueue.run(this,myState,null);
  }
}
