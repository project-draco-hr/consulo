{
  element.accept(new DomElementVisitor(){
    public void visitDomElement(    DomElement element){
      final DomGenericInfo info=element.getGenericInfo();
      final List<DomChildrenDescription> list=info.getChildrenDescriptions();
      for (      final DomChildrenDescription description : list) {
        final List<? extends DomElement> values=description.getValues(element);
        if (description instanceof DomAttributeChildDescription) {
          final Required required=((DomAttributeChildDescription)description).getRequiredAnnotation();
          if (required != null) {
            final GenericAttributeValue child=(GenericAttributeValue)values.get(0);
            if (child.getXmlElement() == null) {
              annotator.createProblem(child,IdeBundle.message("attribute.0.should.be.defined",child.getXmlElementName()));
            }
 else {
              checkRequiredGenericValue(child,required,annotator);
            }
          }
        }
 else         if (description instanceof DomFixedChildDescription) {
          final DomFixedChildDescription childDescription=(DomFixedChildDescription)description;
          for (int i=0; i < values.size(); i++) {
            final Required required=childDescription.getRequiredAnnotation(i);
            if (required != null) {
              final DomElement child=values.get(i);
              if (child.getXmlElement() == null) {
                annotator.createProblem(child,IdeBundle.message("child.tag.0.should.be.defined",child.getXmlElementName()));
              }
 else               if (child instanceof GenericDomValue) {
                checkRequiredGenericValue((GenericDomValue)child,required,annotator);
              }
            }
          }
        }
 else         if (values.isEmpty()) {
          final DomCollectionChildDescription childDescription=(DomCollectionChildDescription)description;
          if (childDescription.isRequiredNotEmpty()) {
            annotator.createProblem(element,childDescription,IdeBundle.message("child.tag.0.should.be.defined",description.getXmlElementName()));
          }
        }
      }
      element.acceptChildren(this);
    }
  }
);
}
