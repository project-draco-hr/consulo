{
  final ArrayList actionObjects=new ArrayList();
  final ArrayList actionNames=new ArrayList();
  for (int i=0; i < myActionObjects.length; i++) {
    Object actionObject=myActionObjects[i];
    if (callback.isApplicable(actionObject)) {
      actionObjects.add(actionObject);
      actionNames.add(myActionNames[i]);
    }
  }
  if (actionObjects.size() == 0)   return;
  final JList list=new JList(actionNames.toArray());
  list.setCellRenderer(new MyListCellRenderer());
  final Runnable listener=new Runnable(){
    public void run(){
      int index=list.getSelectedIndex();
      if (index >= 0) {
        final Object actionObject=actionObjects.get(index);
        CommandProcessor.getInstance().executeCommand(project,new Runnable(){
          public void run(){
            final Runnable action=new Runnable(){
              public void run(){
                callback.execute(actionObject);
              }
            }
;
            ApplicationManager.getApplication().runWriteAction(action);
          }
        }
,null,null);
      }
    }
  }
;
  final ListPopup listPopup=new ListPopup(myTitle,list,listener,project);
  if (myShowNumbers) {
    list.addKeyListener(new KeyAdapter(){
      public void keyPressed(      KeyEvent e){
        char c=e.getKeyChar();
        int index=-1;
        if ('0' <= c && c <= '9') {
          index=c == '0' ? 9 : c - '1';
        }
 else         if ('A' <= c && c <= 'Z') {
          index=c - 'A' + 10;
        }
 else         if ('a' <= c && c <= 'z') {
          index=c - 'a' + 10;
        }
        if (index >= 0 && index < list.getModel().getSize()) {
          list.setSelectedIndex(index);
          listener.run();
          listPopup.closePopup(false);
        }
      }
    }
);
  }
  LogicalPosition caretLogicalPosition=editor.getCaretModel().getLogicalPosition();
  Point caretLocation=editor.logicalPositionToXY(new LogicalPosition(caretLogicalPosition.line + 1,caretLogicalPosition.column));
  Point location=editor.getContentComponent().getLocationOnScreen();
  listPopup.show(caretLocation.x + location.x,caretLocation.y + location.y);
}
