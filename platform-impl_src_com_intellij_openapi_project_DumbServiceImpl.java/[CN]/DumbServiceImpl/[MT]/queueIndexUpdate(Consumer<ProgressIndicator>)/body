{
  final Runnable update=new Runnable(){
    public void run(){
      if (myProject.isDisposed()) {
        updateFinished();
        return;
      }
      ProgressManager.getInstance().run(new Task.Backgroundable(myProject,"Updating indices",false){
        @Override public void run(        @NotNull final ProgressIndicator indicator){
          indicator.setIndeterminate(false);
          indicator.setText("Indexing...");
          try {
            action.consume(indicator);
          }
  finally {
            ApplicationManager.getApplication().invokeLater(new DumbAwareRunnable(){
              public void run(){
                updateFinished();
              }
            }
);
          }
        }
      }
);
    }
  }
;
  invokeOnEDT(new DumbAwareRunnable(){
    public void run(){
      if (myProject.isDisposed())       return;
      myPublisher.beforeEnteringDumbMode();
      final boolean wasDumb=ApplicationManager.getApplication().runWriteAction(new Computable<Boolean>(){
        public Boolean compute(){
          final boolean wasDumb=myDumb.getAndSet(true);
          if (!wasDumb) {
            myPublisher.enteredDumbMode();
          }
          return wasDumb;
        }
      }
).booleanValue();
      if (wasDumb) {
        myUpdateQueue.addLast(update);
      }
 else {
        update.run();
      }
    }
  }
);
}
