{
  if (k != null) {
    for (Node<K,V> e=first; e != null; ) {
      int s;
      if (((s=lockState) & (WAITER | WRITER)) != 0) {
        if (e.hash == h && isEqual((K)k,e.key,myHashingStrategy)) {
          return e;
        }
        e=e.next;
      }
 else       if (U.compareAndSwapInt(this,LOCKSTATE,s,s + READER)) {
        TreeNode<K,V> r, p;
        try {
          p=((r=root) == null ? null : r.findTreeNode(h,k,null));
        }
  finally {
          int ls;
          do {
          }
 while (!U.compareAndSwapInt(this,LOCKSTATE,ls=lockState,ls - READER));
          Thread w;
          if (ls == (READER | WAITER) && (w=waiter) != null) {
            LockSupport.unpark(w);
          }
        }
        return p;
      }
    }
  }
  return null;
}
