{
  lock();
  try {
    int c=count;
    if (c++ > threshold)     rehash();
    HashEntry[] tab=table;
    int index=hash & (tab.length - 1);
    HashEntry<K,V> first=(HashEntry<K,V>)tab[index];
    HashEntry<K,V> e=first;
    while (e != null && (e.hash != hash || !myHashingStrategy.equals(key,e.key)))     e=e.next;
    V oldValue;
    if (e != null) {
      oldValue=e.value;
      if (!onlyIfAbsent)       e.value=value;
    }
 else {
      oldValue=null;
      ++modCount;
      tab[index]=new HashEntry<K,V>(key,hash,first,value);
      count=c;
    }
    return oldValue;
  }
  finally {
    unlock();
  }
}
