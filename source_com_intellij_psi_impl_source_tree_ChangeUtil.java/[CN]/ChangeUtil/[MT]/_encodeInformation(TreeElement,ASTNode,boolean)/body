{
  if (original instanceof CompositeElement) {
    if (original.getElementType() == ElementType.JAVA_CODE_REFERENCE || original.getElementType() == ElementType.REFERENCE_EXPRESSION) {
      if (encodeRefTargets) {
        encodeInformationInRef(element,original);
      }
    }
 else     if (original.getElementType() == ElementType.MODIFIER_LIST) {
      if ((original.getTreeParent().getElementType() == ElementType.FIELD || original.getTreeParent().getElementType() == ElementType.METHOD) && original.getTreeParent().getTreeParent().getElementType() == ElementType.CLASS && ((PsiClass)SourceTreeToPsiMap.treeElementToPsi(original.getTreeParent().getTreeParent())).isInterface()) {
        element.putUserData(INTERFACE_MODIFIERS_FLAG_KEY,Boolean.TRUE);
      }
    }
    ChameleonTransforming.transformChildren(element);
    ChameleonTransforming.transformChildren(original);
    TreeElement child=(TreeElement)element.getFirstChildNode();
    ASTNode child1=original.getFirstChildNode();
    while (child != null) {
      _encodeInformation(child,child1,encodeRefTargets);
      child=child.getTreeNext();
      child1=child1.getTreeNext();
    }
  }
}
