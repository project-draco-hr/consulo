{
  if (original.getElementType() == JavaElementType.REFERENCE_EXPRESSION) {
    if (original.getTreeParent().getElementType() != JavaElementType.REFERENCE_EXPRESSION)     return;
    PsiElement target=((PsiJavaCodeReferenceElement)SourceTreeToPsiMap.treeElementToPsi(original)).resolve();
    if (target instanceof PsiClass) {
      ref.putCopyableUserData(REFERENCED_CLASS_KEY,(PsiClass)target);
    }
  }
 else   if (original.getElementType() == JavaElementType.JAVA_CODE_REFERENCE) {
switch (((PsiJavaCodeReferenceElementImpl)original).getKind()) {
case PsiJavaCodeReferenceElementImpl.CLASS_NAME_KIND:
case PsiJavaCodeReferenceElementImpl.CLASS_OR_PACKAGE_NAME_KIND:
case PsiJavaCodeReferenceElementImpl.CLASS_IN_QUALIFIED_NEW_KIND:
      final PsiElement target=((PsiJavaCodeReferenceElement)SourceTreeToPsiMap.treeElementToPsi(original)).resolve();
    if (target instanceof PsiClass) {
      ref.putCopyableUserData(REFERENCED_CLASS_KEY,(PsiClass)target);
    }
  break;
case PsiJavaCodeReferenceElementImpl.PACKAGE_NAME_KIND:
case PsiJavaCodeReferenceElementImpl.CLASS_FQ_NAME_KIND:
case PsiJavaCodeReferenceElementImpl.CLASS_FQ_OR_PACKAGE_NAME_KIND:
break;
default :
LOG.assertTrue(false);
}
}
 else {
LOG.assertTrue(false,"Wrong element type: " + original.getElementType());
}
}
