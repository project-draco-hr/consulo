{
  final FileElement changedFile=TreeUtil.getFileElement(changedElement);
  final PsiManager manager=changedFile.getManager();
  final PomModel model=manager.getProject().getModel();
  try {
    final TreeAspect treeAspect=model.getModelAspect(TreeAspect.class);
    model.runTransaction(new PomTransactionBase(changedElement.getPsi()){
      public PomModelEvent runInner() throws IncorrectOperationException {
        final PomModelEvent event=new PomModelEvent(model);
        final TreeChangeEvent destinationTreeChange=new TreeChangeEventImpl(treeAspect,changedFile);
        event.registerChangeSet(treeAspect,destinationTreeChange);
        RepositoryManager repositoryManager=((PsiManagerImpl)manager).getRepositoryManager();
        if (repositoryManager != null) {
          final PsiFile file=(PsiFile)changedFile.getPsi();
          repositoryManager.beforeChildAddedOrRemoved(file,changedElement);
          action.makeChange(destinationTreeChange);
          repositoryManager.beforeChildAddedOrRemoved(file,changedElement);
        }
 else {
          action.makeChange(destinationTreeChange);
        }
        changedElement.subtreeChanged();
        return event;
      }
    }
,treeAspect);
  }
 catch (  IncorrectOperationException ioe) {
    LOG.error(ioe);
  }
}
