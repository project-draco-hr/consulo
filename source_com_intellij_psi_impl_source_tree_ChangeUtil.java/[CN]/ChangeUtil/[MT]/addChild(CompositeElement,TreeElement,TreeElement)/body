{
  LOG.assertTrue(anchorBefore == null || anchorBefore.getTreeParent() == parent);
  transformAll(parent.getFirstChildNode());
  final TreeElement last=child.getTreeNext();
  final TreeElement first=transformAll(child);
  final CharTable newCharTab=SharedImplUtil.findCharTableByTree(parent);
  final CharTable oldCharTab=SharedImplUtil.findCharTableByTree(child);
  removeChildrenInner(first,last,oldCharTab);
  if (newCharTab != oldCharTab)   registerLeafsInCharTab(newCharTab,child,oldCharTab);
  prepareAndRunChangeAction(new ChangeAction(){
    public void makeChange(    TreeChangeEvent destinationTreeChange){
      if (anchorBefore != null) {
        insertBefore(destinationTreeChange,anchorBefore,first);
      }
 else {
        add(destinationTreeChange,parent,first);
      }
    }
  }
,parent);
}
