{
  if (original instanceof CompositeElement) {
    if (original.getElementType() == JavaElementType.JAVA_CODE_REFERENCE || original.getElementType() == JavaElementType.REFERENCE_EXPRESSION) {
      encodeInformationInRef(element,original);
    }
 else     if (original.getElementType() == JavaElementType.MODIFIER_LIST && (original.getTreeParent().getElementType() == JavaElementType.FIELD || original.getTreeParent().getElementType() == JavaElementType.METHOD || original.getTreeParent().getElementType() == JavaElementType.ANNOTATION_METHOD) && original.getTreeParent().getTreeParent().getElementType() == JavaElementType.CLASS && (((PsiClass)SourceTreeToPsiMap.treeElementToPsi(original.getTreeParent().getTreeParent())).isInterface() || ((PsiClass)SourceTreeToPsiMap.treeElementToPsi(original.getTreeParent().getTreeParent())).isAnnotationType())) {
      element.putUserData(INTERFACE_MODIFIERS_FLAG_KEY,Boolean.TRUE);
    }
    ChameleonTransforming.transformChildren(element);
    ChameleonTransforming.transformChildren(original);
    TreeElement child=element.getFirstChildNode();
    ASTNode child1=original.getFirstChildNode();
    while (child != null) {
      encodeInformation(child,child1,shallEncodeEscapedTexts);
      child=child.getTreeNext();
      child1=child1.getTreeNext();
    }
  }
 else   if (shallEncodeEscapedTexts && original instanceof LeafElement && !(original instanceof OuterLanguageElement)) {
    if (!isInCData(original)) {
      final String originalText=element.getText();
      final String unescapedText=XmlUtil.unescape(originalText);
      if (!Comparing.equal(originalText,unescapedText)) {
        ((LeafElement)element).setText(unescapedText);
        element.putCopyableUserData(ALREADY_ESCAPED,null);
      }
    }
  }
}
