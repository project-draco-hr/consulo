{
  final DefaultActionGroup group=new DefaultActionGroup();
  final ShowPrevChangeMarkerAction localShowPrevAction=new ShowPrevChangeMarkerAction(tracker.getPrevRange(range),tracker,editor);
  final ShowNextChangeMarkerAction localShowNextAction=new ShowNextChangeMarkerAction(tracker.getNextRange(range),tracker,editor);
  final RollbackLineStatusRangeAction rollback=new RollbackLineStatusRangeAction(tracker,range,editor);
  final ShowLineStatusRangeDiffAction showDiff=new ShowLineStatusRangeDiffAction(tracker,range,editor);
  final CopyLineStatusRangeAction copyRange=new CopyLineStatusRangeAction(tracker,range);
  group.add(localShowPrevAction);
  group.add(localShowNextAction);
  group.add(rollback);
  group.add(showDiff);
  group.add(copyRange);
  JComponent editorComponent=editor.getComponent();
  EmptyAction.setupAction(localShowPrevAction,"VcsShowPrevChangeMarker",editorComponent);
  EmptyAction.setupAction(localShowNextAction,"VcsShowNextChangeMarker",editorComponent);
  EmptyAction.setupAction(rollback,IdeActions.SELECTED_CHANGES_ROLLBACK,editorComponent);
  EmptyAction.setupAction(showDiff,"ChangesView.Diff",editorComponent);
  EmptyAction.setupAction(copyRange,IdeActions.ACTION_COPY,editorComponent);
  final List<AnAction> actionList=ActionUtil.getActions(editorComponent);
  Disposer.register(parentDisposable,new Disposable(){
    @Override public void dispose(){
      actionList.remove(localShowPrevAction);
      actionList.remove(localShowNextAction);
      actionList.remove(rollback);
      actionList.remove(showDiff);
      actionList.remove(copyRange);
    }
  }
);
  return ActionManager.getInstance().createActionToolbar(ActionPlaces.FILEHISTORY_VIEW_TOOLBAR,group,true);
}
