{
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  if (methodExpression == null) {
    return false;
  }
  final String methodName=methodExpression.getReferenceName();
  if (!"compareTo".equals(methodName)) {
    return false;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return false;
  }
  final PsiParameterList paramList=method.getParameterList();
  if (paramList == null) {
    return false;
  }
  final PsiParameter[] parameters=paramList.getParameters();
  if (parameters.length != 1) {
    return false;
  }
  final PsiType parameterType=parameters[0].getType();
  if (!TypeUtils.isJavaLangObject(parameterType) && !TypeUtils.isJavaLangString(parameterType)) {
    return false;
  }
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null) {
    return false;
  }
  final String className=aClass.getQualifiedName();
  return "java.lang.String".equals(className);
}
