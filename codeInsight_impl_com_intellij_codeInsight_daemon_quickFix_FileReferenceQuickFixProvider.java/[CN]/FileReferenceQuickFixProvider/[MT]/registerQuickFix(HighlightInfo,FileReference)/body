{
  final FileReferenceSet fileReferenceSet=reference.getFileReferenceSet();
  int index=reference.getIndex();
  if (index < 0)   return;
  final String newFileName=reference.getCanonicalText();
  if (newFileName.length() == 0 || newFileName.indexOf('\\') != -1 || newFileName.indexOf('*') != -1 || newFileName.indexOf('?') != -1 || SystemInfo.isWindows && newFileName.indexOf(':') != -1) {
    return;
  }
  final PsiElement context;
  if (index > 0) {
    context=fileReferenceSet.getReference(index - 1).resolve();
  }
 else {
    final Collection<PsiElement> defaultContexts=fileReferenceSet.getDefaultContexts(reference.getElement());
    context=defaultContexts.isEmpty() ? null : defaultContexts.iterator().next();
  }
  final PsiDirectory directory=reference.getPsiDirectory(context);
  if (directory == null)   return;
  boolean differentCase=false;
  if (fileReferenceSet.isCaseSensitive()) {
    boolean original=fileReferenceSet.isCaseSensitive();
    try {
      fileReferenceSet.setCaseSensitive(false);
      final PsiElement psiElement=reference.resolve();
      if (psiElement instanceof PsiNamedElement) {
        final String existingElementName=((PsiNamedElement)psiElement).getName();
        differentCase=true;
        QuickFixAction.registerQuickFixAction(info,new RenameFileReferenceIntentionAction(existingElementName,reference));
        QuickFixAction.registerQuickFixAction(info,new RenameFileFix(newFileName));
      }
    }
  finally {
      fileReferenceSet.setCaseSensitive(original);
    }
  }
  if (differentCase && SystemInfo.isWindows)   return;
  final boolean isdirectory;
  if (!reference.isLast()) {
    try {
      directory.checkCreateSubdirectory(newFileName);
    }
 catch (    IncorrectOperationException ex) {
      return;
    }
    isdirectory=true;
  }
 else {
    FileType ft=FileTypeManager.getInstance().getFileTypeByFileName(newFileName);
    if (ft instanceof UnknownFileType)     return;
    try {
      directory.checkCreateFile(newFileName);
    }
 catch (    IncorrectOperationException ex) {
      return;
    }
    isdirectory=false;
  }
  QuickFixAction.registerQuickFixAction(info,new CreateFileIntentionAction(isdirectory,newFileName,directory));
}
