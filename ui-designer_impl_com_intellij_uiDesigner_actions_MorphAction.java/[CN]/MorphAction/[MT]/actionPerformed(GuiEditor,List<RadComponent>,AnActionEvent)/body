{
  Processor<ComponentItem> processor=new Processor<ComponentItem>(){
    public boolean process(    final ComponentItem selectedValue){
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          Runnable runnable=new Runnable(){
            public void run(){
              for (              RadComponent c : selection) {
                if (!morphComponent(editor,c,selectedValue))                 break;
              }
              editor.refreshAndSave(true);
            }
          }
;
          CommandProcessor.getInstance().executeCommand(editor.getProject(),runnable,UIDesignerBundle.message("morph.component.command"),null);
          editor.getGlassLayer().requestFocus();
        }
      }
);
      return true;
    }
  }
;
  PaletteListPopupStep step=new PaletteListPopupStep(editor,myLastMorphComponent,processor,UIDesignerBundle.message("morph.component.title"));
  step.hideNonAtomic();
  if (selection.size() == 1) {
    step.hideComponentClass(selection.get(0).getComponentClassName());
  }
  final ListPopup listPopup=JBPopupFactory.getInstance().createWizardStep(step);
  FormEditingUtil.showPopupUnderComponent(listPopup,selection.get(0));
}
