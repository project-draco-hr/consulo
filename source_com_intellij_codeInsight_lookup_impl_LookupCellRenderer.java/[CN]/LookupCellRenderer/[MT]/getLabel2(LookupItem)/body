{
  String text=null;
  if (showSignature(item)) {
    Object o=item.getObject();
    if (o instanceof PsiElement) {
      final PsiElement element=(PsiElement)o;
      if (element.isValid() && element instanceof PsiMethod) {
        PsiMethod method=(PsiMethod)element;
        final PsiSubstitutor substitutor=(PsiSubstitutor)item.getAttribute(LookupItem.SUBSTITUTOR);
        text=PsiFormatUtil.formatMethod(method,substitutor != null ? substitutor : PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE);
      }
    }
  }
  String tailText=(String)item.getAttribute(LookupItem.TAIL_TEXT_ATTR);
  if (tailText != null) {
    if (text == null) {
      text=tailText;
    }
 else {
      text+=tailText;
    }
  }
  if (item.getAttribute(LookupItem.INDICATE_ANONYMOUS) != null) {
    if (item.getObject() instanceof PsiClass) {
      final PsiClass psiClass=(PsiClass)item.getObject();
      if (psiClass.isInterface() || psiClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
        text+="{...}";
      }
    }
  }
  StrikeoutLabel label=myLabel2;
  if (text != null) {
    String s=text;
    int width=getTextWidth(item);
    int n=width - MAX_LENGTH * FONT_WIDTH;
    if (n > 0) {
      n=Math.min(n,(s.length() - 7) * FONT_WIDTH);
      if (n >= 0) {
        s=s.substring(0,s.length() - n / FONT_WIDTH - 3) + "...";
      }
    }
    label.setText(s);
  }
 else {
    label.setText("");
  }
  boolean isSmall=item.getAttribute(LookupItem.TAIL_TEXT_SMALL_ATTR) != null;
  label.setFont(isSmall ? SMALL_FONT : NORMAL_FONT);
  boolean overstrike=isToStrikeout(item);
  label.setStrikeout(overstrike);
  return label;
}
