{
  final GrExpression selectedExpression=expression.getSelectedExpression();
  final PsiType thisType=selectedExpression.getType();
  final GrArgumentList argList=expression.getArgumentList();
  final PsiType[] argTypes=PsiUtil.getArgumentTypes(argList,false,null);
  final PsiManager manager=expression.getManager();
  final GlobalSearchScope resolveScope=expression.getResolveScope();
  final GrExpression[] exprArgs=argList.getExpressionArguments();
  final GrNamedArgument[] namedArgs=argList.getNamedArguments();
  if (PsiImplUtil.isSimpleArrayAccess(thisType,argTypes,manager,resolveScope)) {
    expression.accept(this);
    builder.append("[");
    final GrExpression arg=exprArgs[0];
    arg.accept(this);
    builder.append("]");
    return;
  }
  final GroovyResolveResult candidate=PsiImplUtil.getIndexPropertyMethodCandidate(thisType,argTypes,expression);
  GenerationUtil.invokeMethodByResolveResult(selectedExpression,candidate,"getAt",exprArgs,namedArgs,GrClosableBlock.EMPTY_ARRAY,this,expression);
}
