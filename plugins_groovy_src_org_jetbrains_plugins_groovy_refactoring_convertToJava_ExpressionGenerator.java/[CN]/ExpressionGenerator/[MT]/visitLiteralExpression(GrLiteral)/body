{
  final TypeConstraint[] constraints=GroovyExpectedTypesProvider.calculateTypeConstraints(literal);
  boolean isChar=false;
  for (  TypeConstraint constraint : constraints) {
    if (constraint instanceof SubtypeConstraint && TypesUtil.unboxPrimitiveTypeWrapper(constraint.getDefaultType()) == PsiType.CHAR) {
      isChar=true;
    }
  }
  final String text=literal.getText();
  final Object value;
  if (text.startsWith("'''") || text.startsWith("\"\"\"")) {
    String string=GrStringUtil.removeQuotes(text).replace("\n","\\n").replace("\r","\\r");
    builder.append('"').append(string).append('"');
  }
 else   if (text.startsWith("'")) {
    if (isChar) {
      builder.append(text);
    }
 else {
      builder.append('"').append(StringUtil.escapeQuotes(StringUtil.trimEnd(text.substring(1,text.length()),"'"))).append('"');
    }
  }
 else   if (text.startsWith("\"")) {
    if (isChar) {
      builder.append('\'').append(StringUtil.escapeQuotes(StringUtil.trimEnd(text.substring(1,text.length()),"\""))).append('\'');
    }
 else {
      builder.append(text);
    }
  }
 else {
    builder.append(text);
  }
}
