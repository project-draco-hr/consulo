{
  final GrExpression lValue=expression.getLValue();
  GrExpression rValue=expression.getRValue();
  final IElementType token=expression.getOperationToken();
  if (token == GroovyTokenTypes.mASSIGN) {
    lValue.accept(this);
    builder.append(" = ");
    if (rValue != null) {
      rValue.accept(this);
    }
    return;
  }
  final GroovyResolveResult resolveResult=PsiImplUtil.extractUniqueResult(expression.multiResolve(false));
  final PsiElement resolved=resolveResult.getElement();
  if (resolved instanceof PsiMethod) {
    lValue.accept(this);
    builder.append(" = ");
    if (rValue == null) {
      rValue=factory.createExpressionFromText("null");
    }
    invokeMethodOn(((PsiMethod)resolved),lValue,new GrExpression[]{rValue},GrNamedArgument.EMPTY_ARRAY,GrClosableBlock.EMPTY_ARRAY,resolveResult.getSubstitutor(),expression);
  }
 else {
    writeSimpleBinaryExpression(expression.getOpToken(),lValue,rValue);
  }
}
