{
  final GrExpression lValue=expression.getLValue();
  GrExpression rValue=expression.getRValue();
  final IElementType token=expression.getOperationToken();
  PsiElement realLValue=PsiUtil.skipParentheses(lValue,false);
  if (realLValue instanceof GrReferenceExpression && rValue != null) {
    GroovyResolveResult resolveResult=((GrReferenceExpression)realLValue).advancedResolve();
    PsiElement resolved=resolveResult.getElement();
    if (resolved instanceof GrVariable && context.analyzedVars.toWrap((GrVariable)resolved)) {
      writeAssignmentWithRefSetter((GrExpression)realLValue,expression);
      return;
    }
 else     if (resolved instanceof PsiMethod && resolveResult.isInvokedOnProperty()) {
      writeAssignmentWithSetter(((GrReferenceExpression)realLValue).getQualifier(),(PsiMethod)resolved,expression);
      return;
    }
  }
  if (token == mASSIGN) {
    lValue.accept(this);
    builder.append(" = ");
    if (rValue != null) {
      rValue.accept(this);
    }
  }
 else {
    final GroovyResolveResult resolveResult=PsiImplUtil.extractUniqueResult(expression.multiResolve(false));
    final PsiElement resolved=resolveResult.getElement();
    if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(),rValue,expression.getOperationToken())) {
      invokeMethodOn(((PsiMethod)resolved),(GrExpression)lValue.copy(),rValue == null ? GrExpression.EMPTY_ARRAY : new GrExpression[]{rValue},GrNamedArgument.EMPTY_ARRAY,GrClosableBlock.EMPTY_ARRAY,resolveResult.getSubstitutor(),expression);
    }
 else {
      writeSimpleBinaryExpression(expression.getOpToken(),lValue,rValue);
    }
  }
}
