{
  final boolean postfix=expression instanceof GrPostfixExpression;
  final GroovyResolveResult resolveResult=PsiImplUtil.extractUniqueResult(expression.multiResolve(false));
  final PsiElement resolved=resolveResult.getElement();
  final GrExpression operand=expression.getOperand();
  IElementType opType=expression.getOperationTokenType();
  if (resolved instanceof PsiMethod) {
    if (opType == mLNOT) {
      builder.append('!');
    }
 else     if (opType == mINC || opType == mDEC) {
      if (!postfix || expression.getParent() instanceof GrStatementOwner || expression.getParent() instanceof GrControlStatement) {
        if (generatePrefixIncDec((PsiMethod)resolved,operand,expression))         return;
      }
    }
    if (operand != null && shouldNotReplaceOperatorWithMethod(operand.getType(),null,expression.getOperationTokenType())) {
      writeSimpleUnary(operand,expression,this);
    }
 else {
      invokeMethodOn(((PsiMethod)resolved),operand,GrExpression.EMPTY_ARRAY,GrNamedArgument.EMPTY_ARRAY,EMPTY_ARRAY,resolveResult.getSubstitutor(),expression);
    }
  }
 else   if (operand != null) {
    if (postfix) {
      operand.accept(this);
      builder.append(expression.getOperationToken().getText());
    }
 else {
      builder.append(expression.getOperationToken().getText());
      operand.accept(this);
    }
  }
}
