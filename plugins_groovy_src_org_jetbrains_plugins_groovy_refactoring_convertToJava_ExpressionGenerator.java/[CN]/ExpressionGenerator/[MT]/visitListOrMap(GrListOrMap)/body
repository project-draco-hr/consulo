{
  final PsiType type=listOrMap.getType();
  LOG.assertTrue(type instanceof GrLiteralClassType || type instanceof PsiArrayType || type instanceof PsiClassType);
  if (listOrMap.isMap()) {
    if (listOrMap.getNamedArguments().length == 0) {
      builder.append("new ");
      writeType(builder,type,listOrMap);
      builder.append("()");
    }
 else {
      String varName=generateMapVariableDeclaration(listOrMap,type);
      generateMapElementInsertions(listOrMap,varName);
      builder.append(varName);
    }
  }
 else {
    boolean isArray=type instanceof PsiArrayType;
    builder.append("new ");
    writeType(builder,type,listOrMap);
    if (listOrMap.getInitializers().length == 0) {
      if (isArray) {
        builder.replace(builder.length() - 2,builder.length(),"[0]");
      }
 else {
        builder.append("()");
      }
    }
 else {
      if (isArray) {
        builder.append('{');
      }
 else {
        builder.append("(java.util.Arrays.asList(");
      }
      genInitializers(listOrMap);
      if (isArray) {
        builder.append('}');
      }
 else {
        builder.append("))");
      }
    }
  }
}
