{
  final GrExpression condition=expression.getCondition();
  final GrExpression thenBranch=expression.getThenBranch();
  final GrExpression elseBranch=expression.getElseBranch();
  final PsiType type=condition.getType();
  if (type == null || TypesUtil.unboxPrimitiveTypeWrapper(type) == PsiType.BOOLEAN) {
    condition.accept(this);
  }
 else {
    final GroovyResolveResult resolveResult=PsiImplUtil.extractUniqueResult(ResolveUtil.getMethodCandidates(type,"asBoolean",expression,PsiType.EMPTY_ARRAY));
    final PsiElement resolved=resolveResult.getElement();
    if (resolved instanceof PsiMethod) {
      invokeMethodOn((PsiMethod)resolved,condition,GrExpression.EMPTY_ARRAY,GrNamedArgument.EMPTY_ARRAY,GrClosableBlock.EMPTY_ARRAY,resolveResult.getSubstitutor(),expression);
    }
 else {
      condition.accept(this);
    }
  }
  builder.append("?");
  thenBranch.accept(this);
  builder.append(":");
  elseBranch.accept(this);
}
