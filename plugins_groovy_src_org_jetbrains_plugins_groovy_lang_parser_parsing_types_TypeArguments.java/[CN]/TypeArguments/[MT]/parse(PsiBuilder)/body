{
  PsiBuilder.Marker taMarker=builder.mark();
  if (!ParserUtils.getToken(builder,mLT)) {
    taMarker.rollbackTo();
    return WRONGWAY;
  }
  ParserUtils.getToken(builder,mNLS);
  if (!TypeArgument.parse(builder)) {
    taMarker.rollbackTo();
    return WRONGWAY;
  }
  while (ParserUtils.getToken(builder,mCOMMA)) {
    ParserUtils.getToken(builder,mNLS);
    if (!TypeArgument.parse(builder)) {
      taMarker.done(TYPE_ARGUMENTS);
      return TYPE_ARGUMENTS;
    }
  }
  PsiBuilder.Marker rb=builder.mark();
  ParserUtils.getToken(builder,mNLS);
  if (ParserUtils.getToken(builder,mGT)) {
    rb.drop();
    ParserUtils.getToken(builder,mNLS);
  }
 else {
    rb.rollbackTo();
    builder.error(GroovyBundle.message("gt.expected"));
  }
  taMarker.done(TYPE_ARGUMENTS);
  return TYPE_ARGUMENTS;
}
