{
  final IProjectStore stateStore=((ProjectImpl)project).getStateStore();
  String projectPath=FileUtil.toSystemDependentName(stateStore.getLocation());
  if (!isConversionNeeded(projectPath,moduleFile)) {
    return true;
  }
  final int res=Messages.showYesNoDialog(project,IdeBundle.message("message.module.file.has.an.older.format.do.you.want.to.convert.it"),IdeBundle.message("dialog.title.convert.module"),Messages.getQuestionIcon());
  if (res != 0) {
    return false;
  }
  if (!moduleFile.canWrite()) {
    Messages.showErrorDialog(project,IdeBundle.message("error.message.cannot.modify.file.0",moduleFile.getAbsolutePath()),IdeBundle.message("dialog.title.convert.module"));
    return false;
  }
  try {
    ConversionContextImpl context=new ConversionContextImpl(projectPath);
    final List<ConversionRunner> runners=createConversionRunners(context,Collections.<String>emptySet());
    final File backupFile=ProjectConversionUtil.backupFile(moduleFile);
    for (    ConversionRunner runner : runners) {
      if (runner.isModuleConversionNeeded(moduleFile)) {
        runner.convertModule(moduleFile);
      }
    }
    context.saveFiles(Collections.singletonList(moduleFile));
    Messages.showInfoMessage(project,IdeBundle.message("message.your.module.was.succesfully.converted.br.old.version.was.saved.to.0",backupFile.getAbsolutePath()),IdeBundle.message("dialog.title.convert.module"));
    return true;
  }
 catch (  CannotConvertException e) {
    Messages.showErrorDialog(IdeBundle.message("error.cannot.load.project",e.getMessage()),"Cannot Convert Module");
    return false;
  }
catch (  IOException e) {
    return false;
  }
}
