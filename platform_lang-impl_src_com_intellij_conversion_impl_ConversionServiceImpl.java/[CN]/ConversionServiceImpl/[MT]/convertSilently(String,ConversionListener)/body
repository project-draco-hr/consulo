{
  try {
    if (!isConversionNeeded(projectPath)) {
      return true;
    }
    listener.conversionNeeded();
    ConversionContextImpl context=new ConversionContextImpl(projectPath);
    final List<ConversionRunner> runners=getConversionRunners(context);
    Set<File> affectedFiles=new HashSet<File>();
    for (    ConversionRunner runner : runners) {
      affectedFiles.addAll(runner.getAffectedFiles());
    }
    final List<File> readOnlyFiles=ConversionRunner.getReadOnlyFiles(affectedFiles);
    if (!readOnlyFiles.isEmpty()) {
      listener.cannotWriteToFiles(readOnlyFiles);
      return false;
    }
    final File backupDir=ProjectConversionUtil.backupFiles(affectedFiles,context.getProjectBaseDir());
    for (    ConversionRunner runner : runners) {
      runner.preProcess();
      runner.process();
      runner.postProcess();
    }
    context.saveFiles(affectedFiles);
    listener.successfullyConverted(backupDir);
    saveConversionResult(context);
    return true;
  }
 catch (  CannotConvertException e) {
    listener.error(e.getMessage());
  }
catch (  IOException e) {
    listener.error(e.getMessage());
  }
  return false;
}
