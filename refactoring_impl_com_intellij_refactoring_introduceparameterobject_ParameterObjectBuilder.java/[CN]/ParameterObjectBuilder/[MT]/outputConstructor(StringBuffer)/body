{
  out.append("\tpublic " + className + '(');
  for (Iterator<ParameterSpec> iterator=fields.iterator(); iterator.hasNext(); ) {
    final ParameterSpec field=iterator.next();
    final PsiParameter parameter=field.getParameter();
    final PsiType type=parameter.getType();
    final String typeText;
    if (parameter.isVarArgs()) {
      typeText=((PsiArrayType)type).getComponentType().getCanonicalText() + "...";
    }
 else {
      typeText=type.getCanonicalText();
    }
    final String name=calculateStrippedName(parameter);
    final String parameterName=settings.PARAMETER_NAME_PREFIX + name + settings.PARAMETER_NAME_SUFFIX;
    outputAnnotationString(parameter,out);
    out.append(settings.GENERATE_FINAL_PARAMETERS ? "final " : "");
    out.append(' ' + typeText + ' '+ parameterName);
    if (iterator.hasNext()) {
      out.append(", ");
    }
  }
  out.append(")\n");
  out.append("\t{\n");
  for (  final ParameterSpec field : fields) {
    final PsiParameter parameter=field.getParameter();
    final String prefix;
    final String suffix;
    if (parameter.hasModifierProperty(PsiModifier.STATIC)) {
      prefix=settings.STATIC_FIELD_NAME_PREFIX;
      suffix=settings.STATIC_FIELD_NAME_SUFFIX;
    }
 else {
      prefix=settings.FIELD_NAME_PREFIX;
      suffix=settings.FIELD_NAME_SUFFIX;
    }
    final String name=calculateStrippedName(parameter);
    final String fieldName=prefix + name + suffix;
    final String parameterName=settings.PARAMETER_NAME_PREFIX + name + settings.PARAMETER_NAME_SUFFIX;
    generateFieldAssignment(out,parameterName,fieldName);
  }
  out.append("\t}\n");
}
