{
  myXmlRpcServer.addHandler(HANDLER_NAME,new InternalRequestHandler());
  if (myScriptPath == null) {
    myScriptPath=File.createTempFile(GIT_SSH_PREFIX,GIT_SSH_EXT);
    myScriptPath.deleteOnExit();
    PrintWriter out=new PrintWriter(new FileWriter(myScriptPath));
    try {
      if (SystemInfo.isWindows) {
        out.println("@echo off");
      }
 else {
        out.println("#!/bin/sh");
      }
      String mainPath=PathUtil.getJarPathForClass(SSHMain.class);
      String sshPath=PathUtil.getJarPathForClass(KnownHosts.class);
      String xmlRcpPath=PathUtil.getJarPathForClass(XmlRpcClientLite.class);
      String codecPath=PathUtil.getJarPathForClass(DecoderException.class);
      String resPath=getJarForResource(GitBundle.class,"/git4idea/i18n/GitBundle.properties");
      String utilPath=PathUtil.getJarPathForClass(FileUtil.class);
      out.println("java -cp \"" + mainPath + File.pathSeparator+ sshPath+ File.pathSeparator+ codecPath+ File.pathSeparator+ xmlRcpPath+ File.pathSeparator+ resPath+ File.pathSeparator+ utilPath+ "\" "+ SSHMain.class.getName()+ " "+ myXmlRpcServer.getPortNumber()+ " %1 %2 %3 %4 %5 %6");
    }
  finally {
      out.close();
    }
    FileUtil.setExectuableAttribute(myScriptPath.getAbsolutePath(),true);
  }
  return myScriptPath;
}
