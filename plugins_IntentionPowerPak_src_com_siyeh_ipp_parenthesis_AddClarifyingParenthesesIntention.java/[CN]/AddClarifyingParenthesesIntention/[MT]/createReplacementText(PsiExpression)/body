{
  if (element instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)element;
    final PsiExpression lhs=binaryExpression.getLOperand();
    final PsiJavaToken operationSign=binaryExpression.getOperationSign();
    final PsiExpression rhs=binaryExpression.getROperand();
    final PsiElement parent=element.getParent();
    final String signText=operationSign.getText();
    if (parent instanceof PsiBinaryExpression) {
      final PsiBinaryExpression parentBinaryExpression=(PsiBinaryExpression)parent;
      final PsiJavaToken parentOperationSign=parentBinaryExpression.getOperationSign();
      if (signText.equals(parentOperationSign.getText())) {
        return createReplacementText(lhs) + signText + createReplacementText(rhs);
      }
      return "(" + createReplacementText(lhs) + signText+ createReplacementText(rhs)+ ")";
    }
 else {
      return createReplacementText(lhs) + signText + createReplacementText(rhs);
    }
  }
 else   if (element instanceof PsiParenthesizedExpression) {
    final PsiParenthesizedExpression parenthesizedExpression=(PsiParenthesizedExpression)element;
    final PsiExpression expression=parenthesizedExpression.getExpression();
    return "(" + createReplacementText(expression) + ")";
  }
  return element.getText();
}
