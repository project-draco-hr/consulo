{
  if (myDependencies == null) {
    myDependencies=new HashSet();
    myDependenciesToDependent=new com.intellij.util.containers.HashMap();
    for (Iterator iterator=myMembers.iterator(); iterator.hasNext(); ) {
      PsiElement element=(PsiElement)iterator.next();
      Set dependent=myMemberDependenciesStorage.getMemberDependencies(element);
      for (Iterator iterator1=dependent.iterator(); iterator1.hasNext(); ) {
        PsiElement dependentOn=(PsiElement)iterator1.next();
        if (mySelectedNormal.contains(dependentOn) && !mySelectedAbstract.contains(dependentOn)) {
          myDependencies.add(element);
          HashSet deps=(HashSet)myDependenciesToDependent.get(element);
          if (deps == null) {
            deps=new HashSet();
            myDependenciesToDependent.put(element,deps);
          }
          deps.add(dependentOn);
        }
      }
    }
  }
  return myDependencies;
}
