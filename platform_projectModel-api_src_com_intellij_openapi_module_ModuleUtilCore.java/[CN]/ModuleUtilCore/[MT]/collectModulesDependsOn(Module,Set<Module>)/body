{
  if (result.contains(module))   return;
  result.add(module);
  final ModuleManager moduleManager=ModuleManager.getInstance(module.getProject());
  final List<Module> dependentModules=moduleManager.getModuleDependentModules(module);
  for (  final Module dependentModule : dependentModules) {
    final OrderEntry[] orderEntries=ModuleRootManager.getInstance(dependentModule).getOrderEntries();
    for (    OrderEntry o : orderEntries) {
      if (o instanceof ModuleOrderEntry) {
        final ModuleOrderEntry orderEntry=(ModuleOrderEntry)o;
        if (orderEntry.getModule() == module) {
          if (orderEntry.isExported()) {
            collectModulesDependsOn(dependentModule,result);
          }
 else {
            result.add(dependentModule);
          }
          break;
        }
      }
    }
  }
}
