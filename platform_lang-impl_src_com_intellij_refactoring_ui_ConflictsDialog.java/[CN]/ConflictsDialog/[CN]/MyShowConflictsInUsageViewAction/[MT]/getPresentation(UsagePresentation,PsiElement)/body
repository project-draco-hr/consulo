{
  final Collection<String> elementConflicts=new LinkedHashSet<String>(myElementConflictDescription.get(element));
  final String conflictDescription=" (" + Pattern.compile("<[^<>]*>").matcher(StringUtil.join(elementConflicts,"\n")).replaceAll("") + ")";
  return new UsagePresentation(){
    @NotNull public TextChunk[] getText(){
      final TextChunk[] chunks=usagePresentation.getText();
      return ArrayUtil.append(chunks,new TextChunk(SimpleTextAttributes.GRAY_ITALIC_ATTRIBUTES.toTextAttributes(),conflictDescription));
    }
    @NotNull public String getPlainText(){
      return usagePresentation.getPlainText() + conflictDescription;
    }
    public Icon getIcon(){
      return usagePresentation.getIcon();
    }
    public String getTooltipText(){
      return usagePresentation.getTooltipText();
    }
  }
;
}
