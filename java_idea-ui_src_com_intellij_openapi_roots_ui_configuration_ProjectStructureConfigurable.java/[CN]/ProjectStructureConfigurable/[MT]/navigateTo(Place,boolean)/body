{
  final Configurable toSelect=(Configurable)place.getPath(CATEGORY);
  JComponent detailsContent=myDetails.getTargetComponent();
  if (mySelectedConfigurable != toSelect) {
    if (mySelectedConfigurable instanceof BaseStructureConfigurable) {
      ((BaseStructureConfigurable)mySelectedConfigurable).onStructureUnselected();
    }
    saveSideProportion();
    removeSelected();
    if (toSelect != null) {
      detailsContent=toSelect.createComponent();
      myDetails.setContent(detailsContent);
    }
    mySelectedConfigurable=toSelect;
    if (mySelectedConfigurable != null) {
      myUiState.lastEditedConfigurable=mySelectedConfigurable.getDisplayName();
    }
    if (toSelect instanceof MasterDetailsComponent) {
      final MasterDetailsComponent masterDetails=(MasterDetailsComponent)toSelect;
      if (myUiState.sideProportion > 0) {
        masterDetails.getSplitter().setProportion(myUiState.sideProportion);
      }
      masterDetails.setHistory(myHistory);
    }
    if (toSelect instanceof DetailsComponent.Facade) {
      ((DetailsComponent.Facade)toSelect).getDetailsComponent().setBannerMinHeight(myToolbarComponent.getPreferredSize().height);
    }
    if (toSelect instanceof BaseStructureConfigurable) {
      ((BaseStructureConfigurable)toSelect).onStructureSelected();
    }
  }
  if (detailsContent != null) {
    JComponent toFocus=IdeFocusTraversalPolicy.getPreferredFocusedComponent(detailsContent);
    if (toFocus == null) {
      toFocus=detailsContent;
    }
    if (requestFocus) {
      myToFocus=toFocus;
      UIUtil.requestFocus(toFocus);
    }
  }
  final ActionCallback result=new ActionCallback();
  Place.goFurther(toSelect,place,requestFocus).notifyWhenDone(result);
  myDetails.revalidate();
  myDetails.repaint();
  if (toSelect != null) {
    mySidePanel.select(createPlaceFor(toSelect));
  }
  if (!myHistory.isNavigatingNow() && mySelectedConfigurable != null) {
    myHistory.pushQueryPlace();
  }
  return result;
}
