{
  final Project project=wizardContext.getProject();
  final GroovyLibraryDescription libraryDescription=myFramework.createLibraryDescription();
  final String contentEntryPath=getContentEntryPath();
  final String basePath=contentEntryPath != null ? FileUtil.toSystemIndependentName(contentEntryPath) : "";
  myLibraryCompositionSettings=new LibraryCompositionSettings(libraryDescription,basePath);
  myLibrariesContainer=LibrariesContainerFactory.createContainer(project);
  myPanel=new LibraryOptionsPanel(myLibraryCompositionSettings,myLibrariesContainer,false);
  addModuleConfigurationUpdater(new ModuleConfigurationUpdater(){
    @Override public void update(    @NotNull Module module,    @NotNull ModifiableRootModel rootModel){
      myPanel.getSettings().addLibraries(rootModel,new ArrayList<Library>(),myLibrariesContainer);
      module.putUserData(MvcFramework.CREATE_APP_STRUCTURE,Boolean.TRUE);
    }
  }
);
}
