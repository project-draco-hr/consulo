{
  final boolean lhsIsString=hasStringType(lhs);
  final PsiLiteralExpression lhsLiteral=ExpressionUtils.getLiteral(lhs);
  final PsiLiteralExpression rhsLiteral=ExpressionUtils.getLiteral(rhs);
  if (lhsLiteral != null && lhsIsString) {
    final String value=(String)lhsLiteral.getValue();
    if (value == null) {
      return false;
    }
    final int length=value.length();
    if (length == 0) {
      return false;
    }
    final char c=value.charAt(length - 1);
    if (Character.isWhitespace(c) || !Character.isLetterOrDigit(c)) {
      return false;
    }
  }
 else   if (ignoreNonStringLiterals || rhsLiteral == null || lhsIsString) {
    return false;
  }
  final boolean rhsIsString=hasStringType(rhs);
  if (rhsLiteral != null && rhsIsString) {
    final String value=(String)rhsLiteral.getValue();
    if ((value == null) || value.isEmpty()) {
      return false;
    }
    final char c=value.charAt(0);
    if (Character.isWhitespace(c) || !Character.isLetterOrDigit(c)) {
      return false;
    }
  }
 else   if (ignoreNonStringLiterals || rhsIsString) {
    return false;
  }
  return true;
}
