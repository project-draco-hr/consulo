{
  GitPushResult pushResult=new GitPushResult();
  GitCommitsByRepoAndBranch commits=pushInfo.getCommits();
  for (  GitRepository repository : commits.getRepositories()) {
    GitPushRejectedDetector rejectedDetector=new GitPushRejectedDetector();
    GitCommandResult res=Git.push(repository,pushInfo.getPushSpec(),rejectedDetector);
    GitPushRepoResult repoResult;
    if (rejectedDetector.rejected()) {
      Collection<String> rejectedBranches=rejectedDetector.getRejectedBranches();
      Map<GitBranch,GitPushBranchResult> rejectedMap=new HashMap<GitBranch,GitPushBranchResult>();
      GitCommitsByBranch commitsByBranch=commits.get(repository);
      for (      GitBranch branch : commitsByBranch.getBranches()) {
        rejectedMap.put(branch,branchInRejected(branch,rejectedBranches) ? GitPushBranchResult.REJECTED : GitPushBranchResult.SUCCESS);
      }
      repoResult=GitPushRepoResult.someRejected(rejectedMap,res);
    }
 else     if (res.success()) {
      repoResult=GitPushRepoResult.success(res);
    }
 else {
      repoResult=GitPushRepoResult.error(res);
    }
    pushResult.append(repository,repoResult);
  }
  return pushResult;
}
