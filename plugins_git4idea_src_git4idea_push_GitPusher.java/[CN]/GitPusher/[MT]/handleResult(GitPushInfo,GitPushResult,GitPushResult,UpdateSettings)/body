{
  result.mergeFrom(previousResult);
  if (result.isEmpty()) {
    return;
  }
  if (result.totalSuccess()) {
    int commitsPushed=pushInfo.getCommits().commitsNumber();
    String message="Pushed " + commits(commitsPushed);
    GitVcs.NOTIFICATION_GROUP_ID.createNotification(message,NotificationType.INFORMATION).notify(myProject);
  }
 else   if (result.wasError()) {
    GitVcs.IMPORTANT_ERROR_NOTIFICATION.createNotification("Push failed",getResultDescriptionWithOptionalReposIndication(pushInfo,result),NotificationType.ERROR,null).notify(myProject);
  }
 else {
    Map<GitRepository,GitBranch> rejectedPushesForCurrentBranch=getRejectedPushesForCurrentBranch(result);
    if (!rejectedPushesForCurrentBranch.isEmpty()) {
      if (updateSettings == null) {
        final GitRejectedPushUpdateDialog dialog=new GitRejectedPushUpdateDialog(myProject,rejectedPushesForCurrentBranch.keySet());
        final AtomicInteger exitCode=new AtomicInteger();
        UIUtil.invokeAndWaitIfNeeded(new Runnable(){
          @Override public void run(){
            dialog.show();
            exitCode.set(dialog.getExitCode());
          }
        }
);
        updateSettings=new UpdateSettings(dialog.shouldUpdateAll(),getUpdateMethodFromDialogExitCode(exitCode.get()));
      }
      Set<VirtualFile> roots=getRootsToUpdate(rejectedPushesForCurrentBranch,updateSettings.shouldUpdateAllRoots());
      boolean pushAgain=false;
      if (updateSettings.getUpdateMethod() != null) {
        pushAgain=update(roots,updateSettings.getUpdateMethod());
      }
      if (pushAgain) {
        GitPushInfo newPushInfo=new GitPushInfo(pushInfo.getCommits().retainAll(rejectedPushesForCurrentBranch),pushInfo.getPushSpec());
        GitPushResult adjustedPushResult=result.remove(rejectedPushesForCurrentBranch);
        push(newPushInfo,adjustedPushResult,updateSettings);
        return;
      }
    }
    GitVcs.IMPORTANT_ERROR_NOTIFICATION.createNotification("Push rejected",getResultDescriptionWithOptionalReposIndication(pushInfo,result),NotificationType.WARNING,null).notify(myProject);
  }
}
