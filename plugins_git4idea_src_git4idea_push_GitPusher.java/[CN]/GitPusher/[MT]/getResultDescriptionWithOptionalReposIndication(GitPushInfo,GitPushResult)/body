{
  GroupedResult groupedResult=pushResult.group();
  StringBuilder sb=new StringBuilder();
  for (  Map.Entry<GitRepository,GitPushRepoResult> entry : groupedResult.myErrorResults.entrySet()) {
    GitRepository repository=entry.getKey();
    GitPushRepoResult result=entry.getValue();
    sb.append("<p>");
    if (!onlyOneRepositoryInTheProject()) {
      sb.append("<code>" + repository.getPresentableUrl() + "</code>:<br/>");
    }
    sb.append(result.getOutput().getErrorOutputAsHtmlString());
    sb.append("</p>");
  }
  if (!groupedResult.myRejectedResults.isEmpty()) {
    sb.append("Pushes to some branches were rejected: <br/>");
    for (    Map.Entry<GitRepository,GitPushRepoResult> entry : groupedResult.myRejectedResults.entrySet()) {
      GitRepository repository=entry.getKey();
      GitPushRepoResult result=entry.getValue();
      if (!onlyOneRepositoryInTheProject()) {
        sb.append("<code>" + repository.getPresentableUrl() + "</code>:<br/>");
      }
      sb.append(result.getBranchesDescription(pushInfo.getCommits().get(repository)));
      sb.append("</p>");
    }
  }
  if (!groupedResult.mySuccessfulResults.isEmpty()) {
    sb.append("Some pushes were successful: <br/>");
    for (    Map.Entry<GitRepository,GitPushRepoResult> entry : groupedResult.mySuccessfulResults.entrySet()) {
      GitRepository repository=entry.getKey();
      GitPushRepoResult result=entry.getValue();
      if (!onlyOneRepositoryInTheProject()) {
        sb.append("<code>" + repository.getPresentableUrl() + "</code>:<br/>");
      }
      sb.append(result.getPushedCommitsDescription(pushInfo.getCommits().get(repository)));
      sb.append("</p>");
    }
  }
  return sb.toString();
}
