{
  final MyNode node=new MyNode(new ModuleConfigurable(myContext.myModulesConfigurator,module,TREE_UPDATER));
  final TreePath selectionPath=myTree.getSelectionPath();
  MyNode parent=null;
  if (selectionPath != null) {
    MyNode selected=(MyNode)selectionPath.getLastPathComponent();
    final Object o=selected.getConfigurable().getEditableObject();
    if (o instanceof ModuleGroup) {
      myContext.myModulesConfigurator.getModuleModel().setModuleGroupPath(module,((ModuleGroup)o).getGroupPath());
      parent=selected;
    }
 else     if (o instanceof Module) {
      final ModifiableModuleModel modifiableModuleModel=myContext.myModulesConfigurator.getModuleModel();
      final String[] groupPath=modifiableModuleModel.getModuleGroupPath((Module)o);
      if (groupPath != null) {
        modifiableModuleModel.setModuleGroupPath(module,groupPath);
        parent=findNodeByObject(myRoot,new ModuleGroup(groupPath));
      }
    }
  }
  if (parent == null)   parent=myRoot;
  addNode(node,parent);
  myFacetEditorFacade.addFacetsNodes(module,node);
  addNodesFromExtensions(module,node);
  ((DefaultTreeModel)myTree.getModel()).reload(parent);
  selectNodeInTree(node);
  final ProjectStructureDaemonAnalyzer daemonAnalyzer=myContext.getDaemonAnalyzer();
  daemonAnalyzer.queueUpdate(new ModuleProjectStructureElement(myContext,module));
  daemonAnalyzer.queueUpdateForAllElementsWithErrors();
}
