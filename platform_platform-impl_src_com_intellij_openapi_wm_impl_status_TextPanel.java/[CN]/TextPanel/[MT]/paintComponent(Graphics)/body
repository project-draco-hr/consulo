{
  String s=getText();
  final Rectangle bounds=getBounds();
  if (UIUtil.isUnderDarcula()) {
    g.setColor(UIUtil.getPanelBackground());
    g.fillRect(bounds.x,bounds.y,bounds.width,bounds.height);
  }
  if (s == null)   return;
  final Insets insets=getInsets();
  final Graphics2D g2=(Graphics2D)g;
  g2.setFont(getFont());
  UISettings.setupAntialiasing(g);
  final FontMetrics fm=g2.getFontMetrics();
  final int sWidth=fm.stringWidth(s);
  int x=insets.left;
  if (myAlignment == Component.CENTER_ALIGNMENT || myAlignment == Component.RIGHT_ALIGNMENT) {
    x=myAlignment == Component.CENTER_ALIGNMENT ? (bounds.width - sWidth) / 2 : bounds.width - insets.right - sWidth;
  }
  final Rectangle textR=new Rectangle();
  final Rectangle iconR=new Rectangle();
  final Rectangle viewR=new Rectangle(bounds);
  textR.x=textR.y=textR.width=textR.height=0;
  viewR.width-=insets.left;
  viewR.width-=insets.right;
  final int maxWidth=bounds.width - insets.left - insets.right;
  if (sWidth > maxWidth) {
    s=truncateText(s,bounds,fm,textR,iconR,maxWidth);
  }
  final int y=UIUtil.getStringY(s,bounds,g2);
  if (SystemInfo.isMac && !UIUtil.isUnderDarcula() && myDecorate) {
    g2.setColor(myCustomColor == null ? Gray._215 : myCustomColor);
    g2.drawString(s,x,y + 1);
  }
  g2.setColor(myCustomColor == null ? getForeground() : myCustomColor);
  g2.drawString(s,x,y);
}
