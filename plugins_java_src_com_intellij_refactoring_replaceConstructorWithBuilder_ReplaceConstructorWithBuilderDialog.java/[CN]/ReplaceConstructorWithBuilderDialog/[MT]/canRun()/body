{
  final PsiNameHelper nameHelper=JavaPsiFacade.getInstance(myProject).getNameHelper();
  for (  ParameterData parameterData : myParametersMap.values()) {
    if (!nameHelper.isIdentifier(parameterData.getFieldName()))     throw new ConfigurationException("\'" + parameterData.getFieldName() + "\' is not a valid field name");
    if (!nameHelper.isIdentifier(parameterData.getSetterName()))     throw new ConfigurationException("\'" + parameterData.getSetterName() + "\' is not a valid setter name");
  }
  if (myCreateBuilderClassRadioButton.isSelected()) {
    final String className=myNewClassName.getText().trim();
    if (className.length() == 0 || !nameHelper.isQualifiedName(className))     throw new ConfigurationException("\'" + className + "\' is invalid builder class name");
    final String packageName=myPackageTextField.getText().trim();
    if (packageName.length() > 0 && !nameHelper.isQualifiedName(packageName))     throw new ConfigurationException("\'" + packageName + "\' is invalid builder package name");
  }
 else {
    final String qualifiedName=myExistentClassTF.getText().trim();
    if (qualifiedName.length() == 0 || !nameHelper.isQualifiedName(qualifiedName))     throw new ConfigurationException("\'" + qualifiedName + "\' is invalid builder qualified class name");
  }
}
