{
  super.visitIfStatement(statement);
  final PsiExpression outerCondition=statement.getCondition();
  if (outerCondition == null) {
    return;
  }
  if (SideEffectChecker.mayHaveSideEffects(outerCondition)) {
    return;
  }
  PsiStatement thenBranch=statement.getThenBranch();
  thenBranch=ControlFlowUtils.stripBraces(thenBranch);
  if (!(thenBranch instanceof PsiSynchronizedStatement)) {
    return;
  }
  final PsiSynchronizedStatement synchronizedStatement=(PsiSynchronizedStatement)thenBranch;
  final PsiCodeBlock body=synchronizedStatement.getBody();
  if (body == null) {
    return;
  }
  final PsiStatement[] statements=body.getStatements();
  if (statements.length != 1) {
    return;
  }
  final PsiStatement firstStatement=statements[0];
  if (!(firstStatement instanceof PsiIfStatement)) {
    return;
  }
  final PsiIfStatement innerIf=(PsiIfStatement)firstStatement;
  final PsiExpression innerCondition=innerIf.getCondition();
  if (!EquivalenceChecker.expressionsAreEquivalent(innerCondition,outerCondition)) {
    return;
  }
  final PsiField field;
  if (ignoreOnVolatileVariables) {
    field=findCheckedField(innerCondition);
    if (field != null && field.hasModifierProperty(PsiModifier.VOLATILE)) {
      return;
    }
  }
 else {
    field=null;
  }
  registerStatementError(statement,field);
}
