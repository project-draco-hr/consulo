{
  super.paintComponent(g);
  g.setColor(COLOR);
  Rectangle bounds=getBounds();
  bounds.x=bounds.y=0;
  int[] columnWidths=((RadTableLayoutComponent)myContainer).getColumnWidths();
  if (columnWidths != null && columnWidths.length > 0) {
    int x=bounds.x;
    for (int i=0; i < columnWidths.length; i++) {
      int width=columnWidths[i];
      if (width > 0) {
        x+=width;
        if (i != columnWidths.length - 1 || x < bounds.getMinX()) {
          g.drawLine(x,bounds.y,x,bounds.y + bounds.height);
        }
      }
 else {
        g.drawLine(x + 2,bounds.y,x + 2,bounds.y + bounds.height);
      }
    }
    bounds.width=Math.max(bounds.width,x - bounds.x);
  }
  List<RadComponent> children=myContainer.getChildren();
  RadComponent last=children.isEmpty() ? null : children.get(children.size() - 1);
  for (  RadComponent child : children) {
    Rectangle childBounds=child.getBounds(this);
    int y=childBounds.y + childBounds.height + ((RadViewComponent)child).getMargins().height;
    if (child != last || y < bounds.getMaxY()) {
      g.drawLine(bounds.x,y,bounds.x + bounds.width,y);
    }
  }
  g.drawRect(bounds.x,bounds.y,bounds.width,bounds.height);
}
