{
  GridInfo gridInfo=getGridInfo();
  RadViewComponent container=(RadViewComponent)myContainer;
  List<RadComponent> rows=myContainer.getChildren();
  RadComponent editComponent=myComponents.get(0);
  MetaManager metaManager=ViewsMetaManager.getInstance(container.getTag().getProject());
  MetaModel tableRowModel=metaManager.getModelByTag("TableRow");
  if (myInsertType == GridInsertType.in_cell) {
    if (gridInfo.components != null && myRow < gridInfo.components.length) {
      RadViewComponent rowComponent=(RadViewComponent)rows.get(myRow);
      if (RadTableRowLayout.is(rowComponent)) {
        RadComponent[] rowComponents=gridInfo.components[myRow];
        RadComponent insertBefore=null;
        for (int i=myColumn + 1; i < rowComponents.length; i++) {
          insertBefore=rowComponents[i];
          if (insertBefore != null) {
            break;
          }
        }
        if (editComponent != insertBefore) {
          execute(myContext,rowComponent,myComponents,(RadViewComponent)insertBefore);
        }
        RadTableLayoutComponent.setCellConstraints(editComponent,myColumn,1);
      }
 else {
        RadViewComponent newRowComponent=ModelParser.createComponent(null,tableRowModel);
        ModelParser.addComponent(container,newRowComponent,rowComponent);
        ModelParser.moveComponent(newRowComponent,rowComponent,null);
        execute(myContext,newRowComponent,myComponents,null);
        if (myColumn > 1) {
          RadTableLayoutComponent.setCellConstraints(editComponent,myColumn,1);
        }
      }
    }
 else {
      for (int i=rows.size(); i <= myRow; i++) {
        RadViewComponent rowComponent=ModelParser.createComponent(null,tableRowModel);
        ModelParser.addComponent(container,rowComponent,null);
      }
      execute(myContext,(RadViewComponent)myContainer.getChildren().get(myRow),myComponents,null);
      RadTableLayoutComponent.setCellConstraints(editComponent,myColumn,1);
    }
  }
 else   if (myInsertType == GridInsertType.before_h_cell || myInsertType == GridInsertType.after_h_cell) {
    RadViewComponent rowComponent=ModelParser.createComponent(null,tableRowModel);
    RadComponent insertBefore=null;
    if (myInsertType == GridInsertType.before_h_cell) {
      insertBefore=rows.get(myRow);
    }
 else     if (myRow + 1 < rows.size()) {
      insertBefore=rows.get(myRow + 1);
    }
    ModelParser.addComponent(container,rowComponent,(RadViewComponent)insertBefore);
    execute(myContext,rowComponent,myComponents,null);
    RadTableLayoutComponent.setCellConstraints(editComponent,myColumn,1);
  }
 else   if (myInsertType == GridInsertType.before_v_cell || myInsertType == GridInsertType.after_v_cell) {
    int column=myColumn;
    if (myInsertType == GridInsertType.after_v_cell) {
      column++;
    }
    shiftColumns(column);
  }
 else {
  }
}
