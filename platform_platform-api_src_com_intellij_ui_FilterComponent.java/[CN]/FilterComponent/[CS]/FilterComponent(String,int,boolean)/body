{
  super(new BorderLayout());
  myOnTheFly=onTheFlyUpdate;
  myFilter=new SearchTextFieldWithStoredHistory(propertyName){
    @Override protected Runnable createItemChosenCallback(    JList list){
      final Runnable callback=super.createItemChosenCallback(list);
      return new Runnable(){
        @Override public void run(){
          callback.run();
          filter();
        }
      }
;
    }
    @Override protected Component getPopupLocationComponent(){
      return FilterComponent.this.getPopupLocationComponent();
    }
    @Override protected void onFocusLost(){
      addCurrentTextToHistory();
      super.onFocusLost();
    }
  }
;
  myFilter.getTextEditor().addKeyListener(new KeyAdapter(){
    public void keyPressed(    final KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ENTER) {
        e.consume();
        myFilter.addCurrentTextToHistory();
        filter();
      }
 else       if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
        onEscape(e);
      }
    }
  }
);
  myFilter.addDocumentListener(new DocumentListener(){
    public void insertUpdate(    DocumentEvent e){
      onChange();
    }
    public void removeUpdate(    DocumentEvent e){
      onChange();
    }
    public void changedUpdate(    DocumentEvent e){
      onChange();
    }
  }
);
  myFilter.setHistorySize(historySize);
  add(myFilter,BorderLayout.CENTER);
}
