{
  final StringBuilder builder=StringBuilderSpinAllocator.alloc();
  try {
    for (int i=0; i < indexName.length(); i++) {
      final char c=indexName.charAt(i);
      if (Character.isDigit(c)) {
        builder.append(c);
      }
 else {
        break;
      }
    }
    final int idx=Integer.parseInt(builder.toString());
    final String name=builder.length() < indexName.length() ? indexName.substring(builder.length()) : null;
    final PsiClass[] result=new PsiClass[1];
    contaningClass.accept(new PsiRecursiveElementVisitor(){
      private int myCurrentIdx=0;
      public void visitElement(      PsiElement element){
        if (result[0] == null) {
          super.visitElement(element);
        }
      }
      public void visitClass(      PsiClass aClass){
        super.visitClass(aClass);
        if (aClass.getQualifiedName() == null) {
          myCurrentIdx++;
          if (myCurrentIdx == idx && Comparing.strEqual(name,aClass.getName())) {
            result[0]=aClass;
          }
        }
      }
    }
);
    return result[0];
  }
  finally {
    StringBuilderSpinAllocator.dispose(builder);
  }
}
