{
  final LookupImpl lookup=(LookupImpl)LookupManager.getActiveLookup(editor);
  if (lookup == null) {
    myOriginalHandler.execute(editor,charTyped,dataContext);
    return;
  }
  final LookupElement currentItem=lookup.getCurrentItem();
  final CharFilter.Result result=getLookupAction(charTyped,currentItem,lookup);
  EditorModificationUtil.deleteSelectedText(editor);
  if (result == CharFilter.Result.ADD_TO_PREFIX) {
    lookup.setAdditionalPrefix(lookup.getAdditionalPrefix() + charTyped);
    Document document=editor.getDocument();
    long modificationStamp=document.getModificationStamp();
    lookup.performGuardedChange(new Runnable(){
      public void run(){
        EditorModificationUtil.typeInStringAtCaretHonorBlockSelection(editor,String.valueOf(charTyped),true);
      }
    }
);
    AutoHardWrapHandler.getInstance().wrapLineIfNecessary(editor,dataContext,modificationStamp);
    final CompletionProgressIndicator completion=CompletionServiceImpl.getCompletionService().getCurrentCompletion();
    if (completion != null) {
      completion.prefixUpdated();
    }
    return;
  }
  if (result == CharFilter.Result.SELECT_ITEM_AND_FINISH_LOOKUP && lookup.isFocused()) {
    LookupElement item=lookup.getCurrentItem();
    if (item != null) {
      FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EDITING_COMPLETION_FINISH_BY_DOT_ETC);
      lookup.finishLookup(charTyped);
      return;
    }
  }
  lookup.hide();
  myOriginalHandler.execute(editor,charTyped,dataContext);
}
