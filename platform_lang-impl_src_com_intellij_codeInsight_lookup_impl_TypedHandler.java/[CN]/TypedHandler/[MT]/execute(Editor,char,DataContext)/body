{
  final LookupImpl lookup=(LookupImpl)LookupManager.getActiveLookup(editor);
  if (lookup == null) {
    myOriginalHandler.execute(editor,charTyped,dataContext);
    return;
  }
  final LookupElement currentItem=lookup.getCurrentItem();
  final CharFilter.Result result=getLookupAction(charTyped,currentItem,lookup);
  CommandProcessor.getInstance().executeCommand(PlatformDataKeys.PROJECT.getData(dataContext),new Runnable(){
    public void run(){
      EditorModificationUtil.deleteSelectedText(editor);
      if (result == CharFilter.Result.ADD_TO_PREFIX) {
        lookup.setAdditionalPrefix(lookup.getAdditionalPrefix() + charTyped);
        Document document=editor.getDocument();
        long modificationStamp=document.getModificationStamp();
        EditorModificationUtil.insertStringAtCaret(editor,String.valueOf(charTyped));
        AutoHardWrapHandler.getInstance().wrapLineIfNecessary(editor,dataContext,modificationStamp);
      }
    }
  }
,"",editor.getDocument());
  if (result == CharFilter.Result.ADD_TO_PREFIX) {
    CompletionProgressIndicator.hideAutopopupIfMeaningless(lookup);
    return;
  }
  if (result == CharFilter.Result.SELECT_ITEM_AND_FINISH_LOOKUP && lookup.isFocused()) {
    LookupElement item=lookup.getCurrentItem();
    if (item != null) {
      FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EDITING_COMPLETION_FINISH_BY_DOT_ETC);
      lookup.finishLookup(charTyped);
      return;
    }
  }
  lookup.hide();
  myOriginalHandler.execute(editor,charTyped,dataContext);
}
