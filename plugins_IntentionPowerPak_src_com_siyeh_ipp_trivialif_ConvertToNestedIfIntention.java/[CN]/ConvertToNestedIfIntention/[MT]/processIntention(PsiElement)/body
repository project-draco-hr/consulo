{
  final PsiStatement containingStatement=PsiTreeUtil.getParentOfType(element,PsiStatement.class);
  if (containingStatement == null) {
    return;
  }
  final PsiReturnStatement returnStatement=(PsiReturnStatement)containingStatement;
  final PsiExpression returnValue=returnStatement.getReturnValue();
  if (returnValue == null) {
    return;
  }
  if (ErrorUtil.containsDeepError(returnValue)) {
    return;
  }
  final StringBuilder buf=new StringBuilder();
  if (returnValue instanceof PsiPolyadicExpression) {
    final PsiExpression[] operands=((PsiPolyadicExpression)returnValue).getOperands();
    for (    PsiExpression operand : operands) {
      buf.append("if (" + operand.getText() + ") {");
    }
    buf.append("return true;");
    for (    PsiExpression operand : operands) {
      buf.append("}");
    }
  }
  final PsiStatement ifStmt=JavaPsiFacade.getElementFactory(containingStatement.getProject()).createStatementFromText(buf.toString(),containingStatement);
  CodeStyleManager.getInstance(containingStatement.getProject()).reformat(containingStatement.getParent().addBefore(ifStmt,containingStatement));
  replaceStatement("return false;",containingStatement);
}
