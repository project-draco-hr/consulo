{
  List<ProjectImportProvider> available=ContainerUtil.filter(providers,new Condition<ProjectImportProvider>(){
    @Override public boolean value(    ProjectImportProvider provider){
      return provider.canImport(file,project);
    }
  }
);
  if (available.isEmpty()) {
    Messages.showErrorDialog(project,"Cannot import anything from '" + FileUtil.toSystemDependentName(file.getPath()) + "'","Cannot Import");
    return null;
  }
  String path;
  if (available.size() == 1) {
    path=available.get(0).getPathToBeImported(file);
  }
 else {
    path=ProjectImportProvider.getDefaultPath(file);
  }
  ProjectImportProvider[] availableProviders=available.toArray(new ProjectImportProvider[available.size()]);
  return dialogParent == null ? new AddModuleWizard(project,path,availableProviders) : new AddModuleWizard(project,dialogParent,path,availableProviders);
}
