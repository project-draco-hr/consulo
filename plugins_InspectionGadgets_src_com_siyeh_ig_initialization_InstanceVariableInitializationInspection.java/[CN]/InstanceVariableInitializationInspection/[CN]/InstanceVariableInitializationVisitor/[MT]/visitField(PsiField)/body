{
  if (field.hasModifierProperty(PsiModifier.STATIC) || field.hasModifierProperty(PsiModifier.FINAL)) {
    return;
  }
  if (field.getInitializer() != null) {
    return;
  }
  if (m_ignorePrimitives) {
    final PsiType fieldType=field.getType();
    if (ClassUtils.isPrimitive(fieldType)) {
      return;
    }
  }
  final PsiClass aClass=field.getContainingClass();
  if (aClass == null) {
    return;
  }
  final ImplicitUsageProvider[] implicitUsageProviders=Extensions.getExtensions(ImplicitUsageProvider.EP_NAME);
  for (  ImplicitUsageProvider provider : implicitUsageProviders) {
    if (provider.isImplicitWrite(field)) {
      return;
    }
  }
  final boolean isTestClass=TestUtils.isJUnitTestClass(aClass);
  if (isTestClass) {
    if (isInitializedInSetup(field,aClass)) {
      return;
    }
  }
  if (isInitializedInInitializer(field)) {
    return;
  }
  if (isInitializedInConstructors(field,aClass)) {
    return;
  }
  if (isTestClass) {
    registerFieldError(field,Boolean.TRUE);
  }
 else {
    registerFieldError(field,Boolean.FALSE);
  }
}
