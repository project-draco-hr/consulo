{
  if (field.hasModifierProperty(PsiModifier.STATIC)) {
    return;
  }
  if (field.getInitializer() != null) {
    return;
  }
  if (m_ignorePrimitives && ClassUtils.isPrimitive(field.getType())) {
    return;
  }
  final PsiClass aClass=field.getContainingClass();
  if (aClass == null) {
    return;
  }
  final PsiManager manager=field.getManager();
  final PsiSearchHelper searchHelper=manager.getSearchHelper();
  if (searchHelper.isFieldBoundToForm(field)) {
    return;
  }
  if (isInitializedInInitializer(field)) {
    return;
  }
  final PsiMethod[] constructors=aClass.getConstructors();
  if (constructors == null || constructors.length == 0) {
    registerFieldError(field);
    return;
  }
  for (int i=0; i < constructors.length; i++) {
    final PsiMethod constructor=constructors[i];
    final PsiCodeBlock body=constructor.getBody();
    if (!InitializationUtils.blockMustAssignVariableOrFail(field,body)) {
      registerFieldError(field);
      return;
    }
  }
}
