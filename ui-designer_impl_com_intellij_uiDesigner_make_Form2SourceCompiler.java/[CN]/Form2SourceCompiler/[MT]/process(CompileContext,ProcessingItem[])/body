{
  final ArrayList<ProcessingItem> compiledItems=new ArrayList<ProcessingItem>();
  context.getProgressIndicator().setText(UIDesignerBundle.message("progress.compiling.ui.forms"));
  int formsProcessed=0;
  final FormSourceCodeGenerator generator=new FormSourceCodeGenerator(myProject);
  final HashSet<Module> processedModules=new HashSet<Module>();
  for (  ProcessingItem item1 : items) {
    context.getProgressIndicator().setFraction((double)(++formsProcessed) / ((double)items.length));
    final MyInstrumentationItem item=(MyInstrumentationItem)item1;
    final VirtualFile formFile=item.getFormFile();
    if (GuiDesignerConfiguration.getInstance(myProject).COPY_FORMS_RUNTIME_TO_OUTPUT) {
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          final Module module=ModuleUtil.getModuleForFile(myProject,formFile);
          if (module != null && !processedModules.contains(module)) {
            processedModules.add(module);
            final String moduleOutputPath=CompilerPaths.getModuleOutputPath(module,false);
            try {
              if (moduleOutputPath != null) {
                CopyResourcesUtil.copyFormsRuntime(moduleOutputPath,false);
              }
              final String testsOutputPath=CompilerPaths.getModuleOutputPath(module,true);
              if (testsOutputPath != null && !testsOutputPath.equals(moduleOutputPath)) {
                CopyResourcesUtil.copyFormsRuntime(testsOutputPath,false);
              }
            }
 catch (            IOException e) {
              addError(context,UIDesignerBundle.message("error.cannot.copy.gui.designer.form.runtime",module.getName(),e.toString()),null);
            }
          }
        }
      }
);
    }
    ApplicationManager.getApplication().invokeAndWait(new Runnable(){
      public void run(){
        CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
          public void run(){
            ApplicationManager.getApplication().runWriteAction(new Runnable(){
              public void run(){
                PsiDocumentManager.getInstance(myProject).commitAllDocuments();
                generator.generate(formFile);
                final ArrayList<String> errors=generator.getErrors();
                if (errors.size() == 0) {
                  compiledItems.add(item);
                }
 else {
                  for (                  final String s : errors) {
                    addError(context,s,formFile);
                  }
                }
                FileDocumentManager.getInstance().saveAllDocuments();
              }
            }
);
          }
        }
,"",null);
      }
    }
,ModalityState.NON_MMODAL);
  }
  return compiledItems.toArray(new ProcessingItem[compiledItems.size()]);
}
