{
  registrar.registerReferenceProvider(psiElement(XmlAttributeValue.class).withParent(xmlAttribute().withLocalName(string().oneOf("name","href","mode","elements","exclude-result-prefixes","extension-element-prefixes","stylesheet-prefix")).withParent(xmlTag().withNamespace(XsltSupport.XSLT_NS))),new XsltReferenceProvider());
  registrar.registerReferenceProvider(xmlAttributeValue().withValue(string().matches("[^()]+")).withParent(xmlAttribute("as").withParent(xmlTag().withNamespace(XsltSupport.XSLT_NS))),SchemaTypeProvider.INSTANCE);
  registrar.registerReferenceProvider(xmlAttributeValue().withParent(xmlAttribute("as").withParent(xmlTag().withNamespace(XsltSupport.XSLT_NS))).withValue(string().contains(":")),new PsiReferenceProvider(){
    @NotNull @Override public PsiReference[] getReferencesByElement(    @NotNull PsiElement element,    @NotNull ProcessingContext context){
      return new PsiReference[]{new NamespacePrefixReference(element)};
    }
  }
);
}
