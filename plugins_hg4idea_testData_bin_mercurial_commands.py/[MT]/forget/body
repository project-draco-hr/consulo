def forget(ui, repo, *pats, **opts):
    'forget the specified files on the next commit\n\n    Mark the specified files so they will no longer be tracked\n    after the next commit.\n\n    This only removes files from the current branch, not from the\n    entire project history, and it does not delete them from the\n    working directory.\n\n    To undo a forget before the next commit, see hg add.\n    '
    if (not pats):
        raise util.Abort(_('no files specified'))
    m = cmdutil.match(repo, pats, opts)
    s = repo.status(match=m, clean=True)
    forget = sorted((((s[0] + s[1]) + s[3]) + s[6]))
    for f in m.files():
        if ((f not in repo.dirstate) and (not os.path.isdir(m.rel(f)))):
            ui.warn((_('not removing %s: file is already untracked\n') % m.rel(f)))
    for f in forget:
        if (ui.verbose or (not m.exact(f))):
            ui.status((_('removing %s\n') % m.rel(f)))
    repo.remove(forget, unlink=False)
