def push(ui, repo, dest=None, **opts):
    "push changes to the specified destination\n\n    Push changes from the local repository to the specified destination.\n\n    This is the symmetrical operation for pull. It moves changes from\n    the current repository to a different one. If the destination is\n    local this is identical to a pull in that directory from the\n    current one.\n\n    By default, push will refuse to run if it detects the result would\n    increase the number of remote heads. This generally indicates the\n    user forgot to pull and merge before pushing.\n\n    If -r/--rev is used, the named revision and all its ancestors will\n    be pushed to the remote repository.\n\n    Please see 'hg help urls' for important details about ``ssh://``\n    URLs. If DESTINATION is omitted, a default path will be used.\n    "
    dest = ui.expandpath((dest or 'default-push'), (dest or 'default'))
    (dest, branches) = hg.parseurl(dest, opts.get('branch'))
    (revs, checkout) = hg.addbranchrevs(repo, repo, branches, opts.get('rev'))
    other = hg.repository(cmdutil.remoteui(repo, opts), dest)
    ui.status((_('pushing to %s\n') % url.hidepassword(dest)))
    if revs:
        revs = [repo.lookup(rev) for rev in revs]
    c = repo['']
    subs = c.substate
    for s in sorted(subs):
        if (not c.sub(s).push(opts.get('force'))):
            return False
    r = repo.push(other, opts.get('force'), revs=revs)
    return (r == 0)
