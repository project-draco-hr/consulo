def add(ui, repo, *pats, **opts):
    'add the specified files on the next commit\n\n    Schedule files to be version controlled and added to the\n    repository.\n\n    The files will be added to the repository at the next commit. To\n    undo an add before that, see hg forget.\n\n    If no names are given, add all files to the repository.\n\n    .. container:: verbose\n\n       An example showing how new (unknown) files are added\n       automatically by ``hg add``::\n\n         $ ls\n         foo.c\n         $ hg status\n         ? foo.c\n         $ hg add\n         adding foo.c\n         $ hg status\n         A foo.c\n    '
    bad = []
    names = []
    m = cmdutil.match(repo, pats, opts)
    oldbad = m.bad
    m.bad = (lambda x, y: (bad.append(x) or oldbad(x, y)))
    for f in repo.walk(m):
        exact = m.exact(f)
        if (exact or (f not in repo.dirstate)):
            names.append(f)
            if (ui.verbose or (not exact)):
                ui.status((_('adding %s\n') % m.rel(f)))
    if (not opts.get('dry_run')):
        bad += [f for f in repo.add(names) if (f in m.files())]
    return ((bad and 1) or 0)
