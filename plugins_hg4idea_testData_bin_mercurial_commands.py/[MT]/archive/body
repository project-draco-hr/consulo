def archive(ui, repo, dest, **opts):
    "create an unversioned archive of a repository revision\n\n    By default, the revision used is the parent of the working\n    directory; use -r/--rev to specify a different revision.\n\n    To specify the type of archive to create, use -t/--type. Valid\n    types are:\n\n    :``files``: a directory full of files (default)\n    :``tar``:   tar archive, uncompressed\n    :``tbz2``:  tar archive, compressed using bzip2\n    :``tgz``:   tar archive, compressed using gzip\n    :``uzip``:  zip archive, uncompressed\n    :``zip``:   zip archive, compressed using deflate\n\n    The exact name of the destination archive or directory is given\n    using a format string; see 'hg help export' for details.\n\n    Each member added to an archive file has a directory prefix\n    prepended. Use -p/--prefix to specify a format string for the\n    prefix. The default is the basename of the archive, with suffixes\n    removed.\n    "
    ctx = repo[opts.get('rev')]
    if (not ctx):
        raise util.Abort(_('no working directory: please specify a revision'))
    node = ctx.node()
    dest = cmdutil.make_filename(repo, dest, node)
    if (os.path.realpath(dest) == repo.root):
        raise util.Abort(_('repository root cannot be destination'))
    matchfn = cmdutil.match(repo, [], opts)
    kind = (opts.get('type') or 'files')
    prefix = opts.get('prefix')
    if (dest == '-'):
        if (kind == 'files'):
            raise util.Abort(_('cannot archive plain files to stdout'))
        dest = sys.stdout
        if (not prefix):
            prefix = (os.path.basename(repo.root) + '-%h')
    prefix = cmdutil.make_filename(repo, prefix, node)
    archival.archive(repo, dest, node, kind, (not opts.get('no_decode')), matchfn, prefix)
