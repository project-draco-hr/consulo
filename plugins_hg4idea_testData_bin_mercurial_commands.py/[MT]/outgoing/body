def outgoing(ui, repo, dest=None, **opts):
    'show changesets not found in the destination\n\n    Show changesets not found in the specified destination repository\n    or the default push location. These are the changesets that would\n    be pushed if a push was requested.\n\n    See pull for details of valid destination formats.\n    '
    limit = cmdutil.loglimit(opts)
    dest = ui.expandpath((dest or 'default-push'), (dest or 'default'))
    (dest, branches) = hg.parseurl(dest, opts.get('branch'))
    (revs, checkout) = hg.addbranchrevs(repo, repo, branches, opts.get('rev'))
    if revs:
        revs = [repo.lookup(rev) for rev in revs]
    other = hg.repository(cmdutil.remoteui(repo, opts), dest)
    ui.status((_('comparing with %s\n') % url.hidepassword(dest)))
    o = repo.findoutgoing(other, force=opts.get('force'))
    if (not o):
        ui.status(_('no changes found\n'))
        return 1
    o = repo.changelog.nodesbetween(o, revs)[0]
    if opts.get('newest_first'):
        o.reverse()
    displayer = cmdutil.show_changeset(ui, repo, opts)
    count = 0
    for n in o:
        if ((limit is not None) and (count >= limit)):
            break
        parents = [p for p in repo.changelog.parents(n) if (p != nullid)]
        if (opts.get('no_merges') and (len(parents) == 2)):
            continue
        count += 1
        displayer.show(repo[n])
    displayer.close()
