def update(ui, repo, node=None, rev=None, clean=False, date=None, check=False):
    "update working directory\n\n    Update the repository's working directory to the specified\n    changeset.\n\n    If no changeset is specified, attempt to update to the head of the\n    current branch. If this head is a descendant of the working\n    directory's parent, update to it, otherwise abort.\n\n    The following rules apply when the working directory contains\n    uncommitted changes:\n\n    1. If neither -c/--check nor -C/--clean is specified, and if\n       the requested changeset is an ancestor or descendant of\n       the working directory's parent, the uncommitted changes\n       are merged into the requested changeset and the merged\n       result is left uncommitted. If the requested changeset is\n       not an ancestor or descendant (that is, it is on another\n       branch), the update is aborted and the uncommitted changes\n       are preserved.\n\n    2. With the -c/--check option, the update is aborted and the\n       uncommitted changes are preserved.\n\n    3. With the -C/--clean option, uncommitted changes are discarded and\n       the working directory is updated to the requested changeset.\n\n    Use null as the changeset to remove the working directory (like 'hg\n    clone -U').\n\n    If you want to update just one file to an older changeset, use 'hg revert'.\n\n    See 'hg help dates' for a list of formats valid for -d/--date.\n    "
    if (rev and node):
        raise util.Abort(_('please specify just one revision'))
    if (not rev):
        rev = node
    if (check and clean):
        raise util.Abort(_('cannot specify both -c/--check and -C/--clean'))
    if check:
        c = repo[None]
        if (c.modified() or c.added() or c.removed()):
            raise util.Abort(_('uncommitted local changes'))
    if date:
        if rev:
            raise util.Abort(_("you can't specify a revision and a date"))
        rev = cmdutil.finddate(ui, repo, date)
    if (clean or check):
        return hg.clean(repo, rev)
    else:
        return hg.update(repo, rev)
