{
  final DataContext dataContext=e.getDataContext();
  final PsiFile file=LangDataKeys.PSI_FILE.getData(dataContext);
  final Presentation presentation=e.getPresentation();
  if (file != null && file.getVirtualFile() != null) {
    presentation.setVisible(true);
    final WebBrowserUrlProvider browserUrlProvider=WebBrowserServiceImpl.getProvider(file);
    final boolean isHtmlFile=HtmlUtil.isHtmlFile(file);
    presentation.setEnabled(browserUrlProvider != null || isHtmlFile);
    String text=getTemplatePresentation().getText();
    String description=getTemplatePresentation().getDescription();
    if (browserUrlProvider != null) {
      final String customText=browserUrlProvider.getOpenInBrowserActionText(file);
      if (customText != null) {
        text=customText;
      }
      final String customDescription=browserUrlProvider.getOpenInBrowserActionDescription(file);
      if (customDescription != null) {
        description=customDescription;
      }
      if (isHtmlFile) {
        description+=" (hold Shift to open URL of local file)";
      }
    }
    presentation.setText(text);
    presentation.setDescription(description);
    if (ActionPlaces.isPopupPlace(e.getPlace())) {
      presentation.setVisible(presentation.isEnabled());
    }
  }
 else {
    presentation.setVisible(false);
    presentation.setEnabled(false);
  }
}
