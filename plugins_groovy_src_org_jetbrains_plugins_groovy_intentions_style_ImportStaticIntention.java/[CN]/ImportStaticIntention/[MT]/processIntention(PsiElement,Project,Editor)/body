{
  if (!(element instanceof GrReferenceExpression))   return;
  final GrReferenceExpression ref=(GrReferenceExpression)element;
  final PsiElement resolved=ref.resolve();
  if (!(resolved instanceof PsiMember))   return;
  final PsiClass containingClass=((PsiMember)resolved).getContainingClass();
  if (containingClass == null)   return;
  final String qname=containingClass.getQualifiedName();
  final String name=((PsiMember)resolved).getName();
  final PsiFile containingFile=element.getContainingFile();
  if (!(containingFile instanceof GroovyFile))   return;
  final GroovyFile file=(GroovyFile)containingFile;
  file.accept(new GroovyRecursiveElementVisitor(){
    @Override public void visitReferenceExpression(    GrReferenceExpression expression){
      super.visitReferenceExpression(expression);
      if (name.equals(expression.getReferenceName())) {
        PsiElement resolved=expression.resolve();
        if (resolved != null) {
          expression.putUserData(TEMP_REFERENT_USER_DATA,resolved);
        }
      }
    }
  }
);
  final GrImportStatement importStatement=GroovyPsiElementFactory.getInstance(project).createImportStatementFromText(qname + "." + name,true,false,null);
  file.addImport(importStatement);
  for (  PsiReference reference : ReferencesSearch.search(resolved,new LocalSearchScope(containingFile))) {
    final PsiElement refElement=reference.getElement();
    if (refElement instanceof GrQualifiedReference) {
      GrReferenceAdjuster.shortenReference((GrQualifiedReference)refElement);
    }
  }
  file.accept(new GroovyRecursiveElementVisitor(){
    @Override public void visitReferenceExpression(    GrReferenceExpression expression){
      super.visitReferenceExpression(expression);
      if (expression.getTypeArgumentList() != null && expression.getTypeArgumentList().getFirstChild() != null) {
        expression.putUserData(TEMP_REFERENT_USER_DATA,null);
        return;
      }
      if (name.equals(expression.getReferenceName())) {
        if (expression.isQualified()) {
          if (expression.getQualifierExpression() instanceof GrReferenceExpression) {
            PsiElement aClass=((GrReferenceExpression)expression.getQualifierExpression()).resolve();
            if (aClass == ((PsiMember)resolved).getContainingClass()) {
              GrReferenceAdjuster.shortenReference(expression);
            }
          }
        }
 else {
          PsiElement referent=expression.getUserData(TEMP_REFERENT_USER_DATA);
          if (referent instanceof PsiMember && ((PsiMember)referent).hasModifierProperty(PsiModifier.STATIC) && referent != expression.resolve()) {
            expression.bindToElement(referent);
          }
        }
      }
      expression.putUserData(TEMP_REFERENT_USER_DATA,null);
    }
  }
);
}
