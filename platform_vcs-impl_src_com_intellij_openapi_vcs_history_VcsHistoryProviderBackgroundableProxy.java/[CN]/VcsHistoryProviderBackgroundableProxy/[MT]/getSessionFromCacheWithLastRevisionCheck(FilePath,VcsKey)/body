{
  final ProgressIndicator pi=ProgressManager.getInstance().getProgressIndicator();
  if (pi != null) {
    pi.setText2("Checking last revision");
  }
  VcsAbstractHistorySession cached=getFullHistoryFromCache(vcsKey,filePath);
  if (cached == null)   return null;
  final FilePath correctedFilePath=((VcsCacheableHistorySessionFactory<Serializable,VcsAbstractHistorySession>)myDelegate).getUsedFilePath(cached);
  if (VcsType.distributed.equals(myType)) {
    final FilePath path=correctedFilePath != null ? correctedFilePath : filePath;
    VirtualFile virtualFile=path.getVirtualFile();
    if (virtualFile == null) {
      virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(path.getPath());
    }
    if (virtualFile != null) {
      final VcsRevisionNumber currentRevision=myDiffProvider.getCurrentRevision(virtualFile);
      final List<VcsFileRevision> revisionList=cached.getRevisionList();
      if (!revisionList.isEmpty() && revisionList.get(0).getRevisionNumber().equals(currentRevision)) {
        return cached;
      }
    }
  }
 else {
    final ItemLatestState lastRevision=myDiffProvider.getLastRevision(correctedFilePath != null ? correctedFilePath : filePath);
    if (lastRevision != null && !lastRevision.isDefaultHead() && lastRevision.isItemExists()) {
      final List<VcsFileRevision> revisionList=cached.getRevisionList();
      if (!revisionList.isEmpty() && revisionList.get(0).getRevisionNumber().equals(lastRevision.getNumber())) {
        return cached;
      }
    }
  }
  return null;
}
