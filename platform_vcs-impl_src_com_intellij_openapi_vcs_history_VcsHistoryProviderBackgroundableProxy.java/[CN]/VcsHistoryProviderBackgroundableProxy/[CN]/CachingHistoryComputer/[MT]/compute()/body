{
  VcsHistorySession session=null;
  final ProgressIndicator pi=ProgressManager.getInstance().getProgressIndicator();
  if (pi != null) {
    pi.setText2("Checking last revision");
  }
  final ItemLatestState lastRevision=myDiffProvider.getLastRevision(myFilePath);
  if (lastRevision != null && !lastRevision.isDefaultHead() && lastRevision.isItemExists()) {
    final VcsAbstractHistorySession cached=myVcsHistoryCache.get(myFilePath,myVcsKey,(VcsCacheableHistorySessionFactory<Serializable,VcsAbstractHistorySession>)myDelegate);
    final List<VcsFileRevision> revisionList=cached.getRevisionList();
    if (!revisionList.isEmpty() && revisionList.get(0).getRevisionNumber().equals(lastRevision.getNumber())) {
      session=cached;
    }
  }
  if (session == null) {
    session=myDelegate.createSessionFor(myFilePath);
    myVcsHistoryCache.put(myFilePath,myVcsKey,(VcsAbstractHistorySession)((VcsAbstractHistorySession)session).copy(),(VcsCacheableHistorySessionFactory<Serializable,VcsAbstractHistorySession>)myDelegate);
  }
  if (myConsumer != null) {
    myConsumer.consume(session);
  }
  return session;
}
