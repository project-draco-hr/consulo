{
  boolean toIgnore=false;
  if (!(e.getID() == MouseEvent.MOUSE_PRESSED || e.getID() == MouseEvent.MOUSE_RELEASED || e.getID() == MouseEvent.MOUSE_CLICKED)) {
    toIgnore=true;
  }
  if (e.isConsumed() || e.isPopupTrigger() || MouseEvent.MOUSE_RELEASED != e.getID() || e.getClickCount() < 1 || e.getButton() == MouseEvent.NOBUTTON) {
    toIgnore=true;
  }
  JRootPane root=findRoot(e);
  if (root != null) {
    final Integer lastId=myRootPane2BlockedId.get(root);
    if (lastId != null) {
      if (e.getID() <= lastId.intValue()) {
        myRootPane2BlockedId.remove(root);
      }
 else {
        myRootPane2BlockedId.put(root,e.getID());
        return true;
      }
    }
  }
  if (toIgnore)   return false;
  Component component=e.getComponent();
  if (component == null) {
    throw new IllegalStateException("component cannot be null");
  }
  component=SwingUtilities.getDeepestComponentAt(component,e.getX(),e.getY());
  if (component instanceof IdeGlassPaneImpl) {
    component=((IdeGlassPaneImpl)component).getTargetComponentFor(e);
  }
  if (component == null) {
    return false;
  }
  MouseShortcut shortcut=new MouseShortcut(e.getButton(),e.getModifiersEx(),e.getClickCount());
  fillActionsList(component,shortcut,IdeKeyEventDispatcher.isModalContext(component));
  ActionManagerEx actionManager=ActionManagerEx.getInstanceEx();
  if (actionManager != null) {
    for (int i=0; i < myActions.size(); i++) {
      AnAction action=myActions.get(i);
      DataContext dataContext=DataManager.getInstance().getDataContext(component);
      Presentation presentation=myPresentationFactory.getPresentation(action);
      AnActionEvent actionEvent=new AnActionEvent(e,dataContext,ActionPlaces.MAIN_MENU,presentation,ActionManager.getInstance(),e.getModifiers());
      action.beforeActionPerformedUpdate(actionEvent);
      if (presentation.isEnabled()) {
        actionManager.fireBeforeActionPerformed(action,dataContext,actionEvent);
        Component c=(Component)dataContext.getData(DataConstants.CONTEXT_COMPONENT);
        if (c != null && !c.isShowing()) {
          continue;
        }
        action.actionPerformed(actionEvent);
        e.consume();
      }
    }
  }
  return false;
}
