{
  FindSettings findSettings=FindSettings.getInstance();
  model.setCaseSensitive(myCbCaseSensitive.isSelected());
  findSettings.setCaseSensitive(myCbCaseSensitive.isSelected());
  if (model.isReplaceState()) {
    model.setPreserveCase(myCbPreserveCase.isSelected());
    findSettings.setPreserveCase(myCbPreserveCase.isSelected());
  }
  model.setWholeWordsOnly(myCbWholeWordsOnly.isSelected());
  findSettings.setWholeWordsOnly(myCbWholeWordsOnly.isSelected());
  model.setRegularExpressions(myCbRegularExpressions.isSelected());
  findSettings.setRegularExpressions(myCbRegularExpressions.isSelected());
  model.setStringToFind((String)myInputComboBox.getSelectedItem());
  if (model.isReplaceState()) {
    model.setPromptOnReplace(true);
    model.setReplaceAll(false);
    String stringToReplace=(String)myReplaceComboBox.getSelectedItem();
    if (stringToReplace == null) {
      stringToReplace="";
    }
    model.setStringToReplace(stringToReplace);
  }
  if (!model.isMultipleFiles()) {
    model.setForward(myRbForward.isSelected());
    findSettings.setForward(myRbForward.isSelected());
    model.setFromCursor(myRbFromCursor.isSelected());
    findSettings.setFromCursor(myRbFromCursor.isSelected());
    model.setGlobal(myRbGlobal.isSelected());
    findSettings.setGlobal(myRbGlobal.isSelected());
  }
 else {
    if (myCbToOpenInNewTab != null) {
      model.setOpenInNewTab(myCbToOpenInNewTab.isSelected());
    }
    model.setWithSubdirectories(myCbWithSubdirectories.isSelected());
    findSettings.setWithSubdirectories(myCbWithSubdirectories.isSelected());
    model.setProjectScope(myRbProject.isSelected());
    model.setDirectoryName(null);
    model.setModuleName(null);
    if (myRbDirectory.isSelected()) {
      String directory=getDirectory();
      model.setDirectoryName(directory == null ? "" : directory);
      if (directory == null) {
      }
    }
 else     if (myRbModule.isSelected()) {
      model.setModuleName((String)myModuleComboBox.getSelectedItem());
    }
    if (useFileFilter.isSelected()) {
      findSettings.setFileMask(model.getFileFilter());
    }
 else {
      findSettings.setFileMask(null);
    }
  }
}
