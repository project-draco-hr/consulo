{
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  gbConstraints.insets=new Insets(4,4,4,4);
  gbConstraints.fill=GridBagConstraints.VERTICAL;
  gbConstraints.weightx=0;
  gbConstraints.weighty=1;
  gbConstraints.anchor=GridBagConstraints.EAST;
  JLabel prompt=new JLabel("Text to find:");
  prompt.setDisplayedMnemonic('T');
  panel.add(prompt,gbConstraints);
  myInputComboBox=new ComboBox(300);
  initCombobox(myInputComboBox);
  if (myModel.isReplaceState()) {
    myReplaceComboBox=new ComboBox(300);
    initCombobox(myReplaceComboBox);
    final Component editorComponent=myReplaceComboBox.getEditor().getEditorComponent();
    editorComponent.addFocusListener(new FocusAdapter(){
      public void focusGained(      FocusEvent e){
        myReplaceComboBox.getEditor().selectAll();
        editorComponent.removeFocusListener(this);
      }
    }
);
  }
  gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
  gbConstraints.fill=GridBagConstraints.BOTH;
  gbConstraints.weightx=1;
  panel.add(myInputComboBox,gbConstraints);
  prompt.setLabelFor(myInputComboBox.getEditor().getEditorComponent());
  if (myModel.isReplaceState()) {
    gbConstraints.gridwidth=GridBagConstraints.RELATIVE;
    gbConstraints.fill=GridBagConstraints.VERTICAL;
    gbConstraints.weightx=0;
    myReplacePrompt=new JLabel("Replace with:");
    myReplacePrompt.setDisplayedMnemonic('R');
    panel.add(myReplacePrompt,gbConstraints);
    gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
    gbConstraints.fill=GridBagConstraints.BOTH;
    gbConstraints.weightx=1;
    panel.add(myReplaceComboBox,gbConstraints);
    myReplacePrompt.setLabelFor(myReplaceComboBox.getEditor().getEditorComponent());
  }
  return panel;
}
