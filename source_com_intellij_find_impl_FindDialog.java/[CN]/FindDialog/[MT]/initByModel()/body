{
  myCbCaseSensitive.setSelected(myModel.isCaseSensitive());
  myCbWholeWordsOnly.setSelected(myModel.isWholeWordsOnly());
  myCbRegularExpressions.setSelected(myModel.isRegularExpressions());
  if (!myModel.isMultipleFiles()) {
    if (myModel.isForward()) {
      myRbForward.setSelected(true);
    }
 else {
      myRbBackward.setSelected(true);
    }
    if (myModel.isFromCursor()) {
      myRbFromCursor.setSelected(true);
    }
 else {
      myRbEntireScope.setSelected(true);
    }
    if (myModel.isGlobal()) {
      myRbGlobal.setSelected(true);
    }
 else {
      myRbSelectedText.setSelected(true);
    }
  }
 else {
    setDirectories(FindSettings.getInstance().getRecentDirectories(),myModel.getDirectoryName());
    if (myModel.isProjectScope()) {
      myRbProject.setSelected(true);
      myCbWithSubdirectories.setEnabled(false);
      myDirectoryComboBox.setEnabled(false);
      mySelectDirectoryButton.setEnabled(false);
      myModuleComboBox.setEnabled(false);
    }
 else     if (myModel.getDirectoryName() != null) {
      myRbDirectory.setSelected(true);
      myCbWithSubdirectories.setEnabled(true);
      myDirectoryComboBox.setEnabled(true);
      mySelectDirectoryButton.setEnabled(true);
      myModuleComboBox.setEnabled(false);
    }
 else {
      myRbModule.setSelected(true);
      myCbWithSubdirectories.setEnabled(false);
      myDirectoryComboBox.setEnabled(false);
      mySelectDirectoryButton.setEnabled(false);
      myModuleComboBox.setEnabled(true);
      myModuleComboBox.setSelectedItem(myModel.getModuleName());
    }
    myCbWithSubdirectories.setSelected(myModel.isWithSubdirectories());
    if (myModel.getFileFilter() != null && myModel.getFileFilter().length() > 0) {
      myFileFilter.setSelectedItem(myModel.getFileFilter());
      myFileFilter.setEnabled(true);
      useFileFilter.setSelected(true);
    }
  }
  setStringsToComboBox(FindSettings.getInstance().getRecentFindStrings(),myInputComboBox,myModel.getStringToFind());
  if (myModel.isReplaceState()) {
    myCbPreserveCase.setSelected(myModel.isPreserveCase());
    setStringsToComboBox(FindSettings.getInstance().getRecentReplaceStrings(),myReplaceComboBox,myModel.getStringToReplace());
  }
  updateControls();
  validateFindButton();
}
