{
  JPanel scopePanel=new JPanel();
  scopePanel.setLayout(new GridBagLayout());
  scopePanel.setBorder(IdeBorderFactory.createTitledBorder(FindBundle.message("find.scope.group")));
  GridBagConstraints gbConstraints=new GridBagConstraints();
  gbConstraints.fill=GridBagConstraints.HORIZONTAL;
  gbConstraints.gridx=0;
  gbConstraints.gridy=0;
  gbConstraints.gridwidth=2;
  gbConstraints.weightx=1;
  myRbProject=new JRadioButton(FindBundle.message("find.scope.whole.project.radio"),true);
  scopePanel.add(myRbProject,gbConstraints);
  gbConstraints.gridx=0;
  gbConstraints.gridy=1;
  gbConstraints.weightx=0;
  gbConstraints.gridwidth=1;
  myRbModule=new JRadioButton(FindBundle.message("find.scope.module.radio"),false);
  scopePanel.add(myRbModule,gbConstraints);
  gbConstraints.gridx=1;
  gbConstraints.gridy=1;
  gbConstraints.weightx=1;
  Module[] modules=ModuleManager.getInstance(myProject).getModules();
  String names[]=new String[modules.length];
  for (int i=0; i < modules.length; i++) {
    names[i]=modules[i].getName();
  }
  Arrays.sort(names,String.CASE_INSENSITIVE_ORDER);
  myModuleComboBox=new ComboBox(names,-1);
  scopePanel.add(myModuleComboBox,gbConstraints);
  gbConstraints.gridx=0;
  gbConstraints.gridy=2;
  gbConstraints.weightx=0;
  gbConstraints.gridwidth=1;
  myRbDirectory=new JRadioButton(FindBundle.message("find.scope.directory.radio"),false);
  scopePanel.add(myRbDirectory,gbConstraints);
  gbConstraints.gridx=1;
  gbConstraints.gridy=2;
  gbConstraints.weightx=1;
  myDirectoryComboBox=new ComboBox(-1);
  Component editorComponent=myDirectoryComboBox.getEditor().getEditorComponent();
  if (editorComponent instanceof JTextField) {
    JTextField field=(JTextField)editorComponent;
    field.setColumns(40);
  }
  initCombobox(myDirectoryComboBox);
  scopePanel.add(myDirectoryComboBox,gbConstraints);
  gbConstraints.weightx=0;
  gbConstraints.gridx=2;
  gbConstraints.insets=new Insets(0,1,0,0);
  mySelectDirectoryButton=new FixedSizeButton(myDirectoryComboBox);
  TextFieldWithBrowseButton.MyDoClickAction.addTo(mySelectDirectoryButton,myDirectoryComboBox);
  mySelectDirectoryButton.setMargin(new Insets(0,0,0,0));
  scopePanel.add(mySelectDirectoryButton,gbConstraints);
  gbConstraints.gridx=0;
  gbConstraints.gridy=3;
  gbConstraints.weightx=1;
  gbConstraints.gridwidth=2;
  gbConstraints.insets=new Insets(0,16,0,0);
  myCbWithSubdirectories=new StateRestoringCheckBox(FindBundle.message("find.scope.directory.recursive.checkbox"),true);
  myCbWithSubdirectories.setSelected(true);
  scopePanel.add(myCbWithSubdirectories,gbConstraints);
  ButtonGroup bgScope=new ButtonGroup();
  bgScope.add(myRbDirectory);
  bgScope.add(myRbProject);
  bgScope.add(myRbModule);
  myRbProject.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      validateScopeControls();
      validateFindButton();
    }
  }
);
  myRbDirectory.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      validateScopeControls();
      validateFindButton();
      myDirectoryComboBox.getEditor().getEditorComponent().requestFocusInWindow();
    }
  }
);
  myRbModule.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      validateScopeControls();
      validateFindButton();
      myModuleComboBox.requestFocusInWindow();
    }
  }
);
  mySelectDirectoryButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
      VirtualFile[] files=FileChooser.chooseFiles(myProject,descriptor);
      if (files.length != 0) {
        myDirectoryComboBox.setSelectedItem(files[0].getPresentableUrl());
        validateFindButton();
      }
    }
  }
);
  return scopePanel;
}
