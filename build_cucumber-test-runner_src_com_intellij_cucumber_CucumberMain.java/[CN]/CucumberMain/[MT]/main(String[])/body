{
  final Ref<Throwable> errorRef=new Ref<Throwable>();
  final Ref<Runtime> runtimeRef=new Ref<Runtime>();
  try {
    EventQueue.invokeAndWait(new Runnable(){
      @Override public void run(){
        try {
          final ClassLoader classLoader=Thread.currentThread().getContextClassLoader();
          RuntimeOptions runtimeOptions=new RuntimeOptions(System.getProperties(),args);
          Runtime runtime=new Runtime(new MultiLoader(classLoader),classLoader,runtimeOptions);
          runtimeRef.set(runtime);
          runtime.writeStepdefsJson();
          runtime.run();
        }
 catch (        Throwable throwable) {
          errorRef.set(throwable);
          Logger.getInstance(CucumberMain.class).error(throwable);
        }
      }
    }
);
  }
 catch (  Throwable t) {
    errorRef.set(t);
    Logger.getInstance(CucumberMain.class).error(t);
  }
  final Throwable throwable=errorRef.get();
  if (throwable != null) {
    throwable.printStackTrace();
  }
  System.err.println("Failed tests :");
  for (  Throwable error : runtimeRef.get().getErrors()) {
    error.printStackTrace();
    System.err.println("=============================");
  }
  System.exit(throwable != null ? 1 : 0);
}
