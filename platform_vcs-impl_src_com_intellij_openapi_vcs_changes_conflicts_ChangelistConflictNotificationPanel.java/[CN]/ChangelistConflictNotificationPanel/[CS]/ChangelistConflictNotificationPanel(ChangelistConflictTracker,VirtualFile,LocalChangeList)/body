{
  myTracker=tracker;
  myFile=file;
  final ChangeListManager manager=tracker.getChangeListManager();
  myChangeList=changeList;
  myLabel.setText("File from non-active changelist is modified");
  createActionLabel("Move changes",new Runnable(){
    public void run(){
      ChangelistConflictResolution.MOVE.resolveConflict(myTracker.getProject(),myChangeList.getChanges());
    }
  }
).setToolTipText("Move changes to active changelist (" + manager.getDefaultChangeList().getName() + ")");
  createActionLabel("Switch changelist",new Runnable(){
    public void run(){
      List<Change> changes=Collections.singletonList(myTracker.getChangeListManager().getChange(myFile));
      ChangelistConflictResolution.SWITCH.resolveConflict(myTracker.getProject(),changes);
    }
  }
).setToolTipText("Set active changelist to '" + myChangeList.getName() + "'");
  createActionLabel("Ignore",new Runnable(){
    public void run(){
      myTracker.ignoreConflict(myFile,true);
    }
  }
).setToolTipText("Hide this notification");
  myLinksPanel.add(new InplaceButton("Show options dialog",IconLoader.getIcon("/general/ideOptions.png"),new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      ShowSettingsUtil.getInstance().editConfigurable(myTracker.getProject(),new ChangelistConflictConfigurable((ChangeListManagerImpl)manager));
    }
  }
));
}
