{
  final JComponent myComponent=component;
  final Ref<Boolean> asTarget=Ref.create(true);
  final Ref<Boolean> asSource=Ref.create(true);
  final Ref<Boolean> asNativeTarget=Ref.create(false);
  final Ref<Function<DnDActionInfo,DnDImage>> imageProvider=Ref.create(null);
  final Ref<Function<DnDActionInfo,DnDDragStartBean>> beanProvider=Ref.create(null);
  final Ref<Runnable> dropEnded=Ref.create(null);
  final Ref<Disposable> disposable=Ref.create(null);
  final Ref<DnDDropHandler> dropHandler=Ref.create(null);
  final Ref<DnDTargetChecker> targetChecker=Ref.create(null);
  final Ref<DnDDropActionHandler> dropActionHandler=Ref.create(null);
  final Ref<Runnable> cleanUp=Ref.create(null);
  return new DnDSupportBuilder(){
    @Override public DnDSupportBuilder disableAsTarget(){
      asTarget.set(false);
      return this;
    }
    @Override public DnDSupportBuilder disableAsSource(){
      asSource.set(false);
      return this;
    }
    @Override public DnDSupportBuilder enableAsNativeTarget(){
      asNativeTarget.set(true);
      return this;
    }
    @Override public DnDSupportBuilder setImageProvider(    Function<DnDActionInfo,DnDImage> fun){
      imageProvider.set(fun);
      return this;
    }
    @Override public DnDSupportBuilder setBeanProvider(    Function<DnDActionInfo,DnDDragStartBean> fun){
      beanProvider.set(fun);
      return this;
    }
    @Override public DnDSupportBuilder setDropHandler(    DnDDropHandler handler){
      dropHandler.set(handler);
      return this;
    }
    @Override public DnDSupportBuilder setTargetChecker(    DnDTargetChecker checker){
      targetChecker.set(checker);
      return this;
    }
    @Override public DnDSupportBuilder setDropActionHandler(    DnDDropActionHandler handler){
      dropActionHandler.set(handler);
      return this;
    }
    @Override public DnDSupportBuilder setDisposableParent(    Disposable parent){
      disposable.set(parent);
      return this;
    }
    @Override public DnDSupportBuilder setCleanUpOnLeaveCallback(    Runnable callback){
      cleanUp.set(callback);
      return this;
    }
    @Override public DnDSupportBuilder setDropEndedCallback(    Runnable callback){
      dropEnded.set(callback);
      return this;
    }
    @Override public void install(){
      new DnDSupport(myComponent,beanProvider.get(),imageProvider.get(),dropHandler.get(),targetChecker.get(),dropEnded.get(),disposable.get(),dropActionHandler.get(),cleanUp.get(),asSource.get(),asTarget.get(),asNativeTarget.get());
    }
  }
;
}
