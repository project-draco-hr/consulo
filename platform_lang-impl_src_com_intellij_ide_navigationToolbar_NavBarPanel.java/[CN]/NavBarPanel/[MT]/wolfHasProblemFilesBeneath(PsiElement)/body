{
  return WolfTheProblemSolver.getInstance(scope.getProject()).hasProblemFilesBeneath(new Condition<VirtualFile>(){
    public boolean value(    final VirtualFile virtualFile){
      if (scope instanceof PsiDirectory) {
        final PsiDirectory directory=(PsiDirectory)scope;
        if (!VfsUtil.isAncestor(directory.getVirtualFile(),virtualFile,false))         return false;
        return ModuleUtil.findModuleForFile(virtualFile,scope.getProject()) == ModuleUtil.findModuleForPsiElement(scope);
      }
 else       if (scope instanceof PsiDirectoryContainer) {
        final PsiDirectory[] psiDirectories=((PsiDirectoryContainer)scope).getDirectories();
        for (        PsiDirectory directory : psiDirectories) {
          if (VfsUtil.isAncestor(directory.getVirtualFile(),virtualFile,false)) {
            return true;
          }
        }
      }
      return false;
    }
  }
);
}
