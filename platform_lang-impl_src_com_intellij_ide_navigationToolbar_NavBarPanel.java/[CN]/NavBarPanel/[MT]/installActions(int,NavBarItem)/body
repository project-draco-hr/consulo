{
  DnDSupport.createBuilder(component).setBeanProvider(new Function<DnDActionInfo,DnDDragStartBean>(){
    @Override public DnDDragStartBean fun(    DnDActionInfo dnDActionInfo){
      return new DnDDragStartBean(new TransferableWrapper(){
        @Override public List<File> asFileList(){
          final Object o=myModel.get(index);
          if (o instanceof PsiElement) {
            final VirtualFile vf=o instanceof PsiDirectory ? ((PsiDirectory)o).getVirtualFile() : ((PsiElement)o).getContainingFile().getVirtualFile();
            if (vf != null) {
              return Arrays.asList(new File(vf.getPath()).getAbsoluteFile());
            }
          }
          return Collections.emptyList();
        }
        @Override public TreeNode[] getTreeNodes(){
          return null;
        }
        @Override public PsiElement[] getPsiElements(){
          return null;
        }
      }
);
    }
  }
).setDisposableParent(component).install();
  ListenerUtil.addMouseListener(component,new MouseAdapter(){
    public void mouseReleased(    final MouseEvent e){
      if (SystemInfo.isWindows) {
        click(e);
      }
    }
    public void mousePressed(    final MouseEvent e){
      if (!SystemInfo.isWindows) {
        click(e);
      }
    }
    private void click(    final MouseEvent e){
      if (e.isConsumed())       return;
      if (e.isPopupTrigger()) {
        myModel.setSelectedIndex(index);
        IdeFocusManager.getInstance(myProject).requestFocus(NavBarPanel.this,true);
        rightClick(index);
        e.consume();
      }
 else       if (!e.isPopupTrigger()) {
        if (e.getClickCount() == 1) {
          ctrlClick(index);
          myModel.setSelectedIndex(index);
          e.consume();
        }
 else         if (e.getClickCount() == 2 && e.getButton() == MouseEvent.BUTTON1) {
          myModel.setSelectedIndex(index);
          IdeFocusManager.getInstance(myProject).requestFocus(NavBarPanel.this,true);
          doubleClick(index);
          e.consume();
        }
      }
    }
  }
);
}
