{
  setFocusBorderAroundIcon(false);
  String name=NavBarModel.getPresentableText(value,getWindow());
  Color color=list.getForeground();
  boolean isProblemFile=false;
  if (value instanceof PsiElement) {
    final PsiElement psiElement=(PsiElement)value;
    PsiFile psiFile=psiElement.getContainingFile();
    if (psiFile != null) {
      VirtualFile vFile=psiFile.getVirtualFile();
      if (vFile != null) {
        if (WolfTheProblemSolver.getInstance(myProject).isProblemFile(vFile)) {
          isProblemFile=true;
        }
        FileStatus status=FileStatusManager.getInstance(myProject).getStatus(vFile);
        color=status.getColor();
      }
    }
 else {
      isProblemFile=wolfHasProblemFilesBeneath(psiElement);
    }
  }
 else   if (value instanceof Module) {
    final Module module=(Module)value;
    isProblemFile=WolfTheProblemSolver.getInstance(myProject).hasProblemFilesBeneath(module);
  }
 else   if (value instanceof Project) {
    final Module[] modules=ModuleManager.getInstance((Project)value).getModules();
    for (    Module module : modules) {
      if (WolfTheProblemSolver.getInstance(myProject).hasProblemFilesBeneath(module)) {
        isProblemFile=true;
        break;
      }
    }
  }
  SimpleTextAttributes nameAttributes;
  if (isProblemFile) {
    TextAttributes attributes=new TextAttributes(color,null,Color.red,EffectType.WAVE_UNDERSCORE,Font.PLAIN);
    nameAttributes=SimpleTextAttributes.fromTextAttributes(attributes);
  }
 else {
    nameAttributes=new SimpleTextAttributes(Font.PLAIN,color);
  }
  append(name,nameAttributes);
  setIcon(NavBarPanel.getIcon(value,false));
  setPaintFocusBorder(false);
  setBackground(selected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground());
}
