{
  final IElementType type=getLiteralElementType();
  String text=NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase() : getCanonicalText();
  final int textLength=text.length();
  if (type == JavaTokenType.INTEGER_LITERAL) {
    try {
      if (text.startsWith(HEX_PREFIX)) {
        final long value=parseDigits(text.substring(2),4,32);
        return Integer.valueOf((int)value);
      }
      if (text.startsWith(BIN_PREFIX)) {
        final long value=parseDigits(text.substring(2),1,32);
        return Integer.valueOf((int)value);
      }
      if (StringUtil.startsWithChar(text,'0')) {
        final long value=parseDigits(text,3,32);
        return Integer.valueOf((int)value);
      }
      final long l=Long.parseLong(text,10);
      if (text.equals(_2_IN_31))       return Integer.valueOf((int)l);
      long converted=(int)l;
      return l == converted ? Integer.valueOf((int)l) : null;
    }
 catch (    NumberFormatException e) {
      return null;
    }
  }
  if (type == JavaTokenType.LONG_LITERAL) {
    if (StringUtil.endsWithChar(text,'L') || StringUtil.endsWithChar(text,'l')) {
      text=text.substring(0,textLength - 1);
    }
    try {
      if (text.startsWith(HEX_PREFIX)) {
        return parseDigits(text.substring(2),4,64);
      }
      if (text.startsWith(BIN_PREFIX)) {
        return parseDigits(text.substring(2),1,64);
      }
      if (StringUtil.startsWithChar(text,'0')) {
        return parseDigits(text,3,64);
      }
      if (_2_IN_63.equals(text))       return Long.valueOf(-1L << 63);
      return Long.valueOf(text,10);
    }
 catch (    NumberFormatException e) {
      return null;
    }
  }
  if (type == JavaTokenType.FLOAT_LITERAL) {
    try {
      return Float.valueOf(text);
    }
 catch (    NumberFormatException e) {
      return null;
    }
  }
  if (type == JavaTokenType.DOUBLE_LITERAL) {
    try {
      return Double.valueOf(text);
    }
 catch (    NumberFormatException e) {
      return null;
    }
  }
  if (type == JavaTokenType.CHARACTER_LITERAL) {
    if (StringUtil.endsWithChar(text,'\'')) {
      if (textLength == 1)       return null;
      text=text.substring(1,textLength - 1);
    }
 else {
      text=text.substring(1,textLength);
    }
    StringBuilder chars=new StringBuilder();
    boolean success=parseStringCharacters(text,chars,null);
    if (!success)     return null;
    if (chars.length() != 1)     return null;
    return Character.valueOf(chars.charAt(0));
  }
  if (type == JavaTokenType.STRING_LITERAL) {
    String innerText=getInnerText();
    return innerText == null ? null : internedParseStringCharacters(innerText);
  }
  if (type == JavaTokenType.TRUE_KEYWORD) {
    return Boolean.TRUE;
  }
  if (type == JavaTokenType.FALSE_KEYWORD) {
    return Boolean.FALSE;
  }
  return null;
}
