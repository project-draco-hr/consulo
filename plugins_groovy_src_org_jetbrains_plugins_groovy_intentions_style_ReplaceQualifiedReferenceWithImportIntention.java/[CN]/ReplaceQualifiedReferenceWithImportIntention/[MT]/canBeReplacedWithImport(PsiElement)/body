{
  if (element instanceof GrCodeReferenceElement) {
    if (PsiTreeUtil.getParentOfType(element,GrImportStatement.class,GrPackageDefinition.class) != null)     return false;
  }
 else   if (element instanceof GrReferenceExpression) {
    if (!GrReferenceAdjuster.seemsToBeQualifiedClassName((GrReferenceExpression)element))     return false;
  }
 else {
    return false;
  }
  final GrReferenceElement ref=(GrReferenceElement)element;
  if (ref.getQualifier() == null)   return false;
  final PsiElement resolved=ref.resolve();
  if (!(resolved instanceof PsiClass))   return false;
  final String name=((PsiClass)resolved).getName();
  if (name == null)   return false;
  final GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(element.getProject());
  final GrReferenceExpression shortedRef=factory.createReferenceExpressionFromText(name,element);
  final GroovyResolveResult resolveResult=shortedRef.advancedResolve();
  if (resolveResult.getElement() == null || !resolveResult.isAccessible() || !resolveResult.isStaticsOK()) {
    return true;
  }
  if (element.getManager().areElementsEquivalent(resolved,resolveResult.getElement())) {
    return true;
  }
  return false;
}
