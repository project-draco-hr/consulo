{
  final PsiFile containingFile=getContainingFile();
  final FileType fileType=containingFile.getFileType();
  final PomModel model=getProject().getModel();
  final XmlAspect aspect=model.getModelAspect(XmlAspect.class);
  final TreeElement[] retHolder=new TreeElement[1];
  if (child.getElementType() == XmlElementType.XML_ATTRIBUTE) {
    model.runTransaction(new PomTransactionBase(this){
      public PomModelEvent runInner(){
        final String value=((XmlAttribute)child).getValue();
        final String name=((XmlAttribute)child).getName();
        TreeElement treeElement;
        if (anchor == null) {
          ASTNode startTagEnd=XmlChildRole.START_TAG_END_FINDER.findChild(XmlTagImpl.this);
          if (startTagEnd == null)           startTagEnd=XmlChildRole.EMPTY_TAG_END_FINDER.findChild(XmlTagImpl.this);
          if (startTagEnd == null) {
            treeElement=addInternalHack(child,child,null,null,fileType);
          }
 else {
            treeElement=addInternalHack(child,child,startTagEnd,Boolean.TRUE,fileType);
          }
        }
 else {
          treeElement=addInternalHack(child,child,anchor,Boolean.valueOf(before),fileType);
        }
        final ASTNode treePrev=treeElement.getTreePrev();
        if (treeElement.getElementType() != XmlTokenType.XML_WHITE_SPACE && treePrev.getElementType() != XmlTokenType.XML_WHITE_SPACE) {
          final LeafElement singleLeafElement=Factory.createSingleLeafElement(XmlTokenType.XML_WHITE_SPACE,new char[]{' '},0,1,SharedImplUtil.findCharTableByTree(XmlTagImpl.this),getManager());
          addChild(singleLeafElement,treeElement);
          treeElement=singleLeafElement;
        }
        retHolder[0]=treeElement;
        return XmlAttributeSetImpl.createXmlAttributeSet(model,XmlTagImpl.this,name,value);
      }
    }
,aspect);
  }
 else   if (child.getElementType() == XmlElementType.XML_TAG || child.getElementType() == XmlElementType.XML_TEXT) {
    final BodyInsertTransaction transaction=new BodyInsertTransaction(model,child,anchor,before,fileType);
    model.runTransaction(transaction,aspect);
    return transaction.getNewElement();
  }
 else {
    model.runTransaction(new PomTransactionBase(this){
      public PomModelEvent runInner(){
        final TreeElement treeElement=addInternalHack(child,child,anchor,Boolean.valueOf(before),fileType);
        retHolder[0]=treeElement;
        return XmlTagChildAddImpl.createXmlTagChildAdd(model,XmlTagImpl.this,(XmlTagChild)SourceTreeToPsiMap.treeElementToPsi(treeElement));
      }
    }
,aspect);
  }
  return retHolder[0];
}
