{
  final PomModel model=getProject().getModel();
  final XmlAspect aspect=model.getModelAspect(XmlAspect.class);
  model.runTransaction(new PomTransactionBase(this,aspect){
    public PomModelEvent runInner() throws IncorrectOperationException {
      final String oldName=getName();
      final XmlTagImpl dummyTag=(XmlTagImpl)getManager().getElementFactory().createTagFromText(XmlTagTextUtil.composeTagText(name,"aa"));
      final XmlTagImpl tag=XmlTagImpl.this;
      final CharTable charTableByTree=SharedImplUtil.findCharTableByTree(tag);
      ChangeUtil.replaceChild(tag,(TreeElement)XmlChildRole.START_TAG_NAME_FINDER.findChild(tag),ChangeUtil.copyElement((TreeElement)XmlChildRole.START_TAG_NAME_FINDER.findChild(dummyTag),charTableByTree));
      final ASTNode childByRole=XmlChildRole.CLOSING_TAG_NAME_FINDER.findChild(tag);
      if (childByRole != null)       ChangeUtil.replaceChild(tag,(TreeElement)childByRole,ChangeUtil.copyElement((TreeElement)XmlChildRole.CLOSING_TAG_NAME_FINDER.findChild(dummyTag),charTableByTree));
      return XmlTagNameChangedImpl.createXmlTagNameChanged(model,tag,oldName);
    }
  }
);
  return this;
}
