{
  String qname;
  final String prefix=getPrefixByNamespace(namespace);
  if (prefix != null && prefix.length() > 0)   qname=prefix + ":" + localName;
 else   qname=localName;
  try {
    String tagStart=qname;
    if (getPrefixByNamespace(namespace) == null) {
      tagStart+=" xmlns=\"" + namespace + "\"";
    }
    XmlTag retTag;
    if (bodyText != null && bodyText.length() > 0) {
      retTag=getManager().getElementFactory().createTagFromText("<" + tagStart + ">"+ bodyText+ "</"+ qname+ ">");
      if (enforseNamespacesDeep) {
        retTag.acceptChildren(new PsiRecursiveElementVisitor(){
          public void visitXmlTag(          XmlTag tag){
            final String namespacePrefix=((XmlTagImpl)tag).getNamespacePrefix();
            if (namespacePrefix.length() == 0 || getNamespaceByPrefix(namespacePrefix) == null) {
              String qname;
              if (prefix != null && prefix.length() > 0)               qname=prefix + ":" + tag.getLocalName();
 else               qname=tag.getLocalName();
              try {
                tag.setName(qname);
              }
 catch (              IncorrectOperationException e) {
                LOG.error(e);
              }
            }
            super.visitXmlTag(tag);
          }
          public void visitReferenceExpression(          PsiReferenceExpression expression){
          }
        }
);
      }
    }
 else     retTag=getManager().getElementFactory().createTagFromText("<" + tagStart + "/>");
    return retTag;
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
  return null;
}
