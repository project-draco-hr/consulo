{
  final ASTNode anchor=expandTag();
  if (myChild.getElementType() == XmlElementType.XML_TAG) {
    final XmlElementDescriptor parentDescriptor=getDescriptor();
    final XmlTag[] subTags=getSubTags();
    final PsiElement declaration=parentDescriptor != null ? parentDescriptor.getDeclaration() : null;
    if ((declaration != null && declaration.getContainingFile().isPhysical()) && subTags.length > 0) {
      final XmlElementDescriptor[] childElementDescriptors=parentDescriptor.getElementsDescriptors(XmlTagImpl.this);
      int subTagNum=-1;
      for (      final XmlElementDescriptor childElementDescriptor : childElementDescriptors) {
        final String childElementName=childElementDescriptor.getName();
        while (subTagNum < subTags.length - 1 && subTags[subTagNum + 1].getName().equals(childElementName)) {
          subTagNum++;
        }
        if (childElementName.equals(XmlChildRole.START_TAG_NAME_FINDER.findChild(myChild).getText())) {
          if (subTagNum >= 0) {
            final ASTNode subTag=(ASTNode)subTags[subTagNum];
            if (subTag.getTreeParent() != XmlTagImpl.this) {
              final XmlEntityRef entityRef=PsiTreeUtil.getParentOfType(subTags[subTagNum],XmlEntityRef.class);
              throw new IncorrectOperationException("Can't insert subtag to entity! Entity reference text: " + entityRef != null ? entityRef.getText() : "");
            }
            myNewElement=XmlTagImpl.super.addInternal(myChild,myChild,subTag,Boolean.FALSE);
          }
 else {
            final ASTNode child=XmlChildRole.START_TAG_END_FINDER.findChild(XmlTagImpl.this);
            myNewElement=XmlTagImpl.super.addInternal(myChild,myChild,child,Boolean.FALSE);
          }
          return null;
        }
      }
    }
 else {
      final ASTNode child=XmlChildRole.CLOSING_TAG_START_FINDER.findChild(XmlTagImpl.this);
      myNewElement=XmlTagImpl.super.addInternal(myChild,myChild,child,Boolean.TRUE);
      return null;
    }
  }
  myNewElement=XmlTagImpl.super.addInternal(myChild,myChild,anchor,Boolean.TRUE);
  return null;
}
