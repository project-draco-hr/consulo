{
  myRule=rule;
  myConditionInfo=null;
  for (  ArrangementAtomMatchConditionComponent component : myComponents.values()) {
    component.setEnabled(false);
    component.setSelected(false);
  }
  if (rule == null) {
    return;
  }
  ArrangementMatchCondition condition=rule.getMatcher().getCondition();
  myConditionInfo=ArrangementUtil.extractConditions(condition);
  Map<ArrangementSettingType,Collection<?>> available=ArrangementConfigUtil.buildAvailableConditions(myFilter,condition);
  for (  Collection<?> ids : available.values()) {
    for (    Object id : ids) {
      ArrangementAtomMatchConditionComponent component=myComponents.get(id);
      if (component != null) {
        component.setEnabled(true);
        component.setSelected(myConditionInfo.hasCondition(id));
      }
    }
  }
  repaint();
}
