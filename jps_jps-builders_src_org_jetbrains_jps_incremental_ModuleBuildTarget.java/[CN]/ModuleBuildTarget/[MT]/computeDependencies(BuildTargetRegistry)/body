{
  JpsJavaDependenciesEnumerator enumerator=JpsJavaExtensionService.dependencies(myModule).compileOnly();
  if (!isTests()) {
    enumerator.productionOnly();
  }
  final ArrayList<BuildTarget<?>> dependencies=new ArrayList<BuildTarget<?>>();
  enumerator.processModules(new Consumer<JpsModule>(){
    @Override public void consume(    JpsModule module){
      dependencies.add(new ModuleBuildTarget(module,myTargetType));
    }
  }
);
  if (isTests()) {
    dependencies.add(new ModuleBuildTarget(myModule,JavaModuleBuildTargetType.PRODUCTION));
  }
  final Collection<ModuleBasedTarget<?>> moduleBased=targetRegistry.getModuleBasedTargets(getModule(),isTests() ? BuildTargetRegistry.ModuleTargetSelector.TEST : BuildTargetRegistry.ModuleTargetSelector.PRODUCTION);
  for (  ModuleBasedTarget<?> target : moduleBased) {
    if (target != this && target.isCompiledBeforeModuleLevelBuilders()) {
      dependencies.add(target);
    }
  }
  dependencies.trimToSize();
  return dependencies;
}
