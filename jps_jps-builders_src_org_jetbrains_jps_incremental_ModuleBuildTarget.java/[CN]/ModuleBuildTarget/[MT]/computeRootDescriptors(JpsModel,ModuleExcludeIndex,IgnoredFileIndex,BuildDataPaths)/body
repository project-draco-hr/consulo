{
  List<JavaSourceRootDescriptor> roots=new ArrayList<JavaSourceRootDescriptor>();
  JavaSourceRootType type=isTests() ? JavaSourceRootType.TEST_SOURCE : JavaSourceRootType.SOURCE;
  Iterable<ExcludedJavaSourceRootProvider> excludedRootProviders=JpsServiceManager.getInstance().getExtensions(ExcludedJavaSourceRootProvider.class);
  final Set<File> moduleExcludes=new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY);
  moduleExcludes.addAll(index.getModuleExcludes(myModule));
  roots_loop:   for (  JpsTypedModuleSourceRoot<JpsSimpleElement<JavaSourceRootProperties>> sourceRoot : myModule.getSourceRoots(type)) {
    for (    ExcludedJavaSourceRootProvider provider : excludedRootProviders) {
      if (provider.isExcludedFromCompilation(myModule,sourceRoot) || JpsPathUtil.isUnder(moduleExcludes,sourceRoot.getFile())) {
        continue roots_loop;
      }
    }
    final String packagePrefix=sourceRoot.getProperties().getData().getPackagePrefix();
    roots.add(new JavaSourceRootDescriptor(sourceRoot.getFile(),this,false,false,packagePrefix,computeRootExcludes(sourceRoot.getFile(),index)));
  }
  return roots;
}
