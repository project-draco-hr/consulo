{
  if (element instanceof PsiMethod) {
    final PsiMethod method=(PsiMethod)element;
    if (method.isConstructor()) {
      final PsiClass containingClass=method.getContainingClass();
      final String name=containingClass.getName();
      if (StringUtil.isNotEmpty(name)) {
        LookupItemUtil.addLookupItem(set,name,matcher);
      }
      return;
    }
  }
  LookupItemUtil.addLookupItems(set,getUnresolvedReferences(element.getParent(),true),matcher);
  if (!((PsiModifierListOwner)element).hasModifierProperty(PsiModifier.PRIVATE)) {
    LookupItemUtil.addLookupItems(set,getOverides((PsiClass)element.getParent(),PsiUtil.getTypeByPsiElement(element)),matcher);
    LookupItemUtil.addLookupItems(set,getImplements((PsiClass)element.getParent(),PsiUtil.getTypeByPsiElement(element)),matcher);
  }
  LookupItemUtil.addLookupItems(set,getPropertiesHandlersNames((PsiClass)element.getParent(),((PsiModifierListOwner)element).hasModifierProperty(PsiModifier.STATIC),PsiUtil.getTypeByPsiElement(element),element),matcher);
}
