{
  if (file instanceof VirtualFilePathWrapper) {
    return includeFilePath ? ((VirtualFilePathWrapper)file).getPresentablePath() : file.getName();
  }
  String url;
  if (includeFilePath) {
    url=file.getPresentableUrl();
  }
 else   if (includeUniqueFilePath) {
    url=UniqueVFilePathBuilder.getInstance().getUniqueVirtualFilePath(project,file);
  }
 else {
    url=file.getName();
  }
  if (project == null) {
    return url;
  }
 else {
    final VirtualFile baseDir=project.getBaseDir();
    if (baseDir != null && includeFilePath) {
      final String projectHomeUrl=baseDir.getPresentableUrl();
      if (url.startsWith(projectHomeUrl)) {
        url="..." + url.substring(projectHomeUrl.length());
      }
    }
    if (SystemInfo.isMac && file.getFileSystem() instanceof ArchiveFileSystem) {
      final VirtualFile fileForJar=((ArchiveFileSystem)file.getFileSystem()).getVirtualFileForArchive(file);
      if (fileForJar != null) {
        final OrderEntry libraryEntry=LibraryUtil.findLibraryEntry(file,project);
        if (libraryEntry != null) {
          if (libraryEntry instanceof ModuleExtensionWithSdkOrderEntry) {
            url=url + " - [" + ((ModuleExtensionWithSdkOrderEntry)libraryEntry).getSdkName()+ "]";
          }
 else {
            url=url + " - [" + libraryEntry.getPresentableName()+ "]";
          }
        }
 else {
          url=url + " - [" + fileForJar.getName()+ "]";
        }
      }
    }
    final Module module=ModuleUtil.findModuleForFile(file,project);
    if (module == null)     return url;
    return !keepModuleAlwaysOnTheLeft && SystemInfo.isMac ? url + " - [" + module.getName()+ "]" : "[" + module.getName() + "] - "+ url;
  }
}
