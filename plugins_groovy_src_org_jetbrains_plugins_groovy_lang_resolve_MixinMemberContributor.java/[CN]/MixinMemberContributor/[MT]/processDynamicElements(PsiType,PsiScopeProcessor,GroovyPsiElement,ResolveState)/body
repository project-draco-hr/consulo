{
  if (!(qualifierType instanceof PsiClassType))   return;
  if (isInAnnotation(place))   return;
  final PsiClassType.ClassResolveResult resolveResult=((PsiClassType)qualifierType).resolveGenerics();
  final PsiClass aClass=resolveResult.getElement();
  if (aClass == null)   return;
  final PsiModifierList modifierList=aClass.getModifierList();
  if (modifierList == null)   return;
  List<PsiClass> mixins=new ArrayList<PsiClass>();
  for (  PsiAnnotation annotation : getAllMixins(modifierList)) {
    final PsiAnnotationMemberValue value=annotation.findAttributeValue("value");
    if (value instanceof GrAnnotationArrayInitializer) {
      final GrAnnotationMemberValue[] initializers=((GrAnnotationArrayInitializer)value).getInitializers();
      for (      GrAnnotationMemberValue initializer : initializers) {
        addMixin(initializer,mixins);
      }
    }
 else     if (value instanceof GrExpression) {
      addMixin((GrExpression)value,mixins);
    }
  }
  for (  PsiClass mixin : mixins) {
    if (!mixin.processDeclarations(new DelegatingScopeProcessor(processor){
      @Override public boolean execute(      PsiElement element,      ResolveState state){
        if (isCategoryMethod(element,qualifierType,state.get(PsiSubstitutor.KEY))) {
          return super.execute(GrGdkMethodImpl.createGdkMethod((PsiMethod)element,false),state);
        }
 else {
          return super.execute(element,state);
        }
      }
    }
,state,null,place)) {
      return;
    }
  }
}
