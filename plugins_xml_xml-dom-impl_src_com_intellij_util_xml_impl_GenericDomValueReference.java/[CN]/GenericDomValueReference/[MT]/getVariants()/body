{
  final Converter<T> converter=getConverter();
  if (converter instanceof EnumConverter || converter == ResolvingConverter.BOOLEAN_CONVERTER) {
    if (DomCompletionContributor.isSchemaEnumerated(getElement()))     return ArrayUtil.EMPTY_OBJECT_ARRAY;
  }
  if (converter instanceof ResolvingConverter) {
    final ResolvingConverter<T> resolvingConverter=(ResolvingConverter<T>)converter;
    ArrayList<Object> result=new ArrayList<Object>();
    final ConvertContext convertContext=getConvertContext();
    for (    T variant : resolvingConverter.getVariants(convertContext)) {
      LookupElement lookupElement=resolvingConverter.createLookupElement(variant);
      if (lookupElement != null) {
        result.add(lookupElement);
        continue;
      }
      String name=converter.toString(variant,convertContext);
      if (name != null) {
        result.add(ElementPresentationManager.getInstance().createVariant(variant,name,((ResolvingConverter)converter).getPsiElement(variant)));
      }
    }
    for (    final String string : resolvingConverter.getAdditionalVariants(convertContext)) {
      result.add(LookupValueFactory.createLookupValue(string,null));
    }
    return result.toArray();
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
