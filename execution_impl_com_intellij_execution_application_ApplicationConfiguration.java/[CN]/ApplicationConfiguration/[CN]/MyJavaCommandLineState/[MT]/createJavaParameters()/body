{
  final JavaParameters params=new JavaParameters();
  JavaParametersUtil.configureModule(getConfigurationModule(),params,JavaParameters.JDK_AND_CLASSES_AND_TESTS,ALTERNATIVE_JRE_PATH_ENABLED ? ALTERNATIVE_JRE_PATH : null);
  JavaParametersUtil.configureConfiguration(params,ApplicationConfiguration.this);
  if (ENABLE_SWING_INSPECTOR) {
    try {
      myLastSnapShooterPort=NetUtils.findAvailableSocketPort();
    }
 catch (    IOException ex) {
      myLastSnapShooterPort=-1;
    }
  }
  if (ENABLE_SWING_INSPECTOR && myLastSnapShooterPort != -1) {
    params.getProgramParametersList().prepend(MAIN_CLASS_NAME);
    params.getProgramParametersList().prepend(Integer.toString(myLastSnapShooterPort));
    params.getProgramParametersList().prepend(Integer.toString(params.getClassPath().getPathList().size()));
    Set<String> paths=new TreeSet<String>();
    paths.add(PathUtil.getJarPathForClass(SnapShooter.class));
    paths.add(PathUtil.getJarPathForClass(BaseComponent.class));
    paths.add(PathUtil.getJarPathForClass(ProjectComponent.class));
    paths.add(PathUtil.getJarPathForClass(LwComponent.class));
    paths.add(PathUtil.getJarPathForClass(GridConstraints.class));
    paths.add(PathUtil.getJarPathForClass(JDOMExternalizable.class));
    paths.add(PathUtil.getJarPathForClass(Document.class));
    paths.add(PathUtil.getJarPathForClass(LafManagerListener.class));
    paths.add(PathUtil.getJarPathForClass(DataProvider.class));
    paths.add(PathUtil.getJarPathForClass(XmlUtil.class));
    paths.add(PathUtil.getJarPathForClass(Navigatable.class));
    paths.add(PathUtil.getJarPathForClass(AreaInstance.class));
    paths.add(PathUtil.getJarPathForClass(THashMap.class));
    paths.add(PathUtil.getJarPathForClass(FormLayout.class));
    for (    String path : paths) {
      params.getClassPath().addFirst(path);
    }
    params.setMainClass("com.intellij.uiDesigner.snapShooter.SnapShooter");
  }
 else {
    params.setMainClass(MAIN_CLASS_NAME);
  }
  if (isCoverageEnabled()) {
    final String coverageFileName=getCoverageFilePath();
    final long lastCoverageTime=System.currentTimeMillis();
    String name=getName();
    if (name == null)     name=getGeneratedName();
    myCurrentCoverageSuite=CoverageDataManager.getInstance(getProject()).addCoverageSuite(name,coverageFileName,getCoveragePatterns(),lastCoverageTime,!isMergeWithPreviousResults());
    ApplicationConfiguration.this.appendCoverageArgument(params);
  }
  return params;
}
