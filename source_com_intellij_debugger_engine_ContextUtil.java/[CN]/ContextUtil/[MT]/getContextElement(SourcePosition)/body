{
  if (position == null)   return null;
  final PsiFile psiFile=position.getFile();
  final PsiElement element=getContextElementInText(psiFile,position.getLine());
  if (psiFile instanceof JspFileImpl) {
    JspFileImpl jspFile=(JspFileImpl)psiFile;
    JspImplicitVariable[] predefinedVariables=jspFile.getPredefinedVariables();
    StringBuffer buf=new StringBuffer();
    buf.append('{');
    for (int i=0; i < predefinedVariables.length; i++) {
      JspImplicitVariable predefinedVariable=predefinedVariables[i];
      buf.append(predefinedVariable.getText());
      buf.append(";\n");
    }
    buf.append('}');
    if (buf.length() > 2) {
      PsiElementFactory elementFactory=psiFile.getManager().getElementFactory();
      try {
        PsiCodeBlock codeBlockFromText=elementFactory.createCodeBlockFromText(buf.toString(),element);
        PsiStatement[] statements=codeBlockFromText.getStatements();
        for (int i=0; i < statements.length; i++) {
          PsiDeclarationStatement statement=(PsiDeclarationStatement)statements[i];
          PsiElement[] declaredElements=statement.getDeclaredElements();
          for (int j=0; j < declaredElements.length; j++) {
            declaredElements[j].putUserData(IS_JSP_IMPLICIT,IS_JSP_IMPLICIT);
          }
        }
        return codeBlockFromText;
      }
 catch (      IncorrectOperationException e) {
        LOG.assertTrue(false);
      }
    }
  }
  return element;
}
