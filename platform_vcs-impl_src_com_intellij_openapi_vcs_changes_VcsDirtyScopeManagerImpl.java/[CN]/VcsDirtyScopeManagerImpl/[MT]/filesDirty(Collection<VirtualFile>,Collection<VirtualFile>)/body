{
  try {
    final ArrayList<VcsRoot> filesConverted=filesDirty == null ? null : new ArrayList<VcsRoot>(filesDirty.size());
    final ArrayList<VcsRoot> dirsConverted=dirsRecursivelyDirty == null ? null : new ArrayList<VcsRoot>(dirsRecursivelyDirty.size());
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        convert(filesDirty,filesConverted);
        convert(dirsRecursivelyDirty,dirsConverted);
      }
    }
);
    final boolean haveStuff=filesConverted != null && !filesConverted.isEmpty() || dirsConverted != null && !dirsConverted.isEmpty();
    if (!haveStuff)     return;
    if (LOG.isDebugEnabled()) {
      LOG.debug("files dirty: " + filesConverted + "; "+ dirsConverted+ "; "+ ReflectionUtil.findCallerClass(2));
    }
    takeDirt(new Consumer<DirtBuilder>(){
      public void consume(      final DirtBuilder dirt){
        if (filesConverted != null) {
          for (          VcsRoot root : filesConverted) {
            dirt.addDirtyFile(root);
          }
        }
        if (dirsConverted != null) {
          for (          VcsRoot root : dirsConverted) {
            dirt.addDirtyDirRecursively(root);
          }
        }
      }
    }
);
  }
 catch (  ProcessCanceledException ignore) {
  }
}
