{
  final Document doc=editor.getDocument();
  int startOffset=editor.logicalPositionToOffset(new LogicalPosition(guide.startLine,0));
  int endOffset=Math.min(doc.getLineStartOffset(guide.endLine),doc.getTextLength());
  final VirtualFile file=((EditorEx)editor).getVirtualFile();
  if (file != null) {
    final CharSequence chars=doc.getCharsSequence();
    int nonWhitespaceOffset=CharArrayUtil.shiftForward(chars,endOffset," \t\n");
    HighlighterIterator iterator=((EditorEx)editor).getHighlighter().createIterator(nonWhitespaceOffset);
    if (BraceMatchingUtil.isRBraceToken(iterator,chars,file.getFileType())) {
      if (((EditorEx)editor).calcColumnNumber(iterator.getStart(),doc.getLineNumber(iterator.getStart())) == guide.indentLevel) {
        endOffset=iterator.getEnd();
        endOffset=CharArrayUtil.shiftForward(chars,endOffset," \t");
        if (endOffset < chars.length() && chars.charAt(endOffset) == '\n')         endOffset++;
      }
    }
  }
  editor.getSelectionModel().setSelection(startOffset,endOffset);
}
