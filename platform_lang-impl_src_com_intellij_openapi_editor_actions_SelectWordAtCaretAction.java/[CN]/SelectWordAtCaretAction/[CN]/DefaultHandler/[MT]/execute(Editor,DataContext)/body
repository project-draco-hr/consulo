{
  int lineNumber=editor.getCaretModel().getLogicalPosition().line;
  int caretOffset=editor.getCaretModel().getOffset();
  Document document=editor.getDocument();
  if (lineNumber >= document.getLineCount()) {
    return;
  }
  CharSequence text=document.getCharsSequence();
  boolean camel=editor.getSettings().isCamelWords();
  List<TextRange> ranges=new ArrayList<TextRange>();
  int textLength=document.getTextLength();
  if (caretOffset == textLength)   caretOffset--;
  if (caretOffset < 0)   return;
  SelectWordUtil.addWordSelection(camel,text,caretOffset,ranges);
  if (ranges.isEmpty())   return;
  int startWordOffset=Math.max(0,ranges.get(0).getStartOffset());
  int endWordOffset=Math.min(ranges.get(0).getEndOffset(),document.getTextLength());
  if (camel && ranges.size() == 2 && editor.getSelectionModel().getSelectionStart() == startWordOffset && editor.getSelectionModel().getSelectionEnd() == endWordOffset) {
    startWordOffset=Math.max(0,ranges.get(1).getStartOffset());
    endWordOffset=Math.min(ranges.get(1).getEndOffset(),document.getTextLength());
  }
  editor.getSelectionModel().setSelection(startWordOffset,endWordOffset);
}
