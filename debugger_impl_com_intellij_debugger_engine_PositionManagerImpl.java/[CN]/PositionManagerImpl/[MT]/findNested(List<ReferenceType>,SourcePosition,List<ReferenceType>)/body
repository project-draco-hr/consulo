{
  if (outer.size() == 0) {
    return;
  }
  for (  ReferenceType referenceType : outer) {
    if (referenceType.isPrepared()) {
      final List<ReferenceType> nested=myDebugProcess.getVirtualMachineProxy().nestedTypes(referenceType);
      findNested(nested,classPosition,result);
      try {
        final int lineNumber=classPosition.getLine() + 1;
        if (referenceType.locationsOfLine(lineNumber).size() > 0) {
          result.add(referenceType);
        }
      }
 catch (      AbsentInformationException e) {
      }
    }
  }
}
