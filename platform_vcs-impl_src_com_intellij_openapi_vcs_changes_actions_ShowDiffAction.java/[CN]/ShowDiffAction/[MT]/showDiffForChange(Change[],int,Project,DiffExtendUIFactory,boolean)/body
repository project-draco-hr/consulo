{
  Change selectedChange=changes[index];
  final List<Change> changeList=filterDirectoryAndBinaryChanges(changes);
  if (changeList.isEmpty()) {
    return;
  }
  index=0;
  for (int i=0; i < changeList.size(); i++) {
    if (changeList.get(i) == selectedChange) {
      index=i;
      break;
    }
  }
  showDiffImpl(project,ObjectsConvertor.convert(changeList,new Convertor<Change,DiffRequestPresentable>(){
    public ChangeDiffRequestPresentable convert(    Change o){
      return new ChangeDiffRequestPresentable(project,o);
    }
  }
),index,actionsFactory,showFrame);
}
