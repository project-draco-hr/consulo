{
  PsiManager manager=aClass.getManager();
  PsiElement place=scope;
  while (place != null && place != aClass && !(place instanceof PsiFile)) {
    if (place instanceof PsiClass) {
      if (isSuperClassAccepted) {
        if (isInheritorOrSelf((PsiClass)place,aClass,true))         return true;
      }
 else {
        if (manager.areElementsEquivalent(place,aClass))         return true;
      }
      if (isTypeParamsAccepted && place instanceof PsiTypeParameter) {
        return true;
      }
    }
    if (place instanceof PsiModifierListOwner) {
      final PsiModifierList modifierList=((PsiModifierListOwner)place).getModifierList();
      if (modifierList != null && modifierList.hasModifierProperty(PsiModifier.STATIC)) {
        return false;
      }
    }
    place=place.getParent();
  }
  return place == aClass;
}
