{
  int removedSymbolsNumber=0;
  int remainingTotalNumberOfSymbolsToRemove=context.numberOfSymbolsToRemove - context.removedSymbolsNumber;
  int numberOfTokenSymbolsToRemove=Math.min(remainingTotalNumberOfSymbolsToRemove,tokenLength);
  while (numberOfTokenSymbolsToRemove > 0 && context.currentBuffer != null) {
    int diff=numberOfTokenSymbolsToRemove - (context.currentBuffer.length() - context.bufferOffset);
    int endDeleteBufferOffset=Math.min(context.bufferOffset + numberOfTokenSymbolsToRemove,context.currentBuffer.length());
    int numberOfSymbolsRemovedFromCurrentBuffer=endDeleteBufferOffset - context.bufferOffset;
    if (DEBUG_PROCESSING) {
      log("About to delete %d symbols from the current buffer (offset is %d). Removed symbols number: %d. Current buffer: %d: '%s'",numberOfSymbolsRemovedFromCurrentBuffer,context.bufferOffset,context.removedSymbolsNumber,context.currentBuffer.length(),StringUtil.convertLineSeparators(context.currentBuffer.toString()));
    }
    numberOfTokenSymbolsToRemove-=numberOfSymbolsRemovedFromCurrentBuffer;
    removedSymbolsNumber+=numberOfSymbolsRemovedFromCurrentBuffer;
    context.removedSymbolsNumber+=numberOfSymbolsRemovedFromCurrentBuffer;
    myDeferredOutputLength-=numberOfSymbolsRemovedFromCurrentBuffer;
    if (context.bufferOffset == 0 && (diff >= 0 || endDeleteBufferOffset == context.currentBuffer.length())) {
      context.iterator.remove();
      context.nextBuffer();
    }
 else {
      context.currentBuffer.delete(context.bufferOffset,endDeleteBufferOffset);
      if (DEBUG_PROCESSING) {
        log("Removed symbols at range [%d; %d). Buffer offset: %d, buffer length: %d, text: '%s'",context.bufferOffset,endDeleteBufferOffset,context.bufferOffset,context.currentBuffer.length(),context.currentBuffer);
      }
      if (context.bufferOffset == context.currentBuffer.length()) {
        context.nextBuffer();
      }
    }
  }
  return removedSymbolsNumber;
}
