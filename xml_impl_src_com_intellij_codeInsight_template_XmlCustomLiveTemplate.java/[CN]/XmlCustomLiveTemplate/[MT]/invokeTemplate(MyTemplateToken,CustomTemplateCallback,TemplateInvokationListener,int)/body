{
  String attributes=buildAttributesString(token.myAttribute2Value,numberInIteration);
  attributes=attributes.length() > 0 ? ' ' + attributes : null;
  Map<String,String> predefinedValues=null;
  if (attributes != null) {
    predefinedValues=new HashMap<String,String>();
    predefinedValues.put(ATTRS,attributes);
  }
  if (callback.isLiveTemplateApplicable(token.myKey)) {
    if (attributes != null && !callback.templateContainsVars(token.myKey,ATTRS)) {
      TemplateImpl newTemplate=generateTemplateWithAttributes(token.myKey,attributes,callback);
      if (newTemplate != null) {
        return callback.startTemplate(newTemplate,predefinedValues,listener);
      }
    }
    return callback.startTemplate(token.myKey,predefinedValues,listener);
  }
 else {
    TemplateImpl template=new TemplateImpl("","");
    template.addTextSegment('<' + token.myKey);
    if (attributes != null) {
      template.addVariable(ATTRS,"","",false);
      template.addVariableSegment(ATTRS);
    }
    template.addTextSegment(">");
    template.addVariableSegment(TemplateImpl.END);
    template.addTextSegment("</" + token.myKey + ">");
    template.setToReformat(true);
    return callback.startTemplate(template,predefinedValues,listener);
  }
}
