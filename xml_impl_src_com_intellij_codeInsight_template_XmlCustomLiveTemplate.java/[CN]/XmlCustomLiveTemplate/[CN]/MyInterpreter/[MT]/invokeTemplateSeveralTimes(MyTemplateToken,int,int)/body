{
  final Object key=new Object();
  myCallback.fixStartOfTemplate(key);
  for (int i=0; i < count; i++) {
    final int finalI=i;
    TemplateInvokationListener listener=new TemplateInvokationListener(){
      public void finished(      boolean inSeparateEvent){
        myState=MyState.WORD;
        fixEndOffset();
        myCallback.gotoEndOfTemplate(key);
        if (inSeparateEvent) {
          int newCount=count - finalI - 1;
          if (newCount > 0) {
            invokeTemplateSeveralTimes(templateToken,newCount,index);
          }
 else {
            invoke(index + 1);
          }
        }
      }
    }
;
    if (!invokeTemplate(templateToken,myCallback,listener)) {
      return false;
    }
  }
  return true;
}
