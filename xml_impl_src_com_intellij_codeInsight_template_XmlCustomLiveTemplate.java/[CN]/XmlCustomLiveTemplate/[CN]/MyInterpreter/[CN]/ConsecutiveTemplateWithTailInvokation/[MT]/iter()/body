{
  final int offsetBefore=getOffset();
  final int lengthBefore=getTextLength();
  for (; myIndex < myMaxIndex; myIndex++) {
    final boolean[] flag=new boolean[]{false};
    TemplateInvokationListener listener=new TemplateInvokationListener(){
      public void finished(      boolean inSeparateEvent,      boolean success){
        MyInterpreter interpreter=new MyInterpreter(myTokens,myTailStart,myCallback,MyState.WORD,new TemplateInvokationListener(){
          public void finished(          boolean inSeparateEvent,          boolean success){
            fixEndOffset();
            moveCaret(offsetBefore + getTextLength() - lengthBefore);
            if (inSeparateEvent) {
              next();
            }
          }
        }
);
        interpreter.iter();
        if (inSeparateEvent && interpreter.isFinished()) {
          next();
        }
        if (!interpreter.isFinished()) {
          flag[0]=true;
        }
      }
    }
;
    if (!invokeTemplate(myTemplateKey,myCallback,listener) || flag[0]) {
      return;
    }
  }
}
