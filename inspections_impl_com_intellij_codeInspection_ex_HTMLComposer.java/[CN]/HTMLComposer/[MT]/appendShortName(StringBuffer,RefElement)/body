{
  refElement.accept(new RefVisitor(){
    public void visitClass(    RefClass refClass){
      if (refClass.isStatic()) {
        buf.append(InspectionsBundle.message("inspection.export.results.static"));
        buf.append(NBSP);
      }
      appendClassOrInterface(buf,refClass,false);
      buf.append(NBSP).append(B_OPENING).append(CODE_OPENING);
      buf.append(refClass.getName());
      buf.append(CODE_CLOSING).append(B_CLOSING);
    }
    public void visitField(    RefField field){
      PsiField psiField=(PsiField)field.getElement();
      if (field.isStatic()) {
        buf.append(InspectionsBundle.message("inspection.export.results.static"));
        buf.append(NBSP);
      }
      buf.append(InspectionsBundle.message("inspection.export.results.field"));
      buf.append(NBSP).append(CODE_OPENING);
      buf.append(psiField.getType().getPresentableText());
      buf.append(NBSP).append(B_OPENING);
      buf.append(psiField.getName());
      buf.append(B_CLOSING).append(CODE_CLOSING);
    }
    public void visitMethod(    RefMethod method){
      PsiMethod psiMethod=(PsiMethod)method.getElement();
      PsiType returnType=psiMethod.getReturnType();
      if (method.isStatic()) {
        buf.append(InspectionsBundle.message("inspection.export.results.static"));
        buf.append(NBSP);
      }
 else       if (method.isAbstract()) {
        buf.append(InspectionsBundle.message("inspection.export.results.abstract"));
        buf.append(NBSP);
      }
      buf.append(method.isConstructor() ? InspectionsBundle.message("inspection.export.results.constructor") : InspectionsBundle.message("inspection.export.results.method"));
      buf.append(NBSP).append(CODE_OPENING);
      if (returnType != null) {
        buf.append(returnType.getPresentableText());
        buf.append(NBSP);
      }
      buf.append(B_OPENING);
      buf.append(psiMethod.getName());
      buf.append(B_CLOSING);
      appendMethodParameters(buf,psiMethod,true);
      buf.append(CODE_CLOSING);
    }
    public void visitFile(    RefFile file){
      final PsiFile psiFile=file.getElement();
      buf.append(B_OPENING);
      buf.append(psiFile.getName());
      buf.append(B_CLOSING);
    }
  }
);
}
