{
  PsiBuilder.Marker annArgs=builder.mark();
  if (!ParserUtils.getToken(builder,mLPAREN)) {
    annArgs.done(ANNOTATION_ARGUMENTS);
    return;
  }
  if (ParserUtils.lookAhead(builder,mIDENT,mASSIGN)) {
    parsePairs(builder,parser);
  }
 else {
    PsiBuilder.Marker pairMarker=builder.mark();
    if (parseAnnotationMemberValueInitializer(builder,parser)) {
      pairMarker.done(ANNOTATION_MEMBER_VALUE_PAIR);
    }
 else {
      pairMarker.drop();
    }
  }
  ParserUtils.getToken(builder,mNLS);
  ParserUtils.getToken(builder,mRPAREN,GroovyBundle.message("rparen.expected"));
  annArgs.done(ANNOTATION_ARGUMENTS);
}
