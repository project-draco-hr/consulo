{
  super(project,true);
  myProject=project;
  myAnonClass=anonClass;
  myNeedsThis=needsThis;
  setTitle(REFACTORING_NAME);
  for (int idx=0; idx < variableInfos.length; idx++) {
    VariableInfo info=variableInfos[idx];
    myVariableToInfoMap.put(info.variable,info);
  }
  myVariableData=new ParameterTablePanel.VariableData[variableInfos.length];
  final CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(myProject);
  for (int idx=0; idx < variableInfos.length; idx++) {
    VariableInfo info=variableInfos[idx];
    String name=info.variable.getName();
    VariableKind kind=codeStyleManager.getVariableKind(info.variable);
    name=codeStyleManager.variableNameToPropertyName(name,kind);
    name=codeStyleManager.propertyNameToVariableName(name,VariableKind.PARAMETER);
    ParameterTablePanel.VariableData data=new ParameterTablePanel.VariableData(info.variable);
    data.name=name;
    data.passAsParameter=true;
    myVariableData[idx]=data;
  }
  init();
  String name=myAnonClass.getBaseClassReference().getReferenceName();
  name="My" + name;
  myNameField.setText(name);
  myNameField.selectAll();
}
