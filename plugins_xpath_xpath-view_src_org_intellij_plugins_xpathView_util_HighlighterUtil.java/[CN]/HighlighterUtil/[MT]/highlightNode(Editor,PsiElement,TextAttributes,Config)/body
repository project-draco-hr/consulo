{
  TextRange range;
  final PsiElement realElement;
  if ((node instanceof XmlTag) && cfg.isHighlightStartTagOnly()) {
    XmlTag tag=(XmlTag)node;
    realElement=MyPsiUtil.getNameElement(tag);
    range=realElement.getTextRange();
  }
 else {
    range=node.getTextRange();
    realElement=node;
  }
  final ArrayList<RangeHighlighter> highlighters=new ArrayList<RangeHighlighter>(1);
  final HighlightManager mgr=HighlightManager.getInstance(editor.getProject());
  mgr.addRangeHighlight(editor,range.getStartOffset(),range.getEndOffset(),attrs,false,highlighters);
  final RangeHighlighter rangeHighlighter=highlighters.get(0);
  if (cfg.isAddErrorStripe()) {
    rangeHighlighter.setErrorStripeMarkColor(attrs.getBackgroundColor());
    rangeHighlighter.setErrorStripeTooltip(formatTooltip(editor,realElement));
  }
 else {
    rangeHighlighter.setErrorStripeMarkColor(null);
  }
  return rangeHighlighter;
}
