{
  if (expression == null || m_ignoreExpressionsContainingConstants && containsReference(expression)) {
    return null;
  }
  if (expression instanceof PsiParenthesizedExpression) {
    final PsiParenthesizedExpression parenthesizedExpression=(PsiParenthesizedExpression)expression;
    return evaluate(parenthesizedExpression.getExpression());
  }
 else   if (expression instanceof PsiPolyadicExpression) {
    final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)expression;
    final IElementType tokenType=polyadicExpression.getOperationTokenType();
    if (tokenType.equals(JavaTokenType.OROR)) {
      final PsiExpression[] operands=polyadicExpression.getOperands();
      for (      PsiExpression operand : operands) {
        if (evaluate(operand) == Boolean.TRUE) {
          return Boolean.TRUE;
        }
      }
    }
 else     if (tokenType.equals(JavaTokenType.ANDAND)) {
      final PsiExpression[] operands=polyadicExpression.getOperands();
      for (      PsiExpression operand : operands) {
        if (evaluate(operand) == Boolean.FALSE) {
          return Boolean.FALSE;
        }
      }
    }
  }
 else   if (expression instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)expression;
    final IElementType tokenType=prefixExpression.getOperationTokenType();
    if (JavaTokenType.EXCL.equals(tokenType)) {
      final PsiExpression operand=prefixExpression.getOperand();
      final Boolean b=evaluate(operand);
      if (b == Boolean.FALSE) {
        return Boolean.TRUE;
      }
 else       if (b == Boolean.TRUE) {
        return Boolean.FALSE;
      }
    }
  }
  final Boolean value=(Boolean)ConstantExpressionUtil.computeCastTo(expression,PsiType.BOOLEAN);
  return value != null ? value.booleanValue() : null;
}
