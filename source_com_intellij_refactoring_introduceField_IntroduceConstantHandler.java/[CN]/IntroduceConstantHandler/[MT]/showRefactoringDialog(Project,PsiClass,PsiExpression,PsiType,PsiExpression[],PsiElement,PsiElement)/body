{
  PsiLocalVariable localVariable=null;
  if (expr instanceof PsiReferenceExpression) {
    PsiElement ref=((PsiReferenceExpression)expr).resolve();
    if (ref instanceof PsiLocalVariable) {
      localVariable=(PsiLocalVariable)ref;
    }
  }
  if (localVariable == null) {
    if (!isStaticFinalInitializer(expr)) {
      String message="Cannot perform the refactoring.\n" + "Selected expression cannot be a constant initializer.";
      RefactoringMessageUtil.showErrorMessage(REFACTORING_NAME,message,getHelpID(),project);
      return null;
    }
  }
 else {
    final PsiExpression initializer=localVariable.getInitializer();
    if (initializer == null) {
      String message="Cannot perform the refactoring.\n" + "Variable " + localVariable.getName() + " does not have an initializer.";
      RefactoringMessageUtil.showErrorMessage(REFACTORING_NAME,message,getHelpID(),project);
      return null;
    }
    if (!isStaticFinalInitializer(initializer)) {
      String message="Cannot perform the refactoring.\n" + "Initializer for variable " + localVariable.getName() + " cannot be a constant initializer.";
      RefactoringMessageUtil.showErrorMessage(REFACTORING_NAME,message,getHelpID(),project);
      return null;
    }
  }
  int occurencesNumber=occurences.length;
  IntroduceConstantDialog dialog=new IntroduceConstantDialog(project,parentClass,expr,localVariable,false,occurencesNumber,getParentClass(),new TypeSelectorManagerImpl(project,type,expr,occurences));
  dialog.show();
  if (!dialog.isOK()) {
    if (occurencesNumber > 1) {
      WindowManager.getInstance().getStatusBar(project).setInfo("Press Escape to remove the highlighting");
    }
    return null;
  }
  return new Settings(dialog.getEnteredName(),dialog.isReplaceAllOccurrences(),true,true,BaseExpressionToFieldHandler.IN_FIELD_DECLARATION,dialog.getFieldVisibility(),localVariable,dialog.getSelectedType(),dialog.isDeleteVariable(),dialog.getDestinationClass());
}
