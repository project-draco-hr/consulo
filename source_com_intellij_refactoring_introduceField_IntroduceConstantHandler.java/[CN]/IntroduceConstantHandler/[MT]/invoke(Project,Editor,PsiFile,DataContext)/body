{
  if (!file.isWritable()) {
    RefactoringMessageUtil.showReadOnlyElementRefactoringMessage(project,file);
    return;
  }
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  final ElementToWorkOn elementToWorkOn=ElementToWorkOn.getElementToWorkOn(editor,file,REFACTORING_NAME,getHelpID(),project);
  if (elementToWorkOn == null)   return;
  if (elementToWorkOn.getExpression() == null) {
    final PsiLocalVariable localVariable=elementToWorkOn.getLocalVariable();
    final boolean result=invokeImpl(project,localVariable,editor);
    if (result) {
      editor.getSelectionModel().removeSelection();
    }
  }
 else   if (invokeImpl(project,elementToWorkOn.getExpression(),editor)) {
    editor.getSelectionModel().removeSelection();
  }
}
