{
  myIgnoredPatterns=ignoredPatterns;
  MessageBusConnection connect=ApplicationManager.getApplication().getMessageBus().connect();
  connect.subscribe(VirtualFileManager.VFS_CHANGES,new BulkFileListener(){
    @Override public void before(    @NotNull List<? extends VFileEvent> events){
      if (!myEnableCache) {
        LOG.error("VFS before event received without a matching after: " + events);
      }
      myEnableCache=false;
      clearCacheForChangedFiles(events);
    }
    @Override public void after(    @NotNull List<? extends VFileEvent> events){
      clearCacheForChangedFiles(events);
      myEnableCache=true;
    }
    private void clearCacheForChangedFiles(    List<? extends VFileEvent> events){
      final IntArrayList ids=collectChangedIds(events);
synchronized (myCheckedIds) {
        for (        int i : ids.toArray()) {
          myCheckedIds.clear(i);
        }
      }
    }
    private IntArrayList collectChangedIds(    List<? extends VFileEvent> events){
      final IntArrayList ids=new IntArrayList();
      for (      final VFileEvent event : events) {
        VirtualFile file=event.getFile();
        if (!(file instanceof NewVirtualFile)) {
          continue;
        }
        if (event instanceof VFilePropertyChangeEvent) {
          int id=((NewVirtualFile)file).getId();
          if (id >= 0) {
            ids.add(id);
          }
        }
      }
      return ids;
    }
  }
);
}
