{
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  Module module=fileIndex.getModuleForFile(virtualFile);
  if (module == null) {
    final VirtualFileSystem fs=virtualFile.getFileSystem();
    if (fs instanceof JarFileSystem) {
      final VirtualFile jar=((JarFileSystem)fs).getVirtualFileForJar(virtualFile);
      if (jar != null) {
        module=fileIndex.getModuleForFile(jar);
      }
    }
  }
  if (module != null) {
    String[] javadocPaths=ModuleRootManager.getInstance(module).getRootUrls(JavadocOrderRootType.getInstance());
    final List<String> httpRoots=getHttpRoots(javadocPaths,relPath);
    if (httpRoots != null || !fileIndex.isInLibraryClasses(virtualFile)) {
      return httpRoots;
    }
  }
  final List<OrderEntry> orderEntries=fileIndex.getOrderEntriesForFile(virtualFile);
  for (  OrderEntry orderEntry : orderEntries) {
    final String[] files=orderEntry.getUrls(JavadocOrderRootType.getInstance());
    final List<String> httpRoot=getHttpRoots(files,relPath);
    if (httpRoot != null)     return httpRoot;
  }
  return null;
}
