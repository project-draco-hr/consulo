{
  if (bindTo == null || bindTo.getFirstChildNode() != null && bindTo.getFirstChildNode().getElementType() == JavaTokenType.DOC_COMMENT)   return;
  if (bindTo.getElementType() == IMPORT_LIST && bindTo.getTextLength() == 0) {
    bindTo=bindTo.getTreeNext();
  }
  ASTNode toStart=isBindingComment(comment) ? comment : null;
  if (bindTo != null && BIND_PRECEDING_COMMENT_BIT_SET.contains(bindTo.getElementType())) {
    for (ASTNode child=comment; child != bindTo; child=child.getTreeNext()) {
      if (child.getElementType() == WHITE_SPACE) {
        int count=StringUtil.getLineBreakCount(child.getText());
        if (count > 1)         toStart=null;
      }
 else {
        if (child.getTreePrev() != null && child.getTreePrev().getElementType() == WHITE_SPACE) {
          LeafElement prev=(LeafElement)child.getTreePrev();
          char lastC=prev.charAt(prev.getTextLength() - 1);
          if (lastC == '\n' || lastC == '\r')           toStart=isBindingComment(child) ? child : null;
        }
 else {
          return;
        }
      }
    }
    if (toStart == null)     return;
    TreeElement first=(TreeElement)bindTo.getFirstChildNode();
    TreeElement child=(TreeElement)toStart;
    while (child != bindTo) {
      TreeElement next=child.getTreeNext();
      if (child.getElementType() != IMPORT_LIST) {
        TreeUtil.remove(child);
        TreeUtil.insertBefore(first,child);
      }
      child=next;
    }
  }
}
