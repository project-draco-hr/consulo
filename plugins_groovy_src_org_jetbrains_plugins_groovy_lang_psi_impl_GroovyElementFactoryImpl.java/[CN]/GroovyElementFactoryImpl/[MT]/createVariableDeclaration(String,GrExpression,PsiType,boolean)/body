{
  StringBuffer text=new StringBuffer();
  text.append("def ");
  if (isFinal) {
    text.append("final ");
  }
  if (type != null) {
    if (!PsiTypesUtil.unboxIfPossible(type.getCanonicalText()).contains(".")) {
      text.append(PsiTypesUtil.unboxIfPossible(type.getCanonicalText())).append(" ");
    }
 else {
      text.append(type.getPresentableText()).append(" ");
    }
  }
  text.append(identifier);
  GrExpression expr;
  if (initializer instanceof GrApplicationExpression) {
    expr=createMethodCallByAppCall(((GrApplicationExpression)initializer));
  }
 else {
    expr=initializer;
  }
  text.append("=").append(expr.getText());
  PsiFile file=createGroovyFile(text.toString());
  return ((GrVariableDeclaration)((GroovyFile)file).getTopStatements()[0]);
}
