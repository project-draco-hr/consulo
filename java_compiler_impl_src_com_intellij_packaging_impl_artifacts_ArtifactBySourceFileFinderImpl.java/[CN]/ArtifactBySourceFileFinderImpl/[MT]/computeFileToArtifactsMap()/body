{
  final MultiValuesMap<VirtualFile,Artifact> result=new MultiValuesMap<VirtualFile,Artifact>();
  final ArtifactManager artifactManager=ArtifactManager.getInstance(myProject);
  for (  final Artifact artifact : artifactManager.getArtifacts()) {
    final PackagingElementResolvingContext context=artifactManager.getResolvingContext();
    ArtifactUtil.processPackagingElements(artifact,null,new PackagingElementProcessor<PackagingElement<?>>(){
      @Override public boolean process(      @NotNull PackagingElement<?> element,      @NotNull PackagingElementPath path){
        if (element instanceof FileOrDirectoryCopyPackagingElement<?>) {
          final VirtualFile root=((FileOrDirectoryCopyPackagingElement)element).findFile();
          if (root != null) {
            result.put(root,artifact);
          }
        }
 else         if (element instanceof ModuleOutputPackagingElement) {
          final Module module=((ModuleOutputPackagingElement)element).findModule(context);
          if (module != null) {
            final ModuleRootModel rootModel=context.getModulesProvider().getRootModel(module);
            for (            ContentEntry contentEntry : rootModel.getContentEntries()) {
              for (              SourceFolder sourceFolder : contentEntry.getSourceFolders()) {
                final VirtualFile sourceRoot=sourceFolder.getFile();
                if (sourceRoot != null && !sourceFolder.isTestSource()) {
                  result.put(sourceRoot,artifact);
                }
              }
            }
          }
        }
        return true;
      }
    }
,context,true);
  }
  return result;
}
