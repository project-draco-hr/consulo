{
  myFacetConfiguration=facetConfiguration;
  myContext=context;
  mySdkEditor=new AppEngineSdkEditor(myContext.getProject(),false);
  validatorsManager.registerValidator(new FacetEditorValidator(){
    @Override public ValidationResult check(){
      return AppEngineSdkImpl.checkPath(mySdkEditor.getPath());
    }
  }
,mySdkEditor.getComboBox());
  myRunEnhancerOnMakeCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      GuiUtils.enableChildren(myRunEnhancerOnMakeCheckBox.isSelected(),myFilesToEnhancePanel);
      if (myRunEnhancerOnMakeCheckBox.isSelected() && myFilesListModel.isEmpty()) {
        fillFilesList(AppEngineUtil.getDefaultSourceRootsToEnhance(myContext.getRootModel()));
      }
    }
  }
);
  myFilesListModel=new DefaultListModel();
  myFilesList.setCellRenderer(new FilesListCellRenderer());
  myFilesList.setModel(myFilesListModel);
  myFilesList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateButtons();
    }
  }
);
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      doAdd();
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      ListUtil.removeSelectedItems(myFilesList);
      updateButtons();
    }
  }
);
  PersistenceApiComboboxUtil.setComboboxModel(myPersistenceApiComboBox,false);
  updateButtons();
}
