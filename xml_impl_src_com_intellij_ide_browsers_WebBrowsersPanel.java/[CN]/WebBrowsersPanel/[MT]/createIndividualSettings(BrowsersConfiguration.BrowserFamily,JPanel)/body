{
  final JPanel result=new JPanel();
  result.setBorder(IdeBorderFactory.createTitledBorder(family.getName(),true,true,true));
  result.setLayout(new BoxLayout(result,BoxLayout.Y_AXIS));
  final TextFieldWithBrowseButton field=new TextFieldWithBrowseButton();
  FileChooserDescriptor descriptor=SystemInfo.isMac ? FileChooserDescriptorFactory.createSingleFolderDescriptor() : FileChooserDescriptorFactory.createSingleFileNoJarsDescriptor();
  field.addBrowseFolderListener(IdeBundle.message("title.select.path.to.browser"),null,null,descriptor);
  result.add(field);
  final JPanel bottomPanel=new JPanel(new BorderLayout());
  final JPanel activePanel=new JPanel();
  activePanel.setLayout(new BoxLayout(activePanel,BoxLayout.X_AXIS));
  final JCheckBox checkBox=new JCheckBox();
  activePanel.add(checkBox);
  final JLabel label=new JLabel(XmlBundle.message("browser.active"));
  label.setLabelFor(checkBox);
  activePanel.add(label);
  bottomPanel.add(activePanel,BorderLayout.WEST);
  final JButton resetButton=new JButton(XmlBundle.message("browser.default.settings"));
  resetButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      field.getTextField().setText(family.getExecutionPath());
    }
  }
);
  JPanel buttonsPanel=new JPanel(new BorderLayout());
  if (family.createBrowserSpecificSettings() != null) {
    final JButton editSettingsButton=new JButton(XmlBundle.message("button.text.settings"));
    editSettingsButton.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        editSettings(family);
      }
    }
);
    buttonsPanel.add(editSettingsButton,BorderLayout.CENTER);
  }
  buttonsPanel.add(resetButton,BorderLayout.EAST);
  bottomPanel.add(buttonsPanel,BorderLayout.EAST);
  result.add(bottomPanel);
  container.add(result);
  final WebBrowserSettings settings=myConfiguration.getBrowserSettings(family);
  field.getTextField().setText(settings.getPath());
  checkBox.setSelected(settings.isActive());
  myBrowserSettingsMap.put(family,Pair.create(checkBox,field));
}
