{
  final LexerPosition startPos=lexer.getCurrentPosition();
  CompositeElement packageStatement=ASTFactory.composite(PACKAGE_STATEMENT);
  if (lexer.getTokenType() != PACKAGE_KEYWORD) {
    FilterLexer filterLexer=new FilterLexer(lexer,new FilterLexer.SetFilter(StdTokenSets.WHITE_SPACE_OR_COMMENT_BIT_SET));
    TreeUtil.addChildren(packageStatement,myContext.getDeclarationParsing().parseAnnotationList(filterLexer));
    if (lexer.getTokenType() != PACKAGE_KEYWORD) {
      lexer.restore(startPos);
      return null;
    }
  }
  TreeUtil.addChildren(packageStatement,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  TreeElement packageReference=parseJavaCodeReference(lexer,true,false);
  if (packageReference == null) {
    lexer.restore(startPos);
    return null;
  }
  TreeUtil.addChildren(packageStatement,packageReference);
  if (lexer.getTokenType() == SEMICOLON) {
    TreeUtil.addChildren(packageStatement,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
    lexer.advance();
  }
 else {
    TreeUtil.addChildren(packageStatement,Factory.createErrorElement(JavaErrorMessages.message("expected.semicolon")));
  }
  return packageStatement;
}
