{
  if (myRecentSearchText != null && myRecentSearchText.equals(pattern)) {
    myRecentSearchMatcher.reset(text);
    return myRecentSearchMatcher.find();
  }
 else {
    myRecentSearchText=pattern;
    @NonNls final StringBuilder buf=StringBuilderSpinAllocator.alloc();
    try {
      translatePattern(buf,pattern);
      try {
        boolean allLowercase=pattern.equals(pattern.toLowerCase());
        final Pattern recentSearchPattern=Pattern.compile(buf.toString(),allLowercase ? Pattern.CASE_INSENSITIVE : 0);
        return (myRecentSearchMatcher=recentSearchPattern.matcher(text)).find();
      }
 catch (      PatternSyntaxException ex) {
        myRecentSearchText=null;
      }
    }
  finally {
      StringBuilderSpinAllocator.dispose(buf);
    }
    return false;
  }
}
