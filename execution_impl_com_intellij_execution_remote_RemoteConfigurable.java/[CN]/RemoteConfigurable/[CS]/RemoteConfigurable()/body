{
  final ButtonGroup transportGroup=new ButtonGroup();
  transportGroup.add(myRbSocket);
  transportGroup.add(myRbShmem);
  final ButtonGroup connectionGroup=new ButtonGroup();
  connectionGroup.add(myRbListen);
  connectionGroup.add(myRbAttach);
  final DocumentListener helpTextUpdater=new DocumentAdapter(){
    public void textChanged(    DocumentEvent event){
      updateHelpText();
    }
  }
;
  myAddressField.getDocument().addDocumentListener(helpTextUpdater);
  myHostField.getDocument().addDocumentListener(helpTextUpdater);
  myPortField.getDocument().addDocumentListener(helpTextUpdater);
  myRbSocket.setSelected(true);
  final ActionListener listener=new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final Object source=e.getSource();
      if (source.equals(myRbSocket)) {
        myShmemPanel.setVisible(false);
        mySocketPanel.setVisible(true);
      }
 else       if (source.equals(myRbShmem)) {
        myShmemPanel.setVisible(true);
        mySocketPanel.setVisible(false);
      }
      myPanel.repaint();
      updateHelpText();
    }
  }
;
  myRbShmem.addActionListener(listener);
  myRbSocket.addActionListener(listener);
  final ItemListener updateListener=new ItemListener(){
    public void itemStateChanged(    final ItemEvent e){
      final boolean isAttach=myRbAttach.isSelected();
      if (!isAttach && myHostField.isEditable()) {
        myHostName=myHostField.getText();
      }
      myHostField.setEditable(isAttach);
      myHostField.setEnabled(isAttach);
      myHostField.setText(isAttach ? myHostName : LOCALHOST);
      updateHelpText();
    }
  }
;
  myRbAttach.addItemListener(updateListener);
  myRbListen.addItemListener(updateListener);
  final FocusListener fieldFocusListener=new FocusAdapter(){
    public void focusLost(    final FocusEvent e){
      updateHelpText();
    }
  }
;
  myAddressField.addFocusListener(fieldFocusListener);
  myPortField.addFocusListener(fieldFocusListener);
  myLogConfigurations=new LogConfigurationPanel();
  Disposer.register(this,myLogConfigurations);
  myLogsPanel.setLayout(new BorderLayout());
  myLogsPanel.add(myLogConfigurations.getLoggerComponent(),BorderLayout.CENTER);
}
