{
  InspectionProfileManager.getInstance().deleteProfile(PROFILE);
  try {
    assertNotNull("Application components damaged",ProjectManager.getInstance());
    ApplicationManager.getApplication().runWriteAction(EmptyRunnable.getInstance());
    FileDocumentManager.getInstance().saveAllDocuments();
    doPostponedFormatting(myProject);
    try {
      Disposer.dispose(myProject);
      for (      final File fileToDelete : myFilesToDelete) {
        delete(fileToDelete);
      }
      FileUtil.asyncDelete(new File(ourOriginalTempDir + "/tsttmp" + ourTestCount));
      ourTestCount++;
      setTmpDir(ourOriginalTempDir);
      Throwable fromThreadGroup=MY_THREAD_GROUP.popThrowable();
      if (fromThreadGroup != null) {
        throw new RuntimeException(fromThreadGroup);
      }
      if (!myAssertionsInTestDetected) {
        if (IdeaLogger.ourErrorsOccurred != null) {
          throw IdeaLogger.ourErrorsOccurred;
        }
        assertTrue("Logger errors occurred in " + getFullName(),IdeaLogger.ourErrorsOccurred == null);
      }
      ourApplication.setDataProvider(null);
    }
  finally {
      ourTestCase=null;
    }
    super.tearDown();
    EditorFactory editorFactory=EditorFactory.getInstance();
    final Editor[] allEditors=editorFactory.getAllEditors();
    ((EditorFactoryImpl)editorFactory).validateEditorsAreReleased(getProject());
    for (    Editor editor : allEditors) {
      editorFactory.releaseEditor(editor);
    }
    assertEquals(0,allEditors.length);
  }
  finally {
    myProjectManager=null;
    myProject=null;
    myModule=null;
    myFilesToDelete=null;
  }
}
