{
  final ItemListener stateListener=new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      myModuleSelection.setEnabled(myModuleScope.isSelected());
      myDirectory.setEnabled(myDirectoryScope.isSelected());
      myRecursive.setEnabled(myDirectoryScope.isSelected());
      myCustomScopeSelection.setEnabled(myCustomScope.isSelected());
      if (e.getStateChange() == ItemEvent.SELECTED) {
        firePropertyChange("scope",null,getSelectedScope());
      }
    }
  }
;
  final ItemListener scopeListener=new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        firePropertyChange("scope",null,getSelectedScope());
      }
    }
  }
;
  myWholeProjectScope.addItemListener(stateListener);
  myWholeProjectScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.PROJECT);
  myModuleScope.addItemListener(stateListener);
  myModuleScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.MODULE);
  myDirectoryScope.addItemListener(stateListener);
  myDirectoryScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.DIRECTORY);
  myCustomScope.addItemListener(stateListener);
  myCustomScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.CUSTOM);
  myModuleSelection.setModel(createModel(ModuleManager.getInstance(myProject).getModules()));
  myModuleSelection.setRenderer(new ListCellRendererWrapper<Module>(){
    @Override public void customize(    JList list,    Module m,    int index,    boolean selected,    boolean hasFocus){
      if (m != null) {
        setIcon(ModuleType.get(m).getNodeIcon(true));
        setText(m.getName());
      }
    }
  }
);
  Module m;
  if (scope.getModuleName() != null) {
    if ((m=ModuleManager.getInstance(myProject).findModuleByName(scope.getModuleName())) == null) {
      m=currentModule;
    }
  }
 else {
    m=currentModule;
  }
  if (m != null) {
    myModuleSelection.setSelectedItem(m);
  }
  myModuleSelection.addItemListener(scopeListener);
  ((ScopeChooserCombo)myCustomScopeSelection).init(myProject,true,true,scope.getScopeName());
  myCustomScopeSelection.getComboBox().addItemListener(scopeListener);
  myDirectory.getTextField().getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    DocumentEvent e){
      firePropertyChange("scope",null,getSelectedScope());
    }
  }
);
  myDirectory.setText(scope.getPath());
  myDirectory.addBrowseFolderListener("Select Path","Select Path",myProject,FileChooserDescriptorFactory.createSingleFolderDescriptor());
  myRecursive.setSelected(scope.isRecursive());
}
