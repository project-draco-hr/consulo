{
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
          final ModifiableRootModel moduleRootModel=moduleRootManager.getModifiableModel();
          final GradleProjectEntityImportListener publisher=module.getProject().getMessageBus().syncPublisher(GradleProjectEntityImportListener.TOPIC);
          try {
            for (            LibraryDependencyInfo info : infos) {
              publisher.onImportStart(info.library);
              LibraryOrderEntry orderEntry=moduleRootModel.addLibraryEntry(info.library);
              orderEntry.setExported(info.exported);
              orderEntry.setScope(info.scope);
            }
          }
  finally {
            moduleRootModel.commit();
            for (            LibraryDependencyInfo info : infos) {
              publisher.onImportEnd(info.library);
            }
          }
        }
      }
);
    }
  }
);
}
