{
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  if (indicator != null && !indicator.isCanceled()) {
    indicator.setText("Collecting project images...");
    indicator.setIndeterminate(false);
    final List<VirtualFile> images=new ArrayList<VirtualFile>();
    for (    String ext : IMAGE_EXTENSIONS) {
      images.addAll(FilenameIndex.getAllFilesByExt(project,ext));
    }
    final Map<Long,Set<VirtualFile>> duplicates=new HashMap<Long,Set<VirtualFile>>();
    final Map<Long,VirtualFile> all=new HashMap<Long,VirtualFile>();
    for (int i=0; i < images.size(); i++) {
      indicator.setFraction((double)(i + 1) / (double)images.size());
      final VirtualFile file=images.get(i);
      if (!(file.getFileSystem() instanceof LocalFileSystem))       continue;
      final long length=file.getLength();
      if (all.containsKey(length)) {
        if (!duplicates.containsKey(length)) {
          final HashSet<VirtualFile> files=new HashSet<VirtualFile>();
          files.add(all.get(length));
          duplicates.put(length,files);
        }
        duplicates.get(length).add(file);
      }
 else {
        all.put(length,file);
      }
      indicator.checkCanceled();
    }
    showResults(project,images,duplicates,all);
  }
}
