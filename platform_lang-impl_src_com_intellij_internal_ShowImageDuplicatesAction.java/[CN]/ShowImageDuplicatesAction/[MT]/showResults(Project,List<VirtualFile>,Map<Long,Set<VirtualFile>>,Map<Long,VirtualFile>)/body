{
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  if (indicator == null || indicator.isCanceled())   return;
  indicator.setText("MD5 check");
  int count=0;
  for (  Set set : duplicates.values())   count+=set.size();
  final Map<String,Set<VirtualFile>> realDuplicates=new HashMap<String,Set<VirtualFile>>();
  int seek=0;
  for (  Set<VirtualFile> files : duplicates.values()) {
    for (    VirtualFile file : files) {
      seek++;
      indicator.setFraction((double)seek / (double)count);
      try {
        final String md5=getMD5Checksum(file.getInputStream());
        if (realDuplicates.containsKey(md5)) {
          realDuplicates.get(md5).add(file);
        }
 else {
          final HashSet<VirtualFile> set=new HashSet<VirtualFile>();
          set.add(file);
          realDuplicates.put(md5,set);
        }
      }
 catch (      Exception ignored) {
      }
    }
  }
  count=0;
  for (  String key : new ArrayList<String>(realDuplicates.keySet())) {
    final int size=realDuplicates.get(key).size();
    if (size == 1) {
      realDuplicates.remove(key);
    }
 else {
      count+=size;
    }
  }
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      new ImageDuplicateResultsDialog(project,images,realDuplicates).show();
    }
  }
);
}
