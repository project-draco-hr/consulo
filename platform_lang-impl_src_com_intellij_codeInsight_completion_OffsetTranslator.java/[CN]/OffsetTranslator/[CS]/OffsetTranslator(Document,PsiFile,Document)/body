{
  myCopyDocument=copyDocument;
  myCopyDocument.putUserData(CompletionUtil.RANGE_TRANSLATION,this);
  final LinkedList<DocumentEvent> sinceCommit=new LinkedList<DocumentEvent>();
  originalDocument.addDocumentListener(new DocumentAdapter(){
    @Override public void documentChanged(    DocumentEvent e){
      if (isUpToDate()) {
        DocumentEventImpl inverse=new DocumentEventImpl(originalDocument,e.getOffset(),e.getNewFragment(),e.getOldFragment(),0,false);
        sinceCommit.addLast(inverse);
      }
    }
  }
,this);
  myCopyDocument.addDocumentListener(new DocumentAdapter(){
    @Override public void documentChanged(    DocumentEvent e){
      if (isUpToDate()) {
        myTranslation.addFirst(e);
      }
    }
  }
);
  originalFile.getProject().getMessageBus().connect(this).subscribe(PsiModificationTracker.TOPIC,new PsiModificationTracker.Listener(){
    long lastModCount=originalFile.getViewProvider().getModificationStamp();
    @Override public void modificationCountChanged(){
      if (isUpToDate() && lastModCount != originalFile.getViewProvider().getModificationStamp()) {
        myTranslation.addAll(sinceCommit);
        sinceCommit.clear();
      }
    }
  }
);
}
