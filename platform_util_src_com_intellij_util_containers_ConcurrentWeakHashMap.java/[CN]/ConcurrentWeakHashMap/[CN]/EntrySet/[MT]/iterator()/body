{
  return new Iterator<Map.Entry<K,V>>(){
    Iterator<Map.Entry<Key<K>,V>> hashIterator=hashEntrySet.iterator();
    Entry<K,V> next=null;
    public boolean hasNext(){
      while (hashIterator.hasNext()) {
        Map.Entry<Key<K>,V> ent=hashIterator.next();
        WeakKey<K> wk=(WeakKey<K>)ent.getKey();
        K k=null;
        if (wk != null && (k=wk.get()) == null) {
          continue;
        }
        next=new Entry<K,V>(ent,k);
        return true;
      }
      return false;
    }
    public Map.Entry<K,V> next(){
      if (next == null && !hasNext()) {
        throw new NoSuchElementException();
      }
      Entry<K,V> e=next;
      next=null;
      return e;
    }
    public void remove(){
      hashIterator.remove();
    }
  }
;
}
