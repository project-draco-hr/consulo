{
  final Cache oldCache=myDependencyCache.getCache();
  Dependency[] backDependencies=oldCache.getBackDependencies(classQName);
  for (int j=0; j < backDependencies.length; j++) {
    Dependency useDependency=backDependencies[j];
    if (!myDependencyCache.isTargetClassInfoMarked(useDependency)) {
      FieldInfo[] usedFields=useDependency.getUsedFields();
      for (int idx=0; idx < usedFields.length; idx++) {
        FieldInfo field=usedFields[idx];
        if (fieldNames.contains(field.getName())) {
          if (myDependencyCache.markTargetClassInfo(useDependency)) {
            if (LOG.isDebugEnabled()) {
              LOG.debug("Mark dependent class " + myDependencyCache.resolve(useDependency.getClassQualifiedName()) + "; reason: conflicting fields were added to the hierarchy of the class "+ myDependencyCache.resolve(classQName));
            }
          }
          myDependencyCache.addClassToUpdate(classQName);
          break;
        }
      }
    }
  }
}
