{
  if (fromClassQName == Cache.UNKNOWN || methodsToCheck.isEmpty()) {
    return false;
  }
  final Cache cache=myDependencyCache.getCache();
  int superName=cache.getSuperQualifiedName(cache.getClassId(fromClassQName));
  if (superName != Cache.UNKNOWN) {
    if (hasUnimplementedAbstractMethods(superName,methodsToCheck)) {
      return true;
    }
  }
  if (methodsToCheck.isEmpty()) {
    return false;
  }
  int[] superInterfaces=cache.getSuperInterfaces(cache.getClassId(fromClassQName));
  for (  int superInterface : superInterfaces) {
    if (hasUnimplementedAbstractMethods(superInterface,methodsToCheck)) {
      return true;
    }
  }
  return false;
}
