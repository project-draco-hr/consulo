{
  int[] newFields=newCache.getFieldIds(newCache.getClassDeclarationId(qName));
  for (  int newField : newFields) {
    if (CacheUtils.findFieldByName(oldCache,oldCache.getClassDeclarationId(qName),newCache.getFieldName(newField)) == Cache.UNKNOWN) {
      members.add(newCache.createFieldInfo(newField));
    }
  }
  int[] newMethods=newCache.getMethodIds(newCache.getClassDeclarationId(qName));
  final SymbolTable symbolTable=myDependencyCache.getSymbolTable();
  for (int idx=0; idx < newMethods.length; idx++) {
    int newMethod=newMethods[idx];
    final int name=newCache.getMethodName(newMethod);
    final int methodDescriptor=newCache.getMethodDescriptor(newMethod);
    final String methodSignature=CacheUtils.getMethodSignature(symbolTable.getSymbol(name),symbolTable.getSymbol(methodDescriptor));
    if (CacheUtils.findMethodBySignature(oldCache,oldCache.getClassDeclarationId(myQName),methodSignature,symbolTable) == Cache.UNKNOWN) {
      members.add(newCache.createMethodInfo(newMethod));
    }
  }
}
