{
  boolean marked=false;
  final FilesDelta delta=getDelta(rd.module);
  final Set<File> files=delta.clearRecompile(rd.root,rd.isTestRoot);
  if (files != null) {
    final CompilerExcludes excludes=rd.module.getProject().getCompilerConfiguration().getExcludes();
    for (    File file : files) {
      if (!excludes.isExcluded(file)) {
        if (scope.isAffected(rd.module,file)) {
          final long stamp=file.lastModified();
          if (!rd.isGeneratedSources && stamp > compilationStartStamp) {
            delta.markRecompile(rd.root,rd.isTestRoot,file);
          }
 else {
            marked=true;
            tsStorage.saveStamp(file,stamp);
          }
        }
 else {
          delta.markRecompile(rd.root,rd.isTestRoot,file);
        }
      }
 else {
        tsStorage.remove(file);
      }
    }
  }
  return marked;
}
