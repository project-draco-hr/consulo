{
  try {
    if (myLookupItem.getObject() instanceof PsiField) {
      PsiDocumentManager.getInstance(myFile.getProject()).commitAllDocuments();
      PsiReference reference=myFile.findReferenceAt(myContext.getStartOffset());
      if (reference instanceof PsiReferenceExpression && !((PsiReferenceExpression)reference).isQualified()) {
        final PsiField member=(PsiField)myLookupItem.getObject();
        final PsiVariable target=JavaPsiFacade.getInstance(myProject).getResolveHelper().resolveReferencedVariable(member.getName(),(PsiElement)reference);
        if (member.getManager().areElementsEquivalent(target,JavaCompletionUtil.getOriginalElement(member)))         return;
        final PsiClass psiClass=member.getContainingClass();
        if (psiClass != null && StringUtil.isNotEmpty(psiClass.getName())) {
          myDocument.insertString(myContext.getStartOffset(),psiClass.getName() + ".");
        }
      }
    }
    addImportForItem(myFile,myContext.getStartOffset(),myLookupItem);
    if (myContext.getTailOffset() < 0) {
      myContext.setTailOffset(myEditor.getCaretModel().getOffset());
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
