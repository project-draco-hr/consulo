{
  MavenProject mavenProject=MavenDomUtil.findProject(model);
  if (mavenProject != null) {
    final Project project=model.getManager().getProject();
    Set<MavenProject> inheritors=MavenProjectsManager.getInstance(project).findInheritors(mavenProject);
    List<MavenDomProjectModel> children=ContainerUtil.mapNotNull(inheritors,new Function<MavenProject,MavenDomProjectModel>(){
      public MavenDomProjectModel fun(      MavenProject childProject){
        return MavenDomUtil.getMavenDomProjectModel(project,childProject.getFile());
      }
    }
);
    if (children.size() > 0) {
      NavigationGutterIconBuilder.create(MavenIcons.CHILDREN_PROJECTS,MAVEN_PROJECT_CONVERTER).setTargets(children).setCellRenderer(RENDERER).setPopupTitle(MavenDomBundle.message("navigate.children.poms.title")).setTooltipText(MavenDomBundle.message("children.poms.title")).install(holder,model.getXmlElement());
    }
  }
}
