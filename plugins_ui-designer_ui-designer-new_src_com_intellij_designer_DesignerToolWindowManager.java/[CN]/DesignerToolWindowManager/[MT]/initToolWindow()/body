{
  myComponentTree=new ComponentTree();
  JScrollPane treeScrollPane=ScrollPaneFactory.createScrollPane(myComponentTree);
  treeScrollPane.setBorder(IdeBorderFactory.createBorder(SideBorder.BOTTOM));
  treeScrollPane.setPreferredSize(new Dimension(250,-1));
  myComponentTree.initQuickFixManager(treeScrollPane.getViewport());
  myPropertyTablePanel=new PropertyTablePanel(myProject);
  myToolWindowPanel=new Splitter(true,0.42f);
  myToolWindowPanel.setFirstComponent(treeScrollPane);
  myToolWindowPanel.setSecondComponent(myPropertyTablePanel);
  myToolWindowPanel.addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      Dimension size=myToolWindowPanel.getSize();
      boolean newVertical=size.width < size.height;
      if (myToolWindowPanel.getOrientation() != newVertical) {
        myToolWindowPanel.setOrientation(newVertical);
      }
    }
  }
);
  myToolWindow=ToolWindowManager.getInstance(myProject).registerToolWindow(DesignerBundle.message("designer.toolwindow.name"),false,ToolWindowAnchor.LEFT,myProject,true);
  myToolWindow.setIcon(UIDesignerNewIcons.ToolWindow);
  ((ToolWindowEx)myToolWindow).setTitleActions(createActions());
  ContentManager contentManager=myToolWindow.getContentManager();
  Content content=contentManager.getFactory().createContent(myToolWindowPanel,DesignerBundle.message("designer.toolwindow.title"),false);
  content.setCloseable(false);
  content.setPreferredFocusableComponent(myComponentTree);
  contentManager.addContent(content);
  contentManager.setSelectedContent(content,true);
  myToolWindow.setAvailable(false,null);
}
