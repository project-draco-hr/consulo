{
  if (!(annotation.getParent() instanceof PsiModifierList))   return null;
  PsiElement owner=annotation.getParent().getParent();
  PsiJavaCodeReferenceElement nameRef=annotation.getNameReferenceElement();
  if (nameRef != null) {
    PsiElement resolved=nameRef.resolve();
    if (resolved instanceof PsiClass && ((PsiClass)resolved).isAnnotationType()) {
      PsiClass annotationType=(PsiClass)resolved;
      PsiAnnotation metaAnnotation=annotationType.getModifierList().findAnnotation("java.lang.annotation.Target");
      if (metaAnnotation != null) {
        PsiNameValuePair[] attributes=metaAnnotation.getParameterList().getAttributes();
        if (attributes.length >= 1) {
          PsiField elementType=getElementType(owner);
          if (elementType != null) {
            PsiAnnotationMemberValue value=attributes[0].getValue();
            if (value instanceof PsiArrayInitializerMemberValue) {
              PsiAnnotationMemberValue[] initializers=((PsiArrayInitializerMemberValue)value).getInitializers();
              for (int j=0; j < initializers.length; j++) {
                PsiAnnotationMemberValue initializer=initializers[j];
                if (initializer instanceof PsiReferenceExpression) {
                  PsiReferenceExpression refExpr=(PsiReferenceExpression)initializer;
                  if (refExpr.isReferenceTo(elementType))                   return null;
                }
              }
              return formatNotApplicableError(elementType,nameRef);
            }
 else             if (value instanceof PsiReferenceExpression) {
              if (!((PsiReferenceExpression)value).isReferenceTo(elementType)) {
                return formatNotApplicableError(elementType,nameRef);
              }
            }
          }
        }
      }
    }
  }
  return null;
}
