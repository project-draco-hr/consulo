{
  super(project);
  myProject=project;
  myVirtualFile=virtualFile;
  myVfsChangePanel=new BackgroundTaskByVfsChangePanel(project);
  myVfsChangePanel.reset(BackgroundTaskByVfsParametersImpl.EMPTY);
  myBoxlist=new CheckBoxList<BackgroundTaskByVfsChangeTask>();
  myBoxlist.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myBoxlist.setCheckBoxListListener(new CheckBoxListListener(){
    @Override public void checkBoxSelectionChanged(    int index,    boolean value){
      BackgroundTaskByVfsChangeTask task=(BackgroundTaskByVfsChangeTask)myBoxlist.getItemAt(index);
      if (task == null) {
        return;
      }
      task.setEnabled(value);
    }
  }
);
  myBoxlist.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      if (myPrevTask != null) {
        myVfsChangePanel.applyTo(myPrevTask.getParameters());
        myPrevTask=null;
      }
      if (myBoxlist.getItemsCount() == 0 || myBoxlist.getSelectedIndex() == -1) {
        myVfsChangePanel.reset(BackgroundTaskByVfsParametersImpl.EMPTY);
        return;
      }
      BackgroundTaskByVfsChangeTask task=(BackgroundTaskByVfsChangeTask)myBoxlist.getItemAt(myBoxlist.getSelectedIndex());
      if (task == null) {
        myVfsChangePanel.reset(BackgroundTaskByVfsParametersImpl.EMPTY);
        return;
      }
      myVfsChangePanel.reset(task.getParameters());
      myPrevTask=task;
    }
  }
);
  final List<BackgroundTaskByVfsChangeProvider> providers=BackgroundTaskByVfsChangeProviders.getProviders(project,virtualFile);
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator(myBoxlist);
  decorator=decorator.setAddActionUpdater(new AnActionButtonUpdater(){
    @Override public boolean isEnabled(    AnActionEvent e){
      return !providers.isEmpty();
    }
  }
);
  decorator=decorator.setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      if (providers.size() > 1) {
        ListPopupStep<BackgroundTaskByVfsChangeProvider> listPopupStep=new BaseListPopupStep<BackgroundTaskByVfsChangeProvider>("Add",providers){
          @NotNull @Override public String getTextFor(          BackgroundTaskByVfsChangeProvider value){
            return value.getTemplateName();
          }
          @Override public PopupStep onChosen(          final BackgroundTaskByVfsChangeProvider val,          boolean finalChoice){
            add(val);
            return FINAL_CHOICE;
          }
        }
;
        ListPopup listPopup=JBPopupFactory.getInstance().createListPopup(listPopupStep);
        listPopup.show(anActionButton.getPreferredPopupPoint());
      }
 else {
        add(providers.get(0));
      }
    }
  }
);
  List<BackgroundTaskByVfsChangeTask> originalTasks=BackgroundTaskByVfsChangeManager.getInstance(project).findTasks(virtualFile);
  List<BackgroundTaskByVfsChangeTask> cloneTasks=new ArrayList<BackgroundTaskByVfsChangeTask>(originalTasks.size());
  for (  BackgroundTaskByVfsChangeTask task : originalTasks) {
    cloneTasks.add(task.clone());
  }
  set(cloneTasks);
  myPanel.add(decorator.createPanel(),BorderLayout.NORTH);
  myPanel.add(myVfsChangePanel,BorderLayout.SOUTH);
  setTitle("Manage Background Tasks");
  init();
  pack();
}
