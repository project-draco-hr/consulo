{
  final List<PsiExpression> returnExpressions=LambdaUtil.getReturnExpressions(lambdaType.getExpression());
  TypeKind typeKind=TypeKind.NONE_DETERMINED;
  for (  PsiExpression expression : returnExpressions) {
    final PsiType returnExprType=expression.getType();
    if (returnExprType instanceof PsiPrimitiveType) {
      if (typeKind == TypeKind.REFERENCE) {
        typeKind=TypeKind.NONE_DETERMINED;
        break;
      }
      typeKind=TypeKind.PRIMITIVE;
    }
 else {
      if (typeKind == TypeKind.PRIMITIVE) {
        typeKind=TypeKind.NONE_DETERMINED;
        break;
      }
      typeKind=TypeKind.REFERENCE;
    }
  }
  return typeKind;
}
