{
  if (resolved1.keySet().containsAll(resolved2.keySet())) {
    resolved1.keySet().removeAll(resolved2.keySet());
    for (Iterator<PsiClass> iterator=resolved1.keySet().iterator(); iterator.hasNext(); ) {
      PsiClass psiClass=iterator.next();
      final PsiClassType baseType=resolved1.get(psiClass);
      for (      PsiClassType childType : resolved2.values()) {
        if (TypeConversionUtil.isAssignable(baseType,childType,false)) {
          iterator.remove();
          break;
        }
      }
    }
    if (!resolved1.isEmpty())     return preferred;
    return Specifics.NEITHER;
  }
  return null;
}
