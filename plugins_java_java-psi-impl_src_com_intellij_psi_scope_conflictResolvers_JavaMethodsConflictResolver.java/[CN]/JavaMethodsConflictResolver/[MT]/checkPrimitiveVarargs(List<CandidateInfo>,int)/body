{
  if (JavaVersionService.getInstance().isAtLeast(myArgumentsList,JavaSdkVersion.JDK_1_7))   return;
  CandidateInfo objectVararg=null;
  for (  CandidateInfo conflict : conflicts) {
    ProgressManager.checkCanceled();
    final PsiMethod method=(PsiMethod)conflict.getElement();
    final int parametersCount=method.getParameterList().getParametersCount();
    if (method.isVarArgs() && parametersCount - 1 == argumentsCount) {
      final PsiType type=method.getParameterList().getParameters()[parametersCount - 1].getType();
      final PsiType componentType=((PsiArrayType)type).getComponentType();
      final PsiClassType classType=PsiType.getJavaLangObject(method.getManager(),GlobalSearchScope.allScope(method.getProject()));
      if (Comparing.equal(componentType,classType)) {
        objectVararg=conflict;
      }
    }
  }
  if (objectVararg != null) {
    for (    CandidateInfo conflict : conflicts) {
      ProgressManager.checkCanceled();
      PsiMethod method=(PsiMethod)conflict.getElement();
      if (method != objectVararg && method != null && method.isVarArgs()) {
        final int paramsCount=method.getParameterList().getParametersCount();
        final PsiType type=method.getParameterList().getParameters()[paramsCount - 1].getType();
        final PsiType componentType=((PsiArrayType)type).getComponentType();
        if (argumentsCount == paramsCount - 1 && componentType instanceof PsiPrimitiveType) {
          conflicts.remove(objectVararg);
          break;
        }
      }
    }
  }
}
