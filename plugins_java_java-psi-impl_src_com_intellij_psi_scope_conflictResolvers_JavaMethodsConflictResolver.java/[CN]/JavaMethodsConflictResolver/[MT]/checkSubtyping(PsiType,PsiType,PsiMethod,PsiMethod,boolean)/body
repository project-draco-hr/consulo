{
  boolean noBoxing=boxingHappening || type1 instanceof PsiPrimitiveType == type2 instanceof PsiPrimitiveType;
  boolean allowUncheckedConversion=!method1.hasModifierProperty(PsiModifier.STATIC) && !method2.hasModifierProperty(PsiModifier.STATIC);
  if (!allowUncheckedConversion) {
    final PsiClass containingClass1=method1.getContainingClass();
    final PsiClass containingClass2=method2.getContainingClass();
    if (containingClass1 != null && containingClass2 != null) {
      allowUncheckedConversion=!containingClass1.isInheritor(containingClass2,true) && !containingClass2.isInheritor(containingClass1,true);
    }
  }
  final boolean assignable2From1=noBoxing && TypeConversionUtil.isAssignable(type2,type1,allowUncheckedConversion);
  final boolean assignable1From2=noBoxing && TypeConversionUtil.isAssignable(type1,type2,allowUncheckedConversion);
  if (assignable1From2 || assignable2From1) {
    if (assignable1From2 && assignable2From1) {
      return null;
    }
    return assignable1From2 ? Specifics.SECOND : Specifics.FIRST;
  }
  return allowUncheckedConversion ? Specifics.NEITHER : null;
}
