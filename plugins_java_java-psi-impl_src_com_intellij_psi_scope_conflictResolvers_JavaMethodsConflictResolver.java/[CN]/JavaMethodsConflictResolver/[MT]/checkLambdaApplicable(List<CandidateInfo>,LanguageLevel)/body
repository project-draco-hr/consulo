{
  if (!languageLevel.isAtLeast(LanguageLevel.JDK_1_8))   return;
  for (int i=0; i < getActualParameterTypes().length; i++) {
    PsiType parameterType=getActualParameterTypes()[i];
    if (parameterType instanceof PsiLambdaExpressionType) {
      final PsiLambdaExpression lambdaExpression=((PsiLambdaExpressionType)parameterType).getExpression();
      for (Iterator<CandidateInfo> iterator=conflicts.iterator(); iterator.hasNext(); ) {
        ProgressManager.checkCanceled();
        final CandidateInfo conflict=iterator.next();
        final PsiMethod method=(PsiMethod)conflict.getElement();
        if (method != null) {
          final PsiParameter[] methodParameters=method.getParameterList().getParameters();
          if (methodParameters.length == 0)           continue;
          final PsiParameter param=i < methodParameters.length ? methodParameters[i] : methodParameters[methodParameters.length - 1];
          final PsiType paramType=param.getType();
          if (!LambdaUtil.isAcceptable(lambdaExpression,conflict.getSubstitutor().substitute(paramType),lambdaExpression.hasFormalParameterTypes())) {
            iterator.remove();
          }
 else {
          }
        }
      }
    }
  }
  checkMoreSpecificReturnType(conflicts,getActualParameterTypes(),languageLevel);
}
