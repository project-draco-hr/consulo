{
  Specifics moreSpecific=Specifics.NEITHER;
  final PsiMethod methodElement=(PsiMethod)method.getElement();
  final PsiMethod conflictElement=(PsiMethod)conflict.getElement();
  if (methodElement != null && conflictElement != null && methodElement.isVarArgs() == conflictElement.isVarArgs() && methodElement.getParameterList().getParametersCount() <= actualParameterTypes.length && conflictElement.getParameterList().getParametersCount() <= actualParameterTypes.length) {
    for (int functionalInterfaceIdx=0; functionalInterfaceIdx < actualParameterTypes.length; functionalInterfaceIdx++) {
      final PsiType interfaceReturnType=getReturnType(functionalInterfaceIdx,method);
      final PsiType interfaceReturnType1=getReturnType(functionalInterfaceIdx,conflict);
      if (actualParameterTypes[functionalInterfaceIdx] instanceof PsiLambdaExpressionType) {
        final PsiLambdaExpression lambdaExpression=((PsiLambdaExpressionType)actualParameterTypes[functionalInterfaceIdx]).getExpression();
        if (!lambdaExpression.hasFormalParameterTypes()) {
          return Specifics.NEITHER;
        }
      }
      if (actualParameterTypes[functionalInterfaceIdx] instanceof PsiMethodReferenceType) {
        final PsiMethodReferenceExpression methodReferenceExpression=((PsiMethodReferenceType)actualParameterTypes[functionalInterfaceIdx]).getExpression();
        if (!methodReferenceExpression.isExact()) {
          return Specifics.NEITHER;
        }
      }
      if (actualParameterTypes[functionalInterfaceIdx] instanceof PsiLambdaExpressionType || actualParameterTypes[functionalInterfaceIdx] instanceof PsiMethodReferenceType) {
        if (interfaceReturnType != null && interfaceReturnType1 != null && !Comparing.equal(interfaceReturnType,interfaceReturnType1)) {
          Specifics moreSpecific1=comparePrimitives(actualParameterTypes[functionalInterfaceIdx],interfaceReturnType,interfaceReturnType1);
          if (moreSpecific1 == Specifics.NEITHER && (interfaceReturnType != PsiType.VOID && interfaceReturnType1 != PsiType.VOID)) {
            moreSpecific1=compareConflicts((MethodCandidateInfo)method,(MethodCandidateInfo)conflict,methodElement,conflictElement,interfaceReturnType,interfaceReturnType1,languageLevel);
          }
          if (moreSpecific != Specifics.NEITHER && moreSpecific != moreSpecific1) {
            return Specifics.NEITHER;
          }
          moreSpecific=moreSpecific1;
        }
      }
 else       if (interfaceReturnType != null && interfaceReturnType1 != null) {
        return Specifics.NEITHER;
      }
    }
  }
  return moreSpecific;
}
