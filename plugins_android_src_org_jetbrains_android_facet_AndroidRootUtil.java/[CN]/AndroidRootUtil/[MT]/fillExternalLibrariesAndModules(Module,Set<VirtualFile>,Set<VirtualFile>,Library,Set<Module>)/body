{
  if (!visited.add(module)) {
    return;
  }
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      ModuleRootManager manager=ModuleRootManager.getInstance(module);
      for (      OrderEntry entry : manager.getOrderEntries()) {
        if (!(entry instanceof ExportableOrderEntry) || ((ExportableOrderEntry)entry).getScope() != DependencyScope.COMPILE) {
          continue;
        }
        if (libraries != null && entry instanceof LibraryOrderEntry) {
          Library library=((LibraryOrderEntry)entry).getLibrary();
          if (platformLibrary == null || !platformLibrary.equals(library)) {
            if (library != null) {
              for (              VirtualFile file : library.getFiles(OrderRootType.CLASSES)) {
                if (file.exists()) {
                  if (file.getFileSystem() instanceof JarFileSystem) {
                    VirtualFile localFile=JarFileSystem.getInstance().getVirtualFileForJar(file);
                    if (localFile != null)                     libraries.add(localFile);
                  }
 else {
                    libraries.add(file);
                  }
                }
              }
            }
          }
        }
 else         if (entry instanceof ModuleOrderEntry) {
          Module depModule=((ModuleOrderEntry)entry).getModule();
          if (depModule == null) {
            continue;
          }
          AndroidFacet facet=AndroidFacet.getInstance(depModule);
          if (facet == null || !facet.getConfiguration().LIBRARY_PROJECT) {
            CompilerModuleExtension extension=CompilerModuleExtension.getInstance(depModule);
            if (extension != null) {
              VirtualFile classDir=extension.getCompilerOutputPath();
              if (!outputDirs.contains(classDir) && classDir != null && classDir.exists()) {
                outputDirs.add(classDir);
              }
              VirtualFile classDirForTests=extension.getCompilerOutputPathForTests();
              if (!outputDirs.contains(classDirForTests) && classDirForTests != null && classDirForTests.exists()) {
                outputDirs.add(classDirForTests);
              }
            }
          }
          fillExternalLibrariesAndModules(depModule,outputDirs,libraries,platformLibrary,visited);
        }
      }
    }
  }
);
}
