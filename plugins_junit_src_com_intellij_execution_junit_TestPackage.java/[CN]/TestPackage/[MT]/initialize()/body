{
  super.initialize();
  final Project project=myConfiguration.getProject();
  final PsiManager psiManager=PsiManager.getInstance(project);
  final JUnitConfiguration.Data data=myConfiguration.getPersistentData();
  final String packageName=data.getPackageName();
  final PsiPackage aPackage=JavaPsiFacade.getInstance(psiManager.getProject()).findPackage(packageName);
  if (aPackage == null)   throw CantRunException.packageNotFound(packageName);
  final TestClassFilter filter=getClassFilter(aPackage);
  final ExecutionException[] exception=new ExecutionException[1];
  findTestsWithProgress(new FindCallback(){
    public void found(    @NotNull final Collection<PsiClass> classes){
      if (classes.isEmpty()) {
        exception[0]=new CantRunException(ExecutionBundle.message("no.tests.found.in.package.error.message",packageName));
        return;
      }
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          try {
            myConfiguration.configureClasspath(myJavaParameters);
          }
 catch (          CantRunException e) {
            exception[0]=e;
          }
        }
      }
);
      addClassesListToJavaParameters(classes,packageName);
    }
  }
,filter);
  if (exception[0] != null) {
    throw exception[0];
  }
}
