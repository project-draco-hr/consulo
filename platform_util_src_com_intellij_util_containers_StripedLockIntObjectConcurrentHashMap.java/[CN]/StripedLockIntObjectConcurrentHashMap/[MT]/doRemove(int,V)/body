{
  lock();
  try {
    int c=count - 1;
    IntHashEntry[] tab=table;
    int index=key & tab.length - 1;
    IntHashEntry<V> first=tab[index];
    IntHashEntry<V> e=first;
    while (e != null && key != e.key) {
      e=e.next;
    }
    V oldValue=null;
    if (e != null) {
      V v=e.value;
      if (value == null || value.equals(v)) {
        oldValue=v;
        ++modCount;
        IntHashEntry<V> newFirst=e.next;
        for (IntHashEntry<V> p=first; p != e; p=p.next) {
          newFirst=new IntHashEntry<V>(p.key,newFirst,p.value);
        }
        tab[index]=newFirst;
        count=c;
      }
    }
    return oldValue;
  }
  finally {
    unlock();
  }
}
