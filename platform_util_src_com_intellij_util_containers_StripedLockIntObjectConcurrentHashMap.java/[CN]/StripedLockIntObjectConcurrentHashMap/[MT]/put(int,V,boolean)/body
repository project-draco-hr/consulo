{
  lock();
  try {
    int c=count;
    if (c++ > threshold()) {
      rehash();
    }
    IntHashEntry[] tab=table;
    int index=key & tab.length - 1;
    IntHashEntry<V> first=tab[index];
    IntHashEntry<V> e=first;
    while (e != null && key != e.key) {
      e=e.next;
    }
    V oldValue;
    if (e != null) {
      oldValue=e.value;
      if (!onlyIfAbsent) {
        e.value=value;
      }
    }
 else {
      oldValue=null;
      ++modCount;
      tab[index]=new IntHashEntry<V>(key,first,value);
      count=c;
    }
    return oldValue;
  }
  finally {
    unlock();
  }
}
