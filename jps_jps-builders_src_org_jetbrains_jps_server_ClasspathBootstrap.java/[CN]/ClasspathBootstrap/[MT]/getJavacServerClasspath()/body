{
  final Set<File> cp=new LinkedHashSet<File>();
  cp.add(getResourcePath(JavacServer.class));
  for (  String path : PathManager.getUtilClassPath()) {
    cp.add(new File(path));
  }
  cp.add(getResourcePath(Message.class));
  cp.add(getResourcePath(Version.class));
  final Class<StandardJavaFileManager> optimizedFileManagerClass=getOptimizedFileManagerClass();
  if (optimizedFileManagerClass != null) {
    cp.add(getResourcePath(optimizedFileManagerClass));
  }
  try {
    final Class<?> cmdLineWrapper=Class.forName("com.intellij.rt.execution.CommandLineWrapper");
    cp.add(getResourcePath(cmdLineWrapper));
  }
 catch (  Throwable ignored) {
  }
  final JavaCompiler systemCompiler=ToolProvider.getSystemJavaCompiler();
  if (systemCompiler != null) {
    try {
      cp.add(getResourcePath(systemCompiler.getClass()));
    }
 catch (    Throwable ignored) {
    }
  }
  return new ArrayList<File>(cp);
}
