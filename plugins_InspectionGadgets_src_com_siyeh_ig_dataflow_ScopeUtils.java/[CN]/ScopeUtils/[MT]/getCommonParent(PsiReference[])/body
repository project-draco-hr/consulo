{
  PsiElement commonParent=null;
  for (  PsiReference reference : references) {
    final PsiElement referenceElement=reference.getElement();
    final PsiElement parent=PsiTreeUtil.getParentOfType(referenceElement,PsiCodeBlock.class,PsiForStatement.class);
    if (parent != null && commonParent != null && !commonParent.equals(parent)) {
      commonParent=PsiTreeUtil.findCommonParent(commonParent,parent);
      commonParent=PsiTreeUtil.getParentOfType(commonParent,PsiCodeBlock.class,PsiForStatement.class);
    }
 else {
      commonParent=parent;
    }
  }
  if (commonParent instanceof PsiForStatement) {
    final PsiForStatement forStatement=(PsiForStatement)commonParent;
    final PsiElement referenceElement=references[0].getElement();
    final PsiStatement initialization=forStatement.getInitialization();
    if (!(initialization instanceof PsiEmptyStatement)) {
      if (initialization instanceof PsiExpressionStatement) {
        final PsiExpressionStatement statement=(PsiExpressionStatement)initialization;
        final PsiExpression expression=statement.getExpression();
        if (expression instanceof PsiAssignmentExpression) {
          final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)expression;
          final PsiExpression lExpression=assignmentExpression.getLExpression();
          if (!lExpression.equals(referenceElement)) {
            commonParent=PsiTreeUtil.getParentOfType(commonParent,PsiCodeBlock.class);
          }
        }
 else {
          commonParent=PsiTreeUtil.getParentOfType(commonParent,PsiCodeBlock.class);
        }
      }
 else {
        commonParent=PsiTreeUtil.getParentOfType(commonParent,PsiCodeBlock.class);
      }
    }
  }
  if (commonParent != null) {
    final PsiElement parent=commonParent.getParent();
    if (parent instanceof PsiSwitchStatement && references.length > 1) {
      commonParent=PsiTreeUtil.getParentOfType(parent,PsiCodeBlock.class,false);
    }
  }
  return commonParent;
}
