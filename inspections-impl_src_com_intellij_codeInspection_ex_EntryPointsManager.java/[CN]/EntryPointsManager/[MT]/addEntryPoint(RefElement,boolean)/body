{
  if (!newEntryPoint.isValid())   return;
  if (newEntryPoint instanceof RefClass) {
    RefClass refClass=(RefClass)newEntryPoint;
    if (refClass.isAnonymous()) {
      return;
    }
    ArrayList<RefMethod> refConstructors=refClass.getConstructors();
    if (refConstructors.size() == 1) {
      addEntryPoint((RefElement)refConstructors.get(0),isPersistent);
      return;
    }
 else     if (refConstructors.size() > 1) {
      ArrayList pickedConstructors=ConstructorPicker.pickConstructorsFrom(refClass,refConstructors);
      for (int i=0; i < pickedConstructors.size(); i++) {
        addEntryPoint((RefMethod)pickedConstructors.get(i),isPersistent);
      }
      return;
    }
  }
  if (myFQNameToSmartEntryPointRef.get(newEntryPoint.getExternalName()) == null) {
    SmartRefElementPointer entry=new SmartRefElementPointer(newEntryPoint,isPersistent);
    myFQNameToSmartEntryPointRef.put(entry.getFQName(),entry);
    newEntryPoint.setEntry(true);
    newEntryPoint.setPermanentEntry(entry.isPersistent());
  }
}
