{
  ArrayList oldUsages=new ArrayList();
  addAll(oldUsages,usages[0]);
  final ObjectUpcastedUsageInfo[] objectUpcastedUsageInfos=objectUpcastedUsages(usages[0]);
  if (myPrepareSuccessfulSwingThreadCallback != null) {
    ArrayList conflicts=new ArrayList();
    if (objectUpcastedUsageInfos.length > 0) {
      final String message="Instances of " + ConflictsUtil.getDescription(myClass,true) + " upcasted to "+ ConflictsUtil.htmlEmphasize("java.lang.Object")+ " were found. If you continue, they will be shown "+ "in a separate Find tab.";
      conflicts.add(message);
    }
    analyzeConflicts(usages[0],conflicts);
    if (!conflicts.isEmpty()) {
      ConflictsDialog conflictsDialog=new ConflictsDialog((String[])conflicts.toArray(new String[conflicts.size()]),myProject);
      conflictsDialog.show();
      if (!conflictsDialog.isOK())       return false;
    }
    if (objectUpcastedUsageInfos.length > 0) {
      showObjectUpcastedUsageView(objectUpcastedUsageInfos);
      myPreviewUsages=true;
    }
  }
  ArrayList filteredUsages=filterUsages(oldUsages);
  usages[0]=(UsageInfo[])filteredUsages.toArray(new UsageInfo[filteredUsages.size()]);
  prepareSuccessful();
  return true;
}
