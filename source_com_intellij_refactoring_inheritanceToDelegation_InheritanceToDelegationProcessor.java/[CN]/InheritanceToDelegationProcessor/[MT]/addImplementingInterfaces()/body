{
  final PsiReferenceList implementsList=myClass.getImplementsList();
  for (Iterator<PsiClass> iterator=myDelegatedInterfaces.iterator(); iterator.hasNext(); ) {
    PsiClass delegatedInterface=iterator.next();
    if (!myClassImplementedInterfaces.contains(delegatedInterface)) {
      implementsList.add(myFactory.createClassReferenceElement(delegatedInterface));
    }
  }
  if (!myBaseClass.isInterface()) {
    final PsiReferenceList extendsList=myClass.getExtendsList();
    extendsList.getReferenceElements()[0].delete();
  }
 else {
    final PsiJavaCodeReferenceElement[] interfaceRefs=implementsList.getReferenceElements();
    for (int i=0; i < interfaceRefs.length; i++) {
      PsiJavaCodeReferenceElement interfaceRef=interfaceRefs[i];
      final PsiElement resolved=interfaceRef.resolve();
      if (myManager.areElementsEquivalent(myBaseClass,resolved)) {
        interfaceRef.delete();
        break;
      }
    }
  }
}
