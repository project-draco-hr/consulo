{
  LinkedHashSet result=new LinkedHashSet();
  PsiMethod[] methods=myClass.getMethods();
  for (int i=0; i < methods.length; i++) {
    PsiMethod method=methods[i];
    if (method.isConstructor() || method.hasModifierProperty(PsiModifier.PRIVATE))     continue;
    PsiMethod baseMethod=myBaseClass.findMethodBySignature(method,true);
    if (baseMethod != null) {
      PsiClass containingClass=baseMethod.getContainingClass();
      String qName=containingClass.getQualifiedName();
      if (qName == null || !"java.lang.Object".equals(qName)) {
        result.add(method);
      }
    }
  }
  return result;
}
