{
  if (myIsDelegateOtherMembers && !myGenerateGetter) {
    return PsiModifier.PUBLIC;
  }
  for (  UsageInfo aUsage : usages) {
    InheritanceToDelegationUsageInfo usage=(InheritanceToDelegationUsageInfo)aUsage;
    final FieldAccessibility delegateFieldAccessible=usage.getDelegateFieldAccessible();
    if (delegateFieldAccessible.isAccessible() && delegateFieldAccessible.getContainingClass() != myClass) {
      return PsiModifier.PROTECTED;
    }
  }
  return PsiModifier.PRIVATE;
}
