{
  SVNStatus conflStatus=SvnUtil.getStatus(myVcs,conflictIoFile);
  Assert.assertTrue(createTestFailedComment(data,conflictIoFile.getPath()) + " tree conflict resolved",conflStatus.getTreeConflict() == null);
  Collection<TreeConflictData.FileData> leftFiles=data.getLeftFiles();
  for (  TreeConflictData.FileData file : leftFiles) {
    File exFile=new File(myWorkingCopyDir.getPath(),file.myRelativePath);
    final SVNStatus status=SvnUtil.getStatus(myVcs,exFile);
    boolean theirsExists=new File(myTheirs.getPath(),file.myRelativePath).exists();
    if (SVNStatusType.STATUS_UNVERSIONED.equals(file.myNodeStatus)) {
      Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (file exists)",exFile.exists());
      if (theirsExists) {
        Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (unversioned)",status == null || SVNStatusType.STATUS_DELETED.equals(status.getNodeStatus()));
      }
 else {
        Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (unversioned)",status == null || SVNStatusType.STATUS_UNVERSIONED.equals(status.getNodeStatus()));
      }
    }
 else     if (SVNStatusType.STATUS_DELETED.equals(file.myNodeStatus)) {
      Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (deleted status)",status != null && file.myNodeStatus.equals(status.getNodeStatus()));
    }
 else     if (SVNStatusType.STATUS_ADDED.equals(file.myNodeStatus)) {
      Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (file exists)",exFile.exists());
      if (theirsExists) {
        Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (added status)",status != null && SVNStatusType.STATUS_REPLACED.equals(status.getNodeStatus()));
      }
 else {
        Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (added status)",status != null && SVNStatusType.STATUS_ADDED.equals(status.getNodeStatus()));
      }
    }
 else {
      if (SVNStatusType.STATUS_ADDED.equals(status.getNodeStatus())) {
        Assert.assertFalse(createTestFailedComment(data,file.myRelativePath) + " check deleted in theirs",theirsExists);
      }
 else {
        if (theirsExists) {
          Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (normal node status)",status != null && SVNStatusType.STATUS_REPLACED.equals(status.getNodeStatus()));
        }
 else {
          Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (normal node status)",status != null && (SVNStatusType.STATUS_NORMAL.equals(status.getNodeStatus()) || SVNStatusType.STATUS_MODIFIED.equals(status.getNodeStatus())));
        }
      }
      Assert.assertTrue(createTestFailedComment(data,exFile.getPath()) + " (modified text status)",status != null && file.myContentsStatus.equals(status.getContentsStatus()));
    }
  }
}
