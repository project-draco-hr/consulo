{
  if (value == null) {
    return null;
  }
 else   if (valueClass == String.class) {
    return value;
  }
 else   if (valueClass == int.class || valueClass == Integer.class) {
    return Integer.parseInt(value);
  }
 else   if (valueClass == boolean.class || valueClass == Boolean.class) {
    return Boolean.parseBoolean(value);
  }
 else   if (valueClass == double.class || valueClass == Double.class) {
    return Double.parseDouble(value);
  }
 else   if (valueClass == float.class || valueClass == Float.class) {
    return Float.parseFloat(value);
  }
 else   if (valueClass == long.class || valueClass == Long.class) {
    return Long.parseLong(value);
  }
 else   if (valueClass.isEnum()) {
    for (    Object enumConstant : valueClass.getEnumConstants()) {
      if (enumConstant.toString().equals(value)) {
        return enumConstant;
      }
    }
    return null;
  }
 else   if (Date.class.isAssignableFrom(valueClass)) {
    try {
      return new Date(Long.parseLong(value));
    }
 catch (    NumberFormatException e) {
      return new Date(0);
    }
  }
 else {
    return value;
  }
}
