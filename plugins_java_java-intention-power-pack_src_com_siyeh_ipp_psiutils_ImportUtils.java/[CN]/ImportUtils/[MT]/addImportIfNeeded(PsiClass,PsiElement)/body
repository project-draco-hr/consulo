{
  final PsiFile file=context.getContainingFile();
  if (!(file instanceof PsiJavaFile)) {
    return;
  }
  final PsiJavaFile javaFile=(PsiJavaFile)file;
  final PsiClass outerClass=aClass.getContainingClass();
  if (outerClass == null) {
    if (PsiTreeUtil.isAncestor(javaFile,aClass,true)) {
      return;
    }
  }
 else {
    if (PsiTreeUtil.isAncestor(outerClass,context,true) && !PsiTreeUtil.isAncestor(outerClass.getModifierList(),context,true)) {
      return;
    }
  }
  final String qualifiedName=aClass.getQualifiedName();
  if (qualifiedName == null) {
    return;
  }
  final PsiImportList importList=javaFile.getImportList();
  if (importList == null) {
    return;
  }
  final String containingPackageName=javaFile.getPackageName();
  @NonNls final String packageName=ClassUtil.extractPackageName(qualifiedName);
  if (containingPackageName.equals(packageName) || importList.findSingleClassImportStatement(qualifiedName) != null) {
    return;
  }
  if (importList.findOnDemandImportStatement(packageName) != null && !hasDefaultImportConflict(qualifiedName,javaFile) && !hasOnDemandImportConflict(qualifiedName,javaFile)) {
    return;
  }
  final Project project=importList.getProject();
  final JavaPsiFacade psiFacade=JavaPsiFacade.getInstance(project);
  final PsiElementFactory elementFactory=psiFacade.getElementFactory();
  final PsiImportStatement importStatement=elementFactory.createImportStatement(aClass);
  importList.add(importStatement);
}
