{
  if (isExternalOverride())   return;
  @NonNls final String name=method.getName();
  if (getOwnerClass().isTestCase() && name.startsWith("test"))   return;
  if (getSuperMethods().isEmpty()) {
    PsiClassType[] throwsList=method.getThrowsList().getReferencedTypes();
    if (throwsList.length > 0) {
      myUnThrownExceptions=throwsList.length == 1 ? new SmartList<String>() : new ArrayList<String>(throwsList.length);
      for (      final PsiClassType type : throwsList) {
        PsiClass aClass=type.resolve();
        String fqn=aClass == null ? null : aClass.getQualifiedName();
        if (fqn != null) {
          myUnThrownExceptions.add(fqn);
        }
      }
    }
  }
  final PsiCodeBlock body=method.getBody();
  if (body == null)   return;
  final Collection<PsiClassType> exceptionTypes=ExceptionUtil.collectUnhandledExceptions(body,method,false);
  for (  final PsiClassType exceptionType : exceptionTypes) {
    updateThrowsList(exceptionType);
  }
}
