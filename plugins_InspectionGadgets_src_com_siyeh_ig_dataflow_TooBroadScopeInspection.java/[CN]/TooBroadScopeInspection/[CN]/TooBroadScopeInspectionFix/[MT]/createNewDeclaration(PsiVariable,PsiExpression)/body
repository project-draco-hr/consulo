{
  final PsiManager manager=variable.getManager();
  final PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
  String name=variable.getName();
  if (name == null) {
    name="";
  }
  final String comment=getCommentText(variable);
  final PsiType type=variable.getType();
  final String statementText;
  final String typeText=type.getCanonicalText();
  if (initializer == null) {
    statementText=typeText + ' ' + name+ ';'+ comment;
  }
 else {
    final String initializerText=initializer.getText();
    statementText=typeText + ' ' + name+ '='+ initializerText+ ';'+ comment;
  }
  final PsiDeclarationStatement newDeclaration=(PsiDeclarationStatement)factory.createStatementFromText(statementText,variable);
  final PsiLocalVariable newVariable=(PsiLocalVariable)newDeclaration.getDeclaredElements()[0];
  final PsiModifierList newModifierList=newVariable.getModifierList();
  final PsiModifierList modifierList=variable.getModifierList();
  if (newModifierList != null && modifierList != null) {
    newModifierList.setModifierProperty(PsiModifier.FINAL,variable.hasModifierProperty(PsiModifier.FINAL));
    final PsiAnnotation[] annotations=modifierList.getAnnotations();
    for (    PsiAnnotation annotation : annotations) {
      newModifierList.add(annotation);
    }
  }
  return newDeclaration;
}
