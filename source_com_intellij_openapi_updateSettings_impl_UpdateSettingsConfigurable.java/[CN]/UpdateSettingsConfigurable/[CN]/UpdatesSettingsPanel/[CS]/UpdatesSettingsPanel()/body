{
  myPeriodCombo.addItem(ON_START_UP);
  myPeriodCombo.addItem(DAILY);
  myPeriodCombo.addItem(WEEKLY);
  myPeriodCombo.addItem(MONTHLY);
  myPeriodCombo.setRenderer(new MappingListCellRenderer(PERIOD_VALUE_MAP));
  final String majorVersion=ApplicationInfo.getInstance().getMajorVersion();
  String versionNumber="";
  if (majorVersion != null && majorVersion.trim().length() > 0) {
    final String minorVersion=ApplicationInfo.getInstance().getMinorVersion();
    if (minorVersion != null && minorVersion.trim().length() > 0) {
      versionNumber=majorVersion + "." + minorVersion;
    }
 else {
      versionNumber=majorVersion + ".0";
    }
  }
  myVersionNumber.setText(ApplicationInfo.getInstance().getVersionName() + " " + versionNumber);
  String currentBuild=(ApplicationInfo.getInstance().getBuildNumber() == null) ? IdeBundle.message("updates.current.build.unknown") : ApplicationInfo.getInstance().getBuildNumber();
  myBuildNumber.setText(currentBuild);
  myCbCheckForUpdates.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myPeriodCombo.setEnabled(myCbCheckForUpdates.isSelected());
    }
  }
);
  myBtnCheckNow.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      CheckForUpdateAction.actionPerformed(false);
      updateLastCheckedLabel();
    }
  }
);
  myBtnCheckNow.setEnabled(myCheckNowEnabled);
  LabelTextReplacingUtil.replaceText(myPanel);
}
