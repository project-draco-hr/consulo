{
  Document d=null;
  if (myElement != null) {
    myElement.detach();
    d=new Document(myElement);
  }
  final PathMacroManager pathMacroManager=PathMacroManager.getInstance(getComponentManager());
  final Document document=d;
  final XmlElementStorage storage=new XmlElementStorage(pathMacroManager){
    @Nullable protected Document loadDocument() throws StateStorage.StateStorageException {
      return document;
    }
    public void doSave() throws StateStorage.StateStorageException {
      if (myElement != null) {
        myProjectManager.setDefaultProjectRootElement((Element)myElement.clone());
      }
    }
    public boolean needsSave() throws StateStorage.StateStorageException {
      return true;
    }
    public List<VirtualFile> getAllStorageFiles(){
      return Collections.emptyList();
    }
  }
;
  return new StateStorageManager(pathMacroManager,PROJECT){
    @Override public synchronized StateStorage getStateStorage(    @NotNull final Storage storageSpec){
      return storage;
    }
    @Override @Nullable public StateStorage getFileStateStorage(    final String fileName){
      return storage;
    }
    @Override public synchronized void save() throws StateStorage.StateStorageException, IOException {
      super.save();
      storage.save();
    }
  }
;
}
