{
  final NameSuggestionsManager nameSuggestionsManager;
  myTypeSelector=myTypeSelectorManager.getTypeSelector();
  myTypePanel.setLayout(new BorderLayout());
  myTypePanel.add(myTypeSelector.getComponent(),BorderLayout.CENTER);
  if (myTypeSelector.getFocusableComponent() != null) {
    myTypeLabel.setDisplayedMnemonic(KeyEvent.VK_T);
    myTypeLabel.setLabelFor(myTypeSelector.getFocusableComponent());
  }
  myNameField=new NameSuggestionsField(myProject);
  myNameSuggestionPanel.setLayout(new BorderLayout());
  myNameSuggestionPanel.add(myNameField.getComponent(),BorderLayout.CENTER);
  myNameSuggestionLabel.setLabelFor(myNameField.getFocusableComponent());
  myTfTargetClassName=new ReferenceEditorWithBrowseButton(new ChooseClassAction(),"",PsiManager.getInstance(myProject),true);
  myTargetClassNamePanel.setLayout(new BorderLayout());
  myTargetClassNamePanel.add(myTfTargetClassName,BorderLayout.CENTER);
  myTargetClassNameLabel.setLabelFor(myTfTargetClassName);
  final String propertyName;
  if (myLocalVariable != null) {
    propertyName=myCodeStyleManager.variableNameToPropertyName(myLocalVariable.getName(),VariableKind.LOCAL_VARIABLE);
  }
 else {
    propertyName=null;
  }
  nameSuggestionsManager=new NameSuggestionsManager(myTypeSelector,myNameField,new NameSuggestionsGenerator(){
    public SuggestedNameInfo getSuggestedNameInfo(    PsiType type){
      return myCodeStyleManager.suggestVariableName(VariableKind.STATIC_FINAL_FIELD,propertyName,myInitializerExpression,type);
    }
    public Pair<LookupItemPreferencePolicy,Set<LookupItem>> completeVariableName(    String prefix,    PsiType type){
      LinkedHashSet<LookupItem> set=new LinkedHashSet<LookupItem>();
      LookupItemPreferencePolicy policy=CompletionUtil.completeVariableName(myProject,set,prefix,type,VariableKind.STATIC_FINAL_FIELD);
      return new Pair<LookupItemPreferencePolicy,Set<LookupItem>>(policy,set);
    }
  }
,myProject);
  nameSuggestionsManager.setMnemonics(myTypeLabel,myNameSuggestionLabel);
  if (myOccurrencesCount > 1) {
    ItemListener itemListener=new ItemListener(){
      public void itemStateChanged(      ItemEvent e){
        updateTypeSelector();
        myNameField.requestFocusInWindow();
      }
    }
;
    myCbReplaceAll.addItemListener(itemListener);
    myCbReplaceAll.setText("Replace all occurrences of expression (" + myOccurrencesCount + " occurrences)");
  }
 else {
    myCbReplaceAll.setVisible(false);
  }
  if (myLocalVariable != null) {
    if (myInvokedOnDeclaration) {
      myCbDeleteVariable.setEnabled(false);
      myCbDeleteVariable.setSelected(true);
    }
 else     if (myCbReplaceAll != null) {
      updateCbDeleteVariable();
      myCbReplaceAll.addItemListener(new ItemListener(){
        public void itemStateChanged(        ItemEvent e){
          updateCbDeleteVariable();
        }
      }
);
    }
  }
 else {
    myCbDeleteVariable.setVisible(false);
  }
  updateTypeSelector();
  updateVisibilityPanel();
  return myPanel;
}
