{
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  gbConstraints.anchor=GridBagConstraints.EAST;
  gbConstraints.fill=GridBagConstraints.BOTH;
  gbConstraints.insets=new Insets(4,4,4,0);
  gbConstraints.gridwidth=1;
  gbConstraints.weightx=0;
  gbConstraints.weighty=1;
  gbConstraints.gridx=0;
  gbConstraints.gridy=0;
  JLabel type=new JLabel("Constant (static final field) of type: ");
  panel.add(type,gbConstraints);
  gbConstraints.gridx++;
  gbConstraints.insets=new Insets(4,0,4,4);
  myTypeSelector=myTypeSelectorManager.getTypeSelector();
  panel.add(myTypeSelector.getComponent(),gbConstraints);
  if (myTypeSelector.getFocusableComponent() != null) {
    type.setDisplayedMnemonic(KeyEvent.VK_T);
    type.setLabelFor(myTypeSelector.getFocusableComponent());
  }
  final JLabel namePrompt;
  JPanel nameInputPanel;
{
    nameInputPanel=new JPanel(new GridBagLayout());
    GridBagConstraints gbc=new GridBagConstraints();
    gbc.insets=new Insets(0,0,0,2);
    gbc.anchor=GridBagConstraints.EAST;
    gbc.fill=GridBagConstraints.BOTH;
    gbc.gridwidth=1;
    gbc.weightx=0;
    gbc.weighty=1;
    gbc.gridx=0;
    gbc.gridy=0;
    namePrompt=new JLabel("Name: ");
    nameInputPanel.add(namePrompt,gbc);
    gbc.gridx++;
    gbc.insets=new Insets(0,2,0,0);
    gbc.weightx=1;
    myNameField=new NameSuggestionsField(myProject);
    nameInputPanel.add(myNameField.getComponent(),gbc);
    namePrompt.setDisplayedMnemonic(KeyEvent.VK_N);
    namePrompt.setLabelFor(myNameField.getFocusableComponent());
  }
  gbConstraints.insets=new Insets(4,4,4,4);
  gbConstraints.gridwidth=2;
  gbConstraints.weightx=1;
  gbConstraints.weighty=1;
  gbConstraints.gridx=0;
  gbConstraints.gridy=1;
  panel.add(nameInputPanel,gbConstraints);
{
    myTfTargetClassName=new ReferenceEditorWithBrowseButton(new ChooseClassAction(),"",PsiManager.getInstance(myProject));
    JPanel _panel=new JPanel(new BorderLayout());
    JLabel label=new JLabel("To (fully qualified name):");
    label.setLabelFor(myTfTargetClassName);
    _panel.add(label,BorderLayout.NORTH);
    _panel.add(myTfTargetClassName,BorderLayout.CENTER);
    gbConstraints.gridy++;
    panel.add(_panel,gbConstraints);
  }
  final String propertyName;
  if (myLocalVariable != null) {
    propertyName=myCodeStyleManager.variableNameToPropertyName(myLocalVariable.getName(),VariableKind.LOCAL_VARIABLE);
  }
 else {
    propertyName=null;
  }
  myNameSuggestionsManager=new NameSuggestionsManager(myTypeSelector,myNameField,new NameSuggestionsGenerator(){
    public SuggestedNameInfo getSuggestedNameInfo(    PsiType type){
      return myCodeStyleManager.suggestVariableName(VariableKind.STATIC_FINAL_FIELD,propertyName,myInitializerExpression,type);
    }
    public Pair<LookupItemPreferencePolicy,Set<LookupItem>> completeVariableName(    String prefix,    PsiType type){
      LinkedHashSet<LookupItem> set=new LinkedHashSet<LookupItem>();
      LookupItemPreferencePolicy policy=CompletionUtil.completeVariableName(myProject,set,prefix,type,VariableKind.STATIC_FINAL_FIELD);
      return new Pair<LookupItemPreferencePolicy,Set<LookupItem>>(policy,set);
    }
  }
,myProject);
  myNameSuggestionsManager.setMnemonics(type,namePrompt);
  return panel;
}
