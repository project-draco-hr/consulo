{
  final DefaultActionGroup group=new DefaultActionGroup();
  final AnAction[] groupingActions=createGroupingActions();
  for (  AnAction groupingAction : groupingActions) {
    group.add(groupingAction);
  }
  final JComponent component=getComponent();
  final MergeDupLines mergeDupLines=new MergeDupLines();
  mergeDupLines.registerCustomShortcutSet(mergeDupLines.getShortcutSet(),component);
  scheduleDisposeOnClose(new Disposable(){
    public void dispose(){
      mergeDupLines.unregisterCustomShortcutSet(component);
    }
  }
);
  group.add(mergeDupLines);
  final AnAction[] filteringActions=createFilteringActions();
  for (  AnAction filteringAction : filteringActions) {
    group.add(filteringAction);
  }
  group.add(new RuleAction(this,UsageViewBundle.message("preview.usages.action.text"),PREVIEW_ICON){
    protected boolean getOptionValue(){
      return UsageViewSettings.getInstance().IS_PREVIEW_USAGES;
    }
    protected void setOptionValue(    final boolean value){
      UsageViewSettings.getInstance().IS_PREVIEW_USAGES=value;
    }
  }
);
  return toUsageViewToolbar(group);
}
