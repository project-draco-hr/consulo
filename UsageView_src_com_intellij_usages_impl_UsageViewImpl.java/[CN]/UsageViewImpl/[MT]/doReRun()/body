{
  final Application application=ApplicationManager.getApplication();
  application.runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      setSearchInProgress(true);
      myChangesDetected=false;
      UsageSearcher usageSearcher=myUsageSearcherFactory.create();
      usageSearcher.generate(new Processor<Usage>(){
        public boolean process(        final Usage usage){
          appendUsageLater(usage);
          ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
          return indicator != null ? !indicator.isCanceled() : true;
        }
      }
);
      setSearchInProgress(false);
    }
  }
,UsageViewManagerImpl.getProgressTitile(myPresentation),true,myProject);
}
