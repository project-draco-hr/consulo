{
  final Runnable process=new Runnable(){
    public void run(){
      setSearchInProgress(true);
      myChangesDetected=false;
      UsageSearcher usageSearcher=myUsageSearcherFactory.create();
      usageSearcher.generate(new Processor<Usage>(){
        public boolean process(        final Usage usage){
          appendUsageLater(usage);
          ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
          return indicator != null ? !indicator.isCanceled() : true;
        }
      }
);
      setSearchInProgress(false);
    }
  }
;
  if (myIndicatorFactory != null) {
    UsageViewImplUtil.runProcessWithProgress(myIndicatorFactory.create(),process,new Runnable(){
      public void run(){
      }
    }
);
  }
 else {
    ProgressManager.getInstance().runProcessWithProgressSynchronously(process,UsageViewManagerImpl.getProgressTitle(myPresentation),true,myProject);
  }
}
