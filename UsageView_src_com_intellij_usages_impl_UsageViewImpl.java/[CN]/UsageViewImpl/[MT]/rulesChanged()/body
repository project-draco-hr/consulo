{
  final ArrayList<UsageState> states=new ArrayList<UsageState>();
  captureUsagesExpandState(new TreePath(myTree.getModel().getRoot()),states);
  final Collection<Usage> allUsages=myUsageNodes.keySet();
  reset();
  myBuilder.setGroupingRules(getActiveGroupingRules(myProject));
  myBuilder.setFilteringRules(getActiveFilteringRules(myProject));
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      for (Iterator<Usage> i=allUsages.iterator(); i.hasNext(); ) {
        Usage usage=i.next();
        if (!usage.isValid()) {
          i.remove();
          continue;
        }
        if (usage instanceof MergeableUsage) {
          ((MergeableUsage)usage).reset();
        }
        appendUsage(usage);
      }
    }
  }
);
  restoreUsageExpandState(states);
}
