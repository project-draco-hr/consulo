{
  final ArrayList<UsageState> states=new ArrayList<UsageState>();
  captureUsagesExpandState(new TreePath(myTree.getModel().getRoot()),states);
  Collection<Usage> allUsages=myUsageNodes.keySet();
  reset();
  myBuilder.setGroupingRules(getGroupingRuleProvider().getActiveRules(myProject));
  myBuilder.setFilteringRules(getFilteringRuleProvider().getActiveRules(myProject));
  for (Iterator<Usage> i=allUsages.iterator(); i.hasNext(); ) {
    Usage usage=i.next();
    if (!usage.isValid()) {
      i.remove();
      continue;
    }
    if (usage instanceof MergeableUsage) {
      ((MergeableUsage)usage).reset();
    }
    appendUsage(usage);
  }
  restoreUsageExpandState(states);
}
