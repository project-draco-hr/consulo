{
  if (myFieldsCache == null) {
    myFieldsCache=CachedValuesManager.getManager(getProject()).createCachedValue(new CachedValueProvider<PsiField[]>(){
      @Override public Result<PsiField[]> compute(){
        final Manifest manifest=myFacet.getManifest();
        if (manifest == null) {
          return Result.create(PsiField.EMPTY_ARRAY,PsiModificationTracker.MODIFICATION_COUNT);
        }
        final List<Pair<String,String>> pairs=doGetFields(manifest);
        final PsiField[] result=new PsiField[pairs.size()];
        final PsiClassType stringType=PsiType.getJavaLangString(myManager,GlobalSearchScope.allScope(getProject()));
        final PsiElementFactory factory=JavaPsiFacade.getElementFactory(getProject());
        int i=0;
        for (        Pair<String,String> pair : pairs) {
          final AndroidLightField field=new AndroidLightField(pair.getFirst(),ManifestInnerClass.this,stringType,true,pair.getSecond());
          field.setInitializer(factory.createExpressionFromText("\"" + pair.getSecond() + "\"",field));
          result[i++]=field;
        }
        final XmlElement xmlElement=manifest.getXmlElement();
        final PsiFile psiManifestFile=xmlElement != null ? xmlElement.getContainingFile() : null;
        return Result.create(result,psiManifestFile != null ? psiManifestFile : PsiModificationTracker.MODIFICATION_COUNT);
      }
    }
);
  }
  return myFieldsCache.getValue();
}
