{
  if (!editor.getSelectionModel().hasSelection()) {
    editor.getSelectionModel().selectLineAtCaret();
    if (!editor.getSelectionModel().hasSelection())     return;
  }
  PsiDocumentManager.getInstance(project).commitDocument(editor.getDocument());
  ArrayList<TemplateImpl> array=getApplicableTemplates(editor,file);
  if (array.isEmpty()) {
    HintManager.getInstance().showErrorHint(editor,CodeInsightBundle.message("templates.surround.no.defined"));
    return;
  }
  if (!CodeInsightUtilBase.preparePsiElementForWrite(file))   return;
  Set<Character> usedMnemonicsSet=new HashSet<Character>();
  DefaultActionGroup group=new DefaultActionGroup();
  for (  TemplateImpl template : array) {
    group.add(new InvokeTemplateAction(template,editor,project,usedMnemonicsSet));
  }
  final ListPopup popup=JBPopupFactory.getInstance().createActionGroupPopup(CodeInsightBundle.message("templates.select.template.chooser.title"),group,DataManager.getInstance().getDataContext(editor.getContentComponent()),JBPopupFactory.ActionSelectionAid.MNEMONICS,false);
  popup.showInBestPositionFor(editor);
}
