{
  final Set<TextEditorHighlightingPass> topPasses=new THashSet<TextEditorHighlightingPass>(id2Pass.size());
  id2Pass.forEachValue(new TObjectProcedure<TextEditorHighlightingPass>(){
    public boolean execute(    TextEditorHighlightingPass object){
      topPasses.add(object);
      return true;
    }
  }
);
  id2Pass.forEachValue(new TObjectProcedure<TextEditorHighlightingPass>(){
    public boolean execute(    TextEditorHighlightingPass pass){
      for (      int id : pass.getCompletionPredecessorIds()) {
        TextEditorHighlightingPass pred=id2Pass.get(id);
        if (pred != null) {
          topPasses.remove(pred);
        }
      }
      for (      int id : pass.getStartingPredecessorIds()) {
        TextEditorHighlightingPass pred=id2Pass.get(id);
        if (pred != null) {
          topPasses.remove(pred);
        }
      }
      return true;
    }
  }
);
  List<TextEditorHighlightingPass> result=new ArrayList<TextEditorHighlightingPass>();
  for (  TextEditorHighlightingPass topPass : topPasses) {
    layout(topPass,result,id2Pass);
  }
  return result;
}
