{
  myProject=project;
  myTableModel=new StatisticsTableModel();
  myStatisticsTableView.setModelAndUpdateColumns(myTableModel);
  myFrameworkRunningModel=model;
  final Runnable gotoSuiteOrParentAction=createGotoSuiteOrParentAction();
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      gotoSuiteOrParentAction.run();
      return true;
    }
  }
.installOn(myStatisticsTableView);
  final KeyStroke shiftEnterKey=KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,InputEvent.SHIFT_MASK);
  SMRunnerUtil.registerAsAction(shiftEnterKey,"select-test-proxy-in-test-view",new Runnable(){
    public void run(){
      showSelectedProxyInTestsTree();
    }
  }
,myStatisticsTableView);
  final KeyStroke enterKey=KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0);
  SMRunnerUtil.registerAsAction(enterKey,"go-to-selected-suite-or-parent",gotoSuiteOrParentAction,myStatisticsTableView);
  PopupHandler.installPopupHandler(myStatisticsTableView,IdeActions.GROUP_TESTTREE_POPUP,ActionPlaces.TESTTREE_VIEW_POPUP);
  DataManager.registerDataProvider(myStatisticsTableView,this);
}
