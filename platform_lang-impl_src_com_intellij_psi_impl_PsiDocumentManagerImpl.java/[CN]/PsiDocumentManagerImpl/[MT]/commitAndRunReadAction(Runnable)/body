{
  final Application application=ApplicationManager.getApplication();
  if (SwingUtilities.isEventDispatchThread()) {
    commitAllDocuments();
    runnable.run();
  }
 else {
    LOG.assertTrue(!ApplicationManager.getApplication().isReadAccessAllowed(),"Don't call commitAndRunReadAction inside ReadAction, it will cause a deadlock otherwise.");
    final Semaphore s1=new Semaphore();
    final Semaphore s2=new Semaphore();
    final boolean[] committed={false};
    application.runReadAction(new Runnable(){
      @Override public void run(){
        if (myUncommittedDocuments.isEmpty()) {
          runnable.run();
          committed[0]=true;
        }
 else {
          s1.down();
          s2.down();
          final Runnable commitRunnable=new Runnable(){
            @Override public void run(){
              commitAllDocuments();
              s1.up();
              s2.waitFor();
            }
          }
;
          final ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
          if (progressIndicator == null) {
            ApplicationManager.getApplication().invokeLater(commitRunnable);
          }
 else {
            ApplicationManager.getApplication().invokeLater(commitRunnable,progressIndicator.getModalityState());
          }
        }
      }
    }
);
    if (!committed[0]) {
      s1.waitFor();
      application.runReadAction(new Runnable(){
        @Override public void run(){
          s2.up();
          runnable.run();
        }
      }
);
    }
  }
}
