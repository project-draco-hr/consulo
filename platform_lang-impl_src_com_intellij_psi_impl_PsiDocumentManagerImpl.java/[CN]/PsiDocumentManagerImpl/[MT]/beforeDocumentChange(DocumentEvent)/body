{
  final Document document=event.getDocument();
  final FileViewProvider viewProvider=getCachedViewProvider(document);
  if (viewProvider == null)   return;
  if (!isRelevant(viewProvider))   return;
  VirtualFile virtualFile=viewProvider.getVirtualFile();
  if (virtualFile.getFileType().isBinary())   return;
  final List<PsiFile> files=viewProvider.getAllFiles();
  boolean hasLockedBlocks=false;
  for (  PsiFile file : files) {
    if (file == null)     continue;
    if (file.isPhysical() && mySmartPointerManager != null) {
      mySmartPointerManager.fastenBelts(file,event.getOffset(),null);
    }
    final TextBlock textBlock=TextBlock.get(file);
    if (textBlock.isLocked()) {
      hasLockedBlocks=true;
      continue;
    }
    if (file instanceof PsiFileImpl) {
      myIsCommitInProgress=true;
      try {
        PsiFileImpl psiFile=(PsiFileImpl)file;
        document.putUserData(TEMP_TREE_IN_DOCUMENT_KEY,psiFile.calcTreeElement());
      }
  finally {
        myIsCommitInProgress=false;
      }
    }
  }
  if (!hasLockedBlocks) {
    PostprocessReformattingAspect.getInstance(myProject).beforeDocumentChanged(viewProvider);
    ((SingleRootFileViewProvider)viewProvider).beforeDocumentChanged();
  }
}
