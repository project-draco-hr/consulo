{
  if (!(expression instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)expression;
  if (referenceExpression.getQualifierExpression() != null) {
    return;
  }
  final PsiStatement thenBranch=statement.getThenBranch();
  if (thenBranch == null) {
    return;
  }
  final PsiElement target=referenceExpression.resolve();
  if (!(target instanceof PsiVariable)) {
    return;
  }
  final PsiVariable variable=(PsiVariable)target;
  final VariableUsedVisitor visitor=new VariableUsedVisitor(variable);
  thenBranch.accept(visitor);
  if (!visitor.isUsed()) {
    return;
  }
  registerError(visitor.getUse(),constantExpression);
}
