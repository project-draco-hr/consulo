{
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints gbc=new GridBagConstraints();
  gbc.fill=GridBagConstraints.BOTH;
  gbc.anchor=GridBagConstraints.WEST;
  gbc.gridy=0;
  gbc.gridx=0;
  gbc.insets=new Insets(4,8,0,8);
  myClassCombo=new JComboBox(mySuperClasses);
  myClassCombo.setRenderer(new ClassCellRenderer());
  gbc.gridwidth=2;
  final JLabel classComboLabel=new JLabel();
  panel.add(classComboLabel,gbc);
  gbc.gridy++;
  panel.add(myClassCombo,gbc);
  classComboLabel.setText(RefactoringBundle.message("replace.inheritance.from"));
  myClassCombo.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        updateTargetClass();
      }
    }
  }
);
  gbc.gridy++;
  gbc.gridwidth=1;
  gbc.insets=new Insets(4,8,4,0);
  final JLabel fieldNameLabel=new JLabel();
  panel.add(fieldNameLabel,gbc);
  myFieldNameField=new NameSuggestionsField(myProject);
  gbc.gridx++;
  gbc.gridwidth=GridBagConstraints.REMAINDER;
  gbc.insets=new Insets(4,4,4,8);
  gbc.weightx=1.0;
  panel.add(myFieldNameField.getComponent(),gbc);
  fieldNameLabel.setText(RefactoringBundle.message("field.name"));
  gbc.gridx=0;
  gbc.gridy++;
  gbc.gridwidth=1;
  gbc.insets=new Insets(4,8,4,0);
  gbc.weightx=0.0;
  final JLabel innerClassNameLabel=new JLabel();
  panel.add(innerClassNameLabel,gbc);
  myInnerClassNameField=new NameSuggestionsField(myProject);
  gbc.gridx++;
  gbc.gridwidth=GridBagConstraints.REMAINDER;
  gbc.insets=new Insets(4,4,4,8);
  gbc.weightx=1.0;
  panel.add(myInnerClassNameField.getComponent(),gbc);
  innerClassNameLabel.setText(RefactoringBundle.message("inner.class.name"));
  return panel;
}
