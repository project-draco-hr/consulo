{
  final Application app=ApplicationManager.getApplication();
  if (app == null || wrongOS() || myConsumed || isSheduledForRestore())   return;
  Project project=null;
  DataContext context=myParentWindow == null ? DataManager.getInstance().getDataContext() : DataManager.getInstance().getDataContext(myParentWindow);
  if (context != null) {
    project=(Project)context.getData(DataConstants.PROJECT);
  }
  mySheduledForRestore=true;
  final List<FocusTrackback> stack=getCleanStackForRoot();
  final int index=stack.indexOf(this);
  for (int i=index - 1; i >= 0; i--) {
    if (stack.get(i).isSheduledForRestore()) {
      dispose();
      return;
    }
  }
  if (project != null && !project.isDisposed()) {
    final IdeFocusManager focusManager=IdeFocusManager.getInstance(project);
    focusManager.requestFocus(new FocusCommand(){
      public ActionCallback run(){
        _restoreFocus();
        return new ActionCallback.Done();
      }
      public String toString(){
        return "focus trackback";
      }
    }
,false).doWhenProcessed(new Runnable(){
      public void run(){
        dispose();
      }
    }
);
  }
 else {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        _restoreFocus();
        dispose();
      }
    }
);
  }
}
