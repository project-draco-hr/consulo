{
  StringBuffer buffer=new StringBuffer();
  ClsDocCommentImpl docComment=(ClsDocCommentImpl)getDocComment();
  if (docComment != null) {
    buffer.append(docComment.getMirrorText());
  }
  buffer.append(((ClsElementImpl)getModifierList()).getMirrorText());
  buffer.append(' ');
  buffer.append(isEnum() ? "enum " : isAnnotationType() ? "@interface " : isInterface() ? "interface " : "class ");
  buffer.append(((ClsElementImpl)getNameIdentifier()).getMirrorText());
  buffer.append(((ClsTypeParametersListImpl)getTypeParameterList()).getMirrorText());
  buffer.append(' ');
  if (!isEnum() & !isAnnotationType()) {
    buffer.append(((ClsElementImpl)getExtendsList()).getMirrorText());
    buffer.append(' ');
  }
  if (!isInterface()) {
    buffer.append(((ClsElementImpl)getImplementsList()).getMirrorText());
  }
  buffer.append('{');
  PsiField[] fields=getFields();
  for (int i=0; i < fields.length; i++) {
    PsiField field=fields[i];
    buffer.append(((ClsElementImpl)field).getMirrorText());
    if (field instanceof ClsEnumConstantImpl) {
      if (i < fields.length - 1 && fields[i + 1] instanceof ClsEnumConstantImpl) {
        buffer.append(", ");
      }
 else {
        buffer.append(";");
      }
    }
  }
  PsiMethod[] methods=getMethods();
  for (  PsiMethod method : methods) {
    buffer.append(((ClsElementImpl)method).getMirrorText());
  }
  PsiClass[] classes=getInnerClasses();
  for (  PsiClass aClass : classes) {
    buffer.append(((ClsElementImpl)aClass).getMirrorText());
  }
  buffer.append('}');
  return buffer.toString();
}
