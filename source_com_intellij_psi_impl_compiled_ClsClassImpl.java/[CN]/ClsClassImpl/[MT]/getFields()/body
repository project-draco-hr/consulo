{
synchronized (PsiLock.LOCK) {
    if (myFields == null) {
      long repositoryId=getRepositoryId();
      if (repositoryId < 0) {
        try {
          ClassFileData classFileData=getClassFileData();
          BytePointer ptr=new BytePointer(classFileData.getData(),classFileData.getConstantPoolEnd() + 6);
          int count=ClsUtil.readU2(ptr);
          ptr.offset+=count * 2;
          count=ClsUtil.readU2(ptr);
          ArrayList<PsiField> array=new ArrayList<PsiField>();
          for (int i=0; i < count; i++) {
            PsiField field;
            if (isEnumField(ptr.offset)) {
              field=new ClsEnumConstantImpl(this,ptr.offset);
            }
 else {
              field=new ClsFieldImpl(this,ptr.offset);
            }
            String name=field.getName();
            if (myManager.getNameHelper().isIdentifier(name) && name.indexOf('$') < 0) {
              array.add(field);
            }
            ptr.offset+=6;
            ClsUtil.skipAttributes(ptr);
          }
          myFields=array.toArray(new PsiField[array.size()]);
        }
 catch (        ClsFormatException e) {
          myFields=PsiField.EMPTY_ARRAY;
        }
      }
 else {
        long[] fieldIds=getRepositoryManager().getClassView().getFields(repositoryId);
        PsiField[] fields=new PsiField[fieldIds.length];
        RepositoryElementsManager repositoryElementsManager=getRepositoryElementsManager();
        for (int i=0; i < fieldIds.length; i++) {
          long id=fieldIds[i];
          fields[i]=(PsiField)repositoryElementsManager.findOrCreatePsiElementById(id);
        }
        myFields=fields;
      }
    }
    ;
  }
  return myFields;
}
