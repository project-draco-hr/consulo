{
  LOG.assertTrue(isValid());
  LOG.assertTrue(myMirror == null);
  myMirror=element;
  PsiClass mirror=(PsiClass)SourceTreeToPsiMap.treeElementToPsi(element);
  if (getDocComment() != null) {
    ((ClsElementImpl)getDocComment()).setMirror(SourceTreeToPsiMap.psiElementToTree(mirror.getDocComment()));
  }
  ((ClsElementImpl)getModifierList()).setMirror(SourceTreeToPsiMap.psiElementToTree(mirror.getModifierList()));
  ((ClsElementImpl)getNameIdentifier()).setMirror(SourceTreeToPsiMap.psiElementToTree(mirror.getNameIdentifier()));
  if (!isAnnotationType() && !isEnum()) {
    ((ClsElementImpl)getExtendsList()).setMirror(SourceTreeToPsiMap.psiElementToTree(mirror.getExtendsList()));
  }
  ((ClsElementImpl)getImplementsList()).setMirror(SourceTreeToPsiMap.psiElementToTree(mirror.getImplementsList()));
  ((ClsElementImpl)getTypeParameterList()).setMirror(SourceTreeToPsiMap.psiElementToTree(mirror.getTypeParameterList()));
  PsiField[] fields=getFields();
  PsiField[] mirrorFields=mirror.getFields();
  if (LOG.assertTrue(fields.length == mirrorFields.length)) {
    for (int i=0; i < fields.length; i++) {
      ((ClsElementImpl)fields[i]).setMirror(SourceTreeToPsiMap.psiElementToTree(mirrorFields[i]));
    }
  }
  PsiMethod[] methods=getMethods();
  PsiMethod[] mirrorMethods=mirror.getMethods();
  if (LOG.assertTrue(methods.length == mirrorMethods.length)) {
    for (int i=0; i < methods.length; i++) {
      ((ClsElementImpl)methods[i]).setMirror(SourceTreeToPsiMap.psiElementToTree(mirrorMethods[i]));
    }
  }
  PsiClass[] classes=getInnerClasses();
  PsiClass[] mirrorClasses=mirror.getInnerClasses();
  if (LOG.assertTrue(classes.length == mirrorClasses.length)) {
    for (int i=0; i < classes.length; i++) {
      ((ClsElementImpl)classes[i]).setMirror(SourceTreeToPsiMap.psiElementToTree(mirrorClasses[i]));
    }
  }
}
