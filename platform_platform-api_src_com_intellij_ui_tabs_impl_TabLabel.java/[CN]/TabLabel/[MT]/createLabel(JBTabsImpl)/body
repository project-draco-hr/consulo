{
  SimpleColoredComponent label=new SimpleColoredComponent(){
    @Override protected boolean shouldDrawMacShadow(){
      return SystemInfo.isMac || UIUtil.isUnderDarcula();
    }
    @Override protected boolean shouldDrawDimmed(){
      return myTabs.getSelectedInfo() != myInfo || myTabs.useBoldLabels();
    }
    @Override public Font getFont(){
      if (isFontSet() || !myTabs.useSmallLabels()) {
        return super.getFont();
      }
      return UIUtil.getLabelFont(UIUtil.FontSize.SMALL);
    }
    @Override protected void doPaint(    Graphics2D g){
      if (UISettings.getInstance().HIDE_TABS_IF_NEED || tabs.getTabsPosition() == JBTabsPosition.left || tabs.getTabsPosition() == JBTabsPosition.right) {
        super.doPaint(g);
        return;
      }
      Rectangle clip=getVisibleRect();
      if (getPreferredSize().width <= clip.width) {
        super.doPaint(g);
        return;
      }
      int dimSize=30;
      int dimStep=2;
      Composite oldComposite=g.getComposite();
      Shape oldClip=g.getClip();
      try {
        g.setClip(clip.x,clip.y,Math.max(0,clip.width - dimSize),clip.height);
        super.doPaint(g);
        for (int x=clip.x + clip.width - dimSize; x < clip.x + clip.width; x+=dimStep) {
          g.setClip(x,clip.y,dimStep,clip.height);
          g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1 - ((float)x - (clip.x + clip.width - dimSize)) / dimSize));
          super.doPaint(g);
        }
      }
  finally {
        g.setComposite(oldComposite);
        g.setClip(oldClip);
      }
    }
    @Override protected void applyAdditionalHints(    @NotNull Graphics2D g){
      if (!SystemInfo.isJavaVersionAtLeast("1.7") && g.getComposite() instanceof AlphaComposite && (((AlphaComposite)g.getComposite()).getAlpha() < 1)) {
        g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_GASP);
      }
    }
  }
;
  label.setOpaque(false);
  label.setBorder(null);
  label.setIconTextGap(tabs.isEditorTabs() ? (!UISettings.getInstance().HIDE_TABS_IF_NEED ? JBUI.scale(4) : JBUI.scale(2)) : new JLabel().getIconTextGap());
  label.setIconOpaque(false);
  label.setIpad(JBUI.emptyInsets());
  return label;
}
