{
  if (qualifier == null || expression == null)   return null;
  if (qualifier instanceof PsiMethodCallExpression)   return null;
  if (qualifier instanceof PsiLiteralExpression && ((PsiLiteralExpression)qualifier).getValue() == null)   return null;
  try {
    final List<LocalQuickFix> fixes=new SmartList<LocalQuickFix>();
    if (PsiUtil.getLanguageLevel(qualifier).isAtLeast(LanguageLevel.JDK_1_4)) {
      final Project project=qualifier.getProject();
      final PsiElementFactory elementFactory=JavaPsiFacade.getInstance(project).getElementFactory();
      final PsiBinaryExpression binary=(PsiBinaryExpression)elementFactory.createExpressionFromText("a != null",null);
      binary.getLOperand().replace(qualifier);
      fixes.add(new AddAssertStatementFix(binary));
    }
    addSurroundWithIfFix(qualifier,fixes);
    if (ReplaceWithTernaryOperatorFix.isAvailable(qualifier,expression)) {
      fixes.add(new ReplaceWithTernaryOperatorFix(qualifier));
    }
    return fixes.toArray(new LocalQuickFix[fixes.size()]);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
    return null;
  }
}
