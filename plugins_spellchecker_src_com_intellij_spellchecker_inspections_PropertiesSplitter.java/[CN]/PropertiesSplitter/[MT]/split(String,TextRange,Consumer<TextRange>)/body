{
  if (text == null || StringUtil.isEmpty(text)) {
    return;
  }
  final IdentifierSplitter splitter=SplitterFactory.getInstance().getIdentifierSplitter();
  Matcher matcher=WORD.matcher(range.substring(text));
  while (matcher.find()) {
    if (matcher.end() - matcher.start() < MIN_RANGE_LENGTH) {
      continue;
    }
    TextRange found=matcherRange(range,matcher);
    splitter.split(text,found,consumer);
  }
}
