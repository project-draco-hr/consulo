{
  final PsiManager manager=element.getManager();
  final PsiConstantEvaluationHelper constantEvaluationHelper=manager.getConstantEvaluationHelper();
  final PsiExpression expression=(PsiExpression)element.getParent();
  String newExpression="";
  final Object constantValue;
  if (expression instanceof PsiBinaryExpression) {
    final PsiBinaryExpression copy=(PsiBinaryExpression)expression.copy();
    final PsiExpression lhs=copy.getLOperand();
    if (lhs instanceof PsiBinaryExpression) {
      final PsiBinaryExpression lhsBinaryExpression=(PsiBinaryExpression)lhs;
      newExpression+=getLeftSideText(lhsBinaryExpression);
      final PsiExpression rightSide=lhsBinaryExpression.getROperand();
      lhs.replace(rightSide);
    }
    if (ConcatenationUtils.isConcatenation(expression)) {
      constantValue=computeConstantStringExpression(copy);
    }
 else {
      constantValue=constantEvaluationHelper.computeConstantExpression(copy);
    }
  }
 else {
    constantValue=constantEvaluationHelper.computeConstantExpression(expression);
  }
  if (constantValue instanceof String) {
    newExpression+='"' + StringUtil.escapeStringCharacters(constantValue.toString()) + '"';
  }
 else {
    newExpression+=constantValue.toString();
  }
  replaceExpression(newExpression,expression);
}
