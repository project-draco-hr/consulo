{
  super(method.getManager(),method,null);
  myMethod=method;
  final PsiManager manager=method.getManager();
  myModifierList=new LightModifierList(manager,ModifierFlags.PUBLIC_MASK + (isStatic ? ModifierFlags.STATIC_MASK : 0));
  final PsiParameter[] originalParameters=method.getParameterList().getParameters();
  final String[] parmNames=new String[originalParameters.length - 1];
  for (int i=1; i < originalParameters.length; i++) {
    PsiParameter originalParameter=originalParameters[i];
    String baseName;
    final PsiType type=originalParameter.getType();
    String[] nameSuggestions=JavaCodeStyleManager.getInstance(getProject()).suggestVariableName(VariableKind.PARAMETER,null,null,type).names;
    if (nameSuggestions.length > 0) {
      baseName=nameSuggestions[0];
    }
 else {
      baseName="p";
    }
    int postfix=1;
    String name=baseName;
    NextName:     do {
      for (int j=1; j < i; j++) {
        if (name.equals(parmNames[j - 1])) {
          name=baseName + postfix;
          postfix++;
          continue NextName;
        }
      }
      break;
    }
 while (true);
    parmNames[i - 1]=name;
  }
  myParameterList=new LightParameterList(manager,new Computable<GrLightParameter[]>(){
    public GrLightParameter[] compute(){
      GrLightParameter[] result=new GrLightParameter[parmNames.length];
      for (int i=0; i < result.length; i++) {
        final PsiParameter parameter=originalParameters[i + 1];
        LOG.assertTrue(parameter.isValid());
        result[i]=new GrLightParameter(manager,parmNames[i],null,parameter.getType(),GrGdkMethodImpl.this);
      }
      return result;
    }
  }
);
}
