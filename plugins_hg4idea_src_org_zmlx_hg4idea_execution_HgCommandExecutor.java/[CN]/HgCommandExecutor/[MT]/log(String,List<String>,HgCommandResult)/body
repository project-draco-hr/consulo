{
  if (myProject.isDisposed()) {
    return;
  }
  final HgGlobalSettings settings=myVcs.getGlobalSettings();
  String exeName;
  final int lastSlashIndex=settings.getHgExecutable().lastIndexOf(File.separator);
  exeName=settings.getHgExecutable().substring(lastSlashIndex + 1);
  final String executable=settings.isRunViaBash() ? "bash -c " + exeName : exeName;
  final String cmdString=String.format("%s %s %s",executable,operation,arguments == null ? "" : StringUtil.join(arguments," "));
  if (!myIsSilent) {
    LOG.info(cmdString);
    myVcs.showMessageInConsole(cmdString,ConsoleViewContentType.NORMAL_OUTPUT.getAttributes());
  }
 else {
    LOG.debug(cmdString);
  }
  if (!result.getRawOutput().isEmpty()) {
    if (!myIsSilent && myShowOutput) {
      LOG.info(result.getRawOutput());
      myVcs.showMessageInConsole(result.getRawOutput(),ConsoleViewContentType.SYSTEM_OUTPUT.getAttributes());
    }
 else {
      LOG.debug(result.getRawOutput());
    }
  }
  if (!result.getRawError().isEmpty()) {
    if (!myIsSilent) {
      LOG.info(result.getRawError());
      myVcs.showMessageInConsole(result.getRawError(),ConsoleViewContentType.ERROR_OUTPUT.getAttributes());
    }
 else {
      LOG.debug(result.getRawError());
    }
  }
}
