{
  DataInputStream dataInput=new DataInputStream(socket.getInputStream());
  DataOutputStream out=new DataOutputStream(socket.getOutputStream());
  final String message=new String(readDataBlock(dataInput));
  int numOfChoices=dataInput.readInt();
  final HgPromptChoice[] choices=new HgPromptChoice[numOfChoices];
  for (int i=0; i < numOfChoices; i++) {
    String choice=new String(readDataBlock(dataInput));
    choices[i]=new HgPromptChoice(i,choice);
  }
  int defaultChoiceInt=dataInput.readInt();
  final HgPromptChoice defaultChoice=choices[defaultChoiceInt];
  if (myHandler != null && myHandler.shouldHandle(message)) {
    int chosen=myHandler.promptUser(message,choices,defaultChoice).getChosenIndex();
    sendChoiceToHg(out,chosen);
    return true;
  }
  final int[] index=new int[]{-1};
  try {
    EventQueue.invokeAndWait(new Runnable(){
      public void run(){
        String[] choicePresentationArray=new String[choices.length];
        for (int i=0; i < choices.length; ++i) {
          choicePresentationArray[i]=choices[i].toString();
        }
        index[0]=Messages.showChooseDialog(message,"hg4idea",choicePresentationArray,defaultChoice.toString(),Messages.getQuestionIcon());
      }
    }
);
    int chosen=index[0];
    sendChoiceToHg(out,chosen);
    return true;
  }
 catch (  InterruptedException e) {
    return true;
  }
catch (  InvocationTargetException e) {
    throw new RuntimeException(e);
  }
}
