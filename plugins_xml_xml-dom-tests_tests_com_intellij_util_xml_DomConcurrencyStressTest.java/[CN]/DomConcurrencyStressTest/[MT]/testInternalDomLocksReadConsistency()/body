{
  getDomManager().registerFileDescription(new DomFileDescription(MyElement.class,"a"),myTestRootDisposable);
  registerExtender(MyElement.class,MyExtender.class);
  final XmlFile file=createXmlFile("<a attr=\"1\" attr2=\"2\">" + "<foo-child><foo-child/><custom-foo/></foo-child>" + "<bar-child><foo-child/></bar-child>"+ "<foo-element>"+ "  <foo-child/>"+ "  <foo-child><foo-child attr=\"\"/></foo-child>"+ "  <custom-foo/>"+ "  <custom-bar/>"+ "</foo-element>"+ "<custom-bar/>"+ "<custom-bar>"+ "  <foo-child/>"+ "  <foo-element/>"+ "  <foo-element/>"+ "  <custom-bar/>"+ "</custom-bar>"+ "<custom-bar attr=\"\">"+ "  <foo-child/>"+ "  <some-child/>"+ "  <custom-bar/>"+ "</custom-bar>"+ "<child/>"+ "<child/>"+ "<bool/>"+ "</a>");
  System.out.println("ITERATIONS =" + ITERATIONS);
  runThreads(42,new Runnable(){
    @Override public void run(){
      for (int i=0; i < ITERATIONS; i++) {
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          public void run(){
            final DomFileElementImpl<DomElement> element=getDomManager().getFileElement(file);
            assertNotNull(element);
            element.getRootElement().accept(new DomElementVisitor(){
              @Override public void visitDomElement(              final DomElement element){
                if (DomUtil.hasXml(element)) {
                  element.acceptChildren(this);
                }
              }
            }
);
          }
        }
);
        SemService.getSemService(getProject()).clearCache();
      }
    }
  }
);
}
