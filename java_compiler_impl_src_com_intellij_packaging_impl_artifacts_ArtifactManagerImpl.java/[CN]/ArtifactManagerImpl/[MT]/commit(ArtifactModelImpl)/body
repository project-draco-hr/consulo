{
  ApplicationManager.getApplication().assertWriteAccessAllowed();
  LOG.assertTrue(!myInsideCommit,"Recursive commit");
  myInsideCommit=true;
  try {
    final List<ArtifactImpl> allArtifacts=artifactModel.getOriginalArtifacts();
    Set<ArtifactImpl> removed=new THashSet<ArtifactImpl>(myModel.myArtifactsList);
    List<ArtifactImpl> added=new ArrayList<ArtifactImpl>();
    List<Pair<ArtifactImpl,String>> changed=new ArrayList<Pair<ArtifactImpl,String>>();
    for (    ArtifactImpl artifact : allArtifacts) {
      final boolean isAdded=!removed.remove(artifact);
      final ArtifactImpl modifiableCopy=artifactModel.getModifiableCopy(artifact);
      if (isAdded) {
        added.add(artifact);
      }
 else       if (modifiableCopy != null && !modifiableCopy.equals(artifact)) {
        final String oldName=artifact.getName();
        artifact.copyFrom(modifiableCopy);
        changed.add(Pair.create(artifact,oldName));
      }
    }
    myModel.setArtifactsList(allArtifacts);
    myModificationCount++;
    final ArtifactListener publisher=myProject.getMessageBus().syncPublisher(TOPIC);
    for (    ArtifactImpl artifact : added) {
      publisher.artifactAdded(artifact);
    }
    for (    ArtifactImpl artifact : removed) {
      publisher.artifactRemoved(artifact);
    }
    for (    Pair<ArtifactImpl,String> pair : changed) {
      publisher.artifactChanged(pair.getFirst(),pair.getSecond());
    }
  }
  finally {
    myInsideCommit=false;
  }
}
