{
  Presentation presentation=event.getPresentation();
  DataContext dataContext=event.getDataContext();
  Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  if (project == null) {
    presentation.setEnabled(false);
    return;
  }
  Editor editor=PlatformDataKeys.EDITOR.getData(dataContext);
  PsiElement element=LangDataKeys.PSI_ELEMENT.getData(dataContext);
  if (editor == null && element == null) {
    presentation.setEnabled(false);
    return;
  }
  if (LookupManager.getInstance(project).getActiveLookup() != null) {
    if (!isValidForLookup()) {
      presentation.setEnabled(false);
    }
 else {
      presentation.setEnabled(true);
    }
  }
 else {
    if (editor != null) {
      PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
      if (file == null) {
        presentation.setEnabled(false);
      }
      if (element == null && file != null) {
        if (file.getLanguage() instanceof XMLLanguage) {
          final PsiElement contextElement=file.findElementAt(editor.getCaretModel().getOffset());
          element=PsiTreeUtil.getParentOfType(contextElement,XmlTag.class);
        }
 else {
          final PsiReference ref=file.findReferenceAt(editor.getCaretModel().getOffset());
          if (ref instanceof PsiPolyVariantReference) {
            element=ref.getElement();
          }
        }
      }
    }
    if (element != null) {
      presentation.setEnabled(true);
    }
  }
}
