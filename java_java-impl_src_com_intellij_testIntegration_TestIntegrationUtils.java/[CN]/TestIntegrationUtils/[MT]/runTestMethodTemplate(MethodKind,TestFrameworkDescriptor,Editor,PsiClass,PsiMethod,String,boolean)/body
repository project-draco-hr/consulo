{
  Template template=createTestMethodTemplate(methodKind,descriptor,targetClass,name,automatic);
  final TextRange range=method.getTextRange();
  editor.getDocument().replaceString(range.getStartOffset(),range.getEndOffset(),"");
  editor.getCaretModel().moveToOffset(range.getStartOffset());
  final Project project=targetClass.getProject();
  TemplateEditingAdapter adapter=null;
  if (!automatic) {
    adapter=new TemplateEditingAdapter(){
      @Override public void templateFinished(      Template template,      boolean brokenOff){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            PsiDocumentManager.getInstance(project).commitDocument(editor.getDocument());
            PsiFile psi=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
            PsiElement method=psi.findElementAt(range.getStartOffset());
            if (method != null) {
              method=PsiTreeUtil.getParentOfType(method,PsiMethod.class,false);
              if (method != null) {
                CreateFromUsageUtils.setupEditor((PsiMethod)method,editor);
              }
            }
          }
        }
);
      }
    }
;
  }
  TemplateManager.getInstance(project).startTemplate(editor,template,adapter);
  PsiDocumentManager.getInstance(targetClass.getProject()).commitDocument(editor.getDocument());
}
