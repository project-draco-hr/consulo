{
  List<FoldRegion> newRegions=arrayList();
  SmartPointerManager smartPointerManager=SmartPointerManager.getInstance(myProject);
  for (  PsiElement element : myElementsToFoldMap.keySet()) {
    ProgressManager.checkCanceled();
    final Collection<FoldingDescriptor> descriptors=myElementsToFoldMap.get(element);
    for (    FoldingDescriptor descriptor : descriptors) {
      FoldingGroup group=descriptor.getGroup();
      TextRange range=descriptor.getRange();
      String placeholder=descriptor.getPlaceholderText();
      FoldRegion region=foldingModel.createFoldRegion(range.getStartOffset(),range.getEndOffset(),placeholder == null ? "..." : placeholder,group,descriptor.isNonExpandable());
      if (region == null)       continue;
      PsiElement psi=descriptor.getElement().getPsi();
      if (psi == null || !psi.isValid() || !foldingModel.addFoldRegion(region)) {
        region.dispose();
        continue;
      }
      info.addRegion(region,smartPointerManager.createSmartPsiElementPointer(psi,myFile));
      newRegions.add(region);
      boolean expandStatus=!descriptor.isNonExpandable() && shouldExpandNewRegion(element,range,rangeToExpandStatusMap);
      if (group == null) {
        shouldExpand.put(region,expandStatus);
      }
 else {
        final Boolean alreadyExpanded=groupExpand.get(group);
        groupExpand.put(group,alreadyExpanded == null ? expandStatus : alreadyExpanded.booleanValue() || expandStatus);
      }
    }
  }
  return newRegions;
}
