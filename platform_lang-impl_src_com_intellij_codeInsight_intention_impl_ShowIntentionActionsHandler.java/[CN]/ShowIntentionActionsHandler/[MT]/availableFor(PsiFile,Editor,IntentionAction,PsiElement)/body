{
  if (!file.isValid())   return null;
  final Project project=file.getProject();
  final Editor editorToApply;
  final PsiFile fileToApply;
  int offset=editor.getCaretModel().getOffset();
  PsiElement injected=InjectedLanguageManager.getInstance(project).findInjectedElementAt(file,offset);
  boolean inProject=file.getManager().isInProject(file);
  if (injected != null) {
    PsiFile injectedFile=injected.getContainingFile();
    Editor injectedEditor=InjectedLanguageUtil.getInjectedEditorForInjectedFile(editor,injectedFile);
    if (isAvailableHere(injectedEditor,injectedFile,injected,inProject,action)) {
      editorToApply=injectedEditor;
      fileToApply=injectedFile;
    }
 else     if (!isAvailableHere(editor,file,element,inProject,action)) {
      return null;
    }
 else {
      editorToApply=editor;
      fileToApply=file;
    }
  }
 else   if (!isAvailableHere(editor,file,element,inProject,action)) {
    return null;
  }
 else {
    editorToApply=editor;
    fileToApply=file;
  }
  return Pair.create(fileToApply,editorToApply);
}
