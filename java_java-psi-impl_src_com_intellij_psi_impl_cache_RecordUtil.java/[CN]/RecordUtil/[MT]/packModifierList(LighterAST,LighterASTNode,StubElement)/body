{
  int packed=0;
  final LighterASTNode modListOwner=tree.getParent(modList);
  if (modListOwner != null && modListOwner.getTokenType() == parent.getStubType()) {
    final StubElement grandParent=parent.getParentStub();
    if (parent instanceof PsiClassStub) {
      if (grandParent instanceof PsiClassStub && ((PsiClassStub)grandParent).isInterface()) {
        packed|=ModifierFlags.PUBLIC_MASK;
        packed|=ModifierFlags.STATIC_MASK;
      }
      if (((PsiClassStub)parent).isInterface()) {
        packed|=ModifierFlags.ABSTRACT_MASK;
        if (grandParent instanceof PsiClassStub) {
          packed|=ModifierFlags.STATIC_MASK;
        }
      }
 else       if (((PsiClassStub)parent).isEnum()) {
        if (!(grandParent instanceof PsiFileStub)) {
          packed|=ModifierFlags.STATIC_MASK;
        }
        boolean isFinal=true;
        final List<LighterASTNode> enumConstants=LightTreeUtil.getChildrenOfType(tree,modListOwner,JavaElementType.ENUM_CONSTANT);
        for (        final LighterASTNode constant : enumConstants) {
          if (LightTreeUtil.firstChildOfType(tree,constant,JavaElementType.ENUM_CONSTANT_INITIALIZER) != null) {
            isFinal=false;
            break;
          }
        }
        if (isFinal) {
          packed|=ModifierFlags.FINAL_MASK;
        }
        final List<LighterASTNode> methods=LightTreeUtil.getChildrenOfType(tree,modListOwner,JavaElementType.METHOD);
        for (        final LighterASTNode method : methods) {
          final LighterASTNode mods=LightTreeUtil.requiredChildOfType(tree,method,JavaElementType.MODIFIER_LIST);
          if (LightTreeUtil.firstChildOfType(tree,mods,JavaTokenType.ABSTRACT_KEYWORD) != null) {
            packed|=ModifierFlags.ABSTRACT_MASK;
            break;
          }
        }
      }
    }
 else     if (parent instanceof PsiMethodStub) {
      if (grandParent instanceof PsiClassStub && ((PsiClassStub)grandParent).isInterface()) {
        packed|=ModifierFlags.PUBLIC_MASK;
        if (!((PsiMethodStub)parent).isExtensionMethod()) {
          packed|=ModifierFlags.ABSTRACT_MASK;
        }
      }
    }
 else     if (parent instanceof PsiFieldStub) {
      if (parent.getStubType() == JavaElementType.ENUM_CONSTANT || grandParent instanceof PsiClassStub && ((PsiClassStub)grandParent).isInterface()) {
        packed|=ModifierFlags.PUBLIC_MASK;
        packed|=ModifierFlags.STATIC_MASK;
        packed|=ModifierFlags.FINAL_MASK;
      }
    }
  }
  for (  final LighterASTNode child : tree.getChildren(modList)) {
    final int flag=ModifierFlags.KEYWORD_TO_MODIFIER_FLAG_MAP.get(child.getTokenType());
    if (flag != 0) {
      packed|=flag;
    }
  }
  if ((packed & (ModifierFlags.PRIVATE_MASK | ModifierFlags.PROTECTED_MASK | ModifierFlags.PUBLIC_MASK)) == 0) {
    packed|=ModifierFlags.PACKAGE_LOCAL_MASK;
  }
  return packed;
}
