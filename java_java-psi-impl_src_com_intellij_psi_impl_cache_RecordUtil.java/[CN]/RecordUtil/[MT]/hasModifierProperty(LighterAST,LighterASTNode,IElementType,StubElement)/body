{
  final LighterASTNode modListOwner=tree.getParent(modList);
  if (modListOwner != null && modListOwner.getTokenType() == parent.getStubType()) {
    final StubElement grandParent=parent.getParentStub();
    if (parent instanceof PsiClassStub) {
      if (grandParent instanceof PsiClassStub && ((PsiClassStub)grandParent).isInterface()) {
        if (type == JavaTokenType.PUBLIC_KEYWORD || type == JavaTokenType.STATIC_KEYWORD)         return true;
 else         if (type == null)         return false;
      }
      if (((PsiClassStub)parent).isInterface()) {
        if (type == JavaTokenType.ABSTRACT_KEYWORD)         return true;
 else         if (type == JavaTokenType.STATIC_KEYWORD) {
          if (grandParent instanceof PsiClassStub)           return true;
        }
      }
      if (((PsiClassStub)parent).isEnum()) {
        if (type == JavaTokenType.STATIC_KEYWORD) {
          if (!(grandParent instanceof PsiFileStub))           return true;
        }
 else         if (type == JavaTokenType.FINAL_KEYWORD) {
          final List<LighterASTNode> enumConstants=LightTreeUtil.getChildrenOfType(tree,modListOwner,JavaElementType.ENUM_CONSTANT);
          for (          final LighterASTNode constant : enumConstants) {
            if (LightTreeUtil.firstChildOfType(tree,constant,JavaElementType.ENUM_CONSTANT_INITIALIZER) != null)             return false;
          }
          return true;
        }
 else         if (type == JavaTokenType.ABSTRACT_KEYWORD) {
          final List<LighterASTNode> methods=LightTreeUtil.getChildrenOfType(tree,modListOwner,JavaElementType.METHOD);
          for (          final LighterASTNode method : methods) {
            final LighterASTNode mods=LightTreeUtil.requiredChildOfType(tree,method,JavaElementType.MODIFIER_LIST);
            if (LightTreeUtil.firstChildOfType(tree,mods,JavaTokenType.ABSTRACT_KEYWORD) != null)             return true;
          }
          return false;
        }
      }
    }
 else     if (parent instanceof PsiMethodStub) {
      if (grandParent instanceof PsiClassStub && ((PsiClassStub)grandParent).isInterface()) {
        if (type == JavaTokenType.PUBLIC_KEYWORD || type == JavaTokenType.ABSTRACT_KEYWORD)         return true;
 else         if (type == null)         return false;
      }
    }
 else     if (parent instanceof PsiFieldStub) {
      if (parent.getStubType() == JavaElementType.ENUM_CONSTANT) {
        return type == JavaTokenType.PUBLIC_KEYWORD || type == JavaTokenType.STATIC_KEYWORD || type == JavaTokenType.FINAL_KEYWORD;
      }
 else       if (grandParent instanceof PsiClassStub && ((PsiClassStub)grandParent).isInterface()) {
        if (type == JavaTokenType.PUBLIC_KEYWORD || type == JavaTokenType.STATIC_KEYWORD || type == JavaTokenType.FINAL_KEYWORD)         return true;
 else         if (type == null)         return false;
      }
    }
  }
  if (type == null) {
    return !hasModifierProperty(tree,modList,JavaTokenType.PUBLIC_KEYWORD,parent) && !hasModifierProperty(tree,modList,JavaTokenType.PROTECTED_KEYWORD,parent) && !hasModifierProperty(tree,modList,JavaTokenType.PRIVATE_KEYWORD,parent);
  }
  return LightTreeUtil.firstChildOfType(tree,modList,type) != null;
}
