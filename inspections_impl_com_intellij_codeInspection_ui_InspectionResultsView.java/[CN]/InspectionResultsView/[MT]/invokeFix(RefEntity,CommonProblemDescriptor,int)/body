{
  final QuickFix[] fixes=descriptor.getFixes();
  if (fixes != null && fixes.length > idx && fixes[idx] != null) {
    if (element instanceof RefElement) {
      PsiElement psiElement=((RefElement)element).getElement();
      if (psiElement != null && psiElement.isValid()) {
        if (!psiElement.isWritable()) {
          final ReadonlyStatusHandler.OperationStatus operationStatus=ReadonlyStatusHandler.getInstance(myProject).ensureFilesWritable(psiElement.getContainingFile().getVirtualFile());
          if (operationStatus.hasReadonlyFiles()) {
            return;
          }
        }
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            Runnable command=new Runnable(){
              public void run(){
                CommandProcessor.getInstance().markCurrentCommandAsComplex(myProject);
                if (descriptor instanceof ProblemDescriptor) {
                  ((LocalQuickFix)fixes[idx]).applyFix(myProject,(ProblemDescriptor)descriptor);
                }
 else {
                  ((GlobalQuickFix)fixes[idx]).applyFix();
                }
              }
            }
;
            CommandProcessor.getInstance().executeCommand(myProject,command,fixes[idx].getName(),null);
            final DescriptorProviderInspection tool=((DescriptorProviderInspection)myTree.getSelectedTool());
            if (tool != null) {
              tool.ignoreProblem(element,descriptor,idx);
            }
            update();
          }
        }
);
      }
    }
 else {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          Runnable command=new Runnable(){
            public void run(){
              CommandProcessor.getInstance().markCurrentCommandAsComplex(myProject);
              if (!(descriptor instanceof ProblemDescriptor)) {
                ((GlobalQuickFix)fixes[idx]).applyFix();
              }
            }
          }
;
          CommandProcessor.getInstance().executeCommand(myProject,command,fixes[idx].getName(),null);
          final DescriptorProviderInspection tool=((DescriptorProviderInspection)myTree.getSelectedTool());
          if (tool != null) {
            tool.ignoreProblem(element,descriptor,idx);
          }
          update();
        }
      }
);
    }
  }
}
