{
  tool.updateContent();
  if (tool.hasReportedProblems()) {
    final InspectionTreeNode parentNode=getToolParentNode(tool.getGroupDisplayName().length() > 0 ? tool.getGroupDisplayName() : GroupNames.GENERAL_GROUP_NAME,errorLevel,groupedBySeverity);
    InspectionNode toolNode=new InspectionNode(tool);
    if (((InspectionManagerEx)InspectionManagerEx.getInstance(myProject)).RUN_WITH_EDITOR_PROFILE) {
      for (int i=0; i < parentNode.getChildCount(); i++) {
        InspectionNode node=(InspectionNode)parentNode.getChildAt(i);
        if (node.getTool().getShortName().compareTo(tool.getShortName()) == 0) {
          toolNode=node;
          break;
        }
      }
    }
    initToolNode(tool,toolNode,parentNode);
    if (tool instanceof DeadCodeInspection) {
      final DummyEntryPointsTool entryPoints=new DummyEntryPointsTool((DeadCodeInspection)tool);
      entryPoints.updateContent();
      initToolNode(entryPoints,new EntryPointsNode(entryPoints),toolNode);
    }
    regsisterActionShortcuts(tool);
  }
}
