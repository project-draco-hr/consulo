{
  final PsiFile file=tag.getContainingFile();
  if (file == null) {
    return;
  }
  final StyleUsageData usageData=AndroidInlineUtil.getUsageData(tag);
  if (usageData == null) {
    return;
  }
  final AndroidResourceReferenceBase reference=usageData.getReference();
  final String title=AndroidBundle.message("android.inline.style.title");
  final PsiElement[] styleElements=reference.computeTargetElements();
  if (styleElements.length == 0) {
    AndroidUtils.reportError(project,"Cannot find style by reference '" + reference.getValue() + "'",title);
    return;
  }
  if (styleElements.length > 1) {
    AndroidUtils.reportError(project,RefactoringBundle.getCannotRefactorMessage("Unambiguous style reference."),title);
    return;
  }
  final PsiElement styleElement=styleElements[0];
  final XmlTag styleTag=PsiTreeUtil.getParentOfType(styleElement,XmlTag.class);
  final DomElement domElement=styleTag != null ? DomManager.getDomManager(project).getDomElement(styleTag) : null;
  if (!(domElement instanceof Style)) {
    AndroidUtils.reportError(project,"Cannot find style by reference '" + reference.getValue() + "'",title);
    return;
  }
  final Style style=(Style)domElement;
  String styleName=style.getName().getStringValue();
  if (styleName == null) {
    AndroidUtils.reportError(project,RefactoringBundle.getCannotRefactorMessage("Style name is not specified."),title);
    return;
  }
  AndroidInlineUtil.doInlineStyleDeclaration(project,new AndroidInlineUtil.MyStyleData(styleName,style,styleElement),usageData,new ProjectBasedErrorReporter(project),myTestConfig);
}
