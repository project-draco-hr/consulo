{
  ValueContainerImpl<Value> container=new ValueContainerImpl<Value>();
  if (myInputIdMapping instanceof THashMap) {
    final THashMap<Value,Object> mapping=(THashMap<Value,Object>)myInputIdMapping;
    final THashMap<Value,Object> newMapping=new THashMap<Value,Object>(mapping.size());
    container.myInputIdMapping=newMapping;
    mapping.forEachEntry(new TObjectObjectProcedure<Value,Object>(){
      @Override public boolean execute(      Value key,      Object val){
        if (val instanceof TIntHashSet) {
          newMapping.put(key,((TIntHashSet)val).clone());
        }
 else         if (val instanceof IdBitSet) {
          newMapping.put(key,((IdBitSet)val).clone());
        }
 else {
          newMapping.put(key,val);
        }
        return true;
      }
    }
);
  }
 else {
    container.myInputIdMapping=myInputIdMapping;
    container.myInputIdMappingValue=myInputIdMappingValue instanceof TIntHashSet ? ((TIntHashSet)myInputIdMappingValue).clone() : myInputIdMappingValue instanceof IdBitSet ? ((IdBitSet)myInputIdMappingValue).clone() : myInputIdMappingValue;
  }
  return container;
}
