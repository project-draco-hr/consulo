{
  final JComponent southPanel=super.createSouthPanel();
  final JPanel panel=new JPanel(new BorderLayout());
  final JCheckBox checkBox=new JCheckBox(RefactoringBundle.message("directory.chooser.hide.non.existent.checkBox.text"),myFilterExisting);
  checkBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myFilterExisting=checkBox.isSelected();
      final ItemWrapper selectedItem=myView.getSelectedItem();
      PsiDirectory directory=selectedItem != null ? selectedItem.getDirectory() : null;
      if (directory == null && myDefaultSelection != null) {
        directory=myDefaultSelection;
      }
      myView.clearItems();
      int idx=0;
      int selectionId=-1;
      for (      ItemWrapper item : myItems) {
        if (myFilterExisting) {
          if (item.myPostfix != null && item.getDirectory().getVirtualFile().findFileByRelativePath(StringUtil.trimStart(item.myPostfix,File.separator)) == null) {
            continue;
          }
        }
        if (item.getDirectory() == directory) {
          selectionId=idx;
        }
        idx++;
        myView.addItem(item);
      }
      buildFragments();
      myView.listFilled();
      if (selectionId < 0) {
        myView.clearSelection();
        if (myView.getItemsSize() > 0) {
          myView.selectItemByIndex(0);
        }
      }
 else {
        myView.selectItemByIndex(selectionId);
      }
      enableButtons();
      myView.getComponent().repaint();
    }
  }
);
  panel.add(checkBox,BorderLayout.EAST);
  panel.add(southPanel,BorderLayout.SOUTH);
  return panel;
}
