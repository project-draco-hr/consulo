{
  final JPanel panel=new JPanel(new BorderLayout());
  final DefaultActionGroup actionGroup=new DefaultActionGroup();
  actionGroup.add(new FilterExistentAction());
  final JComponent toolbarComponent=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,actionGroup,true).getComponent();
  toolbarComponent.setBorder(null);
  panel.add(toolbarComponent,BorderLayout.NORTH);
  final Runnable runnable=new Runnable(){
    public void run(){
      enableButtons();
    }
  }
;
  myView.onSelectionChange(runnable);
  final JComponent component=myView.getComponent();
  final JScrollPane jScrollPane=ScrollPaneFactory.createScrollPane(component);
  int prototypeWidth=component.getFontMetrics(component.getFont()).stringWidth("X:\\1234567890\\1234567890\\com\\company\\system\\subsystem");
  jScrollPane.setPreferredSize(new Dimension(Math.max(300,prototypeWidth),300));
  installEnterAction(component);
  panel.add(jScrollPane,BorderLayout.CENTER);
  myTabbedPaneWrapper.addTab("Directory Structure",panel);
  myChooseByNamePanel.invoke(new ChooseByNamePopupComponent.Callback(){
    @Override public void elementChosen(    Object element){
      setSelection(element);
    }
  }
,ModalityState.stateForComponent(getRootPane()),false);
  myTabbedPaneWrapper.addTab("Choose By Neighbor Class",myChooseByNamePanel.getPanel());
  return myTabbedPaneWrapper.getComponent();
}
