{
  final MethodNodeBase<M> parentNode=(MethodNodeBase)node.getParent();
  final String callerText=node != myRoot ? getText(node.getMethod()) : "";
  final Document callerDocument=myCallerEditor.getDocument();
  final String calleeText=node != myRoot ? getText(parentNode.getMethod()) : "";
  final Document calleeDocument=myCalleeEditor.getDocument();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      callerDocument.setText(callerText);
      calleeDocument.setText(calleeText);
    }
  }
);
  final M caller=node.getMethod();
  final PsiElement callee=parentNode != null ? parentNode.getElementToSearch() : null;
  if (caller != null && caller.isPhysical() && callee != null) {
    HighlightManager highlighter=HighlightManager.getInstance(myProject);
    EditorColorsManager colorManager=EditorColorsManager.getInstance();
    TextAttributes attributes=colorManager.getGlobalScheme().getAttributes(EditorColors.TEXT_SEARCH_RESULT_ATTRIBUTES);
    int start=getStartOffset(caller);
    for (    PsiElement element : findElementsToHighlight(caller,callee)) {
      highlighter.addRangeHighlight(myCallerEditor,element.getTextRange().getStartOffset() - start,element.getTextRange().getEndOffset() - start,attributes,false,null);
    }
  }
}
