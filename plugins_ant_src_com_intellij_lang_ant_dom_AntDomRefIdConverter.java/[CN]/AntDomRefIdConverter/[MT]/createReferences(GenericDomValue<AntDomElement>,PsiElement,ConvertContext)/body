{
  final AntDomElement invocationElement=AntSupport.getInvocationAntDomElement(context);
  return new PsiReference[]{new PsiReferenceBase<PsiElement>(element,true){
    public PsiElement resolve(){
      final AntDomElement value=genericDomValue.getValue();
      if (value == null) {
        return null;
      }
      final DomTarget target=DomTarget.getTarget(value,value.getId());
      if (target == null) {
        return null;
      }
      return PomService.convertToPsi(element.getProject(),target);
    }
    @NotNull public Object[] getVariants(){
      if (invocationElement == null) {
        return ArrayUtil.EMPTY_OBJECT_ARRAY;
      }
      final Set<String> variants=new LinkedHashSet<String>();
      invocationElement.getContextAntProject().accept(new AntDomRecursiveVisitor(){
        public void visitAntDomElement(        AntDomElement element){
          final String variant=element.getId().getRawText();
          if (variant != null) {
            variants.add(variant);
          }
          super.visitAntDomElement(element);
        }
      }
);
      return variants.size() > 0 ? variants.toArray(new Object[variants.size()]) : ArrayUtil.EMPTY_OBJECT_ARRAY;
    }
  }
};
}
