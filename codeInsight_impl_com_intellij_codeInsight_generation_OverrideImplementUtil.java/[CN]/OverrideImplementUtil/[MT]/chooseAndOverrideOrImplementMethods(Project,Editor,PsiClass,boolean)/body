{
  LOG.assertTrue(aClass.isValid());
  ApplicationManager.getApplication().assertReadAccessAllowed();
  CandidateInfo[] candidates=getMethodsToOverrideImplement(aClass,toImplement);
  if (candidates.length == 0)   return;
  boolean isJdk15Enabled=LanguageLevel.JDK_1_5.compareTo(PsiUtil.getLanguageLevel(aClass)) <= 0;
  final MemberChooser chooser=new MemberChooser(candidates,false,true,project,!toImplement && isJdk15Enabled);
  chooser.setTitle(toImplement ? CodeInsightBundle.message("methods.to.implement.chooser.title") : CodeInsightBundle.message("methods.to.override.chooser.title"));
  chooser.setCopyJavadocVisible(true);
  chooser.show();
  if (chooser.getExitCode() != DialogWrapper.OK_EXIT_CODE)   return;
  Object[] selectedElements=chooser.getSelectedElements();
  if (selectedElements == null || selectedElements.length == 0)   return;
  final CandidateInfo[] selectedCandidates=new CandidateInfo[selectedElements.length];
  for (int i=0; i < selectedCandidates.length; i++) {
    selectedCandidates[i]=(CandidateInfo)selectedElements[i];
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      overrideOrImplementMethodsInRightPlace(editor,aClass,selectedCandidates,chooser.isCopyJavadoc(),chooser.isInsertOverrideAnnotation());
    }
  }
);
}
