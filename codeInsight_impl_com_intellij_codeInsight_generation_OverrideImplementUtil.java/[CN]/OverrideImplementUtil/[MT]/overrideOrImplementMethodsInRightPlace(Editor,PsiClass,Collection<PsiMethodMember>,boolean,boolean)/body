{
  try {
    PsiGenerationInfo[] resultMembers;
    int offset=editor.getCaretModel().getOffset();
    int lbraceOffset=aClass.getLBrace().getTextOffset();
    if (offset <= lbraceOffset || aClass.isEnum()) {
      ArrayList<PsiGenerationInfo> list=new ArrayList<PsiGenerationInfo>();
      for (      PsiMethodMember candidate : candidates) {
        PsiMethod[] prototypes=overrideOrImplementMethod(aClass,candidate.getElement(),candidate.getSubstitutor(),copyJavadoc,insertAtOverride);
        for (        PsiMethod prototype : prototypes) {
          PsiElement anchor=getDefaultAnchorToOverrideOrImplement(aClass,candidate.getElement(),candidate.getSubstitutor());
          PsiElement result=GenerateMembersUtil.insert(aClass,prototype,anchor,true);
          list.add(new PsiGenerationInfo((PsiMethod)result));
        }
      }
      resultMembers=list.toArray(new PsiGenerationInfo[list.size()]);
    }
 else {
      PsiGenerationInfo[] prototypes=overrideOrImplementMethods(aClass,candidates,copyJavadoc,insertAtOverride);
      resultMembers=GenerateMembersUtil.insertMembersAtOffset(aClass.getContainingFile(),offset,prototypes);
    }
    GenerateMembersUtil.positionCaret(editor,resultMembers[0].getPsiMember(),true);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
