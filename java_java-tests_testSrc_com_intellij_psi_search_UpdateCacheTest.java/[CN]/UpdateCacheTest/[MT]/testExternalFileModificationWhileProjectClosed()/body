{
  VirtualFile root=ProjectRootManager.getInstance(myProject).getContentRoots()[0];
  PsiClass objectClass=myJavaFacade.findClass("java.lang.Object",GlobalSearchScope.allScope(getProject()));
  assertNotNull(objectClass);
  checkUsages(objectClass,new String[]{});
  FileBasedIndex.getInstance().getContainingFiles(TodoIndex.NAME,new TodoIndexEntry("todo",true),GlobalSearchScope.allScope(getProject()));
  final String projectLocation=myProject.getLocation();
  myProject.save();
  final VirtualFile content=ModuleRootManager.getInstance(getModule()).getContentRoots()[0];
  ProjectUtil.closeAndDispose(myProject);
  ((InjectedLanguageManagerImpl)InjectedLanguageManager.getInstance(getProject())).checkInjectorsAreDisposed();
  assertTrue("Project was not disposed",myProject.isDisposed());
  myModule=null;
  final File file=new File(root.getPath(),"1.java");
  assertTrue(file.exists());
  FileUtil.writeToFile(file,"class A{ Object o;}".getBytes());
  root.refresh(false,true);
  LocalFileSystem.getInstance().refresh(false);
  myProject=ProjectManager.getInstance().loadAndOpenProject(projectLocation);
  ((InjectedLanguageManagerImpl)InjectedLanguageManager.getInstance(getProject())).pushInjectors();
  setUpModule();
  setUpJdk();
  ProjectManagerEx.getInstanceEx().setCurrentTestProject(myProject);
  runStartupActivities();
  PsiTestUtil.addSourceContentToRoots(getModule(),content);
  assertNotNull(myProject);
  myPsiManager=(PsiManagerImpl)PsiManager.getInstance(myProject);
  myJavaFacade=(JavaPsiFacadeImpl)JavaPsiFacade.getInstance(myProject);
  objectClass=myJavaFacade.findClass("java.lang.Object",GlobalSearchScope.allScope(getProject()));
  assertNotNull(objectClass);
  checkUsages(objectClass,new String[]{"1.java"});
}
