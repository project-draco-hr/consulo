{
  final ArrayList<Block> result=new ArrayList<Block>();
  if (myNode.getElementType() == ElementType.XML_TEXT) {
    if (getShouldKeepWhiteSpaces()) {
      return result;
    }
    if (keepWhiteSpacesInsideTag(getTag(myNode.getTreeParent()))) {
      return result;
    }
  }
  if (myNode instanceof CompositeElement) {
    ChameleonTransforming.transformChildren(myNode);
    ASTNode child=myNode.getFirstChildNode();
    final Formatter formatter=getFormatter();
    final Wrap attrWrap=formatter.createWrap(getWrapType(getAttributesWrap()),false);
    final Wrap textWrap=formatter.createWrap(getWrapType(getTextWrap()),true);
    final Wrap tagBeginWrap=createTagBeginWrapping(formatter);
    final Wrap tagEndWrap=getTagEndWrapping(formatter);
    final Alignment attrAlignment=formatter.createAlignment();
    final Alignment textAlignment=formatter.createAlignment();
    while (child != null) {
      if (!containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {
        Wrap wrap=chooseWrap(child,tagBeginWrap,tagEndWrap,attrWrap,textWrap);
        Alignment alignment=chooseAlignment(child,attrAlignment,textAlignment);
        result.add(createChildBlock(child,wrap,alignment));
      }
      child=child.getTreeNext();
    }
  }
  return result;
}
