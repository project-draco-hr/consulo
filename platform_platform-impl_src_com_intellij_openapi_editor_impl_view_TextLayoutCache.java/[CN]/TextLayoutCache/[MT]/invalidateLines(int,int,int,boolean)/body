{
  checkDisposed();
  int endLine=Math.min(oldEndLine,newEndLine);
  for (int line=startLine; line <= endLine; line++) {
    LineLayout lineLayout=myLines.get(line);
    if (lineLayout != null) {
      myLines.set(line,keepBidiNotRequiredState && lineLayout.isLtr() ? myBidiNotRequiredMarker : null);
    }
  }
  if (oldEndLine < newEndLine) {
    myLines.addAll(oldEndLine + 1,Collections.nCopies(newEndLine - oldEndLine,(LineLayout)null));
  }
 else   if (oldEndLine > newEndLine) {
    myLines.subList(newEndLine + 1,oldEndLine + 1).clear();
  }
}
