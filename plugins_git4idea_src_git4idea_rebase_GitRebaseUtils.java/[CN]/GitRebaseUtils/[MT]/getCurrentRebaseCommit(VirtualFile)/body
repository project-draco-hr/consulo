{
  File rebaseDir=getRebaseDir(root);
  if (rebaseDir == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("No rebase dir found for " + root.getPath());
    }
    return null;
  }
  File nextFile=new File(rebaseDir,"next");
  int next;
  try {
    next=Integer.parseInt(new String(FileUtil.loadFileText(nextFile,GitUtil.UTF8_ENCODING)).trim());
  }
 catch (  Exception e) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Failed to load next commit number from file " + nextFile.getPath(),e);
    }
    return null;
  }
  File commitFile=new File(rebaseDir,String.format("%04d",next));
  String hash=null;
  String subject=null;
  try {
    BufferedReader in=new BufferedReader(new InputStreamReader(new FileInputStream(commitFile),GitUtil.UTF8_CHARSET));
    try {
      String line;
      while ((line=in.readLine()) != null) {
        if (line.startsWith("From ")) {
          hash=line.substring(5,5 + 40);
        }
        if (line.startsWith("Subject: ")) {
          subject=line.substring("Subject: ".length());
        }
        if (hash != null && subject != null) {
          break;
        }
      }
    }
  finally {
      in.close();
    }
  }
 catch (  Exception e) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Failed to load next commit number from file " + commitFile,e);
    }
    return null;
  }
  if (subject == null || hash == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Unable to extract information from " + commitFile + " "+ hash+ ": "+ subject);
    }
    return null;
  }
  return new CommitInfo(new GitRevisionNumber(hash),subject);
}
