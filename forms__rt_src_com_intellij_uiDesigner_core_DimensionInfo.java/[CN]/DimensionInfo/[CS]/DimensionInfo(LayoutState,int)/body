{
  if (layoutState == null) {
    throw new IllegalArgumentException("layoutState cannot be null");
  }
  if (gap < 0) {
    throw new IllegalArgumentException("invalid gap: " + gap);
  }
  myLayoutState=layoutState;
  myGap=gap;
  myCell=new int[layoutState.getComponentCount()];
  mySpan=new int[layoutState.getComponentCount()];
  for (int i=0; i < layoutState.getComponentCount(); i++) {
    final GridConstraints c=layoutState.getConstraints(i);
    myCell[i]=getOriginalCell(c);
    mySpan[i]=getOriginalSpan(c);
  }
  myStretches=new int[getCellCount()];
  for (int i=0; i < myStretches.length; i++) {
    myStretches[i]=1;
  }
  final ArrayList elimitated=new ArrayList();
  mySpansAfterElimination=(int[])mySpan.clone();
  Util.eliminate((int[])myCell.clone(),mySpansAfterElimination,elimitated);
  myCellSizePolicies=new int[getCellCount()];
  for (int i=0; i < myCellSizePolicies.length; i++) {
    myCellSizePolicies[i]=getCellSizePolicyImpl(i,elimitated);
  }
}
