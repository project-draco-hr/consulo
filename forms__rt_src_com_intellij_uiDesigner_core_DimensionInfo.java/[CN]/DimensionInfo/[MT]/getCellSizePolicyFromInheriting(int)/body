{
  int nonInheritingComponentsInCell=0;
  int policyFromInheriting=-1;
  for (int i=getComponentCount() - 1; i >= 0; i--) {
    if (!componentBelongsCell(i,cellIndex)) {
      continue;
    }
    Component child=getComponent(i);
    GridConstraints c=getConstraints(i);
    if (c.isUseParentLayout() && child instanceof Container) {
      Container container=(Container)child;
      if (container.getLayout() instanceof GridLayoutManager) {
        GridLayoutManager grid=(GridLayoutManager)container.getLayout();
        grid.validateInfos(container);
        DimensionInfo info=(this instanceof HorizontalInfo) ? grid.myHorizontalInfo : grid.myVerticalInfo;
        final int policy=info.calcCellSizePolicy(cellIndex - getOriginalCell(c));
        if (policyFromInheriting == -1) {
          policyFromInheriting=policy;
        }
 else {
          policyFromInheriting|=policy;
        }
      }
 else       if (container.getComponentCount() == 1 && container.getComponent(0) instanceof Container) {
        Container childContainer=(Container)container.getComponent(0);
        if (childContainer.getLayout() instanceof GridLayoutManager) {
          GridLayoutManager grid=(GridLayoutManager)childContainer.getLayout();
          grid.validateInfos(childContainer);
          DimensionInfo info=(this instanceof HorizontalInfo) ? grid.myHorizontalInfo : grid.myVerticalInfo;
          final int policy=info.calcCellSizePolicy(cellIndex - getOriginalCell(c));
          if (policyFromInheriting == -1) {
            policyFromInheriting=policy;
          }
 else {
            policyFromInheriting|=policy;
          }
        }
      }
    }
 else     if (getOriginalCell(c) == cellIndex && getOriginalSpan(c) == 1) {
      nonInheritingComponentsInCell++;
    }
  }
  if (nonInheritingComponentsInCell > 0) {
    return -1;
  }
  return policyFromInheriting;
}
