{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiElement container=null;
  WeakReference ref=(WeakReference)editor.getUserData(MY_LAST_HINT_KEY);
  if (ref != null) {
    LightweightHint hint=(LightweightHint)ref.get();
    if (hint != null && hint.isVisible()) {
      hint.hide();
      container=(PsiElement)hint.getUserData(CONTAINER_KEY);
      if (!container.isValid()) {
        container=null;
      }
    }
  }
  if (container == null) {
    int offset=editor.getCaretModel().getOffset();
    container=file.findElementAt(offset);
    if (container == null)     return;
  }
  while (true) {
    container=findContainer(container);
    if (container == null)     return;
    if (!isDeclarationVisible(container,editor))     break;
  }
  final TextRange range=EditorFragmentComponent.getDeclarationRange(container);
  final PsiElement _container=container;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      LightweightHint hint=EditorFragmentComponent.showEditorFragmentHint(editor,range,true);
      hint.putUserData(CONTAINER_KEY,_container);
      editor.putUserData(MY_LAST_HINT_KEY,new WeakReference(hint));
    }
  }
);
}
