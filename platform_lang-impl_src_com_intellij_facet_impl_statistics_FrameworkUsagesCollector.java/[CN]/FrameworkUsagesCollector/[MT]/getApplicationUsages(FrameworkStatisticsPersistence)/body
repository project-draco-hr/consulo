{
  final Map<String,Integer> facets=new HashMap<String,Integer>();
  for (  Set<UsageDescriptor> frameworks : persistence.getFrameworks().values()) {
    for (    UsageDescriptor framework : frameworks) {
      final String key=framework.getKey();
      final Integer count=facets.get(key);
      facets.put(key,count == null ? 1 : count.intValue() + 1);
    }
  }
  return ContainerUtil.map2Set(facets.entrySet(),new Function<Map.Entry<String,Integer>,UsageDescriptor>(){
    @Override public UsageDescriptor fun(    Map.Entry<String,Integer> facet){
      return new UsageDescriptor(getGroupId(),facet.getKey(),facet.getValue());
    }
  }
);
}
