{
  final Module module=VfsUtil.getModuleForFile(myProject,formFile);
  if (module == null) {
    return getClass().getClassLoader();
  }
  final ClassLoader cachedLoader=myModule2ClassLoader.get(module);
  if (cachedLoader != null) {
    return cachedLoader;
  }
  final String runClasspath=ProjectRootsTraversing.collectRoots(module,ProjectRootsTraversing.FULL_CLASSPATH_RECURSIVE).getPathsString();
  final ArrayList<URL> urls=new ArrayList<URL>();
  final StringTokenizer tokenizer=new StringTokenizer(runClasspath,File.pathSeparator);
  while (tokenizer.hasMoreTokens()) {
    final String s=tokenizer.nextToken();
    try {
      urls.add(new File(s).toURI().toURL());
    }
 catch (    Exception e) {
    }
  }
  try {
    urls.add(new File(PathUtil.getJarPathForClass(Spacer.class)).toURI().toURL());
  }
 catch (  MalformedURLException ignored) {
  }
  final URL[] _urls=urls.toArray(new URL[urls.size()]);
  final ClassLoader classLoader=new IdeaClassLoader(Arrays.asList(_urls),null);
  myModule2ClassLoader.put(module,classLoader);
  return classLoader;
}
