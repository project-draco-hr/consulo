{
  if (name.length() == 0) {
    return null;
  }
  final VirtualFile[] a;
synchronized (this) {
    a=asArray();
  }
  if (a != null) {
    Object encoded=encodeName(name);
    byte[] bytes=encoded instanceof byte[] ? (byte[])encoded : null;
    for (    VirtualFile file : a) {
      if (namesEqual(name,bytes,file))       return (NewVirtualFile)file;
    }
    return createIfNotFound ? createAndFindChildWithEventFire(name) : null;
  }
  final Map<String,VirtualFile> map;
  final VirtualFile file;
synchronized (this) {
    map=ensureAsMap();
    file=map.get(name);
  }
  if (file != null)   return file;
  if (ensureCanonicalName) {
    final NewVirtualFileSystem delegate=getFileSystem();
    VirtualFile fake=new FakeVirtualFile(this,name);
    name=delegate.getCanonicallyCasedName(fake);
    if (name.length() == 0)     return null;
  }
synchronized (this) {
    int id=ourPersistence.getId(this,name);
    if (id > 0) {
      final String shorty=new String(name);
      NewVirtualFile child=createChild(shorty,id);
      map.put(shorty,child);
      return child;
    }
  }
  return null;
}
