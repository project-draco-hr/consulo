{
  if (name.isEmpty()) {
    return null;
  }
  final boolean ignoreCase=!delegate.isCaseSensitive();
  Comparer comparer=getComparer(name,ignoreCase);
  VirtualFileSystemEntry found=doFindChildInArray(comparer);
  if (found != null)   return found;
  if (allChildrenLoaded()) {
    return NULL_VIRTUAL_FILE;
  }
  if (ensureCanonicalName) {
    VirtualFile fake=new FakeVirtualFile(this,name);
    name=delegate.getCanonicallyCasedName(fake);
    if (name.isEmpty())     return null;
  }
synchronized (this) {
    int id=ourPersistence.getId(this,name,delegate);
    if (id <= 0) {
      return null;
    }
    VirtualFileSystemEntry[] array=myChildren;
    long r=findIndexInBoth(array,comparer);
    int indexInReal=(int)(r >> 32);
    int indexInAdopted=(int)r;
    if (indexInAdopted >= 0)     return NULL_VIRTUAL_FILE;
    if (indexInReal >= 0) {
      return array[indexInReal];
    }
    String shorty=new String(name);
    VirtualFileSystemEntry child=createChild(shorty,id,delegate);
    insertChildAt(child,indexInReal,array,ignoreCase);
    return child;
  }
}
