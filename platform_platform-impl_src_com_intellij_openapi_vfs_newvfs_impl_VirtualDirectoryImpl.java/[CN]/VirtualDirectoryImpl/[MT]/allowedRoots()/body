{
  if (insideGettingRoots)   return null;
  Project[] openProjects=ProjectManager.getInstance().getOpenProjects();
  if (openProjects.length == 0)   return null;
  final Set<String> allowed=new THashSet<String>();
  String homePath=PathManager.getHomePath();
  allowed.add(FileUtil.toSystemIndependentName(homePath));
  try {
    URL outUrl=Application.class.getResource("/");
    String output=new File(outUrl.toURI()).getParentFile().getParentFile().getPath();
    allowed.add(FileUtil.toSystemIndependentName(output));
  }
 catch (  URISyntaxException ignored) {
  }
  String javaHome=SystemProperties.getJavaHome();
  allowed.add(FileUtil.toSystemIndependentName(javaHome));
  String tempDirectorySpecific=new File(FileUtil.getTempDirectory()).getParent();
  allowed.add(FileUtil.toSystemIndependentName(tempDirectorySpecific));
  String tempDirectory=System.getProperty("java.io.tmpdir");
  allowed.add(FileUtil.toSystemIndependentName(tempDirectory));
  String userHome=SystemProperties.getUserHome();
  allowed.add(FileUtil.toSystemIndependentName(userHome));
  for (  Project project : openProjects) {
    if (!project.isInitialized()) {
      return null;
    }
    for (    VirtualFile root : ProjectRootManager.getInstance(project).getContentRoots()) {
      allowed.add(root.getPath());
    }
    for (    VirtualFile root : getAllRoots(project)) {
      allowed.add(StringUtil.trimEnd(root.getPath(),JarFileSystem.JAR_SEPARATOR));
    }
    String location=project.getLocation();
    allowed.add(FileUtil.toSystemIndependentName(location));
  }
  for (  String root : additionalRoots) {
    allowed.add(root);
  }
  return allowed;
}
