{
  checkSetModifierProperty(name,value);
  IElementType type=NAME_TO_KEYWORD_TYPE_MAP.get(name);
  CompositeElement treeElement=calcTreeElement();
  ASTNode parentTreeElement=treeElement.getTreeParent();
  if (value) {
    if (parentTreeElement.getElementType() == ElementType.FIELD && parentTreeElement.getTreeParent().getElementType() == ElementType.CLASS && ((PsiClass)SourceTreeToPsiMap.treeElementToPsi(parentTreeElement.getTreeParent())).isInterface()) {
      if (type == PUBLIC_KEYWORD || type == STATIC_KEYWORD || type == FINAL_KEYWORD)       return;
    }
 else     if (parentTreeElement.getElementType() == ElementType.METHOD && parentTreeElement.getTreeParent().getElementType() == ElementType.CLASS && ((PsiClass)SourceTreeToPsiMap.treeElementToPsi(parentTreeElement.getTreeParent())).isInterface()) {
      if (type == PUBLIC_KEYWORD || type == ABSTRACT_KEYWORD)       return;
    }
 else     if (parentTreeElement.getElementType() == ElementType.CLASS && parentTreeElement.getTreeParent().getElementType() == ElementType.CLASS && ((PsiClass)SourceTreeToPsiMap.treeElementToPsi(parentTreeElement.getTreeParent())).isInterface()) {
      if (type == PUBLIC_KEYWORD)       return;
    }
    if (type == PUBLIC_KEYWORD || type == PRIVATE_KEYWORD || type == PROTECTED_KEYWORD || type == null) {
      if (type != PUBLIC_KEYWORD) {
        setModifierProperty(PsiModifier.PUBLIC,false);
      }
      if (type != PRIVATE_KEYWORD) {
        setModifierProperty(PsiModifier.PRIVATE,false);
      }
      if (type != PROTECTED_KEYWORD) {
        setModifierProperty(PsiModifier.PROTECTED,false);
      }
      if (type == null)       return;
    }
    if (TreeUtil.findChild(treeElement,type) == null) {
      TreeElement keyword=Factory.createSingleLeafElement(type,name,0,name.length(),null,getManager());
      treeElement.addInternal(keyword,keyword,null,null);
    }
    if ((type == ABSTRACT_KEYWORD || type == NATIVE_KEYWORD) && parentTreeElement.getElementType() == METHOD) {
    }
  }
 else {
    if (type == null) {
      throw new IncorrectOperationException("Cannot reset package local modifier.");
    }
    ASTNode child=TreeUtil.findChild(treeElement,type);
    if (child != null) {
      SourceTreeToPsiMap.treeElementToPsi(child).delete();
    }
  }
}
