{
  if (getTreeElement() != null) {
    IElementType type=NAME_TO_KEYWORD_TYPE_MAP.get(name);
    PsiElement parent=getParent();
    if (parent instanceof PsiClass) {
      PsiElement pparent=parent.getParent();
      if (pparent instanceof PsiClass && ((PsiClass)pparent).isInterface()) {
        if (type == PUBLIC_KEYWORD) {
          return true;
        }
        if (type == null) {
          return false;
        }
        if (type == STATIC_KEYWORD) {
          return true;
        }
      }
      if (((PsiClass)parent).isInterface()) {
        if (type == ABSTRACT_KEYWORD) {
          return true;
        }
        if (pparent instanceof PsiClass) {
          if (type == STATIC_KEYWORD) {
            return true;
          }
        }
      }
      if (((PsiClass)parent).isEnum()) {
        if (type == STATIC_KEYWORD) {
          return true;
        }
 else         if (type == FINAL_KEYWORD) {
          final PsiField[] fields=((PsiClass)parent).getFields();
          for (          PsiField field : fields) {
            if (field instanceof PsiEnumConstant && ((PsiEnumConstant)field).getInitializingClass() != null)             return false;
          }
          return true;
        }
 else         if (type == ABSTRACT_KEYWORD) {
          final PsiMethod[] methods=((PsiClass)parent).getMethods();
          for (          PsiMethod method : methods) {
            if (method.hasModifierProperty(PsiModifier.ABSTRACT))             return true;
          }
          return false;
        }
      }
    }
 else     if (parent instanceof PsiMethod) {
      PsiClass aClass=((PsiMethod)parent).getContainingClass();
      if (aClass != null && aClass.isInterface()) {
        if (type == PUBLIC_KEYWORD) {
          return true;
        }
        if (type == null) {
          return false;
        }
        if (type == ABSTRACT_KEYWORD) {
          return true;
        }
      }
    }
 else     if (parent instanceof PsiField) {
      if (parent instanceof PsiEnumConstant) {
        return type == PUBLIC_KEYWORD || type == STATIC_KEYWORD || type == FINAL_KEYWORD;
      }
 else {
        PsiClass aClass=((PsiField)parent).getContainingClass();
        if (aClass != null && aClass.isInterface()) {
          if (type == PUBLIC_KEYWORD) {
            return true;
          }
          if (type == null) {
            return false;
          }
          if (type == STATIC_KEYWORD) {
            return true;
          }
          if (type == FINAL_KEYWORD) {
            return true;
          }
        }
      }
    }
    if (type == null) {
      return !hasModifierProperty(PsiModifier.PUBLIC) && !hasModifierProperty(PsiModifier.PRIVATE) && !hasModifierProperty(PsiModifier.PROTECTED);
    }
    ASTNode treeElement=calcTreeElement();
    return TreeUtil.findChild(treeElement,type) != null;
  }
 else {
synchronized (PsiLock.LOCK) {
      long repositoryId=getRepositoryId();
      if (myCachedModifiers < 0) {
        myCachedModifiers=((DeclarationView)getRepositoryManager().getItemView(repositoryId)).getModifiers(repositoryId);
      }
      int flag=NAME_TO_MODIFIER_FLAG_MAP.get(name);
      LOG.assertTrue(flag != 0);
      return (myCachedModifiers & flag) != 0;
    }
  }
}
