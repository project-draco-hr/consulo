{
  final List<Object> results=new ArrayList<Object>();
  if (returnType.isInterface() && !GenericValue.class.isAssignableFrom(returnType)) {
    final List<Object> orderedPrimaryKeys=new ArrayList<Object>();
    final Map<Object,List<Object>> map=new HashMap<Object,List<Object>>();
    for (    final T t : myImplementations) {
      final Object o=method.invoke(t,args);
      if (o instanceof Collection) {
        for (        final Object o1 : (Collection)o) {
          addToMaps(o1,orderedPrimaryKeys,map,results,false);
        }
      }
 else       if (o != null) {
        addToMaps(o,orderedPrimaryKeys,map,results,true);
      }
    }
    for (    final Object primaryKey : orderedPrimaryKeys) {
      final List<Object> objects=map.get(primaryKey);
      if (objects.size() == 1) {
        results.add(objects.get(0));
      }
 else {
        results.add(mergeModels(returnType,objects.toArray()));
      }
    }
  }
 else {
    for (    final T t : myImplementations) {
      final Object o=method.invoke(t,args);
      if (o != null) {
        if (o instanceof Collection) {
          results.addAll((Collection)o);
        }
 else {
          results.add(o);
          break;
        }
      }
    }
  }
  return results;
}
