{
  if (params.length != 1)   return null;
  final Result result=params[0].calculateResult(context);
  if (result == null)   return null;
  Project project=context.getProject();
  PsiExpression expr=MacroUtil.resultToPsiExpression(result,context);
  if (expr == null)   return null;
  PsiType type=expr.getType();
  if (type instanceof PsiArrayType) {
    return new PsiTypeResult(((PsiArrayType)type).getComponentType(),project);
  }
  if (type instanceof PsiClassType) {
    PsiClassType.ClassResolveResult resolveResult=((PsiClassType)type).resolveGenerics();
    PsiClass aClass=resolveResult.getElement();
    if (aClass != null) {
      PsiClass iterableClass=JavaPsiFacade.getInstance(project).findClass("java.lang.Iterable",aClass.getResolveScope());
      if (iterableClass != null) {
        PsiSubstitutor substitutor=TypeConversionUtil.getClassSubstitutor(iterableClass,aClass,resolveResult.getSubstitutor());
        if (substitutor != null) {
          PsiType parameterType=substitutor.substitute(iterableClass.getTypeParameters()[0]);
          if (parameterType instanceof PsiCapturedWildcardType) {
            parameterType=((PsiCapturedWildcardType)parameterType).getWildcard();
          }
          if (parameterType != null) {
            if (parameterType instanceof PsiWildcardType) {
              if (((PsiWildcardType)parameterType).isExtends()) {
                return new PsiTypeResult(((PsiWildcardType)parameterType).getBound(),project);
              }
 else               return null;
            }
            return new PsiTypeResult(parameterType,project);
          }
        }
      }
    }
  }
  return null;
}
