{
  final Ref<String> charsetNameRef=new Ref<String>();
  try {
    new XmlBuilderDriver(content).build(new XmlBuilder(){
      Bag inTag=new HashBag();
      boolean metHttpEquiv=false;
      public ProcessingOrder startTag(      final CharSequence localName,      final String namespace,      final int startoffset,      final int endoffset,      final int headerEndOffset){
        String name=localName.toString().toLowerCase();
        inTag.add(name);
        if (!inTag.contains("head") && !"html".equals(name))         terminate();
        return ProcessingOrder.TAGS_AND_ATTRIBUTES;
      }
      private void terminate(){
        throw TerminateException.INSTANCE;
      }
      public void endTag(      final CharSequence localName,      final String namespace,      final int startoffset,      final int endoffset){
        final String name=localName.toString().toLowerCase();
        if ("head".equals(name)) {
          terminate();
        }
        inTag.remove(name);
        metHttpEquiv=false;
      }
      public void attribute(      final CharSequence localName,      final CharSequence v,      final int startoffset,      final int endoffset){
        final String name=localName.toString().toLowerCase();
        if (inTag.contains("meta")) {
          String value=v.toString();
          if (name.equals("http-equiv")) {
            metHttpEquiv|=value.equals("Content-Type");
          }
          if (metHttpEquiv && name.equals("content")) {
            int start=value.indexOf(CHARSET_PREFIX);
            if (start == -1)             return;
            start+=CHARSET_PREFIX.length();
            int end=value.indexOf(';',start);
            if (end == -1)             end=value.length();
            String charsetName=value.substring(start,end);
            charsetNameRef.set(charsetName);
            terminate();
          }
        }
      }
      public void textElement(      final CharSequence display,      final CharSequence physical,      final int startoffset,      final int endoffset){
      }
      public void entityRef(      final CharSequence ref,      final int startOffset,      final int endOffset){
      }
    }
);
  }
 catch (  TerminateException e) {
    int i=0;
  }
  String name=charsetNameRef.get();
  return CharsetToolkit.forName(name);
}
