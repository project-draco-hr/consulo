{
  ArrayList<AbstractTreeNode> children=new ArrayList<AbstractTreeNode>();
  PsiFile psiFile=getValue();
  final TodoItem[] items=myBuilder.getTodoTreeStructure().getSearchHelper().findTodoItems(psiFile);
  for (int i=0; i < items.length; i++) {
    final TodoItem todoItem=items[i];
    final Document document=PsiDocumentManager.getInstance(getProject()).getDocument(psiFile);
    LOG.assertTrue(todoItem.getTextRange().getEndOffset() < document.getTextLength() + 1);
    final SmartTodoItemPointer pointer=new SmartTodoItemPointer(todoItem,document);
    TodoFilter todoFilter=getToDoFilter();
    if (todoFilter != null) {
      if (todoFilter.contains(todoItem.getPattern())) {
        children.add(new TodoItemNode(getProject(),pointer,myBuilder));
      }
    }
 else {
      children.add(new TodoItemNode(getProject(),pointer,myBuilder));
    }
  }
  Collections.sort(children,SmartTodoItemPointerComparator.ourInstance);
  return children;
}
