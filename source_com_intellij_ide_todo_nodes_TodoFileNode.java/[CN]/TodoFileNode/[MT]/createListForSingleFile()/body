{
  TodoItem[] items=myBuilder.getTodoTreeStructure().getSearchHelper().findTodoItems(getValue());
  ArrayList<AbstractTreeNode> children=new ArrayList<AbstractTreeNode>(items.length);
  for (int i=0; i < items.length; i++) {
    TodoItem todoItem=items[i];
    Document document=PsiDocumentManager.getInstance(getProject()).getDocument(getValue());
    LOG.assertTrue(todoItem.getTextRange().getEndOffset() < document.getTextLength() + 1);
    SmartTodoItemPointer pointer=new SmartTodoItemPointer(todoItem,document);
    TodoFilter toDoFilter=getToDoFilter();
    if (toDoFilter != null) {
      TodoItemNode itemNode=new TodoItemNode(getProject(),pointer,myBuilder);
      if (toDoFilter.contains(todoItem.getPattern())) {
        children.add(itemNode);
      }
    }
 else {
      children.add(new TodoItemNode(getProject(),pointer,myBuilder));
    }
  }
  Collections.sort(children,SmartTodoItemPointerComparator.ourInstance);
  return children;
}
