{
  super.updateImpl(data);
  String newName;
  if (myBuilder.getTodoTreeStructure().isPackagesShown()) {
    newName=getValue().getName();
  }
 else {
    newName=mySingleFileMode ? getValue().getName() : getValue().getVirtualFile().getPresentableUrl();
  }
  int nameEndOffset=newName.length();
  int todoItemCount=myBuilder.getTodoTreeStructure().getTodoItemCount(getValue());
  StringBuffer sb=new StringBuffer(newName);
  sb.append(" ( ");
  if (mySingleFileMode) {
    if (todoItemCount == 0) {
      sb.append("no items found");
    }
 else {
      sb.append("found ").append(todoItemCount).append(" item");
      if (todoItemCount > 1) {
        sb.append('s');
      }
    }
  }
 else {
    sb.append(todoItemCount).append(" item");
    if (todoItemCount > 1) {
      sb.append('s');
    }
  }
  sb.append(" )");
  newName=sb.toString();
  myHighlightedRegions.clear();
  TextAttributes textAttributes=new TextAttributes();
  textAttributes.setForegroundColor(myColor);
  myHighlightedRegions.add(new HighlightedRegion(0,nameEndOffset,textAttributes));
  EditorColorsScheme colorsScheme=UsageTreeColorsScheme.getInstance().getScheme();
  myHighlightedRegions.add(new HighlightedRegion(nameEndOffset,newName.length(),colorsScheme.getAttributes(UsageTreeColors.NUMBER_OF_USAGES)));
}
