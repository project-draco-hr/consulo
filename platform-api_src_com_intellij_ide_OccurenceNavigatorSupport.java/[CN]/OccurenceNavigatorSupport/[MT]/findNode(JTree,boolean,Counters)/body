{
  TreePath selectionPath=tree.getSelectionPath();
  TreeNode selectedNode=null;
  boolean[] ready=new boolean[]{true};
  if (selectionPath != null) {
    selectedNode=(TreeNode)selectionPath.getLastPathComponent();
    ready[0]=false;
  }
  DefaultMutableTreeNode root=(DefaultMutableTreeNode)tree.getModel().getRoot();
  Enumeration enumeration=root.preorderEnumeration();
  ArrayList nodes=new ArrayList();
  while (enumeration.hasMoreElements()) {
    TreeNode node=(TreeNode)enumeration.nextElement();
    nodes.add(node);
  }
  DefaultMutableTreeNode result=null;
  if (forward) {
    for (int i=0; i < nodes.size(); i++) {
      TreeNode node=(TreeNode)nodes.get(i);
      DefaultMutableTreeNode nextNode=getNode(node,selectedNode,ready);
      if (nextNode != null) {
        result=nextNode;
        break;
      }
    }
  }
 else {
    for (int i=nodes.size() - 1; i >= 0; i--) {
      TreeNode node=(TreeNode)nodes.get(i);
      DefaultMutableTreeNode nextNode=getNode(node,selectedNode,ready);
      if (nextNode != null) {
        result=nextNode;
        break;
      }
    }
  }
  if (result == null) {
    return null;
  }
  if (counters != null) {
    counters.myFoundOccurenceNumber=0;
    counters.myOccurencesCount=0;
    for (int i=0; i < nodes.size(); i++) {
      TreeNode node=(TreeNode)nodes.get(i);
      if (!(node instanceof DefaultMutableTreeNode))       continue;
      Navigatable descriptor=createDescriptorForNode((DefaultMutableTreeNode)node);
      if (descriptor == null)       continue;
      counters.myOccurencesCount++;
      if (result == node) {
        counters.myFoundOccurenceNumber=counters.myOccurencesCount;
      }
    }
  }
  return result;
}
