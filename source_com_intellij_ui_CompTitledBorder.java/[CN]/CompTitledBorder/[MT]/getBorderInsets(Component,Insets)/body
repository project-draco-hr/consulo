{
  Insets borderInsets;
  if (border != null) {
    borderInsets=border.getBorderInsets(c);
  }
 else {
    borderInsets=new Insets(0,0,0,0);
  }
  insets.top=EDGE_SPACING + TEXT_SPACING + borderInsets.top;
  insets.right=EDGE_SPACING + TEXT_SPACING + borderInsets.right;
  insets.bottom=EDGE_SPACING + TEXT_SPACING + borderInsets.bottom;
  insets.left=EDGE_SPACING + TEXT_SPACING + borderInsets.left;
  if (c == null || component == null) {
    return insets;
  }
  int compHeight=component.getPreferredSize().height;
switch (titlePosition) {
case ABOVE_TOP:
    insets.top+=compHeight + TEXT_SPACING;
  break;
case TOP:
case DEFAULT_POSITION:
insets.top+=Math.max(compHeight,borderInsets.top) - borderInsets.top;
break;
case BELOW_TOP:
insets.top+=compHeight + TEXT_SPACING;
break;
case ABOVE_BOTTOM:
insets.bottom+=compHeight + TEXT_SPACING;
break;
case BOTTOM:
insets.bottom+=Math.max(compHeight,borderInsets.bottom) - borderInsets.bottom;
break;
case BELOW_BOTTOM:
insets.bottom+=compHeight + TEXT_SPACING;
break;
}
return insets;
}
