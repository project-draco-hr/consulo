{
  if (eliminateInTypeArguments && type instanceof PsiClassType) {
    PsiClassType classType=((PsiClassType)type);
    JavaResolveResult resolveResult=classType.resolveGenerics();
    PsiClass aClass=(PsiClass)resolveResult.getElement();
    if (aClass != null) {
      PsiManager manager=aClass.getManager();
      PsiTypeParameter[] typeParams=aClass.getTypeParameters();
      Map<PsiTypeParameter,PsiType> map=new HashMap<PsiTypeParameter,PsiType>();
      for (      PsiTypeParameter typeParam : typeParams) {
        PsiType substituted=resolveResult.getSubstitutor().substitute(typeParam);
        if (substituted instanceof PsiWildcardType) {
          substituted=((PsiWildcardType)substituted).getBound();
          if (substituted == null)           substituted=PsiType.getJavaLangObject(manager,aClass.getResolveScope());
        }
        map.put(typeParam,substituted);
      }
      PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
      PsiSubstitutor substitutor=factory.createSubstitutor(map);
      type=factory.createType(aClass,substitutor);
    }
  }
 else   if (type instanceof PsiArrayType) {
    return eliminateWildcardsInner(((PsiArrayType)type).getComponentType(),false).createArrayType();
  }
 else   if (type instanceof PsiWildcardType) {
    final PsiType bound=((PsiWildcardType)type).getBound();
    return bound != null ? bound : ((PsiWildcardType)type).getExtendsBound();
  }
  return type;
}
