{
  final Object[] selectedElements=getSelectedElements();
  final Class<? extends Object> elementsClass=getElementsClass(selectedElements);
  myRemoveButton.setEnabled(elementsClass != null && !(elementsClass.isAssignableFrom(ClassesElement.class) || elementsClass.equals(SourcesElement.class) || elementsClass.isAssignableFrom(JavadocElement.class)));
  myRenameLibraryButton.setEnabled(selectedElements.length == 1 && elementsClass != null && elementsClass.equals(LibraryElement.class));
  if (elementsClass != null && elementsClass.isAssignableFrom(ItemElement.class)) {
    myRemoveButton.setText(ProjectBundle.message("library.detach.action"));
  }
 else {
    myRemoveButton.setText(ProjectBundle.message("library.remove.action"));
  }
  if (myEditingModuleLibraries) {
    if (selectedElements.length > 0 && selectedElements[0] instanceof ItemElement) {
      final OrderRootType rootType=((ItemElement)selectedElements[0]).getRootType();
      myRemoveButton.setEnabled(rootType == OrderRootType.SOURCES || rootType == OrderRootType.JAVADOC);
    }
  }
  boolean attachActionsEnabled=selectedElements.length == 1 || getSelectedLibrary() != null;
  myAttachClassesButton.setEnabled(attachActionsEnabled);
  myAttachJavadocsButton.setEnabled(attachActionsEnabled);
  myAttachUrlJavadocsButton.setEnabled(attachActionsEnabled);
  myAttachSourcesButton.setEnabled(attachActionsEnabled);
}
