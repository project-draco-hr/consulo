{
  final Module contextModule=(Module)DataManager.getInstance().getDataContext(myAddLibraryButton).getData(DataConstantsEx.MODULE_CONTEXT);
  myFileChooserDescriptor.setContextModule(contextModule);
  final VirtualFile[] files;
  final String name;
  if (myEditingModuleLibraries) {
    final Pair<String,VirtualFile[]> pair=new LibraryFileChooser(myFileChooserDescriptor,myPanel,false,LibraryTableEditor.this).chooseNameAndFiles();
    files=filterAlreadyAdded(null,pair.getSecond(),OrderRootType.CLASSES);
    name=null;
  }
 else {
    final Pair<String,VirtualFile[]> pair=new LibraryFileChooser(myFileChooserDescriptor,myPanel,true,LibraryTableEditor.this).chooseNameAndFiles();
    files=pair.getSecond();
    name=pair.getFirst();
  }
  if (files == null || files.length == 0) {
    return;
  }
  final Library[] libraryToSelect=new Library[]{null};
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      if (myEditingModuleLibraries) {
        for (int idx=0; idx < files.length; idx++) {
          VirtualFile file=files[idx];
          final Library library=myTableModifiableModel.createLibrary(null);
          getLibraryEditor(library).addRoot(file,OrderRootType.CLASSES);
          libraryToSelect[0]=library;
        }
        commitChanges();
      }
 else {
        final Library library=myTableModifiableModel.createLibrary(name);
        final LibraryEditor libraryEditor=getLibraryEditor(library);
        for (int i=0; i < files.length; i++) {
          libraryEditor.addRoot(files[i],OrderRootType.CLASSES);
        }
        libraryToSelect[0]=library;
      }
    }
  }
);
  librariesChanged(true);
  if (libraryToSelect[0] != null) {
    selectLibrary(libraryToSelect[0],false);
  }
}
