{
  final Module contextModule=(Module)DataManager.getInstance().getDataContext(myAddLibraryButton).getData(DataConstants.MODULE_CONTEXT);
  myFileChooserDescriptor.setContextModule(contextModule);
  final VirtualFile[] files;
  final String name;
  if (myEditingModuleLibraries) {
    final Pair<String,VirtualFile[]> pair=new LibraryFileChooser(myFileChooserDescriptor,myParent,false,LibraryTableEditor.this).chooseNameAndFiles();
    files=filterAlreadyAdded(null,pair.getSecond(),OrderRootType.CLASSES);
    name=null;
  }
 else {
    final Pair<String,VirtualFile[]> pair=new LibraryFileChooser(myFileChooserDescriptor,myParent,true,LibraryTableEditor.this).chooseNameAndFiles();
    files=pair.getSecond();
    name=pair.getFirst();
  }
  if (files == null || files.length == 0) {
    return;
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      if (myEditingModuleLibraries) {
        final Module module=contextModule != null ? contextModule : (Module)DataManager.getInstance().getDataContext().getData(DataConstants.MODULE_CONTEXT);
        for (        VirtualFile file : files) {
          final Library library=myTableModifiableModel.createLibrary(null);
          getLibraryEditor(library).addRoot(file,OrderRootType.CLASSES);
          commitLibrary(library,file.getName(),module);
        }
      }
 else {
        final Library library=myTableModifiableModel.createLibrary(name);
        final LibraryEditor libraryEditor=getLibraryEditor(library);
        for (        VirtualFile file : files) {
          libraryEditor.addRoot(file,OrderRootType.CLASSES);
        }
        commitLibrary(library,null,null);
      }
    }
  }
);
  librariesChanged(true);
}
