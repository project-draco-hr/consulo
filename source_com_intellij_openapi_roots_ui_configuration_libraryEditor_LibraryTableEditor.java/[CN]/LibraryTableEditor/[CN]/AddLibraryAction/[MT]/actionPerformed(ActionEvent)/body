{
  final Module contextModule=(Module)DataManager.getInstance().getDataContext(myAddLibraryButton).getData(DataConstantsEx.MODULE_CONTEXT);
  myFileChooserDescriptor.setContextModule(contextModule);
  final VirtualFile[] files;
  final String name;
  if (myEditingModuleLibraries) {
    final Pair<String,VirtualFile[]> pair=new LibraryFileChooser(myFileChooserDescriptor,myParent,false,LibraryTableEditor.this).chooseNameAndFiles();
    files=filterAlreadyAdded(null,pair.getSecond(),OrderRootType.CLASSES);
    name=null;
  }
 else {
    final Pair<String,VirtualFile[]> pair=new LibraryFileChooser(myFileChooserDescriptor,myParent,true,LibraryTableEditor.this).chooseNameAndFiles();
    files=pair.getSecond();
    name=pair.getFirst();
  }
  if (files == null || files.length == 0) {
    return;
  }
  final Library[] libraryToSelect=new Library[]{null};
  final String[] libraryPresentableName=new String[]{null};
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      if (myEditingModuleLibraries) {
        for (        VirtualFile file : files) {
          final Library library=myTableModifiableModel.createLibrary(null);
          getLibraryEditor(library).addRoot(file,OrderRootType.CLASSES);
          libraryToSelect[0]=library;
          libraryPresentableName[0]=file.getUrl();
        }
      }
 else {
        final Library library=myTableModifiableModel.createLibrary(name);
        final LibraryEditor libraryEditor=getLibraryEditor(library);
        for (        VirtualFile file : files) {
          libraryEditor.addRoot(file,OrderRootType.CLASSES);
        }
        libraryToSelect[0]=library;
      }
    }
  }
);
  librariesChanged(true);
  if (libraryToSelect[0] != null) {
    selectLibrary(libraryToSelect[0],false);
    if (myProject != null) {
      final ProjectRootConfigurable rootConfigurable=ProjectRootConfigurable.getInstance(myProject);
      final LibraryEditor libraryEditor=getLibraryEditor(libraryToSelect[0]);
      if (libraryEditor.hasChanges()) {
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            libraryEditor.commit();
          }
        }
);
      }
      final DefaultMutableTreeNode libraryNode=rootConfigurable.createLibraryNode(libraryToSelect[0],libraryPresentableName[0]);
      if (myNeedToSelect) {
        rootConfigurable.selectNodeInTree(libraryNode);
      }
    }
  }
}
