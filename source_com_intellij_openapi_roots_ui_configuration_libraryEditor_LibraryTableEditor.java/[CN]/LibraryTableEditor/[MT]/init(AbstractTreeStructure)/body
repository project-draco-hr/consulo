{
  myTree=new Tree(new DefaultTreeModel(new DefaultMutableTreeNode()));
  myTree.setRootVisible(false);
  myTree.setShowsRootHandles(true);
  new MyTreeSpeedSearch(myTree);
  myTree.setCellRenderer(new LibraryTreeRenderer());
  final MyTreeSelectionListener treeSelectionListener=new MyTreeSelectionListener();
  myTree.getSelectionModel().addTreeSelectionListener(treeSelectionListener);
  myTreeBuilder=new LibraryTableTreeBuilder(myTree,(DefaultTreeModel)myTree.getModel(),treeStructure);
  myTreePanel.setLayout(new BorderLayout());
  myTreePanel.add(ScrollPaneFactory.createScrollPane(myTree),BorderLayout.CENTER);
  myAddLibraryButton.setText(myEditingModuleLibraries ? ProjectBundle.message("library.add.jar.directory.action") : ProjectBundle.message("library.create.library.action"));
  myAddLibraryButton.addActionListener(new AddLibraryAction());
  myRemoveButton.addActionListener(new RemoveAction());
  if (myEditingModuleLibraries) {
    myRenameLibraryButton.setVisible(false);
  }
 else   if (myRenameLibraryButton.isVisible()) {
    myRenameLibraryButton.addActionListener(new RenameLibraryAction());
  }
  myAttachClassesButton.addActionListener(new AttachClassesAction());
  myAttachJarDirectoriesButton.addActionListener(new AttachJarDirectoriesAction());
  myAttachSourcesButton.addActionListener(new AttachSourcesAction());
  myAttachJavadocsButton.addActionListener(new AttachJavadocAction());
  myAttachUrlJavadocsButton.addActionListener(new AttachUrlJavadocAction());
  treeSelectionListener.updateButtons();
  Disposer.register(this,myTreeBuilder);
}
