{
  String path;
  boolean noQuery=StringUtil.isEmpty(query);
  if (!noQuery) {
    query=encodeUrl(query);
    path="/legacy/issues/search/" + getRepoAuthor() + "/"+ getRepoName()+ "/open/"+ encodeUrl(query);
  }
 else {
    path="/repos/" + getRepoAuthor() + "/"+ getRepoName()+ "/issues";
  }
  JsonElement response=GithubApiUtil.getRequest(getUrl(),getUsername(),getPassword(),path);
  JsonArray issuesArray;
  if (noQuery) {
    if (response == null || !response.isJsonArray()) {
      throw errorFetchingIssues(response);
    }
    issuesArray=response.getAsJsonArray();
  }
 else {
    if (response == null || !response.isJsonObject() || !response.getAsJsonObject().has("issues")) {
      throw errorFetchingIssues(response);
    }
    issuesArray=response.getAsJsonObject().get("issues").getAsJsonArray();
  }
  return parseTasksFromArray(issuesArray);
}
