{
  if (column + softWrapColumnDiff + foldingColumnDiff < 0) {
    throw new IllegalArgumentException(String.format("Attempt to create %s with invalid arguments - resulting column is negative (%d). Given arguments: line=%d, column=%d, " + "soft wrap lines before: %d, soft wrap lines current: %d, soft wrap column diff: %d, folded lines: %d, folding column " + "diff: %d, visual position aware: %b",getClass().getName(),column + softWrapColumnDiff + foldingColumnDiff,line,column,softWrapLinesBeforeCurrentLogicalLine,softWrapLinesOnCurrentLogicalLine,softWrapColumnDiff,foldedLines,foldingColumnDiff,visualPositionAware));
  }
  if (line < 0)   throw new IllegalArgumentException("line must be non negative: " + line);
  if (column < 0)   throw new IllegalArgumentException("column must be non negative: " + column);
  this.line=line;
  this.column=column;
  this.softWrapLinesBeforeCurrentLogicalLine=softWrapLinesBeforeCurrentLogicalLine;
  this.softWrapLinesOnCurrentLogicalLine=softWrapLinesOnCurrentLogicalLine;
  this.softWrapColumnDiff=softWrapColumnDiff;
  this.foldedLines=foldedLines;
  this.foldingColumnDiff=foldingColumnDiff;
  this.visualPositionAware=visualPositionAware;
  this.leansForward=leansForward;
  this.visualPositionLeansRight=visualPositionLeansRight;
}
