{
  try {
    myComponentTree.setDropTargetComponent(null);
    DraggedComponentList dcl=DraggedComponentList.fromTransferable(dtde.getTransferable());
    if (dcl != null) {
      if (processDrop(dcl,dtde.getLocation(),dtde.getDropAction())) {
        myEditor.refreshAndSave(true);
      }
    }
 else {
      ComponentItem componentItem=SimpleTransferable.getData(dtde.getTransferable(),ComponentItem.class);
      if (componentItem != null) {
        myEditor.getMainProcessor().setInsertFeedbackEnabled(false);
        new InsertComponentProcessor(myEditor).processComponentInsert(dtde.getLocation(),null,componentItem,true);
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            PaletteManager.getInstance(myEditor.getProject()).clearActiveItem();
            myEditor.getActiveDecorationLayer().removeFeedback();
            myEditor.getLayeredPane().setCursor(null);
            myEditor.getGlassLayer().requestFocus();
            myEditor.getMainProcessor().setInsertFeedbackEnabled(true);
          }
        }
);
      }
    }
    myDraggedComponentsCopy=null;
    myEditor.repaintLayeredPane();
  }
 catch (  Exception e) {
    LOG.error(e);
  }
}
