{
  final PsiClassType listType=(PsiClassType)listReference.getType();
  if (listType == null) {
    return null;
  }
  final PsiClassType.ClassResolveResult resolveResult=listType.resolveGenerics();
  final PsiClass listClass=resolveResult.getElement();
  final PsiSubstitutor classSubstitutor=resolveResult.getSubstitutor();
  if (listClass == null) {
    return null;
  }
  final Project project=forStatement.getProject();
  final PsiManager manager=forStatement.getManager();
  final PsiClass iterableClass=manager.findClass("java.lang.Iterable",GlobalSearchScope.allScope(project));
  if (iterableClass == null) {
    return null;
  }
  final PsiTypeParameter[] typeParameters=iterableClass.getTypeParameters();
  if (typeParameters.length != 1) {
    return PsiType.getJavaLangObject(forStatement.getManager(),forStatement.getResolveScope());
  }
  final PsiSubstitutor substitutor=TypeConversionUtil.getClassSubstitutor(iterableClass,listClass,classSubstitutor);
  if (substitutor == null) {
    return null;
  }
  PsiType parameterType=substitutor.substitute(typeParameters[0]);
  if (!(parameterType instanceof PsiWildcardType)) {
    return parameterType;
  }
  final PsiWildcardType type=(PsiWildcardType)parameterType;
  parameterType=type.getExtendsBound();
  return parameterType;
}
