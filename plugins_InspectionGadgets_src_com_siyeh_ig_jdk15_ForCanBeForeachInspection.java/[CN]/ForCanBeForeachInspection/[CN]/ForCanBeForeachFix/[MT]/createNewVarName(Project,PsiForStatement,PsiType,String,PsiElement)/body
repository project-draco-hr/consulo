{
  final CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(project);
  @NonNls String baseName;
  if (collectionVariable instanceof PsiVariable) {
    PsiVariable variable=(PsiVariable)collectionVariable;
    String variableName=variable.getName();
    String propertyName=codeStyleManager.variableNameToPropertyName(variableName,codeStyleManager.getVariableKind(variable));
    propertyName=StringUtils.createSingularFromName(propertyName);
    baseName=codeStyleManager.propertyNameToVariableName(propertyName,VariableKind.LOCAL_VARIABLE);
  }
 else   if (containerName != null) {
    baseName=StringUtils.createSingularFromName(containerName);
  }
 else {
    final SuggestedNameInfo suggestions=codeStyleManager.suggestVariableName(VariableKind.LOCAL_VARIABLE,null,null,type);
    final String[] names=suggestions.names;
    if (names != null && names.length > 0) {
      baseName=names[0];
    }
 else {
      baseName="value";
    }
  }
  if (baseName == null || baseName.length() == 0) {
    baseName="value";
  }
  return codeStyleManager.suggestUniqueVariableName(baseName,scope,true);
}
