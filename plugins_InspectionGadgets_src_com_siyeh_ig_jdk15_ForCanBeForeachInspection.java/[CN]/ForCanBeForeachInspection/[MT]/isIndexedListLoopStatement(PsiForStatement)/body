{
  final PsiStatement initialization=forStatement.getInitialization();
  if (!(initialization instanceof PsiDeclarationStatement)) {
    return false;
  }
  final PsiDeclarationStatement declaration=(PsiDeclarationStatement)initialization;
  if (declaration.getDeclaredElements().length != 1) {
    return false;
  }
  final PsiLocalVariable indexVariable=(PsiLocalVariable)declaration.getDeclaredElements()[0];
  final PsiExpression initialValue=indexVariable.getInitializer();
  if (initialValue == null) {
    return false;
  }
  final String initializerText=initialValue.getText();
  if (!"0".equals(initializerText)) {
    return false;
  }
  final PsiExpression condition=forStatement.getCondition();
  if (!isListSizeComparison(condition,indexVariable)) {
    return false;
  }
  final PsiStatement update=forStatement.getUpdate();
  if (!VariableAccessUtils.variableIsIncremented(indexVariable,update)) {
    return false;
  }
  final PsiReferenceExpression collectionReference=getVariableReferenceFromCondition(condition);
  if (collectionReference == null) {
    return false;
  }
  final PsiElement resolved=collectionReference.resolve();
  final PsiStatement body=forStatement.getBody();
  if (resolved instanceof PsiVariable) {
    final PsiVariable variable=(PsiVariable)resolved;
    if (!isIndexVariableOnlyUsedAsListIndex(variable,indexVariable,body)) {
      return false;
    }
    return body != null && !VariableAccessUtils.variableIsAssigned(variable,body);
  }
 else   if (resolved instanceof PsiMethod) {
    return isIndexVariableOnlyUsedAsListIndex(null,indexVariable,body);
  }
 else {
    return false;
  }
}
