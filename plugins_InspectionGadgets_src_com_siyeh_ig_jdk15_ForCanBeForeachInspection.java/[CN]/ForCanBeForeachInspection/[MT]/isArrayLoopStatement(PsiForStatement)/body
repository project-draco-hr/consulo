{
  final PsiStatement initialization=forStatement.getInitialization();
  if (!(initialization instanceof PsiDeclarationStatement)) {
    return false;
  }
  final PsiDeclarationStatement declaration=(PsiDeclarationStatement)initialization;
  if (declaration.getDeclaredElements().length != 1) {
    return false;
  }
  final PsiVariable indexVariable=(PsiVariable)declaration.getDeclaredElements()[0];
  final PsiExpression initialValue=indexVariable.getInitializer();
  if (initialValue == null) {
    return false;
  }
  final PsiManager manager=initialValue.getManager();
  final PsiConstantEvaluationHelper constantEvaluationHelper=JavaPsiFacade.getInstance(manager.getProject()).getConstantEvaluationHelper();
  final Object constant=constantEvaluationHelper.computeConstantExpression(initialValue);
  if (!(constant instanceof Integer)) {
    return false;
  }
  final Integer integer=(Integer)constant;
  if (integer.intValue() != 0) {
    return false;
  }
  final PsiExpression condition=forStatement.getCondition();
  if (!isArrayLengthComparison(condition,indexVariable)) {
    return false;
  }
  final PsiStatement update=forStatement.getUpdate();
  if (!VariableAccessUtils.variableIsIncremented(indexVariable,update)) {
    return false;
  }
  final PsiReferenceExpression arrayReference=getVariableReferenceFromCondition(condition);
  if (arrayReference == null) {
    return false;
  }
  final PsiElement element=arrayReference.resolve();
  if (!(element instanceof PsiVariable)) {
    return false;
  }
  final PsiVariable arrayVariable=(PsiVariable)element;
  final PsiStatement body=forStatement.getBody();
  if (body == null) {
    return true;
  }
  if (!isIndexVariableOnlyUsedAsIndex(arrayVariable,indexVariable,body)) {
    return false;
  }
  if (VariableAccessUtils.variableIsAssigned(arrayVariable,body)) {
    return false;
  }
  return !VariableAccessUtils.arrayContentsAreAssigned(arrayVariable,body);
}
