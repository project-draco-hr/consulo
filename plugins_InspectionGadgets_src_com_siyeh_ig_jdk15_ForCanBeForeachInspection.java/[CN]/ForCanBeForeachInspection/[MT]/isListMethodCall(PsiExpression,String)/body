{
  final PsiExpression strippedExpression=ParenthesesUtils.stripParentheses(expression);
  if (!(strippedExpression instanceof PsiMethodCallExpression)) {
    return false;
  }
  final PsiMethodCallExpression reference=(PsiMethodCallExpression)strippedExpression;
  final PsiReferenceExpression methodExpression=reference.getMethodExpression();
  final PsiExpression qualifierExpression=methodExpression.getQualifierExpression();
  if (!(qualifierExpression instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiElement resolved=methodExpression.resolve();
  if (!(resolved instanceof PsiMethod)) {
    return false;
  }
  final PsiMethod method=(PsiMethod)resolved;
  if (!methodName.equals(method.getName())) {
    return false;
  }
  final PsiClass aClass=method.getContainingClass();
  return ClassUtils.isSubclass(aClass,"java.util.List");
}
