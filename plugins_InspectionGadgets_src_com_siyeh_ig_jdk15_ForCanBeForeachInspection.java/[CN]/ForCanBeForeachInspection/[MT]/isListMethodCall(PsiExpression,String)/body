{
  final PsiExpression strippedExpression=ParenthesesUtils.stripParentheses(expression);
  if (!(strippedExpression instanceof PsiMethodCallExpression))   return false;
  final PsiMethodCallExpression reference=(PsiMethodCallExpression)strippedExpression;
  PsiReferenceExpression methodExpression=reference.getMethodExpression();
  if (methodExpression == null)   return false;
  PsiElement resolved=methodExpression.resolve();
  if (!(resolved instanceof PsiMethod))   return false;
  final PsiMethod method=(PsiMethod)resolved;
  if (!methodName.equals(method.getName()))   return false;
  PsiClass aClass=method.getContainingClass();
  if (aClass == null)   return false;
  Project project=expression.getProject();
  PsiClass javaUtilList=PsiManager.getInstance(project).findClass("java.util.List",GlobalSearchScope.allScope(project));
  if (javaUtilList == null)   return false;
  return InheritanceUtil.isInheritorOrSelf(aClass,javaUtilList,true);
}
