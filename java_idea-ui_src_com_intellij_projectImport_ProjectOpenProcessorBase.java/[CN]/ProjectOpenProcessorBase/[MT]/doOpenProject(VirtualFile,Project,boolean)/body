{
  try {
    final WizardContext wizardContext=new WizardContext(null);
    if (virtualFile.isDirectory()) {
      final String[] supported=getSupportedExtensions();
      for (      VirtualFile file : virtualFile.getChildren()) {
        if (canOpenFile(file,supported)) {
          virtualFile=file;
          break;
        }
      }
    }
    if (!doQuickImport(virtualFile,wizardContext))     return null;
    if (wizardContext.getProjectName() == null) {
      wizardContext.setProjectName(IdeBundle.message("project.import.default.name",getName()) + ProjectFileType.DOT_DEFAULT_EXTENSION);
    }
    wizardContext.setProjectFileDirectory(virtualFile.getParent().getPath());
    Project defaultProject=ProjectManager.getInstance().getDefaultProject();
    Sdk jdk=ProjectRootManager.getInstance(defaultProject).getProjectJdk();
    if (jdk == null) {
      jdk=ProjectJdkTable.getInstance().findMostRecentSdkOfType(JavaSdk.getInstance());
    }
    wizardContext.setProjectJdk(jdk);
    final String projectPath=wizardContext.getProjectFileDirectory() + File.separator + wizardContext.getProjectName()+ ProjectFileType.DOT_DEFAULT_EXTENSION;
    boolean shouldOpenExisting=false;
    File projectFile=new File(projectPath);
    if (!ApplicationManager.getApplication().isHeadlessEnvironment() && projectFile.exists()) {
      int result=Messages.showDialog(projectToClose,IdeBundle.message("project.import.open.existing",projectFile.getName(),projectFile.getParent(),virtualFile.getName()),IdeBundle.message("title.open.project"),new String[]{IdeBundle.message("project.import.open.existing.reimport"),IdeBundle.message("project.import.open.existing.openExisting"),CommonBundle.message("button.cancel")},0,Messages.getQuestionIcon());
      if (result == 2)       return null;
      shouldOpenExisting=result == 1;
    }
    final Project projectToOpen;
    if (shouldOpenExisting) {
      try {
        projectToOpen=ProjectManagerEx.getInstanceEx().loadProject(projectPath);
      }
 catch (      IOException e) {
        return null;
      }
catch (      JDOMException e) {
        return null;
      }
catch (      InvalidDataException e) {
        return null;
      }
    }
 else {
      projectToOpen=ProjectManagerEx.getInstanceEx().newProject(FileUtil.getNameWithoutExtension(projectFile),projectPath,true,false);
      if (projectToOpen == null || !getBuilder().validate(projectToClose,projectToOpen)) {
        return null;
      }
      projectToOpen.save();
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          Sdk jdk=wizardContext.getProjectJdk();
          if (jdk != null)           NewProjectUtil.applyJdkToProject(projectToOpen,jdk);
          final String projectFilePath=wizardContext.getProjectFileDirectory();
          CompilerProjectExtension.getInstance(projectToOpen).setCompilerOutputUrl(getUrl(StringUtil.endsWithChar(projectFilePath,'/') ? projectFilePath + "classes" : projectFilePath + "/classes"));
        }
      }
);
      getBuilder().commit(projectToOpen,null,ModulesProvider.EMPTY_MODULES_PROVIDER);
    }
    if (!forceOpenInNewFrame) {
      NewProjectUtil.closePreviousProject(projectToClose);
    }
    ProjectUtil.updateLastProjectLocation(projectPath);
    ProjectManagerEx.getInstanceEx().openProject(projectToOpen);
    return projectToOpen;
  }
  finally {
    getBuilder().cleanup();
  }
}
