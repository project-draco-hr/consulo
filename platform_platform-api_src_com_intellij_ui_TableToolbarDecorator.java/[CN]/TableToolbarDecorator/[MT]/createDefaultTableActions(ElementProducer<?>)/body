{
  final JTable table=myTable;
  final EditableModel tableModel=(EditableModel)table.getModel();
  myAddAction=new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      TableUtil.stopEditing(table);
      final int rowCount=table.getRowCount();
      if (tableModel instanceof ListTableModel && producer != null) {
        ((ListTableModel)tableModel).addRow(producer.createElement());
      }
 else {
        tableModel.addRow();
      }
      if (rowCount == table.getRowCount())       return;
      final int index=table.getModel().getRowCount() - 1;
      table.editCellAt(index,0);
      table.setRowSelectionInterval(index,index);
      table.setColumnSelectionInterval(0,0);
      table.getParent().repaint();
      final Component editorComponent=table.getEditorComponent();
      if (editorComponent != null) {
        final Rectangle bounds=editorComponent.getBounds();
        table.scrollRectToVisible(bounds);
        editorComponent.requestFocus();
      }
    }
  }
;
  myRemoveAction=new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      TableUtil.stopEditing(table);
      int index=table.getSelectedRow();
      if (0 <= index && index < table.getModel().getRowCount()) {
        tableModel.removeRow(index);
        if (index < table.getModel().getRowCount()) {
          table.setRowSelectionInterval(index,index);
        }
 else {
          if (index > 0) {
            table.setRowSelectionInterval(index - 1,index - 1);
          }
        }
        updateButtons();
      }
      table.getParent().repaint();
      table.requestFocus();
    }
  }
;
  myUpAction=new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      final int row=table.getEditingRow();
      final int col=table.getEditingColumn();
      TableUtil.stopEditing(table);
      final int[] indexes=table.getSelectedRows();
      for (      int index : indexes) {
        if (0 < index && index < table.getModel().getRowCount()) {
          tableModel.exchangeRows(index,index - 1);
          table.setRowSelectionInterval(index - 1,index - 1);
        }
      }
      table.requestFocus();
      if (row > 0 && col != -1) {
        table.editCellAt(row - 1,col);
      }
    }
  }
;
  myDownAction=new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      final int row=table.getEditingRow();
      final int col=table.getEditingColumn();
      TableUtil.stopEditing(table);
      final int[] indexes=table.getSelectedRows();
      for (      int index : indexes) {
        if (0 <= index && index < table.getModel().getRowCount() - 1) {
          tableModel.exchangeRows(index,index + 1);
          table.setRowSelectionInterval(index + 1,index + 1);
        }
      }
      table.requestFocus();
      if (row < table.getRowCount() - 1 && col != -1) {
        table.editCellAt(row + 1,col);
      }
    }
  }
;
}
