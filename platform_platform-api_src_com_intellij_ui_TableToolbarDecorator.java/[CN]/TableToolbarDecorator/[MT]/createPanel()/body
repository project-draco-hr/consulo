{
  final AddRemoveUpDownPanel.Buttons[] buttons=getButtons();
  myPanel=new AddRemoveUpDownPanel(createListener(),myTable,myToolbarPosition == ActionToolbarPosition.TOP || myToolbarPosition == ActionToolbarPosition.BOTTOM,myExtraActions.toArray(new AnActionButton[myExtraActions.size()]),buttons);
  myPanel.setBorder(myBorder);
  final JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(myTable);
  scrollPane.setBorder(IdeBorderFactory.createEmptyBorder(0));
  final JPanel panel=new JPanel(new BorderLayout());
  panel.add(scrollPane,BorderLayout.CENTER);
  panel.add(myPanel,getPlacement());
  if (myModel instanceof EditableModel && buttons.length > 0) {
    updateButtons(myTable,(EditableModel)myModel,myPanel);
    if (myUpAction != null && myUpActionEnabled && myDownAction != null && myDownActionEnabled) {
      TableRowsDnDSupport.install(myTable,(EditableModel)myModel);
    }
    myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
      @Override public void valueChanged(      ListSelectionEvent e){
        updateButtons(myTable,(EditableModel)myModel,myPanel);
      }
    }
);
  }
  panel.setBorder(new LineBorder(UIUtil.getBorderColor()));
  return panel;
}
