{
  final ProjectRootManagerEx projectRootManagerEx=ProjectRootManagerEx.getInstanceEx(myProject);
  try {
    final List<ModifiableRootModel> models=new ArrayList<ModifiableRootModel>(myModuleEditors.size());
    for (    final ModuleEditor moduleEditor : myModuleEditors) {
      removeModuleEditorUIComponent(moduleEditor);
      final ModifiableRootModel model=moduleEditor.applyAndDispose();
      if (model != null) {
        models.add(model);
      }
    }
    J2EEModuleUtilEx.checkJ2EEModulesAcyclic(models);
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        try {
          projectRootManagerEx.setLanguageLevel((LanguageLevel)myLanguageLevelCombo.getSelectedItem());
          ((ProjectEx)myProject).setSavePathsRelative(myRbRelativePaths.isSelected());
          final ModifiableRootModel[] rootModels=models.toArray(new ModifiableRootModel[models.size()]);
          projectRootManagerEx.multiCommit(myModuleModel,rootModels);
        }
  finally {
          myModuleModel=ModuleManager.getInstance(myProject).getModifiableModel();
        }
      }
    }
);
    if (!J2EEModuleUtilEx.checkDependentModulesOutputPathConsistency(myProject,J2EEModuleUtil.getAllJ2EEModules(myProject),true)) {
      throw new ConfigurationException(null);
    }
    ApplicationManager.getApplication().saveAll();
  }
  finally {
    refreshUI();
  }
}
