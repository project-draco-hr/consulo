{
  final ProjectRootManagerEx projectRootManagerEx=ProjectRootManagerEx.getInstanceEx(myProject);
  String warningMessage="";
  try {
    List<ModifiableRootModel> modelsToCheck=new ArrayList<ModifiableRootModel>(myModuleEditors.size());
    for (    final ModuleEditor moduleEditor : myModuleEditors) {
      final ModifiableRootModel model=moduleEditor.getModifiableRootModel();
      if (model != null) {
        modelsToCheck.add(model);
      }
    }
    projectRootManagerEx.checkCircularDependency(modelsToCheck.toArray(new ModifiableRootModel[modelsToCheck.size()]),myModuleModel);
  }
 catch (  ModuleCircularDependencyException e) {
    warningMessage=ProjectBundle.message("module.circular.dependency.warning",e.getModuleName1(),e.getModuleName2());
  }
  myWarningLabel.setIcon(warningMessage.length() > 0 ? Messages.getWarningIcon() : null);
  myWarningLabel.setText(warningMessage);
}
