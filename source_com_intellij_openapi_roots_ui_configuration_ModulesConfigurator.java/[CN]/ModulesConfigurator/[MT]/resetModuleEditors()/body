{
  for (Iterator it=myModuleEditors.iterator(); it.hasNext(); ) {
    final ModuleEditor moduleEditor=(ModuleEditor)it.next();
    moduleEditor.removeChangeListener(this);
  }
  myModuleEditors.clear();
  final DefaultListModel listModel=(DefaultListModel)myModuleEditorsList.getModel();
  listModel.clear();
  final Module[] modules=myModuleModel.getModules();
  if (modules.length > 0) {
    for (int idx=0; idx < modules.length; idx++) {
      createModuleEditor(modules[idx]);
    }
    Collections.sort(myModuleEditors,myModuleEditorComparator);
    for (Iterator<ModuleEditor> it=myModuleEditors.iterator(); it.hasNext(); ) {
      listModel.addElement(new ModuleEditorWrapper(it.next()));
    }
  }
  updateCircularDependencyWarning();
}
