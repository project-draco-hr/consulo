{
  if (myModuleModel.isChanged()) {
    return true;
  }
  for (  ModuleEditor moduleEditor : myModuleEditors) {
    if (moduleEditor.isModified()) {
      return true;
    }
  }
  final ProjectRootManagerEx projectRootManagerEx=ProjectRootManagerEx.getInstanceEx(myProject);
  if (myShown) {
    if (!projectRootManagerEx.getLanguageLevel().equals(myLanguageLevelCombo.getSelectedItem())) {
      return true;
    }
    final String compilerOutput=projectRootManagerEx.getCompilerOutputUrl();
    if (!Comparing.strEqual(VfsUtil.urlToPath(compilerOutput),myProjectCompilerOutput.getText()))     return true;
    if (myProjectJdkConfigurable.isModified())     return true;
    if (((ProjectEx)myProject).isSavePathsRelative() != myRbRelativePaths.isSelected()) {
      return true;
    }
  }
  return myModified || !J2EEModuleUtilEx.checkDependentModulesOutputPathConsistency(myProject,J2EEModuleUtil.getAllJ2EEModules(myProject),false);
}
