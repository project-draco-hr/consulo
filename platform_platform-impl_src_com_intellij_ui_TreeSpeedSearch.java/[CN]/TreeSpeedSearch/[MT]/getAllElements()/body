{
  if (myCanExpand) {
    final Object root=myComponent.getModel().getRoot();
    if (root instanceof DefaultMutableTreeNode || root instanceof PathAwareTreeNode) {
      final List<TreePath> paths=new ArrayList<TreePath>();
      TreeUtil.traverseDepth((TreeNode)root,new TreeUtil.Traverse(){
        @Override public boolean accept(        Object node){
          if (node instanceof DefaultMutableTreeNode) {
            paths.add(new TreePath(((DefaultMutableTreeNode)node).getPath()));
          }
 else           if (node instanceof PathAwareTreeNode) {
            paths.add(((PathAwareTreeNode)node).getPath());
          }
          return true;
        }
      }
);
      return paths.toArray(new TreePath[paths.size()]);
    }
  }
  TreePath[] paths=new TreePath[myComponent.getRowCount()];
  for (int i=0; i < paths.length; i++) {
    paths[i]=myComponent.getPathForRow(i);
  }
  return paths;
}
