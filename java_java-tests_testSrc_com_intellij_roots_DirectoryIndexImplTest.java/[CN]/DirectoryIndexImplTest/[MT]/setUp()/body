{
  super.setUp();
  final File root=createTempDirectory();
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        myRootVFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(root);
        myModule1Dir=myRootVFile.createChildDirectory(null,"module1");
        mySrcDir1=myModule1Dir.createChildDirectory(null,"src1");
        myPack1Dir=mySrcDir1.createChildDirectory(null,"pack1");
        myTestSrc1=mySrcDir1.createChildDirectory(null,"testSrc");
        myPack2Dir=myTestSrc1.createChildDirectory(null,"pack2");
        myLibDir=myModule1Dir.createChildDirectory(null,"lib");
        myLibSrcDir=myLibDir.createChildDirectory(null,"src");
        myLibClsDir=myLibDir.createChildDirectory(null,"cls");
        myModule2Dir=myModule1Dir.createChildDirectory(null,"module2");
        mySrcDir2=myModule2Dir.createChildDirectory(null,"src2");
        myCvsDir=mySrcDir2.createChildDirectory(null,"CVS");
        myExcludeDir=mySrcDir2.createChildDirectory(null,"excluded");
        myModule3Dir=myRootVFile.createChildDirectory(null,"module3");
        myOutputDir=myRootVFile.createChildDirectory(null,"out");
        myModule1OutputDir=myOutputDir.createChildDirectory(null,"module1");
        CompilerProjectExtension.getInstance(myProject).setCompilerOutputUrl(myOutputDir.getUrl());
{
          ModuleRootModificationUtil.setModuleSdk(myModule,null);
          PsiTestUtil.addContentRoot(myModule,myModule1Dir);
          PsiTestUtil.addSourceRoot(myModule,mySrcDir1);
          PsiTestUtil.addSourceRoot(myModule,myTestSrc1,true);
        }
        ModuleManager moduleManager=ModuleManager.getInstance(myProject);
{
          VirtualFile moduleFile=myModule2Dir.createChildData(null,"module2.iml");
          myModule2=moduleManager.newModule(moduleFile.getPath(),StdModuleTypes.JAVA.getId());
          ModifiableRootModel rootModel=ModuleRootManager.getInstance(myModule2).getModifiableModel();
          ContentEntry contentEntry=rootModel.addContentEntry(myModule2Dir);
          contentEntry.addSourceFolder(mySrcDir2,false);
          contentEntry.addExcludeFolder(myExcludeDir);
          Library.ModifiableModel libraryModel=rootModel.getModuleLibraryTable().createLibrary().getModifiableModel();
          libraryModel.addRoot(myLibClsDir,OrderRootType.CLASSES);
          libraryModel.addRoot(myLibSrcDir,OrderRootType.SOURCES);
          libraryModel.commit();
          rootModel.commit();
        }
{
          VirtualFile moduleFile=myModule3Dir.createChildData(null,"module3.iml");
          myModule3=moduleManager.newModule(moduleFile.getPath(),StdModuleTypes.JAVA.getId());
          PsiTestUtil.addContentRoot(myModule3,myModule3Dir);
          ModuleRootModificationUtil.addDependency(myModule3,myModule2);
        }
      }
 catch (      IOException e) {
        LOG.error(e);
      }
    }
  }
);
  myIndex=DirectoryIndex.getInstance(myProject);
}
