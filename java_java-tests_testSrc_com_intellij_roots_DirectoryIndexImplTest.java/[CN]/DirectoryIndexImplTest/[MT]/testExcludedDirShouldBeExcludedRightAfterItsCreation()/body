{
  VirtualFile excluded=myModule1Dir.createChildDirectory(null,"excluded");
  VirtualFile projectOutput=myModule1Dir.createChildDirectory(null,"projectOutput");
  VirtualFile module2Output=myModule1Dir.createChildDirectory(null,"module2Output");
  VirtualFile module2TestOutput=myModule2Dir.createChildDirectory(null,"module2TestOutput");
  assertNotNull(myIndex.getInfoForDirectory(excluded));
  assertNotNull(myIndex.getInfoForDirectory(projectOutput));
  assertNotNull(myIndex.getInfoForDirectory(module2Output));
  assertNotNull(myIndex.getInfoForDirectory(module2TestOutput));
  CompilerProjectExtension.getInstance(myProject).setCompilerOutputUrl(projectOutput.getUrl());
  ModifiableRootModel m=ModuleRootManager.getInstance(myModule).getModifiableModel();
  ContentEntry[] ee=m.getContentEntries();
  assertEquals(1,ee.length);
  ee[0].addExcludeFolder(excluded);
  m.commit();
  m=ModuleRootManager.getInstance(myModule2).getModifiableModel();
  final CompilerModuleExtension compilerModuleExtension=m.getModuleExtension(CompilerModuleExtension.class);
  compilerModuleExtension.setCompilerOutputPath(module2Output);
  compilerModuleExtension.setCompilerOutputPathForTests(module2TestOutput);
  compilerModuleExtension.setExcludeOutput(true);
  compilerModuleExtension.inheritCompilerOutputPath(false);
  m.commit();
  assertNull(myIndex.getInfoForDirectory(excluded));
  assertNull(myIndex.getInfoForDirectory(projectOutput));
  assertNull(myIndex.getInfoForDirectory(module2Output));
  assertNull(myIndex.getInfoForDirectory(module2TestOutput));
  excluded.delete(null);
  projectOutput.delete(null);
  module2Output.delete(null);
  module2TestOutput.delete(null);
  final List<Boolean> isExcluded=new ArrayList<Boolean>();
  VirtualFileListener l=new VirtualFileAdapter(){
    @Override public void fileCreated(    VirtualFileEvent e){
      isExcluded.add(myIndex.getInfoForDirectory(e.getFile()) == null);
    }
  }
;
  VirtualFileManager.getInstance().addVirtualFileListener(l);
  try {
    excluded=myModule1Dir.createChildDirectory(null,excluded.getName());
    projectOutput=myModule1Dir.createChildDirectory(null,projectOutput.getName());
    module2Output=myModule1Dir.createChildDirectory(null,module2Output.getName());
    module2TestOutput=myModule2Dir.createChildDirectory(null,module2TestOutput.getName());
  }
  finally {
    VirtualFileManager.getInstance().removeVirtualFileListener(l);
  }
  assertNull(myIndex.getInfoForDirectory(excluded));
  assertNull(myIndex.getInfoForDirectory(projectOutput));
  assertNull(myIndex.getInfoForDirectory(module2Output));
  assertNull(myIndex.getInfoForDirectory(module2TestOutput));
  assertEquals(4,isExcluded.size());
  assertTrue(isExcluded.get(0));
  assertTrue(isExcluded.get(1));
  assertTrue(isExcluded.get(2));
  assertTrue(isExcluded.get(3));
}
