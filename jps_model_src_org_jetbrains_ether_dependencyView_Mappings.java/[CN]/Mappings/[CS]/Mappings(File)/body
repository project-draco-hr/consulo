{
  context=new DependencyContext(rootDir);
  classToSubclasses=new PersistentMaplet<DependencyContext.S,DependencyContext.S>(DependencyContext.getTableFile(rootDir,classToSubclassesName),DependencyContext.descriptorS,DependencyContext.descriptorS,stringSetConstructor);
  classToClassDependency=new PersistentMaplet<DependencyContext.S,DependencyContext.S>(DependencyContext.getTableFile(rootDir,classToClassName),DependencyContext.descriptorS,DependencyContext.descriptorS,stringSetConstructor);
  sourceFileToClasses=new PersistentMaplet<DependencyContext.S,ClassRepr>(DependencyContext.getTableFile(rootDir,sourceToClassName),DependencyContext.descriptorS,ClassRepr.externalizer(context),classSetConstructor);
  sourceFileToUsages=new HashMap<DependencyContext.S,UsageRepr.Cluster>();
  sourceFileToAnnotationUsages=new TransientMaplet<DependencyContext.S,UsageRepr.Usage>(usageSetConstructor);
  classToSourceFile=new HashMap<DependencyContext.S,DependencyContext.S>();
  formToClass=new HashMap<DependencyContext.S,DependencyContext.S>();
  classToForm=new HashMap<DependencyContext.S,DependencyContext.S>();
}
