{
  context=new DependencyContext(rootDir);
  classToSubclasses=new PersistentMaplet<DependencyContext.S,DependencyContext.S>(DependencyContext.getTableFile(rootDir,classToSubclassesName),DependencyContext.descriptorS,DependencyContext.descriptorS,stringSetConstructor);
  classToClassDependency=new PersistentMaplet<DependencyContext.S,DependencyContext.S>(DependencyContext.getTableFile(rootDir,classToClassName),DependencyContext.descriptorS,DependencyContext.descriptorS,stringSetConstructor);
  sourceFileToClasses=new PersistentMaplet<DependencyContext.S,ClassRepr>(DependencyContext.getTableFile(rootDir,sourceToClassName),DependencyContext.descriptorS,ClassRepr.externalizer(context),classSetConstructor);
  sourceFileToAnnotationUsages=new PersistentMaplet<DependencyContext.S,UsageRepr.Usage>(DependencyContext.getTableFile(rootDir,sourceToAnnotationsName),DependencyContext.descriptorS,UsageRepr.externalizer(context),usageSetConstructor);
  sourceFileToUsages=RW.readMap(r,context.reader,UsageRepr.clusterReader(context),new HashMap<DependencyContext.S,UsageRepr.Cluster>());
  classToSourceFile=RW.readMap(r,context.reader,context.reader,new HashMap<DependencyContext.S,DependencyContext.S>());
  formToClass=new HashMap<DependencyContext.S,DependencyContext.S>();
  classToForm=new HashMap<DependencyContext.S,DependencyContext.S>();
}
