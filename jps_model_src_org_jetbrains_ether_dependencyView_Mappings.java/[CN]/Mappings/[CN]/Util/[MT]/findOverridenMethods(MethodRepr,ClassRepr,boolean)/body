{
  final Set<Pair<MethodRepr,ClassRepr>> result=new HashSet<Pair<MethodRepr,ClassRepr>>();
  final MethodRepr.Predicate predicate=bySpecificity ? lessSpecific(m) : MethodRepr.equalByJavaRules(m);
  new Object(){
    public void run(    final ClassRepr c){
      final int[] supers=c.getSupers();
      for (      int succName : supers) {
        final ClassRepr r=reprByName(succName);
        if (r != null) {
          boolean cont=true;
          final Collection<MethodRepr> methods=r.findMethods(predicate);
          for (          MethodRepr mm : methods) {
            if (isVisibleIn(r,mm,c)) {
              result.add(new Pair<MethodRepr,ClassRepr>(mm,r));
              cont=false;
            }
          }
          if (cont) {
            run(r);
          }
        }
 else {
          result.add(new Pair<MethodRepr,ClassRepr>(MOCK_METHOD,MOCK_CLASS));
        }
      }
    }
  }
.run(c);
  return result;
}
