{
  final ClassRepr repr=reprByName(reflcass);
  if (repr != null) {
    if (!root) {
      final Collection members=isField ? repr.fields : repr.methods;
      for (      Object o : members) {
        final ProtoMember m=(ProtoMember)o;
        if (m.name.equals(name)) {
          return;
        }
      }
      acc.add(reflcass);
    }
    final Collection<DependencyContext.S> subclasses=classToSubclasses.get(reflcass);
    if (subclasses != null) {
      for (      DependencyContext.S subclass : subclasses) {
        propagateMemberAccessRec(acc,isField,false,name,subclass);
      }
    }
  }
}
