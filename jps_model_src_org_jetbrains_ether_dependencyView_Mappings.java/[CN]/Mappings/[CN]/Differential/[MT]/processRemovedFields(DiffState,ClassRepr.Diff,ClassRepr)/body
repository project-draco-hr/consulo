{
  debug("Processing removed fields:");
  for (  final FieldRepr f : diff.fields().removed()) {
    debug("Field: ",f.name);
    if ((f.access & Opcodes.ACC_PRIVATE) == 0 && (f.access & DESPERATE_MASK) == DESPERATE_MASK && f.hasValue()) {
      debug("Field had value and was (non-private) final static => a switch to non-incremental mode requested");
      if (myConstantSearch != null) {
        myDelayedWorks.addConstantWork(it.name,f,true,false);
      }
 else {
        if (!incrementalDecision(it.name,f,myAffectedFiles,myFilter)) {
          debug("End of Differentiate, returning false");
          return false;
        }
      }
    }
    final TIntHashSet propagated=myUpdated.propagateFieldAccess(f.name,it.name);
    myUpdated.affectFieldUsages(f,propagated,f.createUsage(myContext,it.name),state.myAffectedUsages,state.myDependants);
  }
  debug("End of removed fields processing");
  return true;
}
