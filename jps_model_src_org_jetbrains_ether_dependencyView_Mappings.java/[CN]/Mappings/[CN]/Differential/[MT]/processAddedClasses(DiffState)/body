{
  debug("Processing added classes:");
  for (  final ClassRepr c : state.myClassDiff.added()) {
    debug("Class name: ",c.name);
    myDelta.addChangedClass(c.name);
    for (    final int sup : c.getSupers()) {
      myDelta.registerAddedSuperClass(c.name,sup);
    }
    if (!myPreprocessOnly) {
      final TIntHashSet depClasses=myClassToClassDependency.get(c.name);
      if (depClasses != null) {
        final TIntHashSet fileNames=new TIntHashSet(DEFAULT_SET_CAPACITY,DEFAULT_SET_LOAD_FACTOR);
        depClasses.forEach(new TIntProcedure(){
          @Override public boolean execute(          int depClass){
            final int fName=myClassToSourceFile.get(depClass);
            if (fName > 0) {
              fileNames.add(fName);
            }
            return true;
          }
        }
);
        fileNames.forEach(new TIntProcedure(){
          @Override public boolean execute(          int fName){
            final String f=myContext.getValue(fName);
            final File theFile=new File(f);
            if (myFilter == null || myFilter.accept(theFile)) {
              debug("Adding dependent file ",f);
              myAffectedFiles.add(theFile);
            }
            return true;
          }
        }
);
      }
    }
  }
  debug("End of added classes processing.");
}
