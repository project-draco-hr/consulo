{
  if (cr == null) {
    cr=new Util().reprByName(className);
  }
  if (cr != null) {
    for (    final int superSomething : cr.getSupers()) {
      myClassToSubclasses.removeFrom(superSomething,cr.name);
    }
    final int sourceFile=myClassToSourceFile.get(className);
    if (sourceFile > 0) {
      final Collection<UsageRepr.Cluster> clusters=mySourceFileToUsages.get(sourceFile);
      if (clusters != null) {
        for (        final UsageRepr.Cluster cluster : clusters) {
          final Set<UsageRepr.Usage> usages=cluster.getUsages();
          if (usages != null) {
            for (            final UsageRepr.Usage u : usages) {
              if (u instanceof UsageRepr.ClassUsage) {
                final TIntHashSet residents=cluster.getResidence(u);
                if (residents != null && residents.contains(cr.name)) {
                  myClassToClassDependency.removeFrom(((UsageRepr.ClassUsage)u).className,cr.name);
                }
              }
            }
          }
        }
      }
    }
  }
  myClassToClassDependency.remove(className);
  myClassToSubclasses.remove(className);
  myClassToSourceFile.remove(className);
}
