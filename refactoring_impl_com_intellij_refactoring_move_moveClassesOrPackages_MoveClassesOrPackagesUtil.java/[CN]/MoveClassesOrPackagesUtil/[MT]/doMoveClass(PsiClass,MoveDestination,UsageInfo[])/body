{
  PsiFile file=aClass.getContainingFile();
  PsiDirectory newDirectory=moveDestination.getTargetDirectory(file);
  PsiClass newClass;
  if (file instanceof PsiJavaFile && ((PsiJavaFile)file).getClasses().length > 1) {
    correctSelfReferences(aClass,newDirectory.getPackage());
    final PsiClass created=newDirectory.createClass(aClass.getName());
    if (aClass.getDocComment() == null) {
      final PsiDocComment createdDocComment=created.getDocComment();
      if (createdDocComment != null) {
        aClass.addAfter(createdDocComment,null);
      }
    }
    newClass=(PsiClass)created.replace(aClass);
    aClass.delete();
  }
 else {
    newClass=aClass;
    if (!newDirectory.equals(file.getContainingDirectory())) {
      aClass.getManager().moveFile(file,newDirectory);
      if (file instanceof PsiJavaFile) {
        setPackageStatement((PsiJavaFile)file,newDirectory.getPackage());
      }
    }
  }
  for (  UsageInfo usage1 : usages) {
    MoveRenameUsageInfo usage=(MoveRenameUsageInfo)usage1;
    if (usage.getElement() == null)     continue;
    PsiReference reference=usage.getReference();
    if (reference != null) {
      PsiElement parent=reference.getElement().getParent();
      if (parent instanceof PsiImportStatement) {
        if (parent.getContainingFile().getContainingDirectory().equals(newDirectory)) {
          parent.delete();
          continue;
        }
      }
      reference.bindToElement(newClass);
    }
  }
  return newClass;
}
