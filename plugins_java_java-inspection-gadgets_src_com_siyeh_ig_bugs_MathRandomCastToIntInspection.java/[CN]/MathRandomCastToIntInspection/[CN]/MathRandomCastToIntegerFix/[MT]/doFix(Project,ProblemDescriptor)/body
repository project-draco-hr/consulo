{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiTypeCastExpression)) {
    return;
  }
  final PsiTypeCastExpression typeCastExpression=(PsiTypeCastExpression)parent;
  final PsiElement grandParent=typeCastExpression.getParent();
  if (!(grandParent instanceof PsiPolyadicExpression)) {
    return;
  }
  final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)grandParent;
  final PsiExpression operand=typeCastExpression.getOperand();
  if (operand == null) {
    return;
  }
  @NonNls final StringBuilder newExpression=new StringBuilder();
  newExpression.append("(int)(");
  final PsiExpression[] operands=polyadicExpression.getOperands();
  for (  final PsiExpression expression : operands) {
    final PsiJavaToken token=polyadicExpression.getTokenBeforeOperand(expression);
    if (token != null) {
      newExpression.append(token.getText());
    }
    if (typeCastExpression.equals(expression)) {
      newExpression.append(operand.getText());
    }
 else {
      newExpression.append(expression.getText());
    }
  }
  newExpression.append(')');
  replaceExpression(polyadicExpression,newExpression.toString());
}
