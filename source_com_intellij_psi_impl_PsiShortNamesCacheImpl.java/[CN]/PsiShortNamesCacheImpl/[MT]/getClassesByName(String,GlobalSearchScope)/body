{
  VirtualFileFilter filter=getRepositoryIndex().rootFilterBySearchScope(scope);
  long[] classIds=getRepositoryIndex().getClassesByShortName(name,filter);
  if (classIds.length == 0)   return PsiClass.EMPTY_ARRAY;
  RepositoryElementsManager repositoryElementsManager=JavaPsiFacadeEx.getInstanceEx(myManager.getProject()).getRepositoryElementsManager();
  ArrayList<PsiClass> list=new ArrayList<PsiClass>();
  IdLoop:   for (  long id : classIds) {
    PsiClass aClass=(PsiClass)repositoryElementsManager.findOrCreatePsiElementById(id);
    VirtualFile vFile=aClass.getContainingFile().getVirtualFile();
    if (!scope.contains(vFile))     continue;
    for (int j=0; j < list.size(); j++) {
      PsiClass aClass1=list.get(j);
      String qName=aClass.getQualifiedName();
      String qName1=aClass1.getQualifiedName();
      if (qName != null && qName1 != null && qName.equals(qName1)) {
        VirtualFile vFile1=aClass1.getContainingFile().getVirtualFile();
        int res=scope.compare(vFile1,vFile);
        if (res > 0) {
          continue IdLoop;
        }
 else         if (res < 0) {
          list.remove(j);
          j--;
        }
      }
    }
    list.add(aClass);
  }
  return list.toArray(new PsiClass[list.size()]);
}
