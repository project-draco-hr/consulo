{
  RepositoryElementsManager repositoryElementsManager=myManager.getRepositoryElementsManager();
  Set<PsiElement> set=new THashSet<PsiElement>(ids.length,new TObjectHashingStrategy<PsiElement>(){
    public int computeHashCode(    PsiElement psiElement){
      if (psiElement instanceof PsiMember) {
        PsiMember member=(PsiMember)psiElement;
        int code=0;
        String name=member.getName();
        if (name != null) {
          code+=name.hashCode();
        }
        if (member instanceof PsiMethod) {
          code+=37 * ((PsiMethod)member).getParameterList().getParametersCount();
        }
        return code;
      }
 else {
        LOG.error(psiElement.toString());
        return 0;
      }
    }
    public boolean equals(    PsiElement object,    PsiElement object1){
      return myManager.areElementsEquivalent(object,object1);
    }
  }
);
  for (  long id : ids) {
    ProgressManager.getInstance().checkCanceled();
    PsiElement element=repositoryElementsManager.findOrCreatePsiElementById(id);
    if (!scope.contains(element.getContainingFile().getVirtualFile()))     continue;
    if (!set.add(element))     continue;
    list.add(element);
  }
}
