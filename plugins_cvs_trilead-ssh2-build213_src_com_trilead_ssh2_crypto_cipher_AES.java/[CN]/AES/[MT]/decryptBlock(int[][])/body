{
  int r, r0, r1, r2, r3;
  C0^=KW[ROUNDS][0];
  C1^=KW[ROUNDS][1];
  C2^=KW[ROUNDS][2];
  C3^=KW[ROUNDS][3];
  for (r=ROUNDS - 1; r > 1; ) {
    r0=Tinv0[C0 & 255] ^ Tinv1[(C3 >> 8) & 255] ^ Tinv2[(C2 >> 16) & 255]^ Tinv3[(C1 >> 24) & 255]^ KW[r][0];
    r1=Tinv0[C1 & 255] ^ Tinv1[(C0 >> 8) & 255] ^ Tinv2[(C3 >> 16) & 255]^ Tinv3[(C2 >> 24) & 255]^ KW[r][1];
    r2=Tinv0[C2 & 255] ^ Tinv1[(C1 >> 8) & 255] ^ Tinv2[(C0 >> 16) & 255]^ Tinv3[(C3 >> 24) & 255]^ KW[r][2];
    r3=Tinv0[C3 & 255] ^ Tinv1[(C2 >> 8) & 255] ^ Tinv2[(C1 >> 16) & 255]^ Tinv3[(C0 >> 24) & 255]^ KW[r--][3];
    C0=Tinv0[r0 & 255] ^ Tinv1[(r3 >> 8) & 255] ^ Tinv2[(r2 >> 16) & 255]^ Tinv3[(r1 >> 24) & 255]^ KW[r][0];
    C1=Tinv0[r1 & 255] ^ Tinv1[(r0 >> 8) & 255] ^ Tinv2[(r3 >> 16) & 255]^ Tinv3[(r2 >> 24) & 255]^ KW[r][1];
    C2=Tinv0[r2 & 255] ^ Tinv1[(r1 >> 8) & 255] ^ Tinv2[(r0 >> 16) & 255]^ Tinv3[(r3 >> 24) & 255]^ KW[r][2];
    C3=Tinv0[r3 & 255] ^ Tinv1[(r2 >> 8) & 255] ^ Tinv2[(r1 >> 16) & 255]^ Tinv3[(r0 >> 24) & 255]^ KW[r--][3];
  }
  r0=Tinv0[C0 & 255] ^ Tinv1[(C3 >> 8) & 255] ^ Tinv2[(C2 >> 16) & 255]^ Tinv3[(C1 >> 24) & 255]^ KW[r][0];
  r1=Tinv0[C1 & 255] ^ Tinv1[(C0 >> 8) & 255] ^ Tinv2[(C3 >> 16) & 255]^ Tinv3[(C2 >> 24) & 255]^ KW[r][1];
  r2=Tinv0[C2 & 255] ^ Tinv1[(C1 >> 8) & 255] ^ Tinv2[(C0 >> 16) & 255]^ Tinv3[(C3 >> 24) & 255]^ KW[r][2];
  r3=Tinv0[C3 & 255] ^ Tinv1[(C2 >> 8) & 255] ^ Tinv2[(C1 >> 16) & 255]^ Tinv3[(C0 >> 24) & 255]^ KW[r--][3];
  C0=(Si[r0 & 255] & 255) ^ ((Si[(r3 >> 8) & 255] & 255) << 8) ^ ((Si[(r2 >> 16) & 255] & 255) << 16)^ (Si[(r1 >> 24) & 255] << 24)^ KW[0][0];
  C1=(Si[r1 & 255] & 255) ^ ((Si[(r0 >> 8) & 255] & 255) << 8) ^ ((Si[(r3 >> 16) & 255] & 255) << 16)^ (Si[(r2 >> 24) & 255] << 24)^ KW[0][1];
  C2=(Si[r2 & 255] & 255) ^ ((Si[(r1 >> 8) & 255] & 255) << 8) ^ ((Si[(r0 >> 16) & 255] & 255) << 16)^ (Si[(r3 >> 24) & 255] << 24)^ KW[0][2];
  C3=(Si[r3 & 255] & 255) ^ ((Si[(r2 >> 8) & 255] & 255) << 8) ^ ((Si[(r1 >> 16) & 255] & 255) << 16)^ (Si[(r0 >> 24) & 255] << 24)^ KW[0][3];
}
