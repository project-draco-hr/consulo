{
  myRepositoryManager.beforeChildAddedOrRemoved(myFile,oldParent);
  ASTNode anchor=null;
  for (int i=0; i < pos; i++) {
    if (anchor == null) {
      anchor=oldParent.getFirstChildNode();
    }
 else {
      anchor=anchor.getTreeNext();
    }
  }
  TreeUtil.remove((TreeElement)node);
  if (anchor != null) {
    TreeUtil.insertAfter((TreeElement)anchor,(TreeElement)node);
  }
 else {
    if (oldParent.getFirstChildNode() != null) {
      TreeUtil.insertBefore((TreeElement)oldParent.getFirstChildNode(),(TreeElement)node);
    }
 else {
      TreeUtil.addChildren((CompositeElement)oldParent,(TreeElement)node);
    }
  }
  myEvent.addElementaryChange(node,ChangeInfoImpl.create(ChangeInfo.ADD,node));
  ((TreeElement)node).clearCaches();
  ((CompositeElement)oldParent).subtreeChanged();
  myRepositoryManager.beforeChildAddedOrRemoved(myFile,oldParent);
}
