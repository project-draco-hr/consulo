{
  if (oldNode instanceof FileElement && newNode instanceof FileElement) {
    BlockSupportImpl.replaceFileElement(myFile,(FileElement)oldNode,(FileElement)newNode,myPsiManager);
  }
 else {
    if (oldNode instanceof ChameleonElement) {
      oldNode=ChameleonTransforming.transform((ChameleonElement)oldNode);
    }
    newNode=transformNewChameleon(oldNode,newNode);
    ((TreeElement)newNode).rawRemove();
    ((TreeElement)oldNode).rawReplaceWithList((TreeElement)newNode);
    final ReplaceChangeInfoImpl change=(ReplaceChangeInfoImpl)ChangeInfoImpl.create(ChangeInfo.REPLACE,newNode);
    change.setReplaced(oldNode);
    myEvent.addElementaryChange(newNode,change);
    ((TreeElement)newNode).clearCaches();
    if (!(newNode instanceof FileElement)) {
      ((CompositeElement)newNode.getTreeParent()).subtreeChanged();
    }
  }
}
