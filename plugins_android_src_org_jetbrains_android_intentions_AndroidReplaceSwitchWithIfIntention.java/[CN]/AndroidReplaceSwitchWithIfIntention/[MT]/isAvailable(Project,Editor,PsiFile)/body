{
  if (file == null) {
    return false;
  }
  final AndroidFacet facet=AndroidFacet.getInstance(file);
  if (facet == null || !facet.getConfiguration().LIBRARY_PROJECT) {
    return false;
  }
  final PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
  if (element == null) {
    return false;
  }
  final PsiSwitchLabelStatement switchLabelStatement=PsiTreeUtil.getParentOfType(element,PsiSwitchLabelStatement.class);
  if (switchLabelStatement == null) {
    return false;
  }
  final PsiExpression caseValue=switchLabelStatement.getCaseValue();
  if (!(caseValue instanceof PsiReferenceExpression) || !PsiTreeUtil.isAncestor(caseValue,element,false)) {
    return false;
  }
  if (myBaseIntention.isAvailable(project,editor,file)) {
    return false;
  }
  final PsiSwitchStatement switchStatement=PsiTreeUtil.getParentOfType(switchLabelStatement,PsiSwitchStatement.class);
  if (switchStatement == null || !ReplaceSwitchWithIfIntention.canProcess(switchStatement)) {
    return false;
  }
  final PsiElement resolvedElement=((PsiReferenceExpression)caseValue).resolve();
  if (resolvedElement == null || !(resolvedElement instanceof PsiField)) {
    return false;
  }
  final PsiField resolvedField=(PsiField)resolvedElement;
  final PsiFile containingFile=resolvedField.getContainingFile();
  if (containingFile == null || !AndroidResourceUtil.isRJavaField(containingFile,resolvedField)) {
    return false;
  }
  final PsiModifierList modifierList=resolvedField.getModifierList();
  return modifierList == null || !modifierList.hasModifierProperty(PsiModifier.FINAL);
}
