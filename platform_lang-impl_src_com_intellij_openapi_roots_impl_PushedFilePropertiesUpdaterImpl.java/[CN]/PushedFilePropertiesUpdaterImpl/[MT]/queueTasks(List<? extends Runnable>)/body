{
  for (  Runnable action : actions) {
    myTasks.offer(action);
  }
  final DumbModeTask task=new DumbModeTask(){
    @Override public void performInDumbMode(    @NotNull ProgressIndicator indicator){
      performPushTasks();
    }
  }
;
  myProject.getMessageBus().connect(task).subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootAdapter(){
    @Override public void rootsChanged(    ModuleRootEvent event){
      DumbService.getInstance(myProject).cancelTask(task);
    }
  }
);
  DumbService.getInstance(myProject).queueTask(task);
}
