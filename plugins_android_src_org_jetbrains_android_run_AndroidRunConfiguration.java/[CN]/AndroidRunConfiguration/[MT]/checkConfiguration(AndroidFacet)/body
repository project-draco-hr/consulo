{
  final JavaRunConfigurationModule configurationModule=getConfigurationModule();
  if (MODE.equals(LAUNCH_SPECIFIC_ACTIVITY)) {
    Project project=configurationModule.getProject();
    final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
    PsiClass activityClass=facade.findClass(AndroidUtils.ACTIVITY_BASE_CLASS_NAME,ProjectScope.getAllScope(project));
    if (activityClass == null) {
      throw new RuntimeConfigurationError(AndroidBundle.message("cant.find.activity.class.error"));
    }
    PsiClass c=configurationModule.checkClassName(ACTIVITY_CLASS,AndroidBundle.message("activity.class.not.specified.error"));
    if (!c.isInheritor(activityClass,true)) {
      throw new RuntimeConfigurationError(AndroidBundle.message("not.activity.subclass.error",ACTIVITY_CLASS));
    }
    final Activity activity=AndroidDomUtil.getActivityDomElementByClass(facet.getModule(),c);
    if (activity == null) {
      throw new RuntimeConfigurationError(AndroidBundle.message("activity.not.declared.in.manifest",c.getName()));
    }
    if (!isActivityLaunchable(activity)) {
      throw new RuntimeConfigurationError(AndroidBundle.message("activity.not.launchable.error",AndroidUtils.LAUNCH_ACTION_NAME));
    }
  }
 else   if (MODE.equals(LAUNCH_DEFAULT_ACTIVITY)) {
    Manifest manifest=facet.getManifest();
    if (manifest != null) {
      if (AndroidUtils.getDefaultActivityName(manifest) != null)       return;
    }
    throw new RuntimeConfigurationError(AndroidBundle.message("default.activity.not.found.error"));
  }
}
