{
  if (myActivityName == null)   return true;
  final String activityPath=state.getPackageName() + '/' + myActivityName;
  ProcessHandler processHandler=state.getProcessHandler();
  processHandler.notifyTextAvailable("Launching application: " + activityPath + ".\n",STDOUT);
  AndroidRunningState.MyReceiver receiver=new AndroidRunningState.MyReceiver();
  boolean debug=state.isDebugMode();
  while (true) {
    if (state.isStopped())     return false;
    try {
      String command="am start " + (debug ? "-D " : "") + "-n \""+ activityPath+ "\"";
      state.executeDeviceCommandAndWriteToConsole(device,command,receiver);
    }
 catch (    IOException e) {
      processHandler.notifyTextAvailable("Can't launch application (I/O error).\n",STDERR);
    }
    if (receiver.getErrorType() != 2) {
      break;
    }
    processHandler.notifyTextAvailable("Device is not ready. Waiting for " + AndroidRunningState.WAITING_TIME + " sec.\n",STDOUT);
synchronized (state.getRunningLock()) {
      try {
        state.getRunningLock().wait(AndroidRunningState.WAITING_TIME * 1000);
      }
 catch (      InterruptedException e) {
      }
    }
    receiver=new AndroidRunningState.MyReceiver();
  }
  boolean success=receiver.getErrorType() == AndroidRunningState.MyReceiver.NO_ERROR;
  if (success) {
    processHandler.notifyTextAvailable(receiver.getOutput().toString(),STDOUT);
  }
 else {
    processHandler.notifyTextAvailable(receiver.getOutput().toString(),STDERR);
  }
  return success;
}
