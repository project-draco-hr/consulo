{
  LOG.assertTrue(elements.length == 1);
  if (dataContext == null) {
    dataContext=DataManager.getInstance().getDataContext();
  }
  final Editor editor=PlatformDataKeys.EDITOR.getData(dataContext);
  if (elements[0] instanceof PsiMethod) {
    InlineMethodHandler.invoke(project,editor,(PsiMethod)elements[0]);
  }
 else   if (elements[0] instanceof PsiField) {
    InlineConstantFieldHandler.invoke(project,editor,(PsiField)elements[0]);
  }
 else   if (elements[0] instanceof PsiLocalVariable) {
    InlineLocalHandler.invoke(project,editor,(PsiLocalVariable)elements[0],null);
  }
 else   if (elements[0] instanceof PsiClass) {
    final Collection<PsiClass> inheritors=ClassInheritorsSearch.search((PsiClass)elements[0]).findAll();
    if (inheritors.size() == 0) {
      InlineToAnonymousClassHandler.invoke(project,editor,(PsiClass)elements[0]);
    }
 else {
      InlineSuperClassRefactoringHandler.invoke(project,editor,(PsiClass)elements[0],inheritors);
    }
  }
 else {
    LOG.error("Unknown element type to inline:" + elements[0]);
  }
}
