{
  LOG.assertTrue(CommandProcessor.getInstance().getCurrentCommand() != null);
  PsiDocumentManager.getInstance(context.getProject()).commitDocument(context.getEditor().getDocument());
  Template template=(Template)lookupItem.getObject();
  final Editor editor=context.getEditor();
  final Document document=editor.getDocument();
  final int templateStartOffset=context.getStartOffset();
  document.replaceString(templateStartOffset,templateStartOffset + lookupItem.getLookupString().length(),"");
  final RangeMarker offsetRangeMarker=document.createRangeMarker(templateStartOffset,templateStartOffset);
  TemplateManager.getInstance(editor.getProject()).startTemplate(editor,template,new TemplateEditingAdapter(){
    public void templateFinished(    Template template,    boolean brokenOff){
      lookupItem.setAttribute(EXPANDED_TEMPLATE_ATTR,Boolean.TRUE);
      if (!offsetRangeMarker.isValid())       return;
      final Editor editor=context.getEditor();
      final int startOffset=offsetRangeMarker.getStartOffset();
      final int endOffset=editor.getCaretModel().getOffset();
      String lookupString=editor.getDocument().getCharsSequence().subSequence(startOffset,endOffset).toString();
      lookupItem.setLookupString(lookupString);
      final OffsetMap offsetMap=context.getOffsetMap();
      offsetMap.addOffset(CompletionInitializationContext.SELECTION_END_OFFSET,endOffset);
      offsetMap.addOffset(CompletionInitializationContext.IDENTIFIER_END_OFFSET,endOffset);
      final PsiFile psiFile=context.getFile();
      InsertionContext newContext=new InsertionContext(offsetMap,context.getCompletionChar(),LookupElement.EMPTY_ARRAY,psiFile,editor);
      populateInsertMap(psiFile,offsetMap);
      handleInsert(newContext,lookupItem);
    }
  }
);
}
