{
  PsiBuilder.Marker isMarker=builder.mark();
  if (!ParserUtils.getToken(builder,kIMPLEMENTS)) {
    isMarker.rollbackTo();
    return NONE;
  }
  ParserUtils.getToken(builder,mNLS);
  if (WRONGWAY.equals(ReferenceElement.parse(builder))) {
    isMarker.rollbackTo();
    return WRONGWAY;
  }
  while (ParserUtils.lookAhead(builder,mCOMMA)) {
    ParserUtils.getToken(builder,mNLS);
    ParserUtils.getToken(builder,mCOMMA);
    if (WRONGWAY.equals(ReferenceElement.parse(builder))) {
      isMarker.rollbackTo();
      return WRONGWAY;
    }
  }
  isMarker.done(IMPLEMENTS_CLAUSE);
  return IMPLEMENTS_CLAUSE;
}
