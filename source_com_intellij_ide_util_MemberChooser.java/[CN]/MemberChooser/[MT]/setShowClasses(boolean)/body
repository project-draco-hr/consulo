{
  myShowClasses=showClasses;
  Pair selection=storeSelection();
  DefaultMutableTreeNode root=(DefaultMutableTreeNode)myTreeModel.getRoot();
  if (!myShowClasses || myClassNodes.size() == 0) {
    List<DefaultMutableTreeNode> otherObjects=new ArrayList<DefaultMutableTreeNode>();
    Enumeration children=root.children();
    ElementNode newRoot=new AllClassesNode();
    while (children.hasMoreElements()) {
      final DefaultMutableTreeNode nextElement=(DefaultMutableTreeNode)children.nextElement();
      if (!(nextElement instanceof ElementNode)) {
        otherObjects.add(nextElement);
        continue;
      }
      ElementNode classNode=(ElementNode)nextElement;
      Enumeration memberNodes=classNode.children();
      ArrayList memberNodesArray=new ArrayList();
      while (memberNodes.hasMoreElements()) {
        memberNodesArray.add(memberNodes.nextElement());
      }
      for (int i=0; i < memberNodesArray.size(); i++) {
        ElementNode memberNode=(ElementNode)memberNodesArray.get(i);
        newRoot.add(memberNode);
      }
    }
    root.removeAllChildren();
    for (Iterator<DefaultMutableTreeNode> iterator=otherObjects.iterator(); iterator.hasNext(); ) {
      DefaultMutableTreeNode node=iterator.next();
      root.add(node);
    }
    sortNode(newRoot,mySorted);
    if (newRoot.children().hasMoreElements())     root.add(newRoot);
  }
 else {
    Enumeration children=root.children();
    if (children.hasMoreElements()) {
      DefaultMutableTreeNode allClassesNode=(DefaultMutableTreeNode)children.nextElement();
      Enumeration memberNodes=allClassesNode.children();
      ArrayList arrayList=new ArrayList();
      while (memberNodes.hasMoreElements()) {
        arrayList.add(memberNodes.nextElement());
      }
      for (int i=0; i < arrayList.size(); i++) {
        DefaultMutableTreeNode memberNode=(DefaultMutableTreeNode)arrayList.get(i);
        DefaultMutableTreeNode classNode=myNodeToParentMap.get(memberNode);
        classNode.add(memberNode);
      }
    }
    root.removeAllChildren();
    for (int i=0; i < myClassNodes.size(); i++) {
      DefaultMutableTreeNode classNode=(DefaultMutableTreeNode)myClassNodes.get(i);
      root.add(classNode);
    }
  }
  myTreeModel.nodeStructureChanged(root);
  expandAll();
  restoreSelection(selection);
}
