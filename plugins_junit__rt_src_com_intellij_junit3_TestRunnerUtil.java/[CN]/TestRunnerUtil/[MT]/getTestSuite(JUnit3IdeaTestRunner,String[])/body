{
  if (suiteClassNames.length == 0) {
    return null;
  }
  Vector result=new Vector();
  for (int i=0; i < suiteClassNames.length; i++) {
    String suiteClassName=suiteClassNames[i];
    Test test;
    if (suiteClassName.charAt(0) == '@') {
      String[] classNames;
      String suiteName;
      try {
        BufferedReader reader=new BufferedReader(new FileReader(suiteClassName.substring(1)));
        Vector vector;
        try {
          reader.readLine();
          suiteName=reader.readLine();
          vector=new Vector();
          String line;
          while ((line=reader.readLine()) != null) {
            vector.addElement(line);
          }
        }
  finally {
          reader.close();
        }
        classNames=new String[vector.size()];
        for (int j=0; j < classNames.length; j++) {
          classNames[j]=(String)vector.elementAt(j);
        }
      }
 catch (      Exception e) {
        runner.runFailed(MessageFormat.format(ourBundle.getString("junit.runner.error"),new Object[]{e.toString()}));
        return null;
      }
      test=new TestAllInPackage2(runner,suiteName,classNames);
    }
 else {
      test=createClassOrMethodSuite(runner,suiteClassName);
      if (test == null)       return null;
    }
    result.addElement(test);
  }
  if (result.size() == 1) {
    return (Test)result.elementAt(0);
  }
 else {
    TestSuite suite=new TestSuite();
    for (int i=0; i < result.size(); i++) {
      final Test test=(Test)result.elementAt(i);
      suite.addTest(test);
    }
    return suite;
  }
}
