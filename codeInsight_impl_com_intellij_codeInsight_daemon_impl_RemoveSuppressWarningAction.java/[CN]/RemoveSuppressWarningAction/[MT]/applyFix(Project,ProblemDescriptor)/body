{
  PsiElement element=descriptor.getPsiElement();
  try {
    if (element instanceof PsiIdentifier) {
      if (!CodeInsightUtil.prepareFileForWrite(element.getContainingFile()))       return;
      final PsiIdentifier identifier=(PsiIdentifier)element;
      final PsiDocCommentOwner commentOwner=PsiTreeUtil.getParentOfType(identifier,PsiDocCommentOwner.class);
      if (commentOwner != null) {
        final PsiElement psiElement=GlobalJavaInspectionContextImpl.getElementMemberSuppressedIn(commentOwner,myID);
        if (psiElement instanceof PsiAnnotation) {
          removeFromAnnotation((PsiAnnotation)psiElement);
        }
 else         if (psiElement instanceof PsiDocComment) {
          removeFromJavaDoc((PsiDocComment)psiElement);
        }
 else {
          final Set<PsiComment> comments=new HashSet<PsiComment>();
          commentOwner.accept(new PsiRecursiveElementVisitor(){
            @Override public void visitComment(            final PsiComment comment){
              super.visitComment(comment);
              if (comment.getText().contains(myID)) {
                comments.add(comment);
              }
            }
          }
);
          for (          PsiComment comment : comments) {
            try {
              removeFromComment(comment,comments.size() > 1);
            }
 catch (            IncorrectOperationException e) {
              LOG.error(e);
            }
          }
        }
      }
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
