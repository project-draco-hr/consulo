{
  PsiField existingField=aClass != null ? aClass.findFieldByName(newName,true) : null;
  if (existingField != null) {
    if (aClass.equals(existingField.getContainingClass())) {
      String className=aClass instanceof PsiAnonymousClass ? RefactoringBundle.message("current.class") : RefactoringUIUtil.getDescription(aClass,false);
      final String conflict=RefactoringBundle.message("field.0.is.already.defined.in.the.1",existingField.getName(),className);
      conflicts.putValue(existingField,conflict);
    }
 else {
      if (!existingField.hasModifierProperty(PsiModifier.PRIVATE)) {
        String fieldInfo=PsiFormatUtil.formatVariable(existingField,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.TYPE_AFTER,PsiSubstitutor.EMPTY);
        String className=RefactoringUIUtil.getDescription(existingField.getContainingClass(),false);
        final String descr=RefactoringBundle.message("field.0.will.hide.field.1.of.the.base.class",newName,fieldInfo,className);
        conflicts.putValue(existingField,descr);
      }
    }
  }
}
