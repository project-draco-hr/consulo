{
  final List<PackagingSourceItem> items=new ArrayList<PackagingSourceItem>();
  final ModuleRootModel rootModel=editorContext.getModulesProvider().getRootModel(module);
  List<Library> libraries=new ArrayList<Library>();
  for (  OrderEntry orderEntry : rootModel.getOrderEntries()) {
    if (orderEntry instanceof LibraryOrderEntry) {
      final LibraryOrderEntry libraryEntry=(LibraryOrderEntry)orderEntry;
      final Library library=libraryEntry.getLibrary();
      final DependencyScope scope=libraryEntry.getScope();
      if (library != null && scope.isForProductionRuntime()) {
        libraries.add(library);
      }
    }
  }
  for (  PackagingElementType element : PackagingElementFactory.getInstance().getAllElementTypes()) {
    if (element instanceof ModuleOutputElementTypeBase) {
      ModuleOutputElementTypeBase moduleOutputType=(ModuleOutputElementTypeBase)element;
      boolean can=canAddModuleOutputType(editorContext,artifact,moduleOutputType,module);
      if (can) {
        items.add(new ModuleOutputSourceItem(module,moduleOutputType));
      }
    }
  }
  for (  Library library : getNotAddedLibraries(editorContext,artifact,libraries)) {
    items.add(new LibrarySourceItem(library));
  }
  return items;
}
