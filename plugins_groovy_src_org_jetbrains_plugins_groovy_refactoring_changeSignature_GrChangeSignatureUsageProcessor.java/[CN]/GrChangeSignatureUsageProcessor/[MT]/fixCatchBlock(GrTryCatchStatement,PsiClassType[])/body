{
  if (exceptions.length == 0)   return tryCatch;
  final GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(tryCatch.getProject());
  final GrCatchClause[] clauses=tryCatch.getCatchClauses();
  List<String> restricted=ContainerUtil.map(clauses,new Function<GrCatchClause,String>(){
    @Nullable public String fun(    GrCatchClause grCatchClause){
      final GrParameter grParameter=grCatchClause.getParameter();
      return grParameter != null ? grParameter.getName() : null;
    }
  }
);
  restricted=ContainerUtil.skipNulls(restricted);
  final DefaultGroovyVariableNameValidator nameValidator=new DefaultGroovyVariableNameValidator(tryCatch,restricted);
  GrCatchClause anchor=clauses.length == 0 ? null : clauses[clauses.length - 1];
  for (  PsiClassType type : exceptions) {
    final String[] names=GroovyNameSuggestionUtil.suggestVariableNameByType(type,nameValidator);
    final GrCatchClause catchClause=factory.createCatchClause(type,names[0]);
    final GrStatement printStackTrace=factory.createStatementFromText(names[0] + ".printStackTrace()");
    catchClause.getBody().addStatementBefore(printStackTrace,null);
    anchor=tryCatch.addCatchClause(catchClause,anchor);
    GrReferenceAdjuster.shortenReferences(anchor);
  }
  return tryCatch;
}
