{
  final SelectionModel selectionModel=editor.getSelectionModel();
  if (!selectionModel.hasSelection()) {
    final int offset=editor.getCaretModel().getOffset();
    final List<GrExpression> expressions=GrIntroduceHandlerBase.collectExpressions(file,editor,offset);
    if (expressions.size() == 1) {
      final TextRange textRange=expressions.get(0).getTextRange();
      selectionModel.setSelection(textRange.getStartOffset(),textRange.getEndOffset());
    }
 else {
      final Pass<GrExpression> callback=new Pass<GrExpression>(){
        public void pass(        final GrExpression selectedValue){
          invoke(project,editor,file,selectedValue.getTextRange().getStartOffset(),selectedValue.getTextRange().getEndOffset());
        }
      }
;
      final Function<GrExpression,String> renderer=new Function<GrExpression,String>(){
        @Override public String fun(        GrExpression grExpression){
          return grExpression.getText();
        }
      }
;
      IntroduceTargetChooser.showChooser(editor,expressions,callback,renderer);
      return;
    }
  }
  invoke(project,editor,file,selectionModel.getSelectionStart(),selectionModel.getSelectionEnd());
}
