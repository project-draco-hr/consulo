{
  if (!(child.getPsi() instanceof JspText))   return null;
  ASTNode element=child.getPsi().getContainingFile().getPsiRoots()[0].getNode().findLeafElementAt(child.getTextRange().getStartOffset());
  if (element != null && (element.getElementType() == ElementType.JSP_SCRIPTLET_START || element.getElementType() == ElementType.JSP_DECLARATION_START || element.getElementType() == ElementType.JSP_EXPRESSION_START)) {
    final ArrayList<Block> subBlocks=new ArrayList<Block>();
    while (element != null && element.getTextRange().getEndOffset() <= child.getTextRange().getEndOffset()) {
      if (!FormatterUtil.containsWhiteSpacesOnly(element)) {
        subBlocks.add(createChildBlock(element,null,null,Formatter.getInstance().getNoneIndent()));
      }
      int nextOffset=element.getTextRange().getEndOffset();
      element=element.getTreeNext();
      if (element == null) {
        element=child.getPsi().getContainingFile().getPsiRoots()[0].getNode().findLeafElementAt(nextOffset);
      }
    }
    return new SyntheticBlock(subBlocks,this,indent,myXmlFormattingPolicy,getFormatter().createNormalIndent());
  }
 else {
    return null;
  }
}
