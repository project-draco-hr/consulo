{
  showStatusText(DebuggerBundle.message("status.step.over"));
  final SuspendContextImpl suspendContext=getSuspendContext();
  final ThreadReferenceProxyImpl stepThread=getContextThread();
  RequestHint hint=new RequestHint(stepThread,suspendContext,StepRequest.STEP_OVER);
  hint.setRestoreBreakpoints(myIsIgnoreBreakpoints);
  hint.setIgnoreFilters(myIsIgnoreBreakpoints || mySession.shouldIgnoreSteppingFilters());
  applyThreadFilter(stepThread);
  final MethodReturnValueWatcher rvWatcher=myReturnValueWatcher;
  if (rvWatcher != null) {
    rvWatcher.enable(stepThread.getThreadReference());
  }
  doStep(suspendContext,stepThread,StepRequest.STEP_OVER,hint);
  if (myIsIgnoreBreakpoints) {
    DebuggerManagerEx.getInstanceEx(myProject).getBreakpointManager().disableBreakpoints(DebugProcessImpl.this);
  }
  super.contextAction();
}
