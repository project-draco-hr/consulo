{
  Object selectedObject=getSelected();
  final Ref<Object> toSelect=new Ref<Object>(isSelectable(selectedObject) ? selectedObject : null);
  if (preferredSelection != null) {
    toSelect.set(preferredSelection);
  }
  ((FilteringTreeStructure)getTreeStructure()).refilter();
  updateFromRoot();
  boolean wasSelected=false;
  if (selectedObject != null) {
    wasSelected=myTree.select(this,new SimpleNodeVisitor(){
      public boolean accept(      SimpleNode simpleNode){
        if (simpleNode instanceof FilteringTreeStructure.Node) {
          FilteringTreeStructure.Node node=(FilteringTreeStructure.Node)simpleNode;
          return node.getDelegate().equals(toSelect.get());
        }
 else {
          return false;
        }
      }
    }
,true);
  }
  if (!wasSelected) {
    myTree.select(this,new SimpleNodeVisitor(){
      public boolean accept(      SimpleNode simpleNode){
        if (simpleNode instanceof FilteringTreeStructure.Node) {
          FilteringTreeStructure.Node node=(FilteringTreeStructure.Node)simpleNode;
          if (isSelectable(node.getDelegate())) {
            return true;
          }
        }
 else {
          return false;
        }
        return false;
      }
    }
,true);
  }
  if (!wasSelected && myLastSuccessfulSelect != null) {
    wasSelected=myTree.select(this,new SimpleNodeVisitor(){
      public boolean accept(      SimpleNode simpleNode){
        if (simpleNode instanceof FilteringTreeStructure.Node) {
          Object object=((FilteringTreeStructure.Node)simpleNode).getDelegate();
          return myLastSuccessfulSelect.equals(object);
        }
        return false;
      }
    }
,true);
    if (wasSelected) {
      myLastSuccessfulSelect=getSelected();
    }
  }
 else   if (wasSelected) {
    myLastSuccessfulSelect=getSelected();
  }
}
