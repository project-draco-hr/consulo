{
  super(project,true);
  myURL=url;
  myProject=project;
  myURLLabel.setText(myURL.toString());
  myBrowser.setRepositoryURL(rootURL,false);
  myBrowser.addChangeListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      update();
    }
  }
);
  myNameField.setText(SVNPathUtil.tail(myURL.getPath()));
  myNameField.selectAll();
  myNameField.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    final DocumentEvent e){
      update();
    }
  }
);
  ArrayList<String> messages=VcsConfiguration.getInstance(myProject).getRecentMessages();
  Collections.reverse(messages);
  Object[] model=messages.toArray();
  myMessagesBox.setModel(new DefaultComboBoxModel(model));
  myMessagesBox.setRenderer(new MessageBoxCellRenderer());
  String lastMessage=VcsConfiguration.getInstance(myProject).getLastNonEmptyCommitMessage();
  if (lastMessage != null) {
    myCommitMessage.setText(lastMessage);
    myCommitMessage.selectAll();
  }
  myMessagesBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myCommitMessage.setText(myMessagesBox.getSelectedItem().toString());
      myCommitMessage.selectAll();
    }
  }
);
  setTitle(title);
  init();
  update();
}
