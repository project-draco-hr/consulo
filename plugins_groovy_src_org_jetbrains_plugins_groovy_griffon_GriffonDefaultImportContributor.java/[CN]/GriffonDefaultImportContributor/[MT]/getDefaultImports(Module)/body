{
  return CachedValuesManager.getManager(module.getProject()).getCachedValue(module,new CachedValueProvider<Pair<List<String>,List<String>>>(){
    @Override public Result<Pair<List<String>,List<String>>> compute(){
      PsiJavaPackage aPackage=JavaPsiFacade.getInstance(module.getProject()).findPackage("META-INF");
      if (aPackage != null) {
        for (        PsiDirectory directory : aPackage.getDirectories(GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module))) {
          PsiFile file=directory.findFile("griffon-default-imports.properties");
          if (file instanceof PropertiesFile) {
            List<String> modelImports=tokenize(((PropertiesFile)file).findPropertyByKey("models"));
            List<String> viewImports=tokenize(((PropertiesFile)file).findPropertyByKey("views"));
            return Result.create(Pair.create(modelImports,viewImports),PsiModificationTracker.MODIFICATION_COUNT);
          }
        }
      }
      return Result.create(new Pair<List<String>,List<String>>(new ArrayList<String>(),new ArrayList<String>()),PsiModificationTracker.MODIFICATION_COUNT);
    }
    private List<String> tokenize(    IProperty models){
      List<String> modelImports=new ArrayList<String>();
      if (models != null) {
        String value=models.getValue();
        if (value != null) {
          String[] split=value.split(", ");
          for (          String s : split) {
            modelImports.add(StringUtil.trimEnd(s,"."));
          }
        }
      }
      return modelImports;
    }
  }
);
}
