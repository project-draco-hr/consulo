{
  if (myDisposed)   return;
  if (mySmartFadeoutPaused) {
    mySmartFadeoutPaused=false;
    return;
  }
  if (myTraceDispose) {
    Logger.getInstance("#com.intellij.ui.BalloonImpl").error("Dispose balloon before showing",new Throwable());
  }
  myDisposed=true;
  hideComboBoxPopups();
  final Runnable disposeRunnable=new Runnable(){
    @Override public void run(){
      myFadedOut=true;
      if (myRequestFocus) {
        if (myOriginalFocusOwner != null) {
          myFocusManager.requestFocus(myOriginalFocusOwner,false);
        }
      }
      for (      JBPopupListener each : myListeners) {
        each.onClosed(new LightweightWindowEvent(BalloonImpl.this,ok));
      }
      Disposer.dispose(BalloonImpl.this);
      BalloonImpl.this.onDisposed();
    }
  }
;
  Toolkit.getDefaultToolkit().removeAWTEventListener(myAwtActivityListener);
  if (myLayeredPane != null) {
    myLayeredPane.removeComponentListener(myComponentListener);
    runAnimation(false,myLayeredPane,disposeRunnable);
  }
 else {
    disposeRunnable.run();
  }
  myVisible=false;
  myTracker=null;
}
