{
  final GraphicsConfig cfg=new GraphicsConfig(g);
  GraphicsUtil.installAntialiasing(g);
  Shape shape;
  if (balloon.myShowPointer) {
    shape=getPointingShape(bounds,g,pointTarget,balloon);
  }
 else {
    shape=new RoundRectangle2D.Double(bounds.x,bounds.y,bounds.width - 1,bounds.height - 1,balloon.getArc(),balloon.getArc());
  }
  g.setColor(balloon.myFillColor);
  g.fill(shape);
  g.setColor(balloon.myBorderColor);
  if (balloon.myTitleLabel != null) {
    Rectangle titleBounds=balloon.myTitleLabel.getBounds();
    final int shadow=balloon.getShadowBorderSize();
    Insets inset=getTitleInsets(balloon.getNormalInset() - 1 + shadow,balloon.getPointerLength(this) + 50 + shadow);
    titleBounds.x-=inset.left + 1;
    titleBounds.width+=(inset.left + inset.right + 50);
    titleBounds.y-=inset.top + 1;
    titleBounds.height+=(inset.top + inset.bottom + 1);
    Area area=new Area(shape);
    area.intersect(new Area(titleBounds));
    Color fgColor=UIManager.getColor("Label.foreground");
    fgColor=ColorUtil.toAlpha(fgColor,140);
    g.setColor(fgColor);
    g.fill(area);
    g.setColor(balloon.myBorderColor);
    g.draw(area);
  }
  g.draw(shape);
  cfg.restore();
}
