{
  final GraphicsConfig cfg=new GraphicsConfig(g);
  cfg.setAntialiasing(true);
  if (balloon.myShadowBorderProvider != null) {
    balloon.myShadowBorderProvider.paintBorder(bounds,g);
    if (balloon.myShowPointer) {
      Position position;
      if (this == ABOVE) {
        position=Position.above;
      }
 else       if (this == BELOW) {
        position=Position.below;
      }
 else       if (this == AT_LEFT) {
        position=Position.atLeft;
      }
 else {
        position=Position.atRight;
      }
      balloon.myShadowBorderProvider.paintPointingShape(bounds,pointTarget,position,g);
    }
    cfg.restore();
    return;
  }
  Shape shape;
  if (balloon.myShowPointer) {
    shape=getPointingShape(bounds,pointTarget,balloon);
  }
 else {
    shape=new RoundRectangle2D.Double(bounds.x,bounds.y,bounds.width - 1,bounds.height - 1,balloon.getArc(),balloon.getArc());
  }
  g.setColor(balloon.myFillColor);
  g.fill(shape);
  g.setColor(balloon.myBorderColor);
  if (balloon.myTitleLabel != null) {
    Rectangle titleBounds=balloon.myTitleLabel.getBounds();
    Insets inset=getTitleInsets(getNormalInset() - 1,balloon.getPointerLength(this) + 50);
    Insets borderInsets=balloon.getShadowBorderInsets();
    inset.top+=borderInsets.top;
    inset.bottom+=borderInsets.bottom;
    inset.left+=borderInsets.left;
    inset.right+=borderInsets.right;
    titleBounds.x-=inset.left + 1;
    titleBounds.width+=inset.left + inset.right + 50;
    titleBounds.y-=inset.top + 1;
    titleBounds.height+=inset.top + inset.bottom + 1;
    Area area=new Area(shape);
    area.intersect(new Area(titleBounds));
    Color fgColor=UIManager.getColor("Label.foreground");
    fgColor=ColorUtil.toAlpha(fgColor,140);
    g.setColor(fgColor);
    g.fill(area);
    g.setColor(balloon.myBorderColor);
    g.draw(area);
  }
  g.draw(shape);
  cfg.restore();
}
