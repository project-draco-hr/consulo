{
  final Document document=editor.getDocument();
  PsiDocumentManager.getInstance(project).commitDocument(document);
  final SelectionModel selectionModel=editor.getSelectionModel();
  final int selectionStart=selectionModel.getSelectionStart();
  final int selectionEnd=selectionModel.getSelectionEnd();
  PsiElement token=findLiteralTokenType(file,selectionStart,selectionEnd);
  if (token == null) {
    return text;
  }
  if (isStringLiteral(token)) {
    StringBuilder buffer=new StringBuilder(text.length());
    @NonNls String breaker=getLineBreaker(token);
    final String[] lines=LineTokenizer.tokenize(text.toCharArray(),false,true);
    for (int i=0; i < lines.length; i++) {
      buffer.append(escapeCharCharacters(lines[i],token));
      if (i != lines.length - 1 || "\n".equals(breaker) && text.endsWith("\n")) {
        buffer.append(breaker);
      }
    }
    text=buffer.toString();
  }
  return text;
}
