{
  return ApplicationManager.getApplication().runReadAction(new Computable<ReadonlyStatusHandler.OperationStatus>(){
    public ReadonlyStatusHandler.OperationStatus compute(){
      final List<IFile> filesToSave;
      try {
        filesToSave=getAllStorageFilesToSave(true);
        final Iterator<IFile> iterator=filesToSave.iterator();
        while (iterator.hasNext()) {
          if (!iterator.next().exists()) {
            iterator.remove();
          }
        }
      }
 catch (      IOException e) {
        LOG.error(e);
        return null;
      }
      List<VirtualFile> readonlyFiles=new ArrayList<VirtualFile>();
      if (myProject.isToSaveProjectName()) {
        final VirtualFile baseDir=getProjectBaseDir();
        if (baseDir != null && baseDir.isValid()) {
          filesToSave.add(FileSystem.FILE_SYSTEM.createFile(new File(new File(baseDir.getPath(),Project.DIRECTORY_STORE_FOLDER),ProjectImpl.NAME_FILE).getPath()));
        }
      }
      for (      IFile file : filesToSave) {
        final VirtualFile virtualFile=LocalFileSystem.getInstance().findFileByIoFile(file);
        if (virtualFile != null) {
          virtualFile.refresh(false,false);
          if (virtualFile.isValid() && !virtualFile.isWritable()) {
            readonlyFiles.add(virtualFile);
          }
        }
      }
      if (readonlyFiles.size() == 0) {
        final VirtualFile projectBaseDir=getProjectBaseDir();
        if (projectBaseDir != null && projectBaseDir.isValid()) {
          if (!projectBaseDir.isWritable()) {
            readonlyFiles.add(projectBaseDir);
          }
          final LocalFileSystem instance=LocalFileSystem.getInstance();
          final VirtualFile ideaDir1=instance.findFileByIoFile(new File(projectBaseDir.getPath(),Project.DIRECTORY_STORE_FOLDER));
          if (ideaDir1 != null && ideaDir1.isValid()) {
            if (!ideaDir1.isWritable()) {
              readonlyFiles.add(ideaDir1);
            }
          }
 else {
            final VirtualFile ideaDir2=instance.findFileByIoFile(new File(new File(projectBaseDir.getPath()).getParent(),Project.DIRECTORY_STORE_FOLDER));
            if (ideaDir2 != null && ideaDir2.isValid()) {
              if (!ideaDir2.isWritable()) {
                readonlyFiles.add(ideaDir2);
              }
            }
          }
        }
      }
      return ReadonlyStatusHandler.getInstance(myProject).ensureFilesWritable(readonlyFiles);
    }
  }
);
}
