{
  if (filePath == null) {
    return;
  }
  final IFile iFile=FileSystem.FILE_SYSTEM.createFile(filePath);
  final IFile dir_store=iFile.isDirectory() ? iFile.getChild(Project.DIRECTORY_STORE_FOLDER) : iFile.getParentFile().getChild(Project.DIRECTORY_STORE_FOLDER);
  final StateStorageManager stateStorageManager=getStateStorageManager();
  if (dir_store.exists() && iFile.isDirectory()) {
    FileBasedStorage.syncRefreshPathRecursively(dir_store.getPath(),null);
    myScheme=StorageScheme.DIRECTORY_BASED;
    stateStorageManager.addMacro(PROJECT_FILE_MACRO,dir_store.getChild("misc.xml").getPath());
    final IFile ws=dir_store.getChild("workspace.xml");
    stateStorageManager.addMacro(WS_FILE_MACRO,ws.getPath());
    if (!ws.exists() && !iFile.isDirectory()) {
      useOldWsContent(filePath,ws);
    }
    stateStorageManager.addMacro(PROJECT_CONFIG_DIR,dir_store.getPath());
  }
 else {
    myScheme=StorageScheme.DEFAULT;
    stateStorageManager.addMacro(PROJECT_FILE_MACRO,filePath);
    LocalFileSystem.getInstance().refreshAndFindFileByPath(filePath);
    int lastDot=filePath.lastIndexOf(".");
    final String filePathWithoutExt=lastDot > 0 ? filePath.substring(0,lastDot) : filePath;
    String workspacePath=filePathWithoutExt + WorkspaceFileType.DOT_DEFAULT_EXTENSION;
    LocalFileSystem.getInstance().refreshAndFindFileByPath(workspacePath);
    stateStorageManager.addMacro(WS_FILE_MACRO,workspacePath);
  }
}
