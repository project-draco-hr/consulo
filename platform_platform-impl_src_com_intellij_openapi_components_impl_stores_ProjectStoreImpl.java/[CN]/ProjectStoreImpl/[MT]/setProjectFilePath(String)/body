{
  final StateStorageManager stateStorageManager=getStateStorageManager();
  final LocalFileSystem fs=LocalFileSystem.getInstance();
  final File file=new File(filePath);
  if (!isIprPath(file)) {
    myScheme=StorageScheme.DIRECTORY_BASED;
    final File dirStore=file.isDirectory() ? new File(file,Project.DIRECTORY_STORE_FOLDER) : new File(file.getParentFile(),Project.DIRECTORY_STORE_FOLDER);
    stateStorageManager.addMacro(StoragePathMacros.getMacroName(StoragePathMacros.PROJECT_FILE),new File(dirStore,"misc.xml").getPath());
    final File ws=new File(dirStore,"workspace.xml");
    stateStorageManager.addMacro(StoragePathMacros.getMacroName(StoragePathMacros.WORKSPACE_FILE),ws.getPath());
    if (!ws.exists() && !file.isDirectory()) {
      useOldWsContent(filePath,ws);
    }
    stateStorageManager.addMacro(StoragePathMacros.getMacroName(StoragePathMacros.PROJECT_CONFIG_DIR),dirStore.getPath());
    ApplicationManager.getApplication().invokeAndWait(new Runnable(){
      @Override public void run(){
        VfsUtil.markDirtyAndRefresh(false,true,true,fs.refreshAndFindFileByIoFile(dirStore));
      }
    }
,ModalityState.defaultModalityState());
  }
 else {
    myScheme=StorageScheme.DEFAULT;
    stateStorageManager.addMacro(StoragePathMacros.getMacroName(StoragePathMacros.PROJECT_FILE),filePath);
    final String workspacePath=composeWsPath(filePath);
    stateStorageManager.addMacro(StoragePathMacros.getMacroName(StoragePathMacros.WORKSPACE_FILE),workspacePath);
    ApplicationManager.getApplication().invokeAndWait(new Runnable(){
      @Override public void run(){
        VfsUtil.markDirtyAndRefresh(false,true,false,fs.refreshAndFindFileByPath(filePath),fs.refreshAndFindFileByPath(workspacePath));
      }
    }
,ModalityState.defaultModalityState());
  }
  myCachedLocation=null;
  myPresentableUrl=null;
}
