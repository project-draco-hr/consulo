{
  PsiExpression qualifierExpression=expression.getQualifierExpression();
  while (qualifierExpression != null) {
    if (!(qualifierExpression instanceof PsiReferenceExpression)) {
      myValue=null;
      return;
    }
    PsiReferenceExpression qualifier=(PsiReferenceExpression)qualifierExpression;
    final PsiElement resolved=qualifier.resolve();
    if (resolved instanceof PsiPackage)     break;
    if (!(resolved instanceof PsiClass)) {
      myValue=null;
      return;
    }
    qualifierExpression=((PsiReferenceExpression)qualifierExpression).getQualifierExpression();
  }
  PsiElement resolvedExpression=expression.resolve();
  if (resolvedExpression instanceof PsiVariable) {
    PsiVariable variable=(PsiVariable)resolvedExpression;
    if (myVisitedVars != null && myVisitedVars.contains(variable)) {
      myValue=null;
      return;
    }
    Set oldVisitedVars=myVisitedVars;
    if (myVisitedVars == null) {
      myVisitedVars=new THashSet();
    }
    myVisitedVars.add(variable);
    try {
      if (!(variable instanceof PsiVariableEx)) {
        myValue=null;
        return;
      }
      myValue=((PsiVariableEx)variable).computeConstantValue(myVisitedVars);
      return;
    }
  finally {
      myVisitedVars.remove(variable);
      myVisitedVars=oldVisitedVars;
    }
  }
  myValue=null;
}
