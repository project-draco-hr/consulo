{
  CachedValue<Map<PsiElement,Object>> cachedValue=myProject.getUserData(key);
  if (cachedValue == null) {
    cachedValue=PsiManager.getInstance(myProject).getCachedValuesManager().createCachedValue(new CachedValueProvider<Map<PsiElement,Object>>(){
      public Result<Map<PsiElement,Object>> compute(){
        Map<PsiElement,Object> value=Collections.synchronizedMap(new SoftHashMap<PsiElement,Object>());
        return new Result<Map<PsiElement,Object>>(value,PsiModificationTracker.MODIFICATION_COUNT);
      }
    }
,false);
    myProject.putUserData(key,cachedValue);
  }
  Map<PsiElement,Object> map=cachedValue.getValue();
  Object value=map.get(element);
  if (value == null) {
    myValue=null;
    element.accept(this);
    map.put(element,myValue == null ? NO_VALUE : myValue);
    return myValue;
  }
 else   if (value == NO_VALUE) {
    return null;
  }
  return value;
}
