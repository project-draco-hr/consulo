{
  final Presentation presentation=e.getPresentation();
  presentation.setVisible(false);
  final DataContext dataContext=e.getDataContext();
  final PsiElement[] psiElements=LangDataKeys.PSI_ELEMENT_ARRAY.getData(dataContext);
  if (psiElements != null) {
    final Set<PsiClass> foundClasses=PatternConfigurationProducer.collectTestClasses(psiElements);
    if (foundClasses.isEmpty())     return;
    final Project project=PlatformDataKeys.PROJECT.getData(dataContext);
    if (project != null) {
      final List<JUnitConfiguration> foundConfigurations=collectPatternConfigurations(foundClasses,project);
      if (!foundConfigurations.isEmpty()) {
        presentation.setVisible(true);
        if (foundConfigurations.size() == 1) {
          presentation.setText(presentation.getText() + ": " + foundConfigurations.get(0).getName());
        }
      }
    }
  }
}
