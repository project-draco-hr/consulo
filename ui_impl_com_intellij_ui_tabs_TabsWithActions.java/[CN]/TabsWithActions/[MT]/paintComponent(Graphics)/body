{
  super.paintComponent(g);
  if (mySelectedBounds == null)   return;
  final GraphicsConfig config=new GraphicsConfig(g);
  config.setAntialiasing(true);
  Graphics2D g2d=(Graphics2D)g;
  final GeneralPath path=new GeneralPath();
  Insets insets=getInsets();
  if (insets == null) {
    insets=new Insets(0,0,0,0);
  }
  final int bottomY=myHeaderFitSize.height + insets.top - 1;
  final int topY=insets.top;
  int leftX=mySelectedBounds.x;
  int rightX=mySelectedBounds.x + mySelectedBounds.width;
  int arc=getArcSize();
  path.moveTo(insets.left,bottomY);
  path.lineTo(leftX - arc,bottomY);
  path.quadTo(leftX,bottomY,leftX,bottomY - arc);
  path.lineTo(leftX,topY + arc);
  path.quadTo(leftX,topY,leftX + arc,topY);
  path.lineTo(rightX - arc,topY);
  path.quadTo(rightX,topY,rightX,topY + arc);
  path.lineTo(rightX,bottomY - arc);
  path.quadTo(rightX,bottomY,rightX + arc,bottomY);
  path.lineTo(getWidth() - insets.right,bottomY);
  path.closePath();
  g2d.setPaint(new GradientPaint(mySelectedBounds.x,topY,CaptionPanel.BND_ACTIVE_COLOR,mySelectedBounds.x,bottomY,CaptionPanel.CNT_ACTIVE_COLOR));
  g2d.fill(path);
  g2d.setColor(CaptionPanel.CNT_ACTIVE_COLOR.darker());
  g2d.draw(path);
  g2d.drawRect(insets.left,bottomY,getWidth() - insets.left - insets.right- 1,getHeight() - bottomY - insets.bottom- 1);
  config.restore();
}
