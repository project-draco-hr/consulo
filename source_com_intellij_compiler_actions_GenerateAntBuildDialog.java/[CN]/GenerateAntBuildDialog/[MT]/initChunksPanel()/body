{
  java.util.List<Chunk<Module>> chunks=getCycleChunks();
  if (chunks.size() == 0) {
    return;
  }
  myChunksPanel.setLayout(new BorderLayout());
  myChunksPanel.setBorder(IdeBorderFactory.createTitledBorder("Cyclic Module Dependencies"));
  final String text="Some modules have cyclic dependencies.\n" + "In order to generate ant build script, please select the \"main\" (representative) module for each dependency cycle.\n" + "The source code for all modules in the cycle will be compiled into the main module's output folders;\n"+ "All modules in the cycle will use the JSDK assigned to the main module;\n"+ "Any jar archives created will be named after the name of the main module.";
  JLabel textLabel=new JLabel(text);
  textLabel.setUI(new MultiLineLabelUI());
  textLabel.setBorder(IdeBorderFactory.createEmptyBorder(4,4,6,4));
  myChunksPanel.add(textLabel,BorderLayout.NORTH);
  myTableModel=new MyTableModel(chunks);
  myTable=new Table(myTableModel);
  myTable.fixColumnWidthToHeader(MyTableModel.NUMBER_COLUMN);
  final TableColumn nameColumn=myTable.getColumnModel().getColumn(MyTableModel.NAME_COLUMN);
  nameColumn.setCellEditor(ComboBoxTableCellEditor.INSTANCE);
  nameColumn.setCellRenderer(new MyTableCellRenderer());
  final Dimension preferredSize=new Dimension(myTable.getPreferredSize());
  preferredSize.height=(myTableModel.getRowCount() + 2) * myTable.getRowHeight() + myTable.getTableHeader().getHeight();
  final JScrollPane scrollPane=new JScrollPane(myTable);
  scrollPane.setPreferredSize(preferredSize);
  myChunksPanel.add(scrollPane,BorderLayout.CENTER);
}
