{
  if (myVerificationInProgress) {
    return showAlreadyChecking();
  }
  myVerificationInProgress=true;
  final Ref<Boolean> resultRef=new Ref<Boolean>();
  final Runnable checker=new Runnable(){
    @Override public void run(){
      try {
        final boolean result=interactiveValidation(obj.myProject,obj.getUrl(),obj.getRealm(),obj.getKind());
        log("ask result for: " + obj.getUrl() + " is: "+ result);
        resultRef.set(result);
        if (result) {
          onStateChangedToSuccess(obj);
        }
      }
  finally {
        myVerificationInProgress=false;
      }
    }
  }
;
  final ApplicationEx application=(ApplicationEx)ApplicationManager.getApplication();
  if (application.holdsReadLock() || application.isDispatchThread() || !ProgressManager.getInstance().hasProgressIndicator()) {
    application.executeOnPooledThread(checker);
  }
 else {
    checker.run();
    return resultRef.get();
  }
  return false;
}
