{
  GrCodeReferenceElement[] extendsReferenceElements=GrCodeReferenceElement.EMPTY_ARRAY;
  GrCodeReferenceElement[] implementsReferenceElements=GrCodeReferenceElement.EMPTY_ARRAY;
  if (myExtendsClause != null) {
    extendsReferenceElements=myExtendsClause.getReferenceElements();
  }
  if (myImplementsClause != null) {
    implementsReferenceElements=myImplementsClause.getReferenceElements();
  }
  List<GrCodeReferenceElement> classes=new ArrayList<GrCodeReferenceElement>();
  List<GrCodeReferenceElement> interfaces=new ArrayList<GrCodeReferenceElement>();
  for (  GrCodeReferenceElement extendsReferenceElement : extendsReferenceElements) {
    final PsiElement extendsElement=extendsReferenceElement.resolve();
    if (extendsElement == null || !(extendsElement instanceof PsiClass))     continue;
    if (((PsiClass)extendsElement).isInterface()) {
      interfaces.add(extendsReferenceElement);
    }
 else {
      classes.add(extendsReferenceElement);
    }
  }
  for (  GrCodeReferenceElement implementsReferenceElement : implementsReferenceElements) {
    final PsiElement implementsElement=implementsReferenceElement.resolve();
    if (implementsElement == null || !(implementsElement instanceof PsiClass))     continue;
    if (((PsiClass)implementsElement).isInterface()) {
      interfaces.add(implementsReferenceElement);
    }
 else {
      classes.add(implementsReferenceElement);
    }
  }
  myExtendsClause.delete();
  myImplementsClause.delete();
  addNewExtendsClause(classes,project);
  addNewimplementsClause(interfaces,project);
}
