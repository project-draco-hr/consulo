{
  final ProjectLevelVcsManager manager=ProjectLevelVcsManager.getInstance(vcs.getProject());
  final VcsEnvironmentsProxyCreator proxyCreator=manager.getProxyCreator();
  if (proxyCreator == null)   return vcs;
  final VcsKey key=vcs.getKeyInstanceMethod();
  final CheckinEnvironment checkinEnvironment=vcs.createCheckinEnvironment();
  final UpdateEnvironment updateEnvironment=vcs.createUpdateEnvironment();
  final RollbackEnvironment rollbackEnvironment=vcs.createRollbackEnvironment();
  if (checkinEnvironment != null && checkinEnvironment.equals(IllegalStateProxy.IDENTITY) || updateEnvironment != null && updateEnvironment.equals(IllegalStateProxy.IDENTITY) || rollbackEnvironment != null && rollbackEnvironment.equals(IllegalStateProxy.IDENTITY)) {
    return vcs;
  }
 else {
    final CheckinEnvironment proxedCheckin=proxyCreator.proxyCheckin(key,checkinEnvironment);
    final UpdateEnvironment proxedUpdate=proxyCreator.proxyUpdate(key,updateEnvironment);
    final RollbackEnvironment proxedRollback=proxyCreator.proxyRollback(key,rollbackEnvironment);
    vcs.setCheckinEnvironment(proxedCheckin);
    vcs.setUpdateEnvironment(proxedUpdate);
    vcs.setRollbackEnvironment(proxedRollback);
    return vcs;
  }
}
