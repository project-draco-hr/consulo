{
  final SmartPsiElementPointer<PsiDeclarationStatement> pointer=editor.getUserData(DECLARATION_KEY);
  final PsiDeclarationStatement declaration=pointer != null ? pointer.getElement() : null;
  final PsiType type=getVariableType(declaration);
  if (type != null) {
    VariablesProcessor proc=findVariablesOfType(declaration,type);
    if (proc.size() > 0) {
      if (proc.size() == 1) {
        replaceWithAssignment(declaration,proc.getResult(0),editor);
        return true;
      }
      final DefaultListModel model=new DefaultListModel();
      for (int i=0; i < proc.size(); i++) {
        model.addElement(proc.getResult(i));
      }
      final JList list=new JBList(model);
      list.setCellRenderer(new ListCellRendererWrapper(){
        @Override public void customize(        JList list,        Object value,        int index,        boolean selected,        boolean hasFocus){
          if (value instanceof PsiVariable) {
            setText(((PsiVariable)value).getName());
            setIcon(IconDescriptorUpdaters.getIcon(((PsiVariable)value),0));
          }
        }
      }
);
      final VisualPosition visualPosition=editor.getCaretModel().getVisualPosition();
      final Point point=editor.visualPositionToXY(new VisualPosition(visualPosition.line + 1,visualPosition.column));
      JBPopupFactory.getInstance().createListPopupBuilder(list).setTitle("Choose variable to reassign").setRequestFocus(true).setItemChoosenCallback(new Runnable(){
        public void run(){
          replaceWithAssignment(declaration,(PsiVariable)list.getSelectedValue(),editor);
        }
      }
).createPopup().show(new RelativePoint(editor.getContentComponent(),point));
    }
    return true;
  }
  return false;
}
