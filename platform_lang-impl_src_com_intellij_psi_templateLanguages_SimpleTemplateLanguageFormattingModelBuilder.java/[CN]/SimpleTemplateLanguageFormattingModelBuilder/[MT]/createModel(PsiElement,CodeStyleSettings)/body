{
  if (element instanceof PsiFile) {
    final FileViewProvider viewProvider=((PsiFile)element).getViewProvider();
    if (viewProvider instanceof TemplateLanguageFileViewProvider) {
      final Language language=((TemplateLanguageFileViewProvider)viewProvider).getTemplateDataLanguage();
      FormattingModelBuilder builder=LanguageFormatting.INSTANCE.forLanguage(language);
      if (builder != null) {
        return builder.createModel(viewProvider.getPsi(language),settings);
      }
    }
  }
  final PsiFile file=element.getContainingFile();
  return new DocumentBasedFormattingModel(new AbstractBlock(element.getNode(),Wrap.createWrap(WrapType.NONE,false),Alignment.createAlignment()){
    @Override protected List<Block> buildChildren(){
      return Collections.emptyList();
    }
    @Override public Spacing getSpacing(    final Block child1,    @NotNull final Block child2){
      return Spacing.getReadOnlySpacing();
    }
    @Override public boolean isLeaf(){
      return true;
    }
  }
,element.getProject(),settings,file.getFileType(),file);
}
