{
  final RefManager refManager=globalInspectionContext.getRefManager();
  refManager.iterate(new RefJavaVisitor(){
    @Override public void visitClass(    RefClass refClass){
      super.visitClass(refClass);
      final PsiClass aClass=refClass.getElement();
      if (ClassUtils.isInnerClass(aClass)) {
        return;
      }
      final Set<RefClass> dependencies=DependencyUtils.calculateDependenciesForClass(refClass);
      final int numDependencies=dependencies.size();
      if (numDependencies <= limit) {
        return;
      }
      final String errorString=InspectionGadgetsBundle.message("class.with.too.many.dependencies.problem.descriptor",refClass.getName(),numDependencies,limit);
      final CommonProblemDescriptor[] descriptors={inspectionManager.createProblemDescriptor(errorString)};
      problemDescriptionsProcessor.addProblemElement(refClass,descriptors);
    }
  }
);
}
