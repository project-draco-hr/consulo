{
  if (!mySettings.WRAP_LONG_LINES || file.getViewProvider().isLockedByPsiOperations()) {
    return;
  }
  Editor editor=PsiUtilBase.findEditor(file);
  EditorFactory editorFactory=null;
  if (editor == null) {
    if (document == null || !ApplicationManager.getApplication().isDispatchThread()) {
      return;
    }
    editorFactory=EditorFactory.getInstance();
    editor=editorFactory.createEditor(document);
  }
  try {
    final Editor editorToUse=editor;
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      @Override public void run(){
        final CaretModel caretModel=editorToUse.getCaretModel();
        final int caretOffset=caretModel.getOffset();
        final RangeMarker caretMarker=editorToUse.getDocument().createRangeMarker(caretOffset,caretOffset);
        doWrapLongLinesIfNecessary(editorToUse,editorToUse.getDocument(),startOffset,endOffset);
        if (caretMarker.isValid() && caretModel.getOffset() != caretMarker.getStartOffset()) {
          caretModel.moveToOffset(caretMarker.getStartOffset());
        }
      }
    }
);
  }
  finally {
    if (document != null) {
      PsiDocumentManager documentManager=PsiDocumentManager.getInstance(file.getProject());
      if (documentManager.isUncommited(document))       documentManager.commitDocument(document);
    }
    if (editorFactory != null) {
      editorFactory.releaseEditor(editor);
    }
  }
}
