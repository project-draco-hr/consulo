{
  if (!mySettings.getCommonSettings(file.getLanguage()).WRAP_LONG_LINES || PostprocessReformattingAspect.getInstance(file.getProject()).isViewProviderLocked(file.getViewProvider()) || document == null) {
    return;
  }
  final VirtualFile vFile=FileDocumentManager.getInstance().getFile(document);
  if ((vFile == null || vFile instanceof LightVirtualFile) && !ApplicationManager.getApplication().isUnitTestMode()) {
    return;
  }
  Editor editor=PsiUtilBase.findEditor(file);
  EditorFactory editorFactory=null;
  if (editor == null) {
    if (!ApplicationManager.getApplication().isDispatchThread()) {
      return;
    }
    editorFactory=EditorFactory.getInstance();
    editor=editorFactory.createEditor(document);
  }
  try {
    final Editor editorToUse=editor;
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      @Override public void run(){
        final CaretModel caretModel=editorToUse.getCaretModel();
        final int caretOffset=caretModel.getOffset();
        final RangeMarker caretMarker=editorToUse.getDocument().createRangeMarker(caretOffset,caretOffset);
        doWrapLongLinesIfNecessary(editorToUse,file.getProject(),editorToUse.getDocument(),startOffset,endOffset);
        if (caretMarker.isValid() && caretModel.getOffset() != caretMarker.getStartOffset()) {
          caretModel.moveToOffset(caretMarker.getStartOffset());
        }
      }
    }
);
  }
  finally {
    PsiDocumentManager documentManager=PsiDocumentManager.getInstance(file.getProject());
    if (documentManager.isUncommited(document))     documentManager.commitDocument(document);
    if (editorFactory != null) {
      editorFactory.releaseEditor(editor);
    }
  }
}
