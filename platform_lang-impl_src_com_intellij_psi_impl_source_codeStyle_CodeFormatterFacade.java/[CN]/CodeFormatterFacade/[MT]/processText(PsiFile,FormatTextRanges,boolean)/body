{
  Project project=file.getProject();
  Document document=PsiDocumentManager.getInstance(project).getDocument(file);
  if (document instanceof DocumentWindow) {
    file=InjectedLanguageUtil.getTopLevelFile(file);
    final DocumentWindow documentWindow=(DocumentWindow)document;
    for (    FormatTextRanges.FormatTextRange range : ranges.getRanges()) {
      range.setTextRange(documentWindow.injectedToHost(range.getTextRange()));
    }
    document=documentWindow.getDelegate();
  }
  final FormattingModelBuilder builder=LanguageFormatting.INSTANCE.forContext(file);
  if (builder != null) {
    if (file.getTextLength() > 0) {
      try {
        ranges.preprocess(file.getNode());
        if (doPostponedFormatting) {
          final PostprocessReformattingAspect component=file.getProject().getComponent(PostprocessReformattingAspect.class);
          component.doPostponedFormatting(file.getViewProvider());
        }
        final FormattingModel originalModel=builder.createModel(file,mySettings);
        final FormattingModel model=new DocumentBasedFormattingModel(originalModel.getRootBlock(),document,project,mySettings,file.getFileType(),file);
        FormatterEx.getInstanceEx().format(model,mySettings,mySettings.getIndentOptions(file.getFileType()),ranges);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
}
