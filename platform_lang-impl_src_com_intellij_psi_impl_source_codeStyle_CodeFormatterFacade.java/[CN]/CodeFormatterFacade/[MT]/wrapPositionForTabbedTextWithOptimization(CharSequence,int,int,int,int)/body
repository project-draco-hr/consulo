{
  int width=0;
  int symbolWidth;
  int result=Integer.MAX_VALUE;
  boolean wrapLine=false;
  for (int i=startLineOffset; i < Math.min(endLineOffset,targetRangeEndOffset); i++) {
    char c=text.charAt(i);
switch (c) {
case '\t':
      symbolWidth=tabSize - (width % tabSize);
    break;
default :
  symbolWidth=1;
}
if (width + symbolWidth + FormatConstants.RESERVED_LINE_WRAP_WIDTH_IN_COLUMNS >= myRightMargin && (Math.min(endLineOffset,targetRangeEndOffset) - i) >= FormatConstants.RESERVED_LINE_WRAP_WIDTH_IN_COLUMNS) {
result=i - 1;
}
if (width + symbolWidth >= myRightMargin) {
wrapLine=true;
break;
}
width+=symbolWidth;
}
return wrapLine ? result : -1;
}
