{
  super(model);
  myEmptyText=new StatusText(this){
    @Override protected boolean isStatusVisible(){
      return JBTable.this.isEmpty();
    }
  }
;
  myExpandableItemsHandler=ExpandableItemsHandlerFactory.install(this);
  setFillsViewportHeight(true);
  addMouseListener(new MyMouseListener());
  getColumnModel().addColumnModelListener(new TableColumnModelListener(){
    public void columnMarginChanged(    ChangeEvent e){
      if (cellEditor != null) {
        cellEditor.stopCellEditing();
      }
    }
    public void columnSelectionChanged(    ListSelectionEvent e){
    }
    public void columnAdded(    TableColumnModelEvent e){
    }
    public void columnMoved(    TableColumnModelEvent e){
    }
    public void columnRemoved(    TableColumnModelEvent e){
    }
  }
);
  final TableModelListener modelListener=new TableModelListener(){
    @Override public void tableChanged(    final TableModelEvent e){
      if (!myRowHeightIsExplicitlySet) {
        myRowHeight=-1;
      }
      if ((e.getType() == TableModelEvent.DELETE && isEmpty()) || (e.getType() == TableModelEvent.INSERT && !isEmpty())) {
        repaintViewport();
      }
    }
  }
;
  if (getModel() != null)   getModel().addTableModelListener(modelListener);
  addPropertyChangeListener("model",new PropertyChangeListener(){
    @Override public void propertyChange(    PropertyChangeEvent evt){
      repaintViewport();
      if (evt.getOldValue() instanceof TableModel) {
        ((TableModel)evt.getOldValue()).removeTableModelListener(modelListener);
      }
      if (evt.getNewValue() instanceof TableModel) {
        ((TableModel)evt.getNewValue()).addTableModelListener(modelListener);
      }
    }
  }
);
  boolean marker=Patches.SUN_BUG_ID_4503845;
}
