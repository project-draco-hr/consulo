{
  super(model,columnModel);
  setSurrendersFocusOnKeystroke(true);
  myEmptyText=new StatusText(this){
    @Override protected boolean isStatusVisible(){
      return isEmpty();
    }
  }
;
  myExpandableItemsHandler=ExpandableItemsHandlerFactory.install(this);
  setFillsViewportHeight(true);
  addMouseListener(new MyMouseListener());
  final TableModelListener modelListener=new TableModelListener(){
    @Override public void tableChanged(    @NotNull final TableModelEvent e){
      onTableChanged(e);
    }
  }
;
  if (getModel() != null)   getModel().addTableModelListener(modelListener);
  addPropertyChangeListener("model",new PropertyChangeListener(){
    @Override public void propertyChange(    @NotNull PropertyChangeEvent evt){
      repaintViewport();
      if (evt.getOldValue() instanceof TableModel) {
        ((TableModel)evt.getOldValue()).removeTableModelListener(modelListener);
      }
      if (evt.getNewValue() instanceof TableModel) {
        ((TableModel)evt.getNewValue()).addTableModelListener(modelListener);
      }
    }
  }
);
  myUiUpdating=false;
  new MyCellEditorRemover();
}
