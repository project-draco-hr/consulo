{
  super.setModel(model);
  if (model instanceof SortableColumnModel) {
    final SortableColumnModel sortableModel=(SortableColumnModel)model;
    if (sortableModel.isSortable()) {
      final TableRowSorter<TableModel> rowSorter=createRowSorter(model);
      rowSorter.setSortsOnUpdates(isSortOnUpdates());
      setRowSorter(rowSorter);
      final RowSorter.SortKey sortKey=sortableModel.getDefaultSortKey();
      if (sortKey != null && sortKey.getColumn() >= 0 && sortKey.getColumn() < model.getColumnCount()) {
        if (sortableModel.getColumnInfos()[sortKey.getColumn()].isSortable()) {
          rowSorter.setSortKeys(Collections.singletonList(sortKey));
        }
      }
    }
 else {
      final RowSorter<? extends TableModel> rowSorter=getRowSorter();
      if (rowSorter instanceof DefaultColumnInfoBasedRowSorter) {
        setRowSorter(null);
      }
    }
  }
}
