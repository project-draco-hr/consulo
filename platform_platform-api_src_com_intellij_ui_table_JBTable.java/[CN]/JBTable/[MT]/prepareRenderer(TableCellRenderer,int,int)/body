{
  final Component result=super.prepareRenderer(renderer,row,column);
  final boolean selected=myExpandableItemsHandler.getExpandedItems().contains(new TableCell(row,column));
  if (UIUtil.isUnderGTKLookAndFeel()) {
    UIUtil.changeBackGround(this,UIUtil.getTreeTextBackground());
  }
  if (isTableDecorationSupported() && isStriped() && result instanceof JComponent) {
    final Color bg=row % 2 == 1 ? getBackground() : DECORATED_ROW_BG_COLOR;
    final JComponent c=(JComponent)result;
    final boolean cellSelected=isCellSelected(row,column);
    if (!cellSelected || (!hasFocus() && !getSelectionBackground().equals(c.getBackground()))) {
      c.setOpaque(true);
      c.setBackground(bg);
      for (      Component child : c.getComponents()) {
        child.setBackground(bg);
      }
    }
  }
  if (!selected)   return result;
  return new JComponent(){
{
      add(result);
      setOpaque(false);
      setLayout(new AbstractLayoutManager(){
        @Override public Dimension preferredLayoutSize(        Container parent){
          return result.getPreferredSize();
        }
        @Override public void layoutContainer(        Container parent){
          Dimension size=parent.getSize();
          Insets i=parent.getInsets();
          Dimension pref=result.getPreferredSize();
          result.setBounds(i.left,i.top,Math.max(pref.width,size.width - i.left - i.right),size.height - i.top - i.bottom);
        }
      }
);
    }
  }
;
}
