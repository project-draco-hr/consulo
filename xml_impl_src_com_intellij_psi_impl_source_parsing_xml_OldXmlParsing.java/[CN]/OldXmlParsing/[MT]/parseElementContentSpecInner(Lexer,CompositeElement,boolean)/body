{
  IElementType tokenType=lexer.getTokenType();
  boolean endedWithDelimiter=false;
  while (tokenType != null && tokenType != XML_TAG_END && tokenType != XML_START_TAG_START && tokenType != XML_ELEMENT_DECL_START && tokenType != XML_RIGHT_PAREN) {
    if (tokenType == XML_BAR && topLevel) {
      addToken(spec,lexer);
      tokenType=lexer.getTokenType();
      continue;
    }
 else     if (tokenType == XML_LEFT_PAREN) {
      if (!parseGroup(spec,lexer))       return false;
      endedWithDelimiter=false;
    }
 else     if (tokenType == XML_ENTITY_REF_TOKEN) {
      spec.rawAddChildren(parseEntityRef(lexer));
      endedWithDelimiter=false;
    }
 else     if (tokenType == XML_NAME || tokenType == XML_CONTENT_EMPTY || tokenType == XML_CONTENT_ANY || tokenType == XML_PCDATA) {
      addToken(spec,lexer);
      endedWithDelimiter=false;
    }
 else {
      spec.rawAddChildren(Factory.createErrorElement(XmlBundle.message("dtd.parser.message.name.or.entity.ref.expected")));
      return false;
    }
    tokenType=lexer.getTokenType();
    if (tokenType == XML_STAR || tokenType == XML_PLUS || tokenType == XML_QUESTION) {
      addToken(spec,lexer);
      tokenType=lexer.getTokenType();
      if (tokenType == XML_PLUS) {
        addToken(spec,lexer);
        tokenType=lexer.getTokenType();
      }
    }
    if (tokenType == XML_BAR || tokenType == XML_COMMA) {
      addToken(spec,lexer);
      tokenType=lexer.getTokenType();
      endedWithDelimiter=true;
    }
  }
  if (endedWithDelimiter && tokenType == XML_RIGHT_PAREN) {
    spec.rawAddChildren(Factory.createErrorElement(XmlBundle.message("dtd.parser.message.name.or.entity.ref.expected")));
  }
  return true;
}
