{
  final PsiMethod overridingMethod=findOverridingMethod(aClass,method);
  if (overridingMethod == null || overridingMethod.hasModifierProperty(PsiModifier.STATIC)) {
    return false;
  }
  if (!method.hasModifierProperty(PsiModifier.PACKAGE_LOCAL)) {
    return true;
  }
  final PsiClass superClass=method.getContainingClass();
  final PsiManager manager=overridingMethod.getManager();
  return JavaPsiFacade.getInstance(manager.getProject()).arePackagesTheSame(superClass,aClass);
}
