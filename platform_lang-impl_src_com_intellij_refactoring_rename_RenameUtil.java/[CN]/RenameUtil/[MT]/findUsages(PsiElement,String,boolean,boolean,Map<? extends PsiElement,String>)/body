{
  final List<UsageInfo> result=Collections.synchronizedList(new ArrayList<UsageInfo>());
  PsiManager manager=element.getManager();
  GlobalSearchScope projectScope=GlobalSearchScope.projectScope(manager.getProject());
  RenamePsiElementProcessor processor=RenamePsiElementProcessor.forElement(element);
  Collection<PsiReference> refs=processor.findReferences(element);
  for (  PsiReference ref : refs) {
    PsiElement referenceElement=ref.getElement();
    result.add(new MoveRenameUsageInfo(referenceElement,ref,ref.getRangeInElement().getStartOffset(),ref.getRangeInElement().getEndOffset(),element,false));
  }
  processor.findCollisions(element,newName,allRenames,result);
  final PsiElement searchForInComments=processor.getElementToSearchInStringsAndComments(element);
  if (searchInStringsAndComments && searchForInComments != null) {
    String stringToSearch=ElementDescriptionUtil.getElementDescription(searchForInComments,NonCodeSearchDescriptionLocation.STRINGS_AND_COMMENTS);
    if (stringToSearch.length() > 0) {
      final String stringToReplace=getStringToReplace(element,newName,false,processor);
      TextOccurrencesUtil.UsageInfoFactory factory=new NonCodeUsageInfoFactory(searchForInComments,stringToReplace);
      TextOccurrencesUtil.addUsagesInStringsAndComments(searchForInComments,stringToSearch,result,factory);
    }
  }
  if (searchForTextOccurences && searchForInComments != null) {
    String stringToSearch=ElementDescriptionUtil.getElementDescription(searchForInComments,NonCodeSearchDescriptionLocation.NON_JAVA);
    final String stringToReplace=getStringToReplace(element,newName,true,processor);
    addTextOccurence(searchForInComments,result,projectScope,stringToSearch,stringToReplace);
    Pair<String,String> additionalStringToSearch=processor.getTextOccurrenceSearchStrings(searchForInComments,newName);
    if (additionalStringToSearch != null) {
      addTextOccurence(searchForInComments,result,projectScope,additionalStringToSearch.first,additionalStringToSearch.second);
    }
  }
  return result.toArray(new UsageInfo[result.size()]);
}
