{
  VirtualFile fileToPatch=findFileToPatch(patchedDir,skipTopDirs);
  if (fileToPatch == null) {
    throw new ApplyPatchException("Cannot find file to patch: " + myBeforeName);
  }
  if (isNewFile()) {
    VirtualFile newFile=fileToPatch.createChildData(this,getBeforeFileName());
    final Document document=FileDocumentManager.getInstance().getDocument(newFile);
    document.setText(myHunks.get(0).getText());
    FileDocumentManager.getInstance().saveDocument(document);
  }
 else   if (isDeletedFile()) {
    fileToPatch.delete(this);
  }
 else {
    byte[] fileContents=fileToPatch.contentsToByteArray();
    CharSequence text=LoadTextUtil.getTextByBinaryPresentation(fileContents,fileToPatch);
    List<String> lines=new ArrayList<String>();
    Collections.addAll(lines,LineTokenizer.tokenize(text,false));
    for (    PatchHunk hunk : myHunks) {
      hunk.apply(lines);
    }
    final Document document=FileDocumentManager.getInstance().getDocument(fileToPatch);
    StringBuilder docText=new StringBuilder();
    for (    String line : lines) {
      docText.append(line).append("\n");
    }
    document.setText(docText.toString());
    FileDocumentManager.getInstance().saveDocument(document);
  }
}
