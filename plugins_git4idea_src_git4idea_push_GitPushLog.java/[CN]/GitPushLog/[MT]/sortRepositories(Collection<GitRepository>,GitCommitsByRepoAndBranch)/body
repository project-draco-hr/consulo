{
  List<GitRepository> repos=new ArrayList<GitRepository>(commits.getRepositories());
  Collections.sort(repos,new Comparator<GitRepository>(){
    @Override public int compare(    GitRepository r1,    GitRepository r2){
      if (selectedRepositories.contains(r1) && !selectedRepositories.contains(r2)) {
        return -1;
      }
      if (!selectedRepositories.contains(r1) && selectedRepositories.contains(r2)) {
        return 1;
      }
      if (commits.get(r1).isEmpty() && !commits.get(r2).isEmpty()) {
        return 1;
      }
      if (commits.get(r2).isEmpty() && !commits.get(r1).isEmpty()) {
        return -1;
      }
      return r1.getPresentableUrl().compareTo(r2.getPresentableUrl());
    }
  }
);
  return repos;
}
