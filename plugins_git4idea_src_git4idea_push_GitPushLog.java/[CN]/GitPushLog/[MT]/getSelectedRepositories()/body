{
  if (myAllRepositories.size() == 1) {
    return myAllRepositories;
  }
  try {
    TREE_CONSTRUCTION_LOCK.readLock().lock();
    if (!myTreeWasConstructed) {
      return myAllRepositories;
    }
 else {
      Collection<GitRepository> selectedRepositories=new ArrayList<GitRepository>(myAllRepositories.size());
      if (myRootNode.getChildCount() == 0) {
        return myAllRepositories;
      }
      for (int i=0; i < myRootNode.getChildCount(); i++) {
        TreeNode child=myRootNode.getChildAt(i);
        if (child instanceof CheckedTreeNode) {
          CheckedTreeNode node=(CheckedTreeNode)child;
          if (node.isChecked()) {
            if (node.getUserObject() instanceof GitRepository) {
              selectedRepositories.add((GitRepository)node.getUserObject());
            }
          }
        }
      }
      return selectedRepositories;
    }
  }
  finally {
    TREE_CONSTRUCTION_LOCK.readLock().unlock();
  }
}
