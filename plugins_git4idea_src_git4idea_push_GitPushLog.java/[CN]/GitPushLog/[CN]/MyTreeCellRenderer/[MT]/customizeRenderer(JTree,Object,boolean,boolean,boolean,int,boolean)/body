{
  Object userObject;
  if (value instanceof CheckedTreeNode) {
    userObject=((CheckedTreeNode)value).getUserObject();
  }
 else   if (value instanceof DefaultMutableTreeNode) {
    userObject=((DefaultMutableTreeNode)value).getUserObject();
  }
 else {
    return;
  }
  ColoredTreeCellRenderer renderer=getTextRenderer();
  Font font=EditorColorsManager.getInstance().getGlobalScheme().getFont(EditorFontType.PLAIN);
  renderer.setFont(font);
  SimpleTextAttributes smallGrey=new SimpleTextAttributes(SimpleTextAttributes.STYLE_SMALLER,UIUtil.getInactiveTextColor());
  if (userObject instanceof GitCommit) {
    GitCommit commit=(GitCommit)userObject;
    SimpleTextAttributes small=new SimpleTextAttributes(SimpleTextAttributes.STYLE_SMALLER,renderer.getForeground());
    renderer.append(commit.getShortHash().toString(),smallGrey);
    renderer.append(String.format(" %" + myDateMaxWidth + "s  ",getDateString(commit)),smallGrey);
    renderer.append(commit.getSubject(),small);
  }
 else   if (userObject instanceof GitRepository) {
    String repositoryPath=calcRootPath((GitRepository)userObject);
    renderer.append(repositoryPath,SimpleTextAttributes.GRAY_ATTRIBUTES);
  }
 else   if (userObject instanceof GitPushBranchInfo) {
    GitPushBranchInfo branchInfo=(GitPushBranchInfo)userObject;
    GitBranch fromBranch=branchInfo.getSourceBranch();
    GitBranch dest=branchInfo.getDestBranch();
    String text=fromBranch.getName() + " -> ";
    if (branchInfo.isNewBranchCreated()) {
      text+="+";
    }
    text+=dest.getName();
    renderer.append(text,branchInfo.isNewBranchCreated() ? SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES);
    if (branchInfo.isNewBranchCreated()) {
      renderer.append(" new branch is created, showing last 10 commits on the current branch",smallGrey);
    }
  }
 else   if (userObject instanceof FakeCommit) {
    int spaces=6 + 15 + 3+ 30;
    String s=String.format("%" + spaces + "s"," ");
    renderer.append(s,new SimpleTextAttributes(SimpleTextAttributes.STYLE_PLAIN,renderer.getBackground()));
  }
 else {
    renderer.append(userObject == null ? "" : userObject.toString());
  }
}
