{
  Object userObject;
  if (value instanceof CheckedTreeNode) {
    userObject=((CheckedTreeNode)value).getUserObject();
  }
 else   if (value instanceof DefaultMutableTreeNode) {
    userObject=((DefaultMutableTreeNode)value).getUserObject();
  }
 else {
    return;
  }
  ColoredTreeCellRenderer renderer=getTextRenderer();
  if (userObject instanceof GitCommit) {
    GitCommit commit=(GitCommit)userObject;
    renderer.append(commit.getSubject(),new SimpleTextAttributes(SimpleTextAttributes.STYLE_SMALLER,getTextRenderer().getForeground()));
    renderer.setToolTipText(getHashString(commit) + " " + getDateString(commit));
  }
 else   if (userObject instanceof GitRepository) {
    String repositoryPath=DvcsUtil.getShortRepositoryName((GitRepository)userObject);
    renderer.append(repositoryPath,SimpleTextAttributes.GRAY_ATTRIBUTES);
  }
 else   if (userObject instanceof GitPushBranchInfo) {
    GitPushBranchInfo branchInfo=(GitPushBranchInfo)userObject;
    GitBranch fromBranch=branchInfo.getSourceBranch();
    GitBranch dest=branchInfo.getDestBranch();
    GitPushBranchInfo.Type type=branchInfo.getType();
    final String showingRecentCommits=", showing " + GitPusher.RECENT_COMMITS_NUMBER + " recent commits";
    String text=fromBranch.getName();
    SimpleTextAttributes attrs=SimpleTextAttributes.REGULAR_ATTRIBUTES;
    String additionalText="";
switch (type) {
case STANDARD:
      text+=" -> " + dest.getName();
    if (branchInfo.getCommits().isEmpty()) {
      additionalText=" nothing to push";
    }
  break;
case NEW_BRANCH:
text+=" -> +" + dest.getName();
attrs=SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES;
additionalText=" new branch will be created" + showingRecentCommits;
break;
case NO_TRACKED_OR_TARGET:
attrs=SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES;
additionalText=" no tracked branch. Use checkbox below to push branch to manually specified" + showingRecentCommits;
break;
}
renderer.append(text,attrs);
renderer.append(additionalText,new SimpleTextAttributes(SimpleTextAttributes.STYLE_SMALLER,UIUtil.getInactiveTextColor()));
}
 else if (userObject instanceof FakeCommit) {
int spaces=6 + 15 + 3+ 30;
String s=String.format("%" + spaces + "s"," ");
renderer.append(s,new SimpleTextAttributes(SimpleTextAttributes.STYLE_PLAIN,renderer.getBackground()));
}
 else if (userObject instanceof MoreCommitsToShow) {
renderer.append("...");
}
 else {
renderer.append(userObject == null ? "" : userObject.toString());
}
}
