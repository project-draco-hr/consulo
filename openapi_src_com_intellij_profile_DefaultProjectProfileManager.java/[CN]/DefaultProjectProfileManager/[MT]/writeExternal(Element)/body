{
  DefaultJDOMExternalizer.writeExternal(this,element);
  if (!USE_PROJECT_LEVEL_SETTINGS)   return;
  final Map<ProfileScope,String> usedProfiles=getProfilesUsedInProject();
  final List<String> differentUsedProfiles=new ArrayList<String>(new HashSet<String>(usedProfiles.values()));
  Collections.sort(differentUsedProfiles);
  if (!usedProfiles.isEmpty()) {
    final Element assignedScopes=new Element(SCOPES);
    List<ProfileScope> scopes=new ArrayList<ProfileScope>(usedProfiles.keySet());
    Collections.sort(scopes,new Comparator<ProfileScope>(){
      public int compare(      final ProfileScope o1,      final ProfileScope o2){
        LOG.assertTrue(o1 != null);
        LOG.assertTrue(o2 != null);
        return o1.getName().compareTo(o2.getName());
      }
    }
);
    for (    ProfileScope scope : scopes) {
      final Element scopeElement=new Element(SCOPE);
      scope.write(scopeElement);
      scopeElement.setAttribute(PROFILE,usedProfiles.get(scope));
      assignedScopes.addContent(scopeElement);
    }
    element.addContent(assignedScopes);
    final Element profiles=new Element(PROFILES);
    for (    String profile : differentUsedProfiles) {
      final Profile projectProfile=myProfiles.get(profile);
      if (projectProfile != null) {
        final Element profileElement=new Element(PROFILE);
        projectProfile.writeExternal(profileElement);
        profiles.addContent(profileElement);
      }
    }
    element.addContent(profiles);
  }
}
