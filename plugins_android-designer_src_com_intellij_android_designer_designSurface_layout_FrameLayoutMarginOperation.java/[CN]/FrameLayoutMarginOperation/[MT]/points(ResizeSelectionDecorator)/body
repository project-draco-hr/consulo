{
  decorator.addPoint(new ResizePoint(){
    private final BasicStroke myStroke=new BasicStroke(1,BasicStroke.CAP_BUTT,BasicStroke.JOIN_MITER,1,DASHES,0);
    @Override protected void paint(    DecorationLayer layer,    Graphics2D g,    RadComponent component){
      Rectangle bounds=component.getBounds(layer);
      applyMargins(bounds,getMargins(component));
      g.setStroke(myStroke);
      g.setColor(Color.red);
      g.drawRect(bounds.x,bounds.y,bounds.width,bounds.height);
    }
    @Override public InputTool findTargetTool(    DecorationLayer layer,    RadComponent component,    int x,    int y){
      return null;
    }
    @Override public Object getType(){
      return null;
    }
    @Override protected InputTool createTool(    RadComponent component){
      return null;
    }
    @Override protected Point getLocation(    DecorationLayer layer,    RadComponent component){
      return null;
    }
  }
);
  decorator.addPoint(new DirectionResizePoint(Color.orange,Color.black,Position.WEST,FrameLayoutMarginOperation.TYPE){
    @Override protected Point getLocation(    DecorationLayer layer,    RadComponent component){
      Point location=super.getLocation(layer,component);
      location.x-=getMargin(component,"leftMargin");
      return location;
    }
  }
);
  decorator.addPoint(new DirectionResizePoint(Color.orange,Color.black,Position.EAST,FrameLayoutMarginOperation.TYPE){
    @Override protected Point getLocation(    DecorationLayer layer,    RadComponent component){
      Point location=super.getLocation(layer,component);
      location.x+=getMargin(component,"rightMargin");
      return location;
    }
  }
.move(1,0.25));
  decorator.addPoint(new DirectionResizePoint(Color.orange,Color.black,Position.NORTH,FrameLayoutMarginOperation.TYPE){
    @Override protected Point getLocation(    DecorationLayer layer,    RadComponent component){
      Point location=super.getLocation(layer,component);
      location.y-=getMargin(component,"topMargin");
      return location;
    }
  }
);
  decorator.addPoint(new DirectionResizePoint(Color.orange,Color.black,Position.SOUTH,FrameLayoutMarginOperation.TYPE){
    @Override protected Point getLocation(    DecorationLayer layer,    RadComponent component){
      Point location=super.getLocation(layer,component);
      location.y+=getMargin(component,"bottomMargin");
      return location;
    }
  }
.move(0.25,1));
}
