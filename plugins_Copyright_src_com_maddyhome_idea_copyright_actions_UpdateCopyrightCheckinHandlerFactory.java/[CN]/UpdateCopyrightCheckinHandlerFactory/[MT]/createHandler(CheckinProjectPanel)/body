{
  return new CheckinHandler(){
    @Override public RefreshableOnComponent getBeforeCheckinConfigurationPanel(){
      final JCheckBox updateCopyrightCb=new JCheckBox("Update copyright");
      return new RefreshableOnComponent(){
        public JComponent getComponent(){
          final JPanel panel=new JPanel(new BorderLayout());
          panel.add(updateCopyrightCb,BorderLayout.WEST);
          return panel;
        }
        public void refresh(){
        }
        public void saveState(){
          UPDATE_COPYRIGHT=updateCopyrightCb.isSelected();
        }
        public void restoreState(){
          updateCopyrightCb.setSelected(UPDATE_COPYRIGHT);
        }
      }
;
    }
    @Override public ReturnResult beforeCheckin(    @Nullable CommitExecutor executor){
      new UpdateCopyrightProcessor(panel.getProject(),null,getPsiFiles()).run();
      FileDocumentManager.getInstance().saveAllDocuments();
      return super.beforeCheckin();
    }
    private PsiFile[] getPsiFiles(){
      final Collection<VirtualFile> files=panel.getVirtualFiles();
      final List<PsiFile> psiFiles=new ArrayList<PsiFile>();
      final PsiManager manager=PsiManager.getInstance(panel.getProject());
      for (      final VirtualFile file : files) {
        final PsiFile psiFile=manager.findFile(file);
        if (psiFile != null) {
          psiFiles.add(psiFile);
        }
      }
      return psiFiles.toArray(new PsiFile[psiFiles.size()]);
    }
  }
;
}
