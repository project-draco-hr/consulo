{
  JVMNameBuffer signature=new JVMNameBuffer();
  signature.append("(");
  if (method.isConstructor()) {
    final PsiClass declaringClass=method.getContainingClass();
    if (declaringClass != null) {
      final PsiClass outerClass=declaringClass.getContainingClass();
      if (outerClass != null) {
        if (!declaringClass.hasModifierProperty(PsiModifier.STATIC)) {
          appendJvmClassQualifiedName(signature,getJVMQualifiedName(outerClass));
        }
      }
    }
  }
  for (  PsiParameter psiParameter : method.getParameterList().getParameters()) {
    appendJVMSignature(signature,psiParameter.getType());
  }
  signature.append(")");
  if (!method.isConstructor()) {
    appendJVMSignature(signature,method.getReturnType());
  }
 else {
    signature.append(new JVMRawText("V"));
  }
  return signature.toName();
}
