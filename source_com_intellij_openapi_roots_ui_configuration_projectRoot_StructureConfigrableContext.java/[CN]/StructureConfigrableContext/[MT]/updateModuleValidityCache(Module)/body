{
  if (myValidityCache.containsKey(module))   return;
  final OrderEntry[] entries=myModulesConfigurator.getRootModel(module).getOrderEntries();
  Map<String,Set<String>> problems=null;
  for (  OrderEntry entry : entries) {
    if (myDisposed)     return;
    if (!entry.isValid()) {
      if (problems == null) {
        problems=new HashMap<String,Set<String>>();
      }
      if (entry instanceof JdkOrderEntry && ((JdkOrderEntry)entry).getJdkName() == null) {
        problems.put(NO_JDK,null);
      }
 else {
        Set<String> deletedLibraries=problems.get(DELETED_LIBRARIES);
        if (deletedLibraries == null) {
          deletedLibraries=new HashSet<String>();
          problems.put(DELETED_LIBRARIES,deletedLibraries);
        }
        deletedLibraries.add(entry.getPresentableName());
      }
    }
  }
  final Map<String,Set<String>> finalProblems=problems;
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      if (!myDisposed) {
        myValidityCache.put(module,finalProblems);
        fireOnCacheChanged();
      }
    }
  }
);
}
