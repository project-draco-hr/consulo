{
  String url=builder.myUrl;
  for (int i=0; i < builder.myRedirectLimit; i++) {
    if (builder.myForceHttps && StringUtil.startsWith(url,"http:")) {
      url="https:" + url.substring(5);
    }
    if (url.startsWith("https:") && ApplicationManager.getApplication() != null) {
      CertificateManager.getInstance();
    }
    URLConnection connection;
    if (!builder.myUseProxy) {
      connection=new URL(url).openConnection(Proxy.NO_PROXY);
    }
 else     if (ApplicationManager.getApplication() == null) {
      connection=new URL(url).openConnection();
    }
 else {
      connection=HttpConfigurable.getInstance().openConnection(url);
    }
    connection.setConnectTimeout(builder.myConnectTimeout);
    connection.setReadTimeout(builder.myTimeout);
    if (builder.myUserAgent != null) {
      connection.setRequestProperty("User-Agent",builder.myUserAgent);
    }
    if (builder.myHostnameVerifier != null && connection instanceof HttpsURLConnection) {
      ((HttpsURLConnection)connection).setHostnameVerifier(builder.myHostnameVerifier);
    }
    if (builder.myGzip) {
      connection.setRequestProperty("Accept-Encoding","gzip");
    }
    if (builder.myAccept != null) {
      connection.setRequestProperty("Accept",builder.myAccept);
    }
    connection.setUseCaches(false);
    if (builder.myTuner != null) {
      builder.myTuner.tune(connection);
    }
    if (connection instanceof HttpURLConnection) {
      int responseCode=((HttpURLConnection)connection).getResponseCode();
      if (responseCode < 200 || responseCode >= 300 && responseCode != HttpURLConnection.HTTP_NOT_MODIFIED) {
        ((HttpURLConnection)connection).disconnect();
        if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP) {
          url=connection.getHeaderField("Location");
          if (url != null) {
            continue;
          }
        }
        String message=IdeBundle.message("error.connection.failed.with.http.code.N",responseCode);
        throw new HttpStatusException(message,responseCode,StringUtil.notNullize(url,"Empty URL"));
      }
    }
    return connection;
  }
  throw new IOException(IdeBundle.message("error.connection.failed.redirects"));
}
