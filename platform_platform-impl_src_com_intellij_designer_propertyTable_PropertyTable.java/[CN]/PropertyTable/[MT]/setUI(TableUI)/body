{
  super.setUI(ui);
  ActionMap actionMap=getActionMap();
  InputMap focusedInputMap=getInputMap(JComponent.WHEN_FOCUSED);
  InputMap ancestorInputMap=getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  actionMap.put("selectPreviousRow",new MySelectNextPreviousRowAction(false));
  actionMap.put("selectNextRow",new MySelectNextPreviousRowAction(true));
  actionMap.put("startEditing",new MyStartEditingAction());
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2,0),"startEditing");
  ancestorInputMap.remove(KeyStroke.getKeyStroke(KeyEvent.VK_F2,0));
  actionMap.put("smartEnter",new MyEnterAction());
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),"smartEnter");
  ancestorInputMap.remove(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0));
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),"cancel");
  ancestorInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),"cancel");
  actionMap.put("restoreDefault",new MyRestoreDefaultAction());
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0),"restoreDefault");
  ancestorInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0),"restoreDefault");
  actionMap.put("expandCurrent",new MyExpandCurrentAction(true));
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ADD,0),"expandCurrent");
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT,0),"expandCurrent");
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_KP_RIGHT,0),"expandCurrent");
  ancestorInputMap.remove(KeyStroke.getKeyStroke(KeyEvent.VK_ADD,0));
  ancestorInputMap.remove(KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT,0));
  ancestorInputMap.remove(KeyStroke.getKeyStroke(KeyEvent.VK_KP_RIGHT,0));
  actionMap.put("collapseCurrent",new MyExpandCurrentAction(false));
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_SUBTRACT,0),"collapseCurrent");
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_LEFT,0),"collapseCurrent");
  focusedInputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_KP_LEFT,0),"collapseCurrent");
  ancestorInputMap.remove(KeyStroke.getKeyStroke(KeyEvent.VK_SUBTRACT,0));
  ancestorInputMap.remove(KeyStroke.getKeyStroke(KeyEvent.VK_LEFT,0));
  ancestorInputMap.remove(KeyStroke.getKeyStroke(KeyEvent.VK_KP_LEFT,0));
}
