{
  final TextRange textRange=ElementManipulators.getValueTextRange(element);
  if (myCompiledValuePattern == null) {
    return Collections.singletonList(textRange);
  }
 else {
    final LiteralTextEscaper<? extends PsiLanguageInjectionHost> textEscaper=((PsiLanguageInjectionHost)element).createLiteralTextEscaper();
    final StringBuilder sb=new StringBuilder();
    textEscaper.decode(textRange,sb);
    final List<TextRange> ranges=getMatchingRanges(myCompiledValuePattern.matcher(StringPattern.newBombedCharSequence(sb)),sb.length());
    return !ranges.isEmpty() ? ContainerUtil.map(ranges,new Function<TextRange,TextRange>(){
      public TextRange fun(      TextRange s){
        return new TextRange(textEscaper.getOffsetInHost(s.getStartOffset(),textRange),textEscaper.getOffsetInHost(s.getEndOffset(),textRange));
      }
    }
) : Collections.<TextRange>emptyList();
  }
}
