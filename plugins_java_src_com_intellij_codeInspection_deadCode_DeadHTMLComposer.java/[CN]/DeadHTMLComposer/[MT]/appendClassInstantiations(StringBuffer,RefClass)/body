{
  if (!refClass.isInterface() && !refClass.isAbstract() && !refClass.isUtilityClass()) {
    boolean found=false;
    appendHeading(buf,InspectionsBundle.message("inspection.dead.code.export.results.instantiated.from.heading"));
    startList(buf);
    for (Iterator<RefMethod> iterator=refClass.getConstructors().iterator(); iterator.hasNext(); ) {
      RefMethod refMethod=iterator.next();
      for (Iterator<RefElement> constructorCallersIterator=refMethod.getInReferences().iterator(); constructorCallersIterator.hasNext(); ) {
        RefElement refCaller=constructorCallersIterator.next();
        appendListItem(buf,refCaller);
        found=true;
      }
    }
    if (!found) {
      startListItem(buf);
      buf.append(InspectionsBundle.message("inspection.dead.code.export.results.no.instantiations.found"));
      doneListItem(buf);
    }
    doneList(buf);
  }
}
