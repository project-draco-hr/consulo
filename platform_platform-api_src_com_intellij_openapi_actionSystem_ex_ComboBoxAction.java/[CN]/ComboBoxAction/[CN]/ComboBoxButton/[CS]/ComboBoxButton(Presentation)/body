{
  myPresentation=presentation;
  setModel(new MyButtonModel());
  setHorizontalAlignment(LEFT);
  setFocusable(false);
  Insets margins=getMargin();
  setMargin(new Insets(margins.top,2,margins.bottom,2));
  if (isSmallVariant()) {
    setBorder(IdeBorderFactory.createEmptyBorder(0,2,0,2));
    if (!UIUtil.isUnderGTKLookAndFeel()) {
      setFont(UIUtil.getLabelFont().deriveFont(11.0f));
    }
  }
  addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (!myForcePressed) {
        IdeFocusManager.getGlobalInstance().doWhenFocusSettlesDown(new Runnable(){
          public void run(){
            showPopup();
          }
        }
);
      }
    }
  }
);
  putClientProperty("Quaqua.Button.style","placard");
  addMouseListener(new MouseAdapter(){
    @Override public void mouseEntered(    MouseEvent e){
      myMouseInside=true;
      repaint();
    }
    @Override public void mouseExited(    MouseEvent e){
      myMouseInside=false;
      repaint();
    }
    @Override public void mousePressed(    final MouseEvent e){
      if (SwingUtilities.isLeftMouseButton(e)) {
        e.consume();
        doClick();
      }
    }
    @Override public void mouseReleased(    MouseEvent e){
      dispatchEventToPopup(e);
    }
  }
);
  addMouseMotionListener(new MouseMotionListener(){
    @Override public void mouseDragged(    MouseEvent e){
      mouseMoved(new MouseEvent(e.getComponent(),MouseEvent.MOUSE_MOVED,e.getWhen(),e.getModifiers(),e.getX(),e.getY(),e.getClickCount(),e.isPopupTrigger(),e.getButton()));
    }
    @Override public void mouseMoved(    MouseEvent e){
      dispatchEventToPopup(e);
    }
  }
);
}
