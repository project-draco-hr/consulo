{
  myPresentation=presentation;
  setEnabled(myPresentation.isEnabled());
  setModel(new MyButtonModel());
  setHorizontalAlignment(LEFT);
  setFocusable(false);
  Insets margins=getMargin();
  setMargin(JBUI.insets(margins.top,2,margins.bottom,2));
  if (isSmallVariant()) {
    setBorder(JBUI.Borders.empty(0,2));
    if (!UIUtil.isUnderGTKLookAndFeel()) {
      setFont(JBUI.Fonts.label(11));
    }
  }
  addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (!myForcePressed) {
        IdeFocusManager.getGlobalInstance().doWhenFocusSettlesDown(new Runnable(){
          @Override public void run(){
            showPopup();
          }
        }
);
      }
    }
  }
);
  addMouseListener(new MouseAdapter(){
    @Override public void mouseEntered(    MouseEvent e){
      myMouseInside=true;
      repaint();
    }
    @Override public void mouseExited(    MouseEvent e){
      myMouseInside=false;
      repaint();
    }
    @Override public void mousePressed(    final MouseEvent e){
      if (SwingUtilities.isLeftMouseButton(e)) {
        e.consume();
        doClick();
      }
    }
    @Override public void mouseReleased(    MouseEvent e){
      dispatchEventToPopup(e);
    }
  }
);
  addMouseMotionListener(new MouseMotionListener(){
    @Override public void mouseDragged(    MouseEvent e){
      mouseMoved(MouseEventAdapter.convert(e,e.getComponent(),MouseEvent.MOUSE_MOVED,e.getWhen(),e.getModifiers() | e.getModifiersEx(),e.getX(),e.getY()));
    }
    @Override public void mouseMoved(    MouseEvent e){
      dispatchEventToPopup(e);
    }
  }
);
}
