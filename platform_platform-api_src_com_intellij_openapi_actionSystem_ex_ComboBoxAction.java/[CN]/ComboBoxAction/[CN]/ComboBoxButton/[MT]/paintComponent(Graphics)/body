{
  final boolean isEmpty=getIcon() == null && StringUtil.isEmpty(getText());
  final Dimension size=getSize();
  if (isSmallVariant()) {
    final Graphics2D g2=(Graphics2D)g;
    g2.setColor(UIUtil.getControlColor());
    final int w=getWidth();
    final int h=getHeight();
    g2.setPaint(new GradientPaint(0,0,new Gray(250,180),0,h,new Gray(220,180)));
    g2.fillRect(2,0,w - 2,h);
    if (!myMouseInside) {
      g2.setPaint(new GradientPaint(0,0,Gray._180,0,h,Gray._150));
    }
 else {
      g2.setColor(UIUtil.isUnderAquaLookAndFeel() ? Gray._130 : new Color(8,36,107));
    }
    g2.drawRect(2,0,w - 3,h - 1);
    final Icon icon=getIcon();
    int x=7;
    if (icon != null) {
      icon.paintIcon(null,g,x,(size.height - icon.getIconHeight()) / 2);
      x+=icon.getIconWidth() + 3;
    }
    if (!StringUtil.isEmpty(getText())) {
      final Font font=getFont();
      g2.setFont(font);
      g2.setColor(UIManager.getColor("Button.foreground"));
      g2.drawString(getText(),x,(size.height + font.getSize()) / 2 - 1);
    }
  }
 else {
    super.paintComponent(g);
  }
  final Insets insets=super.getInsets();
  final Icon icon=isEnabled() ? ARROW_ICON : DISABLED_ARROW_ICON;
  final int x;
  if (isEmpty) {
    x=(size.width - icon.getIconWidth()) / 2;
  }
 else {
    if (isSmallVariant()) {
      x=size.width - icon.getIconWidth() - insets.right + 1;
    }
 else {
      x=size.width - icon.getIconWidth() - insets.right + (UIUtil.isUnderNimbusLookAndFeel() ? -3 : 2);
    }
  }
  icon.paintIcon(null,g,x,(size.height - icon.getIconHeight()) / 2);
}
