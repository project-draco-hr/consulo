{
  try {
    int selectedIndex=myContents.indexOf(mySelection);
    int indexToBeRemoved=myContents.indexOf(content);
    if (indexToBeRemoved < 0) {
      return false;
    }
    if (!fireContentRemoveQuery(content,indexToBeRemoved)) {
      return false;
    }
    if (!content.isValid()) {
      return false;
    }
    boolean wasSelected=isSelected(content);
    if (wasSelected) {
      removeSelectedContent(content);
    }
    int indexToSelect=-1;
    if (wasSelected) {
      int i=indexToBeRemoved - 1;
      if (i >= 0) {
        indexToSelect=i;
      }
 else       if (getContentCount() > 1) {
        indexToSelect=0;
      }
    }
 else     if (selectedIndex > indexToBeRemoved) {
      indexToSelect=selectedIndex - 1;
    }
    myContents.remove(content);
    content.removePropertyChangeListener(this);
    int newSize=myContents.size();
    if (newSize > 0) {
      if (indexToSelect > -1) {
        final Content toSelect=myContents.get(indexToSelect);
        if (!isSelected(toSelect)) {
          if (myUI.isSingleSelection()) {
            setSelectedContent(toSelect);
          }
 else {
            addSelectedContent(toSelect);
          }
        }
      }
    }
 else {
      mySelection.clear();
    }
    fireContentRemoved(content,indexToBeRemoved);
    ((ContentImpl)content).setManager(null);
    final Disposable disposer=content.getDisposer();
    if (disposer != null) {
      Disposer.dispose(disposer);
    }
    return true;
  }
  finally {
    removeProjectManagerListener();
  }
}
