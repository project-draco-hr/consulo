{
  final List<String> invalidUrls=library.getInvalidRootUrls(type);
  if (!invalidUrls.isEmpty()) {
    final String description=createInvalidRootsDescription(invalidUrls,rootName,library.getName());
    final PlaceInProjectStructure place=createPlace();
    final String message=ProjectBundle.message("project.roots.error.message.invalid.roots",rootName,invalidUrls.size());
    ProjectStructureProblemDescription.ProblemLevel level=library.getTable().getTableLevel().equals(LibraryTablesRegistrar.PROJECT_LEVEL) ? ProjectStructureProblemDescription.ProblemLevel.PROJECT : ProjectStructureProblemDescription.ProblemLevel.GLOBAL;
    problemsHolder.registerProblem(new ProjectStructureProblemDescription(message,description,place,problemType,level,Collections.singletonList(new RemoveInvalidRootsQuickFix(library,type,invalidUrls)),true));
  }
}
