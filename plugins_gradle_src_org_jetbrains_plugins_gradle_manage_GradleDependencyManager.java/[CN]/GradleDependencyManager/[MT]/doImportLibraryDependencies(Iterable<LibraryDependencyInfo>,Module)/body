{
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          GradleUtil.executeProjectChangeAction(module.getProject(),infos,new Runnable(){
            @Override public void run(){
              ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
              final ModifiableRootModel moduleRootModel=moduleRootManager.getModifiableModel();
              try {
                for (                LibraryDependencyInfo info : infos) {
                  LibraryOrderEntry orderEntry=moduleRootModel.addLibraryEntry(info.library);
                  orderEntry.setExported(info.exported);
                  orderEntry.setScope(info.scope);
                }
              }
  finally {
                moduleRootModel.commit();
              }
            }
          }
);
        }
      }
);
    }
  }
);
}
