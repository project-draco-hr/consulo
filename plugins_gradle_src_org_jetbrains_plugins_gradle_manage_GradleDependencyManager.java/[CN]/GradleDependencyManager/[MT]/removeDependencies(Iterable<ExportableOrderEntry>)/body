{
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          for (          final ExportableOrderEntry dependency : dependencies) {
            final Module module=dependency.getOwnerModule();
            GradleUtil.executeProjectChangeAction(module.getProject(),dependency,new Runnable(){
              @Override public void run(){
                ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
                final ModifiableRootModel moduleRootModel=moduleRootManager.getModifiableModel();
                try {
                  for (                  OrderEntry entry : moduleRootModel.getOrderEntries()) {
                    if (entry.getPresentableName().equals(dependency.getPresentableName())) {
                      moduleRootModel.removeOrderEntry(entry);
                      break;
                    }
                  }
                }
  finally {
                  moduleRootModel.commit();
                }
              }
            }
);
          }
        }
      }
);
    }
  }
);
}
