{
  if (expression instanceof PsiReferenceExpression) {
    final PsiManager manager=method.getManager();
    if (manager.isInProject(method)) {
      final PsiMethod[] superMethods=method.findDeepestSuperMethods();
      for (      PsiMethod superMethod : superMethods) {
        if (!manager.isInProject(superMethod))         return;
      }
      final PsiElement resolve=((PsiReferenceExpression)expression).resolve();
      if (resolve instanceof PsiVariable) {
        HighlightUtil.registerChangeVariableTypeFixes((PsiVariable)resolve,parameterType,highlightInfo);
      }
    }
  }
}
