{
  final List<RunnableFuture> futures=new ArrayList<RunnableFuture>();
synchronized (myBuildsInProgress) {
    for (Iterator<Pair<RunnableFuture,CompilationTask>> it=myBuildsInProgress.iterator(); it.hasNext(); ) {
      final Pair<RunnableFuture,CompilationTask> pair=it.next();
      it.remove();
      pair.second.cancel();
      final RunnableFuture future=pair.first;
      futures.add(future);
      future.cancel(false);
    }
  }
  ServerState.getInstance().clearCahedState();
  for (  RunnableFuture future : futures) {
    try {
      future.get();
    }
 catch (    InterruptedException ignored) {
    }
catch (    ExecutionException ignored) {
    }
  }
}
