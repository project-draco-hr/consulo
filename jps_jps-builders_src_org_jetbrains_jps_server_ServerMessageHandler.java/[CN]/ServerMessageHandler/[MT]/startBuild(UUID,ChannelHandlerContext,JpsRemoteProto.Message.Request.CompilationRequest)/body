{
  if (!compileRequest.hasProjectId()) {
    return ProtoUtil.toMessage(sessionId,ProtoUtil.createFailure("No project specified"));
  }
  final String projectId=compileRequest.getProjectId();
  final JpsRemoteProto.Message.Request.CompilationRequest.Type compileType=compileRequest.getCommandType();
switch (compileType) {
case MAKE:
case FORCED_COMPILATION:
case REBUILD:
{
      channelContext.setAttachment(sessionId);
      final BuildType buildType=convertCompileType(compileType);
      final CompilationTask task=new CompilationTask(sessionId,channelContext,projectId,buildType,compileRequest.getModuleNameList(),compileRequest.getArtifactNameList(),compileRequest.getFilePathList());
      final RunnableFuture future=getCompileTaskExecutor(projectId).submit(task);
      myBuildsInProgress.add(new Pair<RunnableFuture,CompilationTask>(future,task));
      return null;
    }
default :
  return ProtoUtil.toMessage(sessionId,ProtoUtil.createFailure("Unsupported command: '" + compileType + "'"));
}
}
