{
  Channels.write(myChannelContext.getChannel(),ProtoUtil.toMessage(mySessionId,ProtoUtil.createBuildStartedEvent("build started")));
  Throwable error=null;
  try {
    ServerState.getInstance().startBuild(myProjectPath,myModules,myParams,new MessageHandler(){
      public void processMessage(      BuildMessage buildMessage){
        final JpsRemoteProto.Message.Response response;
        if (buildMessage instanceof CompilerMessage) {
          final CompilerMessage compilerMessage=(CompilerMessage)buildMessage;
          response=ProtoUtil.createCompileMessageResponse(compilerMessage.getKind(),compilerMessage.getMessageText(),compilerMessage.getSourcePath(),compilerMessage.getProblemBeginOffset(),compilerMessage.getProblemEndOffset(),compilerMessage.getProblemLocationOffset(),compilerMessage.getLine(),compilerMessage.getColumn());
        }
 else {
          response=ProtoUtil.createCompileProgressMessageResponse(buildMessage.getMessageText());
        }
        Channels.write(myChannelContext.getChannel(),ProtoUtil.toMessage(mySessionId,response));
      }
    }
);
  }
 catch (  Throwable e) {
    error=e;
  }
 finally {
    final JpsRemoteProto.Message lastMessage;
    if (error != null) {
      Throwable cause=error.getCause();
      if (cause == null) {
        cause=error;
      }
      final ByteArrayOutputStream out=new ByteArrayOutputStream();
      cause.printStackTrace(new PrintStream(out));
      final StringBuilder messageText=new StringBuilder();
      messageText.append("JPS Internal error: (").append(cause.getClass().getName()).append(") ").append(cause.getMessage());
      final String trace=out.toString();
      if (!trace.isEmpty()) {
        messageText.append("\n").append(trace);
      }
      lastMessage=ProtoUtil.toMessage(mySessionId,ProtoUtil.createFailure(messageText.toString(),cause));
    }
 else {
      lastMessage=ProtoUtil.toMessage(mySessionId,ProtoUtil.createBuildCompletedEvent("build completed"));
    }
    Channels.write(myChannelContext.getChannel(),lastMessage).addListener(new ChannelFutureListener(){
      public void operationComplete(      ChannelFuture future) throws Exception {
        myBuildsInProgress.remove(myProjectPath);
      }
    }
);
  }
}
