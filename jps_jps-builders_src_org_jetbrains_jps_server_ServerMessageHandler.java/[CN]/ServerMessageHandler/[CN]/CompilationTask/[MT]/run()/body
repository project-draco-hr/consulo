{
  Channels.write(myChannelContext.getChannel(),ProtoUtil.toMessage(mySessionId,ProtoUtil.createBuildStartedEvent("build started")));
  Throwable error=null;
  try {
    ServerState.getInstance().startBuild(myProjectPath,myModules,myParams,new MessageHandler(){
      public void processMessage(      BuildMessage buildMessage){
        final JpsRemoteProto.Message.Response response;
        if (buildMessage instanceof CompilerMessage) {
          final CompilerMessage compilerMessage=(CompilerMessage)buildMessage;
          final String text=compilerMessage.getCompilerName() + ": " + compilerMessage.getMessageText();
          response=ProtoUtil.createCompileMessageResponse(compilerMessage.getKind(),text,compilerMessage.getSourcePath(),compilerMessage.getProblemBeginOffset(),compilerMessage.getProblemEndOffset(),compilerMessage.getProblemLocationOffset(),compilerMessage.getLine(),compilerMessage.getColumn());
        }
 else {
          response=ProtoUtil.createCompileProgressMessageResponse(buildMessage.getMessageText());
        }
        Channels.write(myChannelContext.getChannel(),ProtoUtil.toMessage(mySessionId,response));
      }
    }
);
  }
 catch (  Throwable e) {
    error=e;
  }
 finally {
    finishBuild(error);
  }
}
