{
  Channels.write(myChannelContext.getChannel(),ProtoUtil.toMessage(mySessionId,ProtoUtil.createBuildStartedEvent("build started")));
  Throwable error=null;
  try {
    ServerState.getInstance().startBuild(myProjectPath,myModules,myPaths,myParams,new MessageHandler(){
      public void processMessage(      BuildMessage buildMessage){
        final JpsRemoteProto.Message.Response response;
        if (buildMessage instanceof CompilerMessage) {
          final CompilerMessage compilerMessage=(CompilerMessage)buildMessage;
          final String text=compilerMessage.getCompilerName() + ": " + compilerMessage.getMessageText();
          response=ProtoUtil.createCompileMessageResponse(compilerMessage.getKind(),text,compilerMessage.getSourcePath(),compilerMessage.getProblemBeginOffset(),compilerMessage.getProblemEndOffset(),compilerMessage.getProblemLocationOffset(),compilerMessage.getLine(),compilerMessage.getColumn(),-1.0f);
        }
 else {
          float done=-1.0f;
          if (buildMessage instanceof ProgressMessage) {
            done=((ProgressMessage)buildMessage).getDone();
          }
          response=ProtoUtil.createCompileProgressMessageResponse(buildMessage.getMessageText(),done);
        }
        Channels.write(myChannelContext.getChannel(),ProtoUtil.toMessage(mySessionId,response));
      }
    }
,this);
  }
 catch (  Throwable e) {
    error=e;
  }
 finally {
    finishBuild(error);
  }
}
