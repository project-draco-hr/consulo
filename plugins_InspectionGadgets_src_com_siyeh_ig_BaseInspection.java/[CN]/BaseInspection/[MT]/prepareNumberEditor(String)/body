{
  try {
    final NumberFormat formatter=NumberFormat.getIntegerInstance();
    formatter.setParseIntegerOnly(true);
    final JFormattedTextField valueField=new JFormattedTextField(formatter);
    final Field field=getClass().getField(fieldName);
    valueField.setValue(field.get(this));
    valueField.setColumns(4);
    UIUtil.fixFormattedField(valueField);
    final Document document=valueField.getDocument();
    document.addDocumentListener(new DocumentAdapter(){
      @Override public void textChanged(      DocumentEvent evt){
        try {
          valueField.commitEdit();
          field.set(BaseInspection.this,((Number)valueField.getValue()).intValue());
        }
 catch (        IllegalAccessException e) {
          LOG.error(e);
        }
catch (        ParseException e) {
        }
      }
    }
);
    return valueField;
  }
 catch (  NoSuchFieldException e) {
    LOG.error(e);
  }
catch (  IllegalAccessException e) {
    LOG.error(e);
  }
  return null;
}
