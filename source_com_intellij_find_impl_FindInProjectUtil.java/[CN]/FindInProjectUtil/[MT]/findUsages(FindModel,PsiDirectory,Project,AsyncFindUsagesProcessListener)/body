{
  final ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
  final Collection<PsiFile> psiFiles=getFilesToSearchIn(findModel,project,psiDirectory);
  final FileDocumentManager manager=FileDocumentManager.getInstance();
  try {
    int i=0;
    for (    final PsiFile psiFile : psiFiles) {
      ProgressManager.getInstance().checkCanceled();
      final VirtualFile virtualFile=psiFile.getVirtualFile();
      final int index=i++;
      if (virtualFile == null)       continue;
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          if (virtualFile.isValid()) {
            if (FileTypeManager.getInstance().getFileTypeByFile(virtualFile).isBinary())             return;
            final Document document=manager.getDocument(virtualFile);
            if (document != null) {
              addToUsages(project,document,consumer,findModel,psiFile);
              if (progress != null) {
                progress.setFraction((double)index / psiFiles.size());
                String text="Searching for '" + findModel.getStringToFind() + "' in "+ virtualFile.getPresentableUrl()+ "...";
                progress.setText(text);
                int size=consumer.getCount();
                progress.setText2((size == 0 ? "No" : Integer.toString(size)) + " occurrence" + (size != 1 ? "s" : "")+ " found so far");
              }
            }
          }
        }
      }
);
    }
  }
 catch (  ProcessCanceledException e) {
  }
  if (progress != null) {
    progress.setText("Search completed");
  }
  consumer.findUsagesCompleted();
}
