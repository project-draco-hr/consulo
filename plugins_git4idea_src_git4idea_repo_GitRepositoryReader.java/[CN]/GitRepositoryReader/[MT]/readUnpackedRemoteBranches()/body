{
  final Set<GitBranch> branches=new HashSet<GitBranch>();
  if (!myRefsRemotesDir.exists()) {
    return branches;
  }
  FileUtil.processFilesRecursively(myRefsRemotesDir,new Processor<File>(){
    @Override public boolean process(    File file){
      if (!file.isDirectory()) {
        final String relativePath=FileUtil.getRelativePath(myRefsRemotesDir,file);
        if (relativePath != null) {
          String branchName=FileUtil.toSystemIndependentName(relativePath);
          String hash=loadHashFromBranchFile(file);
          branches.add(new GitBranch(branchName,hash == null ? "" : hash,false,true));
        }
      }
      return true;
    }
  }
);
  return branches;
}
