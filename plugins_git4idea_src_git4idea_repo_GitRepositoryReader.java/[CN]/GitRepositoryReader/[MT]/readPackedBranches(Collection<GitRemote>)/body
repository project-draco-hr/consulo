{
  final Set<GitLocalBranch> localBranches=new HashSet<GitLocalBranch>();
  final Set<GitRemoteBranch> remoteBranches=new HashSet<GitRemoteBranch>();
  if (!myPackedRefsFile.exists()) {
    return GitBranchesCollection.EMPTY;
  }
  final String content=tryLoadFile(myPackedRefsFile);
  for (  String line : content.split("\n")) {
    parsePackedRefsLine(line,new PackedRefsLineResultHandler(){
      @Override public void handleResult(      @Nullable String hash,      @Nullable String branchName){
        if (hash == null || branchName == null) {
          return;
        }
        if (branchName.startsWith(REFS_HEADS_PREFIX)) {
          localBranches.add(new GitLocalBranch(branchName,Hash.create(hash)));
        }
 else         if (branchName.startsWith(REFS_REMOTES_PREFIX)) {
          GitRemoteBranch remoteBranch=GitBranchUtil.parseRemoteBranch(branchName,Hash.create(hash),remotes);
          if (remoteBranch != null) {
            remoteBranches.add(remoteBranch);
          }
        }
      }
    }
);
  }
  return new GitBranchesCollection(localBranches,remoteBranches);
}
