{
  setDownloadStatus(true);
  new com.intellij.util.concurrency.SwingWorker(){
    ArrayList<IdeaPluginDescriptor> list=null;
    Exception error;
    public Object construct(){
      try {
        list=RepositoryHelper.process(null);
      }
 catch (      Exception e) {
        error=e;
      }
      return list;
    }
    public void finished(){
      UIUtil.invokeLaterIfNeeded(new Runnable(){
        public void run(){
          if (list != null) {
            modifyPluginsList(list);
            setDownloadStatus(false);
            pluginsModel.setSortMode(myUISettings.AVAILABLE_SORT_MODE);
          }
 else           if (error != null) {
            LOG.info(error);
            setDownloadStatus(false);
            if (0 == Messages.showOkCancelDialog(IdeBundle.message("error.list.of.plugins.was.not.loaded",error.getMessage()),IdeBundle.message("title.plugins"),CommonBundle.message("button.retry"),CommonBundle.getCancelButtonText(),Messages.getErrorIcon())) {
              loadPluginsFromHostInBackground();
            }
          }
        }
      }
);
    }
  }
.start();
}
