{
  myBreakpoint=breakpoint;
  myShowAllOptions=showAllOptions;
  XBreakpointType breakpointType=breakpoint.getType();
  if (breakpointType.getVisibleStandardPanels().contains(XBreakpointType.StandardPanels.SUSPEND_POLICY)) {
    mySuspendPolicyPanel.init(project,breakpointManager,breakpoint);
    mySuspendPolicyPanel.setDelegate(this);
    mySubPanels.add(mySuspendPolicyPanel);
  }
 else {
    mySuspendPolicyPanel.hide();
  }
  if (breakpointType.getVisibleStandardPanels().contains(XBreakpointType.StandardPanels.DEPENDENCY)) {
    myMasterBreakpointPanel.init(project,breakpointManager,breakpoint);
    mySubPanels.add(myMasterBreakpointPanel);
  }
 else {
    myMasterBreakpointPanel.hide();
  }
  XDebuggerEditorsProvider debuggerEditorsProvider=breakpointType.getEditorsProvider(breakpoint,project);
  if (breakpointType.getVisibleStandardPanels().contains(XBreakpointType.StandardPanels.ACTIONS)) {
    myActionsPanel.init(project,breakpointManager,breakpoint,debuggerEditorsProvider);
    mySubPanels.add(myActionsPanel);
  }
 else {
    myActionsPanel.hide();
  }
  myCustomPanels=new ArrayList<>();
  if (debuggerEditorsProvider != null) {
    myConditionEnabledCheckbox=new JBCheckBox(XDebuggerBundle.message("xbreakpoints.condition.checkbox"));
    myConditionComboBox=new XDebuggerExpressionComboBox(project,debuggerEditorsProvider,CONDITION_HISTORY_ID,myBreakpoint.getSourcePosition(),true);
    JComponent conditionComponent=myConditionComboBox.getComponent();
    conditionComponent.setBorder(JBUI.Borders.emptyRight(3));
    myConditionExpressionPanel.add(conditionComponent,BorderLayout.CENTER);
    myConditionEnabledCheckbox.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        onCheckboxChanged();
      }
    }
);
    DebuggerUIUtil.focusEditorOnCheck(myConditionEnabledCheckbox,myConditionComboBox.getEditorComponent());
  }
 else {
    myConditionPanel.setVisible(false);
  }
  myShowMoreOptions=false;
  for (  XBreakpointPropertiesSubPanel panel : mySubPanels) {
    if (panel.lightVariant(showAllOptions)) {
      myShowMoreOptions=true;
    }
  }
  XBreakpointCustomPropertiesPanel customPropertiesPanel=breakpointType.createCustomPropertiesPanel(project);
  if (customPropertiesPanel != null) {
    myCustomPropertiesPanelWrapper.add(customPropertiesPanel.getComponent(),BorderLayout.CENTER);
    myCustomPanels.add(customPropertiesPanel);
  }
 else {
    myCustomPropertiesPanelWrapper.getParent().remove(myCustomPropertiesPanelWrapper);
  }
  XBreakpointCustomPropertiesPanel customConditionPanel=breakpointType.createCustomConditionsPanel();
  if (customConditionPanel != null) {
    myCustomConditionsPanelWrapper.add(customConditionPanel.getComponent(),BorderLayout.CENTER);
    myCustomPanels.add(customConditionPanel);
  }
 else {
    myCustomConditionsPanelWrapper.getParent().remove(myCustomConditionsPanelWrapper);
  }
  XBreakpointCustomPropertiesPanel customRightConditionPanel=breakpointType.createCustomRightPropertiesPanel(project);
  if (customRightConditionPanel != null && (showAllOptions || customRightConditionPanel.isVisibleOnPopup(breakpoint))) {
    myCustomRightPropertiesPanelWrapper.add(customRightConditionPanel.getComponent(),BorderLayout.CENTER);
    myCustomPanels.add(customRightConditionPanel);
  }
 else {
    myCustomRightPropertiesPanelWrapper.getParent().remove(myCustomRightPropertiesPanelWrapper);
  }
  XBreakpointCustomPropertiesPanel customTopPropertiesPanel=breakpointType.createCustomTopPropertiesPanel(project);
  if (customTopPropertiesPanel != null) {
    myCustomTopPropertiesPanelWrapper.add(customTopPropertiesPanel.getComponent(),BorderLayout.CENTER);
    myCustomPanels.add(customTopPropertiesPanel);
  }
 else {
    myCustomTopPropertiesPanelWrapper.getParent().remove(myCustomTopPropertiesPanelWrapper);
  }
  myMainPanel.addFocusListener(new FocusAdapter(){
    @Override public void focusGained(    FocusEvent event){
      JComponent compToFocus=null;
      if (myConditionComboBox != null && myConditionComboBox.getComboBox().isEnabled()) {
        compToFocus=myConditionComboBox.getEditorComponent();
      }
 else       if (breakpointType.getVisibleStandardPanels().contains(XBreakpointType.StandardPanels.ACTIONS)) {
        compToFocus=myActionsPanel.getDefaultFocusComponent();
      }
      if (compToFocus != null) {
        IdeFocusManager.findInstance().requestFocus(compToFocus,false);
      }
    }
  }
);
  myEnabledCheckbox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      myBreakpoint.setEnabled(myEnabledCheckbox.isSelected());
    }
  }
);
}
