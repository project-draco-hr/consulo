{
  Document document=editor.getDocument();
  PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(document);
  int selectionStart=editor.getSelectionModel().getLeadSelectionOffset();
  if (file == null)   return;
  int offset=editor.getCaretModel().getOffset() - 1;
  if (offset < 0)   return;
  final FileType fileType=file.getFileType();
  HighlighterIterator iterator=((EditorEx)editor).getHighlighter().createIterator(offset);
  int depth=0;
  Language braceType;
  boolean isAfterRBrace=false;
  if (isRStructuralBrace(fileType,iterator,document.getCharsSequence())) {
    isAfterRBrace=true;
    depth=-1;
    braceType=getBraceType(iterator);
  }
 else {
    braceType=null;
  }
  while (true) {
    if (iterator.atEnd())     return;
    if (isLStructuralBrace(fileType,iterator,document.getCharsSequence()) && (braceType == getBraceType(iterator) || braceType == null)) {
      if (depth == 0)       break;
      if (braceType == null) {
        braceType=getBraceType(iterator);
      }
      depth--;
    }
 else     if (isRStructuralBrace(fileType,iterator,document.getCharsSequence()) && (braceType == getBraceType(iterator) || braceType == null)) {
      if (braceType == null) {
        braceType=getBraceType(iterator);
      }
      depth++;
    }
    iterator.retreat();
  }
  int start=isAfterRBrace ? iterator.getStart() : iterator.getEnd();
  editor.getCaretModel().moveToOffset(start);
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  if (isWithSelection) {
    editor.getSelectionModel().setSelection(selectionStart,editor.getCaretModel().getOffset());
  }
 else {
    editor.getSelectionModel().removeSelection();
  }
}
