{
  if (element instanceof PsiCompiledElement || !element.isPhysical()) {
    return new HardElementInfo(project,element);
  }
  if (element instanceof PsiDirectory) {
    return new DirElementInfo((PsiDirectory)element);
  }
  if (containingFile == null) {
    return new HardElementInfo(project,element);
  }
  for (  SmartPointerElementInfoFactory factory : Extensions.getExtensions(SmartPointerElementInfoFactory.EP_NAME)) {
    final SmartPointerElementInfo result=factory.createElementInfo(element);
    if (result != null)     return result;
  }
  if (element.getTextRange() == null) {
    return new HardElementInfo(project,element);
  }
  FileViewProvider viewProvider=containingFile.getViewProvider();
  if (viewProvider instanceof InjectedFileViewProvider) {
    PsiElement context=containingFile.getContext();
    if (context != null)     return new InjectedSelfElementInfo(project,element,context);
  }
  if (element instanceof PsiFile) {
    return new FileElementInfo((PsiFile)element);
  }
  LOG.assertTrue(element.isPhysical());
  LOG.assertTrue(element.isValid());
  return new SelfElementInfo(project,element.getTextRange(),element.getClass(),containingFile);
}
