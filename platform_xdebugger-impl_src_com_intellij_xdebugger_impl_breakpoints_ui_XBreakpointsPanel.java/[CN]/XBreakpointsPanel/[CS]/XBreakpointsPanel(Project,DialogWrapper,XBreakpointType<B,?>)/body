{
  super(type.getTitle(),type.getBreakpointsDialogHelpTopic(),XBreakpoint.class);
  myProject=project;
  myParentDialog=parentDialog;
  myType=type;
  myAllGroupingRules=new ArrayList<XBreakpointGroupingRule<B,?>>(myType.getGroupingRules());
  mySelectedGroupingRules=getInitialGroupingRules();
  myTree=XBreakpointsTree.createTree(myType,mySelectedGroupingRules,myParentDialog);
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    final TreeSelectionEvent e){
      onSelectionChanged();
    }
  }
);
  List<XBreakpointPanelAction<B>> actions=new ArrayList<XBreakpointPanelAction<B>>();
  if (type.isAddBreakpointButtonVisible()) {
    actions.add(new AddBreakpointAction<B>(this));
  }
  actions.add(new GoToBreakpointAction<B>(this,XDebuggerBundle.message("xbreakpoints.dialog.button.goto"),true));
  actions.add(new GoToBreakpointAction<B>(this,XDebuggerBundle.message("xbreakpoints.dialog.button.view.source"),false));
  actions.add(new RemoveBreakpointAction<B>(this));
  myActions=actions.toArray(new XBreakpointPanelAction[actions.size()]);
  myTreePanel.add(ScrollPaneFactory.createScrollPane(myTree),BorderLayout.CENTER);
  initButtons();
  onSelectionChanged();
}
