{
  final int maxScanIndex=Math.min(start + columnNumber + 1,end);
  if (editor == null) {
    return calcSoftWrapUnawareOffset(text,start,maxScanIndex,columnNumber,tabSize);
  }
  EditorEx editorImpl=(EditorEx)editor;
  int offset=start;
  IterationState state=new IterationState(editorImpl,offset,false);
  int fontType=state.getMergedAttributes().getFontType();
  int column=0;
  int x=0;
  int spaceSize=getSpaceWidth(fontType,editorImpl);
  SoftWrapModel softWrapModel=editor.getSoftWrapModel();
  while (column < columnNumber) {
    TextChange softWrap=softWrapModel.getSoftWrap(offset);
    if (softWrap != null) {
      x=softWrapModel.getSoftWrapIndentWidthInPixels(softWrap);
    }
    if (offset >= state.getEndOffset()) {
      state.advance();
      fontType=state.getMergedAttributes().getFontType();
    }
    char c=offset < end ? text.charAt(offset++) : ' ';
    int prevX=x;
    if (c == '\t') {
      x=nextTabStop(x,editorImpl);
    }
 else {
      x+=charWidth(c,fontType,editorImpl);
    }
    column+=columnsNumber(c,x,prevX,spaceSize);
  }
  if (column > columnNumber)   offset--;
  return offset;
}
