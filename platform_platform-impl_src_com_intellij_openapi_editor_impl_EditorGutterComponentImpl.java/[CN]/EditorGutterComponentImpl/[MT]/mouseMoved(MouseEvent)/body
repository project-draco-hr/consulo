{
  String toolTip=null;
  GutterIconRenderer renderer=getGutterRenderer(e);
  TooltipController controller=TooltipController.getInstance();
  if (renderer != null) {
    toolTip=renderer.getTooltipText();
    if (renderer.isNavigateAction()) {
      setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }
  }
 else {
    ActiveGutterRenderer lineRenderer=getActiveRendererByMouseEvent(e);
    if (lineRenderer != null) {
      setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }
 else {
      TextAnnotationGutterProvider provider=getProviderAtPoint(e.getPoint());
      if (provider != null) {
        final int line=getLineNumAtPoint(e.getPoint());
        toolTip=provider.getToolTip(line,myEditor);
        if (!Comparing.equal(toolTip,myLastGutterToolTip)) {
          controller.cancelTooltip(GUTTER_TOOLTIP_GROUP);
          myLastGutterToolTip=toolTip;
        }
        if (myProviderToListener.containsKey(provider)) {
          final EditorGutterAction action=myProviderToListener.get(provider);
          if (action != null) {
            setCursor(action.getCursor(line));
          }
        }
      }
    }
  }
  if (toolTip != null && toolTip.length() != 0) {
    controller.showTooltipByMouseMove(myEditor,e,((EditorMarkupModel)myEditor.getMarkupModel()).getErrorStripTooltipRendererProvider().calcTooltipRenderer(toolTip),false,GUTTER_TOOLTIP_GROUP,new HintHint(e));
  }
 else {
    controller.cancelTooltip(GUTTER_TOOLTIP_GROUP);
  }
}
