{
  if (!isLineMarkerVisible(highlighter))   return null;
  int startOffset=highlighter.getStartOffset();
  int endOffset=highlighter.getEndOffset();
  int startY=myEditor.visualPositionToXY(myEditor.offsetToVisualPosition(startOffset)).y;
  int endY=myEditor.visualPositionToXY(myEditor.offsetToVisualPosition(endOffset)).y;
  DocumentEx document=myEditor.getDocument();
  if (document.getLineStartOffset(document.getLineNumber(endOffset)) != endOffset) {
    endY+=myEditor.getLineHeight();
  }
  LineMarkerRenderer renderer=highlighter.getLineMarkerRenderer();
  boolean leftPosition=renderer instanceof LineMarkerRendererEx && ((LineMarkerRendererEx)renderer).getPosition() == LineMarkerRendererEx.Position.LEFT;
  int height=endY - startY;
  int w=leftPosition ? FREE_PAINTERS_LEFT_AREA_WIDTH : FREE_PAINTERS_RIGHT_AREA_WIDTH;
  int x=leftPosition ? getLineMarkerAreaOffset() : getLineMarkerFreePaintersAreaOffset() - 1;
  return new Rectangle(x,startY,w,height);
}
