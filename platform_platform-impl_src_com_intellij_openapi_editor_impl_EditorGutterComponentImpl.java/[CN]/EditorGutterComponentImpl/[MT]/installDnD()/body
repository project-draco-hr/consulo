{
  DnDSupport.createBuilder(this).setBeanProvider(new Function<DnDActionInfo,DnDDragStartBean>(){
    @Override public DnDDragStartBean fun(    DnDActionInfo info){
      final GutterMark renderer=getGutterRenderer(info.getPoint());
      if (renderer instanceof GutterIconRenderer && ((GutterIconRenderer)renderer).getDraggableObject() != null && (info.isCopy() || info.isMove())) {
        return new DnDDragStartBean(renderer);
      }
      return null;
    }
  }
).setDropHandler(new DnDDropHandler(){
    @Override public void drop(    DnDEvent e){
      final Object attachedObject=e.getAttachedObject();
      if (attachedObject instanceof GutterIconRenderer && checkDumbAware(attachedObject)) {
        final GutterDraggableObject draggableObject=((GutterIconRenderer)attachedObject).getDraggableObject();
        if (draggableObject != null) {
          final int line=convertPointToLineNumber(e.getPoint());
          if (line != -1) {
            draggableObject.copy(line,myEditor.getVirtualFile());
          }
        }
      }
 else       if (attachedObject instanceof DnDNativeTarget.EventInfo && myEditor.getSettings().isDndEnabled()) {
        Transferable transferable=((DnDNativeTarget.EventInfo)attachedObject).getTransferable();
        if (transferable != null && transferable.isDataFlavorSupported(DataFlavor.stringFlavor)) {
          EditorImpl.handleDrop(myEditor,transferable);
        }
      }
    }
  }
).setTargetChecker(new DnDTargetChecker(){
    @Override public boolean update(    DnDEvent e){
      final Object attachedObject=e.getAttachedObject();
      if (attachedObject instanceof GutterIconRenderer && checkDumbAware(attachedObject)) {
        final GutterDraggableObject draggableObject=((GutterIconRenderer)attachedObject).getDraggableObject();
        if (draggableObject != null) {
          final int line=convertPointToLineNumber(e.getPoint());
          if (line != -1) {
            e.setDropPossible(true);
            e.setCursor(draggableObject.getCursor(line));
          }
        }
      }
 else       if (attachedObject instanceof DnDNativeTarget.EventInfo && myEditor.getSettings().isDndEnabled()) {
        Transferable transferable=((DnDNativeTarget.EventInfo)attachedObject).getTransferable();
        if (transferable != null && transferable.isDataFlavorSupported(DataFlavor.stringFlavor)) {
          final int line=convertPointToLineNumber(e.getPoint());
          if (line != -1) {
            e.setDropPossible(true);
            myEditor.getCaretModel().moveToOffset(myEditor.getDocument().getLineStartOffset(line));
          }
        }
      }
      return true;
    }
  }
).setImageProvider(new NullableFunction<DnDActionInfo,DnDImage>(){
    @Override public DnDImage fun(    DnDActionInfo info){
      Image image=IconUtil.toImage(scaleIcon(getGutterRenderer(info.getPoint()).getIcon()));
      return new DnDImage(image,new Point(image.getWidth(null) / 2,image.getHeight(null) / 2));
    }
  }
).enableAsNativeTarget().install();
}
