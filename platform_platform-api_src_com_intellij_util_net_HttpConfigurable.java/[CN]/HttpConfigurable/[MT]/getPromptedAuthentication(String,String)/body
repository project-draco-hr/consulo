{
  if (AUTHENTICATION_CANCELLED) {
    return null;
  }
  final String password=getPlainProxyPassword();
  if (PROXY_AUTHENTICATION && !StringUtil.isEmptyOrSpaces(PROXY_LOGIN) && !StringUtil.isEmptyOrSpaces(password)) {
    return new PasswordAuthentication(PROXY_LOGIN,password.toCharArray());
  }
  if (ApplicationManager.getApplication() == null || ApplicationManager.getApplication().isDisposeInProgress() || ApplicationManager.getApplication().isDisposed())   return null;
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    return myTestGenericAuthRunnable.get();
  }
  final PasswordAuthentication[] value=new PasswordAuthentication[1];
  runAboveAll(new Runnable(){
    @Override public void run(){
      if (AUTHENTICATION_CANCELLED) {
        return;
      }
      String password=getPlainProxyPassword();
      if (PROXY_AUTHENTICATION && !StringUtil.isEmptyOrSpaces(PROXY_LOGIN) && !StringUtil.isEmptyOrSpaces(password)) {
        value[0]=new PasswordAuthentication(PROXY_LOGIN,password.toCharArray());
        return;
      }
      AuthenticationDialog dialog=new AuthenticationDialog(PopupUtil.getActiveComponent(),"Proxy authentication: " + host,"Please enter credentials for: " + prompt,PROXY_LOGIN,"",KEEP_PROXY_PASSWORD);
      dialog.show();
      if (dialog.getExitCode() == DialogWrapper.OK_EXIT_CODE) {
        PROXY_AUTHENTICATION=true;
        AuthenticationPanel panel=dialog.getPanel();
        KEEP_PROXY_PASSWORD=panel.isRememberPassword();
        PROXY_LOGIN=StringUtil.nullize(panel.getLogin());
        setPlainProxyPassword(String.valueOf(panel.getPassword()));
        value[0]=new PasswordAuthentication(panel.getLogin(),panel.getPassword());
      }
 else {
        AUTHENTICATION_CANCELLED=true;
      }
    }
  }
);
  return value[0];
}
