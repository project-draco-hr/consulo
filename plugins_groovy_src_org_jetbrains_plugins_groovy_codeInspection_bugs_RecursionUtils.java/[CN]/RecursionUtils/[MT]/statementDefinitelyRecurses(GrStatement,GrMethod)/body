{
  if (statement == null) {
    return false;
  }
  if (statement instanceof GrBreakStatement || statement instanceof GrContinueStatement || statement instanceof GrThrowStatement|| statement instanceof GrAssertStatement) {
    return false;
  }
 else   if (statement instanceof GrExpression) {
    final GrExpression expression=(GrExpression)statement;
    return expressionDefinitelyRecurses(expression,method);
  }
 else   if (statement instanceof GrVariableDeclaration) {
    final GrVariableDeclaration declaration=(GrVariableDeclaration)statement;
    final GrVariable[] declaredElements=declaration.getVariables();
    for (    final GrVariable variable : declaredElements) {
      final GrExpression initializer=(GrExpression)variable.getInitializer();
      if (expressionDefinitelyRecurses(initializer,method)) {
        return true;
      }
    }
    return false;
  }
 else   if (statement instanceof GrReturnStatement) {
    final GrReturnStatement returnStatement=(GrReturnStatement)statement;
    final GrExpression returnValue=returnStatement.getReturnValue();
    if (returnValue != null) {
      if (expressionDefinitelyRecurses(returnValue,method)) {
        return true;
      }
    }
    return false;
  }
 else   if (statement instanceof GrForStatement) {
    return forStatementDefinitelyRecurses((GrForStatement)statement,method);
  }
 else   if (statement instanceof GrWhileStatement) {
    return whileStatementDefinitelyRecurses((GrWhileStatement)statement,method);
  }
 else   if (statement instanceof GrSynchronizedStatement) {
    final GrCodeBlock body=((GrSynchronizedStatement)statement).getBody();
    return codeBlockDefinitelyRecurses(body,method);
  }
 else   if (statement instanceof GrBlockStatement) {
    final GrCodeBlock codeBlock=((GrBlockStatement)statement).getBlock();
    return codeBlockDefinitelyRecurses(codeBlock,method);
  }
 else   if (statement instanceof GrIfStatement) {
    return ifStatementDefinitelyRecurses((GrIfStatement)statement,method);
  }
 else   if (statement instanceof GrTryCatchStatement) {
    return tryStatementDefinitelyRecurses((GrTryCatchStatement)statement,method);
  }
 else   if (statement instanceof GrSwitchStatement) {
    return switchStatementDefinitelyRecurses((GrSwitchStatement)statement,method);
  }
 else {
    return false;
  }
}
