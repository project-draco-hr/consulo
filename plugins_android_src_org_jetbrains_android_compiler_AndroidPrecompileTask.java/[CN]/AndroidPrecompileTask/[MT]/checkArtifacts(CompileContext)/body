{
  final Project project=context.getProject();
  if (!ProjectFacetManager.getInstance(project).hasFacets(AndroidFacet.ID)) {
    return true;
  }
  final Set<Artifact> artifacts=ArtifactCompileScope.getArtifactsToBuild(project,context.getCompileScope(),false);
  if (artifacts == null) {
    return true;
  }
  final Set<Artifact> debugArtifacts=new HashSet<Artifact>();
  final Set<Artifact> releaseArtifacts=new HashSet<Artifact>();
  for (  final Artifact artifact : artifacts) {
    final ArtifactProperties<?> properties=artifact.getProperties(AndroidArtifactPropertiesProvider.getInstance());
    if (properties instanceof AndroidApplicationArtifactProperties) {
      final AndroidArtifactSigningMode mode=((AndroidApplicationArtifactProperties)properties).getSigningMode();
      if (mode == AndroidArtifactSigningMode.DEBUG) {
        debugArtifacts.add(artifact);
      }
 else {
        releaseArtifacts.add(artifact);
      }
    }
  }
  boolean success=true;
  if (debugArtifacts.size() > 0 && releaseArtifacts.size() > 0) {
    final String message="Cannot build debug and release Android artifacts in the same session\n" + "Debug artifacts: " + toString(debugArtifacts) + "\n"+ "Release artifacts: "+ toString(releaseArtifacts);
    context.addMessage(CompilerMessageCategory.ERROR,message,null,-1,-1);
    success=false;
  }
  if (releaseArtifacts.size() > 0 && CompileStepBeforeRun.getRunConfiguration(context) != null) {
    final String message="Cannot build release Android artifacts in the 'make before run' session\n" + "Release artifacts: " + toString(releaseArtifacts);
    context.addMessage(CompilerMessageCategory.ERROR,message,null,-1,-1);
    success=false;
  }
  return success;
}
