{
  PsiBuilder.Marker label=builder.mark();
  IElementType elem=builder.getTokenType();
  ParserUtils.getToken(builder,TokenSet.create(kCASE,kDEFAULT));
  if (kCASE.equals(elem)) {
    if (WRONGWAY.equals(AssignmentExpression.parse(builder))) {
      label.done(CASE_LABEL);
      builder.error(GroovyBundle.message("expression.expected"));
      return;
    }
  }
  if (!ParserUtils.getToken(builder,mCOLON,GroovyBundle.message("colon.expected"))) {
    label.done(CASE_LABEL);
    return;
  }
  label.done(CASE_LABEL);
  ParserUtils.getToken(builder,mNLS);
  if (ParserUtils.lookAhead(builder,kCASE) || ParserUtils.lookAhead(builder,kDEFAULT)) {
    parseCaseLabel(builder);
  }
}
