{
  IElementType elem=builder.getTokenType();
  if (elem != kCASE && elem != kDEFAULT) {
    return false;
  }
  PsiBuilder.Marker label=builder.mark();
  builder.advanceLexer();
  if (kCASE.equals(elem)) {
    AssignmentExpression.parse(builder,parser,true);
  }
  ParserUtils.getToken(builder,mCOLON,GroovyBundle.message("colon.expected"));
  label.done(CASE_LABEL);
  PsiBuilder.Marker beforeNls=builder.mark();
  ParserUtils.getToken(builder,mNLS);
  if (parseCaseLabel(builder,parser)) {
    beforeNls.drop();
  }
 else {
    beforeNls.rollbackTo();
  }
  return true;
}
