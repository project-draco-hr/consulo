{
  Map<String,List<Module>> groups=new THashMap<String,List<Module>>();
  List<Module> nonGroupedModules=new ArrayList<Module>(Arrays.asList(modules));
  for (  final Module module : modules) {
    final String[] path=ModuleManager.getInstance(getProject()).getModuleGroupPath(module);
    if (path != null) {
      final String topLevelGroupName=path[0];
      List<Module> moduleList=groups.get(topLevelGroupName);
      if (moduleList == null) {
        moduleList=new ArrayList<Module>();
        groups.put(topLevelGroupName,moduleList);
      }
      moduleList.add(module);
      nonGroupedModules.remove(module);
    }
  }
  List<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  try {
    for (    String groupPath : groups.keySet()) {
      result.add(createModuleGroupNode(new ModuleGroup(new String[]{groupPath})));
    }
    for (    Module module : nonGroupedModules) {
      result.add(createModuleGroup(module));
    }
  }
 catch (  Exception e) {
    LOG.error(e);
    return new ArrayList<AbstractTreeNode>();
  }
  return result;
}
