{
  final Class<? extends LocalInspectionTool>[] classes=plugin.getInspectionClasses();
  for (  final Class<? extends LocalInspectionTool> aClass : classes) {
    final String className=aClass.getName();
    try {
      final LocalInspectionTool inspection=aClass.newInstance();
      final BaseInspection baseInspection=(BaseInspection)inspection;
      Set<String> fixes=new HashSet<String>();
      if (baseInspection.hasQuickFix()) {
        final InspectionGadgetsFix[] inspectionGadgetsFixes=baseInspection.buildFixes(null);
        for (        InspectionGadgetsFix fix : inspectionGadgetsFixes) {
          final String name=baseInspection.getPrefix(fix.getClass().getName());
          if (!fixes.contains(name)) {
            System.out.println(name + "=" + fix.getName());
          }
          fixes.add(name);
        }
      }
    }
 catch (    InstantiationException ignore) {
    }
catch (    IllegalAccessException ignore) {
    }
catch (    ClassCastException ignore) {
    }
  }
}
