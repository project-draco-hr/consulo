{
  initComponent();
  final Class[] classes=getInspectionClasses();
  String currentGroupName="";
  final int numQuickFixes=countQuickFixes(classes,out);
  out.println(classes.length + " Inspections");
  out.println(numQuickFixes + " Quick Fixes");
  for (int i=0; i < classes.length; i++) {
    final Class aClass=classes[i];
    final String className=aClass.getName();
    try {
      final LocalInspectionTool inspection=(LocalInspectionTool)aClass.newInstance();
      final String groupDisplayName=inspection.getGroupDisplayName();
      if (!groupDisplayName.equals(currentGroupName)) {
        currentGroupName=groupDisplayName;
        out.println();
        out.print("   * ");
        out.println(currentGroupName);
      }
      printInspectionDescription(inspection,out);
    }
 catch (    InstantiationException e) {
      out.print("Couldn't instantiate ");
      out.println(className);
    }
catch (    IllegalAccessException e) {
      out.print("Couldn't access ");
      out.println(className);
    }
catch (    ClassCastException e) {
      out.print("Couldn't cast ");
      out.println(className);
    }
  }
  for (int i=0; i < classes.length; i++) {
    final Class aClass=classes[i];
    final String className=aClass.getName();
    final String simpleClassName=className.substring(className.lastIndexOf('.') + 1,className.length() - "Inspection".length());
    final String fileName="C:/InspectionGadgetsSVN/src/inspectionDescriptions/" + simpleClassName + ".html";
    if (!new File(fileName).exists()) {
      out.println("Couldn't find documentation file " + fileName);
    }
  }
}
