{
  final T src=getValue();
  final Object trg=element.getValue();
  if (src instanceof VirtualFile && trg instanceof VirtualFile && ((VirtualFile)src).getFileType().isBinary()&& ((VirtualFile)trg).getFileType().isBinary()) {
    return createRequestForBinaries(project,((VirtualFile)src),((VirtualFile)trg));
  }
  if (src instanceof VirtualFile) {
    if (((VirtualFile)src).getFileType().isBinary())     return null;
    if (trg instanceof VirtualFile) {
      if (((VirtualFile)trg).getFileType().isBinary())       return null;
      final FileDocumentManager mgr=FileDocumentManager.getInstance();
      if (mgr.getDocument((VirtualFile)src) != null && mgr.getDocument((VirtualFile)trg) != null) {
        return SimpleDiffRequest.compareFiles((VirtualFile)src,(VirtualFile)trg,project == null ? ProjectManager.getInstance().getDefaultProject() : project);
      }
    }
  }
  final DiffContent srcContent=createDiffContent();
  final DiffContent trgContent=element.createDiffContent();
  if (srcContent != null && trgContent != null) {
    final SimpleDiffRequest request=new SimpleDiffRequest(project,"");
    request.setContents(srcContent,trgContent);
    return request;
  }
  return null;
}
