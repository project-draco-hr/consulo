{
  final UsageInfo[][] usages=new UsageInfo[1][];
  final Runnable findUsagesRunnable=new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          usages[0]=findJoinPointsByPointcut(pointcut);
        }
      }
);
    }
  }
;
  final FindUsagesCommand findUsagesCommand=new FindUsagesCommand(){
    public UsageInfo[] execute(    final PsiElement[] elementsToSearch){
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          if (elementsToSearch.length == 1 && elementsToSearch[0] instanceof PsiPointcut && elementsToSearch[0].isValid()) {
            usages[0]=findJoinPointsByPointcut((PsiPointcut)elementsToSearch[0]);
          }
 else {
            LOG.assertTrue(false);
          }
        }
      }
);
      return usages[0];
    }
  }
;
  @NonNls String TODO="(TODO)";
  if (!ApplicationManager.getApplication().runProcessWithProgressSynchronously(findUsagesRunnable,FindBundle.message("find.pointcut.applications.progress",TODO),true,myProject)) {
    return;
  }
  if ((usages[0] != null) && (usages[0].length > 0)) {
    FindUsagesViewDescriptor descriptor=new FindUsagesViewDescriptor(pointcut.getParent(),usages[0],findUsagesCommand,false);
    showUsagesPanel(FindBundle.message("find.pointcut.applications.title",TODO),null,descriptor,true,false,false);
  }
 else {
    Messages.showMessageDialog(myProject,FindBundle.message("find.pointcut.applications.not.found.error",TODO),FindBundle.message("find.pointcut.applications.not.found.title"),Messages.getInformationIcon());
  }
}
