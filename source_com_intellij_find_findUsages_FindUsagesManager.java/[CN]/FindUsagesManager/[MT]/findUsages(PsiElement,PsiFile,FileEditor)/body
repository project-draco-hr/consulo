{
  final FindUsagesHandler handler=findHandler(psiElement);
  if (handler == null)   return;
  final AbstractFindUsagesDialog dialog=handler.getFindUsagesDialog(scopeFile != null,shouldOpenInNewTab(),mustOpenInNewTab());
  dialog.show();
  if (!dialog.isOK())   return;
  setOpenInNewTab(dialog.isShowInSeparateWindow());
  FindUsagesOptions findUsagesOptions=dialog.calcFindUsagesOptions();
  clearFindingNextUsageInFile();
  LOG.assertTrue(handler.getPsiElement().isValid());
  final UsageInfoToUsageConverter.TargetElementsDescriptor descriptor=new UsageInfoToUsageConverter.TargetElementsDescriptor(handler.getPrimaryElements(),handler.getSecondaryElements());
  if (scopeFile == null) {
    findUsages(descriptor,dialog.isSkipResultsWhenOneUsage(),dialog.isShowInSeparateWindow(),findUsagesOptions);
  }
 else {
    findUsagesOptions=(FindUsagesOptions)findUsagesOptions.clone();
    findUsagesOptions.isDerivedClasses=false;
    findUsagesOptions.isDerivedInterfaces=false;
    findUsagesOptions.isImplementingClasses=false;
    editor.putUserData(KEY_START_USAGE_AGAIN,null);
    findUsagesInEditor(descriptor,scopeFile,FileSearchScope.FROM_START,findUsagesOptions,editor);
  }
}
