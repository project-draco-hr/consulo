{
  return new UsageSearcher(){
    public void generate(    final Processor<Usage> processor){
      if (scopeFile != null) {
        options.searchScope=new LocalSearchScope(scopeFile);
      }
      final Processor<UsageInfo> usageInfoProcessorToUsageProcessorAdapter=new Processor<UsageInfo>(){
        public boolean process(        UsageInfo usageInfo){
          return processor.process(UsageInfoToUsageConverter.convert(descriptor,usageInfo));
        }
      }
;
      for (      PsiElement element : descriptor.getAllElements()) {
        LOG.assertTrue(element.isValid());
        FindUsagesUtil.processUsages(element,usageInfoProcessorToUsageProcessorAdapter,options);
      }
    }
  }
;
}
