{
  myProject=context.getProject();
  myContext=context;
  myPatchRequest=request;
  DocumentContent resultContent=request.getResultContent();
  DocumentContent patchContent=DiffContentFactory.getInstance().create(new DocumentImpl("",true),resultContent);
  myResultHolder=TextEditorHolder.create(myProject,resultContent);
  myPatchHolder=TextEditorHolder.create(myProject,patchContent);
  myResultEditor=myResultHolder.getEditor();
  myPatchEditor=myPatchHolder.getEditor();
  if (isReadOnly())   myResultEditor.setViewer(true);
  myPatchEditor.setViewer(true);
  DiffUtil.disableBlitting(myResultEditor);
  DiffUtil.disableBlitting(myPatchEditor);
  ((EditorMarkupModel)myResultEditor.getMarkupModel()).setErrorStripeVisible(false);
  myResultEditor.setVerticalScrollbarOrientation(EditorEx.VERTICAL_SCROLLBAR_LEFT);
  myPatchEditor.getGutterComponentEx().setForceShowRightFreePaintersArea(true);
  ((EditorMarkupModel)myPatchEditor.getMarkupModel()).setErrorStripeVisible(false);
  List<TextEditorHolder> holders=ContainerUtil.list(myResultHolder,myPatchHolder);
  List<EditorEx> editors=ContainerUtil.list(myResultEditor,myPatchEditor);
  JComponent resultTitle=DiffUtil.createTitle(myPatchRequest.getResultTitle());
  JComponent patchTitle=DiffUtil.createTitle(myPatchRequest.getPatchTitle());
  List<JComponent> titleComponents=DiffUtil.createSyncHeightComponents(ContainerUtil.list(resultTitle,patchTitle));
  myContentPanel=new TwosideContentPanel(holders,titleComponents);
  myPanel=new SimpleDiffPanel(myContentPanel,this,myContext);
  myModel=new MyModel(myProject,myResultEditor.getDocument());
  myFocusTrackerSupport=new FocusTrackerSupport.Twoside(holders);
  myFocusTrackerSupport.setCurrentSide(Side.LEFT);
  myPrevNextDifferenceIterable=new MyPrevNextDifferenceIterable();
  myStatusPanel=new MyStatusPanel();
  myFoldingModel=new MyFoldingModel(myResultEditor,this);
  new MyFocusOppositePaneAction().install(myPanel);
  new TextDiffViewerUtil.EditorActionsPopup(createEditorPopupActions()).install(editors);
  new TextDiffViewerUtil.EditorFontSizeSynchronizer(editors).install(this);
  myEditorSettingsAction=new SetEditorSettingsAction(getTextSettings(),editors);
  myEditorSettingsAction.applyDefaults();
  if (!isReadOnly()) {
    DiffUtil.registerAction(new ApplySelectedChangesAction(true),myPanel);
    DiffUtil.registerAction(new IgnoreSelectedChangesAction(true),myPanel);
  }
  ProxyUndoRedoAction.register(myProject,myResultEditor,myContentPanel);
}
