{
  final List<MavenArtifactInfo> artifacts=new ArrayList<MavenArtifactInfo>(3);
  final MavenId mavenId=getMavenId(coord);
  artifacts.add(new MavenArtifactInfo(mavenId,"jar",null));
  for (  MavenExtraArtifactType extraType : extraTypes) {
    artifacts.add(new MavenArtifactInfo(mavenId,extraType.getDefaultExtension(),extraType.getDefaultClassifier()));
  }
  final Task task;
  if (modal) {
    task=new Task.Modal(project,"Maven",false){
      public void run(      @NotNull ProgressIndicator indicator){
        doResolveInner(project,artifacts,repositories,resultProcessor,indicator);
      }
    }
;
  }
 else {
    task=new Task.Backgroundable(project,"Maven",false,PerformInBackgroundOption.DEAF){
      public void run(      @NotNull ProgressIndicator indicator){
        doResolveInner(project,artifacts,repositories,resultProcessor,indicator);
      }
      @Override public boolean shouldStartInBackground(){
        return false;
      }
    }
;
  }
  ProgressManager.getInstance().run(task);
}
