{
  final RepositoryAttachDialog dialog=new RepositoryAttachDialog(project,false);
  dialog.setTitle(getLongName());
  dialog.show();
  if (dialog.getExitCode() == DialogWrapper.OK_EXIT_CODE) {
    final ActionCallback callback=new ActionCallback();
    final String copyTo=dialog.getDirectoryPath();
    final String coord=dialog.getCoordinateText();
    resolveLibrary(project,Collections.singleton(coord),dialog.getRepositories(),false,new Processor<Map<String,List<ArtifactType>>>(){
      public boolean process(      final Map<String,List<ArtifactType>> stringListMap){
        final List<ArtifactType> result=stringListMap.get(coord);
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            final Library.ModifiableModel modifiableModel=modelProvider.compute();
            if (modifiableModel == null || result == null) {
              callback.setRejected();
            }
 else {
              replaceLibraryData(project,modifiableModel,result,copyTo);
              callback.setDone();
            }
          }
        }
);
        final boolean nothingRetrieved=result == null || result.isEmpty();
        final StringBuilder sb=new StringBuilder();
        if (nothingRetrieved)         sb.append("No files were downloaded for ").append(coord);
 else {
          sb.append("The following files were downloaded:<br>");
          sb.append("<ol>");
          for (          ArtifactType artifactType : result) {
            sb.append("<li>");
            final String file=artifactType.getResourceUri();
            sb.append(file.substring(file.lastIndexOf('/') + 1));
            sb.append("</li>");
          }
          sb.append("</ol>");
        }
        final String title="Attach Jars From Repository";
        if (nothingRetrieved && ModalityState.current().dominates(ModalityState.NON_MODAL)) {
          Messages.showErrorDialog(project,sb.toString(),title);
        }
 else {
          Notifications.Bus.notify(new Notification("Repository",sb.toString(),title,nothingRetrieved ? NotificationType.WARNING : NotificationType.INFORMATION),NotificationDisplayType.STICKY_BALLOON,project);
        }
        return true;
      }
    }
);
    return callback;
  }
  return new ActionCallback.Rejected();
}
