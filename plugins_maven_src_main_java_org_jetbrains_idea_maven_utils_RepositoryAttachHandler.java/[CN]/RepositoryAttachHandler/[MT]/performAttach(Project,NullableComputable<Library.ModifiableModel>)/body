{
  final RepositoryAttachDialog dialog=new RepositoryAttachDialog(project,false);
  dialog.setTitle(getLongName());
  dialog.show();
  if (dialog.getExitCode() == DialogWrapper.OK_EXIT_CODE) {
    final ActionCallback callback=new ActionCallback();
    final String copyTo=dialog.getDirectoryPath();
    final String coord=dialog.getCoordinateText();
    resolveLibrary(project,Collections.singleton(coord),dialog.getRepositories(),false,new Processor<Map<String,List<ArtifactType>>>(){
      public boolean process(      final Map<String,List<ArtifactType>> stringListMap){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            final List<ArtifactType> result=stringListMap.get(coord);
            final Library.ModifiableModel modifiableModel=modelProvider.compute();
            if (modifiableModel == null || result == null) {
              callback.setRejected();
            }
 else {
              replaceLibraryData(project,modifiableModel,result,copyTo);
              callback.setDone();
            }
          }
        }
);
        return true;
      }
    }
);
    return callback;
  }
  return new ActionCallback.Rejected();
}
