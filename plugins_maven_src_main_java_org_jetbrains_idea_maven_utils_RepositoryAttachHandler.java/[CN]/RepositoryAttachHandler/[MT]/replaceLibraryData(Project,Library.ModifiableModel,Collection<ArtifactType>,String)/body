{
  final String repoUrl=createMavenFacadeSettings(project).getLocalRepository().getUrl();
  for (  OrderRootType type : OrderRootType.getAllTypes()) {
    for (    String url : library.getUrls(type)) {
      if (url.startsWith(repoUrl)) {
        library.removeRoot(url,type);
      }
    }
  }
  for (  ArtifactType type : artifactTypes) {
    try {
      final String url=VfsUtil.convertFromUrl(new URL(type.getResourceUri()));
      final String targetUrl;
      if (copyTo != null) {
        final File repoFile=new File(FileUtil.toSystemDependentName(VfsUtil.urlToPath(url)));
        final File toFile=new File(copyTo,repoFile.getName());
        if (repoFile.exists()) {
          FileUtil.copy(repoFile,toFile);
        }
        targetUrl=VfsUtil.pathToUrl(FileUtil.toSystemIndependentName(toFile.getPath()));
      }
 else       targetUrl=url;
      library.addRoot(targetUrl,OrderRootType.CLASSES);
    }
 catch (    MalformedURLException e) {
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
  }
}
