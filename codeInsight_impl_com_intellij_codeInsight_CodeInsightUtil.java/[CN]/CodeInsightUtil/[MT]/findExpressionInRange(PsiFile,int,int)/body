{
  if (!file.getViewProvider().getRelevantLanguages().contains(StdLanguages.JAVA))   return null;
  PsiElement element1=file.getViewProvider().findElementAt(startOffset,StdLanguages.JAVA);
  PsiElement element2=file.getViewProvider().findElementAt(endOffset - 1,StdLanguages.JAVA);
  if (element1 instanceof PsiWhiteSpace) {
    startOffset=element1.getTextRange().getEndOffset();
  }
  if (element2 instanceof PsiWhiteSpace) {
    endOffset=element2.getTextRange().getStartOffset();
  }
  final PsiElement commonParent=PsiTreeUtil.findCommonParent(element1,element2);
  final PsiExpression expression=commonParent instanceof PsiExpression ? (PsiExpression)commonParent : PsiTreeUtil.getParentOfType(commonParent,PsiExpression.class);
  if (expression == null || expression.getTextRange().getStartOffset() != startOffset || expression.getTextRange().getEndOffset() != endOffset)   return null;
  if (expression instanceof PsiReferenceExpression && expression.getParent() instanceof PsiMethodCallExpression)   return null;
  return expression;
}
