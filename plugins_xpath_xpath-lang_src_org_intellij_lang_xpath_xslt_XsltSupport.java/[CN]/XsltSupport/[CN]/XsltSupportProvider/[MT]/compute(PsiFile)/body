{
  if (psiFile instanceof PsiFileEx) {
    if (((PsiFileEx)psiFile).isContentsLoaded()) {
      final XmlDocument doc=((XmlFile)psiFile).getDocument();
      if (doc != null) {
        final XmlTag rootTag=doc.getRootTag();
        if (rootTag != null) {
          final boolean supported;
          XmlAttribute v;
          if (isXsltRootTag(rootTag)) {
            v=rootTag.getAttribute("version");
            supported=v != null && XsltChecker.isSupportedVersion(v.getValue());
          }
 else {
            v=rootTag.getAttribute("version",XSLT_NS);
            supported=v != null && XsltChecker.isSupportedVersion(v.getValue());
          }
          return CachedValueProvider.Result.create(supported,rootTag);
        }
      }
    }
  }
  final XsltChecker xsltChecker=new XsltChecker();
  NanoXmlUtil.parseFile(psiFile,xsltChecker);
  return CachedValueProvider.Result.create(xsltChecker.isSupportedXsltFile(),psiFile);
}
