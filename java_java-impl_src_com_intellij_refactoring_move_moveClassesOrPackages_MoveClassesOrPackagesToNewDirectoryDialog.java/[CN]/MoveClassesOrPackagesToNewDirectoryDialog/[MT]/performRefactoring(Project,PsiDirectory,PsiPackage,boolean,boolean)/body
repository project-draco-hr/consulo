{
  final VirtualFile sourceRoot=ProjectRootManager.getInstance(project).getFileIndex().getSourceRootForFile(directory.getVirtualFile());
  if (sourceRoot == null) {
    Messages.showErrorDialog(project,RefactoringBundle.message("destination.directory.does.not.correspond.to.any.package"),RefactoringBundle.message("cannot.move"));
    return;
  }
  final JavaRefactoringFactory factory=JavaRefactoringFactory.getInstance(project);
  final MoveDestination destination=factory.createSourceRootMoveDestination(aPackage.getQualifiedName(),sourceRoot);
  MoveClassesOrPackagesProcessor processor=new MoveClassesOrPackagesProcessor(myDirectory.getProject(),myElementsToMove,destination,searchInComments,searchForTextOccurences,myMoveCallback);
  if (processor.verifyValidPackageName()) {
    processor.run();
  }
}
