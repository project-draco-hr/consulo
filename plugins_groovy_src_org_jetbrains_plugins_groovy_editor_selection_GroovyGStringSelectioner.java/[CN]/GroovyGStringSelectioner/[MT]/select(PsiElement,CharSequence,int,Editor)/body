{
  List<TextRange> ranges=new ArrayList<TextRange>();
  PsiElement parent=e.getParent();
  if (parent instanceof GrReferenceExpression) {
    e=parent;
    parent=e.getParent();
  }
  if (parent instanceof GrClosableBlock) {
    parent=parent.getParent();
  }
  if (parent instanceof GrString) {
    final TextRange selection=new TextRange(editor.getSelectionModel().getSelectionStart(),editor.getSelectionModel().getSelectionEnd());
    TextRange range=getLineTextRange(e,cursorOffset);
    ranges.add(range);
    if (selection.contains(range)) {
      PsiElement firstChild=parent.getFirstChild();
      PsiElement lastChild=parent.getLastChild();
      if (firstChild.getNode().getElementType() == mGSTRING_BEGIN) {
        firstChild=firstChild.getNextSibling();
      }
      if (lastChild.getNode().getElementType() == mGSTRING_END) {
        lastChild=lastChild.getPrevSibling();
      }
      if (firstChild != null && lastChild != null) {
        range=new TextRange(firstChild.getTextOffset(),lastChild.getTextOffset() + lastChild.getTextLength());
        ranges.add(range);
      }
      if (selection.contains(range) || firstChild == null || lastChild == null) {
        ranges.add(parent.getTextRange());
      }
    }
  }
 else   if (parent instanceof GrStringInjection) {
    if (e instanceof GrReferenceExpression) {
      List<TextRange> r=new ArrayList<TextRange>(2);
      SelectWordUtil.addWordSelection(editor.getSettings().isCamelWords(),editorText,cursorOffset,r);
      for (      TextRange textRange : r) {
        if (editorText.charAt(textRange.getStartOffset()) == '$') {
          textRange=new TextRange(textRange.getStartOffset() + 1,textRange.getEndOffset());
        }
        ranges.add(textRange);
      }
    }
    ranges.add(parent.getTextRange());
    ranges.add(e.getTextRange());
  }
  return ranges;
}
