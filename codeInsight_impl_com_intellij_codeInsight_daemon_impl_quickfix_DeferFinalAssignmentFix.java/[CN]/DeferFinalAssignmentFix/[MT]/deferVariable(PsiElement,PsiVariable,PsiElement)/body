{
  if (outerCodeBlock == null)   return;
  List<PsiReferenceExpression> outerReferences=new ArrayList<PsiReferenceExpression>();
  collectReferences(outerCodeBlock,variable,outerReferences);
  PsiElementFactory factory=variable.getManager().getElementFactory();
  Project project=variable.getProject();
  String tempName=suggestNewName(project,variable);
  PsiDeclarationStatement tempVariableDeclaration=factory.createVariableDeclarationStatement(tempName,variable.getType(),null);
  ControlFlow controlFlow;
  try {
    controlFlow=ControlFlowFactory.getInstance(project).getControlFlow(outerCodeBlock,LocalsOrMyInstanceFieldsControlFlowPolicy.getInstance(),false);
  }
 catch (  AnalysisCanceledException e) {
    return;
  }
  int minOffset=0;
  boolean writeReferenceOccurred=false;
  PsiReferenceExpression writeReference=null;
  for (int i=outerReferences.size() - 1; i >= 0; i--) {
    PsiReferenceExpression reference=outerReferences.get(i);
    if (!writeReferenceOccurred && !PsiUtil.isAccessedForWriting(reference)) {
      outerReferences.remove(i);
      continue;
    }
    writeReferenceOccurred=true;
    writeReference=reference;
    PsiElement element=PsiUtil.getEnclosingStatement(reference);
    int endOffset=element == null ? -1 : controlFlow.getEndOffset(element);
    minOffset=Math.max(minOffset,endOffset);
  }
  LOG.assertTrue(writeReference != null);
  PsiStatement finalAssignment=factory.createStatementFromText(writeReference.getText() + " = " + tempName+ ";",outerCodeBlock);
  if (!insertToDefinitelyReachedPlace(outerCodeBlock,finalAssignment,controlFlow,minOffset,outerReferences))   return;
  outerCodeBlock.addAfter(tempVariableDeclaration,tempDeclarationAnchor);
  replaceReferences(outerReferences,factory.createExpressionFromText(tempName,outerCodeBlock));
}
