{
  super.visitTypeCastExpression(expression);
  final PsiTypeElement typeElement=expression.getCastType();
  if (typeElement == null) {
    return;
  }
  final PsiType castType=typeElement.getType();
  if (!(castType instanceof PsiArrayType)) {
    return;
  }
  final PsiExpression operand=expression.getOperand();
  if (operand == null) {
    return;
  }
  final PsiType type=operand.getType();
  if (!(type instanceof PsiArrayType)) {
    return;
  }
  final PsiType castComponentType=castType.getDeepComponentType();
  if (!(castComponentType instanceof PsiClassType)) {
    return;
  }
  final PsiClassType castClassType=(PsiClassType)castComponentType;
  final PsiClass castClass=castClassType.resolve();
  if (castClass == null) {
    return;
  }
  final PsiType componentType=type.getDeepComponentType();
  if (!(componentType instanceof PsiClassType)) {
    return;
  }
  final PsiClassType classType=(PsiClassType)componentType;
  final PsiClass aClass=classType.resolve();
  if (aClass == null) {
    return;
  }
  if (!castClass.isInheritor(aClass,true)) {
    return;
  }
  registerError(typeElement);
}
