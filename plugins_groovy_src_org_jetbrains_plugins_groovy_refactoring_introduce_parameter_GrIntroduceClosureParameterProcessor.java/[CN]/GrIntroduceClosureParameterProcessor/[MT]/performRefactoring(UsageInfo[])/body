{
  if (mySettings.generateDelegate()) {
    LOG.assertTrue(toSearchFor instanceof GrVariable);
    String newName=InlineMethodConflictSolver.suggestNewName(((GrVariable)toSearchFor).getName() + "Delegate",null,toSearchFor);
    GrClosableBlock result=generateDelegateClosure(this.toReplaceIn,(GrVariable)toSearchFor,newName);
    processClosure(usages,mySettings);
    final GrVariableDeclaration declaration=myFactory.createVariableDeclaration(null,toReplaceIn,((GrVariable)toSearchFor).getDeclaredType(),newName);
    declaration.getModifierList().replace(((GrVariable)toSearchFor).getModifierList());
    toReplaceIn.replace(result);
    insertDeclaration((GrVariable)toSearchFor,declaration).getVariables()[0].getInitializerGroovy();
  }
 else {
    processExternalUsages(usages,mySettings,myParameterInitializer.getExpression());
    processClosure(usages,mySettings);
  }
  final GrVariable var=mySettings.getVar();
  if (var != null && mySettings.removeLocalVariable()) {
    var.delete();
  }
}
