{
  if (mySettings.generateDelegate()) {
    LOG.assertTrue(toSearchFor instanceof GrVariable);
    String newName=InlineMethodConflictSolver.suggestNewName(((GrVariable)toSearchFor).getName() + "Delegate",null,toSearchFor);
    GrClosableBlock result=generateDelegateClosure(this.toReplaceIn,(GrVariable)toSearchFor,newName);
    processClosure(usages);
    final GrVariableDeclaration declaration=myFactory.createVariableDeclaration(null,toReplaceIn,((GrVariable)toSearchFor).getDeclaredType(),newName);
    declaration.getModifierList().replace(((GrVariable)toSearchFor).getModifierList());
    toReplaceIn.replace(result);
    insertDeclaration((GrVariable)toSearchFor,declaration).getVariables()[0].getInitializerGroovy();
  }
 else {
    processExternalUsages(usages);
    processClosure(usages);
  }
  if (myContext.getVar() != null && mySettings.removeLocalVariable()) {
    myContext.getVar().delete();
  }
}
