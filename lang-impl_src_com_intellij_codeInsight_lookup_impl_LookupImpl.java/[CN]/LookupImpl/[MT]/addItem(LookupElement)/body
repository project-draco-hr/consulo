{
  final double priority=item instanceof LookupItem ? ((LookupItem)item).getPriority() : 0;
  final Comparable[] weight=getWeight(myItemPreferencePolicy,myElement,item);
  final LookupItemWeightComparable comparable=new LookupItemWeightComparable(priority,weight);
  final CollectConsumer<LookupElementAction> consumer=new CollectConsumer<LookupElementAction>();
  for (  LookupActionProvider provider : LookupActionProvider.EP_NAME.getExtensions()) {
    provider.fillActions(item,this,consumer);
  }
synchronized (myItems) {
    myItems.add(item);
    SortedList<LookupElement> list=myItemsMap.get(comparable);
    if (list == null) {
      myItemsMap.put(comparable,list=new SortedList<LookupElement>(myComparator));
    }
    list.add(item);
    myItemActions.put(item,consumer.getResult());
  }
  int maxWidth=myCellRenderer.updateMaximumWidth(item);
  myLookupWidth=Math.max(maxWidth,myLookupWidth);
}
