{
  if (explicitlyInvoked && myCalculating)   return false;
  if (!explicitlyInvoked && myDirty)   return false;
  ListModel listModel=myList.getModel();
  if (listModel.getSize() <= 1)   return false;
  if (listModel.getSize() == 0)   return false;
  final LookupElement firstItem=(LookupElement)listModel.getElementAt(0);
  if (listModel.getSize() == 1 && firstItem instanceof EmptyLookupItem)   return false;
  final PrefixMatcher firstItemMatcher=firstItem.getPrefixMatcher();
  final String oldPrefix=firstItemMatcher.getPrefix();
  String presentPrefix=oldPrefix + myAdditionalPrefix;
  final PrefixMatcher matcher=firstItemMatcher.cloneWithPrefix(presentPrefix);
  String lookupString=firstItem.getLookupString();
  int div=divideString(lookupString,matcher);
  if (div < 0)   return false;
  String beforeCaret=lookupString.substring(0,div);
  String afterCaret=lookupString.substring(div);
  for (int i=1; i < listModel.getSize(); i++) {
    LookupElement item=(LookupElement)listModel.getElementAt(i);
    if (!oldPrefix.equals(item.getPrefixMatcher().getPrefix()))     return false;
    lookupString=item.getLookupString();
    div=divideString(lookupString,item.getPrefixMatcher().cloneWithPrefix(presentPrefix));
    if (div < 0)     return false;
    String _afterCaret=lookupString.substring(div);
    if (beforeCaret != null) {
      if (div != beforeCaret.length() || !lookupString.startsWith(beforeCaret)) {
        beforeCaret=null;
      }
    }
    while (afterCaret.length() > 0) {
      if (_afterCaret.startsWith(afterCaret)) {
        break;
      }
      afterCaret=afterCaret.substring(0,afterCaret.length() - 1);
    }
    if (afterCaret.length() == 0)     return false;
  }
  if (myAdditionalPrefix.length() == 0 && myInitialPrefix == null && !explicitlyInvoked) {
    myInitialPrefix=presentPrefix;
  }
 else {
    myInitialPrefix=null;
  }
  EditorModificationUtil.deleteSelectedText(myEditor);
  int offset=myEditor.getCaretModel().getOffset();
  if (beforeCaret != null) {
    final int start=offset - presentPrefix.length();
    setInitialOffset(offset,offset,offset);
    myAdditionalPrefix="";
    myEditor.getDocument().replaceString(start,offset,beforeCaret);
    presentPrefix=beforeCaret;
  }
  offset=myEditor.getCaretModel().getOffset();
  myEditor.getDocument().insertString(offset,afterCaret);
  final String newPrefix=presentPrefix + afterCaret;
synchronized (myItems) {
    for (Iterator<LookupElement> it=myItems.iterator(); it.hasNext(); ) {
      LookupElement item=it.next();
      if (!item.setPrefixMatcher(item.getPrefixMatcher().cloneWithPrefix(newPrefix))) {
        it.remove();
      }
    }
    myAdditionalPrefix="";
  }
  updateList();
  offset+=afterCaret.length();
  setInitialOffset(offset,offset,offset);
  myEditor.getCaretModel().moveToOffset(offset);
  return true;
}
