{
  VirtualFile p1=createModulePom("project1","<groupId>test</groupId>" + "<artifactId>project1</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<modules>"+ "  <module>m1</module>"+ "</modules>");
  createModulePom("project1/m1","<groupId>test</groupId>" + "<artifactId>module</artifactId>" + "<version>1</version>");
  VirtualFile p2=createModulePom("project2","<groupId>test</groupId>" + "<artifactId>project2</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>");
  getMavenImporterSettings().setCreateModuleGroups(true);
  importProjects(p1,p2);
  assertModules("project1","project2","module");
  assertModuleGroupPath("project1","project1 and modules");
  assertModuleGroupPath("module","project1 and modules");
  p2=createModulePom("project2","<groupId>test</groupId>" + "<artifactId>project2</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<modules>"+ "  <module>m2</module>"+ "</modules>");
  createModulePom("project2/m2","<groupId>test</groupId>" + "<artifactId>module</artifactId>" + "<version>1</version>");
  updateProjectsAndImport(p2);
  assertModules("project1","project2","module","module (2)");
  assertModuleGroupPath("project1","project1 and modules");
  assertModuleGroupPath("module","project1 and modules");
  assertModuleGroupPath("project2","project2 and modules");
  assertModuleGroupPath("module (2)","project2 and modules");
}
