{
  if (myDeleted.contains(data.variable))   return;
  final PsiExpression psiExpression=myExpressions.get(data.variable);
  if (psiExpression == null)   return;
  final Set<PsiExpression> eqExpressions=new HashSet<PsiExpression>();
  for (  PsiReference reference : ReferencesSearch.search(data.variable,scope)) {
    final PsiExpression expression=findEquivalent(psiExpression,reference.getElement());
    if (expression != null && expression.isValid()) {
      eqExpressions.add(expression);
    }
  }
  for (  PsiExpression expression : eqExpressions) {
    final PsiExpression refExpression=JavaPsiFacade.getElementFactory(expression.getProject()).createExpressionFromText(data.variable.getName(),expression);
    final PsiElement replaced=expression.replace(refExpression);
    for (int i=0, psiElementsLength=elements.length; i < psiElementsLength; i++) {
      PsiElement psiElement=elements[i];
      if (expression == psiElement) {
        elements[i]=replaced;
        break;
      }
    }
  }
}
