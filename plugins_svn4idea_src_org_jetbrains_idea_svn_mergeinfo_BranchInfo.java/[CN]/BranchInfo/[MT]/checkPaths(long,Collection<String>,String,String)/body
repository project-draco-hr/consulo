{
  final List<SvnMergeInfoCache.MergeCheckResult> result=new ArrayList<SvnMergeInfoCache.MergeCheckResult>();
  final String myTrunkPathCorrespondingToLocalBranchPath=SVNPathUtil.append(myTrunkCorrected,subPathUnderBranch);
  for (  String path : paths) {
    final String absoluteInTrunkPath=SVNPathUtil.append(myRepositoryRoot,path);
    if (!absoluteInTrunkPath.startsWith(myTrunkPathCorrespondingToLocalBranchPath)) {
      result.add(SvnMergeInfoCache.MergeCheckResult.NOT_EXISTS);
      return result;
    }
    final String relativeToTrunkPath=absoluteInTrunkPath.substring(myTrunkPathCorrespondingToLocalBranchPath.length());
    final String localPathInBranch=new File(branchPath,relativeToTrunkPath).getAbsolutePath();
    final SvnMergeInfoCache.MergeCheckResult pathResult=checkPathGoingUp(number,-1,branchPath,localPathInBranch,path,true);
    result.add(pathResult);
  }
  return result;
}
