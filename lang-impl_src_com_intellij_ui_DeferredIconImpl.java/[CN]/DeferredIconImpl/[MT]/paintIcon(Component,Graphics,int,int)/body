{
  myDelegateIcon.paintIcon(c,g,x,y);
  if (!myIsScheduled) {
    myIsScheduled=true;
    final Component target;
    final Container list=SwingUtilities.getAncestorOfClass(JList.class,c);
    if (list != null) {
      target=list;
    }
 else {
      target=c;
    }
    myLastTarget=target;
    final Job<Object> job=JobScheduler.getInstance().createJob("Evaluating deferred icon",Job.DEFAULT_PRIORITY);
    job.addTask(new Runnable(){
      public void run(){
        myDelegateIcon=evaluate();
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            if (c == target) {
              c.repaint(x,y,getIconWidth(),getIconHeight());
            }
 else {
              target.repaint();
            }
          }
        }
);
      }
    }
);
    job.schedule();
  }
}
