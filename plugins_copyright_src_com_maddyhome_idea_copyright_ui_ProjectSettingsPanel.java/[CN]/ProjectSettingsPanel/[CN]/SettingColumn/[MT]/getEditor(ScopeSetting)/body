{
  return new AbstractTableCellEditor(){
    private ComboBox myProfilesCombo;
    public Object getCellEditorValue(){
      return myProfilesCombo.getSelectedItem();
    }
    public Component getTableCellEditorComponent(    final JTable table,    Object value,    boolean isSelected,    int row,    int column){
      final List<CopyrightProfile> copyrights=new ArrayList<CopyrightProfile>(myProfilesModel.getAllProfiles().values());
      Collections.sort(copyrights,new Comparator<CopyrightProfile>(){
        @Override public int compare(        CopyrightProfile o1,        CopyrightProfile o2){
          return o1.getName().compareToIgnoreCase(o2.getName());
        }
      }
);
      myProfilesCombo=new ComboBox(copyrights.toArray(new CopyrightProfile[copyrights.size()]),60);
      myProfilesCombo.setBorder(null);
      myProfilesCombo.setSelectedItem(scopeSetting.getProfile());
      myProfilesCombo.addItemListener(new ItemListener(){
        public void itemStateChanged(        final ItemEvent e){
          if (table.isEditing()) {
            stopCellEditing();
          }
        }
      }
);
      myProfilesCombo.setRenderer(new DefaultListCellRenderer(){
        public Component getListCellRendererComponent(        JList list,        Object value,        int index,        boolean isSelected,        boolean cellHasFocus){
          Component rendererComponent=super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
          setText(((CopyrightProfile)value).getName());
          return rendererComponent;
        }
      }
);
      return myProfilesCombo;
    }
  }
;
}
