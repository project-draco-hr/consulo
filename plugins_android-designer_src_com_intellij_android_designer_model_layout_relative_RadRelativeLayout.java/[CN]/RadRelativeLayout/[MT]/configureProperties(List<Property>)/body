{
  CompoundProperty alignComponent=new CompoundProperty("layout:alignComponent",JavadocParser.build("layout:alignComponent","Positions the edges of this view to the edges of the another view."));
  PropertyParser.moveProperties(properties,alignComponent,"layout:alignTop","top:top","layout:below","top:bottom","layout:alignLeft","left:left","layout:toRightOf","left:right","layout:alignBottom","bottom:bottom","layout:above","bottom:top","layout:alignRight","right:right","layout:toLeftOf","right:left","layout:alignBaseline","baseline:baseline");
  List<Property<RadViewComponent>> alignChildren=alignComponent.getChildren(null);
  int alignSize=alignChildren.size();
  for (int i=0; i < alignSize; i++) {
    alignChildren.set(i,new RelativeIdAttributeProperty((AttributeProperty)alignChildren.get(i)));
  }
  properties.add(alignComponent);
  CompoundProperty alignParent=new CompoundProperty("layout:alignParent",JavadocParser.build("layout:alignParent","Positions the edges of this view to the edges of the parent."));
  PropertyParser.moveProperties(properties,alignParent,"layout:alignParentTop","top","layout:alignParentLeft","left","layout:alignParentBottom","bottom","layout:alignParentRight","right","layout:alignWithParentIfMissing","missing");
  properties.add(alignParent);
  RadPropertyTable.extractProperty(properties,"layout:centerInParent");
  RadPropertyTable.extractProperty(properties,"layout:centerHorizontal");
  RadPropertyTable.extractProperty(properties,"layout:centerVertical");
  properties.add(new CenterProperty());
}
