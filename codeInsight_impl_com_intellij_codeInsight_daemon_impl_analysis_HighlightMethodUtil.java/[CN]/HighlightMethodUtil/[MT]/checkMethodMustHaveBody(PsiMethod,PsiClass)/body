{
  HighlightInfo errorResult=null;
  if (method.getBody() == null && !method.hasModifierProperty(PsiModifier.ABSTRACT) && !method.hasModifierProperty(PsiModifier.NATIVE) && aClass != null && !aClass.isInterface() && !PsiUtil.hasErrorElementChild(method)) {
    int start=method.getModifierList().getTextRange().getStartOffset();
    int end=method.getTextRange().getEndOffset();
    errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,start,end,JavaErrorMessages.message("missing.method.body"));
    if (HighlightUtil.getIncompatibleModifier(PsiModifier.ABSTRACT,method.getModifierList(),HighlightUtil.ourMethodIncompatibleModifiers) == null) {
      IntentionAction fix=QUICK_FIX_FACTORY.createModifierListFix(method.getModifierList(),PsiModifier.ABSTRACT,true,false);
      QuickFixAction.registerQuickFixAction(errorResult,fix);
    }
    QuickFixAction.registerQuickFixAction(errorResult,new AddMethodBodyFix(method));
  }
  return errorResult;
}
