{
  PsiMethod method=methodSignature.getMethod();
  for (  MethodSignatureBackedByPsiMethod superMethodSignature : superMethodSignatures) {
    PsiMethod superMethod=superMethodSignature.getMethod();
    if (superMethod.hasModifierProperty(PsiModifier.FINAL)) {
      String message=JavaErrorMessages.message("final.method.override",HighlightUtil.formatMethod(method),HighlightUtil.formatMethod(superMethod),HighlightUtil.formatClass(superMethod.getContainingClass()));
      TextRange textRange=HighlightNamesUtil.getMethodDeclarationTextRange(method);
      HighlightInfo errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,textRange,message);
      IntentionAction fix=QUICK_FIX_FACTORY.createModifierListFix(superMethod,PsiModifier.FINAL,false,true);
      QuickFixAction.registerQuickFixAction(errorResult,fix);
      return errorResult;
    }
  }
  return null;
}
