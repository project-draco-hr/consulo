{
  if (constructorClass == null)   return false;
  if (place instanceof PsiNewExpression && ((PsiNewExpression)place).getAnonymousClass() != null)   return false;
  PsiElement curElement=place;
  PsiClass containingClass=constructorClass.getContainingClass();
  while (true) {
    PsiClass aClass=PsiTreeUtil.getParentOfType(curElement,PsiClass.class);
    if (aClass == null)     return false;
    curElement=aClass;
    if ((aClass.isInheritor(constructorClass,true) || containingClass != null && aClass.isInheritor(containingClass,true)) && !JavaPsiFacade.getInstance(aClass.getProject()).arePackagesTheSame(aClass,constructorClass)) {
      return true;
    }
  }
}
