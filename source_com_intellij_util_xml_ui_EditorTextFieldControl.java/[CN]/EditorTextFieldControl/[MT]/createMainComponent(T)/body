{
  final Project project=getProject();
  boundedComponent=createMainComponent(boundedComponent,project);
  final EditorTextField editorTextField=getEditorTextField(boundedComponent);
  editorTextField.setSupplementary(true);
  final PsiCodeFragment file=(PsiCodeFragment)PsiDocumentManager.getInstance(project).getPsiFile(editorTextField.getDocument());
  file.addAnnotator(new Annotator(){
    public void annotate(    PsiElement psiElement,    AnnotationHolder holder){
      final DomElement domElement=getDomElement();
      if (!domElement.isValid())       return;
      for (      final DomElementProblemDescriptor problem : DomElementAnnotationsManager.getInstance(project).getProblems(domElement,true)) {
        holder.createErrorAnnotation(psiElement.getContainingFile(),problem.getDescriptionTemplate());
      }
    }
  }
);
  if (myCommitOnEveryChange) {
    editorTextField.getDocument().addDocumentListener(myListener);
  }
  return boundedComponent;
}
