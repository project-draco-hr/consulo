{
  super.readExternal(breakpointNode);
  final String url=breakpointNode.getAttributeValue("url");
  final String className=breakpointNode.getAttributeValue("class");
  if (className != null) {
    myClassName=className;
  }
  final String packageName=breakpointNode.getAttributeValue("package");
  if (packageName != null) {
    myPackageName=packageName;
  }
  VirtualFile vFile=VirtualFileManager.getInstance().findFileByUrl(url);
  if (vFile == null) {
    throw new InvalidDataException(DebuggerBundle.message("error.breakpoint.file.not.found",url));
  }
  final Document doc=FileDocumentManager.getInstance().getDocument(vFile);
  if (doc == null) {
    throw new InvalidDataException(DebuggerBundle.message("error.cannot.load.breakpoint.file",url));
  }
  final int line;
  try {
    line=Integer.parseInt(breakpointNode.getAttributeValue("line"));
  }
 catch (  Exception e) {
    throw new InvalidDataException("Line number is invalid for breakpoint");
  }
  if (line < 0) {
    throw new InvalidDataException("Line number is invalid for breakpoint");
  }
  RangeHighlighter highlighter=createHighlighter(myProject,doc,line);
  if (highlighter == null) {
    throw new InvalidDataException("");
  }
  myHighlighter=highlighter;
  reload();
}
