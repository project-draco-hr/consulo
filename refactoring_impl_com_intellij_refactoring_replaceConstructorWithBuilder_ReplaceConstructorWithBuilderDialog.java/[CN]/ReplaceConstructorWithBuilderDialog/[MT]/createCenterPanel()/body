{
  myPackageTextField.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final Project project=getProject();
      final PackageChooserDialog chooser=new PackageChooserDialog(RefactorJBundle.message("choose.destination.package.label"),project);
      final String packageText=myPackageTextField.getText();
      chooser.selectPackage(packageText);
      chooser.show();
      final PsiPackage aPackage=chooser.getSelectedPackage();
      if (aPackage != null) {
        final String packageName=aPackage.getQualifiedName();
        myPackageTextField.setText(packageName);
      }
    }
  }
);
  myExistentClassTF.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final TreeClassChooser dialog=TreeClassChooserFactory.getInstance(getProject()).createWithInnerClassesScopeChooser("",GlobalSearchScope.projectScope(myProject),null,null);
      dialog.showDialog();
      final PsiClass psiClass=dialog.getSelectedClass();
      if (psiClass != null) {
        myExistentClassTF.setText(psiClass.getQualifiedName());
      }
    }
  }
);
  final ActionListener enableDisableListener=new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      setEnabled(myCreateBuilderClassRadioButton.isSelected());
      validateButtons();
    }
  }
;
  myCreateBuilderClassRadioButton.addActionListener(enableDisableListener);
  myExistingBuilderClassRadioButton.addActionListener(enableDisableListener);
  myCreateBuilderClassRadioButton.setSelected(true);
  setEnabled(true);
  final DocumentAdapter validateButtonsListener=new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      validateButtons();
    }
  }
;
  myNewClassName.getDocument().addDocumentListener(validateButtonsListener);
  myPackageTextField.getTextField().getDocument().addDocumentListener(validateButtonsListener);
  myExistentClassTF.getTextField().getDocument().addDocumentListener(validateButtonsListener);
  return myWholePanel;
}
