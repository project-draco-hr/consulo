{
  final Map<Key,List<String>> written=new ConcurrentHashMap<Key,List<String>>();
  for (  final Key each : ALL_TYPES) {
    written.put(each,new ArrayList<String>());
    execute(new Runnable(){
      @Override public void run(){
        Random r=new Random();
        for (int i=0; i < 1000; i++) {
          String s=StringUtil.repeat("A",100 + r.nextInt(1000));
          if (r.nextInt(1) == 1)           s+="\n";
          mySplitter.process(s,each);
          List<String> list=written.get(each);
          if (!list.isEmpty()) {
            String last=list.get(list.size() - 1);
            if (!last.endsWith("\n")) {
              list.set(list.size() - 1,last + s);
              continue;
            }
          }
          list.add(s);
        }
      }
    }
).get();
  }
  mySplitter.flush();
  for (  Key eachType : ALL_TYPES) {
    assertOrderedEquals(myOutput.get(eachType),written.get(eachType));
  }
}
