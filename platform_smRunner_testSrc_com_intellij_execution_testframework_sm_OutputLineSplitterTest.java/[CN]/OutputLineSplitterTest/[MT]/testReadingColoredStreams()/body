{
  final Map<Key,List<String>> written=new ConcurrentHashMap<Key,List<String>>();
  for (  final Key each : ALL_TYPES) {
    written.put(each,new ArrayList<String>());
    execute(new Runnable(){
      @Override public void run(){
        Random r=new Random();
        for (int i=0; i < 1000; i++) {
          String s=StringUtil.repeat("A",100 + r.nextInt(1000)) + "\n";
          if (each == ProcessOutputTypes.STDOUT) {
            mySplitter.process(s,ALL_COLORS.get(r.nextInt(2)));
          }
 else {
            mySplitter.process(s,each);
          }
          written.get(each).add(s);
        }
      }
    }
).get();
  }
  mySplitter.flush();
  for (  Key eachType : ALL_TYPES) {
    assertOrderedEquals(myOutput.get(eachType),written.get(eachType));
  }
}
