{
  final SequentialTask task=myTask;
  if (task == null) {
    return;
  }
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      Document document=myDocument.get();
      if (document != null) {
        myDocumentModificationStampBefore=document.getModificationStamp();
      }
      task.prepare();
    }
  }
);
  myIndicator=indicator;
  while (myRunning && !task.isDone()) {
    if (indicator.isCanceled()) {
      task.stop();
      break;
    }
    UIUtil.invokeAndWaitIfNeeded(new Runnable(){
      @Override public void run(){
        long start=System.currentTimeMillis();
        try {
          while (!task.isDone() && System.currentTimeMillis() - start < ITERATION_MIN_TIMES_MILLIS.get(myLastState)) {
            task.iteration();
          }
        }
 catch (        RuntimeException e) {
          task.stop();
          throw e;
        }
      }
    }
);
  }
}
