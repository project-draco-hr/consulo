{
  if (context != null && type instanceof PsiClassType) {
    final String accessible=findAccessibleSuperClass(context,((PsiClassType)type).resolve());
    if (accessible != null) {
      return accessible;
    }
  }
  if (type instanceof PsiArrayType) {
    String componentText=getTypeText(((PsiArrayType)type).getComponentType(),context,false);
    if (allowVarargs && type instanceof PsiEllipsisType) {
      return componentText + "...";
    }
    return componentText + "[]";
  }
  String canonicalText=type.getCanonicalText();
  return canonicalText != null ? canonicalText : type.getPresentableText();
}
