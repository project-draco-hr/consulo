{
  if (method == null)   return;
  boolean isAbstract=method.hasModifierProperty(PsiModifier.ABSTRACT);
  String qualifiedTypeName=getTypeText(method.getReturnType());
  PsiModifierList modifierList=method.getModifierList();
  text.append("\n");
  text.append("  ");
  writeMethodModifiers(text,modifierList,JAVA_MODIFIERS);
  text.append(qualifiedTypeName);
  text.append(" ");
  text.append(method.getName());
  PsiParameter[] parameterList=method.getParameterList().getParameters();
  text.append("(");
  int i=0;
  while (i < parameterList.length) {
    PsiParameter parameter=parameterList[i];
    if (parameter == null)     continue;
    if (i > 0)     text.append(", ");
    text.append(getTypeText(parameter.getType()));
    text.append(" ");
    text.append(parameter.getName());
    i++;
  }
  text.append(")");
  text.append(" ");
  if (!isAbstract) {
    text.append("{\n");
    text.append("    return ");
    text.append(getDefaultValueText(qualifiedTypeName));
    text.append(";");
    text.append("\n  }");
  }
 else {
    text.append(";");
  }
  text.append("\n");
}
