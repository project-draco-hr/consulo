{
  GrConstructorDefinitionImpl constrDefinition=(GrConstructorDefinitionImpl)constructor;
  writeMethodModifiers(text,constrDefinition.getModifierList(),JAVA_MODIFIERS);
  text.append(" ");
  text.append(constructor.getName());
  GrParameter[] parameterList=constructor.getParameters();
  text.append("(");
  String paramType;
  GrTypeElement paramTypeElement;
  int i=0;
  while (i < parameterList.length) {
    if (i > 0)     text.append(", ");
    GrParameter parameter=parameterList[i];
    paramTypeElement=parameter.getTypeElementGroovy();
    paramType=getResolvedType(paramTypeElement);
    text.append(paramType);
    text.append(" ");
    text.append(parameter.getName());
    i++;
  }
  text.append(")");
  text.append("{");
  PsiParameterList list=constructor.getParameterList();
  PsiParameter[] parameters=list.getParameters();
  GrConstructorInvocation grConstructorInvocation=constrDefinition.getConstructorInvocation();
  if (grConstructorInvocation != null && grConstructorInvocation.isSuperCall()) {
    text.append("super");
    text.append("(");
    int i1=0;
    while (i1 < parameters.length) {
      if (i1 > 0)       text.append(", ");
      PsiParameter grParameter=parameters[i1];
      PsiType type=grParameter.getType();
      String initValueToText;
      if (typesToInitialValues.containsKey(computeTypeText(type)))       initValueToText=typesToInitialValues.get(type.getCanonicalText());
 else       initValueToText="null";
      text.append(initValueToText);
      i1++;
    }
    text.append(")");
    text.append(";");
  }
  text.append("}");
}
