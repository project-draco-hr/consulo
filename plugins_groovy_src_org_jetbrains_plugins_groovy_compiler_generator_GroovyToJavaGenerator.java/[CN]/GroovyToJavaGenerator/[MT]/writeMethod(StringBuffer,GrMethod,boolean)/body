{
  GrTypeElement typeElement=method.getReturnTypeElementGroovy();
  String qualifiedTypeName=getTypeText(typeElement);
  PsiModifierList modifierList=method.getModifierList();
  text.append("\n");
  text.append("  ");
  writeMethodModifiers(text,modifierList,JAVA_MODIFIERS);
  text.append(qualifiedTypeName);
  text.append(" ");
  text.append(method.getName());
  GrParameter[] parameterList=method.getParameters();
  text.append("(");
  String paramType;
  GrTypeElement paramTypeElement;
  int i=0;
  while (i < parameterList.length) {
    if (i > 0)     text.append(", ");
    GrParameter parameter=parameterList[i];
    paramTypeElement=parameter.getTypeElementGroovy();
    paramType=getTypeText(paramTypeElement);
    text.append(paramType);
    text.append(" ");
    text.append(parameter.getName());
    i++;
  }
  text.append(")");
  text.append(" ");
  if (!isIntefraceMethod) {
    text.append("{\n");
    text.append("    return ");
    if (typesToInitialValues.containsKey(qualifiedTypeName))     text.append(typesToInitialValues.get(qualifiedTypeName));
 else     text.append("null");
    text.append(";");
    text.append("\n  }");
  }
 else {
    text.append(";");
  }
  text.append("\n");
}
