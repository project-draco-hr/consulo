{
  if (method == null)   return;
  String name=method.getName();
  if (!method.getManager().getNameHelper().isIdentifier(name))   return;
  boolean isAbstract=method.hasModifierProperty(PsiModifier.ABSTRACT);
  PsiModifierList modifierList=method.getModifierList();
  text.append("\n");
  text.append("  ");
  writeMethodModifiers(text,modifierList,JAVA_MODIFIERS);
  if (method.hasTypeParameters()) {
    appendTypeParameters(text,method);
    text.append(" ");
  }
  PsiType retType;
  if (method instanceof GrMethod) {
    retType=((GrMethod)method).getDeclaredReturnType();
    if (retType == null)     retType=TypesUtil.createJavaLangObject(method);
  }
 else   retType=method.getReturnType();
  text.append(getTypeText(retType));
  text.append(" ");
  text.append(name);
  text.append("(");
  int i=0;
  while (i < parameters.length) {
    PsiParameter parameter=parameters[i];
    if (parameter == null)     continue;
    if (i > 0)     text.append(", ");
    text.append(getTypeText(parameter.getType()));
    text.append(" ");
    text.append(parameter.getName());
    i++;
  }
  text.append(")");
  text.append(" ");
  if (!isAbstract) {
    text.append("{\n");
    text.append("    return ");
    text.append(getDefaultValueText(getTypeText(retType)));
    text.append(";");
    text.append("\n  }");
  }
 else {
    text.append(";");
  }
  text.append("\n");
}
