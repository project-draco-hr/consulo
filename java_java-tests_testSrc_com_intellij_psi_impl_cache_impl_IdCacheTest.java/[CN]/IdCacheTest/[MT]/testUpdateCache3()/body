{
  VirtualFile child=myRootDir.findChild("1.java");
  child.delete(null);
  final CacheManager cache2=CacheManager.SERVICE.getInstance(myProject);
  final GlobalSearchScope scope=GlobalSearchScope.projectScope(myProject);
  checkResult(ArrayUtil.EMPTY_STRING_ARRAY,convert(cache2.getFilesWithWord("xxx",UsageSearchContext.ANY,scope,false)));
  checkResult(ArrayUtil.EMPTY_STRING_ARRAY,convert(cache2.getFilesWithWord("a",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"2.java"},convert(cache2.getFilesWithWord("b",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"2.java","3.java"},convert(cache2.getFilesWithWord("c",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"2.java","3.java"},convert(cache2.getFilesWithWord("d",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"3.java"},convert(cache2.getFilesWithWord("e",UsageSearchContext.ANY,scope,false)));
  checkResult(new String[]{"3.java"},convert(cache2.getFilesWithTodoItems()));
  assertEquals(0,cache2.getTodoCount(myRootDir.findChild("2.java"),TodoIndexPatternProvider.getInstance()));
  assertEquals(2,cache2.getTodoCount(myRootDir.findChild("3.java"),TodoIndexPatternProvider.getInstance()));
}
