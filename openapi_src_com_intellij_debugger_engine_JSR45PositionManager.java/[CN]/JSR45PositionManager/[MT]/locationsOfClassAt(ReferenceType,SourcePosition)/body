{
  final FileType fileType=position.getFile().getFileType();
  if (fileType != StdFileTypes.JSP && fileType != StdFileTypes.JSPX) {
    throw new NoDataException();
  }
  return ApplicationManager.getApplication().runReadAction(new Computable<List<Location>>(){
    public List<Location> compute(){
      try {
        PsiFile file=null;
        List<String> paths=(List<String>)type.sourcePaths(JSP_STRATUM);
        for (Iterator<String> iterator=paths.iterator(); iterator.hasNext(); ) {
          String path=iterator.next();
          file=myHelper.getDeployedJspSource(getRelativePath(path),myDebugProcess.getProject());
          if (file != null)           break;
        }
        if (file != null && file.equals(position.getFile())) {
          return (List<Location>)type.locationsOfLine(JSP_STRATUM,type.sourceName(),position.getLine() + 1);
        }
      }
 catch (      ObjectCollectedException e) {
      }
catch (      AbsentInformationException e) {
      }
catch (      InternalError e) {
        myDebugProcess.getExecutionResult().getProcessHandler().notifyTextAvailable(DebuggerBundle.message("internal.error.locations.of.line",type.name()),ProcessOutputTypes.SYSTEM);
      }
      return null;
    }
  }
);
}
