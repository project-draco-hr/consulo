{
  dragComponent.addMouseListener(new MouseAdapter(){
    public void mousePressed(    final MouseEvent e){
      myPressPoint=e.getPoint();
    }
    public void mouseReleased(    final MouseEvent e){
      boolean wasDragging=myDragging;
      myPressPoint=null;
      myDragging=false;
      myDragJustStarted=false;
      if (wasDragging) {
        processDragFinish(e);
      }
    }
    public void mouseClicked(    final MouseEvent e){
      MouseDragHelper.this.mouseClicked(e);
    }
  }
);
  dragComponent.addMouseMotionListener(new MouseMotionAdapter(){
    public void mouseDragged(    final MouseEvent e){
      final boolean deadZone=isWithinDeadZone(e);
      if (!myDragging && !deadZone) {
        myDragging=true;
        myDragJustStarted=true;
      }
 else       if (myDragging) {
        myDragJustStarted=false;
      }
      if (myDragging && myPressPoint != null) {
        final Point draggedTo=new RelativePoint(e).getScreenPoint();
        draggedTo.x-=myPressPoint.x;
        draggedTo.y-=myPressPoint.y;
        processDrag(e,draggedTo);
      }
    }
  }
);
}
