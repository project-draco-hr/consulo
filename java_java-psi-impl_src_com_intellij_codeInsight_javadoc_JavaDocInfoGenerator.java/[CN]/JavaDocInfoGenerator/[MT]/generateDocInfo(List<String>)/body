{
  StringBuilder buffer=new StringBuilder();
  if (myElement instanceof PsiClass) {
    generateClassJavaDoc(buffer,(PsiClass)myElement);
  }
 else   if (myElement instanceof PsiMethod) {
    generateMethodJavaDoc(buffer,(PsiMethod)myElement);
  }
 else   if (myElement instanceof PsiParameter) {
    generateMethodParameterJavaDoc(buffer,(PsiParameter)myElement);
  }
 else   if (myElement instanceof PsiField) {
    generateFieldJavaDoc(buffer,(PsiField)myElement);
  }
 else   if (myElement instanceof PsiVariable) {
    generateVariableJavaDoc(buffer,(PsiVariable)myElement);
  }
 else   if (myElement instanceof PsiDirectory) {
    final PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage((PsiDirectory)myElement);
    if (aPackage == null)     return null;
    generatePackageJavaDoc(buffer,aPackage);
  }
 else   if (myElement instanceof PsiPackage) {
    generatePackageJavaDoc(buffer,(PsiPackage)myElement);
  }
 else {
    return null;
  }
  if (docURLs != null) {
    StringBuilder errorsSection=new StringBuilder("<p id=\"error\">Following external urls were checked:<br>&nbsp;&nbsp;&nbsp;<i>");
    errorsSection.append(StringUtil.join(docURLs,"</i><br>&nbsp;&nbsp;&nbsp;<i>"));
    errorsSection.append("</i><br>The documentation for this element is not found. Please add all the needed paths to API docs in ");
    errorsSection.append("<a href=\"open://Project Settings\">Project Settings.</a></p>");
    if (buffer.length() == 0) {
      buffer.append("<html><body></body></html>");
    }
    buffer.insert(buffer.indexOf("<body>"),errorsSection.toString());
  }
  return fixupDoc(buffer);
}
