{
  PsiDocTag tag=comment == null ? null : comment.findTagByName("return");
  Pair<PsiDocTag,InheritDocProvider<PsiDocTag>> pair=tag == null ? null : new Pair<PsiDocTag,InheritDocProvider<PsiDocTag>>(tag,new InheritDocProvider<PsiDocTag>(){
    @Override public Pair<PsiDocTag,InheritDocProvider<PsiDocTag>> getInheritDoc(){
      return findInheritDocTag(method,new ReturnTagLocator());
    }
    @Override public PsiClass getElement(){
      return method.getContainingClass();
    }
  }
);
  if (pair == null && myElement instanceof PsiMethod) {
    pair=findInheritDocTag(((PsiMethod)myElement),new ReturnTagLocator());
  }
  if (pair != null) {
    buffer.append("<DD><DL>");
    buffer.append("<DT><b>").append(CodeInsightBundle.message("javadoc.returns")).append("</b>");
    buffer.append("<DD>");
    generateValue(buffer,pair.first.getDataElements(),mapProvider(pair.second,false));
    buffer.append("</DD></DL></DD>");
  }
}
