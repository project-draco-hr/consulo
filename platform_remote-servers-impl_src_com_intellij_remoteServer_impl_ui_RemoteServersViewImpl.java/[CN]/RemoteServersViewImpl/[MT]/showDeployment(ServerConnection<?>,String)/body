{
  DeploymentLogManager logManager=connection.getLogManager(deploymentName);
  if (logManager == null) {
    return;
  }
  final ToolWindow toolWindow=createOrGetToolWindow(connection.getServer().getType());
  final LoggingHandlerImpl mainLoggingHandler=(LoggingHandlerImpl)logManager.getMainLoggingHandler();
  ToolbarDecorator t=new ToolbarDecorator(){
    @Override protected JComponent getComponent(){
      return mainLoggingHandler.getConsole().getComponent();
    }
    @Override protected void updateButtons(){
    }
    @Override protected void installDnDSupport(){
    }
    @Override protected boolean isModelEditable(){
      return false;
    }
  }
;
  t.disableUpDownActions();
  t.disableAddAction();
  t.disableRemoveAction();
  t.addExtraAction(new AnActionButton("Close",AllIcons.Actions.Cancel){
    @Override public void actionPerformed(    AnActionEvent e){
      int contentCount=toolWindow.getContentManager().getContentCount();
      if (contentCount == 1) {
        ToolWindowManager.getInstance(myProject).unregisterToolWindow(connection.getServer().getType().getPresentableName());
      }
 else {
        Content selectedContent=toolWindow.getContentManager().getSelectedContent();
        if (selectedContent == null) {
          return;
        }
        toolWindow.getContentManager().removeContent(selectedContent,true);
      }
    }
  }
);
  t.setToolbarPosition(ActionToolbarPosition.LEFT);
  toolWindow.getContentManager().addContent(new ContentImpl(t.createPanel(),deploymentName,false));
}
