{
  if (psiElement instanceof PsiMetaOwner) {
    final PsiMetaData metaData=((PsiMetaOwner)psiElement).getMetaData();
    if (metaData instanceof PsiPresentableMetaData) {
      return ((PsiPresentableMetaData)metaData).getTypeName();
    }
  }
  if (psiElement instanceof XmlTag) {
    final PsiMetaData metaData=((XmlTag)psiElement).getMetaData();
    if (metaData != null && metaData.getDeclaration() instanceof XmlTag) {
      return ((XmlTag)metaData.getDeclaration()).getName();
    }
    return LangBundle.message("xml.terms.xml.tag");
  }
  if (psiElement instanceof PsiAntElement) {
    return ((PsiAntElement)psiElement).getRole().getName();
  }
  if (psiElement instanceof PsiFile) {
    return LangBundle.message("terms.file");
  }
  if (psiElement instanceof PsiDirectory) {
    return LangBundle.message("terms.directory");
  }
  final Language lang=psiElement.getLanguage();
  FindUsagesProvider provider=LanguageFindUsages.INSTANCE.forLanguage(lang);
  final String type=provider.getType(psiElement);
  if (StringUtil.isNotEmpty(type)) {
    return type;
  }
  return ElementPresentationManager.getTypeName(psiElement.getClass());
}
