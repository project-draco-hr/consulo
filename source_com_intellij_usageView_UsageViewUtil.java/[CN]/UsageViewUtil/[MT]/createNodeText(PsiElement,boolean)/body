{
  if (element instanceof PsiDirectory) {
    return getPackageName((PsiDirectory)element,false);
  }
  if (element instanceof PsiPackage) {
    return getPackageName((PsiPackage)element);
  }
  if (element instanceof PsiFile) {
    return useFullName ? ((PsiFile)element).getVirtualFile().getPresentableUrl() : ((PsiFile)element).getName();
  }
  if (ThrowSearchUtil.isSearchable(element)) {
    return ThrowSearchUtil.getSearchableTypeName(element);
  }
  if (element instanceof PsiClass) {
    String name=((PsiClass)element).getQualifiedName();
    if (name == null || !useFullName) {
      name=((PsiClass)element).getName();
    }
    return name;
  }
  if (element instanceof PsiMethod) {
    PsiMethod psiMethod=(PsiMethod)element;
    if (useFullName) {
      String s=PsiFormatUtil.formatMethod((PsiMethod)element,PsiSubstitutor.EMPTY,PsiFormatUtil.TYPE_AFTER | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.SHOW_NAME| PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.SHOW_NAME);
      final PsiClass psiClass=psiMethod.getContainingClass();
      if (psiClass != null) {
        final String qName=psiClass.getQualifiedName();
        if (qName != null) {
          s=s + " of " + (psiClass.isInterface() ? "interface " : "class ")+ qName;
        }
      }
      return s;
    }
 else {
      return PsiFormatUtil.formatMethod(psiMethod,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE);
    }
  }
 else   if (element instanceof PsiParameter && ((PsiParameter)element).getDeclarationScope() instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)((PsiParameter)element).getDeclarationScope();
    String s=PsiFormatUtil.formatVariable((PsiVariable)element,PsiFormatUtil.TYPE_AFTER | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.SHOW_NAME,PsiSubstitutor.EMPTY) + " of " + PsiFormatUtil.formatMethod(method,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE);
    final PsiClass psiClass=method.getContainingClass();
    if (psiClass != null && psiClass.getQualifiedName() != null) {
      s+=" of " + (psiClass.isInterface() ? "interface " : "class ") + psiClass.getQualifiedName();
    }
    return s;
  }
 else   if (element instanceof PsiPointcutDef) {
    final PsiPointcutDef psiPointcutDef=(PsiPointcutDef)element;
    String s;
    if (useFullName) {
      s=PsiFormatUtil.formatPointcut(psiPointcutDef,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.SHOW_NAME);
      PsiClass psiAspect=psiPointcutDef.getContainingClass();
      if (psiAspect != null) {
        String qName=psiAspect.getQualifiedName();
        if (qName != null) {
          s=s + " of aspect " + qName;
        }
      }
    }
 else {
      s=PsiFormatUtil.formatPointcut(psiPointcutDef,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE);
    }
    return s;
  }
 else   if (element instanceof PsiField) {
    PsiField psiField=(PsiField)element;
    String s=PsiFormatUtil.formatVariable(psiField,PsiFormatUtil.TYPE_AFTER | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.SHOW_NAME,PsiSubstitutor.EMPTY);
    PsiClass psiClass=psiField.getContainingClass();
    if (psiClass != null) {
      String qName=psiClass.getQualifiedName();
      if (qName != null) {
        s=s + " of " + (psiClass.isInterface() ? "interface " : "class ")+ qName;
      }
    }
    return s;
  }
 else   if (element instanceof PsiVariable) {
    return PsiFormatUtil.formatVariable((PsiVariable)element,PsiFormatUtil.TYPE_AFTER | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.SHOW_NAME,PsiSubstitutor.EMPTY);
  }
 else   if (element instanceof XmlTag) {
    final XmlTag xmlTag=(XmlTag)element;
    return "<" + xmlTag.getName() + "> of file "+ xmlTag.getContainingFile().getName();
  }
 else   if (element instanceof XmlAttributeValue) {
    return ((XmlAttributeValue)element).getValue();
  }
 else   if (element != null) {
    final Language lang=element.getLanguage();
    if (lang != null) {
      FindUsagesProvider provider=lang.getFindUsagesProvider();
      if (provider != null) {
        return provider.getNodeText(element,useFullName);
      }
    }
  }
  return "";
}
