{
  byte[] bom=virtualFile.getBOM();
  if (bom != null && !CharsetToolkit.canHaveBom(charset,bom))   return Magic8.NO_WAY;
  byte[] mandatoryBom=CharsetToolkit.getMandatoryBom(charset);
  if (mandatoryBom != null && !ArrayUtil.startsWith(bytes,mandatoryBom))   return Magic8.NO_WAY;
  String loaded=LoadTextUtil.getTextByBinaryPresentation(bytes,charset).toString();
  String separator=FileDocumentManager.getInstance().getLineSeparator(virtualFile,null);
  String toSave=StringUtil.convertLineSeparators(loaded,separator);
  String failReason=LoadTextUtil.wasCharsetDetectedFromBytes(virtualFile);
  if (failReason != null && CharsetToolkit.UTF8_CHARSET.equals(virtualFile.getCharset()) && !CharsetToolkit.UTF8_CHARSET.equals(charset)) {
    return Magic8.NO_WAY;
  }
  byte[] bytesToSave;
  try {
    bytesToSave=toSave.getBytes(charset);
  }
 catch (  UnsupportedOperationException e) {
    return Magic8.NO_WAY;
  }
  if (bom != null && !ArrayUtil.startsWith(bytesToSave,bom)) {
    bytesToSave=ArrayUtil.mergeArrays(bom,bytesToSave);
  }
  return !Arrays.equals(bytesToSave,bytes) ? Magic8.NO_WAY : loaded.equals(text) ? Magic8.ABSOLUTELY : Magic8.WELL_IF_YOU_INSIST;
}
