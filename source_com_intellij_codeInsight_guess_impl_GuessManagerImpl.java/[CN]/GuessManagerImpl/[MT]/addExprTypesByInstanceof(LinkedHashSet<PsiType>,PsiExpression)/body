{
  PsiElement scope=expr.getParent();
  PsiElement lastScope=scope;
  while (true) {
    if (scope instanceof PsiFile)     break;
    scope=scope.getParent();
    if (scope instanceof PsiCodeBlock || scope instanceof JspFile) {
      lastScope=scope;
    }
  }
  PsiExpression[] expressions=CodeInsightUtil.findExpressionOccurrences(lastScope,expr);
  ArrayList<PsiType> array1=new ArrayList<PsiType>();
  ArrayList<PsiType> array2=new ArrayList<PsiType>();
  int exprOffset=expr.getTextOffset();
  for (  PsiExpression expression : expressions) {
    PsiElement parent=expression.getParent();
    if (parent instanceof PsiInstanceOfExpression) {
      PsiTypeElement typeElement=((PsiInstanceOfExpression)parent).getCheckType();
      if (typeElement != null) {
        if (parent.getTextOffset() < exprOffset) {
          array1.add(typeElement.getType());
        }
 else {
          array2.add(typeElement.getType());
        }
      }
    }
  }
  for (int i=array1.size() - 1; i >= 0; i--) {
    set.add(array1.get(i));
  }
  for (int i=0; i < array2.size(); i++) {
    set.add(array2.get(i));
  }
}
