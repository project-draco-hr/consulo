{
  XmlTag tag=PsiTreeUtil.getParentOfType(element,XmlTag.class,false);
  if (tag == null)   return false;
  PsiElement prev=tag.getPrevSibling();
  while (prev instanceof PsiWhiteSpace)   prev=prev.getPrevSibling();
  while (prev instanceof PsiComment || prev instanceof XmlProlog || prev instanceof XmlText) {
    @NonNls String text=prev.getText();
    if (isSuppressedFor(text))     return true;
    prev=prev.getPrevSibling();
  }
  final XmlFile file=(XmlFile)tag.getContainingFile();
  final XmlDocument document=file.getDocument();
  final XmlTag rootTag=document != null ? document.getRootTag() : null;
  PsiElement leaf=rootTag != null ? rootTag.getPrevSibling() : file.findElementAt(0);
  while (leaf instanceof PsiWhiteSpace)   leaf=leaf.getPrevSibling();
  while (leaf instanceof PsiComment || leaf instanceof XmlProlog || leaf instanceof XmlText) {
    @NonNls String text=leaf.getText();
    if (isSuppressedFor(text))     return true;
    leaf=leaf.getPrevSibling();
  }
  return false;
}
