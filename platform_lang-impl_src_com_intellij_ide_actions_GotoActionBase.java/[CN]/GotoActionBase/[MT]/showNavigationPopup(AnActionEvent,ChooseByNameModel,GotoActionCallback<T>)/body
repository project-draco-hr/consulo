{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  boolean mayRequestOpenInCurrentWindow=model.willOpenEditor() && FileEditorManagerEx.getInstanceEx(project).hasSplitOrUndockedWindows();
  final Class startedAction=myInAction;
  LOG.assertTrue(startedAction != null);
  final ChooseByNamePopup popup=ChooseByNamePopup.createPopup(project,model,getPsiContext(e),getInitialText(e.getData(PlatformDataKeys.EDITOR)),mayRequestOpenInCurrentWindow);
  final ChooseByNameFilter<T> filter=callback.createFilter(popup);
  popup.invoke(new ChooseByNamePopupComponent.Callback(){
    @Override public void onClose(){
      ourLastStrings.put(myInAction,popup.getEnteredText());
      if (startedAction.equals(myInAction)) {
        myInAction=null;
      }
      if (filter != null) {
        filter.close();
      }
    }
    @Override public void elementChosen(    Object element){
      callback.elementChosen(popup,element);
    }
  }
,ModalityState.current(),true);
}
