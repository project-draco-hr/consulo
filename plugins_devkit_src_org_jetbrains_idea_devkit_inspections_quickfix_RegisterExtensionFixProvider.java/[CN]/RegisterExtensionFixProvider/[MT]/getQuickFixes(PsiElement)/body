{
  if (!(element instanceof PsiIdentifier))   return IntentionAction.EMPTY_ARRAY;
  PsiElement parent=element.getParent();
  if (!(parent instanceof PsiClass))   return IntentionAction.EMPTY_ARRAY;
  PsiClass parentClass=(PsiClass)parent;
  if (InheritanceUtil.isInheritor(parentClass,LocalInspectionTool.class.getName())) {
    return new IntentionAction[]{new RegisterInspectionFix(parentClass,LocalInspectionEP.LOCAL_INSPECTION)};
  }
  if (InheritanceUtil.isInheritor(parentClass,GlobalInspectionTool.class.getName())) {
    return new IntentionAction[]{new RegisterInspectionFix(parentClass,InspectionEP.GLOBAL_INSPECTION)};
  }
  List<ExtensionPointCandidate> candidateList=new ArrayList<ExtensionPointCandidate>();
  findExtensionPointCandidatesInHierarchy(parentClass,candidateList,new HashSet<PsiClass>());
  if (!candidateList.isEmpty()) {
    return new IntentionAction[]{new RegisterExtensionFix(parentClass,candidateList)};
  }
  return IntentionAction.EMPTY_ARRAY;
}
