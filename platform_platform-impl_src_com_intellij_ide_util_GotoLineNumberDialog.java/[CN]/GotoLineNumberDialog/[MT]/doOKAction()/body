{
  final LogicalPosition currentPosition=myEditor.getCaretModel().getLogicalPosition();
  int lineNumber=getLineNumber(currentPosition.line + 1);
  if (isInternal() && myOffsetField.getText().length() > 0) {
    try {
      final int offset=Integer.parseInt(myOffsetField.getText());
      if (offset < myEditor.getDocument().getTextLength()) {
        myEditor.getCaretModel().moveToOffset(offset);
        myEditor.getScrollingModel().scrollToCaret(ScrollType.CENTER);
        myEditor.getSelectionModel().removeSelection();
        super.doOKAction();
      }
      return;
    }
 catch (    NumberFormatException e) {
      return;
    }
  }
  if (lineNumber <= 0)   return;
  int columnNumber=getColumnNumber(currentPosition.column);
  myEditor.getCaretModel().moveToLogicalPosition(new LogicalPosition(lineNumber - 1,Math.max(0,columnNumber - 1)));
  myEditor.getScrollingModel().scrollToCaret(ScrollType.CENTER);
  myEditor.getSelectionModel().removeSelection();
  super.doOKAction();
}
