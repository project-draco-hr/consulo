{
  BugLog.getInstance().assertTrue(!relativeLocalDirectoryPath.startsWith("/"),"relativeLocalDirectory '" + relativeLocalDirectoryPath + "' must not start with /");
  BugLog.getInstance().assertTrue(relativeLocalDirectoryPath.endsWith("/"),"relativeLocalDirectory '" + relativeLocalDirectoryPath + "' must end with /");
  BugLog.getInstance().assertTrue(!repositoryFilePath.endsWith("/"),"repositoryFilePath '" + repositoryFilePath + "' must not end with /");
  BugLog.getInstance().assertTrue(repositoryFilePath.indexOf('/') >= 0,"repositoryFileName '" + repositoryFilePath + "' must contain a /");
  if (relativeLocalDirectoryPath.equals("./")) {
    relativeLocalDirectoryPath="";
  }
  final String fileName=getFileNameFromRepositoryPath(repositoryFilePath);
  return FileObject.createInstance('/' + relativeLocalDirectoryPath + fileName);
}
