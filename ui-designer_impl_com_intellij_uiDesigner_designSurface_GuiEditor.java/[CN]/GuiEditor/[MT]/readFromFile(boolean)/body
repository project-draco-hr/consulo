{
  try {
    ComponentPtr[] selection=null;
    if (keepSelection) {
      selection=SelectionState.getSelection(this);
    }
    final String text=myDocument.getText();
    final ClassLoader classLoader=LoaderFactory.getInstance(myModule.getProject()).getLoader(myFile);
    final LwRootContainer rootContainer=Utils.getRootContainer(text,new CompiledClassPropertiesProvider(classLoader));
    final RadRootContainer container=XmlReader.createRoot(myModule,rootContainer,classLoader);
    setRootContainer(container);
    if (keepSelection) {
      SelectionState.restoreSelection(this,selection);
    }
    myCardLayout.show(this,CARD_VALID);
    refresh();
  }
 catch (  final Exception exc) {
    LOG.info(exc);
    setRootContainer(new RadRootContainer(myModule,JPanel.class,"0"));
    myFormInvalidLabel.setText(UIDesignerBundle.message("error.form.file.is.invalid.message",exc.getMessage()));
    myCardLayout.show(this,CARD_INVALID);
    repaint();
  }
}
