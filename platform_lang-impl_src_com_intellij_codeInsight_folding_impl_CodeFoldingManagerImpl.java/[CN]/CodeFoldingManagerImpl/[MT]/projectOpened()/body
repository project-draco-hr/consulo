{
  final EditorMouseMotionAdapter myMouseMotionListener=new EditorMouseMotionAdapter(){
    LightweightHint myCurrentHint=null;
    FoldRegion myCurrentFold=null;
    public void mouseMoved(    EditorMouseEvent e){
      if (myProject.isDisposed())       return;
      if (e.getArea() != EditorMouseEventArea.FOLDING_OUTLINE_AREA)       return;
      LightweightHint hint=null;
      try {
        Editor editor=e.getEditor();
        if (PsiDocumentManager.getInstance(myProject).isUncommited(editor.getDocument()))         return;
        MouseEvent mouseEvent=e.getMouseEvent();
        FoldRegion fold=((EditorEx)editor).getGutterComponentEx().findFoldingAnchorAt(mouseEvent.getX(),mouseEvent.getY());
        if (fold == null)         return;
        if (fold == myCurrentFold && myCurrentHint != null) {
          hint=myCurrentHint;
          return;
        }
        TextRange psiElementRange=EditorFoldingInfo.get(editor).getPsiElementRange(fold);
        if (psiElementRange == null)         return;
        int textOffset=psiElementRange.getStartOffset();
        Point foldStartXY=editor.visualPositionToXY(editor.offsetToVisualPosition(Math.max(textOffset,fold.getStartOffset())));
        Rectangle visibleArea=editor.getScrollingModel().getVisibleArea();
        if (visibleArea.y > foldStartXY.y) {
          if (myCurrentHint != null) {
            myCurrentHint.hide();
            myCurrentHint=null;
          }
          int visualLine=Math.max(0,editor.xyToVisualPosition(new Point(0,visibleArea.y)).line - 1);
          int endOffset=editor.logicalPositionToOffset(editor.visualToLogicalPosition(new VisualPosition(visualLine,0)));
          TextRange textRange=new TextRange(textOffset,endOffset);
          hint=EditorFragmentComponent.showEditorFragmentHint(editor,textRange,true,true);
          myCurrentFold=fold;
          myCurrentHint=hint;
        }
      }
  finally {
        if (hint == null) {
          if (myCurrentHint != null) {
            myCurrentHint.hide();
            myCurrentHint=null;
          }
          myCurrentFold=null;
        }
      }
    }
  }
;
  StartupManager.getInstance(myProject).registerPostStartupActivity(new DumbAwareRunnable(){
    public void run(){
      EditorFactory.getInstance().getEventMulticaster().addEditorMouseMotionListener(myMouseMotionListener,myProject);
    }
  }
);
}
