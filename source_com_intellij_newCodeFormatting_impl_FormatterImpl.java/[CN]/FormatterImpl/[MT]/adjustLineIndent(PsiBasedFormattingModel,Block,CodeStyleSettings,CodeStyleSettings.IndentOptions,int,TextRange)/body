{
  final FormatProcessor processor=new FormatProcessor(model,block,settings,indentOptions,affectedRange);
  WhiteSpace whiteSpace=processor.getWhiteSpaceBefore(offset);
  processor.setAllWhiteSpacesAreReadOnly();
  if (whiteSpace == null) {
    return offset;
  }
  whiteSpace.setReadOnly(false);
  whiteSpace.setLineFeedsAreReadOnly(true);
  final IndentInfo indent;
  final int lineFeeds=getLineFeedsToModified(model,offset,whiteSpace.getTextRange().getStartOffset());
  if (model.getLineNumber(offset) == model.getLineNumber(whiteSpace.getTextRange().getEndOffset())) {
    processor.formatWithoutRealModifications();
    indent=new IndentInfo(0,whiteSpace.getIndentOffset(),whiteSpace.getSpaces());
  }
 else {
    indent=processor.getIndentAt(offset);
  }
  Pair<String,Integer> newWS=whiteSpace.generateWhiteSpace(indentOptions,offset,indent);
  model.replaceWhiteSpace(whiteSpace.getTextRange(),newWS.getFirst());
  return newWS.getSecond().intValue();
}
