{
  final FormattingDocumentModel docModel=model.getDocumentModel();
  final Block block=model.getRootBlock();
  final FormatProcessor processor=new FormatProcessor(docModel,block,settings,indentOptions,affectedRange);
  final WhiteSpace whiteSpace=processor.getWhiteSpaceBefore(offset);
  processor.setAllWhiteSpacesAreReadOnly();
  if (whiteSpace == null) {
    return offset;
  }
  whiteSpace.setLineFeedsAreReadOnly(true);
  final IndentInfo indent;
  if (docModel.getLineNumber(offset) == docModel.getLineNumber(whiteSpace.getTextRange().getEndOffset())) {
    whiteSpace.setReadOnly(false);
    processor.formatWithoutRealModifications();
    indent=new IndentInfo(0,whiteSpace.getIndentOffset(),whiteSpace.getSpaces());
  }
 else {
    indent=processor.getIndentAt(offset);
  }
  final Pair<String,Integer> newWS=whiteSpace.generateWhiteSpace(indentOptions,offset,indent);
  model.replaceWhiteSpace(whiteSpace.getTextRange(),newWS.getFirst(),block.getTextRange().getLength());
  return CharArrayUtil.shiftForward(model.getDocumentModel().getText().toCharArray(),offset," \t");
}
