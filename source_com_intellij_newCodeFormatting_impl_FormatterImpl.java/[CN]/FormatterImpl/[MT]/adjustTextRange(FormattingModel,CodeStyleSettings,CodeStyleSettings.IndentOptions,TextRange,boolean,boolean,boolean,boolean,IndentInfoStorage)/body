{
  Block block=model.getRootBlock();
  final FormatProcessor processor=new FormatProcessor(model.getDocumentModel(),block,settings,indentOptions,affectedRange);
  LeafBlockWrapper current=processor.getFirstTokenBlock();
  while (current != null) {
    WhiteSpace whiteSpace=current.getWhiteSpace();
    if (!whiteSpace.isReadOnly()) {
      if (whiteSpace.getTextRange().getStartOffset() > affectedRange.getStartOffset()) {
        if (whiteSpace.containsLineFeeds()) {
          whiteSpace.setLineFeedsAreReadOnly(true);
          current.setIndentFromParent(indentInfoStorage.getIndentInfo(current.getStartOffset()));
        }
 else {
          whiteSpace.setReadOnly(true);
        }
      }
 else {
        if (!changeWSBeforeFirstElement) {
          whiteSpace.setReadOnly(true);
        }
 else {
          if (!changeLineFeedsBeforeFirstElement) {
            whiteSpace.setLineFeedsAreReadOnly(true);
          }
          final SpacePropertyImpl spaceProperty=current.getSpaceProperty();
          if (spaceProperty != null) {
            if (!keepLineBreaks) {
              spaceProperty.setKeepLineBreaks(false);
            }
            if (!keepBlankLines) {
              spaceProperty.setKeepLineBreaks(0);
            }
          }
        }
      }
    }
    current=current.getNextBlock();
  }
  processor.format(model);
}
