{
  String text=null;
  Object o=item.getObject();
  if (showSignature(item)) {
    if (o instanceof PsiElement) {
      final PsiElement element=(PsiElement)o;
      if (element.isValid() && element instanceof PsiMethod) {
        PsiMethod method=(PsiMethod)element;
        final PsiSubstitutor substitutor=(PsiSubstitutor)item.getAttribute(LookupItem.SUBSTITUTOR);
        text=PsiFormatUtil.formatMethod(method,substitutor != null ? substitutor : PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE);
      }
    }
  }
  if (o instanceof Property) {
    Property property=(Property)o;
    PropertiesFile propertiesFile=property.getContainingFile();
    PropertiesFile defaultPropertiesFile=propertiesFile.getResourceBundle().getDefaultPropertiesFile(propertiesFile.getProject());
    Property defaultProperty=defaultPropertiesFile.findPropertyByKey(property.getKey());
    String value=defaultProperty == null ? property.getValue() : defaultProperty.getValue();
    if (trim && value != null && value.length() > 10)     value=value.substring(0,10) + "...";
    text="=" + value;
  }
  String tailText=(String)item.getAttribute(LookupItem.TAIL_TEXT_ATTR);
  if (tailText != null) {
    if (text == null) {
      text=tailText;
    }
 else {
      text+=tailText;
    }
  }
  if (item.getAttribute(LookupItem.INDICATE_ANONYMOUS) != null) {
    if (o instanceof PsiClass) {
      final PsiClass psiClass=(PsiClass)o;
      if (psiClass.isInterface() || psiClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
        text+="{...}";
      }
    }
  }
  return text;
}
