{
  if (!(element instanceof PsiParameter))   return false;
  PsiParameter parameter=(PsiParameter)element;
  PsiElement scope=parameter.getDeclarationScope();
  if (!(scope instanceof PsiMethod))   return false;
  PsiMethod method=(PsiMethod)scope;
  int paramIndex=ArrayUtil.find(method.getParameterList().getParameters(),parameter);
  for (  PsiReference reference : array) {
    if (!(reference instanceof PsiElement))     return false;
    PsiElement argument=(PsiElement)reference;
    PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)new PsiMatcherImpl(argument).dot(PsiMatcherImpl.hasClass(PsiReferenceExpression.class)).parent(PsiMatcherImpl.hasClass(PsiExpressionList.class)).parent(PsiMatcherImpl.hasClass(PsiMethodCallExpression.class)).getElement();
    if (methodCallExpression == null)     return false;
    PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
    if (methodExpression == null || method != methodExpression.resolve())     return false;
    PsiExpressionList argumentList=methodCallExpression.getArgumentList();
    if (argumentList == null)     return false;
    PsiExpression[] arguments=argumentList.getExpressions();
    int argumentIndex=ArrayUtil.find(arguments,argument);
    if (paramIndex != argumentIndex)     return false;
  }
  return true;
}
