{
  if (refEntity instanceof RefElement) {
    final RefElement refElement=(RefElement)refEntity;
    if (refElement instanceof RefParameter)     return null;
    if (!refElement.isReferenced())     return null;
    if (refElement.isSyntheticJSP())     return null;
    if (refElement.isFinal())     return null;
    if (!((RefElementImpl)refElement).checkFlag(CanBeFinalAnnotator.CAN_BE_FINAL_MASK))     return null;
    PsiIdentifier psiIdentifier=null;
    if (refElement instanceof RefClass) {
      RefClass refClass=(RefClass)refElement;
      if (refClass.isInterface() || refClass.isAnonymous() || refClass.isAbstract())       return null;
      if (!isReportClasses())       return null;
      psiIdentifier=refClass.getElement().getNameIdentifier();
    }
 else     if (refElement instanceof RefMethod) {
      RefMethod refMethod=(RefMethod)refElement;
      if (refMethod.getOwnerClass().isFinal())       return null;
      if (!isReportMethods())       return null;
      psiIdentifier=((PsiMethod)refMethod.getElement()).getNameIdentifier();
    }
 else     if (refElement instanceof RefField) {
      if (!isReportFields())       return null;
      psiIdentifier=((RefField)refElement).getElement().getNameIdentifier();
    }
    if (psiIdentifier != null) {
      return new ProblemDescriptor[]{manager.createProblemDescriptor(psiIdentifier,InspectionsBundle.message("inspection.export.results.can.be.final.description"),new AcceptSuggested(globalContext.getRefManager()),ProblemHighlightType.GENERIC_ERROR_OR_WARNING)};
    }
  }
  return null;
}
