{
  doTest(new PerformAction(){
    @Override public void performAction(    final VirtualFile rootDir,    final VirtualFile rootAfter) throws Exception {
      final PsiClass aClass=myJavaFacade.findClass("Test",GlobalSearchScope.projectScope(getProject()));
      assertNotNull("Class Test not found",aClass);
      final LinkedHashMap<String,ParameterData> map=new LinkedHashMap<String,ParameterData>();
      final PsiMethod[] constructors=aClass.getConstructors();
      for (      PsiMethod constructor : constructors) {
        ParameterData.createFromConstructor(constructor,map);
      }
      if (expectedDefaults != null) {
        for (        Map.Entry<String,String> entry : expectedDefaults.entrySet()) {
          final ParameterData parameterData=map.get(entry.getKey());
          assertNotNull(parameterData);
          assertEquals(entry.getValue(),parameterData.getDefaultValue());
        }
      }
      try {
        new ReplaceConstructorWithBuilderProcessor(getProject(),constructors,map,"Builder",packageName,createNewBuilderClass).run();
        if (conflicts != null) {
          fail("Conflicts were not detected:" + conflicts);
        }
      }
 catch (      BaseRefactoringProcessor.ConflictsInTestsException e) {
        if (conflicts == null) {
          fail("Conflict detected:" + e.getMessage());
        }
      }
      LocalFileSystem.getInstance().refresh(false);
      FileDocumentManager.getInstance().saveAllDocuments();
    }
  }
);
}
