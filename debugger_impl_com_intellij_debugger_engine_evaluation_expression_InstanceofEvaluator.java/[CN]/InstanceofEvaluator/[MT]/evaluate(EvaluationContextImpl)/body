{
  Value value=(Value)myOperandEvaluator.evaluate(context);
  if (value == null) {
    return DebuggerUtilsEx.createValue(context.getDebugProcess().getVirtualMachineProxy(),PsiType.BOOLEAN.getPresentableText(),false);
  }
  if (!(value instanceof ObjectReference)) {
    throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.object.reference.expected"));
  }
  try {
    ReferenceType refType=(ReferenceType)myTypeEvaluator.evaluate(context);
    ClassObjectReference classObject=refType.classObject();
    ClassType classRefType=(ClassType)classObject.referenceType();
    Method method=classRefType.concreteMethodByName("isAssignableFrom","(Ljava/lang/Class;)Z");
    List args=new LinkedList();
    args.add(((ObjectReference)value).referenceType().classObject());
    return context.getDebugProcess().invokeMethod(context,classObject,method,args);
  }
 catch (  Exception e) {
    if (LOG.isDebugEnabled()) {
      LOG.debug(e);
    }
    throw EvaluateExceptionUtil.createEvaluateException(e);
  }
}
