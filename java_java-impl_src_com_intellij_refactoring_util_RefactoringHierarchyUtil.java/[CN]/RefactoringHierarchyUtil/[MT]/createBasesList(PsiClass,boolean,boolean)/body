{
  LinkedHashSet<PsiClass> bases=new LinkedHashSet<PsiClass>();
  InheritanceUtil.getSuperClasses(subClass,bases,includeNonProject);
  if (!subClass.isInterface()) {
    final PsiManager manager=subClass.getManager();
    PsiClass javaLangObject=JavaPsiFacade.getInstance(manager.getProject()).findClass("java.lang.Object",subClass.getResolveScope());
    if (includeNonProject && javaLangObject != null && !manager.areElementsEquivalent(javaLangObject,subClass)) {
      bases.add(javaLangObject);
    }
  }
  ArrayList<PsiClass> basesList=new ArrayList<PsiClass>(bases);
  if (sortAlphabetically) {
    Collections.sort(basesList,new Comparator<PsiClass>(){
      public int compare(      PsiClass c1,      PsiClass c2){
        return c1.getQualifiedName().compareTo(c2.getQualifiedName());
      }
    }
);
  }
  return basesList;
}
