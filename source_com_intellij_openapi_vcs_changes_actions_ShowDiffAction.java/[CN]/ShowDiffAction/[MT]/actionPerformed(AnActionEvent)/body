{
  Project project=e.getData(DataKeys.PROJECT);
  Change[] changes=e.getData(DataKeys.CHANGES);
  if (project == null || changes == null)   return;
  changes=checkLoadFakeRevisions(project,changes);
  if (changes == null || changes.length == 0) {
    return;
  }
  int index=0;
  if (changes.length == 1) {
    final Change selectedChange=changes[0];
    if (checkNotifyBinaryDiff(selectedChange)) {
      return;
    }
    ChangeList changeList=ChangeListManager.getInstance(project).getChangeList(selectedChange);
    if (changeList != null) {
      final ArrayList<Change> changesInList=new ArrayList<Change>(changeList.getChanges());
      Collections.sort(changesInList,new Comparator<Change>(){
        public int compare(        final Change o1,        final Change o2){
          return ChangesUtil.getFilePath((Change)o1).getName().compareToIgnoreCase(ChangesUtil.getFilePath((Change)o2).getName());
        }
      }
);
      changes=changesInList.toArray(new Change[changesInList.size()]);
      for (int i=0; i < changes.length; i++) {
        if (changes[i] == selectedChange) {
          index=i;
          break;
        }
      }
    }
  }
  showDiffForChange(changes,index,project);
}
