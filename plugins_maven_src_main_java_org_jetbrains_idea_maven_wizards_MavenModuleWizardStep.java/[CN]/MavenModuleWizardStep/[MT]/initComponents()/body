{
  mySelectAggregator.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myAggregator=selectProject(myAggregator);
      updateComponents();
    }
  }
);
  mySelectParent.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myParent=selectProject(myParent);
      updateComponents();
    }
  }
);
  ActionListener updatingListener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateComponents();
    }
  }
;
  myInheritGroupIdCheckBox.addActionListener(updatingListener);
  myInheritVersionCheckBox.addActionListener(updatingListener);
  myUseArchetypeCheckBox.addActionListener(updatingListener);
  myArchetypesList.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myArchetypesList.setCellRenderer(new MyCellRenderer());
  new ListSpeedSearch(myArchetypesList,new Function<Object,String>(){
    public String fun(    Object o){
      ArchetypeInfo a=(ArchetypeInfo)o;
      return a.groupId + ":" + a.artifactId+ ":"+ a.version;
    }
  }
).setComparator(new SpeedSearchBase.SpeedSearchComparator(false){
    @Override public void translateCharacter(    StringBuilder buf,    char ch){
      if (ch == '*') {
        buf.append("(.)*");
      }
 else {
        super.translateCharacter(buf,ch);
      }
    }
  }
);
}
