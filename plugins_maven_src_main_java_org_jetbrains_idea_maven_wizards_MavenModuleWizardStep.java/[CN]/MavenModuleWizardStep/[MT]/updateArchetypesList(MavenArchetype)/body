{
  ApplicationManager.getApplication().assertIsDispatchThread();
  myLoadingIcon.setBackground(myArchetypesTree.getBackground());
  ((CardLayout)myArchetypesPanel.getLayout()).show(myArchetypesPanel,"loading");
  final Object currentUpdaterMarker=new Object();
  myCurrentUpdaterMarker=currentUpdaterMarker;
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    public void run(){
      final Set<MavenArchetype> archetypes=MavenIndicesManager.getInstance().getArchetypes();
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          if (currentUpdaterMarker != myCurrentUpdaterMarker)           return;
          ((CardLayout)myArchetypesPanel.getLayout()).show(myArchetypesPanel,"archetypes");
          TreeNode root=groupAndSortArchetypes(archetypes);
          TreeModel model=new DefaultTreeModel(root);
          myArchetypesTree.setModel(model);
          if (selected != null) {
            TreePath path=findNodePath(selected,model,model.getRoot());
            if (path != null) {
              myArchetypesTree.expandPath(path.getParentPath());
              TreeUtil.selectPath(myArchetypesTree,path,true);
            }
          }
          updateArchetypeDescription();
        }
      }
);
    }
  }
);
}
