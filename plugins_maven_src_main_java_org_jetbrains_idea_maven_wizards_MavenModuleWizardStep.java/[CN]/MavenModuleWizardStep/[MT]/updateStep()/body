{
  if (isMavenizedProject()) {
    MavenProjectModel parent=myBuilder.findPotentialParentProject(myProjectOrNull);
    myAggregator=parent;
    myParent=parent;
  }
  myArtifactIdField.setText(myBuilder.getName());
  myGroupIdField.setText(myParent == null ? myBuilder.getName() : myParent.getMavenId().groupId);
  myVersionField.setText(myParent == null ? "1.0" : myParent.getMavenId().version);
  ArchetypeInfo selectedArch=getSelectedArchetype();
  if (selectedArch == null) {
    selectedArch=myBuilder.getArchetype();
  }
  if (selectedArch != null)   myUseArchetypeCheckBox.setSelected(true);
  TreeNode root=groupAndSortArchetypes(MavenIndicesManager.getInstance().getArchetypes());
  TreeModel model=new DefaultTreeModel(root);
  myArchetypesTree.setModel(model);
  if (selectedArch != null) {
    TreePath path=findNodePath(selectedArch,model,model.getRoot());
    if (path != null) {
      myArchetypesTree.expandPath(path.getParentPath());
      TreeUtil.selectPath(myArchetypesTree,path,true);
    }
  }
  updateComponents();
}
