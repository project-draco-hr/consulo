{
  if (myProjectOrNull != null) {
    VirtualFile parentPom=myBuilder.findContentEntry().getParent().findChild("pom.xml");
    MavenProjectModel parent=null;
    if (parentPom != null) {
      parent=MavenProjectsManager.getInstance(myProjectOrNull).findProject(parentPom);
    }
    myAggregator=parent;
    myParent=parent;
  }
  myArtifactIdField.setText(myBuilder.getName());
  myGroupIdField.setText(myParent == null ? myBuilder.getName() : myParent.getMavenId().groupId);
  myVersionField.setText(myParent == null ? "1.0" : myParent.getMavenId().version);
  DefaultListModel model=new DefaultListModel();
  List<Archetype> archetypes=new ArrayList<Archetype>(MavenIndicesManager.getInstance().getArchetypes());
  Collections.sort(archetypes,new Comparator<Archetype>(){
    public int compare(    Archetype o1,    Archetype o2){
      String key1=o1.getGroupId() + ":" + o1.getArtifactId();
      String key2=o2.getGroupId() + ":" + o2.getArtifactId();
      int result=key1.compareToIgnoreCase(key2);
      if (result != 0)       return result;
      return o2.getVersion().compareToIgnoreCase(o1.getVersion());
    }
  }
);
  for (  Archetype each : archetypes) {
    model.addElement(each);
  }
  myArchetypesList.setModel(model);
  updateComponents();
}
