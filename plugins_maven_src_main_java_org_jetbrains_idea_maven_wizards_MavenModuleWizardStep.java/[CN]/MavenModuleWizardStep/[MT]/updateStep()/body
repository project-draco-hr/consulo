{
  if (skipUpdateUI)   return;
  if (isMavenizedProject()) {
    MavenProject parent=myBuilder.findPotentialParentProject(myProjectOrNull);
    myAggregator=parent;
    myParent=parent;
  }
  MavenId projectId=myBuilder.getProjectId();
  if (projectId == null) {
    myArtifactIdField.setText(myBuilder.getName());
    myGroupIdField.setText(myParent == null ? myBuilder.getName() : myParent.getMavenId().getGroupId());
    myVersionField.setText(myParent == null ? "1.0-SNAPSHOT" : myParent.getMavenId().getVersion());
  }
 else {
    myArtifactIdField.setText(projectId.getArtifactId());
    myGroupIdField.setText(projectId.getGroupId());
    myVersionField.setText(projectId.getVersion());
  }
  myInheritGroupIdCheckBox.setSelected(myBuilder.isInheritGroupId());
  myInheritVersionCheckBox.setSelected(myBuilder.isInheritVersion());
  MavenArchetype selectedArch=getSelectedArchetype();
  if (selectedArch == null) {
    selectedArch=myBuilder.getArchetype();
  }
  if (selectedArch != null)   myUseArchetypeCheckBox.setSelected(true);
  if (myArchetypesTree.getRowCount() == 0)   updateArchetypesList(selectedArch);
  updateComponents();
}
