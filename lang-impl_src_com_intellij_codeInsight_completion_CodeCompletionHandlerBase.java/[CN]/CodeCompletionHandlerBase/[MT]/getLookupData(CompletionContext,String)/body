{
  final PsiFile file=_context.file;
  final Pair<CompletionContext,PsiElement> insertedInfo=ApplicationManager.getApplication().runWriteAction(new Computable<Pair<CompletionContext,PsiElement>>(){
    public Pair<CompletionContext,PsiElement> compute(){
      return insertDummyIdentifier(_context,dummyIdentifier);
    }
  }
);
  PsiElement insertedElement=insertedInfo.getSecond();
  final CompletionContext context=insertedInfo.getFirst();
  insertedElement.putUserData(CompletionContext.COMPLETION_CONTEXT_KEY,context);
  final CompletionParametersImpl parameters=new CompletionParametersImpl(insertedElement,context.file,myCompletionType);
  final Collection<LookupElement> lookupSet=new LinkedHashSet<LookupElement>();
  CompletionService.getCompletionService().performAsyncCompletion(myCompletionType,parameters,new AsyncConsumer<LookupElement>(){
    public void consume(    final LookupElement lookupElement){
      lookupSet.add(lookupElement);
    }
  }
);
  insertedElement.putUserData(CompletionContext.COMPLETION_CONTEXT_KEY,null);
  final LookupItem[] items=lookupSet.toArray(new LookupItem[lookupSet.size()]);
  final LookupData data=createLookupData(context,items,insertedElement);
  data.itemPreferencePolicy=new CompletionPreferencePolicy(context.getPrefix(),parameters);
  return data;
}
