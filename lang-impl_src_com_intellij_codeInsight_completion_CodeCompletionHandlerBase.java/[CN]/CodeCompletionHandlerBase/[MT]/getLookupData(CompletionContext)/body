{
  final PsiFile file=_context.file;
  final PsiManager manager=file.getManager();
  final Pair<CompletionContext,PsiElement> insertedInfo=ApplicationManager.getApplication().runWriteAction(new Computable<Pair<CompletionContext,PsiElement>>(){
    public Pair<CompletionContext,PsiElement> compute(){
      return insertDummyIdentifier(_context);
    }
  }
);
  PsiElement insertedElement=insertedInfo.getSecond();
  final CompletionContext context=insertedInfo.getFirst();
  insertedElement.putUserData(CompletionContext.COMPLETION_CONTEXT_KEY,context);
  final CompletionParameters parameters=new CompletionParameters(insertedElement,context.file);
  final Set<LookupItem> lookupSet=new LinkedHashSet<LookupItem>((Collection)CompletionService.getCompletionService().getQueryFactory(myCompletionType,parameters).createQuery(parameters).findAll());
  insertedElement.putUserData(CompletionContext.COMPLETION_CONTEXT_KEY,null);
  final LookupItem[] items=lookupSet.toArray(new LookupItem[lookupSet.size()]);
  final LookupData data=new LookupData(items,context.getPrefix());
  data.itemPreferencePolicy=new CompletionPreferencePolicy(manager,items,null,context.getPrefix(),insertedElement);
  return data;
}
