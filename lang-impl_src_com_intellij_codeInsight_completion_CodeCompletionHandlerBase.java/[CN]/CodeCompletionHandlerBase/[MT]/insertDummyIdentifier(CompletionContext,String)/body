{
  PsiFile oldFileCopy=createFileCopy(context.file);
  PsiFile hostFile=InjectedLanguageUtil.getTopLevelFile(oldFileCopy);
  Project project=hostFile.getProject();
  InjectedLanguageManager injectedLanguageManager=InjectedLanguageManager.getInstance(project);
  int hostStartOffset=injectedLanguageManager == null ? context.getStartOffset() : injectedLanguageManager.injectedToHost(oldFileCopy,TextRange.from(context.getStartOffset(),0)).getStartOffset();
  Document document=oldFileCopy.getViewProvider().getDocument();
  document.replaceString(context.getStartOffset(),context.getSelectionEndOffset(),dummyIdentifier);
  PsiDocumentManager.getInstance(project).commitDocument(document);
  PsiFile fileCopy=InjectedLanguageUtil.findInjectedPsiAt(hostFile,hostStartOffset);
  if (fileCopy == null) {
    PsiElement elementAfterCommit=findElementAt(hostFile,hostStartOffset);
    fileCopy=elementAfterCommit == null ? oldFileCopy : elementAfterCommit.getContainingFile();
  }
  if (oldFileCopy != fileCopy) {
    Editor oldEditor=context.editor;
    Editor editor=EditorFactory.getInstance().createEditor(document,project);
    Editor newEditor=InjectedLanguageUtil.getEditorForInjectedLanguage(editor,hostFile,context.getStartOffset());
    if (newEditor instanceof EditorWindow) {
      EditorWindow injectedEditor=(EditorWindow)newEditor;
      PsiFile injectedFile=injectedEditor.getInjectedFile();
      final OffsetMap map=new OffsetMap(newEditor.getDocument());
      final OffsetMap oldMap=context.getOffsetMap();
      for (      final OffsetKey key : oldMap.keySet()) {
        map.addOffset(key,injectedEditor.logicalPositionToOffset(injectedEditor.hostToInjected(oldEditor.offsetToLogicalPosition(oldMap.getOffset(key)))));
      }
      CompletionContext newContext=new CompletionContext(context.project,injectedEditor,injectedFile,map);
      PsiElement element=findElementAt(injectedFile,newContext.getStartOffset());
      if (element == null) {
        LOG.assertTrue(false,"offset " + newContext.getStartOffset() + " at:\n"+ injectedFile.getText());
      }
      EditorFactory.getInstance().releaseEditor(editor);
      return Pair.create(newContext,element);
    }
    EditorFactory.getInstance().releaseEditor(editor);
  }
  PsiElement element=findElementAt(fileCopy,context.getStartOffset());
  if (element == null) {
    LOG.assertTrue(false,"offset " + context.getStartOffset() + " at:\n"+ fileCopy.getText());
  }
  return Pair.create(context,element);
}
