{
  final Editor editor=context.editor;
  final PsiFile file=context.file;
  final InsertionContext context1=new InsertionContext(context.getOffsetMap(),completionChar,signatuireSelected,items,file,editor);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      final int idEndOffset=context.getOffsetMap().getOffset(CompletionInitializationContext.IDENTIFIER_END_OFFSET);
      if (idEndOffset != context.getSelectionEndOffset() && CompletionUtil.isOverwrite(item,completionChar)) {
        editor.getDocument().deleteString(context.getSelectionEndOffset(),idEndOffset);
      }
      PsiDocumentManager.getInstance(context.project).commitAllDocuments();
      item.handleInsert(context1);
      PostprocessReformattingAspect.getInstance(context.project).doPostponedFormatting();
      if (context1.shouldAddCompletionChar() && completionChar != Lookup.AUTO_INSERT_SELECT_CHAR && completionChar != Lookup.REPLACE_SELECT_CHAR && completionChar != Lookup.NORMAL_SELECT_CHAR && completionChar != Lookup.COMPLETE_STATEMENT_SELECT_CHAR) {
        TailType.insertChar(editor,context1.getTailOffset(),completionChar);
      }
      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    }
  }
);
  final Runnable runnable=context1.getLaterRunnable();
  if (runnable != null) {
    final Runnable runnable1=new Runnable(){
      public void run(){
        final Project project=context1.getProject();
        if (project.isDisposed())         return;
        runnable.run();
      }
    }
;
    if (!ApplicationManager.getApplication().isUnitTestMode()) {
      ApplicationManager.getApplication().invokeLater(runnable1);
    }
 else {
      runnable1.run();
    }
  }
}
