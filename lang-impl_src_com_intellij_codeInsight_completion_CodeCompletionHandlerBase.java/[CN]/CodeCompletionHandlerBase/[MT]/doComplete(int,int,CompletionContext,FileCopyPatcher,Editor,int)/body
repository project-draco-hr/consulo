{
  if (!ApplicationManager.getApplication().isUnitTestMode() && context.editor.getComponent().getRootPane() == null) {
    LOG.assertTrue(false,"null root pane");
  }
  final Pair<CompletionContext,PsiElement> insertedInfo=new WriteCommandAction<Pair<CompletionContext,PsiElement>>(context.project){
    protected void run(    Result<Pair<CompletionContext,PsiElement>> result) throws Throwable {
      result.setResult(insertDummyIdentifier(context,patcher));
    }
  }
.execute().getResultObject();
  final PsiElement insertedElement=insertedInfo.getSecond();
  insertedElement.putUserData(CompletionContext.COMPLETION_CONTEXT_KEY,insertedInfo.getFirst());
  final CompletionParameters parameters=new CompletionParameters(insertedInfo.getSecond(),insertedInfo.getFirst().file,myCompletionType,insertedInfo.getFirst().getStartOffset(),invocationCount);
  final String adText=getAdvertisementText(parameters);
  final Semaphore freezeSemaphore=new Semaphore();
  freezeSemaphore.down();
  final CompletionProgressIndicator indicator=new CompletionProgressIndicator(editor,parameters,adText,this,insertedInfo.getFirst(),context,freezeSemaphore);
  final Ref<LookupElement[]> data=Ref.create(null);
  final Runnable computeRunnable=new Runnable(){
    public void run(){
      ProgressManager.getInstance().runProcess(new Runnable(){
        public void run(){
          try {
            final Collection<LookupElement> lookupSet=new LinkedHashSet<LookupElement>();
            CompletionService.getCompletionService().getVariantsFromContributors(CompletionContributor.EP_NAME,parameters,null,new Consumer<LookupElement>(){
              public void consume(              final LookupElement lookupElement){
                ApplicationManager.getApplication().runReadAction(new Runnable(){
                  public void run(){
                    if (lookupSet.add(lookupElement)) {
                      indicator.addItem(lookupElement);
                    }
                  }
                }
);
              }
            }
);
            indicator.getLookup().setCalculating(false);
            final LookupElement[] items=lookupSet.toArray(new LookupElement[lookupSet.size()]);
            data.set(items);
            freezeSemaphore.up();
            if (items.length == 0) {
              ApplicationManager.getApplication().invokeLater(new Runnable(){
                public void run(){
                  if (indicator != CompletionProgressIndicator.getCurrentCompletion())                   return;
                  indicator.closeAndFinish();
                  HintManager.getInstance().hideAllHints();
                  handleEmptyLookup(context,parameters,indicator);
                }
              }
);
              return;
            }
          }
 catch (          ProcessCanceledException e) {
          }
        }
      }
,indicator);
    }
  }
;
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    computeRunnable.run();
    if (data.get().length == 0) {
      indicator.closeAndFinish();
    }
  }
 else {
    ApplicationManager.getApplication().executeOnPooledThread(computeRunnable);
    if (!freezeSemaphore.waitFor(2000) || data.isNull()) {
      indicator.showLookup();
      return;
    }
  }
  completionFinished(offset1,offset2,context,indicator,data.get());
}
