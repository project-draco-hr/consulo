{
  final ArrayList<Validator> args=new ArrayList<Validator>();
  final Matcher m=fsPattern.matcher(line);
  int implicit=0;
  int pos=0;
  for (int i=0; m.find(i); i=m.end()) {
    final String posSpec=m.group(1);
    final String flags=m.group(2);
    final String dateSpec=m.group(5);
    final String spec=m.group(6);
    if ("n".equals(spec) || "%".equals(spec)) {
      continue;
    }
    if (posSpec != null) {
      final String num=posSpec.substring(0,posSpec.length() - 1);
      pos=Integer.parseInt(num) - 1;
    }
 else     if (flags == null || flags.indexOf('<') < 0) {
      pos=implicit++;
    }
    final Validator allowed;
    if (dateSpec != null) {
      allowed=DATE_VALIDATOR;
    }
 else {
switch (Character.toLowerCase(spec.charAt(0))) {
case 'b':
case 'h':
case 's':
        allowed=ALL_VALIDATOR;
      break;
case 'c':
    allowed=CHAR_VALIDATOR;
  break;
case 'd':
case 'o':
case 'x':
allowed=INT_VALIDATOR;
break;
case 'e':
case 'f':
case 'g':
case 'a':
allowed=FLOAT_VALIDATOR;
break;
default :
throw new UnknownFormatException(m.group());
}
}
argAt(allowed,pos,args);
}
return args.toArray(new Validator[args.size()]);
}
