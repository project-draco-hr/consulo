{
  Element deletedTemplatesElement=element.getChild("deleted_templates");
  if (deletedTemplatesElement != null) {
    myDeletedTemplatesManager.readExternal(deletedTemplatesElement);
  }
  Element deletedIncludesElement=element.getChild("deleted_includes");
  if (deletedIncludesElement != null) {
    myPatternsManager.myDeletedTemplatesManager.readExternal(deletedIncludesElement);
  }
  Element recentElement=element.getChild("recent_templates");
  if (recentElement != null) {
    myRecentList.readExternal(recentElement);
  }
  Element templatesElement=element.getChild("templates");
  if (templatesElement != null) {
    revalidate();
    FileTemplate[] internals=getInternalTemplates();
    List children=templatesElement.getChildren();
    for (Iterator iterator=children.iterator(); iterator.hasNext(); ) {
      Element child=(Element)iterator.next();
      String name=child.getAttributeValue("name");
      boolean reformat="true".equals(child.getAttributeValue("reformat"));
      if (child.getName().equals("internal_template")) {
        for (int i=0; i < internals.length; i++) {
          FileTemplate internal=internals[i];
          if (name.equals(internal.getName()))           internal.setAdjust(reformat);
        }
      }
 else       if (child.getName().equals("template")) {
        FileTemplate template=getTemplate(name);
        if (template != null) {
          template.setAdjust(reformat);
        }
      }
    }
  }
}
