{
  VirtualFile[] defaultTemplates=getDefaultTemplates();
  for (int i=0; i < defaultTemplates.length; i++) {
    VirtualFile file=defaultTemplates[i];
    if (file.getName().equals("default.html")) {
      myDefaultDescription=file;
    }
  }
  File templateDir=getParentDirectory(false);
  File[] files=templateDir.listFiles();
  if (files == null) {
    files=new File[0];
  }
  if (myTemplates == null) {
    myTemplates=new MyTemplates();
  }
  List<FileTemplate> existingTemplates=new ArrayList<FileTemplate>();
  for (int i=0; i < files.length; i++) {
    File file=files[i];
    if (file.isDirectory()) {
      continue;
    }
    String name=file.getName();
    String extension=myTypeManager.getExtension(name);
    name=name.substring(0,name.length() - extension.length() - 1);
    FileTemplate existing=myTemplates.findByName(name);
    if (existing == null || existing.isDefault()) {
      if (existing != null) {
        myTemplates.removeTemplate(existing);
      }
      FileTemplateImpl fileTemplate=new FileTemplateImpl(file,name,extension,false);
      myTemplates.addTemplate(fileTemplate);
      existingTemplates.add(fileTemplate);
    }
 else {
      LOG.assertTrue(!((FileTemplateImpl)existing).isModified());
      ((FileTemplateImpl)existing).invalidate();
      existingTemplates.add(existing);
    }
  }
  LOG.debug("FileTemplateManagerImpl.loadTemplates() reading default templates...");
  for (int i=0; i < defaultTemplates.length; i++) {
    VirtualFile file=defaultTemplates[i];
    String name=file.getName();
    String extension=myTypeManager.getExtension(name);
    name=name.substring(0,name.length() - extension.length() - 1);
    if (extension.equals("html")) {
      continue;
    }
    LOG.assertTrue(extension.equals(DEFAULT_TEMPLATE_EXTENSION),file.toString() + " should have *." + DEFAULT_TEMPLATE_EXTENSION+ " extension!");
    extension=myTypeManager.getExtension(name);
    name=name.substring(0,name.length() - extension.length() - 1);
    FileTemplate aTemplate=myTemplates.findByName(name);
    if (aTemplate == null) {
      FileTemplate fileTemplate=new FileTemplateImpl(file,name,extension);
      myTemplates.addTemplate(fileTemplate);
      aTemplate=fileTemplate;
    }
    VirtualFile description=getDescriptionForTemplate(file);
    if (description != null) {
      ((FileTemplateImpl)aTemplate).setDescription(description);
    }
  }
  FileTemplate[] allTemplates=myTemplates.getAllTemplates();
  for (int i=0; i < allTemplates.length; i++) {
    FileTemplateImpl template=(FileTemplateImpl)allTemplates[i];
    if (!template.isDefault()) {
      if (!existingTemplates.contains(template)) {
        if (!template.isNew()) {
          myTemplates.removeTemplate(template);
          template.removeFromDisk();
        }
      }
    }
  }
  myInvalidated=false;
}
