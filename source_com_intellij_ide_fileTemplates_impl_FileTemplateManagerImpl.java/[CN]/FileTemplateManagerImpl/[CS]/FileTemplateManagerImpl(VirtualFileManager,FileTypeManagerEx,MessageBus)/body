{
  this(".","fileTemplates",virtualFileManager,fileTypeManagerEx);
  myInternalTemplatesManager=new FileTemplateManagerImpl(INTERNAL_DIR,myTemplatesDir + File.separator + INTERNAL_DIR,myVirtualFileManager,myTypeManager);
  myPatternsManager=new FileTemplateManagerImpl(INCLUDES_DIR,myTemplatesDir + File.separator + INCLUDES_DIR,myVirtualFileManager,myTypeManager);
  myCodeTemplatesManager=new FileTemplateManagerImpl(CODETEMPLATES_DIR,myTemplatesDir + File.separator + CODETEMPLATES_DIR,myVirtualFileManager,myTypeManager);
  myJ2eeTemplatesManager=new FileTemplateManagerImpl(J2EE_TEMPLATES_DIR,myTemplatesDir + File.separator + J2EE_TEMPLATES_DIR,myVirtualFileManager,myTypeManager);
  myLocalizedTemplateNames.put(TEMPLATE_CATCH_BODY,IdeBundle.message("template.catch.statement.body"));
  myLocalizedTemplateNames.put(TEMPLATE_IMPLEMENTED_METHOD_BODY,IdeBundle.message("template.implemented.method.body"));
  myLocalizedTemplateNames.put(TEMPLATE_OVERRIDDEN_METHOD_BODY,IdeBundle.message("template.overridden.method.body"));
  myLocalizedTemplateNames.put(TEMPLATE_FROM_USAGE_METHOD_BODY,IdeBundle.message("template.new.method.body"));
  myLocalizedTemplateNames.put(TEMPLATE_I18NIZED_EXPRESSION,IdeBundle.message("template.i18nized.expression"));
  myLocalizedTemplateNames.put(TEMPLATE_I18NIZED_CONCATENATION,IdeBundle.message("template.i18nized.concatenation"));
  myLocalizedTemplateNames.put(TEMPLATE_I18NIZED_JSP_EXPRESSION,IdeBundle.message("template.i18nized.jsp.expression"));
  myLocalizedTemplateNames.put(INTERNAL_CLASS_TEMPLATE_NAME,IdeBundle.message("template.class"));
  myLocalizedTemplateNames.put(INTERNAL_INTERFACE_TEMPLATE_NAME,IdeBundle.message("template.interface"));
  myLocalizedTemplateNames.put(INTERNAL_ANNOTATION_TYPE_TEMPLATE_NAME,IdeBundle.message("template.annotationtype"));
  myLocalizedTemplateNames.put(INTERNAL_ENUM_TEMPLATE_NAME,IdeBundle.message("template.enum"));
  myLocalizedTemplateNames.put(FILE_HEADER_TEMPLATE_NAME,IdeBundle.message("template.file.header"));
  bus.connect().subscribe(VirtualFileManager.VFS_CHANGES,new BulkFileListener(){
    public void before(    final List<? extends VFileEvent> events){
    }
    public void after(    final List<? extends VFileEvent> events){
      if (ourTopDirs != null) {
        for (        VirtualFile dir : ourTopDirs) {
          if (!dir.exists()) {
            ourTopDirs=null;
            break;
          }
        }
      }
    }
  }
);
}
