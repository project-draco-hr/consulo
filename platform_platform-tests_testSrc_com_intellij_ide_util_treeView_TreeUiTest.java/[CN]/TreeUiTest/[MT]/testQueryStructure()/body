{
  buildStructure(myRoot);
  assertTree("+/\n");
  assertUpdates("/: update");
  expand(getPath("/"));
  assertTree("-/\n" + " +com\n" + " +jetbrains\n"+ " +org\n"+ " +xUnit\n");
  assertUpdates("/: update getChildren\n" + "com: update getChildren\n" + "eclipse: update\n"+ "fabrique: update\n"+ "intellij: update\n"+ "jetbrains: update getChildren\n"+ "org: update getChildren\n"+ "runner: update\n"+ "xUnit: update getChildren");
  collapsePath(getPath("/"));
  assertTree("+/\n");
  assertUpdates("");
  expand(getPath("/"));
  assertTree("-/\n" + " +com\n" + " +jetbrains\n"+ " +org\n"+ " +xUnit\n");
  assertUpdates("/: update getChildren\n" + "com: update getChildren\n" + "eclipse: update\n"+ "fabrique: update\n"+ "intellij: update\n"+ "jetbrains: update getChildren\n"+ "org: update getChildren\n"+ "runner: update\n"+ "xUnit: update getChildren");
  updateFromRoot();
  assertTree("-/\n" + " +com\n" + " +jetbrains\n"+ " +org\n"+ " +xUnit\n");
  assertUpdates("/: update getChildren\n" + "com: update getChildren\n" + "eclipse: update\n"+ "fabrique: update\n"+ "intellij: update\n"+ "jetbrains: update getChildren\n"+ "org: update getChildren\n"+ "runner: update\n"+ "xUnit: update getChildren");
}
