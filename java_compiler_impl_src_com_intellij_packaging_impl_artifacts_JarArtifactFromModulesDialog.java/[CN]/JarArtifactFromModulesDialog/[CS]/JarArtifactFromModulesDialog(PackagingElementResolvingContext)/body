{
  super(context.getProject());
  myContext=context;
  setTitle("Create Jar from Modules");
  myMainClassLabel.setLabelFor(myMainClassField.getTextField());
  myManifestDirLabel.setLabelFor(myManifestDirField.getTextField());
  final Project project=myContext.getProject();
  ManifestFileUtil.setupMainClassField(project,myMainClassField);
  myMainClassField.getTextField().getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      updateManifestDirField();
    }
  }
);
  final ActionListener actionListener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateManifestDirField();
    }
  }
;
  myExtractJarsRadioButton.addActionListener(actionListener);
  myCopyJarsRadioButton.addActionListener(actionListener);
  updateManifestDirField();
  myManifestDirField.addBrowseFolderListener(null,null,project,ManifestFileUtil.createDescriptorForManifestDirectory());
  final Module[] modules=context.getModulesProvider().getModules().clone();
  Arrays.sort(modules,ModulesAlphaComparator.INSTANCE);
  if (modules.length > 1) {
    myModuleComboBox.addItem(null);
  }
  for (  Module module : modules) {
    myModuleComboBox.addItem(module);
  }
  myModuleComboBox.setRenderer(new ModuleListRenderer(myModuleComboBox));
  init();
}
