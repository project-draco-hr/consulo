{
  final DependenciesBuilder builder=new DependenciesBuilder(myProject,new AnalysisScope(psiFile,AnalysisScope.SOURCE_JAVA_FILES));
  builder.analyze();
  final Map<PsiFile,Set<PsiFile>> dependencies=builder.getDependencies();
  final Set<PsiFile> dependentFiles=dependencies.get(psiFile);
  if (dependentFiles != null && dependentFiles.size() > 0) {
    for (Iterator it=dependentFiles.iterator(); it.hasNext(); ) {
      final PsiFile dependentFile=(PsiFile)it.next();
      if (dependentFile instanceof PsiCompiledElement) {
        continue;
      }
      final VirtualFile vFile=dependentFile.getVirtualFile();
      if (toCompile.contains(vFile)) {
        continue;
      }
      String url=snapshot.getUrlByFile(vFile);
      if (url == null) {
        url=vFile.getUrl();
      }
      if (!sourcesWithOutputRemoved.contains(url)) {
        if (vFile.getTimeStamp() == cache.getSourceTimestamp(url)) {
          continue;
        }
      }
      toCompile.add(vFile);
      addDependentFiles(dependentFile,toCompile,cache,snapshot,sourcesWithOutputRemoved);
    }
  }
}
