{
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      context.getProgressIndicator().setText("Updating caches...");
      final FileTypeManager typeManager=FileTypeManager.getInstance();
      if (LOG.isDebugEnabled()) {
        LOG.debug("Updating internal caches: successfully compiled " + successfullyCompiled.length + " files; toRecompile: "+ filesToRecompile.length+ " files");
      }
      for (int idx=0; idx < successfullyCompiled.length; idx++) {
        final TranslatingCompiler.OutputItem item=successfullyCompiled[idx];
        final String outputPath=item.getOutputPath();
        final VirtualFile sourceFile=item.getSourceFile();
        final String className;
        if (StdFileTypes.JAVA.equals(typeManager.getFileTypeByFile(sourceFile))) {
          final String outputDir=item.getOutputRootDirectory();
          if (!CompilerUtil.startsWith(outputPath,outputDir)) {
            LOG.assertTrue(false,outputPath + " does not start with " + outputDir);
          }
          className=MakeUtil.relativeClassPathToQName(outputPath.substring(outputDir.length(),outputPath.length()),'/');
        }
 else {
          className=null;
        }
        if (LOG.isDebugEnabled()) {
          LOG.debug("Putting: [outputPath, className, sourceFile] = [" + outputPath + ";"+ className+ ";"+ sourceFile.getPresentableUrl()+ "]");
        }
        cache.update(outputPath,className,sourceFile);
      }
      for (int idx=0; idx < filesToRecompile.length; idx++) {
        cache.markAsModified(filesToRecompile[idx]);
      }
    }
  }
);
}
