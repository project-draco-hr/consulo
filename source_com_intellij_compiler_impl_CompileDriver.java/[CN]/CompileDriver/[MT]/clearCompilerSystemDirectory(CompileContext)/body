{
  final File[] children=new File(myCachesDirectoryPath).listFiles();
  if (children != null) {
    for (int idx=0; idx < children.length; idx++) {
      final File child=children[idx];
      final boolean deleteOk=FileUtil.delete(child);
      if (!deleteOk) {
        context.addMessage(CompilerMessageCategory.ERROR,"Failed to delete " + child.getPath(),null,-1,-1);
      }
    }
  }
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      for (Iterator<Pair<Compiler,Module>> it=myGenerationCompilerModuleToOutputDirMap.keySet().iterator(); it.hasNext(); ) {
        Pair<Compiler,Module> pair=it.next();
        final VirtualFile dir=myGenerationCompilerModuleToOutputDirMap.get(pair);
        final File[] files=VfsUtil.virtualToIoFile(dir).listFiles();
        if (files != null) {
          for (int idx=0; idx < files.length; idx++) {
            final File file=files[idx];
            final boolean deleteOk=FileUtil.delete(file);
            if (!deleteOk) {
              context.addMessage(CompilerMessageCategory.ERROR,"Failed to delete " + file.getPath(),null,-1,-1);
            }
          }
        }
      }
    }
  }
);
}
