{
  LOG.assertTrue(FileProcessingCompiler.class.isAssignableFrom(fileProcessingCompilerClass));
  boolean didSomething=false;
  final Compiler[] compilers=compilerManager.getCompilers(fileProcessingCompilerClass);
  if (compilers.length > 0) {
    try {
      for (int idx=0; idx < compilers.length; idx++) {
        if (context.getProgressIndicator().isCanceled()) {
          myExitStatus=ExitStatus.CANCELLED;
          return false;
        }
        final boolean processedSomething=processFiles(factory.create(context,(FileProcessingCompiler)compilers[idx]),forceCompile);
        if (context.getMessageCount(CompilerMessageCategory.ERROR) > 0) {
          myExitStatus=ExitStatus.ERRORS;
          return false;
        }
        didSomething|=processedSomething;
      }
    }
 catch (    ProcessCanceledException e) {
      throw e;
    }
catch (    Exception e) {
      context.addMessage(CompilerMessageCategory.ERROR,"Error processing classes: " + e.getMessage(),null,-1,-1);
      LOG.error(e);
    }
  }
  return didSomething;
}
