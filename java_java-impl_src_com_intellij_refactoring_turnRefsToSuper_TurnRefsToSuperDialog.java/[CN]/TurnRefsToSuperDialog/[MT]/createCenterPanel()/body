{
  JPanel panel=new JPanel();
  panel.setLayout(new BorderLayout(UIUtil.DEFAULT_HGAP,UIUtil.DEFAULT_VGAP));
  final JLabel classListLabel=new JLabel();
  panel.add(classListLabel,BorderLayout.NORTH);
  mySuperClassesList=new JBList(mySuperClasses.toArray());
  mySuperClassesList.setCellRenderer(new ClassCellRenderer(mySuperClassesList.getCellRenderer()));
  mySuperClassesList.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  classListLabel.setText(RefactoringBundle.message("turnRefsToSuper.change.usages.to",mySubClass.getQualifiedName()));
  PsiClass nearestBase=RefactoringHierarchyUtil.getNearestBaseClass(mySubClass,true);
  int indexToSelect=0;
  if (nearestBase != null) {
    indexToSelect=mySuperClasses.indexOf(nearestBase);
  }
  mySuperClassesList.setSelectedIndex(indexToSelect);
  panel.add(ScrollPaneFactory.createScrollPane(mySuperClassesList),BorderLayout.CENTER);
  myCbReplaceInstanceOf.setText(RefactoringBundle.message("turnRefsToSuper.use.superclass.in.instanceof"));
  myCbReplaceInstanceOf.setSelected(false);
  myCbReplaceInstanceOf.setFocusable(false);
  panel.add(myCbReplaceInstanceOf,BorderLayout.SOUTH);
  return panel;
}
