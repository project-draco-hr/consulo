{
  myDeletedPaths.clear();
  int deletedCount=in.readInt();
  while (deletedCount-- > 0) {
    myDeletedPaths.add(IOUtil.readString(in));
  }
  myFilesToRecompile.clear();
  int recompileCount=in.readInt();
  while (recompileCount-- > 0) {
    String rootId=IOUtil.readString(in);
    BuildRootDescriptor descriptor=target.findRootDescriptor(rootId,buildRootIndex);
    Set<File> files;
    if (descriptor != null) {
      files=myFilesToRecompile.get(descriptor);
      if (files == null) {
        files=new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY);
        myFilesToRecompile.put(descriptor,files);
      }
    }
 else {
      LOG.debug("Cannot find root by " + rootId + ", delta will be skipped");
      files=new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY);
    }
    int filesCount=in.readInt();
    while (filesCount-- > 0) {
      final File file=new File(IOUtil.readString(in));
      if (Utils.IS_TEST_MODE) {
        LOG.info("Loaded " + file.getPath());
      }
      files.add(file);
    }
  }
}
