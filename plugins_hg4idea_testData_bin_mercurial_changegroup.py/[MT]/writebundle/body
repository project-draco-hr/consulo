def writebundle(cg, filename, bundletype):
    'Write a bundle file and return its filename.\n\n    Existing files will not be overwritten.\n    If no filename is specified, a temporary file is created.\n    bz2 compression can be turned off.\n    The bundle file will be deleted in case of errors.\n    '
    fh = None
    cleanup = None
    try:
        if filename:
            fh = open(filename, 'wb')
        else:
            (fd, filename) = tempfile.mkstemp(prefix='hg-bundle-', suffix='.hg')
            fh = os.fdopen(fd, 'wb')
        cleanup = filename
        (header, compressor) = bundletypes[bundletype]
        fh.write(header)
        z = compressor()
        empty = False
        count = 0
        while ((not empty) or (count <= 2)):
            empty = True
            count += 1
            for chunk in chunkiter(cg):
                empty = False
                fh.write(z.compress(chunkheader(len(chunk))))
                pos = 0
                while (pos < len(chunk)):
                    next = (pos + (2 ** 20))
                    fh.write(z.compress(chunk[pos:next]))
                    pos = next
            fh.write(z.compress(closechunk()))
        fh.write(z.flush())
        cleanup = None
        return filename
    finally:
        if (fh is not None):
            fh.close()
        if (cleanup is not None):
            os.unlink(cleanup)
