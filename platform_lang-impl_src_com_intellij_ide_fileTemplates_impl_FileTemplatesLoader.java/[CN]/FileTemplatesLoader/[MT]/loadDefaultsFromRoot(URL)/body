{
  final List<String> children=UrlUtil.getChildrenRelativePaths(root);
  if (children.isEmpty()) {
    return;
  }
  final Set<String> descriptionPaths=new HashSet<String>();
  for (  String path : children) {
    if (path.endsWith(DESCRIPTION_EXTENSION_SUFFIX)) {
      descriptionPaths.add(path);
    }
  }
  for (  final String path : children) {
    for (    Map.Entry<String,FTManager> entry : myDirToManagerMap.entrySet()) {
      final String prefix=entry.getKey();
      if (matchesPrefix(path,prefix)) {
        if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) {
          final String filename=path.substring(prefix.length(),path.length() - FTManager.TEMPLATE_EXTENSION_SUFFIX.length());
          final String extension=myTypeManager.getExtension(filename);
          final String templateName=filename.substring(0,filename.length() - extension.length() - 1);
          final URL templateUrl=UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + path));
          final String descriptionPath=getDescriptionPath(prefix,templateName,extension,descriptionPaths);
          final URL descriptionUrl=descriptionPath != null ? UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + descriptionPath)) : null;
          entry.getValue().addDefaultTemplate(new DefaultTemplate(templateName,extension,templateUrl,descriptionUrl));
        }
        break;
      }
    }
  }
}
