{
  final SettingsEditor<JDOMExternalizable> configEditor=myConfiguration.getRunnerSettingsEditor(runner);
  SettingsEditor<JDOMExternalizable> runnerEditor;
  try {
    runnerEditor=runner.getSettingsEditor(myConfiguration);
  }
 catch (  AbstractMethodError error) {
    runnerEditor=null;
  }
  if (configEditor == null && runnerEditor == null)   return null;
  SettingsEditor<RunnerAndConfigurationSettingsImpl> wrappedConfigEditor=null;
  SettingsEditor<RunnerAndConfigurationSettingsImpl> wrappedRunEditor=null;
  if (configEditor != null) {
    wrappedConfigEditor=new SettingsEditorWrapper<RunnerAndConfigurationSettingsImpl,JDOMExternalizable>(configEditor,new Convertor<RunnerAndConfigurationSettingsImpl,JDOMExternalizable>(){
      public JDOMExternalizable convert(      RunnerAndConfigurationSettingsImpl configurationSettings){
        return configurationSettings.getConfigurationSettings(runner).getSettings();
      }
    }
);
    myRunnerEditors.add(wrappedConfigEditor);
  }
  if (runnerEditor != null) {
    wrappedRunEditor=new SettingsEditorWrapper<RunnerAndConfigurationSettingsImpl,JDOMExternalizable>(runnerEditor,new Convertor<RunnerAndConfigurationSettingsImpl,JDOMExternalizable>(){
      public JDOMExternalizable convert(      RunnerAndConfigurationSettingsImpl configurationSettings){
        return configurationSettings.getRunnerSettings(runner).getData();
      }
    }
);
    myRunnerEditors.add(wrappedRunEditor);
  }
  if (wrappedRunEditor != null && wrappedConfigEditor != null) {
    JPanel panel=new JPanel(new BorderLayout());
    panel.add(wrappedConfigEditor.getComponent(),BorderLayout.CENTER);
    panel.add(wrappedRunEditor.getComponent(),BorderLayout.SOUTH);
    return panel;
  }
  if (wrappedRunEditor != null)   return wrappedRunEditor.getComponent();
  return wrappedConfigEditor.getComponent();
}
