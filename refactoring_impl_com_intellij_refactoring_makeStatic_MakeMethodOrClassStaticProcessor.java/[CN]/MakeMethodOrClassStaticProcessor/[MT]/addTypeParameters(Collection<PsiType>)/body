{
  final PsiManager manager=myMember.getManager();
  final PsiElementFactory factory=manager.getElementFactory();
  final List<PsiTypeParameter> typeParametersToAdd=new ArrayList<PsiTypeParameter>();
  final PsiMethod methodFromText=factory.createMethodFromText("void utterGarbage();",myMember);
  for (  final PsiType type : addedTypes) {
    methodFromText.getParameterList().add(factory.createParameter("p",type));
  }
  final LocalSearchScope searchScope=new LocalSearchScope(methodFromText);
  final Iterator<PsiTypeParameter> iterator=PsiUtil.typeParametersIterator(myMember.getContainingClass());
  while (iterator.hasNext()) {
    final PsiTypeParameter psiTypeParameter=iterator.next();
    if (ReferencesSearch.search(psiTypeParameter,searchScope).findFirst() != null) {
      typeParametersToAdd.add(psiTypeParameter);
    }
  }
  Collections.reverse(typeParametersToAdd);
  for (  final PsiTypeParameter typeParameter : typeParametersToAdd) {
    myMember.getTypeParameterList().add(typeParameter);
  }
}
