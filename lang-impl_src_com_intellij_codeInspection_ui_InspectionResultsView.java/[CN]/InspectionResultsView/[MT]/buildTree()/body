{
  final InspectionProfile profile=myInspectionProfile;
  final boolean isGroupedBySeverity=myGlobalInspectionContext.getUIOptions().GROUP_BY_SEVERITY;
  myGroups=new HashMap<HighlightDisplayLevel,Map<String,InspectionGroupNode>>();
  final Map<String,Tools> tools=myGlobalInspectionContext.getTools();
  boolean resultsFound=false;
  for (  Tools currentTools : tools.values()) {
    for (    ScopeToolState state : currentTools.getTools()) {
      final InspectionTool tool=(InspectionTool)state.getTool();
      final HighlightDisplayKey key=HighlightDisplayKey.find(tool.getShortName());
      if (profile != null && !profile.isToolEnabled(key)) {
        break;
      }
      if (myProvider.checkReportedProblems(tool)) {
        addTool(tool,((InspectionProfileImpl)profile).getErrorLevel(key,state.getScope()),isGroupedBySeverity);
        resultsFound=true;
      }
    }
  }
  return resultsFound;
}
