{
  super(myEntriesChooser,true);
  setTitle("Split " + StringUtil.capitalize(getElementTypeName()));
  myNameField=new JTextField();
  myChooser=new ElementsChooser<File>(true){
    protected String getItemText(    @NotNull final File value){
      return getElementText(value);
    }
  }
;
  for (  final File file : files) {
    myChooser.addElement(file,false,new ElementsChooser.ElementProperties(){
      public Icon getIcon(){
        return getElementIcon(file);
      }
      public Color getColor(){
        return null;
      }
    }
);
  }
  myChooser.selectElements(ContainerUtil.createMaybeSingletonList(ContainerUtil.getFirstItem(files)));
  myChooser.addElementsMarkListener(new ElementsChooser.ElementsMarkListener<File>(){
    @Override public void elementMarkChanged(    File element,    boolean isMarked){
      updateOkButton();
    }
  }
);
  myNameField.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      updateOkButton();
    }
  }
);
  init();
  updateOkButton();
}
