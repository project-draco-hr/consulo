{
  final DebuggerTreeNodeImpl[] nodes=getSelectedNodes(e.getDataContext());
  if (nodes == null) {
    return;
  }
  final List<ThreadReferenceProxyImpl> threadsToInterrupt=new ArrayList<ThreadReferenceProxyImpl>();
  for (  final DebuggerTreeNodeImpl debuggerTreeNode : nodes) {
    final NodeDescriptorImpl descriptor=debuggerTreeNode.getDescriptor();
    if (descriptor instanceof ThreadDescriptorImpl) {
      threadsToInterrupt.add(((ThreadDescriptorImpl)descriptor).getThreadReference());
    }
  }
  if (!threadsToInterrupt.isEmpty()) {
    final DebuggerContextImpl debuggerContext=getDebuggerContext(e.getDataContext());
    debuggerContext.getDebugProcess().getManagerThread().schedule(new DebuggerCommandImpl(){
      protected void action() throws Exception {
        for (        ThreadReferenceProxyImpl thread : threadsToInterrupt) {
          thread.getThreadReference().interrupt();
        }
      }
    }
);
  }
}
