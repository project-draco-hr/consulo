{
  myProject=project;
  myProgressIndicator=indicator;
  myCompileScope=compileScope;
  myDependencyCache=dependencyCache;
  myCompileDriver=compileDriver;
  myMake=isMake;
  final Module[] allModules=ModuleManager.getInstance(project).getModules();
  final Set<VirtualFile> allDirs=new OrderedSet<VirtualFile>((TObjectHashingStrategy<VirtualFile>)TObjectHashingStrategy.CANONICAL);
  final Set<VirtualFile> testOutputDirs=new java.util.HashSet<VirtualFile>();
  for (  Module module : allModules) {
    final ModuleRootManager manager=ModuleRootManager.getInstance(module);
    final VirtualFile output=manager.getCompilerOutputPath();
    if (output != null && output.isValid()) {
      allDirs.add(output);
    }
    final VirtualFile testsOutput=manager.getCompilerOutputPathForTests();
    if (testsOutput != null && testsOutput.isValid()) {
      allDirs.add(testsOutput);
      testOutputDirs.add(testsOutput);
    }
  }
  myOutputDirectories=allDirs.toArray(new VirtualFile[allDirs.size()]);
  myTestOutputDirectories=Collections.unmodifiableSet(testOutputDirs);
}
