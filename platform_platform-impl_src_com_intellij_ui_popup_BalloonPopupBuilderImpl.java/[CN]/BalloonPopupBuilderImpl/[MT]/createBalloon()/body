{
  final BalloonImpl result=new BalloonImpl(myContent,myBorder,myBorderInsets,myFill,myHideOnMouseOutside,myHideOnKeyOutside,myHideOnAction,myShowCallout,myCloseButtonEnabled,myFadeoutTime,myHideOnFrameResize,myHideOnLinkClick,myClickHandler,myCloseOnClick,myAnimationCycle,myCalloutShift,myPositionChangeXShift,myPositionChangeYShift,myDialogMode,myTitle,myContentInsets,myShadow,mySmallVariant,myBlockClicks,myLayer,myRequestFocus);
  if (myStorage != null && myAnchor != null) {
    List<Balloon> balloons=myStorage.get(myAnchor);
    if (balloons == null) {
      myStorage.put(myAnchor,balloons=new ArrayList<Balloon>());
      Disposer.register(myAnchor,new Disposable(){
        @Override public void dispose(){
          List<Balloon> toDispose=myStorage.remove(myAnchor);
          if (toDispose != null) {
            for (            Balloon balloon : toDispose) {
              if (!balloon.isDisposed()) {
                Disposer.dispose(balloon);
              }
            }
          }
        }
      }
);
    }
    balloons.add(result);
    result.addListener(new JBPopupAdapter(){
      @Override public void onClosed(      LightweightWindowEvent event){
        if (!result.isDisposed()) {
          Disposer.dispose(result);
        }
      }
    }
);
  }
  return result;
}
