{
  final PsiElement elementToSearch=queryParameters.getElementToSearch();
  if (elementToSearch instanceof PsiField) {
    final PsiField field=(PsiField)elementToSearch;
    final PsiClass containingClass=field.getContainingClass();
    if (containingClass != null) {
      final String qualifiedName=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
        @Override public String compute(){
          return containingClass.getQualifiedName();
        }
      }
);
      if (qualifiedName != null) {
        final List<PsiFile> fxmlWithController=JavaFxControllerClassIndex.findFxmlWithController(containingClass.getProject(),qualifiedName);
        final String fieldName=field.getName();
        for (        PsiFile file : fxmlWithController) {
          final VirtualFile virtualFile=file.getViewProvider().getVirtualFile();
          final SearchScope searchScope=ApplicationManager.getApplication().runReadAction(new Computable<SearchScope>(){
            @Override public SearchScope compute(){
              return queryParameters.getEffectiveSearchScope();
            }
          }
);
          if (searchScope instanceof LocalSearchScope) {
            if (!((LocalSearchScope)searchScope).isInScope(virtualFile))             continue;
          }
 else           if (searchScope instanceof GlobalSearchScope) {
            if (!((GlobalSearchScope)searchScope).contains(virtualFile))             continue;
          }
          file.accept(new XmlRecursiveElementVisitor(){
            @Override public void visitXmlAttributeValue(            final XmlAttributeValue value){
              Runnable runnable=new Runnable(){
                public void run(){
                  final PsiReference reference=value.getReference();
                  if (reference != null) {
                    final PsiElement resolve=reference.resolve();
                    if (resolve instanceof XmlAttributeValue) {
                      final PsiElement parent=resolve.getParent();
                      if (parent instanceof XmlAttribute) {
                        final XmlAttribute attribute=(XmlAttribute)parent;
                        if (FxmlConstants.FX_ID.equals(attribute.getName()) && fieldName.equals(attribute.getValue())) {
                          consumer.process(reference);
                        }
                      }
                    }
                  }
                }
              }
;
              ApplicationManager.getApplication().runReadAction(runnable);
            }
          }
);
        }
      }
    }
  }
  return true;
}
