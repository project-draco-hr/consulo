{
  if (root != null) {
    if (parent != null) {
      if (root.hashCode == null || root.hashCode[0] != parent.hashCode[0]) {
        int hashCodeLength=parent.hashCode.length + 1;
        root.hashCode=new int[hashCodeLength];
        System.arraycopy(parent.hashCode,0,root.hashCode,0,parent.hashCode.length);
        root.hashCode[hashCodeLength - 1]=childHash;
      }
    }
    if (!seen.contains(root)) {
      visitor.visit(parent,root,connectingEdge,layer,0);
      seen.add(root);
      final Object[] outgoingEdges=root.connectsAsSource.toArray();
      for (int i=0; i < outgoingEdges.length; i++) {
        mxGraphHierarchyEdge internalEdge=(mxGraphHierarchyEdge)outgoingEdges[i];
        mxGraphHierarchyNode targetNode=internalEdge.target;
        dfs(root,targetNode,internalEdge,visitor,seen,root.hashCode,i,layer + 1);
      }
    }
 else {
      visitor.visit(parent,root,connectingEdge,layer,1);
    }
  }
}
