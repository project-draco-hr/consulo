{
  StringBuffer buffer=new StringBuffer();
  buffer.append("Victims:\n");
  for (Iterator<PsiElement> i=myElements.iterator(); i.hasNext(); ) {
    final PsiElement element=i.next();
    final PsiType type=myTypes.get(element);
    if (element instanceof PsiParameter) {
      final PsiParameter parm=(PsiParameter)element;
      final PsiMethod method=(PsiMethod)parm.getDeclarationScope();
      buffer.append("   parameter " + method.getParameterList().getParameterIndex(parm) + " of "+ memberString(method));
    }
 else     if (element instanceof PsiField) {
      buffer.append("   field " + memberString(((PsiField)element)));
    }
 else     if (element instanceof PsiLocalVariable) {
      buffer.append("   local " + variableString(((PsiLocalVariable)element)));
    }
 else     if (element instanceof PsiMethod) {
      buffer.append("   return of " + memberString(((PsiMethod)element)));
    }
 else     if (element instanceof PsiNewExpression) {
      buffer.append("   " + element.getText());
    }
 else     if (element instanceof PsiTypeCastExpression) {
      buffer.append("   " + element.getText());
    }
 else {
      buffer.append("   unknown: " + (element == null ? "null" : element.getClass().getName()));
    }
    buffer.append(" " + type.getCanonicalText() + "\n");
  }
  buffer.append("Variables: " + myTypeVariableFactory.getNumber() + "\n");
  buffer.append("Bound variables: ");
  if (myBoundVariables == null) {
    buffer.append(" not specified\n");
  }
 else {
    for (Iterator<PsiTypeVariable> i=myBoundVariables.iterator(); i.hasNext(); ) {
      buffer.append(i.next().getIndex() + ", ");
    }
  }
  buffer.append("Constraints: " + myConstraints.size() + "\n");
  for (Iterator<Constraint> i=myConstraints.iterator(); i.hasNext(); ) {
    buffer.append("   " + i.next() + "\n");
  }
  return buffer.toString();
}
