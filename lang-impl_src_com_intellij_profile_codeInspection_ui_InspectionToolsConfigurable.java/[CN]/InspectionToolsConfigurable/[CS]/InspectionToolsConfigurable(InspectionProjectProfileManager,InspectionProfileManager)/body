{
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final ModifiableModel model=SingleInspectionProfilePanel.createNewProfile(-1,getSelectedObject(),myWholePanel,"");
      if (model != null) {
        addProjectProfile((InspectionProfileImpl)model);
        myDeletedProfiles.remove(model.getName());
      }
    }
  }
);
  myDeleteButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final InspectionProfileImpl selectedProfile=(InspectionProfileImpl)myProfiles.getSelectedItem();
      ((DefaultComboBoxModel)myProfiles.getModel()).removeElement(selectedProfile);
      myDeletedProfiles.add(selectedProfile.getName());
    }
  }
);
  myImportButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createSingleLocalFileDescriptor();
      descriptor.setDescription("Choose profile file");
      final VirtualFile[] files=FileChooser.chooseFiles(myWholePanel,descriptor);
      if (files.length == 0)       return;
      final InspectionProfileImpl profile=new InspectionProfileImpl(InspectionProfileImpl.getDefaultProfile());
      try {
        profile.readExternal(JDOMUtil.loadDocument(VfsUtil.virtualToIoFile(files[0])).getRootElement());
        if (Messages.showYesNoDialog(myWholePanel,"Do you want the profile to be saved to current project?","Choose Profile Purpose",Messages.getQuestionIcon()) == DialogWrapper.OK_EXIT_CODE) {
          addProjectProfile(profile);
        }
 else {
          myProfileManager.addProfile(profile);
        }
      }
 catch (      InvalidDataException e1) {
        LOG.error(e1);
      }
catch (      JDOMException e1) {
        LOG.error(e1);
      }
catch (      IOException e1) {
        LOG.error(e1);
      }
    }
  }
);
  myExportButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
      descriptor.setDescription("Choose directory to store profile file");
      final VirtualFile[] files=FileChooser.chooseFiles(myWholePanel,descriptor);
      if (files.length == 0)       return;
      final Element element=new Element("inspections");
      try {
        final InspectionProfileImpl profile=(InspectionProfileImpl)myProfiles.getSelectedItem();
        profile.writeExternal(element);
        JDOMUtil.writeDocument(new Document(element),files[0].getPath() + File.separator + FileUtil.sanitizeFileName(profile.getName())+ ".xml",SystemProperties.getLineSeparator());
      }
 catch (      WriteExternalException e1) {
        LOG.error(e1);
      }
catch (      IOException e1) {
        LOG.error(e1);
      }
    }
  }
);
  myProjectProfileManager=projectProfileManager;
  myProfileManager=profileManager;
}
