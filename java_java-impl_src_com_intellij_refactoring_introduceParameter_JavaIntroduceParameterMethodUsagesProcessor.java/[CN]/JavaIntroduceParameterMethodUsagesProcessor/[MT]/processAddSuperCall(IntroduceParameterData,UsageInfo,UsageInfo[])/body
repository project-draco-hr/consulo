{
  if (!(usage.getElement() instanceof PsiMethod) || !isJavaUsage(usage))   return true;
  PsiMethod constructor=(PsiMethod)usage.getElement();
  if (!constructor.isConstructor())   return true;
  final PsiElementFactory factory=JavaPsiFacade.getInstance(data.getProject()).getElementFactory();
  PsiExpressionStatement superCall=(PsiExpressionStatement)factory.createStatementFromText("super();",constructor);
  superCall=(PsiExpressionStatement)CodeStyleManager.getInstance(data.getProject()).reformat(superCall);
  PsiCodeBlock body=constructor.getBody();
  final PsiStatement[] statements=body.getStatements();
  if (statements.length > 0) {
    superCall=(PsiExpressionStatement)body.addBefore(superCall,statements[0]);
  }
 else {
    superCall=(PsiExpressionStatement)body.add(superCall);
  }
  processChangeMethodUsage(data,new ExternalUsageInfo(((PsiMethodCallExpression)superCall.getExpression()).getMethodExpression()),usages);
  return false;
}
