{
  final Project[] openProjects=ProjectManager.getInstance().getOpenProjects();
  for (int i=0; i < openProjects.length; i++) {
    Project project=openProjects[i];
    final IdeFrame frame=WindowManagerEx.getInstanceEx().getFrame(project);
    frame.updateToolbar();
    frame.updateMenuBar();
    final ProjectView projectView=ProjectView.getInstance(project);
    projectView.getProjectViewPaneById(ProjectViewPane.ID).updateTreePopupHandler();
    projectView.getProjectViewPaneById(PackageViewPane.ID).updateTreePopupHandler();
    final AbstractProjectViewPane pane=projectView.getProjectViewPaneById(J2EEProjectViewPane.ID);
    if (pane != null) {
      pane.updateTreePopupHandler();
    }
    final FavoritesViewImpl favoritesView=FavoritesViewImpl.getInstance(project);
    final String[] availableFavoritesLists=favoritesView.getAvailableFavoritesLists();
    for (int j=0; j < availableFavoritesLists.length; j++) {
      String favoritesList=availableFavoritesLists[j];
      favoritesView.getFavoritesTreeViewPanel(favoritesList).updateTreePopoupHandler();
    }
  }
  final IdeFrame frame=WindowManagerEx.getInstanceEx().getFrame(null);
  if (frame != null) {
    frame.updateToolbar();
    frame.updateMenuBar();
  }
  CustomizableActionsSchemas.getInstance().setActiveSchema(mySelectedSchema);
}
