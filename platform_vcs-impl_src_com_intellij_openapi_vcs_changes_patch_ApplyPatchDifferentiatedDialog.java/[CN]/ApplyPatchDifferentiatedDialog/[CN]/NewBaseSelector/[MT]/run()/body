{
  final FileChooserDescriptor descriptor=myDirectorySelector ? FileChooserDescriptorFactory.createSingleFolderDescriptor() : FileChooserDescriptorFactory.createSingleFileNoJarsDescriptor();
  descriptor.setTitle(String.format("Select %s Base",myDirectorySelector ? "Directory" : "File"));
  VirtualFile selectedFile=FileChooser.chooseFile(descriptor,myProject,null);
  if (selectedFile == null) {
    return;
  }
  final List<AbstractFilePatchInProgress.PatchChange> selectedChanges=myChangesTreeList.getSelectedChanges();
  if (selectedChanges.size() >= 1) {
    for (    AbstractFilePatchInProgress.PatchChange patchChange : selectedChanges) {
      final AbstractFilePatchInProgress patch=patchChange.getPatchInProgress();
      if (myDirectorySelector) {
        patch.setNewBase(selectedFile);
      }
 else {
        final FilePatch filePatch=patch.getPatch();
        filePatch.setAfterName(selectedFile.getName());
        filePatch.setBeforeName(selectedFile.getName());
        patch.setNewBase(selectedFile.getParent());
      }
    }
    updateTree(false);
  }
}
