{
  if (change instanceof FilePatchInProgress.PatchChange) {
    final FilePatchInProgress.PatchChange patchChange=(FilePatchInProgress.PatchChange)change;
    if (!isShowFlatten) {
      final TextFilePatch filePatch=patchChange.getPatchInProgress().getPatch();
      final String patchPath=filePatch.getAfterName() == null ? filePatch.getBeforeName() : filePatch.getAfterName();
      component.append("   ");
      component.append("[" + patchPath + "]",SimpleTextAttributes.GRAY_ATTRIBUTES);
    }
    if (patchChange.getPatchInProgress().getCurrentStrip() > 0) {
      component.append(" stripped " + patchChange.getPatchInProgress().getCurrentStrip(),SimpleTextAttributes.GRAY_ITALIC_ATTRIBUTES);
    }
    final String text;
    if (FilePatchStatus.ADDED.equals(patchChange.getPatchInProgress().getStatus())) {
      text="(Added)";
    }
 else     if (FilePatchStatus.DELETED.equals(patchChange.getPatchInProgress().getStatus())) {
      text="(Deleted)";
    }
 else {
      text="(Modified)";
    }
    component.append("   ");
    component.append(text,SimpleTextAttributes.GRAY_ATTRIBUTES);
  }
}
