{
  if (myPatches.isEmpty() || (!myContainBasedChanges))   return;
  final List<FilePatchInProgress.PatchChange> changes=getAllChanges();
  final List<FilePatchInProgress.PatchChange> selectedChanges=myChangesTreeList.getSelectedChanges();
  int idx=0;
  boolean goodChange=false;
  if (!selectedChanges.isEmpty()) {
    final FilePatchInProgress.PatchChange c=selectedChanges.get(0);
    for (    FilePatchInProgress.PatchChange change : changes) {
      if (!change.getPatchInProgress().baseExistsOrAdded())       continue;
      goodChange=true;
      if (change.equals(c)) {
        break;
      }
      ++idx;
    }
  }
  if (!goodChange)   return;
  idx=(idx == changes.size()) ? 0 : idx;
  ShowDiffAction.showDiffForChange(changes.toArray(new Change[changes.size()]),idx,myProject,ShowDiffAction.DiffExtendUIFactory.NONE,false);
}
