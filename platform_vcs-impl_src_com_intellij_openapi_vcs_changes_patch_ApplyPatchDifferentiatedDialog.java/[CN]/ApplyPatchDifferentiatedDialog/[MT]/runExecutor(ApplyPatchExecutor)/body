{
  final Collection<AbstractFilePatchInProgress> included=getIncluded();
  if (included.isEmpty())   return;
  final MultiMap<VirtualFile,AbstractFilePatchInProgress> patchGroups=new MultiMap<>();
  for (  AbstractFilePatchInProgress patchInProgress : included) {
    patchGroups.putValue(patchInProgress.getBase(),patchInProgress);
  }
  final LocalChangeList selected=getSelectedChangeList();
  FilePresentationModel presentation=myRecentPathFileChange.get();
  VirtualFile vf=presentation != null ? presentation.getVf() : null;
  executor.apply(getOriginalRemaining(),patchGroups,selected,vf == null ? null : vf.getName(),myReader == null ? null : myReader.getAdditionalInfo(ApplyPatchDefaultExecutor.pathsFromGroups(patchGroups)));
}
