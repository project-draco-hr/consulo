{
  if (myCenterPanel == null) {
    myCenterPanel=new JPanel(new GridBagLayout());
    final GridBagConstraints gb=new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(1,1,1,1),0,0);
    myPatchFileLabel=new JLabel(VcsBundle.message("create.patch.file.name.field"));
    myPatchFileLabel.setLabelFor(myPatchFile);
    myCenterPanel.add(myPatchFileLabel,gb);
    ++gb.gridx;
    gb.fill=GridBagConstraints.HORIZONTAL;
    gb.weightx=1;
    myCenterPanel.add(myPatchFile,gb);
    gb.gridx=0;
    ++gb.gridy;
    gb.weightx=1;
    gb.weighty=0;
    gb.fill=GridBagConstraints.HORIZONTAL;
    gb.gridwidth=2;
    final DefaultActionGroup group=new DefaultActionGroup();
    final AnAction[] treeActions=myChangesTreeList.getTreeActions();
    group.addAll(treeActions);
    group.add(new MapDirectory());
    final MyShowDiff diffAction=new MyShowDiff();
    diffAction.registerCustomShortcutSet(CommonShortcuts.getDiff(),getRootPane());
    group.add(diffAction);
    group.add(new StripUp());
    group.add(new StripDown());
    group.add(new ResetStrip());
    group.add(new ZeroStrip());
    group.add(new AnAction("Refresh","Refresh",IconLoader.getIcon("/actions/sync.png")){
      @Override public void actionPerformed(      AnActionEvent e){
        myLoadQueue.queue(myUpdater);
      }
    }
);
    final ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar("APPLY_PATCH",group,true);
    myCenterPanel.add(toolbar.getComponent(),gb);
    gb.gridx=0;
    ++gb.gridy;
    gb.weighty=1;
    gb.gridwidth=2;
    gb.fill=GridBagConstraints.BOTH;
    myCenterPanel.add(myChangesTreeList,gb);
    final JPanel wrapper=new JPanel(new GridBagLayout());
    final GridBagConstraints gb1=new GridBagConstraints(0,0,1,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(1,1,1,1),0,0);
    wrapper.add(myChangeListChooser,gb1);
    ++gb1.gridx;
    gb1.fill=GridBagConstraints.NONE;
    gb1.weightx=0;
    gb1.insets.left=10;
    wrapper.add(myCommitLegendPanel.getComponent(),gb1);
    gb.gridx=0;
    ++gb.gridy;
    gb.weightx=1;
    gb.weighty=0;
    gb.fill=GridBagConstraints.HORIZONTAL;
    myCenterPanel.add(wrapper,gb);
  }
  return myCenterPanel;
}
