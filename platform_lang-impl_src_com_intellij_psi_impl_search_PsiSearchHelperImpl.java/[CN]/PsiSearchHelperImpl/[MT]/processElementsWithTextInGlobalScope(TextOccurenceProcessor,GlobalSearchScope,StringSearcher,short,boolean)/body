{
  LOG.assertTrue(!Thread.holdsLock(PsiLock.LOCK),"You must not run search from within updating PSI activity. Please consider invokeLatering it instead.");
  final ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
  if (progress != null) {
    progress.pushState();
    progress.setText(PsiBundle.message("psi.scanning.files.progress"));
  }
  String text=searcher.getPattern();
  List<VirtualFile> fileSet=getFilesWithText(scope,searchContext,caseSensitively,text,progress);
  if (progress != null) {
    progress.setText(PsiBundle.message("psi.search.for.word.progress",text));
  }
  return processPsiFileRoots(progress,fileSet,new Processor<PsiElement>(){
    public boolean process(    PsiElement psiRoot){
      return LowLevelSearchUtil.processElementsContainingWordInElement(processor,psiRoot,searcher,false,progress);
    }
  }
);
}
