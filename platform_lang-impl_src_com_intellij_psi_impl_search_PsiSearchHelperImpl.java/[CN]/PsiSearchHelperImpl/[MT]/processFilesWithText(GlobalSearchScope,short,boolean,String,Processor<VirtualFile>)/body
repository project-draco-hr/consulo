{
  final ArrayList<IdIndexEntry> entries=getWordEntries(text,caseSensitively);
  if (entries.isEmpty())   return true;
  final CommonProcessors.CollectProcessor<VirtualFile> collectProcessor=new CommonProcessors.CollectProcessor<VirtualFile>();
  processFilesContainingAllKeys(scope,new Condition<Integer>(){
    @Override public boolean value(    Integer integer){
      return (integer.intValue() & searchContext) != 0;
    }
  }
,collectProcessor,getWordEntries(text,caseSensitively));
  final FileIndexFacade index=FileIndexFacade.getInstance(myManager.getProject());
  return ContainerUtil.process(collectProcessor.getResults(),new ReadActionProcessor<VirtualFile>(){
    @Override public boolean processInReadAction(    VirtualFile virtualFile){
      return !IndexCacheManagerImpl.shouldBeFound(scope,virtualFile,index) || processor.process(virtualFile);
    }
  }
);
}
