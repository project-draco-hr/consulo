{
  final LookupImpl lookup=(LookupImpl)LookupManager.getActiveLookup(editor);
  if (lookup == null) {
    myOriginalHandler.execute(editor,charTyped,dataContext);
    return;
  }
  final String prefix=lookup.getPrefix();
  final LookupItem<?> currentItem=lookup.getCurrentItem();
  final CharFilter.Result result=getLookupAction(charTyped,prefix,currentItem,lookup);
  CommandProcessor.getInstance().executeCommand(PlatformDataKeys.PROJECT.getData(dataContext),new Runnable(){
    public void run(){
      EditorModificationUtil.deleteSelectedText(editor);
      if (result == CharFilter.Result.ADD_TO_PREFIX) {
        lookup.setPrefix(lookup.getPrefix() + charTyped);
        lookup.setSelectionChanged();
        EditorModificationUtil.insertStringAtCaret(editor,String.valueOf(charTyped));
      }
    }
  }
,"",null);
  if (result == CharFilter.Result.ADD_TO_PREFIX) {
    lookup.updateList();
    Point point=lookup.calculatePosition();
    Dimension preferredSize=lookup.getComponent().getPreferredSize();
    lookup.setBounds(point.x,point.y,preferredSize.width,preferredSize.height);
    lookup.getList().repaint();
  }
 else {
    if (result == CharFilter.Result.SELECT_ITEM_AND_FINISH_LOOKUP) {
      LookupItem item=lookup.getCurrentItem();
      if (item != null) {
        FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EDITING_COMPLETION_FINISH_BY_DOT_ETC);
        lookup.finishLookup(charTyped);
        return;
      }
    }
    lookup.hide();
    myOriginalHandler.execute(editor,charTyped,dataContext);
  }
}
