{
  PsiElement parent=typeCast.getParent();
  while (parent instanceof PsiParenthesizedExpression)   parent=parent.getParent();
  if (parent instanceof PsiExpressionList)   return;
  if (isTypeCastSemantical(typeCast))   return;
  PsiType toType=typeCast.getCastType().getType();
  PsiType fromType=typeCast.getOperand().getType();
  if (fromType == null || toType == null)   return;
  if (parent instanceof PsiReferenceExpression) {
    if (toType instanceof PsiClassType && fromType instanceof PsiPrimitiveType)     return;
    if (fromType instanceof PsiClassType) {
      PsiElement element=((PsiReferenceExpression)parent).resolve();
      if (!(element instanceof PsiMember))       return;
      PsiClass accessClass=((PsiClassType)fromType).resolve();
      if (accessClass == null)       return;
      if (!parent.getManager().getResolveHelper().isAccessible((PsiMember)element,typeCast,accessClass))       return;
    }
  }
  if (toType.isAssignableFrom(fromType)) {
    addToResults(typeCast);
  }
}
