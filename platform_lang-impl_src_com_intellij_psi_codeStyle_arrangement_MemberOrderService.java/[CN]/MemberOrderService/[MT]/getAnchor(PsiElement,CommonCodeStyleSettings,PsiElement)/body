{
  Language language=context.getLanguage();
  Rearranger<?> rearranger=Rearranger.EXTENSION.forLanguage(language);
  if (rearranger == null) {
    return null;
  }
  List<? extends ArrangementRule> rules=settings.getArrangementRules();
  if (rules.isEmpty() && rearranger instanceof ArrangementStandardSettingsAware) {
    rules=((ArrangementStandardSettingsAware)rearranger).getDefaultRules();
  }
  if (rules == null) {
    return null;
  }
  ArrangementEntry memberEntry=rearranger.wrap(member);
  if (memberEntry == null) {
    return null;
  }
  List<? extends ArrangementEntry> entries=rearranger.parse(context,null,Collections.singleton(context.getTextRange()));
  if (entries.isEmpty()) {
    return null;
  }
  ArrangementEntry parentEntry=entries.get(0);
  List<ArrangementEntry> entriesWithNew=new ArrayList<ArrangementEntry>(parentEntry.getChildren());
  entriesWithNew.add(memberEntry);
  List<ArrangementEntry> arranged=ArrangementEngine.arrange(entriesWithNew,rules);
  int i=arranged.indexOf(memberEntry);
  if (i <= 0) {
    return context;
  }
  ArrangementEntry anchorEntry=arranged.get(i - 1);
  return context.findElementAt(anchorEntry.getEndOffset() - context.getTextRange().getStartOffset());
}
