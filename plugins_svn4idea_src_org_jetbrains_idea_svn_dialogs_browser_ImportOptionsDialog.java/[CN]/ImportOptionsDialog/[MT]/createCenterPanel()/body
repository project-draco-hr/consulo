{
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints gc=new GridBagConstraints();
  gc.insets=new Insets(2,2,2,2);
  gc.gridwidth=1;
  gc.gridheight=1;
  gc.gridx=0;
  gc.gridy=0;
  gc.anchor=GridBagConstraints.WEST;
  gc.fill=GridBagConstraints.NONE;
  gc.weightx=0;
  gc.weighty=0;
  panel.add(new JLabel("Import to:"),gc);
  gc.gridx+=1;
  gc.gridwidth=2;
  gc.weightx=1;
  gc.fill=GridBagConstraints.HORIZONTAL;
  JLabel urlLabel=new JLabel(myURL.toString());
  urlLabel.setFont(urlLabel.getFont().deriveFont(Font.BOLD));
  panel.add(urlLabel,gc);
  gc.gridy+=1;
  gc.gridwidth=1;
  gc.gridx=0;
  gc.weightx=0;
  gc.fill=GridBagConstraints.NONE;
  panel.add(new JLabel("Import from:"),gc);
  gc.gridx+=1;
  gc.gridwidth=2;
  gc.weightx=1;
  gc.fill=GridBagConstraints.HORIZONTAL;
  myPathField=new TextFieldWithBrowseButton(this);
  myPathField.setText(myFile.getAbsolutePath());
  myPathField.setEditable(false);
  panel.add(myPathField,gc);
  gc.gridy+=1;
  gc.gridx=0;
  gc.weightx=0;
  gc.gridwidth=3;
  gc.fill=GridBagConstraints.NONE;
  final JLabel depthLabel=new JLabel(SvnBundle.message("label.depth.text"));
  depthLabel.setToolTipText(SvnBundle.message("label.depth.description"));
  panel.add(depthLabel,gc);
  ++gc.gridx;
  myDepth=new DepthCombo();
  panel.add(myDepth,gc);
  depthLabel.setLabelFor(myDepth);
  gc.gridx=0;
  gc.gridy+=1;
  myIncludeIgnoredCheckbox=new JCheckBox("Include ignored resources");
  myIncludeIgnoredCheckbox.setSelected(true);
  panel.add(myIncludeIgnoredCheckbox,gc);
  gc.gridy+=1;
  panel.add(new JLabel("Commit Message:"),gc);
  gc.gridy+=1;
  gc.gridwidth=3;
  gc.gridx=0;
  gc.weightx=1;
  gc.weighty=1;
  gc.anchor=GridBagConstraints.NORTH;
  gc.fill=GridBagConstraints.BOTH;
  myCommitMessage=new JTextArea(10,0);
  myCommitMessage.setWrapStyleWord(true);
  myCommitMessage.setLineWrap(true);
  panel.add(new JScrollPane(myCommitMessage),gc);
  gc.gridy+=1;
  gc.gridwidth=3;
  gc.gridx=0;
  gc.weightx=0;
  gc.weighty=0;
  gc.anchor=GridBagConstraints.NORTH;
  gc.fill=GridBagConstraints.HORIZONTAL;
  panel.add(new JLabel("Recent Messages: "),gc);
  gc.gridy+=1;
  ArrayList<String> messages=VcsConfiguration.getInstance(myProject).getRecentMessages();
  if (messages != null) {
    Collections.reverse(messages);
  }
  Object[] model=messages != null ? messages.toArray() : new Object[]{""};
  final JComboBox messagesBox=new JComboBox(model);
  messagesBox.setRenderer(new MessageBoxCellRenderer());
  panel.add(messagesBox,gc);
  String lastMessage=VcsConfiguration.getInstance(myProject).getLastNonEmptyCommitMessage();
  if (lastMessage != null) {
    myCommitMessage.setText(lastMessage);
    myCommitMessage.selectAll();
  }
  messagesBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myCommitMessage.setText(messagesBox.getSelectedItem().toString());
      myCommitMessage.selectAll();
    }
  }
);
  return panel;
}
