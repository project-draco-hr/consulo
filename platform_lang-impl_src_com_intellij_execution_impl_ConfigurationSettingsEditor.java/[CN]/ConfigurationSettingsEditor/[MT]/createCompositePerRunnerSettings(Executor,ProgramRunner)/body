{
  final SettingsEditor<JDOMExternalizable> configEditor=myConfiguration.getRunnerSettingsEditor(runner);
  SettingsEditor<JDOMExternalizable> runnerEditor;
  try {
    runnerEditor=runner.getSettingsEditor(executor,myConfiguration);
  }
 catch (  AbstractMethodError error) {
    runnerEditor=null;
  }
  if (configEditor == null && runnerEditor == null)   return null;
  SettingsEditor<RunnerAndConfigurationSettings> wrappedConfigEditor=null;
  SettingsEditor<RunnerAndConfigurationSettings> wrappedRunEditor=null;
  if (configEditor != null) {
    wrappedConfigEditor=new SettingsEditorWrapper<RunnerAndConfigurationSettings,JDOMExternalizable>(configEditor,new Convertor<RunnerAndConfigurationSettings,JDOMExternalizable>(){
      @Override public JDOMExternalizable convert(      RunnerAndConfigurationSettings configurationSettings){
        return configurationSettings.getConfigurationSettings(runner).getSettings();
      }
    }
);
    myRunnerEditors.add(wrappedConfigEditor);
    Disposer.register(this,wrappedConfigEditor);
  }
  if (runnerEditor != null) {
    wrappedRunEditor=new SettingsEditorWrapper<RunnerAndConfigurationSettings,JDOMExternalizable>(runnerEditor,new Convertor<RunnerAndConfigurationSettings,JDOMExternalizable>(){
      @Override public JDOMExternalizable convert(      RunnerAndConfigurationSettings configurationSettings){
        return configurationSettings.getRunnerSettings(runner).getData();
      }
    }
);
    myRunnerEditors.add(wrappedRunEditor);
    Disposer.register(this,wrappedRunEditor);
  }
  if (wrappedRunEditor != null && wrappedConfigEditor != null) {
    JPanel panel=new JPanel(new BorderLayout());
    panel.add(wrappedConfigEditor.getComponent(),BorderLayout.CENTER);
    JComponent wrappedRunEditorComponent=wrappedRunEditor.getComponent();
    wrappedRunEditorComponent.setBorder(IdeBorderFactory.createEmptyBorder(3,0,0,0));
    panel.add(wrappedRunEditorComponent,BorderLayout.SOUTH);
    return panel;
  }
  if (wrappedRunEditor != null)   return wrappedRunEditor.getComponent();
  return wrappedConfigEditor.getComponent();
}
