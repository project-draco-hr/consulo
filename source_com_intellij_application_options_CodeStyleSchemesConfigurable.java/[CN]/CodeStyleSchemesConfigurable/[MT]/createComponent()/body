{
  mySettingsStack=new SettingsStack(CodeStyleSchemes.getInstance(),EditorSettingsExternalizable.getInstance());
  myPanel=new JPanel(new GridBagLayout());
  Insets stdInsets=new Insets(2,2,2,2);
  myCombo=new JComboBox();
  mySaveAsButton=new JButton("Save As...");
  myDeleteButton=new JButton("Delete");
  int row=0;
  myPanel.add(new JLabel("Scheme name:"),new GridBagConstraints(0,row,1,1,0,0,GridBagConstraints.EAST,GridBagConstraints.NONE,stdInsets,0,0));
  myPanel.add(myCombo,new GridBagConstraints(1,row,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,stdInsets,70,0));
  myPanel.add(mySaveAsButton,new GridBagConstraints(2,row,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,stdInsets,0,0));
  myPanel.add(myDeleteButton,new GridBagConstraints(3,row,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,stdInsets,0,0));
  myPanel.add(new JPanel(),new GridBagConstraints(4,row,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,stdInsets,0,0));
  row++;
  myPanel.add(mySettingsStack,new GridBagConstraints(0,row,5,1,1.0,1.0,GridBagConstraints.CENTER,GridBagConstraints.BOTH,stdInsets,0,0));
  myCombo.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          onCombo();
        }
      }
);
    }
  }
);
  mySaveAsButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      onSaveAs();
    }
  }
);
  myDeleteButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      onDelete();
    }
  }
);
  reset();
  myPanel.setPreferredSize(new Dimension(800,650));
  final Project project=(Project)DataManager.getInstance().getDataContext().getData(DataConstants.PROJECT);
  if (project == null || !CodeStyleSettingsManager.getInstance(project).USE_PER_PROJECT_SETTINGS)   return myPanel;
  final CardLayout cards=new CardLayout();
  final JPanel rootPanel=new JPanel(cards);
  rootPanel.add("Settings",myPanel);
  final JPanel warningPanel=new JPanel(new VerticalFlowLayout(VerticalFlowLayout.CENTER));
  final JLabel label=new JLabel("<html><body>The current project is configured to use its own code style.<br>" + "Changes made to global code style settings will not affect formatting in the current project.<br>" + "See Project Settings | Code Style.<br>"+ "Press &quot;Edit Global Settings&quot; button below if you still want to edit global settings.</body></html>");
  label.setIcon(IconLoader.getIcon("/general/tip.png"));
  label.setHorizontalAlignment(SwingConstants.CENTER);
  warningPanel.add(label);
  JButton editGlobal=new JButton("Edit Global Settings");
  editGlobal.setMnemonic('G');
  JPanel buttonPanel=new JPanel(new FlowLayout(FlowLayout.CENTER));
  buttonPanel.add(editGlobal);
  warningPanel.add(buttonPanel);
  editGlobal.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cards.show(rootPanel,"Settings");
    }
  }
);
  rootPanel.add("Warning",warningPanel);
  cards.show(rootPanel,"Warning");
  return rootPanel;
}
