{
  MarkupModel markupModel=getMarkupModel();
  EditorEx editor=getEditor();
  TextDiffTypeEnum diffTypeEnum=fragment.getType();
  if (diffTypeEnum == null || markupModel == null || editor == null) {
    return;
  }
  TextDiffType type=fragment instanceof LineFragment ? DiffUtil.makeTextDiffType((LineFragment)fragment) : TextDiffType.create(diffTypeEnum);
  TextRange range=fragment.getRange(getSide());
  TextAttributes attributes=type.getTextAttributes(editor);
  if (attributes == null) {
    return;
  }
  RangeHighlighter rangeMarker;
  if (range.getLength() == 0) {
    TextAttributes textAttributes=new TextAttributes(null,null,attributes.getBackgroundColor(),EffectType.BOXED,Font.PLAIN);
    rangeMarker=markupModel.addRangeHighlighter(range.getStartOffset(),range.getStartOffset(),LAYER,textAttributes,HighlighterTargetArea.EXACT_RANGE);
  }
 else {
    rangeMarker=markupModel.addRangeHighlighter(range.getStartOffset(),range.getEndOffset(),LAYER,attributes,HighlighterTargetArea.EXACT_RANGE);
  }
  if (gutterIconRenderer != null) {
    rangeMarker.setGutterIconRenderer(gutterIconRenderer);
  }
  setLineMarkerRenderer(rangeMarker,fragment,type);
  setErrorStripes(rangeMarker,fragment,attributes.getErrorStripeColor());
  saveHighlighter(rangeMarker);
}
