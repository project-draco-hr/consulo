{
  Map<MavenId,DownloadData> result=new THashMap<MavenId,DownloadData>();
  for (  MavenProject eachProject : myMavenProjects) {
    List<MavenRemoteRepository> repositories=eachProject.getRemoteRepositories();
    for (    MavenArtifact eachDependency : eachProject.getDependencies()) {
      if (myArtifacts != null && !myArtifacts.contains(eachDependency))       continue;
      if (Artifact.SCOPE_SYSTEM.equalsIgnoreCase(eachDependency.getScope()))       continue;
      if (myProjectsTree.findProject(eachDependency.getMavenId()) != null)       continue;
      if (!eachProject.isSupportedDependency(eachDependency))       continue;
      MavenId id=eachDependency.getMavenId();
      DownloadData data=result.get(id);
      if (data == null) {
        data=new DownloadData();
        result.put(id,data);
      }
      data.repositories.addAll(repositories);
      for (      MavenExtraArtifactType eachType : types) {
        data.classifiersWithExtensions.add(new DownloadElement(eachProject.getClassifierAndExtension(eachDependency,eachType),eachType));
      }
    }
  }
  return result;
}
