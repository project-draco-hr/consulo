{
  List<String> classifiers=new ArrayList<String>(2);
  if (downloadSources)   classifiers.add(MavenConstants.CLASSIFIER_SOURCES);
  if (downloadJavadoc)   classifiers.add(MavenConstants.CLASSIFIER_JAVADOC);
  final AtomicInteger downloaded=new AtomicInteger();
  final int total=libraryArtifacts.size() * classifiers.size();
  try {
    for (    final Map.Entry<MavenId,Set<MavenRemoteRepository>> eachEntry : libraryArtifacts.entrySet()) {
      myProgress.checkCanceled();
      for (      final String eachClassifier : classifiers) {
        myProgress.checkCanceled();
        myProgress.setFraction(((double)downloaded.getAndIncrement()) / total);
        Artifact a=myEmbedder.resolve(eachEntry.getKey(),MavenConstants.TYPE_JAR,eachClassifier,new ArrayList<MavenRemoteRepository>(eachEntry.getValue()));
        if (a.isResolved())         downloadedFiles.add(a.getFile());
      }
    }
  }
  finally {
  }
}
