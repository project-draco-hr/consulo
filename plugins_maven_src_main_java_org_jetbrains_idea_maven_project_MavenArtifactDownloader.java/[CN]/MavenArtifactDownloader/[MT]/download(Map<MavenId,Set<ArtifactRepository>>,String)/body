{
  myProgressIndicator.setText(ProjectBundle.message("maven.progress.downloading",classifier));
  int step=0;
  for (  Map.Entry<MavenId,Set<ArtifactRepository>> entry : libraryArtifacts.entrySet()) {
    if (myProgressIndicator.isCanceled())     return;
    myProgressIndicator.setFraction(((double)step++) / libraryArtifacts.size());
    final MavenId id=entry.getKey();
    myProgressIndicator.setText2(id.toString());
    try {
      myEmbedder.resolve(myEmbedder.createArtifactWithClassifier(id.groupId,id.artifactId,id.version,MavenToIdeaConverter.JAR_TYPE,classifier),new ArrayList<ArtifactRepository>(entry.getValue()),myEmbedder.getLocalRepository());
    }
 catch (    ArtifactResolutionException ignore) {
    }
catch (    ArtifactNotFoundException ignore) {
    }
catch (    CancelChecker.CancelledException e) {
      return;
    }
catch (    Exception e) {
      LOG.warn("Exception during artifact resolution",e);
    }
  }
}
