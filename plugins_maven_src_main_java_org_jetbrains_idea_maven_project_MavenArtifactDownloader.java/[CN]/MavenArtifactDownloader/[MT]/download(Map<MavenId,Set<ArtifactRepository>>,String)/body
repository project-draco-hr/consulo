{
  myProgress.setText(ProjectBundle.message("maven.progress.downloading",classifier));
  int step=0;
  for (  Map.Entry<MavenId,Set<ArtifactRepository>> entry : libraryArtifacts.entrySet()) {
    myProgress.checkCanceled();
    final MavenId id=entry.getKey();
    myProgress.setFraction(((double)step++) / libraryArtifacts.size());
    myProgress.setText2(id.toString());
    try {
      Artifact a=myEmbedder.createArtifactWithClassifier(id.groupId,id.artifactId,id.version,MavenToIdeaConverter.JAR_TYPE,classifier);
      List<ArtifactRepository> remoteRepos=new ArrayList<ArtifactRepository>(entry.getValue());
      myEmbedder.resolve(a,remoteRepos,myEmbedder.getLocalRepository());
    }
 catch (    ArtifactResolutionException ignore) {
    }
catch (    ArtifactNotFoundException ignore) {
    }
catch (    Exception e) {
      LOG.warn("Exception during artifact resolution",e);
    }
  }
}
