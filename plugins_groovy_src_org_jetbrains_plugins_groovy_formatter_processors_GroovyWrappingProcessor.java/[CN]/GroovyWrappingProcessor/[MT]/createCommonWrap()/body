{
  if (myParentType == EXTENDS_CLAUSE || myParentType == IMPLEMENTS_CLAUSE) {
    myUsedDefaultWrap=true;
    return Wrap.createWrap(mySettings.EXTENDS_LIST_WRAP,true);
  }
  if (myParentType == THROW_CLAUSE) {
    myUsedDefaultWrap=true;
    return Wrap.createWrap(mySettings.THROWS_LIST_WRAP,true);
  }
  if (myParentType == PARAMETERS_LIST) {
    myUsedDefaultWrap=true;
    return Wrap.createWrap(mySettings.METHOD_PARAMETERS_WRAP,true);
  }
  if (myParentType == ARGUMENTS || myParentType == COMMAND_ARGUMENTS) {
    myUsedDefaultWrap=myParentType == ARGUMENTS;
    return Wrap.createWrap(mySettings.CALL_PARAMETERS_WRAP,myUsedDefaultWrap);
  }
  if (myParentType == FOR_TRADITIONAL_CLAUSE || myParentType == FOR_IN_CLAUSE) {
    myUsedDefaultWrap=true;
    return Wrap.createWrap(mySettings.FOR_STATEMENT_WRAP,true);
  }
  if (TokenSets.BINARY_EXPRESSIONS.contains(myParentType)) {
    return Wrap.createWrap(mySettings.BINARY_OPERATION_WRAP,false);
  }
  if (myParentType == ASSIGNMENT_EXPRESSION) {
    return Wrap.createWrap(mySettings.ASSIGNMENT_WRAP,false);
  }
  if (myParentType == CONDITIONAL_EXPRESSION || myParentType == ELVIS_EXPRESSION) {
    return Wrap.createWrap(mySettings.TERNARY_OPERATION_WRAP,false);
  }
  if (myParentType == ASSERT_STATEMENT) {
    return Wrap.createWrap(mySettings.ASSERT_STATEMENT_WRAP,false);
  }
  if (TokenSets.BLOCK_SET.contains(myParentType)) {
    return createNormalWrap();
  }
  if (myParentType == MODIFIERS) {
    final int wrapType=getAnnotationsWrapType(myNode);
    if (wrapType != -1) {
      myUsedDefaultWrap=true;
      return Wrap.createWrap(wrapType,true);
    }
  }
  return null;
}
