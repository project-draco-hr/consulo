{
  if (myParentType == EXTENDS_CLAUSE || myParentType == IMPLEMENTS_CLAUSE) {
    myUsedDefaultWrap=true;
    return Wrap.createWrap(mySettings.EXTENDS_LIST_WRAP,true);
  }
  if (myParentType == THROW_CLAUSE) {
    myUsedDefaultWrap=true;
    return Wrap.createWrap(mySettings.THROWS_LIST_WRAP,true);
  }
  if (myParentType == PARAMETERS_LIST) {
    myUsedDefaultWrap=true;
    return Wrap.createWrap(mySettings.METHOD_PARAMETERS_WRAP,true);
  }
  if (myParentType == ARGUMENTS || myParentType == COMMAND_ARGUMENTS) {
    myUsedDefaultWrap=myParentType == ARGUMENTS;
    return Wrap.createWrap(mySettings.CALL_PARAMETERS_WRAP,myUsedDefaultWrap);
  }
  if (myParentType == FOR_TRADITIONAL_CLAUSE || myParentType == FOR_IN_CLAUSE) {
    myUsedDefaultWrap=true;
    return Wrap.createWrap(mySettings.FOR_STATEMENT_WRAP,true);
  }
  if (TokenSets.BINARY_EXPRESSIONS.contains(myParentType)) {
    return Wrap.createWrap(mySettings.BINARY_OPERATION_WRAP,false);
  }
  if (myParentType == ASSIGNMENT_EXPRESSION) {
    return Wrap.createWrap(mySettings.ASSIGNMENT_WRAP,false);
  }
  if (myParentType == CONDITIONAL_EXPRESSION || myParentType == ELVIS_EXPRESSION) {
    return Wrap.createWrap(mySettings.TERNARY_OPERATION_WRAP,false);
  }
  if (myParentType == ASSERT_STATEMENT) {
    return Wrap.createWrap(mySettings.ASSERT_STATEMENT_WRAP,false);
  }
  if (TokenSets.BLOCK_SET.contains(myParentType)) {
    return createNormalWrap();
  }
  if (myParentType == PARAMETERS_LIST) {
    final IElementType pparentType=myNode.getTreeParent().getElementType();
    if (TYPE_DEFINITION_TYPES.contains(pparentType)) {
      return Wrap.createWrap(mySettings.CLASS_ANNOTATION_WRAP,false);
    }
    if (METHOD_DEFS.contains(pparentType)) {
      return Wrap.createWrap(mySettings.METHOD_ANNOTATION_WRAP,false);
    }
    if (VARIABLE_DEFINITION == pparentType) {
      final IElementType ppparentType=myNode.getTreeParent().getTreeParent().getElementType();
      if (ppparentType == CLASS_BODY || ppparentType == ENUM_BODY) {
        return Wrap.createWrap(mySettings.FIELD_ANNOTATION_WRAP,false);
      }
 else {
        return Wrap.createWrap(mySettings.VARIABLE_ANNOTATION_WRAP,false);
      }
    }
    if (PARAMETER == pparentType) {
      return Wrap.createWrap(mySettings.PARAMETER_ANNOTATION_WRAP,false);
    }
    if (ENUM_CONSTANT == pparentType) {
      return Wrap.createWrap(mySettings.ENUM_CONSTANTS_WRAP,false);
    }
  }
  return null;
}
