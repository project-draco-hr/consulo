{
  if (classElement instanceof PsiClass) {
    final PsiClass[] inners=((PsiClass)classElement).getInnerClasses();
    for (int j=0; j < inners.length; j++) {
      final PsiClass inner=inners[j];
      if (inner.hasModifierProperty(PsiModifier.STATIC) && PsiUtil.isAccessible(inner,place,null) && myFilter.isAcceptable(inner,place)) {
        return true;
      }
    }
  }
  return false;
}
