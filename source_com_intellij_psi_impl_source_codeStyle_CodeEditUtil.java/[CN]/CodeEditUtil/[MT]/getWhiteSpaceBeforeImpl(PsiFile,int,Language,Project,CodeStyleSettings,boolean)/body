{
  final FormattingModelBuilder builder=language.getFormattingModelBuilder();
  if (builder != null) {
    final TextRange textRange=file.findElementAt(tokenStartOffset).getTextRange();
    final FormattingModel model=builder.createModel(file,settings);
    return Formatter.getInstance().getWhiteSpaceBefore(model.getDocumentModel(),model.getRootBlock(),settings,settings.getIndentOptions(file.getFileType()),textRange,mayChangeLineFeeds);
  }
 else {
    final PseudoTextBuilder pseudoTextBuilder=language.getFormatter();
    LOG.assertTrue(pseudoTextBuilder != null);
    final PseudoText pseudoText=pseudoTextBuilder.build(project,settings,file);
    return GeneralCodeFormatter.getWhiteSpaceBetweenTokens(pseudoText,settings,file.getFileType(),tokenStartOffset,mayChangeLineFeeds);
  }
}
