{
  Language elementLanguage=file.findElementAt(tokenStartOffset).getLanguage();
  if (CodeFormatterFacade.useBlockFormatter(elementLanguage) && CodeFormatterFacade.useBlockFormatter(file)) {
    final TextRange textRange=file.findElementAt(tokenStartOffset).getTextRange();
    final PsiBasedFormattingModel psiBasedFormattingModel=new PsiBasedFormattingModel(file,settings);
    try {
      return Formatter.getInstance().getWhiteSpaceBefore(psiBasedFormattingModel,CodeFormatterFacade.createBlock(file,settings),settings,settings.getIndentOptions(file.getFileType()),textRange,mayChangeLineFeeds);
    }
  finally {
      psiBasedFormattingModel.dispose();
    }
  }
 else {
    final PseudoTextBuilder pseudoTextBuilder=language.getFormatter();
    LOG.assertTrue(pseudoTextBuilder != null);
    final PseudoText pseudoText=pseudoTextBuilder.build(project,settings,file);
    return GeneralCodeFormatter.getWhiteSpaceBetweenTokens(pseudoText,settings,file.getFileType(),tokenStartOffset,mayChangeLineFeeds);
  }
}
