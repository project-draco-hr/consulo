{
  StringBuffer buffer=null;
  int count=0;
  for (ASTNode child=child1 != null ? child1.getTreeNext() : parent.firstChild; child != child2; child=child.getTreeNext()) {
    if (child instanceof CompositeElement && ((CompositeElement)child).firstChild == null)     continue;
    if (Helper.isNonSpace(child)) {
      LOG.error("Whitespace expected");
    }
    if (buffer == null) {
      buffer=new StringBuffer();
    }
    buffer.append(child.getText());
    count++;
  }
  if (count > 1) {
    LeafElement newSpace=Factory.createSingleLeafElement(JavaTokenType.WHITE_SPACE,buffer.toString().toCharArray(),0,buffer.length(),table,null);
    count=0;
    TreeElement next;
    for (TreeElement child=child1 != null ? child1.getTreeNext() : parent.firstChild; child != child2; child=next) {
      next=child.getTreeNext();
      if (child instanceof CompositeElement && child.getTextLength() == 0)       continue;
      if (count == 0) {
        ChangeUtil.replaceChild(parent,child,newSpace);
      }
 else {
        ChangeUtil.removeChild(parent,child);
      }
      count++;
    }
  }
  if (child1 != null && child2 != null && Helper.getSpaceText(parent,child1,child2).length() == 0) {
    if (!helper.canStickChildrenTogether(child1,child2)) {
      helper.makeSpace(parent,child1,child2," ");
    }
  }
}
