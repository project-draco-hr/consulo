{
  saveWhitespacesInfo(oldChild);
  saveWhitespacesInfo(newChild);
  checkForOuters(oldChild);
  checkForOuters(newChild);
  parent.replaceChild(oldChild,newChild);
  final LeafElement firstLeaf=TreeUtil.findFirstLeaf(newChild);
  final ASTNode prevToken=TreeUtil.prevLeaf(newChild);
  if (firstLeaf != null) {
    final ASTNode nextLeaf=TreeUtil.nextLeaf(newChild);
    makePlaceHolderBetweenTokens(prevToken,firstLeaf,isFormattingRequiered(prevToken,newChild),false);
    if (nextLeaf != null && !CharArrayUtil.containLineBreaks(nextLeaf.getText())) {
      makePlaceHolderBetweenTokens(TreeUtil.prevLeaf(nextLeaf),nextLeaf,false,false);
    }
  }
 else {
    makePlaceHolderBetweenTokens(prevToken,TreeUtil.nextLeaf(newChild),isFormattingRequiered(prevToken,newChild),false);
  }
}
