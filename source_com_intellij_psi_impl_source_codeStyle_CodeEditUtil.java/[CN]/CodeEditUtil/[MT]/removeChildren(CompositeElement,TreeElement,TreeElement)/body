{
  final CharTable charTableByTree=SharedImplUtil.findCharTableByTree(parent);
  final PsiManager manager=parent.getManager();
  final Project project=manager.getProject();
  CodeStyleSettings settings=CodeStyleSettingsManager.getSettings(project);
  final PsiFile file=SourceTreeToPsiMap.treeElementToPsi(parent).getContainingFile();
  FileType fileType=file.getFileType();
  Helper helper=new Helper(fileType,project);
  CodeFormatterFacade codeLayouter=new CodeFormatterFacade(settings,helper);
  IndentAdjusterFacade indentAdjuster=new IndentAdjusterFacade(settings,helper);
  TreeElement prev=first.getTreePrev();
  TreeElement next=last.getTreeNext();
  TreeElement prevNonSpace=(TreeElement)Helper.shiftBackwardToNonSpace(prev);
  ASTNode nextNonSpace=Helper.shiftForwardToNonSpace(next);
  TreeElement spaceBefore=Helper.getSpaceElement(parent,prevNonSpace,first);
  TreeElement spaceAfter=Helper.getSpaceElement(parent,last,nextNonSpace);
  TreeElement childNext;
  for (TreeElement child=first; child != next; child=childNext) {
    childNext=child.getTreeNext();
    ChangeUtil.removeChild(parent,child);
  }
  if (fileType == StdFileTypes.XHTML)   return;
  if (prevNonSpace == null && nextNonSpace == null) {
    if (spaceBefore != null) {
      ChangeUtil.removeChild(parent,spaceBefore);
    }
    if (spaceAfter != null) {
      ChangeUtil.removeChild(parent,spaceAfter);
    }
    LOG.assertTrue(parent.getTextLength() == 0);
    TreeElement elementBefore=(TreeElement)Helper.shiftBackwardToNonSpace(parent.getTreePrev());
    ASTNode elementAfter=Helper.shiftForwardToNonSpace(parent.getTreeNext());
    normalizeSpace(helper,parent.getTreeParent(),elementBefore,(TreeElement)elementAfter,charTableByTree);
    elementAfter=codeLayouter.processSpace(elementBefore,elementAfter);
    if (elementAfter != null) {
      elementAfter=indentAdjuster.adjustFirstLineIndent(elementAfter);
    }
    return;
  }
  int breaksBefore=spaceBefore != null ? StringUtil.getLineBreakCount(spaceBefore.getText()) : 0;
  int breaksAfter=spaceAfter != null ? StringUtil.getLineBreakCount(spaceAfter.getText()) : 0;
  normalizeSpace(helper,parent,prevNonSpace,(TreeElement)nextNonSpace,charTableByTree);
  int newBreaks=Math.max(breaksBefore,breaksAfter);
  if (newBreaks != breaksBefore + breaksAfter) {
    helper.makeLineBreaks(parent,prevNonSpace,nextNonSpace,newBreaks);
  }
  nextNonSpace=codeLayouter.processSpace(prevNonSpace,nextNonSpace);
  if (nextNonSpace != null) {
    nextNonSpace=indentAdjuster.adjustFirstLineIndent(nextNonSpace);
  }
}
