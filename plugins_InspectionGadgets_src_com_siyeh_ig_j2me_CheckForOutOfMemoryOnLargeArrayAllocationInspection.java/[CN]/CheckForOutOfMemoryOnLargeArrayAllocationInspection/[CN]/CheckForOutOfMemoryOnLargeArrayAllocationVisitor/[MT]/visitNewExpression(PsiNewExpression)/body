{
  super.visitNewExpression(expression);
  final PsiType type=expression.getType();
  if (!(type instanceof PsiArrayType)) {
    return;
  }
  int size=1;
  final PsiExpression[] dimensions=expression.getArrayDimensions();
  for (int i=0; i < dimensions.length; i++) {
    final PsiExpression dimension=dimensions[i];
    final Integer intValue=(Integer)ConstantExpressionUtil.computeCastTo(dimension,PsiType.INT);
    if (intValue != null) {
      size*=intValue.intValue();
    }
  }
  if (size <= m_limit) {
    return;
  }
  if (OOMECaught(expression)) {
    return;
  }
  registerError(expression);
}
