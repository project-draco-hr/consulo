{
  if (myName != null && element instanceof PsiMethod && !(element instanceof GrAccessorMethod) && myPlace instanceof GroovyPsiElement) {
    PsiMethod method=(PsiMethod)element;
    boolean lValue=PsiUtil.isLValue((GroovyPsiElement)myPlace);
    if (!lValue && GroovyPropertyUtils.isSimplePropertyGetter(method,myName) || lValue && GroovyPropertyUtils.isSimplePropertySetter(method,myName)) {
      if (method instanceof GrMethod && isFieldReferenceInSameClass(method,myName)) {
        return true;
      }
      super.execute(element,state);
    }
    return true;
  }
  if (myName == null || myName.equals(((PsiNamedElement)element).getName())) {
    if (element instanceof GrField && ((GrField)element).isProperty()) {
      boolean isAccessible=isAccessible((PsiNamedElement)element);
      boolean isStaticsOK=isStaticsOK((PsiNamedElement)element);
      myCandidates.add(new GroovyResolveResultImpl(element,myCurrentFileResolveContext,state.get(PsiSubstitutor.KEY),isAccessible,isStaticsOK));
      return true;
    }
    return super.execute(element,state);
  }
  return true;
}
