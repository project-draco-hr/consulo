{
  if (!CodeInsightUtilBase.preparePsiElementForWrite(descriptor.getPsiElement()))   return;
  final PsiModifierListOwner element=PsiTreeUtil.getParentOfType(descriptor.getPsiElement(),PsiModifierListOwner.class);
  if (element != null) {
    RefElement refElement=null;
    if (myManager != null) {
      refElement=myManager.getReference(element);
    }
    try {
      if (element instanceof PsiVariable) {
        ((PsiVariable)element).normalizeDeclaration();
      }
      PsiModifierList list=element.getModifierList();
      LOG.assertTrue(list != null);
      if (element instanceof PsiMethod) {
        PsiMethod psiMethod=(PsiMethod)element;
        PsiClass containingClass=psiMethod.getContainingClass();
        if (containingClass != null && containingClass.getParent() instanceof PsiFile && myHint == PsiModifier.PRIVATE && list.hasModifierProperty(PsiModifier.FINAL)) {
          list.setModifierProperty(PsiModifier.FINAL,false);
        }
      }
      list.setModifierProperty(myHint,true);
      if (refElement instanceof RefJavaElement) {
        RefJavaUtil.getInstance().setAccessModifier((RefJavaElement)refElement,myHint);
      }
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
  }
}
