{
  PsiType type=typeElement.getType();
  if (!type.accept(new PsiTypeVisitor<Boolean>(){
    public Boolean visitType(    PsiType type){
      return Boolean.FALSE;
    }
    public Boolean visitPrimitiveType(    PsiPrimitiveType primitiveType){
      return Boolean.TRUE;
    }
    public Boolean visitArrayType(    PsiArrayType arrayType){
      return arrayType.getComponentType().accept(this);
    }
    public Boolean visitClassType(    PsiClassType classType){
      if (classType.getParameters().length > 0) {
        PsiType javaLangClass=PsiType.getJavaLangClass(typeElement.getManager(),typeElement.getResolveScope());
        if (javaLangClass != null && javaLangClass.equals(classType.rawType())) {
          return Boolean.TRUE;
        }
        return Boolean.FALSE;
      }
      PsiClass aClass=classType.resolve();
      if (aClass != null && (aClass.isAnnotationType() || aClass.isEnum()))       return Boolean.TRUE;
      PsiManager manager=typeElement.getManager();
      GlobalSearchScope resolveScope=typeElement.getResolveScope();
      return classType.equals(PsiType.getJavaLangClass(manager,resolveScope)) || classType.equals(PsiType.getJavaLangString(manager,resolveScope)) ? Boolean.TRUE : Boolean.FALSE;
    }
  }
).booleanValue()) {
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,typeElement,INVALID_ANNOTATION_MEMBER_TYPE);
  }
  return null;
}
