{
  PsiAnnotationOwner owner=annotation.getOwner();
  if (!(owner instanceof PsiModifierList || owner instanceof PsiTypeElement || owner instanceof PsiMethodReceiver|| owner instanceof PsiTypeParameter))   return null;
  PsiElement member=((PsiElement)owner).getParent();
  String[] elementTypeFields=getApplicableElementTypeFields(owner instanceof PsiModifierList ? member : (PsiElement)owner);
  if (isAnnotationApplicableTo(annotation,false,elementTypeFields))   return null;
  PsiJavaCodeReferenceElement nameRef=annotation.getNameReferenceElement();
  String description=JavaErrorMessages.message("annotation.not.applicable",nameRef.getText(),JavaErrorMessages.message("annotation.target." + elementTypeFields[0]));
  return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,nameRef,description);
}
