{
  if (!(annotation.getParent() instanceof PsiModifierList))   return null;
  PsiElement owner=annotation.getParent().getParent();
  PsiJavaCodeReferenceElement nameRef=annotation.getNameReferenceElement();
  if (nameRef != null) {
    PsiElement resolved=nameRef.resolve();
    if (resolved instanceof PsiClass && ((PsiClass)resolved).isAnnotationType()) {
      PsiClass annotationType=(PsiClass)resolved;
      PsiAnnotation metaAnnotation=annotationType.getModifierList().findAnnotation(TARGET_ANNOTATION_FQ_NAME);
      if (metaAnnotation != null) {
        PsiNameValuePair[] attributes=metaAnnotation.getParameterList().getAttributes();
        if (attributes.length >= 1) {
          PsiField[] elementTypeFields=getElementTypeFields(owner);
          if (elementTypeFields == null)           return null;
          LOG.assertTrue(elementTypeFields.length > 0);
          for (          PsiField field : elementTypeFields) {
            PsiAnnotationMemberValue value=attributes[0].getValue();
            if (value instanceof PsiArrayInitializerMemberValue) {
              PsiAnnotationMemberValue[] initializers=((PsiArrayInitializerMemberValue)value).getInitializers();
              for (              PsiAnnotationMemberValue initializer : initializers) {
                if (initializer instanceof PsiReferenceExpression) {
                  PsiReferenceExpression refExpr=(PsiReferenceExpression)initializer;
                  if (refExpr.isReferenceTo(field))                   return null;
                }
              }
            }
 else             if (value instanceof PsiReferenceExpression) {
              if (((PsiReferenceExpression)value).isReferenceTo(field))               return null;
            }
          }
          return formatNotApplicableError(elementTypeFields[0],nameRef);
        }
      }
    }
  }
  return null;
}
