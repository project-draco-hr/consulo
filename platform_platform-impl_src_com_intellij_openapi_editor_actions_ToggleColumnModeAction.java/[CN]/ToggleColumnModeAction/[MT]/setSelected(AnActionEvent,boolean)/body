{
  final EditorEx editor=getEditor(e);
  final SelectionModel selectionModel=editor.getSelectionModel();
  if (state) {
    boolean hasSelection=selectionModel.hasSelection();
    int selStart=selectionModel.getSelectionStart();
    int selEnd=selectionModel.getSelectionEnd();
    final CaretModel caretModel=editor.getCaretModel();
    LogicalPosition blockStart=selStart == caretModel.getOffset() ? caretModel.getLogicalPosition() : editor.offsetToLogicalPosition(selStart);
    LogicalPosition blockEnd=selEnd == caretModel.getOffset() ? caretModel.getLogicalPosition() : editor.offsetToLogicalPosition(selEnd);
    editor.setColumnMode(true);
    if (hasSelection) {
      selectionModel.setBlockSelection(blockStart,blockEnd);
    }
 else {
      selectionModel.removeSelection();
    }
  }
 else {
    final boolean hasSelection=selectionModel.hasBlockSelection();
    final LogicalPosition blockStart=selectionModel.getBlockStart();
    final LogicalPosition blockEnd=selectionModel.getBlockEnd();
    int selStart=hasSelection && blockStart != null ? editor.logicalPositionToOffset(blockStart) : 0;
    int selEnd=hasSelection && blockEnd != null ? editor.logicalPositionToOffset(blockEnd) : 0;
    editor.setColumnMode(false);
    if (hasSelection) {
      selectionModel.setSelection(selStart,selEnd);
    }
 else {
      selectionModel.removeSelection();
    }
  }
}
