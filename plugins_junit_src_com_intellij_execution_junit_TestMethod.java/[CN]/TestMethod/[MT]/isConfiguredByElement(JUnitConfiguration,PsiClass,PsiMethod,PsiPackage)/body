{
  if (testMethod == null)   return false;
  final PsiClass containingClass=testMethod.getContainingClass();
  if (testClass == null && (containingClass == null || !containingClass.hasModifierProperty(PsiModifier.ABSTRACT)))   return false;
  final JUnitConfiguration.Data data=configuration.getPersistentData();
  if (containingClass != null && containingClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return Comparing.equal(testMethod.getName(),data.getMethodName());
  }
  return Comparing.equal(JavaExecutionUtil.getRuntimeQualifiedName(testClass),data.getMainClassName()) && Comparing.equal(testMethod.getName(),data.getMethodName());
}
