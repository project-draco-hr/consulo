{
  int initialCapacity=fullCollection();
  assertEquals(initialCapacity,myCollection.getCapacity());
  addElement(new Object());
  int grownCapacity=2 * initialCapacity;
  assertEquals(grownCapacity,myCollection.getCapacity());
  checkSameElements(null);
  myCollection.reduceCapacity(-1);
  assertEquals(grownCapacity,myCollection.getCapacity());
  myHolder.remove(0);
  gc();
  myCollection.reduceCapacity(-1);
  assertEquals(grownCapacity,myCollection.getCapacity());
  myHolder.remove(0);
  for (int i=0; i < grownCapacity; i++)   addElement(new Object());
  for (int i=0; i < grownCapacity; i++)   myHolder.remove(0);
  final int lastCapacity=myCollection.getCapacity();
  gc();
  checkSameNotNulls(null);
  myCollection.reduceCapacity(-1);
  assertTrue(lastCapacity > myCollection.getCapacity());
  checkSameElements(new Runnable(){
    @Override public void run(){
      myCollection.reduceCapacity(-1);
    }
  }
);
  myHolder.clear();
  gc();
  checkForSize(0,true);
  addElement(new Object());
  checkSameElements(null);
}
