{
  if (progress.isCancelled()) {
    return false;
  }
  final File[] files=file.listFiles();
  if (files != null) {
    for (    File child : files) {
      if (!collectModifiedClasses(child,filePath + "/" + child.getName(),rootPath,container,progress,timeStamp)) {
        return false;
      }
    }
  }
 else {
    if (SystemInfo.isFileSystemCaseSensitive ? StringUtil.endsWith(filePath,CLASS_EXTENSION) : StringUtil.endsWithIgnoreCase(filePath,CLASS_EXTENSION)) {
      if (file.lastModified() > timeStamp) {
        progress.setText(DebuggerBundle.message("progress.hotswap.scanning.path",filePath));
        final String qualifiedName=filePath.substring(rootPath.length(),filePath.length() - CLASS_EXTENSION.length()).replace('/','.');
        container.put(qualifiedName,new HotSwapFile(file));
      }
    }
  }
  return true;
}
