{
  int count=0;
  CharSequence text=document.getCharsSequence();
  int textLength=document.getTextLength();
  int offset=offsetRef[0];
  Project project=psiFile.getProject();
  FindManager findManager=FindManager.getInstance(project);
  while (offset < textLength) {
    FindResult result=findManager.findString(text,offset,findModel,psiFile.getVirtualFile());
    if (!result.isStringFound())     break;
    final SearchScope customScope=findModel.getCustomScope();
    if (customScope instanceof LocalSearchScope) {
      final TextRange range=new TextRange(result.getStartOffset(),result.getEndOffset());
      if (!((LocalSearchScope)customScope).containsRange(psiFile,range))       break;
    }
    UsageInfo info=new UsageInfo(psiFile,result.getStartOffset(),result.getEndOffset());
    if (!consumer.process(info)) {
      throw new ProcessCanceledException();
    }
    count++;
    final int prevOffset=offset;
    offset=result.getEndOffset();
    if (prevOffset == offset) {
      ++offset;
    }
    if (maxUsages > 0 && count >= maxUsages) {
      break;
    }
  }
  offsetRef[0]=offset;
  return count;
}
