{
  PsiElement psiElement=null;
  Project project=CommonDataKeys.PROJECT.getData(dataContext);
  if (project != null && !DumbServiceImpl.getInstance(project).isDumb()) {
    try {
      psiElement=CommonDataKeys.PSI_ELEMENT.getData(dataContext);
    }
 catch (    IndexNotReadyException ignore) {
    }
  }
  String directoryName=null;
  if (psiElement instanceof PsiDirectory) {
    directoryName=((PsiDirectory)psiElement).getVirtualFile().getPresentableUrl();
  }
  if (directoryName == null && psiElement instanceof PsiDirectoryContainer) {
    final PsiDirectory[] directories=((PsiDirectoryContainer)psiElement).getDirectories();
    directoryName=directories.length == 1 ? directories[0].getVirtualFile().getPresentableUrl() : null;
  }
  Module module=LangDataKeys.MODULE_CONTEXT.getData(dataContext);
  if (module != null) {
    model.setModuleName(module.getName());
  }
  Editor editor=CommonDataKeys.EDITOR.getData(dataContext);
  if (model.getModuleName() == null || editor == null) {
    model.setDirectoryName(directoryName);
    model.setProjectScope(directoryName == null && module == null && !model.isCustomScope() || editor != null);
    if (directoryName == null) {
      VirtualFile virtualFile=CommonDataKeys.VIRTUAL_FILE.getData(dataContext);
      if (virtualFile != null && !virtualFile.isDirectory())       virtualFile=virtualFile.getParent();
      if (virtualFile != null)       model.setDirectoryName(virtualFile.getPresentableUrl());
    }
  }
}
