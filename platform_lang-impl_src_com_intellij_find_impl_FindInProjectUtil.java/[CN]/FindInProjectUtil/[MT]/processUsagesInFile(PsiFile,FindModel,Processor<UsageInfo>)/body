{
  if (findModel.getStringToFind().isEmpty()) {
    if (!ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
      @Override public Boolean compute(){
        return consumer.process(new UsageInfo(psiFile,0,0,true));
      }
    }
)) {
      throw new ProcessCanceledException();
    }
    return 1;
  }
  final VirtualFile virtualFile=psiFile.getVirtualFile();
  if (virtualFile == null)   return 0;
  if (virtualFile.getFileType().isBinary())   return 0;
  final Document document=FileDocumentManager.getInstance().getDocument(virtualFile);
  if (document == null)   return 0;
  final int[] offset={0};
  int count=0;
  int found;
  ProgressIndicator indicator=ProgressWrapper.unwrap(ProgressManager.getInstance().getProgressIndicator());
  TooManyUsagesStatus tooManyUsagesStatus=TooManyUsagesStatus.getFrom(indicator);
  do {
    tooManyUsagesStatus.pauseProcessingIfTooManyUsages();
    found=ApplicationManager.getApplication().runReadAction(new Computable<Integer>(){
      @Override @NotNull public Integer compute(){
        if (!psiFile.isValid())         return 0;
        return addToUsages(document,consumer,findModel,psiFile,offset,USAGES_PER_READ_ACTION);
      }
    }
);
    count+=found;
  }
 while (found != 0);
  return count;
}
