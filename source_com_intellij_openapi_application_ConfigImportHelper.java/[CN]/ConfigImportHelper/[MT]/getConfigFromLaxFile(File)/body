{
  if (file.getName().endsWith(".properties")) {
    try {
      InputStream fis=new BufferedInputStream(new FileInputStream(file));
      PropertyResourceBundle bundle=new PropertyResourceBundle(fis);
      fis.close();
      return bundle.getString("idea.config.path");
    }
 catch (    IOException e) {
      return null;
    }
  }
  String fileContent=getContent(file);
  String configParam="idea.config.path=";
  int idx=fileContent.indexOf(configParam);
  if (idx == -1) {
    configParam="<key>idea.config.path</key>";
    idx=fileContent.indexOf(configParam);
    if (idx == -1)     return null;
    idx=fileContent.indexOf("<string>",idx);
    if (idx == -1)     return null;
    idx+="<string>".length();
    return fixDirName(fileContent.substring(idx,fileContent.indexOf("</string>",idx)),true);
  }
 else {
    String configDir="";
    idx+=configParam.length();
    if (fileContent.length() > idx) {
      if (fileContent.charAt(idx) == '"') {
        idx++;
        while ((fileContent.length() > idx) && (fileContent.charAt(idx) != '"') && (fileContent.charAt(idx) != '\n')&& (fileContent.charAt(idx) != '\r')) {
          configDir+=fileContent.charAt(idx);
          idx++;
        }
      }
 else {
        while ((fileContent.length() > idx) && (!Character.isSpaceChar(fileContent.charAt(idx))) && (fileContent.charAt(idx) != '\n')&& (fileContent.charAt(idx) != '\r')) {
          configDir+=fileContent.charAt(idx);
          idx++;
        }
      }
    }
    configDir=fixDirName(configDir,true);
    if (configDir.length() > 0) {
      configDir=(new File(configDir)).getPath();
    }
    return configDir;
  }
}
