{
  CvsConfiguration cvsConfiguration=CvsConfiguration.getInstance(myProject);
  if (!myLastUpdateWasConfigured) {
    cvsConfiguration.CLEAN_COPY=false;
    cvsConfiguration.RESET_STICKY=false;
  }
  myLastUpdateWasConfigured=false;
  try {
    final UpdateSettingsOnCvsConfiguration updateSettings=new UpdateSettingsOnCvsConfiguration(cvsConfiguration,cvsConfiguration.CLEAN_COPY,cvsConfiguration.RESET_STICKY);
    final UpdateHandler handler=CommandCvsHandler.createUpdateHandler(contentRoots,updateSettings,myProject,updatedFiles);
    handler.addCvsListener(new UpdatedFilesProcessor(updatedFiles));
    CvsOperationExecutor cvsOperationExecutor=new CvsOperationExecutor(true,myProject,ModalityState.defaultModalityState());
    cvsOperationExecutor.setShowErrors(false);
    cvsOperationExecutor.performActionSync(handler,new CvsOperationExecutorCallback(){
      public void executionFinished(      boolean successfully){
      }
      public void executionFinishedSuccessfully(){
      }
      public void executeInProgressAfterAction(      ModalityContext modaityContext){
      }
    }
);
    final CvsResult result=cvsOperationExecutor.getResult();
    return new UpdateSessionAdapter(result.getErrorsAndWarnings(),result.isCanceled() || !result.isLoggedIn()){
      public void onRefreshFilesCompleted(){
        final FileGroup mergedWithConflictsGroup=updatedFiles.getGroupById(FileGroup.MERGED_WITH_CONFLICT_ID);
        final FileGroup binaryMergedGroup=updatedFiles.getGroupById(CvsUpdatePolicy.BINARY_MERGED_ID);
        if (!mergedWithConflictsGroup.isEmpty() || !binaryMergedGroup.isEmpty()) {
          Collection<String> paths=new ArrayList<String>();
          paths.addAll(mergedWithConflictsGroup.getFiles());
          paths.addAll(binaryMergedGroup.getFiles());
          final List<VirtualFile> list=invokeManualMerging(paths,myProject);
          FileGroup mergedGroup=updatedFiles.getGroupById(FileGroup.MERGED_ID);
          for (          VirtualFile mergedFile : list) {
            String path=FileUtil.toSystemDependentName(mergedFile.getPresentableUrl());
            mergedWithConflictsGroup.remove(path);
            binaryMergedGroup.remove(path);
            mergedGroup.add(path);
          }
        }
      }
    }
;
  }
  finally {
    cvsConfiguration.CLEAN_COPY=false;
    cvsConfiguration.RESET_STICKY=false;
  }
}
