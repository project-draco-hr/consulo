{
  Collection<String> paths=mergedWithConflict.getFiles();
  Map<VirtualFile,List<String>> fileToRevisions=new LinkedHashMap<VirtualFile,List<String>>();
  for (  final String path : paths) {
    VirtualFile virtualFile=CvsVfsUtil.findFileByIoFile(new File(path));
    if (virtualFile != null) {
      final List<String> allRevisionsForFile=CvsUtil.getAllRevisionsForFile(virtualFile);
      if (!allRevisionsForFile.isEmpty())       fileToRevisions.put(virtualFile,allRevisionsForFile);
    }
  }
  if (!fileToRevisions.isEmpty()) {
    final List<VirtualFile> mergedFiles=new ArrayList<VirtualFile>(fileToRevisions.keySet());
    AbstractVcsHelper.getInstance(project).showMergeDialog(mergedFiles,new CvsMergeProvider(fileToRevisions,project),null);
  }
}
