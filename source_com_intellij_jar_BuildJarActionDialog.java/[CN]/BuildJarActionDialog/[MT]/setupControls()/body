{
  myElementsChooser=new ElementsChooser<ModuleChooserElement>();
  myModulesPanel.setLayout(new BorderLayout());
  myModulesPanel.add(myElementsChooser,BorderLayout.CENTER);
  final Module[] modules=ModuleManager.getInstance(myProject).getModules();
  for (  Module module : modules) {
    if (module.getModuleType().isJ2EE())     continue;
    ModuleChooserElement moduleChooserElement=new ModuleChooserElement(module,null);
    BuildJarSettings buildJarSettings=BuildJarSettings.getInstance(module);
    myElementsChooser.addElement(moduleChooserElement,buildJarSettings.isBuildJar(),moduleChooserElement);
  }
  myElementsChooser.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      if (myCurrentModule != null) {
        applyEditor(myCurrentModule);
      }
      ModuleChooserElement selectedElement=myElementsChooser.getSelectedElement();
      Module module=selectedElement == null ? null : selectedElement.getModule();
      if (module != null) {
        BuildJarSettings buildJarSettings=BuildJarSettings.getInstance(module);
        SettingsEditor settingsEditor=new SettingsEditor(module,buildJarSettings);
        mySettings.put(module,settingsEditor);
      }
      myCurrentModule=module;
    }
  }
);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      ModuleChooserElement element=myElementsChooser.getElementAt(0);
      myElementsChooser.selectElements(Collections.singletonList(element));
    }
  }
);
  GuiUtils.replaceJSplitPaneWithIDEASplitter(myPanel);
}
