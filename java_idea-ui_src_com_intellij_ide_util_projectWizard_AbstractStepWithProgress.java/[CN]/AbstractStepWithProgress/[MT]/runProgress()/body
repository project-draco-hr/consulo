{
  final MyProgressIndicator progress=new MyProgressIndicator();
  progress.setModalityProgress(null);
  final String title=getProgressText();
  if (title != null) {
    myTitleLabel.setText(title);
  }
  showCard(PROGRESS_PANEL);
  myProgressIndicator=progress;
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    Result result=ProgressManager.getInstance().runProcess(new Computable<Result>(){
      @Override public Result compute(){
        return calculate();
      }
    }
,progress);
    onFinished(result,false);
    return;
  }
  UiNotifyConnector.doWhenFirstShown(myPanel,new Runnable(){
    @Override public void run(){
      new SwingWorker(){
        public Object construct(){
          final Ref<Result> result=Ref.create(null);
          ProgressManager.getInstance().runProcess(new Runnable(){
            public void run(){
              result.set(calculate());
            }
          }
,progress);
          return result.get();
        }
        public void finished(){
          myProgressIndicator=null;
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            public void run(){
              final Result result=(Result)get();
              onFinished(result,progress.isCanceled());
              showCard(RESULTS_PANEL);
            }
          }
);
        }
      }
.start();
    }
  }
);
}
