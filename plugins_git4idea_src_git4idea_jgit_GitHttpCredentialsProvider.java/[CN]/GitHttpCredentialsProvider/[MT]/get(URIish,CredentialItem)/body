{
  CredentialItem.Username userNameItem=null;
  CredentialItem.Password passwordItem=null;
  for (  CredentialItem item : items) {
    if (item instanceof CredentialItem.Username) {
      userNameItem=(CredentialItem.Username)item;
    }
 else     if (item instanceof CredentialItem.Password) {
      passwordItem=(CredentialItem.Password)item;
    }
  }
  if (userNameItem != null || passwordItem != null) {
    String username=getUserNameFromUrl(myRemoteUrl);
    String password=null;
    if (username == null) {
      username=myUserName;
      password=myPassword;
    }
 else     if (username.equals(myUserName)) {
      password=myPassword;
    }
    boolean rememberPassword=myRememberPassword;
    boolean ok;
    if (username != null && password != null && !myShowDialog) {
      ok=true;
      myDialogShown=false;
    }
 else {
      final AuthDialog dialog=new AuthDialog(myProject,"Login required","Login to " + myRemoteUrl,username,password,false);
      UIUtil.invokeAndWaitIfNeeded(new Runnable(){
        @Override public void run(){
          dialog.show();
        }
      }
);
      ok=dialog.isOK();
      myDialogShown=true;
      if (ok) {
        username=dialog.getUsername();
        password=dialog.getPassword();
        rememberPassword=dialog.isRememberPassword();
      }
    }
    if (ok) {
      if (userNameItem != null) {
        userNameItem.setValue(username);
      }
      if (passwordItem != null) {
        passwordItem.setValue(password.toCharArray());
      }
      myRememberPassword=rememberPassword;
      myPassword=password;
      myUserName=username;
    }
 else {
      myCancelled=true;
      myRememberPassword=false;
    }
    return ok;
  }
  return true;
}
