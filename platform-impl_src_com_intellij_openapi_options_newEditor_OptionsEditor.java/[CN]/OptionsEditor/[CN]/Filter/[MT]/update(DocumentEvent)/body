{
  final String text=mySearch.getText();
  if (text == null || text.trim().length() == 0) {
    myContext.setHoldingFilter(false);
    myFiltered=null;
  }
 else {
    myContext.setHoldingFilter(true);
    myHits=myIndex.getConfigurables(myGroups,e.getType(),myFiltered,text,myProject);
    myFiltered=myHits.getAll();
  }
  if (myFiltered != null && myFiltered.size() == 0) {
    mySearch.getTextEditor().setBackground(LightColors.RED);
  }
 else {
    mySearch.getTextEditor().setBackground(UIUtil.getTextFieldBackground());
  }
  Configurable toSelect=null;
  final Configurable current=getContext().getCurrentConfigurable();
  boolean shouldMoveSelection=true;
  if (myHits != null && myHits.getNameFullHits().contains(current)) {
    shouldMoveSelection=false;
  }
  if (shouldMoveSelection && myFiltered != null && myFiltered.contains(current)) {
    shouldMoveSelection=false;
  }
  if (shouldMoveSelection && myHits != null) {
    if (myHits.getNameHits().size() > 0) {
      toSelect=suggestToSelect(myHits.getNameHits(),myHits.getNameFullHits());
    }
 else     if (myHits.getContentHits().size() > 0) {
      toSelect=suggestToSelect(myHits.getContentHits(),null);
    }
  }
  updateSpotlight(false);
  fireUpdate(myTree.findNodeFor(toSelect));
  myFilterFocumentWasChanged=true;
}
