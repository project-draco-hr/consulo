{
  final ActionCallback result=new ActionCallback();
  if (!myConfigurable2Componenet.containsKey(configurable)) {
    final ActionCallback readyCallback=myConfigurable2LoadCallback.get(configurable);
    if (readyCallback != null) {
      return readyCallback;
    }
    myConfigurable2LoadCallback.put(configurable,result);
    myLoadingDecorator.startLoading(false);
    ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
      public void run(){
        final JComponent c=configurable.createComponent();
        final SearchableConfigurable.Parent responsibleParent=myTree.getResponsibleParentFor(configurable);
        boolean reset=true;
        if (responsibleParent != null && myConfigurable2Componenet.containsKey(responsibleParent)) {
          reset=!responsibleParent.isResponsibleForChildren();
        }
        if (reset) {
          reset(configurable,false);
          if (responsibleParent != null && !myConfigurable2Componenet.containsKey(responsibleParent)) {
            final JComponent parentComp=responsibleParent.createComponent();
            myConfigurable2Componenet.put(responsibleParent,parentComp);
          }
        }
        UIUtil.invokeLaterIfNeeded(new Runnable(){
          public void run(){
            myConfigurable2Componenet.put(configurable,c);
            result.setDone();
            myConfigurable2LoadCallback.remove(configurable);
          }
        }
);
      }
    }
);
  }
 else {
    result.setDone();
  }
  return result;
}
