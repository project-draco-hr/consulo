{
  createFeedback();
  if (!myContainer.getChildren().isEmpty()) {
    FeedbackLayer layer=myContext.getArea().getFeedbackLayer();
    Point location=myContext.getLocation();
    myChildTarget=null;
    if (myHorizontal) {
      for (      RadComponent child : myContainer.getChildren()) {
        Rectangle childBounds=child.getBounds(layer);
        Rectangle margins=((RadViewComponent)child).getMargins();
        if (childBounds.x - margins.x <= location.x && location.x <= childBounds.getMaxX() + margins.width) {
          myChildTarget=child;
          break;
        }
      }
    }
 else {
      for (      RadComponent child : myContainer.getChildren()) {
        Rectangle childBounds=child.getBounds(layer);
        Rectangle margins=((RadViewComponent)child).getMargins();
        if (childBounds.y - margins.y <= location.y && location.y <= childBounds.getMaxY() + margins.height) {
          myChildTarget=child;
          break;
        }
      }
    }
    if (myChildTarget == null) {
      myChildTarget=getSideChildTarget();
    }
    Rectangle targetBounds=myChildTarget.getBounds(layer);
    Rectangle targetMargins=((RadViewComponent)myChildTarget).getMargins();
    if (myHorizontal) {
      myInsertBefore=location.x < targetBounds.getCenterX();
      if (myInsertBefore) {
        myInsertFeedback.setLocation(targetBounds.x - targetMargins.x,myBounds.y);
      }
 else {
        myInsertFeedback.setLocation(targetBounds.x + targetBounds.width + targetMargins.width,myBounds.y);
      }
    }
 else {
      myInsertBefore=location.y < targetBounds.getCenterY();
      if (myInsertBefore) {
        myInsertFeedback.setLocation(myBounds.x,targetBounds.y - targetMargins.y);
      }
 else {
        myInsertFeedback.setLocation(myBounds.x,targetBounds.y + targetBounds.height + targetMargins.height);
      }
    }
    layer.repaint();
  }
}
