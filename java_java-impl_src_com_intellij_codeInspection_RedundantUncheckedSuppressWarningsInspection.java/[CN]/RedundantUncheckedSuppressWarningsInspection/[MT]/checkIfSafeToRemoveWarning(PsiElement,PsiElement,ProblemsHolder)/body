{
  final HashSet<PsiReferenceExpression> warningsElements=new HashSet<PsiReferenceExpression>();
  collectUncheckedWarnings(placeToCheckWarningsIn,true,warningsElements);
  for (Iterator<PsiReferenceExpression> iterator=warningsElements.iterator(); iterator.hasNext(); ) {
    PsiReferenceExpression element=iterator.next();
    final PsiElement resolve=element.resolve();
    if (resolve instanceof PsiMethod && AnnotationUtil.isAnnotated((PsiMethod)resolve,"java.lang.SafeVarargs",false)) {
      iterator.remove();
    }
  }
  if (warningsElements.isEmpty()) {
    final int uncheckedIdx=suppressElement.getText().indexOf(RemoveUncheckedWarningFix.UNCHECKED);
    holder.registerProblem(suppressElement,uncheckedIdx > -1 ? new TextRange(uncheckedIdx,uncheckedIdx + RemoveUncheckedWarningFix.UNCHECKED.length()) : null,"Redundant suppression",new RemoveUncheckedWarningFix());
  }
}
