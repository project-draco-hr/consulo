{
  final PsiElement psiElement=descriptor.getPsiElement();
  if (psiElement instanceof PsiComment) {
    final Set<String> tools2Suppress=new LinkedHashSet<String>();
    if (collectCommentSuppresses(psiElement,tools2Suppress)) {
      tools2Suppress.remove(UNCHECKED);
      if (tools2Suppress.isEmpty()) {
        psiElement.delete();
      }
 else {
        psiElement.replace(JavaPsiFacade.getElementFactory(project).createCommentFromText("//" + SuppressionUtil.SUPPRESS_INSPECTIONS_TAG_NAME + " "+ StringUtil.join(tools2Suppress,", "),psiElement));
      }
    }
  }
 else   if (psiElement instanceof PsiAnnotation) {
    final PsiAnnotation annotation=(PsiAnnotation)psiElement;
    final PsiModifierList owner=(PsiModifierList)annotation.getOwner();
    final PsiModifierListOwner listOwner=PsiTreeUtil.getParentOfType(owner,PsiModifierListOwner.class);
    if (listOwner != null) {
      final Collection<String> tool2Suppress=SuppressManager.getInstance().getInspectionIdsSuppressedInAnnotation(listOwner);
      tool2Suppress.remove(UNCHECKED);
      if (tool2Suppress.isEmpty()) {
        annotation.delete();
      }
 else {
        annotation.replace(JavaPsiFacade.getElementFactory(project).createAnnotationFromText("@" + annotation.getQualifiedName() + "({"+ StringUtil.join(tool2Suppress,new Function<String,String>(){
          @Override public String fun(          String s){
            return "\"" + s + "\"";
          }
        }
,", ")+ "})",annotation));
      }
    }
  }
}
