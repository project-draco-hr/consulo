{
  final PsiClass psiClass=PsiTreeUtil.getChildOfType(file,PsiClass.class);
  if (psiClass == null) {
    return null;
  }
  final TestDataDescriptor cached=CACHE.get(psiClass.getQualifiedName());
  if (cached != null) {
    return cached.isComplete() ? cached : null;
  }
  TestFramework[] frameworks=Extensions.getExtensions(TestFramework.EXTENSION_NAME);
  TestFramework framework=null;
  for (  TestFramework each : frameworks) {
    if (each.isTestClass(psiClass)) {
      framework=each;
      break;
    }
  }
  if (framework == null) {
    return null;
  }
  final PsiElement setUpMethod=framework.findSetUpMethod(psiClass);
  final PsiElement tearDownMethod=framework.findTearDownMethod(psiClass);
  TestDataDescriptor descriptor=new TestDataDescriptor();
  for (  PsiMethod method : psiClass.getMethods()) {
    final String name=getTestName(method.getName());
    if (method == setUpMethod || method == tearDownMethod || name.equals(psiClass.getName())) {
      continue;
    }
    final Collection<VirtualFile> matchedFiles=getMatchedFiles(gotoModel,name);
    if (!descriptor.isComplete()) {
      descriptor.populate(name,matchedFiles);
    }
    if (descriptor.isComplete()) {
      CACHE.put(psiClass.getQualifiedName(),descriptor);
      return descriptor;
    }
  }
  CACHE.put(psiClass.getQualifiedName(),new TestDataDescriptor());
  return null;
}
