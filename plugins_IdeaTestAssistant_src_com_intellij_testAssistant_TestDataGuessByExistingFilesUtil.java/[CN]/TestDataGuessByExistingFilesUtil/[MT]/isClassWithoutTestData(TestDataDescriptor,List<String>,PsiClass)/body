{
  if (testNames.size() <= 1) {
    return false;
  }
  if (!descriptor.isComplete()) {
    return true;
  }
  boolean tooGenericNames=true;
  genericNamesLoop:   for (  String testName : testNames) {
    for (int i=0; i < testName.length(); i++) {
      if (!Character.isDigit(testName.charAt(i))) {
        tooGenericNames=false;
        break genericNamesLoop;
      }
    }
  }
  final String simpleClassName=getSimpleClassName(psiClass);
  if (tooGenericNames && (simpleClassName == null || !descriptor.myDescriptors.get(0).dir.toLowerCase().contains(simpleClassName.toLowerCase()))) {
    return true;
  }
  int toMatch=Math.max(2,testNames.size() / 2);
  for (  String testName : testNames) {
    if (toMatch <= 0) {
      return false;
    }
    final List<String> testDataFiles=descriptor.generate(testName);
    for (    String path : testDataFiles) {
      if (new File(path).isFile()) {
        toMatch--;
        break;
      }
    }
  }
  return toMatch > 0;
}
