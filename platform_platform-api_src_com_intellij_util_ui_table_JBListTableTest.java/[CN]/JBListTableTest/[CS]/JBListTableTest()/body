{
  super("Test");
  final JBTable t=new JBTable(new DefaultTableModel(new Object[][]{{"sdfasdfdsfds","werqwefsdfasdfasd"},{"sdfasdfdsfds","werqwefsdfasdfasd"},{"sdfasdfdsfds","werqwefsdfasdfasd"},{"sdfasdfdsfds","werqwefsdfasdfasd"},{"sdfasdfdsfds","werqwefsdfasdfasd"}},new Object[]{"Name","Value"}));
  final JBListTable table=new JBListTable(t){
    @Override protected JComponent getRowRenderer(    JTable table,    int row,    boolean selected,    boolean focused){
      final SimpleColoredComponent component=new SimpleColoredComponent();
      final JBTableRow r=getRowAt(row);
      component.append("Name: ",SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);
      component.append(r.getValueAt(0).toString());
      component.append(" Value: ",SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);
      component.append(r.getValueAt(1).toString());
      component.setBackground(selected ? table.getSelectionBackground() : table.getBackground());
      component.setForeground(selected ? table.getSelectionForeground() : table.getForeground());
      return component;
    }
    @Override protected JBTableRowEditor getRowEditor(    int row){
      return new JBTableRowEditor(){
        JTextField name=new JTextField();
        JTextField value=new JTextField();
        JCheckBox checkbox=new JCheckBox("Check me");
        @Override public void prepareEditor(        JTable table,        int row){
          final JBTableRow r=getRowAt(row);
          setLayout(new VerticalFlowLayout());
          final JPanel top=new JPanel(new BorderLayout());
          top.add(new JLabel("Name:"),BorderLayout.WEST);
          name.setText(r.getValueAt(0).toString());
          top.add(name,BorderLayout.CENTER);
          final JPanel bottom=new JPanel(new BorderLayout());
          bottom.add(new JLabel("Name:"),BorderLayout.WEST);
          value.setText(r.getValueAt(0).toString());
          bottom.add(value,BorderLayout.CENTER);
          add(top);
          add(bottom);
          add(checkbox);
        }
        @Override public JBTableRow getValue(){
          return new JBTableRow(){
            @Override public Object getValueAt(            int column){
              return column == 0 ? name.getText() : value.getText();
            }
          }
;
        }
        @Override public JComponent getPreferredFocusedComponent(){
          return name;
        }
        @Override public JComponent[] getFocusableComponents(){
          return new JComponent[]{name,value,checkbox};
        }
      }
;
    }
    @Override protected JBTableRow getRowAt(    final int row){
      return new JBTableRow(){
        @Override public Object getValueAt(        int column){
          return t.getValueAt(row,column);
        }
      }
;
    }
  }
;
  getContentPane().add(table);
  setDefaultCloseOperation(EXIT_ON_CLOSE);
  setSize(300,300);
  setVisible(true);
}
