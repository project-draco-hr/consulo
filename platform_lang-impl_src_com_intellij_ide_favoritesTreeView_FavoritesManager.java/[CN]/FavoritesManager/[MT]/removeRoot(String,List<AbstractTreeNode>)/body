{
  Collection<TreeItem<Pair<AbstractUrl,String>>> list=getFavoritesListRootUrls(name);
  if (elements.size() > 1) {
    final List<AbstractTreeNode> sublist=elements.subList(0,elements.size() - 1);
    for (    AbstractTreeNode obj : sublist) {
      final TreeItem<Pair<AbstractUrl,String>> item=findNextItem(obj,list);
      if (item == null || item.getChildren() == null)       return false;
      list=item.getChildren();
    }
  }
  TreeItem<Pair<AbstractUrl,String>> found=null;
  AbstractUrl url=createUrlByElement(elements.get(elements.size() - 1).getValue(),myProject);
  if (url == null)   return false;
  for (  TreeItem<Pair<AbstractUrl,String>> pair : list) {
    if (url.equals(pair.getData().getFirst())) {
      found=pair;
      break;
    }
  }
  if (found != null) {
    list.remove(found);
    fireListeners.rootsChanged(name);
    return true;
  }
  return false;
}
