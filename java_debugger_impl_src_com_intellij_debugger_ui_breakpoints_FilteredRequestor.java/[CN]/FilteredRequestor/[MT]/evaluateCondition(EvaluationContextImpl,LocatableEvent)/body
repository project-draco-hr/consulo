{
  if (COUNT_FILTER_ENABLED) {
    final DebugProcessImpl debugProcess=context.getDebugProcess();
    debugProcess.getVirtualMachineProxy().suspend();
    debugProcess.getRequestsManager().deleteRequest(this);
    ((Breakpoint)this).createRequest(debugProcess);
    debugProcess.getVirtualMachineProxy().resume();
  }
  if (INSTANCE_FILTERS_ENABLED) {
    Value value=context.getThisObject();
    if (value != null) {
      ObjectReference reference=(ObjectReference)value;
      if (!hasObjectID(reference.uniqueID())) {
        return false;
      }
    }
  }
  if (CONDITION_ENABLED && getCondition() != null && !"".equals(getCondition().getText())) {
    try {
      ExpressionEvaluator evaluator=DebuggerInvocationUtil.commitAndRunReadAction(context.getProject(),new EvaluatingComputable<ExpressionEvaluator>(){
        public ExpressionEvaluator compute() throws EvaluateException {
          final SourcePosition contextSourcePosition=ContextUtil.getSourcePosition(context);
          PsiElement contextPsiElement=ContextUtil.getContextElement(contextSourcePosition);
          if (contextPsiElement == null) {
            contextPsiElement=getEvaluationElement();
          }
          return EvaluatorBuilderImpl.getInstance().build(getCondition(),contextPsiElement,contextSourcePosition);
        }
      }
);
      final Value value=evaluator.evaluate(context);
      if (!(value instanceof BooleanValue)) {
        throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.boolean.expected"));
      }
      if (!((BooleanValue)value).booleanValue()) {
        return false;
      }
    }
 catch (    EvaluateException ex) {
      if (ex.getCause() instanceof VMDisconnectedException) {
        return false;
      }
      throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("error.failed.evaluating.breakpoint.condition",getCondition(),ex.getMessage()));
    }
    return true;
  }
  return true;
}
