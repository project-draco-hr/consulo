{
  Map<RepositoryNode,MyRepoModel> priorityLoading=ContainerUtil.newLinkedHashMap();
  Map<RepositoryNode,MyRepoModel> others=ContainerUtil.newLinkedHashMap();
  RepositoryNode nodeForCurrentEditor=findNodeByRepo(myCurrentlyOpenedRepository);
  for (  Map.Entry<RepositoryNode,MyRepoModel<?,?,?>> entry : myView2Model.entrySet()) {
    MyRepoModel model=entry.getValue();
    Repository repository=model.getRepository();
    RepositoryNode repoNode=entry.getKey();
    if (preselectByUser(repository)) {
      priorityLoading.put(repoNode,model);
    }
 else     if (model.getSupport().shouldRequestIncomingChangesForNotCheckedRepositories() && !repoNode.equals(nodeForCurrentEditor)) {
      others.put(repoNode,model);
    }
  }
  if (nodeForCurrentEditor != null) {
    priorityLoading.put(nodeForCurrentEditor,myView2Model.get(nodeForCurrentEditor));
  }
  loadCommitsFromMap(priorityLoading);
  loadCommitsFromMap(others);
}
