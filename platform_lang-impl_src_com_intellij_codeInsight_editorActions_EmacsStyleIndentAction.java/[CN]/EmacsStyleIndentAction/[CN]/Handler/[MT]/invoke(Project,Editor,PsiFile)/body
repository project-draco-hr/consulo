{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  if (!file.isWritable() && !FileDocumentManager.getInstance().requestWriting(editor.getDocument(),project)) {
    return;
  }
  final Document document=editor.getDocument();
  final int startOffset=editor.getCaretModel().getOffset();
  final int line=editor.offsetToLogicalPosition(startOffset).line;
  final int col=editor.getCaretModel().getLogicalPosition().column;
  final int lineStart=document.getLineStartOffset(line);
  final int initLineEnd=document.getLineEndOffset(line);
  try {
    final CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(project);
    final int newPos=codeStyleManager.adjustLineIndent(file,lineStart);
    final int newCol=newPos - lineStart;
    final int lineInc=document.getLineEndOffset(line) - initLineEnd;
    if (newCol >= col + lineInc) {
      final LogicalPosition pos=new LogicalPosition(line,newCol);
      editor.getCaretModel().moveToLogicalPosition(pos);
      editor.getSelectionModel().removeSelection();
      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
