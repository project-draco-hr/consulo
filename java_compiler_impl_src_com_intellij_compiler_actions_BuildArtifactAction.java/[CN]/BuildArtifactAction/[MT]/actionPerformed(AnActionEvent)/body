{
  final Project project=getEventProject(e);
  if (project == null)   return;
  final List<Artifact> artifacts=ArtifactUtil.getArtifactWithOutputPaths(project);
  if (artifacts.isEmpty())   return;
  final Artifact first=artifacts.get(0);
  List<ArtifactPopupItem> items=new ArrayList<ArtifactPopupItem>();
  if (artifacts.size() > 1) {
    items.add(0,new ArtifactPopupItem(null,"All Artifacts",EmptyIcon.ICON_16));
  }
  final Artifact selectedArtifact=ContainerUtil.getFirstItem(ArtifactsWorkspaceSettings.getInstance(project).getArtifactsToBuild());
  ArtifactPopupItem selectedItem=null;
  for (  Artifact artifact : artifacts) {
    final ArtifactPopupItem item=new ArtifactPopupItem(artifact,artifact.getName(),artifact.getArtifactType().getIcon());
    if (artifact.equals(selectedArtifact)) {
      selectedItem=item;
    }
    items.add(item);
  }
  final ProjectSettingsService projectSettingsService=ProjectSettingsService.getInstance(project);
  final ArtifactAwareProjectSettingsService settingsService=projectSettingsService instanceof ArtifactAwareProjectSettingsService ? (ArtifactAwareProjectSettingsService)projectSettingsService : null;
  final ChooseArtifactStep step=new ChooseArtifactStep(items,first,project,settingsService);
  if (selectedItem != null) {
    step.setDefaultOptionIndex(items.indexOf(selectedItem));
  }
  final ListPopupImpl popup=(ListPopupImpl)JBPopupFactory.getInstance().createListPopup(step);
  final KeyStroke editKeyStroke=KeymapUtil.getKeyStroke(CommonShortcuts.getEditSource());
  if (settingsService != null && editKeyStroke != null) {
    popup.registerAction("editArtifact",editKeyStroke,new AbstractAction(){
      @Override public void actionPerformed(      ActionEvent e){
        final ArtifactPopupItem item=(ArtifactPopupItem)popup.getSelectedValue();
        popup.cancel();
        settingsService.openArtifactSettings(item.getArtifact());
      }
    }
);
  }
  popup.showCenteredInCurrentWindow(project);
}
