{
  final Project project=getEventProject(e);
  if (project == null)   return;
  final List<Artifact> artifacts=ArtifactUtil.getArtifactWithOutputPaths(project);
  if (artifacts.isEmpty())   return;
  final Artifact first=artifacts.get(0);
  if (artifacts.size() > 1) {
    artifacts.add(0,null);
  }
  final ProjectSettingsService projectSettingsService=ProjectSettingsService.getInstance(project);
  final ArtifactAwareProjectSettingsService settingsService=projectSettingsService instanceof ArtifactAwareProjectSettingsService ? (ArtifactAwareProjectSettingsService)projectSettingsService : null;
  final ChooseArtifactStep step=new ChooseArtifactStep(artifacts,first,project,settingsService);
  final Artifact toSelect=ContainerUtil.getFirstItem(ArtifactsWorkspaceSettings.getInstance(project).getArtifactsToBuild());
  if (toSelect != null) {
    step.setDefaultOptionIndex(artifacts.indexOf(toSelect));
  }
  final ListPopupImpl popup=(ListPopupImpl)JBPopupFactory.getInstance().createListPopup(step);
  final KeyStroke editKeyStroke=KeymapUtil.getKeyStroke(CommonShortcuts.getEditSource());
  if (settingsService != null && editKeyStroke != null) {
    popup.registerAction("editArtifact",editKeyStroke,new AbstractAction(){
      @Override public void actionPerformed(      ActionEvent e){
        final Artifact artifact=(Artifact)popup.getSelectedValue();
        popup.cancel();
        settingsService.openArtifactSettings(artifact);
      }
    }
);
  }
  popup.showCenteredInCurrentWindow(project);
}
