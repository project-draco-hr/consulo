{
  final String qualifiedName=aClass.getQualifiedName();
  if (qualifiedName == null)   throw new IncorrectOperationException();
  final CompositeElement newRef=Parsing.parseJavaCodeReferenceText(getManager(),qualifiedName,SharedImplUtil.findCharTableByTree(this));
  if (getQualifier() != null) {
    replaceChildInternal(findChildByRole(ChildRole.QUALIFIER),newRef);
    return (PsiImportStaticStatement)getParent();
  }
 else {
    final LeafElement dot=Factory.createSingleLeafElement(ElementType.DOT,".",0,1,SharedImplUtil.findCharTableByTree(newRef),getManager());
    TreeUtil.insertAfter(newRef,dot);
    final CompositeElement errorElement=Factory.createErrorElement(JavaErrorMessages.message("import.statement.identifier.or.asterisk.expected."));
    TreeUtil.insertAfter(dot,errorElement);
    final CompositeElement parentComposite=((CompositeElement)SourceTreeToPsiMap.psiElementToTree(getParent()));
    parentComposite.addInternal(newRef,errorElement,this,Boolean.TRUE);
    parentComposite.deleteChildInternal(this);
    return (PsiImportStaticStatement)SourceTreeToPsiMap.treeElementToPsi(parentComposite);
  }
}
