{
  if (!shouldGenerateApk(item.myModule,context,unsigned)) {
    return;
  }
  try {
    final String[] externalLibPaths=getPaths(item.getExternalLibraries());
    final String resPackagePath=unsigned ? item.getResPackagePath() + AndroidResourcesPackagingCompiler.RELEASE_SUFFIX : item.getResPackagePath();
    final String finalPath=unsigned ? AndroidCommonUtils.addSuffixToFileName(item.getFinalPath(),AndroidCompileUtil.UNSIGNED_SUFFIX) : item.getFinalPath();
    final String[] sourceRoots=AndroidCompileUtil.toOsPaths(item.getSourceRoots());
    final String[] nativeLibsFolders=AndroidCompileUtil.toOsPaths(item.getNativeLibsFolders());
    final Project project=context.getProject();
    final Map<CompilerMessageCategory,List<String>> messages=AndroidCompileUtil.toCompilerMessageCategoryKeys(AndroidApkBuilder.execute(resPackagePath,item.getClassesDexPath(),sourceRoots,externalLibPaths,nativeLibsFolders,item.getAdditionalNativeLibs(),finalPath,unsigned,item.mySdkPath,item.getCustomKeystorePath(),new ExcludedSourcesFilter(project)));
    if (messages.get(CompilerMessageCategory.ERROR).size() == 0) {
      if (item.myReleaseBuild == unsigned) {
        final File dst=new File(AndroidCommonUtils.addSuffixToFileName(item.getFinalPath(),AndroidCommonUtils.ANDROID_FINAL_PACKAGE_FOR_ARTIFACT_SUFFIX));
        FileUtil.copy(new File(finalPath),dst);
        CompilerUtil.refreshIOFile(dst);
        final VirtualFile jar=JarFileSystem.getInstance().refreshAndFindFileByPath(dst.getPath() + "!/");
        if (jar != null) {
          jar.refresh(false,true);
        }
      }
    }
    AndroidCompileUtil.addMessages(context,messages,item.myModule);
  }
 catch (  final IOException e) {
    LOG.info(e);
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        if (context.getProject().isDisposed())         return;
        context.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),null,-1,-1);
      }
    }
);
  }
}
