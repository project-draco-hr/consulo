{
  if (!shouldGenerateApk(item.myModule,context,unsigned)) {
    return;
  }
  try {
    final String[] externalLibPaths=getPaths(item.getExternalLibraries());
    final String resPackagePath=unsigned ? item.getResPackagePath() + AndroidResourcesPackagingCompiler.RELEASE_SUFFIX : item.getResPackagePath();
    final String finalPath=unsigned ? item.getFinalPath() + UNSIGNED_SUFFIX : item.getFinalPath();
    final String[] sourceRoots=AndroidCompileUtil.toOsPaths(item.getSourceRoots());
    final String[] nativeLibsFolders=AndroidCompileUtil.toOsPaths(item.getNativeLibsFolders());
    final Project project=context.getProject();
    final Map<CompilerMessageCategory,List<String>> messages=AndroidCompileUtil.toCompilerMessageCategoryKeys(AndroidApkBuilder.execute(resPackagePath,item.getClassesDexPath(),sourceRoots,externalLibPaths,nativeLibsFolders,item.getAdditionalNativeLibs(),finalPath,unsigned,item.mySdkPath,item.getCustomKeystorePath(),new ExcludedSourcesFilter(project)));
    AndroidCompileUtil.addMessages(context,messages);
  }
 catch (  final IOException e) {
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        if (context.getProject().isDisposed())         return;
        context.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),null,-1,-1);
      }
    }
);
  }
}
