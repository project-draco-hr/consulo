{
  myResourceTimestamps.put(FileUtil.toSystemIndependentName(resPackagePath),new File(resPackagePath).lastModified());
  myResourceTimestamps.put(FileUtil.toSystemIndependentName(classesDexPath),new File(classesDexPath).lastModified());
  myApkPath=apkPath;
  myGenerateUnsignedApk=generateUnsignedApk;
  myReleaseBuild=releaseBuild;
  myCustomKeystorePath=customKeystorePath != null ? customKeystorePath : "";
  final HashSet<VirtualFile> resourcesFromSourceRoot=new HashSet<VirtualFile>();
  for (  VirtualFile sourceRoot : sourceRoots) {
    AndroidApkBuilder.collectStandardSourceFolderResources(sourceRoot,new HashSet<VirtualFile>(),resourcesFromSourceRoot,null);
  }
  for (  VirtualFile resource : resourcesFromSourceRoot) {
    myResourceTimestamps.put(resource.getPath(),resource.getTimeStamp());
  }
  for (  VirtualFile externalLib : externalLibs) {
    myResourceTimestamps.put(externalLib.getPath(),externalLib.getTimeStamp());
  }
  ArrayList<VirtualFile> nativeLibs=new ArrayList<VirtualFile>();
  for (  VirtualFile nativeLibFolder : nativeLibFolders) {
    for (    VirtualFile child : nativeLibFolder.getChildren()) {
      AndroidApkBuilder.collectNativeLibraries(child,nativeLibs,!releaseBuild);
    }
  }
  for (  VirtualFile nativeLib : nativeLibs) {
    myResourceTimestamps.put(nativeLib.getPath(),nativeLib.getTimeStamp());
  }
}
