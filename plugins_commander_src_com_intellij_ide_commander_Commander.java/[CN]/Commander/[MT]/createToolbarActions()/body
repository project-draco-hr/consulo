{
  final ActionManager actionManager=ActionManager.getInstance();
  final DefaultActionGroup group=new DefaultActionGroup();
  final AnAction backAction=new AnAction(){
    public void actionPerformed(    AnActionEvent e){
      myHistory.back();
    }
    public void update(    AnActionEvent e){
      super.update(e);
      e.getPresentation().setEnabled(myHistory.canGoBack());
    }
  }
;
  backAction.copyFrom(actionManager.getAction(IdeActions.ACTION_GOTO_BACK));
  group.add(backAction);
  final AnAction forwardAction=new AnAction(){
    public void actionPerformed(    AnActionEvent e){
      myHistory.forward();
    }
    public void update(    AnActionEvent e){
      super.update(e);
      e.getPresentation().setEnabled(myHistory.canGoForward());
    }
  }
;
  forwardAction.copyFrom(actionManager.getAction(IdeActions.ACTION_GOTO_FORWARD));
  group.add(forwardAction);
  group.add(actionManager.getAction(IdeActions.ACTION_COMMANDER_SWAP_PANELS));
  group.add(actionManager.getAction(IdeActions.ACTION_COMMANDER_SYNC_VIEWS));
  return group;
}
