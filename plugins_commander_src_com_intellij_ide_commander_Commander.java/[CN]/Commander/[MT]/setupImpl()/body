{
  mySelectionListener=new ListSelectionListener(){
    public void valueChanged(    final ListSelectionEvent e){
      updateToolWindowTitle();
    }
  }
;
  myListDataListener=new ListDataListener(){
    public void intervalAdded(    final ListDataEvent e){
      updateToolWindowTitle();
    }
    public void intervalRemoved(    final ListDataEvent e){
      updateToolWindowTitle();
    }
    public void contentsChanged(    final ListDataEvent e){
      updateToolWindowTitle();
    }
  }
;
  myFocusWatcher=new FocusWatcher();
  myLeftPanel=createPanel();
  myLeftPanel.addHistoryListener(new CommanderHistoryListener(){
    public void historyChanged(    final PsiElement selectedElement,    final boolean elementExpanded){
      getCommandHistory().saveState(selectedElement,elementExpanded,true);
    }
  }
);
  myRightPanel=createPanel();
  myRightPanel.addHistoryListener(new CommanderHistoryListener(){
    public void historyChanged(    final PsiElement selectedElement,    final boolean elementExpanded){
      getCommandHistory().saveState(selectedElement,elementExpanded,false);
    }
  }
);
  mySplitter=new Splitter();
  mySplitter.setFirstComponent(myLeftPanel);
  mySplitter.setSecondComponent(myRightPanel);
  add(mySplitter,BorderLayout.CENTER);
  final AutoScrollToSourceHandler handler=new AutoScrollToSourceHandler(){
    protected boolean isAutoScrollMode(){
      return myAutoScrollMode;
    }
    protected void setAutoScrollMode(    boolean state){
      myAutoScrollMode=state;
    }
  }
;
  handler.install(myLeftPanel.getList());
  handler.install(myRightPanel.getList());
  final boolean shouldAddToolbar=!ApplicationManager.getApplication().isUnitTestMode();
  if (shouldAddToolbar) {
    final DefaultActionGroup toolbarActions=createToolbarActions();
    toolbarActions.add(handler.createToggleAction());
    final ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.COMMANDER_TOOLBAR,toolbarActions,true);
    add(toolbar.getComponent(),BorderLayout.NORTH);
  }
  processConfigurationElement();
  myElement=null;
  myFocusWatcher.install(this);
  setupToolWindow();
}
