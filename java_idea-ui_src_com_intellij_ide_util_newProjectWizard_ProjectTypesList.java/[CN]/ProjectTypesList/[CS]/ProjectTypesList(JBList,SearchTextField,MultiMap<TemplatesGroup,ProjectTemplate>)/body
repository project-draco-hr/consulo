{
  myList=list;
  mySearchField=searchField;
  CollectionListModel<TemplateItem> model=new CollectionListModel<TemplateItem>(buildItems(map));
  myFilteringListModel=new FilteringListModel<TemplateItem>(model);
  myList.setCellRenderer(new GroupedItemsListRenderer(new ListItemDescriptor(){
    @Nullable @Override public String getTextFor(    Object value){
      return ((TemplateItem)value).getName();
    }
    @Nullable @Override public String getTooltipFor(    Object value){
      return null;
    }
    @Nullable @Override public Icon getIconFor(    Object value){
      return ((TemplateItem)value).getIcon();
    }
    @Override public boolean hasSeparatorAboveOf(    Object value){
      TemplateItem item=(TemplateItem)value;
      int index=myFilteringListModel.getElementIndex(item);
      return index == 0 || !myFilteringListModel.getElementAt(index - 1).getGroupName().equals(item.getGroupName());
    }
    @Nullable @Override public String getCaptionAboveOf(    Object value){
      return ((TemplateItem)value).getGroupName();
    }
  }
));
  myFilteringListModel.setFilter(new Condition<TemplateItem>(){
    @Override public boolean value(    TemplateItem item){
      return item.getMatchingDegree() > Integer.MIN_VALUE;
    }
  }
);
  myList.setModel(myFilteringListModel);
  mySearchField.addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      String text="*" + mySearchField.getText().trim();
      myMatcher=NameUtil.buildMatcher(text,NameUtil.MatchingCaseSensitivity.NONE);
      TemplateItem value=(TemplateItem)myList.getSelectedValue();
      int degree=value == null ? Integer.MIN_VALUE : value.getMatchingDegree();
      myBestMatch=Pair.create(degree > Integer.MIN_VALUE ? value : null,degree);
      myFilteringListModel.refilter();
      if (myBestMatch.first != null) {
        myList.setSelectedValue(myBestMatch.first,true);
      }
    }
  }
);
  new AnAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      InputEvent event=e.getInputEvent();
      if (event instanceof KeyEvent) {
        int row=myList.getSelectedIndex();
        int toSelect;
switch (((KeyEvent)event).getKeyCode()) {
case KeyEvent.VK_UP:
          toSelect=row == 0 ? myList.getItemsCount() - 1 : row - 1;
        myList.setSelectedIndex(toSelect);
      myList.ensureIndexIsVisible(toSelect);
    break;
case KeyEvent.VK_DOWN:
  toSelect=row < myList.getItemsCount() - 1 ? row + 1 : 0;
myList.setSelectedIndex(toSelect);
myList.ensureIndexIsVisible(toSelect);
break;
}
}
}
}
.registerCustomShortcutSet(new CustomShortcutSet(KeyEvent.VK_UP,KeyEvent.VK_DOWN),mySearchField);
}
