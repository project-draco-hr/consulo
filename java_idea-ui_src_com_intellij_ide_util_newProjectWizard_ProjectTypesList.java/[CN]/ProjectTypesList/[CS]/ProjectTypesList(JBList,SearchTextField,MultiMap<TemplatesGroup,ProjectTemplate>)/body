{
  myList=list;
  mySearchField=searchField;
  CollectionListModel<Item> model=new CollectionListModel<Item>(buildItems(map));
  myFilteringListModel=new FilteringListModel<Item>(model);
  myList.setCellRenderer(new ColoredListCellRenderer(){
    @Override protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      Item item=(Item)value;
      boolean group=item instanceof GroupItem;
      append(item.getName(),group ? SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES);
      setIcon(item.getIcon());
      setIpad(group ? new Insets(2,2,2,2) : new Insets(2,20,2,2));
    }
  }
);
  myFilteringListModel.setFilter(new Condition<Item>(){
    @Override public boolean value(    Item item){
      return item.getMatchingDegree() > Integer.MIN_VALUE;
    }
  }
);
  myList.setModel(myFilteringListModel);
  mySearchField.addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      String text="*" + mySearchField.getText().trim();
      myMatcher=NameUtil.buildMatcher(text,NameUtil.MatchingCaseSensitivity.NONE);
      Item value=(Item)myList.getSelectedValue();
      int degree=value == null ? Integer.MIN_VALUE : value.getMatchingDegree();
      myBestMatch=Pair.create(degree > Integer.MIN_VALUE ? value : null,degree);
      myFilteringListModel.refilter();
      if (myBestMatch.first != null) {
        myList.setSelectedValue(myBestMatch.first,true);
      }
    }
  }
);
  new AnAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      InputEvent event=e.getInputEvent();
      if (event instanceof KeyEvent) {
        int row=myList.getSelectedIndex();
        int toSelect;
switch (((KeyEvent)event).getKeyCode()) {
case KeyEvent.VK_UP:
          toSelect=row == 0 ? myList.getItemsCount() - 1 : row - 1;
        myList.setSelectedIndex(toSelect);
      myList.ensureIndexIsVisible(toSelect);
    break;
case KeyEvent.VK_DOWN:
  toSelect=row < myList.getItemsCount() - 1 ? row + 1 : 0;
myList.setSelectedIndex(toSelect);
myList.ensureIndexIsVisible(toSelect);
break;
}
}
}
}
.registerCustomShortcutSet(new CustomShortcutSet(KeyEvent.VK_UP,KeyEvent.VK_DOWN),mySearchField);
}
