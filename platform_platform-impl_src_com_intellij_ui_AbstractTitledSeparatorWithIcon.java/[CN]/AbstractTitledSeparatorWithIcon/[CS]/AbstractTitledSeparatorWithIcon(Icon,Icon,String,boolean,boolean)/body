{
  myIcon=icon;
  myIconOpen=iconOpen;
  setLayout(new GridBagLayout());
  myLabel=new JLabel(icon);
  add(myLabel,new GridBagConstraints(0,0,1,1,0,1,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,0,8),0,0));
  Color oldColor=UIManager.getColor("Separator.foreground");
  UIManager.put("Separator.foreground",UIUtil.getBorderColor());
  mySeparator=new JSeparator(SwingConstants.HORIZONTAL);
  UIManager.put("Separator.foreground",oldColor);
  GridBagConstraints gb=new GridBagConstraints(1,0,GridBagConstraints.REMAINDER,1,1,1,GridBagConstraints.CENTER,GridBagConstraints.HORIZONTAL,new Insets(3,0,0,0),0,0);
  add(mySeparator,gb);
  setBorder(IdeBorderFactory.createEmptyBorder(3,0,5,5));
  myLabel.setFont(UIUtil.getBorderFont(smallFont ? UIUtil.FontSize.SMALL : UIUtil.FontSize.NORMAL,boldFont));
  myLabel.setForeground(UIUtil.getTitledBorderTitleColor());
  originalText=text;
  myLabel.setText(UIUtil.replaceMnemonicAmpersand(originalText));
  ++gb.gridy;
  gb.gridx=0;
  gb.fill=GridBagConstraints.BOTH;
  gb.anchor=GridBagConstraints.NORTHWEST;
  myWrapper=new JPanel(new BorderLayout());
  add(myWrapper,gb);
  myLabel.addMouseListener(new MouseAdapter(){
    @Override public void mouseReleased(    MouseEvent e){
      if (myOn) {
        off();
      }
 else {
        on();
      }
    }
    @Override public void mouseEntered(    MouseEvent e){
      setCursor(new Cursor(Cursor.HAND_CURSOR));
    }
    @Override public void mouseExited(    MouseEvent e){
      setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }
  }
);
}
