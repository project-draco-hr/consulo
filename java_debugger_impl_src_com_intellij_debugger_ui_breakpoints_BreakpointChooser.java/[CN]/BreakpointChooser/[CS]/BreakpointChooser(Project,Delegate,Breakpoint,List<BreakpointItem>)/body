{
  myDelegate=delegate;
  BreakpointItem breakpointItem=null;
  for (  BreakpointItem item : breakpointItems) {
    if (item.getBreakpoint() == baseBreakpoint) {
      breakpointItem=item;
      break;
    }
  }
  myDetailController=new DetailController(new MasterController(){
    JLabel fake=new JLabel();
    @Override public ItemWrapper[] getSelectedItems(){
      return new ItemWrapper[]{((BreakpointItem)myList.getSelectedValue())};
    }
    @Override public JLabel getPathLabel(){
      return fake;
    }
  }
);
  final ItemWrapperListRenderer listRenderer=new ItemWrapperListRenderer(project,null);
  ComboBoxModel model=new CollectionComboBoxModel(breakpointItems,breakpointItem);
  myComboBox=new ComboBox(model){
    @Override protected JBList createJBList(    ComboBoxModel model){
      myList=super.createJBList(model);
      myDetailController.setList(myList);
      myList.setCellRenderer(listRenderer);
      return myList;
    }
  }
;
  myComboBox.setRenderer(listRenderer);
  myComboBox.setSwingPopup(false);
  myComboBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent event){
      myDelegate.breakpointChosen(project,((BreakpointItem)myComboBox.getSelectedItem()));
    }
  }
);
}
