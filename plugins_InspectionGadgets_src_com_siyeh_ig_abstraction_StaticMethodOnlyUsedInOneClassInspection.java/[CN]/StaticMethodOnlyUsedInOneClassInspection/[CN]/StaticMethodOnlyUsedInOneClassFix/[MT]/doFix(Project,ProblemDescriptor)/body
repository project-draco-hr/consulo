{
  final PsiElement location=descriptor.getPsiElement();
  final PsiMethod method=(PsiMethod)location.getParent();
  final Application application=ApplicationManager.getApplication();
  final RefactoringActionHandlerFactory factory=RefactoringActionHandlerFactory.getInstance();
  final RefactoringActionHandler moveHandler=factory.createMoveHandler();
  final DataManager dataManager=DataManager.getInstance();
  final DataContext originalContext=dataManager.getDataContext();
  final DataContext dataContext=new DataContext(){
    @Override public Object getData(    @NonNls String name){
      if (LangDataKeys.TARGET_PSI_ELEMENT.is(name)) {
        return usageClass.getElement();
      }
      return originalContext.getData(name);
    }
  }
;
  final Runnable runnable=new Runnable(){
    @Override public void run(){
      moveHandler.invoke(project,new PsiElement[]{method},dataContext);
    }
  }
;
  if (application.isUnitTestMode()) {
    runnable.run();
  }
 else {
    application.invokeLater(runnable,project.getDisposed());
  }
}
