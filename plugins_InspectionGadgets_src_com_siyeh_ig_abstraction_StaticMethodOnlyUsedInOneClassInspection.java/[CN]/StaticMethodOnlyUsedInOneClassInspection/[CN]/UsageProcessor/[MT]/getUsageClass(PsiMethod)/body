{
  final ProgressManager progressManager=ProgressManager.getInstance();
  final PsiManager manager=method.getManager();
  final PsiSearchHelper searchHelper=manager.getSearchHelper();
  final String name=method.getName();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(method.getProject());
  final FindUsagesCostProcessor costProcessor=new FindUsagesCostProcessor();
  searchHelper.processAllFilesWithWord(name,scope,costProcessor,true);
  if (costProcessor.isCostTooHigh()) {
    return null;
  }
  progressManager.runProcess(new Runnable(){
    public void run(){
      final Query<PsiReference> query=MethodReferencesSearch.search(method);
      query.forEach(UsageProcessor.this);
    }
  }
,null);
synchronized (this) {
    return usageClass;
  }
}
