{
  CachedValue<T> value;
  if (dataHolder instanceof UserDataHolderEx) {
    UserDataHolderEx dh=(UserDataHolderEx)dataHolder;
    value=dh.getUserData(key);
    if (value instanceof CachedValueBase && !((CachedValueBase)value).isFromMyProject(myProject)) {
      value=null;
      dh.putUserData(key,null);
    }
    if (value == null) {
      value=createCachedValue(provider,trackValue);
      assert((CachedValueBase)value).isFromMyProject(myProject);
      value=dh.putUserDataIfAbsent(key,value);
    }
  }
 else {
synchronized (dataHolder) {
      value=dataHolder.getUserData(key);
      if (value instanceof CachedValueBase && !((CachedValueBase)value).isFromMyProject(myProject)) {
        value=null;
      }
      if (value == null) {
        value=createCachedValue(provider,trackValue);
        dataHolder.putUserData(key,value);
      }
    }
  }
  return value.getValue();
}
