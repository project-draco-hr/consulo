{
  if (project != null && (!project.isDefault()) && project.getBaseDir() != null && VfsUtil.isAncestor(project.getBaseDir(),mapRoot,false)) {
    mapRoot.refresh(false,false);
    final String path=mapRoot.equals(project.getBaseDir()) ? "" : mapRoot.getPath();
    final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(project);
    final List<VcsDirectoryMapping> vcsDirectoryMappings=new ArrayList<VcsDirectoryMapping>(vcsManager.getDirectoryMappings());
    VcsDirectoryMapping mapping=new VcsDirectoryMapping(path,HgVcs.VCS_NAME);
    for (int i=0; i < vcsDirectoryMappings.size(); i++) {
      final VcsDirectoryMapping m=vcsDirectoryMappings.get(i);
      if (m.getDirectory().equals(path)) {
        if (m.getVcs().length() == 0) {
          vcsDirectoryMappings.set(i,mapping);
          mapping=null;
          break;
        }
 else         if (m.getVcs().equals(mapping.getVcs())) {
          mapping=null;
          break;
        }
      }
    }
    if (mapping != null) {
      vcsDirectoryMappings.add(mapping);
    }
    vcsManager.setDirectoryMappings(vcsDirectoryMappings);
    vcsManager.updateActiveVcss();
  }
}
