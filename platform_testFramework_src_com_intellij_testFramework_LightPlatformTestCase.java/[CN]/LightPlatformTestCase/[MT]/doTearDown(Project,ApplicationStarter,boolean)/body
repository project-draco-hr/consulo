{
  DocumentCommitThread.getInstance().clearQueue();
  CodeStyleSettingsManager.getInstance(project).dropTemporarySettings();
  checkAllTimersAreDisposed();
  UsefulTestCase.doPostponedFormatting(project);
  LookupManager lookupManager=LookupManager.getInstance(project);
  if (lookupManager != null) {
    lookupManager.hideActiveLookup();
  }
  ((StartupManagerImpl)StartupManager.getInstance(project)).prepareForNextTest();
  InspectionProfileManager.getInstance().deleteProfile(PROFILE);
  assertNotNull("Application components damaged",ProjectManager.getInstance());
  new WriteCommandAction.Simple(project){
    @Override @RequiredWriteAction protected void run() throws Throwable {
      if (ourSourceRoot != null) {
        try {
          final VirtualFile[] children=ourSourceRoot.getChildren();
          for (          VirtualFile child : children) {
            child.delete(this);
          }
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
      EncodingManager encodingManager=EncodingManager.getInstance();
      if (encodingManager instanceof EncodingManagerImpl)       ((EncodingManagerImpl)encodingManager).clearDocumentQueue();
      FileDocumentManager manager=FileDocumentManager.getInstance();
      ApplicationManager.getApplication().runWriteAction(EmptyRunnable.getInstance());
      manager.saveAllDocuments();
      if (manager instanceof FileDocumentManagerImpl) {
        ((FileDocumentManagerImpl)manager).dropAllUnsavedDocuments();
      }
    }
  }
.execute().throwException();
  assertFalse(PsiManager.getInstance(project).isDisposed());
  if (!ourAssertionsInTestDetected) {
    if (IdeaLogger.ourErrorsOccurred != null) {
      throw IdeaLogger.ourErrorsOccurred;
    }
  }
  PsiDocumentManagerImpl documentManager=clearUncommittedDocuments(project);
  ((HintManagerImpl)HintManager.getInstance()).cleanup();
  DocumentCommitThread.getInstance().clearQueue();
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      ((UndoManagerImpl)UndoManager.getGlobalInstance()).dropHistoryInTests();
      ((UndoManagerImpl)UndoManager.getInstance(project)).dropHistoryInTests();
      UIUtil.dispatchAllInvocationEvents();
    }
  }
);
  TemplateDataLanguageMappings.getInstance(project).cleanupForNextTest();
  ProjectManagerEx.getInstanceEx().closeTestProject(project);
  ourTestCase=null;
  ((PsiManagerImpl)PsiManager.getInstance(project)).cleanupForNextTest();
  CompletionProgressIndicator.cleanupForNextTest();
  if (checkForEditors) {
    checkEditorsReleased();
  }
  if (isLight(project)) {
    ((ProjectImpl)project).setTemporarilyDisposed(true);
    documentManager.clearUncommittedDocuments();
  }
}
