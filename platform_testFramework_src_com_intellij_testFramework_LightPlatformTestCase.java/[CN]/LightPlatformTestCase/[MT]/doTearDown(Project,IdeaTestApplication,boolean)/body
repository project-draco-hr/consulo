{
  checkAllTimersAreDisposed();
  UsefulTestCase.doPostponedFormatting(project);
  LookupManager lookupManager=LookupManager.getInstance(project);
  if (lookupManager != null) {
    lookupManager.hideActiveLookup();
  }
  ((StartupManagerImpl)StartupManager.getInstance(project)).prepareForNextTest();
  InspectionProfileManager.getInstance().deleteProfile(PROFILE);
  assertNotNull("Application components damaged",ProjectManager.getInstance());
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      if (ourSourceRoot != null) {
        try {
          final VirtualFile[] children=ourSourceRoot.getChildren();
          for (          VirtualFile child : children) {
            child.delete(this);
          }
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
      EncodingManager encodingManager=EncodingManager.getInstance();
      if (encodingManager instanceof EncodingManagerImpl)       ((EncodingManagerImpl)encodingManager).drainDocumentQueue();
      FileDocumentManager manager=FileDocumentManager.getInstance();
      if (manager instanceof FileDocumentManagerImpl) {
        ((FileDocumentManagerImpl)manager).dropAllUnsavedDocuments();
      }
      ApplicationManager.getApplication().runWriteAction(EmptyRunnable.getInstance());
      manager.saveAllDocuments();
    }
  }
);
  assertFalse(PsiManager.getInstance(project).isDisposed());
  if (!ourAssertionsInTestDetected) {
    if (IdeaLogger.ourErrorsOccurred != null) {
      throw IdeaLogger.ourErrorsOccurred;
    }
  }
  ((PsiDocumentManagerImpl)PsiDocumentManager.getInstance(project)).clearUncommitedDocuments();
  ((UndoManagerImpl)UndoManager.getGlobalInstance()).dropHistoryInTests();
  ProjectManagerEx.getInstanceEx().setCurrentTestProject(null);
  application.setDataProvider(null);
  ourTestCase=null;
  ((PsiManagerImpl)PsiManager.getInstance(project)).cleanupForNextTest();
  CompletionProgressIndicator.cleanupForNextTest();
  if (checkForEditors) {
    checkEditorsReleased();
  }
}
