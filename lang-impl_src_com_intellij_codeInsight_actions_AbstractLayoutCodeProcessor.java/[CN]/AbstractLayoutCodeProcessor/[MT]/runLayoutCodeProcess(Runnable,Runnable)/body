{
  final ProgressWindow progressWindow=new ProgressWindow(true,myProject);
  progressWindow.setTitle(myCommandName);
  progressWindow.setText(myProgressText);
  final ModalityState modalityState=ModalityState.current();
  final Runnable process=new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runReadAction(readAction);
    }
  }
;
  Runnable runnable=new Runnable(){
    public void run(){
      try {
        ProgressManager.getInstance().runProcess(process,progressWindow);
      }
 catch (      ProcessCanceledException e) {
        return;
      }
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
            public void run(){
              CommandProcessor.getInstance().markCurrentCommandAsComplex(myProject);
              ApplicationManager.getApplication().runWriteAction(writeAction);
              if (myPostRunnable != null) {
                ApplicationManager.getApplication().invokeLater(myPostRunnable);
              }
            }
          }
,myCommandName,null);
        }
      }
,modalityState);
    }
  }
;
  ApplicationManager.getApplication().executeOnPooledThread(runnable);
}
