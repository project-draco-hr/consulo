{
  myListener.addMessage(new MessageEvent(message,error,tagged));
  if (message.isEmpty()) {
    return;
  }
  if (isFileMessage(message)) {
    lastMessage=MessageType.FILE_MESSAGE;
    myListener.addFileMessage(message,myCvsFileSystem);
    return;
  }
  if (isMessage(message)) {
    lastMessage=MessageType.MESSAGE;
    myListener.addMessage(message);
    return;
  }
  if (!error)   return;
  final CvsMessagePattern errorMessagePattern=getErrorMessagePattern(message,ERRORS_PATTERNS);
  if (errorMessagePattern != null) {
    if (message.contains(CORRECT_ABOVE_ERRORS_FIRST_PREFIX)) {
      for (      String s : myPreviousErrorMessages) {
        myListener.addError(s,null,myCvsFileSystem,myCvsRoot,false);
      }
      myPreviousErrorMessages.clear();
      return;
    }
    final String relativeFileName=errorMessagePattern.getRelativeFileName(message);
    lastMessage=MessageType.ERROR;
    myListener.addError(message,relativeFileName,myCvsFileSystem,myCvsRoot,false);
    return;
  }
  final CvsMessagePattern warningMessagePattern=getErrorMessagePattern(message,WARNINGS_PATTERNS);
  if (warningMessagePattern != null) {
    lastMessage=MessageType.WARNING;
    myListener.addError(message,warningMessagePattern.getRelativeFileName(message),myCvsFileSystem,myCvsRoot,true);
    return;
  }
  if (message.trim().isEmpty())   return;
  if (lastMessage == MessageType.ERROR) {
    myListener.addError(message,null,myCvsFileSystem,myCvsRoot,false);
  }
 else   if (lastMessage == MessageType.WARNING) {
    myListener.addError(message,null,myCvsFileSystem,myCvsRoot,true);
  }
 else   if (error) {
    myPreviousErrorMessages.add(message);
  }
}
