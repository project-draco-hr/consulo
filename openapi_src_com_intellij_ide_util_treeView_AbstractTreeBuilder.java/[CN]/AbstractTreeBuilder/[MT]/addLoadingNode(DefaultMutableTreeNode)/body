{
  final NodeDescriptor descriptor=(NodeDescriptor)node.getUserObject();
  if (!isAlwaysShowPlus(descriptor)) {
    if (myTreeStructure.isToBuildChildrenInBackground(getTreeStructureElement(descriptor))) {
      final boolean[] hasNoChildren=new boolean[1];
      Runnable runnable=new Runnable(){
        public void run(){
          updateNodeDescriptor(descriptor);
          Object element=getTreeStructureElement(descriptor);
          if (element == null)           return;
          Object[] children=myTreeStructure.getChildElements(element);
          hasNoChildren[0]=children.length == 0;
        }
      }
;
      Runnable postRunnable=new Runnable(){
        public void run(){
          if (hasNoChildren[0]) {
            updateNodeDescriptor(descriptor);
            Object element=descriptor.getElement();
            if (element != null) {
              DefaultMutableTreeNode node=getNodeForElement(element);
              if (node != null) {
                myTree.expandPath(new TreePath(node.getPath()));
              }
            }
          }
        }
      }
;
      addTaskToWorker(runnable,false,postRunnable);
    }
 else {
      Object[] children=myTreeStructure.getChildElements(getTreeStructureElement(descriptor));
      if (children.length == 0)       return;
    }
  }
  myTreeModel.insertNodeInto(new LoadingNode(),node,0);
  myUnbuiltNodes.add(node);
}
