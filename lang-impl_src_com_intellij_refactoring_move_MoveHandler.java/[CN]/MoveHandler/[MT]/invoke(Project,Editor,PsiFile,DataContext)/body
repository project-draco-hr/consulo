{
  int offset=editor.getCaretModel().getOffset();
  editor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
  PsiElement element=file.findElementAt(offset);
  while (true) {
    if (element == null) {
      String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("the.caret.should.be.positioned.at.the.class.method.or.field.to.be.refactored"));
      CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME,message,null,project);
      return;
    }
    if (tryToMoveElement(element,project,dataContext,null)) {
      return;
    }
    final TextRange range=element.getTextRange();
    if (range != null) {
      int relative=offset - range.getStartOffset();
      final PsiReference reference=element.findReferenceAt(relative);
      if (reference != null) {
        final PsiElement refElement=reference.resolve();
        if (refElement != null && tryToMoveElement(refElement,project,dataContext,reference))         return;
      }
    }
    element=element.getParent();
  }
}
