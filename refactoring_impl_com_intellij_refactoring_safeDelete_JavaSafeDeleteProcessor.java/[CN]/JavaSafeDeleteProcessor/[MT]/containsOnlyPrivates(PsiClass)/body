{
  final PsiField[] fields=aClass.getFields();
  for (  PsiField field : fields) {
    if (!field.hasModifierProperty(PsiModifier.PRIVATE))     return false;
  }
  final PsiMethod[] methods=aClass.getMethods();
  for (  PsiMethod method : methods) {
    if (!method.hasModifierProperty(PsiModifier.PRIVATE)) {
      if (method.isConstructor()) {
        final PsiCodeBlock body=method.getBody();
        if (body != null) {
          final PsiStatement[] statements=body.getStatements();
          if (statements.length == 0)           continue;
          if (statements.length == 1 && statements[0] instanceof PsiExpressionStatement) {
            final PsiExpression expression=((PsiExpressionStatement)statements[0]).getExpression();
            if (expression instanceof PsiMethodCallExpression) {
              PsiReferenceExpression methodExpression=((PsiMethodCallExpression)expression).getMethodExpression();
              if (methodExpression.getText().equals(PsiKeyword.SUPER)) {
                continue;
              }
            }
          }
        }
      }
      return false;
    }
  }
  final PsiClass[] inners=aClass.getInnerClasses();
  for (  PsiClass inner : inners) {
    if (!inner.hasModifierProperty(PsiModifier.PRIVATE))     return false;
  }
  return true;
}
