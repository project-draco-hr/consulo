{
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      if (project.isDisposed())       return;
      final String name=ref.getName();
      final Set<PsiType> types=GroovyExpectedTypesProvider.getDefaultExpectedTypes(ref);
      PsiType unboxed=types.isEmpty() ? null : TypesUtil.unboxPrimitiveTypeWrapper(types.iterator().next());
      @NotNull final PsiType type=unboxed != null ? unboxed : PsiType.getJavaLangObject(ref.getManager(),ref.getResolveScope());
      if (method instanceof GrMethod) {
        GrMethodDescriptor descriptor=new GrMethodDescriptor((GrMethod)method);
        GrChangeSignatureDialog dialog=new GrChangeSignatureDialog(project,descriptor,true,ref);
        List<GrParameterInfo> parameters=dialog.getParameters();
        parameters.add(createParameterInfo(name,type));
        dialog.setParameterInfos(parameters);
        dialog.show();
      }
 else       if (method != null) {
        JavaChangeSignatureDialog dialog=new JavaChangeSignatureDialog(project,method,false,ref);
        final List<ParameterInfoImpl> parameterInfos=new ArrayList<ParameterInfoImpl>(Arrays.asList(ParameterInfoImpl.fromMethod(method)));
        ParameterInfoImpl parameterInfo=new ParameterInfoImpl(-1,name,type,PsiTypesUtil.getDefaultValueOfType(type),false);
        if (!method.isVarArgs()) {
          parameterInfos.add(parameterInfo);
        }
 else {
          parameterInfos.add(parameterInfos.size() - 1,parameterInfo);
        }
        dialog.setParameterInfos(parameterInfos);
        dialog.show();
      }
    }
  }
);
}
