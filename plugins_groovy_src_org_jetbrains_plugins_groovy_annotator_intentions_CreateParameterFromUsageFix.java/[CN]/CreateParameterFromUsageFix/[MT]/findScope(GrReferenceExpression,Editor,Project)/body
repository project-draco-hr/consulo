{
  PsiElement place=ref;
  final List<GrMethod> scopes=new ArrayList<GrMethod>();
  while (true) {
    final GrMethod parent=PsiTreeUtil.getParentOfType(place,GrMethod.class);
    if (parent == null)     break;
    scopes.add(parent);
    place=parent;
  }
  if (scopes.size() == 1) {
    final GrMethod owner=scopes.get(0);
    final PsiMethod toSearchFor;
    toSearchFor=SuperMethodWarningUtil.checkSuperMethod(owner,RefactoringBundle.message("to.refactor"));
    if (toSearchFor == null)     return;
    showDialog(toSearchFor,ref,project);
  }
 else   if (scopes.size() > 1) {
    myEnclosingMethodsPopup=MethodOrClosureScopeChooser.create(scopes,editor,this,new PairFunction<GrParametersOwner,PsiElement,Object>(){
      @Override public Object fun(      GrParametersOwner owner,      PsiElement element){
        showDialog((PsiMethod)owner,ref,project);
        return null;
      }
    }
);
    myEnclosingMethodsPopup.showInBestPositionFor(editor);
  }
}
