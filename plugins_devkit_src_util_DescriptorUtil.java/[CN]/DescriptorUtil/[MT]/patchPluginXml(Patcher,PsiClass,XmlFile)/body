{
  final VirtualFile[] files=new VirtualFile[pluginXmls.length];
  int i=0;
  for (  XmlFile pluginXml : pluginXmls) {
    files[i++]=pluginXml.getVirtualFile();
  }
  final ReadonlyStatusHandler readonlyStatusHandler=ReadonlyStatusHandler.getInstance(klass.getProject());
  final ReadonlyStatusHandler.OperationStatus status=readonlyStatusHandler.ensureFilesWritable(files);
  if (status.hasReadonlyFiles()) {
    throw new IncorrectOperationException(DevKitBundle.message("error.plugin.xml.readonly"));
  }
  for (  XmlFile pluginXml : pluginXmls) {
    patcher.patchPluginXml(pluginXml,klass);
  }
}
