{
  super.visitAssignmentExpression(assignment);
  if (!WellFormednessUtils.isWellFormed(assignment)) {
    return;
  }
  final PsiJavaToken sign=assignment.getOperationSign();
  final IElementType assignmentTokenType=sign.getTokenType();
  if (!assignmentTokenType.equals(JavaTokenType.EQ)) {
    return;
  }
  final PsiExpression lhs=assignment.getLExpression();
  final PsiExpression rhs=assignment.getRExpression();
  if (!(rhs instanceof PsiBinaryExpression)) {
    return;
  }
  final PsiBinaryExpression binaryRhs=(PsiBinaryExpression)rhs;
  if (!WellFormednessUtils.isWellFormed(binaryRhs)) {
    return;
  }
  final PsiExpression lOperand=binaryRhs.getLOperand();
  if (SideEffectChecker.mayHaveSideEffects(lhs)) {
    return;
  }
  if (!EquivalenceChecker.expressionsAreEquivalent(lhs,lOperand)) {
    return;
  }
  registerError(assignment);
}
