{
  final Module module=getModule();
  if (module == null) {
    throw new ExecutionException("Module is not specified");
  }
  if (!GroovyConfigUtils.getInstance().isSDKConfiguredToRun(module)) {
    Messages.showErrorDialog(module.getProject(),ExecutionBundle.message("error.running.configuration.with.error.error.message",getName(),"Groovy is not configured"),ExecutionBundle.message("run.error.message.title"));
    int result=Messages.showOkCancelDialog(GroovyBundle.message("groovy.configure.facet.question.text"),GroovyBundle.message("groovy.configure.facet.question"),GroovyIcons.GROOVY_ICON_32x32);
    if (result == 0) {
      ModulesConfigurator.showDialog(module.getProject(),module.getName(),ClasspathEditor.NAME,false);
    }
    return null;
  }
  if (!GantConfigUtils.getInstance().isSDKConfiguredToRun(module)) {
    Messages.showErrorDialog(module.getProject(),ExecutionBundle.message("error.running.configuration.with.error.error.message",getName(),"Gant is not configured"),ExecutionBundle.message("run.error.message.title"));
    int result=Messages.showOkCancelDialog(GantBundle.message("gant.configure.facet.question.text"),GantBundle.message("gant.configure.facet.question"),GroovyIcons.GANT_ICON_16x16);
    if (result == 0) {
      ModulesConfigurator.showDialog(module.getProject(),module.getName(),ClasspathEditor.NAME,false);
    }
    return null;
  }
  final ModuleRootManager rootManager=ModuleRootManager.getInstance(module);
  final Sdk sdk=rootManager.getSdk();
  if (sdk == null || !(sdk.getSdkType() instanceof JavaSdkType)) {
    throw CantRunException.noJdkForModule(getModule());
  }
  final JavaCommandLineState state=new JavaCommandLineState(environment){
    protected JavaParameters createJavaParameters() throws ExecutionException {
      JavaParameters params=new JavaParameters();
      configureJavaParams(params,module);
      configureGantStarter(params,module);
      configureScript(params);
      return params;
    }
  }
;
  state.setConsoleBuilder(TextConsoleBuilderFactory.getInstance().createBuilder(getProject()));
  return state;
}
