{
  final Module module=getModule();
  if (module == null) {
    throw new ExecutionException("Module is not specified");
  }
  if (LibrariesUtil.getGroovyHomePath(module) == null) {
    Messages.showErrorDialog(module.getProject(),ExecutionBundle.message("error.running.configuration.with.error.error.message",getName(),"Groovy is not configured"),ExecutionBundle.message("run.error.message.title"));
    ModulesConfigurator.showDialog(module.getProject(),module.getName(),ClasspathEditor.NAME,false);
    return null;
  }
  if (!isValidModule(module)) {
    int result=Messages.showOkCancelDialog(GantBundle.message("gant.configure.facet.question.text"),GantBundle.message("gant.configure.facet.question"),GantIcons.GANT_ICON_16x16);
    if (result == 0) {
      ModulesConfigurator.showDialog(module.getProject(),module.getName(),ClasspathEditor.NAME,false);
    }
    if (!isValidModule(module)) {
      return null;
    }
  }
  final ModuleRootManager rootManager=ModuleRootManager.getInstance(module);
  final Sdk sdk=rootManager.getSdk();
  if (sdk == null || !(sdk.getSdkType() instanceof JavaSdkType)) {
    throw CantRunException.noJdkForModule(module);
  }
  final JavaCommandLineState state=new JavaCommandLineState(environment){
    protected JavaParameters createJavaParameters() throws ExecutionException {
      JavaParameters params=new JavaParameters();
      String gantHome=GantConfigUtils.getInstance().getSDKInstallPath(module);
      String confpath=gantHome + GANT_STARTER_CONF;
      if (!new File(confpath).exists()) {
        confpath=GroovyScriptRunConfiguration.getConfPath(gantHome);
      }
      configureJavaParams(params,module,confpath);
      configureGantStarter(params,module,confpath);
      configureScript(params);
      return params;
    }
  }
;
  state.setConsoleBuilder(TextConsoleBuilderFactory.getInstance().createBuilder(getProject()));
  return state;
}
