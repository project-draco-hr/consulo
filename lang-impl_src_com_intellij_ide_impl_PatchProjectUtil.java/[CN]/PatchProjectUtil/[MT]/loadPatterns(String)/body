{
  final Map<Pattern,Set<Pattern>> result=new HashMap<Pattern,Set<Pattern>>();
  final String patterns=System.getProperty(propertyKey);
  if (patterns != null) {
    final String[] pathPatterns=patterns.split(";");
    for (    String excludedPattern : pathPatterns) {
      String module=null;
      int idx=0;
      if (excludedPattern.startsWith("[")) {
        idx=excludedPattern.indexOf("]") + 1;
        module=excludedPattern.substring(1,idx - 1);
      }
      final Pattern modulePattern=module != null ? Pattern.compile(StringUtil.replace(module,"*",".*")) : null;
      final Pattern pattern=Pattern.compile(FileUtil.convertAntToRegexp(excludedPattern.substring(idx)));
      Set<Pattern> dirPatterns=result.get(modulePattern);
      if (dirPatterns == null) {
        dirPatterns=new HashSet<Pattern>();
        result.put(modulePattern,dirPatterns);
      }
      dirPatterns.add(pattern);
    }
  }
  return result;
}
