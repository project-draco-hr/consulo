{
  if (type instanceof PsiClassType) {
    PsiClassType.ClassResolveResult classResolveResult=((PsiClassType)type).resolveGenerics();
    final PsiClass psiClass=classResolveResult.getElement();
    if (type instanceof PsiClassReferenceType && psiClass != null) {
      final PsiJavaCodeReferenceElement reference=((PsiClassReferenceType)type).getReference();
      final PsiReferenceParameterList parameterList=reference.getParameterList();
      if (parameterList != null) {
        final PsiTypeElement[] typeParameterElements=parameterList.getTypeParameterElements();
        if (typeParameterElements.length == 1 && typeParameterElements[0].getType() instanceof PsiDiamondType) {
          final String lookupString=psiClass.getName() + "<>";
          final PsiTypeLookupItem item=new PsiTypeLookupItem(psiClass,lookupString);
          item.setAttribute(FORCE_LOOKUP_STRING,lookupString);
          return item;
        }
      }
    }
    final PsiSubstitutor substitutor=classResolveResult.getSubstitutor();
    String text=type.getCanonicalText();
    if (text == null) {
      text=type.getPresentableText();
    }
    String typeString=text;
    String typeParams="";
    if (text.indexOf('<') > 0 && text.endsWith(">")) {
      typeString=text.substring(0,text.indexOf('<'));
      typeParams=text.substring(text.indexOf('<'));
    }
    String lookupString=text.substring(typeString.lastIndexOf('.') + 1);
    if (psiClass != null) {
      PsiClass resolved=JavaPsiFacade.getInstance(psiClass.getProject()).getResolveHelper().resolveReferencedClass(psiClass.getName(),context);
      if (!psiClass.getManager().areElementsEquivalent(resolved,psiClass)) {
        PsiClass aClass=psiClass;
        lookupString="";
        while (aClass != null) {
          lookupString=aClass.getName() + (lookupString == "" ? "" : ".") + lookupString;
          aClass=aClass.getContainingClass();
        }
        lookupString+=typeParams;
      }
      LookupItem item=new PsiTypeLookupItem(psiClass,lookupString);
      item.setAttribute(SUBSTITUTOR,substitutor);
      return item;
    }
  }
  return new LookupItem(type,type.getPresentableText());
}
