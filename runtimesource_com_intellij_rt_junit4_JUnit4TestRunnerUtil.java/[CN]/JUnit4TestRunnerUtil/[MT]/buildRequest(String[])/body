{
  if (suiteClassNames.length == 0) {
    return null;
  }
  Vector result=new Vector();
  for (int i=0; i < suiteClassNames.length; i++) {
    String suiteClassName=suiteClassNames[i];
    if (suiteClassName.charAt(0) == '@') {
      try {
        final Map classMethods=new HashMap();
        BufferedReader reader=new BufferedReader(new FileReader(suiteClassName.substring(1)));
        try {
          final String packageName=reader.readLine();
          String line;
          while ((line=reader.readLine()) != null) {
            String className=line;
            final int idx=line.indexOf(',');
            if (idx != -1) {
              className=line.substring(0,idx);
              Set methodNames=(Set)classMethods.get(className);
              if (methodNames == null) {
                methodNames=new HashSet();
                classMethods.put(className,methodNames);
              }
              methodNames.add(line.substring(idx + 1));
            }
            appendTestClass(result,className);
          }
          final Request allClasses=Request.classes(new IdeaComputer(packageName.length() == 0 ? "<default package>" : packageName),getArrayOfClasses(result));
          return classMethods.isEmpty() ? allClasses : allClasses.filterWith(new Filter(){
            public boolean shouldRun(            Description description){
              if (description.isTest()) {
                final Set methods=(Set)classMethods.get(description.getClassName());
                return methods == null || methods.contains(description.getMethodName());
              }
              return true;
            }
            public String describe(){
              return "Failed tests";
            }
          }
);
        }
  finally {
          reader.close();
        }
      }
 catch (      IOException e) {
        e.printStackTrace();
        System.exit(1);
      }
    }
 else {
      int index=suiteClassName.indexOf(',');
      if (index != -1) {
        return Request.method(loadTestClass(suiteClassName.substring(0,index)),suiteClassName.substring(index + 1));
      }
      appendTestClass(result,suiteClassName);
    }
  }
  return result.size() == 1 ? Request.aClass((Class)result.get(0)) : Request.classes(getArrayOfClasses(result));
}
