{
  int firstSeparatorIndex=CommitParser.nextSeparatorIndex(line,0);
  String timestampStr=line.substring(0,firstSeparatorIndex);
  long timestamp;
  try {
    if (timestampStr.isEmpty()) {
      timestamp=0;
    }
 else {
      timestamp=Long.parseLong(timestampStr);
    }
  }
 catch (  NumberFormatException e) {
    throw new IllegalArgumentException("bad timestamp in line: " + line);
  }
  com.intellij.vcs.log.graph.GraphCommit<Integer> commit=CommitParser.parseCommitParentsAsInteger(line.substring(firstSeparatorIndex + 2));
  List<Hash> parents=ContainerUtil.newArrayList();
  for (  int p : commit.getParents()) {
    parents.add(intToHash(p));
  }
  return new TimedVcsCommitImpl(intToHash(commit.getId()),parents,timestamp);
}
