{
  if (versions.length > 0) {
    if (defaultVersion == null) {
      defaultVersion=versions[versions.length - 1];
    }
    String maxValue="";
    for (    String version : versions) {
      myComboBox.addItem(version);
      FontMetrics fontMetrics=myComboBox.getFontMetrics(myComboBox.getFont());
      if (fontMetrics.stringWidth(version) > fontMetrics.stringWidth(maxValue)) {
        maxValue=version;
      }
    }
    myComboBox.setPrototypeDisplayValue(maxValue + "_");
    myComboBox.setSelectedItem(defaultVersion);
  }
 else {
    myComboBox.setEnabled(false);
    myComboBox.setVisible(false);
  }
  FacetEditorContext context=getEditorContext();
  configureEditFieldForGroovyPath(myPathToGroovy,context != null ? context.getProject() : null);
  configureNewGdkCheckBox(versions.length > 0);
  if (validatorsManager != null) {
    validatorsManager.registerValidator(new FacetEditorValidator(){
      public ValidationResult check(){
        if (myAddNewGdkCb.isEnabled()) {
          final Object o=myPathToGroovy.getTextField().getText();
          if (o != null) {
            final VirtualFile relativeFile=VfsUtil.findRelativeFile(o.toString(),null);
            if (relativeFile != null && GroovyConfigUtils.isGroovySdkHome(relativeFile))             return ValidationResult.OK;
          }
          return new ValidationResult(GroovyBundle.message("invalid.groovy.sdk.path.message"));
        }
        return ValidationResult.OK;
      }
    }
,myPathToGroovy);
  }
}
