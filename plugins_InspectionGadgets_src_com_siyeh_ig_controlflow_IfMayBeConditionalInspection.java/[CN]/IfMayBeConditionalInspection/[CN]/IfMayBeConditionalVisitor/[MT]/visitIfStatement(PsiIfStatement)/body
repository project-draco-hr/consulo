{
  super.visitIfStatement(statement);
  final PsiStatement thenBranch=statement.getThenBranch();
  final PsiStatement elseBranch=statement.getElseBranch();
  final PsiStatement thenStatement=ControlFlowUtils.stripBraces(thenBranch);
  if (thenStatement == null) {
    return;
  }
  final PsiStatement elseStatement=ControlFlowUtils.stripBraces(elseBranch);
  if (elseStatement == null) {
    return;
  }
  if (thenStatement instanceof PsiReturnStatement) {
    if (!(elseStatement instanceof PsiReturnStatement)) {
      return;
    }
    registerStatementError(statement);
  }
 else   if (thenStatement instanceof PsiExpressionStatement) {
    if (!(elseStatement instanceof PsiExpressionStatement)) {
      return;
    }
    final PsiExpressionStatement thenExpressionStatement=(PsiExpressionStatement)thenStatement;
    final PsiExpression thenExpression=thenExpressionStatement.getExpression();
    if (!(thenExpression instanceof PsiAssignmentExpression)) {
      return;
    }
    final PsiAssignmentExpression thenAssignmentExpression=(PsiAssignmentExpression)thenExpression;
    final PsiExpressionStatement elseExpressionStatement=(PsiExpressionStatement)elseStatement;
    final PsiExpression elseExpression=elseExpressionStatement.getExpression();
    if (!(elseExpression instanceof PsiAssignmentExpression)) {
      return;
    }
    final PsiAssignmentExpression elseAssignmentExpression=(PsiAssignmentExpression)elseExpression;
    if (!thenAssignmentExpression.getOperationTokenType().equals(elseAssignmentExpression.getOperationTokenType())) {
      return;
    }
    final PsiVariable thenVariable=getAssignmentTarget(thenAssignmentExpression);
    if (thenVariable == null) {
      return;
    }
    final PsiVariable elseVariable=getAssignmentTarget(elseAssignmentExpression);
    if (elseVariable == null) {
      return;
    }
    if (thenVariable != elseVariable) {
      return;
    }
    registerStatementError(statement);
  }
}
