{
  final PsiElement element=descriptor.getPsiElement();
  final PsiIfStatement ifStatement=(PsiIfStatement)element.getParent();
  final PsiStatement thenBranch=ifStatement.getThenBranch();
  final PsiStatement thenStatement=ControlFlowUtils.stripBraces(thenBranch);
  final PsiStatement elseBranch=ifStatement.getElseBranch();
  final PsiStatement elseStatement=ControlFlowUtils.stripBraces(elseBranch);
  final PsiExpression condition=ifStatement.getCondition();
  @NonNls final StringBuilder replacementText=new StringBuilder();
  if (thenStatement instanceof PsiReturnStatement) {
    final PsiReturnStatement elseReturn=(PsiReturnStatement)elseStatement;
    final PsiReturnStatement thenReturn=(PsiReturnStatement)thenStatement;
    replacementText.append("return ");
    appendExpressionText(condition,replacementText);
    replacementText.append('?');
    final PsiExpression thenReturnValue=thenReturn.getReturnValue();
    appendExpressionText(thenReturnValue,replacementText);
    replacementText.append(':');
    if (elseReturn != null) {
      final PsiExpression elseReturnValue=elseReturn.getReturnValue();
      appendExpressionText(elseReturnValue,replacementText);
    }
    replacementText.append(';');
  }
 else   if (thenStatement instanceof PsiExpressionStatement) {
    final PsiExpressionStatement thenExpressionStatement=(PsiExpressionStatement)thenStatement;
    final PsiExpression thenExpression=thenExpressionStatement.getExpression();
    if (!(thenExpression instanceof PsiAssignmentExpression)) {
      return;
    }
    final PsiAssignmentExpression thenAssignmentExpression=(PsiAssignmentExpression)thenExpression;
    final PsiExpression lhs=thenAssignmentExpression.getLExpression();
    appendExpressionText(lhs,replacementText);
    final PsiJavaToken token=thenAssignmentExpression.getOperationSign();
    replacementText.append(token.getText());
    appendExpressionText(condition,replacementText);
    replacementText.append('?');
    final PsiExpression thenRhs=thenAssignmentExpression.getRExpression();
    appendExpressionText(thenRhs,replacementText);
    replacementText.append(':');
    final PsiExpressionStatement elseExpressionStatement=(PsiExpressionStatement)elseStatement;
    if (elseExpressionStatement != null) {
      final PsiExpression elseExpression=elseExpressionStatement.getExpression();
      if (elseExpression instanceof PsiAssignmentExpression) {
        final PsiAssignmentExpression elseAssignmentExpression=(PsiAssignmentExpression)elseExpression;
        final PsiExpression elseRhs=elseAssignmentExpression.getRExpression();
        appendExpressionText(elseRhs,replacementText);
      }
    }
    replacementText.append(';');
  }
  replaceStatement(ifStatement,replacementText.toString());
}
