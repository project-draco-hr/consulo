{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiWhileStatement)) {
    return;
  }
  final PsiWhileStatement whileStatement=(PsiWhileStatement)parent;
  final PsiExpression whileCondition=whileStatement.getCondition();
  if (whileCondition == null) {
    return;
  }
  final PsiStatement body=whileStatement.getBody();
  final PsiStatement statement;
  if (body instanceof PsiBlockStatement) {
    final PsiBlockStatement blockStatement=(PsiBlockStatement)body;
    final PsiCodeBlock codeBlock=blockStatement.getCodeBlock();
    final PsiStatement[] statements=codeBlock.getStatements();
    if (statements.length == 0) {
      return;
    }
    statement=statements[0];
  }
 else {
    statement=body;
  }
  if (!(statement instanceof PsiIfStatement)) {
    return;
  }
  final PsiIfStatement ifStatement=(PsiIfStatement)statement;
  final PsiExpression ifCondition=ifStatement.getCondition();
  if (ifCondition == null) {
    return;
  }
  final PsiStatement thenBranch=ifStatement.getThenBranch();
  final PsiStatement elseBranch=ifStatement.getElseBranch();
  if (containsUnlabeledBreakStatement(thenBranch)) {
    final String negatedExpressionText=BoolUtils.getNegatedExpressionText(ifCondition);
    replaceExpression(whileCondition,negatedExpressionText);
    if (elseBranch == null) {
      ifStatement.delete();
    }
 else {
      ifStatement.replace(elseBranch);
    }
  }
 else   if (containsUnlabeledBreakStatement(elseBranch)) {
    whileCondition.replace(ifCondition);
    if (thenBranch == null) {
      ifStatement.delete();
    }
 else {
      ifStatement.replace(thenBranch);
    }
  }
}
