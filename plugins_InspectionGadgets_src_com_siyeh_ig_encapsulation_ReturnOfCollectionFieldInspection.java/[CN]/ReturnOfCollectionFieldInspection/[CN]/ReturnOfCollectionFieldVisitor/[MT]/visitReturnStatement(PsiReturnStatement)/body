{
  super.visitReturnStatement(statement);
  final PsiExpression returnValue=statement.getReturnValue();
  if (returnValue == null) {
    return;
  }
  final PsiMethod containingMethod=PsiTreeUtil.getParentOfType(statement,PsiMethod.class);
  if (containingMethod == null) {
    return;
  }
  if (ignorePrivateMethods && containingMethod.hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  final PsiClass returnStatementClass=containingMethod.getContainingClass();
  if (returnStatementClass == null) {
    return;
  }
  if (!(returnValue instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)returnValue;
  final PsiElement referent=referenceExpression.resolve();
  if (!(referent instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)referent;
  final PsiClass fieldClass=field.getContainingClass();
  if (!returnStatementClass.equals(fieldClass)) {
    return;
  }
  if (!CollectionUtils.isArrayOrCollectionField(field)) {
    return;
  }
  registerError(returnValue,field);
}
