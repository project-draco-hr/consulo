{
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)infos[1];
  final String text=referenceExpression.getText();
  if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,CommonClassNames.JAVA_UTIL_MAP)) {
    if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,"java.util.SortedMap")) {
      return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableSortedMap(" + text + ')');
    }
    return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableMap(" + text + ')');
  }
 else   if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,CommonClassNames.JAVA_UTIL_COLLECTION)) {
    if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,CommonClassNames.JAVA_UTIL_SET)) {
      if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,"java.util.SortedSet")) {
        return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableSortedSet(" + text + ')');
      }
      return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableSet(" + text + ')');
    }
 else     if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,CommonClassNames.JAVA_UTIL_LIST)) {
      return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableList(" + text + ')');
    }
    return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableCollection(" + text + ')');
  }
  return null;
}
