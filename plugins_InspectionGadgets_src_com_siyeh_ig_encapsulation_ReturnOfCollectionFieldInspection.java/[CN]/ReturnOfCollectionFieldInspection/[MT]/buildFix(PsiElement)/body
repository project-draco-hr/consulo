{
  if (!(location instanceof PsiReferenceExpression)) {
    return null;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)location;
  final String text=referenceExpression.getText();
  if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,"java.util.Map")) {
    if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,"java.util.SortedMap")) {
      return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableSortedMap(" + text + ')');
    }
    return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableMap(" + text + ')');
  }
 else   if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,"java.util.Collection")) {
    if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,"java.util.Set")) {
      if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,"java.util.SortedSet")) {
        return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableSortedSet(" + text + ')');
      }
      return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableSet(" + text + ')');
    }
 else     if (TypeUtils.expressionHasTypeOrSubtype(referenceExpression,"java.util.List")) {
      return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableList(" + text + ')');
    }
    return new ReturnOfCollectionFieldFix("java.util.Collections.unmodifiableCollection(" + text + ')');
  }
  return null;
}
