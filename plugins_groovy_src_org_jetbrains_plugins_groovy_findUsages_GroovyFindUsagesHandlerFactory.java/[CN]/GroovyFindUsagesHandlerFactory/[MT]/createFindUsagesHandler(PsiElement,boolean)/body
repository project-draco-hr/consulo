{
  return new JavaFindUsagesHandler(element,this){
    @NotNull @Override public PsiElement[] getSecondaryElements(){
      PsiElement element=getPsiElement();
      final PsiField field=(PsiField)element;
      PsiClass containingClass=field.getContainingClass();
      if (containingClass != null) {
        PsiMethod[] getters=GroovyPropertyUtils.getAllGettersByField(field);
        PsiMethod[] setters=GroovyPropertyUtils.getAllSettersByField(field);
        if (getters.length + setters.length > 0) {
          final boolean doSearch;
          if (arePhysical(getters) || arePhysical(setters)) {
            if (ApplicationManager.getApplication().isUnitTestMode())             return PsiElement.EMPTY_ARRAY;
            doSearch=Messages.showYesNoDialog(FindBundle.message("find.field.accessors.prompt",field.getName()),FindBundle.message("find.field.accessors.title"),Messages.getQuestionIcon()) == DialogWrapper.OK_EXIT_CODE;
          }
 else {
            doSearch=true;
          }
          if (doSearch) {
            final List<PsiElement> elements=new ArrayList<PsiElement>();
            for (            PsiMethod getter : getters) {
              ContainerUtil.addAll(elements,SuperMethodWarningUtil.checkSuperMethods(getter,ACTION_STRING));
            }
            for (            PsiMethod setter : setters) {
              ContainerUtil.addAll(elements,SuperMethodWarningUtil.checkSuperMethods(setter,ACTION_STRING));
            }
            return PsiUtilBase.toPsiElementArray(elements);
          }
 else {
            return PsiElement.EMPTY_ARRAY;
          }
        }
      }
      return super.getSecondaryElements();
    }
  }
;
}
