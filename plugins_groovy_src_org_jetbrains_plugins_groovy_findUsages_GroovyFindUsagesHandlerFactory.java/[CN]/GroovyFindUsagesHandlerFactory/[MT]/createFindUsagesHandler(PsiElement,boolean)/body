{
  return new JavaFindUsagesHandler(element,this){
    @NotNull @Override public PsiElement[] getSecondaryElements(){
      PsiElement element=getPsiElement();
      if (ApplicationManager.getApplication().isUnitTestMode())       return PsiElement.EMPTY_ARRAY;
      final PsiField field=(PsiField)element;
      PsiClass containingClass=field.getContainingClass();
      if (containingClass != null) {
        PsiMethod getter=GroovyPropertyUtils.findGetterForField(field);
        PsiMethod setter=GroovyPropertyUtils.findSetterForField(field);
        if (getter != null || setter != null) {
          final boolean doSearch;
          if ((getter == null || !getter.isPhysical()) && (setter == null || !setter.isPhysical())) {
            doSearch=true;
          }
 else {
            doSearch=Messages.showDialog(FindBundle.message("find.field.accessors.prompt",field.getName()),FindBundle.message("find.field.accessors.title"),new String[]{CommonBundle.getYesButtonText(),CommonBundle.getNoButtonText()},0,Messages.getQuestionIcon()) == DialogWrapper.OK_EXIT_CODE;
          }
          if (doSearch) {
            final List<PsiElement> elements=new ArrayList<PsiElement>();
            if (getter != null) {
              ContainerUtil.addAll(elements,SuperMethodWarningUtil.checkSuperMethods(getter,ACTION_STRING));
            }
            if (setter != null) {
              ContainerUtil.addAll(elements,SuperMethodWarningUtil.checkSuperMethods(setter,ACTION_STRING));
            }
            return elements.toArray(new PsiElement[elements.size()]);
          }
 else {
            return PsiElement.EMPTY_ARRAY;
          }
        }
      }
      return super.getSecondaryElements();
    }
  }
;
}
