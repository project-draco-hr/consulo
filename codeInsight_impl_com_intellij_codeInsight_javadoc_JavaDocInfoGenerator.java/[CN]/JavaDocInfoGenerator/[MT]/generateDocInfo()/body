{
  StringBuilder buffer=new StringBuilder();
  if (myElement instanceof PsiClass) {
    generateClassJavaDoc(buffer,(PsiClass)myElement);
  }
 else   if (myElement instanceof PsiMethod) {
    generateMethodJavaDoc(buffer,(PsiMethod)myElement);
  }
 else   if (myElement instanceof PsiParameter) {
    generateMethodParameterJavaDoc(buffer,(PsiParameter)myElement);
  }
 else   if (myElement instanceof PsiField) {
    generateFieldJavaDoc(buffer,(PsiField)myElement);
  }
 else   if (myElement instanceof PsiVariable) {
    generateVariableJavaDoc(buffer,(PsiVariable)myElement);
  }
 else   if (myElement instanceof PsiFile) {
    generateFileJavaDoc(buffer,(PsiFile)myElement);
  }
 else   if (myElement instanceof PsiPackage) {
    generatePackageJavaDoc(buffer,(PsiPackage)myElement);
  }
 else {
    if (myProvider != null) {
      final SmartPsiElementPointer elementPointer=myElement.getUserData(JavaDocManager.ORIGINAL_ELEMENT_KEY);
      return myProvider.generateDoc(myElement,elementPointer != null ? elementPointer.getElement() : null);
    }
    return null;
  }
  String text=buffer.toString();
  if (text.length() == 0) {
    return null;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Generated JavaDoc:");
    LOG.debug(text);
  }
  text=StringUtil.replace(text,"/>",">");
  return text;
}
