{
  if (myAppender1.getEditor() == null || myAppender2.getEditor() == null)   return;
  final int startLeft=getStartVisibleLine(myAppender1.getEditor());
  final int startRight=getStartVisibleLine(myAppender2.getEditor());
  final int width=component.getWidth();
  final int lineHeight=myAppender1.getEditor().getLineHeight();
  final TreeMap<Integer,FragmentSeparatorsPositionConsumer.TornSeparator> left=mySeparatorsPositionConsumer.getLeft();
  final int leftScrollOffset=myAppender1.getEditor().getScrollingModel().getVerticalScrollOffset();
  final int rightScrollOffset=myAppender2.getEditor().getScrollingModel().getVerticalScrollOffset();
  for (  Map.Entry<Integer,FragmentSeparatorsPositionConsumer.TornSeparator> entry : left.entrySet()) {
    final FragmentSeparatorsPositionConsumer.TornSeparator tornSeparator=entry.getValue();
    if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) {
      final int leftOffset=tornSeparator.getLeftOffset();
      int leftBaseY=myAppender1.getEditor().logicalPositionToXY(new LogicalPosition(tornSeparator.getLeftLine(),0)).y - lineHeight / 2 - leftScrollOffset;
      final int rightOffset=tornSeparator.getRightOffset();
      int rightBaseY=myAppender2.getEditor().logicalPositionToXY(new LogicalPosition(tornSeparator.getRightLine(),0)).y - lineHeight / 2 - rightScrollOffset;
      g.setColor(FragmentBoundRenderer.darkerBorder());
      g.drawLine(0,leftBaseY + leftOffset + TornLineParams.ourDark - 1,width,rightBaseY + rightOffset + TornLineParams.ourDark+ 1);
      g.drawLine(0,leftBaseY + leftOffset + TornLineParams.ourDark+ 1,width,rightBaseY + rightOffset + TornLineParams.ourDark - 1);
      g.drawLine(0,leftBaseY + leftOffset - TornLineParams.ourDark - 1,width,rightBaseY + rightOffset - TornLineParams.ourDark + 1);
      g.drawLine(0,leftBaseY + leftOffset - TornLineParams.ourDark + 1,width,rightBaseY + rightOffset - TornLineParams.ourDark - 1);
      g.setColor(FragmentBoundRenderer.darkerBorder().darker());
      g.drawLine(0,leftBaseY + leftOffset + TornLineParams.ourDark,width,rightBaseY + rightOffset + TornLineParams.ourDark);
      g.drawLine(0,leftBaseY + leftOffset - TornLineParams.ourDark,width,rightBaseY + rightOffset - TornLineParams.ourDark);
    }
  }
}
