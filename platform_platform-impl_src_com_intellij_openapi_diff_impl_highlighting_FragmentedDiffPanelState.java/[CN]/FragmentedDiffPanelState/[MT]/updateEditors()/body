{
  resetMarkup();
  if (myAppender1.getEditor() == null || myAppender2.getEditor() == null) {
    return LineBlocks.EMPTY;
  }
  int previousBefore=-1;
  int previousAfter=-1;
  final List<BeforeAfter<TextRange>> ranges=new ArrayList<BeforeAfter<TextRange>>();
  for (int i=0; i < myRanges.size(); i++) {
    final BeforeAfter<Integer> start=lineStarts(i);
    final BeforeAfter<Integer> end=(i == myRanges.size() - 1) ? new BeforeAfter<Integer>(myAppender1.getDocument().getTextLength(),myAppender2.getDocument().getTextLength()) : lineStarts(i + 1);
    ranges.add(new BeforeAfter<TextRange>(new TextRange(start.getBefore(),end.getBefore()),new TextRange(start.getAfter(),end.getAfter())));
    if (previousBefore > 0 && previousAfter > 0) {
      myAppender1.setSeparatorMarker(previousBefore);
      myAppender2.setSeparatorMarker(previousAfter);
    }
    previousBefore=myRanges.get(i).getBefore();
    previousAfter=myRanges.get(i).getAfter();
  }
  final PresetBlocksDiffPolicy diffPolicy=new PresetBlocksDiffPolicy(DiffPolicy.LINES_WO_FORMATTING);
  diffPolicy.setRanges(ranges);
  return addMarkup(new TextCompareProcessor(myComparisonPolicy,diffPolicy).process(myAppender1.getText(),myAppender2.getText()));
}
