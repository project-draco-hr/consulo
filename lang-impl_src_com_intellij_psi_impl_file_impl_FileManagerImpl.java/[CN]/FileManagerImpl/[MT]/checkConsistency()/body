{
  ConcurrentWeakValueHashMap<VirtualFile,FileViewProvider> fileToViewProvider=new ConcurrentWeakValueHashMap<VirtualFile,FileViewProvider>(myVFileToViewProviderMap);
  myVFileToViewProviderMap.clear();
  for (  VirtualFile vFile : fileToViewProvider.keySet()) {
    final FileViewProvider fileViewProvider=fileToViewProvider.get(vFile);
    LOG.assertTrue(vFile.isValid());
    PsiFile psiFile1=findFile(vFile);
    if (psiFile1 != null && fileViewProvider != null) {
      LOG.assertTrue(psiFile1.getClass().equals(fileViewProvider.getPsi(fileViewProvider.getBaseLanguage()).getClass()));
    }
  }
  ConcurrentHashMap<VirtualFile,PsiDirectory> fileToPsiDirMap=new ConcurrentHashMap<VirtualFile,PsiDirectory>((Map<? extends VirtualFile,? extends PsiDirectory>)myVFileToPsiDirMap);
  myVFileToPsiDirMap.clear();
  for (  VirtualFile vFile : fileToPsiDirMap.keySet()) {
    LOG.assertTrue(vFile.isValid());
    PsiDirectory psiDir1=findDirectory(vFile);
    LOG.assertTrue(psiDir1 != null);
    VirtualFile parent=vFile.getParent();
    if (parent != null) {
      LOG.assertTrue(myVFileToPsiDirMap.containsKey(parent));
    }
  }
}
