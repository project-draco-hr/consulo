{
  if (mayBeQueried) {
    return;
  }
  super.visitReferenceExpression(expression);
  final PsiElement parent=ParenthesesUtils.getParentSkipParentheses(expression);
  if (!(parent instanceof PsiPolyadicExpression)) {
    return;
  }
  final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)parent;
  final IElementType tokenType=polyadicExpression.getOperationTokenType();
  if (JavaTokenType.PLUS != tokenType) {
    return;
  }
  final PsiElement target=expression.resolve();
  if (!variable.equals(target)) {
    return;
  }
  final PsiType type=polyadicExpression.getType();
  if (type == null || !type.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {
    return;
  }
  mayBeQueried=true;
}
