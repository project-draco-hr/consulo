{
  final File tempDirectory=createTempDirectory();
  final File fileToCreate=new File(tempDirectory,"toCreate.txt");
  final LoggingListener fileToCreateListener=new LoggingListener();
  final VirtualFilePointer fileToCreatePointer=createPointerByFile(fileToCreate,fileToCreateListener);
  assertFalse(fileToCreatePointer.isValid());
  fileToCreate.createNewFile();
  final Runnable postRunnable=new Runnable(){
    @Override public void run(){
      assertTrue(fileToCreatePointer.isValid());
      assertEquals("[before:false, after:true]",fileToCreateListener.getLog().toString());
      try {
        String expectedUrl=VirtualFileManager.constructUrl(LocalFileSystem.PROTOCOL,fileToCreate.getCanonicalPath().replace(File.separatorChar,'/'));
        assertEquals(expectedUrl.toUpperCase(),fileToCreatePointer.getUrl().toUpperCase());
      }
 catch (      IOException e) {
        fail();
      }
    }
  }
;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      VirtualFileManager.getInstance().refresh(false);
      final VirtualFile virtualFile=getVirtualFile(tempDirectory);
      virtualFile.refresh(false,true);
    }
  }
);
  postRunnable.run();
  myFilesToDelete.add(fileToCreate);
  myFilesToDelete.add(tempDirectory);
}
