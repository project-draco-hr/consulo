def __init__(self, ui, path, rev=None):
    super(p4_source, self).__init__(ui, path, rev=rev)
    if (('/' in path) and (not path.startswith('//'))):
        raise NoRepo((_('%s does not look like a P4 repository') % path))
    checktool('p4', abort=False)
    self.p4changes = {}
    self.heads = {}
    self.changeset = {}
    self.files = {}
    self.tags = {}
    self.lastbranch = {}
    self.parent = {}
    self.encoding = 'latin_1'
    self.depotname = {}
    self.modecache = {}
    self.re_type = re.compile('([a-z]+)?(text|binary|symlink|apple|resource|unicode|utf\\d+)(\\+\\w+)?$')
    self.re_keywords = re.compile('\\$(Id|Header|Date|DateTime|Change|File|Revision|Author):[^$\\n]*\\$')
    self.re_keywords_old = re.compile('\\$(Id|Header):[^$\n]*\\$')
    self._parse(ui, path)
