{
  StringBuilder buf=StringBuilderSpinAllocator.alloc();
  try {
    final ClassRenderer classRenderer=NodeRendererSettings.getInstance().getClassRenderer();
    final boolean showConcreteType=!classRenderer.SHOW_DECLARED_TYPE || (!(objRef instanceof StringReference) && !(objRef instanceof ClassObjectReference) && !isEnumConstant(objRef));
    if (showConcreteType || classRenderer.SHOW_OBJECT_ID) {
      buf.append('{');
      if (showConcreteType) {
        buf.append(objRef.type().name());
      }
      if (classRenderer.SHOW_OBJECT_ID) {
        buf.append('@');
        if (ApplicationManager.getApplication().isUnitTestMode()) {
          buf.append("uniqueID");
        }
 else {
          buf.append(objRef.uniqueID());
        }
      }
      buf.append('}');
    }
    if (objRef instanceof ArrayReference) {
      int idx=buf.indexOf("[");
      if (idx >= 0) {
        buf.insert(idx + 1,Integer.toString(((ArrayReference)objRef).length()));
      }
    }
    return buf.toString();
  }
  finally {
    StringBuilderSpinAllocator.dispose(buf);
  }
}
