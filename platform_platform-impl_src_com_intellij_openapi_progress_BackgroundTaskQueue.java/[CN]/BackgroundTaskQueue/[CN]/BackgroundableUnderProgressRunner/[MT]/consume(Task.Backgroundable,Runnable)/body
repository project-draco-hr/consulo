{
  final ProgressIndicator[] pi=new ProgressIndicator[1];
  final boolean taskTitleIsEmpty=StringUtil.isEmptyOrSpaces(backgroundable.getTitle());
  final Runnable wrappedTask=new Runnable(){
    @Override public void run(){
      RunBackgroundable.runIfBackgroundThread(backgroundable,pi[0] == null ? ProgressManager.getInstance().getProgressIndicator() : pi[0],runnable);
    }
  }
;
  final ProgressManager pm=ProgressManager.getInstance();
  if (backgroundable.isConditionalModal() && !backgroundable.shouldStartInBackground()) {
    pm.runProcessWithProgressSynchronously(wrappedTask,taskTitleIsEmpty ? myTitle : backgroundable.getTitle(),backgroundable.isCancellable(),myProject);
  }
 else {
    pi[0]=new BackgroundableProcessIndicator(backgroundable);
    if (taskTitleIsEmpty) {
      ((BackgroundableProcessIndicator)pi[0]).setTitle(myTitle);
    }
    ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
      @Override public void run(){
        pm.runProcess(wrappedTask,pi[0]);
      }
    }
);
  }
}
