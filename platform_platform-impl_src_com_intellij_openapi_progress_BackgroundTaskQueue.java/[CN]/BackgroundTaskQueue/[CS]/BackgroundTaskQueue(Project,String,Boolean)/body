{
  final boolean headless=forcedHeadlessMode != null ? forcedHeadlessMode : ApplicationManager.getApplication().isHeadlessEnvironment();
  myProcessor=new QueueProcessor<Task.Backgroundable>(headless ? new BackgroundableHeadlessRunner() : new BackgroundableUnderProgressRunner(title,project),true,headless ? QueueProcessor.ThreadToUse.POOLED : QueueProcessor.ThreadToUse.AWT,new Condition<Object>(){
    @Override public boolean value(    Object o){
      if (project == null)       return ApplicationManager.getApplication().isDisposed();
      return !ApplicationManager.getApplication().isUnitTestMode() && !project.isOpen() || project.isDisposed();
    }
  }
);
}
