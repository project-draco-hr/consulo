{
  final List<VcsException> errors=collectErrors(allExceptions);
  final int errorsSize=errors.size();
  final int warningsSize=allExceptions.size() - errorsSize;
  if (errorsSize == 0) {
    for (    CheckinHandler handler : myHandlers) {
      handler.checkinSuccessful();
    }
    processor.afterSuccessfulCheckIn();
  }
 else {
    for (    CheckinHandler handler : myHandlers) {
      handler.checkinFailed(errors);
    }
  }
  if (errorsSize == 0 || warningsSize == 0) {
    final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
    if (indicator != null) {
      indicator.setText(VcsBundle.message("commit.dialog.completed.successfully"));
    }
  }
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (errorsSize > 0 && warningsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.failed.with.errors.and.warnings"),VcsBundle.message("message.title.commit"));
      }
 else       if (errorsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.failed.with.errors"),VcsBundle.message("message.title.commit"));
      }
 else       if (warningsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.finished.with.warnings"),VcsBundle.message("message.title.commit"));
      }
      if (errorsSize > 0) {
        processor.afterFailedCheckIn();
      }
    }
  }
,ModalityState.NON_MODAL);
}
