{
  LinearGraphAsGraphWithHiddenNodes branchesGraph=createBranchesGraph(permanentGraph,heads);
  CollapsedGraphWithHiddenNodes collapsedGraph=new CollapsedGraphWithHiddenNodes(branchesGraph);
  final GraphWithHiddenNodesAsGraphWithCommitInfo<CommitId> graphWithCommitInfo=new GraphWithHiddenNodesAsGraphWithCommitInfo<CommitId>(collapsedGraph,permanentGraph.getPermanentGraphLayout(),permanentGraph.getPermanentCommitsInfo());
  final Condition<Integer> notCollapsedNodes=permanentGraph.getNotCollapsedNodes();
  FragmentGenerator fragmentGeneratorForPrinterGraph=new FragmentGenerator(graphWithCommitInfo,new Condition<Integer>(){
    @Override public boolean value(    Integer integer){
      int longIndex=graphWithCommitInfo.getIntToIntMap().getLongIndex(integer);
      return notCollapsedNodes.value(longIndex);
    }
  }
);
  PrintElementsManagerImpl printElementsManager=new PrintElementsManagerImpl<CommitId>(graphWithCommitInfo,fragmentGeneratorForPrinterGraph,permanentGraph.getGraphColorManager());
  return new CollapsedVisibleGraph<CommitId>(graphWithCommitInfo,collapsedGraph,printElementsManager,fragmentGeneratorForPrinterGraph,permanentGraph);
}
