{
  return new JavaElementVisitor(){
    @Override public void visitSwitchLabelStatement(    PsiSwitchLabelStatement statement){
      final AndroidFacet facet=AndroidFacet.getInstance(statement);
      if (facet == null || !facet.getConfiguration().LIBRARY_PROJECT) {
        return;
      }
      final PsiExpression caseValue=statement.getCaseValue();
      if (!(caseValue instanceof PsiReferenceExpression)) {
        return;
      }
      final PsiSwitchStatement switchStatement=PsiTreeUtil.getParentOfType(statement,PsiSwitchStatement.class);
      if (switchStatement == null || !ReplaceSwitchWithIfIntention.canProcess(switchStatement)) {
        return;
      }
      final PsiElement resolvedElement=((PsiReferenceExpression)caseValue).resolve();
      if (resolvedElement == null || !(resolvedElement instanceof PsiField)) {
        return;
      }
      final PsiField resolvedField=(PsiField)resolvedElement;
      if (!AndroidResourceUtil.isResourceField(resolvedField)) {
        return;
      }
      final PsiModifierList modifierList=resolvedField.getModifierList();
      if (modifierList == null || !modifierList.hasModifierProperty(PsiModifier.FINAL)) {
        holder.registerProblem(caseValue,AndroidBundle.message("android.inspections.non.constant.res.ids.in.switch.message"),new MyQuickFix());
      }
    }
  }
;
}
