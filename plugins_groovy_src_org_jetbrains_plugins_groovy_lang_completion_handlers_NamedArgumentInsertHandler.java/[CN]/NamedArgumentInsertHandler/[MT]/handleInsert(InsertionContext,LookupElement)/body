{
  int tailOffset=context.getTailOffset();
  PsiElement argumentList=context.getFile().findElementAt(tailOffset - 1);
  while (argumentList != null && !(argumentList instanceof GrArgumentList) && !(argumentList instanceof GrListOrMap)) {
    argumentList=argumentList.getParent();
  }
  final Editor editor=context.getEditor();
  if (argumentList != null) {
    String argumentListText=argumentList.getText();
    String s=argumentListText.substring(tailOffset - argumentList.getTextOffset());
    s=StringUtil.trimEnd(s,")");
    if (s.trim().length() == 0) {
      editor.getDocument().insertString(tailOffset,": ");
      editor.getCaretModel().moveToOffset(tailOffset + 2);
    }
 else {
      Matcher m=Pattern.compile("(\\s*)(:)?(\\s*),?\\s?(\\s*)(.+)").matcher(s);
      if (!m.matches())       throw new RuntimeException("This pattern must matches on any non-empty string!");
      if (m.group(2) != null) {
        editor.getCaretModel().moveToOffset(tailOffset + m.end(3));
      }
 else {
        editor.getDocument().replaceString(tailOffset,tailOffset + m.start(4),": , ");
        editor.getCaretModel().moveToOffset(tailOffset + 2);
      }
    }
  }
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  editor.getSelectionModel().removeSelection();
}
