{
  int tailOffset=context.getTailOffset();
  PsiElement argumentList=context.getFile().findElementAt(tailOffset - 1);
  while (argumentList != null && !(argumentList instanceof GrArgumentList) && !(argumentList instanceof GrListOrMap)) {
    argumentList=argumentList.getParent();
  }
  final Editor editor=context.getEditor();
  if (argumentList != null) {
    if (context.getCompletionChar() == ':' || context.getCompletionChar() == ' ') {
      context.setAddCompletionChar(false);
    }
    String argumentListText=argumentList.getText();
    String s=argumentListText.substring(tailOffset - argumentList.getTextOffset());
    s=StringUtil.trimEnd(s,")");
    if (s.trim().length() == 0) {
      editor.getDocument().insertString(tailOffset,": ");
      editor.getCaretModel().moveToOffset(tailOffset + 2);
    }
 else {
      if (context.getCompletionChar() == Lookup.REPLACE_SELECT_CHAR) {
        char a=s.charAt(0);
        if (Character.isLetterOrDigit(a)) {
          return;
        }
      }
      Matcher m=Pattern.compile("([ \\t]*):([ \\t]*)(.*)",Pattern.DOTALL).matcher(s);
      if (m.matches()) {
        int caret=tailOffset + m.end(2);
        if (m.group(2).isEmpty()) {
          editor.getDocument().insertString(caret," ");
          caret++;
        }
        editor.getCaretModel().moveToOffset(caret);
      }
 else {
        m=Pattern.compile("([ \\t]*)([\\n \\t]*)[\\],](.*)",Pattern.DOTALL).matcher(s);
        if (m.matches()) {
          editor.getDocument().replaceString(tailOffset,tailOffset + m.start(2),": ");
          editor.getCaretModel().moveToOffset(tailOffset + 2);
        }
 else {
          m=Pattern.compile("([ \\t]*)(.*)",Pattern.DOTALL).matcher(s);
          if (!m.matches())           throw new RuntimeException("This pattern must match any non-empty string! (" + s + ")");
          String toInsert=m.group(2).startsWith("\n") ? ": ," : ": , ";
          editor.getDocument().replaceString(tailOffset,tailOffset + m.start(2),toInsert);
          editor.getCaretModel().moveToOffset(tailOffset + 2);
        }
      }
    }
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    editor.getSelectionModel().removeSelection();
  }
}
