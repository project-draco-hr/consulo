{
  final PsiLiteralExpression literal=PsiTreeUtil.getParentOfType(element,PsiLiteralExpression.class);
  if (literal == null)   return;
  final String text=StringUtil.unquoteString(literal.getText());
  final int radix=text.startsWith("0x") || text.startsWith("0X") || text.startsWith("#") ? 16 : text.startsWith("0") ? 8 : 10;
  final String hexPrefix=radix == 16 ? text.startsWith("#") ? "#" : text.substring(0,2) : null;
  Color oldColor;
  try {
    oldColor=Color.decode(text);
  }
 catch (  NumberFormatException e) {
    oldColor=Color.GRAY;
  }
  Color color=ColorChooser.chooseColor(editorComponent,getText(),oldColor);
  if (color == null)   return;
  final int rgb=color.getRGB() - ((255 & 0xFF) << 24);
  if (color != null && rgb != oldColor.getRGB()) {
    final String newText=radix == 16 ? hexPrefix + String.format("%6s",Integer.toHexString(rgb)).replace(' ','0') : radix == 8 ? "0" + Integer.toOctalString(rgb) : Integer.toString(rgb);
    final PsiManager manager=literal.getManager();
    final PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
    final PsiExpression newLiteral=factory.createExpressionFromText("\"" + newText + "\"",literal);
    literal.replace(newLiteral);
  }
}
