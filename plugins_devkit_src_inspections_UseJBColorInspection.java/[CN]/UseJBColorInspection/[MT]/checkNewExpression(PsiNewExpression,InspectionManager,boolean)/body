{
  final Project project=manager.getProject();
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
  final PsiClass jbColorClass=facade.findClass(JBColor.class.getName(),GlobalSearchScope.allScope(project));
  final PsiType type=expression.getType();
  if (type != null && jbColorClass != null) {
    if (!facade.getResolveHelper().isAccessible(jbColorClass,expression,jbColorClass))     return null;
    final PsiExpressionList arguments=expression.getArgumentList();
    if (arguments != null) {
      if ("java.awt.Color".equals(type.getCanonicalText())) {
        final PsiElement parent=expression.getParent();
        if (parent instanceof PsiExpressionList && parent.getParent() instanceof PsiNewExpression) {
          final PsiType parentType=((PsiNewExpression)parent.getParent()).getType();
          if (parentType == null || JBColor.class.getName().equals(parentType.getCanonicalText()))           return null;
        }
        return manager.createProblemDescriptor(expression,"Replace with JBColor",new ConvertToJBColorQuickFix(),ProblemHighlightType.GENERIC_ERROR_OR_WARNING,isOnTheFly);
      }
    }
  }
  return null;
}
