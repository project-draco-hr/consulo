{
  final DFAType type=new DFAType(primary);
  for (  Mixin mixin : mixins) {
    type.mixins.add(mixin);
  }
  for (; negating != null; negating=negating.getNegatingGotoInstruction()) {
    final Set<ConditionInstruction> conditionsToNegate=negating.getCondition().getDependentConditions();
    for (ListIterator<Mixin> iterator=type.mixins.listIterator(); iterator.hasNext(); ) {
      Mixin mixin=iterator.next();
      if (conditionsToNegate.contains(mixin.myCondition)) {
        iterator.set(mixin.negate());
      }
    }
  }
  return type;
}
