{
  if (element == null || element instanceof PsiCompiledElement || isBinary(element))   return;
  element.accept(new PsiRecursiveElementVisitor(true){
    @Override public void visitElement(    PsiElement element){
      final PsiFileSystemItem item=element.getCopyableUserData(REF_FILE_SYSTEM_ITEM_KEY);
      element.putCopyableUserData(REF_FILE_SYSTEM_ITEM_KEY,null);
      element=bindElement(element,item);
      if (element != null) {
        element.acceptChildren(this);
      }
      if (element instanceof PsiLanguageInjectionHost) {
        ((PsiLanguageInjectionHost)element).processInjectedPsi(new PsiLanguageInjectionHost.InjectedPsiVisitor(){
          public void visit(          @NotNull final PsiFile injectedPsi,          @NotNull final List<PsiLanguageInjectionHost.Shred> places){
            decodeFileReferences(injectedPsi);
          }
        }
);
      }
    }
  }
);
}
