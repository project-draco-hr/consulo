{
  final Set<GradleModule> modules=ContainerUtilRt.newHashSet();
  final Map<GradleModule,Collection<GradleContentRoot>> contentRoots=ContainerUtilRt.newHashMap();
  final Set<GradleLibrary> libraries=ContainerUtilRt.newHashSet();
  final Set<GradleJar> jars=ContainerUtilRt.newHashSet();
  final Map<GradleModule,Collection<GradleDependency>> dependencies=ContainerUtilRt.newHashMap();
  GradleEntityVisitor visitor=new GradleEntityVisitor(){
    @Override public void visit(    @NotNull GradleProject project){
    }
    @Override public void visit(    @NotNull GradleModule module){
      modules.add(module);
    }
    @Override public void visit(    @NotNull GradleLibrary library){
      libraries.add(library);
    }
    @Override public void visit(    @NotNull GradleJar jar){
      jars.add(jar);
    }
    @Override public void visit(    @NotNull GradleModuleDependency dependency){
      addDependency(dependency);
    }
    @Override public void visit(    @NotNull GradleLibraryDependency dependency){
      addDependency(dependency);
    }
    @Override public void visit(    @NotNull GradleCompositeLibraryDependency dependency){
    }
    @Override public void visit(    @NotNull GradleContentRoot contentRoot){
      Collection<GradleContentRoot> roots=contentRoots.get(contentRoot.getOwnerModule());
      if (roots == null) {
        contentRoots.put(contentRoot.getOwnerModule(),roots=ContainerUtilRt.<GradleContentRoot>newHashSet());
      }
      roots.add(contentRoot);
    }
    private void addDependency(    @NotNull GradleDependency dependency){
      Collection<GradleDependency> d=dependencies.get(dependency.getOwnerModule());
      if (d == null) {
        dependencies.put(dependency.getOwnerModule(),d=ContainerUtilRt.<GradleDependency>newHashSet());
      }
      d.add(dependency);
    }
  }
;
  for (  GradleEntity entity : entities) {
    entity.invite(visitor);
  }
  myModuleManager.importModules(modules,myProject,false,synchronous);
  for (  Map.Entry<GradleModule,Collection<GradleContentRoot>> entry : contentRoots.entrySet()) {
    Module module=myProjectStructureHelper.findIdeModule(entry.getKey());
    if (module != null) {
      myContentRootManager.importContentRoots(entry.getValue(),module,synchronous);
    }
  }
  myLibraryManager.importLibraries(libraries,myProject,synchronous);
  myJarManager.importJars(jars,myProject,synchronous);
  for (  Map.Entry<GradleModule,Collection<GradleDependency>> entry : dependencies.entrySet()) {
    Module module=myProjectStructureHelper.findIdeModule(entry.getKey());
    if (module != null) {
      myDependencyManager.importDependencies(entry.getValue(),module,synchronous);
    }
  }
}
