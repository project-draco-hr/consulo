{
  ExportableOrderEntry dependency=findDependency(change,context);
  if (dependency == null) {
    return;
  }
  AbstractGradleDependencyId id=change.getEntityId();
  GradleUserProjectChange<?> userChange;
  if (dependency instanceof LibraryOrderEntry) {
    userChange=new GradleLibraryDependencyScopeUserChange(id.getOwnerModuleName(),id.getDependencyName(),change.getIdeValue());
  }
 else {
    userChange=new GradleModuleDependencyScopeUserChange(id.getOwnerModuleName(),id.getDependencyName(),change.getIdeValue());
  }
  if (context.changesToPreserve.contains(userChange)) {
    context.nonProcessedChanges.add(change);
  }
 else {
    context.dependencyManager.setScope(change.getGradleValue(),dependency,context.synchronous);
  }
}
