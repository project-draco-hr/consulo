{
  myProject=project;
  myBreakpointManager=new XBreakpointManagerImpl(project,this,startupManager);
  mySessionData=new LinkedHashMap<ProcessHandler,XDebugSessionData>();
  mySessions=new ArrayList<XDebugSessionImpl>();
  myExecutionPointHighlighter=new ExecutionPointHighlighter(project);
  mySessionTabs=new HashMap<ProcessHandler,XDebugSessionTab>();
  messageBus.connect().subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,new FileEditorManagerAdapter(){
    @Override public void fileOpened(    final FileEditorManager source,    final VirtualFile file){
      if (file instanceof HttpVirtualFile && file.equals(myExecutionPointHighlighter.getCurrentFile())) {
        myExecutionPointHighlighter.update();
      }
    }
  }
);
  messageBus.connect().subscribe(RunContentManagerImpl.RUN_CONTENT_TOPIC,new RunContentWithExecutorListener(){
    @Override public void contentSelected(    RunContentDescriptor descriptor,    @NotNull Executor executor){
    }
    @Override public void contentRemoved(    RunContentDescriptor descriptor,    @NotNull Executor executor){
      if (executor.equals(DefaultDebugExecutor.getDebugExecutorInstance())) {
        XDebugSessionTab sessionTab=mySessionTabs.remove(descriptor.getProcessHandler());
        if (sessionTab != null) {
          Disposer.dispose(sessionTab);
        }
      }
    }
  }
);
}
