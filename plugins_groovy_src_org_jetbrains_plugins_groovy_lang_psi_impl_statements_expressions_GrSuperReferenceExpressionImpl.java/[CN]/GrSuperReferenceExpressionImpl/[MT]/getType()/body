{
  final GrReferenceExpression qualifier=getQualifier();
  if (qualifier == null) {
    GroovyPsiElement context=PsiTreeUtil.getParentOfType(this,GrTypeDefinition.class,GroovyFile.class);
    if (context instanceof GrTypeDefinition) {
      final PsiClass superClass=((GrTypeDefinition)context).getSuperClass();
      if (superClass != null) {
        return JavaPsiFacade.getInstance(getProject()).getElementFactory().createType(superClass);
      }
    }
 else     if (context instanceof GroovyFileBase) {
      return JavaPsiFacade.getInstance(getProject()).getElementFactory().createTypeByFQClassName(GrTypeDefinition.DEFAULT_BASE_CLASS_NAME,getResolveScope());
    }
  }
 else {
    final PsiElement resolved=qualifier.resolve();
    if (resolved instanceof PsiClass) {
      return getSuperType((PsiClass)resolved);
    }
  }
  return null;
}
