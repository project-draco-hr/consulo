{
  if (key == VcsDataKeys.CHANGES) {
    sink.put(VcsDataKeys.CHANGES,getSelectedChanges());
  }
 else   if (key == VcsDataKeys.CHANGE_LEAD_SELECTION) {
    sink.put(VcsDataKeys.CHANGE_LEAD_SELECTION,getLeadSelection());
  }
 else   if (key == VcsDataKeys.CHANGE_LISTS) {
    sink.put(VcsDataKeys.CHANGE_LISTS,getSelectedChangeLists());
  }
 else   if (key == PlatformDataKeys.VIRTUAL_FILE_ARRAY) {
    sink.put(PlatformDataKeys.VIRTUAL_FILE_ARRAY,getSelectedFiles());
  }
 else   if (key == PlatformDataKeys.NAVIGATABLE) {
    final VirtualFile[] files=getSelectedFiles();
    if (files.length == 1 && !files[0].isDirectory()) {
      sink.put(PlatformDataKeys.NAVIGATABLE,new OpenFileDescriptor(myProject,files[0],0));
    }
  }
 else   if (key == PlatformDataKeys.NAVIGATABLE_ARRAY) {
    sink.put(PlatformDataKeys.NAVIGATABLE_ARRAY,ChangesUtil.getNavigatableArray(myProject,getSelectedFiles()));
  }
 else   if (key == PlatformDataKeys.DELETE_ELEMENT_PROVIDER) {
    final TreePath[] paths=getSelectionPaths();
    if (paths != null) {
      for (      TreePath path : paths) {
        ChangesBrowserNode node=(ChangesBrowserNode)path.getLastPathComponent();
        if (!(node.getUserObject() instanceof ChangeList)) {
          sink.put(PlatformDataKeys.DELETE_ELEMENT_PROVIDER,new VirtualFileDeleteProvider());
          break;
        }
      }
    }
  }
 else   if (key == PlatformDataKeys.COPY_PROVIDER) {
    sink.put(PlatformDataKeys.COPY_PROVIDER,myCopyProvider);
  }
 else   if (key == UNVERSIONED_FILES_DATA_KEY) {
    sink.put(UNVERSIONED_FILES_DATA_KEY,getSelectedUnversionedFiles());
  }
 else   if (key == VcsDataKeys.MODIFIED_WITHOUT_EDITING_DATA_KEY) {
    sink.put(VcsDataKeys.MODIFIED_WITHOUT_EDITING_DATA_KEY,getSelectedModifiedWithoutEditing());
  }
 else   if (key == MISSING_FILES_DATA_KEY) {
    sink.put(MISSING_FILES_DATA_KEY,getSelectedMissingFiles());
  }
 else   if (VcsDataKeys.HAVE_LOCALLY_DELETED == key) {
    sink.put(VcsDataKeys.HAVE_LOCALLY_DELETED,haveLocallyDeleted());
  }
 else   if (VcsDataKeys.HAVE_MODIFIED_WITHOUT_EDITING == key) {
    sink.put(VcsDataKeys.HAVE_MODIFIED_WITHOUT_EDITING,haveLocallyModified());
  }
 else   if (key == HELP_ID_DATA_KEY) {
    sink.put(HELP_ID_DATA_KEY,ourHelpId);
  }
 else   if (key == VcsDataKeys.CHANGES_IN_LIST_KEY) {
    final TreePath selectionPath=getSelectionPath();
    if (selectionPath != null && selectionPath.getPathCount() > 1) {
      ChangesBrowserNode firstNode=(ChangesBrowserNode)selectionPath.getPathComponent(1);
      if (firstNode instanceof ChangesBrowserChangeListNode) {
        final List<Change> list=firstNode.getAllChangesUnder();
        sink.put(VcsDataKeys.CHANGES_IN_LIST_KEY,list);
      }
    }
  }
}
