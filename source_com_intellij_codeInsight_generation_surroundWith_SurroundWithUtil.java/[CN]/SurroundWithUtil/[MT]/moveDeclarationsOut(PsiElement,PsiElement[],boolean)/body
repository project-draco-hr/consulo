{
  try {
    PsiManager psiManager=block.getManager();
    PsiElementFactory factory=psiManager.getElementFactory();
    ArrayList<PsiElement> array=new ArrayList<PsiElement>();
    StatementsLoop:     for (int i=0; i < statements.length; i++) {
      PsiElement statement=statements[i];
      if (statement instanceof PsiDeclarationStatement) {
        PsiDeclarationStatement declaration=(PsiDeclarationStatement)statement;
        if (needToDeclareOut(block,statements,declaration)) {
          PsiElement[] elements=declaration.getDeclaredElements();
          for (int j=0; j < elements.length; j++) {
            PsiVariable var=(PsiVariable)elements[j];
            PsiExpression initializer=var.getInitializer();
            if (initializer != null) {
              String name=var.getName();
              PsiExpressionStatement assignment=(PsiExpressionStatement)factory.createStatementFromText(name + "=x;",null);
              assignment=(PsiExpressionStatement)CodeStyleManager.getInstance(psiManager.getProject()).reformat(assignment);
              PsiAssignmentExpression expr=(PsiAssignmentExpression)assignment.getExpression();
              expr.getRExpression().replace(initializer);
              assignment=(PsiExpressionStatement)block.addAfter(assignment,declaration);
              array.add(assignment);
            }
          }
          PsiDeclarationStatement newDeclaration;
          if (array.size() > 0) {
            PsiElement firstStatement=array.get(0);
            newDeclaration=(PsiDeclarationStatement)block.addBefore(declaration,firstStatement);
            declaration.delete();
          }
 else {
            newDeclaration=declaration;
          }
          elements=newDeclaration.getDeclaredElements();
          for (int j=0; j < elements.length; j++) {
            PsiVariable var=(PsiVariable)elements[j];
            PsiExpression initializer=var.getInitializer();
            if (initializer != null) {
              if (!generateInitializers || var.hasModifierProperty(PsiModifier.FINAL)) {
                initializer.delete();
              }
 else {
                String defaultValue=CodeInsightUtil.getDefaultValueOfType(var.getType());
                PsiExpression expr=factory.createExpressionFromText(defaultValue,null);
                initializer.replace(expr);
              }
            }
          }
          continue StatementsLoop;
        }
      }
      array.add(statement);
    }
    return array.toArray(new PsiElement[array.size()]);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
    return statements;
  }
}
