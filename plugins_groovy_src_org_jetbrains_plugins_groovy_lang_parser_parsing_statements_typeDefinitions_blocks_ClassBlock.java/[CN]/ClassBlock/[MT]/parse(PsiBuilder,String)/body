{
  PsiBuilder.Marker cbMarker=builder.mark();
  if (!ParserUtils.getToken(builder,mLCURLY)) {
    builder.error(GroovyBundle.message("lcurly.expected"));
    cbMarker.rollbackTo();
    return WRONGWAY;
  }
  ClassMember.parse(builder,className);
  IElementType sep=Separators.parse(builder);
  while (!WRONGWAY.equals(sep)) {
    ClassMember.parse(builder,className);
    sep=Separators.parse(builder);
  }
  if (builder.getTokenType() != mRCURLY) {
    builder.error(GroovyBundle.message("rcurly.expected"));
  }
  while (!builder.eof() && !ParserUtils.getToken(builder,mRCURLY)) {
    ClassMember.parse(builder,className);
    builder.advanceLexer();
  }
  cbMarker.done(CLASS_BODY);
  return CLASS_BODY;
}
