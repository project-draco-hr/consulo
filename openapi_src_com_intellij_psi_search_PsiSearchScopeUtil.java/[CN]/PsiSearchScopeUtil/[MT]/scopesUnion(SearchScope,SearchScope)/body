{
  if (scope1 instanceof LocalSearchScope) {
    LocalSearchScope _scope1=(LocalSearchScope)scope1;
    if (scope2 instanceof LocalSearchScope) {
      LocalSearchScope _scope2=(LocalSearchScope)scope2;
      return _scope1.union(_scope2);
    }
 else {
      for (      final PsiElement element : _scope1.getScope()) {
        if (isInScope(scope2,element))         return scope2;
      }
      return null;
    }
  }
 else   if (scope2 instanceof LocalSearchScope) {
    return scopesUnion(scope2,scope1);
  }
 else {
    final GlobalSearchScope _scope1=(GlobalSearchScope)scope1;
    final GlobalSearchScope _scope2=(GlobalSearchScope)scope2;
    return new GlobalSearchScope(){
      public boolean contains(      VirtualFile file){
        return _scope1.contains(file) || _scope2.contains(file);
      }
      public int compare(      VirtualFile file1,      VirtualFile file2){
        return 0;
      }
      public boolean isSearchInModuleContent(      Module aModule){
        return _scope1.isSearchInModuleContent(aModule) || _scope2.isSearchInModuleContent(aModule);
      }
      public boolean isSearchInLibraries(){
        return _scope1.isSearchInLibraries() || _scope2.isSearchInLibraries();
      }
    }
;
  }
}
