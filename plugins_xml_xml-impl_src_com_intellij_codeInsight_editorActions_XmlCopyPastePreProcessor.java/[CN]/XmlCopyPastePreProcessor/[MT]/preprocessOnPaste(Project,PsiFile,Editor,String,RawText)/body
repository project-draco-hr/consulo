{
  final Document document=editor.getDocument();
  PsiDocumentManager.getInstance(project).commitDocument(document);
  int caretOffset=editor.getCaretModel().getOffset();
  PsiElement element=PsiUtilCore.getElementAtOffset(file,caretOffset);
  ASTNode node=element.getNode();
  if (node != null) {
    boolean hasMarkup=text.indexOf('>') >= 0 || text.indexOf('<') >= 0;
    if (element.getTextOffset() == caretOffset && node.getElementType() == XmlElementType.XML_END_TAG_START && node.getTreePrev().getElementType() == XmlElementType.XML_TAG_END) {
      return hasMarkup ? text : encode(text,element);
    }
 else {
      XmlElement parent=PsiTreeUtil.getParentOfType(element,XmlText.class,XmlAttributeValue.class);
      if (parent != null) {
        if (parent instanceof XmlText && hasMarkup) {
          return text;
        }
        if (TreeUtil.findParent(node,XmlElementType.XML_CDATA) == null && TreeUtil.findParent(node,XmlElementType.XML_COMMENT) == null) {
          return encode(text,element);
        }
      }
    }
  }
  return text;
}
