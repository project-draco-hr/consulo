{
  if (CompletionAutoPopupHandler.ourTestingAutopopup) {
    System.out.println("CodeCompletionHandlerBase.doComplete");
  }
  final Editor editor=initContext.getEditor();
  final CompletionParameters parameters=createCompletionParameters(invocationCount,initContext);
  final LookupImpl lookup=obtainLookup(editor);
  final Semaphore freezeSemaphore=new Semaphore();
  freezeSemaphore.down();
  final CompletionProgressIndicator indicator=new CompletionProgressIndicator(editor,parameters,this,freezeSemaphore,initContext.getOffsetMap(),lookup);
  final AtomicReference<LookupElement[]> data=startCompletionThread(parameters,indicator,initContext);
  if (!invokedExplicitly && (!ApplicationManager.getApplication().isUnitTestMode() || CompletionAutoPopupHandler.ourTestingAutopopup)) {
    indicator.notifyBackgrounded();
    return;
  }
  if (freezeSemaphore.waitFor(2000)) {
    final LookupElement[] allItems=data.get();
    if (CompletionAutoPopupHandler.ourTestingAutopopup) {
      System.out.println("allItems = " + allItems);
    }
    if (allItems != null) {
      completionFinished(initContext.getStartOffset(),initContext.getSelectionEndOffset(),indicator,allItems);
      return;
    }
  }
  if (CompletionAutoPopupHandler.ourTestingAutopopup) {
    System.out.println("backgrounded");
  }
  indicator.notifyBackgrounded();
  indicator.showLookup();
}
