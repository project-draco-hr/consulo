{
  CompletionContext context=createCompletionContext(hostFile,hostStartOffset,hostEditor,hostMap);
  CompletionParameters parameters=createCompletionParameters(invocationCount,initContext,context);
  CompletionPhase phase=CompletionServiceImpl.getCompletionPhase();
  if (phase instanceof CompletionPhase.CommittingDocuments) {
    if (phase.indicator != null) {
      phase.indicator.closeAndFinish(false);
    }
    ((CompletionPhase.CommittingDocuments)phase).replaced=true;
  }
 else {
    CompletionServiceImpl.assertPhase(CompletionPhase.NoCompletion.getClass());
  }
  final Editor editor=initContext.getEditor();
  final Semaphore freezeSemaphore=new Semaphore();
  freezeSemaphore.down();
  final CompletionProgressIndicator indicator=new CompletionProgressIndicator(editor,parameters,this,freezeSemaphore,initContext.getOffsetMap(),hasModifiers);
  indicator.addMapToDispose(hostMap);
  indicator.addMapToDispose(context.getOffsetMap());
  CompletionServiceImpl.setCompletionPhase(synchronous ? new CompletionPhase.Synchronous(indicator) : new CompletionPhase.BgCalculation(indicator));
  final AtomicReference<LookupElement[]> data=startCompletionThread(parameters,indicator,initContext);
  if (!synchronous) {
    return;
  }
  if (freezeSemaphore.waitFor(2000)) {
    final LookupElement[] allItems=data.get();
    if (allItems != null) {
      completionFinished(initContext.getStartOffset(),initContext.getSelectionEndOffset(),indicator,allItems,hasModifiers);
      if (CompletionServiceImpl.isPhase(CompletionPhase.Synchronous.class)) {
        LOG.error("sync phase survived: " + Arrays.toString(allItems) + "; indicator="+ CompletionServiceImpl.getCompletionPhase().indicator+ "; myIndicator="+ indicator);
        CompletionServiceImpl.setCompletionPhase(CompletionPhase.NoCompletion);
      }
      return;
    }
  }
  CompletionServiceImpl.setCompletionPhase(new CompletionPhase.BgCalculation(indicator));
  indicator.showLookup();
}
