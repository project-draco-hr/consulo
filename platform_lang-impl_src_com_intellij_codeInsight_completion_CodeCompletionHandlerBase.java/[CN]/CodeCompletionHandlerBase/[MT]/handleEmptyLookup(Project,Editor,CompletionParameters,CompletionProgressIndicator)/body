{
  if (ApplicationManager.getApplication().isUnitTestMode())   return CompletionPhase.NoCompletion;
  if (!invokedExplicitly) {
    return CompletionPhase.NoCompletion;
  }
  CompletionPhase result=CompletionPhase.NoCompletion;
  for (  final CompletionContributor contributor : CompletionContributor.forParameters(parameters)) {
    final String text=contributor.handleEmptyLookup(parameters,editor);
    if (StringUtil.isNotEmpty(text)) {
      final EditorHintListener listener=new EditorHintListener(){
        public void hintShown(        final Project project,        final LightweightHint hint,        final int flags){
          indicator.liveAfterDeath(hint);
        }
      }
;
      final MessageBusConnection connection=project.getMessageBus().connect();
      connection.subscribe(EditorHintListener.TOPIC,listener);
      HintManager.getInstance().showErrorHint(editor,text);
      connection.disconnect();
      result=new CompletionPhase.NoSuggestionsHint();
      break;
    }
  }
  DaemonCodeAnalyzer codeAnalyzer=DaemonCodeAnalyzer.getInstance(project);
  if (codeAnalyzer != null) {
    codeAnalyzer.updateVisibleHighlighters(editor);
  }
  return result;
}
