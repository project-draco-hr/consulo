{
  if (items.length == 0) {
    LookupManager.getInstance(indicator.getProject()).hideActiveLookup();
    indicator.handleEmptyLookup();
    return;
  }
  final AutoCompletionDecision decision=shouldAutoComplete(indicator,items);
  if (decision == AutoCompletionDecision.SHOW_LOOKUP) {
    CompletionServiceImpl.setCompletionPhase(new CompletionPhase.ItemsCalculated());
    indicator.getLookup().setCalculating(false);
    indicator.showLookup();
    if (isAutocompleteCommonPrefixOnInvocation() && items.length > 1) {
      indicator.fillInCommonPrefix(false);
    }
  }
 else   if (decision instanceof AutoCompletionDecision.InsertItem) {
    final LookupElement item=((AutoCompletionDecision.InsertItem)decision).getElement();
    indicator.closeAndFinish(true);
    indicator.getCompletionState().assertDisposed();
    final Runnable restorePrefix=rememberDocumentState(indicator.getEditor());
    indicator.getOffsetMap().addOffset(CompletionInitializationContext.START_OFFSET,(offset1 - item.getPrefixMatcher().getPrefix().length()));
    handleSingleItem(offset2,indicator,items,item.getLookupString(),item);
    if (CompletionService.getCompletionService().getCurrentCompletion() == null && !ApplicationManager.getApplication().isUnitTestMode()) {
      CompletionServiceImpl.setCompletionPhase(new CompletionPhase.InsertedSingleItem(indicator,restorePrefix));
    }
  }
}
