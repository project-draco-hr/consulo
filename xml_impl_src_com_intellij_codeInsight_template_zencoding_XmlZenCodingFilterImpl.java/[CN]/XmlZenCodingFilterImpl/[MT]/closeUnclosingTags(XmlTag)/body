{
  final List<SmartPsiElementPointer<XmlTag>> tagToClose=new ArrayList<SmartPsiElementPointer<XmlTag>>();
  Project project=root.getProject();
  final SmartPointerManager pointerManager=SmartPointerManager.getInstance(project);
  root.accept(new XmlRecursiveElementVisitor(){
    @Override public void visitXmlTag(    final XmlTag tag){
      if (!isTagClosed(tag)) {
        tagToClose.add(pointerManager.createLazyPointer(tag));
      }
    }
  }
);
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  for (  final SmartPsiElementPointer<XmlTag> pointer : tagToClose) {
    final XmlTag tag=pointer.getElement();
    if (tag != null) {
      final ASTNode child=XmlChildRole.START_TAG_END_FINDER.findChild(tag.getNode());
      if (child != null) {
        final int offset=child.getTextRange().getStartOffset();
        VirtualFile file=tag.getContainingFile().getVirtualFile();
        if (file != null) {
          final Document document=FileDocumentManager.getInstance().getDocument(file);
          documentManager.doPostponedOperationsAndUnblockDocument(document);
          ApplicationManager.getApplication().runWriteAction(new Runnable(){
            public void run(){
              document.replaceString(offset,tag.getTextRange().getEndOffset(),"/>");
            }
          }
);
        }
      }
    }
  }
  documentManager.commitAllDocuments();
}
