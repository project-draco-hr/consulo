{
  l.writeLock().lock();
  try {
    checkMax(true);
    List<IntervalNode<T>> affected=new ArrayList<IntervalNode<T>>();
    collectNodesToRetarget(getRoot(),start,end,affected);
    if (affected.isEmpty())     return;
    int shift=newBase - start;
    for (    IntervalNode<T> node : affected) {
      removeNode(node);
      node.setLeft(null);
      node.setRight(null);
      node.setParent(null);
      node.changeDelta(shift);
      node.setValid(true);
      pushDelta(node);
      IntervalNode<T> inserted=findOrInsert(node);
      if (inserted != node) {
        for (        Getter<T> interval : node.intervals) {
          T t=interval.get();
          if (t != null) {
            inserted.addInterval(t);
          }
        }
      }
    }
  }
  finally {
    checkMax(true);
    l.writeLock().unlock();
  }
}
