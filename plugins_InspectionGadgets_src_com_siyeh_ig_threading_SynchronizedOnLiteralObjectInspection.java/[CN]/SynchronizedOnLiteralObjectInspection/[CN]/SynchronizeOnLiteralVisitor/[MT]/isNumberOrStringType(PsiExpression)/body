{
  final PsiType type=expression.getType();
  if (type == null) {
    return false;
  }
  final Project project=expression.getProject();
  final JavaPsiFacade psiFacade=JavaPsiFacade.getInstance(project);
  final PsiClass javaLangNumberClass=psiFacade.findClass(CommonClassNames.JAVA_LANG_NUMBER,expression.getResolveScope());
  if (javaLangNumberClass == null) {
    return false;
  }
  final PsiElementFactory elementFactory=psiFacade.getElementFactory();
  final PsiClassType javaLangNumberType=elementFactory.createType(javaLangNumberClass);
  return type.equalsToText(CommonClassNames.JAVA_LANG_STRING) || type.equalsToText(CommonClassNames.JAVA_LANG_BOOLEAN) || type.equalsToText(CommonClassNames.JAVA_LANG_CHARACTER)|| javaLangNumberType.isAssignableFrom(type);
}
