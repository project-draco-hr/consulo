{
  final SelectionModel selectionModel=editor.getSelectionModel();
  if (selectionModel.hasSelection()) {
    PsiElement elementAtStart=file.findElementAt(selectionModel.getSelectionStart());
    PsiElement elementAtEnd=file.findElementAt(selectionModel.getSelectionEnd() - 1);
    if (elementAtStart == null || elementAtStart instanceof PsiWhiteSpace || elementAtStart instanceof PsiComment) {
      elementAtStart=PsiTreeUtil.skipSiblingsForward(elementAtStart,PsiWhiteSpace.class,PsiComment.class);
      if (elementAtStart == null)       return null;
    }
    if (elementAtEnd == null || elementAtEnd instanceof PsiWhiteSpace || elementAtEnd instanceof PsiComment) {
      elementAtEnd=PsiTreeUtil.skipSiblingsBackward(elementAtEnd,PsiWhiteSpace.class,PsiComment.class);
      if (elementAtEnd == null)       return null;
    }
    PsiElement parent=PsiTreeUtil.findCommonParent(elementAtStart,elementAtEnd);
    if (parent instanceof PsiExpression) {
      final PsiType type=((PsiExpression)parent).getType();
      return type instanceof PsiArrayType || InheritanceUtil.isInheritor(type,CommonClassNames.JAVA_LANG_ITERABLE) ? (PsiExpression)parent : null;
    }
    return null;
  }
  PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
  while (element instanceof PsiWhiteSpace) {
    element=element.getPrevSibling();
  }
  if (element instanceof PsiExpressionStatement) {
    element=((PsiExpressionStatement)element).getExpression().getLastChild();
  }
  while ((element=PsiTreeUtil.getParentOfType(element,PsiExpression.class,true)) != null) {
    if (element.getParent() instanceof PsiMethodCallExpression)     continue;
    final PsiType type=((PsiExpression)element).getType();
    if (type instanceof PsiArrayType || InheritanceUtil.isInheritor(type,CommonClassNames.JAVA_LANG_ITERABLE))     return (PsiExpression)element;
  }
  return null;
}
