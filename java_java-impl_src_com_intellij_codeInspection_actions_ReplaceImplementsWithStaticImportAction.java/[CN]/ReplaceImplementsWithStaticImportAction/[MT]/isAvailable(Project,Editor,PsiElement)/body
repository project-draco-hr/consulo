{
  if (!(element.getContainingFile() instanceof PsiJavaFile))   return false;
  if (element instanceof PsiIdentifier) {
    final PsiElement parent=element.getParent();
    if (parent instanceof PsiClass) {
      return isEmptyClass(project,(PsiClass)parent) && DirectClassInheritorsSearch.search((PsiClass)parent).findFirst() != null;
    }
  }
  final PsiReference psiReference=TargetElementUtilBase.findReference(editor);
  if (psiReference == null)   return false;
  final PsiReferenceList referenceList=PsiTreeUtil.getParentOfType(psiReference.getElement(),PsiReferenceList.class);
  if (referenceList == null)   return false;
  final PsiClass psiClass=PsiTreeUtil.getParentOfType(referenceList,PsiClass.class);
  if (psiClass == null)   return false;
  if (psiClass.getExtendsList() != referenceList && psiClass.getImplementsList() != referenceList)   return false;
  final PsiElement target=psiReference.resolve();
  if (target == null || !(target instanceof PsiClass))   return false;
  return isEmptyClass(project,(PsiClass)target);
}
