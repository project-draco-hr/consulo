{
  if (!CodeInsightUtilBase.preparePsiElementForWrite(file))   return;
  final PsiReference psiReference=file.findReferenceAt(editor.getCaretModel().getOffset());
  LOG.assertTrue(psiReference != null);
  final PsiElement element=psiReference.getElement();
  final PsiClass psiClass=PsiTreeUtil.getParentOfType(element,PsiClass.class);
  LOG.assertTrue(psiClass != null);
  final PsiElement target=psiReference.resolve();
  LOG.assertTrue(target instanceof PsiClass);
  final PsiClass targetClass=(PsiClass)target;
  for (  PsiField constField : targetClass.getAllFields()) {
    for (    PsiReference ref : ReferencesSearch.search(constField,new LocalSearchScope(psiClass))) {
      ((PsiReferenceExpressionImpl)ref).bindToElementViaStaticImport(targetClass,constField.getName(),((PsiJavaFile)file).getImportList());
    }
  }
  element.delete();
  new OptimizeImportsProcessor(project,file).run();
}
