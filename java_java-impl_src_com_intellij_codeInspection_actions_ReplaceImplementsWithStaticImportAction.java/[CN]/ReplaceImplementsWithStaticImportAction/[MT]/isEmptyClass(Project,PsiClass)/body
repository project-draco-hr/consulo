{
  if (!targetClass.isInterface()) {
    return false;
  }
  final PsiReferenceList extendsList=targetClass.getExtendsList();
  LOG.assertTrue(extendsList != null);
  if (extendsList.getReferencedTypes().length > 0) {
    final List<PsiMethod> methods=new ArrayList<PsiMethod>(Arrays.asList(targetClass.getAllMethods()));
    final PsiClass objectClass=JavaPsiFacade.getInstance(project).findClass(CommonClassNames.JAVA_LANG_OBJECT,GlobalSearchScope.allScope(project));
    if (objectClass == null)     return false;
    methods.removeAll(Arrays.asList(objectClass.getMethods()));
    if (methods.size() > 0)     return false;
  }
 else   if (targetClass.getMethods().length > 0) {
    return false;
  }
  return targetClass.getAllFields().length > 0;
}
