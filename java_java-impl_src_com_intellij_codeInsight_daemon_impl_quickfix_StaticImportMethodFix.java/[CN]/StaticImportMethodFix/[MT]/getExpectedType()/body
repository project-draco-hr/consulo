{
  final PsiMethodCallExpression methodCall=myMethodCall.getElement();
  if (methodCall == null)   return null;
  final PsiElement parent=PsiResolveHelperImpl.skipParenthesizedExprUp(methodCall.getParent());
  if (parent instanceof PsiVariable) {
    if (methodCall.equals(PsiResolveHelperImpl.skipParenthesizedExprDown(((PsiVariable)parent).getInitializer()))) {
      return ((PsiVariable)parent).getType();
    }
  }
 else   if (parent instanceof PsiAssignmentExpression) {
    if (methodCall.equals(PsiResolveHelperImpl.skipParenthesizedExprDown(((PsiAssignmentExpression)parent).getRExpression()))) {
      return ((PsiAssignmentExpression)parent).getLExpression().getType();
    }
  }
 else   if (parent instanceof PsiReturnStatement) {
    final PsiLambdaExpression lambdaExpression=PsiTreeUtil.getParentOfType(parent,PsiLambdaExpression.class);
    if (lambdaExpression != null) {
      return LambdaUtil.getFunctionalInterfaceReturnType(lambdaExpression.getFunctionalInterfaceType());
    }
 else {
      PsiMethod method=PsiTreeUtil.getParentOfType(parent,PsiMethod.class);
      if (method != null) {
        return method.getReturnType();
      }
    }
  }
 else   if (parent instanceof PsiExpressionList) {
    final PsiElement pParent=parent.getParent();
    if (pParent instanceof PsiCallExpression && parent.equals(((PsiCallExpression)pParent).getArgumentList())) {
      final JavaResolveResult resolveResult=((PsiCallExpression)pParent).resolveMethodGenerics();
      final PsiElement psiElement=resolveResult.getElement();
      if (psiElement instanceof PsiMethod) {
        final PsiMethod psiMethod=(PsiMethod)psiElement;
        final PsiParameter[] parameters=psiMethod.getParameterList().getParameters();
        final int idx=ArrayUtilRt.find(((PsiExpressionList)parent).getExpressions(),PsiResolveHelperImpl.skipParenthesizedExprUp(methodCall));
        if (idx > -1) {
          PsiType parameterType=parameters[Math.min(idx,parameters.length - 1)].getType();
          if (idx >= parameters.length - 1) {
            final PsiParameter lastParameter=parameters[parameters.length - 1];
            if (lastParameter.isVarArgs()) {
              parameterType=((PsiEllipsisType)lastParameter.getType()).getComponentType();
            }
          }
          return resolveResult.getSubstitutor().substitute(parameterType);
        }
 else {
          return null;
        }
      }
    }
  }
 else   if (parent instanceof PsiLambdaExpression) {
    return LambdaUtil.getFunctionalInterfaceReturnType(((PsiLambdaExpression)parent).getFunctionalInterfaceType());
  }
  return null;
}
