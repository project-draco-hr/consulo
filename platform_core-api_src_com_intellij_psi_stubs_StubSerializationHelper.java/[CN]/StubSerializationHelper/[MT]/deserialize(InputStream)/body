{
  FileLocalStringEnumerator storage=new FileLocalStringEnumerator(false);
  StubInputStream inputStream=new StubInputStream(stream,storage);
  final int numberOfStrings=DataInputOutputUtil.readINT(inputStream);
  byte[] buffer=IOUtil.allocReadWriteUTFBuffer();
  storage.myStrings.ensureCapacity(numberOfStrings);
  int i=0;
  while (i < numberOfStrings) {
    String s=myStringInterner.get(IOUtil.readUTFFast(buffer,inputStream));
    storage.myStrings.add(s);
    ++i;
  }
  int stubFilesCount=DataInputOutputUtil.readINT(inputStream);
  if (stubFilesCount > 1) {
    final List<PsiFileStub> stubs=new ArrayList<PsiFileStub>(stubFilesCount);
    while (stubFilesCount-- > 0) {
      final PsiFileStub fileStub=(PsiFileStub)deserialize(inputStream,null);
      stubs.add(fileStub);
    }
    final PsiFileStub[] stubsArray=stubs.toArray(new PsiFileStub[stubs.size()]);
    for (    PsiFileStub stub : stubsArray) {
      if (stub instanceof PsiFileStubImpl) {
        ((PsiFileStubImpl)stub).setStubRoots(stubsArray);
      }
    }
    return stubsArray[0];
  }
 else {
    return deserialize(inputStream,null);
  }
}
