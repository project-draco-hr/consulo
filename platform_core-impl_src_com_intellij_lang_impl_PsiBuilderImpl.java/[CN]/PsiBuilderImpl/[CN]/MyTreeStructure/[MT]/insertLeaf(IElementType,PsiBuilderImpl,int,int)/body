{
  final int start=builder.myLexStarts[startLexemeIndex];
  final int end=builder.myLexStarts[endLexemeIndex];
  if (start > end || ((start == end) && !(type instanceof ILeafElementType)))   return;
  final Token lexeme;
  if (type instanceof ILightLazyParseableElementType) {
    lexeme=myLazyPool.alloc();
    LazyParseableToken lazyParseableToken=(LazyParseableToken)lexeme;
    lazyParseableToken.myParent=this;
    lazyParseableToken.myStartIndex=startLexemeIndex;
    lazyParseableToken.myEndIndex=endLexemeIndex;
  }
 else {
    lexeme=myPool.alloc();
  }
  lexeme.myBuilder=builder;
  lexeme.myTokenType=type;
  lexeme.myTokenStart=start;
  lexeme.myTokenEnd=end;
  ensureCapacity();
  nodes[count++]=lexeme;
}
