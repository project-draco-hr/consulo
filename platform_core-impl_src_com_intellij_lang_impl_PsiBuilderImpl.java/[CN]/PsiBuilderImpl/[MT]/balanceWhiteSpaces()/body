{
  RelativeTokenTypesView wsTokens=null;
  RelativeTokenTextView tokenTextGetter=null;
  for (int i=1, size=myProduction.size() - 1; i < size; i++) {
    final ProductionMarker item=myProduction.get(i);
    if (item instanceof StartMarker && ((StartMarker)item).myDoneMarker == null) {
      LOG.error(UNBALANCED_MESSAGE);
    }
    final int prevProductionLexIndex=myProduction.get(i - 1).myLexemeIndex;
    int idx=item.myLexemeIndex;
    while (idx > prevProductionLexIndex && whitespaceOrComment(myLexTypes[idx - 1]))     idx--;
    final int wsStartIndex=idx;
    int wsEndIndex=item.myLexemeIndex;
    while (wsEndIndex < myLexemeCount && whitespaceOrComment(myLexTypes[wsEndIndex]))     wsEndIndex++;
    if (wsTokens == null)     wsTokens=new RelativeTokenTypesView();
    wsTokens.configure(wsStartIndex,wsEndIndex);
    final boolean atEnd=wsStartIndex == 0 || wsEndIndex == myLexemeCount;
    if (tokenTextGetter == null)     tokenTextGetter=new RelativeTokenTextView();
    tokenTextGetter.configure(wsStartIndex);
    item.myLexemeIndex=wsStartIndex + item.myEdgeTokenBinder.getEdgePosition(wsTokens,atEnd,tokenTextGetter);
  }
}
