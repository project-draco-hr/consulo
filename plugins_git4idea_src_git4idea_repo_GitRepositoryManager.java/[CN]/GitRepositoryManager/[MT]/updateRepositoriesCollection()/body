{
  try {
    REPO_LOCK.writeLock().lock();
    final VirtualFile[] roots=myVcsManager.getRootsUnderVcs(myVcs);
    for (Iterator<Map.Entry<VirtualFile,GitRepository>> iterator=myRepositories.entrySet().iterator(); iterator.hasNext(); ) {
      if (!ArrayUtil.contains(iterator.next().getValue().getRoot(),roots)) {
        iterator.remove();
      }
    }
    for (    VirtualFile root : roots) {
      if (!myRepositories.containsKey(root)) {
        if (gitRootOK(root)) {
          GitRepository repository=createGitRepository(root);
          myRepositories.put(root,repository);
        }
 else {
          LOG.info("Invalid Git root: " + root);
        }
      }
    }
  }
  finally {
    REPO_LOCK.writeLock().unlock();
  }
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    myRootScanTask.consume(ROOT_SCAN_STUB_OBJECT);
  }
 else {
    myRootScanQueue.add(ROOT_SCAN_STUB_OBJECT);
  }
}
