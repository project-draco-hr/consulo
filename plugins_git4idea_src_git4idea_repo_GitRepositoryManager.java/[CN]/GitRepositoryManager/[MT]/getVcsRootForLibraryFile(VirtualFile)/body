{
  VirtualFile root=myVcsManager.getVcsRootFor(VfsUtilCore.getVirtualFileForJar(file));
  if (root != null) {
    return root;
  }
  List<OrderEntry> entries=myFileIndex.getOrderEntriesForFile(file);
  Set<VirtualFile> libraryRoots=new HashSet<VirtualFile>();
  for (  OrderEntry entry : entries) {
    if (entry instanceof LibraryOrderEntry || entry instanceof JdkOrderEntry) {
      libraryRoots.add(myVcsManager.getVcsRootFor(entry.getOwnerModule().getModuleFile()));
    }
  }
  if (libraryRoots.size() == 0) {
    return null;
  }
  Iterator<VirtualFile> libIterator=libraryRoots.iterator();
  VirtualFile topLibraryRoot=libIterator.next();
  while (libIterator.hasNext()) {
    VirtualFile libRoot=libIterator.next();
    if (VfsUtilCore.isAncestor(libRoot,topLibraryRoot,true)) {
      topLibraryRoot=libRoot;
    }
  }
  return topLibraryRoot;
}
