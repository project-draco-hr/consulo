{
  if (e instanceof RunCanceledByUserException)   return;
  LOG.debug(e);
  String error=e.getMessage();
  HyperlinkListener listener=null;
  if (error.contains("87") && e instanceof ProcessNotCreatedException) {
    final String commandLineString=((ProcessNotCreatedException)e).getCommandLine().getCommandLineString();
    if (commandLineString.length() > 1024 * 32) {
      error="Command line is too long. In order to reduce its length classpath file can be used.<br>" + "Would you like to enable classpath file mode for all run configurations of your project?<br>" + "<a href=\"\">Enable</a>";
      listener=new HyperlinkListener(){
        @Override public void hyperlinkUpdate(        HyperlinkEvent event){
          PropertiesComponent.getInstance(project).setValue("dynamic.classpath","true");
        }
      }
;
    }
  }
  final String message=ExecutionBundle.message("error.running.configuration.with.error.error.message",taskName,error);
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    LOG.error(message);
  }
  final HyperlinkListener finalListener=listener;
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      ToolWindowManager.getInstance(project).notifyByBalloon(toolWindowId,MessageType.ERROR,message,null,finalListener);
    }
  }
);
}
