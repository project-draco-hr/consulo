{
  int level_=0;
  boolean result_;
  if (root_ == ASSIGNMENT) {
    result_=assignment(builder_,level_ + 1);
  }
 else   if (root_ == CODE_BLOCK) {
    result_=code_block(builder_,level_ + 1);
  }
 else   if (root_ == CONDITION_ELEMENT) {
    result_=condition_element(builder_,level_ + 1);
  }
 else   if (root_ == COPYING) {
    result_=copying(builder_,level_ + 1);
  }
 else   if (root_ == INCLUDE_STATEMENT_ELEMENT) {
    result_=include_statement_element(builder_,level_ + 1);
  }
 else   if (root_ == MULTILINE_VALUE_ASSIGNMENT) {
    result_=multiline_value_assignment(builder_,level_ + 1);
  }
 else   if (root_ == OBJECT_PATH) {
    result_=object_path(builder_,level_ + 1);
  }
 else   if (root_ == ONE_LINE_COMMENT_ELEMENT) {
    result_=one_line_comment_element(builder_,level_ + 1);
  }
 else   if (root_ == UNSETTING) {
    result_=unsetting(builder_,level_ + 1);
  }
 else   if (root_ == VALUE_MODIFICATION) {
    result_=value_modification(builder_,level_ + 1);
  }
 else {
    Marker marker_=builder_.mark();
    result_=c_style_comment_element(builder_,level_ + 1);
    while (builder_.getTokenType() != null) {
      builder_.advanceLexer();
    }
    marker_.done(root_);
  }
  return builder_.getTreeBuilt();
}
