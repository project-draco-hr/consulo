{
  TextRange selectedRange=EditorUtil.getSelectionInAnyMode(editor);
  Document document=editor.getDocument();
  if (selectedRange.isEmpty()) {
    int line=document.getLineNumber(selectedRange.getStartOffset());
    selectedRange=TextRange.create(document.getLineStartOffset(line),document.getLineEndOffset(line));
    PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
    if (file != null && file.getFirstChild() != null && file.getFirstChild() != file.getLastChild()) {
      PsiElement e1=file.findElementAt(selectedRange.getStartOffset());
      PsiElement e2=file.findElementAt(selectedRange.getEndOffset());
      while (e1 != e2 && (e1 instanceof PsiWhiteSpace || e1 != null && StringUtil.isEmptyOrSpaces(e1.getText()))) {
        e1=ObjectUtils.chooseNotNull(e1.getNextSibling(),PsiTreeUtil.getDeepestFirst(e1.getParent()));
      }
      while (e1 != e2 && (e2 instanceof PsiWhiteSpace || e2 != null && StringUtil.isEmptyOrSpaces(e2.getText()))) {
        e2=ObjectUtils.chooseNotNull(e2.getPrevSibling(),PsiTreeUtil.getDeepestLast(e2.getParent()));
      }
      if (e1 instanceof LeafPsiElement)       e1=e1.getParent();
      if (e2 instanceof LeafPsiElement)       e2=e2.getParent();
      PsiElement parent=e1 == null ? e2 : e2 == null ? e1 : PsiTreeUtil.findCommonParent(e1,e2);
      if (parent != null && parent != file) {
        selectedRange=parent.getTextRange();
      }
    }
  }
  return document.getText(selectedRange);
}
