{
  final JPanel panel=new JPanel(new GridBagLayout());
  myCbAutoscroll=new JCheckBox(DebuggerBundle.message("label.base.renderer.configurable.autoscroll"));
  myCbShowSyntheticFields=new JCheckBox(DebuggerBundle.message("label.base.renderer.configurable.show.synthetic.fields"));
  myCbSort=new JCheckBox(DebuggerBundle.message("label.base.renderer.configurable.sort.alphabetically"));
  myCbHideNullArrayElements=new JCheckBox(DebuggerBundle.message("label.base.renderer.configurable.hide.null.array.elements"));
  myCbShowStatic=new JCheckBox(DebuggerBundle.message("label.base.renderer.configurable.show.static.fields"));
  myCbShowStaticFinalFields=new StateRestoringCheckBox(DebuggerBundle.message("label.base.renderer.configurable.show.static.final.fields"));
  myCbEnableAlternateViews=new JCheckBox(DebuggerBundle.message("label.base.renderer.configurable.alternate.view"));
  myCbShowStatic.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      if (myCbShowStatic.isSelected()) {
        myCbShowStaticFinalFields.makeSelectable();
      }
 else {
        myCbShowStaticFinalFields.makeUnselectable(false);
      }
    }
  }
);
  myCbShowDeclaredType=new JCheckBox(DebuggerBundle.message("label.base.renderer.configurable.show.declared.type"));
  myCbShowObjectId=new JCheckBox(DebuggerBundle.message("label.base.renderer.configurable.show.object.id"));
  myCbEnableToString=new JCheckBox(DebuggerBundle.message("label.base.renderer.configurable.enable.tostring"));
  myRbAllThatOverride=new JRadioButton(DebuggerBundle.message("label.base.renderer.configurable.all.overridding"));
  myRbFromList=new JRadioButton(DebuggerBundle.message("label.base.renderer.configurable.classes.from.list"));
  ButtonGroup group=new ButtonGroup();
  group.add(myRbAllThatOverride);
  group.add(myRbFromList);
  myToStringFilterEditor=new ClassFilterEditor(myProject);
  myCbEnableToString.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      final boolean enabled=myCbEnableToString.isSelected();
      myRbAllThatOverride.setEnabled(enabled);
      myRbFromList.setEnabled(enabled);
      myToStringFilterEditor.setEnabled(enabled && myRbFromList.isSelected());
    }
  }
);
  myRbFromList.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      myToStringFilterEditor.setEnabled(myCbEnableToString.isSelected() && myRbFromList.isSelected());
    }
  }
);
  panel.add(myCbSort,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,6,0,0),0,0));
  panel.add(myCbAutoscroll,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,6,0,0),0,0));
  final JLabel tooltipLabel=new JLabel(DebuggerBundle.message("label.debugger.general.configurable.tooltips.delay"));
  panel.add(tooltipLabel,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,0,0,0),0,0));
  myValueTooltipDelayField=new JTextField(10);
  panel.add(myValueTooltipDelayField,new GridBagConstraints(2,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,6,0,0),0,0));
  tooltipLabel.setLabelFor(myValueTooltipDelayField);
  final JPanel showPanel=new JPanel(new GridBagLayout());
  showPanel.setBorder(BorderFactory.createTitledBorder("Show"));
  showPanel.add(myCbShowDeclaredType,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,0,0,0),0,0));
  showPanel.add(myCbShowObjectId,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,0,0,0),0,0));
  showPanel.add(myCbShowSyntheticFields,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,10,0,0),0,0));
  showPanel.add(myCbShowStatic,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,10,0,0),0,0));
  showPanel.add(myCbShowStaticFinalFields,new GridBagConstraints(2,1,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,10,0,0),0,0));
  panel.add(showPanel,new GridBagConstraints(0,GridBagConstraints.RELATIVE,3,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(4,6,0,0),0,0));
  final JPanel arraysPanel=new JPanel(new BorderLayout());
  final JComponent arraysComponent=myArrayRendererConfigurable.createComponent();
  arraysComponent.setBorder(BorderFactory.createEmptyBorder(0,0,4,0));
  arraysPanel.add(arraysComponent,BorderLayout.CENTER);
  arraysPanel.add(myCbHideNullArrayElements,BorderLayout.SOUTH);
  arraysPanel.setBorder(BorderFactory.createTitledBorder("Arrays"));
  panel.add(arraysPanel,new GridBagConstraints(0,GridBagConstraints.RELATIVE,3,1,1.0,0.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,new Insets(4,6,0,0),0,0));
  panel.add(myCbEnableAlternateViews,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(10,6,0,10),0,0));
  panel.add(myCbEnableToString,new GridBagConstraints(0,GridBagConstraints.RELATIVE,3,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(4,6,0,0),0,0));
  panel.add(myRbAllThatOverride,new GridBagConstraints(0,GridBagConstraints.RELATIVE,3,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,12,0,0),0,0));
  panel.add(myRbFromList,new GridBagConstraints(0,GridBagConstraints.RELATIVE,3,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,12,0,0),0,0));
  panel.add(myToStringFilterEditor,new GridBagConstraints(0,GridBagConstraints.RELATIVE,3,1,1.0,1.0,GridBagConstraints.CENTER,GridBagConstraints.BOTH,new Insets(0,12,0,0),0,0));
  return panel;
}
