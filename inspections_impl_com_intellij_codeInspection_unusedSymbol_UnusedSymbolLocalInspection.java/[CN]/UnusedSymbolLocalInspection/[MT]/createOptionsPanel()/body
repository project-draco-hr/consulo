{
  JPanel panel=new JPanel(new GridLayout(5,1,2,2));
  final JCheckBox local=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option"),LOCAL_VARIABLE);
  final JCheckBox field=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option1"),FIELD);
  final JCheckBox method=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option2"),METHOD);
  final JCheckBox classes=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option3"),CLASS);
  final JCheckBox parameters=new JCheckBox(InspectionsBundle.message("inspection.unused.symbol.option4"),PARAMETER);
  final ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      LOCAL_VARIABLE=local.isSelected();
      CLASS=classes.isSelected();
      FIELD=field.isSelected();
      PARAMETER=parameters.isSelected();
      METHOD=method.isSelected();
    }
  }
;
  local.addActionListener(listener);
  field.addActionListener(listener);
  method.addActionListener(listener);
  classes.addActionListener(listener);
  parameters.addActionListener(listener);
  panel.add(local);
  panel.add(field);
  panel.add(method);
  panel.add(classes);
  panel.add(parameters);
  final JPanel listPanel=SpecialAnnotationsUtil.createSpecialAnnotationsListControl(INJECTION_ANNOS,InspectionsBundle.message("dependency.injection.annotations.list"));
  JPanel doNotExpand=new JPanel(new BorderLayout());
  final JPanel north=new JPanel(new BorderLayout(2,2));
  north.add(panel,BorderLayout.NORTH);
  north.add(listPanel,BorderLayout.SOUTH);
  doNotExpand.add(north,BorderLayout.NORTH);
  return doNotExpand;
}
