{
  super.visitField(field);
  if (!field.hasModifierProperty(PsiModifier.TRANSIENT)) {
    return;
  }
  final PsiClass containingClass=field.getContainingClass();
  if (!SerializationUtils.isSerializable(containingClass)) {
    return;
  }
  if (!SerializationUtils.hasReadObject(containingClass)) {
    registerFieldError(field);
  }
}
