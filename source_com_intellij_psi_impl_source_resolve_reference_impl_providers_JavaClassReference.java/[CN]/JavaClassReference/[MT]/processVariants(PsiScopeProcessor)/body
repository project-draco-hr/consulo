{
  if (processor instanceof CompletionProcessor && JavaClassReferenceProvider.EXTEND_CLASS_NAMES.getValue(getOptions()) != null) {
    ((CompletionProcessor)processor).setCompletionElements(getVariants());
    return;
  }
  PsiScopeProcessor processorToUse=processor;
  if (myInStaticImport) {
    processor.handleEvent(PsiScopeProcessor.Event.CHANGE_LEVEL,null);
  }
 else {
    if (isStaticClassReference()) {
      processor.handleEvent(PsiScopeProcessor.Event.START_STATIC,null);
    }
    processorToUse=new PsiScopeProcessor(){
      public boolean execute(      PsiElement element,      PsiSubstitutor substitutor){
        return !(element instanceof PsiClass || element instanceof PsiPackage) || processor.execute(element,substitutor);
      }
      public <V>V getHint(      Class<V> hintClass){
        return processor.getHint(hintClass);
      }
      public void handleEvent(      Event event,      Object associated){
        processor.handleEvent(event,associated);
      }
    }
;
  }
  super.processVariants(processorToUse);
}
