{
  final PsiClassType.ClassResolveResult resolveResult=classType.resolveGenerics();
  final PsiClass aClass=resolveResult.getElement();
  if (aClass == null)   return classType;
  final HashMap<PsiTypeParameter,PsiType> map=new HashMap<PsiTypeParameter,PsiType>();
  for (  PsiTypeParameter parameter : PsiUtil.typeParametersIterable(aClass)) {
    PsiType type=resolveResult.getSubstitutor().substitute(parameter);
    if (type != null) {
      type=type.accept(this);
    }
    map.put(parameter,type);
  }
  return new PsiImmediateClassType(aClass,PsiSubstitutorImpl.createSubstitutor(map));
}
