{
  if (message != null) {
    final Throwable throwable=message.getThrowable();
    ErrorReportSubmitter submitter=getSubmitter(throwable);
    if (submitter == null) {
      PluginId pluginId=findPluginId(throwable);
      if (pluginId == null || !ApplicationInfoEx.getInstanceEx().isEssentialPlugin(pluginId.getIdString())) {
        IdeaPluginDescriptor plugin=PluginManager.getPlugin(pluginId);
        if (plugin == null) {
          myForeignPluginWarningPanel.setVisible(false);
          return;
        }
        myForeignPluginWarningPanel.setVisible(true);
        String vendor=plugin.getVendor();
        String contactInfo=plugin.getVendorUrl();
        if (StringUtil.isEmpty(contactInfo)) {
          contactInfo=plugin.getVendorEmail();
        }
        if (StringUtil.isEmpty(vendor)) {
          if (StringUtil.isEmpty(contactInfo)) {
            myForeignPluginWarningLabel.setText(DiagnosticBundle.message("error.dialog.foreign.plugin.warning.text"));
          }
 else {
            myForeignPluginWarningLabel.setHyperlinkText(DiagnosticBundle.message("error.dialog.foreign.plugin.warning.text.vendor") + " ",contactInfo,".");
            myForeignPluginWarningLabel.setHyperlinkTarget(contactInfo);
          }
        }
 else {
          if (StringUtil.isEmpty(contactInfo)) {
            myForeignPluginWarningLabel.setText(DiagnosticBundle.message("error.dialog.foreign.plugin.warning.text.vendor") + " " + vendor+ ".");
          }
 else {
            myForeignPluginWarningLabel.setHyperlinkText(DiagnosticBundle.message("error.dialog.foreign.plugin.warning.text.vendor") + " " + vendor+ " (",contactInfo,").");
            myForeignPluginWarningLabel.setHyperlinkTarget(contactInfo);
          }
        }
        myForeignPluginWarningPanel.setVisible(true);
        return;
      }
    }
  }
  myForeignPluginWarningPanel.setVisible(false);
}
