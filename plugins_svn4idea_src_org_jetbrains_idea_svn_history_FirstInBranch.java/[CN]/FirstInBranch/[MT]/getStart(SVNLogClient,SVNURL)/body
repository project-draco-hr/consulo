{
  if (LOG.isDebugEnabled()) {
    LOG.debug("getting start revision for: " + url);
  }
  final Ref<Long> myRevisionCandidate=new Ref<Long>(0L);
  try {
    logClient.doLog(url,null,SVNRevision.UNDEFINED,SVNRevision.HEAD,SVNRevision.create(0),true,false,0,new ISVNLogEntryHandler(){
      public void handleLogEntry(      SVNLogEntry logEntry) throws SVNException {
        ProgressManager.checkCanceled();
        myRevisionCandidate.set(logEntry.getRevision());
        if (LOG.isDebugEnabled()) {
          LOG.debug("setting in cycle start revision for: " + url + " as: "+ myRevisionCandidate.get());
        }
      }
    }
);
  }
 catch (  SVNException e) {
    LOG.info(e);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("start revision for: " + url + " is: "+ myRevisionCandidate.get());
  }
  return myRevisionCandidate.get();
}
