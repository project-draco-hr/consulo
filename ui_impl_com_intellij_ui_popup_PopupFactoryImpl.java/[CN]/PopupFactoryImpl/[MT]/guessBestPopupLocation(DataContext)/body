{
  KeyboardFocusManager focusManager=KeyboardFocusManager.getCurrentKeyboardFocusManager();
  JComponent focusOwner=(JComponent)focusManager.getFocusOwner();
  if (focusOwner == null) {
    throw new IllegalArgumentException("focusOwner cannot be null");
  }
  final Rectangle visibleRect=focusOwner.getVisibleRect();
  Point popupMenuPoint=null;
  Editor editor=(Editor)dataContext.getData(DataConstants.EDITOR);
  if (editor != null && focusOwner == editor.getContentComponent()) {
    return guessBestPopupLocation(editor);
  }
 else   if (focusOwner instanceof JList) {
    JList list=(JList)focusOwner;
    int firstVisibleIndex=list.getFirstVisibleIndex();
    int lastVisibleIndex=list.getLastVisibleIndex();
    int[] selectedIndices=list.getSelectedIndices();
    for (    int index : selectedIndices) {
      if (firstVisibleIndex <= index && index <= lastVisibleIndex) {
        Rectangle cellBounds=list.getCellBounds(index,index);
        popupMenuPoint=new Point(visibleRect.x + visibleRect.width / 4,cellBounds.y + cellBounds.height);
        break;
      }
    }
  }
 else   if (focusOwner instanceof JTree) {
    JTree tree=(JTree)focusOwner;
    int[] selectionRows=tree.getSelectionRows();
    for (int i=0; selectionRows != null && i < selectionRows.length; i++) {
      int row=selectionRows[i];
      Rectangle rowBounds=tree.getRowBounds(row);
      if (visibleRect.y <= rowBounds.y && rowBounds.y <= visibleRect.y + visibleRect.height) {
        popupMenuPoint=new Point(visibleRect.x + visibleRect.width / 4,rowBounds.y + rowBounds.height);
        break;
      }
    }
  }
 else   if (focusOwner instanceof PopupOwner) {
    popupMenuPoint=((PopupOwner)focusOwner).getBestPopupPosition();
  }
  if (popupMenuPoint == null) {
    popupMenuPoint=new Point(visibleRect.x + visibleRect.width / 2,visibleRect.y + visibleRect.height / 2);
  }
  return new RelativePoint(focusOwner,popupMenuPoint);
}
