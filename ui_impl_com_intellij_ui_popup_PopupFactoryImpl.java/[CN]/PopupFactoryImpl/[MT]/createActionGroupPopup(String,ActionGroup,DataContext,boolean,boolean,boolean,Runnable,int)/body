{
  final Component component=(Component)dataContext.getData(DataConstants.CONTEXT_COMPONENT);
  LOG.assertTrue(component != null);
  ListPopupStep step=createActionsStep(actionGroup,dataContext,showNumbers,showDisabledActions,title,component,honorActionMnemonics);
  final ListPopupImpl popup=new ListPopupImpl(step,maxRowCount){
    public void dispose(){
      if (disposeCallback != null) {
        disposeCallback.run();
      }
      super.dispose();
    }
  }
;
  popup.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      JList list=(JList)e.getSource();
      ActionItem actionItem=(ActionItem)list.getSelectedValue();
      if (actionItem == null)       return;
      AnAction action=actionItem.getAction();
      Presentation presentation=new Presentation();
      presentation.setDescription(action.getTemplatePresentation().getDescription());
      action.update(new AnActionEvent(null,DataManager.getInstance().getDataContext(list),ActionPlaces.UNKNOWN,presentation,ActionManager.getInstance(),0));
      ActionMenu.showDescriptionInStatusBar(true,list,presentation.getDescription());
    }
  }
);
  return popup;
}
