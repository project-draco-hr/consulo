{
  Presentation presentation=getPresentation(action,action2presentation);
  AnActionEvent event=new AnActionEvent(null,dataContext,ActionPlaces.UNKNOWN,presentation,ActionManager.getInstance(),0);
  action.beforeActionPerformedUpdate(event);
  if ((showDisabled || presentation.isEnabled()) && presentation.isVisible()) {
    String text=presentation.getText();
    if (showNumbers) {
      if (n < 9) {
        text="&" + (n + 1) + ". "+ text;
      }
 else       if (n == 9) {
        text="&" + 0 + ". "+ text;
      }
 else {
        text="&" + (char)('A' + n - 10) + ". "+ text;
      }
      n++;
    }
 else     if (honorActionMnemonics) {
      text=Presentation.restoreTextWithMnemonic(text,action.getTemplatePresentation().getMnemonic());
    }
    Icon icon=presentation.getIcon();
    if (icon == null) {
      @NonNls final String actionId=ActionManager.getInstance().getId(action);
      if (actionId != null && actionId.startsWith("QuickList.")) {
        icon=QUICK_LIST_ICON;
      }
 else {
        icon=emptyIcon;
      }
    }
    listModel.add(new ActionItem(action,text,presentation.isEnabled(),icon,prependWithSeparator));
  }
  return n;
}
