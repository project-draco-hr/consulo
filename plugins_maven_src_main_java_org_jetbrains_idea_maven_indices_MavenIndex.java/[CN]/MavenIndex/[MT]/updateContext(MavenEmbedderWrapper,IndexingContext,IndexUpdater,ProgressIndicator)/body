{
  if (Kind.LOCAL == myKind) {
    progress.setIndeterminate(true);
    try {
      myIndexer.scan(context,new MyScanningListener(),false);
    }
  finally {
      progress.setIndeterminate(false);
    }
  }
 else {
    IndexUpdateRequest request=new IndexUpdateRequest(context);
    request.setResourceFetcher(new MavenIndexFetcher(myRepositoryId,getRepositoryUrl(),embedder.<WagonManager>getComponent(WagonManager.class),new TransferListenerAdapter(new MavenProgressIndicator(progress)){
      @Override protected void doUpdateProgress(      long downloaded,      long total){
        super.doUpdateProgress(downloaded,total);
        myIndicator.setFraction(((double)downloaded) / total);
      }
      @Override public void transferCompleted(      TransferEvent event){
        super.transferCompleted(event);
        myIndicator.setText2(IndicesBundle.message("maven.indices.updating.processing"));
      }
    }
));
    updater.fetchAndUpdateIndex(request);
  }
}
