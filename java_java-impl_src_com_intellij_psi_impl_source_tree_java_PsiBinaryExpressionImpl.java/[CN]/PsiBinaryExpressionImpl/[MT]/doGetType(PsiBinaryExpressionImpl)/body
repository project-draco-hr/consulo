{
  PsiExpression lOperand=param.getLOperand();
  PsiExpression rOperand=param.getROperand();
  if (rOperand == null)   return null;
  if (lOperand instanceof PsiBinaryExpressionImpl && !JavaResolveCache.getInstance(param.getProject()).isTypeCached(lOperand)) {
    PsiBinaryExpressionImpl topLevel=param;
    PsiElement element=param;
    while (element instanceof PsiBinaryExpressionImpl) {
      topLevel=(PsiBinaryExpressionImpl)element;
      element=element.getParent();
    }
    topLevel.accept(new JavaRecursiveElementWalkingVisitor(){
      @Override protected void elementFinished(      PsiElement element){
        if (element instanceof PsiExpression) {
          ProgressManager.checkCanceled();
          ((PsiExpression)element).getType();
        }
      }
    }
);
  }
  PsiType rType=rOperand.getType();
  PsiType lType=lOperand.getType();
  return calcTypeForBinaryExpression(lType,rType,param.getOperationSign().getNode().getElementType());
}
