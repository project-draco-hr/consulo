{
  return new XmlElementVisitor(){
    @Override public void visitXmlFile(    XmlFile file){
      if (!JavaFxFileTypeFactory.isFxml(file))       return;
      super.visitXmlFile(file);
    }
    @Override public void visitXmlAttribute(    XmlAttribute attribute){
      if (FxmlConstants.FX_ID.equals(attribute.getName())) {
        final XmlAttributeValue valueElement=attribute.getValueElement();
        if (valueElement != null && valueElement.getTextLength() > 0) {
          final PsiClass controllerClass=JavaFxPsiUtil.getControllerClass(attribute.getContainingFile());
          if (controllerClass != null) {
            final PsiReference reference=valueElement.getReference();
            if (reference instanceof JavaFxFieldIdReferenceProvider.JavaFxControllerFieldRef && ((JavaFxFieldIdReferenceProvider.JavaFxControllerFieldRef)reference).isUnresolved()) {
              final PsiClass fieldClass=checkContext(((JavaFxFieldIdReferenceProvider.JavaFxControllerFieldRef)reference).getXmlAttributeValue());
              if (fieldClass != null) {
                final String text=reference.getCanonicalText();
                final NamesValidator namesValidator=LanguageNamesValidation.INSTANCE.forLanguage(fieldClass.getLanguage());
                boolean validName=namesValidator != null && namesValidator.isIdentifier(text,fieldClass.getProject());
                holder.registerProblem(reference.getElement(),reference.getRangeInElement(),"Unresolved fx:id reference",isOnTheFly && validName ? new LocalQuickFix[]{new CreateFieldFromUsageQuickFix(text)} : LocalQuickFix.EMPTY_ARRAY);
              }
            }
          }
        }
      }
    }
  }
;
}
