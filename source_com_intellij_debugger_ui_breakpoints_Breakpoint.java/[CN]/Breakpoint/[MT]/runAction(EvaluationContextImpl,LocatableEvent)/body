{
  if (LOG_ENABLED || LOG_EXPRESSION_ENABLED) {
    final StringBuffer buf=new StringBuffer(128);
    if (LOG_ENABLED) {
      buf.append(getEventMessage(event));
      buf.append("\n");
    }
    if (LOG_EXPRESSION_ENABLED && getLogMessage() != null && !"".equals(getLogMessage())) {
      if (!context.getDebugProcess().isAttached())       return;
      String result;
      try {
        ExpressionEvaluator evaluator=DebuggerInvocationUtil.commitAndRunReadAction(getProject(),new com.intellij.debugger.EvaluatingComputable<ExpressionEvaluator>(){
          public ExpressionEvaluator compute() throws EvaluateException {
            return EvaluatorBuilderImpl.getInstance().build(getLogMessage(),ContextUtil.getContextElement(context));
          }
        }
);
        result=DebuggerUtilsEx.getValueAsString(context,evaluator.evaluate(context));
        buf.append(getLogMessage());
        buf.append(" = ");
        buf.append(result);
      }
 catch (      EvaluateException e) {
        buf.append("unable to evaluate the expression \"");
        buf.append(getLogMessage());
        buf.append("\"");
        buf.append(" : ");
        buf.append(e.getMessage());
      }
      buf.append("\n");
    }
    if (buf.length() > 0) {
      context.getDebugProcess().printToConsole(buf.toString());
    }
  }
}
