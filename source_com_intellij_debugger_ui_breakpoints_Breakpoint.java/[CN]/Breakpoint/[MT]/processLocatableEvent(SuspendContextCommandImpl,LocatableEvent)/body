{
  final SuspendContextImpl context=action.getSuspendContext();
  if (!isValid()) {
    context.getDebugProcess().getRequestsManager().deleteRequest(this);
    return true;
  }
  final String[] errorMsg=new String[]{"Breakpoint Condition Error"};
  try {
    StackFrameProxyImpl frameProxy=context.getThread().frame(0);
    EvaluationContextImpl evaluationContext=new EvaluationContextImpl(action.getSuspendContext(),frameProxy,Breakpoint.this.getThisObject(context,event));
    if (!evaluateCondition(evaluationContext,event)) {
      return true;
    }
    errorMsg[0]="Breakpoint Action Error";
    runAction(evaluationContext,event);
  }
 catch (  final EvaluateException ex) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      System.out.println(ex.getMessage());
      return true;
    }
    final boolean[] shouldResume=new boolean[]{true};
    DebuggerInvocationUtil.invokeAndWait(getProject(),new Runnable(){
      public void run(){
        DebuggerSession session=DebuggerManagerEx.getInstanceEx(getProject()).getSession(context.getDebugProcess());
        DebuggerPanelsManager.getInstance(getProject()).toFront(session);
        final StringBuffer text=new StringBuffer(128);
        text.append("'Breakpoint '");
        text.append(getDisplayName());
        text.append("'\n");
        text.append(ex.getMessage());
        text.append("\nWould you like to stop at the breakpoint?");
        if (LOG.isDebugEnabled()) {
          LOG.debug(text.toString());
        }
        shouldResume[0]=Messages.showYesNoDialog(getProject(),text.toString(),errorMsg[0],Messages.getQuestionIcon()) != 0;
      }
    }
,ModalityState.NON_MMODAL);
    return shouldResume[0];
  }
  return false;
}
