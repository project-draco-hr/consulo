{
  if (object instanceof LookupItem)   return (LookupItem)object;
  String s=null;
  LookupItem item=new LookupItem(object,"");
  if (object instanceof PsiElement) {
    PsiElement element=(PsiElement)object;
    if (element.getUserData(PsiUtil.ORIGINAL_KEY) != null) {
      element=element.getUserData(PsiUtil.ORIGINAL_KEY);
      object=element;
      item=new LookupItem(object,"");
    }
    s=PsiUtil.getName(element);
  }
  if (object instanceof PsiEnumConstant) {
    item.addLookupStrings(((PsiEnumConstant)object).getName());
  }
  TailType tailType=TailType.NONE;
  if (object instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)object;
    s=method.getName();
    PsiType type=method.getReturnType();
    if (type == PsiType.VOID) {
      tailType=TailType.SEMICOLON;
    }
  }
 else   if (object instanceof PsiPackage) {
    tailType=TailType.DOT;
    s=StringUtil.notNullize(s);
  }
 else   if (object instanceof PsiKeyword) {
    s=((PsiKeyword)object).getText();
  }
 else   if (object instanceof PsiExpression) {
    s=((PsiExpression)object).getText();
  }
 else   if (object instanceof PsiType) {
    PsiType type=(PsiType)object;
    final PsiType original=type;
    int dim=0;
    while (type instanceof PsiArrayType) {
      type=((PsiArrayType)type).getComponentType();
      dim++;
    }
    if (type instanceof PsiClassType) {
      PsiClassType.ClassResolveResult classResolveResult=((PsiClassType)type).resolveGenerics();
      final PsiClass psiClass=classResolveResult.getElement();
      final PsiSubstitutor substitutor=classResolveResult.getSubstitutor();
      final String text=type.getCanonicalText();
      String typeString=text;
      if (text.indexOf('<') > 0 && text.endsWith(">")) {
        typeString=text.substring(0,text.indexOf('<'));
      }
      s=text.substring(typeString.lastIndexOf('.') + 1);
      item=psiClass != null ? new LookupItem(psiClass,s) : new LookupItem(text,s);
      item.setAttribute(LookupItem.SUBSTITUTOR,substitutor);
    }
 else {
      s=type.getPresentableText();
    }
    if (dim > 0) {
      final StringBuilder tail=new StringBuilder();
      for (int i=0; i < dim; i++) {
        tail.append("[]");
      }
      item.setAttribute(LookupItem.TAIL_TEXT_ATTR," " + tail.toString());
      item.setAttribute(LookupItem.TAIL_TEXT_SMALL_ATTR,"");
      item.setAttribute(LookupItem.BRACKETS_COUNT_ATTR,dim);
    }
    item.setAttribute(LookupItem.TYPE,original);
  }
 else   if (object instanceof PsiMetaData) {
    s=((PsiMetaData)object).getName();
  }
 else   if (object instanceof String) {
    s=(String)object;
  }
 else   if (object instanceof Template) {
    s=((Template)object).getKey();
  }
 else   if (object instanceof PresentableLookupValue) {
    s=((PresentableLookupValue)object).getPresentation();
  }
  if (s == null) {
    LOG.assertTrue(false,"Null string for object: " + object + " of class "+ (object != null ? object.getClass() : null));
  }
  if (object instanceof LookupValueWithTail) {
    item.setAttribute(LookupItem.TAIL_TEXT_ATTR," " + ((LookupValueWithTail)object).getTailText());
  }
  item.setLookupString(s);
  item.setAttribute(CompletionUtil.TAIL_TYPE_ATTR,tailType);
  return item;
}
