{
  final PatternCompilerFactory factory=PatternCompilerFactory.getFactory();
  if (patterns.length > 1) {
    final ElementPattern[] result=new ElementPattern[this.patterns.length];
    for (int i=0, len=this.patterns.length; i < len; i++) {
      result[i]=factory.getPatternCompiler(patterns[i].type).compileElementPattern(patterns[i].text);
    }
    return StandardPatterns.or(result);
  }
 else   if (patterns.length == 1) {
    return factory.<PsiElement>getPatternCompiler(patterns[0].type).compileElementPattern(patterns[0].text);
  }
 else {
    LOG.error("At least one pattern should be specified");
    return null;
  }
}
