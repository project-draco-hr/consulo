{
  boolean getter=isGetter(method);
  boolean setter=isSetter(method);
  final String attributeName=guessAttributeName(method);
  if (attributeName != null) {
    final Converter converter=getConverter(method,getter);
    if (getter) {
      return new GetAttributeValueInvocation(converter,attributeName);
    }
 else     if (setter) {
      return new SetAttributeValueInvocation(converter,attributeName);
    }
  }
  final TagValue tagValue=method.getAnnotation(TagValue.class);
  if (getter && (tagValue != null || "getValue".equals(method.getName()))) {
    return new GetValueInvocation(getConverter(method,true));
  }
 else   if (setter && (tagValue != null || "setValue".equals(method.getName()))) {
    return new SetValueInvocation(getConverter(method,false));
  }
  myMethodsMap.buildMethodMaps(getFile());
  if (myMethodsMap.isFixedChildrenMethod(method)) {
    return new GetFixedChildInvocation(method);
  }
  if (myMethodsMap.isVariableChildrenMethod(method)) {
    return new GetVariableChildrenInvocation(myMethodsMap,method);
  }
  throw new UnsupportedOperationException("No implementation for method " + method.toString());
}
