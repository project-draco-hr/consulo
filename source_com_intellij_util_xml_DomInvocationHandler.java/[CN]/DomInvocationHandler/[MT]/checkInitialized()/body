{
synchronized (PsiLock.LOCK) {
    if (myInitialized || myInitializing)     return;
    myInitializing=true;
    try {
      final HashSet<XmlTag> usedTags=new HashSet<XmlTag>();
      final XmlTag tag=getXmlTag();
      for (      Map.Entry<Method,String> entry : myMethodsMap.getFixedChildrenEntries()) {
        Method method=entry.getKey();
        final String qname=entry.getValue();
        XmlTag subTag=tag == null ? null : tag.findFirstSubTag(qname);
        final DomElement element=myManager.createDomElement((Class<? extends DomElement>)method.getReturnType(),subTag,getProxy(),qname);
        myMethod2Children.put(method,element);
        usedTags.add(subTag);
      }
      if (tag != null) {
        for (        Map.Entry<Method,Pair<String,Class<? extends DomElement>>> entry : myMethodsMap.getVariableChildrenEntries()) {
          final Pair<String,Class<? extends DomElement>> pair=entry.getValue();
          String qname=pair.getFirst();
          for (          XmlTag subTag : tag.findSubTags(qname)) {
            if (!usedTags.contains(subTag)) {
              myManager.createDomElement(pair.getSecond(),subTag,getProxy(),qname);
              usedTags.add(subTag);
            }
          }
        }
      }
    }
  finally {
      myInitializing=false;
      myInitialized=true;
    }
  }
}
