{
  myEditor=editor;
  myParameters=parameters;
  myHandler=handler;
  myFreezeSemaphore=freezeSemaphore;
  myOffsetMap=offsetMap;
  myLookup=(LookupImpl)parameters.getLookup();
  myStartCaret=myEditor.getCaretModel().getOffset();
  myLookup.setArranger(new CompletionLookupArranger(parameters,this));
  myLookup.addLookupListener(myLookupListener);
  myLookup.setCalculating(true);
  myLookupManagerListener=new PropertyChangeListener(){
    @Override public void propertyChange(    PropertyChangeEvent evt){
      if (evt.getNewValue() != null) {
        LOG.error("An attempt to change the lookup during completion, phase = " + CompletionServiceImpl.getCompletionPhase());
      }
    }
  }
;
  LookupManager.getInstance(getProject()).addPropertyChangeListener(myLookupManagerListener);
  myQueue=new MergingUpdateQueue("completion lookup progress",300,true,myEditor.getContentComponent());
  myQueue.setPassThrough(false);
  ApplicationManager.getApplication().assertIsDispatchThread();
  Disposer.register(this,offsetMap);
  if (hasModifiers && !ApplicationManager.getApplication().isUnitTestMode()) {
    trackModifiers();
  }
}
