{
  super.stop();
  myQueue.cancelAllUpdates();
  myFreezeSemaphore.up();
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (isOutdated())       return;
      if (!isBackgrounded())       return;
      if (isCanceled() && !myState.isRestartScheduled())       return;
      myLookup.setCalculating(false);
      if (hideAutopopupIfMeaningless()) {
        return;
      }
      if (myState.hasNoVariants()) {
        LookupManager.getInstance(getProject()).hideActiveLookup();
        final CompletionProgressIndicator current=CompletionServiceImpl.getCompletionService().getCurrentCompletion();
        LOG.assertTrue(current == null,current + "!=" + CompletionProgressIndicator.this);
        if (!isAutopopupCompletion()) {
          CompletionServiceImpl.setCompletionPhase(myHandler.handleEmptyLookup(getProject(),myEditor,myParameters,CompletionProgressIndicator.this));
        }
 else {
          CompletionServiceImpl.setCompletionPhase(CompletionPhase.NoCompletion);
        }
      }
 else {
        if (myState.isFocusLookupWhenDone()) {
          myLookup.setFocused(true);
        }
        updateLookup();
        CompletionServiceImpl.setCompletionPhase(CompletionPhase.ItemsCalculated);
      }
    }
  }
,myQueue.getModalityState());
}
