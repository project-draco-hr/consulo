{
  super.stop();
  myQueue.cancelAllUpdates();
  myFreezeSemaphore.up();
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (isOutdated())       return;
      if (!isBackgrounded())       return;
      if (isCanceled() && !myState.isRestartScheduled())       return;
      myLookup.setCalculating(false);
      if (CompletionServiceImpl.isPhase(CompletionPhase.BgCalculation.class) && hideAutopopupIfMeaningless()) {
        return;
      }
      if (myState.hasNoVariants()) {
        if (!isAutopopupCompletion()) {
          LookupManager.getInstance(getProject()).hideActiveLookup();
          final CompletionProgressIndicator current=CompletionServiceImpl.getCompletionService().getCurrentCompletion();
          LOG.assertTrue(current == null,current + "!=" + CompletionProgressIndicator.this);
          CompletionServiceImpl.setCompletionPhase(myHandler.handleEmptyLookup(getProject(),myEditor,myParameters,CompletionProgressIndicator.this));
        }
      }
 else {
        if (myState.isFocusLookupWhenDone()) {
          myLookup.setFocused(true);
        }
        updateLookup();
        CompletionServiceImpl.setCompletionPhase(new CompletionPhase.ItemsCalculated());
      }
    }
  }
,myQueue.getModalityState());
}
