{
  if (myModifiersReleased || ApplicationManager.getApplication().isUnitTestMode()) {
    return;
  }
  registerItself();
  myHint=hint;
  if (hint != null) {
    hint.addHintListener(new HintListener(){
      public void hintHidden(      final EventObject event){
        hint.removeHintListener(this);
        cleanup();
      }
    }
);
  }
  final Document document=myEditor.getDocument();
  document.addDocumentListener(new DocumentAdapter(){
    @Override public void beforeDocumentChange(    DocumentEvent e){
      document.removeDocumentListener(this);
      cleanup();
    }
  }
);
  final SelectionModel selectionModel=myEditor.getSelectionModel();
  selectionModel.addSelectionListener(new SelectionListener(){
    public void selectionChanged(    SelectionEvent e){
      selectionModel.removeSelectionListener(this);
      cleanup();
    }
  }
);
  final CaretModel caretModel=myEditor.getCaretModel();
  caretModel.addCaretListener(new CaretListener(){
    public void caretPositionChanged(    CaretEvent e){
      caretModel.removeCaretListener(this);
      cleanup();
    }
  }
);
}
