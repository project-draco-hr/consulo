{
  if (isAutopopupCompletion()) {
    if (shouldFocusLookup(myParameters)) {
      final CompletionPhase phase=CompletionServiceImpl.getCompletionPhase();
      if (!(phase instanceof CompletionPhase.Restarted)) {
        ((CompletionPhase.BgCalculation)phase).focusLookupWhenDone=true;
      }
    }
 else {
      myLookup.addAdvertisement("Press " + CompletionContributor.getActionShortcut(IdeActions.ACTION_CHOOSE_LOOKUP_ITEM_REPLACE) + " to choose the first suggestion");
      myLookup.addAdvertisement(CompletionContributor.getActionShortcut(IdeActions.ACTION_LOOKUP_DOWN) + " and " + CompletionContributor.getActionShortcut(IdeActions.ACTION_LOOKUP_UP)+ " will move caret down and up");
    }
  }
  ProgressManager.checkCanceled();
  if (!initContext.getOffsetMap().wasModified(CompletionInitializationContext.IDENTIFIER_END_OFFSET)) {
    try {
      final int selectionEndOffset=initContext.getSelectionEndOffset();
      final PsiReference reference=initContext.getFile().findReferenceAt(selectionEndOffset);
      if (reference != null) {
        initContext.setReplacementOffset(findReplacementOffset(selectionEndOffset,reference));
      }
    }
 catch (    IndexNotReadyException ignored) {
    }
  }
  for (  CompletionContributor contributor : CompletionContributor.forLanguage(initContext.getPositionLanguage())) {
    ProgressManager.checkCanceled();
    if (DumbService.getInstance(initContext.getProject()).isDumb() && !DumbService.isDumbAware(contributor)) {
      continue;
    }
    contributor.duringCompletion(initContext);
  }
}
