{
  ApplicationManager.getApplication().assertIsDispatchThread();
  final int offset=myEditor.getCaretModel().getOffset();
  final long stamp=myEditor.getDocument().getModificationStamp();
  final Project project=getProject();
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      if (ApplicationManager.getApplication().isUnitTestMode()) {
        System.out.println("later");
      }
      if (myEditor.isDisposed() || project.isDisposed()) {
        return;
      }
      if (myEditor.getCaretModel().getOffset() != offset || myEditor.getDocument().getModificationStamp() != stamp) {
        return;
      }
      if (ApplicationManager.getApplication().isUnitTestMode()) {
        System.out.println("invoking");
      }
      if (!isOutdated()) {
        closeAndFinish(false);
      }
      final CodeCompletionHandlerBase newHandler=new CodeCompletionHandlerBase(myParameters.getCompletionType(),false,isAutopopupCompletion());
      final PsiFile psiFileInEditor=PsiUtilBase.getPsiFileInEditor(myEditor,project);
      try {
        newHandler.invokeCompletion(project,myEditor,psiFileInEditor,myParameters.getInvocationCount());
      }
 catch (      IndexNotReadyException ignored) {
      }
    }
  }
);
}
