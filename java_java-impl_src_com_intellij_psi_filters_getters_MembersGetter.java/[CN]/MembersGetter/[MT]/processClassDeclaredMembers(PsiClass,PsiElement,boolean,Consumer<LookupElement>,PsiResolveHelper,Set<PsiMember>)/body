{
  final FilterScopeProcessor<PsiElement> processor=new FilterScopeProcessor<PsiElement>(TrueFilter.INSTANCE);
  where.processDeclarations(processor,ResolveState.initial(),null,context);
  for (  final PsiElement result : processor.getResults()) {
    if (result instanceof PsiMember && !(result instanceof PsiClass)) {
      final PsiMember member=(PsiMember)result;
      if (JavaCompletionUtil.isInExcludedPackage(member) || importedStatically.contains(member))       continue;
      if (member.hasModifierProperty(PsiModifier.STATIC) && resolveHelper.isAccessible(member,context,null)) {
        if (result instanceof PsiField && !member.hasModifierProperty(PsiModifier.FINAL))         continue;
        if (result instanceof PsiMethod && acceptMethods)         continue;
        final LookupElement item=result instanceof PsiMethod ? createMethodElement((PsiMethod)result) : createFieldElement((PsiField)result);
        if (item != null) {
          results.consume(AutoCompletionPolicy.NEVER_AUTOCOMPLETE.applyPolicy(item));
        }
      }
    }
  }
}
