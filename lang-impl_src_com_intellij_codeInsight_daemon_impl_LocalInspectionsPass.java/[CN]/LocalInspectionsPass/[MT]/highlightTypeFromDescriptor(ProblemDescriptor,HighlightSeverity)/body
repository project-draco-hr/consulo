{
  final ProblemHighlightType highlightType=problemDescriptor.getHighlightType();
switch (highlightType) {
case GENERIC_ERROR_OR_WARNING:
case J2EE_PROBLEM:
    return mySeverityRegistrar.getHighlightInfoTypeBySeverity(severity);
case LIKE_DEPRECATED:
  return new HighlightInfoType.HighlightInfoTypeImpl(severity,HighlightInfoType.DEPRECATED.getAttributesKey());
case LIKE_UNKNOWN_SYMBOL:
if (severity == HighlightSeverity.ERROR) {
  return new HighlightInfoType.HighlightInfoTypeImpl(severity,HighlightInfoType.WRONG_REF.getAttributesKey());
}
 else {
  return mySeverityRegistrar.getHighlightInfoTypeBySeverity(severity);
}
case LIKE_UNUSED_SYMBOL:
return new HighlightInfoType.HighlightInfoTypeImpl(severity,HighlightInfoType.UNUSED_SYMBOL.getAttributesKey());
case INFO:
return HighlightInfoType.INFO;
case ERROR:
return HighlightInfoType.WRONG_REF;
case GENERIC_ERROR:
return HighlightInfoType.ERROR;
case INFORMATION:
return HighlightInfoType.INFORMATION;
}
throw new RuntimeException("Cannot map " + highlightType);
}
