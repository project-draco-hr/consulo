{
  final PsiFile file=PsiDocumentManager.getInstance(myProject).getPsiFile(myEditor.getDocument());
  CharSequence chars=myEditor.getDocument().getCharsSequence();
  int offset=CharArrayUtil.shiftBackward(chars,myEditor.getCaretModel().getOffset() - 1," \t") + 1;
  int lbraceOffset=myLbraceMarker.getStartOffset();
  if (lbraceOffset < offset) {
    PsiExpressionList argList=findArgumentList(file,offset,lbraceOffset);
    if (argList != null) {
      int currentParameterIndex=getCurrentParameterIndex(argList,offset,JavaTokenType.COMMA);
      PsiExpression currentParameter=null;
      if (currentParameterIndex > 0 && !isNext) {
        currentParameter=argList.getExpressions()[currentParameterIndex - 1];
      }
 else       if (currentParameterIndex < argList.getExpressions().length - 1 && isNext) {
        currentParameter=argList.getExpressions()[currentParameterIndex + 1];
      }
      if (currentParameter != null) {
        offset=currentParameter.getTextRange().getStartOffset();
        myEditor.getCaretModel().moveToOffset(offset);
        myEditor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
        myEditor.getSelectionModel().removeSelection();
        MethodParameterInfoHandler.updateMethodInfo(argList,new MyUpdateParameterInfoContext(offset,file));
      }
    }
  }
}
