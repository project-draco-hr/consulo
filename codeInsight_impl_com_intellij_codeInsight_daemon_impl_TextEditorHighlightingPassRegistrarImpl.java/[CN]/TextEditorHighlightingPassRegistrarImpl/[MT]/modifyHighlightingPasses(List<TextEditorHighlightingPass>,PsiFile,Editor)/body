{
  if (myRegisteredPasses == null) {
    return passes.toArray(new TextEditorHighlightingPass[passes.size()]);
  }
  List<TextEditorHighlightingPass> result=new ArrayList<TextEditorHighlightingPass>(passes);
  for (  TextEditorHighlightingPassFactory factory : myRegisteredPasses.keySet()) {
    final TextEditorHighlightingPass editorHighlightingPass=factory.createHighlightingPass(psiFile,editor);
    final Pair<Integer,Integer> location=myRegisteredPasses.get(factory);
    final int anchor=location.first.intValue();
    if (anchor == FIRST) {
      result.add(0,editorHighlightingPass);
    }
 else     if (anchor == LAST) {
      result.add(editorHighlightingPass);
    }
 else {
      final int passId=location.second.intValue();
      int anchorPassIdx=-1;
      for (int idx=0; idx < result.size(); idx++) {
        final TextEditorHighlightingPass highlightingPass=result.get(idx);
        if (highlightingPass.getPassId() == passId) {
          anchorPassIdx=idx;
          break;
        }
      }
      if (anchorPassIdx != -1) {
        if (location.second.intValue() == BEFORE) {
          result.add(Math.max(0,anchorPassIdx - 1),editorHighlightingPass);
        }
 else {
          result.add(anchorPassIdx + 1,editorHighlightingPass);
        }
      }
 else {
        result.add(editorHighlightingPass);
      }
    }
  }
  return result.toArray(new TextEditorHighlightingPass[result.size()]);
}
