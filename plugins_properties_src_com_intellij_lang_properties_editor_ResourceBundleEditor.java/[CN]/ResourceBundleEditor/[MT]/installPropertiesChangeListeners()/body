{
  VirtualFileManager.getInstance().addVirtualFileListener(new VirtualFileAdapter(){
    @Override public void fileCreated(    VirtualFileEvent event){
      if (event.getFile().getFileType() == PropertiesFileType.INSTANCE) {
        recreateEditorsPanel();
      }
    }
    @Override public void fileDeleted(    VirtualFileEvent event){
      if (event.getFile().getFileType() == PropertiesFileType.INSTANCE) {
        recreateEditorsPanel();
      }
    }
    @Override public void propertyChanged(    VirtualFilePropertyEvent event){
      if (event.getFile().getFileType() == PropertiesFileType.INSTANCE) {
        if (VirtualFile.PROP_NAME.equals(event.getPropertyName())) {
          recreateEditorsPanel();
        }
 else {
          updateEditorsFromProperties();
        }
      }
    }
  }
,this);
  myPsiTreeChangeAdapter=new PsiTreeChangeAdapter(){
    public void childAdded(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childRemoved(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childReplaced(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childMoved(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childrenChanged(    PsiTreeChangeEvent event){
      final PsiFile file=event.getFile();
      if (!(file instanceof PropertiesFile))       return;
      if (!((PropertiesFile)file).getResourceBundle().equals(myResourceBundle))       return;
      updateEditorsFromProperties();
    }
  }
;
  PsiManager.getInstance(myProject).addPsiTreeChangeListener(myPsiTreeChangeAdapter,this);
}
