{
  myUpdateEditorAlarm.cancelAllRequests();
  myValuesPanel.removeAll();
  myValuesPanel.setLayout(new CardLayout());
  if (!myProject.isOpen())   return;
  JPanel valuesPanelComponent=new MyJPanel(new GridBagLayout());
  myValuesPanel.add(new JScrollPane(valuesPanelComponent){
    @Override public void updateUI(){
      super.updateUI();
      getViewport().setBackground(UIManager.getColor("Panel.background"));
    }
  }
,VALUES);
  myValuesPanel.add(myNoPropertySelectedPanel,NO_PROPERTY_SELECTED);
  List<PropertiesFile> propertiesFiles=myResourceBundle.getPropertiesFiles(myProject);
  GridBagConstraints gc=new GridBagConstraints(0,0,0,0,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(5,5,5,5),0,0);
  releaseAllEditors();
  myTitledPanels.clear();
  int y=0;
  for (  final PropertiesFile propertiesFile : propertiesFiles) {
    final Editor editor=createEditor();
    myEditors.put(propertiesFile,editor);
    editor.getContentComponent().addFocusListener(new FocusAdapter(){
      public void focusGained(      FocusEvent e){
        mySelectedEditor=editor;
      }
    }
);
    gc.gridx=0;
    gc.gridy=y++;
    gc.gridheight=1;
    gc.gridwidth=GridBagConstraints.REMAINDER;
    gc.weightx=1;
    gc.weighty=1;
    gc.anchor=GridBagConstraints.CENTER;
    Locale locale=propertiesFile.getLocale();
    List<String> names=new ArrayList<String>();
    if (!Comparing.strEqual(locale.getDisplayLanguage(),null)) {
      names.add(locale.getDisplayLanguage());
    }
    if (!Comparing.strEqual(locale.getDisplayCountry(),null)) {
      names.add(locale.getDisplayCountry());
    }
    if (!Comparing.strEqual(locale.getDisplayVariant(),null)) {
      names.add(locale.getDisplayVariant());
    }
    String title=propertiesFile.getName();
    if (!names.isEmpty()) {
      title+=" (" + StringUtil.join(names,"/") + ")";
    }
    JComponent comp=new JPanel(new BorderLayout()){
      @Override public Dimension getPreferredSize(){
        Insets insets=getBorder().getBorderInsets(this);
        return new Dimension(100,editor.getLineHeight() * 4 + insets.top + insets.bottom);
      }
    }
;
    comp.add(editor.getComponent(),BorderLayout.CENTER);
    comp.setBorder(IdeBorderFactory.createTitledBorder(title));
    myTitledPanels.put(propertiesFile,(JPanel)comp);
    valuesPanelComponent.add(comp,gc);
  }
  gc.gridx=0;
  gc.gridy=y;
  gc.gridheight=GridBagConstraints.REMAINDER;
  gc.gridwidth=GridBagConstraints.REMAINDER;
  gc.weightx=10;
  gc.weighty=1;
  valuesPanelComponent.add(new JPanel(),gc);
  myValuesPanel.repaint();
}
