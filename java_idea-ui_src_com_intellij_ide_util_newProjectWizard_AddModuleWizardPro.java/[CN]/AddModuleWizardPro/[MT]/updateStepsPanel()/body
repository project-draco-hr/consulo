{
  myStepsPanel.removeAll();
  int index=0;
  final ButtonGroup group=new ButtonGroup();
  while (index != -1) {
    final int ind=index;
    final ModuleWizardStep step=mySteps.get(index);
    final JRadioButton rb=new JRadioButton(step.getName(),index == myCurrentStep);
    rb.setUI(new WizardArrowUI(rb,index < myCurrentStep));
    myStepsPanel.add(rb);
    group.add(rb);
    rb.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        final ModuleWizardStep step=getCurrentStepObject();
        if (ind > getCurrentStep() && !commitStepData(step)) {
          updateStepsPanel();
          return;
        }
        step.onStepLeaving();
        final Step currentStep=mySteps.get(myCurrentStep);
        try {
          currentStep._commit(false);
        }
 catch (        final CommitStepException exc) {
          Messages.showErrorDialog(myContentPanel,exc.getMessage());
          return;
        }
        myCurrentStep=ind;
        updateStep();
      }
    }
);
    final int next=getNextStep(index);
    index=index == next ? -1 : next;
  }
  final Enumeration<AbstractButton> buttons=group.getElements();
  while (buttons.hasMoreElements()) {
    final JRadioButton b=(JRadioButton)buttons.nextElement();
    b.setUI(new WizardArrowUI(b,index < myCurrentStep));
  }
  SwingUtilities.invokeLater(new Runnable(){
    @Override public void run(){
      myStepsPanel.revalidate();
      myStepsPanel.repaint();
    }
  }
);
}
