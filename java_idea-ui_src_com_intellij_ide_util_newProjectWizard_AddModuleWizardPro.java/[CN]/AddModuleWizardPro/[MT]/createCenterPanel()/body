{
  myStepsPanel=new JPanel(){
    @Override public void addNotify(){
      super.addNotify();
      getNextStepObject().updateDataModel();
      updateStepsPanel();
      new AnAction(){
        @Override public void actionPerformed(        AnActionEvent e){
          if (!isLastStep())           doNextAction();
        }
      }
.registerCustomShortcutSet(CustomShortcutSet.fromString("control TAB"),getContentPanel(),getDisposable());
      new AnAction(){
        @Override public void actionPerformed(        AnActionEvent e){
          doPreviousAction();
        }
      }
.registerCustomShortcutSet(CustomShortcutSet.fromString("control shift TAB"),getContentPanel(),getDisposable());
    }
    @Override protected void paintComponent(    Graphics g){
      super.paintComponent(g);
      final Component c=getComponent(getComponentCount() - 1);
      int y=c.getBounds().y + c.getBounds().height + 4;
      g.translate(0,y);
      myIcon.paintIcon(g);
      g.translate(0,-y);
    }
  }
;
  myStepsPanel.setLayout(new BoxLayout(myStepsPanel,BoxLayout.Y_AXIS){
    @Override public void layoutContainer(    Container target){
      super.layoutContainer(target);
      int maxWidth=-1;
      for (      Component c : target.getComponents()) {
        maxWidth=Math.max(maxWidth,c.getWidth());
      }
      for (      Component c : target.getComponents()) {
        final Rectangle b=c.getBounds();
        c.setBounds(b.x,b.y,maxWidth,b.height);
      }
    }
  }
);
  myStepsPanel.setBorder(BorderFactory.createEmptyBorder(0,0,0,4));
  updateStepsPanel();
  final JPanel panel=new JPanel(new BorderLayout());
  panel.add(myStepsPanel,BorderLayout.WEST);
  panel.add(myContentPanel,BorderLayout.CENTER);
  return panel;
}
