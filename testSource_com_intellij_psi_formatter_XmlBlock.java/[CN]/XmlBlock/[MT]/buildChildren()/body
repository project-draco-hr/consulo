{
  final ArrayList<Block> result=new ArrayList<Block>();
  if (myNode.getElementType() == ElementType.XML_TEXT && mySettings.XML_KEEP_WHITESPACES) {
    return result;
  }
  if (myNode instanceof CompositeElement) {
    ChameleonTransforming.transformChildren(myNode);
    ASTNode child=myNode.getFirstChildNode();
    final Formatter formatter=getFormatter();
    final Wrap tagWrap=formatter.createWrap(Wrap.Type.WRAP_ALWAYS,true);
    final Wrap attrWrap=formatter.createWrap(getWrapType(mySettings.XML_ATTRIBUTE_WRAP),false);
    final Wrap textWrap=formatter.createWrap(getWrapType(mySettings.XML_TEXT_WRAP),true);
    final Alignment attrAlignment=formatter.createAlignment();
    final Alignment textAlignment=formatter.createAlignment();
    while (child != null) {
      if (!containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {
        Wrap wrap=chooseWrap(child,tagWrap,attrWrap,textWrap);
        Alignment alignment=chooseAlignment(child,attrAlignment,textAlignment);
        result.add(new XmlBlock(child,wrap,alignment,mySettings,this));
      }
      child=child.getTreeNext();
    }
  }
  return result;
}
