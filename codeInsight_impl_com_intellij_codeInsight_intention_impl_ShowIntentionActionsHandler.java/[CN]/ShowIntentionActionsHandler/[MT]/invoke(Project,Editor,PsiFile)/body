{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  if (HintManager.getInstance().performCurrentQuestionAction())   return;
  if (!file.isWritable())   return;
  if (file instanceof PsiCodeFragment)   return;
  TemplateState state=TemplateManagerImpl.getTemplateState(editor);
  if (state != null && !state.isFinished())   return;
  DaemonCodeAnalyzerImpl.autoImportReferenceAtCursor(editor,file);
  final IntentionAction[] intentionActions=IntentionManager.getInstance().getIntentionActions();
  ArrayList<HighlightInfo.IntentionActionDescriptor> intentionsToShow=new ArrayList<HighlightInfo.IntentionActionDescriptor>();
  ArrayList<HighlightInfo.IntentionActionDescriptor> errorFixesToShow=new ArrayList<HighlightInfo.IntentionActionDescriptor>();
  ArrayList<HighlightInfo.IntentionActionDescriptor> inspectionFixesToShow=new ArrayList<HighlightInfo.IntentionActionDescriptor>();
  ShowIntentionsPass.getActionsToShow(editor,file,intentionsToShow,errorFixesToShow,inspectionFixesToShow,intentionActions,-1);
  if (!intentionsToShow.isEmpty() || !errorFixesToShow.isEmpty() || !inspectionFixesToShow.isEmpty()) {
    IntentionHintComponent.showIntentionHint(project,file,editor,intentionsToShow,errorFixesToShow,inspectionFixesToShow,true);
  }
 else {
  }
}
