{
  final SVNURL url=auth.getURL();
  final boolean authStorageEnabled=isAuthStorageEnabled(url);
  final String storeCredentials=getConfigFile().getPropertyValue("auth","store-auth-creds");
  if ((Boolean.FALSE.equals(isAuthStorageEnabledMy(url))) || (!isTurned(storeCredentials))) {
    ChangesViewBalloonProblemNotifier.showMe(myProject,"Cannot store credentials: forbidden by \"store-auth-creds\"=\"no\"",MessageType.ERROR);
    return false;
  }
  final boolean passwordStorageEnabled=isStorePasswords(url);
  final String storePasswords=getConfigFile().getPropertyValue("auth","store-passwords");
  if ((!ISVNAuthenticationManager.SSL.equals(kind)) && (!passwordStorageEnabled)) {
    ChangesViewBalloonProblemNotifier.showMe(myProject,"Cannot store password: forbidden by \"store-passwords\"=\"no\"",MessageType.ERROR);
    return false;
  }
  if (ISVNAuthenticationManager.SSL.equals(kind) && (!isStoreSSLClientCertificatePassphrases(url))) {
    ChangesViewBalloonProblemNotifier.showMe(myProject,"Cannot store passphrase: forbidden by \"store-ssl-client-cert-pp\"=\"no\"",MessageType.ERROR);
    return false;
  }
  if (!SystemInfo.isWindows) {
    if (ISVNAuthenticationManager.SSL.equals(kind)) {
      try {
        if (!isStorePlainTextPassphrases(realm,auth)) {
          final SVNSSLAuthentication svnsslAuthentication=(SVNSSLAuthentication)auth;
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            public void run(){
              Messages.showWarningDialog(myProject,"Your passphrase for client certificate:\n\n" + svnsslAuthentication.getCertificateFile().getPath() + "\n\ncan only be stored to disk unencrypted. (Encryption is not supported)\n\n"+ "But storage in plain text is not allowed.\nTo allow plain text passphrases caching, set \"store-ssl-client-cert-pp-plaintext\"=\"yes\"","Cannot save passphrase");
            }
          }
);
          return false;
        }
      }
 catch (      SVNException e) {
      }
    }
 else {
      try {
        if (!isStorePlainTextPasswords(realm,auth)) {
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            public void run(){
              Messages.showWarningDialog(myProject,"Your password for authentication realm:\n\n" + realm + "\n\ncan only be stored to disk unencrypted. (Encryption is not supported)\n\n"+ "But storage in plain text is not allowed.\nTo allow plain text passwords caching, set \"store-plaintext-passwords\"=\"yes\"","Cannot save password");
            }
          }
);
          return false;
        }
      }
 catch (      SVNException e) {
      }
    }
  }
  return true;
}
