{
  String host=url.getHost();
  Map properties=getHostProperties(host);
  String proxyHost=(String)properties.get("http-proxy-host");
  if ((proxyHost == null) || "".equals(proxyHost.trim())) {
    if (SvnConfiguration.getInstanceChecked(myProject).isIsUseDefaultProxy()) {
      final String ideaWideProxyHost=System.getProperty("http.proxyHost");
      String ideaWideProxyPort=System.getProperty("http.proxyPort");
      if (ideaWideProxyPort == null) {
        ideaWideProxyPort="3128";
      }
      if ((ideaWideProxyHost != null) && (!"".equals(ideaWideProxyHost.trim()))) {
        return new MyPromptingProxyManager(ideaWideProxyHost,ideaWideProxyPort);
      }
    }
    return null;
  }
  String proxyExceptions=(String)properties.get("http-proxy-exceptions");
  String proxyExceptionsSeparator=",";
  if (proxyExceptions == null) {
    proxyExceptions=System.getProperty("http.nonProxyHosts");
    proxyExceptionsSeparator="|";
  }
  if (proxyExceptions != null) {
    for (StringTokenizer exceptions=new StringTokenizer(proxyExceptions,proxyExceptionsSeparator); exceptions.hasMoreTokens(); ) {
      String exception=exceptions.nextToken().trim();
      if (DefaultSVNOptions.matches(exception,host)) {
        return null;
      }
    }
  }
  String proxyPort=(String)properties.get("http-proxy-port");
  String proxyUser=(String)properties.get("http-proxy-username");
  String proxyPassword=(String)properties.get("http-proxy-password");
  return new MySimpleProxyManager(proxyHost,proxyPort,proxyUser,proxyPassword);
}
