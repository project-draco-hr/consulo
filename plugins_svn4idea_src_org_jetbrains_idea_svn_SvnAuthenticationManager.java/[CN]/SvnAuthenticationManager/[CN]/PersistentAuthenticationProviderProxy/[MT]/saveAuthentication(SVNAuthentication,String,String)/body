{
  final Boolean fromInteractive=ourJustEntered.get();
  ourJustEntered.set(null);
  if (!Boolean.TRUE.equals(fromInteractive)) {
    return;
  }
  if ((!auth.isStorageAllowed()) || (USERNAME.equals(kind)))   return;
  saveCredentialsIfAllowed(auth,kind,realm,new Runnable(){
    @Override public void run(){
      File dir=new File(myAuthDir,kind);
      String fileName=SVNFileUtil.computeChecksum(realm);
      File authFile=new File(dir,fileName);
      myListener.getMulticaster().actualSaveWillBeTried(ProviderType.persistent,auth.getURL(),realm,kind);
      try {
        ((IPersistentAuthenticationProvider)myDelegate).saveAuthentication(auth,kind,realm);
      }
 catch (      SVNException e) {
        if (myProject != null) {
          ApplicationManager.getApplication().invokeLater(new ChangesViewBalloonProblemNotifier(myProject,"<b>Problem when storing Subversion credentials:</b>&nbsp;" + e.getMessage(),MessageType.ERROR));
        }
      }
 finally {
        setWriteable(authFile);
      }
    }
  }
);
}
