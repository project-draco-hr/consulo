{
  super(configDirectory,true,null,null);
  myProject=project;
  myConfigDirectory=configDirectory;
  myKeyAlgorithm=new HashMap<Thread,String>();
  ensureListenerCreated();
  mySavePermissions=new ThreadLocalSavePermissions();
  myConfig=SvnConfiguration.getInstance(myProject);
  if (myPersistentAuthenticationProviderProxy != null) {
    myPersistentAuthenticationProviderProxy.setProject(myProject);
  }
  myInteraction=new MySvnAuthenticationInteraction(myProject);
  Disposer.register(project,new Disposable(){
    @Override public void dispose(){
      myProject=null;
      if (myPersistentAuthenticationProviderProxy != null) {
        myPersistentAuthenticationProviderProxy.myProject=null;
        myPersistentAuthenticationProviderProxy=null;
      }
      if (myConfig != null) {
        myConfig.clear();
        myConfig=null;
      }
      myInteraction=null;
    }
  }
);
}
