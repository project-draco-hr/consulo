{
  for (  final VirtualFile file : files) {
    for (    final String contentEntryUrl : myEntryToEditorMap.keySet()) {
      final ContentEntry contentEntry=getContentEntry(contentEntryUrl);
      if (contentEntry == null)       continue;
      final VirtualFile contentEntryFile=contentEntry.getFile();
      if (contentEntryFile == null) {
        continue;
      }
      if (contentEntryFile.equals(file)) {
        throw new Exception(ProjectBundle.message("module.paths.add.content.already.exists.error",file.getPresentableUrl()));
      }
      if (VfsUtilCore.isAncestor(contentEntryFile,file,true)) {
        throw new Exception(ProjectBundle.message("module.paths.add.content.intersect.error",file.getPresentableUrl(),contentEntryFile.getPresentableUrl()));
      }
      if (VfsUtilCore.isAncestor(file,contentEntryFile,true)) {
        throw new Exception(ProjectBundle.message("module.paths.add.content.dominate.error",file.getPresentableUrl(),contentEntryFile.getPresentableUrl()));
      }
    }
    final Module[] modules=myModulesProvider.getModules();
    for (    final Module module : modules) {
      if (myModuleName.equals(module.getName())) {
        continue;
      }
      ModuleRootModel rootModel=myModulesProvider.getRootModel(module);
      LOG.assertTrue(rootModel != null);
      final VirtualFile[] moduleContentRoots=rootModel.getContentRoots();
      for (      VirtualFile moduleContentRoot : moduleContentRoots) {
        if (file.equals(moduleContentRoot)) {
          throw new Exception(ProjectBundle.message("module.paths.add.content.duplicate.error",file.getPresentableUrl(),module.getName()));
        }
      }
    }
  }
}
