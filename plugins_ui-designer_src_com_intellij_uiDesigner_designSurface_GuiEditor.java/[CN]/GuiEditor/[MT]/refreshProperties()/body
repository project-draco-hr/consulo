{
  final Ref<Boolean> anythingModified=new Ref<Boolean>();
  FormEditingUtil.iterate(myRootContainer,new FormEditingUtil.ComponentVisitor(){
    public boolean visit(    final IComponent component){
      final RadComponent radComponent=(RadComponent)component;
      boolean componentModified=false;
      for (      IProperty prop : component.getModifiedProperties()) {
        if (prop instanceof IntroStringProperty) {
          IntroStringProperty strProp=(IntroStringProperty)prop;
          componentModified=strProp.refreshValue(radComponent) || componentModified;
        }
      }
      if (component instanceof RadContainer) {
        componentModified=((RadContainer)component).updateBorder() || componentModified;
      }
      if (component.getParentContainer() instanceof RadTabbedPane) {
        componentModified=((RadTabbedPane)component.getParentContainer()).refreshChildTitle(radComponent) || componentModified;
      }
      if (componentModified) {
        anythingModified.set(Boolean.TRUE);
      }
      return true;
    }
  }
);
  if (!anythingModified.isNull()) {
    refresh();
    final UIDesignerToolWindowManager twm=UIDesignerToolWindowManager.getInstance(getProject());
    twm.getComponentTree().repaint();
    twm.getPropertyInspector().synchWithTree(true);
  }
}
