{
  final AbstractVcs vcs=ProjectLevelVcsManager.getInstance(myProject).getVcsFor(virtualFile);
  if (vcs == null) {
    return;
  }
  Date versionDate;
  try {
    versionDate=new Date(versionId);
  }
 catch (  IllegalArgumentException ex) {
    return;
  }
  final FilePath filePath=PeerFactory.getInstance().getVcsContextFactory().createFilePathOn(virtualFile);
  try {
    final VcsHistorySession session=vcs.getVcsHistoryProvider().createSessionFor(filePath);
    final List<VcsFileRevision> list=session.getRevisionList();
    for (    VcsFileRevision fileRevision : list) {
      if (fileRevision.getRevisionDate().before(versionDate)) {
        fileRevision.loadContent();
        final CharSequence content=LoadTextUtil.getTextByBinaryPresentation(fileRevision.getContent(),virtualFile,false);
        processor.process(content);
        break;
      }
    }
  }
 catch (  IOException e) {
    LOG.error(e);
  }
catch (  VcsException e) {
    LOG.error(e);
  }
}
