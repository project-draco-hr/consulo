{
  PsiElement[] declaredElements=decl.getDeclaredElements();
  if (declaredElements.length == 1) {
    if (!(declaredElements[0] instanceof PsiLocalVariable))     return false;
    PsiLocalVariable var=(PsiLocalVariable)declaredElements[0];
    if (var.getInitializer() == null)     return false;
    PsiTypeElement type=var.getTypeElement();
    if (PsiTreeUtil.isAncestor(type,element,false) || element.getParent() == var && ((PsiJavaToken)element).getTokenType() != JavaTokenType.SEMICOLON) {
      setText(CodeInsightBundle.message("intention.split.declaration.assignment.text"));
      return true;
    }
  }
 else   if (declaredElements.length > 1) {
    if (decl.getParent() instanceof PsiForStatement)     return false;
    for (    PsiElement declaredElement : declaredElements) {
      if (!(declaredElement instanceof PsiLocalVariable))       return false;
      PsiLocalVariable var=(PsiLocalVariable)declaredElement;
      PsiTypeElement type=var.getTypeElement();
      if (PsiTreeUtil.isAncestor(type,element,false) || element == var.getNameIdentifier()) {
        setText(CodeInsightBundle.message("intention.split.declaration.text"));
        return true;
      }
    }
  }
  return false;
}
