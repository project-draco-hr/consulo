{
  final Module module=getConfigurationModule().getModule();
  if (module == null) {
    throw new ExecutionException("Module is not found");
  }
  AndroidFacet facet=AndroidFacet.getInstance(module);
  if (facet == null) {
    throw new ExecutionException(AndroidBundle.message("no.facet.error",module.getName()));
  }
  Project project=env.getProject();
  AndroidFacetConfiguration configuration=facet.getConfiguration();
  AndroidPlatform platform=configuration.getAndroidPlatform();
  if (platform == null) {
    Messages.showErrorDialog(project,AndroidBundle.message("specify.platform.error"),CommonBundle.getErrorTitle());
    ModulesConfigurator.showFacetSettingsDialog(facet,null);
    return null;
  }
  if (platform.getSdk().getDebugBridge(getProject()) == null)   return null;
  boolean debug=DefaultDebugExecutor.EXECUTOR_ID.equals(executor.getId());
  if (debug) {
    if (!AndroidUtils.activateDdmsIfNeccessary(facet)) {
      return null;
    }
  }
  String aPackage=getPackageName(facet);
  if (aPackage == null)   return null;
  Map<AndroidFacet,String> depModule2PackageName=new HashMap<AndroidFacet,String>();
  if (!fillRuntimeAndTestDependencies(module,depModule2PackageName))   return null;
  IDevice[] targetDevices=new IDevice[0];
  if (CHOOSE_DEVICE_MANUALLY) {
    IDevice[] devices=chooseDevicesManually(facet);
    if (devices.length > 0) {
      targetDevices=devices;
      PropertiesComponent.getInstance(getProject()).setValue(ANDROID_TARGET_DEVICES_PROPERTY,toString(targetDevices));
    }
    if (targetDevices.length == 0)     return null;
  }
  AndroidApplicationLauncher applicationLauncher=getApplicationLauncher(facet);
  if (applicationLauncher != null) {
    return new AndroidRunningState(env,facet,targetDevices,PREFERRED_AVD.length() > 0 ? PREFERRED_AVD : null,computeCommandLine(),aPackage,applicationLauncher,depModule2PackageName){
      @NotNull @Override protected ConsoleView attachConsole() throws ExecutionException {
        return AndroidRunConfigurationBase.this.attachConsole(this,executor);
      }
    }
;
  }
  return null;
}
