{
  final boolean unitTestMode=ApplicationManager.getApplication().isUnitTestMode();
  if (myWritableDirectoryList.size() > 1 && !unitTestMode) {
    PsiDirectory preferredDirectory=myDirectory;
    final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
    final Module moduleForFile=fileIndex.getModuleForFile(file.getVirtualFile());
    if (moduleForFile != null) {
      for (      PsiDirectory d : myWritableDirectoryList) {
        if (fileIndex.getModuleForFile(d.getVirtualFile()) == moduleForFile) {
          preferredDirectory=d;
          break;
        }
      }
    }
    myDirectory=MoveClassesOrPackagesUtil.chooseDirectory(myWritableDirectoryList.toArray(new PsiDirectory[myWritableDirectoryList.size()]),preferredDirectory,project,new HashMap<PsiDirectory,String>());
  }
  if (myDirectory == null)   return;
  final PsiManager manager=myDirectory.getManager();
  if (myCreateClass) {
    if (unitTestMode) {
      try {
        myDirectory.createClass(myCanonicalText);
        return;
      }
 catch (      IncorrectOperationException ex) {
        return;
      }
    }
    CreateFromUsageUtils.createClass(CreateClassKind.CLASS,myDirectory,myCanonicalText,manager,myReference.getElement(),null,mySuperClass);
  }
 else {
    try {
      myDirectory.createSubdirectory(myCanonicalText);
    }
 catch (    IncorrectOperationException ex) {
    }
  }
}
