{
  final PsiManager manager=myDirectory.getManager();
  PsiDirectory directory=myDirectory;
  String lastName;
  for (StringTokenizer st=new StringTokenizer(myCanonicalText,"."); ; ) {
    lastName=st.nextToken();
    if (st.hasMoreTokens()) {
      try {
        directory=directory.findSubdirectory(lastName) != null ? directory.findSubdirectory(lastName) : directory.createSubdirectory(lastName);
      }
 catch (      IncorrectOperationException e) {
        CreateFromUsageUtils.scheduleFileOrPackageCreationFailedMessageBox(e,lastName,directory,true);
        return;
      }
    }
 else {
      break;
    }
  }
  if (myClassKind != null) {
    PsiClass createdClass;
    if (myTemplateName != null && moduleForFile != null) {
      createdClass=CreateClassUtil.createClassFromCustomTemplate(directory,moduleForFile,lastName,myTemplateName);
    }
 else {
      createdClass=CreateFromUsageUtils.createClass(myClassKind == ClassKind.INTERFACE ? CreateClassKind.INTERFACE : CreateClassKind.CLASS,directory,lastName,manager,myContext,null,mySuperClass);
    }
    if (createdClass != null) {
      createdClass.navigate(true);
    }
  }
 else {
    try {
      directory.createSubdirectory(lastName);
    }
 catch (    IncorrectOperationException e) {
      CreateFromUsageUtils.scheduleFileOrPackageCreationFailedMessageBox(e,lastName,directory,true);
    }
  }
}
