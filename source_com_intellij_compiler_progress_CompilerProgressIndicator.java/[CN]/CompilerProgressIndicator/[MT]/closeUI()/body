{
  if (IS_UNIT_TEST_MODE) {
    return;
  }
  Window window=getWindow();
  ModalityState modalityState=window != null ? ModalityState.stateForComponent(window) : ModalityState.NON_MMODAL;
  final Application application=ApplicationManager.getApplication();
  application.invokeLater(new Runnable(){
    public void run(){
      closeProgressDialog();
      final boolean closeViewOnSuccess=CompilerWorkspaceConfiguration.getInstance(myProject).CLOSE_MESSAGE_VIEW_IF_SUCCESS;
synchronized (myMessageViewLock) {
        if (myErrorTreeView != null) {
          final boolean hasMessagesToRead=myErrorCount > 0 || myWarningCount > 0;
          final boolean shouldRetainView=hasMessagesToRead || !closeViewOnSuccess;
          if (shouldRetainView) {
            addMessage(new CompilerMessageImpl(myProject,CompilerMessageCategory.STATISTICS,CompilerBundle.message("statistics.error.count",myErrorCount),null,-1,-1));
            addMessage(new CompilerMessageImpl(myProject,CompilerMessageCategory.STATISTICS,CompilerBundle.message("statistics.warnings.count",myWarningCount),null,-1,-1));
            activateMessageView();
            myErrorTreeView.selectFirstMessage();
          }
 else {
            removeAllContents(myProject,null);
          }
        }
      }
    }
  }
,modalityState);
}
