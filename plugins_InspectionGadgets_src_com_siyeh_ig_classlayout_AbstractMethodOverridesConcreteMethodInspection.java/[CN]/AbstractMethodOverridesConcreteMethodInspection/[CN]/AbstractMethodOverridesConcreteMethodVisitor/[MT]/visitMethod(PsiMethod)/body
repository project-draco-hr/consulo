{
  if (method.isConstructor()) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass.isInterface() || containingClass.isAnnotationType()) {
    return;
  }
  if (!method.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  final PsiMethod[] superMethods=PsiSuperMethodUtil.findSuperMethods(method);
  for (int i=0; i < superMethods.length; i++) {
    final PsiMethod superMethod=superMethods[i];
    final PsiClass superClass=superMethod.getContainingClass();
    final String superClassName=superClass.getQualifiedName();
    if (!superClass.isInterface() && !"java.lang.Object".equals(superClassName) && !superMethod.hasModifierProperty(PsiModifier.ABSTRACT)) {
      registerMethodError(method);
      return;
    }
  }
}
