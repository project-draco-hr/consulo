{
  Library selectedLibrary=myFacetEditor.getSelectedLibrary();
  String selectedName=null;
  if (selectedLibrary != null && !myFacetEditor.addNewSdk()) {
    selectedName=selectedLibrary.getName();
    LibrariesUtil.placeEntryToCorrectPlace(rootModel,rootModel.addLibraryEntry(selectedLibrary));
    GroovyFacetSupportProvider.this.addSupport(module,rootModel,selectedName,selectedLibrary);
  }
 else   if (myFacetEditor.getNewSdkPath() != null) {
    final String path=myFacetEditor.getNewSdkPath();
    ValidationResult result=GroovyConfigUtils.isGroovySdkHome(path);
    if (path != null && ValidationResult.OK == result) {
      final Project project=module.getProject();
      selectedName=GroovyConfigUtils.generateNewGroovyLibName(GroovyConfigUtils.getGroovyVersion(path),project);
      final String selected=selectedName;
      final Library selectedLib=selectedLibrary;
      final CreateLibraryDialog dialog=new CreateLibraryDialog(project,selectedName){
        @Override protected void doOKAction(){
          ApplicationManager.getApplication().runWriteAction(new Runnable(){
            public void run(){
              ModuleRootManager manager=ModuleRootManager.getInstance(module);
              ModifiableRootModel rootModel=manager.getModifiableModel();
              final Library lib=GroovyConfigUtils.createGroovyLibrary(path,selected,project,false,isInProject());
              LibrariesUtil.placeEntryToCorrectPlace(rootModel,rootModel.addLibraryEntry(lib));
              if (selectedLib != null) {
                GroovyConfigUtils.saveGroovyDefaultLibName(selected);
              }
              GroovyFacetSupportProvider.this.addSupport(module,rootModel,selected,selectedLib);
            }
          }
);
          super.doOKAction();
        }
      }
;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          dialog.show();
        }
      }
);
    }
 else {
      Messages.showErrorDialog(GroovyBundle.message("invalid.groovy.sdk.path.message"),GroovyBundle.message("invalid.groovy.sdk.path.text"));
      selectedLibrary=null;
    }
  }
}
