{
  Object cachedInitializerValue=myCachedInitializerValue;
  if (cachedInitializerValue != null && !(cachedInitializerValue instanceof PsiExpression)) {
    return cachedInitializerValue;
  }
  PsiType type=getType();
  if (!(type instanceof PsiPrimitiveType) && !type.equalsToText("java.lang.String"))   return null;
  PsiExpression initializer;
  if (cachedInitializerValue != null) {
    initializer=(PsiExpression)cachedInitializerValue;
  }
 else {
    if (getTreeElement() != null) {
      initializer=getInitializer();
      if (initializer == null)       return null;
    }
 else {
      try {
        String initializerText=getInitializerText();
        if (initializerText == null)         return null;
        final FileElement holderElement=DummyHolderFactory.createHolder(myManager,this).getTreeElement();
        CompositeElement exprElement=ExpressionParsing.parseExpressionText(myManager,initializerText,0,initializerText.length(),holderElement.getCharTable());
        TreeUtil.addChildren(holderElement,exprElement);
        initializer=(PsiExpression)SourceTreeToPsiMap.treeElementToPsi(exprElement);
      }
 catch (      InitializerTooLongException e) {
        calcTreeElement();
        return computeConstantValue(visitedVars);
      }
    }
  }
  Object result=PsiConstantEvaluationHelperImpl.computeCastTo(initializer,type,visitedVars);
  if (initializer instanceof PsiLiteralExpression) {
    myCachedInitializerValue=result;
  }
 else {
    myCachedInitializerValue=initializer;
  }
  return result;
}
