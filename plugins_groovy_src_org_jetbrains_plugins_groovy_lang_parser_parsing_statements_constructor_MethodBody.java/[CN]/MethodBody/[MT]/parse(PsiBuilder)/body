{
  PsiBuilder.Marker cbMarker=builder.mark();
  if (!ParserUtils.getToken(builder,mLCURLY)) {
    cbMarker.rollbackTo();
    return WRONGWAY;
  }
  ParserUtils.getToken(builder,mNLS);
  if (!tWRONG_SET.contains(ExplicitConstructorStatement.parse(builder))) {
    if (!tWRONG_SET.contains(Separators.parse(builder))) {
      if (tWRONG_SET.contains(OpenOrClosableBlock.parseBlockBody(builder))) {
        cbMarker.rollbackTo();
        return WRONGWAY;
      }
    }
    cbMarker.done(CONSTRUCTOR_BODY);
    return CONSTRUCTOR_BODY;
  }
 else {
    if (tWRONG_SET.contains(OpenOrClosableBlock.parseBlockBody(builder))) {
      cbMarker.rollbackTo();
      return WRONGWAY;
    }
  }
  if (!ParserUtils.getToken(builder,mRCURLY)) {
    cbMarker.rollbackTo();
    return WRONGWAY;
  }
  cbMarker.done(METHOD_BODY);
  return METHOD_BODY;
}
