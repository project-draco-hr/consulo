{
  if (expression instanceof PsiBinaryExpression) {
    PsiBinaryExpression binaryExpression=(PsiBinaryExpression)expression;
    if (binaryExpression.getOperationTokenType() == JavaTokenType.PLUS) {
      String lhs=getReferencedFile(binaryExpression.getLOperand(),testName);
      String rhs=getReferencedFile(binaryExpression.getROperand(),testName);
      if (lhs != null && rhs != null) {
        return lhs + rhs;
      }
    }
  }
 else   if (expression instanceof PsiLiteralExpression) {
    final Object value=((PsiLiteralExpression)expression).getValue();
    if (value instanceof String) {
      return (String)value;
    }
  }
 else   if (expression instanceof PsiReferenceExpression) {
    final PsiElement result=((PsiReferenceExpression)expression).resolve();
    if (result instanceof PsiVariable) {
      final PsiExpression initializer=((PsiVariable)result).getInitializer();
      if (initializer != null) {
        return getReferencedFile(initializer,testName);
      }
    }
  }
 else   if (expression instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCall=(PsiMethodCallExpression)expression;
    final String callText=methodCall.getMethodExpression().getText();
    if (callText.equals("getTestName")) {
      final PsiExpression[] psiExpressions=methodCall.getArgumentList().getExpressions();
      if (psiExpressions.length == 1) {
        if (psiExpressions[0].getText().equals("true")) {
          return UsefulTestCase.getTestName(testName,true);
        }
        return testName;
      }
    }
  }
  return null;
}
