{
  final PsiAnnotation annotation=AnnotationUtil.findAnnotationInHierarchy(psiClass,Collections.singleton("com.intellij.testFramework.TestDataPath"));
  if (annotation != null) {
    final PsiAnnotationMemberValue value=annotation.findAttributeValue(PsiAnnotation.DEFAULT_REFERENCED_METHOD_NAME);
    if (value instanceof PsiExpression) {
      final PsiConstantEvaluationHelper evaluationHelper=JavaPsiFacade.getInstance(value.getProject()).getConstantEvaluationHelper();
      final Object constantValue=evaluationHelper.computeConstantExpression(value,false);
      if (constantValue instanceof String) {
        String path=(String)constantValue;
        if (path.indexOf("$CONTENT_ROOT") >= 0) {
          final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(psiClass.getProject()).getFileIndex();
          final VirtualFile contentRoot=fileIndex.getContentRootForFile(psiClass.getContainingFile().getVirtualFile());
          if (contentRoot == null)           return null;
          path=path.replace("$CONTENT_ROOT",contentRoot.getPath());
        }
        return path;
      }
    }
  }
  return null;
}
