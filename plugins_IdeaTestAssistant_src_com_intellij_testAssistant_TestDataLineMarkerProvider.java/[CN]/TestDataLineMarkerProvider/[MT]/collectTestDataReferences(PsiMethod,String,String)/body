{
  final List<String> result=new ArrayList<String>();
  method.accept(new JavaRecursiveElementVisitor(){
    @Override public void visitMethodCallExpression(    PsiMethodCallExpression expression){
      String callText=expression.getMethodExpression().getText();
      if (callText.equals("configureByFile") || callText.equals("checkResultByFile")) {
        final PsiExpression[] arguments=expression.getArgumentList().getExpressions();
        if (arguments.length == 1) {
          String testDataFile=getReferencedFile(arguments[0],testName);
          if (testDataFile != null) {
            result.add(testDataPath + testDataFile);
          }
        }
      }
 else       if (callText.startsWith("do") && callText.endsWith("Test")) {
        final PsiMethod doTestMethod=expression.resolveMethod();
        if (doTestMethod != null) {
          result.addAll(collectTestDataReferences(doTestMethod,testDataPath,testName));
        }
      }
    }
  }
);
  return result;
}
