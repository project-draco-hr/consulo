{
  final int start=doc.getLineStartOffset(line);
  final int end=doc.getLineEndOffset(line);
  final int _start=CharArrayUtil.shiftForward(doc.getCharsSequence(),start," \n\t");
  if (_start >= end) {
    return true;
  }
  TextRange alreadyChecked=null;
  for (PsiElement elem=file.findElementAt(_start); elem != null && elem.getTextOffset() <= end && (alreadyChecked == null || !alreadyChecked.contains(elem.getTextRange())); elem=elem.getNextSibling()) {
    for (PsiElement _elem=elem; _elem.getTextOffset() >= _start; _elem=_elem.getParent()) {
      alreadyChecked=_elem.getTextRange();
      if (_elem instanceof PsiDeclarationStatement) {
        final PsiElement[] declared=((PsiDeclarationStatement)_elem).getDeclaredElements();
        for (        PsiElement declaredElement : declared) {
          if (declaredElement instanceof PsiVariable) {
            return false;
          }
        }
      }
      if (_elem instanceof PsiJavaCodeReferenceElement) {
        final PsiElement resolved=((PsiJavaCodeReferenceElement)_elem).resolve();
        if (resolved instanceof PsiVariable) {
          return false;
        }
      }
    }
  }
  return true;
}
