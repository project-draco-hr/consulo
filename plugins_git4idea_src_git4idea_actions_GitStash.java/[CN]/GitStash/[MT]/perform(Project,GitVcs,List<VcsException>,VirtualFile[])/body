{
  saveAll();
  if (!ProjectLevelVcsManager.getInstance(project).checkAllFilesAreUnder(GitVcs.getInstance(project),affectedFiles))   return;
  final Map<VirtualFile,List<VirtualFile>> roots=GitUtil.sortFilesByVcsRoot(project,affectedFiles);
  String stashName=Messages.showInputDialog(project,GitBundle.getString("stash.name.message"),GitBundle.getString("stash.name.title"),Messages.getQuestionIcon(),"",null);
  if (stashName == null || stashName.length() == 0)   return;
  for (  VirtualFile root : roots.keySet()) {
    GitCommandRunnable cmdr=new GitCommandRunnable(project,vcs.getSettings(),root);
    cmdr.setCommand(GitCommand.STASH_CMD);
    cmdr.setArgs(new String[]{"save",stashName});
    ProgressManager manager=ProgressManager.getInstance();
    manager.runProcessWithProgressSynchronously(cmdr,GitBundle.getString("stashing.title"),false,project);
    @SuppressWarnings({"ThrowableResultOfMethodCallIgnored"}) VcsException ex=cmdr.getException();
    if (ex != null) {
      GitUIUtil.showOperationError(project,ex,"git stash");
      break;
    }
  }
}
