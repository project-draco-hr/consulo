{
  final XmlAttributeValue xmlAttributeValue=(XmlAttributeValue)element;
  final String referencesId=xmlAttributeValue.getValue();
  final Map<String,XmlAttributeValue> fileIds=new HashMap<String,XmlAttributeValue>();
  xmlAttributeValue.getContainingFile().accept(new XmlRecursiveElementVisitor(){
    @Override public void visitXmlTag(    XmlTag tag){
      super.visitXmlTag(tag);
      final XmlAttribute attribute=tag.getAttribute(FxmlConstants.FX_ID);
      if (attribute != null) {
        fileIds.put(attribute.getValue(),attribute.getValueElement());
      }
    }
  }
);
  return new PsiReference[]{new PsiReferenceBase<XmlAttributeValue>(xmlAttributeValue){
    @Nullable @Override public PsiElement resolve(){
      return fileIds.get(referencesId);
    }
    @NotNull @Override public Object[] getVariants(){
      return ArrayUtil.toStringArray(fileIds.keySet());
    }
  }
};
}
