{
  final PsiNewExpression expr=(PsiNewExpression)getElement();
  if (expr != null) {
    final PsiElementFactory elementFactory=JavaPsiFacade.getInstance(expr.getProject()).getElementFactory();
    final PsiMethod constructor=expr.resolveConstructor();
    if (constructor != null) {
      StringBuffer buf=new StringBuffer();
      final PsiExpressionList argumentList=expr.getArgumentList();
      if (argumentList != null) {
        final PsiExpression[] args=argumentList.getExpressions();
        final PsiParameter[] parameters=constructor.getParameterList().getParameters();
        final JavaCodeStyleManager styleManager=JavaCodeStyleManager.getInstance(constructor.getProject());
        for (int i=0; i < constructor.getParameterList().getParametersCount(); i++) {
          String arg=args[i].getText();
          if (parameters[i].isVarArgs()) {
            for (int ia=i + 1; ia < args.length; ia++) {
              arg+=", " + args[ia].getText();
            }
          }
          final String pureParamName=styleManager.variableNameToPropertyName(parameters[i].getName(),VariableKind.PARAMETER);
          final ParameterData data=myParametersMap.get(pureParamName);
          if (!Comparing.strEqual(arg,data.getDefaultValue()) || data.isInsertSetter()) {
            buf.append(data.getSetterName()).append("(").append(arg).append(").");
          }
        }
        final PsiExpression settersChain=elementFactory.createExpressionFromText("new " + myBuilderClass + "()."+ buf.toString()+ "create"+ StringUtil.capitalize(constructor.getName())+ "()",null);
        expr.replace(settersChain);
      }
    }
  }
}
