{
  final Class<ProcessListener> listenerClass=ProcessListener.class;
  return (ProcessListener)Proxy.newProxyInstance(listenerClass.getClassLoader(),new Class[]{listenerClass},new InvocationHandler(){
    public Object invoke(    Object object,    Method method,    Object[] params) throws Throwable {
      for (      ProcessListener listener : myListeners) {
        try {
          method.invoke(listener,params);
        }
 catch (        Throwable e) {
          if (!isCanceledException(e)) {
            LOG.error(e);
          }
        }
      }
      return null;
    }
  }
);
}
