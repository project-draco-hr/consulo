{
  ASTNode classRef=findChildByRole(ChildRole.TYPE_REFERENCE);
  if (classRef != null) {
    ASTNode argumentList=TreeUtil.skipElements(classRef.getTreeNext(),WHITE_SPACE_OR_COMMENT_BIT_SET);
    if (argumentList != null && argumentList.getElementType() == EXPRESSION_LIST) {
      PsiType aClass=getManager().getElementFactory().createType((PsiJavaCodeReferenceElement)SourceTreeToPsiMap.treeElementToPsi(classRef));
      if (aClass != null) {
        return getManager().getResolveHelper().resolveConstructor((PsiClassType)aClass,(PsiExpressionList)SourceTreeToPsiMap.treeElementToPsi(argumentList),this);
      }
    }
  }
 else {
    ASTNode anonymousClassElement=TreeUtil.findChild(this,ANONYMOUS_CLASS);
    if (anonymousClassElement != null) {
      final PsiAnonymousClass anonymousClass=(PsiAnonymousClass)SourceTreeToPsiMap.treeElementToPsi(anonymousClassElement);
      PsiType aClass=anonymousClass.getBaseClassType();
      ASTNode argumentList=TreeUtil.findChild(anonymousClassElement,EXPRESSION_LIST);
      return getManager().getResolveHelper().resolveConstructor((PsiClassType)aClass,(PsiExpressionList)SourceTreeToPsiMap.treeElementToPsi(argumentList),anonymousClass);
    }
  }
  return JavaResolveResult.EMPTY;
}
