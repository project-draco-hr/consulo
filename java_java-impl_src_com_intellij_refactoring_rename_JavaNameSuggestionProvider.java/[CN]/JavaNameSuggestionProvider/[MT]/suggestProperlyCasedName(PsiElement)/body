{
  if (!(psiElement instanceof PsiNamedElement))   return null;
  String name=((PsiNamedElement)psiElement).getName();
  if (name == null)   return null;
  if (psiElement instanceof PsiVariable) {
    final JavaCodeStyleManager codeStyleManager=JavaCodeStyleManager.getInstance(psiElement.getProject());
    final VariableKind kind=codeStyleManager.getVariableKind((PsiVariable)psiElement);
    final String prefix=codeStyleManager.getPrefixByVariableKind(kind);
    if (kind == VariableKind.STATIC_FINAL_FIELD) {
      final String[] words=NameUtil.splitNameIntoWords(name);
      StringBuilder buffer=new StringBuilder();
      for (int i=0; i < words.length; i++) {
        String word=words[i];
        if (i > 0)         buffer.append('_');
        buffer.append(StringUtil.toUpperCase(word));
      }
      return new String[]{buffer.toString()};
    }
 else {
      final List<String> result=new ArrayList<String>();
      result.add(suggestProperlyCasedName(prefix,NameUtil.splitNameIntoWords(name)));
      if (name.startsWith(prefix)) {
        name=name.substring(prefix.length());
        result.add(suggestProperlyCasedName(prefix,NameUtil.splitNameIntoWords(name)));
      }
      result.add(suggestProperlyCasedName(prefix,NameUtil.splitNameIntoWords(name.toLowerCase())));
      return ArrayUtil.toStringArray(result);
    }
  }
  return new String[]{name};
}
