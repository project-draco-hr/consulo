{
  return (T)Proxy.newProxyInstance(clazz.getClassLoader(),new Class[]{clazz},new InvocationHandler(){
    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      final MethodDescriptor current=new MethodDescriptor(method);
      if (myTrackedMethods.contains(current)) {
        try {
          onBefore();
          return method.invoke(t,args);
        }
  finally {
          onAfter();
        }
      }
      return method.invoke(t,args);
    }
  }
);
}
