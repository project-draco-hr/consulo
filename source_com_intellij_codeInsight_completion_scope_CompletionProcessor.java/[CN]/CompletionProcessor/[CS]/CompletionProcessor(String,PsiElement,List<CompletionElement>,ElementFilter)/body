{
  mySettings=CodeInsightSettings.getInstance();
  myPrefix=prefix;
  myResults=container;
  myElement=element;
  myFilter=filter;
  myScope=element;
  if (ResolveUtil.findParentContextOfClass(myElement,PsiDocComment.class,false) != null)   myMembersFlag=true;
  while (myScope != null && !(myScope instanceof PsiFile || myScope instanceof PsiClass)) {
    myScope=myScope.getContext();
  }
  PsiElement elementParent=element.getContext();
  if (elementParent instanceof PsiReferenceExpression) {
    PsiExpression qualifier=((PsiReferenceExpression)elementParent).getQualifierExpression();
    if (qualifier instanceof PsiSuperExpression) {
      myQualifierClass=ResolveUtil.getContextClass(myElement);
      myQualifierType=myElement.getManager().getElementFactory().createType(myQualifierClass);
    }
 else     if (qualifier != null) {
      myQualifierType=qualifier.getType();
      myQualifierClass=PsiUtil.resolveClassInType(myQualifierType);
    }
  }
}
