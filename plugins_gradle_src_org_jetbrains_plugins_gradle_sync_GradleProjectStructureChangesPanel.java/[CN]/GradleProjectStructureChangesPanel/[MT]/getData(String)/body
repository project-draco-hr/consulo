{
  if (ExternalSystemDataKeys.PROJECT_TREE.is(dataId)) {
    return myTree;
  }
 else   if (ExternalSystemDataKeys.PROJECT_TREE_MODEL.is(dataId)) {
    return myTreeModel;
  }
 else   if (ExternalSystemDataKeys.PROJECT_TREE_SELECTED_NODE.is(dataId)) {
    TreePath[] paths=myTree.getSelectionPaths();
    if (paths == null) {
      return null;
    }
    List<ProjectStructureNode<?>> result=new ArrayList<ProjectStructureNode<?>>();
    for (    TreePath path : paths) {
      result.add((ProjectStructureNode<?>)path.getLastPathComponent());
    }
    return result;
  }
 else   if (ExternalSystemDataKeys.SYNC_TREE_NODE_UNDER_MOUSE.is(dataId)) {
    return myNodeUnderMouse;
  }
 else   if (PlatformDataKeys.HELP_ID.is(dataId)) {
    return GradleConstants.HELP_TOPIC_TOOL_WINDOW;
  }
 else {
    return super.getData(dataId);
  }
}
