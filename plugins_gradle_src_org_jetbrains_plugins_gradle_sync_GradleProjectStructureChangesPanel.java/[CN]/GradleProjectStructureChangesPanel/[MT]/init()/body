{
  JPanel content=new JPanel(new GridBagLayout());
  DefaultMutableTreeNode root=new DefaultMutableTreeNode(buildDescriptor(getProject()));
  final Module[] modules=ModuleManager.getInstance(getProject()).getModules();
  RootPolicy<LibraryOrderEntry> policy=new RootPolicy<LibraryOrderEntry>(){
    @Override public LibraryOrderEntry visitLibraryOrderEntry(    LibraryOrderEntry libraryOrderEntry,    LibraryOrderEntry value){
      return libraryOrderEntry;
    }
  }
;
  for (  Module module : modules) {
    final DefaultMutableTreeNode moduleNode=new DefaultMutableTreeNode(buildDescriptor(module));
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
    for (    OrderEntry orderEntry : moduleRootManager.getOrderEntries()) {
      final LibraryOrderEntry library=orderEntry.accept(policy,null);
      if (library != null) {
        moduleNode.add(new DefaultMutableTreeNode(buildDescriptor(library)));
      }
    }
    root.add(moduleNode);
  }
  DefaultTreeModel treeModel=new DefaultTreeModel(root);
  Tree tree=new Tree(treeModel);
  GridBagConstraints constraints=new GridBagConstraints();
  constraints.fill=GridBagConstraints.BOTH;
  constraints.weightx=constraints.weighty=1;
  content.add(tree,constraints);
  myContent=content;
}
