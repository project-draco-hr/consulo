{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  readLock();
  try {
    CRC32 crc=new CRC32();
    Set<String> profiles=myExplicitProfiles;
    if (profiles != null) {
      updateCrc(crc,profiles.hashCode());
    }
    Collection<MavenProject> allProjects=myVirtualFileToProjectMapping.values();
    crc.update(allProjects.size() & 0xFF);
    for (    MavenProject mavenProject : allProjects) {
      VirtualFile pomFile=mavenProject.getFile();
      Module module=fileIndex.getModuleForFile(pomFile);
      if (module == null)       continue;
      if (fileIndex.getContentRootForFile(pomFile) != pomFile.getParent())       continue;
      updateCrc(crc,module.getName());
      MavenId mavenId=mavenProject.getMavenId();
      updateCrc(crc,mavenId.getGroupId());
      updateCrc(crc,mavenId.getArtifactId());
      updateCrc(crc,mavenId.getVersion());
      MavenId parentId=mavenProject.getParentId();
      if (parentId != null) {
        updateCrc(crc,parentId.getGroupId());
        updateCrc(crc,parentId.getArtifactId());
        updateCrc(crc,parentId.getVersion());
      }
      updateCrc(crc,mavenProject.getDirectory());
      updateCrc(crc,MavenFilteredPropertyPsiReferenceProvider.getDelimitersPattern(mavenProject).pattern());
      updateCrc(crc,mavenProject.getModelMap().hashCode());
      updateCrc(crc,mavenProject.getResources().hashCode());
      updateCrc(crc,mavenProject.getTestResources().hashCode());
      updateCrc(crc,getFilterExclusions(mavenProject).hashCode());
      updateCrc(crc,mavenProject.getProperties().hashCode());
      for (      String each : mavenProject.getFilters()) {
        File file=new File(each);
        updateCrc(crc,file.lastModified());
      }
      Element pluginConfiguration=mavenProject.getPluginConfiguration("org.apache.maven.plugins","maven-resources-plugin");
      updateCrc(crc,MavenJDOMUtil.findChildValueByPath(pluginConfiguration,"escapeString"));
      updateCrc(crc,MavenJDOMUtil.findChildValueByPath(pluginConfiguration,"escapeWindowsPaths"));
    }
    return (int)crc.getValue();
  }
  finally {
    readUnlock();
  }
}
