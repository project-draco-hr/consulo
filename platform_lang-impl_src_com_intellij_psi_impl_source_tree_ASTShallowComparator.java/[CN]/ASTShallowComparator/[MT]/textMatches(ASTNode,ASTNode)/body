{
  myIndicator.checkCanceled();
  String oldText=TreeUtil.isCollapsedChameleon(oldNode) ? oldNode.getText() : null;
  String newText=TreeUtil.isCollapsedChameleon(newNode) ? newNode.getText() : null;
  if (oldText != null && newText != null)   return oldText.equals(newText) ? ThreeState.YES : ThreeState.UNSURE;
  if (oldText != null) {
    return compareTreeToText((TreeElement)newNode,oldText) ? ThreeState.YES : ThreeState.UNSURE;
  }
  if (newText != null) {
    return compareTreeToText((TreeElement)oldNode,newText) ? ThreeState.YES : ThreeState.UNSURE;
  }
  if (oldNode instanceof ForeignLeafPsiElement && newNode instanceof ForeignLeafPsiElement) {
    return oldNode.getText().equals(newNode.getText()) ? ThreeState.YES : ThreeState.NO;
  }
  if (oldNode instanceof LeafElement) {
    return ((LeafElement)oldNode).textMatches(newNode.getText()) ? ThreeState.YES : ThreeState.NO;
  }
  if (newNode instanceof LeafElement) {
    return ((LeafElement)newNode).textMatches(oldNode.getText()) ? ThreeState.YES : ThreeState.NO;
  }
  if (oldNode instanceof PsiErrorElement && newNode instanceof PsiErrorElement) {
    final PsiErrorElement e1=(PsiErrorElement)oldNode;
    final PsiErrorElement e2=(PsiErrorElement)newNode;
    if (!Comparing.equal(e1.getErrorDescription(),e2.getErrorDescription()))     return ThreeState.NO;
  }
  return ThreeState.UNSURE;
}
