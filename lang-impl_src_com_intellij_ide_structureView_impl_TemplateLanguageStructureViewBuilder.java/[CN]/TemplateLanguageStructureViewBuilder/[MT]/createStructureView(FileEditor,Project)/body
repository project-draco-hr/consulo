{
  myFileEditor=fileEditor;
  List<StructureViewComposite.StructureViewDescriptor> descriptors=new ArrayList<StructureViewComposite.StructureViewDescriptor>();
  final StructureViewComposite.StructureViewDescriptor structureViewDescriptor=createMainView(fileEditor,myMainFile);
  if (structureViewDescriptor != null)   descriptors.add(structureViewDescriptor);
  myBaseLanguageViewDescriptorIndex=-1;
  final Language dataLanguage=getViewProvider().getTemplateDataLanguage();
  updateTemplateDataFileView();
  if (myBaseStructureViewDescriptor != null) {
    descriptors.add(myBaseStructureViewDescriptor);
    myBaseLanguageViewDescriptorIndex=descriptors.size() - 1;
  }
  for (  final Language language : getViewProvider().getLanguages()) {
    if (language != dataLanguage && language != getViewProvider().getBaseLanguage()) {
      ContainerUtil.addIfNotNull(createBaseLanguageStructureView(fileEditor,language),descriptors);
    }
  }
  StructureViewComposite.StructureViewDescriptor[] array=descriptors.toArray(new StructureViewComposite.StructureViewDescriptor[descriptors.size()]);
  myStructureViewComposite=new StructureViewComposite(array){
    public void dispose(){
      removeBaseLanguageListener();
      super.dispose();
    }
  }
;
  return myStructureViewComposite;
}
