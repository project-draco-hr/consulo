{
  myPsiTreeChangeAdapter=new PsiTreeChangeAdapter(){
    public void childAdded(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childRemoved(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childReplaced(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    public void childMoved(    PsiTreeChangeEvent event){
      childrenChanged(event);
    }
    final Alarm myAlarm=new Alarm();
    public void childrenChanged(    PsiTreeChangeEvent event){
      myAlarm.cancelAllRequests();
      myAlarm.addRequest(new Runnable(){
        public void run(){
          if (myProject.isDisposed())           return;
          if (myBaseStructureViewDescriptor != null && ((StructureViewComponent)myBaseStructureViewDescriptor.structureView).getTree() == null)           return;
          if (!myVirtualFile.isValid())           return;
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            public void run(){
              Language baseLanguage=getViewProvider().getTemplateDataLanguage();
              if (baseLanguage == myTemplateDataLanguage) {
                updateBaseLanguageView();
              }
 else {
                myTemplateDataLanguage=baseLanguage;
                StructureViewWrapper structureViewWrapper=StructureViewFactoryEx.getInstanceEx(myProject).getStructureViewWrapper();
                ((StructureViewWrapperImpl)structureViewWrapper).rebuild();
                ((ProjectViewImpl)ProjectView.getInstance(myProject)).rebuildStructureViewPane();
              }
            }
          }
);
        }
      }
,300,ModalityState.NON_MODAL);
    }
  }
;
  myTemplateDataLanguage=getViewProvider().getTemplateDataLanguage();
  PsiManager.getInstance(myProject).addPsiTreeChangeListener(myPsiTreeChangeAdapter);
}
