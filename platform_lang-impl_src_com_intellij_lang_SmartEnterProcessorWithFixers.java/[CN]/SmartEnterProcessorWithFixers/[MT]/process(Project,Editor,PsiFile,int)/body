{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("codeassists.complete.statement");
  if (attempt > MAX_ATTEMPTS)   throw new TooManyAttemptsException();
  try {
    commit(editor);
    if (myFirstErrorOffset != Integer.MAX_VALUE) {
      editor.getCaretModel().moveToOffset(myFirstErrorOffset);
    }
    myFirstErrorOffset=Integer.MAX_VALUE;
    PsiElement atCaret=getStatementAtCaret(editor,file);
    if (atCaret == null) {
      return;
    }
    OrderedSet<PsiElement> queue=new OrderedSet<PsiElement>();
    collectAllElements(atCaret,queue,true);
    queue.add(atCaret);
    for (    PsiElement psiElement : queue) {
      for (      Fixer fixer : myFixers) {
        fixer.apply(editor,this,psiElement);
        if (LookupManager.getInstance(project).getActiveLookup() != null) {
          return;
        }
        if (isUncommited(project) || !psiElement.isValid()) {
          moveCaretInsideBracesIfAny(editor,file);
          process(project,editor,file,attempt + 1);
          return;
        }
      }
    }
    doEnter(atCaret,file,editor);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
