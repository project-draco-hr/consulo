{
  for (int attempt=0; attempt < 2; attempt++) {
    if (myForceCleanCaches && myScopes.isEmpty() && myFilePaths.isEmpty()) {
      buildType=BuildType.PROJECT_REBUILD;
    }
    final CompileScope compileScope=createCompilationScope(buildType,pd,myScopes,myFilePaths);
    final IncProjectBuilder builder=new IncProjectBuilder(pd,BuilderRegistry.getInstance(),myBuilderParams,cs,constantSearch);
    builder.addMessageHandler(msgHandler);
    try {
switch (buildType) {
case PROJECT_REBUILD:
        builder.build(compileScope,false,true,myForceCleanCaches);
      break;
case FORCED_COMPILATION:
    builder.build(compileScope,false,false,myForceCleanCaches);
  break;
case MAKE:
builder.build(compileScope,true,false,myForceCleanCaches);
break;
case CLEAN:
break;
}
break;
}
 catch (RebuildRequestedException e) {
if (attempt == 0) {
LOG.info(e);
myForceCleanCaches=true;
}
 else {
throw e;
}
}
}
}
