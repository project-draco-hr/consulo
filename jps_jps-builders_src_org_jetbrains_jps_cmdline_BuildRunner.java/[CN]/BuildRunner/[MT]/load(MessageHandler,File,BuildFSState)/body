{
  final JpsModel jpsModel=myModelLoader.loadModel();
  ModuleRootsIndex index=new ModuleRootsIndex(jpsModel,dataStorageRoot);
  ArtifactRootsIndex artifactRootsIndex=new ArtifactRootsIndex(jpsModel,index);
  BuildTargetsState targetsState=new BuildTargetsState(dataStorageRoot,index,artifactRootsIndex);
  ProjectTimestamps projectTimestamps=null;
  BuildDataManager dataManager=null;
  try {
    projectTimestamps=new ProjectTimestamps(dataStorageRoot,targetsState);
    dataManager=new BuildDataManager(dataStorageRoot,targetsState,STORE_TEMP_CACHES_IN_MEMORY);
    if (dataManager.versionDiffers()) {
      myForceCleanCaches=true;
      msgHandler.processMessage(new CompilerMessage("build",BuildMessage.Kind.INFO,"Dependency data format has changed, project rebuild required"));
    }
  }
 catch (  Exception e) {
    LOG.info(e);
    if (projectTimestamps != null) {
      projectTimestamps.close();
    }
    if (dataManager != null) {
      dataManager.close();
    }
    myForceCleanCaches=true;
    FileUtil.delete(dataStorageRoot);
    targetsState=new BuildTargetsState(dataStorageRoot,index,artifactRootsIndex);
    projectTimestamps=new ProjectTimestamps(dataStorageRoot,targetsState);
    dataManager=new BuildDataManager(dataStorageRoot,targetsState,STORE_TEMP_CACHES_IN_MEMORY);
    msgHandler.processMessage(new CompilerMessage("build",BuildMessage.Kind.INFO,"Project rebuild forced: " + e.getMessage()));
  }
  return new ProjectDescriptor(jpsModel,fsState,projectTimestamps,dataManager,BuildLoggingManager.DEFAULT,index,targetsState,artifactRootsIndex);
}
