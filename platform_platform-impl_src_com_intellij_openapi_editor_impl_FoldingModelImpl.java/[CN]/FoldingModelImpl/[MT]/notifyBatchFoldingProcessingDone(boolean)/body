{
  rebuild();
  for (  FoldingListener listener : myListeners) {
    listener.onFoldProcessingEnd();
  }
  myEditor.updateCaretCursor();
  myEditor.recalculateSizeAndRepaint();
  myEditor.getGutterComponentEx().updateSize();
  myEditor.getGutterComponentEx().repaint();
  myEditor.invokeDelayedErrorStripeRepaint();
  for (  Caret caret : myEditor.getCaretModel().getAllCarets()) {
    LogicalPosition caretPosition=caret.getLogicalPosition().withoutVisualPositionInfo();
    int caretOffset=myEditor.logicalPositionToOffset(caretPosition);
    int selectionStart=caret.getSelectionStart();
    int selectionEnd=caret.getSelectionEnd();
    LogicalPosition positionToUse=null;
    int offsetToUse=-1;
    FoldRegion collapsed=myFoldTree.fetchOutermost(caretOffset);
    LogicalPosition savedPosition=caret.getUserData(SAVED_CARET_POSITION);
    boolean markedForUpdate=caret.getUserData(MARK_FOR_UPDATE) != null;
    if (savedPosition != null) {
      int savedOffset=myEditor.logicalPositionToOffset(savedPosition);
      FoldRegion collapsedAtSaved=myFoldTree.fetchOutermost(savedOffset);
      if (collapsedAtSaved == null) {
        positionToUse=savedPosition;
      }
 else {
        offsetToUse=collapsedAtSaved.getStartOffset();
      }
    }
    if (collapsed != null && positionToUse == null) {
      positionToUse=myEditor.offsetToLogicalPosition(collapsed.getStartOffset());
    }
    if ((markedForUpdate || moveCaretFromCollapsedRegion) && caret.isUpToDate()) {
      if (offsetToUse >= 0) {
        caret.moveToOffset(offsetToUse);
      }
 else       if (positionToUse != null) {
        caret.moveToLogicalPosition(positionToUse);
      }
 else {
        caret.moveToLogicalPosition(caretPosition);
      }
    }
    caret.putUserData(SAVED_CARET_POSITION,savedPosition);
    caret.putUserData(MARK_FOR_UPDATE,null);
    if (isOffsetInsideCollapsedRegion(selectionStart) || isOffsetInsideCollapsedRegion(selectionEnd)) {
      caret.removeSelection();
    }
 else     if (selectionStart < myEditor.getDocument().getTextLength()) {
      caret.setSelection(selectionStart,selectionEnd);
    }
  }
  if (mySavedCaretShift > 0) {
    final ScrollingModel scrollingModel=myEditor.getScrollingModel();
    scrollingModel.disableAnimation();
    scrollingModel.scrollVertically(myEditor.visibleLineToY(myEditor.getCaretModel().getVisualPosition().line) - mySavedCaretShift);
    scrollingModel.enableAnimation();
  }
}
