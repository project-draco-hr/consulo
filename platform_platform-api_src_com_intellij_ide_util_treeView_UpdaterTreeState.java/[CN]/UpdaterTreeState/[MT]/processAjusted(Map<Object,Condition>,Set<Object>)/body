{
  final ActionCallback result=new ActionCallback();
  final Set<Object> allSelected=myUi.getSelectedElements();
  Set<Object> toSelect=new HashSet<Object>();
  for (  Object each : adjusted.keySet()) {
    if (adjusted.get(each).value(each))     continue;
    for (    final Object eachSelected : allSelected) {
      if (isParentOrSame(each,eachSelected))       continue;
      toSelect.add(each);
    }
    if (allSelected.size() == 0) {
      toSelect.add(each);
    }
  }
  final Object[] newSelection=ArrayUtil.toObjectArray(toSelect);
  if (newSelection.length > 0) {
    myUi._select(newSelection,new Runnable(){
      public void run(){
        processUnsuccessfulSelections(newSelection,new Function<Object,Object>(){
          public Object fun(          final Object o){
            addAdjustedSelection(o,adjusted.get(o));
            return null;
          }
        }
,originallySelected);
        result.setDone();
      }
    }
,true,true,true);
  }
 else {
    result.setDone();
  }
  return result;
}
