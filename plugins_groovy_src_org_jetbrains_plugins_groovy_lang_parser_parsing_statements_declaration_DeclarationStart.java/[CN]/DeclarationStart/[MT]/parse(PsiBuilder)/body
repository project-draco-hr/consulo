{
  IElementType elementType;
  if (ParserUtils.getToken(builder,kDEF))   return kDEF;
  elementType=Modifier.parse(builder);
  if (!tWRONG_SET.contains(elementType))   return elementType;
  if (ParserUtils.getToken(builder,mAT)) {
    if (!ParserUtils.getToken(builder,mIDENT,GroovyBundle.message("identifier.expected"))) {
      return WRONGWAY;
    }
    return DECLARATION_START;
  }
  if (!tWRONG_SET.contains(UpperCaseIdent.parse(builder)) || !tWRONG_SET.contains(BuiltlnType.parse(builder)) || !tWRONG_SET.contains(QualifiedTypeName.parse(builder))) {
    IElementType balancedTokens;
    do {
      balancedTokens=parseBalancedTokensInBrackets(builder);
      if (!BALANCED_TOKENS.equals(balancedTokens)) {
        return WRONGWAY;
      }
    }
 while (!tWRONG_SET.contains(balancedTokens));
    if (!ParserUtils.getToken(builder,mIDENT,GroovyBundle.message("identifier.expected"))) {
      return WRONGWAY;
    }
 else {
      return DECLARATION_START;
    }
  }
 else {
    builder.error(GroovyBundle.message("upper.case.ident.or.builtln.type.or.qualified.type.name.expected"));
    return WRONGWAY;
  }
}
