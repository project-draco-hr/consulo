{
  IElementType elementType;
  if (ParserUtils.getToken(builder,kDEF))   return parseNextTokenInDeclaration(builder);
  elementType=Modifiers.parse(builder);
  if (!WRONGWAY.equals(elementType)) {
    return parseNextTokenInDeclaration(builder);
  }
  if (ParserUtils.getToken(builder,mAT)) {
    return ParserUtils.getToken(builder,mIDENT);
  }
  if (!WRONGWAY.equals(UpperCaseIdent.parse(builder)) || !WRONGWAY.equals(BuiltInType.parse(builder)) || !WRONGWAY.equals(QualifiedTypeName.parse(builder))) {
    IElementType balancedTokens;
    do {
      balancedTokens=parseBalancedTokensInBrackets(builder);
      if (!BALANCED_TOKENS.equals(balancedTokens)) {
        return false;
      }
    }
 while (!WRONGWAY.equals(balancedTokens));
    return ParserUtils.getToken(builder,mIDENT);
  }
 else {
    return false;
  }
}
