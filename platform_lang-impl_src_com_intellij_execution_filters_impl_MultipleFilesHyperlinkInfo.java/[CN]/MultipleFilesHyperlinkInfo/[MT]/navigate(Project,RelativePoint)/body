{
  List<PsiFile> currentFiles=new ArrayList<PsiFile>();
  AccessToken accessToken=ReadAction.start();
  try {
    for (    VirtualFile file : myVirtualFiles) {
      if (!file.isValid())       continue;
      PsiFile psiFile=PsiManager.getInstance(project).findFile(file);
      if (psiFile != null) {
        PsiElement navigationElement=psiFile.getNavigationElement();
        if (navigationElement instanceof PsiFile) {
          currentFiles.add((PsiFile)navigationElement);
          continue;
        }
        currentFiles.add(psiFile);
      }
    }
  }
  finally {
    accessToken.finish();
  }
  if (currentFiles.isEmpty())   return;
  if (currentFiles.size() == 1) {
    new OpenFileHyperlinkInfo(myProject,currentFiles.get(0).getVirtualFile(),myLineNumber).navigate(project);
  }
 else {
    final JBList list=new JBList(currentFiles);
    int width=WindowManager.getInstance().getFrame(project).getSize().width;
    list.setCellRenderer(new GotoFileCellRenderer(width));
    JBPopup popup=JBPopupFactory.getInstance().createListPopupBuilder(list).setTitle("Choose Target File").setItemChoosenCallback(new Runnable(){
      @Override public void run(){
        VirtualFile file=((PsiFile)list.getSelectedValue()).getVirtualFile();
        new OpenFileHyperlinkInfo(myProject,file,myLineNumber).navigate(project);
      }
    }
).createPopup();
    if (hyperlinkLocationPoint != null) {
      popup.show(hyperlinkLocationPoint);
    }
 else {
      popup.showInFocusCenter();
    }
  }
}
