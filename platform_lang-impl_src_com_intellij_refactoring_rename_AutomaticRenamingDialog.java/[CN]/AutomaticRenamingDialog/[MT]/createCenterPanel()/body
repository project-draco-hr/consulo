{
  myTableModel=new MyTableModel();
  myTable.setModel(myTableModel);
  myTableModel.getSpaceAction().register();
  myTableModel.addTableModelListener(new TableModelListener(){
    @Override public void tableChanged(    TableModelEvent e){
      handleChanges();
    }
  }
);
  final TableColumnModel columnModel=myTable.getColumnModel();
  columnModel.getColumn(CHECK_COLUMN).setCellRenderer(new BooleanTableCellRenderer());
  final int checkBoxWidth=new JCheckBox().getPreferredSize().width;
  columnModel.getColumn(CHECK_COLUMN).setMaxWidth(checkBoxWidth);
  columnModel.getColumn(CHECK_COLUMN).setMinWidth(checkBoxWidth);
  columnModel.getColumn(NEW_NAME_COLUMN).setCellEditor(new StringTableCellEditor(myProject));
  mySelectAllButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      for (int i=0; i < myShouldRename.length; i++) {
        myShouldRename[i]=true;
      }
      fireDataChanged();
    }
  }
);
  myUnselectAllButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      for (int i=0; i < myShouldRename.length; i++) {
        myShouldRename[i]=false;
      }
      fireDataChanged();
    }
  }
);
  myListSelectionListener=new ListSelectionListener(){
    @Override public void valueChanged(    final ListSelectionEvent e){
      myUsageFileLabel.setText("");
      int index=myTable.getSelectionModel().getLeadSelectionIndex();
      if (index != -1) {
        PsiNamedElement element=myRenames[index];
        UsageInfo usageInfo=new UsageInfo(element);
        myUsagePreviewPanel.updateLayout(Collections.singletonList(usageInfo));
        final PsiFile containingFile=element.getContainingFile();
        if (containingFile != null) {
          final VirtualFile virtualFile=containingFile.getVirtualFile();
          if (virtualFile != null) {
            myUsageFileLabel.setText(virtualFile.getName());
          }
        }
      }
 else {
        myUsagePreviewPanel.updateLayout(null);
      }
    }
  }
;
  myTable.getSelectionModel().addListSelectionListener(myListSelectionListener);
  myPanelForPreview.add(myUsagePreviewPanel,BorderLayout.CENTER);
  myUsagePreviewPanel.updateLayout(null);
  myPanelForPreview.add(myUsageFileLabel,BorderLayout.NORTH);
  mySplitPane.setDividerLocation(0.5);
  GuiUtils.replaceJSplitPaneWithIDEASplitter(myPanel);
  if (myTableModel.getRowCount() != 0) {
    myTable.getSelectionModel().addSelectionInterval(0,0);
  }
  return myPanel;
}
