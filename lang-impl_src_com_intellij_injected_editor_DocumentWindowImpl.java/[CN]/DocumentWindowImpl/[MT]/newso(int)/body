{
  LOG.assertTrue(line >= 0,line);
  String hostText=myDelegate.getText();
  int curLine=0;
  int startOffset=0;
  for (  PsiLanguageInjectionHost.Shred shred : myShreds) {
    RangeMarker hostRange=shred.getHostRangeMarker();
    if (!hostRange.isValid())     continue;
    startOffset+=shred.prefix.length();
    curLine+=StringUtil.getLineBreakCount(shred.prefix);
    if (curLine >= line)     return startOffset;
    String text=hostText.substring(hostRange.getStartOffset(),hostRange.getEndOffset());
    for (int i=text.indexOf('\n'), offsetInside=0; i != -1; i=text.substring(offsetInside).indexOf('\n')) {
      curLine++;
      offsetInside+=i + 1;
      if (curLine >= line)       return startOffset + offsetInside;
    }
    startOffset+=text.length();
    text=shred.suffix;
    for (int i=text.indexOf('\n'), offsetInside=0; i != -1; i=text.substring(offsetInside).indexOf('\n')) {
      curLine++;
      offsetInside+=i + 1;
      if (curLine >= line)       return startOffset + offsetInside;
    }
    startOffset+=text.length();
  }
  return startOffset;
}
