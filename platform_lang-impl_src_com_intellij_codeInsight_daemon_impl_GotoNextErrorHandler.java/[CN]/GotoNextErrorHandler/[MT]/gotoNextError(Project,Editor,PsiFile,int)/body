{
  final SeverityRegistrar severityRegistrar=SeverityRegistrar.getInstance(project);
  List<HighlightInfo> highlights=DaemonCodeAnalyzerImpl.getHighlights(editor.getDocument(),severityRegistrar.getSeverityByIndex(0),project);
  if (highlights.isEmpty()) {
    showMessageWhenNoHighlights(project,file,editor);
    return;
  }
  DaemonCodeAnalyzerSettings settings=DaemonCodeAnalyzerSettings.getInstance();
  if (settings.NEXT_ERROR_ACTION_GOES_TO_ERRORS_FIRST) {
    for (int idx=severityRegistrar.getSeveritiesCount() - 1; idx >= 0; idx--) {
      final HighlightSeverity minSeverity=severityRegistrar.getSeverityByIndex(idx);
      List<HighlightInfo> errors=DaemonCodeAnalyzerImpl.getHighlights(editor.getDocument(),minSeverity,project);
      if (!errors.isEmpty()) {
        highlights=errors;
        break;
      }
    }
  }
  HighlightInfo infoToGo=findInfoToGo(editor,caretOffset,highlights,true);
  if (infoToGo == null) {
    infoToGo=findInfoToGo(editor,caretOffset,highlights,false);
  }
  if (infoToGo != null) {
    navigateToError(project,editor,infoToGo);
  }
}
