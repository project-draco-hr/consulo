{
  if (!element.isValid()) {
    LOG.error("Invalid element:" + element);
  }
  Reference<SmartPsiElementPointer> data=element.getUserData(CACHED_SMART_POINTER_KEY);
  SmartPsiElementPointer cachedPointer=data == null ? null : data.get();
  if (cachedPointer != null) {
    return cachedPointer;
  }
  PsiFile containingFile=element.getContainingFile();
  SmartPointerEx<E> pointer=new SmartPsiElementPointerImpl<E>(myProject,element,containingFile);
  initPointer(pointer,containingFile);
  element.putUserData(CACHED_SMART_POINTER_KEY,new SoftReference<SmartPsiElementPointer>(pointer));
  return pointer;
}
