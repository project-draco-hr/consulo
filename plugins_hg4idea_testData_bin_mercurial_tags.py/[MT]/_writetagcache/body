def _writetagcache(ui, repo, heads, tagfnode, cachetags):
    try:
        cachefile = repo.opener('tags.cache', 'w', atomictemp=True)
    except (OSError, IOError):
        return
    _debug(ui, ('writing cache file %s\n' % cachefile.name))
    realheads = repo.heads()
    for head in heads:
        assert (head in repo.changelog.nodemap), ('trying to write non-existent node %s to tag cache' % short(head))
        assert (head in realheads), ('trying to write non-head %s to tag cache' % short(head))
        assert (head != nullid), 'trying to write nullid to tag cache'
        rev = repo.changelog.rev(head)
        fnode = tagfnode.get(head)
        if fnode:
            cachefile.write(('%d %s %s\n' % (rev, hex(head), hex(fnode))))
        else:
            cachefile.write(('%d %s\n' % (rev, hex(head))))
    cachefile.write('\n')
    for (name, (node, hist)) in cachetags.iteritems():
        cachefile.write(('%s %s\n' % (hex(node), name)))
    cachefile.rename()
    cachefile.close()
