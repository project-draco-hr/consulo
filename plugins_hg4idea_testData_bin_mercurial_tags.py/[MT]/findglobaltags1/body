def findglobaltags1(ui, repo, alltags, tagtypes):
    "Find global tags in repo by reading .hgtags from every head that\n    has a distinct version of it.  Updates the dicts alltags, tagtypes\n    in place: alltags maps tag name to (node, hist) pair (see _readtags()\n    below), and tagtypes maps tag name to tag type ('global' in this\n    case)."
    seen = set()
    fctx = None
    ctxs = []
    for node in repo.heads():
        try:
            fnode = repo[node].filenode('.hgtags')
        except error.LookupError:
            continue
        if (fnode not in seen):
            seen.add(fnode)
            if (not fctx):
                fctx = repo.filectx('.hgtags', fileid=fnode)
            else:
                fctx = fctx.filectx(fnode)
            ctxs.append(fctx)
    for fctx in reversed(ctxs):
        filetags = _readtags(ui, repo, fctx.data().splitlines(), fctx)
        _updatetags(filetags, 'global', alltags, tagtypes)
