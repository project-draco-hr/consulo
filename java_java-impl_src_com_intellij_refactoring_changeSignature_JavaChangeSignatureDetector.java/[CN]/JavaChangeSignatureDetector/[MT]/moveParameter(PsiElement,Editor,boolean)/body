{
  final PsiParameter parameter=(PsiParameter)element;
  final PsiMethod method=(PsiMethod)parameter.getDeclarationScope();
  final int parameterIndex=method.getParameterList().getParameterIndex(parameter);
  new WriteCommandAction(element.getProject(),MOVE_PARAMETER){
    @Override protected void run(    Result result) throws Throwable {
      final PsiParameterList parameterList=method.getParameterList();
      final PsiParameter[] parameters=parameterList.getParameters();
      final int deltaOffset=editor.getCaretModel().getOffset() - parameter.getTextRange().getStartOffset();
      final PsiParameter frst=left ? parameters[parameterIndex - 1] : parameter;
      final PsiParameter scnd=left ? parameter : parameters[parameterIndex + 1];
      final int startOffset=frst.getTextRange().getStartOffset();
      final int endOffset=scnd.getTextRange().getEndOffset();
      final PsiFile file=method.getContainingFile();
      final Document document=PsiDocumentManager.getInstance(getProject()).getDocument(file);
      if (document != null) {
        final String comma_whitespace_between=document.getText().substring(frst.getTextRange().getEndOffset(),scnd.getTextRange().getStartOffset());
        document.replaceString(startOffset,endOffset,scnd.getText() + comma_whitespace_between + frst.getText());
        editor.getCaretModel().moveToOffset(document.getText().indexOf(parameter.getText(),startOffset) + deltaOffset);
      }
    }
  }
.execute();
}
