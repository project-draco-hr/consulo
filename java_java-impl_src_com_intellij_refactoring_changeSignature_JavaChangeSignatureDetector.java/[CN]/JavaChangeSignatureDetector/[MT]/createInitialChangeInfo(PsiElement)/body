{
  final PsiMethod method=PsiTreeUtil.getParentOfType(element,PsiMethod.class,false);
  if (method != null && isInsideMethodSignature(element,method)) {
    if (element.getTextRange().getEndOffset() <= method.getTextOffset())     return null;
    return DetectedJavaChangeInfo.createFromMethod(method);
  }
 else {
    final PsiVariable variable=PsiTreeUtil.getParentOfType(element,PsiVariable.class);
    if (variable != null && JavaRefactoringSupportProvider.mayRenameInplace(variable,element)) {
      return new RenameChangeInfo(variable,null){
        @Override public Language getLanguage(){
          return StdLanguages.JAVA;
        }
      }
;
    }
  }
  return null;
}
