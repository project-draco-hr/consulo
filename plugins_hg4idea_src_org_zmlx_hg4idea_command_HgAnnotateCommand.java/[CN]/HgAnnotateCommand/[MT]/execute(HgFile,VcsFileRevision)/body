{
  final List<String> arguments=new ArrayList<String>();
  arguments.add("-cqnudl");
  if (revision != null) {
    arguments.add("-r");
    HgRevisionNumber revisionNumber=(HgRevisionNumber)revision.getRevisionNumber();
    arguments.add(revisionNumber.getChangeset());
  }
  arguments.add(hgFile.getRelativePath());
  final HgCommandResult result=new HgCommandExecutor(project).executeInCurrentThread(hgFile.getRepo(),"annotate",arguments);
  final List<HgAnnotationLine> annotations=new ArrayList<HgAnnotationLine>();
  if (result == null) {
    return annotations;
  }
  for (  String line : result.getOutputLines()) {
    Matcher matcher=LINE_PATTERN.matcher(line);
    if (matcher.matches()) {
      String user=matcher.group(USER_GROUP);
      HgRevisionNumber rev=HgRevisionNumber.getInstance(matcher.group(REVISION_GROUP),matcher.group(CHANGESET_GROUP));
      String date=matcher.group(DATE_GROUP);
      Integer lineNumber=Integer.valueOf(matcher.group(LINE_NUMBER_GROUP));
      String content=matcher.group(CONTENT_GROUP);
      HgAnnotationLine annotationLine=new HgAnnotationLine(user,rev,date,lineNumber,content);
      annotations.add(annotationLine);
    }
  }
  return annotations;
}
