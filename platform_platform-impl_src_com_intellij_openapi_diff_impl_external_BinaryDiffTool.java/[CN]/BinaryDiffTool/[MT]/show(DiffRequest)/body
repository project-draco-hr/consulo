{
  final DiffContent current=data.getContents()[0];
  final DiffContent upToDate=data.getContents()[1];
  final Project project=data.getProject();
  if ((current instanceof FileContent && upToDate instanceof FileContent)) {
    final VirtualFile src=current.getFile();
    final VirtualFile trg=upToDate.getFile();
    if (src != null && trg != null) {
      final FileEditorProvider[] srcProvider=FileEditorProviderManager.getInstance().getProviders(project,src);
      final FileEditorProvider[] trgProvider=FileEditorProviderManager.getInstance().getProviders(project,trg);
      if (srcProvider.length > 0 && trgProvider.length > 0) {
        new DialogWrapper(project){
          public DiffPanel myPanel;
{
            setModal(false);
            init();
          }
          @Override protected String getDimensionServiceKey(){
            return "BinaryDiffDialog";
          }
          @Override protected Action[] createActions(){
            final Action close=getCancelAction();
            close.putValue(Action.NAME,"&Close");
            return new Action[]{close};
          }
          @Override protected JComponent createCenterPanel(){
            myPanel=DiffManager.getInstance().createDiffPanel(getWindow(),project,getDisposable());
            myPanel.setDiffRequest(data);
            myPanel.setTitle1(src.getPath());
            myPanel.setTitle2(trg.getPath());
            return myPanel.getComponent();
          }
        }
.show();
        return;
      }
    }
  }
  try {
    final boolean equal=Arrays.equals(current.getBytes(),upToDate.getBytes());
    Messages.showMessageDialog(equal ? DiffBundle.message("binary.files.are.identical.message") : DiffBundle.message("binary.files.are.different.message"),equal ? DiffBundle.message("files.are.identical.dialog.title") : DiffBundle.message("files.are.different.dialog.title"),Messages.getInformationIcon());
  }
 catch (  IOException e) {
    LOG.error(e);
  }
}
