{
  final Project project=getProject(e);
  if (project == null) {
    return;
  }
  final AddModuleWizard wizard=new AddModuleWizard(project,new ModulesProvider(){
    public Module[] getModules(){
      return ModuleManager.getInstance(project).getModules();
    }
    public Module getModule(    String name){
      return ModuleManager.getInstance(project).findModuleByName(name);
    }
    public ModuleRootModel getRootModel(    Module module){
      return ModuleRootManager.getInstance(module);
    }
  }
);
  wizard.show();
  if (wizard.isOK()) {
    final ModuleBuilder moduleBuilder=wizard.getModuleBuilder();
    Exception ex=ApplicationManager.getApplication().runWriteAction(new Computable<Exception>(){
      public Exception compute(){
        try {
          final ModifiableModuleModel moduleModel=ModuleManager.getInstance(project).getModifiableModel();
          final Module module=moduleBuilder.createModule(moduleModel);
          if (module != null) {
            moduleModel.commitAssertingNoCircularDependency();
          }
          return null;
        }
 catch (        Exception e) {
          return e;
        }
      }
    }
);
    if (ex != null) {
      if (ex instanceof LoadCancelledException) {
        LoadCancelledException cancelled=(LoadCancelledException)ex;
        Messages.showInfoMessage(ProjectBundle.message("module.new.creation.cancelled.message",cancelled.getIssuer().getComponentName(),cancelled.getMessage()),ProjectBundle.message("module.new.creation.cancelled.title"));
      }
 else {
        Messages.showErrorDialog(ProjectBundle.message("module.new.error.message",ex.getMessage()),ProjectBundle.message("module.new.error.title"));
      }
    }
  }
}
