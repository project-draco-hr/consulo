{
  final PsiMethod[] currentConstructors=aClass.getConstructors();
  if (currentConstructors.length == 0) {
    final PsiClass superClass=aClass.getSuperClass();
    if (hasDefaultDeprecatedConstructor(superClass)) {
      final boolean isAnonymous=aClass instanceof PsiAnonymousClass;
      registerDefaultConstructorProblem(superClass,isAnonymous ? ((PsiAnonymousClass)aClass).getBaseClassReference() : aClass.getNameIdentifier(),isAnonymous);
    }
  }
}
