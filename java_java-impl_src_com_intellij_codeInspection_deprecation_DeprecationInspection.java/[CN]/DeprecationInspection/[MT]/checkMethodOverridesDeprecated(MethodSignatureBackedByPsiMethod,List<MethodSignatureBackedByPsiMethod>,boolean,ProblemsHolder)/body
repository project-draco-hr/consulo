{
  PsiMethod method=methodSignature.getMethod();
  PsiElement methodName=method.getNameIdentifier();
  for (  MethodSignatureBackedByPsiMethod superMethodSignature : superMethodSignatures) {
    PsiMethod superMethod=superMethodSignature.getMethod();
    PsiClass aClass=superMethod.getContainingClass();
    if (aClass == null)     continue;
    if (ignoreAbstractDeprecatedOverrides && !aClass.isDeprecated() && superMethod.hasModifierProperty(PsiModifier.ABSTRACT))     continue;
    if (superMethod.isDeprecated()) {
      String description=JavaErrorMessages.message("overrides.deprecated.method",HighlightMessageUtil.getSymbolName(aClass,PsiSubstitutor.EMPTY));
      holder.registerProblem(methodName,description,ProblemHighlightType.LIKE_DEPRECATED);
    }
  }
}
