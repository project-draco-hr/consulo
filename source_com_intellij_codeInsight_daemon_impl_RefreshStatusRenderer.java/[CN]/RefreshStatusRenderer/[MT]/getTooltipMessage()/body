{
  DaemonCodeAnalyzerStatus status=getDaemonCodeAnalyzerStatus();
  if (status == null)   return null;
  String text=HTML_HEADER;
  if (status.noHighlightingRoots != null && status.noHighlightingRoots.length == status.rootsNumber) {
    text+=DaemonBundle.message("analysis.havent.been.run");
    text+=HTML_FOOTER;
    return text;
  }
 else   if (status.errorAnalyzingFinished) {
    boolean inspecting=!status.inspectionFinished;
    text+=inspecting ? DaemonBundle.message("pass.inspection") : DaemonBundle.message("analysis.completed");
    if (status.warningErrorCount == 0) {
      text+=BR;
      if (inspecting) {
        text+=DaemonBundle.message("no.errors.or.warnings.found.so.far");
      }
 else {
        text+=DaemonBundle.message("no.errors.or.warnings.found");
      }
    }
 else {
      if (status.errorCount != 0) {
        text+=BR;
        text+=DaemonBundle.message(inspecting ? "errors.count.so.far" : "errors.count",status.errorCount);
      }
      int warnings=status.warningErrorCount - status.errorCount;
      if (warnings != 0) {
        text+=BR;
        text+=DaemonBundle.message(inspecting ? "warnings.count.so.far" : "warnings.count",warnings);
      }
    }
    text+=getMessageByRoots(status.noHighlightingRoots,status.rootsNumber,"no.syntax.highlighting.performed");
    text+=getMessageByRoots(status.noInspectionRoots,status.rootsNumber,"no.inspections.performed");
    text+=HTML_FOOTER;
    return text;
  }
 else {
    return DaemonBundle.message("pass.syntax");
  }
}
