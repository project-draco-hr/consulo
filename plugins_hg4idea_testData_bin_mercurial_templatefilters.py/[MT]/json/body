def json(obj):
    if ((obj is None) or (obj is False) or (obj is True)):
        return {None: 'null', False: 'false', True: 'true', }[obj]
    elif (isinstance(obj, int) or isinstance(obj, float)):
        return str(obj)
    elif isinstance(obj, str):
        return ('"%s"' % jsonescape(obj))
    elif isinstance(obj, unicode):
        return json(obj.encode('utf-8'))
    elif hasattr(obj, 'keys'):
        out = []
        for (k, v) in obj.iteritems():
            s = ('%s: %s' % (json(k), json(v)))
            out.append(s)
        return (('{' + ', '.join(out)) + '}')
    elif hasattr(obj, '__iter__'):
        out = []
        for i in obj:
            out.append(json(i))
        return (('[' + ', '.join(out)) + ']')
    else:
        raise TypeError(('cannot encode type %s' % obj.__class__.__name__))
