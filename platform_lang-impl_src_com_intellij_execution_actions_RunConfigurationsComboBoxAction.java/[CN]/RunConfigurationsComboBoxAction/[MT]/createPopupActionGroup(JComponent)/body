{
  final DefaultActionGroup allActionsGroup=new DefaultActionGroup();
  final Project project=PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(button));
  if (project != null) {
    final RunManagerEx runManager=RunManagerEx.getInstanceEx(project);
    allActionsGroup.add(ActionManager.getInstance().getAction(IdeActions.ACTION_EDIT_RUN_CONFIGURATIONS));
    allActionsGroup.add(new SaveTemporaryAction());
    allActionsGroup.addSeparator();
    RunnerAndConfigurationSettings selected=RunManager.getInstance(project).getSelectedConfiguration();
    if (selected != null) {
      for (      ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project,selected)) {
        allActionsGroup.add(new SelectTargetAction(project,eachTarget));
      }
      allActionsGroup.addSeparator();
    }
    final ConfigurationType[] types=runManager.getConfigurationFactories();
    for (    ConfigurationType type : types) {
      final DefaultActionGroup actionGroup=new DefaultActionGroup();
      final RunnerAndConfigurationSettings[] configurations=runManager.getConfigurationSettings(type);
      ArrayList<RunnerAndConfigurationSettings> configurationSettingsList=new ArrayList<RunnerAndConfigurationSettings>();
      int i=0;
      for (      RunnerAndConfigurationSettings configuration : configurations) {
        if (configuration.isTemporary()) {
          configurationSettingsList.add(configuration);
        }
 else {
          configurationSettingsList.add(i++,configuration);
        }
      }
      for (      final RunnerAndConfigurationSettings configuration : configurationSettingsList) {
        final SelectConfigAction action=new SelectConfigAction(configuration,project);
        actionGroup.add(action);
      }
      actionGroup.add(new ShowPopupMenuAction());
      allActionsGroup.add(actionGroup);
      allActionsGroup.addSeparator();
    }
  }
  return allActionsGroup;
}
