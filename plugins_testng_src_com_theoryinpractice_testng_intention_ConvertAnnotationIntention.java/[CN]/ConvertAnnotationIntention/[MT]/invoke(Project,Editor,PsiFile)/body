{
  for (  PsiAnnotation annotation : TestNGUtil.getTestNGAnnotations(file)) {
    final PsiElement parent=annotation.getParent();
    if (parent instanceof PsiModifierList) {
      final PsiModifierListOwner element=(PsiModifierListOwner)parent.getParent();
      final PsiElementFactory factory=element.getManager().getElementFactory();
      PsiDocComment docComment=((PsiDocCommentOwner)element).getDocComment();
      if (docComment == null) {
        docComment=factory.createDocCommentFromText("/**\n */",element);
        docComment=(PsiDocComment)element.addBefore(docComment,parent);
      }
      final PsiModifierList modifierList=(PsiModifierList)parent;
      final PsiAnnotation[] annotations=modifierList.getAnnotations();
      for (      PsiAnnotation annotation1 : annotations) {
        @NonNls StringBuffer text=new StringBuffer(convertAnnotationClassToJavadocElement(annotation1.getQualifiedName()));
        PsiAnnotationParameterList list=annotation1.getParameterList();
        for (        PsiNameValuePair pair : list.getAttributes()) {
          text.append(' ');
          if (pair.getName() != null) {
            text.append(pair.getName());
          }
 else {
            text.append("value");
          }
          text.append(" = \"");
          @NonNls String parameterText=pair.getValue().getText();
          if (parameterText.startsWith("{")) {
            parameterText=parameterText.replaceAll("(\\{\\\"|\\\"\\}|\\\"\\w*\\,\\w*\\\")"," ").trim();
          }
          text.append(parameterText);
          text.append('\"');
        }
        docComment.addAfter(factory.createDocTagFromText('@' + text.toString(),element),docComment.getFirstChild());
        annotation1.delete();
      }
    }
  }
  PsiJavaFile javaFile=(PsiJavaFile)file;
  final PsiImportList importList=javaFile.getImportList();
  if (importList != null) {
    PsiImportStatement annotationsImport=importList.findOnDemandImportStatement("org.testng.annotations");
    if (annotationsImport != null) {
      annotationsImport.delete();
    }
  }
}
