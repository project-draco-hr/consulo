{
  final String type;
  try {
    type=evaluate();
  }
 catch (  ProcessCanceledException e) {
    return;
  }
catch (  EvaluateException e) {
    return;
  }
  final Project project=myElement.getProject();
  hold();
  executeWriteCommand(project,new Runnable(){
    public void run(){
      try {
        LOG.assertTrue(type != null);
        PsiElementFactory factory=myElement.getManager().getElementFactory();
        PsiParenthesizedExpression parenth=(PsiParenthesizedExpression)factory.createExpressionFromText("((" + type + ")expr)",null);
        PsiTypeCastExpression cast=(PsiTypeCastExpression)parenth.getExpression();
        cast.getOperand().replace(myElement);
        parenth=(PsiParenthesizedExpression)CodeStyleManager.getInstance(project).shortenClassReferences(parenth);
        PsiExpression expr=(PsiExpression)myElement.replace(parenth);
        TextRange range=expr.getTextRange();
        getEditor().getSelectionModel().setSelection(range.getStartOffset(),range.getEndOffset());
        getEditor().getCaretModel().moveToOffset(range.getEndOffset());
        getEditor().getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
 finally {
        release();
      }
    }
  }
);
}
