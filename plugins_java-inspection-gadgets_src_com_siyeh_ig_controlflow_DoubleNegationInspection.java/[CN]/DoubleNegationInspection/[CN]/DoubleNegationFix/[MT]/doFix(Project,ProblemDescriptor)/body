{
  final PsiElement expression=descriptor.getPsiElement();
  if (expression instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)expression;
    final PsiExpression operand=ParenthesesUtils.stripParentheses(prefixExpression.getOperand());
    replaceExpression(prefixExpression,BoolUtils.getNegatedExpressionText(operand));
  }
 else   if (expression instanceof PsiPolyadicExpression) {
    final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)expression;
    final PsiExpression[] operands=polyadicExpression.getOperands();
    final int length=operands.length;
    if (length == 2) {
      final PsiExpression firstOperand=operands[0];
      final PsiExpression secondOperand=operands[1];
      if (isNegation(firstOperand)) {
        replaceExpression(polyadicExpression,BoolUtils.getNegatedExpressionText(firstOperand) + "==" + secondOperand.getText());
      }
 else {
        replaceExpression(polyadicExpression,firstOperand.getText() + "==" + BoolUtils.getNegatedExpressionText(secondOperand));
      }
    }
 else {
      final StringBuilder newExpressionText=new StringBuilder();
      for (int i=0; i < length; i++) {
        if (i > 0) {
          if (length % 2 != 1 && i == length - 1) {
            newExpressionText.append("!=");
          }
 else {
            newExpressionText.append("==");
          }
        }
        newExpressionText.append(operands[i].getText());
      }
      replaceExpression(polyadicExpression,newExpressionText.toString());
    }
  }
}
