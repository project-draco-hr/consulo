{
  myUiSettings=uiSettings;
  myListenerList=new EventListenerList();
  IdeaLookAndFeelInfo ideaLaf=new IdeaLookAndFeelInfo();
  DarculaLookAndFeelInfo darculaLaf=new DarculaLookAndFeelInfo();
  UIManager.LookAndFeelInfo[] installedLafs=UIManager.getInstalledLookAndFeels();
  final boolean darculaAvailable=Registry.is("dark.laf.available");
  myLafs=new UIManager.LookAndFeelInfo[(darculaAvailable ? 2 : 1) + installedLafs.length];
  myLafs[0]=ideaLaf;
  if (darculaAvailable) {
    myLafs[1]=darculaLaf;
  }
  System.arraycopy(installedLafs,0,myLafs,darculaAvailable ? 2 : 1,installedLafs.length);
  Arrays.sort(myLafs,new Comparator<UIManager.LookAndFeelInfo>(){
    public int compare(    UIManager.LookAndFeelInfo obj1,    UIManager.LookAndFeelInfo obj2){
      String name1=obj1.getName();
      String name2=obj2.getName();
      return name1.compareToIgnoreCase(name2);
    }
  }
);
  myCurrentLaf=getDefaultLaf();
}
