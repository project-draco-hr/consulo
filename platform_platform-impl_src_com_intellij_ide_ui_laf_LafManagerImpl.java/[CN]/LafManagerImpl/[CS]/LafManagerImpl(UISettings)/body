{
  myUiSettings=uiSettings;
  myListenerList=new EventListenerList();
  List<UIManager.LookAndFeelInfo> lafList=ContainerUtil.newArrayList();
  if (SystemInfo.isMac) {
    lafList.add(new UIManager.LookAndFeelInfo("Default",UIManager.getSystemLookAndFeelClassName()));
  }
 else {
    lafList.add(new IdeaLookAndFeelInfo());
    if (Registry.is("intellij.laf.enabled")) {
      lafList.add(new IntelliJLookAndFeelInfo());
    }
    for (    UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {
      String name=laf.getName();
      if (!"Metal".equalsIgnoreCase(name) && !"CDE/Motif".equalsIgnoreCase(name)) {
        lafList.add(laf);
      }
    }
  }
  if (Registry.is("dark.laf.available")) {
    lafList.add(new DarculaLookAndFeelInfo());
  }
  myLaFs=lafList.toArray(new UIManager.LookAndFeelInfo[lafList.size()]);
  if (!SystemInfo.isMac) {
    Arrays.sort(myLaFs,new Comparator<UIManager.LookAndFeelInfo>(){
      public int compare(      UIManager.LookAndFeelInfo obj1,      UIManager.LookAndFeelInfo obj2){
        String name1=obj1.getName();
        String name2=obj2.getName();
        return name1.compareToIgnoreCase(name2);
      }
    }
);
  }
  myCurrentLaf=getDefaultLaf();
}
