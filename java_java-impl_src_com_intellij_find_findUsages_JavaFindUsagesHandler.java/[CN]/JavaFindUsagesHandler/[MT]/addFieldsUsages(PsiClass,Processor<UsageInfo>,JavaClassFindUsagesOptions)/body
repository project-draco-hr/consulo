{
  if (options.isIncludeInherited) {
    final PsiManager manager=aClass.getManager();
    PsiField[] fields=aClass.getAllFields();
    FieldsLoop:     for (int i=0; i < fields.length; i++) {
      final PsiField field=fields[i];
      for (int j=0; j < i; j++) {
        if (Comparing.strEqual(field.getName(),fields[j].getName()))         continue FieldsLoop;
      }
      final PsiClass fieldClass=field.getContainingClass();
      if (manager.areElementsEquivalent(fieldClass,aClass)) {
        if (!addElementUsages(fields[i],processor,options))         return false;
      }
 else {
        boolean success=ReferencesSearch.search(new ReferencesSearch.SearchParameters(field,options.searchScope,false,options.fastTrack)).forEach(new ReadActionProcessor<PsiReference>(){
          @Override public boolean processInReadAction(          final PsiReference reference){
            return addResultFromReference(reference,fieldClass,manager,aClass,processor,options);
          }
        }
);
        if (!success)         return false;
      }
    }
  }
 else {
    PsiField[] fields=ApplicationManager.getApplication().runReadAction(new Computable<PsiField[]>(){
      @Override public PsiField[] compute(){
        return aClass.getFields();
      }
    }
);
    for (    PsiField field : fields) {
      if (!addElementUsages(field,processor,options))       return false;
    }
  }
  return true;
}
