{
  if (!ParserUtils.lookAhead(builder,kFINAL) && !ParserUtils.lookAhead(builder,kDEF) && !ParserUtils.lookAhead(builder,mAT)) {
    builder.error(GroovyBundle.message("final.def.or.annotation.definition.expected"));
    return WRONGWAY;
  }
  PsiBuilder.Marker pdlMarker=builder.mark();
  if (tWRONG_SET.contains(ParameterDeclaration.parse(builder))) {
    pdlMarker.rollbackTo();
    return WRONGWAY;
  }
  while (ParserUtils.getToken(builder,mCOMMA)) {
    ParserUtils.getToken(builder,mNLS);
    if (tWRONG_SET.contains(ParameterDeclaration.parse(builder))) {
      pdlMarker.rollbackTo();
      return WRONGWAY;
    }
  }
  pdlMarker.done(PARAMETERS_LIST);
  return PARAMETERS_LIST;
}
