{
  if (ParserUtils.lookAhead(builder,mRPAREN))   return NONE;
  PsiBuilder.Marker pdlMarker=builder.mark();
  GroovyElementType result=ParameterDeclaration.parse(builder,ending);
  if (!PARAMETER.equals(result)) {
    pdlMarker.rollbackTo();
    return WRONGWAY;
  }
  while (!builder.eof() && result.equals(PARAMETER) && mCOMMA.equals(builder.getTokenType())) {
    PsiBuilder.Marker rb=builder.mark();
    ParserUtils.getToken(builder,mCOMMA);
    ParserUtils.getToken(builder,mNLS);
    result=ParameterDeclaration.parse(builder,ending);
    if (result.equals(PARAMETER)) {
      rb.drop();
    }
 else {
      rb.rollbackTo();
      if (mCOMMA.equals(builder.getTokenType())) {
        ParserUtils.getToken(builder,mCOMMA);
        builder.error(GroovyBundle.message("param.expected"));
      }
    }
  }
  if ((ending.equals(mCLOSABLE_BLOCK_OP) && mCLOSABLE_BLOCK_OP.equals(builder.getTokenType())) || ending.equals(mRPAREN)) {
    pdlMarker.done(PARAMETERS_LIST);
    return PARAMETERS_LIST;
  }
 else {
    pdlMarker.rollbackTo();
    return WRONGWAY;
  }
}
