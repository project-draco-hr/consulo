{
  TestResult testResult=super.createTestResult();
  testResult.addListener(myTestsListener);
  try {
    final Object data=Class.forName("com.intellij.rt.coverage.data.ProjectData").getMethod("getProjectData",new Class[0]).invoke(null,new Object[0]);
    if (data != null) {
      testResult.addListener(new TestListener(){
        public void addError(        final Test test,        final Throwable t){
        }
        public void addFailure(        final Test test,        final AssertionFailedError t){
        }
        public void startTest(        final Test test){
          if (JUNIT4_API != null) {
            ((com.intellij.rt.coverage.data.ProjectData)data).testStarted(JUNIT4_API.getJUnit4MethodAdapterClassName(test) + "." + JUNIT4_API.getJUnit4MethodAdapterMethodName(test));
          }
 else           if (test instanceof TestCase) {
            ((com.intellij.rt.coverage.data.ProjectData)data).testStarted(test.getClass().getName() + "." + ((TestCase)test).getName());
          }
        }
        public void endTest(        final Test test){
          if (JUNIT4_API != null) {
            ((com.intellij.rt.coverage.data.ProjectData)data).testEnded(JUNIT4_API.getJUnit4MethodAdapterClassName(test) + "." + JUNIT4_API.getJUnit4MethodAdapterMethodName(test));
          }
 else           if (test instanceof TestCase) {
            ((com.intellij.rt.coverage.data.ProjectData)data).testEnded(test.getClass().getName() + "." + ((TestCase)test).getName());
          }
        }
      }
);
    }
  }
 catch (  Throwable e) {
  }
  return testResult;
}
