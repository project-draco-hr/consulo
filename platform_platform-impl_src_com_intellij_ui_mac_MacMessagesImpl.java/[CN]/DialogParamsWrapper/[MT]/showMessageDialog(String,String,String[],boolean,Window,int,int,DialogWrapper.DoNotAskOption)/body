{
  ID pool=invoke(invoke("NSAutoreleasePool","alloc"),"init");
  try {
    final ID buttonsArray=invoke("NSMutableArray","array");
    for (    String s : buttons) {
      ID s1=nsString(UIUtil.removeMnemonic(s));
      invoke(buttonsArray,"addObject:",s1);
    }
    Map<Enum,Object> params=new HashMap<Enum,Object>();
    params.put(COMMON_DIALOG_PARAM_TYPE.title,nsString(title));
    params.put(COMMON_DIALOG_PARAM_TYPE.message,nsString(StringUtil.stripHtml(message == null ? "" : message,true).replace("%","%%")));
    params.put(COMMON_DIALOG_PARAM_TYPE.errorStyle,nsString(errorStyle ? "error" : "-1"));
    params.put(COMMON_DIALOG_PARAM_TYPE.doNotAskDialogOption1,nsString(doNotAskDialogOption == null || !doNotAskDialogOption.canBeHidden() ? "-1" : doNotAskDialogOption.getDoNotShowMessage()));
    params.put(COMMON_DIALOG_PARAM_TYPE.doNotAskDialogOption2,nsString(doNotAskDialogOption != null && !doNotAskDialogOption.isToBeShown() ? "checked" : "-1"));
    params.put(MESSAGE_DIALOG_PARAM_TYPE.defaultOptionIndex,nsString(Integer.toString(defaultOptionIndex)));
    params.put(MESSAGE_DIALOG_PARAM_TYPE.focusedOptionIndex,nsString(Integer.toString(focusedOptionIndex)));
    params.put(MESSAGE_DIALOG_PARAM_TYPE.buttonsArray,buttonsArray);
    MessageResult result=resultsFromDocumentRoot.remove(showDialog(window,"showVariableButtonsSheet:",new DialogParamsWrapper(DialogParamsWrapper.DialogType.message,params)));
    final int code=convertReturnCodeFromNativeMessageDialog(result.myReturnCode);
    final int cancelCode=buttons.length - 1;
    if (doNotAskDialogOption != null && doNotAskDialogOption.canBeHidden()) {
      if (cancelCode != code || doNotAskDialogOption.shouldSaveOptionsOnCancel()) {
        doNotAskDialogOption.setToBeShown(!result.mySuppress,code);
      }
    }
    return code;
  }
  finally {
    invoke(pool,"release");
  }
}
