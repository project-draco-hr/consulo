{
  Map<Enum,Object> params=new HashMap<Enum,Object>();
  ID pool=invoke(invoke("NSAutoreleasePool","alloc"),"init");
  try {
    params.put(COMMON_DIALOG_PARAM_TYPE.title,nsString(title));
    params.put(ALERT_DIALOG_PARAM_TYPE.defaultText,nsString(UIUtil.removeMnemonic(defaultText)));
    params.put(ALERT_DIALOG_PARAM_TYPE.alternateText,nsString(otherText == null ? "-1" : UIUtil.removeMnemonic(otherText)));
    params.put(ALERT_DIALOG_PARAM_TYPE.otherText,nsString(alternateText == null ? "-1" : UIUtil.removeMnemonic(alternateText)));
    params.put(COMMON_DIALOG_PARAM_TYPE.message,nsString(StringUtil.stripHtml(message == null ? "" : message,true).replace("%","%%")));
    params.put(COMMON_DIALOG_PARAM_TYPE.errorStyle,nsString(errorStyle ? "error" : "-1"));
    params.put(COMMON_DIALOG_PARAM_TYPE.doNotAskDialogOption1,nsString(doNotAskDialogOption == null || !doNotAskDialogOption.canBeHidden() ? "-1" : doNotAskDialogOption.getDoNotShowMessage()));
    params.put(COMMON_DIALOG_PARAM_TYPE.doNotAskDialogOption2,nsString(doNotAskDialogOption != null && !doNotAskDialogOption.isToBeShown() ? "checked" : "-1"));
    MessageResult result=resultsFromDocumentRoot.remove(showDialog(window,"showSheet:",new DialogParamsWrapper(DialogParamsWrapper.DialogType.alert,params)));
    int convertedResult=convertReturnCodeFromNativeAlertDialog(result.myReturnCode,alternateText);
    if (doNotAskDialogOption != null && doNotAskDialogOption.canBeHidden()) {
      boolean operationCanceled=convertedResult == Messages.CANCEL;
      if (!operationCanceled || doNotAskDialogOption.shouldSaveOptionsOnCancel()) {
        doNotAskDialogOption.setToBeShown(!result.mySuppress,convertedResult);
      }
    }
    return convertedResult;
  }
  finally {
    invoke(pool,"release");
  }
}
