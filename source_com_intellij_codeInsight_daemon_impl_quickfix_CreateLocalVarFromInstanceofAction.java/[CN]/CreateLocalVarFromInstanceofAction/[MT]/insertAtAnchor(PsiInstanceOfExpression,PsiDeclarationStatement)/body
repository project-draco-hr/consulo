{
  PsiElement element=instanceOfExpression.getParent();
  while (element instanceof PsiParenthesizedExpression) {
    element=element.getParent();
  }
  boolean negated=element instanceof PsiPrefixExpression && ((PsiPrefixExpression)element).getOperationSign().getTokenType() == JavaTokenType.EXCL;
  PsiStatement statement=PsiTreeUtil.getParentOfType(instanceOfExpression,PsiStatement.class);
  PsiElementFactory factory=toInsert.getManager().getElementFactory();
  PsiElement anchorAfter;
  if (statement instanceof PsiIfStatement) {
    PsiIfStatement ifStatement=(PsiIfStatement)statement;
    PsiBlockStatement codeBlockStatement=(PsiBlockStatement)factory.createStatementFromText("{}",ifStatement);
    if (negated) {
      PsiStatement elseBranch=ifStatement.getElseBranch();
      if (elseBranch == null) {
        anchorAfter=ifStatement;
      }
 else       if (!(elseBranch instanceof PsiBlockStatement)) {
        codeBlockStatement.add(elseBranch);
        PsiBlockStatement newBranch=(PsiBlockStatement)elseBranch.replace(codeBlockStatement);
        anchorAfter=newBranch.getCodeBlock().getLBrace();
      }
 else {
        anchorAfter=((PsiBlockStatement)elseBranch).getCodeBlock().getLBrace();
      }
    }
 else {
      PsiStatement thenBranch=ifStatement.getThenBranch();
      if (thenBranch == null) {
        ifStatement.setThenBranch(codeBlockStatement);
        anchorAfter=((PsiBlockStatement)ifStatement.getThenBranch()).getCodeBlock().getLBrace();
      }
 else       if (!(thenBranch instanceof PsiBlockStatement)) {
        codeBlockStatement.add(thenBranch);
        PsiBlockStatement newBranch=(PsiBlockStatement)thenBranch.replace(codeBlockStatement);
        anchorAfter=newBranch.getCodeBlock().getLBrace();
      }
 else {
        anchorAfter=((PsiBlockStatement)thenBranch).getCodeBlock().getLBrace();
      }
    }
    return (PsiDeclarationStatement)anchorAfter.getParent().addAfter(toInsert,anchorAfter);
  }
  return null;
}
