{
  if (args.length != 2) {
    System.err.println("Invalid amount of arguments: " + Arrays.asList(args));
    System.exit(ERROR_EXIT_CODE);
  }
  int port;
  try {
    port=Integer.parseInt(args[0]);
  }
 catch (  NumberFormatException ex) {
    System.err.println("Invalid port number: " + args[0]);
    System.exit(ERROR_EXIT_CODE);
    return;
  }
  final String handlerValue=System.getenv(IDEA_REBASE_HANDER_NO);
  if (handlerValue == null) {
    System.err.println("Handler no is not specified");
    System.exit(ERROR_EXIT_CODE);
  }
  int handler;
  try {
    handler=Integer.parseInt(handlerValue);
  }
 catch (  NumberFormatException ex) {
    System.err.println("Invalid handler number: " + handlerValue);
    System.exit(ERROR_EXIT_CODE);
    return;
  }
  String file=args[1];
  try {
    XmlRpcClientLite client=new XmlRpcClientLite(InetAddress.getLocalHost().getHostName(),port);
    Vector<Object> params=new Vector<Object>();
    params.add(handler);
    if (System.getProperty("os.name").toLowerCase().startsWith("windows") && file.startsWith(CYGDRIVE_PREFIX)) {
      int p=CYGDRIVE_PREFIX.length();
      file=file.substring(p,p + 1) + ":" + file.substring(p + 1);
    }
    params.add(new File(file).getAbsolutePath());
    Integer exitCode=(Integer)client.execute(HANDLER_NAME + ".editCommits",params);
    if (exitCode == null) {
      exitCode=ERROR_EXIT_CODE;
    }
    System.exit(exitCode.intValue());
  }
 catch (  Exception e) {
    System.err.println("Unable to contact IDEA: " + e);
    e.printStackTrace();
    System.exit(ERROR_EXIT_CODE);
  }
}
