{
  final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)descriptor.getPsiElement();
  PsiExpression operand=binaryExpression.getLOperand();
  if (!(operand instanceof PsiMethodCallExpression)) {
    operand=binaryExpression.getROperand();
  }
  if (!(operand instanceof PsiMethodCallExpression)) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)operand;
  final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
  final PsiExpression qualifierExpression=methodExpression.getQualifierExpression();
  if (qualifierExpression == null) {
    return;
  }
  @NonNls String newExpression=qualifierExpression.getText();
  final PsiJavaToken sign=binaryExpression.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  if (!JavaTokenType.EQEQ.equals(tokenType)) {
    newExpression='!' + newExpression;
  }
  newExpression+=".isEmpty()";
  replaceExpression(binaryExpression,newExpression);
}
