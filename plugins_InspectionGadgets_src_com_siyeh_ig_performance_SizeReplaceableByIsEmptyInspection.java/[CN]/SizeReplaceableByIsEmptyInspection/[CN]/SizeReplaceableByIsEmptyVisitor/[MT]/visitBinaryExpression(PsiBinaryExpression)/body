{
  super.visitBinaryExpression(expression);
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return;
  }
  if (!ComparisonUtils.isComparison(expression)) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  if (lhs instanceof PsiMethodCallExpression) {
    if (canBeReplacedByIsEmpty(lhs,rhs,false,expression.getOperationTokenType())) {
      registerError(expression,isEmptyCall);
    }
  }
 else   if (rhs instanceof PsiMethodCallExpression) {
    if (canBeReplacedByIsEmpty(rhs,lhs,true,expression.getOperationTokenType())) {
      registerError(expression,isEmptyCall);
    }
  }
}
