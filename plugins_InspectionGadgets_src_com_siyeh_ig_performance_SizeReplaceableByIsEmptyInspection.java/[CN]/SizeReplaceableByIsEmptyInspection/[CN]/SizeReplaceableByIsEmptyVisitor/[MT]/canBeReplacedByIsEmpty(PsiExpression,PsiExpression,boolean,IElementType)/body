{
  final PsiMethodCallExpression callExpression=(PsiMethodCallExpression)lhs;
  if (!isSizeCall(callExpression)) {
    return false;
  }
  final Object object=ExpressionUtils.computeConstantExpression(rhs);
  if (!(object instanceof Integer)) {
    return false;
  }
  final Integer integer=(Integer)object;
  final int constant=integer.intValue();
  if (constant != 0) {
    return false;
  }
  if (JavaTokenType.EQEQ.equals(tokenType)) {
    return true;
  }
  if (ignoreNegations) {
    return false;
  }
  isEmptyCall='!' + isEmptyCall;
  if (JavaTokenType.NE.equals(tokenType)) {
    return true;
  }
 else   if (flipped) {
    if (JavaTokenType.LT.equals(tokenType)) {
      return true;
    }
  }
 else   if (JavaTokenType.GT.equals(tokenType)) {
    return true;
  }
  return false;
}
