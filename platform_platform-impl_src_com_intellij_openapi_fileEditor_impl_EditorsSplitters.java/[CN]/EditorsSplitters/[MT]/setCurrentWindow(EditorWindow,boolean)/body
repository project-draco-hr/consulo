{
  final EditorWithProviderComposite oldEditor=myCurrentSelectedEditor;
  final EditorWithProviderComposite newEditor=window != null ? window.getSelectedEditor() : null;
  Runnable fireRunnable=new Runnable(){
    public void run(){
      getManager().fireSelectionChanged(oldEditor,newEditor);
    }
  }
;
  setCurrentWindow(window);
  myCurrentSelectedEditor=newEditor;
  getManager().updateFileName(window == null ? null : window.getSelectedFile());
  if (window != null) {
    final EditorWithProviderComposite selectedEditor=myCurrentWindow.getSelectedEditor();
    if (selectedEditor != null) {
      boolean alreadyFocused=false;
      final JComponent comp=selectedEditor.getComponent();
      final Component owner=KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
      if (owner != null && comp != null) {
        alreadyFocused=owner == comp || SwingUtilities.isDescendingFrom(owner,comp);
      }
      if (requestFocus && !alreadyFocused) {
        IdeFocusManager.getInstance(myManager.getProject()).requestFocus(comp,requestFocus).doWhenDone(fireRunnable);
      }
 else {
        fireRunnable.run();
      }
    }
  }
 else {
    fireRunnable.run();
  }
}
