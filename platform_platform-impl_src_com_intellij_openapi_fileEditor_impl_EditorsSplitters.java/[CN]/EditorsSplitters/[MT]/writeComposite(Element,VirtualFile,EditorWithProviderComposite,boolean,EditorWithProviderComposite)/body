{
  final FileEditor[] editors=composite.getEditors();
  final Element fileElement=new Element("file");
  fileElement.setAttribute("leaf-file-name",file.getName());
  final FileEditorState[] states=new FileEditorState[editors.length];
  for (int j=0; j < states.length; j++) {
    states[j]=editors[j].getState(FileEditorStateLevel.FULL);
    LOG.assertTrue(states[j] != null);
  }
  final int selectedProviderIndex=ArrayUtil.find(editors,composite.getSelectedEditor());
  LOG.assertTrue(selectedProviderIndex != -1);
  final FileEditorProvider[] providers=composite.getProviders();
  final HistoryEntry entry=new HistoryEntry(file,providers,states,providers[selectedProviderIndex]);
  entry.writeExternal(fileElement,getManager().getProject());
  fileElement.setAttribute("pinned",Boolean.toString(pinned));
  fileElement.setAttribute("current",Boolean.toString(composite.equals(getManager().getLastSelected())));
  fileElement.setAttribute("current-in-tab",Boolean.toString(composite.equals(selectedEditor)));
  res.addContent(fileElement);
}
