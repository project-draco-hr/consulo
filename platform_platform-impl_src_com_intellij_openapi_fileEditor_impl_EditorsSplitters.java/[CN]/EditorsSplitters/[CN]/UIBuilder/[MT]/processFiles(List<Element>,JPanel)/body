{
  final Ref<EditorWindow> windowRef=new Ref<>();
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      windowRef.set(context == null ? createEditorWindow() : findWindowWith(context));
    }
  }
);
  final EditorWindow window=windowRef.get();
  LOG.assertTrue(window != null);
  VirtualFile focusedFile=null;
  for (int i=0; i < fileElements.size(); i++) {
    final Element file=fileElements.get(i);
    if (i == 0) {
      EditorTabbedContainer tabbedPane=window.getTabbedPane();
      if (tabbedPane != null) {
        try {
          int limit=Integer.parseInt(file.getParentElement().getAttributeValue(JBTabsImpl.SIDE_TABS_SIZE_LIMIT_KEY.toString(),String.valueOf(JBTabsImpl.DEFAULT_MAX_TAB_WIDTH)));
          UIUtil.putClientProperty(tabbedPane.getComponent(),JBTabsImpl.SIDE_TABS_SIZE_LIMIT_KEY,limit);
        }
 catch (        NumberFormatException e) {
        }
      }
    }
    try {
      final FileEditorManagerImpl fileEditorManager=getManager();
      Element historyElement=file.getChild(HistoryEntry.TAG);
      final HistoryEntry entry=HistoryEntry.createLight(fileEditorManager.getProject(),historyElement);
      final VirtualFile virtualFile=entry.getFile();
      if (virtualFile == null)       throw new InvalidDataException("No file exists: " + entry.getFilePointer().getUrl());
      Document document=ApplicationManager.getApplication().runReadAction(new Computable<Document>(){
        @Override public Document compute(){
          return virtualFile.isValid() ? FileDocumentManager.getInstance().getDocument(virtualFile) : null;
        }
      }
);
      final boolean isCurrentInTab=Boolean.valueOf(file.getAttributeValue(CURRENT_IN_TAB)).booleanValue();
      Boolean pin=Boolean.valueOf(file.getAttributeValue(PINNED));
      fileEditorManager.openFileImpl4(window,virtualFile,entry,isCurrentInTab,isCurrentInTab,pin,i);
      if (isCurrentInTab) {
        focusedFile=virtualFile;
      }
      if (document != null) {
        document.putUserData(DUMMY_KEY,null);
      }
      updateProgress();
    }
 catch (    InvalidDataException e) {
      if (ApplicationManager.getApplication().isUnitTestMode()) {
        LOG.error(e);
      }
    }
  }
  if (focusedFile != null) {
    getManager().addSelectionRecord(focusedFile,window);
  }
  return window.myPanel;
}
