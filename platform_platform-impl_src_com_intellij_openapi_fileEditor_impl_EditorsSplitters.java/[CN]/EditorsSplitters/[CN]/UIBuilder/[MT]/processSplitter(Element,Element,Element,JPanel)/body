{
  if (context == null) {
    final boolean orientation="vertical".equals(splitterElement.getAttributeValue("split-orientation"));
    final float proportion=Float.valueOf(splitterElement.getAttributeValue("split-proportion")).floatValue();
    final JPanel firstComponent=process(firstChild,null);
    final JPanel secondComponent=process(secondChild,null);
    final Ref<JPanel> panelRef=new Ref<JPanel>();
    UIUtil.invokeAndWaitIfNeeded(new Runnable(){
      @Override public void run(){
        JPanel panel=new JPanel(new BorderLayout());
        panel.setOpaque(false);
        Splitter splitter=new Splitter(orientation,proportion,0.1f,0.9f);
        panel.add(splitter,BorderLayout.CENTER);
        splitter.setFirstComponent(firstComponent);
        splitter.setSecondComponent(secondComponent);
        panelRef.set(panel);
      }
    }
);
    return panelRef.get();
  }
  final Ref<JPanel> firstComponent=new Ref<JPanel>();
  final Ref<JPanel> secondComponent=new Ref<JPanel>();
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      if (context.getComponent(0) instanceof Splitter) {
        Splitter splitter=(Splitter)context.getComponent(0);
        firstComponent.set((JPanel)splitter.getFirstComponent());
        secondComponent.set((JPanel)splitter.getSecondComponent());
      }
 else {
        firstComponent.set(context);
        secondComponent.set(context);
      }
    }
  }
);
  process(firstChild,firstComponent.get());
  process(secondChild,secondComponent.get());
  return context;
}
