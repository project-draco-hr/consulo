{
  TemplateTextLexer lexer=new TemplateTextLexer();
  char[] chars=CharArrayUtil.fromSequence(text);
  lexer.start(chars,0,text.length());
  while (true) {
    IElementType tokenType=lexer.getTokenType();
    if (tokenType == null)     break;
    int start=lexer.getTokenStart();
    int end=lexer.getTokenEnd();
    String token=text.subSequence(start,end).toString();
    if (tokenType == TemplateTokenType.VARIABLE) {
      String name=token.substring(1,token.length() - 1);
      boolean isFound=false;
      if (predefinedVars != null && predefinedVars.contains(name) && !name.equals(TemplateImpl.SELECTION)) {
        isFound=true;
      }
 else {
        for (        Object variable1 : variables) {
          Variable variable=(Variable)variable1;
          if (variable.getName().equals(name)) {
            isFound=true;
            break;
          }
        }
      }
      if (!isFound) {
        variables.add(new Variable(name,"","",true));
      }
    }
    lexer.advance();
  }
}
