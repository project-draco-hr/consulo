{
  try {
    for (int idx=0; idx < myElementsToMove.length; idx++) {
      PsiElement element=myElementsToMove[idx];
      final RefactoringElementListener elementListener=getTransaction().getElementListener(element);
      if (element instanceof PsiDirectory) {
        element=MoveFilesOrDirectoriesUtil.doMoveDirectory((PsiDirectory)element,myNewParent);
      }
 else       if (element instanceof PsiFile) {
        element=MoveFilesOrDirectoriesUtil.doMoveFile((PsiFile)element,myNewParent);
      }
      elementListener.elementMoved(element);
      myElementsToMove[idx]=element;
    }
    myUsagesAfterRefactoring=usages;
    if (myMoveCallback != null) {
      myMoveCallback.refactoringCompleted();
    }
  }
 catch (  IncorrectOperationException e) {
    final String message=e.getMessage();
    final int index=(message != null) ? message.indexOf("java.io.IOException") : -1;
    if (index >= 0) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          Messages.showMessageDialog(myProject,message.substring(index + "java.io.IOException".length()),"Error",Messages.getErrorIcon());
        }
      }
);
    }
 else {
      LOG.error(e);
    }
  }
}
