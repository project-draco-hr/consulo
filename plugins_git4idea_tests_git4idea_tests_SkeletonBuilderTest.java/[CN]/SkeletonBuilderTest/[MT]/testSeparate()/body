{
  final List<CommitHashPlusParents> list=read("1\n2\n3\n4\n5");
  final TreeNavigationImpl navigation=new TreeNavigationImpl(2,2);
  final SkeletonBuilder builder=new SkeletonBuilder(navigation);
  final ReadonlyList.ArrayListWrapper<CommitI> commits=new ReadonlyList.ArrayListWrapper<CommitI>();
  fillData(list,navigation,builder,commits);
  for (int i=0; i < 5; i++) {
    final CommitI commitI=(CommitI)commits.get(i);
    Assert.assertEquals("" + (i + 1),commitI.getHash().getString());
    Assert.assertEquals(0,commitI.getWireNumber());
  }
  final Iterator<WireEvent> iterator=navigation.createWireEventsIterator(0);
  for (int i=0; i < 5; i++) {
    final WireEvent we=iterator.next();
    Assert.assertEquals(true,we.isEnd());
    Assert.assertEquals(true,we.isStart());
    Assert.assertEquals(i,we.getCommitIdx());
  }
  assertWires(navigation.getUsedWires(0,commits,builder.getFutureConvertor()).getUsed());
  assertWires(navigation.getUsedWires(1,commits,builder.getFutureConvertor()).getUsed());
  assertWires(navigation.getUsedWires(2,commits,builder.getFutureConvertor()).getUsed());
  assertWires(navigation.getUsedWires(3,commits,builder.getFutureConvertor()).getUsed());
  assertWires(navigation.getUsedWires(4,commits,builder.getFutureConvertor()).getUsed());
  final Iterator<WireEvent> iterator2=navigation.createWireEventsIterator(4);
  for (int i=4; i < 5; i++) {
    final WireEvent we=iterator2.next();
    Assert.assertEquals(true,we.isEnd());
    Assert.assertEquals(true,we.isStart());
    Assert.assertEquals(i,we.getCommitIdx());
  }
  final Iterator<WireEvent> iterator3=navigation.createWireEventsIterator(2);
  for (int i=2; i < 5; i++) {
    final WireEvent we=iterator3.next();
    Assert.assertEquals(true,we.isEnd());
    Assert.assertEquals(true,we.isStart());
    Assert.assertEquals(i,we.getCommitIdx());
  }
}
