{
  final BigTableTableModel model=new BigTableTableModel(Collections.<ColumnInfo>emptyList(),EmptyRunnable.getInstance());
  model.setCommitIdxInterval(2);
  model.setNumEventsInGroup(2);
  final VirtualFile[] arr=new VirtualFile[]{new MyVf(),new MyVf()};
  model.setRootsHolder(new RootsHolder(Arrays.asList(arr)));
  model.clear(true);
  final List<List<AbstractHash>> parentsOne=new ArrayList<List<AbstractHash>>();
  final List<List<AbstractHash>> parentsTwo=new ArrayList<List<AbstractHash>>();
  final List<CommitI> one=new ArrayList<CommitI>(2);
  final List<CommitI> two=new ArrayList<CommitI>(2);
  CommitI first=new MultipleRepositoryCommitDecorator(new Commit("1",1,new Ref<Integer>(-1)),0);
  one.add(first);
  CommitI second=new MultipleRepositoryCommitDecorator(new Commit("0",2,new Ref<Integer>(-1)),1);
  two.add(second);
  parentsOne.add(Collections.singletonList(AbstractHash.create("2")));
  parentsTwo.add(Collections.singletonList(AbstractHash.create("1")));
  model.setStrategy(new CommitGroupingStrategy(){
    @Override public String getGroupName(    CommitI commit){
      if ("1".equals(commit.getHash().toString()))       return "Header 1";
      return "Header 2";
    }
    @Override public void beforeStart(){
    }
  }
);
  model.appendData(one,parentsOne);
  model.appendData(two,parentsTwo);
  System.out.println("2");
}
