{
  final List<CommitHashPlusParents> list=read("1 2\n2 3\n3 4\n4 5\n5");
  final TreeNavigationImpl navigation=new TreeNavigationImpl(2,2);
  final SkeletonBuilder builder=new SkeletonBuilder(navigation);
  final ReadonlyList.ArrayListWrapper<CommitI> commits=new ReadonlyList.ArrayListWrapper<CommitI>();
  fillData(list,navigation,builder,commits);
  for (int i=0; i < 5; i++) {
    final CommitI commitI=(CommitI)commits.get(i);
    Assert.assertEquals("" + (i + 1),commitI.getHash().getString());
    Assert.assertEquals(0,commitI.getWireNumber());
  }
  final Iterator<WireEvent> iterator=navigation.createWireEventsIterator(0);
  WireEventI we=iterator.next();
  Assert.assertEquals(true,we.isStart());
  Assert.assertEquals(0,we.getCommitIdx());
  we=iterator.next();
  Assert.assertEquals(true,we.isEnd());
  Assert.assertEquals(4,we.getCommitIdx());
  assertWires(navigation.getUsedWires(0,commits,builder.getFutureConvertor()).getUsed());
  assertWires(navigation.getUsedWires(1,commits,builder.getFutureConvertor()).getUsed(),0);
  assertWires(navigation.getUsedWires(2,commits,builder.getFutureConvertor()).getUsed(),0);
  assertWires(navigation.getUsedWires(3,commits,builder.getFutureConvertor()).getUsed(),0);
  assertWires(navigation.getUsedWires(4,commits,builder.getFutureConvertor()).getUsed(),0);
  final Iterator<WireEvent> iterator1=navigation.createWireEventsIterator(4);
  WireEventI we1=iterator1.next();
  Assert.assertEquals(true,we1.isEnd());
  Assert.assertEquals(4,we1.getCommitIdx());
}
