{
  final List<CommitHashPlusParents> list=read("1 2\n2 3 4\n3 5\n4 6\n5 7\n6 8\n7 8\n8 9\n9");
  final SkeletonBuilder builder=new SkeletonBuilder(2,2);
  for (  CommitHashPlusParents commitHashPlusParents : list) {
    builder.accept(commitHashPlusParents);
  }
  builder.finished();
  final TreeSkeleton result=builder.getResult();
  final int[] expectedWireNumbers={0,0,0,1,0,1,0,1,1};
  for (int i=0; i < 5; i++) {
    final TreeSkeletonImpl.Commit commit=result.getCommitAt(i);
    Assert.assertEquals("" + (i + 1),new String(commit.getHash()));
    Assert.assertEquals(expectedWireNumbers[i],commit.getWireNumber());
  }
  final Iterator<TreeSkeletonImpl.WireEvent> iterator=result.createWireEventsIterator(0);
  TreeSkeletonImpl.WireEvent we=iterator.next();
  Assert.assertEquals(true,we.isStart());
  Assert.assertEquals(0,we.getCommitIdx());
  we=iterator.next();
  final int[] commitsStarts=we.getCommitsStarts();
  Assert.assertEquals(2,commitsStarts.length);
  Assert.assertEquals(2,commitsStarts[0]);
  Assert.assertEquals(3,commitsStarts[1]);
  Assert.assertNull(we.getWireEnds());
  Assert.assertEquals(1,we.getCommitIdx());
  we=iterator.next();
  Assert.assertEquals(6,we.getWireEnds()[0]);
  Assert.assertEquals(7,we.getCommitIdx());
  final int[] commitsEnds=we.getCommitsEnds();
  Assert.assertEquals(2,commitsEnds.length);
  Assert.assertEquals(5,commitsEnds[0]);
  Assert.assertEquals(6,commitsEnds[1]);
  we=iterator.next();
  Assert.assertEquals(true,we.isEnd());
  Assert.assertEquals(8,we.getCommitIdx());
}
