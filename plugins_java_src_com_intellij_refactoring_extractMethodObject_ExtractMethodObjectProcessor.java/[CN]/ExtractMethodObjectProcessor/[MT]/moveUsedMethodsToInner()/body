{
  if (!myUsages.isEmpty()) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      for (      MethodToMoveUsageInfo usage : myUsages) {
        final PsiMember member=(PsiMember)usage.getElement();
        LOG.assertTrue(member != null);
        myInnerClass.add(member.copy());
        member.delete();
      }
      return;
    }
    final List<MemberInfo> memberInfos=new ArrayList<MemberInfo>();
    for (    MethodToMoveUsageInfo usage : myUsages) {
      memberInfos.add(new MemberInfo((PsiMethod)usage.getElement()));
    }
    final MemberSelectionPanel panel=new MemberSelectionPanel("&Methods to move to the extracted class",memberInfos,null);
    DialogWrapper dlg=new DialogWrapper(myProject,false){
{
        init();
        setTitle("Move Methods Used in Extracted Block Only");
      }
      @Override protected JComponent createCenterPanel(){
        return panel;
      }
    }
;
    dlg.show();
    if (dlg.isOK()) {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          for (          MemberInfoBase<PsiMember> memberInfo : panel.getTable().getSelectedMemberInfos()) {
            if (memberInfo.isChecked()) {
              myInnerClass.add(memberInfo.getMember().copy());
              memberInfo.getMember().delete();
            }
          }
        }
      }
);
    }
  }
}
