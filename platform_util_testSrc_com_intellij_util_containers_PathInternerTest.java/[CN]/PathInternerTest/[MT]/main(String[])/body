{
  final HashSet<String> hs=new HashSet<String>();
  FileUtil.processFilesRecursively(new File(PathManager.getHomePath()),new Processor<File>(){
    @Override public boolean process(    File file){
      hs.add(file.getPath());
      return true;
    }
  }
);
  THashSet<String> thm=new THashSet<String>();
  PathInterner.PathEnumerator interner=new PathInterner.PathEnumerator();
  for (  String s : hs) {
    thm.add(s);
    if (!thm.contains(s)) {
      throw new AssertionError();
    }
    interner.addPath(s);
    if (!interner.containsPath(s)) {
      throw new AssertionError(s);
    }
  }
  System.out.println("Map collected, press when ready");
  BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));
  reader.readLine();
  System.out.println("Filling THashSet...");
  long start=System.currentTimeMillis();
  checkTrove(hs,thm);
  System.out.println("done " + (System.currentTimeMillis() - start));
  System.out.println("Filling PathInterner...");
  start=System.currentTimeMillis();
  checkInterner(hs,interner);
  System.out.println("done " + (System.currentTimeMillis() - start));
  hs.clear();
  System.out.println("press when ready");
  reader.readLine();
  System.out.println("interner.hashCode() = " + interner.hashCode());
  System.out.println("thm.hashCode() = " + thm.hashCode());
}
