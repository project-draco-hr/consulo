{
  final String genModuleName=getGenModuleName(libModule);
  final ModuleManager moduleManager=ModuleManager.getInstance(libModule.getProject());
  final Module genModule=moduleManager.findModuleByName(genModuleName);
  if (genModule == null) {
    return;
  }
  final ModifiableRootModel model=ModuleRootManager.getInstance(libModule).getModifiableModel();
  for (  OrderEntry entry : model.getOrderEntries()) {
    if (entry instanceof ModuleOrderEntry && genModuleName.equals(((ModuleOrderEntry)entry).getModuleName())) {
      model.removeOrderEntry(entry);
    }
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      model.commit();
    }
  }
);
  final VirtualFile moduleFile=genModule.getModuleFile();
  moduleManager.disposeModule(genModule);
  if (moduleFile != null) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          @Override public void run(){
            try {
              moduleFile.delete(libModule.getProject());
            }
 catch (            IOException e) {
              LOG.error(e);
            }
          }
        }
);
      }
    }
);
  }
}
