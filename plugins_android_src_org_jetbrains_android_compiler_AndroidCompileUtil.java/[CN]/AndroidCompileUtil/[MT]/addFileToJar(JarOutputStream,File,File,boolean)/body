{
  if (file.isDirectory()) {
    final File[] children=file.listFiles();
    if (children != null) {
      for (      File child : children) {
        addFileToJar(jar,child,rootDirectory,packRClasses);
      }
    }
  }
 else   if (file.isFile()) {
    if (!FileUtil.getExtension(file.getName()).equals("class")) {
      return;
    }
    if (!packRClasses && R_PATTERN.matcher(file.getName()).matches()) {
      return;
    }
    final String rootPath=rootDirectory.getAbsolutePath();
    String path=file.getAbsolutePath();
    path=FileUtil.toSystemIndependentName(path.substring(rootPath.length()));
    if (path.charAt(0) == '/') {
      path=path.substring(1);
    }
    final JarEntry entry=new JarEntry(path);
    entry.setTime(file.lastModified());
    jar.putNextEntry(entry);
    BufferedInputStream bis=new BufferedInputStream(new FileInputStream(file));
    try {
      final byte[] buffer=new byte[1024];
      int count;
      while ((count=bis.read(buffer)) != -1) {
        jar.write(buffer,0,count);
      }
      jar.closeEntry();
    }
  finally {
      bis.close();
    }
  }
}
