{
  final Project project=module.getProject();
  final CompilerProjectExtension extension=CompilerProjectExtension.getInstance(project);
  if (extension == null) {
    if (context != null) {
      context.addMessage(CompilerMessageCategory.ERROR,"Cannot get compiler settings for project " + project.getName(),null,-1,-1);
    }
    return null;
  }
  final String projectOutputDirUrl=extension.getCompilerOutputUrl();
  if (projectOutputDirUrl == null) {
    if (context != null) {
      context.addMessage(CompilerMessageCategory.ERROR,"Cannot find output directory for project " + project.getName(),null,-1,-1);
    }
    return null;
  }
  final String pngCacheDirPath=VfsUtil.urlToPath(projectOutputDirUrl) + '/' + RESOURCES_CACHE_DIR_NAME+ '/'+ module.getName();
  final String pngCacheDirOsPath=FileUtil.toSystemDependentName(pngCacheDirPath);
  final File pngCacheDir=new File(pngCacheDirOsPath);
  if (pngCacheDir.exists()) {
    if (pngCacheDir.isDirectory()) {
      return pngCacheDirOsPath;
    }
 else {
      if (context != null) {
        context.addMessage(CompilerMessageCategory.ERROR,"Cannot create directory " + pngCacheDirOsPath + " because file already exists",null,-1,-1);
      }
      return null;
    }
  }
  if (!createIfNotFound) {
    return null;
  }
  if (!pngCacheDir.mkdirs()) {
    if (context != null) {
      context.addMessage(CompilerMessageCategory.ERROR,"Cannot create directory " + pngCacheDirOsPath,null,-1,-1);
    }
    return null;
  }
  return pngCacheDirOsPath;
}
