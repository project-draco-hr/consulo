{
  final LocalResourceManager manager=facet.getLocalResourceManager();
  for (  final String resType : ResourceType.getNames()) {
    for (    final ResourceElement element : manager.getValueResources(resType)) {
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        @Override public void run(){
          if (facet.getModule().isDisposed() || facet.getModule().getProject().isDisposed()) {
            return;
          }
          final String name=element.getName().getValue();
          if (name != null) {
            resourceSet.add(new ResourceEntry(resType,name));
          }
        }
      }
);
    }
  }
  for (  Resources resources : manager.getResourceElements()) {
    for (    final Attr attr : resources.getAttrs()) {
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        @Override public void run(){
          if (facet.getModule().isDisposed() || facet.getModule().getProject().isDisposed()) {
            return;
          }
          final String name=attr.getName().getValue();
          if (name != null) {
            resourceSet.add(new ResourceEntry(ResourceType.ATTR.getName(),name));
          }
        }
      }
);
    }
    for (    final DeclareStyleable styleable : resources.getDeclareStyleables()) {
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        @Override public void run(){
          if (facet.getModule().isDisposed() || facet.getModule().getProject().isDisposed()) {
            return;
          }
          final String name=styleable.getName().getValue();
          if (name != null) {
            resourceSet.add(new ResourceEntry(ResourceType.DECLARE_STYLEABLE.getName(),name));
          }
        }
      }
);
    }
  }
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    @Override public void run(){
      if (facet.getModule().isDisposed() || facet.getModule().getProject().isDisposed()) {
        return;
      }
      for (      String id : manager.getIds()) {
        resourceSet.add(new ResourceEntry(ResourceType.ID.getName(),id));
      }
    }
  }
);
  final HashSet<VirtualFile> visited=new HashSet<VirtualFile>();
  for (  VirtualFile subdir : manager.getResourceSubdirs(null)) {
    final HashSet<VirtualFile> resourceFiles=new HashSet<VirtualFile>();
    AndroidUtils.collectFiles(subdir,visited,resourceFiles);
    for (    VirtualFile file : resourceFiles) {
      resourceSet.add(new ResourceEntry(subdir.getName(),file.getName()));
    }
  }
}
