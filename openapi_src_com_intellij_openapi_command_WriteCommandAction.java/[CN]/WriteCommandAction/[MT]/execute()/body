{
  final RunResult<T> result=new RunResult<T>(this);
  if (myPsiFiles != null && myPsiFiles.length > 0) {
    List<VirtualFile> list=new SmartList<VirtualFile>();
    for (    final PsiFile psiFile : myPsiFiles) {
      if (psiFile == null)       continue;
      final VirtualFile virtualFile=psiFile.getVirtualFile();
      if (virtualFile != null) {
        list.add(virtualFile);
      }
    }
    if (!list.isEmpty()) {
      if (ReadonlyStatusHandler.getInstance(myProject).ensureFilesWritable(list.toArray(new VirtualFile[list.size()])).hasReadonlyFiles()) {
        return result;
      }
    }
  }
  try {
    if (EventQueue.isDispatchThread()) {
      performWriteCommandAction(result);
    }
 else {
      SwingUtilities.invokeAndWait(new Runnable(){
        public void run(){
          performWriteCommandAction(result);
        }
      }
);
    }
  }
 catch (  Throwable e) {
    if (e instanceof InvocationTargetException)     e=e.getCause();
    if (e instanceof Error)     throw (Error)e;
 else     if (e instanceof RuntimeException)     throw (RuntimeException)e;
    throw new Error(e);
  }
  return result;
}
