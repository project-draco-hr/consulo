{
  PsiElement resolved=myReference.resolve();
  if (resolved instanceof PsiClass) {
    PsiClass aClass=(PsiClass)resolved;
    if (!PsiUtil.typeParametersIterable(aClass).iterator().hasNext())     return this;
    PsiManager manager=myReference.getManager();
    final PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
    final PsiSubstitutor rawSubstitutor=factory.createRawSubstitutor(aClass);
    return factory.createType(aClass,rawSubstitutor,getLanguageLevel(),getAnnotations());
  }
  String qualifiedName=myReference.getQualifiedName();
  String name=myReference.getReferenceName();
  if (name == null) {
    name="";
  }
  if (qualifiedName == null) {
    qualifiedName="";
  }
  LightClassReference reference=new LightClassReference(myReference.getManager(),name,qualifiedName,myReference.getResolveScope());
  return new PsiClassReferenceType(reference,null,getAnnotations());
}
