{
  if (editor.getSelectionModel().hasSelection() || editor.getSelectionModel().hasBlockSelection())   return null;
  final LogicalPosition caretPos=editor.getCaretModel().getLogicalPosition();
  if (caretPos.line == 0 || caretPos.column == 0) {
    return null;
  }
  final int startCheckRange=editor.getDocument().getLineStartOffset(caretPos.line);
  final int endCheckRange=startCheckRange + caretPos.column;
  final CharSequence charSeq=editor.getDocument().getCharsSequence();
  for (int pos=startCheckRange; pos < endCheckRange; pos++) {
    final char c=charSeq.charAt(pos);
    if (c != '\t' && c != ' ' && c != '\n') {
      return null;
    }
  }
  final int indent=CodeStyleSettingsManager.getSettings(file.getProject()).getIndentSize(file.getFileType());
  int column=((caretPos.column - 1) / indent) * indent;
  if (column < 0) {
    column=0;
  }
  return new LogicalPosition(caretPos.line,column);
}
