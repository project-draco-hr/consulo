{
  if (editor.getSelectionModel().hasSelection()) {
    int newOffset=editor.getSelectionModel().getSelectionStart();
    editor.getCaretModel().moveToOffset(newOffset);
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    EditorModificationUtil.deleteSelectedText(editor);
    return;
  }
  int lineNumber=editor.getCaretModel().getLogicalPosition().line;
  int colNumber=editor.getCaretModel().getLogicalPosition().column;
  Document document=editor.getDocument();
  if (colNumber > 0) {
    if (EditorModificationUtil.calcAfterLineEnd(editor) > 0) {
      int columnShift=-1;
      editor.getCaretModel().moveCaretRelatively(columnShift,0,false,false,true);
    }
 else {
      int offset=editor.getCaretModel().getOffset();
      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
      editor.getSelectionModel().removeSelection();
      document.deleteString(offset - 1,offset);
      editor.getCaretModel().moveToOffset(offset - 1,true);
    }
  }
 else   if (lineNumber > 0) {
    int separatorLength=document.getLineSeparatorLength(lineNumber - 1);
    int lineEnd=document.getLineEndOffset(lineNumber - 1) + separatorLength;
    editor.getCaretModel().moveToOffset(lineEnd - separatorLength);
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    editor.getSelectionModel().removeSelection();
    document.deleteString(lineEnd - separatorLength,lineEnd);
    CommandProcessor commandProcessor=CommandProcessor.getInstance();
    commandProcessor.setCurrentCommandGroupId(null);
  }
}
