{
  for (  TextFilePatch patch : newOrWithoutMatches) {
    final String[] strings=patch.getAfterName().replace('\\','/').split("/");
    Pair<VirtualFile,Integer> best=null;
    for (int i=strings.length - 2; i >= 0; --i) {
      final String name=strings[i];
      final Collection<VirtualFile> files=directoryDetector.findFiles(name);
      if (!files.isEmpty()) {
        for (        VirtualFile file : files) {
          Pair<VirtualFile,Integer> pair=compareNamesImpl(strings,file,i);
          if (pair != null && pair.getSecond() < i) {
            if (best == null || pair.getSecond() > best.getSecond()) {
              best=pair;
            }
          }
        }
        if (best != null) {
          break;
        }
      }
    }
    if (best != null) {
      final FilePatchInProgress patchInProgress=new FilePatchInProgress(patch,null,myBaseDir);
      patchInProgress.setNewBase(best.getFirst());
      int numDown=best.getSecond();
      for (int i=0; i < numDown; i++) {
        patchInProgress.up();
      }
      result.putValue(best.getFirst(),patchInProgress);
    }
 else {
      final FilePatchInProgress patchInProgress=new FilePatchInProgress(patch,null,myBaseDir);
      result.putValue(myBaseDir,patchInProgress);
    }
  }
}
