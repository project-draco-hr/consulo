{
  super(new BorderLayout());
  myProject=project;
  myFileEditor=editor;
  myTreeModel=structureViewModel;
  myTreeModelWrapper=new TreeModelWrapper(myTreeModel,this);
  SmartTreeStructure treeStructure=new SmartTreeStructure(project,myTreeModelWrapper){
    public void rebuildTree(){
      if (!isDisposed()) {
        super.rebuildTree();
      }
    }
    public boolean isToBuildChildrenInBackground(    final Object element){
      if (element instanceof TreeElementWrapper) {
        final Object o=((TreeElementWrapper)element).getElement();
        final TreeElement root=myModel.getRoot();
        if (o == root)         return true;
      }
      return false;
    }
    protected TreeElementWrapper createTree(){
      return new StructureViewTreeElementWrapper(myProject,myModel.getRoot(),myModel);
    }
  }
;
  final DefaultTreeModel model=new DefaultTreeModel(new DefaultMutableTreeNode(treeStructure.getRootElement()));
  JTree tree=new Tree(model);
  tree.setRootVisible(showRootNode);
  tree.setShowsRootHandles(true);
  myAbstractTreeBuilder=new StructureTreeBuilder(project,tree,(DefaultTreeModel)tree.getModel(),treeStructure,myTreeModelWrapper);
  myAbstractTreeBuilder.updateFromRoot();
  Disposer.register(this,myAbstractTreeBuilder);
  Disposer.register(myAbstractTreeBuilder,new Disposable(){
    public void dispose(){
      storeState();
    }
  }
);
  add(new JScrollPane(myAbstractTreeBuilder.getTree()),BorderLayout.CENTER);
  myAbstractTreeBuilder.getTree().setCellRenderer(new NodeRenderer());
  myAutoScrollToSourceHandler=new MyAutoScrollToSourceHandler();
  myAutoScrollFromSourceHandler=new MyAutoScrollFromSourceHandler(myProject);
  JComponent toolbarComponent=ActionManager.getInstance().createActionToolbar(ActionPlaces.STRUCTURE_VIEW_TOOLBAR,createActionGroup(),true).getComponent();
  add(toolbarComponent,BorderLayout.NORTH);
  installTree();
  myCopyPasteDelegator=new CopyPasteDelegator(myProject,getTree()){
    @NotNull protected PsiElement[] getSelectedElements(){
      return getSelectedPsiElements();
    }
  }
;
}
