{
  myKeyEventDispatcher=new KeyEventDispatcher(){
    public boolean dispatchKeyEvent(    KeyEvent e){
      dispose();
      return false;
    }
  }
;
  myKeyboardFocusManager.addKeyEventDispatcher(myKeyEventDispatcher);
  myMulticastListener=new AWTEventListener(){
    public void eventDispatched(    AWTEvent event){
switch (event.getID()) {
case MouseEvent.MOUSE_PRESSED:
        dispose();
    }
  }
}
;
Toolkit.getDefaultToolkit().addAWTEventListener(myMulticastListener,AWTEvent.MOUSE_EVENT_MASK);
myComponentListener=new ComponentListener(){
  public void componentHidden(  ComponentEvent e){
    dispose();
  }
  public void componentMoved(  ComponentEvent e){
    dispose();
  }
  public void componentResized(  ComponentEvent e){
    dispose();
  }
  public void componentShown(  ComponentEvent e){
    dispose();
  }
}
;
myWindowListener=new WindowListener(){
  public void windowActivated(  WindowEvent e){
    dispose();
  }
  public void windowClosed(  WindowEvent e){
    dispose();
  }
  public void windowClosing(  WindowEvent e){
    dispose();
  }
  public void windowDeactivated(  WindowEvent e){
    dispose();
  }
  public void windowDeiconified(  WindowEvent e){
    dispose();
  }
  public void windowIconified(  WindowEvent e){
    dispose();
  }
  public void windowOpened(  WindowEvent e){
    dispose();
  }
}
;
myTargetWindow.addWindowListener(myWindowListener);
myWindowStateListener=new WindowStateListener(){
  public void windowStateChanged(  WindowEvent e){
    dispose();
  }
}
;
myTargetWindow.addWindowStateListener(myWindowStateListener);
}
