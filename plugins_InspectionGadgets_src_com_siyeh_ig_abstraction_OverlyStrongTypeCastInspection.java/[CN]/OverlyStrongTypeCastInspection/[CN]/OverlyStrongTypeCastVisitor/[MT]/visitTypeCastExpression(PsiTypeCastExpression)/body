{
  super.visitTypeCastExpression(expression);
  final PsiExpression operand=expression.getOperand();
  if (operand == null) {
    return;
  }
  final PsiType operandType=operand.getType();
  if (operandType == null) {
    return;
  }
  final PsiTypeElement typeElement=expression.getCastType();
  if (typeElement == null) {
    return;
  }
  final PsiType type=typeElement.getType();
  if (type == null) {
    return;
  }
  final PsiType expectedType=ExpectedTypeUtils.findExpectedType(expression);
  if (expectedType == null) {
    return;
  }
  if (expectedType.equals(type)) {
    return;
  }
  if (expectedType.isAssignableFrom(operandType)) {
    return;
  }
  if (ClassUtils.isPrimitiveNumericType(type) || ClassUtils.isPrimitiveNumericType(expectedType)) {
    return;
  }
  if (TypeConversionUtil.isPrimitiveWrapper(type.getCanonicalText()) || TypeConversionUtil.isPrimitiveWrapper(type.getCanonicalText())) {
    return;
  }
  registerError(typeElement);
}
