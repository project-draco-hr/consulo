{
  myProject=project;
  myRunnerTask=new Task.Backgroundable(project,title){
    public void run(    @NotNull final ProgressIndicator indicator){
      myHasActiveTask=true;
      while (true) {
        final Task task;
synchronized (myQueue) {
          task=myQueue.poll();
          if (task == null) {
            break;
          }
        }
        indicator.setText(task.getTitle());
        try {
          task.run(indicator);
        }
 catch (        ProcessCanceledException e) {
        }
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            if (myProject == null || !myProject.isDisposed()) {
              task.onSuccess();
            }
          }
        }
,ModalityState.NON_MODAL);
      }
      myHasActiveTask=false;
    }
  }
;
}
