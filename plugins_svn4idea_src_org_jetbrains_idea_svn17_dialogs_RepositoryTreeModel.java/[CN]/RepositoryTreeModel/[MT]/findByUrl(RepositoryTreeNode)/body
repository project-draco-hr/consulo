{
  if (oldNode.getParent() == null) {
    return oldNode;
  }
  TreeNode[] oldPath=getPathToRoot(oldNode);
  if (!(oldPath[0] instanceof RepositoryTreeNode)) {
    final TreeNode[] result=new TreeNode[oldPath.length - 1];
    System.arraycopy(oldPath,1,result,0,oldPath.length - 1);
    oldPath=result;
  }
  TreeNode root=(TreeNode)getRoot();
  if (!(root instanceof RepositoryTreeNode)) {
    final Enumeration children=root.children();
    root=null;
    while (children.hasMoreElements()) {
      TreeNode node=(TreeNode)children.nextElement();
      if ((node instanceof RepositoryTreeNode) && (((RepositoryTreeNode)node).getURL().equals(((RepositoryTreeNode)oldPath[0]).getURL()))) {
        root=node;
        break;
      }
    }
  }
 else {
    if ((root == null) || (!((RepositoryTreeNode)root).getURL().equals(((RepositoryTreeNode)oldPath[0]).getURL()))) {
      return null;
    }
  }
  if (root == null) {
    return null;
  }
  for (int i=1; i < oldPath.length; i++) {
    final TreeNode treeNode=oldPath[i];
    if (root == null) {
      return null;
    }
    root=getChild((RepositoryTreeNode)root,((RepositoryTreeNode)treeNode).getURL());
  }
  return (RepositoryTreeNode)root;
}
