{
  Entry e=myVcs.findEntry(f.getPath());
  if (e == null)   return;
  StringBuilder b=new StringBuilder();
  b.append("already exists!!\n");
  b.append("file: " + f + "\n");
  b.append("file.name: " + f.getName() + "\n");
  b.append("file.parent: " + f.getParent() + "\n");
  if (f.getParent() != null)   b.append("file.parent.name: " + f.getParent().getName() + "\n");
  b.append("entry: " + e + "\n");
  b.append("entry.parent: " + e.getParent() + "\n");
  if (f.getParent() != null)   b.append("entry for file.parent: " + myVcs.findEntry(f.getParent().getPath()) + "\n");
  b.append("has vcs root: " + hasVcsRoot(f) + "\n");
  b.append("has vfs root: " + hasVfsRoot(e) + "\n");
  b.append("is file allowed: " + !notAllowed(f) + "\n");
  if (f.getParent() != null)   b.append("is file parent allowed: " + !notAllowed(f.getParent()) + "\n");
  log(b,myVfsRoots);
  log(b,myVcs.getRoots());
  throw new RuntimeException(b.toString());
}
