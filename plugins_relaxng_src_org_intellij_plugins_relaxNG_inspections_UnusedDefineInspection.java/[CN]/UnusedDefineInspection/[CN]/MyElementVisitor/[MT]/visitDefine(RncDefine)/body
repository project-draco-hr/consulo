{
  final RncGrammar grammar=PsiTreeUtil.getParentOfType(pattern,RncGrammar.class);
  final PsiFile file=pattern.getContainingFile();
  if (grammar != null) {
    if (processRncUsages(pattern,new LocalSearchScope(grammar)))     return;
  }
 else {
    if (processRncUsages(pattern,new LocalSearchScope(file)))     return;
  }
  final PsiElementProcessor.CollectElements<XmlFile> collector=new PsiElementProcessor.CollectElements<XmlFile>();
  RelaxIncludeIndex.processBackwardDependencies((XmlFile)file,collector);
  if (processRncUsages(pattern,new LocalSearchScope(collector.toArray())))   return;
  final ASTNode astNode=((RncDefineImpl)pattern).getNameNode();
  myHolder.registerProblem(astNode.getPsi(),"Unreferenced define",ProblemHighlightType.LIKE_UNUSED_SYMBOL,new MyFix<RncDefine>(pattern));
}
