{
  myQuickListsList=new JBList(myQuickListsModel);
  myQuickListsList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myQuickListsList.setCellRenderer(new MyQuickListCellRenderer());
  myQuickListsList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      myRightPanel.removeAll();
      final Object selectedValue=myQuickListsList.getSelectedValue();
      if (selectedValue instanceof QuickList) {
        final QuickList quickList=(QuickList)selectedValue;
        updateRightPanel(quickList);
        myQuickListsList.repaint();
      }
 else {
        addDescriptionLabel();
      }
      myRightPanel.revalidate();
    }
  }
);
  addDescriptionLabel();
  ToolbarDecorator toolbarDecorator=ToolbarDecorator.createDecorator(myQuickListsList).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      QuickList quickList=new QuickList(createUniqueName(),"",ArrayUtil.EMPTY_STRING_ARRAY,false);
      myQuickListsModel.addElement(quickList);
      myQuickListsList.clearSelection();
      ListScrollingUtil.selectItem(myQuickListsList,quickList);
      myKeymapPanel.processCurrentKeymapChanged();
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      ListUtil.removeSelectedItems(myQuickListsList);
      myQuickListsList.repaint();
      myKeymapPanel.processCurrentKeymapChanged();
    }
  }
).disableUpDownActions();
  SchemesManager<QuickList,QuickList> schemesManager=QuickListsManager.getInstance().getSchemesManager();
  if (schemesManager.isExportAvailable()) {
    toolbarDecorator.addExtraAction(AnActionButton.fromAction(new ExportSchemeAction<QuickList,QuickList>(schemesManager){
      protected QuickList getSelectedScheme(){
        return (QuickList)myQuickListsList.getSelectedValue();
      }
    }
));
  }
  if (schemesManager.isImportAvailable()) {
    toolbarDecorator.addExtraAction(AnActionButton.fromAction(new ImportSchemeAction<QuickList,QuickList>(QuickListsManager.getInstance().getSchemesManager()){
      protected Collection<QuickList> collectCurrentSchemes(){
        return collectElements();
      }
      protected Component getPanel(){
        return myQuickListsList;
      }
      protected void importScheme(      final QuickList scheme){
        myQuickListsModel.addElement(scheme);
        myQuickListsList.clearSelection();
        ListScrollingUtil.selectItem(myQuickListsList,scheme);
      }
    }
));
  }
  return toolbarDecorator.createPanel();
}
