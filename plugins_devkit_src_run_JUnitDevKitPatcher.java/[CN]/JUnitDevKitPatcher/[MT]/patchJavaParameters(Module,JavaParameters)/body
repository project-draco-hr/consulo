{
  ProjectJdk jdk=javaParameters.getJdk();
  jdk=IdeaJdk.findIdeaJdk(jdk);
  if (jdk == null)   return;
  @NonNls String libPath=jdk.getHomePath() + File.separator + "lib";
  final ParametersList vm=javaParameters.getVMParametersList();
  vm.add("-Xbootclasspath/p:" + libPath + File.separator+ "boot.jar");
  if (!vm.hasProperty("idea.load.plugins.id") && PluginModuleType.isOfType(module)) {
    final String id=DescriptorUtil.getPluginId(module);
    if (id != null) {
      vm.defineProperty("idea.load.plugins.id",id);
    }
  }
  if (!vm.hasProperty("idea.home.path")) {
    String sandboxHome=((Sandbox)jdk.getSdkAdditionalData()).getSandboxHome();
    if (sandboxHome != null) {
      try {
        sandboxHome=new File(sandboxHome).getCanonicalPath();
      }
 catch (      IOException e) {
        sandboxHome=new File(sandboxHome).getAbsolutePath();
      }
      vm.defineProperty("idea.home.path",sandboxHome + File.separator + "test");
    }
  }
  javaParameters.getClassPath().addFirst(libPath + File.separator + "idea.jar");
  javaParameters.getClassPath().addFirst(libPath + File.separator + "resources.jar");
  javaParameters.getClassPath().addFirst(jdk.getToolsPath());
}
