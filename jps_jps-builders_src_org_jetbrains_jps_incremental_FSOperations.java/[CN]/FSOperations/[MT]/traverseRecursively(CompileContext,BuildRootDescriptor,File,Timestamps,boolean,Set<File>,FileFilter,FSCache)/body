{
  if (context.getProjectDescriptor().getIgnoredFileIndex().isIgnored(file.getName())) {
    return;
  }
  final File[] children=fsCache.getChildren(file);
  if (children != null) {
    if (children.length > 0 && !rd.getExcludedRoots().contains(file)) {
      for (      File child : children) {
        traverseRecursively(context,rd,child,tsStorage,forceDirty,currentFiles,filter,fsCache);
      }
    }
  }
 else {
    if (filter == null || filter.accept(file)) {
      boolean markDirty=forceDirty;
      if (!markDirty) {
        markDirty=tsStorage.getStamp(file,rd.getTarget()) != FileSystemUtil.lastModified(file);
      }
      if (markDirty) {
        final Timestamps marker=context.isProjectRebuild() ? null : tsStorage;
        context.getProjectDescriptor().fsState.markDirty(context,file,rd,marker,false);
      }
      if (currentFiles != null) {
        currentFiles.add(file);
      }
    }
  }
}
