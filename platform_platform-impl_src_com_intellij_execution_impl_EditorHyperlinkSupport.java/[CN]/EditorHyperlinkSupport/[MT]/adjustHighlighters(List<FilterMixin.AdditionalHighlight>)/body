{
  for (  FilterMixin.AdditionalHighlight highlight : highlights) {
    RangeHighlighter found=null;
    for (    RangeHighlighter rangeHighlighter : myHighlighterToMessageInfoMap.keySet()) {
      if (rangeHighlighter.getStartOffset() <= highlight.getStart() && rangeHighlighter.getEndOffset() >= highlight.getEnd()) {
        found=rangeHighlighter;
        break;
      }
    }
    if (found != null) {
      TextAttributes textAttributes=highlight.getTextAttributes(found.getTextAttributes());
      final HyperlinkInfo hyperlinkInfo=myHighlighterToMessageInfoMap.remove(found);
      if (found.getStartOffset() != highlight.getStart()) {
        addHyperlink(found.getStartOffset(),highlight.getEnd(),found.getTextAttributes(),hyperlinkInfo);
      }
      if (found.getEndOffset() != highlight.getEnd()) {
        addHyperlink(highlight.getEnd(),found.getEndOffset(),found.getTextAttributes(),hyperlinkInfo);
      }
      addHyperlink(highlight.getStart(),highlight.getEnd(),textAttributes,hyperlinkInfo);
      myEditor.getMarkupModel().removeHighlighter(found);
      return;
    }
    final Iterator<RangeHighlighter> iterator=myHighlighters.iterator();
    while (iterator.hasNext()) {
      final RangeHighlighter highlighter=iterator.next();
      if (highlighter.getStartOffset() == highlight.getStart() && highlighter.getEndOffset() == highlight.getEnd()) {
        iterator.remove();
        final TextAttributes textAttributes=highlight.getTextAttributes(highlighter.getTextAttributes());
        addHighlighter(highlight.getStart(),highlight.getEnd(),textAttributes);
        return;
      }
    }
    final TextAttributes textAttributes=highlight.getTextAttributes(null);
    addHighlighter(highlight.getStart(),highlight.getEnd(),textAttributes);
  }
}
