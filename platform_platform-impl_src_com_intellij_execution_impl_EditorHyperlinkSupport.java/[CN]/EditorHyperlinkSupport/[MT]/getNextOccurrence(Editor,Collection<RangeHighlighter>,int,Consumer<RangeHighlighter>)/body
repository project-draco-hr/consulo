{
  final List<RangeHighlighter> ranges=new ArrayList<RangeHighlighter>(sortedHighlighters);
  for (Iterator<RangeHighlighter> iterator=ranges.iterator(); iterator.hasNext(); ) {
    RangeHighlighter highlighter=iterator.next();
    if (editor.getFoldingModel().getCollapsedRegionAtOffset(highlighter.getStartOffset()) != null) {
      iterator.remove();
    }
  }
  int i;
  for (i=0; i < ranges.size(); i++) {
    RangeHighlighter range=ranges.get(i);
    if (range.getUserData(OLD_HYPERLINK_TEXT_ATTRIBUTES) != null) {
      break;
    }
  }
  int newIndex=ranges.isEmpty() ? -1 : i == ranges.size() ? 0 : (i + delta + ranges.size()) % ranges.size();
  final RangeHighlighter next=newIndex < ranges.size() && newIndex >= 0 ? ranges.get(newIndex) : null;
  if (next == null)   return null;
  return new OccurenceNavigator.OccurenceInfo(new NavigatableAdapter(){
    public void navigate(    final boolean requestFocus){
      action.consume(next);
      linkFollowed(editor,ranges,next);
    }
  }
,newIndex == -1 ? -1 : newIndex + 1,ranges.size());
}
