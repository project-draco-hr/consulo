{
  final List<RangeHighlighter> ranges=getHyperlinks(0,editor.getDocument().getTextLength(),editor);
  if (ranges.isEmpty()) {
    return null;
  }
  int i;
  for (i=0; i < ranges.size(); i++) {
    RangeHighlighter range=ranges.get(i);
    if (range.getUserData(OLD_HYPERLINK_TEXT_ATTRIBUTES) != null) {
      break;
    }
  }
  i=i % ranges.size();
  int newIndex=i;
  while (newIndex < ranges.size() && newIndex >= 0) {
    newIndex=(newIndex + delta + ranges.size()) % ranges.size();
    final RangeHighlighter next=ranges.get(newIndex);
    if (editor.getFoldingModel().getCollapsedRegionAtOffset(next.getStartOffset()) == null) {
      return new OccurenceNavigator.OccurenceInfo(new NavigatableAdapter(){
        public void navigate(        final boolean requestFocus){
          action.consume(next);
          linkFollowed(editor,ranges,next);
        }
      }
,newIndex == -1 ? -1 : newIndex + 1,ranges.size());
    }
    if (newIndex == i) {
      break;
    }
  }
  return null;
}
