{
  if (lexer.getTokenType() != LBRACE)   return null;
  CompositeElement element=Factory.createCompositeElement(ARRAY_INITIALIZER_EXPRESSION);
  TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  while (true) {
    if (lexer.getTokenType() == RBRACE) {
      TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
      return element;
    }
    if (lexer.getTokenType() == null) {
      TreeUtil.addChildren(element,Factory.createErrorElement("'}' expected"));
      element.putUserData(ParseUtil.UNCLOSED_ELEMENT_PROPERTY,"");
      return element;
    }
    TreeElement arg=parseExpression(lexer);
    if (arg == null) {
      if (lexer.getTokenType() != COMMA) {
        CompositeElement errorElement=Factory.createErrorElement("Unexpected token");
        TreeUtil.addChildren(errorElement,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
        lexer.advance();
        TreeUtil.addChildren(element,errorElement);
      }
 else {
        TreeUtil.addChildren(element,Factory.createErrorElement("Expression expected"));
      }
    }
 else {
      TreeUtil.addChildren(element,arg);
    }
    if (lexer.getTokenType() == RBRACE) {
      TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
      return element;
    }
    if (lexer.getTokenType() == COMMA) {
      TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
    }
 else {
      TreeUtil.addChildren(element,Factory.createErrorElement("',' expected"));
    }
  }
}
