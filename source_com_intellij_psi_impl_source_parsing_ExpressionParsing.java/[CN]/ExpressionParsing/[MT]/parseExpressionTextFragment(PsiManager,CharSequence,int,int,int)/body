{
  Lexer originalLexer=new JavaLexer(JavaPsiFacade.getInstance(manager.getProject()).getEffectiveLanguageLevel());
  FilterLexer lexer=new FilterLexer(originalLexer,new FilterLexer.SetFilter(StdTokenSets.WHITE_SPACE_OR_COMMENT_BIT_SET));
  if (state >= 0) {
    lexer.start(buffer,startOffset,endOffset,state);
  }
 else {
    lexer.start(buffer,startOffset,endOffset,0);
  }
  final FileElement dummyRoot=new JavaDummyHolder(manager,null,myContext.getCharTable()).getTreeElement();
  CompositeElement expression=parseExpression(lexer);
  if (expression != null) {
    TreeUtil.addChildren(dummyRoot,expression);
  }
  if (lexer.getTokenType() != null) {
    TreeUtil.addChildren(dummyRoot,Factory.createErrorElement(JavaErrorMessages.message("unexpected.tokens.beyond.the.end.of.expression")));
    while (lexer.getTokenType() != null) {
      TreeUtil.addChildren(dummyRoot,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
    }
  }
  ParseUtil.insertMissingTokens(dummyRoot,originalLexer,0,buffer.length(),state,ParseUtil.WhiteSpaceAndCommentsProcessor.INSTANCE,myContext);
  return dummyRoot.getFirstChildNode();
}
