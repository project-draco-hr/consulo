{
  if (lexer.getTokenType() != LPARENTH) {
    return Factory.createCompositeElement(EXPRESSION_LIST);
  }
  LOG.assertTrue(lexer.getTokenType() == LPARENTH);
  CompositeElement element=Factory.createCompositeElement(EXPRESSION_LIST);
  TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  boolean afterBad=false;
  int argCount=0;
  while (true) {
    TreeElement arg=parseExpression(lexer);
    if (arg == null) {
      if (lexer.getTokenType() == COMMA || (lexer.getTokenType() == RPARENTH && argCount > 0)) {
        if (!afterBad) {
          TreeUtil.addChildren(element,Factory.createErrorElement(JavaErrorMessages.message("expected.expression")));
          TreeUtil.addChildren(element,Factory.createCompositeElement(EMPTY_EXPRESSION));
        }
      }
 else {
        break;
      }
    }
 else {
      TreeUtil.addChildren(element,arg);
    }
    argCount++;
    afterBad=false;
    if (lexer.getTokenType() == BAD_CHARACTER) {
      afterBad=true;
      TreeUtil.addChildren(element,Factory.createErrorElement(JavaErrorMessages.message("expected.comma.or.rparen")));
    }
 else     if (lexer.getTokenType() != COMMA) {
      break;
    }
    TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
    lexer.advance();
  }
  if (lexer.getTokenType() == RPARENTH) {
    TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
    lexer.advance();
  }
 else {
    TreeUtil.addChildren(element,Factory.createErrorElement(JavaErrorMessages.message("expected.rparen")));
    element.putUserData(ParseUtil.UNCLOSED_ELEMENT_PROPERTY,"");
  }
  return element;
}
