{
  final CachedRefs refs=new CachedRefs();
  GitRepository repository=getRepositoryWise(myProject,myRoot);
  GitBranchesCollection branches=repository.getBranches();
  refs.setCollection(branches);
  final GitBranch current=repository.getCurrentBranch();
  refs.setCurrentBranch(current);
  if (current != null) {
    final Collection<GitBranchTrackInfo> infos=repository.getBranchTrackInfos();
    for (    GitBranchTrackInfo info : infos) {
      if (info.getLocalBranch().equals(current)) {
        String fullName=info.getRemoteBranch().getFullName();
        fullName=fullName.startsWith(GitBranch.REFS_REMOTES_PREFIX) ? fullName.substring(GitBranch.REFS_REMOTES_PREFIX.length()) : fullName;
        refs.setTrackedRemoteName(fullName);
        break;
      }
    }
  }
  refs.setUsername(GitConfigUtil.getValue(myProject,myRoot,GitConfigUtil.USER_NAME));
  final String head=repository.getCurrentRevision();
  if (head != null) {
    refs.setHeadHash(AbstractHash.create(head));
  }
  return refs;
}
