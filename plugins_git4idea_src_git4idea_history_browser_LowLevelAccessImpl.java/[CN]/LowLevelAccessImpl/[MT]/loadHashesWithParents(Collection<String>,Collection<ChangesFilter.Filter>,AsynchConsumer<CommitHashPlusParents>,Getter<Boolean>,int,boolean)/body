{
  final List<String> parameters=new ArrayList<String>();
  final Collection<VirtualFile> paths=new HashSet<VirtualFile>();
  ChangesFilter.filtersToParameters(filters,parameters,paths);
  if (!startingPoints.isEmpty()) {
    for (    String startingPoint : startingPoints) {
      parameters.add(startingPoint);
    }
  }
 else {
    parameters.add("HEAD");
    parameters.add("--branches");
    parameters.add("--remotes");
    parameters.add("--tags");
  }
  if (useMaxCnt > 0) {
    parameters.add("--max-count=" + useMaxCnt);
  }
  if (topoOrder) {
    parameters.add("--topo-order");
  }
 else {
    parameters.add("--date-order");
  }
  GitHistoryUtils.hashesWithParents(myProject,new FilePathImpl(myRoot),consumer,isCanceled,paths,ArrayUtil.toStringArray(parameters));
}
