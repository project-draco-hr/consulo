{
  myAntGlobalConfiguration=antConfiguration;
  myAntCommandLine.attachLabel(myAntCmdLineLabel);
  myAntCommandLine.setDialogCaption(AntBundle.message("run.execution.tab.ant.command.line.dialog.title"));
  setLabelFor(myJDKLabel,myJDKs);
  myJDKsController=new ChooseAndEditComboBoxController<Sdk,String>(myJDKs,new Convertor<Sdk,String>(){
    public String convert(    Sdk jdk){
      return jdk != null ? jdk.getName() : "";
    }
  }
,String.CASE_INSENSITIVE_ORDER){
    public Iterator<Sdk> getAllListItems(){
      Application application=ApplicationManager.getApplication();
      if (application == null) {
        return Collections.singletonList((Sdk)null).iterator();
      }
      ArrayList<Sdk> allJdks=new ArrayList<Sdk>(Arrays.asList(ProjectJdkTable.getInstance().getAllJdks()));
      allJdks.add(0,null);
      return allJdks.iterator();
    }
    public Sdk openConfigureDialog(    Sdk jdk,    JComponent parent){
      ProjectJdksEditor editor=new ProjectJdksEditor(jdk,myJDKs.getComboBox());
      editor.show();
      return editor.getSelectedJdk();
    }
  }
;
  UIPropertyBinding.Composite binding=getBinding();
  binding.bindString(myAntCommandLine.getTextField(),AntBuildFileImpl.ANT_COMMAND_LINE_PARAMETERS);
  binding.bindString(myJDKs.getComboBox(),AntBuildFileImpl.CUSTOM_JDK_NAME);
  binding.addBinding(new RunWithAntBinding(myUseDefaultAnt,myUseCastomAnt,myAnts,myAntGlobalConfiguration));
  mySetDefaultAnt.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      AntSetPanel antSetPanel=new AntSetPanel(myAntGlobalConfiguration);
      antSetPanel.reset();
      antSetPanel.setSelection(myProjectDefaultAnt.find(myAntGlobalConfiguration));
      AntInstallation antInstallation=antSetPanel.showDialog(mySetDefaultAnt);
      if (antInstallation == null) {
        return;
      }
      myProjectDefaultAnt=antInstallation.getReference();
      updateDefaultAnt();
    }
  }
);
}
