{
  addExcludedDir(myRoot.getPath() + "/dir/subdir");
  addContentRoot(createModule("foo"),myRoot.getPath() + "/dir/subdir/subdir2");
  String dir1=createDirectoryExternally("dir");
  String f1=createFileExternally("dir/f.txt");
  createFileExternally("dir/f.class");
  createFileExternally("dir/subdir/f.txt");
  String dir2=createDirectoryExternally("dir/subdir/subdir2");
  String f2=createFileExternally("dir/subdir/subdir2/f.txt");
  LocalFileSystem.getInstance().refresh(false);
  List<Change> changes=getVcs().getChangeListInTests().getChangesInTests().get(0).getChanges();
  assertEquals(4,changes.size());
  List<String> actual=new SmartList<String>();
  for (  Change each : changes) {
    actual.add(((StructuralChange)each).getPath());
  }
  List<String> expected=new ArrayList<String>(Arrays.asList(dir1,dir2,f1,f2));
  Collections.sort(actual);
  Collections.sort(expected);
  assertOrderedEquals(actual,expected);
}
