{
  if (refElement instanceof RefClass) {
    final PsiClass psiClass=(PsiClass)refElement.getElement();
    if (psiClass != null) {
      if (RefUtil.isEntryPoint(refElement)) {
        ((RefClassImpl)refElement).setFlag(false,CAN_BE_FINAL_MASK);
      }
      PsiMethod[] psiMethods=psiClass.getMethods();
      PsiField[] psiFields=psiClass.getFields();
      HashSet<PsiVariable> allFields=new HashSet<PsiVariable>();
      allFields.addAll(Arrays.asList(psiFields));
      ArrayList<PsiVariable> instanceInitializerInitializedFields=new ArrayList<PsiVariable>();
      boolean hasInitializers=false;
      for (      PsiClassInitializer initializer : psiClass.getInitializers()) {
        PsiCodeBlock body=initializer.getBody();
        hasInitializers=true;
        ControlFlow flow;
        try {
          flow=ControlFlowFactory.getInstance(body.getProject()).getControlFlow(body,LocalsOrMyInstanceFieldsControlFlowPolicy.getInstance(),false);
        }
 catch (        AnalysisCanceledException e) {
          flow=ControlFlow.EMPTY;
        }
        Collection<PsiVariable> writtenVariables=ControlFlowUtil.getWrittenVariables(flow,0,flow.getSize(),false);
        for (        PsiVariable psiVariable : writtenVariables) {
          if (allFields.contains(psiVariable)) {
            if (instanceInitializerInitializedFields.contains(psiVariable)) {
              allFields.remove(psiVariable);
              instanceInitializerInitializedFields.remove(psiVariable);
            }
 else {
              instanceInitializerInitializedFields.add(psiVariable);
            }
          }
        }
        for (        PsiVariable psiVariable : writtenVariables) {
          if (!instanceInitializerInitializedFields.contains(psiVariable)) {
            allFields.remove(psiVariable);
          }
        }
      }
      for (      PsiMethod psiMethod : psiMethods) {
        if (psiMethod.isConstructor()) {
          PsiCodeBlock body=psiMethod.getBody();
          if (body != null) {
            hasInitializers=true;
            ControlFlow flow;
            try {
              flow=ControlFlowFactory.getInstance(body.getProject()).getControlFlow(body,LocalsOrMyInstanceFieldsControlFlowPolicy.getInstance(),false);
            }
 catch (            AnalysisCanceledException e) {
              flow=ControlFlow.EMPTY;
            }
            Collection<PsiVariable> writtenVariables=ControlFlowUtil.getWrittenVariables(flow,0,flow.getSize(),false);
            for (            PsiVariable psiVariable : writtenVariables) {
              if (instanceInitializerInitializedFields.contains(psiVariable)) {
                allFields.remove(psiVariable);
                instanceInitializerInitializedFields.remove(psiVariable);
              }
            }
            List<PsiMethod> redirectedConstructors=HighlightControlFlowUtil.getChainedConstructors(psiMethod);
            if (redirectedConstructors == null || redirectedConstructors.isEmpty()) {
              List<PsiVariable> ssaVariables=ControlFlowUtil.getSSAVariables(flow);
              ArrayList<PsiVariable> good=new ArrayList<PsiVariable>(ssaVariables);
              good.addAll(instanceInitializerInitializedFields);
              allFields.retainAll(good);
            }
 else {
              allFields.removeAll(writtenVariables);
            }
          }
        }
      }
      for (      PsiField psiField : psiFields) {
        if ((!hasInitializers || !allFields.contains(psiField)) && psiField.getInitializer() == null) {
          final RefFieldImpl refField=(RefFieldImpl)myManager.getReference(psiField);
          if (refField != null) {
            refField.setFlag(false,CAN_BE_FINAL_MASK);
          }
        }
      }
    }
  }
 else   if (refElement instanceof RefMethod) {
    final RefMethod refMethod=(RefMethod)refElement;
    final PsiElement element=refMethod.getElement();
    if (element instanceof PsiMethod) {
      if (RefUtil.isEntryPoint(refMethod)) {
        ((RefMethodImpl)refMethod).setFlag(false,CAN_BE_FINAL_MASK);
      }
    }
  }
}
