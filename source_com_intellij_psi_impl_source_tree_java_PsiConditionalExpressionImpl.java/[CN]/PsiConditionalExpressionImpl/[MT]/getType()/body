{
  PsiExpression expr1=getThenExpression();
  PsiExpression expr2=getElseExpression();
  PsiType type1=expr1 != null ? expr1.getType() : null;
  PsiType type2=expr2 != null ? expr2.getType() : null;
  if (type1 == null)   return type2;
  if (type2 == null)   return type1;
  if (type1.equals(type2))   return type1;
  final int typeRank1=TypeConversionUtil.getTypeRank(type1);
  final int typeRank2=TypeConversionUtil.getTypeRank(type2);
  if (TypeConversionUtil.isNumericType(typeRank1) && TypeConversionUtil.isNumericType(typeRank2)) {
    if (typeRank1 == TypeConversionUtil.BYTE_RANK && typeRank2 == TypeConversionUtil.SHORT_RANK)     return type2;
    if (typeRank1 == TypeConversionUtil.SHORT_RANK && typeRank2 == TypeConversionUtil.BYTE_RANK)     return type1;
    if (typeRank1 == TypeConversionUtil.BYTE_RANK || typeRank1 == TypeConversionUtil.SHORT_RANK || typeRank1 == TypeConversionUtil.CHAR_RANK) {
      if (TypeConversionUtil.areTypesAssignmentCompatible(type1,expr2))       return type1;
    }
    if (typeRank2 == TypeConversionUtil.BYTE_RANK || typeRank2 == TypeConversionUtil.SHORT_RANK || typeRank2 == TypeConversionUtil.CHAR_RANK) {
      if (TypeConversionUtil.areTypesAssignmentCompatible(type2,expr1))       return type2;
    }
    return TypeConversionUtil.binaryNumericPromotion(type1,type2);
  }
  if (TypeConversionUtil.isNullType(type1) && !(type2 instanceof PsiPrimitiveType))   return type2;
  if (TypeConversionUtil.isNullType(type2) && !(type1 instanceof PsiPrimitiveType))   return type1;
  if (type1.isAssignableFrom(type2))   return type1;
  if (type2.isAssignableFrom(type1))   return type2;
  if (getManager().getEffectiveLanguageLevel().compareTo(LanguageLevel.JDK_1_5) < 0) {
    return null;
  }
 else {
    if (TypeConversionUtil.isPrimitiveAndNotNull(type1))     type1=((PsiPrimitiveType)type1).getBoxedType(getManager(),getResolveScope());
    if (type1 == null)     return null;
    if (TypeConversionUtil.isPrimitiveAndNotNull(type2))     type2=((PsiPrimitiveType)type2).getBoxedType(getManager(),getResolveScope());
    if (type2 == null)     return null;
    return GenericsUtil.getLeastUpperBound(type1,type2,getManager());
  }
}
