{
  super(project);
  LOG.debug("ct");
  myConfiguration=svnConfiguration;
  dumpFileStatus(FileStatus.ADDED);
  dumpFileStatus(FileStatus.DELETED);
  dumpFileStatus(FileStatus.MERGE);
  dumpFileStatus(FileStatus.MODIFIED);
  dumpFileStatus(FileStatus.NOT_CHANGED);
  dumpFileStatus(FileStatus.UNKNOWN);
  dumpFileStatus(SvnFileStatus.REPLACED);
  dumpFileStatus(SvnFileStatus.EXTERNAL);
  dumpFileStatus(SvnFileStatus.OBSTRUCTED);
  myEntriesFileListener=new SvnEntriesFileListener(project);
  final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(project);
  myAddConfirmation=vcsManager.getStandardConfirmation(VcsConfiguration.StandardConfirmation.ADD,this);
  myDeleteConfirmation=vcsManager.getStandardConfirmation(VcsConfiguration.StandardConfirmation.REMOVE,this);
  myCheckoutOptions=vcsManager.getStandardOption(VcsConfiguration.StandardOption.CHECKOUT,this);
  myRootsInfo=new SvnFileUrlMappingRefresher(new SvnFileUrlMappingImpl(myProject,this));
  final SvnBranchConfigurationManager.SvnSupportOptions supportOptions=SvnBranchConfigurationManager.getInstance(myProject).getSupportOptions();
  upgradeTo15(supportOptions);
  changeListSynchronizationIdeaVersionToNative(supportOptions);
  ChangeListManager.getInstance(myProject).addChangeListListener(new SvnChangelistListener(createChangelistClient()));
}
