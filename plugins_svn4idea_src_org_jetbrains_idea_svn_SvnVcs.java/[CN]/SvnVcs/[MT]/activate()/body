{
  createPool();
  final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(myProject);
  if (!myProject.isDefault()) {
    ChangeListManager.getInstance(myProject).addChangeListListener(myChangeListListener);
    vcsManager.addVcsListener(myVcsListener);
  }
  SvnApplicationSettings.getInstance().svnActivated();
  if (myEntriesFileListener != null) {
    VirtualFileManager.getInstance().addVirtualFileListener(myEntriesFileListener);
  }
  LoadedRevisionsCache.getInstance(myProject);
  FrameStateManager.getInstance().addListener(myFrameStateListener);
  myAuthNotifier.init();
  mySvnBranchPointsCalculator=new SvnBranchPointsCalculator(myProject);
  mySvnBranchPointsCalculator.activate();
  if (SystemInfo.isWindows) {
    if (!SVNJNAUtil.isJNAPresent()) {
      Notifications.Bus.notify(new Notification(getDisplayName(),"Subversion plugin: no JNA","A problem with JNA initialization for svnkit library. Encryption is not available.",NotificationType.WARNING),NotificationDisplayType.BALLOON,myProject);
    }
 else     if (!SVNJNAUtil.isWinCryptEnabled()) {
      Notifications.Bus.notify(new Notification(getDisplayName(),"Subversion plugin: no encryption","A problem with encryption module (Crypt32.dll) initialization for svnkit library. Encryption is not available.",NotificationType.WARNING),NotificationDisplayType.BALLOON,myProject);
    }
  }
  final SvnConfiguration.UseAcceleration accelerationType=SvnConfiguration.getInstance(myProject).myUseAcceleration;
  if (SvnConfiguration.UseAcceleration.javaHL.equals(accelerationType)) {
    CheckJavaHL.runtimeCheck(myProject);
  }
 else   if (SvnConfiguration.UseAcceleration.commandLine.equals(accelerationType) && !ApplicationManager.getApplication().isHeadlessEnvironment()) {
    myChecker.checkExecutableAndNotifyIfNeeded();
  }
  StartupManager.getInstance(myProject).runWhenProjectIsInitialized(new DumbAwareRunnable(){
    public void run(){
      postStartup();
    }
  }
);
  vcsManager.addVcsListener(myRootsToWorkingCopies);
  myLoadedBranchesStorage.activate();
}
