{
  if (in.size() <= 1)   return in;
  final List<MyPair<S>> infos=new ArrayList<MyPair<S>>(in.size());
  final SvnFileUrlMappingImpl mapping=(SvnFileUrlMappingImpl)getSvnFileUrlMapping();
  for (  S s : in) {
    final VirtualFile vf=convertor.convert(s);
    final File ioFile=new File(vf.getPath());
    final SVNURL url=mapping.getUrlForFile(ioFile);
    if (url == null)     continue;
    infos.add(new MyPair<S>(vf,url.toString(),s));
  }
  final List<MyPair<S>> filtered=new ArrayList<MyPair<S>>(infos.size());
  ForNestedRootChecker.filterOutSuperfluousChildren(this,infos,filtered);
  return ObjectsConvertor.convert(filtered,new Convertor<MyPair<S>,S>(){
    public S convert(    final MyPair<S> o){
      return o.getSrc();
    }
  }
);
}
