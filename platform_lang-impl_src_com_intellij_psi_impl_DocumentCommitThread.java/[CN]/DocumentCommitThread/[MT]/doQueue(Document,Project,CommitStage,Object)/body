{
synchronized (documentsToCommit) {
    if (!changeCommitStage(document,start,CommitStage.QUEUED_TO_COMMIT,false))     return false;
    Object[] documentTasks=documentsToCommit.toArray();
    for (    Object o : documentTasks) {
      CommitTask task=(CommitTask)o;
      if (task.document == document) {
        ProgressIndicator current=document.getUserData(COMMIT_PROGRESS);
        if (current == null) {
          return true;
        }
 else {
          current.cancel();
          removeCommitFromQueue(document);
          break;
        }
      }
    }
    ProgressIndicator indicator=new ProgressIndicatorBase();
    indicator.start();
    documentsToCommit.addLast(new CommitTask(document,project,indicator,reason));
    log("Queued",document,false,reason);
    return true;
  }
}
