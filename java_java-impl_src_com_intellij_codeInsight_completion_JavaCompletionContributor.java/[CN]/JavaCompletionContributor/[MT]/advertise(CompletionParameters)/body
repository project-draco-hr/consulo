{
  if (!(parameters.getOriginalFile() instanceof PsiJavaFile))   return null;
  if (parameters.getCompletionType() == CompletionType.BASIC && parameters.getInvocationCount() > 0) {
    PsiElement position=parameters.getPosition();
    if (psiElement().withParent(psiReferenceExpression().withFirstChild(psiReferenceExpression().referencing(psiClass()))).accepts(position)) {
      if (CompletionUtil.shouldShowFeature(parameters,JavaCompletionFeatures.GLOBAL_MEMBER_NAME)) {
        final String shortcut=getActionShortcut(IdeActions.ACTION_CLASS_NAME_COMPLETION);
        if (shortcut != null) {
          return "Pressing " + shortcut + " without a class qualifier would show all accessible static methods";
        }
      }
    }
  }
  if (parameters.getCompletionType() != CompletionType.SMART && shouldSuggestSmartCompletion(parameters.getPosition())) {
    if (CompletionUtil.shouldShowFeature(parameters,CodeCompletionFeatures.EDITING_COMPLETION_SMARTTYPE_GENERAL)) {
      final String shortcut=getActionShortcut(IdeActions.ACTION_SMART_TYPE_COMPLETION);
      if (shortcut != null) {
        return CompletionBundle.message("completion.smart.hint",shortcut);
      }
    }
  }
  if (parameters.getCompletionType() != CompletionType.CLASS_NAME && shouldSuggestClassNameCompletion(parameters.getPosition())) {
    if (CompletionUtil.shouldShowFeature(parameters,CodeCompletionFeatures.EDITING_COMPLETION_CLASSNAME)) {
      final String shortcut=getActionShortcut(IdeActions.ACTION_CLASS_NAME_COMPLETION);
      if (shortcut != null) {
        return CompletionBundle.message("completion.class.name.hint",shortcut);
      }
    }
  }
  if (parameters.getCompletionType() == CompletionType.SMART && parameters.getInvocationCount() == 1) {
    final PsiType[] psiTypes=ExpectedTypesGetter.getExpectedTypes(parameters.getPosition(),true);
    if (psiTypes.length > 0) {
      if (CompletionUtil.shouldShowFeature(parameters,JavaCompletionFeatures.SECOND_SMART_COMPLETION_TOAR)) {
        final String shortcut=getActionShortcut(IdeActions.ACTION_SMART_TYPE_COMPLETION);
        if (shortcut != null) {
          for (          final PsiType psiType : psiTypes) {
            final PsiType type=PsiUtil.extractIterableTypeParameter(psiType,false);
            if (type != null) {
              return CompletionBundle.message("completion.smart.aslist.hint",shortcut,type.getPresentableText());
            }
          }
        }
      }
      if (CompletionUtil.shouldShowFeature(parameters,JavaCompletionFeatures.SECOND_SMART_COMPLETION_ASLIST)) {
        final String shortcut=getActionShortcut(IdeActions.ACTION_SMART_TYPE_COMPLETION);
        if (shortcut != null) {
          for (          final PsiType psiType : psiTypes) {
            if (psiType instanceof PsiArrayType) {
              final PsiType componentType=((PsiArrayType)psiType).getComponentType();
              if (!(componentType instanceof PsiPrimitiveType)) {
                return CompletionBundle.message("completion.smart.toar.hint",shortcut,componentType.getPresentableText());
              }
            }
          }
        }
      }
      if (CompletionUtil.shouldShowFeature(parameters,JavaCompletionFeatures.SECOND_SMART_COMPLETION_CHAIN)) {
        final String shortcut=getActionShortcut(IdeActions.ACTION_SMART_TYPE_COMPLETION);
        if (shortcut != null) {
          return CompletionBundle.message("completion.smart.chain.hint",shortcut);
        }
      }
    }
  }
  return null;
}
