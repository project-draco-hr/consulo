{
  Pair<ModelWithValidity,List<Profile>> readResult=doReadProjectModel(generalSettings,file,activeProfiles,new THashSet<VirtualFile>(),locator);
  File basedir=getBaseDir(file);
  Model model=expandProperties(readResult.first.model,basedir);
  alignModel(model,basedir);
  MavenProject mavenProject=new MavenProject(model);
  mavenProject.setFile(new File(file.getPath()));
  mavenProject.setActiveProfiles(readResult.second);
  JBMavenProjectHelper.setSourceRoots(mavenProject,Collections.singletonList(model.getBuild().getSourceDirectory()),Collections.singletonList(model.getBuild().getTestSourceDirectory()),Collections.singletonList(model.getBuild().getScriptSourceDirectory()));
  boolean isValid=readResult.first.validity;
  List<MavenProjectProblem> problems=new ArrayList<MavenProjectProblem>();
  if (!isValid) {
    problems.add(new MavenProjectProblem(ProjectBundle.message("maven.project.problem.syntaxError"),true));
  }
  return new MavenProjectReaderResult(isValid,activeProfiles,problems,Collections.EMPTY_SET,generalSettings.getEffectiveLocalRepository(),mavenProject);
}
