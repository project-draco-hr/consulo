{
  List<Profile> activated=new ArrayList<Profile>();
  List<Profile> activeByDefault=new ArrayList<Profile>();
  ProfileActivationContext context=new DefaultProfileActivationContext(MavenUtil.getSystemProperties(),true);
  List<Profile> rawProfiles=model.getProfiles();
  List<Profile> expandedProfiles=null;
  for (int i=0; i < rawProfiles.size(); i++) {
    Profile eachRawProfile=rawProfiles.get(i);
    if (profiles.contains(eachRawProfile.getId())) {
      activated.add(eachRawProfile);
    }
    Activation activation=eachRawProfile.getActivation();
    if (activation == null)     continue;
    if (activation.isActiveByDefault()) {
      activeByDefault.add(eachRawProfile);
    }
    ProfileActivator[] activators=new ProfileActivator[]{new FileProfileActivator(),new SystemPropertyProfileActivator(),new JdkPrefixProfileActivator(),new OperatingSystemProfileActivator()};
    if (expandedProfiles == null)     expandedProfiles=expandProperties(model,basedir).getProfiles();
    Profile eachExpandedProfile=expandedProfiles.get(i);
    for (    ProfileActivator eachActivator : activators) {
      try {
        if (eachActivator.canDetermineActivation(eachExpandedProfile,context) && eachActivator.isActive(eachExpandedProfile,context)) {
          activated.add(eachRawProfile);
        }
      }
 catch (      ProfileActivationException e) {
        MavenLog.LOG.warn(e);
      }
    }
  }
  List<Profile> result=activated.isEmpty() ? activeByDefault : activated;
  for (  Profile each : result) {
    new DefaultProfileInjector().inject(each,model);
  }
  return result;
}
