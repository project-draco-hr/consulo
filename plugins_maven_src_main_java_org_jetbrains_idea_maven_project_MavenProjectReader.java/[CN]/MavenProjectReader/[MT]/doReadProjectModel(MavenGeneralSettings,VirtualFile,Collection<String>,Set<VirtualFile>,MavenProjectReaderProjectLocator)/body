{
  RawModelReadResult cachedModel=myRawModelsCache.get(file);
  if (cachedModel == null) {
    cachedModel=doReadProjectModel(file,false);
    myRawModelsCache.put(file,cachedModel);
  }
  MavenModel model=cachedModel.model;
  Set<String> alwaysOnProfiles=cachedModel.alwaysOnProfiles;
  Collection<MavenProjectProblem> problems=cachedModel.problems;
  model=resolveInheritance(generalSettings,model,file,explicitProfiles,recursionGuard,locator,problems);
  addSettingsProfiles(generalSettings,model,alwaysOnProfiles,problems);
  ProfileApplicationResult applied=applyProfiles(model,getBaseDir(file),explicitProfiles,alwaysOnProfiles);
  model=applied.getModel();
  repairModelBody(model);
  return new Pair<RawModelReadResult,Collection<String>>(new RawModelReadResult(model,problems,alwaysOnProfiles),applied.getActivatedProfiles());
}
