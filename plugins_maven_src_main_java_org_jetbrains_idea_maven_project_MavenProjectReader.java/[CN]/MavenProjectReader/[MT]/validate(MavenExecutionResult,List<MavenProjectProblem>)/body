{
  for (  Exception each : (List<Exception>)r.getExceptions()) {
    MavenLog.LOG.info(each);
    if (each instanceof InvalidProjectModelException) {
      ModelValidationResult modelValidationResult=((InvalidProjectModelException)each).getValidationResult();
      if (modelValidationResult != null) {
        for (        Object eachValidationProblem : modelValidationResult.getMessages()) {
          problems.add(new MavenProjectProblem((String)eachValidationProblem,true));
        }
      }
 else {
        problems.add(new MavenProjectProblem(each.getCause().getMessage(),true));
      }
    }
 else     if (each instanceof MissingModuleException) {
      problems.add(new MavenProjectProblem(ProjectBundle.message("maven.project.problem.missingModule",((MissingModuleException)each).getModuleName()),false));
    }
 else     if (each instanceof ExtensionScanningException) {
      String causeMessage;
      if (each.getCause() instanceof ProjectBuildingException) {
        if (each.getCause().getCause() != null) {
          causeMessage=each.getCause().getCause().getMessage();
        }
 else {
          causeMessage=each.getCause().getMessage();
        }
      }
 else {
        causeMessage=each.getMessage();
      }
      problems.add(new MavenProjectProblem(causeMessage,true));
    }
 else     if (each instanceof ProjectBuildingException) {
      String causeMessage=each.getCause() != null ? each.getCause().getMessage() : each.getMessage();
      problems.add(new MavenProjectProblem(causeMessage,true));
    }
 else {
      problems.add(new MavenProjectProblem(each.getMessage(),true));
    }
  }
  List<Exception> ee=new ArrayList<Exception>();
  ArtifactResolutionResult resolutionResult=r.getArtifactResolutionResult();
  if (resolutionResult != null) {
    ee.addAll(resolutionResult.getCircularDependencyExceptions());
    ee.addAll(resolutionResult.getMetadataResolutionExceptions());
    ee.addAll(resolutionResult.getVersionRangeViolations());
    ee.addAll(resolutionResult.getErrorArtifactExceptions());
  }
  for (  Exception each : ee) {
    problems.add(new MavenProjectProblem(each.getMessage(),false));
    MavenLog.LOG.info(each);
  }
  return ee.isEmpty();
}
