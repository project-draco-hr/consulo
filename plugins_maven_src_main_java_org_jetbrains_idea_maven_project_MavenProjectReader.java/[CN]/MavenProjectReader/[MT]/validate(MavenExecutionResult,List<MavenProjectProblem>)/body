{
  for (  Exception each : r.getExceptions()) {
    MavenLog.LOG.info(each);
    if (each instanceof InvalidProjectModelException) {
      ModelValidationResult modelValidationResult=((InvalidProjectModelException)each).getValidationResult();
      if (modelValidationResult != null) {
        for (        Object eachValidationProblem : modelValidationResult.getMessages()) {
          problems.add(new MavenProjectProblem((String)eachValidationProblem,true));
        }
      }
 else {
        problems.add(new MavenProjectProblem(each.getCause().getMessage(),true));
      }
    }
 else     if (each instanceof ProjectBuildingException) {
      String causeMessage=each.getCause() != null ? each.getCause().getMessage() : each.getMessage();
      problems.add(new MavenProjectProblem(causeMessage,true));
    }
 else {
      problems.add(new MavenProjectProblem(each.getMessage(),true));
    }
  }
  List<Exception> ee=new ArrayList<Exception>();
  for (  Exception each : ee) {
    problems.add(new MavenProjectProblem(each.getMessage(),false));
    MavenLog.LOG.info(each);
  }
  return ee.isEmpty();
}
