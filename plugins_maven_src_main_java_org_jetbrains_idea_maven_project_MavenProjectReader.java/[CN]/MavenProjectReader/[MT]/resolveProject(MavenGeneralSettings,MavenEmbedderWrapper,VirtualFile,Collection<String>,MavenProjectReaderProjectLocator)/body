{
  MavenProject mavenProject=null;
  Collection<MavenProjectProblem> problems=createProblemsList();
  Set<MavenId> unresolvedArtifactsIds=new THashSet<MavenId>();
  try {
    Pair<MavenProject,Set<MavenId>> result=doResolveProject(embedder,file,explicitProfiles,problems);
    mavenProject=result.first;
    unresolvedArtifactsIds=result.second;
  }
 catch (  MavenProcessCanceledException e) {
    throw e;
  }
catch (  Throwable e) {
    String message=e.getMessage();
    if (e instanceof RuntimeException && e.getCause() != null) {
      message=e.getCause().getMessage();
    }
    if (message != null) {
      problems.add(createStructureProblem(file,message));
    }
    MavenLog.LOG.info(e);
    MavenLog.printInTests(e);
  }
  if (mavenProject == null) {
    if (problems.isEmpty()) {
      problems.add(createSyntaxProblem(file,MavenProjectProblem.ProblemType.SYNTAX));
    }
    mavenProject=readProject(generalSettings,file,explicitProfiles,locator).nativeMavenProject;
  }
  return new MavenProjectReaderResult(generalSettings,problems,unresolvedArtifactsIds,embedder.getLocalRepositoryFile(),mavenProject);
}
