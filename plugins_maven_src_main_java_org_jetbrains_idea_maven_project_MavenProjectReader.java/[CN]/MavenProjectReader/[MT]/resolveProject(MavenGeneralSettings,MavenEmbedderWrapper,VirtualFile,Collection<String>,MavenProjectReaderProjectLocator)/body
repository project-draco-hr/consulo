{
  try {
    MavenWrapperExecutionResult result=embedder.resolveProject(file,explicitProfiles);
    if (result.projectData == null) {
      MavenProjectReaderResult temp=readProject(generalSettings,file,explicitProfiles,locator);
      temp.readingProblems.addAll(result.problems);
      temp.unresolvedArtifactIds.addAll(result.unresolvedArtifacts);
      return temp;
    }
    return new MavenProjectReaderResult(result.projectData.mavenModel,result.projectData.mavenModelMap,result.projectData.activatedProfiles,result.projectData.nativeMavenProject,result.problems,result.unresolvedArtifacts);
  }
 catch (  MavenProcessCanceledException e) {
    throw e;
  }
catch (  Throwable e) {
    MavenLog.LOG.info(e);
    MavenLog.printInTests(e);
    MavenProjectReaderResult result=readProject(generalSettings,file,explicitProfiles,locator);
    String message=e.getMessage();
    if (message != null) {
      result.readingProblems.add(MavenProjectProblem.createStructureProblem(file.getPath(),message));
    }
 else {
      result.readingProblems.add(MavenProjectProblem.createSyntaxProblem(file.getPath(),MavenProjectProblem.ProblemType.SYNTAX));
    }
    return result;
  }
}
