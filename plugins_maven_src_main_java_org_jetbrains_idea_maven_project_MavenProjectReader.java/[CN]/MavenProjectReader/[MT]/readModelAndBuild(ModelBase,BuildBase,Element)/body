{
  mavenModelBase.setModules(MavenJDOMUtil.findChildrenValuesByPath(xmlModel,"modules","module"));
  collectProperties(MavenJDOMUtil.findChildByPath(xmlModel,"properties"),mavenModelBase);
  Element xmlBuild=MavenJDOMUtil.findChildByPath(xmlModel,"build");
  if (xmlBuild == null)   return;
  mavenBuildBase.setFinalName(MavenJDOMUtil.findChildValueByPath(xmlBuild,"finalName"));
  mavenBuildBase.setDefaultGoal(MavenJDOMUtil.findChildValueByPath(xmlBuild,"defaultGoal"));
  mavenBuildBase.setDirectory(MavenJDOMUtil.findChildValueByPath(xmlBuild,"directory"));
  mavenBuildBase.setResources(collectResources(MavenJDOMUtil.findChildrenByPath(xmlBuild,"resources","resource")));
  mavenBuildBase.setTestResources(collectResources(MavenJDOMUtil.findChildrenByPath(xmlBuild,"testResources","testResource")));
  if (mavenBuildBase instanceof Build) {
    Build mavenBuild=(Build)mavenBuildBase;
    mavenBuild.setSourceDirectory(MavenJDOMUtil.findChildValueByPath(xmlBuild,"sourceDirectory"));
    mavenBuild.setTestSourceDirectory(MavenJDOMUtil.findChildValueByPath(xmlBuild,"testSourceDirectory"));
    mavenBuild.setScriptSourceDirectory(MavenJDOMUtil.findChildValueByPath(xmlBuild,"scriptSourceDirectory"));
    mavenBuild.setOutputDirectory(MavenJDOMUtil.findChildValueByPath(xmlBuild,"outputDirectory"));
    mavenBuild.setTestOutputDirectory(MavenJDOMUtil.findChildValueByPath(xmlBuild,"testOutputDirectory"));
  }
}
