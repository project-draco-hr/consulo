{
  final GrExpression rop=binaryExpression.getRightOperand();
  PsiType rType=rop == null ? null : rop.getType();
  if (lType == null || rType == null)   return null;
  String lCanonical=lType.getCanonicalText();
  String rCanonical=rType.getCanonicalText();
  if (TYPE_TO_RANK.containsKey(lCanonical) && TYPE_TO_RANK.containsKey(rCanonical)) {
    int lRank=TYPE_TO_RANK.get(lCanonical);
    int rRank=TYPE_TO_RANK.get(rCanonical);
    int resultRank=Math.max(lRank,rRank);
    String qName=RANK_TO_TYPE.get(resultRank);
    GlobalSearchScope scope=binaryExpression.getResolveScope();
    if (qName == null)     return null;
    return JavaPsiFacade.getInstance(binaryExpression.getProject()).getElementFactory().createTypeByFQClassName(qName,scope);
  }
  final PsiType type=getOverloadedOperatorType(lType,binaryExpression.getOperationTokenType(),binaryExpression,new PsiType[]{rType});
  if (type != null) {
    return type;
  }
  if (typeEqualsToText(rType,GrStringUtil.GROOVY_LANG_GSTRING)) {
    PsiType gstringType=JavaPsiFacade.getInstance(binaryExpression.getProject()).getElementFactory().createTypeByFQClassName(GrStringUtil.GROOVY_LANG_GSTRING,binaryExpression.getResolveScope());
    return getOverloadedOperatorType(lType,binaryExpression.getOperationTokenType(),binaryExpression,new PsiType[]{gstringType});
  }
  return null;
}
