{
  if (lType == null || rType == null) {
    return false;
  }
  if (rType instanceof PsiIntersectionType) {
    for (    PsiType child : ((PsiIntersectionType)rType).getConjuncts()) {
      if (isAssignable(lType,child,context)) {
        return true;
      }
    }
    return false;
  }
  if (lType instanceof PsiIntersectionType) {
    for (    PsiType child : ((PsiIntersectionType)lType).getConjuncts()) {
      if (!isAssignable(child,rType,context)) {
        return false;
      }
    }
    return true;
  }
  if (rType == PsiType.NULL) {
    return !(lType instanceof PsiPrimitiveType);
  }
  if (isAssignableWithoutConversions(lType,rType,context)) {
    return true;
  }
  if (context instanceof GroovyPsiElement) {
    for (    GrTypeConverter converter : GrTypeConverter.EP_NAME.getExtensions()) {
      if (converter.isAllowedInMethodCall()) {
        final Boolean result=converter.isConvertible(lType,rType,(GroovyPsiElement)context);
        if (result != null) {
          return result;
        }
      }
    }
  }
  return false;
}
