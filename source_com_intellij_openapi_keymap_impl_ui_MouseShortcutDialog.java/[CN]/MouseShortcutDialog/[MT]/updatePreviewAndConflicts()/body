{
  if (myButton == -1 || myModifiers == -1) {
    return;
  }
  myTarConflicts.setText(null);
  myLblPreview.setText(KeymapUtil.getMouseShortcutText(myButton,myModifiers,myRbSingleClick.isSelected() ? 1 : 2) + " ");
  final MouseShortcut mouseShortcut;
  if (myRbSingleClick.isSelected()) {
    mouseShortcut=new MouseShortcut(myButton,myModifiers,1);
  }
 else {
    mouseShortcut=new MouseShortcut(myButton,myModifiers,2);
  }
  StringBuffer buffer=new StringBuffer();
  String[] actionIds=myKeymap.getActionIds(mouseShortcut);
  for (int i=0; i < actionIds.length; i++) {
    String actionId=actionIds[i];
    if (actionId.equals(myActionId)) {
      continue;
    }
    String actionPath=myMainGroup.getActionQualifiedPath(actionId);
    if (actionPath == null) {
      continue;
    }
    Shortcut[] shortcuts=myKeymap.getShortcuts(actionId);
    for (int j=0; j < shortcuts.length; j++) {
      if (!(shortcuts[j] instanceof MouseShortcut)) {
        continue;
      }
      MouseShortcut shortcut=(MouseShortcut)shortcuts[j];
      if (shortcut.getButton() != mouseShortcut.getButton() || shortcut.getModifiers() != mouseShortcut.getModifiers()) {
        continue;
      }
      if (buffer.length() > 1) {
        buffer.append('\n');
      }
      buffer.append('[');
      buffer.append(actionPath);
      buffer.append(']');
      break;
    }
  }
  if (buffer.length() == 0) {
    myTarConflicts.setForeground(UIManager.getColor("TextArea.foreground"));
    myTarConflicts.setText("No conflicts");
  }
 else {
    myTarConflicts.setForeground(Color.red);
    myTarConflicts.setText("Assigned to " + buffer.toString());
  }
}
