{
  if (myImplicitMethod != null)   return myImplicitMethod;
  final String type=getType();
  String staticModifier=null;
  Boolean isStatic=isStatic();
  if (isStatic != null && isStatic.booleanValue()) {
    staticModifier=PsiModifier.STATIC;
  }
  final String[] argumentsTypes=QuickfixUtil.getArgumentsTypes(myPairs);
  final GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(manager.getProject());
  final GrMethod method=factory.createMethodFromText(staticModifier,getName(),type,argumentsTypes,null);
  myImplicitMethod=new GrDynamicImplicitMethod(manager,method,containingClassName){
    @Override public PsiElement setName(    @NotNull String name) throws IncorrectOperationException {
      DynamicManager.getInstance(getProject()).replaceDynamicMethodName(containingClassName,getName(),name,argumentsTypes);
      return super.setName(name);
    }
  }
;
  return myImplicitMethod;
}
