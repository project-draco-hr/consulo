{
  final PsiLanguageInjectionHost host=(PsiLanguageInjectionHost)context;
  final ElementManipulator<PsiLanguageInjectionHost> manipulator=ElementManipulators.getManipulator(host);
  if (manipulator == null)   return;
  final PsiLanguageInjectionHost originalHost=PsiUtilBase.getOriginalElement(host,host.getClass());
  final List<TemporaryPlacesRegistry.TemporaryPlace> list=TemporaryPlacesRegistry.getInstance(context.getProject()).getTempInjectionsSafe(originalHost);
  for (  final TemporaryPlacesRegistry.TemporaryPlace place : list) {
    LOG.assertTrue(place.language != null,"Language should not be NULL");
    InjectorUtils.registerInjection(place.language.getLanguage(),Collections.singletonList(Trinity.create(host,place.language,manipulator.getRangeInElement(host))),context.getContainingFile(),registrar);
  }
}
