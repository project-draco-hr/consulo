{
  myFocusedCallback=new ActionCallback();
  if (myProject != null) {
    IdeFocusManager.getInstance(myProject).typeAheadUntil(myFocusedCallback);
  }
  final Window frame=getFrame();
  if (myStatusBar != null) {
    myStatusBar.install((IdeFrame)frame);
  }
  myFocusTrackback=new FocusTrackback(this,IdeFocusManager.findInstance().getFocusOwner(),true);
  if (frame instanceof JFrame) {
    ((JFrame)frame).setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
  }
 else {
    ((JDialog)frame).setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
  }
  WindowAdapter focusListener=new WindowAdapter(){
    public void windowOpened(    WindowEvent e){
      IdeFocusManager fm=IdeFocusManager.getInstance(myProject);
      JComponent toFocus=myPreferedFocus;
      if (toFocus == null) {
        toFocus=fm.getFocusTargetFor(myComponent);
      }
      if (toFocus != null) {
        fm.requestFocus(toFocus,true).notify(myFocusedCallback);
      }
 else {
        myFocusedCallback.setRejected();
      }
    }
  }
;
  frame.addWindowListener(focusListener);
  if (myCloseOnEsc)   addCloseOnEsc((RootPaneContainer)frame);
  ((RootPaneContainer)frame).getContentPane().add(myComponent,BorderLayout.CENTER);
  if (frame instanceof JFrame) {
    ((JFrame)frame).setTitle(myTitle);
  }
 else {
    ((JDialog)frame).setTitle(myTitle);
  }
  frame.setIconImage(myImage);
  if (restoreBounds) {
    loadFrameState();
  }
  myFocusWatcher=new FocusWatcher(){
    protected void focusLostImpl(    final FocusEvent e){
      myFocusTrackback.consume();
    }
  }
;
  myFocusWatcher.install(myComponent);
  myShown=true;
  frame.setVisible(true);
  if (UIUtil.isUnderAlloyLookAndFeel() && frame instanceof JFrame) {
    ((JFrame)frame).setMaximizedBounds(null);
  }
}
