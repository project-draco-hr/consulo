{
  super(tree,(DefaultTreeModel)tree.getModel(),structure instanceof FilteringTreeStructure ? structure : new FilteringTreeStructure(project,filter,structure),comparator);
  myTree=tree;
  initRootNode();
  if (filter instanceof ElementFilter.Active) {
    ((ElementFilter.Active)filter).addListener(new ElementFilter.Listener(){
      public ActionCallback update(      final Object preferredSelection,      final boolean adjustSelection,      final boolean now){
        return refilter(preferredSelection,adjustSelection,now);
      }
    }
,this);
  }
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      TreePath newPath=e.getNewLeadSelectionPath();
      if (newPath != null) {
        Object element=getElementFor(newPath.getLastPathComponent());
        if (element != null) {
          myLastSuccessfulSelect=element;
        }
      }
    }
  }
);
}
