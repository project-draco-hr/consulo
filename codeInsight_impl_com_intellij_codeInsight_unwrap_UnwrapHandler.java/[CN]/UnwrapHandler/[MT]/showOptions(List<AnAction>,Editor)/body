{
  if (options.isEmpty())   return;
  if (options.size() == 1) {
    options.get(0).actionPerformed(null);
    return;
  }
  DefaultActionGroup group=new DefaultActionGroup();
  for (  AnAction each : options) {
    group.add(each);
  }
  final ScopeHighlighter highlighter=new ScopeHighlighter(editor);
  DataContext context=DataManager.getInstance().getDataContext(editor.getContentComponent());
  ListPopup popup=JBPopupFactory.getInstance().createActionGroupPopup("Choose statement to remove",group,context,JBPopupFactory.ActionSelectionAid.NUMBERING,false,new Runnable(){
    public void run(){
      highlighter.dropHighlight();
    }
  }
,-1);
  final ListPopupImpl impl=(ListPopupImpl)popup;
  impl.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      MyAnAction action=(MyAnAction)options.get(impl.getSelectionIndex());
      highlighter.highlight(action.getElement());
    }
  }
);
  popup.showInBestPositionFor(editor);
  MyAnAction action=(MyAnAction)options.get(impl.getSelectionIndex());
  highlighter.highlight(action.getElement());
}
