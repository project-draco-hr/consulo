{
  JPanel findOptionsPanel=new JPanel();
  findOptionsPanel.setBorder(IdeBorderFactory.createTitledBorder(FindBundle.message("find.options.group"),true));
  findOptionsPanel.setLayout(new BoxLayout(findOptionsPanel,BoxLayout.Y_AXIS));
  myCbCaseSensitive=createCheckbox(FindBundle.message("find.options.case.sensitive"));
  findOptionsPanel.add(myCbCaseSensitive);
  if (myModel.isReplaceState()) {
    myCbPreserveCase=createCheckbox(FindBundle.message("find.options.replace.preserve.case"));
    findOptionsPanel.add(myCbPreserveCase);
  }
  myCbWholeWordsOnly=createCheckbox(FindBundle.message("find.options.whole.words.only"));
  findOptionsPanel.add(myCbWholeWordsOnly);
  myCbRegularExpressions=createCheckbox(FindBundle.message("find.options.regular.expressions"));
  final JPanel regExPanel=new JPanel();
  regExPanel.setAlignmentX(Component.LEFT_ALIGNMENT);
  regExPanel.setLayout(new BoxLayout(regExPanel,BoxLayout.X_AXIS));
  regExPanel.add(myCbRegularExpressions);
  regExPanel.add(new LinkLabel("[Help]",null,new LinkListener(){
    @Override public void linkSelected(    LinkLabel aSource,    Object aLinkData){
      try {
        final JBPopup helpPopup=RegExHelpPopup.createRegExHelpPopup();
        helpPopup.showInCenterOf(regExPanel);
      }
 catch (      BadLocationException e) {
        LOG.info(e);
      }
    }
  }
));
  findOptionsPanel.add(regExPanel);
  myCbInCommentsOnly=createCheckbox(FindBundle.message("find.options.comments.only"));
  myCbInStringLiteralsOnly=createCheckbox(FindBundle.message("find.options.string.literals.only"));
  if (FindManagerImpl.ourHasSearchInCommentsAndLiterals) {
    findOptionsPanel.add(myCbInCommentsOnly);
    findOptionsPanel.add(myCbInStringLiteralsOnly);
  }
  ActionListener actionListener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateControls();
    }
  }
;
  myCbRegularExpressions.addActionListener(actionListener);
  myCbRegularExpressions.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    final ItemEvent e){
      setupRegExpSetting();
    }
  }
);
  if (myModel.isReplaceState()) {
    myCbCaseSensitive.addActionListener(actionListener);
    myCbPreserveCase.addActionListener(actionListener);
  }
  return findOptionsPanel;
}
