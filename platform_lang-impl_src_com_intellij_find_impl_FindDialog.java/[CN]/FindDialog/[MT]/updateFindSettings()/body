{
  FindSettings findSettings=FindSettings.getInstance();
  findSettings.setCaseSensitive(myModel.isCaseSensitive());
  if (myModel.isReplaceState()) {
    findSettings.setPreserveCase(myModel.isPreserveCase());
  }
  findSettings.setWholeWordsOnly(myModel.isWholeWordsOnly());
  boolean saveContextBetweenRestarts=false;
  findSettings.setInStringLiteralsOnly(saveContextBetweenRestarts && myModel.isInStringLiteralsOnly());
  findSettings.setInCommentsOnly(saveContextBetweenRestarts && myModel.isInCommentsOnly());
  findSettings.setExceptComments(saveContextBetweenRestarts && myModel.isExceptComments());
  findSettings.setExceptStringLiterals(saveContextBetweenRestarts && myModel.isExceptStringLiterals());
  findSettings.setExceptCommentsAndLiterals(saveContextBetweenRestarts && myModel.isExceptCommentsAndStringLiterals());
  findSettings.setRegularExpressions(myModel.isRegularExpressions());
  if (!myModel.isMultipleFiles()) {
    findSettings.setForward(myModel.isForward());
    findSettings.setFromCursor(myModel.isFromCursor());
    findSettings.setGlobal(myModel.isGlobal());
  }
 else {
    String directoryName=myModel.getDirectoryName();
    if (directoryName != null && !directoryName.isEmpty()) {
      findSettings.setWithSubdirectories(myModel.isWithSubdirectories());
    }
 else     if (myRbModule.isSelected()) {
    }
 else     if (myRbCustomScope.isSelected()) {
      SearchScope selectedScope=myScopeCombo.getSelectedScope();
      String customScopeName=selectedScope == null ? null : selectedScope.getDisplayName();
      findSettings.setCustomScope(customScopeName);
    }
  }
  if (myCbToSkipResultsWhenOneUsage != null) {
    findSettings.setSkipResultsWithOneUsage(isSkipResultsWhenOneUsage());
  }
  findSettings.setFileMask(myModel.getFileFilter());
}
