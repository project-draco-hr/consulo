{
  final File outputRoot=rd.getTarget().getOutputDir();
  if (outputRoot == null) {
    return;
  }
  final String sourceRootPath=FileUtil.toSystemIndependentName(rd.getRootFile().getAbsolutePath());
  final String relativePath=FileUtil.getRelativePath(sourceRootPath,FileUtil.toSystemIndependentName(file.getPath()),'/');
  final String prefix=rd.getPackagePrefix();
  final StringBuilder targetPath=new StringBuilder();
  targetPath.append(FileUtil.toSystemIndependentName(outputRoot.getPath()));
  if (prefix.length() > 0) {
    targetPath.append('/').append(prefix.replace('.','/'));
  }
  targetPath.append('/').append(relativePath);
  final String outputPath=targetPath.toString();
  final File targetFile=new File(outputPath);
  FileUtil.copyContent(file,targetFile);
  try {
    outputConsumer.registerOutputFile(targetFile,Collections.singletonList(file.getPath()));
  }
 catch (  Exception e) {
    context.processMessage(new CompilerMessage(BUILDER_NAME,e));
  }
}
