{
  myBrowser.reset();
  myInLoad=true;
  myBrowser.setLoading(true);
  ProgressManager.getInstance().run(new Task.Backgroundable(myProject,"Loading changes",true,BackgroundFromStartOption.getInstance()){
    public void run(    @NotNull final ProgressIndicator indicator){
      try {
        final AsynchConsumer<List<CommittedChangeList>> appender=new AsynchConsumer<List<CommittedChangeList>>(){
          public void finished(){
          }
          public void consume(          final List<CommittedChangeList> list){
            new AbstractCalledLater(myProject,ModalityState.stateForComponent(myBrowser)){
              public void run(){
                myBrowser.append(list);
              }
            }
.callMe();
          }
        }
;
        final BufferedListConsumer<CommittedChangeList> bufferedListConsumer=new BufferedListConsumer<CommittedChangeList>(30,appender,-1);
        myProvider.loadCommittedChanges(mySettings,myLocation,myMaxCount,new AsynchConsumer<CommittedChangeList>(){
          public void finished(){
            bufferedListConsumer.flush();
          }
          public void consume(          CommittedChangeList committedChangeList){
            if (myDisposed) {
              indicator.cancel();
            }
            ProgressManager.checkCanceled();
            bufferedListConsumer.consumeOne(committedChangeList);
          }
        }
);
      }
 catch (      final VcsException e) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            LOG.info(e);
            Messages.showErrorDialog(myProject,"Error refreshing view: " + StringUtil.join(e.getMessages(),"\n"),"Committed Changes");
          }
        }
);
      }
 finally {
        myInLoad=false;
        myBrowser.setLoading(false);
      }
    }
  }
);
}
