{
  if (myData != null) {
    return;
  }
  ObjectInputStream oIn=null;
  try {
    oIn=new ObjectInputStream(new ByteArrayInputStream(myRawData)){
      @Override protected Class<?> resolveClass(      ObjectStreamClass desc) throws IOException, ClassNotFoundException {
        String name=desc.getName();
        for (        ClassLoader loader : loaders) {
          try {
            return loader.loadClass(name);
          }
 catch (          ClassNotFoundException e) {
          }
        }
        return super.resolveClass(desc);
      }
    }
;
    myData=(T)oIn.readObject();
    myRawData=null;
  }
 catch (  IOException e) {
    throw new IllegalStateException("Can't deserialize target data of key " + myKey);
  }
catch (  ClassNotFoundException e) {
    throw new IllegalStateException("Can't deserialize target data of key " + myKey);
  }
 finally {
    StreamUtil.closeStream(oIn);
  }
}
