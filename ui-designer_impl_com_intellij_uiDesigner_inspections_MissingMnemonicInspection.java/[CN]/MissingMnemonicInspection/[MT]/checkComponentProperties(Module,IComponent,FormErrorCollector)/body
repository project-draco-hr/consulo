{
  IProperty textProperty=DuplicateMnemonicInspection.findProperty(component,SwingProperties.TEXT);
  if (textProperty != null) {
    Object propValue=textProperty.getPropertyValue(component);
    if (propValue instanceof StringDescriptor) {
      StringDescriptor descriptor=(StringDescriptor)propValue;
      String value;
      if (component instanceof RadComponent) {
        value=ReferenceUtil.resolve((RadComponent)component,descriptor);
      }
 else {
        value=ReferenceUtil.resolve(module,descriptor,null);
      }
      SupportCode.TextWithMnemonic twm=SupportCode.parseText(value);
      if (twm.myMnemonicIndex < 0) {
        if (FormInspectionUtil.isComponentClass(module,component,JButton.class)) {
          collector.addError(getID(),textProperty,UIDesignerBundle.message("inspection.missing.mnemonics.message",value),new MyEditorQuickFixProvider());
        }
 else         if (FormInspectionUtil.isComponentClass(module,component,JLabel.class)) {
          IProperty labelForProperty=DuplicateMnemonicInspection.findProperty(component,SwingProperties.LABEL_FOR);
          if (labelForProperty != null && !StringUtil.isEmpty((String)labelForProperty.getPropertyValue(component))) {
            collector.addError(getID(),textProperty,UIDesignerBundle.message("inspection.missing.mnemonics.message",value),new MyEditorQuickFixProvider());
          }
        }
      }
    }
  }
}
