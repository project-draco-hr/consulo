{
  this(suggestedNames,project,fileType);
  if (editor == null)   return;
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      final int offset=editor.getCaretModel().getOffset();
      List<TextRange> ranges=new ArrayList<TextRange>();
      SelectWordUtil.addWordSelection(editor.getSettings().isCamelWords(),editor.getDocument().getCharsSequence(),offset,ranges);
      Editor myEditor=getEditor();
      if (myEditor == null)       return;
      for (      TextRange wordRange : ranges) {
        String word=editor.getDocument().getText().substring(wordRange.getStartOffset(),wordRange.getEndOffset());
        if (!word.equals(getEnteredName()))         continue;
        final SelectionModel selectionModel=editor.getSelectionModel();
        myEditor.getSelectionModel().removeSelection();
        int myOffset=offset - wordRange.getStartOffset();
        myEditor.getCaretModel().moveToOffset(myOffset);
        TextRange selected=new TextRange(selectionModel.getSelectionStart(),selectionModel.getSelectionEnd()).shiftRight(-wordRange.getStartOffset());
        selected=selected.intersection(new TextRange(0,myEditor.getDocument().getTextLength()));
        if (selectionModel.hasSelection() && selected != null && !selected.isEmpty()) {
          myEditor.getSelectionModel().setSelection(selected.getStartOffset(),selected.getEndOffset());
        }
 else {
          myEditor.getSelectionModel().setSelection(0,myEditor.getDocument().getTextLength());
        }
        break;
      }
    }
  }
);
}
