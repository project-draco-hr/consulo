{
  final JPanel result=new JPanel(new BorderLayout());
  result.setBackground(label.getBackground());
  result.add(label,BorderLayout.CENTER);
  final JPanel buttonsPanel=new JPanel();
  buttonsPanel.setOpaque(false);
  buttonsPanel.setLayout(new BoxLayout(buttonsPanel,BoxLayout.X_AXIS));
  if (configurationError.canBeFixed()) {
    buttonsPanel.add(new ToolbarAlikeButton(AllIcons.Actions.QuickfixBulb){
{
        setToolTipText("Fix error");
      }
      @Override public void onClick(      MouseEvent e){
        final Object o=myModel.getElementAt(0);
        if (o instanceof ConfigurationError) {
          ((ConfigurationError)o).fix(this,new RelativePoint(e));
          updateView();
          final Container ancestor=SwingUtilities.getAncestorOfClass(ConfigurationErrorsComponent.class,this);
          if (ancestor != null && ancestor instanceof JComponent) {
            ((JComponent)ancestor).revalidate();
            ancestor.repaint();
          }
        }
      }
    }
);
    buttonsPanel.add(Box.createHorizontalStrut(3));
  }
  buttonsPanel.add(new ToolbarAlikeButton(AllIcons.General.AutoscrollToSource){
{
      setToolTipText("Navigate to error");
    }
    @Override public void onClick(    MouseEvent e){
      final Object o=myModel.getElementAt(0);
      if (o instanceof ConfigurationError) {
        ((ConfigurationError)o).navigate();
      }
    }
  }
);
  buttonsPanel.add(Box.createHorizontalStrut(3));
  buttonsPanel.add(new ToolbarAlikeButton(AllIcons.Actions.Cancel){
{
      setToolTipText("Ignore error");
    }
    @Override public void onClick(    MouseEvent e){
      final Object o=myModel.getElementAt(0);
      if (o instanceof ConfigurationError) {
        final ConfigurationError error=(ConfigurationError)o;
        error.ignore(!error.isIgnored());
        myModel.update(error);
        updateView();
      }
    }
  }
);
  buttonsPanel.add(Box.createHorizontalStrut(5));
  result.add(buttonsPanel,BorderLayout.EAST);
  return result;
}
