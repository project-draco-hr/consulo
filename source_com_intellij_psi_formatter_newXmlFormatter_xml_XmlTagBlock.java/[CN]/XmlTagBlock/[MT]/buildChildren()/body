{
  ChameleonTransforming.transformChildren(myNode);
  ASTNode child=myNode.getFirstChildNode();
  final Formatter formatter=getFormatter();
  final Wrap attrWrap=formatter.createWrap(getWrapType(myXmlFormattingPolicy.getAttributesWrap()),false);
  final Wrap textWrap=formatter.createWrap(getWrapType(myXmlFormattingPolicy.getTextWrap()),true);
  final Wrap tagBeginWrap=createTagBeginWrapping(formatter);
  final Alignment attrAlignment=formatter.createAlignment();
  final Alignment textAlignment=formatter.createAlignment();
  final ArrayList<Block> result=new ArrayList<Block>();
  ArrayList<Block> localResult=new ArrayList<Block>();
  while (child != null) {
    if (!containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {
      Wrap wrap=chooseWrap(child,tagBeginWrap,attrWrap,textWrap);
      Alignment alignment=chooseAlignment(child,attrAlignment,textAlignment);
      if (child.getElementType() == ElementType.XML_TAG_END) {
        localResult.add(createChildBlock(child,wrap,alignment));
        result.add(createTagDescriptionNode(localResult));
        localResult=new ArrayList<Block>();
      }
 else       if (child.getElementType() == ElementType.XML_END_TAG_START) {
        if (!localResult.isEmpty()) {
          result.add(createTagContentNode(localResult));
          localResult=new ArrayList<Block>();
        }
        localResult.add(createChildBlock(child,wrap,alignment));
      }
 else       if (child.getElementType() == ElementType.XML_EMPTY_ELEMENT_END) {
        localResult.add(createChildBlock(child,wrap,alignment));
        result.add(createTagDescriptionNode(localResult));
      }
 else       if (child.getElementType() == ElementType.XML_TEXT) {
        createXmlTextBlocks(localResult,child,wrap,alignment);
      }
 else {
        localResult.add(createChildBlock(child,wrap,alignment));
      }
    }
    child=child.getTreeNext();
  }
  return result;
}
