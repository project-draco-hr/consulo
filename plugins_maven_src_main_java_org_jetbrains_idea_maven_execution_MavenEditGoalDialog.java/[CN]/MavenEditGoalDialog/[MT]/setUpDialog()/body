{
  JComponent goalComponent;
  if (myHistory == null) {
    goalsEditor=new EditorTextField("",myProject,PlainTextFileType.INSTANCE);
    goalComponent=goalsEditor;
    goalsLabel.setLabelFor(goalsEditor);
  }
 else {
    goalsComboBox=new ComboBox(myHistory.toArray(new String[myHistory.size()]),-1);
    goalComponent=goalsComboBox;
    goalsLabel.setLabelFor(goalsComboBox);
    goalsComboBox.setLightWeightPopupEnabled(false);
    EditorComboBoxEditor editor=new StringComboboxEditor(myProject,PlainTextFileType.INSTANCE,goalsComboBox);
    goalsComboBox.setRenderer(new EditorComboBoxRenderer(editor));
    goalsComboBox.setEditable(true);
    goalsComboBox.setEditor(editor);
    goalsComboBox.setFocusable(true);
    goalsEditor=editor.getEditorComponent();
  }
  goalsPanel.add(goalComponent);
  new MavenArgumentsCompletionProvider(myProject).apply(goalsEditor);
  MavenProjectsManager projectsManager=MavenProjectsManager.getInstance(myProject);
  showProjectTreeButton.setIcon(AllIcons.Actions.Module);
  MavenSelectProjectPopup.attachToWorkingDirectoryField(projectsManager,workDirectoryField.getTextField(),showProjectTreeButton,goalsComboBox != null ? goalsComboBox : goalsEditor);
  workDirectoryField.addBrowseFolderListener(RunnerBundle.message("maven.select.maven.project.file"),"",myProject,new FileChooserDescriptor(false,true,false,false,false,false){
    @Override public boolean isFileSelectable(    VirtualFile file){
      if (!super.isFileSelectable(file))       return false;
      return file.findChild(MavenConstants.POM_XML) != null;
    }
  }
);
}
