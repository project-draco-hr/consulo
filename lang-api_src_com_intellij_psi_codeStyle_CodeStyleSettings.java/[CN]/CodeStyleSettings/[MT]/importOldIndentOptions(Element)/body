{
  final List options=element.getChildren("option");
  for (  Object option1 : options) {
    @NonNls Element option=(Element)option1;
    @NonNls final String name=option.getAttributeValue("name");
    if ("TAB_SIZE".equals(name)) {
      final int value=Integer.valueOf(option.getAttributeValue("value")).intValue();
      JAVA_INDENT_OPTIONS.TAB_SIZE=value;
      JSP_INDENT_OPTIONS.TAB_SIZE=value;
      XML_INDENT_OPTIONS.TAB_SIZE=value;
      OTHER_INDENT_OPTIONS.TAB_SIZE=value;
    }
 else     if ("INDENT_SIZE".equals(name)) {
      final int value=Integer.valueOf(option.getAttributeValue("value")).intValue();
      JAVA_INDENT_OPTIONS.INDENT_SIZE=value;
      JSP_INDENT_OPTIONS.INDENT_SIZE=value;
      XML_INDENT_OPTIONS.INDENT_SIZE=value;
      OTHER_INDENT_OPTIONS.INDENT_SIZE=value;
    }
 else     if ("CONTINUATION_INDENT_SIZE".equals(name)) {
      final int value=Integer.valueOf(option.getAttributeValue("value")).intValue();
      JAVA_INDENT_OPTIONS.CONTINUATION_INDENT_SIZE=value;
      JSP_INDENT_OPTIONS.CONTINUATION_INDENT_SIZE=value;
      XML_INDENT_OPTIONS.CONTINUATION_INDENT_SIZE=value;
      OTHER_INDENT_OPTIONS.CONTINUATION_INDENT_SIZE=value;
    }
 else     if ("USE_TAB_CHARACTER".equals(name)) {
      final boolean value=Boolean.valueOf(option.getAttributeValue("value")).booleanValue();
      JAVA_INDENT_OPTIONS.USE_TAB_CHARACTER=value;
      JSP_INDENT_OPTIONS.USE_TAB_CHARACTER=value;
      XML_INDENT_OPTIONS.USE_TAB_CHARACTER=value;
      OTHER_INDENT_OPTIONS.USE_TAB_CHARACTER=value;
    }
 else     if ("SMART_TABS".equals(name)) {
      final boolean value=Boolean.valueOf(option.getAttributeValue("value")).booleanValue();
      JAVA_INDENT_OPTIONS.SMART_TABS=value;
      JSP_INDENT_OPTIONS.SMART_TABS=value;
      XML_INDENT_OPTIONS.SMART_TABS=value;
      OTHER_INDENT_OPTIONS.SMART_TABS=value;
    }
  }
}
