{
  final PsiElement psi=element.getPsi();
  if (psi == null || !psi.isValid()) {
    return range;
  }
  final PsiFile file=psi.getContainingFile();
  if (file == null) {
    return range;
  }
  final Project project=psi.getProject();
  final CommonCodeStyleSettings settings=CodeStyleSettingsManager.getInstance(project).getCurrentSettings().getCommonSettings(JavaLanguage.INSTANCE);
  if (!settings.ALIGN_GROUP_FIELD_DECLARATIONS) {
    return range;
  }
  final PsiElement startElement=file.findElementAt(range.getStartOffset());
  if (startElement == null) {
    return range;
  }
  final PsiField parent=PsiTreeUtil.getParentOfType(startElement,PsiField.class);
  if (parent == null) {
    return range;
  }
  int startToUse=range.getStartOffset();
  for (PsiElement f=parent; f != null; f=f.getPrevSibling()) {
    final ASTNode node=f.getNode();
    if (node == null) {
      break;
    }
    if (JavaJspElementType.WHITE_SPACE_BIT_SET.contains(node.getElementType()) || f instanceof PsiField) {
      startToUse=f.getTextRange().getStartOffset();
    }
 else     if (!ElementType.JAVA_COMMENT_BIT_SET.contains(node.getElementType())) {
      break;
    }
  }
  int endToUse=range.getEndOffset();
  for (PsiElement f=parent; f != null; f=f.getNextSibling()) {
    final ASTNode node=f.getNode();
    if (node == null) {
      break;
    }
    if (f instanceof PsiField) {
      endToUse=f.getTextRange().getEndOffset();
    }
 else     if (!JavaJspElementType.WHITE_SPACE_BIT_SET.contains(node.getElementType()) && !ElementType.JAVA_COMMENT_BIT_SET.contains(node.getElementType())) {
      break;
    }
  }
  return TextRange.from(startToUse,endToUse);
}
