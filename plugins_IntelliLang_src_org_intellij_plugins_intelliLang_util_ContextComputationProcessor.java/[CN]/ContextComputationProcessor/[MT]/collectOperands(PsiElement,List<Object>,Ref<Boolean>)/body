{
  final PsiElement firstChild;
  if (expression instanceof PsiParenthesizedExpression) {
    collectOperands(((PsiParenthesizedExpression)expression).getExpression(),result,unparsable);
  }
 else   if (expression instanceof PsiTypeCastExpression) {
    collectOperands(((PsiTypeCastExpression)expression).getOperand(),result,unparsable);
  }
 else   if (expression instanceof PsiConditionalExpression) {
    unparsable.set(Boolean.TRUE);
    collectOperands(((PsiConditionalExpression)expression).getThenExpression(),result,unparsable);
    collectOperands(((PsiConditionalExpression)expression).getElseExpression(),result,unparsable);
  }
 else   if (expression instanceof PsiBinaryExpression && ((PsiBinaryExpression)expression).getOperationSign().getTokenType() == JavaTokenType.PLUS) {
    PsiBinaryExpression binaryExpression=(PsiBinaryExpression)expression;
    collectOperands(binaryExpression.getLOperand(),result,unparsable);
    collectOperands(binaryExpression.getROperand(),result,unparsable);
  }
 else   if (PsiUtilEx.isStringOrCharacterLiteral(expression)) {
    result.add(expression);
  }
 else {
    final Object o=expression instanceof PsiExpression ? myEvaluationHelper.computeSimpleExpression((PsiExpression)expression) : null;
    if (o == null)     result.add(expression);
 else     addStringFragment(String.valueOf(o),result);
  }
}
