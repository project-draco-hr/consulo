{
  final PsiClass aClass=myJavaFacade.findClass(className);
  assertNotNull(aClass);
  final SearchScope scope;
  if (packageScopeName != null) {
    PsiJavaPackage aPackage=JavaPsiFacade.getInstance(myPsiManager.getProject()).findPackage(packageScopeName);
    scope=PackageScope.packageScope(aPackage,true).intersectWith(GlobalSearchScope.projectScope(myProject));
  }
 else {
    scope=GlobalSearchScope.projectScope(myProject);
  }
  final ArrayList<String> inheritorsList=new ArrayList<String>();
  ProgressManager.getInstance().runProcess(new Runnable(){
    @Override public void run(){
      ClassInheritorsSearch.search(aClass,scope,deep).forEach(new PsiElementProcessorAdapter<PsiClass>(new PsiElementProcessor<PsiClass>(){
        @Override public boolean execute(        @NotNull PsiClass element){
          inheritorsList.add(element.getQualifiedName());
          return true;
        }
      }
));
    }
  }
,null);
  assertSameElements(inheritorsList,inheritorNames);
}
