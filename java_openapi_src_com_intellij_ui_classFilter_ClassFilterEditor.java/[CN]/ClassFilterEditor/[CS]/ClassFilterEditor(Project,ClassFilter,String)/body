{
  super(new GridBagLayout());
  myPatternsHelpId=patternsHelpId;
  myAddClassButton=new JButton(getAddButtonText());
  myAddPatternButton=new JButton(getAddPatternButtonText());
  myRemoveButton=new JButton(UIBundle.message("button.remove"));
  myTable=new JBTable();
  JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(myTable);
  add(scrollPane,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,3,1.0,1.0,GridBagConstraints.CENTER,GridBagConstraints.BOTH,new Insets(4,0,4,6),0,0));
  add(myAddClassButton,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(4,0,0,0),0,0));
  add(myAddPatternButton,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(4,0,0,0),0,0));
  add(myRemoveButton,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(4,0,0,0),0,0));
  myChooserFilter=classFilter;
  myProject=project;
  myAddClassButton.setDefaultCapable(false);
  myAddPatternButton.setDefaultCapable(false);
  myRemoveButton.setDefaultCapable(false);
  myTableModel=new FilterTableModel();
  myTable.setModel(myTableModel);
  myTable.setShowGrid(false);
  myTable.setIntercellSpacing(new Dimension(0,0));
  myTable.setTableHeader(null);
  myTable.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
  myTable.setColumnSelectionAllowed(false);
  myTable.setPreferredScrollableViewportSize(new Dimension(200,100));
  TableColumnModel columnModel=myTable.getColumnModel();
  TableColumn column=columnModel.getColumn(FilterTableModel.CHECK_MARK);
  int width=new JCheckBox().getPreferredSize().width;
  column.setPreferredWidth(width);
  column.setMaxWidth(width);
  column.setCellRenderer(new EnabledCellRenderer(myTable.getDefaultRenderer(Boolean.class)));
  columnModel.getColumn(FilterTableModel.FILTER).setCellRenderer(new FilterCellRenderer());
  myTable.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myAddClassButton.doClick();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_INSERT,0),JComponent.WHEN_FOCUSED);
  myTable.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myRemoveButton.doClick();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0),JComponent.WHEN_FOCUSED);
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      myRemoveButton.setEnabled(myTable.getSelectedRow() > -1);
    }
  }
);
  myAddPatternButton.setEnabled(!myProject.isDefault());
  myAddPatternButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      addPatternFilter();
    }
  }
);
  myAddClassButton.setEnabled(!myProject.isDefault());
  myAddClassButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      addClassFilter();
    }
  }
);
  myRemoveButton.addActionListener(new RemoveAction());
  myRemoveButton.setEnabled(false);
  getEmptyText().setText(UIBundle.message("no.patterns"));
}
