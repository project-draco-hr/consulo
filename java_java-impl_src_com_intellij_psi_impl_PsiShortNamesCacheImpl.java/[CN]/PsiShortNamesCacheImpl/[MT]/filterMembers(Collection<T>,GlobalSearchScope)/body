{
  List<T> result=new ArrayList<T>();
  Set<PsiMember> set=new THashSet<PsiMember>(members.size(),new TObjectHashingStrategy<PsiMember>(){
    public int computeHashCode(    PsiMember member){
      int code=0;
      final PsiClass clazz=member.getContainingClass();
      if (clazz != null) {
        String name=clazz.getName();
        if (name != null) {
          code+=name.hashCode();
        }
 else {
          code+=clazz.hashCode();
        }
      }
      if (member instanceof PsiMethod) {
        code+=37 * ((PsiMethod)member).getParameterList().getParametersCount();
      }
      return code;
    }
    public boolean equals(    PsiMember object,    PsiMember object1){
      return myManager.areElementsEquivalent(object,object1);
    }
  }
);
  for (  T member : members) {
    ProgressManager.checkCanceled();
    if (!scope.contains(member.getContainingFile().getVirtualFile()))     continue;
    if (!set.add(member))     continue;
    result.add(member);
  }
  return result;
}
