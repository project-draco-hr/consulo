{
  final StringHashToCharSequencesMap r=new StringHashToCharSequencesMap(10,0.9f);
  r.add("==");
  r.add("!=");
  r.add("||");
  r.add("++");
  r.add("--");
  r.add("<");
  r.add("<=");
  r.add("<<=");
  r.add("<<");
  r.add(">");
  r.add("&");
  r.add("&&");
  r.add("+=");
  r.add("-=");
  r.add("*=");
  r.add("/=");
  r.add("&=");
  r.add("|=");
  r.add("^=");
  r.add("%=");
  r.add("(");
  r.add(")");
  r.add("{");
  r.add("}");
  r.add("[");
  r.add("]");
  r.add(";");
  r.add(",");
  r.add("...");
  r.add(".");
  r.add("=");
  r.add("!");
  r.add("~");
  r.add("?");
  r.add(":");
  r.add("+");
  r.add("-");
  r.add("*");
  r.add("/");
  r.add("|");
  r.add("^");
  r.add("%");
  r.add("@");
  r.add(" ");
  r.add("  ");
  r.add("   ");
  r.add("    ");
  r.add("     ");
  r.add("      ");
  r.add("       ");
  r.add("        ");
  r.add("         ");
  r.add("          ");
  r.add("           ");
  r.add("            ");
  r.add("             ");
  r.add("              ");
  r.add("               ");
  r.add("\n");
  r.add("\n  ");
  r.add("\n    ");
  r.add("\n      ");
  r.add("\n        ");
  r.add("\n          ");
  r.add("\n            ");
  r.add("\n              ");
  r.add("\n                ");
  r.add("<");
  r.add(">");
  r.add("</");
  r.add("/>");
  r.add("\"");
  r.add("\'");
  r.add("<![CDATA[");
  r.add("]]>");
  r.add("<!--");
  r.add("-->");
  r.add("<!DOCTYPE");
  r.add("SYSTEM");
  r.add("PUBLIC");
  r.add("<?");
  r.add("?>");
  r.add("<%");
  r.add("%>");
  r.add("<%=");
  r.add("<%@");
  r.add("${");
  r.add("");
  return r;
}
