{
  LOG.assertTrue(((TreeElement)oldChild).getTreeParent() == this);
  final TreeElement oldChild1=transformAll((TreeElement)oldChild);
  final TreeElement newChildNext=((TreeElement)newChild).getTreeNext();
  final TreeElement newChild1=transformAll((TreeElement)newChild);
  if (oldChild1 == newChild1)   return;
  removeChildrenInner(newChild1,newChildNext);
  ChangeUtil.prepareAndRunChangeAction(new ChangeUtil.ChangeAction(){
    public void makeChange(    TreeChangeEvent destinationTreeChange){
      replace(destinationTreeChange,oldChild1,newChild1);
      repairRemovedElement(CompositeElement.this,oldChild1);
    }
  }
,this);
}
