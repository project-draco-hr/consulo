{
  getRefManager().iterate(new RefManager.RefIterator(){
    public void accept(    final RefElement refElement){
      if (myProblemElements.containsKey(refElement)) {
        ProblemDescriptor[] descriptions=getDescriptions(refElement);
        for (        ProblemDescriptor description : descriptions) {
          int line=description.getLineNumber();
          @NonNls final String template=description.getDescriptionTemplate();
          final PsiElement psiElement=description.getPsiElement();
          final String text=psiElement.getText();
          @NonNls String problemText=template.replaceAll("#ref",text.replaceAll("\\$","\\\\\\$"));
          problemText=problemText.replaceAll(" #loc "," ");
          Element element=XMLExportUtl.createElement(refElement,parentNode,line);
          Element problemClassElement=new Element(InspectionsBundle.message("inspection.export.results.problem.element.tag"));
          problemClassElement.addContent(getDisplayName());
          element.addContent(problemClassElement);
          try {
            Element descriptionElement=new Element(InspectionsBundle.message("inspection.export.results.description.tag"));
            descriptionElement.addContent(problemText);
            element.addContent(descriptionElement);
          }
 catch (          IllegalDataException e) {
            System.out.println("Cannot save results for " + refElement.getElement().getContainingFile().getVirtualFile().getPath());
          }
        }
      }
    }
  }
);
}
