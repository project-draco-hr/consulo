{
  List<Notification> changed=null;
  try {
    myLock.acquire();
    if (myNotifications.isEmpty())     return;
    changed=new ArrayList<Notification>();
    for (    final Map.Entry<Notification,Pair<Project,Boolean>> entry : myNotifications.entrySet()) {
      entry.setValue(new Pair<Project,Boolean>(entry.getValue().first,true));
      changed.add(entry.getKey());
    }
  }
  finally {
    myLock.release();
  }
  if (!changed.isEmpty()) {
    final Notification[] read=changed.toArray(new Notification[changed.size()]);
    for (    final NotificationModelListener listener : myListeners) {
      listener.notificationsRead(read);
    }
  }
}
