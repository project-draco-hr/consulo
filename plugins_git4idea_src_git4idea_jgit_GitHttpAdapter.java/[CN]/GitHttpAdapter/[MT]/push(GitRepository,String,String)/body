{
  try {
    final Git git=convertToGit(repository);
    final GitHttpCredentialsProvider provider=new GitHttpCredentialsProvider(repository.getProject(),remoteUrl);
    final AtomicReference<GitSimplePushResult> pushResult=new AtomicReference<GitSimplePushResult>();
    GeneralResult result=callWithAuthRetry(new MyRunnable(){
      @Override public void run() throws InvalidRemoteException {
        PushCommand pushCommand=git.push();
        if (remoteName != null) {
          pushCommand.setRemote(remoteName);
        }
        pushCommand.setCredentialsProvider(provider);
        Iterable<PushResult> results=pushCommand.call();
        pushResult.set(analyzeResults(results));
      }
    }
,provider);
    if (pushResult.get() == null) {
      return convertToPushResultType(result);
    }
 else {
      return pushResult.get();
    }
  }
 catch (  InvalidRemoteException e) {
    LOG.info("Exception while pushing " + remoteName + "("+ remoteUrl+ ")"+ " in "+ repository.toLogString(),e);
    return makeErrorResultFromException(e);
  }
catch (  IOException e) {
    LOG.info("Exception while pushing " + remoteName + "("+ remoteUrl+ ")"+ " in "+ repository.toLogString(),e);
    return makeErrorResultFromException(e);
  }
}
