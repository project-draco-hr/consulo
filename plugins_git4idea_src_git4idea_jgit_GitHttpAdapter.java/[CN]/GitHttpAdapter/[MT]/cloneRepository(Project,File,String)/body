{
  GitFetchResult.Type resultType;
  try {
    final GitHttpCredentialsProvider provider=new GitHttpCredentialsProvider(project,url);
    GeneralResult result=callWithAuthRetry(new MyRunnable(){
      @Override public void run() throws InvalidRemoteException {
        CloneCommand cloneCommand=Git.cloneRepository();
        cloneCommand.setDirectory(directory);
        cloneCommand.setURI(url);
        cloneCommand.setCredentialsProvider(provider);
        cloneCommand.call();
      }
    }
,provider);
    resultType=convertToFetchResultType(result);
  }
 catch (  InvalidRemoteException e) {
    LOG.info("Exception while cloning " + url + " to "+ directory,e);
    return GitFetchResult.error(e);
  }
catch (  IOException e) {
    LOG.info("Exception while cloning " + url + " to "+ directory,e);
    return GitFetchResult.error(e);
  }
  return new GitFetchResult(resultType);
}
