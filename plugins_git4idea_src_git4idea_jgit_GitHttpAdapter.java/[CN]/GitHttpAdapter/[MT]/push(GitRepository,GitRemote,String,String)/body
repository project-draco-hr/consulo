{
  try {
    final Git git=convertToGit(repository);
    final GitHttpCredentialsProvider provider=new GitHttpCredentialsProvider(repository.getProject(),remoteUrl);
    GitHttpRemoteCommand.Push pushCommand=new GitHttpRemoteCommand.Push(git,provider,remote.getName(),remoteUrl,convertRefSpecs(Collections.singletonList(pushSpec)));
    GeneralResult result=callWithAuthRetry(pushCommand);
    GitSimplePushResult pushResult=pushCommand.getResult();
    if (pushResult == null) {
      return convertToPushResultType(result);
    }
 else {
      return pushResult;
    }
  }
 catch (  SmartPushNotSupportedException e) {
    return GitSimplePushResult.error("Remote <code>" + remoteUrl + "</code> doesn't support <a href=\"http://progit.org/2010/03/04/smart-http.html\">"+ "smart HTTP push. </a><br/>"+ "Please set the server to use smart push or use other protocol (SSH for example). <br/>"+ "If neither is possible, as a workaround you may add authentication data directly to the remote url in <code>.git/config</code>.");
  }
catch (  InvalidRemoteException e) {
    logException(repository,remote.getName(),remoteUrl,e,"pushing");
    return makeErrorResultFromException(e);
  }
catch (  IOException e) {
    logException(repository,remote.getName(),remoteUrl,e,"pushing");
    return makeErrorResultFromException(e);
  }
catch (  URISyntaxException e) {
    logException(repository,remote.getName(),remoteUrl,e,"pushing");
    return makeErrorResultFromException(e);
  }
}
