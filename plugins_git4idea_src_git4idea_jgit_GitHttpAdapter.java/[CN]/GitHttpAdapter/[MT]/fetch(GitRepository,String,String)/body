{
  GitFetchResult.Type resultType;
  try {
    final Git git=convertToGit(repository);
    final GitHttpCredentialsProvider provider=new GitHttpCredentialsProvider(repository.getProject(),remoteUrl);
    GeneralResult result=callWithAuthRetry(new MyRunnable(){
      @Override public void run() throws InvalidRemoteException {
        FetchCommand fetchCommand=git.fetch();
        fetchCommand.setRemote(remoteName);
        fetchCommand.setCredentialsProvider(provider);
        fetchCommand.call();
      }
    }
,provider);
    resultType=convertToFetchResultType(result);
  }
 catch (  IOException e) {
    LOG.info("Exception while fetching " + remoteName + "("+ remoteUrl+ ")"+ " in "+ repository.toLogString(),e);
    return GitFetchResult.error(e);
  }
catch (  InvalidRemoteException e) {
    LOG.info("Exception while fetching " + remoteName + "("+ remoteUrl+ ")"+ " in "+ repository.toLogString(),e);
    return GitFetchResult.error(e);
  }
  return new GitFetchResult(resultType);
}
