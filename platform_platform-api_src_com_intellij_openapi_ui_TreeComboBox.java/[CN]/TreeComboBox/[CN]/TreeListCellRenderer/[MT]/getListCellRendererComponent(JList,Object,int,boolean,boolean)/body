{
  clear();
  myInList=index >= 0;
  if (index >= 0) {
    Object obj1=myComboBox.getItemAt(index);
    myChecked=obj1 != null && obj1.equals(myComboBox.getSelectedItem());
  }
 else {
    myChecked=false;
  }
  int indent=0;
  if (myInList) {
    final TreePath path=getTreeModelWrapper().getPathForRow(index);
    indent=path == null ? 0 : (path.getPathCount() - 1 - (myShowRootNode ? 0 : 1)) * ((UIUtil.isUnderAquaLookAndFeel() ? 2 : 1) * INDENT);
  }
  setIpad(new Insets(1,!myInList || myEditable ? (myUnderAquaLookAndFeel ? 0 : 5) : (myUnderAquaLookAndFeel ? 23 : 5) + indent,1,5));
  setIcon(getValueIcon(value,index));
  setIconOpaque(!myUnderAquaLookAndFeel);
  myEditable=myComboBox.isEditable();
  setForeground(isSelected ? list.getSelectionForeground() : list.getForeground());
  if (!myUnderAquaLookAndFeel)   setBackground(isSelected ? list.getSelectionBackground() : list.getBackground());
  if (value instanceof CustomPresentation) {
    ((CustomPresentation)value).append(this,index);
  }
 else {
    if (value == null) {
      if (index == -1 && myDefaultText != null) {
        append(myDefaultText,SimpleTextAttributes.GRAY_ATTRIBUTES);
      }
 else {
        append("");
      }
    }
 else {
      append(value.toString());
    }
  }
  setSelected(isSelected);
  setFont(list.getFont());
  return this;
}
