{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  if (HintManager.getInstance().performCurrentQuestionAction())   return;
  if (!file.isWritable())   return;
  if (file instanceof PsiCodeFragment)   return;
  TemplateState state=TemplateManagerImpl.getTemplateState(editor);
  if (state != null && !state.isFinished())   return;
  final IntentionAction[] intentionActions=IntentionManager.getInstance(project).getIntentionActions();
  ArrayList intentionsToShow=new ArrayList();
  ArrayList fixesToShow=new ArrayList();
  for (int i=0; i < intentionActions.length; i++) {
    IntentionAction action=intentionActions[i];
    if (action instanceof IntentionActionComposite) {
      if (action instanceof QuickFixAction) {
        fixesToShow.addAll(((IntentionActionComposite)action).getAvailableActions(editor,file));
      }
 else {
        intentionsToShow.addAll(((IntentionActionComposite)action).getAvailableActions(editor,file));
      }
    }
 else     if (action.isAvailable(project,editor,file)) {
      intentionsToShow.add(action);
    }
  }
  if (!intentionsToShow.isEmpty() || !fixesToShow.isEmpty()) {
    IntentionHintComponent.showIntentionHint(project,editor,intentionsToShow,fixesToShow,true);
  }
 else {
  }
}
