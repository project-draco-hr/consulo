{
  final Map<String,ResourceFileData> result=new HashMap<String,ResourceFileData>();
  for (  String resDirPath : resPaths) {
    final File[] resSubdirs=new File(resDirPath).listFiles();
    if (resSubdirs != null) {
      for (      File resSubdir : resSubdirs) {
        final String resType=AndroidCommonUtils.getResourceTypeByDirName(resSubdir.getName());
        if (resType != null) {
          final File[] resFiles=resSubdir.listFiles();
          if (resFiles != null) {
            for (            File resFile : resFiles) {
              if (ResourceFolderType.VALUES.getName().equals(resType) && "xml".equals(FileUtil.getExtension(resFile.getName()))) {
                final ArrayList<ResourceEntry> entries=new ArrayList<ResourceEntry>();
                collectValueResources(resFile,entries);
                result.put(FileUtil.toSystemIndependentName(resFile.getPath()),new ResourceFileData(entries,0));
              }
 else {
                final ResourceType resTypeObj=ResourceType.getEnum(resType);
                final boolean idProvidingType=resTypeObj != null && ArrayUtil.find(AndroidCommonUtils.ID_PROVIDING_RESOURCE_TYPES,resTypeObj) >= 0;
                final ResourceFileData data=new ResourceFileData(Collections.<ResourceEntry>emptyList(),idProvidingType ? resFile.lastModified() : 0);
                result.put(FileUtil.toSystemIndependentName(resFile.getPath()),data);
              }
            }
          }
        }
      }
    }
  }
  return result;
}
