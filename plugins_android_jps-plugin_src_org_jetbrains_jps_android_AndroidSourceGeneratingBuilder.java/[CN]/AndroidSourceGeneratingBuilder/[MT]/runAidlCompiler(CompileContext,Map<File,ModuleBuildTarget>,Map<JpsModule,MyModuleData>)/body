{
  if (files.size() > 0) {
    context.processMessage(new ProgressMessage(AndroidJpsBundle.message("android.jps.progress.aidl")));
  }
  boolean success=true;
  for (  Map.Entry<File,ModuleBuildTarget> entry : files.entrySet()) {
    final File file=entry.getKey();
    final ModuleBuildTarget buildTarget=entry.getValue();
    final String filePath=file.getPath();
    final MyModuleData moduleData=moduleDataMap.get(buildTarget.getModule());
    if (!LOG.assertTrue(moduleData != null)) {
      context.processMessage(new CompilerMessage(ANDROID_IDL_COMPILER,BuildMessage.Kind.ERROR,AndroidJpsBundle.message("android.jps.internal.error")));
      success=false;
      continue;
    }
    final File generatedSourcesDir=AndroidJpsUtil.getGeneratedSourcesStorage(buildTarget.getModule(),context.getProjectDescriptor().dataManager);
    final File aidlOutputDirectory=new File(generatedSourcesDir,AndroidJpsUtil.AIDL_GENERATED_SOURCE_ROOT_NAME);
    if (!aidlOutputDirectory.exists() && !aidlOutputDirectory.mkdirs()) {
      context.processMessage(new CompilerMessage(ANDROID_IDL_COMPILER,BuildMessage.Kind.ERROR,AndroidJpsBundle.message("android.jps.cannot.create.directory",aidlOutputDirectory.getPath())));
      success=false;
      continue;
    }
    final IAndroidTarget target=moduleData.getPlatform().getTarget();
    try {
      final File[] sourceRoots=AndroidJpsUtil.getSourceRootsForModuleAndDependencies(buildTarget.getModule());
      final String[] sourceRootPaths=AndroidJpsUtil.toPaths(sourceRoots);
      final String packageName=computePackageForFile(context,file);
      if (packageName == null) {
        context.processMessage(new CompilerMessage(ANDROID_IDL_COMPILER,BuildMessage.Kind.ERROR,AndroidJpsBundle.message("android.jps.errors.cannot.compute.package",filePath)));
        success=false;
        continue;
      }
      final File outputFile=new File(aidlOutputDirectory,packageName.replace('.',File.separatorChar) + File.separator + FileUtil.getNameWithoutExtension(file)+ ".java");
      final String outputFilePath=outputFile.getPath();
      final Map<AndroidCompilerMessageKind,List<String>> messages=AndroidIdl.execute(target,filePath,outputFilePath,sourceRootPaths);
      addMessages(context,messages,filePath,ANDROID_IDL_COMPILER);
      if (messages.get(AndroidCompilerMessageKind.ERROR).size() > 0) {
        success=false;
      }
 else {
        final SourceToOutputMapping sourceToOutputMap=context.getProjectDescriptor().dataManager.getSourceToOutputMap(buildTarget);
        sourceToOutputMap.update(filePath,outputFilePath);
        FSOperations.markDirty(context,outputFile);
      }
    }
 catch (    final IOException e) {
      AndroidJpsUtil.reportExceptionError(context,filePath,e,ANDROID_IDL_COMPILER);
      success=false;
    }
  }
  return success;
}
