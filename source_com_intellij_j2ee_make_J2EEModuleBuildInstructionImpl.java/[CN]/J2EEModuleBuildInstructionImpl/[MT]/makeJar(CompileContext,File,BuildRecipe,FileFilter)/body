{
  final BuildRecipe buildRecipe=getChildInstructions(context);
  final Manifest manifest=MakeUtil.getInstance().createManifest(buildRecipe);
  if (manifest == null) {
    context.addMessage(CompilerMessageCategory.WARNING,"Using user supplied manifest.mf",null,-1,-1);
  }
  FileUtil.createParentDirs(jarFile);
  final JarOutputStream jarOutputStream=manifest == null ? new JarOutputStream(new FileOutputStream(jarFile)) : new JarOutputStream(new FileOutputStream(jarFile),manifest);
  final Set<String> tempWrittenRelativePaths=new THashSet<String>();
  try {
    buildRecipe.visitInstructionsWithExceptions(new BuildInstructionVisitor(){
      public boolean visitInstruction(      BuildInstruction instruction) throws IOException {
        instruction.addFilesToJar(context,jarFile,jarOutputStream,dependencies,tempWrittenRelativePaths,fileFilter);
        return true;
      }
    }
,false);
  }
 catch (  Exception e) {
    if (e instanceof IOException)     throw (IOException)e;
    if (e instanceof RuntimeException)     throw (RuntimeException)e;
    Degenerator.unableToDegenerateMarker();
    return;
  }
 finally {
    jarOutputStream.close();
  }
}
