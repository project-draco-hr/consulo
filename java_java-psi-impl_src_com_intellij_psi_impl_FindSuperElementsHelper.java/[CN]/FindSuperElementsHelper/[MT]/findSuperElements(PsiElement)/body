{
  if (element instanceof PsiClass) {
    PsiClass aClass=(PsiClass)element;
    List<PsiClass> allSupers=new ArrayList<PsiClass>(Arrays.asList(aClass.getSupers()));
    for (Iterator<PsiClass> iterator=allSupers.iterator(); iterator.hasNext(); ) {
      PsiClass superClass=iterator.next();
      if (CommonClassNames.JAVA_LANG_OBJECT.equals(superClass.getQualifiedName()))       iterator.remove();
    }
    return allSupers.toArray(new PsiClass[allSupers.size()]);
  }
 else   if (element instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)element;
    if (method.isConstructor()) {
      PsiMethod constructorInSuper=PsiSuperMethodUtil.findConstructorInSuper(method);
      if (constructorInSuper != null) {
        return new PsiMethod[]{constructorInSuper};
      }
    }
 else {
      return method.findSuperMethods(false);
    }
  }
  return null;
}
