{
  final List<PsiClassType> typeList=Collections.singletonList((PsiClassType)TypeConversionUtil.typeParameterErasure(referencedClass.getTypeParameters()[parameterIndex]));
  JavaInheritorsGetter.processInheritors(parameters,typeList,resultSet.getPrefixMatcher(),new Consumer<PsiType>(){
    @Override public void consume(    final PsiType type){
      final PsiClass psiClass=PsiUtil.resolveClassInType(type);
      if (psiClass == null)       return;
      resultSet.addElement(TailTypeDecorator.withTail(new JavaPsiClassReferenceElement(psiClass),getTail(parameterIndex == referencedClass.getTypeParameters().length - 1)));
    }
  }
);
}
