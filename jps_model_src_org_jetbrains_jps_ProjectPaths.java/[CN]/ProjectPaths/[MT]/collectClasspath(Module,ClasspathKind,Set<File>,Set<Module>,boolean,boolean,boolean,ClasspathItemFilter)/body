{
  if (!processed.add(module)) {
    return;
  }
  for (  ClasspathItem it : module.getClasspath(kind,exportedOnly)) {
    if (!filter.accept(module,it) || it instanceof Sdk && excludeSdk) {
      continue;
    }
    if (it instanceof ModuleSourceEntry) {
      final Module dep=((ModuleSourceEntry)it).getModule();
      if (!excludeMainModuleOutput && kind.isTestsIncluded()) {
        final File out=getModuleOutputDir(dep,true);
        if (out != null) {
          classpath.add(out);
        }
      }
      if (!excludeMainModuleOutput || kind.isTestsIncluded()) {
        final File out=getModuleOutputDir(dep,false);
        if (out != null) {
          classpath.add(out);
        }
      }
    }
 else     if (it instanceof Module) {
      collectClasspath((Module)it,kind,classpath,processed,!kind.isRuntime(),false,true,filter);
    }
 else {
      addFiles(classpath,it.getClasspathRoots(kind));
    }
  }
}
