{
  myActionsTree.reset(myKeymap,myQuicklists);
  final JLabel firstLabel=new JLabel(KeyMapBundle.message("filter.first.stroke.input"));
  final JCheckBox enable2Shortcut=new JCheckBox(KeyMapBundle.message("filter.second.stroke.input"));
  final ShortcutTextField firstShortcut=new ShortcutTextField();
  firstShortcut.setColumns(10);
  final ShortcutTextField secondShortcut=new ShortcutTextField();
  secondShortcut.setColumns(10);
  enable2Shortcut.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      secondShortcut.setEnabled(enable2Shortcut.isSelected());
      if (enable2Shortcut.isSelected()) {
        secondShortcut.requestFocusInWindow();
      }
    }
  }
);
  firstShortcut.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    DocumentEvent e){
      filterTreeByShortcut(firstShortcut,enable2Shortcut,secondShortcut);
    }
  }
);
  secondShortcut.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    DocumentEvent e){
      filterTreeByShortcut(firstShortcut,enable2Shortcut,secondShortcut);
    }
  }
);
  IJSwingUtilities.adjustComponentsOnMac(firstLabel,firstShortcut);
  JPanel filterComponent=FormBuilder.createFormBuilder().addLabeledComponent(firstLabel,firstShortcut,true).addComponent(enable2Shortcut).setVerticalGap(0).setIndent(5).addComponent(secondShortcut).getPanel();
  filterComponent.setBorder(new EmptyBorder(UIUtil.PANEL_SMALL_INSETS));
  enable2Shortcut.setSelected(false);
  secondShortcut.setEnabled(false);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      firstShortcut.requestFocus();
    }
  }
);
  return filterComponent;
}
