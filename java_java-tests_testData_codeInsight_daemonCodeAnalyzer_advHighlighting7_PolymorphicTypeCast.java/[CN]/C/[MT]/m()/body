{
  Object x, y;
  String s;
  int i;
  MethodType mt;
  MethodHandle mh;
  MethodHandles.Lookup lookup=MethodHandles.lookup();
  mt=MethodType.methodType(String.class,char.class,char.class);
  mh=lookup.findVirtual(String.class,"replace",mt);
  s=(String)mh.invokeExact("daddy",'d','n');
  assert(s.equals("nanny"));
  s=(String)mh.invokeWithArguments("sappy",'p','v');
  assert(s.equals("savvy"));
  mt=MethodType.methodType(java.util.List.class,Object[].class);
  mh=lookup.findStatic(java.util.Arrays.class,"asList",mt);
  assert(mh.isVarargsCollector());
  x=mh.invokeGeneric("one","two");
  assert(x.equals(java.util.Arrays.asList("one","two")));
  mt=MethodType.genericMethodType(3);
  mh=mh.asType(mt);
  x=mh.invokeExact((Object)1,(Object)2,(Object)3);
  assert(x.equals(java.util.Arrays.asList(1,2,3)));
  mt=MethodType.methodType(int.class);
  mh=lookup.findVirtual(java.util.List.class,"size",mt);
  i=(int)mh.invokeExact(java.util.Arrays.asList(1,2,3));
  assert(i == 3);
  mt=MethodType.methodType(void.class,String.class);
  mh=lookup.findVirtual(java.io.PrintStream.class,"println",mt);
  mh.invokeExact(System.out,"Hello, world.");
}
