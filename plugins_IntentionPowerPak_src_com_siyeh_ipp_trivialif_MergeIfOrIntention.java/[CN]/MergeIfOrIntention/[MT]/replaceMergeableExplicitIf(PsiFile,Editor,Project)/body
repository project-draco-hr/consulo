{
  final PsiJavaToken token=(PsiJavaToken)findMatchingElement(file,editor);
  final PsiIfStatement parentStatement=(PsiIfStatement)token.getParent();
  final PsiIfStatement childStatement=(PsiIfStatement)parentStatement.getElseBranch();
  final String childConditionText;
  final PsiExpression childCondition=childStatement.getCondition();
  if (ParenthesesUtils.getPrecendence(childCondition) > ParenthesesUtils.OR_PRECEDENCE) {
    childConditionText='(' + childCondition.getText() + ')';
  }
 else {
    childConditionText=childCondition.getText();
  }
  final String parentConditionText;
  final PsiExpression condition=parentStatement.getCondition();
  if (ParenthesesUtils.getPrecendence(condition) > ParenthesesUtils.OR_PRECEDENCE) {
    parentConditionText='(' + condition.getText() + ')';
  }
 else {
    parentConditionText=condition.getText();
  }
  final PsiStatement parentThenBranch=parentStatement.getThenBranch();
  final String parentThenBranchText=parentThenBranch.getText();
  final StringBuffer statement=new StringBuffer("if(" + parentConditionText + "||"+ childConditionText+ ')'+ parentThenBranchText);
  final PsiStatement childElseBranch=childStatement.getElseBranch();
  if (childElseBranch != null) {
    final String childElseBranchText=childElseBranch.getText();
    statement.append("else " + childElseBranchText);
  }
  final String newStatement=statement.toString();
  replaceStatement(project,newStatement,parentStatement);
}
