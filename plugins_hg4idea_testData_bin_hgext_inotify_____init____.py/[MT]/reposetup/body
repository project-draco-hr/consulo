def reposetup(ui, repo):
    if (not hasattr(repo, 'dirstate')):
        return


    class inotifydirstate(repo.dirstate.__class__):
        _inotifyon = True

        def status(self, match, subrepos, ignored, clean, unknown=True):
            files = match.files()
            if ('.' in files):
                files = []
            if (self._inotifyon and (not ignored) and (not subrepos) and (not self._dirty)):
                cli = client(ui, repo)
                try:
                    result = cli.statusquery(files, match, False, clean, unknown)
                except QueryFailed as instr:
                    ui.debug(str(instr))
                    inotifydirstate._inotifyon = False
                    pass
                else:
                    if ui.config('inotify', 'debug'):
                        r2 = super(inotifydirstate, self).status(match, [], False, clean, unknown)
                        for (c, a, b) in zip('LMARDUIC', result, r2):
                            for f in a:
                                if (f not in b):
                                    ui.warn(('*** inotify: %s +%s\n' % (c, f)))
                            for f in b:
                                if (f not in a):
                                    ui.warn(('*** inotify: %s -%s\n' % (c, f)))
                        result = r2
                    return result
            return super(inotifydirstate, self).status(match, subrepos, ignored, clean, unknown)
    repo.dirstate.__class__ = inotifydirstate
