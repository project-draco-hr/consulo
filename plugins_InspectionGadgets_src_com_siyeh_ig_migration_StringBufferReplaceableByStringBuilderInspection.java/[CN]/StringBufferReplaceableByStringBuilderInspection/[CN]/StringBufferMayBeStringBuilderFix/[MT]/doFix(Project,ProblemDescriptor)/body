{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  final JavaPsiFacade psiFacade=JavaPsiFacade.getInstance(project);
  final PsiClass stringBuilderClass=psiFacade.findClass(CommonClassNames.JAVA_LANG_STRING_BUILDER,element.getResolveScope());
  if (stringBuilderClass == null) {
    return;
  }
  final PsiElementFactory factory=psiFacade.getElementFactory();
  final PsiJavaCodeReferenceElement stringBuilderClassReference=factory.createClassReferenceElement(stringBuilderClass);
  final PsiClassType stringBuilderType=factory.createType(stringBuilderClass);
  final PsiTypeElement stringBuilderTypeElement=factory.createTypeElement(stringBuilderType);
  final PsiElement grandParent=parent.getParent();
  final PsiDeclarationStatement declarationStatement=(PsiDeclarationStatement)grandParent;
  final PsiElement[] declaredElements=declarationStatement.getDeclaredElements();
  for (  PsiElement declaredElement : declaredElements) {
    if (!(declaredElement instanceof PsiVariable)) {
      continue;
    }
    replaceWithStringBuilder(stringBuilderClassReference,stringBuilderTypeElement,(PsiVariable)declaredElement);
  }
}
