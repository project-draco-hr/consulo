{
  Class<? extends Toolkit> toolkitClass=Toolkit.getDefaultToolkit().getClass();
  if (!SystemInfo.isXWindow || !"sun.awt.X11.XToolkit".equals(toolkitClass.getName())) {
    return null;
  }
  try {
    Xlib x11=new Xlib();
    Class<?> XlibWrapper=Class.forName("sun.awt.X11.XlibWrapper");
    x11.unsafe=(Unsafe)field(XlibWrapper,"unsafe").get(null);
    x11.XGetWindowProperty=method(XlibWrapper,"XGetWindowProperty",12);
    x11.XFree=method(XlibWrapper,"XFree",1);
    x11.RootWindow=method(XlibWrapper,"RootWindow",2);
    x11.XSendEvent=method(XlibWrapper,"XSendEvent",5);
    Class<?> XBaseWindow=Class.forName("sun.awt.X11.XBaseWindow");
    x11.getWindow=method(XBaseWindow,"getWindow");
    x11.getScreenNumber=method(XBaseWindow,"getScreenNumber");
    x11.display=(Long)method(toolkitClass,"getDisplay").invoke(null);
    x11.awtLock=method(toolkitClass,"awtLock");
    x11.awtUnlock=method(toolkitClass,"awtUnlock");
    Class<?> XAtom=Class.forName("sun.awt.X11.XAtom");
    Method get=method(XAtom,"get",String.class);
    Field atom=field(XAtom,"atom");
    x11.UTF8_STRING=(Long)atom.get(get.invoke(null,"UTF8_STRING"));
    x11.NET_SUPPORTING_WM_CHECK=(Long)atom.get(get.invoke(null,"_NET_SUPPORTING_WM_CHECK"));
    x11.NET_WM_NAME=(Long)atom.get(get.invoke(null,"_NET_WM_NAME"));
    x11.NET_WM_ALLOWED_ACTIONS=(Long)atom.get(get.invoke(null,"_NET_WM_ALLOWED_ACTIONS"));
    x11.NET_WM_STATE=(Long)atom.get(get.invoke(null,"_NET_WM_STATE"));
    x11.NET_WM_ACTION_FULLSCREEN=(Long)atom.get(get.invoke(null,"_NET_WM_ACTION_FULLSCREEN"));
    x11.NET_WM_STATE_FULLSCREEN=(Long)atom.get(get.invoke(null,"_NET_WM_STATE_FULLSCREEN"));
    Long netWmWindow=x11.getNetWmWindow();
    if (netWmWindow == null) {
      LOG.info("_NET protocol is not supported");
      return null;
    }
    return x11;
  }
 catch (  Throwable t) {
    LOG.info("cannot initialize",t);
  }
  return null;
}
