{
  return GraphGenerator.create(CachingSemiGraph.create(new GraphGenerator.SemiGraph<T>(){
    public Collection<T> getNodes(){
      return models.values();
    }
    public Iterator<T> getIn(    final ModuleRootModel model){
      final Module[] modules=model.getModuleDependencies();
      final List<T> dependencies=new ArrayList<T>();
      for (      Module module : modules) {
        T depModel=models.get(module);
        if (depModel != null) {
          dependencies.add(depModel);
        }
      }
      return dependencies.iterator();
    }
  }
));
}
