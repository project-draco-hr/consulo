{
  GrExpression invoked=getInvokedExpression();
  if (invoked instanceof GrReferenceExpression) {
    GrReferenceExpression refExpr=(GrReferenceExpression)invoked;
    final GroovyResolveResult resolveResult=refExpr.advancedResolve();
    PsiElement resolved=resolveResult.getElement();
    PsiType returnType=null;
    if (resolved instanceof PsiMethod && !GroovyPsiManager.getInstance(resolved.getProject()).isTypeBeingInferred(resolved)) {
      returnType=((PsiMethod)resolved).getReturnType();
    }
 else     if (resolved instanceof GrVariable) {
      final PsiType type=((GrVariable)resolved).getTypeGroovy();
      if (type instanceof GrClosureType) {
        returnType=((GrClosureType)type).getClosureReturnType();
      }
    }
    if (returnType != null) {
      returnType=resolveResult.getSubstitutor().substitute(returnType);
      returnType=TypesUtil.boxPrimitiveType(returnType,getManager(),getResolveScope());
    }
    if (refExpr.getDotTokenType() != GroovyTokenTypes.mSPREAD_DOT) {
      return returnType;
    }
 else {
      return ResolveUtil.getListTypeForSpreadOperator(refExpr,returnType);
    }
  }
  return null;
}
