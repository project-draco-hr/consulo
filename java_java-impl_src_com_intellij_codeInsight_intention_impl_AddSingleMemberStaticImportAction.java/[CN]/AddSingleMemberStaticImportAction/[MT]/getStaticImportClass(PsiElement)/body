{
  if (!PsiUtil.isLanguageLevel5OrHigher(element))   return null;
  PsiFile file=element.getContainingFile();
  if (element instanceof PsiIdentifier && element.getParent() instanceof PsiJavaCodeReferenceElement && ((PsiJavaCodeReferenceElement)element.getParent()).getQualifier() != null) {
    PsiJavaCodeReferenceElement refExpr=(PsiJavaCodeReferenceElement)element.getParent();
    PsiReferenceParameterList parameterList=refExpr.getParameterList();
    if (parameterList != null && parameterList.getFirstChild() != null)     return null;
    PsiElement resolved=refExpr.resolve();
    if (resolved instanceof PsiMember && ((PsiModifierListOwner)resolved).hasModifierProperty(PsiModifier.STATIC)) {
      PsiClass aClass=getResolvedClass(element,(PsiMember)resolved);
      if (aClass != null && !PsiTreeUtil.isAncestor(aClass,element,true) && !aClass.hasModifierProperty(PsiModifier.PRIVATE)) {
        String qName=aClass.getQualifiedName();
        if (qName != null && !Comparing.strEqual(qName,aClass.getName())) {
          qName=qName + "." + refExpr.getReferenceName();
          if (file instanceof PsiJavaFile) {
            PsiImportList importList=((PsiJavaFile)file).getImportList();
            if (importList != null) {
              for (              PsiImportStaticStatement staticStatement : importList.getImportStaticStatements()) {
                if (staticStatement.isOnDemand()) {
                  if (staticStatement.resolveTargetClass() == aClass) {
                    return null;
                  }
                }
              }
              if (importList.findSingleImportStatement(refExpr.getReferenceName()) == null) {
                return qName;
              }
            }
          }
        }
      }
    }
  }
  return null;
}
