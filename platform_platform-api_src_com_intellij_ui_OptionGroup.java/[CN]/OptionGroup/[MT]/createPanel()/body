{
  JPanel panel=new JPanel();
  panel.setLayout(new GridBagLayout());
  for (int i=0; i < myOptions.size(); i++) {
    final int leftInset=Boolean.TRUE.equals(myIsShifted.get(i)) ? IdeBorderFactory.TITLED_BORDER_INDENT : 0;
    final int topInset=i == 0 ? 0 : UIUtil.DEFAULT_VGAP;
    final int rightInset=UIUtil.DEFAULT_HGAP;
    final Object option=myOptions.get(i);
    if (option instanceof JComponent) {
      JComponent component=(JComponent)option;
      panel.add(component,new GridBagConstraints(0,i,GridBagConstraints.REMAINDER,1,1,0,GridBagConstraints.WEST,getFill(component),new Insets(topInset,leftInset,0,0),0,0));
    }
 else {
      Pair pair=(Pair)option;
      JComponent firstComponent=(JComponent)pair.first;
      panel.add(firstComponent,new GridBagConstraints(0,i,1,1,1,0,GridBagConstraints.WEST,getFill(firstComponent),new Insets(topInset,leftInset,0,0),0,0));
      JComponent secondComponent=(JComponent)pair.second;
      panel.add(secondComponent,new GridBagConstraints(1,i,1,1,1,0,GridBagConstraints.EAST,GridBagConstraints.HORIZONTAL,new Insets(topInset,rightInset,0,0),0,0));
    }
  }
  JPanel p=new JPanel();
  p.setPreferredSize(new Dimension(0,0));
  panel.add(p,new GridBagConstraints(0,myOptions.size(),GridBagConstraints.REMAINDER,1,0,1,GridBagConstraints.NORTH,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  if (myTitle != null) {
    IdeaTitledBorder titledBorder=IdeBorderFactory.createTitledBorder(myTitle,true);
    panel.setBorder(titledBorder);
    titledBorder.acceptMinimumSize(panel);
  }
  return panel;
}
