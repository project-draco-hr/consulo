{
  if (!ParserUtils.lookAhead(builder,kFINAL) && !ParserUtils.lookAhead(builder,kDEF) && !ParserUtils.lookAhead(builder,mAT)) {
    return WRONGWAY;
  }
  PsiBuilder.Marker pdMarker=builder.mark();
  if (tWRONG_SET.contains(ParameterModifierOptional.parse(builder))) {
    pdMarker.rollbackTo();
    return WRONGWAY;
  }
  TypeSpec.parse(builder);
  ParserUtils.getToken(builder,mTRIPLE_DOT);
  if (!ParserUtils.getToken(builder,mIDENT)) {
    pdMarker.rollbackTo();
    return WRONGWAY;
  }
  VariableInitializer.parse(builder);
  pdMarker.done(PARAMETER);
  return PARAMETER;
}
