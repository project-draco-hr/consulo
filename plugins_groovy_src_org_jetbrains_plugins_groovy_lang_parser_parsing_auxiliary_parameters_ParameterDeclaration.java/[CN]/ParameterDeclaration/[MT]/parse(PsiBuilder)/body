{
  PsiBuilder.Marker pdMarker=builder.mark();
  if (WRONGWAY.equals(ParameterModifierOptional.parse(builder))) {
    pdMarker.rollbackTo();
    return WRONGWAY;
  }
  PsiBuilder.Marker checkMarker=builder.mark();
  GroovyElementType type=TypeSpec.parse(builder);
  if (!WRONGWAY.equals(type)) {
    ParserUtils.getToken(builder,mTRIPLE_DOT);
    if (!ParserUtils.getToken(builder,mIDENT)) {
      checkMarker.rollbackTo();
      if (!ParserUtils.getToken(builder,mIDENT)) {
        pdMarker.rollbackTo();
        return WRONGWAY;
      }
      VariableInitializer.parse(builder);
      pdMarker.done(PARAMETER);
      return PARAMETER;
    }
 else {
      checkMarker.drop();
      VariableInitializer.parse(builder);
      pdMarker.done(PARAMETER);
      return PARAMETER;
    }
  }
 else {
    checkMarker.rollbackTo();
    if (!ParserUtils.getToken(builder,mIDENT)) {
      pdMarker.rollbackTo();
      return WRONGWAY;
    }
    VariableInitializer.parse(builder);
    pdMarker.done(PARAMETER);
    return PARAMETER;
  }
}
