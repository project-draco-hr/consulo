{
  PsiBuilder.Marker pdMarker=builder.mark();
  final boolean hasModifiers=parseOptionalModifier(builder,parser);
  PsiBuilder.Marker rb=builder.mark();
  final ReferenceElement.ReferenceElementResult result=TypeSpec.parseStrict(builder);
  if (forForStatement && result == ReferenceElement.ReferenceElementResult.fail && !hasModifiers) {
    rb.drop();
    pdMarker.rollbackTo();
    return false;
  }
  if (mIDENT.equals(builder.getTokenType()) || (!forForStatement && mTRIPLE_DOT.equals(builder.getTokenType()))) {
    rb.drop();
  }
 else {
    rb.rollbackTo();
    if (forForStatement && !hasModifiers) {
      pdMarker.rollbackTo();
      return false;
    }
  }
  boolean hasDots=ParserUtils.getToken(builder,mTRIPLE_DOT);
  if (ParserUtils.getToken(builder,mIDENT)) {
    if (mASSIGN.equals(builder.getTokenType())) {
      VariableInitializer.parse(builder,parser);
    }
    pdMarker.done(PARAMETER);
    return true;
  }
 else {
    if (hasDots) {
      pdMarker.error(GroovyBundle.message("identifier.expected"));
      return true;
    }
 else {
      pdMarker.rollbackTo();
      return false;
    }
  }
}
