{
  final PsiClass targetClass=getSelectedTargetClass();
  PsiManager psiManager=myClass.getManager();
  PsiType superType=JavaPsiFacade.getInstance(psiManager.getProject()).getElementFactory().createType(targetClass);
  SuggestedNameInfo suggestedNameInfo=JavaCodeStyleManager.getInstance(psiManager.getProject()).suggestVariableName(VariableKind.FIELD,null,null,superType);
  myFieldNameField.setSuggestions(suggestedNameInfo.names);
  myInnerClassNameField.getComponent().setEnabled(InheritanceToDelegationUtil.isInnerClassNeeded(myClass,targetClass));
  @NonNls final String suggestion="My" + targetClass.getName();
  myInnerClassNameField.setSuggestions(new String[]{suggestion});
  myDataChangedListener=new NameSuggestionsField.DataChanged(){
    public void dataChanged(){
      validateButtons();
    }
  }
;
  myInnerClassNameField.addDataChangedListener(myDataChangedListener);
  myFieldNameField.addDataChangedListener(myDataChangedListener);
  myMemberSelectionPanel.getTable().setMemberInfos(myBasesToMemberInfos.get(targetClass));
  myMemberSelectionPanel.getTable().fireExternalDataChange();
}
