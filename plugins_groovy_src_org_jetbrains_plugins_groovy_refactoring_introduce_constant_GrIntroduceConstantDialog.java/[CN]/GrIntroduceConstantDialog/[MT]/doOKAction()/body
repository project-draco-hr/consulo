{
  final String targetClassName=getTargetClassName();
  PsiClass newClass=myDefaultTargetClass;
  if (myDefaultTargetClass == null || !"".equals(targetClassName) && !Comparing.strEqual(targetClassName,myDefaultTargetClass.getQualifiedName())) {
    final Module module=ModuleUtil.findModuleForPsiElement(myContext.expression);
    newClass=JavaPsiFacade.getInstance(myContext.project).findClass(targetClassName,module.getModuleScope());
    if (newClass == null) {
      if (Messages.showOkCancelDialog(myContext.project,GroovyRefactoringBundle.message("class.does.not.exist.in.the.module"),IntroduceConstantHandler.REFACTORING_NAME,Messages.getErrorIcon()) != OK_EXIT_CODE) {
        return;
      }
      myTargetClass=getTargetClass(targetClassName,myContext.expression.getContainingFile().getContainingDirectory(),myContext.project,module);
      if (myTargetClass == null)       return;
    }
 else {
      myTargetClass=getTargetClass(targetClassName,myContext.expression.getContainingFile().getContainingDirectory(),myContext.project,module);
    }
  }
  final GrIntroduceConstantHandler introduceConstantHandler=new GrIntroduceConstantHandler();
  String errorString=check();
  if (errorString != null) {
    CommonRefactoringUtil.showErrorMessage(introduceConstantHandler.getRefactoringName(),RefactoringBundle.getCannotRefactorMessage(errorString),introduceConstantHandler.getHelpID(),myContext.project);
    return;
  }
  String fieldName=getName();
  if (newClass != null) {
    PsiField oldField=newClass.findFieldByName(fieldName,true);
    if (oldField != null) {
      int answer=Messages.showYesNoDialog(myContext.project,RefactoringBundle.message("field.exists",fieldName,oldField.getContainingClass().getQualifiedName()),introduceConstantHandler.getRefactoringName(),Messages.getWarningIcon());
      if (answer != 0) {
        return;
      }
    }
  }
  JavaRefactoringSettings.getInstance().INTRODUCE_CONSTANT_VISIBILITY=getVisibilityModifier();
  RecentsManager.getInstance(myContext.project).registerRecentEntry(RECENTS_KEY,targetClassName);
  super.doOKAction();
}
