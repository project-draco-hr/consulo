{
  myFixture.configureByFile(getTestName(false) + ".java");
  myFixture.enableInspections(SuperClassHasFrequentlyUsedInheritorsInspection.class);
  final Set<Pair<String,Integer>> actualSet=new HashSet<Pair<String,Integer>>();
  for (  IntentionAction intentionAction : myFixture.getAvailableIntentions()) {
    if (intentionAction instanceof QuickFixWrapper) {
      LocalQuickFix localQuickFix=((QuickFixWrapper)intentionAction).getFix();
      ChangeSuperClassFix changeSuperClassFix=getQuickFixFromWrapper((QuickFixWrapper)intentionAction);
      if (changeSuperClassFix != null) {
        actualSet.add(Pair.create(changeSuperClassFix.getNewSuperClass().getQualifiedName(),changeSuperClassFix.getPercent()));
      }
    }
  }
  final Set<Pair<String,Integer>> expectedSet=ContainerUtil.newHashSet(expectedResults);
  assertEquals(expectedSet,actualSet);
}
