{
  StringBuffer result=new StringBuffer();
  result.append("<html>");
  result.append(start);
  Set<String> names=new LinkedHashSet<String>();
  for (int i=0; i < elements.length; i++) {
    PsiElement element=elements[i];
    String descr="";
    if (element instanceof PsiClass) {
      String className=ClassPresentationUtil.getNameForClass((PsiClass)element,true);
      descr=MessageFormat.format(formatPattern,new Object[]{className});
    }
 else     if (element instanceof PsiMethod) {
      String methodName=((PsiMethod)element).getName();
      String className=ClassPresentationUtil.getNameForClass(((PsiMethod)element).getContainingClass(),true);
      descr=MessageFormat.format(formatPattern,new Object[]{methodName,className});
    }
 else     if (element instanceof PsiFile) {
      descr=MessageFormat.format(formatPattern,new Object[]{((PsiFile)element).getName()});
    }
    names.add(descr);
  }
  String sep="";
  for (Iterator<String> iterator=names.iterator(); iterator.hasNext(); ) {
    String name=iterator.next();
    result.append(sep);
    sep="<br>";
    result.append(name);
  }
  result.append("</html>");
  return result.toString();
}
