{
  if (ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(new VirtualFile[]{file.getVirtualFile()}).hasReadonlyFiles())   return;
  PsiBinaryExpression exp=(PsiBinaryExpression)findMatchingElement(file,editor);
  final PsiJavaToken sign=exp.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  PsiElement parent=exp.getParent();
  while (isConjunctionExpression(parent,tokenType)) {
    exp=(PsiBinaryExpression)parent;
    parent=exp.getParent();
  }
  final String newExpression=convertConjunctionExpression(exp,tokenType);
  replaceExpressionWithNegatedExpressionString(project,newExpression,exp);
}
