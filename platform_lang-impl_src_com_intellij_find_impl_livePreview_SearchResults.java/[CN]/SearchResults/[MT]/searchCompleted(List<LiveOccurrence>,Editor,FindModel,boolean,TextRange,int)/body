{
  if (stamp < myLastUpdatedStamp) {
    return;
  }
  myLastUpdatedStamp=stamp;
  if (editor != getEditor() || myDisposed) {
    return;
  }
  myOccurrences=occurrences;
  final TextRange oldCursorRange=myCursor != null ? myCursor.getPrimaryRange() : null;
  Collections.sort(myOccurrences,new Comparator<LiveOccurrence>(){
    @Override public int compare(    LiveOccurrence liveOccurrence,    LiveOccurrence liveOccurrence1){
      return liveOccurrence.getPrimaryRange().getStartOffset() - liveOccurrence1.getPrimaryRange().getStartOffset();
    }
  }
);
  myFindModel=findModel;
  updateCursor(oldCursorRange,next);
  updateExcluded();
  notifyChanged();
  if (oldCursorRange == null || myCursor == null || !myCursor.getPrimaryRange().equals(oldCursorRange)) {
    notifyCursorMoved(toChangeSelection);
  }
}
