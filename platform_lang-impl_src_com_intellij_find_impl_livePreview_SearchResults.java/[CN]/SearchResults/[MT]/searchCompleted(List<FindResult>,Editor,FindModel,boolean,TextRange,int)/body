{
  if (stamp < myLastUpdatedStamp) {
    return;
  }
  myLastUpdatedStamp=stamp;
  if (editor != getEditor() || myDisposed) {
    return;
  }
  myOccurrences=occurrences;
  final TextRange oldCursorRange=myCursor;
  Collections.sort(myOccurrences,new Comparator<FindResult>(){
    @Override public int compare(    FindResult findResult,    FindResult findResult1){
      return findResult.getStartOffset() - findResult1.getStartOffset();
    }
  }
);
  myFindModel=findModel;
  updateCursor(oldCursorRange,next);
  updateExcluded();
  notifyChanged();
  if (oldCursorRange == null || myCursor == null || !myCursor.equals(oldCursorRange)) {
    if (toChangeSelection) {
      mySelectionManager.updateSelection(true,true);
    }
    notifyCursorMoved();
  }
  dumpIfNeeded();
}
