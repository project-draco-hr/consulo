{
  final Project project=getEventProject(e);
  FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createSingleFileOrFolderDescriptor();
  FileChooserDialog chooser=FileChooserFactory.getInstance().createFileChooser(descriptor,project,null);
  VirtualFile[] files=chooser.choose(null,project);
  if (files.length > 0) {
    final VirtualFile file=files[0];
    ProjectImportProvider[] providers=ProjectImportProvider.PROJECT_IMPORT_PROVIDER.getExtensions();
    ProjectImportProvider provider=ContainerUtil.find(providers,new Condition<ProjectImportProvider>(){
      @Override public boolean value(      ProjectImportProvider provider){
        return (project != null || provider.canCreateNewProject()) && provider.isMyFile(file);
      }
    }
);
    if (provider != null) {
      ImportProjectWizard wizard=new ImportProjectWizard(project,provider,file);
      if (wizard.getStepCount() > 0) {
        boolean b=wizard.showAndGet();
      }
 else {
        ProjectImportBuilder builder=provider.getBuilder();
        builder.setFileToImport(file.getPath());
        builder.commit(project);
      }
    }
  }
}
