{
  final String localName=variable.getName();
  final Project project=variable.getProject();
  final Collection<PsiReference> refs=ReferencesSearch.search(variable).findAll();
  ArrayList<PsiElement> exprs=new ArrayList<PsiElement>();
  for (  PsiReference ref : refs) {
    exprs.add(ref.getElement());
  }
  GroovyRefactoringUtil.highlightOccurrences(project,editor,exprs.toArray(new PsiElement[exprs.size()]));
  if (variable.getInitializerGroovy() == null) {
    String message=GroovyRefactoringBundle.message("cannot.find.a.single.definition.to.inline.local.var");
    CommonRefactoringUtil.showErrorHint(variable.getProject(),editor,message,REFACTORING_NAME,HelpID.INLINE_VARIABLE);
    return null;
  }
  if (refs.isEmpty()) {
    String message=GroovyRefactoringBundle.message("variable.is.never.used.0",variable.getName());
    CommonRefactoringUtil.showErrorHint(variable.getProject(),editor,message,REFACTORING_NAME,HelpID.INLINE_VARIABLE);
    return null;
  }
  return inlineDialogResult(localName,project,refs,false,false);
}
