{
  final DomElement targetDomElement=toDomElement(element);
  if (targetDomElement != null) {
    final AntDomTarget pointingToTarget=targetDomElement.getParentOfType(AntDomTarget.class,false);
    if (pointingToTarget != null) {
      final TargetResolver.Result result=doResolve(null);
      if (result != null) {
        final Map<String,AntDomTarget> variants=result.getVariants();
        String newName=null;
        if (!variants.isEmpty()) {
          List<Pair<String,String>> prefixNamePairs=null;
          for (          Map.Entry<String,AntDomTarget> entry : variants.entrySet()) {
            final AntDomTarget candidateTarget=entry.getValue();
            if (pointingToTarget.equals(candidateTarget)) {
              final String candidateName=entry.getKey();
              final String candidateTargetName=candidateTarget.getName().getRawText();
              if (candidateName.endsWith(candidateTargetName)) {
                final String prefix=candidateName.substring(0,candidateName.length() - candidateTargetName.length());
                if (prefixNamePairs == null) {
                  prefixNamePairs=new ArrayList<Pair<String,String>>();
                }
                prefixNamePairs.add(new Pair<String,String>(prefix,candidateName));
              }
            }
          }
          final String currentRefText=getCanonicalText();
          for (          Pair<String,String> pair : prefixNamePairs) {
            final String prefix=pair.getFirst();
            final String effectiveName=pair.getSecond();
            if (currentRefText.startsWith(prefix)) {
              if (newName == null || effectiveName.length() > newName.length()) {
                newName=effectiveName;
              }
            }
          }
        }
        if (newName != null) {
          handleElementRename(newName);
          if (myGroup != null) {
            myGroup.textChanged(this,newName);
          }
        }
      }
    }
  }
  return getElement();
}
