{
  if (StringUtil.isNotEmpty(path) && !new File(path).isFile()) {
    Messages.showErrorDialog(component,IdeBundle.message("error.file.not.found.message",path),IdeBundle.message("title.choose.action.icon"));
    return false;
  }
  String actionId=getActionId(node);
  if (actionId == null)   return false;
  final AnAction action=ActionManager.getInstance().getAction(actionId);
  if (action != null && action.getTemplatePresentation() != null) {
    if (StringUtil.isNotEmpty(path)) {
      Image image=null;
      try {
        image=ImageLoader.loadFromStream(VfsUtil.convertToURL(VfsUtil.pathToUrl(path.replace(File.separatorChar,'/'))).openStream());
      }
 catch (      IOException e) {
        LOG.debug(e);
      }
      Icon icon=new File(path).exists() ? IconLoader.getIcon(image) : null;
      if (icon != null) {
        if (icon.getIconWidth() > EMPTY_ICON.getIconWidth() || icon.getIconHeight() > EMPTY_ICON.getIconHeight()) {
          Messages.showErrorDialog(component,IdeBundle.message("custom.icon.validation.message"),IdeBundle.message("title.choose.action.icon"));
          return false;
        }
        node.setUserObject(Pair.create(actionId,icon));
        mySelectedSchema.addIconCustomization(actionId,path);
      }
    }
 else {
      node.setUserObject(Pair.create(actionId,null));
      mySelectedSchema.removeIconCustomization(actionId);
      final DefaultMutableTreeNode nodeOnToolbar=findNodeOnToolbar(actionId);
      if (nodeOnToolbar != null) {
        editToolbarIcon(actionId,nodeOnToolbar);
        node.setUserObject(nodeOnToolbar.getUserObject());
      }
    }
    return true;
  }
  return false;
}
