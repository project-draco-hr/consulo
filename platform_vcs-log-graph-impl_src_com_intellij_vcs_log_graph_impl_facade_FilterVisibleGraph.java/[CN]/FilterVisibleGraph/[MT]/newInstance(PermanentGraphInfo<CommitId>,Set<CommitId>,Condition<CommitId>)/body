{
  LinearGraphAsGraphWithHiddenNodes branchesGraph=createBranchesGraph(permanentGraph,heads);
  Condition<Integer> isVisibleNode=new Condition<Integer>(){
    @Override public boolean value(    Integer integer){
      CommitId commitId=permanentGraph.getPermanentCommitsInfo().getCommitId(integer);
      return filter.value(commitId);
    }
  }
;
  FilterGraphWithHiddenNodes filterGraphWithHiddenNodes=new FilterGraphWithHiddenNodes(branchesGraph,isVisibleNode);
  GraphWithHiddenNodesAsGraphWithCommitInfo<CommitId> graphWithCommitInfo=new GraphWithHiddenNodesAsGraphWithCommitInfo<CommitId>(filterGraphWithHiddenNodes,permanentGraph.getPermanentGraphLayout(),permanentGraph.getPermanentCommitsInfo());
  FilterPrintElementsManager printElementsManager=new FilterPrintElementsManager<CommitId>(graphWithCommitInfo,permanentGraph.getGraphColorManager());
  return new FilterVisibleGraph<CommitId>(graphWithCommitInfo,filterGraphWithHiddenNodes,permanentGraph.getCommitsWithNotLoadParent(),printElementsManager);
}
