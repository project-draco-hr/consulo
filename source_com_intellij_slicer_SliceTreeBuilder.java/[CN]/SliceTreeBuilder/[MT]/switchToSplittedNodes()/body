{
  final SliceRootNode root=(SliceRootNode)getRootNode().getUserObject();
  final Ref<Collection<PsiElement>> leafExpressions=Ref.create(null);
  boolean b=ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      Collection<PsiElement> l=SliceLeafAnalyzer.calcLeafExpressions(root,ProgressManager.getInstance().getProgressIndicator());
      leafExpressions.set(l);
    }
  }
,"Expanding all nodes... (may very well take the whole day)",true,root.getProject());
  if (!b)   return;
  Collection<PsiElement> leaves=leafExpressions.get();
  if (leaves.isEmpty()) {
    Messages.showErrorDialog("Unable to find leaf expressions to group by","Cannot group");
    return;
  }
  root.setChanged();
  root.restructureByLeaves(leaves);
  root.setChanged();
  splitByLeafExpressions=true;
  root.targetEqualUsages.clear();
  getUpdater().cancelAllRequests();
  getUpdater().addSubtreeToUpdateByElement(root);
}
