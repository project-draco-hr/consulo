{
  if (myLexer.getTokenType() != TokenTypeEx.IDENTIFIER)   return PatternPackageSet.SCOPE_ANY;
  String id=getTokenText();
  String scope=PatternPackageSet.SCOPE_ANY;
  if (PatternPackageSet.SCOPE_SOURCE.equals(id)) {
    scope=PatternPackageSet.SCOPE_SOURCE;
  }
  if (PatternPackageSet.SCOPE_TEST.equals(id)) {
    scope=PatternPackageSet.SCOPE_TEST;
  }
  if (PatternPackageSet.SCOPE_PROBLEM.equals(id)) {
    scope=PatternPackageSet.SCOPE_PROBLEM;
  }
  if (PatternPackageSet.SCOPE_LIBRARY.equals(id)) {
    scope=PatternPackageSet.SCOPE_LIBRARY;
  }
  if (PatternPackageSet.SCOPE_FILE.equals(id)) {
    scope=PatternPackageSet.SCOPE_FILE;
  }
  final CharSequence buf=myLexer.getBufferSequence();
  int end=myLexer.getTokenEnd();
  int bufferEnd=myLexer.getBufferEnd();
  if (scope == PatternPackageSet.SCOPE_ANY || end >= bufferEnd || buf.charAt(end) != ':' && buf.charAt(end) != '[') {
    return PatternPackageSet.SCOPE_ANY;
  }
  myLexer.advance();
  return scope;
}
