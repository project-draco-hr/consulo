{
  PsiManager psiManager=myConstructorCall.getManager();
  Project project=psiManager.getProject();
  PsiElementFactory elementFactory=psiManager.getElementFactory();
  try {
    PsiMethod constructor=elementFactory.createConstructor();
    constructor=(PsiMethod)targetClass.add(constructor);
    TemplateBuilder templateBuilder=new TemplateBuilder(constructor);
    CreateFromUsageUtils.setupMethodParameters(constructor,templateBuilder,myConstructorCall.getArgumentList(),getTargetSubstitutor(myConstructorCall));
    CreateClassFromNewAction.setupSuperCall(targetClass,constructor,templateBuilder);
    getReferenceElement(myConstructorCall).bindToElement(targetClass);
    Template template=templateBuilder.buildTemplate();
    Editor editor=positionCursor(project,targetClass.getContainingFile(),targetClass);
    TextRange textRange=constructor.getTextRange();
    editor.getDocument().deleteString(textRange.getStartOffset(),textRange.getEndOffset());
    editor.getCaretModel().moveToOffset(textRange.getStartOffset());
    startTemplate(editor,template,project);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
