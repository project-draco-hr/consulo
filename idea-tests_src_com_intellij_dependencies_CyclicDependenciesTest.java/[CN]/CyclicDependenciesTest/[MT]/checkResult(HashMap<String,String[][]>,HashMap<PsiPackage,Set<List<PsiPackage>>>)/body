{
  assertEquals(expected.size(),cycles.size());
  Iterator<PsiPackage> it=cycles.keySet().iterator();
  for (Iterator<String> iterator=expected.keySet().iterator(); iterator.hasNext(); ) {
    final String packs=iterator.next();
    final PsiPackage psiPackage=it.next();
    assertEquals(packs,psiPackage.getQualifiedName());
    assertEquals(expected.get(packs).length,cycles.get(psiPackage).size());
    Iterator<List<PsiPackage>> iC=cycles.get(psiPackage).iterator();
    for (int i=0; i < expected.get(packs).length; i++) {
      final String[] expectedCycle=expected.get(packs)[i];
      final List<PsiPackage> cycle=iC.next();
      assertEquals(expectedCycle.length,cycle.size());
      Iterator<PsiPackage> iCycle=cycle.iterator();
      for (int j=0; j < expectedCycle.length; j++) {
        final String expectedInCycle=expectedCycle[j];
        final PsiPackage packageInCycle=iCycle.next();
        assertEquals(expectedInCycle,packageInCycle.getQualifiedName());
      }
    }
  }
}
