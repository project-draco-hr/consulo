{
  final PsiElement parentElement=getParent();
  if (!(parentElement instanceof XmlTag))   return PsiReference.EMPTY_ARRAY;
  final PsiReference[] referencesFromProviders=ReferenceProvidersRegistry.getReferencesFromProviders(this,XmlAttribute.class);
  if (referencesFromProviders == null)   return new PsiReference[]{new MyPsiReference()};
  PsiReference[] refs;
  if (isNamespaceDeclaration()) {
    refs=new PsiReference[referencesFromProviders.length + 1];
    final String localName=getLocalName();
    final String prefix=XmlUtil.findPrefixByQualifiedName(getName());
    final TextRange range=prefix.length() == 0 ? TextRange.from(getName().length(),0) : TextRange.from(prefix.length() + 1,localName.length());
    refs[0]=new SchemaPrefixReference(this,range,localName,null);
  }
 else {
    final String prefix=getNamespacePrefix();
    if (prefix.length() > 0 && getLocalName().length() > 0) {
      refs=new PsiReference[referencesFromProviders.length + 2];
      refs[0]=new SchemaPrefixReference(this,TextRange.from(0,prefix.length()),prefix,null);
      refs[1]=new MyPsiReference();
    }
 else {
      refs=new PsiReference[referencesFromProviders.length + 1];
      refs[0]=new MyPsiReference();
    }
  }
  System.arraycopy(referencesFromProviders,0,refs,refs.length - referencesFromProviders.length,referencesFromProviders.length);
  return refs;
}
