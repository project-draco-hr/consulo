{
  final ProjectFileIndex index=ProjectRootManager.getInstance(project).getFileIndex();
  final VirtualFileFilter filter=new VirtualFileFilter(){
    public boolean accept(    final VirtualFile file){
      return index.isInContent(file) && scope.contains(file);
    }
  }
;
  return ApplicationManager.getApplication().runReadAction(new Computable<List<PsiFile>>(){
    public List<PsiFile> compute(){
      final Collection<VirtualFile> files=FileBasedIndex.getInstance().getContainingFiles(NAME,className,filter);
      if (files.isEmpty())       return Collections.emptyList();
      List<PsiFile> result=new ArrayList<PsiFile>();
      for (      VirtualFile file : files) {
        if (!file.isValid())         continue;
        PsiFile psiFile=PsiManager.getInstance(project).findFile(file);
        if (psiFile != null) {
          result.add(psiFile);
        }
      }
      return result;
    }
  }
);
}
