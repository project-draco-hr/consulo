{
  myOriginalConfiguration=originalConfiguration;
  myModifiedConfiguration=modifiedConfiguration;
  myModulesProvider=modulesProvider;
  myFacetsProvider=facetsProvider;
  myPolicy=policy;
  myBuilder=builder;
  myProject=myPolicy.getModule().getProject();
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      JBPopupFactory.getInstance().createListPopup(createAddActionsPopup()).showUnderneathOf(myAddButton);
    }
  }
);
  myEditButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      ContainerElement element=getSelectedElement();
      if (element != null) {
        editElement(element);
      }
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      Pair<List<ContainerElement>,Set<PackagingArtifact>> pair=getSelectedElements();
      List<ContainerElement> toRemove=pair.getFirst();
      Set<PackagingArtifact> owners=pair.getSecond();
      if (!owners.isEmpty()) {
        StringBuilder ownersBuffer=new StringBuilder();
        for (        PackagingArtifact owner : owners) {
          if (ownersBuffer.length() > 0) {
            ownersBuffer.append(", ");
          }
          ownersBuffer.append(owner.getDisplayName());
        }
        String message;
        if (owners.size() == 1 && toRemove.isEmpty()) {
          PackagingArtifact artifact=owners.iterator().next();
          message=ProjectBundle.message("message.text.packaging.selected.item.belongs.to.0.do.you.want.to.exlude.1.from.2",artifact.getDisplayName(),artifact.getDisplayName(),myRootArtifact.getDisplayName());
        }
 else {
          message=ProjectBundle.message("message.text.packaging.do.you.want.to.exlude.0.from.1",ownersBuffer,myRootArtifact.getDisplayName());
        }
        int answer=Messages.showYesNoDialog(myMainPanel,message,ProjectBundle.message("dialog.title.packaging.remove.included"),null);
        if (answer != 0) {
          return;
        }
      }
      saveData();
      for (      ContainerElement containerElement : toRemove) {
        myModifiedConfiguration.removeContainerElement(containerElement);
      }
      for (      PackagingArtifact owner : owners) {
        ContainerElement element=owner.getContainerElement();
        if (element != null) {
          myModifiedConfiguration.removeContainerElement(element);
        }
      }
      rebuildTree();
    }
  }
);
  myShowIncludedCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      rebuildTree();
    }
  }
);
}
