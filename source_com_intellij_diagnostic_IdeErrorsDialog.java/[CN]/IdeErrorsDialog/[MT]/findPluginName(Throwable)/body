{
  StackTraceElement[] elements=t.getStackTrace();
  for (int i=0; i < elements.length; i++) {
    StackTraceElement element=elements[i];
    String className=element.getClassName();
    if (PluginManager.isPluginClass(className)) {
      return PluginManager.getPluginByClassName(className);
    }
  }
  if (t instanceof NoSuchMethodException) {
    if (t.getMessage() != null) {
      String className="";
      StringTokenizer tok=new StringTokenizer(t.getMessage(),".");
      while (tok.hasMoreTokens()) {
        String token=tok.nextToken();
        if (token.length() > 0 && Character.isJavaIdentifierStart(token.charAt(0))) {
          className+=token;
        }
      }
      if (PluginManager.isPluginClass(className)) {
        return PluginManager.getPluginByClassName(className);
      }
    }
  }
 else   if (t instanceof ClassNotFoundException) {
    if (t.getMessage() != null) {
      String className=t.getMessage();
      if (PluginManager.isPluginClass(className)) {
        return PluginManager.getPluginByClassName(className);
      }
    }
  }
 else   if (t instanceof PluginException) {
    return ((PluginException)t).getDescriptor().getName();
  }
  return null;
}
