{
  final GridBagLayout layout=new GridBagLayout();
  final JPanel panel=new JPanel(layout);
  final JLabel patternLabel=new JLabel("Pattern:");
  patternLabel.setHorizontalAlignment(SwingConstants.TRAILING);
  final JLabel minLengthLabel=new JLabel("Min Length:");
  minLengthLabel.setHorizontalAlignment(SwingConstants.TRAILING);
  final JLabel maxLengthLabel=new JLabel("Max Length:");
  maxLengthLabel.setHorizontalAlignment(SwingConstants.TRAILING);
  final JCheckBox forLoopCheckBox=new JCheckBox("Ignore for-loop parameters",m_ignoreForLoopParameters);
  final ButtonModel forLoopModel=forLoopCheckBox.getModel();
  forLoopModel.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      m_ignoreForLoopParameters=forLoopModel.isSelected();
    }
  }
);
  final JCheckBox catchCheckBox=new JCheckBox("Ignore catch block parameters",m_ignoreCatchParameters);
  final ButtonModel catchBlockModel=catchCheckBox.getModel();
  catchBlockModel.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      m_ignoreCatchParameters=catchBlockModel.isSelected();
    }
  }
);
  final NumberFormat format=NumberFormat.getIntegerInstance();
  format.setParseIntegerOnly(true);
  format.setMinimumIntegerDigits(1);
  format.setMaximumIntegerDigits(2);
  final InternationalFormatter formatter=new InternationalFormatter(format);
  formatter.setAllowsInvalid(false);
  formatter.setCommitsOnValidEdit(true);
  final JFormattedTextField minLengthField=new JFormattedTextField(formatter);
  final Font panelFont=panel.getFont();
  minLengthField.setFont(panelFont);
  minLengthField.setValue(m_minLength);
  minLengthField.setColumns(2);
  FormattedTextFieldMacFix.apply(minLengthField);
  final JFormattedTextField maxLengthField=new JFormattedTextField(formatter);
  maxLengthField.setFont(panelFont);
  maxLengthField.setValue(m_maxLength);
  maxLengthField.setColumns(2);
  FormattedTextFieldMacFix.apply(maxLengthField);
  final JFormattedTextField regexField=new JFormattedTextField(new RegExFormatter());
  regexField.setFont(panelFont);
  regexField.setValue(m_regexPattern);
  regexField.setColumns(LOCAL_REGEX_COLUMN_COUNT);
  regexField.setInputVerifier(new RegExInputVerifier());
  regexField.setFocusLostBehavior(JFormattedTextField.COMMIT);
  FormattedTextFieldMacFix.apply(regexField);
  final DocumentListener listener=new DocumentListener(){
    public void changedUpdate(    DocumentEvent e){
      textChanged();
    }
    public void insertUpdate(    DocumentEvent e){
      textChanged();
    }
    public void removeUpdate(    DocumentEvent e){
      textChanged();
    }
    private void textChanged(){
      m_regexPattern=(Pattern)regexField.getValue();
      m_regex=m_regexPattern.pattern();
      m_minLength=((Number)minLengthField.getValue()).intValue();
      m_maxLength=((Number)maxLengthField.getValue()).intValue();
    }
  }
;
  final Document regexDocument=regexField.getDocument();
  regexDocument.addDocumentListener(listener);
  final Document minLengthDocument=minLengthField.getDocument();
  minLengthDocument.addDocumentListener(listener);
  final Document maxLengthDocument=maxLengthField.getDocument();
  maxLengthDocument.addDocumentListener(listener);
  final GridBagConstraints constraints=new GridBagConstraints();
  constraints.gridx=0;
  constraints.gridy=0;
  constraints.weightx=1.0;
  constraints.anchor=GridBagConstraints.EAST;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  panel.add(patternLabel,constraints);
  constraints.gridx=1;
  constraints.gridy=0;
  constraints.gridwidth=3;
  constraints.anchor=GridBagConstraints.WEST;
  panel.add(regexField,constraints);
  constraints.gridx=0;
  constraints.gridy=1;
  constraints.gridwidth=1;
  constraints.anchor=GridBagConstraints.EAST;
  panel.add(minLengthLabel,constraints);
  constraints.gridx=1;
  constraints.gridy=1;
  constraints.anchor=GridBagConstraints.WEST;
  panel.add(minLengthField,constraints);
  constraints.gridx=2;
  constraints.gridy=1;
  constraints.anchor=GridBagConstraints.EAST;
  panel.add(maxLengthLabel,constraints);
  constraints.gridx=3;
  constraints.gridy=1;
  constraints.anchor=GridBagConstraints.WEST;
  panel.add(maxLengthField,constraints);
  constraints.gridx=1;
  constraints.gridy=2;
  constraints.gridwidth=3;
  constraints.anchor=GridBagConstraints.WEST;
  panel.add(forLoopCheckBox,constraints);
  constraints.gridx=1;
  constraints.gridy=3;
  constraints.gridwidth=3;
  constraints.anchor=GridBagConstraints.WEST;
  panel.add(catchCheckBox,constraints);
  return panel;
}
