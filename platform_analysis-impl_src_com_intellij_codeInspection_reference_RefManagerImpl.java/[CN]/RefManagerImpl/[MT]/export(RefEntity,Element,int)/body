{
  refEntity=getRefinedElement(refEntity);
  Element problem=new Element("problem");
  if (refEntity instanceof RefElement) {
    final RefElement refElement=(RefElement)refEntity;
    final SmartPsiElementPointer pointer=refElement.getPointer();
    PsiFile psiFile=pointer.getContainingFile();
    if (psiFile == null)     return null;
    Element fileElement=new Element("file");
    Element lineElement=new Element("line");
    final VirtualFile virtualFile=psiFile.getVirtualFile();
    LOG.assertTrue(virtualFile != null);
    fileElement.addContent(virtualFile.getUrl());
    if (actualLine == -1) {
      final Document document=PsiDocumentManager.getInstance(pointer.getProject()).getDocument(psiFile);
      LOG.assertTrue(document != null);
      final Segment range=pointer.getRange();
      lineElement.addContent(String.valueOf(range != null ? document.getLineNumber(range.getStartOffset()) + 1 : -1));
    }
 else {
      lineElement.addContent(String.valueOf(actualLine));
    }
    problem.addContent(fileElement);
    problem.addContent(lineElement);
    appendModule(problem,refElement.getModule());
  }
 else   if (refEntity instanceof RefModule) {
    final RefModule refModule=(RefModule)refEntity;
    final VirtualFile moduleDir=refModule.getModule().getModuleDir();
    final Element fileElement=new Element("file");
    fileElement.addContent(moduleDir != null ? moduleDir.getUrl() : refEntity.getName());
    problem.addContent(fileElement);
    appendModule(problem,refModule);
  }
  for (  RefManagerExtension extension : myExtensions.values()) {
    extension.export(refEntity,problem);
  }
  new SmartRefElementPointerImpl(refEntity,true).writeExternal(problem);
  element.addContent(problem);
  return problem;
}
