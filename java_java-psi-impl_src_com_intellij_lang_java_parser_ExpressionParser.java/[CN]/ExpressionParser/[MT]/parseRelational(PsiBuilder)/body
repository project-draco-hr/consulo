{
  PsiBuilder.Marker left=parseExpression(builder,ExprType.SHIFT);
  if (left == null)   return null;
  while (true) {
    final IElementType toCreate;
    final ExprType toParse;
    final IElementType tokenType=getGtTokenType(builder);
    if (RELATIONAL_OPS.contains(tokenType)) {
      toCreate=JavaElementType.BINARY_EXPRESSION;
      toParse=ExprType.SHIFT;
    }
 else     if (tokenType == JavaTokenType.INSTANCEOF_KEYWORD) {
      toCreate=JavaElementType.INSTANCE_OF_EXPRESSION;
      toParse=ExprType.TYPE;
    }
 else {
      break;
    }
    final PsiBuilder.Marker expression=left.precede();
    advanceGtToken(builder,tokenType);
    final PsiBuilder.Marker right=parseExpression(builder,toParse);
    if (right == null) {
      error(builder,toParse == ExprType.TYPE ? JavaErrorMessages.message("expected.type") : JavaErrorMessages.message("expected.expression"));
      expression.done(toCreate);
      return expression;
    }
    expression.done(toCreate);
    left=expression;
  }
  return left;
}
