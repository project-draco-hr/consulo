{
  final PsiExpression expression=(PsiExpression)element;
  final PsiType type=expression.getType();
  if (PsiType.INT.equals(type) || PsiType.LONG.equals(type)) {
    @NonNls String textString=expression.getText();
    final int textLength=textString.length();
    final char lastChar=textString.charAt(textLength - 1);
    final boolean isLong=lastChar == 'l' || lastChar == 'L';
    final int testBit;
    if (isLong) {
      testBit=63;
      textString=textString.substring(0,textLength - 1);
    }
 else {
      testBit=31;
    }
    BigInteger value;
    if (textString.startsWith("0x")) {
      final String rawIntString=textString.substring(2);
      value=new BigInteger(rawIntString,16);
    }
 else {
      final String rawIntString=textString.substring(1);
      value=new BigInteger(rawIntString,8);
    }
    if (value.testBit(testBit)) {
      value=value.xor(BINARY_ONES).add(BigInteger.ONE).negate();
    }
    String decimalString=value.toString(10);
    if (isLong) {
      decimalString+='L';
    }
    replaceExpression(decimalString,expression);
  }
 else {
    String textString=expression.getText();
    final int textLength=textString.length();
    final char lastChar=textString.charAt(textLength - 1);
    final boolean isFloat=lastChar == 'f' || lastChar == 'F';
    if (isFloat) {
      textString=textString.substring(0,textLength - 1);
    }
    if (isFloat) {
      final float floatValue=Float.parseFloat(textString);
      final String floatString=Float.toString(floatValue) + lastChar;
      replaceExpression(floatString,expression);
    }
 else {
      final double floatValue=Double.parseDouble(textString);
      final String floatString=Double.toString(floatValue);
      replaceExpression(floatString,expression);
    }
  }
}
