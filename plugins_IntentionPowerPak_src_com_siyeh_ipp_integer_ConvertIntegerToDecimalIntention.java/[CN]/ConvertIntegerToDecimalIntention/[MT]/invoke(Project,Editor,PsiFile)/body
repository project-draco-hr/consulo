{
  final PsiLiteralExpression exp=(PsiLiteralExpression)findMatchingElement(file,editor);
  String textString=exp.getText();
  final int textLength=textString.length();
  final char lastChar=textString.charAt(textLength - 1);
  final boolean isLong=lastChar == 'l' || lastChar == 'L';
  if (isLong) {
    textString=textString.substring(0,textLength - 1);
  }
  final BigInteger val;
  if (textString.startsWith("0x")) {
    final String rawIntString=textString.substring(2);
    val=new BigInteger(rawIntString,16);
  }
 else {
    final String rawIntString=textString.substring(1);
    val=new BigInteger(rawIntString,8);
  }
  String decimalString=val.toString(10);
  if (isLong) {
    decimalString+='L';
  }
  replaceExpression(project,decimalString,exp);
}
