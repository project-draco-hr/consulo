{
  final PsiType type=initializerExpression.getType();
  if (type != null && PsiUtil.isConstantExpression(initializerExpression)) {
    if (type instanceof PsiPrimitiveType || PsiType.getJavaLangString(initializerExpression.getManager(),initializerExpression.getResolveScope()).equals(type)) {
      return super.getParentClass(initializerExpression);
    }
  }
  PsiElement parent=initializerExpression.getUserData(ElementToWorkOn.PARENT);
  if (parent == null)   parent=initializerExpression;
  PsiClass aClass=PsiTreeUtil.getParentOfType(parent,PsiClass.class);
  while (aClass != null) {
    if (aClass.hasModifierProperty(PsiModifier.STATIC))     return aClass;
    if (aClass.getParent() instanceof PsiJavaFile)     return aClass;
    aClass=PsiTreeUtil.getParentOfType(aClass,PsiClass.class);
  }
  return null;
}
