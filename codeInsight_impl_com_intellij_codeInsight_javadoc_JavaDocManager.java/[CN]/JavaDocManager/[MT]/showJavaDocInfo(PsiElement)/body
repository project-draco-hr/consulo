{
  final JavaDocInfoComponent component=new JavaDocInfoComponent(this);
  final JBPopup hint=JBPopupFactory.getInstance().createComponentPopupBuilder(component,component).setRequestFocus(true).setForceHeavyweight(true).setDimensionServiceKey(JAVADOC_LOCATION_AND_SIZE).setResizable(true).setMovable(true).setTitle(CodeInsightBundle.message("javadoc.info.title",SymbolPresentationUtil.getSymbolPresentableText(element))).setCallback(new Runnable(){
    public void run(){
      if (fromQuickSearch()) {
        ((ChooseByNameBase.JPanelProvider)myPreviouslyFocused.getParent()).unregisterHint();
      }
      myEditor=null;
      myPreviouslyFocused=null;
    }
  }
).createPopup();
  JBPopupImpl oldHint=(JBPopupImpl)getDocInfoHint();
  if (oldHint != null) {
    JavaDocInfoComponent oldComponent=(JavaDocInfoComponent)oldHint.getComponent();
    PsiElement element1=oldComponent.getElement();
    if (element.equals(element1)) {
      return oldHint;
    }
    oldHint.cancel();
  }
  component.setHint(hint);
  fetchDocInfo(getDefaultProvider(element),component);
  myDocInfoHintRef=new WeakReference<JBPopup>(hint);
  myPreviouslyFocused=WindowManagerEx.getInstanceEx().getFocusedComponent(myProject);
  if (fromQuickSearch()) {
    ((ChooseByNameBase.JPanelProvider)myPreviouslyFocused.getParent()).registerHint(hint);
  }
  return hint;
}
