{
  cancelCurrentFindRequest();
  myAlarm.cancelAllRequests();
  myAlarm.addRequest(new Runnable(){
    public void run(){
      new Thread(new Runnable(){
        public void run(){
          final ProgressIndicator progress=new MyProgressIndicator();
          myCurrentProgress=progress;
          ProgressManager.getInstance().runProcess(new Runnable(){
            public void run(){
              ApplicationManager.getApplication().runReadAction(new Runnable(){
                public void run(){
                  UsageInfo[] usages=new UsageInfo[0];
                  try {
                    usages=FindDependencyUtil.findDependencies(builder,searchIn,searchFor);
                  }
 catch (                  ProcessCanceledException e) {
                  }
catch (                  Exception e) {
                    LOG.error(e);
                  }
                  if (!progress.isCanceled()) {
                    final UsageInfo[] finalUsages=usages;
                    ApplicationManager.getApplication().invokeLater(new Runnable(){
                      public void run(){
                        showUsages(finalUsages);
                      }
                    }
,ModalityState.stateForComponent(UsagesPanel.this));
                  }
                }
              }
);
              myCurrentProgress=null;
            }
          }
,progress);
        }
      }
).start();
    }
  }
,300);
}
