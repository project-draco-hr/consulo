{
  PsiElement scope=position;
  while (true) {
    if (scope instanceof PsiFile || scope instanceof PsiClassInitializer) {
      return TailType.NONE;
    }
    if (scope instanceof PsiMethod) {
      final PsiMethod method=(PsiMethod)scope;
      if (method.isConstructor() || PsiType.VOID.equals(method.getReturnType())) {
        return TailType.SEMICOLON;
      }
      return TailType.HUMBLE_SPACE_BEFORE_WORD;
    }
    if (scope instanceof PsiLambdaExpression) {
      final PsiType returnType=LambdaUtil.getFunctionalInterfaceReturnType(((PsiLambdaExpression)scope));
      if (PsiType.VOID.equals(returnType)) {
        return TailType.SEMICOLON;
      }
      return TailType.HUMBLE_SPACE_BEFORE_WORD;
    }
    scope=scope.getParent();
  }
}
