{
  VirtualFile[] contentRoots=myVcsManager.getRootsUnderVcs(myVcs);
  if (contentRoots == null || contentRoots.length == 0) {
    return;
  }
  Set<VirtualFile> currentRootSet=GitUtil.gitRootsForPaths(Arrays.asList(contentRoots));
  HashSet<VirtualFile> newRoots=new HashSet<VirtualFile>(currentRootSet);
synchronized (myReportedRoots) {
    for (Iterator<VirtualFile> i=myReportedRoots.iterator(); i.hasNext(); ) {
      VirtualFile root=i.next();
      if (!root.isValid()) {
        i.remove();
      }
    }
    newRoots.removeAll(myReportedRoots);
    myReportedRoots.clear();
    myReportedRoots.addAll(currentRootSet);
  }
  for (  VirtualFile root : newRoots) {
    VirtualFile config=root.findFileByRelativePath(".git/config");
    myMulticaster.configChanged(root,config);
  }
  VirtualFile userHome=getUserHome();
  if (userHome != null) {
    userHome.getChildren();
  }
}
