{
  final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  Document document=editor.getDocument();
  final PsiFile file=documentManager.getPsiFile(document);
  final int offset=editor.getCaretModel().getOffset();
  fqn=fqn.replace('#','.');
  String toInsert=element.getName();
  String suffix="";
  if (element instanceof PsiClass) {
    suffix=" ";
  }
 else   if (element instanceof PsiMethod) {
    suffix="()";
  }
  final PsiElementFactory factory=PsiManager.getInstance(project).getElementFactory();
  final PsiExpression expression=factory.createExpressionFromText(toInsert + suffix,file.findElementAt(offset));
  final PsiReferenceExpression referenceExpression=expression instanceof PsiMethodCallExpression ? ((PsiMethodCallExpression)expression).getMethodExpression() : expression instanceof PsiReferenceExpression ? (PsiReferenceExpression)expression : null;
  if (referenceExpression == null || referenceExpression.advancedResolve(true).getElement() != element) {
    toInsert=fqn;
  }
  document.insertString(offset,toInsert + suffix);
  documentManager.commitDocument(document);
  int endOffset=offset + toInsert.length() + suffix.length();
  RangeMarker rangeMarker=document.createRangeMarker(endOffset,endOffset);
  PsiElement elementAt=file.findElementAt(offset);
  shortenReference(elementAt);
  CodeStyleManager.getInstance(project).adjustLineIndent(file,offset);
  int caretOffset=rangeMarker.getEndOffset();
  if (element instanceof PsiMethod) {
    caretOffset--;
  }
  editor.getCaretModel().moveToOffset(caretOffset);
}
