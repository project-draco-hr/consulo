{
  if (processed.contains(method))   return false;
  processed.add(method);
  final PsiParameter[] params=method.getParameterList().getParameters();
  PsiParameter param;
  if (idx >= params.length) {
    if (params.length == 0) {
      return false;
    }
    PsiParameter lastParam=params[params.length - 1];
    if (lastParam.isVarArgs()) {
      param=lastParam;
    }
 else {
      return false;
    }
  }
 else {
    param=params[idx];
  }
  final PsiAnnotation annotation=AnnotationUtil.findAnnotation(param,annFqn);
  if (annotation != null) {
    final PsiAnnotationParameterList parameterList=annotation.getParameterList();
    final PsiNameValuePair[] attributes=parameterList.getAttributes();
    for (    PsiNameValuePair attribute : attributes) {
      final String name=attribute.getName();
      if (annotationAttributeValues.containsKey(name)) {
        annotationAttributeValues.put(name,attribute.getValue());
      }
    }
    return true;
  }
  if (nonNlsTargets != null) {
    nonNlsTargets.add(param);
  }
  final PsiMethod[] superMethods=method.findSuperMethods();
  for (  PsiMethod superMethod : superMethods) {
    if (isMethodParameterAnnotatedWith(superMethod,idx,processed,annFqn,annotationAttributeValues,null))     return true;
  }
  return false;
}
