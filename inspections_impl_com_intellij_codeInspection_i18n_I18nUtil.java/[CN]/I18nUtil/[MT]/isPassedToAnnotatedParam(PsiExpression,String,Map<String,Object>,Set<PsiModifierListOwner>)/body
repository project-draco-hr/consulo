{
  expression=getToplevelExpression(expression);
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiExpressionList) {
    int idx=-1;
    final PsiExpression[] args=((PsiExpressionList)parent).getExpressions();
    for (int i=0; i < args.length; i++) {
      PsiExpression arg=args[i];
      if (PsiTreeUtil.isAncestor(arg,expression,false)) {
        idx=i;
        break;
      }
    }
    if (idx == -1)     return false;
    PsiElement grParent=parent.getParent();
    if (grParent instanceof PsiAnonymousClass) {
      grParent=grParent.getParent();
    }
    if (grParent instanceof PsiCall) {
      PsiMethod method=((PsiCall)grParent).resolveMethod();
      if (method != null) {
        if (isMethodParameterAnnotatedWith(method,idx,new HashSet<PsiMethod>(),annFqn,annotationAttributeValues,nonNlsTargets)) {
          return true;
        }
      }
    }
  }
  return false;
}
