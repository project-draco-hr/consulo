{
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  if (!method.hasModifierProperty(PsiModifier.NATIVE)) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null) {
    return;
  }
  final String className=containingClass.getQualifiedName();
  if ("java.lang.Object".equals(className)) {
    return;
  }
  if (!SynchronizationUtil.isInSynchronizedContext(expression)) {
    return;
  }
  registerMethodCallError(expression);
}
