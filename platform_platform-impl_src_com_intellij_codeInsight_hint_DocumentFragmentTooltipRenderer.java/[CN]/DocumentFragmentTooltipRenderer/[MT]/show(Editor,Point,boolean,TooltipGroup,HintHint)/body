{
  LightweightHint hint;
  final JComponent editorComponent=editor.getComponent();
  TextRange range=myDocumentFragment.getTextRange();
  int startOffset=range.getStartOffset();
  int endOffset=range.getEndOffset();
  Document doc=myDocumentFragment.getDocument();
  int endLine=doc.getLineNumber(endOffset);
  int startLine=doc.getLineNumber(startOffset);
  JLayeredPane layeredPane=editorComponent.getRootPane().getLayeredPane();
  VisualPosition visual=editor.offsetToVisualPosition(startOffset);
  p=editor.visualPositionToXY(visual);
  p=SwingUtilities.convertPoint(((EditorEx)editor).getGutterComponentEx(),p,layeredPane);
  p.x-=3;
  p.y+=editor.getLineHeight();
  Point screenPoint=new Point(p);
  SwingUtilities.convertPointToScreen(screenPoint,layeredPane);
  int maxLineCount=(ScreenUtil.getScreenRectangle(screenPoint).height - screenPoint.y) / editor.getLineHeight();
  if (endLine - startLine > maxLineCount) {
    endOffset=doc.getLineEndOffset(Math.max(0,Math.min(startLine + maxLineCount,doc.getLineCount() - 1)));
  }
  FoldingModelEx foldingModel=(FoldingModelEx)editor.getFoldingModel();
  foldingModel.setFoldingEnabled(false);
  TextRange textRange=new TextRange(startOffset,endOffset);
  hint=EditorFragmentComponent.showEditorFragmentHintAt(editor,textRange,p.x,p.y,false,false,true);
  foldingModel.setFoldingEnabled(true);
  return hint;
}
