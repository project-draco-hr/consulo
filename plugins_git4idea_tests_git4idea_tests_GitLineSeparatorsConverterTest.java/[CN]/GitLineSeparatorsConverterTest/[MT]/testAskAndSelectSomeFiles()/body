{
  final AtomicBoolean dialogShown=new AtomicBoolean();
  myDialogManager.registerDialogHandler(GitConvertFilesDialog.class,new TestDialogHandler<GitConvertFilesDialog>(){
    @Override public int handleDialog(    GitConvertFilesDialog dialog){
      try {
        Field field=GitConvertFilesDialog.class.getDeclaredField("myFilesToConvert");
        field.setAccessible(true);
        CheckboxTreeBase tree=(CheckboxTreeBase)field.get(dialog);
        CheckedTreeNode macFileNode=getNodeForObject(tree,macFile);
        Method method=CheckboxTreeBase.class.getDeclaredMethod("checkNode",CheckedTreeNode.class,Boolean.TYPE);
        method.setAccessible(true);
        method.invoke(tree,macFileNode,false);
        dialogShown.set(true);
      }
 catch (      Exception e) {
        fail("",e);
      }
      return GitConvertFilesDialog.OK_EXIT_CODE;
    }
  }
);
  mySettings.setLineSeparatorsConversion(GitVcsSettings.ConversionPolicy.ASK);
  editAllFilesWithoutChangingSeparators();
  commit();
  assertTrue(dialogShown.get());
  assertSeparator(unixFile,myCodeStyleSeparator);
  assertSeparator(winFile,myCodeStyleSeparator);
  assertSeparator(macFile,"\r");
}
