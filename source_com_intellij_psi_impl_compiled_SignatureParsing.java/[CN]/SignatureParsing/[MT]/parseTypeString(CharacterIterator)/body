{
  @NonNls String text;
  int arrayDimensions=0;
  while (signature.current() == '[') {
    arrayDimensions++;
    signature.next();
  }
  char variance=parseVariance(signature);
switch (signature.current()) {
case 'L':
    text=parseParameterizedClassRefSignature(signature);
  break;
case 'T':
text=parseTypeVariableRefSignature(signature);
break;
case 'B':
text="byte";
signature.next();
break;
case 'C':
text="char";
signature.next();
break;
case 'D':
text="double";
signature.next();
break;
case 'F':
text="float";
signature.next();
break;
case 'I':
text="int";
signature.next();
break;
case 'J':
text="long";
signature.next();
break;
case 'S':
text="short";
signature.next();
break;
case 'Z':
text="boolean";
signature.next();
break;
case 'V':
text="void";
signature.next();
break;
default :
throw new ClsFormatException();
}
for (int i=0; i < arrayDimensions; i++) text+="[]";
if (variance != '\0') {
text=variance + text;
}
return text;
}
