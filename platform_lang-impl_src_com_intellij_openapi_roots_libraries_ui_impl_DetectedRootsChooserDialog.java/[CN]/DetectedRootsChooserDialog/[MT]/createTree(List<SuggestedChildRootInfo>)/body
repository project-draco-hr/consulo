{
  TObjectIntHashMap<VirtualFile> rootTypesCount=new TObjectIntHashMap<VirtualFile>();
  for (  SuggestedChildRootInfo suggestedRoot : suggestedRoots) {
    final VirtualFile root=suggestedRoot.getSuggestedRoot().getFile();
    if (!rootTypesCount.containsKey(root)) {
      rootTypesCount.put(root,0);
    }
    rootTypesCount.increment(root);
  }
  CheckedTreeNode root=new CheckedTreeNode(null);
  Map<VirtualFile,CheckedTreeNode> rootCandidateNodes=new HashMap<VirtualFile,CheckedTreeNode>();
  for (  SuggestedChildRootInfo rootInfo : suggestedRoots) {
    final VirtualFile rootCandidate=rootInfo.getRootCandidate();
    CheckedTreeNode parent=rootCandidateNodes.get(rootCandidate);
    if (parent == null) {
      parent=new VirtualFileCheckedTreeNode(rootCandidate);
      rootCandidateNodes.put(rootCandidate,parent);
      root.add(parent);
    }
    final String rootType=rootTypesCount.get(rootInfo.getSuggestedRoot().getFile()) > 1 ? rootInfo.getRootTypeName() : null;
    parent.add(new VirtualFileCheckedTreeNode(rootInfo,rootType));
  }
  return root;
}
