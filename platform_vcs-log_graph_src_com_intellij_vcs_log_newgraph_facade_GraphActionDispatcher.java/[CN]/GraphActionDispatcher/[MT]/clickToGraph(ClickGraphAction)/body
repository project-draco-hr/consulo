{
  int visibleRowIndex=action.getRow();
  if (visibleRowIndex >= myGraphData.getMutableGraph().getCountVisibleNodes())   return null;
  Point clickPoint=action.getRelativePoint();
  if (clickPoint == null) {
    return null;
  }
  Pair<SpecialRowElement,GraphElement> arrowOrGraphElement=getOverArrowOrGraphElement(visibleRowIndex,clickPoint);
  if (arrowOrGraphElement.first != null) {
    int toRow;
    Edge edge=(Edge)arrowOrGraphElement.first.getElement();
    if (arrowOrGraphElement.first.getType() == SpecialRowElement.Type.DOWN_ARROW)     toRow=edge.getDownNodeVisibleIndex();
 else     toRow=edge.getUpNodeVisibleIndex();
    if (toRow == SomeGraph.NOT_LOAD_COMMIT) {
      int indexOfParentCommit=myGraphData.getMutableGraph().getNode(edge.getUpNodeVisibleIndex()).getDownEdges().indexOf(edge);
      int indexInPermanentGraph=myGraphData.getMutableGraph().getIndexInPermanentGraph(edge.getUpNodeVisibleIndex());
      int commitHashIndex=myGraphData.getPermanentGraph().getHashIndex(indexInPermanentGraph);
      GraphCommit commit=myGraphData.getCommitsWithNotLoadParentMap().get(commitHashIndex);
      if (indexOfParentCommit >= 0 && indexOfParentCommit < commit.getParentIndices().length) {
        return ActionRequestGraphAnswer.jumpToNotLoadCommit(commit.getParentIndices()[indexOfParentCommit]);
      }
 else {
        LOG.error("Jump to not load commit with bad edge index. " + "Edge index: " + indexOfParentCommit + ", commit hash index: "+ commitHashIndex+ "count parents commits: "+ commit.getParentIndices().length+ ".");
        return null;
      }
    }
    return ActionRequestGraphAnswer.jumpToRow(toRow);
  }
 else {
    int toRow=myGraphData.getMutableGraph().performAction(new ClickInternalGraphAction(arrowOrGraphElement.second));
    myGraphData.getMutableGraph().performAction(new MouseOverGraphElementInternalGraphAction(null));
    myGraphData.getGraphRender().invalidate();
    if (toRow != -1)     return ActionRequestGraphAnswer.jumpToRow(toRow);
    return null;
  }
}
