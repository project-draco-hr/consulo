{
  final TreeCellRenderer defaultRenderer=tree.getCellRenderer();
  JScrollPane scrollpane=new JBScrollPane(tree){
    private int myAddRemoveCounter=0;
    private boolean myShouldResetCaches=false;
    public void setSize(    Dimension d){
      boolean isChanged=getWidth() != d.width || myShouldResetCaches;
      super.setSize(d);
      if (isChanged)       resetCaches();
    }
    public void reshape(    int x,    int y,    int w,    int h){
      boolean isChanged=w != getWidth() || myShouldResetCaches;
      super.reshape(x,y,w,h);
      if (isChanged)       resetCaches();
    }
    private void resetCaches(){
      resetHeightCache(tree,defaultRenderer,renderer);
      myShouldResetCaches=false;
    }
    public void addNotify(){
      super.addNotify();
      if (myAddRemoveCounter == 0)       myShouldResetCaches=true;
      myAddRemoveCounter++;
    }
    public void removeNotify(){
      super.removeNotify();
      myAddRemoveCounter--;
    }
  }
;
  scrollpane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
  scrollpane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  tree.setCellRenderer(renderer);
  scrollpane.addComponentListener(new ComponentAdapter(){
    public void componentResized(    ComponentEvent e){
      resetHeightCache(tree,defaultRenderer,renderer);
    }
    public void componentShown(    ComponentEvent e){
      resetHeightCache(tree,defaultRenderer,renderer);
    }
  }
);
  return scrollpane;
}
