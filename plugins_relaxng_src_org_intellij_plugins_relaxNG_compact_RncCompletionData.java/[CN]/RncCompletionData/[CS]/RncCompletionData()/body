{
  declareFinalScope(RncElement.class);
  final CompletionVariant variant=new CompletionVariant(new AndFilter(new ElementFilter(){
    public boolean isAcceptable(    Object element,    PsiElement context){
      return true;
    }
    public boolean isClassAcceptable(    Class hintClass){
      return PsiElement.class.isAssignableFrom(hintClass);
    }
  }
,new PatternFilter(or(psiElement().afterLeaf(psiElement(RncTokenTypes.KEYWORD_DEFAULT)),not(or(psiElement().inside(psiElement(RncTokenTypes.LITERAL)),psiElement().afterLeaf(psiElement().withElementType(RncTokenTypes.KEYWORDS))))))));
  variant.includeScopeClass(LeafPsiElement.class,true);
  variant.addCompletion(new KeywordGetter());
  registerVariant(variant);
}
