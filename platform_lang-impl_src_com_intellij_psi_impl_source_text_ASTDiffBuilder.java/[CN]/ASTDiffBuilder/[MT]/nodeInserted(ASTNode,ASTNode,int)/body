{
  transformNewChameleon(oldParent,node);
  ASTNode anchor=null;
  for (int i=0; i < pos; i++) {
    anchor=anchor == null ? oldParent.getFirstChildNode() : anchor.getTreeNext();
  }
  ((TreeElement)node).rawRemove();
  if (anchor != null) {
    ((TreeElement)anchor).rawInsertAfterMe((TreeElement)node);
  }
 else {
    if (oldParent.getFirstChildNode() != null) {
      ((TreeElement)oldParent.getFirstChildNode()).rawInsertBeforeMe((TreeElement)node);
    }
 else {
      ((CompositeElement)oldParent).rawAddChildren((TreeElement)node);
    }
  }
  myEvent.addElementaryChange(node,ChangeInfoImpl.create(ChangeInfo.ADD,node));
  ((TreeElement)node).clearCaches();
  ((CompositeElement)oldParent).subtreeChanged();
  DebugUtil.checkTreeStructure(oldParent);
}
