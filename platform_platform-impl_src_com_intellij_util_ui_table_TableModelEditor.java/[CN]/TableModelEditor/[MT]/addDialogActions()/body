{
  toolbarDecorator.setEditAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      T item=table.getSelectedObject();
      if (item != null) {
        Function<T,T> mutator;
        if (model.isMutable(item)) {
          mutator=FunctionUtil.id();
        }
 else {
          final int selectedRow=table.getSelectedRow();
          mutator=new Function<T,T>(){
            @Override public T fun(            T item){
              return model.getMutable(selectedRow,item);
            }
          }
;
        }
        ((DialogItemEditor<T>)itemEditor).edit(item,mutator,false);
        table.requestFocus();
      }
    }
  }
).setEditActionUpdater(new AnActionButtonUpdater(){
    @Override public boolean isEnabled(    AnActionEvent e){
      T item=table.getSelectedObject();
      return item != null && ((DialogItemEditor<T>)itemEditor).isEditable(item);
    }
  }
);
  if (((DialogItemEditor)itemEditor).isUseDialogToAdd()) {
    toolbarDecorator.setAddAction(new AnActionButtonRunnable(){
      @Override public void run(      AnActionButton button){
        T item=createElement();
        ((DialogItemEditor<T>)itemEditor).edit(item,new Function<T,T>(){
          @Override public T fun(          T item){
            model.addRow(item);
            return item;
          }
        }
,true);
      }
    }
);
  }
}
