{
  myWizard=wizard;
  myKeystoreLocationLabel.setLabelFor(myKeystoreLocationField);
  final String defaultLocation=PropertiesComponent.getInstance().getValue(DEFAULT_KEYSTORE_LOCATION);
  final SaveFileListener newKeystoreLocationListener=new SaveFileListener(myContentPanel,myKeystoreLocationField,AndroidBundle.message("android.extract.package.choose.keystore.title")){
    @Override protected String getDefaultLocation(){
      return defaultLocation;
    }
  }
;
  final ExistingKeystoreLocationListener existingKeystoreLocationListener=new ExistingKeystoreLocationListener();
  if (defaultLocation != null) {
    myKeystoreLocationField.setText(defaultLocation);
    myExistingKeystoreButton.setSelected(true);
    myKeystoreLocationField.getButton().addActionListener(existingKeystoreLocationListener);
    myConfirmKeystorePasswordField.setEnabled(false);
  }
 else {
    myNewKeystoreButton.setSelected(true);
    myKeystoreLocationField.getButton().addActionListener(newKeystoreLocationListener);
  }
  ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      boolean newKeystore=myNewKeystoreButton.isSelected();
      myConfirmKeystorePasswordLabel.setEnabled(newKeystore);
      myConfirmKeystorePasswordField.setEnabled(newKeystore);
      if (newKeystore) {
        myKeystoreLocationField.getButton().removeActionListener(existingKeystoreLocationListener);
        myKeystoreLocationField.getButton().addActionListener(newKeystoreLocationListener);
      }
 else {
        myKeystoreLocationField.getButton().removeActionListener(newKeystoreLocationListener);
        myKeystoreLocationField.getButton().addActionListener(existingKeystoreLocationListener);
      }
    }
  }
;
  myExistingKeystoreButton.addActionListener(listener);
  myNewKeystoreButton.addActionListener(listener);
}
