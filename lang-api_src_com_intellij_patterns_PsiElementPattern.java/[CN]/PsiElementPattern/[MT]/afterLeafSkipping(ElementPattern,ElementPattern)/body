{
  return with(new PatternCondition<T>("afterLeafSkipping"){
    public boolean accepts(    @NotNull T t,    final MatchingContext matchingContext,    @NotNull final TraverseContext traverseContext){
      PsiElement element=t;
      while (true) {
        final int offset=element.getTextRange().getStartOffset();
        if (offset == 0)         return false;
        element=element.getContainingFile().findElementAt(offset - 1);
        if (element == null)         return false;
        if (!skip.getCondition().accepts(element,matchingContext,traverseContext)) {
          return pattern.getCondition().accepts(element,matchingContext,traverseContext);
        }
      }
    }
  }
);
}
