{
  return with(new PatternCondition<T>("afterLeafSkipping"){
    public boolean accepts(    @NotNull T t,    final ProcessingContext context){
      PsiElement element=t;
      while (true) {
        do {
          while (element != null && element.getPrevSibling() == null) {
            element=element.getParent();
          }
          if (element == null)           return false;
          element=element.getPrevSibling();
          while (element.getLastChild() != null) {
            element=element.getLastChild();
          }
        }
 while (element.getTextLength() == 0);
        if (!skip.getCondition().accepts(element,context)) {
          return pattern.getCondition().accepts(element,context);
        }
      }
    }
  }
);
}
