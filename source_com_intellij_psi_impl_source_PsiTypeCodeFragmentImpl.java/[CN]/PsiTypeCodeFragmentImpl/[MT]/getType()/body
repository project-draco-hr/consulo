{
  PsiType type;
class SyntaxError extends RuntimeException {
  }
  try {
    accept(new PsiRecursiveElementVisitor(){
      public void visitErrorElement(      PsiErrorElement element){
        throw new SyntaxError();
      }
      public void visitReferenceExpression(      PsiReferenceExpression expression){
        visitReferenceElement(expression);
      }
    }
);
  }
 catch (  SyntaxError e) {
    throw new TypeSyntaxException();
  }
  PsiElement child=getFirstChild();
  while (child != null && !(child instanceof PsiTypeElement)) {
    child=child.getNextSibling();
  }
  final PsiTypeElement typeElement1=(PsiTypeElement)child;
  PsiTypeElement typeElement=typeElement1;
  if (typeElement == null) {
    throw new NoTypeException();
  }
  type=typeElement.getType();
  PsiElement sibling=typeElement.getNextSibling();
  while (sibling instanceof PsiWhiteSpace) {
    sibling=sibling.getNextSibling();
  }
  if (sibling instanceof PsiJavaToken && "...".equals(sibling.getText())) {
    if (myAllowEllipsis)     return new PsiEllipsisType(type);
 else     throw new TypeSyntaxException();
  }
 else {
    return type;
  }
}
