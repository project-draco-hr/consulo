{
  try {
    Set<Artifact> toResolve=new LinkedHashSet<Artifact>();
    for (    MavenArtifactInfo each : artifacts) {
      toResolve.add(createArtifact(each));
    }
    Artifact project=getComponent(ArtifactFactory.class).createBuildArtifact("temp","temp","666","pom");
    Set<Artifact> res=getComponent(ArtifactResolver.class).resolveTransitively(toResolve,project,Collections.EMPTY_MAP,myLocalRepository,convertRepositories(remoteRepositories),getComponent(ArtifactMetadataSource.class)).getArtifacts();
    return MavenModelConverter.convertArtifacts(res,new THashMap<Artifact,MavenArtifact>(),getLocalRepositoryFile());
  }
 catch (  ArtifactResolutionException e) {
    Maven3ServerGlobals.getLogger().info(e);
  }
catch (  ArtifactNotFoundException e) {
    Maven3ServerGlobals.getLogger().info(e);
  }
catch (  Exception e) {
    throw rethrowException(e);
  }
  return Collections.emptyList();
}
