{
  List<JavaPsiClassReferenceElement> result=new SmartList<JavaPsiClassReferenceElement>();
  if (condition.value(psiClass)) {
    result.add(AllClassesGetter.createLookupItem(psiClass,insertHandler));
  }
  String name=psiClass.getName();
  if (withInners && name != null) {
    for (    PsiClass inner : psiClass.getInnerClasses()) {
      if (inner.hasModifierProperty(PsiModifier.STATIC)) {
        for (        JavaPsiClassReferenceElement lookupInner : createClassLookupItems(inner,withInners,insertHandler,condition)) {
          String forced=lookupInner.getForcedPresentableName();
          lookupInner.setForcedPresentableName(name + "." + (forced != null ? forced : inner.getName()));
          result.add(lookupInner);
        }
      }
    }
  }
  return result;
}
