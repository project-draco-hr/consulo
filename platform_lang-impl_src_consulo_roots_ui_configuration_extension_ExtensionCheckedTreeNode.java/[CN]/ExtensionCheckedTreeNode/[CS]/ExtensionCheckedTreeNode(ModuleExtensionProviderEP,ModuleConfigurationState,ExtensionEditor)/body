{
  super(null);
  myProviderEP=providerEP;
  myState=state;
  myExtensionEditor=extensionEditor;
  String parentKey=null;
  if (providerEP != null) {
    parentKey=providerEP.key;
    final ModifiableRootModel model=state.getRootModel();
    if (model != null) {
      myExtension=model.getExtensionWithoutCheck(providerEP.getKey());
    }
  }
  setAllowsChildren(true);
  List<ExtensionCheckedTreeNode> child=new ArrayList<ExtensionCheckedTreeNode>();
  for (  ModuleExtensionProviderEP ep : ModuleExtensionProviderEP.EP_NAME.getExtensions()) {
    if (Comparing.equal(ep.parentKey,parentKey)) {
      final ExtensionCheckedTreeNode e=new ExtensionCheckedTreeNode(ep,state,myExtensionEditor);
      e.setParent(this);
      child.add(e);
    }
  }
  Collections.sort(child,ExtensionProviderEPComparator.INSTANCE);
  setUserObject(myExtension);
  children=child.isEmpty() ? null : new Vector<ExtensionCheckedTreeNode>(child);
}
