{
  super.visitSynchronizedStatement(statement);
  if (!reportLocalVariables && !reportMethodParameters) {
    return;
  }
  final PsiExpression lockExpression=statement.getLockExpression();
  if (!(lockExpression instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)lockExpression;
  if (referenceExpression.isQualified()) {
    return;
  }
  boolean localVariable=false;
  final PsiElement target=referenceExpression.resolve();
  if (target instanceof PsiLocalVariable) {
    if (!reportLocalVariables) {
      return;
    }
    localVariable=true;
  }
 else   if (target instanceof PsiParameter) {
    final PsiParameter parameter=(PsiParameter)target;
    final PsiElement scope=parameter.getDeclarationScope();
    if (scope instanceof PsiMethod) {
      if (!reportMethodParameters) {
        return;
      }
    }
 else {
      if (!reportLocalVariables) {
        return;
      }
      localVariable=true;
    }
  }
 else {
    return;
  }
  final PsiClass parentClass=PsiTreeUtil.getParentOfType(statement,PsiClass.class);
  if (!PsiTreeUtil.isAncestor(parentClass,target,true)) {
    return;
  }
  registerStatementError(statement,localVariable);
}
