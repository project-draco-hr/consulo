{
  LookupItem ret=LookupItemUtil.objectToLookupItem(completion);
  if (ret == null)   return null;
  final InsertHandler insertHandler=variant.getInsertHandler();
  if (insertHandler != null && ret.getInsertHandler() == null) {
    ret.setInsertHandler(insertHandler);
    ret.setTailType(TailType.UNKNOWN);
  }
 else   if (tailType != TailType.NONE) {
    ret.setTailType(tailType);
  }
 else   if (file instanceof PsiJavaCodeReferenceCodeFragment) {
    PsiJavaCodeReferenceCodeFragment fragment=(PsiJavaCodeReferenceCodeFragment)file;
    if (!fragment.isClassesAccepted() && completion instanceof PsiPackage) {
      ret.setTailType(TailType.NONE);
    }
  }
  final Map<Object,Object> itemProperties=variant.getItemProperties();
  for (  final Object key : itemProperties.keySet()) {
    if (key == LookupItem.DO_AUTOCOMPLETE_ATTR) {
      ret.setAutoCompletionPolicy(AutoCompletionPolicy.ALWAYS_AUTOCOMPLETE);
      continue;
    }
 else     if (key == LookupItem.DO_NOT_AUTOCOMPLETE_ATTR) {
      ret.setAutoCompletionPolicy(AutoCompletionPolicy.NEVER_AUTOCOMPLETE);
      continue;
    }
    if (key == LookupItem.FORCE_SHOW_FQN_ATTR && ret.getObject() instanceof PsiClass) {
      setShowFQN(ret);
    }
 else {
      if (completion instanceof PsiMember && key == LookupItem.FORCE_QUALIFY) {
        qualify(ret);
      }
      ret.setAttribute(key,itemProperties.get(key));
    }
  }
  if (matcher.prefixMatches(ret)) {
    set.add(ret);
    return ret;
  }
  return null;
}
