{
  final JavaCompletionProcessor processor=new JavaCompletionProcessor(matcher,position,filter);
  if (reference instanceof PsiMultiReference) {
    int javaReferenceStart=-1;
    PsiReference[] references=getReferences((PsiMultiReference)reference);
    for (    PsiReference ref : references) {
      if (ref instanceof PsiJavaReference) {
        int newStart=ref.getElement().getTextRange().getStartOffset() + ref.getRangeInElement().getStartOffset();
        if (javaReferenceStart == -1) {
          javaReferenceStart=newStart;
        }
 else {
          if (newStart == javaReferenceStart)           continue;
        }
      }
      completeReference(ref,position,set,tailType,matcher,file,filter,variant);
    }
  }
 else   if (reference instanceof PsiJavaReference) {
    ((PsiJavaReference)reference).processVariants(processor);
  }
 else {
    final Object[] completions=reference.getVariants();
    if (completions == null)     return;
    for (    Object completion : completions) {
      if (completion == null) {
        LOG.assertTrue(false,"Position=" + position + "\n;Reference="+ reference+ "\n;variants="+ Arrays.toString(completions));
      }
      if (completion instanceof PsiElement) {
        final PsiElement psiElement=(PsiElement)completion;
        if (filter.isClassAcceptable(psiElement.getClass()) && filter.isAcceptable(new CandidateInfo(psiElement,PsiSubstitutor.EMPTY),position)) {
          processor.execute(psiElement,ResolveState.initial());
        }
      }
 else       if (completion instanceof CandidateInfo) {
        final CandidateInfo info=(CandidateInfo)completion;
        if (info.isValidResult() && filter.isAcceptable(info,position)) {
          processor.execute(info.getElement(),ResolveState.initial().put(PsiSubstitutor.KEY,info.getSubstitutor()));
        }
      }
 else {
        if (completion instanceof LookupItem) {
          final Object o=((LookupItem)completion).getObject();
          if (o instanceof PsiElement && (!filter.isClassAcceptable(o.getClass()) || !filter.isAcceptable(new CandidateInfo((PsiElement)o,PsiSubstitutor.EMPTY),position))) {
            continue;
          }
        }
        addLookupItem(set,tailType,completion,matcher,file,variant);
      }
    }
  }
  Collection<CompletionElement> results=processor.getResults();
  if (results != null) {
    for (    CompletionElement element : results) {
      variant.setItemProperty(LookupItem.SUBSTITUTOR,element.getSubstitutor());
      variant.setItemProperty(JavaCompletionUtil.QUALIFIER_TYPE_ATTR,element.getQualifier());
      addLookupItem(set,tailType,element.getElement(),matcher,file,variant);
      variant.setItemProperty(LookupItem.SUBSTITUTOR,null);
      variant.setItemProperty(JavaCompletionUtil.QUALIFIER_TYPE_ATTR,null);
    }
  }
}
