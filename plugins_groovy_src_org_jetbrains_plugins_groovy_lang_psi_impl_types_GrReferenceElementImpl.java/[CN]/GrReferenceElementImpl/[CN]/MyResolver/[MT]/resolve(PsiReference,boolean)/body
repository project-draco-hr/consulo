{
  GrReferenceElementImpl groovyRef=(GrReferenceElementImpl)ref;
  String refName=groovyRef.getReferenceName();
  if (refName == null)   return null;
  PsiManagerEx manager=groovyRef.getManager();
switch (groovyRef.getKind()) {
case CLASS_OR_PACKAGE_FQ:
{
      PsiClass aClass=manager.findClass(PsiUtil.getQualifiedReferenceText(groovyRef),groovyRef.getResolveScope());
      if (aClass != null)       return aClass;
    }
case PACKAGE_FQ:
  return manager.findPackage(PsiUtil.getQualifiedReferenceText(groovyRef));
case CLASS:
GrReferenceElement qualifier=groovyRef.getQualifier();
if (qualifier != null) {
PsiElement qualifierResolved=qualifier.resolve();
if (qualifierResolved instanceof PsiPackage) {
  PsiClass[] classes=((PsiPackage)qualifierResolved).getClasses();
  for (  final PsiClass aClass : classes) {
    if (refName.equals(aClass.getName()))     return aClass;
  }
}
 else if (qualifierResolved instanceof PsiClass) {
  return ((PsiClass)qualifierResolved).findInnerClassByName(refName,true);
}
}
 else {
ClassResolver processor=new ClassResolver(refName);
ResolveUtil.treeWalkUp(groovyRef,processor);
List<PsiNamedElement> candidates=processor.getCandidates();
return candidates.size() == 1 ? candidates.get(0) : null;
}
break;
}
return null;
}
