{
  String refName=getReferenceName();
  if (refName == null)   return null;
switch (getKind()) {
case CLASS:
    GrReferenceElement qualifier=getQualifier();
  if (qualifier != null) {
    PsiElement qualifierResolved=qualifier.resolve();
    if (qualifierResolved instanceof PsiPackage) {
      PsiClass[] classes=((PsiPackage)qualifierResolved).getClasses();
      for (      final PsiClass aClass : classes) {
        if (refName.equals(aClass.getName()))         return aClass;
      }
    }
 else     if (qualifierResolved instanceof PsiClass) {
      return ((PsiClass)qualifierResolved).findInnerClassByName(refName,true);
    }
 else     if (qualifierResolved instanceof GrTypeDefinition) {
      return ((GrTypeDefinition)qualifierResolved).findInnerTypeDefinitionByName(refName,true);
    }
  }
 else {
    ClassResolver processor=new ClassResolver(refName);
    ResolveUtil.treeWalkUp(this,processor);
    List<GrTypeDefinition> candidates=processor.getCandidates();
    return candidates.size() == 1 ? candidates.get(0) : null;
  }
break;
}
return null;
}
