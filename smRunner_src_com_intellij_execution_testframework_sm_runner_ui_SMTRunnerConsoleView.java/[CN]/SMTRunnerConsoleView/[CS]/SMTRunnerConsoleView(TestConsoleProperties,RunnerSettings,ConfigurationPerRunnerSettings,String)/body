{
  super(consoleProperties);
  consoleProperties.setConsole(this);
  myResultsViewer=new SMTestRunnerResultsForm(consoleProperties.getConfiguration(),consoleProperties,runnerSettings,configurationPerRunnerSettings,splitterProperty);
  myResultsViewer.addTab(ExecutionBundle.message("output.tab.title"),null,OUTPUT_TAB_ICON,getConsole().getComponent());
  myResultsViewer.addEventsListener(new TestResultsViewer.EventsListener(){
    public void onTestNodeAdded(    TestResultsViewer sender,    SMTestProxy test){
    }
    public void onTestingFinished(    TestResultsViewer sender){
    }
    public void onSelected(    @Nullable final PrintableTestProxy selectedTestProxy,    @NotNull final TestResultsViewer viewer,    @NotNull final TestFrameworkRunningModel model){
      if (selectedTestProxy == null) {
        return;
      }
      SMRunnerUtil.runInEventDispatchThread(new Runnable(){
        public void run(){
          getPrinter().updateOnTestSelected(selectedTestProxy);
        }
      }
,ModalityState.NON_MODAL);
    }
  }
);
}
