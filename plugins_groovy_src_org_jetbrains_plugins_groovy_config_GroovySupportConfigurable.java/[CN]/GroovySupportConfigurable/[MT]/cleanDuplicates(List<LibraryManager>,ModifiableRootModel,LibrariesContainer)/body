{
  if (managers.isEmpty())   return true;
  for (  OrderEntry entry : rootModel.getOrderEntries()) {
    if (entry instanceof LibraryOrderEntry) {
      final Library library=((LibraryOrderEntry)entry).getLibrary();
      if (library == null) {
        cleanUndefinedGroovyLibrary(rootModel,(LibraryOrderEntry)entry);
      }
 else {
        final LibraryManager manager=LibraryManager.findManagerFor(library,managers.toArray(new LibraryManager[managers.size()]),container);
        if (manager != null) {
          @SuppressWarnings({"NonConstantStringShouldBeStringBuffer"}) String message="There is already a " + manager.getLibraryCategoryName() + " library";
          final String version=manager.getLibraryVersion(container.getLibraryFiles(library,OrderRootType.CLASSES));
          if (StringUtil.isNotEmpty(version)) {
            message+=" of version " + version;
          }
          message+=".\n Do you want to replace the existing one?";
          final String replace="&Replace";
          final int result=Messages.showDialog(rootModel.getProject(),message,"Library already exists",new String[]{replace,"&Add","&Cancel"},0,null);
          if (result == 2 || result < 0) {
            return false;
          }
          if (result == 0) {
            rootModel.removeOrderEntry(entry);
          }
        }
      }
    }
  }
  return true;
}
