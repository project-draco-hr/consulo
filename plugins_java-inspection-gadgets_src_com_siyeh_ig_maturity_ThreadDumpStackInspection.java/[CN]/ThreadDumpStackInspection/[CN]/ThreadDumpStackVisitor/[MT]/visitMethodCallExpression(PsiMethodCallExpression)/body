{
  super.visitMethodCallExpression(expression);
  final String methodName=MethodCallUtils.getMethodName(expression);
  if (!HardcodedMethodConstants.DUMP_STACKTRACE.equals(methodName)) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  if (argumentList.getExpressions().length != 0) {
    return;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiElement element=methodExpression.resolve();
  if (!(element instanceof PsiMethod)) {
    return;
  }
  final PsiMethod method=(PsiMethod)element;
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null) {
    return;
  }
  final String qualifiedName=aClass.getQualifiedName();
  if (!"java.lang.Thread".equals(qualifiedName)) {
    return;
  }
  registerMethodCallError(expression);
}
