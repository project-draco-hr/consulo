{
  super.visitArrayAccessExpression(expression);
  final PsiExpression indexExpression=expression.getIndexExpression();
  if (indexExpression != null) {
    checkIndexExpression(indexExpression);
  }
  final TypeView typeView=new TypeView(expression.getArrayExpression());
  if (typeView.isChanged() && typeView.getType() instanceof PsiClassType) {
    final TypeConversionDescriptorBase conversion=myLabeler.getRules().findConversion(typeView.getTypePair().first,typeView.getType(),null,expression,false,myLabeler);
    if (conversion == null) {
      myLabeler.markFailedConversion(typeView.getTypePair(),expression);
    }
 else {
      myLabeler.setConversionMapping(expression,conversion);
      myTypeEvaluator.setType(new TypeMigrationUsageInfo(expression),myTypeEvaluator.evaluateType(expression));
    }
  }
}
