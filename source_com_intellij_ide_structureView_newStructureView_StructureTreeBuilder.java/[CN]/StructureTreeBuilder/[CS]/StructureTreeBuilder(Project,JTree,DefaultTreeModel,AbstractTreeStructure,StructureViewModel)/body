{
  super(tree,treeModel,treeStructure,null);
  myProject=project;
  myStructureModel=structureModel;
  myPsiTreeChangeListener=new MyPsiTreeChangeListener();
  myModelListener=new ModelListener(){
    public void onModelChanged(){
      addRootToUpdate();
    }
  }
;
  PsiManager.getInstance(myProject).addPsiTreeChangeListener(myPsiTreeChangeListener);
  myCopyPasteListener=new MyCopyPasteListener();
  CopyPasteManager.getInstance().addContentChangedListener(myCopyPasteListener);
  initRootNode();
  myStructureModel.addModelListener(myModelListener);
  myDocumentsListener=new DocumentAdapter(){
    public void documentChanged(    DocumentEvent e){
      myUpdateEditorAlarm.cancelAllRequests();
      myUpdateAlarm.cancelAllRequests();
      myUpdateEditorAlarm.addRequest(new Runnable(){
        public void run(){
          PsiDocumentManager.getInstance(myProject).commitAllDocuments();
        }
      }
,300,ModalityState.stateForComponent(myTree));
    }
  }
;
  EditorFactory.getInstance().getEventMulticaster().addDocumentListener(myDocumentsListener);
}
