{
  @NonNls final ArrayList<String> commandLine=new ArrayList<String>();
  final IOException[] ex={null};
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      try {
        JavacSettings settings=EclipseEmbeddedCompilerConfiguration.getSettings(myProject,EclipseEmbeddedCompilerConfiguration.class);
        myEclipseExternalCompiler.addCommandLineOptions(commandLine,chunk,outputDir,settings,false,false);
      }
 catch (      IOException e) {
        ex[0]=e;
      }
    }
  }
);
  if (ex[0] != null) {
    throw ex[0];
  }
  return new Process(){
    public OutputStream getOutputStream(){
      throw new UnsupportedOperationException();
    }
    public InputStream getInputStream(){
      return null;
    }
    public InputStream getErrorStream(){
      return null;
    }
    public void destroy(){
    }
    public int waitFor(){
      try {
        commandLine.remove("-verbose");
        String[] finalCmds=ArrayUtil.toStringArray(commandLine);
        myEclipseCompilerDriver.parseCommandLineAndCompile(finalCmds,compileContext);
        myExitCode=0;
        return myExitCode;
      }
 catch (      Exception e) {
        compileContext.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),null,-1,-1);
        myExitCode=-1;
        return -1;
      }
    }
    public int exitValue(){
      return myExitCode;
    }
  }
;
}
