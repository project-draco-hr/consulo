{
  myBreakpointPanelProvider=new XBreakpointPanelProvider();
  myToggleLineBreakpointActionHandler=new XToggleLineBreakpointActionHandler(false);
  myToggleTemporaryLineBreakpointActionHandler=new XToggleLineBreakpointActionHandler(true);
  myAddToWatchesActionHandler=new XAddToWatchesFromEditorActionHandler();
  myStepOverHandler=new XDebuggerSuspendedActionHandler(){
    @Override protected void perform(    @NotNull final XDebugSession session,    final DataContext dataContext){
      session.stepOver(false);
    }
  }
;
  myStepIntoHandler=new XDebuggerSuspendedActionHandler(){
    @Override protected void perform(    @NotNull final XDebugSession session,    final DataContext dataContext){
      session.stepInto();
    }
  }
;
  myStepOutHandler=new XDebuggerSuspendedActionHandler(){
    @Override protected void perform(    @NotNull final XDebugSession session,    final DataContext dataContext){
      session.stepOut();
    }
  }
;
  myForceStepOverHandler=new XDebuggerSuspendedActionHandler(){
    @Override protected void perform(    @NotNull final XDebugSession session,    final DataContext dataContext){
      session.stepOver(true);
    }
  }
;
  myForceStepIntoHandler=new XDebuggerSuspendedActionHandler(){
    @Override protected void perform(    @NotNull final XDebugSession session,    final DataContext dataContext){
      session.forceStepInto();
    }
  }
;
  mySmartStepIntoHandler=new XDebuggerSmartStepIntoHandler();
  myRunToCursorHandler=new XDebuggerRunToCursorActionHandler(false);
  myForceRunToCursor=new XDebuggerRunToCursorActionHandler(true);
  myResumeHandler=new XDebuggerActionHandler(){
    @Override protected boolean isEnabled(    @NotNull final XDebugSession session,    final DataContext dataContext){
      return session.isPaused();
    }
    @Override protected void perform(    @NotNull final XDebugSession session,    final DataContext dataContext){
      session.resume();
    }
  }
;
  myPauseHandler=new XDebuggerPauseActionHandler();
  myShowExecutionPointHandler=new XDebuggerSuspendedActionHandler(){
    @Override protected void perform(    @NotNull final XDebugSession session,    final DataContext dataContext){
      session.showExecutionPoint();
    }
  }
;
  myMuteBreakpointsHandler=new XDebuggerMuteBreakpointsHandler();
  myEvaluateHandler=new XDebuggerEvaluateActionHandler();
  myQuickEvaluateHandler=new XQuickEvaluateHandler();
  myMarkObjectActionHandler=new XMarkObjectActionHandler();
  myEditBreakpointActionHandler=new XDebuggerEditBreakpointActionHandler();
}
