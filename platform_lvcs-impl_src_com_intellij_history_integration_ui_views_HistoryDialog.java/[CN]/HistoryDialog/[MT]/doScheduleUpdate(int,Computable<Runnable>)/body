{
  myUpdateQueue.queue(new Update(HistoryDialog.this,id){
    @Override public boolean canEat(    Update update1){
      return getPriority() >= update1.getPriority();
    }
    public void run(){
      if (isDisposed() || myProject.isDisposed())       return;
      invokeAndWait(new Runnable(){
        public void run(){
          if (isDisposed() || myProject.isDisposed())           return;
          isUpdating=true;
          updateActions();
          myDiffView.startUpdating();
        }
      }
);
      Runnable apply=null;
      try {
        apply=update.compute();
      }
 catch (      Exception e) {
        LocalHistoryLog.LOG.error(e);
      }
      final Runnable finalApply=apply;
      invokeAndWait(new Runnable(){
        public void run(){
          if (isDisposed() || myProject.isDisposed())           return;
          isUpdating=false;
          if (finalApply != null) {
            try {
              finalApply.run();
            }
 catch (            Exception e) {
              LocalHistoryLog.LOG.error(e);
            }
          }
          updateActions();
          myDiffView.finishUpdating();
        }
      }
);
    }
  }
);
}
