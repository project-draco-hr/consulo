{
  final PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
  if (!FileDocumentManager.getInstance().fileForDocumentCheckedOutSuccessfully(editor.getDocument(),project)) {
    return;
  }
  try {
    PsiDocumentManager.getInstance(project).commitAllDocuments();
    int col=editor.getCaretModel().getLogicalPosition().column;
    int line=editor.getCaretModel().getLogicalPosition().line;
    LogicalPosition pos=new LogicalPosition(0,0);
    editor.getCaretModel().moveToLogicalPosition(pos);
    TextRange range=surrounder.surroundElements(project,editor,elements);
    if (TemplateManager.getInstance(project).getActiveTemplate(editor) == null) {
      LogicalPosition pos1=new LogicalPosition(line,col);
      editor.getCaretModel().moveToLogicalPosition(pos1);
    }
    if (range != null) {
      int offset=range.getStartOffset();
      editor.getCaretModel().moveToOffset(offset);
      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
      editor.getSelectionModel().setSelection(range.getStartOffset(),range.getEndOffset());
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
