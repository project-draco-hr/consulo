{
  final Project project=getEventProject(e);
  final VirtualFile[] files=getFiles(e);
  if (project == null || files == null || files.length == 0)   return;
  final AccessToken token=WriteAction.start(getClass());
  try {
    for (    VirtualFile file : files) {
      final IVirtualFileSystem fs=file.getFileSystem();
      if (fs instanceof LocalFileSystem && file instanceof NewVirtualFile) {
        ((NewVirtualFile)file).markDirtyRecursively();
      }
    }
  }
  finally {
    token.finish();
  }
  final Runnable postRefreshAction=new Runnable(){
    @Override public void run(){
      final VcsDirtyScopeManager dirtyScopeManager=VcsDirtyScopeManager.getInstance(project);
      for (      VirtualFile f : files) {
        if (f.isDirectory()) {
          dirtyScopeManager.dirDirtyRecursively(f);
        }
 else {
          dirtyScopeManager.fileDirty(f);
        }
      }
      final StatusBar statusBar=WindowManager.getInstance().getStatusBar(project);
      if (statusBar != null) {
        final String message=IdeBundle.message("action.sync.completed.successfully",getMessage(files));
        statusBar.setInfo(message);
      }
    }
  }
;
  RefreshQueue.getInstance().refresh(true,true,postRefreshAction,files);
}
