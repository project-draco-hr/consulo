{
  TrieEntry<K,V> e;
  if (fromKey == null) {
    e=firstEntry();
  }
 else {
    if (fromInclusive)     e=ceilingEntry(fromKey);
 else     e=higherEntry(fromKey);
  }
  K first=e != null ? e.getKey() : null;
  if (e == null || toKey != null && !inToRange(first,false))   throw new NoSuchElementException();
  return first;
}
