{
  TrieEntry<K,V> e;
  if (toKey == null) {
    e=lastEntry();
  }
 else {
    if (toInclusive)     e=floorEntry(toKey);
 else     e=lowerEntry(toKey);
  }
  K last=e != null ? e.getKey() : null;
  if (e == null || fromKey != null && !inFromRange(last,false))   throw new NoSuchElementException();
  return last;
}
