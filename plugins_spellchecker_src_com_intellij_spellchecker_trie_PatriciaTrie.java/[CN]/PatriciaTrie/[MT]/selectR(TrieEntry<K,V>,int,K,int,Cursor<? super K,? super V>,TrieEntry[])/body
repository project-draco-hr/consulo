{
  if (h.bitIndex <= bitIndex) {
    if (!h.isEmpty()) {
      Cursor.SelectStatus ret=cursor.select(h);
switch (ret) {
case REMOVE:
        throw new UnsupportedOperationException("cannot remove during select");
case EXIT:
      result[0]=h;
    return false;
case REMOVE_AND_EXIT:
  TrieEntry<K,V> entry=new TrieEntry<K,V>(h.getKey(),h.getValue(),-1);
result[0]=entry;
removeEntry(h);
return false;
case CONTINUE:
}
}
return true;
}
if (!isBitSet(key,keyLength,h.bitIndex)) {
if (selectR(h.left,h.bitIndex,key,keyLength,cursor,result)) {
return selectR(h.right,h.bitIndex,key,keyLength,cursor,result);
}
}
 else {
if (selectR(h.right,h.bitIndex,key,keyLength,cursor,result)) {
return selectR(h.left,h.bitIndex,key,keyLength,cursor,result);
}
}
return false;
}
