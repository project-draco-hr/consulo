{
  TrieEntry<K,V> current=root.left;
  TrieEntry<K,V> path=root;
  while (true) {
    if (current.bitIndex <= path.bitIndex || length < current.bitIndex)     break;
    path=current;
    if (!isBitSet(prefix,length + offset,current.bitIndex + offset)) {
      current=current.left;
    }
 else {
      current=current.right;
    }
  }
  TrieEntry<K,V> entry=current.isEmpty() ? path : current;
  if (entry.isEmpty())   return null;
  int offsetLength=offset + length;
  if (entry == root && length(entry.getKey()) < offsetLength)   return null;
  if (isBitSet(prefix,offsetLength,offsetLength) != isBitSet(entry.key,length(entry.key),length)) {
    return null;
  }
  int bitIndex=keyAnalyzer.bitIndex(prefix,offset,length,entry.key,0,length(entry.getKey()));
  if (bitIndex >= 0 && bitIndex < length)   return null;
  return entry;
}
