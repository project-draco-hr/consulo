{
  if (start.predecessor == null)   throw new IllegalArgumentException("must have come from somewhere!");
  if (start.predecessor.right == start) {
    if (isValidUplink(start.predecessor.left,start.predecessor)) {
      return start.predecessor.left;
    }
 else {
      return followRight(start.predecessor.left);
    }
  }
 else {
    TrieEntry<K,V> node=start.predecessor;
    while (node.parent != null && node == node.parent.left)     node=node.parent;
    if (node.parent == null) {
      return null;
    }
    if (isValidUplink(node.parent.left,node.parent)) {
      if (node.parent.left == root) {
        if (root.isEmpty()) {
          return null;
        }
 else {
          return root;
        }
      }
 else {
        return node.parent.left;
      }
    }
 else {
      return followRight(node.parent.left);
    }
  }
}
