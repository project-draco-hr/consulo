{
  int keyLength=length(key);
  if (keyLength == 0) {
    return null;
  }
  TrieEntry<K,V> found=getNearestEntryForKey(key,keyLength);
  if (key.equals(found.key))   return previousEntry(found);
  int bitIndex=bitIndex(key,found.key);
  if (isValidBitIndex(bitIndex)) {
    TrieEntry<K,V> added=new TrieEntry<K,V>(key,null,bitIndex);
    addEntry(added,keyLength);
    incrementSize();
    TrieEntry<K,V> prior=previousEntry(added);
    removeEntry(added);
    modCount-=2;
    return prior;
  }
 else   if (isNullBitKey(bitIndex)) {
    return null;
  }
 else   if (isEqualBitKey(bitIndex)) {
    return previousEntry(found);
  }
  throw new IllegalStateException("invalid lookup: " + key);
}
