{
  if (affected.isEmpty()) {
    return Collections.emptyList();
  }
  final Set<Module> allowedModules=ProjectPaths.getModulesWithDependentsRecursively(currentChunk,true);
  final List<Pair<File,Module>> result=new ArrayList<Pair<File,Module>>();
  for (  File file : affected) {
    final RootDescriptor moduleAndRoot=context.getModuleAndRoot(file);
    if (moduleAndRoot == null) {
      continue;
    }
    final Module moduleOfFile=moduleAndRoot.module;
    if (!allowedModules.contains(moduleOfFile)) {
      result.add(Pair.create(file,moduleOfFile));
    }
  }
  return result;
}
