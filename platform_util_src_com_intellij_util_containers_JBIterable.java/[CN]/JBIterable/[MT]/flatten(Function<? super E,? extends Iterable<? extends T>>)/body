{
  return intercept(new Function<Iterator<E>,Iterator<T>>(){
    @Override public Iterator<T> fun(    final Iterator<E> iterator){
      final Function<? super E,? extends Iterable<? extends T>> fun=Stateful.copy(function);
      return new JBIterator<T>(){
        Iterator<? extends T> cur;
        @Override public T nextImpl(){
          if (cur != null && cur.hasNext())           return cur.next();
          if (!iterator.hasNext())           return stop();
          cur=fun.fun(iterator.next()).iterator();
          return skip();
        }
      }
;
    }
  }
);
}
