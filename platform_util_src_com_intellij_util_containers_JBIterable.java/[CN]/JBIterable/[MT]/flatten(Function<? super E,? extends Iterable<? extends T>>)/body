{
  if (this == EMPTY)   return empty();
  final Iterable<E> thatIt=myIterable;
  return new JBIterable<T>(){
    @Override public Iterator<T> iterator(){
      final Iterator<E> it=thatIt.iterator();
      return new JBIterator<T>(){
        Iterator<? extends T> cur;
        @Override public T nextImpl(){
          while ((cur == null || !cur.hasNext()) && it.hasNext()) {
            cur=function.fun(it.next()).iterator();
          }
          if (cur == null || !cur.hasNext())           return stop();
          return cur.next();
        }
        @Override public void remove(){
          cur.remove();
        }
      }
;
    }
  }
;
}
