{
  final Module[] modules=ModuleManager.getInstance(myManager.getProject()).getModules();
  List<ModifiableRootModel> modelsToCommit=new ArrayList<ModifiableRootModel>();
  for (int i=0; i < modules.length; i++) {
    final Module module=modules[i];
    boolean anyChange=false;
    final ModifiableRootModel rootModel=ModuleRootManager.getInstance(module).getModifiableModel();
    final ContentEntry[] contentEntries=rootModel.getContentEntries();
    for (int j=0; j < contentEntries.length; j++) {
      final ContentEntry contentEntry=contentEntries[j];
      final SourceFolder[] sourceFolders=contentEntry.getSourceFolders();
      for (int k=0; k < sourceFolders.length; k++) {
        final SourceFolder sourceFolder=sourceFolders[k];
        final String packagePrefix=sourceFolder.getPackagePrefix();
        if (packagePrefix.startsWith(oldQualifiedName)) {
          sourceFolder.setPackagePrefix(newQualifiedName + packagePrefix.substring(oldQualifiedName.length()));
          anyChange=true;
        }
      }
    }
    if (anyChange) {
      modelsToCommit.add(rootModel);
    }
  }
  if (!modelsToCommit.isEmpty()) {
    ProjectRootManager.getInstance(myManager.getProject()).multiCommit(modelsToCommit.toArray(new ModifiableRootModel[modelsToCommit.size()]));
    return true;
  }
 else {
    return false;
  }
}
