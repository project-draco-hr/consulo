{
  List<PsiModifierList> list=new ArrayList<PsiModifierList>();
  for (  PsiDirectory directory : getDirectories()) {
    PsiFile file=directory.findFile(PACKAGE_INFO_FILE);
    if (file != null) {
      PsiPackageStatement stmt=PsiTreeUtil.getChildOfType(file,PsiPackageStatement.class);
      if (stmt != null) {
        list.add(stmt.getAnnotationList());
      }
    }
  }
  final PsiClass[] classes=getManager().findClasses(getQualifiedName() + ".package-info",getProject().getAllScope());
  for (  PsiClass aClass : classes) {
    list.add(aClass.getModifierList());
  }
  if (list.isEmpty()) {
    return new Result<PsiModifierList>(null,OOCB_DEPENDENCY);
  }
 else {
    return new Result<PsiModifierList>(new PsiCompositeModifierList(getManager(),list),OOCB_DEPENDENCY);
  }
}
