{
  UsageViewManager viewManager=UsageViewManager.getInstance(myProject);
  final PsiElement[] initialElements=viewDescriptor.getElements();
  final UsageTarget[] targets=PsiElement2UsageTargetAdapter.convert(initialElements);
  final Usage[] usages=UsageInfo2UsageAdapter.convert(usageInfos);
  final UsageViewPresentation presentation=createPresentation(viewDescriptor,usages);
  final UsageView usageView=viewManager.showUsages(targets,usages,presentation,factory);
  final Runnable refactoringRunnable=new Runnable(){
    public void run(){
      Set<UsageInfo> usagesToRefactor=getUsageInfosToRefactor(usageView);
      if (ensureElementsWritable(usagesToRefactor.toArray(new UsageInfo[usagesToRefactor.size()]),viewDescriptor)) {
        doRefactoring(usagesToRefactor);
      }
    }
  }
;
  String canNotMakeString=RefactoringBundle.message("usageView.need.reRun");
  usageView.addPerformOperationAction(refactoringRunnable,getCommandName(),canNotMakeString,RefactoringBundle.message("usageView.doAction"));
}
