{
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    execute(usages);
    return;
  }
  final UsageViewDescriptor viewDescriptor=createUsageViewDescriptor(usages);
  final PsiElement[] elements=viewDescriptor.getElements();
  final PsiElement2UsageTargetAdapter[] targets=PsiElement2UsageTargetAdapter.convert(elements);
  Factory<UsageSearcher> factory=new Factory<UsageSearcher>(){
    @Override public UsageSearcher create(){
      return new UsageSearcher(){
        @Override public void generate(        final Processor<Usage> processor){
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            @Override public void run(){
              for (int i=0; i < elements.length; i++) {
                elements[i]=targets[i].getElement();
              }
              refreshElements(elements);
            }
          }
);
          final Ref<UsageInfo[]> refUsages=new Ref<UsageInfo[]>();
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            @Override public void run(){
              refUsages.set(findUsages());
            }
          }
);
          final Usage[] usages=ApplicationManager.getApplication().runReadAction(new Computable<Usage[]>(){
            @Override public Usage[] compute(){
              return UsageInfo2UsageAdapter.convert(refUsages.get());
            }
          }
);
          for (          Usage usage : usages) {
            processor.process(usage);
          }
        }
      }
;
    }
  }
;
  showUsageView(viewDescriptor,factory,usages);
}
