{
  StackFrameProxyImpl frameProxy=context.getFrameProxy();
  if (frameProxy == null) {
    throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.no.stackframe"));
  }
  try {
    ThreadReferenceProxyImpl threadProxy=null;
    int lastFrameIndex=-1;
    while (true) {
      try {
        LocalVariableProxyImpl local=frameProxy.visibleVariableByName(myLocalVariableName);
        if (local != null) {
          myEvaluatedVariable=local;
          myContext=context;
          return frameProxy.getValue(local);
        }
      }
 catch (      EvaluateException e) {
        if (!(e.getCause() instanceof AbsentInformationException)) {
          throw e;
        }
        if (myParameterIndex < 0) {
          throw e;
        }
        final List<Value> values=frameProxy.getArgumentValues();
        if (values.isEmpty() || myParameterIndex >= values.size()) {
          throw e;
        }
        return values.get(myParameterIndex);
      }
      if (myIsJspSpecial) {
        if (threadProxy == null) {
          threadProxy=frameProxy.threadProxy();
          lastFrameIndex=threadProxy.frameCount() - 1;
        }
        final int currentFrameIndex=frameProxy.getFrameIndex();
        if (currentFrameIndex < lastFrameIndex) {
          frameProxy=threadProxy.frame(currentFrameIndex + 1);
          continue;
        }
      }
      break;
    }
    throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.local.variable.missing",myLocalVariableName));
  }
 catch (  EvaluateException e) {
    myEvaluatedVariable=null;
    myContext=null;
    throw e;
  }
}
