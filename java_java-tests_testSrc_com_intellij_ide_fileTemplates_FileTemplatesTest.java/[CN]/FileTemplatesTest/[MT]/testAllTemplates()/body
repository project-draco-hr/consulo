{
  File testsDir=new File(PathManagerEx.getTestDataPath() + "/ide/fileTemplates");
  final String txt=".txt";
  File[] children=testsDir.listFiles(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(".out" + txt);
    }
  }
);
  assertTrue(children.length > 0);
  for (  File resultFile : children) {
    String name=resultFile.getName();
    String base=name.substring(0,name.length() - txt.length() - ".out".length());
    File propFile=new File(resultFile.getParent(),base + ".prop" + txt);
    File inFile=new File(resultFile.getParent(),base + txt);
    String inputText=new String(FileUtil.loadFileText(inFile,FileTemplate.ourEncoding));
    String outputText=new String(FileUtil.loadFileText(resultFile,FileTemplate.ourEncoding));
    EncodingAwareProperties properties=new EncodingAwareProperties();
    properties.load(propFile,FileTemplate.ourEncoding);
    System.out.println(resultFile.getName());
    doTestTemplate(inputText,properties,outputText,resultFile.getParent());
  }
}
