{
  final HgBranchesAndTags branchTagInfo=new HgBranchesAndTags();
  new Task.Backgroundable(project,"Collecting information..."){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      for (      final VirtualFile repo : repos) {
        HgTagBranchCommand tagBranchCommand=new HgTagBranchCommand(project,repo);
        HgCommandResult result=tagBranchCommand.collectBranches();
        if (result == null) {
          indicator.cancel();
          return;
        }
        branchTagInfo.addBranches(repo,HgTagBranchCommand.parseResult(result));
        result=tagBranchCommand.collectTags();
        if (result == null) {
          indicator.cancel();
          return;
        }
        branchTagInfo.addTags(repo,HgTagBranchCommand.parseResult(result));
      }
    }
    @Override public void onCancel(){
      new HgCommandResultNotifier(project).notifyError(null,"Mercurial command failed",HgVcsMessages.message("hg4idea.branches.error.description"));
    }
    @Override public void onSuccess(){
      successHandler.consume(branchTagInfo);
    }
  }
.queue();
}
