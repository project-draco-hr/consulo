{
  final PsiElement position=location.getPosition();
  PsiClass placeClass=PsiTreeUtil.getContextOfType(element,PsiClass.class,false);
  if (position.getParent() instanceof PsiReferenceExpression) {
    final PsiExpression qualifierExpression=((PsiReferenceExpression)position.getParent()).getQualifierExpression();
    if (qualifierExpression != null) {
      final PsiType type=qualifierExpression.getType();
      if (type instanceof PsiClassType) {
        final PsiClass psiClass=((PsiClassType)type).resolve();
        if (psiClass != null) {
          placeClass=psiClass;
        }
      }
    }
  }
  if (element instanceof PsiClass) {
    @NonNls final String qname=((PsiClass)element).getQualifiedName();
    if (qname == null || qname.startsWith("java.lang."))     return false;
  }
  PsiClass contextClass=PsiTreeUtil.getContextOfType(position,PsiClass.class,false);
  while (contextClass != null) {
    PsiClass elementClass=placeClass;
    while (elementClass != null) {
      if (contextClass.isInheritor(elementClass,true))       return true;
      elementClass=elementClass.getContainingClass();
    }
    contextClass=contextClass.getContainingClass();
  }
  return false;
}
