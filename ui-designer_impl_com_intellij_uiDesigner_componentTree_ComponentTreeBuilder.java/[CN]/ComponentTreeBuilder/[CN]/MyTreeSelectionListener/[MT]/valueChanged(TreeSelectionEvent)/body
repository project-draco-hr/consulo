{
  if (myInsideChange > 0) {
    return;
  }
  final TreePath[] paths=myTree.getSelectionPaths();
  if (paths == null) {
    return;
  }
  myInsideChange++;
  try {
    FormEditingUtil.clearSelection(myEditor.getRootContainer());
    boolean hasComponentInTab=false;
    for (int i=paths.length - 1; i >= 0; i--) {
      final DefaultMutableTreeNode lastComponent=(DefaultMutableTreeNode)paths[i].getLastPathComponent();
      LOG.assertTrue(lastComponent != null);
      final ComponentPtrDescriptor descriptor=(ComponentPtrDescriptor)lastComponent.getUserObject();
      if (descriptor == null) {
        return;
      }
      final ComponentPtr ptr=(ComponentPtr)descriptor.getElement();
      if (ptr != null && ptr.isValid()) {
        final RadComponent component=ptr.getComponent();
        LOG.assertTrue(component != null);
        if (!hasComponentInTab) {
          hasComponentInTab=selectComponentTab(component);
        }
        component.setSelected(true);
      }
    }
    myEditor.fireSelectedComponentChanged();
  }
  finally {
    myInsideChange--;
  }
}
