{
  if (myInsideChange > 0) {
    return;
  }
  final TreePath[] paths=getTree().getSelectionPaths();
  if (paths == null) {
    return;
  }
  myInsideChange++;
  try {
    FormEditingUtil.clearSelection(myEditor.getRootContainer());
    boolean hasComponentInTab=false;
    for (int i=paths.length - 1; i >= 0; i--) {
      final DefaultMutableTreeNode lastComponent=(DefaultMutableTreeNode)paths[i].getLastPathComponent();
      LOG.assertTrue(lastComponent != null);
      ComponentPtrDescriptor descriptor=null;
      if (lastComponent.getUserObject() instanceof ComponentPtrDescriptor) {
        descriptor=(ComponentPtrDescriptor)lastComponent.getUserObject();
      }
      if (descriptor != null) {
        final ComponentPtr ptr=(ComponentPtr)descriptor.getElement();
        if (ptr != null && ptr.isValid()) {
          final RadComponent component=ptr.getComponent();
          LOG.assertTrue(component != null);
          if (!hasComponentInTab) {
            hasComponentInTab=FormEditingUtil.selectComponent(myEditor,component);
          }
 else {
            component.setSelected(true);
          }
          if (i == 0) {
            myEditor.scrollComponentInView(component);
          }
        }
      }
 else {
        myEditor.repaintLayeredPane();
      }
    }
    myEditor.fireSelectedComponentChanged();
  }
  finally {
    myInsideChange--;
  }
}
