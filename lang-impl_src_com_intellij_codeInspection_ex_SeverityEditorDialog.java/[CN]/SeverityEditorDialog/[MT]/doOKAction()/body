{
  apply((SeverityRegistrar.SeverityBasedTextAttributes)myOptionsList.getSelectedValue());
  final Collection<SeverityRegistrar.SeverityBasedTextAttributes> infoTypes=new HashSet<SeverityRegistrar.SeverityBasedTextAttributes>(mySeverityRegistrar.getRegisteredHighlightingInfoTypes());
  final ListModel listModel=myOptionsList.getModel();
  final List<String> order=new ArrayList<String>();
  for (int i=listModel.getSize() - 1; i >= 0; i--) {
    final SeverityRegistrar.SeverityBasedTextAttributes info=(SeverityRegistrar.SeverityBasedTextAttributes)listModel.getElementAt(i);
    order.add(info.getSeverity().myName);
    if (!mySeverityRegistrar.isDefaultSeverity(info.getSeverity())) {
      infoTypes.remove(info);
      final Color stripeColor=info.getAttributes().getErrorStripeColor();
      mySeverityRegistrar.registerSeverity(info,stripeColor != null ? stripeColor : LightColors.YELLOW);
    }
  }
  for (  SeverityRegistrar.SeverityBasedTextAttributes info : infoTypes) {
    mySeverityRegistrar.unregisterSeverity(info.getSeverity());
  }
  mySeverityRegistrar.setOrder(order);
  super.doOKAction();
}
