{
  final Language leftLang=left != null ? PsiUtilCore.getNotAnyLanguage(left) : null;
  final Language rightLang=PsiUtilCore.getNotAnyLanguage(right);
  ASTNode generatedWhitespace=null;
  if (leftLang != null && leftLang.isKindOf(rightLang)) {
    generatedWhitespace=LanguageTokenSeparatorGenerators.INSTANCE.forLanguage(leftLang).generateWhitespaceBetweenTokens(left,right);
  }
 else   if (rightLang.isKindOf(leftLang)) {
    generatedWhitespace=LanguageTokenSeparatorGenerators.INSTANCE.forLanguage(rightLang).generateWhitespaceBetweenTokens(left,right);
  }
  if (generatedWhitespace != null) {
    final TreeUtil.CommonParentState parentState=new TreeUtil.CommonParentState();
    TreeUtil.prevLeaf((TreeElement)right,parentState);
    parentState.nextLeafBranchStart.getTreeParent().addChild(generatedWhitespace,parentState.nextLeafBranchStart);
  }
 else {
    markToReformatBefore(right,true);
  }
}
