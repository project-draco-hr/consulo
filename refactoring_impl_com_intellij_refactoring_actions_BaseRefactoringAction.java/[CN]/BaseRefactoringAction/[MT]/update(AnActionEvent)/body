{
  Presentation presentation=e.getPresentation();
  DataContext dataContext=e.getDataContext();
  Project project=e.getData(DataKeys.PROJECT);
  if (project == null) {
    presentation.setEnabled(false);
    return;
  }
  Editor editor=e.getData(DataKeys.EDITOR);
  PsiFile file=e.getData(DataKeys.PSI_FILE);
  if (file != null) {
    if (file instanceof PsiCompiledElement || !isAvailableForFile(file)) {
      presentation.setEnabled(false);
      return;
    }
  }
  if (editor != null) {
    PsiElement element=e.getData(DataKeys.PSI_ELEMENT);
    if (element == null || !isAvailableForLanguage(element.getLanguage())) {
      if (file == null) {
        presentation.setEnabled(false);
        return;
      }
      final int offset=editor.getCaretModel().getOffset();
      element=file.findElementAt(offset);
      if (element == null && offset == file.getTextLength()) {
        element=file.findElementAt(offset - 1);
      }
      if (element instanceof PsiWhiteSpace) {
        element=file.findElementAt(element.getTextRange().getStartOffset() - 1);
      }
    }
    presentation.setEnabled(element != null && !isSyntheticJsp(element) && isAvailableForLanguage(element.getLanguage()));
  }
 else {
    if (isAvailableInEditorOnly()) {
      presentation.setEnabled(false);
      return;
    }
    final PsiElement[] elements=getPsiElementArray(dataContext);
    if (isEnabledOnDataContext(dataContext)) {
      presentation.setEnabled(true);
    }
 else     if (elements.length != 0) {
      presentation.setEnabled(isEnabledOnElements(elements));
    }
 else {
      presentation.setEnabled(false);
    }
  }
}
