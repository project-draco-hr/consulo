{
  myEditorDocumentListener=new DocumentAdapter(){
    public void beforeDocumentChange(    DocumentEvent e){
      if (!isFinished()) {
        if (toProcessChangedUpdate) {
          UndoManager undoManager=UndoManager.getInstance(myProject);
          if (!undoManager.isUndoInProgress() && !undoManager.isRedoInProgress()) {
            if (myCurrentSegmentNumber >= 0) {
              myChangesFlag=e.getOffset() < mySegments.getSegmentStart(myCurrentSegmentNumber) || e.getOffset() + e.getOldLength() > mySegments.getSegmentEnd(myCurrentSegmentNumber);
            }
          }
        }
      }
    }
  }
;
  myCommandListener=new CommandAdapter(){
    public void commandStarted(    CommandEvent event){
      if (myEditor != null) {
        final int offset=myEditor.getCaretModel().getOffset();
        toProcessChangedUpdate=offset < mySegments.getSegmentStart(myCurrentSegmentNumber) || offset > mySegments.getSegmentEnd(myCurrentSegmentNumber);
      }
    }
    public void beforeCommandFinished(    CommandEvent event){
      afterChangedUpdate();
    }
  }
;
  myDocument.addDocumentListener(myEditorDocumentListener);
  CommandProcessor.getInstance().addCommandListener(myCommandListener);
}
