{
  int offset=editor.getCaretModel().getOffset();
  editor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
  PsiElement element=file.findElementAt(offset);
  while (true) {
    if (element == null || element instanceof PsiFile) {
      String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.wrong.caret.position.class"));
      CommonRefactoringUtil.showErrorHint(project,editor,message,REFACTORING_NAME,HelpID.ENCAPSULATE_FIELDS);
      return;
    }
    if (element instanceof PsiField) {
      if (((PsiField)element).getContainingClass() == null) {
        String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("the.field.should.be.declared.in.a.class"));
        CommonRefactoringUtil.showErrorHint(project,editor,message,REFACTORING_NAME,HelpID.ENCAPSULATE_FIELDS);
        return;
      }
      invoke(project,new PsiElement[]{element},dataContext);
      return;
    }
    if (element instanceof PsiClass) {
      invoke(project,new PsiElement[]{element},dataContext);
      return;
    }
    element=element.getParent();
  }
}
