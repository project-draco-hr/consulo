{
  if (!isValid()) {
    throw new RuntimeException("element " + myType.toString() + " is not valid",myInvalidated);
  }
  checkParentInitialized();
  r.lock();
  try {
    if (myInitializedChildren.contains(description)) {
      return;
    }
  }
  finally {
    r.unlock();
  }
  w.lock();
  try {
    if (myInitializedChildren.contains(description)) {
      return;
    }
    final DynamicGenericInfo genericInfo=getGenericInfo();
    final XmlTag tag=getXmlTag();
    final EvaluatedXmlName evaluatedXmlName=createEvaluatedXmlName(description.getXmlName());
    if (description instanceof AttributeChildDescriptionImpl) {
      final AttributeChildDescriptionImpl attributeChildDescription=(AttributeChildDescriptionImpl)description;
      myAttributeChildren.put(attributeChildDescription,new AttributeChildInvocationHandler(description.getType(),tag,this,evaluatedXmlName,attributeChildDescription,myManager));
    }
 else     if (description instanceof FixedChildDescriptionImpl) {
      final FixedChildDescriptionImpl fixedChildDescription=(FixedChildDescriptionImpl)description;
      final int count=fixedChildDescription.getCount();
      for (int i=0; i < count; i++) {
        getOrCreateIndexedChild(findSubTag(tag,evaluatedXmlName,i),evaluatedXmlName,Pair.create(fixedChildDescription,i));
      }
    }
 else     if (tag != null && description instanceof CollectionChildDescriptionImpl) {
      for (      XmlTag subTag : DomImplUtil.findSubTags(tag,evaluatedXmlName,this)) {
        new CollectionElementInvocationHandler(description.getType(),evaluatedXmlName,subTag,(CollectionChildDescriptionImpl)description,this);
      }
    }
    myInitializedChildren.add(description);
  }
  finally {
    w.unlock();
  }
}
