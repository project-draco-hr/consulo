{
  myManager=manager;
  myParent=parent;
  myTagName=tagName;
  myChildDescription=childDescription;
  myAbstractType=type;
  final Type concreteInterface=manager.getTypeChooserManager().getTypeChooser(type).chooseType(tag);
  myType=concreteInterface;
  final Converter converter=getConverter(this,DomUtil.getGenericValueParameter(concreteInterface),null);
  myGenericConverter=converter;
  myInvocationCache=manager.getInvocationCache(new Pair<Type,Type>(concreteInterface,converter == null ? null : converter.getClass()));
  final Class<?> rawType=getRawType();
  Class<? extends DomElement> implementation=manager.getImplementation(rawType);
  final boolean isInterface=ReflectionCache.isInterface(rawType);
  if (implementation == null && !isInterface) {
    implementation=(Class<? extends DomElement>)rawType;
  }
  myProxy=AdvancedProxy.createProxy(this,implementation,isInterface ? new Class[]{rawType} : ArrayUtil.EMPTY_CLASS_ARRAY);
  setXmlTag(tag);
  cacheInTag(tag);
}
