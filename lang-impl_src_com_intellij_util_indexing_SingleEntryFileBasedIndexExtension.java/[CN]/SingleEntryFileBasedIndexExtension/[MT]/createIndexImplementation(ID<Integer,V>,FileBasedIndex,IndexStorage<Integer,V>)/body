{
  return new MapReduceIndex<Integer,V,FileContent>(indexId,getIndexer(),integerVIndexStorage){
    protected Map<Integer,V> mapOld(    FileContent inputData) throws StorageException {
      if (inputData == null) {
        return Collections.emptyMap();
      }
      final int key=Math.abs(FileBasedIndex.getFileId(inputData.getFile()));
      final Map<Integer,V> result=new HashMap<Integer,V>();
      final Lock lock=getReadLock();
      try {
        lock.lock();
        final ValueContainer<V> valueContainer=getData(key);
        if (valueContainer.size() != 1) {
          LOG.assertTrue(valueContainer.size() == 0);
          return result;
        }
        result.put(key,valueContainer.getValueIterator().next());
      }
  finally {
        lock.unlock();
      }
      return result;
    }
  }
;
}
