{
  if (info.quickFixActionMarkers == null)   return;
  if (group != -1 && group != info.group)   return;
  Editor injectedEditor=null;
  PsiFile injectedFile=null;
  for (  Pair<HighlightInfo.IntentionActionDescriptor,RangeMarker> pair : info.quickFixActionMarkers) {
    HighlightInfo.IntentionActionDescriptor actionInGroup=pair.first;
    RangeMarker range=pair.second;
    if (!range.isValid())     continue;
    int start=range.getStartOffset();
    int end=range.getEndOffset();
    final Project project=file.getProject();
    if (start > offset || offset > end) {
      continue;
    }
    Editor editorToUse;
    PsiFile fileToUse;
    if (info.fromInjection) {
      if (injectedEditor == null) {
        injectedFile=InjectedLanguageUtil.findInjectedPsiNoCommit(file,offset);
        injectedEditor=InjectedLanguageUtil.getInjectedEditorForInjectedFile(editor,injectedFile);
      }
      editorToUse=injectedEditor;
      fileToUse=injectedFile;
    }
 else {
      editorToUse=editor;
      fileToUse=file;
    }
    if (actionInGroup.getAction().isAvailable(project,editorToUse,fileToUse)) {
      outList.add(actionInGroup);
    }
  }
}
