{
  ColumnInfo[] columns=new ColumnInfo[CssPrefix.values().length + 1];
  columns[0]=new PropertyColumn();
  CssPrefix[] values=CssPrefix.values();
  for (int i=0; i < values.length; i++) {
    columns[i + 1]=new PrefixColumnInfo(values[i]);
  }
  myPrefixesModel=new ListTableModel<CssPrefixInfo>(columns,new ArrayList<CssPrefixInfo>(),0);
  myPrefixesModel.setSortable(true);
  myPrefixesTableView=new TableView<CssPrefixInfo>(myPrefixesModel);
  myPrefixesTableView.setAutoCreateRowSorter(true);
  myPrefixesTableView.setBorder(null);
  myPrefixesTableView.setStriped(true);
  myPrefixesTableView.getRowSorter().toggleSortOrder(0);
  new TableViewSpeedSearch(myPrefixesTableView){
    @Override protected String getElementText(    final Object element){
      CssPrefixInfo prefixInfo=(CssPrefixInfo)element;
      return prefixInfo.getPropertyName();
    }
  }
;
}
