{
  final PsiElement at=file.findElementAt(offset);
  if (at == null)   return null;
  if (at.getParent() instanceof GrReturnStatement) {
    final GrReturnStatement returnStatement=((GrReturnStatement)at.getParent());
    final PsiElement word=returnStatement.getReturnWord();
    if (!word.getTextRange().contains(offset))     return null;
    final GroovyPsiElement returnOwner=PsiTreeUtil.getParentOfType(returnStatement,GrClosableBlock.class,GrMethod.class);
    if (returnOwner instanceof GrMethod) {
      final GrTypeElement returnTypeElement=((GrMethod)returnOwner).getReturnTypeElementGroovy();
      if (returnTypeElement == null) {
        return (GrMethod)returnOwner;
      }
    }
    return null;
  }
  final GrMethod method=PsiTreeUtil.getParentOfType(at,GrMethod.class,false,GrTypeDefinition.class,GrClosableBlock.class);
  if (method != null && GrHighlightUtil.getMethodHeaderTextRange(method).contains(offset)) {
    if (method.getReturnTypeElementGroovy() == null) {
      return method;
    }
  }
  return null;
}
