{
  registrar.extend(psiElement(),new CompletionAdvertiser(){
    public String advertise(    @NotNull final CompletionParameters parameters,    final ProcessingContext context){
      if (new Random().nextInt(10) < 5 && (shouldShowFeature(parameters,ShowJavaDocInfoAction.CODEASSISTS_QUICKJAVADOC_FEATURE) || shouldShowFeature(parameters,ShowJavaDocInfoAction.CODEASSISTS_QUICKJAVADOC_LOOKUP_FEATURE))) {
        final String shortcut=getShortcut(IdeActions.ACTION_QUICK_JAVADOC);
        if (shortcut != null) {
          return LangBundle.message("completion.quick.javadoc.ad",shortcut);
        }
      }
      if (shouldShowFeature(parameters,ShowImplementationsAction.CODEASSISTS_QUICKDEFINITION_FEATURE) || shouldShowFeature(parameters,ShowImplementationsAction.CODEASSISTS_QUICKDEFINITION_LOOKUP_FEATURE)) {
        final String shortcut=getShortcut(IdeActions.ACTION_QUICK_IMPLEMENTATIONS);
        if (shortcut != null) {
          return LangBundle.message("completion.quick.implementations.ad",shortcut);
        }
      }
      if (Calendar.getInstance().get(Calendar.MONTH) == 3 && Calendar.getInstance().get(Calendar.DATE) == 1 || CompletionData.findPrefixStatic(parameters.getPosition(),parameters.getOffset()).length() > 42) {
        final int i=new Random().nextInt(data.length * 5);
        if (i < data.length) {
          return new String(data[i]);
        }
      }
      return null;
    }
    public String handleEmptyLookup(    @NotNull final CompletionParameters parameters,    final ProcessingContext context){
      return LangBundle.message("completion.no.suggestions");
    }
  }
);
}
