{
  CheckUtil.checkWritable(element);
  final CompositeElement attrNode=(CompositeElement)element.getNode();
  final ASTNode valueNode=attrNode.findLeafElementAt(range.getStartOffset());
  LOG.assertTrue(valueNode != null,"Leaf not found in " + attrNode + " at offset "+ range.getStartOffset());
  final PsiElement elementToReplace=valueNode.getPsi();
  String text;
  try {
    text=elementToReplace.getText();
    final int offsetInParent=elementToReplace.getStartOffsetInParent();
    String textBeforeRange=text.substring(0,range.getStartOffset() - offsetInParent);
    String textAfterRange=text.substring(range.getEndOffset() - offsetInParent,text.length());
    text=textBeforeRange + newContent + textAfterRange;
  }
 catch (  StringIndexOutOfBoundsException e) {
    LOG.error("Range: " + range + " in text: '"+ element.getText()+ "'",e);
    throw e;
  }
  final CharTable charTableByTree=SharedImplUtil.findCharTableByTree(attrNode);
  final LeafElement newValueElement=Factory.createSingleLeafElement(XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN,text,charTableByTree,element.getManager());
  attrNode.replaceChildInternal(valueNode,newValueElement);
  return element;
}
