{
  PsiManager manager=initializer.getManager();
  PsiClass variableParent=RefactoringUtil.getThisClass(initializer);
  PsiClass refParent=RefactoringUtil.getThisClass(ref);
  initializer=convertInitializerToNormalExpression(initializer,variable.getType());
  ChangeContextUtil.encodeContextInfo(initializer,false);
  PsiExpression expr=(PsiExpression)ref.replace(initializer);
  PsiType exprType=expr.getType();
  if (exprType != null && !variable.getType().equals(exprType)) {
    PsiTypeCastExpression cast=(PsiTypeCastExpression)manager.getElementFactory().createExpressionFromText("(t)a",null);
    cast.getCastType().replace(variable.getTypeElement());
    cast.getOperand().replace(expr);
    PsiExpression exprCopy=(PsiExpression)expr.copy();
    cast=(PsiTypeCastExpression)expr.replace(cast);
    if (!RedundantCastUtil.isCastRedundant(cast)) {
      expr=cast;
    }
 else {
      PsiElement toReplace=cast;
      while (toReplace.getParent() instanceof PsiParenthesizedExpression) {
        toReplace=toReplace.getParent();
      }
      expr=(PsiExpression)toReplace.replace(exprCopy);
    }
  }
  ChangeContextUtil.clearContextInfo(initializer);
  PsiClass thisClass=variableParent;
  PsiThisExpression thisAccessExpr=null;
  if (Comparing.equal(variableParent,refParent)) {
    thisAccessExpr=createThisExpression(manager,null);
  }
 else {
    if (!(thisClass instanceof PsiAnonymousClass)) {
      thisAccessExpr=createThisExpression(manager,thisClass);
    }
  }
  return (PsiExpression)ChangeContextUtil.decodeContextInfo(expr,thisClass,thisAccessExpr);
}
