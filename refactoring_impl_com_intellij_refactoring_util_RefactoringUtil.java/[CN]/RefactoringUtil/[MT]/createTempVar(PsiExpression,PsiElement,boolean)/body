{
  PsiElement anchorStatement=getParentStatement(context,true);
  LOG.assertTrue(anchorStatement != null && anchorStatement.getParent() != null);
  Project project=expr.getProject();
  String[] suggestedNames=JavaCodeStyleManager.getInstance(project).suggestVariableName(VariableKind.LOCAL_VARIABLE,null,expr,null).names;
  final String prefix=suggestedNames[0];
  final String id=JavaCodeStyleManager.getInstance(project).suggestUniqueVariableName(prefix,context,true);
  PsiElementFactory factory=JavaPsiFacade.getInstance(expr.getProject()).getElementFactory();
  if (expr instanceof PsiParenthesizedExpression) {
    PsiExpression expr1=((PsiParenthesizedExpression)expr).getExpression();
    if (expr1 != null) {
      expr=expr1;
    }
  }
  PsiDeclarationStatement decl=factory.createVariableDeclarationStatement(id,expr.getType(),expr);
  if (declareFinal) {
    PsiUtil.setModifierProperty(((PsiLocalVariable)decl.getDeclaredElements()[0]),PsiModifier.FINAL,true);
  }
  anchorStatement.getParent().addBefore(decl,anchorStatement);
  return id;
}
