{
  final PsiType operandType=operand.getType();
  if (PsiType.DOUBLE.equals(lhsType)) {
    if (PsiType.FLOAT.equals(operandType) || PsiType.LONG.equals(operandType) || PsiType.INT.equals(operandType)|| PsiType.CHAR.equals(operandType)|| PsiType.SHORT.equals(operandType)|| PsiType.BYTE.equals(operandType)) {
      return true;
    }
  }
 else   if (PsiType.FLOAT.equals(lhsType)) {
    if (PsiType.LONG.equals(operandType) || PsiType.INT.equals(operandType) || PsiType.CHAR.equals(operandType)|| PsiType.SHORT.equals(operandType)|| PsiType.BYTE.equals(operandType)) {
      return true;
    }
  }
 else   if (PsiType.LONG.equals(lhsType)) {
    if (PsiType.INT.equals(operandType) || PsiType.CHAR.equals(operandType) || PsiType.SHORT.equals(operandType)|| PsiType.BYTE.equals(operandType)) {
      return true;
    }
  }
 else   if (PsiType.INT.equals(lhsType)) {
    if (PsiType.CHAR.equals(operandType) || PsiType.SHORT.equals(operandType) || PsiType.BYTE.equals(operandType)) {
      return true;
    }
  }
 else   if (PsiType.SHORT.equals(lhsType)) {
    if (PsiType.INT.equals(operandType)) {
      final Object constant=ExpressionUtils.computeConstantExpression(operand);
      if (!(constant instanceof Integer)) {
        return false;
      }
      final int i=((Integer)constant).intValue();
      if (i >= Short.MIN_VALUE && i <= Short.MAX_VALUE) {
        return true;
      }
    }
  }
 else   if (PsiType.CHAR.equals(lhsType)) {
    if (PsiType.INT.equals(operandType)) {
      final Object constant=ExpressionUtils.computeConstantExpression(operand);
      if (!(constant instanceof Integer)) {
        return false;
      }
      final int i=((Integer)constant).intValue();
      if (i >= Character.MIN_VALUE && i <= Character.MAX_VALUE) {
        return true;
      }
    }
  }
 else   if (PsiType.BYTE.equals(lhsType)) {
    if (PsiType.INT.equals(operandType)) {
      final Object constant=ExpressionUtils.computeConstantExpression(operand);
      if (!(constant instanceof Integer)) {
        return false;
      }
      final int i=((Integer)constant).intValue();
      if (i >= Byte.MIN_VALUE && i <= Byte.MAX_VALUE) {
        return true;
      }
    }
  }
  return false;
}
