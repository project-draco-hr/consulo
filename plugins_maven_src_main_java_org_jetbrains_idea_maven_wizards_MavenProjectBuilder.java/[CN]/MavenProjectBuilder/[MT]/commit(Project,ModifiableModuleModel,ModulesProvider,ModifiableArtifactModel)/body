{
  MavenWorkspaceSettings settings=MavenWorkspaceSettingsComponent.getInstance(project).getSettings();
  settings.generalSettings=getGeneralSettings();
  settings.importingSettings=getImportingSettings();
  String settingsFile=System.getProperty("idea.maven.import.settings.file");
  if (!StringUtil.isEmptyOrSpaces(settingsFile)) {
    settings.generalSettings.setUserSettingsFile(settingsFile.trim());
  }
  List<String> selectedProfiles=getSelectedProfiles();
  String profilesList=System.getProperty("idea.maven.import.enabled.profiles");
  if (profilesList != null) {
    Set<String> selectedProfilesSet=new LinkedHashSet<String>(selectedProfiles);
    for (    String profile : StringUtil.split(profilesList,",")) {
      String trimmedProfileName=profile.trim();
      if (!trimmedProfileName.isEmpty()) {
        selectedProfilesSet.add(trimmedProfileName);
      }
    }
    selectedProfiles=new ArrayList<String>(selectedProfilesSet);
  }
  MavenProjectsManager manager=MavenProjectsManager.getInstance(project);
  manager.addManagedFilesWithProfiles(MavenUtil.collectFiles(getParameters().mySelectedProjects),selectedProfiles);
  manager.waitForReadingCompletion();
  boolean isFromUI=model != null;
  return manager.importProjects(isFromUI ? new MavenUIModifiableModelsProvider(project,model,(ModulesConfigurator)modulesProvider,artifactModel) : new MavenDefaultModifiableModelsProvider(project));
}
