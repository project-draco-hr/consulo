{
  MavenWorkspaceSettings settings=project.getComponent(MavenWorkspaceSettingsComponent.class).getState();
  settings.generalSettings=getGeneralSettings();
  settings.importingSettings=getImportingSettings();
  settings.downloadingSettings=getDownloadingSettings();
  MavenProjectsManager manager=MavenProjectsManager.getInstance(project);
  List<VirtualFile> files=getParameters().myMavenProjectTree.getRootProjectsFiles();
  manager.addManagedFilesWithProfiles(files,getSelectedProfiles());
  manager.waitForReadingCompletion();
  return manager.importProjects(new DefaultMavenModuleModelsProvider(project){
    @Override public ModifiableModuleModel getModuleModel(){
      if (model != null)       return model;
      return super.getModuleModel();
    }
    @Override public ModuleRootModel getRootModel(    Module module){
      ModuleRootModel rootModel=modulesProvider.getRootModel(module);
      if (rootModel != null)       return rootModel;
      return super.getModifiableRootModel(module);
    }
    @Override public ModifiableRootModel getModifiableRootModel(    Module module){
      ModuleRootModel rootModel=modulesProvider.getRootModel(module);
      if (rootModel instanceof ModifiableRootModel)       return (ModifiableRootModel)rootModel;
      return super.getModifiableRootModel(module);
    }
    @Override public void commit(    ModifiableModuleModel modulModel,    ModifiableRootModel[] rootModels){
      if (model == null)       super.commit(modulModel,rootModels);
    }
  }
);
}
