{
  final boolean b=Comparing.equal(resolveResult1,resolveResult2);
  if (b)   return b;
  if (resolveResult1 instanceof PsiMethod && resolveResult2 instanceof PsiMethod) {
    final PsiMethod method1=(PsiMethod)resolveResult1;
    final PsiMethod method2=(PsiMethod)resolveResult2;
    if (ArrayUtil.find(method1.findSuperMethods(),method2) >= 0)     return true;
    if (ArrayUtil.find(method2.findSuperMethods(),method1) >= 0)     return true;
    if (method1.getName().equals(method2.getName())) {
      PsiClass class2=method2.getContainingClass();
      if (qualifier2 instanceof PsiReferenceExpression) {
        final PsiType type=((PsiReferenceExpression)qualifier2).getType();
        if (type instanceof PsiClassType) {
          final PsiClass resolvedClass=PsiUtil.resolveClassInType(type);
          if (!(resolvedClass instanceof PsiTypeParameter)) {
            class2=resolvedClass;
          }
        }
      }
      if (class2 != null && PsiUtil.isAccessible(method1,class2,null)) {
        final PsiMethod[] methods=class2.getAllMethods();
        if (ArrayUtil.find(methods,method1) != -1)         return true;
      }
    }
    return false;
  }
 else {
    return false;
  }
}
