{
  assertIsDispatchThread();
  if (getAppImage() == null)   return false;
  myCurrentProcessId=processId;
  if (myLastValue > value)   return true;
  if (Math.abs(myLastValue - value) < 0.02d)   return true;
  try {
    double progressHeight=(myAppImage.getHeight() * 0.13);
    double xInset=(myAppImage.getWidth() * 0.05);
    double yInset=(myAppImage.getHeight() * 0.15);
    final double width=myAppImage.getWidth() - xInset * 2;
    final double y=myAppImage.getHeight() - progressHeight - yInset;
    Area borderArea=new Area(new RoundRectangle2D.Double(xInset - 1,y - 1,width + 2,progressHeight + 2,(progressHeight + 2),(progressHeight + 2)));
    Area backgroundArea=new Area(new Rectangle2D.Double(xInset,y,width,progressHeight));
    backgroundArea.intersect(borderArea);
    Area progressArea=new Area(new Rectangle2D.Double(xInset + 1,y + 1,(width - 2) * value,progressHeight - 1));
    progressArea.intersect(borderArea);
    AppImage appImg=createAppImage();
    appImg.myG2d.setColor(PROGRESS_BACKGROUND_COLOR);
    appImg.myG2d.fill(backgroundArea);
    final Color color=isOk ? scheme.getOkColor() : scheme.getErrorColor();
    appImg.myG2d.setColor(color);
    appImg.myG2d.fill(progressArea);
    appImg.myG2d.setColor(PROGRESS_OUTLINE_COLOR);
    appImg.myG2d.draw(backgroundArea);
    appImg.myG2d.draw(borderArea);
    setDockIcon(appImg.myImg);
    myLastValue=value;
  }
 catch (  Exception e) {
    LOG.error(e);
  }
 finally {
    myCurrentProcessId=null;
  }
  return true;
}
