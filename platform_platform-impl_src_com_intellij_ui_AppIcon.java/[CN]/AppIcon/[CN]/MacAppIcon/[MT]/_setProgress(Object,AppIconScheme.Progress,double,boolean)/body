{
  assertIsDispatchThread();
  if (getAppImage() == null)   return false;
  myCurrentProcessId=processId;
  if (Math.abs(myLastValue - value) < 0.02d)   return true;
  try {
    int progressHeight=(int)(myAppImage.getHeight() * 0.13);
    int xInset=(int)(myAppImage.getWidth() * 0.05);
    int yInset=(int)(myAppImage.getHeight() * 0.15);
    final int width=myAppImage.getWidth() - xInset * 2;
    final int y=myAppImage.getHeight() - progressHeight - yInset;
    Shape rect=new RoundRectangle2D.Double(xInset,y,width,progressHeight,progressHeight,progressHeight);
    Shape border=new RoundRectangle2D.Double(xInset - 1,y - 1,width + 2,progressHeight + 2,(progressHeight + 2),(progressHeight + 2));
    Shape progress=new RoundRectangle2D.Double(xInset + 1,y + 1,(width - 2) * value,progressHeight - 2,(progressHeight - 2),(progressHeight - 2));
    AppImage appImg=createAppImage();
    appImg.myG2d.setColor(Color.GRAY.brighter().brighter());
    appImg.myG2d.fill(rect);
    appImg.myG2d.setColor(isOk ? scheme.getOkColor() : scheme.getErrorColor());
    appImg.myG2d.fill(progress);
    appImg.myG2d.setColor(Color.GRAY.darker().darker());
    appImg.myG2d.draw(rect);
    appImg.myG2d.draw(border);
    setDockIcon(appImg.myImg);
    myLastValue=value;
  }
 catch (  Exception e) {
    LOG.error(e);
  }
 finally {
    myCurrentProcessId=null;
  }
  return true;
}
