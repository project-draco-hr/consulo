{
  myResultBuffer=holder;
  myColorRegistry=mySyntaxInfo.getColorRegistry();
  myFontNameRegistry=mySyntaxInfo.getFontNameRegistry();
  myDefaultForeground=myForeground=mySyntaxInfo.getDefaultForeground();
  myDefaultBackground=myBackground=mySyntaxInfo.getDefaultBackground();
  myBold=myItalic=false;
  myCurrentColumn=0;
  myMaxLength=maxLength;
  try {
    buildColorMap();
    myResultBuffer.append("<html><head><meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"></head><body>").append("<pre style=\"background-color:");
    appendColor(myResultBuffer,myDefaultBackground);
    myResultBuffer.append(";color:");
    appendColor(myResultBuffer,myDefaultForeground);
    myResultBuffer.append(';');
    int[] fontIds=myFontNameRegistry.getAllIds();
    if (fontIds.length > 0) {
      myFontFamily=myDefaultFontFamily=fontIds[0];
      appendFontFamilyRule(myResultBuffer,myDefaultFontFamily);
    }
 else {
      myFontFamily=myDefaultFontFamily=-1;
    }
    myResultBuffer.append("font-size:").append(mySyntaxInfo.getFontSize()).append("pt;\">");
    mySyntaxInfo.processOutputInfo(this);
    myResultBuffer.append("</pre></body></html>");
  }
  finally {
    myResultBuffer=null;
    myColorRegistry=null;
    myFontNameRegistry=null;
    myColors.clear();
  }
}
