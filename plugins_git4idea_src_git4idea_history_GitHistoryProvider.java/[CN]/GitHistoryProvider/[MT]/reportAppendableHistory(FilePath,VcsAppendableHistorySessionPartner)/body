{
  final VcsAbstractHistorySession emptySession=createSession(path,Collections.<VcsFileRevision>emptyList(),null);
  partner.reportCreatedEmptySession(emptySession);
  VcsConfiguration vcsConfiguration=VcsConfiguration.getInstance(myProject);
  String[] additionalArgs=vcsConfiguration.LIMIT_HISTORY ? new String[]{"--max-count=" + vcsConfiguration.MAXIMUM_HISTORY_ROWS} : ArrayUtil.EMPTY_STRING_ARRAY;
  final GitExecutableValidator validator=GitVcs.getInstance(myProject).getExecutableValidator();
  GitHistoryUtils.history(myProject,refreshPath(path),null,new Consumer<GitFileRevision>(){
    public void consume(    GitFileRevision gitFileRevision){
      partner.acceptRevision(gitFileRevision);
    }
  }
,new Consumer<VcsException>(){
    public void consume(    VcsException e){
      if (validator.checkExecutableAndNotifyIfNeeded()) {
        partner.reportException(e);
      }
    }
  }
,additionalArgs);
}
