{
  return new VcsAbstractHistorySession(revisions){
    @Nullable protected VcsRevisionNumber calcCurrentRevisionNumber(){
      try {
        return GitHistoryUtils.getCurrentRevision(myProject,GitHistoryUtils.getLastCommitName(myProject,filePath),null);
      }
 catch (      VcsException e) {
        if (log.isDebugEnabled()) {
          log.debug("Unable to retrieve the current revision number",e);
        }
        return null;
      }
    }
    public HistoryAsTreeProvider getHistoryAsTreeProvider(){
      return null;
    }
    @Override public VcsHistorySession copy(){
      return createSession(filePath,getRevisionList());
    }
  }
;
}
