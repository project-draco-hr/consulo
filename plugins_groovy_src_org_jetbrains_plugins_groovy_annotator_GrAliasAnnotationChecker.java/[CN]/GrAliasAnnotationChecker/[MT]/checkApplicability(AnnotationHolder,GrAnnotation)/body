{
  final GrAnnotation annotationCollector=GrAnnotationCollector.findAnnotationCollector(annotation);
  if (annotationCollector == null) {
    return false;
  }
  final GrCodeReferenceElement ref=annotation.getClassReference();
  final ArrayList<GrAnnotation> aliasedAnnotations=ContainerUtil.newArrayList();
  GrAnnotationCollector.collectAnnotations(aliasedAnnotations,annotation,annotationCollector);
  for (  GrAnnotation anno : aliasedAnnotations) {
    if (GroovyCommonClassNames.GROOVY_TRANSFORM_ANNOTATION_COLLECTOR.equals(anno.getQualifiedName()))     continue;
    final String description=CustomAnnotationChecker.isAnnotationApplicable(anno,annotation.getParent());
    if (description != null) {
      holder.createErrorAnnotation(ref,description);
    }
  }
  return true;
}
