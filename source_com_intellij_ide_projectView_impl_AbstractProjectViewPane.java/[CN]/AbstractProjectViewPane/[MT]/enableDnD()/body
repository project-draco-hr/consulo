{
  if (!ApplicationManager.getApplication().isHeadlessEnvironment()) {
    DragSource.getDefaultDragSource().createDefaultDragGestureRecognizer(myTree,DnDConstants.ACTION_COPY_OR_MOVE,new MyDragGestureListener());
    new DropTarget(myTree,new MoveDropTargetListener(new MoveDropTargetListener.PsiRetriever(){
      @Nullable public PsiElement getPsiElement(      @Nullable final TreeNode node){
        return getPSIElement(getElement(node));
      }
    }
,myTree,myProject,FLAVORS[0]));
    myTree.enableDnd(myProject);
  }
}
