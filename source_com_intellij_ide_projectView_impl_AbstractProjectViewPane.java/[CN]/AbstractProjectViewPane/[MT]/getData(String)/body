{
  if (DataConstants.NAVIGATABLE_ARRAY.equals(dataId)) {
    TreePath[] paths=getSelectionPaths();
    if (paths == null)     return null;
    final ArrayList<Navigatable> navigatables=new ArrayList<Navigatable>();
    for (    TreePath path : paths) {
      Object lastPathComponent=path.getLastPathComponent();
      if (lastPathComponent instanceof DefaultMutableTreeNode) {
        DefaultMutableTreeNode node=(DefaultMutableTreeNode)lastPathComponent;
        Object userObject=node.getUserObject();
        if (userObject instanceof AbstractTreeNode) {
          navigatables.add((AbstractTreeNode)userObject);
        }
      }
    }
    if (navigatables.isEmpty()) {
      return null;
    }
 else {
      return navigatables.toArray(new Navigatable[navigatables.size()]);
    }
  }
  if (myTreeStructure instanceof AbstractTreeStructureBase) {
    final List<TreeStructureProvider> providers=((AbstractTreeStructureBase)myTreeStructure).getProviders();
    if (providers != null) {
      final List<AbstractTreeNode> selectedNodes=getSelectedNodes();
      for (      TreeStructureProvider treeStructureProvider : providers) {
        final Object fromProvider=treeStructureProvider.getData(selectedNodes,dataId);
        if (fromProvider != null) {
          return fromProvider;
        }
      }
    }
  }
  return null;
}
