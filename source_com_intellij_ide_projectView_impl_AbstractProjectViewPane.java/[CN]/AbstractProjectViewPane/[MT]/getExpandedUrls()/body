{
  if (myTree == null) {
    return new ArrayList<AbstractUrl>();
  }
  List<AbstractUrl> urls=new ArrayList<AbstractUrl>();
  DefaultMutableTreeNode rootNode=(DefaultMutableTreeNode)myTree.getModel().getRoot();
  Enumeration descendants=myTree.getExpandedDescendants(new TreePath(rootNode.getPath()));
  if (descendants != null) {
    NextDescendant:     while (descendants.hasMoreElements()) {
      TreePath treePath=(TreePath)descendants.nextElement();
      Object[] path=treePath.getPath();
      List<Object> elementsPath=new ArrayList<Object>(path.length);
      for (int i=0; i < path.length; i++) {
        Object node=path[i];
        if (node instanceof DefaultMutableTreeNode) {
          DefaultMutableTreeNode mutableNode=(DefaultMutableTreeNode)node;
          if (mutableNode.getUserObject() instanceof AbstractTreeNode) {
            AbstractTreeNode descriptor=(AbstractTreeNode)mutableNode.getUserObject();
            Object element=descriptor.getValue();
            if (element != null) {
              elementsPath.add(element);
            }
 else {
              continue NextDescendant;
            }
          }
        }
      }
      AbstractUrl url=myExpandedElements.createUrlByPath(elementsPath);
      if (url != null) {
        urls.add(url);
      }
    }
  }
  return urls;
}
