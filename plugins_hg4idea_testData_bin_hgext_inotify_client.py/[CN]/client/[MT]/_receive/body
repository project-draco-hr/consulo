def _receive(self, type):
    '\n        Read data, check version number, extract headers,\n        and returns a tuple (data descriptor, header)\n        Raises QueryFailed on error\n        '
    cs = common.recvcs(self.sock)
    try:
        version = ord(cs.read(1))
    except TypeError:
        self.ui.warn(_('inotify-client: received empty answer from inotify server'))
        raise QueryFailed('server crashed')
    if (version != common.version):
        self.ui.warn((_('(inotify: received response from incompatible server version %d)\n') % version))
        raise QueryFailed('incompatible server version')
    readtype = cs.read(4)
    if (readtype != type):
        self.ui.warn((_("(inotify: received '%s' response when expecting '%s')\n") % (readtype, type)))
        raise QueryFailed('wrong response type')
    hdrfmt = common.resphdrfmts[type]
    hdrsize = common.resphdrsizes[type]
    try:
        resphdr = struct.unpack(hdrfmt, cs.read(hdrsize))
    except struct.error:
        raise QueryFailed('unable to retrieve query response headers')
    return (cs, resphdr)
