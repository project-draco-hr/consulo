{
  boolean foundRename=false;
  final SVNStatus copiedStatus=copiedFile.getStatus();
  final String copyFromURL=copiedFile.getCopyFromURL();
  final FilePath copiedToPath=copiedFile.getFilePath();
  final Set<SvnChangedFile> deletedToDelete=new HashSet<SvnChangedFile>();
  for (Iterator<SvnChangedFile> iterator=context.getDeletedFiles().iterator(); iterator.hasNext(); ) {
    SvnChangedFile deletedFile=iterator.next();
    final SVNStatus deletedStatus=deletedFile.getStatus();
    if (copyFromURL.equals(deletedStatus.getURL().toString())) {
      builder.processChange(new Change(createBeforeRevision(deletedFile),CurrentContentRevision.create(copiedFile.getFilePath())));
      deletedToDelete.add(deletedFile);
      for (Iterator<SvnChangedFile> iterChild=context.getDeletedFiles().iterator(); iterChild.hasNext(); ) {
        SvnChangedFile deletedChild=iterChild.next();
        final String childURL=deletedChild.getStatus().getURL().toString();
        if (childURL.startsWith(copyFromURL + "/")) {
          String relativePath=childURL.substring(copyFromURL.length());
          File newPath=new File(copiedFile.getFilePath().getIOFile(),relativePath);
          FilePath newFilePath=myFactory.createFilePathOn(newPath);
          if (!context.isDeleted(newFilePath)) {
            builder.processChange(new Change(createBeforeRevision(deletedChild),CurrentContentRevision.create(newFilePath)));
            deletedToDelete.add(deletedChild);
          }
        }
      }
      foundRename=true;
      break;
    }
  }
  final List<SvnChangedFile> deletedFiles=context.getDeletedFiles();
  for (  SvnChangedFile file : deletedToDelete) {
    deletedFiles.remove(file);
  }
  if (!foundRename && copiedStatus.getURL() != null) {
    File wcPath=guessWorkingCopyPath(copiedStatus.getFile(),copiedStatus.getURL(),copyFromURL);
    SVNStatus status;
    try {
      status=context.getClient().doStatus(wcPath,false);
    }
 catch (    SVNException ex) {
      status=null;
    }
    if (status != null && status.getContentsStatus() == SVNStatusType.STATUS_DELETED) {
      final FilePath filePath=myFactory.createFilePathOnDeleted(wcPath,false);
      final SvnContentRevision beforeRevision=SvnContentRevision.create(myVcs,filePath,status.getRevision());
      final ContentRevision afterRevision=CurrentContentRevision.create(copiedFile.getFilePath());
      builder.processChange(new Change(beforeRevision,afterRevision));
      foundRename=true;
    }
  }
  if (!foundRename) {
    processStatus(copiedFile.getFilePath(),copiedStatus,builder,null);
  }
}
