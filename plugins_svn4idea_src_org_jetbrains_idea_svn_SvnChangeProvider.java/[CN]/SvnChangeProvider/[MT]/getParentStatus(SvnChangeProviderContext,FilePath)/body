{
  if (context.isCanceled()) {
    throw new ProcessCanceledException();
  }
  final FilePath parentPath=path.getParentPath();
  if (parentPath == null) {
    return null;
  }
  VirtualFile file=parentPath.getVirtualFile();
  if (file == null) {
    return null;
  }
  FileStatus status=FileStatusManager.getInstance(myVcs.getProject()).getStatus(file);
  if (status == FileStatus.IGNORED) {
    return status;
  }
  final Change change=ChangeListManager.getInstance(myVcs.getProject()).getChange(file);
  if (ApplicationManager.getApplication().isUnitTestMode() || (change != null && (change.isRenamed() || change.isMoved()))) {
    try {
      final SVNStatus svnStatus=context.getClient().doStatus(parentPath.getIOFile(),false,false);
      if (svnStatus.getCopyFromURL() != null) {
        context.addCopyFromURL(parentPath,svnStatus.getCopyFromURL());
      }
    }
 catch (    SVNException e) {
    }
  }
  FileStatus parentStatus=getParentStatus(context,parentPath);
  if (parentStatus != null) {
    return parentStatus;
  }
  if (status == FileStatus.SWITCHED) {
    return status;
  }
  return null;
}
