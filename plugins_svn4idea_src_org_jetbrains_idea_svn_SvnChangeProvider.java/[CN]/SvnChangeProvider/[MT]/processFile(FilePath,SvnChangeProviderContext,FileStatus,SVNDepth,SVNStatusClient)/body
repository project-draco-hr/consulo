{
  if (context.isCanceled()) {
    throw new ProcessCanceledException();
  }
  try {
    if (path.isDirectory()) {
      statusClient.doStatus(path.getIOFile(),SVNRevision.WORKING,depth,false,true,true,false,new ISVNStatusHandler(){
        public void handleStatus(        SVNStatus status) throws SVNException {
          if (context.isCanceled()) {
            throw new ProcessCanceledException();
          }
          FilePath path=VcsUtil.getFilePath(status.getFile(),status.getKind().equals(SVNNodeKind.DIR));
          final VirtualFile vFile=path.getVirtualFile();
          if (vFile != null && myExcludedFileIndex.isExcludedFile(vFile)) {
            return;
          }
          processStatusFirstPass(path,status,context,parentStatus);
          if ((vFile != null) && (status.getContentsStatus() == SVNStatusType.STATUS_UNVERSIONED) && path.isDirectory()) {
            if (myClManager.isIgnoredFile(vFile)) {
              context.getBuilder().processIgnoredFile(vFile);
            }
 else {
              SVNStatusClient client=myVcs.createStatusClient();
              if (SVNDepth.INFINITY.equals(depth) && path.isDirectory()) {
                VirtualFile[] children=vFile.getChildren();
                for (                VirtualFile aChildren : children) {
                  FilePath filePath=VcsUtil.getFilePath(aChildren.getPath(),aChildren.isDirectory());
                  processFile(filePath,context,parentStatus,depth,client);
                }
              }
            }
          }
        }
      }
,null);
    }
 else {
      processFile(path,context,parentStatus);
    }
  }
 catch (  SVNException e) {
    if (e.getErrorMessage().getErrorCode() == SVNErrorCode.WC_NOT_DIRECTORY) {
      final VirtualFile virtualFile=path.getVirtualFile();
      if (virtualFile != null) {
        if (myExcludedFileIndex.isExcludedFile(virtualFile))         return;
        if (parentStatus != FileStatus.IGNORED) {
          if (!SvnUtil.isWorkingCopyRoot(new File(virtualFile.getPath()))) {
            context.getBuilder().processUnversionedFile(virtualFile);
          }
        }
      }
      if ((!SVNDepth.EMPTY.equals(depth)) && path.isDirectory() && virtualFile != null) {
        VirtualFile[] children=virtualFile.getChildren();
        for (        VirtualFile child : children) {
          FilePath filePath=VcsUtil.getFilePath(child.getPath(),child.isDirectory());
          processFile(filePath,context,parentStatus,SVNDepth.INFINITY.equals(depth) ? SVNDepth.INFINITY : SVNDepth.EMPTY,statusClient);
        }
      }
    }
 else {
      throw e;
    }
  }
}
