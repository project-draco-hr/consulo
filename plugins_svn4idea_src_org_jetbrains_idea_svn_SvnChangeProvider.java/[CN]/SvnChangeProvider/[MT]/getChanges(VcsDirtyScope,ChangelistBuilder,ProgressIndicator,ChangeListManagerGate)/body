{
  final SvnScopeZipper zipper=new SvnScopeZipper(dirtyScope);
  zipper.run();
  final Map<String,SvnScopeZipper.MyDirNonRecursive> nonRecursiveMap=zipper.getNonRecursiveDirs();
  final Map<String,Map> preparedMap=new HashMap<String,Map>();
  for (  SvnScopeZipper.MyDirNonRecursive item : nonRecursiveMap.values()) {
    final Map result=new HashMap();
    for (    FilePath path : item.getChildrenList()) {
      result.put(path.getName(),path.getIOFile());
    }
    preparedMap.put(item.getDir().getIOFile().getAbsolutePath(),result);
  }
  final ISVNStatusFileProvider fileProvider=new ISVNStatusFileProvider(){
    public Map getChildrenFiles(    File parent){
      return preparedMap.get(parent.getAbsolutePath());
    }
  }
;
  try {
    final SvnChangeProviderContext context=new SvnChangeProviderContext(myVcs,builder,progress);
    for (    FilePath path : zipper.getRecursiveDirs()) {
      processFile(path,context,SVNDepth.INFINITY,context.getClient());
    }
    context.getClient().setFilesProvider(fileProvider);
    for (    SvnScopeZipper.MyDirNonRecursive item : nonRecursiveMap.values()) {
      processFile(item.getDir(),context,SVNDepth.FILES,context.getClient());
    }
    processCopiedAndDeleted(context);
  }
 catch (  SVNException e) {
    throw new VcsException(e);
  }
}
