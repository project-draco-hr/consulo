{
  myPushPolicy.addItem(PUSH_POLICY_SELECTED);
  myPushPolicy.addItem(PUSH_POLICY_DEFAULT);
  myPushPolicy.addItem(PUSH_POLICY_ALL);
  myPushPolicy.addItem(PUSH_POLICY_MIRROR);
  myPushPolicy.setSelectedIndex(0);
  final ActionListener policyListener=new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      String p=(String)myPushPolicy.getSelectedItem();
      if (PUSH_POLICY_SELECTED.equals(p)) {
        myBranchChooser.setEnabled(true);
        myShowTagsCheckBox.setEnabled(true);
        updateBranchChooser();
      }
 else {
        myBranchChooser.clear();
        myBranchChooser.setEnabled(false);
        myShowTagsCheckBox.setEnabled(false);
      }
      if (PUSH_POLICY_MIRROR.equals(p)) {
        myPushTagsCheckBox.setEnabled(false);
        myPushTagsCheckBox.setSelected(true);
        myForceUpdateCheckBox.setEnabled(false);
        myForceUpdateCheckBox.setSelected(true);
      }
 else {
        if (!myForceUpdateCheckBox.isEnabled()) {
          myForceUpdateCheckBox.setEnabled(true);
          myForceUpdateCheckBox.setSelected(false);
        }
        if (PUSH_POLICY_ALL.equals(p)) {
          myPushTagsCheckBox.setEnabled(false);
          myPushTagsCheckBox.setSelected(false);
        }
 else         if (!myPushTagsCheckBox.isEnabled()) {
          myPushTagsCheckBox.setEnabled(true);
          myPushTagsCheckBox.setSelected(false);
        }
      }
    }
  }
;
  myPushPolicy.addActionListener(policyListener);
  policyListener.actionPerformed(null);
  final DocumentAdapter listener=new DocumentAdapter(){
    VirtualFile myPreviousRoot;
    GitDeprecatedRemote myPreviousRemote=null;
    protected void textChanged(    final DocumentEvent e){
      final VirtualFile newRoot=getGitRoot();
      final GitDeprecatedRemote newRemote=getRemote(getRemoteTextField().getText());
      if (newRoot == null) {
        return;
      }
      if (myPreviousRoot == null || myPreviousRemote == null || !myPreviousRoot.equals(newRoot) || !myPreviousRemote.equals(newRemote)) {
        if (isMirror()) {
          myPushPolicy.setEnabled(false);
          myPushPolicy.setSelectedItem(PUSH_POLICY_MIRROR);
        }
 else {
          if (!myPushPolicy.isEnabled()) {
            myPushPolicy.setSelectedItem(PUSH_POLICY_SELECTED);
            myPushPolicy.setEnabled(true);
          }
        }
        myPreviousRoot=newRoot;
        myPreviousRemote=newRemote;
      }
    }
  }
;
  getRemoteTextField().getDocument().addDocumentListener(listener);
  myGitRootComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      listener.changedUpdate(null);
    }
  }
);
  listener.changedUpdate(null);
}
