{
  final int offset=myEditor.getCaretModel().getOffset();
  final PsiElement element=myFile.findElementAt(offset).getParent();
  assertTrue(element instanceof PsiLocalVariable);
  PsiMethod method=Util.getContainingMethod(element);
  final PsiMethod methodToSearchFor;
  if (searchForSuper) {
    final PsiMethod deepestSuperMethod=PsiSuperMethodUtil.findDeepestSuperMethod(method);
    methodToSearchFor=deepestSuperMethod != null ? deepestSuperMethod : method;
  }
 else {
    methodToSearchFor=method;
  }
  assertNotNull(method);
  assertNotNull(methodToSearchFor);
  final PsiLocalVariable localVariable=(PsiLocalVariable)element;
  final PsiExpression parameterInitializer=localVariable.getInitializer();
  new IntroduceParameterProcessor(myProject,method,methodToSearchFor,parameterInitializer,null,localVariable,removeLocalVariable,localVariable.getName(),replaceAllOccurences,IntroduceParameterRefactoring.REPLACE_FIELDS_WITH_GETTERS_INACCESSIBLE,declareFinal,null,null).testRun();
  return true;
}
