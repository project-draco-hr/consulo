{
  final PsiElementFactory elementFactory=JavaPsiFacade.getInstance(place.getProject()).getElementFactory();
  final String typeText=qualifierType instanceof PsiEllipsisType ? ((PsiEllipsisType)qualifierType).getComponentType().getCanonicalText() + "[]" : qualifierType.getCanonicalText();
  final JavaCodeFragment block=elementFactory.createCodeBlockCodeFragment(typeText + " xxx;xxx.xxx;",place,false);
  final PsiElement secondChild=block.getChildren()[1];
  if (!(secondChild instanceof PsiExpressionStatement)) {
    LOG.error(typeText);
  }
  final PsiExpressionStatement expressionStatement=(PsiExpressionStatement)secondChild;
  final PsiReferenceExpression mockRef=(PsiReferenceExpression)expressionStatement.getExpression();
  final ElementFilter filter=getReferenceFilter(place,true);
  for (  final LookupElement item : completeFinalReference(place,mockRef,filter,parameters)) {
    if (shoudChain(place,qualifierType,expectedType,item)) {
      result.addElement(JavaChainLookupElement.chainElements(qualifierItem,item));
    }
  }
}
