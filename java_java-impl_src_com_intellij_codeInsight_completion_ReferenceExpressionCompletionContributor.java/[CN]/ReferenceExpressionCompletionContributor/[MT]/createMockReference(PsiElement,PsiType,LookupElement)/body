{
  if (qualifierItem.getObject() instanceof PsiClass) {
    return (PsiReferenceExpression)JavaPsiFacade.getElementFactory(place.getProject()).createExpressionFromText(((PsiClass)qualifierItem.getObject()).getQualifiedName() + ".xxx",place);
  }
  final JavaCodeFragmentFactory factory=JavaCodeFragmentFactory.getInstance(place.getProject());
  PsiType varType=qualifierType;
  if (varType instanceof PsiEllipsisType) {
    varType=((PsiEllipsisType)varType).getComponentType();
  }
  if (varType instanceof PsiWildcardType || varType instanceof PsiCapturedWildcardType) {
    varType=TypeConversionUtil.erasure(varType);
  }
  final String typeText=varType.getCanonicalText();
  final JavaCodeFragment block=factory.createCodeBlockCodeFragment(typeText + " xxx;xxx.xxx;",place,false);
  final PsiElement secondChild=block.getChildren()[1];
  if (!(secondChild instanceof PsiExpressionStatement)) {
    LOG.error(typeText + " of " + varType.getClass());
  }
  final PsiExpressionStatement expressionStatement=(PsiExpressionStatement)secondChild;
  return (PsiReferenceExpression)expressionStatement.getExpression();
}
