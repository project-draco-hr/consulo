{
  final VirtualFile virtualFile=(VirtualFile)dc.getData(PlatformDataKeys.VIRTUAL_FILE.getName());
  if (virtualFile == null) {
    LOG.debug("counted 0 files");
    return;
  }
  final List<VirtualFile> files=new ArrayList<VirtualFile>();
  final VirtualFileVisitor counter=new VirtualFileVisitor(){
    @Override public boolean visitFile(    @NotNull VirtualFile file){
      if (!file.isDirectory()) {
        LOG.debug((files.size() + 1) + ": file " + file.getName());
        files.add(file);
      }
      return true;
    }
  }
;
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      VfsUtilCore.visitChildrenRecursively(virtualFile,counter);
    }
  }
);
  LOG.debug("counted " + files.size() + " files");
  final RearrangerActionHandler rah=new RearrangerActionHandler();
  final PsiDocumentManager dm=PsiDocumentManager.getInstance(project);
  final PsiManager pm=PsiManager.getInstance(project);
  final BoolHolder cancelled=new BoolHolder();
  final JDialog dialog=getProgressFrame(cancelled,files.size());
  dialog.setVisible(true);
  for (int currentCount=0; currentCount < files.size(); currentCount++) {
    if (cancelled.value) {
      LOG.debug("cancelled rearrangement");
      break;
    }
    final VirtualFile f=files.get(currentCount);
    final int k=currentCount;
    Runnable fn=new Runnable(){
      public void run(){
        final PsiFile psiFile=pm.findFile(f);
        LOG.debug("SDT setting filename to " + psiFile.getName());
        filename.setText(psiFile.getName());
        filename.repaint();
      }
    }
;
    Runnable r=new Runnable(){
      public void run(){
        final PsiFile psiFile=pm.findFile(f);
        if (psiFile != null && psiFile.getName().endsWith(".java") && psiFile.isWritable()) {
          LOG.debug("SDT rearranging file " + psiFile.getName());
          final Document document=dm.getDocument(psiFile);
          final Application application=ApplicationManager.getApplication();
          application.runWriteAction(new Runnable(){
            public void run(){
              final Application application=ApplicationManager.getApplication();
              final Rearranger rearranger=application.getComponent(Rearranger.class);
              RearrangerSettings settings=rearranger.getSettings();
              settings=settings.deepCopy();
              settings.setAskBeforeRearranging(false);
              rah.runWriteActionRearrangement(project,document,psiFile,settings);
            }
          }
);
        }
        if (!cancelled.value) {
          LOG.debug("SDT setting progress bar value to " + (k + 1));
          bar.setValue(k + 1);
          bar.repaint();
        }
      }
    }
;
    try {
      SwingUtilities.invokeAndWait(fn);
      SwingUtilities.invokeAndWait(r);
    }
 catch (    InterruptedException e) {
      LOG.error(e);
    }
catch (    InvocationTargetException e) {
      LOG.error(e);
    }
  }
  dialog.setVisible(false);
  dialog.dispose();
}
