{
  myRootToDescriptorMap=new MultiMap<File,ArtifactRootDescriptor>();
  myInstructions=new HashMap<JpsArtifact,ArtifactInstructionsBuilder>();
  myArtifactByName=new HashMap<String,JpsArtifact>();
  for (  JpsArtifact artifact : JpsBuilderArtifactService.getInstance().getArtifacts(model,true)) {
    myArtifactByName.put(artifact.getName(),artifact);
    ArtifactInstructionsBuilderImpl builder=new ArtifactInstructionsBuilderImpl(rootsIndex,new ArtifactBuildTarget(artifact));
    final JpsCompositePackagingElement rootElement=artifact.getRootElement();
    ArtifactInstructionsBuilderContext context=new ArtifactInstructionsBuilderContextImpl(model,rootsIndex,new ProjectPaths(model.getProject()));
    String outputPath=StringUtil.notNullize(artifact.getOutputPath());
    final CopyToDirectoryInstructionCreator instructionCreator=new CopyToDirectoryInstructionCreator(builder,outputPath);
    LayoutElementBuildersRegistry.getInstance().generateInstructions(rootElement,instructionCreator,context);
    myInstructions.put(artifact,builder);
    for (    Pair<ArtifactRootDescriptor,DestinationInfo> pair : builder.getInstructions()) {
      ArtifactRootDescriptor descriptor=pair.getFirst();
      myRootToDescriptorMap.putValue(descriptor.getRootFile(),descriptor);
    }
  }
}
