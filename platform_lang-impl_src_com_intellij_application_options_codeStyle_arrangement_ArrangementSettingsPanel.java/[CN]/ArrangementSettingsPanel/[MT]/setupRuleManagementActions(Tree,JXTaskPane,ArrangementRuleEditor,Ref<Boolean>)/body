{
  final Runnable newRuleFunction=new Runnable(){
    @Override public void run(){
      treeComponent.requestFocus();
      ArrangementRuleEditingModel model=myRuleTree.newModel();
      ruleEditor.updateState(model);
      resetEditor.set(Boolean.FALSE);
      try {
        editorPane.setCollapsed(false);
      }
  finally {
        resetEditor.set(Boolean.TRUE);
      }
    }
  }
;
  final Runnable removeRuleFunction=new Runnable(){
    @Override public void run(){
      treeComponent.requestFocus();
      ArrangementRuleEditingModelImpl model=myRuleTree.getActiveModel();
      if (model != null) {
        model.destroy();
      }
    }
  }
;
  treeComponent.putClientProperty(DataManager.CLIENT_PROPERTY_DATA_PROVIDER,new DataProvider(){
    @Nullable @Override public Object getData(    @NonNls String dataId){
      if (ArrangementConstants.NEW_RULE_FUNCTION_KEY.is(dataId)) {
        return newRuleFunction;
      }
 else       if (ArrangementConstants.REMOVE_RULE_FUNCTION_KEY.is(dataId)) {
        return removeRuleFunction;
      }
      return null;
    }
  }
);
}
