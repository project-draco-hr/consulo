{
  final JViewport viewport=scrollPane.getViewport();
  viewport.addChangeListener(new ChangeListener(){
    private boolean mySkip;
    private int myYToRestore;
    @Override public void stateChanged(    ChangeEvent e){
      if (mySkip) {
        return;
      }
      myYToRestore=-1;
      if (editorPane.isCollapsed()) {
        if (myYToRestore >= 0) {
          scroll(myYToRestore);
          myYToRestore=-1;
        }
      }
 else {
        myYToRestore=-1;
        ArrangementRuleEditingModelImpl model=myRuleTree.getActiveModel();
        if (model != null) {
          Rectangle bounds=treeComponent.getPathBounds(new TreePath(model.getBottomMost().getPath()));
          if (bounds != null) {
            myYToRestore=bounds.y;
            Rectangle viewRect=viewport.getViewRect();
            if (bounds.y < viewRect.y) {
              scroll(bounds.y);
            }
 else             if (bounds.y + bounds.height >= viewRect.y + viewRect.height) {
              scroll(bounds.y + bounds.height - viewRect.height);
            }
          }
        }
      }
    }
    private void scroll(    int y){
      mySkip=true;
      try {
        viewport.setViewPosition(new Point(0,y));
      }
  finally {
        mySkip=false;
      }
    }
  }
);
}
