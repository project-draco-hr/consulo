{
  super(settings);
  ArrangementStandardSettingsRepresentationAware representationManager=DefaultArrangementSettingsRepresentationManager.INSTANCE;
  if (filter instanceof ArrangementStandardSettingsRepresentationAware) {
    representationManager=(ArrangementStandardSettingsRepresentationAware)filter;
  }
  ArrangementNodeDisplayManager displayManager=new ArrangementNodeDisplayManager(filter,representationManager);
  final ArrangementRuleTree ruleTree=new ArrangementRuleTree(displayManager);
  Tree component=ruleTree.getTreeComponent();
  myContent.add(new JBScrollPane(component),new GridBag().weightx(1).weighty(1).fillCell().coverLine());
  CustomizationUtil.installPopupHandler(component,ArrangementConstants.ACTION_GROUP_RULE_EDITOR_CONTEXT_MENU,ArrangementConstants.RULE_EDITOR_PLACE);
  final JXTaskPane editorPane=new JXTaskPane(ApplicationBundle.message("arrangement.title.editor"));
  final ArrangementMatcherRuleEditor ruleEditor=new ArrangementMatcherRuleEditor(filter,displayManager);
  ruleEditor.applyBackground(component.getBackground());
  editorPane.getContentPane().setBackground(component.getBackground());
  editorPane.add(ruleEditor);
  editorPane.setCollapsed(true);
  final Ref<Boolean> resetEditor=new Ref<Boolean>(Boolean.TRUE);
  myContent.add(editorPane,new GridBag().weightx(1).fillCellHorizontally().coverLine());
  editorPane.addPropertyChangeListener("collapsed",new PropertyChangeListener(){
    @Override public void propertyChange(    PropertyChangeEvent evt){
      if (evt.getNewValue() == Boolean.FALSE && resetEditor.get()) {
        ruleEditor.updateState(null);
      }
    }
  }
);
  ruleTree.addEditingListener(new ArrangementMatcherEditingListener(){
    @Override public void startEditing(    @NotNull ArrangementMatcherSettings settings){
      ruleEditor.updateState(settings);
      resetEditor.set(Boolean.FALSE);
      try {
        editorPane.setCollapsed(false);
      }
  finally {
        resetEditor.set(Boolean.TRUE);
      }
    }
    @Override public void stopEditing(){
      editorPane.setCollapsed(true);
    }
  }
);
}
