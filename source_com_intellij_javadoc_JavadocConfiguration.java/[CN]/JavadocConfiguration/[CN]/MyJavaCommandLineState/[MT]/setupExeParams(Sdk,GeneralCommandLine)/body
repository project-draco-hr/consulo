{
  final String jdkPath=jdk != null ? new File(jdk.getSdkType().getVMExecutablePath(jdk)).getParent() : null;
  if (jdkPath == null) {
    throw new CantRunException(JavadocBundle.message("javadoc.generate.no.jdk.path"));
  }
  String versionString=jdk.getVersionString();
  if (HEAP_SIZE != null && HEAP_SIZE.trim().length() != 0) {
    if (versionString.indexOf("1.1") > -1) {
      cmdLine.getParametersList().prepend("-J-mx" + HEAP_SIZE + "m");
    }
 else {
      cmdLine.getParametersList().prepend("-J-Xmx" + HEAP_SIZE + "m");
    }
  }
  cmdLine.setWorkingDirectory(null);
  @NonNls final String javadocExecutableName=File.separator + (SystemInfo.isWindows ? "javadoc.exe" : "javadoc");
  @NonNls String exePath=jdkPath.replace('/',File.separatorChar) + javadocExecutableName;
  if (new File(exePath).exists()) {
    cmdLine.setExePath(exePath);
  }
 else {
    exePath=new File(jdkPath).getParent().replace('/',File.separatorChar) + javadocExecutableName;
    if (!new File(exePath).exists()) {
      final File parent=new File(System.getProperty("java.home")).getParentFile();
      exePath=parent.getPath() + File.separator + "bin"+ javadocExecutableName;
      if (!new File(exePath).exists()) {
        throw new CantRunException(JavadocBundle.message("javadoc.generate.no.jdk.path"));
      }
    }
    cmdLine.setExePath(exePath);
  }
}
