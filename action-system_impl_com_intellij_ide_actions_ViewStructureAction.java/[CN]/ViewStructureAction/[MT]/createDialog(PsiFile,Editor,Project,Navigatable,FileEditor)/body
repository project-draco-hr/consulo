{
  final StructureViewModel structureViewModel;
  Disposable auxDisposable=null;
  final StructureViewBuilder structureViewBuilder=fileEditor.getStructureViewBuilder();
  if (structureViewBuilder instanceof TreeBasedStructureViewBuilder) {
    structureViewModel=((TreeBasedStructureViewBuilder)structureViewBuilder).createStructureViewModel();
  }
 else   if (psiFile instanceof PropertiesFile) {
    structureViewModel=new PropertiesFileStructureViewModel((PropertiesFile)psiFile);
  }
 else   if (PsiUtil.isInJspFile(psiFile)) {
    Language language=((LanguageFileType)psiFile.getFileType()).getLanguage();
    StructureViewComposite structureViewComposite=(StructureViewComposite)LanguageStructureViewBuilder.INSTANCE.forLanguage(language).getStructureViewBuilder(psiFile).createStructureView(fileEditor,project);
    StructureView structureView=structureViewComposite.getSelectedStructureView();
    structureViewModel=((StructureViewComponent)structureView).getTreeModel();
    auxDisposable=structureViewComposite;
  }
 else {
    return null;
  }
  if (auxDisposable == null) {
    auxDisposable=new Disposable(){
      public void dispose(){
        structureViewModel.dispose();
      }
    }
;
  }
  return createStructureViewBasedDialog(structureViewModel,editor,project,navigatable,auxDisposable);
}
