{
  final boolean isStatic=member.hasModifierProperty(PsiModifier.STATIC);
  if (qualifier instanceof GrReferenceExpression) {
    if ("class".equals(((GrReferenceExpression)qualifier).getReferenceName())) {
      final PsiType type=qualifier.getType();
      if (type instanceof PsiClassType) {
        final PsiClass psiClass=((PsiClassType)type).resolve();
        if (psiClass != null && CommonClassNames.JAVA_LANG_CLASS.equals(psiClass.getQualifiedName())) {
          final PsiType[] params=((PsiClassType)type).getParameters();
          if (params.length == 1 && params[0] instanceof PsiClassType) {
            if (place.getManager().areElementsEquivalent(containingClass,((PsiClassType)params[0]).resolve())) {
              return member.hasModifierProperty(PsiModifier.STATIC);
            }
          }
        }
      }
    }
 else     if (PsiUtil.isThisOrSuperRef(qualifier)) {
      final boolean isInStatic=isInStaticContext((GrReferenceExpression)qualifier);
      if (PsiUtil.isThisReference(qualifier) && isInStatic) {
        return checkJavaLangClassMember(place,containingClass,member) || member.hasModifierProperty(PsiModifier.STATIC);
      }
      return !isStatic || !filterStaticAfterInstanceQualifier || CodeInsightSettings.getInstance().SHOW_STATIC_AFTER_INSTANCE;
    }
    PsiElement qualifierResolved=((GrReferenceExpression)qualifier).resolve();
    if (qualifierResolved instanceof PsiClass || qualifierResolved instanceof PsiPackage) {
      if (member instanceof PsiClass) {
        return true;
      }
      if (isStatic) {
        return true;
      }
      if (containingClass == null) {
        return isStatic;
      }
      if (checkJavaLangClassMember(place,containingClass,member))       return true;
      return false;
    }
  }
  if (member instanceof PsiClass) {
    return false;
  }
  return !isStatic || !filterStaticAfterInstanceQualifier || CodeInsightSettings.getInstance().SHOW_STATIC_AFTER_INSTANCE;
}
