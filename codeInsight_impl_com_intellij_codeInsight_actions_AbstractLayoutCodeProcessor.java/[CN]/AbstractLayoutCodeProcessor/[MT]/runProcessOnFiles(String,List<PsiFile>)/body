{
  final ReadonlyStatusHandler.OperationStatus status=ReadonlyStatusHandler.getInstance(myProject).ensureFilesWritable(convert(array));
  final VirtualFile[] readonlyFiles=status.getReadonlyFiles();
  if (readonlyFiles.length == array.size())   return;
  if (readonlyFiles.length > 0) {
    int res=Messages.showOkCancelDialog(myProject,CodeInsightBundle.message("error.dialog.readonly.files.message",where),CodeInsightBundle.message("error.dialog.readonly.files.title"),Messages.getQuestionIcon());
    if (res != 0) {
      return;
    }
    List<PsiFile> writeables=new ArrayList<PsiFile>();
    for (    PsiFile file : array) {
      if (file.isWritable()) {
        writeables.add(file);
      }
    }
    array.clear();
    array.addAll(writeables);
  }
  final Runnable[] resultRunnable=new Runnable[1];
  runLayoutCodeProcess(new Runnable(){
    public void run(){
      resultRunnable[0]=preprocessFiles(array);
    }
  }
,new Runnable(){
    public void run(){
      if (resultRunnable[0] != null) {
        resultRunnable[0].run();
      }
    }
  }
);
}
