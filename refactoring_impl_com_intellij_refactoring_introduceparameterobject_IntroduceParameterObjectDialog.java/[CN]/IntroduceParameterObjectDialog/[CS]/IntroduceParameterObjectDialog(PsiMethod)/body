{
  super(sourceMethod.getProject(),true);
  this.sourceMethod=sourceMethod;
  setTitle(RefactorJBundle.message("introduce.parameter.object.title"));
  final DocumentListener docListener=new DocumentAdapter(){
    protected void textChanged(    final DocumentEvent e){
      validateButtons();
    }
  }
;
  classNameField.getDocument().addDocumentListener(docListener);
  myInnerClassNameTextField.getDocument().addDocumentListener(docListener);
  final PsiParameterList parameterList=sourceMethod.getParameterList();
  final PsiParameter[] parameters=parameterList.getParameters();
  parameterInfo=new ParameterTablePanel.VariableData[parameters.length];
  for (int i=0; i < parameterInfo.length; i++) {
    parameterInfo[i]=new ParameterTablePanel.VariableData(parameters[i]);
    parameterInfo[i].name=parameters[i].getName();
    parameterInfo[i].passAsParameter=true;
  }
  final PsiClass containingClass=sourceMethod.getContainingClass();
  sourceMethodTextField.setText(containingClass.getName() + '.' + sourceMethod.getName());
  final ButtonGroup buttonGroup=new ButtonGroup();
  buttonGroup.add(useExistingClassButton);
  buttonGroup.add(createNewClassButton);
  buttonGroup.add(myCreateInnerClassRadioButton);
  createNewClassButton.setSelected(true);
  init();
  final PsiFile file=sourceMethod.getContainingFile();
  if (file instanceof PsiJavaFile) {
    packageTextField.setText(((PsiJavaFile)file).getPackageName());
  }
  final ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent actionEvent){
      toggleRadioEnablement();
      final IdeFocusManager focusManager=IdeFocusManager.getInstance(myProject);
      if (useExistingClass()) {
        focusManager.requestFocus(existingClassField,true);
      }
 else       if (myCreateInnerClassRadioButton.isSelected()) {
        focusManager.requestFocus(myInnerClassNameTextField,true);
      }
 else {
        focusManager.requestFocus(classNameField,true);
      }
    }
  }
;
  useExistingClassButton.addActionListener(listener);
  createNewClassButton.addActionListener(listener);
  myCreateInnerClassRadioButton.addActionListener(listener);
  toggleRadioEnablement();
}
