{
  super(sourceMethod.getProject(),true);
  this.sourceMethod=sourceMethod;
  setTitle(RefactorJBundle.message("introduce.parameter.object.title"));
  final DocumentListener docListener=new DocumentAdapter(){
    protected void textChanged(    final DocumentEvent e){
      validateButtons();
    }
  }
;
  packageTextField=new JTextField();
  packageTextField.getDocument().addDocumentListener(docListener);
  packageChooserButton=new FixedSizeButton(packageTextField);
  existingClassField=new JTextField();
  existingClassField.getDocument().addDocumentListener(docListener);
  existingClassChooserButton=new FixedSizeButton(existingClassField);
  classNameField=new JTextField();
  classNameField.getDocument().addDocumentListener(docListener);
  sourceMethodTextField=new JTextField();
  final PsiParameterList parameterList=sourceMethod.getParameterList();
  final PsiParameter[] parameters=parameterList.getParameters();
  parameterInfo=new ParameterTablePanel.VariableData[parameters.length];
  for (int i=0; i < parameterInfo.length; i++) {
    parameterInfo[i]=new ParameterTablePanel.VariableData(parameters[i]);
    parameterInfo[i].passAsParameter=true;
  }
  classNameLabel=new JLabel(RefactorJBundle.message("name.for.wrapper.class.label"));
  packageLabel=new JLabel(RefactorJBundle.message("package.for.wrapper.class.label"));
  final PsiFile file=sourceMethod.getContainingFile();
  if (file instanceof PsiJavaFile) {
    packageTextField.setText(((PsiJavaFile)file).getPackageName());
  }
  final PsiClass containingClass=sourceMethod.getContainingClass();
  sourceMethodTextField.setText(containingClass.getName() + '.' + sourceMethod.getName());
  final ButtonGroup buttonGroup=new ButtonGroup();
  buttonGroup.add(useExistingClassButton);
  buttonGroup.add(createNewClassButton);
  createNewClassButton.setSelected(true);
  init();
  final ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent actionEvent){
      toggleRadioEnablement();
    }
  }
;
  useExistingClassButton.addActionListener(listener);
  createNewClassButton.addActionListener(listener);
  toggleRadioEnablement();
  validateButtons();
}
