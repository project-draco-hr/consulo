{
  final PsiIdentifier nameIdentifier=method.getNameIdentifier();
  if (nameIdentifier == null) {
    return;
  }
  final VariableAccessVisitor visitor=new VariableAccessVisitor();
  method.accept(visitor);
  final Set fields=visitor.getOveraccessedFields();
  for (Iterator iterator=fields.iterator(); iterator.hasNext(); ) {
    final PsiField field=(PsiField)iterator.next();
    if (!m_ignoreFinalFields || !field.hasModifierProperty(PsiModifier.FINAL)) {
      registerError(nameIdentifier,field);
    }
  }
}
