{
  if (ourAntTypeToKnownAntElementCreatorMap == null) {
    ourAntTypeToKnownAntElementCreatorMap=new HashMap<String,AntElementCreator>();
    ourAntTypeToKnownAntElementCreatorMap.put(Target.class.getName(),new AntElementCreator(){
      public AntElement create(      final AntElement parent,      final XmlTag tag){
        return new AntTargetImpl(parent,tag);
      }
    }
);
    ourAntTypeToKnownAntElementCreatorMap.put(Property.class.getName(),new AntElementCreator(){
      public AntElement create(      final AntElement parent,      final XmlTag tag){
        return new AntPropertyImpl(parent,tag,parent.getAntProject().getBaseTypeDefinition(Property.class.getName()));
      }
    }
);
    ourAntTypeToKnownAntElementCreatorMap.put(CallTarget.class.getName(),new AntElementCreator(){
      public AntElement create(      final AntElement parent,      final XmlTag tag){
        return new AntCallImpl(parent,tag,parent.getAntProject().getBaseTypeDefinition(CallTarget.class.getName()));
      }
    }
);
    ourAntTypeToKnownAntElementCreatorMap.put(Taskdef.class.getName(),new AntElementCreator(){
      public AntElement create(      final AntElement parent,      final XmlTag tag){
        return new AntTypeDefImpl(parent,tag,parent.getAntProject().getBaseTypeDefinition(Taskdef.class.getName()));
      }
    }
);
    ourAntTypeToKnownAntElementCreatorMap.put(Typedef.class.getName(),new AntElementCreator(){
      public AntElement create(      final AntElement parent,      final XmlTag tag){
        return new AntTypeDefImpl(parent,tag,parent.getAntProject().getBaseTypeDefinition(Typedef.class.getName()));
      }
    }
);
  }
}
