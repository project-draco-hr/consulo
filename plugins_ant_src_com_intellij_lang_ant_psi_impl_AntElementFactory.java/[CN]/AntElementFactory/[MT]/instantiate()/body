{
  if (ourAntTypeToKnownAntElementCreatorMap == null) {
    ourAntTypeToKnownAntElementCreatorMap=new HashMap<String,AntElementCreator>();
    final AntElementCreator targetCreator=new AntElementCreator(){
      public AntStructuredElement create(      final AntElement parent,      final XmlTag tag){
        return new AntTargetImpl(parent,tag);
      }
    }
;
    ourAntTypeToKnownAntElementCreatorMap.put(Target.class.getName(),targetCreator);
    ourAntTypeToKnownAntElementCreatorMap.put(Ant.TargetElement.class.getName(),targetCreator);
    ourAntTypeToKnownAntElementCreatorMap.put(Property.class.getName(),new AntElementCreator(){
      public AntStructuredElement create(      final AntElement parent,      final XmlTag tag){
        return new AntPropertyImpl(parent,tag,parent.getAntFile().getBaseTypeDefinition(Property.class.getName()));
      }
    }
);
    ourAntTypeToKnownAntElementCreatorMap.put(Checksum.class.getName(),new AntElementCreator(){
      public AntStructuredElement create(      final AntElement parent,      final XmlTag tag){
        if (tag.getAttributeValue("totalproperty") != null) {
          return new AntPropertyImpl(parent,tag,parent.getAntFile().getBaseTypeDefinition(Checksum.class.getName()),"totalproperty");
        }
        return new AntPropertyImpl(parent,tag,parent.getAntFile().getBaseTypeDefinition(Checksum.class.getName()),"property");
      }
    }
);
    for (    final String clazz : PROPERTY_CLASSES) {
      addPropertyCreator(clazz);
    }
    for (    final String clazz : ALL_TASKS_CONTAINER_CLASSES) {
      addAllTasksContainerCreator(clazz);
    }
    ourAntTypeToKnownAntElementCreatorMap.put(CallTarget.class.getName(),new AntElementCreator(){
      public AntStructuredElement create(      final AntElement parent,      final XmlTag tag){
        return new AntCallImpl(parent,tag,parent.getAntFile().getBaseTypeDefinition(CallTarget.class.getName()));
      }
    }
);
    ourAntTypeToKnownAntElementCreatorMap.put(Taskdef.class.getName(),new AntElementCreator(){
      public AntStructuredElement create(      final AntElement parent,      final XmlTag tag){
        return new AntTypeDefImpl(parent,tag,parent.getAntFile().getBaseTypeDefinition(Taskdef.class.getName()));
      }
    }
);
    ourAntTypeToKnownAntElementCreatorMap.put(Typedef.class.getName(),new AntElementCreator(){
      public AntStructuredElement create(      final AntElement parent,      final XmlTag tag){
        return new AntTypeDefImpl(parent,tag,parent.getAntFile().getBaseTypeDefinition(Typedef.class.getName()));
      }
    }
);
    ourAntTypeToKnownAntElementCreatorMap.put(MacroDef.class.getName(),new AntElementCreator(){
      public AntStructuredElement create(      final AntElement parent,      final XmlTag tag){
        return new AntMacroDefImpl((AntStructuredElement)parent,tag,parent.getAntFile().getBaseTypeDefinition(MacroDef.class.getName()));
      }
    }
);
    ourAntTypeToKnownAntElementCreatorMap.put(ImportTask.class.getName(),new AntElementCreator(){
      public AntStructuredElement create(      final AntElement parent,      final XmlTag tag){
        return new AntImportImpl(parent,tag,parent.getAntFile().getBaseTypeDefinition(ImportTask.class.getName()));
      }
    }
);
  }
}
