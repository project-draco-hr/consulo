{
  PsiElementFactory factory=JavaPsiFacade.getInstance(booleanExpression.getProject()).getElementFactory();
  if (booleanExpression instanceof PsiPolyadicExpression) {
    PsiPolyadicExpression expression=(PsiPolyadicExpression)booleanExpression;
    IElementType operationSign=expression.getOperationTokenType();
    for (int i=0; i < ourTokenMap.length; i++) {
      IElementType tokenType=ourTokenMap[i];
      if (operationSign == tokenType) {
        expression=(PsiBinaryExpression)expression.copy();
        PsiExpression[] operands=expression.getOperands();
        for (int o=0; o < operands.length; o++) {
          PsiExpression op=operands[o];
          if (o != 0) {
            expression.getTokenBeforeOperand(op).replace(createOperationToken(factory,ourTokenMap[i + (i % 2 == 0 ? 1 : -1)]));
          }
          if (tokenType == JavaTokenType.OROR || tokenType == JavaTokenType.ANDAND) {
            op.replace(invertCondition(op));
          }
        }
        return expression;
      }
    }
  }
 else   if (booleanExpression instanceof PsiPrefixExpression) {
    PsiPrefixExpression expression=(PsiPrefixExpression)booleanExpression;
    PsiJavaToken operationSign=expression.getOperationSign();
    if (operationSign.getTokenType() == JavaTokenType.EXCL) {
      PsiExpression operand=expression.getOperand();
      if (operand instanceof PsiParenthesizedExpression) {
        operand=((PsiParenthesizedExpression)operand).getExpression();
      }
      return operand;
    }
  }
 else   if (booleanExpression instanceof PsiLiteralExpression) {
    return booleanExpression.getText().equals("true") ? factory.createExpressionFromText("false",null) : factory.createExpressionFromText("true",null);
  }
  if (booleanExpression instanceof PsiParenthesizedExpression) {
    PsiExpression operand=((PsiParenthesizedExpression)booleanExpression).getExpression();
    operand.replace(invertCondition(operand));
    return booleanExpression;
  }
  PsiPrefixExpression result=(PsiPrefixExpression)factory.createExpressionFromText("!(a)",null);
  if (!(booleanExpression instanceof PsiBinaryExpression)) {
    result.getOperand().replace(booleanExpression);
  }
 else {
    PsiParenthesizedExpression e=(PsiParenthesizedExpression)result.getOperand();
    e.getExpression().replace(booleanExpression);
  }
  return result;
}
