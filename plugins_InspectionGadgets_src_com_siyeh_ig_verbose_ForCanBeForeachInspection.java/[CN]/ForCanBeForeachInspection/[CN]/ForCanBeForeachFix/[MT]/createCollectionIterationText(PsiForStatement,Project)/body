{
  final int length=forStatement.getText().length();
  final StringBuffer out=new StringBuffer(length);
  final PsiStatement body=forStatement.getBody();
  final PsiStatement firstStatement=getFirstStatement(body);
  final String contentVariableName;
  final String finalString;
  final PsiStatement statementToSkip;
  final PsiStatement initialization=forStatement.getInitialization();
  final PsiDeclarationStatement declaration=(PsiDeclarationStatement)initialization;
  final PsiLocalVariable iterator=(PsiLocalVariable)declaration.getDeclaredElements()[0];
  final PsiMethodCallExpression initializer=(PsiMethodCallExpression)iterator.getInitializer();
  final PsiExpression collection=initializer.getMethodExpression().getQualifierExpression();
  final String typeString=iterator.getTypeElement().getText();
  final String contentTypeString;
  if (typeString.indexOf((int)'<') >= 0) {
    final int contentTypeStart=typeString.indexOf((int)'<') + 1;
    final int contentTypeEnd=typeString.lastIndexOf((int)'>');
    contentTypeString=typeString.substring(contentTypeStart,contentTypeEnd);
  }
 else {
    contentTypeString="Object";
  }
  final PsiManager psiManager=PsiManager.getInstance(project);
  final PsiElementFactory elementFactory=psiManager.getElementFactory();
  PsiType contentType;
  try {
    contentType=elementFactory.createTypeFromText(contentTypeString,forStatement);
  }
 catch (  IncorrectOperationException e) {
    contentType=null;
  }
  final String iteratorName=iterator.getName();
  final boolean isDeclaration=isIteratorNextDeclaration(firstStatement,iteratorName);
  if (isDeclaration) {
    final PsiDeclarationStatement decl=(PsiDeclarationStatement)firstStatement;
    final PsiElement[] declaredElements=decl.getDeclaredElements();
    final PsiLocalVariable localVar=(PsiLocalVariable)declaredElements[0];
    contentVariableName=localVar.getName();
    statementToSkip=decl;
    if (localVar.hasModifierProperty(PsiModifier.FINAL)) {
      finalString="final ";
    }
 else {
      finalString="";
    }
  }
 else {
    if (collection instanceof PsiReferenceExpression) {
      final String collectionName=((PsiReferenceExpression)collection).getReferenceName();
      contentVariableName=createNewVarName(project,forStatement,contentType,collectionName);
    }
 else {
      contentVariableName=createNewVarName(project,forStatement,contentType,null);
    }
    finalString="";
    statementToSkip=null;
  }
  out.append("for(" + finalString + contentTypeString+ ' '+ contentVariableName+ ": "+ collection.getText()+ ')');
  replaceIteratorNext(body,contentVariableName,iteratorName,statementToSkip,out);
  return out.toString();
}
