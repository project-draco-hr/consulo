{
  final PsiClass psiClass=JavaDirectoryService.getInstance().getPackage(getPackageDirectory()).getClasses()[0];
  final VirtualFile virtualFile=psiClass.getContainingFile().getVirtualFile();
  final StructureViewBuilder structureViewBuilder=StructureViewBuilder.PROVIDER.getStructureViewBuilder(virtualFile.getFileType(),virtualFile,myProject);
  final StructureViewModel structureViewModel=((TreeBasedStructureViewBuilder)structureViewBuilder).createStructureViewModel();
  Editor editor=null;
  FileStructureDialog dialog=null;
  try {
    editor=EditorFactory.getInstance().createEditor(FileDocumentManager.getInstance().getDocument(virtualFile));
    dialog=ViewStructureAction.createStructureViewBasedDialog(structureViewModel,editor,myProject,psiClass,new Disposable(){
      public void dispose(){
        structureViewModel.dispose();
      }
    }
);
    final CommanderPanel panel=dialog.getPanel();
    assertListsEqual(panel.getModel(),"Inner1\n" + "Inner2\n" + "__method():void\n"+ "_myField1:int\n"+ "_myField2:String\n");
  }
  finally {
    if (dialog != null)     dialog.close(0);
    if (editor != null)     EditorFactory.getInstance().releaseEditor(editor);
  }
}
