{
  String selectedRemote=getRemote();
  myBranchChooser.removeAllElements();
  if (selectedRemote == null) {
    return;
  }
  GitRepository repository=getRepository();
  if (repository == null) {
    return;
  }
  GitBranchTrackInfo trackInfo=GitUtil.getTrackInfoForCurrentBranch(repository);
  String currentRemoteBranch=trackInfo == null ? null : trackInfo.getRemoteBranchInLocalFormat();
  for (  GitBranch remoteBranch : repository.getBranches().getRemoteBranches()) {
    if (belongsToRemote(remoteBranch,selectedRemote)) {
      myBranchChooser.addElement(remoteBranch.getName(),remoteBranch.getName().equals(currentRemoteBranch));
    }
  }
  validateDialog();
}
