{
  Collection<GitRemote> remotes=repository.getRemotes();
  if (remotes.isEmpty()) {
    return null;
  }
  GitBranchTrackInfo trackInfo=GitUtil.getTrackInfoForCurrentBranch(repository);
  if (trackInfo != null) {
    return trackInfo.getRemote();
  }
 else {
    GitRemote origin=getOriginRemote(remotes);
    if (origin != null) {
      return origin;
    }
 else {
      return remotes.iterator().next();
    }
  }
}
