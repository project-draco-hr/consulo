{
  ASTNode prev=getPreviousAdjacentNodeOfTargetType(node,config,blankLinesToBeKeptOnReformat);
  if (prev == null) {
    return true;
  }
  ASTNode curr=deriveNodeOfTargetType(node,TokenSet.create(prev.getElementType()));
  if (curr == null) {
    return true;
  }
  ASTNode prevSubNode=getSubNodeThatStartsNewLine(prev.getFirstChildNode(),config);
  ASTNode currSubNode=getSubNodeThatStartsNewLine(curr.getFirstChildNode(),config);
  while (true) {
    boolean prevNodeIsDefined=prevSubNode != null;
    boolean currNodeIsDefined=currSubNode != null;
    if (prevNodeIsDefined ^ currNodeIsDefined) {
      return true;
    }
    if (prevSubNode == null) {
      break;
    }
    if (prevSubNode.getElementType() != currSubNode.getElementType()) {
      return true;
    }
    prevSubNode=getSubNodeThatStartsNewLine(prevSubNode.getTreeNext(),config);
    currSubNode=getSubNodeThatStartsNewLine(currSubNode.getTreeNext(),config);
  }
  ASTNode currentFieldToUse=curr;
  ASTNode nextNode=curr.getTreeNext();
  for (; nextNode != null && nextNode.getTreeParent() == curr.getTreeParent(); nextNode=nextNode.getTreeNext()) {
    IElementType type=nextNode.getElementType();
    if (config.getWhiteSpaceTokenTypes().contains(type)) {
      ASTNode previous=nextNode.getTreePrev();
      if ((previous != null && previous.getElementType() == curr.getElementType()) || StringUtil.countNewLines(nextNode.getChars()) > 1) {
        break;
      }
      continue;
    }
    if (config.getCommentTokenTypes().contains(type)) {
      continue;
    }
    if (type == curr.getElementType()) {
      currentFieldToUse=nextNode;
    }
  }
  List<IElementType> prevTypes=findSubNodeTypes(prev,config.getDistinguishableTypes());
  List<IElementType> currTypes=findSubNodeTypes(currentFieldToUse,config.getDistinguishableTypes());
  return !prevTypes.equals(currTypes);
}
