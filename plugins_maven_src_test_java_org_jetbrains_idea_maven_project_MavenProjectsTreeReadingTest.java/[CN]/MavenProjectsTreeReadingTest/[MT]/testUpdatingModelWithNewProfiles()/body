{
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<profiles>"+ "  <profile>"+ "    <id>one</id>"+ "    <modules>"+ "      <module>m1</module>"+ "    </modules>"+ "  </profile>"+ "  <profile>"+ "    <id>two</id>"+ "    <modules>"+ "      <module>m2</module>"+ "    </modules>"+ "  </profile>"+ "</profiles>");
  VirtualFile m1=createModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>");
  VirtualFile m2=createModulePom("m2","<groupId>test</groupId>" + "<artifactId>m2</artifactId>" + "<version>1</version>");
  updateAll(Collections.singletonList("one"),myProjectPom);
  List<MavenProject> roots=myTree.getRootProjects();
  assertEquals(1,roots.size());
  assertEquals(myProjectPom,roots.get(0).getFile());
  assertEquals(1,myTree.getModules(roots.get(0)).size());
  assertEquals(m1,myTree.getModules(roots.get(0)).get(0).getFile());
  updateAll(Collections.singletonList("two"),myProjectPom);
  roots=myTree.getRootProjects();
  assertEquals(1,roots.size());
  assertEquals(myProjectPom,roots.get(0).getFile());
  assertEquals(1,myTree.getModules(roots.get(0)).size());
  assertEquals(m2,myTree.getModules(roots.get(0)).get(0).getFile());
}
