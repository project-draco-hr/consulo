{
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<profiles>"+ "  <profile>"+ "    <id>one</id>"+ "  </profile>"+ "</profiles>"+ "<modules>"+ "  <module>m</module>"+ "</modules>");
  VirtualFile m=createModulePom("m","<groupId>test</groupId>" + "<artifactId>m</artifactId>" + "<version>1</version>"+ "<profiles>"+ "  <profile>"+ "    <id>two</id>"+ "  </profile>"+ "</profiles>");
  updateAll(Arrays.asList("one","two"),myProjectPom);
  assertUnorderedElementsAreEqual(myTree.getExplicitProfiles(),"one","two");
  final VirtualFile finalM=m;
  new WriteCommandAction.Simple(myProject){
    @Override protected void run() throws Throwable {
      finalM.delete(this);
      deleteProject(finalM);
    }
  }
.execute().throwException();
  assertUnorderedElementsAreEqual(myTree.getExplicitProfiles(),"one");
  m=createModulePom("m","<groupId>test</groupId>" + "<artifactId>m</artifactId>" + "<version>1</version>"+ "<profiles>"+ "  <profile>"+ "    <id>two</id>"+ "  </profile>"+ "</profiles>");
  update(m);
  assertUnorderedElementsAreEqual(myTree.getExplicitProfiles(),"one","two");
}
