{
  JPanel actionPanel=new NonOpaquePanel(new HorizontalLayout(gap,SwingConstants.CENTER));
  centerPanel.add(BorderLayout.SOUTH,actionPanel);
  List<AnAction> actions=notification.getActions();
  if (actions.size() > 2) {
    DropDownAction action=new DropDownAction(notification.getDropDownText(),new LinkListener<Void>(){
      @Override public void linkSelected(      LinkLabel link,      Void ignored){
        Container parent=link.getParent();
        int size=parent.getComponentCount();
        DefaultActionGroup group=new DefaultActionGroup();
        for (int i=1; i < size; i++) {
          Component component=parent.getComponent(i);
          if (!component.isVisible()) {
            group.add(((LinkLabel<AnAction>)component).getLinkData());
          }
        }
        showPopup(link,group);
      }
    }
);
    action.setVisible(false);
    actionPanel.add(action);
  }
  for (  AnAction action : actions) {
    Presentation presentation=action.getTemplatePresentation();
    actionPanel.add(HorizontalLayout.LEFT,new LinkLabel<AnAction>(presentation.getText(),presentation.getIcon(),new LinkListener<AnAction>(){
      @Override public void linkSelected(      LinkLabel aSource,      AnAction action){
        Notification.fire(notification,action);
      }
    }
,action));
  }
  Insets hover=JBUI.insets(8,5,8,7);
  int count=actionPanel.getComponentCount();
  for (int i=0; i < count; i++) {
    hoverAdapter.addComponent(actionPanel.getComponent(i),hover);
  }
  hoverAdapter.addSource(actionPanel);
}
