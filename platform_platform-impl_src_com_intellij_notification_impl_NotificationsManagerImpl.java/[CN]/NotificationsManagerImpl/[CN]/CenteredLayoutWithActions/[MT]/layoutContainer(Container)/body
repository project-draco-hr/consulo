{
  int top=myLayoutData.configuration.topSpaceHeight;
  int width=parent.getWidth();
  Dimension centeredSize=myCenteredComponent == null ? new Dimension() : myCenteredComponent.getPreferredSize();
  boolean isActions=myActionPanel != null || (myExpandAction != null && !myLayoutData.showMinSize);
  if (myTitleComponent != null) {
    int titleHeight=myTitleComponent.getPreferredSize().height;
    myTitleComponent.setBounds(0,top,width - myLayoutData.configuration.closeOffset,titleHeight);
    top+=titleHeight;
    if (myCenteredComponent != null) {
      top+=myLayoutData.configuration.titleContentSpaceHeight;
    }
 else     if (isActions) {
      top+=myLayoutData.configuration.titleActionsSpaceHeight;
    }
  }
  if (myCenteredComponent != null) {
    int centeredWidth=width;
    if (!myLayoutData.showFullContent && !myLayoutData.showMinSize && myLayoutData.fullHeight != myLayoutData.maxScrollHeight) {
      centeredWidth--;
    }
    myCenteredComponent.setBounds(0,top,centeredWidth,centeredSize.height);
    myCenteredComponent.revalidate();
  }
  if (myExpandAction != null) {
    Dimension size=myExpandAction.getPreferredSize();
    int x=width - size.width - myLayoutData.configuration.rightActionsOffset.width;
    if (myLayoutData.showMinSize) {
      Point location=getCollapsedTextEndLocation(myText,myLayoutData);
      if (location != null) {
        int y=SwingUtilities.convertPoint(myText,location.x,location.y,parent).y;
        myExpandAction.setBounds(x,y,size.width,size.height);
      }
    }
 else {
      int y=parent.getHeight() - size.height - myLayoutData.configuration.bottomSpaceHeight;
      myExpandAction.setBounds(x,y,size.width,size.height);
    }
  }
  if (myActionPanel != null) {
    int expandWidth=myExpandAction == null || myLayoutData.showMinSize ? 0 : myExpandAction.getPreferredSize().width;
    width-=myLayoutData.configuration.actionGap + expandWidth;
    int components=myActionPanel.getComponentCount();
    if (myActionPanel.getComponent(components - 1) instanceof DropDownAction) {
      components--;
    }
    if (components > 2) {
      myActionPanel.getComponent(0).setVisible(false);
      for (int i=1; i < components; i++) {
        Component component=myActionPanel.getComponent(i);
        if (component.isVisible()) {
          break;
        }
        component.setVisible(true);
      }
      myActionPanel.doLayout();
      if (myActionPanel.getPreferredSize().width > width) {
        myActionPanel.getComponent(0).setVisible(true);
        myActionPanel.getComponent(1).setVisible(false);
        myActionPanel.getComponent(2).setVisible(false);
        myActionPanel.doLayout();
        for (int i=3; i < components - 1; i++) {
          if (myActionPanel.getPreferredSize().width > width) {
            myActionPanel.getComponent(i).setVisible(false);
            myActionPanel.doLayout();
          }
 else {
            break;
          }
        }
      }
    }
    Dimension size=myActionPanel.getPreferredSize();
    int y=parent.getHeight() - size.height - myLayoutData.configuration.bottomSpaceHeight;
    myActionPanel.setBounds(0,y,width,size.height);
  }
}
