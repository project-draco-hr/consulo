{
  int lineNumber=editor.getCaretModel().getLogicalPosition().line;
  int offset=editor.getCaretModel().getOffset();
  if (editor.isColumnMode() && editor.getCaretModel().supportsMultipleCarets() && offset == editor.getDocument().getLineEndOffset(lineNumber)) {
    return;
  }
  int afterLineEnd=EditorModificationUtil.calcAfterLineEnd(editor);
  Document document=editor.getDocument();
  if (!EditorActionUtil.canEditAtOffset(editor,offset + 1))   return;
  if (afterLineEnd < 0 || (offset < document.getTextLength() - 1 && editor.getSoftWrapModel().getSoftWrap(offset) != null)) {
    FoldRegion region=editor.getFoldingModel().getCollapsedRegionAtOffset(offset);
    if (region != null && region.shouldNeverExpand()) {
      document.deleteString(region.getStartOffset(),region.getEndOffset());
      editor.getCaretModel().moveToOffset(region.getStartOffset());
    }
 else {
      document.deleteString(offset,offset + 1);
      editor.getCaretModel().moveToOffset(offset);
    }
    return;
  }
  if (lineNumber + 1 >= document.getLineCount())   return;
  CommandProcessor commandProcessor=CommandProcessor.getInstance();
  commandProcessor.setCurrentCommandGroupId(null);
  int nextLineStart=document.getLineStartOffset(lineNumber + 1);
  int nextLineEnd=document.getLineEndOffset(lineNumber + 1);
  if (nextLineEnd - nextLineStart > 0) {
    StringBuilder buf=new StringBuilder();
    StringUtil.repeatSymbol(buf,' ',afterLineEnd);
    document.insertString(getCaretLineStart(editor) + getCaretLineLength(editor),buf.toString());
    nextLineStart=document.getLineStartOffset(lineNumber + 1);
  }
  int thisLineEnd=document.getLineEndOffset(lineNumber);
  document.deleteString(thisLineEnd,nextLineStart);
}
