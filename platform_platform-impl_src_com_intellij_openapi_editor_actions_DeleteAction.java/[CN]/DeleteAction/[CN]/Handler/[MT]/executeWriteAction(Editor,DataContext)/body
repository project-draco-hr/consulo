{
  CommandProcessor.getInstance().setCurrentCommandGroupId(EditorActionUtil.DELETE_COMMAND_GROUP);
  SelectionModel selectionModel=editor.getSelectionModel();
  final LogicalPosition logicalBlockSelectionStart=selectionModel.getBlockStart();
  final LogicalPosition logicalBlockSelectionEnd=selectionModel.getBlockEnd();
  if (selectionModel.hasBlockSelection() && logicalBlockSelectionStart != null && logicalBlockSelectionEnd != null) {
    final VisualPosition visualStart=editor.logicalToVisualPosition(logicalBlockSelectionStart);
    final VisualPosition visualEnd=editor.logicalToVisualPosition(logicalBlockSelectionEnd);
    if (visualStart.column == visualEnd.column) {
      int column=visualEnd.column;
      int startVisLine=Math.min(visualStart.line,visualEnd.line);
      int endVisLine=Math.max(visualStart.line,visualEnd.line);
      for (int i=startVisLine; i <= endVisLine; i++) {
        if (EditorUtil.getLastVisualLineColumnNumber(editor,i) >= visualStart.column) {
          editor.getCaretModel().moveToVisualPosition(new VisualPosition(i,column));
          deleteCharAtCaret(editor);
        }
      }
      selectionModel.setBlockSelection(new LogicalPosition(logicalBlockSelectionStart.line,column),new LogicalPosition(logicalBlockSelectionEnd.line,column));
      return;
    }
    EditorModificationUtil.deleteBlockSelection(editor);
  }
 else   if (!selectionModel.hasSelection()) {
    deleteCharAtCaret(editor);
  }
 else {
    EditorModificationUtil.deleteSelectedText(editor);
  }
}
