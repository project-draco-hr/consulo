{
  myProjectsManager.fireActivatedInTests();
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<modules>"+ "  <module>m</module>"+ "</modules>");
  VirtualFile m=createModulePom("m","<groupId>test</groupId>" + "<artifactId>m</artifactId>" + "<version>1</version>");
  readFiles(myProjectPom,m);
  myProjectsTree.setIgnoredFilesPaths(Arrays.asList(myProjectPom.getPath()));
  myNavigator.setShowIgnored(true);
  assertEquals(1,getRootNodes().size());
  assertEquals(1,myStructure.getRootElement().getChildren().length);
  MavenProjectsStructure.ProjectNode projectNode=(MavenProjectsStructure.ProjectNode)myStructure.getRootElement().getChildren()[0];
  assertEquals(myProjectPom,projectNode.getFile());
  assertEquals(1,projectNode.getModulesNode().getProjectNodes().size());
  myNavigator.setShowIgnored(false);
  assertEquals(2,getRootNodes().size());
  assertEquals(1,myStructure.getRootElement().getChildren().length);
  projectNode=(MavenProjectsStructure.ProjectNode)myStructure.getRootElement().getChildren()[0];
  assertEquals(m,projectNode.getFile());
  assertEquals(0,projectNode.getModulesNode().getProjectNodes().size());
}
