{
  GrClosureSignatureUtil.ArgInfo<PsiElement>[] argInfos=signature == null ? null : GrClosureSignatureUtil.mapParametersToArguments(signature,namedArgs,exprs,context,clArgs,false);
  if (argInfos == null && signature != null) {
    argInfos=GrClosureSignatureUtil.mapParametersToArguments(signature,namedArgs,exprs,context,clArgs,true);
  }
  final PsiSubstitutor substitutor=signature == null ? PsiSubstitutor.EMPTY : signature.getSubstitutor();
  if (argInfos == null) {
    generateSimple(exprs,namedArgs,clArgs,context,substitutor);
    return;
  }
  final GrClosureParameter[] params=signature.getParameters();
  final Project project=context.getProject();
  myBuilder.append('(');
  boolean hasArgs=false;
  for (int i=0; i < argInfos.length; i++) {
    GrClosureSignatureUtil.ArgInfo<PsiElement> arg=argInfos[i];
    final GrClosureParameter param=params[i];
    if (arg.isMultiArg ? generateMultiArg(arg,param,substitutor,project,context) : generateSingeArg(arg,param)) {
      hasArgs=true;
      myBuilder.append(", ");
    }
  }
  if (hasArgs) {
    myBuilder.delete(myBuilder.length() - 2,myBuilder.length());
  }
  myBuilder.append(')');
}
