{
  final PsiMethod[] constructors=clazz.getConstructors();
  if (constructors.length == 0) {
    processImplicitConstructorCall(clazz,consumer,searchedConstructor);
  }
  for (  PsiMethod constructor : constructors) {
    final GrOpenBlock block=((GrMethod)constructor).getBlock();
    if (block != null) {
      final GrStatement[] statements=block.getStatements();
      if (statements.length > 0 && statements[0] instanceof GrConstructorInvocation) {
        final GrConstructorInvocation invocation=(GrConstructorInvocation)statements[0];
        if (invocation.isThisCall() == processThisRefs && invocation.getManager().areElementsEquivalent(invocation.resolveMethod(),searchedConstructor) && !consumer.process(invocation.getThisOrSuperKeyword())) {
          return false;
        }
      }
 else {
        processImplicitConstructorCall(constructor,consumer,searchedConstructor);
      }
    }
  }
  return true;
}
