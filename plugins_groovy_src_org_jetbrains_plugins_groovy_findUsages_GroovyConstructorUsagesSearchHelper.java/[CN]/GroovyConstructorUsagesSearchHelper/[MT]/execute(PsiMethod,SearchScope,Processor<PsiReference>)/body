{
  if (!constructor.isConstructor())   return true;
  final PsiClass clazz=constructor.getContainingClass();
  if (clazz == null)   return true;
  ReferencesSearch.search(clazz,searchScope,true).forEach(new Processor<PsiReference>(){
    public boolean process(    PsiReference ref){
      final PsiElement element=ref.getElement();
      if (element instanceof GrCodeReferenceElement && element.getParent() instanceof GrNewExpression) {
        final GrNewExpression newExpression=(GrNewExpression)element.getParent();
        final PsiMethod resolvedConstructor=newExpression.resolveConstructor();
        final PsiManager manager=constructor.getManager();
        if (manager.areElementsEquivalent(resolvedConstructor,constructor) && !consumer.process(ref))         return false;
      }
      return true;
    }
  }
);
  if (clazz instanceof GrTypeDefinition) {
    if (!ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
      public Boolean compute(){
        return processClassConstructors(clazz,constructor,consumer,true);
      }
    }
).booleanValue()) {
      return false;
    }
  }
  if (!DirectClassInheritorsSearch.search(clazz,searchScope).forEach(new Processor<PsiClass>(){
    public boolean process(    PsiClass inheritor){
      if (inheritor instanceof GrTypeDefinition) {
        if (!processClassConstructors(inheritor,constructor,consumer,false))         return false;
      }
      return true;
    }
  }
)) {
    return false;
  }
  return true;
}
