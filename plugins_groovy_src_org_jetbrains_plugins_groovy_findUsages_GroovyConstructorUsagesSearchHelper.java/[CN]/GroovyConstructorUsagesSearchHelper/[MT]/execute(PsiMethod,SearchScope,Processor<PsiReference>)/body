{
  if (!constructor.isConstructor())   return true;
  final PsiClass clazz=ApplicationManager.getApplication().runReadAction(new NullableComputable<PsiClass>(){
    public PsiClass compute(){
      return constructor.getContainingClass();
    }
  }
);
  if (clazz == null)   return true;
  if (!ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
    public Boolean compute(){
      if (!clazz.isEnum())       return true;
      if (!(clazz instanceof GroovyPsiElement))       return true;
      final PsiField[] fields=clazz.getFields();
      for (      PsiField field : fields) {
        if (field instanceof GrEnumConstant) {
          final PsiReference ref=field.getReference();
          if (ref.isReferenceTo(constructor)) {
            if (!consumer.process(ref))             return false;
          }
        }
      }
      return true;
    }
  }
)) {
    return false;
  }
  ReferencesSearch.search(clazz,searchScope,true).forEach(new Processor<PsiReference>(){
    public boolean process(    final PsiReference ref){
      return ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
        public Boolean compute(){
          final PsiElement element=ref.getElement();
          if (element instanceof GrCodeReferenceElement && element.getParent() instanceof GrNewExpression) {
            final GrNewExpression newExpression=(GrNewExpression)element.getParent();
            final PsiMethod resolvedConstructor=newExpression.resolveConstructor();
            final PsiManager manager=constructor.getManager();
            if (manager.areElementsEquivalent(resolvedConstructor,constructor) && !consumer.process(ref))             return false;
          }
          return true;
        }
      }
);
    }
  }
);
  if (clazz instanceof GrTypeDefinition) {
    if (!processConstructors(constructor,consumer,clazz,true)) {
      return false;
    }
  }
  if (!DirectClassInheritorsSearch.search(clazz,searchScope).forEach(new Processor<PsiClass>(){
    public boolean process(    PsiClass inheritor){
      if (inheritor instanceof GrTypeDefinition) {
        if (!processConstructors(constructor,consumer,inheritor,false))         return false;
      }
      return true;
    }
  }
)) {
    return false;
  }
  return true;
}
