{
  if (usage instanceof AnnotationUsage) {
    final AnnotationUsage annotationUsage=(AnnotationUsage)usage;
    if (!type.equals(annotationUsage.type)) {
      return false;
    }
    boolean argumentsSatisfy=false;
    if (usedArguments != null) {
      final Collection<StringCache.S> arguments=new HashSet<StringCache.S>(usedArguments);
      arguments.removeAll(annotationUsage.usedArguments);
      argumentsSatisfy=!arguments.isEmpty();
    }
    boolean targetsSatisfy=false;
    if (usedTargets != null) {
      final Collection<ElementType> targets=new HashSet<ElementType>(usedTargets);
      targets.retainAll(annotationUsage.usedTargets);
      targetsSatisfy=!targets.isEmpty();
    }
    return argumentsSatisfy || targetsSatisfy;
  }
  return false;
}
