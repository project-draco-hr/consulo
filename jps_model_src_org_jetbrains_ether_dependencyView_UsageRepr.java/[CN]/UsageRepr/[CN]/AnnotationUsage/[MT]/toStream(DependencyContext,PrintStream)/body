{
  stream.println("    AnnotationUsage:");
  stream.println("      Type     : " + myType.getDescr(context));
  final List<String> arguments=new LinkedList<String>();
  if (myUsedArguments != null) {
    myUsedArguments.forEach(new TIntProcedure(){
      @Override public boolean execute(      final int value){
        arguments.add(context.getValue(value));
        return true;
      }
    }
);
  }
  Collections.sort(arguments);
  final List<String> targets=new LinkedList<String>();
  if (myUsedTargets != null) {
    for (    final ElemType e : myUsedTargets) {
      targets.add(e.toString());
    }
  }
  Collections.sort(targets);
  stream.println("      Arguments:");
  for (  final String s : arguments) {
    stream.println("        " + s);
  }
  stream.println("      Targets  :");
  for (  final String s : targets) {
    stream.println("        " + s);
  }
}
