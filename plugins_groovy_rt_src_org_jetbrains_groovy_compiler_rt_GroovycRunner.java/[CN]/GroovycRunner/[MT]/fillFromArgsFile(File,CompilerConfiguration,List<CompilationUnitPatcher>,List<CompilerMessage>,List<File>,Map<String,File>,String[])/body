{
  String moduleClasspath=null;
  BufferedReader reader=null;
  FileInputStream stream;
  try {
    stream=new FileInputStream(argsFile);
    reader=new BufferedReader(new InputStreamReader(stream));
    String line;
    while ((line=reader.readLine()) != null) {
      if (!GroovyRtConstants.SRC_FILE.equals(line)) {
        break;
      }
      final File file=new File(reader.readLine());
      srcFiles.add(file);
    }
    while (line != null) {
      if (line.equals("class2src")) {
        while (!GroovyRtConstants.END.equals(line=reader.readLine())) {
          class2File.put(line,new File(reader.readLine()));
        }
      }
 else       if (line.startsWith(GroovyRtConstants.PATCHERS)) {
        String s;
        while (!GroovyRtConstants.END.equals(s=reader.readLine())) {
          try {
            final CompilationUnitPatcher patcher=(CompilationUnitPatcher)Class.forName(s).newInstance();
            patchers.add(patcher);
          }
 catch (          InstantiationException e) {
            addExceptionInfo(compilerMessages,e,"Couldn't instantiate " + s);
          }
catch (          IllegalAccessException e) {
            addExceptionInfo(compilerMessages,e,"Couldn't instantiate " + s);
          }
catch (          ClassNotFoundException e) {
            addExceptionInfo(compilerMessages,e,"Couldn't instantiate " + s);
          }
        }
      }
 else       if (line.startsWith(GroovyRtConstants.ENCODING)) {
        compilerConfiguration.setSourceEncoding(reader.readLine());
      }
 else       if (line.startsWith(GroovyRtConstants.OUTPUTPATH)) {
        compilerConfiguration.setTargetDirectory(reader.readLine());
      }
 else       if (line.startsWith(GroovyRtConstants.FINAL_OUTPUTPATH)) {
        finalOutput[0]=reader.readLine();
      }
      line=reader.readLine();
    }
  }
 catch (  FileNotFoundException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
 finally {
    try {
      reader.close();
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
 finally {
      argsFile.delete();
    }
  }
  return moduleClasspath;
}
