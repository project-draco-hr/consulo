{
  compilerConfiguration.setClasspathList(Collections.EMPTY_LIST);
  final GroovyClassLoader classLoader=buildClassLoaderFor(compilerConfiguration);
  if (forStubs) {
    return new JavaStubCompilationUnit(compilerConfiguration,classLoader,compilerConfiguration.getTargetDirectory()){
      public void gotoPhase(      int phase) throws CompilationFailedException {
        super.gotoPhase(phase);
        if (phase <= Phases.ALL) {
          System.out.println(PRESENTABLE_MESSAGE + "Groovy stub generator: " + getPhaseDescription());
        }
      }
    }
;
  }
  return new CompilationUnit(compilerConfiguration,null,classLoader){
    public void gotoPhase(    int phase) throws CompilationFailedException {
      super.gotoPhase(phase);
      if (phase <= Phases.ALL) {
        System.out.println(PRESENTABLE_MESSAGE + "Groovy compiler: " + getPhaseDescription());
      }
    }
  }
;
}
