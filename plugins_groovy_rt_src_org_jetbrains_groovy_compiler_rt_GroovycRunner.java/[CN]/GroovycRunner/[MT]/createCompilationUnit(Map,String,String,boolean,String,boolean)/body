{
  CompilerConfiguration compilerConfiguration=new CompilerConfiguration();
  compilerConfiguration.setOutput(new PrintWriter(System.err));
  compilerConfiguration.setWarningLevel(WarningMessage.PARANOIA);
  if (encoding != null) {
    compilerConfiguration.setSourceEncoding(encoding);
  }
  compilerConfiguration.setClasspath(classpath);
  compilerConfiguration.setTargetDirectory(outputPath);
  final GroovyClassLoader classLoader=buildClassLoaderFor(compilerConfiguration);
  final CompilationUnit compilationUnit;
  if (forStubs) {
    compilationUnit=new JavaStubCompilationUnit(compilerConfiguration,classLoader,new File(outputPath)){
      public void gotoPhase(      int phase) throws CompilationFailedException {
        super.gotoPhase(phase);
        if (phase <= Phases.ALL) {
          System.out.println(PRESENTABLE_MESSAGE + "Groovy stub generator: " + getPhaseDescription());
        }
      }
    }
;
  }
 else {
    compilationUnit=new CompilationUnit(compilerConfiguration,null,classLoader){
      public void gotoPhase(      int phase) throws CompilationFailedException {
        super.gotoPhase(phase);
        if (phase <= Phases.ALL) {
          System.out.println(PRESENTABLE_MESSAGE + "Groovy compiler: " + getPhaseDescription());
        }
      }
    }
;
  }
  if (isGrailsModule) {
    PhaseOperationUtil.addGrailsAwareInjectionOperation(class2File,compilationUnit,compilerConfiguration);
  }
  return compilationUnit;
}
