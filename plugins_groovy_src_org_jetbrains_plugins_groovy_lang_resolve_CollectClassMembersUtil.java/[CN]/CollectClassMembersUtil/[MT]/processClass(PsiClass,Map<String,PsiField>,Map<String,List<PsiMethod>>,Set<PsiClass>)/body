{
  if (visitedClasses.contains(aClass))   return;
  visitedClasses.add(aClass);
  for (  PsiField field : aClass.getFields()) {
    String name=field.getName();
    if (!allFields.containsKey(name)) {
      allFields.put(name,field);
    }
  }
  for (  PsiMethod method : aClass.getMethods()) {
    String name=method.getName();
    List<PsiMethod> methods=allMethods.get(name);
    if (methods == null) {
      methods=new ArrayList<PsiMethod>();
      allMethods.put(name,methods);
    }
    methods.add(method);
  }
  for (  PsiClassType superType : aClass.getSuperTypes()) {
    PsiClass superClass=superType.resolve();
    if (superClass != null) {
      processClass(superClass,allFields,allMethods,visitedClasses);
    }
  }
}
