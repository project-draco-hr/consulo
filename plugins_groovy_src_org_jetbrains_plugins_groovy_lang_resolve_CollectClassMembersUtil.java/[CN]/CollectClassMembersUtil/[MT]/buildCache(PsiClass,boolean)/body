{
  return aClass.getManager().getCachedValuesManager().createCachedValue(new CachedValueProvider<Trinity<Map<String,CandidateInfo>,Map<String,List<CandidateInfo>>,Map<String,CandidateInfo>>>(){
    public Result<Trinity<Map<String,CandidateInfo>,Map<String,List<CandidateInfo>>,Map<String,CandidateInfo>>> compute(){
      Map<String,CandidateInfo> allFields=new HashMap<String,CandidateInfo>();
      Map<String,List<CandidateInfo>> allMethods=new HashMap<String,List<CandidateInfo>>();
      Map<String,CandidateInfo> allInnerClasses=new HashMap<String,CandidateInfo>();
      processClass(aClass,allFields,allMethods,allInnerClasses,new HashSet<PsiClass>(),PsiSubstitutor.EMPTY,includeSynthetic);
      return Result.create(new Trinity<Map<String,CandidateInfo>,Map<String,List<CandidateInfo>>,Map<String,CandidateInfo>>(allFields,allMethods,allInnerClasses),PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);
    }
  }
,false);
}
