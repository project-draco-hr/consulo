{
  final List<ActionWrapper> result=new ArrayList<ActionWrapper>();
  final ExecutionTarget active=ExecutionTargetManager.getActiveTarget(project);
  for (  final ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project,settings)) {
    result.add(new ActionWrapper(eachTarget.getDisplayName(),eachTarget.getIcon()){
{
        setChecked(eachTarget.equals(active));
      }
      @Override public void perform(){
        final RunManagerEx manager=RunManagerEx.getInstanceEx(project);
        if (dynamic)         manager.setTemporaryConfiguration(settings);
        manager.setSelectedConfiguration(settings);
        ExecutionTargetManager.setActiveTarget(project,eachTarget);
        doRunConfiguration(settings,action.getCurrentExecutor(),project);
      }
    }
);
  }
  boolean isFirst=true;
  for (  final Executor executor : ExecutorRegistry.getInstance().getRegisteredExecutors()) {
    final ProgramRunner runner=RunnerRegistry.getInstance().getRunner(executor.getId(),settings.getConfiguration());
    if (runner != null) {
      result.add(new ActionWrapper(executor.getActionName(),executor.getIcon(),isFirst){
        @Override public void perform(){
          final RunManagerEx manager=RunManagerEx.getInstanceEx(project);
          if (dynamic)           manager.setTemporaryConfiguration(settings);
          manager.setSelectedConfiguration(settings);
          doRunConfiguration(settings,executor,project);
        }
      }
);
      isFirst=false;
    }
  }
  result.add(new ActionWrapper("Edit...",AllIcons.Actions.EditSource,true){
    @Override public void perform(){
      final RunManagerEx manager=RunManagerEx.getInstanceEx(project);
      if (dynamic)       manager.setTemporaryConfiguration(settings);
      action.editConfiguration(project,settings);
    }
  }
);
  if (RunManager.getInstance(project).isTemporary(settings.getConfiguration()) || dynamic) {
    result.add(new ActionWrapper("Save configuration",AllIcons.RunConfigurations.SaveTempConfig){
      @Override public void perform(){
        final RunManagerEx manager=RunManagerEx.getInstanceEx(project);
        if (dynamic)         manager.setTemporaryConfiguration(settings);
        manager.makeStable(settings.getConfiguration());
      }
    }
);
  }
  return result.toArray(new ActionWrapper[result.size()]);
}
