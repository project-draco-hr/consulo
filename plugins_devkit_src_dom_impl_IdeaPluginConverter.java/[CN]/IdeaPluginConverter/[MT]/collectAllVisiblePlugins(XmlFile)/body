{
  List<IdeaPlugin> ideaPlugins=new ArrayList<IdeaPlugin>();
  final Project project=xmlFile.getProject();
  final PsiManager psiManager=PsiManager.getInstance(project);
  final Iterable<VirtualFile> metaInfs=ProjectRootManager.getInstance(project).getFileIndex().getDirsByPackageName("META-INF",true);
  for (  VirtualFile metaInf : metaInfs) {
    final VirtualFile pluginXml=metaInf.findChild("plugin.xml");
    if (pluginXml == null)     continue;
    final IdeaPlugin ideaPlugin=getIdeaPlugin(project,psiManager,pluginXml);
    if (ideaPlugin != null) {
      ideaPlugins.add(ideaPlugin);
    }
  }
  final Module module=ModuleUtil.findModuleForPsiElement(xmlFile);
  if (module != null) {
    final Module[] dependencies=ModuleRootManager.getInstance(module).getDependencies();
    for (    Module dep : dependencies) {
      if (PluginModuleType.isOfType(dep)) {
        final XmlFile file=PluginModuleType.getPluginXml(dep);
        if (file == null)         continue;
        final VirtualFile pluginXml=file.getVirtualFile();
        if (pluginXml != null) {
          final IdeaPlugin ideaPlugin=getIdeaPlugin(project,psiManager,pluginXml);
          if (ideaPlugin != null) {
            if (!ideaPlugins.contains(ideaPlugin)) {
              ideaPlugins.add(ideaPlugin);
            }
          }
        }
      }
    }
    final Sdk jdk=ModuleJdkUtil.getJdk(ModuleRootManager.getInstance(module));
    if (jdk != null && jdk.getSdkType() instanceof IdeaJdk) {
      final VirtualFile pluginsHome=jdk.getHomeDirectory().findChild("plugins");
      final VirtualFile[] plugins=pluginsHome != null ? pluginsHome.getChildren() : VirtualFile.EMPTY_ARRAY;
      for (      VirtualFile plugin : plugins) {
        if (plugin.isDirectory()) {
          final VirtualFile lib=plugin.findChild("lib");
          final VirtualFile[] children=lib != null ? lib.getChildren() : VirtualFile.EMPTY_ARRAY;
          for (          VirtualFile child : children) {
            final IdeaPlugin ideaPlugin=findPluginInFile(child,project,psiManager);
            if (ideaPlugin != null) {
              ideaPlugins.add(ideaPlugin);
            }
          }
        }
 else {
          final IdeaPlugin ideaPlugin=findPluginInFile(plugin,project,psiManager);
          if (ideaPlugin != null) {
            ideaPlugins.add(ideaPlugin);
          }
        }
      }
    }
  }
  return ideaPlugins;
}
