{
  final Tag filesSelector=new Tag("type",new Pair[]{new Pair("type","file")});
  final PatternSetRef excludes=CompilerExcludes.isAvailable(project) ? new PatternSetRef(BuildProperties.getExcludedFromCompilationProperty(chunk.getName())) : null;
  final PatternSetRef resourcePatternsPatternSet=new PatternSetRef(BuildProperties.PROPERTY_COMPILER_RESOURCE_PATTERNS);
  final Copy copy=new Copy(toDir);
  for (int idx=0; idx < sourceRoots.length; idx++) {
    final VirtualFile root=sourceRoots[idx];
    final FileSet fileSet=new FileSet(GenerationUtils.toRelativePath(root,baseDir,BuildProperties.getModuleChunkBasedirProperty(chunk),genOptions,!chunk.isSavePathsRelative()));
    fileSet.add(resourcePatternsPatternSet);
    fileSet.add(filesSelector);
    if (excludes != null) {
      fileSet.add(excludes);
    }
    copy.add(fileSet);
  }
  return copy;
}
