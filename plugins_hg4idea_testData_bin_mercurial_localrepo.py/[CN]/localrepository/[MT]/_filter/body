def _filter(self, filter, filename, data):
    if (filter not in self.filterpats):
        l = []
        for (pat, cmd) in self.ui.configitems(filter):
            if (cmd == '!'):
                continue
            mf = match_.match(self.root, '', [pat])
            fn = None
            params = cmd
            for (name, filterfn) in self._datafilters.iteritems():
                if cmd.startswith(name):
                    fn = filterfn
                    params = cmd[len(name):].lstrip()
                    break
            if (not fn):
                fn = (lambda s, c, **kwargs: util.filter(s, c))
            if (not inspect.getargspec(fn)[2]):
                oldfn = fn
                fn = (lambda s, c, **kwargs: oldfn(s, c))
            l.append((mf, fn, params))
        self.filterpats[filter] = l
    for (mf, fn, cmd) in self.filterpats[filter]:
        if mf(filename):
            self.ui.debug(('filtering %s through %s\n' % (filename, cmd)))
            data = fn(data, cmd, ui=self.ui, repo=self, filename=filename)
            break
    return data
