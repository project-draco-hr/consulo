def transaction(self):
    tr = ((self._transref and self._transref()) or None)
    if (tr and tr.running()):
        return tr.nest()
    if os.path.exists(self.sjoin('journal')):
        raise error.RepoError(_('abandoned transaction found - run hg recover'))
    try:
        ds = self.opener('dirstate').read()
    except IOError:
        ds = ''
    self.opener('journal.dirstate', 'w').write(ds)
    self.opener('journal.branch', 'w').write(self.dirstate.branch())
    renames = [(self.sjoin('journal'), self.sjoin('undo')), (self.join('journal.dirstate'), self.join('undo.dirstate')), (self.join('journal.branch'), self.join('undo.branch'))]
    tr = transaction.transaction(self.ui.warn, self.sopener, self.sjoin('journal'), aftertrans(renames), self.store.createmode)
    self._transref = weakref.ref(tr)
    return tr
