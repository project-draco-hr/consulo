def tag(self, names, node, message, local, user, date):
    'tag a revision with one or more symbolic names.\n\n        names is a list of strings or, when adding a single tag, names may be a\n        string.\n\n        if local is True, the tags are stored in a per-repository file.\n        otherwise, they are stored in the .hgtags file, and a new\n        changeset is committed with the change.\n\n        keyword arguments:\n\n        local: whether to store tags in non-version-controlled file\n        (default False)\n\n        message: commit message to use if committing\n\n        user: name of user to use if committing\n\n        date: date tuple to use if committing'
    for x in self.status()[:5]:
        if ('.hgtags' in x):
            raise util.Abort(_('working copy of .hgtags is changed (please commit .hgtags manually)'))
    self.tags()
    self._tag(names, node, message, local, user, date)
