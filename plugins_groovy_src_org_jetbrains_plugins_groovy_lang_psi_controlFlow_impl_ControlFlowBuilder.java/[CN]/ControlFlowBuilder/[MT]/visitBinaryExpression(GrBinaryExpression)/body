{
  final GrExpression left=expression.getLeftOperand();
  final GrExpression right=expression.getRightOperand();
  final IElementType opType=expression.getOperationTokenType();
  final ConditionInstruction cond;
  if (opType == mLOR) {
    cond=addNodeAndCheckPending(new ConditionInstruction(expression,myInstructionNumber++));
    registerCondition(cond);
  }
 else {
    cond=null;
  }
  left.accept(this);
  if (cond != null) {
    myConditions.removeFirstOccurrence(cond);
  }
  NegatingGotoInstruction first=null;
  if (right != null) {
    if (cond != null) {
      final InstructionImpl head=myHead;
      addPendingEdge(expression,myHead);
      myHead=head;
      if (opType == mLOR) {
        myNegatingStack.push(addNodeAndCheckPending(new NegatingGotoInstruction(expression,myInstructionNumber++,cond)));
      }
    }
    right.accept(this);
  }
  visitCall(expression);
  if (first != null) {
    myNegatingStack.push(first);
  }
}
