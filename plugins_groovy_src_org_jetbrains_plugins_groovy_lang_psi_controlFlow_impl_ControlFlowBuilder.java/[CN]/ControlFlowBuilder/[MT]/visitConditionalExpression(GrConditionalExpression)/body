{
  GrExpression condition=expression.getCondition();
  GrExpression thenBranch=expression.getThenBranch();
  GrExpression elseBranch=expression.getElseBranch();
  condition.accept(this);
  InstructionImpl conditionEnd=myHead;
  List<GotoInstruction> negations=collectAndRemoveAllPendingNegations(expression);
  if (thenBranch != null) {
    thenBranch.accept(this);
    handlePossibleReturn(thenBranch);
    addPendingEdge(expression,myHead);
  }
  if (elseBranch != null) {
    InstructionImpl head=reduceAllNegationsIntoInstruction(expression,negations);
    myHead=head != null ? head : conditionEnd;
    elseBranch.accept(this);
    handlePossibleReturn(elseBranch);
  }
}
