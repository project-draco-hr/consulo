{
  super.visitReferenceExpression(refExpr);
  if (refExpr.getQualifierExpression() == null) {
    String name=refExpr.getReferenceName();
    if (name == null)     return;
    if (ControlFlowUtils.isIncOrDecOperand(refExpr)) {
      final InstructionImpl i=new ReadWriteVariableInstruction(name,refExpr,READ);
      addNodeAndCheckPending(i);
      addNode(new ReadWriteVariableInstruction(name,refExpr,WRITE));
    }
 else {
      final int type=PsiUtil.isLValue(refExpr) ? WRITE : READ;
      addNodeAndCheckPending(new ReadWriteVariableInstruction(name,refExpr,type));
      if (refExpr.getParent() instanceof GrArgumentList && refExpr.getParent().getParent() instanceof GrCall) {
        addNodeAndCheckPending(new ArgumentInstruction(refExpr));
      }
    }
  }
 else   if (!(refExpr.getParent() instanceof GrCall)) {
    visitCall(refExpr);
  }
}
