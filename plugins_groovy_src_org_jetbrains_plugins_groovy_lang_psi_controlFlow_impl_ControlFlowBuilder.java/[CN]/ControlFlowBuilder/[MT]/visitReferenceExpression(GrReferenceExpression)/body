{
  super.visitReferenceExpression(refExpr);
  if (refExpr.getQualifierExpression() == null) {
    String name=refExpr.getReferenceName();
    if (name == null)     return;
    if (ControlFlowUtils.isIncOrDecOperand(refExpr) && !myAssertionsOnly) {
      final ReadWriteVariableInstruction i=new ReadWriteVariableInstruction(name,refExpr,myInstructionNumber++,false);
      addNode(i);
      addNode(new ReadWriteVariableInstruction(name,refExpr,myInstructionNumber++,true));
      if (refExpr.getParent() instanceof GrUnaryExpression) {
        addNode(new ReadWriteVariableInstruction(name,refExpr,myInstructionNumber++,false));
      }
      checkPending(i);
    }
 else {
      final ReadWriteVariableInstruction i=new ReadWriteVariableInstruction(name,refExpr,myInstructionNumber++,!myAssertionsOnly && PsiUtil.isLValue(refExpr));
      addNode(i);
      checkPending(i);
    }
  }
 else   if (!(refExpr.getParent() instanceof GrCall)) {
    visitCall(refExpr);
  }
}
