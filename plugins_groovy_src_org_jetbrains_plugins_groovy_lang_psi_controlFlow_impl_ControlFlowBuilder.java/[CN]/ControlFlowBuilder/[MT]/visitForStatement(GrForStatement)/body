{
  final GrForClause clause=forStatement.getClause();
  if (clause instanceof GrTraditionalForClause) {
    final GrCondition initializer=((GrTraditionalForClause)clause).getInitialization();
    if (initializer != null) {
      initializer.accept(this);
    }
  }
 else   if (clause instanceof GrForInClause) {
    final GrExpression expression=((GrForInClause)clause).getIteratedExpression();
    if (expression != null) {
      expression.accept(this);
    }
    GrVariable variable=clause.getDeclaredVariable();
    if (variable != null) {
      ReadWriteVariableInstruction writeInst=new ReadWriteVariableInstruction(variable.getName(),variable,myInstructionNumber++,true);
      checkPending(writeInst);
      addNode(writeInst);
    }
  }
  InstructionImpl instruction=startNode(forStatement);
  if (clause instanceof GrTraditionalForClause) {
    final GrExpression condition=((GrTraditionalForClause)clause).getCondition();
    if (condition != null) {
      condition.accept(this);
      if (!alwaysTrue(condition)) {
        addPendingEdge(forStatement,myHead);
      }
    }
  }
 else {
    addPendingEdge(forStatement,myHead);
  }
  final GrStatement body=forStatement.getBody();
  if (body != null) {
    InstructionImpl bodyInstruction=startNode(body);
    body.accept(this);
    finishNode(bodyInstruction);
  }
  checkPending(instruction);
  if (clause instanceof GrTraditionalForClause) {
    final GrExpression update=((GrTraditionalForClause)clause).getUpdate();
    if (update != null) {
      update.accept(this);
    }
  }
  if (myHead != null)   addEdge(myHead,instruction);
  interruptFlow();
  finishNode(instruction);
}
