{
  final GrOpenBlock tryBlock=tryCatchStatement.getTryBlock();
  final GrCatchClause[] catchClauses=tryCatchStatement.getCatchClauses();
  final GrFinallyClause finallyClause=tryCatchStatement.getFinallyClause();
  InstructionImpl tryBeg=null;
  InstructionImpl tryEnd=null;
  if (tryBlock != null) {
    tryBeg=startNode(tryBlock);
    tryBlock.accept(this);
    tryEnd=myHead != tryBeg ? myHead : null;
    finishNode(tryBeg);
  }
  InstructionImpl[] catches=new InstructionImpl[catchClauses.length];
  for (int i=0; i < catchClauses.length; i++) {
    final InstructionImpl catchBeg=startNode(catchClauses[i]);
    if (tryBeg != null)     addEdge(tryBeg,catchBeg);
    if (tryEnd != null)     addEdge(tryEnd,catchBeg);
    catchClauses[i].accept(this);
    catches[i]=myHead;
    finishNode(catchBeg);
  }
  if (finallyClause != null) {
    final InstructionImpl finallyInstruction=startNode(finallyClause);
    if (tryEnd != null)     addEdge(tryEnd,finallyInstruction);
    for (    InstructionImpl catchEnd : catches) {
      addEdge(catchEnd,finallyInstruction);
    }
    addFinallyEdges(finallyInstruction);
    finallyClause.accept(this);
    finishNode(finallyInstruction);
  }
}
