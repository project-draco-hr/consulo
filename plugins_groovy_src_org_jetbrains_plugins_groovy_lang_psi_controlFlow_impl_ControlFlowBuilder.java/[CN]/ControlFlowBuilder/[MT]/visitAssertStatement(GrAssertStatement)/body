{
  final InstructionImpl assertInstruction=startNode(assertStatement);
  final GrExpression assertion=assertStatement.getAssertion();
  if (assertion != null) {
    assertion.accept(this);
    InstructionImpl positiveHead=myHead;
    List<GotoInstruction> negations=collectAndRemoveAllPendingNegations(assertStatement);
    if (!negations.isEmpty()) {
      interruptFlow();
      reduceAllNegationsIntoInstruction(assertStatement,negations);
    }
    GrExpression errorMessage=assertStatement.getErrorMessage();
    if (errorMessage != null) {
      errorMessage.accept(this);
    }
    addNode(new ThrowingInstruction(assertStatement));
    final PsiType type=TypesUtil.createTypeByFQClassName(CommonClassNames.JAVA_LANG_ASSERTION_ERROR,assertStatement);
    ExceptionInfo info=findCatch(type);
    if (info != null) {
      info.myThrowers.add(myHead);
    }
 else {
      addPendingEdge(null,myHead);
    }
    myHead=positiveHead;
  }
  finishNode(assertInstruction);
}
