{
  if (currentScope == null) {
    List<Pair<InstructionImpl,GroovyPsiElement>> result=myPending;
    myPending=ContainerUtil.newArrayList();
    return result;
  }
 else {
    ArrayList<Pair<InstructionImpl,GroovyPsiElement>> targets=ContainerUtil.newArrayList();
    for (int i=myPending.size() - 1; i >= 0; i--) {
      final Pair<InstructionImpl,GroovyPsiElement> pair=myPending.get(i);
      final PsiElement scopeWhenToAdd=pair.getSecond();
      if (scopeWhenToAdd == null)       continue;
      if (!PsiTreeUtil.isAncestor(scopeWhenToAdd,currentScope,false)) {
        targets.add(pair);
        myPending.remove(i);
      }
 else {
        break;
      }
    }
    return targets;
  }
}
