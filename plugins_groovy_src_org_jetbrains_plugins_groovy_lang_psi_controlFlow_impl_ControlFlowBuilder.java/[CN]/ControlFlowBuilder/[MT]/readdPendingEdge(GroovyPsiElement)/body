{
  if (newScope == null) {
    final ArrayList<Pair<InstructionImpl,GroovyPsiElement>> newPending=ContainerUtil.newArrayList();
    for (    Pair<InstructionImpl,GroovyPsiElement> pair : myPending) {
      newPending.add(new Pair<InstructionImpl,GroovyPsiElement>(pair.first,null));
    }
    myPending=newPending;
  }
 else {
    ArrayList<InstructionImpl> targets=ContainerUtil.newArrayList();
    for (int i=myPending.size() - 1; i >= 0; i--) {
      final Pair<InstructionImpl,GroovyPsiElement> pair=myPending.get(i);
      final PsiElement scopeWhenToAdd=pair.getSecond();
      if (scopeWhenToAdd == null)       continue;
      if (!PsiTreeUtil.isAncestor(scopeWhenToAdd,newScope,false)) {
        targets.add(pair.getFirst());
        myPending.remove(i);
      }
 else {
        break;
      }
    }
    for (    InstructionImpl target : targets) {
      addPendingEdge(newScope,target);
    }
  }
}
