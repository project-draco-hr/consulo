{
  final GrExpression operand=expression.getOperand();
  if (operand == null)   return;
  if (expression.getOperationTokenType() != mLNOT) {
    operand.accept(this);
    visitCall(expression);
    return;
  }
  ConditionInstruction cond=new ConditionInstruction(expression,myInstructionNumber++);
  addNodeAndCheckPending(cond);
  registerCondition(cond);
  operand.accept(this);
  visitCall(expression);
  myConditions.removeFirstOccurrence(cond);
  List<GotoInstruction> negations=collectAndRemoveAllPendingNegations(expression);
  addPendingEdge(expression,addNodeAndCheckPending(new PositiveGotoInstruction(expression,myInstructionNumber++,cond)));
  myHead=reduceAllNegationsIntoInstruction(expression,negations);
}
