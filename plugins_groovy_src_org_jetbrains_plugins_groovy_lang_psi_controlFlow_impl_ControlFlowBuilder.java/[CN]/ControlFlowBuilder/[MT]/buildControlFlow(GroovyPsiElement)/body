{
  myInstructions=new ArrayList<InstructionImpl>();
  myProcessingStack=new Stack<InstructionImpl>();
  myCatchedExceptionInfos=new Stack<ExceptionInfo>();
  myPending=new ArrayList<Pair<InstructionImpl,GroovyPsiElement>>();
  myInstructionNumber=0;
  myLastInScope=null;
  if (scope instanceof GrCodeBlock) {
    GrStatement[] statements=((GrCodeBlock)scope).getStatements();
    if (statements.length > 0) {
      myLastInScope=statements[statements.length - 1];
    }
  }
 else   if (scope instanceof GroovyFileBase) {
    GrTopStatement[] topStatements=((GroovyFileBase)scope).getTopStatements();
    for (int i=topStatements.length - 1; i >= 0; i--) {
      if (topStatements[i] instanceof GrStatement) {
        myLastInScope=topStatements[i];
        break;
      }
    }
  }
  startNode(null);
  if (scope instanceof GrClosableBlock) {
    buildFlowForClosure((GrClosableBlock)scope);
  }
  scope.accept(this);
  final InstructionImpl end=startNode(null);
  checkPending(end);
  return myInstructions.toArray(new Instruction[myInstructions.size()]);
}
