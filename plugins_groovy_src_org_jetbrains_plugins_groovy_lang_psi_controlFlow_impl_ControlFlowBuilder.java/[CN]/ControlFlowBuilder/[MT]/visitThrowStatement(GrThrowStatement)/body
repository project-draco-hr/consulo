{
  final GrExpression exception=throwStatement.getException();
  if (exception == null)   return;
  exception.accept(this);
  final InstructionImpl throwInstruction=new ThrowingInstruction(throwStatement);
  addNodeAndCheckPending(throwInstruction);
  interruptFlow();
  final PsiType type=RecursionManager.doPreventingRecursion(exception,true,new NullableComputable<PsiType>(){
    @Override public PsiType compute(){
      return exception.getNominalType();
    }
  }
);
  if (type != null) {
    ExceptionInfo info=findCatch(type);
    if (info != null) {
      info.myThrowers.add(throwInstruction);
    }
 else {
      addPendingEdge(null,throwInstruction);
    }
  }
 else {
    addPendingEdge(null,throwInstruction);
  }
}
