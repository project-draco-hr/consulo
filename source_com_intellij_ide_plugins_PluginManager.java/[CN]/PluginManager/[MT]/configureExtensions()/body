{
  Extensions.setLogProvider(new IdeaLogProvider());
  Extensions.registerAreaClass(AREA_IDEA_PROJECT,null);
  Extensions.registerAreaClass(AREA_IDEA_MODULE,AREA_IDEA_PROJECT);
  Extensions.getRootArea().registerExtensionPoint(ExtensionPoints.COMPONENT,ComponentDescriptor.class.getName());
  Extensions.getRootArea().getExtensionPoint(Extensions.AREA_LISTENER_EXTENSION_POINT).registerExtension(new AreaListener(){
    public void areaCreated(    String areaClass,    AreaInstance areaInstance){
      if (AREA_IDEA_PROJECT.equals(areaClass) || AREA_IDEA_MODULE.equals(areaClass)) {
        Extensions.getArea(areaInstance).registerExtensionPoint(ExtensionPoints.COMPONENT,ComponentDescriptor.class.getName());
      }
    }
    public void areaDisposing(    String areaClass,    AreaInstance areaInstance){
    }
  }
,LoadingOrder.FIRST);
  Extensions.getRootArea().registerExtensionPoint(ExtensionPoints.APPLICATION_STARTER,ApplicationStarter.class.getName());
  Extensions.getRootArea().registerExtensionPoint(ExtensionPoints.ERROR_HANDLER,ErrorReportSubmitter.class.getName());
  Extensions.getRootArea().registerExtensionPoint(ExtensionPoints.JUNIT_PATCHER,JUnitPatcher.class.getName());
  Extensions.getRootArea().getExtensionPoint(ExtensionPoints.ERROR_HANDLER).registerExtension(new ITNReporter());
  Extensions.getRootArea().getExtensionPoint(ExtensionPoints.APPLICATION_STARTER).registerExtension(new InspectionMain());
  Extensions.getRootArea().getExtensionPoint(ExtensionPoints.APPLICATION_STARTER).registerExtension(new DiffApplication());
}
