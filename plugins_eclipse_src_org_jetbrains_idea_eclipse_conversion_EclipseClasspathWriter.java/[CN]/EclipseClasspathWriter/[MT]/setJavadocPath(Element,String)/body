{
  if (javadocPath != null) {
    Element child=new Element(EclipseXml.ATTRIBUTES_TAG);
    element.addContent(child);
    Element attrElement=child.getChild(EclipseXml.ATTRIBUTE_TAG);
    if (attrElement == null) {
      attrElement=new Element(EclipseXml.ATTRIBUTE_TAG);
      child.addContent(attrElement);
    }
    attrElement.setAttribute("name","javadoc_location");
    final String protocol=VirtualFileManager.extractProtocol(javadocPath);
    if (!Comparing.strEqual(protocol,HttpFileSystem.getInstance().getProtocol())) {
      final String path=VfsUtil.urlToPath(javadocPath);
      if (Comparing.strEqual(protocol,JarFileSystem.getInstance().getProtocol())) {
        final VirtualFile javadocFile=JarFileSystem.getInstance().getVirtualFileForJar(VirtualFileManager.getInstance().findFileByUrl(javadocPath));
        if (javadocFile != null && VfsUtil.isAncestor(myModel.getProject().getBaseDir(),javadocFile,false)) {
          javadocPath=EclipseXml.JAR_PREFIX + EclipseXml.PLATFORM_PROTOCOL + "resources/"+ VfsUtil.getRelativePath(javadocFile,myModel.getProject().getBaseDir(),'/')+ javadocPath.substring(javadocFile.getUrl().length());
        }
 else {
          javadocPath=EclipseXml.JAR_PREFIX + EclipseXml.FILE_PROTOCOL + path;
        }
      }
 else       if (new File(path).exists()) {
        javadocPath=EclipseXml.FILE_PROTOCOL + path;
      }
    }
    attrElement.setAttribute("value",javadocPath);
  }
}
