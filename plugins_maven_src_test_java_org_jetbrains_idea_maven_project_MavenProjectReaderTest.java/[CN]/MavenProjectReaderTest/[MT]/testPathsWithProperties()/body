{
  createProjectPom("<properties>" + "  <foo>subDir</foo>" + "</properties>"+ "<build>"+ "  <sourceDirectory>${foo}/mySrc</sourceDirectory>"+ "  <testSourceDirectory>${foo}/myTestSrc</testSourceDirectory>"+ "  <scriptSourceDirectory>${foo}/myScriptSrc</scriptSourceDirectory>"+ "  <resources>"+ "    <resource>"+ "      <directory>${foo}/myRes</directory>"+ "    </resource>"+ "  </resources>"+ "  <testResources>"+ "    <testResource>"+ "      <directory>${foo}/myTestRes</directory>"+ "    </testResource>"+ "  </testResources>"+ "  <directory>${foo}/myOutput</directory>"+ "  <outputDirectory>${foo}/myClasses</outputDirectory>"+ "  <testOutputDirectory>${foo}/myTestClasses</testOutputDirectory>"+ "</build>");
  MavenModel p=readProject(myProjectPom);
  assertSize(1,p.getBuild().getSources());
  assertPathEquals(pathFromBasedir("subDir/mySrc"),p.getBuild().getSources().get(0));
  assertSize(1,p.getBuild().getTestSources());
  assertPathEquals(pathFromBasedir("subDir/myTestSrc"),p.getBuild().getTestSources().get(0));
  assertEquals(1,p.getBuild().getResources().size());
  assertResource(p.getBuild().getResources().get(0),pathFromBasedir("subDir/myRes"),false,null,Collections.EMPTY_LIST,Collections.EMPTY_LIST);
  assertEquals(1,p.getBuild().getTestResources().size());
  assertResource(p.getBuild().getTestResources().get(0),pathFromBasedir("subDir/myTestRes"),false,null,Collections.EMPTY_LIST,Collections.EMPTY_LIST);
  assertPathEquals(pathFromBasedir("subDir/myOutput"),p.getBuild().getDirectory());
  assertPathEquals(pathFromBasedir("subDir/myClasses"),p.getBuild().getOutputDirectory());
  assertPathEquals(pathFromBasedir("subDir/myTestClasses"),p.getBuild().getTestOutputDirectory());
}
