{
  VirtualFile file=myProjectRoot.createChildData(this,"pom.xml");
  VfsUtil.saveText(file,"<project>" + "  <groupId>test</groupId>" + "  <artifactId>project</artifactId>"+ "  <version>1</version>"+ "</project>");
  org.apache.maven.project.MavenProject p=readProject(file);
  assertEquals("4.0.0",p.getModelVersion());
  assertEquals("jar",p.getPackaging());
  assertNull(p.getModel().getName());
  assertNull(p.getParent());
  assertNull(p.getParentArtifact());
  Build build=p.getBuild();
  assertNotNull(build);
  assertEquals("project-1",build.getFinalName());
  assertEquals(null,build.getDefaultGoal());
  assertPathEquals(pathFromBasedir("src/main/java"),build.getSourceDirectory());
  assertPathEquals(pathFromBasedir("src/test/java"),build.getTestSourceDirectory());
  assertPathEquals(pathFromBasedir("src/main/scripts"),build.getScriptSourceDirectory());
  assertEquals(1,build.getResources().size());
  assertResource((Resource)build.getResources().get(0),pathFromBasedir("src/main/resources"),false,null,Collections.EMPTY_LIST,Collections.EMPTY_LIST);
  assertEquals(1,build.getTestResources().size());
  assertResource((Resource)build.getTestResources().get(0),pathFromBasedir("src/test/resources"),false,null,Collections.EMPTY_LIST,Collections.EMPTY_LIST);
  assertPathEquals(pathFromBasedir("target"),build.getDirectory());
  assertPathEquals(pathFromBasedir("target/classes"),build.getOutputDirectory());
  assertPathEquals(pathFromBasedir("target/test-classes"),build.getTestOutputDirectory());
}
