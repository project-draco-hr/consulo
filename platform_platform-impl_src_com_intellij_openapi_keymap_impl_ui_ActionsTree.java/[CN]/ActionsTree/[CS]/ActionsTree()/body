{
  myRoot=new DefaultMutableTreeNode(ROOT);
  myTree=new Tree(new MyModel(myRoot)){
    Rectangle lastViewRect=null;
    @Override public boolean getScrollableTracksViewportWidth(){
      return true;
    }
    @Override public Dimension getPreferredSize(){
      final TreeUI treeUI=getUI();
      final Rectangle currentViewRect=getVisibleRect();
      if (!Comparing.equal(lastViewRect,currentViewRect) && treeUI instanceof BasicTreeUI) {
        ((BasicTreeUI)treeUI).setLeftChildIndent(((BasicTreeUI)treeUI).getLeftChildIndent());
      }
      lastViewRect=currentViewRect;
      return super.getPreferredSize();
    }
  }
;
  myTree.setRootVisible(false);
  myTree.putClientProperty(UIUtil.MacTreeUI.STRIPED_CLIENT_PROPERTY,Boolean.TRUE);
  myTree.setCellRenderer(new KeymapsRenderer());
  myTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  myComponent=ScrollPaneFactory.createScrollPane(myTree,ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
}
