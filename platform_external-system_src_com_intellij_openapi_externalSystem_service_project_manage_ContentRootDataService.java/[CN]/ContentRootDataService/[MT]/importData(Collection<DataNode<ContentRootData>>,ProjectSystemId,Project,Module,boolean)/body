{
  ExternalSystemUtil.executeProjectChangeAction(project,owner,datas,synchronous,new Runnable(){
    @Override public void run(){
      final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
      final ModifiableRootModel model=moduleRootManager.getModifiableModel();
      try {
        for (        DataNode<ContentRootData> data : datas) {
          ContentRootData contentRoot=data.getData();
          ContentEntry contentEntry=model.addContentEntry(toVfsUrl(contentRoot.getRootPath()));
          LOG.info(String.format("Importing content root '%s' for module '%s'",contentRoot.getRootPath(),module.getName()));
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.SOURCE)) {
            contentEntry.addSourceFolder(toVfsUrl(path),false);
            LOG.info(String.format("Importing source root '%s' for content root '%s' of module '%s'",path,contentRoot.getRootPath(),module.getName()));
          }
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.TEST)) {
            contentEntry.addSourceFolder(toVfsUrl(path),true);
            LOG.info(String.format("Importing test root '%s' for content root '%s' of module '%s'",path,contentRoot.getRootPath(),module.getName()));
          }
          for (          String path : contentRoot.getPaths(ExternalSystemSourceType.EXCLUDED)) {
            contentEntry.addExcludeFolder(toVfsUrl(path));
            LOG.info(String.format("Importing excluded root '%s' for content root '%s' of module '%s'",path,contentRoot.getRootPath(),module.getName()));
          }
        }
      }
  finally {
        model.commit();
      }
    }
  }
);
}
