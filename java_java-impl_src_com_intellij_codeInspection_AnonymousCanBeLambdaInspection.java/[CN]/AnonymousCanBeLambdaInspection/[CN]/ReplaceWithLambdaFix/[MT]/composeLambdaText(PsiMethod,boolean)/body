{
  final StringBuilder buf=new StringBuilder();
  if (appendType) {
    buf.append(method.getParameterList().getText());
  }
 else {
    final PsiParameter[] parameters=method.getParameterList().getParameters();
    if (parameters.length != 1) {
      buf.append("(");
    }
    buf.append(StringUtil.join(parameters,new Function<PsiParameter,String>(){
      @Override public String fun(      PsiParameter parameter){
        String parameterName=parameter.getName();
        if (parameterName == null) {
          parameterName="";
        }
        return parameterName;
      }
    }
,","));
    if (parameters.length != 1) {
      buf.append(")");
    }
  }
  buf.append("->");
  final PsiCodeBlock body=method.getBody();
  LOG.assertTrue(body != null);
  final PsiStatement[] statements=body.getStatements();
  if (statements.length == 1 && statements[0] instanceof PsiReturnStatement) {
    PsiExpression value=((PsiReturnStatement)statements[0]).getReturnValue();
    if (value != null) {
      buf.append(value.getText());
      return buf.toString();
    }
  }
  buf.append(body.getText());
  return buf.toString();
}
