{
  super.visitBinaryExpression(expression);
  if (!ComparisonUtils.isEqualityComparison(expression)) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null || !TypeUtils.hasFloatingPointType(lhs) && !TypeUtils.hasFloatingPointType(rhs)) {
    return;
  }
  if (isNaN(lhs)) {
    registerError(lhs,expression);
  }
 else   if (isNaN(rhs)) {
    registerError(rhs,expression);
  }
}
