{
  final String attValueString=xmlAttributeValue.getValue();
  LOG.assertTrue(attValueString.startsWith("#"));
  final XmlAttribute attribute=(XmlAttribute)xmlAttributeValue.getContext();
  if (attribute == null)   return PsiReference.EMPTY_ARRAY;
  final String attributeName=attribute.getName();
  final XmlTag xmlTag=attribute.getParent();
  final XmlElementDescriptor descriptor=xmlTag.getDescriptor();
  if (descriptor == null)   return PsiReference.EMPTY_ARRAY;
  final PsiElement currentTagClass=descriptor.getDeclaration();
  if (!(currentTagClass instanceof PsiClass))   return PsiReference.EMPTY_ARRAY;
  final PsiField handlerField=((PsiClass)currentTagClass).findFieldByName(attributeName,true);
  if (handlerField == null) {
    return PsiReference.EMPTY_ARRAY;
  }
  final PsiClass objectPropertyClass=JavaFxPsiUtil.getPropertyClass(handlerField);
  if (objectPropertyClass == null || !InheritanceUtil.isInheritor(objectPropertyClass,JavaFxCommonClassNames.JAVAFX_EVENT_EVENT_HANDLER)) {
    return PsiReference.EMPTY_ARRAY;
  }
  final String eventHandlerName=attValueString.substring(1);
  final PsiMethod[] methods=controllerClass.findMethodsByName(eventHandlerName,true);
  PsiMethod handlerMethod=null;
  for (  PsiMethod psiMethod : methods) {
    if (JavaFxEventHandlerReference.isHandlerMethod(psiMethod)) {
      handlerMethod=psiMethod;
      break;
    }
  }
  return new PsiReference[]{new JavaFxEventHandlerReference(xmlAttributeValue,(PsiClass)currentTagClass,handlerMethod,controllerClass)};
}
