{
  final VirtualFile child=prepareDirectoriesForRename();
  final VirtualFile f=child.findChild("a.txt");
  renameFileInCommand(f,"anew.txt");
  renameFileInCommand(child,"newchild");
  verifySorted(runSvn("status"),"A + newchild","A + newchild" + File.separatorChar + "anew.txt","D child","D child" + File.separatorChar + "a.txt","D child" + File.separatorChar + "grandChild","D child" + File.separatorChar + "grandChild"+ File.separatorChar+ "b.txt","D + newchild" + File.separatorChar + "a.txt");
  final ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
  insideInitializedChangeListManager(changeListManager,new Runnable(){
    @Override public void run(){
      refreshVfs();
      changeListManager.ensureUpToDate(false);
      final List<Change> changes=new ArrayList<Change>(changeListManager.getDefaultChangeList().getChanges());
      final List<VcsException> list=SvnVcs.getInstance(myProject).getCheckinEnvironment().commit(changes,"test");
      Assert.assertEquals(0,list.size());
    }
  }
);
}
