{
  final VirtualFile child=prepareDirectoriesForRename();
  renameFileInCommand(child,"childnew");
  final ProcessOutput result=runSvn("status");
  verifySorted(result,"A + childnew","D child","D child" + File.separatorChar + "a.txt","D child" + File.separatorChar + "grandChild","D child" + File.separatorChar + "grandChild"+ File.separatorChar+ "b.txt");
  refreshVfs();
  final ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
  insideInitializedChangeListManager(changeListManager,new Runnable(){
    @Override public void run(){
      changeListManager.ensureUpToDate(false);
      List<Change> changes=new ArrayList<Change>(changeListManager.getDefaultChangeList().getChanges());
      Assert.assertEquals(4,changes.size());
      sortChanges(changes);
      verifyChange(changes.get(0),"child","childnew");
      verifyChange(changes.get(1),"child" + File.separatorChar + "a.txt","childnew" + File.separatorChar + "a.txt");
      verifyChange(changes.get(2),"child" + File.separatorChar + "grandChild","childnew" + File.separatorChar + "grandChild");
      verifyChange(changes.get(3),"child" + File.separatorChar + "grandChild"+ File.separatorChar+ "b.txt","childnew" + File.separatorChar + "grandChild"+ File.separatorChar+ "b.txt");
    }
  }
);
}
