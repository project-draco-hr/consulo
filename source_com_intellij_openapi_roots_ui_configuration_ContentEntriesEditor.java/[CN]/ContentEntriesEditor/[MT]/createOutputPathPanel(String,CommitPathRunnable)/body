{
  final JTextField textField=new JTextField();
  final FileChooserDescriptor outputPathsChooserDescriptor=new FileChooserDescriptor(false,true,false,false,false,false);
  outputPathsChooserDescriptor.setHideIgnored(false);
  InsertPathAction.addTo(textField,outputPathsChooserDescriptor);
  final Runnable commitRunnable=new Runnable(){
    public void run(){
      if (!myModel.isWritable()) {
        return;
      }
      final String path=textField.getText().trim();
      if (path.length() == 0) {
        commitPathRunnable.saveUrl(null);
      }
 else {
        String canonicalPath;
        try {
          canonicalPath=new File(path).getCanonicalPath();
        }
 catch (        IOException e) {
          canonicalPath=path;
        }
        commitPathRunnable.saveUrl(VfsUtil.pathToUrl(FileUtil.toSystemIndependentName(canonicalPath)));
      }
      if (myRootTreeEditor != null) {
        myRootTreeEditor.update();
      }
    }
  }
;
  textField.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    DocumentEvent e){
      commitRunnable.run();
    }
  }
);
  return new FieldPanel(textField,null,null,new BrowseFilesListener(textField,title,"",outputPathsChooserDescriptor){
    public void actionPerformed(    ActionEvent e){
      super.actionPerformed(e);
      commitRunnable.run();
    }
  }
,null);
}
