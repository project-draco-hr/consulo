{
  VirtualFile vFile=file.getVirtualFile();
  if (vFile == null)   return false;
  boolean isSource=fileIndex.isInSourceContent(vFile);
  if (myScope == SCOPE_ANY) {
    return fileIndex.isInContent(vFile) && FilePatternPackageSet.matchesModule(myModuleGroupPattern,myModulePattern,vFile,fileIndex);
  }
  if (myScope == SCOPE_SOURCE) {
    return isSource && !fileIndex.isInTestSourceContent(vFile) && FilePatternPackageSet.matchesModule(myModuleGroupPattern,myModulePattern,vFile,fileIndex);
  }
  if (myScope == SCOPE_LIBRARY) {
    return (fileIndex.isInLibraryClasses(vFile) || fileIndex.isInLibrarySource(vFile)) && matchesLibrary(myModulePattern,vFile,fileIndex);
  }
  if (myScope == SCOPE_TEST) {
    return isSource && fileIndex.isInTestSourceContent(vFile) && FilePatternPackageSet.matchesModule(myModuleGroupPattern,myModulePattern,vFile,fileIndex);
  }
  if (myScope == SCOPE_PROBLEM) {
    return isSource && WolfTheProblemSolver.getInstance(file.getProject()).isProblemFile(vFile) && FilePatternPackageSet.matchesModule(myModuleGroupPattern,myModulePattern,vFile,fileIndex);
  }
  throw new RuntimeException("Unknown scope: " + myScope);
}
