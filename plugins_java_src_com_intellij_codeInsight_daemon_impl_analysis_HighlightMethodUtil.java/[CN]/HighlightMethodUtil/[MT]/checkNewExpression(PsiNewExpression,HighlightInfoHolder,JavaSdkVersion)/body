{
  PsiType type=expression.getType();
  if (!(type instanceof PsiClassType))   return;
  PsiClassType.ClassResolveResult typeResult=((PsiClassType)type).resolveGenerics();
  PsiClass aClass=typeResult.getElement();
  if (aClass == null)   return;
  if (aClass instanceof PsiAnonymousClass) {
    type=((PsiAnonymousClass)aClass).getBaseClassType();
    typeResult=((PsiClassType)type).resolveGenerics();
    aClass=typeResult.getElement();
    if (aClass == null)     return;
  }
  PsiJavaCodeReferenceElement classReference=expression.getClassOrAnonymousClassReference();
  checkConstructorCall(typeResult,expression,type,classReference,holder,javaSdkVersion);
}
