{
  PsiMethod superMethod=superSignature.getMethod();
  PsiSubstitutor substitutorForMethod=MethodSignatureUtil.getSuperMethodSignatureSubstitutor(methodSignature,superSignature);
  for (int i=0; i < checkedExceptions.size(); i++) {
    final PsiClassType checkedEx=checkedExceptions.get(i);
    final PsiType substituted=substitutorForMethod != null ? substitutorForMethod.substitute(checkedEx) : TypeConversionUtil.erasure(checkedEx);
    PsiType exception=substitutorForDerivedClass.substitute(substituted);
    if (!isMethodThrows(superMethod,substitutorForMethod,exception,substitutorForDerivedClass)) {
      return i;
    }
  }
  return -1;
}
