{
  HighlightInfo errorResult=null;
  PsiClass aClass=method.getContainingClass();
  if (method.hasModifierProperty(PsiModifier.ABSTRACT) && aClass != null && !aClass.hasModifierProperty(PsiModifier.ABSTRACT) && !aClass.isEnum() && !PsiUtilCore.hasErrorElementChild(method)) {
    String description=JavaErrorMessages.message("abstract.method.in.non.abstract.class");
    errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(elementToHighlight).descriptionAndTooltip(description).create();
    if (method.getBody() != null) {
      QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createModifierListFix(method,PsiModifier.ABSTRACT,false,false));
    }
    QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createAddMethodBodyFix(method));
    QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createModifierListFix(aClass,PsiModifier.ABSTRACT,true,false));
  }
  return errorResult;
}
