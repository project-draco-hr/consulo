{
  if (aClass == null || method instanceof ExternallyDefinedPsiElement)   return null;
  MethodSignature methodSignature=method.getSignature(PsiSubstitutor.EMPTY);
  int methodCount=1;
  List<PsiMethod> methods=(List<PsiMethod>)duplicateMethods.get(methodSignature);
  if (methods.size() > 1) {
    methodCount++;
  }
  if (methodCount == 1 && aClass.isEnum() && GenericsHighlightUtil.isEnumSyntheticMethod(methodSignature,aClass.getProject())) {
    methodCount++;
  }
  if (methodCount > 1) {
    String description=JavaErrorMessages.message("duplicate.method",JavaHighlightUtil.formatMethod(method),HighlightUtil.formatClass(aClass));
    TextRange textRange=HighlightNamesUtil.getMethodDeclarationTextRange(method);
    return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(method,textRange.getStartOffset(),textRange.getEndOffset()).descriptionAndTooltip(description).create();
  }
  return null;
}
