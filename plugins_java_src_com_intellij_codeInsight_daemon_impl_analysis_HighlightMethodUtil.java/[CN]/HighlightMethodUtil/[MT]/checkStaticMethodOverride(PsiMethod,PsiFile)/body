{
  if (method.isConstructor()) {
    return null;
  }
  PsiClass aClass=method.getContainingClass();
  if (aClass == null)   return null;
  PsiClass superClass=aClass.getSuperClass();
  PsiMethod superMethod=superClass == null ? null : MethodSignatureUtil.findMethodBySignature(superClass,method,true);
  boolean isStatic=method.hasModifierProperty(PsiModifier.STATIC);
  HighlightInfo highlightInfo=checkStaticMethodOverride(aClass,method,isStatic,superClass,superMethod,containingFile);
  if (highlightInfo != null)   return highlightInfo;
  if (!isStatic) {
    return null;
  }
  PsiClass[] interfaces=aClass.getInterfaces();
  for (  PsiClass aInterfaces : interfaces) {
    superClass=aInterfaces;
    superMethod=MethodSignatureUtil.findMethodInSuperClassBySignatureInDerived(aClass,superClass,method.getSignature(PsiSubstitutor.EMPTY),true);
    highlightInfo=checkStaticMethodOverride(aClass,method,true,superClass,superMethod,containingFile);
    if (highlightInfo != null)     return highlightInfo;
  }
  return null;
}
