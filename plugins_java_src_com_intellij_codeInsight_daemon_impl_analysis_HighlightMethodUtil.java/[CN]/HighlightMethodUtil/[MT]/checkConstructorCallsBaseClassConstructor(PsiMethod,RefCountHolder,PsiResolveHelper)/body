{
  if (!constructor.isConstructor())   return null;
  PsiClass aClass=constructor.getContainingClass();
  if (aClass == null)   return null;
  if (aClass.isEnum())   return null;
  PsiCodeBlock body=constructor.getBody();
  if (body == null)   return null;
  PsiElement element=new PsiMatcherImpl(body).firstChild(PsiMatchers.hasClass(PsiExpressionStatement.class)).firstChild(PsiMatchers.hasClass(PsiMethodCallExpression.class)).firstChild(PsiMatchers.hasClass(PsiReferenceExpression.class)).firstChild(PsiMatchers.hasClass(PsiKeyword.class)).getElement();
  if (element != null)   return null;
  TextRange textRange=HighlightNamesUtil.getMethodDeclarationTextRange(constructor);
  PsiClassType[] handledExceptions=constructor.getThrowsList().getReferencedTypes();
  HighlightInfo info=HighlightClassUtil.checkBaseClassDefaultConstructorProblem(aClass,refCountHolder,resolveHelper,textRange,handledExceptions);
  if (info != null) {
    QuickFixAction.registerQuickFixAction(info,QUICK_FIX_FACTORY.createInsertSuperFix(constructor));
    QuickFixAction.registerQuickFixAction(info,QUICK_FIX_FACTORY.createAddDefaultConstructorFix(aClass.getSuperClass()));
  }
  return info;
}
