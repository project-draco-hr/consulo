{
  if (!method.isConstructor()) {
    return null;
  }
  PsiCodeBlock body=method.getBody();
  PsiStatement[] statements=body == null ? null : body.getStatements();
  if (statements == null)   return null;
  Collection<PsiClassType> unhandled=ExceptionUtil.collectUnhandledExceptions(method,method.getContainingClass());
  if (unhandled.isEmpty())   return null;
  String description=HighlightUtil.getUnhandledExceptionsDescriptor(unhandled);
  TextRange textRange=HighlightNamesUtil.getMethodDeclarationTextRange(method);
  HighlightInfo highlightInfo=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(textRange).descriptionAndTooltip(description).create();
  for (  PsiClassType exception : unhandled) {
    QuickFixAction.registerQuickFixAction(highlightInfo,new LocalQuickFixOnPsiElementAsIntentionAdapter(QUICK_FIX_FACTORY.createMethodThrowsFix(method,exception,true,false)));
  }
  return highlightInfo;
}
