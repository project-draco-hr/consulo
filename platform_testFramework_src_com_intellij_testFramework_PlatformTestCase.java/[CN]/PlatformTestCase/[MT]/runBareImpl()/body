{
  final Throwable[] throwables=new Throwable[1];
  Runnable runnable=new Runnable(){
    @Override public void run(){
      ourTestThread=Thread.currentThread();
      ourTestTime=getTimeRequired();
      try {
        try {
          setUp();
        }
 catch (        Throwable e) {
          CompositeException result=new CompositeException(e);
          disposeProject(result);
          throw result;
        }
        try {
          myAssertionsInTestDetected=true;
          runTest();
          myAssertionsInTestDetected=false;
        }
 catch (        Throwable e) {
          throwables[0]=e;
          throw e;
        }
 finally {
          tearDown();
        }
      }
 catch (      Throwable throwable) {
        if (throwables[0] == null) {
          throwables[0]=throwable;
        }
      }
 finally {
        ourTestThread=null;
      }
    }
  }
;
  runBareRunnable(runnable);
  if (IdeaLogger.ourErrorsOccurred != null) {
    throw IdeaLogger.ourErrorsOccurred;
  }
  if (throwables[0] != null) {
    throw throwables[0];
  }
  waitForAllLaters();
  if (IdeaLogger.ourErrorsOccurred != null) {
    throw IdeaLogger.ourErrorsOccurred;
  }
}
