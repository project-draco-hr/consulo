{
  if (getName() == null)   return false;
  String moduleFilePath=getModuleFilePath();
  if (moduleFilePath == null)   return false;
  final File file=new File(moduleFilePath);
  if (file.exists()) {
    try {
      final ConversionResult result=ConversionService.getInstance().convertModule(dest,file);
      if (result.openingIsCanceled()) {
        return false;
      }
      final Document document=JDOMUtil.loadDocument(file);
      final Element root=document.getRootElement();
      final Set<String> usedMacros=PathMacrosCollector.getMacroNames(root);
      final Set<String> definedMacros=PathMacros.getInstance().getAllMacroNames();
      usedMacros.remove("$" + PathMacrosImpl.MODULE_DIR_MACRO_NAME + "$");
      usedMacros.removeAll(definedMacros);
      if (usedMacros.size() > 0) {
        final boolean ok=ProjectMacrosUtil.showMacrosConfigurationDialog(current,usedMacros);
        if (!ok) {
          return false;
        }
      }
    }
 catch (    JDOMException e) {
      Messages.showMessageDialog(e.getMessage(),IdeBundle.message("title.error.reading.file"),Messages.getErrorIcon());
      return false;
    }
catch (    IOException e) {
      Messages.showMessageDialog(e.getMessage(),IdeBundle.message("title.error.reading.file"),Messages.getErrorIcon());
      return false;
    }
  }
 else {
    Messages.showErrorDialog(current,IdeBundle.message("title.module.file.does.not.exist",moduleFilePath),CommonBundle.message("title.error"));
    return false;
  }
  return true;
}
