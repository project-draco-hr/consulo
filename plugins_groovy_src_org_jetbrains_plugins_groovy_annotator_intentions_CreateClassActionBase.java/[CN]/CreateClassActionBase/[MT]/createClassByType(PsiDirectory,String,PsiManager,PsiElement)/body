{
  return ApplicationManager.getApplication().runWriteAction(new Computable<PsiClass>(){
    public PsiClass compute(){
      try {
        PsiClass targetClass=null;
        try {
          PsiFile file=GroovyTemplatesFactory.createFromTemplate(directory,name,name + ".groovy","GroovyClass.groovy");
          for (          PsiElement element : file.getChildren()) {
            if (element instanceof PsiClass) {
              targetClass=((PsiClass)element);
              break;
            }
          }
          if (targetClass == null) {
            throw new IncorrectOperationException(GroovyBundle.message("no.class.in.file.template"));
          }
        }
 catch (        final IncorrectOperationException e) {
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            public void run(){
              Messages.showErrorDialog(GroovyBundle.message("cannot.create.class.error.text",name,e.getLocalizedMessage()),GroovyBundle.message("cannot.create.class.error.title"));
            }
          }
);
          return null;
        }
        PsiModifierList modifiers=targetClass.getModifierList();
        if (!JavaPsiFacade.getInstance(manager.getProject()).getResolveHelper().isAccessible(targetClass,contextElement,null) && modifiers != null) {
          modifiers.setModifierProperty(PsiKeyword.PUBLIC,true);
        }
        return targetClass;
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
        return null;
      }
    }
  }
);
}
