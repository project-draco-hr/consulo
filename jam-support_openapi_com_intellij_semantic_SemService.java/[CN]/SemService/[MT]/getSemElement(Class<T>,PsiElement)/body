{
  final ConcurrentMap<Class,SemElement> map=myCache.get(psi);
  final T cached=(T)map.get(c);
  if (cached != null) {
    return cached;
  }
  final NullableFunction<PsiElement,? extends SemElement> function=myProducers.get(c);
  if (function == null) {
    return null;
  }
  final SemElement element=function.fun(psi);
  if (element == null) {
    return null;
  }
  return (T)ConcurrencyUtil.cacheOrGet(map,c,element);
}
