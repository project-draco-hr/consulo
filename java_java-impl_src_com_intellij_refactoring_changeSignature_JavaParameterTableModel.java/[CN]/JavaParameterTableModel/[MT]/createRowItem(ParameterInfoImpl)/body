{
  if (parameterInfo == null) {
    parameterInfo=new ParameterInfoImpl(-1);
  }
  PsiElementFactory f=JavaPsiFacade.getInstance(myProject).getElementFactory();
  final PsiTypeCodeFragment paramTypeCodeFragment=f.createTypeCodeFragment(parameterInfo.getTypeText(),myTypeContext,false,true,true);
  final CanonicalTypes.Type paramType=parameterInfo.getTypeWrapper();
  if (paramType != null) {
    paramType.addImportsTo(paramTypeCodeFragment);
  }
  PsiExpressionCodeFragment defaultValueCodeFragment=f.createExpressionCodeFragment(parameterInfo.getDefaultValue(),myDefaultValueContext,null,true);
  defaultValueCodeFragment.setVisibilityChecker(JavaCodeFragment.VisibilityChecker.EVERYTHING_VISIBLE);
  return new ParameterTableModelItemBase<ParameterInfoImpl>(parameterInfo,paramTypeCodeFragment,defaultValueCodeFragment){
    @Override public boolean isEllipsisType(){
      try {
        return paramTypeCodeFragment.getType() instanceof PsiEllipsisType;
      }
 catch (      PsiTypeCodeFragment.TypeSyntaxException e) {
        return false;
      }
catch (      PsiTypeCodeFragment.NoTypeException e) {
        return false;
      }
    }
  }
;
}
