{
  new MnemonicHelper().register(getContentPane());
  ButtonGroup group=new ButtonGroup();
  group.add(myRbDoNotImport);
  group.add(myRbImport);
  group.add(myRbImportAuto);
  myRbDoNotImport.setSelected(true);
  final ApplicationNamesInfo namesInfo=ApplicationNamesInfo.getInstance();
  final String productName=namesInfo.getProductName().equals("IDEA") ? namesInfo.getFullProductName() : namesInfo.getProductName();
  mySuggestLabel.setText(ApplicationBundle.message("label.you.can.import",productName));
  myRbDoNotImport.setText(ApplicationBundle.message("radio.do.not.import",productName));
  if (myGuessedOldConfig != null) {
    myRbImportAuto.setText(ApplicationBundle.message("radio.import.auto",myGuessedOldConfig.getAbsolutePath().replace(SystemProperties.getUserHome(),"~")));
    myRbImportAuto.setSelected(true);
  }
 else {
    myRbImportAuto.setVisible(false);
  }
  myHomeLabel.setText(ApplicationBundle.message("editbox.installation.home",productName));
  myRbImport.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      update();
    }
  }
);
  if (myGuessedOldConfig != null) {
    myPrevInstallation.setText(myGuessedOldConfig.getParent());
  }
  if (SystemInfo.isMac) {
    myPrevInstallation.setText(findPreviousInstallationMac(productName));
  }
 else   if (SystemInfo.isWindows) {
    String prevInstall=findPreviousInstallationWindows(productName);
    if (prevInstall != null) {
      myPrevInstallation.setText(prevInstall);
    }
  }
  myPrevInstallation.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      JFileChooser fc=new JFileChooser();
      if (myLastSelection != null) {
        fc=new JFileChooser(myLastSelection);
      }
      fc.setFileSelectionMode(SystemInfo.isMac ? JFileChooser.FILES_AND_DIRECTORIES : JFileChooser.DIRECTORIES_ONLY);
      int returnVal=fc.showOpenDialog(ImportOldConfigsPanel.this);
      if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file=fc.getSelectedFile();
        if (file != null) {
          myLastSelection=file;
          myPrevInstallation.setText(file.getAbsolutePath());
        }
      }
    }
  }
);
  myOkButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      close();
    }
  }
);
  getContentPane().setLayout(new BorderLayout());
  getContentPane().add(myRootPanel);
  getRootPane().setDefaultButton(myOkButton);
  setTitle(ApplicationBundle.message("title.complete.installation"));
  update();
  pack();
  Dimension parentSize=Toolkit.getDefaultToolkit().getScreenSize();
  Dimension ownSize=getPreferredSize();
  setLocation((parentSize.width - ownSize.width) / 2,(parentSize.height - ownSize.height) / 2);
}
