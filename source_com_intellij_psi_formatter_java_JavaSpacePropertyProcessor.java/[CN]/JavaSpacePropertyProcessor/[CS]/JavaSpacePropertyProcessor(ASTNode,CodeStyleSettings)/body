{
  init(child);
  mySettings=settings;
  myImportHelper=new ImportHelper(mySettings);
  if (myChild1.getPsi().getLanguage() != StdLanguages.JAVA || myChild2.getPsi().getLanguage() != StdLanguages.JAVA) {
    return;
  }
  if (myChild2 != null && mySettings.KEEP_FIRST_COLUMN_COMMENT && ElementType.COMMENT_BIT_SET.contains(myChild2.getElementType())) {
    myResult=Spacing.createKeepingFirstColumnSpacing(0,Integer.MAX_VALUE,true,1);
  }
 else {
    if (myParent != null) {
      myParent.accept(this);
      if (myResult == null) {
        final ASTNode prev=getPrevElementType(myChild2);
        if (prev != null && prev.getElementType() == ElementType.END_OF_LINE_COMMENT) {
          myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
        }
 else         if (!CodeEditUtil.canStickChildrenTogether(myChild1,myChild2)) {
          myResult=Spacing.createSpacing(1,Integer.MIN_VALUE,0,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
        }
 else         if (myChild1.getElementType() == ElementType.C_STYLE_COMMENT) {
          myResult=null;
        }
 else         if (!shouldKeepSpace(myParent)) {
          myResult=Spacing.createSpacing(0,0,0,true,0);
        }
      }
    }
  }
}
