{
  final Marker onSelectedHappend=new Marker();
  final Ref<RTestUnitTestProxy> proxyRef=new Ref<RTestUnitTestProxy>();
  final Ref<Boolean> focusRequestedRef=new Ref<Boolean>();
  myRTestUnitStatisticsPanel.addSelectionListener(new RTestUnitTestProxySelectionListener(){
    public void onSelected(    @Nullable final RTestUnitTestProxy selectedTestProxy,    final boolean requestFocus){
      onSelectedHappend.set();
      proxyRef.set(selectedTestProxy);
      focusRequestedRef.set(requestFocus);
    }
  }
);
  final RTestUnitTestProxy rootSuite=createSuiteProxy("rootSuite");
  final RTestUnitTestProxy suite1=createSuiteProxy("suite1",rootSuite);
  final RTestUnitTestProxy test1=createTestProxy("test1",suite1);
  mySelectionListener.onSelected(suite1);
  myRTestUnitStatisticsPanel.selectRow(1);
  assertEquals(test1,myRTestUnitStatisticsPanel.getSelectedItem());
  myRTestUnitStatisticsPanel.createChangeSelectionAction().run();
  assertTrue(onSelectedHappend.isSet());
  assertEquals(test1,proxyRef.get());
  assertTrue(focusRequestedRef.get());
  onSelectedHappend.reset();
  proxyRef.set(null);
  focusRequestedRef.set(null);
  mySelectionListener.onSelected(rootSuite);
  myRTestUnitStatisticsPanel.selectRow(1);
  assertEquals(suite1,myRTestUnitStatisticsPanel.getSelectedItem());
  myRTestUnitStatisticsPanel.createChangeSelectionAction().run();
  assertTrue(onSelectedHappend.isSet());
  assertEquals(suite1,proxyRef.get());
  assertTrue(focusRequestedRef.get());
  onSelectedHappend.reset();
  proxyRef.set(null);
  focusRequestedRef.set(null);
  mySelectionListener.onSelected(rootSuite);
  myRTestUnitStatisticsPanel.selectRow(0);
  assertEquals(rootSuite,myRTestUnitStatisticsPanel.getSelectedItem());
  myRTestUnitStatisticsPanel.createChangeSelectionAction().run();
  assertTrue(onSelectedHappend.isSet());
  assertEquals(rootSuite,proxyRef.get());
  assertTrue(focusRequestedRef.get());
}
