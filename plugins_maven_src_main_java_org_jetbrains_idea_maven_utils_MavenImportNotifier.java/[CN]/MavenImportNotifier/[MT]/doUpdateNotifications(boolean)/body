{
  if (close) {
    if (myNotification == null)     return;
    myNotification.expire();
    myNotification=null;
  }
 else {
    if (myNotification != null && !myNotification.isExpired())     return;
    myNotification=new Notification(MAVEN_IMPORT_NOTIFICATION_GROUP,ProjectBundle.message("maven.project.changed"),"<a href='reimport'>" + ProjectBundle.message("maven.project.importChanged") + "</a> "+ "<a href='autoImport'>"+ ProjectBundle.message("maven.project.enableAutoImport")+ "</a>",NotificationType.INFORMATION,new NotificationListener(){
      @Override public void hyperlinkUpdate(      @NotNull Notification notification,      @NotNull HyperlinkEvent event){
        if (event.getEventType() != HyperlinkEvent.EventType.ACTIVATED)         return;
        if (event.getDescription().equals("reimport")) {
          myMavenProjectsManager.scheduleImportAndResolve();
        }
        if (event.getDescription().equals("autoImport")) {
          myMavenProjectsManager.getImportingSettings().setImportAutomatically(true);
        }
        notification.expire();
        myNotification=null;
      }
    }
);
    Notifications.Bus.notify(myNotification,myProject);
  }
}
