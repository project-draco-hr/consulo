{
  if (myRequiredLibraries == null) {
    return ValidationResult.OK;
  }
  ModuleRootModel rootModel=myContext.getRootModel();
  List<VirtualFile> usedLibraries=collectRoots(rootModel);
  RequiredLibrariesInfo.RequiredClassesNotFoundInfo info=myRequiredLibraries.checkLibraries(usedLibraries.toArray(new VirtualFile[usedLibraries.size()]));
  if (info == null) {
    return ValidationResult.OK;
  }
  StringBuilder missedJarsText=new StringBuilder(IdeBundle.message("label.missed.libraries.prefix"));
  missedJarsText.append(' ');
  for (int i=0; i < info.getLibraryInfos().length; i++) {
    if (i > 0) {
      missedJarsText.append(", ");
    }
    missedJarsText.append(info.getLibraryInfos()[i].getExpectedJarName());
  }
  final String text=IdeBundle.message("label.missed.libraries.text",missedJarsText,info.getClassNames()[0]);
  return new ValidationResult(text,new LibrariesQuickFix(info.getLibraryInfos()));
}
