{
  super(new BorderLayout());
  myInsight=insight;
  myEntriesChooser=new ElementsChooser<T>(true){
    public String getItemText(    T element){
      return getElementText(element);
    }
  }
;
  myDependenciesList=createList();
  final Splitter splitter=new Splitter(false);
  final JPanel entriesPanel=new JPanel(new BorderLayout());
  entriesPanel.add(createEntriesActionToolbar().getComponent(),BorderLayout.NORTH);
  entriesPanel.add(new JScrollPane(myEntriesChooser),BorderLayout.CENTER);
  splitter.setFirstComponent(entriesPanel);
  splitter.setSecondComponent(new JScrollPane(myDependenciesList));
  add(splitter,BorderLayout.CENTER);
  myEntriesChooser.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    final ListSelectionEvent e){
      final List<T> entries=getSelectedEntries();
      final Collection deps=getDependencies(entries);
      final DefaultListModel depsModel=(DefaultListModel)myDependenciesList.getModel();
      depsModel.clear();
      for (      Object dep : alphaSortList(new ArrayList(deps))) {
        depsModel.addElement(dep);
      }
    }
  }
);
}
