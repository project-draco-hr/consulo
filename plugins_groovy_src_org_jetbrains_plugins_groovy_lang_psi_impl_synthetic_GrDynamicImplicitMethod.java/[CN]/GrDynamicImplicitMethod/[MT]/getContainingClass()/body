{
  return ApplicationManager.getApplication().runReadAction(new Computable<PsiClass>(){
    @Override public PsiClass compute(){
      try {
        final GrTypeElement typeElement=GroovyPsiElementFactory.getInstance(getProject()).createTypeElement(myContainingClassName);
        if (typeElement == null)         return null;
        final PsiType type=typeElement.getType();
        if (!(type instanceof PsiClassType))         return null;
        return ((PsiClassType)type).resolve();
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
        return null;
      }
    }
  }
);
}
