{
{
    final CompletionVariant variant=new CompletionVariant(PsiJavaFile.class,new StartElementFilter());
    variant.addCompletion(PsiKeyword.PACKAGE);
    this.registerVariant(variant);
  }
{
    final CompletionVariant variant=new CompletionVariant(PsiJavaFile.class,new OrFilter(new StartElementFilter(),END_OF_BLOCK));
    variant.addCompletion(PsiKeyword.IMPORT);
    this.registerVariant(variant);
  }
{
    final ElementFilter position=new OrFilter(new ElementFilter[]{END_OF_BLOCK,new LeftNeighbour(new TextFilter(MODIFIERS_LIST)),new StartElementFilter()});
    final CompletionVariant variant=new CompletionVariant(PsiJavaFile.class,position);
    variant.includeScopeClass(PsiClass.class);
    variant.addCompletion(PsiKeyword.CLASS);
    variant.addCompletion(PsiKeyword.INTERFACE);
    registerVariant(variant);
  }
{
    final CompletionVariant variant=new CompletionVariant(PsiTypeCodeFragment.class,new StartElementFilter());
    addPrimitiveTypes(variant,TailType.NONE);
    final CompletionVariant variant1=new CompletionVariant(PsiTypeCodeFragment.class,new AndFilter(new StartElementFilter(),new TypeCodeFragmentIsVoidEnabledFilter()));
    variant1.addCompletion(PsiKeyword.VOID,TailType.NONE);
    registerVariant(variant);
    registerVariant(variant1);
  }
}
