{
  GradleOutdatedLibraryManager manager=ServiceManager.getService(project,GradleOutdatedLibraryManager.class);
  GradleEntityManageHelper helper=ServiceManager.getService(project,GradleEntityManageHelper.class);
  List<GradleProjectStructureNode<?>> outdatedLibraryNodes=ContainerUtilRt.newArrayList();
  Set<GradleProjectStructureChange> conflictChanges=ContainerUtilRt.newHashSet();
  for (  GradleProjectStructureNode<?> node : nodes) {
    if (GradleTextAttributes.OUTDATED_ENTITY.equals(node.getDescriptor().getAttributes())) {
      outdatedLibraryNodes.add(node);
    }
    conflictChanges.addAll(node.getConflictChanges());
  }
  if (!outdatedLibraryNodes.isEmpty()) {
    manager.sync(nodes);
  }
  if (!conflictChanges.isEmpty()) {
    helper.eliminateChange(conflictChanges,Collections.<GradleUserProjectChange>emptySet(),true);
  }
}
