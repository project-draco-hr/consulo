{
  OutdatedLibraryManager manager=ServiceManager.getService(project,OutdatedLibraryManager.class);
  EntityManageHelper helper=ServiceManager.getService(project,EntityManageHelper.class);
  List<ProjectStructureNode<?>> outdatedLibraryNodes=ContainerUtilRt.newArrayList();
  Set<ExternalProjectStructureChange> conflictChanges=ContainerUtilRt.newHashSet();
  for (  ProjectStructureNode<?> node : nodes) {
    if (ExternalSystemTextAttributes.OUTDATED_ENTITY.equals(node.getDescriptor().getAttributes())) {
      outdatedLibraryNodes.add(node);
    }
    conflictChanges.addAll(node.getConflictChanges());
  }
  if (!outdatedLibraryNodes.isEmpty()) {
    manager.sync(nodes);
  }
  if (!conflictChanges.isEmpty()) {
    helper.eliminateChange(conflictChanges,Collections.<UserProjectChange>emptySet(),true);
  }
}
