{
  final Object userObject=((DefaultMutableTreeNode)value).getUserObject();
  if (!(userObject instanceof MigrationNode))   return;
  final TypeMigrationUsageInfo usageInfo=((MigrationNode)userObject).getInfo();
  if (usageInfo != null) {
    final PsiElement element=usageInfo.getElement();
    if (element != null) {
      PsiElement typeElement=null;
      if (element instanceof PsiVariable) {
        typeElement=((PsiVariable)element).getTypeElement();
      }
 else       if (element instanceof PsiMethod) {
        typeElement=((PsiMethod)element).getReturnTypeElement();
      }
      if (typeElement == null)       typeElement=element;
      PsiDocumentManager.getInstance(element.getProject()).commitAllDocuments();
      final UsagePresentation presentation=UsageInfoToUsageConverter.convert(new UsageInfoToUsageConverter.TargetElementsDescriptor(typeElement),new UsageInfo(typeElement)).getPresentation();
      boolean isPrefix=true;
      for (      TextChunk chunk : presentation.getText()) {
        if (!isPrefix)         append(chunk.getText(),patchAttrs(usageInfo,chunk.getSimpleAttributesIgnoreBackground()));
        isPrefix=false;
      }
      setIcon(presentation.getIcon());
      String location;
      if (element instanceof PsiMember) {
        location=SymbolPresentationUtil.getSymbolContainerText(element);
      }
 else {
        final PsiMember member=PsiTreeUtil.getParentOfType(element,PsiMember.class);
        if (member instanceof PsiField) {
          location=PsiFormatUtil.formatVariable((PsiVariable)member,PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_FQ_NAME,PsiSubstitutor.EMPTY);
        }
 else         if (member instanceof PsiMethod) {
          location=PsiFormatUtil.formatMethod((PsiMethod)member,PsiSubstitutor.EMPTY,PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_FQ_NAME,PsiFormatUtilBase.SHOW_TYPE);
        }
 else         if (member instanceof PsiClass) {
          location=PsiFormatUtil.formatClass((PsiClass)member,PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_FQ_NAME);
        }
 else {
          location=null;
        }
        if (location != null)         location=PsiBundle.message("aux.context.display",location);
      }
      if (location != null) {
        append(location,SimpleTextAttributes.GRAYED_ATTRIBUTES);
      }
    }
 else {
      append(UsageViewBundle.message("node.invalid"),SimpleTextAttributes.ERROR_ATTRIBUTES);
    }
  }
}
