{
  final PsiTypeParameterListOwner owner=typeParameter.getOwner();
  if (owner instanceof PsiClass) {
    final PsiClass ownerClass=((PsiClass)owner);
    final LocalSearchScope derivedScope=new LocalSearchScope(inheritingClass);
    final PsiSubstitutor substitutor=TypeConversionUtil.getClassSubstitutor(ownerClass,inheritingClass,PsiSubstitutor.EMPTY);
    if (substitutor == null)     return;
    final LocalSearchScope baseScope=new LocalSearchScope(ownerClass);
    ReferencesSearch.search(typeParameter,baseScope).forEach(new Processor<PsiReference>(){
      public boolean process(      final PsiReference ref){
        final PsiElement element=ref.getElement();
        final PsiElement parent=element.getParent();
        if (parent instanceof PsiTypeElement) {
          final PsiElement pparent=parent.getParent();
          if (pparent instanceof PsiMethod && parent.equals(((PsiMethod)pparent).getReturnTypeElement())) {
            final PsiMethod method=(PsiMethod)pparent;
            final MethodSignature signature=method.getSignature(substitutor);
            if (PsiUtil.isAccessible(method,inheritingClass,null)) {
              final PsiMethod inInheritor=MethodSignatureUtil.findMethodBySignature(inheritingClass,signature,false);
              if (inInheritor != null && inInheritor.getReturnTypeElement() != null) {
                addLink(instantiation,method.getReturnTypeElement());
                addLink(method.getReturnTypeElement(),instantiation);
              }
            }
          }
 else           if (pparent instanceof PsiParameter) {
            final PsiParameter parameter=(PsiParameter)pparent;
            if (parameter.getDeclarationScope() instanceof PsiMethod) {
              PsiMethod method=(PsiMethod)parameter.getDeclarationScope();
              final int index=((PsiParameterList)parameter.getParent()).getParameterIndex(parameter);
              final MethodSignature signature=method.getSignature(substitutor);
              if (PsiUtil.isAccessible(method,inheritingClass,null)) {
                final PsiMethod inInheritor=MethodSignatureUtil.findMethodBySignature(inheritingClass,signature,false);
                if (inInheritor != null) {
                  final PsiParameter[] inheritorParams=inInheritor.getParameterList().getParameters();
                  LOG.assertTrue(inheritorParams.length > index);
                  final PsiTypeElement hisTypeElement=inheritorParams[index].getTypeElement();
                  addLink(instantiation,hisTypeElement);
                  addLink(hisTypeElement,instantiation);
                }
              }
            }
          }
        }
        return true;
      }
    }
);
  }
}
