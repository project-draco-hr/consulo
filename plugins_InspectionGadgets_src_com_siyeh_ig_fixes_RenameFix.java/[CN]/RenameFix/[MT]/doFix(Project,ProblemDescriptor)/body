{
  final PsiElement nameIdentifier=descriptor.getPsiElement();
  final PsiElement elementToRename=nameIdentifier.getParent();
  if (m_targetName == null) {
    final DataManager dataManager=DataManager.getInstance();
    final DataContext dataContext=dataManager.getDataContext();
    final RenameHandler renameHandler=RenameHandlerRegistry.getInstance().getRenameHandler(dataContext);
    if (renameHandler == null)     return;
    Runnable runnable=new Runnable(){
      public void run(){
        renameHandler.invoke(project,new PsiElement[]{elementToRename},dataContext);
      }
    }
;
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      runnable.run();
    }
 else {
      ApplicationManager.getApplication().invokeLater(runnable,project.getDisposed());
    }
  }
 else {
    final RefactoringFactory factory=RefactoringFactory.getInstance(project);
    final RenameRefactoring renameRefactoring=factory.createRename(elementToRename,m_targetName,m_searchInStrings,m_searchInNonJavaFiles);
    renameRefactoring.run();
  }
}
