{
  GrOpenBlock body=method.getBlock();
  if (body == null)   return null;
  method.putCopyableUserData(ResolveUtil.IS_BEING_RESOLVED,true);
  List<GrReturnStatement> returns=new ArrayList<GrReturnStatement>();
  collectReturns(body,returns);
  PsiType result=null;
  PsiManager manager=method.getManager();
  for (  GrReturnStatement returnStatement : returns) {
    GrExpression value=returnStatement.getReturnValue();
    if (value != null) {
      result=upperBound(result,value.getType(),manager);
    }
  }
  boolean isVoid=returns.size() == 0;
  GrStatement[] statements=body.getStatements();
  if (statements.length > 0) {
    GrStatement last=statements[statements.length - 1];
    if (last instanceof GrExpression) {
      result=upperBound(((GrExpression)last).getType(),result,manager);
      isVoid=false;
    }
  }
  method.putCopyableUserData(ResolveUtil.IS_BEING_RESOLVED,null);
  if (isVoid)   return PsiType.VOID;
  return result;
}
