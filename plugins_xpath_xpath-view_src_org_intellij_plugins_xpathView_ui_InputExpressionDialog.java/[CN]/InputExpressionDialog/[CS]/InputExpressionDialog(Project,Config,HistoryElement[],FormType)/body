{
  super(project,false);
  myProject=project;
  myForm=form;
  setResizable(true);
  setModal(true);
  setHorizontalStretch(1.3f);
  mySettings=settings;
  myDocument=createXPathDocument(project,_history.length > 0 ? _history[_history.length - 1] : null);
  myXPathFile=PsiDocumentManager.getInstance(myProject).getPsiFile(myDocument);
  myModel=new HistoryModel(_history,myDocument);
  myEditor=new MultilineEditor(myDocument,project,XPathFileType.XPATH,myModel);
  myModel.addListDataListener(new ListDataListener(){
    final PsiDocumentManager docMgr=PsiDocumentManager.getInstance(project);
    final DaemonCodeAnalyzer analyzer=DaemonCodeAnalyzer.getInstance(project);
    public void intervalAdded(    ListDataEvent e){
    }
    public void intervalRemoved(    ListDataEvent e){
    }
    public void contentsChanged(    ListDataEvent e){
      final HistoryElement item=myModel.getSelectedItem();
      if (item != null) {
        myContextProvider.getNamespaceContext().setMap(asMap(item.namespaces));
        if (myXPathFile != null) {
          analyzer.restart(myXPathFile);
        }
      }
    }
  }
);
  myComboboxEditor=new EditorTextField(myDocument,project,XPathFileType.XPATH);
  myComboBox.setRenderer(new ListCellRendererWrapper<HistoryElement>(){
    @Override public void customize(    JList list,    HistoryElement value,    int index,    boolean selected,    boolean hasFocus){
      setText(value != null ? value.expression : "");
    }
  }
);
  myComboBox.setModel(myModel);
  myComboBox.setEditor(new EditorAdapter(myComboboxEditor));
  myComboBox.setEditable(true);
  myDocument.addDocumentListener(new DocumentAdapter(){
    public void documentChanged(    DocumentEvent e){
      updateOkAction();
    }
  }
);
  init();
}
