{
  ArrayList<Trinity<FileNameMatcher,String,Boolean>> result=new ArrayList<Trinity<FileNameMatcher,String,Boolean>>();
  List removedMappings=e.getChildren(ELEMENT_REMOVED_MAPPING);
  for (  Object removedMapping : removedMappings) {
    Element mapping=(Element)removedMapping;
    String ext=mapping.getAttributeValue(ATTRIBUTE_EXT);
    String pattern=mapping.getAttributeValue(ATTRIBUTE_PATTERN);
    String approved=mapping.getAttributeValue(ATTRIBUTE_APPROVED);
    FileNameMatcher matcher=ext != null ? new ExtensionFileNameMatcher(ext) : FileTypeManager.parseFromString(pattern);
    result.add(new Trinity<FileNameMatcher,String,Boolean>(matcher,mapping.getAttributeValue(ATTRIBUTE_TYPE),Boolean.parseBoolean(approved)));
  }
  return result;
}
