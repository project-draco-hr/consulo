{
  RefsModel refsModel;
  PermanentGraph<Integer> permanentGraph;
  if (commits.isEmpty()) {
    refsModel=new RefsModel(refs,ContainerUtil.<Integer>newHashSet(),hashMap,providers);
    permanentGraph=EmptyPermanentGraph.getInstance();
  }
 else {
    refsModel=new RefsModel(refs,getHeads(commits),hashMap,providers);
    Function<Integer,Hash> hashGetter=createHashGetter(hashMap);
    GraphColorManagerImpl colorManager=new GraphColorManagerImpl(refsModel,hashGetter,getRefManagerMap(providers));
    Set<Integer> branches=getBranchCommitHashIndexes(refsModel.getBranches(),hashMap);
    StopWatch sw=StopWatch.start("building graph");
    permanentGraph=PermanentGraphImpl.newInstance(commits,colorManager,branches);
    sw.report();
  }
  return new DataPack(refsModel,permanentGraph,providers,full);
}
