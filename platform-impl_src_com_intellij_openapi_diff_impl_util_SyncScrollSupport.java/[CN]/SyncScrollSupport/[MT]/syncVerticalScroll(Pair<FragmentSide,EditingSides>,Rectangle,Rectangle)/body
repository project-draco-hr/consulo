{
  if (newRectangle.y == oldRectangle.y && newRectangle.height == oldRectangle.height)   return;
  EditingSides sidesContainer=context.getSecond();
  FragmentSide masterSide=context.getFirst();
  Editor master=sidesContainer.getEditor(masterSide);
  Editor slave=sidesContainer.getEditor(masterSide.otherSide());
  if (master == null || slave == null)   return;
  Rectangle viewRect=master.getScrollingModel().getVisibleArea();
  int middleY=viewRect.height / 3;
  int masterVerticalScrollOffset=getScrollOffset(master);
  int slaveVerticalScrollOffset=getScrollOffset(slave);
  LogicalPosition masterPos=master.xyToLogicalPosition(new Point(viewRect.x,masterVerticalScrollOffset + middleY));
  int masterCenterLine=masterPos.line;
  if (masterCenterLine > master.getDocument().getLineCount()) {
    masterCenterLine=master.getDocument().getLineCount();
  }
  int scrollToLine=sidesContainer.getLineBlocks().transform(masterSide,masterCenterLine) + 1;
  int actualLine=scrollToLine - 1;
  slave.getScrollingModel().disableAnimation();
  if (scrollToLine <= 0) {
    int offset=newRectangle.y - oldRectangle.y;
    slave.getScrollingModel().scrollVertically(slaveVerticalScrollOffset + offset);
  }
  int correction=(masterVerticalScrollOffset + middleY) % master.getLineHeight();
  int scrollOffset=actualLine * slave.getLineHeight() - middleY;
  slave.getScrollingModel().scrollVertically(scrollOffset + correction);
  slave.getScrollingModel().enableAnimation();
}
