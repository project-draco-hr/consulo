{
  String reportFileName="perf_" + ApplicationInfo.getInstance().getBuild().asString() + "_"+ SystemProperties.getUserName()+ "_"+ myDateFormat.format(new Date())+ ".zip";
  final File reportPath=new File(SystemProperties.getUserHome(),reportFileName);
  final File logDir=new File(PathManager.getLogPath());
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  final boolean[] archiveCreated=new boolean[1];
  final boolean completed=ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      try {
        ZipOutputStream zip=new ZipOutputStream(new FileOutputStream(reportPath));
        ZipUtil.addDirToZipRecursively(zip,reportPath,logDir,"",new FileFilter(){
          public boolean accept(          final File pathname){
            ProgressManager.checkCanceled();
            if (logDir.equals(pathname.getParentFile())) {
              return pathname.getPath().contains("threadDumps");
            }
            return true;
          }
        }
,null);
        zip.close();
        archiveCreated[0]=true;
      }
 catch (      final IOException ex) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            Messages.showErrorDialog(project,"Failed to create performance report archive: " + ex.getMessage(),MESSAGE_TITLE);
          }
        }
);
      }
    }
  }
,"Collecting Performance Report data",true,project);
  if (!completed || !archiveCreated[0]) {
    return;
  }
  int rc=Messages.showYesNoDialog(project,"The performance report has been saved to\n" + reportPath + "\n\nWould you like to submit it to JetBrains?",MESSAGE_TITLE,Messages.getQuestionIcon());
  if (rc == 0) {
    ProgressManager.getInstance().run(new Task.Backgroundable(project,"Uploading Performance Report"){
      public void run(      @NotNull final ProgressIndicator indicator){
        final String error=uploadFileToFTP(reportPath,"ftp.intellij.net",".uploads",indicator);
        if (error != null) {
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            public void run(){
              Messages.showErrorDialog(error,MESSAGE_TITLE);
            }
          }
);
        }
      }
    }
);
  }
}
