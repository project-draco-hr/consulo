{
  mxIGraphModel model=graph.getModel();
  mxGraphView view=graph.getView();
  boolean isValid=true;
  int childCount=model.getChildCount(cell);
  for (int i=0; i < childCount; i++) {
    Object tmp=model.getChildAt(cell,i);
    Hashtable<Object,Object> ctx=context;
    if (graph.isValidRoot(tmp)) {
      ctx=new Hashtable<Object,Object>();
    }
    String warn=validateGraph(tmp,ctx);
    if (warn != null) {
      String html=warn.replaceAll("\n","<br>");
      int len=html.length();
      setCellWarning(tmp,html.substring(0,Math.max(0,len - 4)));
    }
 else {
      setCellWarning(tmp,null);
    }
    isValid=isValid && warn == null;
  }
  StringBuffer warning=new StringBuffer();
  if (graph.isCellCollapsed(cell) && !isValid) {
    warning.append(mxResources.get("containsValidationErrors","Contains Validation Errors") + "\n");
  }
  if (model.isEdge(cell)) {
    String tmp=graph.getEdgeValidationError(cell,model.getTerminal(cell,true),model.getTerminal(cell,false));
    if (tmp != null) {
      warning.append(tmp);
    }
  }
 else {
    String tmp=graph.getCellValidationError(cell);
    if (tmp != null) {
      warning.append(tmp);
    }
  }
  String err=graph.validateCell(cell,context);
  if (err != null) {
    warning.append(err);
  }
  if (model.getParent(cell) == null) {
    view.validate();
  }
  return (warning.length() > 0 || !isValid) ? warning.toString() : null;
}
