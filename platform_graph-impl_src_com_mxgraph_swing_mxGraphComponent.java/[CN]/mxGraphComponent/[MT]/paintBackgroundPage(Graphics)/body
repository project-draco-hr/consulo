{
  mxPoint translate=graph.getView().getTranslate();
  double scale=graph.getView().getScale();
  int x0=(int)Math.round(translate.getX() * scale) - 1;
  int y0=(int)Math.round(translate.getY() * scale) - 1;
  Dimension d=getPreferredSizeForPage();
  int w=(int)Math.round(d.width * scale) + 2;
  int h=(int)Math.round(d.height * scale) + 2;
  if (isPageVisible()) {
    Color c=getPageBackgroundColor();
    if (c != null) {
      g.setColor(c);
      mxUtils.fillClippedRect(g,0,0,getGraphControl().getWidth(),getGraphControl().getHeight());
    }
    c=getPageShadowColor();
    if (c != null) {
      g.setColor(c);
      mxUtils.fillClippedRect(g,x0 + w,y0 + 6,6,h - 6);
      mxUtils.fillClippedRect(g,x0 + 8,y0 + h,w - 2,6);
    }
    Color bg=getBackground();
    if (getViewport().isOpaque()) {
      bg=getViewport().getBackground();
    }
    g.setColor(bg);
    mxUtils.fillClippedRect(g,x0 + 1,y0 + 1,w,h);
    c=getPageBorderColor();
    if (c != null) {
      g.setColor(c);
      g.drawRect(x0,y0,w,h);
    }
  }
  if (isPageBreaksVisible() && (horizontalPageCount > 1 || verticalPageCount > 1)) {
    Graphics2D g2=(Graphics2D)g;
    Stroke previousStroke=g2.getStroke();
    g2.setStroke(new BasicStroke(1,BasicStroke.CAP_BUTT,BasicStroke.JOIN_MITER,10.0f,new float[]{1,2},0));
    g2.setColor(pageBreakColor);
    for (int i=1; i <= horizontalPageCount - 1; i++) {
      int dx=i * w / horizontalPageCount;
      g2.drawLine(x0 + dx,y0 + 1,x0 + dx,y0 + h);
    }
    for (int i=1; i <= verticalPageCount - 1; i++) {
      int dy=i * h / verticalPageCount;
      g2.drawLine(x0 + 1,y0 + dy,x0 + w,y0 + dy);
    }
    g2.setStroke(previousStroke);
  }
  return new Rectangle(x0,y0,w,h);
}
