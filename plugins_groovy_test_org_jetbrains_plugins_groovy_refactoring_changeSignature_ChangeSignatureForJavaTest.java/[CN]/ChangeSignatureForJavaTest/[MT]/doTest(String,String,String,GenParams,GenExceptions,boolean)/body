{
  myFixture.configureByFile(getTestName(false) + ".groovy");
  myFixture.configureByFile(getTestName(false) + ".java");
  final PsiElement targetElement=TargetElementUtilBase.findTargetElement(myFixture.getEditor(),TargetElementUtilBase.ELEMENT_NAME_ACCEPTED);
  assertTrue("<caret> is not on method name",targetElement instanceof PsiMethod);
  PsiMethod method=(PsiMethod)targetElement;
  final PsiElementFactory factory=JavaPsiFacade.getInstance(getProject()).getElementFactory();
  PsiType newType=newReturnType != null ? factory.createTypeFromText(newReturnType,method) : method.getReturnType();
  new ChangeSignatureProcessor(getProject(),method,generateDelegate,newVisibility,newName != null ? newName : method.getName(),newType,genParams.genParams(method),genExceptions.genExceptions(method)).run();
  myFixture.checkResultByFile(getTestName(false) + ".groovy",getTestName(false) + "_after.groovy",true);
}
