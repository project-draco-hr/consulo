{
  if (GroovyPropertyUtils.isSimplePropertySetter(prototype)) {
    String propertyName=GroovyPropertyUtils.getPropertyNameBySetter(prototype);
    PsiMethod setter=GroovyPropertyUtils.findPropertySetter(clazz,propertyName,prototype.hasModifierProperty(PsiModifier.STATIC),false);
    if (setter instanceof GrAccessorMethod) {
      conflicts.putValue(setter,GroovyRefactoringBundle.message("replace.setter.for.property",propertyName));
    }
  }
 else   if (GroovyPropertyUtils.isSimplePropertyGetter(prototype)) {
    boolean isStatic=prototype.hasModifierProperty(PsiModifier.STATIC);
    String propertyName=GroovyPropertyUtils.getPropertyNameByGetter(prototype);
    PsiMethod getter=GroovyPropertyUtils.findPropertyGetter(clazz,propertyName,isStatic,false);
    if (getter instanceof GrAccessorMethod) {
      conflicts.putValue(getter,GroovyRefactoringBundle.message("replace.getter.for.property",propertyName));
    }
  }
}
