{
  final ArrayList<TreePath> result=new ArrayList<TreePath>();
  final Object lastPathComponent=path.getLastPathComponent();
  final TreeModel model=tree.getModel();
  if (model.isLeaf(lastPathComponent)) {
    result.add(path);
  }
 else {
    boolean pathWasAdded=false;
    for (int i=model.getChildCount(lastPathComponent) - 1; i >= 0; i--) {
      final TreePath childPath=path.pathByAddingChild(model.getChild(lastPathComponent,i));
      if (model.isLeaf(lastPathComponent)) {
        if (!pathWasAdded) {
          result.add(path);
          pathWasAdded=true;
        }
      }
 else       if (tree.isExpanded(childPath)) {
        result.addAll(collectExpandedPaths(tree,childPath));
      }
 else {
        if (!pathWasAdded) {
          result.add(path);
          pathWasAdded=true;
        }
      }
    }
  }
  return result;
}
