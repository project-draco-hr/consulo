def do_unbundle(self):
    their_heads = self.getarg()[1].split()

    def check_heads():
        heads = map(hex, self.repo.heads())
        return ((their_heads == [hex('force')]) or (their_heads == heads))
    if (not check_heads()):
        self.respond(_('unsynced changes'))
        return
    self.respond('')
    (fd, tempname) = tempfile.mkstemp(prefix='hg-unbundle-')
    fp = os.fdopen(fd, 'wb+')
    try:
        count = int(self.fin.readline())
        while count:
            fp.write(self.fin.read(count))
            count = int(self.fin.readline())
        was_locked = (self.lock is not None)
        if (not was_locked):
            self.lock = self.repo.lock()
        try:
            if (not check_heads()):
                self.respond(_('unsynced changes'))
                return
            self.respond('')
            fp.seek(0)
            r = self.repo.addchangegroup(fp, 'serve', self.client_url())
            self.respond(str(r))
        finally:
            if (not was_locked):
                self.lock.release()
                self.lock = None
    finally:
        fp.close()
        os.unlink(tempname)
