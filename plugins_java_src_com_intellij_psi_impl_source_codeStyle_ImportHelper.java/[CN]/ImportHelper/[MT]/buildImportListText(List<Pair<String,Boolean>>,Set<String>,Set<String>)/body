{
  final Set<Pair<String,Boolean>> importedPackagesOrClasses=new THashSet<Pair<String,Boolean>>();
  @NonNls final StringBuilder buffer=new StringBuilder();
  for (  Pair<String,Boolean> pair : names) {
    String name=pair.getFirst();
    Boolean isStatic=pair.getSecond();
    String packageOrClassName=getPackageOrClassName(name);
    final boolean implicitlyImported=JAVA_LANG_PACKAGE.equals(packageOrClassName);
    boolean useOnDemand=implicitlyImported || packagesOrClassesToImportOnDemand.contains(packageOrClassName);
    if (useOnDemand && namesToUseSingle.remove(name)) {
      useOnDemand=false;
    }
    final Pair<String,Boolean> current=Pair.create(packageOrClassName,isStatic);
    if (useOnDemand && (importedPackagesOrClasses.contains(current) || implicitlyImported))     continue;
    buffer.append("import ");
    if (isStatic)     buffer.append("static ");
    if (useOnDemand) {
      importedPackagesOrClasses.add(current);
      buffer.append(packageOrClassName);
      buffer.append(".*");
    }
 else {
      buffer.append(name);
    }
    buffer.append(";\n");
  }
  for (  String remainingSingle : namesToUseSingle) {
    buffer.append("import ");
    buffer.append(remainingSingle);
    buffer.append(";\n");
  }
  return buffer;
}
