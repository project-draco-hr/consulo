{
  super(new BorderLayout());
  myView=view;
  myClickListeners=new ArrayList();
  myCurrentEntity=null;
  myHTMLViewer=new JEditorPane("text/html","<HTML><BODY>Select tree node for detailed information</BODY></HTML>");
  myHTMLViewer.setEditable(false);
  myHTMLViewer.addHyperlinkListener(new HyperlinkListener(){
    public void hyperlinkUpdate(    HyperlinkEvent e){
      if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        JEditorPane pane=(JEditorPane)e.getSource();
        if (e instanceof HTMLFrameHyperlinkEvent) {
          HTMLFrameHyperlinkEvent evt=(HTMLFrameHyperlinkEvent)e;
          HTMLDocument doc=(HTMLDocument)pane.getDocument();
          doc.processHTMLFrameHyperlinkEvent(evt);
        }
 else {
          try {
            URL url=e.getURL();
            String ref=url.getRef();
            if (ref.startsWith("pos:")) {
              int delimeterPos=ref.indexOf(':',"pos:".length() + 1);
              String startPosition=ref.substring("pos:".length(),delimeterPos);
              String endPosition=ref.substring(delimeterPos + 1);
              Integer textStartOffset=new Integer(startPosition);
              Integer textEndOffset=new Integer(endPosition);
              String fileURL=url.toExternalForm();
              fileURL=fileURL.substring(0,fileURL.indexOf('#'));
              VirtualFile vFile=VirtualFileManager.getInstance().findFileByUrl(fileURL);
              if (vFile != null) {
                fireClickEvent(vFile,textStartOffset.intValue(),textEndOffset.intValue());
              }
            }
 else             if (ref.startsWith("descr:")) {
              int descriptionIndex=Integer.parseInt(ref.substring("descr:".length()));
              ProblemDescriptor descriptor=((DescriptorProviderInspection)getTool()).getDescriptions((RefElement)myCurrentEntity)[descriptionIndex];
              PsiElement psiElement=descriptor.getPsiElement();
              if (psiElement == null)               return;
              VirtualFile vFile=psiElement.getContainingFile().getVirtualFile();
              if (vFile != null) {
                TextRange range=psiElement.getTextRange();
                fireClickEvent(vFile,range.getStartOffset(),range.getEndOffset());
              }
            }
 else             if (ref.startsWith("invoke:")) {
              int actionNumber=Integer.parseInt(ref.substring("invoke:".length()));
              getTool().getQuickFixes()[actionNumber].doApplyFix(new RefElement[]{(RefElement)myCurrentEntity});
            }
 else             if (ref.startsWith("invokelocal:")) {
              myView.invokeLocalFix();
            }
 else {
              int offset=Integer.parseInt(ref);
              String fileURL=url.toExternalForm();
              fileURL=fileURL.substring(0,fileURL.indexOf('#'));
              VirtualFile vFile=VirtualFileManager.getInstance().findFileByUrl(fileURL);
              if (vFile != null) {
                fireClickEvent(vFile,offset,offset);
              }
            }
          }
 catch (          Throwable t) {
            t.printStackTrace();
          }
        }
      }
    }
  }
);
  add(new JScrollPane(myHTMLViewer),BorderLayout.CENTER);
}
