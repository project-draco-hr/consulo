{
  PsiClass aClass=field.getContainingClass();
  Project project=field.getProject();
  final JavaCodeStyleManager manager=JavaCodeStyleManager.getInstance(project);
  final String propertyName=manager.variableNameToPropertyName(field.getName(),VariableKind.FIELD);
  String newPropertyName=manager.variableNameToPropertyName(newName,VariableKind.FIELD);
  boolean isStatic=field.hasModifierProperty(PsiModifier.STATIC);
  PsiMethod getter=PropertyUtil.findPropertyGetter(aClass,propertyName,isStatic,false);
  PsiMethod setter=PropertyUtil.findPropertySetter(aClass,propertyName,isStatic,false);
  boolean shouldRenameSetterParameter=false;
  if (setter != null) {
    String parameterName=manager.propertyNameToVariableName(propertyName,VariableKind.PARAMETER);
    PsiParameter setterParameter=setter.getParameterList().getParameters()[0];
    shouldRenameSetterParameter=parameterName.equals(setterParameter.getName());
  }
  String newGetterName="";
  if (getter != null) {
    String getterId=getter.getName();
    newGetterName=PropertyUtil.suggestGetterName(newPropertyName,field.getType(),getterId);
    if (newGetterName.equals(getterId)) {
      getter=null;
      newGetterName=null;
    }
  }
  String newSetterName="";
  if (setter != null) {
    newSetterName=PropertyUtil.suggestSetterName(newPropertyName);
    final String newSetterParameterName=manager.propertyNameToVariableName(newPropertyName,VariableKind.PARAMETER);
    if (newSetterName.equals(setter.getName())) {
      setter=null;
      newSetterName=null;
      shouldRenameSetterParameter=false;
    }
 else     if (newSetterParameterName.equals(setter.getParameterList().getParameters()[0].getName())) {
      shouldRenameSetterParameter=false;
    }
  }
  if ((getter != null || setter != null) && askToRenameAccesors(getter,setter,newName,project)) {
    getter=null;
    setter=null;
    shouldRenameSetterParameter=false;
  }
  if (getter != null) {
    addOverriddenAndImplemented(aClass,getter,newGetterName,allRenames);
  }
  if (setter != null) {
    addOverriddenAndImplemented(aClass,setter,newSetterName,allRenames);
  }
  if (shouldRenameSetterParameter) {
    PsiParameter parameter=setter.getParameterList().getParameters()[0];
    allRenames.put(parameter,manager.propertyNameToVariableName(newPropertyName,VariableKind.PARAMETER));
  }
}
