{
  if (psiClass instanceof PsiTypeParameter)   return null;
  final List<MethodSignature> signatures=LambdaUtil.findFunctionCandidates(psiClass);
  if (signatures == null)   return interfaceNonFunctionalMessage;
  if (signatures.isEmpty())   return "No target method found";
  if (signatures.size() == 1) {
    final MethodSignature functionalMethod=signatures.get(0);
    if (functionalMethod.getTypeParameters().length > 0)     return "Target method is generic";
    return null;
  }
  return "Multiple non-overriding abstract methods found";
}
