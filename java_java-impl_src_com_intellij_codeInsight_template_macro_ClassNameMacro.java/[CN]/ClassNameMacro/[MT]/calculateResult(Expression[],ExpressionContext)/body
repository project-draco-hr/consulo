{
  Project project=context.getProject();
  int templateStartOffset=context.getTemplateStartOffset();
  int offset=templateStartOffset > 0 ? context.getTemplateStartOffset() - 1 : context.getTemplateStartOffset();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());
  PsiElement place=file.findElementAt(offset);
  PsiClass aClass=null;
  while (place != null) {
    if (place instanceof PsiClass && !(place instanceof PsiAnonymousClass) && !(place instanceof PsiTypeParameter)) {
      aClass=(PsiClass)place;
      final PsiElement lBrace=aClass.getLBrace();
      if (lBrace != null && offset < lBrace.getTextOffset() && aClass.getContainingClass() != null) {
        aClass=aClass.getContainingClass();
      }
      break;
    }
    if (place instanceof PsiJavaFile) {
      PsiClass[] classes=((PsiJavaFile)place).getClasses();
      aClass=classes.length != 0 ? classes[0] : null;
      break;
    }
    place=place.getParent();
  }
  if (aClass == null)   return null;
  String result=aClass.getName();
  while (aClass.getContainingClass() != null && aClass.getContainingClass().getName() != null) {
    result=aClass.getContainingClass().getName() + "$" + result;
    aClass=aClass.getContainingClass();
  }
  return new TextResult(result);
}
