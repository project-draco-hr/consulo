{
  DiffProvider diffProvider=myVcs.getDiffProvider();
  if (diffProvider == null)   return false;
  boolean anyChanges=false;
  openStreams();
  try {
    final List<IncomingChangeListData> list=loadIncomingChangeListData();
    for (    IncomingChangeListData data : list) {
      LOG.info("Checking incoming changelist " + data.changeList.getNumber());
      boolean updated=false;
      for (      Change change : data.changeList.getChanges()) {
        if (data.accountedChanges.contains(change))         continue;
        ContentRevision afterRevision=change.getAfterRevision();
        if (afterRevision != null) {
          afterRevision.getFile().refresh();
          LOG.info("Checking file " + afterRevision.getFile().getPath());
          VirtualFile file=afterRevision.getFile().getVirtualFile();
          if (file != null) {
            VcsRevisionNumber revision=diffProvider.getCurrentRevision(file);
            if (revision != null) {
              LOG.info("Current revision is " + revision + ", changelist revision is "+ afterRevision.getRevisionNumber());
              int rc=revision.compareTo(afterRevision.getRevisionNumber());
              if (rc >= 0) {
                data.accountedChanges.add(change);
                updated=true;
              }
            }
          }
        }
      }
      if (updated) {
        anyChanges=true;
        saveIncoming(data);
      }
    }
    if (anyChanges) {
      writeHeader();
    }
  }
  finally {
    closeStreams();
  }
  return anyChanges;
}
