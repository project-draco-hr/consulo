{
  super(method.getParameterList().getNode(),indent,wrap,context);
  final ASTNode methodNode=method.getNode();
  final ASTNode leftParenth=methodNode.findChildByType(mLPAREN);
  final ASTNode rightParenth=methodNode.findChildByType(mRPAREN);
  final GroovyWrappingProcessor wrappingProcessor=new GroovyWrappingProcessor(this);
  mySubBlocks=new ArrayList<Block>();
  if (leftParenth != null) {
    mySubBlocks.add(new GroovyBlock(leftParenth,Indent.getNoneIndent(),Wrap.createWrap(WrapType.NONE,false),myContext));
  }
  List<ASTNode> astNodes=GroovyBlockGenerator.visibleChildren(myNode);
  final boolean unfinished=isParameterListUnfinished(myNode);
  if (myContext.getSettings().ALIGN_MULTILINE_PARAMETERS) {
    final AlignmentProvider.Aligner aligner=myContext.getAlignmentProvider().createAligner(false);
    for (    ASTNode node : astNodes) {
      aligner.append(node.getPsi());
    }
    if (rightParenth != null && unfinished) {
      aligner.append(rightParenth.getPsi());
    }
  }
  for (  ASTNode childNode : astNodes) {
    mySubBlocks.add(new GroovyBlock(childNode,Indent.getContinuationIndent(),wrappingProcessor.getChildWrap(childNode),myContext));
  }
  if (rightParenth != null) {
    mySubBlocks.add(new GroovyBlock(rightParenth,unfinished ? Indent.getContinuationIndent() : Indent.getNoneIndent(),Wrap.createWrap(WrapType.NONE,false),myContext));
    if (!unfinished && myContext.getSettings().ALIGN_MULTILINE_METHOD_BRACKETS) {
      if (leftParenth != null) {
        myContext.getAlignmentProvider().addPair(leftParenth,rightParenth,false);
      }
    }
  }
  myTextRange=TextRange.create(mySubBlocks.get(0).getTextRange().getStartOffset(),mySubBlocks.get(mySubBlocks.size() - 1).getTextRange().getEndOffset());
}
