{
  FacetDetector<VirtualFile,AndroidFacetConfiguration> detector=new FacetDetector<VirtualFile,AndroidFacetConfiguration>(){
    public AndroidFacetConfiguration detectFacet(    VirtualFile source,    Collection<AndroidFacetConfiguration> existentFacetConfigurations){
      if (!existentFacetConfigurations.isEmpty()) {
        return existentFacetConfigurations.iterator().next();
      }
      return createDefaultConfiguration();
    }
    @Override public void afterFacetAdded(    @NotNull final Facet facet){
      if (facet instanceof AndroidFacet) {
        final Module module=facet.getModule();
        final Project project=module.getProject();
        ImportDependenciesUtil.importDependencies(module,true);
        StartupManager.getInstance(project).runWhenProjectIsInitialized(new Runnable(){
          public void run(){
            final Module module=facet.getModule();
            AndroidSdkUtils.setupAndroidPlatformInNeccessary(module);
            final AndroidFacet androidFacet=(AndroidFacet)facet;
            final String androidLibraryPropValue=AndroidUtils.getPropertyValue(module,SdkConstants.FN_DEFAULT_PROPERTIES,AndroidUtils.ANDROID_LIBRARY_PROPERTY);
            if (androidLibraryPropValue != null && androidLibraryPropValue.equals("true")) {
              androidFacet.getConfiguration().LIBRARY_PROJECT=true;
            }
            Manifest manifest=androidFacet.getManifest();
            if (manifest != null) {
              if (AndroidUtils.getDefaultActivityName(manifest) != null) {
                AndroidUtils.addRunConfiguration(project,androidFacet,null,true);
              }
            }
            ApplicationManager.getApplication().saveAll();
          }
        }
);
      }
    }
  }
;
  VirtualFileFilter androidManifestFilter=new VirtualFileFilter(){
    public boolean accept(    VirtualFile file){
      return file.getName().equals(SdkConstants.FN_ANDROID_MANIFEST_XML);
    }
  }
;
  detectorRegistry.registerUniversalDetector(StdFileTypes.XML,androidManifestFilter,detector);
}
