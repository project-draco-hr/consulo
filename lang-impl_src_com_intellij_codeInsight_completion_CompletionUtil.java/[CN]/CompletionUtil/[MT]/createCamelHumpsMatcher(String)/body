{
  Pattern pat=null;
  final CodeInsightSettings settings=CodeInsightSettings.getInstance();
  int variant=settings.COMPLETION_CASE_SENSITIVE;
  Perl5Compiler compiler=new Perl5Compiler();
  try {
switch (variant) {
case CodeInsightSettings.NONE:
      pat=compiler.compile(NameUtil.buildRegexp(pattern,0,true,true));
    break;
case CodeInsightSettings.FIRST_LETTER:
  pat=compiler.compile(NameUtil.buildRegexp(pattern,1,true,true));
break;
case CodeInsightSettings.ALL:
pat=compiler.compile(NameUtil.buildRegexp(pattern,0,false,false));
break;
default :
pat=compiler.compile(NameUtil.buildRegexp(pattern,1,true,false));
}
}
 catch (MalformedPatternException me) {
}
return pat;
}
