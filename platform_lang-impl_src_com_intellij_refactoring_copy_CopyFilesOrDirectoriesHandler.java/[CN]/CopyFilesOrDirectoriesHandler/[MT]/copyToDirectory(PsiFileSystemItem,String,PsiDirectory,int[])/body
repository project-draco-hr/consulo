{
  if (elementToCopy instanceof PsiFile) {
    PsiFile file=(PsiFile)elementToCopy;
    String name=newName == null ? file.getName() : newName;
    if (checkFileExist(targetDirectory,choice,file,name,"Copy"))     return null;
    return targetDirectory.copyFileFrom(name,file);
  }
 else   if (elementToCopy instanceof PsiDirectory) {
    PsiDirectory directory=(PsiDirectory)elementToCopy;
    if (directory.equals(targetDirectory)) {
      return null;
    }
    if (newName == null)     newName=directory.getName();
    final PsiDirectory existing=targetDirectory.findSubdirectory(newName);
    final PsiDirectory subdirectory=existing == null ? targetDirectory.createSubdirectory(newName) : existing;
    EncodingRegistry.doActionAndRestoreEncoding(directory.getVirtualFile(),new ThrowableComputable<VirtualFile,IOException>(){
      public VirtualFile compute(){
        return subdirectory.getVirtualFile();
      }
    }
);
    PsiFile firstFile=null;
    PsiElement[] children=directory.getChildren();
    for (    PsiElement child : children) {
      PsiFileSystemItem item=(PsiFileSystemItem)child;
      PsiFile f=copyToDirectory(item,item.getName(),subdirectory,choice);
      if (firstFile == null) {
        firstFile=f;
      }
    }
    return firstFile;
  }
 else {
    throw new IllegalArgumentException("unexpected elementToCopy: " + elementToCopy);
  }
}
