{
  if (elementToCopy instanceof PsiFile) {
    PsiFile file=(PsiFile)elementToCopy;
    String name=newName == null ? file.getName() : newName;
    final PsiFile existing=targetDirectory.findFile(name);
    if (existing != null) {
      int selection=choice == null || choice[0] == -1 ? Messages.showDialog(String.format("File '%s' already exists in directory '%s'",name,targetDirectory.getVirtualFile().getPath()),"Copy",choice == null ? new String[]{"Overwrite","Skip"} : new String[]{"Overwrite","Skip","Overwrite for all","Skip for all"},0,Messages.getQuestionIcon()) : choice[0];
      if (choice != null && selection > 1) {
        choice[0]=selection % 2;
        selection=choice[0];
      }
      if (selection == 0 && file != existing) {
        existing.delete();
      }
 else       return null;
    }
    return targetDirectory.copyFileFrom(name,file);
  }
 else   if (elementToCopy instanceof PsiDirectory) {
    PsiDirectory directory=(PsiDirectory)elementToCopy;
    if (directory.equals(targetDirectory)) {
      return null;
    }
    if (newName == null)     newName=directory.getName();
    final PsiDirectory existing=targetDirectory.findSubdirectory(newName);
    final PsiDirectory subdirectory=existing == null ? targetDirectory.createSubdirectory(newName) : existing;
    VfsUtil.doActionAndRestoreEncoding(directory.getVirtualFile(),new ThrowableComputable<VirtualFile,IOException>(){
      public VirtualFile compute(){
        return subdirectory.getVirtualFile();
      }
    }
);
    PsiFile firstFile=null;
    PsiElement[] children=directory.getChildren();
    for (    PsiElement child : children) {
      PsiFileSystemItem item=(PsiFileSystemItem)child;
      PsiFile f=copyToDirectory(item,item.getName(),subdirectory,choice);
      if (firstFile == null) {
        firstFile=f;
      }
    }
    return firstFile;
  }
 else {
    throw new IllegalArgumentException("unexpected elementToCopy: " + elementToCopy);
  }
}
