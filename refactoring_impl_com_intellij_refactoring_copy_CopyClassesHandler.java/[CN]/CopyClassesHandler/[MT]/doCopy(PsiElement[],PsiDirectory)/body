{
  elements=convertToTopLevelClass(elements);
  Project project=elements[0].getProject();
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.copyClass");
  PsiClass aClass=(PsiClass)elements[0];
  if (defaultTargetDirectory == null) {
    final PsiFile containingFile=aClass.getContainingFile();
    if (containingFile != null) {
      defaultTargetDirectory=containingFile.getContainingDirectory();
    }
  }
  CopyClassDialog dialog=new CopyClassDialog(aClass,defaultTargetDirectory,project,false);
  dialog.setTitle(RefactoringBundle.message("copy.handler.copy.class"));
  dialog.show();
  if (dialog.isOK()) {
    PsiDirectory targetDirectory=dialog.getTargetDirectory();
    String className=dialog.getClassName();
    copyClassImpl(className,project,aClass,targetDirectory,RefactoringBundle.message("copy.handler.copy.class"),false);
  }
}
