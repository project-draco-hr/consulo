{
  if (copyClassName == null || copyClassName.length() == 0)   return;
  final boolean[] result=new boolean[]{false};
  Runnable command=new Runnable(){
    public void run(){
      final Runnable action=new Runnable(){
        public void run(){
          try {
            PsiElement newElement=doCopyClass(aClass,copyClassName,targetDirectory);
            CopyHandler.updateSelectionInActiveProjectView(newElement,project,selectInActivePanel);
            EditorHelper.openInEditor(newElement);
            result[0]=true;
          }
 catch (          final IncorrectOperationException ex) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                Messages.showMessageDialog(project,ex.getMessage(),RefactoringBundle.message("error.title"),Messages.getErrorIcon());
              }
            }
);
          }
        }
      }
;
      ApplicationManager.getApplication().runWriteAction(action);
    }
  }
;
  CommandProcessor processor=CommandProcessor.getInstance();
  processor.executeCommand(project,command,commandName,null);
  if (result[0]) {
    ToolWindowManager.getInstance(project).invokeLater(new Runnable(){
      public void run(){
        ToolWindowManager.getInstance(project).activateEditorComponent();
      }
    }
);
  }
}
