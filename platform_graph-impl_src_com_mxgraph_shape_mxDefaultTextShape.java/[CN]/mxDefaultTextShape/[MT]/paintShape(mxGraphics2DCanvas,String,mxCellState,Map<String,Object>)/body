{
  Rectangle rect=state.getLabelBounds().getRectangle();
  Graphics2D g=canvas.getGraphics();
  if (g.getClipBounds() == null || g.getClipBounds().intersects(rect)) {
    boolean horizontal=mxUtils.isTrue(style,mxConstants.STYLE_HORIZONTAL,true);
    double scale=canvas.getScale();
    int x=rect.x;
    int y=rect.y;
    int w=rect.width;
    int h=rect.height;
    if (!horizontal) {
      g.rotate(-Math.PI / 2,x + w / 2,y + h / 2);
      g.translate(w / 2 - h / 2,h / 2 - w / 2);
    }
    Color fontColor=mxUtils.getColor(style,mxConstants.STYLE_FONTCOLOR,Color.black);
    g.setColor(fontColor);
    Font scaledFont=mxUtils.getFont(style,scale);
    g.setFont(scaledFont);
    int fontSize=mxUtils.getInt(style,mxConstants.STYLE_FONTSIZE,mxConstants.DEFAULT_FONTSIZE);
    FontMetrics fm=g.getFontMetrics();
    int scaledFontSize=scaledFont.getSize();
    double fontScaleFactor=((double)scaledFontSize) / ((double)fontSize);
    double fontScaleRatio=fontScaleFactor / scale;
    y+=2 * fm.getMaxAscent() - fm.getHeight() + mxConstants.LABEL_INSET * scale;
    Object vertAlign=mxUtils.getString(style,mxConstants.STYLE_VERTICAL_ALIGN,mxConstants.ALIGN_MIDDLE);
    double vertAlignProportion=0.5;
    if (vertAlign.equals(mxConstants.ALIGN_TOP)) {
      vertAlignProportion=0;
    }
 else     if (vertAlign.equals(mxConstants.ALIGN_BOTTOM)) {
      vertAlignProportion=1.0;
    }
    y+=(1.0 - fontScaleRatio) * h * vertAlignProportion;
    Object align=mxUtils.getString(style,mxConstants.STYLE_ALIGN,mxConstants.ALIGN_CENTER);
    if (align.equals(mxConstants.ALIGN_LEFT)) {
      x+=mxConstants.LABEL_INSET * scale;
    }
 else     if (align.equals(mxConstants.ALIGN_RIGHT)) {
      x-=mxConstants.LABEL_INSET * scale;
    }
    String[] lines=text.split("\n");
    for (int i=0; i < lines.length; i++) {
      int dx=0;
      if (align.equals(mxConstants.ALIGN_CENTER)) {
        int sw=fm.stringWidth(lines[i]);
        if (horizontal) {
          dx=(w - sw) / 2;
        }
 else {
          dx=(h - sw) / 2;
        }
      }
 else       if (align.equals(mxConstants.ALIGN_RIGHT)) {
        int sw=fm.stringWidth(lines[i]);
        dx=((horizontal) ? w : h) - sw;
      }
      g.drawString(lines[i],x + dx,y);
      postProcessLine(text,lines[i],fm,canvas,x + dx,y);
      y+=fm.getHeight() + mxConstants.LINESPACING;
    }
  }
}
