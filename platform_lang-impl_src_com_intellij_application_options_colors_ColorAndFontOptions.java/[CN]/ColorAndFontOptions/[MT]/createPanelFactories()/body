{
  List<ColorAndFontPanelFactory> result=new ArrayList<ColorAndFontPanelFactory>();
  result.add(new FontConfigurableFactory());
  List<ColorAndFontPanelFactory> extensions=new ArrayList<ColorAndFontPanelFactory>();
  extensions.add(new ConsoleFontConfigurableFactory());
  ColorSettingsPage[] pages=ColorSettingsPages.getInstance().getRegisteredPages();
  for (  final ColorSettingsPage page : pages) {
    extensions.add(new ColorAndFontPanelFactoryEx(){
      @Override public double getWeight(){
        if (page instanceof Weighted) {
          return ((Weighted)page).getWeight();
        }
        return 0;
      }
      @Override @NotNull public NewColorAndFontPanel createPanel(      @NotNull ColorAndFontOptions options){
        final SimpleEditorPreview preview=new SimpleEditorPreview(options,page);
        return NewColorAndFontPanel.create(preview,page.getDisplayName(),options,null,page);
      }
      @Override @NotNull public String getPanelDisplayName(){
        return page.getDisplayName();
      }
    }
);
  }
  Collections.addAll(extensions,Extensions.getExtensions(ColorAndFontPanelFactory.EP_NAME));
  result.addAll(extensions);
  result.add(new DiffColorsPageFactory());
  result.add(new FileStatusColorsPageFactory());
  result.add(new ScopeColorsPageFactory());
  return result;
}
