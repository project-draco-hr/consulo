{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Perfoming DFA\n" + "Instance: " + myDfa + " Semilattice: "+ mySemilattice);
  }
  final DFAMap<E> initial=myDfa.initial();
  for (int i=0; i < myFlow.length; i++) {
    info.add(i,initial);
  }
  final boolean[] visited=new boolean[myFlow.length];
  final boolean forward=myDfa.isForward();
  final int[] order=ControlFlowUtil.postOrder(myFlow);
  final int limit=getIterationLimit(forward);
  int dfaCount=0;
  final long startTime=System.nanoTime();
  for (int i=forward ? 0 : myFlow.length - 1; forward ? i < myFlow.length : i >= 0; ) {
    if (!ApplicationManager.getApplication().isUnitTestMode() && ApplicationManager.getApplication().isDispatchThread() && System.nanoTime() - startTime > TIME_LIMIT) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Time limit exceeded");
      }
      break;
    }
    int count=0;
    final Instruction instruction=myFlow[order[i]];
    final int number=instruction.num();
    if (!visited[number]) {
      final Queue<Instruction> worklist=new LinkedList<Instruction>();
      worklist.add(instruction);
      visited[number]=true;
      while (true) {
        count++;
        if (count > limit) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Iteration count exceeded on worklist");
          }
          break;
        }
        final Instruction currentInstruction=worklist.poll();
        if (currentInstruction == null) {
          break;
        }
        final int currentNumber=currentInstruction.num();
        final DFAMap<E> oldE=info.get(currentNumber);
        final DFAMap<E> joinedE=join(currentInstruction,info);
        final DFAMap<E> newE=myDfa.fun(joinedE,currentInstruction);
        if (!mySemilattice.eq(newE,oldE)) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Number: " + currentNumber + " old: "+ oldE.keySet()+ " new: "+ newE.keySet());
          }
          info.set(currentNumber,newE);
          for (          Instruction next : getNext(currentInstruction)) {
            worklist.add(next);
            visited[next.num()]=true;
          }
        }
      }
    }
    if (forward) {
      i++;
    }
 else {
      i--;
    }
    dfaCount+=count;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Done in: " + (System.nanoTime() - startTime) / 10e6 + "ms. Ratio: " + dfaCount / myFlow.length);
  }
  return info;
}
