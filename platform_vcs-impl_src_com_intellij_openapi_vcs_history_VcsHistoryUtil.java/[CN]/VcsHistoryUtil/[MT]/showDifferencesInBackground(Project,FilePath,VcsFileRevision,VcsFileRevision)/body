{
  new Task.Backgroundable(project,"Comparing Revisions..."){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      try {
        showDiff(project,filePath,older,newer,makeTitle(older),makeTitle(newer));
      }
 catch (      final VcsException e) {
        LOG.info(e);
        WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable(){
          public void run(){
            Messages.showErrorDialog(VcsBundle.message("message.text.cannot.show.differences",e.getLocalizedMessage()),VcsBundle.message("message.title.show.differences"));
          }
        }
,null,project);
      }
catch (      IOException e) {
        LOG.info(e);
      }
    }
    @NotNull private String makeTitle(    @NotNull VcsFileRevision revision){
      return revision.getRevisionNumber().asString() + (revision instanceof CurrentRevision ? " (" + VcsBundle.message("diff.title.local") + ")" : "");
    }
  }
.queue();
}
