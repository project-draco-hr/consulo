{
  if (IS_UNIT_TEST_MODE) {
    return;
  }
  final Application application=ApplicationManager.getApplication();
  application.invokeLater(new Runnable(){
    public void run(){
      closeProgressDialog();
      final boolean closeViewOnSuccess=CompilerWorkspaceConfiguration.getInstance(myProject).CLOSE_MESSAGE_VIEW_IF_SUCCESS;
synchronized (myMessageViewLock) {
        final boolean hasMessagesToRead=myErrorCount > 0 || myWarningCount > 0;
        final boolean shouldRetainView=hasMessagesToRead || !closeViewOnSuccess;
        if (shouldRetainView) {
          addMessage(new CompilerMessageImpl(myProject,CompilerMessageCategory.STATISTICS,CompilerBundle.message("statistics.error.count",myErrorCount),null,-1,-1,null));
          addMessage(new CompilerMessageImpl(myProject,CompilerMessageCategory.STATISTICS,CompilerBundle.message("statistics.warnings.count",myWarningCount),null,-1,-1,null));
          myProblemsToolWindow.show(true);
          myProblemsToolWindow.selectFirstMessage();
        }
 else {
          myProblemsToolWindow.hide();
        }
      }
    }
  }
,getMyModalityState());
}
