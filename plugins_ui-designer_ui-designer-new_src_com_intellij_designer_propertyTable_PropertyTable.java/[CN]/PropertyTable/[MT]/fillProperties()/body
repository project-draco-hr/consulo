{
  myProperties=new ArrayList<Property>();
  int size=myComponents.size();
  if (size > 0) {
    fillProperties(myComponents.get(0),myProperties);
    if (size > 1) {
      for (Iterator<Property> I=myProperties.iterator(); I.hasNext(); ) {
        if (!I.next().availableFor(myComponents)) {
          I.remove();
        }
      }
      for (int i=1; i < size; i++) {
        List<Property> properties=new ArrayList<Property>();
        fillProperties(myComponents.get(i),properties);
        for (Iterator<Property> I=myProperties.iterator(); I.hasNext(); ) {
          Property property=I.next();
          int index=findProperty(properties,property);
          if (index == -1) {
            I.remove();
            continue;
          }
          Property testProperty=properties.get(index);
          if (!property.getClass().equals(testProperty.getClass())) {
            I.remove();
            continue;
          }
          List<Property> children=getChildren(property);
          List<Property> testChildren=getChildren(testProperty);
          int pSize=children.size();
          if (pSize != testChildren.size()) {
            I.remove();
            continue;
          }
          for (int j=0; j < pSize; j++) {
            if (!children.get(j).getName().equals(testChildren.get(j).getName())) {
              I.remove();
              break;
            }
          }
        }
      }
    }
  }
}
