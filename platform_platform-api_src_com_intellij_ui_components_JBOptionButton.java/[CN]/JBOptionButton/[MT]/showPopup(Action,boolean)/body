{
  if (myPopupIsShowing)   return;
  myPopupIsShowing=true;
  final Point loc=getLocationOnScreen();
  final Rectangle screen=ScreenUtil.getScreenRectangle(loc);
  final Dimension popupSize=myUnderPopup.getPreferredSize();
  final Rectangle intersection=screen.intersection(new Rectangle(new Point(loc.x,loc.y + getHeight()),popupSize));
  final boolean above=intersection.height < popupSize.height;
  int y=above ? getY() - popupSize.height : getY() + getHeight();
  final JPopupMenu popup=above ? myAbovePopup : myUnderPopup;
  final Ref<PopupMenuListener> listener=new Ref<PopupMenuListener>();
  listener.set(new PopupMenuListener(){
    @Override public void popupMenuWillBecomeVisible(    PopupMenuEvent e){
    }
    @Override public void popupMenuWillBecomeInvisible(    PopupMenuEvent e){
      if (popup != null && listener.get() != null) {
        popup.removePopupMenuListener(listener.get());
      }
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          myPopupIsShowing=false;
        }
      }
);
    }
    @Override public void popupMenuCanceled(    PopupMenuEvent e){
    }
  }
);
  popup.addPopupMenuListener(listener.get());
  popup.show(this,0,y);
  SwingUtilities.invokeLater(new Runnable(){
    @Override public void run(){
      if (popup == null || !popup.isShowing() || !myPopupIsShowing)       return;
      Action selection=actionToSelect;
      if (selection == null && myOptions.length > 0 && ensureSelection) {
        selection=getAction();
      }
      if (selection == null)       return;
      final MenuElement[] elements=popup.getSubElements();
      for (      MenuElement eachElement : elements) {
        if (eachElement instanceof JMenuItem) {
          JMenuItem eachItem=(JMenuItem)eachElement;
          if (selection.equals(eachItem.getAction())) {
            final MenuSelectionManager mgr=MenuSelectionManager.defaultManager();
            final MenuElement[] path=new MenuElement[2];
            path[0]=popup;
            path[1]=eachItem;
            mgr.setSelectedPath(path);
            break;
          }
        }
      }
    }
  }
);
}
