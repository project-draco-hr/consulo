{
  PsiClass psiClass=(PsiClass)getElement();
  if (psiClass != null) {
    for (    PsiClassInitializer classInitializer : psiClass.getInitializers()) {
      RefUtil.addReferences(psiClass,this,classInitializer.getBody());
    }
    PsiMethod[] psiMethods=psiClass.getMethods();
    PsiField[] psiFields=psiClass.getFields();
    HashSet<PsiVariable> allFields=new HashSet<PsiVariable>();
    for (    PsiField psiField : psiFields) {
      getRefManager().getFieldReference(this,psiField);
      allFields.add(psiField);
    }
    ArrayList<PsiVariable> instanceInitializerInitializedFields=new ArrayList<PsiVariable>();
    boolean hasInitializers=false;
    for (    PsiClassInitializer initializer : psiClass.getInitializers()) {
      PsiCodeBlock body=initializer.getBody();
      if (body != null) {
        hasInitializers=true;
        ControlFlowAnalyzer analyzer=new ControlFlowAnalyzer(body,LocalsOrMyInstanceFieldsControlFlowPolicy.getInstance());
        ControlFlow flow;
        try {
          flow=analyzer.buildControlFlow();
        }
 catch (        AnalysisCanceledException e) {
          flow=ControlFlow.EMPTY;
        }
        PsiVariable[] ssaVariables=ControlFlowUtil.getSSAVariables(flow,false);
        PsiVariable[] writtenVariables=ControlFlowUtil.getWrittenVariables(flow,0,flow.getSize(),false);
        for (int j=0; j < ssaVariables.length; j++) {
          PsiVariable psiVariable=writtenVariables[j];
          if (allFields.contains(psiVariable)) {
            if (instanceInitializerInitializedFields.contains(psiVariable)) {
              allFields.remove(psiVariable);
              instanceInitializerInitializedFields.remove(psiVariable);
            }
 else {
              instanceInitializerInitializedFields.add(psiVariable);
            }
          }
        }
        for (        PsiVariable psiVariable : writtenVariables) {
          if (!instanceInitializerInitializedFields.contains(psiVariable)) {
            allFields.remove(psiVariable);
          }
        }
      }
    }
    for (    PsiMethod psiMethod : psiMethods) {
      RefMethod refMethod=getRefManager().getMethodReference(this,psiMethod);
      if (refMethod != null) {
        if (psiMethod.isConstructor()) {
          PsiCodeBlock body=psiMethod.getBody();
          if (body != null) {
            hasInitializers=true;
            ControlFlowAnalyzer analyzer=new ControlFlowAnalyzer(body,LocalsOrMyInstanceFieldsControlFlowPolicy.getInstance());
            ControlFlow flow;
            try {
              flow=analyzer.buildControlFlow();
            }
 catch (            AnalysisCanceledException e) {
              flow=ControlFlow.EMPTY;
            }
            PsiVariable[] writtenVariables=ControlFlowUtil.getWrittenVariables(flow,0,flow.getSize(),false);
            for (            PsiVariable psiVariable : writtenVariables) {
              if (instanceInitializerInitializedFields.contains(psiVariable)) {
                allFields.remove(psiVariable);
                instanceInitializerInitializedFields.remove(psiVariable);
              }
            }
            List<PsiMethod> redirectedConstructors=HighlightControlFlowUtil.getRedirectedConstructors(psiMethod);
            if ((redirectedConstructors == null || redirectedConstructors.isEmpty())) {
              PsiVariable[] ssaVariables=ControlFlowUtil.getSSAVariables(flow,false);
              ArrayList<PsiVariable> good=new ArrayList<PsiVariable>(Arrays.asList(ssaVariables));
              good.addAll(instanceInitializerInitializedFields);
              allFields.retainAll(good);
            }
 else {
              allFields.removeAll(Arrays.asList(writtenVariables));
            }
          }
        }
      }
    }
    for (    PsiField psiField : psiFields) {
      if ((!hasInitializers || !allFields.contains(psiField)) && psiField.getInitializer() == null) {
        RefField refField=(RefField)getRefManager().getReference(psiField);
        refField.setCanBeFinal(false);
      }
    }
    EjbClassRole role=EjbRolesUtil.getEjbRole(psiClass);
    if (role != null) {
      setEjb(true);
      setCanBeStatic(false);
      setCanBeFinal(false);
      if (role.getType() == EjbClassRoleEnum.EJB_CLASS_ROLE_HOME_INTERFACE || role.getType() == EjbClassRoleEnum.EJB_CLASS_ROLE_REMOTE_INTERFACE) {
        PsiClassType remoteExceptionType=psiClass.getManager().getElementFactory().createTypeByFQClassName("java.rmi.RemoteException",psiClass.getResolveScope());
        for (        PsiMethod psiMethod : psiClass.getAllMethods()) {
          if (!RefUtil.belongsToScope(psiMethod,getRefManager()))           continue;
          RefMethod refMethod=getRefManager().getMethodReference(this,psiMethod);
          if (refMethod != null) {
            refMethod.updateThrowsList(remoteExceptionType);
          }
        }
      }
    }
  }
}
