def unidiff(a, ad, b, bd, fn1, fn2, r=None, opts=defaultopts):

    def datetag(date, addtab=True):
        if ((not opts.git) and (not opts.nodates)):
            return ('\t%s\n' % date)
        if (addtab and (' ' in fn1)):
            return '\t\n'
        return '\n'
    if ((not a) and (not b)):
        return ''
    epoch = util.datestr((0, 0))
    if ((not opts.text) and (util.binary(a) or util.binary(b))):
        if (a and b and (len(a) == len(b)) and (a == b)):
            return ''
        l = [('Binary file %s has changed\n' % fn1)]
    elif (not a):
        b = splitnewlines(b)
        if (a is None):
            l1 = ('--- /dev/null%s' % datetag(epoch, False))
        else:
            l1 = ('--- %s%s' % (('a/' + fn1), datetag(ad)))
        l2 = ('+++ %s%s' % (('b/' + fn2), datetag(bd)))
        l3 = ('@@ -0,0 +1,%d @@\n' % len(b))
        l = ([l1, l2, l3] + [('+' + e) for e in b])
    elif (not b):
        a = splitnewlines(a)
        l1 = ('--- %s%s' % (('a/' + fn1), datetag(ad)))
        if (b is None):
            l2 = ('+++ /dev/null%s' % datetag(epoch, False))
        else:
            l2 = ('+++ %s%s' % (('b/' + fn2), datetag(bd)))
        l3 = ('@@ -1,%d +0,0 @@\n' % len(a))
        l = ([l1, l2, l3] + [('-' + e) for e in a])
    else:
        al = splitnewlines(a)
        bl = splitnewlines(b)
        l = list(bunidiff(a, b, al, bl, ('a/' + fn1), ('b/' + fn2), opts=opts))
        if (not l):
            return ''
        l[0] = ('%s%s' % (l[0][:(-2)], datetag(ad)))
        l[1] = ('%s%s' % (l[1][:(-2)], datetag(bd)))
    for ln in xrange(len(l)):
        if (l[ln][(-1)] != '\n'):
            l[ln] += '\n\\ No newline at end of file\n'
    if r:
        l.insert(0, diffline(r, fn1, fn2, opts))
    return ''.join(l)
