{
  final List<FocusTrackback> stack=getStackForRoot(myRoot);
  if (!stack.contains(this))   return;
  final int index=stack.indexOf(this);
  Component toFocus;
  if (index > 0) {
    final ComponentQuery query=stack.get(index - 1).myFocusedComponentQuery;
    toFocus=query != null ? query.getComponent() : null;
  }
 else {
    toFocus=getFocusOwner();
  }
  for (int i=index + 1; i < stack.size(); i++) {
    if (!stack.get(i).isDead()) {
      toFocus=null;
      break;
    }
  }
  if (toFocus != null) {
    final Component ownerBySwing=KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
    if (ownerBySwing != null) {
      final Window ownerBySwingWindow=SwingUtilities.getWindowAncestor(ownerBySwing);
      if (ownerBySwingWindow != null && ownerBySwingWindow == SwingUtilities.getWindowAncestor(toFocus)) {
        toFocus=ownerBySwing;
      }
    }
    toFocus.requestFocus();
  }
  stack.remove(this);
  dispose();
}
