{
  if (!myUsages.isEmpty()) {
    final MemberInfo[] memberInfos=new MemberInfo[myUsages.size()];
    int i=0;
    for (    MethodToMoveUsageInfo usage : myUsages) {
      memberInfos[i++]=new MemberInfo((PsiMethod)usage.getElement());
    }
    final MemberSelectionPanel panel=new MemberSelectionPanel("Methods to move to the extracted class",memberInfos,null);
    DialogWrapper dlg=new DialogWrapper(myProject,false){
{
        init();
        setTitle("Move Methods Used in Extracted Block Only");
      }
      @Override protected JComponent createCenterPanel(){
        return panel;
      }
    }
;
    dlg.show();
    if (dlg.isOK()) {
      for (      MemberInfo memberInfo : panel.getTable().getSelectedMemberInfos()) {
        if (memberInfo.isChecked()) {
          myInnerClass.add(memberInfo.getMember().copy());
          memberInfo.getMember().delete();
        }
      }
    }
  }
}
