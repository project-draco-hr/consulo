{
  myFrameworkSupportProvider=frameworkSupportProvider;
  if (versions.size() > 0) {
    myDescriptionLabel.setText(versionLabelText);
    String maxValue="";
    FrameworkVersion defaultVersion=versions.get(versions.size() - 1);
    for (    FrameworkVersion version : versions) {
      myVersionComboBox.addItem(version);
      FontMetrics fontMetrics=myVersionComboBox.getFontMetrics(myVersionComboBox.getFont());
      if (fontMetrics.stringWidth(version.getVersionName()) > fontMetrics.stringWidth(maxValue)) {
        maxValue=version.getVersionName();
      }
      if (version.isDefault()) {
        defaultVersion=version;
      }
    }
    myVersionComboBox.setPrototypeDisplayValue(maxValue + "_");
    myVersionComboBox.setRenderer(new DefaultListCellRenderer(){
      @Override public Component getListCellRendererComponent(      JList list,      Object value,      int index,      boolean isSelected,      boolean cellHasFocus){
        final Component component=super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
        if (value instanceof FrameworkVersion) {
          setText(((FrameworkVersion)value).getVersionName());
        }
        return component;
      }
    }
);
    myVersionComboBox.setSelectedItem(defaultVersion);
    myVersionComboBox.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        fireFrameworkVersionChanged();
      }
    }
);
  }
 else {
    myDescriptionLabel.setVisible(false);
    myVersionComboBox.setVisible(false);
  }
}
