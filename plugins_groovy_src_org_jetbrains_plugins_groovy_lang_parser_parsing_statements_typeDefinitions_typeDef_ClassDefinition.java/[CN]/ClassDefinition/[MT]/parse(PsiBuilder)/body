{
  if (!ParserUtils.getToken(builder,kCLASS)) {
    return WRONGWAY;
  }
  if (!ParserUtils.getToken(builder,mIDENT)) {
    builder.error(GroovyBundle.message("identifier.expected"));
    return WRONGWAY;
  }
  ParserUtils.getToken(builder,mNLS);
  TypeParameters.parse(builder);
  if (kEXTENDS.equals(builder.getTokenType())) {
    SuperClassClause.parse(builder);
  }
  if (kIMPLEMENTS.equals(builder.getTokenType())) {
    ImplementsClause.parse(builder);
  }
  if (mLCURLY.equals(builder.getTokenType())) {
    if (WRONGWAY.equals(ClassBlock.parse(builder))) {
      return WRONGWAY;
    }
  }
 else {
    builder.error(GroovyBundle.message("lcurly.expected"));
  }
  return CLASS_DEFINITION;
}
