{
  PsiExpression operand=typeCast.getOperand();
  if (operand == null)   return;
  PsiElement expr=deparenthesizeExpression(operand);
  if (expr instanceof PsiTypeCastExpression) {
    PsiTypeElement typeElement=((PsiTypeCastExpression)expr).getCastType();
    if (typeElement == null)     return;
    PsiType castType=typeElement.getType();
    final PsiExpression innerOperand=((PsiTypeCastExpression)expr).getOperand();
    final PsiType operandType=innerOperand != null ? innerOperand.getType() : null;
    final PsiType topCastType=typeCast.getType();
    if (!(castType instanceof PsiPrimitiveType)) {
      if (operandType != null && topCastType != null && TypeConversionUtil.areTypesConvertible(operandType,topCastType)) {
        addToResults((PsiTypeCastExpression)expr);
      }
    }
 else     if (PsiPrimitiveType.getUnboxedType(operandType) == topCastType) {
      addToResults((PsiTypeCastExpression)expr);
    }
  }
 else {
    PsiElement parent=typeCast.getParent();
    if (parent instanceof PsiConditionalExpression) {
      if (!Comparing.equal(operand.getType(),((PsiConditionalExpression)parent).getType())) {
        if (!PsiUtil.isLanguageLevel5OrHigher(typeCast)) {
          return;
        }
        if (!checkResolveAfterRemoveCast(parent))         return;
      }
    }
 else     if (parent instanceof PsiSynchronizedStatement && (expr instanceof PsiExpression && ((PsiExpression)expr).getType() instanceof PsiPrimitiveType)) {
      return;
    }
    processAlreadyHasTypeCast(typeCast);
  }
  super.visitTypeCastExpression(typeCast);
}
