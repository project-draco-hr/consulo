{
  this.parentPanel=parentPanel;
  myOptionName=optionName;
  myManager=CopyrightManager.getInstance(project);
  if (optionName.equals(CopyrightFileConfigManager.LANG_TEMPLATE)) {
    myUseDefaultSettingsRadioButton.setVisible(false);
    myUseCustomFormattingOptionsRadioButton.setVisible(false);
    myNoCopyright.setVisible(false);
    myCommenter=TemplateCopyrightCommenter.INSTANCE;
    myAllowBlock=true;
    myAllowSeparator=true;
  }
  if (parentPanel != null) {
    parentPanel.addOptionChangeListener(new TemplateOptionsPanelListener(){
      @Override public void optionChanged(){
        updateOverride();
      }
    }
);
  }
  ButtonGroup group=new ButtonGroup();
  group.add(rbBefore);
  group.add(rbAfter);
  fileLocationPanel.setBorder(BorderFactory.createEmptyBorder());
  addAdditionalComponents(myAdditionalPanel);
  addOptionChangeListener(new TemplateOptionsPanelListener(){
    @Override public void optionChanged(){
      showPreview(getOptions());
    }
  }
);
  preview.setFont(EditorColorsManager.getInstance().getGlobalScheme().getFont(EditorFontType.PLAIN));
  myUseDefaultSettingsRadioButton.setSelected(true);
  final ActionListener listener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateOverride();
    }
  }
;
  myUseDefaultSettingsRadioButton.addActionListener(listener);
  myUseCustomFormattingOptionsRadioButton.addActionListener(listener);
  myNoCopyright.addActionListener(listener);
  txtLengthBefore.setText("80");
  txtLengthAfter.setText("80");
  rbBlockComment.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      cbPrefixLines.setEnabled(rbBlockComment.isSelected());
      fireChangeEvent();
    }
  }
);
  rbLineComment.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      cbPrefixLines.setEnabled(rbBlockComment.isSelected());
      fireChangeEvent();
    }
  }
);
  cbPrefixLines.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      fireChangeEvent();
    }
  }
);
  cbSeparatorBefore.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      lblLengthBefore.setEnabled(cbSeparatorBefore.isSelected());
      txtLengthBefore.setEnabled(cbSeparatorBefore.isSelected());
      fireChangeEvent();
      updateBox();
    }
  }
);
  cbSeparatorAfter.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      lblLengthAfter.setEnabled(cbSeparatorAfter.isSelected());
      txtLengthAfter.setEnabled(cbSeparatorAfter.isSelected());
      fireChangeEvent();
      updateBox();
    }
  }
);
  final DocumentAdapter documentAdapter=new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      fireChangeEvent();
      updateBox();
    }
  }
;
  txtLengthBefore.getDocument().addDocumentListener(documentAdapter);
  txtLengthAfter.getDocument().addDocumentListener(documentAdapter);
  txtFiller.getDocument().addDocumentListener(documentAdapter);
  cbBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      fireChangeEvent();
    }
  }
);
}
