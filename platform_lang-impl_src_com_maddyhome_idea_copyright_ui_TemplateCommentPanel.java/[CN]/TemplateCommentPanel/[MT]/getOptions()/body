{
  final CopyrightFileConfig res=myFileType == null ? new CopyrightFileConfig() : CopyrightUpdaters.INSTANCE.forFileType(myFileType).createDefaultOptions();
  res.setBlock(rbBlockComment.isSelected());
  res.setPrefixLines(!myAllowBlock || cbPrefixLines.isSelected());
  res.setSeparateAfter(cbSeparatorAfter.isSelected());
  res.setSeparateBefore(cbSeparatorBefore.isSelected());
  try {
    Object val=Integer.parseInt(txtLengthBefore.getText());
    if (val instanceof Number) {
      res.setLenBefore(((Number)val).intValue());
    }
    val=Integer.parseInt(txtLengthAfter.getText());
    if (val instanceof Number) {
      res.setLenAfter(((Number)val).intValue());
    }
  }
 catch (  NumberFormatException e) {
  }
  res.setBox(cbBox.isSelected());
  String filler=txtFiller.getText();
  if (filler.length() > 0) {
    res.setFiller(filler);
  }
 else {
    res.setFiller(CopyrightFileConfig.DEFAULT_FILLER);
  }
  res.setFileTypeOverride(getOverrideChoice());
  res.setRelativeBefore(rbBefore.isSelected());
  res.setAddBlankAfter(cbAddBlank.isSelected());
  if (fileLocations != null) {
    for (int i=0; i < fileLocations.length; i++) {
      if (fileLocations[i].isSelected()) {
        res.setFileLocation(i + 1);
      }
    }
  }
  return res;
}
