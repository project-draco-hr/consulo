{
  int destLine=down ? range.endLine + 1 : range.startLine - 1;
  if (!(range.firstElement instanceof PsiStatement)) {
    return destLine;
  }
  PsiElement sibling=StatementUpDownMover.firstNonWhiteElement(down ? range.firstElement.getNextSibling() : range.firstElement.getPrevSibling(),down);
  PsiElement toMove=sibling;
  if (!(sibling instanceof PsiStatement)) {
    return destLine;
  }
  if (sibling instanceof PsiDeclarationStatement) {
    PsiElement[] elements=((PsiDeclarationStatement)sibling).getDeclaredElements();
    if (elements.length == 0)     return destLine;
    sibling=down ? elements[elements.length - 1] : elements[0];
  }
  if (sibling instanceof PsiVariable) {
    sibling=((PsiVariable)sibling).getInitializer();
  }
  if (sibling instanceof PsiExpressionStatement) {
    sibling=((PsiExpressionStatement)sibling).getExpression();
  }
  if (sibling instanceof PsiNewExpression) {
    sibling=((PsiNewExpression)sibling).getAnonymousClass();
  }
  if (!(sibling instanceof PsiClass))   return destLine;
  destLine=editor.getDocument().getLineNumber(down ? toMove.getTextRange().getEndOffset() : toMove.getTextRange().getStartOffset());
  return destLine;
}
