{
  String result;
  LOG.assertTrue(!(descriptor instanceof PrimitiveValue));
  final DebugProcess debugProcess=evaluationContext.getDebugProcess();
  final Value value=descriptor.getValue();
  if (value != null) {
    try {
      final ExpressionEvaluator evaluator=myLabelExpression.getEvaluator(debugProcess.getProject());
      if (!debugProcess.isAttached()) {
        throw EvaluateExceptionUtil.PROCESS_EXITED;
      }
      EvaluationContext thisEvaluationContext=evaluationContext.createEvaluationContext(value);
      Value labelValue=evaluator.evaluate(thisEvaluationContext);
      result=DebuggerUtils.getValueAsString(thisEvaluationContext,labelValue);
    }
 catch (    final EvaluateException ex) {
      throw new EvaluateException(DebuggerBundle.message("error.unable.to.evaluate.expression") + " " + ex.getMessage(),ex);
    }
  }
 else {
    result="null";
  }
  return result;
}
