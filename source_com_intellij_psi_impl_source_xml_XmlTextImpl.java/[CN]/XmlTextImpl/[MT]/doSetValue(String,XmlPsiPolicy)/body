{
  final ASTNode firstEncodedElement=policy.encodeXmlTextContents(s,this,SharedImplUtil.findCharTableByTree(this));
  if (firstEncodedElement == null) {
    delete();
    return;
  }
  final PomModel model=getProject().getModel();
  final XmlAspect aspect=model.getModelAspect(XmlAspect.class);
  model.runTransaction(new PomTransactionBase(this,aspect){
    public PomModelEvent runInner() throws IncorrectOperationException {
      final String oldText=getText();
      replaceAllChildrenToChildrenOf(firstEncodedElement.getTreeParent());
      clearCaches();
      return XmlTextChangedImpl.createXmlTextChanged(model,XmlTextImpl.this,oldText);
    }
  }
);
}
