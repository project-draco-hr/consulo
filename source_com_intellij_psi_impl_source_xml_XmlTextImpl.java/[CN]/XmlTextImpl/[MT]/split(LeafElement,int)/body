{
  final CharTable table=SharedImplUtil.findCharTableByTree(element);
  int textLength=element.getTextLength(table);
  if (textLength < offset)   throw new ArrayIndexOutOfBoundsException(offset);
  if (offset == 0 || textLength == offset)   return element;
  if (element.getElementType() != XmlTokenType.XML_DATA_CHARACTERS && element.getElementType() != XmlTokenType.XML_WHITE_SPACE) {
    throw new IncorrectOperationException("Element " + element.getElementType() + " can not be split!");
  }
  final char[] buffer=new char[textLength];
  element.copyTo(buffer,0);
  final LeafElement firstPart=Factory.createSingleLeafElement(element.getElementType(),buffer,0,offset,table,null);
  final LeafElement secondPart=Factory.createSingleLeafElement(element.getElementType(),buffer,offset,buffer.length,table,null);
  final ASTNode parent=element.getTreeParent();
  parent.replaceChild(element,firstPart);
  parent.addChild(secondPart,firstPart.getTreeNext());
  return secondPart;
}
