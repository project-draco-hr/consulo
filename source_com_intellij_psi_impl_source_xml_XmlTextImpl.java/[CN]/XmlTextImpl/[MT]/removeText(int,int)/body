{
  final String value=getValue();
  final int physicalStart=displayToPhysical(displayStart);
  final PsiElement psiElement=findElementAt(physicalStart);
  if (psiElement != null) {
    final IElementType elementType=psiElement.getNode().getElementType();
    final int elementDisplayEnd=physicalToDisplay(psiElement.getStartOffsetInParent() + psiElement.getTextLength());
    final int elementDisplayStart=physicalToDisplay(psiElement.getStartOffsetInParent());
    if (elementType == XmlTokenType.XML_DATA_CHARACTERS) {
      if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) {
        int physicalEnd=physicalStart;
        while (physicalEnd < getTextRange().getLength()) {
          if (physicalToDisplay(physicalEnd) == displayEnd)           break;
          physicalEnd++;
        }
        int removeStart=physicalStart - psiElement.getStartOffsetInParent();
        int removeEnd=physicalEnd - psiElement.getStartOffsetInParent();
        final String oldElementText=psiElement.getText();
        final String newElementText=oldElementText.substring(0,removeStart) + oldElementText.substring(removeEnd);
        final PomModel model=getProject().getModel();
        final XmlAspect aspect=model.getModelAspect(XmlAspect.class);
        model.runTransaction(new PomTransactionBase(this,aspect){
          public PomModelEvent runInner() throws IncorrectOperationException {
            final String oldText=getText();
            if (newElementText.length() > 0) {
              final ASTNode e=getPolicy().encodeXmlTextContents(newElementText,XmlTextImpl.this,SharedImplUtil.findCharTableByTree(XmlTextImpl.this));
              replaceChild(psiElement.getNode(),e);
            }
 else {
              psiElement.delete();
            }
            clearCaches();
            return XmlTextChangedImpl.createXmlTextChanged(model,XmlTextImpl.this,oldText);
          }
        }
);
        return;
      }
    }
  }
  if (displayStart == 0 && displayEnd == value.length()) {
    delete();
  }
 else {
    setValue(new StringBuffer(getValue()).replace(displayStart,displayEnd,"").toString());
  }
}
