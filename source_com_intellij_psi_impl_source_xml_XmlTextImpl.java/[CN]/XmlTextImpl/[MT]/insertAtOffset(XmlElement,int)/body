{
  final PsiElement elementAt=findElementAt(physicalOffset);
  final int localOffset;
  if (elementAt != null) {
    localOffset=physicalOffset - elementAt.getStartOffsetInParent();
  }
 else {
    localOffset=element.getTextLength();
  }
  final PomModel model=getManager().getProject().getModel();
  final XmlAspect aspect=model.getModelAspect(XmlAspect.class);
  final ASTNode[] retHolder=new ASTNode[1];
  final ASTNode insertedElement=SourceTreeToPsiMap.psiElementToTree(element);
  final String oldText=getText();
  final ASTNode second;
  if (elementAt != null) {
    final ASTNode treeElement=SourceTreeToPsiMap.psiElementToTree(elementAt);
    second=split((LeafElement)treeElement,localOffset);
  }
 else {
    second=null;
  }
  if (element instanceof XmlTagChild) {
    final XmlElement parent=getParent();
    if (second != null) {
      final XmlText xmlText=getManager().getElementFactory().createTagFromText("<tag> </tag>").getValue().getTextElements()[0];
      final ASTNode compositeElement=SourceTreeToPsiMap.psiElementToTree(xmlText);
      TreeUtil.removeRange((TreeElement)compositeElement.getFirstChildNode(),null);
      model.runTransaction(new PomTransactionBase(this){
        public PomModelEvent run(){
          ASTNode current=second;
          while (current != null) {
            final ASTNode next=current.getTreeNext();
            removeChild(current);
            compositeElement.addChild(current,null);
            current=next;
          }
          return XmlTextChanged.createXmlTextChanged(model,XmlTextImpl.this,oldText);
        }
      }
,aspect);
      XmlElement xmlElement=(XmlElement)parent.addAfter(element,this);
      parent.addAfter(xmlText,xmlElement);
      return xmlElement;
    }
 else {
      return (XmlElement)parent.addAfter(element,this);
    }
  }
 else {
    model.runTransaction(new PomTransactionBase(this){
      public PomModelEvent run(){
        retHolder[0]=addInternal((TreeElement)insertedElement,insertedElement,retHolder[0],Boolean.TRUE);
        return XmlTextChanged.createXmlTextChanged(model,XmlTextImpl.this,oldText);
      }
    }
,aspect);
  }
  return (XmlElement)SourceTreeToPsiMap.treeElementToPsi(retHolder[0]);
}
