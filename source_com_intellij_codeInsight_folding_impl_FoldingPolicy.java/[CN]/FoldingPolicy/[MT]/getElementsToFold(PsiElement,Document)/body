{
  TreeMap<PsiElement,TextRange> map=new TreeMap<PsiElement,TextRange>(new Comparator<PsiElement>(){
    public int compare(    PsiElement element,    PsiElement element1){
      int startOffsetDiff=element1.getTextRange().getStartOffset() - element.getTextRange().getStartOffset();
      return startOffsetDiff != 0 ? startOffsetDiff : element1.getTextRange().getEndOffset() - element.getTextRange().getEndOffset();
    }
  }
);
  if (file instanceof PsiJavaFile) {
    PsiImportList importList=((PsiJavaFile)file).getImportList();
    if (importList != null) {
      PsiImportStatementBase[] statements=importList.getAllImportStatements();
      if (statements.length > 1) {
        map.put(importList,getRangeToFold(importList));
      }
    }
    PsiClass[] classes=((PsiJavaFile)file).getClasses();
    for (int i=0; i < classes.length; i++) {
      ProgressManager.getInstance().checkCanceled();
      addElementsToFold(map,classes[i],document,true);
    }
    TextRange range=getFileHeader((PsiJavaFile)file);
    if (range != null && document.getLineNumber(range.getEndOffset()) > document.getLineNumber(range.getStartOffset())) {
      map.put(file,range);
    }
  }
 else   if (file instanceof XmlFile) {
    XmlDocument xmlDocument=((XmlFile)file).getDocument();
    XmlTag rootTag=(xmlDocument != null) ? xmlDocument.getRootTag() : null;
    if (rootTag != null) {
      addElementsToFold(map,rootTag,document);
    }
  }
  return map;
}
