{
  if (element instanceof PsiMethod) {
    if (CodeGenerator.SETUP_METHOD_NAME.equals(((PsiMethod)element).getName())) {
      return element.getTextRange();
    }
 else {
      PsiCodeBlock body=((PsiMethod)element).getBody();
      if (body == null)       return null;
      return body.getTextRange();
    }
  }
 else   if (element instanceof PsiClassInitializer) {
    if (isGeneratedUIInitializer((PsiClassInitializer)element)) {
      return element.getTextRange();
    }
 else {
      PsiCodeBlock body=((PsiClassInitializer)element).getBody();
      if (body == null)       return null;
      return body.getTextRange();
    }
  }
 else   if (element instanceof PsiClass) {
    PsiClass aClass=(PsiClass)element;
    PsiJavaToken lBrace=aClass.getLBrace();
    if (lBrace == null)     return null;
    PsiJavaToken rBrace=aClass.getRBrace();
    if (rBrace == null)     return null;
    return new TextRange(lBrace.getTextOffset(),rBrace.getTextOffset() + 1);
  }
 else   if (element instanceof PsiJavaFile) {
    return getFileHeader((PsiJavaFile)element);
  }
 else   if (element instanceof PsiImportList) {
    PsiImportList list=(PsiImportList)element;
    PsiImportStatementBase[] statements=list.getAllImportStatements();
    if (statements.length == 0)     return null;
    final PsiElement importKeyword=statements[0].getFirstChild();
    if (importKeyword == null)     return null;
    int startOffset=importKeyword.getTextRange().getEndOffset() + 1;
    int endOffset=statements[statements.length - 1].getTextRange().getEndOffset();
    return new TextRange(startOffset,endOffset);
  }
 else   if (element instanceof PsiDocComment) {
    return element.getTextRange();
  }
 else   if (element instanceof XmlTag) {
    XmlTag tag=(XmlTag)element;
    ASTNode tagNameElement=XmlChildRole.START_TAG_NAME_FINDER.findChild(SourceTreeToPsiMap.psiElementToTree(tag));
    if (tagNameElement == null)     return null;
    int nameEnd=tagNameElement.getTextRange().getEndOffset();
    int end=tag.getLastChild().getTextRange().getStartOffset();
    XmlAttribute[] attributes=tag.getAttributes();
    if (attributes.length > 0) {
      XmlAttribute lastAttribute=attributes[attributes.length - 1];
      XmlAttribute lastAttributeBeforeCR=null;
      for (PsiElement child=tag.getFirstChild(); child != lastAttribute.getNextSibling(); child=child.getNextSibling()) {
        if (child instanceof XmlAttribute) {
          lastAttributeBeforeCR=(XmlAttribute)child;
        }
 else         if (child instanceof PsiWhiteSpace) {
          if (child.textContains('\n'))           break;
        }
      }
      if (lastAttributeBeforeCR != null) {
        int attributeEnd=lastAttributeBeforeCR.getTextRange().getEndOffset();
        return new TextRange(attributeEnd,end);
      }
    }
    return new TextRange(nameEnd,end);
  }
 else {
    return null;
  }
}
