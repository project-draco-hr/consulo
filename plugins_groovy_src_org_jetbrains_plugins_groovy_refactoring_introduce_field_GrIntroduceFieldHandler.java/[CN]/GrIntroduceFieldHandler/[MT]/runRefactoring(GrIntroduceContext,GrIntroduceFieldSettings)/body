{
  final PsiClass targetClass=(PsiClass)context.getScope();
  if (targetClass == null)   return null;
  final GrVariableDeclaration declaration=createField(context,settings);
  final GrVariableDeclaration added;
  if (targetClass instanceof GrEnumTypeDefinition) {
    final GrEnumConstantList enumConstants=((GrEnumTypeDefinition)targetClass).getEnumConstantList();
    added=(GrVariableDeclaration)targetClass.addAfter(declaration,enumConstants);
  }
 else {
    added=((GrVariableDeclaration)targetClass.add(declaration));
  }
  final GrField field=(GrField)added.getVariables()[0];
  GrIntroduceFieldSettings.Init i=settings.initializeIn();
  if (i == CONSTRUCTOR) {
    initializeInConstructor(context,settings,field);
  }
 else   if (i == CUR_METHOD) {
    initializeInMethod(context,settings,field);
  }
  GrReferenceAdjuster.shortenReferences(added);
  if (settings.removeLocalVar()) {
    deleteLocalVar(context);
  }
  if (settings.replaceAllOccurrences()) {
    GroovyRefactoringUtil.sortOccurrences(context.getOccurrences());
    for (    PsiElement occurrence : context.getOccurrences()) {
      replaceOccurrence(field,occurrence);
    }
  }
 else {
    final GrExpression expression=context.getExpression();
    if (PsiUtil.isExpressionStatement(expression)) {
      expression.delete();
    }
 else {
      replaceOccurrence(field,expression);
    }
  }
  return field;
}
