{
  if (varRangeMarker != null) {
    context.getEditor().getCaretModel().moveToOffset(var.getNameIdentifierGroovy().getTextRange().getStartOffset());
  }
 else   if (expressionRangeMarker != null) {
    context.getEditor().getCaretModel().moveToOffset(expressionRangeMarker.getStartOffset());
  }
 else   if (stringPartRangeMarker != null) {
    int offset=stringPartRangeMarker.getStartOffset();
    PsiElement at=var.getContainingFile().findElementAt(offset);
    GrExpression ref=PsiTreeUtil.getParentOfType(at,GrBinaryExpression.class).getRightOperand();
    context.getEditor().getCaretModel().moveToOffset(ref.getTextRange().getStartOffset());
  }
  GrExpression initializer=GroovyPsiElementFactory.getInstance(context.getProject()).createExpressionFromText(var.getInitializerGroovy().getText());
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      var.setInitializerGroovy(null);
    }
  }
);
  return new GrInplaceFieldIntroducer(var,context,occurrenceMarkers,settings.replaceAllOccurrences(),expressionRangeMarker,stringPartRangeMarker,initializer);
}
