{
  final GrTypeDefinition scope=(GrTypeDefinition)context.scope;
  PsiMethod[] constructors=scope.getConstructors();
  final GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(context.project);
  if (constructors.length == 0) {
    final GrMethod constructor=factory.createConstructorFromText(scope.getName(),EMPTY_STRING_ARRAY,EMPTY_STRING_ARRAY,"{}",scope);
    final PsiElement added=scope.add(constructor);
    constructors=new PsiMethod[]{(PsiMethod)added};
  }
  for (  PsiMethod constructor : constructors) {
    final GrConstructorInvocation invocation=PsiImplUtil.getChainingConstructorInvocation((GrConstructor)constructor);
    if (invocation != null && invocation.isThisCall())     continue;
    final PsiElement anchor=findAnchor(context,settings,(GrConstructor)constructor);
    generateAssignment(context,settings,field,(GrStatement)anchor,((GrConstructor)constructor).getBlock());
  }
}
