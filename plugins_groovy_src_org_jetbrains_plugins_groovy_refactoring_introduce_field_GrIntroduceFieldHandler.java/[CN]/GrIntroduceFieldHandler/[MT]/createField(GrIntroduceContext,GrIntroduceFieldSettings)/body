{
  final String name=settings.getName();
  final PsiType type=settings.getSelectedType();
  final String modifier=settings.getVisibilityModifier();
  final GrExpression initializer;
  if (settings.initializeIn() == FIELD_DECLARATION) {
    if (settings.removeLocalVar()) {
      initializer=extractVarInitializer(context);
    }
 else {
      initializer=context.getExpression();
    }
  }
 else {
    initializer=null;
  }
  List<String> modifiers=new ArrayList<String>();
  if (context.getScope() instanceof GroovyScriptClass)   modifiers.add("@" + GroovyCommonClassNames.GROOVY_TRANSFORM_FIELD);
  if (settings.isStatic())   modifiers.add(PsiModifier.STATIC);
  if (!PsiModifier.PACKAGE_LOCAL.equals(modifier))   modifiers.add(modifier);
  if (settings.declareFinal())   modifiers.add(PsiModifier.FINAL);
  final String[] arr_modifiers=ArrayUtil.toStringArray(modifiers);
  final GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(context.getProject());
  if (context.getScope() instanceof GroovyScriptClass) {
    return factory.createVariableDeclaration(arr_modifiers,initializer,type,name);
  }
 else {
    return factory.createFieldDeclaration(arr_modifiers,name,initializer,type);
  }
}
