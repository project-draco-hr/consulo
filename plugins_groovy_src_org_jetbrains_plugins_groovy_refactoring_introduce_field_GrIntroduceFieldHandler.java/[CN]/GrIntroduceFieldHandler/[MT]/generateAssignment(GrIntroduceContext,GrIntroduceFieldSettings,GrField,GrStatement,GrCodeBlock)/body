{
  final GrExpression initializer;
  if (settings.removeLocalVar()) {
    initializer=extractVarInitializer(context);
  }
 else {
    initializer=context.expression;
  }
  GrAssignmentExpression init=(GrAssignmentExpression)GroovyPsiElementFactory.getInstance(context.project).createExpressionFromText(settings.getName() + " = " + initializer.getText());
  GrCodeBlock block;
  if (anchor != null) {
    anchor=GroovyRefactoringUtil.addBlockIntoParent(anchor);
    LOG.assertTrue(anchor.getParent() instanceof GrCodeBlock);
    block=(GrCodeBlock)anchor.getParent();
  }
 else {
    block=defaultContainer;
  }
  init=(GrAssignmentExpression)block.addStatementBefore(init,anchor);
  replaceOccurrence(field,init.getLValue());
}
