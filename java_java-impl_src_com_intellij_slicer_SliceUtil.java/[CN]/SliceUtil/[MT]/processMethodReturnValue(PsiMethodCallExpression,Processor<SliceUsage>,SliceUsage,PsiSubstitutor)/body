{
  final JavaResolveResult resolved=methodCallExpr.resolveMethodGenerics();
  final PsiElement r=resolved.getElement();
  if (!(r instanceof PsiMethod))   return true;
  PsiMethod methodCalled=(PsiMethod)r;
  PsiType returnType=methodCalled.getReturnType();
  if (returnType == null)   return true;
  final PsiCodeBlock body=methodCalled.getBody();
  if (body == null)   return true;
  final boolean[] result={true};
  body.accept(new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitAnonymousClass(    PsiAnonymousClass aClass){
    }
    public void visitReturnStatement(    final PsiReturnStatement statement){
      PsiExpression returnValue=statement.getReturnValue();
      if (returnValue == null)       return;
      PsiSubstitutor substitutor=resolved.getSubstitutor().putAll(parentSubstitutor);
      if (!handToProcessor(returnValue,processor,parent,substitutor)) {
        stopWalking();
        result[0]=false;
      }
    }
  }
);
  return result[0];
}
