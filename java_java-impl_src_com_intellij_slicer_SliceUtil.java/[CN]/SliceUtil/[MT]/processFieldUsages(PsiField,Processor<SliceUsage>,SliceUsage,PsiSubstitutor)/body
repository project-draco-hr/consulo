{
  if (field.hasInitializer()) {
    PsiExpression initializer=field.getInitializer();
    if (initializer != null && !(field instanceof PsiCompiledElement)) {
      if (!handToProcessor(initializer,processor,parent,parentSubstitutor))       return false;
    }
  }
  return ReferencesSearch.search(field,parent.getScope().toSearchScope()).forEach(new Processor<PsiReference>(){
    public boolean process(    final PsiReference reference){
      SliceManager.getInstance(field.getProject()).checkCanceled();
      PsiElement element=reference.getElement();
      if (!(element instanceof PsiReferenceExpression))       return true;
      if (element instanceof PsiCompiledElement)       return true;
      final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)element;
      PsiElement parentExpr=referenceExpression.getParent();
      if (PsiUtil.isOnAssignmentLeftHand(referenceExpression)) {
        PsiExpression rExpression=((PsiAssignmentExpression)parentExpr).getRExpression();
        PsiType rtype=rExpression.getType();
        PsiType ftype=field.getType();
        if (TypeConversionUtil.isAssignable(parentSubstitutor.substitute(ftype),parentSubstitutor.substitute(rtype))) {
          return handToProcessor(rExpression,processor,parent,parentSubstitutor);
        }
      }
      if (parentExpr instanceof PsiPrefixExpression && ((PsiPrefixExpression)parentExpr).getOperand() == referenceExpression && (((PsiPrefixExpression)parentExpr).getOperationTokenType() == JavaTokenType.PLUSPLUS || ((PsiPrefixExpression)parentExpr).getOperationTokenType() == JavaTokenType.MINUSMINUS)) {
        PsiPrefixExpression prefixExpression=(PsiPrefixExpression)parentExpr;
        return handToProcessor(prefixExpression,processor,parent,parentSubstitutor);
      }
      if (parentExpr instanceof PsiPostfixExpression && ((PsiPostfixExpression)parentExpr).getOperand() == referenceExpression && (((PsiPostfixExpression)parentExpr).getOperationTokenType() == JavaTokenType.PLUSPLUS || ((PsiPostfixExpression)parentExpr).getOperationTokenType() == JavaTokenType.MINUSMINUS)) {
        PsiPostfixExpression postfixExpression=(PsiPostfixExpression)parentExpr;
        return handToProcessor(postfixExpression,processor,parent,parentSubstitutor);
      }
      return true;
    }
  }
);
}
