{
  if (list != null) {
    TextRange range=list.getTextRange();
    if (!range.contains(offset)) {
      offset=range.getStartOffset() + 1;
    }
  }
  if (previousOffset == offset)   return Pair.create(previousBestPoint,previousBestPosition);
  final boolean isMultiline=list != null && StringUtil.containsAnyChar(list.getText(),"\n\r");
  final LogicalPosition pos=myEditor.offsetToLogicalPosition(offset);
  Pair<Point,Short> position;
  if (!isMultiline) {
    position=chooseBestHintPosition(myEditor.getProject(),myEditor,pos.line,pos.column,hint,awtTooltip,preferredPosition);
  }
 else {
    Point p=HintManagerImpl.getHintPosition(hint,myEditor,pos,HintManager.ABOVE);
    position=new Pair<Point,Short>(p,HintManager.ABOVE);
  }
  previousBestPoint=position.getFirst();
  previousBestPosition=position.getSecond();
  previousOffset=offset;
  return position;
}
