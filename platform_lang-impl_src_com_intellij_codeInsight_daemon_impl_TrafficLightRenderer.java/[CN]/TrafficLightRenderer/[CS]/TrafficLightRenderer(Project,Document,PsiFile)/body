{
  myProject=project;
  myDaemonCodeAnalyzer=project == null ? null : (DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(project);
  myDocument=document;
  myFile=file;
  mySeverityRegistrar=SeverityRegistrar.getInstance(myProject);
  errorCount=new int[mySeverityRegistrar.getSeverityMaxIndex()];
  if (project != null) {
    MarkupModelEx model=(MarkupModelEx)DocumentMarkupModel.forDocument(document,project,true);
    model.addMarkupModelListener(new MarkupModelListener(){
      @Override public void afterAdded(      @NotNull RangeHighlighterEx highlighter){
        incErrorCount(highlighter,1);
      }
      @Override public void beforeRemoved(      @NotNull RangeHighlighterEx highlighter){
        incErrorCount(highlighter,-1);
      }
      @Override public void attributesChanged(      @NotNull RangeHighlighterEx highlighter){
      }
    }
);
    for (    RangeHighlighter rangeHighlighter : model.getAllHighlighters()) {
      incErrorCount(rangeHighlighter,1);
    }
  }
}
