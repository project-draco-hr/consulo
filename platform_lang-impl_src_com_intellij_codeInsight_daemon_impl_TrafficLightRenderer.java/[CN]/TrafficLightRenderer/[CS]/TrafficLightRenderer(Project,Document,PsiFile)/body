{
  myProject=project;
  myDaemonCodeAnalyzer=project == null ? null : (DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(project);
  myDocument=document;
  myFile=file;
  mySeverityRegistrar=SeverityRegistrar.getInstance(myProject);
  refresh();
  if (project != null) {
    final MarkupModelEx model=(MarkupModelEx)DocumentMarkupModel.forDocument(document,project,true);
    model.addMarkupModelListener(this,new MarkupModelListener(){
      @Override public void afterAdded(      @NotNull RangeHighlighterEx highlighter){
        incErrorCount(highlighter,1);
      }
      @Override public void beforeRemoved(      @NotNull RangeHighlighterEx highlighter){
        incErrorCount(highlighter,-1);
      }
      @Override public void attributesChanged(      @NotNull RangeHighlighterEx highlighter){
      }
    }
);
    UIUtil.invokeLaterIfNeeded(new Runnable(){
      public void run(){
        for (        RangeHighlighter rangeHighlighter : model.getAllHighlighters()) {
          incErrorCount(rangeHighlighter,1);
        }
      }
    }
);
  }
}
