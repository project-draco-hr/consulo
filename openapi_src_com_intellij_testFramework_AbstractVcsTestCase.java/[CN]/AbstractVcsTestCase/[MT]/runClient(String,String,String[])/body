{
  final List<String> arguments=new ArrayList<String>();
  arguments.add(new File(myClientBinaryPath,exeName).toString());
  Collections.addAll(arguments,commandLine);
  Process clientProcess=new ProcessBuilder().command(arguments).start();
  final RunResult result=new RunResult();
  if (stdin != null) {
    OutputStream outputStream=clientProcess.getOutputStream();
    try {
      byte[] bytes=stdin.getBytes();
      outputStream.write(bytes);
    }
  finally {
      outputStream.close();
    }
  }
  OSProcessHandler handler=new OSProcessHandler(clientProcess,""){
    public Charset getCharset(){
      return CharsetToolkit.getDefaultSystemCharset();
    }
  }
;
  handler.addProcessListener(new ProcessAdapter(){
    public void onTextAvailable(    final ProcessEvent event,    final Key outputType){
      if (outputType == ProcessOutputTypes.STDOUT) {
        result.stdOut+=event.getText();
      }
 else       if (outputType == ProcessOutputTypes.STDERR) {
        result.stdErr+=event.getText();
      }
    }
  }
);
  handler.startNotify();
  handler.waitFor();
  result.exitCode=clientProcess.exitValue();
  return result;
}
