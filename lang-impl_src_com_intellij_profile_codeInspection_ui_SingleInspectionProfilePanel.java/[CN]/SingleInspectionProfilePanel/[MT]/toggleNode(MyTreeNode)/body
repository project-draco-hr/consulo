{
  List<TreePath> expandedPaths=TreeUtil.collectExpandedPaths(myTree);
  node.isEnabled=!node.isEnabled;
  Object userObject=node.getUserObject();
  final MyTreeNode parent=(MyTreeNode)node.getParent();
  if (userObject instanceof Descriptor) {
    toggleToolNode(node);
  }
 else {
    final Enumeration children=node.children();
    node.isProperSetting=false;
    while (children.hasMoreElements()) {
      MyTreeNode child=(MyTreeNode)children.nextElement();
      child.isEnabled=node.isEnabled;
      child.isProperSetting=false;
      if (child.getUserObject() instanceof Descriptor) {
        toggleToolNode(child);
      }
 else {
        final Enumeration descriptorNodes=child.children();
        while (descriptorNodes.hasMoreElements()) {
          MyTreeNode descriptorNode=(MyTreeNode)descriptorNodes.nextElement();
          descriptorNode.isEnabled=child.isEnabled;
          if (descriptorNode.getUserObject() instanceof Descriptor) {
            toggleToolNode(descriptorNode);
          }
          child.isProperSetting|=descriptorNode.isProperSetting;
        }
      }
      node.isProperSetting|=child.isProperSetting;
    }
  }
  updateUpHierarchy(node,parent);
  reloadModel();
  updateOptionsAndDescriptionPanel(new TreePath(node.getPath()));
  TreeUtil.restoreExpandedPaths(myTree,expandedPaths);
}
