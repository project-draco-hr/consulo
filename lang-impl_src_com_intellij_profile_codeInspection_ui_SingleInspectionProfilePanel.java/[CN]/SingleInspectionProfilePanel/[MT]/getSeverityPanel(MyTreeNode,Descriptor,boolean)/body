{
  final LevelChooser chooser=new LevelChooser(((SeverityProvider)mySelectedProfile.getProfileManager()).getOwnSeverityRegistrar());
  chooser.getComboBox().addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      boolean toUpdate=mySelectedProfile.getErrorLevel(descriptor.getKey(),descriptor.getScope()) != chooser.getLevel();
      mySelectedProfile.setErrorLevel(descriptor.getKey(),chooser.getLevel());
      if (toUpdate)       node.isProperSetting=mySelectedProfile.isProperSetting(descriptor.getKey());
    }
  }
);
  chooser.setLevel(mySelectedProfile.getErrorLevel(descriptor.getKey(),descriptor.getScope()));
  final JPanel withSeverity=new JPanel(new GridBagLayout());
  withSeverity.add(new JLabel(InspectionsBundle.message("inspection.severity")),new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,5,5,10),0,0));
  Dimension dimension=new Dimension(150,chooser.getPreferredSize().height);
  chooser.setPreferredSize(dimension);
  chooser.setMinimumSize(dimension);
  withSeverity.add(chooser,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,1.0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,5,0),0,0));
  if (multipleScopes) {
    withSeverity.setBorder(BorderFactory.createEtchedBorder());
    withSeverity.add(new JLabel("Scope:"),new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,5,5,10),0,0));
    final DefaultComboBoxModel model=new DefaultComboBoxModel();
    final NamedScopesHolder scopesHolder=mySelectedProfile.getProfileManager().getScopesManager();
    final NamedScope[] scopes=scopesHolder.getScopes();
    for (    NamedScope scope : scopes) {
      model.addElement(scope);
    }
    final JComboBox scopesCombo=new JComboBox(model);
    scopesCombo.setSelectedItem(descriptor.getScope());
    withSeverity.add(scopesCombo,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,1.0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,5,0),0,0));
  }
  final JComponent config=descriptor.getAdditionalConfigPanel();
  if (config != null) {
    withSeverity.add(config,new GridBagConstraints(0,GridBagConstraints.RELATIVE,2,1,1.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
  }
 else {
    withSeverity.add(new JPanel(),new GridBagConstraints(0,GridBagConstraints.RELATIVE,2,1,1.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
  }
  if (myAreScopesAvailable) {
    final JPanel addDeleteMoveUpDouwnPanel=new JPanel(new FlowLayout(FlowLayout.LEFT));
    final JButton addScope=new JButton("Add scope");
    addScope.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        final Descriptor descr1=new Descriptor(new Pair<NamedScope,InspectionTool>(descriptor.getScope(),InspectionToolRegistrar.getInstance().createInspectionTool(descriptor.getKey().toString(),descriptor.getTool())),mySelectedProfile);
        node.getDesriptors().add(descr1);
        updateOptionsAndDescriptionPanel(new TreePath(node.getPath()));
      }
    }
);
    addDeleteMoveUpDouwnPanel.add(addScope);
    final JButton removeScope=new JButton("Remove Scope");
    removeScope.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        node.getDesriptors().remove(descriptor);
        updateOptionsAndDescriptionPanel(new TreePath(node.getPath()));
      }
    }
);
    addDeleteMoveUpDouwnPanel.add(removeScope);
    final JButton moveUp=new JButton("Move Up");
    moveUp.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        final int desrIdx=node.getDesriptors().indexOf(descriptor);
        node.getDesriptors().remove(descriptor);
        node.getDesriptors().add(desrIdx - 1,descriptor);
        updateOptionsAndDescriptionPanel(new TreePath(node.getPath()));
      }
    }
);
    addDeleteMoveUpDouwnPanel.add(moveUp);
    final JButton moveDown=new JButton("Move Down");
    moveDown.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        final int desrIdx=node.getDesriptors().indexOf(descriptor);
        node.getDesriptors().remove(descriptor);
        node.getDesriptors().add(desrIdx + 1,descriptor);
        updateOptionsAndDescriptionPanel(new TreePath(node.getPath()));
      }
    }
);
    addDeleteMoveUpDouwnPanel.add(moveDown);
    withSeverity.add(addDeleteMoveUpDouwnPanel,new GridBagConstraints(0,GridBagConstraints.RELATIVE,2,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));
  }
  return withSeverity;
}
