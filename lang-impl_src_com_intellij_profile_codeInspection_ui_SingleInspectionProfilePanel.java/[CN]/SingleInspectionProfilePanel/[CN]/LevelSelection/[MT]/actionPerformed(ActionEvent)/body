{
  final int[] rows=myTree.getSelectionRows();
  final boolean showOptionsAndDescriptorPanels=rows != null && rows.length == 1;
  for (int i=0; rows != null && i < rows.length; i++) {
    final InspectionConfigTreeNode node=(InspectionConfigTreeNode)myTree.getPathForRow(rows[i]).getLastPathComponent();
    final InspectionConfigTreeNode parent=(InspectionConfigTreeNode)node.getParent();
    if (node.getUserObject() instanceof Descriptor) {
      updateErrorLevel(node,showOptionsAndDescriptorPanels);
      updateUpHierarchy(node,parent);
    }
 else {
      node.isProperSetting=false;
      for (int j=0; j < node.getChildCount(); j++) {
        final InspectionConfigTreeNode child=(InspectionConfigTreeNode)node.getChildAt(j);
        if (child.getUserObject() instanceof List) {
          updateErrorLevel(child,showOptionsAndDescriptorPanels);
        }
 else {
          child.isProperSetting=false;
          for (int k=0; k < child.getChildCount(); k++) {
            final InspectionConfigTreeNode descriptorNode=(InspectionConfigTreeNode)child.getChildAt(k);
            if (descriptorNode.getUserObject() instanceof List) {
              updateErrorLevel(descriptorNode,showOptionsAndDescriptorPanels);
            }
            child.isProperSetting|=descriptorNode.isProperSetting;
          }
        }
        node.isProperSetting|=child.isProperSetting;
      }
      updateUpHierarchy(node,parent);
    }
  }
  if (rows != null && rows.length == 1) {
    updateOptionsAndDescriptionPanel(myTree.getPathForRow(rows[0]));
  }
 else {
    initOptionsAndDescriptionPanel();
  }
  repaintTableData();
}
