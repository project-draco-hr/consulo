{
  if (methodsAlwaysSynchronized.contains(method)) {
    return true;
  }
  if (methodsNotAlwaysSynchronized.contains(method)) {
    return false;
  }
  if (!method.hasModifierProperty(PsiModifier.PRIVATE)) {
    return false;
  }
  if (pendingMethods.contains(method)) {
    return true;
  }
  pendingMethods.add(method);
  final PsiManager manager=method.getManager();
  final PsiSearchHelper searchHelper=manager.getSearchHelper();
  final SearchScope scope=method.getUseScope();
  final PsiReference[] references=searchHelper.findReferences(method,scope,true);
  for (  PsiReference reference : references) {
    if (!isInSynchronizedContext(reference,methodsAlwaysSynchronized,methodsNotAlwaysSynchronized,pendingMethods)) {
      methodsNotAlwaysSynchronized.add(method);
      pendingMethods.remove(method);
      return false;
    }
  }
  methodsAlwaysSynchronized.add(method);
  pendingMethods.remove(method);
  return true;
}
