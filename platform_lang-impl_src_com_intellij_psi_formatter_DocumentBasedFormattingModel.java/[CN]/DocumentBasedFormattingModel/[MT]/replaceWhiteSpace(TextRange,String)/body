{
  boolean removesStartMarker;
  String marker;
  if ((removesStartMarker=removesPattern(textRange,whiteSpace,marker="<![CDATA[") || removesPattern(textRange,whiteSpace,marker="<!--[")) || removesPattern(textRange,whiteSpace,marker="]]>") || removesPattern(textRange,whiteSpace,marker="]-->")) {
    String newWs=null;
    if (removesStartMarker) {
      int at=CharArrayUtil.indexOf(myDocument.getCharsSequence(),marker,textRange.getStartOffset(),textRange.getEndOffset() + 1);
      String ws=myDocument.getCharsSequence().subSequence(textRange.getStartOffset(),textRange.getEndOffset()).toString();
      newWs=mergeWsWithCdataMarker(whiteSpace,ws,at - textRange.getStartOffset());
      if (removesPattern(textRange,newWs != null ? newWs : whiteSpace,marker="]]>")) {
        int i;
        if (newWs != null && (i=newWs.lastIndexOf('\n')) > 0) {
          int cdataStart=newWs.indexOf("<![CDATA[");
          int i2=newWs.lastIndexOf('\n',cdataStart);
          String cdataIndent=i2 != -1 ? newWs.substring(i2 + 1,cdataStart) : "";
          newWs=newWs.substring(0,i) + cdataIndent + marker+ newWs.substring(i);
        }
      }
    }
    if (newWs == null)     return textRange;
    whiteSpace=newWs;
  }
  myDocument.replaceString(textRange.getStartOffset(),textRange.getEndOffset(),whiteSpace);
  return new TextRange(textRange.getStartOffset(),textRange.getStartOffset() + whiteSpace.length());
}
