{
  CharClasses cl=parser.getCharClasses();
  if (cl.getMaxCharCode() < 256) {
    emitCharMapArrayUnPacked();
    return;
  }
  intervals=cl.getIntervals();
  println("");
  println("  /** ");
  println("   * Translates characters to character classes");
  println("   */");
  println("  private static final String ZZ_CMAP_PACKED = ");
  int n=0;
  print("    \"");
  int i=0;
  int count, value;
  while (i < intervals.length) {
    count=intervals[i].end - intervals[i].start + 1;
    value=colMap[intervals[i].charClass];
    while (count > 0xFFFF) {
      printUC(0xFFFF);
      printUC(value);
      count-=0xFFFF;
      n++;
    }
    printUC(count);
    printUC(value);
    if (i < intervals.length - 1) {
      if (++n >= 10) {
        println("\"+");
        print("    \"");
        n=0;
      }
    }
    i++;
  }
  println("\";");
  println();
  println("  /** ");
  println("   * Translates characters to character classes");
  println("   */");
  println("  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);");
  println();
}
