{
  CharClasses cl=parser.getCharClasses();
  if (cl.getMaxCharCode() < 256) {
    emitCharMapArrayUnPacked();
    return;
  }
  intervalls=cl.getIntervalls();
  println("");
  println("  /** ");
  println("   * Translates characters to character classes");
  println("   */");
  println("  private static final String ZZ_CMAP_PACKED = ");
  int n=0;
  print("    \"");
  int i=0;
  while (i < intervalls.length - 1) {
    int count=intervalls[i].end - intervalls[i].start + 1;
    int value=colMap[intervalls[i].charClass];
    printUC(count);
    printUC(value);
    if (++n >= 10) {
      println("\"+");
      print("    \"");
      n=0;
    }
    i++;
  }
  printUC(intervalls[i].end - intervalls[i].start + 1);
  printUC(colMap[intervalls[i].charClass]);
  println("\";");
  println();
  println("  /** ");
  println("   * Translates characters to character classes");
  println("   */");
  println("  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);");
  println();
}
