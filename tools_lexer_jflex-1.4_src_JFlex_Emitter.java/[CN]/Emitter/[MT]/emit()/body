{
  setupEOFCode();
  if (scanner.functionName == null)   scanner.functionName="yylex";
  reduceColumns();
  findActionStates();
  emitHeader();
  emitUserCode();
  emitClassName();
  skel.emitNext();
  println("  private static final int ZZ_BUFFERSIZE = " + scanner.bufferSize + ";");
  if (scanner.debugOption) {
    println("  private static final String ZZ_NL = System.getProperty(\"line.separator\");");
  }
  skel.emitNext();
  emitLexicalStates();
  emitCharMapArray();
  emitActionTable();
  if (scanner.useRowMap) {
    reduceRows();
    emitRowMapArray();
    if (scanner.packed)     emitDynamicInit();
 else     emitZZTrans();
  }
  skel.emitNext();
  if (scanner.useRowMap)   emitAttributes();
  skel.emitNext();
  emitClassCode();
  skel.emitNext();
  emitConstructorDecl();
  emitCharMapInitFunction();
  skel.emitNext();
  emitScanError();
  skel.emitNext();
  emitDoEOF();
  skel.emitNext();
  emitLexFunctHeader();
  emitNextInput();
  if (scanner.useRowMap)   emitGetRowMapNext();
 else   emitTransitionTable();
  if (scanner.lookAheadUsed)   emitPushback();
  skel.emitNext();
  emitActions();
  skel.emitNext();
  emitEOFVal();
  skel.emitNext();
  emitNoMatch();
  skel.emitNext();
  emitMain();
  skel.emitNext();
  out.close();
}
