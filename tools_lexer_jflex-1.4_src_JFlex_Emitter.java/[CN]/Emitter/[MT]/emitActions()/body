{
  println("      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {");
  int i=actionTable.size() + 1;
  Enumeration actions=actionTable.keys();
  while (actions.hasMoreElements()) {
    Action action=(Action)actions.nextElement();
    int label=((Integer)actionTable.get(action)).intValue();
    println("        case " + label + ": ");
    if (action.lookAhead() == Action.FIXED_BASE) {
      println("          // lookahead expression with fixed base length");
      println("          zzMarkedPos = zzStartRead + " + action.getLookLength() + ";");
    }
    if (action.lookAhead() == Action.FIXED_LOOK || action.lookAhead() == Action.FINITE_CHOICE) {
      println("          // lookahead expression with fixed lookahead length");
      println("          yypushback(" + action.getLookLength() + ");");
    }
    if (action.lookAhead() == Action.GENERAL_LOOK) {
      println("          // general lookahead, find correct zzMarkedPos");
      println("          { int zzFState = " + dfa.entryState[action.getEntryState()] + ";");
      println("            int zzFPos = zzStartRead;");
      println("            if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }");
      println("            boolean zzFinL[] = zzFin;");
      println("            while (zzFState != -1 && zzFPos < zzMarkedPos) {");
      println("              if ((zzAttrL[zzFState] & 1) == 1) { zzFinL[zzFPos] = true; } ");
      println("              zzInput = zzBufferL[zzFPos++];");
      println("              zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];");
      println("            }");
      println("            if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) { zzFinL[zzFPos] = true; } ");
      println();
      println("            zzFState = " + dfa.entryState[action.getEntryState() + 1] + ";");
      println("            zzFPos = zzMarkedPos;");
      println("            while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {");
      println("              zzInput = zzBufferL[--zzFPos];");
      println("              zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];");
      println("            };");
      println("            zzMarkedPos = zzFPos;");
      println("          }");
    }
    if (scanner.debugOption) {
      print("          System.out.println(");
      if (scanner.lineCount)       print("\"line: \"+(yyline+1)+\" \"+");
      if (scanner.columnCount)       print("\"col: \"+(yycolumn+1)+\" \"+");
      println("\"match: --\"+yytext()+\"--\");");
      print("          System.out.println(\"action [" + action.priority + "] { ");
      print(escapify(action.content));
      println(" }\");");
    }
    println("          { " + action.content);
    println("          }");
    println("        case " + (i++) + ": break;");
  }
}
