{
  ArrayList<StructureViewTreeElement> array=new ArrayList<StructureViewTreeElement>();
  List<PsiElement> ownChildren=Arrays.asList(myClass.getChildren());
  ArrayList<PsiElement> inherited=new ArrayList<PsiElement>();
  for (Iterator<PsiElement> iterator=ownChildren.iterator(); iterator.hasNext(); ) {
    PsiElement psiElement=iterator.next();
    if (psiElement.isValid())     inherited.add(psiElement);
  }
  PsiScopesUtil.processScope(myClass,new AddAllMembersProcessor(inherited,myClass,new AddAllMembersProcessor.MemberFilter(){
    protected boolean isVisible(    PsiModifierListOwner member){
      return true;
    }
  }
),PsiSubstitutor.UNKNOWN,null,myClass);
  for (Iterator iterator=inherited.iterator(); iterator.hasNext(); ) {
    PsiElement child=(PsiElement)iterator.next();
    if (child instanceof PsiClass || child instanceof PsiMethod || child instanceof PsiField) {
      if (child instanceof PsiClass) {
        if (child.isValid()) {
          array.add(new JavaClassTreeElement((PsiClass)child,!ownChildren.contains(child)));
        }
      }
 else       if (child.isValid()) {
        addMemeber(child,array,!ownChildren.contains(child));
      }
    }
  }
  return array;
}
