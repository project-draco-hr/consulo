{
  final ArrayList<T> nodes=new ArrayList<T>();
  final Object root=getModel().getRoot();
  if (!(root instanceof CheckedTreeNode)) {
    throw new IllegalStateException("The root must be instance of the " + CheckedTreeNode.class.getName() + ": "+ root.getClass().getName());
  }
  new Object(){
    @SuppressWarnings("unchecked") public void collect(    CheckedTreeNode node){
      if (node.isLeaf()) {
        Object userObject=node.getUserObject();
        if (node.isChecked() && userObject != null && nodeType.isAssignableFrom(userObject.getClass())) {
          final T value=(T)userObject;
          if (filter != null && !filter.accept(value))           return;
          nodes.add(value);
        }
      }
 else {
        for (int i=0; i < node.getChildCount(); i++) {
          final TreeNode child=node.getChildAt(i);
          if (child instanceof CheckedTreeNode) {
            collect((CheckedTreeNode)child);
          }
        }
      }
    }
  }
.collect((CheckedTreeNode)root);
  T[] result=(T[])Array.newInstance(nodeType,nodes.size());
  nodes.toArray(result);
  return result;
}
