{
  if (myContext.getProject().isDisposed()) {
    return EMPTY_GENERATION_ITEM_ARRAY;
  }
  VirtualFile[] files=myContext.getProjectCompileScope().getFiles(AndroidIdlFileType.ourFileType,false);
  List<GenerationItem> items=new ArrayList<GenerationItem>(files.length);
  for (  VirtualFile file : files) {
    Module module=myContext.getModuleByFile(file);
    AndroidFacet facet=FacetManager.getInstance(module).getFacetByType(AndroidFacet.ID);
    if (facet != null) {
      IAndroidTarget target=facet.getConfiguration().getAndroidTarget();
      if (target == null) {
        myContext.addMessage(CompilerMessageCategory.ERROR,AndroidBundle.message("android.compilation.error.specify.platform",module.getName()),null,-1,-1);
        continue;
      }
      String packageName=AndroidUtils.getPackageName(module,file);
      if (packageName == null) {
        myContext.addMessage(CompilerMessageCategory.ERROR,"Cannot compute package for file",file.getUrl(),-1,-1);
        continue;
      }
      addItem(file,facet,target,packageName,items);
      if (facet.getConfiguration().LIBRARY_PROJECT) {
        HashSet<Module> usingModules=new HashSet<Module>();
        AndroidUtils.collectModulesDependingOn(module,usingModules);
        for (        Module module1 : usingModules) {
          AndroidFacet facet1=AndroidFacet.getInstance(module1);
          if (facet1 != null) {
            addItem(file,facet1,target,packageName,items);
          }
        }
      }
    }
  }
  return items.toArray(new GenerationItem[items.size()]);
}
