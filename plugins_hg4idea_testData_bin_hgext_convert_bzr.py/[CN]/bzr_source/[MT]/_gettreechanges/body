def _gettreechanges(self, current, origin):
    revid = current._revision_id
    changes = []
    renames = {}
    for (fileid, paths, changed_content, versioned, parent, name, kind, executable) in current.iter_changes(origin):
        if ((paths[0] == u'') or (paths[1] == u'')):
            continue
        if (kind[1] == 'directory'):
            if (kind[0] not in (None, 'directory')):
                changes.append((self.recode(paths[0]), revid))
            if ((None not in paths) and (paths[0] != paths[1])):
                subdir = origin.inventory.path2id(paths[0])
                for (name, entry) in origin.inventory.iter_entries(subdir):
                    if (entry.kind == 'directory'):
                        continue
                    frompath = self.recode(((paths[0] + '/') + name))
                    topath = self.recode(((paths[1] + '/') + name))
                    changes.append((frompath, revid))
                    changes.append((topath, revid))
                    mode = ((entry.executable and 'x') or ((entry.kind == 'symlink') and 's') or '')
                    self._modecache[(topath, revid)] = mode
                    renames[topath] = frompath
            continue
        (path, topath) = [self.recode(part) for part in paths]
        if (topath is None):
            changes.append((path, revid))
            continue
        if (path and (path != topath)):
            renames[topath] = path
            changes.append((path, revid))
        (kind, executable) = [e[1] for e in (kind, executable)]
        mode = ((executable and 'x') or ((kind == 'symlink') and 'l') or '')
        self._modecache[(topath, revid)] = mode
        changes.append((topath, revid))
    return (changes, renames)
