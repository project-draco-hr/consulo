{
  final Component comp=panel.getComponent(0);
  if (comp instanceof Splitter) {
    final Splitter splitter=(Splitter)comp;
    final Element res=new Element("splitter");
    res.setAttribute("split-orientation",splitter.getOrientation() ? "vertical" : "horizontal");
    res.setAttribute("split-proportion",Float.toString(splitter.getProportion()));
    final Element first=new Element("split-first");
    first.addContent(writePanel((JPanel)splitter.getFirstComponent()));
    final Element second=new Element("split-second");
    second.addContent(writePanel((JPanel)splitter.getSecondComponent()));
    res.addContent(first);
    res.addContent(second);
    return res;
  }
 else   if (comp instanceof JBTabs) {
    final Element res=new Element("leaf");
    final EditorWindow window=findWindowWith(comp);
    if (window != null) {
      final EditorWithProviderComposite[] composites=window.getEditors();
      for (int i=0; i < composites.length; i++) {
        final Element fileElement=new Element("file");
        final VirtualFile file=window.getFileAt(i);
        fileElement.setAttribute("leaf-file-name",file.getName());
        final EditorWithProviderComposite composite=composites[i];
        final FileEditor[] editors=composite.getEditors();
        final FileEditorState[] states=new FileEditorState[editors.length];
        for (int j=0; j < states.length; j++) {
          states[j]=editors[j].getState(FileEditorStateLevel.FULL);
          LOG.assertTrue(states[j] != null);
        }
        final int selectedProviderIndex=ArrayUtil.find(editors,composite.getSelectedEditor());
        LOG.assertTrue(selectedProviderIndex != -1);
        final FileEditorProvider[] providers=composite.getProviders();
        final HistoryEntry entry=new HistoryEntry(file,providers,states,providers[selectedProviderIndex]);
        entry.writeExternal(fileElement,getManager().getProject());
        fileElement.setAttribute("pinned",Boolean.toString(window.isFilePinned(file)));
        fileElement.setAttribute("current",Boolean.toString(composite.equals(getManager().getLastSelected())));
        fileElement.setAttribute("current-in-tab",Boolean.toString(composite.equals(window.getSelectedEditor())));
        res.addContent(fileElement);
      }
    }
    return res;
  }
 else {
    LOG.assertTrue(false,comp != null ? comp.getClass().getName() : null);
    return null;
  }
}
