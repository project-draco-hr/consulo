{
  if (!(refWhat instanceof RefMethod)) {
    return;
  }
  final RefMethod refMethod=(RefMethod)refWhat;
  final PsiElement psiElement=refMethod.getElement();
  if (!(psiElement instanceof PsiMethod)) {
    return;
  }
  final PsiMethod psiMethod=(PsiMethod)psiElement;
  final PsiType returnType=psiMethod.getReturnType();
  if (returnType == null) {
    return;
  }
  if (PsiType.VOID.equals(returnType)) {
    return;
  }
  final PsiElement element=refFrom.getElement();
  element.accept(new PsiRecursiveElementVisitor(){
    public void visitMethodCallExpression(    PsiMethodCallExpression call){
      super.visitMethodCallExpression(call);
      final PsiReferenceExpression methodExpression=call.getMethodExpression();
      if (methodExpression.isReferenceTo(psiMethod)) {
        if (MethodReturnAlwaysConstantInspection.isIgnoredMethodCall(call)) {
          return;
        }
        refMethod.putUserData(MethodReturnAlwaysConstantInspection.ALWAYS_CONSTANT,false);
      }
    }
  }
);
}
