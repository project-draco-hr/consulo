{
  final Element result=new Element("Block");
  printSimpleBlock(block,result);
  if (block.getSubBlocks().size() == 0) {
    result.setAttribute("text",myDocumentModel.getText(block.getTextRange()).toString());
  }
  Wrap wrap=block.getWrap();
  if (wrap != null) {
    Element wrapElem=new Element("Wrap");
    result.addContent(wrapElem);
    WrapImpl wrapImpl=(WrapImpl)wrap;
    wrapElem.setAttribute("id",wrapImpl.getId());
    wrapElem.setAttribute("type",wrapImpl.getType().name());
    wrapElem.setAttribute("ignoreParents",String.valueOf(wrapImpl.getIgnoreParentWraps()));
    wrapElem.setAttribute("wrapFirst",String.valueOf(wrapImpl.isWrapFirstElement()));
    WrapImpl parent=wrapImpl.getParent();
    if (parent != null) {
      wrapElem.setAttribute("parent",parent.getId());
    }
  }
  Indent indent=block.getIndent();
  if (indent != null) {
    Element indentElement=new Element("Indent");
    result.addContent(indentElement);
    indentElement.setAttribute("type",((IndentImpl)indent).getType().toString());
  }
  AlignmentImpl alignment=(AlignmentImpl)block.getAlignment();
  if (alignment != null) {
    Element alEl=new Element("Alignment");
    result.addContent(alEl);
    alEl.setAttribute("id",String.valueOf(System.identityHashCode(alignment)));
  }
  final List<Block> subBlocks=block.getSubBlocks();
  for (int i=0; i < subBlocks.size(); i++) {
    if (i > 0 && i < subBlocks.size() - 1) {
      result.addContent(createSpacingElement(block.getSpacing(subBlocks.get(i),subBlocks.get(i + 1))));
    }
    result.addContent(createBlockElement(subBlocks.get(i)));
  }
  return result;
}
