{
  TemplateManager templateManager=TemplateManager.getInstance(project);
  Template template=templateManager.createTemplate("","");
  template.setToIndent(true);
  FileType fileType=tag.getContainingFile().getFileType();
  boolean htmlCode=fileType == StdFileTypes.HTML || fileType == StdFileTypes.XHTML;
  boolean jspCode=fileType == StdFileTypes.JSP || fileType == StdFileTypes.JSPX;
  Set<String> notRequiredAttributes=Collections.emptySet();
  if (tag instanceof HtmlTag) {
    final InspectionProfile profile=InspectionProjectProfileManager.getInstance(tag.getProject()).getInspectionProfile(tag);
    LocalInspectionToolWrapper localInspectionToolWrapper=(LocalInspectionToolWrapper)profile.getInspectionTool(RequiredAttributesInspection.SHORT_NAME);
    RequiredAttributesInspection inspection=localInspectionToolWrapper != null ? (RequiredAttributesInspection)localInspectionToolWrapper.getTool() : null;
    if (inspection != null) {
      StringTokenizer tokenizer=new StringTokenizer(inspection.getAdditionalEntries(0));
      notRequiredAttributes=new HashSet<String>(1);
      while (tokenizer.hasMoreElements())       notRequiredAttributes.add(tokenizer.nextToken());
    }
  }
  boolean toReformat=true;
  if (htmlCode || jspCode) {
    toReformat=false;
  }
  template.setToReformat(toReformat);
  XmlAttributeDescriptor[] attributes=descriptor.getAttributesDescriptors();
  for (  XmlAttributeDescriptor attributeDecl : attributes) {
    String attributeName=attributeDecl.getName(tag);
    if (attributeDecl.isRequired()) {
      if (!notRequiredAttributes.contains(attributeName)) {
        template.addTextSegment(" " + attributeName + "=\"");
        Expression expression=new MacroCallNode(MacroFactory.createMacro("complete"));
        template.addVariable(attributeName,expression,expression,true);
        template.addTextSegment("\"");
      }
    }
 else     if (attributeDecl.isFixed() && attributeDecl.getDefaultValue() != null && !htmlCode) {
      template.addTextSegment(" " + attributeName + "=\""+ attributeDecl.getDefaultValue()+ "\"");
    }
  }
  if (completionChar == '>') {
    template.addTextSegment(">");
    template.addEndVariable();
    if (!(tag instanceof HtmlTag) || !HtmlUtil.isSingleHtmlTag(tag.getName())) {
      template.addTextSegment("</");
      template.addTextSegment(descriptor.getName(tag));
      template.addTextSegment(">");
    }
  }
 else   if (completionChar == '/') {
    template.addTextSegment("/>");
  }
 else   if (completionChar == ' ') {
    template.addTextSegment(" ");
    final MacroCallNode completeAttrExpr=new MacroCallNode(MacroFactory.createMacro("complete"));
    template.addVariable("attrComplete",completeAttrExpr,completeAttrExpr,true);
  }
  templateManager.startTemplate(editor,template);
}
