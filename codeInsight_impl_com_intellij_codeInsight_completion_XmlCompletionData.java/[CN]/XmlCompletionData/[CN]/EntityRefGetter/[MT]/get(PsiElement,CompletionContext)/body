{
  final XmlTag parentOfType=PsiTreeUtil.getParentOfType(context,XmlTag.class);
  if (parentOfType != null) {
    final List<String> results=new ArrayList<String>();
    final XmlFile containingFile=(XmlFile)parentOfType.getContainingFile();
    XmlFile descriptorFile=findDescriptorFile(parentOfType,containingFile);
    if (descriptorFile != null) {
      final boolean acceptSystemEntities=containingFile.getFileType() == StdFileTypes.XML;
      final PsiElementProcessor processor=new PsiElementProcessor(){
        public boolean execute(        final PsiElement element){
          if (element instanceof XmlEntityDecl) {
            final XmlEntityDecl xmlEntityDecl=(XmlEntityDecl)element;
            if (xmlEntityDecl.isInternalReference() || acceptSystemEntities) {
              results.add(xmlEntityDecl.getName());
            }
          }
          return true;
        }
      }
;
      XmlUtil.processXmlElements(descriptorFile,processor,true);
      return results.toArray(new Object[results.size()]);
    }
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
