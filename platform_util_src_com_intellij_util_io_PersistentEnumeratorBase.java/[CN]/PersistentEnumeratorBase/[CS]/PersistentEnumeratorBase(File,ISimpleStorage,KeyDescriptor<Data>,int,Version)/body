{
  myDataDescriptor=dataDescriptor;
  myFile=file;
  myVersion=version;
  if (!file.exists()) {
    FileUtil.delete(keystreamFile());
    if (!FileUtil.createIfDoesntExist(file)) {
      throw new IOException("Cannot create empty file: " + file);
    }
  }
  myStorage=storage;
synchronized (ourLock) {
    if (myStorage.length() == 0) {
      try {
        markDirty(true);
        putMetaData(0);
        setupEmptyFile();
      }
 catch (      RuntimeException e) {
        LOG.info(e);
        myStorage.close();
        if (e.getCause() instanceof IOException) {
          throw (IOException)e.getCause();
        }
        throw e;
      }
catch (      IOException e) {
        LOG.info(e);
        myStorage.close();
        throw e;
      }
catch (      Exception e) {
        LOG.info(e);
        myStorage.close();
        throw new CorruptedException(file);
      }
    }
 else {
      int sign;
      try {
        sign=myStorage.getInt(0);
      }
 catch (      Exception e) {
        LOG.info(e);
        sign=myVersion.dirtyMagic;
      }
      if (sign != myVersion.correctlyClosedMagic) {
        myStorage.close();
        throw new CorruptedException(file);
      }
    }
  }
  if (myDataDescriptor instanceof InlineKeyDescriptor) {
    myKeyStorage=null;
    myKeyReadStream=null;
  }
 else {
    myKeyStorage=new ResizeableMappedFile(keystreamFile(),initialSize,ourLock);
    myKeyReadStream=new MyDataIS(myKeyStorage);
  }
}
