{
  List<AbstractTreeNode> children=new ArrayList<AbstractTreeNode>();
  if (node instanceof CoverageListNode) {
    final Object val=node.getValue();
    if (val instanceof PsiFile)     return Collections.emptyList();
    final PsiDirectory psiDirectory=(PsiDirectory)val;
    final PsiDirectory[] subdirectories=ApplicationManager.getApplication().runReadAction(new Computable<PsiDirectory[]>(){
      @Override public PsiDirectory[] compute(){
        return psiDirectory.getSubdirectories();
      }
    }
);
    for (    PsiDirectory subdirectory : subdirectories) {
      children.add(new CoverageListNode(getProject(),subdirectory,getSuitesBundle(),getStateBean()));
    }
    final PsiFile[] psiFiles=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile[]>(){
      @Override public PsiFile[] compute(){
        return psiDirectory.getFiles();
      }
    }
);
    for (    PsiFile psiFile : psiFiles) {
      children.add(new CoverageListNode(getProject(),psiFile,getSuitesBundle(),getStateBean()));
    }
    for (    AbstractTreeNode childNode : children) {
      childNode.setParent(node);
    }
  }
  return children;
}
