{
  if (!isAssertFalse(expression)) {
    return false;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiMethod method=(PsiMethod)methodExpression.resolve();
  if (method == null) {
    return false;
  }
  final PsiParameterList parameterList=method.getParameterList();
  final PsiParameter[] parameters=parameterList.getParameters();
  if (parameters.length < 1) {
    return false;
  }
  final PsiManager psiManager=expression.getManager();
  final Project project=psiManager.getProject();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
  final PsiType stringType=PsiType.getJavaLangString(psiManager,scope);
  final PsiType paramType1=parameters[0].getType();
  final int testPosition;
  if (paramType1.equals(stringType) && parameters.length > 1) {
    testPosition=1;
  }
 else {
    testPosition=0;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] args=argumentList.getExpressions();
  final PsiExpression testArg=args[testPosition];
  return testArg != null && PsiKeyword.TRUE.equals(testArg.getText());
}
