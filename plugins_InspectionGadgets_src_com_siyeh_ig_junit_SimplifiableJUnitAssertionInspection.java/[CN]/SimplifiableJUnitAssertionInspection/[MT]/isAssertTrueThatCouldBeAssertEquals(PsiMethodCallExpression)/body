{
  if (!isAssertTrue(expression)) {
    return false;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiMethod method=(PsiMethod)methodExpression.resolve();
  if (method == null) {
    return false;
  }
  final PsiParameterList parameterList=method.getParameterList();
  if (parameterList.getParametersCount() < 1) {
    return false;
  }
  final PsiType stringType=TypeUtils.getStringType(expression);
  final PsiParameter[] parameters=parameterList.getParameters();
  final PsiType paramType1=parameters[0].getType();
  final int testPosition;
  if (paramType1.equals(stringType) && parameters.length > 1) {
    testPosition=1;
  }
 else {
    testPosition=0;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  final PsiExpression testArgument=arguments[testPosition];
  return testArgument != null && isEqualityComparison(testArgument);
}
