{
  if (!isAssertEquals(expression)) {
    return false;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiMethod method=(PsiMethod)methodExpression.resolve();
  if (method == null) {
    return false;
  }
  final PsiParameterList parameterList=method.getParameterList();
  if (parameterList.getParametersCount() < 2) {
    return false;
  }
  final PsiManager psiManager=expression.getManager();
  final Project project=psiManager.getProject();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
  final PsiType stringType=PsiType.getJavaLangString(psiManager,scope);
  final PsiParameter[] parameters=parameterList.getParameters();
  final PsiType paramType1=parameters[0].getType();
  final int firstTestPosition;
  final int secondTestPosition;
  if (paramType1.equals(stringType) && parameters.length > 2) {
    firstTestPosition=1;
    secondTestPosition=2;
  }
 else {
    firstTestPosition=0;
    secondTestPosition=1;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  final PsiExpression firstTestArgument=arguments[firstTestPosition];
  final PsiExpression secondTestArgument=arguments[secondTestPosition];
  if (firstTestArgument == null || secondTestArgument == null) {
    return false;
  }
  return isSimpleLiteral(firstTestArgument,secondTestArgument) || isSimpleLiteral(secondTestArgument,firstTestArgument);
}
