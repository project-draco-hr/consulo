{
  super.visitMethodCallExpression(expression);
  if (isAssertThatCouldBeAssertNull(expression)) {
    if (hasEqEqExpressionArgument(expression)) {
      registerMethodCallError(expression,"assertNull()");
    }
 else {
      registerMethodCallError(expression,"assertNotNull()");
    }
  }
 else   if (isAssertThatCouldBeAssertSame(expression)) {
    if (hasEqEqExpressionArgument(expression)) {
      registerMethodCallError(expression,"assertSame()");
    }
 else {
      registerMethodCallError(expression,"assertNotSame()");
    }
  }
 else   if (isAssertTrueThatCouldBeAssertEquals(expression)) {
    registerMethodCallError(expression,"assertEquals()");
  }
 else   if (isAssertEqualsThatCouldBeAssertLiteral(expression)) {
    registerMethodCallError(expression,getReplacementMethodName(expression));
  }
 else   if (isAssertThatCouldBeFail(expression)) {
    registerMethodCallError(expression,"fail()");
  }
}
