{
  final PsiReferenceExpression methodExpression=callExpression.getMethodExpression();
  final PsiMethod method=(PsiMethod)methodExpression.resolve();
  final PsiParameterList paramList=method.getParameterList();
  final PsiParameter[] parameters=paramList.getParameters();
  final PsiManager psiManager=callExpression.getManager();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
  final PsiType stringType=PsiType.getJavaLangString(psiManager,scope);
  final PsiType paramType1=parameters[0].getType();
  final PsiExpressionList argumentList=callExpression.getArgumentList();
  final PsiExpression[] args=argumentList.getExpressions();
  final PsiExpression message;
  if (parameters.length == 2) {
    message=args[0];
  }
 else {
    message=null;
  }
  final StringBuffer newExpression=new StringBuffer("fail(");
  if (message != null) {
    newExpression.append(message.getText());
  }
  newExpression.append(')');
  replaceExpression(project,callExpression,newExpression.toString());
}
