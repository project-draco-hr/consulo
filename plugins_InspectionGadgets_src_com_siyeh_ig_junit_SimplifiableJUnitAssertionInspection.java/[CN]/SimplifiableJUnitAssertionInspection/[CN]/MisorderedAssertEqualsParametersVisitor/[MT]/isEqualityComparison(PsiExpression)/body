{
  if (testArg instanceof PsiBinaryExpression) {
    final PsiJavaToken sign=((PsiBinaryExpression)testArg).getOperationSign();
    if (sign == null) {
      return false;
    }
    if (!sign.getTokenType().equals(JavaTokenType.EQEQ)) {
      return false;
    }
    final PsiExpression lhs=((PsiBinaryExpression)testArg).getLOperand();
    if (lhs == null) {
      return false;
    }
    final PsiExpression rhs=((PsiBinaryExpression)testArg).getROperand();
    if (rhs == null) {
      return false;
    }
    final PsiType type=lhs.getType();
    if (type == null) {
      return false;
    }
    if (!ClassUtils.isPrimitive(type)) {
      return false;
    }
    return true;
  }
 else   if (testArg instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression call=(PsiMethodCallExpression)testArg;
    final PsiReferenceExpression methodExpression=call.getMethodExpression();
    final String methodName=methodExpression.getReferenceName();
    if (!"equals".equals(methodName)) {
      return false;
    }
    final PsiExpressionList argumentList=call.getArgumentList();
    if (argumentList == null) {
      return false;
    }
    final PsiExpression[] args=argumentList.getExpressions();
    if (args == null) {
      return false;
    }
    if (args.length != 1) {
      return false;
    }
    if (args[0] == null) {
      return false;
    }
    if (methodExpression.getQualifierExpression() == null) {
      return false;
    }
    return true;
  }
  return false;
}
