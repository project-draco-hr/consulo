def __init__(self, url='', ra=None):
    self.pool = Pool()
    self.svn_url = url
    self.username = ''
    self.password = ''
    if ((ra is None) or (not hasattr(svn.ra, 'reparent'))):
        self.client = svn.client.create_context(self.pool)
        ab = _create_auth_baton(self.pool)
        if False:
            svn.core.svn_auth_set_parameter(ab, svn.core.SVN_AUTH_PARAM_DEFAULT_USERNAME, self.username)
            svn.core.svn_auth_set_parameter(ab, svn.core.SVN_AUTH_PARAM_DEFAULT_PASSWORD, self.password)
        self.client.auth_baton = ab
        self.client.config = svn_config
        try:
            self.ra = svn.client.open_ra_session(self.svn_url.encode('utf8'), self.client, self.pool)
        except SubversionException as (inst, num):
            if (num in (svn.core.SVN_ERR_RA_ILLEGAL_URL, svn.core.SVN_ERR_RA_LOCAL_REPOS_OPEN_FAILED, svn.core.SVN_ERR_BAD_URL)):
                raise NotBranchError(url)
            raise
    else:
        self.ra = ra
        svn.ra.reparent(self.ra, self.svn_url.encode('utf8'))
