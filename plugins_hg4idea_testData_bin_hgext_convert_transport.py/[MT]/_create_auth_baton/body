def _create_auth_baton(pool):
    'Create a Subversion authentication baton. '
    import svn.client
    providers = [svn.client.get_simple_provider(pool), svn.client.get_username_provider(pool), svn.client.get_ssl_client_cert_file_provider(pool), svn.client.get_ssl_client_cert_pw_file_provider(pool), svn.client.get_ssl_server_trust_file_provider(pool)]
    getprovider = getattr(svn.core, 'svn_auth_get_platform_specific_provider', None)
    if getprovider:
        for name in ('gnome_keyring', 'keychain', 'kwallet', 'windows'):
            for type in ('simple', 'ssl_client_cert_pw', 'ssl_server_trust'):
                p = getprovider(name, type, pool)
                if p:
                    providers.append(p)
    elif hasattr(svn.client, 'get_windows_simple_provider'):
        providers.append(svn.client.get_windows_simple_provider(pool))
    return svn.core.svn_auth_open(providers, pool)
