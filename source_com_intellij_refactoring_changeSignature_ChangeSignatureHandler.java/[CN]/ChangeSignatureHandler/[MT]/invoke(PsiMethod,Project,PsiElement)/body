{
  if (!method.isWritable()) {
    if (!RefactoringMessageUtil.checkReadOnlyStatus(project,method))     return;
  }
  PsiMethod newMethod=SuperMethodWarningUtil.checkSuperMethod(method,"refactor");
  if (newMethod == null)   return;
  newMethod=(PsiMethod)EjbUtil.checkDeclMethod(newMethod,"refactor");
  if (newMethod == null)   return;
  if (!newMethod.equals(method)) {
    final PsiMethod methodCopy=newMethod;
    invoke(methodCopy,project,resolutionContext);
    return;
  }
  if (!method.isWritable()) {
    if (!RefactoringMessageUtil.checkReadOnlyStatus(project,method))     return;
  }
  final PsiClass containingClass=method.getContainingClass();
  final ChangeSignatureDialog dialog=new ChangeSignatureDialog(project,method,containingClass != null && !containingClass.isInterface(),new ChangeSignatureDialog.Callback(){
    public void run(    final ChangeSignatureDialog dialog){
      new ChangeSignatureProcessor(project,method,dialog.isGenerateDelegate(),dialog.getVisibility(),dialog.getMethodName(),dialog.getReturnType(),dialog.getParameters(),dialog.getExceptions(),new Runnable(){
        public void run(){
          dialog.close(DialogWrapper.OK_EXIT_CODE);
        }
      }
,dialog.getEndPointsToPropagateParameters(),dialog.getEndPointsToPropagateExceptions()).run(null);
    }
  }
);
  dialog.show();
}
