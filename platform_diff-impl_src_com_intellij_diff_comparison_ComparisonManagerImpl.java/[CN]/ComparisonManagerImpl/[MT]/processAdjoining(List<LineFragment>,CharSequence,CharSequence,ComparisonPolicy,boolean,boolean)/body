{
  int start=0;
  int end=fragments.size();
  if (trim && policy == ComparisonPolicy.IGNORE_WHITESPACES) {
    while (start < end) {
      LineFragment fragment=fragments.get(start);
      CharSequenceSubSequence sequence1=new CharSequenceSubSequence(text1,fragment.getStartOffset1(),fragment.getEndOffset1());
      CharSequenceSubSequence sequence2=new CharSequenceSubSequence(text2,fragment.getStartOffset2(),fragment.getEndOffset2());
      if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1,sequence2)) {
        break;
      }
      start++;
    }
    while (start < end) {
      LineFragment fragment=fragments.get(end - 1);
      CharSequenceSubSequence sequence1=new CharSequenceSubSequence(text1,fragment.getStartOffset1(),fragment.getEndOffset1());
      CharSequenceSubSequence sequence2=new CharSequenceSubSequence(text2,fragment.getStartOffset2(),fragment.getEndOffset2());
      if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1,sequence2)) {
        break;
      }
      end--;
    }
  }
  if (start == end)   return Collections.emptyList();
  if (squash) {
    return Collections.singletonList(doSquash(fragments.subList(start,end)));
  }
  return fragments.subList(start,end);
}
