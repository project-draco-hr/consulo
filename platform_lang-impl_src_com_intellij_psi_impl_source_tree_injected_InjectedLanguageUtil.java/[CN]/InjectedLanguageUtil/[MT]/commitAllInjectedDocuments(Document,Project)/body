{
  List<RangeMarker> injected=getCachedInjectedRegions(hostDocument);
  if (injected.isEmpty())   return;
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  PsiFile hostPsiFile=documentManager.getPsiFile(hostDocument);
  if (hostPsiFile == null)   return;
  for (  RangeMarker rangeMarker : injected) {
    ProgressManager.checkCanceled();
    PsiElement element=rangeMarker.isValid() ? hostPsiFile.findElementAt(rangeMarker.getStartOffset()) : null;
    if (element == null) {
      injected.remove(rangeMarker);
      continue;
    }
    ProgressManager.checkCanceled();
    enumerate(element,hostPsiFile,new PsiLanguageInjectionHost.InjectedPsiVisitor(){
      public void visit(      @NotNull PsiFile injectedPsi,      @NotNull List<PsiLanguageInjectionHost.Shred> places){
        PsiDocumentManagerImpl.checkConsistency(injectedPsi,injectedPsi.getViewProvider().getDocument());
      }
    }
,true);
  }
  EditorWindow.disposeInvalidEditors();
  PsiDocumentManagerImpl.checkConsistency(hostPsiFile,hostDocument);
}
