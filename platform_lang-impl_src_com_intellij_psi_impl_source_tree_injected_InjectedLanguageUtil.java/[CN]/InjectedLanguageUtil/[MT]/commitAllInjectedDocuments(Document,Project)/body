{
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  PsiFile hostPsiFile=documentManager.getPsiFile(hostDocument);
  if (hostPsiFile == null)   return;
  List<DocumentWindow> injected=getCachedInjectedDocuments(hostPsiFile);
  if (injected.isEmpty())   return;
  for (int i=injected.size() - 1; i >= 0; i--) {
    DocumentWindow documentWindow=injected.get(i);
    ProgressManager.checkCanceled();
    RangeMarker rangeMarker=documentWindow.getHostRanges()[0];
    PsiElement element=rangeMarker.isValid() ? hostPsiFile.findElementAt(rangeMarker.getStartOffset()) : null;
    if (element == null) {
      injected.remove(i);
      continue;
    }
    final DocumentWindow[] stillInjectedDocument={null};
    enumerate(element,hostPsiFile,new PsiLanguageInjectionHost.InjectedPsiVisitor(){
      public void visit(      @NotNull PsiFile injectedPsi,      @NotNull List<PsiLanguageInjectionHost.Shred> places){
        stillInjectedDocument[0]=(DocumentWindow)injectedPsi.getViewProvider().getDocument();
        PsiDocumentManagerImpl.checkConsistency(injectedPsi,stillInjectedDocument[0]);
      }
    }
,true);
    if (stillInjectedDocument[0] == null) {
      injected.remove(i);
    }
 else     if (stillInjectedDocument[0] != documentWindow) {
      injected.set(i,stillInjectedDocument[0]);
    }
  }
  EditorWindow.disposeInvalidEditors();
  PsiDocumentManagerImpl.checkConsistency(hostPsiFile,hostDocument);
}
