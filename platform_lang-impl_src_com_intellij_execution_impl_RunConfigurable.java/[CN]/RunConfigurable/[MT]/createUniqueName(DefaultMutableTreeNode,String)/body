{
  String str=(baseName == null) ? ExecutionBundle.message("run.configuration.unnamed.name.prefix") : baseName;
  final ArrayList<String> currentNames=new ArrayList<String>();
  for (int i=0; i < typeNode.getChildCount(); i++) {
    final Object userObject=((DefaultMutableTreeNode)typeNode.getChildAt(i)).getUserObject();
    if (userObject instanceof SingleConfigurationConfigurable) {
      currentNames.add(((SingleConfigurationConfigurable)userObject).getNameText());
    }
 else     if (userObject instanceof RunnerAndConfigurationSettingsImpl) {
      currentNames.add(((RunnerAndConfigurationSettings)userObject).getName());
    }
  }
  if (!currentNames.contains(str))   return str;
  final Matcher matcher=Pattern.compile("(.*?)\\s*\\(\\d+\\)").matcher(str);
  final String originalName=(matcher.matches()) ? matcher.group(1) : str;
  int i=1;
  while (true) {
    final String newName=String.format("%s (%d)",originalName,i);
    if (!currentNames.contains(newName))     return newName;
    i++;
  }
}
