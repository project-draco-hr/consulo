{
  final ConfigurationType type=getSelectedConfigurationType();
  if (type == null) {
    return;
  }
  final DefaultMutableTreeNode[] selectedNodes=getSelectedNodes();
  DefaultMutableTreeNode typeNode=getConfigurationTypeNode(type);
  if (typeNode == null) {
    return;
  }
  String folderName=createUniqueName(typeNode,"New Folder",FOLDER);
  List<DefaultMutableTreeNode> folders=new ArrayList<DefaultMutableTreeNode>();
  collectNodesRecursively(getConfigurationTypeNode(type),folders,FOLDER);
  final DefaultMutableTreeNode folderNode=new DefaultMutableTreeNode(folderName);
  myTreeModel.insertNodeInto(folderNode,typeNode,folders.size());
  isFolderCreating=true;
  try {
    for (    DefaultMutableTreeNode node : selectedNodes) {
      int folderRow=myTree.getRowForPath(new TreePath(folderNode.getPath()));
      int rowForPath=myTree.getRowForPath(new TreePath(node.getPath()));
      if (getKind(node).isConfiguration() && myTreeModel.canDrop(rowForPath,folderRow,INTO)) {
        myTreeModel.drop(rowForPath,folderRow,INTO);
      }
    }
    myTree.setSelectionPath(new TreePath(folderNode.getPath()));
  }
  finally {
    isFolderCreating=false;
  }
}
