{
  if (myTree.getRowCount() <= oldIndex || myTree.getRowCount() <= newIndex || oldIndex < 0 || newIndex < 0) {
    return false;
  }
  DefaultMutableTreeNode oldNode=(DefaultMutableTreeNode)myTree.getPathForRow(oldIndex).getLastPathComponent();
  DefaultMutableTreeNode newNode=(DefaultMutableTreeNode)myTree.getPathForRow(newIndex).getLastPathComponent();
  DefaultMutableTreeNode oldParent=(DefaultMutableTreeNode)oldNode.getParent();
  DefaultMutableTreeNode newParent=(DefaultMutableTreeNode)newNode.getParent();
  NodeKind oldKind=getKind(oldNode);
  NodeKind newKind=getKind(newNode);
  ConfigurationType oldType=getType(oldNode);
  ConfigurationType newType=getType(newNode);
  if (oldParent == newParent) {
    if (oldNode.getPreviousSibling() == newNode && position == BELOW) {
      return false;
    }
    if (oldNode.getNextSibling() == newNode && position == ABOVE) {
      return false;
    }
  }
  if (oldType == null)   return false;
  if (oldType != newType) {
    DefaultMutableTreeNode typeNode=getConfigurationTypeNode(oldType);
    if (getKind(oldParent) == FOLDER && typeNode != null && typeNode.getNextSibling() == newNode && position == ABOVE) {
      return true;
    }
    if (getKind(oldParent) == CONFIGURATION_TYPE && oldKind == FOLDER && typeNode != null && typeNode.getNextSibling() == newNode && position == ABOVE && oldParent.getLastChild() != oldNode && getKind((DefaultMutableTreeNode)oldParent.getLastChild()) == FOLDER) {
      return true;
    }
    return false;
  }
  if (newParent == oldNode || oldParent == newNode)   return false;
  if (oldKind == FOLDER && newKind != FOLDER) {
    if (newKind.isConfiguration() && position == ABOVE && getKind(newParent) == CONFIGURATION_TYPE && newIndex > 1 && getKind((DefaultMutableTreeNode)myTree.getPathForRow(newIndex - 1).getParentPath().getLastPathComponent()) == FOLDER) {
      return true;
    }
    return false;
  }
  if (!oldKind.supportsDnD() || !newKind.supportsDnD()) {
    return false;
  }
  if (oldKind == TEMPORARY_CONFIGURATION && newKind == CONFIGURATION && position == ABOVE)   return false;
  if (oldKind == CONFIGURATION && newKind == TEMPORARY_CONFIGURATION && position == BELOW)   return false;
  if (oldKind == CONFIGURATION && newKind == TEMPORARY_CONFIGURATION && position == ABOVE)   return newNode.getPreviousSibling() == null || getKind(newNode.getPreviousSibling()) == CONFIGURATION;
  if (oldKind == TEMPORARY_CONFIGURATION && newKind == CONFIGURATION && position == BELOW)   return newNode.getNextSibling() == null || getKind(newNode.getNextSibling()) == TEMPORARY_CONFIGURATION;
  if (oldParent == newParent) {
    if (oldKind.isConfiguration() && newKind.isConfiguration()) {
      return oldKind == newKind;
    }
 else     if (oldKind == FOLDER) {
      return !myTree.isExpanded(newIndex) || position == ABOVE;
    }
  }
  return true;
}
