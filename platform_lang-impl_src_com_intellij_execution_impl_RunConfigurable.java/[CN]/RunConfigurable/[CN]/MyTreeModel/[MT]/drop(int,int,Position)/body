{
  DefaultMutableTreeNode oldNode=(DefaultMutableTreeNode)myTree.getPathForRow(oldIndex).getLastPathComponent();
  DefaultMutableTreeNode newNode=(DefaultMutableTreeNode)myTree.getPathForRow(newIndex).getLastPathComponent();
  DefaultMutableTreeNode newParent=(DefaultMutableTreeNode)newNode.getParent();
  NodeKind oldKind=getKind(oldNode);
  NodeKind newKind=getKind(newNode);
  if (isDropInto(myTree,oldIndex,newIndex)) {
    removeNodeFromParent(oldNode);
    int index=newNode.getChildCount();
    if (oldKind == CONFIGURATION) {
      for (int i=0; i < newNode.getChildCount(); i++) {
        if (getKind((DefaultMutableTreeNode)newNode.getChildAt(i)) == TEMPORARY_CONFIGURATION) {
          index=i;
          break;
        }
      }
    }
    insertNodeInto(oldNode,newNode,index);
    myTree.expandPath(new TreePath(newNode.getPath()));
  }
 else {
    removeNodeFromParent(oldNode);
    int index=newParent.getIndex(newNode);
    if (position == Position.BELOW)     index++;
    insertNodeInto(oldNode,newParent,index);
  }
  myTree.setSelectionPath(new TreePath(oldNode.getPath()));
}
