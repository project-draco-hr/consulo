{
  TreePath[] selections=myTree.getSelectionPaths();
  myTree.clearSelection();
  int nodeIndexToSelect=-1;
  DefaultMutableTreeNode parentToSelect=null;
  Set<DefaultMutableTreeNode> changedParents=new HashSet<DefaultMutableTreeNode>();
  boolean wasRootChanged=false;
  for (  TreePath each : selections) {
    DefaultMutableTreeNode node=(DefaultMutableTreeNode)each.getLastPathComponent();
    DefaultMutableTreeNode parent=(DefaultMutableTreeNode)node.getParent();
    NodeKind kind=getKind(node);
    if (!kind.isConfiguration() && kind != FOLDER)     continue;
    if (node.getUserObject() instanceof SingleConfigurationConfigurable) {
      ((SingleConfigurationConfigurable)node.getUserObject()).disposeUIResources();
    }
    nodeIndexToSelect=parent.getIndex(node);
    parentToSelect=parent;
    myTreeModel.removeNodeFromParent(node);
    changedParents.add(parent);
    if (kind == FOLDER) {
      ConfigurationType type=(ConfigurationType)parent.getUserObject();
      getRunManager().removeFolder(type,(String)node.getUserObject());
      List<DefaultMutableTreeNode> children=new ArrayList<DefaultMutableTreeNode>();
      for (int i=0; i < node.getChildCount(); i++) {
        children.add(0,(DefaultMutableTreeNode)node.getChildAt(i));
      }
      int confIndex=0;
      for (int i=0; i < parent.getChildCount(); i++) {
        if (getKind((DefaultMutableTreeNode)parent.getChildAt(i)).isConfiguration()) {
          confIndex=i;
          break;
        }
      }
      for (      DefaultMutableTreeNode child : children) {
        if (getKind(child) == CONFIGURATION)         myTreeModel.insertNodeInto(child,parent,confIndex);
      }
      confIndex=parent.getChildCount();
      for (int i=0; i < parent.getChildCount(); i++) {
        if (getKind((DefaultMutableTreeNode)parent.getChildAt(i)) == TEMPORARY_CONFIGURATION) {
          confIndex=i;
          break;
        }
      }
      for (      DefaultMutableTreeNode child : children) {
        if (getKind(child) == TEMPORARY_CONFIGURATION)         myTreeModel.insertNodeInto(child,parent,confIndex);
      }
    }
    if (parent.getChildCount() == 0 && parent.getUserObject() instanceof ConfigurationType) {
      changedParents.remove(parent);
      wasRootChanged=true;
      nodeIndexToSelect=myRoot.getIndex(parent);
      nodeIndexToSelect=Math.max(0,nodeIndexToSelect - 1);
      parentToSelect=myRoot;
      parent.removeFromParent();
    }
  }
  if (wasRootChanged) {
    ((DefaultTreeModel)myTree.getModel()).reload();
  }
 else {
    for (    DefaultMutableTreeNode each : changedParents) {
      myTreeModel.reload(each);
      myTree.expandPath(new TreePath(each));
    }
  }
  mySelectedConfigurable=null;
  if (myRoot.getChildCount() == 0) {
    drawPressAddButtonMessage(null);
  }
 else {
    TreeNode nodeToSelect=nodeIndexToSelect < parentToSelect.getChildCount() ? parentToSelect.getChildAt(nodeIndexToSelect) : parentToSelect.getChildAt(nodeIndexToSelect - 1);
    TreeUtil.selectInTree((DefaultMutableTreeNode)nodeToSelect,true,myTree);
  }
}
