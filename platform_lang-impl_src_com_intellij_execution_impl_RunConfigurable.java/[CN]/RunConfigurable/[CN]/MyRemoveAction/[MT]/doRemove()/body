{
  TreePath[] selections=myTree.getSelectionPaths();
  myTree.clearSelection();
  int nodeIndexToSelect=-1;
  DefaultMutableTreeNode parentToSelect=null;
  Set<DefaultMutableTreeNode> changedParents=new HashSet<DefaultMutableTreeNode>();
  boolean wasRootChanged=false;
  for (  TreePath each : selections) {
    DefaultMutableTreeNode node=(DefaultMutableTreeNode)each.getLastPathComponent();
    if (node.getUserObject() instanceof ConfigurationType)     continue;
    if (node.getUserObject() instanceof SingleConfigurationConfigurable) {
      ((SingleConfigurationConfigurable)node.getUserObject()).disposeUIResources();
    }
    DefaultMutableTreeNode parent=(DefaultMutableTreeNode)node.getParent();
    nodeIndexToSelect=parent.getIndex(node);
    parentToSelect=parent;
    node.removeFromParent();
    changedParents.add(parent);
    if (parent.getChildCount() == 0 && parent.getUserObject() instanceof ConfigurationType) {
      changedParents.remove(parent);
      wasRootChanged=true;
      nodeIndexToSelect=myRoot.getIndex(parent);
      nodeIndexToSelect=Math.max(0,nodeIndexToSelect - 1);
      parentToSelect=myRoot;
      parent.removeFromParent();
    }
  }
  if (wasRootChanged) {
    ((DefaultTreeModel)myTree.getModel()).reload();
  }
 else {
    for (    DefaultMutableTreeNode each : changedParents) {
      ((DefaultTreeModel)myTree.getModel()).reload(each);
      myTree.expandPath(new TreePath(each));
    }
  }
  mySelectedConfigurable=null;
  if (myRoot.getChildCount() == 0) {
    drawPressAddButtonMessage(null);
  }
 else {
    TreeNode nodeToSelect=nodeIndexToSelect < parentToSelect.getChildCount() ? parentToSelect.getChildAt(nodeIndexToSelect) : parentToSelect.getChildAt(nodeIndexToSelect - 1);
    TreeUtil.selectInTree((DefaultMutableTreeNode)nodeToSelect,true,myTree);
  }
}
