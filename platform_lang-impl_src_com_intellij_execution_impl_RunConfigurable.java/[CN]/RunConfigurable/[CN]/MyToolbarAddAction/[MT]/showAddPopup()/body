{
  final JBPopupFactory popupFactory=JBPopupFactory.getInstance();
  final ConfigurationType[] configurationTypes=getRunManager().getConfigurationFactories(false);
  Arrays.sort(configurationTypes,new Comparator<ConfigurationType>(){
    @Override public int compare(    final ConfigurationType type1,    final ConfigurationType type2){
      return type1.getDisplayName().compareTo(type2.getDisplayName());
    }
  }
);
  final ListPopup popup=popupFactory.createListPopup(new BaseListPopupStep<ConfigurationType>(ExecutionBundle.message("add.new.run.configuration.acrtion.name"),configurationTypes){
    @Override @NotNull public String getTextFor(    final ConfigurationType type){
      return type.getDisplayName();
    }
    @Override public boolean isSpeedSearchEnabled(){
      return true;
    }
    @Override public boolean canBeHidden(    ConfigurationType value){
      return true;
    }
    @Override public Icon getIconFor(    final ConfigurationType type){
      return type.getIcon();
    }
    @Override public PopupStep onChosen(    final ConfigurationType type,    final boolean finalChoice){
      if (hasSubstep(type)) {
        return getSupStep(type);
      }
      final ConfigurationFactory[] factories=type.getConfigurationFactories();
      if (factories.length > 0) {
        createNewConfiguration(factories[0]);
      }
      return FINAL_CHOICE;
    }
    @Override public int getDefaultOptionIndex(){
      ConfigurationType type=getSelectedConfigurationType();
      return type != null ? ArrayUtilRt.find(configurationTypes,type) : super.getDefaultOptionIndex();
    }
    private ListPopupStep getSupStep(    final ConfigurationType type){
      final ConfigurationFactory[] factories=type.getConfigurationFactories();
      Arrays.sort(factories,new Comparator<ConfigurationFactory>(){
        @Override public int compare(        final ConfigurationFactory factory1,        final ConfigurationFactory factory2){
          return factory1.getName().compareTo(factory2.getName());
        }
      }
);
      return new BaseListPopupStep<ConfigurationFactory>(ExecutionBundle.message("add.new.run.configuration.action.name",type.getDisplayName()),factories){
        @Override @NotNull public String getTextFor(        final ConfigurationFactory value){
          return value.getName();
        }
        @Override public Icon getIconFor(        final ConfigurationFactory factory){
          return factory.getIcon();
        }
        @Override public PopupStep onChosen(        final ConfigurationFactory factory,        final boolean finalChoice){
          createNewConfiguration(factory);
          return FINAL_CHOICE;
        }
      }
;
    }
    @Override public boolean hasSubstep(    final ConfigurationType type){
      return type.getConfigurationFactories().length > 1;
    }
  }
);
  popup.showUnderneathOf(myToolbarDecorator.getActionsPanel());
}
