{
  Collection<FilePath> filePaths=getFilePaths(context);
  final List<ChangeList> selectedChangeLists=new ArrayList<ChangeList>();
  Collections.addAll(selectedChangeLists,context.getSelectedChangeLists());
  final List<CommittedChangeList> incomingChanges=CommittedChangesCache.getInstance(context.getProject()).getCachedIncomingChanges();
  final List<CommittedChangeList> intersectingChanges=new ArrayList<CommittedChangeList>();
  if (incomingChanges != null) {
    for (    CommittedChangeList changeList : incomingChanges) {
      if (!selectedChangeLists.contains(changeList)) {
        for (        Change change : changeList.getChanges()) {
          if (filePaths.contains(ChangesUtil.getFilePath(change))) {
            intersectingChanges.add(changeList);
            break;
          }
        }
      }
    }
  }
  if (intersectingChanges.size() > 0) {
    int rc=Messages.showOkCancelDialog(context.getProject(),VcsBundle.message("get.committed.changes.intersecting.prompt",intersectingChanges.size(),selectedChangeLists.size()),VcsBundle.message("get.committed.changes.title"),Messages.getQuestionIcon());
    if (rc != 0)     return;
  }
  super.actionPerformed(context);
}
