def validate_repo(self, ui, sshcmd, args, remotecmd):
    self.cleanup()
    cmd = '%s %s "%s -R %s serve --stdio"'
    cmd = (cmd % (sshcmd, args, remotecmd, self.path))
    cmd = util.quotecommand(cmd)
    ui.note((_('running %s\n') % cmd))
    (self.pipeo, self.pipei, self.pipee) = util.popen3(cmd)
    self.do_cmd('hello')
    r = self.do_cmd('between', pairs=('%s-%s' % (('0' * 40), ('0' * 40))))
    lines = ['', 'dummy']
    max_noise = 500
    while (lines[(-1)] and max_noise):
        l = r.readline()
        self.readerr()
        if ((lines[(-1)] == '1\n') and (l == '\n')):
            break
        if l:
            ui.debug('remote: ', l)
        lines.append(l)
        max_noise -= 1
    else:
        self.abort(error.RepoError(_('no suitable response from remote hg')))
    self.capabilities = set()
    for l in reversed(lines):
        if l.startswith('capabilities:'):
            self.capabilities.update(l[:(-1)].split(':')[1].split())
            break
