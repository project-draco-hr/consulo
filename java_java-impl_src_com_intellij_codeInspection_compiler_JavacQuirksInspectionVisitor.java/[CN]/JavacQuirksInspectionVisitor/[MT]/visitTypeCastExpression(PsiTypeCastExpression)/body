{
  if (PsiUtil.isLanguageLevel7OrHigher(expression))   return;
  final PsiTypeElement type=expression.getCastType();
  if (type != null) {
    type.accept(new JavaRecursiveElementWalkingVisitor(){
      @Override public void visitReferenceParameterList(      final PsiReferenceParameterList list){
        super.visitReferenceParameterList(list);
        if (list.getFirstChild() != null && QUALIFIER_REFERENCE.accepts(list)) {
          final String message=InspectionsBundle.message("inspection.compiler.javac.quirks.qualifier.type.args.problem");
          final String fixName=InspectionsBundle.message("inspection.compiler.javac.quirks.qualifier.type.args.fix");
          myHolder.registerProblem(list,message,new RemoveElementQuickFix(fixName));
        }
      }
    }
);
  }
}
