{
  try {
    return IOUtil.openCleanOrResetBroken(new ThrowableComputable<PersistentEnumerator<VcsUser>,IOException>(){
      @Override public PersistentEnumerator<VcsUser> compute() throws IOException {
        return new PersistentEnumerator<VcsUser>(mapFile,new MyDescriptor(),Page.PAGE_SIZE);
      }
    }
,mapFile);
  }
 catch (  IOException e) {
    LOG.warn(e);
    return null;
  }
}
