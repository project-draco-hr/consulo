{
  final PsiExpression[] dimensions1=newExp1.getArrayDimensions();
  final PsiExpression[] dimensions2=newExp2.getArrayDimensions();
  if (!expressionListsAreEquivalent(dimensions1,dimensions2)) {
    return false;
  }
  final PsiArrayInitializerExpression initializer1=newExp1.getArrayInitializer();
  final PsiArrayInitializerExpression initializer2=newExp2.getArrayInitializer();
  if (!expressionsAreEquivalent(initializer1,initializer2)) {
    return false;
  }
  final PsiExpression qualifier1=newExp1.getQualifier();
  final PsiExpression qualifier2=newExp2.getQualifier();
  if (!expressionsAreEquivalent(qualifier1,qualifier2)) {
    return false;
  }
  final PsiExpressionList argumentList1=newExp1.getArgumentList();
  final PsiExpression[] args1=argumentList1.getExpressions();
  final PsiExpressionList argumentList2=newExp2.getArgumentList();
  final PsiExpression[] args2=argumentList2.getExpressions();
  return expressionListsAreEquivalent(args1,args2);
}
