{
  configureByFile(BASE_PATH + getTestName(false) + ".java");
  PsiClass currentClass=JavaPsiFacade.getInstance(getProject()).findClass("Test",GlobalSearchScope.projectScope(getProject()));
  MemberInfoStorage memberInfoStorage=new MemberInfoStorage(currentClass,new MemberInfo.Filter<PsiMember>(){
    @Override public boolean includeMember(    PsiMember element){
      return true;
    }
  }
);
  List<MemberInfo> members=memberInfoStorage.getClassMemberInfos(currentClass);
  for (  MemberInfo member : members) {
    member.setChecked(true);
  }
  new PushDownProcessor(getProject(),members.toArray(new MemberInfo[members.size()]),currentClass,new DocCommentPolicy(DocCommentPolicy.ASIS)){
    @Override protected boolean showConflicts(    MultiMap<PsiElement,String> conflicts,    UsageInfo[] usages){
      return true;
    }
  }
.run();
  checkResultByFile(BASE_PATH + getTestName(false) + "_after.java");
}
