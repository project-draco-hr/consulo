{
  CommonProblemDescriptor[] descriptions=myTool.getDescriptions(refElement);
  int problemIdx=0;
  if (descriptions != null) {
    problemIdx=-1;
    for (int i=0; i < descriptions.length; i++) {
      CommonProblemDescriptor description=descriptions[i];
      if (description == descriptor) {
        problemIdx=i;
        break;
      }
    }
    if (problemIdx == -1)     return;
  }
  genPageHeader(buf,refElement);
  appendHeading(buf,InspectionsBundle.message("inspection.problem.synopsis"));
  buf.append("<br>");
  appendAfterHeaderIndention(buf);
  composeDescription(descriptor,problemIdx,buf,refElement);
  if (refElement instanceof RefElement && !refElement.isValid())   return;
  final QuickFix[] fixes=descriptor.getFixes();
  if (fixes != null && fixes.length > 0) {
    buf.append("<br><br>");
    appendHeading(buf,InspectionsBundle.message("inspection.problem.resolution"));
    buf.append("<br>");
    appendAfterHeaderIndention(buf);
    int idx=0;
    for (    QuickFix fix : fixes) {
      buf.append("<a HREF=\"file://bred.txt#invokelocal:" + (idx++));
      buf.append("\">");
      buf.append(fix.getName());
      buf.append("</a>");
      buf.append("<br>");
      appendAfterHeaderIndention(buf);
    }
  }
}
