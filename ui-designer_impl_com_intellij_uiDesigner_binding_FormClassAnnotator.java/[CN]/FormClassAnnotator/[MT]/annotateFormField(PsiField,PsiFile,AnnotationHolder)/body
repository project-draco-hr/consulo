{
  final List<IntentionAction> options=new ArrayList<IntentionAction>();
  LOG.assertTrue(boundForm instanceof PsiPlainTextFile);
  final PsiType guiComponentType=ReferenceUtil.getGUIComponentType((PsiPlainTextFile)boundForm,field.getName());
  if (guiComponentType != null) {
    final PsiType fieldType=field.getType();
    if (!fieldType.isAssignableFrom(guiComponentType)) {
      String message=MessageFormat.format(BOUND_FIELD_TYPE_MISMATCH,guiComponentType.getCanonicalText(),fieldType.getCanonicalText());
      Annotation annotation=holder.createErrorAnnotation(field.getTypeElement(),message);
      annotation.registerFix(new ChangeFormComponentTypeFix((PsiPlainTextFile)boundForm,field.getName(),field.getType()),null,options);
      annotation.registerFix(new ChangeBoundFieldTypeFix(field,guiComponentType),null,options);
    }
  }
  if (field.hasInitializer()) {
    String message=MessageFormat.format(FIELD_IS_OVERWRITTEN,field.getName());
    Annotation annotation=holder.createWarningAnnotation(field.getInitializer(),message);
    annotation.registerFix(new EmptyIntentionAction(HighlightDisplayKey.getDisplayNameByKey(HighlightDisplayKey.UNUSED_SYMBOL),options),null,options);
  }
}
