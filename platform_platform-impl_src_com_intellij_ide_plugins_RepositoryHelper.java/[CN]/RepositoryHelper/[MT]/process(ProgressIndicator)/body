{
  ArrayList<IdeaPluginDescriptor> plugins=null;
  try {
    BuildNumber buildNumber=ApplicationInfo.getInstance().getBuild();
    @NonNls String url=getListUrl() + "?build=" + buildNumber.asString();
    if (indicator != null) {
      indicator.setText2(IdeBundle.message("progress.connecting.to.plugin.manager",getRepositoryHost()));
    }
    HttpConfigurable.getInstance().prepareURL(getRepositoryHost());
{
      RepositoryContentHandler handler=new RepositoryContentHandler();
      HttpURLConnection connection=(HttpURLConnection)new URL(url).openConnection();
      if (indicator != null) {
        indicator.setText2(IdeBundle.message("progress.waiting.for.reply.from.plugin.manager",getRepositoryHost()));
      }
      InputStream is=getConnectionInputStream(connection);
      if (is != null) {
        if (indicator != null) {
          indicator.setText2(IdeBundle.message("progress.downloading.list.of.plugins"));
        }
        readPluginsStream(is,handler,indicator,extPluginsFile);
        plugins=handler.getPluginsList();
      }
    }
  }
 catch (  ProcessCanceledException e) {
    throw e;
  }
catch (  RuntimeException e) {
    e.printStackTrace();
    if (e.getCause() == null || !(e.getCause() instanceof InterruptedException)) {
    }
  }
  return plugins;
}
