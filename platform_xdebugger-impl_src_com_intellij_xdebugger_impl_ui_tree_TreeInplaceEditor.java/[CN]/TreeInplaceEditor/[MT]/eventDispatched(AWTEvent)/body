{
  if (!isShown()) {
    return;
  }
  MouseEvent mouseEvent=(MouseEvent)event;
  if (mouseEvent.getClickCount() == 0) {
    return;
  }
  final int id=mouseEvent.getID();
  if ((id != MouseEvent.MOUSE_PRESSED && id != MouseEvent.MOUSE_RELEASED && id != MouseEvent.MOUSE_CLICKED)) {
    return;
  }
  final Component sourceComponent=mouseEvent.getComponent();
  final Point originalPoint=mouseEvent.getPoint();
  final Editor editor=getEditor();
  if (editor == null)   return;
  final Lookup activeLookup=LookupManager.getInstance(editor.getProject()).getActiveLookup();
  if (activeLookup != null) {
    final JLayeredPane layeredPane=getTree().getRootPane().getLayeredPane();
    final Point layeredPoint=SwingUtilities.convertPoint(sourceComponent,originalPoint,layeredPane);
    if (activeLookup.getBounds().contains(layeredPoint)) {
      return;
    }
 else {
      ((LookupImpl)activeLookup).hide();
    }
  }
  final Point point=SwingUtilities.convertPoint(sourceComponent,originalPoint,myInplaceEditorComponent);
  if (myInplaceEditorComponent.contains(point)) {
    return;
  }
  final Component componentAtPoint=SwingUtilities.getDeepestComponentAt(sourceComponent,originalPoint.x,originalPoint.y);
  for (Component comp=componentAtPoint; comp != null; comp=comp.getParent()) {
    if (comp instanceof ComboPopup) {
      return;
    }
  }
  cancelEditing();
}
