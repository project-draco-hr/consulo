{
  if (!isShown()) {
    return;
  }
  MouseEvent mouseEvent=(MouseEvent)event;
  if (mouseEvent.getClickCount() == 0 && !(event instanceof MouseWheelEvent)) {
    return;
  }
  final int id=mouseEvent.getID();
  if (id != MouseEvent.MOUSE_PRESSED && id != MouseEvent.MOUSE_RELEASED && id != MouseEvent.MOUSE_CLICKED && id != MouseEvent.MOUSE_WHEEL) {
    return;
  }
  final Component sourceComponent=mouseEvent.getComponent();
  final Point originalPoint=mouseEvent.getPoint();
  final Editor editor=getEditor();
  if (editor == null)   return;
  Project project=editor.getProject();
  LookupImpl activeLookup=project != null ? (LookupImpl)LookupManager.getInstance(project).getActiveLookup() : null;
  if (activeLookup != null) {
    final Point lookupPoint=SwingUtilities.convertPoint(sourceComponent,originalPoint,activeLookup.getComponent());
    if (activeLookup.getComponent().getBounds().contains(lookupPoint)) {
      return;
    }
 else {
      activeLookup.hide();
    }
  }
  final List<JBPopup> popups=JBPopupFactory.getInstance().getChildPopups(myInplaceEditorComponent);
  for (  JBPopup popup : popups) {
    if (SwingUtilities.isDescendingFrom(sourceComponent,popup.getContent())) {
      return;
    }
  }
  final Point point=SwingUtilities.convertPoint(sourceComponent,originalPoint,myInplaceEditorComponent);
  if (myInplaceEditorComponent.contains(point)) {
    return;
  }
  final Component componentAtPoint=SwingUtilities.getDeepestComponentAt(sourceComponent,originalPoint.x,originalPoint.y);
  for (Component comp=componentAtPoint; comp != null; comp=comp.getParent()) {
    if (comp instanceof ComboPopup) {
      if (id != MouseEvent.MOUSE_WHEEL) {
        doPopupOKAction();
      }
      return;
    }
  }
  cancelEditing();
}
