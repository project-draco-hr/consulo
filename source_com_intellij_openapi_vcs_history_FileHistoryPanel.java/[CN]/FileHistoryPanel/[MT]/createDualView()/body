{
  myDualView.setShowGrid(true);
  myDualView.getTreeView().addMouseListener(new PopupHandler(){
    public void invokePopup(    Component comp,    int x,    int y){
      ActionPopupMenu popupMenu=ActionManager.getInstance().createActionPopupMenu(ActionPlaces.UPDATE_POPUP,myPopupActions);
      popupMenu.getComponent().show(comp,x,y);
    }
  }
);
  myDualView.getFlatView().addMouseListener(new PopupHandler(){
    public void invokePopup(    Component comp,    int x,    int y){
      ActionPopupMenu popupMenu=ActionManager.getInstance().createActionPopupMenu(ActionPlaces.UPDATE_POPUP,myPopupActions);
      popupMenu.getComponent().show(comp,x,y);
    }
  }
);
  myDualView.requestFocus();
  myDualView.setSelectionInterval(0,0);
  myDualView.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateMessage();
    }
  }
);
  myDualView.setRootVisible(false);
  myDualView.expandAll();
  final TreeCellRenderer defaultCellRenderer=myDualView.getTree().getCellRenderer();
  myDualView.setTreeCellRenderer(new TreeCellRenderer(){
    public Component getTreeCellRendererComponent(    JTree tree,    Object value,    boolean selected,    boolean expanded,    boolean leaf,    int row,    boolean hasFocus){
      Component result=defaultCellRenderer.getTreeCellRendererComponent(tree,value,selected,expanded,leaf,row,hasFocus);
      TreePath path=tree.getPathForRow(row);
      if (path == null)       return result;
      VcsFileRevision revision=row >= 0 ? (VcsFileRevision)path.getLastPathComponent() : null;
      if (revision != null) {
        if (Comparing.equal(revision.getRevisionNumber(),myHistorySession.getCurrentRevisionNumber())) {
          makeBold(result);
        }
        if (!selected && Comparing.equal(revision.getRevisionNumber(),myHistorySession.getCurrentRevisionNumber())) {
          result.setBackground(new Color(188,227,231));
          ((JComponent)result).setOpaque(false);
        }
      }
 else       if (selected) {
        result.setBackground(IdeaUIManager.getTableSelectionBackgroung());
      }
 else {
        result.setBackground(IdeaUIManager.getTableBackgroung());
      }
      return result;
    }
  }
);
  myDualView.setCellWrapper(new CellWrapper(){
    public void wrap(    Component component,    JTable table,    Object value,    boolean isSelected,    boolean hasFocus,    int row,    int column,    Object treeNode){
      VcsFileRevision revision=(VcsFileRevision)treeNode;
      if (revision == null)       return;
      if (myHistorySession.getCurrentRevisionNumber() == null)       return;
      if (revision.getRevisionNumber().compareTo(myHistorySession.getCurrentRevisionNumber()) == 0) {
        makeBold(component);
      }
    }
  }
);
  TableViewModel sortableModel=myDualView.getFlatView().getTableViewModel();
  sortableModel.setSortable(true);
  sortableModel.sortByColumn(0);
}
