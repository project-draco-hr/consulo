{
  CheckBoxList checkBoxList=(CheckBoxList)list;
  EarlyAccessProgramDescriptor earlyAccessProgramDescriptor=(EarlyAccessProgramDescriptor)checkBoxList.getItemAt(index);
  JCheckBox checkbox=(JCheckBox)value;
  checkbox.setEnabled(list.isEnabled());
  checkbox.setFocusPainted(false);
  checkbox.setBorderPainted(true);
  if (earlyAccessProgramDescriptor == null) {
    return checkbox;
  }
 else {
    checkbox.setEnabled(earlyAccessProgramDescriptor.isAvailable());
    JPanel panel=new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP,true,true)){
      @Override public Dimension getPreferredSize(){
        Dimension size=super.getPreferredSize();
        return new Dimension(Math.min(size.width,200),size.height);
      }
    }
;
    panel.setEnabled(earlyAccessProgramDescriptor.isAvailable());
    JPanel topPanel=new JPanel(new BorderLayout());
    topPanel.add(checkbox,BorderLayout.WEST);
    if (earlyAccessProgramDescriptor.isRestartRequired()) {
      JBLabel comp=new JBLabel("Restart required");
      comp.setForeground(JBColor.GRAY);
      topPanel.add(comp,BorderLayout.EAST);
    }
    panel.add(topPanel);
    panel.setBorder(new CustomLineBorder(0,0,1,0));
    String description=StringUtil.notNullizeIfEmpty(earlyAccessProgramDescriptor.getDescription(),"Description is not available");
    JTextPane textPane=new JTextPane();
    textPane.setText(description);
    textPane.setEditable(false);
    if (!earlyAccessProgramDescriptor.isAvailable()) {
      textPane.setForeground(JBColor.GRAY);
    }
    panel.add(textPane);
    return panel;
  }
}
