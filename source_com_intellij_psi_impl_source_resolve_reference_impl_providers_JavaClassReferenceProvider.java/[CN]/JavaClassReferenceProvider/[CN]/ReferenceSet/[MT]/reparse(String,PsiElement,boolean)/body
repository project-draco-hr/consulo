{
  myElement=element;
  final List<JavaReference> referencesList=new ArrayList<JavaReference>();
  int currentDot=-1;
  int index=0;
  boolean allowDollarInNames=element.getLanguage() instanceof XMLLanguage;
  boolean parsingClassNames=true;
  while (parsingClassNames) {
    int nextDotOrDollar=str.indexOf(SEPARATOR,currentDot + 1);
    if (nextDotOrDollar == -1 && allowDollarInNames) {
      nextDotOrDollar=str.indexOf(SEPARATOR2,currentDot + 1);
    }
    if (nextDotOrDollar == -1) {
      nextDotOrDollar=currentDot + 1;
      for (int i=nextDotOrDollar; i < str.length() && Character.isJavaIdentifierPart(str.charAt(i)); ++i)       nextDotOrDollar++;
      parsingClassNames=false;
      int j=nextDotOrDollar;
      while (j < str.length() && Character.isWhitespace(str.charAt(j)))       ++j;
      if (j < str.length()) {
        char ch=str.charAt(j);
        boolean recognized=false;
        if (ch == '[') {
          j++;
          while (j < str.length() && Character.isWhitespace(str.charAt(j)))           ++j;
          if (j < str.length()) {
            ch=str.charAt(j);
            if (ch == ']') {
              j++;
              while (j < str.length() && Character.isWhitespace(str.charAt(j)))               ++j;
              recognized=j == str.length();
            }
          }
        }
        final Boolean aBoolean=JVM_FORMAT.getValue(myOptions);
        if (aBoolean == null || !aBoolean) {
          if (!recognized)           nextDotOrDollar=-1;
        }
      }
    }
    final String subreferenceText=nextDotOrDollar > 0 ? str.substring(currentDot + 1,nextDotOrDollar) : str.substring(currentDot + 1);
    TextRange textRange=new TextRange(myStartInElement + currentDot + 1,myStartInElement + (nextDotOrDollar > 0 ? nextDotOrDollar : str.length()));
    JavaReference currentContextRef=new JavaReference(textRange,index++,subreferenceText,isStaticImport);
    referencesList.add(currentContextRef);
    if ((currentDot=nextDotOrDollar) < 0) {
      break;
    }
  }
  myReferences=referencesList.toArray(new JavaReference[referencesList.size()]);
}
