{
  if (!myElement.isValid())   return JavaResolveResult.EMPTY;
  final String elementText=getElement().getText();
  if (isStaticClassReference(elementText)) {
    final PsiElement psiElement=myReferences[myIndex - 1].resolve();
    if (psiElement instanceof PsiClass) {
      final PsiClass psiClass=((PsiClass)psiElement).findInnerClassByName(getCanonicalText(),false);
      if (psiClass != null)       return new ClassCandidateInfo(psiClass,PsiSubstitutor.EMPTY,false,myElement);
      return JavaResolveResult.EMPTY;
    }
  }
  String qName=elementText.substring(getReference(0).getRangeInElement().getStartOffset(),getRangeInElement().getEndOffset());
  PsiManager manager=myElement.getManager();
  if (myIndex == myReferences.length - 1) {
    final PsiClass aClass=manager.findClass(qName,GlobalSearchScope.allScope(myElement.getProject()));
    if (aClass != null) {
      return new ClassCandidateInfo(aClass,PsiSubstitutor.EMPTY,false,myElement);
    }
 else {
      final Boolean value=RESOLVE_ONLY_CLASSES.getValue(myOptions);
      if (value != null && value.booleanValue()) {
        return JavaResolveResult.EMPTY;
      }
    }
  }
  PsiElement resolveResult=manager.findPackage(qName);
  if (resolveResult == null) {
    resolveResult=manager.findClass(qName,GlobalSearchScope.allScope(myElement.getProject()));
  }
  if (myInStaticImport && resolveResult == null) {
    resolveResult=JspxStaticImportStatement.resolveMember(qName,manager,getElement().getResolveScope());
  }
  if (resolveResult == null) {
    PsiFile containingFile=myElement.getContainingFile();
    if (containingFile instanceof PsiJavaFile) {
      if (containingFile instanceof JspFile) {
        containingFile=containingFile.getViewProvider().getPsi(StdLanguages.JAVA);
        if (containingFile == null)         return JavaResolveResult.EMPTY;
      }
      final ClassResolverProcessor processor=new ClassResolverProcessor(getCanonicalText(),myElement);
      containingFile.processDeclarations(processor,PsiSubstitutor.EMPTY,null,myElement);
      if (processor.getResult().length == 1) {
        final JavaResolveResult javaResolveResult=processor.getResult()[0];
        if (javaResolveResult != JavaResolveResult.EMPTY && options != null) {
          final Boolean value=RESOLVE_QUALIFIED_CLASS_NAME.getValue(options);
          if (value != null && value.booleanValue()) {
            final String qualifiedName=((PsiClass)javaResolveResult.getElement()).getQualifiedName();
            if (!qName.equals(qualifiedName)) {
              return JavaResolveResult.EMPTY;
            }
          }
        }
        return javaResolveResult;
      }
    }
  }
  return resolveResult != null ? new CandidateInfo(resolveResult,PsiSubstitutor.EMPTY,false,false,myElement) : JavaResolveResult.EMPTY;
}
