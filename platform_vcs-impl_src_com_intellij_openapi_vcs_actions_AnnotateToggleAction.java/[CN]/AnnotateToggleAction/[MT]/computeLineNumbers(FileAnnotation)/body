{
  final SortedList<VcsFileRevision> revisions=new SortedList<VcsFileRevision>(new Comparator<VcsFileRevision>(){
    @Override public int compare(    VcsFileRevision o1,    VcsFileRevision o2){
      try {
        return o1.getRevisionDate().compareTo(o2.getRevisionDate());
      }
 catch (      Exception e) {
        return 0;
      }
    }
  }
);
  final Map<String,Integer> numbers=new HashMap<String,Integer>();
  final List<VcsFileRevision> fileRevisionList=fileAnnotation.getRevisions();
  if (fileRevisionList != null) {
    revisions.addAll(fileRevisionList);
    for (    VcsFileRevision revision : fileRevisionList) {
      final String revNumber=revision.getRevisionNumber().asString();
      if (!numbers.containsKey(revNumber)) {
        final int num=revisions.indexOf(revision);
        if (num != -1) {
          numbers.put(revNumber,num + 1);
        }
      }
    }
  }
  return numbers.size() < 2 ? null : numbers;
}
