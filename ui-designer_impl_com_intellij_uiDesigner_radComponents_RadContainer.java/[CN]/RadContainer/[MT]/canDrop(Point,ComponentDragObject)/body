{
  if (location == null) {
    if (dragObject.getComponentCount() > 1) {
      return false;
    }
    return getComponentAtGrid(0,0) == null;
  }
  if (isGrid()) {
    final GridLayoutManager gridLayout=(GridLayoutManager)getLayout();
    final int row=gridLayout.getRowAt(location.y);
    final int column=gridLayout.getColumnAt(location.x);
    if (row == -1 || column == -1) {
      LOG.debug("RadContainer.canDrop=false because no cell at mouse position");
      return false;
    }
    for (int i=0; i < dragObject.getComponentCount(); i++) {
      int relativeCol=dragObject.getRelativeCol(i);
      int relativeRow=dragObject.getRelativeRow(i);
      int colSpan=dragObject.getColSpan(i);
      int rowSpan=dragObject.getRowSpan(i);
      if (row + relativeRow < 0 || column + relativeCol < 0 || relativeRow + rowSpan > gridLayout.getRowCount() || relativeCol + colSpan > gridLayout.getColumnCount()) {
        LOG.debug("RadContainer.canDrop=false because range is outside grid: row=" + (row + relativeRow) + ", col="+ (column + relativeCol)+ ", colSpan="+ colSpan+ ", rowSpan="+ rowSpan);
        return false;
      }
      final RadComponent componentInRect=findComponentInRect(row + relativeRow,column + relativeCol,rowSpan,colSpan);
      if (componentInRect != null) {
        LOG.debug("RadContainer.canDrop=false because found component " + componentInRect.getId() + " in rect (row="+ (row + relativeRow)+ ", col="+ (column + relativeCol)+ ", rowSpan="+ rowSpan+ ", colSpan="+ colSpan+ ")");
        return false;
      }
    }
    return true;
  }
 else {
    throw new IllegalStateException("unknown layout:" + getLayout());
  }
}
