{
  for (  String epName : ourDefaultEPs.keySet()) {
    registerExtensionPoint(epName,ourDefaultEPs.get(epName));
  }
  getExtensionPoint(EPAvailabilityListenerExtension.EXTENSION_POINT_NAME).addExtensionPointListener(new ExtensionPointListener(){
    public void extensionRemoved(    Object extension,    final PluginDescriptor pluginDescriptor){
      EPAvailabilityListenerExtension epListenerExtension=(EPAvailabilityListenerExtension)extension;
      List<Object> listeners=(List<Object>)myAvailabilityListeners.get(epListenerExtension.getExtensionPointName());
      for (Iterator<Object> iterator=listeners.iterator(); iterator.hasNext(); ) {
        Object listener=iterator.next();
        if (listener.getClass().getName().equals(epListenerExtension.getListenerClass())) {
          iterator.remove();
          return;
        }
      }
      myLogger.warn("Failed to find EP availability listener: " + epListenerExtension.getListenerClass());
    }
    public void extensionAdded(    Object extension,    final PluginDescriptor pluginDescriptor){
      EPAvailabilityListenerExtension epListenerExtension=(EPAvailabilityListenerExtension)extension;
      try {
        String epName=epListenerExtension.getExtensionPointName();
        ExtensionPointAvailabilityListener listener=(ExtensionPointAvailabilityListener)instantiate(epListenerExtension.loadListenerClass());
        addAvailabilityListener(epName,listener);
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
);
}
