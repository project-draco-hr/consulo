{
  if (element == myRootElement) {
    final RadRootContainer rootContainer=myEditor.getRootContainer();
    final ComponentPtr rootPtr=new ComponentPtr(myEditor,rootContainer);
    final LwInspectionSuppression[] suppressions=rootContainer.getInspectionSuppressions();
    if (suppressions.length > 0) {
      return new Object[]{rootPtr,suppressions};
    }
    return new Object[]{rootPtr};
  }
 else   if (element instanceof ComponentPtr) {
    final ComponentPtr ptr=(ComponentPtr)element;
    LOG.assertTrue(ptr.isValid());
    final RadComponent component=ptr.getComponent();
    if (component instanceof RadContainer) {
      final RadContainer container=(RadContainer)component;
      final ComponentPtr[] ptrs=new ComponentPtr[container.getComponentCount()];
      for (int i=0; i < ptrs.length; i++) {
        ptrs[i]=new ComponentPtr(myEditor,container.getComponent(i));
      }
      return ptrs;
    }
 else {
      return ourEmptyObjectArray;
    }
  }
 else   if (element instanceof LwInspectionSuppression[]) {
    ArrayList<LwInspectionSuppression> result=new ArrayList<LwInspectionSuppression>();
    for (    LwInspectionSuppression suppression : (LwInspectionSuppression[])element) {
      if (suppression.getComponentId() == null || FormEditingUtil.findComponent(myEditor.getRootContainer(),suppression.getComponentId()) != null) {
        result.add(suppression);
      }
    }
    return result.toArray(new Object[result.size()]);
  }
 else   if (element instanceof LwInspectionSuppression) {
    return ArrayUtil.EMPTY_OBJECT_ARRAY;
  }
 else {
    throw new IllegalArgumentException("unknown element: " + element);
  }
}
