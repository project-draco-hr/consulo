{
  return new Runnable(){
    public void run(){
      if (LOG.isDebugEnabled()) {
        LOG.debug("update runnable (myUpdateByTimerEnabled = " + myUpdateByTimerEnabled + ")");
      }
      if (!myUpdateByTimerEnabled)       return;
      if (myDisposed || myProject.isDisposed())       return;
      final Collection<FileEditor> activeEditors=myDaemonListeners.getSelectedEditors();
      if (activeEditors.isEmpty())       return;
      Map<FileEditor,HighlightingPass[]> passes=new THashMap<FileEditor,HighlightingPass[]>(activeEditors.size());
      for (      FileEditor fileEditor : activeEditors) {
        BackgroundEditorHighlighter highlighter=fileEditor.getBackgroundHighlighter();
        if (highlighter != null) {
          HighlightingPass[] highlightingPasses=highlighter.createPassesForEditor();
          passes.put(fileEditor,highlightingPasses);
        }
      }
      renewUpdateProgress(true);
      myPassExecutorService.submitPasses(passes,myUpdateProgress,Job.DEFAULT_PRIORITY);
    }
  }
;
}
