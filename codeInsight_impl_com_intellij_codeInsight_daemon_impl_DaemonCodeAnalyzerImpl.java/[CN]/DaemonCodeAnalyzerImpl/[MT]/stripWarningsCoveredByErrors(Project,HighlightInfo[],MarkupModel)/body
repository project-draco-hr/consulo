{
  final SeverityRegistrar severityRegistrar=SeverityRegistrar.getInstance(project);
  List<HighlightInfo> all=new ArrayList<HighlightInfo>(Arrays.asList(highlights));
  List<HighlightInfo> errors=new ArrayList<HighlightInfo>();
  for (  HighlightInfo highlight : highlights) {
    if (severityRegistrar.compare(highlight.getSeverity(),HighlightSeverity.ERROR) >= 0) {
      errors.add(highlight);
    }
  }
  for (  HighlightInfo highlight : highlights) {
    if (severityRegistrar.compare(HighlightSeverity.ERROR,highlight.getSeverity()) > 0 && highlight.getSeverity().myVal > 0) {
      for (      HighlightInfo errorInfo : errors) {
        if (isCoveredBy(highlight,errorInfo)) {
          all.remove(highlight);
          RangeHighlighter highlighter=highlight.highlighter;
          if (highlighter != null && highlighter.isValid()) {
            markup.removeHighlighter(highlighter);
          }
          break;
        }
      }
    }
  }
  return all.size() < highlights.length ? all.toArray(new HighlightInfo[all.size()]) : highlights;
}
