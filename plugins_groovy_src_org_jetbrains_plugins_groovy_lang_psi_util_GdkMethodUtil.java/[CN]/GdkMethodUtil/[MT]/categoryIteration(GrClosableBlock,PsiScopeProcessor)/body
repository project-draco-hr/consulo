{
  final GrMethodCall call=checkMethodCall(place,USE);
  if (call == null)   return true;
  final GrClosableBlock[] closures=call.getClosureArguments();
  final GrExpression[] args=call.getExpressionArguments();
  int last=args.length - 1;
  if (!(closures.length == 1 && place.equals(closures[0])) && !(args.length > 0 && place.equals(args[last]))) {
    return true;
  }
  if (!(call.resolveMethod() instanceof GrGdkMethod))   return true;
  final DelegatingScopeProcessor delegate=new DelegatingScopeProcessor(processor){
    @Override public boolean execute(    PsiElement element,    ResolveState state){
      if (element instanceof PsiMethod) {
        if (!((PsiMethod)element).hasModifierProperty(PsiModifier.STATIC))         return true;
        if (((PsiMethod)element).getParameterList().getParametersCount() == 0)         return true;
        return processor.execute(new GrGdkMethodImpl((PsiMethod)element,false),state);
      }
 else {
        return processor.execute(element,state);
      }
    }
  }
;
  for (  GrExpression arg : args) {
    if (arg instanceof GrReferenceExpression) {
      final PsiElement resolved=((GrReferenceExpression)arg).resolve();
      if (resolved instanceof PsiClass) {
        if (!resolved.processDeclarations(delegate,ResolveState.initial().put(ResolverProcessor.RESOLVE_CONTEXT,call),null,place)) {
          return false;
        }
      }
    }
  }
  return true;
}
