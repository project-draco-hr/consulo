{
  GrStatement[] statements=run.getStatements();
  for (  GrStatement statement : statements) {
    if (statement == lastParent)     break;
    final Trinity<PsiClassType,GrReferenceExpression,PsiClass> result=getMixinTypes(statement);
    if (result != null) {
      final PsiClassType subjectType=result.first;
      final GrReferenceExpression qualifier=result.second;
      final PsiClass mixin=result.third;
      final DelegatingScopeProcessor delegate=new DelegatingScopeProcessor(processor){
        @Override public boolean execute(        @NotNull PsiElement element,        ResolveState delegateState){
          if (element instanceof PsiMethod && isCategoryMethod((PsiMethod)element,subjectType,qualifier,null)) {
            PsiMethod method=(PsiMethod)element;
            return processor.execute(GrGdkMethodImpl.createGdkMethod(method,false,generateOriginInfo(method)),delegateState);
          }
 else           if (element instanceof PsiMethod && ((PsiMethod)element).hasModifierProperty(PsiModifier.PUBLIC)) {
            super.execute(element,delegateState);
          }
          return true;
        }
      }
;
      mixin.processDeclarations(delegate,state,null,place);
    }
  }
  return true;
}
