{
  if (StringUtil.isEmptyOrSpaces(text))   return PsiReference.EMPTY_ARRAY;
  MavenProject mavenProject=MavenDomUtil.findContainingProject(element);
  if (mavenProject == null)   return PsiReference.EMPTY_ARRAY;
  List<PsiReference> result=new ArrayList<PsiReference>();
  Matcher matcher=MavenPropertyResolver.PATTERN.matcher(text);
  while (matcher.find()) {
    String propertyName=matcher.group(1);
    int from=textStart + matcher.start(1);
    TextRange range=TextRange.from(from,propertyName.length());
    MavenPropertyPsiReference ref;
    if (filtered) {
      ref=new MavenFilteredPropertyPsiReference(mavenProject,element,propertyName,range);
    }
 else {
      ref=new MavenPropertyPsiReference(mavenProject,element,propertyName,range);
    }
    result.add(ref);
  }
  return result.toArray(new PsiReference[result.size()]);
}
