{
  final PsiExpression lhs;
  final PsiExpression rhs;
  final PsiBinaryExpression exp=(PsiBinaryExpression)expression;
  final PsiJavaToken sign=exp.getOperationSign();
  lhs=exp.getLOperand();
  rhs=exp.getROperand();
  final IElementType tokenType=sign.getTokenType();
  if (tokenType.equals(JavaTokenType.PLUS)) {
    if (isZero(lhs)) {
      return rhs.getText();
    }
 else {
      return lhs.getText();
    }
  }
 else   if (tokenType.equals(JavaTokenType.MINUS)) {
    return lhs.getText();
  }
 else   if (tokenType.equals(JavaTokenType.ASTERISK)) {
    if (isOne(lhs)) {
      return rhs.getText();
    }
 else     if (isOne(rhs)) {
      return lhs.getText();
    }
 else {
      return "0";
    }
  }
 else   if (tokenType.equals(JavaTokenType.DIV)) {
    return lhs.getText();
  }
 else {
    return "";
  }
}
