{
  ensureUniqueKeymapNames();
  final KeymapManagerImpl keymapManager=(KeymapManagerImpl)KeymapManager.getInstance();
  keymapManager.removeAllKeymapsExceptUnmodifiable();
  Keymap activeKeyMapToSet=myActiveKeymap;
  for (int i=0; i < myKeymapListModel.getSize(); i++) {
    final Keymap modelKeymap=(Keymap)myKeymapListModel.elementAt(i);
    if (modelKeymap.canModify()) {
      final KeymapImpl keymapToAdd=((KeymapImpl)modelKeymap).copy();
      if (modelKeymap == myActiveKeymap) {
        activeKeyMapToSet=keymapToAdd;
      }
      keymapManager.addKeymap(keymapToAdd);
    }
  }
  keymapManager.setActiveKeymap(activeKeyMapToSet);
  try {
    keymapManager.save();
  }
 catch (  IOException e) {
    throw new ConfigurationException(e.getMessage());
  }
  QuickListsManager.getInstance().removeAllQuickLists();
  int size=myQuickListsModel.getSize();
  for (int i=0; i < size; i++) {
    QuickList list=(QuickList)myQuickListsModel.getElementAt(i);
    QuickListsManager.getInstance().registerQuickList(list,false);
  }
  QuickListsManager.getInstance().registerActions();
}
