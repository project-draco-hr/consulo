{
  String actionId=myActionsTree.getSelectedActionId();
  if (actionId == null) {
    return;
  }
  ActionsTreeUtil.Group group=myActionsTree.getMainGroup();
  KeyboardShortcutDialog dialog=new KeyboardShortcutDialog(this,actionId,group);
  Shortcut selected=(Shortcut)myShortcutsList.getSelectedValue();
  KeyboardShortcut selectedKeyboardShortcut=selected instanceof KeyboardShortcut ? (KeyboardShortcut)selected : null;
  dialog.setData(mySelectedKeymap,selectedKeyboardShortcut);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  KeyboardShortcut keyboardShortcut=dialog.getKeyboardShortcut();
  if (keyboardShortcut == null)   return;
  HashMap<String,ArrayList<KeyboardShortcut>> conflicts=mySelectedKeymap.getConflicts(actionId,keyboardShortcut);
  if (conflicts.size() > 0) {
    int result=Messages.showDialog(this,"The shortcut is already assigned to other actions.\nDo you want to remove other assignments?","Warning",new String[]{"Remove","Leave","Cancel"},0,Messages.getWarningIcon());
    if (result == 0) {
      for (Iterator<String> actionIds=conflicts.keySet().iterator(); actionIds.hasNext(); ) {
        String id=actionIds.next();
        ArrayList<KeyboardShortcut> list=conflicts.get(id);
        for (Iterator<KeyboardShortcut> iterator=list.iterator(); iterator.hasNext(); ) {
          KeyboardShortcut shortcut=iterator.next();
          mySelectedKeymap.removeShortcut(id,shortcut);
        }
      }
    }
 else     if (result != 1) {
      return;
    }
  }
  Shortcut[] shortcuts=mySelectedKeymap.getShortcuts(actionId);
  for (int i=0; i < shortcuts.length; i++) {
    Shortcut shortcut=shortcuts[i];
    if (shortcut.equals(keyboardShortcut)) {
      myShortcutsList.setSelectedIndex(i);
      return;
    }
  }
  mySelectedKeymap.addShortcut(actionId,keyboardShortcut);
  if (StringUtil.startsWithChar(actionId,'$')) {
    mySelectedKeymap.addShortcut("Editor" + actionId.substring(1),keyboardShortcut);
  }
  updateShortcutsList();
  myShortcutsList.setSelectedIndex(myShortcutsList.getModel().getSize() - 1);
  repaintLists();
}
