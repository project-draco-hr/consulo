{
  final List<PropertiesFile> propertiesFiles=myResourceBundle.getPropertiesFiles(myProject);
  for (  PropertiesFile propertiesFile : propertiesFiles) {
    if (!FileModificationService.getInstance().prepareFileForWrite(propertiesFile.getContainingFile()))     return false;
  }
  RenameProcessor renameProcessor=null;
  String baseName=myResourceBundle.getBaseName();
  for (  PropertiesFile propertiesFile : propertiesFiles) {
    final VirtualFile virtualFile=propertiesFile.getVirtualFile();
    if (virtualFile == null) {
      continue;
    }
    final String newName=inputString + virtualFile.getNameWithoutExtension().substring(baseName.length()) + "."+ virtualFile.getExtension();
    if (renameProcessor == null) {
      renameProcessor=new RenameProcessor(myProject,propertiesFile.getContainingFile(),newName,false,false);
      continue;
    }
    renameProcessor.addElement(propertiesFile.getContainingFile(),newName);
  }
  if (renameProcessor == null) {
    LOG.assertTrue(false);
    return true;
  }
  renameProcessor.setCommandName(PropertiesBundle.message("rename.resource.bundle.dialog.title"));
  renameProcessor.doRun();
  return true;
}
