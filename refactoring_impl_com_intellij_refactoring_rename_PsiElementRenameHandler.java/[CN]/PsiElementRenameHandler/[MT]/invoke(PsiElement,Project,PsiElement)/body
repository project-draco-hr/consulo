{
  if (element != null && !canRename(element,project)) {
    return;
  }
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.rename");
  if (element instanceof PsiDirectory) {
    PsiDirectory psiDirectory=(PsiDirectory)element;
    PsiPackage aPackage=psiDirectory.getPackage();
    final String qualifiedName=aPackage != null ? aPackage.getQualifiedName() : "";
    if (aPackage == null || qualifiedName.length() == 0) {
      rename(element,project,nameSuggestionContext);
    }
 else {
      PsiDirectory[] directories=aPackage.getDirectories();
      final VirtualFile[] virtualFiles=aPackage.occursInPackagePrefixes();
      if (virtualFiles.length == 0 && directories.length == 1) {
        rename(aPackage,project,nameSuggestionContext);
      }
 else {
        StringBuffer message=new StringBuffer();
        RenameUtil.buildPackagePrefixChangedMessage(virtualFiles,message,qualifiedName);
        RenameUtil.buildMultipleDirectoriesInPackageMessage(message,aPackage,directories);
        message.append(RefactoringBundle.message("directories.and.all.references.to.package.will.be.renamed",qualifiedName));
        int ret=Messages.showYesNoDialog(project,message.toString(),RefactoringBundle.message("warning.title"),Messages.getWarningIcon());
        if (ret != 0) {
          return;
        }
        rename(aPackage,project,nameSuggestionContext);
      }
    }
  }
 else {
    rename(element,project,nameSuggestionContext);
  }
}
