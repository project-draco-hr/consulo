{
  if (element instanceof PsiAntTarget || element instanceof PsiAntProperty) {
    return CommonRefactoringUtil.checkReadOnlyStatus(project,element.getNavigationElement());
  }
  final String REFACTORING_NAME=RefactoringBundle.message("rename.title");
  if (element instanceof XmlTag && !(((XmlTag)element).getMetaData() instanceof PsiWritableMetaData) || !(element instanceof PsiNamedElement || element instanceof XmlAttributeValue)) {
    String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.wrong.caret.position.symbol"));
    CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME,message,null,project);
    return false;
  }
  if (!PsiManager.getInstance(project).isInProject(element)) {
    String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.out.of.project.element",UsageViewUtil.getType(element)));
    CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME,message,null,project);
    return false;
  }
  if (InjectedLanguageUtil.isInInjectedLanguagePrefixSuffix(element)) {
    String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("error.in.injected.lang.prefix.suffix",UsageViewUtil.getType(element)));
    CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME,message,null,project);
    return false;
  }
  return CommonRefactoringUtil.checkReadOnlyStatus(project,element);
}
