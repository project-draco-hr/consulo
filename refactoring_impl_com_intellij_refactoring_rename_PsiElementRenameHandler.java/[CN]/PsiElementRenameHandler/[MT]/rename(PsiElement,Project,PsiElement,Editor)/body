{
  if (element instanceof PsiMethod) {
    PsiMethod psiMethod=(PsiMethod)element;
    if (psiMethod.isConstructor()) {
      PsiClass containingClass=psiMethod.getContainingClass();
      if (containingClass == null)       return;
      element=containingClass;
      if (!canRename(element,project)) {
        return;
      }
    }
  }
  PsiElement elementToRename=element;
  if (elementToRename instanceof PsiMethod) {
    elementToRename=SuperMethodWarningUtil.checkSuperMethod((PsiMethod)elementToRename,RefactoringBundle.message("to.rename"));
    if (elementToRename == null)     return;
  }
  if (editor != null) {
    if (elementToRename instanceof PsiVariable && VariableInplaceRenamer.mayRenameInplace((PsiVariable)elementToRename,editor)) {
      new VariableInplaceRenamer((PsiVariable)elementToRename).performInplaceRename(editor);
      return;
    }
  }
  final RenameDialog dialog=new RenameDialog(project,elementToRename,nameSuggestionContext,editor);
  dialog.show();
}
