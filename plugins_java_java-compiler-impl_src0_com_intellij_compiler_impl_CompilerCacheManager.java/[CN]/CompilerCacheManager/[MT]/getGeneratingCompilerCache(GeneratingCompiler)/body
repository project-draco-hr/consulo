{
  Object cache=myCompilerToCacheMap.get(compiler);
  if (cache == null) {
    final File cacheDir=getCompilerRootDir(compiler);
    final StateCache<ValidityState> stateCache=new StateCache<ValidityState>(new File(cacheDir,"timestamps")){
      public ValidityState read(      DataInput stream) throws IOException {
        return compiler.createValidityState(stream);
      }
      public void write(      ValidityState validityState,      DataOutput out) throws IOException {
        validityState.save(out);
      }
    }
;
    myCompilerToCacheMap.put(compiler,stateCache);
    myCacheDisposables.add(new Disposable(){
      public void dispose(){
        try {
          stateCache.close();
        }
 catch (        IOException e) {
          LOG.info(e);
        }
      }
    }
);
    cache=stateCache;
  }
  return (StateCache<ValidityState>)cache;
}
