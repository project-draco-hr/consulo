{
  super.update(e);
  Presentation presentation=e.getPresentation();
  if (!presentation.isVisible())   return;
  IdeView view=LangDataKeys.IDE_VIEW.getData(e.getDataContext());
  if (view == null)   return;
  Project project=PlatformDataKeys.PROJECT.getData(e.getDataContext());
  if (project == null)   return;
  ProjectFileIndex projectFileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  for (  PsiDirectory dir : view.getDirectories()) {
    if (projectFileIndex.isInSourceContent(dir.getVirtualFile()) && checkPackageExists(dir)) {
      for (      GroovySourceFolderDetector detector : GroovySourceFolderDetector.EP_NAME.getExtensions()) {
        if (detector.isGroovySourceFolder(dir)) {
          presentation.setWeight(Presentation.HIGHER_WEIGHT);
          break;
        }
      }
      return;
    }
  }
}
