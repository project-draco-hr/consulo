{
  final PsiElement position=parameters.getPosition();
  final ElementFilter filter=getClassFilter(position);
  AllClassesGetter.processJavaClasses(parameters,matcher,parameters.getInvocationCount() <= 1,new Consumer<PsiClass>(){
    @Override public void consume(    PsiClass psiClass){
      if (!inheritors.alreadyProcessed(psiClass) && filter.isAcceptable(psiClass,position)) {
        consumer.consume(GroovyCompletionUtil.createClassLookupItem(psiClass));
      }
    }
  }
);
}
