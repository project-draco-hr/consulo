{
  final StaticMemberProcessor processor=new StaticMemberProcessor(position){
    @NotNull @Override protected LookupElement createLookupElement(    @NotNull PsiMember member,    @NotNull PsiClass containingClass,    boolean shouldImport){
      if (member instanceof PsiMethod) {
        return new JavaGlobalMemberLookupElement((PsiMethod)member,containingClass,QUALIFIED_METHOD_INSERT_HANDLER,STATIC_IMPORT_INSERT_HANDLER,shouldImport);
      }
      return GroovyCompletionUtil.getLookupElement(member);
    }
  }
;
  final PsiFile file=position.getContainingFile();
  if (file instanceof GroovyFile) {
    for (    GrImportStatement statement : ((GroovyFile)file).getImportStatements()) {
      if (statement.isStatic()) {
        GrCodeReferenceElement importReference=statement.getImportReference();
        if (importReference != null) {
          if (!statement.isOnDemand()) {
            importReference=importReference.getQualifier();
          }
          if (importReference != null) {
            final PsiElement target=importReference.resolve();
            if (target instanceof PsiClass) {
              processor.importMembersOf((PsiClass)target);
            }
          }
        }
      }
    }
  }
  return processor;
}
