{
  final StaticMemberProcessor processor=completeStaticMembers(parameters);
  processor.processMembersOfRegisteredClasses(matcher,new PairConsumer<PsiMember,PsiClass>(){
    @Override public void consume(    PsiMember member,    PsiClass psiClass){
      if (member instanceof GrAccessorMethod) {
        member=((GrAccessorMethod)member).getProperty();
      }
      member=CompletionUtil.getOriginalOrSelf(member);
      if (staticMembers.containsKey(member)) {
        return;
      }
      final String name=member.getName();
      if (name == null || !matcher.prefixMatches(name)) {
        staticMembers.remove(member);
        return;
      }
      JavaGlobalMemberLookupElement element=createGlobalMemberElement(member,psiClass,true);
      staticMembers.put(member,element);
      consumer.consume(element);
    }
  }
);
  if (parameters.getInvocationCount() >= 2 && StringUtil.isNotEmpty(matcher.getPrefix())) {
    return new Runnable(){
      @Override public void run(){
        processor.processStaticMethodsGlobally(matcher,new Consumer<LookupElement>(){
          @Override public void consume(          LookupElement element){
            PsiMember member=(PsiMember)element.getObject();
            if (member instanceof GrAccessorMethod) {
              member=((GrAccessorMethod)member).getProperty();
            }
            member=CompletionUtil.getOriginalOrSelf(member);
            if (staticMembers.containsKey(member)) {
              return;
            }
            staticMembers.put(member,element);
            consumer.consume(element);
          }
        }
);
      }
    }
;
  }
  return EmptyRunnable.INSTANCE;
}
