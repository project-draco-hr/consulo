{
  if (!InheritorsGetter.hasAccessibleConstructor(type))   return;
  final PsiClass psiClass=PsiUtil.resolveClassInType(type);
  if (psiClass == null)   return;
  if (psiClass.isInterface() || psiClass.hasModifierProperty(PsiModifier.ABSTRACT))   return;
  final LookupItem item=LookupItemUtil.objectToLookupItem(JavaCompletionUtil.eliminateWildcards(type));
  item.setAttribute(LookupItem.DONT_CHECK_FOR_INNERS,"");
  JavaAwareCompletionData.setShowFQN(item);
  PsiMethod[] constructors=psiClass.getConstructors();
  final PsiResolveHelper resolveHelper=JavaPsiFacade.getInstance(psiClass.getProject()).getResolveHelper();
  boolean hasParams=ContainerUtil.or(constructors,new Condition<PsiMethod>(){
    public boolean value(    PsiMethod psiMethod){
      if (!resolveHelper.isAccessible(psiMethod,place,null)) {
        return false;
      }
      return psiMethod.getParameterList().getParametersCount() > 0;
    }
  }
);
  if (hasParams) {
    item.setInsertHandler(ParenthesesInsertHandler.WITH_PARAMETERS);
  }
 else {
    item.setInsertHandler(ParenthesesInsertHandler.NO_PARAMETERS);
  }
  result.addElement(item);
}
