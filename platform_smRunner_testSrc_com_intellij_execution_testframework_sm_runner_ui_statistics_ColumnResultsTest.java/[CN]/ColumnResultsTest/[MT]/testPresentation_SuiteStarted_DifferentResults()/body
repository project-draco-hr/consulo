{
  mySuite.setStarted();
  final SMTestProxy passedTest1=createTestProxy(mySuite);
  final SMTestProxy passedTest2=createTestProxy(mySuite);
  final SMTestProxy passedTest3=createTestProxy(mySuite);
  final SMTestProxy failedTest=createTestProxy(mySuite);
  final SMTestProxy errorTest1=createTestProxy(mySuite);
  final SMTestProxy errorTest2=createTestProxy(mySuite);
  final SMTestProxy inProgressTest=createTestProxy(mySuite);
  doRender(mySuite);
  assertEmpty(myFragmentsContainer.getFragments());
  passedTest1.setStarted();
  passedTest1.setFinished();
  passedTest2.setStarted();
  passedTest2.setFinished();
  passedTest3.setStarted();
  passedTest3.setFinished();
  failedTest.setStarted();
  failedTest.setTestFailed("","",false);
  failedTest.setFinished();
  errorTest1.setStarted();
  errorTest1.setTestFailed("","",true);
  errorTest1.setFinished();
  errorTest2.setStarted();
  errorTest2.setTestFailed("","",true);
  errorTest2.setFinished();
  inProgressTest.setStarted();
  doRender(mySuite);
  assertFragmentsSize(3);
  assertEquals(TestsPresentationUtil.DEFFECT_ATTRIBUTES,myFragmentsContainer.getAttribsAt(0));
  assertEquals("F:1 ",myFragmentsContainer.getTextAt(0));
  assertEquals(TestsPresentationUtil.DEFFECT_ATTRIBUTES,myFragmentsContainer.getAttribsAt(1));
  assertEquals("E:2 ",myFragmentsContainer.getTextAt(1));
  assertEquals(TestsPresentationUtil.PASSED_ATTRIBUTES,myFragmentsContainer.getAttribsAt(2));
  assertEquals("P:3",myFragmentsContainer.getTextAt(2));
}
