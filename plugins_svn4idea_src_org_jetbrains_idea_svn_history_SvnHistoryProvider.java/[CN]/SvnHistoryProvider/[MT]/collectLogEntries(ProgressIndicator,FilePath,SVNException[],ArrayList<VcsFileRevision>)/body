{
  SVNWCClient wcClient=myVcs.createWCClient();
  SVNInfo info=wcClient.doInfo(new File(file.getIOFile().getAbsolutePath()),SVNRevision.WORKING);
  if (info == null) {
    exception[0]=new SVNException(SVNErrorMessage.create(SVNErrorCode.UNKNOWN,"File ''{0}'' is not under version control",file.getIOFile()));
    return;
  }
  final String url=info.getURL() == null ? null : info.getURL().toString();
  if (indicator != null) {
    indicator.setText2(SvnBundle.message("progress.text2.changes.establishing.connection",url));
  }
  final SVNRevision pegRevision=info.getRevision();
  SVNLogClient client=myVcs.createLogClient();
  client.doLog(new File[]{new File(file.getIOFile().getAbsolutePath())},SVNRevision.HEAD,SVNRevision.create(1),false,false,0,new ISVNLogEntryHandler(){
    public void handleLogEntry(    SVNLogEntry logEntry){
      if (indicator != null) {
        indicator.setText2(SvnBundle.message("progress.text2.revision.processed",logEntry.getRevision()));
      }
      Date date=logEntry.getDate();
      String author=logEntry.getAuthor();
      String message=logEntry.getMessage();
      SVNRevision rev=SVNRevision.create(logEntry.getRevision());
      result.add(new SvnFileRevision(myVcs,pegRevision,rev,url,author,date,message));
    }
  }
);
}
