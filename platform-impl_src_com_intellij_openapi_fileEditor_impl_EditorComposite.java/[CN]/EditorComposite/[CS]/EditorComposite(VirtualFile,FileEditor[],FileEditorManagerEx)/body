{
  myFile=file;
  myEditors=editors;
  myFileEditorManager=fileEditorManager;
  myInitialFileTimeStamp=myFile.getTimeStamp();
  myInitialFileModificationStamp=myFile.getModificationStamp();
  if (editors.length > 1) {
    final TabbedPaneWrapper wrapper=new TabbedPaneWrapper(SwingConstants.BOTTOM,false);
    myTabbedPaneWrapper=wrapper;
    myComponent=new MyComponent(wrapper.getComponent()){
      public boolean requestFocusInWindow(){
        return wrapper.getComponent().requestFocusInWindow();
      }
      public void requestFocus(){
        wrapper.getComponent().requestFocus();
      }
      public boolean requestDefaultFocus(){
        return wrapper.getComponent().requestDefaultFocus();
      }
    }
;
    for (    FileEditor editor : editors) {
      wrapper.addTab(editor.getName(),createEditorComponent(editor));
    }
    myTabbedPaneWrapper.addChangeListener(new MyChangeListener());
  }
 else   if (editors.length == 1) {
    myTabbedPaneWrapper=null;
    myComponent=new MyComponent(createEditorComponent(editors[0])){
      public void requestFocus(){
        JComponent component=editors[0].getPreferredFocusedComponent();
        if (component != null) {
          component.requestFocus();
        }
      }
      public boolean requestFocusInWindow(){
        JComponent component=editors[0].getPreferredFocusedComponent();
        if (component != null) {
          return component.requestFocusInWindow();
        }
        return false;
      }
      public boolean requestDefaultFocus(){
        JComponent component=editors[0].getPreferredFocusedComponent();
        if (component != null) {
          return component.requestDefaultFocus();
        }
        return false;
      }
    }
;
  }
 else {
    throw new IllegalArgumentException("editors array cannot be empty");
  }
  mySelectedEditor=editors[0];
  myFocusWatcher=new FocusWatcher();
  myFocusWatcher.install(myComponent);
}
