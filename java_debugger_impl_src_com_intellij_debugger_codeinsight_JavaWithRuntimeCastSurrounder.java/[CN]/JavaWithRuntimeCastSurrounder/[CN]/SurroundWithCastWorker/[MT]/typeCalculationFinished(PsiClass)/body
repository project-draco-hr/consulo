{
  if (type == null) {
    return;
  }
  hold();
  final Project project=myElement.getProject();
  DebuggerInvocationUtil.invokeLater(project,new Runnable(){
    public void run(){
      new WriteCommandAction(project,CodeInsightBundle.message("command.name.surround.with.runtime.cast")){
        protected void run(        Result result) throws Throwable {
          try {
            PsiElementFactory factory=JavaPsiFacade.getInstance(myElement.getProject()).getElementFactory();
            PsiParenthesizedExpression parenth=(PsiParenthesizedExpression)factory.createExpressionFromText("((" + type.getQualifiedName() + ")expr)",null);
            PsiTypeCastExpression cast=(PsiTypeCastExpression)parenth.getExpression();
            cast.getOperand().replace(myElement);
            parenth=(PsiParenthesizedExpression)JavaCodeStyleManager.getInstance(project).shortenClassReferences(parenth);
            PsiExpression expr=(PsiExpression)myElement.replace(parenth);
            TextRange range=expr.getTextRange();
            myEditor.getSelectionModel().setSelection(range.getStartOffset(),range.getEndOffset());
            myEditor.getCaretModel().moveToOffset(range.getEndOffset());
            myEditor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
          }
 catch (          IncorrectOperationException e) {
          }
 finally {
            release();
          }
        }
      }
.execute();
    }
  }
,myProgressIndicator.getModalityState());
}
