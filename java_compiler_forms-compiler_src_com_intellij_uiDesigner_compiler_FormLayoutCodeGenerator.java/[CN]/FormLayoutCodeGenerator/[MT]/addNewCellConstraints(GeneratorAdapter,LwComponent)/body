{
  final GridConstraints constraints=lwComponent.getConstraints();
  final CellConstraints cc=(CellConstraints)lwComponent.getCustomLayoutConstraints();
  generator.newInstance(ourCellConstraintsType);
  generator.dup();
  generator.push(constraints.getColumn() + 1);
  generator.push(constraints.getRow() + 1);
  generator.push(constraints.getColSpan());
  generator.push(constraints.getRowSpan());
  if (cc.hAlign == CellConstraints.DEFAULT) {
    generator.getStatic(ourCellConstraintsType,"DEFAULT",ourCellAlignmentType);
  }
 else {
    int hAlign=Utils.alignFromConstraints(constraints,true);
    generator.getStatic(ourCellConstraintsType,HORZ_ALIGN_FIELDS[hAlign],ourCellAlignmentType);
  }
  if (cc.vAlign == CellConstraints.DEFAULT) {
    generator.getStatic(ourCellConstraintsType,"DEFAULT",ourCellAlignmentType);
  }
 else {
    int vAlign=Utils.alignFromConstraints(constraints,false);
    generator.getStatic(ourCellConstraintsType,VERT_ALIGN_FIELDS[vAlign],ourCellAlignmentType);
  }
  AsmCodeGenerator.pushPropValue(generator,Insets.class.getName(),cc.insets);
  generator.invokeConstructor(ourCellConstraintsType,ourCellConstraintsConstructor);
}
