{
  try {
    if (ourVelocityInitialized) {
      return;
    }
    File modifiedPatternsPath=new File(PathManager.getConfigPath());
    modifiedPatternsPath=new File(modifiedPatternsPath,"fileTemplates");
    modifiedPatternsPath=new File(modifiedPatternsPath,"includes");
    LogSystem emptyLogSystem=new LogSystem(){
      public void init(      RuntimeServices runtimeServices) throws Exception {
      }
      public void logVelocityMessage(      int i,      String s){
      }
    }
;
    Velocity.setProperty(RuntimeConstants.RUNTIME_LOG_LOGSYSTEM,emptyLogSystem);
    Velocity.setProperty(RuntimeConstants.RESOURCE_LOADER,"file,class");
    Velocity.setProperty(FILE_RESOURCE_LOADER_INSTANCE,new FileResourceLoader());
    Velocity.setProperty("class.resource.loader.class",MyClasspathResourceLoader.class.getName());
    Velocity.setProperty(RuntimeConstants.FILE_RESOURCE_LOADER_PATH,modifiedPatternsPath.getAbsolutePath());
    Velocity.setProperty(RuntimeConstants.INPUT_ENCODING,FileTemplate.ourEncoding);
    Velocity.setProperty(RuntimeConstants.PARSER_POOL_SIZE,3);
    Velocity.init();
    ourVelocityInitialized=true;
  }
 catch (  Exception e) {
    LOG.error("Unable to init Velocity",e);
  }
}
