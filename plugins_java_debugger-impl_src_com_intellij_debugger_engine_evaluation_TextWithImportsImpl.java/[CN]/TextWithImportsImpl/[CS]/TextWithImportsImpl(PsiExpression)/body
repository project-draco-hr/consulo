{
  myKind=CodeFragmentKind.EXPRESSION;
  final String text=expression.getText();
  PsiFile containingFile=expression.getContainingFile();
  if (containingFile instanceof PsiExpressionCodeFragment) {
    myText=text;
    myImports=((JavaCodeFragment)containingFile).importsToString();
    myFileType=StdFileTypes.JAVA;
  }
 else {
    Trinity<String,String,FileType> trinity=parseExternalForm(text);
    myText=trinity.first;
    myImports=trinity.second;
    myFileType=trinity.third;
  }
}
