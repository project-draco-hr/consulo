{
  Grid gridPanel=GwtUIUtil.fillAndReturn(new MainGrid(this,1,2));
  gridPanel.getColumnFormatter().getElement(1).getStyle().setWidth(100,Style.Unit.PCT);
  gridPanel.getRowFormatter().setVerticalAlign(0,HasVerticalAlignment.ALIGN_TOP);
  myGutterPanel=GwtUIUtil.fillAndReturn(new GutterPanel(myLineCount,this));
  gridPanel.setWidget(0,0,myGutterPanel);
  myGutterPanel.addStyleName("noselectable");
  for (int i=0; i < myLineCount; i++) {
    final GutterLineGrid panel=GwtUIUtil.fillAndReturn(new GutterLineGrid(1,2,this,i));
    panel.updateUI();
    panel.getCellFormatter().setHorizontalAlignment(0,0,HasHorizontalAlignment.ALIGN_RIGHT);
    panel.getCellFormatter().getElement(0,0).getStyle().setPaddingLeft(5,Style.Unit.PX);
    panel.getCellFormatter().getElement(0,1).getStyle().setPaddingRight(5,Style.Unit.PX);
    panel.getCellFormatter().getElement(0,1).addClassName("editorLine");
    panel.getColumnFormatter().getElement(0).getStyle().setWidth(100,Style.Unit.PCT);
    LineNumberSpan lineSpan=new LineNumberSpan(String.valueOf(i + 1),this);
    lineSpan.addStyleName("editorLine");
    panel.setWidget(0,0,lineSpan);
    myGutterPanel.set(i,panel);
  }
  Grid editorCodePanel=new Grid(myLineCount,1){
{
      sinkEvents(Event.ONCHANGE | Event.ONPASTE | Event.KEYEVENTS);
    }
    @Override public void onBrowserEvent(    Event event){
      int type=DOM.eventGetType(event);
switch (type) {
case Event.ONKEYDOWN:
switch (event.getKeyCode()) {
case KeyCodes.KEY_B:
          if (event.getCtrlKey()) {
            GwtUtil.rpc().getNavigationInfo(myFileUrl,myLastCaretOffset,new ReportableCallable<GwtNavigateInfo>(){
              @Override public void onSuccess(              GwtNavigateInfo result){
                if (result == null) {
                  return;
                }
                GwtNavigatable navigatable=result.getNavigates().get(0);
                myEditorTabPanel.openFileInEditor(navigatable.getFile(),navigatable.getOffset());
              }
            }
);
          }
        break;
    }
  break;
}
event.preventDefault();
}
}
;
gridPanel.setWidget(0,1,editorCodePanel);
editorCodePanel.getElement().setAttribute("spellcheck","false");
editorCodePanel.getElement().setAttribute("contenteditable","true");
editorCodePanel.addStyleName("noFocusBorder");
int lineCount=0;
CodeLinePanel lineElement=null;
int startOffset=0;
for (EditorSegmentBuilder.CharSpan fragment : myBuilder.getFragments()) {
if (lineElement == null) {
lineElement=new CodeLinePanel(this,lineCount);
setDefaultTextColors(lineElement);
lineElement.setWidth("100%");
lineElement.addStyleName("editorLine");
startOffset=fragment.range.getStartOffset();
}
lineElement.add(fragment);
if (fragment.lineWrap) {
editorCodePanel.getCellFormatter().getElement(lineCount,0).getStyle().setPaddingLeft(5,Style.Unit.PX);
editorCodePanel.setWidget(lineCount,0,lineElement);
lineElement.getElement().setPropertyObject("lineRange",new GwtTextRange(startOffset,fragment.range.getEndOffset()));
lineElement.updateUI();
lineElement=null;
lineCount++;
}
}
return gridPanel;
}
