{
switch (DOM.eventGetType(event)) {
case Event.ONMOUSEOVER:
    com.google.gwt.dom.client.Element element=DOM.eventGetToElement(event);
  Object range=element == null ? null : element.getPropertyObject("range");
if (!(range instanceof GwtTextRange)) {
  myLastCaretOffset=-1;
  return;
}
int startOffset=((GwtTextRange)range).getStartOffset();
if (startOffset == myLastCaretOffset) {
return;
}
myLastCaretOffset=startOffset;
if (event.getCtrlKey()) {
getElement().getStyle().setCursor(Style.Cursor.POINTER);
GwtUtil.rpc().getNavigationInfo(myFileUrl,myLastCaretOffset,new ReportableCallable<GwtNavigateInfo>(){
@Override public void onSuccess(GwtNavigateInfo result){
if (result == null) {
return;
}
event.getRelatedEventTarget();
GwtTextRange resultElementRange=result.getRange();
if (myLastCursorPsiElementTextRange != null && myLastCursorPsiElementTextRange.containsRange(resultElementRange)) {
return;
}
myLastCursorPsiElementTextRange=resultElementRange;
GwtHighlightInfo highlightInfo=new GwtHighlightInfo(myScheme.getAttributes(GwtEditorColorScheme.HYPERLINK_ATTRIBUTES),resultElementRange,Integer.MAX_VALUE);
myLastNavigationInfo=result;
addHighlightInfos(Arrays.asList(highlightInfo),ourSelectFlag);
}
}
);
}
event.preventDefault();
break;
case Event.ONMOUSEOUT:
onMouseOut();
event.preventDefault();
break;
case Event.ONCLICK:
if (event.getCtrlKey()) {
if (myLastNavigationInfo != null) {
List<GwtNavigatable> navigates=myLastNavigationInfo.getNavigates();
GwtNavigatable navigatable=navigates.get(0);
onMouseOut();
myEditorTabPanel.openFileInEditor(navigatable.getFile(),navigatable.getOffset());
}
}
 else {
if (myCaretHandler != null) {
myCaretHandler.caretPlaced(myLastCaretOffset);
}
}
event.preventDefault();
break;
default :
super.onBrowserEvent(event);
break;
}
}
