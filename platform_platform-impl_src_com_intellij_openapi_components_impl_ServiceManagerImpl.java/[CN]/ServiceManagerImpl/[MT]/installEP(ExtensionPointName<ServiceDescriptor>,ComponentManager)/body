{
  myExtensionPointName=pointName;
  final ExtensionPoint<ServiceDescriptor> extensionPoint=Extensions.getArea(null).getExtensionPoint(pointName);
  final MutablePicoContainer picoContainer=(MutablePicoContainer)componentManager.getPicoContainer();
  myExtensionPointListener=new ExtensionPointListener<ServiceDescriptor>(){
    @Override public void extensionAdded(    @NotNull final ServiceDescriptor descriptor,    final PluginDescriptor pluginDescriptor){
      if (descriptor.overrides) {
        ComponentAdapter oldAdapter=picoContainer.unregisterComponent(descriptor.getInterface());
        if (oldAdapter == null) {
          throw new RuntimeException("Service: " + descriptor.getInterface() + " doesn't override anything");
        }
 else {
          LOGGER.error("`overrides` attribute will later deleted. Require api change. Interface: " + descriptor.getInterface() + ". Plugin: "+ pluginDescriptor.getPluginId());
        }
      }
      picoContainer.registerComponent(new MyComponentAdapter(descriptor,pluginDescriptor,(ComponentManagerEx)componentManager));
    }
    @Override public void extensionRemoved(    @NotNull final ServiceDescriptor extension,    final PluginDescriptor pluginDescriptor){
      picoContainer.unregisterComponent(extension.getInterface());
    }
  }
;
  extensionPoint.addExtensionPointListener(myExtensionPointListener);
}
