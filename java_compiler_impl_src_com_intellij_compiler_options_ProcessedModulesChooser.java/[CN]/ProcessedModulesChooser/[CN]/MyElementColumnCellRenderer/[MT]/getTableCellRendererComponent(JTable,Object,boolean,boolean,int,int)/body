{
  final Color color=UIUtil.getTableFocusCellBackground();
  Component component;
  Module module=(Module)value;
  try {
    UIManager.put(UIUtil.TABLE_FOCUS_CELL_BACKGROUND_PROPERTY,table.getSelectionBackground());
    component=super.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
    setText(module != null ? module.getName() + " (" + FileUtil.toSystemDependentName(module.getModuleFilePath())+ ")" : "");
    if (component instanceof JLabel) {
      ((JLabel)component).setBorder(noFocusBorder);
    }
  }
  finally {
    UIManager.put(UIUtil.TABLE_FOCUS_CELL_BACKGROUND_PROPERTY,color);
  }
  final MyTableModel model=(MyTableModel)table.getModel();
  component.setEnabled(ProcessedModulesChooser.this.isEnabled() && (myColorUnmarkedElements ? model.isElementMarked(row) : true));
  if (component instanceof JLabel) {
    final Icon icon=module != null ? module.getModuleType().getNodeIcon(false) : null;
    JLabel label=(JLabel)component;
    label.setIcon(icon);
    label.setDisabledIcon(icon);
  }
  component.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground());
  return component;
}
