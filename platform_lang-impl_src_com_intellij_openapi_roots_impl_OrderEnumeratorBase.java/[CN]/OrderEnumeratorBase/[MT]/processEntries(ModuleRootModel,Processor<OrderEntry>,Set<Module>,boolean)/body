{
  if (processed != null && !processed.add(rootModel.getModule()))   return;
  for (  OrderEntry entry : rootModel.getOrderEntries()) {
    if (myCondition != null && !myCondition.value(entry))     continue;
    if (mySettings.withoutJdk && entry instanceof JdkOrderEntry)     continue;
    if (mySettings.withoutLibraries && entry instanceof LibraryOrderEntry)     continue;
    if (mySettings.withoutDepModules) {
      if (!mySettings.recursively && entry instanceof ModuleOrderEntry)       continue;
      if (entry instanceof ModuleSourceOrderEntry && !isRootModuleModel(((ModuleSourceOrderEntry)entry).getRootModel()))       continue;
    }
    if (mySettings.withoutModuleSourceEntries && entry instanceof ModuleSourceOrderEntry)     continue;
    OrderEnumerationHandler.AddDependencyType shouldAdd=OrderEnumerationHandler.AddDependencyType.DEFAULT;
    for (    OrderEnumerationHandler handler : myCustomHandlers) {
      shouldAdd=handler.shouldAddDependency(entry,mySettings);
      if (shouldAdd != OrderEnumerationHandler.AddDependencyType.DEFAULT)       break;
    }
    if (shouldAdd == OrderEnumerationHandler.AddDependencyType.DO_NOT_ADD)     continue;
    boolean exported=!(entry instanceof JdkOrderEntry);
    if (entry instanceof ExportableOrderEntry) {
      ExportableOrderEntry exportableEntry=(ExportableOrderEntry)entry;
      if (shouldAdd == OrderEnumerationHandler.AddDependencyType.DEFAULT) {
        final DependencyScope scope=exportableEntry.getScope();
        if (mySettings.compileOnly && !scope.isForProductionCompile() && !scope.isForTestCompile())         continue;
        if (mySettings.runtimeOnly && !scope.isForProductionRuntime() && !scope.isForTestRuntime())         continue;
        if (mySettings.productionOnly) {
          if (!scope.isForProductionCompile() && !scope.isForProductionRuntime() || mySettings.compileOnly && !scope.isForProductionCompile() || mySettings.runtimeOnly && !scope.isForProductionRuntime()) {
            continue;
          }
        }
      }
      exported=exportableEntry.isExported();
    }
    if (!exported) {
      if (mySettings.exportedOnly)       continue;
      if (mySettings.recursivelyExportedOnly && !firstLevel)       continue;
    }
    if (mySettings.recursively && entry instanceof ModuleOrderEntry) {
      ModuleOrderEntry moduleOrderEntry=(ModuleOrderEntry)entry;
      final Module module=moduleOrderEntry.getModule();
      if (module != null) {
        boolean processRecursively=true;
        for (        OrderEnumerationHandler handler : myCustomHandlers) {
          if (!handler.shouldProcessRecursively(moduleOrderEntry)) {
            processRecursively=false;
            break;
          }
        }
        if (processRecursively) {
          processEntries(getRootModel(module),processor,processed,false);
          continue;
        }
      }
    }
    if (mySettings.withoutDepModules && entry instanceof ModuleOrderEntry)     continue;
    if (!processor.process(entry)) {
      return;
    }
  }
}
