{
  PsiType type=PsiUtil.getSmartReturnType(method);
  if (type instanceof PsiClassType) {
    PsiClass clazz=((PsiClassType)type).resolve();
    if (clazz != null && CommonClassNames.JAVA_LANG_CLASS.equals(clazz.getQualifiedName())) {
      PsiTypeParameter[] typeParameters=clazz.getTypeParameters();
      if (typeParameters.length == 1) {
        return TypesUtil.createJavaLangClassType(getQualifierType(),getProject(),getResolveScope());
      }
    }
  }
  return type;
}
