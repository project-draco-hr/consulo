{
  String name=getReferenceName();
  if (name == null)   return GroovyResolveResult.EMPTY_ARRAY;
  if (incompleteCode) {
    ResolverProcessor processor=CompletionProcessor.createRefSameNameProcessor(this,name);
    GrReferenceResolveUtil.resolveImpl(processor,this);
    GroovyResolveResult[] propertyCandidates=processor.getCandidates();
    if (propertyCandidates.length > 0)     return propertyCandidates;
  }
  try {
    ResolveProfiler.start();
switch (getKind()) {
case METHOD_OR_PROPERTY:
      return resolveMethodOrProperty(false,null,genericsMatter);
case TYPE_OR_PROPERTY:
    return resolveTypeOrProperty();
case METHOD_OR_PROPERTY_OR_TYPE:
  GroovyResolveResult[] results=resolveMethodOrProperty(false,null,genericsMatter);
if (results.length == 0) results=resolveTypeOrProperty();
return results;
default :
return GroovyResolveResult.EMPTY_ARRAY;
}
}
  finally {
final long time=ResolveProfiler.finish();
ResolveProfiler.write("ref " + getText() + " "+ hashCode()+ " : "+ time);
}
}
