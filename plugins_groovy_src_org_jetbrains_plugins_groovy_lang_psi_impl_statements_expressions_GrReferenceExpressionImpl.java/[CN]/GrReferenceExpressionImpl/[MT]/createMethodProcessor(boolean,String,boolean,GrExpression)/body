{
  final PsiType[] argTypes=PsiUtil.getArgumentTypes(this,false,upToArgument);
  if (byShape && argTypes != null) {
    for (int i=0; i < argTypes.length; i++) {
      argTypes[i]=TypeConversionUtil.erasure(argTypes[i]);
    }
  }
  PsiType thisType=getThisType();
  return new MethodResolverProcessor(name,this,false,thisType,argTypes,getTypeArguments(),allVariants){
    @Override protected PsiSubstitutor obtainSubstitutor(    PsiSubstitutor substitutor,    PsiMethod method,    ResolveState state){
      return byShape ? substitutor : super.obtainSubstitutor(substitutor,method,state);
    }
  }
;
}
