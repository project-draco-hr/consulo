{
  PsiType type=PsiUtil.getSmartReturnType(method);
  if (type instanceof PsiClassType) {
    PsiClass clazz=((PsiClassType)type).resolve();
    if (clazz != null && CommonClassNames.JAVA_LANG_CLASS.equals(clazz.getQualifiedName())) {
      PsiTypeParameter[] typeParameters=clazz.getTypeParameters();
      if (typeParameters.length == 1) {
        PsiClass qualifierClass=null;
        GrExpression qualifier=getQualifierExpression();
        if (qualifier != null) {
          PsiType qualifierType=qualifier.getType();
          if (qualifierType instanceof PsiClassType) {
            qualifierClass=((PsiClassType)qualifierType).resolve();
          }
        }
 else {
          PsiNamedElement context=PsiTreeUtil.getParentOfType(this,PsiClass.class,GroovyFile.class);
          if (context instanceof PsiClass)           qualifierClass=(PsiClass)context;
 else           if (context instanceof GroovyFile)           qualifierClass=((GroovyFile)context).getScriptClass();
        }
        PsiSubstitutor substitutor=PsiSubstitutor.EMPTY;
        if (qualifierClass != null) {
          PsiType t=facade.getElementFactory().createType(qualifierClass);
          substitutor=substitutor.put(typeParameters[0],t);
        }
        return facade.getElementFactory().createType(clazz,substitutor);
      }
    }
  }
  return type;
}
