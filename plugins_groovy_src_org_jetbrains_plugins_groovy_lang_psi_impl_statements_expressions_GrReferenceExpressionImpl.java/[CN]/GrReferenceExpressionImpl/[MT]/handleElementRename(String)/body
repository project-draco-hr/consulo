{
  final PsiElement resolved=resolve();
  if (resolved instanceof PsiMethod) {
    final PsiMethod method=(PsiMethod)resolved;
    final String oldName=getReferenceName();
    if (!method.getName().equals(oldName)) {
      if (GroovyPropertyUtils.isSimplePropertyAccessor(method)) {
        final String newPropertyName=GroovyPropertyUtils.getPropertyNameByAccessorName(newElementName);
        if (newPropertyName != null && newPropertyName.length() > 0) {
          return handleElementRenameInner(newPropertyName);
        }
 else {
          if (GroovyPropertyUtils.isSimplePropertyGetter(method)) {
            final PsiElement qualifier=getQualifier();
            String qualifierText=qualifier != null ? qualifier.getText() + '.' : "";
            final GrMethodCallExpression replaced=(GrMethodCallExpression)replace(GroovyPsiElementFactory.getInstance(getProject()).createExpressionFromText(qualifierText + newElementName + "()"));
            return replaced.getInvokedExpression();
          }
 else {
            final PsiElement parent=getParent();
            if (parent instanceof GrAssignmentExpression) {
              final PsiElement qualifier=getQualifier();
              String qualifierText=qualifier != null ? qualifier.getText() + '.' : "";
              final GrExpression rValue=((GrAssignmentExpression)parent).getRValue();
              String rValueText=rValue != null ? rValue.getText() : "";
              final GrMethodCallExpression replaced=((GrMethodCallExpression)parent.replace(GroovyPsiElementFactory.getInstance(getProject()).createExpressionFromText(qualifierText + newElementName + "("+ rValueText+ ")")));
              return replaced.getInvokedExpression();
            }
          }
        }
      }
    }
  }
 else   if (resolved instanceof GrField && ((GrField)resolved).isProperty()) {
    final GrField field=(GrField)resolved;
    final String oldName=getReferenceName();
    if (oldName != null && !oldName.equals(field.getName())) {
      if (oldName.startsWith("get")) {
        return handleElementRenameInner("get" + StringUtil.capitalize(newElementName));
      }
 else       if (oldName.startsWith("set")) {
        return handleElementRenameInner("set" + StringUtil.capitalize(newElementName));
      }
    }
  }
  return handleElementRenameInner(newElementName);
}
