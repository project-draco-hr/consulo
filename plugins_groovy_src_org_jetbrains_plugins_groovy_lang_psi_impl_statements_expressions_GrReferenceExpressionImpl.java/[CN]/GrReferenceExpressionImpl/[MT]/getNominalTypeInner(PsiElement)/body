{
  if (resolved == null && !"class".equals(getReferenceName())) {
    resolved=resolve();
  }
  if (resolved instanceof PsiClass) {
    final PsiElementFactory factory=JavaPsiFacade.getInstance(getProject()).getElementFactory();
    if (getParent() instanceof GrReferenceExpression) {
      return factory.createType((PsiClass)resolved);
    }
 else {
      return TypesUtil.createJavaLangClassType(factory.createType((PsiClass)resolved),getProject(),getResolveScope());
    }
  }
  if (resolved instanceof GrVariable) {
    return ((GrVariable)resolved).getDeclaredType();
  }
  if (resolved instanceof PsiVariable) {
    return ((PsiVariable)resolved).getType();
  }
  if (resolved instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)resolved;
    if (PropertyUtil.isSimplePropertySetter(method) && !method.getName().equals(getReferenceName())) {
      return method.getParameterList().getParameters()[0].getType();
    }
    PsiClass containingClass=method.getContainingClass();
    if (containingClass != null && CommonClassNames.JAVA_LANG_OBJECT.equals(containingClass.getQualifiedName()) && "getClass".equals(method.getName())) {
      return TypesUtil.createJavaLangClassType(getQualifierType(),getProject(),getResolveScope());
    }
    return PsiUtil.getSmartReturnType(method);
  }
  if (resolved instanceof GrReferenceExpression) {
    PsiElement parent=resolved.getParent();
    if (parent instanceof GrAssignmentExpression) {
      GrAssignmentExpression assignment=(GrAssignmentExpression)parent;
      if (resolved.equals(assignment.getLValue())) {
        GrExpression rValue=assignment.getRValue();
        if (rValue != null) {
          PsiType rType=rValue.getType();
          if (rType != null) {
            return rType;
          }
        }
      }
    }
  }
  if (resolved == null) {
    if ("class".equals(getReferenceName())) {
      return TypesUtil.createJavaLangClassType(getQualifierType(),getProject(),getResolveScope());
    }
    GrExpression qualifier=getQualifierExpression();
    if (qualifier != null) {
      PsiType qType=qualifier.getType();
      if (qType instanceof PsiClassType) {
        PsiClassType.ClassResolveResult qResult=((PsiClassType)qType).resolveGenerics();
        PsiClass clazz=qResult.getElement();
        if (clazz != null) {
          PsiClass mapClass=JavaPsiFacade.getInstance(getProject()).findClass(CommonClassNames.JAVA_UTIL_MAP,getResolveScope());
          if (mapClass != null && mapClass.getTypeParameters().length == 2) {
            PsiSubstitutor substitutor=TypeConversionUtil.getClassSubstitutor(mapClass,clazz,qResult.getSubstitutor());
            if (substitutor != null) {
              return TypeConversionUtil.erasure(substitutor.substitute(mapClass.getTypeParameters()[1]));
            }
          }
        }
      }
    }
  }
  return null;
}
