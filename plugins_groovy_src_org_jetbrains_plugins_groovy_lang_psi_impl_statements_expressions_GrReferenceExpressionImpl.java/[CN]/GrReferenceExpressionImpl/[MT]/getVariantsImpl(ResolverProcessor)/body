{
  GrExpression qualifierExpression=getQualifierExpression();
  PsiClass qualifierClass=null;
  if (qualifierExpression == null) {
    ResolveUtil.treeWalkUp(this,processor);
  }
 else {
    PsiType qualifierType=qualifierExpression.getType();
    if (qualifierType instanceof PsiClassType) {
      qualifierClass=((PsiClassType)qualifierType).resolve();
      if (qualifierClass != null) {
        qualifierClass.processDeclarations(processor,PsiSubstitutor.EMPTY,null,this);
      }
    }
  }
  GroovyResolveResult[] candidates=processor.getCandidates();
  if (candidates.length == 0)   return PsiNamedElement.EMPTY_ARRAY;
  Object[] elements=ResolveUtil.mapToElements(candidates);
  if (qualifierClass != null && !(qualifierClass instanceof GrTypeDefinition)) {
    List<PsiMethod> groovyDefaults=new ArrayList<PsiMethod>();
    addDefaultMethods(qualifierClass,groovyDefaults,new HashSet<PsiClass>());
    if (groovyDefaults.size() > 0) {
      PsiMethod[] defaultMethods=groovyDefaults.toArray(new PsiMethod[groovyDefaults.size()]);
      return ArrayUtil.mergeArrays(elements,defaultMethods,Object.class);
    }
  }
  return elements;
}
