{
  if (allVariants) {
    return doResolveByShape(allVariants,upToArgument);
  }
  LOG.assertTrue(upToArgument == null);
  return TypeInferenceHelper.getCurrentContext().getCachedValue(this,new NullableComputable<Pair<Boolean,GroovyResolveResult[]>>(){
    @Override public Pair<Boolean,GroovyResolveResult[]> compute(){
      return doResolveByShape(false,null);
    }
  }
);
}
