{
  return RecursionManager.doPreventingRecursion(resolved,false,new NullableComputable<PsiType>(){
    @Override public PsiType compute(){
      final GrControlFlowOwner flowOwner=ControlFlowUtils.findControlFlowOwner(resolved);
      final Collection<PsiReference> all=ReferencesSearch.search(resolved,resolved.getResolveScope()).findAll();
      boolean hasClosureReassigns=false;
      for (      PsiReference reference : all) {
        final PsiElement ref=reference.getElement();
        if (ref instanceof GrReferenceExpression && PsiUtil.isLValue(((GrReferenceExpression)ref)) && ControlFlowUtils.findControlFlowOwner(ref) != flowOwner) {
          hasClosureReassigns=true;
          break;
        }
      }
      if (!hasClosureReassigns) {
        return null;
      }
      PsiType result=null;
      final PsiManager manager=resolved.getManager();
      for (      PsiReference reference : all) {
        final PsiElement ref=reference.getElement();
        if (ref instanceof GrReferenceExpression && PsiUtil.isLValue(((GrReferenceExpression)ref))) {
          result=TypesUtil.getLeastUpperBoundNullable(result,TypeInferenceHelper.getInitializerFor(ref),manager);
        }
      }
      return result;
    }
  }
);
}
