{
  if (element instanceof PsiMethod && GroovyPropertyUtils.isSimplePropertyAccessor((PsiMethod)element)) {
    final PsiElement target=resolve();
    if (element instanceof GrAccessorMethod && getManager().areElementsEquivalent(((GrAccessorMethod)element).getProperty(),target)) {
      return true;
    }
    return getManager().areElementsEquivalent(element,target);
  }
  if (element instanceof GrField && ((GrField)element).isProperty()) {
    final PsiElement target=resolve();
    if (getManager().areElementsEquivalent(element,target)) {
      return true;
    }
    for (    final GrAccessorMethod getter : ((GrField)element).getGetters()) {
      if (getManager().areElementsEquivalent(getter,target)) {
        return true;
      }
    }
    return getManager().areElementsEquivalent(((GrField)element).getSetter(),target);
  }
  if (element instanceof PsiNamedElement && Comparing.equal(((PsiNamedElement)element).getName(),getReferenceName())) {
    return getManager().areElementsEquivalent(element,resolve());
  }
  return false;
}
