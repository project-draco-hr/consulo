{
  GrExpression qualifier=getQualifierExpression();
  if (qualifier == null) {
    ResolveUtil.treeWalkUp(this,processor,true);
    if (!processor.hasCandidates()) {
      qualifier=PsiImplUtil.getRuntimeQualifier(this);
      if (qualifier != null) {
        if (!processQualifier(processor,qualifier))         return false;
      }
    }
  }
 else {
    if (getDotTokenType() != GroovyTokenTypes.mSPREAD_DOT) {
      if (!processQualifier(processor,qualifier))       return false;
    }
 else {
      if (!processQualifierForSpreadDot(processor,qualifier))       return false;
    }
    if (qualifier instanceof GrReferenceExpression && "class".equals(((GrReferenceExpression)qualifier).getReferenceName()) || qualifier instanceof GrThisReferenceExpression) {
      return processIfJavaLangClass(processor,qualifier.getType(),qualifier);
    }
  }
  return true;
}
