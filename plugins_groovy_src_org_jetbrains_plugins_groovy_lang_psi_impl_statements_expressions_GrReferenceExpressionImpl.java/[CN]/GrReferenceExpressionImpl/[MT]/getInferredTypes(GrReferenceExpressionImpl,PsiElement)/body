{
  final GrExpression qualifier=refExpr.getQualifier();
  if (qualifier == null && !(resolved instanceof PsiClass || resolved instanceof PsiPackage)) {
    return TypeInferenceHelper.getCurrentContext().getVariableType(refExpr);
  }
 else   if (qualifier != null) {
    PsiType qType=qualifier.getType();
    if (qType instanceof PsiClassType && !(qType instanceof GrMapType)) {
      PsiClassType.ClassResolveResult qResult=((PsiClassType)qType).resolveGenerics();
      PsiClass clazz=qResult.getElement();
      if (clazz != null) {
        PsiClass mapClass=JavaPsiFacade.getInstance(refExpr.getProject()).findClass(CommonClassNames.JAVA_UTIL_MAP,refExpr.getResolveScope());
        if (mapClass != null && mapClass.getTypeParameters().length == 2) {
          PsiSubstitutor substitutor=TypeConversionUtil.getClassSubstitutor(mapClass,clazz,qResult.getSubstitutor());
          if (substitutor != null) {
            return TypeConversionUtil.erasure(substitutor.substitute(mapClass.getTypeParameters()[1]));
          }
        }
      }
    }
  }
  return null;
}
