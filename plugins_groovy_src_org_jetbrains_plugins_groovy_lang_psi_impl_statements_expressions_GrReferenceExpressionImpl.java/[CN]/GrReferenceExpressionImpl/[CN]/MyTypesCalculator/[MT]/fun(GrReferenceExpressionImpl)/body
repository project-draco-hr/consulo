{
  IElementType dotType=refExpr.getDotTokenType();
  PsiElement resolved=refExpr.resolve();
  PsiType result=null;
  PsiManager manager=refExpr.getManager();
  if (resolved instanceof PsiClass) {
    result=manager.getElementFactory().createType((PsiClass)resolved);
  }
 else   if (resolved instanceof GrVariable) {
    result=((GrVariable)resolved).getTypeGroovy();
  }
 else   if (resolved instanceof PsiVariable) {
    result=((PsiVariable)resolved).getType();
  }
 else   if (resolved instanceof PsiMethod) {
    if (dotType == GroovyTokenTypes.mMEMBER_POINTER) {
      return manager.getElementFactory().createTypeByFQClassName("groovy.lang.Closure",refExpr.getResolveScope());
    }
    PsiMethod method=(PsiMethod)resolved;
    if (PropertyUtil.isSimplePropertySetter(method)) {
      result=method.getParameterList().getParameters()[0].getType();
    }
 else {
      result=method.getReturnType();
    }
  }
 else   if (resolved instanceof GrReferenceExpression) {
    PsiElement parent=resolved.getParent();
    if (parent instanceof GrAssignmentExpression) {
      GrAssignmentExpression assignment=(GrAssignmentExpression)parent;
      if (resolved.equals(assignment.getLValue())) {
        GrExpression rValue=assignment.getRValue();
        if (rValue != null) {
          PsiType rType=rValue.getType();
          if (rType != null)           result=rType;
        }
      }
    }
  }
 else   if (resolved == null) {
    if ("class".equals(refExpr.getReferenceName())) {
      return refExpr.getManager().getElementFactory().createTypeByFQClassName("java.lang.Class",refExpr.getResolveScope());
    }
  }
  result=TypesUtil.boxPrimitiveType(result,manager,refExpr.getResolveScope());
  if (dotType != GroovyTokenTypes.mSPREAD_DOT) {
    return result;
  }
 else {
    return ResolveUtil.getListTypeForSpreadOperator(refExpr,result);
  }
}
