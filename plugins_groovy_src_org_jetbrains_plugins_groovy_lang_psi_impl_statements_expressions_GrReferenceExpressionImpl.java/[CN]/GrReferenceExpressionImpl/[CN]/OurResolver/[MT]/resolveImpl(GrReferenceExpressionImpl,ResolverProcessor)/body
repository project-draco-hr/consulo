{
  GrExpression qualifier=refExpr.getQualifierExpression();
  if (qualifier == null) {
    ResolveUtil.treeWalkUp(refExpr,processor);
    PsiClass contextClass=PsiUtil.getContextClass(refExpr);
    if (contextClass != null) {
      PsiClassType scriptType=refExpr.getManager().getElementFactory().createType(contextClass);
      if (!ResolveUtil.processNonCodeMethods(scriptType,processor,refExpr.getProject()))       return;
    }
    if (!processor.hasCandidates()) {
      qualifier=PsiImplUtil.getRuntimeQualifier(refExpr);
      if (qualifier != null) {
        processQualifier(refExpr,processor,qualifier);
      }
    }
  }
 else {
    if (refExpr.getDotTokenType() != GroovyTokenTypes.mSPREAD_DOT) {
      processQualifier(refExpr,processor,qualifier);
    }
 else {
      processQualifierForSpreadDot(refExpr,processor,qualifier);
    }
  }
}
