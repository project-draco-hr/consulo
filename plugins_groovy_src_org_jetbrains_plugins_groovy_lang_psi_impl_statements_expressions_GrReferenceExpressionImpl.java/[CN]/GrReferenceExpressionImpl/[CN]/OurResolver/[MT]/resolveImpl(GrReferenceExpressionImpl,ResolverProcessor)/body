{
  GrExpression qualifier=refExpr.getQualifierExpression();
  if (qualifier == null) {
    ResolveUtil.treeWalkUp(refExpr,processor,true);
    if (!processor.hasCandidates()) {
      qualifier=PsiImplUtil.getRuntimeQualifier(refExpr);
      if (qualifier != null) {
        processQualifier(refExpr,processor,qualifier);
      }
    }
  }
 else {
    if (refExpr.getDotTokenType() != GroovyTokenTypes.mSPREAD_DOT) {
      processQualifier(refExpr,processor,qualifier);
    }
 else {
      processQualifierForSpreadDot(refExpr,processor,qualifier);
    }
    if (qualifier instanceof GrReferenceExpression && "class".equals(((GrReferenceExpression)qualifier).getReferenceName())) {
      processIfJavaLangClass(refExpr,processor,qualifier.getType());
    }
 else     if (qualifier instanceof GrThisReferenceExpression) {
      processIfJavaLangClass(refExpr,processor,qualifier.getType());
    }
  }
}
