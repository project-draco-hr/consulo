{
  final String name=Messages.showInputDialog(expression.getProject(),"Function Name: ",getRefactoringName(),Messages.getQuestionIcon());
  final boolean[] b=new boolean[]{false};
  if (name != null) {
    final String[] parts=name.split(":",2);
    if (parts.length < 2) {
      Messages.showMessageDialog(expression.getProject(),"Custom functions require a prefixed name","Error",Messages.getErrorIcon());
      b[0]=true;
    }
    final XmlElement context=PsiTreeUtil.getContextOfType(expression,XmlElement.class);
    final NamespaceContext namespaceContext=expression.getXPathContext().getNamespaceContext();
    if (namespaceContext != null && context != null && namespaceContext.resolve(parts[0],context) == null) {
      Messages.showMessageDialog(expression.getProject(),"Prefix '" + parts[0] + "' is not defined","Error",Messages.getErrorIcon());
      b[0]=true;
    }
  }
  return new RefactoringOptions(){
    @Override public boolean isCanceled(){
      return b[0];
    }
    @Override public String getName(){
      return name;
    }
  }
;
}
