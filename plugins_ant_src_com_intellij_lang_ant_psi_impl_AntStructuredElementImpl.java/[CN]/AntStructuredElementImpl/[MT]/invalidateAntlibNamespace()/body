{
  final AntFile file=getAntFile();
  if (file == null)   return;
  final ClassLoader loader=file.getClassLoader().getClassloader();
  if (loader == null)   return;
  final String ns=getNamespace();
  if (!ns.startsWith(ANTLIB_NS_PREFIX))   return;
  final AntElement parent=getAntParent();
  if (!(this instanceof AntProject)) {
    if (parent instanceof AntStructuredElementImpl && ns.equals(((AntStructuredElementImpl)parent).getNamespace()))     return;
  }
  final StringBuilder builder=StringBuilderSpinAllocator.alloc();
  try {
    builder.append(ns.substring(ANTLIB_NS_PREFIX.length()).replace('.','/'));
    builder.append('/');
    builder.append(ANTLIB_XML);
    final InputStream antlibStream=loader.getResourceAsStream(builder.toString());
    if (antlibStream != null) {
      AntTypeDefImpl.loadAntlibStream(antlibStream,this,ns);
    }
  }
  finally {
    StringBuilderSpinAllocator.dispose(builder);
  }
}
