{
  if (value == null || value.indexOf('$') < 0) {
    return value;
  }
synchronized (PsiLock.LOCK) {
    if (value != null) {
      if (myComputingAttrValue == null || !myComputingAttrValue.contains(value)) {
        try {
          if (myComputingAttrValue == null) {
            try {
              myComputingAttrValue=StringSetSpinAllocator.alloc();
              myShouldDisposeSet=true;
            }
 catch (            SpinAllocator.AllocatorExhaustedException e) {
              myComputingAttrValue=new HashSet<String>();
              myShouldDisposeSet=false;
            }
          }
          myComputingAttrValue.add(value);
          try {
            final Set<PsiElement> set=PsiElementSetSpinAllocator.alloc();
            try {
              return computeAttributeValue(value,set);
            }
  finally {
              PsiElementSetSpinAllocator.dispose(set);
            }
          }
 catch (          SpinAllocator.AllocatorExhaustedException e) {
            return computeAttributeValue(value,new HashSet<PsiElement>());
          }
        }
  finally {
          myComputingAttrValue.remove(value);
          if (myComputingAttrValue.size() == 0) {
            final Set<String> _strSet=myComputingAttrValue;
            myComputingAttrValue=null;
            if (myShouldDisposeSet) {
              StringSetSpinAllocator.dispose(_strSet);
            }
          }
        }
      }
    }
    return null;
  }
}
