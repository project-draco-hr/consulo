{
  if (extension == null)   extension=StdFileTypes.JAVA.getDefaultExtension();
  final PsiFile psiFile=PsiFileFactory.getInstance(project).createFileFromText("myclass" + "." + extension,content);
  if (!(psiFile instanceof PsiJavaFile)) {
    throw new IncorrectOperationException("This template did not produce a Java class or an interface\n" + psiFile.getText());
  }
  PsiJavaFile psiJavaFile=(PsiJavaFile)psiFile;
  final PsiClass[] classes=psiJavaFile.getClasses();
  if (classes.length == 0) {
    throw new IncorrectOperationException("This template did not produce a Java class or an interface\n" + psiFile.getText());
  }
  PsiClass createdClass=classes[0];
  if (reformat) {
    CodeStyleManager.getInstance(project).reformat(psiJavaFile);
  }
  String className=createdClass.getName();
  String fileName=className + "." + extension;
  if (createdClass.isInterface()) {
    JavaDirectoryService.getInstance().checkCreateInterface(directory,className);
  }
 else {
    JavaDirectoryService.getInstance().checkCreateClass(directory,className);
  }
  final LanguageLevel ll=JavaDirectoryService.getInstance().getLanguageLevel(directory);
  if (ll.compareTo(LanguageLevel.JDK_1_5) < 0) {
    if (createdClass.isAnnotationType()) {
      throw new IncorrectOperationException("Annotations only supported at language level 1.5 and higher");
    }
    if (createdClass.isEnum()) {
      throw new IncorrectOperationException("Enums only supported at language level 1.5 and higher");
    }
  }
  psiJavaFile=(PsiJavaFile)psiJavaFile.setName(fileName);
  PsiElement addedElement=directory.add(psiJavaFile);
  if (addedElement instanceof PsiJavaFile) {
    psiJavaFile=(PsiJavaFile)addedElement;
    return psiJavaFile.getClasses()[0];
  }
 else {
    PsiFile containingFile=addedElement.getContainingFile();
    throw new IncorrectOperationException("Selected class file name '" + containingFile.getName() + "' mapped to not java file type '"+ containingFile.getFileType().getDescription()+ "'");
  }
}
