{
  IElementType brace1Token=getToken(iterator);
  int group=getTokenGroup(brace1Token,fileType);
  String brace1TagName=getTagName(fileText,iterator);
  boolean isStrict=isStrictTagMatching(fileType,group);
  boolean isCaseSensitive=areTagsCaseSensitive(fileType,group);
  ourBraceStack.clear();
  ourTagNameStack.clear();
  ourBraceStack.push(brace1Token);
  if (isStrict) {
    ourTagNameStack.push(brace1TagName);
  }
  boolean matched=false;
  while (true) {
    if (!forward) {
      iterator.retreat();
    }
 else {
      iterator.advance();
    }
    if (iterator.atEnd()) {
      break;
    }
    IElementType tokenType=getToken(iterator);
    if (getTokenGroup(tokenType,fileType) == group) {
      String tagName=getTagName(fileText,iterator);
      if (!isStrict && !Comparing.equal(brace1TagName,tagName,isCaseSensitive))       continue;
      if (forward ? isLBraceToken(iterator,fileText,fileType) : isRBraceToken(iterator,fileText,fileType)) {
        ourBraceStack.push(tokenType);
        if (isStrict) {
          ourTagNameStack.push(tagName);
        }
      }
 else       if (forward ? isRBraceToken(iterator,fileText,fileType) : isLBraceToken(iterator,fileText,fileType)) {
        IElementType topTokenType=ourBraceStack.pop();
        String topTagName=null;
        if (isStrict) {
          topTagName=ourTagNameStack.pop();
        }
        if (!isPairBraces(topTokenType,tokenType,fileType) || isStrict && !Comparing.equal(topTagName,tagName,isCaseSensitive)) {
          matched=false;
          break;
        }
        if (ourBraceStack.size() == 0) {
          matched=true;
          break;
        }
      }
    }
  }
  return matched;
}
