{
  final MinusculeMatcher matcher=buildPatternMatcher(pattern,NameUtil.MatchingCaseSensitivity.NONE);
  Processor<String> processor=new Processor<String>(){
    @Override public boolean process(    String name){
      ProgressManager.checkCanceled();
      MatchResult result=matches(base,pattern,matcher,name);
      if (result != null) {
        consumer.consume(result);
      }
      return true;
    }
  }
;
  if (!JobLauncher.getInstance().invokeConcurrentlyUnderProgress(Arrays.asList(names),indicator,false,true,processor)) {
    throw new ProcessCanceledException();
  }
}
