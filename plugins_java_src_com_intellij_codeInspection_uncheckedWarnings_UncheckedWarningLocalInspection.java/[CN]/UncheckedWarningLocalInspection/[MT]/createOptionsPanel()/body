{
  final JPanel panel=new JPanel(new GridBagLayout());
  final GridBagConstraints gc=new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0);
  panel.add(createSetting("Ignore unchecked assignment",IGNORE_UNCHECKED_ASSIGNMENT,new Pass<JCheckBox>(){
    @Override public void pass(    JCheckBox cb){
      IGNORE_UNCHECKED_ASSIGNMENT=cb.isSelected();
    }
  }
),gc);
  panel.add(createSetting("Ignore unchecked generics array creation for vararg parameter",IGNORE_UNCHECKED_GENERICS_ARRAY_CREATION,new Pass<JCheckBox>(){
    @Override public void pass(    JCheckBox cb){
      IGNORE_UNCHECKED_GENERICS_ARRAY_CREATION=cb.isSelected();
    }
  }
),gc);
  panel.add(createSetting("Ignore unchecked call as member of raw type",IGNORE_UNCHECKED_CALL,new Pass<JCheckBox>(){
    @Override public void pass(    JCheckBox cb){
      IGNORE_UNCHECKED_CALL=cb.isSelected();
    }
  }
),gc);
  panel.add(createSetting("Ignore unchecked cast",IGNORE_UNCHECKED_CAST,new Pass<JCheckBox>(){
    @Override public void pass(    JCheckBox cb){
      IGNORE_UNCHECKED_CAST=cb.isSelected();
    }
  }
),gc);
  panel.add(createSetting("Ignore unchecked overriding",IGNORE_UNCHECKED_OVERRIDING,new Pass<JCheckBox>(){
    @Override public void pass(    JCheckBox cb){
      IGNORE_UNCHECKED_OVERRIDING=cb.isSelected();
    }
  }
),gc);
  gc.fill=GridBagConstraints.BOTH;
  gc.weighty=1;
  panel.add(Box.createVerticalBox(),gc);
  return panel;
}
