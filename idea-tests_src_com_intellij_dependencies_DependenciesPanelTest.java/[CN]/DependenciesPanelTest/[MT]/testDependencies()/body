{
  DependenciesPanel dependenciesPanel=null;
  try {
    final PsiDirectory psiDirectory=getPackageDirectory("com/package1");
    Assert.assertNotNull(psiDirectory);
    final PsiPackage psiPackage=psiDirectory.getPackage();
    Assert.assertNotNull(psiPackage);
    final PsiClass[] classes=psiPackage.getClasses();
    final PsiFile file=classes[0].getContainingFile();
    final AnalysisScope scope=new AnalysisScope(file);
    final DependenciesBuilder builder=new ForwardDependenciesBuilder(myProject,scope);
    builder.analyze();
    dependenciesPanel=new DependenciesPanel(myProject,builder);
    JTree leftTree=dependenciesPanel.getLeftTree();
    IdeaTestUtil.assertTreeEqual(leftTree,"-Root\n" + " Library Classes\n" + " -Production Classes\n"+ "  -" + myModule.getName() + "\n"+ "   -com.package1\n"+ "    [Class1.java]\n"+ " Test Classes\n",true);
    JTree rightTree=dependenciesPanel.getRightTree();
    IdeaTestUtil.assertTreeEqual(rightTree,"-Root\n" + " Library Classes\n" + " -Production Classes\n"+ "  -" + myModule.getName() + "\n"+ "   -com.package1\n"+ "    Class2.java\n"+ " Test Classes\n",true);
  }
  finally {
    if (dependenciesPanel != null) {
      Disposer.dispose(dependenciesPanel);
    }
  }
}
