{
  final boolean wasEmpty=myFilter.isEmpty();
  if (files != null) {
    boolean somethingChanged=false;
    for (    VirtualFile file : files) {
      if (!myFilter.addPath(file))       continue;
      somethingChanged=true;
      final StructureNode node=new StructureNode(myCommonData,myFiltering,myProject,this,file);
      addChild(node);
    }
    if (!somethingChanged)     return;
    if (wasEmpty) {
      myFiltering.addFilter(myFilter);
    }
 else {
      final List<StructureNode> toRemove=new ArrayList<StructureNode>();
      for (      StructureNode child : getChildren()) {
        final VirtualFile file=child.getFile();
        if (!myFilter.containsFile(file)) {
          toRemove.add(child);
        }
      }
      for (      StructureNode node : toRemove) {
        removeChild(node);
      }
      myFiltering.markDirty();
    }
    after.consume(this);
  }
}
