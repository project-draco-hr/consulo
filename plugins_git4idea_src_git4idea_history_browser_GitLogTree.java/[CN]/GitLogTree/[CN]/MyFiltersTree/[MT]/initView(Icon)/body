{
  myStructure=new MyTreeStructure(myCommonData,myFiltering,myProject,childrenIcon,myRootFile);
  myTree=new Tree();
  myAtb=new AbstractTreeBuilder(myTree,new DefaultTreeModel(new DefaultMutableTreeNode()),myStructure,null);
  myAtb.initRootNode();
  Disposer.register(myParentDisposable,myAtb);
  myTree.setDragEnabled(false);
  myTree.setShowsRootHandles(true);
  myTree.setRootVisible(false);
  myTree.setCellRenderer(new NodeRenderer());
  final DefaultActionGroup group=new DefaultActionGroup();
  final MyAddAction addAction=new MyAddAction();
  addAction.registerCustomShortcutSet(CommonShortcuts.INSERT,myPanel);
  group.add(addAction);
  final MyRemoveAction removeAction=new MyRemoveAction();
  removeAction.registerCustomShortcutSet(CommonShortcuts.DELETE,myPanel);
  group.add(removeAction);
  final ActionManager am=ActionManager.getInstance();
  final ActionPopupMenu actionPopupMenu=am.createActionPopupMenu("branchFilter",group);
  myTree.addMouseListener(new PopupHandler(){
    @Override public void invokePopup(    Component comp,    int x,    int y){
      actionPopupMenu.getComponent().show(comp,x,y);
    }
  }
);
  final JLabel titleLabel=new JLabel(myTitle);
  titleLabel.setFont(titleLabel.getFont().deriveFont(Font.BOLD));
  myPanel.add(titleLabel,BorderLayout.NORTH);
  myPanel.add(new JScrollPane(myTree),BorderLayout.CENTER);
}
