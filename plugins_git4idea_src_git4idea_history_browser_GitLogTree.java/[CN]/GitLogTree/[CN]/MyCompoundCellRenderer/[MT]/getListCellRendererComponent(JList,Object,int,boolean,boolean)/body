{
  if (value instanceof GitCommit) {
    final GitCommit gc=(GitCommit)value;
    final List<String> branches=gc.getLocalBranches();
    final List<String> tags=gc.getTags();
    if (branches.isEmpty() && tags.isEmpty()) {
      myTextPartRenderer.setLeftPartWidth(0);
      return myTextPartRenderer.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
    }
    final GridBagConstraints gb=new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0);
    gb.anchor=GridBagConstraints.WEST;
    myPanel.removeAll();
    myPanel.setBackground(isSelected ? UIUtil.getListSelectionBackground() : list.getBackground());
    int leftWidth=0;
    for (    String branch : branches) {
      Icon icon=myBranchMap.get(branch);
      if (icon == null) {
        icon=new CaptionIcon(Colors.ourBranch,list.getFont(),branch,list,null,false,false);
        myBranchMap.put(branch,icon);
      }
      leftWidth+=icon.getIconWidth();
      myPanel.add(new JLabel(icon),gb);
      ++gb.gridx;
    }
    for (    String tag : tags) {
      Icon icon=myTagMap.get(tag);
      if (icon == null) {
        icon=new CaptionIcon(Colors.ourTag,list.getFont(),tag,list,null,false,false);
        myTagMap.put(tag,icon);
      }
      leftWidth+=icon.getIconWidth();
      myPanel.add(new JLabel(icon),gb);
      ++gb.gridx;
    }
    myTextPartRenderer.setLeftPartWidth(leftWidth);
    gb.anchor=GridBagConstraints.NORTHWEST;
    gb.fill=GridBagConstraints.HORIZONTAL;
    gb.weightx=1;
    myPanel.add(myTextPartRenderer.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus),gb);
    return myPanel;
  }
  return null;
}
