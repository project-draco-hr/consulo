{
  ArrangementCompositeMatchCondition condition=new ArrangementCompositeMatchCondition(ArrangementOperator.AND);
  ArrangementMatchCondition abstractCondition=new ArrangementAtomMatchCondition(ArrangementSettingType.MODIFIER,ArrangementModifier.ABSTRACT);
  ArrangementMatchCondition methodCondition=new ArrangementAtomMatchCondition(ArrangementSettingType.TYPE,ArrangementEntryType.METHOD);
  condition.addOperand(abstractCondition);
  condition.addOperand(methodCondition);
  HierarchicalArrangementConditionNode grouped=ArrangementUtil.group(condition,Collections.singletonList(Collections.singleton(methodCondition)));
  assertEquals(methodCondition,grouped.getCurrent());
  HierarchicalArrangementConditionNode child=grouped.getChild();
  assertNotNull(child);
  assertEquals(abstractCondition,child.getCurrent());
  assertNull(child.getChild());
}
