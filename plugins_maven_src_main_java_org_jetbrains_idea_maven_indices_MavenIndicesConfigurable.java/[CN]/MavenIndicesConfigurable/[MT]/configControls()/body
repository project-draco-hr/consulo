{
  myNexusList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myAddNexusButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final String value=(String)myNexusList.getSelectedValue();
      final String text=Messages.showInputDialog("Nexus Service URL","Add Nexus URL",Messages.getQuestionIcon(),value == null ? "http://" : value,new URLInputVaslidator());
      ((CollectionListModel)myNexusList.getModel()).add(text);
      myNexusList.setSelectedValue(text,true);
    }
  }
);
  ListUtil.addRemoveListener(myRemoveNexusButton,myNexusList);
  ListUtil.disableWhenNoSelection(myTestButton,myNexusList);
  myTestButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final String value=(String)myNexusList.getSelectedValue();
      if (value != null) {
        testNexusConnection(value);
      }
    }
  }
);
  myUpdateButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      doUpdateIndex();
    }
  }
);
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateButtonsState();
    }
  }
);
  myTable.addMouseMotionListener(new MouseMotionListener(){
    public void mouseDragged(    MouseEvent e){
    }
    public void mouseMoved(    MouseEvent e){
      int row=myTable.rowAtPoint(e.getPoint());
      if (row == -1)       return;
      updateIndexHint(row);
    }
  }
);
  myTable.setDefaultRenderer(Object.class,new MyCellRenderer());
  myTable.setDefaultRenderer(MavenIndicesManager.IndexUpdatingState.class,new MyIconCellRenderer());
  updateButtonsState();
}
