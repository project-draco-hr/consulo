{
  super.run(indicator);
  final ImplementationSearcher.BackgroundableImplementationSearcher implementationSearcher=new ImplementationSearcher.BackgroundableImplementationSearcher(){
    @Override protected void processElement(    PsiElement element){
      if (!updateComponent(element,null)) {
        indicator.cancel();
      }
      indicator.checkCanceled();
    }
    @Override protected PsiElement[] filterElements(    PsiElement element,    PsiElement[] targetElements,    int offset){
      return ShowImplementationsAction.filterElements(targetElements);
    }
  }
;
  if (!myIncludeSelf) {
    myElements=getSelfAndImplementations(myEditor,myElement,implementationSearcher,false);
  }
 else {
    myElements=getSelfAndImplementations(myEditor,myElement,implementationSearcher);
  }
}
