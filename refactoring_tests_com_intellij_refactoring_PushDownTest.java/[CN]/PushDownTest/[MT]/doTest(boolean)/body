{
  final String filePath="/refactoring/pushDown/" + getTestName(false) + ".java";
  configureByFile(filePath);
  final PsiElement targetElement=TargetElementUtilBase.findTargetElement(getEditor(),TargetElementUtilBase.ELEMENT_NAME_ACCEPTED);
  assertTrue("<caret> is not on member name",targetElement instanceof PsiMember);
  final PsiMember psiMember=(PsiMember)targetElement;
  final PsiClass[] classes=((PsiJavaFile)psiMember.getContainingFile()).getClasses();
  final MemberInfo memberInfo=new MemberInfo(psiMember);
  memberInfo.setChecked(true);
  new PushDownProcessor(getProject(),new MemberInfo[]{memberInfo},classes[0],new JavaDocPolicy(JavaDocPolicy.ASIS)){
    @Override protected boolean showConflicts(    final List<String> conflicts){
      if (failure ? conflicts.isEmpty() : !conflicts.isEmpty()) {
        fail(failure ? "Conflict was not detected" : "False conflict was detected");
      }
      return super.showConflicts(conflicts);
    }
  }
.run();
  checkResultByFile(filePath + ".after");
}
