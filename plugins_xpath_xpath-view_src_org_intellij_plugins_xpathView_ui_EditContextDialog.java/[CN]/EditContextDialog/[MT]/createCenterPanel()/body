{
  final JPanel p=ToolbarDecorator.createDecorator(myVariableTable).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      stopVarEditing();
      myVariableTableModel.addVariable();
      myNamespaceTable.editCellAt(myVariableTableModel.getRowCount() - 1,0);
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      myVariableTableModel.removeVariable(myVariableTable.getSelectedRow());
    }
  }
).createPanel();
  UIUtil.addBorder(p,IdeBorderFactory.createTitledBorder("Variables",false));
  final JPanel n=ToolbarDecorator.createDecorator(myNamespaceTable).addExtraAction(myContextProvider.getContextElement() != null ? null : AnActionButton.fromAction(new AddAction(myNamespaceTableModel,myUnresolvedPrefixes))).setRemoveAction(myContextProvider.getContextElement() != null ? null : new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      myNamespaceTableModel.removeNamespace(myNamespaceTable.getSelectedRow());
    }
  }
).setButtonComparator("Add","Remove").createPanel();
  UIUtil.addBorder(n,IdeBorderFactory.createTitledBorder("Namespaces",false));
  int extendedState=myDimensionService.getExtendedState(getDimensionServiceKey());
  if (extendedState == -1)   extendedState=400;
  mySplitter=new Splitter(true,extendedState / 1000f);
  mySplitter.setHonorComponentsMinimumSize(true);
  mySplitter.setFirstComponent(n);
  mySplitter.setSecondComponent(p);
  return mySplitter;
}
