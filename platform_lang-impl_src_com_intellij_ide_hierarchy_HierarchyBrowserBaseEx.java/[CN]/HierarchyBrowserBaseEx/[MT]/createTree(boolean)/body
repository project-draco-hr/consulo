{
  final Tree tree;
  if (dndAware) {
    tree=new DnDAwareTree(new DefaultTreeModel(new DefaultMutableTreeNode("")));
    if (!ApplicationManager.getApplication().isHeadlessEnvironment()) {
      DnDManager.getInstance().registerSource(new DnDSource(){
        public boolean canStartDragging(        final DnDAction action,        final Point dragOrigin){
          return getSelectedElements().length > 0;
        }
        public DnDDragStartBean startDragging(        final DnDAction action,        final Point dragOrigin){
          return new DnDDragStartBean(new AbstractProjectViewPane.TransferableWrapper(){
            public TreeNode[] getTreeNodes(){
              return tree.getSelectedNodes(TreeNode.class,null);
            }
            public PsiElement[] getPsiElements(){
              return getSelectedElements();
            }
            @Override public List<File> asFileList(){
              return PsiCopyPasteManager.asFileList(getPsiElements());
            }
          }
);
        }
        public Pair<Image,Point> createDraggedImage(        final DnDAction action,        final Point dragOrigin){
          return null;
        }
        public void dragDropEnd(){
        }
        public void dropActionChanged(        final int gestureModifiers){
        }
      }
,tree);
    }
  }
 else {
    tree=new Tree(new DefaultTreeModel(new DefaultMutableTreeNode("")));
  }
  configureTree(tree);
  EditSourceOnDoubleClickHandler.install(tree);
  myRefreshAction.registerShortcutOn(tree);
  myRunOnDisposeList.add(new Runnable(){
    public void run(){
      myRefreshAction.unregisterCustomShortcutSet(tree);
    }
  }
);
  return tree;
}
