{
  if (currentBuilderOnly)   LOG.assertTrue(myCurrentViewType != null);
  if (!isValidBase())   return;
  if (getCurrentBuilder() == null)   return;
  final Ref<Pair<List<Object>,List<Object>>> storedInfo=new Ref<Pair<List<Object>,List<Object>>>();
  if (myCurrentViewType != null) {
    final HierarchyTreeBuilder builder=getCurrentBuilder();
    storedInfo.set(builder.storeExpandedAndSelectedInfo());
  }
  final PsiElement element=mySmartPsiElementPointer.getElement();
  if (element == null || !isApplicableElement(element)) {
    return;
  }
  final String currentViewType=myCurrentViewType;
  if (currentBuilderOnly) {
    Disposer.dispose(getCurrentBuilder());
  }
 else {
    disposeBuilders();
  }
  setHierarchyBase(element);
  validate();
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      changeView(currentViewType);
      final HierarchyTreeBuilder builder=getCurrentBuilder();
      builder.restoreExpandedAndSelectedInfo(storedInfo.get());
    }
  }
);
}
