{
  super.visitField(field);
  if (!childrenContainTypeElement(field)) {
    return;
  }
  final List<PsiField> fields=getSiblingFields(field);
  if (fields.size() > 1) {
    final PsiField firstField=fields.get(0);
    final PsiType baseType=firstField.getType();
    boolean hasMultipleTypes=false;
    for (int i=1; i < fields.size(); i++) {
      final PsiField var=fields.get(i);
      final PsiType varType=var.getType();
      if (!varType.equals(baseType)) {
        hasMultipleTypes=true;
      }
    }
    if (hasMultipleTypes) {
      for (int i=1; i < fields.size(); i++) {
        final PsiField var=fields.get(i);
        registerVariableError(var);
      }
    }
  }
}
