{
  char yy_lookahead;
  int yy_anchor=YY_NO_ANCHOR;
  int yy_state=yy_state_dtrans[yy_lexical_state];
  int yy_next_state=YY_NO_STATE;
  int yy_last_accept_state=YY_NO_STATE;
  boolean yy_initial=true;
  int yy_this_accept;
  yy_buffer_start=yy_buffer_index;
  yy_this_accept=yy_acpt[yy_state];
  if (YY_NOT_ACCEPT != yy_this_accept) {
    yy_last_accept_state=yy_state;
    yy_buffer_end=yy_buffer_index;
  }
  while (true) {
    if (yy_buffer_index < yy_buffer_length) {
      yy_lookahead=yy_buffer[yy_buffer_index++];
      if (yy_lookahead < 0 || yy_lookahead > 127) {
        if (Character.isJavaIdentifierStart(yy_lookahead)) {
          yy_lookahead='A';
        }
 else         if (Character.isJavaIdentifierPart(yy_lookahead)) {
          yy_lookahead='9';
        }
 else {
          yy_lookahead='#';
        }
      }
    }
 else {
      yy_lookahead=YYEOF;
    }
    yy_next_state=YY_F;
    if (YYEOF != yy_lookahead) {
      yy_next_state=yy_nxt[yy_rmap[yy_state]][yy_cmap[yy_lookahead]];
    }
    if (YY_F != yy_next_state) {
      yy_state=yy_next_state;
      yy_initial=false;
      yy_this_accept=yy_acpt[yy_state];
      if (YY_NOT_ACCEPT != yy_this_accept) {
        yy_last_accept_state=yy_state;
        yy_buffer_end=yy_buffer_index;
      }
    }
 else {
      if (YYEOF == yy_lookahead && true == yy_initial) {
        myTokenType=null;
        return;
      }
 else       if (YY_NO_STATE == yy_last_accept_state) {
        throw (new Error("Lexical Error: Unmatched Input."));
      }
 else {
        yy_buffer_index=yy_buffer_end;
        yy_anchor=yy_acpt[yy_last_accept_state];
        if (0 != (YY_END & yy_anchor)) {
          --yy_buffer_end;
        }
        if (0 != (YY_START & yy_anchor)) {
          ++yy_buffer_start;
        }
switch (yy_last_accept_state) {
case 1:
{
            myTokenType=TemplateTokenType.TEXT;
            return;
          }
case -2:
        break;
case 2:
{
        myTokenType=TemplateTokenType.ESCAPE_DOLLAR;
        return;
      }
case -3:
    break;
case 3:
{
    myTokenType=TemplateTokenType.VARIABLE;
    return;
  }
case -4:
break;
case 5:
{
myTokenType=TemplateTokenType.TEXT;
return;
}
case -5:
break;
default :
yy_error(YY_E_INTERNAL,false);
case -1:
}
yy_initial=true;
yy_state=yy_state_dtrans[yy_lexical_state];
yy_next_state=YY_NO_STATE;
yy_last_accept_state=YY_NO_STATE;
yy_buffer_start=yy_buffer_index;
yy_this_accept=yy_acpt[yy_state];
if (YY_NOT_ACCEPT != yy_this_accept) {
yy_last_accept_state=yy_state;
}
}
}
}
}
