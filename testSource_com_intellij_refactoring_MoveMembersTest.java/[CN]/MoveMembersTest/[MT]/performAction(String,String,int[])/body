{
  PsiClass sourceClass=myPsiManager.findClass(sourceClassName);
  assertNotNull("Class " + sourceClassName + " not found",sourceClass);
  PsiClass targetClass=myPsiManager.findClass(targetClassName);
  assertNotNull("Class " + targetClassName + " not found",targetClass);
  PsiElement[] children=sourceClass.getChildren();
  ArrayList members=new ArrayList();
  for (int i=0; i < children.length; i++) {
    PsiElement child=children[i];
    if (child instanceof PsiMethod || child instanceof PsiField || child instanceof PsiClass) {
      members.add(child);
    }
  }
  LinkedHashSet<PsiMember> memberSet=new LinkedHashSet<PsiMember>();
  for (int i=0; i < memberIndices.length; i++) {
    int index=memberIndices[i];
    PsiMember member=(PsiMember)members.get(index);
    assertTrue(member.hasModifierProperty(PsiModifier.STATIC));
    memberSet.add(member);
  }
  MockMoveMembersOptions options=new MockMoveMembersOptions(targetClass.getQualifiedName(),memberSet);
  options.setMemberVisibility(null);
  new MoveMembersProcessor(myProject,null,options).testRun();
  FileDocumentManager.getInstance().saveAllDocuments();
}
