{
  Collection<Psi> collection=getInstance().get(indexKey,key,project,scope,idFilter);
  for (Iterator<Psi> iterator=collection.iterator(); iterator.hasNext(); ) {
    Psi psi=iterator.next();
    if (!requiredClass.isInstance(psi)) {
      iterator.remove();
      VirtualFile faultyContainer=PsiUtilCore.getVirtualFile(psi);
      if (faultyContainer != null && faultyContainer.isValid()) {
        FileBasedIndex.getInstance().requestReindex(faultyContainer);
      }
      getInstance().reportStubPsiMismatch(psi,faultyContainer,requiredClass);
    }
  }
  return collection;
}
