{
  final PsiManager manager=lhs.getManager();
  final PsiMethodCallExpression callExpression=(PsiMethodCallExpression)lhs;
  if (!isIndexOfCall(callExpression)) {
    return false;
  }
  final PsiConstantEvaluationHelper constantEvaluationHelper=manager.getConstantEvaluationHelper();
  final Object object=constantEvaluationHelper.computeConstantExpression(rhs);
  if (!(object instanceof Integer)) {
    return false;
  }
  final Integer integer=(Integer)object;
  final int constant=integer.intValue();
  final IElementType tokenType=sign.getTokenType();
  if (tokenType == null) {
    return false;
  }
  if (flipped) {
    if (constant < 0 && (tokenType.equals(JavaTokenType.GT) || tokenType.equals(JavaTokenType.LE))) {
      return true;
    }
 else     if (constant < -1 && (tokenType.equals(JavaTokenType.GE) || tokenType.equals(JavaTokenType.LT) || tokenType.equals(JavaTokenType.NE)|| tokenType.equals(JavaTokenType.EQEQ))) {
      return true;
    }
  }
 else {
    if (constant < 0 && (tokenType.equals(JavaTokenType.LT) || tokenType.equals(JavaTokenType.GE))) {
      return true;
    }
 else     if (constant < -1 && (tokenType.equals(JavaTokenType.LE) || tokenType.equals(JavaTokenType.GT) || tokenType.equals(JavaTokenType.NE)|| tokenType.equals(JavaTokenType.EQEQ))) {
      return true;
    }
  }
  return false;
}
