{
  setUpMocks("/tmp/foo");
  final ReplacePathToMacroMap replacePathMap=new ModulePathMacroManager(myPathMacros,myModule).getReplacePathMap();
  final String s=replacePathMap.mapToString();
  assertEquals("file:/tmp/foo/module -> file:$MODULE_DIR$\n" + "file://tmp/foo/module -> file:/$MODULE_DIR$\n" + "file:///tmp/foo/module -> file://$MODULE_DIR$\n"+ "jar:/tmp/foo/module -> jar:$MODULE_DIR$\n"+ "jar://tmp/foo/module -> jar:/$MODULE_DIR$\n"+ "jar:///tmp/foo/module -> jar://$MODULE_DIR$\n"+ "/tmp/foo/module -> $MODULE_DIR$\n" + APP_HOME + " -> $APPLICATION_HOME_DIR$\n"+ "file:"+ APP_HOME+ " -> file:$APPLICATION_HOME_DIR$\n"+ "file:/"+ APP_HOME+ " -> file://$APPLICATION_HOME_DIR$\n"+ "file://"+ APP_HOME+ " -> file://$APPLICATION_HOME_DIR$\n"+ "jar:"+ APP_HOME+ " -> jar:$APPLICATION_HOME_DIR$\n"+ "jar:/"+ APP_HOME+ " -> jar://$APPLICATION_HOME_DIR$\n"+ "jar://"+ APP_HOME+ " -> jar://$APPLICATION_HOME_DIR$\n"+ USER_HOME+ " -> $USER_HOME$\n"+ "file:"+ USER_HOME+ " -> file:$USER_HOME$\n"+ "file:/"+ USER_HOME+ " -> file://$USER_HOME$\n"+ "file://"+ USER_HOME+ " -> file://$USER_HOME$\n"+ "jar:"+ USER_HOME+ " -> jar:$USER_HOME$\n"+ "jar:/"+ USER_HOME+ " -> jar://$USER_HOME$\n"+ "jar://"+ USER_HOME+ " -> jar://$USER_HOME$\n"+ "file:/tmp/foo -> file:$MODULE_DIR$/..\n"+ "file://tmp/foo -> file:/$MODULE_DIR$/..\n"+ "file:///tmp/foo -> file://$MODULE_DIR$/..\n"+ "jar:/tmp/foo -> jar:$MODULE_DIR$/..\n"+ "jar://tmp/foo -> jar:/$MODULE_DIR$/..\n"+ "jar:///tmp/foo -> jar://$MODULE_DIR$/..\n"+ "/tmp/foo -> $MODULE_DIR$/..\n"+ "file:/tmp -> file:$MODULE_DIR$/../..\n"+ "file://tmp -> file:/$MODULE_DIR$/../..\n"+ "file:///tmp -> file://$MODULE_DIR$/../..\n"+ "jar:/tmp -> jar:$MODULE_DIR$/../..\n"+ "jar://tmp -> jar:/$MODULE_DIR$/../..\n"+ "jar:///tmp -> jar://$MODULE_DIR$/../..\n"+ "/tmp -> $MODULE_DIR$/../..",s);
}
