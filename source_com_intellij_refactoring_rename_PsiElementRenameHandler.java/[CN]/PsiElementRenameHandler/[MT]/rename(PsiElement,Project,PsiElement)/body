{
  if (element instanceof PsiMethod) {
    PsiMethod psiMethod=(PsiMethod)element;
    if (psiMethod.isConstructor()) {
      PsiClass containingClass=psiMethod.getContainingClass();
      if (containingClass == null)       return;
      String classType=UsageViewUtil.getType(containingClass);
      String className=UsageViewUtil.getShortName(containingClass);
      int ret=Messages.showYesNoDialog(project,"Constructor cannot be renamed.\nWould you like to rename " + classType + " "+ className+ "?","Warning",Messages.getQuestionIcon());
      if (ret != 0) {
        return;
      }
      element=containingClass;
      if (!canRename(element,project)) {
        return;
      }
    }
  }
  PsiElement elementToRename=element;
  if (elementToRename instanceof PsiMethod) {
    elementToRename=SuperMethodWarningUtil.checkSuperMethod((PsiMethod)elementToRename,"rename");
    if (elementToRename == null)     return;
    elementToRename=EjbUtil.checkDeclMethod((PsiMethod)elementToRename,"rename");
    if (elementToRename == null)     return;
    if (!elementToRename.isWritable()) {
      if (!RefactoringMessageUtil.checkReadOnlyStatus(project,elementToRename))       return;
    }
  }
  String helpID=HelpID.getRenameHelpID(elementToRename);
  final RenameDialog dialog=new RenameDialog(project,elementToRename,nameSuggestionContext,helpID);
  dialog.show();
}
