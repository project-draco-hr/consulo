{
  final List<Configurable> result=new ArrayList<Configurable>();
  ContainerUtil.addAll(result,components);
  final Map<String,ConfigurableWrapper> idToConfigurable=new HashMap<String,ConfigurableWrapper>();
  for (  ConfigurableEP<Configurable> ep : extensions) {
    final Configurable configurable=ConfigurableWrapper.wrapConfigurable(ep);
    if (configurable instanceof ConfigurableWrapper) {
      final ConfigurableWrapper wrapper=(ConfigurableWrapper)configurable;
      idToConfigurable.put(wrapper.getId(),wrapper);
    }
 else {
      ContainerUtil.addIfNotNull(configurable,result);
    }
  }
  for (  final String id : idToConfigurable.keySet()) {
    final ConfigurableWrapper wrapper=idToConfigurable.get(id);
    final String parentId=wrapper.getParentId();
    if (parentId != null) {
      final ConfigurableWrapper parent=idToConfigurable.get(parentId);
      LOG.assertTrue(parent != null,"Can't find parent for " + parentId + " ("+ wrapper+ ")");
      idToConfigurable.put(parentId,parent.addChild(wrapper));
    }
  }
  for (final Iterator<String> iterator=idToConfigurable.keySet().iterator(); iterator.hasNext(); ) {
    final String key=iterator.next();
    final ConfigurableWrapper wrapper=idToConfigurable.get(key);
    if (wrapper.getParentId() != null) {
      iterator.remove();
    }
  }
  ContainerUtil.addAll(result,idToConfigurable.values());
  final ListIterator<Configurable> iterator=result.listIterator();
  while (iterator.hasNext()) {
    Configurable each=iterator.next();
    if (each instanceof Configurable.Assistant || each instanceof OptionalConfigurable && !((OptionalConfigurable)each).needDisplay() || filter != null && !filter.isIncluded(each)) {
      iterator.remove();
    }
  }
  return result;
}
