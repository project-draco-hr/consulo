{
  final List<Configurable> result=new ArrayList<Configurable>();
  for (  Configurable component : components) {
    if (!isSuppressed(component,filter)) {
      result.add(component);
    }
  }
  final Map<String,ConfigurableWrapper> idToConfigurable=new HashMap<String,ConfigurableWrapper>();
  for (  ConfigurableEP<Configurable> ep : extensions) {
    final Configurable configurable=ConfigurableWrapper.wrapConfigurable(ep);
    if (isSuppressed(configurable,filter))     continue;
    if (configurable instanceof ConfigurableWrapper) {
      final ConfigurableWrapper wrapper=(ConfigurableWrapper)configurable;
      idToConfigurable.put(wrapper.getId(),wrapper);
    }
 else {
      ContainerUtil.addIfNotNull(configurable,result);
    }
  }
  for (  final String id : idToConfigurable.keySet()) {
    final ConfigurableWrapper wrapper=idToConfigurable.get(id);
    final String parentId=wrapper.getParentId();
    if (parentId != null) {
      final ConfigurableWrapper parent=idToConfigurable.get(parentId);
      if (parent != null) {
        idToConfigurable.put(parentId,parent.addChild(wrapper));
      }
 else {
        LOG.error("Can't find parent for " + parentId + " ("+ wrapper+ ")");
      }
    }
  }
  for (final Iterator<String> iterator=idToConfigurable.keySet().iterator(); iterator.hasNext(); ) {
    final String key=iterator.next();
    final ConfigurableWrapper wrapper=idToConfigurable.get(key);
    if (wrapper.getParentId() != null) {
      iterator.remove();
    }
  }
  ContainerUtil.addAll(result,idToConfigurable.values());
  return result;
}
