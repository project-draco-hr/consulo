{
  List<Configurable> result=new ArrayList<Configurable>();
  Map<String,ConfigurableWrapper> idToConfigurable=new HashMap<String,ConfigurableWrapper>();
  List<ConfigurableWrapper> orphans=new ArrayList<ConfigurableWrapper>();
  for (  ConfigurableEP<Configurable> ep : extensions) {
    final Configurable configurable=ConfigurableWrapper.wrapConfigurable(ep);
    if (configurable instanceof ConfigurableWrapper) {
      ConfigurableWrapper wrapper=(ConfigurableWrapper)configurable;
      if (wrapper.getParentId() != null) {
        orphans.add(wrapper);
      }
 else {
        idToConfigurable.put(wrapper.getId(),wrapper);
      }
    }
 else {
      ContainerUtil.addIfNotNull(configurable,result);
    }
  }
  ContainerUtil.addAll(result,components);
  for (  ConfigurableWrapper orphan : orphans) {
    String parentId=orphan.getParentId();
    ConfigurableWrapper parent=idToConfigurable.get(parentId);
    LOG.assertTrue(parent != null,"Can't find parent for " + parentId + " ("+ orphan+ ")");
    idToConfigurable.put(parentId,parent.addChild(orphan));
  }
  ContainerUtil.addAll(result,idToConfigurable.values());
  final ListIterator<Configurable> iterator=result.listIterator();
  while (iterator.hasNext()) {
    Configurable each=iterator.next();
    if (each instanceof Configurable.Assistant || each instanceof OptionalConfigurable && !((OptionalConfigurable)each).needDisplay() || filter != null && !filter.isIncluded(each)) {
      iterator.remove();
    }
  }
  return result;
}
