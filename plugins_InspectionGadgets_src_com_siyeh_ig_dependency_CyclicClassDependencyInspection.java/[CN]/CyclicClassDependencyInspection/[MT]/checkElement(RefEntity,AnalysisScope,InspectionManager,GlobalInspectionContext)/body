{
  if (!(refEntity instanceof RefClass)) {
    return null;
  }
  if (globalInspectionContext.isSuppressed(refEntity,getShortName())) {
    return null;
  }
  final RefClass refClass=(RefClass)refEntity;
  final PsiClass aClass=refClass.getElement();
  if (aClass.getContainingClass() != null) {
    return null;
  }
  final Set<RefClass> dependencies=DependencyUtils.calculateTransitiveDependenciesForClass(refClass);
  final Set<RefClass> dependents=DependencyUtils.calculateTransitiveDependentsForClass(refClass);
  final Set<RefClass> mutualDependents=new HashSet<RefClass>(dependencies);
  mutualDependents.retainAll(dependents);
  final int numMutualDependents=mutualDependents.size();
  if (numMutualDependents <= 1) {
    return null;
  }
  final String errorString=InspectionGadgetsBundle.message("cyclic.class.dependency.problem.descriptor",refEntity.getName(),numMutualDependents - 1);
  return new CommonProblemDescriptor[]{inspectionManager.createProblemDescriptor(errorString)};
}
