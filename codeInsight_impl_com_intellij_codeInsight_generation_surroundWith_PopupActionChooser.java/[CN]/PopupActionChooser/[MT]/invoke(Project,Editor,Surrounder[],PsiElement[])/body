{
  final ArrayList<Surrounder> applicable=new ArrayList<Surrounder>();
  final ArrayList<String> actionNames=new ArrayList<String>();
  for (  Surrounder surrounder : surrounders) {
    if (surrounder.isApplicable(elements)) {
      actionNames.add(surrounder.getTemplateDescription());
      applicable.add(surrounder);
    }
  }
  if (applicable.size() == 0)   return;
  final JList list=new JList(actionNames.toArray());
  list.setCellRenderer(new MyListCellRenderer());
  final Runnable listener=new Runnable(){
    public void run(){
      int index=list.getSelectedIndex();
      if (index >= 0) {
        final Surrounder surrounder=applicable.get(index);
        CommandProcessor.getInstance().executeCommand(project,new Runnable(){
          public void run(){
            final Runnable action=new Runnable(){
              public void run(){
                SurroundWithHandler.doSurround(project,editor,surrounder,elements);
              }
            }
;
            ApplicationManager.getApplication().runWriteAction(action);
          }
        }
,null,null);
      }
    }
  }
;
  final ListPopup listPopup=new ListPopup(myTitle,list,listener,project);
  list.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      char c=e.getKeyChar();
      int index=-1;
      if ('0' <= c && c <= '9') {
        index=c == '0' ? 9 : c - '1';
      }
 else       if ('A' <= c && c <= 'Z') {
        index=c - 'A' + 10;
      }
 else       if ('a' <= c && c <= 'z') {
        index=c - 'a' + 10;
      }
      if (index >= 0 && index < list.getModel().getSize()) {
        list.setSelectedIndex(index);
        listener.run();
        listPopup.closePopup(false);
      }
    }
  }
);
  LogicalPosition caretLogicalPosition=editor.getCaretModel().getLogicalPosition();
  Point caretLocation=editor.logicalPositionToXY(new LogicalPosition(caretLogicalPosition.line + 1,caretLogicalPosition.column));
  Point location=editor.getContentComponent().getLocationOnScreen();
  listPopup.show(caretLocation.x + location.x,caretLocation.y + location.y);
}
