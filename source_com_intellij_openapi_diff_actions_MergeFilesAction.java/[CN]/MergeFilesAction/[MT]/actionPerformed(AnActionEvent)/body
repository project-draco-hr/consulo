{
  DataContext context=e.getDataContext();
  VirtualFile[] files=(VirtualFile[])context.getData(DataConstants.VIRTUAL_FILE_ARRAY);
  if (files == null || files.length != 3) {
    return;
  }
  DiffRequestFactory diffRequestFactory=PeerFactory.getInstance().getDiffRequestFactory();
  VirtualFile file=files[1];
  if (FileDocumentManager.getInstance().getDocument(files[0]) != null && FileDocumentManager.getInstance().getDocument(files[1]) != null && FileDocumentManager.getInstance().getDocument(files[2]) != null) {
    String originalText=createValidContent(FileDocumentManager.getInstance().getDocument(file).getText());
    String leftText=FileDocumentManager.getInstance().getDocument(files[0]).getText();
    String rightText=FileDocumentManager.getInstance().getDocument(files[2]).getText();
    Project project=(Project)context.getData(DataConstants.PROJECT);
    final MergeRequest diffData=diffRequestFactory.createMergeRequest(leftText,rightText,originalText,file,project,ActionButtonPresentation.createApplyButton());
    diffData.setVersionTitles(new String[]{files[0].getPresentableUrl(),files[1].getPresentableUrl(),files[2].getPresentableUrl()});
    diffData.setWindowTitle(DiffBundle.message("merge.files.dialog.title"));
    diffData.setHelpId("cvs.merge");
    DiffManager.getInstance().getDiffTool().show(diffData);
  }
 else {
    Messages.showErrorDialog(DiffBundle.message("merge.dialog.cannot.load.file.error.message",""),DiffBundle.message("merge.files.dialog.title"));
  }
}
