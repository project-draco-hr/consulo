{
  if (element instanceof CompositeElement) {
    ASTNode parent=element;
    ChameleonTransforming.transformChildren(parent);
    child1=null;
    child2=Helper.shiftForwardToNonSpace(parent.getFirstChildNode());
    int child1Offset=0;
    int child2Offset;
    for (; child2 != null; child1=child2, child2=Helper.shiftForwardToNonSpace(child2.getTreeNext()), child1Offset=child2Offset) {
      int length1=child1 != null ? child1.getTextLength() : 0;
      int length2=child2.getTextLength();
      child2Offset=child1Offset + length1;
      for (ASTNode child=child1 != null ? child1.getTreeNext() : parent.getFirstChildNode(); child != child2; child=child.getTreeNext()) {
        child2Offset+=child.getTextLength();
      }
      int offset1=child1 != null ? child1Offset + length1 : child2Offset;
      int offset2=child2Offset;
      int offset3=offset2 + length2;
      if (bounds[0] <= offset1 && offset2 <= bounds[1]) {
        if (child1 != null && child2 != null) {
          child2=myCodeFormatter.format(SourceTreeToPsiMap.treeElementToPsi(parent),child1,child2,mySettings,myHelper);
          child2Offset=child1Offset + length1;
          for (ASTNode child=child1 != null ? child1.getTreeNext() : parent.getFirstChildNode(); child != child2; child=child.getTreeNext()) {
            child2Offset+=child.getTextLength();
          }
          bounds[1]+=child2Offset - offset2;
          offset2=child2Offset;
          offset3=offset2 + length2;
        }
      }
      if (bounds[0] <= offset2 && offset3 <= bounds[1]) {
        if (bounds[0] > offset1) {
          String space=Helper.getSpaceText(parent,child1,child2);
          int index=bounds[0] - offset1 - 1;
          if (space.indexOf('\n',index) < 0 && space.indexOf('\r',index) < 0)           continue;
        }
        child2=myIndentAdjuster.adjustIndent(child2);
        child2=myWrapper.wrap(child2);
        child2=SourceTreeToPsiMap.psiElementToTree(myBraceEnforcer.process(SourceTreeToPsiMap.treeElementToPsi(child2)));
        child2=myCommentFormatter.formatComment(child2);
        child2Offset=child1Offset + length1;
        for (ASTNode child=child1 != null ? child1.getTreeNext() : parent.getFirstChildNode(); child != child2; child=child.getTreeNext()) {
          child2Offset+=child.getTextLength();
        }
        bounds[1]+=child2Offset + child2.getTextLength() - offset3;
      }
    }
    int offset=0;
    for (ASTNode child=element.getFirstChildNode(); child != null; child=child.getTreeNext()) {
      int offset1=offset;
      int offset2=offset + child.getTextLength();
      if (bounds[0] <= offset2 && offset1 <= bounds[1]) {
        bounds[0]-=offset1;
        bounds[1]-=offset1;
        child=processRange(child,bounds);
        bounds[0]+=offset1;
        bounds[1]+=offset1;
        offset2=offset + child.getTextLength();
      }
      offset=offset2;
    }
  }
  return element;
}
