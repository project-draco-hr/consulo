{
  final FileType fileType=myHelper.getFileType();
  final FormattingModelBuilder builder=file.getLanguage().getFormattingModelBuilder();
  if (builder != null) {
    if (file.getTextLength() > 0) {
      try {
        TextRange range=formatComments(file.getNode(),startOffset,endOffset);
        final PostprocessReformatingAspect component=file.getProject().getComponent(PostprocessReformatingAspect.class);
        component.doPostponedFormatting(file.getViewProvider());
        FormattingModel originalModel=builder.createModel(file,mySettings);
        Project project=file.getProject();
        final FormattingModel model=new DocumentBasedFormattingModel(originalModel.getRootBlock(),PsiDocumentManager.getInstance(project).getDocument(file),project,mySettings,fileType,file);
        FormatterEx.getInstanceEx().format(model,mySettings,mySettings.getIndentOptions(fileType),range,headWhitespace);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
}
