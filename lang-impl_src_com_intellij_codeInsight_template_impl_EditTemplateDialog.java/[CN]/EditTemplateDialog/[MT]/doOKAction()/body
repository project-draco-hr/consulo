{
  String key=myKeyField.getText().trim();
  if (!isAllowedTemplateAbbreviation(key)) {
    Messages.showMessageDialog(getContentPane(),CodeInsightBundle.message("dialog.edit.template.error.malformed.abbreviation"),CodeInsightBundle.message("dialog.edit.template.error.title"),Messages.getErrorIcon());
    return;
  }
  for (  TemplateGroup templateGroup : myTemplateGroups) {
    for (    TemplateImpl template : templateGroup.getElements()) {
      if (template.getKey().equals(key) && myTemplate != template) {
        Messages.showMessageDialog(getContentPane(),CodeInsightBundle.message("dialog.edit.template.error.already.exists",key,template.getGroupName()),CodeInsightBundle.message("dialog.edit.template.error.title"),Messages.getErrorIcon());
        return;
      }
    }
  }
  if (!TemplateImplUtil.validateTemplateText(myTemplateEditor.getDocument().getText())) {
    Messages.showMessageDialog(getContentPane(),CodeInsightBundle.message("dialog.edit.template.error.malformed.template"),CodeInsightBundle.message("dialog.edit.template.error.title"),Messages.getErrorIcon());
    return;
  }
  SchemesManager<TemplateGroup,TemplateGroup> schemesManager=TemplateSettings.getInstance().getSchemesManager();
  TemplateGroup group=schemesManager.findSchemeByName((String)myGroupCombo.getSelectedItem());
  if (group != null && schemesManager.isShared(group)) {
    Messages.showMessageDialog(getContentPane(),"Group " + group.getName() + " is shared, cannot be modified",CodeInsightBundle.message("dialog.edit.template.error.title"),Messages.getErrorIcon());
    return;
  }
  super.doOKAction();
}
