{
  if (elements.length == 0)   return null;
  Language language=elements[0].getContainingFile().getLanguage();
  Commenter commenter=LanguageCommenters.INSTANCE.forLanguage(language);
  if (commenter == null)   return null;
  String linePrefix=commenter.getLineCommentPrefix();
  if (linePrefix == null)   return null;
  int prefixLength=linePrefix.length();
  int startOffset=elements[0].getTextRange().getStartOffset();
  int endOffset=elements[elements.length - 1].getTextRange().getEndOffset();
  int delta=0;
  TextRange rangeToSelect=new TextRange(startOffset,startOffset);
  String startText=myProvider.getStartString();
  int descPos=startText.indexOf("?");
  if (descPos >= 0) {
    startText=startText.replace("?",DEFAULT_DESC_TEXT);
    rangeToSelect=new TextRange(startOffset + descPos,startOffset + descPos + DEFAULT_DESC_TEXT.length());
  }
  editor.getDocument().insertString(endOffset,"\n" + linePrefix + myProvider.getEndString());
  delta+=myProvider.getEndString().length() + prefixLength;
  editor.getDocument().insertString(startOffset,linePrefix + startText + "\n");
  delta+=startText.length() + prefixLength;
  rangeToSelect=rangeToSelect.shiftRight(prefixLength);
  TextRange formatRange=new TextRange(startOffset,endOffset).grown(delta);
  reformatFinalRange(project,elements[0].getContainingFile(),language,formatRange);
  return rangeToSelect;
}
