{
  PsiAnnotation target=annotationType.getModifierList().findAnnotation(CommonClassNames.TARGET_ANNOTATION_FQ_NAME);
  if (target == null) {
    return !strict;
  }
  PsiNameValuePair[] attributes=target.getParameterList().getAttributes();
  if (attributes.length == 0) {
    return !strict;
  }
  PsiAnnotationMemberValue value=attributes[0].getValue();
  LOG.assertTrue(elementTypeFields.length > 0);
  PsiClass elementTypeClass=JavaPsiFacade.getInstance(manager.getProject()).findClass("java.lang.annotation.ElementType",resolveScope);
  if (elementTypeClass == null) {
    return !strict;
  }
  for (  String fieldName : elementTypeFields) {
    PsiField field=elementTypeClass.findFieldByName(fieldName,false);
    if (field == null)     continue;
    if (value instanceof PsiArrayInitializerMemberValue) {
      PsiAnnotationMemberValue[] initializers=((PsiArrayInitializerMemberValue)value).getInitializers();
      for (      PsiAnnotationMemberValue initializer : initializers) {
        if (initializer instanceof PsiReference) {
          if (((PsiReference)initializer).isReferenceTo(field))           return true;
        }
      }
    }
 else     if (value instanceof PsiReference) {
      if (((PsiReference)value).isReferenceTo(field))       return true;
    }
  }
  return false;
}
