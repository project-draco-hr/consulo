{
  PsiElement parent=getParent();
  if (parent instanceof PsiAnnotationOwner) {
    return (PsiAnnotationOwner)parent;
  }
  if (parent instanceof PsiNewExpression) {
    return ((PsiNewExpression)parent).getOwner(this);
  }
  if (parent instanceof PsiMethod) {
    PsiType type=((PsiMethod)parent).getReturnType();
    return JavaSharedImplUtil.findAnnotatedSubtype(type,this);
  }
  if (parent instanceof PsiReferenceExpression) {
    PsiElement ctx=parent.getParent();
    if (ctx instanceof PsiMethodReferenceExpression) {
      return new PsiClassReferenceType((PsiJavaCodeReferenceElement)parent,null);
    }
  }
 else   if (parent instanceof PsiJavaCodeReferenceElement) {
    PsiElement ctx=PsiTreeUtil.skipParentsOfType(parent,PsiJavaCodeReferenceElement.class);
    if (ctx instanceof PsiReferenceList || ctx instanceof PsiNewExpression || ctx instanceof PsiTypeElement) {
      return new PsiClassReferenceType((PsiJavaCodeReferenceElement)parent,null);
    }
  }
  return null;
}
