{
  PsiElement parent=getParent();
  if (parent instanceof PsiAnnotationOwner) {
    return (PsiAnnotationOwner)parent;
  }
  if (parent instanceof PsiNewExpression) {
    return ((PsiNewExpression)parent).getOwner(this);
  }
  if (parent instanceof PsiReferenceExpression) {
    PsiElement ctx=parent.getParent();
    if (ctx instanceof PsiMethodReferenceExpression) {
      return new PsiClassReferenceType((PsiJavaCodeReferenceElement)parent,null);
    }
  }
 else   if (parent instanceof PsiJavaCodeReferenceElement) {
    PsiElement ctx=PsiTreeUtil.skipParentsOfType(parent,PsiJavaCodeReferenceElement.class);
    if (ctx instanceof PsiReferenceList || ctx instanceof PsiNewExpression || ctx instanceof PsiTypeElement) {
      return new PsiClassReferenceType((PsiJavaCodeReferenceElement)parent,null);
    }
  }
  PsiTypeElement typeElement=null;
  PsiElement anchor=null;
  if (parent instanceof PsiMethod) {
    typeElement=((PsiMethod)parent).getReturnTypeElement();
    anchor=((PsiMethod)parent).getParameterList();
  }
 else   if (parent instanceof PsiField || parent instanceof PsiParameter || parent instanceof PsiLocalVariable) {
    typeElement=((PsiVariable)parent).getTypeElement();
    anchor=((PsiVariable)parent).getNameIdentifier();
  }
  if (typeElement != null && anchor != null) {
    return JavaSharedImplUtil.getType(typeElement,anchor,this);
  }
  return null;
}
