{
  Collection<Change> filteredChanges=new HashSet<Change>();
  for (  Change change : changes) {
    final ContentRevision beforeRevision=change.getBeforeRevision();
    if (beforeRevision != null) {
      final VirtualFile root=GitUtil.getGitRootOrNull(beforeRevision.getFile());
      if (root != null && rootsToSave.contains(root)) {
        filteredChanges.add(change);
        continue;
      }
    }
    final ContentRevision afterRevision=change.getAfterRevision();
    if (afterRevision != null) {
      final VirtualFile root=GitUtil.getGitRootOrNull(afterRevision.getFile());
      if (root != null && rootsToSave.contains(root)) {
        filteredChanges.add(change);
      }
    }
  }
  return filteredChanges;
}
