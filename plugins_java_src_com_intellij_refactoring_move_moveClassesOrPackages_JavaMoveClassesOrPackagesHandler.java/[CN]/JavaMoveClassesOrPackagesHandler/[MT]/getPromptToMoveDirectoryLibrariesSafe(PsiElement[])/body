{
  if (elements.length == 0 || elements.length > 1)   return null;
  final Project project=elements[0].getProject();
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  if (!(elements[0] instanceof PsiDirectory))   return null;
  final PsiDirectory directory=((PsiDirectory)elements[0]);
  if (RefactoringUtil.isSourceRoot(directory)) {
    return null;
  }
  final PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage(directory);
  if (aPackage == null)   return null;
  if ("".equals(aPackage.getQualifiedName()))   return null;
  final PsiDirectory[] directories=aPackage.getDirectories();
  boolean inLib=false;
  for (  PsiDirectory psiDirectory : directories) {
    inLib|=!fileIndex.isInContent(psiDirectory.getVirtualFile());
  }
  return inLib ? "Package \'" + aPackage.getName() + "\' contains directories in libraries which cannot be moved. Do you want to move current directory" : null;
}
