{
  myOptions=options;
  myOptionsList.setCellRenderer(new OptionsReneder());
  myOptionsList.setModel(myOptionsModel);
  ListSelectionModel selectionModel=myOptionsList.getSelectionModel();
  selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  selectionModel.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      TextDiffType selection=getSelectedOption();
      if (selection == null) {
        myBackgroundColorPanel.setEnabled(false);
        myStripeMarkColorPanel.setEnabled(false);
      }
 else {
        myBackgroundColorPanel.setEnabled(true);
        myStripeMarkColorPanel.setEnabled(true);
        MyColorAndFontDescription description=getSelectedDescription();
        if (description != null) {
          myBackgroundColorPanel.setSelectedColor(description.getBackgroundColor());
          myStripeMarkColorPanel.setSelectedColor(description.getStripeMarkColor());
        }
      }
      myDispatcher.getMulticaster().selectedOptionChanged(selection);
    }
  }
);
  myBackgroundColorPanel.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      MyColorAndFontDescription selectedDescription=getSelectedDescription();
      if (!checkModifiableScheme()) {
        myBackgroundColorPanel.setSelectedColor(selectedDescription.getBackgroundColor());
        return;
      }
      selectedDescription.setBackgroundColor(myBackgroundColorPanel.getSelectedColor());
      myDispatcher.getMulticaster().settingsChanged();
    }
  }
);
  myStripeMarkColorPanel.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      MyColorAndFontDescription selectedDescription=getSelectedDescription();
      if (!checkModifiableScheme()) {
        myStripeMarkColorPanel.setSelectedColor(selectedDescription.getStripeMarkColor());
        return;
      }
      selectedDescription.setStripeMarkColor(myStripeMarkColorPanel.getSelectedColor());
      myDispatcher.getMulticaster().settingsChanged();
    }
  }
);
}
