{
  final Matcher matcher=ANDROID_LOG_MESSAGE_PATTERN.matcher(line);
  final boolean messageHeader=matcher.matches();
  if (messageHeader) {
    String s=matcher.group(1);
    if (s.length() > 0) {
      final Log.LogLevel logLevel=getLogLevel(s);
      if (logLevel != null) {
        myPrevMessageLogLevel=logLevel;
      }
    }
    s=matcher.group(2).trim();
    if (s.length() > 0) {
      myPrevTag=s;
    }
    s=matcher.group(3).trim();
    if (s.length() > 0) {
      myPrevPid=s;
    }
  }
  final boolean applicable=isApplicable(line);
  final boolean applicableByCustomFilter=isApplicableByCustomFilter(line);
  String messagePrefix;
  if (messageHeader) {
    messagePrefix=null;
    myMessageBuilder=new StringBuilder(line);
    myMessageBuilder.append('\n');
    myFullMessageApplicable=applicable;
    myFullMessageApplicableByCustomFilter=applicableByCustomFilter;
  }
 else {
    messagePrefix=(myFullMessageApplicable || applicable) && (myFullMessageApplicableByCustomFilter || applicableByCustomFilter) && !(myFullMessageApplicable && myFullMessageApplicableByCustomFilter) ? myMessageBuilder.toString() : null;
    myMessageBuilder.append(line).append('\n');
    myFullMessageApplicable=myFullMessageApplicable || applicable;
    myFullMessageApplicableByCustomFilter=myFullMessageApplicableByCustomFilter || applicableByCustomFilter;
  }
  final Key key=myPrevMessageLogLevel != null ? getProcessOutputType(myPrevMessageLogLevel) : ProcessOutputTypes.STDOUT;
  return new MyProcessingResult(key,myFullMessageApplicable && myFullMessageApplicableByCustomFilter,messagePrefix);
}
