{
  if ((!EventQueue.isDispatchThread() || !myFileEditorManager.isInsideChange()) && !Comparing.equal(oldSelectedEditor,newSelectedEditor)) {
    myFileEditorManager.notifyPublisher(new Runnable(){
      @Override public void run(){
        final FileEditorManagerEvent event=new FileEditorManagerEvent(myFileEditorManager,myFile,oldSelectedEditor,myFile,newSelectedEditor);
        final FileEditorManagerListener publisher=myFileEditorManager.getProject().getMessageBus().syncPublisher(FileEditorManagerListener.FILE_EDITOR_MANAGER);
        publisher.selectionChanged(event);
      }
    }
);
    final JComponent component=newSelectedEditor.getComponent();
    final EditorWindowHolder holder=UIUtil.getParentOfType(EditorWindowHolder.class,component);
    if (holder != null) {
      ((FileEditorManagerImpl)myFileEditorManager).addSelectionRecord(myFile,holder.getEditorWindow());
    }
  }
}
