{
  LOG.assertTrue(endOffset <= text.length());
  for (int index=startOffset; index < endOffset; index++) {
    if (progress != null)     progress.checkCanceled();
    index=searcher.scan(text,textArray,index,endOffset);
    if (index < 0)     return -1;
    if (!searcher.isJavaIdentifier()) {
      return index;
    }
    if (index > startOffset) {
      char c=textArray != null ? textArray[index - 1] : text.charAt(index - 1);
      if (Character.isJavaIdentifierPart(c) && c != '$') {
        if (searcher.isHandleEscapeSequences() && (index < 2 || !isNotEscapedBackslash(text,textArray,startOffset,index - 2))) {
          continue;
        }
      }
 else       if (index > 0 && searcher.isHandleEscapeSequences() && isNotEscapedBackslash(text,textArray,startOffset,index - 1)) {
        continue;
      }
    }
    final int patternLength=searcher.getPattern().length();
    if (index + patternLength < endOffset) {
      char c=textArray != null ? textArray[index + patternLength] : text.charAt(index + patternLength);
      if (Character.isJavaIdentifierPart(c) && c != '$') {
        continue;
      }
    }
    return index;
  }
  return -1;
}
