{
  Manifest manifest=facet.getManifest();
  if (manifest == null) {
    return;
  }
  Application application=manifest.getApplication();
  if (application == null) {
    return;
  }
  List<ThemeData> activityThemesList=new ArrayList<ThemeData>();
  ThemeData preferredTheme=null;
  XmlTag applicationTag=application.getXmlTag();
  if (applicationTag != null) {
    String applicationThemeRef=applicationTag.getAttributeValue("theme",SdkConstants.NS_RESOURCES);
    if (applicationThemeRef != null) {
      preferredTheme=getThemeByRef(applicationThemeRef);
    }
  }
  if (preferredTheme == null) {
    AndroidPlatform platform=AndroidPlatform.getInstance(myProfile.getModule());
    IAndroidTarget target=platform != null ? platform.getTarget() : null;
    IAndroidTarget renderingTarget=myProfile.getSelectedTarget();
    State configuration=myProfile.getSelectedDeviceConfiguration();
    ScreenSize screenSize=configuration == null ? null : configuration.getHardware().getScreen().getSize();
    preferredTheme=getThemeByRef(getDefaultTheme(target,renderingTarget,screenSize));
  }
  if (preferredTheme != null && !myAddedThemes.contains(preferredTheme) && fromProject == preferredTheme.isProjectTheme()) {
    myAddedThemes.add(preferredTheme);
    resultList.add(preferredTheme);
  }
  for (  Activity activity : application.getActivities()) {
    XmlTag activityTag=activity.getXmlTag();
    if (activityTag != null) {
      String activityThemeRef=activityTag.getAttributeValue("theme",SdkConstants.NS_RESOURCES);
      if (activityThemeRef != null) {
        ThemeData activityTheme=getThemeByRef(activityThemeRef);
        if (!myAddedThemes.contains(activityTheme) && fromProject == activityTheme.isProjectTheme()) {
          myAddedThemes.add(activityTheme);
          activityThemesList.add(activityTheme);
        }
      }
    }
  }
  Collections.sort(activityThemesList);
  resultList.addAll(activityThemesList);
}
