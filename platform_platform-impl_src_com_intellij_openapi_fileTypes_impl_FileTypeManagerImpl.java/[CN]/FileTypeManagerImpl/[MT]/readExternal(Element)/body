{
  int savedVersion=getVersion(parentNode);
  for (  final Object o : parentNode.getChildren()) {
    final Element e=(Element)o;
    if (ELEMENT_FILETYPES.equals(e.getName())) {
      List children=e.getChildren(ELEMENT_FILETYPE);
      for (      final Object aChildren : children) {
        Element element=(Element)aChildren;
        loadFileType(element,true,null,false,null);
      }
    }
 else     if (ELEMENT_IGNOREFILES.equals(e.getName())) {
      myIgnoredPatterns.setIgnoreMasks(e.getAttributeValue(ATTRIBUTE_LIST));
    }
 else     if (AbstractFileType.ELEMENT_EXTENSIONMAP.equals(e.getName())) {
      readGlobalMappings(e);
    }
  }
  if (savedVersion == 0) {
    addIgnore(".svn");
  }
  if (savedVersion < 2) {
    restoreStandardFileExtensions();
  }
  if (savedVersion < 4) {
    addIgnore("*.pyc");
    addIgnore("*.pyo");
    addIgnore(".git");
  }
  if (savedVersion < 5) {
    addIgnore("*.hprof");
  }
  if (savedVersion < 6) {
    addIgnore("_svn");
  }
  if (savedVersion < 7) {
    addIgnore(".hg");
  }
  if (savedVersion < 8) {
    addIgnore("*.lib");
    addIgnore("*~");
  }
  if (savedVersion < 9) {
    addIgnore("__pycache__");
  }
  if (savedVersion < 10) {
    addIgnore(".bundle");
  }
  if (savedVersion < VERSION) {
    addIgnore("*.rbc");
  }
}
