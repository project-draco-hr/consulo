{
  final Collection<VirtualFile> changed=new ArrayList<VirtualFile>();
  for (  VirtualFile file : files) {
    boolean shouldRedetect=wasAutoDetectedBefore(file) && isDetectable(file);
    if (toLog()) {
      log("F: Redetect file: " + file.getName() + "; shouldRedetect: "+ shouldRedetect);
    }
    if (shouldRedetect) {
      int id=file instanceof VirtualFileWithId ? ((VirtualFileWithId)file).getId() : -1;
      FileType before=getAutoDetectedType(file,id);
      packedFlags.set(id,ATTRIBUTES_WERE_LOADED_MASK);
      file.putUserData(DETECTED_FROM_CONTENT_FILE_TYPE_KEY,null);
      FileType after=getFileTypeByFile(file);
      if (toLog()) {
        log("F: After redetect file: " + file.getName() + "; before: "+ before.getName()+ "; after: "+ after.getName()+ "; now getFileType()="+ file.getFileType().getName());
      }
      if (before != after) {
        changed.add(file);
        LOG.debug(file + " type was re-detected. Was: " + before.getName()+ "; now: "+ after.getName());
      }
    }
  }
  if (!changed.isEmpty()) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        FileContentUtilCore.reparseFiles(changed);
      }
    }
,ApplicationManager.getApplication().getDisposed());
  }
}
