{
  final String methodName=method.getName();
  final PsiParameterList parameterList=method.getParameterList();
  final boolean isClone=HardcodedMethodConstants.CLONE.equals(methodName) && parameterList.getParametersCount() == 0;
  if (isClone) {
    method.accept(new PsiRecursiveElementVisitor(){
      @Override public void visitNewExpression(      @NotNull PsiNewExpression newExpression){
        super.visitNewExpression(newExpression);
        final PsiExpression[] arrayDimensions=newExpression.getArrayDimensions();
        if (arrayDimensions.length != 0) {
          return;
        }
        if (newExpression.getArrayInitializer() != null) {
          return;
        }
        if (newExpression.getAnonymousClass() != null) {
          return;
        }
        if (PsiTreeUtil.getParentOfType(newExpression,PsiThrowStatement.class) != null) {
          return;
        }
        registerError(newExpression);
      }
    }
);
  }
}
