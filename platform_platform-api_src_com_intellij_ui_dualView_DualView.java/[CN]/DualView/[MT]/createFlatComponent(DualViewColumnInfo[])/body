{
  ArrayList<ColumnInfo> shownColumns=new ArrayList<ColumnInfo>();
  for (int i=0; i < columns.length; i++) {
    DualViewColumnInfo column=columns[i];
    if (column.shouldBeShownIsTheTable())     shownColumns.add(column);
  }
  ListTableModel flatModel=new ListTableModel(shownColumns.toArray(new ColumnInfo[shownColumns.size()]));
  myFlatView=new TableView(flatModel){
    public TableCellRenderer getCellRenderer(    int row,    int column){
      return createWrappedRenderer(super.getCellRenderer(row,column));
    }
    @NotNull @Override public Component prepareRenderer(    @NotNull TableCellRenderer renderer,    int row,    int column){
      final Component c=super.prepareRenderer(renderer,row,column);
      if (c instanceof JComponent && !myFlatView.getCellSelectionEnabled()) {
        ((JComponent)c).setBorder(null);
      }
      return c;
    }
  }
;
  myFlatView.setCellSelectionEnabled(false);
  myFlatView.setColumnSelectionAllowed(false);
  myFlatView.setRowSelectionAllowed(true);
  refreshFlatModel();
  JPanel result=new JPanel(new BorderLayout());
  result.add(ScrollPaneFactory.createScrollPane(myFlatView),BorderLayout.CENTER);
  return result;
}
