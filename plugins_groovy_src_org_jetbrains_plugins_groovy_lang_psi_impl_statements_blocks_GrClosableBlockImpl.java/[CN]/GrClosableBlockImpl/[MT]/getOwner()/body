{
  return CachedValuesManager.getManager(getProject()).getCachedValue(this,new CachedValueProvider<PsiVariable>(){
    @Override public Result<PsiVariable> compute(){
      final GroovyPsiElement context=PsiTreeUtil.getParentOfType(GrClosableBlockImpl.this,GrTypeDefinition.class,GrClosableBlock.class,GroovyFile.class);
      final PsiElementFactory factory=JavaPsiFacade.getInstance(getProject()).getElementFactory();
      PsiType type=null;
      if (context instanceof GrTypeDefinition) {
        type=factory.createType((PsiClass)context);
      }
 else       if (context instanceof GrClosableBlock) {
        type=GrClosureType.create((GrClosableBlock)context,true);
      }
 else       if (context instanceof GroovyFile) {
        final PsiClass scriptClass=((GroovyFile)context).getScriptClass();
        if (scriptClass != null && GroovyNamesUtil.isIdentifier(scriptClass.getName()))         type=factory.createType(scriptClass);
      }
      if (type == null) {
        type=TypesUtil.getJavaLangObject(GrClosableBlockImpl.this);
      }
      PsiVariable owner=new GrLightVariable(getManager(),OWNER_NAME,type,GrClosableBlockImpl.this);
      return Result.create(owner,PsiModificationTracker.MODIFICATION_COUNT);
    }
  }
);
}
