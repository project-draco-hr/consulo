{
  if (lastParent == null || !(place instanceof GroovyPsiElement))   return true;
  ResolveState state=_state.put(ResolverProcessor.RESOLVE_CONTEXT,this);
  if (!super.processDeclarations(processor,state,lastParent,place))   return false;
  PsiElement current=place;
  boolean it_already_processed=false;
  while (current != this && current != null) {
    if (current instanceof GrClosableBlock && !((GrClosableBlock)current).hasParametersSection()) {
      it_already_processed=true;
      break;
    }
    current=current.getParent();
  }
  if (!it_already_processed || hasParametersSection()) {
    for (    final PsiParameter parameter : getAllParameters()) {
      if (!ResolveUtil.processElement(processor,parameter,state))       return false;
    }
  }
  if (processor instanceof PropertyResolverProcessor && OWNER_NAME.equals(((PropertyResolverProcessor)processor).getName())) {
    processor.handleEvent(ResolveUtil.DECLARATION_SCOPE_PASSED,this);
  }
  if (!ResolveUtil.processElement(processor,getOwner(),state))   return false;
  final PsiClass closureClass=JavaPsiFacade.getInstance(getProject()).findClass(GROOVY_LANG_CLOSURE,getResolveScope());
  if (closureClass != null) {
    if (!closureClass.processDeclarations(processor,state,lastParent,place))     return false;
    if (!ResolveUtil.processNonCodeMethods(GrClosureType.create(this),processor,(GroovyPsiElement)place,state))     return false;
  }
  return true;
}
