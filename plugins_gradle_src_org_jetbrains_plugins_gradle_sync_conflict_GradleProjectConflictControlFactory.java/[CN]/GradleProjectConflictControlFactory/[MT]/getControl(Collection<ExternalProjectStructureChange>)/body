{
  final Ref<GradleProjectRenameChange> renameChangeRef=new Ref<GradleProjectRenameChange>();
  final Ref<LanguageLevelChange> languageLevelChangeRef=new Ref<LanguageLevelChange>();
  ExternalProjectStructureChangeVisitor visitor=new ExternalProjectStructureChangeVisitorAdapter(){
    @Override public void visit(    @NotNull GradleProjectRenameChange change){
      renameChangeRef.set(change);
    }
    @Override public void visit(    @NotNull LanguageLevelChange change){
      languageLevelChangeRef.set(change);
    }
  }
;
  for (  ExternalProjectStructureChange change : changes) {
    if (renameChangeRef.get() != null && languageLevelChangeRef.get() != null) {
      break;
    }
    change.invite(visitor);
  }
  final GradleProjectRenameChange renameChange=renameChangeRef.get();
  final LanguageLevelChange languageLevelChange=languageLevelChangeRef.get();
  if (renameChange == null && languageLevelChange == null) {
    return null;
  }
  MatrixControlBuilder builder=GradleUtil.getConflictChangeBuilder();
  if (renameChange != null) {
    builder.addRow(ExternalSystemBundle.message("gradle.import.structure.settings.label.name"),renameChange.getExternalValue(),renameChange.getIdeValue());
  }
  if (languageLevelChange != null) {
    builder.addRow(ExternalSystemBundle.message("gradle.import.structure.settings.label.language.level"),getTextToShow(languageLevelChange.getExternalValue()),getTextToShow(languageLevelChange.getIdeValue()));
  }
  return builder.build();
}
