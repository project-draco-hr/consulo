{
  if (index < 0) {
    return convert(getFragments(side,false),value,approximate);
  }
  CorrectedChange change=myChanges.get(index);
  int shift=change.newLength - change.oldLength;
  if (change.side != side) {
    int converted=convertFromTwoside(value,side,approximate,index - 1);
    if (converted < change.startOneside) {
      return converted;
    }
    if (converted >= change.startOneside + change.oldLength) {
      return converted + shift;
    }
    if (!approximate)     return -1;
    return append(converted,Math.min(change.newLength,converted - change.startOneside));
  }
 else {
    if (value < change.startTwoside) {
      return convertFromTwoside(value,side,approximate,index - 1);
    }
    if (value >= change.startTwoside + change.newLength) {
      int converted=convertFromTwoside(value - shift,side,approximate,index - 1);
      return append(converted,shift);
    }
    int convertedStart=convertFromTwoside(change.startTwoside,side,approximate,index - 1);
    return append(convertedStart,value - change.startTwoside);
  }
}
