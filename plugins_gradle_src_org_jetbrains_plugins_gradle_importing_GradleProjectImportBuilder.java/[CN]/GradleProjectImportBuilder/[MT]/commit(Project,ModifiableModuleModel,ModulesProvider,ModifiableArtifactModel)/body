{
  System.setProperty(GradleConstants.NEWLY_IMPORTED_PROJECT,Boolean.TRUE.toString());
  final GradleProject gradleProject=getGradleProject();
  if (gradleProject != null) {
    final LanguageLevel gradleLanguageLevel=gradleProject.getLanguageLevel();
    final LanguageLevelProjectExtension languageLevelExtension=LanguageLevelProjectExtension.getInstance(project);
    if (gradleLanguageLevel != languageLevelExtension.getLanguageLevel()) {
      languageLevelExtension.setLanguageLevel(gradleLanguageLevel);
    }
  }
  final Runnable task=new Runnable(){
    @Override public void run(){
      GradleSettings.applyLinkedProjectPath(myProjectFile.getAbsolutePath(),project);
      if (!StringUtil.isEmpty(GradleSettings.getInstance(project).getGradleHome())) {
        return;
      }
      final String gradleHome=GradleSettings.getInstance(ProjectManager.getInstance().getDefaultProject()).getGradleHome();
      if (!StringUtil.isEmpty(gradleHome)) {
        GradleSettings.applyGradleHome(gradleHome,project);
      }
    }
  }
;
  if (project.isInitialized()) {
    task.run();
  }
 else {
    StartupManager.getInstance(project).registerPostStartupActivity(task);
  }
  GradleModulesImporter importer=new GradleModulesImporter();
  Map<GradleModule,Module> mappings=importer.importModules(myModuleMappings.values(),project,model,myProjectFile.getAbsolutePath());
  return new ArrayList<Module>(mappings.values());
}
