{
  final PsiClass aClass=PsiTypesUtil.getPsiClass(qualifierType);
  if (aClass == null)   return;
  String[] superClassNames=KEY.getCachedValue(aClass);
  if (superClassNames == null) {
    Set<PsiClass> superClasses=new HashSet<PsiClass>();
    superClasses.add(aClass);
    InheritanceUtil.getSuperClasses(aClass,superClasses,true);
    superClassNames=new String[superClasses.size()];
    int i=0;
    for (    PsiClass superClass : superClasses) {
      superClassNames[i++]=superClass.getQualifiedName();
    }
    superClassNames=KEY.putCachedValue(aClass,superClassNames);
  }
  final MultiMap<String,GrClassEnhancer> enhancers=GrClassEnhancer.getEnhancers();
  for (  String superClassName : superClassNames) {
    for (    GrClassEnhancer enhancer : enhancers.get(superClassName)) {
      if (!enhancer.processDynamicElements(qualifierType,aClass,processor,place,state))       return;
    }
  }
}
