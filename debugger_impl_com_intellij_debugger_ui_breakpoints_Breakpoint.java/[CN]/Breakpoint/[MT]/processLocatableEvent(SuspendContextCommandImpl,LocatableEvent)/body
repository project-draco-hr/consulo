{
  final SuspendContextImpl context=action.getSuspendContext();
  if (!isValid()) {
    context.getDebugProcess().getRequestsManager().deleteRequest(this);
    return true;
  }
  final String[] title=new String[]{DebuggerBundle.message("title.error.evaluating.breakpoint.condition")};
  try {
    final StackFrameProxyImpl frameProxy=context.getThread().frame(0);
    if (frameProxy == null) {
      return true;
    }
    final EvaluationContextImpl evaluationContext=new EvaluationContextImpl(action.getSuspendContext(),frameProxy,getThisObject(context,event));
    if (!evaluateCondition(evaluationContext,event)) {
      return true;
    }
    title[0]=DebuggerBundle.message("title.error.evaluating.breakpoint.action");
    runAction(evaluationContext,event);
  }
 catch (  final EvaluateException ex) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      System.out.println(ex.getMessage());
      return true;
    }
    final boolean[] shouldResume=new boolean[]{true};
    DebuggerInvocationUtil.invokeAndWait(getProject(),new Runnable(){
      public void run(){
        DebuggerSession session=DebuggerManagerEx.getInstanceEx(getProject()).getSession(context.getDebugProcess());
        DebuggerPanelsManager.getInstance(getProject()).toFront(session);
        final String text=DebuggerBundle.message("error.evaluating.breakpoint.condition.or.action",getDisplayName(),ex.getMessage());
        if (LOG.isDebugEnabled()) {
          LOG.debug(text);
        }
        shouldResume[0]=Messages.showYesNoDialog(getProject(),text,title[0],Messages.getQuestionIcon()) != 0;
      }
    }
,ModalityState.NON_MMODAL);
    return shouldResume[0];
  }
  return false;
}
