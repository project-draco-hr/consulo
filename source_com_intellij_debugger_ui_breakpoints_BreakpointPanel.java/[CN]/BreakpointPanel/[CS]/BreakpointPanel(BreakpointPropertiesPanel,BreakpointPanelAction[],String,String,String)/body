{
  myPropertiesPanel=propertiesPanel;
  myActions=actions;
  myBreakpointCategory=breakpointCategory;
  myDisplayName=displayName;
  myHelpID=helpId;
  myTable=new BreakpointTable();
  myTree=new BreakpointTree();
  myTablePlace.setLayout(new CardLayout());
  myTablePlace.add(ScrollPaneFactory.createScrollPane(myTable),TABLE_VIEW);
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateCurrentBreakpointPropertiesPanel();
    }
  }
);
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      updateCurrentBreakpointPropertiesPanel();
    }
  }
);
  myTable.getModel().addTableModelListener(new TableModelListener(){
    public void tableChanged(    TableModelEvent e){
      if (e.getType() == TableModelEvent.UPDATE) {
        updateCurrentBreakpointPropertiesPanel();
      }
    }
  }
);
  myTree.getModel().addTreeModelListener(new TreeModelListener(){
    public void treeNodesChanged(    TreeModelEvent e){
    }
    public void treeNodesInserted(    TreeModelEvent e){
    }
    public void treeNodesRemoved(    TreeModelEvent e){
    }
    public void treeStructureChanged(    TreeModelEvent e){
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          ensureSelectionExists();
          updateButtons();
        }
      }
);
    }
  }
);
  myPropertiesPanelPlace.setLayout(new CardLayout());
  final JPanel stubPanel=new JPanel();
  stubPanel.setMinimumSize(myPropertiesPanel.getPanel().getMinimumSize());
  myPropertiesPanelPlace.add(stubPanel,PROPERTIES_STUB);
  myPropertiesPanelPlace.add(myPropertiesPanel.getPanel(),PROPERTIES_DATA);
  myBreakPointsPanel.setBorder(IdeBorderFactory.createEmptyBorder(6,6,0,6));
  myButtonsPanel.setLayout(new GridBagLayout());
  for (int idx=0; idx < actions.length; idx++) {
    final BreakpointPanelAction action=actions[idx];
    action.setPanel(this);
    final AbstractButton button=action.isStateAction() ? new JCheckBox(action.getName()) : new JButton(action.getName());
    action.setButton(button);
    button.addActionListener(action);
    final double weighty=(idx == actions.length - 1) ? 1.0 : 0.0;
    myButtonsPanel.add(button,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,weighty,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,2,2,2),0,0));
  }
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateButtons();
    }
  }
);
  myTable.getModel().addTableModelListener(new TableModelListener(){
    public void tableChanged(    TableModelEvent e){
      myEventDispatcher.getMulticaster().breakpointsChanged();
    }
  }
);
  myTablePlace.add(ScrollPaneFactory.createScrollPane(myTree),TREE_VIEW);
  updateCurrentBreakpointPropertiesPanel();
}
