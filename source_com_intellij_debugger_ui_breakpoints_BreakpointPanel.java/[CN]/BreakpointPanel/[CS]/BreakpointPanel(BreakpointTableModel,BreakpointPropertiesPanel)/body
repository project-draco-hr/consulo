{
  myTableModel=tableModel;
  myPropertiesPanel=propertiesPanel;
  myTable=new Table(myTableModel);
  myTable.setColumnSelectionAllowed(false);
  InputMap inputMap=myTable.getInputMap();
  ActionMap actionMap=myTable.getActionMap();
  Object o=inputMap.get(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE,0));
  if (o == null) {
    o="enable_disable";
    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE,0),o);
  }
  actionMap.put(o,new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      if (myTable.isEditing())       return;
      int[] indices=myTable.getSelectedRows();
      boolean currentlyMarked=true;
      for (int i=0; i < indices.length; i++) {
        final Boolean isMarked=(Boolean)myTable.getValueAt(indices[i],BreakpointTableModel.ENABLED_STATE);
        currentlyMarked=isMarked != null ? isMarked.booleanValue() : false;
        if (!currentlyMarked) {
          break;
        }
      }
      final Boolean valueToSet=currentlyMarked ? Boolean.FALSE : Boolean.TRUE;
      for (int i=0; i < indices.length; i++) {
        myTable.setValueAt(valueToSet,indices[i],BreakpointTableModel.ENABLED_STATE);
      }
    }
  }
);
  myTable.setShowGrid(false);
  myTable.setIntercellSpacing(new Dimension(0,0));
  myTable.setTableHeader(null);
  myTable.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
  myTable.setColumnSelectionAllowed(false);
  JScrollPane pane=ScrollPaneFactory.createScrollPane(myTable);
  int width=new JCheckBox().getPreferredSize().width;
  TableColumnModel columnModel=myTable.getColumnModel();
  TableColumn column=columnModel.getColumn(BreakpointTableModel.ENABLED_STATE);
  column.setPreferredWidth(width);
  column.setMaxWidth(width);
  columnModel.getColumn(BreakpointTableModel.NAME).setCellRenderer(new BreakpointNameCellRenderer());
  myTablePlace.setLayout(new BorderLayout());
  myTablePlace.add(pane,BorderLayout.CENTER);
  addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      refreshUI();
    }
  }
);
  myTableModel.addTableModelListener(new TableModelListener(){
    public void tableChanged(    TableModelEvent e){
      if (e.getType() == TableModelEvent.UPDATE) {
        refreshUI();
      }
    }
  }
);
  myTable.requestFocus();
  myStubPanel=new JPanel();
  myStubPanel.setMinimumSize(myPropertiesPanel.getPanel().getMinimumSize());
  myPropertiesPanelPlace.setLayout(new BorderLayout());
  myBreakPointsPanel.setBorder(IdeBorderFactory.createEmptyBorder(6,6,0,6));
  refreshUI();
}
