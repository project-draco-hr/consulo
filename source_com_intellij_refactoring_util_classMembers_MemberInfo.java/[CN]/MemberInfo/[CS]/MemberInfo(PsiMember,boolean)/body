{
  LOG.assertTrue(member.isValid());
  this.member=member;
  if (member instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)member;
    displayName=PsiFormatUtil.formatMethod(method,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.TYPE_AFTER| PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.TYPE_AFTER);
    PsiMethod[] superMethods=PsiSuperMethodUtil.findSuperMethods(method);
    if (superMethods.length > 0) {
      overrides=!superMethods[0].hasModifierProperty(PsiModifier.ABSTRACT) ? Boolean.TRUE : Boolean.FALSE;
    }
 else {
      overrides=null;
    }
    isStatic=method.hasModifierProperty(PsiModifier.STATIC);
  }
 else   if (member instanceof PsiField) {
    PsiField field=(PsiField)member;
    displayName=PsiFormatUtil.formatVariable(field,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.TYPE_AFTER,PsiSubstitutor.EMPTY);
    isStatic=field.hasModifierProperty(PsiModifier.STATIC);
    overrides=null;
  }
 else   if (member instanceof PsiClass) {
    PsiClass aClass=(PsiClass)member;
    if (isSuperClass) {
      if (aClass.isInterface()) {
        displayName="implements " + aClass.getName();
        overrides=Boolean.FALSE;
      }
 else {
        displayName="extends " + aClass.getName();
        overrides=Boolean.TRUE;
      }
    }
 else {
      displayName=aClass.getName();
      overrides=null;
    }
    isStatic=aClass.hasModifierProperty(PsiModifier.STATIC);
  }
 else {
    LOG.assertTrue(false);
    isStatic=false;
    displayName="";
    overrides=null;
  }
}
