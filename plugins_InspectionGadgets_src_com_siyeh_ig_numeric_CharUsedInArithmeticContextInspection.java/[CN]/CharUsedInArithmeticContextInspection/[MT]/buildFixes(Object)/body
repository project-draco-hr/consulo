{
  List<InspectionGadgetsFix> result=new ArrayList<InspectionGadgetsFix>();
  PsiElement expression=(PsiElement)infos[0];
  PsiElement parent=expression.getParent();
  if (parent instanceof PsiExpression) {
    final PsiExpression binaryExpression=(PsiExpression)parent;
    final PsiType type=binaryExpression.getType();
    if (type != null && !type.equals(PsiType.CHAR)) {
      final String typeText=type.getCanonicalText();
      result.add(new CharUsedInArithmeticContentCastFix(typeText));
    }
  }
  if (!(expression instanceof PsiLiteralExpression)) {
    return result.toArray(new InspectionGadgetsFix[result.size()]);
  }
  while (parent instanceof PsiPolyadicExpression) {
    if (TypeUtils.expressionHasType((PsiExpression)parent,CommonClassNames.JAVA_LANG_STRING)) {
      result.add(new CharUsedInArithmeticContentFix());
      break;
    }
    parent=parent.getParent();
  }
  return result.toArray(new InspectionGadgetsFix[result.size()]);
}
