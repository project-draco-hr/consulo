{
  final List<Pair<String,Integer>> prefs=new ArrayList<Pair<String,Integer>>(prefixes.size());
  prefixes.forEachEntry(new TObjectIntProcedure<String>(){
    @Override public boolean execute(    String s,    int count){
      prefs.add(Pair.create(s,count));
      return true;
    }
  }
);
  Collections.sort(prefs,new Comparator<Pair<String,Integer>>(){
    @Override public int compare(    Pair<String,Integer> o1,    Pair<String,Integer> o2){
      return o2.second.compareTo(o1.second);
    }
  }
);
  int i=0;
  for (  Pair<String,Integer> pref : prefs) {
    Integer count=pref.second;
    System.out.printf("%60.60s : %d\n",pref.first,count);
    if (i++ > 100) {
      System.out.println("\n.......<" + count + "...\n");
      break;
    }
  }
  return prefs;
}
