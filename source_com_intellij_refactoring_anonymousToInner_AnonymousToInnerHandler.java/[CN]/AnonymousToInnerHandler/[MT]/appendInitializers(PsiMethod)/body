{
  final PsiClassInitializer[] initializers=myAnonClass.getInitializers();
  for (int i=0; i < initializers.length; i++) {
    PsiClassInitializer initializer=initializers[i];
    if (!initializer.hasModifierProperty(PsiModifier.STATIC)) {
      final PsiCodeBlock body=initializer.getBody();
      if (body != null) {
        PsiElement firstBodyElement=body.getFirstBodyElement();
        if (firstBodyElement != null) {
          constructor.getBody().addRange(firstBodyElement,body.getLastBodyElement());
        }
      }
    }
  }
  final PsiField[] fields=myAnonClass.getFields();
  for (int i=0; i < fields.length; i++) {
    PsiField field=fields[i];
    if (!field.hasModifierProperty(PsiModifier.STATIC) && field.getInitializer() != null) {
      final PsiExpressionStatement statement=(PsiExpressionStatement)myManager.getElementFactory().createStatementFromText(field.getName() + "= 0;",null);
      ((PsiAssignmentExpression)statement.getExpression()).getRExpression().replace(field.getInitializer());
      constructor.getBody().add(statement);
    }
  }
}
