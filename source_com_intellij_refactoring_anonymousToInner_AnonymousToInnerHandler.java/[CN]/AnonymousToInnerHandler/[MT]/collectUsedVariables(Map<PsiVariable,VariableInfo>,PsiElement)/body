{
  scope.accept(new PsiRecursiveElementVisitor(){
    public void visitReferenceExpression(    PsiReferenceExpression expression){
      if (expression.getQualifierExpression() == null) {
        PsiElement refElement=expression.resolve();
        if (refElement instanceof PsiVariable) {
          PsiVariable var=(PsiVariable)refElement;
          if (var instanceof PsiField) {
            final PsiClass containingClass=((PsiField)var).getContainingClass();
            if (!myAnonClass.equals(containingClass)) {
              if (PsiTreeUtil.isAncestor(myTargetClass,containingClass,true)) {
                saveVariable(variableInfoMap,var,expression);
              }
            }
          }
 else {
            final PsiClass containingClass=PsiTreeUtil.getParentOfType(var,PsiClass.class);
            if (!myAnonClass.equals(containingClass)) {
              if (PsiTreeUtil.isAncestor(myTargetClass,containingClass,false)) {
                saveVariable(variableInfoMap,var,expression);
              }
            }
          }
        }
      }
      super.visitReferenceExpression(expression);
    }
  }
);
}
