{
  return new GroovyIntroduceVariableSettings(){
    private final CanonicalTypes.Type myType;
    private final String myName;
{
      GrExpression expression=context.getExpression();
      StringPartInfo stringPart=context.getStringPart();
      GrVariable var=context.getVar();
      PsiType type=expression != null ? expression.getType() : var != null ? var.getType() : stringPart != null ? stringPart.getLiteral().getType() : null;
      myType=type != null ? CanonicalTypes.createTypeWrapper(type) : null;
      myName=new GrVariableNameSuggester(context,new GroovyVariableValidator(context)).suggestNames().iterator().next();
    }
    @Override public boolean isDeclareFinal(){
      return false;
    }
    @Nullable @Override public String getName(){
      return myName;
    }
    @Override public boolean replaceAllOccurrences(){
      return choice == OccurrencesChooser.ReplaceChoice.ALL;
    }
    @Nullable @Override public PsiType getSelectedType(){
      return myType != null ? myType.getType(context.getPlace(),context.getPlace().getManager()) : null;
    }
  }
;
}
