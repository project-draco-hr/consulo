{
  if (!(refEntity instanceof RefModule)) {
    return null;
  }
  final RefModule refModule=(RefModule)refEntity;
  final List<RefEntity> children=refModule.getChildren();
  if (children == null) {
    return null;
  }
  int numClasses=0;
  for (  RefEntity child : children) {
    if (child instanceof RefClass) {
      numClasses++;
    }
  }
  if (numClasses >= limit || numClasses == 0) {
    return null;
  }
  final Project project=globalInspectionContext.getProject();
  final Module[] modules=ModuleManager.getInstance(project).getModules();
  if (modules.length == 1) {
    return null;
  }
  final String errorString=InspectionGadgetsBundle.message("module.with.too.few.classes.problem.descriptor",refModule.getName(),Integer.valueOf(numClasses),Integer.valueOf(limit));
  return new CommonProblemDescriptor[]{inspectionManager.createProblemDescriptor(errorString)};
}
