{
  super.visitMethod(method);
  if (!method.hasModifierProperty(PsiModifier.PRIVATE) || method.isConstructor()) {
    return;
  }
  if (onlyReportStaticMethods && !method.hasModifierProperty(PsiModifier.STATIC)) {
    return;
  }
  if (method.getNameIdentifier() == null) {
    return;
  }
  final MethodReferenceFinder processor=new MethodReferenceFinder(method);
  if (!processor.isOnlyAccessedFromInnerClass()) {
    return;
  }
  final PsiClass containingClass=processor.getContainingClass();
  if (ignoreStaticMethodsFromNonStaticInnerClass && method.hasModifierProperty(PsiModifier.STATIC)) {
    final PsiElement parent=containingClass.getParent();
    if (parent instanceof PsiClass && !containingClass.hasModifierProperty(PsiModifier.STATIC)) {
      return;
    }
  }
  if (containingClass instanceof PsiAnonymousClass) {
    final PsiClass[] interfaces=containingClass.getInterfaces();
    final PsiClass superClass;
    if (interfaces.length == 1) {
      superClass=interfaces[0];
      registerMethodError(method,superClass,Boolean.valueOf(false));
    }
 else {
      superClass=containingClass.getSuperClass();
      if (superClass == null) {
        return;
      }
      registerMethodError(method,superClass,Boolean.valueOf(true));
    }
  }
 else {
    registerMethodError(method,containingClass);
  }
}
