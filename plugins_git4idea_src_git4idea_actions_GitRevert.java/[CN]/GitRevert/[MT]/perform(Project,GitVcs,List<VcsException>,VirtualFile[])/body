{
  saveAll();
  final ChangeListManager changeManager=ChangeListManager.getInstance(project);
  final List<Change> changes=new ArrayList<Change>();
  final HashSet<VirtualFile> roots=new HashSet<VirtualFile>();
  for (  VirtualFile f : affectedFiles) {
    Change ch=changeManager.getChange(f);
    if (ch != null) {
      roots.add(VcsUtil.getVcsRootFor(project,f));
      changes.add(ch);
    }
  }
  GitRollbackEnvironment re=GitRollbackEnvironment.getInstance(project);
  re.rollbackChanges(changes,exceptions,RollbackProgressListener.EMPTY);
  VcsDirtyScopeManager mgr=VcsDirtyScopeManager.getInstance(project);
  for (  VirtualFile file : roots) {
    mgr.dirDirtyRecursively(file);
    file.refresh(true,true);
  }
}
