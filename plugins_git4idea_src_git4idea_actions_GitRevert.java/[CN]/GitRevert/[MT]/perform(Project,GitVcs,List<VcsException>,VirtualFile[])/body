{
  final ChangeListManager changeListManager=ChangeListManager.getInstance(project);
  if (changeListManager.isFreezedWithNotification("Can not revert now"))   return true;
  final List<Change> changes=new ArrayList<Change>(affectedFiles.length);
  for (  VirtualFile f : affectedFiles) {
    Change ch=changeListManager.getChange(f);
    if (ch != null) {
      changes.add(ch);
    }
  }
  RollbackChangesDialog.rollbackChanges(project,changes);
  for (  VirtualFile conflictedFile : affectedFiles) {
    final GitRepository repo=GitRepositoryManager.getInstance(project).getRepositoryForFile(conflictedFile);
    if (repo != null) {
      repo.update(GitRepository.TrackedTopic.ALL_CURRENT);
    }
  }
  return false;
}
