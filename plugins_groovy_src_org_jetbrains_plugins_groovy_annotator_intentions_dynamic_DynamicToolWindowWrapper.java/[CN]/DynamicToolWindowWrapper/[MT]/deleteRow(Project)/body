{
  final int[] rows=myTreeTable.getSelectedRows();
  for (  int row : rows) {
    if (row < 0)     return;
    final TreeTableTree tree=myTreeTable.getTree();
    final TreePath selectionPath=tree.getPathForRow(row);
    final TreePath parent=selectionPath.getParentPath();
    if (parent.getParentPath() == null) {
      final Object classRow=selectionPath.getLastPathComponent();
      if (!(classRow instanceof DefaultMutableTreeNode))       return;
      if (!removeClass(project,row,tree,((DefaultMutableTreeNode)classRow)))       return;
    }
 else {
      final Object classRow=parent.getLastPathComponent();
      final Object dynamicRow=selectionPath.getLastPathComponent();
      if (!(classRow instanceof DefaultMutableTreeNode))       return;
      if (!(dynamicRow instanceof DefaultMutableTreeNode))       return;
      final DefaultMutableTreeNode dynamicItemNode=(DefaultMutableTreeNode)dynamicRow;
      final DefaultMutableTreeNode classNode=(DefaultMutableTreeNode)classRow;
      if (classNode.getChildCount() == 1) {
        if (removeClass(project,row,tree,classNode))         return;
      }
 else {
        if (!removeDynamicElement(project,row,tree,dynamicItemNode,classNode))         return;
      }
    }
  }
}
