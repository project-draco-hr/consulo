{
  Object namedElement=child.getUserObject();
  if (!(namedElement instanceof DNamedElement))   return false;
  if (isShowDialog) {
    int result;
    if (rowsCount > 1) {
      result=Messages.showOkCancelDialog(myBigPanel,GroovyBundle.message("are.you.sure.to.delete.elements",String.valueOf(rowsCount)),GroovyBundle.message("dynamic.element.deletion"),Messages.getQuestionIcon());
    }
 else {
      result=Messages.showOkCancelDialog(myBigPanel,GroovyBundle.message("are.you.sure.to.delete.dynamic.property",((DNamedElement)namedElement).getName()),GroovyBundle.message("dynamic.property.deletion"),Messages.getQuestionIcon());
    }
    if (result != DialogWrapper.OK_EXIT_CODE)     return false;
  }
  removeNamedElement(project,((DNamedElement)namedElement));
  final Object selectionNode=selectionPath.getLastPathComponent();
  if (!(selectionNode instanceof DefaultMutableTreeNode))   return false;
  DefaultMutableTreeNode toSelect=(parent.getChildAfter(child) != null || parent.getChildCount() == 1 ? ((DefaultMutableTreeNode)selectionNode).getNextNode() : ((DefaultMutableTreeNode)selectionNode).getPreviousNode());
  removeFromParent(parent,child);
  if (toSelect != null) {
    setSelectedNode(toSelect);
  }
  return true;
}
