{
  boolean isShowDialog=true;
  final int rowsCount=myTreeTable.getSelectedRows().length;
  int i=0;
  final TreePath[] paths=myTreeTable.getTree().getSelectionPaths();
  if (paths == null)   return;
  for (  TreePath selectionPath : paths) {
    if (rowsCount > 1)     isShowDialog=false;
    if (i == 0)     isShowDialog=true;
    i++;
    final TreePath parent=selectionPath.getParentPath();
    if (parent.getParentPath() == null) {
      final Object classRow=selectionPath.getLastPathComponent();
      if (!(classRow instanceof DefaultMutableTreeNode))       return;
      if (!removeClass(((DefaultMutableTreeNode)classRow),isShowDialog,rowsCount))       return;
    }
 else {
      final Object classRow=parent.getLastPathComponent();
      final Object dynamicRow=selectionPath.getLastPathComponent();
      if (!(classRow instanceof DefaultMutableTreeNode))       return;
      if (!(dynamicRow instanceof DefaultMutableTreeNode))       return;
      final DefaultMutableTreeNode dynamicItemNode=(DefaultMutableTreeNode)dynamicRow;
      final DefaultMutableTreeNode classNode=(DefaultMutableTreeNode)classRow;
      final boolean removeClass=classNode.getChildCount() == 1;
      if (!removeDynamicElement(dynamicItemNode,isShowDialog,rowsCount))       return;
      if (removeClass) {
        removeNamedElement((DNamedElement)classNode.getUserObject());
      }
    }
  }
  DynamicManager.getInstance(myProject).fireChange();
}
