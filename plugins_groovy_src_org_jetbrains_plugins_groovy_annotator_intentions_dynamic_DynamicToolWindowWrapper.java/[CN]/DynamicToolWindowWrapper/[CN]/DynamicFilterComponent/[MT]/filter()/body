{
  DefaultMutableTreeNode rootNode=new DefaultMutableTreeNode();
  buildTree(myProject,rootNode);
  String filterText;
  DefaultMutableTreeNode classNode=(DefaultMutableTreeNode)rootNode.getFirstChild();
  while (classNode != null) {
    DefaultMutableTreeNode propertyNode=(DefaultMutableTreeNode)classNode.getFirstChild();
    while (propertyNode != null) {
      final Object childObject=propertyNode.getUserObject();
      if (!(childObject instanceof DItemElement))       break;
      filterText=getFilter();
      if (filterText == null || "".equals(filterText)) {
        ((DItemElement)childObject).setHightlightedText("");
        continue;
      }
      final String name=(((DItemElement)childObject)).getName();
      if (!name.contains(filterText)) {
        final TreeNode parent=propertyNode.getParent();
        if (!(parent instanceof DefaultMutableTreeNode))         break;
        ((DefaultMutableTreeNode)parent).remove(propertyNode);
      }
 else {
        ((DItemElement)childObject).setHightlightedText(filterText);
      }
      propertyNode=(DefaultMutableTreeNode)classNode.getChildAfter(propertyNode);
    }
    if (classNode.getChildCount() == 0) {
      final TreeNode parent=classNode.getParent();
      if (!(parent instanceof DefaultMutableTreeNode))       break;
      ((DefaultMutableTreeNode)parent).remove(classNode);
    }
    classNode=(DefaultMutableTreeNode)rootNode.getChildAfter(classNode);
  }
  rebuildTreeView(myProject,rootNode,true);
}
