{
  final VirtualFile fileByUrl=VirtualFileManager.getInstance().findFileByUrl(fileUrl);
  if (fileByUrl != null) {
    if (fileByUrl.isDirectory() || fileByUrl.getFileType().isBinary()) {
      return null;
    }
    IdentifierHighlighterPassFactory.ourTestingIdentifierHighlighting=true;
    return ApplicationManager.getApplication().runReadAction(new Computable<List<GwtHighlightInfo>>(){
      @Override public List<GwtHighlightInfo> compute(){
        final List<GwtHighlightInfo> list=new ArrayList<GwtHighlightInfo>();
        final Project project=getProject();
        final PsiFile file=PsiManager.getInstance(project).findFile(fileByUrl);
        try {
          SwingUtilities.invokeAndWait(new Runnable(){
            @Override public void run(){
              Editor editor=FileEditorManager.getInstance(project).openTextEditor(new OpenFileDescriptor(project,fileByUrl,0),false);
              editor.getCaretModel().moveToOffset(offset);
              DaemonCodeAnalyzerImpl analyzer=(DaemonCodeAnalyzerImpl)DaemonCodeAnalyzerEx.getInstanceEx(project);
              TextEditor textEditor=TextEditorProvider.getInstance().getTextEditor(editor);
              List<HighlightInfo> highlightInfos=analyzer.runPasses(file,PsiDocumentManager.getInstance(project).getDocument(file),textEditor,new int[0],false,null);
              for (              HighlightInfo highlightInfo : highlightInfos) {
                TextAttributes textAttributes=highlightInfo.getTextAttributes(null,null);
                if (textAttributes == null) {
                  continue;
                }
                GwtHighlightInfo info=createHighlightInfo(textAttributes,new GwtTextRange(highlightInfo.getStartOffset(),highlightInfo.getEndOffset()));
                list.add(info);
              }
            }
          }
);
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
        return list;
      }
    }
);
  }
  return null;
}
