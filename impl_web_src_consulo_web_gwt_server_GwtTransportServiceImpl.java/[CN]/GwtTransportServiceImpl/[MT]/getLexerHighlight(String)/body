{
  final VirtualFile fileByUrl=VirtualFileManager.getInstance().findFileByUrl(fileUrl);
  if (fileByUrl != null) {
    if (fileByUrl.isDirectory()) {
      return Collections.emptyList();
    }
    return ApplicationManager.getApplication().runReadAction(new Computable<List<GwtHighlightInfo>>(){
      @Override public List<GwtHighlightInfo> compute(){
        List<GwtHighlightInfo> list=new ArrayList<GwtHighlightInfo>();
        Project project=getProject();
        EditorHighlighter highlighter=HighlighterFactory.createHighlighter(project,fileByUrl);
        highlighter.setText(getFileText(project,fileByUrl));
        HighlighterIterator iterator=highlighter.createIterator(0);
        while (!iterator.atEnd()) {
          int start=iterator.getStart();
          int end=iterator.getEnd();
          TextAttributes textAttributes=iterator.getTextAttributes();
          GwtHighlightInfo highlightInfo=createHighlightInfo(textAttributes,new GwtTextRange(start,end),0);
          if (!highlightInfo.isEmpty()) {
            list.add(highlightInfo);
          }
          iterator.advance();
        }
        return list;
      }
    }
);
  }
  return Collections.emptyList();
}
