{
  final VirtualFile fileByUrl=VirtualFileManager.getInstance().findFileByUrl(fileUrl);
  if (fileByUrl != null) {
    if (fileByUrl.isDirectory() || fileByUrl.getFileType().isBinary()) {
      return null;
    }
    return ApplicationManager.getApplication().runReadAction(new Computable<List<GwtHighlightInfo>>(){
      @Override public List<GwtHighlightInfo> compute(){
        List<GwtHighlightInfo> list=new ArrayList<GwtHighlightInfo>();
        EditorHighlighter highlighter=HighlighterFactory.createHighlighter(getProject(),fileByUrl);
        PsiFile file=PsiManager.getInstance(getProject()).findFile(fileByUrl);
        highlighter.setText(file.getText());
        HighlighterIterator iterator=highlighter.createIterator(0);
        while (!iterator.atEnd()) {
          int start=iterator.getStart();
          int end=iterator.getEnd();
          TextAttributes textAttributes=iterator.getTextAttributes();
          GwtHighlightInfo highlightInfo=createHighlightInfo(textAttributes,new GwtTextRange(start,end));
          if (!highlightInfo.isEmpty()) {
            list.add(highlightInfo);
          }
          iterator.advance();
        }
        return list;
      }
    }
);
  }
  return Collections.emptyList();
}
