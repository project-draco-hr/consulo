{
  if (!willRender(value))   return;
  final int parentWidth=getParentWidth(list);
  final Color bgrndColor=getBgrndColor(list,value,index,selected,hasFocus);
  if (bgrndColor != null) {
    setBackground(bgrndColor);
  }
  final Description description=getDescription(value);
  final MyFontHelper helper=new MyFontHelper(list);
  int fixedWidth=0;
  int fixedWidthBefore=0;
  int changeableWidth=0;
  final java.util.List<Pair<String,SimpleTextAttributes>> pieces=description.getPieces();
  final int middleIdx=description.getMiddleIdx();
  for (int i=0; i < pieces.size(); i++) {
    final Pair<String,SimpleTextAttributes> pair=pieces.get(i);
    if (middleIdx == i) {
      changeableWidth=helper.getWidth(pair);
    }
 else {
      final int width=helper.getWidth(pair);
      if (i < middleIdx) {
        fixedWidthBefore+=width;
        append(pair.getFirst(),pair.getSecond());
        final String adj=description.getMaxString(i);
        if (adj != null) {
          final int adjWidth=helper.getWidth(new Pair<String,SimpleTextAttributes>(adj,pair.getSecond()));
          appendFixedTextFragmentWidth(adjWidth);
          fixedWidth+=adjWidth;
        }
 else {
          appendFixedTextFragmentWidth(width);
          fixedWidth+=width;
        }
      }
 else {
        fixedWidth+=width;
      }
    }
  }
  final Pair<String,SimpleTextAttributes> changeable=pieces.get(middleIdx);
  final int difference=parentWidth - fixedWidth;
  if ((fixedWidth + changeableWidth) > parentWidth) {
    if (fixedWidth < parentWidth) {
      final Trinity<String,SimpleTextAttributes,Object> tag=getMoreTag();
      final int more=helper.getWidth(new Pair<String,SimpleTextAttributes>(tag.getFirst(),tag.getSecond()));
      if (more < difference) {
        final String truncated=CommittedChangeListRenderer.truncateDescription(changeable.getFirst(),helper.getFontMetrics(changeable.getSecond()),difference - more);
        final int truncatedWidth=helper.getWidth(new Pair<String,SimpleTextAttributes>(truncated,changeable.getSecond()));
        append(truncated,changeable.getSecond());
        append(tag.getFirst(),tag.getSecond(),tag.getThird());
        if (truncatedWidth > 0) {
          appendFixedTextFragmentWidth(difference - truncatedWidth);
        }
      }
 else {
        appendFixedTextFragmentWidth(difference);
      }
    }
  }
 else {
    append(changeable.getFirst(),changeable.getSecond());
    appendFixedTextFragmentWidth(parentWidth - fixedWidth);
  }
  for (int i=middleIdx + 1; i < pieces.size(); i++) {
    final Pair<String,SimpleTextAttributes> pair=pieces.get(i);
    append(pair.getFirst(),pair.getSecond());
  }
}
