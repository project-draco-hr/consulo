{
  if (myShowFlatten) {
    final Object[] o=myList.getSelectedValues();
    final Change[] changes=new Change[o.length];
    for (int i=0; i < changes.length; i++) {
      changes[i]=(Change)o[i];
    }
    return changes;
  }
 else {
    List<Change> changes=new ArrayList<Change>();
    final TreePath[] paths=myTree.getSelectionPaths();
    if (paths != null) {
      for (      TreePath path : paths) {
        ChangesBrowserNode node=(ChangesBrowserNode)path.getLastPathComponent();
        changes.addAll(node.getAllChangesUnder());
      }
    }
    return changes.toArray(new Change[changes.size()]);
  }
}
