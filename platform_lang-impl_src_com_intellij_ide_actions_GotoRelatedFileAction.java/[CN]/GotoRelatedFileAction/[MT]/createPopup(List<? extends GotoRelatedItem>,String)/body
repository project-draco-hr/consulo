{
  PsiElement[] elements=new PsiElement[items.size()];
  final Map<PsiElement,GotoRelatedItem> itemsMap=new HashMap<PsiElement,GotoRelatedItem>();
  for (int i=0; i < items.size(); i++) {
    GotoRelatedItem item=items.get(i);
    elements[i]=item.getElement();
    itemsMap.put(item.getElement(),item);
  }
  return NavigationUtil.getPsiElementPopup(elements,new DefaultPsiElementCellRenderer(){
    @Override public String getElementText(    PsiElement element){
      String customName=itemsMap.get(element).getCustomName();
      return customName != null ? customName : super.getElementText(element);
    }
    @Override protected Icon getIcon(    PsiElement element){
      Icon customIcon=itemsMap.get(element).getCustomIcon();
      return customIcon != null ? customIcon : super.getIcon(element);
    }
    @Override public String getContainerText(    PsiElement element,    String name){
      PsiFile file=element.getContainingFile();
      return file != null && !file.equals(element) ? "(" + file.getName() + ")" : null;
    }
    @Override protected DefaultListCellRenderer getRightCellRenderer(){
      return null;
    }
  }
,title,new PsiElementProcessor<PsiElement>(){
    @Override public boolean execute(    PsiElement element){
      itemsMap.get(element).navigate();
      return true;
    }
  }
);
}
