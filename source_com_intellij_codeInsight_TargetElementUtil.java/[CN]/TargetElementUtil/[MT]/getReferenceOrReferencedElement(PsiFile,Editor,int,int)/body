{
  PsiReference ref=findReference(editor,offset);
  if (ref == null) {
    return null;
  }
  PsiManager manager=file.getManager();
  final PsiElement referenceElement=ref.getElement();
  PsiElement refElement;
  if (ref instanceof PsiJavaReference) {
    refElement=((PsiJavaReference)ref).advancedResolve(true).getElement();
  }
 else {
    refElement=ref.resolve();
  }
  if (refElement == null) {
    DaemonCodeAnalyzer.getInstance(manager.getProject()).updateVisibleHighlighters(editor);
  }
 else {
    if ((flags & NEW_AS_CONSTRUCTOR) != 0) {
      PsiElement parent=referenceElement.getParent();
      if (parent instanceof PsiAnonymousClass) {
        parent=parent.getParent();
      }
      if (parent instanceof PsiNewExpression) {
        PsiMethod constructor=((PsiNewExpression)parent).resolveConstructor();
        if (constructor != null) {
          refElement=constructor;
        }
      }
    }
    if (refElement instanceof PsiClass && refElement.getContainingFile().getVirtualFile() == null) {
      return manager.findClass(((PsiClass)refElement).getQualifiedName(),refElement.getResolveScope());
    }
    return refElement;
  }
  return null;
}
