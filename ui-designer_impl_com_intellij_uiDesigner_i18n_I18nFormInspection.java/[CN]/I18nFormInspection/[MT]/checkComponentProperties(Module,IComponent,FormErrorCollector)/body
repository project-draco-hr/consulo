{
  for (  final IProperty prop : component.getModifiedProperties()) {
    Object propValue=prop.getPropertyValue(component);
    if (propValue instanceof StringDescriptor) {
      StringDescriptor descriptor=(StringDescriptor)propValue;
      if (descriptor != null && isHardCodedStringDescriptor(descriptor)) {
        if (isSetterNonNls(module.getProject(),GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module),component.getComponentClassName(),prop.getName())) {
          continue;
        }
        collector.addError(prop,CodeInsightBundle.message("inspection.i18n.message.in.form",JDOMUtil.escapeText(descriptor.getValue())),new EditorQuickFixProvider(){
          public QuickFix createQuickFix(          GuiEditor editor,          RadComponent component){
            return new I18nizeFormPropertyQuickFix(editor,CodeInsightBundle.message("inspection.i18n.quickfix"),component,(IntrospectedProperty)prop);
          }
        }
);
      }
    }
  }
  if (component instanceof IContainer) {
    final IContainer container=(IContainer)component;
    StringDescriptor descriptor=container.getBorderTitle();
    if (descriptor != null && isHardCodedStringDescriptor(descriptor)) {
      collector.addError(myBorderProperty,CodeInsightBundle.message("inspection.i18n.message.in.form",JDOMUtil.escapeText(descriptor.getValue())),new EditorQuickFixProvider(){
        public QuickFix createQuickFix(        GuiEditor editor,        RadComponent component){
          return new I18nizeFormBorderQuickFix(editor,CodeInsightBundle.message("inspection.i18n.quickfix"),(RadContainer)container);
        }
      }
);
    }
  }
  if (component.getParent() instanceof ITabbedPane) {
    ITabbedPane parentTabbedPane=(ITabbedPane)component.getParent();
    final StringDescriptor descriptor=parentTabbedPane.getTabTitle(component);
    if (descriptor != null && isHardCodedStringDescriptor(descriptor)) {
      collector.addError(null,CodeInsightBundle.message("inspection.i18n.message.in.form",JDOMUtil.escapeText(descriptor.getValue())),new EditorQuickFixProvider(){
        public QuickFix createQuickFix(        GuiEditor editor,        RadComponent component){
          return new I18nizeTabTitleQuickFix(editor,CodeInsightBundle.message("inspection.i18n.quickfix"),component);
        }
      }
);
    }
  }
}
