{
  final IElementType varType;
  if (context == Context.CLASS || context == Context.ANNOTATION_INTERFACE) {
    varType=JavaElementType.FIELD;
  }
 else   if (context == Context.CODE_BLOCK) {
    varType=JavaElementType.LOCAL_VARIABLE;
  }
 else {
    LOG.error("Unexpected context: " + context);
    declaration.drop();
    return null;
  }
  PsiBuilder.Marker variable=declaration;
  boolean openMarker=true;
  boolean eatSemicolon=true;
  boolean expectSemicolon=true;
  while (true) {
    while (expect(builder,JavaTokenType.LBRACKET)) {
      if (!expect(builder,JavaTokenType.RBRACKET)) {
        error(builder,JavaErrorMessages.message("expected.rbracket"));
        expectSemicolon=false;
        break;
      }
    }
    if (expect(builder,JavaTokenType.EQ)) {
      final PsiBuilder.Marker expr=ExpressionParser.parse(builder);
      if (expr == null) {
        error(builder,JavaErrorMessages.message("expected.expression"));
        expectSemicolon=false;
        break;
      }
    }
    if (builder.getTokenType() == JavaTokenType.COMMA) {
      variable.done(varType);
      builder.advanceLexer();
      variable=builder.mark();
    }
 else {
      break;
    }
    if (!expect(builder,JavaTokenType.IDENTIFIER)) {
      variable.drop();
      error(builder,JavaErrorMessages.message("expected.identifier"));
      openMarker=false;
      eatSemicolon=false;
      break;
    }
  }
  if (eatSemicolon) {
    if (!expect(builder,JavaTokenType.SEMICOLON) && expectSemicolon) {
      error(builder,JavaErrorMessages.message("expected.semicolon"));
    }
  }
  if (openMarker) {
    variable.done(varType);
  }
  return declaration;
}
