{
  final PsiBuilder.Marker param=builder.mark();
  final Pair<PsiBuilder.Marker,Boolean> modListInfo=parseModifierList(builder);
  final PsiBuilder.Marker type=ellipsis ? ReferenceParser.parseTypeWithEllipsis(builder,true,true) : ReferenceParser.parseType(builder,true,true);
  if (type == null && modListInfo.second) {
    param.rollbackTo();
    return null;
  }
  if (type == null) {
    error(builder,JavaErrorMessages.message("expected.type"));
    emptyElement(builder,JavaElementType.TYPE);
  }
  if (expect(builder,JavaTokenType.IDENTIFIER)) {
    eatBrackets(builder);
    param.done(JavaElementType.PARAMETER);
    return param;
  }
 else {
    error(builder,JavaErrorMessages.message("expected.identifier"));
    param.drop();
    return modListInfo.first;
  }
}
