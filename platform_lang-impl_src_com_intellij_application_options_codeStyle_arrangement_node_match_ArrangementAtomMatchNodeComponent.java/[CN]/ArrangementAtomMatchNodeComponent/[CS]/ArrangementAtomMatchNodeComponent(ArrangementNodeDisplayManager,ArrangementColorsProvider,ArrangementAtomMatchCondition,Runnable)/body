{
  myColorsProvider=colorsProvider;
  myCondition=condition;
  myCloseCallback=closeCallback;
  myText=manager.getDisplayValue(condition);
  myTextControl.setTextAlign(SwingConstants.CENTER);
  myTextControl.append(myText,SimpleTextAttributes.fromTextAttributes(colorsProvider.getTextAttributes(condition.getType(),false)));
  myTextControlSize=new Dimension(manager.getMaxWidth(condition.getType()),myTextControl.getPreferredSize().height);
  final ArrangementRemoveConditionAction action=new ArrangementRemoveConditionAction();
  Icon buttonIcon=action.getTemplatePresentation().getIcon();
  Dimension buttonSize=new Dimension(buttonIcon.getIconWidth(),buttonIcon.getIconHeight());
  myCloseButton=new ActionButton(action,action.getTemplatePresentation().clone(),ArrangementConstants.RULE_TREE_PLACE,buttonSize){
    @Override protected Icon getIcon(){
      return myCloseButtonHovered ? action.getTemplatePresentation().getHoveredIcon() : action.getTemplatePresentation().getIcon();
    }
  }
;
  GridBagConstraints constraints=new GridBag().anchor(GridBagConstraints.CENTER).insets(0,0,0,0);
  JPanel insetsPanel=new JPanel(new GridBagLayout());
  insetsPanel.add(myTextControl,constraints);
  insetsPanel.setBorder(IdeBorderFactory.createEmptyBorder(0,ArrangementConstants.HORIZONTAL_PADDING,0,0));
  insetsPanel.setOpaque(false);
  final int arcSize=myTextControl.getFont().getSize();
  JPanel roundBorderPanel=new JPanel(new GridBagLayout()){
    @Override public void paint(    Graphics g){
      Rectangle buttonBounds=getCloseButtonScreenLocation();
      if (buttonBounds != null) {
        Point mouseScreenLocation=MouseInfo.getPointerInfo().getLocation();
        myCloseButtonHovered=buttonBounds.contains(mouseScreenLocation);
      }
      Rectangle bounds=getBounds();
      g.setColor(myBackgroundColor);
      g.fillRoundRect(0,0,bounds.width,bounds.height,arcSize,arcSize);
      super.paint(g);
    }
  }
;
  roundBorderPanel.add(insetsPanel,new GridBag().fillCellHorizontally());
  roundBorderPanel.add(myCloseButton,new GridBag().anchor(GridBagConstraints.CENTER).insets(VERTICAL_PADDING,0,0,0));
  myBorder=IdeBorderFactory.createRoundedBorder(arcSize);
  roundBorderPanel.setBorder(myBorder);
  roundBorderPanel.setOpaque(false);
  myRenderer.setBorder(IdeBorderFactory.createEmptyBorder(VERTICAL_PADDING,0,0,0));
  myRenderer.add(roundBorderPanel,constraints);
  myRenderer.setOpaque(false);
  setSelected(false);
}
