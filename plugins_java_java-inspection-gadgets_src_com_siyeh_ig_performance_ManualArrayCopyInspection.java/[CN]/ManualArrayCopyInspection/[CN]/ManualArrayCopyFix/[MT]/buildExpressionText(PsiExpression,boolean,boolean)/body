{
  if (!plusOne) {
    final int precedence=ParenthesesUtils.getPrecedence(expression);
    if (precedence > ParenthesesUtils.ADDITIVE_PRECEDENCE) {
      return '(' + expression.getText() + ')';
    }
 else {
      if (parenthesize && precedence >= ParenthesesUtils.ADDITIVE_PRECEDENCE) {
        return '(' + expression.getText() + ')';
      }
      return expression.getText();
    }
  }
  if (expression instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)expression;
    final IElementType tokenType=binaryExpression.getOperationTokenType();
    if (tokenType == JavaTokenType.MINUS) {
      final PsiExpression rhs=binaryExpression.getROperand();
      if (ExpressionUtils.isOne(rhs)) {
        return binaryExpression.getLOperand().getText();
      }
    }
  }
 else   if (expression instanceof PsiLiteralExpression) {
    final PsiLiteralExpression literalExpression=(PsiLiteralExpression)expression;
    final Object value=literalExpression.getValue();
    if (value instanceof Integer) {
      final Integer integer=(Integer)value;
      return String.valueOf(integer.intValue() + 1);
    }
  }
  final int precedence=ParenthesesUtils.getPrecedence(expression);
  final String result;
  if (precedence > ParenthesesUtils.ADDITIVE_PRECEDENCE) {
    result='(' + expression.getText() + ")+1";
  }
 else {
    result=expression.getText() + "+1";
  }
  if (parenthesize) {
    return '(' + result + ')';
  }
  return result;
}
