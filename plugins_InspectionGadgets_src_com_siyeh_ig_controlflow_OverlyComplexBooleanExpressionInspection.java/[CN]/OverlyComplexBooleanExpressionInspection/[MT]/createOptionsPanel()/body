{
  final ButtonModel pureModel=m_ignoreConjunctionsDisjunctionsCheckBox.getModel();
  pureModel.setSelected(m_ignorePureConjunctionsDisjunctions);
  pureModel.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      m_ignorePureConjunctionsDisjunctions=pureModel.isSelected();
    }
  }
);
  final NumberFormat formatter=NumberFormat.getIntegerInstance();
  formatter.setParseIntegerOnly(true);
  m_termLimitTextField.setValue(Integer.valueOf(m_limit));
  m_termLimitTextField.setColumns(4);
  UIUtil.fixFormattedField(m_termLimitTextField);
  final Document document=m_termLimitTextField.getDocument();
  document.addDocumentListener(new DocumentListener(){
    public void changedUpdate(    DocumentEvent e){
      textChanged();
    }
    public void insertUpdate(    DocumentEvent e){
      textChanged();
    }
    public void removeUpdate(    DocumentEvent e){
      textChanged();
    }
    private void textChanged(){
      try {
        m_termLimitTextField.commitEdit();
        final Number number=(Number)m_termLimitTextField.getValue();
        m_limit=number.intValue();
      }
 catch (      ParseException e) {
      }
    }
  }
);
  return m_contentPanel;
}
