{
  if (!isBoolean(expression)) {
    return;
  }
  if (isParentBoolean(expression)) {
    return;
  }
  final int numTerms=countTerms(expression);
  if (numTerms <= m_limit) {
    return;
  }
  if (m_ignorePureConjunctionsDisjunctions && expression instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)expression;
    final PsiJavaToken sign=binaryExpression.getOperationSign();
    final String signText=sign.getText();
    if (s_booleanOperators.contains(signText)) {
      if (isPureConjunctionDisJunction(expression,signText)) {
        return;
      }
    }
  }
  registerError(expression);
}
