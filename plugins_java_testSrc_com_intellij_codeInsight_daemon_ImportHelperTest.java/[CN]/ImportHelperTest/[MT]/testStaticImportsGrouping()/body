{
  @NonNls String text="import static java.lang.Math.max;\n" + "import java.util.Map;\n" + "\n"+ "import static java.lang.Math.min;\n"+ "\n"+ "import java.awt.Component;\n"+ "\n"+ "\n"+ "\n"+ "import static javax.swing.SwingConstants.CENTER;\n"+ "class I {{ max(0, 0); Map.class.hashCode(); min(0,0); Component.class.hashCode(); int i = CENTER; }}";
  final PsiJavaFile file=(PsiJavaFile)configureByText(StdFileTypes.JAVA,text);
  assertEmpty(highlightErrors());
  CommandProcessor.getInstance().executeCommand(getProject(),new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          try {
            CodeStyleSettings settings=CodeStyleSettingsManager.getSettings(getProject()).clone();
            settings.LAYOUT_STATIC_IMPORTS_SEPARATELY=true;
            PackageEntryTable table=new PackageEntryTable();
            table.addEntry(PackageEntry.ALL_OTHER_IMPORTS_ENTRY);
            table.addEntry(PackageEntry.BLANK_LINE_ENTRY);
            table.addEntry(new PackageEntry(false,"javax",true));
            table.addEntry(new PackageEntry(false,"java",true));
            table.addEntry(PackageEntry.BLANK_LINE_ENTRY);
            table.addEntry(new PackageEntry(true,"java",true));
            table.addEntry(PackageEntry.BLANK_LINE_ENTRY);
            table.addEntry(PackageEntry.ALL_OTHER_STATIC_IMPORTS_ENTRY);
            settings.IMPORT_LAYOUT_TABLE.copyFrom(table);
            CodeStyleSettingsManager.getInstance(getProject()).setTemporarySettings(settings);
            try {
              JavaCodeStyleManager.getInstance(getProject()).optimizeImports(file);
            }
  finally {
              CodeStyleSettingsManager.getInstance(getProject()).dropTemporarySettings();
            }
            assertOrder(file,"java.awt.*",CommonClassNames.JAVA_UTIL_MAP,"static java.lang.Math.max","static java.lang.Math.min","static javax.swing.SwingConstants.CENTER");
          }
 catch (          Throwable e) {
            LOGGER.error(e);
          }
        }
      }
);
    }
  }
,"","");
}
