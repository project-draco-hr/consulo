{
  final AtomicBoolean toContinue=new AtomicBoolean(true);
  final Processor<Result> wrapper=new Processor<Result>(){
    @Override public boolean process(    Result result){
      if (!toContinue.get()) {
        return false;
      }
      if (!consumer.process(result)) {
        toContinue.set(false);
        return false;
      }
      return true;
    }
  }
;
  if (myRequireReadAction && !ApplicationManager.getApplication().isReadAccessAllowed()) {
    Runnable runnable=new Runnable(){
      @Override public void run(){
        processQuery(queryParameters,wrapper);
      }
    }
;
    if (!DumbService.isDumbAware(this)) {
      Project project=queryParameters instanceof DumbAwareSearchParameters ? ((DumbAwareSearchParameters)queryParameters).getProject() : null;
      if (project != null) {
        DumbService.getInstance(project).runReadActionInSmartMode(runnable);
        return toContinue.get();
      }
    }
    ApplicationManager.getApplication().runReadAction(runnable);
  }
 else {
    processQuery(queryParameters,wrapper);
  }
  return toContinue.get();
}
