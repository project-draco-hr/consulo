{
  if (!(element instanceof PsiReferenceExpression))   return;
  PsiElement elem=((PsiReferenceExpression)element).resolve();
  if (elem instanceof PsiMethod) {
    PsiMethod actualMethod=(PsiMethod)elem;
    if (!methodAndOverriders.contains(actualMethod)) {
      PsiClass outerClass=PsiTreeUtil.getParentOfType(element,PsiClass.class);
      while (outerClass != null) {
        if (containingClasses.contains(outerClass)) {
          qualifyMember(element,newName,outerClass,isStatic);
          break;
        }
        outerClass=PsiTreeUtil.getParentOfType(outerClass,PsiClass.class);
      }
    }
  }
}
