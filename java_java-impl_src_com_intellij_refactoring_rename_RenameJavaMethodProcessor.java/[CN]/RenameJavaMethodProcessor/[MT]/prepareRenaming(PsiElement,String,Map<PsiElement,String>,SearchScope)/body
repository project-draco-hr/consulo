{
  final PsiMethod method=(PsiMethod)element;
  OverridingMethodsSearch.search(method,scope,true).forEach(new Processor<PsiMethod>(){
    public boolean process(    PsiMethod overrider){
      if (overrider instanceof PsiMirrorElement) {
        final PsiElement prototype=((PsiMirrorElement)overrider).getPrototype();
        if (prototype instanceof PsiMethod) {
          overrider=(PsiMethod)prototype;
        }
      }
      if (overrider instanceof SyntheticElement)       return true;
      final String overriderName=overrider.getName();
      final String baseName=method.getName();
      final String newOverriderName=RefactoringUtil.suggestNewOverriderName(overriderName,baseName,newName);
      if (newOverriderName != null) {
        RenameProcessor.assertNonCompileElement(overrider);
        allRenames.put(overrider,newOverriderName);
      }
      return true;
    }
  }
);
}
