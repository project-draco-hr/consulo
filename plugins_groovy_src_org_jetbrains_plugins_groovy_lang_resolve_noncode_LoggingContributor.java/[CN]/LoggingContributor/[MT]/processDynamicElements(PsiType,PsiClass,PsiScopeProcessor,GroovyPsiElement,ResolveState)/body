{
  if (!(psiClass instanceof GrTypeDefinition) || !PsiTreeUtil.isAncestor(psiClass,place,true))   return;
  PsiModifierList modifierList=psiClass.getModifierList();
  if (modifierList == null)   return;
  for (  PsiAnnotation annotation : modifierList.getAnnotations()) {
    String qname=annotation.getQualifiedName();
    String logger=ourLoggers.get(qname);
    if (logger != null) {
      String fieldName=PsiUtil.getAnnoAttributeValue(annotation,"value","log");
      LightFieldBuilder field=new LightFieldBuilder(fieldName,logger,annotation).setContainingClass(psiClass).setModifiers(PsiModifier.FINAL,PsiModifier.STATIC,PsiModifier.PRIVATE);
      ResolveUtil.processElement(processor,field,state);
    }
  }
}
