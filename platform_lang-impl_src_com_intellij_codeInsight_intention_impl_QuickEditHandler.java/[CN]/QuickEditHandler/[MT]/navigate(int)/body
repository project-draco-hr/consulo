{
  if (myAction.isShowInBalloon()) {
    Ref<Balloon> ref=Ref.create(null);
    final JComponent component=myAction.createBalloonComponent(myNewFile,ref);
    if (component != null) {
      final Balloon balloon=JBPopupFactory.getInstance().createBalloonBuilder(component).setShadow(true).setAnimationCycle(0).setHideOnClickOutside(true).setHideOnKeyOutside(true).setHideOnAction(false).setFillColor(UIUtil.getControlColor()).createBalloon();
      ref.set(balloon);
      Disposer.register(myNewFile.getProject(),balloon);
      final Balloon.Position position=QuickEditAction.getBalloonPosition(myEditor);
      RelativePoint point=JBPopupFactory.getInstance().guessBestPopupLocation(myEditor);
      if (position == Balloon.Position.above) {
        final Point p=point.getPoint();
        point=new RelativePoint(point.getComponent(),new Point(p.x,p.y - myEditor.getLineHeight()));
      }
      balloon.show(point,position);
    }
  }
 else {
    final FileEditorManagerEx fileEditorManager=FileEditorManagerEx.getInstanceEx(myProject);
    final FileEditor[] editors=fileEditorManager.getEditors(myNewVirtualFile);
    if (editors.length == 0) {
      final EditorWindow curWindow=fileEditorManager.getCurrentWindow();
      mySplittedWindow=curWindow.split(SwingConstants.HORIZONTAL,false,myNewVirtualFile,true);
    }
    fileEditorManager.openTextEditor(new OpenFileDescriptor(myProject,myNewVirtualFile,injectedOffset),true);
  }
}
