{
  if (myAction.isShowInBalloon()) {
    final JComponent component=myAction.createBalloonComponent(myNewFile);
    if (component != null) {
      final Balloon balloon=JBPopupFactory.getInstance().createBalloonBuilder(component).setShadow(true).setAnimationCycle(0).setHideOnClickOutside(true).setHideOnKeyOutside(true).setHideOnAction(false).setFillColor(UIUtil.getControlColor()).createBalloon();
      new AnAction(){
        @RequiredDispatchThread @Override public void actionPerformed(        AnActionEvent e){
          balloon.hide();
        }
      }
.registerCustomShortcutSet(CommonShortcuts.ESCAPE,component);
      Disposer.register(myNewFile.getProject(),balloon);
      final Balloon.Position position=QuickEditAction.getBalloonPosition(myEditor);
      RelativePoint point=JBPopupFactory.getInstance().guessBestPopupLocation(myEditor);
      if (position == Balloon.Position.above) {
        final Point p=point.getPoint();
        point=new RelativePoint(point.getComponent(),new Point(p.x,p.y - myEditor.getLineHeight()));
      }
      balloon.show(point,position);
    }
  }
 else {
    final FileEditorManagerEx fileEditorManager=FileEditorManagerEx.getInstanceEx(myProject);
    final FileEditor[] editors=fileEditorManager.getEditors(myNewVirtualFile);
    if (editors.length == 0) {
      final EditorWindow curWindow=fileEditorManager.getCurrentWindow();
      mySplittedWindow=curWindow.split(SwingConstants.HORIZONTAL,false,myNewVirtualFile,true);
    }
    Editor editor=fileEditorManager.openTextEditor(new OpenFileDescriptor(myProject,myNewVirtualFile,injectedOffset),true);
    if (editor != null) {
      editor.putUserData(QuickEditAction.QUICK_EDIT_HANDLER,this);
      final FoldingModel foldingModel=editor.getFoldingModel();
      foldingModel.runBatchFoldingOperation(new Runnable(){
        @Override public void run(){
          for (          RangeMarker o : ContainerUtil.reverse(((DocumentEx)myNewDocument).getGuardedBlocks())) {
            String replacement=o.getUserData(REPLACEMENT_KEY);
            if (StringUtil.isEmpty(replacement))             continue;
            FoldRegion region=foldingModel.addFoldRegion(o.getStartOffset(),o.getEndOffset(),replacement);
            if (region != null)             region.setExpanded(false);
          }
        }
      }
);
    }
    SwingUtilities.invokeLater(new Runnable(){
      @Override public void run(){
        myEditor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
      }
    }
);
  }
}
