{
  final MarkupModelImpl docMarkup=(MarkupModelImpl)myEditor.getDocument().getMarkupModel(myEditor.myProject);
  Iterator docHighlighters=docMarkup == null ? null : docMarkup.getHighlighterList().getHighlighterIterator();
  Iterator editorHighlighters=((MarkupModelImpl)myEditor.getMarkupModel()).getHighlighterList().getHighlighterIterator();
  RangeHighlighterImpl lastDocHighlighter=null;
  RangeHighlighterImpl lastEditorHighlighter=null;
  while (true) {
    if (lastDocHighlighter == null && docHighlighters != null && docHighlighters.hasNext()) {
      lastDocHighlighter=(RangeHighlighterImpl)docHighlighters.next();
      if (!lastDocHighlighter.isValid() || lastDocHighlighter.getAffectedAreaStartOffset() > endOffset) {
        lastDocHighlighter=null;
        continue;
      }
      if (lastDocHighlighter.getAffectedAreaEndOffset() < startOffset) {
        lastDocHighlighter=null;
        continue;
      }
    }
    if (lastEditorHighlighter == null && editorHighlighters != null && editorHighlighters.hasNext()) {
      lastEditorHighlighter=(RangeHighlighterImpl)editorHighlighters.next();
      if (!lastEditorHighlighter.isValid() || lastEditorHighlighter.getAffectedAreaStartOffset() > endOffset) {
        lastEditorHighlighter=null;
        continue;
      }
      if (lastEditorHighlighter.getAffectedAreaEndOffset() < startOffset) {
        lastEditorHighlighter=null;
        continue;
      }
    }
    if (lastDocHighlighter == null && lastEditorHighlighter == null)     return;
    final RangeHighlighterImpl lowerHighlighter;
    if (less(lastDocHighlighter,lastEditorHighlighter)) {
      lowerHighlighter=lastDocHighlighter;
      lastDocHighlighter=null;
    }
 else {
      lowerHighlighter=lastEditorHighlighter;
      lastEditorHighlighter=null;
    }
    if (!lowerHighlighter.isValid())     continue;
    int startLineIndex=lowerHighlighter.getDocument().getLineNumber(startOffset);
    if (startLineIndex < 0 || startLineIndex >= myEditor.getDocument().getLineCount())     continue;
    int endLineIndex=lowerHighlighter.getDocument().getLineNumber(endOffset);
    if (endLineIndex < 0 || endLineIndex >= myEditor.getDocument().getLineCount())     continue;
    if (lowerHighlighter.getEditorFilter().avaliableIn(myEditor)) {
      p.process(lowerHighlighter);
    }
  }
}
