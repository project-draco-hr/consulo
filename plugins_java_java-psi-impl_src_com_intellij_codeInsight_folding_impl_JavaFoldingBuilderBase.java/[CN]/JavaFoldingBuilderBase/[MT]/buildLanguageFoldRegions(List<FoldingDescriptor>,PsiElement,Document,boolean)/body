{
  if (!(root instanceof PsiJavaFile)) {
    return;
  }
  PsiJavaFile file=(PsiJavaFile)root;
  PsiImportList importList=file.getImportList();
  if (importList != null) {
    PsiImportStatementBase[] statements=importList.getAllImportStatements();
    if (statements.length > 1) {
      final TextRange rangeToFold=getRangeToFold(importList);
      if (rangeToFold != null && rangeToFold.getLength() > 1) {
        descriptors.add(new FoldingDescriptor(importList,rangeToFold));
      }
    }
  }
  PsiClass[] classes=file.getClasses();
  for (  PsiClass aClass : classes) {
    ProgressIndicatorProvider.checkCanceled();
    addElementsToFold(descriptors,aClass,document,true,quick);
  }
  TextRange range=getFileHeader(file);
  if (range != null && range.getLength() > 1 && document.getLineNumber(range.getEndOffset()) > document.getLineNumber(range.getStartOffset())) {
    PsiElement anchorElementToUse=file;
    PsiElement candidate=file.getFirstChild();
    if (candidate != null && candidate.getTextRange().equals(range)) {
      ASTNode node=candidate.getNode();
      if (node != null && node.getElementType() == JavaDocElementType.DOC_COMMENT) {
        anchorElementToUse=candidate;
      }
    }
    descriptors.add(new FoldingDescriptor(anchorElementToUse,range));
  }
}
