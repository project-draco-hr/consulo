{
  if (parameters.getCompletionType() != CompletionType.BASIC && parameters.getCompletionType() != CompletionType.SMART) {
    return;
  }
  if (parameters.getInvocationCount() == 0 && TemplateManagerImpl.getTemplateState(parameters.getEditor()) != null) {
    return;
  }
  PsiElement position=parameters.getPosition();
  final Set<LookupElement> lookupSet=new THashSet<LookupElement>();
  if (psiElement(PsiIdentifier.class).andNot(INSIDE_TYPE_PARAMS_PATTERN).withParent(or(psiElement(PsiLocalVariable.class),psiElement(PsiParameter.class))).accepts(position)) {
    completeLocalVariableName(lookupSet,result.getPrefixMatcher(),(PsiVariable)parameters.getPosition().getParent(),parameters.getInvocationCount() >= 1);
    for (    final LookupElement item : lookupSet) {
      if (item instanceof LookupItem) {
        ((LookupItem)item).setAutoCompletionPolicy(AutoCompletionPolicy.GIVE_CHANCE_TO_OVERWRITE);
      }
    }
  }
  if (psiElement(PsiIdentifier.class).withParent(PsiField.class).andNot(INSIDE_TYPE_PARAMS_PATTERN).accepts(position)) {
    final PsiField variable=(PsiField)parameters.getPosition().getParent();
    completeMethodName(lookupSet,variable,result.getPrefixMatcher());
    completeFieldName(lookupSet,variable,result.getPrefixMatcher(),parameters.getInvocationCount() >= 1);
  }
  if (PsiJavaPatterns.psiJavaElement().nameIdentifierOf(PsiJavaPatterns.psiMethod().withParent(PsiClass.class)).accepts(position)) {
    completeMethodName(lookupSet,parameters.getPosition().getParent(),result.getPrefixMatcher());
  }
  for (  final LookupElement item : lookupSet) {
    result.addElement(item);
  }
}
