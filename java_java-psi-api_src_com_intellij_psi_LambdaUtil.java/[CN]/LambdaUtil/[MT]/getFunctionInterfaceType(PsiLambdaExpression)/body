{
  if (lambdaExpression != null) {
    final PsiElement parent=lambdaExpression.getParent();
    PsiType type=null;
    if (parent instanceof PsiTypeCastExpression) {
      type=((PsiTypeCastExpression)parent).getType();
    }
 else     if (parent instanceof PsiVariable) {
      type=((PsiVariable)parent).getType();
    }
 else     if (parent instanceof PsiAssignmentExpression) {
      final PsiExpression lExpression=((PsiAssignmentExpression)parent).getLExpression();
      type=lExpression.getType();
    }
 else     if (parent instanceof PsiExpressionList) {
      final PsiExpressionList expressionList=(PsiExpressionList)parent;
      final int lambdaIdx=getLambdaIdx(expressionList,lambdaExpression);
      if (lambdaIdx > -1) {
        final PsiElement gParent=expressionList.getParent();
        if (gParent instanceof PsiMethodCallExpression) {
          final JavaResolveResult resolveResult=((PsiMethodCallExpression)gParent).resolveMethodGenerics();
          final PsiElement resolve=resolveResult.getElement();
          if (resolve instanceof PsiMethod) {
            final PsiParameter[] parameters=((PsiMethod)resolve).getParameterList().getParameters();
            if (lambdaIdx < parameters.length) {
              type=resolveResult.getSubstitutor().substitute(parameters[lambdaIdx].getType());
            }
          }
        }
      }
    }
 else     if (parent instanceof PsiReturnStatement) {
      final PsiMethod method=PsiTreeUtil.getParentOfType(parent,PsiMethod.class);
      if (method != null) {
        type=method.getReturnType();
      }
    }
    return type;
  }
  return null;
}
