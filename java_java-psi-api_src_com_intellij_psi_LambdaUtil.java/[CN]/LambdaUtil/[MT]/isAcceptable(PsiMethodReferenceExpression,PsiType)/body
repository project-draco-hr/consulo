{
  if (methodReferenceExpression == null)   return false;
  final JavaResolveResult result=methodReferenceExpression.advancedResolve(false);
  final PsiElement resolve=result.getElement();
  if (resolve instanceof PsiMethod) {
    final PsiClassType.ClassResolveResult resolveResult=PsiUtil.resolveGenericsClassInType(left);
    final PsiMethod method=getFunctionalInterfaceMethod(resolveResult);
    if (method != null) {
      final MethodSignature signature1=method.getSignature(resolveResult.getSubstitutor());
      final MethodSignature signature2=((PsiMethod)resolve).getSignature(JavaPsiFacade.getElementFactory(method.getProject()).createRawSubstitutor((PsiTypeParameterListOwner)resolve));
      final Ref<PsiClass> classRef=new Ref<PsiClass>();
      methodReferenceExpression.process(classRef,new Ref<PsiSubstitutor>());
      if (areAcceptable(signature1,signature2,classRef.get()))       return true;
    }
  }
  return false;
}
