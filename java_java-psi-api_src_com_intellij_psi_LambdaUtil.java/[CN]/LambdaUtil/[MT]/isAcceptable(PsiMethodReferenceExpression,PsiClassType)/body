{
  final JavaResolveResult[] results=methodReferenceExpression.multiResolve(false);
  for (  JavaResolveResult result : results) {
    final PsiElement resolve=result.getElement();
    if (resolve instanceof PsiMethod) {
      final PsiClassType.ClassResolveResult resolveResult=left.resolveGenerics();
      final PsiMethod method=getFunctionalInterfaceMethod(resolveResult);
      if (method != null) {
        final MethodSignature signature1=method.getSignature(resolveResult.getSubstitutor());
        final MethodSignature signature2=((PsiMethod)resolve).getSignature(result.getSubstitutor());
        if (areAcceptable(signature1,signature2))         return true;
      }
    }
  }
  return false;
}
