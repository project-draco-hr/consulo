{
  final PsiElement paramParent=param.getParent();
  if (paramParent instanceof PsiParameterList) {
    final int parameterIndex=((PsiParameterList)paramParent).getParameterIndex(param);
    if (parameterIndex > -1) {
      final PsiLambdaExpression lambdaExpression=PsiTreeUtil.getParentOfType(param,PsiLambdaExpression.class);
      final PsiType type=getFunctionInterfaceType(lambdaExpression);
      final PsiClassType.ClassResolveResult resolveResult=type instanceof PsiClassType ? ((PsiClassType)type).resolveGenerics() : null;
      if (resolveResult != null) {
        final MethodSignature methodSignature=getFunction(resolveResult.getElement());
        if (methodSignature != null) {
          final PsiType[] types=methodSignature.getParameterTypes();
          if (parameterIndex < types.length) {
            final PsiType psiType=resolveResult.getSubstitutor().substitute(types[parameterIndex]);
            if (psiType instanceof PsiWildcardType) {
              final PsiType bound=((PsiWildcardType)psiType).getBound();
              if (bound != null) {
                return bound;
              }
            }
            return psiType;
          }
        }
      }
    }
  }
  return new PsiLambdaParameterType(param);
}
