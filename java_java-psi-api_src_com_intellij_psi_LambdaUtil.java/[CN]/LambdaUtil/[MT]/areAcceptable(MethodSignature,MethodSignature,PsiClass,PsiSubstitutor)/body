{
  int offset=0;
  final PsiType[] signatureParameterTypes1=signature1.getParameterTypes();
  final PsiType[] signatureParameterTypes2=signature2.getParameterTypes();
  if (signatureParameterTypes1.length != signatureParameterTypes2.length) {
    if (signatureParameterTypes1.length == signatureParameterTypes2.length + 1) {
      final PsiClassType classType=JavaPsiFacade.getElementFactory(psiClass.getProject()).createType(psiClass,psiSubstitutor);
      final PsiType receiverType=signatureParameterTypes1[0];
      if (receiverType.equals(classType) || (receiverType instanceof PsiClassType && ((PsiClassType)receiverType).isRaw() && receiverType.equals(TypeConversionUtil.erasure(classType)))) {
        offset++;
      }
 else {
        return false;
      }
    }
 else {
      return false;
    }
  }
  for (int i=0; i < signatureParameterTypes2.length; i++) {
    final PsiType type1=signatureParameterTypes1[offset + i];
    final PsiType type2=signatureParameterTypes2[i];
    if (!GenericsUtil.eliminateWildcards(type1).equals(GenericsUtil.eliminateWildcards(type2))) {
      return false;
    }
  }
  return true;
}
