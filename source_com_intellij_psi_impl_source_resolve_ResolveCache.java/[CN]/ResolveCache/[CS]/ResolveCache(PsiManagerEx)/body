{
  myManager=manager;
  myVarToConstValueMap1=Collections.synchronizedMap(getOrCreateWeakMap(myManager,VAR_TO_CONST_VALUE_MAP_KEY,true));
  myVarToConstValueMap2=Collections.synchronizedMap(getOrCreateWeakMap(myManager,VAR_TO_CONST_VALUE_MAP_KEY,false));
  myPolyVariantResolveMaps[0]=getOrCreateWeakMap(myManager,JAVA_RESOLVE_MAP,true);
  myPolyVariantResolveMaps[1]=getOrCreateWeakMap(myManager,JAVA_RESOLVE_MAP_INCOMPLETE,true);
  myResolveMaps[0]=getOrCreateWeakMap(myManager,RESOLVE_MAP,true);
  myResolveMaps[1]=getOrCreateWeakMap(myManager,RESOLVE_MAP_INCOMPLETE,true);
  myPolyVariantResolveMaps[2]=getOrCreateWeakMap(myManager,JAVA_RESOLVE_MAP,false);
  myPolyVariantResolveMaps[3]=getOrCreateWeakMap(myManager,JAVA_RESOLVE_MAP_INCOMPLETE,false);
  myResolveMaps[2]=getOrCreateWeakMap(myManager,RESOLVE_MAP,false);
  myResolveMaps[3]=getOrCreateWeakMap(myManager,RESOLVE_MAP_INCOMPLETE,false);
  myCaclulatedlTypes=new WeakHashMap<PsiExpression,WeakReference<PsiType>>();
  myManager.registerRunnableToRunOnAnyChange(new Runnable(){
    public void run(){
synchronized (PsiLock.LOCK) {
        myCaclulatedlTypes.clear();
      }
    }
  }
);
}
