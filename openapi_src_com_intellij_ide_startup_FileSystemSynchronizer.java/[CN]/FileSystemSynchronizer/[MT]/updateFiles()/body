{
  ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  if (indicator != null) {
    indicator.pushState();
    indicator.setText(IdeBundle.message("progress.parsing.files"));
  }
  int totalFiles=myFilesToUpdate.size();
  int count=0;
  final BlockingQueue<FileContent> contentQueue=new ArrayBlockingQueue<FileContent>(16);
  final Thread contentLoadingThread=new Thread(new Runnable(){
    public void run(){
      try {
        for (        VirtualFile file : myFilesToUpdate) {
          FileContent content=new FileContent(file);
          try {
            content.getPhysicalBytes();
          }
 catch (          IOException e) {
            content.setEmptyContent();
          }
          contentQueue.put(content);
        }
        contentQueue.put(new FileContent(null));
      }
 catch (      InterruptedException e) {
        LOG.error(e);
      }
    }
  }
,"File Content Loading Thread");
  contentLoadingThread.setPriority(Thread.currentThread().getPriority());
  contentLoadingThread.start();
  while (true) {
    FileContent content=null;
    try {
      content=contentQueue.take();
    }
 catch (    InterruptedException e) {
      LOG.error(e);
    }
    if (content == null)     break;
    final VirtualFile file=content.getVirtualFile();
    if (file == null)     break;
    if (indicator != null) {
      indicator.setFraction(((double)++count) / totalFiles);
      indicator.setText2(file.getPresentableUrl());
    }
    for (int i=0; i < myUpdaters.size(); i++) {
      CacheUpdater updater=myUpdaters.get(i);
      if (myUpdateSets[i].remove(file)) {
        try {
          updater.processFile(content);
        }
 catch (        ProcessCanceledException e) {
          throw e;
        }
catch (        Exception e) {
          LOG.error(e);
        }
        if (myUpdateSets[i].isEmpty()) {
          try {
            updater.updatingDone();
          }
 catch (          ProcessCanceledException e) {
            throw e;
          }
catch (          Exception e) {
            LOG.error(e);
          }
          myUpdaters.set(i,null);
        }
      }
    }
  }
  updatingDone();
  if (indicator != null) {
    indicator.popState();
  }
}
