{
  r.lock();
  try {
    T value=getUpToDateOrNull();
    if (value != null) {
      return value == NULL ? null : value;
    }
    r.unlock();
    w.lock();
    try {
      value=getUpToDateOrNull();
      if (value != null) {
        return value == NULL ? null : value;
      }
      CachedValueProvider.Result<T> result=myProvider.compute();
      value=result == null ? null : result.getValue();
      myValue=new SoftReference<T>(value == null ? (T)NULL : value);
      computeTimeStamps(result == null ? null : result.getDependencyItems());
      myComputed=true;
      return value;
    }
  finally {
      w.unlock();
      r.lock();
    }
  }
  finally {
    r.unlock();
  }
}
