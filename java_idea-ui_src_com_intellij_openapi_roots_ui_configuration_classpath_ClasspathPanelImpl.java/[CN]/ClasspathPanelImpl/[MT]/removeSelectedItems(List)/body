{
  if (removedRows.isEmpty()) {
    return;
  }
  for (  final Object removedRow : removedRows) {
    final ClasspathTableItem<?> item=(ClasspathTableItem<?>)((Object[])removedRow)[ClasspathTableModel.ITEM_COLUMN];
    final OrderEntry orderEntry=item.getEntry();
    if (orderEntry == null) {
      continue;
    }
    getRootModel().removeOrderEntry(orderEntry);
  }
  final int[] selectedRows=myEntryTable.getSelectedRows();
  myModel.fireTableDataChanged();
  TableUtil.selectRows(myEntryTable,selectedRows);
  final StructureConfigurableContext context=ModuleStructureConfigurable.getInstance(myState.getProject()).getContext();
  context.getDaemonAnalyzer().queueUpdate(new ModuleProjectStructureElement(context,getRootModel().getModule()));
}
