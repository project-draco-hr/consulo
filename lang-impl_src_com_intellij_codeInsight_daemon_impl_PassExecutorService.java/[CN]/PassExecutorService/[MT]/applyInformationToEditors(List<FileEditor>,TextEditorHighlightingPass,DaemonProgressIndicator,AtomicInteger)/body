{
  if (ApplicationManager.getApplication().isUnitTestMode())   return;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (isDisposed() || myProject.isDisposed())       return;
      if (updateProgress.isCanceled()) {
        log(updateProgress,pass," is canceled during apply, sorry");
        return;
      }
      boolean applied=false;
      for (      final FileEditor fileEditor : fileEditors) {
        LOG.assertTrue(fileEditor != null);
        if (fileEditor.getComponent().isDisplayable()) {
          if (!applied) {
            applied=true;
            log(updateProgress,pass," Applied");
            pass.applyInformationToEditor();
          }
          afterApplyInformationToEditor(pass,fileEditor,updateProgress);
        }
      }
      if (threadsToStartCountdown.decrementAndGet() == 0) {
        log(updateProgress,pass,"Stopping ");
        updateProgress.stopIfRunning();
      }
 else {
        log(updateProgress,pass,"Finished but there are passes in the queue: " + threadsToStartCountdown.get());
      }
    }
  }
,ModalityState.stateForComponent(fileEditors.get(0).getComponent()));
}
