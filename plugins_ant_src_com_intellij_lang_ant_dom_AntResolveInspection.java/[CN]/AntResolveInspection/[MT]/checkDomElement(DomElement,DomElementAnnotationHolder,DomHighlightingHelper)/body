{
  if (element instanceof GenericDomValue) {
    final XmlElement valueElement=DomUtil.getValueElement(((GenericDomValue)element));
    if (valueElement != null) {
      checkReferences(valueElement,holder,element);
    }
  }
 else   if (element instanceof AntDomTypeDef) {
    final AntDomTypeDef typeDef=(AntDomTypeDef)element;
    final List<String> errors=typeDef.getErrorDescriptions();
    if (!errors.isEmpty()) {
      final StringBuilder builder=StringBuilderSpinAllocator.alloc();
      try {
        builder.append(AntBundle.message("failed.to.load.types")).append(":");
        for (        String error : errors) {
          builder.append("\n").append(error);
        }
        holder.createProblem(typeDef,builder.toString());
      }
  finally {
        StringBuilderSpinAllocator.dispose(builder);
      }
    }
  }
 else   if (element instanceof AntDomCustomElement) {
    final AntDomCustomElement custom=(AntDomCustomElement)element;
    if (custom.getDefinitionClass() == null) {
      final AntDomNamedElement declaringElement=custom.getDeclaringElement();
      if (declaringElement instanceof AntDomTypeDef) {
        String failedMessage=AntBundle.message("using.definition.which.type.failed.to.load");
        final String error=custom.getLoadError();
        if (error != null) {
          failedMessage=failedMessage + ": " + error;
        }
        holder.createProblem(custom,failedMessage);
      }
    }
  }
}
