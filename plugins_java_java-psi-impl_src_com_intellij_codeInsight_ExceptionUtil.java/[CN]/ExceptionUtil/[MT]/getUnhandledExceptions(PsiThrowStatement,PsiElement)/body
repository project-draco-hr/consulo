{
  List<PsiClassType> unhandled=new SmartList<PsiClassType>();
  for (  PsiType type : getPreciseThrowTypes(throwStatement.getException())) {
    List<PsiType> types=type instanceof PsiDisjunctionType ? ((PsiDisjunctionType)type).getDisjunctions() : Collections.singletonList(type);
    for (    PsiType subType : types) {
      if (subType instanceof PsiClassType) {
        PsiClassType classType=(PsiClassType)subType;
        if (!isUncheckedException(classType) && !isHandled(throwStatement,classType,topElement)) {
          unhandled.add(classType);
        }
      }
    }
  }
  return unhandled;
}
