{
  if (element == null || element.getParent() == topElement || element.getParent() == null)   return false;
  final PsiElement parent=element.getParent();
  for (  ExtraExceptionHandler handler : ExtraExceptionHandler.EP_NAME.getExtensions()) {
    if (handler.isHandled(exceptionType,element)) {
      return true;
    }
  }
  if (parent instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)parent;
    return isHandledByMethodThrowsClause(method,exceptionType);
  }
 else   if (parent instanceof PsiClass) {
    return parent instanceof PsiAnonymousClass && isHandled(parent,exceptionType,topElement);
  }
 else   if (parent instanceof PsiLambdaExpression) {
    final PsiType interfaceType=((PsiLambdaExpression)parent).getFunctionalInterfaceType();
    return isDeclaredBySAMMethod(exceptionType,interfaceType);
  }
 else   if (element instanceof PsiMethodReferenceExpression) {
    final PsiType interfaceType=((PsiMethodReferenceExpression)element).getFunctionalInterfaceType();
    return isDeclaredBySAMMethod(exceptionType,interfaceType);
  }
 else   if (parent instanceof PsiClassInitializer) {
    if (((PsiClassInitializer)parent).hasModifierProperty(PsiModifier.STATIC))     return false;
    if (!(parent.getParent() instanceof PsiAnonymousClass)) {
      final PsiClass aClass=((PsiClassInitializer)parent).getContainingClass();
      return areAllConstructorsThrow(aClass,exceptionType);
    }
  }
 else   if (parent instanceof PsiTryStatement) {
    PsiTryStatement tryStatement=(PsiTryStatement)parent;
    if (tryStatement.getTryBlock() == element && isCaught(tryStatement,exceptionType)) {
      return true;
    }
    if (tryStatement.getResourceList() == element && isCaught(tryStatement,exceptionType)) {
      return true;
    }
    PsiCodeBlock finallyBlock=tryStatement.getFinallyBlock();
    if (element instanceof PsiCatchSection && finallyBlock != null && blockCompletesAbruptly(finallyBlock)) {
      return true;
    }
  }
 else   if (parent instanceof JavaCodeFragment) {
    JavaCodeFragment codeFragment=(JavaCodeFragment)parent;
    JavaCodeFragment.ExceptionHandler exceptionHandler=codeFragment.getExceptionHandler();
    return exceptionHandler != null && exceptionHandler.isHandledException(exceptionType);
  }
 else   if (PsiImplUtil.isInServerPage(parent) && parent instanceof PsiFile) {
    return true;
  }
 else   if (parent instanceof PsiFile) {
    return false;
  }
 else   if (parent instanceof PsiField && ((PsiField)parent).getInitializer() == element) {
    final PsiClass aClass=((PsiField)parent).getContainingClass();
    if (aClass != null && !(aClass instanceof PsiAnonymousClass) && !((PsiField)parent).hasModifierProperty(PsiModifier.STATIC)) {
      return areAllConstructorsThrow(aClass,exceptionType);
    }
  }
  return isHandled(parent,exceptionType,topElement);
}
