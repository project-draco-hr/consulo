{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiVariable)) {
    return;
  }
  final PsiVariable variable=(PsiVariable)parent;
  final PsiTypeElement originalTypeElement=variable.getTypeElement();
  if (originalTypeElement == null) {
    return;
  }
  final PsiExpression initializer=variable.getInitializer();
  if (initializer == null) {
    return;
  }
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
  final PsiClassType javaLangString=factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_STRING,variable.getResolveScope());
  final PsiTypeElement typeElement=factory.createTypeElement(javaLangString);
  final StringBuilder newInitializer=buildReplacementInitializer(initializer,new StringBuilder());
  if (newInitializer == null) {
    return;
  }
  originalTypeElement.replace(typeElement);
  replaceExpression(initializer,newInitializer.toString());
}
