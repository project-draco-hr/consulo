{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiVariable)) {
    if (parent instanceof PsiNewExpression) {
      final PsiNewExpression newExpression=(PsiNewExpression)parent;
      final PsiExpression stringBuilderExpression=getCompleteExpression(newExpression);
      final StringBuilder stringExpression=buildStringExpression(stringBuilderExpression,new StringBuilder());
      if (stringExpression != null && stringBuilderExpression != null) {
        replaceExpression(stringBuilderExpression,stringExpression.toString());
      }
    }
    return;
  }
  final PsiVariable variable=(PsiVariable)parent;
  final PsiTypeElement originalTypeElement=variable.getTypeElement();
  if (originalTypeElement == null) {
    return;
  }
  final PsiExpression initializer=variable.getInitializer();
  if (initializer == null) {
    return;
  }
  final StringBuilder stringExpression=buildStringExpression(initializer,new StringBuilder());
  if (stringExpression == null) {
    return;
  }
  final PsiClassType javaLangString=TypeUtils.getStringType(variable);
  final PsiTypeElement typeElement=JavaPsiFacade.getElementFactory(project).createTypeElement(javaLangString);
  replaceExpression(initializer,stringExpression.toString());
  originalTypeElement.replace(typeElement);
}
