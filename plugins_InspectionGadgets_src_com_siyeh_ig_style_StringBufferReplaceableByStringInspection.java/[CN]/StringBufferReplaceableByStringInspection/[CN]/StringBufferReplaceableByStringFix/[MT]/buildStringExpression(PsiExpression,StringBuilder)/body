{
  if (initializer instanceof PsiNewExpression) {
    final PsiNewExpression newExpression=(PsiNewExpression)initializer;
    final PsiExpressionList argumentList=newExpression.getArgumentList();
    final PsiExpression[] arguments=argumentList.getExpressions();
    if (arguments.length == 1) {
      final PsiExpression argument=arguments[0];
      final PsiType type=argument.getType();
      if (!PsiType.INT.equals(type)) {
        result.append(argument.getText());
      }
    }
    return result;
  }
 else   if (initializer instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)initializer;
    final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
    final PsiExpression qualifier=methodExpression.getQualifierExpression();
    result=buildStringExpression(qualifier,result);
    if (result == null) {
      return null;
    }
    if ("toString".equals(methodExpression.getReferenceName())) {
      if (result.length() == 0) {
        result.append("\"\"");
      }
    }
 else {
      final PsiExpressionList argumentList=methodCallExpression.getArgumentList();
      final PsiExpression[] arguments=argumentList.getExpressions();
      if (arguments.length != 1) {
        return null;
      }
      final PsiExpression argument=arguments[0];
      if (result.length() != 0) {
        result.append('+').append(argument.getText());
      }
 else {
        final PsiType type=argument.getType();
        if (type instanceof PsiPrimitiveType) {
          result.append("String.valueOf(").append(argument.getText()).append(")");
        }
 else {
          result.append(argument.getText());
        }
      }
    }
    return result;
  }
  return null;
}
