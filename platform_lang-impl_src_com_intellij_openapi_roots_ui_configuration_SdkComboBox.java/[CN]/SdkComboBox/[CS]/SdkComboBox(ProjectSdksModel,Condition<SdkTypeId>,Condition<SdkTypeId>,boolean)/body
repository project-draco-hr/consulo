{
  super(new SdkComboBoxModel(jdkModel,getSdkFilter(filter),withNoneItem));
  myFilter=filter;
  myCreationFilter=creationFilter;
  setRenderer(new ProjectSdkListRenderer(){
    @Override public void doCustomize(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (SdkComboBox.this.isEnabled()) {
        setIcon(EMPTY_ICON);
        if (value instanceof InvalidSdkComboBoxItem) {
          final String str=value.toString();
          append(str,SimpleTextAttributes.ERROR_ATTRIBUTES);
        }
 else         if (value instanceof ModuleExtensionSdkComboBoxItem) {
          ModuleExtensionSdkComboBoxItem extensionSdkComboBoxItem=(ModuleExtensionSdkComboBoxItem)value;
          setIcon(AllIcons.Nodes.Module);
          append(extensionSdkComboBoxItem.getModule().getName(),SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);
          final String sdkName=extensionSdkComboBoxItem.getSdkName();
          if (sdkName != null) {
            append(" (" + extensionSdkComboBoxItem.getSdkName() + ")",SimpleTextAttributes.GRAYED_ATTRIBUTES);
          }
        }
 else         if (value instanceof InvalidModuleComboBoxItem) {
          setIcon(AllIcons.Nodes.Module);
          append(((InvalidModuleComboBoxItem)value).getModuleName(),SimpleTextAttributes.ERROR_BOLD_ATTRIBUTES);
        }
 else         if (value instanceof NoneSdkComboBoxItem) {
          setIcon(AllIcons.Actions.Help);
          append(value.toString(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
        }
 else {
          super.doCustomize(list,value != null ? ((SdkComboBoxItem)value).getSdk() : new NoneSdkComboBoxItem(),index,selected,hasFocus);
        }
      }
    }
  }
);
}
