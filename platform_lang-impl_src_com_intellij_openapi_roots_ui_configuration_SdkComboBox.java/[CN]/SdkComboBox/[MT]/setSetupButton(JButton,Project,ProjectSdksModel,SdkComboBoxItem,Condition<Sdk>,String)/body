{
  setUpButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      DefaultActionGroup group=new DefaultActionGroup();
      jdksModel.createAddActions(group,SdkComboBox.this,new Consumer<Sdk>(){
        @Override public void consume(        final Sdk sdk){
          if (project != null) {
            final SdkListConfigurable configurable=SdkListConfigurable.getInstance(project);
            configurable.addSdkNode(sdk,false);
          }
          reloadModel(new SdkComboBoxItem(sdk),project);
          setSelectedSdk(sdk);
          if (additionalSetup != null) {
            if (additionalSetup.value(sdk)) {
              setSelectedSdk(firstItem.getSdk());
            }
          }
        }
      }
,myCreationFilter);
      final DataContext dataContext=DataManager.getInstance().getDataContext(SdkComboBox.this);
      if (group.getChildrenCount() > 1) {
        JBPopupFactory.getInstance().createActionGroupPopup(actionGroupTitle,group,dataContext,JBPopupFactory.ActionSelectionAid.MNEMONICS,false).showUnderneathOf(setUpButton);
      }
 else {
        final AnActionEvent event=new AnActionEvent(null,dataContext,ActionPlaces.UNKNOWN,new Presentation(""),ActionManager.getInstance(),0);
        group.getChildren(event)[0].actionPerformed(event);
      }
    }
  }
);
}
