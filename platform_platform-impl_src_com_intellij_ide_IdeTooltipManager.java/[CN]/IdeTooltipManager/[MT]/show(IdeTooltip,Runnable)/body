{
  boolean toCenterX;
  boolean toCenterY;
  boolean toCenter=tooltip.isToCenter();
  if (!toCenter) {
    Dimension size=tooltip.getComponent().getSize();
    toCenterX=size.width < 64;
    toCenterY=size.height < 64;
    toCenter=toCenterX || toCenterY;
  }
 else {
    toCenterX=true;
    toCenterY=true;
  }
  Point effectivePoint=tooltip.getPoint();
  if (toCenter) {
    Rectangle bounds=tooltip.getComponent().getBounds();
    effectivePoint.x=toCenterX ? bounds.width / 2 : effectivePoint.x;
    effectivePoint.y=toCenterY ? (bounds.height / 2) : effectivePoint.y;
  }
  if (myCurrentComponent == tooltip.getComponent() && effectivePoint.equals(new Point(myX,myY))) {
    return;
  }
  Color bg=getTextBackground(true);
  Color fg=getTextForeground(true);
  Color border=getBorderColor(true);
  BalloonBuilder builder=myPopupFactory.createBalloonBuilder(tooltip.getTipComponent()).setPreferredPosition(tooltip.getPreferredPosition()).setFillColor(bg).setBorderColor(border).setAnimationCycle(150).setShowCallout(true).setCalloutShift(4);
  tooltip.getTipComponent().setForeground(fg);
  tooltip.getTipComponent().setBorder(new EmptyBorder(1,3,2,3));
  tooltip.getTipComponent().setFont(getTextFont(true));
  if (beforeShow != null) {
    beforeShow.run();
  }
  myCurrentTipUi=(BalloonImpl)builder.createBalloon();
  myCurrentComponent=tooltip.getComponent();
  myX=effectivePoint.x;
  myY=effectivePoint.y;
  myCurrentTipIsCentered=toCenter;
  myCurrentTooltip=tooltip;
  myCurrentTipUi.show(new RelativePoint(tooltip.getComponent(),effectivePoint),tooltip.getPreferredPosition());
}
