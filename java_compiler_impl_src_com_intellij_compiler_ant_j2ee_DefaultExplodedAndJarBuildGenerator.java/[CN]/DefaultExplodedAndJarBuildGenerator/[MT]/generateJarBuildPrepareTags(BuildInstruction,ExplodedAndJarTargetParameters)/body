{
  final List<Tag> prepareTags=new SmartList<Tag>();
  final String tempDirProperty=BuildProperties.getTempDirForModuleProperty(parameters.getContainingModule().getName());
  final File moduleBaseDir=parameters.getChunk().getBaseDir();
  instruction.accept(new BuildInstructionVisitor(){
    public boolean visitJarAndCopyBuildInstruction(    JarAndCopyBuildInstruction instruction) throws RuntimeException {
      if (instruction.isExternalDependencyInstruction())       return true;
      final String jarName=new File(instruction.getOutputRelativePath()).getName();
      final String destJarPath=BuildProperties.propertyRef(tempDirProperty) + "/" + jarName;
      prepareTags.add(generateJarTag(instruction,destJarPath,moduleBaseDir,parameters.getGenerationOptions()));
      return true;
    }
  }
);
  return prepareTags.toArray(new Tag[prepareTags.size()]);
}
