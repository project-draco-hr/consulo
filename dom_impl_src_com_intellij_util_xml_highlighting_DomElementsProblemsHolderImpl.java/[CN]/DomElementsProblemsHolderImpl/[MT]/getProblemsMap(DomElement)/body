{
  final Map<Class<? extends DomElementsInspection>,List<DomElementProblemDescriptor>> map=myCachedChildrenErrors.get(domElement);
  if (map != null) {
    return map;
  }
  final Map<Class<? extends DomElementsInspection>,List<DomElementProblemDescriptor>> problems=new ConcurrentHashMap<Class<? extends DomElementsInspection>,List<DomElementProblemDescriptor>>();
  mergeMaps(problems,myCachedErrors.get(domElement));
  if (domElement.getXmlElement() != null) {
    domElement.acceptChildren(new DomElementVisitor(){
      public void visitDomElement(      DomElement element){
        mergeMaps(problems,getProblemsMap(element));
      }
    }
);
  }
  myCachedChildrenErrors.put(domElement,problems);
  return problems;
}
