{
synchronized (PsiLock.LOCK) {
    if (!myCachedErrors.containsKey(mainElement)) {
      final DomElementAnnotationHolderImpl holder=new DomElementAnnotationHolderImpl();
      ((DomElementAnnotationsManagerImpl)DomElementAnnotationsManager.getInstance(mainElement.getManager().getProject())).annotate(mainElement,holder,myRootType);
      final List<DomElementProblemDescriptor> result=new SmartList<DomElementProblemDescriptor>();
      boolean childrenHaveErrors=false;
      for (      final DomElementProblemDescriptor descriptor : holder) {
        final DomElement errorElement=descriptor.getDomElement();
        if (mainElement.equals(errorElement.getParent())) {
          addProblem(errorElement,descriptor);
          childrenHaveErrors=true;
          result.clear();
        }
 else {
          LOG.assertTrue(mainElement.equals(errorElement),"DOM problem has been created for wrong element: " + descriptor + "\nRight element:"+ mainElement);
          if (!childrenHaveErrors) {
            result.add(descriptor);
          }
        }
      }
      myCachedErrors.put(mainElement,result);
    }
    return !myCachedErrors.get(mainElement).isEmpty();
  }
}
