{
  if (element == myRoot) {
    final List<Object> children=new ArrayList<Object>();
    for (int idx=0; idx < ourMessagesOrder.length; idx++) {
      final ErrorTreeElementKind kind=ourMessagesOrder[idx];
      if (ErrorTreeElementKind.WARNING.equals(kind)) {
        if (ErrorTreeViewConfiguration.getInstance(myProject).isHideWarnings()) {
          continue;
        }
      }
      final List<SimpleMessageElement> elems=mySimpleMessages.get(kind);
      if (elems != null) {
        children.addAll(elems);
      }
    }
    for (Iterator<String> it=myGroupNames.iterator(); it.hasNext(); ) {
      final GroupingElement groupingElement=myGroupNameToElementMap.get(it.next());
      if (shouldShowFileElement(groupingElement)) {
        children.add(groupingElement);
      }
    }
    return (Object[])children.toArray(new Object[children.size()]);
  }
 else   if (element instanceof GroupingElement) {
    final List<NavigatableMessageElement> children=myGroupNameToMessagesMap.get(((GroupingElement)element).getName());
    if (children != null && children.size() > 0) {
      if (ErrorTreeViewConfiguration.getInstance(myProject).isHideWarnings()) {
        final List<NavigatableMessageElement> filtered=new ArrayList<NavigatableMessageElement>(children.size());
        for (Iterator<NavigatableMessageElement> it=children.iterator(); it.hasNext(); ) {
          final NavigatableMessageElement navigatableMessageElement=it.next();
          if (ErrorTreeElementKind.WARNING.equals(navigatableMessageElement.getKind())) {
            continue;
          }
          filtered.add(navigatableMessageElement);
        }
        return filtered.toArray();
      }
      return children.toArray();
    }
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
