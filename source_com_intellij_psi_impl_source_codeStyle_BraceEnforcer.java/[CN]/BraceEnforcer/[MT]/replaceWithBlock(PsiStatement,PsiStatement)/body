{
  LOG.assertTrue(statement != null);
  if (!statement.isValid()) {
    LOG.assertTrue(false);
  }
  if (!checkRangeContainsElement(blockCandidate))   return;
  final PsiManager manager=statement.getManager();
  LOG.assertTrue(manager != null);
  final PsiElementFactory factory=manager.getElementFactory();
  String oldText=blockCandidate.getText();
  StringBuffer buf=new StringBuffer(oldText.length() + 3);
  buf.append('{');
  buf.append(oldText);
  buf.append("\n}");
  final int oldTextLength=statement.getTextLength();
  try {
    CodeEditUtil.replaceChild((CompositeElement)SourceTreeToPsiMap.psiElementToTree(statement),SourceTreeToPsiMap.psiElementToTree(blockCandidate),SourceTreeToPsiMap.psiElementToTree(factory.createStatementFromText(buf.toString(),null)));
    CodeStyleManager.getInstance(statement.getProject()).reformat(statement,true);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
 finally {
    updateResultRange(oldTextLength,statement.getTextLength());
  }
}
