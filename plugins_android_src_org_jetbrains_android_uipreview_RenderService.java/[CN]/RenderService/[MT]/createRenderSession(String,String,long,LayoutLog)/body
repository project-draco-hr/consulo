{
  final ILayoutPullParser parser=new XmlParser();
  parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES,true);
  parser.setInput(new StringReader(layoutXmlText));
  final Pair<Dimension,ScreenOrientation> pair=getDimension();
  if (pair == null) {
    return null;
  }
  final Dimension dimension=pair.getFirst();
  if (dimension == null) {
    return null;
  }
  final ScreenOrientation orientation=pair.getSecond();
  if (orientation == null) {
    return null;
  }
  final VersionQualifier versionQualifier=myConfig.getVersionQualifier();
  if (versionQualifier == null) {
    return null;
  }
  final int targetSdkVersion=versionQualifier.getVersion();
  final int minSdkVersion=myMinSdkVersion >= 0 ? myMinSdkVersion : targetSdkVersion;
  final DensityQualifier densityQualifier=myConfig.getDensityQualifier();
  final Density density=densityQualifier != null ? densityQualifier.getValue() : Density.MEDIUM;
  final double xdpi=Double.isNaN(myXdpi) ? density.getDpiValue() : myXdpi;
  final double ydpi=Double.isNaN(myYdpi) ? density.getDpiValue() : myYdpi;
  final ScreenSizeQualifier screenSizeQualifier=myConfig.getScreenSizeQualifier();
  final ScreenSize screenSize=screenSizeQualifier != null ? screenSizeQualifier.getValue() : ScreenSize.NORMAL;
  final RenderResources resolver=myLayoutLib.getRevision() > 0 ? myResourceResolver : myLegacyResourceResolver;
  myLayoutLib.clearCaches(PROJECT_KEY);
  final SessionParams params=new SessionParams(parser,RenderingMode.NORMAL,PROJECT_KEY,new HardwareConfig(dimension.width,dimension.height,density,(float)xdpi,(float)ydpi,screenSize,orientation,false),resolver,myProjectCallback,minSdkVersion,targetSdkVersion,log);
  params.setExtendedViewInfoMode(false);
  params.setAppLabel(appLabel);
  params.setTimeout(timeout);
  return myLayoutLib.createSession(params);
}
