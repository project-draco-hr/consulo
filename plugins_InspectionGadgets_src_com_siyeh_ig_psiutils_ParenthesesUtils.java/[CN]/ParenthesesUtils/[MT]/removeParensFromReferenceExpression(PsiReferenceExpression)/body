{
  final PsiExpression qualifier=referenceExpression.getQualifierExpression();
  if (qualifier != null) {
    final PsiType[] typeParameters=referenceExpression.getTypeParameters();
    if (typeParameters.length > 0) {
      @NonNls final StringBuilder result=new StringBuilder();
      result.append(removeParentheses(qualifier));
      result.append(".<");
      result.append(typeParameters[0].getCanonicalText());
      for (int i=1; i < typeParameters.length; i++) {
        final PsiType typeParameter=typeParameters[i];
        result.append(',');
        result.append(typeParameter.getCanonicalText());
      }
      result.append('>');
      result.append(referenceExpression.getReferenceName());
      return result.toString();
    }
 else {
      return removeParentheses(qualifier) + '.' + referenceExpression.getReferenceName();
    }
  }
 else {
    return referenceExpression.getText();
  }
}
