{
  if (parentExpression instanceof PsiPolyadicExpression) {
    final PsiPolyadicExpression parentBinaryExpression=(PsiPolyadicExpression)parentExpression;
    PsiExpression[] parentOperands=parentBinaryExpression.getOperands();
    if (expression instanceof PsiPolyadicExpression) {
      final PsiPolyadicExpression childBinaryExpression=(PsiPolyadicExpression)expression;
      final IElementType childOperator=childBinaryExpression.getOperationTokenType();
      final IElementType parentOperator=parentBinaryExpression.getOperationTokenType();
      if (ignoreClarifyingParentheses && !childOperator.equals(parentOperator)) {
        return true;
      }
      final PsiType parentType=parentBinaryExpression.getType();
      if (parentType == null) {
        return true;
      }
      final PsiType childType=childBinaryExpression.getType();
      if (!parentType.equals(childType)) {
        return true;
      }
      if (!PsiTreeUtil.isAncestor(parentOperands[0],expression,false)) {
        if (!isCommutativeBinaryOperator(parentOperator)) {
          return true;
        }
      }
      return false;
    }
 else     if (expression instanceof PsiConditionalExpression) {
      if (!PsiTreeUtil.isAncestor(parentOperands[0],expression,false)) {
        return true;
      }
    }
  }
 else   if (parentExpression instanceof PsiPrefixExpression) {
    if (expression instanceof PsiPolyadicExpression) {
      return true;
    }
  }
  return false;
}
