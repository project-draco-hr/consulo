{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  JspFile file=(JspFile)PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
  final int offset=editor.getCaretModel().getOffset();
  PsiElement element=file.findElementAt(offset);
  if (element == null) {
    element=file.findElementAt(editor.getDocument().getTextLength() - 1);
    if (element == null)     return;
  }
  if (element instanceof JspToken && ((JspToken)element).getTokenType() == JspTokenType.JSP_TEMPLATE_DATA) {
    int offsetWithinParent=offset - element.getParent().getTextOffset() - element.getStartOffsetInParent();
    int index=offsetWithinParent - 1;
    String text=element.getText();
    index=JspParsingUtil.eatAttributes(index,text);
    index=JspParsingUtil.eatWhiteSpace(index,text);
    int tagEnd=index + 1;
    index=JspParsingUtil.eatTagName(index,text);
    if (index >= 0 && text.charAt(index) == '<') {
      String tagName=text.substring(index + 1,tagEnd);
      if (tagName.length() == 0)       return;
      int i;
      for (i=offsetWithinParent; i < text.length() && Character.isWhitespace(text.charAt(i)); ++i)       ;
      final String toInsert="</" + tagName + ">";
      if (!text.startsWith(toInsert,i)) {
        final XmlNSDescriptor descriptor=file.getManager().getJspElementFactory().getXHTMLDescriptor();
        if (descriptor != null) {
          try {
            final XmlTag tagFromText=file.getManager().getElementFactory().createTagFromText("<" + tagName + " xmlns=\""+ XmlUtil.XHTML_URI+ "\"/>");
            if (tagFromText != null) {
              final XmlElementDescriptor elementDescriptor=descriptor.getElementDescriptor(tagFromText);
              if (elementDescriptor != null && elementDescriptor.getContentType() != XmlElementDescriptor.CONTENT_TYPE_EMPTY) {
                editor.getDocument().insertString(offset,toInsert);
              }
            }
          }
 catch (          IncorrectOperationException ioe) {
          }
        }
      }
    }
  }
}
