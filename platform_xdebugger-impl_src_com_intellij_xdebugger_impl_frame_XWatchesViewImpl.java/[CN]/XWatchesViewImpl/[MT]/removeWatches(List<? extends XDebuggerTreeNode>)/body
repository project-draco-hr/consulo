{
  List<? extends WatchNode> children=myRootNode.getWatchChildren();
  int minIndex=Integer.MAX_VALUE;
  List<XDebuggerTreeNode> toRemove=new ArrayList<>();
  for (  XDebuggerTreeNode node : nodes) {
    @SuppressWarnings("SuspiciousMethodCalls") int index=children.indexOf(node);
    if (index != -1) {
      toRemove.add(node);
      minIndex=Math.min(minIndex,index);
    }
  }
  myRootNode.removeChildren(toRemove);
  List<? extends WatchNode> newChildren=myRootNode.getWatchChildren();
  if (!newChildren.isEmpty()) {
    WatchNode node=newChildren.get(Math.min(minIndex,newChildren.size() - 1));
    TreeUtil.selectNode(getTree(),node);
  }
  updateSessionData();
}
