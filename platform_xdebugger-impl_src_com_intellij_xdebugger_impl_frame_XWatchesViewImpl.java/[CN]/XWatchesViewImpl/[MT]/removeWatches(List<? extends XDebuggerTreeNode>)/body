{
  List<? extends WatchNode> children=myRootNode.getAllChildren();
  int minIndex=Integer.MAX_VALUE;
  List<XDebuggerTreeNode> toRemove=new ArrayList<XDebuggerTreeNode>();
  if (children != null) {
    for (    XDebuggerTreeNode node : nodes) {
      @SuppressWarnings("SuspiciousMethodCalls") int index=children.indexOf(node);
      if (index != -1) {
        toRemove.add(node);
        minIndex=Math.min(minIndex,index);
      }
    }
  }
  myRootNode.removeChildren(toRemove);
  List<? extends WatchNode> newChildren=myRootNode.getAllChildren();
  if (newChildren != null && !newChildren.isEmpty()) {
    WatchNode node=minIndex < newChildren.size() ? newChildren.get(minIndex) : newChildren.get(newChildren.size() - 1);
    TreeUtil.selectNode(myTreePanel.getTree(),node);
  }
  updateSessionData();
}
