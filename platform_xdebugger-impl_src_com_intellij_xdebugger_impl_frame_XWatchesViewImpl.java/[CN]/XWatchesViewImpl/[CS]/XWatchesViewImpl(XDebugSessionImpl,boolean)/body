{
  super(session);
  myWatchesInVariables=watchesInVariables;
  XDebuggerTree tree=getTree();
  createNewRootNode(null);
  DebuggerUIUtil.registerActionOnComponent(XDebuggerActions.XNEW_WATCH,tree,myDisposables);
  DebuggerUIUtil.registerActionOnComponent(XDebuggerActions.XREMOVE_WATCH,tree,myDisposables);
  DebuggerUIUtil.registerActionOnComponent(XDebuggerActions.XCOPY_WATCH,tree,myDisposables);
  DebuggerUIUtil.registerActionOnComponent(XDebuggerActions.XEDIT_WATCH,tree,myDisposables);
  EmptyAction.registerWithShortcutSet(XDebuggerActions.XNEW_WATCH,CommonActionsPanel.getCommonShortcut(CommonActionsPanel.Buttons.ADD),tree);
  EmptyAction.registerWithShortcutSet(XDebuggerActions.XREMOVE_WATCH,CommonActionsPanel.getCommonShortcut(CommonActionsPanel.Buttons.REMOVE),tree);
  DnDManager.getInstance().registerTarget(this,tree);
  new AnAction(){
    @Override public void actionPerformed(    @NotNull AnActionEvent e){
      Object contents=CopyPasteManager.getInstance().getContents(XWatchTransferable.EXPRESSIONS_FLAVOR);
      if (contents instanceof List) {
        for (        Object item : ((List)contents)) {
          if (item instanceof XExpression) {
            addWatchExpression(((XExpression)item),-1,true);
          }
        }
      }
    }
  }
.registerCustomShortcutSet(CommonShortcuts.getPaste(),tree,myDisposables);
  ActionToolbarImpl toolbar=(ActionToolbarImpl)ActionManager.getInstance().createActionToolbar(ActionPlaces.DEBUGGER_TOOLBAR,DebuggerSessionTabBase.getCustomizedActionGroup(XDebuggerActions.WATCHES_TREE_TOOLBAR_GROUP),!myWatchesInVariables);
  toolbar.setBorder(new CustomLineBorder(CaptionPanel.CNT_ACTIVE_BORDER_COLOR,0,0,myWatchesInVariables ? 0 : 1,myWatchesInVariables ? 1 : 0));
  toolbar.setTargetComponent(tree);
  if (!myWatchesInVariables) {
    getTree().getEmptyText().setText(XDebuggerBundle.message("debugger.no.watches"));
  }
  getPanel().add(toolbar.getComponent(),myWatchesInVariables ? BorderLayout.WEST : BorderLayout.NORTH);
  installEditListeners();
}
