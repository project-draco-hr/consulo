{
  final Set<WeakReference<OuterLanguageElement>> outerElements=myOuterLanguageElements.get(lang);
  if (outerElements == null)   return;
  final Iterator<WeakReference<OuterLanguageElement>> iterator=outerElements.iterator();
  OuterLanguageElement prev=null;
  while (iterator.hasNext()) {
    final WeakReference<OuterLanguageElement> outerElement=iterator.next();
    final OuterLanguageElement outer=outerElement.get();
    if (outer == null) {
      iterator.remove();
      continue;
    }
    if (prev != null && prev.getFollowingText() == null && outer.getTextRange().getStartOffset() == prev.getTextRange().getEndOffset()) {
      final CompositeElement prevParent=prev.getTreeParent();
      if (prevParent != null && prevParent.getElementType() == JspElementType.JSP_TEMPLATE_EXPRESSION || PsiTreeUtil.getParentOfType(outer,JspWhileStatement.class) != null) {
        prev=mergeOuterLanguageElements(outer,prev);
      }
 else {
        prev=mergeOuterLanguageElements(prev,outer);
      }
    }
 else {
      prev=outer;
    }
  }
}
