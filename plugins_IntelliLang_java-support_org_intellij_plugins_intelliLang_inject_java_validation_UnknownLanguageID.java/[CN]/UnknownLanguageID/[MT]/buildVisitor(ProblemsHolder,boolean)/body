{
  return new JavaElementVisitor(){
    final String annotationName=Configuration.getProjectInstance(holder.getProject()).getAdvancedConfiguration().getLanguageAnnotationClass();
    public void visitReferenceExpression(    PsiReferenceExpression expression){
    }
    @Override public void visitNameValuePair(    PsiNameValuePair valuePair){
      final PsiAnnotation annotation=PsiTreeUtil.getParentOfType(valuePair,PsiAnnotation.class);
      if (annotation != null) {
        final String qualifiedName=annotation.getQualifiedName();
        if (annotationName.equals(qualifiedName)) {
          final String name=valuePair.getName();
          if (name == null || "value".equals(name)) {
            final PsiAnnotationMemberValue value=valuePair.getValue();
            if (value instanceof PsiExpression) {
              final PsiExpression expression=(PsiExpression)value;
              final Object id=JavaPsiFacade.getInstance(expression.getProject()).getConstantEvaluationHelper().computeConstantExpression(expression);
              if (id instanceof String) {
                final Language language=InjectedLanguage.findLanguageById((String)id);
                if (language == null) {
                  holder.registerProblem(expression,"Unknown language '" + id + "'",ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
                }
              }
            }
          }
        }
      }
    }
  }
;
}
