{
  if (classname == null || name == null || name.length() == 0)   return null;
  boolean newlyLoaded=false;
  final URL[] urls=getClassPathUrls();
  Class clazz=CLASS_CACHE.getClass(urls,classname);
  if (clazz == null) {
    ClassLoader loader=getClassLoader(urls);
    try {
      if (loader == null) {
        clazz=Class.forName(classname);
      }
 else {
        clazz=loader.loadClass(classname);
      }
      newlyLoaded=true;
    }
 catch (    ClassNotFoundException e) {
      myLocalizedError=e.getLocalizedMessage();
      clazz=null;
    }
catch (    NoClassDefFoundError e) {
      myLocalizedError=e.getLocalizedMessage();
      clazz=null;
    }
catch (    UnsupportedClassVersionError e) {
      myLocalizedError=e.getLocalizedMessage();
      clazz=null;
    }
  }
  final String nsPrefix=(uri == null) ? null : getSourceElement().getPrefixByNamespace(uri);
  final AntTypeId id=(nsPrefix == null) ? new AntTypeId(name) : new AntTypeId(name,nsPrefix);
  final AntTypeDefinitionImpl def;
  if (clazz == null) {
    def=new AntTypeDefinitionImpl(id,classname,isTask());
  }
 else {
    myClassesLoaded=true;
    def=(AntTypeDefinitionImpl)AntFileImpl.createTypeDefinition(id,clazz,Task.class.isAssignableFrom(clazz));
  }
  if (newlyLoaded && clazz != null) {
    CLASS_CACHE.setClass(urls,classname,clazz);
  }
  if (def != null) {
    myNewDefinitions=ArrayUtil.append(myNewDefinitions,def);
    def.setDefiningElement(this);
    final AntStructuredElement parent=getAntParent();
    if (parent != null) {
      parent.registerCustomType(def);
      final AntFile antFile=parent.getAntFile();
      if (antFile != null) {
        for (        final AntTypeId typeId : def.getNestedElements()) {
          final String nestedClassName=def.getNestedClassName(typeId);
          AntTypeDefinitionImpl nestedDef=(AntTypeDefinitionImpl)antFile.getBaseTypeDefinition(nestedClassName);
          if (nestedDef == null) {
            nestedDef=loadClass(nestedClassName,typeId.getName(),uri);
          }
          if (nestedDef != null) {
            nestedDef.setDefiningElement(this);
            parent.registerCustomType(nestedDef);
          }
        }
      }
    }
  }
  return def;
}
