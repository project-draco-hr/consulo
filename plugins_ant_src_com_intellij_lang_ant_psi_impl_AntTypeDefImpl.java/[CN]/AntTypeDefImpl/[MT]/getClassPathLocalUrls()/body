{
  final List<URL> urls=new ArrayList<URL>();
  final String baseDir=computeAttributeValue("${" + AntFileImpl.BASEDIR_ATTR + "}");
  final String classpath=getClassPath();
  if (classpath != null) {
    final PathTokenizer tokenizer=new PathTokenizer(classpath);
    while (tokenizer.hasMoreTokens()) {
      addUrl(baseDir,urls,tokenizer.nextToken());
    }
  }
  final List<File> files=new ArrayList<File>();
  for (  PsiReference reference : getReferences()) {
    if (reference instanceof AntRefIdReference) {
      final PsiElement resolved=reference.resolve();
      if (resolved instanceof AntFilesProvider) {
        files.addAll(((AntFilesProvider)resolved).getFiles());
      }
    }
  }
  for (  AntElement antElement : getChildren()) {
    if (antElement instanceof AntFilesProvider) {
      files.addAll(((AntFilesProvider)antElement).getFiles());
    }
  }
  for (  File file : files) {
    try {
      urls.add(file.toURL());
    }
 catch (    MalformedURLException e) {
    }
  }
  return urls;
}
