{
  AndroidPlatform platform=getConfiguration().getAndroidPlatform();
  if (platform != null) {
    final String emulatorPath=platform.getSdkData().getLocation() + File.separator + AndroidCommonUtils.toolPath(SdkConstants.FN_EMULATOR);
    final GeneralCommandLine commandLine=new GeneralCommandLine();
    commandLine.setExePath(FileUtil.toSystemDependentName(emulatorPath));
    if (avdName != null) {
      commandLine.addParameter("-avd");
      commandLine.addParameter(avdName);
    }
    String[] params=ParametersList.parse(commands);
    for (    String s : params) {
      if (s.length() > 0) {
        commandLine.addParameter(s);
      }
    }
    handler.notifyTextAvailable(commandLine.getCommandLineString() + '\n',ProcessOutputTypes.STDOUT);
    ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
      @Override public void run(){
        try {
          AndroidUtils.executeCommand(commandLine,new OutputProcessor(){
            @Override public void onTextAvailable(            @NotNull String text){
              handler.notifyTextAvailable(text,ProcessOutputTypes.STDOUT);
            }
          }
,WaitingStrategies.WaitForTime.getInstance(5000));
        }
 catch (        ExecutionException e) {
          final String stackTrace=AndroidCommonUtils.getStackTrace(e);
          handler.notifyTextAvailable(stackTrace,ProcessOutputTypes.STDERR);
        }
      }
    }
);
  }
}
