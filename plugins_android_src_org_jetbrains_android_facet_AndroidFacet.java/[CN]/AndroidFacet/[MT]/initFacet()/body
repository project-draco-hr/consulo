{
  StartupManager.getInstance(getModule().getProject()).runWhenProjectIsInitialized(new Runnable(){
    public void run(){
      myListener=new AndroidResourceFilesListener(AndroidFacet.this);
      LocalFileSystem.getInstance().addVirtualFileListener(myListener);
      if (ApplicationManager.getApplication().isUnitTestMode()) {
        return;
      }
      ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
        public void run(){
          Module module=getModule();
          Project project=module.getProject();
          if (project.isDisposed()) {
            return;
          }
          DumbService.getInstance(project).waitForSmartMode();
          final HashSet<ResourceEntry> resourceSet=new HashSet<ResourceEntry>();
          AndroidCompileUtil.collectAllResources(AndroidFacet.this,resourceSet);
          myListener.setResourceSet(resourceSet);
          if (getConfiguration().REGENERATE_R_JAVA && AndroidAptCompiler.isToCompileModule(module,getConfiguration())) {
            AndroidCompileUtil.generate(module,new AndroidAptCompiler());
          }
          if (getConfiguration().REGENERATE_JAVA_BY_AIDL) {
            AndroidCompileUtil.generate(module,new AndroidIdlCompiler(project));
          }
          AndroidCompileUtil.generate(module,new AndroidRenderscriptCompiler());
          activateSourceAutogenerating();
        }
      }
);
    }
  }
);
  getModule().getMessageBus().connect(this).subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootListener(){
    private Sdk myPrevSdk;
    private String[] myDependencies;
    public void beforeRootsChange(    final ModuleRootEvent event){
    }
    public void rootsChanged(    final ModuleRootEvent event){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          if (isDisposed()) {
            return;
          }
          final Sdk newSdk=ModuleRootManager.getInstance(getModule()).getSdk();
          if (newSdk != null && newSdk.getSdkType() instanceof AndroidSdkType && !newSdk.equals(myPrevSdk)) {
            myPrevSdk=newSdk;
            androidPlatformChanged();
          }
          PsiDocumentManager.getInstance(getModule().getProject()).commitAllDocuments();
          final PropertiesFile projectProperties=AndroidUtils.findPropertyFile(getModule(),SdkConstants.FN_PROJECT_PROPERTIES);
          if (projectProperties == null) {
            return;
          }
          final Pair<Properties,VirtualFile> localProperties=AndroidUtils.readPropertyFile(getModule(),SdkConstants.FN_LOCAL_PROPERTIES);
          updateTargetProperty(projectProperties);
          updateLibraryProperty(projectProperties);
          final VirtualFile[] dependencies=collectDependencies();
          final String[] dependencyPaths=toSortedPaths(dependencies);
          if (myDependencies == null || !Comparing.equal(myDependencies,dependencyPaths)) {
            updateDependenciesInPropertyFile(projectProperties,localProperties,dependencies);
            myDependencies=dependencyPaths;
          }
        }
      }
);
    }
  }
);
}
