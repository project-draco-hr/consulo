{
  PsiClass baseClass=findClass(className,getModule().getModuleWithDependenciesAndLibrariesScope(true));
  if (baseClass != null) {
    String[] baseClassTagNames=constructor.getTagNamesByClass(baseClass);
    for (    String tagName : baseClassTagNames) {
      map.put(tagName,baseClass);
    }
    try {
      ClassInheritorsSearch.search(baseClass,scope,true).forEach(new Processor<PsiClass>(){
        public boolean process(        PsiClass c){
          String[] tagNames=constructor.getTagNamesByClass(c);
          for (          String tagName : tagNames) {
            map.put(tagName,c);
          }
          return true;
        }
      }
);
    }
 catch (    IndexNotReadyException e) {
      LOG.info(e);
      return false;
    }
  }
  return map.size() > 0;
}
