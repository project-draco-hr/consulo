{
  Map<String,SmartPsiElementPointer<PsiClass>> viewClassMap=myClassMaps.get(className);
  if (viewClassMap != null && !forceRebuild)   return viewClassMap;
  final HashMap<String,PsiClass> map=new HashMap<String,PsiClass>();
  if (fillMap(className,constructor,getModule().getModuleWithDependenciesAndLibrariesScope(true),map,true)) {
    viewClassMap=new HashMap<String,SmartPsiElementPointer<PsiClass>>(map.size());
    final SmartPointerManager manager=SmartPointerManager.getInstance(getModule().getProject());
    for (    Map.Entry<String,PsiClass> entry : map.entrySet()) {
      viewClassMap.put(entry.getKey(),manager.createSmartPsiElementPointer(entry.getValue()));
    }
    myClassMaps.put(className,viewClassMap);
  }
  return viewClassMap != null ? viewClassMap : Collections.<String,SmartPsiElementPointer<PsiClass>>emptyMap();
}
