{
  final XmlTag tag=PsiTreeUtil.getParentOfType(myElement,XmlTag.class);
  if (tag == null)   return null;
  String[] tagNames=null;
switch (myType) {
case GroupReference:
    tagNames=new String[]{"group"};
  break;
case AttributeGroupReference:
tagNames=new String[]{"attributeGroup"};
break;
case AttributeReference:
tagNames=new String[]{"attribute"};
break;
case ElementReference:
tagNames=new String[]{"element"};
break;
case TypeReference:
tagNames=new String[]{"simpleType","complexType"};
break;
}
CompletionProcessor processor=new CompletionProcessor();
processor.tag=tag;
HashSet<String> visitedNamespaces=new HashSet<String>(1);
for (String namespace : tag.knownNamespaces()) {
final XmlNSDescriptor nsDescriptor=tag.getNSDescriptor(namespace,true);
if (nsDescriptor instanceof XmlNSDescriptorImpl) {
processNamespace(namespace,processor,nsDescriptor,tagNames);
visitedNamespaces.add(namespace);
}
}
XmlDocument document=((XmlFile)myElement.getContainingFile()).getDocument();
final XmlTag rootTag=document.getRootTag();
final String namespace=rootTag != null ? rootTag.getAttributeValue("targetNamespace") : "";
if (!visitedNamespaces.contains(namespace)) {
XmlNSDescriptor nsDescriptor=(XmlNSDescriptor)document.getMetaData();
processNamespace(namespace,processor,nsDescriptor,tagNames);
}
return processor.myElements.toArray(new String[processor.myElements.size()]);
}
