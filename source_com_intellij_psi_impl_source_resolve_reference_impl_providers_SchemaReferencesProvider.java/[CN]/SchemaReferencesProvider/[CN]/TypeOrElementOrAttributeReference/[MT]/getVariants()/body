{
  final XmlTag tag=PsiTreeUtil.getParentOfType(myElement,XmlTag.class);
  if (tag == null)   return null;
  String[] tagNames=null;
switch (myType) {
case GroupReference:
    tagNames=new String[]{"group"};
  break;
case AttributeGroupReference:
tagNames=new String[]{"attributeGroup"};
break;
case AttributeReference:
tagNames=new String[]{"attribute"};
break;
case ElementReference:
tagNames=new String[]{"element"};
break;
case TypeReference:
tagNames=new String[]{"simpleType","complexType"};
break;
}
CompletionProcessor processor=new CompletionProcessor();
processor.tag=tag;
HashSet<String> visitedNamespaces=new HashSet<String>(1);
XmlDocument document=((XmlFile)myElement.getContainingFile()).getDocument();
final XmlTag rootTag=document.getRootTag();
String ourNamespace=rootTag != null ? rootTag.getAttributeValue("targetNamespace") : "";
if (ourNamespace == null) ourNamespace="";
for (String namespace : tag.knownNamespaces()) {
if (ourNamespace.equals(namespace)) continue;
final XmlNSDescriptor nsDescriptor=tag.getNSDescriptor(namespace,true);
if (nsDescriptor instanceof XmlNSDescriptorImpl) {
processNamespace(namespace,processor,nsDescriptor,tagNames);
visitedNamespaces.add(namespace);
}
}
if (ourNamespace != null && ourNamespace.length() > 0) {
XmlNSDescriptor nsDescriptor=(XmlNSDescriptor)document.getMetaData();
if (nsDescriptor != null) {
processNamespace(ourNamespace,processor,nsDescriptor,tagNames);
}
}
return processor.myElements.toArray(new String[processor.myElements.size()]);
}
