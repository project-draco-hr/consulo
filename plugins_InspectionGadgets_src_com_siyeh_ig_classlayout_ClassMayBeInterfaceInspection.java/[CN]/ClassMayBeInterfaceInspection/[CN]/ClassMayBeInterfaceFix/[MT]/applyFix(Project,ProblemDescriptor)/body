{
  if (ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(new VirtualFile[]{descriptor.getPsiElement().getContainingFile().getVirtualFile()}).hasReadonlyFiles())   return;
  final PsiIdentifier classNameIdentifier=(PsiIdentifier)descriptor.getPsiElement();
  final PsiClass interfaceClass=(PsiClass)classNameIdentifier.getParent();
  try {
    moveSubClassExtendsToImplements(interfaceClass);
    changeClassToInterface(interfaceClass);
    moveImplementsToExtends(interfaceClass);
  }
 catch (  IncorrectOperationException e) {
    final Class aClass=getClass();
    final String className=aClass.getName();
    final Logger logger=Logger.getInstance(className);
    logger.error(e);
  }
}
