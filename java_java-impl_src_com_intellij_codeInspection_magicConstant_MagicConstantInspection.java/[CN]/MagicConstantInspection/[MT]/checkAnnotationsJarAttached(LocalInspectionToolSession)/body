{
  PsiFile file=session.getFile();
  final Project project=file.getProject();
  PsiClass event=JavaPsiFacade.getInstance(project).findClass("java.awt.event.InputEvent",GlobalSearchScope.allScope(project));
  if (event == null)   return;
  PsiMethod[] methods=event.findMethodsByName("getModifiers",false);
  if (methods.length != 1)   return;
  PsiMethod getModifiers=methods[0];
  PsiAnnotation annotation=ExternalAnnotationsManager.getInstance(project).findExternalAnnotation(getModifiers,MagicConstant.class.getName());
  if (annotation != null)   return;
  final VirtualFile virtualFile=PsiUtilCore.getVirtualFile(getModifiers);
  if (virtualFile == null)   return;
  final List<OrderEntry> entries=ProjectRootManager.getInstance(project).getFileIndex().getOrderEntriesForFile(virtualFile);
  Sdk jdk=null;
  for (  OrderEntry orderEntry : entries) {
    if (orderEntry instanceof JdkOrderEntry) {
      jdk=((JdkOrderEntry)orderEntry).getJdk();
      if (jdk != null)       break;
    }
  }
  if (jdk == null)   return;
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    final Sdk finalJdk=jdk;
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            attachJdkAnnotations(finalJdk);
          }
        }
);
      }
    }
,ModalityState.NON_MODAL,project.getDisposed());
  }
}
