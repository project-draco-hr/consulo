{
  if (!(psiElement instanceof PsiNamedElement))   return null;
  String name=((PsiNamedElement)psiElement).getName();
  if (name == null)   return null;
  if (psiElement instanceof PsiVariable) {
    final CodeStyleManagerEx codeStyleManager=(CodeStyleManagerEx)CodeStyleManager.getInstance(myProject);
    final VariableKind kind=codeStyleManager.getVariableKind((PsiVariable)psiElement);
    final String prefix=codeStyleManager.getPrefixByVariableKind(kind);
    if (name.startsWith(prefix)) {
      name=name.substring(prefix.length());
    }
    final String[] words=PsiNameHelper.splitNameIntoWords(name);
    if (VariableKind.STATIC_FINAL_FIELD.equals(kind)) {
      StringBuilder buffer=new StringBuilder();
      for (int i=0; i < words.length; i++) {
        String word=words[i];
        if (i > 0)         buffer.append('_');
        buffer.append(word.toUpperCase());
      }
      return buffer.toString();
    }
 else {
      StringBuilder buffer=new StringBuilder(prefix);
      for (int i=0; i < words.length; i++) {
        String word=words[i];
        final boolean prefixRequiresCapitalization=prefix.length() > 0 && !StringUtil.endsWithChar(prefix,'_');
        if (i > 0 || prefixRequiresCapitalization) {
          buffer.append(StringUtil.capitalize(word));
        }
 else {
          buffer.append(StringUtil.decapitalize(word));
        }
      }
      return buffer.toString();
    }
  }
  return name;
}
