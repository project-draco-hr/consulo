{
  if (myTargetContainer instanceof PsiDirectory) {
    final PsiDirectory psiDirectory=(PsiDirectory)myTargetContainer;
    PsiPackage oldPackage=getTargetPackage();
    String name=oldPackage == null ? "" : oldPackage.getName();
    if (name == null)     name="";
    final String targetName=myPackageNameField.getText();
    if (!Comparing.equal(name,targetName)) {
      final ProjectRootManager projectRootManager=ProjectRootManager.getInstance(myProject);
      final VirtualFile[] contentSourceRoots=projectRootManager.getContentSourceRoots();
      final PackageWrapper newPackage=new PackageWrapper(PsiManager.getInstance(myProject),targetName);
      final VirtualFile targetSourceRoot;
      if (contentSourceRoots.length > 1) {
        PsiDirectory initialDir=null;
        if (oldPackage != null) {
          final PsiDirectory[] directories=oldPackage.getDirectories();
          final VirtualFile root=projectRootManager.getFileIndex().getContentRootForFile(psiDirectory.getVirtualFile());
          for (          PsiDirectory dir : directories) {
            if (projectRootManager.getFileIndex().getContentRootForFile(dir.getVirtualFile()) == root) {
              initialDir=dir;
            }
          }
        }
        final VirtualFile sourceRoot=MoveClassesOrPackagesUtil.chooseSourceRoot(newPackage,contentSourceRoots,initialDir);
        if (sourceRoot == null)         return null;
        targetSourceRoot=sourceRoot;
      }
 else {
        targetSourceRoot=contentSourceRoots[0];
      }
      PsiDirectory dir=RefactoringUtil.findPackageDirectoryInSourceRoot(newPackage,targetSourceRoot);
      if (dir == null) {
        try {
          dir=RefactoringUtil.createPackageDirectoryInSourceRoot(newPackage,targetSourceRoot);
        }
 catch (        IncorrectOperationException e) {
          return null;
        }
      }
      return dir;
    }
  }
  return myTargetContainer;
}
