{
  if (aClass == null)   return;
  final Field[] fields=aClass.getDeclaredFields();
  for (  Field field : fields) {
    final int modifiers=field.getModifiers();
    if ((modifiers & Modifier.FINAL) == 0 && (modifiers & Modifier.STATIC) == 0 && !field.getType().isPrimitive()) {
      field.setAccessible(true);
      try {
        field.set(this,null);
      }
 catch (      IllegalAccessException e) {
        e.printStackTrace();
      }
    }
  }
  if (aClass == MavenTestCase.class)   return;
  resetClassFields(aClass.getSuperclass());
}
