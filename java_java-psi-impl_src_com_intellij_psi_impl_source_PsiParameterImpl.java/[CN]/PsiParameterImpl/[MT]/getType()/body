{
  final PsiParameterStub stub=getStub();
  if (stub != null) {
    PatchedSoftReference<PsiType> cachedType=myCachedType;
    if (cachedType != null) {
      PsiType type=cachedType.get();
      if (type != null)       return type;
    }
    String typeText=TypeInfo.createTypeText(stub.getType(true));
    try {
      final PsiType type=JavaPsiFacade.getInstance(getProject()).getParserFacade().createTypeFromText(typeText,this);
      myCachedType=new PatchedSoftReference<PsiType>(type);
      return type;
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
      return null;
    }
  }
  myCachedType=null;
  final PsiTypeElement typeElement=getTypeElement();
  if (typeElement == null && isLambdaParameter()) {
    return LambdaUtil.getLambdaParameterType(this);
  }
  return JavaSharedImplUtil.getType(typeElement,getNameIdentifier(),this);
}
