{
  final SelectionModel selectionModel=editor.getSelectionModel();
  if (!selectionModel.hasSelection()) {
    return Collections.emptyList();
  }
  TextRange range=e.getTextRange();
  int shift=range.getStartOffset();
  int selStart=selectionModel.getSelectionStart();
  int selEnd=selectionModel.getSelectionEnd();
  if (selStart <= shift || selEnd >= range.getEndOffset()) {
    return Collections.emptyList();
  }
  String elementText=editorText.subSequence(shift,range.getEndOffset()).toString();
  int start=selStart - shift;
  int end=selEnd - shift;
  TextRange best=findSentenceRange(elementText,start,end);
  best=narrowRange(best,best,findCustomRange(elementText,start,end,'\"','\"'));
  best=narrowRange(best,best,findCustomRange(elementText,start,end,'(',')'));
  TextRange natural=findNaturalRange(elementText,start,end);
  if (!natural.contains(best)) {
    return Collections.emptyList();
  }
  TextRange paragraph=findParagraphRange(elementText,start,end);
  if (best.getStartOffset() == start && best.getEndOffset() == end) {
    return Arrays.asList(paragraph.shiftRight(shift));
  }
  return Arrays.asList(best.shiftRight(shift));
}
