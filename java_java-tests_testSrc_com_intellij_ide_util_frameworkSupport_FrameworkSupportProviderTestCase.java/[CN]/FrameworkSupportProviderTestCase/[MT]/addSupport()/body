{
  final VirtualFile root=getVirtualFile(createTempDir("contentRoot"));
  PsiTestUtil.addContentRoot(myModule,root);
  final ModifiableRootModel model=ModuleRootManager.getInstance(myModule).getModifiableModel();
  try {
    List<FrameworkSupportConfigurable> selectedConfigurables=new ArrayList<FrameworkSupportConfigurable>();
    for (    FrameworkSupportNode node : myNodes.values()) {
      if (node.isChecked()) {
        final FrameworkSupportConfigurable configurable=getOrCreateConfigurable(node.getProvider());
        configurable.addSupport(myModule,model,null);
        selectedConfigurables.add(configurable);
      }
    }
    for (    FrameworkSupportCommunicator communicator : FrameworkSupportCommunicator.EP_NAME.getExtensions()) {
      communicator.onFrameworkSupportAdded(myModule,model,selectedConfigurables,myFrameworkSupportModel);
    }
  }
  finally {
    model.commit();
  }
  for (  FrameworkSupportConfigurable configurable : myConfigurables.values()) {
    Disposer.dispose(configurable);
  }
}
