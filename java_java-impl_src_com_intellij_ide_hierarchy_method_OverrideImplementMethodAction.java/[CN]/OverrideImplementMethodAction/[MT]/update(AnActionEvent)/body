{
  final Presentation presentation=e.getPresentation();
  final DataContext dataContext=e.getDataContext();
  final MethodHierarchyBrowser methodHierarchyBrowser=(MethodHierarchyBrowser)MethodHierarchyBrowserBase.DATA_KEY.getData(dataContext);
  if (methodHierarchyBrowser == null) {
    presentation.setEnabled(false);
    presentation.setVisible(false);
    return;
  }
  final Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  if (project == null) {
    presentation.setEnabled(false);
    presentation.setVisible(false);
    return;
  }
  final HierarchyNodeDescriptor[] selectedDescriptors=methodHierarchyBrowser.getSelectedDescriptors();
  int toImplement=0;
  int toOverride=0;
  for (  final HierarchyNodeDescriptor descriptor : selectedDescriptors) {
    if (canImplementOverride((MethodHierarchyNodeDescriptor)descriptor,methodHierarchyBrowser,true)) {
      if (toOverride > 0) {
        presentation.setEnabled(false);
        presentation.setVisible(false);
        return;
      }
      toImplement++;
    }
 else     if (canImplementOverride((MethodHierarchyNodeDescriptor)descriptor,methodHierarchyBrowser,false)) {
      if (toImplement > 0) {
        presentation.setEnabled(false);
        presentation.setVisible(false);
        return;
      }
      toOverride++;
    }
 else {
      presentation.setEnabled(false);
      presentation.setVisible(false);
      return;
    }
  }
  presentation.setVisible(true);
  update(presentation,toImplement,toOverride);
}
