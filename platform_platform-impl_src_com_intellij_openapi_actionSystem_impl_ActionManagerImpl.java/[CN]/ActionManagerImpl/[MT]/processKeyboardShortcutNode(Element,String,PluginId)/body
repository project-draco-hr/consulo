{
  String firstStrokeString=element.getAttributeValue(FIRST_KEYSTROKE_ATTR_NAME);
  if (firstStrokeString == null) {
    reportActionError(pluginId,"\"first-keystroke\" attribute must be specified for action with id=" + actionId);
    return;
  }
  KeyStroke firstKeyStroke=getKeyStroke(firstStrokeString);
  if (firstKeyStroke == null) {
    reportActionError(pluginId,"\"first-keystroke\" attribute has invalid value for action with id=" + actionId);
    return;
  }
  KeyStroke secondKeyStroke=null;
  String secondStrokeString=element.getAttributeValue(SECOND_KEYSTROKE_ATTR_NAME);
  if (secondStrokeString != null) {
    secondKeyStroke=getKeyStroke(secondStrokeString);
    if (secondKeyStroke == null) {
      reportActionError(pluginId,"\"second-keystroke\" attribute has invalid value for action with id=" + actionId);
      return;
    }
  }
  String keymapName=element.getAttributeValue(KEYMAP_ATTR_NAME);
  if (keymapName == null || keymapName.trim().length() == 0) {
    reportActionError(pluginId,"attribute \"keymap\" should be defined");
    return;
  }
  Keymap keymap=myKeymapManager.getKeymap(keymapName);
  if (keymap == null) {
    reportActionError(pluginId,"keymap \"" + keymapName + "\" not found");
    return;
  }
  final String removeOption=element.getAttributeValue(REMOVE_SHORTCUT_ATTR_NAME);
  final KeyboardShortcut shortcut=new KeyboardShortcut(firstKeyStroke,secondKeyStroke);
  if (Boolean.valueOf(removeOption)) {
    keymap.removeShortcut(actionId,shortcut);
  }
 else {
    keymap.addShortcut(actionId,shortcut);
  }
}
