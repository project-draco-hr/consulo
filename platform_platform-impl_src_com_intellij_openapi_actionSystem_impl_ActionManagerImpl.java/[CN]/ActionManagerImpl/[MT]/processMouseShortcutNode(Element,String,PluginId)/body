{
  String keystrokeString=element.getAttributeValue(KEYSTROKE_ATTR_NAME);
  if (keystrokeString == null || keystrokeString.trim().length() == 0) {
    reportActionError(pluginId,"\"keystroke\" attribute must be specified for action with id=" + actionId);
    return;
  }
  MouseShortcut shortcut;
  try {
    shortcut=KeymapUtil.parseMouseShortcut(keystrokeString);
  }
 catch (  Exception ex) {
    reportActionError(pluginId,"\"keystroke\" attribute has invalid value for action with id=" + actionId);
    return;
  }
  String keymapName=element.getAttributeValue(KEYMAP_ATTR_NAME);
  if (keymapName == null || keymapName.length() == 0) {
    reportActionError(pluginId,"attribute \"keymap\" should be defined");
    return;
  }
  Keymap keymap=KeymapManager.getInstance().getKeymap(keymapName);
  if (keymap == null) {
    reportActionError(pluginId,"keymap \"" + keymapName + "\" not found");
    return;
  }
  final String removeOption=element.getAttributeValue(REMOVE_SHORTCUT_ATTR_NAME);
  if (Boolean.valueOf(removeOption)) {
    keymap.removeShortcut(actionId,shortcut);
  }
 else {
    keymap.addShortcut(actionId,shortcut);
  }
}
