{
  myProject=scope.getProject();
  myDocument=PsiDocumentManager.getInstance(myProject).getDocument(scope.getContainingFile());
  final SmartPointerManager pointerManager=SmartPointerManager.getInstance(myProject);
  final Map<PsiElement,SmartPsiElementPointer> pointers=new HashMap<PsiElement,SmartPsiElementPointer>();
  scope.accept(new PsiRecursiveElementVisitor(){
    public void visitReferenceExpression(    PsiReferenceExpression refExpr){
      if (!refExpr.isQualified()) {
        PsiElement resolved=refExpr.resolve();
        if (resolved instanceof PsiField) {
          SmartPsiElementPointer key=pointerManager.createSmartPsiElementPointer(refExpr);
          SmartPsiElementPointer value=pointers.get(resolved);
          if (value == null) {
            value=pointerManager.createSmartPsiElementPointer(resolved);
            pointers.put(resolved,value);
          }
          myReferencesMap.put(key,value);
        }
      }
      super.visitReferenceExpression(refExpr);
    }
  }
);
}
