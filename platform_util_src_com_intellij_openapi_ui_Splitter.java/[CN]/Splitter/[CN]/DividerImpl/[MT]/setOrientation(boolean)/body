{
  removeAll();
  setCursor(isVertical() ? Cursor.getPredefinedCursor(Cursor.N_RESIZE_CURSOR) : Cursor.getPredefinedCursor(Cursor.W_RESIZE_CURSOR));
  if (!myShowDividerControls && !myShowDividerIcon) {
    return;
  }
  Icon glueIcon=isVerticalSplit ? AllIcons.General.SplitGlueV : AllIcons.General.SplitGlueH;
  add(new JLabel(glueIcon),new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  if (myShowDividerControls && false) {
    int glueFill=isVerticalSplit ? GridBagConstraints.VERTICAL : GridBagConstraints.HORIZONTAL;
    int xMask=isVerticalSplit ? 1 : 0;
    int yMask=isVerticalSplit ? 0 : 1;
    int leftInsetArrow=0;
    int leftInsetIcon=1;
    JLabel splitDownlabel=new JLabel(isVerticalSplit ? AllIcons.General.SplitDown : AllIcons.General.SplitRight);
    splitDownlabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    splitDownlabel.setToolTipText(isVerticalSplit ? UIBundle.message("splitter.down.tooltip.text") : UIBundle.message("splitter.right.tooltip.text"));
    new ClickListener(){
      @Override public boolean onClick(      @NotNull MouseEvent e,      int clickCount){
        setProportion(1.0f - getMinProportion(false));
        return true;
      }
    }
.installOn(splitDownlabel);
    add(splitDownlabel,new GridBagConstraints(isVerticalSplit ? 1 : 0,isVerticalSplit ? 0 : 5,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,leftInsetArrow,0,0),0,0));
    add(new JLabel(glueIcon),new GridBagConstraints(2 * xMask,2 * yMask,1,1,0,0,GridBagConstraints.CENTER,glueFill,new Insets(0,leftInsetIcon,0,0),0,0));
    JLabel splitCenterlabel=new JLabel(isVerticalSplit ? AllIcons.General.SplitCenterV : AllIcons.General.SplitCenterH);
    splitCenterlabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    splitCenterlabel.setToolTipText(UIBundle.message("splitter.center.tooltip.text"));
    new ClickListener(){
      @Override public boolean onClick(      @NotNull MouseEvent e,      int clickCount){
        setProportion(.5f);
        return true;
      }
    }
.installOn(splitCenterlabel);
    add(splitCenterlabel,new GridBagConstraints(3 * xMask,3 * yMask,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,leftInsetArrow,0,0),0,0));
    add(new JLabel(glueIcon),new GridBagConstraints(4 * xMask,4 * yMask,1,1,0,0,GridBagConstraints.CENTER,glueFill,new Insets(0,leftInsetIcon,0,0),0,0));
    JLabel splitUpLabel=new JLabel(isVerticalSplit ? AllIcons.General.SplitUp : AllIcons.General.SplitLeft);
    splitUpLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    splitUpLabel.setToolTipText(isVerticalSplit ? UIBundle.message("splitter.up.tooltip.text") : UIBundle.message("splitter.left.tooltip.text"));
    new ClickListener(){
      @Override public boolean onClick(      @NotNull MouseEvent e,      int clickCount){
        setProportion(getMinProportion(true));
        return true;
      }
    }
.installOn(splitUpLabel);
    add(splitUpLabel,new GridBagConstraints(isVerticalSplit ? 5 : 0,isVerticalSplit ? 0 : 1,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,leftInsetArrow,0,0),0,0));
    add(new JLabel(glueIcon),new GridBagConstraints(6 * xMask,6 * yMask,1,1,0,0,isVerticalSplit ? GridBagConstraints.WEST : GridBagConstraints.SOUTH,glueFill,new Insets(0,leftInsetIcon,0,0),0,0));
  }
  revalidate();
  repaint();
}
