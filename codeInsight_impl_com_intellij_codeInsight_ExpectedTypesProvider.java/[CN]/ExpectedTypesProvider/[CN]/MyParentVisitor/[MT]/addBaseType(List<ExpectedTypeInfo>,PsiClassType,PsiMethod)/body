{
  PsiType[] supers=type.getSuperTypes();
  boolean addedSuper=false;
  for (  PsiType aSuper : supers) {
    PsiClassType superType=(PsiClassType)aSuper;
    PsiClass superClass=superType.resolve();
    if (superClass != null) {
      if (superClass.findMethodBySignature(method,false) != null) {
        addBaseType(types,superType,method);
        addedSuper=true;
      }
    }
  }
  if (!addedSuper) {
    types.add(createInfoImpl(type,ExpectedTypeInfo.TYPE_OR_SUBTYPE,type,TailType.DOT));
  }
}
