{
  PsiExpression op1=expr.getLOperand();
  PsiExpression op2=expr.getROperand();
  PsiJavaToken sign=expr.getOperationSign();
  if (myForCompletion && op1.equals(myExpr))   return;
  PsiExpression anotherExpr=op1.equals(myExpr) ? op2 : op1;
  PsiType anotherType=anotherExpr != null ? anotherExpr.getType() : null;
  PsiElementFactory factory=JavaPsiFacade.getInstance(expr.getProject()).getElementFactory();
  IElementType i=sign.getTokenType();
  if (i == JavaTokenType.MINUS || i == JavaTokenType.ASTERISK || i == JavaTokenType.DIV || i == JavaTokenType.PERC || i == JavaTokenType.LT || i == JavaTokenType.GT || i == JavaTokenType.LE || i == JavaTokenType.GE) {
    if (anotherType == null) {
      myResult=ExpectedTypeInfo.EMPTY_ARRAY;
    }
 else {
      ExpectedTypeInfoImpl info=createInfoImpl(PsiType.DOUBLE,ExpectedTypeInfo.TYPE_OR_SUBTYPE,anotherType,TailType.NONE);
      myResult=new ExpectedTypeInfo[]{info};
    }
  }
 else   if (i == JavaTokenType.PLUS) {
    if (anotherType == null) {
      myResult=ExpectedTypeInfo.EMPTY_ARRAY;
    }
 else {
      if (anotherType.equalsToText("java.lang.String")) {
        PsiType objType=PsiType.getJavaLangObject(myExpr.getManager(),myExpr.getResolveScope());
        ExpectedTypeInfo info=createInfoImpl(objType,ExpectedTypeInfo.TYPE_OR_SUBTYPE,anotherType,TailType.NONE);
        ExpectedTypeInfo info1=createInfoImpl(PsiType.DOUBLE,ExpectedTypeInfo.TYPE_OR_SUBTYPE,PsiType.INT,TailType.NONE);
        PsiType booleanType=PsiType.BOOLEAN;
        ExpectedTypeInfo info2=createInfoImpl(booleanType,ExpectedTypeInfo.TYPE_STRICTLY,booleanType,TailType.NONE);
        myResult=new ExpectedTypeInfo[]{info,info1,info2};
      }
 else {
        if (PsiType.DOUBLE.isAssignableFrom(anotherType)) {
          ExpectedTypeInfoImpl info=createInfoImpl(PsiType.DOUBLE,ExpectedTypeInfo.TYPE_OR_SUBTYPE,anotherType,TailType.NONE);
          myResult=new ExpectedTypeInfo[]{info};
        }
      }
    }
  }
 else   if (i == JavaTokenType.EQEQ || i == JavaTokenType.NE) {
    if (anotherType == null) {
      myResult=ExpectedTypeInfo.EMPTY_ARRAY;
    }
 else {
      ExpectedTypeInfoImpl info;
      if (anotherType instanceof PsiPrimitiveType) {
        if (PsiType.BOOLEAN == anotherType) {
          info=createInfoImpl(anotherType,ExpectedTypeInfo.TYPE_STRICTLY,anotherType,TailType.NONE);
        }
 else         if (anotherType == PsiType.NULL) {
          PsiType objectType=factory.createTypeByFQClassName("java.lang.Object",myExpr.getResolveScope());
          info=createInfoImpl(objectType,ExpectedTypeInfo.TYPE_OR_SUBTYPE,objectType,TailType.NONE);
        }
 else {
          info=createInfoImpl(PsiType.DOUBLE,ExpectedTypeInfo.TYPE_OR_SUBTYPE,anotherType,TailType.NONE);
        }
      }
 else {
        info=createInfoImpl(anotherType,ExpectedTypeInfo.TYPE_STRICTLY,anotherType,TailType.NONE);
      }
      if (anotherExpr instanceof PsiReferenceExpression) {
        PsiElement refElement=((PsiReferenceExpression)anotherExpr).resolve();
        if (refElement instanceof PsiVariable) {
          info.expectedName=getPropertyName((PsiVariable)refElement);
        }
      }
      myResult=new ExpectedTypeInfo[]{info};
    }
  }
 else   if (i == JavaTokenType.LTLT || i == JavaTokenType.GTGT || i == JavaTokenType.GTGTGT) {
    if (anotherType == null) {
      myResult=ExpectedTypeInfo.EMPTY_ARRAY;
    }
 else {
      ExpectedTypeInfoImpl info=createInfoImpl(PsiType.DOUBLE,ExpectedTypeInfo.TYPE_OR_SUBTYPE,anotherType,TailType.NONE);
      myResult=new ExpectedTypeInfo[]{info};
    }
  }
 else   if (i == JavaTokenType.OROR || i == JavaTokenType.ANDAND) {
    ExpectedTypeInfoImpl info=createInfoImpl(PsiType.BOOLEAN,ExpectedTypeInfo.TYPE_STRICTLY,PsiType.BOOLEAN,TailType.NONE);
    myResult=new ExpectedTypeInfo[]{info};
  }
 else   if (i == JavaTokenType.OR || i == JavaTokenType.XOR || i == JavaTokenType.AND) {
    if (anotherType == null) {
      myResult=ExpectedTypeInfo.EMPTY_ARRAY;
    }
 else {
      ExpectedTypeInfoImpl info;
      if (PsiType.BOOLEAN == anotherType) {
        info=createInfoImpl(anotherType,ExpectedTypeInfo.TYPE_STRICTLY,anotherType,TailType.NONE);
      }
 else {
        info=createInfoImpl(PsiType.LONG,ExpectedTypeInfo.TYPE_OR_SUBTYPE,anotherType,TailType.NONE);
      }
      myResult=new ExpectedTypeInfo[]{info};
    }
  }
}
