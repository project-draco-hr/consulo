{
  if (text.isEmpty()) {
    return AsyncFutureFactory.wrapException(new IllegalArgumentException("Cannot search for elements with empty text"));
  }
  final ProgressIndicator progress=ProgressIndicatorProvider.getGlobalProgressIndicator();
  if (searchScope instanceof GlobalSearchScope) {
    StringSearcher searcher=new StringSearcher(text,caseSensitively,true,searchContext == UsageSearchContext.IN_STRINGS);
    return processElementsWithTextInGlobalScopeAsync(processor,(GlobalSearchScope)searchScope,searcher,searchContext,caseSensitively,containerName,progress,processInjectedPsi);
  }
  LocalSearchScope scope=(LocalSearchScope)searchScope;
  PsiElement[] scopeElements=scope.getScope();
  final StringSearcher searcher=new StringSearcher(text,caseSensitively,true,searchContext == UsageSearchContext.IN_STRINGS);
  Processor<PsiElement> localProcessor=localProcessor(processor,progress,processInjectedPsi,searcher);
  return wrapInFuture(Arrays.asList(scopeElements),progress,localProcessor);
}
