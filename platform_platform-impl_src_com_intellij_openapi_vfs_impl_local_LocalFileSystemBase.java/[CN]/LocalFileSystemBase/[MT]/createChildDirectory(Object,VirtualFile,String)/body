{
  if (!VirtualFile.isValidName(dir)) {
    throw new IOException(VfsBundle.message("directory.invalid.name.error",dir));
  }
  if (!parent.exists() || !parent.isDirectory()) {
    throw new IOException(VfsBundle.message("vfs.target.not.directory.error",parent.getPath()));
  }
  if (parent.findChild(dir) != null) {
    throw new IOException(VfsBundle.message("vfs.target.already.exists.error",parent.getPath() + "/" + dir));
  }
  File ioParent=convertToIOFile(parent);
  if (!ioParent.isDirectory()) {
    throw new IOException(VfsBundle.message("target.not.directory.error",ioParent.getPath()));
  }
  if (!auxCreateDirectory(parent,dir)) {
    File ioDir=new File(ioParent,dir);
    if (!(ioDir.mkdirs() || ioDir.isDirectory())) {
      throw new IOException(VfsBundle.message("new.directory.failed.error",ioDir.getPath()));
    }
  }
  auxNotifyCompleted(new ThrowableConsumer<LocalFileOperationsHandler,IOException>(){
    @Override public void consume(    LocalFileOperationsHandler handler) throws IOException {
      handler.createDirectory(parent,dir);
    }
  }
);
  return new FakeVirtualFile(parent,dir);
}
