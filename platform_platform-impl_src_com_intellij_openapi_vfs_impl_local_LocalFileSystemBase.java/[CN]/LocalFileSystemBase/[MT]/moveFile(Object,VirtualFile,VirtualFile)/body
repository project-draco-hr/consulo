{
  String name=file.getName();
  if (!file.exists()) {
    throw new IOException(VfsBundle.message("vfs.file.not.exist.error",file.getPath()));
  }
  if (file.getParent() == null) {
    throw new IOException(VfsBundle.message("cannot.rename.root.directory",file.getPath()));
  }
  if (!newParent.exists() || !newParent.isDirectory()) {
    throw new IOException(VfsBundle.message("vfs.target.not.directory.error",newParent.getPath()));
  }
  if (newParent.findChild(name) != null) {
    throw new IOException(VfsBundle.message("vfs.target.already.exists.error",newParent.getPath() + "/" + name));
  }
  File ioFile=convertToIOFile(file);
  if (FileSystemUtil.getAttributes(ioFile) == null) {
    throw new FileNotFoundException(VfsBundle.message("file.not.exist.error",ioFile.getPath()));
  }
  File ioParent=convertToIOFile(newParent);
  if (!ioParent.isDirectory()) {
    throw new IOException(VfsBundle.message("target.not.directory.error",ioParent.getPath()));
  }
  File ioTarget=new File(ioParent,name);
  if (ioTarget.exists()) {
    throw new IOException(VfsBundle.message("target.already.exists.error",ioTarget.getPath()));
  }
  if (!auxMove(file,newParent)) {
    if (!ioFile.renameTo(ioTarget)) {
      throw new IOException(VfsBundle.message("move.failed.error",ioFile.getPath(),ioParent.getPath()));
    }
  }
  auxNotifyCompleted(new ThrowableConsumer<LocalFileOperationsHandler,IOException>(){
    @Override public void consume(    LocalFileOperationsHandler handler) throws IOException {
      handler.move(file,newParent);
    }
  }
);
}
