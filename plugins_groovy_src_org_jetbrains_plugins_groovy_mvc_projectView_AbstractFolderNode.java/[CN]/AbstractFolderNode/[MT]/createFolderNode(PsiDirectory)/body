{
  PsiDirectory realDirectory=directory;
  if (getSettings().isHideEmptyMiddlePackages()) {
    do {
      if (realDirectory.getFiles().length > 0)       break;
      PsiDirectory[] subdirectories=realDirectory.getSubdirectories();
      if (subdirectories.length != 1)       break;
      realDirectory=subdirectories[0];
    }
 while (true);
  }
  return new AbstractFolderNode(getModule(),realDirectory,directory,myLocationMark,getSettings(),FOLDER){
    @Override protected void processNotDirectoryFile(    List<AbstractTreeNode> nodes,    PsiFile file){
      AbstractFolderNode.this.processNotDirectoryFile(nodes,file);
    }
    @Override protected AbstractTreeNode createClassNode(    GrTypeDefinition typeDefinition){
      return AbstractFolderNode.this.createClassNode(typeDefinition);
    }
  }
;
}
