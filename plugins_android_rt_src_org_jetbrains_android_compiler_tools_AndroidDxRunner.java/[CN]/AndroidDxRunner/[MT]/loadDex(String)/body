{
  try {
    File f=new File(dxPath);
    if (!f.isFile()) {
      System.err.println("File not found: " + dxPath);
      return;
    }
    URL url=f.toURI().toURL();
    URLClassLoader loader=new URLClassLoader(new URL[]{url},AndroidDxRunner.class.getClassLoader());
    Class<?> mainClass=loader.loadClass(DEX_MAIN);
    Class<?> consoleClass=loader.loadClass(DEX_CONSOLE);
    Class<?> argClass=loader.loadClass(DEX_ARGS);
    myMethod=mainClass.getMethod(MAIN_RUN,argClass);
    myConstructor=argClass.getConstructor();
    myOutNameField=argClass.getField("outName");
    myJarOutputField=argClass.getField("jarOutput");
    myFileNamesField=argClass.getField("fileNames");
    myVerboseField=argClass.getField("verbose");
    myStrictNameCheckField=argClass.getField("strictNameCheck");
    myOptimizeField=getFieldIfPossible(argClass);
    myConsoleOut=consoleClass.getField("out");
    myConsoleErr=consoleClass.getField("err");
  }
 catch (  SecurityException e) {
    reportError("Unable to find API for dex.jar",e);
  }
catch (  NoSuchMethodException e) {
    reportError("Unable to find method for dex.jar",e);
  }
catch (  NoSuchFieldException e) {
    reportError("Unable to find field for dex.jar",e);
  }
catch (  MalformedURLException e) {
    reportError("Failed to load dx.jar",e);
  }
catch (  ClassNotFoundException e) {
    reportError("Failed to load dx.jar",e);
  }
}
