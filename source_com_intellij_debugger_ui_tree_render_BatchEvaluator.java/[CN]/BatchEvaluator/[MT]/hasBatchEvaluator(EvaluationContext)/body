{
  if (!myBatchEvaluatorChecked) {
    myBatchEvaluatorChecked=true;
    final Boolean isRemote=myDebugProcess.getUserData(REMOTE_SESSION_KEY);
    if (isRemote != null && isRemote.booleanValue()) {
      return false;
    }
    ThreadReferenceProxy thread=evaluationContext.getSuspendContext().getThread();
    if (thread == null) {
      return false;
    }
    ThreadReference threadReference=thread.getThreadReference();
    if (threadReference == null) {
      return false;
    }
    ClassType batchEvaluatorClass=null;
    try {
      batchEvaluatorClass=(ClassType)myDebugProcess.findClass(evaluationContext,BatchEvaluatorServer.class.getName(),evaluationContext.getClassLoader());
    }
 catch (    EvaluateException e) {
    }
    if (batchEvaluatorClass != null) {
      Method constructor=batchEvaluatorClass.concreteMethodByName("<init>","()V");
      if (constructor != null) {
        ObjectReference evaluator=null;
        try {
          evaluator=myDebugProcess.newInstance(evaluationContext,batchEvaluatorClass,constructor,new ArrayList());
        }
 catch (        Exception e) {
          LOG.debug(e);
        }
        myBatchEvaluatorObject=evaluator;
        if (myBatchEvaluatorObject != null) {
          myBatchEvaluatorMethod=batchEvaluatorClass.concreteMethodByName("evaluate","([Ljava/lang/Object;)[Ljava/lang/Object;");
        }
      }
    }
  }
  return myBatchEvaluatorMethod != null;
}
