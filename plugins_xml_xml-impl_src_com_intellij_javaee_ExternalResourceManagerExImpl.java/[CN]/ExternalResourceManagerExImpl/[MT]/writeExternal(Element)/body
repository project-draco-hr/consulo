{
  final String[] urls=getAvailableUrls();
  for (  String url : urls) {
    if (url == null)     continue;
    String location=getResourceLocation(url);
    if (location == null)     continue;
    final Element e=new Element(RESOURCE_ELEMENT);
    e.setAttribute(URL_ATTR,url);
    e.setAttribute(LOCATION_ATTR,location.replace(File.separatorChar,'/'));
    element.addContent(e);
  }
  final String[] ignoredResources=getIgnoredResources();
  for (  String ignoredResource : ignoredResources) {
    final Element e=new Element(IGNORED_RESOURCE_ELEMENT);
    e.setAttribute(URL_ATTR,ignoredResource);
    element.addContent(e);
  }
  if (myDefaultHtmlDoctype != null && !HTML5_DOCTYPE_ELEMENT.equals(myDefaultHtmlDoctype)) {
    final Element e=new Element(HTML_DEFAULT_DOCTYPE_ELEMENT);
    e.setText(myDefaultHtmlDoctype);
    element.addContent(e);
  }
  if (myCatalogPropertiesFile != null) {
    Element properties=new Element(CATALOG_PROPERTIES_ELEMENT);
    properties.setText(myCatalogPropertiesFile);
    element.addContent(properties);
  }
  final ReplacePathToMacroMap macroReplacements=new ReplacePathToMacroMap();
  PathMacrosImpl.getInstanceEx().addMacroReplacements(macroReplacements);
  macroReplacements.substitute(element,SystemInfo.isFileSystemCaseSensitive);
}
