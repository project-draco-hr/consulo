{
  if (isFileReadOnly(project,file)) {
    return;
  }
  final PsiAssertStatement assertStatement=(PsiAssertStatement)findMatchingElement(file,editor);
  final PsiExpression condition=assertStatement.getAssertCondition();
  final PsiExpression description=assertStatement.getAssertDescription();
  final String newStatement;
  final String negatedConditionString=BoolUtils.getNegatedExpressionText(condition);
  if (description == null) {
    newStatement="if(" + negatedConditionString + "){ throw new IllegalArgumentException();}";
  }
 else {
    newStatement="if(" + negatedConditionString + "){ throw new IllegalArgumentException("+ description.getText()+ ");}";
  }
  replaceStatement(project,newStatement,assertStatement);
}
