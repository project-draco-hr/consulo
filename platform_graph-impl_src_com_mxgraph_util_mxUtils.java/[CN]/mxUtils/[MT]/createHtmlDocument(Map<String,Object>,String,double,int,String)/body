{
  StringBuffer css=new StringBuffer();
  css.append("font-family:" + getString(style,mxConstants.STYLE_FONTFAMILY,mxConstants.DEFAULT_FONTFAMILIES) + ";");
  css.append("font-size:" + (int)(getInt(style,mxConstants.STYLE_FONTSIZE,mxConstants.DEFAULT_FONTSIZE) * scale) + " pt;");
  String color=mxUtils.getString(style,mxConstants.STYLE_FONTCOLOR);
  if (color != null) {
    css.append("color:" + color + ";");
  }
  int fontStyle=mxUtils.getInt(style,mxConstants.STYLE_FONTSTYLE);
  if ((fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD) {
    css.append("font-weight:bold;");
  }
  if ((fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC) {
    css.append("font-style:italic;");
  }
  if ((fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE) {
    css.append("text-decoration:underline;");
  }
  String align=getString(style,mxConstants.STYLE_ALIGN,mxConstants.ALIGN_LEFT);
  if (align.equals(mxConstants.ALIGN_CENTER)) {
    css.append("text-align:center;");
  }
 else   if (align.equals(mxConstants.ALIGN_RIGHT)) {
    css.append("text-align:right;");
  }
  if (width > 0) {
    css.append("width:" + width + "px;");
  }
  String result="<html>";
  if (head != null) {
    result+="<head>" + head + "</head>";
  }
  return result + "<body style=\"" + css.toString()+ "\">"+ text+ "</body></html>";
}
