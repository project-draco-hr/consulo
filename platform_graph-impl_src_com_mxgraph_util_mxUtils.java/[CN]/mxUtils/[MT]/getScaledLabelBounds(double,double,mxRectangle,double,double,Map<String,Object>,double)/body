{
  double inset=mxConstants.LABEL_INSET * scale;
  double width=size.getWidth() * scale + 2 * inset;
  double height=size.getHeight() * scale + 2 * inset;
  boolean horizontal=isTrue(style,mxConstants.STYLE_HORIZONTAL,true);
  int spacing=(int)(getInt(style,mxConstants.STYLE_SPACING) * scale);
  Object align=getString(style,mxConstants.STYLE_ALIGN,mxConstants.ALIGN_CENTER);
  Object valign=getString(style,mxConstants.STYLE_VERTICAL_ALIGN,mxConstants.ALIGN_MIDDLE);
  int top=(int)(getInt(style,mxConstants.STYLE_SPACING_TOP) * scale);
  int bottom=(int)(getInt(style,mxConstants.STYLE_SPACING_BOTTOM) * scale);
  int left=(int)(getInt(style,mxConstants.STYLE_SPACING_LEFT) * scale);
  int right=(int)(getInt(style,mxConstants.STYLE_SPACING_RIGHT) * scale);
  if (!horizontal) {
    int tmp=top;
    top=right;
    right=bottom;
    bottom=left;
    left=tmp;
    double tmp2=width;
    width=height;
    height=tmp2;
  }
  if ((horizontal && align.equals(mxConstants.ALIGN_CENTER)) || (!horizontal && valign.equals(mxConstants.ALIGN_MIDDLE))) {
    x+=(outerWidth - width) / 2 + left - right;
  }
 else   if ((horizontal && align.equals(mxConstants.ALIGN_RIGHT)) || (!horizontal && valign.equals(mxConstants.ALIGN_BOTTOM))) {
    x+=outerWidth - width - spacing- right;
  }
 else {
    x+=spacing + left;
  }
  if ((!horizontal && align.equals(mxConstants.ALIGN_CENTER)) || (horizontal && valign.equals(mxConstants.ALIGN_MIDDLE))) {
    y+=(outerHeight - height) / 2 + top - bottom;
  }
 else   if ((!horizontal && align.equals(mxConstants.ALIGN_LEFT)) || (horizontal && valign.equals(mxConstants.ALIGN_BOTTOM))) {
    y+=outerHeight - height - spacing- bottom;
  }
 else {
    y+=spacing + top;
  }
  return new mxRectangle(x,y,width,height);
}
