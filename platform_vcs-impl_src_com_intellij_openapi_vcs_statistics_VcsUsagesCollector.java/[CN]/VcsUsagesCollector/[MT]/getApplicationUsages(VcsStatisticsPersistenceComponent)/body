{
  final Map<String,Integer> vcsUsagesMap=new HashMap<String,Integer>();
  for (  Set<UsageDescriptor> descriptors : persistence.getVcsUsageMap().values()) {
    for (    UsageDescriptor descriptor : descriptors) {
      final String key=descriptor.getKey();
      final Integer count=vcsUsagesMap.get(key);
      vcsUsagesMap.put(key,count == null ? 1 : count.intValue() + 1);
    }
  }
  return ContainerUtil.map2Set(vcsUsagesMap.entrySet(),new Function<Map.Entry<String,Integer>,UsageDescriptor>(){
    @Override public UsageDescriptor fun(    Map.Entry<String,Integer> vcsUsage){
      return new UsageDescriptor(getGroupId(),vcsUsage.getKey(),vcsUsage.getValue());
    }
  }
);
}
