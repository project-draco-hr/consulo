{
  myLibrariesContainer=librariesContainer;
  myLibraryCompositionSettings=libraryCompositionSettings;
  myMirrorsMap=mirrorsMap;
  addMirrorsPanels();
  myDirectoryField.addBrowseFolderListener(ProjectBundle.message("file.chooser.directory.for.downloaded.libraries.title"),ProjectBundle.message("file.chooser.directory.for.downloaded.libraries.description"),null,FileChooserDescriptorFactory.createSingleFolderDescriptor());
  myAddedJars.addAll(myLibraryCompositionSettings.getAddedJars());
  myUsedLibraries.addAll(myLibraryCompositionSettings.getUsedLibraries());
  myAddJarsButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      showFileChooser();
    }
  }
);
  myAddLibraryButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      showLibrariesChooser();
    }
  }
);
  myDownloadMissingJarsCheckBox.setSelected(myLibraryCompositionSettings.isDownloadLibraries());
  myDownloadMissingJarsCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      updateAll();
    }
  }
);
  mySuitableLibraries=calculateSuitableLibraries();
  myAddLibraryButton.setEnabled(!mySuitableLibraries.isEmpty());
  myLibraryLevels.put(LibrariesContainer.LibraryLevel.GLOBAL,ProjectBundle.message("combobox.item.global.library"));
  myLibraryLevels.put(LibrariesContainer.LibraryLevel.PROJECT,ProjectBundle.message("combobox.item.project.library"));
  myLibraryLevels.put(LibrariesContainer.LibraryLevel.MODULE,ProjectBundle.message("combobox.item.module.library"));
  for (  String level : myLibraryLevels.getValues()) {
    myLibraryLevelComboBox.addItem(level);
  }
  myLibraryLevelComboBox.setSelectedItem(myLibraryLevels.getValue(myLibraryCompositionSettings.getLibraryLevel()));
  myLibraryNameField.setText(myLibraryCompositionSettings.getLibraryName());
  myDirectoryField.setText(FileUtil.toSystemDependentName(myLibraryCompositionSettings.getDirectoryForDownloadedLibrariesPath()));
  String jars=RequiredLibrariesInfo.getLibrariesPresentableText(myLibraryCompositionSettings.getLibraryInfos());
  myHiddenLabel.setText(UIUtil.toHtml(ProjectBundle.message("label.text.libraries.are.missing",jars)));
  updateAll();
  myMissingLibrariesPanel.getPreferredSize();
  myMainPanel.validate();
}
