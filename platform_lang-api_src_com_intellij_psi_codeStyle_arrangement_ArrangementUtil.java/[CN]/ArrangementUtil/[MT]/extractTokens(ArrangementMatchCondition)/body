{
  final Map<ArrangementSettingsToken,Object> result=ContainerUtilRt.newHashMap();
  condition.invite(new ArrangementMatchConditionVisitor(){
    @Override public void visit(    @NotNull ArrangementAtomMatchCondition condition){
      ArrangementSettingsToken type=condition.getType();
      Object value=condition.getValue();
      result.put(condition.getType(),type.equals(value) ? null : value);
      if (type instanceof CompositeArrangementToken) {
        Set<ArrangementSettingsToken> tokens=((CompositeArrangementToken)type).getAdditionalTokens();
        for (        ArrangementSettingsToken token : tokens) {
          result.put(token,null);
        }
      }
    }
    @Override public void visit(    @NotNull ArrangementCompositeMatchCondition condition){
      for (      ArrangementMatchCondition operand : condition.getOperands()) {
        operand.invite(this);
      }
    }
  }
);
  return result;
}
