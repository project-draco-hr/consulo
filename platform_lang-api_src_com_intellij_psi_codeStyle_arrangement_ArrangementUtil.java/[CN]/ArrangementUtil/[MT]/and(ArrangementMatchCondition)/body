{
  final ArrangementCompositeMatchCondition result=new ArrangementCompositeMatchCondition(ArrangementCompositeMatchCondition.Operator.AND);
  final ArrangementMatchConditionVisitor visitor=new ArrangementMatchConditionVisitor(){
    @Override public void visit(    @NotNull ArrangementAtomMatchCondition node){
      result.addOperand(node);
    }
    @Override public void visit(    @NotNull ArrangementCompositeMatchCondition node){
      if (node.getOperator() == ArrangementCompositeMatchCondition.Operator.AND) {
        for (        ArrangementMatchCondition operand : node.getOperands()) {
          operand.invite(this);
        }
      }
 else {
        result.addOperand(node);
      }
    }
  }
;
  for (  ArrangementMatchCondition node : nodes) {
    node.invite(visitor);
  }
  return result.getOperands().size() == 1 ? result.getOperands().iterator().next() : result;
}
