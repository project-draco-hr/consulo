{
  final boolean floating=navbar.isInFloatingMode();
  boolean toolbarVisible=UISettings.getInstance().SHOW_MAIN_TOOLBAR;
  final boolean selected=item.isSelected() && item.isFocused();
  boolean nextSelected=item.isNextSelected() && navbar.hasFocus();
  Map<ImageType,BufferedImage> cached=myCache.get(item);
  ImageType type;
  if (floating) {
    type=selected ? ImageType.ACTIVE_FLOATING : nextSelected ? ImageType.NEXT_ACTIVE_FLOATING : ImageType.INACTIVE_FLOATING;
  }
 else {
    if (toolbarVisible) {
      type=selected ? ImageType.ACTIVE : nextSelected ? ImageType.NEXT_ACTIVE : ImageType.INACTIVE;
    }
 else {
      type=selected ? ImageType.ACTIVE_NO_TOOLBAR : nextSelected ? ImageType.NEXT_ACTIVE_NO_TOOLBAR : ImageType.INACTIVE_NO_TOOLBAR;
    }
  }
  if (cached == null) {
    cached=new HashMap<ImageType,BufferedImage>();
    myCache.put(item,cached);
  }
  BufferedImage image=cached.get(type);
  if (image == null) {
    image=drawToBuffer(item,floating,toolbarVisible,selected,navbar);
    cached.put(type,image);
  }
  g.drawImage(image,0,0,null);
  Icon icon=item.getIcon();
  final int offset=item.isFirstElement() ? getFirstElementLeftOffset() : 0;
  final int iconOffset=getElementPadding().left + offset;
  icon.paintIcon(item,g,iconOffset,(item.getHeight() - icon.getIconHeight()) / 2);
  final int textOffset=icon.getIconWidth() + getElementPadding().width() + offset;
  item.doPaintText(g,textOffset);
}
