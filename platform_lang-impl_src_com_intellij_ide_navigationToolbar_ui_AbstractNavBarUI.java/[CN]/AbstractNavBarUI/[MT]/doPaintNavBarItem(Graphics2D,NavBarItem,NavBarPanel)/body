{
  final boolean floating=navbar.isInFloatingMode();
  boolean toolbar=UISettings.getInstance().SHOW_MAIN_TOOLBAR;
  Icon icon=item.getIcon();
  int w=item.getWidth();
  int h=item.getHeight();
  final Paint bg=floating ? Color.WHITE : new GradientPaint(0,0,new Color(255,255,255,30),0,h,new Color(255,255,255,10));
  final Color selection=UIUtil.getListSelectionBackground();
  final boolean selected=item.isSelected() && item.isFocused();
  Graphics2D g2=(Graphics2D)g.create();
  g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  Path2D.Double shape=new Path2D.Double();
  shape.moveTo(0,0);
  shape.lineTo(w - getDecorationOffset(),0);
  shape.lineTo(w,h / 2);
  shape.lineTo(w - getDecorationOffset(),h);
  shape.lineTo(0,h);
  shape.closePath();
  Path2D.Double endShape=new Path2D.Double();
  endShape.moveTo(w - getDecorationOffset(),0);
  endShape.lineTo(w,0);
  endShape.lineTo(w,h);
  endShape.lineTo(w - getDecorationOffset(),h);
  endShape.lineTo(w,h / 2);
  endShape.closePath();
  if (bg != null && toolbar) {
    g2.setPaint(bg);
    g2.fill(shape);
    if (!item.isLastElement() || floating) {
      g2.fill(endShape);
    }
  }
  if (selected) {
    Path2D.Double focusShape=new Path2D.Double();
    if (toolbar || floating) {
      focusShape.moveTo(w - getDecorationOffset(),0);
    }
 else {
      focusShape.moveTo(0,0);
      focusShape.lineTo(w - getDecorationOffset(),0);
    }
    focusShape.lineTo(w - 1,h / 2);
    focusShape.lineTo(w - getDecorationOffset(),h - 1);
    if (!toolbar && !floating) {
      focusShape.lineTo(0,h - 1);
    }
    g2.setColor(selection);
    if (floating && item.isLastElement()) {
      g2.fillRect(0,0,w,h);
    }
 else {
      g2.fill(shape);
      g2.setColor(new Color(0,0,0,70));
      g2.draw(focusShape);
    }
  }
  if (item.isNextSelected() && navbar.hasFocus()) {
    g2.setColor(selection);
    g2.fill(endShape);
    Path2D.Double endFocusShape=new Path2D.Double();
    if (toolbar || floating) {
      endFocusShape.moveTo(w - getDecorationOffset(),0);
    }
 else {
      endFocusShape.moveTo(w,0);
      endFocusShape.lineTo(w - getDecorationOffset(),0);
    }
    endFocusShape.lineTo(w - 1,h / 2);
    endFocusShape.lineTo(w - getDecorationOffset(),h - 1);
    if (!toolbar && !floating) {
      endFocusShape.lineTo(w,h - 1);
    }
    g2.setColor(new Color(0,0,0,70));
    g2.draw(endFocusShape);
  }
  final int offset=item.isFirstElement() ? getFirstElementLeftOffset() : 0;
  final int iconOffset=getElementPadding().left + offset;
  icon.paintIcon(item,g2,iconOffset,(h - icon.getIconHeight()) / 2);
  final int textOffset=icon.getIconWidth() + getElementPadding().width() + offset;
  item.doPaintText(g2,textOffset);
  g2.translate(w - getDecorationOffset(),0);
  int off=getDecorationOffset() - 1;
  if (!floating || !item.isLastElement()) {
    if (toolbar || floating) {
      if (!selected && (!navbar.hasFocus() | !item.isNextSelected())) {
        drawArrow(g2,new Color(0,0,0,70),new SameColor(205),off,h,!selected && !floating,false);
      }
    }
 else {
      if (!selected && (!navbar.hasFocus() | !item.isNextSelected())) {
        drawArrow(g2,new Color(0,0,0,150),new Color(255,255,255,200),off,h,!selected && !floating,true);
      }
    }
  }
  g2.dispose();
}
