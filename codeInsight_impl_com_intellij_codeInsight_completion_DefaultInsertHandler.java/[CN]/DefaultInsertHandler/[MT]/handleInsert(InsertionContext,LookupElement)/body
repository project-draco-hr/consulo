{
  if (!(item instanceof SimpleLookupItem)) {
    if (item.getObject() instanceof PsiMethod) {
      PsiMethod method=(PsiMethod)item.getObject();
      LookupItem<PsiMethod> simpleItem=LookupElementFactoryImpl.getInstance().createLookupElement(method,item.getLookupString());
      final SimpleInsertHandler handler=SimpleInsertHandlerFactory.createInsertHandler(method);
      if (handler != null) {
        simpleItem.setInsertHandler(handler);
      }
      simpleItem.setCompletionCharHandler(new CompletionCharHandler<PsiMethod>(){
        public TailType handleCompletionChar(        @NotNull final Editor editor,        @NotNull final LookupElement<PsiMethod> element,        final char completionChar){
          if (completionChar == '!')           return element.getTailType();
          if (completionChar == '(') {
            final PsiMethod psiMethod=element.getObject();
            return psiMethod.getParameterList().getParameters().length > 0 || psiMethod.getReturnType() != PsiType.VOID ? TailType.NONE : TailType.SEMICOLON;
          }
          if (completionChar == Lookup.COMPLETE_STATEMENT_SELECT_CHAR)           return TailType.SMART_COMPLETION;
          return null;
        }
      }
);
      final InsertHandler insertHandler=simpleItem.getInsertHandler();
      simpleItem.copyAttributes((LookupItem)item);
      insertHandler.handleInsert(context,simpleItem);
      return;
    }
  }
  DefaultInsertHandler delegate=this;
  if (isTemplateToBeCompleted((LookupItem)item)) {
    try {
      delegate=(DefaultInsertHandler)clone();
      delegate.clear();
    }
 catch (    CloneNotSupportedException e) {
      e.printStackTrace();
    }
  }
  boolean toClear=true;
  try {
    toClear=delegate.handleInsertInner(context,context.getStartOffset(),(LookupItem)item,context.isSignatureSelected(),context.getCompletionChar());
  }
  finally {
    if (toClear) {
      delegate.clear();
    }
  }
}
