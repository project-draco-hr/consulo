{
  PsiDocumentManager.getInstance(file.getProject()).commitAllDocuments();
  Object o=item.getObject();
  if (o instanceof PsiClass) {
    PsiClass aClass=(PsiClass)o;
    if (aClass.getQualifiedName() == null)     return;
    final String lookupString=item.getLookupString();
    int length=lookupString.length();
    final int i=lookupString.indexOf('<');
    if (i >= 0)     length=i;
    final int newOffset=addImportForClass(file,startOffset,startOffset + length,aClass);
    shortenReference(file,newOffset);
    return;
  }
 else   if (o instanceof PsiType) {
    PsiType type=((PsiType)o).getDeepComponentType();
    if (type instanceof PsiClassType) {
      PsiClass refClass=((PsiClassType)type).resolve();
      if (refClass != null) {
        int length=refClass.getName().length();
        addImportForClass(file,startOffset,startOffset + length,refClass);
      }
    }
  }
 else   if (o instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)o;
    if (method.isConstructor()) {
      PsiClass aClass=(PsiClass)item.getAttribute(LookupItem.CONTAINING_CLASS_ATTR);
      if (aClass == null) {
        aClass=method.getContainingClass();
      }
      if (aClass != null) {
        int length=method.getName().length();
        addImportForClass(file,startOffset,startOffset + length,aClass);
      }
    }
  }
}
