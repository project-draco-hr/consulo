{
  boolean needParens=false;
  if (myLookupItem.getAttribute(LookupItem.NEW_OBJECT_ATTR) != null) {
    PsiDocumentManager.getInstance(myProject).commitDocument(myDocument);
    needParens=true;
    final PsiClass aClass=(PsiClass)myLookupItem.getObject();
    PsiElement place=myFile.findElementAt(myStartOffset);
    if (myLookupItem.getAttribute(LookupItem.DONT_CHECK_FOR_INNERS) == null) {
      PsiClass[] classes=aClass.getInnerClasses();
      for (      PsiClass inner : classes) {
        if (!inner.hasModifierProperty(PsiModifier.STATIC))         continue;
        if (!inner.getManager().getResolveHelper().isAccessible(inner,place,null))         continue;
        needParens=false;
        break;
      }
    }
  }
 else   if (insertingAnnotationWithParameters()) {
    needParens=true;
  }
  return needParens;
}
