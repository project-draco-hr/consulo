{
  if (!field.isGetterRequired()) {
    return;
  }
  final PsiVariable variable=field.getField();
  final PsiType type=variable.getType();
  final String typeText=type.getCanonicalText();
  final String name=calculateStrippedName(variable);
  final String capitalizedName=StringUtil.capitalize(name);
  @NonNls final String getterName;
  if (PsiType.BOOLEAN.equals(type)) {
    getterName="is" + capitalizedName;
  }
 else {
    getterName="get" + capitalizedName;
  }
  for (  PsiMethod method : methods) {
    if (method.getParameterList().getParameters().length == 0 && getterName.equals(method.getName())) {
      return;
    }
  }
  out.append("\tpublic ");
  if (variable.hasModifierProperty(PsiModifier.STATIC)) {
    out.append("static ");
  }
  out.append(typeText);
  out.append(' ');
  out.append(getterName);
  out.append("()\n");
  out.append("\t{\n");
  final String fieldName=myJavaCodeStyleManager.propertyNameToVariableName(name,variable.hasModifierProperty(PsiModifier.STATIC) ? VariableKind.STATIC_FIELD : VariableKind.FIELD);
  out.append("\t\treturn " + fieldName + ";\n");
  out.append("\t}\n");
  out.append('\n');
}
