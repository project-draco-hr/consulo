{
  if (!field.isSetterRequired()) {
    return;
  }
  final PsiField variable=(PsiField)field.getField();
  final String name=calculateStrippedName(variable);
  final String setterName=createSetterNameForField(variable);
  for (  PsiMethod method : methods) {
    if (method.getName().equals(setterName) && method.getParameterList().getParameters().length == 1) {
      return;
    }
  }
  final String parameterName=settings.PARAMETER_NAME_PREFIX + name + settings.PARAMETER_NAME_SUFFIX;
  final PsiType type=variable.getType();
  final String typeText=type.getCanonicalText();
  out.append("\tpublic ");
  if (variable.hasModifierProperty(PsiModifier.STATIC)) {
    out.append("static ");
  }
  out.append("void ");
  out.append(setterName);
  out.append('(');
  out.append(typeText);
  out.append(' ');
  out.append(parameterName);
  out.append(")\n");
  out.append("\t{\n");
  final String fieldName;
  if (variable.hasModifierProperty(PsiModifier.STATIC)) {
    fieldName=settings.STATIC_FIELD_NAME_PREFIX + name + settings.STATIC_FIELD_NAME_SUFFIX;
  }
 else {
    fieldName=settings.FIELD_NAME_PREFIX + name + settings.FIELD_NAME_SUFFIX;
  }
  if (fieldName.equals(parameterName)) {
    out.append("\t\tthis." + fieldName + " = "+ parameterName+ ";\n");
  }
 else {
    out.append("\t\t" + fieldName + " = "+ parameterName+ ";\n");
  }
  out.append("\t}\n");
  out.append('\n');
}
