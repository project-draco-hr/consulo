{
  final PsiElement qualifier=expression.getQualifier();
  if (qualifier == null || qualifier instanceof PsiThisExpression) {
    final PsiElement referent=expression.resolve();
    if (referent instanceof PsiField) {
      final PsiField field=(PsiField)referent;
      if (fieldIsExtracted(field)) {
        final String name=calculateStrippedName(field);
        final String fieldName;
        if (field.hasModifierProperty(PsiModifier.STATIC)) {
          fieldName=settings.STATIC_FIELD_NAME_PREFIX + name + settings.STATIC_FIELD_NAME_SUFFIX;
        }
 else {
          fieldName=settings.FIELD_NAME_PREFIX + name + settings.FIELD_NAME_SUFFIX;
        }
        if (qualifier != null && fieldName.equals(expression.getReferenceName())) {
          out.append("this.");
        }
        out.append(fieldName);
      }
 else {
        if (field.hasModifierProperty(PsiModifier.STATIC)) {
          if (field.hasModifierProperty(PsiModifier.PUBLIC)) {
            out.append(originalClassName + '.' + field.getName());
          }
 else {
            out.append(originalClassName + '.' + createGetterNameForField(field)+ "()");
          }
        }
 else {
          out.append(backPointerName + '.' + createGetterNameForField(field)+ "()");
        }
      }
    }
 else {
      visitElement(expression);
    }
  }
 else {
    visitElement(expression);
  }
}
