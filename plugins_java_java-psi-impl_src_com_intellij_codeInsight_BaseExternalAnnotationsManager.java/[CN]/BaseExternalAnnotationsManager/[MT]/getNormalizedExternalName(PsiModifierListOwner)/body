{
  String externalName=getExternalName(owner,true);
  if (externalName == null) {
    return null;
  }
  if (owner instanceof PsiParameter && owner.getParent() instanceof PsiParameterList) {
    final PsiMethod method=PsiTreeUtil.getParentOfType(owner,PsiMethod.class);
    if (method != null) {
      externalName=externalName.substring(0,externalName.lastIndexOf(' ') + 1) + method.getParameterList().getParameterIndex((PsiParameter)owner);
    }
  }
  final int idx=externalName.indexOf('(');
  if (idx == -1)   return externalName;
  StringBuilder buf=new StringBuilder(externalName.length());
  int rightIdx=externalName.indexOf(')');
  String[] params=externalName.substring(idx + 1,rightIdx).split(",");
  buf.append(externalName,0,idx + 1);
  for (  String param : params) {
    param=param.trim();
    int spaceIdx=param.indexOf(' ');
    if (spaceIdx > -1) {
      buf.append(param,0,spaceIdx);
    }
 else {
      buf.append(param);
    }
    buf.append(", ");
  }
  if (StringUtil.endsWith(buf,", ")) {
    buf.delete(buf.length() - ", ".length(),buf.length());
  }
  buf.append(externalName,rightIdx,externalName.length());
  return buf.toString();
}
