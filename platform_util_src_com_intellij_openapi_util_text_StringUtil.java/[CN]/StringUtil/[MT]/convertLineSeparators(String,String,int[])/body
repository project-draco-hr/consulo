{
  StringBuilder buffer=null;
  int intactLength=0;
  final boolean newSeparatorIsSlashN="\n".equals(newSeparator);
  for (int i=0; i < text.length(); i++) {
    char c=text.charAt(i);
    if (c == '\n') {
      if (!newSeparatorIsSlashN) {
        if (buffer == null) {
          buffer=new StringBuilder(text.length());
          buffer.append(text,0,intactLength);
        }
        buffer.append(newSeparator);
        shiftOffsets(offsetsToKeep,buffer.length(),1,newSeparator.length());
      }
 else       if (buffer == null)       intactLength++;
 else       buffer.append(c);
    }
 else     if (c == '\r') {
      if (buffer == null) {
        buffer=new StringBuilder(text.length());
        buffer.append(text,0,intactLength);
      }
      buffer.append(newSeparator);
      if (i < text.length() - 1 && text.charAt(i + 1) == '\n') {
        i++;
        shiftOffsets(offsetsToKeep,buffer.length(),2,newSeparator.length());
      }
 else {
        shiftOffsets(offsetsToKeep,buffer.length(),1,newSeparator.length());
      }
    }
 else {
      if (buffer == null)       intactLength++;
 else       buffer.append(c);
    }
  }
  return buffer == null ? text : buffer.toString();
}
