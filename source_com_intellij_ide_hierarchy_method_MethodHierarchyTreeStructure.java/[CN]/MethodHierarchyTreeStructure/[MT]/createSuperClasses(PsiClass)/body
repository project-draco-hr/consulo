{
  if (!aClass.isValid()) {
    return new ArrayList();
  }
  final ArrayList superClasses=new ArrayList();
  while (!isJavaLangObject(aClass)) {
    final PsiClass aClass1=aClass;
    final PsiClass[] superTypes=aClass1.getSupers();
    PsiClass superType=null;
    for (int i=0; i < superTypes.length; i++) {
      final PsiClass type=superTypes[i];
      if (!type.isInterface() && !isJavaLangObject(type)) {
        superType=type;
        break;
      }
    }
    if (superType == null) {
      for (int i=0; i < superTypes.length; i++) {
        final PsiClass type=superTypes[i];
        if (!isJavaLangObject(type)) {
          superType=type;
          break;
        }
      }
    }
    if (superType == null)     break;
    if (superClasses.contains(superType))     break;
    superClasses.add(superType);
    aClass=superType;
  }
  return superClasses;
}
