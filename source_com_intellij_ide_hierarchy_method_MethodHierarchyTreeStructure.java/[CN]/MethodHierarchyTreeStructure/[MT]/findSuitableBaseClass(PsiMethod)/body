{
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass instanceof PsiAnonymousClass) {
    return containingClass;
  }
  final PsiClass superClass=containingClass.getSuperClass();
  if (superClass == null) {
    return containingClass;
  }
  if (MethodHierarchyUtil.findBaseMethodInClass(method,superClass,true) == null) {
    for (    final PsiClass anInterface : containingClass.getInterfaces()) {
      if (MethodHierarchyUtil.findBaseMethodInClass(method,anInterface,true) != null) {
        return anInterface;
      }
    }
  }
  return containingClass;
}
