{
synchronized (PsiLock.LOCK) {
    if (myReleaseOutdatedInProgress) {
      return;
    }
    myReleaseOutdatedInProgress=true;
    int removed=0;
    for (int i=0; i < myValues.size(); i++) {
      WeakReference<CachedValue> ref=myValues.get(i);
      final CachedValue value=ref.get();
      if (value == null) {
        removed++;
        continue;
      }
      value.releaseValueIfOutdated();
      if (removed > 0) {
        myValues.set(i - removed,ref);
      }
    }
    for (int i=0; i < removed; i++) {
      myValues.remove(myValues.size() - 1);
    }
    if (myValues.size() < myValuesMaxSize / 2) {
      myValues=new ArrayList<WeakReference<CachedValue>>(myValues);
      myValuesMaxSize=myValues.size();
    }
    ;
  }
}
