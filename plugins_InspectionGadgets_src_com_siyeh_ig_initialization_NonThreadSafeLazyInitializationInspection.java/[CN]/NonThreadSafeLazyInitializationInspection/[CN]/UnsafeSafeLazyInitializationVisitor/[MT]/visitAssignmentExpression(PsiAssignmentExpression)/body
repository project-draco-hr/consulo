{
  super.visitAssignmentExpression(expression);
  final PsiExpression lhs=expression.getLExpression();
  if (!(lhs instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiElement referent=((PsiReference)lhs).resolve();
  if (!(referent instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)referent;
  if (!field.hasModifierProperty(PsiModifier.STATIC)) {
    return;
  }
  if (isInStaticInitializer(expression)) {
    return;
  }
  if (isInSynchronizedContext(expression)) {
    return;
  }
  if (!isLazy(expression,(PsiReferenceExpression)lhs)) {
    return;
  }
  registerError(lhs);
}
