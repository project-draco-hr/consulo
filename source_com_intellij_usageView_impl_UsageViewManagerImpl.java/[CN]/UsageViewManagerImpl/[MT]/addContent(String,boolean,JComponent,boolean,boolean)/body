{
  Key<Boolean> contentKey=reusable ? REUSABLE_CONTENT_KEY : NOT_REUSABLE_CONTENT_KEY;
  if ((!toOpenInNewTab) && reusable) {
    Content[] contents=myFindContentManager.getContents();
    Content contentToDelete=null;
    for (int i=0; i < contents.length; i++) {
      Content content=contents[i];
      if (!content.isPinned() && content.getUserData(contentKey) != null) {
        UsageView usageView=content.getUserData(USAGE_VIEW_KEY);
        if (usageView == null || !usageView.isInAsyncUpdate()) {
          contentToDelete=content;
        }
      }
    }
    if (contentToDelete != null) {
      myFindContentManager.removeContent(contentToDelete);
    }
  }
  Content content=PeerFactory.getInstance().getContentFactory().createContent(component,contentName,isLockable);
  content.putUserData(contentKey,Boolean.TRUE);
  myFindContentManager.addContent(content);
  myFindContentManager.setSelectedContent(content);
  return content;
}
