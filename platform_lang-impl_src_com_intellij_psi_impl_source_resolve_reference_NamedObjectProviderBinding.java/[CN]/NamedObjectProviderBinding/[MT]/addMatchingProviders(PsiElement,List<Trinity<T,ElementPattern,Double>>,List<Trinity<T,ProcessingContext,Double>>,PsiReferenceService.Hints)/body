{
  if (providerList == null)   return;
  for (  Trinity<T,ElementPattern,Double> trinity : providerList) {
    if (hints != PsiReferenceService.Hints.NO_HINTS && !((PsiReferenceProvider)trinity.first).acceptsHints(position,hints)) {
      continue;
    }
    final ProcessingContext context=new ProcessingContext();
    if (hints != PsiReferenceService.Hints.NO_HINTS) {
      context.put(PsiReferenceService.HINTS,hints);
    }
    boolean suitable=false;
    try {
      suitable=trinity.second.accepts(position,context);
    }
 catch (    IndexNotReadyException ignored) {
    }
    if (suitable) {
      ret.add(Trinity.create(trinity.first,context,trinity.third));
    }
  }
}
