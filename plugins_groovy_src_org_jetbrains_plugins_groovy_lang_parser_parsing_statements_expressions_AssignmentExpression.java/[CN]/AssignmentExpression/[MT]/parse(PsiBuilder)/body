{
  Marker marker=builder.mark();
  final boolean isTuple=ParserUtils.lookAhead(builder,mLPAREN,mIDENT,mCOMMA);
  if (isTuple ? TupleParse.parseTuple(builder,false,TUPLE_EXPRESSION,REFERENCE_EXPRESSION) : ConditionalExpression.parse(builder)) {
    if (ParserUtils.getToken(builder,ASSIGNMENTS)) {
      ParserUtils.getToken(builder,mNLS);
      if (!parse(builder)) {
        builder.error(GroovyBundle.message("expression.expected"));
      }
      marker.done(ASSIGNMENT_EXPRESSION);
    }
 else {
      marker.drop();
    }
    return true;
  }
 else {
    marker.drop();
    return false;
  }
}
