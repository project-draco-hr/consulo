{
  if (!(expression.getParent().getParent() instanceof PsiMethodCallExpression)) {
    return false;
  }
  final PsiMethodCallExpression call=(PsiMethodCallExpression)expression.getParent().getParent();
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier != expression) {
    return false;
  }
  if (!"equals".equals(methodExpression.getReferenceName())) {
    return false;
  }
  final PsiElement resolved=methodExpression.resolve();
  if (!(resolved instanceof PsiMethod)) {
    return false;
  }
  PsiType objectType=PsiType.getJavaLangObject(resolved.getManager(),resolved.getResolveScope());
  MethodSignature equalsSignature=MethodSignatureUtil.createMethodSignature("equals",new PsiType[]{objectType},PsiTypeParameter.EMPTY_ARRAY,PsiSubstitutor.EMPTY);
  if (!equalsSignature.equals(((PsiMethod)resolved).getSignature(PsiSubstitutor.EMPTY))) {
    return false;
  }
  final PsiExpression[] expressions=call.getArgumentList().getExpressions();
  if (expressions.length != 1) {
    return false;
  }
  final PsiExpression arg=expressions[0];
  PsiReferenceExpression ref=null;
  if (arg instanceof PsiReferenceExpression) {
    ref=(PsiReferenceExpression)arg;
  }
 else   if (arg instanceof PsiMethodCallExpression)   ref=((PsiMethodCallExpression)arg).getMethodExpression();
  if (ref != null) {
    final PsiElement resolvedEntity=ref.resolve();
    if (resolvedEntity instanceof PsiModifierListOwner) {
      PsiModifierListOwner modifierListOwner=(PsiModifierListOwner)resolvedEntity;
      if (annotatedAsNonNls(modifierListOwner)) {
        return true;
      }
      nonNlsTargets.add(modifierListOwner);
    }
  }
  return false;
}
