{
  if (myPI != null) {
    myPI.setText2(SvnBundle.message("progress.text2.changes.establishing.connection",myUrl));
  }
  SVNWCClient wcClient=myVcs.createWCClient();
  try {
    final SVNURL svnurl=SVNURL.parseURIEncoded(myUrl);
    SVNInfo info=null;
    info=wcClient.doInfo(svnurl,SVNRevision.UNDEFINED,SVNRevision.HEAD);
    final String root=info.getRepositoryRootURL().toString();
    String relativeUrl=myUrl;
    if (myUrl.startsWith(root)) {
      relativeUrl=myUrl.substring(root.length());
    }
    SVNLogClient client=myVcs.createLogClient();
    client.doLog(svnurl,new String[]{},SVNRevision.UNDEFINED,SVNRevision.HEAD,SVNRevision.create(1),false,true,mySupport15,0,null,new RepositoryLogEntryHandler(myVcs,myUrl,SVNRevision.UNDEFINED,relativeUrl,myConsumer,info.getRepositoryRootURL()));
  }
 catch (  SVNCancelException e) {
  }
catch (  SVNException e) {
    myException=new VcsException(e);
  }
catch (  VcsException e) {
    myException=e;
  }
}
