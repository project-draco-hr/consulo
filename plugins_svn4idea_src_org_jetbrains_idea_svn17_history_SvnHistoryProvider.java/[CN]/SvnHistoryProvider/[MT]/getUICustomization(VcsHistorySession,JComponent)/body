{
  final ColumnInfo[] columns;
  final Consumer<VcsFileRevision> listener;
  final JComponent addComp;
  if (((MyHistorySession)session).isSupports15()) {
    final MergeSourceColumnInfo mergeSourceColumn=new MergeSourceColumnInfo((MyHistorySession)session);
    columns=new ColumnInfo[]{new CopyFromColumnInfo(),mergeSourceColumn};
    final JTextArea field=new JTextArea();
    field.setEditable(false);
    field.setBackground(UIUtil.getComboBoxDisabledBackground());
    field.setWrapStyleWord(true);
    listener=new Consumer<VcsFileRevision>(){
      public void consume(      VcsFileRevision vcsFileRevision){
        field.setText(mergeSourceColumn.getText(vcsFileRevision));
      }
    }
;
    final JPanel panel=new JPanel(new GridBagLayout());
    final GridBagConstraints gb=new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0);
    final JLabel mergeLabel=new JLabel("Merge Sources:");
    final MergeSourceDetailsAction sourceAction=new MergeSourceDetailsAction();
    sourceAction.registerSelf(forShortcutRegistration);
    final DefaultActionGroup group=new DefaultActionGroup();
    group.add(sourceAction);
    final JComponent toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,group,true).getComponent();
    panel.add(mergeLabel,gb);
    ++gb.gridx;
    gb.insets.left=10;
    gb.anchor=GridBagConstraints.NORTHWEST;
    panel.add(toolbar,gb);
    ++gb.gridy;
    gb.insets.left=0;
    gb.gridx=0;
    gb.gridwidth=2;
    gb.weightx=gb.weighty=1;
    gb.fill=GridBagConstraints.BOTH;
    panel.add(ScrollPaneFactory.createScrollPane(field),gb);
    addComp=panel;
  }
 else {
    columns=new ColumnInfo[]{new CopyFromColumnInfo()};
    addComp=null;
    listener=null;
  }
  return new VcsDependentHistoryComponents(columns,listener,addComp);
}
