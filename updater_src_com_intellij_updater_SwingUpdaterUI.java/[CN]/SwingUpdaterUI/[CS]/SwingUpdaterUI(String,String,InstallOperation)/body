{
  myOperation=operation;
  myProcessTitle=new JLabel(" ");
  myProcessProgress=new JProgressBar(0,100);
  myProcessStatus=new JLabel(" ");
  myCancelButton=new JButton(CANCEL_BUTTON_TITLE);
  myConsole=new JTextArea();
  myConsole.setLineWrap(true);
  myConsole.setWrapStyleWord(true);
  myConsole.setCaretPosition(myConsole.getText().length());
  myConsole.setTabSize(1);
  myConsolePane=new JPanel(new BorderLayout());
  myConsolePane.add(new JScrollPane(myConsole));
  myConsolePane.setBorder(BUTTONS_BORDER);
  myConsolePane.setVisible(false);
  myCancelButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      doCancel();
    }
  }
);
  myFrame=new JFrame();
  myFrame.setTitle(TITLE);
  myFrame.setLayout(new BorderLayout());
  myFrame.getRootPane().setBorder(FRAME_BORDER);
  myFrame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
  myFrame.addWindowListener(new WindowAdapter(){
    @Override public void windowClosing(    WindowEvent e){
      doCancel();
    }
  }
);
  JPanel processPanel=new JPanel();
  processPanel.setLayout(new BoxLayout(processPanel,BoxLayout.Y_AXIS));
  processPanel.add(myProcessTitle);
  processPanel.add(myProcessProgress);
  processPanel.add(myProcessStatus);
  processPanel.add(myConsolePane);
  for (  Component each : processPanel.getComponents()) {
    ((JComponent)each).setAlignmentX(Component.LEFT_ALIGNMENT);
  }
  JPanel buttonsPanel=new JPanel();
  buttonsPanel.setBorder(BUTTONS_BORDER);
  buttonsPanel.setLayout(new BoxLayout(buttonsPanel,BoxLayout.X_AXIS));
  buttonsPanel.add(Box.createHorizontalGlue());
  buttonsPanel.add(myCancelButton);
  myProcessTitle.setText("<html>Updating " + oldBuildDesc + " to "+ newBuildDesc+ "...");
  myFrame.add(processPanel,BorderLayout.CENTER);
  myFrame.add(buttonsPanel,BorderLayout.SOUTH);
  myFrame.setMinimumSize(new Dimension(500,50));
  myFrame.pack();
  centerOnScreen(myFrame);
  myFrame.setVisible(true);
  myQueue.add(new UpdateRequest(){
    @Override public void perform(){
      doPerform();
    }
  }
);
  startRequestDispatching();
}
