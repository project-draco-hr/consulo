{
  if (from == to) {
    DefaultMutableTreeNode parent=(DefaultMutableTreeNode)from.getParent();
    int index=parent.getIndex(from);
    parent.remove(index);
    parent.insert(replacement,index);
    return;
  }
  DefaultMutableTreeNode root=(DefaultMutableTreeNode)from.getParent();
  DefaultMutableTreeNode cutHierarchy=null;
  for (DefaultMutableTreeNode current=to; current != root; current=(DefaultMutableTreeNode)current.getParent()) {
    DefaultMutableTreeNode parent=(DefaultMutableTreeNode)current.getParent();
    int i=parent.getIndex(current);
    if (i >= parent.getChildCount() - 1) {
      continue;
    }
    DefaultMutableTreeNode parentCopy=new DefaultMutableTreeNode(parent.getUserObject());
    if (cutHierarchy != null) {
      parentCopy.add(cutHierarchy);
    }
    for (int j=i + 1, limit=parent.getChildCount(); j < limit; j++) {
      DefaultMutableTreeNode child=(DefaultMutableTreeNode)parent.getChildAt(j);
      parent.remove(j);
      parentCopy.add(child);
    }
    cutHierarchy=parentCopy;
  }
  int insertionIndex=root.getIndex(from) + 1;
  for (DefaultMutableTreeNode current=to; current != root; current=(DefaultMutableTreeNode)current.getParent()) {
    DefaultMutableTreeNode parent=(DefaultMutableTreeNode)current.getParent();
    parent.remove(current);
    if (parent.getChildCount() > 0) {
      break;
    }
  }
  insert(root,insertionIndex,replacement);
  if (cutHierarchy != null) {
    insert(root,insertionIndex + 1,cutHierarchy);
  }
}
