{
  if (parent.getChildCount() < index) {
    parent.add(child);
    return false;
  }
  boolean anchorAbove=false;
  DefaultMutableTreeNode mergeCandidate=null;
  if (index > 0) {
    mergeCandidate=(DefaultMutableTreeNode)parent.getChildAt(index - 1);
    if (!userDataEqual(mergeCandidate.getUserObject(),child.getUserObject())) {
      mergeCandidate=null;
    }
  }
  if (index < parent.getChildCount()) {
    DefaultMutableTreeNode n=(DefaultMutableTreeNode)parent.getChildAt(index);
    if (userDataEqual(n.getUserObject(),child.getUserObject())) {
      mergeCandidate=n;
      anchorAbove=true;
    }
  }
  if (mergeCandidate == null) {
    if (index < parent.getChildCount()) {
      parent.insert(child,index);
    }
 else {
      parent.add(child);
    }
    return false;
  }
  for (int i=0, limit=child.getChildCount(); i < limit; i++) {
    insert(mergeCandidate,anchorAbove ? 0 : mergeCandidate.getChildCount(),(DefaultMutableTreeNode)child.getChildAt(0));
  }
  return true;
}
