{
  @NotNull TIntIntHashMap changes=new TIntIntHashMap();
  DefaultMutableTreeNode root=getRoot(node);
  int row=0;
  Stack<DefaultMutableTreeNode> nodes=new Stack<DefaultMutableTreeNode>();
  nodes.push(root);
  while (!nodes.isEmpty()) {
    DefaultMutableTreeNode n=nodes.pop();
    Object userObject=n.getUserObject();
    if (userObject instanceof RowInfo) {
      RowInfo rowInfo=(RowInfo)userObject;
      if (rowInfo.row != row) {
        changes.put(rowInfo.row,row);
      }
      n.setUserObject(rowInfo.userObject);
    }
    row++;
    for (int i=n.getChildCount() - 1; i >= 0; i--) {
      nodes.push((DefaultMutableTreeNode)n.getChildAt(i));
    }
  }
  return changes;
}
