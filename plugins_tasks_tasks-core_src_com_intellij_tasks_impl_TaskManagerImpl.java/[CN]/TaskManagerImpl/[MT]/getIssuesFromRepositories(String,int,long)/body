{
  List<Task> issues=new ArrayList<Task>();
  for (  final TaskRepository repository : getAllRepositories()) {
    if (!repository.isConfigured() || myBadRepositories.contains(repository)) {
      continue;
    }
    try {
      Task[] tasks=repository.getIssues(request,max,since);
      ContainerUtil.addAll(issues,tasks);
    }
 catch (    Exception e) {
      myBadRepositories.add(repository);
      LOG.warn(e);
      Notifications.Bus.register(TASKS_NOTIFICATION_GROUP,NotificationDisplayType.BALLOON);
      Notifications.Bus.notify(new Notification(TASKS_NOTIFICATION_GROUP,"Cannot connect to " + repository.getUrl(),"<p><a href=\"\">Configure server...</a></p>",NotificationType.WARNING,new NotificationListener(){
        public void hyperlinkUpdate(        @NotNull Notification notification,        @NotNull HyperlinkEvent event){
          TaskRepositoriesConfigurable configurable=new TaskRepositoriesConfigurable(myProject);
          ShowSettingsUtil.getInstance().editConfigurable(myProject,configurable);
          if (!ArrayUtil.contains(repository,getAllRepositories())) {
            notification.expire();
          }
        }
      }
),myProject);
    }
  }
  return issues;
}
