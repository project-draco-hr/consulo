{
  final LocalTaskImpl task=origin instanceof LocalTaskImpl ? (LocalTaskImpl)origin : new LocalTaskImpl(origin);
  if (explicitly) {
    task.setUpdated(new Date());
  }
  task.setActive(true);
  myActiveTask.setActive(false);
  addTask(task);
  if (task.isIssue()) {
    StartupManager.getInstance(myProject).runWhenProjectIsInitialized(new Runnable(){
      public void run(){
        ProgressManager.getInstance().run(new com.intellij.openapi.progress.Task.Backgroundable(myProject,"Updating " + task.getId()){
          public void run(          @NotNull ProgressIndicator indicator){
            updateIssue(task.getId());
          }
        }
);
      }
    }
);
  }
  LocalTask oldActiveTask=myActiveTask;
  boolean isChanged=!task.equals(oldActiveTask);
  myActiveTask=task;
  if (isChanged) {
    myDispatcher.getMulticaster().taskDeactivated(oldActiveTask);
    myDispatcher.getMulticaster().taskActivated(task);
  }
  return task;
}
