{
  TestConnectionTask task=new TestConnectionTask("Test connection"){
    public void run(    @NotNull ProgressIndicator indicator){
      indicator.setText("Connecting to " + repository.getUrl() + "...");
      indicator.setFraction(0);
      indicator.setIndeterminate(true);
      myConnection=repository.createCancellableConnection();
      if (myConnection != null) {
        Future<Exception> future=ApplicationManager.getApplication().executeOnPooledThread(myConnection);
        while (true) {
          try {
            myException=future.get(100,TimeUnit.MILLISECONDS);
            return;
          }
 catch (          TimeoutException ignore) {
            try {
              indicator.checkCanceled();
            }
 catch (            ProcessCanceledException e) {
              myException=e;
              myConnection.cancel();
              return;
            }
          }
catch (          Exception e) {
            myException=e;
            return;
          }
        }
      }
 else {
        try {
          repository.testConnection();
        }
 catch (        Exception e) {
          LOG.info(e);
          myException=e;
        }
      }
    }
  }
;
  ProgressManager.getInstance().run(task);
  Exception e=task.myException;
  if (e == null) {
    Messages.showMessageDialog(myProject,"Connection is successful","Connection",Messages.getInformationIcon());
  }
 else   if (!(e instanceof ProcessCanceledException)) {
    Messages.showErrorDialog(myProject,e.getMessage(),"Error");
  }
  return e == null;
}
