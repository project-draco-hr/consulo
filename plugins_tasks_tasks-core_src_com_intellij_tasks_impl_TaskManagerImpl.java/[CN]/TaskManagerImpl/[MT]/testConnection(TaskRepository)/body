{
  TestConnectionTask task=new TestConnectionTask("Test connection"){
    public void run(    @NotNull ProgressIndicator indicator){
      indicator.setText("Connecting to " + repository.getUrl() + "...");
      indicator.setFraction(0);
      indicator.setIndeterminate(true);
      try {
        myConnection=repository.createCancellableConnection();
        if (myConnection != null) {
          Future<Exception> future=ApplicationManager.getApplication().executeOnPooledThread(myConnection);
          while (true) {
            try {
              myException=future.get(100,TimeUnit.MILLISECONDS);
              return;
            }
 catch (            TimeoutException ignore) {
              try {
                indicator.checkCanceled();
              }
 catch (              ProcessCanceledException e) {
                myException=e;
                myConnection.cancel();
                return;
              }
            }
catch (            Exception e) {
              myException=e;
              return;
            }
          }
        }
 else {
          try {
            repository.testConnection();
          }
 catch (          Exception e) {
            LOG.info(e);
            myException=e;
          }
        }
      }
 catch (      Exception e) {
        myException=e;
      }
    }
  }
;
  ProgressManager.getInstance().run(task);
  Exception e=task.myException;
  if (e == null) {
    myBadRepositories.remove(repository);
    Messages.showMessageDialog(myProject,"Connection is successful","Connection",Messages.getInformationIcon());
  }
 else   if (!(e instanceof ProcessCanceledException)) {
    String message=e.getMessage();
    if (e instanceof UnknownHostException) {
      message="Unknown host: " + message;
    }
    if (message == null) {
      LOG.error(e);
      message="Unknown error";
    }
    Messages.showErrorDialog(myProject,StringUtil.capitalize(message),"Error");
  }
  return e == null;
}
