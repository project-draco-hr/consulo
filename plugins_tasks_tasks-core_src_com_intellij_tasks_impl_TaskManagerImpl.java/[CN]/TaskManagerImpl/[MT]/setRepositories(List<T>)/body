{
  Set<TaskRepository> set=new HashSet<TaskRepository>(myRepositories);
  set.removeAll(repositories);
  myBadRepositories.removeAll(set);
  myIssueCache.clear();
  myTemporaryCache.clear();
  myRepositories.clear();
  myRepositories.addAll(repositories);
  reps:   for (  T repository : repositories) {
    if (repository.isShared() && repository.getUrl() != null) {
      List<TaskProjectConfiguration.SharedServer> servers=getProjectConfiguration().servers;
      TaskRepositoryType type=repository.getRepositoryType();
      for (      TaskProjectConfiguration.SharedServer server : servers) {
        if (repository.getUrl().equals(server.url) && type.getName().equals(server.type)) {
          continue reps;
        }
      }
      TaskProjectConfiguration.SharedServer server=new TaskProjectConfiguration.SharedServer();
      server.type=type.getName();
      server.url=repository.getUrl();
      servers.add(server);
    }
  }
}
