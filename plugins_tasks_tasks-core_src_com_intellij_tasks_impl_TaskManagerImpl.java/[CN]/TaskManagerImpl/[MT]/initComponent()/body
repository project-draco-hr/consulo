{
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    myCacheRefreshTimer=UIUtil.createNamedTimer("TaskManager refresh",myConfig.updateInterval * 60 * 1000,new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        if (myConfig.updateEnabled && !myUpdating) {
          updateIssues(null);
        }
      }
    }
);
    myCacheRefreshTimer.setInitialDelay(0);
    StartupManager.getInstance(myProject).registerStartupActivity(new Runnable(){
      public void run(){
        myCacheRefreshTimer.start();
      }
    }
);
    myTimeTrackingTimer=UIUtil.createNamedTimer("TaskManager time tracking",TIME_TRACKING_TIME_UNIT,new ActionListener(){
      @Override public void actionPerformed(      final ActionEvent e){
        getActiveTask().setTimeSpent(getActiveTask().getTimeSpent() + TIME_TRACKING_TIME_UNIT);
        getState().myTotallyTimeSpent+=TIME_TRACKING_TIME_UNIT;
      }
    }
);
    StartupManager.getInstance(myProject).registerStartupActivity(new Runnable(){
      public void run(){
        myTimeTrackingTimer.start();
      }
    }
);
  }
  LocalTask defaultTask=myTasks.get(LocalTaskImpl.DEFAULT_TASK_ID);
  if (defaultTask == null) {
    defaultTask=createDefaultTask();
    addTask(defaultTask);
  }
  LocalChangeList defaultList=myChangeListManager.findChangeList(LocalChangeList.DEFAULT_NAME);
  if (defaultList != null) {
    ChangeListInfo listInfo=new ChangeListInfo(defaultList);
    if (!defaultTask.getChangeLists().contains(listInfo)) {
      defaultTask.addChangelist(listInfo);
    }
  }
  for (  LocalTask localTask : getLocalTasks()) {
    for (Iterator<ChangeListInfo> iterator=localTask.getChangeLists().iterator(); iterator.hasNext(); ) {
      final ChangeListInfo changeListInfo=iterator.next();
      if (myChangeListManager.getChangeList(changeListInfo.id) == null) {
        iterator.remove();
      }
    }
  }
  LocalTask activeTask=null;
  final List<LocalTask> tasks=getLocalTasks();
  Collections.sort(tasks,TASK_UPDATE_COMPARATOR);
  for (  LocalTask task : tasks) {
    if (activeTask == null) {
      if (task.isActive()) {
        activeTask=task;
      }
    }
 else {
      task.setActive(false);
    }
  }
  if (activeTask != null) {
    myActiveTask=activeTask;
  }
  doActivate(myActiveTask,false);
  myDispatcher.getMulticaster().taskActivated(myActiveTask);
  myChangeListManager.addChangeListListener(myChangeListListener);
}
