{
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    myCacheRefreshTimer=new Timer(myConfig.updateInterval * 60 * 1000,new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        if (myConfig.updateEnabled && !myUpdating) {
          updateIssues(null);
        }
      }
    }
);
    myCacheRefreshTimer.setInitialDelay(0);
    StartupManager.getInstance(myProject).registerStartupActivity(new Runnable(){
      public void run(){
        myCacheRefreshTimer.start();
      }
    }
);
  }
  LocalTaskImpl defaultTask=myTasks.get(LocalTaskImpl.DEFAULT_TASK_ID);
  if (defaultTask == null) {
    defaultTask=createDefaultTask();
    myTasks.put(defaultTask.getId(),defaultTask);
  }
  LocalChangeList defaultList=myChangeListManager.findChangeList(LocalChangeList.DEFAULT_NAME);
  if (defaultList != null) {
    ChangeListInfo listInfo=new ChangeListInfo(defaultList);
    if (!defaultTask.getChangeLists().contains(listInfo)) {
      defaultTask.getChangeLists().add(listInfo);
    }
  }
  HashSet<ChangeListInfo> infos=new HashSet<ChangeListInfo>();
  for (  LocalTaskImpl task : getLocalTasks()) {
    infos.addAll(task.getChangeLists());
  }
  List<LocalChangeList> changeLists=myChangeListManager.getChangeLists();
  for (  LocalChangeList localChangeList : changeLists) {
    ChangeListInfo info=new ChangeListInfo(localChangeList);
    if (!infos.contains(info)) {
      String name=localChangeList.getName();
      String id=extractId(name);
      LocalTask existing=id == null ? myTasks.get(name) : myTasks.get(id);
      if (existing != null) {
        ((LocalTaskImpl)existing).getChangeLists().add(info);
      }
 else {
        LocalTaskImpl task;
        if (id == null) {
          task=createLocalTask(name);
        }
 else {
          task=createTask(id,name);
          task.setIssue(true);
        }
        task.getChangeLists().add(info);
        myTasks.put(task.getId(),task);
      }
    }
  }
  doActivate(myActiveTask,false);
  myChangeListManager.addChangeListListener(myChangeListListener);
}
