{
  myProject=project;
  myContextManager=contextManager;
  myChangeListManager=changeListManager;
  myChangeListListener=new ChangeListAdapter(){
    @Override public void changeListRemoved(    ChangeList list){
      LocalTask task=getAssociatedTask((LocalChangeList)list);
      if (task != null) {
        for (        ChangeListInfo info : task.getChangeLists()) {
          if (Comparing.equal(info.id,((LocalChangeList)list).getId())) {
            info.id="";
          }
        }
      }
    }
    @Override public void defaultListChanged(    ChangeList oldDefaultList,    ChangeList newDefaultList){
      final LocalTask associatedTask=getAssociatedTask((LocalChangeList)newDefaultList);
      if (associatedTask != null && !getActiveTask().equals(associatedTask)) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            activateTask(associatedTask,true);
          }
        }
,myProject.getDisposed());
      }
    }
  }
;
}
