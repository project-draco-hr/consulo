{
  myModulePackageNodes.put(scopeType,new HashMap<Pair<Module,PsiPackage>,PackageNode>());
  myLibraryPackageNodes.put(scopeType,new GenericHashMap<Pair<OrderEntry,PsiPackage>,PackageNode>(new TObjectHashingStrategy<Pair<OrderEntry,PsiPackage>>(){
    public int computeHashCode(    final Pair<OrderEntry,PsiPackage> key){
      return key.getSecond() == null ? 0 : key.getSecond().hashCode();
    }
    public boolean equals(    final Pair<OrderEntry,PsiPackage> o1,    final Pair<OrderEntry,PsiPackage> o2){
      return Comparing.equal(o1.getSecond(),o2.getSecond());
    }
  }
));
  myModuleNodes.put(scopeType,new HashMap<Module,ModuleNode>());
  myLibraryNodes.put(scopeType,new HashMap<OrderEntry,LibraryNode>());
}
