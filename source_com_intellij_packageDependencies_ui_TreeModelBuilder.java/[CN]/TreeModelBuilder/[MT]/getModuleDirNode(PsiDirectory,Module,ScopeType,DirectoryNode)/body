{
  if (psiDirectory == null) {
    return getModuleNode(module,scopeType);
  }
  PackageDependenciesNode directoryNode=getMap(myModuleDirNodes,scopeType).get(psiDirectory);
  if (directoryNode != null) {
    if (myCompactEmptyMiddlePackages) {
      DirectoryNode nestedNode=((DirectoryNode)directoryNode).getCompactedDirNode();
      if (nestedNode != null) {
        DirectoryNode parentWrapper=nestedNode.getWrapper();
        while (parentWrapper.getWrapper() != null) {
          parentWrapper=parentWrapper.getWrapper();
        }
        for (int i=parentWrapper.getChildCount() - 1; i >= 0; i--) {
          nestedNode.add((MutableTreeNode)parentWrapper.getChildAt(i));
        }
        ((DirectoryNode)directoryNode).setCompactedDirNode(null);
        if (parentWrapper.getCompactedDirNode() != null) {
          parentWrapper.add(nestedNode);
          return parentWrapper;
        }
 else {
          directoryNode.add(nestedNode);
        }
      }
 else       if (directoryNode.getParent() == null) {
        DirectoryNode parentWrapper=((DirectoryNode)directoryNode).getWrapper();
        if (parentWrapper != null) {
          while (parentWrapper.getWrapper() != null) {
            parentWrapper=parentWrapper.getWrapper();
          }
          return parentWrapper;
        }
      }
    }
    return directoryNode;
  }
  directoryNode=new DirectoryNode(psiDirectory,myCompactEmptyMiddlePackages,myFlattenPackages);
  ((DirectoryNode)directoryNode).setCompactedDirNode(childNode);
  getMap(myModuleDirNodes,scopeType).put(psiDirectory,(DirectoryNode)directoryNode);
  if (!myFlattenPackages) {
    final PsiDirectory directory=psiDirectory.getParentDirectory();
    LOG.assertTrue(directory != null);
    final PsiDirectory parentDirectory=directory.getParentDirectory();
    if (parentDirectory != null && ProjectRootManager.getInstance(myProject).getFileIndex().getModuleForFile(parentDirectory.getVirtualFile()) == module) {
      DirectoryNode parentDirectoryNode=getMap(myModuleDirNodes,scopeType).get(directory);
      if (parentDirectoryNode != null || !myCompactEmptyMiddlePackages) {
        getModuleDirNode(directory,module,scopeType,(DirectoryNode)directoryNode).add(directoryNode);
      }
 else {
        directoryNode=getModuleDirNode(directory,module,scopeType,(DirectoryNode)directoryNode);
      }
    }
 else {
      getModuleNode(module,scopeType).add(directoryNode);
    }
  }
 else {
    getModuleNode(module,scopeType).add(directoryNode);
  }
  return directoryNode;
}
