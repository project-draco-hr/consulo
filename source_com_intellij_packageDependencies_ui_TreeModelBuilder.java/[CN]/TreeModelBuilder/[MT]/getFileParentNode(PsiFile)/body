{
  VirtualFile vFile=file.getVirtualFile();
  LOG.assertTrue(vFile != null);
  final VirtualFile containingDirectory=vFile.getParent();
  LOG.assertTrue(containingDirectory != null);
  if (!myGroupByFiles) {
    PsiPackage aPackage=null;
    if (file instanceof PsiJavaFile) {
      aPackage=getFilePackage((PsiJavaFile)file);
    }
 else {
      final String packageName=myFileIndex.getPackageNameByDirectory(containingDirectory);
      if (packageName != null) {
        aPackage=myPsiManager.findPackage(packageName);
      }
    }
    if (aPackage != null) {
      if (myFileIndex.isInLibrarySource(vFile) || myFileIndex.isInLibraryClasses(vFile)) {
        return getLibraryDirNode(aPackage,getLibraryForFile(file));
      }
 else {
        return getModuleDirNode(aPackage,myFileIndex.getModuleForFile(vFile),getFileScopeType(vFile));
      }
    }
    return getModuleNode(myFileIndex.getModuleForFile(vFile),getFileScopeType(vFile));
  }
 else {
    return getModuleDirNode(file.getContainingDirectory(),myFileIndex.getModuleForFile(vFile),getFileScopeType(vFile),null);
  }
}
