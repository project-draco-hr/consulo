{
  final Set<PackageDependenciesNode> result=new HashSet<PackageDependenciesNode>();
  for (int i=0; i < parent.getChildCount(); i++) {
    final TreeNode treeNode=parent.getChildAt(i);
    if (treeNode instanceof PackageDependenciesNode) {
      final PackageDependenciesNode node=(PackageDependenciesNode)treeNode;
      if (element instanceof PsiDirectory && node.getPsiElement() == element) {
        return new PackageDependenciesNode[]{node};
      }
      if (element instanceof PsiFile) {
        PsiFile psiFile=null;
        if (node instanceof ClassNode) {
          psiFile=((ClassNode)node).getContainingFile();
        }
 else         if (node instanceof FileNode) {
          psiFile=((PsiFile)node.getPsiElement());
        }
        if (psiFile != null && psiFile.getVirtualFile() == ((PsiFile)element).getVirtualFile()) {
          result.add(node);
        }
      }
    }
  }
  return result.isEmpty() ? null : result.toArray(new PackageDependenciesNode[result.size()]);
}
