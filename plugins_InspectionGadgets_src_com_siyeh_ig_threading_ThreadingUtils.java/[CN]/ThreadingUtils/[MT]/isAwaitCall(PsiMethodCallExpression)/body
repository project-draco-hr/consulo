{
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final String methodName=methodExpression.getReferenceName();
  if (!"await".equals(methodName) && !"awaitUntil".equals(methodName) && !"awaitUninterruptibly".equals(methodName)&& !"awaitNanos".equals(methodName)) {
    return false;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return false;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null) {
    return false;
  }
  return ClassUtils.isSubclass(containingClass,"java.util.concurrent.locks.Condition");
}
