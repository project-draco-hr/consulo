{
  try {
    myLock.writeLock().lock();
    final List children=element.getChildren(MACRO_ELEMENT);
    for (    Object aChildren : children) {
      Element macro=(Element)aChildren;
      final String name=macro.getAttributeValue(NAME_ATTR);
      final String value=macro.getAttributeValue(VALUE_ATTR);
      if (name == null || value == null) {
        throw new InvalidDataException();
      }
      myMacros.put(name,value);
    }
    final List ignoredChildren=element.getChildren(IGNORED_MACRO_ELEMENT);
    for (    final Object child : ignoredChildren) {
      final Element macroElement=(Element)child;
      final String ignoredName=macroElement.getAttributeValue(NAME_ATTR);
      if (ignoredName != null && ignoredName.length() > 0 && !myIgnoredMacros.contains(ignoredName)) {
        myIgnoredMacros.add(ignoredName);
      }
    }
  }
  finally {
    myLock.writeLock().unlock();
  }
}
