{
  myProject=project;
  myActionManager=actionManager;
  myFocusManager=focusManager != null ? focusManager : PassThroughtIdeFocusManager.getInstance();
  setOpaque(true);
  setPaintBorder(-1,-1,-1,-1);
  myParent=parent;
  if (myParent != null) {
    Disposer.register(myParent,this);
  }
  myNavigationActions=new DefaultActionGroup();
  if (myActionManager != null) {
    myNextAction=new SelectNextAction(this,myActionManager);
    myPrevAction=new SelectPreviousAction(this,myActionManager);
    myNavigationActions.add(myNextAction);
    myNavigationActions.add(myPrevAction);
  }
  setUiDecorator(null);
  myPopupListener=new PopupMenuListener(){
    public void popupMenuWillBecomeVisible(    final PopupMenuEvent e){
    }
    public void popupMenuWillBecomeInvisible(    final PopupMenuEvent e){
      disposePopupListener();
    }
    public void popupMenuCanceled(    final PopupMenuEvent e){
      disposePopupListener();
    }
  }
;
  addMouseListener(new MouseAdapter(){
    public void mousePressed(    final MouseEvent e){
      if (mySingleRowLayout.myLastSingRowLayout != null && mySingleRowLayout.myLastSingRowLayout.moreRect != null && mySingleRowLayout.myLastSingRowLayout.moreRect.contains(e.getPoint())) {
        showMorePopup(e);
      }
    }
  }
);
  myAnimator=new Animator("JBTabs Attractions",2,500,true,0,-1){
    public void paintNow(    final float frame,    final float totalFrames,    final float cycle){
      repaintAttractions();
    }
  }
;
  myAnimator.setTakInitialDelay(false);
  setFocusCycleRoot(true);
  setFocusTraversalPolicy(new LayoutFocusTraversalPolicy(){
    public Component getDefaultComponent(    final Container aContainer){
      return getToFocus();
    }
  }
);
  add(mySingleRowLayout.myLeftGhost);
  add(mySingleRowLayout.myRightGhost);
}
