{
  if (mySelectedInfo != null && mySelectedInfo.equals(info))   return new ActionCallback.Done();
  if (myRequestFocusOnLastFocusedComponent && mySelectedInfo != null) {
    if (isMyChildIsFocusedNow()) {
      mySelectedInfo.setLastFocusOwner(getFocusOwner());
    }
  }
  TabInfo oldInfo=mySelectedInfo;
  mySelectedInfo=info;
  final TabInfo newInfo=getSelectedInfo();
  final Component deferredRemove=updateContainer(false,true);
  if (oldInfo != newInfo) {
    for (    TabsListener eachListener : myTabListeners) {
      if (eachListener != null) {
        eachListener.selectionChanged(oldInfo,newInfo);
      }
    }
  }
  if (requestFocus) {
    final JComponent toFocus=getToFocus();
    if (myProject != null && toFocus != null) {
      final ActionCallback result=new ActionCallback();
      myFocusManager.requestFocus(new ActionCallback.Runnable(){
        public ActionCallback run(){
          toFocus.requestFocus();
          return new ActionCallback.Done();
        }
      }
,true).doWhenProcessed(new Runnable(){
        public void run(){
          removeDeferred(deferredRemove).notifyWhenDone(result);
        }
      }
);
      return result;
    }
 else {
      requestFocus();
      return removeDeferred(deferredRemove);
    }
  }
 else {
    return removeDeferred(deferredRemove);
  }
}
