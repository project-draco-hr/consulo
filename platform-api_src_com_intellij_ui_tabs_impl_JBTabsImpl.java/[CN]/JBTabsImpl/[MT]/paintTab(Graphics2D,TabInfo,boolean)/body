{
  int tabIndex=myVisibleInfos.indexOf(each);
  final int arc=getArcSize();
  final Color topBlickColor=getTopBlickColor();
  final Color rightBlockColor=getRightBlockColor();
  final Color boundsColor=getBoundsColor();
  final TabInfo selected=getSelectedInfo();
  final int selectionTabVShift=getSelectionTabVShift();
  final TabLabel eachLabel=myInfo2Label.get(each);
  if (eachLabel.getBounds().width == 0)   return;
  final TabInfo prev=myLastLayoutPass.getPreviousFor(myVisibleInfos.get(tabIndex));
  final TabInfo next=myLastLayoutPass.getNextFor(myVisibleInfos.get(tabIndex));
  final Rectangle eachBounds=eachLabel.getBounds();
  final GeneralPath path=new GeneralPath();
  boolean firstShowing=prev == null;
  if (!firstShowing && !leftGhostExists) {
    firstShowing=myInfo2Label.get(prev).getBounds().width == 0;
  }
  boolean lastShowing=next == null;
  if (!lastShowing) {
    lastShowing=myInfo2Label.get(next).getBounds().width == 0;
  }
  boolean leftFromSelection=selected != null && tabIndex == myVisibleInfos.indexOf(selected) - 1;
  int leftX=firstShowing ? eachBounds.x : eachBounds.x - arc - 1;
  int topY=eachBounds.y + selectionTabVShift;
  int rigthX=!lastShowing && leftFromSelection ? (int)eachBounds.getMaxX() + arc + 1 : (int)eachBounds.getMaxX();
  int bottomY=(int)eachBounds.getMaxY() + 1;
  path.moveTo(leftX,bottomY);
  path.lineTo(leftX,topY + arc);
  path.quadTo(leftX,topY,leftX + arc,topY);
  path.lineTo(rigthX - arc,topY);
  path.quadTo(rigthX,topY,rigthX,topY + arc);
  path.lineTo(rigthX,bottomY);
  if (!isSingleRow()) {
    final TablePassInfo info=myTableLayout.myLastTableLayout;
    if (!info.isInSelectionRow(each)) {
      path.lineTo(rigthX,bottomY + getArcSize());
      path.lineTo(leftX,bottomY + getArcSize());
      path.lineTo(leftX,bottomY);
    }
  }
  path.closePath();
  g2d.setColor(getBackground());
  g2d.fill(path);
  g2d.setColor(topBlickColor);
  g2d.drawLine(leftX + arc,topY + 1,rigthX - arc,topY + 1);
  g2d.setColor(rightBlockColor);
  g2d.drawLine(rigthX - 1,topY + arc - 1,rigthX - 1,bottomY);
  g2d.setColor(boundsColor);
  g2d.draw(path);
}
