{
  try {
    final Max max=computeMaxSize();
    myHeaderFitSize=new Dimension(getSize().width,myHorizontalSide ? Math.max(max.myLabel.height,max.myToolbar.height) : max.myLabel.height);
    final Collection<TabLabel> labels=myInfo2Label.values();
    for (Iterator<TabLabel> iterator=labels.iterator(); iterator.hasNext(); ) {
      TabLabel each=iterator.next();
      each.setTabActionsAutoHide(myTabLabelActionsAutoHide);
    }
    if (isSingleRow()) {
      myLastLayoutPass=mySingleRowLayout.layoutSingleRow();
      myTableLayout.myLastTableLayout=null;
    }
 else {
      myLastLayoutPass=myTableLayout.layoutTable();
      mySingleRowLayout.myLastSingRowLayout=null;
    }
    if (isStealthModeEffective()) {
      final TabLabel label=myInfo2Label.get(getSelectedInfo());
      final Rectangle bounds=label.getBounds();
      final Insets insets=getLayoutInsets();
      layout(label,bounds.x,bounds.y,getWidth() - insets.right - insets.left,bounds.height);
    }
    myTabActionsAutoHideListener.processMouseOver();
  }
  finally {
    myForcedRelayout=false;
  }
  applyResetComponents();
}
