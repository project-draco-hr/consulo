{
  super(new BorderLayout());
  final Splitter splitter=new Splitter(false,0.5f);
  splitter.setShowDividerControls(true);
  add(splitter,BorderLayout.CENTER);
  myList=new JBList();
  final Color borderColor=UIUtil.getBorderColor();
  myList.setBorder(BorderFactory.createLineBorder(borderColor));
  myConfigureRootPanel=new JPanel();
  myConfigureRootPanel.setBorder(BorderFactory.createLineBorder(borderColor));
  splitter.setFirstComponent(myList);
  splitter.setSecondComponent(myConfigureRootPanel);
  final CardLayout layout=new CardLayout();
  myConfigureRootPanel.setLayout(layout);
  final DefaultListModel listModel=new DefaultListModel();
  layout.addLayoutComponent(new JPanel(),EMPTY);
  int minimumRightSize=320;
  for (  FilePath root : rootToPanel.keySet()) {
    final JPanel panel=rootToPanel.get(root).getPanel();
    myConfigureRootPanel.add(panel,root.getPath());
    if (panel.getMinimumSize().width > 0) {
      minimumRightSize=Math.max(minimumRightSize,panel.getPreferredSize().width);
    }
    listModel.addElement(root);
  }
  myConfigureRootPanel.revalidate();
  myList.setModel(listModel);
  myList.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setCellRenderer(new ColoredListCellRenderer(){
    protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value instanceof FilePath) {
        final FilePath path=((FilePath)value);
        if (path.getVirtualFile() != null) {
          append(VcsPathPresenter.getInstance(project).getPresentableRelativePathFor(path.getVirtualFile()),SimpleTextAttributes.REGULAR_ATTRIBUTES);
        }
 else {
          append(VcsPathPresenter.getInstance(project).getPresentableRelativePathFor(path.getVirtualFileParent()) + File.separator + path.getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
        }
      }
    }
  }
);
  myList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      final FilePath root=((FilePath)myList.getSelectedValue());
      if (root != null) {
        layout.show(myConfigureRootPanel,root.getPath());
      }
 else {
        layout.show(myConfigureRootPanel,EMPTY);
      }
    }
  }
);
  myList.setSelectedIndex(0);
  myList.requestFocus();
  final int finalMinimumRightSize=minimumRightSize;
  new AdjustComponentWhenShown(){
    @Override protected boolean init(){
      if (getWidth() < finalMinimumRightSize * 2) {
        final int left=getWidth() - finalMinimumRightSize;
        final float newProportion;
        if (left < 0) {
          newProportion=0.2f;
        }
 else {
          newProportion=((float)left / getWidth());
        }
        splitter.setProportion(newProportion);
      }
      return true;
    }
    @Override protected boolean canExecute(){
      return getWidth() > 0;
    }
  }
.install(splitter);
}
