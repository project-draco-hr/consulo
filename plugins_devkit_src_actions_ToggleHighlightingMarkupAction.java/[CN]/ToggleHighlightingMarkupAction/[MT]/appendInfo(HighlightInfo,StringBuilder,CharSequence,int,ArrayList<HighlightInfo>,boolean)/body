{
  if (info == null || !infos.isEmpty() && infos.get(infos.size() - 1).getEndOffset() < info.getStartOffset()) {
    if (infos.size() == 1) {
      HighlightInfo cur=infos.remove(0);
      sb.append(sequence.subSequence(offset,cur.getStartOffset()));
      appendTag(sb,cur,true,compact);
      sb.append(sequence.subSequence(cur.getStartOffset(),cur.getEndOffset()));
      appendTag(sb,cur,false,compact);
      offset=cur.getEndOffset();
    }
 else {
      LinkedList<HighlightInfo> stack=new LinkedList<HighlightInfo>();
      for (      HighlightInfo cur : infos) {
        offset=processStack(stack,sb,sequence,offset,cur.getStartOffset(),compact);
        sb.append(sequence.subSequence(offset,cur.getStartOffset()));
        offset=cur.getStartOffset();
        appendTag(sb,cur,true,compact);
        stack.addLast(cur);
      }
      offset=processStack(stack,sb,sequence,offset,sequence.length(),compact);
      infos.clear();
    }
  }
  if (info != null) {
    boolean found=false;
    for (    HighlightInfo cur : infos) {
      if (cur.getStartOffset() == info.getStartOffset() && cur.getEndOffset() == info.getEndOffset() && cur.severity == info.severity) {
        found=true;
        break;
      }
    }
    if (!found)     infos.add(info);
  }
  return offset;
}
