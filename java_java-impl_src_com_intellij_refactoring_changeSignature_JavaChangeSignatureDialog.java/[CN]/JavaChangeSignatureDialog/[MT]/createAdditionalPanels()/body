{
  myExceptionsTableModel=new ExceptionsTableModel(myMethod.getMethod().getThrowsList());
  myExceptionsTableModel.setTypeInfos(myMethod.getMethod());
  JBTable exceptionsTable=new JBTable(myExceptionsTableModel);
  exceptionsTable.getColumnModel().getColumn(0).setCellRenderer(new CodeFragmentTableCellRenderer(myProject));
  exceptionsTable.getColumnModel().getColumn(0).setCellEditor(new JavaCodeFragmentTableCellEditor(myProject));
  JPanel panel=new JPanel(new BorderLayout());
  JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(exceptionsTable);
  JPanel tablePanel=new JPanel(new BorderLayout());
  tablePanel.add(scrollPane,BorderLayout.CENTER);
  tablePanel.setBorder(BorderFactory.createEmptyBorder(4,4,4,4));
  panel.add(tablePanel,BorderLayout.CENTER);
  exceptionsTable.setPreferredScrollableViewportSize(new Dimension(450,exceptionsTable.getRowHeight() * 8));
  exceptionsTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  exceptionsTable.getSelectionModel().setSelectionInterval(0,0);
  exceptionsTable.setSurrendersFocusOnKeystroke(true);
  final JPanel buttonsPanel=EditableRowTable.createButtonsTable(exceptionsTable,myExceptionsTableModel,false,true);
  panel.add(buttonsPanel,BorderLayout.EAST);
  myExceptionsTableModel.addTableModelListener(new TableModelListener(){
    public void tableChanged(    TableModelEvent e){
      JavaChangeSignatureDialog.this.updateSignature();
    }
  }
);
  final ArrayList<Pair<String,JPanel>> result=new ArrayList<Pair<String,JPanel>>();
  result.add(Pair.create("Exceptions",panel));
  return result;
}
