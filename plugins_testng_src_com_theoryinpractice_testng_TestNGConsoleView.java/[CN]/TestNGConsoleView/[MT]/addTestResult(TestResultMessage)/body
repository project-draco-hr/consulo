{
  List<Chunk> list=null;
  if (result.getResult() == MessageHelper.TEST_STARTED) {
    mark();
  }
 else {
    if (result.getStackTrace() != null && result.getStackTrace().length() > 10) {
      String[] lines=result.getStackTrace().split("\n");
      StringBuilder builder=new StringBuilder();
      if (lines.length > 0) {
        int i=lines.length - 1;
        while (i >= 0) {
          if (lines[i].length() > 4 && (lines[i].startsWith("org.testng.",4) || lines[i].startsWith("sun.reflect.DelegatingMethodAccessorImpl",4) || lines[i].startsWith("sun.reflect.NativeMethodAccessorImpl",4)|| lines[i].startsWith("java.lang.reflect.Method",4)|| lines[i].startsWith("com.intellij.rt.execution.application.AppMain",4))) {
          }
 else {
            break;
          }
          i--;
        }
        for (int j=0; j <= i; j++) {
          builder.append(lines[j]);
          builder.append('\n');
        }
      }
      print(builder.toString(),ConsoleViewContentType.ERROR_OUTPUT);
    }
    list=getChunksSinceMark();
  }
  testNGResults.addTestResult(result,list);
}
