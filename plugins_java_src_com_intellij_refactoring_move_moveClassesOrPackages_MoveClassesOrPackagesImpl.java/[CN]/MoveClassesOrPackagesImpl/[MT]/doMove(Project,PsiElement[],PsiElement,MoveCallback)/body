{
  if (!CommonRefactoringUtil.checkReadOnlyStatusRecursively(project,Arrays.asList(adjustedElements),true)) {
    return;
  }
  final String initialTargetPackageName=getInitialTargetPackageName(initialTargetElement,adjustedElements);
  final PsiDirectory initialTargetDirectory=getInitialTargetDirectory(initialTargetElement,adjustedElements);
  final boolean isTargetDirectoryFixed=initialTargetDirectory == null;
  boolean searchTextOccurences=false;
  for (int i=0; i < adjustedElements.length && !searchTextOccurences; i++) {
    PsiElement psiElement=adjustedElements[i];
    searchTextOccurences=TextOccurrencesUtil.isSearchTextOccurencesEnabled(psiElement);
  }
  final MoveClassesOrPackagesDialog moveDialog=new MoveClassesOrPackagesDialog(project,searchTextOccurences,adjustedElements,initialTargetElement,moveCallback);
  boolean searchInComments=JavaRefactoringSettings.getInstance().MOVE_SEARCH_IN_COMMENTS;
  boolean searchForTextOccurences=JavaRefactoringSettings.getInstance().MOVE_SEARCH_FOR_TEXT;
  moveDialog.setData(adjustedElements,initialTargetPackageName,initialTargetDirectory,isTargetDirectoryFixed,initialTargetElement == null,searchInComments,searchForTextOccurences,HelpID.getMoveHelpID(adjustedElements[0]));
  moveDialog.show();
}
