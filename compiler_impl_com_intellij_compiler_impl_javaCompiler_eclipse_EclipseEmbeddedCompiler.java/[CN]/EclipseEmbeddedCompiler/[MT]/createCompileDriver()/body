{
  URL jarUrl=new File(EclipseCompiler.PATH_TO_COMPILER_JAR).toURI().toURL();
  final ClassLoader classLoader=PluginManager.class.getClassLoader();
  final Class<? extends ClassLoader> pluginClass=classLoader.getClass();
  if (!pluginClass.getName().equals(IdeaClassLoader.class.getName())) {
    throw new Exception();
  }
  ArrayList<URL> urls=null;
  try {
    @NonNls final String getUrlsMethod="getUrls";
    urls=new ArrayList<URL>((ArrayList<URL>)pluginClass.getDeclaredMethod(getUrlsMethod).invoke(classLoader));
  }
 catch (  IllegalAccessException e) {
    LOG.error(e);
  }
catch (  InvocationTargetException e) {
    LOG.error(e);
  }
catch (  NoSuchMethodException e) {
    LOG.error(e);
  }
  urls.add(jarUrl);
  ClassLoader myclassLoader=new MyClassLoader(urls.toArray(new URL[urls.size()]),classLoader);
  try {
    String name=EclipseCompilerDriver.class.getName();
    Class<?> aClass=myclassLoader.loadClass(name);
    myEclipseCompilerDriver=(IEclipseCompilerDriver)aClass.newInstance();
  }
 catch (  InstantiationException e) {
    LOG.error(e);
  }
catch (  IllegalAccessException e) {
    LOG.error(e);
  }
catch (  ClassNotFoundException e) {
    LOG.error(e);
  }
}
