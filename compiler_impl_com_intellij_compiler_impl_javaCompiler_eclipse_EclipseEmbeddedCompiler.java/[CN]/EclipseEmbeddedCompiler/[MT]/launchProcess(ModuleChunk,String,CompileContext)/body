{
  @NonNls final ArrayList<String> commandLine=new ArrayList<String>();
  final IOException[] ex=new IOException[]{null};
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      try {
        myEclipseExternalCompiler.addCommandLineOptions(commandLine,chunk,outputDir,EclipseEmbeddedCompilerSettings.getInstance(myProject),false,false);
      }
 catch (      IOException e) {
        ex[0]=e;
      }
    }
  }
);
  if (ex[0] != null) {
    throw ex[0];
  }
  Process process=new Process(){
    public OutputStream getOutputStream(){
      throw new UnsupportedOperationException();
    }
    public InputStream getInputStream(){
      return null;
    }
    public InputStream getErrorStream(){
      return null;
    }
    public void destroy(){
    }
    public int waitFor(){
      try {
        commandLine.remove("-verbose");
        String[] finalCmds=commandLine.toArray(new String[commandLine.size()]);
        myEclipseCompilerDriver.parseCommandLineAndCompile(finalCmds,compileContext);
        myExitCode=0;
        return myExitCode;
      }
 catch (      Exception e) {
        LOG.error(e);
        myExitCode=-1;
        return -1;
      }
    }
    public int exitValue(){
      return myExitCode;
    }
  }
;
  return process;
}
