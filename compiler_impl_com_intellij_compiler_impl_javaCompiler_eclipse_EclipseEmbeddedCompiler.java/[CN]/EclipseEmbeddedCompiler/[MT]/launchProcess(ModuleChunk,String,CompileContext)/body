{
  final String[] commands=myEclipseExternalCompiler.createStartupCommand(chunk,compileContext,outputDir);
  final String[] modifiedCmds=JavacEmbeddedCompiler.createCommandsForEmbeddedCall(commands,EclipseCompiler.getCompilerClass());
  Process process=new Process(){
    public OutputStream getOutputStream(){
      throw new UnsupportedOperationException();
    }
    public InputStream getInputStream(){
      return null;
    }
    public InputStream getErrorStream(){
      return null;
    }
    public void destroy(){
    }
    public int waitFor(){
      try {
        List<String> cmds=new ArrayList<String>(modifiedCmds.length);
        for (        @NonNls String cmd : modifiedCmds) {
          if (cmd.equals("-verbose"))           continue;
          cmds.add(cmd);
        }
        String[] finalCmds=cmds.toArray(new String[cmds.size()]);
        myEclipseCompilerDriver.parseCommandLineAndCompile(finalCmds);
        myExitCode=0;
        return myExitCode;
      }
 catch (      Exception e) {
        LOG.error(e);
        myExitCode=-1;
        return -1;
      }
    }
    public int exitValue(){
      return myExitCode;
    }
  }
;
  return process;
}
