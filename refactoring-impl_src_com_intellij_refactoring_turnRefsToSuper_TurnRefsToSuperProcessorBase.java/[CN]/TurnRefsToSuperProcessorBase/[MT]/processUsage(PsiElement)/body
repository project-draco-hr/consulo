{
  if (ref instanceof PsiReferenceExpression) {
    final PsiElement parent=ref.getParent();
    if (parent instanceof PsiReferenceExpression) {
      final PsiReferenceExpression refExpr=(PsiReferenceExpression)parent;
      final PsiElement refMember=refExpr.resolve();
      if (!isInSuper(refMember)) {
        markNode(ref);
      }
    }
    return;
  }
  PsiElement parent=ref.getParent();
  if (parent instanceof PsiTypeElement) {
    PsiElement pparent=parent.getParent();
    while (pparent instanceof PsiTypeElement) {
      addLink(pparent,parent);
      addLink(parent,pparent);
      parent=pparent;
      pparent=parent.getParent();
    }
    final PsiTypeElement type=(PsiTypeElement)parent;
    addLink(type,ref);
    addLink(ref,type);
    if (pparent instanceof PsiVariable) {
      processVariableType((PsiVariable)pparent);
    }
 else     if (pparent instanceof PsiMethod) {
      processMethodReturnType((PsiMethod)pparent);
    }
 else     if (pparent instanceof PsiTypeCastExpression) {
      addLink(pparent,type);
      addLink(type,pparent);
    }
 else     if (pparent instanceof PsiReferenceParameterList) {
      markNode(ref);
    }
  }
 else   if (parent instanceof PsiNewExpression) {
    PsiNewExpression newExpression=(PsiNewExpression)parent;
    if (newExpression.getType() instanceof PsiArrayType) {
      addLink(newExpression,ref);
      addLink(ref,newExpression);
      PsiArrayInitializerExpression initializer=newExpression.getArrayInitializer();
      if (initializer != null) {
        addLink(ref,initializer);
      }
      checkToArray(ref,newExpression);
    }
 else {
      markNode(ref);
    }
  }
 else {
    markNode(ref);
  }
}
