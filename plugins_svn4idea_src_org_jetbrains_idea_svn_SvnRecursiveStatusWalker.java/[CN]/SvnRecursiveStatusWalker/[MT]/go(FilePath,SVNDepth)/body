{
  final MyItem root=new MyItem(myProject,rootPath,depth,myPartner.createStatusClient(),true);
  myQueue.add(root);
  while (!myQueue.isEmpty()) {
    myPartner.checkCanceled();
    final MyItem item=myQueue.removeFirst();
    final FilePath path=item.getPath();
    final File ioFile=path.getIOFile();
    if (path.isDirectory()) {
      myHandler.setCurrentItem(item);
      try {
        item.getClient(ioFile).doStatus(ioFile,SVNRevision.WORKING,item.getDepth(),false,false,true,false,myHandler,null);
        myHandler.checkIfCopyRootWasReported();
      }
 catch (      SVNException e) {
        if (e.getErrorMessage().getErrorCode() == SVNErrorCode.WC_NOT_DIRECTORY) {
          final VirtualFile virtualFile=path.getVirtualFile();
          if (virtualFile != null) {
            if (myPartner.isExcluded(virtualFile))             return;
            myReceiver.processUnversioned(virtualFile);
            processRecursively(virtualFile,item.getDepth());
          }
        }
 else {
          throw e;
        }
      }
    }
 else {
      final SVNStatus status=item.getClient().doStatus(ioFile,false,false);
      myReceiver.process(path,status);
    }
  }
}
