{
  super.visitPolyadicExpression(expression);
  final IElementType tokenType=expression.getOperationTokenType();
  if (!JavaTokenType.DIV.equals(tokenType) && !JavaTokenType.PERC.equals(tokenType)) {
    return;
  }
  final PsiExpression[] operands=expression.getOperands();
  for (int i=1; i < operands.length; i++) {
    final PsiExpression operand=operands[i];
    if (isZero(operand)) {
      registerError(operand);
      return;
    }
  }
}
