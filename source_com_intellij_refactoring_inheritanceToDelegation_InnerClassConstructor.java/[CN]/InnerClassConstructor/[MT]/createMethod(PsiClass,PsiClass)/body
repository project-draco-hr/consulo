{
  final PsiElementFactory factory=outerClass.getManager().getElementFactory();
  final PsiMethod constructor=factory.createConstructor();
  constructor.getNameIdentifier().replace(innerClass.getNameIdentifier());
  final PsiParameterList parameterList=myMethod.getParameterList();
  constructor.getParameterList().replace(parameterList);
  PsiExpressionStatement superCallStatement=(PsiExpressionStatement)factory.createStatementFromText("super();",null);
  PsiExpressionList arguments=((PsiMethodCallExpression)superCallStatement.getExpression()).getArgumentList();
  PsiParameter[] parameters=parameterList.getParameters();
  for (int i=0; i < parameters.length; i++) {
    arguments.add(factory.createExpressionFromText(parameters[i].getName(),null));
  }
  constructor.getBody().add(superCallStatement);
  innerClass.add(constructor);
}
