{
  final int lineNumber=(getHighlighter().getDocument().getLineNumber(getHighlighter().getStartOffset()) + 1);
  if (isValid()) {
    final String className=getClassName();
    final boolean hasClassInfo=className != null && className.length() > 0;
    final boolean hasMethodInfo=myMethodName != null && myMethodName.length() > 0;
    if (hasClassInfo || hasMethodInfo) {
      final StringBuffer info=new StringBuffer();
      if (hasClassInfo) {
        info.append(className);
      }
      if (hasMethodInfo) {
        if (hasClassInfo) {
          info.append(".");
        }
        info.append(myMethodName);
      }
      return DebuggerBundle.message("line.breakpoint.display.name.with.class.or.method",lineNumber,info.toString());
    }
    return DebuggerBundle.message("line.breakpoint.display.name",lineNumber);
  }
  return DebuggerBundle.message("status.breakpoint.invalid");
}
