{
  final boolean[] canAdd=new boolean[]{false};
  PsiDocumentManager.getInstance(project).commitDocument(document);
  DebuggerUtilsEx.iterateLine(project,document,lineIndex,new DebuggerUtilsEx.ElementVisitor(){
    public boolean acceptElement(    PsiElement element){
      if (!(element instanceof PsiWhiteSpace || element instanceof PsiComment)) {
        PsiElement child=element;
        while (element != null) {
          LOG.assertTrue(element.getTextOffset() != -1,element.getContainingFile().getName());
          if (document.getLineNumber(element.getTextOffset()) != lineIndex) {
            break;
          }
          child=element;
          element=element.getParent();
        }
        if (child instanceof PsiMethod && child.getTextRange().getEndOffset() >= document.getLineEndOffset(lineIndex)) {
          PsiCodeBlock body=((PsiMethod)child).getBody();
          if (body == null) {
            canAdd[0]=false;
          }
 else {
            PsiStatement[] statements=body.getStatements();
            canAdd[0]=statements.length > 0 && document.getLineNumber(statements[0].getTextOffset()) == lineIndex;
          }
        }
 else {
          canAdd[0]=true;
        }
        return true;
      }
      return false;
    }
  }
);
  return canAdd[0];
}
