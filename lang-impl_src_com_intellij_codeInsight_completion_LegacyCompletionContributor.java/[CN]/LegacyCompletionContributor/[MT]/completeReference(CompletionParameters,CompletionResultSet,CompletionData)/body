{
  final Set<LookupElement> lookupSet=new LinkedHashSet<LookupElement>();
  final int startOffset=parameters.getOffset();
  final PsiElement insertedElement=parameters.getPosition();
  final PsiReference ref=ApplicationManager.getApplication().runReadAction(new Computable<PsiReference>(){
    public PsiReference compute(){
      return insertedElement.getContainingFile().findReferenceAt(startOffset);
    }
  }
);
  if (ref instanceof PsiMultiReference) {
    for (    final PsiReference reference : completionData.getReferences((PsiMultiReference)ref)) {
      int offsetInElement=startOffset - reference.getElement().getTextRange().getStartOffset();
      final CompletionResultSet resultSet=result.withPrefixMatcher(reference.getElement().getText().substring(reference.getRangeInElement().getStartOffset(),offsetInElement));
      completionData.completeReference(reference,lookupSet,insertedElement,parameters.getOriginalFile(),startOffset);
      for (      final LookupElement item : lookupSet) {
        resultSet.addElement(item);
      }
      lookupSet.clear();
    }
  }
 else   if (ref != null) {
    completionData.completeReference(ref,lookupSet,insertedElement,parameters.getOriginalFile(),startOffset);
  }
  for (  final LookupElement item : lookupSet) {
    result.addElement(item);
  }
}
