{
  final Set<File> moduleContentRoots=contentRootToModules.keySet();
  for (  File contentRoot : moduleContentRoots) {
    final ModuleDescriptor checkedModule=contentRootToModules.get(contentRoot);
    myProgress.setText2("Building library dependencies for module " + checkedModule.getName());
    buildJarDependencies(checkedModule);
    myProgress.setText2("Building module dependencies for module " + checkedModule.getName());
    for (    File aContentRoot : moduleContentRoots) {
      final ModuleDescriptor aModule=contentRootToModules.get(aContentRoot);
      if (checkedModule.equals(aModule)) {
        continue;
      }
      final Set<File> aModuleRoots=aModule.getSourceRoots();
      checkModules:       for (      File srcRoot : checkedModule.getSourceRoots()) {
        final Set<String> referencedBySourceRoot=mySourceRootToReferencedPackagesMap.get(srcRoot);
        for (        File aSourceRoot : aModuleRoots) {
          if (ContainerUtil.intersects(referencedBySourceRoot,mySourceRootToPackagesMap.get(aSourceRoot))) {
            checkedModule.addDependencyOn(aModule);
            break checkModules;
          }
        }
      }
    }
  }
}
