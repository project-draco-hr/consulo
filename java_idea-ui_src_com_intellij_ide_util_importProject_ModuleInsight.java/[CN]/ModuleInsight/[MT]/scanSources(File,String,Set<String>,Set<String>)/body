{
  if (myIgnoredNames.contains(fromRoot.getName())) {
    return;
  }
  final File[] files=fromRoot.listFiles();
  if (files != null) {
    myProgress.checkCanceled();
    boolean includeParentName=false;
    for (    File file : files) {
      if (file.isDirectory()) {
        final String subPackageName;
        final StringBuilder builder=StringBuilderSpinAllocator.alloc();
        try {
          builder.append(parentPackageName);
          if (builder.length() > 0) {
            builder.append(".");
          }
          builder.append(file.getName());
          subPackageName=builder.toString();
        }
  finally {
          StringBuilderSpinAllocator.dispose(builder);
        }
        scanSources(file,subPackageName,usedPackages,selfPackages);
      }
 else {
        if (StringUtil.endsWithIgnoreCase(file.getName(),".java")) {
          includeParentName=true;
          scanJavaFile(file,usedPackages);
        }
      }
    }
    if (includeParentName) {
      selfPackages.add(myInterner.intern(parentPackageName));
    }
  }
}
