{
  final HashMap<PsiTypeParameter,PsiTypeParameter> result=new HashMap<PsiTypeParameter,PsiTypeParameter>();
  final Iterator<PsiTypeParameter> iterator=PsiUtil.typeParametersIterator(targetClass);
  while (iterator.hasNext()) {
    final PsiTypeParameter classTypeParameter=iterator.next();
    final PsiType substitution=substitutor.substitute(classTypeParameter);
    if (!(substitution instanceof PsiClassType))     return null;
    final PsiClass aClass=((PsiClassType)substitution).resolve();
    if (!(aClass instanceof PsiTypeParameter))     return null;
    final PsiTypeParameter methodTypeParameter=((PsiTypeParameter)aClass);
    if (methodTypeParameter.getOwner() != containingElement)     return null;
    if (result.keySet().contains(methodTypeParameter))     return null;
    result.put(methodTypeParameter,classTypeParameter);
  }
  return result;
}
