{
  final DataContext dataContext=e.getDataContext();
  final Project project=(Project)dataContext.getData(DataConstantsEx.PROJECT);
  final Module[] modules=(Module[])dataContext.getData(DataConstantsEx.MODULE_CONTEXT_ARRAY);
  String originalModuleGroup=null;
  boolean allModulesInSameGroup=true;
  for (int i=0; i < modules.length; i++) {
    final Module child=modules[i];
    String group=ModuleManager.getInstance(project).getModuleGroup(child);
    if (originalModuleGroup == null) {
      originalModuleGroup=group;
    }
    if (!Comparing.strEqual(group,originalModuleGroup)) {
      allModulesInSameGroup=false;
    }
  }
  List<AnAction> result=new ArrayList<AnAction>();
  Module[] allModules=ModuleManager.getInstance(project).getModules();
  Set<String> groups=new HashSet<String>();
  for (int i=0; i < allModules.length; i++) {
    final Module child=allModules[i];
    String group=ModuleManager.getInstance(project).getModuleGroup(child);
    if (group != null && !group.equals(originalModuleGroup) && groups.add(group)) {
      result.add(new MoveModulesToGroupAction(modules,group,group));
    }
  }
  result.add(Separator.getInstance());
  if (allModulesInSameGroup && originalModuleGroup != null) {
    result.add(new MoveModulesToGroupAction(modules,"","Outside Any Group"));
  }
  result.add(new MoveModulesToGroupAction(modules,null,"New Group..."));
  return result.toArray(new AnAction[result.size()]);
}
