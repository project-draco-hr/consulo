{
  AnAction hideBranchesAction=new DumbAwareAction("Collapse linear branches","Collapse linear branches",VcsLogIcons.CollapseBranches){
    @Override public void actionPerformed(    AnActionEvent e){
      myUI.hideAll();
    }
  }
;
  AnAction showBranchesAction=new DumbAwareAction("Expand all branches","Expand all branches",VcsLogIcons.ExpandBranches){
    @Override public void actionPerformed(    AnActionEvent e){
      myUI.showAll();
    }
  }
;
  RefreshAction refreshAction=new RefreshAction("Refresh","Refresh",AllIcons.Actions.Refresh){
    @Override public void actionPerformed(    AnActionEvent e){
      myLogDataHolder.refreshCompletely();
    }
    @Override public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(true);
    }
  }
;
  AnAction showFullPatchAction=new ToggleAction("Show long edges","Show long branch edges even if commits are invisible in the current view.",VcsLogIcons.ShowHideLongEdges){
    @Override public boolean isSelected(    AnActionEvent e){
      return !myUI.areLongEdgesHidden();
    }
    @Override public void setSelected(    AnActionEvent e,    boolean state){
      myUI.setLongEdgeVisibility(state);
    }
  }
;
  ToggleAction showDetailsAction=new ToggleAction("Show Details","Display details panel",AllIcons.Actions.Preview){
    @Override public boolean isSelected(    AnActionEvent e){
      return !myProject.isDisposed() && myUiProperties.isShowDetails();
    }
    @Override public void setSelected(    AnActionEvent e,    boolean state){
      setupDetailsSplitter(state);
      if (!myProject.isDisposed()) {
        myUiProperties.setShowDetails(state);
      }
    }
  }
;
  refreshAction.registerShortcutOn(this);
  DefaultActionGroup toolbarGroup=new DefaultActionGroup(hideBranchesAction,showBranchesAction,showFullPatchAction,refreshAction,showDetailsAction);
  toolbarGroup.add(ActionManager.getInstance().getAction(VcsLogUI.TOOLBAR_ACTION_GROUP));
  DefaultActionGroup mainGroup=new DefaultActionGroup();
  mainGroup.add(myFilterUi.getFilterActionComponents());
  mainGroup.addSeparator();
  mainGroup.add(toolbarGroup);
  return ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,mainGroup,true).getComponent();
}
