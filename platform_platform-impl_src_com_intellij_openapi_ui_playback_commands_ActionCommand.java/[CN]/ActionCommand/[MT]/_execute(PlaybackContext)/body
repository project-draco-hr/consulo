{
  final String actionName=getText().substring(PREFIX.length()).trim();
  final AnAction action=ActionManager.getInstance().getAction(actionName);
  if (action == null) {
    dumpError(context.getCallback(),"Unknown action: " + actionName);
    return new ActionCallback.Rejected();
  }
  if (!context.isUseDirectActionCall()) {
    final Shortcut[] sc=KeymapManager.getInstance().getActiveKeymap().getShortcuts(actionName);
    KeyStroke stroke=null;
    for (    Shortcut each : sc) {
      if (each instanceof KeyboardShortcut) {
        final KeyboardShortcut ks=(KeyboardShortcut)each;
        final KeyStroke first=ks.getFirstKeyStroke();
        final KeyStroke second=ks.getSecondKeyStroke();
        if (first != null && second == null) {
          stroke=KeyStroke.getKeyStroke(first.getKeyCode(),first.getModifiers(),false);
          break;
        }
      }
    }
    if (stroke != null) {
      context.getCallback().message("Invoking action via shortcut: " + stroke.toString(),getLine());
      type(context.getRobot(),stroke);
      return new ActionCallback.Done();
    }
  }
  final InputEvent input=getInputEvent(actionName);
  final ActionCallback result=new ActionCallback();
  context.getRobot().delay(Registry.intValue("actionSystem.playback.autodelay"));
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      ActionManager.getInstance().tryToExecute(action,input,null,null,false).doWhenProcessed(new Runnable(){
        @Override public void run(){
          result.setDone();
        }
      }
);
    }
  }
);
  return result;
}
