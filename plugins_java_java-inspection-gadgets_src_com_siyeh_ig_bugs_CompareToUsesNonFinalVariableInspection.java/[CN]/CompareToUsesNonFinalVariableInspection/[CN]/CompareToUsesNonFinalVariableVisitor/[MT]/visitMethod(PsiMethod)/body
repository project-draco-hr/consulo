{
  final boolean isCompareTo=MethodUtils.isCompareTo(method);
  if (isCompareTo) {
    method.accept(new JavaRecursiveElementVisitor(){
      @Override public void visitClass(      PsiClass aClass){
      }
      @Override public void visitReferenceExpression(      @NotNull PsiReferenceExpression expression){
        super.visitReferenceExpression(expression);
        final PsiElement element=expression.resolve();
        if (!(element instanceof PsiField)) {
          return;
        }
        final PsiField field=(PsiField)element;
        if (field.hasModifierProperty(PsiModifier.FINAL)) {
          return;
        }
        registerError(expression,field);
      }
    }
);
  }
}
