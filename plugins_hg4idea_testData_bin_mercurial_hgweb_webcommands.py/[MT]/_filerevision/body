def _filerevision(web, tmpl, fctx):
    f = fctx.path()
    text = fctx.data()
    parity = paritygen(web.stripecount)
    if binary(text):
        mt = (mimetypes.guess_type(f)[0] or 'application/octet-stream')
        text = ('(binary:%s)' % mt)

    def lines():
        for (lineno, t) in enumerate(text.splitlines(True)):
            yield {'line': t, 'lineid': ('l%d' % (lineno + 1)), 'linenumber': ('% 6d' % (lineno + 1)), 'parity': parity.next(), }
    return tmpl('filerevision', file=f, path=webutil.up(f), text=lines(), rev=fctx.rev(), node=hex(fctx.node()), author=fctx.user(), date=fctx.date(), desc=fctx.description(), branch=webutil.nodebranchnodefault(fctx), parent=webutil.parents(fctx), child=webutil.children(fctx), rename=webutil.renamelink(fctx), permissions=fctx.manifest().flags(f))
