def changelog(web, req, tmpl, shortlog=False):
    if ('node' in req.form):
        ctx = webutil.changectx(web.repo, req)
    else:
        if ('rev' in req.form):
            hi = req.form['rev'][0]
        else:
            hi = (len(web.repo) - 1)
        try:
            ctx = web.repo[hi]
        except error.RepoError:
            return _search(web, req, tmpl)

    def changelist(limit=0, **map):
        l = []
        for i in xrange(start, end):
            ctx = web.repo[i]
            n = ctx.node()
            showtags = webutil.showtag(web.repo, tmpl, 'changelogtag', n)
            files = webutil.listfilediffs(tmpl, ctx.files(), n, web.maxfiles)
            l.insert(0, {'parity': parity.next(), 'author': ctx.user(), 'parent': webutil.parents(ctx, (i - 1)), 'child': webutil.children(ctx, (i + 1)), 'changelogtag': showtags, 'desc': ctx.description(), 'date': ctx.date(), 'files': files, 'rev': i, 'node': hex(n), 'tags': webutil.nodetagsdict(web.repo, n), 'inbranch': webutil.nodeinbranch(web.repo, ctx), 'branches': webutil.nodebranchdict(web.repo, ctx), })
        if (limit > 0):
            l = l[:limit]
        for e in l:
            yield e
    revcount = ((shortlog and web.maxshortchanges) or web.maxchanges)
    if ('revcount' in req.form):
        revcount = int(req.form.get('revcount', [revcount])[0])
        tmpl.defaults['sessionvars']['revcount'] = revcount
    lessvars = copy.copy(tmpl.defaults['sessionvars'])
    lessvars['revcount'] = (revcount / 2)
    morevars = copy.copy(tmpl.defaults['sessionvars'])
    morevars['revcount'] = (revcount * 2)
    cl = web.repo.changelog
    count = len(cl)
    pos = ctx.rev()
    start = max(0, ((pos - revcount) + 1))
    end = min(count, (start + revcount))
    pos = (end - 1)
    parity = paritygen(web.stripecount, offset=(start - end))
    changenav = webutil.revnavgen(pos, revcount, count, web.repo.changectx)
    return tmpl(((shortlog and 'shortlog') or 'changelog'), changenav=changenav, node=hex(ctx.node()), rev=pos, changesets=count, entries=(lambda **x: changelist(limit=0, **x)), latestentry=(lambda **x: changelist(limit=1, **x)), archives=web.archivelist('tip'), revcount=revcount, morevars=morevars, lessvars=lessvars)
