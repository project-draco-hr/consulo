def tags(web, req, tmpl):
    i = web.repo.tagslist()
    i.reverse()
    parity = paritygen(web.stripecount)

    def entries(notip=False, limit=0, **map):
        count = 0
        for (k, n) in i:
            if (notip and (k == 'tip')):
                continue
            if ((limit > 0) and (count >= limit)):
                continue
            count = (count + 1)
            yield {'parity': parity.next(), 'tag': k, 'date': web.repo[n].date(), 'node': hex(n), }
    return tmpl('tags', node=hex(web.repo.changelog.tip()), entries=(lambda **x: entries(False, 0, **x)), entriesnotip=(lambda **x: entries(True, 0, **x)), latestentry=(lambda **x: entries(True, 1, **x)))
