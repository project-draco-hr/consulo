{
  myAdjustmentListener=new AdjustmentListener(){
    @Override public void adjustmentValueChanged(    AdjustmentEvent e){
      resetAnimator();
    }
  }
;
  final int delayFrames=4;
  final int framesCount=10 + delayFrames;
  myAnimator=new Animator("Adjustment fadeout",framesCount,framesCount * 50,false){
    @Override public void paintNow(    float frame,    float totalFrames,    float cycle){
      myAnimationColorShift=40;
      if (frame > delayFrames) {
        myAnimationColorShift*=1 - (frame - delayFrames) / (totalFrames - delayFrames);
      }
      if (scrollbar != null) {
        scrollbar.repaint(((ButtonlessScrollBarUI)scrollbar.getUI()).getThumbBounds());
      }
    }
  }
;
  myMouseMotionListener=new MouseMotionAdapter(){
    @Override public void mouseMoved(    MouseEvent e){
      boolean inside=isOverThumb(e.getPoint());
      if (inside != myMouseIsOverThumb) {
        myMouseIsOverThumb=inside;
        resetAnimator();
      }
    }
  }
;
  myMouseListener=new MouseAdapter(){
    @Override public void mouseExited(    MouseEvent e){
      if (myMouseIsOverThumb) {
        myMouseIsOverThumb=false;
        resetAnimator();
      }
    }
  }
;
}
