{
  PsiElement element=problemDescriptor.getPsiElement();
  if (element != null && !isInPsiFile(element)) {
    ExternallyDefinedPsiElement external=PsiTreeUtil.getParentOfType(element,ExternallyDefinedPsiElement.class,false);
    if (external != null) {
      PsiElement newTarget=external.getProblemTarget();
      if (newTarget != null) {
        redirectProblem(problemDescriptor,newTarget);
        return;
      }
    }
    PsiFile containingFile=element.getContainingFile();
    PsiElement context=containingFile.getContext();
    PsiElement myContext=myFile.getContext();
    LOG.error("Reported element " + element + " is not from the file '"+ myFile+ "' the inspection was invoked for. Message: '"+ problemDescriptor.getDescriptionTemplate()+ "'.\n"+ "Element' containing file: "+ containingFile+ "; context: "+ (context == null ? null : context.getContainingFile())+ "\n"+ "Inspection invoked for file: "+ myFile+ "; context: "+ (myContext == null ? null : myContext.getContainingFile())+ "\n");
  }
  myProblems.add(problemDescriptor);
}
