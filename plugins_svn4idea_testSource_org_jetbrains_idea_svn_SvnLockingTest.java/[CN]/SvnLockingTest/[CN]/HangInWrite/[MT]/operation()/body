{
  System.out.println("TRY OPEN FOR WRITE===");
  SqlJetDb open=null;
  try {
    open=SqlJetDb.open(SvnUtil.getWcDb(myWorkingCopyRoot),true);
    open.setBusyHandler(new ISqlJetBusyHandler(){
      @Override public boolean call(      int i){
        if (myStopped)         return false;
        System.out.println("busy " + myName);
        try {
          Thread.sleep(10);
        }
 catch (        InterruptedException e) {
        }
        return true;
      }
    }
);
    try {
      System.out.println("TRY OPEN FOR WRITE " + myName);
      open.runWriteTransaction(new ISqlJetTransaction(){
        @Override public Object run(        SqlJetDb db) throws SqlJetException {
          System.out.println("OPENed FOR WRITE " + myName);
          myInsideWrite.set(true);
          if (shouldWait) {
            mySemaphore.waitFor();
          }
          return null;
        }
      }
);
    }
  finally {
      myInsideWrite.set(false);
      open.rollback();
    }
  }
 catch (  SqlJetException e) {
    e.printStackTrace();
    throw new RuntimeException(e);
  }
catch (  Exception e) {
    e.printStackTrace();
    throw new RuntimeException(e);
  }
 finally {
    if (open != null) {
      try {
        open.close();
      }
 catch (      SqlJetException e) {
        e.printStackTrace();
        throw new RuntimeException(e);
      }
      System.out.println("CLOSed FOR WRITE " + myName);
    }
  }
}
