{
  GrMethod method=(GrMethod)element.getParent();
  GrStatement statement=method.getBlock().getStatements()[0];
  GrExpression value;
  if (statement instanceof GrReturnStatement) {
    value=((GrReturnStatement)statement).getReturnValue();
  }
 else {
    value=(GrExpression)statement;
  }
  String fieldName=GroovyPropertyUtils.getPropertyNameByGetter(method);
  String[] modifiers;
  if (method.hasModifierProperty(PsiModifier.STATIC)) {
    modifiers=new String[]{PsiModifier.STATIC,PsiModifier.FINAL};
  }
 else {
    modifiers=new String[]{PsiModifier.FINAL};
  }
  GrVariableDeclaration declaration=GroovyPsiElementFactory.getInstance(project).createFieldDeclaration(modifiers,fieldName,value,method.getReturnType());
  PsiClass aClass=method.getContainingClass();
  PsiElement replaced=aClass.addBefore(declaration,method);
  GrReferenceAdjuster.shortenReferences(replaced);
  method.delete();
}
