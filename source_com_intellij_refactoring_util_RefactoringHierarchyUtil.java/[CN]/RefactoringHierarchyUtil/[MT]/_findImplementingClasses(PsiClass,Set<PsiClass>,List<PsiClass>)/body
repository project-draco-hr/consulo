{
  LOG.assertTrue(anInterface.isInterface());
  PsiManager manager=anInterface.getManager();
  visited.add(anInterface);
  PsiSearchHelper searchHelper=manager.getSearchHelper();
  searchHelper.processInheritors(new PsiElementProcessor<PsiClass>(){
    public boolean execute(    PsiClass element){
      final PsiClass psiClass=element;
      if (!psiClass.isInterface()) {
        result.add(psiClass);
      }
 else       if (!visited.contains(psiClass)) {
        _findImplementingClasses(psiClass,visited,result);
      }
      return true;
    }
    public Object getHint(    Class hintClass){
      return null;
    }
  }
,anInterface,GlobalSearchScope.projectScope(manager.getProject()),false);
}
