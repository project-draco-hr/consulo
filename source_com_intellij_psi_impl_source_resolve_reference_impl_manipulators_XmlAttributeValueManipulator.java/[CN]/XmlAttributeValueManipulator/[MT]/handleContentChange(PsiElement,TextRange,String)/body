{
  final CompositeElement compositeElement=(CompositeElement)SourceTreeToPsiMap.psiElementToTree(element);
  final PsiElement nextSibling=element.getFirstChild().getNextSibling();
  CheckUtil.checkWritable(element);
  String text;
  try {
    text=element.getText();
    String textBeforeRange=text.substring(1,range.getStartOffset());
    String textAfterRange=text.substring(range.getEndOffset(),text.length() - 1);
    text=textBeforeRange + newContent + textAfterRange;
  }
 catch (  StringIndexOutOfBoundsException e) {
    LOG.error("Range: " + range + " in text: '"+ element.getText()+ "'",e);
    throw e;
  }
  final CharTable charTableByTree=SharedImplUtil.findCharTableByTree(compositeElement);
  final LeafElement newValueElement=Factory.createSingleLeafElement(XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN,text.toCharArray(),0,text.length(),charTableByTree,element.getManager());
  compositeElement.replaceChildInternal(SourceTreeToPsiMap.psiElementToTree(nextSibling),newValueElement);
  return element;
}
