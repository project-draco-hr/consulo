{
  LOG.assertTrue(firstMember.isValid());
  if (toEditMethodBody) {
    PsiMethod method=(PsiMethod)firstMember;
    PsiCodeBlock body=method.getBody();
    if (body != null) {
      PsiElement firstBodyElement=body.getFirstBodyElement();
      PsiElement l=firstBodyElement;
      while (l instanceof PsiWhiteSpace)       l=l.getNextSibling();
      if (l == null)       l=body;
      PsiElement lastBodyElement=body.getLastBodyElement();
      PsiElement r=lastBodyElement;
      while (r instanceof PsiWhiteSpace)       r=r.getPrevSibling();
      if (r == null)       r=body;
      int start=l.getTextRange().getStartOffset();
      int end=r.getTextRange().getEndOffset();
      boolean adjustLineIndent=false;
      if (start > end && firstBodyElement == lastBodyElement && firstBodyElement instanceof PsiWhiteSpace && firstBodyElement instanceof LeafElement) {
        CharSequence chars=((LeafElement)firstBodyElement).getChars();
        if (chars.length() > 1 && chars.charAt(0) == '\n' && chars.charAt(1) == '\n') {
          start=end=firstBodyElement.getTextRange().getStartOffset() + 1;
          adjustLineIndent=true;
        }
      }
      editor.getCaretModel().moveToOffset(Math.min(start,end));
      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
      if (start < end) {
        editor.getSelectionModel().setSelection(start,end);
      }
 else       if (adjustLineIndent) {
        Document document=editor.getDocument();
        RangeMarker marker=document.createRangeMarker(start,start);
        PsiDocumentManager.getInstance(body.getProject()).doPostponedOperationsAndUnblockDocument(document);
        CodeStyleManager.getInstance(body.getProject()).adjustLineIndent(document,marker.getStartOffset());
      }
      return;
    }
  }
  int offset;
  if (firstMember instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)firstMember;
    PsiCodeBlock body=method.getBody();
    if (body == null) {
      offset=method.getTextRange().getStartOffset();
    }
 else {
      offset=body.getLBrace().getTextRange().getEndOffset();
    }
  }
 else {
    offset=firstMember.getTextRange().getStartOffset();
  }
  editor.getCaretModel().moveToOffset(offset);
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  editor.getSelectionModel().removeSelection();
}
