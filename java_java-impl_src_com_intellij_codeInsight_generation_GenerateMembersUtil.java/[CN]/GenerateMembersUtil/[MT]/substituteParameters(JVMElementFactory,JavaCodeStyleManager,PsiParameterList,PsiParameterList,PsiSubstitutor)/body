{
  PsiParameter[] parameters=sourceParameterList.getParameters();
  Map<PsiType,Pair<String,Integer>> m=new HashMap<PsiType,Pair<String,Integer>>();
  for (int i=0; i < parameters.length; i++) {
    PsiParameter parameter=parameters[i];
    final PsiType parameterType=parameter.getType();
    final PsiType substituted=substituteType(substitutor,parameterType);
    @NonNls String paramName=parameter.getName();
    boolean isBaseNameGenerated=true;
    final boolean isSubstituted=substituted.equals(parameterType);
    if (!isSubstituted && isBaseNameGenerated(codeStyleManager,TypeConversionUtil.erasure(parameterType),paramName)) {
      isBaseNameGenerated=false;
    }
    if (paramName == null || isBaseNameGenerated && !isSubstituted && isBaseNameGenerated(codeStyleManager,parameterType,paramName)) {
      Pair<String,Integer> pair=m.get(substituted);
      if (pair != null) {
        paramName=pair.first + pair.second;
        m.put(substituted,Pair.create(pair.first,pair.second.intValue() + 1));
      }
 else {
        String[] names=codeStyleManager.suggestVariableName(VariableKind.PARAMETER,null,null,substituted).names;
        if (names.length > 0) {
          paramName=names[0];
        }
 else {
          paramName="p" + i;
        }
        m.put(substituted,new Pair<String,Integer>(paramName,1));
      }
    }
    if (paramName == null)     paramName="p" + i;
    final PsiParameter newParameter=factory.createParameter(paramName,substituted);
    copyOrReplaceModifierList(parameter,newParameter);
    targetParameterList.add(newParameter);
  }
}
