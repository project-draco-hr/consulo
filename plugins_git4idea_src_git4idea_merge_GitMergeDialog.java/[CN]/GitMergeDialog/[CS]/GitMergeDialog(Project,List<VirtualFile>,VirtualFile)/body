{
  super(project,true);
  setTitle(GitBundle.getString("merge.branch.title"));
  myProject=project;
  initBranchChooser();
  myNoCommitCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final boolean selected=myNoCommitCheckBox.isSelected();
      myCommitMessage.setEnabled(!selected);
      if (selected) {
        myAddLogInformationCheckBox.setSelected(false);
      }
      myAddLogInformationCheckBox.setEnabled(!selected);
    }
  }
);
  setOKActionEnabled(false);
  GitUIUtil.setupRootChooser(myProject,roots,defaultRoot,myGitRoot,myCurrentBranchText);
  myGitRoot.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      updateBranches();
    }
  }
);
  updateBranches();
  init();
}
