{
  if (!isOK()) {
    throw new IllegalStateException("The handler could be retrieved only if dialog was completed successfully.");
  }
  VirtualFile root=(VirtualFile)myGitRoot.getSelectedItem();
  GitLineHandler h=new GitLineHandler(myProject,root,"merge");
  h.setNoSSH(true);
  if (myNoCommitCheckBox.isSelected()) {
    h.addParameters("--no-commit");
  }
 else {
    if (myAddLogInformationCheckBox.isSelected()) {
      h.addParameters("--log");
    }
    final String msg=myCommitMessage.getText().trim();
    if (msg.length() != 0) {
      h.addParameters("-m",msg);
    }
  }
  if (mySquashCommitCheckBox.isSelected()) {
    h.addParameters("--squash");
  }
  if (myNoFastForwardCheckBox.isSelected()) {
    h.addParameters("--no-ff");
  }
  String strategy=(String)myStrategy.getSelectedItem();
  if (!GitMergeUtil.DEFAULT_STRATEGY.equals(strategy)) {
    h.addParameters("--strategy",strategy);
  }
  for (  String branch : myBranchChooser.getMarkedElements()) {
    h.addParameters(branch);
  }
  return h;
}
