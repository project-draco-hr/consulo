{
  final MetaModel tableRowModel=ViewsMetaManager.getInstance(component.getTag().getProject()).getModelByTag("TableRow");
  return new ComponentMorphingTool(component,new RadTableLayoutComponent(),target,new RadTableLayout()){
    @Override protected void convertChildren() throws Exception {
      List<RadComponent> oldChildren=new ArrayList<RadComponent>(myOldComponent.getChildren());
      if (horizontal) {
        RadViewComponent newRowComponent=ModelParser.createComponent(null,tableRowModel);
        ModelParser.addComponent(myNewComponent,newRowComponent,null);
        for (        RadComponent childComponent : oldChildren) {
          ModelParser.moveComponent(newRowComponent,(RadViewComponent)childComponent,null);
        }
      }
 else {
        for (        RadComponent childComponent : oldChildren) {
          RadViewComponent newRowComponent=ModelParser.createComponent(null,tableRowModel);
          ModelParser.addComponent(myNewComponent,newRowComponent,null);
          ModelParser.moveComponent(newRowComponent,(RadViewComponent)childComponent,null);
        }
      }
    }
    @Override protected void convertTag(){
      ModelParser.deleteAttribute(myNewComponent,"orientation");
    }
    @Override protected void loadChildProperties(    PropertyParser propertyParser) throws Exception {
    }
  }
.result();
}
