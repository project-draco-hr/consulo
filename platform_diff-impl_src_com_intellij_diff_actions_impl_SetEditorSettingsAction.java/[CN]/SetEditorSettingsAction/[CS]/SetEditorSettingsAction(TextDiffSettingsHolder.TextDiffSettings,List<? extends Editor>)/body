{
  super("Editor Settings",null,AllIcons.General.SecondaryGroup);
  setPopup(true);
  myTextSettings=settings;
  myEditors=editors;
  myActions=new EditorSettingToggleAction[]{new EditorSettingToggleAction("EditorToggleShowWhitespaces"){
    @Override public boolean isSelected(){
      return myTextSettings.isShowWhitespaces();
    }
    @Override public void setSelected(    boolean state){
      myTextSettings.setShowWhiteSpaces(state);
    }
    @Override public void apply(    @NotNull Editor editor,    boolean value){
      if (editor.getSettings().isWhitespacesShown() != value) {
        editor.getSettings().setWhitespacesShown(value);
        editor.getComponent().repaint();
      }
    }
  }
,new EditorSettingToggleAction("EditorToggleShowLineNumbers"){
    @Override public boolean isSelected(){
      return myTextSettings.isShowLineNumbers();
    }
    @Override public void setSelected(    boolean state){
      myTextSettings.setShowLineNumbers(state);
    }
    @Override public void apply(    @NotNull Editor editor,    boolean value){
      if (editor.getSettings().isLineNumbersShown() != value) {
        editor.getSettings().setLineNumbersShown(value);
        editor.getComponent().repaint();
      }
    }
  }
,new EditorSettingToggleAction("EditorToggleShowIndentLines"){
    @Override public boolean isSelected(){
      return myTextSettings.isShowIndentLines();
    }
    @Override public void setSelected(    boolean state){
      myTextSettings.setShowIndentLines(state);
    }
    @Override public void apply(    @NotNull Editor editor,    boolean value){
      if (editor.getSettings().isIndentGuidesShown() != value) {
        editor.getSettings().setIndentGuidesShown(value);
        editor.getComponent().repaint();
      }
    }
  }
,new EditorSettingToggleAction("EditorToggleUseSoftWraps"){
    private boolean myForcedSoftWrap;
    @Override public boolean isSelected(){
      return myForcedSoftWrap || myTextSettings.isUseSoftWraps();
    }
    @Override public void setSelected(    boolean state){
      myForcedSoftWrap=false;
      myTextSettings.setUseSoftWraps(state);
    }
    @Override public void apply(    @NotNull Editor editor,    boolean value){
      if (editor.getSettings().isUseSoftWraps() != value) {
        editor.getSettings().setUseSoftWraps(value);
      }
    }
    @Override public void applyDefaults(    @NotNull List<? extends Editor> editors){
      for (      Editor editor : editors) {
        if (editor != null && editor.getUserData(EditorImpl.FORCED_SOFT_WRAPS) != null)         myForcedSoftWrap=true;
      }
      super.applyDefaults(editors);
    }
  }
};
}
