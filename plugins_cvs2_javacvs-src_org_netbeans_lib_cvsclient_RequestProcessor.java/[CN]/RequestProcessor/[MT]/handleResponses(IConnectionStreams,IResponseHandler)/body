{
  final ErrorDefendingResponseHandler proxy=new ErrorDefendingResponseHandler(myTimeout,responseHandler);
  final ResponseParser responseParser=new ResponseParser(proxy,clientEnvironment.getCharset());
  final StringBuffer responseBuffer=new StringBuffer(32);
  for (; ; ) {
    final String responseString=readResponse(connectionStreams.getLoggedReader(),responseBuffer);
    if (responseString.length() == 0) {
      return false;
    }
    final Boolean result=responseParser.processResponse(responseString,connectionStreams,responseServices,clientEnvironment);
    if (result != null) {
      return result.booleanValue();
    }
    checkCanceled();
    if (proxy.interrupt()) {
      throw new CommandException(null,"Aborted: consequent errors stream");
    }
  }
}
