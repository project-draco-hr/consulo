{
  final TableColumnModel columnModel=table.getTableHeader().getColumnModel();
  int index=0;
  final ArrayList columnIndicies=new ArrayList();
  while (true) {
    final String order=storage.get(orderPropertyName(index));
    if (order == null)     break;
    columnIndicies.add(order);
    index++;
    if (index == table.getColumnCount())     break;
  }
  index=0;
  for (Iterator iterator=columnIndicies.iterator(); iterator.hasNext(); ) {
    final String order=(String)iterator.next();
    columnModel.moveColumn(indexbyModelIndex(columnModel,Integer.parseInt(order)),index);
    index++;
  }
  for (int i=0; i < columnIndicies.size(); i++) {
    final String width=storage.get(widthPropertyName(i));
    try {
      columnModel.getColumn(i).setPreferredWidth(Integer.parseInt(width));
    }
 catch (    NumberFormatException e) {
      LOG.error("Bad width: " + width + " at column: "+ i+ " from: "+ storage+ " actual columns count: "+ columnModel.getColumnCount()+ " info count: "+ columnIndicies.size(),e);
    }
  }
}
