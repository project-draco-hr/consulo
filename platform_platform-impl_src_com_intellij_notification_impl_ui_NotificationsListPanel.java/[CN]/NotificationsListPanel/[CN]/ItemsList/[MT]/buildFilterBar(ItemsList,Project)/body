{
  final JPanel box=new JPanel();
  box.setBorder(BorderFactory.createEmptyBorder(3,3,3,3));
  box.setLayout(new BoxLayout(box,BoxLayout.X_AXIS));
  final ButtonGroup buttonGroup=new ButtonGroup();
  createFilterButton(box,buttonGroup,"All",new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      list.filter(null);
    }
  }
,new NotNullFunction<MyButton,String>(){
    @NotNull public String fun(    MyButton myButton){
      final int i=count(null,project);
      if (i > 0) {
        return String.format("All (%s)",i);
      }
      return "All";
    }
  }
,'A',true);
  createFilterButton(box,buttonGroup,"Error",new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      list.filter(NotificationType.ERROR);
    }
  }
,new NotNullFunction<MyButton,String>(){
    @NotNull public String fun(    MyButton myButton){
      final int i=count(NotificationType.ERROR,project);
      myButton.setVisible(i > 0);
      if (i > 0) {
        return String.format("Error (%s)",i);
      }
 else       if (myButton.isSelected()) {
        switchToAll(buttonGroup);
      }
      return "Error";
    }
  }
,'E',false);
  createFilterButton(box,buttonGroup,"Warning",new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      list.filter(NotificationType.WARNING);
    }
  }
,new NotNullFunction<MyButton,String>(){
    @NotNull public String fun(    MyButton myButton){
      final int i=count(NotificationType.WARNING,project);
      myButton.setVisible(i > 0);
      if (i > 0) {
        return String.format("Warning (%s)",i);
      }
 else       if (myButton.isSelected()) {
        switchToAll(buttonGroup);
      }
      return "Warning";
    }
  }
,'W',false);
  createFilterButton(box,buttonGroup,"Information",new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      list.filter(NotificationType.INFORMATION);
    }
  }
,new NotNullFunction<MyButton,String>(){
    @NotNull public String fun(    MyButton myButton){
      final int i=count(NotificationType.INFORMATION,project);
      myButton.setVisible(i > 0);
      if (i > 0) {
        return String.format("Information (%s)",i);
      }
 else       if (myButton.isSelected()) {
        switchToAll(buttonGroup);
      }
      return "Information";
    }
  }
,'I',false);
  return box;
}
