{
  final ListSelectionModel model=getSelectionModel();
  final NotificationsListModel listModel=getModel();
  if (!model.isSelectionEmpty()) {
    final int min=model.getMinSelectionIndex();
    final int max=model.getMaxSelectionIndex();
    final List<Notification> tbr=new ArrayList<Notification>();
    for (int i=min; i <= max; i++) {
      if (model.isSelectedIndex(i)) {
        final Notification notification=(Notification)listModel.getElementAt(i);
        if (notification != null) {
          tbr.add(notification);
        }
      }
    }
    if (tbr.size() > 0) {
      getManager().remove(tbr.toArray(new Notification[tbr.size()]));
      final int toSelect=Math.min(min,listModel.getSize() - 1);
      model.clearSelection();
      if (toSelect >= 0) {
        model.setSelectionInterval(toSelect,toSelect);
        scrollRectToVisible(getCellBounds(toSelect,toSelect));
      }
    }
  }
  revalidate();
  repaint();
}
