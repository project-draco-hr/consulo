{
  Map<VirtualFile,ChangesFilter.Filter> structureFilters;
  structureFilters=new HashMap<VirtualFile,ChangesFilter.Filter>();
  final Collection<VirtualFile> selected=new ArrayList<VirtualFile>(myStructureFilter.getSelected());
  final ArrayList<VirtualFile> copy=new ArrayList<VirtualFile>(myRootsUnderVcs);
  Collections.sort(copy,FilePathComparator.getInstance());
  Collections.reverse(copy);
  for (  VirtualFile root : copy) {
    final Collection<VirtualFile> selectedForRoot=new SmartList<VirtualFile>();
    final Iterator<VirtualFile> iterator=selected.iterator();
    while (iterator.hasNext()) {
      VirtualFile next=iterator.next();
      if (VfsUtil.isAncestor(root,next,false)) {
        selectedForRoot.add(next);
        iterator.remove();
      }
    }
    if (!selectedForRoot.isEmpty()) {
      final ChangesFilter.StructureFilter structureFilter=new ChangesFilter.StructureFilter();
      structureFilter.addFiles(selectedForRoot);
      structureFilters.put(root,structureFilter);
    }
  }
  return structureFilters;
}
