{
  myUIRefresh=new UIRefresh(){
    @Override public void detailsLoaded(){
      tryRefreshDetails();
      fireTableRepaint();
    }
    @Override public void linesReloaded(    boolean drawMore){
      if ((!StepType.STOP.equals(myState)) && (!StepType.FINISHED.equals(myState))) {
        myState=drawMore ? StepType.PAUSE : StepType.CONTINUE;
      }
      fireTableRepaint();
      updateMoreVisibility();
      orderLabelVisibility();
    }
    @Override public void acceptException(    Exception e){
      LOG.info(e);
      if (myVcs.getExecutableValidator().isExecutableValid()) {
        VcsBalloonProblemNotifier.showOverChangesView(myProject,e.getMessage(),MessageType.ERROR);
      }
    }
    @Override public void finished(){
      myState=StepType.FINISHED;
      updateMoreVisibility();
    }
    @Override public void reportStash(    VirtualFile root,    @Nullable Pair<AbstractHash,AbstractHash> hash){
      myTableModel.stashFor(root,hash);
    }
    @Override public void reportSymbolicRefs(    VirtualFile root,    SymbolicRefs symbolicRefs){
      myRefs.put(root,symbolicRefs);
      myTableModel.setHead(root,symbolicRefs.getHeadHash());
      myRecalculatedCommon.clear();
      if (myRefs.isEmpty())       return;
      final CheckSamePattern<String> currentUser=new CheckSamePattern<String>();
      final CheckSamePattern<String> currentBranch=new CheckSamePattern<String>();
      for (      SymbolicRefs refs : myRefs.values()) {
        myRecalculatedCommon.addLocals(refs.getLocalBranches());
        myRecalculatedCommon.addRemotes(refs.getRemoteBranches());
        final String currentFromRefs=refs.getCurrent() == null ? null : refs.getCurrent().getFullName();
        currentBranch.iterate(currentFromRefs);
        currentUser.iterate(refs.getUsername());
      }
      if (currentBranch.isSame()) {
        myRecalculatedCommon.setCurrent(myRefs.values().iterator().next().getCurrent());
      }
      if (currentUser.isSame()) {
        final String username=currentUser.getSameValue();
        myRecalculatedCommon.setUsername(username);
        myUserFilterI.setMe(username);
      }
      myBranchSelectorAction.setSymbolicRefs(myRecalculatedCommon);
      myBranchSelectorAction.asTextAction();
    }
  }
;
}
