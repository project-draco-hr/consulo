{
  final DefaultActionGroup group=new DefaultActionGroup();
  myBranchSelectorAction=new BranchSelectorAction(myProject,new Consumer<String>(){
    @Override public void consume(    String s){
      mySelectedBranch=s;
      reloadRequest();
    }
  }
);
  final Runnable reloadCallback=new Runnable(){
    @Override public void run(){
      reloadRequest();
    }
  }
;
  myUserFilterI=new MyFilterUi(reloadCallback);
  myUsersFilterAction=new UsersFilterAction(myProject,myUserFilterI);
  group.add(new MyTextFieldAction());
  group.add(myBranchSelectorAction);
  group.add(myUsersFilterAction);
  Getter<List<VirtualFile>> rootsGetter=new Getter<List<VirtualFile>>(){
    @Override public List<VirtualFile> get(){
      return myRootsUnderVcs;
    }
  }
;
  myStructureFilter=new MyStructureFilter(reloadCallback,rootsGetter);
  myStructureFilterAction=new StructureFilterAction(myProject,myStructureFilter);
  group.add(myStructureFilterAction);
  myCherryPickAction=new MyCherryPick();
  group.add(myCherryPickAction);
  group.add(ActionManager.getInstance().getAction("ChangesView.CreatePatchFromChanges"));
  myRefreshAction=new MyRefreshAction();
  myRootsAction=new MyRootsAction(rootsGetter,myJBTable);
  group.add(myRootsAction);
  group.add(myMyShowTreeAction);
  group.add(myRefreshAction);
  myMoreAction=new MoreAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      myMediator.continueLoading();
      myState=StepType.CONTINUE;
      updateMoreVisibility();
    }
  }
;
  group.add(myMoreAction);
  myCopyHashAction=new AnAction("Copy Hash"){
    @Override public void actionPerformed(    AnActionEvent e){
      final int[] selectedRows=myJBTable.getSelectedRows();
      final StringBuilder sb=new StringBuilder();
      for (      int row : selectedRows) {
        final CommitI commitAt=myTableModel.getCommitAt(row);
        if (commitAt == null)         continue;
        if (sb.length() > 0) {
          sb.append(' ');
        }
        sb.append(commitAt.getHash().getString());
      }
      CopyPasteManager.getInstance().setContents(new StringSelection(sb.toString()));
    }
    @Override public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(myJBTable.getSelectedRowCount() > 0);
    }
  }
;
  return ActionManager.getInstance().createActionToolbar("Git log",group,true);
}
