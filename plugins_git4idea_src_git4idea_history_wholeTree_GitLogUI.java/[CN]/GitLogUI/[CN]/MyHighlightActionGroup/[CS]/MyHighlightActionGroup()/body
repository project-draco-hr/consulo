{
  super("Highlight...",true);
  myAllHeads=new DumbAwareAction("All Heads"){
    @Override public void actionPerformed(    AnActionEvent e){
      for (      VirtualFile root : myTableModel.getActiveRoots()) {
        final SymbolicRefs symbolicRefs=myRefs.get(root);
        if (symbolicRefs == null)         continue;
        final AbstractHash headHash=symbolicRefs.getHeadHash();
        if (headHash == null)         continue;
        myTableModel.setHead(root,headHash);
        myClearedHighlightingRoots.removeAll(myRootsUnderVcs);
      }
      myJBTable.repaint();
    }
    @Override public void update(    AnActionEvent e){
      super.update(e);
      e.getPresentation().setVisible(myTableModel.getActiveRoots().size() > 1);
    }
  }
;
  myClearAll=new DumbAwareAction("Clear All"){
    @Override public void actionPerformed(    AnActionEvent e){
      for (      VirtualFile root : myTableModel.getActiveRoots()) {
        myTableModel.setDumbHighlighter(root);
      }
      myClearedHighlightingRoots.addAll(myRootsUnderVcs);
      myJBTable.repaint();
    }
    @Override public void update(    AnActionEvent e){
      super.update(e);
      e.getPresentation().setVisible(myTableModel.getActiveRoots().size() > 1);
    }
  }
;
  myHead=new DumbAwareAction("HEAD"){
    @Override public void actionPerformed(    AnActionEvent e){
      final int[] selectedRows=myJBTable.getSelectedRows();
      if (selectedRows.length != 1) {
        return;
      }
      final CommitI commitAt=myTableModel.getCommitAt(selectedRows[0]);
      if (commitAt.holdsDecoration()) {
        return;
      }
      final VirtualFile root=commitAt.selectRepository(myRootsUnderVcs);
      final SymbolicRefs symbolicRefs=myRefs.get(root);
      if (symbolicRefs == null)       return;
      final AbstractHash headHash=symbolicRefs.getHeadHash();
      if (headHash == null)       return;
      myTableModel.setHead(root,headHash);
      myClearedHighlightingRoots.remove(root);
      myJBTable.repaint();
    }
    @Override public void update(    AnActionEvent e){
      weNeedOneCommitSelected(e);
    }
  }
;
  myClear=new DumbAwareAction("Clear"){
    @Override public void actionPerformed(    AnActionEvent e){
      final int[] selectedRows=myJBTable.getSelectedRows();
      if (selectedRows.length != 1) {
        return;
      }
      final CommitI commitAt=myTableModel.getCommitAt(selectedRows[0]);
      if (commitAt.holdsDecoration()) {
        return;
      }
      final VirtualFile root=commitAt.selectRepository(myRootsUnderVcs);
      myTableModel.setDumbHighlighter(root);
      myClearedHighlightingRoots.add(root);
      myJBTable.repaint();
    }
    @Override public void update(    AnActionEvent e){
      weNeedOneCommitSelected(e);
    }
  }
;
  myAnActions=new AnAction[]{myAllHeads,myClearAll,new Separator(),myHead,myClear};
}
