{
  myCurrentWidth=0;
  if (value instanceof GitCommit) {
    final GitCommit commit=(GitCommit)value;
    final int localSize=commit.getLocalBranches() == null ? 0 : commit.getLocalBranches().size();
    final int remoteSize=commit.getRemoteBranches() == null ? 0 : commit.getRemoteBranches().size();
    final int tagsSize=commit.getTags().size();
    if (localSize + remoteSize > 0) {
      final String branch=localSize == 0 ? (commit.getRemoteBranches().get(0)) : commit.getLocalBranches().get(0);
      Icon icon=myBranchMap.get(branch);
      if (icon == null) {
        final boolean plus=localSize + remoteSize + tagsSize > 1;
        final Color color=localSize == 0 ? Colors.remote : Colors.local;
        icon=new CaptionIcon(color,table.getFont().deriveFont((float)table.getFont().getSize() - 1),branch,table,CaptionIcon.Form.SQUARE,plus,branch.equals(commit.getCurrentBranch()));
        myBranchMap.put(branch,icon);
      }
      myCurrentWidth=icon.getIconWidth();
      myPanel.removeAll();
      myPanel.setBackground(getLogicBackground(isSelected,row));
      myPanel.add(new JLabel(icon));
      myInner.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
      myPanel.add(myInner);
      return myPanel;
    }
    if ((localSize + remoteSize == 0) && (tagsSize > 0)) {
      final String tag=commit.getTags().get(0);
      Icon icon=myTagMap.get(tag);
      if (icon == null) {
        icon=new CaptionIcon(Colors.tag,table.getFont().deriveFont((float)table.getFont().getSize() - 1),tag,table,CaptionIcon.Form.ROUNDED,tagsSize > 1,false);
        myTagMap.put(tag,icon);
      }
      myCurrentWidth=icon.getIconWidth();
      myPanel.removeAll();
      myPanel.setBackground(getLogicBackground(isSelected,row));
      myPanel.add(new JLabel(icon));
      myInner.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
      myPanel.add(myInner);
      return myPanel;
    }
  }
  myInner.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
  return myInner;
}
