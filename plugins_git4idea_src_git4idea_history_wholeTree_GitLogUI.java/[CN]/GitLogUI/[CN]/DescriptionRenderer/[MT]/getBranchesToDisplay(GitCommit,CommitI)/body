{
  final List<Trinity<String,Boolean,Color>> result=new ArrayList<Trinity<String,Boolean,Color>>();
  final List<String> localBranches=commit.getLocalBranches();
  final SymbolicRefs symbolicRefs=myRefs.get(commitI.selectRepository(myRootsUnderVcs));
  final String currentName=symbolicRefs.getCurrentName();
  final String trackedRemoteName=symbolicRefs.getTrackedRemoteName();
  if (currentName != null && localBranches.contains(currentName)) {
    result.add(new Trinity<String,Boolean,Color>(currentName,true,Colors.local));
  }
  final List<String> remoteBranches=commit.getRemoteBranches();
  if (trackedRemoteName != null && remoteBranches.contains(trackedRemoteName)) {
    result.add(new Trinity<String,Boolean,Color>(trackedRemoteName,true,Colors.remote));
  }
  if (result.isEmpty()) {
    boolean remote=localBranches.isEmpty();
    result.add(new Trinity<String,Boolean,Color>(remote ? (remoteBranches.get(0)) : localBranches.get(0),false,remote ? Colors.remote : Colors.local));
  }
  return result;
}
