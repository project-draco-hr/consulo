{
  final MultiMap<VirtualFile,GitCommit> commits=getSelectedCommitsAndCheck();
  if (commits.isEmpty())   return;
  for (  GitCommit commit : commits.values()) {
    myIdsInProgress.add(commit.getShortHash());
  }
  final Application application=ApplicationManager.getApplication();
  application.executeOnPooledThread(new Runnable(){
    public void run(){
      boolean autoCommit=GitVcsSettings.getInstance(myProject).isAutoCommitOnCherryPick();
      Map<GitRepository,List<GitCommit>> commitsInRoots=prepareCommitsForCherryPick(commits);
      new CherryPicker(myProject,ServiceManager.getService(Git.class),ServiceManager.getService(PlatformFacade.class),autoCommit).cherryPick(commitsInRoots);
      application.invokeLater(new Runnable(){
        public void run(){
          for (          GitCommit commit : commits.values()) {
            myIdsInProgress.remove(commit.getShortHash());
          }
        }
      }
);
    }
  }
);
}
