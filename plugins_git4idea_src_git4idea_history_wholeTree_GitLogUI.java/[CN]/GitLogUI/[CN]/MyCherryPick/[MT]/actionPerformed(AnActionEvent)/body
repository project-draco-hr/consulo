{
  final MultiMap<VirtualFile,GitCommit> commits=getSelectedCommitsAndCheck();
  if (commits.isEmpty())   return;
  for (  GitCommit commit : commits.values()) {
    myIdsInProgress.add(commit.getShortHash());
  }
  final Application application=ApplicationManager.getApplication();
  application.executeOnPooledThread(new Runnable(){
    public void run(){
      for (      VirtualFile file : commits.keySet()) {
        final List<GitCommit> part=(List<GitCommit>)commits.get(file);
        Collections.reverse(part);
        new CherryPicker(GitVcs.getInstance(myProject),part,new LowLevelAccessImpl(myProject,file)).execute();
      }
      application.invokeLater(new Runnable(){
        public void run(){
          for (          GitCommit commit : commits.values()) {
            myIdsInProgress.remove(commit.getShortHash());
          }
        }
      }
);
    }
  }
);
}
