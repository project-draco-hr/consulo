{
  if (myHeight == -1) {
    final Font font=myJBTable.getFont();
    final FontMetrics fm=myJBTable.getFontMetrics(font);
    final Graphics g=myJBTable.getGraphics();
    final Rectangle2D bounds=fm.getStringBounds("AWQ",g);
    final FontMetrics metrics=g.getFontMetrics();
    myLeading=metrics.getLeading();
    myHeight=(int)(metrics.getHeight() * 1.3);
  }
  if (!(value instanceof GitCommit)) {
    myInnerRenderer.getTableCellRendererComponent(table,value.toString(),isSelected,hasFocus,row,column);
    table.setRowHeight(row,myHeight);
    return myInnerRenderer;
  }
  final GitCommit gitCommit=(GitCommit)value;
  final CommitI commitAt=myTableModel.getCommitAt(row);
  if (commitAt != null && commitAt.holdsDecoration()) {
    myJPanel.removeAll();
    myJPanel.add(myHeaderRenderer,BorderLayout.NORTH);
    myJPanel.add(myInnerRenderer,BorderLayout.CENTER);
    myInnerRenderer.getTableCellRendererComponent(table,gitCommit.getDescription(),isSelected,false,row,column);
    myHeaderRenderer.getTableCellRendererComponent(table,commitAt.getDecorationString(),false,false,row,column);
    if (hasFocus) {
      myInnerRenderer.setBorder(myDottedBorder);
    }
 else {
      myInnerRenderer.setBorder(null);
    }
    table.setRowHeight(row,(int)(2 * myHeight));
    return myJPanel;
  }
 else {
    myInnerRenderer.getTableCellRendererComponent(table,gitCommit.getDescription(),isSelected,false,row,column);
    if (hasFocus) {
      myInnerRenderer.setBorder(myDottedBorder);
    }
 else {
      myInnerRenderer.setBorder(null);
    }
    table.setRowHeight(row,myHeight);
    return myInnerRenderer;
  }
}
