{
  final int rowCount=myModel.getRowCount();
  final ListSelectionModel selectionModel=myTable.getSelectionModel();
  for (  int row : mySelectedRows) {
    final CommitI commitI=myModel.getCommitAt(row);
    if (commitI != null) {
      final Pair<Integer,AbstractHash> pair=new Pair<Integer,AbstractHash>(commitI.selectRepository(SelectorList.getInstance()),commitI.getHash());
      if (myData.remove(pair)) {
        selectionModel.addSelectionInterval(row,row);
        if (myData.isEmpty())         return;
      }
    }
  }
  if (myData.isEmpty())   return;
  for (int i=0; i < rowCount; i++) {
    final CommitI commitI=myModel.getCommitAt(i);
    if (commitI == null)     continue;
    final Pair<Integer,AbstractHash> pair=new Pair<Integer,AbstractHash>(commitI.selectRepository(SelectorList.getInstance()),commitI.getHash());
    if (myData.remove(pair)) {
      selectionModel.addSelectionInterval(i,i);
      if (myData.isEmpty())       break;
    }
  }
}
