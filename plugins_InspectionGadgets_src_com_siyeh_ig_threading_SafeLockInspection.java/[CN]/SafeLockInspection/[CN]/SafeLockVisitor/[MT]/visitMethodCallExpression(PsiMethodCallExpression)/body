{
  super.visitMethodCallExpression(expression);
  if (!isLockAcquireMethod(expression)) {
    return;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiExpression lhs=methodExpression.getQualifierExpression();
  if (!(lhs instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)lhs;
  final PsiElement referent=referenceExpression.resolve();
  if (referent == null || !(referent instanceof PsiVariable)) {
    return;
  }
  final PsiVariable boundVariable=(PsiVariable)referent;
  final PsiStatement statement=PsiTreeUtil.getParentOfType(expression,PsiStatement.class);
  if (statement == null) {
    return;
  }
  final PsiStatement nextStatement=PsiTreeUtil.getNextSiblingOfType(statement,PsiStatement.class);
  if (!(nextStatement instanceof PsiTryStatement)) {
    registerError(expression,referenceExpression);
    return;
  }
  PsiTryStatement tryStatement=(PsiTryStatement)nextStatement;
  if (lockIsUnlockedInFinally(tryStatement,boundVariable)) {
    return;
  }
  registerError(expression,referenceExpression);
}
