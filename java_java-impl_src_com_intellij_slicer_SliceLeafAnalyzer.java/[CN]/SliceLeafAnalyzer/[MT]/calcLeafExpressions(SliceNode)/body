{
  WalkingState<SliceNode> walkingState=new WalkingState<SliceNode>(SliceNodeGuide.instance){
    @Override public void visit(    SliceNode element){
      element.update(null);
      element.getLeafExpressions().clear();
      SliceNode duplicate=element.getDuplicate();
      if (duplicate != null) {
        element.addLeafExpressions(duplicate.getLeafExpressions());
      }
 else {
        SliceUsage sliceUsage=element.getValue();
        Object[] children=element.getTreeBuilder().getTreeStructure().getChildElements(element);
        if (children.length == 0) {
          PsiElement value=sliceUsage.getElement();
          element.addLeafExpressions(ContainerUtil.singleton(value,LEAF_ELEMENT_EQUALITY));
        }
        super.visit(element);
      }
    }
    @Override public void elementFinished(    SliceNode element){
      SliceNode parent=SliceNodeGuide.instance.getParent(element);
      if (parent != null) {
        parent.addLeafExpressions(element.getLeafExpressions());
      }
    }
  }
;
  walkingState.elementStarted(root);
  return root.getLeafExpressions();
}
