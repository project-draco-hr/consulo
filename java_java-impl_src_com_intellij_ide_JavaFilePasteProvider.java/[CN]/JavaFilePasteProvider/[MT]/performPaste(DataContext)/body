{
  final Project project=DataKeys.PROJECT.getData(dataContext);
  final IdeView ideView=DataKeys.IDE_VIEW.getData(dataContext);
  if (project == null || ideView == null)   return;
  final PsiJavaFile javaFile=createJavaFileFromClipboardContent(project);
  if (javaFile == null)   return;
  final PsiClass[] classes=javaFile.getClasses();
  if (classes.length != 1)   return;
  final PsiDirectory targetDir=ideView.getOrChooseDirectory();
  if (targetDir == null)   return;
  new WriteCommandAction(project,"Paste class '" + classes[0].getName() + "'"){
    @Override protected void run(    Result result) throws Throwable {
      PsiFile file;
      try {
        file=targetDir.createFile(classes[0].getName() + ".java");
      }
 catch (      IncorrectOperationException e) {
        return;
      }
      final Document document=PsiDocumentManager.getInstance(project).getDocument(file);
      document.setText(javaFile.getText());
      PsiDocumentManager.getInstance(project).commitDocument(document);
      if (file instanceof PsiJavaFile) {
        updatePackageStatement((PsiJavaFile)file,targetDir);
      }
      new OpenFileDescriptor(project,file.getVirtualFile()).navigate(true);
    }
  }
.execute();
}
