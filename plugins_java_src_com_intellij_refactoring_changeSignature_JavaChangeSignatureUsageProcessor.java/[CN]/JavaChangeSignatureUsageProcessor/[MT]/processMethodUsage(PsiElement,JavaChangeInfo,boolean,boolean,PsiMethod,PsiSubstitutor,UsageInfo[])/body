{
  if (changeInfo.isNameChanged()) {
    if (ref instanceof PsiJavaCodeReferenceElement) {
      PsiElement last=((PsiJavaCodeReferenceElement)ref).getReferenceNameElement();
      if (last instanceof PsiIdentifier && last.getText().equals(changeInfo.getOldName())) {
        last.replace(changeInfo.getNewNameIdentifier());
      }
    }
  }
  final PsiMethod caller=RefactoringUtil.getEnclosingMethod(ref);
  if (toChangeArguments) {
    final PsiExpressionList list=RefactoringUtil.getArgumentListByMethodReference(ref);
    LOG.assertTrue(list != null);
    boolean toInsertDefaultValue=needDefaultValue(changeInfo,caller);
    if (toInsertDefaultValue && ref instanceof PsiReferenceExpression) {
      final PsiExpression qualifierExpression=((PsiReferenceExpression)ref).getQualifierExpression();
      if (qualifierExpression instanceof PsiSuperExpression && callerSignatureIsAboutToChangeToo(caller,usages)) {
        toInsertDefaultValue=false;
      }
    }
    fixActualArgumentsList(list,changeInfo,toInsertDefaultValue,subsitutor);
  }
  if (toCatchExceptions) {
    if (!(ref instanceof PsiReferenceExpression && JavaHighlightUtil.isSuperOrThisCall(PsiTreeUtil.getParentOfType(ref,PsiStatement.class),true,false))) {
      if (needToCatchExceptions(changeInfo,caller)) {
        PsiClassType[] newExceptions=callee != null ? getCalleeChangedExceptionInfo(callee) : getPrimaryChangedExceptionInfo(changeInfo);
        fixExceptions(ref,newExceptions);
      }
    }
  }
}
