{
  final PsiParameter[] parameters=method.getParameterList().getParameters();
  final JavaParameterInfo[] newParms=changeInfo.getNewParameters();
  LOG.assertTrue(parameters.length <= newParamsLength);
  final Set<PsiParameter> newParameters=new HashSet<PsiParameter>();
  final String[] oldParameterNames=changeInfo.getOldParameterNames();
  for (int i=0; i < newParamsLength; i++) {
    JavaParameterInfo newParm=newParms[i];
    if (newParm.getOldIndex() < 0 || newParm.getOldIndex() == i && !(newParm.getName().equals(oldParameterNames[newParm.getOldIndex()]) && newParm.getTypeText().equals(changeInfo.getOldParameterTypes()[newParm.getOldIndex()]))) {
      newParameters.add(parameters[i]);
    }
  }
  RefactoringUtil.fixJavadocsForParams(method,newParameters,new Condition<Pair<PsiParameter,String>>(){
    @Override public boolean value(    Pair<PsiParameter,String> pair){
      final PsiParameter parameter=pair.first;
      final String oldParamName=pair.second;
      final int idx=Arrays.binarySearch(oldParameterNames,oldParamName);
      return idx >= 0 && idx == method.getParameterList().getParameterIndex(parameter) && changeInfo.getNewParameters()[idx].getOldIndex() == idx;
    }
  }
);
}
