{
  File tempDir=new WriteAction<File>(){
    @Override protected void run(    Result<File> result) throws Throwable {
      File res=createTempDirectory();
      result.setResult(res);
    }
  }
.execute().getResultObject();
  final VirtualFile vDir=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempDir);
  assertNotNull(vDir);
  assertTrue(vDir.isDirectory());
  for (int i=0; i < 10000; i++) {
    final String name=i + ".txt";
    new WriteCommandAction.Simple(getProject()){
      @Override protected void run() throws Throwable {
        vDir.createChildData(vDir,name);
      }
    }
.execute().throwException();
  }
  final VirtualFile theChild=vDir.findChild("5111.txt");
  PlatformTestUtil.startPerformanceTest("find child is slow",450,new ThrowableRunnable(){
    @Override public void run() throws Throwable {
      for (int i=0; i < 1000000; i++) {
        VirtualFile child=vDir.findChild("5111.txt");
        assertSame(theChild,child);
      }
    }
  }
).assertTiming();
}
