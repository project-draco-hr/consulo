{
  File file1=new File(TestPathUtil.getTestDataPath());
  file1=new File(file1,"vfs");
  file1=new File(file1,"findFileByUrl");
  VirtualFile file0=VfsUtil.findFileByURL(file1.toURI().toURL());
  assertNotNull(file0);
  assertTrue(file0.isDirectory());
  final VirtualFile[] children=file0.getChildren();
  List<VirtualFile> list=new ArrayList<VirtualFile>();
  final VirtualFileFilter fileFilter=new VirtualFileFilter(){
    @Override public boolean accept(    VirtualFile file){
      return !file.getName().endsWith(".new");
    }
  }
;
  for (  VirtualFile child : children) {
    if (fileFilter.accept(child)) {
      list.add(child);
    }
  }
  assertEquals(2,list.size());
  File file2=new File(file1,"test.zip");
  URL url2=file2.toURI().toURL();
  url2=new URL("jar","",url2.toExternalForm() + "!/");
  url2=new URL(url2,"com/intellij/installer");
  url2=new URL(url2.toExternalForm());
  file0=VfsUtil.findFileByURL(url2);
  assertNotNull(file0);
  assertTrue(file0.isDirectory());
  File file3=new File(file1,"1.txt");
  file0=VfsUtil.findFileByURL(file3.toURI().toURL());
  String content=VfsUtilCore.loadText(file0);
  assertNotNull(file0);
  assertFalse(file0.isDirectory());
  assertEquals(content,"test text");
}
