{
  final CommandProcessor commandProcessor=CommandProcessor.getInstance();
  final boolean[] canClose={true};
  for (  final Project project : ProjectManagerEx.getInstanceEx().getOpenProjects()) {
    try {
      commandProcessor.executeCommand(project,new Runnable(){
        @Override public void run(){
          final ProjectManagerImpl manager=(ProjectManagerImpl)ProjectManagerEx.getInstanceEx();
          if (!manager.closeProject(project,true,true,checkCanCloseProject)) {
            canClose[0]=false;
          }
        }
      }
,ApplicationBundle.message("command.exit"),null);
    }
 catch (    Throwable e) {
      LOGGER.error(e);
    }
    if (!canClose[0]) {
      return false;
    }
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      Disposer.dispose(CompilerServerApplication.this);
    }
  }
);
  Disposer.assertIsEmpty();
  return true;
}
