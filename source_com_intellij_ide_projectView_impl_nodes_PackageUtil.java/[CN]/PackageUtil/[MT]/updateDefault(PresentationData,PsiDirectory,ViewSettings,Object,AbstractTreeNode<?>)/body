{
  PsiPackage aPackage=psiDirectory.getPackage();
  final VirtualFile virtualFile=psiDirectory.getVirtualFile();
  if (aPackage != null && !isSourceRoot(psiDirectory) && !settings.isFlattenPackages() && settings.isHideEmptyMiddlePackages() && !(node.getParent() instanceof LibraryGroupNode) && TreeViewUtil.isEmptyMiddlePackage(psiDirectory,true)) {
    node.setValue(null);
    return;
  }
  final boolean isWritable=virtualFile.isWritable();
  final String name;
  if (parentValue instanceof Project) {
    name=psiDirectory.getVirtualFile().getPresentableUrl();
  }
 else {
    if (isFQNameShown(psiDirectory,parentValue,settings)) {
      name=settings.isAbbreviatePackageNames() ? TreeViewUtil.calcAbbreviatedPackageFQName(aPackage) : aPackage.getQualifiedName();
    }
 else {
      if (!isSourceRoot(psiDirectory) && aPackage != null && aPackage.getQualifiedName().length() > 0 && parentValue instanceof PsiDirectory) {
        final PsiPackage parentPackageInTree=((PsiDirectory)parentValue).getPackage();
        PsiPackage parentPackage=aPackage.getParentPackage();
        final StringBuilder buf=new StringBuilder();
        buf.append(aPackage.getName());
        while (parentPackage != null && !parentPackage.equals(parentPackageInTree)) {
          final String parentPackageName=parentPackage.getName();
          if (parentPackageName == null || "".equals(parentPackageName)) {
            break;
          }
          buf.insert(0,".");
          buf.insert(0,parentPackageName);
          parentPackage=parentPackage.getParentPackage();
        }
        name=buf.toString();
      }
 else {
        name=psiDirectory.getName();
      }
    }
  }
  final String packagePrefix=isSourceRoot(psiDirectory) && aPackage != null ? aPackage.getQualifiedName() : "";
  data.setPresentableText(name);
  data.setLocationString(packagePrefix);
  for (  final IconProvider provider : psiDirectory.getProject().getComponents(IconProvider.class)) {
    final Icon openIcon=provider.getIcon(psiDirectory,Iconable.ICON_FLAG_OPEN);
    if (openIcon != null) {
      final Icon closedIcon=provider.getIcon(psiDirectory,Iconable.ICON_FLAG_CLOSED);
      if (closedIcon != null) {
        data.setOpenIcon(addReadMark(openIcon,isWritable));
        data.setClosedIcon(addReadMark(closedIcon,isWritable));
        return;
      }
    }
  }
  boolean inTestSource=isInTestSource(virtualFile,psiDirectory.getProject());
  boolean isSourceOrTestRoot=isSourceOrTestRoot(virtualFile,psiDirectory.getProject());
  boolean isPackage=isPackage(psiDirectory);
  data.setOpenIcon(addReadMark(isSourceOrTestRoot ? IconSet.getSourceRootIcon(inTestSource,true) : isPackage ? IconSet.getSourceFolderIcon(inTestSource,true) : Icons.DIRECTORY_OPEN_ICON,isWritable));
  data.setClosedIcon(addReadMark(isSourceOrTestRoot ? IconSet.getSourceRootIcon(inTestSource,false) : isPackage ? IconSet.getSourceFolderIcon(inTestSource,false) : Icons.DIRECTORY_CLOSED_ICON,isWritable));
}
