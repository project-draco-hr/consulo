{
  PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage(psiDirectory);
  final VirtualFile virtualFile=psiDirectory.getVirtualFile();
  if (aPackage != null && !isSourceRoot(psiDirectory) && !settings.isFlattenPackages() && settings.isHideEmptyMiddlePackages() && !(node.getParent() instanceof LibraryGroupNode) && TreeViewUtil.isEmptyMiddlePackage(psiDirectory,true)) {
    node.setValue(null);
    return;
  }
  final boolean isWritable=virtualFile.isWritable();
  PsiPackage parentPackage;
  if (!isSourceRoot(psiDirectory) && aPackage != null && aPackage.getQualifiedName().length() > 0 && parentValue instanceof PsiDirectory) {
    parentPackage=JavaDirectoryService.getInstance().getPackage(((PsiDirectory)parentValue));
  }
 else {
    parentPackage=null;
  }
  final String name=parentValue instanceof Project ? psiDirectory.getVirtualFile().getPresentableUrl() : getNodeName(settings,aPackage,parentPackage,psiDirectory.getName(),isFQNameShown(psiDirectory,parentValue,settings));
  final String packagePrefix=isSourceRoot(psiDirectory) && aPackage != null ? aPackage.getQualifiedName() : "";
  data.setPresentableText(name);
  data.setLocationString(packagePrefix);
  for (  final IconProvider provider : ApplicationManager.getApplication().getComponents(IconProvider.class)) {
    final Icon openIcon=provider.getIcon(psiDirectory,Iconable.ICON_FLAG_OPEN);
    if (openIcon != null) {
      final Icon closedIcon=provider.getIcon(psiDirectory,Iconable.ICON_FLAG_CLOSED);
      if (closedIcon != null) {
        data.setOpenIcon(addReadMark(openIcon,isWritable));
        data.setClosedIcon(addReadMark(closedIcon,isWritable));
        return;
      }
    }
  }
  boolean inTestSource=isInTestSource(virtualFile,psiDirectory.getProject());
  boolean isSourceOrTestRoot=isSourceOrTestRoot(virtualFile,psiDirectory.getProject());
  boolean isPackage=isPackage(psiDirectory);
  data.setOpenIcon(addReadMark(isSourceOrTestRoot ? IconSet.getSourceRootIcon(inTestSource,true) : isPackage ? IconSet.getSourceFolderIcon(inTestSource,true) : Icons.DIRECTORY_OPEN_ICON,isWritable));
  data.setClosedIcon(addReadMark(isSourceOrTestRoot ? IconSet.getSourceRootIcon(inTestSource,false) : isPackage ? IconSet.getSourceFolderIcon(inTestSource,false) : Icons.DIRECTORY_CLOSED_ICON,isWritable));
}
