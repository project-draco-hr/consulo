{
  final PsiManager psiManager=PsiManager.getInstance(project);
  final List<AbstractTreeNode> children=new ArrayList<AbstractTreeNode>();
  final Set<PsiPackage> topLevelPackages=new HashSet<PsiPackage>();
  for (  final VirtualFile root : sourceRoots) {
    final PsiDirectory directory=psiManager.findDirectory(root);
    if (directory == null) {
      continue;
    }
    final PsiPackage directoryPackage=directory.getPackage();
    if (directoryPackage == null || isPackageDefault(directoryPackage)) {
      final PsiDirectory[] subdirectories=directory.getSubdirectories();
      for (      PsiDirectory subdirectory : subdirectories) {
        final PsiPackage aPackage=subdirectory.getPackage();
        if (aPackage != null && !isPackageDefault(aPackage)) {
          topLevelPackages.add(aPackage);
        }
      }
      children.addAll(getDirectoryChildren(directory,settings,false));
    }
 else {
      topLevelPackages.add(directoryPackage);
    }
  }
  for (  final PsiPackage topLevelPackage : topLevelPackages) {
    addPackageAsChild(children,topLevelPackage,module,settings,inLibrary);
  }
  return children;
}
