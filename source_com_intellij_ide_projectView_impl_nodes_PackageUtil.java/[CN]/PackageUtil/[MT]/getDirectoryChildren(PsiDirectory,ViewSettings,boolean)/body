{
  final List<AbstractTreeNode> children=new ArrayList<AbstractTreeNode>();
  final Project project=psiDirectory.getManager().getProject();
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  final Module module=fileIndex.getModuleForFile(psiDirectory.getVirtualFile());
  final ModuleFileIndex moduleFileIndex=module == null ? null : ModuleRootManager.getInstance(module).getFileIndex();
  if (!settings.isFlattenPackages() || psiDirectory.getPackage() == null) {
    processPsiDirectoryChildren(psiDirectory,psiDirectory.getChildren(),children,fileIndex,moduleFileIndex,settings,withSubDirectories);
  }
 else {
    final PsiDirectory parentDir=psiDirectory.getParentDirectory();
    if (parentDir == null || parentDir.getPackage() == null && withSubDirectories) {
      addAllSubpackages(children,psiDirectory,moduleFileIndex,settings);
    }
    PsiDirectory[] subdirs=psiDirectory.getSubdirectories();
    for (    PsiDirectory subdir : subdirs) {
      if (subdir.getPackage() != null) {
        continue;
      }
      if (moduleFileIndex != null) {
        if (!moduleFileIndex.isInContent(subdir.getVirtualFile())) {
          continue;
        }
      }
      if (withSubDirectories) {
        children.add(new PsiDirectoryNode(project,subdir,settings));
      }
    }
    processPsiDirectoryChildren(psiDirectory,psiDirectory.getFiles(),children,fileIndex,moduleFileIndex,settings,withSubDirectories);
  }
  return children;
}
