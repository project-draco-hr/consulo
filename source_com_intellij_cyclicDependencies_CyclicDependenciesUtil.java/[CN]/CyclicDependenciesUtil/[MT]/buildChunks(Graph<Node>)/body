{
  final DFSTBuilder<Node> dfstBuilder=new DFSTBuilder<Node>(graph);
  final LinkedList<Pair<Integer,Integer>> sccs=dfstBuilder.getSCCs();
  List<Chunk<Node>> chunks=new ArrayList<Chunk<Node>>();
  for (Iterator<Pair<Integer,Integer>> i=sccs.iterator(); i.hasNext(); ) {
    Set<Node> packs=new HashSet<Node>();
    final Pair<Integer,Integer> p=i.next();
    final Integer biT=p.getFirst();
    final int binum=biT.intValue();
    for (int j=0; j < p.getSecond().intValue(); j++) {
      packs.add(dfstBuilder.getNodeByTNumber(binum + j));
    }
    chunks.add(new Chunk<Node>(packs));
  }
  return chunks;
}
