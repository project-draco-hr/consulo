{
  panel=new JPanel();
  panel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  panel.setLayout(new GridLayoutManager(7,1,new Insets(0,0,0,0),-1,5,false,false));
  JPanel header=new JPanel();
  header.setLayout(new GridLayoutManager(1,6,new Insets(0,0,0,0),-1,-1,false,false));
  panel.add(header,new GridConstraints(0,0,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,3,null,null,null));
  packageTest=new JRadioButton();
  packageTest.setText("All in Package");
  packageTest.setMnemonic('P');
  packageTest.setSelected(false);
  SupportCode.setDisplayedMnemonicIndex(packageTest,7);
  packageTest.setActionCommand("All Tests in Package");
  header.add(packageTest,new GridConstraints(0,1,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_WANT_GROW,SIZEPOLICY_FIXED,null,null,null));
  suiteTest=new JRadioButton();
  suiteTest.setText("Suite");
  suiteTest.setMnemonic('S');
  SupportCode.setDisplayedMnemonicIndex(suiteTest,1);
  suiteTest.setSelected(false);
  suiteTest.setActionCommand("Suite");
  suiteTest.setEnabled(true);
  header.add(suiteTest,new GridConstraints(0,2,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_WANT_GROW,SIZEPOLICY_FIXED,null,null,null));
  groupTest=new JRadioButton();
  groupTest.setText("Group");
  groupTest.setMnemonic('G');
  SupportCode.setDisplayedMnemonicIndex(groupTest,1);
  groupTest.setSelected(false);
  groupTest.setActionCommand("Test Group");
  groupTest.setEnabled(true);
  header.add(groupTest,new GridConstraints(0,3,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_WANT_GROW,SIZEPOLICY_FIXED,null,null,null));
  classTest=new JRadioButton();
  classTest.setText("Class");
  classTest.setMnemonic('L');
  SupportCode.setDisplayedMnemonicIndex(classTest,1);
  classTest.setSelected(false);
  classTest.setActionCommand("Test Class");
  classTest.setEnabled(true);
  header.add(classTest,new GridConstraints(0,4,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_WANT_GROW,SIZEPOLICY_FIXED,null,null,null));
  methodTest=new JRadioButton();
  methodTest.setText("Method");
  methodTest.setMnemonic('T');
  SupportCode.setDisplayedMnemonicIndex(methodTest,2);
  methodTest.setActionCommand("Test Method");
  header.add(methodTest,new GridConstraints(0,5,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_WANT_GROW,SIZEPOLICY_FIXED,null,null,null));
  JLabel testLabel=new JLabel();
  testLabel.setText("Test:  ");
  testLabel.setIconTextGap(4);
  testLabel.setHorizontalAlignment(2);
  testLabel.setHorizontalTextPosition(2);
  header.add(testLabel,new GridConstraints(0,0,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_FIXED,SIZEPOLICY_FIXED,null,null,null));
  JPanel top=new JPanel();
  top.setLayout(new GridLayoutManager(1,1,new Insets(0,0,0,0),-1,-1,false,false));
  panel.add(top,new GridConstraints(1,0,1,1,ANCHOR_CENTER,FILL_BOTH,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,null,null,null));
  JPanel bottom=new JPanel();
  bottom.setLayout(new GridLayoutManager(4,1,new Insets(5,5,5,5),-1,-1,false,false));
  top.add(bottom,new GridConstraints(0,0,1,1,ANCHOR_NORTH,FILL_HORIZONTAL,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,new Dimension(-1,120),null,null));
  bottom.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),"Test"));
  classField=new LabeledComponent<TextFieldWithBrowseButton>();
  classField.setComponent(new TextFieldWithBrowseButton());
  classField.setText("&Class:");
  bottom.add(classField,new GridConstraints(1,0,1,1,ANCHOR_CENTER,FILL_HORIZONTAL,SIZEPOLICY_WANT_GROW,SIZEPOLICY_FIXED,null,null,null));
  methodField=new LabeledComponent<TextFieldWithBrowseButton>();
  methodField.setText("M&ethod:");
  methodField.setComponent(new TextFieldWithBrowseButton());
  bottom.add(methodField,new GridConstraints(2,0,1,1,ANCHOR_CENTER,FILL_HORIZONTAL,SIZEPOLICY_WANT_GROW,SIZEPOLICY_FIXED,null,null,null));
  groupField=new LabeledComponent<TextFieldWithBrowseButton>();
  groupField.setText("&Group:");
  groupField.setComponent(new TextFieldWithBrowseButton());
  bottom.add(groupField,new GridConstraints(1,0,1,1,ANCHOR_CENTER,FILL_HORIZONTAL,SIZEPOLICY_WANT_GROW,SIZEPOLICY_FIXED,null,null,null));
  suiteField=new LabeledComponent<TextFieldWithBrowseButton>();
  suiteField.setText("S&uite:");
  suiteField.setComponent(new TextFieldWithBrowseButton());
  bottom.add(suiteField,new GridConstraints(1,0,1,1,ANCHOR_CENTER,FILL_HORIZONTAL,SIZEPOLICY_WANT_GROW,SIZEPOLICY_FIXED,null,null,null));
  packagePanel=new JPanel();
  packagePanel.setLayout(new GridLayoutManager(2,1,new Insets(0,0,0,0),-1,-1,false,false));
  packageField=new LabeledComponent<TextFieldWithBrowseButton>();
  packageField.setText("Packa&ge:");
  packageField.setVisible(true);
  packageField.setEnabled(true);
  packageField.setComponent(new TextFieldWithBrowseButton());
  packagePanel.add(packageField,new GridConstraints(0,0,1,1,ANCHOR_CENTER,FILL_HORIZONTAL,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_FIXED,null,null,null));
  bottom.add(packagePanel,new GridConstraints(0,0,1,1,ANCHOR_CENTER,FILL_BOTH,SIZEPOLICY_WANT_GROW,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,null,null,null));
  JPanel jpanel5=new JPanel();
  jpanel5.setLayout(new GridLayoutManager(1,4,new Insets(0,0,0,0),-1,-1,false,false));
  packagePanel.add(jpanel5,new GridConstraints(1,0,1,1,ANCHOR_CENTER,FILL_BOTH,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,null,null,null));
  jpanel5.add(new JLabel("Search for tests:"),new GridConstraints(0,0,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_FIXED,SIZEPOLICY_FIXED,null,null,null));
  packagesInProject=new JRadioButton();
  packagesInProject.setText("In whole project");
  packagesInProject.setMnemonic('J');
  SupportCode.setDisplayedMnemonicIndex(packagesInProject,12);
  jpanel5.add(packagesInProject,new GridConstraints(0,1,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_FIXED,null,null,null));
  packagesInModule=new JRadioButton();
  packagesInModule.setText("In single module");
  packagesInModule.setMnemonic('S');
  SupportCode.setDisplayedMnemonicIndex(packagesInModule,3);
  jpanel5.add(packagesInModule,new GridConstraints(0,2,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_FIXED,null,null,null));
  packagesAcrossModules=new JRadioButton();
  packagesAcrossModules.setText("Across module dependencies");
  jpanel5.add(packagesAcrossModules,new GridConstraints(0,3,1,1,ANCHOR_WEST,FILL_NONE,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_FIXED,null,null,null));
  bottom.add(new Spacer(),new GridConstraints(3,0,1,1,ANCHOR_CENTER,FILL_VERTICAL,SIZEPOLICY_CAN_SHRINK,SIZEPOLICY_CAN_GROW,null,null,null));
  panel.add(new Spacer(),new GridConstraints(3,0,1,1,ANCHOR_CENTER,FILL_VERTICAL,SIZEPOLICY_CAN_SHRINK,SIZEPOLICY_CAN_GROW,null,null,null));
  TabbedPaneWrapper propertyTabs=new TabbedPaneWrapper();
  JPanel customJDKPanel=new JPanel();
  customJDKPanel.setLayout(new GridLayoutManager(5,1,new Insets(2,2,2,2),-1,-1,false,false));
  commonParameters=new CommonJavaParameters();
  customJDKPanel.add(commonParameters,new GridConstraints(0,0,1,1,ANCHOR_CENTER,FILL_HORIZONTAL,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_FIXED,null,null,null));
  moduleClasspath=new LabeledComponent<JComboBox>();
  moduleClasspath.setText("Use classpath and JDK of m&odule:");
  moduleClasspath.setEnabled(true);
  moduleClasspath.setComponent(new JComboBox());
  moduleClasspath.setLabelInsets(new Insets(2,0,2,0));
  JPanel alternateJDKPanelHolder=new JPanel();
  customJDKPanel.add(alternateJDKPanelHolder,new GridConstraints(1,0,1,1,ANCHOR_NORTH,FILL_BOTH,SIZEPOLICY_CAN_SHRINK,SIZEPOLICY_CAN_SHRINK,null,null,null));
  customJDKPanel.add(moduleClasspath,new GridConstraints(2,0,1,1,ANCHOR_NORTH,FILL_HORIZONTAL,SIZEPOLICY_CAN_SHRINK,SIZEPOLICY_CAN_SHRINK,null,null,null));
  alternateJDK=new AlternativeJREPanel();
  customJDKPanel.add(alternateJDK,new GridConstraints(3,0,1,1,ANCHOR_NORTH,FILL_HORIZONTAL,FILL_BOTH,SIZEPOLICY_CAN_SHRINK,null,null,null));
  customJDKPanel.add(new Spacer(),new GridConstraints(4,0,1,1,ANCHOR_NORTH,FILL_VERTICAL,SIZEPOLICY_CAN_SHRINK,SIZEPOLICY_CAN_GROW,null,null,null));
  LabeledComponent<JPanel> propertiesScrollPane=new LabeledComponent<JPanel>();
  propertiesScrollPane.setText("Set test &parameters:");
  propertiesScrollPane.setEnabled(true);
  propertiesTableModel=new TestNGParametersTableModel();
  JPanel testNGPropertiesPanel=new JPanel();
  testNGPropertiesPanel.setLayout(new BorderLayout(1,1));
  testNGPropertiesPanel.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  outputDirectory=new LabeledComponent<TextFieldWithBrowseButton>();
  outputDirectory.setText("&Output Directory:");
  TextFieldWithBrowseButton outputDirectoryButton=new TextFieldWithBrowseButton();
  outputDirectory.setComponent(outputDirectoryButton);
  outputDirectoryButton.addBrowseFolderListener("TestNG","Select test output directory",project,new FileChooserDescriptor(false,true,false,false,false,false));
  bottom.add(outputDirectory,new GridConstraints(3,0,1,1,ANCHOR_WEST,FILL_HORIZONTAL,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,3,null,null,null));
  propertiesFile=new LabeledComponent<TextFieldWithBrowseButton>();
  propertiesFile.setText("&Properties file:");
  TextFieldWithBrowseButton textFieldWithBrowseButton=new TextFieldWithBrowseButton();
  propertiesFile.setComponent(textFieldWithBrowseButton);
  FileChooserDescriptor propertiesFileDescriptor=new FileChooserDescriptor(true,false,false,false,false,false){
    @Override public boolean isFileVisible(    VirtualFile virtualFile,    boolean showHidden){
      if (!showHidden && virtualFile.getName().charAt(0) == '.')       return false;
      return virtualFile.isDirectory() || "properties".equals(virtualFile.getExtension());
    }
  }
;
  textFieldWithBrowseButton.addBrowseFolderListener("TestNG","Select .properties file for test properties",project,propertiesFileDescriptor);
  testNGPropertiesPanel.add(propertiesFile,BorderLayout.NORTH);
  JPanel testNGPropertiesTablePanel=new JPanel();
  testNGPropertiesTablePanel.setLayout(new GridLayoutManager(3,2,new Insets(0,0,0,0),-1,-1));
  propertiesTableView=new TableView(propertiesTableModel);
  propertiesTableView.setShowGrid(true);
  JScrollPane pane=ScrollPaneFactory.createScrollPane(propertiesTableView);
  pane.setPreferredSize(new Dimension(pane.getPreferredSize().width,200));
  testNGPropertiesTablePanel.add(pane,new GridConstraints(0,0,3,1,ANCHOR_NORTH,FILL_HORIZONTAL,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,null,null,null));
  JButton addParameterButton=new JButton("Add");
  addParameterButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      propertiesTableModel.addParameter();
    }
  }
);
  JButton removeParameterButton=new JButton("Remove");
  removeParameterButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      for (      int row : propertiesTableView.getSelectedRows()) {
        propertiesTableModel.removeProperty(row);
      }
    }
  }
);
  testNGPropertiesTablePanel.add(addParameterButton,new GridConstraints(0,1,1,1,ANCHOR_CENTER,FILL_HORIZONTAL,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_FIXED,null,null,null));
  testNGPropertiesTablePanel.add(removeParameterButton,new GridConstraints(1,1,1,1,ANCHOR_CENTER,FILL_HORIZONTAL,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_FIXED,null,null,null));
  testNGPropertiesTablePanel.add(new Spacer(),new GridConstraints(2,1,1,1,ANCHOR_CENTER,FILL_VERTICAL,1,SIZEPOLICY_CAN_GROW,null,null,null));
  propertiesScrollPane.setComponent(testNGPropertiesTablePanel);
  testNGPropertiesPanel.add(testNGPropertiesTablePanel,BorderLayout.CENTER);
  propertyTabs.addTab("JDK Settings",customJDKPanel);
  propertyTabs.addTab("Test Parameters",testNGPropertiesPanel);
  panel.add(propertyTabs.getComponent(),new GridConstraints(6,0,1,1,ANCHOR_CENTER,FILL_BOTH,SIZEPOLICY_CAN_SHRINK | SIZEPOLICY_CAN_GROW,SIZEPOLICY_CAN_SHRINK,null,null,null));
}
