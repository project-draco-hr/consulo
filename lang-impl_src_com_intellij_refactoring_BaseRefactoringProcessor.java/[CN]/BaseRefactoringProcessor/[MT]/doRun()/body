{
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  final Ref<UsageInfo[]> refUsages=new Ref<UsageInfo[]>();
  final Runnable findUsagesRunnable=new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        public void run(){
          refUsages.set(findUsages());
        }
      }
);
    }
  }
;
  if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(findUsagesRunnable,RefactoringBundle.message("progress.text"),true,myProject)) {
    return;
  }
  LOG.assertTrue(!refUsages.isNull());
  if (!preprocessUsages(refUsages))   return;
  final UsageInfo[] usages=refUsages.get();
  UsageViewDescriptor descriptor=createUsageViewDescriptor(usages);
  boolean isPreview=isPreviewUsages(usages);
  if (!isPreview) {
    isPreview=!ensureElementsWritable(usages,descriptor) || UsageViewUtil.hasReadOnlyUsages(usages);
    if (isPreview) {
      WindowManager.getInstance().getStatusBar(myProject).setInfo(RefactoringBundle.message("readonly.occurences.found"));
    }
  }
  if (isPreview) {
    previewRefactoring(usages);
  }
 else {
    execute(usages);
  }
}
