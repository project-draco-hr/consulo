{
  setupLoadingFilter();
  PsiClass throwable=myJavaFacade.findClass("java.lang.Throwable",GlobalSearchScope.allScope(myProject));
  PsiClass[] inheritors=ClassInheritorsSearch.search(throwable,GlobalSearchScope.projectScope(myProject),true).toArray(PsiClass.EMPTY_ARRAY);
  assertEquals(1,inheritors.length);
  assertTrue(inheritors[0] instanceof PsiAnonymousClass);
  PsiAnonymousClass anonClass=(PsiAnonymousClass)inheritors[0];
  PsiClassType baseClassRef=anonClass.getBaseClassType();
  assertEquals("Throwable",baseClassRef.getPresentableText());
  assertEquals(throwable,baseClassRef.resolve());
  assertEquals("java.lang.Throwable",baseClassRef.getCanonicalText());
  teardownLoadingFilter();
  assertTrue(anonClass.getParent() instanceof PsiNewExpression);
}
