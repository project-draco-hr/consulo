{
  final PsiManager psiManager=oldInterface.getManager();
  final PsiSearchHelper searchHelper=psiManager.getSearchHelper();
  final PsiElementFactory elementFactory=JavaPsiFacade.getInstance(psiManager.getProject()).getElementFactory();
  final PsiJavaCodeReferenceElement oldInterfaceReference=elementFactory.createClassReferenceElement(oldInterface);
  final SearchScope searchScope=oldInterface.getUseScope();
  final Collection<PsiClass> inheritors=ClassInheritorsSearch.search(oldInterface,searchScope,false).findAll();
  final Project project=oldInterface.getProject();
  final boolean succes=CommonRefactoringUtil.checkReadOnlyStatusRecursively(project,inheritors,false);
  if (!succes) {
    return false;
  }
  for (  PsiClass inheritor : inheritors) {
    final PsiReferenceList implementsList=inheritor.getImplementsList();
    final PsiReferenceList extendsList=inheritor.getExtendsList();
    if (implementsList != null) {
      moveReference(implementsList,extendsList,oldInterfaceReference);
    }
  }
  return true;
}
