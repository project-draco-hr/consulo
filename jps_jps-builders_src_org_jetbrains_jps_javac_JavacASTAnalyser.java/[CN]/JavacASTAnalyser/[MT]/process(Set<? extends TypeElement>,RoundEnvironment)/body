{
  final Set<? extends Element> elements=roundEnv.getRootElements();
  for (  Element element : elements) {
    if (!(element instanceof TypeElement)) {
      continue;
    }
    final TypeElement typeElement=(TypeElement)element;
    final ImportsCollector importsCollector=new ImportsCollector();
    importsCollector.scan(myTrees.getPath(typeElement).getParentPath().getLeaf(),myTrees);
    final Set<String> imports=importsCollector.getImports();
    final Set<String> staticImports=importsCollector.getStaticImports();
    if (!imports.isEmpty() || !staticImports.isEmpty()) {
      final String className=typeElement.getQualifiedName().toString();
      myOutputConsumer.registerImports(className,imports,staticImports);
    }
    break;
  }
  return mySuppressOtherProcessors;
}
