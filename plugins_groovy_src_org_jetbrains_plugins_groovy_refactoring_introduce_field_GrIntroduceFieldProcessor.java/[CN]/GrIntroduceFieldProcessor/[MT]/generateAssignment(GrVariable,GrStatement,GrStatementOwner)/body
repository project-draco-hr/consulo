{
  final GrExpression initializer=getInitializer();
  GrAssignmentExpression init=(GrAssignmentExpression)GroovyPsiElementFactory.getInstance(context.getProject()).createExpressionFromText(settings.getName() + " = " + initializer.getText());
  GrStatementOwner block;
  if (anchor != null) {
    anchor=GroovyRefactoringUtil.addBlockIntoParent(anchor);
    LOG.assertTrue(anchor.getParent() instanceof GrStatementOwner);
    block=(GrStatementOwner)anchor.getParent();
  }
 else {
    block=defaultContainer;
  }
  init=(GrAssignmentExpression)block.addStatementBefore(init,anchor);
  replaceOccurrence(field,init.getLValue(),(PsiClass)context.getScope());
}
