{
  Object cachedResult=myRemotes.get(interfaceClass);
  if (cachedResult != null) {
    return (I)cachedResult;
  }
  S settings=getSettings();
  if (settings != null) {
    impl.setNotificationListener(getNotificationListener());
    impl.setSettings(settings);
  }
  impl.setNotificationListener(getNotificationListener());
  try {
    I created=createService(interfaceClass,impl);
    I stored=(I)myRemotes.putIfAbsent(interfaceClass,created);
    return stored == null ? created : stored;
  }
 catch (  RemoteException e) {
    Object raceResult=myRemotes.get(interfaceClass);
    if (raceResult != null) {
      return (I)raceResult;
    }
 else {
      throw new IllegalStateException(String.format("Can't prepare remote service for interface '%s', implementation '%s'",interfaceClass,impl),e);
    }
  }
}
