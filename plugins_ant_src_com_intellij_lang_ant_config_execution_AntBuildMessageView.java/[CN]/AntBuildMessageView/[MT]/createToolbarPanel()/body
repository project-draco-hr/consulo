{
  RunAction runAction=new RunAction(this);
  runAction.registerCustomShortcutSet(CommonShortcuts.getRerun(),this);
  DefaultActionGroup leftActionGroup=new DefaultActionGroup();
  leftActionGroup.add(runAction);
  leftActionGroup.add(new PauseOutputAction(this));
  leftActionGroup.add(new StopAction(this));
  leftActionGroup.add(new CloseAction());
  leftActionGroup.add(new PreviousOccurenceToolbarAction(this));
  leftActionGroup.add(new NextOccurenceToolbarAction(this));
  leftActionGroup.add(CommonActionsFactory.getCommonActionsFactory().createContextHelpAction(HelpID.ANT));
  DefaultActionGroup rightActionGroup=new DefaultActionGroup();
  rightActionGroup.add(new ChangeViewAction(this));
  rightActionGroup.add(new VerboseAction(this));
  rightActionGroup.add(new ExpandAllToolbarAction(myTreeExpander));
  rightActionGroup.add(new CollapseAllToolbarAction(myTreeExpander));
  rightActionGroup.add(myTreeView.createToggleAutoscrollAction());
  myLeftToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.ANT_MESSAGES_TOOLBAR,leftActionGroup,false);
  JPanel toolbarPanel=new JPanel(new GridLayout(1,2,2,0));
  toolbarPanel.add(myLeftToolbar.getComponent());
  myRightToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.ANT_MESSAGES_TOOLBAR,rightActionGroup,false);
  toolbarPanel.add(myRightToolbar.getComponent());
  return toolbarPanel;
}
