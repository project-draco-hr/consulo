{
  final boolean aborted=isProgressAborted || myIsAborted;
  final String message=getFinishStatusText(aborted,buildTimeInMilliseconds);
  dispatcher.processOutput(new Printable(){
    @Override public void printOn(    Printer printer){
      if (!myProject.isDisposed()) {
        addCommand(new FinishBuildCommand(message));
        final StatusBar statusBar=WindowManager.getInstance().getStatusBar(myProject);
        if (statusBar != null) {
          statusBar.setInfo(message);
        }
      }
    }
  }
);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      if (!myIsOutputPaused) {
        new OutputFlusher().doFlush();
      }
      final AntBuildFileBase buildFile=myBuildFile;
      if (buildFile != null) {
        if (getErrorCount() == 0 && buildFile.isViewClosedWhenNoErrors()) {
          close();
        }
 else         if (getErrorCount() > 0) {
          myTreeView.scrollToFirstError();
        }
 else {
          myTreeView.scrollToStatus();
        }
      }
 else {
        myTreeView.scrollToLastMessage();
      }
      VirtualFileManager.getInstance().asyncRefresh(new Runnable(){
        public void run(){
          antBuildListener.buildFinished(aborted ? AntBuildListener.ABORTED : AntBuildListener.FINISHED_SUCCESSFULLY,getErrorCount());
        }
      }
);
    }
  }
);
}
