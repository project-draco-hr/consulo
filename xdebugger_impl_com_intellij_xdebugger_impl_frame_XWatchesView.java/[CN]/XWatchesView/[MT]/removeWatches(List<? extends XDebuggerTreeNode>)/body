{
  XDebuggerTreeNode root=getTree().getRoot();
  if (!(root instanceof WatchesRootNode))   return;
  final WatchesRootNode watchesRoot=(WatchesRootNode)root;
  List<? extends XDebuggerTreeNode> children=watchesRoot.getAllChildren();
  int minIndex=Integer.MAX_VALUE;
  if (children != null) {
    for (    XDebuggerTreeNode node : nodes) {
      int index=children.indexOf(node);
      if (index != -1) {
        minIndex=Math.min(minIndex,index);
        myWatchExpressions.remove(index);
      }
    }
  }
  watchesRoot.removeChildren(nodes);
  List<? extends XDebuggerTreeNode> newChildren=watchesRoot.getAllChildren();
  if (newChildren != null && newChildren.size() > 0) {
    XDebuggerTreeNode node=minIndex < newChildren.size() ? newChildren.get(minIndex) : newChildren.get(newChildren.size() - 1);
    TreeUtil.selectNode(myTreePanel.getTree(),node);
  }
}
