{
  lexer.start(new CharArrayCharSequence(text));
  skipWhiteSpaceAndComments(lexer);
  if (lexer.getTokenType() == JavaTokenType.PACKAGE_KEYWORD) {
    advanceLexer(lexer);
    if (readPackageName(text,lexer) == null) {
      return;
    }
  }
  while (true) {
    if (lexer.getTokenType() == JavaTokenType.SEMICOLON) {
      advanceLexer(lexer);
    }
    if (lexer.getTokenType() != JavaTokenType.IMPORT_KEYWORD) {
      return;
    }
    advanceLexer(lexer);
    boolean isStaticImport=false;
    if (lexer.getTokenType() == JavaTokenType.STATIC_KEYWORD) {
      isStaticImport=true;
      advanceLexer(lexer);
    }
    final String packageName=readPackageName(text,lexer);
    if (packageName == null) {
      return;
    }
    if (packageName.endsWith(".*")) {
      usedPackages.add(myInterner.intern(packageName.substring(0,packageName.length() - ".*".length())));
    }
 else {
      int lastDot=packageName.lastIndexOf('.');
      if (lastDot > 0) {
        String _packageName=packageName.substring(0,lastDot);
        if (isStaticImport) {
          lastDot=_packageName.lastIndexOf('.');
          _packageName=lastDot > 0 ? _packageName.substring(0,lastDot) : null;
        }
        if (_packageName != null) {
          usedPackages.add(myInterner.intern(_packageName));
        }
      }
    }
  }
}
