{
  ChameleonTransforming.transformChildren(myNode);
  final ArrayList<Block> result=new ArrayList<Block>();
  Alignment childAlignment=createChildAlignment();
  Wrap childWrap=createChildWrap();
  ASTNode child=myNode.getFirstChildNode();
  ArrayList<Block> syntBlock=new ArrayList<Block>();
  while (child != null) {
    while (child != null && !isPartOfCodeBlock(child)) {
      if (!containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {
        child=processChild(syntBlock,child,childAlignment,childWrap);
      }
      if (child != null) {
        child=child.getTreeNext();
      }
    }
    if (!syntBlock.isEmpty()) {
      result.add(new SynteticCodeBlock(syntBlock,null,mySettings,null,null));
      syntBlock=new ArrayList<Block>();
    }
    while (child != null && isPartOfCodeBlock(child)) {
      if (!containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {
        child=processChild(result,child,childAlignment,childWrap);
      }
      if (child != null) {
        child=child.getTreeNext();
      }
    }
  }
  return result;
}
