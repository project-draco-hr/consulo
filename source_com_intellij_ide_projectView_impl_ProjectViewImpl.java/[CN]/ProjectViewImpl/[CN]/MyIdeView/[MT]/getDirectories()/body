{
  final AbstractProjectViewPane viewPane=getCurrentProjectViewPane();
  DefaultMutableTreeNode node=viewPane != null ? viewPane.getSelectedNode() : null;
  while (true) {
    if (node == null) {
      break;
    }
    final Object userObject=node.getUserObject();
    if (userObject instanceof PsiDirectoryNode || userObject instanceof ProjectViewModuleNode) {
      break;
    }
    node=(DefaultMutableTreeNode)node.getParent();
  }
  if (node == null) {
    return PsiDirectory.EMPTY_ARRAY;
  }
  final Object userObject=node.getUserObject();
  if (userObject instanceof PsiDirectoryNode) {
    PsiDirectory directory=((PsiDirectoryNode)userObject).getValue();
    if (directory != null) {
      return new PsiDirectory[]{directory};
    }
  }
 else   if (userObject instanceof ProjectViewModuleNode) {
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(((ProjectViewModuleNode)userObject).getValue());
    final VirtualFile[] sourceRoots=moduleRootManager.getSourceRoots();
    List<PsiDirectory> dirs=new ArrayList<PsiDirectory>(sourceRoots.length);
    final PsiManager psiManager=PsiManager.getInstance(myProject);
    for (int idx=0; idx < sourceRoots.length; idx++) {
      final VirtualFile sourceRoot=sourceRoots[idx];
      final PsiDirectory directory=psiManager.findDirectory(sourceRoot);
      if (directory != null) {
        dirs.add(directory);
      }
    }
    return dirs.toArray(new PsiDirectory[dirs.size()]);
  }
  return PsiDirectory.EMPTY_ARRAY;
}
