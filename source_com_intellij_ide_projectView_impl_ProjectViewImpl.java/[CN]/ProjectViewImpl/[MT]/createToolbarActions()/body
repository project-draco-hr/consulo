{
  myActionGroup.removeAll();
  myActionGroup.add(new PaneOptionAction(myFlattenPackages,"Flatten Packages","Flatten Packages",IconLoader.getIcon("/objectBrowser/flattenPackages.png"),ourFlattenPackagesDefaults){
    public void setSelected(    AnActionEvent event,    boolean flag){
      final AbstractProjectViewPane viewPane=getCurrentProjectViewPane();
      final SelectionInfo selectionInfo=SelectionInfo.create(viewPane);
      super.setSelected(event,flag);
      selectionInfo.apply(viewPane);
    }
  }
);
class FlattenPackagesDependableAction extends PaneOptionAction {
    public FlattenPackagesDependableAction(    Map<String,Boolean> optionsMap,    final String text,    final String description,    final Icon icon,    boolean optionDefaultValue){
      super(optionsMap,text,description,icon,optionDefaultValue);
    }
    public void update(    AnActionEvent e){
      super.update(e);
      final Presentation presentation=e.getPresentation();
      presentation.setEnabled(isFlattenPackages(myCurrentViewId));
    }
  }
  myActionGroup.add(new HideEmptyMiddlePackagesAction());
  myActionGroup.add(new FlattenPackagesDependableAction(myAbbreviatePackageNames,"Abbreviate Qualified Package Names","Abbreviate Qualified Package Names",IconLoader.getIcon("/objectBrowser/abbreviatePackageNames.png"),ourAbbreviatePackagesDefaults){
    public boolean isSelected(    AnActionEvent event){
      return super.isSelected(event) && isAbbreviatePackageNames(myCurrentViewId);
    }
  }
);
  myActionGroup.add(new PaneOptionAction(myShowMembers,"Show Members","Show/Hide Members",IconLoader.getIcon("/objectBrowser/showMembers.png"),ourShowMembersDefaults));
  myActionGroup.add(myAutoScrollToSourceHandler.createToggleAction());
  myActionGroup.add(myAutoScrollFromSourceHandler.createToggleAction());
  myActionGroup.add(new ShowStructureAction());
  myActionGroup.add(new SortByTypeAction());
  final List<AbstractProjectViewPane> panes=new ArrayList<AbstractProjectViewPane>(myId2Pane.values());
  for (int i=0; i < panes.size(); i++) {
    AbstractProjectViewPane projectViewPane=panes.get(i);
    projectViewPane.addToolbarActions(myActionGroup);
  }
}
