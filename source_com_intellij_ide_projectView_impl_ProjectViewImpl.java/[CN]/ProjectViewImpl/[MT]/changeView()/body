{
  final List<AbstractProjectViewPane> views=new ArrayList<AbstractProjectViewPane>(myId2Pane.values());
  views.remove(getCurrentProjectViewPane());
  Collections.sort(views,PANE_WEIGHT_COMPARATOR);
  final JList list=new JList(views.toArray(new Object[views.size()]));
  list.setCellRenderer(new DefaultListCellRenderer(){
    public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      AbstractProjectViewPane pane=(AbstractProjectViewPane)value;
      setText(pane.getTitle());
      return this;
    }
  }
);
  if (views.size() != 0) {
    list.setSelectedValue(views.get(0),true);
  }
  Runnable runnable=new Runnable(){
    public void run(){
      if (list.getSelectedIndex() < 0)       return;
      AbstractProjectViewPane pane=(AbstractProjectViewPane)list.getSelectedValue();
      changeView(pane.getId());
    }
  }
;
  new PopupChooserBuilder(list).setTitle(IdeBundle.message("title.popup.views")).setItemChoosenCallback(runnable).createPopup().showInCenterOf(getComponent());
}
