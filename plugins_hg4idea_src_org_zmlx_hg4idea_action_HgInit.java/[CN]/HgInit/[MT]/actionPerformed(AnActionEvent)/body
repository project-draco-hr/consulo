{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null) {
    LOG.warn("[actionPerformed] project is null");
    return;
  }
  final HgInitDialog hgInitDialog=new HgInitDialog(project);
  hgInitDialog.show();
  if (!hgInitDialog.isOK()) {
    return;
  }
  final VirtualFile selectedRoot=hgInitDialog.getSelectedFolder();
  if (selectedRoot == null) {
    return;
  }
  final VirtualFile vcsRoot=HgUtil.getNearestHgRoot(selectedRoot);
  VirtualFile mapRoot=selectedRoot;
  if (vcsRoot != null) {
    final HgInitAlreadyUnderHgDialog dialog=new HgInitAlreadyUnderHgDialog(project,selectedRoot.getPresentableUrl(),vcsRoot.getPresentableUrl());
    dialog.show();
    if (!dialog.isOK()) {
      return;
    }
    if (dialog.getAnswer() == HgInitAlreadyUnderHgDialog.Answer.CREATE_PROJECT_AT_PARENT) {
      NewProjectUtil.createNewProject(project,vcsRoot.getPath());
      return;
    }
 else     if (dialog.getAnswer() == HgInitAlreadyUnderHgDialog.Answer.USE_PARENT_REPO_BUT_THIS_PROJECT) {
      mapRoot=vcsRoot;
    }
 else     if (dialog.getAnswer() == HgInitAlreadyUnderHgDialog.Answer.CREATE_REPO_HERE) {
      (new HgInitCommand(project)).execute(selectedRoot);
    }
  }
 else {
    (new HgInitCommand(project)).execute(selectedRoot);
  }
  mapRoot.refresh(false,false);
  final String path=mapRoot.equals(project.getBaseDir()) ? "" : mapRoot.getPath();
  final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(project);
  final List<VcsDirectoryMapping> vcsDirectoryMappings=new ArrayList<VcsDirectoryMapping>(vcsManager.getDirectoryMappings());
  VcsDirectoryMapping mapping=new VcsDirectoryMapping(path,HgVcs.VCS_NAME);
  for (int i=0; i < vcsDirectoryMappings.size(); i++) {
    final VcsDirectoryMapping m=vcsDirectoryMappings.get(i);
    if (m.getDirectory().equals(path)) {
      if (m.getVcs().length() == 0) {
        vcsDirectoryMappings.set(i,mapping);
        mapping=null;
        break;
      }
 else       if (m.getVcs().equals(mapping.getVcs())) {
        mapping=null;
        break;
      }
    }
  }
  if (mapping != null) {
    vcsDirectoryMappings.add(mapping);
  }
  vcsManager.setDirectoryMappings(vcsDirectoryMappings);
  vcsManager.updateActiveVcss();
}
