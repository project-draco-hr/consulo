{
  final AtomicReference<UsageViewImpl> usageView=new AtomicReference<UsageViewImpl>();
  final SearchForUsagesRunnable runnable=new SearchForUsagesRunnable(usageView,presentation,searchFor,searcherFactory,processPresentation,listener);
  final Factory<ProgressIndicator> progressIndicatorFactory=processPresentation.getProgressIndicatorFactory();
  final ProgressIndicator progressIndicator=progressIndicatorFactory != null ? progressIndicatorFactory.create() : null;
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    public void run(){
      try {
        ProgressManager.getInstance().runProcess(new Runnable(){
          public void run(){
            runnable.searchUsages();
          }
        }
,progressIndicator);
      }
 catch (      ProcessCanceledException e) {
      }
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          runnable.endSearchForUsages();
        }
      }
,ModalityState.NON_MODAL);
    }
  }
);
}
