{
  final AndroidDebugBridge debugBridge=AndroidSdkUtils.getDebugBridge(myProject);
  final DefaultMutableTreeNode root=new DefaultMutableTreeNode();
  final DefaultTreeModel model=new DefaultTreeModel(root);
  if (debugBridge == null) {
    myProcessTree.setModel(model);
    return;
  }
  final Set<String> processNames=collectAllProcessNames(myProject);
  final PropertiesComponent properties=PropertiesComponent.getInstance(myProject);
  final String prevProcess=properties.getValue(DEBUGGABLE_PROCESS_PROPERTY);
  final String prevDevice=properties.getValue(DEBUGGABLE_DEVICE_PROPERTY);
  TreeNode selectedDeviceNode=null;
  TreeNode selectedClientNode=null;
  Object[] firstTreePath=null;
  final IDevice[] devices=debugBridge.getDevices();
  for (  IDevice device : devices) {
    final DefaultMutableTreeNode deviceNode=new DefaultMutableTreeNode(device);
    root.add(deviceNode);
    for (    Client client : device.getClients()) {
      final String clientDescription=getClientDescription(client);
      if (clientDescription != null && (showAllProcesses || isRelatedProcess(processNames,clientDescription))) {
        final DefaultMutableTreeNode clientNode=new DefaultMutableTreeNode(client);
        deviceNode.add(clientNode);
        final String deviceName=getPresentableName(device);
        if (clientDescription.equals(prevProcess) && (selectedDeviceNode == null || deviceName.equals(prevDevice))) {
          selectedClientNode=clientNode;
          selectedDeviceNode=deviceNode;
        }
        if (firstTreePath == null) {
          firstTreePath=new Object[]{root,deviceNode,clientNode};
        }
      }
    }
  }
  final Object[] pathToSelect=selectedDeviceNode != null ? new Object[]{root,selectedDeviceNode,selectedClientNode} : firstTreePath;
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      myProcessTree.setModel(model);
      if (pathToSelect != null) {
        myProcessTree.getSelectionModel().setSelectionPath(new TreePath(pathToSelect));
      }
 else {
        getOKAction().setEnabled(false);
      }
      TreeUtil.expandAll(myProcessTree);
    }
  }
);
}
