{
  final String configurationName=getRunConfigurationName(debugPort);
  final Collection<RunContentDescriptor> descriptors=ExecutionHelper.findRunningConsoleByTitle(myProject,new NotNullFunction<String,Boolean>(){
    @NotNull @Override public Boolean fun(    String title){
      return configurationName.equals(title);
    }
  }
);
  if (descriptors.size() > 0) {
    final RunContentDescriptor descriptor=descriptors.iterator().next();
    final ProcessHandler processHandler=descriptor.getProcessHandler();
    final Content content=descriptor.getAttachedContent();
    if (processHandler != null && content != null) {
      final Executor executor=DefaultDebugExecutor.getDebugExecutorInstance();
      if (processHandler.isProcessTerminated()) {
        ExecutionManager.getInstance(myProject).getContentManager().removeRunContent(executor,descriptor);
      }
 else {
        content.getManager().setSelectedContent(content);
        ToolWindow window=ToolWindowManager.getInstance(myProject).getToolWindow(executor.getToolWindowId());
        window.activate(null,false,true);
        return;
      }
    }
  }
  runSession(debugPort);
}
