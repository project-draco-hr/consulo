{
  final GrNamedArgument[] namedArguments=getNamedArguments();
  final GrExpression[] args=getExpressionArguments();
  final ASTNode newNode=namedArgument.getNode();
  PsiElement anchor=null;
  final int namedCount=namedArguments.length;
  final int exprCount=args.length;
  if (namedCount > 0) {
    anchor=namedArguments[namedCount - 1];
  }
 else   if (exprCount > 0) {
    anchor=args[exprCount - 1];
  }
  if (anchor != null) {
    anchor=PsiUtil.getNextNonSpace(anchor);
  }
 else {
    anchor=getRightParen();
  }
  if (anchor != null) {
    final ASTNode astNode=anchor.getNode();
    getNode().addChild(newNode,astNode);
  }
 else {
    getNode().addChild(newNode);
  }
  if (namedCount + exprCount > 0) {
    getNode().addLeaf(mCOMMA,",",newNode);
  }
  return namedArgument;
}
