{
  loadEntriesFile(filePath);
  if (status != null) {
    FileStatus fStatus=SvnStatusConvertor.convertStatus(status);
    final SVNStatusType statusType=status.getContentsStatus();
    final SVNStatusType propStatus=status.getPropertiesStatus();
    if (statusType == SVNStatusType.STATUS_UNVERSIONED || statusType == SVNStatusType.UNKNOWN) {
      final VirtualFile file=filePath.getVirtualFile();
      if (file != null) {
        myChangelistBuilder.processUnversionedFile(file);
      }
    }
 else     if (statusType == SVNStatusType.STATUS_CONFLICTED || statusType == SVNStatusType.STATUS_MODIFIED || statusType == SVNStatusType.STATUS_REPLACED || propStatus == SVNStatusType.STATUS_MODIFIED || propStatus == SVNStatusType.STATUS_CONFLICTED) {
      myChangelistBuilder.processChangeInList(createChange(SvnContentRevision.create(myVcs,filePath,status.getCommittedRevision()),CurrentContentRevision.create(filePath),fStatus,status),changeListNameFromStatus(status),SvnVcs.getKey());
      checkSwitched(filePath,myChangelistBuilder,status,fStatus);
    }
 else     if (statusType == SVNStatusType.STATUS_ADDED) {
      myChangelistBuilder.processChangeInList(createChange(null,CurrentContentRevision.create(filePath),fStatus,status),changeListNameFromStatus(status),SvnVcs.getKey());
    }
 else     if (statusType == SVNStatusType.STATUS_DELETED) {
      myChangelistBuilder.processChangeInList(createChange(SvnContentRevision.create(myVcs,filePath,status.getCommittedRevision()),null,fStatus,status),changeListNameFromStatus(status),SvnVcs.getKey());
    }
 else     if (statusType == SVNStatusType.STATUS_MISSING) {
      myChangelistBuilder.processLocallyDeletedFile(createLocallyDeletedChange(filePath,status));
    }
 else     if (statusType == SVNStatusType.STATUS_IGNORED) {
      myChangelistBuilder.processIgnoredFile(filePath.getVirtualFile());
    }
 else     if (status.isCopied()) {
    }
 else     if ((fStatus == FileStatus.NOT_CHANGED || fStatus == FileStatus.SWITCHED) && statusType != SVNStatusType.STATUS_NONE) {
      VirtualFile file=filePath.getVirtualFile();
      if (file != null && FileDocumentManager.getInstance().isFileModified(file)) {
        myChangelistBuilder.processChangeInList(createChange(SvnContentRevision.create(myVcs,filePath,status.getCommittedRevision()),CurrentContentRevision.create(filePath),FileStatus.MODIFIED,status),changeListNameFromStatus(status),SvnVcs.getKey());
      }
 else       if (status.getTreeConflict() != null) {
        myChangelistBuilder.processChange(createChange(SvnContentRevision.create(myVcs,filePath,status.getCommittedRevision()),CurrentContentRevision.create(filePath),FileStatus.MODIFIED,status),SvnVcs.getKey());
      }
      checkSwitched(filePath,myChangelistBuilder,status,fStatus);
    }
  }
}
