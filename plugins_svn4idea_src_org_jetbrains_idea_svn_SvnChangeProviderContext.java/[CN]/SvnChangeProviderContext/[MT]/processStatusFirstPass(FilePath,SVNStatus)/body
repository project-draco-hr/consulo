{
  if (status == null) {
    return;
  }
  if (status.getRemoteLock() != null) {
    final SVNLock lock=status.getRemoteLock();
    myChangelistBuilder.processLogicallyLockedFolder(filePath.getVirtualFile(),new LogicalLock(false,lock.getOwner(),lock.getComment(),lock.getCreationDate(),lock.getExpirationDate()));
  }
  if (status.getLocalLock() != null) {
    final SVNLock lock=status.getLocalLock();
    myChangelistBuilder.processLogicallyLockedFolder(filePath.getVirtualFile(),new LogicalLock(true,lock.getOwner(),lock.getComment(),lock.getCreationDate(),lock.getExpirationDate()));
  }
  if (filePath.isDirectory() && status.isLocked()) {
    myChangelistBuilder.processLockedFolder(filePath.getVirtualFile());
  }
  if (SvnVcs.svnStatusIs(status,SVNStatusType.STATUS_ADDED) && status.getCopyFromURL() != null) {
    addCopiedFile(filePath,status,status.getCopyFromURL());
  }
 else   if (SvnVcs.svnStatusIs(status,SVNStatusType.STATUS_DELETED)) {
    myDeletedFiles.add(new SvnChangedFile(filePath,status));
  }
 else {
    String parentCopyFromURL=getParentCopyFromURL(filePath);
    if (parentCopyFromURL != null) {
      addCopiedFile(filePath,status,parentCopyFromURL);
    }
 else {
      processStatus(filePath,status);
    }
  }
}
