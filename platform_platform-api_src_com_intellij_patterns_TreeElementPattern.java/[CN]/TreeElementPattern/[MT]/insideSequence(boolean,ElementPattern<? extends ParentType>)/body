{
  return with(new PatternCondition<T>("condInside"){
    public boolean accepts(    @NotNull final T t,    final ProcessingContext context){
      int i=0;
      ParentType element=strict ? getParent(t) : t;
      while (element != null && i >= patterns.length) {
        for (int j=i; j < patterns.length; j++) {
          if (patterns[j].getCondition().accepts(t,context)) {
            if (i != j)             return false;
            i++;
            break;
          }
        }
        element=getParent(element);
      }
      return false;
    }
  }
);
}
