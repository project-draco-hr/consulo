{
  for (  Change c : changes) {
    final ContentRevision beforeRevision=c.getBeforeRevision();
    final ContentRevision afterRevision=c.getAfterRevision();
    if (beforeRevision == null) {
      writeAddedFile(writer,basePath,afterRevision);
      continue;
    }
    if (afterRevision == null) {
      writeDeletedFile(writer,basePath,beforeRevision);
      continue;
    }
    final String beforeContent=beforeRevision.getContent();
    final String afterContent=afterRevision.getContent();
    String[] beforeLines=DiffUtil.convertToLines(beforeContent);
    String[] afterLines=DiffUtil.convertToLines(afterContent);
    DiffFragment[] woFormattingBlocks=DiffPolicy.LINES_WO_FORMATTING.buildFragments(beforeContent,afterContent);
    DiffFragment[] step1lineFragments=new DiffCorrection.TrueLineBlocks(ComparisonPolicy.DEFAULT).correctAndNormalize(woFormattingBlocks);
    ArrayList<LineFragment> fragments=new DiffFragmentsProcessor().process(step1lineFragments);
    if (fragments.size() > 1) {
      writeFileHeading(writer,basePath,beforeRevision,afterRevision);
      int lastLine1=0;
      int lastLine2=0;
      while (fragments.size() > 0) {
        List<LineFragment> adjacentFragments=getAdjacentFragments(fragments);
        if (adjacentFragments.size() > 0) {
          LineFragment first=adjacentFragments.get(0);
          LineFragment last=adjacentFragments.get(adjacentFragments.size() - 1);
          final int start1=first.getStartingLine1();
          final int start2=first.getStartingLine2();
          final int end1=last.getStartingLine1() + last.getModifiedLines1();
          final int end2=last.getStartingLine2() + last.getModifiedLines2();
          int contextStart1=Math.max(start1 - CONTEXT_LINES,lastLine1);
          int contextStart2=Math.max(start2 - CONTEXT_LINES,lastLine2);
          int contextEnd1=Math.min(end1 + CONTEXT_LINES,beforeLines.length);
          int contextEnd2=Math.min(end2 + CONTEXT_LINES,afterLines.length);
          writeDiffFragmentStart(writer,contextStart1,contextEnd1,contextStart2,contextEnd2);
          for (          LineFragment fragment : adjacentFragments) {
            for (int i=contextStart1; i < fragment.getStartingLine1(); i++) {
              writeLine(writer,beforeLines[i],' ');
            }
            for (int i=fragment.getStartingLine1(); i < fragment.getStartingLine1() + fragment.getModifiedLines1(); i++) {
              writeLine(writer,beforeLines[i],'-');
            }
            for (int i=fragment.getStartingLine2(); i < fragment.getStartingLine2() + fragment.getModifiedLines2(); i++) {
              writeLine(writer,afterLines[i],'+');
            }
            contextStart1=fragment.getStartingLine1() + fragment.getModifiedLines1();
          }
          for (int i=contextStart1; i < contextEnd1; i++) {
            writeLine(writer,beforeLines[i],' ');
          }
        }
      }
    }
  }
}
