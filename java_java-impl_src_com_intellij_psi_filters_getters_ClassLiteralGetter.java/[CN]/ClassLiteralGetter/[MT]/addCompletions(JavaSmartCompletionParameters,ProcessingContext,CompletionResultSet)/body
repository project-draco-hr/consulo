{
  final PrefixMatcher matcher=result.getPrefixMatcher();
  final Condition<String> shortNameCondition=new Condition<String>(){
    public boolean value(    String s){
      return matcher.prefixMatches(s);
    }
  }
;
  PsiType classParameter=ApplicationManager.getApplication().runReadAction(new Computable<PsiType>(){
    @Nullable public PsiType compute(){
      return PsiUtil.substituteTypeParameter(parameters.getExpectedType(),CommonClassNames.JAVA_LANG_CLASS,0,false);
    }
  }
);
  boolean addInheritors=false;
  if (classParameter instanceof PsiWildcardType) {
    final PsiWildcardType wildcardType=(PsiWildcardType)classParameter;
    classParameter=wildcardType.getBound();
    addInheritors=wildcardType.isExtends() && classParameter instanceof PsiClassType;
  }
  if (classParameter == null) {
    return;
  }
  addClassLiteralLookupElement(classParameter,result,parameters.getPosition());
  if (addInheritors) {
    addInheritorClassLiterals(parameters.getPosition(),shortNameCondition,classParameter,result);
  }
}
