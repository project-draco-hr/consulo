{
  val model=new ListTableModel<Item>(ourColumns,myItems,0);
  TableView<Item> table=new TableView<Item>(model);
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator(table);
  decorator.setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      List<ContentFolderPropertyProvider> list=new ArrayList<ContentFolderPropertyProvider>();
      loop:       for (      ContentFolderPropertyProvider propertyProvider : ContentFolderPropertyProvider.EP_NAME.getExtensions()) {
        for (        Item item : myItems) {
          if (item.myProvider == propertyProvider) {
            continue loop;
          }
        }
        list.add(propertyProvider);
      }
      ChooseElementsDialog<ContentFolderPropertyProvider> d=new ChooseElementsDialog<ContentFolderPropertyProvider>(myProject,list,ProjectBundle.message("module.paths.add.properties.title"),ProjectBundle.message("module.paths.add.properties.desc")){
        @Override protected String getItemText(        ContentFolderPropertyProvider item){
          return item.getKey().toString();
        }
        @Nullable @Override protected Icon getItemIcon(        ContentFolderPropertyProvider item){
          return null;
        }
      }
;
      List<ContentFolderPropertyProvider> list1=d.showAndGetResult();
      for (      ContentFolderPropertyProvider propertyProvider : list1) {
        model.addRow(new Item(propertyProvider,propertyProvider.getKey(),propertyProvider.getValues()[0]));
      }
    }
  }
);
  decorator.disableUpDownActions();
  return decorator.createPanel();
}
