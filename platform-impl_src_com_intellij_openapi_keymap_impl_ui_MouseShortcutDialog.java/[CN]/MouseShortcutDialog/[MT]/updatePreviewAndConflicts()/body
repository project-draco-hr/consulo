{
  if (myButton == -1 || myModifiers == -1) {
    return;
  }
  myTarConflicts.setText(null);
  myLblPreview.setText(KeymapUtil.getMouseShortcutText(myButton,myModifiers,myRbSingleClick.isSelected() ? 1 : 2) + " ");
  final MouseShortcut mouseShortcut;
  if (myRbSingleClick.isSelected()) {
    mouseShortcut=new MouseShortcut(myButton,myModifiers,1);
  }
 else {
    mouseShortcut=new MouseShortcut(myButton,myModifiers,2);
  }
  StringBuilder buffer=new StringBuilder();
  String[] actionIds=myKeymap.getActionIds(mouseShortcut);
  for (  String actionId : actionIds) {
    if (actionId.equals(myActionId)) {
      continue;
    }
    String actionPath=myMainGroup.getActionQualifiedPath(actionId);
    if (actionPath == null) {
      continue;
    }
    Shortcut[] shortcuts=myKeymap.getShortcuts(actionId);
    for (    Shortcut shortcut1 : shortcuts) {
      if (!(shortcut1 instanceof MouseShortcut)) {
        continue;
      }
      MouseShortcut shortcut=(MouseShortcut)shortcut1;
      if (shortcut.getButton() != mouseShortcut.getButton() || shortcut.getModifiers() != mouseShortcut.getModifiers()) {
        continue;
      }
      if (buffer.length() > 1) {
        buffer.append('\n');
      }
      buffer.append('[');
      buffer.append(actionPath);
      buffer.append(']');
      break;
    }
  }
  if (buffer.length() == 0) {
    myTarConflicts.setForeground(UIUtil.getTextAreaForeground());
    myTarConflicts.setText(KeyMapBundle.message("mouse.shortcut.dialog.no.conflicts.area"));
  }
 else {
    myTarConflicts.setForeground(Color.red);
    myTarConflicts.setText(KeyMapBundle.message("mouse.shortcut.dialog.assigned.to.area",buffer.toString()));
  }
}
