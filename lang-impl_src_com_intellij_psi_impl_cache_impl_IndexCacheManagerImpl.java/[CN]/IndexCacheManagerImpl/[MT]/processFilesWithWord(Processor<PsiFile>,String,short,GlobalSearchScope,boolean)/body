{
  Processor<VirtualFile> virtualFileProcessor=new Processor<VirtualFile>(){
    public boolean process(    final VirtualFile virtualFile){
      LOG.assertTrue(virtualFile.isValid());
      return ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
        public Boolean compute(){
          if (scope.contains(virtualFile)) {
            final PsiFile psiFile=myPsiManager.findFile(virtualFile);
            return psiFile == null || psiFileProcessor.process(psiFile);
          }
          return Boolean.TRUE;
        }
      }
);
    }
  }
;
  final Set<VirtualFile> vFiles=new HashSet<VirtualFile>();
  FileBasedIndex.getInstance().processValues(IdIndex.NAME,new IdIndexEntry(word,caseSensitively),null,new FileBasedIndex.ValueProcessor<Integer>(){
    public void process(    final VirtualFile file,    final Integer value){
      final int mask=value.intValue();
      if ((mask & occurrenceMask) != 0) {
        vFiles.add(file);
      }
    }
  }
,VirtualFileFilter.ALL);
  for (  VirtualFile vFile : vFiles) {
    if (!virtualFileProcessor.process(vFile)) {
      return false;
    }
  }
  return true;
}
