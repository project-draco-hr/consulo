{
  Processor<VirtualFile> virtualFileProcessor=new Processor<VirtualFile>(){
    public boolean process(    final VirtualFile virtualFile){
      LOG.assertTrue(virtualFile.isValid());
      return ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
        public Boolean compute(){
          if (scope.contains(virtualFile)) {
            final PsiFile psiFile=myPsiManager.findFile(virtualFile);
            return psiFile == null || psiFileProcessor.process(psiFile);
          }
          return Boolean.TRUE;
        }
      }
);
    }
  }
;
  final Collection<VirtualFile> vFiles=FileBasedIndex.getInstance().getContainingFiles(IdIndex.NAME,new IdIndexEntry(word,caseSensitively),myProject,new FileBasedIndex.DataFilter<IdIndexEntry,Integer>(){
    public List<Integer> process(    final IdIndexEntry key,    final ValueContainer<Integer> valueContainer){
      final List<Integer> values=new ArrayList<Integer>();
      for (final Iterator<Integer> valueIterator=valueContainer.getValueIterator(); valueIterator.hasNext(); ) {
        final Integer value=valueIterator.next();
        final int mask=value.intValue();
        if ((mask & occurrenceMask) != 0) {
          values.add(value);
        }
      }
      return values;
    }
  }
);
  for (  VirtualFile vFile : vFiles) {
    if (!virtualFileProcessor.process(vFile)) {
      return false;
    }
  }
  return true;
}
