{
  super(indicator);
  this.editor=indicator.getEditor();
  this.project=indicator.getProject();
  MessageBusConnection connection=project.getMessageBus().connect(this);
  connection.subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,new FileEditorManagerAdapter(){
    @Override public void selectionChanged(    FileEditorManagerEvent event){
      stopAutoPopup();
    }
  }
);
  mouseListener=new EditorMouseAdapter(){
    @Override public void mouseClicked(    EditorMouseEvent e){
      stopAutoPopup();
    }
  }
;
  caretListener=new CaretListener(){
    @Override public void caretPositionChanged(    CaretEvent e){
      if (!changeGuard) {
        stopAutoPopup();
      }
    }
  }
;
  selectionListener=new SelectionListener(){
    @Override public void selectionChanged(    SelectionEvent e){
      stopAutoPopup();
    }
  }
;
  documentListener=new DocumentAdapter(){
    @Override public void documentChanged(    DocumentEvent e){
      if (!changeGuard) {
        stopAutoPopup();
      }
    }
  }
;
  lookupListener=new PropertyChangeListener(){
    @Override public void propertyChange(    PropertyChangeEvent evt){
      stopAutoPopup();
    }
  }
;
  editor.addEditorMouseListener(mouseListener);
  editor.getCaretModel().addCaretListener(caretListener);
  editor.getDocument().addDocumentListener(documentListener);
  editor.getSelectionModel().addSelectionListener(selectionListener);
  LookupManager.getInstance(project).addPropertyChangeListener(lookupListener);
}
