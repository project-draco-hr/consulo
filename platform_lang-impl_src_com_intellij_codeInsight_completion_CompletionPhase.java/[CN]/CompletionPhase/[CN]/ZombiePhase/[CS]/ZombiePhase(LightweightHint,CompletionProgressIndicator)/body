{
  this.indicator=indicator;
  @NotNull Editor editor=indicator.getEditor();
  final HintListener hintListener=new HintListener(){
    public void hintHidden(    final EventObject event){
      CompletionServiceImpl.setCompletionPhase(NoCompletion);
    }
  }
;
  final DocumentAdapter documentListener=new DocumentAdapter(){
    @Override public void beforeDocumentChange(    DocumentEvent e){
      CompletionServiceImpl.setCompletionPhase(NoCompletion);
    }
  }
;
  final SelectionListener selectionListener=new SelectionListener(){
    public void selectionChanged(    SelectionEvent e){
      CompletionServiceImpl.setCompletionPhase(NoCompletion);
    }
  }
;
  final CaretListener caretListener=new CaretListener(){
    public void caretPositionChanged(    CaretEvent e){
      CompletionServiceImpl.setCompletionPhase(NoCompletion);
    }
  }
;
  final Document document=editor.getDocument();
  final SelectionModel selectionModel=editor.getSelectionModel();
  final CaretModel caretModel=editor.getCaretModel();
  if (hint != null) {
    hint.addHintListener(hintListener);
  }
  document.addDocumentListener(documentListener);
  selectionModel.addSelectionListener(selectionListener);
  caretModel.addCaretListener(caretListener);
  Disposer.register(this,new Disposable(){
    @Override public void dispose(){
      if (hint != null) {
        hint.removeHintListener(hintListener);
      }
      document.removeDocumentListener(documentListener);
      selectionModel.removeSelectionListener(selectionListener);
      caretModel.removeCaretListener(caretListener);
    }
  }
);
}
