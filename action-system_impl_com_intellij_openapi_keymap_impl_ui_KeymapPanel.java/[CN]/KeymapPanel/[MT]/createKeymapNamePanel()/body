{
  JPanel panel=new JPanel(new GridBagLayout());
  panel.add(new JLabel(KeyMapBundle.message("key.map.name.label")),new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,8),0,0));
  myKeymapNameField=new JTextField();
  Dimension dimension=new Dimension(150,myKeymapNameField.getPreferredSize().height);
  myKeymapNameField.setPreferredSize(dimension);
  myKeymapNameField.setMinimumSize(dimension);
  panel.add(myKeymapNameField,new GridBagConstraints(1,0,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,8,0,0),0,0));
  myBaseKeymapLabel=new JLabel(KeyMapBundle.message("parent.keymap.label"));
  Dimension preferredSize=myBaseKeymapLabel.getPreferredSize();
  myBaseKeymapLabel.setPreferredSize(new Dimension(preferredSize.width * 2,preferredSize.height));
  panel.add(myBaseKeymapLabel,new GridBagConstraints(2,0,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,16,0,8),0,0));
  myDisableMnemonicsCheckbox=new JCheckBox(KeyMapBundle.message("disable.mnemonic.in.menu.check.box"));
  myDisableMnemonicsCheckbox.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      if (mySelectedKeymap != null) {
        mySelectedKeymap.setDisableMnemonics(myDisableMnemonicsCheckbox.isSelected());
      }
    }
  }
);
  panel.add(myDisableMnemonicsCheckbox,new GridBagConstraints(3,0,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  myFilterComponent=new FilterComponent("KEYMAP",5){
    protected void filter(){
      myActionsTree.filter(getFilter(),getCurrentQuickListIds());
    }
  }
;
  panel.add(myFilterComponent,new GridBagConstraints(0,1,4,1,1,0,GridBagConstraints.EAST,GridBagConstraints.NONE,new Insets(8,8,0,0),0,0));
  return panel;
}
