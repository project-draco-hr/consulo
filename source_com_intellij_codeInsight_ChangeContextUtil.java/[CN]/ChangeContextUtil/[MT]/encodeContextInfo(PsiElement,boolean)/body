{
  if (scope instanceof PsiThisExpression) {
    scope.putCopyableUserData(ENCODED_KEY,"");
    PsiThisExpression thisExpr=(PsiThisExpression)scope;
    if (thisExpr.getQualifier() == null) {
      PsiClass thisClass=RefactoringUtil.getThisClass(thisExpr);
      if (thisClass != null && !(thisClass instanceof PsiAnonymousClass)) {
        thisExpr.putCopyableUserData(THIS_QUALIFIER_CLASS_KEY,thisClass);
      }
    }
  }
 else   if (scope instanceof PsiReferenceExpression) {
    scope.putCopyableUserData(ENCODED_KEY,"");
    PsiReferenceExpression refExpr=(PsiReferenceExpression)scope;
    PsiExpression qualifier=refExpr.getQualifierExpression();
    if (qualifier == null) {
      final PsiElement refElement=refExpr.resolve();
      if (refElement != null) {
        if (refElement instanceof PsiClass) {
          if (includeRefClasses) {
            refExpr.putCopyableUserData(REF_CLASS_KEY,((PsiClass)refElement));
          }
        }
 else         if (refElement instanceof PsiMember) {
          final PsiClass thisClass=RefactoringUtil.getThisResolveClass(refExpr);
          refExpr.putCopyableUserData(REF_MEMBER_KEY,((PsiMember)refElement));
          refExpr.putCopyableUserData(REF_MEMBER_THIS_CLASS_KEY,thisClass);
        }
      }
    }
 else {
      refExpr.putCopyableUserData(CAN_REMOVE_QUALIFIER_KEY,canRemoveQualifier(refExpr) ? Boolean.TRUE : Boolean.FALSE);
    }
  }
 else   if (includeRefClasses) {
    PsiReference ref=scope.getReference();
    if (ref != null) {
      scope.putCopyableUserData(ENCODED_KEY,"");
      PsiElement refElement=ref.resolve();
      if (refElement instanceof PsiClass) {
        scope.putCopyableUserData(REF_CLASS_KEY,((PsiClass)refElement));
      }
    }
  }
  for (PsiElement child=scope.getFirstChild(); child != null; child=child.getNextSibling()) {
    encodeContextInfo(child,includeRefClasses);
  }
}
