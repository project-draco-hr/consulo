{
  String text="import java.util.List;\n" + "import java.util.ArrayList;\n" + "\n"+ "class Test {\n"+ "}";
  init(40,text);
  final int foldStartOffset="import".length() + 1;
  int foldEndOffset=text.indexOf("class") - 2;
  addCollapsedFoldRegion(foldStartOffset,foldEndOffset,"...");
  myEditor.getDocument().insertString(foldEndOffset,"\nimport java.util.Date;\n");
  final FoldingModel foldingModel=myEditor.getFoldingModel();
  foldingModel.runBatchFoldingOperation(new Runnable(){
    @Override public void run(){
      FoldRegion oldFoldRegion=getFoldRegion(foldStartOffset);
      assertNotNull(oldFoldRegion);
      foldingModel.removeFoldRegion(oldFoldRegion);
      int newFoldEndOffset=myEditor.getDocument().getText().indexOf("class") - 2;
      FoldRegion newFoldRegion=foldingModel.addFoldRegion(foldStartOffset,newFoldEndOffset,"...");
      assertNotNull(newFoldRegion);
      newFoldRegion.setExpanded(false);
    }
  }
);
  CodeFoldingManager.getInstance(getProject()).updateFoldRegions(myEditor);
  assertEquals(new VisualPosition(2,0),myEditor.logicalToVisualPosition(new LogicalPosition(5,0)));
}
