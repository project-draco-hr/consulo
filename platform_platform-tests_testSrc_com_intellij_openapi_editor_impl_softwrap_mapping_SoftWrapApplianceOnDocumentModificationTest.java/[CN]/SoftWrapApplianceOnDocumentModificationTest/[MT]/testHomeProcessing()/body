{
  String text="class Test {\n" + "    public String s = \"this is a long string literal that is expected to be soft-wrapped into multiple visual lines\";\n" + "}";
  init(30,text);
  myEditor.getCaretModel().moveToOffset(text.indexOf("}") - 1);
  List<? extends SoftWrap> softWraps=new ArrayList<SoftWrap>(getSoftWrapModel().getRegisteredSoftWraps());
  assertTrue(!softWraps.isEmpty());
  CaretModel caretModel=myEditor.getCaretModel();
  int expectedVisualLine=caretModel.getVisualPosition().line;
  while (!softWraps.isEmpty()) {
    SoftWrap softWrap=softWraps.get(softWraps.size() - 1);
    int caretOffsetBefore=caretModel.getOffset();
    home();
    int caretOffset=caretModel.getOffset();
    assertTrue(caretOffset < caretOffsetBefore);
    assertEquals(softWrap.getStart(),caretOffset);
    assertEquals(new VisualPosition(expectedVisualLine,softWrap.getIndentInColumns()),caretModel.getVisualPosition());
    home();
    assertEquals(softWrap.getStart(),caretModel.getOffset());
    assertEquals(new VisualPosition(expectedVisualLine,0),caretModel.getVisualPosition());
    softWraps.remove(softWraps.size() - 1);
    expectedVisualLine--;
  }
  home();
  assertEquals(text.indexOf("public"),caretModel.getOffset());
  assertEquals(new VisualPosition(expectedVisualLine,text.indexOf("public") - text.indexOf("{\n") - 2),caretModel.getVisualPosition());
}
