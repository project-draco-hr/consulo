{
  super(false);
  myMemoryKind=memoryKind;
  setTitle(DiagnosticBundle.message("diagnostic.out.of.memory.title"));
  myMessageLabel.setIcon(Messages.getErrorIcon());
  myMessageLabel.setText(DiagnosticBundle.message("diagnostic.out.of.memory.error",memoryKind == MemoryKind.HEAP ? VMOptions.XMX_OPTION_NAME : VMOptions.PERM_GEN_OPTION_NAME,ApplicationNamesInfo.getInstance().getProductName()));
  mySettingsFileHintLabel.setText(DiagnosticBundle.message("diagnostic.out.of.memory.willBeSavedTo",VMOptions.getSettingsFilePath()));
  myIgnoreAction=new AbstractAction(DiagnosticBundle.message("diagnostic.out.of.memory.ignore")){
    public void actionPerformed(    ActionEvent e){
      save();
      close(0);
    }
  }
;
  myShutdownAction=new AbstractAction(DiagnosticBundle.message("diagnostic.out.of.memory.shutdown")){
    public void actionPerformed(    ActionEvent e){
      save();
      System.exit(0);
    }
  }
;
  myShutdownAction.putValue(DialogWrapper.DEFAULT_ACTION,true);
  myHeapSizeField.setText(String.valueOf(VMOptions.readXmx()));
  myHeapCurrentValueLabel.setText(DiagnosticBundle.message("diagnostic.out.of.memory.currentValue",VMOptions.readXmx()));
  myPermGenSizeField.setText(String.valueOf(VMOptions.readMaxPermGen()));
  myPermGenCurrentValueLabel.setText(DiagnosticBundle.message("diagnostic.out.of.memory.currentValue",VMOptions.readMaxPermGen()));
  if (memoryKind == MemoryKind.HEAP) {
    myHeapSizeLabel.setForeground(Color.RED);
    myHeapSizeField.setForeground(Color.RED);
    myHeapUnitLabel.setForeground(Color.RED);
    myHeapCurrentValueLabel.setForeground(Color.RED);
  }
 else {
    myPermGenSizeLabel.setForeground(Color.RED);
    myPermGenSizeField.setForeground(Color.RED);
    myPermGenUnitLabel.setForeground(Color.RED);
    myPermGenCurrentValueLabel.setForeground(Color.RED);
  }
  init();
}
