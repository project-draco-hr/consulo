{
  List<Hash> parents=myDetails.getParents();
  Hash parentHash=parents.isEmpty() ? null : parents.get(0);
  ContentRevision before=null;
  if (parentHash != null) {
    if (myBeforeFile != null) {
      before=myContentRevisionFactory.createRevision(myBeforeFile,parentHash);
    }
 else     if (myBeforePath != null) {
      before=myContentRevisionFactory.createRevision(myDetails.getRoot(),myBeforePath,parentHash);
    }
  }
  ContentRevision after=null;
  if (myAfterFile != null) {
    after=myContentRevisionFactory.createRevision(myAfterFile,myDetails.getHash());
    if (myModification && parentHash != null) {
      before=myContentRevisionFactory.createRevision(myAfterFile,parentHash);
    }
  }
 else   if (myAfterPath != null) {
    after=myContentRevisionFactory.createRevision(myDetails.getRoot(),myAfterPath,myDetails.getHash());
    if (myModification && parentHash != null) {
      before=myContentRevisionFactory.createRevision(myDetails.getRoot(),myAfterPath,parentHash);
    }
  }
  return new Change(before,after);
}
