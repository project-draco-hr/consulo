{
  Map<String,Object> style=state.getStyle();
  float strokeWidth=(float)(mxUtils.getFloat(style,mxConstants.STYLE_STROKEWIDTH,1) * canvas.getScale());
  String type=mxUtils.getString(style,(source) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW,"");
  float size=(mxUtils.getFloat(style,(source) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE,mxConstants.DEFAULT_MARKERSIZE));
  Color color=mxUtils.getColor(style,mxConstants.STYLE_STROKECOLOR);
  canvas.getGraphics().setColor(color);
  double absSize=size * canvas.getScale();
  List<mxPoint> points=state.getAbsolutePoints();
  mxLine markerVector=getMarkerVector(points,source,absSize);
  mxPoint p0=new mxPoint(markerVector.getX(),markerVector.getY());
  mxPoint pe=markerVector.getEndPoint();
  mxPoint offset=null;
  double dx=pe.getX() - p0.getX();
  double dy=pe.getY() - p0.getY();
  double dist=Math.max(1,Math.sqrt(dx * dx + dy * dy));
  double unitX=dx / dist;
  double unitY=dy / dist;
  double nx=unitX * absSize;
  double ny=unitY * absSize;
  double strokeX=unitX * strokeWidth;
  double strokeY=unitY * strokeWidth;
  pe=(mxPoint)pe.clone();
  pe.setX(pe.getX() - strokeX / 2.0);
  pe.setY(pe.getY() - strokeY / 2.0);
  mxIMarker marker=mxMarkerRegistry.getMarker(type);
  if (marker != null) {
    offset=marker.paintMarker(canvas,state,type,pe,nx,ny,absSize,source);
    if (offset != null) {
      offset.setX(offset.getX() - strokeX / 2.0);
      offset.setY(offset.getY() - strokeY / 2.0);
    }
  }
 else {
    nx=dx * strokeWidth / dist;
    ny=dy * strokeWidth / dist;
    offset=new mxPoint(-strokeX / 2.0,-strokeY / 2.0);
  }
  return offset;
}
