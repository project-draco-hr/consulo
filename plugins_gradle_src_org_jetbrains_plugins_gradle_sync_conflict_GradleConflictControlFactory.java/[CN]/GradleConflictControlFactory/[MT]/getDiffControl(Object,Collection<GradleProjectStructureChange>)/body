{
  final Ref<JComponent> result=new Ref<JComponent>();
  GradleUtil.dispatch(entity,new IntellijEntityVisitor(){
    @Override public void visit(    @NotNull Project project){
    }
    @Override public void visit(    @NotNull Module module){
    }
    @Override public void visit(    @NotNull ModuleAwareContentRoot contentRoot){
    }
    @Override public void visit(    @NotNull LibraryOrderEntry libraryDependency){
      final Library library=libraryDependency.getLibrary();
      if (library == null) {
        return;
      }
      GradleProjectStructureChangeVisitor visitor=new GradleProjectStructureChangeVisitorAdapter(){
        @Override public void visit(        @NotNull GradleMismatchedLibraryPathChange change){
          result.set(myLibraryFactory.getControl(library,change));
        }
      }
;
      for (      GradleProjectStructureChange change : changes) {
        if (result.get() != null) {
          return;
        }
        change.invite(visitor);
      }
    }
    @Override public void visit(    @NotNull ModuleOrderEntry moduleDependency){
    }
  }
);
  return result.get();
}
