{
  GeneralSettings settings=GeneralSettings.getInstance();
  EditorSettingsExternalizable editorSettings=EditorSettingsExternalizable.getInstance();
  myComponent.myBrowserPathField.setText(settings.getBrowserPath());
  myComponent.myChkReopenLastProject.setSelected(settings.isReopenLastProject());
  myComponent.myChkSyncOnFrameActivation.setSelected(settings.isSyncOnFrameActivation());
  myComponent.myChkSaveOnFrameDeactivation.setSelected(settings.isSaveOnFrameDeactivation());
  myComponent.myChkAutoSaveIfInactive.setSelected(settings.isAutoSaveIfInactive());
  myComponent.myTfInactiveTimeout.setText(Integer.toString(settings.getInactiveTimeout()));
  myComponent.myTfInactiveTimeout.setEditable(settings.isAutoSaveIfInactive());
  myComponent.myUseCyclicBuffer.setSelected(settings.isUseCyclicBuffer());
  myComponent.myCyclicBufferSize.setEditable(settings.isUseCyclicBuffer());
  myComponent.myConfirmExit.setSelected(settings.isConfirmExit());
  myComponent.myCyclicBufferSize.setText(settings.getCyclicBufferSize() / 1024 + "");
  myComponent.myIgnoreFilesField.setText(FileTypeManagerEx.getInstanceEx().getIgnoredFilesList());
  myComponent.myCharsetNameCombo.setSelectedItem(settings.getCharsetName());
  myComponent.myChkUTFGuessing.setSelected(settings.isUseUTFGuessing());
  getDiffOptions().reset();
  if (settings.isUseDefaultBrowser()) {
    myComponent.myUseSystemDefaultBrowser.setSelected(true);
  }
 else {
    myComponent.myUseUserDefinedBrowser.setSelected(true);
  }
  myComponent.updateBrowserField();
  myComponent.myHTTPProxySettingsEditor.reset();
  myComponent.myCbNative2Ascii.setSelected(editorSettings.isNative2AsciiForPropertiesFiles());
  setupCharsetComboModel(myComponent.myDefaultPropertiesFilesCharset);
  myComponent.myDefaultPropertiesFilesCharset.setSelectedItem(editorSettings.getDefaultPropertiesCharsetName());
  if (myComponent.myDefaultPropertiesFilesCharset.getSelectedIndex() == -1) {
    myComponent.myDefaultPropertiesFilesCharset.setSelectedIndex(0);
  }
}
