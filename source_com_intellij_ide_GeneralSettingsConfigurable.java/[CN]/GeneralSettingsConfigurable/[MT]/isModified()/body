{
  boolean isModified=false;
  GeneralSettings settings=GeneralSettings.getInstance();
  isModified|=!compareStrings(settings.getBrowserPath(),myComponent.myBrowserPathField.getText());
  isModified|=settings.isReopenLastProject() != myComponent.myChkReopenLastProject.isSelected();
  isModified|=settings.isSyncOnFrameActivation() != myComponent.myChkSyncOnFrameActivation.isSelected();
  isModified|=settings.isSaveOnFrameDeactivation() != myComponent.myChkSaveOnFrameDeactivation.isSelected();
  isModified|=settings.isAutoSaveIfInactive() != myComponent.myChkAutoSaveIfInactive.isSelected();
  isModified|=settings.isUseUTFGuessing() != myComponent.myChkUTFGuessing.isSelected();
  isModified|=settings.isUseDefaultBrowser() != myComponent.myUseSystemDefaultBrowser.isSelected();
  int inactiveTimeout=-1;
  try {
    inactiveTimeout=Integer.parseInt(myComponent.myTfInactiveTimeout.getText());
  }
 catch (  NumberFormatException e) {
  }
  isModified|=inactiveTimeout > 0 && settings.getInactiveTimeout() != inactiveTimeout;
  isModified|=!compareStrings(settings.getCharsetName(),(String)myComponent.myCharsetNameCombo.getSelectedItem());
  isModified|=!FileTypeManagerEx.getInstanceEx().isIgnoredFilesListEqualToCurrent(myComponent.myIgnoreFilesField.getText());
  UpdateSettings updateSettings=UpdateSettings.getInstance();
  isModified|=updateSettings.CHECK_UPDATES == myComponent.myRbNeverCheck.isSelected();
  isModified|=updateSettings.ASK_USER != myComponent.myRbAskBeforeCheck.isSelected();
  return isModified || getDiffOptions().isModified();
}
