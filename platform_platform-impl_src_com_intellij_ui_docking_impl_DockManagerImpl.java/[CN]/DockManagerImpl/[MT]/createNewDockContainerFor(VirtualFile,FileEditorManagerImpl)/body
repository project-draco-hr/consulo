{
  DockContainer container=getFactory(DockableEditorContainerFactory.TYPE).createContainer(null);
  register(container);
  final DockWindow window=createWindowFor(null,container);
  Point showPoint=DimensionService.getInstance().getLocation("new.editor.frame",myProject);
  Dimension size=DimensionService.getInstance().getSize("new.editor.frame",myProject);
  if (size == null) {
    final IdeFrame frame=WindowManagerEx.getInstanceEx().findFrameFor(myProject);
    size=new Dimension(((Window)frame).getWidth() - 200,((Window)frame).getHeight() - 200);
  }
  if (showPoint == null) {
    final IdeFrame frame=WindowManagerEx.getInstanceEx().findFrameFor(myProject);
    showPoint=new Point(((Window)frame).getX() + 100,((Window)frame).getY() + 100);
  }
  Rectangle target=new Rectangle(showPoint,size);
  ScreenUtil.moveRectangleToFitTheScreen(target);
  ScreenUtil.cropRectangleToFitTheScreen(target);
  window.setLocation(target.getLocation());
  window.myDockContentUiContainer.setPreferredSize(target.getSize());
  window.setDimensionKey("new.editor.frame");
  window.show(false);
  window.getFrame().pack();
  final EditorWindow editorWindow=((DockableEditorTabbedContainer)container).getSplitters().getOrCreateCurrentWindow(file);
  final Pair<FileEditor[],FileEditorProvider[]> result=fileEditorManager.openFileImpl2(editorWindow,file,true);
  container.add(EditorTabbedContainer.createDockableEditor(myProject,null,file,new Presentation(file.getName()),editorWindow),new RelativePoint(target.getLocation()));
  SwingUtilities.invokeLater(new Runnable(){
    @Override public void run(){
      window.myUiContainer.setPreferredSize(null);
    }
  }
);
  return result;
}
