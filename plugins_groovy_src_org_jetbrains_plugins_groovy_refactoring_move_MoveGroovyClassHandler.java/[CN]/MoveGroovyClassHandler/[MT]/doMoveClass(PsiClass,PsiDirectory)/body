{
  if (!aClass.getLanguage().equals(GroovyFileType.GROOVY_LANGUAGE))   return null;
  PsiFile file=aClass.getContainingFile();
  final PsiPackage newPackage=JavaDirectoryService.getInstance().getPackage(moveDestination);
  GroovyChangeContextUtil.encodeContextInfo(aClass);
  PsiClass newClass=null;
  if (file instanceof GroovyFile) {
    if (((GroovyFile)file).isScript() || ((GroovyFile)file).getClasses().length > 1) {
      correctSelfReferences(aClass,newPackage);
      final PsiClass created=((GroovyFile)GroovyTemplatesFactory.createFromTemplate(moveDestination,aClass.getName(),aClass.getName() + NewGroovyActionBase.GROOVY_EXTENSION,"GroovyClass.groovy")).getClasses()[0];
      if (aClass.getDocComment() == null) {
        final PsiDocComment createdDocComment=created.getDocComment();
        if (createdDocComment != null) {
          aClass.addBefore(createdDocComment,null);
        }
      }
      newClass=(PsiClass)created.replace(aClass);
      correctOldClassReferences(newClass,aClass);
      aClass.delete();
    }
 else     if (!moveDestination.equals(file.getContainingDirectory()) && moveDestination.findFile(file.getName()) != null) {
      correctSelfReferences(aClass,newPackage);
      PsiFile newFile=moveDestination.findFile(file.getName());
      TreeElement enter=Factory.createSingleLeafElement(GroovyTokenTypes.mNLS,"\n",0,1,null,aClass.getManager());
      newFile.getNode().addChild(enter);
      newClass=(PsiClass)newFile.add(aClass);
      aClass.delete();
    }
 else     if (!moveDestination.equals(file.getContainingDirectory()) && moveDestination.findFile(file.getName()) == null) {
      if (!moveDestination.equals(file.getContainingDirectory())) {
        aClass.getManager().moveFile(file,moveDestination);
        newClass=((GroovyFile)file).getClasses()[0];
        if (newPackage != null) {
          ((PsiClassOwner)file).setPackageName(newPackage.getQualifiedName());
        }
      }
    }
  }
  if (newClass != null)   GroovyChangeContextUtil.decodeContextInfo(newClass,null,null);
  return newClass;
}
