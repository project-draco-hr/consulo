{
  super(project,true);
  myProject=project;
  mySourceClass=sourceClass;
  myPreselectMembers=preselectMembers;
  myMoveCallback=moveCallback;
  setTitle(MoveMembersImpl.REFACTORING_NAME);
  mySourceClassName=mySourceClass.getQualifiedName();
  PsiField[] fields=mySourceClass.getFields();
  PsiMethod[] methods=mySourceClass.getMethods();
  PsiClass[] innerClasses=mySourceClass.getInnerClasses();
  ArrayList<MemberInfo> memberList=new ArrayList<MemberInfo>(fields.length + methods.length);
  for (int idx=0; idx < innerClasses.length; idx++) {
    PsiClass innerClass=innerClasses[idx];
    if (!innerClass.hasModifierProperty(PsiModifier.STATIC))     continue;
    MemberInfo info=new MemberInfo(innerClass);
    if (myPreselectMembers.contains(innerClass)) {
      info.setChecked(true);
    }
    memberList.add(info);
  }
  for (int idx=0; idx < fields.length; idx++) {
    PsiField field=fields[idx];
    if (field.hasModifierProperty(PsiModifier.STATIC)) {
      MemberInfo info=new MemberInfo(field);
      if (myPreselectMembers.contains(field)) {
        info.setChecked(true);
      }
      memberList.add(info);
    }
  }
  for (int idx=0; idx < methods.length; idx++) {
    PsiMethod method=methods[idx];
    if (method.hasModifierProperty(PsiModifier.STATIC)) {
      MemberInfo info=new MemberInfo(method);
      if (myPreselectMembers.contains(method)) {
        info.setChecked(true);
      }
      memberList.add(info);
    }
  }
  myMemberInfos=memberList.toArray(new MemberInfo[memberList.size()]);
  String fqName=initialTargetClass != null && !sourceClass.equals(initialTargetClass) ? initialTargetClass.getQualifiedName() : "";
  myTfTargetClassName=new ReferenceEditorWithBrowseButton(new ChooseClassAction(),fqName,PsiManager.getInstance(myProject),true);
  init();
}
