{
  myMyTab=new MyTabImpl(myWholePanel);
  myOptionsList.setCellRenderer(new OptionsReneder());
  myOptionsList.setModel(myOptionsModel);
  MergePanel2 mergePanel=getMergePanel();
  mergePanel.setEditorProperty(MergePanel2.LINE_NUMBERS,Boolean.FALSE);
  mergePanel.setEditorProperty(MergePanel2.LINE_MARKERS_AREA,Boolean.FALSE);
  mergePanel.setEditorProperty(MergePanel2.ADDITIONAL_LINES,new Integer(1));
  mergePanel.setEditorProperty(MergePanel2.ADDITIONAL_COLUMNS,new Integer(1));
  for (int i=0; i < MergePanel2.EDITORS_COUNT; i++) {
    final EditorMouseListener motionListener=new EditorMouseListener(i);
    final EditorClickListener clickListener=new EditorClickListener(i);
    mergePanel.getEditorPlace(i).addListener(new EditorPlace.EditorListener(){
      public void onEditorCreated(      EditorPlace place){
        Editor editor=place.getEditor();
        editor.addEditorMouseMotionListener(motionListener);
        editor.addEditorMouseListener(clickListener);
        editor.getCaretModel().addCaretListener(clickListener);
      }
      public void onEditorReleased(      Editor releasedEditor){
        releasedEditor.removeEditorMouseMotionListener(motionListener);
        releasedEditor.removeEditorMouseListener(clickListener);
      }
    }
);
    Editor editor=mergePanel.getEditor(i);
    if (editor != null) {
      editor.addEditorMouseMotionListener(motionListener);
      editor.addEditorMouseListener(clickListener);
    }
  }
  ListSelectionModel selectionModel=myOptionsList.getSelectionModel();
  selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  selectionModel.addListSelectionListener(myOptionSelectionListener);
  getBackgroundColorPanel().addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      MyColorAndFontDescription selectedDescription=getSelectedDescription();
      ColorPanel colorPanel=getBackgroundColorPanel();
      if (!checkModifiableScheme()) {
        colorPanel.setSelectedColor(selectedDescription.getBackgroundColor());
        return;
      }
      selectedDescription.setBackgroundColor(colorPanel.getSelectedColor());
      selectedDescription.apply(myScheme);
      updatePreview();
    }
  }
);
  getStripeMarkColorPanel().addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      MyColorAndFontDescription selectedDescription=getSelectedDescription();
      ColorPanel colorPanel=getStripeMarkColorPanel();
      if (!checkModifiableScheme()) {
        colorPanel.setSelectedColor(selectedDescription.getStripeMarkColor());
        return;
      }
      selectedDescription.setStripeMarkColor(colorPanel.getSelectedColor());
      selectedDescription.apply(myScheme);
      updatePreview();
    }
  }
);
}
