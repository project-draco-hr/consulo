{
  for (  VirtualFile f : roots) {
    VfsUtilCore.visitChildrenRecursively(f,new VirtualFileVisitor(){
      @Override public boolean visitFile(      @NotNull VirtualFile f){
        try {
          indicator.checkCanceled();
          indicator.setText2(f.getPath());
          if (f.isDirectory()) {
            if (lookForNested) {
              f.refresh(false,false);
            }
 else {
              return false;
            }
          }
 else {
            if (f.getName().equalsIgnoreCase(MavenConstants.POM_XML)) {
              result.add(f);
            }
          }
        }
 catch (        InvalidVirtualFileAccessException e) {
          MavenLog.LOG.info(e);
        }
catch (        MavenProcessCanceledException e) {
          throw new VisitorException(e);
        }
        return true;
      }
    }
,MavenProcessCanceledException.class);
  }
  return result;
}
