{
  if (id.getType() == ProjectEntityType.SYNTHETIC) {
    return SYNTHETIC_WEIGHT;
  }
 else   if (id.getType() == ProjectEntityType.JAR) {
    return JAR_WEIGHT;
  }
  Object entity=id.mapToEntity(myContext,myProject);
  if (entity instanceof AbstractCompositeData) {
    entity=((AbstractCompositeData)entity).getIdeEntity();
  }
  final Ref<Integer> result=new Ref<Integer>();
  if (entity instanceof ProjectEntityData) {
    ((ProjectEntityData)entity).invite(new ExternalEntityVisitor(){
      @Override public void visit(      @NotNull ProjectData project){
        result.set(PROJECT_WEIGHT);
      }
      @Override public void visit(      @NotNull ModuleData module){
        result.set(MODULE_WEIGHT);
      }
      @Override public void visit(      @NotNull ContentRootData contentRoot){
        result.set(CONTENT_ROOT_WEIGHT);
      }
      @Override public void visit(      @NotNull LibraryData library){
        result.set(LIBRARY_WEIGHT);
      }
      @Override public void visit(      @NotNull JarData jar){
        result.set(JAR_WEIGHT);
      }
      @Override public void visit(      @NotNull ModuleDependencyData dependency){
        result.set(MODULE_DEPENDENCY_WEIGHT);
      }
      @Override public void visit(      @NotNull LibraryDependencyData dependency){
        result.set(LIBRARY_DEPENDENCY_WEIGHT);
      }
      @Override public void visit(      @NotNull CompositeLibraryDependencyData dependency){
        result.set(LIBRARY_DEPENDENCY_WEIGHT);
      }
    }
);
  }
 else {
    ExternalSystemUtil.dispatch(entity,new IdeEntityVisitor(){
      @Override public void visit(      @NotNull Project project){
        result.set(PROJECT_WEIGHT);
      }
      @Override public void visit(      @NotNull Module module){
        result.set(MODULE_WEIGHT);
      }
      @Override public void visit(      @NotNull ModuleAwareContentRoot contentRoot){
        int i=0;
        for (        OrderEntry entry : myContext.getPlatformFacade().getOrderEntries(contentRoot.getModule())) {
          if (entry instanceof ModuleSourceOrderEntry) {
            result.set(i);
            return;
          }
          i++;
        }
        result.set(CONTENT_ROOT_WEIGHT);
      }
      @Override public void visit(      @NotNull LibraryOrderEntry libraryDependency){
        result.set(getWeight(libraryDependency.getOwnerModule(),libraryDependency));
      }
      @Override public void visit(      @NotNull ModuleOrderEntry moduleDependency){
        result.set(getWeight(moduleDependency.getOwnerModule(),moduleDependency));
      }
      @Override public void visit(      @NotNull Library library){
        result.set(LIBRARY_WEIGHT);
      }
    }
);
  }
  final Integer i=result.get();
  return i == null ? UNKNOWN_WEIGHT : i;
}
