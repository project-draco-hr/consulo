{
  VirtualFile repo=repositorySelector.getRepository();
  HgResolveCommand command=new HgResolveCommand(project);
  final ModalityState modalityState=ApplicationManager.getApplication().getModalityStateForComponent(getRootPane());
  command.list(repo,new Consumer<Map<HgFile,HgResolveStatusEnum>>(){
    @Override public void consume(    Map<HgFile,HgResolveStatusEnum> status){
      final DefaultListModel model=new DefaultListModel();
      for (      Map.Entry<HgFile,HgResolveStatusEnum> entry : status.entrySet()) {
        if (entry.getValue() == HgResolveStatusEnum.UNRESOLVED) {
          model.addElement(entry.getKey().getRelativePath());
        }
      }
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          setOKActionEnabled(!model.isEmpty());
          if (model.isEmpty()) {
            model.addElement("No conflicts to resolve");
          }
          conflictsList.setModel(model);
        }
      }
,modalityState);
    }
  }
);
}
