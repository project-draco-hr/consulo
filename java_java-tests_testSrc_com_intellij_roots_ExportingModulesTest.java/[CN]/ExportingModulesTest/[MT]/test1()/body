{
  final String rootPath=PathManagerEx.getTestDataPath().replace(File.separatorChar,'/') + "/moduleRootManager/exportedModules/";
  final VirtualFile testRoot=LocalFileSystem.getInstance().refreshAndFindFileByPath(rootPath);
  assertNotNull(testRoot);
  final ModifiableModuleModel moduleModel=ModuleManager.getInstance(myProject).getModifiableModel();
  final Module moduleA=moduleModel.newModule("A.iml",StdModuleTypes.JAVA);
  final Module moduleB=moduleModel.newModule("B.iml",StdModuleTypes.JAVA);
  final Module moduleC=moduleModel.newModule("C.iml",StdModuleTypes.JAVA);
  moduleModel.commit();
  configureModule(moduleA,testRoot,"A");
  configureModule(moduleB,testRoot,"B");
  configureModule(moduleC,testRoot,"C");
  final ModifiableRootModel rootModelB=ModuleRootManager.getInstance(moduleB).getModifiableModel();
  final ModuleOrderEntry moduleBAentry=rootModelB.addModuleOrderEntry(moduleA);
  moduleBAentry.setExported(true);
  rootModelB.commit();
  final ModifiableRootModel rootModelC=ModuleRootManager.getInstance(moduleC).getModifiableModel();
  rootModelC.addModuleOrderEntry(moduleB);
  rootModelC.commit();
  final PsiClass pCClass=JavaPsiFacade.getInstance(myProject).findClass("p.C",GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleC));
  assertNotNull(pCClass);
  final PsiClass pAClass=JavaPsiFacade.getInstance(myProject).findClass("p.A",GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleB));
  assertNotNull(pAClass);
  final PsiClass pAClass2=JavaPsiFacade.getInstance(myProject).findClass("p.A",GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleC));
  assertNotNull(pAClass2);
}
