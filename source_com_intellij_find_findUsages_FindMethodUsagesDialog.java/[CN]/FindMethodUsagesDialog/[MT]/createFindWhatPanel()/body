{
  JPanel findWhatPanel=new JPanel();
  findWhatPanel.setBorder(IdeBorderFactory.createTitledBorder(FindBundle.message("find.what.group")));
  findWhatPanel.setLayout(new BoxLayout(findWhatPanel,BoxLayout.Y_AXIS));
  myCbUsages=addCheckboxToPanel(FindBundle.message("find.what.usages.checkbox"),myFindUsagesOptions.isUsages,findWhatPanel,true);
  PsiMethod method=(PsiMethod)getPsiElement();
  PsiClass aClass=method.getContainingClass();
  if (!method.isConstructor() && !method.hasModifierProperty(PsiModifier.STATIC) && !method.hasModifierProperty(PsiModifier.FINAL)&& !method.hasModifierProperty(PsiModifier.PRIVATE)&& aClass != null && !(aClass instanceof PsiAnonymousClass) && !aClass.hasModifierProperty(PsiModifier.FINAL)) {
    if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {
      myCbImplementingMethods=addCheckboxToPanel(FindBundle.message("find.what.implementing.methods.checkbox"),myFindUsagesOptions.isImplementingMethods,findWhatPanel,true);
    }
 else {
      myCbOverridingMethods=addCheckboxToPanel(FindBundle.message("find.what.overriding.methods.checkbox"),myFindUsagesOptions.isOverridingMethods,findWhatPanel,true);
    }
  }
 else {
    myHasFindWhatPanel=false;
    return null;
  }
  myHasFindWhatPanel=true;
  return findWhatPanel;
}
