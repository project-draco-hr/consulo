{
  super(new BorderLayout());
  myModel=model;
  myFactory=factory;
  mySchemesPanel=new CodeStyleSchemesPanel(model);
  myProperties=PropertiesComponent.getInstance();
  model.addListener(new CodeStyleSettingsListener(){
    @Override public void currentSchemeChanged(    final Object source){
      if (source != mySchemesPanel) {
        mySchemesPanel.onSelectedSchemeChanged();
      }
      onCurrentSchemeChanged();
    }
    @Override public void schemeListChanged(){
      mySchemesPanel.resetSchemesCombo();
    }
    @Override public void currentSettingsChanged(){
      ensureCurrentPanel().onSomethingChanged();
    }
    @Override public void usePerProjectSettingsOptionChanged(){
      mySchemesPanel.usePerProjectSettingsOptionChanged();
    }
    @Override public void schemeChanged(    final CodeStyleScheme scheme){
      ensurePanel(scheme).reset();
    }
  }
);
  addWaitCard();
  JLabel link=new SwingActionLink(mySetFromAction);
  link.setVerticalAlignment(SwingConstants.BOTTOM);
  JPanel top=new JPanel(new BorderLayout());
  top.add(BorderLayout.WEST,mySchemesPanel.getPanel());
  top.add(BorderLayout.EAST,link);
  add(top,BorderLayout.NORTH);
  add(mySettingsPanel,BorderLayout.CENTER);
  mySchemesPanel.resetSchemesCombo();
  mySchemesPanel.onSelectedSchemeChanged();
  onCurrentSchemeChanged();
}
