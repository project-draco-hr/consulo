{
  super(new BorderLayout());
  myModel=model;
  myFactory=factory;
  mySchemesPanel=new CodeStyleSchemesPanel(model);
  myLangSelector=langSelector;
  model.addListener(new CodeStyleSettingsListener(){
    @Override public void currentSchemeChanged(    final Object source){
      if (source != mySchemesPanel) {
        mySchemesPanel.onSelectedSchemeChanged();
      }
      onCurrentSchemeChanged();
    }
    @Override public void schemeListChanged(){
      mySchemesPanel.resetSchemesCombo();
    }
    @Override public void currentSettingsChanged(){
      ensureCurrentPanel().onSomethingChanged();
    }
    @Override public void usePerProjectSettingsOptionChanged(){
      mySchemesPanel.usePerProjectSettingsOptionChanged();
    }
    @Override public void schemeChanged(    final CodeStyleScheme scheme){
      ensurePanel(scheme).reset();
    }
  }
);
  myLangSelector.addListener(this);
  addWaitCard();
  add(mySchemesPanel.getPanel(),BorderLayout.NORTH);
  myDetailsComponent=new DetailsComponent();
  myDetailsComponent.setPaintBorder(false);
  myDetailsComponent.setContent(mySettingsPanel);
  myDetailsComponent.setText(getDisplayName());
  myDetailsComponent.setBannerMinHeight(24);
  add(myDetailsComponent.getComponent(),BorderLayout.CENTER);
  mySchemesPanel.resetSchemesCombo();
  mySchemesPanel.onSelectedSchemeChanged();
  onCurrentSchemeChanged();
}
