{
  myProject=project;
  myVcs=GitVcs.getInstance(myProject);
  myFile=file;
  myBaseRevision=revision == null ? (myVcs.getDiffProvider().getCurrentRevision(file)) : revision;
  myMonitorFlag=monitorFlag;
  if (myMonitorFlag) {
    myFileListener=new VirtualFileAdapter(){
      @Override public void contentsChanged(      final VirtualFileEvent event){
        if (myFile != event.getFile())         return;
        if (!event.isFromRefresh())         return;
        final VcsRevisionNumber currentRevision=myVcs.getDiffProvider().getCurrentRevision(myFile);
        if (currentRevision != null && currentRevision.equals(revision))         return;
        fireAnnotationChanged();
      }
    }
;
    VirtualFileManager.getInstance().addVirtualFileListener(myFileListener);
    myFileStatusListener=new MyFileStatusListener();
    FileStatusManager.getInstance(myProject).addFileStatusListener(myFileStatusListener);
  }
 else {
    myFileListener=null;
    myFileStatusListener=null;
  }
}
