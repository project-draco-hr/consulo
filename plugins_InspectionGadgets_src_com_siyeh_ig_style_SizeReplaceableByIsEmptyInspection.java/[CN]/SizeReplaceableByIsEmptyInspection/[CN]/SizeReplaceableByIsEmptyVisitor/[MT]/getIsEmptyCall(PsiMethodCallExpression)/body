{
  final PsiReferenceExpression methodExpression=callExpression.getMethodExpression();
  final String referenceName=methodExpression.getReferenceName();
  if (!HardcodedMethodConstants.SIZE.equals(referenceName) && !HardcodedMethodConstants.LENGTH.equals(referenceName)) {
    return null;
  }
  final PsiExpressionList argumentList=callExpression.getArgumentList();
  final PsiExpression[] expressions=argumentList.getExpressions();
  if (expressions.length != 0) {
    return null;
  }
  final PsiExpression qualifierExpression=methodExpression.getQualifierExpression();
  if (qualifierExpression == null) {
    return null;
  }
  final PsiType type=qualifierExpression.getType();
  if (!(type instanceof PsiClassType)) {
    return null;
  }
  final PsiClassType classType=(PsiClassType)type;
  final PsiClass aClass=classType.resolve();
  if (aClass == null) {
    return null;
  }
  final PsiMethod[] methods=aClass.findMethodsByName("isEmpty",true);
  for (  PsiMethod method : methods) {
    final PsiParameterList parameterList=method.getParameterList();
    if (parameterList.getParametersCount() == 0) {
      return qualifierExpression.getText() + ".isEmpty()";
    }
  }
  return null;
}
