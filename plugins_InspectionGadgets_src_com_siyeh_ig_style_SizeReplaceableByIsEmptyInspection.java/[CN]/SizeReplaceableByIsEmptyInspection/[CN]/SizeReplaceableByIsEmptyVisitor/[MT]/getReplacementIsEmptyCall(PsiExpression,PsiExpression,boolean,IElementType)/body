{
  final PsiMethodCallExpression callExpression=(PsiMethodCallExpression)lhs;
  final String isEmptyCall=getIsEmptyCall(callExpression);
  if (isEmptyCall == null) {
    return null;
  }
  final Object object=ExpressionUtils.computeConstantExpression(rhs);
  if (!(object instanceof Integer)) {
    return null;
  }
  final Integer integer=(Integer)object;
  final int constant=integer.intValue();
  if (constant != 0) {
    return null;
  }
  if (JavaTokenType.EQEQ.equals(tokenType)) {
    return isEmptyCall;
  }
  if (ignoreNegations) {
    return null;
  }
  if (JavaTokenType.NE.equals(tokenType)) {
    return '!' + isEmptyCall;
  }
 else   if (flipped) {
    if (JavaTokenType.LT.equals(tokenType)) {
      return '!' + isEmptyCall;
    }
  }
 else   if (JavaTokenType.GT.equals(tokenType)) {
    return '!' + isEmptyCall;
  }
  return null;
}
