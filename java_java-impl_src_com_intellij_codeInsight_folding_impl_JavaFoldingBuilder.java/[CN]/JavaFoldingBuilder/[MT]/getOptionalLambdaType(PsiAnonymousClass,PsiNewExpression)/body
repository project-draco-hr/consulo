{
  ExpectedTypeInfo[] types=ExpectedTypesProvider.getExpectedTypes(expression,false);
  if (expression.getParent() instanceof PsiReferenceExpression || types.length != 1 || !types[0].getType().equals(anonymousClass.getBaseClassType())) {
    final String baseClassName=ObjectUtils.assertNotNull(anonymousClass.getBaseClassType().resolve()).getName();
    if (baseClassName != null) {
      return "(" + baseClassName + ") ";
    }
  }
  return "";
}
