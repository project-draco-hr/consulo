{
  List<Pair<String,Key>> chunks=null;
  int pos=0;
  text=normalizeAsciiControlCharacters(text);
  while (true) {
    int escSeqBeginInd=text.indexOf(CSI,pos);
    if (escSeqBeginInd < 0) {
      break;
    }
    if (pos < escSeqBeginInd) {
      chunks=processTextChunk(chunks,text.substring(pos,escSeqBeginInd),outputType,textAcceptor);
    }
    final int escSeqEndInd=findEscSeqEndIndex(text,escSeqBeginInd);
    if (escSeqEndInd < 0) {
      break;
    }
    if (text.charAt(escSeqEndInd - 1) == 'm') {
      String escSeq=text.substring(escSeqBeginInd,escSeqEndInd);
      String colorAttribute=INNER_PATTERN.matcher(escSeq).replaceAll(";");
      myCurrentTextAttributes=ColoredOutputTypeRegistry.getInstance().getOutputKey(colorAttribute);
    }
    pos=escSeqEndInd;
  }
  if (pos < text.length()) {
    chunks=processTextChunk(chunks,text.substring(pos),outputType,textAcceptor);
  }
  if (chunks != null && textAcceptor instanceof ColoredChunksAcceptor) {
    ((ColoredChunksAcceptor)textAcceptor).coloredChunksAvailable(chunks);
  }
}
