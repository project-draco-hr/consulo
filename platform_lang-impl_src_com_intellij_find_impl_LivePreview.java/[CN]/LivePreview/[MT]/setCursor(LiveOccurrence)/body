{
  hideBalloon();
  myCursor=liveOccurrence;
  if (myCursorHighlighter != null) {
    HighlightManager.getInstance(myProject).removeSegmentHighlighter(myEditor,myCursorHighlighter);
    myCursorHighlighter=null;
  }
  if (myCursor != null) {
    ArrayList<RangeHighlighter> dummy=new ArrayList<RangeHighlighter>();
    highlightRange(myCursor.getPrimaryRange(),new TextAttributes(null,null,null,null,0),dummy);
    if (!dummy.isEmpty()) {
      myCursorHighlighter=dummy.get(0);
      myCursorHighlighter.setCustomRenderer(new CustomHighlighterRenderer(){
        @Override public void paint(        Editor editor,        RangeHighlighter highlighter,        Graphics g){
          Graphics2D g2d=(Graphics2D)g;
          VisualPosition startVp=editor.offsetToVisualPosition(highlighter.getStartOffset());
          VisualPosition endVp=editor.offsetToVisualPosition(highlighter.getEndOffset());
          Point start=editor.visualPositionToXY(startVp);
          Point end=editor.visualPositionToXY(endVp);
          g2d.setColor(Color.YELLOW);
          Point startP=new Point(start.x - 5,start.y - 5);
          int lineHeight=editor.getLineHeight();
          Point endP=new Point(start.x - 5,end.y + lineHeight + 10);
          g2d.setPaint(new GradientPaint(startP,Color.YELLOW,endP,new Color(255,200,0)));
          g2d.fillRoundRect(startP.x,startP.y,end.x - start.x + 10,lineHeight + 10,10,10);
          g2d.setColor(Color.GRAY);
          g2d.drawRoundRect(start.x - 5,start.y - 5,end.x - start.x + 10,lineHeight + 10,10,10);
        }
      }
);
    }
    if (!insideVisibleArea(myEditor,myCursor.getPrimaryRange())) {
      myEditor.getScrollingModel().scrollTo(myEditor.offsetToLogicalPosition(myCursor.getPrimaryRange().getStartOffset()),ScrollType.CENTER);
      myEditor.getScrollingModel().runActionOnScrollingFinished(new Runnable(){
        @Override public void run(){
          showReplacementPreview();
        }
      }
);
    }
 else {
      showReplacementPreview();
    }
  }
}
