{
  final Change change=getUserObject();
  final FilePath filePath=ChangesUtil.getFilePath(change);
  final String fileName=filePath.getName();
  VirtualFile vFile=filePath.getVirtualFile();
  if (myDecorator != null) {
    myDecorator.preDecorate(change,renderer,renderer.isShowFlatten());
  }
  final Color changeColor=change.getFileStatus().getColor();
  renderer.appendFileName(vFile,fileName,changeColor);
  final String originText=change.getOriginText(myProject);
  if (originText != null) {
    renderer.append(" " + originText,SimpleTextAttributes.REGULAR_ATTRIBUTES);
  }
  if (renderer.isShowFlatten()) {
    final File parentFile=filePath.getIOFile().getParentFile();
    if (parentFile != null) {
      renderer.append(" (" + parentFile.getPath() + ")",SimpleTextAttributes.GRAYED_ATTRIBUTES);
    }
    appendSwitched(renderer);
  }
 else   if (getCount() != 1 || getDirectoryCount() != 0) {
    appendSwitched(renderer);
    appendCount(renderer);
  }
 else {
    appendSwitched(renderer);
  }
  final Icon addIcon=change.getAdditionalIcon();
  if (addIcon != null) {
    renderer.setIcon(addIcon);
  }
 else {
    if (filePath.isDirectory() || !isLeaf()) {
      renderer.setIcon(expanded ? PlatformIcons.DIRECTORY_OPEN_ICON : PlatformIcons.DIRECTORY_CLOSED_ICON);
    }
 else {
      renderer.setIcon(filePath.getFileType().getIcon());
    }
  }
  if (myDecorator != null) {
    myDecorator.decorate(change,renderer,renderer.isShowFlatten());
  }
}
