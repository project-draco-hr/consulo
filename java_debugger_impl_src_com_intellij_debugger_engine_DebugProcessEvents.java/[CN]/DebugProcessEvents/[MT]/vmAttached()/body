{
  DebuggerManagerThreadImpl.assertIsManagerThread();
  LOG.assertTrue(!isAttached());
  if (myState.compareAndSet(STATE_INITIAL,STATE_ATTACHED)) {
    final VirtualMachineProxyImpl machineProxy=getVirtualMachineProxy();
    if (machineProxy.canGetMethodReturnValues()) {
      myReturnValueWatcher=new MethodReturnValueWatcher(machineProxy.eventRequestManager());
    }
    DebuggerManagerEx.getInstanceEx(getProject()).getBreakpointManager().setInitialBreakpointsState();
    myDebugProcessDispatcher.getMulticaster().processAttached(this);
    final String addressDisplayName=DebuggerBundle.getAddressDisplayName(getConnection());
    final String transportName=DebuggerBundle.getTransportName(getConnection());
    showStatusText(DebuggerBundle.message("status.connected",addressDisplayName,transportName));
    if (LOG.isDebugEnabled()) {
      LOG.debug("leave: processVMStartEvent()");
    }
  }
}
