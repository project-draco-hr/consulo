{
  if (!(expression instanceof PsiMethodCallExpression)) {
    return null;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)expression;
  final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
  final String referenceName=methodExpression.getReferenceName();
  if (!"equals".equals(referenceName)) {
    return null;
  }
  final PsiExpression qualifierExpression=methodExpression.getQualifierExpression();
  if (qualifierExpression == null) {
    return null;
  }
  final PsiType type=qualifierExpression.getType();
  if (type == null || !type.equalsToText("java.lang.String")) {
    return null;
  }
  final PsiExpressionList argumentList=methodCallExpression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 1) {
    return null;
  }
  final PsiExpression argument=arguments[0];
  final PsiType argumentType=argument.getType();
  if (argumentType == null || !argumentType.equalsToText("java.lang.String")) {
    return null;
  }
  if (PsiUtil.isConstantExpression(qualifierExpression)) {
    return argument;
  }
 else   if (PsiUtil.isConstantExpression(argument)) {
    return qualifierExpression;
  }
  return null;
}
