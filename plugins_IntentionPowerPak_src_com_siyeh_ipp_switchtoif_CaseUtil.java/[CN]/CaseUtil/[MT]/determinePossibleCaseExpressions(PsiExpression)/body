{
  final List out=new ArrayList(10);
  PsiExpression expToCheck=exp;
  while (expToCheck instanceof PsiParenthesizedExpression) {
    expToCheck=((PsiParenthesizedExpression)exp).getExpression();
  }
  if (!(expToCheck instanceof PsiBinaryExpression)) {
    return out;
  }
  final PsiBinaryExpression binaryExp=(PsiBinaryExpression)expToCheck;
  final PsiJavaToken sign=binaryExp.getOperationSign();
  final IElementType operation=sign.getTokenType();
  final PsiExpression lhs=binaryExp.getLOperand();
  final PsiExpression rhs=binaryExp.getROperand();
  if (operation.equals(JavaTokenType.OROR)) {
    return determinePossibleCaseExpressions(lhs);
  }
 else   if (operation.equals(JavaTokenType.EQEQ)) {
    if (canBeCaseLabel(lhs)) {
      out.add(rhs);
    }
    if (canBeCaseLabel(rhs)) {
      out.add(lhs);
    }
  }
  return out;
}
