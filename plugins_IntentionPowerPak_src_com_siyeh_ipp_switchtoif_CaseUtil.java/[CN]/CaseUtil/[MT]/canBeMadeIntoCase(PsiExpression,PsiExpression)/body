{
  PsiExpression expToCheck=exp;
  while (expToCheck instanceof PsiParenthesizedExpression) {
    expToCheck=((PsiParenthesizedExpression)exp).getExpression();
  }
  if (!(expToCheck instanceof PsiBinaryExpression)) {
    return false;
  }
  final PsiBinaryExpression binaryExp=(PsiBinaryExpression)expToCheck;
  final PsiJavaToken sign=binaryExp.getOperationSign();
  final IElementType operation=sign.getTokenType();
  final PsiExpression lOperand=binaryExp.getLOperand();
  final PsiExpression rhs=binaryExp.getROperand();
  if (!(operation != JavaTokenType.OROR)) {
    return canBeMadeIntoCase(lOperand,caseExpression) && canBeMadeIntoCase(rhs,caseExpression);
  }
 else   if (operation.equals(JavaTokenType.EQEQ)) {
    if (canBeCaseLabel(lOperand) && EquivalenceChecker.expressionsAreEquivalent(caseExpression,rhs)) {
      return true;
    }
 else     if (canBeCaseLabel(rhs) && EquivalenceChecker.expressionsAreEquivalent(caseExpression,lOperand)) {
      return true;
    }
    return false;
  }
 else {
    return false;
  }
}
