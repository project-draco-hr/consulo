{
  final GrModifierList modifierList=(GrModifierList)annotationCollector.getParent();
  Map<String,Map<String,GrAnnotationNameValuePair>> annotations=ContainerUtil.newHashMap();
  collectAliasedAnnotationsFromAnnotationCollectorValueAttribute(annotationCollector,(HashMap<String,Map<String,GrAnnotationNameValuePair>>)annotations);
  collectAliasedAnnotationsFromAnnotationCollectorAnnotations(modifierList,(HashMap<String,Map<String,GrAnnotationNameValuePair>>)annotations);
  final PsiManager manager=alias.getManager();
  final GrAnnotationNameValuePair[] attributes=alias.getParameterList().getAttributes();
  for (  Map.Entry<String,Map<String,GrAnnotationNameValuePair>> entry : annotations.entrySet()) {
    final String qname=entry.getKey();
    final PsiClass resolved=JavaPsiFacade.getInstance(alias.getProject()).findClass(qname,alias.getResolveScope());
    if (resolved == null)     continue;
    final GrLightAnnotation annotation=new GrLightAnnotation(manager,alias.getLanguage(),qname,modifierList);
    Set<String> usedAttrs=ContainerUtil.newHashSet();
    for (    GrAnnotationNameValuePair attr : attributes) {
      final String name=attr.getName() != null ? attr.getName() : "value";
      if (resolved.findMethodsByName(name,false).length > 0) {
        annotation.addAttribute(attr);
      }
      usedAttrs.add(name);
    }
    final Map<String,GrAnnotationNameValuePair> defaults=entry.getValue();
    for (    Map.Entry<String,GrAnnotationNameValuePair> defa : defaults.entrySet()) {
      if (!usedAttrs.contains(defa.getKey())) {
        annotation.addAttribute(defa.getValue());
      }
    }
    list.add(annotation);
  }
}
