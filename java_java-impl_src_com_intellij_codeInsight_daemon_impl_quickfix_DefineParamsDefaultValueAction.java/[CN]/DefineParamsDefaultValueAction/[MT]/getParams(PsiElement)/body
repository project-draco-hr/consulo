{
  final PsiMethod method=PsiTreeUtil.getParentOfType(element,PsiMethod.class);
  final PsiParameter[] parameters=method.getParameterList().getParameters();
  final ParameterClassMember[] members=new ParameterClassMember[parameters.length];
  for (int i=0; i < members.length; i++) {
    members[i]=new ParameterClassMember(parameters[i]);
  }
  final MemberChooser<ParameterClassMember> chooser=new MemberChooser<ParameterClassMember>(members,false,true,element.getProject());
  chooser.selectElements(members);
  chooser.setTitle("Choose " + (method.isConstructor() ? "Constructor" : "Method") + " Parameters");
  chooser.show();
  if (chooser.isOK()) {
    final List<ParameterClassMember> elements=chooser.getSelectedElements();
    if (elements != null) {
      PsiParameter[] params=new PsiParameter[elements.size()];
      for (int i=0; i < params.length; i++) {
        params[i]=elements.get(i).getParameter();
      }
      return params;
    }
  }
  return null;
}
