{
  StepSequence myStepSequence;
  myStepSequence=new StepSequence(null);
  myStepSequence.addCommonStep(new ProjectNameWithTypeStep(context,myStepSequence,this));
  final ModuleType[] allModuleTypes=ModuleTypeManager.getInstance().getRegisteredTypes();
  for (  ModuleType type : allModuleTypes) {
    final StepSequence sequence=new StepSequence(myStepSequence);
    myStepSequence.addSpecificSteps(type.getId(),sequence);
    final ModuleBuilder builder=type.createModuleBuilder();
    myBuildersMap.put(type.getId(),builder);
    final ModuleWizardStep[] steps=type.createWizardSteps(context,builder,modulesProvider);
    for (    ModuleWizardStep step : steps) {
      sequence.addCommonStep(step);
    }
    if (FrameworkSupportUtil.hasProviders(type)) {
      sequence.addCommonStep(new SupportForFrameworksStep(builder,LibrariesContainerFactory.createContainer(context.getProject())));
    }
  }
  myBuildersMap.put(ModuleType.EMPTY.getId(),new EmptyModuleBuilder());
  return myStepSequence;
}
