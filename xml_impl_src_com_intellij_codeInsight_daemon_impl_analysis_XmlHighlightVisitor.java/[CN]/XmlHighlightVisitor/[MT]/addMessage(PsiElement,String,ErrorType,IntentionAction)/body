{
  if (message != null && message.length() > 0) {
    final PsiFile containingFile=context.getContainingFile();
    final HighlightInfoType defaultInfoType=type == ErrorType.ERROR ? HighlightInfoType.ERROR : type == ErrorType.WARNING ? HighlightInfoType.WARNING : HighlightInfoType.WEAK_WARNING;
    if (context instanceof XmlTag && XmlExtension.getExtension(containingFile).shouldBeHighlightedAsTag((XmlTag)context)) {
      addElementsForTagWithManyQuickFixes((XmlTag)context,message,defaultInfoType,fixes);
    }
 else {
      final PsiElement contextOfFile=containingFile.getContext();
      final HighlightInfo highlightInfo;
      if (contextOfFile != null) {
        TextRange range=InjectedLanguageManager.getInstance(context.getProject()).injectedToHost(context,context.getTextRange());
        highlightInfo=HighlightInfo.createHighlightInfo(defaultInfoType,range,message);
      }
 else {
        highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.WRONG_REF,context,message);
      }
      if (fixes != null) {
        for (        final IntentionAction quickFixAction : fixes) {
          if (quickFixAction == null)           continue;
          QuickFixAction.registerQuickFixAction(highlightInfo,quickFixAction);
        }
      }
      addToResults(highlightInfo);
    }
  }
}
