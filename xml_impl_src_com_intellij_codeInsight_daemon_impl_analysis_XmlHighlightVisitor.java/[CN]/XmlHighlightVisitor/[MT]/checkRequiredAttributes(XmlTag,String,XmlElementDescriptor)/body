{
  XmlAttributeDescriptor[] attributeDescriptors=elementDescriptor.getAttributesDescriptors(tag);
  Set<String> requiredAttributes=null;
  for (  XmlAttributeDescriptor attribute : attributeDescriptors) {
    if (attribute != null && attribute.isRequired()) {
      if (requiredAttributes == null) {
        requiredAttributes=new HashSet<String>();
      }
      requiredAttributes.add(attribute.getName(tag));
    }
  }
  if (requiredAttributes != null) {
    for (    final String attrName : requiredAttributes) {
      if (tag.getAttributeValue(attrName) == null && !XmlExtension.getExtension(tag.getContainingFile()).isRequiredAttributeImplicitlyPresent(tag,attrName)) {
        final InsertRequiredAttributeFix insertRequiredAttributeIntention=new InsertRequiredAttributeFix(tag,attrName,null);
        final String localizedMessage=XmlErrorMessages.message("element.doesnt.have.required.attribute",name,attrName);
        final InspectionProfile profile=InspectionProjectProfileManager.getInstance(tag.getProject()).getInspectionProfile();
        final LocalInspectionToolWrapper toolWrapper=(LocalInspectionToolWrapper)profile.getInspectionTool(RequiredAttributesInspection.SHORT_NAME,tag);
        if (toolWrapper != null) {
          RequiredAttributesInspection inspection=(RequiredAttributesInspection)toolWrapper.getTool();
          reportOneTagProblem(tag,attrName,localizedMessage,insertRequiredAttributeIntention,HighlightDisplayKey.find(RequiredAttributesInspection.SHORT_NAME),inspection,XmlEntitiesInspection.NOT_REQUIRED_ATTRIBUTE);
        }
      }
    }
  }
}
