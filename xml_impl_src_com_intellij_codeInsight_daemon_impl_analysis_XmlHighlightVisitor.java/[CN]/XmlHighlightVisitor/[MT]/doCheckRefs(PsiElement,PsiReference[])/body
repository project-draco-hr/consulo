{
  ProgressManager progressManager=ProgressManager.getInstance();
  for (  final PsiReference reference : references) {
    progressManager.checkCanceled();
    if (reference == null) {
      continue;
    }
    if (!reference.isSoft()) {
      if (hasBadResolve(reference)) {
        String description=getErrorDescription(reference);
        final int startOffset=reference.getElement().getTextRange().getStartOffset();
        final TextRange referenceRange=reference.getRangeInElement();
        if (referenceRange.getStartOffset() > referenceRange.getEndOffset()) {
          final PsiElement element=reference.getElement();
          final XmlTag tag=PsiTreeUtil.getParentOfType(element,XmlTag.class);
          LOG.error("Reference range start offset > end offset for element:  " + element.getText() + ", within tag: "+ (tag != null ? tag.getText() : "NULL")+ ", start offset: "+ referenceRange.getStartOffset()+ ", end offset: "+ referenceRange.getEndOffset());
        }
        HighlightInfo info=HighlightInfo.createHighlightInfo(getTagProblemInfoType(PsiTreeUtil.getParentOfType(value,XmlTag.class)),startOffset + referenceRange.getStartOffset(),startOffset + referenceRange.getEndOffset(),description);
        addToResults(info);
        if (reference instanceof QuickFixProvider)         ((QuickFixProvider)reference).registerQuickfix(info,reference);
      }
    }
  }
}
