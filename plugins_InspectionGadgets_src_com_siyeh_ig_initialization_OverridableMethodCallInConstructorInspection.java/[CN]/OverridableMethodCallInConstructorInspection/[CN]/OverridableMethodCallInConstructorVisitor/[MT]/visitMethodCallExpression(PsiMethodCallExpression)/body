{
  super.visitMethodCallExpression(call);
  final PsiMethod method=PsiTreeUtil.getParentOfType(call,PsiMethod.class);
  if (method == null) {
    return;
  }
  if (!method.isConstructor()) {
    return;
  }
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier != null) {
    if (!(qualifier instanceof PsiThisExpression || qualifier instanceof PsiSuperExpression)) {
      return;
    }
  }
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null) {
    return;
  }
  if (containingClass.hasModifierProperty(PsiModifier.FINAL)) {
    return;
  }
  final PsiMethod calledMethod=(PsiMethod)methodExpression.resolve();
  if (calledMethod == null) {
    return;
  }
  if (!PsiUtil.canBeOverriden(calledMethod)) {
    return;
  }
  registerMethodCallError(call);
}
