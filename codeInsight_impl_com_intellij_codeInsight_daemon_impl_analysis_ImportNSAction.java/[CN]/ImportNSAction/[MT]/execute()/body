{
  final Object[] objects=myNamespaces.keySet().toArray();
  Arrays.sort(objects);
  final JList list=new JList(objects);
  list.setCellRenderer(new FQNameCellRenderer());
  list.setSelectedIndex(0);
  final Runnable runnable=new Runnable(){
    public void run(){
      final String namespace=(String)list.getSelectedValue();
      if (namespace != null) {
        final Project project=myFile.getProject();
        new WriteCommandAction.Simple(project,myFile){
          protected void run() throws Throwable {
            final String prefix=myNamespaces.get(namespace);
            CreateNSDeclarationIntentionFix.insertDeclaration(namespace,myFile,prefix);
            if (prefix != null && myTag != null && myTag.isValid() && !myTag.getNamespacePrefix().equals(prefix)) {
              myTag.setName(prefix + ":" + myTag.getLocalName());
            }
          }
        }
.executeSilently();
      }
    }
  }
;
  if (list.getModel().getSize() == 1) {
    runnable.run();
  }
 else {
    new PopupChooserBuilder(list).setTitle(myTitle).setItemChoosenCallback(runnable).createPopup().showInBestPositionFor(myEditor);
  }
  return true;
}
