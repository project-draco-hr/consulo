{
  if (myIsDisposed)   return;
  AbstractVcs[] allVcss=getAllVcss();
  for (int i=0; i < allVcss.length; i++) {
    unregisterVcs(allVcss[i]);
  }
  try {
    final Collection<LineStatusTracker> trackers=myLineStatusTrackers.values();
    final LineStatusTracker[] lineStatusTrackers=trackers.toArray(new LineStatusTracker[trackers.size()]);
    for (int i=0; i < lineStatusTrackers.length; i++) {
      LineStatusTracker tracker=lineStatusTrackers[i];
      releaseTracker(tracker.getDocument());
    }
    myLineStatusTrackers=null;
    myContentManager=null;
    EditorFactory.getInstance().removeEditorFactoryListener(myEditorFactoryListener);
    FileStatusManager.getInstance(getProject()).removeFileStatusListener(myFileStatusListener);
    VirtualFileManager.getInstance().removeVirtualFileListener(myVirtualFileListener);
    ToolWindowManager toolWindowManager=ToolWindowManager.getInstance(myProject);
    if (toolWindowManager != null && toolWindowManager.getToolWindow(ToolWindowId.VCS) != null) {
      toolWindowManager.unregisterToolWindow(ToolWindowId.VCS);
    }
  }
  finally {
    myIsDisposed=true;
    myIsInitialized=false;
  }
}
