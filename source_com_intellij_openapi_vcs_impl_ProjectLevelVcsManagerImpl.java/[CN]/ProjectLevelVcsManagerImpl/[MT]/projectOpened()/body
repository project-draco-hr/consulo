{
  myContentManager=PeerFactory.getInstance().getContentFactory().createContentManager(true,myProject);
  myLineStatusTrackers=new com.intellij.util.containers.HashMap<Document,LineStatusTracker>();
  initialize();
  EditorFactory.getInstance().addEditorFactoryListener(myEditorFactoryListener);
  FileStatusManager.getInstance(getProject()).addFileStatusListener(myFileStatusListener);
  VirtualFileManager.getInstance().addVirtualFileListener(myVirtualFileListener);
  StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable(){
    public void run(){
      ToolWindowManager toolWindowManager=ToolWindowManager.getInstance(myProject);
      if (toolWindowManager != null) {
        ToolWindow toolWindow=toolWindowManager.registerToolWindow(ToolWindowId.VCS,myContentManager.getComponent(),ToolWindowAnchor.BOTTOM);
        toolWindow.setIcon(IconLoader.getIcon("/_cvs/cvs.png"));
        toolWindow.installWatcher(myContentManager);
      }
    }
  }
);
  final Module[] modules=ModuleManager.getInstance(myProject).getModules();
  for (int i=0; i < modules.length; i++) {
    Module module=modules[i];
    ModuleLevelVcsManager.getInstance(module).startVcs();
  }
}
