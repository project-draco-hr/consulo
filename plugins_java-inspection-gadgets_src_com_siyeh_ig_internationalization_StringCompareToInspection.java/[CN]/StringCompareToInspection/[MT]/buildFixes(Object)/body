{
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)infos[0];
  final List<InspectionGadgetsFix> result=new ArrayList();
  final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
  final PsiModifierListOwner annotatableQualifier=NonNlsUtils.getAnnotatableQualifier(methodExpression);
  if (annotatableQualifier != null) {
    final InspectionGadgetsFix fix=new DelegatingFix(new AddAnnotationFix(AnnotationUtil.NON_NLS,annotatableQualifier));
    result.add(fix);
  }
  final PsiModifierListOwner annotatableArgument=NonNlsUtils.getAnnotatableArgument(methodCallExpression);
  if (annotatableArgument != null) {
    final InspectionGadgetsFix fix=new DelegatingFix(new AddAnnotationFix(AnnotationUtil.NON_NLS,annotatableArgument));
    result.add(fix);
  }
  return result.toArray(new InspectionGadgetsFix[result.size()]);
}
