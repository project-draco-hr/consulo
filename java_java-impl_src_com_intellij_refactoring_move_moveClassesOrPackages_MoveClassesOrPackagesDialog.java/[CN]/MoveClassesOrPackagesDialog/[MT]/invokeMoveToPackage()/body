{
  final MoveDestination destination=selectDestination();
  if (destination == null)   return;
  saveRefactoringSettings();
  PsiManager manager=PsiManager.getInstance(getProject());
  for (  final PsiElement element : myElementsToMove) {
    String message=verifyDestinationForElement(element,destination);
    if (message != null) {
      String helpId=HelpID.getMoveHelpID(myElementsToMove[0]);
      CommonRefactoringUtil.showErrorMessage(RefactoringBundle.message("error.title"),message,helpId,getProject());
      return;
    }
  }
  try {
    for (    PsiElement element : myElementsToMove) {
      if (element instanceof PsiClass) {
        final PsiClass aClass=(PsiClass)element;
        final PsiDirectory targetDirectory=destination.getTargetIfExists(element.getContainingFile());
        if (targetDirectory != null) {
          manager.checkMove(aClass,targetDirectory);
        }
      }
    }
    MoveClassesOrPackagesProcessor processor=createMoveToPackageProcessor(destination,myElementsToMove,myMoveCallback);
    if (processor.verifyValidPackageName()) {
      invokeRefactoring(processor);
    }
  }
 catch (  IncorrectOperationException e) {
    String helpId=HelpID.getMoveHelpID(myElementsToMove[0]);
    CommonRefactoringUtil.showErrorMessage(RefactoringBundle.message("error.title"),e.getMessage(),helpId,getProject());
  }
}
