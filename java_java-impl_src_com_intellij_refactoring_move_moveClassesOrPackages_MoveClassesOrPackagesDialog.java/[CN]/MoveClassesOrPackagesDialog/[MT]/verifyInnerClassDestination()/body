{
  PsiClass targetClass=findTargetClass();
  if (targetClass == null)   return null;
  for (  PsiElement element : myElementsToMove) {
    if (PsiTreeUtil.isAncestor(element,targetClass,false)) {
      return RefactoringBundle.message("move.class.to.inner.move.to.self.error");
    }
    final Language targetClassLanguage=targetClass.getLanguage();
    if (!element.getLanguage().equals(targetClassLanguage)) {
      return RefactoringBundle.message("move.to.different.language",UsageViewUtil.getType(element),((PsiClass)element).getQualifiedName(),targetClass.getQualifiedName());
    }
  }
  while (targetClass != null) {
    if (targetClass.getContainingClass() != null && !targetClass.hasModifierProperty(PsiModifier.STATIC)) {
      return RefactoringBundle.message("move.class.to.inner.nonstatic.error");
    }
    targetClass=targetClass.getContainingClass();
  }
  return null;
}
