{
  final LinkedHashSet<PsiDirectory> targetDirectories=new LinkedHashSet<PsiDirectory>();
  final HashMap<PsiDirectory,String> pathsToCreate=new HashMap<PsiDirectory,String>();
  MoveClassesOrPackagesUtil.buildDirectoryList(new PackageWrapper(myManager,getTargetPackage()),sourceRoots,targetDirectories,pathsToCreate);
  if (!forceIncludeAll && (targetDirectories.size() != pathsToCreate.size() || !targetDirectories.containsAll(pathsToCreate.keySet()))) {
    targetDirectories.removeAll(pathsToCreate.keySet());
  }
  final ArrayList<DirectoryChooser.ItemWrapper> items=new ArrayList<DirectoryChooser.ItemWrapper>();
  DirectoryChooser.ItemWrapper initial=null;
  for (  PsiDirectory targetDirectory : targetDirectories) {
    DirectoryChooser.ItemWrapper itemWrapper=new DirectoryChooser.ItemWrapper(targetDirectory,pathsToCreate.get(targetDirectory));
    items.add(itemWrapper);
    if (fileIndex.getSourceRootForFile(targetDirectory.getVirtualFile()) == initialTargetDirectorySourceRoot) {
      initial=itemWrapper;
    }
  }
  comboBox.setModel(new CollectionComboBoxModel(items,initial != null ? initial : items.get(0)));
}
