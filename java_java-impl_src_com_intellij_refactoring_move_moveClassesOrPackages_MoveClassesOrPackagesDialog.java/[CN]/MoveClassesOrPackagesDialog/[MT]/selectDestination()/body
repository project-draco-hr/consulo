{
  final String packageName=getTargetPackage().trim();
  if (packageName.length() > 0 && !JavaPsiFacade.getInstance(myManager.getProject()).getNameHelper().isQualifiedName(packageName)) {
    Messages.showErrorDialog(myProject,RefactoringBundle.message("please.enter.a.valid.target.package.name"),RefactoringBundle.message("move.title"));
    return null;
  }
  RecentsManager.getInstance(myProject).registerRecentEntry(RECENTS_KEY,packageName);
  PackageWrapper targetPackage=new PackageWrapper(myManager,packageName);
  if (!targetPackage.exists()) {
    final int ret=Messages.showYesNoDialog(myProject,RefactoringBundle.message("package.does.not.exist",packageName),RefactoringBundle.message("move.title"),Messages.getQuestionIcon());
    if (ret != 0)     return null;
  }
  final DirectoryChooser.ItemWrapper selectedItem=(DirectoryChooser.ItemWrapper)myDestinationFolderCB.getComboBox().getSelectedItem();
  if (selectedItem == null) {
    return new MultipleRootsMoveDestination(targetPackage);
  }
  final PsiDirectory selectedPsiDirectory=selectedItem.getDirectory();
  VirtualFile selectedDestination=selectedPsiDirectory.getVirtualFile();
  if (selectedPsiDirectory == myInitialTargetDirectory) {
    selectedDestination=MoveClassesOrPackagesUtil.chooseSourceRoot(targetPackage,getSourceRoots(),myInitialTargetDirectory);
  }
  if (selectedDestination == null)   return null;
  return new AutocreatingSingleSourceRootMoveDestination(targetPackage,selectedDestination);
}
