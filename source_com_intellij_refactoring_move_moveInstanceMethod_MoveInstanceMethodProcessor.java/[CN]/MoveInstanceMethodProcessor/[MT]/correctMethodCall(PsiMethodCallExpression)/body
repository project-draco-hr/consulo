{
  try {
    final PsiManager manager=myMethod.getManager();
    PsiExpression qualifier=expression.getMethodExpression().getQualifierExpression();
    if (qualifier == null)     qualifier=manager.getElementFactory().createExpressionFromText("this",null);
    PsiExpression newQualifier=null;
    if (myTargetVariable instanceof PsiParameter) {
      final int index=myMethod.getParameterList().getParameterIndex((PsiParameter)myTargetVariable);
      final PsiExpression[] arguments=expression.getArgumentList().getExpressions();
      if (index < arguments.length) {
        newQualifier=(PsiExpression)arguments[index].copy();
        arguments[index].delete();
      }
    }
 else {
      VisibilityUtil.escalateVisibility((PsiField)myTargetVariable,expression);
      newQualifier=manager.getElementFactory().createExpressionFromText(myTargetVariable.getName(),null);
    }
    expression.getArgumentList().add(qualifier);
    if (newQualifier != null) {
      if ((newQualifier instanceof PsiThisExpression && ((PsiThisExpression)newQualifier).getQualifier() == null)) {
        final PsiExpression oldQualifier=expression.getMethodExpression().getQualifierExpression();
        if (oldQualifier != null)         oldQualifier.delete();
      }
 else {
        final PsiReferenceExpression refExpr=(PsiReferenceExpression)manager.getElementFactory().createExpressionFromText("q." + myMethod.getName(),null);
        refExpr.getQualifierExpression().replace(newQualifier);
        expression.getMethodExpression().replace(refExpr);
      }
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
