{
  PsiMethod patternMethod=createPatternMethod();
  for (int i=0; i < usages.length; i++) {
    UsageInfo usage=usages[i];
    if (usage instanceof InheritorUsageInfo) {
      final PsiClass inheritor=((InheritorUsageInfo)usage).getInheritor();
      addMethodToClass(inheritor,patternMethod);
    }
 else     if (usage instanceof MethodCallUsageInfo) {
      correctMethodCall(((MethodCallUsageInfo)usage).getMethodCallExpression());
    }
 else     if (usage instanceof JavadocUsageInfo) {
    }
  }
  try {
    if (myTargetClass.isInterface())     patternMethod.getBody().delete();
    addMethodToClass(myTargetClass,patternMethod);
    myMethod.delete();
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
