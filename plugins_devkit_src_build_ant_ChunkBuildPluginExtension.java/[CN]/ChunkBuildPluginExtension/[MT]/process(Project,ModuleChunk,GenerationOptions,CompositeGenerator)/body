{
  final Module[] modules=chunk.getModules();
  if (isPlugins(modules)) {
    final BuildTargetsFactory factory=BuildTargetsFactory.getInstance();
    final Module module=modules[0];
    PluginBuildConfiguration buildProperties=PluginBuildConfiguration.getInstance(module);
    ExplodedAndJarTargetParameters parameters=new ExplodedAndJarTargetParameters(chunk,module,module.getName(),genOptions,buildProperties,PluginBuildProperties.PLUGIN_DIR_EXPLODED,PluginBuildProperties.PLUGIN_PATH_JAR){
      @NonNls public String getBuildExplodedTargetName(      final String configurationName){
        return PluginBuildProperties.getBuildExplodedTargetName(configurationName);
      }
      @NonNls public String getBuildJarTargetName(      final String configurationName){
        return PluginBuildProperties.getBuildJarTargetName(configurationName);
      }
      @NonNls public String getExplodedPathProperty(      final String configurationName){
        return PluginBuildProperties.getExplodedPathProperty(configurationName);
      }
      @NonNls public String getJarPathProperty(      final String configurationName){
        return PluginBuildProperties.getJarPathProperty(configurationName);
      }
    }
;
    final Set<Library> libs=new HashSet<Library>();
    PluginBuildUtil.getLibraries(module,libs);
    @NonNls String jarPath=chunk.getBaseDir().getPath() + "/" + chunk.getName();
    if (libs.isEmpty()) {
      jarPath+=".jar";
    }
 else {
      jarPath+=".zip";
    }
    @NonNls final String buildTargetName=PluginBuildProperties.getBuildPluginTarget(module);
    generator.add(factory.createCompositeBuildTarget(parameters,buildTargetName,DevKitBundle.message("ant.build.description",module.getName()),BuildProperties.getCompileTargetName(module.getName()),jarPath));
    generator.add(factory.createComment(DevKitBundle.message("ant.exploded.comment",chunk.getName(),PluginBuildProperties.PLUGIN_DIR_EXPLODED)),1);
    final BuildRecipe buildRecipe=buildProperties.getBuildParticipant().getBuildInstructions(DummyCompileContext.getInstance());
    generator.add(factory.createBuildExplodedTarget(parameters,buildRecipe,DevKitBundle.message("ant.exploded.description",module.getName())));
    generator.add(factory.createComment(DevKitBundle.message("ant.build.jar.comment",chunk.getName(),PluginBuildProperties.PLUGIN_PATH_JAR)),1);
    generator.add(new BuildJarTarget(chunk,genOptions,buildProperties));
  }
}
