{
  MethodSignatureBackedByPsiMethod toCheck=toCheckSubsignature.get(signatureToCheck);
  if (toCheck.getMethod().isConstructor() && !toCheck.getMethod().getContainingClass().equals(superMethod.getContainingClass()))   return null;
  if (!MethodSignatureUtil.isSubsignature(superSignature,toCheck)) {
    PsiMethod method1=signatureToCheck.getMethod();
    if (aClass.equals(method1.getContainingClass())) {
      boolean sameClass=method1.getContainingClass().equals(superMethod.getContainingClass());
      methodHighlights.add(getSameErasureMessage(sameClass,method1,superMethod));
    }
 else     if (classHighliht == null) {
      final String descr=JavaErrorMessages.message("generics.methods.have.same.erasure.override",HighlightMethodUtil.createClashMethodMessage(method1,superMethod,true));
      TextRange textRange=ClassUtil.getClassDeclarationTextRange(aClass);
      classHighliht=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,textRange,descr);
    }
  }
  return classHighliht;
}
