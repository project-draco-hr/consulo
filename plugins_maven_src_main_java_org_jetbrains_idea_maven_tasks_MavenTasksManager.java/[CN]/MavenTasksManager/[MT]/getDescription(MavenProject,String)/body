{
  List<String> result=new ArrayList<String>();
  MavenCompilerTask compilerTask=new MavenCompilerTask(project.getPath(),goal);
synchronized (this) {
    if (myState.beforeCompileTasks.contains(compilerTask)) {
      result.add(TasksBundle.message("maven.tasks.goal.before.compile"));
    }
    if (myState.afterCompileTasks.contains(compilerTask)) {
      result.add(TasksBundle.message("maven.tasks.goal.after.compile"));
    }
  }
  RunManagerEx runManager=RunManagerEx.getInstanceEx(myProject);
  for (  MavenBeforeRunTask each : runManager.getBeforeRunTasks(MavenBeforeRunTasksProvider.ID)) {
    if (each.isFor(project,goal)) {
      result.add(TasksBundle.message("maven.tasks.goal.before.run"));
      break;
    }
  }
  return StringUtil.join(result,", ");
}
