{
  LOG.assertTrue(element != null);
  int count=0;
  if (element instanceof PsiFile) {
    count=1;
  }
 else   if (element instanceof PsiDirectory) {
    Iterator<PsiFile> iterator=myBuilder.getFiles((PsiDirectory)element);
    while (iterator.hasNext()) {
      PsiFile psiFile=iterator.next();
      if (accept(psiFile)) {
        count++;
      }
    }
  }
 else   if (element instanceof ToDoSummary) {
    for (Iterator i=myBuilder.getAllFiles(); i.hasNext(); ) {
      PsiFile psiFile=(PsiFile)i.next();
      if (psiFile == null) {
        continue;
      }
      if (accept(psiFile)) {
        count++;
      }
    }
  }
 else   if (element instanceof Module) {
    Iterator<PsiFile> iterator=myBuilder.getFiles((Module)element);
    while (iterator.hasNext()) {
      PsiFile psiFile=iterator.next();
      if (accept(psiFile)) {
        count++;
      }
    }
  }
 else   if (element instanceof PackageElement) {
    final PackageElement packageElement=(PackageElement)element;
    if (getIsFlattenPackages()) {
      final PsiPackage aPackage=packageElement.getPackage();
      final Module module=packageElement.getModule();
      final GlobalSearchScope scope=module != null ? GlobalSearchScope.moduleScope(module) : GlobalSearchScope.projectScope(aPackage.getProject());
      final PsiDirectory[] directories=aPackage.getDirectories(scope);
      for (      PsiDirectory directory : directories) {
        Iterator<PsiFile> iterator=myBuilder.getFilesUnderDirectory(directory);
        while (iterator.hasNext()) {
          PsiFile psiFile=iterator.next();
          if (accept(psiFile))           count++;
        }
      }
    }
 else {
      Iterator<PsiFile> iterator=myBuilder.getFiles(packageElement);
      while (iterator.hasNext()) {
        PsiFile psiFile=iterator.next();
        if (accept(psiFile)) {
          count++;
        }
      }
    }
  }
 else {
    throw new IllegalArgumentException("unknown element: " + element);
  }
  return count;
}
