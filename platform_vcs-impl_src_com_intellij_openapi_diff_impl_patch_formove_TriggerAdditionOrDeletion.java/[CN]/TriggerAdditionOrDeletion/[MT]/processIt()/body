{
  if (myPreparedDeletion != null) {
    for (    Map.Entry<VcsRoot,Collection<FilePath>> entry : myPreparedDeletion.entrySet()) {
      final VcsRoot vcsRoot=entry.getKey();
      final CheckinEnvironment localChangesProvider=vcsRoot.vcs.getCheckinEnvironment();
      if (localChangesProvider == null)       continue;
      final Collection<FilePath> filePaths=entry.getValue();
      if (vcsRoot.vcs.fileListenerIsSynchronous()) {
        myAffected.addAll(filePaths);
        continue;
      }
      askUserIfNeededDeletion(vcsRoot.vcs,(List<FilePath>)filePaths);
      myAffected.addAll(filePaths);
      localChangesProvider.scheduleMissingFileForDeletion((List<FilePath>)filePaths);
    }
  }
  if (myPreparedAddition != null) {
    for (    Map.Entry<VcsRoot,Collection<FilePath>> entry : myPreparedAddition.entrySet()) {
      final VcsRoot vcsRoot=entry.getKey();
      final CheckinEnvironment localChangesProvider=vcsRoot.vcs.getCheckinEnvironment();
      if (localChangesProvider == null)       continue;
      final Collection<FilePath> filePaths=entry.getValue();
      if (vcsRoot.vcs.fileListenerIsSynchronous()) {
        myAffected.addAll(filePaths);
        continue;
      }
      askUserIfNeededAddition(vcsRoot.vcs,(List<FilePath>)filePaths);
      myAffected.addAll(filePaths);
      localChangesProvider.scheduleUnversionedFilesForAddition(ObjectsConvertor.fp2vf(filePaths));
    }
  }
}
