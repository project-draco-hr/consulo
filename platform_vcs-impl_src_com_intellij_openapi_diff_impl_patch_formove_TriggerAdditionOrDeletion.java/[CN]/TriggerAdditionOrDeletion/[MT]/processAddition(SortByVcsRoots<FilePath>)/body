{
  for (  FilePath filePath : myExisting) {
    filePath.hardRefresh();
  }
  final MultiMap<VcsRoot,FilePath> map=sortByVcsRoots.sort(myExisting);
  myPreparedAddition=new MultiMap<VcsRoot,FilePath>();
  for (  VcsRoot vcsRoot : map.keySet()) {
    if (vcsRoot != null && vcsRoot.getVcs() != null) {
      final CheckinEnvironment localChangesProvider=vcsRoot.getVcs().getCheckinEnvironment();
      if (localChangesProvider == null)       continue;
      final boolean takeDirs=vcsRoot.getVcs().areDirectoriesVersionedItems();
      final Collection<FilePath> files=map.get(vcsRoot);
      final List<FilePath> toBeAdded;
      if (takeDirs) {
        final RecursiveCheckAdder adder=new RecursiveCheckAdder(vcsRoot.getPath());
        for (        FilePath file : files) {
          adder.process(file);
        }
        toBeAdded=adder.getToBeAdded();
      }
 else {
        toBeAdded=new LinkedList<FilePath>();
        for (        FilePath file : files) {
          if (!file.isDirectory()) {
            toBeAdded.add(file);
          }
        }
      }
      if (toBeAdded.isEmpty()) {
        return;
      }
      Collections.sort(toBeAdded,FilePathByPathComparator.getInstance());
      if (!vcsRoot.getVcs().fileListenerIsSynchronous()) {
        for (        FilePath filePath : toBeAdded) {
          myVcsFileListenerContextHelper.ignoreAdded(filePath.getVirtualFile());
        }
      }
      myPreparedAddition.put(vcsRoot,toBeAdded);
    }
  }
}
