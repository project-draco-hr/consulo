{
  myDeprecatedBackgroundColor=null;
  if ("scheme".equals(node.getName())) {
    setName(node.getAttributeValue("name"));
    myVersion=Integer.parseInt(node.getAttributeValue("version","0"));
    String isDefaultScheme=node.getAttributeValue("default_scheme");
    if (isDefaultScheme == null || "false".equals(isDefaultScheme)) {
      String parentSchemeName=node.getAttributeValue("parent_scheme");
      if (parentSchemeName == null)       parentSchemeName="Default";
      myParentScheme=myDefaultColorSchemesManager.getScheme(parentSchemeName);
    }
    for (Iterator iterator=node.getChildren().iterator(); iterator.hasNext(); ) {
      Element childNode=(Element)iterator.next();
      if ("option".equals(childNode.getName())) {
        readSettings(childNode);
      }
 else       if ("colors".equals(childNode.getName())) {
        readColors(childNode);
      }
 else       if ("attributes".equals(childNode.getName())) {
        readAttributes(childNode);
      }
    }
    if (myDeprecatedBackgroundColor != null) {
      final TextAttributes textAttributes=myAttributesMap.get(HighlighterColors.TEXT);
      textAttributes.setBackgroundColor(myDeprecatedBackgroundColor);
    }
    initFonts();
  }
}
