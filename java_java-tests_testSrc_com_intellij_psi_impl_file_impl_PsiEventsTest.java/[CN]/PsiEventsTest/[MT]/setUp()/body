{
  super.setUp();
  final File root=FileUtil.createTempFile(getName(),"");
  root.delete();
  root.mkdir();
  myFilesToDelete.add(root);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        VirtualFile rootVFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(root);
        myPrjDir1=rootVFile.createChildDirectory(null,"prj1");
        mySrcDir1=myPrjDir1.createChildDirectory(null,"src1");
        mySrcDir2=myPrjDir1.createChildDirectory(null,"src2");
        myPrjDir2=rootVFile.createChildDirectory(null,"prj2");
        mySrcDir3=myPrjDir2;
        myClsDir1=myPrjDir1.createChildDirectory(null,"cls1");
        myExcludedDir1=mySrcDir1.createChildDirectory(null,"excluded");
        final ModifiableRootModel rootModel=ModuleRootManager.getInstance(myModule).getModifiableModel();
        final ContentEntry contentEntry1=rootModel.addContentEntry(myPrjDir1);
        contentEntry1.addSourceFolder(mySrcDir1,false);
        contentEntry1.addSourceFolder(mySrcDir2,false);
        contentEntry1.addExcludeFolder(myExcludedDir1);
        final Library.ModifiableModel libraryModel=rootModel.getModuleLibraryTable().createLibrary().getModifiableModel();
        libraryModel.addRoot(myClsDir1,OrderRootType.CLASSES);
        libraryModel.commit();
        final ContentEntry contentEntry2=rootModel.addContentEntry(myPrjDir2);
        contentEntry2.addSourceFolder(mySrcDir3,false);
        rootModel.commit();
      }
 catch (      IOException e) {
        LOG.error(e);
      }
    }
  }
);
}
