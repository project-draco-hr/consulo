{
  KeymapGroup result=KeymapGroupFactory.getInstance().createGroup(EventsBundle.message("maven.event.action.group.name"),CLOSED_ICON,OPEN_ICON);
  if (project == null)   return result;
  ActionManager actionManager=ActionManager.getInstance();
  String[] ids=actionManager.getActionIds(getActionPrefix(project,null));
  Arrays.sort(ids);
  Map<String,KeymapGroup> pomPathToActionId=new THashMap<String,KeymapGroup>();
  MavenProjectsManager projectsManager=MavenProjectsManager.getInstance(project);
  for (  String eachId : ids) {
    AnAction eachAction=actionManager.getAction(eachId);
    if (!(eachAction instanceof MavenGoalAction))     continue;
    if (condition != null && !condition.value(actionManager.getActionOrStub(eachId)))     continue;
    String pomPath=((MavenGoalAction)eachAction).myPomPath;
    KeymapGroup subGroup=pomPathToActionId.get(pomPath);
    if (subGroup == null) {
      VirtualFile file=LocalFileSystem.getInstance().findFileByPath(pomPath);
      if (file == null)       continue;
      String name=getMavenProjectName(projectsManager,file);
      subGroup=KeymapGroupFactory.getInstance().createGroup(name);
      pomPathToActionId.put(pomPath,subGroup);
      result.addGroup(subGroup);
    }
    subGroup.addActionId(eachId);
  }
  return result;
}
