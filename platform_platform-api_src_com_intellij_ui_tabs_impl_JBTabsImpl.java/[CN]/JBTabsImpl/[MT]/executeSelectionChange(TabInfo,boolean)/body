{
  if (mySelectedInfo != null && mySelectedInfo.equals(info)) {
    if (!requestFocus) {
      return new ActionCallback.Done();
    }
 else {
      Component owner=myFocusManager.getFocusOwner();
      JComponent c=info.getComponent();
      if (c != null && owner != null) {
        if (c == owner || SwingUtilities.isDescendingFrom(owner,c)) {
          return new ActionCallback.Done();
        }
      }
      return requestFocus(getToFocus());
    }
  }
  if (myRequestFocusOnLastFocusedComponent && mySelectedInfo != null) {
    if (isMyChildIsFocusedNow()) {
      mySelectedInfo.setLastFocusOwner(getFocusOwner());
    }
  }
  TabInfo oldInfo=mySelectedInfo;
  mySelectedInfo=info;
  final TabInfo newInfo=getSelectedInfo();
  fireBeforeSelectionChanged(oldInfo,newInfo);
  updateContainer(true);
  fireSelectionChanged(oldInfo,newInfo);
  if (requestFocus) {
    final JComponent toFocus=getToFocus();
    if (myProject != null && toFocus != null) {
      final ActionCallback result=new ActionCallback();
      requestFocus(toFocus).doWhenProcessed(new Runnable(){
        public void run(){
          if (myDisposed) {
            result.setRejected();
          }
 else {
            removeDeferred().notifyWhenDone(result);
          }
        }
      }
);
      return result;
    }
 else {
      requestFocus();
      return removeDeferred();
    }
  }
 else {
    return removeDeferred();
  }
}
