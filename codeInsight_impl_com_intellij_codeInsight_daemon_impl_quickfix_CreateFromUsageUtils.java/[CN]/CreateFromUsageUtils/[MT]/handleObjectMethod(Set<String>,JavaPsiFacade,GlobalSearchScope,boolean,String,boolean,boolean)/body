{
  final PsiShortNamesCache cache=facade.getShortNamesCache();
  final boolean[] allClasses={false};
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      final PsiClass objectClass=facade.findClass(CommonClassNames.JAVA_LANG_OBJECT,searchScope);
      if (objectClass != null) {
        if (method && objectClass.findMethodsByName(memberName,false).length > 0) {
          allClasses[0]=true;
        }
 else         if (!method) {
          final PsiField field=objectClass.findFieldByName(memberName,false);
          if (hasCorrectModifiers(field,staticAccess)) {
            allClasses[0]=true;
          }
        }
      }
    }
  }
);
  if (allClasses[0]) {
    possibleClassNames.add(CommonClassNames.JAVA_LANG_OBJECT);
    if (!addInheritors) {
      return true;
    }
    final String[] strings=ApplicationManager.getApplication().runReadAction(new Computable<String[]>(){
      public String[] compute(){
        return cache.getAllClassNames();
      }
    }
);
    for (    final String className : strings) {
      final PsiClass[] classes=ApplicationManager.getApplication().runReadAction(new Computable<PsiClass[]>(){
        public PsiClass[] compute(){
          return cache.getClassesByName(className,searchScope);
        }
      }
);
      for (      final PsiClass aClass : classes) {
        final String qname=getQualifiedName(aClass);
        ContainerUtil.addIfNotNull(qname,possibleClassNames);
      }
    }
    return true;
  }
  return false;
}
