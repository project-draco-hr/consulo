{
  final Project project=file.getProject();
  final Module moduleForFile=ProjectRootManager.getInstance(project).getFileIndex().getModuleForFile(file.getVirtualFile());
  GlobalSearchScope searchScope=GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleForFile,false);
  GlobalSearchScope descendantsSearchScope=GlobalSearchScope.moduleWithDependenciesScope(moduleForFile);
  final PsiMethod[] psiMethods=JavaPsiFacade.getInstance(project).getShortNamesCache().getMethodsByName(methodName,searchScope);
  for (int i=0; i < psiMethods.length; ++i) {
    final PsiClass containingClass=psiMethods[i].getContainingClass();
    for (    PsiClass clazz : ClassInheritorsSearch.search(containingClass,descendantsSearchScope,true,true,false).findAll()) {
      possibleClassNames.add(clazz.getQualifiedName());
    }
    possibleClassNames.add(containingClass.getQualifiedName());
    psiMethods[i]=null;
  }
}
