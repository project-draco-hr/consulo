{
  if (!entrance.isValid()) {
    LOGGER.error(new PsiInvalidElementAccessException(entrance));
  }
  PsiElement prevParent=entrance;
  PsiElement scope=entrance;
  while (scope != null) {
    ProgressIndicatorProvider.checkCanceled();
    if (!scope.processDeclarations(processor,state,prevParent,entrance)) {
      return false;
    }
    if (scope == maxScope)     break;
    prevParent=scope;
    scope=prevParent.getContext();
    if (scope != null && scope != prevParent.getParent() && !scope.isValid()) {
      break;
    }
  }
  return true;
}
