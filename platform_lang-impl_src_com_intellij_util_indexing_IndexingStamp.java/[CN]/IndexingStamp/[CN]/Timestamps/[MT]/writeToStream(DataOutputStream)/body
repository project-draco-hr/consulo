{
  if (myIndexStamps != null && !myIndexStamps.isEmpty()) {
    final long[] dominatingIndexStamp=new long[1];
    myIndexStamps.forEachEntry(new TObjectLongProcedure<ID<?,?>>(){
      @Override public boolean execute(      ID<?,?> a,      long b){
        dominatingIndexStamp[0]=Math.max(dominatingIndexStamp[0],b);
        return true;
      }
    }
);
    DataInputOutputUtil.writeTIME(stream,dominatingIndexStamp[0]);
    myIndexStamps.forEachEntry(new TObjectLongProcedure<ID<?,?>>(){
      @Override public boolean execute(      final ID<?,?> id,      final long timestamp){
        try {
          DataInputOutputUtil.writeINT(stream,id.getUniqueId());
          return true;
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
  }
 else {
    DataInputOutputUtil.writeTIME(stream,DataInputOutputUtil.timeBase);
  }
}
