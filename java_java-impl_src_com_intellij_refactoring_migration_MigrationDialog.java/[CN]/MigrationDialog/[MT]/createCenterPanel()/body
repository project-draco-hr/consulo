{
class MyTextArea extends JTextArea {
    public MyTextArea(    String s,    int a,    int b){
      super(s,a,b);
      setFocusable(false);
    }
  }
  initMapCombobox();
  myDescriptionTextArea=new MyTextArea("",3,40);
  JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(myDescriptionTextArea);
  myDescriptionScroll.getViewport().add(myDescriptionTextArea);
  myDescriptionScroll.setBorder(null);
  myDescriptionScroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
  myDescriptionScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
  myDescriptionTextArea.setEditable(false);
  myDescriptionTextArea.setFont(promptLabel.getFont());
  myDescriptionTextArea.setBackground(myPanel.getBackground());
  myDescriptionTextArea.setLineWrap(true);
  updateDescription();
  myMapComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      updateDescription();
    }
  }
);
  myEditMapButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      editMap();
    }
  }
);
  myRemoveMapButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      removeMap();
    }
  }
);
  myNewMapButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      addNewMap();
    }
  }
);
  myMapComboBox.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (myMapComboBox.isPopupVisible()) {
        myMapComboBox.setPopupVisible(false);
      }
 else {
        clickDefaultButton();
      }
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  return myPanel;
}
