{
  myShowMonospacedCheckbox=new JCheckBox(ApplicationBundle.message("checkbox.show.only.monospaced.fonts"));
  final boolean useOnlyMonospacedFonts=EditorColorsManager.getInstance().isUseOnlyMonospacedFonts();
  myShowMonospacedCheckbox.setSelected(useOnlyMonospacedFonts);
  myFontList=new JBList();
  myFontList.setModel(new DefaultListModel());
  fillList(useOnlyMonospacedFonts);
  myFontList.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        doOKAction();
      }
    }
  }
);
  myFontList.setCellRenderer(new MyListCellRenderer());
  myShowMonospacedCheckbox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      boolean onlyMonospaced=myShowMonospacedCheckbox.isSelected();
      EditorColorsManager.getInstance().setUseOnlyMonospacedFonts(onlyMonospaced);
      String selection=(String)myFontList.getSelectedValue();
      fillList(onlyMonospaced);
      if (selection != null) {
        myFontList.setSelectedValue(selection,true);
        myFontList.ensureIndexIsVisible(myFontList.getSelectedIndex());
      }
    }
  }
);
  JPanel panel=new JPanel(new BorderLayout());
  panel.add(myShowMonospacedCheckbox,BorderLayout.NORTH);
  panel.add(new JScrollPane(myFontList),BorderLayout.CENTER);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      myShowMonospacedCheckbox.setSelected(useOnlyMonospacedFonts);
    }
  }
);
  return panel;
}
