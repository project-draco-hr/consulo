{
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(defaultProject).getFileIndex();
  final HashSet<Module> modules=new HashSet<Module>();
  if (myType == FILE) {
    if (myElement instanceof PsiJavaFile) {
      PsiJavaFile psiJavaFile=(PsiJavaFile)myElement;
      final PsiClass[] classes=psiJavaFile.getClasses();
      boolean onlyPackLocalClasses=true;
      for (      final PsiClass aClass : classes) {
        if (aClass.hasModifierProperty(PsiModifier.PUBLIC)) {
          onlyPackLocalClasses=false;
        }
      }
      if (onlyPackLocalClasses) {
        final PsiDirectory psiDirectory=psiJavaFile.getContainingDirectory();
        if (psiDirectory != null) {
          return new JavaAnalysisScope(JavaDirectoryService.getInstance().getPackage(psiDirectory),null);
        }
      }
    }
  }
 else   if (myType == PACKAGE) {
    final PsiDirectory[] directories=((PsiPackage)myElement).getDirectories();
    for (    PsiDirectory directory : directories) {
      modules.addAll(getAllInterestingModules(fileIndex,directory.getVirtualFile()));
    }
    return collectScopes(defaultProject,modules);
  }
  return super.getNarrowedComplementaryScope(defaultProject);
}
