{
  final String host=CommonProxy.getHostNameReliably(getRequestingHost(),getRequestingSite(),getRequestingURL());
  final boolean isProxy=Authenticator.RequestorType.PROXY.equals(getRequestorType());
  final String prefix=isProxy ? "Proxy authentication: " : "Server authentication: ";
  if (isProxy) {
    if (myHttpConfigurable.USE_HTTP_PROXY) {
      LOG.debug("CommonAuthenticator.getPasswordAuthentication will return common defined proxy");
      return myHttpConfigurable.getPromptedAuthentication(host + ":" + getRequestingPort(),getRequestingPrompt());
    }
 else     if (myHttpConfigurable.USE_PROXY_PAC) {
      LOG.debug("CommonAuthenticator.getPasswordAuthentication will return autodetected proxy");
      if (myHttpConfigurable.isGenericPasswordCanceled(host,getRequestingPort()))       return null;
      final PasswordAuthentication password=myHttpConfigurable.getGenericPassword(host,getRequestingPort());
      if (password != null) {
        return password;
      }
      if (ApplicationManager.getApplication() == null || ApplicationManager.getApplication().isDisposeInProgress() || ApplicationManager.getApplication().isDisposed())       return null;
      return myHttpConfigurable.getGenericPromptedAuthentication(prefix,host,getRequestingPrompt(),getRequestingPort(),true);
    }
  }
  if (ApplicationManager.getApplication() == null || ApplicationManager.getApplication().isDisposeInProgress() || ApplicationManager.getApplication().isDisposed())   return null;
  LOG.debug("CommonAuthenticator.getPasswordAuthentication generic authentication will be asked");
  return myHttpConfigurable.getGenericPromptedAuthentication(prefix,host,getRequestingPrompt(),getRequestingPort(),false);
}
