{
  JBList list=new JBList(myModel);
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator(list);
  decorator.disableUpDownActions();
  decorator.setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      showAddOrChangeDialog(null);
    }
  }
);
  decorator.setEditAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      JBList contextComponent=(JBList)anActionButton.getContextComponent();
      showAddOrChangeDialog((String)contextComponent.getSelectedValue());
    }
  }
);
  JPanel panel=new JPanel(new BorderLayout());
  panel.add(decorator.createPanel(),BorderLayout.CENTER);
  JTextPane textPane=new JTextPane();
  textPane.setContentType("text/html");
  textPane.setEditable(false);
  textPane.setText("<html><body>" + "Use <b>!</b> to negate a pattern. " + "Accepted wildcards: <b>?</b> &mdash; exactly one symbol; <b>*</b> &mdash; zero or more symbols; "+ "<b>/</b> &mdash; path separator; <b>/**/</b> &mdash; any number of directories; "+ "<i>&lt;dir_name&gt;</i>:<i>&lt;pattern&gt;</i> &mdash; restrict to source roots with the specified name"+ "</body></html>");
  textPane.setForeground(new JBColor(Gray._50,Gray._130));
  panel.add(textPane,BorderLayout.SOUTH);
  return panel;
}
