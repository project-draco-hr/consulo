{
  ElementManipulator<PsiElement> manipulator=ElementManipulators.getManipulator(element);
  TextRange range=manipulator.getRangeInElement(element);
  String text=range.substring(element.getText());
  Matcher matcher=MavenPropertyResolver.PATTERN.matcher(text);
  if (matcher.find()) {
    return PsiReference.EMPTY_ARRAY;
  }
  return new PsiReference[]{new PsiReferenceBase<PsiElement>(element,mySoft){
    @Nullable @Override public PsiElement resolve(){
      if (mySoft) {
        return null;
      }
      if (Arrays.asList(myValues).contains(getValue())) {
        return getElement();
      }
      return null;
    }
    @NotNull @Override public Object[] getVariants(){
      return myValues;
    }
  }
};
}
