{
  final PsiLambdaExpression lambdaExpression=arg.getExpression();
  if (PsiUtil.getLanguageLevel(lambdaExpression).isAtLeast(LanguageLevel.JDK_1_8)) {
    final PsiElement parent=skipParenthesizedExprUp(lambdaExpression.getParent());
    if (parent instanceof PsiExpressionList) {
      final PsiExpressionList expressionList=(PsiExpressionList)parent;
      final PsiMethod method=expressionList.getUserData(MethodCandidateInfo.CURRENT_CANDIDATE);
      if (method != null) {
        final int i=LambdaUtil.getLambdaIdx(expressionList,((PsiLambdaExpressionImpl)lambdaExpression));
        if (i < 0)         return null;
        final PsiParameter[] parameters=method.getParameterList().getParameters();
        if (parameters.length <= i)         return null;
        return inferConstraintFromFunctionalInterfaceMethod(typeParam,lambdaExpression,parameters[i].getType());
      }
    }
 else {
      return inferConstraintFromFunctionalInterfaceMethod(typeParam,lambdaExpression,lambdaExpression.getFunctionalInterfaceType());
    }
  }
  return null;
}
