{
  String name=getName();
  if (getDeclaredType() == null && getInitializer() == null && name.endsWith("Service")) {
    VirtualFile grailsApp=GrailsUtils.findModuleGrailsAppDir(ModuleUtil.findModuleForPsiElement(this));
    VirtualFile vFile=getVirtualFile(this);
    if (vFile != null && grailsApp != null && VfsUtil.isAncestor(grailsApp,vFile,true)) {
      VirtualFile servicesDir=grailsApp.findChild("services");
      if (servicesDir != null) {
        JavaPsiFacade facade=JavaPsiFacade.getInstance(getProject());
        for (        PsiClass candidate : facade.getShortNamesCache().getClassesByName(StringUtil.capitalize(name),getResolveScope())) {
          VirtualFile candidateFile=getVirtualFile(candidate);
          if (candidateFile != null && VfsUtil.isAncestor(servicesDir,candidateFile,true)) {
            return facade.getElementFactory().createType(candidate);
          }
        }
      }
    }
  }
  return super.getTypeGroovy();
}
