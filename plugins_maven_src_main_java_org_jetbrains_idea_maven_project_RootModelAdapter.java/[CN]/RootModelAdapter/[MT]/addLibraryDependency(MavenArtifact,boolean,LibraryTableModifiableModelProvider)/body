{
  String libraryName=makeLibraryName(artifact);
  LibrariesModifiableModel modifiableModel=null;
  if (table != null) {
    modifiableModel=(LibrariesModifiableModel)table.getModifiableModel();
  }
  Library library=modifiableModel != null ? modifiableModel.getLibraryByName(libraryName) : getLibraryTable().getLibraryByName(libraryName);
  if (library == null) {
    library=modifiableModel != null ? modifiableModel.createLibrary(libraryName) : getLibraryTable().createLibrary(libraryName);
    Library.ModifiableModel libraryModel=modifiableModel != null ? modifiableModel.getLibraryModifiableModel(library) : library.getModifiableModel();
    String artifactPath=artifact.getFile().getPath();
    setUrl(libraryModel,getUrl(artifactPath,null),OrderRootType.CLASSES);
    setUrl(libraryModel,getUrl(artifactPath,MavenConstants.SOURCES_CLASSIFIER),OrderRootType.SOURCES);
    setUrl(libraryModel,getUrl(artifactPath,MavenConstants.JAVADOC_CLASSIFIER),JavadocOrderRootType.getInstance());
    if (modifiableModel == null)     libraryModel.commit();
  }
  myRootModel.addLibraryEntry(library).setExported(isExportable);
  removeOldLibraryDependency(artifact);
}
