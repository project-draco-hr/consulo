{
  final String qualifiedName=implementedClass.getQualifiedName();
  if (ignoreSerializable && "java.io.Serializable".equals(qualifiedName)) {
    return;
  }
 else   if (ignoreCloneable && "java.lang.Cloneable".equals(qualifiedName)) {
    return;
  }
  for (  final PsiJavaCodeReferenceElement extendsElement : extendsElements) {
    final PsiElement extendsReferent=extendsElement.resolve();
    if (!(extendsReferent instanceof PsiClass)) {
      continue;
    }
    final PsiClass extendedClass=(PsiClass)extendsReferent;
    if (extendedClass.isInheritor(implementedClass,true)) {
      registerError(implementsElement);
      return;
    }
  }
  for (  final PsiJavaCodeReferenceElement testImplementElement : implementsElements) {
    if (testImplementElement.equals(implementsElement)) {
      continue;
    }
    final PsiElement implementsReferent=testImplementElement.resolve();
    if (!(implementsReferent instanceof PsiClass)) {
      continue;
    }
    final PsiClass testImplementedClass=(PsiClass)implementsReferent;
    if (testImplementedClass.isInheritor(implementedClass,true)) {
      registerError(implementsElement);
      return;
    }
  }
}
