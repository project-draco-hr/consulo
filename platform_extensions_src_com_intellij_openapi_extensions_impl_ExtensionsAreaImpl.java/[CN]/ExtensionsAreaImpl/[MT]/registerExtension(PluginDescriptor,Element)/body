{
  final PluginId pluginId=pluginDescriptor.getPluginId();
  String epName=extractEPName(extensionElement);
  ExtensionComponentAdapter adapter;
  final PicoContainer container=getPluginContainer(pluginId.getIdString());
  final ExtensionPointImpl extensionPoint=getExtensionPoint(epName);
  if (extensionPoint.getKind() == ExtensionPoint.Kind.INTERFACE) {
    String implClass=extensionElement.getAttributeValue("implementation");
    if (implClass == null) {
      throw new RuntimeException("'implementation' attribute not specified for '" + epName + "' extension in '"+ pluginId.getIdString()+ "' plugin");
    }
    adapter=new ExtensionComponentAdapter(implClass,extensionElement,container,pluginDescriptor,shouldDeserializeInstance(extensionElement));
  }
 else {
    adapter=new ExtensionComponentAdapter(extensionPoint.getClassName(),extensionElement,container,pluginDescriptor,true);
  }
  myExtensionElement2extension.put(extensionElement,adapter);
  internalGetPluginContainer().registerComponent(adapter);
  extensionPoint.registerExtensionAdapter(adapter);
}
