{
  super(settings);
  final List<FileTypeIndentOptionsProvider> indentOptionsProviders=Arrays.asList(Extensions.getExtensions(FileTypeIndentOptionsProvider.EP_NAME));
  Collections.sort(indentOptionsProviders,new Comparator<FileTypeIndentOptionsProvider>(){
    @Override public int compare(    FileTypeIndentOptionsProvider p1,    FileTypeIndentOptionsProvider p2){
      Language lang1=getLanguage(p1.getFileType());
      if (lang1 == null)       return -1;
      Language lang2=getLanguage(p2.getFileType());
      if (lang2 == null)       return 1;
      DisplayPriority priority1=LanguageCodeStyleSettingsProvider.getDisplayPriority(lang1);
      DisplayPriority priority2=LanguageCodeStyleSettingsProvider.getDisplayPriority(lang2);
      if (priority1.equals(priority2)) {
        return lang1.getDisplayName().compareTo(lang2.getDisplayName());
      }
      return priority1.compareTo(priority2);
    }
  }
);
  for (  FileTypeIndentOptionsProvider indentOptionsProvider : indentOptionsProviders) {
    myIndentOptionsProviders.add(indentOptionsProvider);
    if (myAdditionalIndentOptions.containsKey(indentOptionsProvider.getFileType())) {
      LOG.error("Duplicate extension: " + indentOptionsProvider);
    }
 else {
      myAdditionalIndentOptions.put(indentOptionsProvider.getFileType(),indentOptionsProvider.createOptionsEditor());
    }
  }
  myIndentPanel.setLayout(new BorderLayout());
  myIndentPanel.add(createTabOptionsPanel(),BorderLayout.CENTER);
  installPreviewPanel(myPreviewPanel);
  addPanelToWatch(myPanel);
  myRightMargin=settings.RIGHT_MARGIN;
}
