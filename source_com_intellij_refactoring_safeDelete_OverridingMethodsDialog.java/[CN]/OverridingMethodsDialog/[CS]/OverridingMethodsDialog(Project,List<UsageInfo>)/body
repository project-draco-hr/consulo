{
  super(project,true);
  myOverridingMethods=overridingMethods;
  myChecked=new boolean[myOverridingMethods.size()];
  for (int i=0; i < myChecked.length; i++) {
    myChecked[i]=true;
  }
  myMethodText=new String[myOverridingMethods.size()];
  for (int i=0; i < myMethodText.length; i++) {
    myMethodText[i]=PsiFormatUtil.formatMethod(((SafeDeleteOverridingMethodUsageInfo)myOverridingMethods.get(i)).getOverridingMethod(),PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_CONTAINING_CLASS | PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS| PsiFormatUtil.SHOW_TYPE,PsiFormatUtil.SHOW_TYPE);
  }
  setTitle("Unused Overriding Methods");
  init();
}
