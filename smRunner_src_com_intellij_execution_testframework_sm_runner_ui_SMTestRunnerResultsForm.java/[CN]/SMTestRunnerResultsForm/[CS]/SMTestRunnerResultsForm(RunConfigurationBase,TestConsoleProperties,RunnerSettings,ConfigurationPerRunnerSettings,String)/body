{
  myConsoleProperties=consoleProperties;
  mySplitterPropertyName=splitterPropertyName == null ? DEFAULT_SM_RUNNER_SPLITTER_PROPERTY : splitterPropertyName;
  final Project project=runConfiguration.getProject();
  myProject=project;
  myTestsRootNode=new SMTestProxy("[root]",true,null);
  myTabs=new JBTabsImpl(project,ActionManager.getInstance(),IdeFocusManager.getInstance(myProject),this);
  myTabbedPaneConatiner.setLayout(new BorderLayout());
  myTabbedPaneConatiner.add(myTabs.getComponent());
  myTreeView.setLargeModel(true);
  myTreeView.attachToModel(this);
  myTreeView.setTestResultsViewer(this);
  final SMTRunnerTreeStructure structure=new SMTRunnerTreeStructure(project,myTestsRootNode);
  myTreeBuilder=new SMTRunnerTreeBuilder(myTreeView,structure);
  myAnimator=new MyAnimator(myTreeBuilder);
  myToolbar=initToolbarPanel(consoleProperties,runnerSettings,configurationSettings);
  makeSplitterSettingsExternalizable(splitPane);
  final KeyStroke shiftEnterKey=KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,InputEvent.SHIFT_MASK);
  SMRunnerUtil.registerAsAction(shiftEnterKey,"show-statistics-for-test-proxy",new Runnable(){
    public void run(){
      showStatisticsForSelectedProxy();
    }
  }
,myTreeView);
  final ArrayList<Component> components=new ArrayList<Component>();
  components.add(myTreeView);
  components.add(myTabs.getComponent());
  myContentPane.setFocusTraversalPolicy(new MyFocusTraversalPolicy(components));
  myContentPane.setFocusCycleRoot(true);
}
