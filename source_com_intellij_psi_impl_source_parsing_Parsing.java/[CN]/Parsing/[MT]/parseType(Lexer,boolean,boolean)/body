{
  IElementType tokenType=lexer.getTokenType();
  TreeElement refElement;
  if (tokenType == null) {
    return null;
  }
 else   if (PRIMITIVE_TYPE_BIT_SET.contains(tokenType)) {
    refElement=ParseUtil.createTokenElement(lexer,myContext.getCharTable());
    lexer.advance();
  }
 else   if (tokenType == IDENTIFIER) {
    refElement=parseJavaCodeReference(lexer,eatLastDot,true);
  }
 else   if (allowWildcard && lexer.getTokenType() == QUEST) {
    return parseWildcardType(lexer);
  }
 else {
    return null;
  }
  CompositeElement type=ASTFactory.composite(TYPE);
  type.rawAddChildren(refElement);
  while (lexer.getTokenType() == LBRACKET) {
    final LexerPosition lbracketPos=lexer.getCurrentPosition();
    TreeElement lbracket=ParseUtil.createTokenElement(lexer,myContext.getCharTable());
    lexer.advance();
    if (lexer.getTokenType() != RBRACKET) {
      lexer.restore(lbracketPos);
      break;
    }
    CompositeElement type1=ASTFactory.composite(TYPE);
    type1.rawAddChildren(type);
    type1.rawAddChildren(lbracket);
    type1.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
    lexer.advance();
    type=type1;
  }
  return type;
}
