{
  SimpleColoredText descriptorText=new SimpleColoredText();
  String text;
  String nodeName;
  if (descriptor == null) {
    text="";
    nodeName=null;
  }
 else {
    text=descriptor.getLabel();
    nodeName=descriptor.getName();
  }
  if (text.equals(NodeDescriptorImpl.EVALUATING_MESSAGE)) {
    descriptorText.append(NodeDescriptorImpl.EVALUATING_MESSAGE,EVALUATING_HIGHLIGHT_ATTR);
    return descriptorText;
  }
  if (descriptor instanceof ValueDescriptor) {
    final ValueMarkup markup=((ValueDescriptor)descriptor).getMarkup(debuggerContext.getDebugProcess());
    if (markup != null) {
      descriptorText.append(markup.getText(),new SimpleTextAttributes(SimpleTextAttributes.STYLE_BOLD,markup.getColor()));
    }
  }
  String[] strings=breakString(text,nodeName);
  if (strings[0] != null) {
    if (descriptor instanceof MessageDescriptor && ((MessageDescriptor)descriptor).getKind() == MessageDescriptor.SPECIAL) {
      descriptorText.append(strings[0],GRAY_ATTR);
    }
 else {
      descriptorText.append(strings[0],DEFAULT_ATTR);
    }
  }
  if (strings[1] != null) {
    descriptorText.append(strings[1],HIGHLIGHT_ATTR);
  }
  if (strings[2] != null) {
    if (descriptor instanceof ValueDescriptorImpl) {
      if (multiline && strings[2].indexOf('\n') >= 0) {
        strings=breakString(strings[2],"=");
        if (strings[2] != null) {
          strings[2]=strings[0] + strings[1] + "\n"+ strings[2];
        }
      }
      ValueDescriptorImpl valueDescriptor=(ValueDescriptorImpl)descriptor;
      String valueLabel=valueDescriptor.getValueLabel();
      strings=breakString(strings[2],valueLabel);
      if (strings[0] != null) {
        descriptorText.append(strings[0],DEFAULT_ATTR);
      }
      if (appendValue && strings[1] != null) {
        if (valueLabel != null && StringUtil.startsWithChar(valueLabel,'{') && valueLabel.indexOf('}') > 0 && !StringUtil.endsWithChar(valueLabel,'}')) {
          int idx=valueLabel.indexOf('}');
          String objectId=valueLabel.substring(0,idx + 1);
          valueLabel=valueLabel.substring(idx + 1);
          descriptorText.append(objectId,EVALUATING_HIGHLIGHT_ATTR);
        }
        valueLabel=DebuggerUtilsEx.truncateString(valueLabel);
        final EvaluateException exception=descriptor.getEvaluateException();
        if (exception != null) {
          final String errorMessage=exception.getMessage();
          if (valueLabel.endsWith(errorMessage)) {
            descriptorText.append(valueLabel.substring(0,valueLabel.length() - errorMessage.length()),DEFAULT_ATTR);
            descriptorText.append(errorMessage,EXCEPTION_HIGHLIGHT_ATTR);
          }
 else {
            descriptorText.append(valueLabel,valueDescriptor.isDirty() ? new SimpleTextAttributes(Font.PLAIN,myChangedValueHighlightColor) : DEFAULT_ATTR);
            descriptorText.append(errorMessage,EXCEPTION_HIGHLIGHT_ATTR);
          }
        }
 else {
          if (valueLabel.equals(NodeDescriptorImpl.EVALUATING_MESSAGE)) {
            descriptorText.append(NodeDescriptorImpl.EVALUATING_MESSAGE,EVALUATING_HIGHLIGHT_ATTR);
          }
 else {
            descriptorText.append(valueLabel,valueDescriptor.isDirty() ? new SimpleTextAttributes(Font.PLAIN,myChangedValueHighlightColor) : DEFAULT_ATTR);
          }
        }
      }
    }
 else {
      descriptorText.append(strings[2],DEFAULT_ATTR);
    }
  }
  return descriptorText;
}
