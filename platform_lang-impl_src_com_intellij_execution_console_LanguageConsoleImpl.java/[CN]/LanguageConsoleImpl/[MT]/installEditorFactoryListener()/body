{
  myProject.getMessageBus().connect(this).subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,new FileEditorManagerAdapter(){
    @Override public void fileOpened(    FileEditorManager source,    VirtualFile file){
      if (file != myFile.getVirtualFile())       return;
      if (myConsoleEditor != null) {
        queueUiUpdate(false);
        for (        FileEditor fileEditor : source.getAllEditors(file)) {
          if (!(fileEditor instanceof TextEditor))           continue;
          final Editor editor=((TextEditor)fileEditor).getEditor();
          configureFullEditor(editor);
          setConsoleFilePinned((FileEditorManagerEx)source,editor);
          ((EditorEx)editor).addFocusListener(myFocusListener);
          EmptyAction.registerActionShortcuts(editor.getComponent(),myConsoleEditor.getComponent());
          editor.getCaretModel().addCaretListener(new CaretListener(){
            public void caretPositionChanged(            CaretEvent e){
              queueUiUpdate(false);
            }
          }
);
        }
      }
    }
    @Override public void fileClosed(    FileEditorManager source,    VirtualFile file){
      if (file != myFile.getVirtualFile())       return;
      if (myUiUpdateRunnable != null && !Boolean.TRUE.equals(file.getUserData(FileEditorManagerImpl.CLOSING_TO_REOPEN))) {
        ApplicationManager.getApplication().runReadAction(myUiUpdateRunnable);
      }
    }
  }
);
}
