{
  if (myFullEditor != null)   return;
  final Dimension panelSize=myPanel.getSize();
  final Dimension historyContentSize=myHistoryViewer.getContentSize();
  final Dimension contentSize=myConsoleEditor.getContentSize();
  final Dimension newEditorSize=new Dimension();
  final int minHistorySize=historyContentSize.height > 0 ? 2 * myHistoryViewer.getLineHeight() + SEPARATOR_THICKNESS : 0;
  final int width=Math.max(contentSize.width,historyContentSize.width);
  newEditorSize.height=Math.min(Math.max(panelSize.height - minHistorySize,2 * myConsoleEditor.getLineHeight()),contentSize.height + myConsoleEditor.getScrollPane().getHorizontalScrollBar().getHeight());
  newEditorSize.width=width + myConsoleEditor.getScrollPane().getHorizontalScrollBar().getHeight();
  myConsoleEditor.getSettings().setAdditionalColumnsCount(2 + (width - contentSize.width) / EditorUtil.getSpaceWidth(Font.PLAIN,myConsoleEditor));
  myHistoryViewer.getSettings().setAdditionalColumnsCount(2 + (width - historyContentSize.width) / EditorUtil.getSpaceWidth(Font.PLAIN,myHistoryViewer));
  final Dimension editorSize=myConsoleEditor.getComponent().getSize();
  if (!editorSize.equals(newEditorSize)) {
    myConsoleEditor.getComponent().setPreferredSize(newEditorSize);
  }
  final boolean scrollToEnd=forceScrollToEnd || shouldScrollHistoryToEnd();
  final Dimension newHistorySize=new Dimension(width,Math.max(0,Math.min(minHistorySize == 0 ? 0 : historyContentSize.height + SEPARATOR_THICKNESS,panelSize.height - newEditorSize.height)));
  final Dimension historySize=myHistoryViewer.getComponent().getSize();
  if (!historySize.equals(newHistorySize)) {
    myHistoryViewer.getComponent().setPreferredSize(newHistorySize);
  }
  myPanel.validate();
  if (scrollToEnd)   scrollHistoryToEnd();
}
