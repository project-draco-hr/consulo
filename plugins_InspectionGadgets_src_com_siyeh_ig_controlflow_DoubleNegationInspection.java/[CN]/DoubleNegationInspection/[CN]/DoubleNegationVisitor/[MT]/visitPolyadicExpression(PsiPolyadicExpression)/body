{
  super.visitPolyadicExpression(expression);
  if (!isNegation(expression)) {
    return;
  }
  final PsiExpression[] operands=expression.getOperands();
  if (operands.length == 2) {
    int notNegatedCount=0;
    for (    PsiExpression operand : operands) {
      if (!isNegation(operand)) {
        notNegatedCount++;
      }
    }
    if (notNegatedCount > 1) {
      return;
    }
  }
  if (operands.length > 3) {
    return;
  }
  registerError(expression);
}
