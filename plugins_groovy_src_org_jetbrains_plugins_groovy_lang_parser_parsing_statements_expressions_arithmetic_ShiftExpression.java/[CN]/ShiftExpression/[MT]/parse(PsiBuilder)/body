{
  PsiBuilder.Marker marker=builder.mark();
  if (AdditiveExpression.parse(builder)) {
    GroovyElementType shiftOrRange=isRangeOrShift(builder);
    if (!shiftOrRange.equals(WRONGWAY)) {
      if (ParserUtils.getToken(builder,RANGES) || getCompositeSign(builder)) {
        ParserUtils.getToken(builder,mNLS);
        if (!AdditiveExpression.parse(builder)) {
          builder.error(GroovyBundle.message("expression.expected"));
        }
        PsiBuilder.Marker newMarker=marker.precede();
        marker.done(shiftOrRange);
        shiftOrRange=isRangeOrShift(builder);
        if (RANGES.contains(builder.getTokenType()) || getCompositeSign(builder)) {
          subParse(builder,newMarker,shiftOrRange);
        }
 else {
          newMarker.drop();
        }
      }
 else {
        marker.drop();
      }
    }
 else {
      marker.drop();
    }
    return true;
  }
 else {
    marker.drop();
    return false;
  }
}
