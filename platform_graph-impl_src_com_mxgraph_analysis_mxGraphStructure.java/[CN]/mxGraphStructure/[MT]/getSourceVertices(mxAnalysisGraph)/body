{
  if (!mxGraphProperties.isDirected(aGraph.getProperties(),mxGraphProperties.DEFAULT_DIRECTED)) {
    throw new StructuralException("The graph is undirected, so it can't have source vertices.");
  }
  ArrayList<Object> sourceList=new ArrayList<Object>();
  Object[] vertices=aGraph.getChildVertices(aGraph.getGraph().getDefaultParent());
  for (int i=0; i < vertices.length; i++) {
    Object currVertex=vertices[i];
    Object[] outEdges=aGraph.getEdges(vertices[i],null,false,true,true,true);
    Object[] inEdges=aGraph.getEdges(vertices[i],null,true,false,true,true);
    if (inEdges.length == 0 && outEdges.length > 0) {
      sourceList.add(currVertex);
    }
  }
  return sourceList.toArray();
}
