{
  Object[] vertices=aGraph.getChildVertices(aGraph.getGraph().getDefaultParent());
  int vertexCount=vertices.length;
  int lowestEdgeCount=Integer.MAX_VALUE;
  Object bestVertex=null;
  List<Object> omitList=null;
  if (omitVertex != null) {
    omitList=Arrays.asList(omitVertex);
  }
  for (int i=0; i < vertexCount; i++) {
    if (omitVertex == null || !omitList.contains(vertices[i])) {
      int currEdgeCount=aGraph.getEdges(vertices[i],null,true,true,true,true).length;
      if (currEdgeCount == 0) {
        return vertices[i];
      }
 else {
        if (currEdgeCount < lowestEdgeCount) {
          lowestEdgeCount=currEdgeCount;
          bestVertex=vertices[i];
        }
      }
    }
  }
  return bestVertex;
}
