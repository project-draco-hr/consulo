{
  mxGraph graph=aGraph.getGraph();
  Object parent=graph.getDefaultParent();
  Object[] edges=aGraph.getChildEdges(parent);
  for (int i=0; i < edges.length; i++) {
    Object currEdge=edges[i];
    if (aGraph.getTerminal(currEdge,true) == aGraph.getTerminal(currEdge,false)) {
      graph.removeCells(new Object[]{currEdge});
    }
  }
  edges=graph.getChildEdges(parent);
  Set<Set<Object>> vertexSet=new HashSet<Set<Object>>();
  ArrayList<Object> duplicateEdges=new ArrayList<Object>();
  for (int i=0; i < edges.length; i++) {
    Object currEdge=edges[i];
    Object source=aGraph.getTerminal(currEdge,true);
    Object target=aGraph.getTerminal(currEdge,false);
    Set<Object> currSet=new HashSet<Object>();
    currSet.add(source);
    currSet.add(target);
    if (vertexSet.contains(currSet)) {
      duplicateEdges.add(currEdge);
    }
 else {
      vertexSet.add(currSet);
    }
  }
  Object[] duplEdges=duplicateEdges.toArray();
  graph.removeCells(duplEdges);
}
