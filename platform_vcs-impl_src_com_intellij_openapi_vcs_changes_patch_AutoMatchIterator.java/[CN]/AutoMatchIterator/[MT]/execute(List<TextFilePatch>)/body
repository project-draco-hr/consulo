{
  final List<TextFilePatch> creations=new LinkedList<>();
  final PatchBaseDirectoryDetector directoryDetector=PatchBaseDirectoryDetector.getInstance(myProject);
  for (  TextFilePatch patch : list) {
    if (patch.isNewFile() || (patch.getBeforeName() == null)) {
      creations.add(patch);
      continue;
    }
    final String fileName=patch.getBeforeFileName();
    final Collection<VirtualFile> files=ApplicationManager.getApplication().runReadAction(new Computable<Collection<VirtualFile>>(){
      public Collection<VirtualFile> compute(){
        return directoryDetector.findFiles(fileName);
      }
    }
);
    for (    AutoMatchStrategy strategy : myStrategies) {
      strategy.acceptPatch(patch,files);
    }
  }
  for (  AutoMatchStrategy strategy : myStrategies) {
    strategy.beforeCreations();
  }
  for (  TextFilePatch creation : creations) {
    for (    AutoMatchStrategy strategy : myStrategies) {
      strategy.processCreation(creation);
    }
  }
  for (  AutoMatchStrategy strategy : myStrategies) {
    if (strategy.succeeded()) {
      return strategy.getResult();
    }
  }
  return myStrategies.get(myStrategies.size() - 1).getResult();
}
