{
  final StringBuffer buffer=new StringBuffer(128);
  final PsiClass containingClass=myMethod.getContainingClass();
  if (containingClass != null) {
    buffer.append(ClassPresentationUtil.getNameForClass(containingClass,false));
    buffer.append('.');
  }
  final String methodText=PsiFormatUtil.formatMethod(myMethod,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE);
  buffer.append(methodText);
  final SimpleTextAttributes attributes=isEnabled() ? new SimpleTextAttributes(SimpleTextAttributes.STYLE_PLAIN,UIUtil.getTreeForeground()) : SimpleTextAttributes.EXCLUDED_ATTRIBUTES;
  renderer.append(buffer.toString(),attributes);
  if (containingClass != null) {
    final String packageName=getPackageName(containingClass);
    renderer.append("  (" + packageName + ")",new SimpleTextAttributes(SimpleTextAttributes.STYLE_ITALIC,JBColor.GRAY));
  }
}
