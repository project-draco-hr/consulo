{
  final Palette palette=Palette.getInstance(editor.getProject());
  IntrospectedProperty[] props=palette.getIntrospectedProperties(component.getComponentClass());
  for (  IntrospectedProperty prop : props) {
    if (component.isMarkedAsModified(prop) && prop instanceof IntroStringProperty) {
      StringDescriptor descriptor=(StringDescriptor)prop.getValue(component);
      if (descriptor != null) {
        ErrorInfo errInfo=checkDescriptor(descriptor,editor.getModule());
        if (errInfo != null) {
          return errInfo;
        }
      }
    }
  }
  if (component instanceof RadContainer) {
    RadContainer container=(RadContainer)component;
    StringDescriptor descriptor=container.getBorderTitle();
    if (descriptor != null) {
      ErrorInfo errInfo=checkDescriptor(descriptor,editor.getModule());
      if (errInfo != null) {
        return errInfo;
      }
    }
  }
  if (component.getParent() instanceof RadTabbedPane) {
    RadTabbedPane parentTabbedPane=(RadTabbedPane)component.getParent();
    final StringDescriptor descriptor=parentTabbedPane.getChildTitle(component);
    if (descriptor != null) {
      ErrorInfo errInfo=checkDescriptor(descriptor,editor.getModule());
      if (errInfo != null) {
        return errInfo;
      }
    }
  }
  return null;
}
