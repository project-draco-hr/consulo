{
  final MultiMap<String,Change> map=myIntersection.getChangesSubset();
  final RefreshSessionImpl session=new RefreshSessionImpl(true,false,new Runnable(){
    public void run(){
      context.ping();
    }
  }
);
  for (  String name : map.keySet()) {
    try {
      final Collection<Change> changes=map.get(name);
      FileDocumentManager.getInstance().saveAllDocuments();
      ShelveChangesManager.getInstance(myProject).shelveChanges(changes,myIntersection.getComment(name) + " (auto shelve before merge)");
      session.addAllFiles(ChangesUtil.getFilesFromChanges(changes));
    }
 catch (    IOException e) {
      finishWithError(context,e.getMessage(),true);
    }
catch (    VcsException e) {
      finishWithError(context,e.getMessage(),true);
    }
  }
  context.suspend();
  session.launch();
}
