{
  if (SVNPathUtil.isAncestor(mySourceUrl,myWcInfo.getRootUrl()) || SVNPathUtil.isAncestor(myWcInfo.getRootUrl(),mySourceUrl)) {
    showErrorBalloon("Cannot merge from self");
    return;
  }
  correctSourceUrl(new Runnable(){
    public void run(){
      if (!myWcInfo.getFormat().supportsMergeInfo()) {
        mergeAll();
        return;
      }
      final int result=Messages.showDialog(myProject,"Merge all?",myTitle,new String[]{"Merge &all","&Select revisions to merge","Cancel"},0,Messages.getQuestionIcon());
      if (result == 2)       return;
      if (result == 0) {
        mergeAll();
        return;
      }
      myVcs.getSvnBranchPointsCalculator().getFirstCopyPoint(myWcInfo.getRepositoryRoot(),myWcInfo.getRootUrl(),mySourceUrl,new Consumer<SvnBranchPointsCalculator.WrapperInvertor<SvnBranchPointsCalculator.BranchCopyData>>(){
        public void consume(        SvnBranchPointsCalculator.WrapperInvertor<SvnBranchPointsCalculator.BranchCopyData> branchCopyDataWrapperInvertor){
          try {
            ProgressManager.getInstance().run(new MergeCalculator(myProject,myWcInfo,mySourceUrl,myBranchName,branchCopyDataWrapperInvertor));
          }
 catch (          SVNException e) {
            showErrorBalloon(e.getMessage());
          }
        }
      }
);
    }
  }
);
}
