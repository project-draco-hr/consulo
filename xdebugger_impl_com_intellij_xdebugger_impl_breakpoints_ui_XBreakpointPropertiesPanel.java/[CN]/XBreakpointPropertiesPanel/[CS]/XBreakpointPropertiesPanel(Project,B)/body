{
  myBreakpoint=breakpoint;
  XBreakpointType<B,?> type=XDebuggerUtilImpl.getType(breakpoint);
  mySuspendRadioButtons=new HashMap<SuspendPolicy,JRadioButton>();
  mySuspendRadioButtons.put(SuspendPolicy.ALL,mySuspendAllRadioButton);
  mySuspendRadioButtons.put(SuspendPolicy.THREAD,mySuspendThreadRadioButton);
  mySuspendRadioButtons.put(SuspendPolicy.NONE,mySuspendNoneRadioButton);
  @NonNls String card=type.isSuspendThreadSupported() ? "radioButtons" : "checkbox";
  ((CardLayout)mySuspendPolicyPanel.getLayout()).show(mySuspendPolicyPanel,card);
  XDebuggerEditorsProvider debuggerEditorsProvider=type.getEditorsProvider();
  if (debuggerEditorsProvider != null) {
    ActionListener listener=new ActionListener(){
      public void actionPerformed(      final ActionEvent e){
        onCheckboxChanged();
      }
    }
;
    myLogExpressionComboBox=new XDebuggerExpressionComboBox(project,debuggerEditorsProvider,"breakpointLogExpression");
    JComponent logExpressionComponent=myLogExpressionComboBox.getComponent();
    myLogExpressionPanel.add(logExpressionComponent,BorderLayout.CENTER);
    myLogExpressionComboBox.setEnabled(false);
    myLogExpressionCheckBox.addActionListener(listener);
    DebuggerUIUtil.focusEditorOnCheck(myLogExpressionCheckBox,logExpressionComponent);
    myConditionComboBox=new XDebuggerExpressionComboBox(project,debuggerEditorsProvider,"breakpointCondition");
    JComponent conditionComponent=myConditionComboBox.getComponent();
    myConditionExpressionPanel.add(conditionComponent,BorderLayout.CENTER);
    myConditionComboBox.setEnabled(false);
    myConditionCheckBox.addActionListener(listener);
    DebuggerUIUtil.focusEditorOnCheck(myConditionCheckBox,conditionComponent);
  }
 else {
    myLogExpressionCheckBox.setVisible(false);
    myConditionCheckBox.setVisible(false);
  }
  myCustomPanels=new ArrayList<XBreakpointCustomPropertiesPanel<B>>();
  XBreakpointCustomPropertiesPanel<B> customConditionPanel=type.createCustomConditionsPanel();
  if (customConditionPanel != null) {
    myCustomConditionsPanelWrapper.add(customConditionPanel.getComponent(),BorderLayout.CENTER);
    myCustomPanels.add(customConditionPanel);
  }
  XBreakpointCustomPropertiesPanel<B> customPropertiesPanel=type.createCustomPropertiesPanel();
  if (customPropertiesPanel != null) {
    myCustomPropertiesPanelWrapper.add(customPropertiesPanel.getComponent(),BorderLayout.CENTER);
    myCustomPanels.add(customPropertiesPanel);
  }
  loadProperties();
}
