{
  myFiles.put(file.getViewProvider().getVirtualFile(),file);
  myCompositeCacheManager.addCacheManager(new CacheManager(){
    public void initialize(){
    }
    public void dispose(){
    }
    @NotNull public CacheUpdater[] getCacheUpdaters(){
      return new CacheUpdater[0];
    }
    @NotNull public PsiFile[] getFilesWithWord(    @NotNull final String word,    final short occurenceMask,    @NotNull final GlobalSearchScope scope,    final boolean caseSensitively){
      return new PsiFile[]{file};
    }
    public boolean processFilesWithWord(    @NotNull final Processor<PsiFile> processor,    @NotNull final String word,    final short occurenceMask,    @NotNull final GlobalSearchScope scope,    final boolean caseSensitively){
      return processor.process(file);
    }
    @NotNull public PsiFile[] getFilesWithTodoItems(){
      return PsiFile.EMPTY_ARRAY;
    }
    public int getTodoCount(    @NotNull final VirtualFile file,    final IndexPatternProvider patternProvider){
      return 0;
    }
    public int getTodoCount(    @NotNull final VirtualFile file,    final IndexPattern pattern){
      return 0;
    }
    public void addOrInvalidateFile(    @NotNull final VirtualFile file){
    }
  }
);
}
