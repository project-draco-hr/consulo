{
  return new EmptyRepositoryElementsManager(){
    public SrcRepositoryPsiElement createRepositoryPsiElementByTreeElement(    PsiManagerEx manager,    RepositoryTreeElement treeElement){
      IElementType elementType=treeElement.getElementType();
      if (elementType == JavaElementType.CLASS) {
        return new PsiClassImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.ANONYMOUS_CLASS) {
        return new PsiAnonymousClassImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.ENUM_CONSTANT_INITIALIZER) {
        return new PsiEnumConstantInitializerImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.METHOD) {
        return new PsiMethodImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.ANNOTATION_METHOD) {
        return new PsiAnnotationMethodImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.FIELD) {
        return new PsiFieldImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.ENUM_CONSTANT) {
        return new PsiEnumConstantImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.CLASS_INITIALIZER) {
        return new PsiClassInitializerImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.MODIFIER_LIST) {
        return new PsiModifierListImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.IMPORT_LIST) {
        return new PsiImportListImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.EXTENDS_LIST || elementType == JavaElementType.IMPLEMENTS_LIST || elementType == JavaElementType.THROWS_LIST) {
        return new PsiReferenceListImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.PARAMETER_LIST) {
        return new PsiParameterListImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.IMPORT_STATEMENT) {
        return new PsiImportStatementImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.IMPORT_STATIC_STATEMENT) {
        return new PsiImportStaticStatementImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.PARAMETER) {
        return new PsiParameterImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.TYPE_PARAMETER) {
        return new PsiTypeParameterImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.TYPE_PARAMETER_LIST) {
        return new PsiTypeParameterListImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.EXTENDS_BOUND_LIST) {
        return new PsiTypeParameterExtendsBoundsListImpl(manager,treeElement);
      }
 else       if (elementType == JavaElementType.ANNOTATION) {
        return new PsiAnnotationImpl(manager,treeElement);
      }
 else {
        LOG.error("Incorrect TreeElement:" + treeElement);
        return null;
      }
    }
  }
;
}
