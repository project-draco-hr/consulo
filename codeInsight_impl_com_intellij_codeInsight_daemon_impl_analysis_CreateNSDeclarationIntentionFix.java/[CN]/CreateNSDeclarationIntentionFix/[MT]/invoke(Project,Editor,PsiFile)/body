{
  if (!CodeInsightUtil.prepareFileForWrite(file))   return;
  final boolean taglib=myTaglibDeclaration || file instanceof JspFile;
  final String[] namespaces=guessNamespace(file,taglib,!(file instanceof JspFile));
  runActionOverSeveralAttributeValuesAfterLettingUserSelectTheNeededOne(namespaces,project,new StringToAttributeProcessor(){
    @NotNull public TextRange doSomethingWithGivenStringToProduceXmlAttributeNowPlease(    @NotNull final String attrName) throws IncorrectOperationException {
      final XmlAttribute attribute=insertNsDeclaration(file,attrName,project);
      final TextRange range=attribute.getValueTextRange();
      return range.shiftRight(attribute.getValueElement().getTextRange().getStartOffset());
    }
  }
,XmlErrorMessages.message(myTaglibDeclaration ? "select.taglib.title" : "select.namespace.title"),this,editor,taglib ? XmlUtil.JSTL_CORE_URIS[0] : MY_DEFAULT_XML_NS);
}
