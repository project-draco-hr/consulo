{
  if (!(myElement instanceof XmlTag)) {
    return false;
  }
  final String text=((XmlTag)myElement).getName().trim();
  final int pos=text.indexOf(':');
  final Collection<String> list=new HashSet<String>();
  String prefix=null;
  final Project project=myElement.getProject();
  if (pos == -1) {
  }
 else   if (pos == text.length() - 1) {
    final Module module=ModuleUtil.findModuleForPsiElement(myElement);
    if (module == null) {
      return false;
    }
    prefix=text.substring(0,text.length() - 1);
    final Collection<XmlFile> files=JspManager.getInstance(project).getPossibleTldFiles(module);
    for (    XmlFile psiFile : files) {
      final XmlDocument document=psiFile.getDocument();
      if (document != null) {
        final TldDescriptor descriptor=(TldDescriptor)document.getMetaData();
        if (descriptor != null) {
          if (descriptor.getDefaultPrefix().equals(prefix)) {
            final String uri=descriptor.getUri();
            if (!StringUtil.isEmpty(uri)) {
              list.add(uri);
            }
          }
        }
      }
    }
  }
 else {
  }
  if (!list.isEmpty()) {
    final String message=ShowAutoImportPass.getMessage(list.size() > 1,list.iterator().next());
    final ImportNSAction action=new ImportNSAction(list,prefix,myElement.getContainingFile(),editor,"taglib.to.import");
    HintManager.getInstance().showQuestionHint(editor,message,myElement.getTextOffset(),myElement.getTextRange().getEndOffset(),action);
    return true;
  }
  return false;
}
