{
  final ProgressIndicator pi=ProgressManager.getInstance().getProgressIndicator();
  final JspManager jspManager=JspManager.getInstance(file.getProject());
  final String searchFor=metaHandler.searchFor();
  if (processor.acceptTaglib() && jspManager != null) {
    if (pi != null)     pi.setText(XmlErrorMessages.message("looking.in.tlds"));
    final JspFile jspFile=(JspFile)file;
    final String[] possibleTldUris=jspManager.getPossibleTldUris(jspFile);
    Arrays.sort(possibleTldUris);
    int i=0;
    boolean foundSomething=false;
    for (    String uri : possibleTldUris) {
      if (pi != null) {
        pi.setFraction((double)i / possibleTldUris.length);
        pi.setText2(uri);
        ++i;
      }
      final XmlFile tldFileByUri=jspManager.getTldFileByUri(uri,jspFile);
      if (tldFileByUri == null)       continue;
      final boolean wordFound=checkIfGivenXmlHasTheseWords(searchFor,tldFileByUri);
      if (!wordFound)       continue;
      final PsiMetaData metaData=tldFileByUri.getDocument().getMetaData();
      if (metaHandler.isAcceptableMetaData(metaData,uri)) {
        processor.process(uri,null);
        foundSomething=true;
      }
    }
    if (file.getFileType() == StdFileTypes.JSPX && !foundSomething) {
      final XmlNSDescriptorImpl nsDescriptor=(XmlNSDescriptorImpl)jspManager.getActionsLibrary(file);
      if (metaHandler.isAcceptableMetaData(nsDescriptor,XmlUtil.JSP_URI)) {
        processor.process(XmlUtil.JSP_URI,null);
      }
    }
  }
  if (processor.acceptXmlNs()) {
    if (pi != null)     pi.setText(XmlErrorMessages.message("looking.in.schemas"));
    final ExternalResourceManagerEx instanceEx=ExternalResourceManagerEx.getInstanceEx();
    final String[] availableUrls=instanceEx.getResourceUrls(null,true);
    int i=0;
    for (    String url : availableUrls) {
      if (pi != null) {
        pi.setFraction((double)i / availableUrls.length);
        pi.setText2(url);
        ++i;
      }
      final XmlFile xmlFile=XmlUtil.findNamespace(file,url);
      if (xmlFile != null) {
        final boolean wordFound=checkIfGivenXmlHasTheseWords(searchFor,xmlFile);
        if (!wordFound)         continue;
        final PsiMetaData metaData=xmlFile.getDocument().getMetaData();
        if (metaHandler.isAcceptableMetaData(metaData,url)) {
          final XmlNSDescriptorImpl descriptor=metaData instanceof XmlNSDescriptorImpl ? (XmlNSDescriptorImpl)metaData : null;
          final String defaultNamespace=descriptor != null ? descriptor.getDefaultNamespace() : url;
          if (!XmlUtil.XML_SCHEMA_URI2.equals(defaultNamespace) && !XmlUtil.XML_SCHEMA_URI3.equals(defaultNamespace)) {
            processor.process(defaultNamespace,url);
          }
        }
      }
    }
  }
}
