{
  final Project project=buildFile.getProject();
  final StatusBar statusbar=WindowManager.getInstance().getStatusBar(project);
  if (statusbar != null) {
    statusbar.setInfo(AntBundle.message("ant.build.started.status.message"));
  }
  final CheckCancelTask checkCancelTask=new CheckCancelTask(progress,handler);
  checkCancelTask.start(0);
  final OutputParser parser=OutputParser2.attachParser(project,handler,errorView,progress,buildFile);
  handler.addProcessListener(new ProcessAdapter(){
    public void processTerminated(    ProcessEvent event){
      final long buildTime=System.currentTimeMillis() - startTime;
      checkCancelTask.cancel();
      parser.setStopped(true);
      final OutputPacketProcessor dispatcher=handler.getErr().getEventsDispatcher();
      errorView.buildFinished(progress != null && progress.isCanceled(),buildTime,antBuildListener,dispatcher);
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          if (project.isDisposed()) {
            return;
          }
          errorView.removeProgressPanel();
          ToolWindow toolWindow=ToolWindowManager.getInstance(project).getToolWindow(ToolWindowId.MESSAGES_WINDOW);
          if (toolWindow != null) {
            toolWindow.activate(null,false);
          }
        }
      }
,ModalityState.NON_MODAL);
    }
  }
);
  handler.startNotify();
}
