{
  final Project project=buildFile.getProject();
  final long startTime=System.currentTimeMillis();
  LocalHistory.getInstance().putSystemLabel(project,AntBundle.message("ant.build.local.history.label",buildFile.getName()));
  JUnitProcessHandler handler;
  try {
    handler=JUnitProcessHandler.runCommandLine(commandLine);
  }
 catch (  final ExecutionException e) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        ExecutionErrorDialog.show(e,AntBundle.message("could.not.start.process.erorr.dialog.title"),project);
      }
    }
);
    antBuildListener.buildFinished(AntBuildListener.FAILED_TO_RUN,0);
    return;
  }
  processRunningAnt(progress,handler,errorView,buildFile,startTime,antBuildListener);
  handler.waitFor();
}
