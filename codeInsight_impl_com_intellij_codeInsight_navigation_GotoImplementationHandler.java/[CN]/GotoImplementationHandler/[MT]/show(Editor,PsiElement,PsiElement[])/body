{
  if (elements == null || elements.length == 0) {
    return;
  }
  if (elements.length == 1) {
    Navigatable descriptor=EditSourceUtil.getDescriptor(elements[0]);
    if (descriptor != null && descriptor.canNavigate()) {
      descriptor.navigate(true);
    }
  }
 else {
    boolean onlyMethods=true;
    boolean onlyClasses=true;
    for (    PsiElement element : elements) {
      if (!(element instanceof PsiMethod))       onlyMethods=false;
      if (!(element instanceof PsiClass))       onlyClasses=false;
    }
    PsiElementListCellRenderer renderer;
    if (onlyMethods) {
      renderer=new MethodCellRenderer(!PsiUtil.allMethodsHaveSameSignature(Arrays.asList(elements).toArray(PsiMethod.EMPTY_ARRAY)));
    }
 else     if (onlyClasses) {
      renderer=new PsiClassListCellRenderer();
    }
 else {
      renderer=new DefaultPsiElementListCellRenderer();
    }
    Arrays.sort(elements,renderer.getComparator());
    final JList list=new JList(elements);
    list.setCellRenderer(renderer);
    renderer.installSpeedSearch(list);
    final Runnable runnable=new Runnable(){
      public void run(){
        int[] ids=list.getSelectedIndices();
        if (ids == null || ids.length == 0)         return;
        Object[] selectedElements=list.getSelectedValues();
        for (        Object element : selectedElements) {
          Navigatable descriptor=EditSourceUtil.getDescriptor((PsiElement)element);
          if (descriptor != null && descriptor.canNavigate()) {
            descriptor.navigate(true);
          }
        }
      }
    }
;
    final String name=((PsiNamedElement)sourceElement).getName();
    final String title;
    if (onlyMethods || onlyClasses) {
      title=CodeInsightBundle.message("goto.implementation.chooser.title",name,elements.length);
    }
 else {
      title=CodeInsightBundle.message("goto.implementation.in.file.chooser.title",name,elements.length);
    }
    new PopupChooserBuilder(list).setTitle(title).setItemChoosenCallback(runnable).createPopup().showInBestPositionFor(editor);
  }
}
