{
  for (  MavenProject each : projects) {
    String name;
    Module module=mavenProjectToModule.get(each);
    if (module != null) {
      name=module.getName();
    }
 else {
      name=each.getMavenId().getArtifactId();
      if (!isValidName(name))       name=each.getDirectoryFile().getName();
    }
    mavenProjectToModuleName.put(each,name);
  }
  Map<String,Integer> counts=collectNamesCounts(projects,mavenProjectToModuleName);
  for (  MavenProject each : projects) {
    String name=mavenProjectToModuleName.get(each);
    if (counts.get(name) > 1) {
      String groupId=each.getMavenId().getGroupId();
      if (isValidName(groupId)) {
        mavenProjectToModuleName.put(each,name + " (" + groupId+ ")");
      }
    }
  }
  for (  MavenProject each : projects) {
    String name=mavenProjectToModuleName.get(each);
    List<MavenProject> withSameName=getProjectsWithName(projects,name,mavenProjectToModuleName);
    if (withSameName.size() > 1) {
      int i=1;
      for (      MavenProject eachWithSameName : withSameName) {
        mavenProjectToModuleName.put(eachWithSameName,name + " (" + i+ ")");
        i++;
      }
    }
  }
}
