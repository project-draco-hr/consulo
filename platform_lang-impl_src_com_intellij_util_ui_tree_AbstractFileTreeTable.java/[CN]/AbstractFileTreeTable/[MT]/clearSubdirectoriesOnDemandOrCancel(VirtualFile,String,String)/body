{
  Map<VirtualFile,T> mappings=myModel.myCurrentMapping;
  Map<VirtualFile,T> subdirectoryMappings=new THashMap<VirtualFile,T>();
  for (  VirtualFile file : mappings.keySet()) {
    if (file != null && (parent == null || VfsUtilCore.isAncestor(parent,file,true))) {
      subdirectoryMappings.put(file,mappings.get(file));
    }
  }
  if (subdirectoryMappings.isEmpty()) {
    return true;
  }
  int ret=Messages.showYesNoCancelDialog(myProject,message,title,"Override","Do Not Override","Cancel",Messages.getWarningIcon());
  if (ret == 0) {
    for (    VirtualFile file : subdirectoryMappings.keySet()) {
      myModel.setValueAt(null,new DefaultMutableTreeNode(file),1);
    }
  }
  return ret != 2;
}
