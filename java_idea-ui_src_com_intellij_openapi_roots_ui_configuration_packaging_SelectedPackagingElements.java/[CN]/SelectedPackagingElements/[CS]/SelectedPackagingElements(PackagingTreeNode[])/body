{
  BidirectionalMap<VirtualFile,LibraryLink> selectedFiles=new BidirectionalMap<VirtualFile,LibraryLink>();
  Set<LibraryLink> fullySelectedLibraries=new HashSet<LibraryLink>();
  for (  PackagingTreeNode treeNode : treeNodes) {
    ContainerElement containerElement=treeNode.getContainerElement();
    if (containerElement == null)     continue;
    if (treeNode instanceof LibraryFileNode) {
      LibraryFileNode node=(LibraryFileNode)treeNode;
      selectedFiles.put(node.getFile(),node.getLibraryLink());
    }
 else     if (containerElement instanceof LibraryLink) {
      fullySelectedLibraries.add((LibraryLink)containerElement);
    }
    PackagingArtifact owner=treeNode.getOwner();
    if (owner != null && owner.getContainerElement() != null) {
      myOwners.add(owner);
    }
 else {
      myContainerElements.add(containerElement);
    }
  }
  for (  LibraryLink libraryLink : selectedFiles.values()) {
    Library library=libraryLink.getLibrary();
    if (library != null) {
      VirtualFile[] roots=library.getFiles(OrderRootType.CLASSES);
      List<VirtualFile> files=selectedFiles.getKeysByValue(libraryLink);
      if (Comparing.haveEqualElements(files,Arrays.asList(roots))) {
        fullySelectedLibraries.add(libraryLink);
      }
    }
  }
  for (  LibraryLink libraryLink : fullySelectedLibraries) {
    selectedFiles.removeValue(libraryLink);
  }
  myParentLibraryLinks=selectedFiles.values();
  ContainerUtil.removeDuplicates(myContainerElements);
}
