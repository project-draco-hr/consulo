{
  if (lexer == null) {
    lexer=new JavaLexer(LanguageLevelProjectExtension.getInstance(manager.getProject()).getLanguageLevel());
  }
  FilterLexer filterLexer=new FilterLexer(lexer,new FilterLexer.SetFilter(StdTokenSets.WHITE_SPACE_OR_COMMENT_BIT_SET));
  if (state < 0)   filterLexer.start(buffer,startOffset,endOffset,0);
 else   filterLexer.start(buffer,startOffset,endOffset,state);
  final FileElement dummyRoot=new JavaDummyHolder(manager,null,myContext.getCharTable()).getTreeElement();
  CompositeElement invalidElementsGroup=null;
  while (filterLexer.getTokenType() != null) {
    TreeElement element=(TreeElement)parseImportStatement(filterLexer);
    if (element != null) {
      TreeUtil.addChildren(dummyRoot,element);
      invalidElementsGroup=null;
      continue;
    }
    if (invalidElementsGroup == null) {
      invalidElementsGroup=Factory.createErrorElement(JavaErrorMessages.message("unexpected.token"));
      TreeUtil.addChildren(dummyRoot,invalidElementsGroup);
    }
    TreeUtil.addChildren(invalidElementsGroup,ParseUtil.createTokenElement(filterLexer,myContext.getCharTable()));
    filterLexer.advance();
  }
  ParseUtil.insertMissingTokens(dummyRoot,lexer,startOffset,endOffset,-1,ParseUtil.WhiteSpaceAndCommentsProcessor.INSTANCE,myContext);
  return (TreeElement)dummyRoot.getFirstChildNode();
}
