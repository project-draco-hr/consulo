{
  boolean hasNulls=false;
  int sortedSize=mySortedChildren.size();
  AnAction[] children=new AnAction[sortedSize + myPairs.size()];
  for (int i=0; i < sortedSize; i++) {
    AnAction action=mySortedChildren.get(i);
    if (action == null) {
      LOG.error("Empty sorted child: " + this + ", "+ getClass()+ "; index="+ i);
    }
    if (action instanceof ActionStub) {
      action=unstub(e,(ActionStub)action);
      mySortedChildren.set(i,action);
    }
    hasNulls|=action == null;
    children[i]=action;
  }
  for (int i=0; i < myPairs.size(); i++) {
    final Pair<AnAction,Constraints> pair=myPairs.get(i);
    AnAction action=pair.first;
    if (action == null) {
      LOG.error("Empty pair child: " + this + ", "+ getClass()+ "; index="+ i);
    }
    if (action instanceof ActionStub) {
      action=unstub(e,(ActionStub)action);
      myPairs.set(i,Pair.create(action,pair.second));
    }
    hasNulls|=action == null;
    children[i + sortedSize]=action;
  }
  if (hasNulls) {
    return ContainerUtil.mapNotNull(children,FunctionUtil.<AnAction>id(),AnAction.EMPTY_ARRAY);
  }
  return children;
}
