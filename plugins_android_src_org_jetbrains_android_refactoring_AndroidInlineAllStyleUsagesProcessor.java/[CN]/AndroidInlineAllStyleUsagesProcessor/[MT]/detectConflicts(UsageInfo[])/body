{
  final List<PsiElement> nonXmlUsages=new ArrayList<PsiElement>();
  final List<PsiElement> unsupportedUsages=new ArrayList<PsiElement>();
  final List<PsiElement> unambiguousUsages=new ArrayList<PsiElement>();
  final List<PsiElement> implicitlyInherited=new ArrayList<PsiElement>();
  for (  UsageInfo usage : usages) {
    final PsiElement element=usage.getElement();
    if (element == null)     continue;
    if (element.getLanguage() != XMLLanguage.INSTANCE) {
      nonXmlUsages.add(element);
      continue;
    }
    final XmlTag tag=PsiTreeUtil.getParentOfType(element,XmlTag.class);
    StyleUsageData usageData=tag != null ? AndroidInlineUtil.getStyleUsageData(tag) : null;
    if (usageData == null) {
      if (usage.getReference() instanceof ResourceNameConverter.MyParentStyleReference) {
        implicitlyInherited.add(element);
      }
 else {
        unsupportedUsages.add(element);
      }
      continue;
    }
    if (usageData.getReference().computeTargetElements().length > 1) {
      unambiguousUsages.add(element);
    }
  }
  return AndroidInlineUtil.buildConflicts(nonXmlUsages,unambiguousUsages,unsupportedUsages,implicitlyInherited);
}
