{
  List<JpsModuleSourceRoot> sourceRoots=module.getSourceRoots();
  List<String> excludedUrls=getSortedList(module.getExcludeRootsList().getUrls());
  for (  String url : getSortedList(module.getContentRootsList().getUrls())) {
    Element contentElement=new Element(CONTENT_TAG);
    contentElement.setAttribute(URL_ATTRIBUTE,url);
    rootModelElement.addContent(contentElement);
    for (    JpsModuleSourceRoot root : sourceRoots) {
      if (FileUtil.startsWith(root.getUrl(),url)) {
        Element sourceElement=new Element(SOURCE_FOLDER_TAG);
        sourceElement.setAttribute(URL_ATTRIBUTE,root.getUrl());
        JpsModuleSourceRootType<?> type=root.getRootType();
        sourceElement.setAttribute(IS_TEST_SOURCE_ATTRIBUTE,Boolean.toString(type.equals(JavaSourceRootType.TEST_SOURCE)));
        if (type instanceof JavaSourceRootType) {
          JpsSimpleElement<JavaSourceRootProperties> properties=root.getProperties((JavaSourceRootType)type);
          if (properties != null) {
            String packagePrefix=properties.getData().getPackagePrefix();
            if (packagePrefix.length() > 0) {
              sourceElement.setAttribute(PACKAGE_PREFIX_ATTRIBUTE,packagePrefix);
            }
          }
        }
        contentElement.addContent(sourceElement);
      }
    }
    for (    String excludedUrl : excludedUrls) {
      if (FileUtil.startsWith(excludedUrl,url)) {
        Element element=new Element(EXCLUDE_FOLDER_TAG).setAttribute(URL_ATTRIBUTE,excludedUrl);
        contentElement.addContent(element);
      }
    }
  }
  for (  JpsDependencyElement dependency : module.getDependenciesList().getDependencies()) {
    if (dependency instanceof JpsModuleSourceDependency) {
      rootModelElement.addContent(createDependencyElement(SOURCE_FOLDER_TYPE).setAttribute("forTests","false"));
    }
 else     if (dependency instanceof JpsSdkDependency) {
      JpsSdkType<?> sdkType=((JpsSdkDependency)dependency).getSdkType();
      JpsLibraryReference reference=module.getSdkReferencesTable().getSdkReference(sdkType);
      if (reference == null) {
        rootModelElement.addContent(createDependencyElement(INHERITED_JDK_TYPE));
      }
 else {
        Element element=createDependencyElement(JDK_TYPE);
        element.setAttribute(JDK_NAME_ATTRIBUTE,reference.getLibraryName());
        element.setAttribute(JDK_TYPE_ATTRIBUTE,JpsSdkTableSerializer.getLoader(sdkType).getTypeId());
        rootModelElement.addContent(element);
      }
    }
 else     if (dependency instanceof JpsLibraryDependency) {
      JpsLibraryReference reference=((JpsLibraryDependency)dependency).getLibraryReference();
      JpsElementReference<? extends JpsCompositeElement> parentReference=reference.getParentReference();
      Element element;
      if (parentReference instanceof JpsModuleReference) {
        element=createDependencyElement(MODULE_LIBRARY_TYPE);
        saveModuleDependencyProperties(dependency,element);
        Element libraryElement=new Element(LIBRARY_TAG);
        JpsLibrary library=reference.resolve();
        String libraryName=library.getName();
        JpsLibraryTableSerializer.saveLibrary(library,libraryElement,isGeneratedName(libraryName) ? null : libraryName);
        element.addContent(libraryElement);
      }
 else {
        element=createDependencyElement(LIBRARY_TYPE);
        saveModuleDependencyProperties(dependency,element);
        element.setAttribute(NAME_ATTRIBUTE,reference.getLibraryName());
        element.setAttribute(LEVEL_ATTRIBUTE,JpsLibraryTableSerializer.getLevelId(parentReference));
      }
      rootModelElement.addContent(element);
    }
 else     if (dependency instanceof JpsModuleDependency) {
      Element element=createDependencyElement(MODULE_TYPE);
      element.setAttribute(MODULE_NAME_ATTRIBUTE,((JpsModuleDependency)dependency).getModuleReference().getModuleName());
      saveModuleDependencyProperties(dependency,element);
      rootModelElement.addContent(element);
    }
  }
  for (  JpsModelSerializerExtension extension : JpsModelSerializerExtension.getExtensions()) {
    extension.saveRootModel(module,rootModelElement);
  }
}
