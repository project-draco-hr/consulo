def open_local_file(self, req):
    import mimetypes
    import email
    host = req.get_host()
    file = req.get_selector()
    localfile = urllib.url2pathname(file)
    stats = os.stat(localfile)
    size = stats[stat.ST_SIZE]
    modified = email.Utils.formatdate(stats[stat.ST_MTIME])
    mtype = mimetypes.guess_type(file)[0]
    if host:
        (host, port) = urllib.splitport(host)
        if (port or (socket.gethostbyname(host) not in self.get_names())):
            raise urllib2.URLError('file not on local host')
    fo = open(localfile, 'rb')
    brange = req.headers.get('Range', None)
    brange = range_header_to_tuple(brange)
    assert (brange != ())
    if brange:
        (fb, lb) = brange
        if (lb == ''):
            lb = size
        if ((fb < 0) or (fb > size) or (lb > size)):
            raise RangeError('Requested Range Not Satisfiable')
        size = (lb - fb)
        fo = RangeableFileObject(fo, (fb, lb))
    headers = email.message_from_string(('Content-Type: %s\nContent-Length: %d\nLast-Modified: %s\n' % ((mtype or 'text/plain'), size, modified)))
    return urllib.addinfourl(fo, headers, ('file:' + file))
