{
  return new PresentableNodeDescriptor(null,parentDescriptor){
    @Override protected void update(    PresentationData presentation){
      onElementAction("update",(NodeElement)element);
      presentation.clear();
      presentation.addText(new ColoredFragment(getElement().toString(),SimpleTextAttributes.REGULAR_ATTRIBUTES));
    }
    @Override public PresentableNodeDescriptor getChildToHighlightAt(    int index){
      return null;
    }
    @Override public Object getElement(){
      return element;
    }
    @Override public String toString(){
      List<ColoredFragment> coloredText=getPresentation().getColoredText();
      StringBuffer result=new StringBuffer();
      for (      ColoredFragment each : coloredText) {
        result.append(each.getText());
      }
      return result.toString();
    }
  }
;
}
