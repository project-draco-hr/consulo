{
  super.setUp();
  myComparator=new NodeDescriptor.NodeComparator.Delegate<NodeDescriptor>(new NodeDescriptor.NodeComparator<NodeDescriptor>(){
    public int compare(    NodeDescriptor o1,    NodeDescriptor o2){
      return AlphaComparator.INSTANCE.compare(o1,o2);
    }
  }
);
  mySortedParent.clear();
  myTreeModel=new DefaultTreeModel(new DefaultMutableTreeNode(null));
  myTreeModel.addTreeModelListener(new TreeModelListener(){
    public void treeNodesChanged(    TreeModelEvent e){
      assertEdt();
    }
    public void treeNodesInserted(    TreeModelEvent e){
      assertEdt();
    }
    public void treeNodesRemoved(    TreeModelEvent e){
      assertEdt();
    }
    public void treeStructureChanged(    TreeModelEvent e){
      assertEdt();
    }
  }
);
  myTree=new Tree(myTreeModel);
  myStructure=new MyStructure();
  myRoot=new Node(null,"/");
  initBuilder(new MyBuilder());
  myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      assertEdt();
    }
  }
);
  myTree.addTreeExpansionListener(new TreeExpansionListener(){
    public void treeExpanded(    TreeExpansionEvent event){
      assertEdt();
    }
    public void treeCollapsed(    TreeExpansionEvent event){
      assertEdt();
    }
  }
);
}
