{
  final ArrayList processedNodes=new ArrayList();
  final boolean[] toHide=new boolean[]{false};
  myElementUpdateHook=new ElementUpdateHook(){
    @Override public void onElementAction(    String action,    Object element){
      if (toHide[0]) {
        if ("jetbrains".equals(element.toString())) {
          getBuilder().getUi().deactivate();
        }
      }
    }
  }
;
  buildStructure(myRoot);
  waitBuilderToCome();
  processedNodes.clear();
  buildNode("/",false);
  assertTree("-/\n" + " +com\n" + " +jetbrains\n"+ " +org\n"+ " +xunit\n");
  Assert.assertEquals("/\n" + "com\n" + "jetbrains\n"+ "xunit\n"+ "org\n"+ "intellij\n"+ "fabrique\n"+ "runner\n"+ "eclipse",PlatformTestUtil.print(processedNodes));
  processedNodes.clear();
  toHide[0]=true;
  updateFromRoot();
  Assert.assertEquals("/\n" + "com\n" + "intellij\n"+ "jetbrains",PlatformTestUtil.print(processedNodes));
  processedNodes.clear();
  toHide[0]=false;
  showTree();
  assertTree("-/\n" + " +com\n" + " +jetbrains\n"+ " +org\n"+ " +xunit\n");
  Assert.assertEquals("/\n" + "com\n" + "intellij\n"+ "jetbrains\n"+ "fabrique\n"+ "org\n"+ "eclipse\n"+ "xunit\n"+ "runner",PlatformTestUtil.print(processedNodes));
}
