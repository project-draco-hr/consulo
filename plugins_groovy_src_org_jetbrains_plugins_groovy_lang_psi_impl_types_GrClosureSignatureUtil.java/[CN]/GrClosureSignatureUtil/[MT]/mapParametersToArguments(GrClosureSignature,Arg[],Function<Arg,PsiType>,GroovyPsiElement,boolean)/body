{
  if (signature instanceof GrCurriedClosureSignature) {
    final ArgWrapper<Arg>[] actualArgs=getActualArgs((GrCurriedClosureSignature)signature,args,typeComputer);
    if (actualArgs == null)     return null;
    final ArgInfo<ArgWrapper<Arg>>[] argInfos=mapParametersToArguments(getOriginalSignature(signature),actualArgs,GrClosureSignatureUtil.<Arg>ARG_WRAPPER_COMPUTER(),context,partial);
    if (argInfos == null)     return null;
    final ArgInfo<Arg>[] result=new ArgInfo[argInfos.length];
    for (int i=0; i < argInfos.length; i++) {
      ArgInfo<ArgWrapper<Arg>> info=argInfos[i];
      List<Arg> list=new ArrayList<Arg>();
      for (      ArgWrapper<Arg> arg : info.args) {
        if (arg.arg != null)         list.add(arg.arg);
      }
      result[i]=new ArgInfo<Arg>(list,info.isMultiArg);
    }
    return result;
  }
  if (checkForOnlyMapParam(signature,args.length))   return ArgInfo.empty_array();
  GrClosureParameter[] params=signature.getParameters();
  if (args.length > params.length && !signature.isVarargs())   return null;
  int optional=getOptionalParamCount(signature,false);
  int notOptional=params.length - optional;
  if (signature.isVarargs())   notOptional--;
  if (notOptional > args.length && !partial)   return null;
  final ArgInfo<Arg>[] map=mapSimple(params,args,typeComputer,context);
  if (map != null)   return map;
  if (signature.isVarargs()) {
    return new ParameterMapperForVararg<Arg>(context,params,args,typeComputer).isApplicable();
  }
  return null;
}
