{
  int act;
  Symbol lhs_sym=null;
  short handle_size, lhs_sym_num;
  production_tab=production_table();
  action_tab=action_table();
  reduce_tab=reduce_table();
  init_actions();
  user_init();
  cur_token=scan();
  stack.removeAllElements();
  stack.push(getSymbolFactory().startSymbol("START",0,start_state()));
  tos=0;
  for (_done_parsing=false; !_done_parsing; ) {
    if (cur_token.used_by_parser)     throw new Error("Symbol recycling detected (fix your scanner).");
    act=get_action(((Symbol)stack.peek()).parse_state,cur_token.sym);
    if (act > 0) {
      cur_token.parse_state=act - 1;
      cur_token.used_by_parser=true;
      stack.push(cur_token);
      tos++;
      cur_token=scan();
    }
 else     if (act < 0) {
      lhs_sym=do_action((-act) - 1,this,stack,tos);
      lhs_sym_num=production_tab[(-act) - 1][0];
      handle_size=production_tab[(-act) - 1][1];
      for (int i=0; i < handle_size; i++) {
        stack.pop();
        tos--;
      }
      act=get_reduce(((Symbol)stack.peek()).parse_state,lhs_sym_num);
      lhs_sym.parse_state=act;
      lhs_sym.used_by_parser=true;
      stack.push(lhs_sym);
      tos++;
    }
 else     if (act == 0) {
      syntax_error(cur_token);
      if (!error_recovery(false)) {
        unrecovered_syntax_error(cur_token);
        done_parsing();
      }
 else {
        lhs_sym=(Symbol)stack.peek();
      }
    }
  }
  return lhs_sym;
}
