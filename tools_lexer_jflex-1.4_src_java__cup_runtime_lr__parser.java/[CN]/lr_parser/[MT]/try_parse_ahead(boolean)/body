{
  int act;
  short lhs, rhs_size;
  virtual_parse_stack vstack=new virtual_parse_stack(stack);
  for (; ; ) {
    act=get_action(vstack.top(),cur_err_token().sym);
    if (act == 0)     return false;
    if (act > 0) {
      vstack.push(act - 1);
      if (debug)       debug_message("# Parse-ahead shifts Symbol #" + cur_err_token().sym + " into state #"+ (act - 1));
      if (!advance_lookahead())       return true;
    }
 else {
      if ((-act) - 1 == start_production()) {
        if (debug)         debug_message("# Parse-ahead accepts");
        return true;
      }
      lhs=production_tab[(-act) - 1][0];
      rhs_size=production_tab[(-act) - 1][1];
      for (int i=0; i < rhs_size; i++)       vstack.pop();
      if (debug)       debug_message("# Parse-ahead reduces: handle size = " + rhs_size + " lhs = #"+ lhs+ " from state #"+ vstack.top());
      vstack.push(get_reduce(vstack.top(),lhs));
      if (debug)       debug_message("# Goto state #" + vstack.top());
    }
  }
}
