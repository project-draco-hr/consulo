{
  LocalFileSystem fs=LocalFileSystem.getInstance();
  if (!(fs instanceof LocalFileSystemImpl))   return;
  FileWatcher watcher=((LocalFileSystemImpl)fs).getFileWatcher();
  if (!watcher.isOperational())   return;
  List<String> manualWatchRoots=watcher.getManualWatchRoots();
  if (manualWatchRoots.isEmpty())   return;
  VirtualFile[] roots=ProjectRootManager.getInstance(myProject).getContentRoots();
  if (roots.length == 0)   return;
  boolean nonWatched=false;
  loop:   for (  VirtualFile root : roots) {
    if (!(root.getFileSystem() instanceof LocalFileSystem))     continue;
    String rootPath=root.getPath();
    for (    String manualWatchRoot : manualWatchRoots) {
      if (FileUtil.isAncestor(manualWatchRoot,rootPath,false)) {
        nonWatched=true;
        break loop;
      }
    }
  }
  if (nonWatched) {
    String title=ApplicationBundle.message("watcher.slow.sync");
    String message=ApplicationBundle.message("watcher.non.watchable.project");
    Notifications.Bus.notify(FileWatcher.NOTIFICATION_GROUP.getValue().createNotification(title,message,NotificationType.WARNING,null));
  }
}
