{
  final Application app=ApplicationManager.getApplication();
  if (postStartupActivityPassed())   return;
  runActivities(myDumbAwarePostStartupActivities);
  DumbService.getInstance(myProject).runWhenSmart(new Runnable(){
    @Override public void run(){
      app.assertIsDispatchThread();
      runActivities(myDumbAwarePostStartupActivities);
synchronized (StartupManagerImpl.this) {
        if (!myNotDumbAwarePostStartupActivities.isEmpty()) {
          while (!myNotDumbAwarePostStartupActivities.isEmpty()) {
            queueSmartModeActivity(myNotDumbAwarePostStartupActivities.remove(0));
          }
          DumbService.getInstance(myProject).runWhenSmart(this);
        }
 else {
          myPostStartupActivitiesPassed=true;
        }
      }
    }
  }
);
}
