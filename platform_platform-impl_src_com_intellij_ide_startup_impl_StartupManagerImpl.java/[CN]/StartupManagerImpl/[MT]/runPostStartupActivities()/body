{
  final Application app=ApplicationManager.getApplication();
  if (myPostStartupActivitiesPassed)   return;
  runActivities(myDumbAwarePostStartupActivities);
  DumbService.getInstance(myProject).runWhenSmart(new Runnable(){
    public void run(){
synchronized (StartupManagerImpl.this) {
        app.assertIsDispatchThread();
        if (myProject.isDisposed())         return;
        runActivities(myDumbAwarePostStartupActivities);
        runActivities(myNotDumbAwarePostStartupActivities);
        myPostStartupActivitiesPassed=true;
      }
    }
  }
);
  if (!app.isUnitTestMode()) {
    VirtualFileManager.getInstance().refresh(!app.isHeadlessEnvironment());
  }
  if (SystemInfo.isMac && SystemInfo.isMacIntel64 && "10.6".compareTo(SystemInfo.OS_VERSION) <= 0) {
    if (Registry.is("ide.firstStartup")) {
      String productName=ApplicationNamesInfo.getInstance().getProductName();
      Notification n=new Notification(Notifications.SYSTEM_MESSAGES_GROUP_ID,"Optimization Hint",productName + " is now running in 64-bit mode.<br>" + "You may reduce memory consumption by running it in 32-bit mode. "+ "<a href=\"http://devnet.jetbrains.net/docs/DOC-1232\">Click for details</a>",NotificationType.INFORMATION,new NotificationListener(){
        @Override public void hyperlinkUpdate(        @NotNull Notification notification,        @NotNull HyperlinkEvent event){
          BrowserUtil.launchBrowser(event.getURL().toString());
        }
      }
);
      Notifications.Bus.notify(n,null);
    }
  }
  Registry.get("ide.firstStartup").setValue(false);
}
