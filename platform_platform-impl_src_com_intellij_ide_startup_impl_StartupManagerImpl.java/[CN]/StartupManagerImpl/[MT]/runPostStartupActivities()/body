{
  final Application app=ApplicationManager.getApplication();
  if (myPostStartupActivitiesPassed)   return;
  runActivities(myDumbAwarePostStartupActivities);
  DumbService.getInstance(myProject).runWhenSmart(new Runnable(){
    public void run(){
synchronized (StartupManagerImpl.this) {
        app.assertIsDispatchThread();
        if (myProject.isDisposed())         return;
        runActivities(myDumbAwarePostStartupActivities);
        runActivities(myNotDumbAwarePostStartupActivities);
        myPostStartupActivitiesPassed=true;
      }
    }
  }
);
  if (!app.isUnitTestMode()) {
    boolean headless=app.isHeadlessEnvironment();
    if (!headless && !myProject.isDisposed())     checkProjectRoots();
    VirtualFileManager.getInstance().refresh(!headless);
  }
  Registry.get("ide.firstStartup").setValue(false);
}
