{
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<modules>"+ "  <module>m</module>"+ "</modules>");
  VirtualFile m=createModulePom("m","<groupId>test</groupId>" + "<artifactId>m</artifactId>" + "<version>1</version>");
  readModel(myProjectPom);
  List<MavenProjectModel.Node> nodes=model.getRootProjects();
  MavenProjectModel.Node parentNode=nodes.get(0);
  MavenProjectModel.Node childNode=nodes.get(0).getSubProjects().get(0);
  updateProjectPom("<groupId>test</groupId>" + "<artifactId>project1</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<modules>"+ "  <module>m</module>"+ "</modules>");
  updateModulePom("m","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>");
  readModel(myProjectPom);
  nodes=model.getRootProjects();
  assertEquals(1,nodes.size());
  assertEquals(1,nodes.get(0).getSubProjects().size());
  MavenProjectModel.Node parentNode1=nodes.get(0);
  MavenProjectModel.Node childNode1=nodes.get(0).getSubProjects().get(0);
  assertSame(parentNode,parentNode1);
  assertSame(childNode,childNode1);
  assertEquals("project1",parentNode1.getMavenProject().getArtifactId());
  assertEquals("m1",childNode1.getMavenProject().getArtifactId());
}
