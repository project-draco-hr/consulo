{
  ArrayList<String> possibleNames=new ArrayList<String>();
  PsiType type=expr.getType();
  if (type != null && !PsiType.VOID.equals(type)) {
    String unboxed=PsiTypesUtil.unboxIfPossible(type.getCanonicalText());
    if (!unboxed.equals(type.getCanonicalText())) {
      String name=generateNameForBuiltInType(unboxed);
      name=validator.validateName(name,true);
      if (GroovyNamesUtil.isIdentifier(name)) {
        possibleNames.add(name);
      }
    }
 else {
      generateByType(expr.getType(),possibleNames,validator);
    }
  }
  generateNameByExpr(expr,possibleNames,validator);
  while (possibleNames.contains("")) {
    possibleNames.remove("");
  }
  if (possibleNames.size() == 0) {
    possibleNames.add(validator.validateName("var",true));
  }
  return possibleNames.toArray(new String[0]);
}
