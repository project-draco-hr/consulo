{
  if (annotateInformation == null) {
    return;
  }
  final int indexOpeningBracket=line.indexOf(SEPARATOR1);
  if (indexOpeningBracket < 0) {
    return;
  }
  final int indexClosingBracket=line.indexOf(SEPARATOR2,indexOpeningBracket + 1);
  if (indexClosingBracket < 0) {
    return;
  }
  final String revision=line.substring(0,indexOpeningBracket).trim();
  final String authorAndDate=line.substring(indexOpeningBracket + SEPARATOR1.length(),indexClosingBracket);
  final String contents=line.substring(indexClosingBracket + SEPARATOR2.length());
  final int lastSpace=authorAndDate.lastIndexOf(' ');
  if (lastSpace < 0) {
    return;
  }
  final String author=authorAndDate.substring(0,lastSpace).trim();
  final String dateString=authorAndDate.substring(lastSpace + 1);
  final Date date;
  try {
    date=DATE_FORMAT.parse(dateString);
  }
 catch (  ParseException ex) {
    BugLog.getInstance().showException(ex);
    return;
  }
  annotateInformation.addLine(new AnnotateLine(revision,author,date,contents));
}
