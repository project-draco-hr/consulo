{
  if (isSelected(content) && requestFocus) {
    return requestFocus(content,forcedFocus);
  }
  if (!checkSelectionChangeShouldBeProcessed(content,implicit)) {
    return new ActionCallback.Rejected();
  }
  if (!myContents.contains(content)) {
    throw new IllegalArgumentException("Cannot find content:" + content.getDisplayName());
  }
  final boolean focused=isSelectionHoldsFocus();
  final Content[] old=getSelectedContents();
  final ActiveRunnable selection=new ActiveRunnable(){
    @NotNull @Override public ActionCallback run(){
      if (myDisposed || getIndexOfContent(content) == -1)       return new ActionCallback.Rejected();
      for (      Content each : old) {
        removeFromSelection(each);
      }
      addSelectedContent(content);
      if (requestFocus) {
        return requestFocus(content,forcedFocus);
      }
      return new ActionCallback.Done();
    }
  }
;
  final ActionCallback result=new ActionCallback();
  boolean enabledFocus=getFocusManager().isFocusTransferEnabled();
  if (focused || requestFocus) {
    if (enabledFocus) {
      return getFocusManager().requestFocus(myFocusProxy,true).doWhenProcessed(new Runnable(){
        @Override public void run(){
          selection.run().notify(result);
        }
      }
);
    }
    return selection.run().notify(result);
  }
 else {
    return selection.run().notify(result);
  }
}
