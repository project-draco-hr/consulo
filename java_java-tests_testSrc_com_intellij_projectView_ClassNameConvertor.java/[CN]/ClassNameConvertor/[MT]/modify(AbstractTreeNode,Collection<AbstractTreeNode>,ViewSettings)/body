{
  ArrayList<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  for (  final AbstractTreeNode aChildren : children) {
    ProjectViewNode treeNode=(ProjectViewNode)aChildren;
    Object o=treeNode.getValue();
    if (o instanceof PsiFile && ((PsiFile)o).getVirtualFile().getExtension().equals("java")) {
      final String name=((PsiFile)o).getName();
      ProjectViewNode viewNode=new ProjectViewNode<PsiFile>(myProject,(PsiFile)o,settings){
        @NotNull public Collection<AbstractTreeNode> getChildren(){
          return Collections.emptyList();
        }
        @Override public String toTestString(        Queryable.PrintInfo printInfo){
          return super.toTestString(printInfo) + " converted";
        }
        public String getTestPresentation(){
          return name + " converted";
        }
        public boolean contains(        @NotNull VirtualFile file){
          return false;
        }
        public void update(        PresentationData presentation){
        }
      }
;
      result.add(viewNode);
    }
 else {
      result.add(treeNode);
    }
  }
  return result;
}
