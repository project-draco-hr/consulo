{
  List<E> arranged=new ArrayList<E>();
  Set<E> unprocessed=new LinkedHashSet<E>(entries);
  for (  ArrangementRule rule : context.rules) {
    for (    E entry : entries) {
      if (entry.canBeMatched() && unprocessed.contains(entry) && rule.getMatcher().isMatched(entry)) {
        arranged.add(entry);
        unprocessed.remove(entry);
      }
    }
  }
  arranged.addAll(unprocessed);
  context.prepare(arranged);
  for (int i=arranged.size() - 1; i >= 0; i--) {
    E arrangedEntry=arranged.get(i);
    E initialEntry=entries.get(i);
    context.replace(initialEntry,arrangedEntry,(E)arrangedEntry.getParent(),i > 0 ? arranged.get(i - 1) : null);
  }
}
