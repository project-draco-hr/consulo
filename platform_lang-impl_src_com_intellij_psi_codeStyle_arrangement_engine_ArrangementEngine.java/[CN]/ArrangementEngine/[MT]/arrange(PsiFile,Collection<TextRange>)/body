{
  final Document document=PsiDocumentManager.getInstance(file.getProject()).getDocument(file);
  if (document == null) {
    return;
  }
  CodeStyleSettings settings=CodeStyleSettingsManager.getInstance(file.getProject()).getCurrentSettings();
  final List<ArrangementRule<?>> arrangementRules=settings.getCommonSettings(file.getLanguage()).getArrangementRules();
  if (arrangementRules.isEmpty()) {
    return;
  }
  Rearranger<?> rearranger=Rearranger.EXTENSION.forLanguage(file.getLanguage());
  if (rearranger == null) {
    return;
  }
  final Collection<? extends ArrangementEntry> entriesToProcess=rearranger.parse(file,document,ranges);
  final DocumentEx documentEx;
  if (document instanceof DocumentEx && !((DocumentEx)document).isInBulkUpdate()) {
    documentEx=(DocumentEx)document;
  }
 else {
    documentEx=null;
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      if (documentEx != null) {
        documentEx.setInBulkUpdate(true);
      }
      try {
        doArrange(document,arrangementRules,entriesToProcess);
      }
  finally {
        if (documentEx != null) {
          documentEx.setInBulkUpdate(false);
        }
      }
    }
  }
);
}
