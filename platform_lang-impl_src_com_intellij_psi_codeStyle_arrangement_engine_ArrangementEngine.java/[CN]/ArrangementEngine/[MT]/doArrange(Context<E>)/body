{
  List<ArrangementEntryWrapper<E>> entries=new ArrayList<ArrangementEntryWrapper<E>>();
  Stack<StackEntry> stack=new Stack<StackEntry>();
  entries.addAll(context.wrappers);
  stack.push(new StackEntry(0,context.wrappers.size()));
  while (!stack.isEmpty()) {
    StackEntry stackEntry=stack.peek();
    if (stackEntry.current >= stackEntry.end) {
      List<ArrangementEntryWrapper<E>> subEntries=entries.subList(stackEntry.start,stackEntry.end);
      doArrange(subEntries,context);
      subEntries.clear();
      stack.pop();
    }
 else {
      ArrangementEntryWrapper<E> wrapper=entries.get(stackEntry.current++);
      List<ArrangementEntryWrapper<E>> children=wrapper.getChildren();
      if (!children.isEmpty()) {
        entries.addAll(children);
        stack.push(new StackEntry(stackEntry.end,children.size()));
      }
    }
  }
}
