{
  int blankLinesBefore=oldWrapper.getBlankLinesBefore();
  ArrangementEntryWrapper<E> parentWrapper=oldWrapper.getParent();
  int desiredBlankLinesNumber=getBlankLines(context,parentWrapper,newWrapper,previous,next);
  if ((desiredBlankLinesNumber < 0 || desiredBlankLinesNumber == blankLinesBefore) && newWrapper.equals(oldWrapper)) {
    return;
  }
  int lineFeedsDiff=desiredBlankLinesNumber - blankLinesBefore;
  int insertionOffset=oldWrapper.getStartOffset();
  if (oldWrapper.getStartOffset() > newWrapper.getStartOffset()) {
    insertionOffset-=newWrapper.getEndOffset() - newWrapper.getStartOffset();
  }
  if (newWrapper.getStartOffset() != oldWrapper.getStartOffset() || !newWrapper.equals(oldWrapper)) {
    context.addMoveInfo(newWrapper.getStartOffset(),newWrapper.getEndOffset(),oldWrapper.getStartOffset());
    myDocument.moveText(newWrapper.getStartOffset(),newWrapper.getEndOffset(),oldWrapper.getStartOffset());
    for (int i=myWrappers.size() - 1; i >= 0; i--) {
      ArrangementEntryWrapper<E> w=myWrappers.get(i);
      if (w == newWrapper) {
        continue;
      }
      if (w.getStartOffset() >= oldWrapper.getStartOffset() && w.getStartOffset() < newWrapper.getStartOffset()) {
        w.applyShift(newWrapper.getEndOffset() - newWrapper.getStartOffset());
      }
 else       if (oldWrapper != w && w.getStartOffset() <= oldWrapper.getStartOffset() && w.getStartOffset() > newWrapper.getStartOffset()) {
        w.applyShift(newWrapper.getStartOffset() - newWrapper.getEndOffset());
      }
    }
  }
  if (desiredBlankLinesNumber >= 0 && lineFeedsDiff > 0) {
    myDocument.insertString(insertionOffset,StringUtil.repeat("\n",lineFeedsDiff));
    shiftOffsets(lineFeedsDiff,insertionOffset);
  }
  if (desiredBlankLinesNumber >= 0 && lineFeedsDiff < 0) {
    int replacementStartOffset=getBlankLineOffset(-lineFeedsDiff,insertionOffset);
    myDocument.deleteString(replacementStartOffset,insertionOffset);
    shiftOffsets(replacementStartOffset - insertionOffset,insertionOffset);
  }
  if (desiredBlankLinesNumber < 0) {
    return;
  }
  updateAllWrapperRanges(parentWrapper,lineFeedsDiff);
}
