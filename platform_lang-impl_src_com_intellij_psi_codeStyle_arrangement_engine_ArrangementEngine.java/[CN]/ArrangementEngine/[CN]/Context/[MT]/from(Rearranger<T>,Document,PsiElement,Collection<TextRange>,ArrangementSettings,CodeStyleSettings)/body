{
  Collection<T> entries=rearranger.parse(root,document,ranges,arrangementSettings);
  Collection<ArrangementEntryWrapper<T>> wrappers=new ArrayList<ArrangementEntryWrapper<T>>();
  ArrangementEntryWrapper<T> previous=null;
  for (  T entry : entries) {
    ArrangementEntryWrapper<T> wrapper=new ArrangementEntryWrapper<T>(entry);
    if (previous != null) {
      previous.setNext(wrapper);
      wrapper.setPrevious(previous);
    }
    wrappers.add(wrapper);
    previous=wrapper;
  }
  Changer changer;
  if (document instanceof DocumentEx) {
    changer=new RangeMarkerAwareChanger<T>((DocumentEx)document);
  }
 else {
    changer=new DefaultChanger();
  }
  final List<? extends ArrangementMatchRule> rulesByPriority=arrangementSettings.getRulesSortedByPriority();
  final List<ArrangementSectionRule> sectionRules=ArrangementUtil.getExtendedSectionRules(arrangementSettings);
  return new Context<T>(rearranger,wrappers,document,sectionRules,rulesByPriority,codeStyleSettings,changer);
}
