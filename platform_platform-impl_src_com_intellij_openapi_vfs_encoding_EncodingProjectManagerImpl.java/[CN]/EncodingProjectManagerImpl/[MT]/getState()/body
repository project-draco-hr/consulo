{
  Element element=new Element("x");
  if (!myMapping.isEmpty()) {
    List<VirtualFile> files=new ArrayList<VirtualFile>(myMapping.keySet());
    ContainerUtil.quickSort(files,new Comparator<VirtualFile>(){
      @Override public int compare(      final VirtualFile o1,      final VirtualFile o2){
        if (o1 == null || o2 == null)         return o1 == null ? o2 == null ? 0 : 1 : -1;
        return o1.getPath().compareTo(o2.getPath());
      }
    }
);
    for (    VirtualFile file : files) {
      Charset charset=myMapping.get(file);
      Element child=new Element("file");
      element.addContent(child);
      child.setAttribute("url",file == null ? PROJECT_URL : file.getUrl());
      child.setAttribute("charset",charset.name());
    }
  }
  if (myOldUTFGuessing != null) {
    element.setAttribute("useUTFGuessing",myOldUTFGuessing);
  }
  if (myNative2AsciiForPropertiesFiles || myNative2AsciiForPropertiesFilesWasSpecified) {
    element.setAttribute("native2AsciiForPropertiesFiles",Boolean.toString(myNative2AsciiForPropertiesFiles));
  }
  if (myDefaultCharsetForPropertiesFiles != null) {
    element.setAttribute("defaultCharsetForPropertiesFiles",myDefaultCharsetForPropertiesFiles.name());
  }
  return element;
}
