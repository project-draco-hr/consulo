{
  myMapping.clear();
  List<Element> files=element.getChildren("file");
  if (!files.isEmpty()) {
    Map<VirtualFile,Charset> mapping=new HashMap<>();
    for (    Element fileElement : files) {
      String url=fileElement.getAttributeValue("url");
      String charsetName=fileElement.getAttributeValue("charset");
      Charset charset=CharsetToolkit.forName(charsetName);
      if (charset == null)       continue;
      if (url.equals(PROJECT_URL)) {
        myProjectCharset=charset;
      }
 else {
        VirtualFile file=VirtualFileManager.getInstance().findFileByUrl(url);
        if (file != null) {
          mapping.put(file,charset);
        }
      }
    }
    myMapping.putAll(mapping);
  }
  String native2AsciiForPropertiesFiles=element.getAttributeValue("native2AsciiForPropertiesFiles");
  myNative2AsciiForPropertiesFiles=Boolean.parseBoolean(native2AsciiForPropertiesFiles);
  myDefaultCharsetForPropertiesFiles=CharsetToolkit.forName(element.getAttributeValue("defaultCharsetForPropertiesFiles"));
  myModificationTracker.incModificationCount();
  if (!myProject.isDefault()) {
    myOldUTFGuessing=element.getAttributeValue("useUTFGuessing");
    myNative2AsciiForPropertiesFilesWasSpecified=native2AsciiForPropertiesFiles != null;
  }
}
