{
  List<Element> files=element.getChildren("file");
  for (  Element fileElement : files) {
    String url=fileElement.getAttributeValue("url");
    String charsetName=fileElement.getAttributeValue("charset");
    Charset charset=CharsetToolkit.forName(charsetName);
    if (charset == null)     continue;
    VirtualFile file=url.equals("PROJECT") ? null : VirtualFileManager.getInstance().findFileByUrl(url);
    if (file != null || url.equals("PROJECT")) {
      myMapping.put(file,charset);
    }
  }
  myUseUTFGuessing=Boolean.parseBoolean(element.getAttributeValue("useUTFGuessing"));
  myNative2AsciiForPropertiesFiles=Boolean.parseBoolean(element.getAttributeValue("native2AsciiForPropertiesFiles"));
  myDefaultCharsetForPropertiesFiles=CharsetToolkit.forName(element.getAttributeValue("defaultCharsetForPropertiesFiles"));
  boolean migrated=myGeneralSettings.migrateCharsetSettingsTo(this);
  migrated|=myEditorSettings.migrateCharsetSettingsTo(this);
  if (migrated) {
    EncodingProjectManager defaultManager=getInstance(ProjectManager.getInstance().getDefaultProject());
    if (defaultManager != null) {
      myGeneralSettings.migrateCharsetSettingsTo(defaultManager);
      myEditorSettings.migrateCharsetSettingsTo(defaultManager);
    }
  }
}
