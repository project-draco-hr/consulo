{
  if (DataConstants.PROJECT.equals(dataId)) {
    return myProject;
  }
  if (DataConstants.NAVIGATABLE.equals(dataId)) {
    final FavoritesTreeNodeDescriptor[] selectedNodeDescriptors=getSelectedNodeDescriptors();
    return selectedNodeDescriptors != null && selectedNodeDescriptors.length == 1 ? selectedNodeDescriptors[0].getElement() : null;
  }
  if (DataConstantsEx.CUT_PROVIDER.equals(dataId)) {
    return myCopyPasteDelegator.getCutProvider();
  }
  if (DataConstantsEx.COPY_PROVIDER.equals(dataId)) {
    return myCopyPasteDelegator.getCopyProvider();
  }
  if (DataConstantsEx.PASTE_PROVIDER.equals(dataId)) {
    return myCopyPasteDelegator.getPasteProvider();
  }
 else   if (DataConstants.HELP_ID.equals(dataId)) {
    return myHelpId;
  }
  if (DataConstants.PSI_ELEMENT.equals(dataId)) {
    final PsiElement psiElement;
    Object[] elements=getSelectedNodeElements();
    if (elements == null || elements.length != 1) {
      return null;
    }
    if (elements[0] instanceof PsiElement) {
      psiElement=(PsiElement)elements[0];
    }
 else     if (elements[0] instanceof PackageElement) {
      psiElement=((PackageElement)elements[0]).getPackage();
    }
 else {
      psiElement=null;
    }
    return psiElement != null && psiElement.isValid() ? psiElement : null;
  }
  if (DataConstantsEx.PSI_ELEMENT_ARRAY.equals(dataId)) {
    final PsiElement[] elements=getSelectedPsiElements();
    if (elements == null) {
      return null;
    }
    ArrayList<PsiElement> result=new ArrayList<PsiElement>();
    for (int i=0; i < elements.length; i++) {
      PsiElement element=elements[i];
      if (element.isValid()) {
        result.add(element);
      }
    }
    return result.toArray(new PsiElement[result.size()]);
  }
  if (DataConstantsEx.TARGET_PSI_ELEMENT.equals(dataId)) {
    return null;
  }
  if (DataConstantsEx.MODULE_CONTEXT.equals(dataId)) {
    Module[] selected=getSelectedModules();
    return selected != null && selected.length == 1 ? selected[0] : null;
  }
  if (DataConstantsEx.MODULE_CONTEXT_ARRAY.equals(dataId)) {
    return getSelectedModules();
  }
  if (DataConstantsEx.DELETE_ELEMENT_PROVIDER.equals(dataId)) {
    final Object[] elements=getSelectedNodeElements();
    return elements != null && elements.length >= 1 && elements[0] instanceof Module ? (DeleteProvider)myDeleteModuleProvider : myDeletePSIElementProvider;
  }
  if (DataConstantsEx.MODULE_GROUP_ARRAY.equals(dataId)) {
    final List<ModuleGroup> selectedElements=getSelectedElements(ModuleGroup.class);
    return selectedElements.isEmpty() ? null : selectedElements.toArray(new ModuleGroup[selectedElements.size()]);
  }
  if (DataConstantsEx.GUI_DESIGNER_FORM_ARRAY.equals(dataId)) {
    final List<Form> selectedElements=getSelectedElements(Form.class);
    return selectedElements.isEmpty() ? null : selectedElements.toArray(new Form[selectedElements.size()]);
  }
  if (DataConstantsEx.LIBRARY_GROUP_ARRAY.equals(dataId)) {
    final List<LibraryGroupElement> selectedElements=getSelectedElements(LibraryGroupElement.class);
    return selectedElements.isEmpty() ? null : selectedElements.toArray(new LibraryGroupElement[selectedElements.size()]);
  }
  if (DataConstantsEx.NAMED_LIBRARY_ARRAY.equals(dataId)) {
    final List<NamedLibraryElement> selectedElements=getSelectedElements(NamedLibraryElement.class);
    return selectedElements.isEmpty() ? null : selectedElements.toArray(new NamedLibraryElement[selectedElements.size()]);
  }
  return null;
}
