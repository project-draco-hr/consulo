{
  final DefaultActionGroup group=new DefaultActionGroup();
  group.removeAll();
  group.add(new ToggleAction(IdeBundle.message("action.flatten.packages"),IdeBundle.message("action.flatten.packages"),Icons.FLATTEN_PACKAGES_ICON){
    public boolean isSelected(    AnActionEvent e){
      return myFavoritesConfiguration.IS_FLATTEN_PACKAGES;
    }
    public void setSelected(    AnActionEvent event,    boolean flag){
      final SelectionInfo selectionInfo=new SelectionInfo();
      myFavoritesConfiguration.IS_FLATTEN_PACKAGES=flag;
      myBuilder.updateTree();
      selectionInfo.apply();
    }
  }
);
  group.add(new ToggleAction(""){
    public boolean isSelected(    AnActionEvent e){
      return myFavoritesConfiguration.IS_HIDE_EMPTY_MIDDLE_PACKAGES;
    }
    public void setSelected(    AnActionEvent event,    boolean flag){
      final SelectionInfo selectionInfo=new SelectionInfo();
      myFavoritesConfiguration.IS_HIDE_EMPTY_MIDDLE_PACKAGES=flag;
      myBuilder.updateTree();
      selectionInfo.apply();
    }
    public void update(    AnActionEvent e){
      super.update(e);
      final Presentation presentation=e.getPresentation();
      if (myFavoritesConfiguration.IS_FLATTEN_PACKAGES) {
        presentation.setText(IdeBundle.message("action.hide.empty.middle.packages"));
        presentation.setDescription(IdeBundle.message("action.show.hide.empty.middle.packages"));
        presentation.setIcon(HIDE_EMPTY_MIDDLE_PACKAGES_ICON);
      }
 else {
        presentation.setText(IdeBundle.message("action.compact.empty.middle.packages"));
        presentation.setDescription(IdeBundle.message("action.show.compact.empty.middle.packages"));
        presentation.setIcon(COMPACT_EMPTY_MIDDLE_PACKAGES_ICON);
      }
    }
  }
);
  group.add(new ToggleAction(IdeBundle.message("action.abbreviate.qualified.package.names"),IdeBundle.message("action.abbreviate.qualified.package.names"),IconLoader.getIcon("/objectBrowser/abbreviatePackageNames.png")){
    public boolean isSelected(    AnActionEvent e){
      return myFavoritesConfiguration.IS_ABBREVIATION_PACKAGE_NAMES;
    }
    public void setSelected(    AnActionEvent e,    boolean state){
      myFavoritesConfiguration.IS_ABBREVIATION_PACKAGE_NAMES=state;
      myBuilder.updateTree();
    }
    public void update(    final AnActionEvent e){
      super.update(e);
      e.getPresentation().setEnabled(myFavoritesConfiguration.IS_FLATTEN_PACKAGES);
    }
  }
);
  group.add(new ToggleAction(IdeBundle.message("action.show.members"),IdeBundle.message("action.show.hide.members"),IconLoader.getIcon("/objectBrowser/showMembers.png")){
    public boolean isSelected(    AnActionEvent e){
      return myFavoritesConfiguration.IS_SHOW_MEMBERS;
    }
    public void setSelected(    AnActionEvent e,    boolean state){
      SelectionInfo selectionInfo=new SelectionInfo();
      myFavoritesConfiguration.IS_SHOW_MEMBERS=state;
      myBuilder.updateTree();
      selectionInfo.apply();
    }
  }
);
  group.add(myAutoScrollToSourceHandler.createToggleAction());
  group.add(ActionManager.getInstance().getAction(IdeActions.REMOVE_FROM_FAVORITES));
  return ActionManager.getInstance().createActionToolbar(ActionPlaces.FAVORITES_VIEW_TOOLBAR,group,true).getComponent();
}
