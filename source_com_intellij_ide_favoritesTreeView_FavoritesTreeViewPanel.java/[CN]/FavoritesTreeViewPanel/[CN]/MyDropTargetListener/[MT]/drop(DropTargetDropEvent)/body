{
  if (myDraggableObject != null) {
    int dropAction=dtde.getDropAction();
    if ((dropAction & DnDConstants.ACTION_MOVE) != 0) {
      final Collection<AbstractTreeNode> children=myFavoritesTreeStructure.getFavorites();
      for (      AbstractTreeNode abstractTreeNode : children) {
        Object value=abstractTreeNode.getValue();
        if (value instanceof SmartPsiElementPointer) {
          value=((SmartPsiElementPointer)value).getElement();
        }
        if (Comparing.equal(value,myDraggableObject)) {
          return;
        }
      }
      try {
        if (myKlass == FormNode.class) {
          final PsiManager psiManager=PsiManager.getInstance(myProject);
          addToFavorites(FormNode.constructFormNode(psiManager,(PsiClass)myDraggableObject,myProject,myFavoritesConfiguration));
        }
 else {
          addToFavorites(ProjectViewNode.createTreeNode(myKlass,myProject,myDraggableObject,myFavoritesConfiguration));
        }
      }
 catch (      Exception e) {
        return;
      }
      dtde.dropComplete(true);
      return;
    }
  }
  dtde.rejectDrop();
}
