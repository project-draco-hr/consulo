{
  if (getRepositoryId() >= 0)   return false;
  try {
    String signature=getSignatureAttribute();
    if (signature == null)     return false;
    CharacterIterator iterator=new StringCharacterIterator(signature,0);
    myTypeParameters=GenericSignatureParsing.parseTypeParametersDeclaration(iterator,this,signature);
    if (iterator.current() != '(')     return false;
    iterator.next();
    ArrayList<String> types=new ArrayList<String>();
    while (iterator.current() != ')') {
      types.add(GenericSignatureParsing.parseTypeString(iterator));
    }
    patchVarargs(types);
    myParameterList=createParameters(types);
    iterator.next();
    myReturnType=new ClsTypeElementImpl(this,GenericSignatureParsing.parseTypeString(iterator),ClsTypeElementImpl.VARIANCE_NONE);
    if (iterator.current() == '^') {
      iterator.next();
      myThrowsList=new ClsReferenceListImpl(this,"throws");
      PsiJavaCodeReferenceElement[] refs=GenericSignatureParsing.parseToplevelClassRefSignatures(iterator,myThrowsList);
      ((ClsReferenceListImpl)myThrowsList).setReferences(refs);
    }
    return true;
  }
 catch (  ClsFormatException e) {
    return false;
  }
}
