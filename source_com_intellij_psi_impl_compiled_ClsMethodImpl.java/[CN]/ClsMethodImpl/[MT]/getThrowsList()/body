{
synchronized (PsiLock.LOCK) {
    if (myThrowsList == null) {
      long repositoryId=getRepositoryId();
      if (repositoryId < 0) {
        parseViaGenericSignature();
        if (myThrowsList == null) {
          try {
            ClassFileData classFileData=myParent.getClassFileData();
            BytePointer ptr=classFileData.findAttribute(myStartOffset + 6,"Exceptions");
            if (ptr != null) {
              ptr.offset+=4;
              int exceptionCount=ClsUtil.readU2(ptr);
              ClsJavaCodeReferenceElementImpl[] refs=new ClsJavaCodeReferenceElementImpl[exceptionCount];
              int jj=0;
              for (int j=0; j < exceptionCount; j++) {
                int index=ClsUtil.readU2(ptr);
                if (index != 0) {
                  refs[jj++]=classFileData.buildReference(index);
                }
              }
              if (jj < exceptionCount) {
                ClsJavaCodeReferenceElementImpl[] refs1=new ClsJavaCodeReferenceElementImpl[jj];
                System.arraycopy(refs,0,refs1,0,jj);
                refs=refs1;
              }
              myThrowsList=new ClsReferenceListImpl(this,refs,PsiKeyword.THROWS);
              for (              ClsJavaCodeReferenceElementImpl ref : refs) {
                ref.setParent(myThrowsList);
              }
            }
          }
 catch (          ClsFormatException e) {
          }
          if (myThrowsList == null) {
            myThrowsList=new ClsReferenceListImpl(this,new ClsJavaCodeReferenceElementImpl[0],PsiKeyword.THROWS);
          }
        }
      }
 else {
        MethodView methodView=getRepositoryManager().getMethodView();
        String[] refTexts=methodView.getThrowsList(repositoryId);
        ClsJavaCodeReferenceElementImpl[] refs=new ClsJavaCodeReferenceElementImpl[refTexts.length];
        for (int i=0; i < refTexts.length; i++) {
          refs[i]=new ClsJavaCodeReferenceElementImpl(null,refTexts[i]);
        }
        myThrowsList=new ClsReferenceListImpl(this,refs,PsiKeyword.THROWS);
        for (        ClsJavaCodeReferenceElementImpl ref : refs) {
          ref.setParent(myThrowsList);
        }
      }
    }
  }
  return myThrowsList;
}
