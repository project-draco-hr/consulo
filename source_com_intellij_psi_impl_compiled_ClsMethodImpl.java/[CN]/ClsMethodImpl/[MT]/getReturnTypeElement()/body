{
  if (isConstructor())   return null;
synchronized (PsiLock.LOCK) {
    if (myReturnType == null) {
      long repositoryId=getRepositoryId();
      if (repositoryId < 0) {
        if (!parseViaGenericSignature()) {
          try {
            ClassFileData classFileData=myParent.getClassFileData();
            byte[] data=classFileData.getData();
            int offset=myStartOffset + 4;
            int b1=data[offset++] & 0xFF;
            int b2=data[offset++] & 0xFF;
            int index=(b1 << 8) + b2;
            offset=classFileData.getOffsetInConstantPool(index);
            offset+=3;
            while (true) {
              if (offset >= data.length) {
                throw new ClsFormatException();
              }
              if (data[offset++] == ')')               break;
            }
            String typeText=ClsUtil.getTypeText(data,offset);
            myReturnType=new ClsTypeElementImpl(this,typeText,ClsTypeElementImpl.VARIANCE_NONE);
          }
 catch (          ClsFormatException e) {
            myReturnType=null;
          }
        }
      }
 else {
        String typeText=getRepositoryManager().getMethodView().getReturnTypeText(repositoryId);
        myReturnType=new ClsTypeElementImpl(this,typeText,ClsTypeElementImpl.VARIANCE_NONE);
      }
    }
  }
  return myReturnType;
}
