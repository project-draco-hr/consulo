{
  if (!processMostProbableInheritors(parameters,expectedClassTypes,consumer))   return;
  for (  final PsiClassType type : expectedClassTypes) {
    final PsiClass psiClass=type.resolve();
    if (psiClass != null && !psiClass.hasModifierProperty(PsiModifier.FINAL)) {
      CodeInsightUtil.processSubTypes(type,parameters.getPosition(),false,matcher,consumer);
    }
  }
}
