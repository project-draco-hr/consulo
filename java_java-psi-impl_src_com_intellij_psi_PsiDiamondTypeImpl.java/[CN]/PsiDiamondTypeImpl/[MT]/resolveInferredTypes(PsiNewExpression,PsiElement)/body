{
  final PsiAnonymousClass anonymousClass=newExpression.getAnonymousClass();
  if (anonymousClass != null) {
    final PsiElement resolve=anonymousClass.getBaseClassReference().resolve();
    if (resolve instanceof PsiClass) {
      return PsiDiamondTypeImpl.DiamondInferenceResult.ANONYMOUS_INNER_RESULT;
    }
  }
  final PsiReferenceParameterList referenceParameterList=PsiTreeUtil.getChildOfType(newExpression,PsiReferenceParameterList.class);
  if (referenceParameterList != null && referenceParameterList.getTypeParameterElements().length > 0) {
    return DiamondInferenceResult.EXPLICIT_CONSTRUCTOR_TYPE_ARGS;
  }
  return resolveInferredTypesNoCheck(newExpression,context);
}
