{
  ExternalSystemNode<ExternalProjectPojo> topLevelProjectNode=ensureProjectNodeExists(topLevelProject);
  Map<String,ExternalProjectPojo> toAdd=ContainerUtilRt.newHashMap();
  for (  ExternalProjectPojo subProject : subProjects) {
    toAdd.put(subProject.getPath(),subProject);
  }
  toAdd.remove(topLevelProject.getPath());
  final TObjectIntHashMap<Object> taskWeights=new TObjectIntHashMap<Object>();
  for (int i=0; i < topLevelProjectNode.getChildCount(); i++) {
    ExternalSystemNode<?> child=topLevelProjectNode.getChildAt(i);
    Object childElement=child.getDescriptor().getElement();
    if (childElement instanceof ExternalTaskExecutionInfo) {
      taskWeights.put(childElement,subProjects.size() + i);
      continue;
    }
    if (toAdd.remove(((ExternalProjectPojo)childElement).getPath()) == null) {
      topLevelProjectNode.remove(child);
      myIndexHolder[0]=i;
      myNodeHolder[0]=child;
      nodesWereRemoved(topLevelProjectNode,myIndexHolder,myNodeHolder);
      i--;
    }
  }
  if (!toAdd.isEmpty()) {
    for (    Map.Entry<String,ExternalProjectPojo> entry : toAdd.entrySet()) {
      ExternalProjectPojo element=new ExternalProjectPojo(entry.getValue().getName(),entry.getValue().getPath());
      topLevelProjectNode.add(new ExternalSystemNode<ExternalProjectPojo>(descriptor(element,myUiAware.getProjectIcon())));
      myIndexHolder[0]=topLevelProjectNode.getChildCount() - 1;
      nodesWereInserted(topLevelProjectNode,myIndexHolder);
    }
  }
  ExternalSystemUiUtil.sort(topLevelProjectNode,this,NODE_COMPARATOR);
}
