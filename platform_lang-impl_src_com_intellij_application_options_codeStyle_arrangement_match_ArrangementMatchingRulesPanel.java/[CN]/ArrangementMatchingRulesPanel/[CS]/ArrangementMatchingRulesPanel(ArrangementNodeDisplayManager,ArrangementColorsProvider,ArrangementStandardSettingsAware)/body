{
  super(new GridBagLayout());
  TitleWithToolbar top=new TitleWithToolbar(ApplicationBundle.message("arrangement.settings.section.match"),ArrangementConstants.ACTION_GROUP_RULE_EDITOR_TOOLBAR,ArrangementConstants.RULE_EDITOR_TOOLBAR_PLACE);
  JBScrollPane scrollPane=new JBScrollPane();
  final JViewport viewport=scrollPane.getViewport();
  ArrangementMatchingRulesControl.RepresentationCallback callback=new ArrangementMatchingRulesControl.RepresentationCallback(){
    @Override public void ensureVisible(    @NotNull Rectangle r){
      Rectangle visibleRect=viewport.getViewRect();
      if (r.y <= visibleRect.y) {
        return;
      }
      int excessiveHeight=r.y + r.height - (visibleRect.y + visibleRect.height);
      if (excessiveHeight <= 0) {
        return;
      }
      int verticalShift=Math.min(r.y - visibleRect.y,excessiveHeight);
      if (verticalShift > 0) {
        viewport.setViewPosition(new Point(visibleRect.x,visibleRect.y + verticalShift));
      }
    }
  }
;
  myControl=new ArrangementMatchingRulesControl(displayManager,colorsProvider,settingsFilter,callback);
  scrollPane.setViewportView(myControl);
  add(top,new GridBag().coverLine().fillCellHorizontally().weightx(1));
  add(scrollPane,new GridBag().fillCell().weightx(1).weighty(1));
}
