{
  double inset=0;
  double selectedInset=-4;
  Set<Area> shapes=new HashSet<Area>();
  Area selected=null;
  for (  SwitchTarget each : myTargets) {
    RelativeRectangle eachSimpleRec=each.getRectangle();
    if (eachSimpleRec == null)     continue;
    Rectangle eachRec=eachSimpleRec.getRectangleOn(myRoot);
    Shape eachShape;
    if (each.equals(mySelection)) {
      eachShape=new RoundRectangle2D.Double(eachRec.getX() + selectedInset,eachRec.getY() + selectedInset,eachRec.width - selectedInset - selectedInset,eachRec.height - selectedInset - selectedInset,6,6);
      selected=new Area(eachShape);
    }
 else {
      eachShape=new RoundRectangle2D.Double(eachRec.getX() + inset,eachRec.getY() + inset,eachRec.width - inset - inset,eachRec.height - inset - inset,6,6);
    }
    shapes.add(new Area(eachShape));
    myArea.subtract(new Area(eachShape));
  }
  g.setColor(new Color(0f,0f,0f,0.15f));
  g.fill(myArea);
  for (  Shape each : shapes) {
    if (each.equals(selected)) {
      g.setColor(Color.gray);
    }
 else {
      g.setColor(Color.lightGray);
    }
    g.draw(each);
  }
}
