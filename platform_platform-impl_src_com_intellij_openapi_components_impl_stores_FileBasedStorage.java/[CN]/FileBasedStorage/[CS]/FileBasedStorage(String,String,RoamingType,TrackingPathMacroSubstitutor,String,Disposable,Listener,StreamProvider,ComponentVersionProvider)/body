{
  super(fileSpec,roamingType,pathMacroManager,rootElementName,streamProvider,componentVersionProvider);
  myFilePath=filePath;
  myFile=new File(filePath);
  if (listener != null) {
    VirtualFileTracker virtualFileTracker=ServiceManager.getService(VirtualFileTracker.class);
    if (virtualFileTracker != null) {
      virtualFileTracker.addTracker(LocalFileSystem.PROTOCOL_PREFIX + myFile.getAbsolutePath().replace(File.separatorChar,'/'),new VirtualFileAdapter(){
        @Override public void fileMoved(        @NotNull VirtualFileMoveEvent event){
          myCachedVirtualFile=null;
        }
        @Override public void fileDeleted(        @NotNull VirtualFileEvent event){
          myCachedVirtualFile=null;
        }
        @Override public void fileCreated(        @NotNull VirtualFileEvent event){
          myCachedVirtualFile=event.getFile();
        }
        @Override public void contentsChanged(        @NotNull final VirtualFileEvent event){
          listener.storageFileChanged(event,FileBasedStorage.this);
        }
      }
,false,parentDisposable);
    }
  }
}
