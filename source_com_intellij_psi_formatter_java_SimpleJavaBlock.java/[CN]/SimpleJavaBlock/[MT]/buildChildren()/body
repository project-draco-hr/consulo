{
  ChameleonTransforming.transformChildren(myNode);
  ASTNode child=myNode.getFirstChildNode();
  final ArrayList<Block> result=new ArrayList<Block>();
  Indent indent=null;
  while (child != null) {
    if (ElementType.COMMENT_BIT_SET.isInSet(child.getElementType()) || child.getElementType() == JavaDocElementType.DOC_COMMENT) {
      result.add(createJavaBlock(child,mySettings,Indent.getNoneIndent(),null,null));
      indent=Indent.getNoneIndent();
    }
 else     if (!FormatterUtil.containsWhiteSpacesOnly(child)) {
      break;
    }
    child=child.getTreeNext();
  }
  Alignment childAlignment=createChildAlignment();
  Wrap childWrap=createChildWrap();
  while (child != null) {
    if (!FormatterUtil.containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {
      child=processChild(result,child,childAlignment,childWrap,indent);
      if (indent != null && !(myNode.getPsi() instanceof PsiFile) && child.getElementType() != ElementType.MODIFIER_LIST) {
        indent=Indent.getContinuationIndent();
      }
    }
    if (child != null) {
      child=child.getTreeNext();
    }
  }
  return result;
}
