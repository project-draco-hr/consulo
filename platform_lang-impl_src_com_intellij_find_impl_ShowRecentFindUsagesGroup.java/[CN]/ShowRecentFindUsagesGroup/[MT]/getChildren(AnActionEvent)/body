{
  if (e == null)   return EMPTY_ARRAY;
  Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null)   return EMPTY_ARRAY;
  final FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(project)).getFindUsagesManager();
  List<FindUsagesManager.SearchData> history=new ArrayList<FindUsagesManager.SearchData>(findUsagesManager.getFindUsageHistory());
  Collections.reverse(history);
  String description=ActionManager.getInstance().getAction(UsageViewImpl.SHOW_RECENT_FIND_USAGES_ACTION_ID).getTemplatePresentation().getDescription();
  List<AnAction> children=new ArrayList<AnAction>(history.size());
  for (  final FindUsagesManager.SearchData data : history) {
    if (data.myElements == null) {
      continue;
    }
    PsiElement psiElement=data.myElements[0].getElement();
    if (psiElement == null)     continue;
    String scopeString=data.myOptions.searchScope == null ? null : data.myOptions.searchScope.getDisplayName();
    String text=FindBundle.message("recent.find.usages.action.popup",StringUtil.capitalize(UsageViewUtil.getType(psiElement)),UsageViewUtil.getDescriptiveName(psiElement),scopeString == null ? ProjectScope.getAllScope(psiElement.getProject()).getDisplayName() : scopeString);
    AnAction action=new AnAction(text,description,psiElement.getIcon(0)){
      @Override public void actionPerformed(      final AnActionEvent e){
        findUsagesManager.rerunAndRecallFromHistory(data);
      }
    }
;
    children.add(action);
  }
  return children.toArray(new AnAction[children.size()]);
}
