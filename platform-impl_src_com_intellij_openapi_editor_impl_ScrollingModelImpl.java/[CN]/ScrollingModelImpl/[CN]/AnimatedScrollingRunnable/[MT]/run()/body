{
  long startTime=System.currentTimeMillis();
  ScrollLoop:   for (int i=0; i < myStepCount; i++) {
synchronized (myAnimatedLock) {
      if (myCanceled)       return;
      double time=(i + 1) / (double)myStepCount;
      double fraction=timeToFraction(time);
      final int hOffset=(int)(myStartHOffset + (myEndHOffset - myStartHOffset) * fraction + 0.5);
      final int vOffset=(int)(myStartVOffset + (myEndVOffset - myStartVOffset) * fraction + 0.5);
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          if (myCanceled)           return;
          _scrollHorizontally(hOffset);
          _scrollVertically(vOffset);
        }
      }
,myModalityState);
    }
    long delay;
    while (true) {
      long nextStopTime=startTime + i * SCROLL_INTERVAL;
      long currentTime=System.currentTimeMillis();
      delay=nextStopTime - currentTime;
      if (delay >= 0)       break;
      if (++i == myStepCount)       break ScrollLoop;
    }
    try {
      Thread.sleep(delay);
    }
 catch (    InterruptedException e) {
    }
  }
synchronized (myAnimatedLock) {
    if (myCanceled)     return;
    finish(true,true);
  }
}
