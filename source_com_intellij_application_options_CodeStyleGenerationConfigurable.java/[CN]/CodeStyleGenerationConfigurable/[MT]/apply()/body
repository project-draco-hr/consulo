{
  mySettings.PREFER_LONGER_NAMES=myCbPreferLongerNames.isSelected();
  mySettings.FIELD_NAME_PREFIX=myFieldPrefixField.getText().trim();
  mySettings.STATIC_FIELD_NAME_PREFIX=myStaticFieldPrefixField.getText().trim();
  mySettings.PARAMETER_NAME_PREFIX=myParameterPrefixField.getText().trim();
  mySettings.LOCAL_VARIABLE_NAME_PREFIX=myLocalVariablePrefixField.getText().trim();
  mySettings.FIELD_NAME_SUFFIX=myFieldSuffixField.getText().trim();
  mySettings.STATIC_FIELD_NAME_SUFFIX=myStaticFieldSuffixField.getText().trim();
  mySettings.PARAMETER_NAME_SUFFIX=myParameterSuffixField.getText().trim();
  mySettings.LOCAL_VARIABLE_NAME_SUFFIX=myLocalVariableSuffixField.getText().trim();
  mySettings.LINE_COMMENT_AT_FIRST_COLUMN=myCbLineCommentAtFirstColumn.isSelected();
  mySettings.BLOCK_COMMENT_AT_FIRST_COLUMN=myCbBlockCommentAtFirstColumn.isSelected();
  mySettings.GENERATE_FINAL_LOCALS=myCbGenerateFinalLocals.isSelected();
  mySettings.GENERATE_FINAL_PARAMETERS=myCbGenerateFinalParameters.isSelected();
  mySettings.USE_EXTERNAL_ANNOTATIONS=myCbUseExternalAnnotations.isSelected();
  mySettings.INSERT_OVERRIDE_ANNOTATION=myInsertOverrideAnnotationCheckBox.isSelected();
  myMembersOrderList.apply(mySettings);
  for (  Project project : ProjectManager.getInstance().getOpenProjects()) {
    DaemonCodeAnalyzer.getInstance(project).settingsChanged();
  }
}
