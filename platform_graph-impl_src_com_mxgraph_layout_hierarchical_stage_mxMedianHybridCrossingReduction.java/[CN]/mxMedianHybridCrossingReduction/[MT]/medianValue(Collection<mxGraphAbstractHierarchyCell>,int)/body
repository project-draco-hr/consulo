{
  double[] medianValues=new double[connectedCells.size()];
  int arrayCount=0;
  Iterator<mxGraphAbstractHierarchyCell> iter=connectedCells.iterator();
  while (iter.hasNext()) {
    medianValues[arrayCount++]=(iter.next()).getGeneralPurposeVariable(rankValue);
  }
  Arrays.sort(medianValues);
  if (arrayCount % 2 == 1) {
    return medianValues[arrayCount / 2];
  }
 else   if (arrayCount == 2) {
    return ((medianValues[0] + medianValues[1]) / 2.0);
  }
 else {
    int medianPoint=arrayCount / 2;
    double leftMedian=medianValues[medianPoint - 1] - medianValues[0];
    double rightMedian=medianValues[arrayCount - 1] - medianValues[medianPoint];
    return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);
  }
}
