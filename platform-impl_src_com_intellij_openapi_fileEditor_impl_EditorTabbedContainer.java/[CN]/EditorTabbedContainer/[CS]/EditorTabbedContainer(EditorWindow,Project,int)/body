{
  myWindow=window;
  myProject=project;
  final ActionManager actionManager=ActionManager.getInstance();
  myTabs=new JBTabsImpl(project,actionManager,IdeFocusManager.getInstance(project),project);
  myTabs.setDataProvider(new DataProvider(){
    public Object getData(    @NonNls final String dataId){
      if (DataConstants.VIRTUAL_FILE.equals(dataId)) {
        return myWindow.getSelectedFile();
      }
      if (DataConstantsEx.EDITOR_WINDOW.equals(dataId)) {
        return myWindow;
      }
      if (DataConstants.HELP_ID.equals(dataId)) {
        return HELP_ID;
      }
      return null;
    }
  }
).setPopupGroup(new Getter<ActionGroup>(){
    public ActionGroup get(){
      return (ActionGroup)CustomizableActionsSchemas.getInstance().getCorrectedAction(IdeActions.GROUP_EDITOR_POPUP);
    }
  }
,ActionPlaces.EDITOR_POPUP).addTabMouseListener(new MouseAdapter(){
    public void mousePressed(    final MouseEvent e){
      if (UIUtil.isCloseClick(e)) {
        final TabInfo info=myTabs.findInfo(e);
        if (info != null) {
          myWindow.closeFile((VirtualFile)info.getObject());
        }
      }
    }
  }
).setUiDecorator(new JBTabs.UiDecorator(){
    @NotNull public JBTabs.UiDecoration getDecoration(){
      return new JBTabs.UiDecoration(null,new Insets(1,6,1,6));
    }
  }
);
  updateTabBorder();
  ((ToolWindowManagerEx)ToolWindowManager.getInstance(myProject)).addToolWindowManagerListener(new ToolWindowManagerAdapter(){
    public void stateChanged(){
      updateTabBorder();
    }
    public void toolWindowRegistered(    final String id){
      updateTabBorder();
    }
  }
);
}
