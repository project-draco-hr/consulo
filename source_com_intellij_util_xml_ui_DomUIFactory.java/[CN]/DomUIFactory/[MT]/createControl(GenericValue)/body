{
  try {
    Type type=DomUtil.extractParameterClassFromGenericType(element.getDomElementType());
    final Method getValueMethod=GenericValue.class.getMethod("getValue");
    final Method setValueMethod=findMethod(GenericValue.class,"setValue");
    final Method getStringMethod=GenericValue.class.getMethod("getStringValue");
    final Method setStringMethod=findMethod(GenericValue.class,"setStringValue");
    if (type.equals(boolean.class) || type.equals(Boolean.class)) {
      return new BooleanControl(element,getValueMethod,setValueMethod);
    }
 else     if (type.equals(String.class)) {
      return new StringControl(element,getValueMethod,setValueMethod);
    }
 else     if (type.equals(PsiClass.class)) {
      return new PsiClassControl(element,getStringMethod,setStringMethod);
    }
 else     if (type instanceof Class && Enum.class.isAssignableFrom((Class)type)) {
      return new EnumControl(element,(Class)type,getStringMethod,setStringMethod);
    }
    throw new IllegalArgumentException("Not supported: " + type);
  }
 catch (  NoSuchMethodException e) {
    throw new RuntimeException(e);
  }
}
