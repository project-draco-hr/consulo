{
  if (elements.length != 1)   return;
  myProject=project;
  PsiClass subClass=(PsiClass)elements[0];
  ArrayList basesList=RefactoringHierarchyUtil.createBasesList(subClass,true,true);
  if (basesList.isEmpty()) {
    String message="Cannot perform the refactoring.\n" + "Interface " + subClass.getQualifiedName() + " does not have base interfaces.";
    RefactoringMessageUtil.showErrorMessage(REFACTORING_NAME,message,null,project);
    return;
  }
  TurnRefsToSuperDialog dialog=new TurnRefsToSuperDialog(myProject,subClass,basesList);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  new TurnRefsToSuperProcessor(myProject,subClass,dialog.getSuperClass(),dialog.isUseInInstanceOf()).run(null);
}
