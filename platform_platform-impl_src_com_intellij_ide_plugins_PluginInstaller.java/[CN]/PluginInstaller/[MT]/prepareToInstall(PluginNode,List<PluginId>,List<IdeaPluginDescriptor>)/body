{
  Set<PluginNode> depends=new ArrayListSet<PluginNode>();
  collectDepends(toInstall,toInstallAll,depends,allPlugins);
  Set<PluginNode> toDownloadList=new ArrayListSet<PluginNode>();
  if (!depends.isEmpty()) {
    UIUtil.invokeAndWaitIfNeeded(new Runnable(){
      @Override public void run(){
        String mergedIds=StringUtil.join(depends,new Function<PluginNode,String>(){
          @Override public String fun(          PluginNode pluginNode){
            return pluginNode.getName();
          }
        }
,", ");
        String title=IdeBundle.message("plugin.manager.dependencies.detected.title");
        String message=IdeBundle.message("plugin.manager.dependencies.detected.message",depends.size(),mergedIds);
        if (Messages.showYesNoDialog(message,title,Messages.getWarningIcon()) == Messages.YES) {
          toDownloadList.addAll(depends);
        }
      }
    }
);
  }
  toDownloadList.add(toInstall);
  for (  PluginNode pluginNode : toDownloadList) {
    PluginDownloader downloader=PluginDownloader.createDownloader(pluginNode);
    if (downloader.prepareToInstall(ProgressManager.getInstance().getProgressIndicator())) {
      downloader.install(true);
      pluginNode.setStatus(PluginNode.STATUS_DOWNLOADED);
    }
 else {
      return null;
    }
  }
  return toDownloadList;
}
