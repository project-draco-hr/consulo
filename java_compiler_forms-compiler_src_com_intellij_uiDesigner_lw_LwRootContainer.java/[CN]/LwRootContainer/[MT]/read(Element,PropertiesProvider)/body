{
  if (element == null) {
    throw new IllegalArgumentException("element cannot be null");
  }
  if (!Utils.FORM_NAMESPACE.equals(element.getNamespace().getURI())) {
    throw new AlienFormFileException();
  }
  if (!"form".equals(element.getName())) {
    throw new UnexpectedFormElementException("unexpected element: " + element);
  }
  setId("root");
  myClassToBind=element.getAttributeValue(UIFormXmlConstants.ATTRIBUTE_BIND_TO_CLASS);
  for (Iterator i=element.getChildren().iterator(); i.hasNext(); ) {
    final Element child=(Element)i.next();
    if (child.getName().equals(UIFormXmlConstants.ELEMENT_BUTTON_GROUPS)) {
      readButtonGroups(child);
    }
 else     if (child.getName().equals(UIFormXmlConstants.ELEMENT_INSPECTION_SUPPRESSIONS)) {
      readInspectionSuppressions(child);
    }
 else {
      final LwComponent component=createComponentFromTag(child);
      addComponent(component);
      component.read(child,provider);
    }
  }
  myMainComponentBinding=element.getAttributeValue("stored-main-component-binding");
}
