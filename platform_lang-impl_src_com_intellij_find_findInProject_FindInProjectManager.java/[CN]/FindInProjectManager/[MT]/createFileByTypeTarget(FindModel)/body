{
  final String filter=model.getFileFilter();
  return new UsageTarget(){
    @Override public void findUsages(){
      throw new IncorrectOperationException();
    }
    @Override public void findUsagesInEditor(    @NotNull FileEditor editor){
      throw new IncorrectOperationException();
    }
    @Override public void highlightUsages(    @NotNull PsiFile file,    @NotNull Editor editor,    boolean clearHighlights){
      throw new IncorrectOperationException();
    }
    @Override public boolean isValid(){
      return true;
    }
    @Override public boolean isReadOnly(){
      return false;
    }
    @Nullable @Override public VirtualFile[] getFiles(){
      return VirtualFile.EMPTY_ARRAY;
    }
    @Override public void update(){
    }
    @Nullable @Override public String getName(){
      return "Files with mask \"" + filter + "\"";
    }
    @Nullable @Override public ItemPresentation getPresentation(){
      return new ItemPresentation(){
        @Nullable @Override public String getPresentableText(){
          return getName();
        }
        @Nullable @Override public String getLocationString(){
          return null;
        }
        @Nullable @Override public Icon getIcon(        boolean unused){
          return null;
        }
      }
;
    }
    @Override public void navigate(    boolean requestFocus){
    }
    @Override public boolean canNavigate(){
      return false;
    }
    @Override public boolean canNavigateToSource(){
      return false;
    }
  }
;
}
