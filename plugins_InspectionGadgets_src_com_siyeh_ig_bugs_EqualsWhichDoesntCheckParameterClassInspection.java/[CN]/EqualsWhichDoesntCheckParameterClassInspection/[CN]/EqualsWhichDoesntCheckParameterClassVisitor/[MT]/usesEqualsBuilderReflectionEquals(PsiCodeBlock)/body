{
  final PsiStatement[] statements=body.getStatements();
  if (statements.length != 1) {
    return false;
  }
  final PsiStatement statement=statements[0];
  if (!(statement instanceof PsiReturnStatement)) {
    return false;
  }
  final PsiReturnStatement returnStatement=(PsiReturnStatement)statement;
  final PsiExpression returnValue=returnStatement.getReturnValue();
  if (!(returnValue instanceof PsiMethodCallExpression)) {
    return false;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)returnValue;
  final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
  @NonNls final String referenceName=methodExpression.getReferenceName();
  if (!"reflectionEquals".equals(referenceName)) {
    return false;
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (!(qualifier instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)qualifier;
  final PsiElement target=referenceExpression.resolve();
  if (!(target instanceof PsiClass)) {
    return false;
  }
  final PsiClass aClass=(PsiClass)target;
  final String className=aClass.getQualifiedName();
  return "org.apache.commons.lang.builder.EqualsBuilder".equals(className);
}
