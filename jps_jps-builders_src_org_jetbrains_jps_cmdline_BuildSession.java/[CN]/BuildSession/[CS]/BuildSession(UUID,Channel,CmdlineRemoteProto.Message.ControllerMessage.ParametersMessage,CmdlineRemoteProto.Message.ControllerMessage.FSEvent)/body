{
  mySessionId=sessionId;
  myChannel=channel;
  Map<String,String> pathVars=new HashMap<String,String>();
  final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals=params.getGlobalSettings();
  for (  CmdlineRemoteProto.Message.KeyValuePair variable : globals.getPathVariableList()) {
    pathVars.put(variable.getKey(),variable.getValue());
  }
  String globalEncoding=globals.hasGlobalEncoding() ? globals.getGlobalEncoding() : null;
  String ignorePatterns=globals.hasIgnoredFilesPatterns() ? globals.getIgnoredFilesPatterns() : null;
  myProjectPath=FileUtil.toCanonicalPath(params.getProjectId());
  String globalOptionsPath=FileUtil.toCanonicalPath(globals.getGlobalOptionsPath());
  BuildType myBuildType=convertCompileType(params.getBuildType());
  Set<String> modules=new HashSet<String>(params.getModuleNameList());
  List<String> artifacts=params.getArtifactNameList();
  List<String> filePaths=params.getFilePathList();
  Map<String,String> builderParams=new HashMap<String,String>();
  for (  CmdlineRemoteProto.Message.KeyValuePair pair : params.getBuilderParameterList()) {
    builderParams.put(pair.getKey(),pair.getValue());
  }
  myInitialFSDelta=delta;
  JpsModelLoaderImpl loader=new JpsModelLoaderImpl(myProjectPath,globalOptionsPath,pathVars,globalEncoding,ignorePatterns,null);
  myBuildRunner=new BuildRunner(loader,modules,myBuildType,artifacts,filePaths,builderParams);
}
