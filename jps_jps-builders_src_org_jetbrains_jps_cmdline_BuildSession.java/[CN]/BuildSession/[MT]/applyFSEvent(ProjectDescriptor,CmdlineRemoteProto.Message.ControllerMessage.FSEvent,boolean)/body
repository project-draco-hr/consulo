{
  if (event == null) {
    return;
  }
  final Timestamps timestamps=pd.timestamps.getStorage();
  boolean cacheCleared=false;
  for (  String deleted : event.getDeletedPathsList()) {
    final File file=new File(deleted);
    Collection<BuildRootDescriptor> descriptor=pd.getBuildRootIndex().findAllParentDescriptors(file,null,null);
    if (!descriptor.isEmpty()) {
      if (!cacheCleared) {
        pd.getFSCache().clear();
        cacheCleared=true;
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("Applying deleted path from fs event: " + file.getPath());
      }
      for (      BuildRootDescriptor rootDescriptor : descriptor) {
        pd.fsState.registerDeleted(rootDescriptor.getTarget(),file,timestamps);
      }
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Skipping deleted path: " + file.getPath());
      }
    }
  }
  for (  String changed : event.getChangedPathsList()) {
    final File file=new File(changed);
    Collection<BuildRootDescriptor> descriptors=pd.getBuildRootIndex().findAllParentDescriptors(file,null,null);
    if (!descriptors.isEmpty()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Applying dirty path from fs event: " + changed);
      }
      long fileStamp=-1L;
      for (      BuildRootDescriptor descriptor : descriptors) {
        if (!descriptor.isGenerated()) {
          if (fileStamp == -1L) {
            fileStamp=FileSystemUtil.lastModified(file);
          }
          final long stamp=timestamps.getStamp(file,descriptor.getTarget());
          if (stamp != fileStamp) {
            if (!cacheCleared) {
              pd.getFSCache().clear();
              cacheCleared=true;
            }
            pd.fsState.markDirty(null,file,descriptor,timestamps,saveEventStamp);
          }
 else {
            if (LOG.isDebugEnabled()) {
              LOG.debug(descriptor.getTarget() + ": Path considered up-to-date: " + changed+ "; timestamp= "+ stamp);
            }
          }
        }
      }
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Skipping dirty path: " + file.getPath());
      }
    }
  }
}
