{
  if (event == null) {
    return;
  }
  if (pd != null) {
    final Timestamps timestamps=pd.timestamps.getStorage();
    ArtifactSourceTimestampStorage artifactTimestamps=pd.dataManager.getArtifactsBuildData().getTimestampStorage();
    for (    String deleted : event.getDeletedPathsList()) {
      final File file=new File(deleted);
      final RootDescriptor rd=pd.rootsIndex.getModuleAndRoot(null,file);
      if (rd != null) {
        if (Utils.IS_TEST_MODE) {
          LOG.info("Applying deleted path from fs event: " + file.getPath());
        }
        pd.fsState.registerDeleted(rd.module,file,rd.isTestRoot,timestamps);
      }
 else       if (Utils.IS_TEST_MODE) {
        LOG.info("Skipping deleted path: " + file.getPath());
      }
      Collection<ArtifactRootDescriptor> descriptor=pd.getArtifactRootsIndex().getDescriptors(file);
      if (!descriptor.isEmpty()) {
        if (Utils.IS_TEST_MODE) {
          LOG.info("Applying deleted path from fs event to artifacts: " + file.getPath());
        }
        for (        ArtifactRootDescriptor rootDescriptor : descriptor)         pd.fsState.registerDeleted(rootDescriptor.getArtifactName(),rootDescriptor.getRootId().getArtifactId(),deleted,artifactTimestamps);
      }
    }
    for (    String changed : event.getChangedPathsList()) {
      final File file=new File(changed);
      final RootDescriptor rd=pd.rootsIndex.getModuleAndRoot(null,file);
      if (rd != null) {
        if (Utils.IS_TEST_MODE) {
          LOG.info("Applying dirty path from fs event: " + file.getPath());
        }
        pd.fsState.markDirty(null,file,rd,timestamps);
      }
 else       if (Utils.IS_TEST_MODE) {
        LOG.info("Skipping dirty path: " + file.getPath());
      }
      Collection<ArtifactRootDescriptor> descriptors=pd.getArtifactRootsIndex().getDescriptors(file);
      if (!descriptors.isEmpty()) {
        if (Utils.IS_TEST_MODE) {
          LOG.info("Applying dirty path from fs event to artifacts: " + file.getPath());
        }
        for (        ArtifactRootDescriptor descriptor : descriptors) {
          pd.fsState.markDirty(descriptor,changed,artifactTimestamps);
        }
      }
    }
  }
  myLastEventOrdinal+=1;
}
