{
  final File dataStorageRoot=Utils.getDataStorageRoot(myProjectPath);
  if (dataStorageRoot == null) {
    msgHandler.processMessage(new CompilerMessage("build",BuildMessage.Kind.ERROR,"Cannot determine build data storage root for project " + myProjectPath));
    return;
  }
  if (!dataStorageRoot.exists()) {
    myBuildType=BuildType.PROJECT_REBUILD;
  }
  final DataInputStream fsStateStream=createFSDataStream(dataStorageRoot);
  if (fsStateStream != null) {
    final boolean hasWorkToDo=fsStateStream.readBoolean();
    if (myBuildType == BuildType.MAKE && !hasWorkToDo && !containsChanges(myInitialFSDelta)) {
      updateFsStateOnDisk(dataStorageRoot,fsStateStream,myInitialFSDelta.getOrdinal());
      return;
    }
  }
  final BuildFSState fsState=new BuildFSState(false);
  try {
    final ProjectDescriptor pd=myBuildRunner.load(msgHandler,dataStorageRoot,fsState);
    myProjectDescriptor=pd;
    if (fsStateStream != null) {
      try {
        try {
          fsState.load(fsStateStream,pd);
          applyFSEvent(pd,myInitialFSDelta);
        }
  finally {
          fsStateStream.close();
        }
      }
 catch (      Throwable e) {
        LOG.error(e);
        fsState.clearAll();
      }
    }
    myLastEventOrdinal=myInitialFSDelta != null ? myInitialFSDelta.getOrdinal() : 0L;
    myInitialFSDelta=null;
    myEventsProcessor.startProcessing();
    myBuildRunner.runBuild(pd,cs,myConstantSearch,msgHandler,true,myBuildType);
  }
  finally {
    saveData(fsState,dataStorageRoot);
  }
}
