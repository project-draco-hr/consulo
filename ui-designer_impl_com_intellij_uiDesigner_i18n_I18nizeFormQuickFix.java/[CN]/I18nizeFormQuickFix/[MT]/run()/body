{
  final StringDescriptor descriptor=getStringDescriptorValue();
  final Project project=myEditor.getProject();
  PsiFile psiFile=myEditor.getPsiFile();
  if (!I18nizeQuickFixDialog.isAvailable(myEditor.getPsiFile())) {
    return;
  }
  String initialValue=StringUtil.escapeStringCharacters(descriptor.getValue());
  final I18nizeQuickFixDialog dialog=new I18nizeQuickFixDialog(project,psiFile,null,initialValue,false,false){
    protected String getDimensionServiceKey(){
      return "#com.intellij.codeInsight.i18n.I18nizeQuickFixDialog_Form";
    }
  }
;
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  if (!myEditor.ensureEditable()) {
    return;
  }
  final Collection<PropertiesFile> propertiesFiles=dialog.getAllPropertiesFiles();
  PropertiesFile aPropertiesFile=null;
  for (  PropertiesFile file : propertiesFiles) {
    if (!CodeInsightUtil.prepareFileForWrite(file))     return;
    if (aPropertiesFile == null) {
      aPropertiesFile=file;
    }
  }
  CommandProcessor.getInstance().executeCommand(project,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          try {
            I18nUtil.createProperty(project,propertiesFiles,dialog.getKey(),dialog.getValue());
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
          }
        }
      }
);
    }
  }
,CodeInsightBundle.message("quickfix.i18n.command.name"),project);
  for (  PropertiesFile file : propertiesFiles) {
    FileDocumentManager.getInstance().saveDocument(PsiDocumentManager.getInstance(project).getDocument(file));
  }
  if (aPropertiesFile != null) {
    final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
    String packageName=fileIndex.getPackageNameByDirectory(aPropertiesFile.getVirtualFile().getParent());
    if (packageName != null) {
      String bundleName;
      if (packageName.length() > 0) {
        bundleName=packageName + "." + aPropertiesFile.getResourceBundle().getBaseName();
      }
 else {
        bundleName=aPropertiesFile.getResourceBundle().getBaseName();
      }
      bundleName=bundleName.replace('.','/');
      try {
        setStringDescriptorValue(new StringDescriptor(bundleName,dialog.getKey()));
      }
 catch (      Exception e) {
        LOG.error(e);
      }
      myEditor.refreshAndSave(true);
    }
  }
}
