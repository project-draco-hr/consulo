{
  PsiManager manager=aClass.getManager();
  PsiFile file=aClass.getContainingFile();
  PsiDirectory newDirectory=moveDestination.getTargetDirectory(file);
  if (!newDirectory.equals(file.getContainingDirectory())) {
    manager.moveFile(file,newDirectory);
    if (file instanceof PsiJavaFile) {
      PsiPackage newPackage=newDirectory.getPackage();
      PsiJavaFile javaFile=(PsiJavaFile)file;
      PsiPackageStatement packageStatement=javaFile.getPackageStatement();
      String packageName=newPackage.getQualifiedName();
      if (packageStatement != null) {
        if (packageName.length() > 0) {
          packageStatement.getPackageReference().bindToElement(newPackage);
        }
 else {
          packageStatement.delete();
        }
      }
 else {
        if (packageName.length() > 0) {
          String text="package " + packageName + ";";
          String ext=StdFileTypes.JAVA.getDefaultExtension();
          PsiJavaFile dummyFile=(PsiJavaFile)manager.getElementFactory().createFileFromText("_Dummy_." + ext,text);
          packageStatement=dummyFile.getPackageStatement();
          file.add(packageStatement);
        }
      }
    }
  }
  for (int i=0; i < usages.length; i++) {
    MoveRenameUsageInfo usage=(MoveRenameUsageInfo)usages[i];
    if (usage.getElement() == null || !usage.getElement().isValid())     continue;
    PsiReference reference=usage.reference;
    if (reference != null) {
      PsiElement parent=reference.getElement().getParent();
      if (parent instanceof PsiImportStatement) {
        if (parent.getContainingFile().getContainingDirectory().equals(newDirectory)) {
          parent.delete();
          continue;
        }
      }
      reference.bindToElement(aClass);
    }
  }
  return aClass;
}
