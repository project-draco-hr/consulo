def pygmentize(field, fctx, style, tmpl):
    old_header = ''.join(tmpl('header'))
    if (SYNTAX_CSS not in old_header):
        new_header = (old_header + SYNTAX_CSS)
        tmpl.cache['header'] = new_header
    text = fctx.data()
    if util.binary(text):
        return
    text = text.decode(encoding.encoding, 'replace')
    try:
        lexer = guess_lexer_for_filename(fctx.path(), text[:1024])
    except (ClassNotFound, ValueError):
        try:
            lexer = guess_lexer(text[:1024])
        except (ClassNotFound, ValueError):
            lexer = TextLexer()
    formatter = HtmlFormatter(style=style)
    colorized = highlight(text, lexer, formatter)
    colorized = colorized[:colorized.find('\n</pre>')]
    colorized = colorized[(colorized.find('<pre>') + 5):]
    coloriter = (s.encode(encoding.encoding, 'replace') for s in colorized.splitlines())
    tmpl.filters['colorize'] = (lambda x: coloriter.next())
    oldl = tmpl.cache[field]
    newl = oldl.replace('line|escape', 'line|colorize')
    tmpl.cache[field] = newl
