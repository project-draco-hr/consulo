{
  final InheritorChooser inheritorChooser=new InheritorChooser(){
    @Override protected void runForClasses(    List<PsiClass> classes,    PsiMethod method,    ConfigurationContext context,    Runnable performRunnable){
      ((JUnitConfiguration)context.getConfiguration().getConfiguration()).bePatternConfiguration(classes,method);
      super.runForClasses(classes,method,context,performRunnable);
    }
    @Override protected void runForClass(    PsiClass aClass,    PsiMethod psiMethod,    ConfigurationContext context,    Runnable performRunnable){
      ((JUnitConfiguration)context.getConfiguration().getConfiguration()).beClassConfiguration(aClass);
      super.runForClass(aClass,psiMethod,context,performRunnable);
    }
  }
;
  if (inheritorChooser.runMethodInAbstractClass(context,performRunnable,null,myTestClass))   return;
  super.perform(context,performRunnable);
}
