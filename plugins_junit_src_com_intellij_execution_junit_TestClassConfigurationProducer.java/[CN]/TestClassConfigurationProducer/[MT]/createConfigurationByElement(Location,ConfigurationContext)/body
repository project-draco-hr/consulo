{
  location=JavaExecutionUtil.stepIntoSingleClass(location);
  if (location == null)   return null;
  final Project project=location.getProject();
  final PsiElement[] elements=LangDataKeys.PSI_ELEMENT_ARRAY.getData(context.getDataContext());
  if (elements != null && PatternConfigurationProducer.collectTestClasses(elements).size() > 1) {
    return null;
  }
  myTestClass=JUnitUtil.getTestClass(location);
  if (myTestClass == null)   return null;
  RunnerAndConfigurationSettings settings=cloneTemplateConfiguration(project,context);
  final JUnitConfiguration configuration=(JUnitConfiguration)settings.getConfiguration();
  setupConfigurationModule(context,configuration);
  final Module originalModule=configuration.getConfigurationModule().getModule();
  configuration.beClassConfiguration(myTestClass);
  configuration.restoreOriginalModule(originalModule);
  JavaRunConfigurationExtensionManager.getInstance().extendCreatedConfiguration(configuration,location);
  return settings;
}
