{
  ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(project);
  VirtualFile root=vcsManager.getVcsRootFor(VfsUtilCore.getVirtualFileForJar(file));
  if (root != null) {
    LOGGER.debug("Found root for zip/jar file: " + root);
    return root;
  }
  List<OrderEntry> entries=ProjectRootManager.getInstance(project).getFileIndex().getOrderEntriesForFile(file);
  Set<VirtualFile> libraryRoots=new HashSet<VirtualFile>();
  for (  OrderEntry entry : entries) {
    if (entry instanceof LibraryOrderEntry || entry instanceof SdkOrderEntry) {
      VirtualFile moduleRoot=vcsManager.getVcsRootFor(entry.getOwnerModule().getModuleDir());
      if (moduleRoot != null) {
        libraryRoots.add(moduleRoot);
      }
    }
  }
  if (libraryRoots.size() == 0) {
    LOGGER.debug("No library roots");
    return null;
  }
  Iterator<VirtualFile> libIterator=libraryRoots.iterator();
  VirtualFile topLibraryRoot=libIterator.next();
  while (libIterator.hasNext()) {
    VirtualFile libRoot=libIterator.next();
    if (VfsUtilCore.isAncestor(libRoot,topLibraryRoot,true)) {
      topLibraryRoot=libRoot;
    }
  }
  LOGGER.debug("Several library roots, returning " + topLibraryRoot);
  return topLibraryRoot;
}
