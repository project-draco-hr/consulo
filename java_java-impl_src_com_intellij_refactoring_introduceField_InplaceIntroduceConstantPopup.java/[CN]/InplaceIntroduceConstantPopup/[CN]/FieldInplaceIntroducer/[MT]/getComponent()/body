{
  if (!myInitListeners) {
    myInitListeners=true;
    final VisibilityListener visibilityListener=new VisibilityListener(myProject,myEditor){
      @Override protected String getVisibility(){
        return getSelectedVisibility();
      }
    }
;
    myVisibilityCombo.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        visibilityListener.stateChanged(null);
      }
    }
);
    myReplaceAllCb.addItemListener(new ItemListener(){
      @Override public void itemStateChanged(      ItemEvent e){
        final TemplateState templateState=TemplateManagerImpl.getTemplateState(myEditor);
        if (templateState != null) {
          templateState.gotoEnd(true);
          myTypeSelectorManager=new TypeSelectorManagerImpl(myProject,myFieldTypePointer.getType(),null,myExpr,myOccurrences);
          startIntroduceTemplate(isReplaceAllOccurrences());
        }
      }
    }
);
    myAnnotateNonNls.addItemListener(new ItemListener(){
      @Override public void itemStateChanged(      ItemEvent e){
      }
    }
);
  }
  return myWholePanel;
}
