{
  if (success) {
    final BaseExpressionToFieldHandler.Settings settings=new BaseExpressionToFieldHandler.Settings(myConstantName,isReplaceAllOccurrences(),true,true,BaseExpressionToFieldHandler.InitializationPlace.IN_FIELD_DECLARATION,myVisibilityPanel.getVisibility(),myLocalVariable,myFieldTypePointer.getType(),isDeleteVariable(),myParentClass,isAnnotateNonNls(),false);
    if (myLocalVariable != null) {
      final LocalToFieldHandler.IntroduceFieldRunnable fieldRunnable=new LocalToFieldHandler.IntroduceFieldRunnable(false,myLocalVariable,myParentClass,settings,true,myOccurrences);
      fieldRunnable.run();
    }
 else {
      final BaseExpressionToFieldHandler.ConvertToFieldRunnable convertToFieldRunnable=new BaseExpressionToFieldHandler.ConvertToFieldRunnable(myExpr,settings,settings.getForcedType(),myOccurrences,myOccurenceManager,myAnchorElementIfAll,myAnchorElement,myEditor,myParentClass);
      convertToFieldRunnable.run();
    }
  }
  super.moveOffsetAfter(success);
  if (myMoveToAnotherClassCb.isSelected()) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      @Override public void run(){
        MoveMembersImpl.doMove(myProject,new PsiElement[]{myParentClass.findFieldByName(myConstantName,false)},null,null);
      }
    }
);
  }
}
