{
  final JPanel right=new JPanel(new GridBagLayout());
  final GridBagConstraints rgc=new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(1,0,0,0),0,0);
  myReplaceAllCb=new JCheckBox("Replace all occurrences");
  myReplaceAllCb.setMnemonic('a');
  myReplaceAllCb.setFocusable(false);
  myReplaceAllCb.setVisible(myOccurrences.length > 1);
  right.add(myReplaceAllCb,rgc);
  myCbDeleteVariable=new StateRestoringCheckBox("Delete variable declaration");
  myCbDeleteVariable.setMnemonic('d');
  myCbDeleteVariable.setFocusable(false);
  if (myLocalVariable != null) {
    if (myReplaceAllCb != null) {
      myReplaceAllCb.setEnabled(false);
      myReplaceAllCb.setSelected(true);
      myCbDeleteVariable.setSelected(true);
      myCbDeleteVariable.setEnabled(false);
    }
  }
 else {
    myCbDeleteVariable.setVisible(false);
  }
  right.add(myCbDeleteVariable,rgc);
  myAnnotateNonNls=new JCheckBox("Annotate field as @NonNls");
  myAnnotateNonNls.setMnemonic('f');
  myAnnotateNonNls.setFocusable(false);
  if ((myTypeSelectorManager.isSuggestedType("java.lang.String") || (myLocalVariable != null && AnnotationUtil.isAnnotated(myLocalVariable,AnnotationUtil.NON_NLS,false))) && LanguageLevelProjectExtension.getInstance(myProject).getLanguageLevel().hasEnumKeywordAndAutoboxing() && JavaPsiFacade.getInstance(myProject).findClass(AnnotationUtil.NON_NLS,myParentClass.getResolveScope()) != null) {
    final PropertiesComponent component=PropertiesComponent.getInstance(myProject);
    myAnnotateNonNls.setSelected(component.isTrueValue(IntroduceConstantDialog.NONNLS_SELECTED_PROPERTY));
    myAnnotateNonNls.addItemListener(new ItemListener(){
      public void itemStateChanged(      ItemEvent e){
        component.setValue(IntroduceConstantDialog.NONNLS_SELECTED_PROPERTY,Boolean.toString(myAnnotateNonNls.isSelected()));
      }
    }
);
  }
 else {
    myAnnotateNonNls.setVisible(false);
  }
  right.add(myAnnotateNonNls,rgc);
  return right;
}
