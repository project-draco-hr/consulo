{
  final BaseExpressionToFieldHandler.Settings settings=new BaseExpressionToFieldHandler.Settings(getInputName(),isReplaceAllOccurrences(),true,true,BaseExpressionToFieldHandler.InitializationPlace.IN_FIELD_DECLARATION,getSelectedVisibility(),(PsiLocalVariable)getLocalVariable(),getType(),isDeleteVariable(),myParentClass,isAnnotateNonNls(),false);
  new WriteCommandAction(myProject,getCommandName(),getCommandName()){
    @Override protected void run(    Result result) throws Throwable {
      if (getLocalVariable() != null) {
        final LocalToFieldHandler.IntroduceFieldRunnable fieldRunnable=new LocalToFieldHandler.IntroduceFieldRunnable(false,(PsiLocalVariable)getLocalVariable(),myParentClass,settings,true,myOccurrences);
        fieldRunnable.run();
      }
 else {
        final BaseExpressionToFieldHandler.ConvertToFieldRunnable convertToFieldRunnable=new BaseExpressionToFieldHandler.ConvertToFieldRunnable(myExpr,settings,settings.getForcedType(),myOccurrences,myOccurenceManager,myAnchorElementIfAll,myAnchorElement,myEditor,myParentClass);
        convertToFieldRunnable.run();
      }
    }
  }
.execute();
}
