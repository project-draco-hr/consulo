{
  final AnAction arrow=new AnAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      if (e.getInputEvent() instanceof KeyEvent) {
        final int code=((KeyEvent)e.getInputEvent()).getKeyCode();
        final int delta=code == KeyEvent.VK_DOWN ? 1 : code == KeyEvent.VK_UP ? -1 : 0;
        if (delta == 0)         return;
        final int size=visibilityCombo.getModel().getSize();
        int next=visibilityCombo.getSelectedIndex() + delta;
        if (next < 0 || next >= size) {
          if (!UISettings.getInstance().CYCLE_SCROLLING) {
            return;
          }
          next=(next + size) % size;
        }
        visibilityCombo.setSelectedIndex(next);
      }
    }
  }
;
  arrow.registerCustomShortcutSet(new CustomShortcutSet(new KeyboardShortcut(KeyStroke.getKeyStroke(KeyEvent.VK_UP,0),null),new KeyboardShortcut(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN,0),null)),visibilityCombo);
  visibilityCombo.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
        ToolWindowManager.getInstance(project).activateEditorComponent();
      }
    }
  }
);
}
