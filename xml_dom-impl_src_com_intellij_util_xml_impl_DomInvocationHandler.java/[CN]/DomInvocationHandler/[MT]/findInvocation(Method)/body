{
  Invocation invocation=myAccessorInvocations.get(method);
  if (invocation != null)   return invocation;
  invocation=myInvocationCache.getInvocation(method);
  if (invocation != null)   return invocation;
  JavaMethod javaMethod=JavaMethod.getMethod(getRawType(),method);
  invocation=myGenericInfo.createInvocation(javaMethod);
  if (invocation != null) {
    myInvocationCache.putInvocation(method,invocation);
    return invocation;
  }
  if (myInvocationCache.isTagValueGetter(javaMethod)) {
    invocation=new GetInvocation(createConverter(javaMethod));
  }
 else   if (myInvocationCache.isTagValueSetter(javaMethod)) {
    invocation=new SetInvocation(createConverter(javaMethod));
  }
 else {
    throw new RuntimeException("No implementation for method " + method.toString() + " in class "+ myType);
  }
  myAccessorInvocations=myAccessorInvocations.plus(method,invocation);
  return invocation;
}
