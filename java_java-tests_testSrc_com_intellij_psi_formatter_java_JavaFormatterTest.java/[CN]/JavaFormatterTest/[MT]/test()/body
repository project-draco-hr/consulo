{
  getSettings().getRootSettings().getIndentOptions(StdFileTypes.JAVA).INDENT_SIZE=2;
  getSettings().getRootSettings().getIndentOptions(StdFileTypes.JAVA).CONTINUATION_INDENT_SIZE=2;
  getSettings().getRootSettings().RIGHT_MARGIN=37;
  getSettings().ALIGN_MULTILINE_EXTENDS_LIST=true;
  getSettings().EXTENDS_KEYWORD_WRAP=CommonCodeStyleSettings.WRAP_AS_NEEDED;
  getSettings().EXTENDS_LIST_WRAP=CommonCodeStyleSettings.WRAP_AS_NEEDED;
  getSettings().ASSERT_STATEMENT_WRAP=CommonCodeStyleSettings.WRAP_AS_NEEDED;
  getSettings().ASSERT_STATEMENT_COLON_ON_NEXT_LINE=false;
  getSettings().ALIGN_MULTILINE_BINARY_OPERATION=true;
  final JavaPsiFacade facade=getJavaFacade();
  final LanguageLevel effectiveLanguageLevel=LanguageLevelProjectExtension.getInstance(facade.getProject()).getLanguageLevel();
  LanguageLevelProjectExtension.getInstance(facade.getProject()).setLanguageLevel(LanguageLevel.JDK_1_5);
  try {
    doTextTest("public class ThisIsASampleClass extends C1 implements I1, I2, I3, I4, I5 {\n" + "  public void longerMethod() {\n" + "    assert i + j + k + l + n+ m <= 2 : \"assert description\";"+ "  }\n"+ "}","public class ThisIsASampleClass\n" + "  extends C1\n" + "  implements I1, I2, I3, I4, I5 {\n"+ "  public void longerMethod() {\n"+ "    assert\n"+ "      i + j + k + l + n + m <= 2 :\n"+ "      \"assert description\";\n"+ "  }\n"+ "}");
  }
  finally {
    LanguageLevelProjectExtension.getInstance(facade.getProject()).setLanguageLevel(effectiveLanguageLevel);
  }
}
