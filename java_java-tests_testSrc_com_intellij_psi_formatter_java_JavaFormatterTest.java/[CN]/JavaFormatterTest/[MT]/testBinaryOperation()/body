{
  final CommonCodeStyleSettings settings=getSettings();
  @NonNls String text="class Foo {\n" + "    void foo () {\n" + "        xxx = aaa + bbb \n"+ "        + ccc + eee + ddd;\n"+ "    }\n"+ "}";
  settings.ALIGN_MULTILINE_BINARY_OPERATION=true;
  settings.ALIGN_MULTILINE_ASSIGNMENT=true;
  doTextTest(text,"\n" + "class Foo {\n" + "    void foo() {\n"+ "        xxx = aaa + bbb\n"+ "              + ccc + eee + ddd;\n"+ "    }\n"+ "}");
  settings.ALIGN_MULTILINE_BINARY_OPERATION=true;
  settings.ALIGN_MULTILINE_ASSIGNMENT=false;
  doTextTest(text,"\n" + "class Foo {\n" + "    void foo() {\n"+ "        xxx = aaa + bbb\n"+ "              + ccc + eee + ddd;\n"+ "    }\n"+ "}");
  settings.ALIGN_MULTILINE_BINARY_OPERATION=false;
  settings.ALIGN_MULTILINE_ASSIGNMENT=true;
  doTextTest(text,"\n" + "class Foo {\n" + "    void foo() {\n"+ "        xxx = aaa + bbb\n"+ "                + ccc + eee + ddd;\n"+ "    }\n"+ "}");
  settings.ALIGN_MULTILINE_ASSIGNMENT=false;
  settings.ALIGN_MULTILINE_BINARY_OPERATION=false;
  doTextTest(text,"\n" + "class Foo {\n" + "    void foo() {\n"+ "        xxx = aaa + bbb\n"+ "                + ccc + eee + ddd;\n"+ "    }\n"+ "}");
  settings.ALIGN_MULTILINE_ASSIGNMENT=false;
  settings.ALIGN_MULTILINE_BINARY_OPERATION=false;
  doTextTest(text,"\n" + "class Foo {\n" + "    void foo() {\n"+ "        xxx = aaa + bbb\n"+ "                + ccc + eee + ddd;\n"+ "    }\n"+ "}");
  settings.ALIGN_MULTILINE_BINARY_OPERATION=true;
  doTextTest("class Foo {\n" + "    void foo () {\n" + "        xxx = aaa + bbb \n"+ "        - ccc + eee + ddd;\n"+ "    }\n"+ "}","\nclass Foo {\n" + "    void foo() {\n" + "        xxx = aaa + bbb\n"+ "              - ccc + eee + ddd;\n"+ "    }\n"+ "}");
  doTextTest("class Foo {\n" + "    void foo () {\n" + "        xxx = aaa + bbb \n"+ "        * ccc + eee + ddd;\n"+ "    }\n"+ "}","\nclass Foo {\n" + "    void foo() {\n" + "        xxx = aaa + bbb\n"+ "                    * ccc + eee + ddd;\n"+ "    }\n"+ "}");
}
