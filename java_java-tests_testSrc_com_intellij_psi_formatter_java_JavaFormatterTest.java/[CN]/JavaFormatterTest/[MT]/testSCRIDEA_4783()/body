{
  getSettings().ASSIGNMENT_WRAP=CommonCodeStyleSettings.WRAP_AS_NEEDED;
  getSettings().METHOD_CALL_CHAIN_WRAP=CommonCodeStyleSettings.WRAP_AS_NEEDED;
  getSettings().RIGHT_MARGIN=80;
  doTextTest("class Foo{\n" + "    void foo() {\n" + "        final CommandRouterProtocolHandler protocolHandler = (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "    }\n"+ "}","class Foo {\n" + "    void foo() {\n" + "        final CommandRouterProtocolHandler protocolHandler =\n"+ "                (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "    }\n"+ "}");
  doTextTest("class Foo{\n" + "    void foo() {\n" + "        protocolHandlerCommandRouterProtocolHandler = (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "    }\n"+ "}","class Foo {\n" + "    void foo() {\n" + "        protocolHandlerCommandRouterProtocolHandler =\n"+ "                (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "    }\n"+ "}");
  doTextTest("class Foo{\n" + "    final CommandRouterProtocolHandler protocolHandler = (CommandRouterProtocolHandler) connection.getProtocolHandler()\n" + "}","class Foo {\n" + "    final CommandRouterProtocolHandler protocolHandler =\n" + "            (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "}");
  getSettings().PLACE_ASSIGNMENT_SIGN_ON_NEXT_LINE=true;
  doTextTest("class Foo{\n" + "    void foo() {\n" + "        final CommandRouterProtocolHandler protocolHandler = (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "    }\n"+ "}","class Foo {\n" + "    void foo() {\n" + "        final CommandRouterProtocolHandler protocolHandler\n"+ "                = (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "    }\n"+ "}");
  doTextTest("class Foo{\n" + "    void foo() {\n" + "        protocolHandlerCommandRouterProtocolHandler = (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "    }\n"+ "}","class Foo {\n" + "    void foo() {\n" + "        protocolHandlerCommandRouterProtocolHandler\n"+ "                = (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "    }\n"+ "}");
  doTextTest("class Foo{\n" + "    final CommandRouterProtocolHandler protocolHandler = (CommandRouterProtocolHandler) connection.getProtocolHandler()\n" + "}","class Foo {\n" + "    final CommandRouterProtocolHandler protocolHandler\n" + "            = (CommandRouterProtocolHandler) connection.getProtocolHandler()\n"+ "}");
}
