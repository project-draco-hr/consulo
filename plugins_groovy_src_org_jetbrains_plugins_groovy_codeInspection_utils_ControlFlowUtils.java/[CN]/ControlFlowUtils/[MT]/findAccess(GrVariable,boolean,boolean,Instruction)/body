{
  String name=local.getName();
  final ArrayList<ReadWriteVariableInstruction> result=new ArrayList<ReadWriteVariableInstruction>();
  final HashSet<Instruction> visited=new HashSet<Instruction>();
  visited.add(cur);
  Queue<Instruction> queue=new ArrayDeque<Instruction>();
  for (  Instruction i : ahead ? cur.allSuccessors() : cur.allPredecessors()) {
    if (visited.add(i)) {
      queue.add(i);
    }
  }
  while (true) {
    Instruction instruction=queue.poll();
    if (instruction == null)     break;
    if (instruction instanceof ReadWriteVariableInstruction) {
      ReadWriteVariableInstruction rw=(ReadWriteVariableInstruction)instruction;
      if (name.equals(rw.getVariableName())) {
        if (rw.isWrite()) {
          result.add(rw);
          continue;
        }
        if (!writeAccessOnly) {
          result.add(rw);
        }
      }
    }
    for (    Instruction i : ahead ? instruction.allSuccessors() : instruction.allPredecessors()) {
      if (visited.add(i)) {
        queue.add(i);
      }
    }
  }
  return result;
}
