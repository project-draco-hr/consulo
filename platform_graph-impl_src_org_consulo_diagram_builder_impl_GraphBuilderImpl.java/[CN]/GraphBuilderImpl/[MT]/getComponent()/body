{
  mxGraph graph=new mxGraph();
  graph.setCellsResizable(false);
  graph.setEdgeLabelsMovable(false);
  graph.setConnectableEdges(false);
  graph.setCellsEditable(false);
  graph.setAllowDanglingEdges(false);
  Object parent=graph.getDefaultParent();
  graph.getModel().beginUpdate();
  try {
    Map<GraphNode<?>,Object> map=new HashMap<GraphNode<?>,Object>();
    int i=1;
    for (    GraphNode<?> graphNode : myGraphNodes) {
      mxRectangle labelSize=mxUtils.getLabelSize(graphNode.getValue().toString(),Collections.<String,Object>emptyMap(),false,1.);
      mxCell vertex=graph.insertVertex(parent,null,graphNode.getValue(),0,0,labelSize.getWidth() + 5,labelSize.getHeight() + 6);
      map.put(graphNode,vertex);
      i++;
    }
    for (    Map.Entry<GraphNode<?>,Object> entry : map.entrySet()) {
      List<GraphNode<?>> arrowNodes=entry.getKey().getArrowNodes();
      for (      GraphNode<?> arrowNode : arrowNodes) {
        graph.insertEdge(parent,null,null,entry.getValue(),map.get(arrowNode));
      }
    }
  }
  finally {
    graph.getModel().endUpdate();
  }
  mxGraphComponent mxGraphComponent=new mxGraphComponent(graph){
  }
;
  return mxGraphComponent;
}
