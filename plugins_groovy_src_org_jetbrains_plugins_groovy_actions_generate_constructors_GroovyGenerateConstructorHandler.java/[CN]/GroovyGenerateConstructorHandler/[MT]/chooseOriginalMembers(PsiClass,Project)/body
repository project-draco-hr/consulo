{
  final ClassMember[] classMembers=chooseOriginalMembersImpl(aClass,project);
  if (classMembers == null)   return null;
  List<ClassMember> res=new ArrayList<ClassMember>();
  final PsiElementFactory factory=JavaPsiFacade.getInstance(aClass.getProject()).getElementFactory();
  for (  ClassMember classMember : classMembers) {
    if (classMember instanceof PsiMethodMember) {
      final PsiMethod method=((PsiMethodMember)classMember).getElement();
      final PsiMethod copy=(PsiMethod)method.copy();
      LOG.assertTrue(copy != null,method.getClass().getName());
      if (copy instanceof GrMethod) {
        for (        GrParameter parameter : ((GrMethod)copy).getParameterList().getParameters()) {
          if (parameter.getTypeElementGroovy() == null) {
            parameter.setName(DEF_PSEUDO_ANNO + parameter.getName());
          }
        }
      }
      res.add(new PsiMethodMember(factory.createMethodFromText(GroovyToJavaGenerator.generateMethodStub(copy),method)));
    }
 else     if (classMember instanceof PsiFieldMember) {
      final PsiField field=((PsiFieldMember)classMember).getElement();
      String prefix=field instanceof GrField && ((GrField)field).getTypeElementGroovy() == null ? DEF_PSEUDO_ANNO : "";
      res.add(new PsiFieldMember(factory.createFieldFromText(field.getType().getCanonicalText() + " " + prefix+ field.getName(),aClass)));
    }
  }
  return res.toArray(new ClassMember[res.size()]);
}
