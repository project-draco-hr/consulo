{
  final ClassMember[] classMembers=chooseOriginalMembersImpl(aClass,project);
  if (classMembers == null)   return null;
  List<ClassMember> res=new ArrayList<ClassMember>();
  final PsiElementFactory factory=JavaPsiFacade.getInstance(project).getElementFactory();
  for (  ClassMember classMember : classMembers) {
    if (classMember instanceof PsiMethodMember) {
      final PsiMethod method=((PsiMethodMember)classMember).getElement();
      PsiMethod copy=factory.createMethodFromText(GroovyToJavaGenerator.generateMethodStub(method),method);
      if (method instanceof GrMethod) {
        GrParameter[] parameters=((GrMethod)method).getParameterList().getParameters();
        PsiParameter[] copyParameters=copy.getParameterList().getParameters();
        for (int i=0; i < parameters.length; i++) {
          if (parameters[i].getTypeElementGroovy() == null) {
            copyParameters[i].setName(DEF_PSEUDO_ANNO + parameters[i].getName());
          }
        }
      }
      res.add(new PsiMethodMember(copy));
    }
 else     if (classMember instanceof PsiFieldMember) {
      final PsiField field=((PsiFieldMember)classMember).getElement();
      String prefix=field instanceof GrField && ((GrField)field).getTypeElementGroovy() == null ? DEF_PSEUDO_ANNO : "";
      res.add(new PsiFieldMember(factory.createFieldFromText(field.getType().getCanonicalText() + " " + prefix+ field.getName(),aClass)));
    }
  }
  return res.toArray(new ClassMember[res.size()]);
}
