{
  mySchemesManager=schemesManagerFactory.createSchemesManager(FILE_SPEC,new SchemeProcessor<FileType>(){
    public FileType readScheme(    final Document document) throws InvalidDataException, IOException, JDOMException {
      if (document == null) {
        throw new InvalidDataException();
      }
      Element root=document.getRootElement();
      if (root == null || !ELEMENT_FILETYPE.equals(root.getName())) {
        throw new InvalidDataException();
      }
      return loadFileType(root,false);
    }
    public boolean shouldBeSaved(    final FileType fileType){
      if (!(fileType instanceof JDOMExternalizable) || !shouldSave(fileType))       return false;
      if (myDefaultTypes.contains(fileType) && !isDefaultModified(fileType))       return false;
      return true;
    }
    public void renameScheme(    final String name,    final FileType scheme){
      throw new RuntimeException("Not implemented yet");
    }
    public void showReadErrorMessage(    final Exception e,    final String schemeName,    final String filePath){
      LOG.debug(e);
    }
    public void showWriteErrorMessage(    final Exception e,    final String schemeName,    final String filePath){
      LOG.debug(e);
    }
    public Document writeScheme(    final FileType fileType) throws WriteExternalException {
      Element root=new Element(ELEMENT_FILETYPE);
      writeHeader(root,fileType);
      ((JDOMExternalizable)fileType).writeExternal(root);
      return new Document(root);
    }
    public void initScheme(    final FileType scheme){
    }
  }
,RoamingType.PER_USER);
  for (  final Pair<FileType,String> pair : ourStandardFileTypes.values()) {
    registerFileTypeWithoutNotification(pair.first,parse(pair.second));
  }
  if (loadAllFileTypes()) {
    restoreStandardFileExtensions();
  }
  myMessageBus=bus;
}
