{
  return new SchemeProcessor<FileType>(){
    public FileType readScheme(    final Document document,    final File file) throws InvalidDataException, IOException, JDOMException {
      if (document == null) {
        throw new InvalidDataException();
      }
      Element root=document.getRootElement();
      if (root == null || !ELEMENT_FILETYPE.equals(root.getName())) {
        throw new InvalidDataException();
      }
      final FileType fileType=loadFileType(root,false);
      standardFileTypeRead[0]|=myInitialAssociations.hasAssociationsFor(fileType);
      return fileType;
    }
    public boolean shouldBeSaved(    final FileType fileType){
      if (!(fileType instanceof JDOMExternalizable) || !shouldSave(fileType))       return false;
      if (myDefaultTypes.contains(fileType) && !isDefaultModified(fileType))       return false;
      return true;
    }
    public void showReadErrorMessage(    final Exception e,    final String schemeName,    final String filePath){
    }
    public void showWriteErrorMessage(    final Exception e,    final String schemeName,    final String filePath){
    }
    public Document writeScheme(    final FileType fileType) throws WriteExternalException {
      Element root=new Element(ELEMENT_FILETYPE);
      writeHeader(root,fileType);
      ((JDOMExternalizable)fileType).writeExternal(root);
      return new Document(root);
    }
  }
;
}
