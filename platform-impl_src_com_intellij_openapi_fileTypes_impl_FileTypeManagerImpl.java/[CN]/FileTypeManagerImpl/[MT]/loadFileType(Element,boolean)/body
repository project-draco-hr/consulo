{
  String fileTypeName=typeElement.getAttributeValue(ATTRIBUTE_NAME);
  String fileTypeDescr=typeElement.getAttributeValue(ATTRIBUTE_DESCRIPTION);
  String iconPath=typeElement.getAttributeValue(ATTRIBUTE_ICON);
  String extensionsStr=typeElement.getAttributeValue(ATTRIBUTE_EXTENSIONS);
  FileType type=getFileTypeByName(fileTypeName);
  List<FileNameMatcher> exts=parse(extensionsStr);
  if (type != null) {
    if (isDefaults)     return type;
    if (extensionsStr != null) {
      removeAllAssociations(type);
      for (      FileNameMatcher ext : exts) {
        associate(type,ext,false);
      }
    }
    if (type instanceof JDOMExternalizable) {
      try {
        ((JDOMExternalizable)type).readExternal(typeElement);
      }
 catch (      InvalidDataException e) {
        throw new RuntimeException(e);
      }
    }
  }
 else {
    for (    CustomFileTypeFactory factory : Extensions.getExtensions(CustomFileTypeFactory.EP_NAME)) {
      type=factory.createFileType(typeElement);
      if (type != null) {
        break;
      }
    }
    if (type == null) {
      type=new UserBinaryFileType();
    }
    registerFileTypeWithoutNotification(type,exts);
  }
  if (type instanceof UserFileType) {
    UserFileType ft=(UserFileType)type;
    setFileTypeAttributes(fileTypeName,fileTypeDescr,iconPath,ft);
  }
  if (isDefaults) {
    myDefaultTypes.add(type);
    if (type instanceof ExternalizableFileType) {
      ((ExternalizableFileType)type).markDefaultSettings();
    }
  }
 else {
    Element extensions=typeElement.getChild(ELEMENT_EXTENSIONMAP);
    if (extensions != null) {
      readMappingsForFileType(extensions,type);
    }
  }
  return type;
}
