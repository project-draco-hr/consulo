{
  super(parent,false);
  myClass=psiClass;
  createList(psiClass.getAllMethods(),filter);
  myWholePanel.add(ScrollPaneFactory.createScrollPane(myList));
  myList.setCellRenderer(new ColoredListCellRenderer(){
    protected void customizeCellRenderer(    final JList list,    final Object value,    final int index,    final boolean selected,    final boolean hasFocus){
      final PsiMethod psiMethod=(PsiMethod)value;
      append(PsiFormatUtil.formatMethod(psiMethod,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME,0),StructureNodeRenderer.applyDeprecation(psiMethod,SimpleTextAttributes.REGULAR_ATTRIBUTES));
      final PsiClass containingClass=psiMethod.getContainingClass();
      if (!myClass.equals(containingClass))       append(" (" + containingClass.getQualifiedName() + ")",StructureNodeRenderer.applyDeprecation(containingClass,SimpleTextAttributes.GRAY_ATTRIBUTES));
    }
  }
);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      MethodListDlg.this.close(OK_EXIT_CODE);
      return true;
    }
  }
.installOn(myList);
  ListScrollingUtil.ensureSelectionExists(myList);
  setTitle(ExecutionBundle.message("choose.test.method.dialog.title"));
  init();
}
