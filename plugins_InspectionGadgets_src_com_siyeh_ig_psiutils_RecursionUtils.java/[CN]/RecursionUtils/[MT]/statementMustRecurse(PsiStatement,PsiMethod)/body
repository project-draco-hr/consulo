{
  if (statement == null) {
    return false;
  }
  if (statement instanceof PsiBreakStatement || statement instanceof PsiContinueStatement || statement instanceof PsiThrowStatement|| statement instanceof PsiEmptyStatement|| statement instanceof PsiAssertStatement) {
    return false;
  }
 else   if (statement instanceof PsiExpressionListStatement) {
    final PsiExpressionList expressionList=((PsiExpressionListStatement)statement).getExpressionList();
    if (expressionList == null) {
      return false;
    }
    final PsiExpression[] expressions=expressionList.getExpressions();
    for (int i=0; i < expressions.length; i++) {
      final PsiExpression expression=expressions[i];
      if (expressionMustRecurse(expression,method)) {
        return true;
      }
    }
    return false;
  }
 else   if (statement instanceof PsiExpressionStatement) {
    final PsiExpression expression=((PsiExpressionStatement)statement).getExpression();
    return expressionMustRecurse(expression,method);
  }
 else   if (statement instanceof PsiDeclarationStatement) {
    final PsiDeclarationStatement declaration=(PsiDeclarationStatement)statement;
    final PsiElement[] declaredElements=declaration.getDeclaredElements();
    if (declaredElements == null) {
      return false;
    }
    for (int i=0; i < declaredElements.length; i++) {
      final PsiElement declaredElement=declaredElements[i];
      if (declaredElement instanceof PsiLocalVariable) {
        final PsiLocalVariable variable=(PsiLocalVariable)declaredElement;
        final PsiExpression initializer=variable.getInitializer();
        if (expressionMustRecurse(initializer,method)) {
          return true;
        }
      }
    }
    return false;
  }
 else   if (statement instanceof PsiReturnStatement) {
    final PsiReturnStatement returnStatement=(PsiReturnStatement)statement;
    final PsiExpression returnValue=returnStatement.getReturnValue();
    if (returnValue != null) {
      if (expressionMustRecurse(returnValue,method)) {
        return true;
      }
    }
    return false;
  }
 else   if (statement instanceof PsiForStatement) {
    return forStatementMustRecurse((PsiForStatement)statement,method);
  }
 else   if (statement instanceof PsiForeachStatement) {
    return foreachStatementMustRecurse((PsiForeachStatement)statement,method);
  }
 else   if (statement instanceof PsiWhileStatement) {
    return whileStatementMustRecurse((PsiWhileStatement)statement,method);
  }
 else   if (statement instanceof PsiDoWhileStatement) {
    return doWhileStatementMustRecurse((PsiDoWhileStatement)statement,method);
  }
 else   if (statement instanceof PsiSynchronizedStatement) {
    final PsiCodeBlock body=((PsiSynchronizedStatement)statement).getBody();
    return codeBlockMustRecurse(body,method);
  }
 else   if (statement instanceof PsiBlockStatement) {
    final PsiCodeBlock codeBlock=((PsiBlockStatement)statement).getCodeBlock();
    return codeBlockMustRecurse(codeBlock,method);
  }
 else   if (statement instanceof PsiLabeledStatement) {
    return labeledStatementMustRecurse((PsiLabeledStatement)statement,method);
  }
 else   if (statement instanceof PsiIfStatement) {
    return ifStatementMustRecurse((PsiIfStatement)statement,method);
  }
 else   if (statement instanceof PsiTryStatement) {
    return tryStatementMustRecurse((PsiTryStatement)statement,method);
  }
 else   if (statement instanceof PsiSwitchStatement) {
    return switchStatementMustRecurse((PsiSwitchStatement)statement,method);
  }
 else {
    return false;
  }
}
