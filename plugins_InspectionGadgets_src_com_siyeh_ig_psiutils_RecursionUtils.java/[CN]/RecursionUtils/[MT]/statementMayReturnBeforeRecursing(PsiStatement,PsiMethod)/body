{
  if (statement == null) {
    return true;
  }
  if (statement instanceof PsiBreakStatement || statement instanceof PsiContinueStatement || statement instanceof PsiThrowStatement|| statement instanceof PsiExpressionListStatement|| statement instanceof PsiExpressionStatement|| statement instanceof PsiEmptyStatement|| statement instanceof PsiAssertStatement|| statement instanceof PsiDeclarationStatement) {
    return false;
  }
 else   if (statement instanceof PsiReturnStatement) {
    final PsiReturnStatement returnStatement=(PsiReturnStatement)statement;
    final PsiExpression returnValue=returnStatement.getReturnValue();
    if (returnValue != null) {
      if (expressionMustRecurse(returnValue,method)) {
        return false;
      }
    }
    return true;
  }
 else   if (statement instanceof PsiForStatement) {
    return forStatementMayReturnBeforeRecursing((PsiForStatement)statement,method);
  }
 else   if (statement instanceof PsiForeachStatement) {
    return foreachStatementMayReturnBeforeRecursing((PsiForeachStatement)statement,method);
  }
 else   if (statement instanceof PsiWhileStatement) {
    return whileStatementMayReturnBeforeRecursing((PsiWhileStatement)statement,method);
  }
 else   if (statement instanceof PsiDoWhileStatement) {
    return doWhileStatementMayReturnBeforeRecursing((PsiDoWhileStatement)statement,method);
  }
 else   if (statement instanceof PsiSynchronizedStatement) {
    final PsiCodeBlock body=((PsiSynchronizedStatement)statement).getBody();
    return codeBlockMayReturnBeforeRecursing(body,method,false);
  }
 else   if (statement instanceof PsiBlockStatement) {
    final PsiCodeBlock codeBlock=((PsiBlockStatement)statement).getCodeBlock();
    return codeBlockMayReturnBeforeRecursing(codeBlock,method,false);
  }
 else   if (statement instanceof PsiLabeledStatement) {
    return labeledStatementMayReturnBeforeRecursing((PsiLabeledStatement)statement,method);
  }
 else   if (statement instanceof PsiIfStatement) {
    return ifStatementMayReturnBeforeRecursing((PsiIfStatement)statement,method);
  }
 else   if (statement instanceof PsiTryStatement) {
    return tryStatementMayReturnBeforeRecursing((PsiTryStatement)statement,method);
  }
 else   if (statement instanceof PsiSwitchStatement) {
    return switchStatementMayReturnBeforeRecursing((PsiSwitchStatement)statement,method);
  }
 else {
    return true;
  }
}
