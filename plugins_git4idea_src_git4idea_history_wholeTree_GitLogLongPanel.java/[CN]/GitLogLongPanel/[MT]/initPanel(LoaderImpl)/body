{
  final JPanel container=new JPanel(new BorderLayout());
  final JPanel menu=new JPanel();
  final BoxLayout layout=new BoxLayout(menu,BoxLayout.X_AXIS);
  menu.setLayout(layout);
  myLoading=new JLabel("Loading");
  menu.add(myLoading);
  myFilterField=new JTextField(100);
  menu.add(myFilterField);
  createFilterFieldListener();
  myTableModel=new BigTableTableModel(Arrays.<ColumnInfo>asList(COMMENT,AUTHOR,DATE),myLinesProxy);
  final JBTable table=new JBTable(myTableModel);
  table.setModel(myTableModel);
  final JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(table);
  myListener=new MyChangeListener(loaderImpl,table);
  scrollPane.getViewport().addChangeListener(myListener);
  container.add(menu,BorderLayout.NORTH);
  container.add(scrollPane,BorderLayout.CENTER);
  myPanel.add(LOADING_CARD,new JLabel("Loading"));
  myPanel.add(READY_CARD,container);
  table.setDefaultRenderer(Object.class,new ColoredTableCellRenderer(){
    @Override protected void customizeCellRenderer(    JTable table,    Object value,    boolean selected,    boolean hasFocus,    int row,    int column){
      final CompoundNumber memberData=((LoaderImpl)myLoader).getTreeComposite().getMemberData(row);
      append(value.toString(),new SimpleTextAttributes(memberData.getMemberNumber() < colors.length ? colors[memberData.getMemberNumber()] : UIUtil.getTableBackground(),selected ? UIUtil.getTableSelectionForeground() : UIUtil.getTableForeground(),null,SimpleTextAttributes.STYLE_PLAIN));
    }
  }
);
}
