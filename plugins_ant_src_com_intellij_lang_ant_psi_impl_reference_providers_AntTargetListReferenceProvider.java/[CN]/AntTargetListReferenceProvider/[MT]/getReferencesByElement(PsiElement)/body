{
  final AntTarget target=(AntTarget)element;
  final XmlAttribute attr=target.getSourceElement().getAttribute("depends",null);
  if (attr == null) {
    return PsiReference.EMPTY_ARRAY;
  }
  final XmlAttributeValue xmlAttributeValue=attr.getValueElement();
  if (xmlAttributeValue == null) {
    return PsiReference.EMPTY_ARRAY;
  }
  int offsetInPosition=xmlAttributeValue.getTextRange().getStartOffset() - target.getTextRange().getStartOffset() + 1;
  final String str=attr.getValue();
  final String[] targets=str.split(",");
  final List<PsiReference> result=PsiReferenceListSpinAllocator.alloc();
  try {
    for (    final String t : targets) {
      int i=0;
      final int len=t.length();
      for (; i < len; ++i) {
        if (!Character.isWhitespace(t.charAt(i)))         break;
      }
      final String targetName=(i < len) ? t.substring(i).trim() : "";
      result.add(new AntTargetReference(this,target,targetName,new TextRange(offsetInPosition + i,offsetInPosition + i + targetName.length()),attr));
      offsetInPosition+=len + 1;
    }
    return (result.size() > 0) ? result.toArray(new PsiReference[result.size()]) : PsiReference.EMPTY_ARRAY;
  }
  finally {
    PsiReferenceListSpinAllocator.dispose(result);
  }
}
