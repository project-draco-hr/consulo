{
  final int dividerIndex=line.indexOf(JavacResourcesReader.CATEGORY_VALUE_DIVIDER);
  if (dividerIndex < 0) {
    return;
  }
  final String category=line.substring(0,dividerIndex);
  final String resourceBundleValue=line.substring(dividerIndex + 1);
  if (JavacResourcesReader.MSG_PARSING_COMPLETED.equals(category) || JavacResourcesReader.MSG_PARSING_STARTED.equals(category) || JavacResourcesReader.MSG_WROTE.equals(category)) {
    myParserActions.add(new FilePathActionJavac(createMatcher(resourceBundleValue)));
  }
 else   if (JavacResourcesReader.MSG_CHECKING.equals(category)) {
    myParserActions.add(new JavacParserAction(createMatcher(resourceBundleValue)){
      protected void doExecute(      final String line,      String parsedData,      final Callback callback){
        callback.setProgressText(CompilerBundle.message("progress.compiling.class",parsedData));
      }
    }
);
  }
 else   if (JavacResourcesReader.MSG_LOADING.equals(category)) {
    myParserActions.add(new JavacParserAction(createMatcher(resourceBundleValue)){
      protected void doExecute(      final String line,      @Nullable String parsedData,      final Callback callback){
        callback.setProgressText(CompilerBundle.message("progress.loading.classes"));
      }
    }
);
  }
 else   if (JavacResourcesReader.MSG_NOTE.equals(category)) {
    myParserActions.add(new JavacParserAction(createMatcher(resourceBundleValue)){
      protected void doExecute(      final String line,      @Nullable final String filePath,      final Callback callback){
        final boolean fileExists=filePath != null && ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
          public Boolean compute(){
            return LocalFileSystem.getInstance().findFileByPath(filePath) != null ? Boolean.TRUE : Boolean.FALSE;
          }
        }
);
        if (fileExists) {
          addMessage(callback,CompilerMessageCategory.WARNING,line,VirtualFileManager.constructUrl(LocalFileSystem.PROTOCOL,filePath),-1,-1);
        }
 else {
          addMessage(callback,CompilerMessageCategory.WARNING,line);
        }
      }
    }
);
  }
 else   if (JavacResourcesReader.MSG_WARNING.equals(category)) {
    WARNING_PREFIX=resourceBundleValue;
  }
 else   if (JavacResourcesReader.MSG_STATISTICS.equals(category)) {
    myParserActions.add(new JavacParserAction(createMatcher(resourceBundleValue)){
      protected void doExecute(      final String line,      @Nullable String parsedData,      final Callback callback){
      }
    }
);
  }
}
