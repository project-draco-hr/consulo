{
  final AtomicInteger status=ourRebuildStatus.get(indexId);
  if (status.get() == OK)   return;
  if (status.compareAndSet(REQUIRES_REBUILD,REBUILD_IN_PROGRESS)) {
    cleanupProcessedFlag();
    final Runnable rebuildRunnable=new Runnable(){
      public void run(){
        try {
          clearIndex(indexId);
          if (!cleanupOnly) {
            scheduleIndexRebuild(false);
          }
        }
 catch (        StorageException e) {
          requestRebuild(indexId);
          LOG.info(e);
        }
 finally {
          status.compareAndSet(REBUILD_IN_PROGRESS,OK);
        }
      }
    }
;
    if (cleanupOnly || myIsUnitTestMode) {
      rebuildRunnable.run();
    }
 else {
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          new Task.Modal(null,"Updating index",false){
            public void run(            @NotNull final ProgressIndicator indicator){
              indicator.setIndeterminate(true);
              rebuildRunnable.run();
            }
          }
.queue();
        }
      }
);
    }
  }
  if (status.get() == REBUILD_IN_PROGRESS) {
    throw new ProcessCanceledException();
  }
}
