{
  if (project == null)   return null;
  SoftReference<ProjectIndexableFilesFilter> reference=project.getUserData(ourProjectFilesSetKey);
  ProjectIndexableFilesFilter data=reference != null ? reference.get() : null;
  if (data != null && data.myModificationCount == myFilesModCount)   return data;
  final TIntHashSet filesSet=new TIntHashSet();
  iterateIndexableFiles(new ContentIterator(){
    @Override public boolean processFile(    @NotNull VirtualFile fileOrDir){
      filesSet.add(((VirtualFileWithId)fileOrDir).getId());
      return true;
    }
  }
,project,ProgressManager.getInstance().getProgressIndicator());
  ProjectIndexableFilesFilter files=new ProjectIndexableFilesFilter(filesSet,myFilesModCount);
  project.putUserData(ourProjectFilesSetKey,new SoftReference<ProjectIndexableFilesFilter>(files));
  return files;
}
