{
  final File indexStorageFile=IndexInfrastructure.getInputIndexStorageFile(indexId);
  return new PersistentHashMap<Integer,Collection<K>>(indexStorageFile,new EnumeratorIntegerDescriptor(),new DataExternalizer<Collection<K>>(){
    public void save(    DataOutput out,    Collection<K> value) throws IOException {
      DataInputOutputUtil.writeINT(out,value.size());
      for (      K key : value) {
        keyDescriptor.save(out,key);
      }
    }
    public Collection<K> read(    DataInput in) throws IOException {
      final int size=DataInputOutputUtil.readINT(in);
      final List<K> list=new ArrayList<K>();
      for (int idx=0; idx < size; idx++) {
        list.add(keyDescriptor.read(in));
      }
      return list;
    }
  }
);
}
