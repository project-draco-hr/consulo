{
  final boolean doProgressThing;
  final int size;
  r.lock();
  try {
    size=myFutureInvalidations.size();
    if (size == 0)     return;
    doProgressThing=size > 1 && ApplicationManager.getApplication().isDispatchThread() && !Thread.holdsLock(PsiLock.LOCK);
  }
  finally {
    r.unlock();
  }
  final Task.Modal task=new Task.Modal(null,"Invalidating Index Entries",false){
    public void run(    @NotNull final ProgressIndicator indicator){
      indicator.setText("");
      int count=0;
      while (true) {
        InvalidationTask r;
        w.lock();
        try {
          r=myFutureInvalidations.poll();
        }
  finally {
          w.unlock();
        }
        if (r == null)         return;
        indicator.setFraction(((double)count++) / size);
        indicator.setText2(r.getSubj().getPresentableUrl());
        r.run();
      }
    }
  }
;
  if (doProgressThing) {
    task.queue();
  }
 else {
    ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
    task.run(indicator != null ? indicator : new EmptyProgressIndicator());
  }
}
