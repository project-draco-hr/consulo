{
  if (subTags.length == 0) {
    return Collections.emptyList();
  }
  final DomGenericInfoEx info=handler.getGenericInfo();
  final Set<XmlName> usedNames=new THashSet<XmlName>();
  List<? extends DomCollectionChildDescription> collectionChildrenDescriptions=info.getCollectionChildrenDescriptions();
  for (int i=0, size=collectionChildrenDescriptions.size(); i < size; i++) {
    DomCollectionChildDescription description=collectionChildrenDescriptions.get(i);
    usedNames.add(description.getXmlName());
  }
  List<? extends DomFixedChildDescription> fixedChildrenDescriptions=info.getFixedChildrenDescriptions();
  for (int i=0, size=fixedChildrenDescriptions.size(); i < size; i++) {
    DomFixedChildDescription description=fixedChildrenDescriptions.get(i);
    usedNames.add(description.getXmlName());
  }
  return ContainerUtil.findAll(subTags,new Condition<XmlTag>(){
    public boolean value(    final XmlTag tag){
      if (StringUtil.isEmpty(tag.getName()))       return false;
      for (      final XmlName name : usedNames) {
        if (isNameSuitable(name,tag,handler,file)) {
          return false;
        }
      }
      return true;
    }
  }
);
}
