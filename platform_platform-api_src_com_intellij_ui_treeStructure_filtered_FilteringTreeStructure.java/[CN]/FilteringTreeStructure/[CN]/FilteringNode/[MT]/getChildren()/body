{
  List<FilteringNode> nodes=myNodesCache.get(this);
  if (nodes == null) {
    return myDelegate instanceof SimpleNode ? ContainerUtil.map(((SimpleNode)myDelegate).getChildren(),new Function<SimpleNode,SimpleNode>(){
      @Override public SimpleNode fun(      SimpleNode node){
        return new FilteringNode(FilteringNode.this,node);
      }
    }
,NO_CHILDREN) : NO_CHILDREN;
  }
  ArrayList<FilteringNode> result=new ArrayList<FilteringNode>();
  for (  FilteringNode node : nodes) {
    if (node.state == State.VISIBLE) {
      result.add(node);
    }
  }
  return result.toArray(new FilteringNode[result.size()]);
}
