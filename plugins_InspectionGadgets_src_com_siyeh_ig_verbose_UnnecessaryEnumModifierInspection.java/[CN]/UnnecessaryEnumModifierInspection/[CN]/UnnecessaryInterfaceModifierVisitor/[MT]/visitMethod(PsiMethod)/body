{
  if (!method.isConstructor()) {
    return;
  }
  if (!method.hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null) {
    return;
  }
  if (!aClass.isEnum()) {
    return;
  }
  final PsiModifierList modifiers=method.getModifierList();
  if (modifiers == null) {
    return;
  }
  final PsiElement[] children=modifiers.getChildren();
  for (int i=0; i < children.length; i++) {
    final PsiElement child=children[i];
    final String text=child.getText();
    if (PsiModifier.PRIVATE.equals(text)) {
      registerError(child);
    }
  }
}
