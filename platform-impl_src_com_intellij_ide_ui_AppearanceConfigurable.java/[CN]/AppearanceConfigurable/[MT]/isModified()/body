{
  UISettings settings=UISettings.getInstance();
  boolean isModified=false;
  isModified|=!Comparing.equal(myComponent.myFontCombo.getSelectedItem(),settings.FONT_FACE);
  isModified|=!Comparing.equal(myComponent.myFontSizeCombo.getEditor().getItem(),Integer.toString(settings.FONT_SIZE));
  isModified|=myComponent.myAnimateWindowsCheckBox.isSelected() != settings.ANIMATE_WINDOWS;
  isModified|=myComponent.myWindowShortcutsCheckBox.isSelected() != settings.SHOW_WINDOW_SHORTCUTS;
  isModified|=myComponent.myShowToolStripesCheckBox.isSelected() == settings.HIDE_TOOL_STRIPES;
  isModified|=myComponent.myCbDisplayIconsInMenu.isSelected() != settings.SHOW_ICONS_IN_MENUS;
  isModified|=myComponent.myShowMemoryIndicatorCheckBox.isSelected() != settings.SHOW_MEMORY_INDICATOR;
  isModified|=myComponent.myCycleScrollingCheckBox.isSelected() != settings.CYCLE_SCROLLING;
  isModified|=myComponent.myOverrideLAFFonts.isSelected() != settings.OVERRIDE_NONIDEA_LAF_FONTS;
  isModified|=myComponent.myDisableMnemonics.isSelected() != settings.DISABLE_MNEMONICS;
  isModified|=myComponent.myHideIconsInQuickNavigation.isSelected() != settings.SHOW_ICONS_IN_QUICK_NAVIGATION;
  isModified|=myComponent.myMoveMouseOnDefaultButtonCheckBox.isSelected() != settings.MOVE_MOUSE_ON_DEFAULT_BUTTON;
  isModified|=!Comparing.equal(myComponent.myLafComboBox.getSelectedItem(),LafManager.getInstance().getCurrentLookAndFeel());
  if (WindowManagerEx.getInstanceEx().isAlphaModeSupported()) {
    isModified|=myComponent.myEnableAlphaModeCheckBox.isSelected() != settings.ENABLE_ALPHA_MODE;
    int delay=-1;
    try {
      delay=Integer.parseInt(myComponent.myAlphaModeDelayTextField.getText());
    }
 catch (    NumberFormatException ignored) {
    }
    if (delay != -1) {
      isModified|=delay != settings.ALPHA_MODE_DELAY;
    }
    float ratio=myComponent.myAlphaModeRatioSlider.getValue() / 100f;
    isModified|=ratio != settings.ALPHA_MODE_RATIO;
  }
  return isModified;
}
