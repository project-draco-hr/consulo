{
  final String text=myEditor.getDocument().getText();
  if ("".equals(text.trim())) {
    return;
  }
  myLastParsedText=text;
  final PsiManager psiManager=PsiManager.getInstance(myProject);
  PsiElement rootElement=null;
  try {
    PsiElementFactory factory=JavaPsiFacade.getInstance(psiManager.getProject()).getElementFactory();
    if (myRbMethod.isSelected()) {
      rootElement=factory.createMethodFromText(text,null);
    }
 else     if (myRbCodeBlock.isSelected()) {
      rootElement=factory.createCodeBlockFromText(text,null);
    }
 else     if (myRbExpression.isSelected()) {
      rootElement=factory.createExpressionFromText(text,null);
    }
 else {
      for (int i=0; i < myFileTypeButtons.length; i++) {
        JRadioButton fileTypeButton=myFileTypeButtons[i];
        if (fileTypeButton.isSelected()) {
          rootElement=PsiFileFactory.getInstance(myProject).createFileFromText("Dummy." + myFileTypes[i].getDefaultExtension(),text);
        }
      }
    }
  }
 catch (  IncorrectOperationException e1) {
    rootElement=null;
    Messages.showMessageDialog(myProject,e1.getMessage(),"Error",Messages.getErrorIcon());
  }
  ViewerTreeStructure structure=(ViewerTreeStructure)myTreeBuilder.getTreeStructure();
  structure.setRootPsiElement(rootElement);
  myTreeBuilder.updateFromRoot();
  myTree.setRootVisible(true);
  myTree.expandRow(0);
  myTree.setRootVisible(false);
}
