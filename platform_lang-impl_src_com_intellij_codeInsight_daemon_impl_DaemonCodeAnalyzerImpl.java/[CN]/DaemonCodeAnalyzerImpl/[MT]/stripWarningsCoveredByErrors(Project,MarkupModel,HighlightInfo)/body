{
  final SeverityRegistrar severityRegistrar=SeverityRegistrar.getInstance(project);
  final Set<HighlightInfo> covered=new THashSet<HighlightInfo>();
  final boolean addingError=severityRegistrar.compare(HighlightSeverity.ERROR,toAdd.getSeverity()) <= 0;
  boolean toAddIsVisible=processHighlights(markup.getDocument(),project,null,toAdd.getActualStartOffset(),toAdd.getActualEndOffset(),new Processor<HighlightInfo>(){
    public boolean process(    HighlightInfo interval){
      boolean isError=severityRegistrar.compare(HighlightSeverity.ERROR,interval.getSeverity()) <= 0;
      if (addingError && !isError && isCoveredBy(interval,toAdd)) {
        covered.add(interval);
      }
      return addingError || !isError || !isCoveredBy(toAdd,interval);
    }
  }
);
  if (toAddIsVisible) {
  }
 else {
    markup.removeHighlighter(toAdd.highlighter);
  }
  for (  HighlightInfo warning : covered) {
    RangeHighlighter highlighter=warning.highlighter;
    if (highlighter != null) {
      markup.removeHighlighter(highlighter);
    }
  }
}
