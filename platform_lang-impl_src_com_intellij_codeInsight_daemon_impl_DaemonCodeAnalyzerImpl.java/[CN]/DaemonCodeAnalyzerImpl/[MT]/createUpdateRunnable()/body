{
  return new Runnable(){
    public void run(){
      if (!myUpdateByTimerEnabled)       return;
      if (PowerSaveMode.isEnabled())       return;
      if (myDisposed || !myProject.isInitialized())       return;
      final Collection<FileEditor> activeEditors=myDaemonListeners.getSelectedEditors();
      if (activeEditors.isEmpty())       return;
      Map<FileEditor,HighlightingPass[]> passes=new THashMap<FileEditor,HighlightingPass[]>(activeEditors.size());
      for (      FileEditor fileEditor : activeEditors) {
        BackgroundEditorHighlighter highlighter=fileEditor.getBackgroundHighlighter();
        if (highlighter != null) {
          HighlightingPass[] highlightingPasses=highlighter.createPassesForEditor();
          passes.put(fileEditor,highlightingPasses);
        }
      }
      cancelUpdateProgress(true,"Cancel by alarm");
      myAlarm.cancelAllRequests();
      DaemonProgressIndicator progress;
synchronized (DaemonCodeAnalyzerImpl.this) {
        progress=new DaemonProgressIndicator();
        progress.start();
        myUpdateProgress=progress;
      }
      myPassExecutorService.submitPasses(passes,progress,Job.DEFAULT_PRIORITY);
    }
  }
;
}
