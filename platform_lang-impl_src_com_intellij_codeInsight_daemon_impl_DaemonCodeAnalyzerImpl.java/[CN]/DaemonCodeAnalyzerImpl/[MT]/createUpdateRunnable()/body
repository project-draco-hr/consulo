{
  return new Runnable(){
    @Override public void run(){
      ApplicationManager.getApplication().assertIsDispatchThread();
      if (myDisposed || !myProject.isInitialized() || PowerSaveMode.isEnabled()) {
        return;
      }
      if (HeavyProcessLatch.INSTANCE.isRunning()) {
        final Disposable removeListenerDisposable=Disposer.newDisposable();
        Disposer.register(DaemonCodeAnalyzerImpl.this,removeListenerDisposable);
        HeavyProcessLatch.HeavyProcessListener heavyProcessListener=new HeavyProcessLatch.HeavyProcessListener(){
          @Override public void processStarted(){
          }
          @Override public void processFinished(){
            Disposer.dispose(removeListenerDisposable);
            myAlarm.addRequest(myUpdateRunnable,Math.max(mySettings.AUTOREPARSE_DELAY,100),ModalityState.NON_MODAL);
          }
        }
;
        HeavyProcessLatch.INSTANCE.addListener(removeListenerDisposable,heavyProcessListener);
        if (!HeavyProcessLatch.INSTANCE.isRunning()) {
          heavyProcessListener.processFinished();
        }
        return;
      }
      Editor activeEditor=FileEditorManager.getInstance(myProject).getSelectedTextEditor();
      if (activeEditor == null) {
        submitPassesRunnable.run();
      }
 else {
        ((PsiDocumentManagerBase)myPsiDocumentManager).cancelAndRunWhenAllCommitted("start daemon when all committed",submitPassesRunnable);
      }
    }
    @Override public String toString(){
      return "Daemon update runnable";
    }
  }
;
}
