{
  myProject=project;
  mySettings=daemonCodeAnalyzerSettings;
  myEditorTracker=editorTracker;
  myLastSettings=(DaemonCodeAnalyzerSettings)mySettings.clone();
  myFileStatusMap=new FileStatusMap(myProject);
  myPassExecutorService=new PassExecutorService(myProject){
    @Override protected void afterApplyInformationToEditor(    final TextEditorHighlightingPass pass,    @NotNull final FileEditor fileEditor,    final ProgressIndicator updateProgress){
      if (fileEditor instanceof TextEditor) {
        log(updateProgress,pass,"Apply ");
        Editor editor=((TextEditor)fileEditor).getEditor();
        repaintErrorStripeRenderer(editor);
      }
    }
    @Override protected boolean isDisposed(){
      return myDisposed || super.isDisposed();
    }
  }
;
  Disposer.register(project,myPassExecutorService);
  Disposer.register(project,myFileStatusMap);
  DaemonProgressIndicator.setDebug(LOG.isDebugEnabled());
}
