{
  final ViewsGeneralSettings generalSettings=ViewsGeneralSettings.getInstance();
  final NodeRendererSettings rendererSettings=NodeRendererSettings.getInstance();
  try {
    DebuggerSettings.getInstance().VALUE_LOOKUP_DELAY=Integer.parseInt(myValueTooltipDelayField.getText().trim());
  }
 catch (  NumberFormatException ignored) {
  }
  generalSettings.AUTOSCROLL_TO_NEW_LOCALS=myCbAutoscroll.isSelected();
  rendererSettings.setAlternateCollectionViewsEnabled(myCbEnableAlternateViews.isSelected());
  generalSettings.HIDE_NULL_ARRAY_ELEMENTS=myCbHideNullArrayElements.isSelected();
  final ClassRenderer classRenderer=rendererSettings.getClassRenderer();
  classRenderer.SORT_ASCENDING=myCbSort.isSelected();
  classRenderer.SHOW_STATIC=myCbShowStatic.isSelected();
  classRenderer.SHOW_STATIC_FINAL=myCbShowStaticFinalFields.isSelectedWhenSelectable();
  classRenderer.SHOW_SYNTHETICS=myCbShowSyntheticFields.isSelected();
  classRenderer.SHOW_DECLARED_TYPE=myCbShowDeclaredType.isSelected();
  classRenderer.SHOW_FQ_TYPE_NAMES=myCbShowFQNames.isSelected();
  classRenderer.SHOW_OBJECT_ID=myCbShowObjectId.isSelected();
  final ToStringRenderer toStringRenderer=rendererSettings.getToStringRenderer();
  toStringRenderer.setEnabled(myCbEnableToString.isSelected());
  toStringRenderer.setUseClassFilters(myRbFromList.isSelected());
  toStringRenderer.setClassFilters(myToStringFilterEditor.getFilters());
  myAutoTooltip.save();
  myArrayRendererConfigurable.apply();
  rendererSettings.fireRenderersChanged();
}
