{
  final DebugProcess debugProcess=evaluationContext.getDebugProcess();
  if (originalValue == null) {
    return null;
  }
  try {
    final ExpressionEvaluator evaluator=cachedEvaluator.getEvaluator(debugProcess.getProject());
    if (!debugProcess.isAttached()) {
      throw EvaluateExceptionUtil.PROCESS_EXITED;
    }
    final EvaluationContext thisEvaluationContext=evaluationContext.createEvaluationContext(originalValue);
    return evaluator.evaluate(thisEvaluationContext);
  }
 catch (  final EvaluateException ex) {
    throw new EvaluateException(DebuggerBundle.message("error.unable.to.evaluate.expression") + " " + ex.getMessage(),ex);
  }
}
