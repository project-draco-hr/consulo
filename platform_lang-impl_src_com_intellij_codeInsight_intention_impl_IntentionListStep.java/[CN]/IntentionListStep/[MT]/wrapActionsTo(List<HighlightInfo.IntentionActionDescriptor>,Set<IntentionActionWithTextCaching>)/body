{
  final int caretOffset=myEditor.getCaretModel().getOffset();
  final int fileOffset=caretOffset > 0 && caretOffset == myFile.getTextLength() ? caretOffset - 1 : caretOffset;
  PsiElement element;
  if (myFile instanceof PsiCompiledElement) {
    element=myFile;
  }
 else   if (PsiDocumentManager.getInstance(myProject).isUncommited(myEditor.getDocument())) {
    FileViewProvider viewProvider=myFile.getViewProvider();
    element=viewProvider.findElementAt(fileOffset,viewProvider.getBaseLanguage());
  }
 else {
    element=InjectedLanguageUtil.findElementAtNoCommit(myFile,fileOffset);
  }
  boolean result=removeInvalidActions(cachedActions,element);
  for (  HighlightInfo.IntentionActionDescriptor descriptor : descriptors) {
    IntentionAction action=descriptor.getAction();
    if (!isAvailable(action,element))     continue;
    if (element == null)     continue;
    IntentionActionWithTextCaching cachedAction=wrapAction(element,descriptor);
    result&=!cachedActions.add(cachedAction);
  }
  return result;
}
