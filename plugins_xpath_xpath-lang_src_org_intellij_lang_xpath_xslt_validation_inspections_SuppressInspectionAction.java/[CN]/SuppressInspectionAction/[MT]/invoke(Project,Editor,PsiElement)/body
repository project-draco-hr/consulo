{
  final XmlTag anchor=getAnchor(element);
  if (anchor == null)   return;
  PsiElement prevSibling=anchor.getPrevSibling();
  while (prevSibling instanceof PsiWhiteSpace || prevSibling instanceof XmlText) {
    prevSibling=prevSibling.getPrevSibling();
  }
  if (prevSibling instanceof XmlProlog) {
    prevSibling=prevSibling.getLastChild();
    if (prevSibling != null && !(prevSibling instanceof XmlComment)) {
      prevSibling=PsiTreeUtil.getPrevSiblingOfType(prevSibling,XmlComment.class);
    }
  }
  if (prevSibling instanceof XmlComment) {
    final XmlComment comment=(XmlComment)prevSibling;
    final String text=XmlUtil.getCommentText(comment);
    if (text != null && InspectionUtil.SUPPRESSION_PATTERN.matcher(text).matches()) {
      final String s=text.trim() + ", " + myToolId;
      final XmlComment newComment=createComment(project,s);
      PsiManager.getInstance(project).getCodeStyleManager().reformat(comment.replace(newComment));
    }
 else {
      addNoinspectionComment(project,anchor);
    }
  }
 else {
    addNoinspectionComment(project,anchor);
  }
}
