{
  Trinity<Long,Pattern,Collection<String>> index=myXmlIndex;
  if (index == null || myConfiguration.getModificationCount() != index.first.longValue()) {
    final Map<ElementPattern<?>,BaseInjection> map=new THashMap<ElementPattern<?>,BaseInjection>();
    for (    BaseInjection injection : myConfiguration.getInjections(XmlLanguageInjectionSupport.XML_SUPPORT_ID)) {
      for (      InjectionPlace place : injection.getInjectionPlaces()) {
        if (!place.isEnabled() || place.getElementPattern() == null)         continue;
        map.put(place.getElementPattern(),injection);
      }
    }
    final Collection<String> stringSet=PatternValuesIndex.buildStringIndex(map.keySet());
    index=Trinity.create(myConfiguration.getModificationCount(),buildPattern(stringSet),stringSet);
    myXmlIndex=index;
  }
  return index;
}
