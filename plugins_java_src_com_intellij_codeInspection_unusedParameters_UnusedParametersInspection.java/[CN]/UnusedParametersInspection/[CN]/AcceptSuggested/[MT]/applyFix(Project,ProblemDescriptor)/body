{
  if (!FileModificationService.getInstance().preparePsiElementForWrite(descriptor.getPsiElement()))   return;
  final PsiMethod psiMethod=PsiTreeUtil.getParentOfType(descriptor.getPsiElement(),PsiMethod.class);
  if (psiMethod != null) {
    final ArrayList<PsiElement> psiParameters=new ArrayList<PsiElement>();
    final RefElement refMethod=myManager != null ? myManager.getReference(psiMethod) : null;
    if (refMethod != null) {
      for (      final RefParameter refParameter : getUnusedParameters((RefMethod)refMethod)) {
        psiParameters.add(refParameter.getElement());
      }
    }
 else {
      final PsiParameter[] parameters=psiMethod.getParameterList().getParameters();
      for (      PsiParameter parameter : parameters) {
        if (Comparing.strEqual(parameter.getName(),myHint)) {
          psiParameters.add(parameter);
          break;
        }
      }
    }
    final PsiModificationTracker tracker=psiMethod.getManager().getModificationTracker();
    final long startModificationCount=tracker.getModificationCount();
    removeUnusedParameterViaChangeSignature(psiMethod,psiParameters);
    if (refMethod != null && startModificationCount != tracker.getModificationCount()) {
      myProcessor.ignoreElement(refMethod);
    }
  }
}
