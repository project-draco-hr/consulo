{
  @MethodCandidateInfo.ApplicabilityLevelConstant int maxApplicabilityLevel=0;
  boolean toFilter=false;
  for (  CandidateInfo conflict : conflicts) {
    @MethodCandidateInfo.ApplicabilityLevelConstant final int level=((MethodCandidateInfo)conflict).getApplicabilityLevel();
    if (maxApplicabilityLevel > 0 && maxApplicabilityLevel != level) {
      toFilter=true;
    }
    if (level > maxApplicabilityLevel) {
      maxApplicabilityLevel=level;
    }
  }
  if (toFilter) {
    for (Iterator<CandidateInfo> iterator=conflicts.iterator(); iterator.hasNext(); ) {
      CandidateInfo info=iterator.next();
      final int level=((MethodCandidateInfo)info).getApplicabilityLevel();
      if (level < maxApplicabilityLevel) {
        iterator.remove();
      }
    }
  }
  return maxApplicabilityLevel;
}
