{
  if (resolved1.containsAll(resolved2)) {
    resolved1.removeAll(resolved2);
    for (Iterator<PsiClass> iterator=resolved1.iterator(); iterator.hasNext(); ) {
      PsiClass psiClass=iterator.next();
      for (      PsiClass aClass : resolved2) {
        if (InheritanceUtil.isInheritorOrSelf(aClass,psiClass,true)) {
          iterator.remove();
          break;
        }
      }
    }
    if (!resolved1.isEmpty())     return preferred;
    return Specifics.NEITHER;
  }
  return null;
}
