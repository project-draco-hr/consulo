{
  lookup.refreshUi(false,false);
  CompletionProcess completion=CompletionService.getCompletionService().getCurrentCompletion();
  if (completion == null || !completion.isAutopopupCompletion()) {
    return false;
  }
  if (lookup.isSelectionTouched()) {
    return false;
  }
  final PsiFile file=lookup.getPsiFile();
  if (file == null)   return false;
  final Editor editor=lookup.getEditor();
  PsiDocumentManager.getInstance(file.getProject()).commitDocument(editor.getDocument());
  final LiveTemplateLookupElement liveTemplateLookup=ContainerUtil.findInstance(lookup.getItems(),LiveTemplateLookupElement.class);
  if (liveTemplateLookup == null) {
    final CustomTemplateCallback callback=new CustomTemplateCallback(editor,file,false);
    for (    CustomLiveTemplate customLiveTemplate : CustomLiveTemplate.EP_NAME.getExtensions()) {
      if (customLiveTemplate instanceof CustomLiveTemplateBase) {
        final int offset=editor.getCaretModel().getOffset();
        if (customLiveTemplate.getShortcut() == shortcutChar && TemplateManagerImpl.isApplicable(customLiveTemplate,editor,file) && ((CustomLiveTemplateBase)customLiveTemplate).hasCompletionItem(file,offset)) {
          return customLiveTemplate.computeTemplateKey(callback) != null;
        }
      }
    }
    final int end=editor.getCaretModel().getOffset();
    final int start=lookup.getLookupStart();
    final String prefix=!lookup.getItems().isEmpty() ? editor.getDocument().getText(TextRange.create(start,end)) : ListTemplatesHandler.getPrefix(editor.getDocument(),end,false);
    if (TemplateSettings.getInstance().getTemplates(prefix).isEmpty()) {
      return false;
    }
    for (    TemplateImpl template : SurroundWithTemplateHandler.getApplicableTemplates(editor,file,false)) {
      if (prefix.equals(template.getKey()) && shortcutChar == TemplateSettings.getInstance().getShortcutChar(template)) {
        return true;
      }
    }
    return false;
  }
  return liveTemplateLookup.getTemplateShortcut() == shortcutChar;
}
