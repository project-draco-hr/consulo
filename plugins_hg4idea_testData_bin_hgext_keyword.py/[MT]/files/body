def files(ui, repo, *pats, **opts):
    'show files configured for keyword expansion\n\n    List which files in the working directory are matched by the\n    [keyword] configuration patterns.\n\n    Useful to prevent inadvertent keyword expansion and to speed up\n    execution by including only files that are actual candidates for\n    expansion.\n\n    See "hg help keyword" on how to construct patterns both for\n    inclusion and exclusion of files.\n\n    With -A/--all and -v/--verbose the codes used to show the status\n    of files are::\n\n      K = keyword expansion candidate\n      k = keyword expansion candidate (not tracked)\n      I = ignored\n      i = ignored (not tracked)\n    '
    kwt = kwtools['templater']
    status = _status(ui, repo, kwt, *pats, **opts)
    cwd = ((pats and repo.getcwd()) or '')
    (modified, added, removed, deleted, unknown, ignored, clean) = status
    files = []
    if ((not (opts.get('unknown') or opts.get('untracked'))) or opts.get('all')):
        files = sorted(((modified + added) + clean))
    wctx = repo[None]
    kwfiles = [f for f in files if kwt.iskwfile(f, wctx.flags)]
    kwunknown = [f for f in unknown if kwt.iskwfile(f, wctx.flags)]
    if ((not opts.get('ignore')) or opts.get('all')):
        showfiles = (kwfiles, kwunknown)
    else:
        showfiles = ([], [])
    if (opts.get('all') or opts.get('ignore')):
        showfiles += ([f for f in files if (f not in kwfiles)], [f for f in unknown if (f not in kwunknown)])
    for (char, filenames) in zip('KkIi', showfiles):
        fmt = (((opts.get('all') or ui.verbose) and ('%s %%s\n' % char)) or '%s\n')
        for f in filenames:
            ui.write((fmt % repo.pathto(f, cwd)))
