def demo(ui, repo, *args, **opts):
    'print [keywordmaps] configuration and an expansion example\n\n    Show current, custom, or default keyword template maps and their\n    expansions.\n\n    Extend the current configuration by specifying maps as arguments\n    and using -f/--rcfile to source an external hgrc file.\n\n    Use -d/--default to disable current configuration.\n\n    See "hg help templates" for information on templates and filters.\n    '

    def demoitems(section, items):
        ui.write(('[%s]\n' % section))
        for (k, v) in sorted(items):
            ui.write(('%s = %s\n' % (k, v)))
    fn = 'demo.txt'
    branchname = 'demobranch'
    tmpdir = tempfile.mkdtemp('', 'kwdemo.')
    ui.note((_('creating temporary repository at %s\n') % tmpdir))
    repo = localrepo.localrepository(ui, tmpdir, True)
    ui.setconfig('keyword', fn, '')
    uikwmaps = ui.configitems('keywordmaps')
    if (args or opts.get('rcfile')):
        ui.status(_('\n\tconfiguration using custom keyword template maps\n'))
        if uikwmaps:
            ui.status(_('\textending current template maps\n'))
        if (opts.get('default') or (not uikwmaps)):
            ui.status(_('\toverriding default template maps\n'))
        if opts.get('rcfile'):
            ui.readconfig(opts.get('rcfile'))
        if args:
            rcmaps = (['[keywordmaps]\n'] + [(a + '\n') for a in args])
            fp = repo.opener('hgrc', 'w')
            fp.writelines(rcmaps)
            fp.close()
            ui.readconfig(repo.join('hgrc'))
        kwmaps = dict(ui.configitems('keywordmaps'))
    elif opts.get('default'):
        ui.status(_('\n\tconfiguration using default keyword template maps\n'))
        kwmaps = kwtemplater.templates
        if uikwmaps:
            ui.status(_('\tdisabling current template maps\n'))
            for (k, v) in kwmaps.iteritems():
                ui.setconfig('keywordmaps', k, v)
    else:
        ui.status(_('\n\tconfiguration using current keyword template maps\n'))
        kwmaps = (dict(uikwmaps) or kwtemplater.templates)
    uisetup(ui)
    reposetup(ui, repo)
    for (k, v) in ui.configitems('extensions'):
        if k.endswith('keyword'):
            extension = ('%s = %s' % (k, v))
            break
    ui.write(('[extensions]\n%s\n' % extension))
    demoitems('keyword', ui.configitems('keyword'))
    demoitems('keywordmaps', kwmaps.iteritems())
    keywords = (('$' + '$\n$'.join(sorted(kwmaps.keys()))) + '$\n')
    repo.wopener(fn, 'w').write(keywords)
    repo.add([fn])
    path = repo.wjoin(fn)
    ui.note((_('\nkeywords written to %s:\n') % path))
    ui.note(keywords)
    ui.note(('\nhg -R "%s" branch "%s"\n' % (tmpdir, branchname)))
    quiet = ui.quiet
    ui.quiet = (not ui.verbose)
    commands.branch(ui, repo, branchname)
    ui.quiet = quiet
    for (name, cmd) in ui.configitems('hooks'):
        if (name.split('.', 1)[0].find('commit') > (-1)):
            repo.ui.setconfig('hooks', name, '')
    ui.note(_('unhooked all commit hooks\n'))
    msg = _('hg keyword configuration and expansion example')
    ui.note(("hg -R '%s' ci -m '%s'\n" % (tmpdir, msg)))
    repo.commit(text=msg)
    ui.status(_('\n\tkeywords expanded\n'))
    ui.write(repo.wread(fn))
    ui.debug(('\nremoving temporary repository %s\n' % tmpdir))
    shutil.rmtree(tmpdir, ignore_errors=True)
