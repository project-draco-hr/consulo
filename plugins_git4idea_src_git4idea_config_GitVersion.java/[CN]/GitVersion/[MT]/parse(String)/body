{
  if (StringUtil.isEmptyOrSpaces(output)) {
    throw new ParseException("Empty git --version output: " + output,0);
  }
  Matcher m=FORMAT.matcher(output.trim());
  if (!m.matches()) {
    throw new ParseException("Unsupported format of git --version output: " + output,0);
  }
  int major=getIntGroup(m,1);
  int minor=getIntGroup(m,2);
  int rev=getIntGroup(m,3);
  int patch=getIntGroup(m,4);
  boolean msys=(m.groupCount() >= 5) && m.group(5) != null && m.group(5).toLowerCase().contains("msysgit");
  Type type;
  if (SystemInfo.isWindows) {
    type=msys ? Type.MSYS : Type.CYGWIN;
  }
 else {
    type=Type.UNIX;
  }
  return new GitVersion(major,minor,rev,patch,type);
}
