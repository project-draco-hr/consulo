{
  final VirtualFile root=fs.createRoot("root");
  VirtualFile f=new WriteAction<VirtualFile>(){
    @Override protected void run(    Result<VirtualFile> result) throws Throwable {
      VirtualFile res=root.createChildData(this,"f");
      result.setResult(res);
    }
  }
.execute().getResultObject();
  final VirtualFileEvent[] events=new VirtualFileEvent[2];
  fs.addVirtualFileListener(new VirtualFileAdapter(){
    @Override public void fileDeleted(    @NotNull VirtualFileEvent e){
      events[0]=e;
    }
    @Override public void beforeFileDeletion(    @NotNull VirtualFileEvent e){
      events[1]=e;
    }
  }
);
  f.delete(this);
  for (int i=0; i < 2; i++) {
    assertNotNull(events[i]);
    assertEquals(f,events[i].getFile());
    assertEquals("f",events[i].getFileName());
    assertEquals(root,events[i].getParent());
  }
}
