{
  super(context);
  myProviders=providers;
  mySequence=sequence;
  myImportTitleLabel.setText(ProjectBundle.message("project.new.wizard.import.title",context.getPresentationName()));
  final DefaultListModel model=new DefaultListModel();
  for (  ProjectImportProvider provider : sorted(providers)) {
    model.addElement(provider);
  }
  myList.setModel(model);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setCellRenderer(new DefaultListCellRenderer(){
    @Override public Component getListCellRendererComponent(    final JList list,    final Object value,    final int index,    final boolean isSelected,    final boolean cellHasFocus){
      final Component rendererComponent=super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      setText(((ProjectImportProvider)value).getName());
      Icon icon=((ProjectImportProvider)value).getIcon();
      setIcon(icon);
      setDisabledIcon(IconLoader.getDisabledIcon(icon));
      return rendererComponent;
    }
  }
);
  myList.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    final ListSelectionEvent e){
      updateSteps();
    }
  }
);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      context.requestNextStep();
      return true;
    }
  }
.installOn(myList);
}
