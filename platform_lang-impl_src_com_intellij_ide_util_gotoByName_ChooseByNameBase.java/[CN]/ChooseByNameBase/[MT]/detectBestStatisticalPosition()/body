{
  int best=0;
  int bestPosition=0;
  int bestMatch=Integer.MIN_VALUE;
  final int count=myListModel.getSize();
  Matcher matcher=buildPatternMatcher(transformPattern(myTextField.getText()));
  final String statContext=statisticsContext();
  for (int i=0; i < count; i++) {
    final Object modelElement=myListModel.getElementAt(i);
    String text=EXTRA_ELEM.equals(modelElement) || NON_PREFIX_SEPARATOR.equals(modelElement) ? null : myModel.getFullName(modelElement);
    if (text != null) {
      String shortName=myModel.getElementName(modelElement);
      int match=shortName != null && matcher instanceof MinusculeMatcher ? ((MinusculeMatcher)matcher).matchingDegree(shortName) : Integer.MIN_VALUE;
      int stats=StatisticsManager.getInstance().getUseCount(new StatisticsInfo(statContext,text));
      if (match > bestMatch || match == bestMatch && stats > best) {
        best=stats;
        bestPosition=i;
        bestMatch=match;
      }
    }
  }
  if (bestPosition < count - 1 && myListModel.getElementAt(bestPosition) == NON_PREFIX_SEPARATOR) {
    bestPosition++;
  }
  return bestPosition;
}
