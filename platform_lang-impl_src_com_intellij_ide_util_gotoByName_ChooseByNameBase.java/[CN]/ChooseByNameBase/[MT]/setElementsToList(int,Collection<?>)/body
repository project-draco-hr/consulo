{
  myListUpdater.cancelAll();
  if (checkDisposed())   return;
  if (elements.isEmpty()) {
    myListModel.clear();
    myTextField.setForeground(JBColor.red);
    myListUpdater.cancelAll();
    hideList();
    clearPostponedOkAction(false);
    return;
  }
  Object[] oldElements=myListModel.toArray();
  Object[] newElements=elements.toArray();
  List<ModelDiff.Cmd> commands=ModelDiff.createDiffCmds(myListModel,oldElements,newElements);
  if (commands == null) {
    myListUpdater.doPostponedOkIfNeeded();
    return;
  }
  myTextField.setForeground(UIUtil.getTextFieldForeground());
  if (commands.isEmpty()) {
    if (pos <= 0) {
      pos=detectBestStatisticalPosition();
    }
    ScrollingUtil.selectItem(myList,Math.min(pos,myListModel.size() - 1));
    myList.setVisibleRowCount(Math.min(VISIBLE_LIST_SIZE_LIMIT,myList.getModel().getSize()));
    showList();
    myTextFieldPanel.repositionHint();
  }
 else {
    showList();
    myListUpdater.appendToModel(commands,pos);
  }
}
