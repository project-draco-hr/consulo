{
  final List<PsiElement> targets=new ArrayList<PsiElement>();
  final List<Usage> usages=new ArrayList<Usage>();
  for (  PsiElement element : prefixMatchElements) {
    if (element.getTextRange() != null) {
      usages.add(new UsageInfo2UsageAdapter(new UsageInfo(element)));
    }
 else {
      targets.add(element);
    }
  }
  for (  PsiElement element : nonPrefixMatchElements) {
    if (element.getTextRange() != null) {
      usages.add(new UsageInfo2UsageAdapter(new UsageInfo(element){
        @Override public boolean isDynamicUsage(){
          return true;
        }
      }
));
    }
 else {
      targets.add(element);
    }
  }
  UsageViewManager.getInstance(myProject).showUsages(targets.isEmpty() ? UsageTarget.EMPTY_ARRAY : PsiElement2UsageTargetAdapter.convert(PsiUtilCore.toPsiElementArray(targets)),usages.toArray(new Usage[usages.size()]),presentation);
}
