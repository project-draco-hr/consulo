{
  if (PlatformDataKeys.HELP_ID.is(dataId)) {
    return myModel.getHelpId();
  }
  if (!myListIsUpToDate) {
    return null;
  }
  if (LangDataKeys.PSI_ELEMENT.is(dataId)) {
    Object element=getChosenElement();
    if (element instanceof PsiElement) {
      return element;
    }
    if (element instanceof DataProvider) {
      return ((DataProvider)element).getData(dataId);
    }
  }
 else   if (LangDataKeys.PSI_ELEMENT_ARRAY.is(dataId)) {
    final List<Object> chosenElements=getChosenElements();
    if (chosenElements != null) {
      List<PsiElement> result=new ArrayList<PsiElement>();
      for (      Object element : chosenElements) {
        if (element instanceof PsiElement) {
          result.add((PsiElement)element);
        }
      }
      return PsiUtilBase.toPsiElementArray(result);
    }
  }
 else   if (PlatformDataKeys.DOMINANT_HINT_AREA_RECTANGLE.is(dataId)) {
    return getBounds();
  }
  return null;
}
