{
  final DebuggerSession session=myDebuggerContext.getDebuggerSession();
  if (session == null) {
    return;
  }
  final Project project=session.getProject();
  for (  final DebuggerTreeNodeImpl node : mySelectedNodes) {
    final NodeDescriptorImpl descriptor=node.getDescriptor();
    try {
      final TextWithImports expression=DebuggerTreeNodeExpression.createEvaluationText(node,myDebuggerContext);
      if (expression != null) {
        DebuggerInvocationUtil.swingInvokeLater(project,new Runnable(){
          public void run(){
            doAddWatch(myWatchPanel,expression,descriptor);
          }
        }
);
      }
    }
 catch (    final EvaluateException e) {
      DebuggerInvocationUtil.swingInvokeLater(project,new Runnable(){
        public void run(){
          Messages.showErrorDialog(project,e.getMessage(),ActionsBundle.actionText(XDebuggerActions.ADD_TO_WATCH));
        }
      }
);
    }
  }
}
