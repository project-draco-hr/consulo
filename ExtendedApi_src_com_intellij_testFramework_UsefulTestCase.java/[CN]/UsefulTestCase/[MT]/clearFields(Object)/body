{
  Class aClass=test.getClass();
  while (aClass != null) {
    for (    final Field field : aClass.getDeclaredFields()) {
      @NonNls final String name=field.getDeclaringClass().getName();
      if (!name.startsWith("junit.framework.") && !name.startsWith("com.intellij.testFramework.")) {
        final int modifiers=field.getModifiers();
        if ((modifiers & Modifier.FINAL) == 0 && (modifiers & Modifier.STATIC) == 0 && !field.getType().isPrimitive()) {
          field.setAccessible(true);
          field.set(test,null);
        }
      }
    }
    aClass=aClass.getSuperclass();
  }
}
