{
  final Project project=PlatformDataKeys.PROJECT.getData(e.getDataContext());
  final Helper helper=HELPERS.get(e.getPlace());
  if (project == null || helper == null) {
    e.getPresentation().setEnabled(false);
    e.getPresentation().setVisible(false);
    return;
  }
  Collection<ProjectStructureNode<?>> nodes=helper.getTargetNodes(e);
  if (nodes != null) {
    filterNodes(nodes);
  }
  helper.updatePresentation(nodes,e.getPresentation());
  if (e.getPresentation().isEnabled()) {
    final GradleTaskManager taskManager=ServiceManager.getService(GradleTaskManager.class);
    if (taskManager != null && taskManager.hasTaskOfTypeInProgress(GradleTaskType.RESOLVE_PROJECT)) {
      e.getPresentation().setEnabled(false);
    }
  }
}
