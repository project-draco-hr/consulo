{
  if (!CodeInsightUtilBase.prepareFileForWrite(file))   return;
  if (editor != null) {
    final int offset=editor.getCaretModel().getOffset();
    final PsiElement psiElement=file.findElementAt(offset);
    if (psiElement != null) {
      final PsiElement xmlText=psiElement.getParent();
      final TextRange textRange=xmlText.getTextRange();
      final int offsetInElement=offset - textRange.getStartOffset();
      final PsiElement containingTag=xmlText.getParent();
      if (containingTag instanceof XmlTag) {
        final XmlTag xmlTag=(XmlTag)containingTag;
        final String s=xmlText.getText();
        final String first=s.substring(0,offsetInElement);
        final String second=s.substring(offsetInElement);
        final String filetext=buildNewText(xmlTag,first,second);
        final XmlFile xmlFile=(XmlFile)PsiFileFactory.getInstance(project).createFileFromText("dummy.xml",XMLLanguage.INSTANCE,filetext);
        final PsiElement parent2=containingTag.getParent();
        final XmlTag tag=xmlFile.getDocument().getRootTag();
        XmlTag last=null;
        final PsiElement[] children=tag.getChildren();
        for (int i=children.length - 1; i >= 0; i--) {
          PsiElement element=children[i];
          if (element instanceof XmlTag) {
            final XmlTag tag1=(XmlTag)parent2.addAfter(element,containingTag);
            if (last == null) {
              last=tag1;
            }
          }
        }
        containingTag.delete();
        editor.getCaretModel().moveToOffset(last.getValue().getTextRange().getStartOffset());
      }
    }
  }
}
