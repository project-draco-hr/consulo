{
  DefaultMutableTreeNode rootNode=new DefaultMutableTreeNode();
  String groupName="";
  DefaultMutableTreeNode groupNode=null;
  for (int i=0; i < myKeys.size(); i++) {
    if (myKeys.get(i) instanceof BooleanOptionKey) {
      BooleanOptionKey key=(BooleanOptionKey)myKeys.get(i);
      String newGroupName=key.groupName;
      if (!newGroupName.equals(groupName) || groupNode == null) {
        groupName=newGroupName;
        groupNode=new DefaultMutableTreeNode(newGroupName);
        rootNode.add(groupNode);
      }
      groupNode.add(new MyToggleTreeNode(key,key.cbName));
    }
 else     if (myKeys.get(i) instanceof IntSelectionOptionKey) {
      IntSelectionOptionKey key=(IntSelectionOptionKey)myKeys.get(i);
      String newGroupName=key.groupName;
      if (!newGroupName.equals(groupName) || groupNode == null) {
        groupName=newGroupName;
        groupNode=new DefaultMutableTreeNode(newGroupName);
        rootNode.add(groupNode);
      }
      MyToggleTreeNode[] nodes=new MyToggleTreeNode[key.rbNames.length];
      for (int j=0; j < nodes.length; j++) {
        nodes[j]=new MyToggleTreeNode(key,key.rbNames[j]);
        groupNode.add(nodes[j]);
      }
      key.setCreatedNodes(nodes);
    }
  }
  DefaultTreeModel model=new DefaultTreeModel(rootNode);
  final Tree optionsTree=new Tree(model);
  TreeUtil.installActions(optionsTree);
  optionsTree.setRootVisible(false);
  optionsTree.putClientProperty("JTree.lineStyle","Angled");
  optionsTree.setShowsRootHandles(true);
  optionsTree.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (!optionsTree.isEnabled())       return;
      if (e.getKeyCode() == KeyEvent.VK_SPACE) {
        TreePath treePath=optionsTree.getLeadSelectionPath();
        selectCheckbox(treePath);
        e.consume();
      }
    }
  }
);
  optionsTree.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (!optionsTree.isEnabled())       return;
      TreePath treePath=optionsTree.getPathForLocation(e.getX(),e.getY());
      selectCheckbox(treePath);
    }
  }
);
  int row=0;
  while (row < optionsTree.getRowCount()) {
    optionsTree.expandRow(row);
    row++;
  }
  return optionsTree;
}
