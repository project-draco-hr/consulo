{
  if (myProject.isDisposed()) {
    return false;
  }
  myClManager=ChangeListManager.getInstance(myProject);
  final DiffProvider diffProvider=myVcs.getDiffProvider();
  if (diffProvider == null)   return false;
  final Collection<FilePath> incomingFiles=myChangesProvider.getIncomingFiles(myLocation);
  boolean anyChanges=false;
  openStreams();
  loadHeader();
  myCurrentRevisions=new FactoryMap<VirtualFile,VcsRevisionNumber>(){
    protected VcsRevisionNumber create(    final VirtualFile key){
      return diffProvider.getCurrentRevision(key);
    }
  }
;
  try {
    final List<IncomingChangeListData> list=loadIncomingChangeListData();
    myDeletedFiles=new HashSet<FilePath>();
    myCreatedFiles=new HashSet<FilePath>();
    for (    IncomingChangeListData data : list) {
      LOG.info("Checking incoming changelist " + data.changeList.getNumber());
      boolean updated=false;
      for (      Change change : data.changeList.getChanges()) {
        if (data.accountedChanges.contains(change))         continue;
        final boolean changeFound=processIncomingChange(change,data,incomingFiles);
        if (changeFound) {
          data.accountedChanges.add(change);
        }
        updated|=changeFound;
      }
      if (updated) {
        anyChanges=true;
        saveIncoming(data);
      }
    }
    if (anyChanges) {
      writeHeader();
    }
  }
  finally {
    closeStreams();
  }
  return anyChanges;
}
