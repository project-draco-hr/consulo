{
  myProject=project;
  myContentManager=contentManager;
  myShelveChangesManager=shelveChangesManager;
  bus.connect().subscribe(ShelveChangesManager.SHELF_TOPIC,new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      myUpdatePending=true;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          updateChangesContent();
        }
      }
,ModalityState.NON_MODAL);
    }
  }
);
  myTree.setRootVisible(false);
  myTree.setShowsRootHandles(true);
  myTree.setCellRenderer(new ShelfTreeCellRenderer(project));
  new TreeLinkMouseListener(new ShelfTreeCellRenderer(project)).install(myTree);
  ActionManager.getInstance().getAction("ChangesView.Diff").registerCustomShortcutSet(CommonShortcuts.getDiff(),myTree);
  PopupHandler.installPopupHandler(myTree,"ShelvedChangesPopupMenu",ActionPlaces.UNKNOWN);
  myTree.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    final MouseEvent e){
      if (e.getClickCount() != 2)       return;
      if (myTree.getPathForLocation(e.getX(),e.getY()) == null)       return;
      final TreePath selectionPath=myTree.getSelectionPath();
      if (selectionPath == null)       return;
      final Object lastPathComponent=selectionPath.getLastPathComponent();
      if (((TreeNode)lastPathComponent).isLeaf()) {
        DataContext context=DataManager.getInstance().getDataContext(myTree);
        final Change[] changes=VcsDataKeys.CHANGES.getData(context);
        if (changes != null && changes.length > 0) {
          ShowDiffAction.showDiffForChange(changes,0,myProject);
        }
        e.consume();
      }
    }
  }
);
}
