{
  final VirtualFile canonicalFile=getCanonicalFile(file);
  final VFileContentChangeEvent event=new VFileContentChangeEvent(requestor,canonicalFile,canonicalFile.getModificationStamp(),modStamp,false);
  final List<VFileContentChangeEvent> events=Collections.singletonList(event);
  final BulkFileListener publisher=myEventsBus.syncPublisher(VirtualFileManager.VFS_CHANGES);
  publisher.before(events);
  return new ByteArrayOutputStream(){
    @Override public void close() throws IOException {
      super.close();
      NewVirtualFileSystem delegate=getDelegate(canonicalFile);
      final OutputStream outputStream=delegate.getOutputStream(canonicalFile,requestor,modStamp,timeStamp);
      final DupOutputStream sink=new DupOutputStream(new BufferedOutputStream(writeContent(canonicalFile,delegate.isReadOnly())),outputStream){
        @Override public void close() throws IOException {
          try {
            super.close();
          }
  finally {
            executeTouch(canonicalFile,false,event.getModificationStamp());
            publisher.after(events);
          }
        }
      }
;
      try {
        sink.write(buf,0,count);
      }
  finally {
        sink.close();
      }
    }
  }
;
}
