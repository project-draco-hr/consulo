{
  if (root.canRepresent(element))   return new AsyncResult.Done<AbstractTreeNode>(root);
  if (root instanceof ProjectViewNode && file != null && !((ProjectViewNode)root).contains(file)) {
    return new AsyncResult.Rejected<AbstractTreeNode>();
  }
  final AsyncResult<AbstractTreeNode> async=new AsyncResult<AbstractTreeNode>();
  expand(root,new Runnable(){
    public void run(){
      final DefaultMutableTreeNode rootNode=getNodeForElement(root);
      if (rootNode != null) {
        final List<AbstractTreeNode> kids=collectChildren(rootNode);
        expandChild(kids,0,nonStopCondition,file,element,async);
      }
 else {
        async.setRejected();
      }
    }
  }
);
  return async;
}
