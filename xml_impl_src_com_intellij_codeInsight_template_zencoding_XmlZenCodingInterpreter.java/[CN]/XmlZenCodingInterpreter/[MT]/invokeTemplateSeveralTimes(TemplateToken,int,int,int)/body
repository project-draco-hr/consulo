{
  final Object key=new Object();
  myCallback.fixStartOfTemplate(key);
  for (int i=startIndex; i < count; i++) {
    final int finalI=i;
    TemplateInvokationListener listener=new TemplateInvokationListener(){
      public void finished(      boolean inSeparateEvent){
        myState=State.WORD;
        if (myCallback.getOffset() != myCallback.getEndOfTemplate(key)) {
          myCallback.fixEndOffset();
        }
        myCallback.gotoEndOfTemplate(key);
        if (inSeparateEvent) {
          if (finalI + 1 < count) {
            invokeTemplateSeveralTimes(templateToken,finalI + 1,count,globalIndex);
          }
 else {
            invoke(globalIndex + 1);
          }
        }
      }
    }
;
    if (!invokeTemplate(templateToken,myCallback,listener,i)) {
      return false;
    }
  }
  return true;
}
