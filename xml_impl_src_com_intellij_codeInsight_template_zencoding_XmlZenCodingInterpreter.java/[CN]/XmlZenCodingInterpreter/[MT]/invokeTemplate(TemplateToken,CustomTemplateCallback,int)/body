{
  List<Pair<String,String>> attr2value=new ArrayList<Pair<String,String>>(token.getAttribute2Value());
  if (callback.isLiveTemplateApplicable(token.getKey())) {
    invokeExistingLiveTemplate(token,callback,numberInIteration,attr2value);
  }
 else {
    TemplateImpl template=new TemplateImpl("","");
    template.addTextSegment('<' + token.getKey());
    if (attr2value.size() > 0) {
      template.addVariable(ATTRS,"","",false);
      template.addVariableSegment(ATTRS);
    }
    template.addTextSegment(">");
    if (XmlZenCodingTemplate.isTrueXml(callback) || !HtmlUtil.isSingleHtmlTag(token.getKey())) {
      template.addVariableSegment(TemplateImpl.END);
      template.addTextSegment("</" + token.getKey() + ">");
    }
    template.setToReformat(true);
    Map<String,String> predefinedValues=buildPredefinedValues(attr2value,numberInIteration);
    callback.expandTemplate(template,predefinedValues);
  }
}
