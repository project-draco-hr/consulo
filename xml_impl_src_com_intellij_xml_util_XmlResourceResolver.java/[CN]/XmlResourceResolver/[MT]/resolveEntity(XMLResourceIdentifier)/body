{
  String publicId=xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace();
  PsiFile psiFile=resolve(xmlResourceIdentifier.getBaseSystemId(),publicId);
  if (psiFile == null && xmlResourceIdentifier.getBaseSystemId() != null) {
    psiFile=ExternalResourceManager.getInstance().getResourceLocation(xmlResourceIdentifier.getBaseSystemId(),myFile,null);
  }
  if (psiFile == null && xmlResourceIdentifier.getLiteralSystemId() != null && xmlResourceIdentifier.getNamespace() != null) {
    psiFile=resolve(xmlResourceIdentifier.getBaseSystemId(),publicId=xmlResourceIdentifier.getNamespace());
  }
  if (psiFile == null) {
    if (publicId != null && publicId.indexOf(":/") != -1) {
      myErrorReporter.processError(new SAXParseException(XmlBundle.message("xml.validate.external.resource.is.not.registered",publicId),publicId,null,0,0),false);
      final XMLInputSource source=new XMLInputSource(xmlResourceIdentifier);
      source.setPublicId(publicId);
      source.setCharacterStream(new StringReader(""));
      return source;
    }
    return null;
  }
  XMLInputSource source=new XMLInputSource(xmlResourceIdentifier);
  if (xmlResourceIdentifier.getLiteralSystemId() == null) {
    VirtualFile virtualFile=psiFile.getVirtualFile();
    final String url=VfsUtil.fixIDEAUrl(virtualFile.getUrl());
    source.setBaseSystemId(url);
    source.setSystemId(url);
  }
  source.setPublicId(publicId);
  source.setCharacterStream(new StringReader(psiFile.getText()));
  return source;
}
