{
  PathMacroManager.getInstance(myComponentManager).expandPaths(root);
  int originalVersion=0;
  try {
    originalVersion=Integer.parseInt(root.getAttributeValue(VERSION_OPTION));
  }
 catch (  NumberFormatException e) {
    LOG.info(e);
  }
  if (originalVersion < 1) {
    Convertor01.execute(root);
  }
  if (originalVersion < 2) {
    Convertor12.execute(root);
  }
  if (originalVersion < 3) {
    Convertor23.execute(root);
  }
  if (originalVersion < 4) {
    Convertor34.execute(root,filePath,getConversionProblemsStorage());
  }
  if (getOriginalVersion() == -1)   myOriginalVersion=originalVersion;
  myOriginalVersion=Math.min(getOriginalVersion(),originalVersion);
  String relative=root.getAttributeValue(RELATIVE_PATHS_OPTION);
  if (relative != null) {
    setSavePathsRelative(Boolean.parseBoolean(relative));
  }
  List children=root.getChildren(ELEMENT_COMPONENT);
  for (  final Object aChildren : children) {
    Element element=(Element)aChildren;
    String name=element.getAttributeValue(ATTRIBUTE_NAME);
    if (name == null || name.length() == 0) {
      String className=element.getAttributeValue(ATTRIBUTE_CLASS);
      if (className == null) {
        throw new InvalidDataException();
      }
      name=className.substring(className.lastIndexOf('.') + 1);
    }
    addConfiguration(name,element);
    myConfigurationNameToFileName.put(name,filePath);
  }
}
