{
  String filePath=configFile != null ? configFile.getPath() : null;
  Element root;
  if (targetRoot != null) {
    root=targetRoot;
  }
 else {
    root=new Element(getRootNodeName());
  }
  root.setAttribute(VERSION_OPTION,Integer.toString(ProjectManagerImpl.CURRENT_FORMAT_VERSION));
  root.setAttribute(RELATIVE_PATHS_OPTION,Boolean.toString(isSavePathsRelative()));
  List<Element> newContents=new ArrayList<Element>();
  if (targetRoot == null) {
    final Set<String> result;
    result=getConfigurationNames();
    final Set<String> names=result;
    for (    String name : names) {
      if (Comparing.equal(myConfigurationNameToFileName.get(name),filePath)) {
        final Element result1;
        result1=getConfiguration(name);
        final Element e=result1;
        if (e != null) {
          newContents.add((Element)e.clone());
        }
      }
    }
  }
  final Class[] componentInterfaces=myComponentManager.getComponentInterfaces();
  for (  Class<?> componentInterface : componentInterfaces) {
    VirtualFile componentFile=getComponentConfigurationFile(componentInterface);
    if (configFile == componentFile) {
      final Object component=myComponentManager.getComponent(componentInterface);
      if (!(component instanceof BaseComponent))       continue;
      BaseComponent baseComponent=(BaseComponent)component;
      try {
        final Element node=serializeComponent(baseComponent);
        if (node != null) {
          newContents.add(node);
        }
      }
 catch (      Exception e) {
        LOG.error(e);
      }
    }
  }
  Collections.sort(newContents,new Comparator<Element>(){
    public int compare(    Element e1,    Element e2){
      String name1=e1.getAttributeValue(ATTRIBUTE_NAME);
      String name2=e2.getAttributeValue(ATTRIBUTE_NAME);
      if (name2 == null && name1 == null)       return 0;
      if (name1 == null)       return 1;
      if (name2 == null)       return -1;
      return name1.compareTo(name2);
    }
  }
);
  for (  final Element newContent : newContents) {
    root.addContent(newContent);
  }
  return root;
}
