{
  super.visitMethod(method);
  final PsiType returnType=method.getReturnType();
  if (returnType == null) {
    return;
  }
  if (returnType.equals(PsiType.BOOLEAN)) {
    return;
  }
  final String name=method.getName();
  boolean startsWithQuestionWord=false;
  for (Iterator iterator=nameList.iterator(); iterator.hasNext(); ) {
    final String prefix=(String)iterator.next();
    if (name.startsWith(prefix)) {
      final char nextChar=name.charAt(prefix.length());
      if (Character.isUpperCase(nextChar) || nextChar == '_') {
        startsWithQuestionWord=true;
        break;
      }
    }
  }
  if (!startsWithQuestionWord) {
    return;
  }
  if (isOverrideOfLibraryMethod(method)) {
    return;
  }
  registerMethodError(method);
}
