{
  super.visitMethod(method);
  final PsiType returnType=method.getReturnType();
  if (returnType == null) {
    return;
  }
  if (returnType.equals(PsiType.BOOLEAN)) {
    return;
  }
  final String name=method.getName();
  boolean startsWithQuestionWord=false;
synchronized (lock) {
    for (    Object aNameList : nameList) {
      final String prefix=(String)aNameList;
      if (name.startsWith(prefix)) {
        if (name.length() == prefix.length()) {
          startsWithQuestionWord=true;
          break;
        }
        final char nextChar=name.charAt(prefix.length());
        if (Character.isUpperCase(nextChar) || nextChar == '_') {
          startsWithQuestionWord=true;
          break;
        }
      }
    }
  }
  if (!startsWithQuestionWord) {
    return;
  }
  if (LibraryUtil.isOverrideOfLibraryMethod(method)) {
    return;
  }
  registerMethodError(method);
}
