{
  BugLog.getInstance().assertNotNull(fileObject);
  BugLog.getInstance().assertNotNull(requests);
  BugLog.getInstance().assertNotNull(clientEnvironment);
  if (entry == null) {
    if (!clientEnvironment.getIgnoreFileFilter().shouldBeIgnored(fileObject,clientEnvironment.getCvsFileSystem())) {
      requests.addQuestionableRequest(fileObject);
    }
    return;
  }
  if (entry.isAddedFile() && !fileExists) {
    return;
  }
  final Date entryLastModified=entry.getLastModified();
  final boolean hadConflicts=entry.isConflict();
  if (!hadConflicts) {
    entry.parseConflictString(null);
  }
  requests.addEntryRequest(entry);
  if (!fileExists || entry.isRemoved()) {
    return;
  }
  if (!hadConflicts && entryLastModified != null) {
    if (!isModified(fileObject,entryLastModified,clientEnvironment)) {
      requests.addUnchangedRequest(fileObject);
      return;
    }
  }
  addModifiedRequest(fileObject,entry,requests,clientEnvironment);
}
