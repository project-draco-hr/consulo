{
  List<String> filters=new ArrayList<String>();
  for (int i=0; i < myClassFilters.length; i++) {
    com.intellij.ui.classFilter.ClassFilter classFilter=myClassFilters[i];
    if (classFilter.isEnabled()) {
      filters.add(classFilter.getPattern());
    }
  }
  List<String> excludeFilters=new ArrayList<String>();
  for (int i=0; i < myClassExclusionFilters.length; i++) {
    com.intellij.ui.classFilter.ClassFilter classFilter=myClassExclusionFilters[i];
    if (classFilter.isEnabled()) {
      excludeFilters.add("-" + classFilter.getPattern());
    }
  }
  if (updateText) {
    String editorText=concatWith(filters," ");
    if (filters.size() > 0)     editorText+=" ";
    editorText+=concatWith(excludeFilters," ");
    myClassFiltersField.setText(editorText);
  }
  int width=(int)Math.sqrt(myClassExclusionFilters.length + myClassFilters.length) + 1;
  String tipText=concatWithEx(filters," ",width,"\n");
  if (filters.size() > 0)   tipText+="\n";
  tipText+=concatWithEx(excludeFilters," ",width,"\n");
  myClassFiltersField.getTextField().setToolTipText(tipText);
}
