{
  myBreakpoint=breakpoint;
  boolean moreOptionsVisible=moreOptionsVisible1;
  boolean actionsPanelVisible=moreOptionsVisible1;
  initMasterBreakpointPanel();
  if (breakpoint.COUNT_FILTER > 0) {
    myPassCountField.setText(Integer.toString(breakpoint.COUNT_FILTER));
    moreOptionsVisible=true;
  }
 else {
    myPassCountField.setText("");
  }
  PsiElement context=breakpoint.getEvaluationElement();
  myPassCountCheckbox.setSelected(breakpoint.COUNT_FILTER_ENABLED);
  myConditionCheckbox.setSelected(breakpoint.CONDITION_ENABLED);
  myConditionCombo.setEnabled(breakpoint.CONDITION_ENABLED);
  myConditionCombo.setText(breakpoint.getCondition() != null ? breakpoint.getCondition() : emptyText());
  myConditionCombo.setContext(context);
  myCbSuspend.setSelected(breakpoint.SUSPEND);
  myRbSuspendThread.setEnabled(myCbSuspend.isSelected());
  myRbSuspendAll.setEnabled(myCbSuspend.isSelected());
  if (!breakpoint.SUSPEND) {
    actionsPanelVisible=true;
  }
  if (DebuggerSettings.SUSPEND_THREAD.equals(breakpoint.SUSPEND_POLICY)) {
    myRbSuspendThread.setSelected(true);
  }
 else {
    myRbSuspendAll.setSelected(true);
  }
  myCbSuspend.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      if (!myActionsPanel.isVisible()) {
        if (!myCbSuspend.isSelected()) {
          if (myDelegate != null) {
            myDelegate.showActionsPanel();
          }
        }
      }
      myRbSuspendThread.setEnabled(myCbSuspend.isSelected());
      myRbSuspendAll.setEnabled(myCbSuspend.isSelected());
    }
  }
);
  myLogMessageCheckBox.setSelected(breakpoint.LOG_ENABLED);
  myLogExpressionCheckBox.setSelected(breakpoint.LOG_EXPRESSION_ENABLED);
  if (breakpoint.LOG_ENABLED || breakpoint.LOG_EXPRESSION_ENABLED) {
    actionsPanelVisible=true;
  }
  myLogExpressionCombo.setContext(context);
  if (breakpoint.getLogMessage() != null) {
    myLogExpressionCombo.setText(breakpoint.getLogMessage());
  }
 else {
    myLogExpressionCombo.setText(emptyText());
  }
  myLogExpressionCombo.setEnabled(breakpoint.LOG_EXPRESSION_ENABLED);
  if (breakpoint.LOG_EXPRESSION_ENABLED) {
    actionsPanelVisible=true;
  }
  myInstanceFiltersCheckBox.setSelected(breakpoint.INSTANCE_FILTERS_ENABLED);
  myInstanceFiltersField.setEnabled(breakpoint.INSTANCE_FILTERS_ENABLED);
  myInstanceFiltersField.getTextField().setEditable(breakpoint.INSTANCE_FILTERS_ENABLED);
  myInstanceFilters=breakpoint.getInstanceFilters();
  updateInstanceFilterEditor(true);
  if (breakpoint.INSTANCE_FILTERS_ENABLED) {
    moreOptionsVisible=true;
  }
  myClassFiltersCheckBox.setSelected(breakpoint.CLASS_FILTERS_ENABLED);
  myClassFiltersField.setEnabled(breakpoint.CLASS_FILTERS_ENABLED);
  myClassFiltersField.getTextField().setEditable(breakpoint.CLASS_FILTERS_ENABLED);
  myClassFilters=breakpoint.getClassFilters();
  myClassExclusionFilters=breakpoint.getClassExclusionFilters();
  updateClassFilterEditor(true);
  if (breakpoint.CLASS_FILTERS_ENABLED) {
    moreOptionsVisible=true;
  }
  myBreakpointPsiClass=breakpoint.getPsiClass();
  updateCheckboxes();
  setActionsPanelVisible(actionsPanelVisible && !moreOptionsVisible1);
  setMoreOptionsVisible(moreOptionsVisible);
}
