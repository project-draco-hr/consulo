{
  List<BreakpointItem> items=new ArrayList<BreakpointItem>();
  findJavaDebuggerSupport().getBreakpointPanelProvider().provideBreakpointItems(myProject,items);
  for (  BreakpointItem item : items) {
    if (item.getBreakpoint() == myBreakpoint) {
      items.remove(item);
      break;
    }
  }
  items.add(new BreakpointItem(){
    @Override public Object getBreakpoint(){
      return null;
    }
    @Override public boolean isEnabled(){
      return false;
    }
    @Override public void setEnabled(    boolean state){
    }
    @Override protected void setupGenericRenderer(    SimpleColoredComponent renderer,    boolean plainView){
      renderer.clear();
      renderer.append(getDisplayText());
    }
    @Override public Icon getIcon(){
      return null;
    }
    @Override public String getDisplayText(){
      return DebuggerBundle.message("value.none");
    }
    @Override public boolean navigate(){
      return false;
    }
    @Override public String speedSearchText(){
      return null;
    }
    @Override public String footerText(){
      return "";
    }
    @Override protected void doUpdateDetailView(    DetailView panel,    boolean editorOnly){
    }
    @Override public boolean allowedToRemove(){
      return false;
    }
    @Override public void removed(    Project project){
    }
  }
);
  return items;
}
