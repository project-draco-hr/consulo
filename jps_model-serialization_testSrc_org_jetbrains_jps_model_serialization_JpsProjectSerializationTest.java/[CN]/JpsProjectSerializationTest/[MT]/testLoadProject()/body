{
  loadProject(SAMPLE_PROJECT_PATH);
  assertEquals("sampleProjectName",myProject.getName());
  List<JpsModule> modules=myProject.getModules();
  assertEquals(3,modules.size());
  JpsModule main=modules.get(0);
  assertEquals("main",main.getName());
  JpsModule util=modules.get(1);
  assertEquals("util",util.getName());
  JpsModule xxx=modules.get(2);
  assertEquals("xxx",xxx.getName());
  List<JpsLibrary> libraries=myProject.getLibraryCollection().getLibraries();
  assertEquals(3,libraries.size());
  List<JpsDependencyElement> dependencies=util.getDependenciesList().getDependencies();
  assertEquals(4,dependencies.size());
  JpsSdkDependency sdkDependency=assertInstanceOf(dependencies.get(0),JpsSdkDependency.class);
  assertSame(JpsJavaSdkType.INSTANCE,sdkDependency.getSdkType());
  JpsSdkReference<?> reference=sdkDependency.getSdkReference();
  assertNotNull(reference);
  assertEquals("1.5",reference.getSdkName());
  assertInstanceOf(dependencies.get(1),JpsModuleSourceDependency.class);
  assertInstanceOf(dependencies.get(2),JpsLibraryDependency.class);
  assertInstanceOf(dependencies.get(3),JpsLibraryDependency.class);
  JpsSdkDependency inheritedSdkDependency=assertInstanceOf(main.getDependenciesList().getDependencies().get(0),JpsSdkDependency.class);
  JpsSdkReference<?> projectSdkReference=inheritedSdkDependency.getSdkReference();
  assertNotNull(projectSdkReference);
  assertEquals("1.6",projectSdkReference.getSdkName());
  assertEquals(getUrl("xxx/output"),JpsJavaExtensionService.getInstance().getOutputUrl(xxx,true));
  assertEquals(getUrl("xxx/output"),JpsJavaExtensionService.getInstance().getOutputUrl(xxx,false));
}
