{
  Entry entry=myEntriesManager.getEntryFor(f.getParent(),f.getName());
  if (entry != null && entry.isResultOfMerge()) {
    byte[] content=CvsUtil.getStoredContentForFile(f,entry.getRevision());
    if (content != null) {
      return content;
    }
    return CvsUtil.getCachedStoredContent(f,entry.getRevision());
  }
  final long upToDateTimestamp=getUpToDateTimeForFile(f);
  FileRevisionTimestampComparator c=new FileRevisionTimestampComparator(){
    public boolean isSuitable(    long revisionTimestamp){
      return CvsStatusProvider.timeStampsAreEqual(upToDateTimestamp,revisionTimestamp);
    }
  }
;
  byte[] localHistoryContent=LocalHistory.getInstance().getByteContent(f,c);
  if (localHistoryContent == null) {
    if (entry != null && CvsUtil.haveCachedContent(f,entry.getRevision())) {
      return CvsUtil.getCachedStoredContent(f,entry.getRevision());
    }
  }
  return localHistoryContent;
}
