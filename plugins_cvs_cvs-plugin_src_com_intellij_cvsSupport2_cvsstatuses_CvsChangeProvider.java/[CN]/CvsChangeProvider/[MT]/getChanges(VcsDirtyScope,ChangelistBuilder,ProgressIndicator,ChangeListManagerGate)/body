{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Processing changes for scope " + dirtyScope);
  }
  final Runnable checkCanceled=new Runnable(){
    public void run(){
      if (progress != null) {
        progress.checkCanceled();
      }
    }
  }
;
  for (  FilePath path : dirtyScope.getRecursivelyDirtyDirectories()) {
    final VirtualFile dir=path.getVirtualFile();
    checkCanceled.run();
    if (dir != null) {
      processEntriesIn(dir,dirtyScope,builder,true,checkCanceled);
    }
 else {
      processFile(path,builder,checkCanceled);
    }
  }
  for (  FilePath path : dirtyScope.getDirtyFiles()) {
    checkCanceled.run();
    if (path.isDirectory()) {
      final VirtualFile dir=path.getVirtualFile();
      if (dir != null) {
        processEntriesIn(dir,dirtyScope,builder,false,checkCanceled);
      }
 else {
        processFile(path,builder,checkCanceled);
      }
    }
 else {
      processFile(path,builder,checkCanceled);
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Done processing changes");
  }
}
