{
  final LookupFile file=getSelectedFileFromCompletionPopup();
  if (file == null)   return;
  if (nameOnly) {
    try {
      final Document doc=myPathTextField.getDocument();
      int caretPos=myPathTextField.getCaretPosition();
      if (myFinder.getSeparator().equals(doc.getText(caretPos,1))) {
        for (; caretPos < doc.getLength(); caretPos++) {
          final String eachChar=doc.getText(caretPos,1);
          if (!myFinder.getSeparator().equals(eachChar))           break;
        }
      }
      int start=caretPos > 0 ? caretPos - 1 : caretPos;
      while (start >= 0) {
        final String each=doc.getText(start,1);
        if (myFinder.getSeparator().equals(each)) {
          start++;
          break;
        }
        start--;
      }
      int end=start < caretPos ? caretPos : start;
      while (end <= doc.getLength()) {
        final String each=doc.getText(end,1);
        if (myFinder.getSeparator().equals(each)) {
          break;
        }
        end++;
      }
      if (end > doc.getLength()) {
        end=doc.getLength();
      }
      if (start > end || start < 0 || end > doc.getLength()) {
        setTextToFile(file,closePath);
      }
 else {
        myPathTextField.setSelectionStart(0);
        myPathTextField.setSelectionEnd(0);
        final String name=file.getName();
        boolean toRemoveExistingName;
        String prefix="";
        if (caretPos >= start) {
          prefix=doc.getText(start,caretPos - start);
          if (prefix.length() == 0) {
            prefix=doc.getText(start,end - start);
          }
          if (SystemInfo.isFileSystemCaseSensitive) {
            toRemoveExistingName=name.startsWith(prefix) && prefix.length() > 0;
          }
 else {
            toRemoveExistingName=name.toUpperCase().startsWith(prefix.toUpperCase()) && prefix.length() > 0;
          }
        }
 else {
          toRemoveExistingName=true;
        }
        int newPos;
        if (toRemoveExistingName) {
          doc.remove(start,end - start);
          doc.insertString(start,name,doc.getDefaultRootElement().getAttributes());
          newPos=start + name.length();
        }
 else {
          doc.insertString(caretPos,name,doc.getDefaultRootElement().getAttributes());
          newPos=caretPos + name.length();
        }
        if (file.isDirectory()) {
          if (!myFinder.getSeparator().equals(doc.getText(newPos,1))) {
            doc.insertString(newPos,myFinder.getSeparator(),doc.getDefaultRootElement().getAttributes());
            newPos++;
          }
        }
        if (newPos < doc.getLength()) {
          if (myFinder.getSeparator().equals(doc.getText(newPos,1))) {
            newPos++;
          }
        }
        myPathTextField.setCaretPosition(newPos);
      }
    }
 catch (    BadLocationException e) {
      LOG.error(e);
    }
  }
 else {
    setTextToFile(file,closePath);
  }
}
