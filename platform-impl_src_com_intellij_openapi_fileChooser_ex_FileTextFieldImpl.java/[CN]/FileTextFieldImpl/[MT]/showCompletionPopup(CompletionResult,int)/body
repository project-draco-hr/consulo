{
  if (myList == null) {
    myList=new JList();
    myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    myList.setCellRenderer(new ColoredListCellRenderer(){
      protected void customizeCellRenderer(      final JList list,      final Object value,      final int index,      final boolean selected,      final boolean hasFocus){
        clear();
        final LookupFile file=(LookupFile)value;
        final String text=(myCurrentCompletion != null && myCurrentCompletion.myKidsAfterSeparator.contains(file) ? myFinder.getSeparator() : "") + file.getName();
        append(text,new SimpleTextAttributes(list.getFont().getStyle(),list.getForeground()));
      }
    }
);
  }
  if (myCurrentPopup != null) {
    closePopup();
  }
  myCurrentCompletion=result;
  myCurrentCompletionsPos=position;
  if (myCurrentCompletion.myToComplete.size() == 0)   return;
  myList.setModel(new AbstractListModel(){
    public int getSize(){
      return myCurrentCompletion.myToComplete.size();
    }
    public Object getElementAt(    final int index){
      return myCurrentCompletion.myToComplete.get(index);
    }
  }
);
  myList.getSelectionModel().clearSelection();
  final PopupChooserBuilder builder=JBPopupFactory.getInstance().createListPopupBuilder(myList);
  builder.addListener(new JBPopupListener(){
    public void beforeShown(    final Project project,    final JBPopup popup){
      myPathTextField.registerKeyboardAction(myCancelAction,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
    public void onClosed(    final JBPopup popup){
      myPathTextField.unregisterKeyboardAction(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0));
    }
  }
);
  myCurrentPopup=builder.setRequestFocus(false).setAutoSelectIfEmpty(false).setResizable(false).setCancelCalllback(new Computable<Boolean>(){
    public Boolean compute(){
      final int caret=myPathTextField.getCaretPosition();
      myPathTextField.setSelectionStart(caret);
      myPathTextField.setSelectionEnd(caret);
      myPathTextField.setFocusTraversalKeysEnabled(true);
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          getField().requestFocus();
        }
      }
);
      return Boolean.TRUE;
    }
  }
).setItemChoosenCallback(new Runnable(){
    public void run(){
      processChosenFromCompletion(true);
    }
  }
).setCancelKeyEnabled(false).setAlpha(0.75f).setFocusOwners(new Component[]{myPathTextField}).createPopup();
  if (result.myPreselected != null) {
    myList.setSelectedValue(result.myPreselected,false);
  }
  myPathTextField.setFocusTraversalKeysEnabled(false);
  myCurrentPopup.showInScreenCoordinates(getField(),getLocationForCaret());
}
