{
  final PsiJavaParserFacade parserFacade=JavaPsiFacade.getInstance(manager.getProject()).getParserFacade();
  final PsiJavaFile dummyJavaFile=((PsiElementFactoryImpl)parserFacade).getDummyJavaFile();
  final PsiExpression expr;
  try {
    expr=parserFacade.createExpressionFromText(exprText,dummyJavaFile);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
    return null;
  }
  if (expr instanceof PsiLiteralExpression) {
    PsiLiteralExpression literal=(PsiLiteralExpression)expr;
    return new ClsLiteralExpressionImpl(parent,exprText,literal.getType(),literal.getValue());
  }
 else   if (expr instanceof PsiPrefixExpression) {
    PsiLiteralExpression operand=(PsiLiteralExpression)((PsiPrefixExpression)expr).getOperand();
    if (operand != null) {
      ClsLiteralExpressionImpl literalExpression=new ClsLiteralExpressionImpl(null,operand.getText(),operand.getType(),operand.getValue());
      ClsPrefixExpressionImpl prefixExpression=new ClsPrefixExpressionImpl(parent,literalExpression);
      literalExpression.setParent(prefixExpression);
      return prefixExpression;
    }
  }
 else   if (expr instanceof PsiReferenceExpression) {
    PsiReferenceExpression patternExpr=(PsiReferenceExpression)expr;
    return new ClsReferenceExpressionImpl(parent,patternExpr);
  }
 else {
    final PsiConstantEvaluationHelper constantEvaluationHelper=JavaPsiFacade.getInstance(manager.getProject()).getConstantEvaluationHelper();
    Object value=constantEvaluationHelper.computeConstantExpression(expr);
    if (value != null) {
      return new ClsLiteralExpressionImpl(parent,exprText,expr.getType(),value);
    }
  }
  LOG.error(expr);
  return null;
}
