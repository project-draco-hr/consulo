{
  if (expr instanceof PsiLiteralExpression) {
    return new ClsLiteralExpressionImpl(parent,expr.getText(),expr.getType(),((PsiLiteralExpression)expr).getValue());
  }
 else   if (expr instanceof PsiPrefixExpression) {
    final PsiExpression operand=((PsiPrefixExpression)expr).getOperand();
    final ClsLiteralExpressionImpl literal=(ClsLiteralExpressionImpl)psiToClsExpression(operand,null);
    final ClsPrefixExpressionImpl prefixExpression=new ClsPrefixExpressionImpl(parent,literal);
    literal.setParent(prefixExpression);
    return prefixExpression;
  }
 else   if (expr instanceof PsiClassObjectAccessExpression) {
    final String canonicalClassText=((PsiClassObjectAccessExpression)expr).getOperand().getType().getCanonicalText();
    return new ClsClassObjectAccessExpressionImpl(canonicalClassText,parent);
  }
 else   if (expr instanceof PsiReferenceExpression) {
    return new ClsReferenceExpressionImpl(parent,(PsiReferenceExpression)expr);
  }
 else {
    final PsiConstantEvaluationHelper evaluator=JavaPsiFacade.getInstance(expr.getProject()).getConstantEvaluationHelper();
    final Object value=evaluator.computeConstantExpression(expr);
    if (value != null) {
      return new ClsLiteralExpressionImpl(parent,expr.getText(),expr.getType(),value);
    }
    LOG.error("Unable to compute expression value: " + expr);
    return null;
  }
}
