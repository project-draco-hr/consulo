{
  mySchemesManager=schemesManager;
  myProcessor=new SchemeProcessor<TemplateGroup>(){
    public TemplateGroup readScheme(    final Document schemeContent,    final File file) throws InvalidDataException, IOException, JDOMException {
      String defGroupName=FileUtil.getNameWithoutExtension(file);
      return readTemplateFile(JDOMUtil.loadDocument(file),defGroupName,false);
    }
    public boolean shouldBeSaved(    final TemplateGroup template){
      for (      TemplateImpl t : template.getTemplates()) {
        if (!t.equals(myDefaultTemplates.get(t.getKey()))) {
          return true;
        }
      }
      return false;
    }
    public Document writeScheme(    final TemplateGroup template) throws WriteExternalException {
      Element templateSetElement=new Element(TEMPLATE_SET);
      templateSetElement.setAttribute(GROUP,template.getName());
      for (      TemplateImpl t : template.getTemplates()) {
        if (!t.equals(myDefaultTemplates.get(t.getKey()))) {
          saveTemplate(t,templateSetElement);
        }
      }
      return new Document(templateSetElement);
    }
    public void showReadErrorMessage(    final Exception e,    final String schemeName,    final String filePath){
      LOG.warn(e);
    }
    public void showWriteErrorMessage(    final Exception e,    final String schemeName,    final String filePath){
      LOG.warn(e);
    }
  }
;
  loadTemplates();
}
