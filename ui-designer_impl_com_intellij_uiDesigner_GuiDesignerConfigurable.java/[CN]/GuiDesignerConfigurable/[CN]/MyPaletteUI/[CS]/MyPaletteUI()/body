{
  final TreeSelectionModel selectionModel=myTree.getSelectionModel();
  selectionModel.setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  myTree.setRootVisible(false);
  myTree.setShowsRootHandles(true);
  selectionModel.addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    final TreeSelectionEvent e){
      updateButtonStates();
    }
  }
);
  myBtnAddGroup.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      addGroupItem();
    }
  }
);
  myBtnEditGroup.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      editGroupItem();
    }
  }
);
  myBtnRemoveGroup.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      removeGroupItem();
    }
  }
);
  myBtnAddComponent.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      addComponentItem();
    }
  }
);
  myPanel.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      if (isAddComponentButtonEnabled()) {
        addComponentItem();
      }
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_INSERT,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myBtnEditComponent.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      editComponentItem();
    }
  }
);
  myTree.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    final MouseEvent e){
      if (e.getClickCount() != 2) {
        return;
      }
      if (isEditComponentButtonEnabled()) {
        editComponentItem();
      }
 else       if (isEditGroupButtonEnabled()) {
        editGroupItem();
      }
      e.consume();
    }
  }
);
  myBtnRemoveComponent.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      removeComponentItem();
    }
  }
);
  myPanel.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      if (isRemoveComponentButtonEnabled()) {
        removeComponentItem();
      }
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
}
