{
  final ICvsFileSystem cvsFileSystem=clientEnvironment.getCvsFileSystem();
  final FileObject fileObject=cvsFileSystem.getFileObject(relativeLocalDirectory,repositoryFilePath);
  final Entry entry=Entry.createEntryForLine(entryLine);
  final ILocalFileWriter localFileWriter=clientEnvironment.getLocalFileWriter();
  localFileWriter.setNextFileDate(responseServices.getNextFileDate());
  localFileWriter.setNextFileMode(responseServices.getNextFileMode());
  final boolean binary=entry.isBinary();
  final boolean readOnly=FileUtils.isReadOnlyMode(mode);
  writeFile(fileObject,fileLength,connectionStreams.getInputStream(),connectionStreams.getReaderFactory(),binary,readOnly,clientEnvironment);
  updateEntriesFileTime(fileObject,entry,cvsFileSystem,merged);
  final IAdminWriter adminWriter=clientEnvironment.getAdminWriter();
  adminWriter.ensureCvsDirectory(fileObject.getParent(),repositoryFilePath,clientEnvironment.getCvsRoot(),cvsFileSystem);
  adminWriter.setEntry(fileObject.getParent(),entry,cvsFileSystem);
  responseServices.getEventSender().notifyEntryListeners(fileObject,entry);
  responseServices.getEventSender().notifyFileInfoListeners(new UpdatedFileInfo(fileObject,cvsFileSystem.getLocalFileSystem().getFile(fileObject),merged ? UpdatedFileInfo.UpdatedType.MERGED : UpdatedFileInfo.UpdatedType.UPDATED,entry));
}
