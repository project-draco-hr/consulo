{
  if (!(myDelegateIcon instanceof DeferredIconImpl && ((DeferredIconImpl)myDelegateIcon).myDelegateIcon instanceof DeferredIconImpl)) {
    myDelegateIcon.paintIcon(c,g,x,y);
  }
  if (myIsScheduled || isDone()) {
    return;
  }
  myIsScheduled=true;
  final Component target=getTarget(c);
  final Component paintingParent=SwingUtilities.getAncestorOfClass(PaintingParent.class,c);
  final Rectangle paintingParentRec=paintingParent == null ? null : ((PaintingParent)paintingParent).getChildRec(c);
  JobLauncher.getInstance().submitToJobThread(Job.DEFAULT_PRIORITY,new Runnable(){
    @Override public void run(){
      int oldWidth=myDelegateIcon.getIconWidth();
      final Icon[] evaluated=new Icon[1];
      final Runnable evalRunnable=new Runnable(){
        @Override public void run(){
          try {
            evaluated[0]=nonNull(myEvaluator.fun(myParam));
          }
 catch (          ProcessCanceledException e) {
            evaluated[0]=EMPTY_ICON;
          }
catch (          IndexNotReadyException e) {
            evaluated[0]=EMPTY_ICON;
          }
        }
      }
;
      if (myNeedReadAction) {
        if (!ApplicationManagerEx.getApplicationEx().tryRunReadAction(new Runnable(){
          @Override public void run(){
            IconDeferrerImpl.evaluateDeferred(evalRunnable);
          }
        }
)) {
          System.out.println("Redeferring");
          myIsScheduled=false;
          return;
        }
      }
 else {
        IconDeferrerImpl.evaluateDeferred(evalRunnable);
      }
      final Icon result=evaluated[0];
      myDelegateIcon=result;
      final boolean shouldRevalidate=Registry.is("ide.tree.deferred.icon.invalidates.cache") && myDelegateIcon.getIconWidth() != oldWidth;
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          setDone(result);
          Component actualTarget=target;
          if (actualTarget != null && SwingUtilities.getWindowAncestor(actualTarget) == null) {
            actualTarget=paintingParent;
            if (actualTarget == null || SwingUtilities.getWindowAncestor(actualTarget) == null) {
              actualTarget=null;
            }
          }
          if (actualTarget == null)           return;
          if (shouldRevalidate) {
            if (actualTarget instanceof JTree) {
              final TreeUI ui=((JTree)actualTarget).getUI();
              if (ui instanceof BasicTreeUI) {
                ((BasicTreeUI)ui).setLeftChildIndent(UIUtil.getTreeLeftChildIndent());
              }
            }
          }
          if (c == actualTarget) {
            c.repaint(x,y,getIconWidth(),getIconHeight());
          }
 else {
            ourRepaintScheduler.pushDirtyComponent(actualTarget,paintingParentRec);
          }
        }
      }
);
    }
  }
);
}
