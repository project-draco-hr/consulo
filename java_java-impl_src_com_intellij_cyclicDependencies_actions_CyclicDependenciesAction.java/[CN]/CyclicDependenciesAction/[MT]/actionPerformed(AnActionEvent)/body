{
  DataContext dataContext=e.getDataContext();
  final Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  final Module module=LangDataKeys.MODULE.getData(dataContext);
  if (project != null) {
    AnalysisScope scope=getInspectionScope(dataContext);
    if (scope == null || scope.getScopeType() != AnalysisScope.MODULES) {
      ProjectModuleOrPackageDialog dlg=null;
      if (module != null) {
        dlg=new ProjectModuleOrPackageDialog(ModuleManager.getInstance(project).getModules().length == 1 ? null : ModuleUtilCore.getModuleNameInReadAction(module),scope);
        dlg.show();
        if (!dlg.isOK())         return;
      }
      if (dlg == null || dlg.isProjectScopeSelected()) {
        scope=getProjectScope(dataContext);
      }
 else {
        if (dlg.isModuleScopeSelected()) {
          scope=getModuleScope(dataContext);
        }
      }
      if (scope != null) {
        scope.setIncludeTestSource(dlg != null && dlg.isIncludeTestSources());
      }
    }
    FileDocumentManager.getInstance().saveAllDocuments();
    new CyclicDependenciesHandler(project,scope).analyze();
  }
}
