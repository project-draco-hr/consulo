{
  if (this == crev)   return 0;
  if (crev instanceof GitRevisionNumber) {
    GitRevisionNumber other=(GitRevisionNumber)crev;
    if ((other.myRevisionHash != null) && myRevisionHash.equals(other.myRevisionHash)) {
      return 0;
    }
    if ((other.myRevisionHash.indexOf("[") > 0) && (other.myTimestamp != null)) {
      return myTimestamp.compareTo(other.myTimestamp);
    }
    String otherName=null;
    String thisName=null;
    int otherParents=-1;
    int thisParent=-1;
    if (other.myRevisionHash.contains("~")) {
      int tildeIndex=other.myRevisionHash.indexOf('~');
      otherName=other.myRevisionHash.substring(0,tildeIndex);
      otherParents=Integer.parseInt(other.myRevisionHash.substring(tildeIndex));
    }
    if (myRevisionHash.contains("~")) {
      int tildeIndex=myRevisionHash.indexOf('~');
      thisName=myRevisionHash.substring(0,tildeIndex);
      thisParent=Integer.parseInt(myRevisionHash.substring(tildeIndex));
    }
    if (otherName == null && thisName == null) {
      final int result=myTimestamp.compareTo(other.myTimestamp);
      if (result == 0) {
        return myRevisionHash.compareTo(other.myRevisionHash);
      }
      return result;
    }
 else     if (otherName == null) {
      return 1;
    }
 else     if (thisName == null) {
      return -1;
    }
 else {
      return thisParent - otherParents;
    }
  }
  return -1;
}
