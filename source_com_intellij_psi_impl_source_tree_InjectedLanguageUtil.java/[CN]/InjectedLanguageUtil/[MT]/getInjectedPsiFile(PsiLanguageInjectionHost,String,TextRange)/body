{
  CachedValue<PsiElement> cachedPsi=host.getUserData(INJECTED_PSI);
  if (cachedPsi == null) {
    CachedValueProvider<PsiElement> provider=new CachedValueProvider<PsiElement>(){
      public Result<PsiElement> compute(){
        final TextRange documentWindow=host.getTextRange().cutOut(range);
        final VirtualFile hostVirtualFile=host.getContainingFile().getVirtualFile();
        final DocumentEx document=(DocumentEx)PsiDocumentManager.getInstance(host.getProject()).getDocument(host.getContainingFile());
        DocumentRange documentRange=new DocumentRange(document,documentWindow);
        Language language=host.getManager().getInjectedLanguage(host);
        final VirtualFile virtualFile=new VirtualFileDelegate(hostVirtualFile,documentWindow,language,text);
        FileDocumentManagerImpl.registerDocument(documentRange,virtualFile);
        PsiElement psi=parseInjectedPsiFile(text,host.getManager(),language,virtualFile);
        if (psi != null) {
          psi.putUserData(ResolveUtil.INJECTED_IN_ELEMENT,host);
        }
        return Result.createSingleDependency(psi,host);
      }
    }
;
    cachedPsi=host.getManager().getCachedValuesManager().createCachedValue(provider,false);
    host.putUserData(INJECTED_PSI,cachedPsi);
  }
  PsiElement element=cachedPsi.getValue();
  if (element == null)   return null;
  return Pair.create(element,range);
}
