def readconfig(self, filename, root=None, trust=False, sections=None, remap=None):
    try:
        fp = open(filename)
    except IOError:
        if (not sections):
            return
        raise
    cfg = config.config()
    trusted = (sections or trust or self._is_trusted(fp, filename))
    try:
        cfg.read(filename, fp, sections=sections, remap=remap)
    except error.ConfigError as inst:
        if trusted:
            raise
        self.warn((_('Ignored: %s\n') % str(inst)))
    if self.plain():
        for k in ('debug', 'fallbackencoding', 'quiet', 'slash', 'logtemplate', 'style', 'traceback', 'verbose'):
            if (k in cfg['ui']):
                del cfg['ui'][k]
        for (k, v) in cfg.items('alias'):
            del cfg['alias'][k]
        for (k, v) in cfg.items('defaults'):
            del cfg['defaults'][k]
    if trusted:
        self._tcfg.update(cfg)
        self._tcfg.update(self._ocfg)
    self._ucfg.update(cfg)
    self._ucfg.update(self._ocfg)
    if (root is None):
        root = os.path.expanduser('~')
    self.fixconfig(root=root)
