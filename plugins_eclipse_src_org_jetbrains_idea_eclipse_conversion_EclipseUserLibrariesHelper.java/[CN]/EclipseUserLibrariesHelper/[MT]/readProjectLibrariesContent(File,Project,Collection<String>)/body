{
  if (exportedFile.exists()) {
    final LibraryTable libraryTable=ProjectLibraryTable.getInstance(project);
    final Element rootElement=JDOMUtil.loadDocument(exportedFile).getRootElement();
    for (    Object o : rootElement.getChildren("library")) {
      final Element libElement=(Element)o;
      final String libName=libElement.getAttributeValue("name");
      Library libraryByName=libraryTable.getLibraryByName(libName);
      if (libraryByName == null) {
        final LibraryTable.ModifiableModel model=libraryTable.getModifiableModel();
        libraryByName=model.createLibrary(libName);
        model.commit();
      }
      if (libraryByName != null) {
        final Library.ModifiableModel model=libraryByName.getModifiableModel();
        for (        Object a : libElement.getChildren("archive")) {
          String rootPath=((Element)a).getAttributeValue("path");
          if (rootPath.startsWith("/")) {
            rootPath=project.getBaseDir().getPath() + rootPath;
          }
          String url=VfsUtil.pathToUrl(rootPath);
          final VirtualFile localFile=VirtualFileManager.getInstance().findFileByUrl(url);
          if (localFile != null) {
            final VirtualFile jarFile=JarFileSystem.getInstance().getJarRootForLocalFile(localFile);
            if (jarFile != null) {
              url=jarFile.getUrl();
            }
          }
          model.addRoot(url,OrderRootType.CLASSES);
        }
        model.commit();
      }
      unknownLibraries.remove(libName);
    }
  }
}
