{
  LOG.assertTrue(myLoggedIn);
  ReadWriteStatistics statistics=executionEnvironment.getReadWriteStatistics();
  CvsEntriesManager.getInstance().lockSynchronizationActions();
  try {
synchronized (CvsOperation.class) {
      Collection allCvsRoots;
      try {
        allCvsRoots=getAllCvsRoots();
      }
 catch (      CannotFindCvsRootException e) {
        throw createVcsExceptionOn(e,null);
      }
      for (Iterator each=allCvsRoots.iterator(); each.hasNext(); ) {
        CvsRootProvider cvsRootProvider=(CvsRootProvider)each.next();
        try {
          myLastProcessedCvsRoot=cvsRootProvider.getCvsRootAsString();
          execute(cvsRootProvider,executionEnvironment,statistics,executionEnvironment.getExecutor());
        }
 catch (        IOCommandException e) {
          LOG.info(e);
          throw createVcsExceptionOn(e.getIOException(),cvsRootProvider.getCvsRootAsString());
        }
catch (        CommandException e) {
          LOG.info(e);
          Exception underlyingException=e.getUnderlyingException();
          LOG.info(underlyingException);
          throw createVcsExceptionOn(underlyingException == null ? e : underlyingException,cvsRootProvider.getCvsRootAsString());
        }
      }
    }
  }
  finally {
    CvsEntriesManager.getInstance().unlockSynchronizationActions();
  }
}
