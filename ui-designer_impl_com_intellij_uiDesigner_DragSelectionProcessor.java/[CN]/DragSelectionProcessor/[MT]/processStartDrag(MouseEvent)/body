{
  myPreviewer=new MyPreviewer();
  mySelection=FormEditingUtil.getSelectedComponents(myEditor);
  myOriginalConstraints=new GridConstraints[mySelection.size()];
  myOriginalBounds=new Rectangle[mySelection.size()];
  myOriginalParents=new RadContainer[mySelection.size()];
  for (int i=0; i < mySelection.size(); i++) {
    final RadComponent component=mySelection.get(i);
    myOriginalConstraints[i]=component.getConstraints().store();
    myOriginalBounds[i]=component.getBounds();
    myOriginalParents[i]=component.getParent();
  }
  final RadComponent componentUnderMouse=FormEditingUtil.getRadComponentAt(myEditor,myPressPoint.x,myPressPoint.y);
  int dx=0;
  int dy=0;
  for (int i=0; i < mySelection.size(); i++) {
    final RadComponent c=mySelection.get(i);
    c.getParent().removeComponent(c);
  }
  for (int i=0; i < mySelection.size(); i++) {
    final RadComponent c=mySelection.get(i);
    final JComponent delegee=c.getDelegee();
    final Point point=SwingUtilities.convertPoint(myOriginalParents[i].getDelegee(),delegee.getLocation(),myEditor.getDragLayer());
    delegee.setLocation(point);
    myEditor.getDragLayer().add(delegee);
    if (c == componentUnderMouse) {
      if (delegee.getX() > e.getX() || delegee.getX() + delegee.getWidth() < e.getX()) {
        dx=e.getX() - (delegee.getX() + delegee.getWidth() / 2);
      }
      if (delegee.getY() > e.getY() || delegee.getY() + delegee.getHeight() < e.getY()) {
        dy=e.getY() - (delegee.getY() + delegee.getHeight() / 2);
      }
    }
  }
  for (int i=0; i < mySelection.size(); i++) {
    mySelection.get(i).shift(dx,dy);
  }
  myEditor.refresh();
  myLastPoint=e.getPoint();
}
