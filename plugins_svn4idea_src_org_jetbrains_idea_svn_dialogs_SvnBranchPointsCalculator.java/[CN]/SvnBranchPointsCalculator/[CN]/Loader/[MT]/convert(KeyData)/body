{
  final Ref<WrapperInvertor<BranchCopyData>> result=new Ref<WrapperInvertor<BranchCopyData>>();
  new FirstInBranch(myVcs,keyData.getRepoUrl(),keyData.getTargetUrl(),keyData.getSourceUrl(),new Consumer<CopyData>(){
    public void consume(    CopyData copyData){
      if (copyData != null) {
        final boolean correct=copyData.isTrunkSupposedCorrect();
        final BranchCopyData branchCopyData;
        if (correct) {
          branchCopyData=new BranchCopyData(keyData.getSourceUrl(),copyData.getCopySourceRevision(),keyData.getTargetUrl(),copyData.getCopyTargetRevision());
        }
 else {
          branchCopyData=new BranchCopyData(keyData.getTargetUrl(),copyData.getCopySourceRevision(),keyData.getSourceUrl(),copyData.getCopyTargetRevision());
        }
        result.set(new WrapperInvertor<BranchCopyData>(!correct,branchCopyData));
      }
    }
  }
).run();
  final WrapperInvertor<BranchCopyData> invertor=result.get();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Loader17 returned: for key: " + keyData.toString() + " result: "+ (invertor == null ? null : invertor.toString()));
  }
  return invertor;
}
