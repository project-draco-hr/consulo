{
  final List<String> keys;
synchronized (myLock) {
    keys=(List<String>)myForSearchMap.get(repoUrl);
  }
  final String sourceMatching=getMatchingUrl(keys,source);
  final String targetMatching=getMatchingUrl(keys,target);
  if (sourceMatching == null && targetMatching == null)   return null;
synchronized (myLock) {
    final TreeMap<String,BranchCopyData> map=myPersistentMap.get(repoUrl);
    final boolean sourceIsOut=sourceMatching == null;
    if (sourceIsOut || targetMatching == null) {
      return sourceIsOut ? new WrapperInvertor<BranchCopyData>(false,map.get(targetMatching)) : new WrapperInvertor<BranchCopyData>(false,map.get(sourceMatching));
    }
    final BranchCopyData sourceData=map.get(sourceMatching);
    final BranchCopyData targetData=map.get(targetMatching);
    final boolean inverted=sourceData.getTargetRevision() > targetData.getTargetRevision();
    return new WrapperInvertor<BranchCopyData>(inverted,inverted ? sourceData : targetData);
  }
}
