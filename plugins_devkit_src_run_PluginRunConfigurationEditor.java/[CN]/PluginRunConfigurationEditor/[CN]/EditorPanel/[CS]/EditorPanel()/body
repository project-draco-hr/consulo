{
  mySandboxCombo.getComboBox().setRenderer(new DefaultListCellRenderer(){
    public Component getListCellRendererComponent(    JList jList,    Object o,    int i,    boolean b,    boolean b1){
      super.getListCellRendererComponent(jList,o,i,b,b1);
      if (o != null) {
        setText(((Sandbox)o).getName());
      }
      return this;
    }
  }
);
  mySandboxCombo.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      Sandbox selected=getSelectedBox();
      ShowSettingsUtil.getInstance().editConfigurable(myWholePanel,SandboxConfigurable.getInstance());
      mySandboxCombo.getComboBox().setModel(new DefaultComboBoxModel(SandboxManager.getInstance().getRegisteredSandboxes()));
      setSelectedBox(selected);
    }
  }
);
  myModules.setCellRenderer(new DefaultListCellRenderer(){
    public Component getListCellRendererComponent(    JList jList,    Object o,    int i,    boolean b,    boolean b1){
      super.getListCellRendererComponent(jList,o,i,b,b1);
      if (o != null) {
        Module module=(Module)o;
        setText(module.getName());
        setIcon(PluginModuleType.getInstance().getNodeIcon(false));
      }
      return this;
    }
  }
);
  mySandboxCombo.getComboBox().setModel(new DefaultComboBoxModel(SandboxManager.getInstance().getRegisteredSandboxes()));
  mySandboxCombo.getComboBox().addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      updateModules((Sandbox)mySandboxCombo.getComboBox().getSelectedItem());
    }
  }
);
}
