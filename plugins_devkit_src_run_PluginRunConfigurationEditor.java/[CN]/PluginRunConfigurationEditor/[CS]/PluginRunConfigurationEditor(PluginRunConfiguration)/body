{
  myPRC=prc;
  myShowLogs.setSelected(isShow(prc));
  myShowLogs.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      setShow(prc,myShowLogs.isSelected());
    }
  }
);
  myModules.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (myModules.getSelectedItem() != null) {
        prc.removeAllLogFiles();
        ProjectJdk jdk=ModuleRootManager.getInstance((Module)myModules.getSelectedItem()).getJdk();
        jdk=IdeaJdk.findIdeaJdk(jdk);
        if (jdk != null) {
          final String sandboxHome=((Sandbox)jdk.getSdkAdditionalData()).getSandboxHome();
          if (sandboxHome == null) {
            return;
          }
          try {
            @NonNls final String file=new File(sandboxHome).getCanonicalPath() + File.separator + "system"+ File.separator+ "log"+ File.separator+ "idea.log";
            if (new File(file).exists()) {
              prc.addLogFile(file,DevKitBundle.message("idea.log.tab.title"),myShowLogs.isSelected());
            }
          }
 catch (          IOException e1) {
            LOG.error(e1);
          }
        }
      }
    }
  }
);
}
