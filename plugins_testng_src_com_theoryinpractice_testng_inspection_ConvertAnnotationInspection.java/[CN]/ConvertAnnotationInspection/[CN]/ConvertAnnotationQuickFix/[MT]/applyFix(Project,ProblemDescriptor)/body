{
  final PsiAnnotation annotation=(PsiAnnotation)descriptor.getPsiElement();
  final PsiElement parent=annotation.getParent();
  if (parent instanceof PsiModifierList) {
    try {
      final PsiModifierListOwner element=(PsiModifierListOwner)parent.getParent();
      final PsiElementFactory factory=element.getManager().getElementFactory();
      PsiDocComment docComment=((PsiDocCommentOwner)element).getDocComment();
      if (docComment == null) {
        docComment=factory.createDocCommentFromText("/**\n */",element);
        docComment=(PsiDocComment)element.addBefore(docComment,parent);
      }
      @NonNls StringBuffer text=new StringBuffer(convertAnnotationClassToJavadocElement(annotation.getQualifiedName()));
      PsiAnnotationParameterList list=annotation.getParameterList();
      for (      PsiNameValuePair pair : list.getAttributes()) {
        text.append(' ');
        if (pair.getName() != null) {
          text.append(pair.getName());
        }
 else {
          text.append("value");
        }
        text.append(" = \"");
        @NonNls String parameterText=StringUtil.stripQuotesAroundValue(pair.getValue().getText());
        if (parameterText.startsWith("{")) {
          parameterText=parameterText.replaceAll("(\\{\\\"|\\\"\\}|\\\"\\w*\\,\\w*\\\")"," ").trim();
        }
        text.append(parameterText);
        text.append('\"');
      }
      docComment.addAfter(factory.createDocTagFromText('@' + text.toString(),element),docComment.getFirstChild());
      annotation.delete();
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
  }
}
