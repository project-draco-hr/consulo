{
  if (!SystemInfo.isWindows && !SystemInfo.isUnix) {
    System.err.println(getName() + " skipped: " + SystemInfo.OS_NAME);
    return;
  }
  final boolean safeWrite=GeneralSettings.getInstance().isUseSafeWrite();
  final File dir=FileUtil.createTempDirectory("hardlinks.",".dir",false);
  final SafeWriteRequestor requestor=new SafeWriteRequestor(){
  }
;
  try {
    GeneralSettings.getInstance().setUseSafeWrite(false);
    final File targetFile=new File(dir,"targetFile");
    assertTrue(targetFile.createNewFile());
    final File hardLinkFile=IoTestUtil.createHardLink(targetFile.getAbsolutePath(),"hardLinkFile");
    final VirtualFile file=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(targetFile);
    assertNotNull(file);
    file.setBinaryContent("hello".getBytes(),0,0,requestor);
    final VirtualFile check=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(hardLinkFile);
    assertNotNull(check);
    assertEquals("hello",VfsUtilCore.loadText(check));
  }
  finally {
    GeneralSettings.getInstance().setUseSafeWrite(safeWrite);
    FileUtil.delete(dir);
  }
}
