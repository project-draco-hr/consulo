{
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        File dir=createTempDirectory(false);
        final ManagingFS managingFS=ManagingFS.getInstance();
        VirtualFile vFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar,'/'));
        assertNotNull(vFile);
        assertFalse(managingFS.areChildrenLoaded(vFile));
        assertFalse(managingFS.wereChildrenAccessed(vFile));
        final File child=new File(dir,"child");
        final boolean created=child.createNewFile();
        assertTrue(created);
        final File subdir=new File(dir,"subdir");
        final boolean subdirCreated=subdir.mkdir();
        assertTrue(subdirCreated);
        final File subChild=new File(subdir,"subdir");
        final boolean subChildCreated=subChild.createNewFile();
        assertTrue(subChildCreated);
        final VirtualFile childVFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(child.getPath().replace(File.separatorChar,'/'));
        assertNotNull(childVFile);
        assertFalse(managingFS.areChildrenLoaded(vFile));
        assertTrue(managingFS.wereChildrenAccessed(vFile));
        final VirtualFile subdirVFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar,'/'));
        assertNotNull(subdirVFile);
        assertFalse(managingFS.areChildrenLoaded(subdirVFile));
        assertFalse(managingFS.wereChildrenAccessed(subdirVFile));
        assertFalse(managingFS.areChildrenLoaded(vFile));
        assertTrue(managingFS.wereChildrenAccessed(vFile));
        vFile.getChildren();
        assertTrue(managingFS.areChildrenLoaded(vFile));
        assertTrue(managingFS.wereChildrenAccessed(vFile));
        assertFalse(managingFS.areChildrenLoaded(subdirVFile));
        assertFalse(managingFS.wereChildrenAccessed(subdirVFile));
        final VirtualFile subChildVFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(subChild.getPath().replace(File.separatorChar,'/'));
        assertNotNull(subChildVFile);
        assertTrue(managingFS.areChildrenLoaded(vFile));
        assertTrue(managingFS.wereChildrenAccessed(vFile));
        assertFalse(managingFS.areChildrenLoaded(subdirVFile));
        assertTrue(managingFS.wereChildrenAccessed(subdirVFile));
      }
 catch (      IOException e) {
        LOG.error(e);
      }
    }
  }
);
}
