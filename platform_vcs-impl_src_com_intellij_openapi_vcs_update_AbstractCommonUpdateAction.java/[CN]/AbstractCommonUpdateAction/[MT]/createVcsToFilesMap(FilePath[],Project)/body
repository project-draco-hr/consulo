{
  HashMap<AbstractVcs,Collection<FilePath>> resultPrep=new HashMap<AbstractVcs,Collection<FilePath>>();
  for (  FilePath file : roots) {
    AbstractVcs vcs=VcsUtil.getVcsFor(project,file);
    if (vcs != null) {
      UpdateEnvironment updateEnvironment=myActionInfo.getEnvironment(vcs);
      if (updateEnvironment != null) {
        if (!resultPrep.containsKey(vcs))         resultPrep.put(vcs,new HashSet<FilePath>());
        resultPrep.get(vcs).add(file);
      }
    }
  }
  final Map<AbstractVcs,Collection<FilePath>> result=new HashMap<AbstractVcs,Collection<FilePath>>();
  for (  Map.Entry<AbstractVcs,Collection<FilePath>> entry : resultPrep.entrySet()) {
    final AbstractVcs vcs=entry.getKey();
    final List<FilePath> paths=new ArrayList<FilePath>(entry.getValue());
    final List<VirtualFile> files=ObjectsConvertor.convert(paths,ObjectsConvertor.FILEPATH_TO_VIRTUAL,ObjectsConvertor.NOT_NULL);
    result.put(vcs,ObjectsConvertor.vf2fp(vcs.filterUniqueRoots(files,IntoSelfVirtualFileConvertor.getInstance())));
  }
  return result;
}
