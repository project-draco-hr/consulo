{
  PsiElement parent=psiElement.getParent();
  if (!(parent instanceof PsiCodeBlock)) {
    return false;
  }
  boolean leaveCodeBlock=isControlFlowBreak(psiElement) || isValidStatementInsideControlFlowOperator(psiElement,isModified);
  if (!leaveCodeBlock) {
    return false;
  }
  final int offset=parent.getTextRange().getEndOffset();
  final CharSequence text=editor.getDocument().getCharsSequence();
  if (offset < text.length() - 1) {
    final int i=CharArrayUtil.shiftForward(text,offset + 1," \t");
    if (i < text.length() && text.charAt(i) == '\n') {
      editor.getCaretModel().moveToOffset(offset + 1);
      EditorActionManager actionManager=EditorActionManager.getInstance();
      EditorActionHandler actionHandler=actionManager.getActionHandler(IdeActions.ACTION_EDITOR_MOVE_LINE_END);
      final DataContext dataContext=DataManager.getInstance().getDataContext(editor.getComponent());
      if (dataContext != null) {
        actionHandler.execute(editor,dataContext);
        return true;
      }
    }
  }
  editor.getCaretModel().moveToOffset(offset);
  return false;
}
