{
  final Set<Module> dependentModules=new com.intellij.util.containers.HashSet<Module>();
  ModuleUtil.getDependencies(module,dependentModules);
  PsiManager psiManager=PsiManager.getInstance(myProject);
  for (  VirtualFile file : PropertiesFilesManager.getInstance().getAllPropertiesFiles()) {
    if (!dependentModules.contains(VfsUtil.getModuleForFile(myProject,file))) {
      continue;
    }
    PsiFile psiFile=psiManager.findFile(file);
    if (!(psiFile instanceof PropertiesFile))     continue;
    PsiDirectory directory=(PsiDirectory)psiFile.getParent();
    PsiPackage pkg=directory.getPackage();
    if (pkg != null) {
      StringBuffer qName=new StringBuffer(pkg.getQualifiedName());
      if (qName.length() > 0) {
        qName.append(".");
      }
      qName.append(PropertiesUtil.getBaseName(file));
      processor.process(qName.toString(),(PropertiesFile)psiFile);
    }
  }
}
