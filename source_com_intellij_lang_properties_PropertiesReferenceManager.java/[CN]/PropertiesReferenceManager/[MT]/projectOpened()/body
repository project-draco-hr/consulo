{
  final PsiReferenceProvider referenceProvider=new PropertiesReferenceProvider();
  ReferenceProvidersRegistry.getInstance(myProject).registerReferenceProvider(PsiLiteralExpression.class,referenceProvider);
  myVirtualFileListener=new VirtualFileAdapter(){
    public void fileCreated(    VirtualFileEvent event){
      addNewFile(event);
    }
    public void fileDeleted(    VirtualFileEvent event){
      removeOldFile(event);
    }
    public void fileMoved(    VirtualFileMoveEvent event){
      removeOldFile(event);
      addNewFile(event);
    }
  }
;
  VirtualFileManager.getInstance().addVirtualFileListener(myVirtualFileListener);
  StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable(){
    public void run(){
      ProjectRootManager.getInstance(myProject).getFileIndex().iterateContent(new ContentIterator(){
        public boolean processFile(        VirtualFile fileOrDir){
          addNewFile(fileOrDir);
          return true;
        }
      }
);
    }
  }
);
}
