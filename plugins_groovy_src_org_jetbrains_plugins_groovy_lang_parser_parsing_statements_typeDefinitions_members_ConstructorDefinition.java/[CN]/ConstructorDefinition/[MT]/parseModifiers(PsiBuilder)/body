{
  PsiBuilder.Marker modifiersMarker=builder.mark();
  boolean parsedAnnotation;
  boolean parsedModifier;
  boolean parsedDef;
  do {
    if (kSTATIC.equals(builder.getTokenType())) {
      modifiersMarker.rollbackTo();
      return WRONGWAY;
    }
    parsedAnnotation=Annotation.parse(builder) != WRONGWAY;
    parsedModifier=Modifier.parse(builder) != WRONGWAY;
    parsedDef=ParserUtils.getToken(builder,kDEF);
    ParserUtils.getToken(builder,mNLS);
  }
 while (parsedAnnotation || parsedModifier | parsedDef);
  modifiersMarker.done(MODIFIERS);
  return MODIFIERS;
}
