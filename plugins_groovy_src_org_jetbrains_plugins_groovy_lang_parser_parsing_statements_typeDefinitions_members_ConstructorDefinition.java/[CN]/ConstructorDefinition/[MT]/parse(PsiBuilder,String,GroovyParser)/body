{
  if (className == null)   return false;
  PsiBuilder.Marker constructorMarker=builder.mark();
  if (!parseModifiers(builder,parser)) {
    constructorMarker.rollbackTo();
    return false;
  }
  if (builder.getTokenType() != mIDENT || !className.equals(builder.getTokenText())) {
    builder.error(GroovyBundle.message("identifier.expected"));
    constructorMarker.rollbackTo();
    return false;
  }
 else {
    builder.advanceLexer();
  }
  if (!ParserUtils.getToken(builder,mLPAREN)) {
    constructorMarker.rollbackTo();
    return false;
  }
  ParameterList.parse(builder,mRPAREN,parser);
  ParserUtils.getToken(builder,mNLS);
  if (!ParserUtils.getToken(builder,mRPAREN)) {
    ThrowClause.parse(builder);
    constructorMarker.done(CONSTRUCTOR_DEFINITION);
    return true;
  }
  if (ParserUtils.lookAhead(builder,mNLS,kTHROWS) || ParserUtils.lookAhead(builder,mNLS,mLCURLY)) {
    ParserUtils.getToken(builder,mNLS);
  }
  ThrowClause.parse(builder);
  if (builder.getTokenType() == mLCURLY || ParserUtils.lookAhead(builder,mNLS,mLCURLY)) {
    ParserUtils.getToken(builder,mNLS);
    ConstructorBody.parseConstructorBody(builder,parser);
  }
  constructorMarker.done(CONSTRUCTOR_DEFINITION);
  return true;
}
