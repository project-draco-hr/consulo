{
  if (className == null)   return WRONGWAY;
  if (parseModifiers(builder) == WRONGWAY)   return WRONGWAY;
  if (builder.getTokenType() != mIDENT || !className.equals(builder.getTokenText())) {
    builder.error(GroovyBundle.message("identifier.expected"));
    return WRONGWAY;
  }
 else {
    builder.advanceLexer();
  }
  if (!ParserUtils.getToken(builder,mLPAREN)) {
    builder.error(GroovyBundle.message("lparen.expected"));
  }
  ParameterDeclarationList.parse(builder,mRPAREN);
  ParserUtils.getToken(builder,mNLS);
  if (!ParserUtils.getToken(builder,mRPAREN)) {
    return WRONGWAY;
  }
  ThrowClause.parse(builder);
  if (builder.getTokenType() == mLCURLY || ParserUtils.lookAhead(builder,mNLS,mLCURLY)) {
    ParserUtils.getToken(builder,mNLS);
    GroovyElementType methodBody=ConstructorBody.parse(builder);
    if (!WRONGWAY.equals(methodBody)) {
      return CONSTRUCTOR_DEFINITION;
    }
  }
  return WRONGWAY;
}
