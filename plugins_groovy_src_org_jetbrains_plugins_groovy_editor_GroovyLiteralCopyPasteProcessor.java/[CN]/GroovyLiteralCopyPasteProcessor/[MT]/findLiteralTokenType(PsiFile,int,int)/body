{
  PsiElement elementAtSelectionStart=file.findElementAt(selectionStart);
  if (elementAtSelectionStart == null) {
    return null;
  }
  IElementType elementType=elementAtSelectionStart.getNode().getElementType();
  if ((elementType == mREGEX_END || elementType == mDOLLAR_SLASH_REGEX_END || elementType == mGSTRING_END) && elementAtSelectionStart.getTextOffset() == selectionStart) {
    elementAtSelectionStart=elementAtSelectionStart.getPrevSibling();
    if (elementAtSelectionStart == null)     return null;
    elementType=elementAtSelectionStart.getNode().getElementType();
  }
  if (elementType == mDOLLAR) {
    elementAtSelectionStart=elementAtSelectionStart.getParent();
    elementType=elementAtSelectionStart.getNode().getElementType();
  }
  if (!isStringLiteral(elementAtSelectionStart) && !isCharLiteral(elementAtSelectionStart) && !(elementType == GroovyElementTypes.GSTRING_INJECTION)) {
    return null;
  }
  if (elementAtSelectionStart.getTextRange().getEndOffset() < selectionEnd) {
    final PsiElement elementAtSelectionEnd=file.findElementAt(selectionEnd);
    if (elementAtSelectionEnd == null) {
      return null;
    }
    if (elementAtSelectionEnd.getNode().getElementType() == elementType && elementAtSelectionEnd.getTextRange().getStartOffset() < selectionEnd) {
      return elementAtSelectionStart;
    }
  }
  final TextRange textRange=elementAtSelectionStart.getTextRange();
  if (elementType == mREGEX_CONTENT || elementType == mGSTRING_CONTENT || elementType == mDOLLAR_SLASH_REGEX_CONTENT || elementType == GroovyElementTypes.GSTRING_INJECTION) {
    selectionStart++;
    selectionEnd--;
  }
  if (selectionStart <= textRange.getStartOffset() || selectionEnd >= textRange.getEndOffset()) {
    return null;
  }
  return elementAtSelectionStart;
}
