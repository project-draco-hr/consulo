{
  if (editor == null) {
    return;
  }
  final XmlTag tag=PsiTreeUtil.getParentOfType(startElement,XmlTag.class);
  final List<Density> densities=new ArrayList<Density>();
  for (  Density density : Density.values()) {
    if (density.getDpiValue() > 0) {
      densities.add(density);
    }
  }
  final String[] densityPresentableNames=new String[densities.size()];
  String defaultValue=null;
  String initialValue=null;
  for (int i=0; i < densities.size(); i++) {
    final Density density=densities.get(i);
    densityPresentableNames[i]=getLabelForDensity(density);
    final int dpi=density.getDpiValue();
    if (dpi == 0) {
      continue;
    }
    if (dpi == ourPrevDpi) {
      initialValue=densityPresentableNames[i];
    }
 else     if (dpi == Density.DEFAULT_DENSITY) {
      defaultValue=densityPresentableNames[i];
    }
  }
  if (initialValue == null) {
    initialValue=defaultValue;
  }
  if (initialValue == null) {
    return;
  }
  final int dpi;
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    dpi=Density.DEFAULT_DENSITY;
  }
 else {
    final int selectedIndex=Messages.showChooseDialog("What is the screen density the current px value works with?","Choose density",densityPresentableNames,initialValue,null);
    if (selectedIndex < 0) {
      return;
    }
    dpi=densities.get(selectedIndex).getDpiValue();
  }
  ourPrevDpi=dpi;
  for (  XmlAttribute attribute : tag.getAttributes()) {
    final String value=attribute.getValue();
    if (value.endsWith("px")) {
      final Matcher matcher=PX_ATTR_VALUE_PATTERN.matcher(value);
      if (matcher.matches()) {
        final String numberString=matcher.group(1);
        try {
          final int px=Integer.parseInt(numberString);
          final int dp=px * 160 / dpi;
          attribute.setValue(Integer.toString(dp) + "dp");
        }
 catch (        NumberFormatException nufe) {
          LOG.error(nufe);
        }
      }
    }
  }
}
