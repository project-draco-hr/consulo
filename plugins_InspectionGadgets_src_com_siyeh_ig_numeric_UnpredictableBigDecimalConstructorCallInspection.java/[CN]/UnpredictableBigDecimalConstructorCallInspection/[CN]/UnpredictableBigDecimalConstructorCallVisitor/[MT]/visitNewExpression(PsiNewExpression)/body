{
  super.visitNewExpression(expression);
  final PsiJavaCodeReferenceElement classReference=expression.getClassReference();
  if (classReference == null) {
    return;
  }
  final String name=classReference.getReferenceName();
  if (!"BigDecimal".equals(name)) {
    return;
  }
  final PsiMethod constructor=expression.resolveConstructor();
  if (constructor == null) {
    return;
  }
  final PsiParameterList parameterList=constructor.getParameterList();
  final int length=parameterList.getParametersCount();
  if (length != 1 && length != 2) {
    return;
  }
  final PsiParameter[] parameters=parameterList.getParameters();
  final PsiParameter firstParameter=parameters[0];
  final PsiType type=firstParameter.getType();
  if (type != PsiType.DOUBLE) {
    return;
  }
  registerNewExpressionError(expression);
}
