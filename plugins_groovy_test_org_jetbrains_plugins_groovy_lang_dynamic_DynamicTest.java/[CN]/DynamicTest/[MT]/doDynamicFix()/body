{
  myFixture.enableInspections(new GroovyUnresolvedAccessInspection());
  final List<IntentionAction> actions=myFixture.getAvailableIntentions(getTestName(false) + ".groovy");
  DynamicPropertyFix dynamicFix=ContainerUtil.findInstance(actions,DynamicPropertyFix.class);
  if (dynamicFix != null) {
    dynamicFix.invoke(getProject());
    return dynamicFix.getReferenceExpression();
  }
 else {
    final DynamicMethodFix fix=ContainerUtil.findInstance(actions,DynamicMethodFix.class);
    assertNotNull(fix);
    fix.invoke(getProject());
    return fix.getReferenceExpression();
  }
}
