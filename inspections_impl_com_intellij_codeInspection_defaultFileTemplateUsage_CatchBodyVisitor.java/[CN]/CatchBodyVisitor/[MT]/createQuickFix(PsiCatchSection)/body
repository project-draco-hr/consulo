{
  FileTemplate template=FileTemplateManager.getInstance().getCodeTemplate(JavaTemplateUtil.TEMPLATE_CATCH_BODY);
  ReplaceWithFileTemplateFix replaceWithFileTemplateFix=new ReplaceWithFileTemplateFix(){
    public void applyFix(    @NotNull Project project,    @NotNull ProblemDescriptor descriptor){
      final PsiParameter parameter=section.getParameter();
      if (parameter == null)       return;
      PsiCodeBlock catchBlock=section.getCatchBlock();
      if (catchBlock == null)       return;
      PsiType type=parameter.getType();
      if (!(type instanceof PsiClassType))       return;
      final PsiJavaParserFacade elementFactory=JavaPsiFacade.getInstance(section.getProject()).getParserFacade();
      try {
        PsiCatchSection sectionTemplate=elementFactory.createCatchSection((PsiClassType)type,parameter.getName(),parameter);
        section.replace(sectionTemplate);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
;
  LocalQuickFix editFileTemplateFix=DefaultFileTemplateUsageInspection.createEditFileTemplateFix(template,replaceWithFileTemplateFix);
  if (template.isDefault()) {
    return new LocalQuickFix[]{editFileTemplateFix};
  }
  return new LocalQuickFix[]{replaceWithFileTemplateFix,editFileTemplateFix};
}
