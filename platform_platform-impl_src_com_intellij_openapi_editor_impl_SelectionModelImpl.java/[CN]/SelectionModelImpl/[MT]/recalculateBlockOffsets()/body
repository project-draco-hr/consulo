{
  TIntArrayList startOffsets=new TIntArrayList();
  TIntArrayList endOffsets=new TIntArrayList();
  final int startLine=Math.min(myBlockStart.line,myBlockEnd.line);
  final int endLine=Math.max(myBlockStart.line,myBlockEnd.line);
  final int startColumn=Math.min(myBlockStart.column,myBlockEnd.column);
  final int endColumn=Math.max(myBlockStart.column,myBlockEnd.column);
  FoldingModelImpl foldingModel=myEditor.getFoldingModel();
  DocumentEx document=myEditor.getDocument();
  boolean insideFoldRegion=false;
  for (int line=startLine; line <= endLine; line++) {
    int startOffset=myEditor.logicalPositionToOffset(new LogicalPosition(line,startColumn));
    FoldRegion startRegion=foldingModel.getCollapsedRegionAtOffset(startOffset);
    boolean startInsideFold=startRegion != null && startRegion.getStartOffset() < startOffset;
    int endOffset=myEditor.logicalPositionToOffset(new LogicalPosition(line,endColumn));
    FoldRegion endRegion=foldingModel.getCollapsedRegionAtOffset(endOffset);
    boolean endInsideFold=endRegion != null && endRegion.getStartOffset() < endOffset;
    if (!startInsideFold && !endInsideFold) {
      startOffsets.add(startOffset);
      endOffsets.add(endOffset);
    }
 else     if (startInsideFold && endInsideFold) {
      if (insideFoldRegion) {
        startOffsets.add(Math.max(document.getLineStartOffset(line),startRegion.getStartOffset()));
        endOffsets.add(Math.min(document.getLineEndOffset(line),endRegion.getEndOffset()));
      }
    }
 else     if (startInsideFold && !endInsideFold) {
      if (startRegion.getEndOffset() < endOffset) {
        startOffsets.add(Math.max(document.getLineStartOffset(line),startRegion.getStartOffset()));
        endOffsets.add(endOffset);
      }
      insideFoldRegion=false;
    }
 else {
      startOffsets.add(startOffset);
      endOffsets.add(Math.min(document.getLineEndOffset(line),endRegion.getEndOffset()));
      insideFoldRegion=true;
    }
  }
  myBlockSelectionStarts=startOffsets.toNativeArray();
  myBlockSelectionEnds=endOffsets.toNativeArray();
}
