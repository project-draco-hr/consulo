{
  final SemCacheChunk chunk=obtainChunk(element);
  if (chunk == null)   return null;
  List<T> singleList=null;
  LinkedHashSet<T> result=null;
  final List<SemKey> inheritors=(List<SemKey>)myInheritors.get(key);
  for (int i=0; i < inheritors.size(); i++) {
    List<T> cached=(List<T>)chunk.getSemElements(inheritors.get(i));
    if (cached == null && paranoid) {
      return null;
    }
    if (cached != null && cached != Collections.<T>emptyList()) {
      if (singleList == null) {
        singleList=cached;
        continue;
      }
      if (result == null) {
        result=new LinkedHashSet<T>(singleList);
      }
      result.addAll(cached);
    }
  }
  if (result == null) {
    if (singleList != null) {
      return singleList;
    }
    return Collections.emptyList();
  }
  return new ArrayList<T>(result);
}
