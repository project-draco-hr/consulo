{
  List<SemElement> result=null;
  final Collection<NullableFunction<PsiElement,? extends SemElement>> producers=myProducers.get(key);
  if (!producers.isEmpty()) {
    for (    final NullableFunction<PsiElement,? extends SemElement> producer : producers) {
      myCreatingSem.incrementAndGet();
      try {
        final SemElement element=producer.fun(psi);
        if (element != null) {
          if (result == null)           result=new SmartList<SemElement>();
          result.add(element);
        }
      }
  finally {
        myCreatingSem.decrementAndGet();
      }
    }
  }
  return result == null ? Collections.<SemElement>emptyList() : Collections.unmodifiableList(result);
}
