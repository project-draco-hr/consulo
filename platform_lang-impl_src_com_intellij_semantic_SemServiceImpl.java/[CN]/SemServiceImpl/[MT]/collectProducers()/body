{
  final MultiMap<SemKey,NullableFunction<PsiElement,? extends SemElement>> map=new MultiMap<SemKey,NullableFunction<PsiElement,? extends SemElement>>();
  final SemRegistrar registrar=new SemRegistrar(){
    public <T extends SemElement,V extends PsiElement>void registerSemElementProvider(    SemKey<T> key,    final ElementPattern<? extends V> place,    final NullableFunction<V,T> provider){
      map.putValue(key,new NullableFunction<PsiElement,SemElement>(){
        public SemElement fun(        PsiElement element){
          if (place.accepts(element)) {
            return provider.fun((V)element);
          }
          return null;
        }
      }
);
    }
  }
;
  final IdeaPicoContainer container=new IdeaPicoContainer(myProject.getPicoContainer());
  container.registerComponentInstance(SemService.class.getName(),this);
  for (  SemContributorEP contributor : myProject.getExtensions(SemContributor.EP_NAME)) {
    contributor.registerSemProviders(container,registrar);
  }
  return map;
}
