{
  super.visitTryStatement(statement);
  if (!PsiUtil.isLanguageLevel7OrHigher(statement)) {
    return;
  }
  PsiCatchSection[] catchSections=statement.getCatchSections();
  boolean[] duplicates=new boolean[catchSections.length];
  for (int i=0; i < catchSections.length; i++) {
    if (duplicates[i])     continue;
    InputVariables inputVariables=new InputVariables(Collections.singletonList(catchSections[i].getParameter()),statement.getProject(),new LocalSearchScope(catchSections[i].getCatchBlock()),false);
    DuplicatesFinder finder=new DuplicatesFinder(new PsiElement[]{catchSections[i].getCatchBlock()},inputVariables,null,Collections.<PsiVariable>emptyList());
    for (int j=0; j < catchSections.length; j++) {
      if (i == j || duplicates[j])       continue;
      Match match=finder.isDuplicate(catchSections[j].getCatchBlock(),true);
      if (match != null) {
        registerError(catchSections[j]);
        duplicates[i]=true;
        duplicates[j]=true;
      }
    }
  }
}
