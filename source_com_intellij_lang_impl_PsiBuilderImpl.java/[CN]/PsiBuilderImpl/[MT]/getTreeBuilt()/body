{
  StartMarker rootMarker=(StartMarker)myProduction.get(0);
  final ASTNode rootNode;
  if (myFileLevelParsing) {
    rootNode=new FileElement(rootMarker.myType);
    myCharTable=((FileElement)rootNode).getCharTable();
  }
 else {
    rootNode=new CompositeElement(rootMarker.myType);
    rootNode.putUserData(CharTable.CHAR_TABLE_KEY,myCharTable);
  }
  ASTNode curNode=rootNode;
  int curToken=0;
  for (int i=1; i < myProduction.size(); i++) {
    LOG.assertTrue(curNode != null,"Unexpected end of the production");
    ProductionMarker item=myProduction.get(i);
    int lexIndex=item.myLexemIndex;
    if (item instanceof StartMarker) {
      StartMarker marker=(StartMarker)item;
      curToken=insertLeafs(curToken,lexIndex,curNode);
      ASTNode childNode=new CompositeElement(marker.myType);
      TreeUtil.addChildren((CompositeElement)curNode,(TreeElement)childNode);
      curNode=childNode;
    }
 else     if (item instanceof DoneMarker) {
      DoneMarker doneMarker=(DoneMarker)item;
      curToken=insertLeafs(curToken,lexIndex,curNode);
      LOG.assertTrue(doneMarker.myStart.myType == curNode.getElementType());
      curNode=curNode.getTreeParent();
    }
 else     if (item instanceof ErrorItem) {
      final PsiErrorElementImpl errorElement=new PsiErrorElementImpl();
      errorElement.setErrorDescription(((ErrorItem)item).myMessage);
      TreeUtil.addChildren((CompositeElement)curNode,errorElement);
    }
  }
  LOG.assertTrue(curToken == myLexems.size(),"Not all of the tokens inserted to the tree");
  LOG.assertTrue(curNode == null,"Unbalanced tree");
  return rootNode;
}
