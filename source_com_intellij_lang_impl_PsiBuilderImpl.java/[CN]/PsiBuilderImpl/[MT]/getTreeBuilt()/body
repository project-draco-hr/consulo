{
  MarkerImpl rootMarker=(MarkerImpl)myProduction.get(0);
  final ASTNode rootNode;
  if (myFileLevelParsing) {
    rootNode=new FileElement(rootMarker.myType);
    myCharTable=((FileElement)rootNode).getCharTable();
  }
 else {
    rootNode=new CompositeElement(rootMarker.myType);
    rootNode.putUserData(CharTable.CHAR_TABLE_KEY,myCharTable);
  }
  ASTNode curNode=rootNode;
  for (int i=1; i < myProduction.size(); i++) {
    LOG.assertTrue(curNode != null,"Unexpected end of the production");
    Object item=myProduction.get(i);
    if (item instanceof LexemImpl) {
      LexemImpl lexem=(LexemImpl)item;
      final LeafPsiElement childNode=new LeafPsiElement(lexem.getTokenType(),myLexer.getBuffer(),lexem.myTokenStart,lexem.myTokenEnd,lexem.myState,myCharTable);
      TreeUtil.addChildren((CompositeElement)curNode,childNode);
    }
 else     if (item instanceof MarkerImpl) {
      MarkerImpl marker=(MarkerImpl)item;
      ASTNode childNode=new CompositeElement(marker.myType);
      TreeUtil.addChildren((CompositeElement)curNode,(TreeElement)childNode);
      curNode=childNode;
    }
 else     if (item instanceof DoneMarker) {
      DoneMarker doneMarker=(DoneMarker)item;
      LOG.assertTrue(doneMarker.myMarker.myType == curNode.getElementType());
      curNode=curNode.getTreeParent();
    }
 else     if (item instanceof ErrorItem) {
      final PsiErrorElementImpl errorElement=new PsiErrorElementImpl();
      errorElement.setErrorDescription(((ErrorItem)item).myMessage);
      TreeUtil.addChildren((CompositeElement)curNode,errorElement);
    }
  }
  LOG.assertTrue(curNode == null,"Unbalanced tree");
  return rootNode;
}
