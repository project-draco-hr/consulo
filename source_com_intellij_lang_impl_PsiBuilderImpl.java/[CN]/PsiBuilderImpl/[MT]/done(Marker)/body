{
  LOG.assertTrue(((StartMarker)marker).myDoneMarker == null,"Marker already done.");
  int idx=myProduction.lastIndexOf(marker);
  LOG.assertTrue(idx >= 0,"Marker never been added.");
  for (int i=myProduction.size() - 1; i > idx; i--) {
    Object item=myProduction.get(i);
    if (item instanceof Marker) {
      StartMarker otherMarker=(StartMarker)item;
      if (otherMarker.myDoneMarker == null) {
        LOG.error("Another not done marker added after this one. Must be done before this.");
        final Throwable debugAllocOther=otherMarker.myDebugAllocationPosition;
        final Throwable debugAllocThis=((StartMarker)marker).myDebugAllocationPosition;
        if (debugAllocOther != null) {
          LOG.error("Attempt to close marker allocated at: ",debugAllocThis);
          LOG.error("Before marker allocated at: " + debugAllocOther);
        }
      }
    }
  }
  DoneMarker doneMarker=new DoneMarker((StartMarker)marker,myCurrentLexem);
  ((StartMarker)marker).myDoneMarker=doneMarker;
  myProduction.add(doneMarker);
}
