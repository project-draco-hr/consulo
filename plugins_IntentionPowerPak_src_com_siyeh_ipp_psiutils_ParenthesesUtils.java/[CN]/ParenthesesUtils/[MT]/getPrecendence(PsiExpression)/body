{
  if (exp instanceof PsiThisExpression || exp instanceof PsiLiteralExpression || exp instanceof PsiSuperExpression|| exp instanceof PsiReferenceExpression|| exp instanceof PsiClassObjectAccessExpression|| exp instanceof PsiArrayAccessExpression|| exp instanceof PsiArrayInitializerExpression) {
    return LITERAL_PRECEDENCE;
  }
  if (exp instanceof PsiMethodCallExpression) {
    return METHOD_CALL_PRECEDENCE;
  }
  if (exp instanceof PsiTypeCastExpression || exp instanceof PsiNewExpression) {
    return TYPE_CAST_PRECEDENCE;
  }
  if (exp instanceof PsiPrefixExpression) {
    return PREFIX_PRECEDENCE;
  }
  if (exp instanceof PsiPostfixExpression) {
    return POSTFIX_PRECEDENCE;
  }
  if (exp instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)exp;
    final PsiJavaToken sign=binaryExpression.getOperationSign();
    return precedenceForBinaryOperator(sign);
  }
  if (exp instanceof PsiInstanceOfExpression) {
    return RELATIONAL_PRECEDENCE;
  }
  if (exp instanceof PsiConditionalExpression) {
    return CONDITIONAL_EXPRESSION_EXPRESSION;
  }
  if (exp instanceof PsiAssignmentExpression) {
    return ASSIGNMENT_EXPRESSION_PRECEDENCE;
  }
  if (exp instanceof PsiParenthesizedExpression) {
    return PARENTHESIZED_EXPRESSION_PRECEDENCE;
  }
  return -1;
}
