{
  PsiExpression body=parenthesizedExp.getExpression();
  while (body instanceof PsiParenthesizedExpression) {
    body=((PsiParenthesizedExpression)body).getExpression();
  }
  if (!(parenthesizedExp.getParent() instanceof PsiExpression)) {
    return removeParentheses(body);
  }
  final PsiExpression parentExp=(PsiExpression)parenthesizedExp.getParent();
  final int parentPrecedence=getPrecendence(parentExp);
  final int childPrecedence=getPrecendence(body);
  if (parentPrecedence < childPrecedence) {
    return '(' + removeParentheses(body) + ')';
  }
 else   if (parentPrecedence == childPrecedence) {
    if (parentExp instanceof PsiBinaryExpression && body instanceof PsiBinaryExpression) {
      final IElementType parentOperator=((PsiBinaryExpression)parentExp).getOperationSign().getTokenType();
      final IElementType bodyOperator=((PsiBinaryExpression)body).getOperationSign().getTokenType();
      final PsiExpression lhs=((PsiBinaryExpression)parentExp).getLOperand();
      if (lhs.equals(parenthesizedExp) && parentOperator.equals(bodyOperator)) {
        return removeParentheses(body);
      }
 else {
        return '(' + removeParentheses(body) + ')';
      }
    }
 else {
      return removeParentheses(body);
    }
  }
 else {
    return removeParentheses(body);
  }
}
