{
  final PsiExpression[] dimensions=newExp.getArrayDimensions();
  String[] strippedDimensions=null;
  if (dimensions != null) {
    strippedDimensions=new String[dimensions.length];
    for (int i=0; i < dimensions.length; i++) {
      strippedDimensions[i]=removeParentheses(dimensions[i]);
    }
  }
  final PsiExpression qualifier=newExp.getQualifier();
  final PsiExpression arrayInitializer=newExp.getArrayInitializer();
  String strippedArrayInitializer=null;
  if (arrayInitializer != null) {
    strippedArrayInitializer=removeParentheses(arrayInitializer);
  }
  final PsiExpressionList argumentList=newExp.getArgumentList();
  final PsiExpression[] args=argumentList == null ? null : argumentList.getExpressions();
  String[] strippedArgs=null;
  if (args != null) {
    strippedArgs=new String[args.length];
    for (int i=0; i < args.length; i++) {
      strippedArgs[i]=removeParentheses(args[i]);
    }
  }
  if (qualifier != null) {
    return newExp.getText();
  }
  final PsiElement[] children=newExp.getChildren();
  for (int i=0; i < children.length; i++) {
    final PsiElement child=children[i];
    if (child instanceof PsiAnonymousClass) {
      return newExp.getText();
    }
  }
  final StringBuffer out=new StringBuffer(128);
  out.append("new ");
  final PsiJavaCodeReferenceElement classReference=newExp.getClassReference();
  final String classReferenceText=classReference.getText();
  out.append(classReferenceText);
  if (strippedArgs != null) {
    out.append('(');
    for (int i=0; i < strippedArgs.length; i++) {
      if (i != 0) {
        out.append(',');
      }
      out.append(strippedArgs[i]);
    }
    out.append(')');
  }
  if (strippedDimensions != null) {
    for (int i=0; i < strippedDimensions.length; i++) {
      out.append('[');
      out.append(strippedDimensions[i]);
      out.append(']');
    }
  }
  if (strippedArrayInitializer != null) {
    out.append(strippedArrayInitializer);
  }
  return out.toString();
}
