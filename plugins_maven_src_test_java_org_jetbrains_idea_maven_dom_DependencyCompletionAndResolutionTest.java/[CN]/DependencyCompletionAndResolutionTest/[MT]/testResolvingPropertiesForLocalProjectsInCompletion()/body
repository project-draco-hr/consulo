{
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<properties>"+ "  <module1Name>module1</module1Name>"+ "</properties>"+ "<modules>"+ " <module>m1</module>"+ " <module>m2</module>"+ "</modules>");
  createModulePom("m1","<groupId>${pom.parent.groupId}</groupId>" + "<artifactId>${module1Name}</artifactId>" + "<parent>"+ "  <groupId>test</groupId>"+ "  <artifactId>project</artifactId>"+ "  <version>1</version>"+ "</parent>");
  VirtualFile m=createModulePom("m2","<groupId>test</groupId>" + "<artifactId>module2</artifactId>" + "<version>1</version>");
  importProject();
  assertModules("project","module1","module2");
  createModulePom("m2","<groupId>test</groupId>" + "<artifactId>module2</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId>module1</artifactId>"+ "    <version><caret></version>"+ "  </dependency>"+ "</dependencies>");
  assertCompletionVariants(m,"1");
  createModulePom("m2","<groupId>test</groupId>" + "<artifactId>module2</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId>module1</artifactId>"+ "    <version>1</version>"+ "  </dependency>"+ "</dependencies>");
  checkHighlighting(m);
}
