{
  if (ignore())   return;
  updateProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<modules>"+ " <module>m1</module>"+ " <module>m2</module>"+ "</modules>");
  VirtualFile m1=createModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>");
  createModulePom("m2","<groupId>test</groupId>" + "<artifactId>m2</artifactId>" + "<version>1</version>");
  importProject();
  updateModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId><caret></artifactId>"+ "  </dependency>"+ "</dependencies>");
  assertCompletionVariants(m1,"project","m1","m2");
  updateModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>");
  updateModulePom("m2","<groupId>test</groupId>" + "<artifactId>m2_new</artifactId>" + "<version>1</version>");
  importProject();
  updateModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId><caret></artifactId>"+ "  </dependency>"+ "</dependencies>");
  assertCompletionVariants(m1,"project","m1","m2_new");
}
