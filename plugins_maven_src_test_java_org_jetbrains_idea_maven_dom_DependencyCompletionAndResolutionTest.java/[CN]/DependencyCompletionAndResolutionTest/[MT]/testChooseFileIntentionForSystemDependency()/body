{
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency><caret>"+ "    <groupId>xxx</groupId>"+ "    <artifactId>xxx</artifactId>"+ "    <version>xxx</version>"+ "    <scope>system</system>"+ "  </dependency>"+ "</dependencies>");
  IntentionAction action=getIntentionAtCaret("Choose File");
  assertNotNull(action);
  String libPath=myIndicesFixture.getRepositoryHelper().getTestDataPath("local1/junit/junit/4.0/junit-4.0.jar");
  VirtualFile libFile=LocalFileSystem.getInstance().findFileByPath(libPath);
  MyFileChooserFactory factory=new MyFileChooserFactory();
  factory.setFiles(new VirtualFile[]{libFile});
  ((ChooseFileIntentionAction)((IntentionActionWrapper)action).getDelegate()).setTestFileChooserFactory(factory);
  int prevValue=CodeStyleSettingsManager.getInstance(myProject).getCurrentSettings().XML_TEXT_WRAP;
  try {
    CodeStyleSettingsManager.getInstance(myProject).getCurrentSettings().XML_TEXT_WRAP=CodeStyleSettings.DO_NOT_WRAP;
    myCodeInsightFixture.launchAction(action);
  }
  finally {
    CodeStyleSettingsManager.getInstance(myProject).getCurrentSettings().XML_TEXT_WRAP=prevValue;
  }
  MavenDomProjectModel model=MavenUtil.getMavenModel(myProject,myProjectPom);
  MavenDomDependency dep=model.getDependencies().getDependencies().get(0);
  assertEquals(getPsiFile(libFile),dep.getSystemPath().getValue());
}
