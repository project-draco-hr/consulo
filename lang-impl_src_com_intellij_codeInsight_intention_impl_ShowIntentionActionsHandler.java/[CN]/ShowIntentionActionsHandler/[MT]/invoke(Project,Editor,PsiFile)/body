{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  if (HintManagerImpl.getInstanceImpl().performCurrentQuestionAction())   return;
  if (file instanceof PsiCodeFragment)   return;
  TemplateState state=TemplateManagerImpl.getTemplateState(editor);
  if (state != null && !state.isFinished())   return;
  final DaemonCodeAnalyzerImpl codeAnalyzer=(DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(project);
  codeAnalyzer.autoImportReferenceAtCursor(editor,file);
  final ArrayList<HighlightInfo.IntentionActionDescriptor> intentionsToShow=new ArrayList<HighlightInfo.IntentionActionDescriptor>();
  final ArrayList<HighlightInfo.IntentionActionDescriptor> errorFixesToShow=new ArrayList<HighlightInfo.IntentionActionDescriptor>();
  final ArrayList<HighlightInfo.IntentionActionDescriptor> inspectionFixesToShow=new ArrayList<HighlightInfo.IntentionActionDescriptor>();
  final ArrayList<HighlightInfo.IntentionActionDescriptor> gutters=new ArrayList<HighlightInfo.IntentionActionDescriptor>();
  ShowIntentionsPass.getActionsToShow(editor,file,intentionsToShow,errorFixesToShow,inspectionFixesToShow,gutters,-1);
  if (!codeAnalyzer.isAllAnalysisFinished(file)) {
    runPassesAndShowIntentions(project,editor,file,intentionsToShow,gutters);
  }
 else   if (!intentionsToShow.isEmpty() || !errorFixesToShow.isEmpty() || !inspectionFixesToShow.isEmpty()|| !gutters.isEmpty()) {
    IntentionHintComponent.showIntentionHint(project,file,editor,intentionsToShow,errorFixesToShow,inspectionFixesToShow,gutters,true);
  }
}
