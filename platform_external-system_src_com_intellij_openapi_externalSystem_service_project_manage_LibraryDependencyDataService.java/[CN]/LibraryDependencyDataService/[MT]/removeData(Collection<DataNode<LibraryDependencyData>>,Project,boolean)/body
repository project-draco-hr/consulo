{
  if (toRemove.isEmpty()) {
    return;
  }
  Map<DataNode<ModuleData>,Collection<DataNode<LibraryDependencyData>>> byModule=ExternalSystemUtil.groupBy(toRemove,MODULE);
  for (  Map.Entry<DataNode<ModuleData>,Collection<DataNode<LibraryDependencyData>>> entry : byModule.entrySet()) {
    Module module=myProjectStructureHelper.findIdeModule(entry.getKey().getData(),project);
    if (module == null) {
      continue;
    }
    List<ExportableOrderEntry> dependencies=ContainerUtilRt.newArrayList();
    for (    DataNode<LibraryDependencyData> node : entry.getValue()) {
      LibraryOrderEntry dependency=myProjectStructureHelper.findIdeLibraryDependency(module.getName(),node.getData().getName(),project);
      if (dependency != null) {
        dependencies.add(dependency);
      }
    }
    removeData(dependencies,module,synchronous);
  }
}
