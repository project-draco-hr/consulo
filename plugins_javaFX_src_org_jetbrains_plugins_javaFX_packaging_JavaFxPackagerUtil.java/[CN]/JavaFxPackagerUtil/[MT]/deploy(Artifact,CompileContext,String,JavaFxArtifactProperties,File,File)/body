{
  final GeneralCommandLine commandLine=new GeneralCommandLine();
  try {
    commandLine.setExePath(binPath + File.separator + "javafxpackager");
    commandLine.addParameter("-deploy");
    final String title=properties.getTitle();
    if (!StringUtil.isEmptyOrSpaces(title)) {
      commandLine.addParameter("-title");
      commandLine.addParameter(title);
    }
    final String vendor=properties.getVendor();
    if (!StringUtil.isEmptyOrSpaces(vendor)) {
      commandLine.addParameter("-vendor");
      commandLine.addParameter(vendor);
    }
    final String description=properties.getDescription();
    if (!StringUtil.isEmptyOrSpaces(description)) {
      commandLine.addParameter("-description");
      commandLine.addParameter(description);
    }
    commandLine.addParameter("-appclass");
    commandLine.addParameter(properties.getAppClass());
    commandLine.addParameter("-width");
    commandLine.addParameter("600");
    commandLine.addParameter("-height");
    commandLine.addParameter("400");
    commandLine.addParameter("-name");
    commandLine.addParameter(artifact.getName());
    commandLine.addParameter("-outdir");
    final File tempDirectory;
    try {
      tempDirectory=FileUtil.createTempDirectory("javafxpackager","out");
    }
 catch (    IOException e) {
      registerJavaFxPackagerError(compileContext,e);
      return;
    }
    commandLine.addParameter(tempDirectory.getPath());
    commandLine.addParameter("-outfile");
    commandLine.addParameter(artifact.getName());
    commandLine.addParameter("-srcdir");
    commandLine.addParameter(tempDirWithCreatedJar.getPath());
    commandLine.addParameter("-v");
    final MyOnTerminatedProcessAdapter adapter=new MyOnTerminatedProcessAdapter(compileContext){
      @Override protected void onTerminated(){
        FileUtil.delete(tempUnzippedArtifactOutput);
        FileUtil.delete(new File(artifact.getOutputFilePath()));
        copyResultsToArtifactsOutput(tempDirectory);
        copyResultsToArtifactsOutput(tempDirWithCreatedJar);
      }
      private void copyResultsToArtifactsOutput(      final File tempDirectory){
        try {
          final File resultedJar=new File(artifact.getOutputPath());
          FileUtil.copyDir(tempDirectory,resultedJar);
        }
 catch (        IOException e) {
          LOG.info(e);
        }
        FileUtil.delete(tempDirectory);
      }
    }
;
    startProcess(commandLine,adapter);
  }
 catch (  ExecutionException ex) {
    registerJavaFxPackagerError(compileContext,ex);
  }
}
