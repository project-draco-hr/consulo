{
  myProject=project;
  myVcsConfiguration=VcsConfiguration.getInstance(myProject);
  myProjectMessage="<html>" + StringUtil.escapeXml(VcsDirectoryMapping.PROJECT_CONSTANT) + " - "+ DefaultVcsRootPolicy.getInstance(myProject).getProjectConfigurationMessage(myProject).replace('\n',' ')+ "</html>";
  myIsDisabled=myProject.isDefault();
  myVcsManager=ProjectLevelVcsManager.getInstance(project);
  final VcsDescriptor[] vcsDescriptors=myVcsManager.getAllVcss();
  myAllVcss=new HashMap<String,VcsDescriptor>();
  for (  VcsDescriptor vcsDescriptor : vcsDescriptors) {
    myAllVcss.put(vcsDescriptor.getName(),vcsDescriptor);
  }
  myDirectoryMappingTable=new TableView<VcsDirectoryMapping>();
  myBaseRevisionTexts=new JCheckBox("Store on shelf base revision texts for files under DVCS");
  initPanel();
  myDirectoryRenderer=new MyDirectoryRenderer(myProject);
  DIRECTORY=new ColumnInfo<VcsDirectoryMapping,VcsDirectoryMapping>(VcsBundle.message("column.info.configure.vcses.directory")){
    public VcsDirectoryMapping valueOf(    final VcsDirectoryMapping mapping){
      return mapping;
    }
    @Override public TableCellRenderer getRenderer(    VcsDirectoryMapping vcsDirectoryMapping){
      return myDirectoryRenderer;
    }
  }
;
  initializeModel();
  final JComboBox comboBox=myVcsComboBox.getComboBox();
  comboBox.setModel(buildVcsWrappersModel(myProject));
  comboBox.addItemListener(new ItemListener(){
    public void itemStateChanged(    final ItemEvent e){
      if (myDirectoryMappingTable.isEditing()) {
        myDirectoryMappingTable.stopEditing();
      }
    }
  }
);
  myVcsComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final VcsDescriptor vcsWrapper=((VcsDescriptor)comboBox.getSelectedItem());
      new VcsConfigurationsDialog(project,comboBox,vcsWrapper).show();
    }
  }
);
  myDirectoryMappingTable.setRowHeight(myVcsComboBox.getPreferredSize().height);
  if (myIsDisabled) {
    myDirectoryMappingTable.setEnabled(false);
  }
}
