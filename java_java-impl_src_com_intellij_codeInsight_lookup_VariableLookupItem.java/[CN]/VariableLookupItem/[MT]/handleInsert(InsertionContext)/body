{
  super.handleInsert(context);
  PsiVariable variable=getObject();
  context.getDocument().replaceString(context.getStartOffset(),context.getTailOffset(),variable.getName());
  PsiDocumentManager.getInstance(context.getProject()).commitDocument(context.getDocument());
  if (variable instanceof PsiField && shouldQualify((PsiField)variable,context)) {
    qualifyFieldReference(context,(PsiField)variable);
  }
  PsiReferenceExpression ref=PsiTreeUtil.findElementOfClassAtOffset(context.getFile(),context.getTailOffset() - 1,PsiReferenceExpression.class,false);
  if (ref != null) {
    JavaCodeStyleManager.getInstance(context.getProject()).shortenClassReferences(ref);
  }
  final char completionChar=context.getCompletionChar();
  if (completionChar == '=') {
    context.setAddCompletionChar(false);
    TailType.EQ.processTail(context.getEditor(),context.getTailOffset());
  }
 else   if (completionChar == ',' && getAttribute(LookupItem.TAIL_TYPE_ATTR) != TailType.UNKNOWN) {
    context.setAddCompletionChar(false);
    TailType.COMMA.processTail(context.getEditor(),context.getTailOffset());
    AutoPopupController.getInstance(context.getProject()).autoPopupParameterInfo(context.getEditor(),null);
  }
 else   if (completionChar == ':') {
    context.setAddCompletionChar(false);
    TailType.COND_EXPR_COLON.processTail(context.getEditor(),context.getTailOffset());
  }
 else   if (completionChar == '.') {
    AutoPopupController.getInstance(context.getProject()).autoPopupMemberLookup(context.getEditor(),null);
  }
 else   if (completionChar == '!' && PsiType.BOOLEAN.isAssignableFrom(variable.getType())) {
    context.setAddCompletionChar(false);
    if (ref != null) {
      FeatureUsageTracker.getInstance().triggerFeatureUsed(CodeCompletionFeatures.EXCLAMATION_FINISH);
      context.getDocument().insertString(ref.getTextRange().getStartOffset(),"!");
    }
  }
}
