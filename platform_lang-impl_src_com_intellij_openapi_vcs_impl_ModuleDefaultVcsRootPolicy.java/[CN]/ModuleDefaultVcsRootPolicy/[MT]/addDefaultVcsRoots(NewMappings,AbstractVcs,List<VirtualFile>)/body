{
  final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(myProject);
  if (myBaseDir != null && vcs.getName().equals(mappingList.getVcsFor(myBaseDir)) && (vcs.equals(vcsManager.getVcsFor(myBaseDir)))) {
    result.add(myBaseDir);
  }
  final StorageScheme storageScheme=((ProjectEx)myProject).getStateStore().getStorageScheme();
  if (StorageScheme.DIRECTORY_BASED.equals(storageScheme)) {
    final VirtualFile ideaDir=myBaseDir.findChild(Project.DIRECTORY_STORE_FOLDER);
    if (ideaDir != null && ideaDir.isValid() && ideaDir.isDirectory() && vcs.equals(vcsManager.getVcsFor(ideaDir))) {
      result.add(ideaDir);
    }
  }
  final Module[] modules=ApplicationManager.getApplication().runReadAction(new Computable<Module[]>(){
    public Module[] compute(){
      return myModuleManager.getModules();
    }
  }
);
  for (  Module module : modules) {
    final VirtualFile[] files=ModuleRootManager.getInstance(module).getContentRoots();
    for (    VirtualFile file : files) {
      VcsDirectoryMapping mapping=mappingList.getMappingFor(file,module);
      final String mappingVcs=mapping != null ? mapping.getVcs() : null;
      if (vcs.getName().equals(mappingVcs)) {
        result.add(file);
      }
    }
  }
}
