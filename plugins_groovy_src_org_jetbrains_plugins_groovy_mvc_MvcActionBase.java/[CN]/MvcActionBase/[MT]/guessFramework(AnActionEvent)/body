{
  final Module module=event.getData(event.getPlace().equals(ActionPlaces.MAIN_MENU) ? LangDataKeys.MODULE : LangDataKeys.MODULE_CONTEXT);
  if (module != null) {
    MvcFramework commonPluginModuleFramework=MvcFramework.findCommonPluginModuleFramework(module);
    if (commonPluginModuleFramework != null) {
      for (      Module mod : ModuleManager.getInstance(module.getProject()).getModules()) {
        if (commonPluginModuleFramework.getCommonPluginsModuleName(mod).equals(module.getName())) {
          if (commonPluginModuleFramework.hasSupport(mod)) {
            return new Pair<MvcFramework,Module>(commonPluginModuleFramework,mod);
          }
          return null;
        }
      }
    }
    MvcFramework framework=MvcFramework.getInstance(module);
    if (framework != null) {
      return Pair.create(framework,module);
    }
  }
  final Project project=DataKeys.PROJECT.getData(event.getDataContext());
  if (project == null) {
    return null;
  }
  Pair<MvcFramework,Module> result=null;
  for (  Module mod : ModuleManager.getInstance(project).getModules()) {
    final MvcFramework framework=MvcFramework.getInstance(mod);
    if (framework != null) {
      if (result != null) {
        return null;
      }
      result=Pair.create(framework,mod);
    }
  }
  return result;
}
