{
  checkNameStorage();
  final Map<StubIndexKey,Map<Object,StubIdList>> newStubTree;
  try {
    newStubTree=getStubTree(((SimpleUpdateData)updateData).getNewData());
  }
 catch (  SerializerNotFoundException e) {
    throw new StorageException(e);
  }
  final StubIndexImpl stubIndex=getStubIndex();
  final Collection<StubIndexKey> allStubIndices=stubIndex.getAllStubIndexKeys();
  try {
    for (    StubIndexKey key : allStubIndices) {
      stubIndex.getWriteLock(key).lock();
    }
    try {
      getWriteLock().lock();
      final Map<Integer,SerializedStubTree> oldData=readOldData(inputId);
      final Map<StubIndexKey,Map<Object,StubIdList>> oldStubTree;
      try {
        oldStubTree=getStubTree(oldData);
      }
 catch (      SerializerNotFoundException e) {
        throw new StorageException(e);
      }
      super.updateWithMap(inputId,updateData);
      updateStubIndices(getAffectedIndices(oldStubTree,newStubTree),inputId,oldStubTree,newStubTree);
    }
  finally {
      getWriteLock().unlock();
    }
  }
  finally {
    for (    StubIndexKey key : allStubIndices) {
      stubIndex.getWriteLock(key).unlock();
    }
  }
}
