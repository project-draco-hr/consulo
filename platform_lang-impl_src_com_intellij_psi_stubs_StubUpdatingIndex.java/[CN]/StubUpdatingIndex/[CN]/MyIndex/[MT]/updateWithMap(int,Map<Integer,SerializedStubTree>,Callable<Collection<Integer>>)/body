{
  checkNameStorage();
  final Map<StubIndexKey,Map<Object,TIntArrayList>> newStubTree=getStubTree(newData);
  final StubIndexImpl stubIndex=(StubIndexImpl)StubIndex.getInstance();
  final Collection<StubIndexKey> allStubIndices=stubIndex.getAllStubIndexKeys();
  try {
    for (    StubIndexKey key : allStubIndices) {
      stubIndex.getWriteLock(key).lock();
    }
    try {
      getWriteLock().lock();
      final Map<Integer,SerializedStubTree> oldData=readOldData(inputId);
      final Map<StubIndexKey,Map<Object,TIntArrayList>> oldStubTree=getStubTree(oldData);
      super.updateWithMap(inputId,newData,oldKeysGetter);
      updateStubIndices(getAffectedIndices(oldStubTree,newStubTree),inputId,oldStubTree,newStubTree);
    }
  finally {
      getWriteLock().unlock();
    }
  }
  finally {
    for (    StubIndexKey key : allStubIndices) {
      stubIndex.getWriteLock(key).unlock();
    }
  }
}
