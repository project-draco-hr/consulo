{
  Object data=inputData.getUserData(stubElementKey);
  if (data == null) {
synchronized (inputData) {
      data=inputData.getUserData(stubElementKey);
      if (data == null) {
        final FileType fileType=inputData.getFileType();
        if (fileType.isBinary()) {
          final BinaryFileStubBuilder builder=BinaryFileStubBuilders.INSTANCE.forFileType(fileType);
          if (builder != null) {
            data=builder.buildStubTree(inputData.getFile(),inputData.getContent(),inputData.getProject());
          }
 else {
            data=ObjectUtils.NULL;
          }
        }
 else {
          final LanguageFileType filetype=(LanguageFileType)fileType;
          Language l=filetype.getLanguage();
          final IFileElementType type=LanguageParserDefinitions.INSTANCE.forLanguage(l).getFileNodeType();
          PsiFile psi=inputData.getPsiFile();
          data=((IStubFileElementType)type).getBuilder().buildStubTree(psi);
        }
        inputData.putUserData(stubElementKey,data);
      }
    }
  }
  if (data == ObjectUtils.NULL)   return null;
  if (data instanceof StubElement)   return (StubElement)data;
  throw new AssertionError(data);
}
