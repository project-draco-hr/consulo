{
  if (!(file instanceof PsiJavaFile))   return null;
  final InsertionInfo lineInsertionInfo=super.getInsertionInfo(editor,file,isDown);
  if (lineInsertionInfo == null)   return null;
  LineRange range=lineInsertionInfo.whatToMove;
  range=expandLineRangeToCoverPsiElements(range,editor,file);
  if (range == null)   return null;
  final int startOffset=editor.logicalPositionToOffset(new LogicalPosition(range.startLine,0));
  final int endOffset=editor.logicalPositionToOffset(new LogicalPosition(range.endLine + 1,0));
  final PsiElement[] statements=CodeInsightUtil.findStatementsInRange(file,startOffset,endOffset);
  if (statements == null || statements.length == 0)   return null;
  range.firstElement=statements[0];
  range.lastElement=statements[statements.length - 1];
  if (!checkMovingInsideOutside(file,editor,range,isDown))   return InsertionInfo.ILLEGAL_INFO;
  return calcInsertOffset(editor,file,range,isDown);
}
