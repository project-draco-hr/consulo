{
  myList=new CheckBoxList<EarlyAccessProgramDescriptor>();
  myList.setBorder(null);
  EarlyAccessProgramDescriptor[] extensions=EarlyAccessProgramDescriptor.EP_NAME.getExtensions();
  Arrays.sort(extensions,new Comparator<EarlyAccessProgramDescriptor>(){
    @Override public int compare(    EarlyAccessProgramDescriptor o1,    EarlyAccessProgramDescriptor o2){
      if (o1.isAvailable() && !o2.isAvailable()) {
        return -1;
      }
 else       if (o2.isAvailable() && !o1.isAvailable()) {
        return 1;
      }
      return o1.getName().compareToIgnoreCase(o2.getName());
    }
  }
);
  myList.setItems(Arrays.asList(extensions),new Function<EarlyAccessProgramDescriptor,String>(){
    @Override public String fun(    EarlyAccessProgramDescriptor earlyAccessProgramDescriptor){
      return earlyAccessProgramDescriptor.getName();
    }
  }
,new Function<EarlyAccessProgramDescriptor,Boolean>(){
    @Override public Boolean fun(    EarlyAccessProgramDescriptor earlyAccessProgramDescriptor){
      return EarlyAccessProgramManager.is(earlyAccessProgramDescriptor.getClass());
    }
  }
);
  myList.setCellRenderer(new EarlyAccessCellRender());
  return ScrollPaneFactory.createScrollPane(myList,true);
}
