{
  myTree=tree;
  DnDManager.getInstance().registerSource(new DnDSource(){
    public boolean canStartDragging(    final DnDAction action,    final Point dragOrigin){
      return getNodesToDrag().length > 0;
    }
    public DnDDragStartBean startDragging(    final DnDAction action,    final Point dragOrigin){
      DebuggerTreeNodeImpl[] nodes=getNodesToDrag();
      return new DnDDragStartBean(nodes);
    }
    @Nullable public Pair<Image,Point> createDraggedImage(    final DnDAction action,    final Point dragOrigin){
      DebuggerTreeNodeImpl[] nodes=getNodesToDrag();
      Pair<Image,Point> image;
      if (nodes.length == 1) {
        image=DnDAwareTree.getDragImage(myTree,new TreePath(nodes[0].getPath()),dragOrigin);
      }
 else {
        image=DnDAwareTree.getDragImage(myTree,nodes.length + " elements",dragOrigin);
      }
      return image;
    }
    public void dragDropEnd(){
    }
    public void dropActionChanged(    final int gestureModifiers){
    }
  }
,tree);
}
