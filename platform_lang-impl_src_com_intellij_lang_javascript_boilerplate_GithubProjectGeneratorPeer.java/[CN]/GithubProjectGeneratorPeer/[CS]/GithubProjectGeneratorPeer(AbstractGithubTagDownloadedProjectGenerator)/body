{
  myErrorMessage.setForeground(Color.RED);
  String ghUserName=generator.getGithubUserName();
  String ghRepoName=generator.getGithubRepositoryName();
  myMasterTag=new GithubTagInfo("master",String.format("https://github.com/%s/%s/zipball/master",ghUserName,ghRepoName));
  myComboBox.setRenderer(new ListCellRendererWrapper<GithubTagInfo>(){
    @Override public void customize(    JList list,    GithubTagInfo tag,    int index,    boolean selected,    boolean hasFocus){
      String text=tag == null ? "Unavailable" : tag.getName();
      setText(text);
    }
  }
);
  myTagListProvider=new GithubTagListProvider(ghUserName,ghRepoName);
  fillActionPanel();
  ImmutableSet<GithubTagInfo> cachedTags=myTagListProvider.getCachedTags();
  if (cachedTags != null) {
    onTagsUpdated(cachedTags);
  }
  reloadTagsInBackground();
}
