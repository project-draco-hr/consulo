{
  String ghUserName=generator.getGithubUserName();
  String ghRepoName=generator.getGithubRepositoryName();
  myMasterTag=new GithubTagInfo("master",String.format("https://github.com/%s/%s/zipball/master",ghUserName,ghRepoName));
  myComboBox.setRenderer(new ListCellRendererWrapper<GithubTagInfo>(){
    @Override public void customize(    JList list,    GithubTagInfo tag,    int index,    boolean selected,    boolean hasFocus){
      if (tag != null) {
        setText(tag.getName());
      }
    }
  }
);
  final GithubTagListProvider provider=new GithubTagListProvider(ghUserName,ghRepoName);
  ImmutableSet<GithubTagInfo> cachedTags=provider.getCachedTags();
  if (cachedTags != null) {
    updateTagList(cachedTags);
  }
  myErrorMessage.setText(null);
  myReloadButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      provider.updateTagListAsynchronously(GithubProjectGeneratorPeer.this);
    }
  }
);
  provider.updateTagListAsynchronously(this);
}
