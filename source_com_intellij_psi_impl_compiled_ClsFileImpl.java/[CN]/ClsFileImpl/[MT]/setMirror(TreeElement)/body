{
  PsiElement mirrorFile=SourceTreeToPsiMap.treeElementToPsi(element);
  if (mirrorFile instanceof PsiJavaFile) {
    PsiPackageStatement packageStatementMirror=((PsiJavaFile)mirrorFile).getPackageStatement();
    final PsiPackageStatement packageStatement=getPackageStatement();
    if (packageStatementMirror != null && packageStatement != null) {
      ((ClsElementImpl)packageStatement).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(packageStatementMirror));
    }
    PsiClass[] classes=getClasses();
    if (classes.length == 1) {
      if (!JavaPsiFacade.getInstance(getProject()).getNameHelper().isIdentifier(classes[0].getName())) {
        return;
      }
    }
    PsiClass[] mirrorClasses=((PsiJavaFile)mirrorFile).getClasses();
    LOG.assertTrue(classes.length == mirrorClasses.length);
    if (classes.length == mirrorClasses.length) {
      for (int i=0; i < classes.length; i++) {
        ((ClsElementImpl)classes[i]).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirrorClasses[i]));
      }
    }
  }
  setMirrorCheckingType(element,null);
}
