{
  LOG.assertTrue(myMirror == null);
  myMirror=element;
  PsiPackageStatement packageStatement=((PsiJavaFile)SourceTreeToPsiMap.treeElementToPsi(myMirror)).getPackageStatement();
  if (packageStatement != null) {
    ((ClsElementImpl)getPackageStatement()).setMirror(SourceTreeToPsiMap.psiElementToTree(packageStatement));
  }
  PsiClass[] classes=getClasses();
  PsiClass[] mirrorClasses=((PsiJavaFile)SourceTreeToPsiMap.treeElementToPsi(myMirror)).getClasses();
  LOG.assertTrue(classes.length == mirrorClasses.length);
  if (classes.length == mirrorClasses.length) {
    for (int i=0; i < classes.length; i++) {
      ((ClsElementImpl)classes[i]).setMirror(SourceTreeToPsiMap.psiElementToTree(mirrorClasses[i]));
    }
  }
}
