{
  ChangeListManager.getInstance(myProject).addChangeListListener(myListener);
  if (ApplicationManager.getApplication().isHeadlessEnvironment())   return;
  StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable(){
    public void run(){
      final ToolWindowManager toolWindowManager=ToolWindowManager.getInstance(myProject);
      if (toolWindowManager != null) {
        myContentManager=PeerFactory.getInstance().getContentFactory().createContentManager(false,myProject);
        final Content content=PeerFactory.getInstance().getContentFactory().createContent(createChangeViewComponent(),"Local",false);
        myContentManager.addContent(content);
        myToolWindow=toolWindowManager.registerToolWindow(TOOLWINDOW_ID,myContentManager.getComponent(),ToolWindowAnchor.BOTTOM);
        myToolWindow.setIcon(IconLoader.getIcon("/general/toolWindowChanges.png"));
        updateToolWindowAvailability();
        myConnection.subscribe(ProjectTopics.MODULES,new MyModuleListener());
        ProjectLevelVcsManager.getInstance(myProject).addVcsListener(myVcsListener);
        WolfTheProblemSolver.getInstance(myProject).addProblemListener(myProblemListener);
        SelectInManager.getInstance(myProject).addTarget(new SelectInChangesViewTarget(myProject));
      }
    }
  }
);
}
