{
  super(project,settings,false,content);
  myAlarm=new Alarm(Alarm.ThreadToUse.SHARED_THREAD,project);
  final String scopeName=PropertiesComponent.getInstance(project).getValue(SELECTED_SCOPE);
  rebuildModel(project,scopeName);
  myScopeListener=new NamedScopesHolder.ScopeListener(){
    @Override public void scopesChanged(){
      final NamedScope scope=(NamedScope)myScopes.getSelectedItem();
      rebuildModel(project,scope != null ? scope.getName() : null);
    }
  }
;
  myNamedScopeManager=NamedScopeManager.getInstance(project);
  myNamedScopeManager.addScopeListener(myScopeListener);
  myValidationManager=DependencyValidationManager.getInstance(project);
  myValidationManager.addScopeListener(myScopeListener);
  myScopes.setRenderer(new ListCellRendererWrapper<NamedScope>(myScopes){
    @Override public void customize(    JList list,    NamedScope value,    int index,    boolean selected,    boolean hasFocus){
      setText(value.getName());
    }
  }
);
  myScopes.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      rebuildWithAlarm(ScopeBasedTodosPanel.this.myAlarm);
      final NamedScope selectedItem=(NamedScope)myScopes.getSelectedItem();
      if (selectedItem != null) {
        PropertiesComponent.getInstance(myProject).setValue(SELECTED_SCOPE,selectedItem.getName());
      }
    }
  }
);
  rebuildWithAlarm(myAlarm);
}
