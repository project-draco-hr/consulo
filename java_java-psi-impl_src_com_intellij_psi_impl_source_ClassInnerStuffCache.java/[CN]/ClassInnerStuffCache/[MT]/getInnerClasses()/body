{
  CachedValue<PsiClass[]> cache=myInnerClassesCache;
  if (cache == null) {
    final CachedValuesManager manager=CachedValuesManager.getManager(myClass.getProject());
    final Object[] dependencies={PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT,myTreeChangeTracker};
    myInnerClassesCache=cache=manager.createCachedValue(new CachedValueProvider<PsiClass[]>(){
      public Result<PsiClass[]> compute(){
        return Result.create(getAllInnerClasses(),dependencies);
      }
    }
,false);
  }
  final PsiClass[] classes=cache.getValue();
  return classes != null ? classes : PsiClass.EMPTY_ARRAY;
}
