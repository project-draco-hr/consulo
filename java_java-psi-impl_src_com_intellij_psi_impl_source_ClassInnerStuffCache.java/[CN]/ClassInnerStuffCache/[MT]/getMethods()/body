{
  CachedValue<PsiMethod[]> cache=myMethodsCache;
  if (cache == null) {
    final CachedValuesManager manager=CachedValuesManager.getManager(myClass.getProject());
    final Object[] dependencies={PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT,myTreeChangeTracker};
    myMethodsCache=cache=manager.createCachedValue(new CachedValueProvider<PsiMethod[]>(){
      @Override public Result<PsiMethod[]> compute(){
        return Result.create(getAllMethods(),dependencies);
      }
    }
,false);
  }
  final PsiMethod[] methods=cache.getValue();
  return methods != null ? methods : PsiMethod.EMPTY_ARRAY;
}
