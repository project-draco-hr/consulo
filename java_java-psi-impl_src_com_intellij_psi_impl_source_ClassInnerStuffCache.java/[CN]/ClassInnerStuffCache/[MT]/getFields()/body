{
  CachedValue<PsiField[]> cache=myFieldsCache;
  if (cache == null) {
    final CachedValuesManager manager=CachedValuesManager.getManager(myClass.getProject());
    final Object[] dependencies={PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT,myTreeChangeTracker};
    myFieldsCache=cache=manager.createCachedValue(new CachedValueProvider<PsiField[]>(){
      @Override public Result<PsiField[]> compute(){
        return Result.create(getAllFields(),dependencies);
      }
    }
,false);
  }
  final PsiField[] fields=cache.getValue();
  return fields != null ? fields : PsiField.EMPTY_ARRAY;
}
