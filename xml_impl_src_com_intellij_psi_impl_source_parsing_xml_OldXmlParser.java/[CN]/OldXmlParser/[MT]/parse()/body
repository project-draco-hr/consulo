{
  final FileElement holderElement=myManager != null ? DummyHolderFactory.createHolder(myManager,myContext).getTreeElement() : null;
  Lexer lexer=getLexer(myContextType,myBuffer);
  int state=lexer.getState();
  final CompositeElement root=ASTFactory.composite(myRootType);
  if (holderElement != null)   holderElement.rawAddChildren(root);
  XmlEntityDecl.EntityContextType contextType=myContextType;
  if (myRootType == XML_DOCUMENT) {
    root.rawAddChildren(parseProlog(lexer));
  }
 else   if (myRootType == XML_MARKUP_DECL) {
    parseMarkupDecl(lexer,root);
    contextType=null;
  }
  if (contextType != null) {
switch (contextType) {
case GENERIC_XML:
      parseGenericXml(lexer,root,myNames != null ? myNames : new THashSet<String>());
    break;
case ELEMENT_CONTENT_SPEC:
  parseElementContentSpec(root,lexer);
break;
case ATTLIST_SPEC:
parseAttlistContent(root,lexer);
break;
case ATTR_VALUE:
parseAttrValue(root,lexer);
case ATTRIBUTE_SPEC:
parseAttributeContentSpec(root,lexer);
break;
case ENTITY_DECL_CONTENT:
parseEntityDeclContent(root,lexer);
break;
case ENUMERATED_TYPE:
parseEnumeratedTypeContent(root,lexer);
break;
}
}
if ((myContext == null || contextType == XmlEntityDecl.EntityContextType.GENERIC_XML) && contextType != XmlEntityDecl.EntityContextType.ELEMENT_CONTENT_SPEC) {
insertMissingTokens(root,((FilterLexer)lexer).getOriginal(),0,myBuffer.length(),state,new WhiteSpaceAndCommentsProcessor());
}
return root;
}
