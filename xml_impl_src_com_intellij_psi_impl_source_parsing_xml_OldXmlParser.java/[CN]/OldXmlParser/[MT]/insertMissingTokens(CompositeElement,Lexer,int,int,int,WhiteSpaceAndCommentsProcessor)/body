{
  if (state < 0) {
    lexer.start(lexer.getBufferSequence(),startOffset,endOffset);
  }
 else {
    lexer.start(lexer.getBufferSequence(),startOffset,endOffset,state);
  }
  LeafElement leaf=TreeUtil.findFirstLeaf(root);
  if (leaf == null) {
    final TreeElement firstMissing=processor.process(lexer);
    if (firstMissing != null) {
      root.rawAddChildren(firstMissing);
    }
    return;
  }
{
    final IElementType tokenType=lexer.getTokenType();
    if (tokenType != leaf.getElementType() && processor.isTokenValid(tokenType)) {
      final TreeElement firstMissing=processor.process(lexer);
      if (firstMissing != null) {
        root.getFirstChildNode().rawInsertBeforeMe(firstMissing);
      }
    }
    passTokenOrChameleon(leaf,lexer);
  }
  insertMissingTokensInTreeBody(leaf,lexer,processor,null);
  if (lexer.getTokenType() != null) {
    final TreeElement firstMissing=processor.process(lexer);
    if (firstMissing != null) {
      ASTNode current=root;
      while (current instanceof CompositeElement) {
        if (current.getUserData(TreeUtil.UNCLOSED_ELEMENT_PROPERTY) != null)         break;
        current=current.getLastChildNode();
      }
      if (current instanceof CompositeElement) {
        ((CompositeElement)current).rawAddChildren(firstMissing);
      }
 else {
        root.getLastChildNode().rawInsertAfterMe(firstMissing);
      }
    }
  }
}
