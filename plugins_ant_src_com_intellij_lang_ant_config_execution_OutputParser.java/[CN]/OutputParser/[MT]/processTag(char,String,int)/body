{
  if (LOG.isDebugEnabled()) {
    LOG.debug(String.valueOf(tagName) + priority + "="+ tagValue);
  }
  if (IdeaAntLogger2.TARGET == tagName) {
    setProgressStatistics(AntBundle.message("target.tag.name.status.text",tagValue));
  }
 else   if (IdeaAntLogger2.TASK == tagName) {
    setProgressText(AntBundle.message("executing.task.tag.value.status.text",tagValue));
    if (JAVAC.equals(tagValue)) {
      myJavacMessages=new ArrayList<String>();
    }
 else     if (ECHO.equals(tagValue)) {
      myIsEcho=true;
    }
  }
  if (myJavacMessages != null && (IdeaAntLogger2.MESSAGE == tagName || IdeaAntLogger2.ERROR == tagName)) {
    myJavacMessages.add(tagValue);
    return;
  }
  if (IdeaAntLogger2.MESSAGE == tagName) {
    if (myIsEcho) {
      myMessageView.outputMessage(tagValue,AntBuildMessageView.PRIORITY_VERBOSE);
    }
 else {
      myMessageView.outputMessage(tagValue,priority);
    }
  }
 else   if (IdeaAntLogger2.TARGET == tagName) {
    myMessageView.startTarget(tagValue);
  }
 else   if (IdeaAntLogger2.TASK == tagName) {
    myMessageView.startTask(tagValue);
  }
 else   if (IdeaAntLogger2.ERROR == tagName) {
    myMessageView.outputError(tagValue,priority);
  }
 else   if (IdeaAntLogger2.EXCEPTION == tagName) {
    String exceptionText=tagValue.replace(IdeaAntLogger2.EXCEPTION_LINE_SEPARATOR,'\n');
    myMessageView.outputException(exceptionText);
  }
 else   if (IdeaAntLogger2.BUILD == tagName) {
    myMessageView.startBuild(myBuildName);
  }
 else   if (IdeaAntLogger2.TARGET_END == tagName || IdeaAntLogger2.TASK_END == tagName) {
    final List<String> javacMessages=myJavacMessages;
    myJavacMessages=null;
    processJavacMessages(javacMessages,myMessageView,myProject);
    myIsEcho=false;
    if (IdeaAntLogger2.TARGET_END == tagName) {
      myMessageView.finishTarget();
    }
 else {
      myMessageView.finishTask();
    }
  }
}
