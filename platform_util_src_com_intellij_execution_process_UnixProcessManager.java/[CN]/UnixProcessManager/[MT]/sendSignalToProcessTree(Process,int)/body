{
  try {
    checkCLib();
    final int our_pid=C_LIB.getpid();
    final int process_pid=getProcessPid(process);
    final Ref<Integer> foundPid=new Ref<Integer>();
    final ProcessInfo processInfo=new ProcessInfo();
    final List<Integer> childrenPids=new ArrayList<Integer>();
    findChildProcesses(our_pid,process_pid,foundPid,processInfo,childrenPids);
    final boolean result;
    if (!foundPid.isNull()) {
      processInfo.killProcTree(foundPid.get(),signal,UNIX_KILLER);
      result=true;
    }
 else {
      for (      Integer pid : childrenPids) {
        processInfo.killProcTree(pid,signal,UNIX_KILLER);
      }
      result=!childrenPids.isEmpty();
    }
    return result;
  }
 catch (  Exception e) {
    LOG.warn("Error killing the process",e);
    return false;
  }
}
