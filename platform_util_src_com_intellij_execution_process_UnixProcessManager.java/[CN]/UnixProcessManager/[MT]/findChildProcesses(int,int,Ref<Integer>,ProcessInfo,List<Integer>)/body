{
  final Ref<Boolean> ourPidFound=Ref.create(false);
  processPSOutput(getPSCmd(false),new Processor<String>(){
    @Override public boolean process(    String s){
      StringTokenizer st=new StringTokenizer(s," ");
      int parent_pid=Integer.parseInt(st.nextToken());
      int pid=Integer.parseInt(st.nextToken());
      processInfo.register(pid,parent_pid);
      if (parent_pid == process_pid) {
        childrenPids.add(pid);
      }
      if (pid == our_pid) {
        ourPidFound.set(true);
      }
 else       if (pid == process_pid) {
        if (parent_pid == our_pid) {
          foundPid.set(pid);
        }
 else {
          throw new IllegalStateException("Process (pid=" + process_pid + ") is not our child(our pid = "+ our_pid+ ")");
        }
      }
      return false;
    }
  }
);
  if (!ourPidFound.get()) {
    throw new IllegalStateException("IDE pid is not found in ps list(" + our_pid + ")");
  }
}
