{
  @SuppressWarnings({"IOResourceOpenedButNotSafelyClosed"}) BufferedReader stdOutput=new BufferedReader(new InputStreamReader(psProcess.getInputStream()));
  BufferedReader stdError=new BufferedReader(new InputStreamReader(psProcess.getErrorStream()));
  try {
    String s;
    stdOutput.readLine();
    while ((s=stdOutput.readLine()) != null) {
      processor.process(s);
    }
    StringBuilder errorStr=new StringBuilder();
    while ((s=stdError.readLine()) != null) {
      errorStr.append(s).append("\n");
    }
    if (errorStr.length() > 0) {
      throw new IllegalStateException("error:" + errorStr.toString());
    }
  }
  finally {
    stdOutput.close();
    stdError.close();
  }
}
