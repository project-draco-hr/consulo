{
  PsiElement child=startElement.getFirstChild();
  while (child != null) {
    if (child instanceof GrTypeDefinition || child instanceof GrMethod || GroovyRefactoringUtil.isAppropriateContainerForIntroduceVariable(child) && child.getTextRange().getEndOffset() < startOffset) {
      child=child.getNextSibling();
      continue;
    }
    if (child instanceof GrVariable) {
      if (child instanceof GrField)       return;
      if (child instanceof GrParameter && varName.equals(((GrParameter)child).getName())) {
        conflicts.putValue(child,GroovyRefactoringBundle.message("introduced.variable.conflicts.with.parameter.0",CommonRefactoringUtil.htmlEmphasize(varName)));
        return;
      }
 else       if (varName.equals(((GrVariable)child).getName())) {
        conflicts.putValue(child,GroovyRefactoringBundle.message("introduced.variable.conflicts.with.variable.0",CommonRefactoringUtil.htmlEmphasize(varName)));
        return;
      }
 else {
        validateVariableOccurrencesDown(child,conflicts,varName,startOffset);
      }
    }
 else {
      validateVariableOccurrencesDown(child,conflicts,varName,startOffset);
    }
    child=child.getNextSibling();
  }
}
