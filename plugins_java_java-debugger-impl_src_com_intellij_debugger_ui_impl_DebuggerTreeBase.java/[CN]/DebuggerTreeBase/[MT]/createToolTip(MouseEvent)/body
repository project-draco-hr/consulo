{
  final DebuggerTreeNodeImpl node=getNodeToShowTip(e);
  if (node == null) {
    return null;
  }
  if (myCurrentTooltip != null && myCurrentTooltip.isShowing() && myCurrentTooltipNode == node) {
    return myCurrentTooltip;
  }
  myCurrentTooltipNode=node;
  final String toolTipText=getTipText(node);
  if (toolTipText == null) {
    return null;
  }
  final JComponent tipContent=createTipContent(toolTipText,node);
  final JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(tipContent);
  scrollPane.setBorder(null);
  scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
  final Point point=e.getPoint();
  SwingUtilities.convertPointToScreen(point,e.getComponent());
  Rectangle tipRectangle=new Rectangle(point,tipContent.getPreferredSize());
  final Rectangle screen=ScreenUtil.getScreenRectangle(point.x,point.y);
  final JToolTip toolTip=new JToolTip();
  tipContent.addMouseListener(new HideTooltip(toolTip));
  final Border tooltipBorder=toolTip.getBorder();
  if (tooltipBorder != null) {
    final Insets borderInsets=tooltipBorder.getBorderInsets(this);
    tipRectangle.setSize(tipRectangle.width + borderInsets.left + borderInsets.right,tipRectangle.height + borderInsets.top + borderInsets.bottom);
  }
  toolTip.setLayout(new BorderLayout());
  toolTip.add(scrollPane,BorderLayout.CENTER);
  tipRectangle.height+=scrollPane.getHorizontalScrollBar().getPreferredSize().height;
  tipRectangle.width+=scrollPane.getVerticalScrollBar().getPreferredSize().width;
  final int maxWidth=(int)(screen.width - screen.width * .25);
  if (tipRectangle.width > maxWidth) {
    tipRectangle.width=maxWidth;
  }
  final Dimension prefSize=tipRectangle.getSize();
  ScreenUtil.cropRectangleToFitTheScreen(tipRectangle);
  if (prefSize.width > tipRectangle.width) {
    final int delta=prefSize.width - tipRectangle.width;
    tipRectangle.x-=delta;
    if (tipRectangle.x < screen.x) {
      tipRectangle.x=screen.x + maxWidth / 2;
      tipRectangle.width=screen.width - maxWidth / 2;
    }
 else {
      tipRectangle.width+=delta;
    }
  }
  toolTip.setPreferredSize(tipRectangle.getSize());
  myCurrentTooltip=toolTip;
  return myCurrentTooltip;
}
