{
  int midX1=myCellRect.x + myCellRect.width / 3;
  int midX2=myCellRect.x + (myCellRect.width * 2) / 3;
  int midY1=myCellRect.y + myCellRect.height / 3;
  int midY2=myCellRect.y + (myCellRect.height * 2) / 3;
  Rectangle rc=new Rectangle();
  if (myXPart == 0) {
    rc.x=myCellRect.x;
    rc.width=initialWidth(dragObject,midX1 - myCellRect.x);
  }
 else   if (myXPart == 1) {
    if (!isInsertTwoSpacers(dragObject.getHSizePolicy())) {
      rc.x=myCellRect.x;
      rc.width=myCellRect.width;
    }
 else {
      rc.x=midX1;
      rc.width=midX2 - midX1;
    }
  }
 else {
    rc.width=initialWidth(dragObject,myCellRect.width - (midX2 - myCellRect.x));
    rc.x=myCellRect.width - rc.width;
  }
  if (myYPart == 0) {
    rc.y=myCellRect.y;
    rc.height=initialHeight(dragObject,midY1 - myCellRect.y);
  }
 else   if (myYPart == 1) {
    if (!isInsertTwoSpacers(dragObject.getVSizePolicy())) {
      rc.y=myCellRect.y;
      rc.height=myCellRect.height;
    }
 else {
      rc.y=midY1;
      rc.height=midY2 - midY1;
    }
  }
 else {
    rc.height=initialHeight(dragObject,myCellRect.height - (midY2 - myCellRect.y));
    rc.y=myCellRect.height - rc.height;
  }
  feedbackLayer.putFeedback(myContainer.getDelegee(),rc,myContainer.getDisplayName());
}
