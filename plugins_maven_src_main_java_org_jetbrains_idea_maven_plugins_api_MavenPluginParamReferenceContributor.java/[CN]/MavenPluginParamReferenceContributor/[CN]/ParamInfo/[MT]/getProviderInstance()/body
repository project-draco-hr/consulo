{
  if (myProviderClass == null) {
    return null;
  }
  MavenParamReferenceProvider res=myProviderInstance;
  if (res == null) {
    Object instance;
    try {
      instance=myClassLoader.loadClass(myProviderClass).newInstance();
    }
 catch (    Exception e) {
      throw new RuntimeException("Failed to create reference provider instance",e);
    }
    if (instance instanceof MavenParamReferenceProvider) {
      res=(MavenParamReferenceProvider)instance;
    }
 else {
      final PsiReferenceProvider psiReferenceProvider=(PsiReferenceProvider)instance;
      res=new MavenParamReferenceProvider(){
        @Override public PsiReference[] getReferencesByElement(        @NotNull PsiElement element,        @NotNull MavenDomConfiguration domCfg,        @NotNull ProcessingContext context){
          return psiReferenceProvider.getReferencesByElement(element,context);
        }
      }
;
    }
    myProviderInstance=res;
  }
  return res;
}
