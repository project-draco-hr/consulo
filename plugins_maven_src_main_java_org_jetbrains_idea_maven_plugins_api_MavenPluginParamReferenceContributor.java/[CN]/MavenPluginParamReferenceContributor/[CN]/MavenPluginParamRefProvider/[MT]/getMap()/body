{
  Map<String,Map> res=myMap;
  if (res == null) {
    res=new HashMap<String,Map>();
    for (    MavenPluginDescriptor pluginDescriptor : MavenPluginDescriptor.EP_NAME.getExtensions()) {
      if (pluginDescriptor.params == null)       continue;
      Pair<String,String> pluginId=MavenPluginDescriptor.parsePluginId(pluginDescriptor.mavenId);
      for (      MavenPluginDescriptor.Param param : pluginDescriptor.params) {
        String[] paramPath=param.name.split("/");
        Map pluginsMap=res;
        for (int i=paramPath.length - 1; i >= 0; i--) {
          pluginsMap=getOrCreate(pluginsMap,paramPath[i]);
        }
        ParamInfo paramInfo=new ParamInfo(pluginDescriptor.getPluginDescriptor().getPluginClassLoader(),param.refProvider);
        Map<String,ParamInfo> goalsMap=getOrCreate(pluginsMap,pluginId);
        ParamInfo oldValue=goalsMap.put(param.goal,paramInfo);
        if (oldValue != null) {
          LOG.error("Duplicated maven plugin parameter descriptor: " + pluginId.first + ':'+ pluginId.second+ " -> "+ (param.goal != null ? "[" + param.goal + ']' : "")+ param.name);
        }
      }
    }
    myMap=res;
  }
  return res;
}
