{
  checkDisposed();
  if (preserveTrivialLines) {
    for (int line=startLine; line <= oldEndLine; line++) {
      LineData data=myLines.get(line);
      if (data == null || data.columnCache != null) {
        preserveTrivialLines=false;
        break;
      }
    }
  }
  if (!preserveTrivialLines) {
    int endLine=Math.min(oldEndLine,newEndLine);
    for (int line=startLine; line <= endLine; line++) {
      myLines.set(line,null);
    }
  }
  if (oldEndLine < newEndLine) {
    myLines.addAll(oldEndLine + 1,Collections.nCopies(newEndLine - oldEndLine,preserveTrivialLines ? LineData.TRIVIAL : null));
  }
 else   if (oldEndLine > newEndLine) {
    myLines.subList(newEndLine + 1,oldEndLine + 1).clear();
  }
}
