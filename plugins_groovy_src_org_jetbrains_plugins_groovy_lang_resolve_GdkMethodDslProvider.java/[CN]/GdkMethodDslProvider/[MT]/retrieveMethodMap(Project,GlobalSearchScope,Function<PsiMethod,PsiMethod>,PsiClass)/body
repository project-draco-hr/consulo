{
  return CachedValuesManager.getManager(project).getCachedValue(categoryClass,METHOD_KEY,new CachedValueProvider<MultiMap<String,PsiMethod>>(){
    @Override public Result<MultiMap<String,PsiMethod>> compute(){
      MultiMap<String,PsiMethod> map=new MultiMap<String,PsiMethod>();
      PsiManager manager=PsiManager.getInstance(project);
      for (      PsiMethod m : categoryClass.getMethods()) {
        final PsiParameter[] params=m.getParameterList().getParameters();
        if (params.length == 0)         continue;
        final PsiType parameterType=params[0].getType();
        PsiType targetType=TypesUtil.boxPrimitiveType(TypeConversionUtil.erasure(parameterType),manager,scope);
        map.putValue(targetType.getCanonicalText(),converter.fun(m));
      }
      return Result.create(map,PsiModificationTracker.JAVA_STRUCTURE_MODIFICATION_COUNT,ProjectRootManager.getInstance(project));
    }
  }
,false);
}
