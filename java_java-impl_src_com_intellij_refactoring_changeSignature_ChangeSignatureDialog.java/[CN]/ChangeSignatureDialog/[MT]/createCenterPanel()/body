{
  JPanel panel=new JPanel(new BorderLayout());
  JPanel subPanel=new JPanel(new BorderLayout());
  subPanel.add(createParametersPanel(),BorderLayout.CENTER);
  if (myMethod.getContainingClass() != null && !myMethod.getContainingClass().isInterface()) {
    myVisibilityPanel=new VisibilityPanel(false,false);
    myVisibilityPanel.setVisibility(VisibilityUtil.getVisibilityModifier(myMethod.getModifierList()));
    myVisibilityPanel.addStateChangedListener(new VisibilityPanel.StateChanged(){
      public void visibilityChanged(){
        updateSignature();
      }
    }
);
    subPanel.add(myVisibilityPanel,BorderLayout.EAST);
  }
  panel.add(subPanel,BorderLayout.CENTER);
  JPanel subPanel1=new JPanel(new GridBagLayout());
  subPanel1.add(createExceptionsPanel(),new GridBagConstraints(0,0,1,1,0.5,0.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(4,4,4,0),0,0));
  subPanel1.add(createSignaturePanel(),new GridBagConstraints(1,0,1,1,0.5,0.0,GridBagConstraints.EAST,GridBagConstraints.BOTH,new Insets(4,0,4,4),0,0));
  panel.add(subPanel1,BorderLayout.SOUTH);
  return panel;
}
