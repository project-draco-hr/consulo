{
  myRepo.config("branch.master.remote","origin");
  myRepo.config("branch.master.merge","refs/heads/master");
  myRepo.rm(bfilePath.getPath());
  myRepo.commit();
  VirtualFile dir=myRepo.createVDir("dir");
  createFileInCommand(dir,"b.txt","content");
  String[] hashAndData=myRepo.log("--pretty=format:%H#%ct","-n1").split("#");
  final ItemLatestState state=GitHistoryUtils.getLastRevision(myProject,bfilePath);
  assertTrue(!state.isItemExists());
  final GitRevisionNumber revisionNumber=(GitRevisionNumber)state.getNumber();
  assertEquals(revisionNumber.getRev(),hashAndData[0]);
  assertEquals(revisionNumber.getTimestamp(),GitTestRevision.gitTimeStampToDate(hashAndData[1]));
}
