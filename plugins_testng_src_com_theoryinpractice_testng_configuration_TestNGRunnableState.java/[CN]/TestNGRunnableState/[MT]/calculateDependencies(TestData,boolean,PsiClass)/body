{
  Map<PsiClass,Collection<PsiMethod>> results=new HashMap<PsiClass,Collection<PsiMethod>>();
  if (classes != null && classes.length > 0) {
    if (includeClasses) {
      for (      PsiClass c : classes) {
        results.put(c,new HashSet<PsiMethod>());
      }
    }
    Set<String> dependencies=TestNGUtil.getAnnotationValues("dependsOnGroups",classes);
    if (!dependencies.isEmpty()) {
      final Project project=classes[0].getProject();
      PsiManager psiManager=PsiManager.getInstance(project);
      Collection<PsiClass> allClasses=AllClassesSearch.search(data.getScope().getSourceScope(config).getGlobalSearchScope(),project).findAll();
      Map<PsiClass,Collection<PsiMethod>> filteredClasses=TestNGUtil.filterAnnotations("groups",dependencies,allClasses);
      results.putAll(filteredClasses);
    }
  }
  return results;
}
