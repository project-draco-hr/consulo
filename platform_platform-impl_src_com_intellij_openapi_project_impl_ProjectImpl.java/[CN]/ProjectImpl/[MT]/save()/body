{
  if (ApplicationManagerEx.getApplicationEx().isDoNotSave()) {
    return;
  }
  if (!mySavingInProgress.compareAndSet(false,true)) {
    return;
  }
  try {
    if (isToSaveProjectName()) {
      VirtualFile baseDir=getStateStore().getProjectBaseDir();
      if (baseDir != null && baseDir.isValid()) {
        VirtualFile ideaDir=baseDir.findChild(DIRECTORY_STORE_FOLDER);
        if (ideaDir != null && ideaDir.isValid() && ideaDir.isDirectory()) {
          File nameFile=new File(ideaDir.getPath(),NAME_FILE);
          try {
            FileUtil.writeToFile(nameFile,getName().getBytes("UTF-8"),false);
            myOldName=null;
          }
 catch (          IOException e) {
            LOG.info("Unable to store project name to: " + nameFile.getPath());
          }
          RecentProjectsManagerBase.getInstance().clearNameCache();
        }
      }
    }
    StoreUtil.doSave(getStateStore());
  }
 catch (  IComponentStore.SaveCancelledException e) {
    LOG.info(e);
  }
catch (  PluginException e) {
    PluginManagerCore.disablePlugin(e.getPluginId().getIdString());
    Notification notification=new Notification(PLUGIN_SETTINGS_ERROR,"Unable to save plugin settings!","<p>The plugin <i>" + e.getPluginId() + "</i> failed to save settings and has been disabled. Please restart "+ ApplicationNamesInfo.getInstance().getFullProductName()+ "</p>"+ (ApplicationManagerEx.getApplicationEx().isInternal() ? "<p>" + StringUtil.getThrowableText(e) + "</p>" : ""),NotificationType.ERROR);
    Notifications.Bus.notify(notification,this);
    LOG.info("Unable to save plugin settings",e);
  }
catch (  Throwable e) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      LOG.error(e);
    }
 else {
      LOG.info("Error saving project",e);
      MessagesEx.error(this,ProjectBundle.message("project.save.error",e.getMessage())).showLater();
    }
  }
 finally {
    mySavingInProgress.set(false);
    ApplicationManager.getApplication().getMessageBus().syncPublisher(ProjectSaved.TOPIC).saved(this);
  }
}
