{
  super("Project Settings","Could not save project!",buildMessage(),NotificationType.ERROR,new NotificationListener(){
    @Override public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      final UnableToSaveProjectNotification unableToSaveProjectNotification=(UnableToSaveProjectNotification)notification;
      final Project _project=unableToSaveProjectNotification.getProject();
      notification.expire();
      if (_project != null && !_project.isDisposed()) {
        _project.save();
      }
    }
  }
);
  myProject=project;
  myFileNames=ContainerUtil.map(readOnlyFiles,new Function<VirtualFile,String>(){
    @Override public String fun(    VirtualFile file){
      return file.getPath();
    }
  }
,new String[readOnlyFiles.length]);
}
