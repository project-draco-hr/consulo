{
  if (!processMostProbableInheritors(parameters,expectedClassTypes,consumer))   return;
  final Condition<String> shortNameCondition=new Condition<String>(){
    public boolean value(    String s){
      return matcher.prefixMatches(s);
    }
  }
;
  for (  final PsiClassType type : expectedClassTypes) {
    final PsiClass psiClass=type.resolve();
    if (psiClass != null && !psiClass.hasModifierProperty(PsiModifier.FINAL)) {
      CodeInsightUtil.processSubTypes(type,parameters.getPosition(),false,shortNameCondition,consumer);
    }
  }
}
