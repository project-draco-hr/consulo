def _getfile(self, file, rev):
    if (file in self.removed):
        raise IOError()
    mode = ''
    try:
        (new_module, revnum) = self.revsplit(rev)[1:]
        if (self.module != new_module):
            self.module = new_module
            self.reparent(self.module)
        io = StringIO()
        info = svn.ra.get_file(self.ra, file, revnum, io)
        data = io.getvalue()
        io.close()
        if isinstance(info, list):
            info = info[(-1)]
        mode = ((('svn:executable' in info) and 'x') or '')
        mode = ((('svn:special' in info) and 'l') or mode)
    except SubversionException as e:
        notfound = (svn.core.SVN_ERR_FS_NOT_FOUND, svn.core.SVN_ERR_RA_DAV_PATH_NOT_FOUND)
        if (e.apr_err in notfound):
            raise IOError()
        raise
    if (mode == 'l'):
        link_prefix = 'link '
        if data.startswith(link_prefix):
            data = data[len(link_prefix):]
    return (data, mode)
