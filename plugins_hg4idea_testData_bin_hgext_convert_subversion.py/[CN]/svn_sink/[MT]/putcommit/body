def putcommit(self, files, copies, parents, commit, source, revmap):
    for (f, v) in files:
        try:
            data = source.getfile(f, v)
        except IOError:
            self.delete.append(f)
        else:
            e = source.getmode(f, v)
            self.putfile(f, e, data)
            if (f in copies):
                self.copies.append([copies[f], f])
    files = [f[0] for f in files]
    for parent in parents:
        try:
            return self.revid(self.childmap[parent])
        except KeyError:
            pass
    entries = set(self.delete)
    files = frozenset(files)
    entries.update(self.add_dirs(files.difference(entries)))
    if self.copies:
        for (s, d) in self.copies:
            self._copyfile(s, d)
        self.copies = []
    if self.delete:
        self.xargs(self.delete, 'delete')
        self.delete = []
    entries.update(self.add_files(files.difference(entries)))
    entries.update(self.tidy_dirs(entries))
    if self.delexec:
        self.xargs(self.delexec, 'propdel', 'svn:executable')
        self.delexec = []
    if self.setexec:
        self.xargs(self.setexec, 'propset', 'svn:executable', '*')
        self.setexec = []
    (fd, messagefile) = tempfile.mkstemp(prefix='hg-convert-')
    fp = os.fdopen(fd, 'w')
    fp.write(commit.desc)
    fp.close()
    try:
        output = self.run0('commit', username=util.shortuser(commit.author), file=messagefile, encoding='utf-8')
        try:
            rev = self.commit_re.search(output).group(1)
        except AttributeError:
            if (not files):
                return parents[0]
            self.ui.warn(_('unexpected svn output:\n'))
            self.ui.warn(output)
            raise util.Abort(_('unable to cope with svn output'))
        if commit.rev:
            self.run('propset', 'hg:convert-rev', commit.rev, revprop=True, revision=rev)
        if (commit.branch and (commit.branch != 'default')):
            self.run('propset', 'hg:convert-branch', commit.branch, revprop=True, revision=rev)
        for parent in parents:
            self.addchild(parent, rev)
        return self.revid(rev)
    finally:
        os.unlink(messagefile)
