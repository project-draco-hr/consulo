{
  if (SystemInfo.isMac) {
    UIUtil.applyStyle(UIUtil.ComponentStyle.SMALL,myText2Label);
  }
  myInnerPanel.setPreferredSize(new Dimension(SystemInfo.isMac ? 350 : 450,-1));
  myCancelButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      doCancelAction();
    }
  }
);
  myCancelButton.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (myCancelButton.isEnabled()) {
        doCancelAction();
      }
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myShouldShowBackground=shouldShowBackground;
  if (cancelText != null) {
    setCancelButtonText(cancelText);
  }
  myProgressBar.setMaximum(100);
  createCenterPanel();
  myTitlePanel.setActive(true);
  myTitlePanel.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      final Point titleOffset=RelativePoint.getNorthWestOf(myTitlePanel).getScreenPoint();
      myLastClicked=new RelativePoint(e).getScreenPoint();
      myLastClicked.x-=titleOffset.x;
      myLastClicked.y-=titleOffset.y;
    }
  }
);
  myTitlePanel.addMouseMotionListener(new MouseMotionAdapter(){
    public void mouseDragged(    MouseEvent e){
      if (myLastClicked == null) {
        return;
      }
      final Point draggedTo=new RelativePoint(e).getScreenPoint();
      draggedTo.x-=myLastClicked.x;
      draggedTo.y-=myLastClicked.y;
      if (myPopup != null) {
        myPopup.setLocation(draggedTo);
      }
    }
  }
);
}
