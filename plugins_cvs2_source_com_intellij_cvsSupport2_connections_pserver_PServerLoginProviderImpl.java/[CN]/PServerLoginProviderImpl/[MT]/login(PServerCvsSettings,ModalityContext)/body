{
  String cvsRoot=settings.getCvsRootAsString();
  String stored=getPassword(cvsRoot);
  if (stored != null) {
    IConnection connection=settings.createConnection(new ReadWriteStatistics());
    try {
      connection.open(new StreamLogger());
      return true;
    }
 catch (    AuthenticationException e) {
      Throwable cause=e.getCause();
      if (cause instanceof SocketTimeoutException) {
        showErrorMessage(com.intellij.CvsBundle.message("error.message.timeout.error"),com.intellij.CvsBundle.message("error.dialog.title.timeout.error"));
        return false;
      }
 else       if (cause instanceof UnknownHostException) {
        showErrorMessage(com.intellij.CvsBundle.message("error.message.unknown.host",settings.HOST),com.intellij.CvsBundle.message("error.title.inknown.host"));
        return false;
      }
 else {
        showErrorMessage(getMessageFrom(e),com.intellij.CvsBundle.message("error.title.authorization.error"));
        settings.releasePassword();
        return relogin(settings,executor);
      }
    }
 finally {
      try {
        connection.close();
      }
 catch (      IOException e) {
      }
    }
  }
  String password=requestForPassword(cvsRoot);
  if (password == null)   return false;
  try {
    storePassword(cvsRoot,password);
  }
 catch (  IOException e) {
    Messages.showMessageDialog(com.intellij.CvsBundle.message("error.message.cannot.store.password",e.getLocalizedMessage()),com.intellij.CvsBundle.message("error.title.storing.cvs.password"),Messages.getErrorIcon());
    return false;
  }
  settings.storePassword(password);
  return login(settings,executor);
}
