{
  Map<String,Object> style=state.getStyle();
  if (mxUtils.isTrue(style,mxConstants.STYLE_ROUNDED,false)) {
    Rectangle tmp=state.getRectangle();
    int x=tmp.x;
    int y=tmp.y;
    int w=tmp.width;
    int h=tmp.height;
    int radius=getArcSize(w,h);
    boolean shadow=hasShadow(canvas,state);
    int shadowOffsetX=(shadow) ? mxConstants.SHADOW_OFFSETX : 0;
    int shadowOffsetY=(shadow) ? mxConstants.SHADOW_OFFSETY : 0;
    if (canvas.getGraphics().hitClip(x,y,w + shadowOffsetX,h + shadowOffsetY)) {
      if (shadow) {
        canvas.getGraphics().setColor(mxSwingConstants.SHADOW_COLOR);
        canvas.getGraphics().fillRoundRect(x + mxConstants.SHADOW_OFFSETX,y + mxConstants.SHADOW_OFFSETY,w,h,radius,radius);
      }
      if (configureGraphics(canvas,state,true)) {
        canvas.getGraphics().fillRoundRect(x,y,w,h,radius,radius);
      }
      if (configureGraphics(canvas,state,false)) {
        canvas.getGraphics().drawRoundRect(x,y,w,h,radius,radius);
      }
    }
  }
 else {
    Rectangle rect=state.getRectangle();
    if (configureGraphics(canvas,state,true)) {
      canvas.fillShape(rect,hasShadow(canvas,state));
    }
    if (configureGraphics(canvas,state,false)) {
      canvas.getGraphics().drawRect(rect.x,rect.y,rect.width,rect.height);
    }
  }
}
