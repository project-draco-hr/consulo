{
  final PsiClass targetClass=settings.getTargetClass();
  if (targetClass == null)   return;
  final GrVariableDeclaration declaration=createField(context,settings);
  final GrVariableDeclaration added=((GrVariableDeclaration)targetClass.add(declaration));
  PsiUtil.shortenReferences(added);
  final GrField field=(GrField)added.getVariables()[0];
  if (settings.replaceAllOccurrences()) {
    GroovyRefactoringUtil.sortOccurrences(context.occurrences);
    for (    PsiElement occurrence : context.occurrences) {
      replaceOccurence(field,occurrence,isEscalateVisibility(settings.getVisibilityModifier()));
    }
  }
 else {
    replaceOccurence(field,context.expression,isEscalateVisibility(settings.getVisibilityModifier()));
  }
}
