{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  MarkupModelEx model=(MarkupModelEx)DocumentMarkupModel.forDocument(document,project,false);
  if (model == null)   return;
  model.processRangeHighlightersOverlappingWith(0,document.getTextLength(),new Processor<RangeHighlighterEx>(){
    @Override public boolean process(    RangeHighlighterEx marker){
      int newStart=marker.getStartOffset();
      int newEnd=marker.getEndOffset();
      myPieces.add(new Element(marker,newStart,newEnd));
      return true;
    }
  }
);
}
