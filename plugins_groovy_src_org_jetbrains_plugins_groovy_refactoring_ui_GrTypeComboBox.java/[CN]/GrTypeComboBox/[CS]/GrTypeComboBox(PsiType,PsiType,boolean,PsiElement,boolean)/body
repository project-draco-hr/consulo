{
  LOG.assertTrue(min == null || context != null);
  LOG.assertTrue(type == null || context != null);
  if (type instanceof PsiDisjunctionType)   type=((PsiDisjunctionType)type).getLeastUpperBound();
  Map<String,PsiType> types=Collections.emptyMap();
  if (type != null) {
    types=getCompatibleTypeNames(type,min,context);
  }
  if (createDef || types.isEmpty()) {
    addItem(new PsiTypeItem(null));
  }
  if (type != null && type.equalsToText(GroovyCommonClassNames.JAVA_MATH_BIG_DECIMAL)) {
    addItem(new PsiTypeItem(PsiType.DOUBLE));
  }
  for (  String typeName : types.keySet()) {
    addItem(new PsiTypeItem(types.get(typeName)));
  }
  if (!selectDef && createDef && getItemCount() > 1) {
    setSelectedIndex(1);
  }
}
