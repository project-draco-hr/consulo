{
  StringBuilder buffer=new StringBuilder();
  PsiType type=helper.getOutputType();
  final PsiPrimitiveType outUnboxed=PsiPrimitiveType.getUnboxedType(type);
  if (outUnboxed != null)   type=outUnboxed;
  String modifier=getModifierString(helper);
  String typeText=getTypeString(helper,false,modifier);
  buffer.append(modifier);
  buffer.append(typeText);
  appendName(buffer,helper.getName());
  buffer.append("(");
  for (  String param : getParameterString(helper,true)) {
    buffer.append(param);
  }
  buffer.append(") { \n");
  GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(helper.getProject());
  generateBody(helper,type == PsiType.VOID,buffer,helper.isForceReturn());
  buffer.append("\n}");
  String methodText=buffer.toString();
  GrMethod method=factory.createMethodFromText(methodText);
  LOG.assertTrue(method != null);
  return method;
}
