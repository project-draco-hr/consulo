{
  final FileBasedIndexImpl fileBasedIndex=(FileBasedIndexImpl)FileBasedIndex.getInstance();
  fileBasedIndex.ensureUpToDate(StubUpdatingIndex.INDEX_ID,project,scope);
  final MyIndex<Key> index=(MyIndex<Key>)myIndices.get(indexKey);
  try {
    try {
      FileBasedIndexImpl.disableUpToDateCheckForCurrentThread();
      index.getReadLock().lock();
      return index.getData(key).forEach(action);
    }
  finally {
      index.getReadLock().unlock();
      FileBasedIndexImpl.enableUpToDateCheckForCurrentThread();
    }
  }
 catch (  StorageException e) {
    forceRebuild(e);
  }
catch (  RuntimeException e) {
    final Throwable cause=FileBasedIndexImpl.getCauseToRebuildIndex(e);
    if (cause != null) {
      forceRebuild(cause);
    }
 else {
      throw e;
    }
  }
catch (  AssertionError ae) {
    forceRebuild(ae);
  }
  return true;
}
