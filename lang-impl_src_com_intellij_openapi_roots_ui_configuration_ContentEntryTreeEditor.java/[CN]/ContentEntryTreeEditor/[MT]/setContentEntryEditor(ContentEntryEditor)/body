{
  if (myContentEntryEditor != null && myContentEntryEditor.equals(contentEntryEditor)) {
    return;
  }
  if (myFileSystemTree != null) {
    Disposer.dispose(myFileSystemTree);
    myFileSystemTree=null;
  }
  if (myContentEntryEditor != null) {
    myContentEntryEditor.removeContentEntryEditorListener(myContentEntryEditorListener);
    myContentEntryEditor=null;
  }
  if (contentEntryEditor == null) {
    ((DefaultTreeModel)myTree.getModel()).setRoot(EMPTY_TREE_ROOT);
    myTreePanel.setVisible(false);
    if (myFileSystemTree != null) {
      Disposer.dispose(myFileSystemTree);
    }
    return;
  }
  myTreePanel.setVisible(true);
  myContentEntryEditor=contentEntryEditor;
  myContentEntryEditor.addContentEntryEditorListener(myContentEntryEditorListener);
  final VirtualFile file=contentEntryEditor.getContentEntry().getFile();
  myDescriptor.setRoot(file);
  if (file != null) {
    myDescriptor.setTitle(file.getPresentableUrl());
  }
 else {
    final String url=contentEntryEditor.getContentEntry().getUrl();
    myDescriptor.setTitle(VirtualFileManager.extractPath(url).replace('/',File.separatorChar));
  }
  final Runnable init=new Runnable(){
    public void run(){
      myFileSystemTree.updateTree();
      if (file != null) {
        select(file);
      }
    }
  }
;
  myFileSystemTree=new FileSystemTreeImpl(myProject,myDescriptor,myTree,getContentEntryCellRenderer(),init){
    protected AbstractTreeBuilder createTreeBuilder(    JTree tree,    DefaultTreeModel treeModel,    AbstractTreeStructure treeStructure,    Comparator<NodeDescriptor> comparator,    FileChooserDescriptor descriptor,    final Runnable onInitialized){
      return new MyFileTreeBuilder(tree,treeModel,treeStructure,comparator,descriptor,onInitialized);
    }
  }
;
  myFileSystemTree.showHiddens(true);
  Disposer.register(myProject,myFileSystemTree);
  final NewFolderAction newFolderAction=new MyNewFolderAction();
  DefaultActionGroup mousePopupGroup=new DefaultActionGroup();
  mousePopupGroup.add(myEditingActionsGroup);
  mousePopupGroup.addSeparator();
  mousePopupGroup.add(newFolderAction);
  myFileSystemTree.registerMouseListener(mousePopupGroup);
}
