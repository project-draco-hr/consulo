{
  PsiExpression[] operands=expression.getOperands();
  PsiExpression lExpr=operands[0];
  IElementType tokenType=expression.getOperationTokenType();
  for (int i=1; i < operands.length; i++) {
    Boolean l=getConstBoolean(lExpr);
    PsiExpression operand=operands[i];
    Boolean r=getConstBoolean(operand);
    if (l != null) {
      simplifyBinary(tokenType,l,operand);
    }
 else     if (r != null) {
      simplifyBinary(tokenType,r,lExpr);
    }
 else {
      final PsiJavaToken javaToken=expression.getTokenBeforeOperand(operand);
      if (javaToken != null && !PsiTreeUtil.hasErrorElements(operand)) {
        resultExpression=JavaPsiFacade.getElementFactory(expression.getProject()).createExpressionFromText(lExpr.getText() + javaToken.getText() + operand.getText(),expression);
      }
 else {
        resultExpression=null;
      }
    }
    if (resultExpression != null) {
      lExpr=resultExpression;
    }
  }
}
