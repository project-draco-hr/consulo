def _read(self):
    if (not self.path):
        return
    try:
        fp = open(self.path, 'r')
    except IOError as err:
        if (err.errno != errno.ENOENT):
            raise
        return
    for (i, line) in enumerate(fp):
        try:
            (key, value) = line.splitlines()[0].rsplit(' ', 1)
        except ValueError:
            raise util.Abort((_('syntax error in %s(%d): key/value pair expected') % (self.path, (i + 1))))
        if (key not in self):
            self.order.append(key)
        super(mapfile, self).__setitem__(key, value)
    fp.close()
