{
  final int offset=editor.getCaretModel().getOffset();
  final PsiLanguageInjectionHost host=PsiTreeUtil.getParentOfType(file.findElementAt(offset),PsiLanguageInjectionHost.class,false);
  if (host == null)   return null;
  final List<Pair<PsiElement,TextRange>> injections=InjectedLanguageManager.getInstance(host.getProject()).getInjectedPsiFiles(host);
  if (injections == null || injections.isEmpty())   return null;
  final int offsetInElement=offset - host.getTextRange().getStartOffset();
  final Pair<PsiElement,TextRange> rangePair=ContainerUtil.find(injections,new Condition<Pair<PsiElement,TextRange>>(){
    @Override public boolean value(    final Pair<PsiElement,TextRange> pair){
      return pair.second.containsRange(offsetInElement,offsetInElement);
    }
  }
);
  if (rangePair != null) {
    myLastLanguageName=rangePair.first.getContainingFile().getLanguage().getDisplayName();
  }
  return rangePair;
}
