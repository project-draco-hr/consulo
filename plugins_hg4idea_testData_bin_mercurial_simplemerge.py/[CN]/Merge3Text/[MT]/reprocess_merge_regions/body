def reprocess_merge_regions(self, merge_regions):
    'Where there are conflict regions, remove the agreed lines.\n\n        Lines where both A and B have made the same changes are\n        eliminated.\n        '
    for region in merge_regions:
        if (region[0] != 'conflict'):
            yield region
            continue
        (type, iz, zmatch, ia, amatch, ib, bmatch) = region
        a_region = self.a[ia:amatch]
        b_region = self.b[ib:bmatch]
        matches = mdiff.get_matching_blocks(''.join(a_region), ''.join(b_region))
        next_a = ia
        next_b = ib
        for (region_ia, region_ib, region_len) in matches[:(-1)]:
            region_ia += ia
            region_ib += ib
            reg = self.mismatch_region(next_a, region_ia, next_b, region_ib)
            if (reg is not None):
                yield reg
            yield ('same', region_ia, (region_len + region_ia))
            next_a = (region_ia + region_len)
            next_b = (region_ib + region_len)
        reg = self.mismatch_region(next_a, amatch, next_b, bmatch)
        if (reg is not None):
            yield reg
