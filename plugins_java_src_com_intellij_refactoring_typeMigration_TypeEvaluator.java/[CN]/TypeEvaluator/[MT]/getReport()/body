{
  final StringBuffer buffer=new StringBuffer();
  final String[] t=new String[myTypeMap.size()];
  int k=0;
  for (  final TypeMigrationUsageInfo info : myTypeMap.keySet()) {
    final LinkedList<PsiType> types=myTypeMap.get(info);
    final StringBuffer b=new StringBuffer();
    if (types != null) {
      b.append(info.getElement()).append(" : ");
      b.append(StringUtil.join(types,new Function<PsiType,String>(){
        public String fun(        final PsiType psiType){
          return psiType.getCanonicalText();
        }
      }
," "));
      b.append("\n");
    }
    t[k++]=b.toString();
  }
  Arrays.sort(t);
  for (  String aT : t) {
    buffer.append(aT);
  }
  return buffer.toString();
}
