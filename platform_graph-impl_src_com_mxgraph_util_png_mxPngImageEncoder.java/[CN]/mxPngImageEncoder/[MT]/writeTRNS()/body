{
  if (param.isTransparencySet() && (colorType != PNG_COLOR_GRAY_ALPHA) && (colorType != PNG_COLOR_RGB_ALPHA)) {
    ChunkStream cs=new ChunkStream("tRNS");
    if (param instanceof mxPngEncodeParam.Palette) {
      byte[] t=((mxPngEncodeParam.Palette)param).getPaletteTransparency();
      for (int i=0; i < t.length; i++) {
        cs.writeByte(t[i]);
      }
    }
 else     if (param instanceof mxPngEncodeParam.Gray) {
      int t=((mxPngEncodeParam.Gray)param).getTransparentGray();
      cs.writeShort(t);
    }
 else     if (param instanceof mxPngEncodeParam.RGB) {
      int[] t=((mxPngEncodeParam.RGB)param).getTransparentRGB();
      cs.writeShort(t[0]);
      cs.writeShort(t[1]);
      cs.writeShort(t[2]);
    }
    cs.writeToStream(dataOutput);
    cs.close();
  }
 else   if (colorType == PNG_COLOR_PALETTE) {
    int lastEntry=Math.min(255,alphaPalette.length - 1);
    int nonOpaque;
    for (nonOpaque=lastEntry; nonOpaque >= 0; nonOpaque--) {
      if (alphaPalette[nonOpaque] != (byte)255) {
        break;
      }
    }
    if (nonOpaque >= 0) {
      ChunkStream cs=new ChunkStream("tRNS");
      for (int i=0; i <= nonOpaque; i++) {
        cs.writeByte(alphaPalette[i]);
      }
      cs.writeToStream(dataOutput);
      cs.close();
    }
  }
}
