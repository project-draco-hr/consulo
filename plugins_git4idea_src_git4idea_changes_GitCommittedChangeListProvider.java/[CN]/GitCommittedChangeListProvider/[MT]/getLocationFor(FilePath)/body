{
  VirtualFile gitRoot=GitUtil.getGitRootOrNull(root);
  if (gitRoot == null) {
    return null;
  }
  try {
    GitBranch c=GitBranch.current(myProject,gitRoot);
    if (c == null) {
      return null;
    }
    String remote=c.getTrackedRemoteName(myProject,gitRoot);
    if (StringUtil.isEmpty(remote)) {
      return null;
    }
    File rootFile=new File(gitRoot.getPath());
    if (".".equals(remote)) {
      return new GitRepositoryLocation(gitRoot.getUrl(),rootFile);
    }
 else {
      GitRemote r=GitRemote.find(myProject,gitRoot,remote);
      return r == null ? null : new GitRepositoryLocation(r.fetchUrl(),rootFile);
    }
  }
 catch (  VcsException e) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Exception for determining repository location",e);
    }
    return null;
  }
}
