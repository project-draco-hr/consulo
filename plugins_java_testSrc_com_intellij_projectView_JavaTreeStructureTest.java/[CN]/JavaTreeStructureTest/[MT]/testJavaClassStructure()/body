{
  dotest(new CheckAction(){
    @Override public void testClassStructure(    StructureViewComponent structureViewComponent){
      structureViewComponent.setActionActive(JavaInheritedMembersNodeProvider.ID,true);
      IdeaTestUtil.assertTreeEqual(structureViewComponent.getTree(),"-Class1.java\n" + " -Class1\n" + "  getValue(): int\n"+ "  getClass(): Class<? extends Object>\n"+ "  hashCode(): int\n"+ "  equals(Object): boolean\n"+ "  clone(): Object\n"+ "  toString(): String\n"+ "  notify(): void\n"+ "  notifyAll(): void\n"+ "  wait(long): void\n"+ "  wait(long, int): void\n"+ "  wait(): void\n"+ "  finalize(): void\n"+ "  myField1: boolean\n"+ "  myField2: boolean\n");
      structureViewComponent.setActionActive(JavaInheritedMembersNodeProvider.ID,false);
      structureViewComponent.setActionActive(JavaInheritedMembersNodeProvider.ID,true);
      structureViewComponent.setActionActive(JavaInheritedMembersNodeProvider.ID,false);
      IdeaTestUtil.assertTreeEqual(structureViewComponent.getTree(),"-Class1.java\n" + " -Class1\n" + "  getValue(): int\n"+ "  myField1: boolean\n"+ "  myField2: boolean\n");
      structureViewComponent.setActionActive(PublicElementsFilter.ID,true);
      IdeaTestUtil.assertTreeEqual(structureViewComponent.getTree(),"-Class1.java\n" + " -Class1\n" + "  getValue(): int\n"+ "  myField1: boolean\n"+ "  myField2: boolean\n");
      structureViewComponent.setActionActive(PublicElementsFilter.ID,false);
      IdeaTestUtil.assertTreeEqual(structureViewComponent.getTree(),"-Class1.java\n" + " -Class1\n" + "  getValue(): int\n"+ "  myField1: boolean\n"+ "  myField2: boolean\n");
    }
  }
);
}
