{
  if (psiElement instanceof XmlToken) {
    final PsiElement parent=psiElement.getParent();
    if (parent instanceof XmlTag) {
      final XmlTag tag=(XmlTag)parent;
      final XmlToken start=XmlTagUtil.getStartTagNameElement(tag);
      XmlToken endTagName=XmlTagUtil.getEndTagNameElement(tag);
      if (endTagName != null && !(tag instanceof HtmlTag) && !tag.getName().equals(endTagName.getText())) {
        registerProblem(holder,tag,start,endTagName);
      }
 else       if (endTagName == null && !(tag instanceof HtmlTag && HtmlUtil.isSingleHtmlTag(tag.getName()))) {
        final PsiErrorElement errorElement=PsiTreeUtil.getChildOfType(tag,PsiErrorElement.class);
        endTagName=findEndTagName(errorElement);
        if (endTagName != null) {
          registerProblem(holder,tag,start,endTagName);
        }
      }
    }
 else     if (parent instanceof PsiErrorElement) {
      if (XmlTokenType.XML_NAME == ((XmlToken)psiElement).getTokenType()) {
        final PsiFile psiFile=psiElement.getContainingFile();
        if (psiFile != null && (HTMLLanguage.INSTANCE == psiFile.getViewProvider().getBaseLanguage() || HTMLLanguage.INSTANCE == parent.getLanguage())) {
          final String message=XmlErrorMessages.message("xml.parsing.closing.tag.matches.nothing");
          if (message.equals(((PsiErrorElement)parent).getErrorDescription()) && psiFile.getContext() == null) {
            final Annotation annotation=holder.createWarningAnnotation(parent,message);
            annotation.registerFix(new RemoveExtraClosingTagIntentionAction());
          }
        }
      }
    }
  }
}
