{
  CompilerPathsManager compilerPathsManager=CompilerPathsManager.getInstance(myProject);
  if (compilerPathsManager.isInheritedCompilerOutput(getModule())) {
    final String baseUrl=ProjectStructureConfigurable.getInstance(myProject).getProjectConfig().getCompilerOutputUrl();
    moduleCompileOutputChanged(baseUrl,getModule().getName());
  }
 else {
    final VirtualFile compilerOutputPath=compilerPathsManager.getCompilerOutput(getModule(),ContentFolderType.PRODUCTION);
    if (compilerOutputPath != null) {
      myOutputPathPanel.setText(FileUtil.toSystemDependentName(compilerOutputPath.getPath()));
    }
 else {
      final String compilerOutputUrl=compilerPathsManager.getCompilerOutputUrl(getModule(),ContentFolderType.PRODUCTION);
      if (compilerOutputUrl != null) {
        myOutputPathPanel.setText(FileUtil.toSystemDependentName(VfsUtilCore.urlToPath(compilerOutputUrl)));
      }
    }
    final VirtualFile testsOutputPath=compilerPathsManager.getCompilerOutput(getModule(),ContentFolderType.TEST);
    if (testsOutputPath != null) {
      myTestsOutputPathPanel.setText(FileUtil.toSystemDependentName(testsOutputPath.getPath()));
    }
 else {
      final String testsOutputUrl=compilerPathsManager.getCompilerOutputUrl(getModule(),ContentFolderType.TEST);
      if (testsOutputUrl != null) {
        myTestsOutputPathPanel.setText(FileUtil.toSystemDependentName(VfsUtilCore.urlToPath(testsOutputUrl)));
      }
    }
    final VirtualFile resourcesOutputPath=compilerPathsManager.getCompilerOutput(getModule(),ContentFolderType.PRODUCTION_RESOURCE);
    if (resourcesOutputPath != null) {
      myResourcesOutputPathPanel.setText(FileUtil.toSystemDependentName(resourcesOutputPath.getPath()));
    }
 else {
      final String resourcesOutputUrl=compilerPathsManager.getCompilerOutputUrl(getModule(),ContentFolderType.PRODUCTION_RESOURCE);
      if (resourcesOutputUrl != null) {
        myResourcesOutputPathPanel.setText(FileUtil.toSystemDependentName(VfsUtilCore.urlToPath(resourcesOutputUrl)));
      }
    }
  }
}
