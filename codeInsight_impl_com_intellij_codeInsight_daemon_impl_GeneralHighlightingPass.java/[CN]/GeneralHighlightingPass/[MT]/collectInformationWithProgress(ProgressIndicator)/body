{
  RefCountHolder refCountHolder=null;
  if (myUpdateAll) {
    DaemonCodeAnalyzer daemonCodeAnalyzer=DaemonCodeAnalyzer.getInstance(myProject);
    refCountHolder=daemonCodeAnalyzer.getFileStatusMap().getRefCountHolder(myDocument,myFile);
    setRefCountHolders(refCountHolder);
    PsiElement dirtyScope=daemonCodeAnalyzer.getFileStatusMap().getFileDirtyScope(myDocument,Pass.UPDATE_ALL);
    if (dirtyScope != null) {
      if (dirtyScope instanceof PsiFile) {
        refCountHolder.clear();
      }
 else {
        refCountHolder.removeInvalidRefs();
      }
    }
  }
 else {
    setRefCountHolders(null);
  }
  Collection<HighlightInfo> result=new THashSet<HighlightInfo>(100);
  try {
    final FileViewProvider viewProvider=myFile.getViewProvider();
    final Set<Language> relevantLanguages=viewProvider.getPrimaryLanguages();
    for (    Language language : relevantLanguages) {
      PsiElement psiRoot=viewProvider.getPsi(language);
      if (!HighlightUtil.shouldHighlight(psiRoot))       continue;
      List<PsiElement> elements=CodeInsightUtil.getElementsInRange(psiRoot,myStartOffset,myEndOffset);
      if (elements.isEmpty()) {
        elements=Collections.singletonList(psiRoot);
      }
      myMarkers=collectLineMarkers(elements);
      result.addAll(collectHighlights(elements));
      result.addAll(collectTextHighlights());
    }
  }
  finally {
    setRefCountHolders(null);
    releaseHighlightVisitors();
    if (refCountHolder != null) {
      refCountHolder.touch();
    }
  }
  myHighlights=result;
  reportErrorsToWolf(result,myFile,myHasErrorElement);
}
