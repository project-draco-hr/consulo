{
  Collection<PsiLanguageInjectionHost> hosts=new THashSet<PsiLanguageInjectionHost>();
  List<DocumentRange> injected=InjectedLanguageUtil.getCachedInjectedDocuments(getDocument());
  for (  DocumentRange documentRange : injected) {
    PsiFile file=PsiDocumentManager.getInstance(myProject).getPsiFile(documentRange);
    if (file == null)     continue;
    PsiElement context=file.getContext();
    if (context instanceof PsiLanguageInjectionHost && context.isValid() && (myUpdateAll || new TextRange(myStartOffset,myEndOffset).contains(context.getTextRange())))     hosts.add((PsiLanguageInjectionHost)context);
  }
  for (  PsiElement element : elements) {
    if (element instanceof PsiLanguageInjectionHost)     hosts.add((PsiLanguageInjectionHost)element);
  }
  AnnotationHolderImpl annotationHolder=new AnnotationHolderImpl();
  Map<TextRange,Collection<HighlightInfo>> result=new THashMap<TextRange,Collection<HighlightInfo>>(hosts.size());
  for (  PsiLanguageInjectionHost host : hosts) {
    highlightInjectedIn(host,annotationHolder);
    TextRange textRange=host.getTextRange();
    for (    Annotation annotation : annotationHolder) {
      HighlightInfo highlightInfo=HighlightUtil.convertToHighlightInfo(annotation);
      Collection<HighlightInfo> infos=result.get(textRange);
      if (infos == null) {
        infos=new ArrayList<HighlightInfo>();
        result.put(textRange,infos);
      }
      infos.add(highlightInfo);
    }
    annotationHolder.clear();
  }
  return result;
}
