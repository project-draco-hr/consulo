{
  final PsiElement namedElem=getReferencedElement(owner);
  if (namedElem == null)   return true;
  final Ref<Boolean> result=new Ref<Boolean>(true);
  final Task task=new Task.Modal(project,GroovyIntentionsBundle.message("find.method.ro.closure.usages.0",owner instanceof GrClosableBlock ? CLOSURE_CAPTION : METHOD_CAPTION),true){
    public void run(    @NotNull final ProgressIndicator indicator){
      final GlobalSearchScope projectScope=GlobalSearchScope.projectScope(getProject());
      final Query<PsiReference> query=ReferencesSearch.search(namedElem,projectScope);
      final Collection<PsiReference> references=query.findAll();
      for (      PsiReference reference : references) {
        final PsiElement element=reference.getElement();
        if (element != null) {
          occurrences.add(element);
        }
      }
    }
    @Override public void onCancel(){
      result.set(false);
    }
    @Override public void onSuccess(){
      result.set(true);
    }
  }
;
  ProgressManager.getInstance().run(task);
  return result.get().booleanValue();
}
