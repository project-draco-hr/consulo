{
  final FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
  descriptor.setTitle(ProjectBundle.message("external.annotations.root.chooser.title",entry.getPresentableName()));
  descriptor.setDescription(ProjectBundle.message("external.annotations.root.chooser.description"));
  final VirtualFile newRoot=FileChooser.chooseFile(descriptor,project,null);
  if (newRoot == null) {
    notifyAfterAnnotationChanging(listOwner,annotationFQName,false);
    return;
  }
  new WriteCommandAction(project){
    @Override protected void run(    final Result result) throws Throwable {
      appendChosenAnnotationsRoot(entry,newRoot);
      XmlFile xmlFileInRoot=findXmlFileInRoot(findExternalAnnotationsXmlFiles(listOwner),newRoot);
      if (xmlFileInRoot != null) {
        if (!FileModificationService.getInstance().preparePsiElementForWrite(xmlFileInRoot)) {
          notifyAfterAnnotationChanging(listOwner,annotationFQName,false);
          return;
        }
        annotateExternally(listOwner,annotationFQName,xmlFileInRoot,fromFile,value);
      }
 else {
        final XmlFile annotationsXml=createAnnotationsXml(newRoot,packageName);
        if (annotationsXml != null) {
          List<PsiFile> createdFiles=new SmartList<PsiFile>(annotationsXml);
          cacheExternalAnnotations(packageName,fromFile,createdFiles);
        }
        annotateExternally(listOwner,annotationFQName,annotationsXml,fromFile,value);
      }
    }
  }
.execute();
}
