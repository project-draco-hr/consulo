{
  PsiJavaCodeReferenceElement qualifier=getQualifier();
  if (qualifier != null) {
    PsiClass aClass=(PsiClass)qualifier.resolve();
    if (aClass == null)     return null;
    return getSuperType(aClass);
  }
  for (PsiElement scope=getContext(); scope != null; scope=scope.getContext()) {
    if (scope instanceof PsiClass) {
      PsiClass aClass=(PsiClass)scope;
      return getSuperType(aClass);
    }
    if (scope instanceof PsiExpressionList && scope.getParent() instanceof PsiAnonymousClass) {
      scope=scope.getParent();
    }
 else     if (scope instanceof JavaCodeFragment) {
      PsiType fragmentSuperType=((JavaCodeFragment)scope).getSuperType();
      if (fragmentSuperType != null)       return fragmentSuperType;
    }
  }
  return null;
}
