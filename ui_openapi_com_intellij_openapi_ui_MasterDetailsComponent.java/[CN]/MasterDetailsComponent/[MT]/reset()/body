{
  myHasDeletedItems=false;
  ((DefaultTreeModel)myTree.getModel()).reload();
  myTree.requestFocus();
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      if (myLastEditedConfigurable == null) {
        TreeUtil.selectFirstNode(myTree);
        return;
      }
      final Enumeration enumeration=myRoot.breadthFirstEnumeration();
      while (enumeration.hasMoreElements()) {
        final MyNode node=(MyNode)enumeration.nextElement();
        final Object userObject=node.getUserObject();
        if (userObject instanceof Configurable) {
          final Configurable configurable=(Configurable)userObject;
          if (Comparing.strEqual(configurable.getDisplayName(),myLastEditedConfigurable)) {
            TreeUtil.selectInTree(node,true,myTree);
            return;
          }
        }
      }
      TreeUtil.selectFirstNode(myTree);
    }
  }
);
  final Dimension preferredSize=new Dimension(myTree.getPreferredSize().width + 20,myScrollPane.getPreferredSize().height);
  myScrollPane.setPreferredSize(preferredSize);
  myScrollPane.setMaximumSize(new Dimension(150,-1));
  mySplitterProportionsData.restoreSplitterProportions(myWholePanel);
}
