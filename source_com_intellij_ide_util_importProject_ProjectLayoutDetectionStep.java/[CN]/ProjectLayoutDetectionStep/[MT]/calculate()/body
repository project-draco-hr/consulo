{
  final List<Pair<String,String>> sourcePaths=myBuilder.getSourcePaths();
  final List<Pair<File,String>> _sourcePaths=new ArrayList<Pair<File,String>>();
  for (  Pair<String,String> path : sourcePaths) {
    _sourcePaths.add(new Pair<File,String>(new File(path.first),path.second != null ? path.second : ""));
  }
  final HashSet<String> ignored=new HashSet<String>();
  final StringTokenizer tokenizer=new StringTokenizer(FileTypeManager.getInstance().getIgnoredFilesList(),";",false);
  while (tokenizer.hasMoreTokens()) {
    ignored.add(tokenizer.nextToken());
  }
  final ModuleInsight insight=new ModuleInsight(new DelegatingProgressIndicator(),Arrays.asList(new File(myBuilder.getContentRootPath())),_sourcePaths,ignored);
  insight.scan();
  return insight.getSuggestedLayout();
}
