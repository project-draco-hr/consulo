{
  final String artifactId=dependency.getArtifactId().getStringValue();
  final String groupId=dependency.getGroupId().getStringValue();
  if (artifactId == null || groupId == null)   return null;
  final MavenDomProjectModel model=dependency.getParentOfType(MavenDomProjectModel.class,false);
  if (model == null)   return null;
  SearchProcessor<MavenDomDependency,MavenDomDependencies> processor=new SearchProcessor<MavenDomDependency,MavenDomDependencies>(){
    @Override protected MavenDomDependency find(    MavenDomDependencies mavenDomDependencies){
      if (!model.equals(mavenDomDependencies.getParentOfType(MavenDomProjectModel.class,true))) {
        for (        MavenDomDependency domDependency : mavenDomDependencies.getDependencies()) {
          if (artifactId.equals(domDependency.getArtifactId().getStringValue()) && groupId.equals(domDependency.getGroupId().getStringValue())) {
            return domDependency;
          }
        }
      }
      return null;
    }
  }
;
  processDependenciesInDependencyManagement(model,processor,project);
  return processor.myResult;
}
