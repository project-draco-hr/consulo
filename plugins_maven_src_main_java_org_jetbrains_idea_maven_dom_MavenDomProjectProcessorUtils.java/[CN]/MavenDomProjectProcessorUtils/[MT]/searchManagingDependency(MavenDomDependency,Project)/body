{
  final MavenDomDependency[] parent=new MavenDomDependency[]{null};
  final String artifactId=dependency.getArtifactId().getStringValue();
  final String groupId=dependency.getGroupId().getStringValue();
  if (artifactId != null && groupId != null) {
    final MavenDomProjectModel model=dependency.getParentOfType(MavenDomProjectModel.class,false);
    if (model != null) {
      Processor<MavenDomDependencies> processor=new Processor<MavenDomDependencies>(){
        public boolean process(        MavenDomDependencies mavenDomDependencies){
          if (!model.equals(mavenDomDependencies.getParentOfType(MavenDomProjectModel.class,true))) {
            for (            MavenDomDependency domDependency : mavenDomDependencies.getDependencies()) {
              if (domDependency.equals(dependency))               continue;
              if (artifactId.equals(domDependency.getArtifactId().getStringValue()) && groupId.equals(domDependency.getGroupId().getStringValue())) {
                parent[0]=domDependency;
                return true;
              }
            }
          }
          return false;
        }
      }
;
      processDependenciesInDependencyManagement(model,processor,project);
    }
  }
  return parent[0];
}
