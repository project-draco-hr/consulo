{
  super.visitMethodCallExpression(expression);
  if (!ThreadingUtils.isNotifyOrNotifyAllCall(expression)) {
    return;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (!(qualifier instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiElement referent=((PsiReference)qualifier).resolve();
  if (!(referent instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)referent;
  final PsiClass fieldClass=field.getContainingClass();
  if (fieldClass == null) {
    return;
  }
  if (!PsiTreeUtil.isAncestor(fieldClass,expression,true)) {
    return;
  }
  if (containsWaitCall(fieldClass,field)) {
    return;
  }
  registerMethodCallError(expression);
}
