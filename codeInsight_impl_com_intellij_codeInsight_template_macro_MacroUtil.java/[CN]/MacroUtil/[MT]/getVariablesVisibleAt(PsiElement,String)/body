{
  final List<PsiVariable> list=new ArrayList<PsiVariable>();
  VariablesProcessor varproc=new VariablesProcessor(prefix,true,list){
    public boolean execute(    PsiElement pe,    PsiSubstitutor substitutor){
      if (pe instanceof PsiVariable) {
        final PsiExpression initializer=((PsiVariable)pe).getInitializer();
        if (initializer != null && PsiTreeUtil.isAncestor(initializer,place,false))         return true;
      }
      return pe instanceof PsiField && !PsiUtil.isAccessible((PsiField)pe,place,null) || super.execute(pe,substitutor);
    }
  }
;
  PsiScopesUtil.treeWalkUp(varproc,place,null);
  return varproc.getResultsAsArray();
}
