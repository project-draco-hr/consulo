{
  if (expression instanceof PsiBinaryExpression) {
    final PsiType type=expression.getType();
    if (TypeUtils.isJavaLangString(type)) {
      return false;
    }
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)expression;
    final PsiJavaToken sign=binaryExpression.getOperationSign();
    final IElementType tokenType=sign.getTokenType();
    return arithmeticTokens.contains(tokenType);
  }
 else   if (expression instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)expression;
    final PsiJavaToken sign=prefixExpression.getOperationSign();
    final IElementType tokenType=sign.getTokenType();
    return arithmeticTokens.contains(tokenType);
  }
 else   if (expression instanceof PsiParenthesizedExpression) {
    final PsiParenthesizedExpression parenthesizedExpression=(PsiParenthesizedExpression)expression;
    final PsiExpression contents=parenthesizedExpression.getExpression();
    return isArithmetic(contents);
  }
  return false;
}
