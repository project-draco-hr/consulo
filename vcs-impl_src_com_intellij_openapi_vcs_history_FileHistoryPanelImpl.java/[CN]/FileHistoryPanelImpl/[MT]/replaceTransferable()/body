{
  final TransferHandler originalTransferHandler=myComments.getTransferHandler();
  final TransferHandler newHandler=new TransferHandler("copy"){
    @Override public void exportAsDrag(    final JComponent comp,    final InputEvent e,    final int action){
      originalTransferHandler.exportAsDrag(comp,e,action);
    }
    @Override public void exportToClipboard(    final JComponent comp,    final Clipboard clip,    final int action) throws IllegalStateException {
      if ((action == COPY || action == MOVE) && (getSourceActions(comp) & action) != 0) {
        Transferable t=new TextTransferrable(myComments.getText(),myOriginalComment);
        if (t != null) {
          try {
            clip.setContents(t,null);
            exportDone(comp,t,action);
            return;
          }
 catch (          IllegalStateException ise) {
            exportDone(comp,t,NONE);
            throw ise;
          }
        }
      }
      exportDone(comp,null,NONE);
    }
    @Override public boolean importData(    final TransferSupport support){
      return originalTransferHandler.importData(support);
    }
    @Override public boolean importData(    final JComponent comp,    final Transferable t){
      return originalTransferHandler.importData(comp,t);
    }
    @Override public boolean canImport(    final TransferSupport support){
      return originalTransferHandler.canImport(support);
    }
    @Override public boolean canImport(    final JComponent comp,    final DataFlavor[] transferFlavors){
      return originalTransferHandler.canImport(comp,transferFlavors);
    }
    @Override public int getSourceActions(    final JComponent c){
      return originalTransferHandler.getSourceActions(c);
    }
    @Override public Icon getVisualRepresentation(    final Transferable t){
      return originalTransferHandler.getVisualRepresentation(t);
    }
  }
;
  myComments.setTransferHandler(newHandler);
}
