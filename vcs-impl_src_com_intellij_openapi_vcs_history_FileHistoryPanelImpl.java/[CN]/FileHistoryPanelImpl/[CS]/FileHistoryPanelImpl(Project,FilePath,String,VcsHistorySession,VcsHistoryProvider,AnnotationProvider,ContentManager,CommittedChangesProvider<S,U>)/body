{
  super(contentManager,provider.getHelpId() != null ? provider.getHelpId() : "reference.versionControl.toolwindow.history");
  myProvider=provider;
  myAnnotationProvider=annotationProvider;
  myCommittedChangesProvider=committedChangesProvider;
  myRepositoryPath=repositoryPath;
  myProject=project;
  myHistorySession=session;
  myFilePath=filePath;
  COLUMNS=createColumnList(project,provider);
  myComments=new JEditorPane(UIUtil.HTML_MIME,"");
  myComments.setPreferredSize(new Dimension(150,100));
  myComments.setEditable(false);
  myComments.setBackground(UIUtil.getComboBoxDisabledBackground());
  myComments.addHyperlinkListener(new BrowserHyperlinkListener());
  myUpdateAlarm=new Alarm(session.allowAsyncRefresh() ? Alarm.ThreadToUse.SHARED_THREAD : Alarm.ThreadToUse.SWING_THREAD);
  HistoryAsTreeProvider treeHistoryProvider=provider.getTreeHistoryProvider();
  @NonNls String storageKey="FileHistory." + provider.getClass().getName();
  if (treeHistoryProvider != null) {
    myDualView=new DualView(new TreeNodeOnVcsRevision(null,treeHistoryProvider.createTreeOn(myHistorySession.getRevisionList())),COLUMNS,storageKey,project);
  }
 else {
    myDualView=new DualView(new TreeNodeOnVcsRevision(null,wrapWithTreeElements(myHistorySession.getRevisionList())),COLUMNS,storageKey,project);
    myDualView.switchToTheFlatMode();
  }
  final TableLinkMouseListener listener=new TableLinkMouseListener();
  listener.install(myDualView.getFlatView());
  listener.install(myDualView.getTreeView());
  createDualView();
  myPopupActions=createPopupActions();
  myUpdateAlarm.addRequest(new Runnable(){
    public void run(){
      if (myProject.isDisposed()) {
        return;
      }
      final boolean refresh=myHistorySession.refresh();
      myUpdateAlarm.cancelAllRequests();
      myUpdateAlarm.addRequest(this,10000);
      if (refresh) {
        final VcsHistorySession session;
        try {
          session=getHistoryProvider().createSessionFor(myFilePath);
        }
 catch (        VcsException e) {
          LOG.info(e);
          return;
        }
        if (session != null) {
          if (myHistorySession.allowAsyncRefresh()) {
            SwingUtilities.invokeLater(new Runnable(){
              public void run(){
                refresh(session);
              }
            }
);
          }
 else {
            refresh(session);
          }
        }
      }
    }
  }
,10000);
  init();
  chooseView();
}
