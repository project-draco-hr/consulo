{
  myEditor.getActiveDecorationLayer().removeFeedback();
  myEditor.setDesignTimeInsets(2);
  if (!validateNestedFormInsert(item)) {
    return;
  }
  if (!myEditor.ensureEditable()) {
    return;
  }
  myInsertedComponent=createInsertedComponent(myEditor,item);
  if (myInsertedComponent == null) {
    return;
  }
  if (location.canDrop(item)) {
    CommandProcessor.getInstance().executeCommand(myEditor.getProject(),new Runnable(){
      public void run(){
        createBindingWhenDrop(myEditor,myInsertedComponent);
        final RadComponent[] components=new RadComponent[]{myInsertedComponent};
        location.processDrop(myEditor,components,null,item);
        FormEditingUtil.clearSelection(myEditor.getRootContainer());
        myInsertedComponent.setSelected(true);
        if (location.getContainer() != null && location.getContainer().isXY()) {
          Dimension newSize=myInsertedComponent.getPreferredSize();
          Util.adjustSize(myInsertedComponent.getDelegee(),myInsertedComponent.getConstraints(),newSize);
          myInsertedComponent.setSize(newSize);
        }
        if (!GuiDesignerConfiguration.getInstance(myEditor.getProject()).IRIDA_LAYOUT_MODE && myInsertedComponent.getParent() instanceof RadRootContainer && myInsertedComponent instanceof RadAtomicComponent) {
          GridBuildUtil.convertToGrid(myEditor);
          FormEditingUtil.clearSelection(myEditor.getRootContainer());
          myInsertedComponent.setSelected(true);
        }
        checkBindTopLevelPanel();
        if (!mySticky) {
          PaletteManager.getInstance(myEditor.getProject()).clearActiveItem();
        }
        myEditor.refreshAndSave(false);
      }
    }
,null,null);
  }
}
