{
  if (element == null || !PsiUtil.isLanguageLevel5OrHigher(element))   return false;
  if (!(element instanceof PsiIdentifier) || !(element.getParent() instanceof PsiReferenceExpression)) {
    return false;
  }
  PsiReferenceExpression refExpr=(PsiReferenceExpression)element.getParent();
  if (refExpr.getParent() instanceof PsiReferenceExpression && isParameterizedReference((PsiReferenceExpression)refExpr.getParent()))   return false;
  PsiElement resolved=refExpr.resolve();
  if (!(resolved instanceof PsiClass)) {
    return false;
  }
  PsiClass psiClass=(PsiClass)resolved;
  PsiFile file=refExpr.getContainingFile();
  if (!(file instanceof PsiJavaFile))   return false;
  PsiImportList importList=((PsiJavaFile)file).getImportList();
  if (importList == null)   return false;
  for (  PsiImportStaticStatement statement : importList.getImportStaticStatements()) {
    PsiClass staticResolve=statement.resolveTargetClass();
    if (psiClass == staticResolve)     return false;
  }
  String text=CodeInsightBundle.message("intention.add.on.demand.static.import.text",psiClass.getQualifiedName());
  setText(text);
  return true;
}
