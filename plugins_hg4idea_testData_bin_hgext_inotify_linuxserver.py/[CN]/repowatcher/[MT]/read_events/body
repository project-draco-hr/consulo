def read_events(self, bufsize=None):
    events = self.watcher.read(bufsize)
    if self.ui.debugflag:
        self.ui.note((_('%s reading %d events\n') % (self.event_time(), len(events))))
    for evt in events:
        if (evt.fullpath == self.wprefix[:(-1)]):
            continue
        assert evt.fullpath.startswith(self.wprefix)
        wpath = evt.fullpath[self.prefixlen:]
        if (wpath.startswith('.hg/') and (evt.mask & inotify.IN_ISDIR)):
            continue
        if (wpath == '.hg/wlock'):
            if (evt.mask & inotify.IN_DELETE):
                self.dirstate.invalidate()
                self.dirty = False
                self.scan()
            elif (evt.mask & inotify.IN_CREATE):
                self.dirty = True
        else:
            if self.dirty:
                continue
            if (evt.mask & inotify.IN_UNMOUNT):
                self.process_unmount(wpath, evt)
            elif (evt.mask & (inotify.IN_MODIFY | inotify.IN_ATTRIB)):
                self.process_modify(wpath, evt)
            elif (evt.mask & ((inotify.IN_DELETE | inotify.IN_DELETE_SELF) | inotify.IN_MOVED_FROM)):
                self.process_delete(wpath, evt)
            elif (evt.mask & (inotify.IN_CREATE | inotify.IN_MOVED_TO)):
                self.process_create(wpath, evt)
    self.lastevent.clear()
