@classmethod
def run(cls):
    while True:
        timeout = None
        timeobj = None
        for obj in cls.instances.itervalues():
            if ((obj.timeout is not None) and ((timeout is None) or (obj.timeout < timeout))):
                (timeout, timeobj) = (obj.timeout, obj)
        try:
            events = cls.poll.poll(timeout)
        except select.error as err:
            if (err[0] == errno.EINTR):
                continue
            raise
        if events:
            by_fd = {}
            for (fd, event) in events:
                by_fd.setdefault(fd, []).append(event)
            for (fd, events) in by_fd.iteritems():
                cls.instances[fd].handle_pollevents(events)
        elif timeobj:
            timeobj.handle_timeout()
