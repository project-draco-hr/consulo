{
  final Job<?> job=JobScheduler.getInstance().createJob(jobName,Job.DEFAULT_PRIORITY);
  for (  final T thing : things) {
    job.addTask(new Runnable(){
      public void run(){
        if (!thingProcessor.process(thing)) {
          job.cancel();
        }
      }
    }
);
  }
  try {
    job.scheduleAndWaitForResults();
  }
 catch (  ProcessCanceledException e) {
    throw e;
  }
catch (  Throwable throwable) {
    LOG.error(throwable);
  }
  return !job.isCanceled();
}
