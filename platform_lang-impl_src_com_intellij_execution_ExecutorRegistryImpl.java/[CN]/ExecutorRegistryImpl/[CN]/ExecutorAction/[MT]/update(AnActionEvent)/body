{
  final Presentation presentation=e.getPresentation();
  final Project project=e.getProject();
  if (project == null || project.isDisposed()) {
    presentation.setEnabledAndVisible(false);
    return;
  }
  presentation.setVisible(myExecutor.isApplicable(project));
  if (!presentation.isVisible()) {
    return;
  }
  if (DumbService.getInstance(project).isDumb() || !project.isInitialized()) {
    presentation.setEnabled(false);
    return;
  }
  final RunnerAndConfigurationSettings selectedConfiguration=getConfiguration(project);
  boolean enabled=false;
  String text;
  final String textWithMnemonic=getTemplatePresentation().getTextWithMnemonic();
  if (selectedConfiguration != null) {
    presentation.setIcon(getInformativeIcon(project,selectedConfiguration));
    final ProgramRunner runner=RunnerRegistry.getInstance().getRunner(myExecutor.getId(),selectedConfiguration.getConfiguration());
    ExecutionTarget target=ExecutionTargetManager.getActiveTarget(project);
    enabled=ExecutionTargetManager.canRun(selectedConfiguration,target) && runner != null && !isStarting(project,myExecutor.getId(),runner.getRunnerId());
    if (enabled) {
      presentation.setDescription(myExecutor.getDescription());
    }
    text=myExecutor.getStartActionText(selectedConfiguration.getName());
  }
 else {
    text=textWithMnemonic;
  }
  presentation.setEnabled(enabled);
  presentation.setText(text);
}
