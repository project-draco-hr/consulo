{
  final String localName=XmlUtil.findLocalNameByQualifiedName(attributeName);
  final String namespacePrefix=XmlUtil.findPrefixByQualifiedName(attributeName);
  final XmlNSDescriptorImpl xmlNSDescriptor=(XmlNSDescriptorImpl)getNSDescriptor();
  final String namespace=namespacePrefix != null && namespacePrefix.isEmpty() ? ((xmlNSDescriptor != null) ? xmlNSDescriptor.getDefaultNamespace() : "") : context.getNamespaceByPrefix(namespacePrefix);
  XmlAttributeDescriptor attribute=getAttribute(localName,namespace,context,attributeName);
  if (attribute instanceof AnyXmlAttributeDescriptor && namespace.length() > 0) {
    final XmlNSDescriptor candidateNSDescriptor=context.getNSDescriptor(namespace,true);
    if (candidateNSDescriptor instanceof XmlNSDescriptorImpl) {
      final XmlNSDescriptorImpl nsDescriptor=(XmlNSDescriptorImpl)candidateNSDescriptor;
      final XmlAttributeDescriptor xmlAttributeDescriptor=nsDescriptor.getAttribute(localName,namespace,context);
      if (xmlAttributeDescriptor != null)       return xmlAttributeDescriptor;
 else {
        final ComplexTypeDescriptor.CanContainAttributeType containAttributeType=((AnyXmlAttributeDescriptor)attribute).getCanContainAttributeType();
        if (containAttributeType == ComplexTypeDescriptor.CanContainAttributeType.CanContainButDoNotSkip) {
          attribute=null;
        }
      }
    }
  }
  return attribute;
}
