{
  super(project,true);
  setTitle("Create Library");
  myProject=project;
  myRoots=roots;
  final FormBuilder builder=LibraryNameAndLevelPanel.createFormBuilder();
  Module module=findModule(roots);
  if (module != null) {
    myModifiableModel=ModuleRootManager.getInstance(module).getModifiableModel();
    myLibrariesContainer=LibrariesContainerFactory.createContainer(myModifiableModel);
  }
 else {
    myModifiableModel=null;
    myLibrariesContainer=LibrariesContainerFactory.createContainer(project);
  }
  myDefaultName=myLibrariesContainer.suggestUniqueLibraryName(suggestLibraryName(roots));
  myNameAndLevelPanel=new LibraryNameAndLevelPanel(builder,myDefaultName,myLibrariesContainer.getAvailableLevels(),LibrariesContainer.LibraryLevel.PROJECT);
  myNameAndLevelPanel.setDefaultName(myDefaultName);
  myModulesCombobox=new ModulesCombobox();
  myModulesCombobox.fillModules(myProject);
  myModulesCombobox.setSelectedModule(module);
  builder.addLabeledComponent("&Add to module:",myModulesCombobox);
  myPanel=builder.getPanel();
  myNameAndLevelPanel.getLibraryNameField().selectAll();
  myNameAndLevelPanel.getLevelComboBox().addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      onLevelChanged();
    }
  }
);
  myNameAndLevelPanel.getLibraryNameField().getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      updateOkAction();
    }
  }
);
  init();
}
