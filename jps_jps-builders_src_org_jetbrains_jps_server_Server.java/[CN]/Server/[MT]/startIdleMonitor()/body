{
  final long allowedIdlePeriod=2 * GlobalOptions.SERVER_PING_PERIOD;
  myScheduler.scheduleAtFixedRate(new Runnable(){
    private long myStartTime;
    @Override public void run(){
      final long now=System.currentTimeMillis();
      final long lastPing=myLastPingTime;
      if (lastPing > 0L) {
        final long elapsed=now - lastPing;
        if (elapsed > allowedIdlePeriod) {
          doStop();
        }
      }
 else {
        final long start=myStartTime;
        if (start > 0) {
          final long elapsed=now - start;
          if (elapsed > 5 * GlobalOptions.SERVER_PING_PERIOD) {
            doStop();
          }
        }
 else {
          myStartTime=now;
        }
      }
    }
    private void doStop(){
      try {
        stop();
      }
  finally {
        System.exit(0);
      }
    }
  }
,allowedIdlePeriod,allowedIdlePeriod,TimeUnit.MILLISECONDS);
}
