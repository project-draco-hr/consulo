{
  for (int i=start; i < references.length; ++i) {
    PsiReference reference=references[i];
    ProgressManager.checkCanceled();
    if (isUrlReference(reference))     continue;
    if (!hasBadResolve(reference,false)) {
      continue;
    }
    String description=getErrorDescription(reference);
    final int startOffset=reference.getElement().getTextRange().getStartOffset();
    final TextRange referenceRange=reference.getRangeInElement();
    if (referenceRange.getStartOffset() > referenceRange.getEndOffset()) {
      LOG.error("Reference range start offset > end offset:  " + reference + ", start offset: "+ referenceRange.getStartOffset()+ ", end offset: "+ referenceRange.getEndOffset());
    }
    HighlightInfoType type=getTagProblemInfoType(PsiTreeUtil.getParentOfType(value,XmlTag.class));
    if (value instanceof XmlAttributeValue) {
      PsiElement parent=value.getParent();
      if (parent instanceof XmlAttribute) {
        String name=((XmlAttribute)parent).getName().toLowerCase();
        if (type.getSeverity(null).compareTo(HighlightInfoType.WARNING.getSeverity(null)) > 0 && name.endsWith("stylename")) {
          type=HighlightInfoType.WARNING;
        }
      }
    }
    HighlightInfo info=HighlightInfo.newHighlightInfo(type).range(startOffset + referenceRange.getStartOffset(),startOffset + referenceRange.getEndOffset()).descriptionAndTooltip(description).create();
    addToResults(info);
    if (reference instanceof LocalQuickFixProvider) {
      LocalQuickFix[] fixes=((LocalQuickFixProvider)reference).getQuickFixes();
      if (fixes != null) {
        InspectionManager manager=InspectionManager.getInstance(reference.getElement().getProject());
        for (        LocalQuickFix fix : fixes) {
          ProblemDescriptor descriptor=manager.createProblemDescriptor(value,description,fix,ProblemHighlightType.GENERIC_ERROR_OR_WARNING,true);
          QuickFixAction.registerQuickFixAction(info,new LocalQuickFixAsIntentionAdapter(fix,descriptor));
        }
      }
    }
    UnresolvedReferenceQuickFixProvider.registerReferenceFixes(reference,new QuickFixActionRegistrarImpl(info));
  }
}
