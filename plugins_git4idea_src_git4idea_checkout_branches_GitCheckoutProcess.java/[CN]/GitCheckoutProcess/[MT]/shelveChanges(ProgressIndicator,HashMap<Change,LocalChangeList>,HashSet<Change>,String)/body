{
  if (toShelve.isEmpty()) {
    return null;
  }
  HashSet<LocalChangeList> lists=new HashSet<LocalChangeList>();
  ArrayList<ChangeInfo> ci=new ArrayList<ChangeInfo>(toShelve.size());
  for (  Change c : toShelve) {
    LocalChangeList l=changes.get(c);
    lists.add(l);
    ChangeInfo i=new ChangeInfo();
    ContentRevision after=c.getAfterRevision();
    if (after != null) {
      i.AFTER_PATH=after.getFile().getPath();
    }
    ContentRevision before=c.getBeforeRevision();
    if (before != null) {
      i.BEFORE_PATH=before.getFile().getPath();
    }
    i.CHANGE_LIST_NAME=l.getName();
    ci.add(i);
  }
  ArrayList<ChangeListInfo> li=new ArrayList<ChangeListInfo>(lists.size());
  for (  LocalChangeList l : lists) {
    ChangeListInfo i=new ChangeListInfo();
    i.IS_DEFAULT=l.isDefault();
    i.NAME=l.getName();
    i.COMMENT=l.getComment();
    li.add(i);
  }
  if (progress != null) {
    progress.setText("Creating shelve: " + description);
  }
  ShelvedChangeList shelved=GitShelveUtils.shelveChanges(myProject,myShelveManager,toShelve,description,myExceptions);
  if (shelved == null) {
    return null;
  }
  BranchChanges b=new BranchChanges();
  b.SHELVE_PATH=shelved.PATH;
  b.CHANGE_LISTS=li.toArray(new ChangeListInfo[li.size()]);
  b.CHANGES=ci.toArray(new ChangeInfo[ci.size()]);
  return b;
}
