{
  JavaRefactoringSettings.getInstance().INHERITANCE_TO_DELEGATION_DELEGATE_OTHER=myCbGenerateGetter.isSelected();
  final Collection<MemberInfo> selectedMemberInfos=getSelectedMemberInfos();
  final ArrayList<PsiClass> implementedInterfaces=new ArrayList<PsiClass>();
  final ArrayList<PsiMethod> delegatedMethods=new ArrayList<PsiMethod>();
  for (  MemberInfo memberInfo : selectedMemberInfos) {
    final PsiElement member=memberInfo.getMember();
    if (member instanceof PsiClass && Boolean.FALSE.equals(memberInfo.getOverrides())) {
      implementedInterfaces.add((PsiClass)member);
    }
 else     if (member instanceof PsiMethod) {
      delegatedMethods.add((PsiMethod)member);
    }
  }
  invokeRefactoring(new InheritanceToDelegationProcessor(myProject,myClass,getSelectedTargetClass(),getFieldName(),getInnerClassName(),implementedInterfaces.toArray(new PsiClass[implementedInterfaces.size()]),delegatedMethods.toArray(new PsiMethod[delegatedMethods.size()]),isGenerateGetter(),isGenerateGetter()));
}
