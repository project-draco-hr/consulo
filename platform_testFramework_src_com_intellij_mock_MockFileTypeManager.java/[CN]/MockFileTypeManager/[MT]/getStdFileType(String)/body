{
  if ("ARCHIVE".equals(fileTypeName) || "CLASS".equals(fileTypeName))   return UnknownFileType.INSTANCE;
  if ("PLAIN_TEXT".equals(fileTypeName))   return PlainTextFileType.INSTANCE;
  Language language=Language.findLanguageByID(fileTypeName);
  if (language == null) {
    if ("JAVA".equals(fileTypeName))     language=loadLanguageSafe("com.intellij.lang.java.JavaLanguage");
    if ("XML".equals(fileTypeName))     language=loadLanguageSafe("com.intellij.lang.xml.XMLLanguage");
    if ("DTD".equals(fileTypeName))     language=loadLanguageSafe("com.intellij.lang.dtd.DTDLanguage");
    if ("JSP".equals(fileTypeName))     language=loadLanguageSafe("com.intellij.lang.jsp.NewJspLanguage");
    if ("JSPX".equals(fileTypeName))     language=loadLanguageSafe("com.intellij.lang.jspx.JSPXLanguage");
    if ("HTML".equals(fileTypeName))     language=loadLanguageSafe("com.intellij.lang.html.HTMLLanguage");
    if ("XHTML".equals(fileTypeName))     language=loadLanguageSafe("com.intellij.lang.xhtml.XHTMLLanguage");
    if ("JavaScript".equals(fileTypeName))     language=loadLanguageSafe("com.intellij.lang.javascript.JavascriptLanguage");
    if ("Properties".equals(fileTypeName))     language=loadLanguageSafe("com.intellij.lang.properties.PropertiesLanguage");
  }
  return new MockLanguageFileType(language == null ? PlainTextLanguage.INSTANCE : language,fileTypeName.toLowerCase());
}
