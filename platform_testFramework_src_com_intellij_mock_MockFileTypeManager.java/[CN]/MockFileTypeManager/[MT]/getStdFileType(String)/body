{
  if ("ARCHIVE".equals(fileTypeName) || "CLASS".equals(fileTypeName))   return UnknownFileType.INSTANCE;
  if ("PLAIN_TEXT".equals(fileTypeName))   return PlainTextFileType.INSTANCE;
  if ("JAVA".equals(fileTypeName))   return loadFileTypeSafe("com.intellij.ide.highlighter.JavaFileType");
  if ("XML".equals(fileTypeName))   return loadFileTypeSafe("com.intellij.ide.highlighter.XmlFileType");
  if ("DTD".equals(fileTypeName))   return loadFileTypeSafe("com.intellij.ide.highlighter.DTDFileType");
  if ("JSP".equals(fileTypeName))   return loadFileTypeSafe("com.intellij.ide.highlighter.NewJspFileType");
  if ("JSPX".equals(fileTypeName))   return loadFileTypeSafe("com.intellij.ide.highlighter.JspxFileType");
  if ("HTML".equals(fileTypeName))   return loadFileTypeSafe("com.intellij.ide.highlighter.HtmlFileType");
  if ("XHTML".equals(fileTypeName))   return loadFileTypeSafe("com.intellij.ide.highlighter.XHtmlFileType");
  if ("JavaScript".equals(fileTypeName))   return loadFileTypeSafe("com.intellij.lang.javascript.JavaScriptFileType");
  if ("Properties".equals(fileTypeName))   return loadFileTypeSafe("com.intellij.lang.properties.PropertiesFileType");
  return new MockLanguageFileType(PlainTextLanguage.INSTANCE,fileTypeName.toLowerCase());
}
