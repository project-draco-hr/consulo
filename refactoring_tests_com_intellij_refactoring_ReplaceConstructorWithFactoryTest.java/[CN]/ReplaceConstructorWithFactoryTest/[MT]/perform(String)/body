{
  int offset=myEditor.getCaretModel().getOffset();
  PsiElement element=myFile.findElementAt(offset);
  PsiMethod constructor=null;
  PsiClass aClass=null;
  while (true) {
    if (element == null || element instanceof PsiFile) {
      assertTrue(false);
      return;
    }
    if (element instanceof PsiMethod && ((PsiMethod)element).isConstructor()) {
      constructor=(PsiMethod)element;
      break;
    }
    if (element instanceof PsiClass && ((PsiClass)element).getConstructors().length == 0) {
      aClass=(PsiClass)element;
      break;
    }
    element=element.getParent();
  }
  PsiClass targetClass=null;
  if (targetClassName != null) {
    targetClass=myJavaFacade.findClass(targetClassName,GlobalSearchScope.allScope(getProject()));
    assertTrue(targetClass != null);
  }
  final ReplaceConstructorWithFactoryProcessor replaceConstructorWithFactoryProcessor;
  if (constructor != null) {
    if (targetClass == null) {
      targetClass=constructor.getContainingClass();
    }
    replaceConstructorWithFactoryProcessor=new ReplaceConstructorWithFactoryProcessor(myProject,constructor,constructor.getContainingClass(),targetClass,"new" + constructor.getName());
  }
 else {
    if (targetClass == null) {
      targetClass=aClass;
    }
    replaceConstructorWithFactoryProcessor=new ReplaceConstructorWithFactoryProcessor(myProject,null,aClass,targetClass,"new" + aClass.getName());
  }
  replaceConstructorWithFactoryProcessor.run();
}
