{
  Object userObject=null;
  TreePath path=myTree.getSelectionPath();
  if (path != null) {
    DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
    if (node != null) {
      userObject=node.getUserObject();
    }
  }
  DefaultActionGroup group=new DefaultActionGroup();
  group.add(new RunAction());
  group.add(new CreateMetaTargetAction());
  group.add(new RemoveMetaTargetsOrBuildFileAction());
  group.add(ActionManager.getInstance().getAction(IdeActions.ACTION_EDIT_SOURCE));
  if (userObject instanceof AntBuildFileNodeDescriptor) {
    group.add(new RemoveBuildFileAction(this));
  }
  if (userObject instanceof AntTargetNodeDescriptor) {
    AntBuildTarget target=((AntTargetNodeDescriptor)userObject).getTarget();
    DefaultActionGroup executeOnGroup=new DefaultActionGroup(AntBundle.message("ant.explorer.execute.on.action.group.name"),true);
    executeOnGroup.add(new ExecuteOnEventAction(target,ExecuteBeforeCompilationEvent.getInstance()));
    executeOnGroup.add(new ExecuteOnEventAction(target,ExecuteAfterCompilationEvent.getInstance()));
    executeOnGroup.addSeparator();
    executeOnGroup.add(new ExecuteBeforeRunAction(target,getCurrentBuildFile()));
    group.add(executeOnGroup);
    group.add(new AssignShortcutAction(target.getActionId()));
  }
  group.add(myAntBuildFilePropertiesAction);
  ActionPopupMenu popupMenu=ActionManager.getInstance().createActionPopupMenu(ActionPlaces.ANT_EXPLORER_POPUP,group);
  popupMenu.getComponent().show(comp,x,y);
}
