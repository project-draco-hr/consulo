{
  List<T> result=new ArrayList<T>(templates.size());
  for (  T template : templates) {
    Class<? extends T> aClass=(Class<? extends T>)template.getClass();
    try {
      Constructor<? extends T> constructor=aClass.getDeclaredConstructor();
      constructor.setAccessible(true);
      T clone=constructor.newInstance();
      result.add(clone);
    }
 catch (    InstantiationException e) {
      throw new RuntimeException("Cannot instantiate annotator " + aClass + ". There must be public no-args constructor",e);
    }
catch (    IllegalAccessException e) {
      throw new RuntimeException("Cannot access annotator " + aClass + ". There must be public no-args constructor",e);
    }
catch (    NoSuchMethodException e) {
      throw new RuntimeException("Cannot create annotator " + aClass + ". There must be public no-args constructor",e);
    }
catch (    InvocationTargetException e) {
      throw new RuntimeException("Error during creating annotator " + aClass,e);
    }
  }
  return result;
}
