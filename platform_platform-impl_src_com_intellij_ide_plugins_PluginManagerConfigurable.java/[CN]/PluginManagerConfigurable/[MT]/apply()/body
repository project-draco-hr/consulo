{
  final String applyMessage=myPluginManagerMain.apply();
  if (applyMessage != null) {
    throw new ConfigurationException(applyMessage);
  }
  if (myPluginManagerMain.isRequireShutdown()) {
    final ApplicationEx app=ApplicationManagerEx.getApplicationEx();
    final PluginTable availablePluginsTable=myPluginManagerMain.getAvailablePluginsTable();
    final PluginTable installedPluginTable=myPluginManagerMain.getInstalledPluginTable();
    saveSorting(availablePluginsTable,true);
    saveSorting(installedPluginTable,false);
    if (app.isRestartCapable()) {
      if (Messages.showYesNoDialog(IdeBundle.message("message.idea.restart.required",ApplicationNamesInfo.getInstance().getProductName()),IdeBundle.message("title.plugins"),Messages.getQuestionIcon()) == 0) {
        app.restart();
      }
 else {
        myPluginManagerMain.ignoreChanges();
      }
    }
 else {
      if (Messages.showYesNoDialog(IdeBundle.message("message.idea.shutdown.required",ApplicationNamesInfo.getInstance().getProductName()),IdeBundle.message("title.plugins"),Messages.getQuestionIcon()) == 0) {
        app.exit(true);
      }
 else {
        myPluginManagerMain.ignoreChanges();
      }
    }
  }
}
