{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)parent;
  final PsiExpression qualifier=referenceExpression.getQualifierExpression();
  if (qualifier == null) {
    return;
  }
  final PsiElement grandParent=referenceExpression.getParent();
  if (!(grandParent instanceof PsiMethodCallExpression)) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
  final PsiExpressionList argumentList=methodCallExpression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 1) {
    return;
  }
  final PsiExpression argument=arguments[0];
  @NonNls final String newExpression=qualifier.getText() + '+' + argument.getText();
  replaceExpression(methodCallExpression,newExpression);
}
