{
  final AtomicBoolean result=new AtomicBoolean();
  final AtomicBoolean failure=new AtomicBoolean();
  rebaseTask.executeInBackground(true,new GitTaskResultHandlerAdapter(){
    @Override protected void onSuccess(){
      result.set(true);
    }
    @Override protected void onCancel(){
      result.set(false);
    }
    @Override protected void onFailure(){
      failure.set(true);
    }
  }
);
  if (failure.get()) {
    result.set(handleRebaseFailure(root,h,rebaseConflictDetector));
  }
  return result.get();
}
