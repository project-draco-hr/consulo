{
  List<String> allCommits=new ArrayList<String>();
  if (olderCommits.isEmpty() || olderCommits.size() == allCommits.size()) {
    LOG.info("Nothing to reorder. olderCommits: " + olderCommits + " allCommits: "+ allCommits);
    return true;
  }
  final GitLineHandler h=new GitLineHandler(myProject,root,GitCommand.REBASE);
  Integer rebaseEditorNo=null;
  GitRebaseEditorService rebaseEditorService=GitRebaseEditorService.getInstance();
  try {
    h.addParameters("-i","-m","-v");
    h.addParameters(parentCommit);
    final GitRebaseProblemDetector rebaseConflictDetector=new GitRebaseProblemDetector();
    h.addLineListener(rebaseConflictDetector);
    final PushRebaseEditor pushRebaseEditor=new PushRebaseEditor(rebaseEditorService,root,olderCommits,false,h);
    rebaseEditorNo=pushRebaseEditor.getHandlerNo();
    rebaseEditorService.configureHandler(h,rebaseEditorNo);
    final GitTask rebaseTask=new GitTask(myProject,h,"Reordering commits");
    rebaseTask.setExecuteResultInAwt(false);
    return executeRebaseTaskInBackground(root,h,rebaseConflictDetector,rebaseTask);
  }
  finally {
    if (rebaseEditorNo != null) {
      rebaseEditorService.unregisterHandler(rebaseEditorNo);
    }
  }
}
