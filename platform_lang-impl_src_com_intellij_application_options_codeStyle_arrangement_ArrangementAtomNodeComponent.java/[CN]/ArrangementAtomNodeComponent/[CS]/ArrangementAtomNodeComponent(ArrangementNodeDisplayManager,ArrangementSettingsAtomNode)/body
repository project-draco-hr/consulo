{
  myLabel.setHorizontalAlignment(SwingConstants.CENTER);
  myLabel.setText(manager.getDisplayValue(node));
  mySize=new Dimension(manager.getMaxWidth(node.getType()),myLabel.getPreferredSize().height);
  GridBagConstraints constraints=new GridBag().anchor(GridBagConstraints.CENTER).insets(0,0,0,0);
  JPanel labelPanel=new JPanel(new GridBagLayout());
  myLabel.setBackground(Color.red);
  labelPanel.add(myLabel,constraints);
  labelPanel.setBorder(IdeBorderFactory.createEmptyBorder(PADDING));
  labelPanel.setOpaque(false);
  final int arcSize=myLabel.getFont().getSize();
  JPanel roundBorderPanel=new JPanel(new GridBagLayout()){
    @Override public void paint(    Graphics g){
      Color color;
      if (myScreenBounds != null && myScreenBounds.contains(MouseInfo.getPointerInfo().getLocation())) {
        color=UIUtil.getTreeSelectionBackground();
      }
 else {
        color=UIUtil.getTabbedPaneBackground();
      }
      Rectangle bounds=getBounds();
      g.setColor(color);
      g.fillRoundRect(0,0,bounds.width,bounds.height,arcSize,arcSize);
      super.paint(g);
    }
  }
;
  roundBorderPanel.add(labelPanel);
  roundBorderPanel.setBorder(IdeBorderFactory.createRoundedBorder(arcSize));
  roundBorderPanel.setOpaque(false);
  myRenderer.setBorder(IdeBorderFactory.createEmptyBorder(PADDING));
  myRenderer.add(roundBorderPanel,constraints);
  myRenderer.setOpaque(false);
}
