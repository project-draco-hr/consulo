{
  myCondition=condition;
  myCloseCallback=closeCallback;
  myLabel.setHorizontalAlignment(SwingConstants.CENTER);
  myLabel.setText(manager.getDisplayValue(condition));
  myLabelSize=new Dimension(manager.getMaxWidth(condition.getType()),myLabel.getPreferredSize().height);
  final ArrangementRemoveConditionAction action;
  if (closeCallback == null) {
    myCloseButton=null;
    action=null;
  }
 else {
    action=new ArrangementRemoveConditionAction();
    Icon buttonIcon=action.getTemplatePresentation().getIcon();
    Dimension buttonSize=new Dimension(buttonIcon.getIconWidth(),buttonIcon.getIconHeight());
    myCloseButton=new ActionButton(action,action.getTemplatePresentation().clone(),ArrangementConstants.RULE_TREE_PLACE,buttonSize){
      @Override protected Icon getIcon(){
        return myCloseButtonHovered ? action.getTemplatePresentation().getHoveredIcon() : action.getTemplatePresentation().getIcon();
      }
    }
;
  }
  GridBagConstraints constraints=new GridBag().anchor(GridBagConstraints.CENTER).insets(0,0,0,0);
  JPanel labelPanel=new JPanel(new GridBagLayout());
  labelPanel.add(myLabel,constraints);
  labelPanel.setBorder(IdeBorderFactory.createEmptyBorder(VERTICAL_PADDING,HORIZONTAL_PADDING,VERTICAL_PADDING,HORIZONTAL_PADDING));
  labelPanel.setOpaque(false);
  final int arcSize=myLabel.getFont().getSize();
  JPanel roundBorderPanel=new JPanel(new GridBagLayout()){
    @Override public void paint(    Graphics g){
      Rectangle buttonBounds=getCloseButtonScreenLocation();
      if (buttonBounds != null && action != null) {
        Point mouseScreenLocation=MouseInfo.getPointerInfo().getLocation();
        myCloseButtonHovered=buttonBounds.contains(mouseScreenLocation);
      }
      Rectangle bounds=getBounds();
      g.setColor(myBackgroundColor);
      g.fillRoundRect(0,0,bounds.width,bounds.height,arcSize,arcSize);
      super.paint(g);
    }
  }
;
  roundBorderPanel.add(labelPanel,new GridBag().fillCellHorizontally());
  if (myCloseButton != null) {
    roundBorderPanel.add(myCloseButton,new GridBag().anchor(GridBagConstraints.CENTER).insets(VERTICAL_PADDING,0,0,0));
  }
  myBorder=IdeBorderFactory.createRoundedBorder(arcSize);
  roundBorderPanel.setBorder(myBorder);
  roundBorderPanel.setOpaque(false);
  myRenderer.setBorder(IdeBorderFactory.createEmptyBorder(VERTICAL_PADDING));
  myRenderer.add(roundBorderPanel,constraints);
  myRenderer.setOpaque(false);
  setSelected(false);
}
