{
  final Ref<Exception> refEx=new Ref<Exception>();
  final HashSet<String> variables=new HashSet<String>();
  final Map<String,String> naturesNames=new HashMap<String,String>();
  final List<String> projectsToConvert=getParameters().projectsToConvert;
  final boolean oneProjectToConvert=projectsToConvert.size() == 1;
  final String separator=oneProjectToConvert ? "<br>" : ", ";
  ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      try {
        for (        String path : projectsToConvert) {
          final File classpathfile=new File(path,EclipseXml.DOT_CLASSPATH_EXT);
          if (classpathfile.exists()) {
            final Element classpathElement=JDOMUtil.loadDocument(classpathfile).getRootElement();
            EclipseClasspathReader.collectVariables(variables,classpathElement,path);
          }
          collectUnknownNatures(path,naturesNames,separator);
        }
      }
 catch (      IOException e) {
        refEx.set(e);
      }
catch (      JDOMException e) {
        refEx.set(e);
      }
    }
  }
,EclipseBundle.message("eclipse.import.converting"),false,currentProject);
  if (!refEx.isNull()) {
    Messages.showErrorDialog(dstProject,refEx.get().getMessage(),getTitle());
    return false;
  }
  if (!ProjectMacrosUtil.checkNonIgnoredMacros(dstProject,variables)) {
    return false;
  }
  final Runnable runnable=new Runnable(){
    public void run(){
      if (!naturesNames.isEmpty()) {
        final String title="Unknown Natures Detected";
        final String naturesByProject;
        if (oneProjectToConvert) {
          naturesByProject=naturesNames.values().iterator().next();
        }
 else {
          naturesByProject=StringUtil.join(naturesNames.keySet(),new Function<String,String>(){
            @Override public String fun(            String projectPath){
              return projectPath + "(" + naturesNames.get(projectPath)+ ")";
            }
          }
,"<br>");
        }
        Notifications.Bus.notify(new Notification(title,title,"Imported projects contain unknown natures:<br>" + naturesByProject + "<br>"+ "Some settings may be lost after import.",NotificationType.WARNING));
      }
    }
  }
;
  ApplicationManager.getApplication().invokeLater(runnable,ModalityState.NON_MODAL);
  return true;
}
