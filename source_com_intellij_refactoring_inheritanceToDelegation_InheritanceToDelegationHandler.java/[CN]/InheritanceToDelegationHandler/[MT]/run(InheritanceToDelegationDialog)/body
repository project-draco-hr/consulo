{
  final MemberInfo[] selectedMemberInfos=dialog.getSelectedMemberInfos();
  final ArrayList<PsiClass> implementedInterfaces=new ArrayList<PsiClass>();
  final ArrayList<PsiMethod> delegatedMethods=new ArrayList<PsiMethod>();
  for (int i=0; i < selectedMemberInfos.length; i++) {
    MemberInfo memberInfo=selectedMemberInfos[i];
    final PsiElement member=memberInfo.getMember();
    if (member instanceof PsiClass && Boolean.FALSE.equals(memberInfo.getOverrides())) {
      implementedInterfaces.add((PsiClass)member);
    }
 else     if (member instanceof PsiMethod) {
      delegatedMethods.add((PsiMethod)member);
    }
  }
  new InheritanceToDelegationProcessor(myProject,myClass,dialog.getSelectedTargetClass(),dialog.getFieldName(),dialog.getInnerClassName(),implementedInterfaces.toArray(new PsiClass[implementedInterfaces.size()]),delegatedMethods.toArray(new PsiMethod[delegatedMethods.size()]),dialog.isGenerateGetter(),dialog.isGenerateGetter(),dialog.isPreviewUsages(),new Runnable(){
    public void run(){
      dialog.close(DialogWrapper.CANCEL_EXIT_CODE);
    }
  }
).run(null);
}
