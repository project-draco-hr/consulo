{
  if (LOG.isDebugEnabled()) {
    LOG.debug("enter: propertyChange(" + e + ")");
  }
  if (!FOCUSED_WINDOW_PROPERTY.equals(e.getPropertyName())) {
    throw new IllegalArgumentException("unknown property name: " + e.getPropertyName());
  }
synchronized (myLock) {
    final Window window=(Window)e.getNewValue();
    if (window == null || ApplicationManager.getApplication().isDisposed()) {
      return;
    }
    if (!myWindow2Info.containsKey(window)) {
      myWindow2Info.put(window,new WindowInfo(window,true));
    }
    myFocusedWindow=window;
    final Project project=PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myFocusedWindow));
    for (Iterator i=myFocusedWindows.iterator(); i.hasNext(); ) {
      final Window w=(Window)i.next();
      if (project == DataManager.getInstance().getDataContext(w).getData(DataConstants.PROJECT)) {
        i.remove();
      }
    }
    myFocusedWindows.add(myFocusedWindow);
    final IdeFrameImpl frame;
    if (window instanceof IdeFrameImpl) {
      frame=(IdeFrameImpl)window;
    }
 else {
      frame=(IdeFrameImpl)SwingUtilities.getAncestorOfClass(IdeFrameImpl.class,window);
    }
    if (frame != null) {
      JOptionPane.setRootFrame(frame);
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("exit: propertyChange()");
  }
}
