{
  final Map<String,Pair<Type,Class>> registeredAttribs=getStaticallyRegisteredAttributes(genericInfo);
  final Enumeration introspectedAttributes=parentElementIntrospector.getAttributes();
  while (introspectedAttributes.hasMoreElements()) {
    final String attribName=(String)introspectedAttributes.nextElement();
    if (genericInfo.getAttributeChildDescription(attribName) == null) {
      final String _attribName=attribName.toLowerCase(Locale.US);
      final Pair<Type,Class> types=registeredAttribs.get(_attribName);
      final Type type=types != null ? types.getFirst() : String.class;
      final Class converterClass=types != null ? types.getSecond() : null;
      registerAttribute(registrar,attribName,type,converterClass);
      if (types == null) {
        registeredAttribs.put(_attribName,new Pair<Type,Class>(type,converterClass));
      }
    }
  }
  for (  XmlAttribute xmlAttribute : xmlTag.getAttributes()) {
    final String existingAttribName=xmlAttribute.getName();
    if (genericInfo.getAttributeChildDescription(existingAttribName) == null) {
      final Pair<Type,Class> pair=registeredAttribs.get(existingAttribName.toLowerCase(Locale.US));
      if (pair != null) {
        registerAttribute(registrar,existingAttribName,pair.getFirst(),pair.getSecond());
      }
    }
  }
}
