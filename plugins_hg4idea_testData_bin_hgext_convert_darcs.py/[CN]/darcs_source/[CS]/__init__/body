def __init__(self, ui, path, rev=None):
    converter_source.__init__(self, ui, path, rev=rev)
    commandline.__init__(self, ui, 'darcs')
    if (not os.path.exists(os.path.join(path, '_darcs', 'inventories'))):
        raise NoRepo((_('%s does not look like a darcs repository') % path))
    if (not os.path.exists(os.path.join(path, '_darcs'))):
        raise NoRepo((_('%s does not look like a darcs repository') % path))
    checktool('darcs')
    version = self.run0('--version').splitlines()[0].strip()
    if (version < '2.1'):
        raise util.Abort((_('darcs version 2.1 or newer needed (found %r)') % version))
    if (ElementTree is None):
        raise util.Abort(_('Python ElementTree module is not available'))
    self.path = os.path.realpath(path)
    self.lastrev = None
    self.changes = {}
    self.parents = {}
    self.tags = {}
