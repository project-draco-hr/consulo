{
  try {
    ProjectConversionAction action=getAction(projectFilePath);
    if (action == ProjectConversionAction.DO_NOTHING) {
      return ProjectConversionResult.OK;
    }
    final ProjectConverter converter=CompositeConverterFactory.getCompositeProjectConverter(projectFilePath);
    if (converter == null) {
      return ProjectConversionResult.OK;
    }
    converter.prepare();
    if (!converter.isConversionNeeded()) {
      return ProjectConversionResult.OK;
    }
    if (action == ProjectConversionAction.LEAVE_UNCONVERTED) {
      return new ProjectConversionResult(converter.createHelper());
    }
    String projectName=FileUtil.getNameWithoutExtension(new File(projectFilePath));
    OldProjectConversionWizard wizard=new OldProjectConversionWizard(converter,projectName,action == ProjectConversionAction.FORCE_CONVERSION);
    wizard.show();
    if (!wizard.isOK()) {
      return ProjectConversionResult.DO_NOT_OPEN;
    }
    if (wizard.isConverted()) {
      return ProjectConversionResult.OK;
    }
    return new ProjectConversionResult(converter.createHelper());
  }
 catch (  IOException e) {
    Messages.showErrorDialog(IdeBundle.message("error.cannot.load.project",e.getMessage()),IdeBundle.message("title.cannot.convert.project"));
    return ProjectConversionResult.DO_NOT_OPEN;
  }
catch (  QualifiedJDomException e) {
    LOG.info(e);
    Messages.showErrorDialog(IdeBundle.message("error.some.file.is.corrupted.message",e.getFilePath(),e.getCause().getMessage()),IdeBundle.message("title.cannot.convert.project"));
    return ProjectConversionResult.DO_NOT_OPEN;
  }
}
