{
  if (!hasVarargParameter(method)) {
    return;
  }
  final PsiClass aClass=method.getContainingClass();
  if (aClass == null) {
    return;
  }
  final String methodName=method.getName();
  final PsiMethod[] sameNameMethods;
  if (method.isConstructor()) {
    sameNameMethods=aClass.findMethodsByName(methodName,false);
  }
 else {
    sameNameMethods=aClass.findMethodsByName(methodName,false);
  }
  for (  PsiMethod sameNameMethod : sameNameMethods) {
    if (!sameNameMethod.equals(method)) {
      registerMethodError(method);
    }
  }
}
