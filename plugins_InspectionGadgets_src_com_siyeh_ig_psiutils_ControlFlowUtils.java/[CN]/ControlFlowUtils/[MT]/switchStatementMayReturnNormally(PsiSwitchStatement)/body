{
  if (statementIsBreakTarget(switchStatement)) {
    return true;
  }
  final PsiCodeBlock body=switchStatement.getBody();
  if (body == null) {
    return true;
  }
  final PsiStatement[] statements=body.getStatements();
  if (statements.length == 0) {
    return true;
  }
  int numCases=0;
  boolean hasDefaultCase=false;
  for (  PsiStatement statement : statements) {
    if (statement instanceof PsiSwitchLabelStatement) {
      final PsiSwitchLabelStatement switchLabelStatement=(PsiSwitchLabelStatement)statement;
      if (switchLabelStatement.isDefaultCase()) {
        hasDefaultCase=true;
      }
    }
    if (statement instanceof PsiBreakStatement) {
      final PsiBreakStatement breakStatement=(PsiBreakStatement)statement;
      if (breakStatement.getLabelIdentifier() == null) {
        return true;
      }
    }
    numCases++;
  }
  final boolean isEnum=isEnumSwitch(switchStatement);
  if (!hasDefaultCase && !isEnum) {
    return true;
  }
  if (!hasDefaultCase && isEnum) {
    final PsiExpression expression=switchStatement.getExpression();
    if (expression == null) {
      return true;
    }
    final PsiClassType type=(PsiClassType)expression.getType();
    if (type == null) {
      return true;
    }
    final PsiClass aClass=type.resolve();
    if (aClass == null) {
      return true;
    }
    final PsiField[] fields=aClass.getFields();
    int numEnums=0;
    for (    final PsiField field : fields) {
      final PsiType fieldType=field.getType();
      if (fieldType.equals(type)) {
        numEnums++;
      }
    }
    if (numEnums != numCases) {
      return true;
    }
  }
  return statementMayCompleteNormally(statements[statements.length - 1]);
}
