{
  if (e.getMessage() != null) {
    myProgress.addMessage(MessageCategory.ERROR,e.getMessage());
  }
  if (e instanceof ProcessCanceledException) {
    myProgress.addMessage(MessageCategory.INFORMATION,DebuggerBundle.message("error.operation.canceled"));
    return;
  }
  if (e instanceof UnsupportedOperationException) {
    myProgress.addMessage(MessageCategory.ERROR,DebuggerBundle.message("error.operation.not.supported.by.vm"));
  }
 else   if (e instanceof NoClassDefFoundError) {
    myProgress.addMessage(MessageCategory.ERROR,DebuggerBundle.message("error.class.def.not.found",e.getLocalizedMessage()));
  }
 else   if (e instanceof VerifyError) {
    myProgress.addMessage(MessageCategory.ERROR,DebuggerBundle.message("error.verification.error",e.getLocalizedMessage()));
  }
 else   if (e instanceof UnsupportedClassVersionError) {
    myProgress.addMessage(MessageCategory.ERROR,DebuggerBundle.message("error.unsupported.class.version",e.getLocalizedMessage()));
  }
 else   if (e instanceof ClassFormatError) {
    myProgress.addMessage(MessageCategory.ERROR,DebuggerBundle.message("error.class.format.error",e.getLocalizedMessage()));
  }
 else   if (e instanceof ClassCircularityError) {
    myProgress.addMessage(MessageCategory.ERROR,DebuggerBundle.message("error.class.circularity.error",e.getLocalizedMessage()));
  }
 else {
    myProgress.addMessage(MessageCategory.ERROR,DebuggerBundle.message("error.exception.while.reloading",e.getClass().getName(),e.getLocalizedMessage()));
  }
}
