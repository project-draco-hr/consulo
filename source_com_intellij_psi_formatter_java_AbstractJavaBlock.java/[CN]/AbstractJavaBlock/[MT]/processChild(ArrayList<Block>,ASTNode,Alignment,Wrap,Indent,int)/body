{
  if (child.getElementType() == ElementType.CLASS_KEYWORD || child.getElementType() == ElementType.INTERFACE_KEYWORD) {
    myIsAfterClassKeyword=true;
  }
  if (child.getElementType() == ElementType.METHOD_CALL_EXPRESSION) {
    result.add(createMethodCallExpressiobBlock(child,arrangeChildWrap(child,defaultWrap),arrangeChildAlignment(child,defaultAlignment)));
  }
 else   if (child.getElementType() == ElementType.LBRACE && myNode.getElementType() == ElementType.ARRAY_INITIALIZER_EXPRESSION) {
    final Wrap wrap=Wrap.createWrap(getWrapType(mySettings.ARRAY_INITIALIZER_WRAP),false);
    child=processParenBlock(ElementType.LBRACE,ElementType.RBRACE,result,child,WrappingStrategy.createDoNotWrapCommaStrategy(wrap),mySettings.ALIGN_MULTILINE_ARRAY_INITIALIZER_EXPRESSION);
  }
 else   if (child.getElementType() == ElementType.LPARENTH && myNode.getElementType() == ElementType.EXPRESSION_LIST) {
    final Wrap wrap=Wrap.createWrap(getWrapType(mySettings.CALL_PARAMETERS_WRAP),false);
    if (mySettings.PREFER_PARAMETERS_WRAP) {
      wrap.ignoreParentWraps();
    }
    child=processParenBlock(result,child,WrappingStrategy.createDoNotWrapCommaStrategy(wrap),mySettings.ALIGN_MULTILINE_PARAMETERS_IN_CALLS);
  }
 else   if (child.getElementType() == ElementType.LPARENTH && myNode.getElementType() == ElementType.PARAMETER_LIST) {
    final Wrap wrap=Wrap.createWrap(getWrapType(mySettings.METHOD_PARAMETERS_WRAP),false);
    child=processParenBlock(result,child,WrappingStrategy.createDoNotWrapCommaStrategy(wrap),mySettings.ALIGN_MULTILINE_PARAMETERS);
  }
 else   if (child.getElementType() == ElementType.LPARENTH && myNode.getElementType() == ElementType.ANNOTATION_PARAMETER_LIST) {
    final Wrap wrap=Wrap.createWrap(getWrapType(mySettings.CALL_PARAMETERS_WRAP),false);
    child=processParenBlock(result,child,WrappingStrategy.createDoNotWrapCommaStrategy(wrap),mySettings.ALIGN_MULTILINE_PARAMETERS_IN_CALLS);
  }
 else   if (child.getElementType() == ElementType.LPARENTH && myNode.getElementType() == ElementType.PARENTH_EXPRESSION) {
    child=processParenBlock(result,child,WrappingStrategy.DO_NOT_WRAP,mySettings.ALIGN_MULTILINE_PARENTHESIZED_EXPRESSION);
  }
 else   if (child.getElementType() == ElementType.ENUM_CONSTANT && myNode instanceof ClassElement) {
    child=processEnumBlock(result,child,((ClassElement)myNode).findEnumConstantListDelimiterPlace());
  }
 else   if (mySettings.TERNARY_OPERATION_SIGNS_ON_NEXT_LINE && isTernaryOperationSign(child)) {
    child=processTernaryOperationRange(result,child,defaultAlignment,defaultWrap,childIndent);
  }
 else   if (child.getElementType() == ElementType.FIELD) {
    child=processField(result,child,defaultAlignment,defaultWrap,childIndent);
  }
 else {
    final Block block=createJavaBlock(child,mySettings,childIndent,arrangeChildWrap(child,defaultWrap),arrangeChildAlignment(child,defaultAlignment),childOffset);
    if (child.getElementType() == ElementType.MODIFIER_LIST && containsAnnotations(child)) {
      myAnnotationWrap=Wrap.createWrap(getWrapType(getAnnotationWrapType()),true);
    }
    if (block instanceof AbstractJavaBlock) {
      final AbstractJavaBlock javaBlock=((AbstractJavaBlock)block);
      if (myNode.getElementType() == ElementType.METHOD_CALL_EXPRESSION && child.getElementType() == ElementType.REFERENCE_EXPRESSION) {
        javaBlock.setReservedWrap(getReservedWrap());
      }
 else       if (myNode.getElementType() == ElementType.REFERENCE_EXPRESSION && child.getElementType() == ElementType.METHOD_CALL_EXPRESSION) {
        javaBlock.setReservedWrap(getReservedWrap());
      }
 else       if (myNode.getElementType() == ElementType.BINARY_EXPRESSION) {
        javaBlock.setReservedWrap(defaultWrap);
      }
 else       if (child.getElementType() == ElementType.MODIFIER_LIST) {
        javaBlock.setReservedWrap(myAnnotationWrap);
        if (!lastChildIsAnnotation(child)) {
          myAnnotationWrap=null;
        }
      }
    }
    result.add(block);
  }
  return child;
}
