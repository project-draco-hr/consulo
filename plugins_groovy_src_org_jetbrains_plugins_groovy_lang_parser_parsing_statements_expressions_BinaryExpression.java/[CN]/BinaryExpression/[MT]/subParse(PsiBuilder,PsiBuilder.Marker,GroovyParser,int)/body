{
  builder.advanceLexer();
  ParserUtils.getToken(builder,mNLS);
  if (!parseNext(builder,parser,order)) {
    builder.error(GroovyBundle.message("expression.expected"));
  }
  PsiBuilder.Marker newMarker=marker.precede();
  marker.done(myCompositeType);
  if (myOpTokens.contains(builder.getTokenType())) {
    subParse(builder,newMarker,parser,order);
  }
 else {
    newMarker.drop();
  }
}
