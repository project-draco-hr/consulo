{
  if (aClass.isInterface() || aClass.isEnum() || aClass.isAnnotationType()|| aClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  if (!ClassUtils.isSubclass(aClass,"junit.framework.TestCase")) {
    return;
  }
  boolean hasConstructor=false;
  boolean hasNoArgConstructor=false;
  boolean hasStringConstructor=false;
  final PsiMethod[] constructors=aClass.getConstructors();
  if (constructors == null) {
    return;
  }
  for (  final PsiMethod constructor : constructors) {
    hasConstructor=true;
    if (!constructor.hasModifierProperty(PsiModifier.PUBLIC)) {
      continue;
    }
    final PsiParameterList parameterList=constructor.getParameterList();
    final PsiParameter[] parameters=parameterList.getParameters();
    if (parameters.length == 0) {
      hasNoArgConstructor=true;
    }
    if (parameters.length == 1) {
      final PsiType type=parameters[0].getType();
      if (TypeUtils.typeEquals("java.lang.String",type)) {
        hasStringConstructor=true;
      }
    }
  }
  if (!hasConstructor) {
    return;
  }
  if (hasNoArgConstructor || hasStringConstructor) {
    return;
  }
  registerClassError(aClass);
}
