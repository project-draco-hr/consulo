{
  if (class1 instanceof PsiTypeParameter) {
    final PsiClass[] superClasses=class1.getSupers();
    for (    PsiClass superClass : superClasses) {
      if (!existsMutualSubclass(superClass,class2))       return false;
    }
    return true;
  }
 else   if (class2 instanceof PsiTypeParameter) {
    return existsMutualSubclass(class2,class1);
  }
  final String className=class1.getQualifiedName();
  if ("java.lang.Object".equals(className)) {
    return true;
  }
  final String class2Name=class2.getQualifiedName();
  if ("java.lang.Object".equals(class2Name)) {
    return true;
  }
  if (class1.isInheritor(class2,true) || class2.isInheritor(class1,true)) {
    return true;
  }
  final MutualSubclassProcessor processor=new MutualSubclassProcessor(class1,class2);
  return processor.hasMutualSubclass();
}
