{
  if (isDisposed())   return;
  enterBulkChangeUpdateBlock();
  if (getChangesCount() == 0)   return;
  LineRange lineRange=DiffUtil.getAffectedLineRange(e);
  int shift=DiffUtil.countLinesShift(e);
  List<S> corruptedStates=ContainerUtil.newSmartList();
  for (int index=0; index < getChangesCount(); index++) {
    S oldState=processDocumentChange(index,lineRange.start,lineRange.end,shift);
    if (oldState == null)     continue;
    invalidateHighlighters(index);
    if (!isInsideCommand())     corruptedStates.add(oldState);
  }
  if (myUndoManager != null && !corruptedStates.isEmpty()) {
    myUndoManager.undoableActionPerformed(new MyUndoableAction(MergeModelBase.this,corruptedStates,true));
  }
}
