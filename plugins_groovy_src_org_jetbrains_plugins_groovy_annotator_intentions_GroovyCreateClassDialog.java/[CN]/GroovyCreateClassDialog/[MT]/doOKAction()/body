{
  final String packageName=getPackageName();
  final Ref<String> errorStringRef=new Ref<String>();
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    public void run(){
      try {
        final PsiDirectory baseDir=myModule == null ? null : PackageUtil.findPossiblePackageDirectoryInModule(myModule,packageName);
        myTargetDirectory=myModule == null ? null : PackageUtil.findOrCreateDirectoryForPackage(myModule,packageName,baseDir,true);
        if (myTargetDirectory == null) {
          errorStringRef.set("");
          return;
        }
        errorStringRef.set(RefactoringMessageUtil.checkCanCreateClass(myTargetDirectory,getClassName()));
      }
 catch (      IncorrectOperationException e) {
        errorStringRef.set(e.getMessage());
      }
    }
  }
,GroovyInspectionBundle.message("create.directory.command"),null);
  if (errorStringRef.get() != null) {
    if (errorStringRef.get().length() > 0) {
      Messages.showMessageDialog(myProject,errorStringRef.get(),CommonBundle.getErrorTitle(),Messages.getErrorIcon());
    }
    return;
  }
  super.doOKAction();
}
