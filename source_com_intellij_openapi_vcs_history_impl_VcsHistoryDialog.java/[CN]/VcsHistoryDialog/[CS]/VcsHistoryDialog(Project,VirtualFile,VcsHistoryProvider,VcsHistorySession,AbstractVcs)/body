{
  super(project,true);
  myProject=project;
  myActiveVcs=vcs;
  myRevisions=new ArrayList<VcsFileRevision>();
  myFile=file;
  myHelpId=vcsHistoryProvider.getHelpId();
  myList=new TableView(new ListTableModel(createColumns(vcsHistoryProvider.getRevisionColumns())));
  ((SortableColumnModel)myList.getModel()).setSortable(false);
  myDiffPanel=DiffManager.getInstance().createDiffPanel(getWindow(),myProject);
  myRevisions.addAll(session.getRevisionList());
  myRevisions.add(new CurrentRevision(file,session.getCurrentRevisionNumber()));
  Collections.sort((List)myRevisions,new Comparator<VcsFileRevision>(){
    public int compare(    VcsFileRevision rev1,    VcsFileRevision rev2){
      return VcsHistoryUtil.compare(rev1,rev2);
    }
  }
);
  Collections.reverse(myRevisions);
  myContentFileType=FileTypeManager.getInstance().getFileTypeByFile(file);
  updateRevisionsList();
  mySplitter=new Splitter(true,getVcsConfiguration().FILE_HISTORY_DIALOG_SPLITTER_PROPORTION);
  mySplitter.setFirstComponent(myDiffPanel.getComponent());
  mySplitter.setSecondComponent(createBottomPanel());
  mySplitter.addPropertyChangeListener(new PropertyChangeListener(){
    public void propertyChange(    PropertyChangeEvent evt){
      if (Splitter.PROP_PROPORTION.equals(evt.getPropertyName())) {
        getVcsConfiguration().FILE_HISTORY_DIALOG_SPLITTER_PROPORTION=((Float)evt.getNewValue()).floatValue();
      }
    }
  }
);
  myList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      if (myList.getSelectedRowCount() == 1) {
        myComments.setText(myRevisions.get(myList.getSelectedRow()).getCommitMessage());
        myComments.setCaretPosition(0);
      }
 else {
        myComments.setText("");
      }
      updateDiff();
    }
  }
);
  myChangesOnlyCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateRevisionsList();
    }
  }
);
  init();
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      myList.getSelectionModel().addSelectionInterval(0,0);
    }
  }
);
  setTitle("History for File " + file.getName());
}
