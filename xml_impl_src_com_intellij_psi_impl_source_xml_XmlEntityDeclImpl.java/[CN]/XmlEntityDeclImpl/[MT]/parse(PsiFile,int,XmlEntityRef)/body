{
  PsiElement dependsOnElement=getValueElement(baseFile);
  String value=null;
  if (dependsOnElement instanceof XmlAttributeValue) {
    XmlAttributeValue attributeValue=(XmlAttributeValue)dependsOnElement;
    value=attributeValue.getValue();
  }
 else   if (dependsOnElement instanceof PsiFile) {
    PsiFile file=(PsiFile)dependsOnElement;
    value=file.getText();
  }
  if (value == null)   return null;
  final FileElement holderElement=DummyHolderFactory.createHolder(originalElement.getManager(),originalElement).getTreeElement();
  Lexer lexer=getLexer(context,value);
  final XmlParsingContext parsingContext=new XmlParsingContext(holderElement.getCharTable());
  final CompositeElement element=ASTFactory.composite(XML_ELEMENT_DECL);
  holderElement.rawAddChildren(element);
switch (context) {
default :
    LOG.error("Entity: " + getName() + " context: "+ context);
  return null;
case CONTEXT_ELEMENT_CONTENT_SPEC:
{
  parsingContext.getXmlParsing().parseElementContentSpec(element,lexer);
  final PsiElement generated=SourceTreeToPsiMap.treeElementToPsi(element).getFirstChild().getFirstChild();
  setDependsOnElement(generated,dependsOnElement);
  return setOriginalElement(generated,originalElement);
}
case CONTEXT_ATTRIBUTE_SPEC:
{
parsingContext.getXmlParsing().parseAttributeContentSpec(element,lexer);
final PsiElement generated=SourceTreeToPsiMap.treeElementToPsi(element).getFirstChild();
setDependsOnElement(generated,dependsOnElement);
return setOriginalElement(generated,originalElement);
}
case CONTEXT_ATTLIST_SPEC:
{
parsingContext.getXmlParsing().parseAttlistContent(element,lexer);
final PsiElement generated=SourceTreeToPsiMap.treeElementToPsi(element).getFirstChild();
setDependsOnElement(generated,dependsOnElement);
return setOriginalElement(generated,originalElement);
}
case CONTEXT_ATTR_VALUE:
{
parsingContext.getXmlParsing().parseAttrValue(element,lexer);
final PsiElement generated=SourceTreeToPsiMap.treeElementToPsi(element).getFirstChild();
setDependsOnElement(generated,dependsOnElement);
return setOriginalElement(generated,originalElement);
}
case CONTEXT_ENTITY_DECL_CONTENT:
{
parsingContext.getXmlParsing().parseEntityDeclContent(element,lexer);
final PsiElement generated=SourceTreeToPsiMap.treeElementToPsi(element).getFirstChild();
setDependsOnElement(generated,dependsOnElement);
return setOriginalElement(generated,originalElement);
}
case CONTEXT_GENERIC_XML:
{
Set<String> names=new HashSet<String>();
{
PsiElement parent=originalElement;
while (parent != null) {
if (parent instanceof XmlTag) {
names.add(((XmlTag)parent).getName());
}
parent=parent.getParent();
}
}
parsingContext.getXmlParsing().parseGenericXml(lexer,element,names);
final PsiElement generated=SourceTreeToPsiMap.treeElementToPsi(element).getFirstChild();
setDependsOnElement(generated,dependsOnElement);
return setOriginalElement(generated,originalElement);
}
case CONTEXT_ENUMERATED_TYPE:
{
parsingContext.getXmlParsing().parseEnumeratedTypeContent(element,lexer);
final PsiElement generated=SourceTreeToPsiMap.treeElementToPsi(element).getFirstChild();
setDependsOnElement(generated,dependsOnElement);
return setOriginalElement(generated,originalElement);
}
}
}
