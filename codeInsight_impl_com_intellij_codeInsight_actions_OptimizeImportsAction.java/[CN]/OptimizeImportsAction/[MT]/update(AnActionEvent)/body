{
  Presentation presentation=event.getPresentation();
  DataContext dataContext=event.getDataContext();
  Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  if (project == null) {
    presentation.setEnabled(false);
    return;
  }
  final VirtualFile[] files=(VirtualFile[])dataContext.getData(DataConstants.VIRTUAL_FILE_ARRAY);
  Editor editor=PlatformDataKeys.EDITOR.getData(dataContext);
  if (editor != null) {
    PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
    if (file == null || !isOptimizeImportsAvailable(file)) {
      presentation.setEnabled(false);
      return;
    }
  }
 else   if (files != null && ReformatCodeAction.areFiles(files)) {
    for (    VirtualFile virtualFile : files) {
      PsiFile file=PsiManager.getInstance(project).findFile(virtualFile);
      if (file == null || !isOptimizeImportsAvailable(file)) {
        presentation.setEnabled(false);
        return;
      }
    }
  }
 else   if (files != null && files.length == 1) {
  }
 else   if (dataContext.getData(DataConstants.MODULE_CONTEXT) == null && dataContext.getData(DataConstants.PROJECT_CONTEXT) == null) {
    PsiElement element=LangDataKeys.PSI_ELEMENT.getData(dataContext);
    if (element == null) {
      presentation.setEnabled(false);
      return;
    }
    if (!(element instanceof PsiDirectory)) {
      PsiFile file=element.getContainingFile();
      if (file == null || !isOptimizeImportsAvailable(file)) {
        presentation.setEnabled(false);
        return;
      }
    }
 else {
      PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage(((PsiDirectory)element));
      if (aPackage == null) {
        presentation.setEnabled(false);
        return;
      }
    }
  }
  presentation.setEnabled(true);
}
