{
  PsiElement host=super.restoreElement();
  if (host == null)   return null;
  Segment segment=myPsiFileRangeInHostElement.getRange();
  if (segment == null)   return null;
  final TextRange rangeInHostElement=TextRange.create(segment);
  final Ref<PsiElement> result=new Ref<PsiElement>();
  InjectedLanguageUtil.enumerate(host,host.getContainingFile(),new PsiLanguageInjectionHost.InjectedPsiVisitor(){
    @Override public void visit(    @NotNull PsiFile injectedPsi,    @NotNull List<PsiLanguageInjectionHost.Shred> places){
      if (result.get() != null)       return;
      TextRange hostRange=InjectedLanguageManager.getInstance(getProject()).injectedToHost(injectedPsi,new TextRange(0,injectedPsi.getTextLength()));
      if (hostRange.contains(rangeInHostElement)) {
        TextRange rangeInside=rangeInHostElement.shiftRight(-hostRange.getStartOffset());
        PsiElement element=findElementInside(injectedPsi,rangeInside.getStartOffset(),rangeInside.getEndOffset(),myClass);
        result.set(element);
      }
    }
  }
,false);
  return result.get();
}
