{
  final Ref<Boolean> result=new Ref<Boolean>(Boolean.FALSE);
  element.accept(new PsiRecursiveElementVisitor(){
    public void visitReferenceExpression(    final PsiReferenceExpression expression){
      super.visitReferenceElement(expression);
      final PsiElement psiElement=expression.resolve();
      if (psiElement == null) {
        return;
      }
      if (psiElement instanceof PsiField) {
        PsiField field=(PsiField)psiElement;
        if (field.getContainingClass().equals(classToBind)) {
          if (Utils.isBoundField(rootContainer,field.getName())) {
            result.set(Boolean.TRUE);
          }
        }
      }
 else       if (psiElement instanceof PsiMethod) {
        PsiMethod method=(PsiMethod)psiElement;
        if (method.isConstructor()) {
          if (method.getContainingClass() == classToBind) {
            if (callsThisConstructor != null) {
              callsThisConstructor.set(Boolean.TRUE);
            }
          }
 else           if (method.getContainingClass() != classToBind.getSuperClass()) {
            result.set(Boolean.TRUE);
          }
        }
 else {
          result.set(Boolean.TRUE);
        }
      }
    }
  }
);
  return result.get().booleanValue();
}
