{
  String variable=getVariable(component,component2variable,class2variableIndex,aClass);
  final LwIntrospectedProperty[] introspectedProperties=component.getAssignedIntrospectedProperties();
  for (  final LwIntrospectedProperty property : introspectedProperties) {
    if (property instanceof LwIntroComponentProperty) {
      String componentId=(String)component.getPropertyValue(property);
      if (componentId != null && componentId.length() > 0) {
        LwComponent target=id2component.get(componentId);
        if (target != null) {
          String targetVariable=getVariable(target,component2variable,class2variableIndex,aClass);
          startMethodCall(variable,property.getWriteMethodName());
          pushVar(targetVariable);
          endMethod();
        }
      }
    }
  }
  if (component instanceof LwContainer) {
    final LwContainer container=(LwContainer)component;
    for (int i=0; i < container.getComponentCount(); i++) {
      generateComponentReferenceProperties((LwComponent)container.getComponent(i),component2variable,class2variableIndex,id2component,aClass);
    }
  }
}
