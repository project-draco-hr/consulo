{
  JavaLexer oldTextLexer=new JavaLexer(LanguageLevel.HIGHEST);
  JavaLexer newTextLexer=new JavaLexer(LanguageLevel.HIGHEST);
  final String oldBuffer=classToBind.getText();
  final String newBuffer=newClass.getText();
  oldTextLexer.start(oldBuffer,0,oldBuffer.length(),0);
  newTextLexer.start(newBuffer,0,newBuffer.length(),0);
  while (true) {
    IElementType oldLexem=oldTextLexer.getTokenType();
    IElementType newLexem=newTextLexer.getTokenType();
    if (oldLexem == null || newLexem == null) {
      return oldLexem == null && newLexem == null;
    }
    if (oldLexem != newLexem) {
      return false;
    }
    if (oldLexem != TokenType.WHITE_SPACE && oldLexem != JavaTokenType.DOC_COMMENT) {
      int oldStart=oldTextLexer.getTokenStart();
      int newStart=newTextLexer.getTokenStart();
      int oldLength=oldTextLexer.getTokenEnd() - oldTextLexer.getTokenStart();
      int newLength=newTextLexer.getTokenEnd() - newTextLexer.getTokenStart();
      if (oldLength != newLength) {
        return false;
      }
      for (int i=0; i < oldLength; i++) {
        if (oldBuffer.charAt(oldStart + i) != newBuffer.charAt(newStart + i)) {
          return false;
        }
      }
    }
    oldTextLexer.advance();
    newTextLexer.advance();
  }
}
