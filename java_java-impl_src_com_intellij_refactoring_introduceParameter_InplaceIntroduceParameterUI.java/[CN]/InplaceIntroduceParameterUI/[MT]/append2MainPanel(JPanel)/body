{
  final GridBagConstraints gc=new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0);
  gc.insets=new Insets(0,5,0,0);
  gc.gridwidth=1;
  gc.fill=GridBagConstraints.NONE;
  if (myOccurrences.length > 1 && !myIsInvokedOnDeclaration) {
    gc.gridy++;
    createOccurrencesCb(gc,myWholePanel,myOccurrences.length);
  }
  gc.gridy++;
  gc.insets.left=5;
  createDelegateCb(gc,myWholePanel);
  final JavaRefactoringSettings settings=JavaRefactoringSettings.getInstance();
  final JPanel rightPanel=new JPanel(new GridBagLayout());
  final GridBagConstraints rgc=new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,0,0,5),0,0);
  createLocalVariablePanel(rgc,rightPanel,settings);
  createRemoveParamsPanel(rgc,rightPanel);
  if (Util.anyFieldsWithGettersPresent(myClassMemberRefs)) {
    rgc.gridy++;
    rightPanel.add(createReplaceFieldsWithGettersPanel(),rgc);
  }
  gc.gridx=1;
  gc.gridheight=myCbReplaceAllOccurences != null ? 3 : 2;
  gc.gridy=1;
  myWholePanel.add(rightPanel,gc);
  if (!myMustBeFinal) {
    myFinalCb=new NonFocusableCheckBox("Declare final");
    myFinalCb.setMnemonic('f');
    myFinalCb.setSelected(hasFinalModifier());
    final FinalListener finalListener=new FinalListener(myEditor);
    myFinalCb.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        new WriteCommandAction(myProject,IntroduceParameterHandler.REFACTORING_NAME,IntroduceParameterHandler.REFACTORING_NAME){
          @Override protected void run(          Result result) throws Throwable {
            PsiDocumentManager.getInstance(myProject).commitDocument(myEditor.getDocument());
            finalListener.perform(myFinalCb.isSelected(),getParameter());
          }
        }
.execute();
      }
    }
);
    myWholePanel.add(myFinalCb,new GridBagConstraints(0,myCbReplaceAllOccurences == null ? 2 : 3,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,5,2,5),0,0));
  }
}
