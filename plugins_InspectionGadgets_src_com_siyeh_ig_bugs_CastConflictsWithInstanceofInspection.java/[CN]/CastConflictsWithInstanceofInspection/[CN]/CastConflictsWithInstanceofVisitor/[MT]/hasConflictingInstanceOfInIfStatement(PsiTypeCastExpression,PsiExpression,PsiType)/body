{
  boolean hasConflictingInstanceof=false;
  boolean hasConfirmingInstanceof=false;
  PsiIfStatement currentStatement=PsiTreeUtil.getParentOfType(expression,PsiIfStatement.class);
  while (currentStatement != null) {
    if (!isInElse(expression,currentStatement)) {
      final PsiExpression condition=currentStatement.getCondition();
      if (condition instanceof PsiInstanceOfExpression) {
        final PsiInstanceOfExpression instanceOfCondition=(PsiInstanceOfExpression)condition;
        if (isConflicting(instanceOfCondition,operand,castType)) {
          hasConflictingInstanceof=true;
        }
 else         if (isConfirming(instanceOfCondition,operand,castType)) {
          hasConfirmingInstanceof=true;
        }
      }
    }
    currentStatement=PsiTreeUtil.getParentOfType(currentStatement,PsiIfStatement.class);
  }
  return hasConflictingInstanceof && !hasConfirmingInstanceof;
}
