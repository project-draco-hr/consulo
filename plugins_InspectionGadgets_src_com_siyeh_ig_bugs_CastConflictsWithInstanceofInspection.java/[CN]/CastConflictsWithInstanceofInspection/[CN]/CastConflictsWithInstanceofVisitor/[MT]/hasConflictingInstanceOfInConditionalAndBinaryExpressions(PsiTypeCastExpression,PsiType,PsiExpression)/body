{
  boolean hasConflictingInstanceof=false;
  boolean hasConfirmingInstanceof=false;
  PsiExpression surroundingExpression=expression;
  while (true) {
    surroundingExpression=PsiTreeUtil.getParentOfType(surroundingExpression,PsiConditionalExpression.class,PsiBinaryExpression.class);
    if (surroundingExpression == null) {
      break;
    }
    final PsiExpression condition;
    if (surroundingExpression instanceof PsiConditionalExpression) {
      final PsiConditionalExpression conditionalExpression=(PsiConditionalExpression)surroundingExpression;
      if (isInElse(expression,conditionalExpression)) {
        continue;
      }
      condition=conditionalExpression.getCondition();
    }
 else {
      final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)surroundingExpression;
      final PsiJavaToken sign=binaryExpression.getOperationSign();
      final IElementType tokenType=sign.getTokenType();
      PsiExpression lhs=binaryExpression.getLOperand();
      lhs=ParenthesesUtils.stripParentheses(lhs);
      if (tokenType == JavaTokenType.ANDAND) {
        condition=lhs;
      }
 else       if (tokenType == JavaTokenType.OROR) {
        if (!(lhs instanceof PsiPrefixExpression)) {
          continue;
        }
        final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)lhs;
        final PsiJavaToken prefixSign=prefixExpression.getOperationSign();
        if (prefixSign.getTokenType() != JavaTokenType.EXCL) {
          continue;
        }
        condition=ParenthesesUtils.stripParentheses(prefixExpression.getOperand());
      }
 else {
        continue;
      }
    }
    if (!(condition instanceof PsiInstanceOfExpression)) {
      continue;
    }
    final PsiInstanceOfExpression instanceOfCondition=(PsiInstanceOfExpression)condition;
    if (isConflicting(instanceOfCondition,operand,castType)) {
      hasConflictingInstanceof=true;
    }
 else     if (isConfirming(instanceOfCondition,operand,castType)) {
      hasConfirmingInstanceof=true;
    }
  }
  return hasConflictingInstanceof && !hasConfirmingInstanceof;
}
