{
  if (domElement == null)   return;
  final java.util.List<DomChildrenDescription> childrenDescriptions=domElement.getGenericInfo().getChildrenDescriptions();
  for (  final DomChildrenDescription description : childrenDescriptions) {
    final JComponent boundComponent=getBoundComponent(description);
    if (boundComponent != null) {
      if (description instanceof DomFixedChildDescription && DomUtil.isGenericValueType(description.getType())) {
        if ((description.getValues(domElement)).size() == 1) {
          final GenericDomValue element=domElement.getManager().createStableValue(new Factory<GenericDomValue>(){
            public GenericDomValue create(){
              return domElement.isValid() ? (GenericDomValue)description.getValues(domElement).get(0) : null;
            }
          }
);
          boolean commitOnEveryChange=commitOnEveryChange(element);
          DomUIControl control;
          if (boundComponent instanceof BigStringComponent) {
            control=new BigStringControl(new DomFixedWrapper(element),commitOnEveryChange);
          }
 else           if (boundComponent instanceof TextFieldWithBrowseButton) {
            control=new PsiClassControl(new DomStringWrapper(element),commitOnEveryChange);
          }
 else           if (boundComponent instanceof JTextComponent) {
            control=new StringControl(new DomStringWrapper(element),commitOnEveryChange);
          }
 else {
            control=DomUIFactory.createControl(element,commitOnEveryChange);
          }
          doBind(control,boundComponent);
        }
 else {
        }
      }
 else       if (description instanceof DomCollectionChildDescription) {
        doBind(DomUIFactory.getDomUIFactory().createCollectionControl(domElement,(DomCollectionChildDescription)description),boundComponent);
      }
    }
  }
  reset();
}
