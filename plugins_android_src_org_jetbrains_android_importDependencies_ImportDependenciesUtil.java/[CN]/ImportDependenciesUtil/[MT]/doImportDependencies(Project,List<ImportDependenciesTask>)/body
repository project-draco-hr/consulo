{
  final ImportDependenciesDialog dialog=new ImportDependenciesDialog(project,tasks);
  dialog.show();
  if (dialog.getExitCode() != DialogWrapper.OK_EXIT_CODE) {
    return;
  }
  final List<ImportDependenciesTask> selectedTasks=dialog.getSelectedTasks();
  final StringBuilder messageBuilder=new StringBuilder();
  boolean failed=false;
  final List<CreateNewModuleTask> createNewModuleTasks=new ArrayList<CreateNewModuleTask>();
  for (  ImportDependenciesTask selectedTask : selectedTasks) {
    final Exception error=selectedTask.perform();
    if (error != null) {
      LOG.info(error);
      if (messageBuilder.length() > 0) {
        messageBuilder.append('\n');
      }
      messageBuilder.append(error.getMessage());
      failed=true;
    }
 else     if (selectedTask instanceof CreateNewModuleTask) {
      createNewModuleTasks.add((CreateNewModuleTask)selectedTask);
    }
  }
  if (createNewModuleTasks.size() > 0) {
    final List<Trinity<String,String,Collection<String>>> sourceRoots=new ArrayList<Trinity<String,String,Collection<String>>>();
    for (    CreateNewModuleTask task : createNewModuleTasks) {
      final String contentRootPath=task.getContentRoot().getPath();
      sourceRoots.addAll(SourcePathsStep.calculateSourceRoots(contentRootPath));
    }
    if (sourceRoots.size() > 0) {
      final ImportSourceRootsDialog sourceRootsDialog=new ImportSourceRootsDialog(project,sourceRoots);
      sourceRootsDialog.show();
      if (sourceRootsDialog.getExitCode() == DialogWrapper.OK_EXIT_CODE) {
        addSourceRoots(project,sourceRootsDialog.getMarkedElements());
      }
    }
  }
  if (failed) {
    Messages.showErrorDialog(project,AndroidBundle.message("android.import.dependencies.error.message.header") + "\n" + messageBuilder.toString(),CommonBundle.getErrorTitle());
  }
}
