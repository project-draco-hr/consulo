{
  DataManager.getInstance().getDataContextFromFocus().doWhenDone(new AsyncResult.Handler<DataContext>(){
    public void run(    DataContext context){
      QuickActionProvider provider=QuickActionProvider.KEY.getData(context);
      if (provider == null)       return;
      List<AnAction> actions=provider.getActions(true);
      if (actions != null && actions.size() > 0) {
        DefaultActionGroup group=new DefaultActionGroup();
        for (        AnAction each : actions) {
          group.add(each);
        }
        boolean firstParent=true;
        Component eachParent=provider.getComponent().getParent();
        while (eachParent != null) {
          if (eachParent instanceof QuickActionProvider) {
            QuickActionProvider eachProvider=(QuickActionProvider)eachParent;
            if (firstParent) {
              group.addSeparator();
              firstParent=false;
            }
            List<AnAction> eachActionList=eachProvider.getActions(false);
            if (eachActionList.size() > 0) {
              group.add(new Group(eachActionList,eachProvider.getName()));
            }
            if (eachProvider.isCycleRoot())             break;
          }
          eachParent=eachParent.getParent();
        }
        JBPopupFactory.getInstance().createActionGroupPopup(null,group,context,JBPopupFactory.ActionSelectionAid.ALPHA_NUMBERING,true,new Runnable(){
          public void run(){
            myActiveProvider=null;
          }
        }
,-1).showInFocusCenter();
      }
    }
  }
);
}
