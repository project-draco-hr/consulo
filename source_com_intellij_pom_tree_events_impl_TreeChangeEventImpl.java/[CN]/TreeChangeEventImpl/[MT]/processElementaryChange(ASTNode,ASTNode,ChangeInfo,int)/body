{
  TreeChange treeChange=myChangedElements.get(parent);
  if (treeChange == null) {
    treeChange=new TreeChangeImpl(parent);
    myChangedElements.put(parent,treeChange);
    insertAtList(parent);
    final int index=depth >= 0 ? depth : getDepth(parent);
    Set<ASTNode> treeElements=index < myOfEqualDepth.size() ? myOfEqualDepth.get(index) : null;
    if (treeElements == null) {
      treeElements=new HashSet<ASTNode>();
      while (index > myOfEqualDepth.size()) {
        myOfEqualDepth.add(new HashSet<ASTNode>());
      }
      myOfEqualDepth.add(index,treeElements);
    }
    treeElements.add(parent);
  }
  treeChange.addChange(element,change);
  if (change.getChangeType() == ChangeInfo.REMOVED) {
    element.putUserData(CharTable.CHAR_TABLE_KEY,myFileElement.getCharTable());
  }
  if (treeChange.isEmpty())   removeAssociatedChanges(parent,depth);
}
