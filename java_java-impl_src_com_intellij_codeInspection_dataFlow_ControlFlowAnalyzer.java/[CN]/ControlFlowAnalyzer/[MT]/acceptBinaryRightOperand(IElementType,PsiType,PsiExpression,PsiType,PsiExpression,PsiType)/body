{
  boolean comparing=op == JavaTokenType.EQEQ || op == JavaTokenType.NE;
  boolean comparingRef=comparing && !TypeConversionUtil.isPrimitiveAndNotNull(lType) && !TypeConversionUtil.isPrimitiveAndNotNull(rType);
  boolean comparingPrimitiveNumeric=comparing && TypeConversionUtil.isPrimitiveAndNotNull(lType) && TypeConversionUtil.isPrimitiveAndNotNull(rType)&& TypeConversionUtil.isNumericType(lType)&& TypeConversionUtil.isNumericType(rType);
  PsiType castType=comparingPrimitiveNumeric ? TypeConversionUtil.isFloatOrDoubleType(lType) ? PsiType.DOUBLE : PsiType.LONG : type;
  if (!comparingRef) {
    generateBoxingUnboxingInstructionFor(lExpr,castType);
  }
  rExpr.accept(this);
  if (!comparingRef) {
    generateBoxingUnboxingInstructionFor(rExpr,castType);
  }
}
