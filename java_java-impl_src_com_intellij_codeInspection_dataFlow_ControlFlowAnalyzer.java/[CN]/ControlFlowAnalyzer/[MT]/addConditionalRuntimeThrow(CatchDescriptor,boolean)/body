{
  pushUnknown();
  final ConditionalGotoInstruction branch=new ConditionalGotoInstruction(-1,false,null);
  addInstruction(branch);
  addInstruction(new EmptyStackInstruction());
  if (forCatch) {
    PsiType type=cd.getLubType();
    boolean isRuntime=InheritanceUtil.isInheritor(type,JAVA_LANG_RUNTIME_EXCEPTION) || ExceptionUtil.isGeneralExceptionType(type);
    boolean isError=InheritanceUtil.isInheritor(type,JAVA_LANG_ERROR) || type.equalsToText(JAVA_LANG_THROWABLE);
    if (isRuntime != isError) {
      addInstruction(new PushInstruction(isRuntime ? myRuntimeException : myError,null));
      addGotoCatch(cd);
    }
 else {
      pushUnknown();
      final ConditionalGotoInstruction branch2=new ConditionalGotoInstruction(-1,false,null);
      addInstruction(branch2);
      addInstruction(new PushInstruction(myError,null));
      addGotoCatch(cd);
      branch2.setOffset(myCurrentFlow.getInstructionCount());
      addInstruction(new PushInstruction(myRuntimeException,null));
      addGotoCatch(cd);
    }
  }
 else {
    addInstruction(new GosubInstruction(cd.getJumpOffset(this)));
    addInstruction(new ReturnInstruction());
  }
  branch.setOffset(myCurrentFlow.getInstructionCount());
}
