{
  if (codeFragment == null)   return null;
  PsiManager manager=codeFragment.getManager();
  GlobalSearchScope scope=codeFragment.getResolveScope();
  myRuntimeException=myFactory.getNotNullFactory().create(PsiType.getJavaLangRuntimeException(manager,scope));
  myError=myFactory.getNotNullFactory().create(PsiType.getJavaLangError(manager,scope));
  myFields=new HashSet<DfaVariableValue>();
  myCatchStack=new Stack<CatchDescriptor>();
  myPassNumber=1;
  myPass1Flow=new ControlFlow(myFactory);
  myCurrentFlow=myPass1Flow;
  try {
    codeFragment.accept(this);
  }
 catch (  CannotAnalyzeException e) {
    return null;
  }
  myPassNumber=2;
  final ControlFlow pass2Flow=new ControlFlow(myFactory);
  myCurrentFlow=pass2Flow;
  codeFragment.accept(this);
  pass2Flow.setFields(myFields.toArray(new DfaVariableValue[myFields.size()]));
  if (myPass1Flow.getInstructionCount() != pass2Flow.getInstructionCount()) {
    LOG.error(Arrays.toString(myPass1Flow.getInstructions()) + "!=\n" + Arrays.toString(pass2Flow.getInstructions()));
  }
  addInstruction(new ReturnInstruction());
  return pass2Flow;
}
