{
  if (!element.getLanguage().isKindOf(JavaLanguage.INSTANCE))   return false;
  if (!PsiUtil.getLanguageLevel(element).isAtLeast(LanguageLevel.JDK_1_7))   return false;
  final PsiLocalVariable variable=PsiTreeUtil.getParentOfType(element,PsiLocalVariable.class);
  if (variable == null)   return false;
  final PsiExpression initializer=variable.getInitializer();
  if (initializer == null)   return false;
  final PsiElement declaration=variable.getParent();
  if (!(declaration instanceof PsiDeclarationStatement))   return false;
  final PsiElement codeBlock=declaration.getParent();
  if (!(codeBlock instanceof PsiCodeBlock))   return false;
  final PsiType type=variable.getType();
  if (!(type instanceof PsiClassType))   return false;
  final PsiClass aClass=((PsiClassType)type).resolve();
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
  final PsiClass autoCloseable=facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE,ProjectScope.getLibrariesScope(project));
  if (!InheritanceUtil.isInheritorOrSelf(aClass,autoCloseable,true))   return false;
  return true;
}
