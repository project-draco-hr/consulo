{
  final PsiJavaPackage psiPackage=JavaPsiFacade.getInstance(project).findPackage(fqn);
  if (psiPackage != null) {
    return psiPackage;
  }
  PsiClass aClass=JavaPsiFacade.getInstance(project).findClass(fqn,GlobalSearchScope.allScope(project));
  if (aClass != null) {
    return aClass;
  }
  final int endIndex=fqn.indexOf('#');
  if (endIndex != -1) {
    String className=fqn.substring(0,endIndex);
    if (className != null) {
      aClass=JavaPsiFacade.getInstance(project).findClass(className,GlobalSearchScope.allScope(project));
      if (aClass != null) {
        String memberName=fqn.substring(endIndex + 1);
        PsiField field=aClass.findFieldByName(memberName,false);
        if (field != null) {
          return field;
        }
        PsiMethod[] methods=aClass.findMethodsByName(memberName,false);
        if (methods.length != 0) {
          return methods[0];
        }
      }
    }
  }
  VirtualFile file=findFile(fqn,project);
  if (file != null) {
    return PsiManager.getInstance(project).findFile(file);
  }
  return null;
}
