{
  final Notification newNotification=new Notification(GitVcs.NOTIFICATION_GROUP_ID,GitBundle.getString("executable.error.title"),GitBundle.getString("executable.error.description"),NotificationType.ERROR,new NotificationListener(){
    public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      ShowSettingsUtil.getInstance().showSettingsDialog(myProject,GitVcs.getInstance(myProject).getConfigurable());
      if (isGitExecutableValid()) {
        notification.expire();
      }
    }
  }
);
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      if (myNotification != null && !myNotification.isExpired()) {
        myNotification.expire();
      }
      myNotification=newNotification;
      Notifications.Bus.notify(myNotification,myProject);
    }
  }
);
}
