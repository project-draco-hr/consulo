{
  final IElementType tokenType=getToken(iterator);
  PairedBraceMatcher matcher=tokenType.getLanguage().getPairedBraceMatcher();
  if (matcher != null) {
    BracePair[] pairs=matcher.getPairs();
    for (    BracePair pair : pairs) {
      if (pair.getRightBraceType() == tokenType)       return true;
    }
  }
  if (tokenType == JavaTokenType.RPARENTH || tokenType == JavaTokenType.RBRACE || tokenType == JavaTokenType.RBRACKET || tokenType == XmlTokenType.XML_EMPTY_ELEMENT_END || tokenType == XmlTokenType.XML_ATTRIBUTE_VALUE_END_DELIMITER || tokenType == JspTokenType.JSP_SCRIPTLET_END || tokenType == JspTokenType.JSP_EXPRESSION_END || tokenType == JspTokenType.JSP_DECLARATION_END || tokenType == JspTokenType.JSP_DIRECTIVE_END || tokenType == ELTokenType.JSP_EL_RBRACKET || tokenType == ELTokenType.JSP_EL_RPARENTH || tokenType == JavaDocTokenType.DOC_INLINE_TAG_END) {
    return true;
  }
 else   if (tokenType == XmlTokenType.XML_TAG_END) {
    final boolean result=findEndTagStart(iterator);
    if (fileType == StdFileTypes.HTML || fileType == StdFileTypes.JSP) {
      final String tagName=getTagName(fileText,iterator);
      if (tagName != null && HtmlUtil.isSingleHtmlTag(tagName)) {
        return !result;
      }
    }
    return result;
  }
 else {
    return false;
  }
}
