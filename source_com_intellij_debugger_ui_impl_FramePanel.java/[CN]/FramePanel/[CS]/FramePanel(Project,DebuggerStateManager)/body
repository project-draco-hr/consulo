{
  super(project,stateManager);
  myThreadsCombo=new JComboBox();
  myFramesCombo=new JComboBox();
  myThreadsCombo.setRenderer(new DebuggerComboBoxRenderer());
  myFramesCombo.setRenderer(new DebuggerComboBoxRenderer());
  myThreadsListener=new ThreadsListener();
  myFramesListener=new FramesListener();
  myThreadsCombo.addItemListener(myThreadsListener);
  myFramesCombo.addActionListener(myFramesListener);
  Splitter splitter=new Splitter();
  splitter.setPreferredSize(new Dimension(-1,23));
  splitter.setFirstComponent(new ComboPager(myFramesCombo,this));
  splitter.setSecondComponent(myThreadsCombo);
  this.add(splitter,BorderLayout.NORTH);
  add(new JScrollPane(getFrameTree()),BorderLayout.CENTER);
  DebuggerAction.installEditAction(getFrameTree(),DebuggerActions.EDIT_NODE_SOURCE);
  final AnAction setValueAction=ActionManager.getInstance().getAction(DebuggerActions.SET_VALUE);
  ListenerUtil.addMouseListener(getFrameTree(),new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getButton() == MouseEvent.BUTTON1 && e.getClickCount() == 2) {
        Presentation presentation=(Presentation)setValueAction.getTemplatePresentation().clone();
        final DataContext context=DataManager.getInstance().getDataContext(getFrameTree());
        final AnActionEvent actionEvent=new AnActionEvent(null,context,"FRAME_TREE",presentation,ActionManager.getInstance(),0);
        setValueAction.update(actionEvent);
        setValueAction.actionPerformed(actionEvent);
      }
    }
  }
);
  setValueAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F2,0)),getFrameTree());
}
