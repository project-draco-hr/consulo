{
  myCommandLineField=myCommandLineComponent.getComponent();
  myCommandLineField.setDialogCaption(myCommandLineComponent.getRawText());
  myCommandLineComponent.getLabel().setLabelFor(myCommandLineField.getTextField());
  myModuleSelector=new ConfigurationModuleSelector(project,myModulesComboBox){
    @Override public boolean isModuleAccepted(    Module module){
      if (module == null || !super.isModuleAccepted(module)) {
        return false;
      }
      final AndroidFacet facet=AndroidFacet.getInstance(module);
      return facet != null && !facet.getConfiguration().LIBRARY_PROJECT;
    }
  }
;
  myAvdComboComponent.setComponent(new AvdComboBox(true,false){
    @Override public Module getModule(){
      return getModuleSelector().getModule();
    }
  }
);
  myAvdCombo=myAvdComboComponent.getComponent();
  myAvdCombo.getComboBox().addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final String warning=myEmulatorRadioButton.isSelected() ? getAvdCompatibilityWarning() : null;
      resetAvdCompatibilityWarningLabel(warning);
    }
  }
);
  myMinSdkInfoMessageLabel.setBorder(IdeBorderFactory.createEmptyBorder(10,0,0,0));
  myMinSdkInfoMessageLabel.setIcon(AllIcons.General.BalloonWarning);
  Disposer.register(this,myAvdCombo);
  final ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      boolean emulatorSelected=myEmulatorRadioButton.isSelected();
      myAvdComboComponent.setEnabled(emulatorSelected);
      final String warning=emulatorSelected ? getAvdCompatibilityWarning() : null;
      resetAvdCompatibilityWarningLabel(warning);
    }
  }
;
  myModulesComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myAvdCombo.startUpdatingAvds(ModalityState.current());
    }
  }
);
  myShowChooserRadioButton.addActionListener(listener);
  myEmulatorRadioButton.addActionListener(listener);
  myUsbDeviceRadioButton.addActionListener(listener);
  myNetworkSpeedCombo.setModel(new DefaultComboBoxModel(NETWORK_SPEEDS));
  myNetworkLatencyCombo.setModel(new DefaultComboBoxModel(NETWORK_LATENCIES));
}
