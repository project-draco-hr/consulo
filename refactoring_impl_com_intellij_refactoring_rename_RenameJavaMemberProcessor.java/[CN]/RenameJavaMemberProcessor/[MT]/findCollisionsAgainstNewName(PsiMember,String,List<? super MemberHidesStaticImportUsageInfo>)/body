{
  final List<PsiReference> potentialConflicts=new ArrayList<PsiReference>();
  PsiMember prototype=(PsiMember)memberToRename.copy();
  try {
    ((PsiNamedElement)prototype).setName(newName);
    if (prototype instanceof PsiEnumConstant) {
      final PsiEnumConstantInitializer initializer=((PsiEnumConstant)prototype).getInitializingClass();
      if (initializer != null) {
        initializer.delete();
      }
    }
    prototype=(PsiMember)memberToRename.getContainingClass().add(prototype);
    ReferencesSearch.search(prototype).forEach(new Processor<PsiReference>(){
      public boolean process(      final PsiReference psiReference){
        potentialConflicts.add(psiReference);
        return true;
      }
    }
);
    prototype.delete();
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
    return;
  }
  for (  PsiReference potentialConflict : potentialConflicts) {
    if (potentialConflict instanceof PsiJavaReference) {
      final JavaResolveResult resolveResult=((PsiJavaReference)potentialConflict).advancedResolve(false);
      final PsiElement conflictElement=resolveResult.getElement();
      if (conflictElement != null) {
        final PsiElement scope=resolveResult.getCurrentFileResolveScope();
        if (scope instanceof PsiImportStaticStatement) {
          result.add(new MemberHidesStaticImportUsageInfo(potentialConflict.getElement(),conflictElement,memberToRename));
        }
      }
    }
  }
}
