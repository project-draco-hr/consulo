{
  final Project project=CommonDataKeys.PROJECT.getData(dataContext);
  if (project == null)   return null;
  PsiElement element=LangDataKeys.PSI_ELEMENT.getData(dataContext);
  final PsiMethod method=PsiTreeUtil.getParentOfType(element,PsiMethod.class,false);
  if (method != null) {
    return method;
  }
  final Editor editor=PlatformDataKeys.EDITOR.getData(dataContext);
  if (editor == null) {
    return null;
  }
  final PsiFile psiFile=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
  if (psiFile == null) {
    return null;
  }
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  final int offset=editor.getCaretModel().getOffset();
  if (offset < 1) {
    return null;
  }
  element=psiFile.findElementAt(offset);
  if (!(element instanceof PsiWhiteSpace)) {
    return null;
  }
  element=psiFile.findElementAt(offset - 1);
  if (!(element instanceof PsiJavaToken) || ((PsiJavaToken)element).getTokenType() != JavaTokenType.SEMICOLON) {
    return null;
  }
  return PsiTreeUtil.getParentOfType(element,PsiMethod.class,false);
}
