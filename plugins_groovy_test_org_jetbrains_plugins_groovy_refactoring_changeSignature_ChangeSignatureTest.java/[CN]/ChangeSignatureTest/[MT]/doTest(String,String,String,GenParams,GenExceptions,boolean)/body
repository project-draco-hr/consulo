{
  myFixture.configureByFile(getTestName(false) + ".groovy");
  final PsiElement targetElement=TargetElementUtilBase.findTargetElement(myFixture.getEditor(),TargetElementUtilBase.ELEMENT_NAME_ACCEPTED);
  assertTrue("<caret> is not on method name",targetElement instanceof GrMethod);
  GrMethod method=(GrMethod)targetElement;
  final PsiElementFactory factory=JavaPsiFacade.getInstance(getProject()).getElementFactory();
  PsiType newType;
  if (newReturnType == null) {
    newType=method.getReturnType();
  }
 else   if (newReturnType.length() == 0) {
    newType=null;
  }
 else {
    newType=factory.createTypeFromText(newReturnType,method);
  }
  GrChangeInfoImpl changeInfo=new GrChangeInfoImpl(method,newVisibility,newType != null ? CanonicalTypes.createTypeWrapper(newType) : null,newName != null ? newName : method.getName(),Arrays.asList(genParams.genParams(method)));
  new GrChangeSignatureProcessor(getProject(),changeInfo).run();
  myFixture.checkResultByFile(getTestName(false) + "_after.groovy");
}
