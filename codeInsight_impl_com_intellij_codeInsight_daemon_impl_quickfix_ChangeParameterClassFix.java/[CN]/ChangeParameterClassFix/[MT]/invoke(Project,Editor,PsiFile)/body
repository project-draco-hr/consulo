{
  if (!CodeInsightUtil.prepareFileForWrite(file))   return;
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      invokeImpl();
    }
  }
);
  final Editor editor1=CodeInsightUtil.positionCursor(project,myClass.getContainingFile(),myClass);
  if (editor1 == null)   return;
  final CandidateInfo[] toImplement=OverrideImplementUtil.getMethodsToOverrideImplement(myClass,true);
  if (toImplement.length != 0) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          OverrideImplementUtil.overrideOrImplementMethodsInRightPlace(editor1,myClass,ContainerUtil.map2Array(toImplement,PsiMethodMember.class,new Function<CandidateInfo,PsiMethodMember>(){
            public PsiMethodMember fun(            final CandidateInfo s){
              return new PsiMethodMember(s);
            }
          }
),false,false);
        }
      }
);
    }
 else {
      editor1.getCaretModel().moveToOffset(myClass.getTextRange().getStartOffset());
      OverrideImplementUtil.chooseAndImplementMethods(project,editor1,myClass);
    }
  }
}
