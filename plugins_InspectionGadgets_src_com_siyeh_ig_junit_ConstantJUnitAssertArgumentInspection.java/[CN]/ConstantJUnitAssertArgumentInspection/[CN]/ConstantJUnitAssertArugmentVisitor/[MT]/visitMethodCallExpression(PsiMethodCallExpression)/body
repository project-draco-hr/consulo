{
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  @NonNls final String methodName=methodExpression.getReferenceName();
  if (!ASSERT_METHODS.contains(methodName)) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (!ClassUtils.isSubclass(containingClass,"junit.framework.Assert") && !ClassUtils.isSubclass(containingClass,"org.junit.Assert")) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length == 0) {
    return;
  }
  final PsiExpression lastArgument=arguments[arguments.length - 1];
  if (!PsiUtil.isConstantExpression(lastArgument)) {
    return;
  }
  registerError(lastArgument);
}
