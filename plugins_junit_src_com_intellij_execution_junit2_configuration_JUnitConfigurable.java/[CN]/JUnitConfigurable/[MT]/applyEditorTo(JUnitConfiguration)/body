{
  myModel.apply(getModuleSelector().getModule(),configuration);
  applyHelpersTo(configuration);
  final JUnitConfiguration.Data data=configuration.getPersistentData();
  if (myWholeProjectScope.isSelected()) {
    data.setScope(TestSearchScope.WHOLE_PROJECT);
  }
 else   if (mySingleModuleScope.isSelected()) {
    data.setScope(TestSearchScope.SINGLE_MODULE);
  }
 else   if (myModuleWDScope.isSelected()) {
    data.setScope(TestSearchScope.MODULE_WITH_DEPENDENCIES);
  }
  configuration.setAlternativeJrePath(myAlternativeJREPanel.getPath());
  configuration.setAlternativeJrePathEnabled(myAlternativeJREPanel.isPathEnabled());
  configuration.getPersistentData().setEnvs(myEnvVariablesComponent.getEnvs());
  configuration.getPersistentData().PASS_PARENT_ENVS=myEnvVariablesComponent.isPassParentEnvs();
  myCommonJavaParameters.setProgramParametersLabel(ExecutionBundle.message("junit.configuration.test.runner.parameters.label"));
}
