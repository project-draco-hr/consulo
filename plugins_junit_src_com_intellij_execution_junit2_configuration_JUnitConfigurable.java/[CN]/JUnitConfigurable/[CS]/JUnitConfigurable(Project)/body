{
  myModel=new JUnitConfigurationModel(project);
  myModuleSelector=new ConfigurationModuleSelector(project,getModulesComponent());
  myModule.getComponent().addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myCommonJavaParameters.setModuleContext(myModuleSelector.getModule());
    }
  }
);
  myBrowsers=new BrowseModuleValueActionListener[]{new PackageChooserActionListener(project),new TestClassBrowser(project),new MethodBrowser(project)};
  myRadioButtons[JUnitConfigurationModel.ALL_IN_PACKAGE]=myAllInPackageButton;
  myRadioButtons[JUnitConfigurationModel.CLASS]=myClassButton;
  myRadioButtons[JUnitConfigurationModel.METHOD]=myTestMethodButton;
  myTestLocations[JUnitConfigurationModel.ALL_IN_PACKAGE]=myPackage;
  myTestLocations[JUnitConfigurationModel.CLASS]=myClass;
  myTestLocations[JUnitConfigurationModel.METHOD]=myMethod;
  myModel.setListener(this);
  addRadioButtonsListeners(myRadioButtons,new ChangeListener(){
    public void stateChanged(    final ChangeEvent e){
      final ButtonModel buttonModel=(ButtonModel)e.getSource();
      if (buttonModel.isSelected()) {
        for (int i=0; i < myRadioButtons.length; i++)         if (buttonModel == myRadioButtons[i].getModel()) {
          myModel.setType(i);
          break;
        }
      }
      changePanel();
    }
  }
);
  myModel.setType(JUnitConfigurationModel.CLASS);
  installDocuments();
  addRadioButtonsListeners(new JRadioButton[]{myWholeProjectScope,mySingleModuleScope,myModuleWDScope},null);
  myWholeProjectScope.addChangeListener(new ChangeListener(){
    public void stateChanged(    final ChangeEvent e){
      onScopeChanged();
    }
  }
);
  myCommonJavaParameters.setProgramParametersLabel(ExecutionBundle.message("junit.configuration.test.runner.parameters.label"));
}
