{
  myModel=new JUnitConfigurationModel(project);
  myModuleSelector=new ConfigurationModuleSelector(project,getModulesComponent());
  myModule.getComponent().addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myCommonJavaParameters.setModuleContext(myModuleSelector.getModule());
    }
  }
);
  myBrowsers=new BrowseModuleValueActionListener[]{new PackageChooserActionListener(project),new TestClassBrowser(project),new MethodBrowser(project),new TestsChooserActionListener(project),new BrowseModuleValueActionListener(project){
    @Override protected String showDialog(){
      final VirtualFile[] virtualFiles=FileChooser.chooseFiles(project,new FileChooserDescriptor(false,true,false,false,false,false));
      if (virtualFiles.length == 1) {
        return FileUtil.toSystemDependentName(virtualFiles[0].getPath());
      }
      return null;
    }
  }
};
  myRadioButtons[JUnitConfigurationModel.ALL_IN_PACKAGE]=myAllInPackageButton;
  myRadioButtons[JUnitConfigurationModel.CLASS]=myClassButton;
  myRadioButtons[JUnitConfigurationModel.METHOD]=myTestMethodButton;
  myRadioButtons[JUnitConfigurationModel.PATTERN]=myTestPatternButton;
  myRadioButtons[JUnitConfigurationModel.DIR]=myTestDirButton;
  myTestLocations[JUnitConfigurationModel.ALL_IN_PACKAGE]=myPackage;
  myTestLocations[JUnitConfigurationModel.CLASS]=myClass;
  myTestLocations[JUnitConfigurationModel.METHOD]=myMethod;
  myTestLocations[JUnitConfigurationModel.DIR]=myDir;
  final JPanel panel=myPattern.getComponent();
  panel.setLayout(new BorderLayout());
  myPatternTextField=new TextFieldWithBrowseButton();
  myPatternTextField.setButtonIcon(PlatformIcons.ADD_ICON);
  panel.add(myPatternTextField,BorderLayout.CENTER);
  final FixedSizeButton editBtn=new FixedSizeButton();
  editBtn.setIcon(IconLoader.getIcon("/actions/showViewer.png"));
  editBtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      Messages.showTextAreaDialog(myPatternTextField.getTextField(),"Configure suite tests","EditParametersPopupWindow");
    }
  }
);
  panel.add(editBtn,BorderLayout.EAST);
  myTestLocations[JUnitConfigurationModel.PATTERN]=myPattern;
  final FileChooserDescriptor dirFileChooser=new FileChooserDescriptor(false,true,false,false,false,false);
  dirFileChooser.setHideIgnored(false);
  final JTextField textField=myDir.getComponent().getTextField();
  InsertPathAction.addTo(textField,dirFileChooser);
  FileChooserFactory.getInstance().installFileCompletion(textField,dirFileChooser,true,null);
  myModel.setListener(this);
  addRadioButtonsListeners(myRadioButtons,new ChangeListener(){
    public void stateChanged(    final ChangeEvent e){
      final ButtonModel buttonModel=(ButtonModel)e.getSource();
      if (buttonModel.isSelected()) {
        for (int i=0; i < myRadioButtons.length; i++)         if (buttonModel == myRadioButtons[i].getModel()) {
          myModel.setType(i);
          break;
        }
        changePanel();
      }
    }
  }
);
  myModel.setType(JUnitConfigurationModel.CLASS);
  installDocuments();
  addRadioButtonsListeners(new JRadioButton[]{myWholeProjectScope,mySingleModuleScope,myModuleWDScope},null);
  myWholeProjectScope.addChangeListener(new ChangeListener(){
    public void stateChanged(    final ChangeEvent e){
      onScopeChanged();
    }
  }
);
  myCommonJavaParameters.getProgramParametersComponent().setVisible(false);
}
