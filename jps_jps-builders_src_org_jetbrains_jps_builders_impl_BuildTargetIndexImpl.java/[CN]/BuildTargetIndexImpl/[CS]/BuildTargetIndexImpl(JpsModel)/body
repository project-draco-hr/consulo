{
  myTargets=new THashMap<BuildTargetType<?>,List<? extends BuildTarget<?>>>();
  myModuleBasedTargets=new THashMap<JpsModule,List<ModuleBasedTarget>>();
  List<List<? extends BuildTarget<?>>> targetsByType=new ArrayList<List<? extends BuildTarget<?>>>();
  for (  BuildTargetType<?> type : TargetTypeRegistry.getInstance().getTargetTypes()) {
    List<? extends BuildTarget<?>> targets=type.computeAllTargets(model);
    myTargets.put(type,targets);
    targetsByType.add(targets);
    for (    BuildTarget<?> target : targets) {
      if (target instanceof ModuleBasedTarget) {
        final ModuleBasedTarget t=(ModuleBasedTarget)target;
        final JpsModule module=t.getModule();
        List<ModuleBasedTarget> list=myModuleBasedTargets.get(module);
        if (list == null) {
          list=new ArrayList<ModuleBasedTarget>();
          myModuleBasedTargets.put(module,list);
        }
        list.add(t);
      }
    }
  }
  myDependencies=new THashMap<BuildTarget<?>,Collection<BuildTarget<?>>>();
  myAllTargets=Collections.unmodifiableList(ContainerUtil.concat(targetsByType));
}
