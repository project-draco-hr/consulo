{
  stepCount++;
  Step currentStep=currentSteps.poll();
  outCommand(String.format(TEMPLATE_TEST_STARTED,getCurrentTime(),uri + ":" + currentStep.getLine(),getName(currentStep)),true);
  String stepFullName=getName(currentStep);
  if (result.getStatus().equals(Result.FAILED)) {
    failedStepCount++;
    scenarioPassed=false;
    String fullMessage=result.getErrorMessage().replace("\r","").replace("\t","  ");
    String[] messageInfo=fullMessage.split("\n",2);
    final String message;
    final String details;
    if (messageInfo.length == 2) {
      message=messageInfo[0].trim();
      details=messageInfo[1].trim();
    }
 else {
      message=fullMessage;
      details="";
    }
    outCommand(String.format(TEMPLATE_TEST_FAILED,getCurrentTime(),escape(details),escape(message),stepFullName,""),true);
    outCommand(String.format(TEMPLATE_SCENARIO_FAILED,getCurrentTime()),true);
  }
 else   if (result.getStatus().equals(RESULT_STATUS_PENDING)) {
    pendingStepCount++;
    scenarioPassed=false;
    outCommand(String.format(TEMPLATE_TEST_PENDING,stepFullName,getCurrentTime()),true);
  }
 else   if (result.equals(Result.UNDEFINED)) {
    undefinedStepCount++;
    scenarioPassed=false;
    String message="Undefined step: " + getName(currentStep);
    String details="";
    outCommand(String.format(TEMPLATE_TEST_FAILED,getCurrentTime(),escape(details),escape(message),stepFullName,"error = 'true'"),true);
    outCommand(String.format(TEMPLATE_SCENARIO_FAILED,getCurrentTime()),true);
  }
 else   if (result.equals(Result.SKIPPED)) {
    skippedStepCount++;
    scenarioPassed=false;
    outCommand(String.format(TEMPLATE_TEST_PENDING,stepFullName,getCurrentTime()),true);
  }
 else {
    passedStepCount++;
  }
  String currentTime=getCurrentTime();
  outCommand(String.format(TEMPLATE_TEST_FINISHED,currentTime,currentTime,stepFullName),true);
}
