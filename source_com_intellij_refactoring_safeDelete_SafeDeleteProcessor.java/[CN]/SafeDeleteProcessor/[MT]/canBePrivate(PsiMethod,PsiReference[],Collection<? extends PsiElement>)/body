{
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null) {
    return false;
  }
  PsiManager manager=method.getManager();
  final PsiElementFactory factory=manager.getElementFactory();
  final PsiModifierList privateModifierList;
  try {
    final PsiMethod newMethod=factory.createMethod("x3",PsiType.VOID);
    privateModifierList=newMethod.getModifierList();
    privateModifierList.setModifierProperty(PsiModifier.PRIVATE,true);
  }
 catch (  IncorrectOperationException e) {
    LOG.assertTrue(false);
    return false;
  }
  for (  PsiReference reference : references) {
    final PsiElement element=reference.getElement();
    if (!isInside(element,myElements) && !isInside(element,deleted) && !manager.getResolveHelper().isAccessible(method,privateModifierList,element,null)) {
      return false;
    }
  }
  return true;
}
