{
  myTable.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        myGotoButton.doClick();
      }
    }
  }
);
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      enableButtons();
    }
  }
);
  myGotoButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      stopCellEditing();
      if (getSelectedBookmark() == null)       return;
      gotoSelectedBookmark(true);
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      stopCellEditing();
      removeSelectedBookmark();
      myTable.requestFocus();
    }
  }
);
  myRemoveAllButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      stopCellEditing();
      while (myModel.getRowCount() > 0) {
        Bookmark bookmark=myModel.getBookmarkWrapper(0).getBookmark();
        myBookmarkManager.removeBookmark(bookmark);
        myModel.removeRow(0);
      }
      myTable.clearSelection();
      enableButtons();
      myTable.requestFocus();
    }
  }
);
  myMoveUpButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      stopCellEditing();
      Bookmark bookmark=getSelectedBookmark();
      fillList(myBookmarkManager.moveBookmarkUp(bookmark),bookmark);
      myTable.requestFocus();
    }
  }
);
  myMoveDownButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      stopCellEditing();
      Bookmark bookmark=getSelectedBookmark();
      fillList(myBookmarkManager.moveBookmarkDown(bookmark),bookmark);
      myTable.requestFocus();
    }
  }
);
  myCloseButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      close(CANCEL_EXIT_CODE);
    }
  }
);
  ShortcutSet shortcutSet=ActionManager.getInstance().getAction(IdeActions.ACTION_EDIT_SOURCE).getShortcutSet();
  new AnAction(){
    public void actionPerformed(    AnActionEvent e){
      myGotoButton.doClick();
    }
  }
.registerCustomShortcutSet(shortcutSet,getRootPane());
  getRootPane().registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      removeSelectedBookmark();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0),JComponent.WHEN_IN_FOCUSED_WINDOW);
  getRootPane().setDefaultButton(myGotoButton);
}
