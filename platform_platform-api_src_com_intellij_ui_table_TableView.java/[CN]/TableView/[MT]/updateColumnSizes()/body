{
  final JTableHeader header=getTableHeader();
  final TableCellRenderer defaultRenderer=header == null ? null : header.getDefaultRenderer();
  ColumnInfo[] columns=getListTableModel().getColumnInfos();
  for (int i=0; i < columns.length; i++) {
    final ColumnInfo columnInfo=columns[i];
    final TableColumn column=getColumnModel().getColumn(i);
    final Component headerComponent=defaultRenderer == null ? null : defaultRenderer.getTableCellRendererComponent(this,column.getHeaderValue(),false,false,0,0);
    final Dimension headerSize=headerComponent == null ? new Dimension(0,0) : headerComponent.getPreferredSize();
    final String maxStringValue;
    final String preferredValue;
    if (columnInfo.getWidth(this) > 0) {
      int width=columnInfo.getWidth(this);
      column.setMaxWidth(width);
      column.setPreferredWidth(width);
      column.setMinWidth(width);
    }
 else     if ((maxStringValue=columnInfo.getMaxStringValue()) != null) {
      int width=getFontMetrics(getFont()).stringWidth(maxStringValue) + columnInfo.getAdditionalWidth();
      width=Math.max(width,headerSize.width);
      column.setPreferredWidth(width);
      column.setMaxWidth(width);
    }
 else     if ((preferredValue=columnInfo.getPreferredStringValue()) != null) {
      int width=getFontMetrics(getFont()).stringWidth(preferredValue) + columnInfo.getAdditionalWidth();
      width=Math.max(width,headerSize.width);
      column.setPreferredWidth(width);
    }
  }
}
