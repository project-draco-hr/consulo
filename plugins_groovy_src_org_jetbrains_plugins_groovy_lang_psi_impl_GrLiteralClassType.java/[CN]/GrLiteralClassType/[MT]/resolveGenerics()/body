{
  return new ClassResolveResult(){
    private final PsiClass myBaseClass=resolve();
    public PsiClass getElement(){
      return myBaseClass;
    }
    public PsiSubstitutor getSubstitutor(){
      PsiSubstitutor result=PsiSubstitutor.EMPTY;
      if (myBaseClass != null) {
        final PsiType[] typeArgs=getParameters();
        final PsiTypeParameter[] typeParams=myBaseClass.getTypeParameters();
        if (typeParams.length == typeArgs.length) {
          for (int i=0; i < typeArgs.length; i++) {
            result=result.put(typeParams[i],typeArgs[i]);
          }
        }
      }
      return result;
    }
    public boolean isPackagePrefixPackageReference(){
      return false;
    }
    public boolean isAccessible(){
      return true;
    }
    public boolean isStaticsScopeCorrect(){
      return true;
    }
    public PsiElement getCurrentFileResolveScope(){
      return null;
    }
    public boolean isValidResult(){
      return isStaticsScopeCorrect() && isAccessible();
    }
  }
;
}
