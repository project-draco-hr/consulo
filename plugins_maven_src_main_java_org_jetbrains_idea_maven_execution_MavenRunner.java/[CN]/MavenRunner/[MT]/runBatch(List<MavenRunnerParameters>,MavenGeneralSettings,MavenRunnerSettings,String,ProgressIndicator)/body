{
  LOG.assertTrue(!ApplicationManager.getApplication().isReadAccessAllowed());
  if (commands.isEmpty())   return true;
  MavenConsole console;
  AccessToken accessToken=ReadAction.start();
  try {
    if (myProject.isDisposed())     return false;
    console=createConsole();
  }
  finally {
    accessToken.finish();
  }
  try {
    int count=0;
    for (    MavenRunnerParameters command : commands) {
      if (indicator != null) {
        indicator.setFraction(((double)count++) / commands.size());
      }
      MavenExecutor executor;
      accessToken=ReadAction.start();
      try {
        if (myProject.isDisposed())         break;
        executor=createExecutor(command,coreSettings,runnerSettings,console);
      }
  finally {
        accessToken.finish();
      }
      executor.setAction(action);
      if (!executor.execute(indicator)) {
        updateTargetFolders();
        return false;
      }
    }
    updateTargetFolders();
  }
  finally {
    console.finish();
  }
  return true;
}
