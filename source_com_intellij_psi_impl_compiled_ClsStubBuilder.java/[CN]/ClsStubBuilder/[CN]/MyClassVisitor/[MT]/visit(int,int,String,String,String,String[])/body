{
  String fqn=getClassName(name);
  final String shortName=PsiNameHelper.getShortClassName(fqn);
  final int flags=myAccess == 0 ? access : myAccess;
  boolean isDeprecated=(flags & Opcodes.ACC_DEPRECATED) != 0;
  boolean isInterface=(flags & Opcodes.ACC_INTERFACE) != 0;
  boolean isEnum=(flags & Opcodes.ACC_ENUM) != 0;
  boolean isAnnotationType=(flags & Opcodes.ACC_ANNOTATION) != 0;
  final byte stubFlags=PsiClassStubImpl.packFlags(isDeprecated,isInterface,isEnum,false,false,isAnnotationType,false,false);
  myResult=new PsiClassStubImpl(JavaStubElementTypes.CLASS,myParent,fqn,shortName,null,stubFlags);
  LanguageLevel languageLevel=convertFromVersion(version);
  myLexer=new JavaLexer(languageLevel);
  ((PsiClassStubImpl)myResult).setLanguageLevel(languageLevel);
  myModlist=new PsiModifierListStubImpl(myResult,packModlistFlags(flags));
  CharacterIterator signatureIterator=signature != null ? new StringCharacterIterator(signature) : null;
  if (signatureIterator != null) {
    try {
      SignatureParsing.parseTypeParametersDeclaration(signatureIterator,myResult);
    }
 catch (    ClsFormatException e) {
      signatureIterator=null;
    }
  }
 else {
    new PsiTypeParameterListStubImpl(myResult);
  }
  String convertedSuper;
  List<String> convertedInterfaces=new ArrayList<String>();
  if (signatureIterator == null) {
    convertedSuper=parseClassDescription(superName,interfaces,convertedInterfaces);
  }
 else {
    try {
      convertedSuper=parseClassSignature(signatureIterator,convertedInterfaces);
    }
 catch (    ClsFormatException e) {
      new PsiTypeParameterListStubImpl(myResult);
      convertedSuper=parseClassDescription(superName,interfaces,convertedInterfaces);
    }
  }
  String[] interfacesArray=convertedInterfaces.toArray(new String[convertedInterfaces.size()]);
  if (isInterface) {
    new PsiClassReferenceListStubImpl(JavaStubElementTypes.EXTENDS_LIST,myResult,interfacesArray,PsiReferenceList.Role.EXTENDS_LIST);
    new PsiClassReferenceListStubImpl(JavaStubElementTypes.IMPLEMENTS_LIST,myResult,EMPTY_STRINGS,PsiReferenceList.Role.IMPLEMENTS_LIST);
  }
 else {
    if (convertedSuper != null && !"java.lang.Object".equals(convertedSuper)) {
      new PsiClassReferenceListStubImpl(JavaStubElementTypes.EXTENDS_LIST,myResult,new String[]{convertedSuper},PsiReferenceList.Role.EXTENDS_LIST);
    }
 else {
      new PsiClassReferenceListStubImpl(JavaStubElementTypes.EXTENDS_LIST,myResult,EMPTY_STRINGS,PsiReferenceList.Role.EXTENDS_LIST);
    }
    new PsiClassReferenceListStubImpl(JavaStubElementTypes.IMPLEMENTS_LIST,myResult,interfacesArray,PsiReferenceList.Role.IMPLEMENTS_LIST);
  }
}
