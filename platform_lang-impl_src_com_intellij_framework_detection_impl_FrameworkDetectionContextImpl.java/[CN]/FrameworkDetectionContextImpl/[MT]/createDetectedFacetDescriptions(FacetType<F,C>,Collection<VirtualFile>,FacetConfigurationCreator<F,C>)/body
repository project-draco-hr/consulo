{
  MultiMapBasedOnSet<Module,VirtualFile> filesByModule=new MultiMapBasedOnSet<Module,VirtualFile>();
  for (  VirtualFile file : files) {
    final Module module=ModuleUtil.findModuleForFile(file,myProject);
    if (module != null) {
      filesByModule.putValue(module,file);
    }
  }
  final List<DetectedFrameworkDescription> result=new ArrayList<DetectedFrameworkDescription>();
  final FacetsProvider provider=getFacetsProvider();
  for (  Module module : filesByModule.keySet()) {
    final Collection<F> facets=provider.getFacetsByType(module,facetType.getId());
    if (facetType.isOnlyOneFacetAllowed() && !facets.isEmpty()) {
      continue;
    }
    final List<Pair<C,Collection<VirtualFile>>> pairs=creator.createConfigurations(files,facets);
    for (    Pair<C,Collection<VirtualFile>> pair : pairs) {
      result.add(new FacetBasedDetectedFrameworkDescription<C>(module,pair.getFirst(),new HashSet<VirtualFile>(pair.getSecond()),facetType));
    }
  }
  return result;
}
