{
  MultiMapBasedOnSet<Module,VirtualFile> filesByModule=new MultiMapBasedOnSet<Module,VirtualFile>();
  for (  VirtualFile file : files) {
    final Module module=ModuleUtil.findModuleForFile(file,myProject);
    if (module != null) {
      filesByModule.putValue(module,file);
    }
  }
  final List<DetectedFrameworkDescription> result=new ArrayList<DetectedFrameworkDescription>();
  final FacetsProvider provider=getFacetsProvider();
  for (  Module module : filesByModule.keySet()) {
    if (facetType.isOnlyOneFacetAllowed() && !provider.getFacetsByType(module,facetType.getId()).isEmpty()) {
      continue;
    }
    result.add(new FacetBasedDetectedFrameworkDescription<C>(module,facetType.createDefaultConfiguration(),(Set<VirtualFile>)filesByModule.get(module),facetType));
  }
  return result;
}
