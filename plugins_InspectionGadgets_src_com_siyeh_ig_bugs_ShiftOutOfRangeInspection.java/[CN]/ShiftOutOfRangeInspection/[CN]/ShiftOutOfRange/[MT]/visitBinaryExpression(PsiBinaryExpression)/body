{
  super.visitBinaryExpression(expression);
  if (!WellFormednessUtils.isWellFormed(expression)) {
    return;
  }
  final PsiJavaToken sign=expression.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  if (!tokenType.equals(JavaTokenType.LTLT) && !tokenType.equals(JavaTokenType.GTGT) && !tokenType.equals(JavaTokenType.GTGTGT)) {
    return;
  }
  final PsiType expressionType=expression.getType();
  if (expressionType == null) {
    return;
  }
  final PsiExpression rhs=expression.getROperand();
  if (!PsiUtil.isConstantExpression(rhs)) {
    return;
  }
  final Integer valueObject=(Integer)ConstantExpressionUtil.computeCastTo(rhs,PsiType.INT);
  if (valueObject == null) {
    return;
  }
  final int value=valueObject;
  if (expressionType.equals(PsiType.LONG)) {
    if (value < 0 || value > 63) {
      registerError(sign);
    }
  }
  if (expressionType.equals(PsiType.INT)) {
    if (value < 0 || value > 31) {
      registerError(sign);
    }
  }
}
