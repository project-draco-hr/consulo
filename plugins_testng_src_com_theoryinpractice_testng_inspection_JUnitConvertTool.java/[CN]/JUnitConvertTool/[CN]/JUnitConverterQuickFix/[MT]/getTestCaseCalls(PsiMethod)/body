{
  PsiElement[] methodCalls=PsiTreeUtil.collectElements(method,new PsiElementFilter(){
    public boolean isAccepted(    PsiElement element){
      if (!(element instanceof PsiMethodCallExpression))       return false;
      final PsiMethodCallExpression methodCall=(PsiMethodCallExpression)element;
      final PsiMethod method=methodCall.resolveMethod();
      return method != null && "junit.framework.Assert".equals(method.getContainingClass().getQualifiedName());
    }
  }
);
  PsiMethodCallExpression[] expressions=new PsiMethodCallExpression[methodCalls.length];
  System.arraycopy(methodCalls,0,expressions,0,methodCalls.length);
  return expressions;
}
