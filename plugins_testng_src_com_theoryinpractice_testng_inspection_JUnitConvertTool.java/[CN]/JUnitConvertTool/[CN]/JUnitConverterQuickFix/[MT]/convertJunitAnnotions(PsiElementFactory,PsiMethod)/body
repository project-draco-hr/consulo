{
  PsiAnnotation[] annotations=method.getModifierList().getAnnotations();
  for (  PsiAnnotation annotation : annotations) {
    PsiAnnotation newAnnotation=null;
    if ("org.junit.Test".equals(annotation.getQualifiedName())) {
      newAnnotation=factory.createAnnotationFromText("@org.testng.annotations.Test",method);
    }
 else     if ("org.junit.BeforeClass".equals(annotation.getQualifiedName())) {
      newAnnotation=factory.createAnnotationFromText("@org.testng.annotations.BeforeClass",method);
    }
 else     if ("org.junit.Before".equals(annotation.getQualifiedName())) {
      newAnnotation=factory.createAnnotationFromText("@org.testng.annotations.BeforeMethod",method);
    }
 else     if ("org.junit.AfterClass".equals(annotation.getQualifiedName())) {
      newAnnotation=factory.createAnnotationFromText("@org.testng.annotations.AfterClass",method);
    }
 else     if ("org.junit.After".equals(annotation.getQualifiedName())) {
      newAnnotation=factory.createAnnotationFromText("@org.testng.annotations.AfterMethod",method);
    }
    if (newAnnotation != null) {
      JavaCodeStyleManager.getInstance(annotation.getProject()).shortenClassReferences(annotation.replace(newAnnotation));
    }
  }
}
