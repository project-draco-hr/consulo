{
  actionConsumer.consume(new SelectBranchAction("All",null));
  final GitBranch current=mySymbolicRefs.getCurrent();
  if (current != null) {
    actionConsumer.consume(new SelectBranchAction("*" + minusRefs(current.getFullName()),current.getFullName()));
  }
  final TreeSet<String> locals=mySymbolicRefs.getLocalBranches();
  if (locals != null && (!locals.isEmpty())) {
    final DefaultActionGroup local=new DefaultActionGroup("Local",true);
    actionConsumer.consume(local);
    for (    String s : locals) {
      final String presentation=s.equals(current.getName()) ? ("*" + s) : s;
      local.add(new SelectBranchAction(presentation,s));
    }
  }
  final TreeSet<String> remotes=mySymbolicRefs.getRemoteBranches();
  if (remotes != null && (!remotes.isEmpty())) {
    final DefaultActionGroup remote=new DefaultActionGroup("Remote",true);
    actionConsumer.consume(remote);
    for (    String s : remotes) {
      final String presentation=s.equals(current.getName()) ? ("*" + s) : s;
      remote.add(new SelectBranchAction(presentation,GitBranch.REFS_REMOTES_PREFIX + s));
    }
  }
}
