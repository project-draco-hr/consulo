{
  this.parentPanel=parentPanel;
  overridePanel.setLayout(new BorderLayout());
  if (fileType != null) {
    ftOptionsPanel=new FileTypeOverridePanel();
    overridePanel.add(ftOptionsPanel.getMainComponent(),BorderLayout.CENTER);
  }
 else {
    overridePanel.setVisible(false);
  }
  this.fileType=fileType != null ? fileType : StdFileTypes.JAVA;
  tempOptionsPanel.setFileType(this.fileType);
  FileType alternate=FileTypeUtil.getInstance().getAlternate(this.fileType);
  if (alternate != null) {
    cbUseAlternate.setText("Use " + alternate.getName() + " Comments");
    cbUseAlternate.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        if (cbPreview.isSelected()) {
          updateOverride();
        }
      }
    }
);
  }
 else {
    cbUseAlternate.setVisible(false);
  }
  if (parentPanel != null) {
    parentPanel.tempOptionsPanel.addOptionChangeListener(new TemplateOptionsPanelListener(){
      public void optionChanged(){
        updateOverride();
      }
    }
);
  }
  ButtonGroup group=new ButtonGroup();
  group.add(rbBefore);
  group.add(rbAfter);
  if (locations == null) {
    fileLocationPanel.setBorder(BorderFactory.createEmptyBorder());
  }
 else {
    fileLocations=new JRadioButton[locations.length];
    group=new ButtonGroup();
    for (int i=0; i < fileLocations.length; i++) {
      fileLocations[i]=new JRadioButton(locations[i]);
      group.add(fileLocations[i]);
      fileLocationPanel.add(fileLocations[i],new GridConstraints(i,0,1,1,GridConstraints.ANCHOR_WEST,GridConstraints.FILL_NONE,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,GridConstraints.SIZEPOLICY_FIXED,null,null,null));
    }
  }
  cbPreview.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent actionEvent){
      if (cbPreview.isSelected()) {
        noticeText=noticeBody.getText();
        showPreview(noticeText,tempOptionsPanel.getOptions());
      }
 else {
        updateNoticeText(noticeText);
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            noticeBody.requestFocus();
          }
        }
);
      }
      noticeBody.setEnabled(!cbPreview.isSelected());
    }
  }
);
  if (ftOptionsPanel != null) {
    ftOptionsPanel.addOptionChangeListener(new FileTypeOverridePanelListener(){
      public void optionChanged(){
        updateOverride();
      }
    }
);
  }
  tempOptionsPanel.addOptionChangeListener(new TemplateOptionsPanelListener(){
    public void optionChanged(){
      if (cbPreview.isSelected()) {
        String text=noticeText;
        if (ftOptionsPanel != null && ftOptionsPanel.getOptions() == LanguageOptions.USE_TEXT) {
          text=TemplateCommentPanel.this.parentPanel.getOptions().getNotice();
        }
        showPreview(text,tempOptionsPanel.getOptions());
      }
    }
  }
);
  noticeBody.addCaretListener(new CaretListener(){
    public void caretUpdate(    CaretEvent caretEvent){
      btnSelect.setEnabled(caretEvent.getDot() != caretEvent.getMark());
    }
  }
);
  noticeBody.getDocument().addDocumentListener(new DocumentListener(){
    public void changedUpdate(    DocumentEvent documentEvent){
      check();
    }
    public void insertUpdate(    DocumentEvent documentEvent){
      check();
    }
    public void removeUpdate(    DocumentEvent documentEvent){
      check();
    }
    private void check(){
      btnValidate.setEnabled(noticeBody.getText().length() > 0 && noticeBody.isEnabled());
    }
  }
);
  btnSelect.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent actionEvent){
      txtKeyword.setText(noticeBody.getSelectedText());
    }
  }
);
  btnValidate.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent actionEvent){
      try {
        VelocityHelper.verify(noticeBody.getText());
        JOptionPane.showMessageDialog(null,"Velocity template valid.","Validation",JOptionPane.INFORMATION_MESSAGE);
      }
 catch (      Exception e) {
        JOptionPane.showMessageDialog(null,"Velocity template error:\n" + e.getMessage(),"Validation",JOptionPane.ERROR_MESSAGE);
      }
    }
  }
);
  lblKeyword.setLabelFor(txtKeyword);
  noticeBody.setFont(EditorColorsManager.getInstance().getGlobalScheme().getFont(EditorFontType.PLAIN));
  noticeBody.setColumns(CodeStyleSettingsManager.getInstance().getCurrentSettings().RIGHT_MARGIN);
}
