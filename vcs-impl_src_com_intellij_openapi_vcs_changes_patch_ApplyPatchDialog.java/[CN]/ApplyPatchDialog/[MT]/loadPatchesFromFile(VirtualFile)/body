{
  myPatches=new ArrayList<FilePatch>();
  myPatchesFailedToLoad=new HashSet<FilePatch>();
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      if (!patchFile.isValid()) {
        queueUpdateStatus("Cannot find patch file");
        return;
      }
      PatchReader reader;
      try {
        reader=new PatchReader(patchFile);
      }
 catch (      IOException e) {
        queueUpdateStatus(VcsBundle.message("patch.apply.open.error",e.getMessage()));
        return;
      }
      while (true) {
        FilePatch patch;
        try {
          patch=reader.readNextPatch();
        }
 catch (        PatchSyntaxException e) {
          if (e.getLine() >= 0) {
            queueUpdateStatus(VcsBundle.message("patch.apply.load.error.line",e.getMessage(),e.getLine()));
          }
 else {
            queueUpdateStatus(VcsBundle.message("patch.apply.load.error",e.getMessage()));
          }
          return;
        }
        if (patch == null) {
          break;
        }
        myPatches.add(patch);
      }
      if (myPatches.isEmpty()) {
        queueUpdateStatus(VcsBundle.message("patch.apply.no.patches.found"));
        return;
      }
      autoDetectBaseDirectory();
      queueUpdateStatus(null);
    }
  }
);
}
