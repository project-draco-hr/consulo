{
  myVCSManager.addVcsListener(myVcsListener);
  myPropertyChangeListener=new MyPropertyChangeListener();
  TodoConfiguration.getInstance().addPropertyChangeListener(myPropertyChangeListener);
  myConnection=myProject.getMessageBus().connect();
  myConnection.subscribe(AppTopics.FILE_TYPES,new MyFileTypeListener());
  StartupManager startupManager=StartupManager.getInstance(myProject);
  startupManager.registerPostStartupActivity(new Runnable(){
    public void run(){
      Content allTodosContent=PeerFactory.getInstance().getContentFactory().createContent(null,IdeBundle.message("title.project"),false);
      myAllTodos=new TodoPanel(myProject,myAllPanelSettings,false,allTodosContent){
        protected TodoTreeBuilder createTreeBuilder(        JTree tree,        DefaultTreeModel treeModel,        Project project){
          AllTodosTreeBuilder builder=new AllTodosTreeBuilder(tree,treeModel,project);
          builder.init();
          return builder;
        }
      }
;
      allTodosContent.setComponent(myAllTodos);
      Content currentFileTodosContent=PeerFactory.getInstance().getContentFactory().createContent(null,IdeBundle.message("title.todo.current.file"),false);
      myCurrentFileTodos=new CurrentFileTodosPanel(myProject,myCurrentPanelSettings,currentFileTodosContent){
        protected TodoTreeBuilder createTreeBuilder(        JTree tree,        DefaultTreeModel treeModel,        Project project){
          CurrentFileTodosTreeBuilder builder=new CurrentFileTodosTreeBuilder(tree,treeModel,project);
          builder.init();
          return builder;
        }
      }
;
      currentFileTodosContent.setComponent(myCurrentFileTodos);
      myChangeListTodosContent=PeerFactory.getInstance().getContentFactory().createContent(null,"ChangeList",false);
      myChangeListTodos=new ChangeListTodosPanel(myProject,myCurrentPanelSettings,myChangeListTodosContent){
        protected TodoTreeBuilder createTreeBuilder(        JTree tree,        DefaultTreeModel treeModel,        Project project){
          ChangeListTodosTreeBuilder builder=new ChangeListTodosTreeBuilder(tree,treeModel,project);
          builder.init();
          return builder;
        }
      }
;
      myChangeListTodosContent.setComponent(myChangeListTodos);
      ToolWindow toolWindow=ToolWindowManager.getInstance(myProject).registerToolWindow(ToolWindowId.TODO_VIEW,false,ToolWindowAnchor.BOTTOM);
      toolWindow.setIcon(IconLoader.getIcon("/general/toolWindowTodo.png"));
      myContentManager=toolWindow.getContentManager();
      myContentManager.addContent(allTodosContent);
      myContentManager.addContent(currentFileTodosContent);
      if (myVCSManager.getAllActiveVcss().length > 0) {
        myVcsListener.myIsVisible=true;
        myContentManager.addContent(myChangeListTodosContent);
      }
      Content content=myContentManager.getContent(mySelectedIndex);
      content=content == null ? allTodosContent : content;
      myContentManager.setSelectedContent(content);
    }
  }
);
}
