{
  final DebuggerTreeNodeImpl node=getNodeToShowTip(e);
  if (node == null) {
    return null;
  }
  if (myCurrentTooltip != null && myCurrentTooltip.isShowing() && myCurrentTooltipNode == node) {
    return myCurrentTooltip;
  }
  myCurrentTooltipNode=node;
  final String toolTipText=getTipText(node);
  if (toolTipText == null) {
    return null;
  }
  final JComponent tipContent=createTipContent(toolTipText);
  final JScrollPane scrollPane=new JScrollPane(tipContent);
  scrollPane.setBorder(null);
  scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
  final JToolTip toolTip=new JToolTip();
  toolTip.setLayout(new BorderLayout());
  toolTip.add(scrollPane,BorderLayout.CENTER);
  final Point point=e.getPoint();
  Rectangle tipRectangle=getTipBounds(point,tipContent.getPreferredSize());
  final Border tooltipBorder=toolTip.getBorder();
  if (tooltipBorder != null) {
    final Insets borderInsets=tooltipBorder.getBorderInsets(this);
    tipRectangle.setSize(tipRectangle.width + borderInsets.left + borderInsets.right,tipRectangle.height + borderInsets.top + borderInsets.bottom);
  }
  final Dimension tipSize=new Dimension(tipRectangle.getSize());
  if (tipRectangle.getWidth() < tipContent.getPreferredSize().getWidth()) {
    tipSize.height+=scrollPane.getHorizontalScrollBar().getPreferredSize().height;
  }
  if (tipRectangle.getHeight() < tipContent.getPreferredSize().getHeight()) {
    tipSize.width+=scrollPane.getVerticalScrollBar().getPreferredSize().width;
  }
  if (!tipSize.equals(tipRectangle.getSize())) {
    tipRectangle=getTipBounds(point,tipSize);
  }
  toolTip.setPreferredSize(tipRectangle.getSize());
  myCurrentTooltip=toolTip;
  return toolTip;
}
