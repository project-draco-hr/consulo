{
  myManager=manager;
  myProjectRootManager=projectRootManager;
  myFileManager=fileManager;
  myUseRepository=true;
  myManager.registerRunnableToRunOnChange(new Runnable(){
    public void run(){
      myCachedObjectClassMap.clear();
    }
  }
);
  final MessageBusConnection connection=bus.connect();
  connection.subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootListener(){
    public void beforeRootsChange(    final ModuleRootEvent event){
    }
    public void rootsChanged(    final ModuleRootEvent event){
      myNontrivialPackagePrefixes=null;
      clearNonRepositoryMaps();
    }
  }
);
  connection.subscribe(VirtualFileManager.VFS_CHANGES,new BulkFileListener(){
    public void before(    final List<? extends VFileEvent> events){
      clearNonRepositoryMaps();
    }
    public void after(    final List<? extends VFileEvent> events){
      clearNonRepositoryMaps();
    }
  }
);
  connection.subscribe(AppTopics.FILE_DOCUMENT_SYNC,new FileDocumentManagerAdapter(){
    public void fileWithNoDocumentChanged(    final VirtualFile file){
      clearNonRepositoryMaps();
    }
  }
);
  myPackageIndex=PackageIndex.getInstance(myManager.getProject());
}
