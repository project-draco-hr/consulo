{
  final PsiBinaryExpression exp=(PsiBinaryExpression)findMatchingElement(file,editor);
  final PsiJavaToken sign=exp.getOperationSign();
  final boolean isEquals=sign.getTokenType() == JavaTokenType.EQEQ;
  final PsiExpression lhs=exp.getLOperand();
  final String lhsText=lhs.getText();
  final PsiExpression rhs=exp.getROperand();
  final String rhsText=rhs.getText();
  if ("true".equals(lhsText)) {
    if (isEquals) {
      replaceExpression(project,rhsText,exp);
    }
 else {
      replaceExpressionWithNegatedExpression(project,rhs,exp);
    }
  }
 else   if ("false".equals(lhsText)) {
    if (isEquals) {
      replaceExpressionWithNegatedExpression(project,rhs,exp);
    }
 else {
      replaceExpression(project,rhsText,exp);
    }
  }
 else   if ("true".equals(rhsText)) {
    if (isEquals) {
      replaceExpression(project,lhsText,exp);
    }
 else {
      replaceExpressionWithNegatedExpression(project,lhs,exp);
    }
  }
 else {
    if (isEquals) {
      replaceExpressionWithNegatedExpression(project,lhs,exp);
    }
 else {
      replaceExpression(project,lhsText,exp);
    }
  }
}
