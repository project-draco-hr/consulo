{
  PsiMethod equals=null;
  if (myEqualsFields != null && findMethod(myClass,getEqualsSignature(myProject,myClass.getResolveScope())) == null) {
    equals=createEquals();
  }
  PsiMethod hashCode=null;
  if (myHashCodeFields != null && findMethod(myClass,getHashCodeSignature()) == null) {
    if (myHashCodeFields.length > 0) {
      hashCode=createHashCode();
    }
 else {
      if (!mySuperHasHashCode) {
        @NonNls String text="";
        CodeStyleSettings styleSettings=CodeStyleSettingsManager.getSettings(myProject);
        if (styleSettings.INSERT_OVERRIDE_ANNOTATION && PsiUtil.isLanguageLevel5OrHigher(myClass)) {
          text+="@Override\n";
        }
        text+="public int hashCode() {\nreturn 0;\n}";
        final PsiMethod trivialHashCode=myFactory.createMethodFromText(text,null);
        hashCode=(PsiMethod)myCodeStyleManager.reformat(trivialHashCode);
      }
    }
  }
  if (hashCode != null && equals != null) {
    return Arrays.asList(equals,hashCode);
  }
 else   if (equals != null) {
    return Collections.singletonList(equals);
  }
 else   if (hashCode != null) {
    return Collections.singletonList(hashCode);
  }
 else {
    return Collections.emptyList();
  }
}
