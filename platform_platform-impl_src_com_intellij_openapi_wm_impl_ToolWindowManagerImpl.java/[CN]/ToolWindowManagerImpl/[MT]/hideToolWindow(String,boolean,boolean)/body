{
  ApplicationManager.getApplication().assertIsDispatchThread();
  checkId(id);
  final WindowInfoImpl info=getInfo(id);
  if (!info.isVisible())   return;
  final ArrayList<FinalizableCommand> commandList=new ArrayList<FinalizableCommand>();
  final boolean wasActive=info.isActive();
  deactivateToolWindowImpl(id,true,commandList);
  if (hideSide && !info.isFloating()) {
    final List<String> ids=myLayout.getVisibleIdsOn(info.getAnchor(),this);
    for (    String each : ids) {
      myActiveStack.remove(each,true);
    }
    final String[] all=getToolWindowIds();
    for (    String eachId : all) {
      final WindowInfoImpl eachInfo=getInfo(eachId);
      if (eachInfo.isVisible() && eachInfo.getAnchor() == info.getAnchor()) {
        deactivateToolWindowImpl(eachId,true,commandList);
      }
    }
    activateEditorComponentImpl(getSplittersFromFocus(),commandList,true);
  }
 else {
    myActiveStack.remove(id,false);
    if (wasActive && moveFocus) {
      if (myActiveStack.isEmpty()) {
        if (hasOpenEditorFiles()) {
          activateEditorComponentImpl(getSplittersFromFocus(),commandList,false);
        }
 else {
          focusToolWinowByDefault(id);
        }
      }
 else {
        final String toBeActivatedId=myActiveStack.pop();
        if (toBeActivatedId != null && getInfo(toBeActivatedId).isVisible()) {
          activateToolWindowImpl(toBeActivatedId,commandList,false,true);
        }
 else {
          focusToolWinowByDefault(id);
        }
      }
    }
  }
  execute(commandList);
}
