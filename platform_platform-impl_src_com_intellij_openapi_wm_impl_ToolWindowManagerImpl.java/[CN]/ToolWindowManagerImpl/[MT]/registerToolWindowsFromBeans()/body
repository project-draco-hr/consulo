{
  ToolWindowEP[] beans=Extensions.getExtensions(ToolWindowEP.EP_NAME);
  for (  final ToolWindowEP bean : beans) {
    final Condition<Project> condition=bean.getCondition();
    if (condition != null && !condition.value(myProject)) {
      continue;
    }
    ToolWindowAnchor toolWindowAnchor;
    try {
      toolWindowAnchor=ToolWindowAnchor.fromText(bean.anchor);
    }
 catch (    Exception e) {
      LOG.error(e);
      continue;
    }
    JLabel label=new JLabel("Initializing...",JLabel.CENTER);
    label.setOpaque(true);
    final Color treeBg=UIManager.getColor("Tree.background");
    label.setBackground(new Color(treeBg.getRed(),treeBg.getGreen(),treeBg.getBlue(),180));
    final Color treeFg=UIManager.getColor("Tree.foreground");
    label.setForeground(new Color(treeFg.getRed(),treeFg.getGreen(),treeFg.getBlue(),180));
    final ToolWindowFactory factory=bean.getToolWindowFactory();
    final ToolWindowImpl toolWindow=(ToolWindowImpl)registerToolWindow(bean.id,label,toolWindowAnchor,myProject,DumbService.isDumbAware(factory));
    toolWindow.setContentFactory(factory);
    if (bean.icon != null) {
      Icon icon=IconLoader.findIcon(bean.icon,factory.getClass());
      if (icon == null) {
        try {
          icon=IconLoader.getIcon(bean.icon);
        }
 catch (        Exception ignored) {
        }
      }
      toolWindow.setIcon(icon);
    }
    if (!getInfo(bean.id).isSplit() && bean.secondary && !myRestoredToolWindowIds.contains(bean.id)) {
      toolWindow.setSplitMode(bean.secondary,null);
    }
    final ActionCallback activation=toolWindow.setActivation(new ActionCallback());
    UiNotifyConnector.doWhenFirstShown(label,new Runnable(){
      public void run(){
        ApplicationManager.getApplication().invokeLater(new DumbAwareRunnable(){
          public void run(){
            toolWindow.ensureContentInitialized();
            activation.setDone();
          }
        }
);
      }
    }
);
  }
}
