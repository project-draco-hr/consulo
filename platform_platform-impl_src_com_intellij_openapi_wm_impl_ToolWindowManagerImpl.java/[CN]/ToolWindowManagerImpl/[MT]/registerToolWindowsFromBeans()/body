{
  ToolWindowEP[] beans=Extensions.getExtensions(ToolWindowEP.EP_NAME);
  for (  final ToolWindowEP bean : beans) {
    Condition<Project> mergedCond=Conditions.and(bean.getCondition(),bean.getModuleExtensionCondition());
    if (mergedCond.value(myProject)) {
      initToolWindow(bean);
    }
  }
  myProject.getMessageBus().connect().subscribe(ModuleExtension.ENABLE_TOPIC,new ModuleExtensionEnableListener(){
    @Override public void extensionEnableChanged(    @NotNull ModuleExtension<?> extension,    boolean extensionVal){
      ToolWindowEP[] beans=Extensions.getExtensions(ToolWindowEP.EP_NAME);
      for (      final ToolWindowEP bean : beans) {
        Condition<Project> mergedCond=Conditions.and(bean.getCondition(),bean.getModuleExtensionCondition());
        boolean value=mergedCond.value(myProject);
        if (extensionVal && value) {
          if (isToolWindowRegistered(bean.id)) {
            continue;
          }
          initToolWindow(bean);
        }
 else         if (!extensionVal && !value) {
          unregisterToolWindow(bean.id);
        }
      }
    }
  }
);
}
