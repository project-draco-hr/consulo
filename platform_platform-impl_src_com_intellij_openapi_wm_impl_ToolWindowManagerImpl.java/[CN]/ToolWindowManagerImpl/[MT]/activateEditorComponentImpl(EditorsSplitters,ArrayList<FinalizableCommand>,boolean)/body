{
  final String active=getActiveToolWindowId();
  appendRequestFocusInEditorComponentCmd(splitters,commandList,forced).doWhenDone(new Runnable(){
    public void run(){
      final ArrayList<FinalizableCommand> postExecute=new ArrayList<FinalizableCommand>();
      if (LOG.isDebugEnabled()) {
        LOG.debug("editor activated");
      }
      deactivateWindows(postExecute,null);
      myActiveStack.clear();
      myEditorComponentActive=true;
      execute(postExecute);
    }
  }
).doWhenRejected(new Runnable(){
    public void run(){
      if (forced) {
        getFocusManagerImpl().requestFocus(new FocusCommand(){
          public ActionCallback run(){
            final ArrayList<FinalizableCommand> cmds=new ArrayList<FinalizableCommand>();
            final WindowInfoImpl toReactivate=getInfo(active);
            final boolean reactivateLastActive=toReactivate != null && !isToHide(toReactivate);
            deactivateWindows(cmds,reactivateLastActive ? active : null);
            execute(cmds);
            if (reactivateLastActive) {
              activateToolWindow(active,false,true);
            }
 else {
              if (active != null) {
                myActiveStack.remove(active,false);
              }
              if (!myActiveStack.isEmpty()) {
                activateToolWindow(myActiveStack.peek(),false,true);
              }
            }
            return new ActionCallback.Done();
          }
        }
,false);
      }
    }
  }
);
}
