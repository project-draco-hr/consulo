{
  ToolWindowAnchor toolWindowAnchor;
  try {
    toolWindowAnchor=ToolWindowAnchor.fromText(bean.anchor);
  }
 catch (  Exception e) {
    LOG.error(e);
    return;
  }
  JLabel label=new JLabel("Initializing...",SwingConstants.CENTER);
  label.setOpaque(true);
  final Color treeBg=UIManager.getColor("Tree.background");
  label.setBackground(ColorUtil.toAlpha(treeBg,180));
  final Color treeFg=UIUtil.getTreeForeground();
  label.setForeground(ColorUtil.toAlpha(treeFg,180));
  final ToolWindowFactory factory=bean.getToolWindowFactory();
  final ToolWindowImpl toolWindow=(ToolWindowImpl)registerToolWindow(bean.id,label,toolWindowAnchor,myProject,DumbService.isDumbAware(factory),bean.canCloseContents);
  toolWindow.setContentFactory(factory);
  if (bean.icon != null && toolWindow.getIcon() == null) {
    Icon icon=IconLoader.findIcon(bean.icon,factory.getClass());
    if (icon == null) {
      try {
        icon=IconLoader.getIcon(bean.icon);
      }
 catch (      Exception ignored) {
      }
    }
    toolWindow.setIcon(icon);
  }
  if (!getInfo(bean.id).isSplit() && bean.secondary && !myRestoredToolWindowIds.contains(bean.id)) {
    toolWindow.setSplitMode(bean.secondary,null);
  }
  final ActionCallback activation=toolWindow.setActivation(new ActionCallback());
  final DumbAwareRunnable runnable=new DumbAwareRunnable(){
    @Override public void run(){
      if (toolWindow.isDisposed())       return;
      toolWindow.ensureContentInitialized();
      activation.setDone();
    }
  }
;
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    runnable.run();
  }
 else {
    UiNotifyConnector.doWhenFirstShown(label,new Runnable(){
      @Override public void run(){
        ApplicationManager.getApplication().invokeLater(runnable);
      }
    }
);
  }
}
