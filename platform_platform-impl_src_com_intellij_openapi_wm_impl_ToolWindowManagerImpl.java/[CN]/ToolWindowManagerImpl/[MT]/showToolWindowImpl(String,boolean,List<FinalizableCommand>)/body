{
  final WindowInfoImpl toBeShownInfo=getInfo(id);
  if (toBeShownInfo.isVisible() || !getToolWindow(id).isAvailable()) {
    return;
  }
  if (DumbService.getInstance(myProject).isDumb() && !myDumbAwareIds.contains(id)) {
    return;
  }
  toBeShownInfo.setVisible(true);
  final InternalDecorator decorator=getInternalDecorator(id);
  if (toBeShownInfo.isFloating()) {
    commandsList.add(new AddFloatingDecoratorCmd(decorator,toBeShownInfo));
  }
 else {
    final WindowInfoImpl[] infos=myLayout.getInfos();
    for (    final WindowInfoImpl info : infos) {
      if (id.equals(info.getId())) {
        continue;
      }
      if (info.isVisible() && info.getType() == toBeShownInfo.getType() && info.getAnchor() == toBeShownInfo.getAnchor() && info.isSplit() == toBeShownInfo.isSplit()) {
        info.setVisible(false);
        appendRemoveDecoratorCmd(info.getId(),false,commandsList);
        if (info.isActive()) {
          info.setActive(false);
        }
        appendApplyWindowInfoCmd(info,commandsList);
      }
    }
    appendAddDecoratorCmd(decorator,toBeShownInfo,dirtyMode,commandsList);
  }
  appendApplyWindowInfoCmd(toBeShownInfo,commandsList);
}
