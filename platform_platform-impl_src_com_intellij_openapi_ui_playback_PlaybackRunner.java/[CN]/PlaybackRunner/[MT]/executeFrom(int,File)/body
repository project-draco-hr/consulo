{
  if (cmdIndex < myCommands.size()) {
    final PlaybackCommand cmd=myCommands.get(cmdIndex);
    if (myStopRequested) {
      myCallback.message(this,"Stopped",cmdIndex);
      myActionCallback.setRejected();
      return;
    }
    final PlaybackContext context=new PlaybackContext(this,myCallback,cmdIndex,myRobot,myUseDirectActionCall,cmd,baseDir,(Set<Class>)myFacadeClasses.clone());
    final ActionCallback cmdCallback=cmd.execute(context);
    cmdCallback.doWhenDone(new Runnable(){
      public void run(){
        if (cmd.canGoFurther()) {
          executeFrom(cmdIndex + 1,context.getBaseDir());
        }
 else {
          myCallback.message(PlaybackRunner.this,"Stopped",cmdIndex);
          myActionCallback.setDone();
        }
      }
    }
).doWhenRejected(new Runnable(){
      public void run(){
        myCallback.message(PlaybackRunner.this,"Stopped",cmdIndex);
        myActionCallback.setRejected();
      }
    }
);
  }
 else {
    myCallback.message(this,"Finished",myCommands.size() - 1);
    myActionCallback.setDone();
  }
}
