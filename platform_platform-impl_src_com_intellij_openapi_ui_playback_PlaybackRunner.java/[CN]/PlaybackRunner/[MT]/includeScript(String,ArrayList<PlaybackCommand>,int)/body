{
  final StringTokenizer tokens=new StringTokenizer(scriptText,"\n");
  while (tokens.hasMoreTokens()) {
    final String eachLine=tokens.nextToken();
    String cdCmd=AbstractCommand.CMD_PREFIX + "cd";
    String includeCmd=AbstractCommand.CMD_PREFIX + "include";
    if (eachLine.startsWith(includeCmd)) {
      File file=PlaybackCallFacade.getFile(getBaseDir(),eachLine.substring(includeCmd.length()).trim());
      if (!file.exists()) {
        commandList.add(new ErrorCommand("Cannot find file to include: " + file.getAbsolutePath(),line));
        return;
      }
      try {
        String include=FileUtil.loadFile(file);
        myCommands.add(new PrintCommand(eachLine,line));
        includeScript(include,commandList,0);
      }
 catch (      IOException e) {
        commandList.add(new ErrorCommand("Error reading file: " + file.getAbsolutePath(),line));
        return;
      }
    }
 else     if (eachLine.startsWith(cdCmd)) {
      File dir=new File(eachLine.substring(cdCmd.length()).trim());
      if (!dir.exists()) {
        commandList.add(new ErrorCommand("Cannot cd to: " + dir.getPath(),line));
        return;
      }
      if (dir.isAbsolute()) {
        myBaseDir=dir;
        commandList.add(new PrintCommand("Base dir set to: " + myBaseDir.getAbsolutePath(),line++));
      }
 else {
        dir=new File(getBaseDir(),dir.getPath());
        if (!dir.exists()) {
          commandList.add(new ErrorCommand("Cannot cd to: " + dir.getAbsolutePath(),line));
          return;
        }
 else {
          myBaseDir=dir;
          commandList.add(new PrintCommand("Base dir set to: " + myBaseDir.getAbsolutePath(),line++));
        }
      }
    }
 else {
      final PlaybackCommand cmd=createCommand(eachLine,line++);
      commandList.add(cmd);
    }
  }
}
