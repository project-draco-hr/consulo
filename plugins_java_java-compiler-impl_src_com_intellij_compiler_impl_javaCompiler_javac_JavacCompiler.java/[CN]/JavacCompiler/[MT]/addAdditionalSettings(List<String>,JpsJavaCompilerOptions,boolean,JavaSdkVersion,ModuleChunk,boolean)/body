{
  final List<String> additionalOptions=new ArrayList<String>();
  StringTokenizer tokenizer=new StringTokenizer(new JavacSettingsBuilder(javacOptions).getOptionsString(chunk)," ");
  if (!version.isAtLeast(JavaSdkVersion.JDK_1_6)) {
    isAnnotationProcessing=false;
    annotationProcessorsEnabled=false;
  }
  if (isAnnotationProcessing) {
    final AnnotationProcessingConfiguration config=JavaCompilerConfiguration.getInstance(chunk.getProject()).getAnnotationProcessingConfiguration(chunk.getModules()[0]);
    additionalOptions.add("-Xprefer:source");
    additionalOptions.add("-implicit:none");
    additionalOptions.add("-proc:only");
    if (!config.isObtainProcessorsFromClasspath()) {
      final String processorPath=config.getProcessorPath();
      additionalOptions.add("-processorpath");
      additionalOptions.add(FileUtil.toSystemDependentName(processorPath));
    }
    final Set<String> processors=config.getProcessors();
    if (!processors.isEmpty()) {
      additionalOptions.add("-processor");
      additionalOptions.add(StringUtil.join(processors,","));
    }
    for (    Map.Entry<String,String> entry : config.getProcessorOptions().entrySet()) {
      additionalOptions.add("-A" + entry.getKey() + "="+ entry.getValue());
    }
  }
 else {
    if (annotationProcessorsEnabled) {
      additionalOptions.add("-proc:none");
    }
  }
  while (tokenizer.hasMoreTokens()) {
    @NonNls String token=tokenizer.nextToken();
    if (version == JavaSdkVersion.JDK_1_0 && "-deprecation".equals(token)) {
      continue;
    }
    if (!version.isAtLeast(JavaSdkVersion.JDK_1_5) && "-Xlint".equals(token)) {
      continue;
    }
    if (isAnnotationProcessing) {
      if (token.startsWith("-proc:")) {
        continue;
      }
      if (token.startsWith("-implicit:")) {
        continue;
      }
    }
 else {
      if (annotationProcessorsEnabled) {
        if (token.startsWith("-proc:")) {
          continue;
        }
      }
    }
    if (token.startsWith("-J-")) {
      commandLine.add(token.substring("-J".length()));
    }
 else {
      additionalOptions.add(token);
    }
  }
  return additionalOptions;
}
