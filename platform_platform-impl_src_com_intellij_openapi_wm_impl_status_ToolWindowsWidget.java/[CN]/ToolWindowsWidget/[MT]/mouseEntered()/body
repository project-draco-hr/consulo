{
  if (myAlarm.getActiveRequestCount() == 0) {
    myAlarm.addRequest(new Runnable(){
      @Override public void run(){
        DefaultListModel model=new DefaultListModel();
        final IdeFrameImpl frame=UIUtil.getParentOfType(IdeFrameImpl.class,ToolWindowsWidget.this);
        if (frame == null)         return;
        final ToolWindowManager toolWindowManager=ToolWindowManager.getInstance(frame.getProject());
        for (        String id : toolWindowManager.getToolWindowIds()) {
          final ToolWindow tw=toolWindowManager.getToolWindow(id);
          if (tw.isAvailable()) {
            model.addElement(tw);
          }
        }
        final JBList list=new JBList(model);
        list.setCellRenderer(new ListCellRenderer(){
          final JBLabel label=new JBLabel();
          @Override public Component getListCellRendererComponent(          JList list,          Object value,          int index,          boolean isSelected,          boolean cellHasFocus){
            final ToolWindow toolWindow=(ToolWindow)value;
            label.setText(toolWindow instanceof ToolWindowImpl ? ((ToolWindowImpl)toolWindow).getId() : toolWindow.getTitle());
            label.setIcon(toolWindow.getIcon());
            label.setBorder(IdeBorderFactory.createEmptyBorder(4,10,4,10));
            label.setForeground(UIUtil.getListForeground(isSelected));
            label.setBackground(UIUtil.getListBackground(isSelected));
            final JPanel panel=new JPanel(new BorderLayout());
            panel.add(label,BorderLayout.CENTER);
            panel.setBackground(UIUtil.getListBackground(isSelected));
            return panel;
          }
        }
);
        final Dimension size=list.getPreferredSize();
        final JComponent c=ToolWindowsWidget.this;
        final Insets padding=UIUtil.getListViewportPadding();
        final RelativePoint point=new RelativePoint(c,new Point(-4,-padding.top - padding.bottom - 4- size.height));
        if (popup != null && popup.isVisible()) {
          return;
        }
        list.setSelectedIndex(list.getItemsCount() - 1);
        PopupChooserBuilder builder=JBPopupFactory.getInstance().createListPopupBuilder(list);
        popup=builder.setAutoselectOnMouseMove(true).setRequestFocus(false).setItemChoosenCallback(new Runnable(){
          @Override public void run(){
            if (popup != null)             popup.closeOk(null);
            final Object value=list.getSelectedValue();
            if (value instanceof ToolWindow) {
              ((ToolWindow)value).activate(null,true,true);
            }
          }
        }
).createPopup();
        popup.show(point);
      }
    }
,300);
  }
}
