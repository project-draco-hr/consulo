{
  PsiAnnotationMemberValue fromClassAttr=magic.findAttributeValue(attributeName);
  PsiType fromClassType=fromClassAttr instanceof PsiClassObjectAccessExpression ? ((PsiClassObjectAccessExpression)fromClassAttr).getOperand().getType() : null;
  PsiClass fromClass=fromClassType instanceof PsiClassType ? ((PsiClassType)fromClassType).resolve() : null;
  if (fromClass == null)   return null;
  String fqn=fromClass.getQualifiedName();
  if (fqn == null)   return null;
  List<PsiAnnotationMemberValue> constants=new ArrayList<PsiAnnotationMemberValue>();
  for (  PsiField field : fromClass.getFields()) {
    if (!field.hasModifierProperty(PsiModifier.PUBLIC) || !field.hasModifierProperty(PsiModifier.STATIC) || !field.hasModifierProperty(PsiModifier.FINAL)) {
      continue;
    }
    PsiType fieldType=field.getType();
    if (!Comparing.equal(fieldType,type))     continue;
    PsiAssignmentExpression e=(PsiAssignmentExpression)JavaPsiFacade.getElementFactory(manager.getProject()).createExpressionFromText("x=" + fqn + "."+ field.getName(),field);
    PsiReferenceExpression refToField=(PsiReferenceExpression)e.getRExpression();
    constants.add(refToField);
  }
  if (constants.isEmpty())   return null;
  return constants.toArray(new PsiAnnotationMemberValue[constants.size()]);
}
