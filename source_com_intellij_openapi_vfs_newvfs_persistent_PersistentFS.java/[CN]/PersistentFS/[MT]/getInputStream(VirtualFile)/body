{
  InputStream contentStream=FILE_CONTENT.readAttribute(file);
  if (contentStream == null || mustReloadContent(file)) {
    if (contentStream != null)     contentStream.close();
    setFlag(file,MUST_RELOAD_CONTENT,false);
    final NewVirtualFileSystem delegate=getDelegate(file);
    final int len=(int)delegate.getLength(file);
    final InputStream nativeStream=delegate.getInputStream(file);
    final ByteArrayOutputStream cache=new ByteArrayOutputStream(len);
    return new ReplicatorInputStream(nativeStream,cache){
      public void close() throws IOException {
        super.close();
        if (getBytesRead() == len) {
          DataOutputStream sink=FILE_CONTENT.writeAttribute(file);
          try {
            FileUtil.copy(new ByteArrayInputStream(cache.toByteArray()),sink);
          }
  finally {
            sink.close();
          }
          myRecords.setLength(getFileId(file),len);
        }
 else {
          setFlag(file,MUST_RELOAD_CONTENT,true);
        }
      }
    }
;
  }
 else {
    return contentStream;
  }
}
