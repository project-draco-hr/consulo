{
  final Element frameElement=new Element(FRAME_ELEMENT);
  element.addContent(frameElement);
  final Project[] projects=ProjectManager.getInstance().getOpenProjects();
  final Project project;
  if (projects.length > 0) {
    project=projects[projects.length - 1];
  }
 else {
    project=null;
  }
  final IdeFrameImpl frame=getFrame(project);
  if (frame != null) {
    int extendedState=frame.getExtendedState();
    if (SystemInfo.isMacOSLion && frame.getPeer() instanceof FramePeer) {
      extendedState=((FramePeer)frame.getPeer()).getState();
    }
    boolean usePreviousBounds=extendedState == Frame.MAXIMIZED_BOTH || isFullScreenSupportedInCurrentOS() && WindowManagerEx.getInstanceEx().isFullScreen(frame);
    Rectangle rectangle=usePreviousBounds ? myFrameBounds : frame.getBounds();
    if (rectangle == null) {
      rectangle=ScreenUtil.getScreenRectangle(0,0);
    }
    frameElement.setAttribute(X_ATTR,Integer.toString(rectangle.x));
    frameElement.setAttribute(Y_ATTR,Integer.toString(rectangle.y));
    frameElement.setAttribute(WIDTH_ATTR,Integer.toString(rectangle.width));
    frameElement.setAttribute(HEIGHT_ATTR,Integer.toString(rectangle.height));
    frameElement.setAttribute(EXTENDED_STATE_ATTR,Integer.toString(extendedState));
    final Element layoutElement=new Element(DesktopLayout.TAG);
    element.addContent(layoutElement);
    myLayout.writeExternal(layoutElement);
  }
}
