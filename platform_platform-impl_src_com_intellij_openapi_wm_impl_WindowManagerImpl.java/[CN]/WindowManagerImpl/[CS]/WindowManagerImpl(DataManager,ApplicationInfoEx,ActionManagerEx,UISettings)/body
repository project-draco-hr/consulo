{
  myApplicationInfoEx=applicationInfoEx;
  myDataManager=dataManager;
  myActionManager=actionManager;
  myUiSettings=uiSettings;
  if (myDataManager instanceof DataManagerImpl) {
    ((DataManagerImpl)myDataManager).setWindowManager(this);
  }
  myCommandProcessor=new CommandProcessor();
  myWindowWatcher=new WindowWatcher();
  final KeyboardFocusManager keyboardFocusManager=KeyboardFocusManager.getCurrentKeyboardFocusManager();
  keyboardFocusManager.addPropertyChangeListener(FOCUSED_WINDOW_PROPERTY_NAME,myWindowWatcher);
  if (Patches.SUN_BUG_ID_4218084) {
    keyboardFocusManager.addPropertyChangeListener(FOCUSED_WINDOW_PROPERTY_NAME,new SUN_BUG_ID_4218084_Patch());
  }
  myLayout=new DesktopLayout();
  myProject2Frame=new HashMap<Project,IdeFrameImpl>();
  myDialogsToDispose=new HashMap<Project,Set<JDialog>>();
  myFrameExtendedState=Frame.NORMAL;
  Rectangle screenBounds=new Rectangle();
  if (!ApplicationManager.getApplication().isHeadlessEnvironment()) {
    final GraphicsEnvironment env=GraphicsEnvironment.getLocalGraphicsEnvironment();
    final GraphicsDevice[] devices=env.getScreenDevices();
    for (    final GraphicsDevice device : devices) {
      screenBounds=screenBounds.union(device.getDefaultConfiguration().getBounds());
    }
  }
  myScreenBounds=screenBounds;
  myActivationListener=new WindowAdapter(){
    public void windowActivated(    WindowEvent e){
      Window activeWindow=e.getWindow();
      if (activeWindow instanceof IdeFrameImpl) {
        proceedDialogDisposalQueue(((IdeFrameImpl)activeWindow).getProject());
      }
    }
  }
;
}
