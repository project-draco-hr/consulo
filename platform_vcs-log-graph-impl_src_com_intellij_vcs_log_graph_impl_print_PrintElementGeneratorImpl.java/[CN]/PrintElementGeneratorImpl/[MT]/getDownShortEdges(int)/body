{
  Function<GraphEdge,Integer> endPosition=createEndPositionFunction(rowIndex);
  List<ShortEdge> result=new ArrayList<ShortEdge>();
  List<GraphElement> visibleElements=getSortedVisibleElementsInRow(rowIndex);
  for (int startPosition=0; startPosition < visibleElements.size(); startPosition++) {
    GraphElement element=visibleElements.get(startPosition);
    if (element instanceof GraphNode) {
      for (      GraphEdge edge : myEdgesInRowGenerator.createDownEdges(((GraphNode)element).getNodeIndex())) {
        int endPos=endPosition.fun(edge);
        if (endPos != -1)         result.add(new ShortEdge(edge,startPosition,endPos));
      }
    }
    if (element instanceof GraphEdge) {
      GraphEdge edge=(GraphEdge)element;
      int endPos=endPosition.fun(edge);
      if (endPos != -1)       result.add(new ShortEdge(edge,startPosition,endPos));
    }
  }
  return result;
}
