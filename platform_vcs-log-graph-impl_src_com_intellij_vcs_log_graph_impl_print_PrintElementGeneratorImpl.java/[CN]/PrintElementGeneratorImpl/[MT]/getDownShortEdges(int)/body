{
  NullableFunction<GraphEdge,Integer> endPosition=createEndPositionFunction(rowIndex);
  List<ShortEdge> result=new ArrayList<>();
  List<GraphElement> visibleElements=getSortedVisibleElementsInRow(rowIndex);
  for (int startPosition=0; startPosition < visibleElements.size(); startPosition++) {
    GraphElement element=visibleElements.get(startPosition);
    if (element instanceof GraphNode) {
      int nodeIndex=((GraphNode)element).getNodeIndex();
      for (      GraphEdge edge : myLinearGraph.getAdjacentEdges(nodeIndex,EdgeFilter.ALL)) {
        if (isEdgeDown(edge,nodeIndex)) {
          Integer endPos=endPosition.fun(edge);
          if (endPos != null)           result.add(new ShortEdge(edge,startPosition,endPos));
        }
      }
    }
    if (element instanceof GraphEdge) {
      GraphEdge edge=(GraphEdge)element;
      Integer endPos=endPosition.fun(edge);
      if (endPos != null)       result.add(new ShortEdge(edge,startPosition,endPos));
    }
  }
  return result;
}
