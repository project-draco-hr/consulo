{
  if (jarFile.equals(myJarFile))   return;
  if (myJarFile != null && myJarFile.exists()) {
    MakeUtil.getInstance().copyFile(myJarFile,jarFile,context,null,fileFilter);
  }
 else {
    FileUtil.createParentDirs(jarFile);
    Manifest manifest=new Manifest();
    ManifestBuilder.setGlobalAttributes(manifest.getMainAttributes());
    final JarOutputStream jarOutputStream=new JarOutputStream(new BufferedOutputStream(new FileOutputStream(jarFile)),manifest);
    try {
      final THashSet<String> writtenPaths=new THashSet<String>();
      writtenPaths.add(JarFile.MANIFEST_NAME);
      boolean ok=ZipUtil.addDirToZipRecursively(jarOutputStream,jarFile,getFile(),"",fileFilter,writtenPaths);
      if (!ok) {
        String dirPath=getFile().getPath();
        MakeUtil.reportRecursiveCopying(context,dirPath,jarFile.getPath(),"",J2EEBundle.message("message.text.setup.jar.outside.directory.path",dirPath));
      }
    }
  finally {
      jarOutputStream.close();
    }
  }
  myJarFile=jarFile;
}
