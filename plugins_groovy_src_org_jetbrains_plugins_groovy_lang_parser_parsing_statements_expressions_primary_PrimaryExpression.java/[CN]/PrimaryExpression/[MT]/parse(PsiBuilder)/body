{
  if (TokenSets.BUILT_IN_TYPE.contains(builder.getTokenType())) {
    ParserUtils.eatElement(builder,BUILT_IN_TYPE);
    return PRIMARY_EXPRESSION;
  }
  if (kTHIS.equals(builder.getTokenType())) {
    ParserUtils.eatElement(builder,REFERENCE_EXPRESSION);
    return PRIMARY_EXPRESSION;
  }
  if (kSUPER.equals(builder.getTokenType())) {
    ParserUtils.eatElement(builder,REFERENCE_EXPRESSION);
    return PRIMARY_EXPRESSION;
  }
  if (mIDENT.equals(builder.getTokenType())) {
    ParserUtils.eatElement(builder,REFERENCE_EXPRESSION);
    return PRIMARY_EXPRESSION;
  }
  if (mGSTRING_SINGLE_BEGIN.equals(builder.getTokenType())) {
    StringConstructorExpression.parse(builder);
    return PRIMARY_EXPRESSION;
  }
  if (mLBRACK.equals(builder.getTokenType())) {
    ListOrMapConstructorExpression.parse(builder);
    return PRIMARY_EXPRESSION;
  }
  if (mLPAREN.equals(builder.getTokenType())) {
    return parenthesizedExprParse(builder);
  }
  if (mLCURLY.equals(builder.getTokenType())) {
    OpenOrClosableBlock.parseClosableBlock(builder);
    return PRIMARY_EXPRESSION;
  }
  if (TokenSets.CONSTANTS.contains(builder.getTokenType())) {
    ParserUtils.eatElement(builder,LITERAL);
    return PRIMARY_EXPRESSION;
  }
  return WRONGWAY;
}
