{
  if (!CodeInsightUtilBase.preparePsiElementForWrite(element))   return;
  final PsiNewExpression expression=PsiTreeUtil.getParentOfType(element,PsiNewExpression.class,false);
  if (expression == null) {
    return;
  }
  final PsiExpressionList arguments=expression.getArgumentList();
  if (arguments == null) {
    return;
  }
  final PsiMethod constructor=expression.resolveConstructor();
  if (constructor == null) {
    return;
  }
  final PsiExpressionList newArguments=createNewArguments(JavaPsiFacade.getElementFactory(project),constructor.getParameterList().getParameters(),arguments.getExpressions());
  if (newArguments == null) {
    return;
  }
  arguments.replace(newArguments);
}
