{
  final ReadWriteAccessDetector detector=ReadWriteAccessDetector.findDetector(target);
  final FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(target.getProject())).getFindUsagesManager();
  final FindUsagesHandler findUsagesHandler=findUsagesManager.getFindUsagesHandler(target,true);
  final LocalSearchScope scope=new LocalSearchScope(myFile);
  Collection<PsiReference> refs=findUsagesHandler != null ? findUsagesHandler.findReferencesToHighlight(target,scope) : ReferencesSearch.search(target,scope).findAll();
  for (  PsiReference psiReference : refs) {
    final List<TextRange> textRanges=HighlightUsagesHandler.getRangesToHighlight(psiReference);
    if (detector == null || detector.getReferenceAccess(target,psiReference) == ReadWriteAccessDetector.Access.Read) {
      myReadAccessRanges.addAll(textRanges);
    }
 else {
      myWriteAccessRanges.addAll(textRanges);
    }
  }
  final TextRange declRange=HighlightUsagesHandler.getNameIdentifierRange(myFile,target);
  if (declRange != null) {
    if (detector != null && detector.isDeclarationWriteAccess(target)) {
      myWriteAccessRanges.add(declRange);
    }
 else {
      myReadAccessRanges.add(declRange);
    }
  }
}
