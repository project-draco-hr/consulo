{
  if (!(element instanceof PsiAssignmentExpression)) {
    return false;
  }
  final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)element;
  final PsiExpression lhs=assignmentExpression.getLExpression();
  final PsiExpression strippedLhs=ParenthesesUtils.stripParentheses(lhs);
  if (!(strippedLhs instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)strippedLhs;
  final PsiElement target=referenceExpression.resolve();
  if (!(target instanceof PsiVariable)) {
    return false;
  }
  final PsiVariable variable=(PsiVariable)target;
  final PsiExpression rhs=assignmentExpression.getRExpression();
  if (!(rhs instanceof PsiBinaryExpression)) {
    return false;
  }
  final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)rhs;
  final PsiExpression rOperand=binaryExpression.getROperand();
  if (rOperand == null) {
    return false;
  }
  final PsiExpression lOperand=binaryExpression.getLOperand();
  final IElementType tokenType=binaryExpression.getOperationTokenType();
  if (lOperand instanceof PsiLiteral) {
    final PsiLiteral literal=(PsiLiteral)lOperand;
    final Object value=literal.getValue();
    if (ONE != value) {
      return false;
    }
    if (!VariableAccessUtils.evaluatesToVariable(rOperand,variable)) {
      return false;
    }
    return JavaTokenType.PLUS.equals(tokenType);
  }
 else   if (rOperand instanceof PsiLiteral) {
    final PsiLiteral literal=(PsiLiteral)rOperand;
    final Object value=literal.getValue();
    if (ONE != value) {
      return false;
    }
    if (!VariableAccessUtils.evaluatesToVariable(lOperand,variable)) {
      return false;
    }
    return !(!JavaTokenType.PLUS.equals(tokenType) && !JavaTokenType.MINUS.equals(tokenType));
  }
  return false;
}
