{
  LOG.assertTrue(myInitialized,"Access to psi files should be performed only after startup activity");
  LOG.assertTrue(!myDisposed,"Access to psi files should not be performed after disposal");
  ApplicationManager.getApplication().assertReadAccessAllowed();
  if (!vFile.isValid()) {
    LOG.error("File is not valid:" + vFile.getName());
  }
  if (!vFile.isDirectory())   return null;
  dispatchPendingEvents();
synchronized (PsiLock.LOCK) {
    PsiDirectory psiDir=myVFileToPsiDirMap.get(vFile);
    if (psiDir != null)     return psiDir;
    if (myProjectRootManager.getFileIndex().isIgnored(vFile))     return null;
    VirtualFile parent=vFile.getParent();
    if (parent != null) {
      findDirectory(parent);
    }
    psiDir=new PsiDirectoryImpl(myManager,vFile);
    myVFileToPsiDirMap.put(vFile,psiDir);
    return psiDir;
  }
}
