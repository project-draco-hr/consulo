{
  com.intellij.util.containers.HashMap<VirtualFile,PsiDirectory> fileToPsiDirMap=myVFileToPsiDirMap;
  if (useFind) {
    myVFileToPsiDirMap=new com.intellij.util.containers.HashMap<VirtualFile,PsiDirectory>();
  }
  for (Iterator<VirtualFile> iterator=fileToPsiDirMap.keySet().iterator(); iterator.hasNext(); ) {
    VirtualFile vFile=iterator.next();
    if (!vFile.isValid()) {
      iterator.remove();
      continue;
    }
    PsiDirectory psiDir=findDirectory(vFile);
    if (psiDir == null) {
      iterator.remove();
      continue;
    }
  }
  myVFileToPsiDirMap=fileToPsiDirMap;
  WeakValueHashMap<FileCacheEntry,PsiFile> fileToPsiFileMap=myVFileToPsiFileMap;
  if (useFind) {
    myVFileToPsiFileMap=new WeakValueHashMap<FileCacheEntry,PsiFile>();
  }
  for (Iterator<FileCacheEntry> iterator=fileToPsiFileMap.keySet().iterator(); iterator.hasNext(); ) {
    final FileCacheEntry fileCacheEntry=iterator.next();
    VirtualFile vFile=fileCacheEntry.getFirst();
    if (!vFile.isValid()) {
      iterator.remove();
      continue;
    }
    if (useFind) {
      PsiFile psiFile=fileToPsiFileMap.get(fileCacheEntry);
      if (psiFile == null) {
        iterator.remove();
        continue;
      }
      PsiFile psiFile1=findFile(vFile);
      if (psiFile1 == null) {
        iterator.remove();
        continue;
      }
      if (!psiFile1.getClass().equals(psiFile.getClass()))       iterator.remove();
    }
  }
  myVFileToPsiFileMap=fileToPsiFileMap;
}
