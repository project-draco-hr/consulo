{
  if (!myUseRepository) {
    return findClassWithoutRepository(qName);
  }
  if (!myInitialized) {
    LOG.error("Access to psi files should be performed only after startup activity");
    return null;
  }
  LOG.assertTrue(!myDisposed);
  if ("java.lang.Object".equals(qName)) {
synchronized (PsiLock.LOCK) {
      if (myCachedObjectClassMap == null) {
        myCachedObjectClassMap=new HashMap<GlobalSearchScope,PsiClass>();
      }
      PsiClass cached=myCachedObjectClassMap.get(scope);
      if (cached == null) {
        cached=_findClass(qName,scope);
        myCachedObjectClassMap.put(scope,cached);
      }
      return cached;
    }
  }
  return _findClass(qName,scope);
}
