{
  final PsiTypeCastExpression typeCastExpression=PsiTreeUtil.getParentOfType(element,PsiTypeCastExpression.class);
  final PsiMethod method=PsiTreeUtil.getParentOfType(element,PsiMethod.class);
  if (typeCastExpression == null || method == null) {
    return false;
  }
  final PsiExpression operand=typeCastExpression.getOperand();
  if (!(operand instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression operandReference=(PsiReferenceExpression)operand;
  final PsiElement resolved=operandReference.resolve();
  if (resolved == null || (!(resolved instanceof PsiParameter) && !(resolved instanceof PsiLocalVariable))) {
    return false;
  }
  final PsiLocalVariable replacement=findReplacement(method,(PsiVariable)resolved,typeCastExpression);
  if (replacement == null) {
    return false;
  }
  myReplaceVariableName=replacement.getName();
  setText(CodeInsightBundle.message("intention.replace.cast.with.var.text",typeCastExpression.getText(),myReplaceVariableName));
  return true;
}
