{
  super(block,whiteSpaceBefore,parent,textRange);
  myPreviousBlock=previousTokenBlock;
  final int lastLineNumber=model.getLineNumber(textRange.getEndOffset());
  int flagsValue=myFlags;
  final boolean containsLineFeeds=model.getLineNumber(textRange.getStartOffset()) != lastLineNumber;
  flagsValue|=containsLineFeeds ? CONTAIN_LINE_FEEDS : 0;
  int start=containsLineFeeds ? model.getLineStartOffset(lastLineNumber) : textRange.getStartOffset();
  int symbols=0;
  CharSequence text=model.getDocument().getCharsSequence();
  for (int i=start; i < textRange.getEndOffset(); i++) {
    if (text.charAt(i) == '\t') {
      symbols+=options.TAB_SIZE;
    }
 else {
      symbols++;
    }
  }
  mySymbolsAtTheLastLine=symbols;
  flagsValue|=isReadOnly ? READ_ONLY : 0;
  final boolean isLeaf=block.isLeaf();
  flagsValue|=isLeaf ? LEAF : 0;
  myFlags=flagsValue;
}
