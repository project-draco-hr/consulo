{
  final Set<String> indicesToUpdate=new HashSet<String>(myIndices.keySet());
  if (indicesToUpdate.size() == 0) {
    return;
  }
  indicator.pushState();
  try {
    indicator.setText("Indexing project content");
    ProjectRootManager.getInstance(project).getFileIndex().iterateContent(new ContentIterator(){
      public boolean processFile(      final VirtualFile file){
        if (!file.isDirectory()) {
          for (          String indexId : indicesToUpdate) {
            if (!IndexingStamp.isFileIndexed(file,indexId,getIndexCreationStamp(indexId)) && getInputFilter(indexId).acceptInput(file)) {
              try {
                indicator.setText2(file.getPresentableUrl());
                updateSingleIndex(indexId,file,new FileContent(file,loadContent(file)),null);
              }
 catch (              StorageException e) {
              }
            }
          }
        }
        return true;
      }
    }
);
  }
  finally {
    indicator.setText2("Saving caches");
    myFlushStorages.execute();
    indicator.popState();
  }
}
