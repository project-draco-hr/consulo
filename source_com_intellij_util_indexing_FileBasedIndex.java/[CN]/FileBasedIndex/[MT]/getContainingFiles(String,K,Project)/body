{
  final AbstractIndex<K,?> index=getIndex(indexId);
  if (index == null) {
    return Collections.emptyList();
  }
  final Set<Integer> files=new HashSet<Integer>();
  final DirectoryIndex dirIndex=project != null ? DirectoryIndex.getInstance(project) : null;
  final PersistentFS fs=(PersistentFS)PersistentFS.getInstance();
  final ValueContainer container=index.getData(dataKey);
  for (Iterator it=container.getValueIterator(); it.hasNext(); ) {
    final Object value=it.next();
    final ValueContainer.IntIterator inputIdsIterator=container.getInputIdsIterator(value);
    while (inputIdsIterator.hasNext()) {
      final int id=inputIdsIterator.next();
      if (dirIndex != null) {
        final DirectoryInfo directoryInfo=fs.isDirectory(id) ? dirIndex.getInfoForDirectoryId(id) : dirIndex.getInfoForDirectoryId(fs.getParent(id));
        if (directoryInfo != null && directoryInfo.contentRoot != null) {
          files.add(id);
        }
      }
 else {
        files.add(id);
      }
    }
  }
  return files;
}
