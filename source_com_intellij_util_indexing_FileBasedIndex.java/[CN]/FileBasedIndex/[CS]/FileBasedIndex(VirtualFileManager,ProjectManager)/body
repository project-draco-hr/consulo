{
  final FileBasedIndexExtension[] extensions=Extensions.getExtensions(FileBasedIndexExtension.EXTENSION_POINT_NAME);
  for (  FileBasedIndexExtension extension : extensions) {
    registerIndexer(extension.getName(),extension.getIndexer(),extension.getKeyDescriptor(),extension.getValueExternalizer(),extension.getInputFilter(),extension.getVersion());
  }
  dropUnregisteredIndices();
  final VirtualFileListener vfsListener=new MyVFSListener();
  vfManager.addVirtualFileListener(vfsListener);
  myDisposables.add(new Disposable(){
    public void dispose(){
      vfManager.removeVirtualFileListener(vfsListener);
    }
  }
);
  final ProjectManagerListener pmListener=new ProjectManagerAdapter(){
    public void projectOpened(    final Project project){
      StartupManager.getInstance(project).registerPostStartupActivity(new Runnable(){
        public void run(){
          new Task.Modal(project,"Indexing",false){
            public void run(            @NotNull final ProgressIndicator indicator){
              scanContent(project,indicator);
            }
          }
.queue();
        }
      }
);
    }
  }
;
  projectManager.addProjectManagerListener(pmListener);
  myDisposables.add(new Disposable(){
    public void dispose(){
      projectManager.removeProjectManagerListener(pmListener);
    }
  }
);
}
