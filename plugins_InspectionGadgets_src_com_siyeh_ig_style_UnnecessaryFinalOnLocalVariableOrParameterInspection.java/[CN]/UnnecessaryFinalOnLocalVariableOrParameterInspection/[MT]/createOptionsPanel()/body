{
  final JPanel panel=new JPanel(new GridBagLayout());
  final JCheckBox abstractOnlyCheckBox=new JCheckBox(InspectionGadgetsBundle.message("unnecessary.final.on.parameter.only.interface.option"),onlyWarnOnAbstractMethods){
    @Override public void setEnabled(    boolean b){
      super.setEnabled(reportParameters);
    }
  }
;
  abstractOnlyCheckBox.setEnabled(true);
  abstractOnlyCheckBox.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      onlyWarnOnAbstractMethods=abstractOnlyCheckBox.isSelected();
    }
  }
);
  final JCheckBox reportLocalVariablesCheckBox=new JCheckBox(InspectionGadgetsBundle.message("unnecessary.final.report.local.variables.option"),reportLocalVariables);
  final JCheckBox reportParametersCheckBox=new JCheckBox(InspectionGadgetsBundle.message("unnecessary.final.report.parameters.option"),reportParameters);
  reportLocalVariablesCheckBox.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      reportLocalVariables=reportLocalVariablesCheckBox.isSelected();
      if (!reportLocalVariables) {
        reportParametersCheckBox.setSelected(true);
      }
    }
  }
);
  reportParametersCheckBox.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      reportParameters=reportParametersCheckBox.isSelected();
      if (!reportParameters) {
        reportLocalVariablesCheckBox.setSelected(true);
      }
      abstractOnlyCheckBox.setEnabled(reportParameters);
    }
  }
);
  final GridBagConstraints constraints=new GridBagConstraints();
  constraints.anchor=GridBagConstraints.WEST;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  constraints.weightx=1.0;
  panel.add(reportLocalVariablesCheckBox,constraints);
  constraints.gridy=1;
  panel.add(reportParametersCheckBox,constraints);
  constraints.insets.left=20;
  constraints.gridy=2;
  panel.add(abstractOnlyCheckBox,constraints);
  return panel;
}
