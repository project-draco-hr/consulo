{
  if (type instanceof PsiPrimitiveType) {
    if (type.equals(PsiType.BOOLEAN) || type.equals(PsiType.VOID) || type.equals(PsiType.NULL))     return;
    Stack<PsiType> stack=new Stack<PsiType>();
    for (int i=PRIMITIVE_TYPES.length - 1; !PRIMITIVE_TYPES[i].equals(type); i--) {
      stack.push(PRIMITIVE_TYPES[i]);
    }
    while (!stack.empty()) {
      processType(stack.pop(),visitor,set);
    }
  }
 else {
    PsiManager manager=PsiManager.getInstance(project);
    GlobalSearchScope resolveScope=type.getResolveScope();
    if (resolveScope == null)     resolveScope=GlobalSearchScope.allScope(project);
    PsiClassType objectType=PsiType.getJavaLangObject(manager,resolveScope);
    processType(objectType,visitor,set);
    if (type instanceof PsiClassType) {
      PsiType[] superTypes=type.getSuperTypes();
      for (      PsiType superType : superTypes) {
        processType(superType,visitor,set);
        processAllSuperTypes(superType,visitor,project,set);
      }
    }
  }
}
