{
  if (method.isConstructor() && call instanceof PsiMethodCallExpression && ((PsiMethodCallExpression)call).getMethodExpression() instanceof PsiSuperExpression) {
    return TailTypes.CALL_RPARENTH_SEMICOLON;
  }
  final boolean chainable=!PsiType.VOID.equals(returnType) && returnType != null || method.isConstructor() && call instanceof PsiNewExpression;
  final PsiElement parent=call.getParent();
  final boolean statementContext=parent instanceof PsiExpressionStatement || parent instanceof PsiVariable || parent instanceof PsiCodeBlock;
  if (parent instanceof PsiThrowStatement || statementContext && !chainable) {
    return TailTypes.CALL_RPARENTH_SEMICOLON;
  }
  return TailTypes.CALL_RPARENTH;
}
