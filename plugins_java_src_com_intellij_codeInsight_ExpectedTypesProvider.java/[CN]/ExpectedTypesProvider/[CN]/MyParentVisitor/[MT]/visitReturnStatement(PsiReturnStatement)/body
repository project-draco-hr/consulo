{
  final PsiMethod method;
  final PsiType type;
  final boolean tailTypeSemicolon;
  final PsiLambdaExpression lambdaExpression=PsiTreeUtil.getParentOfType(statement,PsiLambdaExpression.class);
  if (lambdaExpression != null) {
    final PsiType functionalInterfaceType=lambdaExpression.getFunctionalInterfaceType();
    method=LambdaUtil.getFunctionalInterfaceMethod(functionalInterfaceType);
    type=LambdaUtil.getFunctionalInterfaceReturnType(functionalInterfaceType);
    tailTypeSemicolon=LambdaHighlightingUtil.insertSemicolonAfter(lambdaExpression);
  }
 else {
    method=PsiTreeUtil.getParentOfType(statement,PsiMethod.class);
    type=method != null ? method.getReturnType() : null;
    tailTypeSemicolon=true;
  }
  if (method != null) {
    visitMethodReturnType(method,type,tailTypeSemicolon);
  }
}
