{
  if (myExpr.equals(assignment.getRExpression())) {
    PsiExpression lExpr=assignment.getLExpression();
    PsiType type=lExpr.getType();
    if (type != null) {
      TailType tailType=getAssignmentRValueTailType(assignment);
      NullableComputable<String> expectedName=ExpectedTypeInfoImpl.NULL;
      if (lExpr instanceof PsiReferenceExpression) {
        PsiElement refElement=((PsiReferenceExpression)lExpr).resolve();
        if (refElement instanceof PsiVariable) {
          expectedName=getPropertyName((PsiVariable)refElement);
        }
      }
      ExpectedTypeInfoImpl info=createInfoImpl(type,ExpectedTypeInfo.TYPE_OR_SUBTYPE,type,tailType,null,expectedName);
      myResult=new ExpectedTypeInfo[]{info};
    }
 else {
      myResult=ExpectedTypeInfo.EMPTY_ARRAY;
    }
  }
 else {
    if (myForCompletion) {
      myExpr=(PsiExpression)myExpr.getParent();
      assignment.getParent().accept(this);
      return;
    }
    PsiExpression rExpr=assignment.getRExpression();
    if (rExpr != null) {
      PsiType type=rExpr.getType();
      if (type != null) {
        if (type instanceof PsiClassType) {
          final PsiClass resolved=((PsiClassType)type).resolve();
          if (resolved instanceof PsiAnonymousClass) {
            type=((PsiAnonymousClass)resolved).getBaseClassType();
          }
        }
        final int kind=assignment.getOperationTokenType() != JavaTokenType.EQ ? ExpectedTypeInfo.TYPE_STRICTLY : ExpectedTypeInfo.TYPE_OR_SUPERTYPE;
        ExpectedTypeInfoImpl info=createInfoImpl(type,kind,type,TailType.NONE);
        myResult=new ExpectedTypeInfo[]{info};
        return;
      }
    }
    myResult=ExpectedTypeInfo.EMPTY_ARRAY;
  }
}
