{
  if (!original.hasAttribute(HREF)) {
    throw new XIncludeException("Missing href attribute");
  }
  String href=original.getAttribute(HREF);
  String baseAttribute=original.getAttributeNS(XML_NAMESPACE,BASE);
  if (baseAttribute != null && baseAttribute.length() != 0) {
    base=baseAttribute;
  }
  String remote;
  if (base != null) {
    try {
      URL context=new URL(base);
      URL u=new URL(context,href);
      remote=u.toExternalForm();
    }
 catch (    MalformedURLException ex) {
      throw new XIncludeException("Unresolvable URL " + base + "/"+ href,ex);
    }
  }
 else {
    remote=href;
  }
  boolean parse=true;
  if (original.hasAttribute(PARSE)) {
    String parseAttribute=original.getAttribute(PARSE);
    if (parseAttribute.equals(TEXT)) {
      parse=false;
    }
  }
  if (parse) {
    if (bases.contains(remote)) {
      throw new XIncludeException("Circular XInclude Reference to " + remote + " in ");
    }
    try {
      bases.push(remote);
      incorporateInclude(remote,original,result,bases,resolved);
      bases.pop();
    }
 catch (    SAXException e) {
      throw new XIncludeException(e);
    }
catch (    IOException e) {
      throw new XIncludeException(e);
    }
catch (    ParserConfigurationException e) {
      throw new XIncludeException(e);
    }
  }
 else {
    String s=downloadTextDocument(remote);
    result.add(resolved.createTextNode(s));
  }
}
