{
  Document resultDocument=(Document)original.cloneNode(true);
  Element resultRoot=resultDocument.getDocumentElement();
  NodeList resolved=resolve(resultRoot,base,resultDocument);
  int numberRoots=0;
  for (int i=0; i < resolved.getLength(); i++) {
    if (resolved.item(i) instanceof Comment || resolved.item(i) instanceof ProcessingInstruction || resolved.item(i) instanceof DocumentType) {
    }
 else     if (resolved.item(i) instanceof Element) {
      numberRoots++;
    }
 else     if (resolved.item(i) instanceof Text) {
      throw new XIncludeException("Tried to include text node outside document element");
    }
 else {
      throw new XIncludeException("Cannot include a " + resolved.item(i).getNodeType() + " node");
    }
  }
  if (numberRoots != 1) {
    throw new XIncludeException("Tried to include multiple roots");
  }
  int nodeIndex=0;
  while (nodeIndex < resolved.getLength()) {
    if (resolved.item(nodeIndex) instanceof Element)     break;
    resultDocument.insertBefore(resolved.item(nodeIndex),resultRoot);
    nodeIndex++;
  }
  resultDocument.replaceChild(resolved.item(nodeIndex),resultRoot);
  nodeIndex++;
  Node refNode=resultDocument.getDocumentElement().getNextSibling();
  if (refNode == null) {
    while (nodeIndex < resolved.getLength()) {
      resultDocument.appendChild(resolved.item(nodeIndex));
      nodeIndex++;
    }
  }
 else {
    while (nodeIndex < resolved.getLength()) {
      resultDocument.insertBefore(resolved.item(nodeIndex),refNode);
      nodeIndex++;
    }
  }
  return resultDocument;
}
