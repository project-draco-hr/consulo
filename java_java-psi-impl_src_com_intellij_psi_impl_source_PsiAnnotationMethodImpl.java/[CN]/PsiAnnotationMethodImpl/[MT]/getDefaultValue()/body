{
  final PsiMethodStub stub=getStub();
  if (stub != null) {
    final String text=stub.getDefaultValueText();
    if (StringUtil.isEmpty(text))     return null;
    if (myCachedDefaultValue != null) {
      final PsiAnnotationMemberValue value=myCachedDefaultValue.get();
      if (value != null) {
        return value;
      }
    }
    @NonNls final String annoText="@interface _Dummy_ { Class foo() default " + text + "; }";
    final PsiJavaFile file=(PsiJavaFile)PsiFileFactory.getInstance(getProject()).createFileFromText("a.java",annoText);
    final PsiAnnotationMemberValue value=((PsiAnnotationMethod)file.getClasses()[0].getMethods()[0]).getDefaultValue();
    myCachedDefaultValue=new PatchedSoftReference<PsiAnnotationMemberValue>(value);
    return value;
  }
  myCachedDefaultValue=null;
  final ASTNode node=getNode().findChildByRole(ChildRole.ANNOTATION_DEFAULT_VALUE);
  if (node == null)   return null;
  return (PsiAnnotationMemberValue)node.getPsi();
}
