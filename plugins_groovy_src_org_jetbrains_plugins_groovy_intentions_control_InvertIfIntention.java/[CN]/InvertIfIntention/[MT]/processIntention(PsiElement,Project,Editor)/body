{
  PsiElement parent=element.getParent();
  if (!"if".equals(element.getText()) || !(parent instanceof GrIfStatement)) {
    throw new IncorrectOperationException("Not invoked on an if");
  }
  GrIfStatement parentIf=(GrIfStatement)parent;
  GroovyPsiElementFactory groovyPsiElementFactory=GroovyPsiElementFactory.getInstance(project);
  GrExpression condition=parentIf.getCondition();
  if (condition == null) {
    throw new IncorrectOperationException("Invoked on an if with empty condition");
  }
  GrExpression negatedCondition=null;
  if (condition instanceof GrUnaryExpression) {
    GrUnaryExpression unaryCondition=(GrUnaryExpression)condition;
    if ("!".equals(unaryCondition.getOperationToken().getText())) {
      negatedCondition=stripParenthesis(unaryCondition.getOperand());
    }
  }
  if (negatedCondition == null) {
    condition=stripParenthesis(condition);
    String negatedExpressionText;
    if (condition instanceof GrCallExpression || condition instanceof GrReferenceExpression) {
      negatedExpressionText="!" + condition.getText();
    }
 else {
      negatedExpressionText="!(" + condition.getText() + ")";
    }
    negatedCondition=groovyPsiElementFactory.createExpressionFromText(negatedExpressionText,parentIf);
  }
  GrStatement thenBranch=parentIf.getThenBranch();
  String newIfText="if (" + negatedCondition.getText() + ") "+ generateElseBranchTextAndRemoveTailStatements(parentIf);
  boolean isThenEmpty=thenBranch == null || (thenBranch instanceof GrBlockStatement) && ((GrBlockStatement)thenBranch).getBlock().getStatements().length == 0;
  if (!isThenEmpty) {
    newIfText+=" else " + thenBranch.getText();
  }
  GrIfStatement newIf=(GrIfStatement)groovyPsiElementFactory.createStatementFromText(newIfText,parentIf.getContext());
  parentIf.replace(CodeStyleManager.getInstance(project).reformat(newIf));
}
