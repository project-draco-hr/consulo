{
  String fileName=myFile == null ? "" : myFile.getName() + ": ";
  String failMessage="";
  if (markerInfos != null) {
    for (    LineMarkerInfo info : markerInfos) {
      if (!containsLineMarker(info,lineMarkerInfos.values())) {
        final int startOffset=info.startOffset;
        final int endOffset=info.endOffset;
        int y1=StringUtil.offsetToLineNumber(text,startOffset);
        int y2=StringUtil.offsetToLineNumber(text,endOffset);
        int x1=startOffset - StringUtil.lineColToOffset(text,y1,0);
        int x2=endOffset - StringUtil.lineColToOffset(text,y2,0);
        if (!failMessage.isEmpty())         failMessage+='\n';
        failMessage+=fileName + "Extra line marker highlighted " + "("+ (x1 + 1)+ ", "+ (y1 + 1)+ ")"+ "-"+ "("+ (x2 + 1)+ ", "+ (y2 + 1)+ ")"+ ": '"+ info.getLineMarkerTooltip()+ "'";
      }
    }
  }
  for (  LineMarkerInfo expectedLineMarker : lineMarkerInfos.values()) {
    if (markerInfos != null && !containsLineMarker(expectedLineMarker,markerInfos)) {
      final int startOffset=expectedLineMarker.startOffset;
      final int endOffset=expectedLineMarker.endOffset;
      int y1=StringUtil.offsetToLineNumber(text,startOffset);
      int y2=StringUtil.offsetToLineNumber(text,endOffset);
      int x1=startOffset - StringUtil.lineColToOffset(text,y1,0);
      int x2=endOffset - StringUtil.lineColToOffset(text,y2,0);
      if (!failMessage.isEmpty())       failMessage+='\n';
      failMessage+=fileName + "Line marker was not highlighted " + "("+ (x1 + 1)+ ", "+ (y1 + 1)+ ")"+ "-"+ "("+ (x2 + 1)+ ", "+ (y2 + 1)+ ")"+ ": '"+ expectedLineMarker.getLineMarkerTooltip()+ "'";
    }
  }
  if (!failMessage.isEmpty())   Assert.fail(failMessage);
}
