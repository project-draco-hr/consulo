{
  final String text=document.getText();
  final Set<String> markers=highlightingTypes.keySet();
  final String typesRx="(?:" + StringUtil.join(markers,")|(?:") + ")";
  final String openingTagRx="<(" + typesRx + ")"+ "(?:\\s+descr=\"((?:[^\"\\\\]|\\\\\"|\\\\\\\\\")*)\")?"+ "(?:\\s+type=\"([0-9A-Z_]+)\")?"+ "(?:\\s+foreground=\"([0-9xa-f]+)\")?"+ "(?:\\s+background=\"([0-9xa-f]+)\")?"+ "(?:\\s+effectcolor=\"([0-9xa-f]+)\")?"+ "(?:\\s+effecttype=\"([A-Z]+)\")?"+ "(?:\\s+fonttype=\"([0-9]+)\")?"+ "(/)?>";
  final Matcher matcher=Pattern.compile(openingTagRx).matcher(text);
  int pos=0;
  final Ref<Integer> textOffset=Ref.create(0);
  while (matcher.find(pos)) {
    textOffset.set(textOffset.get() + matcher.start() - pos);
    pos=extractExpectedHighlight(matcher,text,document,textOffset);
  }
}
