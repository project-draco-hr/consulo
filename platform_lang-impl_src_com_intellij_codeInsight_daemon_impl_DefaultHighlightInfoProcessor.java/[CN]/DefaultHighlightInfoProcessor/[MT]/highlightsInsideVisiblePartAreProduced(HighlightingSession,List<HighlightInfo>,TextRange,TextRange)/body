{
  final PsiFile psiFile=highlightingSession.getPsiFile();
  final Project project=psiFile.getProject();
  final Document document=PsiDocumentManager.getInstance(project).getDocument(psiFile);
  if (document == null)   return;
  final long modificationStamp=document.getModificationStamp();
  final TextRange priorityIntersection=priorityRange.intersection(restrictRange);
  final Editor editor=highlightingSession.getEditor();
  if (priorityIntersection == null) {
    showAutoImportPopups(editor,project,psiFile);
  }
 else {
    UIUtil.invokeLaterIfNeeded(new Runnable(){
      @Override public void run(){
        if (project.isDisposed() || modificationStamp != document.getModificationStamp())         return;
        MarkupModel markupModel=DocumentMarkupModel.forDocument(document,project,true);
        EditorColorsScheme scheme=editor == null ? null : editor.getColorsScheme();
        UpdateHighlightersUtil.setHighlightersInRange(project,document,priorityIntersection,scheme,infos,(MarkupModelEx)markupModel,highlightingSession.getPassId());
        showAutoImportPopups(editor,project,psiFile);
        if (editor != null) {
          DaemonListeners.repaintErrorStripeRenderer(editor,project);
        }
      }
    }
);
  }
}
