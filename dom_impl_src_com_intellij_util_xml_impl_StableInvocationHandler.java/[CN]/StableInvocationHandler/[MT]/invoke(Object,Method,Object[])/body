{
  if (StableElement.class.equals(method.getDeclaringClass())) {
    try {
      return method.invoke(this,args);
    }
 catch (    InvocationTargetException e) {
      throw e.getCause();
    }
  }
  if (AdvancedProxy.FINALIZE_METHOD.equals(method)) {
    return null;
  }
  if (isNotValid(myCachedValue)) {
    if (myCachedValue != null) {
      myOldValue=myCachedValue;
    }
    myCachedValue=myProvider.create();
    if (isNotValid(myCachedValue)) {
      if (myOldValue != null && Object.class.equals(method.getDeclaringClass())) {
        return method.invoke(myOldValue,args);
      }
      if ("isValid".equals(method.getName())) {
        return Boolean.FALSE;
      }
      throw new AssertionError("Calling methods on invalid value");
    }
  }
  try {
    return method.invoke(myCachedValue,args);
  }
 catch (  InvocationTargetException e) {
    throw e.getCause();
  }
}
