{
  final OutputToGeneralTestEventsConverter outputConsumer;
  outputConsumer=new OutputToGeneralTestEventsConverter(testFrameworkName,consoleProperties);
  final GeneralTestEventsProcessor eventsProcessor=new GeneralToSMTRunnerEventsConvertor(consoleProperties.getProject(),resultsViewer.getTestsRootNode(),testFrameworkName);
  final TServer open=open(factory.getPort(),factory.createHandler(eventsProcessor));
  if (locator != null) {
    eventsProcessor.setLocator(new CompositeTestLocationProvider(locator));
  }
  if (printerProvider != null) {
    eventsProcessor.setPrinterProvider(printerProvider);
  }
  final SMTRunnerUIActionsHandler uiActionsHandler=new SMTRunnerUIActionsHandler(consoleProperties);
  outputConsumer.setProcessor(eventsProcessor);
  eventsProcessor.addEventsListener(resultsViewer);
  resultsViewer.addEventsListener(uiActionsHandler);
  eventsProcessor.addEventsListener(statisticsPane.createTestEventsListener());
  processHandler.addProcessListener(new ProcessAdapter(){
    @Override public void processTerminated(    final ProcessEvent event){
      outputConsumer.flushBufferBeforeTerminating();
      try {
        open.stop();
      }
 catch (      Exception ignored) {
      }
      eventsProcessor.onFinishTesting();
      Disposer.dispose(eventsProcessor);
      Disposer.dispose(outputConsumer);
    }
    @Override public void onTextAvailable(    final ProcessEvent event,    final Key outputType){
      outputConsumer.process(event.getText(),outputType);
    }
  }
);
}
