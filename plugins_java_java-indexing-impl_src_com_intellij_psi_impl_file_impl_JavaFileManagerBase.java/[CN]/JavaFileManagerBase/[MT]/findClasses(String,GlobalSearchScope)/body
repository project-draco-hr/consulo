{
  final Collection<PsiClass> classes=JavaFullClassNameIndex.getInstance().get(qName.hashCode(),myManager.getProject(),scope);
  if (classes.isEmpty())   return PsiClass.EMPTY_ARRAY;
  List<PsiClass> result=new ArrayList<PsiClass>(classes.size());
  int count=0;
  PsiClass aClass=null;
  for (  PsiClass found : classes) {
    aClass=found;
    final String qualifiedName=aClass.getQualifiedName();
    if (qualifiedName == null || !qualifiedName.equals(qName))     continue;
    VirtualFile vFile=aClass.getContainingFile().getVirtualFile();
    if (!hasAcceptablePackage(vFile))     continue;
    result.add(aClass);
    count++;
  }
  if (count == 0)   return PsiClass.EMPTY_ARRAY;
  if (count == 1)   return new PsiClass[]{aClass};
  ContainerUtil.quickSort(result,new Comparator<PsiClass>(){
    @Override public int compare(    PsiClass o1,    PsiClass o2){
      return scope.compare(o2.getContainingFile().getVirtualFile(),o1.getContainingFile().getVirtualFile());
    }
  }
);
  return result.toArray(new PsiClass[count]);
}
