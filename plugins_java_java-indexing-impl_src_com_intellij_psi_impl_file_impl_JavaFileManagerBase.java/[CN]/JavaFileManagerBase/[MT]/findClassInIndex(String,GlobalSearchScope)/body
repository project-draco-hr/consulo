{
  VirtualFile bestFile=null;
  PsiClass bestClass=null;
  final Collection<PsiClass> classes=JavaFullClassNameIndex.getInstance().get(qName.hashCode(),myManager.getProject(),scope);
  for (  PsiClass aClass : classes) {
    PsiFile file=aClass.getContainingFile();
    if (file == null) {
      LOG.error("aClass=" + aClass);
      continue;
    }
    final boolean valid=aClass.isValid();
    VirtualFile vFile=file.getVirtualFile();
    if (!valid) {
      LOG.error("Invalid class " + aClass + "; "+ file+ (file.isValid() ? "" : " (invalid)")+ "; virtualFile:"+ vFile+ (vFile != null && !vFile.isValid() ? " (invalid)" : "")+ "; id="+ (vFile == null ? 0 : ((VirtualFileWithId)vFile).getId()),new PsiInvalidElementAccessException(aClass));
      continue;
    }
    final String qualifiedName=aClass.getQualifiedName();
    if (qualifiedName == null || !qualifiedName.equals(qName))     continue;
    if (!hasAcceptablePackage(vFile))     continue;
    if (bestFile == null || scope.compare(vFile,bestFile) > 0) {
      bestFile=vFile;
      bestClass=aClass;
    }
  }
  return bestClass;
}
