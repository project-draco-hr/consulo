{
  myManager=manager;
  myFileManager=manager.getFileManager();
  myProjectRootManager=projectRootManager;
  myUseRepository=true;
  myConnection=bus.connect();
  myConnection.subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootAdapter(){
    @Override public void rootsChanged(    final ModuleRootEvent event){
      myNontrivialPackagePrefixes=null;
      clearNonRepositoryMaps();
    }
  }
);
  myConnection.subscribe(VirtualFileManager.VFS_CHANGES,new BulkFileListener(){
    @Override public void before(    @NotNull final List<? extends VFileEvent> events){
      clearNonRepositoryMaps();
    }
    @Override public void after(    @NotNull final List<? extends VFileEvent> events){
      clearNonRepositoryMaps();
    }
  }
);
  myManager.registerRunnableToRunOnChange(new Runnable(){
    @Override public void run(){
      myCachedObjectClassMap.clear();
    }
  }
);
  Disposer.register(myManager.getProject(),this);
}
