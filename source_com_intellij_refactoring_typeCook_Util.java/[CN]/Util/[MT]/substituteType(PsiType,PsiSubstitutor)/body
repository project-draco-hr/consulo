{
  final int level=getArrayLevel(type);
  final PsiClassType.ClassResolveResult result=resolveType(type);
  if (result.getElement() != null) {
    final PsiClass aClass=result.getElement();
    final PsiSubstitutor aSubst=result.getSubstitutor();
    final PsiManager manager=aClass.getManager();
    if (aClass instanceof PsiTypeParameter) {
      final PsiType sType=subst.substitute(((PsiTypeParameter)aClass));
      return createArrayType(sType == null ? PsiType.getJavaLangObject(manager) : sType,level);
    }
    final PsiTypeParameter[] aParms=getTypeParametersList(aClass);
    PsiSubstitutor theSubst=PsiSubstitutor.EMPTY;
    for (int i=0; i < aParms.length; i++) {
      PsiTypeParameter aParm=aParms[i];
      theSubst=theSubst.put(aParm,substituteType(aSubst.substitute(aParm),subst));
    }
    return createArrayType(aClass.getManager().getElementFactory().createType(aClass,theSubst),level);
  }
  return createArrayType(type,level);
}
