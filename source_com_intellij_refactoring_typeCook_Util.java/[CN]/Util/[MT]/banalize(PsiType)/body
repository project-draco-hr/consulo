{
  if (t instanceof PsiClassType) {
    final PsiClassType.ClassResolveResult result=resolveType(t);
    final PsiClass theClass=result.getElement();
    if (theClass == null) {
      return t;
    }
    final PsiSubstitutor theSubst=result.getSubstitutor();
    final PsiManager theManager=theClass.getManager();
    PsiSubstitutor subst=PsiSubstitutor.EMPTY;
    for (final Iterator<PsiTypeParameter> p=theSubst.getSubstitutionMap().keySet().iterator(); p.hasNext(); ) {
      final PsiTypeParameter theParm=p.next();
      final PsiType actualType=theSubst.substitute(theParm);
      if (actualType == null || actualType instanceof PsiWildcardType) {
        subst=subst.put(theParm,Bottom.BOTTOM);
      }
 else {
        final PsiType banType=banalize(actualType);
        if (banType == null) {
          return t;
        }
        subst=subst.put(theParm,banType);
      }
    }
    return theManager.getElementFactory().createType(theClass,subst);
  }
 else   if (t instanceof PsiArrayType) {
    return banalize(((PsiArrayType)t).getComponentType()).createArrayType();
  }
  return t;
}
