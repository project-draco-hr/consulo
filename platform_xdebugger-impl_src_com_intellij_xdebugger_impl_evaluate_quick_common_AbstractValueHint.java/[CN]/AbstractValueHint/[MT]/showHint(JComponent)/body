{
  if (myCurrentHint != null) {
    myCurrentHint.hide();
  }
  myCurrentHint=new LightweightHint(component);
  myCurrentHint.addHintListener(new HintListener(){
    @Override public void hintHidden(    EventObject event){
      if (myHideRunnable != null) {
        myHideRunnable.run();
      }
    }
  }
);
  if (myEditor.isDisposed() || myEditor.getComponent().getRootPane() == null) {
    return false;
  }
  Point p=HintManagerImpl.getHintPosition(myCurrentHint,myEditor,myEditor.xyToLogicalPosition(myPoint),HintManager.UNDER);
  HintManagerImpl.getInstanceImpl().showEditorHint(myCurrentHint,myEditor,p,HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_SCROLLING,0,false,HintManagerImpl.createHintHint(myEditor,p,myCurrentHint,HintManager.UNDER,true));
  return true;
}
