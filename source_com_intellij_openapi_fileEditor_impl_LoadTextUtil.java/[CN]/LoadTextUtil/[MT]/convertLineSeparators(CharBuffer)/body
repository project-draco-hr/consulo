{
  final int LF=1;
  final int CR=2;
  int line_separator=0;
  int dst=0;
  char prev=' ';
  final int length=buffer.length();
  for (int src=0; src < length; src++) {
    char c=buffer.charAt(src);
switch (c) {
case '\r':
      buffer.put(dst++,'\n');
    line_separator=CR;
  break;
case '\n':
if (prev == '\r') {
  line_separator=CR + LF;
}
 else {
  buffer.put(dst++,'\n');
  line_separator=LF;
}
break;
default :
buffer.put(dst++,c);
break;
}
prev=c;
}
String detectedLineSeparator=null;
switch (line_separator) {
case CR:
detectedLineSeparator="\r";
break;
case LF:
detectedLineSeparator="\n";
break;
case CR + LF:
detectedLineSeparator="\r\n";
break;
}
CharSequence result;
if (buffer.length() == dst) {
result=buffer;
}
 else {
buffer.reset();
result=buffer.subSequence(0,dst);
}
return Pair.create(result,detectedLineSeparator);
}
