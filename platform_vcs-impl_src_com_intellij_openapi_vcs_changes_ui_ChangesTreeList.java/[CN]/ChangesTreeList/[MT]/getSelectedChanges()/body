{
  if (myShowFlatten) {
    final Object[] o=myList.getSelectedValues();
    final List<T> changes=new ArrayList<T>();
    for (    Object anO : o) {
      changes.add((T)anO);
    }
    return changes;
  }
 else {
    final List<T> changes=new ArrayList<T>();
    final Set<Integer> checkSet=new HashSet<Integer>();
    final TreePath[] paths=myTree.getSelectionPaths();
    if (paths != null) {
      for (      TreePath path : paths) {
        final ChangesBrowserNode node=(ChangesBrowserNode)path.getLastPathComponent();
        final List<T> objects=getSelectedObjects(node);
        for (        T object : objects) {
          final int hash=object.hashCode();
          if (!checkSet.contains(hash)) {
            changes.add(object);
            checkSet.add(hash);
          }
 else {
            if (!changes.contains(object)) {
              changes.add(object);
            }
          }
        }
      }
    }
    return changes;
  }
}
