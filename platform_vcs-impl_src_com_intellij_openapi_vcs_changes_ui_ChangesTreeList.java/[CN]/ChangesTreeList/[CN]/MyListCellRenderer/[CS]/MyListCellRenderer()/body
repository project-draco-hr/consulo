{
  super(new BorderLayout());
  myCheckbox=new JCheckBox();
  myTextRenderer=new ColoredListCellRenderer(){
    protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      final FilePath path=TreeModelBuilder.getPathForObject(value);
      if (path.isDirectory()) {
        setIcon(Icons.DIRECTORY_CLOSED_ICON);
      }
 else {
        setIcon(path.getFileType().getIcon());
      }
      final FileStatus fileStatus;
      if (value instanceof Change) {
        fileStatus=((Change)value).getFileStatus();
      }
 else {
        final VirtualFile virtualFile=path.getVirtualFile();
        if (virtualFile != null) {
          fileStatus=FileStatusManager.getInstance(myProject).getStatus(virtualFile);
        }
 else {
          fileStatus=FileStatus.NOT_CHANGED;
        }
      }
      append(path.getName(),new SimpleTextAttributes(SimpleTextAttributes.STYLE_PLAIN,fileStatus.getColor(),null));
      final File parentFile=path.getIOFile().getParentFile();
      if (parentFile != null) {
        append(" (" + parentFile.getPath() + ")",SimpleTextAttributes.GRAYED_ATTRIBUTES);
      }
      if ((value instanceof Change) && myChangeDecorator != null) {
        myChangeDecorator.decorate((Change)value,this);
      }
    }
  }
;
  myCheckbox.setBackground(null);
  setBackground(null);
  if (myShowCheckboxes) {
    add(myCheckbox,BorderLayout.WEST);
  }
  add(myTextRenderer,BorderLayout.CENTER);
}
