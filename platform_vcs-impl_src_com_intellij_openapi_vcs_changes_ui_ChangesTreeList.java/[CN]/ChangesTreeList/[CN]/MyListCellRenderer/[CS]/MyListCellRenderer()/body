{
  super(new BorderLayout());
  myCheckbox=new JCheckBox();
  myTextRenderer=new VirtualFileListCellRenderer(myProject){
    @Override protected void putParentPath(    Object value,    FilePath path,    FilePath self){
      super.putParentPath(value,path,self);
      final boolean applyChangeDecorator=(value instanceof Change) && myChangeDecorator != null;
      if (applyChangeDecorator) {
        myChangeDecorator.decorate((Change)value,this,isShowFlatten());
      }
    }
    @Override protected void putParentPathImpl(    Object value,    String parentPath,    FilePath self){
      final boolean applyChangeDecorator=(value instanceof Change) && myChangeDecorator != null;
      List<Pair<String,ChangeNodeDecorator.Stress>> parts=null;
      if (applyChangeDecorator) {
        parts=myChangeDecorator.stressPartsOfFileName((Change)value,parentPath);
      }
      if (parts == null) {
        super.putParentPathImpl(value,parentPath,self);
        return;
      }
      for (      Pair<String,ChangeNodeDecorator.Stress> part : parts) {
        append(part.getFirst(),part.getSecond().derive(SimpleTextAttributes.GRAYED_ATTRIBUTES));
      }
    }
    @Override public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      final Component component=super.getListCellRendererComponent(list,value,index,selected,hasFocus);
      final FileColorManager colorManager=FileColorManager.getInstance(myProject);
      if (!selected) {
        if (Registry.is("file.colors.in.commit.dialog") && colorManager.isEnabled() && colorManager.isEnabledForProjectView()) {
          if (value instanceof Change) {
            final VirtualFile file=((Change)value).getVirtualFile();
            if (file != null) {
              final Color color=colorManager.getFileColor(file);
              if (color != null) {
                component.setBackground(color);
              }
            }
          }
        }
      }
      return component;
    }
  }
;
  myCheckbox.setBackground(null);
  setBackground(null);
  if (myShowCheckboxes) {
    add(myCheckbox,BorderLayout.WEST);
  }
  add(myTextRenderer,BorderLayout.CENTER);
}
