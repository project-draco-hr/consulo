{
  super(Couple.class);
  final JTable entryTable=getEntryTable();
  myHeader=new PluginHeaderPanel(null,entryTable);
  entryTable.setTableHeader(null);
  entryTable.setDefaultRenderer(Couple.class,new ColoredTableCellRenderer(){
    @Override protected void customizeCellRenderer(    final JTable table,    final Object value,    final boolean selected,    final boolean hasFocus,    final int row,    final int column){
      setBorder(null);
      final Couple<IdeaPluginDescriptor> targetForUpdate=(Couple<IdeaPluginDescriptor>)value;
      if (targetForUpdate != null) {
        IdeaPluginDescriptor targetPluginDescriptor=targetForUpdate.getSecond();
        final String pluginName=targetPluginDescriptor.getName();
        append(pluginName,SimpleTextAttributes.REGULAR_ATTRIBUTES);
        final IdeaPluginDescriptor installedPluginDescriptor=targetForUpdate.getFirst();
        if (installedPluginDescriptor != null) {
          final String oldPluginName=installedPluginDescriptor.getName();
          if (!Comparing.strEqual(pluginName,oldPluginName)) {
            append(" - " + oldPluginName,SimpleTextAttributes.REGULAR_ATTRIBUTES);
          }
        }
        final String loadedVersion=targetPluginDescriptor.getVersion();
        if (loadedVersion != null || (installedPluginDescriptor != null && installedPluginDescriptor.getVersion() != null)) {
          final String installedVersion=installedPluginDescriptor != null && installedPluginDescriptor.getVersion() != null ? "v. " + installedPluginDescriptor.getVersion() + (loadedVersion != null ? " -> " : "") : "";
          final String availableVersion=loadedVersion != null ? loadedVersion : "";
          append(" (" + installedVersion + availableVersion+ ")",SimpleTextAttributes.GRAY_ATTRIBUTES);
        }
      }
    }
  }
);
  entryTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override @SuppressWarnings("unchecked") public void valueChanged(    ListSelectionEvent e){
      final int selectedRow=entryTable.getSelectedRow();
      if (selectedRow != -1) {
        final Couple<IdeaPluginDescriptor> selection=getValueAt(selectedRow);
        final IdeaPluginDescriptor descriptor=selection.getSecond();
        if (descriptor != null) {
          PluginManagerMain.pluginInfoUpdate(descriptor,null,myDescriptionPanel,myHeader,null);
        }
      }
    }
  }
);
  setCheckboxColumnName("");
  myDescriptionPanel.setPreferredSize(new Dimension(400,-1));
  myDescriptionPanel.setEditable(false);
  myDescriptionPanel.setContentType(UIUtil.HTML_MIME);
  myDescriptionPanel.addHyperlinkListener(new PluginManagerMain.MyHyperlinkListener());
  removeAll();
  final Splitter splitter=new Splitter(false);
  splitter.setFirstComponent(ScrollPaneFactory.createScrollPane(entryTable));
  splitter.setSecondComponent(ScrollPaneFactory.createScrollPane(myDescriptionPanel));
  add(splitter,BorderLayout.CENTER);
}
