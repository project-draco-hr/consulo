{
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      final PsiElement element=parameters.getPosition();
      if (psiElement().afterLeaf(psiElement().withText(")").withParent(PsiTypeCastExpression.class)).accepts(element))       return;
      final int offset=parameters.getOffset();
      final PsiReference reference=element.getContainingFile().findReferenceAt(offset);
      if (reference != null) {
        final ElementFilter filter=getReferenceFilter(element,false,false);
        final Set<LookupElement> set=JavaSmartCompletionContributor.completeReference(element,reference,filter,false);
        for (        final LookupElement item : set) {
          result.addElement(item);
        }
        if (parameters.getInvocationCount() >= 2) {
          ElementFilter baseFilter=getReferenceFilter(element,true,false);
          for (          final LookupElement baseItem : JavaSmartCompletionContributor.completeReference(element,reference,baseFilter,false)) {
            addSecondCompletionVariants(element,reference,baseItem,parameters,result);
          }
          BasicExpressionCompletionContributor.processDataflowExpressionTypes(element,null,new Consumer<CastingLookupElementDecorator>(){
            public void consume(            CastingLookupElementDecorator baseItem){
              addSecondCompletionVariants(element,reference,baseItem,parameters,result);
            }
          }
);
        }
      }
    }
  }
);
}
