{
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      final PsiElement element=parameters.getPosition();
      final int offset=parameters.getOffset();
      final PsiReference reference=element.getContainingFile().findReferenceAt(offset);
      if (reference != null) {
        final Pair<ElementFilter,TailType> pair=getReferenceFilter(element);
        if (pair != null) {
          final PsiFile originalFile=parameters.getOriginalFile();
          final TailType tailType=pair.second;
          final ElementFilter filter=pair.first;
          final THashSet<LookupItem> set=completeReference(element,reference,originalFile,tailType,filter,result);
          for (          final LookupItem item : set) {
            result.addElement(item);
          }
          if (parameters.getInvocationCount() >= 2) {
            for (            final LookupItem<?> qualifier : completeReference(element,reference,originalFile,tailType,TrueFilter.INSTANCE,result)) {
              final String prefix=getItemText(qualifier.getObject());
              if (prefix == null)               continue;
              final PsiSubstitutor substitutor=(PsiSubstitutor)qualifier.getAttribute(LookupItem.SUBSTITUTOR);
              try {
                final PsiElementFactory elementFactory=JavaPsiFacade.getInstance(element.getProject()).getElementFactory();
                final PsiExpression ref=elementFactory.createExpressionFromText(prefix + ".xxx",element);
                for (                final LookupItem<?> item : completeReference(element,(PsiReferenceExpression)ref,originalFile,tailType,filter,result)) {
                  if (item.getObject() instanceof PsiMethod) {
                    final PsiMethod method=(PsiMethod)item.getObject();
                    final QualifiedMethodLookupItem newItem=new QualifiedMethodLookupItem(method,prefix);
                    final PsiSubstitutor newSubstitutor=(PsiSubstitutor)item.getAttribute(LookupItem.SUBSTITUTOR);
                    if (substitutor != null || newSubstitutor != null) {
                      newItem.setAttribute(LookupItem.SUBSTITUTOR,substitutor == null ? newSubstitutor : newSubstitutor == null ? substitutor : substitutor.putAll(newSubstitutor));
                    }
                    result.addElement(newItem);
                  }
 else {
                    item.setAttribute(JavaCompletionUtil.QUALIFIER_PREFIX_ATTRIBUTE,prefix + ".");
                    item.setLookupString(prefix + "." + item.getLookupString());
                    result.addElement(item);
                  }
                }
              }
 catch (              IncorrectOperationException e) {
              }
            }
          }
        }
      }
    }
  }
);
  return true;
}
