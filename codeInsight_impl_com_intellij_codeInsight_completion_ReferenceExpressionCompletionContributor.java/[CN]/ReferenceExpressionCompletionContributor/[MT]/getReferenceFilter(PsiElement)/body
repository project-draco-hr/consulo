{
  if (psiElement().withParent(psiElement(PsiReferenceExpression.class).withParent(PsiThrowStatement.class)).accepts(element)) {
    return new Pair<ElementFilter,TailType>(TrueFilter.INSTANCE,TailType.SEMICOLON);
  }
  if (psiElement().afterLeaf(psiElement().withText(")").withParent(PsiTypeCastExpression.class)).accepts(element)) {
    return null;
  }
  if (PsiJavaPatterns.psiElement().afterLeaf(PsiKeyword.RETURN).inside(PsiReturnStatement.class).accepts(element)) {
    return new Pair<ElementFilter,TailType>(new ElementExtractorFilter(new ExcludeDeclaredFilter(new ClassFilter(PsiMethod.class))),TailType.UNKNOWN);
  }
  if (PsiJavaPatterns.psiElement().inside(PsiAnnotationParameterList.class).accepts(element)) {
    return new Pair<ElementFilter,TailType>(new ElementExtractorFilter(new AndFilter(new ClassFilter(PsiField.class),new ModifierFilter(PsiKeyword.STATIC,PsiKeyword.FINAL))),TailType.NONE);
  }
  if (PsiJavaPatterns.psiElement().inside(PsiJavaPatterns.psiElement(PsiVariable.class)).accepts(element)) {
    return new Pair<ElementFilter,TailType>(new AndFilter(new ElementExtractorFilter(new ExcludeDeclaredFilter(new ClassFilter(PsiVariable.class))),new ElementExtractorFilter(new ExcludeSillyAssignment())),TailType.NONE);
  }
  return new Pair<ElementFilter,TailType>(new ElementExtractorFilter(new ExcludeSillyAssignment()),TailType.NONE);
}
