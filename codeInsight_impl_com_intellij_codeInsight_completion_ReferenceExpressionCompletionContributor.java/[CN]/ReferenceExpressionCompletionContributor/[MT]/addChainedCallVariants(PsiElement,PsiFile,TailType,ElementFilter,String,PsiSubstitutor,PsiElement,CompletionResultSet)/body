{
  final PsiElementFactory elementFactory=JavaPsiFacade.getInstance(element.getProject()).getElementFactory();
  final PsiExpression ref=elementFactory.createExpressionFromText(getQualifierText(qualifier) + prefix + ".xxx",element);
  for (  final LookupItem<?> item : JavaSmartCompletionContributor.completeReference(element,(PsiReferenceExpression)ref,originalFile,tailType,qualifierFilter,result)) {
    if (item.getObject() instanceof PsiMethod) {
      final PsiMethod method=(PsiMethod)item.getObject();
      if (psiMethod().withName("toArray").withParameterCount(1).definedInClass(CommonClassNames.JAVA_UTIL_COLLECTION).accepts(method)) {
        continue;
      }
      final PsiMethod parentMethod=PsiTreeUtil.getParentOfType(element,PsiMethod.class);
      if (OBJECT_METHOD_PATTERN.accepts(method) && !(OBJECT_METHOD_PATTERN.accepts(parentMethod) && parentMethod != null && method.getName().equals(parentMethod.getName()))) {
        continue;
      }
      final QualifiedMethodLookupItem newItem=new QualifiedMethodLookupItem(method,prefix);
      final PsiSubstitutor newSubstitutor=(PsiSubstitutor)item.getAttribute(LookupItem.SUBSTITUTOR);
      if (substitutor != null || newSubstitutor != null) {
        newItem.setAttribute(LookupItem.SUBSTITUTOR,substitutor == null ? newSubstitutor : newSubstitutor == null ? substitutor : substitutor.putAll(newSubstitutor));
      }
      result.addElement(newItem);
    }
 else {
      item.setAttribute(JavaCompletionUtil.QUALIFIER_PREFIX_ATTRIBUTE,prefix + ".");
      item.setLookupString(prefix + "." + item.getLookupString());
      result.addElement(item);
    }
  }
}
