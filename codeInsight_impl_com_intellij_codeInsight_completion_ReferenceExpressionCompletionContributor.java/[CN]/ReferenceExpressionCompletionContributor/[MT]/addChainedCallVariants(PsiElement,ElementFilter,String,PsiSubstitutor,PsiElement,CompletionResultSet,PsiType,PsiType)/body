{
  final PsiElementFactory elementFactory=JavaPsiFacade.getInstance(element.getProject()).getElementFactory();
  final PsiExpression ref=elementFactory.createExpressionFromText(getQualifierText(qualifier) + prefix + ".xxx",element);
  String beautifulPrefix=prefix.endsWith(" )") ? prefix.substring(0,prefix.length() - 2) + ")" : prefix;
  for (  final LookupElement item : JavaSmartCompletionContributor.completeReference(element,(PsiReferenceExpression)ref,qualifierFilter,false)) {
    if (item.getObject() instanceof PsiMethod) {
      final PsiMethod method=(PsiMethod)item.getObject();
      if (psiMethod().withName("toArray").withParameterCount(1).definedInClass(CommonClassNames.JAVA_UTIL_COLLECTION).accepts(method)) {
        continue;
      }
      final PsiMethod parentMethod=PsiTreeUtil.getParentOfType(element,PsiMethod.class);
      if (isUselessObjectMethod(method,parentMethod,qualifierType)) {
        continue;
      }
      final PsiType type=method.getReturnType();
      if (type instanceof PsiClassType) {
        final PsiClassType classType=(PsiClassType)type;
        final PsiClass psiClass=classType.resolve();
        if (psiClass instanceof PsiTypeParameter && method.getTypeParameterList() == psiClass.getParent()) {
          final PsiTypeParameter typeParameter=(PsiTypeParameter)psiClass;
          if (typeParameter.getExtendsListTypes().length == 0)           continue;
          if (!expectedType.isAssignableFrom(TypeConversionUtil.typeParameterErasure(typeParameter)))           continue;
        }
      }
      final QualifiedMethodLookupItem newItem=new QualifiedMethodLookupItem(method,beautifulPrefix);
      final PsiSubstitutor newSubstitutor=(PsiSubstitutor)((LookupItem)item).getAttribute(LookupItem.SUBSTITUTOR);
      if (substitutor != null || newSubstitutor != null) {
        newItem.setAttribute(LookupItem.SUBSTITUTOR,substitutor == null ? newSubstitutor : newSubstitutor == null ? substitutor : substitutor.putAll(newSubstitutor));
      }
      result.addElement(newItem);
    }
 else {
      item.putUserData(JavaCompletionUtil.QUALIFIER_PREFIX_ATTRIBUTE,beautifulPrefix + ".");
      ((LookupItem)item).setLookupString(beautifulPrefix + "." + item.getLookupString());
      result.addElement(item);
    }
  }
}
