{
  final Object object=baseItem.getObject();
  final String prefix=getItemText(object);
  if (prefix == null)   return;
  final PsiSubstitutor substitutor=(PsiSubstitutor)((LookupItem)baseItem).getAttribute(LookupItem.SUBSTITUTOR);
  try {
    PsiType itemType=object instanceof PsiVariable ? ((PsiVariable)object).getType() : object instanceof PsiMethod ? ((PsiMethod)object).getReturnType() : null;
    if (substitutor != null) {
      itemType=substitutor.substitute(itemType);
    }
    if (itemType == null)     return;
    final PsiElement qualifier=getQualifier(reference.getElement());
    final PsiType expectedType=parameters.getExpectedType();
    if (!OBJECT_METHOD_PATTERN.accepts(object) || allowGetClass(object,parameters)) {
      if (!itemType.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {
        addChainedCallVariants(element,getReferenceFilter(element,true,true),prefix,substitutor,qualifier,result,itemType,expectedType);
      }
    }
    addArraysAsListConversions(element,prefix,itemType,result,qualifier,expectedType);
    addToArrayConversions(element,object,prefix,itemType,result,qualifier,expectedType);
    addArrayMemberAccessors(element,prefix,itemType,qualifier,result,(PsiModifierListOwner)object,expectedType);
  }
 catch (  IncorrectOperationException ignored) {
  }
}
