{
  String testFullPath=BASE_PATH + fileName;
  VirtualFile root=ModuleRootManager.getInstance(myModule).getContentRoots()[0].getParent();
  VirtualFile virtualFile=root.findFileByRelativePath(fileName);
  configureByExistingFile(virtualFile);
  Pair<String,Boolean> pair=LightQuickFixTestCase.parseActionHint(getFile(),getFile().getText());
  final String text=pair.getFirst();
  final boolean actionShouldBeAvailable=pair.getSecond().booleanValue();
  Collection<HighlightInfo> infosBefore=highlightErrors();
  IntentionAction action=findActionWithText(text,infosBefore);
  if (action == null) {
    if (actionShouldBeAvailable) {
      fail("Action with text '" + text + "' is not available in test "+ testFullPath+ "."+ "\nAvailable actions are: "+ LightQuickFixTestCase.getAvailableActions(getEditor(),getFile())+ "\nInfos are: "+ infosBefore);
    }
  }
 else {
    if (!actionShouldBeAvailable) {
      fail("Action '" + text + "' is available in test "+ testFullPath);
    }
    action.invoke(getProject(),getEditor(),getFile());
    Collection<HighlightInfo> infosAfter=highlightErrors();
    final IntentionAction afterAction=findActionWithText(text,infosAfter);
    if (afterAction != null) {
      fail("Action '" + text + "' is still available after its invocation in test "+ testFullPath);
    }
    assertEquals(infosBefore.size() - 1,infosAfter.size());
  }
}
