{
  Pair<String,CachedValue<Collection<String>>> userData=project.getUserData(LANGUAGE_ANNOTATED_STUFF);
  if (userData == null || !Comparing.equal(userData.first,languageAnnotationClass)) {
    userData=Pair.create(languageAnnotationClass,CachedValuesManager.getManager(project).createCachedValue(new CachedValueProvider<Collection<String>>(){
      public Result<Collection<String>> compute(){
        final Collection<String> result=new THashSet<String>();
        final ArrayList<String> annoClasses=new ArrayList<String>(3);
        annoClasses.add(StringUtil.getShortName(languageAnnotationClass));
        for (int cursor=0; cursor < annoClasses.size(); cursor++) {
          final String annoClass=annoClasses.get(cursor);
          for (          PsiAnnotation annotation : JavaAnnotationIndex.getInstance().get(annoClass,project,GlobalSearchScope.allScope(project))) {
            final PsiElement modList=annotation.getParent();
            if (!(modList instanceof PsiModifierList))             continue;
            final PsiElement element=modList.getParent();
            if (element instanceof PsiParameter) {
              final PsiElement scope=((PsiParameter)element).getDeclarationScope();
              if (scope instanceof PsiNamedElement) {
                ContainerUtil.addIfNotNull(((PsiNamedElement)scope).getName(),result);
              }
 else {
                ContainerUtil.addIfNotNull(((PsiNamedElement)element).getName(),result);
              }
            }
 else             if (element instanceof PsiNamedElement) {
              if (element instanceof PsiClass && ((PsiClass)element).isAnnotationType()) {
                final String s=((PsiClass)element).getName();
                if (!annoClasses.contains(s))                 annoClasses.add(s);
              }
 else {
                ContainerUtil.addIfNotNull(((PsiNamedElement)element).getName(),result);
              }
            }
          }
        }
        return new Result<Collection<String>>(result,PsiModificationTracker.MODIFICATION_COUNT,Configuration.getInstance());
      }
    }
,false));
    project.putUserData(LANGUAGE_ANNOTATED_STUFF,userData);
  }
  return userData.second.getValue();
}
