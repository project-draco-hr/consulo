{
  final String checkName;
  if (annoElement instanceof PsiParameter) {
    final PsiElement scope=((PsiParameter)annoElement).getDeclarationScope();
    checkName=scope instanceof PsiMethod ? ((PsiNamedElement)scope).getName() : ((PsiNamedElement)annoElement).getName();
  }
 else   if (annoElement instanceof PsiNamedElement) {
    checkName=((PsiNamedElement)annoElement).getName();
  }
 else   checkName=null;
  if (checkName == null || !areThereInjectionsWithName(checkName,true))   return true;
  final PsiAnnotation[] annotations=AnnotationUtilEx.getAnnotationFrom(annoElement,myConfiguration.getAdvancedConfiguration().getLanguageAnnotationPair(),true);
  if (annotations.length > 0) {
    final String id=AnnotationUtilEx.calcAnnotationValue(annotations,"value");
    final String prefix=AnnotationUtilEx.calcAnnotationValue(annotations,"prefix");
    final String suffix=AnnotationUtilEx.calcAnnotationValue(annotations,"suffix");
    final BaseInjection injection=new BaseInjection(LanguageInjectionSupport.JAVA_SUPPORT_ID);
    if (prefix != null)     injection.setPrefix(prefix);
    if (suffix != null)     injection.setSuffix(suffix);
    if (id != null)     injection.setInjectedLanguageId(id);
    processInjectionWithContext(myUnparsable,injection,false);
    return false;
  }
  return true;
}
