{
  for (  HierarchicalMethodSignature signatureHierarchical : allMethodsCollection) {
    final PsiMethod method=signatureHierarchical.getMethod();
    PsiClass containingClass=method.getContainingClass();
    if (containingClass == null) {
      continue;
    }
    final PsiResolveHelper resolveHelper=aClass.getManager().getResolveHelper();
    if (!aClass.equals(containingClass) && method.hasModifierProperty(PsiModifier.ABSTRACT) && !method.hasModifierProperty(PsiModifier.STATIC)&& !method.hasModifierProperty(PsiModifier.PRIVATE)) {
      return method;
    }
 else {
      final List<HierarchicalMethodSignature> superSignatures=signatureHierarchical.getSuperSignatures();
      for (      HierarchicalMethodSignature superSignatureHierarchical : superSignatures) {
        final PsiMethod superMethod=superSignatureHierarchical.getMethod();
        if (superMethod.hasModifierProperty(PsiModifier.ABSTRACT) && !resolveHelper.isAccessible(superMethod,method,null))         return superMethod;
      }
    }
  }
  return null;
}
