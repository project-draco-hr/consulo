{
  runGeneralHighlighting(file,highlightErrorElements,runAnnotators,new PairConsumer<PsiFile,HighlightInfo>(){
    @Override public void consume(    PsiFile file,    HighlightInfo info){
      TextRange range=new TextRange(info.startOffset,info.endOffset);
      PsiElement element=file.findElementAt(info.startOffset);
      while (element != null && !element.getTextRange().contains(range)) {
        element=element.getParent();
      }
      if (element == null) {
        element=file;
      }
      GlobalInspectionUtil.createProblem(element,info.description,HighlightInfo.convertType(info.type),range.shiftRight(-element.getNode().getStartOffset()),manager,problemDescriptionsProcessor,globalContext);
    }
  }
);
}
