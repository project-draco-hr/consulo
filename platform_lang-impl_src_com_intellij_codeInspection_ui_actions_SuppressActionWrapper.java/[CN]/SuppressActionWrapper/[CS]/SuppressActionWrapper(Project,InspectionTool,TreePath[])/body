{
  super(InspectionsBundle.message("suppress.inspection.problem"),false);
  myProject=project;
  myManager=(InspectionManagerEx)InspectionManager.getInstance(myProject);
  for (  TreePath path : paths) {
    final Object node=path.getLastPathComponent();
    if (!(node instanceof TreeNode))     continue;
    TreeUtil.traverse((TreeNode)node,new TreeUtil.Traverse(){
      @Override public boolean accept(      final Object node){
        final InspectionTreeNode n=(InspectionTreeNode)node;
        if (n.isLeaf()) {
          myNodesToSuppress.add(n);
        }
        return true;
      }
    }
);
  }
  myTool=tool;
}
