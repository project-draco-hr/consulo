{
  @NonNls final String prefix="\tat ";
  final String skipPattern=prefix + stackFrameSkipPattern;
  final StringWriter stringWriter=new StringWriter();
  @SuppressWarnings("IOResourceOpenedButNotSafelyClosed") final PrintWriter writer=new PrintWriter(stringWriter){
    boolean skipping=false;
    public void println(    final String x){
      boolean curSkipping=skipping;
      if (x != null) {
        if (!skipping && x.startsWith(skipPattern))         curSkipping=true;
 else         if (skipping && !x.startsWith(prefix))         curSkipping=false;
        if (curSkipping && !skipping) {
          super.println("\tin " + stripPackage(x,skipPattern.length()));
        }
        skipping=curSkipping;
        if (skipping)         return;
        super.println(x);
      }
    }
  }
;
  aThrowable.printStackTrace(writer);
  return stringWriter.getBuffer().toString();
}
