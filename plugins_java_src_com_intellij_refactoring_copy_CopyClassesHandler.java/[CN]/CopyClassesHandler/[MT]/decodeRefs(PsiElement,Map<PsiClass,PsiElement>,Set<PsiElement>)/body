{
  element.accept(new JavaRecursiveElementVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      decodeRef(expression,oldToNewMap,rebindExpressions);
      super.visitReferenceExpression(expression);
    }
    @Override public void visitNewExpression(    PsiNewExpression expression){
      final PsiJavaCodeReferenceElement referenceElement=expression.getClassReference();
      if (referenceElement != null) {
        decodeRef(referenceElement,oldToNewMap,rebindExpressions);
      }
      super.visitNewExpression(expression);
    }
    @Override public void visitTypeElement(    PsiTypeElement type){
      final PsiJavaCodeReferenceElement referenceElement=type.getInnermostComponentReferenceElement();
      if (referenceElement != null) {
        decodeRef(referenceElement,oldToNewMap,rebindExpressions);
      }
      super.visitTypeElement(type);
    }
  }
);
  rebindExternalReferences(element,oldToNewMap,rebindExpressions);
}
