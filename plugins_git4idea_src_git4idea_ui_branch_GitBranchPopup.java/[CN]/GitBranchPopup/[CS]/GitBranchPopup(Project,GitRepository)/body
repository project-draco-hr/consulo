{
  myProject=project;
  myCurrentRepository=currentRepository;
  myRepositoryManager=GitRepositoryManager.getInstance(project);
  myVcs=GitVcs.getInstance(project);
  myVcsSettings=GitVcsSettings.getInstance(myProject);
  myMultiRootBranchConfig=new GitMultiRootBranchConfig(myRepositoryManager.getRepositories());
  String title=createPopupTitle(currentRepository);
  myPopup=new PopupFactoryImpl.ActionGroupPopup(title,createActions(),SimpleDataContext.getProjectContext(project),false,false,false,true,null,-1,null,null){
    @Override protected WizardPopup createPopup(    WizardPopup parent,    PopupStep step,    Object parentValue){
      WizardPopup popup=super.createPopup(parent,step,parentValue);
      if (parentValue instanceof PopupFactoryImpl.ActionItem) {
        AnAction action=((PopupFactoryImpl.ActionItem)parentValue).getAction();
        if (action instanceof RootAction) {
          popup.setAdText(((RootAction)action).getCaption());
        }
      }
      return popup;
    }
  }
;
  initBranchSyncPolicyIfNotInitialized();
  setCurrentBranchInfo();
  warnThatBranchesDivergedIfNeeded();
}
