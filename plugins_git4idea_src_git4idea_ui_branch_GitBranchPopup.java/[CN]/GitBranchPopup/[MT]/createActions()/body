{
  DefaultActionGroup popupGroup=new DefaultActionGroup(null,false);
  GitRepositoryManager repositoryManager=GitRepositoryManager.getInstance(myProject);
  if (repositoryManager.moreThanOneRoot() && (getSyncSetting() != GitBranchSyncSetting.DONT)) {
    Collection<GitRepository> repositories=repositoryManager.getRepositories();
    GitMultiRootBranchConfig branchConfig=new GitMultiRootBranchConfig(repositories);
    popupGroup.add(new GitBranchPopupActions.NewBranchAction(myProject,repositories));
    popupGroup.addSeparator("Repositories");
    for (    GitRepository repository : repositoryManager.getRepositories()) {
      popupGroup.add(new RootAction(repository));
    }
    popupGroup.addSeparator("Common Local Branches");
    for (    String branch : branchConfig.getLocalBranches()) {
      if (!branch.equals(branchConfig.getCurrentBranch())) {
        popupGroup.add(new GitBranchPopupActions.LocalBranchActions(myProject,repositories,branch));
      }
    }
    popupGroup.addSeparator("Common Remote Branches");
    for (    String branch : branchConfig.getRemoteBranches()) {
      popupGroup.add(new GitBranchPopupActions.RemoteBranchActions(myProject,repositories,branch));
    }
  }
 else {
    popupGroup.addAll(new GitBranchPopupActions(myCurrentRepository.getProject(),myCurrentRepository).createActions());
  }
  popupGroup.addSeparator();
  return popupGroup;
}
