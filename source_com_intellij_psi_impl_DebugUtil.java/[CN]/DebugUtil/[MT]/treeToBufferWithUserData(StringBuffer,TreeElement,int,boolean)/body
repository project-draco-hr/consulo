{
  if (skipWhiteSpaces && root.getElementType() == ElementType.WHITE_SPACE)   return;
  for (int i=0; i < indent; i++) {
    buffer.append(' ');
  }
  if (root instanceof CompositeElement) {
    buffer.append(SourceTreeToPsiMap.treeElementToPsi(root).toString());
  }
 else {
    String text=root.getText();
    text=StringUtil.replace(text,"\n","\\n");
    text=StringUtil.replace(text,"\r","\\r");
    text=StringUtil.replace(text,"\t","\\t");
    buffer.append(root.toString() + "('" + text+ "')");
  }
  buffer.append(root.getUserDataString());
  buffer.append("\n");
  if (root instanceof CompositeElement || ((LeafElement)root).isChameleon()) {
    PsiElement[] children=SourceTreeToPsiMap.treeElementToPsi(root).getChildren();
    for (    PsiElement child : children) {
      treeToBufferWithUserData(buffer,(TreeElement)SourceTreeToPsiMap.psiElementToTree(child),indent + 2,skipWhiteSpaces);
    }
    if (children.length == 0) {
      for (int i=0; i < indent + 2; i++) {
        buffer.append(' ');
      }
      buffer.append("<empty list>\n");
    }
  }
}
