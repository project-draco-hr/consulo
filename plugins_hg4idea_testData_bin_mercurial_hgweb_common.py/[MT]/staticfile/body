def staticfile(directory, fname, req):
    "return a file inside directory with guessed Content-Type header\n\n    fname always uses '/' as directory separator and isn't allowed to\n    contain unusual path components.\n    Content-Type is guessed using the mimetypes module.\n    Return an empty string if fname is illegal or file not found.\n\n    "
    parts = fname.split('/')
    for part in parts:
        if ((part in ('', os.curdir, os.pardir)) or (os.sep in part) or ((os.altsep is not None) and (os.altsep in part))):
            return ''
    fpath = os.path.join(*parts)
    if isinstance(directory, str):
        directory = [directory]
    for d in directory:
        path = os.path.join(d, fpath)
        if os.path.exists(path):
            break
    try:
        os.stat(path)
        ct = (mimetypes.guess_type(path)[0] or 'text/plain')
        req.respond(HTTP_OK, ct, length=os.path.getsize(path))
        return open(path, 'rb').read()
    except TypeError:
        raise ErrorResponse(HTTP_SERVER_ERROR, 'illegal filename')
    except OSError as err:
        if (err.errno == errno.ENOENT):
            raise ErrorResponse(HTTP_NOT_FOUND)
        else:
            raise ErrorResponse(HTTP_SERVER_ERROR, err.strerror)
