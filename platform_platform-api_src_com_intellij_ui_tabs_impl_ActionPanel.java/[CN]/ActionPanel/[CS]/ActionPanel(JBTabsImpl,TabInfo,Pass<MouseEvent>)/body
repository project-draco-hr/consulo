{
  myTabs=tabs;
  ActionGroup group=tabInfo.getTabLabelActions() != null ? tabInfo.getTabLabelActions() : new DefaultActionGroup();
  AnAction[] children=group.getChildren(null);
  final NonOpaquePanel wrapper=new NonOpaquePanel(new BorderLayout());
  wrapper.add(Box.createHorizontalStrut(2),BorderLayout.WEST);
  NonOpaquePanel inner=new NonOpaquePanel();
  inner.setLayout(new BoxLayout(inner,BoxLayout.X_AXIS));
  wrapper.add(inner,BorderLayout.CENTER);
  for (  AnAction each : children) {
    ActionButton eachButton=new ActionButton(myTabs,tabInfo,each,tabInfo.getTabActionPlace(),pass,tabs.getTabActionsMouseDeadzone()){
      @Override protected void repaintComponent(      final Component c){
        TabLabel tabLabel=(TabLabel)SwingUtilities.getAncestorOfClass(TabLabel.class,c);
        if (tabLabel != null) {
          Point point=SwingUtilities.convertPoint(c,new Point(0,0),tabLabel);
          Dimension d=c.getSize();
          tabLabel.repaint(point.x,point.y,d.width,d.height);
        }
 else {
          super.repaintComponent(c);
        }
      }
    }
;
    myButtons.add(eachButton);
    InplaceButton component=eachButton.getComponent();
    inner.add(component);
  }
  add(wrapper);
}
