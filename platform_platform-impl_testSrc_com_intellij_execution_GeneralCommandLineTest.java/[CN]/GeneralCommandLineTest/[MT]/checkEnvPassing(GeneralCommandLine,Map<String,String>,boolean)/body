{
  commandLine.setEnvParams(testEnv);
  commandLine.setPassParentEnvs(passParentEnv);
  final Process process=commandLine.createProcess();
  final String output=FileUtil.loadTextAndClose(process.getInputStream());
  final int result=process.waitFor();
  assertEquals("Command:\n" + commandLine.getCommandLineString() + "\nOutput:\n"+ output,0,result);
  final Set<String> lines=new HashSet<String>(Arrays.asList(StringUtil.convertLineSeparators(output).split("\n")));
  lines.remove("=====");
  for (  Map.Entry<String,String> entry : testEnv.entrySet()) {
    final String str=EnvPassingTest.formatEntry(entry);
    assertTrue("\"" + str + "\" should be in "+ lines,lines.contains(str));
  }
  final Map<String,String> parentEnv=System.getenv();
  final List<String> missed=new ArrayList<String>();
  for (  Map.Entry<String,String> entry : parentEnv.entrySet()) {
    final String str=EnvPassingTest.formatEntry(entry);
    if (!lines.contains(str)) {
      missed.add(str);
    }
  }
  final long pctMissed=Math.round((100.0 * missed.size()) / parentEnv.size());
  if (passParentEnv && pctMissed >= 10 || !passParentEnv && pctMissed <= 90) {
    fail("% missed: " + pctMissed + ", missed: "+ missed+ ", passed: "+ lines);
  }
}
