{
  assertThread();
  if (descriptor.getFile() instanceof VirtualFileWindowImpl) {
    VirtualFileWindowImpl delegate=(VirtualFileWindowImpl)descriptor.getFile();
    int hostOffset=delegate.getDocumentWindow().injectedToHost(descriptor.getOffset());
    OpenFileDescriptor realDescriptor=new OpenFileDescriptor(descriptor.getProject(),delegate.getDelegate(),hostOffset);
    return openEditor(realDescriptor,focusEditor);
  }
  final List<FileEditor> result=new ArrayList<FileEditor>();
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    public void run(){
      VirtualFile file=descriptor.getFile();
      final FileEditor[] editors=openFile(file,focusEditor);
      result.addAll(Arrays.asList(editors));
      boolean navigated=false;
      for (      final FileEditor editor : editors) {
        if (editor instanceof NavigatableFileEditor && getSelectedEditor(descriptor.getFile()) == editor) {
          navigated=navigateAndSelectEditor((NavigatableFileEditor)editor,descriptor);
          if (navigated)           break;
        }
      }
      if (!navigated) {
        for (        final FileEditor editor : editors) {
          if (editor instanceof NavigatableFileEditor && getSelectedEditor(descriptor.getFile()) != editor) {
            if (navigateAndSelectEditor((NavigatableFileEditor)editor,descriptor)) {
              break;
            }
          }
        }
      }
    }
  }
,"",null);
  return result;
}
