{
  if (!ParserUtils.getToken(builder,mSTAR_STAR)) {
    marker.drop();
    return;
  }
  ParserUtils.getToken(builder,mNLS);
  if (!UnaryExpression.parse(builder,parser)) {
    builder.error(GroovyBundle.message("expression.expected"));
  }
  PsiBuilder.Marker newMarker=marker.precede();
  marker.done(POWER_EXPRESSION_SIMPLE);
  subParse(builder,parser,newMarker);
}
