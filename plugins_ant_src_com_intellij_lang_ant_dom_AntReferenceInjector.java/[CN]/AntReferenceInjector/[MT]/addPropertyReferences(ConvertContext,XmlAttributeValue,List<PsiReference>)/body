{
  final String value=xmlAttributeValue.getValue();
  final DomElement contextElement=context.getInvocationElement();
  if (xmlAttributeValue != null && value.indexOf("@{") < 0) {
    final int valueBeginingOffset=Math.abs(xmlAttributeValue.getTextRange().getStartOffset() - xmlAttributeValue.getValueTextRange().getStartOffset());
    int startIndex;
    int endIndex=-1;
    while ((startIndex=value.indexOf("${",endIndex + 1)) > endIndex) {
      if (startIndex > 0 && value.charAt(startIndex - 1) == '$') {
        endIndex=startIndex + 1;
        continue;
      }
      startIndex+=2;
      endIndex=startIndex;
      int nestedBrackets=0;
      while (value.length() > endIndex) {
        final char ch=value.charAt(endIndex);
        if (ch == '}') {
          if (nestedBrackets == 0) {
            break;
          }
          --nestedBrackets;
        }
 else         if (ch == '{') {
          ++nestedBrackets;
        }
        ++endIndex;
      }
      if (nestedBrackets > 0 || endIndex > value.length())       return;
      if (endIndex >= startIndex) {
        final String propName=value.substring(startIndex,endIndex);
        result.add(new AntDomPropertyReference(contextElement,xmlAttributeValue,propName,new TextRange(valueBeginingOffset + startIndex,valueBeginingOffset + endIndex)));
      }
      endIndex=startIndex;
    }
  }
}
