{
  String modelValue=element.getAttributeValue("model");
  Class<RadComponent> model=modelValue == null ? null : (Class<RadComponent>)classLoader.loadClass(modelValue);
  String target=element.getAttributeValue("class");
  String tag=element.getAttributeValue(TAG);
  MetaModel meta=new MetaModel(model,target,tag);
  String layout=element.getAttributeValue("layout");
  if (layout != null) {
    meta.setLayout((Class<RadLayout>)classLoader.loadClass(layout));
  }
  String delete=element.getAttributeValue("delete");
  if (delete != null) {
    meta.setDelete(Boolean.parseBoolean(delete));
  }
  Element presentation=element.getChild("presentation");
  if (presentation != null) {
    meta.setPresentation(presentation.getAttributeValue("title"),presentation.getAttributeValue("icon"));
  }
  Element palette=element.getChild("palette");
  if (palette != null) {
    meta.setPaletteItem(new Item(palette.getAttributeValue("title"),palette.getAttributeValue("icon"),palette.getAttributeValue("tooltip")));
  }
  Element creation=element.getChild("creation");
  if (creation != null) {
    meta.setCreation(creation.getTextTrim());
  }
  Element properties=element.getChild("properties");
  if (properties != null) {
    Attribute inplace=properties.getAttribute("inplace");
    if (inplace != null) {
      meta.setInplaceProperties(StringUtil.split(inplace.getValue()," "));
    }
    Attribute top=properties.getAttribute("top");
    if (top != null) {
      meta.setTopProperties(StringUtil.split(top.getValue()," "));
    }
    Attribute normal=properties.getAttribute("normal");
    if (normal != null) {
      meta.setNormalProperties(StringUtil.split(normal.getValue()," "));
    }
    Attribute important=properties.getAttribute("important");
    if (important != null) {
      meta.setImportantProperties(StringUtil.split(important.getValue()," "));
    }
    Attribute expert=properties.getAttribute("expert");
    if (expert != null) {
      meta.setExpertProperties(StringUtil.split(expert.getValue()," "));
    }
    Attribute deprecated=properties.getAttribute("deprecated");
    if (deprecated != null) {
      meta.setDeprecatedProperties(StringUtil.split(deprecated.getValue()," "));
    }
  }
  Element morphing=element.getChild("morphing");
  if (morphing != null) {
    modelToMorphing.put(meta,StringUtil.split(morphing.getAttribute("to").getValue()," "));
  }
  if (tag != null) {
    myTag2Model.put(tag,meta);
  }
  if (target != null) {
    myTarget2Model.put(target,meta);
  }
}
