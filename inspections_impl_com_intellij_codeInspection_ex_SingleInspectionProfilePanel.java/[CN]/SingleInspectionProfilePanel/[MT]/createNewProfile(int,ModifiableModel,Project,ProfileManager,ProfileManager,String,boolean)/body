{
  InputDialog dlg=new InputDialog(ideProfileManager != null && !project.isDefault(),profileName,!isLocalProfile ? InspectionsBundle.message("profile.save.as.ide.checkbox.title") : InspectionsBundle.message("profile.save.as.project.checkbox.title"),project);
  dlg.show();
  if (!dlg.isOK())   return null;
  profileName=dlg.getName();
  final boolean isLocal=(isLocalProfile && !dlg.isChecked()) || (!isLocalProfile && dlg.isChecked());
  ProfileManager profileManager=isLocal && ideProfileManager != null ? ideProfileManager : currentProfileManager;
  if (ArrayUtil.find(currentProfileManager.getAvailableProfileNames(),profileName) != -1 || (ideProfileManager != null && ArrayUtil.find(ideProfileManager.getAvailableProfileNames(),profileName) != -1)) {
    Messages.showErrorDialog(InspectionsBundle.message("inspection.unable.to.create.profile.message",profileName),InspectionsBundle.message("inspection.unable.to.create.profile.dialog.title"));
    return null;
  }
  try {
    InspectionProfileImpl inspectionProfile=new InspectionProfileImpl(profileName,profileManager.createUniqueProfileFile(profileName),InspectionToolRegistrar.getInstance(),profileManager);
    final ModifiableModel profileModifiableModel=inspectionProfile.getModifiableModel();
    if (selectedProfile != null) {
      profileModifiableModel.copyFrom(selectedProfile);
    }
    if (initValue == -1) {
      final InspectionProfileEntry[] profileEntries=profileModifiableModel.getInspectionTools();
      for (      InspectionProfileEntry entry : profileEntries) {
        profileModifiableModel.disableTool(entry.getShortName());
      }
    }
 else     if (initValue == 1) {
      profileModifiableModel.resetToBase();
    }
    profileModifiableModel.setName(profileName);
    profileModifiableModel.setLocal(isLocal);
    return profileModifiableModel;
  }
 catch (  IOException e) {
    LOG.error(e);
  }
  return null;
}
