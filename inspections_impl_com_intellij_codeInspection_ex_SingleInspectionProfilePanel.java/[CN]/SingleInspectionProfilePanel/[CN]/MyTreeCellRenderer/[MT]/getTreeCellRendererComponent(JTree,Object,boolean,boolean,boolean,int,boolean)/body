{
  invalidate();
  MyTreeNode node=(MyTreeNode)value;
  Object object=node.getUserObject();
  setOpaque(true);
  final Color background=selected ? UIUtil.getTreeSelectionBackground() : UIUtil.getTreeTextBackground();
  setBackground(background);
  myCheckbox.setSelected(node.isEnabled);
  myCheckbox.setOpaque(true);
  myCheckbox.setBackground(background);
  @NonNls String text=null;
  int style=Font.PLAIN;
  String hint=null;
  if (object instanceof String) {
    text=(String)object;
    style=Font.BOLD;
  }
 else   if (object instanceof Descriptor) {
    final Descriptor descriptor=(Descriptor)object;
    text=descriptor.getText();
    hint=getHint(descriptor);
  }
  Color foreground=selected ? UIUtil.getListSelectionForeground() : node.isProperSetting ? Color.BLUE : UIUtil.getTreeTextForeground();
  myTextRenderer.clear();
  if (text != null) {
    SearchUtil.appendFragments(myProfileFilter != null ? myProfileFilter.getFilter() : null,text,style,foreground,background,myTextRenderer);
  }
  if (hint != null) {
    myTextRenderer.append(" " + hint,selected ? new SimpleTextAttributes(Font.PLAIN,foreground) : SimpleTextAttributes.GRAYED_ATTRIBUTES);
  }
  setForeground(foreground);
  myCheckbox.setForeground(foreground);
  myTextRenderer.setForeground(foreground);
  return this;
}
