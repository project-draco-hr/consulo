{
  super.visitMethodCallExpression(call);
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  if (methodExpression == null) {
    return;
  }
  final String methodName=methodExpression.getReferenceName();
  if (!methodName.startsWith("get") && !methodName.startsWith("is")) {
    return;
  }
  final PsiExpressionList argList=call.getArgumentList();
  if (argList == null) {
    return;
  }
  final PsiExpression[] args=argList.getExpressions();
  if (args == null || args.length != 0) {
    return;
  }
  final PsiClass containingClass=ClassUtils.getContainingClass(call);
  if (containingClass == null) {
    return;
  }
  final PsiMethod method=call.resolveMethod();
  if (method == null) {
    return;
  }
  if (!containingClass.equals(method.getContainingClass())) {
    return;
  }
  if (!isSimpleGetter(method)) {
    return;
  }
  registerMethodCallError(call);
}
