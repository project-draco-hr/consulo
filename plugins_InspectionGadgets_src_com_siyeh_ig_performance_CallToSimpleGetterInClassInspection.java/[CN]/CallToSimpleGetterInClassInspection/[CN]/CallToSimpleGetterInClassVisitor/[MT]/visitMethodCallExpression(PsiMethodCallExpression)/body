{
  super.visitMethodCallExpression(call);
  final PsiClass containingClass=ClassUtils.getContainingClass(call);
  if (containingClass == null) {
    return;
  }
  final PsiMethod method=call.resolveMethod();
  if (method == null) {
    return;
  }
  if (!containingClass.equals(method.getContainingClass())) {
    return;
  }
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (ignoreGetterCallsOnOtherObjects && qualifier != null && !(qualifier instanceof PsiThisExpression)) {
    return;
  }
  if (!MethodUtils.isSimpleGetter(method)) {
    return;
  }
  registerMethodCallError(call);
}
