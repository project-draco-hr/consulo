{
  final TIntHashSet result=new TIntHashSet();
  for (  Instruction insn : flow) {
    if (insn instanceof ReadWriteVariableInstruction && !((ReadWriteVariableInstruction)insn).isWrite()) {
      final int ref=insn.num();
      TIntHashSet defs=dfaResult.get(ref);
      defs.forEach(new TIntProcedure(){
        public boolean execute(        int def){
          if (fragmentInsns.contains(def)) {
            if (!fragmentInsns.contains(ref) || postorder[ref] < postorder[def]) {
              result.add(ref);
              return false;
            }
          }
          return true;
        }
      }
);
    }
  }
  return result;
}
