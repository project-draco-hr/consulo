{
  final LinkedHashSet<Integer> result=new LinkedHashSet<Integer>();
  for (  final Instruction insn : flow) {
    if (isReadInsn(insn)) {
      final int ref=insn.num();
      for (      final int def : dfaResult.getDefinitions(ref)) {
        if (fragmentInsns.contains(def) && (!fragmentInsns.contains(ref) || postorder[ref] < postorder[def] && checkPathIsOutsideOfFragment(def,ref,flow,fragmentInsns))) {
          result.add(ref);
          break;
        }
      }
    }
  }
  return result;
}
