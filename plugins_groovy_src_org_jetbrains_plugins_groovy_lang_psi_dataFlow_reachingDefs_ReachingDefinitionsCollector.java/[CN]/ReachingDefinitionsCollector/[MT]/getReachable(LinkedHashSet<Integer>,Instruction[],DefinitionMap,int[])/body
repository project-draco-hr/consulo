{
  final LinkedHashSet<Integer> result=new LinkedHashSet<Integer>();
  for (  final Instruction insn : flow) {
    if (isReadInsn(insn)) {
      final int ref=insn.num();
      int[] definitions=dfaResult.getDefinitions(ref);
      if (definitions != null) {
        for (        final int def : definitions) {
          if (fragmentInsns.contains(def) && (!fragmentInsns.contains(ref) || postorder[ref] < postorder[def] && checkPathIsOutsideOfFragment(def,ref,flow,fragmentInsns))) {
            result.add(ref);
            break;
          }
        }
      }
    }
  }
  return result;
}
