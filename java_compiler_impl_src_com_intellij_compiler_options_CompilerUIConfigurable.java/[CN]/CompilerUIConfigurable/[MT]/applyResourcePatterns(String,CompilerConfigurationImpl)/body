{
  StringTokenizer tokenizer=new StringTokenizer(extensionString,";",false);
  List<String[]> errors=new ArrayList<String[]>();
  while (tokenizer.hasMoreTokens()) {
    String namePattern=tokenizer.nextToken();
    try {
      configuration.addResourceFilePattern(namePattern);
    }
 catch (    MalformedPatternException e) {
      errors.add(new String[]{namePattern,e.getLocalizedMessage()});
    }
  }
  if (errors.size() > 0) {
    final StringBuffer pattersnsWithErrors=new StringBuffer();
    for (    final Object error : errors) {
      String[] pair=(String[])error;
      pattersnsWithErrors.append("\n");
      pattersnsWithErrors.append(pair[0]);
      pattersnsWithErrors.append(": ");
      pattersnsWithErrors.append(pair[1]);
    }
    throw new ConfigurationException(CompilerBundle.message("error.compiler.configurable.malformed.patterns",pattersnsWithErrors.toString()),CompilerBundle.message("bad.resource.patterns.dialog.title"));
  }
}
