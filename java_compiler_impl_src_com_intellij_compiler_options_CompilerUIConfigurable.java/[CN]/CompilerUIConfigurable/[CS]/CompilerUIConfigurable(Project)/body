{
  myProject=project;
  final boolean isServerOptionEnabled=Registry.is("compiler.out-of-process.build.enabled") || ApplicationManager.getApplication().isInternal();
  myCbUseCompileServer.setVisible(isServerOptionEnabled);
  myCbMakeProjectOnSave.setVisible(isServerOptionEnabled);
  myPatternLegendLabel.setText("<html>" + "Use <b>;</b> to separate patterns and <b>!</b> to negate a pattern. " + "Accepted wildcards: <b>?</b> &mdash; exactly one symbol; <b>*</b> &mdash; zero or more symbols; "+ "<b>/</b> &mdash; path separator; <b>/**/</b> &mdash; any number of directories; "+ "<i>&lt;dir_name&gt;</i>:<i>&lt;pattern&gt;</i> &mdash; restrict to source roots with the specified name"+ "</html>");
  myCbUseCompileServer.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      myCbMakeProjectOnSave.setEnabled(myCbUseCompileServer.isSelected());
    }
  }
);
}
