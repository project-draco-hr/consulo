{
  if (element instanceof GrVariableDeclaration) {
    GrVariable[] variables=((GrVariableDeclaration)element).getVariables();
    if (variables.length == 1) {
      GrVariable var=variables[0];
      GrExpression initializer=var.getInitializerGroovy();
      if (initializer != null) {
        GrExpression assignment=GroovyPsiElementFactory.getInstance(project).createExpressionFromText(var.getName() + " = " + initializer.getText());
        initializer.delete();
        element=GroovyRefactoringUtil.addBlockIntoParent(element);
        element.getParent().addAfter(assignment,element);
      }
    }
 else     if (variables.length > 1) {
      String modifiers=((GrVariableDeclaration)element).getModifierList().getText();
      GrStatement[] sts=new GrStatement[variables.length];
      for (int i=0; i < variables.length; i++) {
        sts[i]=createVarDeclaration(project,variables[i],modifiers);
      }
      element=GroovyRefactoringUtil.addBlockIntoParent(element);
      for (int i=sts.length - 1; i >= 0; i--) {
        element.getParent().addAfter(sts[i],element);
      }
      element.delete();
    }
  }
}
