{
  LOGGER.debug("Found dependsOnMethods with text: " + methodName);
  if (methodName.charAt(methodName.length() - 1) == ')') {
    LOGGER.debug("dependsOnMethods contains ()" + psiClass.getName());
    ProblemDescriptor descriptor=manager.createProblemDescriptor(dep,"Method '" + methodName + "' should not include () characters.",(LocalQuickFix)null,ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
    problemDescriptors.add(descriptor);
  }
 else {
    boolean methodExists=false;
    PsiMethod[] methods=psiClass.getMethods();
    for (    PsiMethod method : methods) {
      LOGGER.debug("Checking method with name: " + method.getName());
      if (method.getName().equals(methodName)) {
        methodExists=true;
        break;
      }
    }
    if (!methodExists) {
      LOGGER.debug("dependsOnMethods method doesn't exist:" + methodName);
      ProblemDescriptor descriptor=manager.createProblemDescriptor(dep,"Method '" + methodName + "' unknown.",(LocalQuickFix)null,ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
      problemDescriptors.add(descriptor);
    }
  }
}
