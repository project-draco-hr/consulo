{
  Element compilerConfig=getCompilerConfig();
  if (compilerConfig == null)   return Collections.emptyMap();
  Map<String,String> res=null;
  String compilerArgument=compilerConfig.getChildText("compilerArgument");
  if (!StringUtil.isEmptyOrSpaces(compilerArgument)) {
    ParametersList parametersList=new ParametersList();
    parametersList.addParametersString(compilerArgument);
    for (    String param : parametersList.getParameters()) {
      if (param.startsWith("-A")) {
        int idx=param.indexOf('=',3);
        if (idx >= 0) {
          if (res == null) {
            res=new LinkedHashMap<String,String>();
          }
          res.put(param.substring(2,idx),param.substring(idx + 1));
        }
      }
    }
  }
  Element compilerArguments=compilerConfig.getChild("compilerArguments");
  if (compilerArguments != null) {
    for (    Element e : (Collection<Element>)compilerArguments.getChildren()) {
      String name=e.getName();
      if (name.length() > 1 && name.charAt(0) == 'A') {
        if (res == null) {
          res=new LinkedHashMap<String,String>();
        }
        res.put(name.substring(1),e.getTextTrim());
      }
    }
  }
  if (res == null)   return Collections.emptyMap();
  return res;
}
