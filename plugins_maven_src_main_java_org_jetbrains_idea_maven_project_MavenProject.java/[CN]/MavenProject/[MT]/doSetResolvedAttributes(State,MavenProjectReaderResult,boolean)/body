{
  org.apache.maven.project.MavenProject nativeMavenProject=readerResult.nativeMavenProject;
  Model model=nativeMavenProject.getModel();
  Set<MavenId> newUnresolvedArtifacts=new THashSet<MavenId>();
  LinkedHashSet<MavenRemoteRepository> newRepositories=new LinkedHashSet<MavenRemoteRepository>();
  LinkedHashSet<MavenArtifact> newDependencies=new LinkedHashSet<MavenArtifact>();
  LinkedHashSet<MavenPlugin> newPlugins=new LinkedHashSet<MavenPlugin>();
  LinkedHashSet<MavenArtifact> newExtensions=new LinkedHashSet<MavenArtifact>();
  if (!reset) {
    if (state.myUnresolvedArtifactIds != null)     newUnresolvedArtifacts.addAll(state.myUnresolvedArtifactIds);
    if (state.myRemoteRepositories != null)     newRepositories.addAll(state.myRemoteRepositories);
    if (state.myDependencies != null)     newDependencies.addAll(state.myDependencies);
    if (state.myPlugins != null)     newPlugins.addAll(state.myPlugins);
    if (state.myExtensions != null)     newExtensions.addAll(state.myExtensions);
  }
  newUnresolvedArtifacts.addAll(readerResult.unresolvedArtifactIds);
  newRepositories.addAll(convertRepositories(model.getRepositories()));
  newDependencies.addAll(convertArtifacts(nativeMavenProject.getArtifacts()));
  newPlugins.addAll(collectPlugins(model,state.myActiveProfilesIds));
  newExtensions.addAll(convertArtifacts(nativeMavenProject.getExtensionArtifacts()));
  state.myUnresolvedArtifactIds=newUnresolvedArtifacts;
  state.myRemoteRepositories=new ArrayList<MavenRemoteRepository>(newRepositories);
  state.myDependencies=new ArrayList<MavenArtifact>(newDependencies);
  state.myPlugins=new ArrayList<MavenPlugin>(newPlugins);
  state.myExtensions=new ArrayList<MavenArtifact>(newExtensions);
}
