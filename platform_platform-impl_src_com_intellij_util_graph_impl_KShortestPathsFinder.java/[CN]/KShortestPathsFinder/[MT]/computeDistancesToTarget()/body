{
  myNonTreeEdges=new MultiMap<Node,GraphEdge<Node>>();
  mySortedNodes=new ArrayList<Node>();
  myNextNodes=new HashMap<Node,Node>();
  TObjectIntHashMap<Node> distances=new TObjectIntHashMap<Node>();
  Deque<Node> nodes=new ArrayDeque<Node>();
  nodes.addLast(myFinish);
  distances.put(myFinish,0);
  while (!nodes.isEmpty()) {
    myProgressIndicator.checkCanceled();
    Node node=nodes.removeFirst();
    mySortedNodes.add(node);
    int d=distances.get(node) + 1;
    Iterator<Node> iterator=myGraph.getIn(node);
    while (iterator.hasNext()) {
      Node prev=iterator.next();
      if (distances.containsKey(prev)) {
        int dPrev=distances.get(prev);
        myNonTreeEdges.putValue(prev,new GraphEdge<Node>(prev,node,d - dPrev));
        continue;
      }
      distances.put(prev,d);
      myNextNodes.put(prev,node);
      nodes.addLast(prev);
    }
  }
}
