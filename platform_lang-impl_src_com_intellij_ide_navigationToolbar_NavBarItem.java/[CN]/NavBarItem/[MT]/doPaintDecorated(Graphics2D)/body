{
  Icon icon=myIcon;
  final Color bg=isSelected() && isFocused() ? UIUtil.getListSelectionBackground() : (UIUtil.isUnderGTKLookAndFeel() ? Color.WHITE : UIUtil.getListBackground());
  final Color c=UIUtil.getListSelectionBackground();
  final Color selBg=new Color(c.getRed(),c.getGreen(),c.getBlue(),getAlpha());
  int w=getWidth();
  int h=getHeight();
  if (!UIUtil.isUnderAquaLookAndFeel() || myPanel.isInFloatingMode() || (isSelected() && myPanel.hasFocus())) {
    g.setPaint(isSelected() && isFocused() ? selBg : bg);
    g.fillRect(0,0,w - (isLastElement() ? 0 : getDecorationOffset()),h);
  }
  final int offset=isFirstElement() ? getFirstElementLeftOffset() : 0;
  final int iconOffset=myPadding.left + offset;
  icon.paintIcon(this,g,iconOffset,(h - icon.getIconHeight()) / 2);
  final int textOffset=icon.getIconWidth() + myPadding.width() + offset;
  int x=doPaintText(g,textOffset,false);
  g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  g.translate(x,0);
  Path2D.Double path;
  int off=getDecorationOffset();
  if (isFocused()) {
    if (isSelected() && !isLastElement()) {
      path=new Path2D.Double();
      g.translate(2,0);
      path.moveTo(0,0);
      path.lineTo(off,h / 2);
      path.lineTo(0,h);
      path.lineTo(0,0);
      g.setColor(selBg);
      g.fill(path);
      g.translate(-2,0);
    }
    if (!UIUtil.isUnderAquaLookAndFeel() || myPanel.isInFloatingMode() || isNextSelected()) {
      if (!isLastElement()) {
        path=new Path2D.Double();
        path.moveTo(0,0);
        path.lineTo(off,h / 2);
        path.lineTo(0,h);
        path.lineTo(off + 2,h);
        path.lineTo(off + 2,0);
        path.lineTo(0,0);
        g.setColor(isNextSelected() ? selBg : UIUtil.getListBackground());
        g.fill(path);
      }
    }
  }
  if (!isLastElement() && ((!isSelected() && !isNextSelected()) || !myPanel.hasFocus())) {
    Image img;
    g.drawImage(SEPARATOR_PASSIVE,null,null);
  }
}
