{
  if (myExistingMessagesParsed) {
    return;
  }
  myExistingMessagesParsed=true;
  final StringBuffer document=myView.getLogConsole().getOriginalDocument();
  if (document == null) {
    return;
  }
  final Set<String> tagSet=new HashSet<String>();
  final Set<String> pidSet=new HashSet<String>();
  final String[] lines=StringUtil.splitByLines(document.toString());
  for (  String line : lines) {
    final Matcher matcher=AndroidLogFilterModel.ANDROID_LOG_MESSAGE_PATTERN.matcher(line);
    if (!matcher.matches()) {
      continue;
    }
    final String tag=matcher.group(1).trim();
    if (tag != null && tag.length() > 0) {
      tagSet.add(tag);
    }
    final String pid=matcher.group(2).trim();
    if (pid != null && pid.length() > 0) {
      try {
        Integer.parseInt(pid);
        pidSet.add(pid);
      }
 catch (      NumberFormatException ignored) {
      }
    }
  }
  myUsedTags=tagSet.toArray(new String[tagSet.size()]);
  myUsedPids=pidSet.toArray(new String[pidSet.size()]);
}
