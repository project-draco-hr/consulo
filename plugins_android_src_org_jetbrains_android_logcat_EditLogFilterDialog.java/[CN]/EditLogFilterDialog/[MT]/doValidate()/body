{
  final String name=myNameField.getText().trim();
  if (name.length() == 0) {
    return new ValidationInfo(AndroidBundle.message("android.logcat.new.filter.dialog.name.not.specified.error"),myNameField);
  }
  if (name.equals(AndroidLogcatView.EMPTY_CONFIGURED_FILTER)) {
    return new ValidationInfo(AndroidBundle.message("android.logcat.new.filter.dialog.name.busy.error",name));
  }
  final AndroidConfiguredLogFilters.MyFilterEntry entry=AndroidConfiguredLogFilters.getInstance(myView.getProject()).findFilterEntryByName(name);
  if (entry != null && entry != myEntry) {
    return new ValidationInfo(AndroidBundle.message("android.logcat.new.filter.dialog.name.busy.error",name));
  }
  try {
    final String tagPattern=myTagField.getText().trim();
    if (tagPattern.length() > 0) {
      Pattern.compile(tagPattern,AndroidConfiguredLogFilters.getPatternCompileFlags(tagPattern));
    }
  }
 catch (  PatternSyntaxException e) {
    final String message=e.getMessage();
    return new ValidationInfo(AndroidBundle.message("android.logcat.new.filter.dialog.incorrect.log.tag.pattern.error") + (message != null ? ('\n' + message) : ""));
  }
  try {
    final String messagePattern=myMessageField.getText().trim();
    if (messagePattern.length() > 0) {
      Pattern.compile(messagePattern,AndroidConfiguredLogFilters.getPatternCompileFlags(messagePattern));
    }
  }
 catch (  PatternSyntaxException e) {
    final String message=e.getMessage();
    return new ValidationInfo(AndroidBundle.message("android.logcat.new.filter.dialog.incorrect.message.pattern.error") + (message != null ? ('\n' + message) : ""));
  }
  boolean validPid=false;
  try {
    final String pidStr=myPidField.getText().trim();
    final Integer pid=pidStr.length() > 0 ? Integer.parseInt(pidStr) : null;
    if (pid == null || pid.intValue() >= 0) {
      validPid=true;
    }
  }
 catch (  NumberFormatException ignored) {
  }
  if (!validPid) {
    return new ValidationInfo(AndroidBundle.message("android.logcat.new.filter.dialog.incorrect.pid.error"));
  }
  return null;
}
