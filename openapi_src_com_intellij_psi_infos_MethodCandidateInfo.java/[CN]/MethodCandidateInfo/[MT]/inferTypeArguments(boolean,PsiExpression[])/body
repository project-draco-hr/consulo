{
  PsiMethod method=getElement();
  PsiTypeParameter[] typeParameters=method.getTypeParameters();
  if (!method.hasModifierProperty(PsiModifier.STATIC)) {
    final PsiClass containingClass=method.getContainingClass();
    if (containingClass != null && PsiUtil.isRawSubstitutor(containingClass,mySubstitutor)) {
      return createRawSubstitutor(mySubstitutor,typeParameters);
    }
  }
  PsiResolveHelper helper=JavaPsiFacade.getInstance(method.getProject()).getResolveHelper();
  return helper.inferTypeArguments(typeParameters,method.getParameterList().getParameters(),arguments,mySubstitutor,myArgumentList.getParent(),forCompletion);
}
