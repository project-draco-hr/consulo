{
  PsiMethod method=getElement();
  PsiSubstitutor partialSubstitutor=mySubstitutor;
  PsiExpression[] arguments=myArgumentList == null ? PsiExpression.EMPTY_ARRAY : myArgumentList.getExpressions();
  PsiTypeParameter[] typeParameters=method.getTypeParameters();
  if (method.getSignature(partialSubstitutor).isRaw()) {
    return createRawSubstitutor(partialSubstitutor,typeParameters);
  }
  PsiResolveHelper helper=method.getManager().getResolveHelper();
  for (  final PsiTypeParameter typeParameter : typeParameters) {
    final PsiParameter[] parameters=method.getParameterList().getParameters();
    PsiType substitution=helper.inferTypeForMethodTypeParameter(typeParameter,parameters,arguments,partialSubstitutor,myArgumentList.getParent(),forCompletion);
    if (substitution == null)     return createRawSubstitutor(partialSubstitutor,typeParameters);
    if (substitution == PsiType.NULL)     continue;
    if (substitution == PsiType.NULL || substitution == PsiType.VOID)     substitution=null;
    partialSubstitutor=partialSubstitutor.put(typeParameter,substitution);
  }
  return partialSubstitutor;
}
