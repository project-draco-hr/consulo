{
  final Project project=myTestFixture.getProject();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  final Editor editor=myTestFixture.getEditor();
  int[] ignore=externalToolPass == null || externalToolPass ? new int[]{com.intellij.codeHighlighting.Pass.LINE_MARKERS,com.intellij.codeHighlighting.Pass.LOCAL_INSPECTIONS,com.intellij.codeHighlighting.Pass.POPUP_HINTS,com.intellij.codeHighlighting.Pass.POST_UPDATE_ALL,com.intellij.codeHighlighting.Pass.UPDATE_ALL,com.intellij.codeHighlighting.Pass.UPDATE_FOLDING,com.intellij.codeHighlighting.Pass.UPDATE_OVERRIDEN_MARKERS,com.intellij.codeHighlighting.Pass.VISIBLE_LINE_MARKERS} : new int[]{com.intellij.codeHighlighting.Pass.EXTERNAL_TOOLS};
  return CodeInsightTestFixtureImpl.instantiateAndRun(myTestFixture.getFile(),editor,ignore,false);
}
