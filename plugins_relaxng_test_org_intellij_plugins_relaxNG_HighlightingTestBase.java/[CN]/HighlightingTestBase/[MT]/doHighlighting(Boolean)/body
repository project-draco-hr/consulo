{
  final Project project=myTestFixture.getProject();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  return ApplicationManager.getApplication().runReadAction(new Computable<Collection<HighlightInfo>>(){
    public Collection<HighlightInfo> compute(){
      final Editor editor=myTestFixture.getEditor();
      final List<TextEditorHighlightingPass> passes=TextEditorHighlightingPassRegistrarEx.getInstanceEx(project).instantiatePasses(myTestFixture.getFile(),editor,ArrayUtil.EMPTY_INT_ARRAY);
      final MockProgressIndicator progress=new MyMockProgressIndicator();
      Runnable runnable=new Runnable(){
        public void run(){
          for (          TextEditorHighlightingPass pass : passes) {
            if (includeExternalToolPass == null) {
              pass.collectInformation(progress);
            }
 else {
              if (includeExternalToolPass == pass instanceof ExternalToolPass) {
                pass.collectInformation(progress);
              }
            }
          }
          for (          TextEditorHighlightingPass pass : passes) {
            if (includeExternalToolPass == null) {
              pass.applyInformationToEditor();
            }
 else {
              if (includeExternalToolPass == pass instanceof ExternalToolPass) {
                pass.applyInformationToEditor();
              }
            }
          }
        }
      }
;
      ProgressManager.getInstance().runProcess(runnable,progress);
      List<HighlightInfo> infos=DaemonCodeAnalyzerImpl.getHighlights(editor.getDocument(),project);
      return infos == null ? Collections.<HighlightInfo>emptyList() : new ArrayList<HighlightInfo>(infos);
    }
  }
);
}
