{
  final PsiReference psiReference=myTestFixture.getReferenceAtCaretPositionWithAssertion(file + "." + ext);
  assertNull("Reference",psiReference.resolve());
  assertTrue("QuickFixProvider",psiReference instanceof QuickFixProvider);
  HighlightInfo info=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(0,0).descriptionAndTooltip("").create();
  ((QuickFixProvider)psiReference).registerQuickfix(info,psiReference);
  assertTrue("One action expected",info.quickFixActionRanges.size() == 1);
  final Pair<HighlightInfo.IntentionActionDescriptor,TextRange> rangePair=info.quickFixActionRanges.get(0);
  final IntentionAction action=rangePair.first.getAction();
  assertTrue("action is enabled",action.isAvailable(myTestFixture.getProject(),myTestFixture.getEditor(),myTestFixture.getFile()));
  myTestFixture.launchAction(action);
  myTestFixture.checkResultByFile(file + "_after." + ext);
}
