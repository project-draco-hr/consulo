{
  List<Comparable> options=ContainerUtil.newArrayList();
  final Set<String> words=myIndex.getProcessedWords(pattern);
  Set<OptionDescription> optionDescriptions=null;
  final String actionManagerName=myActionManager.getComponentName();
  for (  String word : words) {
    final Set<OptionDescription> descriptions=((SearchableOptionsRegistrarImpl)myIndex).getAcceptableDescriptions(word);
    if (descriptions != null) {
      for (Iterator<OptionDescription> iterator=descriptions.iterator(); iterator.hasNext(); ) {
        OptionDescription description=iterator.next();
        if (actionManagerName.equals(description.getPath())) {
          iterator.remove();
        }
      }
      if (!descriptions.isEmpty()) {
        if (optionDescriptions == null) {
          optionDescriptions=descriptions;
        }
 else {
          optionDescriptions.retainAll(descriptions);
        }
      }
    }
 else {
      optionDescriptions=null;
      break;
    }
  }
  if (optionDescriptions != null && !optionDescriptions.isEmpty()) {
    Set<String> currentHits=new HashSet<String>();
    for (Iterator<OptionDescription> iterator=optionDescriptions.iterator(); iterator.hasNext(); ) {
      OptionDescription description=iterator.next();
      final String hit=description.getHit();
      if (hit == null || !currentHits.add(hit.trim())) {
        iterator.remove();
      }
    }
    for (    OptionDescription description : optionDescriptions) {
      for (      ActionFromOptionDescriptorProvider converter : ActionFromOptionDescriptorProvider.EP.getExtensions()) {
        AnAction action=converter.provide(description);
        if (action != null)         options.add(new ActionWrapper(action,null,MatchMode.NAME,dataContext));
        options.add(description);
      }
    }
  }
  return processItems(pattern,options,consumer);
}
