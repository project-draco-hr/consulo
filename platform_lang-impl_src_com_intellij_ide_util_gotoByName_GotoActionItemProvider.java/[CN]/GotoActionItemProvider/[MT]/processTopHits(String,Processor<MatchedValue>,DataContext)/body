{
  Project project=CommonDataKeys.PROJECT.getData(dataContext);
  final CollectConsumer<Object> collector=new CollectConsumer<Object>();
  for (  SearchTopHitProvider provider : SearchTopHitProvider.EP_NAME.getExtensions()) {
    if (provider instanceof OptionsTopHitProvider.CoveredByToggleActions)     continue;
    if (provider instanceof OptionsTopHitProvider && !((OptionsTopHitProvider)provider).isEnabled(project))     continue;
    if (provider instanceof OptionsTopHitProvider && !StringUtil.startsWith(pattern,"#")) {
      String prefix="#" + ((OptionsTopHitProvider)provider).getId() + " ";
      provider.consumeTopHits(prefix + pattern,collector,project);
    }
    provider.consumeTopHits(pattern,collector,project);
  }
  final Collection<Object> result=collector.getResult();
  final List<Comparable> c=new ArrayList<Comparable>();
  for (  Object o : result) {
    if (o instanceof Comparable) {
      c.add((Comparable)o);
    }
  }
  return processItems(pattern,c,consumer);
}
