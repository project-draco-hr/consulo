{
  final PsiExpressionList argList=callExpression.getArgumentList();
  if (argList != null) {
    final PsiExpression[] args=argList.getExpressions();
    for (    final PsiExpression arg : args) {
      if (expressionAssignsVariable(arg,variable,checkedMethods)) {
        return true;
      }
    }
  }
  final PsiReferenceExpression methodExpression=callExpression.getMethodExpression();
  if (methodExpression == null) {
    return false;
  }
  if (expressionAssignsVariable(methodExpression,variable,checkedMethods)) {
    return true;
  }
  final PsiMethod method=callExpression.resolveMethod();
  if (method == null) {
    return false;
  }
  final MethodSignature methodSignature=method.getSignature(PsiSubstitutor.EMPTY);
  if (!checkedMethods.add(methodSignature)) {
    return false;
  }
  final PsiClass containingClass=ClassUtils.getContainingClass(callExpression);
  final PsiClass calledClass=method.getContainingClass();
  if (!calledClass.equals(containingClass)) {
    return false;
  }
  if (method.hasModifierProperty(PsiModifier.STATIC) || method.isConstructor() || method.hasModifierProperty(PsiModifier.PRIVATE)|| method.hasModifierProperty(PsiModifier.FINAL)|| calledClass.hasModifierProperty(PsiModifier.FINAL)) {
    final PsiCodeBlock body=method.getBody();
    return blockAssignsVariable(body,variable,checkedMethods);
  }
  return false;
}
