{
  if (args.size() > 0) {
    LOG.info("External command line:");
    LOG.info("Dir: " + currentDirectory);
    for (    String arg : args) {
      LOG.info(arg);
    }
  }
  LOG.info("-----");
  if (args.size() > 0) {
    final String command=args.get(0);
    for (    ApplicationStarter starter : Extensions.getExtensions(ApplicationStarter.EP_NAME)) {
      if (command.equals(starter.getCommandName()) && starter instanceof ApplicationStarterEx && ((ApplicationStarterEx)starter).canProcessExternalCommandLine()) {
        LOG.info("Processing command with " + starter);
        ((ApplicationStarterEx)starter).processExternalCommandLine(ArrayUtil.toStringArray(args),currentDirectory);
        return null;
      }
    }
  }
  Project lastOpenedProject=null;
  int line=-1;
  for (int i=0, argsSize=args.size(); i < argsSize; i++) {
    String arg=args.get(i);
    if (arg.equals(StartupUtil.NO_SPLASH)) {
      continue;
    }
    if (arg.equals("-l") || arg.equals("--line")) {
      i++;
      if (i == args.size()) {
        break;
      }
      try {
        line=Integer.parseInt(args.get(i));
      }
 catch (      NumberFormatException e) {
        line=-1;
      }
    }
 else {
      if (StringUtil.isQuotedString(arg)) {
        arg=StringUtil.stripQuotesAroundValue(arg);
      }
      if (!new File(arg).isAbsolute()) {
        arg=currentDirectory != null ? new File(currentDirectory,arg).getAbsolutePath() : new File(arg).getAbsolutePath();
      }
      if (line != -1) {
        final VirtualFile virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(arg);
        if (virtualFile != null) {
          lastOpenedProject=doOpenFile(virtualFile,line);
        }
 else {
          Messages.showErrorDialog("Cannot find file '" + arg + "'","Cannot find file");
        }
      }
 else {
        lastOpenedProject=doOpenFileOrProject(arg);
      }
    }
  }
  return lastOpenedProject;
}
