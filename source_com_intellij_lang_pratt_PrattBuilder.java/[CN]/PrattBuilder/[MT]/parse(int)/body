{
  IElementType tokenType=getTokenType();
  if (tokenType == null)   return null;
  if (!(tokenType instanceof PrattTokenType) || ((PrattTokenType)tokenType).getPriority() <= rightPriority) {
    myBuilder.error(JavaErrorMessages.message("unexpected.token"));
    return null;
  }
  final Nud nud=((PrattTokenType)tokenType).getNud();
  if (nud == null) {
    myBuilder.error(JavaErrorMessages.message("unexpected.token"));
    return null;
  }
  PsiBuilder.Marker marker=myBuilder.mark();
  ParseResult left;
  IElementType result;
  final PsiBuilder.Marker oldMarker=myPrevMarker;
  myPrevMarker=myBuilder.mark();
  try {
    myBuilder.advanceLexer();
    left=nud.parsePrefix(this);
    result=left.getDoneType();
  }
  finally {
    myPrevMarker.drop();
    myPrevMarker=oldMarker;
  }
  while (!left.isError()) {
    tokenType=myBuilder.getTokenType();
    if (!(tokenType instanceof PrattTokenType) || rightPriority >= ((PrattTokenType)tokenType).getPriority())     break;
    final Led led=((PrattTokenType)tokenType).getLed();
    if (led == null)     break;
    myPrevMarker=myBuilder.mark();
    try {
      myBuilder.advanceLexer();
      left=led.parseInfix(result,this);
      if (result != null && left.getDoneType() != null) {
        final PsiBuilder.Marker marker1=marker.precede();
        marker.doneBefore(result,myPrevMarker);
        marker=marker1;
        result=left.getDoneType();
      }
    }
  finally {
      myPrevMarker.drop();
      myPrevMarker=oldMarker;
    }
  }
  if (result != null) {
    marker.done(result);
  }
 else {
    marker.drop();
  }
  return result;
}
