{
  if (!PsiUtil.isLanguageLevel5OrHigher(expression)) {
    return;
  }
  super.visitReferenceExpression(expression);
  final String name=expression.getReferenceName();
  final String replacement;
  if ("EMPTY_LIST".equals(name)) {
    replacement="emptyList()";
  }
 else   if ("EMPTY_MAP".equals(name)) {
    replacement="emptyMap()";
  }
 else   if ("EMPTY_SET".equals(name)) {
    replacement="emptySet()";
  }
 else {
    return;
  }
  final PsiElement target=expression.resolve();
  if (!(target instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)target;
  final PsiClass containingClass=field.getContainingClass();
  if (containingClass == null) {
    return;
  }
  final String qualifiedName=containingClass.getQualifiedName();
  if (!"java.util.Collections".equals(qualifiedName)) {
    return;
  }
  registerError(expression,expression,replacement);
}
