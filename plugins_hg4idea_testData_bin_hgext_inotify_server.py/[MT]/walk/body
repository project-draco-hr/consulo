def walk(dirstate, absroot, root):
    'Like os.walk, but only yields regular files.'

    def walkit(root, reporoot):
        (files, dirs) = ([], [])
        try:
            fullpath = join(absroot, root)
            for (name, kind) in osutil.listdir(fullpath):
                if (kind == stat.S_IFDIR):
                    if (name == '.hg'):
                        if (not reporoot):
                            return
                    else:
                        dirs.append(name)
                        path = join(root, name)
                        if dirstate._ignore(path):
                            continue
                        for result in walkit(path, False):
                            yield result
                elif (kind in (stat.S_IFREG, stat.S_IFLNK)):
                    files.append(name)
            yield (fullpath, dirs, files)
        except OSError as err:
            if (err.errno == errno.ENOTDIR):
                yield (fullpath, dirs, files)
            elif (err.errno not in walk_ignored_errors):
                raise
    return walkit(root, (root == ''))
