def accept_connection(self):
    (sock, addr) = self.sock.accept()
    cs = common.recvcs(sock)
    version = ord(cs.read(1))
    if (version != common.version):
        self.ui.warn((_('received query from incompatible client version %d\n') % version))
        try:
            sock.sendall(chr(common.version))
        except:
            pass
        return
    type = cs.read(4)
    if (type == 'STAT'):
        results = self.answer_stat_query(cs)
    elif (type == 'DBUG'):
        results = self.answer_dbug_query()
    else:
        self.ui.warn((_('unrecognized query type: %s\n') % type))
        return
    try:
        try:
            v = chr(common.version)
            sock.sendall(((v + type) + struct.pack(common.resphdrfmts[type], *map(len, results))))
            sock.sendall(''.join(results))
        finally:
            sock.shutdown(socket.SHUT_WR)
    except socket.error as err:
        if (err[0] != errno.EPIPE):
            raise
