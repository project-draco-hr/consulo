{
  TreeUtil.ensureParsed(getFirstChildNode());
  TreeUtil.ensureParsed(anotherParent.getFirstChildNode());
  final ASTNode firstChild1=anotherParent.getFirstChildNode();
  ChangeUtil.prepareAndRunChangeAction(new ChangeUtil.ChangeAction(){
    public void makeChange(    TreeChangeEvent destinationTreeChange){
      destinationTreeChange.addElementaryChange(anotherParent,ChangeInfoImpl.create(ChangeInfo.CONTENTS_CHANGED,anotherParent));
      ((CompositeElement)anotherParent).rawRemoveAllChildren();
    }
  }
,(TreeElement)anotherParent);
  if (firstChild1 != null) {
    ChangeUtil.prepareAndRunChangeAction(new ChangeUtil.ChangeAction(){
      public void makeChange(      TreeChangeEvent destinationTreeChange){
        if (getTreeParent() != null) {
          final ChangeInfoImpl changeInfo=ChangeInfoImpl.create(ChangeInfo.CONTENTS_CHANGED,CompositeElement.this);
          changeInfo.setOldLength(getTextLength());
          destinationTreeChange.addElementaryChange(CompositeElement.this,changeInfo);
          rawRemoveAllChildren();
          rawAddChildren((TreeElement)firstChild1);
        }
 else {
          final TreeElement first=getFirstChildNode();
          remove(destinationTreeChange,first,null);
          add(destinationTreeChange,CompositeElement.this,(TreeElement)firstChild1);
          repairRemovedElement(CompositeElement.this,first);
        }
      }
    }
,this);
  }
 else {
    removeAllChildren();
  }
}
