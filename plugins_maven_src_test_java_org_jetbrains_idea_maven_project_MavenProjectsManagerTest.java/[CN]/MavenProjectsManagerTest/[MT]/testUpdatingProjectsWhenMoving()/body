{
  VirtualFile p1=createModulePom("project1","<groupId>test</groupId>" + "<artifactId>project1</artifactId>" + "<version>1</version>");
  final VirtualFile p2=createModulePom("project2","<groupId>test</groupId>" + "<artifactId>project2</artifactId>" + "<version>1</version>");
  importProjects(p1,p2);
  final VirtualFile oldDir=p2.getParent();
  new WriteCommandAction.Simple(myProject){
    @Override protected void run() throws Throwable {
      VirtualFile newDir=myProjectRoot.createChildDirectory(this,"foo");
      assertEquals(2,myProjectsTree.getRootProjects().size());
      p2.move(this,newDir);
      waitForReadingCompletion();
      assertEquals(1,myProjectsTree.getRootProjects().size());
      p2.move(this,oldDir);
    }
  }
.execute().throwException();
  waitForReadingCompletion();
  assertEquals(2,myProjectsTree.getRootProjects().size());
}
