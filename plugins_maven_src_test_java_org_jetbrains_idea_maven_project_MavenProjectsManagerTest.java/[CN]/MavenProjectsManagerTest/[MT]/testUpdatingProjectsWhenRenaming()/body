{
  VirtualFile p1=createModulePom("project1","<groupId>test</groupId>" + "<artifactId>project1</artifactId>" + "<version>1</version>");
  final VirtualFile p2=createModulePom("project2","<groupId>test</groupId>" + "<artifactId>project2</artifactId>" + "<version>1</version>");
  importProjects(p1,p2);
  assertEquals(2,myProjectsTree.getRootProjects().size());
  new WriteCommandAction.Simple(myProject){
    @Override protected void run() throws Throwable {
      p2.rename(this,"foo.bar");
      waitForReadingCompletion();
      assertEquals(1,myProjectsTree.getRootProjects().size());
      p2.rename(this,"pom.xml");
    }
  }
.execute().throwException();
  waitForReadingCompletion();
  assertEquals(2,myProjectsTree.getRootProjects().size());
}
