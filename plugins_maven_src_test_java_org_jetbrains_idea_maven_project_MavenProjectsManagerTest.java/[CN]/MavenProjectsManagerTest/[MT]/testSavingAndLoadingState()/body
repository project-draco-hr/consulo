{
  MavenProjectsManagerState state=myProjectsManager.getState();
  assertTrue(state.originalFiles.isEmpty());
  assertTrue(state.activeProfiles.isEmpty());
  assertTrue(state.ignoredFiles.isEmpty());
  assertTrue(state.ignoredPathMasks.isEmpty());
  VirtualFile p1=createModulePom("project1","<groupId>test</groupId>" + "<artifactId>project1</artifactId>" + "<version>1</version>");
  VirtualFile p2=createModulePom("project2","<groupId>test</groupId>" + "<artifactId>project2</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<modules>"+ "  <module>../project3</module>"+ "</modules>");
  VirtualFile p3=createModulePom("project3","<groupId>test</groupId>" + "<artifactId>project3</artifactId>" + "<version>1</version>");
  importProjects(p1,p2);
  myProjectsManager.setExplicitProfiles(Arrays.asList("one","two"));
  myProjectsManager.setIgnoredFilesPaths(Arrays.asList(p1.getPath()));
  myProjectsManager.setIgnoredFilesPatterns(Arrays.asList("*.xxx"));
  state=myProjectsManager.getState();
  assertUnorderedElementsAreEqual(state.originalFiles,p1.getPath(),p2.getPath());
  assertUnorderedElementsAreEqual(state.activeProfiles,"one","two");
  assertUnorderedElementsAreEqual(state.ignoredFiles,p1.getPath());
  assertUnorderedElementsAreEqual(state.ignoredPathMasks,"*.xxx");
  MavenProjectsManagerState newState=new MavenProjectsManagerState();
  newState.originalFiles=Arrays.asList(p1.getPath(),p3.getPath());
  newState.activeProfiles=Arrays.asList("three");
  newState.ignoredFiles=Collections.singleton(p1.getPath());
  newState.ignoredPathMasks=Arrays.asList("*.zzz");
  myProjectsManager.loadState(newState);
  assertUnorderedElementsAreEqual(myProjectsManager.getProjectsTreeForTests().getManagedFilesPaths(),p1.getPath(),p3.getPath());
  assertUnorderedElementsAreEqual(myProjectsManager.getExplicitProfiles(),"three");
  assertUnorderedElementsAreEqual(myProjectsManager.getIgnoredFilesPaths(),p1.getPath());
  assertUnorderedElementsAreEqual(myProjectsManager.getIgnoredFilesPatterns(),"*.zzz");
  waitForReadingCompletion();
  assertUnorderedElementsAreEqual(myProjectsManager.getProjectsTreeForTests().getRootProjectsFiles(),p1,p3);
}
