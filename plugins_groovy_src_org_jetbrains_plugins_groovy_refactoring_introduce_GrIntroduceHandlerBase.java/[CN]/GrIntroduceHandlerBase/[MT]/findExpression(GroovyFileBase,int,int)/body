{
  GrExpression selectedExpr=GroovyRefactoringUtil.findElementInRange(file,startOffset,endOffset,GrExpression.class);
  if (selectedExpr == null)   return null;
  PsiType type=selectedExpr.getType();
  if (type != null)   type=TypeConversionUtil.erasure(type);
  if (PsiType.VOID.equals(type)) {
    throw new GrIntroduceRefactoringError(GroovyRefactoringBundle.message("selected.expression.has.void.type"));
  }
  if (expressionIsNotCorrect(selectedExpr)) {
    throw new GrIntroduceRefactoringError(GroovyRefactoringBundle.message("selected.block.should.represent.an.expression"));
  }
  return selectedExpr;
}
