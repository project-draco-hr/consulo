{
  if (occurrences.length == 0)   return null;
  PsiElement candidate;
  if (occurrences.length == 1 || !settings.replaceAllOccurrences()) {
    candidate=context.expression;
    while (candidate != null && !PsiUtil.isExpressionStatement(candidate))     candidate=candidate.getParent();
    return candidate;
  }
 else {
    GroovyRefactoringUtil.sortOccurrences(occurrences);
    candidate=occurrences[0];
  }
  while (candidate != null && !container.equals(candidate.getParent())) {
    candidate=candidate.getParent();
  }
  if (candidate == null) {
    return null;
  }
  if ((container instanceof GrWhileStatement) && candidate.equals(((GrWhileStatement)container).getCondition())) {
    return container;
  }
  if ((container instanceof GrIfStatement) && candidate.equals(((GrIfStatement)container).getCondition())) {
    return container;
  }
  if ((container instanceof GrForStatement) && candidate.equals(((GrForStatement)container).getClause())) {
    return container;
  }
  return candidate;
}
