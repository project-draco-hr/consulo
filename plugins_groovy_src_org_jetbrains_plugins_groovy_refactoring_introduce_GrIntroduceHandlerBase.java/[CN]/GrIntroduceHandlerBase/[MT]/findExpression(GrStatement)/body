{
  if (!(selectedExpr instanceof GrExpression))   return null;
  GrExpression selected=(GrExpression)selectedExpr;
  while (selected instanceof GrParenthesizedExpression)   selected=((GrParenthesizedExpression)selected).getOperand();
  if (selected == null)   return null;
  PsiType type=selected.getType();
  if (type != null)   type=TypeConversionUtil.erasure(type);
  if (PsiType.VOID.equals(type)) {
    throw new GrRefactoringError(GroovyRefactoringBundle.message("selected.expression.has.void.type"));
  }
  if (expressionIsIncorrect(selected)) {
    throw new GrRefactoringError(GroovyRefactoringBundle.message("selected.block.should.represent.an.expression"));
  }
  return selected;
}
