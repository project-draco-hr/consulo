{
  final PsiElement scope=findScope(expression,variable);
  if (variable == null) {
    final PsiElement[] occurences=findOccurrences(expression,scope);
    return new GrIntroduceContextImpl(project,editor,expression,variable,occurences,scope);
  }
 else {
    final List<PsiElement> list=Collections.synchronizedList(new ArrayList<PsiElement>());
    ReferencesSearch.search(variable,new LocalSearchScope(scope)).forEach(new Processor<PsiReference>(){
      @Override public boolean process(      PsiReference psiReference){
        final PsiElement element=psiReference.getElement();
        if (element != null) {
          list.add(element);
        }
        return true;
      }
    }
);
    return new GrIntroduceContextImpl(project,editor,variable.getInitializerGroovy(),variable,list.toArray(new PsiElement[list.size()]),scope);
  }
}
