{
  final PsiElement scope=findScope(expression,variable);
  if (variable == null) {
    final PsiElement[] occurences=findOccurences(expression,scope);
    return new GrIntroduceContext(project,editor,expression,occurences,scope,variable);
  }
 else {
    final List<PsiElement> list=new ArrayList<PsiElement>();
    ReferencesSearch.search(variable,new LocalSearchScope(scope)).forEach(new Processor<PsiReference>(){
      @Override public boolean process(      PsiReference psiReference){
        final PsiElement element=psiReference.getElement();
        if (element != null) {
          list.add(element);
        }
        return true;
      }
    }
);
    return new GrIntroduceContext(project,editor,variable.getInitializerGroovy(),list.toArray(new PsiElement[list.size()]),scope,variable);
  }
}
