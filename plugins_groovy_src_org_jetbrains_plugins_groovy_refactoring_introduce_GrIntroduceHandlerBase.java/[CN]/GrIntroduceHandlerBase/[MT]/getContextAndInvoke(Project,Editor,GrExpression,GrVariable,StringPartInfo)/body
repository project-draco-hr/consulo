{
  final Scope[] scopes=findPossibleScopes(expression,variable,stringPart,editor);
  Pass<Scope> callback=new Pass<Scope>(){
    @Override public void pass(    Scope scope){
      GrIntroduceContext context=getContext(project,editor,expression,variable,stringPart,scope);
      invokeImpl(project,context,editor);
    }
  }
;
  if (scopes.length == 0) {
    CommonRefactoringUtil.showErrorHint(project,editor,RefactoringBundle.getCannotRefactorMessage(getRefactoringName() + "is not available in current scope"),getRefactoringName(),getHelpID());
  }
 else   if (scopes.length == 1) {
    callback.pass(scopes[0]);
  }
 else {
    showScopeChooser(scopes,callback,editor);
  }
}
