{
  while (true) {
    try {
      Map<Key,Object> copyMap=getOrCreateCopyableMap(value != null);
      if (copyMap == null)       break;
      if (value == null) {
        copyMap.remove(key);
        if (copyMap.isEmpty()) {
          ((StripedLockConcurrentHashMap<Key,Object>)copyMap).blockModification();
          ConcurrentMap<Key,Object> newCopyMap;
          if (copyMap.isEmpty()) {
            newCopyMap=null;
          }
 else {
            newCopyMap=createDataMap(copyMap.size());
            newCopyMap.putAll(copyMap);
          }
          boolean replaced=replace(COPYABLE_USER_MAP_KEY,copyMap,newCopyMap);
          if (!replaced)           continue;
        }
      }
 else {
        copyMap.put(key,value);
      }
      break;
    }
 catch (    ConcurrentModificationException ignored) {
    }
  }
}
