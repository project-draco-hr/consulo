{
  VirtualFile dotIdea=projectDir.findChild(Project.DIRECTORY_STORE_FOLDER);
  VirtualFile modulesXml=dotIdea.findChild("modules.xml");
  StorageData storageData=loadStorageFile(project,modulesXml);
  final Element moduleManagerState=storageData.getState("ProjectModuleManager");
  if (moduleManagerState == null) {
    throw new JDOMException("cannot find ProjectModuleManager state in modules.xml");
  }
  final CoreModuleManager moduleManager=(CoreModuleManager)ModuleManager.getInstance(project);
  moduleManager.loadState(moduleManagerState);
  VirtualFile miscXml=dotIdea.findChild("misc.xml");
  storageData=loadStorageFile(project,miscXml);
  final Element projectRootManagerState=storageData.getState("ProjectRootManager");
  if (projectRootManagerState == null) {
    throw new JDOMException("cannot find ProjectRootManager state in misc.xml");
  }
  ((ProjectRootManagerImpl)ProjectRootManager.getInstance(project)).readExternal(projectRootManagerState);
  VirtualFile libraries=dotIdea.findChild("libraries");
  if (libraries != null) {
    DirectoryStorageData data=new DirectoryStorageData();
    data.loadFrom(FileSystem.FILE_SYSTEM.createFile(libraries.getPath()),PathMacroManager.getInstance(project).createTrackingSubstitutor());
    final Element libraryTable=data.getMergedState("libraryTable",Element.class,new ProjectLibraryTable.LibraryStateSplitter(),null);
    ((LibraryTableBase)ProjectLibraryTable.getInstance(project)).loadState(libraryTable);
  }
  moduleManager.loadModules();
  ((DirectoryIndexImpl)DirectoryIndex.getInstance(project)).initialize();
}
