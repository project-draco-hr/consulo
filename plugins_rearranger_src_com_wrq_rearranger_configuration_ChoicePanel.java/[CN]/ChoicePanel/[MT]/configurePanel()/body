{
  final Border border=BorderFactory.createEmptyBorder();
  final TitledBorder tb=new TitledBorder(border,choicePanelName);
  setBorder(tb);
  final GridBagConstraints constraints=new GridBagConstraints();
  constraints.anchor=GridBagConstraints.NORTHWEST;
  constraints.fill=GridBagConstraints.BOTH;
  constraints.gridheight=1;
  constraints.weighty=0;
  final ButtonGroup group=new ButtonGroup();
  final JRadioButton[] buttons=new JRadioButton[choices.length];
  final JPanel[] panels=new JPanel[choices.length];
  final Dimension max=new Dimension();
  for (int i=0; i < choices.length; i++) {
    buttons[i]=new JRadioButton(choices[i].buttonName);
    group.add(buttons[i]);
    constraints.gridx=i % 2;
    constraints.gridy=i >> 1;
    constraints.gridwidth=(i % 2 == 1) ? GridBagConstraints.REMAINDER : 1;
    constraints.weightx=(i % 2 == 1) ? 1 : 0;
    add(buttons[i],constraints);
    choices[i].editingObject=choices[i].choiceObject.deepCopy();
    panels[i]=choices[i].createJPanel();
    final Dimension dimension=panels[i].getPreferredSize();
    if (dimension.height > max.height)     max.height=dimension.height;
    if (dimension.width > max.width)     max.width=dimension.width;
  }
  buttons[choice].setSelected(true);
  constraints.gridheight=GridBagConstraints.REMAINDER;
  constraints.gridwidth=2;
  constraints.weighty=1;
  constraints.gridx=0;
  constraints.gridy=(choices.length >> 1) + 1;
  for (int i=0; i < choices.length; i++) {
    final int j=i;
    panels[i].setPreferredSize(max);
    buttons[i].addActionListener(new ActionListener(){
      public void actionPerformed(      final ActionEvent e){
        if (buttons[j].isSelected()) {
          remove(choices.length);
          add(panels[j],constraints);
          panels[j].invalidate();
          panels[j].repaint();
          validate();
          choice=j;
        }
      }
    }
);
  }
  final JPanel beginning_panel=panels[choice];
  add(beginning_panel,constraints);
}
