{
  myContentPanel=new JPanel(new BorderLayout()){
    @Override protected void paintComponent(    Graphics g){
      if (myBalloon != null && !myBalloon.isDisposed() && myActionEvent != null && myActionEvent.getInputEvent() == null) {
        ((Graphics2D)g).setPaint(new GradientPaint(0,0,new JBColor(new Color(101,136,242),new Color(16,91,180)),0,getHeight(),new JBColor(new Color(44,96,238),new Color(16,80,147))));
        g.fillRect(0,0,getWidth(),getHeight());
      }
 else {
        super.paintComponent(g);
      }
    }
  }
;
  myContentPanel.setOpaque(false);
  myList.setOpaque(false);
  mySearchLabel=new JBLabel(AllIcons.Actions.FindPlain){
{
      enableEvents(AWTEvent.MOUSE_EVENT_MASK);
      enableEvents(AWTEvent.MOUSE_MOTION_EVENT_MASK);
    }
  }
;
  myContentPanel.add(mySearchLabel,BorderLayout.CENTER);
  initTooltip();
  mySearchLabel.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      if (myBalloon != null) {
        myBalloon.cancel();
      }
      myFocusOwner=IdeFocusManager.findInstance().getFocusOwner();
      mySearchLabel.setToolTipText(null);
      IdeTooltipManager.getInstance().hideCurrentNow(false);
      mySearchLabel.setIcon(AllIcons.Actions.FindWhite);
      actionPerformed(null);
    }
    @Override public void mouseEntered(    MouseEvent e){
      if (myBalloon == null || myBalloon.isDisposed()) {
        mySearchLabel.setIcon(AllIcons.Actions.Find);
      }
    }
    @Override public void mouseExited(    MouseEvent e){
      if (myBalloon == null || myBalloon.isDisposed()) {
        mySearchLabel.setIcon(AllIcons.Actions.FindPlain);
      }
    }
  }
);
  createSearchField();
  LafManager.getInstance().addLafManagerListener(new LafManagerListener(){
    @Override public void lookAndFeelChanged(    LafManager source){
      createSearchField();
    }
  }
);
  myRenderer=new MyListRenderer();
  myList.setCellRenderer(myRenderer);
  myList.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      final int i=myList.locationToIndex(e.getPoint());
      if (i != -1) {
        myList.setSelectedIndex(i);
        doNavigate(i);
      }
    }
  }
);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      onFocusLost(field.getTextEditor());
    }
  }
);
}
