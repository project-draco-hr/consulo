{
  if (myActions == null) {
    myActions=myActionModel.getNames(true);
  }
  final HashSet<AnAction> toolWindows=new HashSet<AnAction>();
  List<MatchResult> matches=collectResults(pattern,myActions,myActionModel);
  for (  MatchResult o : matches) {
    myProgressIndicator.checkCanceled();
    Object[] objects=myActionModel.getElementsByName(o.elementName,true,pattern);
    for (    Object object : objects) {
      myProgressIndicator.checkCanceled();
      if (isToolWindowAction(object) && toolWindows.size() < MAX_TOOL_WINDOWS) {
        toolWindows.add((AnAction)((Map.Entry)object).getKey());
      }
    }
  }
  myProgressIndicator.checkCanceled();
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      if (myProgressIndicator.isCanceled())       return;
      if (toolWindows.size() > 0) {
        myTitleIndexes.toolWindows=myListModel.size();
        for (        Object toolWindow : toolWindows) {
          myListModel.addElement(toolWindow);
        }
      }
    }
  }
);
}
