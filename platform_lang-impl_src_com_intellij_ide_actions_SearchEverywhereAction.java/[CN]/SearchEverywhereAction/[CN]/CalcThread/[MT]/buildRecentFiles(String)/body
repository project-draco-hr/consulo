{
  final MinusculeMatcher matcher=new MinusculeMatcher(pattern,NameUtil.MatchingCaseSensitivity.NONE);
  final ArrayList<VirtualFile> files=new ArrayList<VirtualFile>();
  for (  VirtualFile file : ArrayUtil.reverseArray(EditorHistoryManager.getInstance(project).getFiles())) {
    if (StringUtil.isEmptyOrSpaces(pattern) || matcher.matches(file.getName())) {
      if (!files.contains(file)) {
        files.add(file);
      }
    }
    if (files.size() > 15)     break;
  }
  if (files.size() > 0) {
    myAlreadyAddedFiles.addAll(files);
    UIUtil.invokeAndWaitIfNeeded(new Runnable(){
      @Override public void run(){
        if (!myProgressIndicator.isCanceled()) {
          myTitleIndexes.recentFiles=myListModel.size();
          for (          Object file : files) {
            myListModel.addElement(file);
          }
        }
      }
    }
);
  }
}
