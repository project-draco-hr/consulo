{
  final List<Object> runConfigurations=new ArrayList<Object>();
  MinusculeMatcher matcher=new MinusculeMatcher(pattern,NameUtil.MatchingCaseSensitivity.NONE);
  final ChooseRunConfigurationPopup.ItemWrapper[] wrappers=ChooseRunConfigurationPopup.createSettingsList(project,new ExecutorProvider(){
    @Override public Executor getExecutor(){
      return ExecutorRegistry.getInstance().getExecutorById(ToolWindowId.DEBUG);
    }
  }
,false);
  check();
  for (  ChooseRunConfigurationPopup.ItemWrapper wrapper : wrappers) {
    if (matcher.matches(wrapper.getText())) {
      runConfigurations.add(wrapper);
    }
    check();
  }
  if (runConfigurations.size() > 0) {
    UIUtil.invokeLaterIfNeeded(new Runnable(){
      @Override public void run(){
        if (!myProgressIndicator.isCanceled()) {
          myTitleIndexes.runConfigurations=myListModel.size();
          for (          Object runConfiguration : runConfigurations) {
            myListModel.addElement(runConfiguration);
          }
          myMoreFilesIndex=runConfigurations.size() >= MAX_RUN_CONFIGURATION ? myListModel.size() - 1 : -1;
        }
      }
    }
);
  }
}
