{
  final List<Object> elements=new ArrayList<Object>();
  final Consumer<Object> consumer=new Consumer<Object>(){
    @Override public void consume(    Object o){
      if (isSetting(o) || isVirtualFile(o) || isActionValue(o)|| o instanceof PsiElement) {
        elements.add(o);
      }
    }
  }
;
  final ActionManager actionManager=ActionManager.getInstance();
  final List<String> actions=AbbreviationManager.getInstance().findActions(pattern);
  for (  String actionId : actions) {
    consumer.consume(actionManager.getAction(actionId));
  }
  for (  SearchTopHitProvider provider : SearchTopHitProvider.EP_NAME.getExtensions()) {
    myProgressIndicator.checkCanceled();
    provider.consumeTopHits(pattern,consumer);
  }
  if (elements.size() > 0) {
    UIUtil.invokeLaterIfNeeded(new Runnable(){
      @Override public void run(){
        if (!myProgressIndicator.isCanceled()) {
          myTitleIndexes.topHit=myListModel.size();
          for (          Object element : elements) {
            myListModel.addElement(element);
          }
        }
      }
    }
);
  }
}
