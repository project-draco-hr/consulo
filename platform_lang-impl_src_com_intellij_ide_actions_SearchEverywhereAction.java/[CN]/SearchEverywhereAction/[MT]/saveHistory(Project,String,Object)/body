{
  if (project == null || project.isDisposed() || !project.isInitialized()) {
    return;
  }
  HistoryType type=null;
  String fqn=null;
  if (isActionValue(value)) {
    type=HistoryType.ACTION;
    AnAction action=(AnAction)(value instanceof Map.Entry ? ((Map.Entry)value).getKey() : value);
    fqn=ActionManager.getInstance().getId(action);
  }
 else   if (value instanceof VirtualFile) {
    type=HistoryType.FILE;
    fqn=((VirtualFile)value).getUrl();
  }
 else   if (value instanceof ChooseRunConfigurationPopup.ItemWrapper) {
    type=HistoryType.RUN_CONFIGURATION;
    fqn=((ChooseRunConfigurationPopup.ItemWrapper)value).getText();
  }
 else   if (value instanceof PsiElement) {
    final PsiElement psiElement=(PsiElement)value;
    final Language language=psiElement.getLanguage();
    final String name=QualifiedNameProviders.getQualifiedNameFromProviders(psiElement);
    if (name != null) {
      type=HistoryType.PSI;
      fqn=language.getID() + "://" + name;
    }
  }
  final PropertiesComponent storage=PropertiesComponent.getInstance(project);
  final String[] values=storage.getValues(SE_HISTORY_KEY);
  List<HistoryItem> history=new ArrayList<HistoryItem>();
  if (values != null) {
    for (    String s : values) {
      final String[] split=s.split("\t");
      if (split.length != 3 || text.equals(split[0])) {
        continue;
      }
      history.add(new HistoryItem(split[0],split[1],split[2]));
    }
  }
  history.add(0,new HistoryItem(text,type == null ? null : type.name(),fqn));
  if (history.size() > MAX_SEARCH_EVERYWHERE_HISTORY) {
    history=history.subList(0,MAX_SEARCH_EVERYWHERE_HISTORY);
  }
  final String[] newValues=new String[history.size()];
  for (int i=0; i < newValues.length; i++) {
    newValues[i]=history.get(i).toString();
  }
  storage.setValues(SE_HISTORY_KEY,newValues);
}
