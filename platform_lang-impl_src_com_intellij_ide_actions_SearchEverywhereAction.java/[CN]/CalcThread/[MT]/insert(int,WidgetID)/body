{
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    @Override public void run(){
      runReadAction(new Runnable(){
        @Override public void run(){
          try {
            final SearchResult result=id == WidgetID.CLASSES ? getClasses(pattern,showAll.get(),DEFAULT_MORE_STEP_COUNT,myClassChooseByName) : id == WidgetID.FILES ? getFiles(pattern,DEFAULT_MORE_STEP_COUNT,myFileChooseByName) : id == WidgetID.RUN_CONFIGURATIONS ? getConfigurations(pattern,DEFAULT_MORE_STEP_COUNT) : id == WidgetID.SYMBOLS ? getSymbols(pattern,DEFAULT_MORE_STEP_COUNT,mySymbolsChooseByName) : id == WidgetID.ACTIONS ? getActionsOrSettings(pattern,DEFAULT_MORE_STEP_COUNT,true) : id == WidgetID.SETTINGS ? getActionsOrSettings(pattern,DEFAULT_MORE_STEP_COUNT,false) : new SearchResult();
            check();
            SwingUtilities.invokeLater(new Runnable(){
              @Override public void run(){
                try {
                  int shift=0;
                  int i=index + 1;
                  for (                  Object o : result) {
                    myListModel.insertElementAt(o,i);
                    shift++;
                    i++;
                  }
                  MoreIndex moreIndex=myListModel.moreIndex;
                  myListModel.titleIndex.shift(index,shift);
                  moreIndex.shift(index,shift);
                  if (!result.needMore) {
switch (id) {
case CLASSES:
                      moreIndex.classes=-1;
                    break;
case FILES:
                  moreIndex.files=-1;
                break;
case ACTIONS:
              moreIndex.actions=-1;
            break;
case SETTINGS:
          moreIndex.settings=-1;
        break;
case SYMBOLS:
      moreIndex.symbols=-1;
    break;
case RUN_CONFIGURATIONS:
  moreIndex.runConfigurations=-1;
break;
}
}
ListScrollingUtil.selectItem(myList,index);
myDone.setDone();
}
 catch (Exception e) {
myDone.setRejected();
}
}
}
);
}
 catch (Exception e) {
myDone.setRejected();
}
}
}
,true);
}
}
);
return myDone;
}
