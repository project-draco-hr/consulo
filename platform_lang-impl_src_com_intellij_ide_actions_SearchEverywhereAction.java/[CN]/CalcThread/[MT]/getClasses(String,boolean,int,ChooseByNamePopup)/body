{
  final SearchResult classes=new SearchResult();
  if (chooseByNamePopup == null) {
    return classes;
  }
  chooseByNamePopup.getProvider().filterElements(chooseByNamePopup,pattern,includeLibs,myProgressIndicator,new Processor<Object>(){
    @Override public boolean process(    Object o){
      if (o instanceof PsiElement && !myListModel.contains(o) && !classes.contains(o)) {
        if (classes.size() == max) {
          classes.needMore=true;
          return false;
        }
        classes.add(o);
        if (o instanceof PsiNamedElement) {
          final String name=((PsiNamedElement)o).getName();
          final PsiFile file=((PsiNamedElement)o).getContainingFile();
          if (file != null) {
            final VirtualFile virtualFile=file.getVirtualFile();
            if (StringUtil.equals(name,virtualFile.getNameWithoutExtension())) {
              myAlreadyAddedFiles.add(virtualFile);
            }
          }
        }
      }
      return true;
    }
  }
);
  if (!includeLibs && classes.isEmpty()) {
    return getClasses(pattern,true,max,chooseByNamePopup);
  }
  return classes;
}
