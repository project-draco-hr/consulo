{
  Project project=myPanel.getProject();
  Collection<VirtualFile> notDefined=new ArrayList<VirtualFile>();
  Map<VirtualFile,Pair<String,String>> defined=new HashMap<VirtualFile,Pair<String,String>>();
  Collection<VirtualFile> allRoots=new ArrayList<VirtualFile>(Arrays.asList(ProjectLevelVcsManager.getInstance(project).getRootsUnderVcs(GitVcs.getInstance(project))));
  Collection<VirtualFile> affectedRoots=myPanel.getRoots();
  for (  VirtualFile root : affectedRoots) {
    try {
      Pair<String,String> nameAndEmail=getUserNameAndEmailFromGitConfig(project,root);
      String name=nameAndEmail.getFirst();
      String email=nameAndEmail.getSecond();
      if (name == null || email == null) {
        notDefined.add(root);
      }
 else {
        defined.put(root,nameAndEmail);
      }
    }
 catch (    VcsException e) {
      LOG.error("Couldn't get user.name and user.email for root " + root,e);
    }
  }
  if (notDefined.isEmpty()) {
    return ReturnResult.COMMIT;
  }
  if (defined.isEmpty() && allRoots.size() > affectedRoots.size()) {
    allRoots.removeAll(affectedRoots);
    for (    VirtualFile root : allRoots) {
      try {
        Pair<String,String> nameAndEmail=getUserNameAndEmailFromGitConfig(project,root);
        String name=nameAndEmail.getFirst();
        String email=nameAndEmail.getSecond();
        if (name != null && email != null) {
          defined.put(root,nameAndEmail);
          break;
        }
      }
 catch (      VcsException e) {
        LOG.error("Couldn't get user.name and user.email for root " + root,e);
      }
    }
  }
  GitUserNameNotDefinedDialog dialog=new GitUserNameNotDefinedDialog(project,notDefined,affectedRoots,defined);
  dialog.show();
  if (dialog.isOK()) {
    try {
      if (dialog.isGlobal()) {
        GitConfigUtil.setValue(project,notDefined.iterator().next(),GitConfigUtil.USER_NAME,dialog.getUserName(),"--global");
        GitConfigUtil.setValue(project,notDefined.iterator().next(),GitConfigUtil.USER_EMAIL,dialog.getUserEmail(),"--global");
      }
 else {
        for (        VirtualFile root : notDefined) {
          GitConfigUtil.setValue(project,root,GitConfigUtil.USER_NAME,dialog.getUserName());
          GitConfigUtil.setValue(project,root,GitConfigUtil.USER_EMAIL,dialog.getUserEmail());
        }
      }
    }
 catch (    VcsException e) {
      String message="Couldn't set user.name and user.email";
      LOG.error(message,e);
      Messages.showErrorDialog(myPanel.getComponent(),message);
      return ReturnResult.CANCEL;
    }
    return ReturnResult.COMMIT;
  }
  return ReturnResult.CLOSE_WINDOW;
}
