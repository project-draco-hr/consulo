{
  List<FoldRegion> toRemove=arrayList();
  for (  FoldRegion region : foldingModel.getAllFoldRegions()) {
    PsiElement element=info.getPsiElement(region);
    if (element != null && myElementsToFoldMap.containsKey(element)) {
      final FoldingDescriptor descriptor=myElementsToFoldMap.get(element);
      if (!region.isValid() || region.getGroup() != null || descriptor.getGroup() != null || region.getStartOffset() != descriptor.getRange().getStartOffset() || region.getEndOffset() != descriptor.getRange().getEndOffset() || !region.getPlaceholderText().equals(descriptor.getPlaceholderText())) {
        rangeToExpandStatusMap.put(descriptor.getRange(),region.isExpanded());
        toRemove.add(region);
      }
 else {
        myElementsToFoldMap.remove(element);
      }
    }
 else {
      if (region.isValid() && info.isLightRegion(region)) {
        boolean isExpanded=region.isExpanded();
        rangeToExpandStatusMap.put(new TextRange(region.getStartOffset(),region.getEndOffset()),isExpanded ? Boolean.TRUE : Boolean.FALSE);
      }
 else {
        toRemove.add(region);
      }
    }
  }
  for (  final FoldRegion region : toRemove) {
    foldingModel.removeFoldRegion(region);
    info.removeRegion(region);
  }
}
