{
  if (!psiElement.isValid())   return;
  final PsiFile containingFile=psiElement.getContainingFile();
  if (containingFile != null && (containingFile.getVirtualFile() == null || !containingFile.getViewProvider().isPhysical()))   return;
  psiElement=psiElement.getOriginalElement();
  PsiElement resultElement=psiElement;
  if (containingFile != null) {
    for (    final NavBarModelExtension modelExtension : Extensions.getExtensions(NavBarModelExtension.EP_NAME)) {
      final PsiElement resultElement1=resultElement;
      resultElement=ApplicationManager.getApplication().runReadAction(new Computable<PsiElement>(){
        public PsiElement compute(){
          return modelExtension.adjustElement(resultElement1);
        }
      }
);
    }
    final PsiDirectory containingDirectory=ApplicationManager.getApplication().runReadAction(new Computable<PsiDirectory>(){
      public PsiDirectory compute(){
        return containingFile.getContainingDirectory();
      }
    }
);
    if (containingDirectory != null) {
      traverseToRoot(containingDirectory,roots);
    }
  }
 else   if (psiElement instanceof PsiDirectory) {
    final PsiDirectory psiDirectory=(PsiDirectory)psiElement;
    final PsiDirectory parentDirectory=ApplicationManager.getApplication().runReadAction(new Computable<PsiDirectory>(){
      public PsiDirectory compute(){
        return psiDirectory.getParentDirectory();
      }
    }
);
    if (!roots.contains(psiDirectory.getVirtualFile()) && parentDirectory != null) {
      traverseToRoot(parentDirectory,roots);
    }
  }
 else   if (psiElement instanceof PsiFileSystemItem) {
    final VirtualFile virtualFile=((PsiFileSystemItem)psiElement).getVirtualFile();
    if (virtualFile == null)     return;
    final PsiManager psiManager=PsiManager.getInstance(myProject);
    resultElement=ApplicationManager.getApplication().runReadAction(new Computable<PsiElement>(){
      public PsiElement compute(){
        if (virtualFile.isDirectory()) {
          return psiManager.findDirectory(virtualFile);
        }
 else {
          return psiManager.findFile(virtualFile);
        }
      }
    }
);
    if (resultElement == null)     return;
    final VirtualFile parentVFile=virtualFile.getParent();
    if (parentVFile != null && !roots.contains(parentVFile)) {
      final PsiDirectory parentDirectory=ApplicationManager.getApplication().runReadAction(new Computable<PsiDirectory>(){
        public PsiDirectory compute(){
          return psiManager.findDirectory(parentVFile);
        }
      }
);
      if (parentDirectory != null) {
        traverseToRoot(parentDirectory,roots);
      }
    }
  }
 else {
    final PsiElement el=psiElement;
    for (    final NavBarModelExtension modelExtension : Extensions.getExtensions(NavBarModelExtension.EP_NAME)) {
      final PsiElement parent=ApplicationManager.getApplication().runReadAction(new Computable<PsiElement>(){
        public PsiElement compute(){
          return modelExtension.getParent(el);
        }
      }
);
      if (parent != null) {
        traverseToRoot(parent,roots);
      }
    }
  }
  addElement(resultElement);
}
