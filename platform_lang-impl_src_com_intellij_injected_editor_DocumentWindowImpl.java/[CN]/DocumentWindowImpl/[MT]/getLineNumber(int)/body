{
  int lineNumber=0;
  String hostText=myDelegate.getText();
synchronized (myLock) {
    for (    PsiLanguageInjectionHost.Shred shred : myShreds) {
      String prefix=shred.prefix;
      String suffix=shred.suffix;
      lineNumber+=StringUtil.getLineBreakCount(prefix.substring(0,Math.min(offset,prefix.length())));
      if (offset < prefix.length()) {
        return lineNumber;
      }
      offset-=prefix.length();
      RangeMarker currentRange=shred.getHostRangeMarker();
      if (!currentRange.isValid())       continue;
      int rangeLength=currentRange.getEndOffset() - currentRange.getStartOffset();
      String rangeText=hostText.substring(currentRange.getStartOffset(),currentRange.getEndOffset());
      lineNumber+=StringUtil.getLineBreakCount(rangeText.substring(0,Math.min(offset,rangeLength)));
      if (offset < rangeLength) {
        return lineNumber;
      }
      offset-=rangeLength;
      lineNumber+=StringUtil.getLineBreakCount(suffix.substring(0,Math.min(offset,suffix.length())));
      if (offset < suffix.length()) {
        return lineNumber;
      }
      offset-=suffix.length();
    }
  }
  lineNumber=getLineCount() - 1;
  return lineNumber < 0 ? 0 : lineNumber;
}
