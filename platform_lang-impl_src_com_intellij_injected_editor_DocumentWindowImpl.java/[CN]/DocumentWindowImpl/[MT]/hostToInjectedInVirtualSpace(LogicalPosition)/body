{
  int hLineStartOffset=hPos.line >= myDelegate.getLineCount() ? myDelegate.getTextLength() : myDelegate.getLineStartOffset(hPos.line);
  int iLineStartOffset=hostToInjected(hLineStartOffset);
  int iLine=getLineNumber(iLineStartOffset);
synchronized (myLock) {
    for (int i=myShreds.size() - 1; i >= 0; i--) {
      PsiLanguageInjectionHost.Shred shred=myShreds.get(i);
      if (!shred.isValid())       continue;
      int hShredEndOffset=shred.getHostRangeMarker().getEndOffset();
      int hShredStartOffset=shred.getHostRangeMarker().getStartOffset();
      int hShredStartLine=myDelegate.getLineNumber(hShredStartOffset);
      int hShredEndLine=myDelegate.getLineNumber(hShredEndOffset);
      if (hShredStartLine <= hPos.line && hPos.line <= hShredEndLine) {
        int hColumnOfShredEnd=hShredEndOffset - hLineStartOffset;
        int iColumnOfShredEnd=hostToInjected(hShredEndOffset) - iLineStartOffset;
        int iColumn=iColumnOfShredEnd + hPos.column - hColumnOfShredEnd;
        return new LogicalPosition(iLine,iColumn);
      }
    }
  }
  return null;
}
