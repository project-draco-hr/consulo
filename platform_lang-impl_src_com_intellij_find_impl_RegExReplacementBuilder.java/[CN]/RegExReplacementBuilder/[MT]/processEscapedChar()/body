{
  char nextChar;
  if (myCursor == myTemplate.length())   throw new IllegalArgumentException("character to be escaped is missing");
  nextChar=myTemplate.charAt(myCursor++);
switch (nextChar) {
case 'n':
    myReplacement.append('\n');
  break;
case 'r':
myReplacement.append('\r');
break;
case 'b':
myReplacement.append('\b');
break;
case 't':
myReplacement.append('\t');
break;
case 'f':
myReplacement.append('\f');
break;
case 'x':
if (myCursor + 4 <= myTemplate.length()) {
try {
int code=Integer.parseInt(myTemplate.substring(myCursor,myCursor + 4),16);
myCursor+=4;
myReplacement.append((char)code);
}
 catch (NumberFormatException ignored) {
}
}
break;
case 'l':
startConversionForCharacter(false);
break;
case 'u':
startConversionForCharacter(true);
break;
case 'L':
startConversionForRegion(false);
break;
case 'U':
startConversionForRegion(true);
break;
case 'E':
resetConversionState();
break;
default :
myReplacement.append(nextChar);
}
}
