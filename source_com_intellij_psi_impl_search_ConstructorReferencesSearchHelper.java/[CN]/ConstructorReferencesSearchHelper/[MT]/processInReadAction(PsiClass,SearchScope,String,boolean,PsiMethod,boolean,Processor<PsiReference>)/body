{
  PsiMethod[] constructors=inheritor.getConstructors();
  if (constructors.length == 0) {
    processImplicitConstructorCall(constructorCanBeCalledImplicitly,inheritor,processor,constructor,inheritor);
  }
  for (  PsiMethod method : constructors) {
    PsiCodeBlock body=method.getBody();
    if (body == null) {
      continue;
    }
    PsiStatement[] statements=body.getStatements();
    if (statements.length != 0) {
      PsiStatement statement=statements[0];
      if (statement instanceof PsiExpressionStatement) {
        PsiExpression expr=((PsiExpressionStatement)statement).getExpression();
        if (expr instanceof PsiMethodCallExpression) {
          PsiReferenceExpression refExpr=((PsiMethodCallExpression)expr).getMethodExpression();
          if (PsiSearchScopeUtil.isInScope(searchScope,refExpr)) {
            if (refExpr.getText().equals(superOrThisKeyword)) {
              PsiElement referencedElement=refExpr.resolve();
              if (referencedElement instanceof PsiMethod) {
                PsiMethod constructor1=(PsiMethod)referencedElement;
                if (isStrictSignatureSearch) {
                  if (myManager.areElementsEquivalent(constructor1,constructor)) {
                    if (!processor.process(refExpr))                     return false;
                    continue;
                  }
                }
 else {
                  if (myManager.areElementsEquivalent(constructor.getContainingClass(),constructor1.getContainingClass())) {
                    if (!processor.process(refExpr))                     return false;
                    continue;
                  }
                }
              }
            }
          }
        }
      }
    }
    processImplicitConstructorCall(constructorCanBeCalledImplicitly,method,processor,constructor,inheritor);
  }
  return true;
}
