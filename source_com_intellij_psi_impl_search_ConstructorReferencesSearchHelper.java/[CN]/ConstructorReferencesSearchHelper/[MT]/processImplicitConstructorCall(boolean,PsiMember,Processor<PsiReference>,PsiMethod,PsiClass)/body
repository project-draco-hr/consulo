{
  if (containingClass instanceof PsiAnonymousClass)   return;
  PsiClass superClass=containingClass.getSuperClass();
  if (constructorCanBeCalledImplicitly && myManager.areElementsEquivalent(constructor.getContainingClass(),superClass)) {
    processor.process(new LightMemberReference(myManager,usage,PsiSubstitutor.EMPTY){
      public PsiElement getElement(){
        return usage;
      }
      public TextRange getRangeInElement(){
        return usage.getTextRange();
      }
    }
);
  }
}
