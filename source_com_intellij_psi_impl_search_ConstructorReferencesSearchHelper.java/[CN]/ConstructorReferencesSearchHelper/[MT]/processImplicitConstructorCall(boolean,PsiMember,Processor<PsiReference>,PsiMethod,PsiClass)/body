{
  if (containingClass instanceof PsiAnonymousClass)   return;
  PsiClass superClass=containingClass.getSuperClass();
  if (constructorCanBeCalledImplicitly && myManager.areElementsEquivalent(constructor.getContainingClass(),superClass)) {
    processor.process(new LightMemberReference(myManager,usage,PsiSubstitutor.EMPTY){
      public PsiElement getElement(){
        return usage;
      }
      public TextRange getRangeInElement(){
        if (usage instanceof PsiClass) {
          PsiIdentifier identifier=((PsiClass)usage).getNameIdentifier();
          if (identifier != null)           return TextRange.from(identifier.getStartOffsetInParent(),identifier.getTextLength());
        }
 else         if (usage instanceof PsiField) {
          PsiIdentifier identifier=((PsiField)usage).getNameIdentifier();
          return TextRange.from(identifier.getStartOffsetInParent(),identifier.getTextLength());
        }
 else         if (usage instanceof PsiMethod) {
          PsiIdentifier identifier=((PsiMethod)usage).getNameIdentifier();
          if (identifier != null)           return TextRange.from(identifier.getStartOffsetInParent(),identifier.getTextLength());
        }
        return super.getRangeInElement();
      }
    }
);
  }
}
