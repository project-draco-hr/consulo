{
  HashSet<PsiFile> fileSet=new HashSet<PsiFile>();
  for (  UsageInfo usage : usages) {
    if (usage instanceof TurnToSuperReferenceUsageInfo && usage.getElement() != null) {
      fileSet.add(usage.getElement().getContainingFile());
      PsiElement newElement=usage.getElement().getReference().bindToElement(aSuper);
      if (newElement.getParent() instanceof PsiTypeElement) {
        if (newElement.getParent().getParent() instanceof PsiTypeCastExpression) {
          fixPossiblyRedundantCast((PsiTypeCastExpression)newElement.getParent().getParent());
        }
      }
    }
  }
}
