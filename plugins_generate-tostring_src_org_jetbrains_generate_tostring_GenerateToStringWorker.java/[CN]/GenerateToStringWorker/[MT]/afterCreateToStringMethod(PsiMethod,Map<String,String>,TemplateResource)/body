{
  if (containingFile instanceof PsiJavaFile) {
    final PsiJavaFile javaFile=(PsiJavaFile)containingFile;
    String javaCode=method.getText();
    if (javaCode.indexOf("Arrays.") > 0 && !(psi.hasImportStatement(javaFile,"java.util.*") || psi.hasImportStatement(javaFile,"java.util.Arrays"))) {
      psi.addImportStatement(javaFile,"java.util.*",elementFactory);
    }
    if (javaCode.indexOf("Field[]") > 0 && !(psi.hasImportStatement(javaFile,"java.lang.reflect.*") || psi.hasImportStatement(javaFile,"java.lang.reflect.Field"))) {
      psi.addImportStatement(javaFile,"java.lang.reflect.*",elementFactory);
    }
    if (params.get("autoImportPackages") != null) {
      autoImportPackages(javaFile,params.get("autoImportPackages"));
    }
  }
  codeStyleManager.reformat(method);
  if (config.isJumpToMethod() && editor != null) {
    PsiMethod newMethod=psi.findMethodByName(clazz,template.getTargetMethodName());
    if (newMethod != null) {
      int offset=newMethod.getTextOffset();
      if (offset > 2) {
        VisualPosition vp=editor.offsetToVisualPosition(offset);
        if (logger.isDebugEnabled())         logger.debug("Moving/Scrolling caret to " + vp + " (offset="+ offset+ ")");
        editor.getCaretModel().moveToVisualPosition(vp);
        editor.getScrollingModel().scrollToCaret(ScrollType.CENTER_DOWN);
      }
    }
  }
}
