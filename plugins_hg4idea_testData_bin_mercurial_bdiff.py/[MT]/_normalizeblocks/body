def _normalizeblocks(a, b, blocks):
    prev = None
    for curr in blocks:
        if (prev is None):
            prev = curr
            continue
        shift = 0
        (a1, b1, l1) = prev
        a1end = (a1 + l1)
        b1end = (b1 + l1)
        (a2, b2, l2) = curr
        a2end = (a2 + l2)
        b2end = (b2 + l2)
        if (a1end == a2):
            while (((a1end + shift) < a2end) and (a[(a1end + shift)] == b[(b1end + shift)])):
                shift += 1
        elif (b1end == b2):
            while (((b1end + shift) < b2end) and (a[(a1end + shift)] == b[(b1end + shift)])):
                shift += 1
        yield (a1, b1, (l1 + shift))
        prev = ((a2 + shift), (b2 + shift), (l2 - shift))
    yield prev
