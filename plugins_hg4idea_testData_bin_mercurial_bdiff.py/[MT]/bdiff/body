def bdiff(a, b):
    a = str(a).splitlines(True)
    b = str(b).splitlines(True)
    if (not a):
        s = ''.join(b)
        return (s and (struct.pack('>lll', 0, 0, len(s)) + s))
    bin = []
    p = [0]
    for i in a:
        p.append((p[(-1)] + len(i)))
    d = difflib.SequenceMatcher(None, a, b).get_matching_blocks()
    d = _normalizeblocks(a, b, d)
    la = 0
    lb = 0
    for (am, bm, size) in d:
        s = ''.join(b[lb:bm])
        if ((am > la) or s):
            bin.append((struct.pack('>lll', p[la], p[am], len(s)) + s))
        la = (am + size)
        lb = (bm + size)
    return ''.join(bin)
