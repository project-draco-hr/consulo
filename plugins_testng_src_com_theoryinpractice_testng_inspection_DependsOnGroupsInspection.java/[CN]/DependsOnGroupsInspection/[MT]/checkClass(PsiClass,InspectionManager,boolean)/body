{
  LOGGER.info("Looking for dependsOnGroups problems in " + psiClass.getName());
  if (!psiClass.getContainingFile().isWritable())   return null;
  List<ProblemDescriptor> problemDescriptors=new ArrayList<ProblemDescriptor>();
  for (  PsiAnnotation annotation : TestNGUtil.getTestNGAnnotations(psiClass)) {
    PsiNameValuePair dep=null;
    PsiNameValuePair[] params=annotation.getParameterList().getAttributes();
    for (    PsiNameValuePair param : params) {
      if ("dependsOnGroups".equals(param.getName())) {
        dep=param;
        break;
      }
    }
    if (dep != null) {
      if (dep.getValue() != null) {
        LOGGER.info("Found dependsOnGroups with: " + dep.getValue().getText());
        Matcher matcher=Pattern.compile("\"([a-zA-Z1-9_\\(\\)]*)\"").matcher(dep.getValue().getText());
        while (matcher.find()) {
          String methodName=matcher.group(1);
          checkMethodNameDependency(manager,psiClass,methodName,dep,problemDescriptors);
        }
      }
    }
  }
  return problemDescriptors.toArray(new ProblemDescriptor[]{});
}
