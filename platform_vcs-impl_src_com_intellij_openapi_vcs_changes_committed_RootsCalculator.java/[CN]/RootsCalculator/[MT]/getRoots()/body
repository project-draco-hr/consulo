{
  myContentRoots=myPlManager.getRootsUnderVcs(myVcs);
  List<VirtualFile> roots=new ArrayList<VirtualFile>();
  final List<VcsDirectoryMapping> mappings=myPlManager.getDirectoryMappings(myVcs);
  for (  VcsDirectoryMapping mapping : mappings) {
    if (mapping.isDefaultMapping()) {
      if (myVcs.equals(myPlManager.getVcsFor(myProject.getBaseDir()))) {
        roots.add(myProject.getBaseDir());
      }
    }
 else {
      VirtualFile newFile=LocalFileSystem.getInstance().findFileByPath(mapping.getDirectory());
      if (newFile == null) {
        newFile=LocalFileSystem.getInstance().refreshAndFindFileByPath(mapping.getDirectory());
      }
      if (newFile != null) {
        roots.add(newFile);
      }
 else {
        LOG.info("Can not file virtual file for root: " + mapping.getDirectory());
      }
    }
  }
  roots.addAll(Arrays.asList(myContentRoots));
  final Map<VirtualFile,RepositoryLocation> result=new HashMap<VirtualFile,RepositoryLocation>();
  for (Iterator<VirtualFile> iterator=roots.iterator(); iterator.hasNext(); ) {
    final VirtualFile vf=iterator.next();
    final RepositoryLocation location=myLocationCache.getLocation(myVcs,new FilePathImpl(vf),false);
    if (location != null) {
      result.put(vf,location);
    }
 else {
      iterator.remove();
    }
  }
  roots=myVcs.filterUniqueRoots(roots,IntoSelfVirtualFileConvertor.getInstance());
  result.keySet().retainAll(roots);
  logRoots(roots);
  return result;
}
