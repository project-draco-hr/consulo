{
  MavenProjectsManager mavenProjectManager=MavenProjectsManager.getInstance(context.getProject());
  if (!mavenProjectManager.isMavenizedProject())   return ProcessingItem.EMPTY_ARRAY;
  CompilerConfiguration config=CompilerConfiguration.getInstance(context.getProject());
  List<ProcessingItem> result=new ArrayList<ProcessingItem>();
  for (  Module eachModule : context.getCompileScope().getAffectedModules()) {
    MavenProjectModel mavenProject=mavenProjectManager.findProject(eachModule);
    if (mavenProject == null)     continue;
    VirtualFile outputDir=context.getModuleOutputDirectory(eachModule);
    VirtualFile testOutputDir=context.getModuleOutputDirectoryForTests(eachModule);
    List<VirtualFile> outputDirs=new ArrayList<VirtualFile>();
    if (outputDir != null)     outputDirs.add(outputDir);
    if (testOutputDir != null)     outputDirs.add(testOutputDir);
    if (outputDirs.isEmpty())     continue;
    for (    VirtualFile eachSourceRoot : context.getSourceRoots(eachModule)) {
      collectProcessingItems(eachModule,eachSourceRoot,eachSourceRoot,outputDirs,config,mavenProject.isFiltered(eachSourceRoot),result,context.getProgressIndicator());
    }
  }
  return result.toArray(new ProcessingItem[result.size()]);
}
