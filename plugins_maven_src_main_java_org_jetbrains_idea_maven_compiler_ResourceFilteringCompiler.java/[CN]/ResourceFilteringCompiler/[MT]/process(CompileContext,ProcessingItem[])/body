{
  context.getProgressIndicator().setText("Filtering Maven resources...");
  final List<ProcessingItem> result=new ArrayList<ProcessingItem>(items.length);
  int count=0;
  for (  final ProcessingItem each : items) {
    context.getProgressIndicator().setFraction(((double)count) / items.length);
    context.getProgressIndicator().checkCanceled();
    final MyProcessingItem eachItem=(MyProcessingItem)each;
    final VirtualFile outputFile=each.getFile();
    final VirtualFile sourceFile=eachItem.getSourceFile();
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        try {
          if (eachItem.isFiltered()) {
            String resolved=PropertyResolver.resolve(eachItem.getModule(),VfsUtil.loadText(outputFile));
            VfsUtil.saveText(outputFile,resolved);
          }
 else {
            boolean wasFiltered=outputFile.getTimeStamp() != sourceFile.getTimeStamp();
            if (wasFiltered) {
              VfsUtil.saveText(outputFile,VfsUtil.loadText(sourceFile));
            }
          }
          result.add(each);
        }
 catch (        IOException e) {
          context.addMessage(CompilerMessageCategory.ERROR,"Maven: Cannot filter properties",outputFile.getUrl(),-1,-1);
        }
      }
    }
);
  }
  return result.toArray(new ProcessingItem[result.size()]);
}
