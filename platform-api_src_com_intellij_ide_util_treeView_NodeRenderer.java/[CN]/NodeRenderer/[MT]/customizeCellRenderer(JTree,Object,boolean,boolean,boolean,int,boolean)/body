{
  Color color=null;
  NodeDescriptor descriptor=null;
  if (value instanceof DefaultMutableTreeNode) {
    DefaultMutableTreeNode node=(DefaultMutableTreeNode)value;
    Object userObject=node.getUserObject();
    if (userObject instanceof NodeDescriptor) {
      descriptor=(NodeDescriptor)userObject;
      color=descriptor.getColor();
      if (expanded) {
        setIcon(descriptor.getOpenIcon());
      }
 else {
        setIcon(descriptor.getClosedIcon());
      }
    }
  }
  if (descriptor instanceof PresentableNodeDescriptor) {
    final PresentableNodeDescriptor node=(PresentableNodeDescriptor)descriptor;
    final PresentationData presentation=node.getPresentation();
    final List<PresentableNodeDescriptor.ColoredFragment> coloredText=presentation.getColoredText();
    if (coloredText.size() == 0) {
      String text=tree.convertValueToText(value.toString(),selected,expanded,leaf,row,hasFocus);
      SimpleTextAttributes simpleTextAttributes=getSimpleTextAttributes(node,color);
      append(text,simpleTextAttributes);
    }
 else {
      for (      PresentableNodeDescriptor.ColoredFragment each : coloredText) {
        append(each.getText(),each.getAttributes(),true);
      }
    }
    final String location=presentation.getLocationString();
    if (location != null && location.length() > 0) {
      append(" (" + location + ")",SimpleTextAttributes.GRAY_ATTRIBUTES);
    }
    setToolTipText(presentation.getTooltip());
  }
 else   if (value != null) {
    String text=value.toString();
    if (descriptor != null) {
      text=descriptor.myName;
    }
    text=tree.convertValueToText(text,selected,expanded,leaf,row,hasFocus);
    if (text == null) {
      text="";
    }
    setToolTipText(null);
  }
}
