{
  check();
  final Container parent=myPanel.getParent();
  if (parent instanceof Splitter) {
    final EditorWindow[] siblings=findSiblings();
    final JPanel parent2=(JPanel)parent.getParent();
    for (int i=0; i < siblings.length; i++) {
      final EditorWindow sibling=siblings[i];
      final EditorWithProviderComposite[] editors=sibling.getEditors();
      for (int j=0; j < editors.length; j++) {
        final EditorWithProviderComposite editor=editors[j];
        if (myTabbedPane != null && getTabCount() < UISettings.getInstance().EDITOR_TAB_LIMIT && findFileComposite(editor.getFile()) == null) {
          setEditor(editor);
        }
 else {
          getManager().disposeComposite(editor);
        }
      }
      LOG.assertTrue(sibling != this);
      sibling.dispose();
    }
    parent2.remove(parent);
    if (myTabbedPane != null) {
      parent2.add(myTabbedPane.getComponent(),BorderLayout.CENTER);
    }
 else {
      parent2.add(myPanel.getComponent(0),BorderLayout.CENTER);
    }
    parent2.revalidate();
    myPanel=parent2;
    myOwner.setCurrentWindow(this,false);
  }
}
