{
  check();
  if (splitAvailable()) {
    final JPanel panel=myPanel;
    final int tabCount=getTabCount();
    if (tabCount != 0) {
      final boolean singleFileMode=getManager().isSingleFileMode();
      final EditorWithProviderComposite firstEC=getEditorAt(0);
      myPanel=new JPanel(new BorderLayout());
      final Splitter splitter=new Splitter(orientation == JSplitPane.VERTICAL_SPLIT,0.5f,0.1f,0.9f);
      final EditorWindow res=new EditorWindow(myOwner);
      if (myTabbedPane != null) {
        final EditorWithProviderComposite selectedEditor=getSelectedEditor();
        panel.remove(myTabbedPane.getComponent());
        panel.add(splitter,BorderLayout.CENTER);
        splitter.setFirstComponent(myPanel);
        myPanel.add(myTabbedPane.getComponent(),BorderLayout.CENTER);
        splitter.setSecondComponent(res.myPanel);
        if (singleFileMode) {
          final TComp component=(TComp)myTabbedPane.getComponent();
          myOwner.remove(component);
          res.setEditor(component.myEditor);
        }
 else {
          for (int i=0; i != tabCount; ++i) {
            final EditorWithProviderComposite eC=getEditorAt(i);
            final VirtualFile file=eC.getFile();
            FileEditorManagerImpl.openFileImpl3(res,file,false,null);
            res.setFilePinned(file,isFilePinned(file));
          }
          res.setSelectedEditor(selectedEditor);
          selectedEditor.getComponent().requestFocus();
        }
        panel.revalidate();
      }
 else {
        panel.removeAll();
        panel.add(splitter,BorderLayout.CENTER);
        splitter.setFirstComponent(myPanel);
        splitter.setSecondComponent(res.myPanel);
        panel.revalidate();
        final VirtualFile file=firstEC.getFile();
        FileEditorManagerImpl.openFileImpl3(this,file,true,null);
        FileEditorManagerImpl.openFileImpl3(res,file,false,null);
      }
      return res;
    }
  }
  return this;
}
