{
  int startOffset=0;
  if (mySegments.getSegmentCount() > 0) {
    final int segmentIndex;
    try {
      segmentIndex=mySegments.findSegmentIndex(offset) - 2;
    }
 catch (    IndexOutOfBoundsException ex) {
      throw new IndexOutOfBoundsException(ex.getMessage() + " Lexer: " + myLexer);
    }
    int startIndex=Math.max(0,segmentIndex);
    int data;
    do {
      data=mySegments.getSegmentData(startIndex);
      if (isInitialState(data) || startIndex == 0)       break;
      startIndex--;
    }
 while (true);
    startOffset=mySegments.getSegmentStart(startIndex);
  }
  ImmutableText newText=document.getImmutableText().insert(offset,Character.toString(c));
  myLexer.start(newText,startOffset,newText.length(),myInitialState);
  IElementType tokenType=null;
  while (myLexer.getTokenType() != null) {
    if (myLexer.getTokenEnd() >= offset + 1) {
      tokenType=myLexer.getTokenType();
      break;
    }
    myLexer.advance();
  }
  return getAttributes(tokenType);
}
