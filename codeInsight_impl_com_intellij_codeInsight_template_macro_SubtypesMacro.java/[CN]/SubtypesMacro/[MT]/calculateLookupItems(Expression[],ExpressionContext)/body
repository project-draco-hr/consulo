{
  if (params == null || params.length == 0)   return LookupItem.EMPTY_ARRAY;
  Result paramResult=params[0].calculateQuickResult(context);
  if (paramResult instanceof PsiTypeResult) {
    final PsiType type=((PsiTypeResult)paramResult).getType();
    Set<PsiType> types=new HashSet<PsiType>();
    types.add(type);
    final PsiFile file=PsiDocumentManager.getInstance(context.getProject()).getPsiFile(context.getEditor().getDocument());
    final PsiElement element=file.findElementAt(context.getStartOffset());
    types.addAll(CodeInsightUtil.addSubtypes(type,element,false));
    LookupItem[] result=new LookupItem[types.size()];
    final Iterator<PsiType> it=types.iterator();
    for (int i=0; i < result.length; i++) {
      result[i]=LookupItemUtil.objectToLookupItem(it.next());
    }
    return result;
  }
  return LookupItem.EMPTY_ARRAY;
}
