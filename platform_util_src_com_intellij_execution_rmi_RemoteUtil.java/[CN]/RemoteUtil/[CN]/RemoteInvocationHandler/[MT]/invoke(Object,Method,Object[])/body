{
  if (method.getDeclaringClass() == Object.class) {
    return method.invoke(myRemote,args);
  }
 else {
    Method m=ourRemoteToLocalMap.get(Pair.<Class<?>,Class<?>>create(myRemote.getClass(),myClazz)).get(method);
    if (m == null)     throw new NoSuchMethodError(method.getName() + " in " + myRemote.getClass());
    try {
      Object result=m.invoke(myRemote,args);
      if (result instanceof Remote) {
        return castToLocal(result,tryFixReturnType(result,method.getReturnType(),myLoader));
      }
      return result;
    }
 catch (    InvocationTargetException e) {
      Throwable cause=e.getCause();
      if (cause instanceof RuntimeException)       throw cause;
      if (cause instanceof Error)       throw cause;
      if (canThrow(cause,method))       throw cause;
      throw new RuntimeException(cause);
    }
  }
}
