{
  try {
    doTest(new PerformAction(){
      public void performAction(      final VirtualFile rootDir,      final VirtualFile rootAfter) throws Exception {
        PsiClass aClass=myJavaFacade.findClass("Test");
        assertNotNull("Class Test not found",aClass);
        final PsiMethod method=aClass.findMethodsByName("foo",false)[0];
        final String wrapperClassName="Wrapper";
        final PsiClass wrapperClass=myJavaFacade.findClass(wrapperClassName);
        assertTrue(!existing || wrapperClass != null);
        final PsiField delegateField=existing ? wrapperClass.findFieldByName("myField",false) : null;
        WrapReturnValueProcessor processor=new WrapReturnValueProcessor(wrapperClassName,"",method,existing,delegateField);
        processor.run();
        LocalFileSystem.getInstance().refresh(false);
        FileDocumentManager.getInstance().saveAllDocuments();
      }
    }
);
  }
 catch (  RuntimeException e) {
    if (fail) {
      e.printStackTrace();
      return;
    }
    if (!fail)     throw e;
  }
  if (fail) {
    fail("Conflict was not found");
  }
}
