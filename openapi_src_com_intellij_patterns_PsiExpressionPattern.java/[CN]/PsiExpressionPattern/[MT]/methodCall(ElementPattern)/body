{
  return with(new PatternCondition<T>(){
    public boolean accepts(    @NotNull final T element,    final MatchingContext matchingContext,    @NotNull final TraverseContext traverseContext){
      if (element instanceof PsiMethodCallExpression) {
        final JavaResolveResult[] results=((PsiMethodCallExpression)element).getMethodExpression().multiResolve(true);
        for (        JavaResolveResult result : results) {
          if (methodPattern.accepts(result.getElement(),matchingContext,traverseContext)) {
            return true;
          }
        }
      }
      return false;
    }
  }
);
}
