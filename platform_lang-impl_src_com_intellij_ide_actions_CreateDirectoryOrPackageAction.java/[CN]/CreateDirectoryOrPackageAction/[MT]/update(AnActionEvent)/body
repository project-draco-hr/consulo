{
  Presentation presentation=event.getPresentation();
  Project project=event.getData(CommonDataKeys.PROJECT);
  if (project == null) {
    presentation.setVisible(false);
    presentation.setEnabled(false);
    return;
  }
  IdeView view=event.getData(LangDataKeys.IDE_VIEW);
  if (view == null) {
    presentation.setVisible(false);
    presentation.setEnabled(false);
    return;
  }
  final PsiDirectory[] directories=view.getDirectories();
  if (directories.length == 0) {
    presentation.setVisible(false);
    presentation.setEnabled(false);
    return;
  }
  presentation.setVisible(true);
  presentation.setEnabled(true);
  if (directories.length > 1) {
    presentation.setText(ChildType.Directory.getName());
    presentation.setIcon(AllIcons.Nodes.TreeClosed);
  }
 else {
    Trinity<ContentFolderTypeProvider,PsiDirectory,ChildType> info=getInfo(directories[0]);
    presentation.setText(info.getThird().getName());
    ContentFolderTypeProvider first=info.getFirst();
    Icon childIcon;
    if (first == null) {
      childIcon=AllIcons.Nodes.TreeClosed;
    }
 else {
      childIcon=first.getChildPackageIcon() == null ? first.getChildDirectoryIcon() : first.getChildPackageIcon();
    }
    presentation.setIcon(childIcon);
  }
}
