{
  if (!(expression instanceof GrExpression))   return Access.Read;
  GrExpression expr=(GrExpression)expression;
  boolean readAccess=PsiUtil.isAccessedForReading(expr);
  boolean writeAccess=PsiUtil.isAccessedForWriting(expr);
  if (!writeAccess && expr instanceof GrReferenceExpression) {
    PsiElement actualReferee=((GrReferenceExpression)expr).resolve();
    if (actualReferee instanceof PsiMethod && GroovyPropertyUtils.isSimplePropertySetter((PsiMethod)actualReferee)) {
      writeAccess=true;
      readAccess=false;
    }
  }
  if (writeAccess && readAccess)   return Access.ReadWrite;
  return writeAccess ? Access.Write : Access.Read;
}
