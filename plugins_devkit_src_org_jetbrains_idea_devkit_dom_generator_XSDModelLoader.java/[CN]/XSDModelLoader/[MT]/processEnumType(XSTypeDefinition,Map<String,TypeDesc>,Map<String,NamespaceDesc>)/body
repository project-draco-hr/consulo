{
  boolean complexType=def instanceof XSComplexTypeDefinition;
  if (!nsdMap.containsKey(def.getNamespace())) {
    Util.log("Namespace desc not found for: " + def);
  }
  final String typeName=toJavaTypeName(def,nsdMap);
  final TypeDesc td=new TypeDesc(def.getName(),def.getNamespace(),typeName,TypeDesc.TypeEnum.ENUM);
  final XSComplexTypeDefinition ct=complexType ? (XSComplexTypeDefinition)def : null;
  final XSSimpleTypeDefinition st=(XSSimpleTypeDefinition)(complexType ? ((XSComplexTypeDefinition)def).getSimpleType() : def);
  for (int i=0; i < st.getLexicalEnumeration().getLength(); i++) {
    final String s=st.getLexicalEnumeration().item(i);
    td.fdMap.put(s,new FieldDesc(Util.computeEnumConstantName(s,td.name),s));
  }
  final XSObjectList anns=complexType ? ct.getAnnotations() : st.getAnnotations();
  td.documentation=parseAnnotationString("Enumeration " + def.getNamespace() + ":"+ def.getName()+ " documentation",anns != null && anns.getLength() > 0 ? ((XSAnnotation)anns.item(0)).getAnnotationString() : null);
  jtMap.put(model.toJavaQualifiedTypeName(def,nsdMap,true),td);
}
