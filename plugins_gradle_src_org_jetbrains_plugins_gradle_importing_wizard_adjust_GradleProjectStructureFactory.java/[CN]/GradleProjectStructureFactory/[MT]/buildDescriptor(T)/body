{
  final Ref<GradleProjectStructureNodeDescriptor<GradleEntity>> result=new Ref<GradleProjectStructureNodeDescriptor<GradleEntity>>();
  entity.invite(new GradleEntityVisitor(){
    @Override public void visit(    @NotNull GradleProject project){
      result.set(new GradleProjectStructureNodeDescriptor<GradleEntity>(project,project.getName(),IconLoader.getIcon(ApplicationInfoEx.getInstanceEx().getSmallIconUrl())));
    }
    @Override public void visit(    @NotNull GradleModule module){
      result.set(new GradleProjectStructureNodeDescriptor<GradleEntity>(module,module.getName(),GradleIcons.MODULE_ICON));
    }
    @Override public void visit(    @NotNull GradleContentRoot contentRoot){
      result.set(new GradleProjectStructureNodeDescriptor<GradleEntity>(contentRoot,GradleBundle.message("gradle.import.structure.tree.node.content.root"),GradleIcons.CONTENT_ROOT_ICON));
    }
    @Override public void visit(    @NotNull GradleLibrary library){
      result.set(new GradleProjectStructureNodeDescriptor<GradleEntity>(library,library.getName(),GradleIcons.LIB_ICON));
    }
    @Override public void visit(    @NotNull GradleModuleDependency dependency){
      visit(dependency.getTarget());
    }
    @Override public void visit(    @NotNull GradleLibraryDependency dependency){
      visit(dependency.getTarget());
    }
  }
);
  return (GradleProjectStructureNodeDescriptor<T>)result.get();
}
