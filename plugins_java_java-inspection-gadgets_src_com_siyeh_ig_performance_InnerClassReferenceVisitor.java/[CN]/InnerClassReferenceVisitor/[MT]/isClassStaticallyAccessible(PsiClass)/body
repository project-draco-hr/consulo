{
  if (aClass.getContainingClass() != null && aClass.hasModifierProperty(PsiModifier.STATIC)) {
    if (!PsiTreeUtil.isAncestor(aClass,innerClass,false)) {
      return true;
    }
  }
  if (InheritanceUtil.isInheritorOrSelf(innerClass,aClass,true)) {
    return true;
  }
  PsiClass classScope=aClass;
  final PsiClass outerClass=ClassUtils.getContainingClass(innerClass);
  while (classScope != null) {
    if (InheritanceUtil.isInheritorOrSelf(outerClass,classScope,true)) {
      return false;
    }
    final PsiElement scope=classScope.getScope();
    if (scope instanceof PsiClass) {
      classScope=(PsiClass)scope;
    }
 else {
      classScope=null;
    }
  }
  return true;
}
