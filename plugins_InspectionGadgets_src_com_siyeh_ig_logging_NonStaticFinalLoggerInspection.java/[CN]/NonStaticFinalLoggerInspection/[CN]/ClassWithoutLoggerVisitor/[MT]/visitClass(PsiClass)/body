{
  if (aClass.isInterface() || aClass.isEnum() || aClass.isAnnotationType()) {
    return;
  }
  if (aClass instanceof PsiTypeParameter || aClass instanceof PsiAnonymousClass) {
    return;
  }
  if (aClass.getContainingClass() != null) {
    return;
  }
  final PsiField[] fields=aClass.getFields();
  for (  final PsiField field : fields) {
    if (isLogger(field)) {
      if (!field.hasModifierProperty(PsiModifier.STATIC) || !field.hasModifierProperty(PsiModifier.FINAL)) {
        registerFieldError(field);
      }
    }
  }
}
