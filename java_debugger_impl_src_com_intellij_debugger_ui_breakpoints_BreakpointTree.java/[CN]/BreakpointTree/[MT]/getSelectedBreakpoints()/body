{
  final TreePath[] selectionPaths=getSelectionPaths();
  if (selectionPaths == null || selectionPaths.length == 0) {
    return Breakpoint.EMPTY_ARRAY;
  }
  final List<Breakpoint> breakpoints=new ArrayList<Breakpoint>(selectionPaths.length);
  for (  TreePath path : selectionPaths) {
    final CheckedTreeNode node=(CheckedTreeNode)path.getLastPathComponent();
    TreeUtil.traverseDepth(node,new TreeUtil.Traverse(){
      public boolean accept(      Object _node){
        final CheckedTreeNode node=(CheckedTreeNode)_node;
        final TreeDescriptor descriptor=(TreeDescriptor)node.getUserObject();
        if (descriptor instanceof BreakpointDescriptor) {
          breakpoints.add(((BreakpointDescriptor)descriptor).getBreakpoint());
        }
        return true;
      }
    }
);
  }
  return breakpoints.toArray(new Breakpoint[breakpoints.size()]);
}
