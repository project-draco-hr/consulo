{
  super.visitBinaryExpression(expression);
  final PsiJavaToken sign=expression.getOperationSign();
  if (sign == null) {
    return;
  }
  final String operand=sign.getText();
  if (!isComparison(operand)) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  if (!isCharacter(lhs)) {
    return;
  }
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return;
  }
  final PsiType rhsType=rhs.getType();
  if (rhsType == null) {
    return;
  }
  if (!rhsType.equals(PsiType.CHAR)) {
    return;
  }
  registerError(expression);
}
