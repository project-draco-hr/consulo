{
  super.visitBinaryExpression(expression);
  final PsiExpression rhs=expression.getROperand();
  if (!(rhs != null)) {
    return;
  }
  if (!ComparisonUtils.isComparison(expression)) {
    return;
  }
  if (ComparisonUtils.isEqualityComparison(expression)) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  if (!isCharacter(lhs)) {
    return;
  }
  if (!isCharacter(rhs)) {
    return;
  }
  if (NonNlsUtils.isNonNlsAnnotated(lhs) || NonNlsUtils.isNonNlsAnnotated(rhs)) {
    return;
  }
  registerError(expression);
}
