{
  if (isQuickFixOnReadOnlyFile(project,descriptor)) {
    return;
  }
  final PsiElement identifier=descriptor.getPsiElement();
  final PsiModifierListOwner parent=(PsiModifierListOwner)identifier.getParent();
  try {
    final PsiManager psiManager=parent.getManager();
    final PsiElementFactory factory=psiManager.getElementFactory();
    final PsiAnnotation annotation=factory.createAnnotationFromText("@java.lang.Deprecated",parent);
    final PsiModifierList modifierList=parent.getModifierList();
    modifierList.addAfter(annotation,null);
  }
 catch (  IncorrectOperationException e) {
    final Class aClass=getClass();
    final String className=aClass.getName();
    final Logger logger=Logger.getInstance(className);
    logger.error(e);
  }
}
