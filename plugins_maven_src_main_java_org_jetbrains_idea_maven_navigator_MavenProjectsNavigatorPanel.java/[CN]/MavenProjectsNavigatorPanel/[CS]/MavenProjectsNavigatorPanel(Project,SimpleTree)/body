{
  super(true,true);
  myProject=project;
  myTree=tree;
  final ActionManager actionManager=ActionManager.getInstance();
  ActionToolbar actionToolbar=actionManager.createActionToolbar("Maven Navigator Toolbar",(DefaultActionGroup)actionManager.getAction("Maven.NavigatorActionsToolbar"),true);
  actionToolbar.setTargetComponent(tree);
  setToolbar(actionToolbar.getComponent());
  setContent(ScrollPaneFactory.createScrollPane(myTree));
  setTransferHandler(new MyTransferHandler(project));
  myTree.addMouseListener(new PopupHandler(){
    public void invokePopup(    final Component comp,    final int x,    final int y){
      final String id=getMenuId(getSelectedNodes(MavenProjectsStructure.MavenSimpleNode.class));
      if (id != null) {
        final ActionGroup actionGroup=(ActionGroup)actionManager.getAction(id);
        if (actionGroup != null) {
          actionManager.createActionPopupMenu("",actionGroup).getComponent().show(comp,x,y);
        }
      }
    }
    @Nullable private String getMenuId(    Collection<? extends MavenProjectsStructure.MavenSimpleNode> nodes){
      String id=null;
      for (      MavenProjectsStructure.MavenSimpleNode node : nodes) {
        String menuId=node.getMenuId();
        if (menuId == null) {
          return null;
        }
        if (id == null) {
          id=menuId;
        }
 else         if (!id.equals(menuId)) {
          return null;
        }
      }
      return id;
    }
  }
);
}
