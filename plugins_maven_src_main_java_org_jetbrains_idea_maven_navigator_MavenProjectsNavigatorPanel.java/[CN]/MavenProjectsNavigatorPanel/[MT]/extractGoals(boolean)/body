{
  final MavenProjectsStructure.ProjectNode projectNode=getSelectedProjectNode();
  if (projectNode != null) {
    MavenProject project=projectNode.getMavenProject();
    String goal=project.getDefaultGoal();
    if (!StringUtil.isEmptyOrSpaces(goal)) {
      return ContainerUtil.newArrayList(StringUtil.tokenize(new StringTokenizer(goal)));
    }
  }
 else {
    final List<MavenProjectsStructure.GoalNode> nodes=getSelectedNodes(MavenProjectsStructure.GoalNode.class);
    if (MavenProjectsStructure.getCommonProjectNode(nodes) == null) {
      return null;
    }
    final List<String> goals=new ArrayList<String>();
    for (    MavenProjectsStructure.GoalNode node : nodes) {
      goals.add(qualifiedGoals ? node.getGoal() : node.getName());
    }
    Collections.sort(goals,myGoalOrderComparator);
    return goals;
  }
  return null;
}
