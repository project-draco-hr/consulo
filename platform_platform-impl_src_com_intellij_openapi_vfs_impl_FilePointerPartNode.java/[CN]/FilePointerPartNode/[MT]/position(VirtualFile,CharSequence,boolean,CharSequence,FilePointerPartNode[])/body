{
  checkConsistency();
  int partStart;
  if (parent == null) {
    partStart=0;
    outNode[0]=this;
  }
 else {
    VirtualFile gParent=parent.getParent();
    CharSequence gParentName=gParent == null ? null : gParent.getNameSequence();
    partStart=position(gParent,gParentName,gParentName != null && !StringUtil.equals(gParentName,"/"),parentName,outNode);
    if (partStart == -1)     return -1;
  }
  boolean childSeparator=false;
  if (separator) {
    if (partStart == outNode[0].part.length()) {
      childSeparator=true;
    }
 else {
      int sepIndex=indexOfFirstDifferentChar("/",0,outNode[0].part,partStart);
      if (sepIndex != 1)       return -1;
      partStart++;
    }
  }
  int index=indexOfFirstDifferentChar(childName,0,outNode[0].part,partStart);
  if (index == childName.length()) {
    return partStart + index;
  }
  if (partStart + index == outNode[0].part.length()) {
    for (    FilePointerPartNode child : outNode[0].children) {
      int childPos=child.position(null,null,childSeparator,childName.subSequence(index,childName.length()),outNode);
      if (childPos != -1)       return childPos;
    }
  }
  return -1;
}
