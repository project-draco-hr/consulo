{
  Map<PsiTypeParameter,PsiType> newMap=new THashMap<PsiTypeParameter,PsiType>(substitutor.getSubstitutionMap());
  for (  Map.Entry<PsiTypeParameter,PsiType> entry : substitutor.getSubstitutionMap().entrySet()) {
    PsiTypeParameter typeParameter=entry.getKey();
    PsiType type=entry.getValue();
    PsiClass resolved=PsiUtil.resolveClassInType(type);
    if (!parentSubstitutor.getSubstitutionMap().containsKey(typeParameter))     continue;
    PsiType parentType=parentSubstitutor.substitute(typeParameter);
    if (resolved instanceof PsiTypeParameter) {
      PsiTypeParameter res=(PsiTypeParameter)resolved;
      newMap.put(res,parentType);
    }
 else     if (!Comparing.equal(type,parentType)) {
      return null;
    }
  }
  return JavaPsiFacade.getElementFactory(project).createSubstitutor(newMap);
}
