{
  if (field.hasInitializer()) {
    PsiExpression initializer=field.getInitializer();
    if (initializer != null && !(field instanceof PsiCompiledElement)) {
      SliceUsage usage=createSliceUsage(initializer,parent);
      if (!processor.process(usage))       return false;
    }
  }
  return ReferencesSearch.search(field,parent.getScope().toSearchScope()).forEach(new Processor<PsiReference>(){
    public boolean process(    final PsiReference reference){
      SliceManager.getInstance(field.getProject()).checkCanceled();
      PsiElement element=reference.getElement();
      if (!(element instanceof PsiReferenceExpression))       return true;
      if (element instanceof PsiCompiledElement)       return true;
      final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)element;
      PsiElement parentExpr=referenceExpression.getParent();
      if (PsiUtil.isOnAssignmentLeftHand(referenceExpression)) {
        PsiExpression rExpression=((PsiAssignmentExpression)parentExpr).getRExpression();
        SliceUsage usage=createSliceUsage(rExpression,parent);
        return processor.process(usage);
      }
      if (parentExpr instanceof PsiPrefixExpression && ((PsiPrefixExpression)parentExpr).getOperand() == referenceExpression && (((PsiPrefixExpression)parentExpr).getOperationTokenType() == JavaTokenType.PLUSPLUS || ((PsiPrefixExpression)parentExpr).getOperationTokenType() == JavaTokenType.MINUSMINUS)) {
        SliceUsage usage=createSliceUsage((PsiExpression)parentExpr,parent);
        return processor.process(usage);
      }
      if (parentExpr instanceof PsiPostfixExpression && ((PsiPostfixExpression)parentExpr).getOperand() == referenceExpression && (((PsiPostfixExpression)parentExpr).getOperationTokenType() == JavaTokenType.PLUSPLUS || ((PsiPostfixExpression)parentExpr).getOperationTokenType() == JavaTokenType.MINUSMINUS)) {
        SliceUsage usage=createSliceUsage((PsiExpression)parentExpr,parent);
        return processor.process(usage);
      }
      return true;
    }
  }
);
}
