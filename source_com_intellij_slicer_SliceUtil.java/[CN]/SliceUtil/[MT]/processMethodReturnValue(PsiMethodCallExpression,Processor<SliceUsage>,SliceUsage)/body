{
  final PsiMethod methodCalled=methodCallExpr.resolveMethod();
  if (methodCalled == null)   return true;
  PsiType returnType=methodCalled.getReturnType();
  if (returnType == null)   return true;
  final PsiCodeBlock body=methodCalled.getBody();
  if (body == null)   return true;
  final boolean[] result={true};
  body.accept(new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitAnonymousClass(    PsiAnonymousClass aClass){
    }
    public void visitReturnStatement(    final PsiReturnStatement statement){
      PsiExpression returnValue=statement.getReturnValue();
      if (returnValue == null)       return;
      UsageInfo usageInfo=new UsageInfo(returnValue);
      SliceUsage usage=new SliceUsage(usageInfo,parent);
      if (!processor.process(usage)) {
        stopWalking();
        result[0]=false;
      }
    }
  }
);
  return result[0];
}
