{
  final PsiMethod methodCalled=methodCallExpr.resolveMethod();
  if (methodCalled == null)   return true;
  PsiType returnType=methodCalled.getReturnType();
  if (returnType == null)   return true;
  final PsiCodeBlock body=methodCalled.getBody();
  if (body == null)   return true;
  final Collection<PsiExpression> expressions=new THashSet<PsiExpression>();
  body.accept(new JavaRecursiveElementVisitor(){
    public void visitReturnStatement(    final PsiReturnStatement statement){
      PsiExpression returnValue=statement.getReturnValue();
      if (!(returnValue instanceof PsiReferenceExpression))       return;
      PsiElement resolved=((PsiReferenceExpression)returnValue).resolve();
      if (!(resolved instanceof PsiVariable))       return;
      expressions.addAll(getExpressionsFlownTo(returnValue,methodCalled,(PsiVariable)resolved));
    }
  }
);
  return processFlownFromExpressions(expressions,processor,parent);
}
