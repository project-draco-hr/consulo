{
  expression=simplify(expression);
  PsiElement original=expression;
  if (expression instanceof PsiReferenceExpression) {
    PsiReferenceExpression ref=(PsiReferenceExpression)expression;
    PsiElement resolved=ref.resolve();
    if (resolved instanceof PsiMethod && expression.getParent() instanceof PsiMethodCallExpression) {
      return processUsagesFlownDownTo(expression.getParent(),processor,parent);
    }
    if (!(resolved instanceof PsiVariable))     return true;
    expression=resolved;
  }
  if (expression instanceof PsiVariable) {
    PsiVariable variable=(PsiVariable)expression;
    final Set<PsiExpression> expressions=new THashSet<PsiExpression>(DfaUtil.getCachedVariableValues(variable,original));
    PsiExpression initializer=variable.getInitializer();
    if (initializer != null && expressions.isEmpty())     expressions.add(initializer);
    for (    PsiExpression exp : expressions) {
      if (!handToProcessor(exp,processor,parent))       return false;
    }
    if (variable instanceof PsiField) {
      return processFieldUsages((PsiField)variable,processor,parent);
    }
 else     if (variable instanceof PsiParameter) {
      return processParameterUsages((PsiParameter)variable,processor,parent);
    }
  }
  if (expression instanceof PsiMethodCallExpression) {
    return processMethodReturnValue((PsiMethodCallExpression)expression,processor,parent);
  }
  if (expression instanceof PsiConditionalExpression) {
    PsiConditionalExpression conditional=(PsiConditionalExpression)expression;
    PsiExpression thenE=conditional.getThenExpression();
    PsiExpression elseE=conditional.getElseExpression();
    if (thenE != null && !handToProcessor(thenE,processor,parent))     return false;
    if (elseE != null && !handToProcessor(elseE,processor,parent))     return false;
  }
  return true;
}
