{
  if (!scope.belongsTo(PeerFactory.getInstance().getVcsContextFactory().createFilePathOn(dir)))   return;
  final DirectoryContent dirContent=CvsStatusProvider.getDirectoryContent(dir,scope.getScopeModule());
  for (  VirtualFile file : dirContent.getUnknownFiles()) {
    builder.processUnversionedFile(file);
  }
  for (  Entry entry : dirContent.getDeletedFiles()) {
    builder.processLocallyDeletedFile(CvsVfsUtil.getFileFor(dir,entry.getFileName()));
  }
  for (  Entry deletedEntry : dirContent.getDeletedFiles()) {
    final FilePath filePath=PeerFactory.getInstance().getVcsContextFactory().createFilePathOn(dir,deletedEntry.getFileName());
    builder.processChange(new Change(new CvsUpToDateRevision(filePath),null));
  }
  for (  VirtualFileEntry fileEntry : dirContent.getFiles()) {
    processFile(dir,fileEntry.getVirtualFile(),fileEntry.getEntry(),builder);
  }
  if (recursively) {
    for (    VirtualFile file : dir.getChildren()) {
      if (file.isDirectory()) {
        processEntriesIn(file,scope,builder,true);
      }
    }
  }
}
