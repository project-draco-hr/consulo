{
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(myVcs.getProject()).getFileIndex();
  VirtualFile parentDir=dir.getParent();
  if (parentDir == null || !fileIndex.isInContent(parentDir)) {
    return;
  }
  final CvsInfo info=CvsEntriesManager.getInstance().getCvsInfoFor(dir);
  if (info.getRepository() == null) {
    builder.processUnversionedFile(dir);
    return;
  }
  final String dirTag=info.getStickyTag();
  final CvsInfo parentInfo=CvsEntriesManager.getInstance().getCvsInfoFor(parentDir);
  final String parentDirTag=parentInfo.getStickyTag();
  if (!Comparing.equal(dirTag,parentDirTag)) {
    if (dirTag == null) {
      builder.processSwitchedFile(dir,CvsUtil.HEAD,true);
    }
 else     if (CvsUtil.isNonDateTag(dirTag)) {
      final String tag=dirTag.substring(1);
      if (parentDirTag != null && CvsUtil.isNonDateTag(parentDirTag)) {
        String parentTag=parentDirTag.substring(1);
        if (tag.equals(parentTag)) {
          return;
        }
      }
      builder.processSwitchedFile(dir,CvsBundle.message("switched.tag.format",tag),true);
    }
 else     if (dirTag.startsWith(CvsUtil.STICKY_DATE_PREFIX)) {
      try {
        Date date=Entry.STICKY_DATE_FORMAT.parse(dirTag.substring(1));
        builder.processSwitchedFile(dir,CvsBundle.message("switched.date.format",date),true);
      }
 catch (      ParseException e) {
        builder.processSwitchedFile(dir,CvsBundle.message("switched.date.format",dirTag.substring(1)),true);
      }
    }
  }
}
