{
  ourBraceStack.clear();
  ourTagNameStack.clear();
  BraceMatcher matcher=getBraceMatcher(fileType);
  if (matcher == null)   return false;
  while (!iterator.atEnd()) {
    if (isStructuralBraceToken(fileType,iterator,fileText)) {
      if (isRBraceToken(iterator,fileText,fileType)) {
        ourBraceStack.push(iterator.getTokenType());
        ourTagNameStack.push(getTagName(matcher,fileText,iterator));
      }
      if (isLBraceToken(iterator,fileText,fileType)) {
        if (ourBraceStack.isEmpty())         return true;
        final int group=matcher.getBraceTokenGroupId(iterator.getTokenType());
        final IElementType topTokenType=ourBraceStack.pop();
        final IElementType tokenType=iterator.getTokenType();
        boolean isStrict=isStrictTagMatching(matcher,fileType,group);
        boolean isCaseSensitive=areTagsCaseSensitive(matcher,fileType,group);
        String topTagName=null;
        String tagName=null;
        if (isStrict) {
          topTagName=ourTagNameStack.pop();
          tagName=getTagName(matcher,fileText,iterator);
        }
        if (!isPairBraces(topTokenType,tokenType,fileType) || isStrict && !Comparing.equal(topTagName,tagName,isCaseSensitive)) {
          return false;
        }
      }
    }
    iterator.retreat();
  }
  return false;
}
