{
  super.visitMethod(method);
  final PsiType type=method.getReturnType();
  if (type == null) {
    return;
  }
  final PsiType componentType=type.getDeepComponentType();
  if (!(componentType instanceof PsiClassType)) {
    return;
  }
  final PsiClassType classType=(PsiClassType)componentType;
  if (!isSubclass(classType,containingClass)) {
    return;
  }
  if (!CollectionUtils.isCollectionClass(type)) {
    return;
  }
  final PsiTypeElement typeElement=method.getReturnTypeElement();
  registerError(typeElement);
}
