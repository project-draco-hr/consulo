{
  final PsiType type=expression.getType();
  if (type == null) {
    return;
  }
  final PsiType componentType=type.getDeepComponentType();
  if (!(componentType instanceof PsiClassType)) {
    return;
  }
  final PsiClassType classType=(PsiClassType)componentType;
  final PsiClass parentClass=PsiTreeUtil.getParentOfType(expression,PsiClass.class);
  if (!isSubclass(classType,parentClass)) {
    return;
  }
  registerError(expression.getClassReference(),parentClass);
}
