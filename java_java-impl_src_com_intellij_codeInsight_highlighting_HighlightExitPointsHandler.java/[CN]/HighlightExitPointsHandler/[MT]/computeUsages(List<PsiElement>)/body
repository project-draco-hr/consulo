{
  FeatureUsageTracker.getInstance().triggerFeatureUsed(ProductivityFeatureNames.CODEASSISTS_HIGHLIGHT_RETURN);
  PsiElement parent=myTarget.getParent();
  if (!(parent instanceof PsiReturnStatement) && !(parent instanceof PsiThrowStatement))   return;
  PsiCodeBlock body=null;
  final PsiLambdaExpression lambdaExpression=PsiTreeUtil.getParentOfType(myTarget,PsiLambdaExpression.class);
  if (lambdaExpression != null) {
    final PsiElement lambdaBody=lambdaExpression.getBody();
    if (lambdaBody instanceof PsiCodeBlock) {
      body=(PsiCodeBlock)lambdaBody;
    }
  }
  if (body == null) {
    PsiMethod method=PsiTreeUtil.getParentOfType(myTarget,PsiMethod.class);
    body=method != null ? method.getBody() : null;
  }
  if (body == null)   return;
  try {
    highlightExitPoints((PsiStatement)parent,body);
  }
 catch (  AnalysisCanceledException e) {
  }
}
