{
  LOG.assertTrue(tag != null && tag.getElementType() == DOC_TAG);
  ASTNode current=tag.getLastChildNode();
  while (current != null && current.getElementType() == DOC_COMMENT_DATA && isWhitespaceCommentData(current)) {
    current=current.getTreePrev();
  }
  if (current != null && current.getElementType() == DOC_COMMENT_LEADING_ASTERISKS)   return;
  final CharTable treeCharTab=SharedImplUtil.findCharTableByTree(tag);
  final ASTNode newLine=Factory.createSingleLeafElement(DOC_COMMENT_DATA,new char[]{'\n'},0,1,treeCharTab,SharedImplUtil.getManagerByTree(tag));
  tag.addChild(newLine,null);
  if (CodeStyleSettingsManager.getSettings(project).JD_LEADING_ASTERISKS_ARE_ENABLED) {
    final TreeElement leadingAsterisk=Factory.createSingleLeafElement(DOC_COMMENT_LEADING_ASTERISKS,new char[]{'*'},0,1,treeCharTab,SharedImplUtil.getManagerByTree(tag));
    tag.addInternal(leadingAsterisk,leadingAsterisk,null,Boolean.TRUE);
  }
  final TreeElement commentData=Factory.createSingleLeafElement(DOC_COMMENT_DATA,new char[]{' '},0,1,treeCharTab,SharedImplUtil.getManagerByTree(tag));
  tag.addInternal(commentData,commentData,null,Boolean.TRUE);
}
