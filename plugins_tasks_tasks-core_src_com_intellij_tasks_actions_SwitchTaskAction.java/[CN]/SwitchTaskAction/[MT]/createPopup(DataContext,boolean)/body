{
  final Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  final Ref<Boolean> shiftPressed=Ref.create(false);
  final Ref<JComponent> componentRef=Ref.create();
  List<TaskListItem> items=project == null ? Collections.<TaskListItem>emptyList() : createPopupActionGroup(project,shiftPressed);
  final String title=withTitle ? "Switch to Task" : null;
  ListPopupStep<TaskListItem> step=new MultiSelectionListPopupStep<TaskListItem>(title,items){
    @Override public PopupStep<?> onChosen(    List<TaskListItem> selectedValues,    boolean finalChoice){
      if (finalChoice) {
        selectedValues.get(0).select();
        return FINAL_CHOICE;
      }
      ActionGroup group=createActionsStep(selectedValues,project,shiftPressed);
      return JBPopupFactory.getInstance().createActionsStep(group,DataManager.getInstance().getDataContext(componentRef.get()),false,false,null,null,true);
    }
    @Override public Icon getIconFor(    TaskListItem aValue){
      return aValue.getIcon();
    }
    @NotNull @Override public String getTextFor(    TaskListItem value){
      return value.getText();
    }
    @Nullable @Override public ListSeparator getSeparatorAbove(    TaskListItem value){
      return value.getSeparator() == null ? null : new ListSeparator(value.getSeparator());
    }
    @Override public boolean hasSubstep(    List<TaskListItem> selectedValues){
      return selectedValues.size() > 1 || selectedValues.get(0).getTask() != null;
    }
  }
;
  final ListPopupImpl popup=(ListPopupImpl)JBPopupFactory.getInstance().createListPopup(step);
  componentRef.set(popup.getComponent());
  if (items.size() <= 2) {
    return popup;
  }
  popup.setAdText("Press SHIFT to merge with current context");
  popup.registerAction("shiftPressed",KeyStroke.getKeyStroke("shift pressed SHIFT"),new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      shiftPressed.set(true);
      popup.setCaption("Merge with Current Context");
    }
  }
);
  popup.registerAction("shiftReleased",KeyStroke.getKeyStroke("released SHIFT"),new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      shiftPressed.set(false);
      popup.setCaption("Switch to Task");
    }
  }
);
  popup.registerAction("invoke",KeyStroke.getKeyStroke("shift ENTER"),new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      popup.handleSelect(true);
    }
  }
);
  return popup;
}
