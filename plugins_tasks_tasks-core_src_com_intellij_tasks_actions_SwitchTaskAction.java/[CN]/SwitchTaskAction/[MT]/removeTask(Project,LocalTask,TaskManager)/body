{
  if (task.isDefault()) {
    Messages.showInfoMessage(project,"Default task cannot be removed","Cannot Remove");
  }
 else {
    List<ChangeListInfo> infos=TaskManager.getManager(project).getOpenChangelists(task);
    List<LocalChangeList> lists=ContainerUtil.mapNotNull(infos,new NullableFunction<ChangeListInfo,LocalChangeList>(){
      public LocalChangeList fun(      ChangeListInfo changeListInfo){
        LocalChangeList changeList=ChangeListManager.getInstance(project).getChangeList(changeListInfo.id);
        return changeList != null && !changeList.isDefault() ? changeList : null;
      }
    }
);
    boolean removeIt=true;
    l:     for (    LocalChangeList list : lists) {
      if (!list.getChanges().isEmpty()) {
        int result=Messages.showYesNoCancelDialog(project,"Changelist associated with '" + task.getSummary() + "' is not empty.\n"+ "Do you want to remove it and move the changes to the active changelist?","Changelist Not Empty",Messages.getWarningIcon());
switch (result) {
case 0:
          break l;
case 1:
        removeIt=false;
      break;
default :
    return;
}
}
}
if (removeIt) {
for (LocalChangeList list : lists) {
ChangeListManager.getInstance(project).removeChangeList(list);
}
}
manager.removeTask(task);
}
}
