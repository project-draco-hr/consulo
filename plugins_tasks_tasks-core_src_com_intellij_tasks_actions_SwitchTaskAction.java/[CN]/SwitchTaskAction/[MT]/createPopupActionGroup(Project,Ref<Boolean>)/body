{
  List<TaskListItem> group=new ArrayList<TaskListItem>();
  final GotoTaskAction gotoTaskAction=new GotoTaskAction();
  group.add(new TaskListItem(gotoTaskAction.getTemplatePresentation().getText(),gotoTaskAction.getTemplatePresentation().getIcon()){
    @Override void select(){
      gotoTaskAction.perform(project);
    }
  }
);
  final TaskManager manager=TaskManager.getManager(project);
  LocalTask activeTask=manager.getActiveTask();
  LocalTask[] localTasks=manager.getLocalTasks();
  Arrays.sort(localTasks,TaskManagerImpl.TASK_UPDATE_COMPARATOR);
  ArrayList<LocalTask> temp=new ArrayList<LocalTask>();
  boolean vcsEnabled=manager.isVcsEnabled();
  for (  final LocalTask task : localTasks) {
    if (task == activeTask) {
      continue;
    }
    if (vcsEnabled && manager.getOpenChangelists(task).isEmpty()) {
      temp.add(task);
      continue;
    }
    group.add(new TaskListItem(task,group.size() == 1 ? "" : null,false){
      @Override void select(){
        manager.activateTask(task,!shiftPressed.get(),false);
      }
    }
);
  }
  if (vcsEnabled && !temp.isEmpty()) {
    for (int i=0, tempSize=temp.size(); i < Math.min(tempSize,15); i++) {
      final LocalTask task=temp.get(i);
      group.add(new TaskListItem(task,i == 0 ? "Recently Closed Tasks" : null,true){
        @Override void select(){
          manager.activateTask(task,!shiftPressed.get(),true);
        }
      }
);
    }
  }
  return group;
}
