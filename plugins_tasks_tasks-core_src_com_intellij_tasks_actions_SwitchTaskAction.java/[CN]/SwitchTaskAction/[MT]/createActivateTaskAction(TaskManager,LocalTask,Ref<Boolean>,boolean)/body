{
  String trimmedSummary=TaskUtil.getTrimmedSummary(task);
  Icon icon=temp ? IconLoader.getTransparentIcon(task.getIcon(),0.5f) : task.getIcon();
  final AnAction switchAction=new AnAction("&Switch to"){
    public void actionPerformed(    AnActionEvent e){
      manager.activateTask(task,!shiftPressed.get(),!temp);
    }
  }
;
  ActionGroup group=new ActionGroup(trimmedSummary,task.getSummary(),icon){
    @NotNull @Override public AnAction[] getChildren(    @Nullable AnActionEvent e){
      return new AnAction[]{switchAction,new AnAction("&Remove"){
        @Override public void actionPerformed(        AnActionEvent e){
          Project project=getProject(e);
          removeTask(project,task,manager);
        }
      }
};
    }
    @Override public void actionPerformed(    AnActionEvent e){
      switchAction.actionPerformed(e);
    }
    @Override public boolean canBePerformed(    DataContext context){
      return true;
    }
  }
;
  group.setPopup(true);
  return group;
}
