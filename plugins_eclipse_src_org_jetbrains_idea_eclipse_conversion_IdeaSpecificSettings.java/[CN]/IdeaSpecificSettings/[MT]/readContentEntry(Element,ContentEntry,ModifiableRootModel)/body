{
  final SourceFolder[] folders=entry.getSourceFolders();
  final String[] sourceFoldersUrls=new String[folders.length];
  for (int i=0; i < folders.length; i++) {
    final SourceFolder folder=folders[i];
    sourceFoldersUrls[i]=folder.getUrl();
    entry.removeSourceFolder(folder);
  }
  final boolean[] testFolders=new boolean[sourceFoldersUrls.length];
  for (  Object o : root.getChildren(IdeaXml.TEST_FOLDER_TAG)) {
    final String url=((Element)o).getAttributeValue(IdeaXml.URL_ATTR);
    for (int i=0; i < sourceFoldersUrls.length; i++) {
      if (Comparing.strEqual(sourceFoldersUrls[i],url)) {
        testFolders[i]=true;
        break;
      }
    }
  }
  for (int i=0; i < sourceFoldersUrls.length; i++) {
    entry.addSourceFolder(sourceFoldersUrls[i],testFolders[i]);
  }
  for (  Object o : root.getChildren(IdeaXml.PACKAGE_PREFIX_TAG)) {
    Element ppElement=(Element)o;
    final String prefix=ppElement.getAttributeValue(IdeaXml.PACKAGE_PREFIX_VALUE_ATTR);
    final String url=ppElement.getAttributeValue(IdeaXml.URL_ATTR);
    for (    SourceFolder folder : entry.getSourceFolders()) {
      if (Comparing.strEqual(folder.getUrl(),url)) {
        folder.setPackagePrefix(prefix);
        break;
      }
    }
  }
  final String url=entry.getUrl();
  for (  Object o : root.getChildren(IdeaXml.EXCLUDE_FOLDER_TAG)) {
    final String excludeUrl=((Element)o).getAttributeValue(IdeaXml.URL_ATTR);
    if (FileUtil.isAncestor(new File(url),new File(excludeUrl),false)) {
      entry.addExcludeFolder(excludeUrl);
    }
  }
}
