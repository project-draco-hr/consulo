{
  for (  Object o : root.getChildren(IdeaXml.TEST_FOLDER_TAG)) {
    final String url=((Element)o).getAttributeValue(IdeaXml.URL_ATTR);
    SourceFolder folderToBeTest=null;
    for (    SourceFolder folder : entry.getSourceFolders()) {
      if (Comparing.strEqual(folder.getUrl(),url)) {
        folderToBeTest=folder;
        break;
      }
    }
    if (folderToBeTest != null) {
      entry.removeSourceFolder(folderToBeTest);
    }
    entry.addSourceFolder(url,true);
  }
  for (  Object o : root.getChildren(IdeaXml.PACKAGE_PREFIX_TAG)) {
    Element ppElement=(Element)o;
    final String prefix=ppElement.getAttributeValue(IdeaXml.PACKAGE_PREFIX_VALUE_ATTR);
    final String url=ppElement.getAttributeValue(IdeaXml.URL_ATTR);
    for (    SourceFolder folder : entry.getSourceFolders()) {
      if (Comparing.strEqual(folder.getUrl(),url)) {
        folder.setPackagePrefix(prefix);
        break;
      }
    }
  }
  final String url=entry.getUrl();
  for (  Object o : root.getChildren(IdeaXml.EXCLUDE_FOLDER_TAG)) {
    final String excludeUrl=((Element)o).getAttributeValue(IdeaXml.URL_ATTR);
    if (FileUtil.isAncestor(new File(url),new File(excludeUrl),false)) {
      entry.addExcludeFolder(excludeUrl);
    }
  }
}
