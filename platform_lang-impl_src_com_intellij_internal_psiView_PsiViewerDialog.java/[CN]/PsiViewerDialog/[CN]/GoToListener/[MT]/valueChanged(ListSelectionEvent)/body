{
  clearSelection();
  updateDialectsCombo(null);
  updateExtensionsCombo();
  final int ind=myRefs.getSelectedIndex();
  final PsiElement element=getPsiElement();
  if (ind > -1 && element != null) {
    final PsiReference[] references=element.getReferences();
    if (ind < references.length) {
      final TextRange textRange=references[ind].getRangeInElement();
      TextRange range=InjectedLanguageManager.getInstance(myProject).injectedToHost(element,element.getTextRange());
      int start=range.getStartOffset();
      int end=range.getEndOffset();
      final ViewerTreeStructure treeStructure=(ViewerTreeStructure)myPsiTreeBuilder.getTreeStructure();
      PsiElement rootPsiElement=treeStructure.getRootPsiElement();
      if (rootPsiElement != null) {
        int baseOffset=rootPsiElement.getTextRange().getStartOffset();
        start-=baseOffset;
        end-=baseOffset;
      }
      start+=textRange.getStartOffset();
      end=start + textRange.getLength();
      myListenerHighlighter=myEditor.getMarkupModel().addRangeHighlighter(start,end,HighlighterLayer.FIRST + 1,myAttributes,HighlighterTargetArea.EXACT_RANGE);
    }
  }
}
