{
  final Object source=getSource();
  if (source instanceof LanguageFileType) {
    final Language baseLang=((LanguageFileType)source).getLanguage();
    final SortedComboBoxModel<Language> model=new SortedComboBoxModel<Language>(new DialectsComparator(baseLang));
    model.add(baseLang);
    model.addAll(LanguageUtil.getLanguageDialects(baseLang));
    myDialectComboBox.setModel(model);
  }
 else {
    myDialectComboBox.setModel(new DefaultComboBoxModel());
  }
  final int size=myDialectComboBox.getModel().getSize();
  final boolean visible=size > 1;
  myDialectLabel.setVisible(visible);
  myDialectComboBox.setVisible(visible);
  if (visible && lastUsed != null) {
    final SortedComboBoxModel model=(SortedComboBoxModel)myDialectComboBox.getModel();
    for (int i=0; i < size; i++) {
      if (lastUsed.equals(model.get(i).toString())) {
        myDialectComboBox.setSelectedIndex(i);
        return;
      }
    }
  }
  myDialectComboBox.setSelectedIndex(size > 0 ? 0 : -1);
}
