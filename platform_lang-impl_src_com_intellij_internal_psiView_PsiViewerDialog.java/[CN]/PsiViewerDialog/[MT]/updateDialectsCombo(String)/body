{
  final Object source=getSource();
  ArrayList<Language> items=new ArrayList<Language>();
  if (source instanceof LanguageFileType) {
    final Language baseLang=((LanguageFileType)source).getLanguage();
    items.add(baseLang);
    Language[] dialects=LanguageUtil.getLanguageDialects(baseLang);
    Arrays.sort(dialects,LanguageUtil.LANGUAGE_COMPARATOR);
    items.addAll(Arrays.asList(dialects));
  }
  myDialectComboBox.setModel(new CollectionComboBoxModel(items));
  final int size=items.size();
  final boolean visible=size > 1;
  myDialectLabel.setVisible(visible);
  myDialectComboBox.setVisible(visible);
  if (visible && (myCurrentFile != null || lastUsed != null)) {
    String curLanguage=myCurrentFile != null ? myCurrentFile.getLanguage().toString() : lastUsed;
    for (int i=0; i < size; ++i) {
      if (curLanguage.equals(items.get(i).toString())) {
        myDialectComboBox.setSelectedIndex(i);
        return;
      }
    }
    myDialectComboBox.setSelectedIndex(size > 0 ? 0 : -1);
  }
}
