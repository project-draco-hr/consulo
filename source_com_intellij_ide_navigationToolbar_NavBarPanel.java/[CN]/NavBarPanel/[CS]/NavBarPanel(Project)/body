{
  myProject=project;
  myModel=new NavBarModel(myProject);
  setLayout(new BorderLayout());
  setBackground(UIUtil.getListBackground());
  setBorder(BorderFactory.createEmptyBorder(0,2,0,2));
  myScrollablePanel.setBackground(UIUtil.getListBackground());
  myScrollablePanel.setBorder(BorderFactory.createEtchedBorder());
  add(myScrollablePanel,BorderLayout.CENTER);
  add(myLeftButton,BorderLayout.WEST);
  add(myRightButton,BorderLayout.EAST);
  myLeftButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      selectLast();
      shiftFocus(-1);
    }
  }
);
  myLeftButton.setBorder(null);
  myRightButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      selectLast();
      shiftFocus(1);
    }
  }
);
  myRightButton.setBorder(null);
  PopupHandler.installPopupHandler(this,IdeActions.GROUP_PROJECT_VIEW_POPUP,ActionPlaces.NAVIGATION_BAR);
  registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      shiftFocus(-1);
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_LEFT,0),JComponent.WHEN_FOCUSED);
  registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      shiftFocus(1);
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT,0),JComponent.WHEN_FOCUSED);
  registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      shiftFocus(-myModel.getSelectedIndex());
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_HOME,0),JComponent.WHEN_FOCUSED);
  registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      shiftFocus(myModel.size() - 1 - myModel.getSelectedIndex());
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_END,0),JComponent.WHEN_FOCUSED);
  registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (myModel.getSelectedIndex() != -1) {
        ctrlClick(myModel.getSelectedIndex());
      }
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_DOWN,0),JComponent.WHEN_FOCUSED);
  final ActionListener dblClickAction=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (myModel.getSelectedIndex() != -1) {
        doubleClick(myModel.getSelectedIndex());
      }
    }
  }
;
  registerKeyboardAction(dblClickAction,KeyStroke.getKeyStroke(KeyEvent.VK_F4,0),JComponent.WHEN_FOCUSED);
  registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      clearBorder();
      final int selectedIndex=-1;
      myModel.setSelectedIndex(selectedIndex);
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_FOCUSED);
  registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      final Object o=myModel.getSelectedValue();
      if (myModel.hasChildren(o)) {
        navigateInsideBar(o);
      }
 else {
        doubleClick(myModel.getSelectedIndex());
      }
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),JComponent.WHEN_FOCUSED);
  registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      ToolWindowManager.getInstance(project).activateEditorComponent();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_FOCUSED);
  addFocusListener(new FocusListener(){
    public void focusGained(    final FocusEvent e){
    }
    public void focusLost(    final FocusEvent e){
      final Component focusedComponent=WindowManagerEx.getInstanceEx().getFocusedComponent(myProject);
      if (focusedComponent != NavBarPanel.this) {
        hideHint();
      }
    }
  }
);
  updateList();
}
