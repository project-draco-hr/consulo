{
  return WolfTheProblemSolver.getInstance(scope.getProject()).hasProblemFilesBeneath(new Condition<VirtualFile>(){
    public boolean value(    final VirtualFile virtualFile){
      if (scope instanceof PsiDirectory) {
        final PsiDirectory directory=(PsiDirectory)scope;
        return VfsUtil.isAncestor(directory.getVirtualFile(),virtualFile,false);
      }
 else       if (scope instanceof PsiPackage) {
        final PsiDirectory[] psiDirectories=((PsiPackage)scope).getDirectories();
        for (        PsiDirectory directory : psiDirectories) {
          if (VfsUtil.isAncestor(directory.getVirtualFile(),virtualFile,false)) {
            return true;
          }
        }
      }
      return false;
    }
  }
);
}
