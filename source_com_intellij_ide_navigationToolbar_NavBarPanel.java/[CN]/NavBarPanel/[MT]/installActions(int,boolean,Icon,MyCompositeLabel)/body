{
  ListenerUtil.addMouseListener(component,new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (!e.isConsumed() && !e.isPopupTrigger() && e.getClickCount() == 2) {
        myModel.setSelectedIndex(index);
        getItem(index).requestFocusInWindow();
        doubleClick(index);
        e.consume();
      }
    }
  }
);
  ListenerUtil.addMouseListener(component,new MouseAdapter(){
    public void mouseReleased(    final MouseEvent e){
      if (SystemInfo.isWindows) {
        click(e);
      }
    }
    public void mousePressed(    final MouseEvent e){
      if (!SystemInfo.isWindows) {
        click(e);
      }
    }
    private void click(    final MouseEvent e){
      if (!e.isConsumed() && e.isPopupTrigger()) {
        myModel.setSelectedIndex(index);
        getItem(index).requestFocusInWindow();
        rightClick(index);
        e.consume();
      }
    }
  }
);
  ListenerUtil.addMouseListener(component,new MouseAdapter(){
    public void mouseReleased(    final MouseEvent e){
      if (SystemInfo.isWindows) {
        click(e);
      }
    }
    public void mousePressed(    final MouseEvent e){
      if (!SystemInfo.isWindows) {
        click(e);
      }
    }
    private void click(    final MouseEvent e){
      if (!e.isConsumed() && !e.isPopupTrigger() && e.getClickCount() == 1) {
        ctrlClick(index);
        myModel.setSelectedIndex(index);
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            requestFocusInWindow();
          }
        }
);
        e.consume();
      }
    }
    public void mouseExited(    final MouseEvent e){
      if (!hasChildren)       return;
      component.getLabel().setIcon(wrapIcon(icon,index,Color.gray));
    }
  }
);
  ListenerUtil.addMouseMotionListener(component,new MouseMotionAdapter(){
    public void mouseMoved(    MouseEvent e){
      if (!hasChildren)       return;
      if (isInsideIcon(e.getPoint(),icon)) {
        component.getLabel().setIcon(wrapIcon(icon,index,Color.black));
      }
 else {
        component.getLabel().setIcon(wrapIcon(icon,index,Color.gray));
      }
    }
  }
);
}
