{
  if (update) {
    myFirstIndex=0;
    final int selectedIndex1=-1;
    myModel.setSelectedIndex(selectedIndex1);
    myList.clear();
    for (int index=0; index < myModel.size(); index++) {
      final Object object=myModel.get(index);
      final MyCompositeLabel label=new MyCompositeLabel();
      label.getLabel().addMouseListener(new MouseAdapter(){
        public void mouseExited(        MouseEvent e){
          if (!myModel.hasChildren(object))           return;
          label.getLabel().setIcon(wrapIcon(object,Color.gray));
          label.repaint();
        }
        public void mouseClicked(        MouseEvent e){
          if (!myModel.hasChildren(object))           return;
          final int selectedIndex=myModel.indexOf(object);
          if (myModel.getSelectedIndex() == selectedIndex && myNodePopup != null) {
            cancelPopup();
            if (isInsideIcon(e.getPoint(),object)) {
              label.getLabel().setIcon(wrapIcon(object,Color.black));
              label.getLabel().repaint();
            }
            return;
          }
          if (isInsideIcon(e.getPoint(),object)) {
            ctrlClick(selectedIndex);
            clearBorder();
            myModel.setSelectedIndex(selectedIndex);
            paintBorder();
            label.getLabel().setIcon(wrapIcon(object,Color.black));
            label.getLabel().repaint();
          }
        }
      }
);
      label.getLabel().addMouseMotionListener(new MouseMotionAdapter(){
        public void mouseMoved(        MouseEvent e){
          if (!myModel.hasChildren(object))           return;
          if (isInsideIcon(e.getPoint(),object)) {
            label.getLabel().setIcon(wrapIcon(object,Color.black));
          }
 else {
            label.getLabel().setIcon(wrapIcon(object,Color.gray));
          }
          label.repaint();
        }
      }
);
      label.setFont(UIUtil.getLabelFont());
      label.getLabel().setIcon(wrapIcon(object,Color.gray));
      label.getColoredComponent().append(myModel.getPresentableText(object,getWindow()),myModel.getTextAttributes(object,false));
      clearBorder(label.getColoredComponent());
      label.getLabel().setOpaque(false);
      label.getColoredComponent().setOpaque(true);
      label.setBackground(UIUtil.getListBackground());
      myList.add(label);
      installActions(index);
    }
    paintComponent();
  }
}
