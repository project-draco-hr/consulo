{
  setTitle("Update Copyright");
  setOKButtonText("Run");
  ButtonGroup group=new ButtonGroup();
  group.add(rbFile);
  group.add(rbAll);
  rbFile.setMnemonic('F');
  rbAll.setMnemonic('A');
  cbSubdirs.setMnemonic('I');
  if (file.isDirectory()) {
    rbFile.setText("File");
    rbFile.setEnabled(false);
    rbAll.setText("All files in " + file.getPresentableUrl());
    rbAll.setSelected(true);
    cbSubdirs.setSelected(true);
    cbSubdirs.setEnabled(true);
  }
 else {
    VirtualFile parent=file.getParent();
    rbFile.setText("File '" + file.getPresentableUrl() + '\'');
    rbFile.setSelected(true);
    if (parent != null) {
      rbAll.setText("All files in " + parent.getPresentableUrl());
      cbSubdirs.setSelected(true);
      cbSubdirs.setEnabled(false);
    }
 else {
      rbAll.setVisible(false);
      cbSubdirs.setVisible(false);
    }
  }
  VirtualFile check=file;
  if (!file.isDirectory()) {
    check=file.getParent();
  }
  ProjectRootManager prm=ProjectRootManager.getInstance(project);
  ProjectFileIndex pfi=prm.getFileIndex();
  VirtualFile[] children=check != null ? check.getChildren() : VirtualFile.EMPTY_ARRAY;
  boolean hasSubdirs=false;
  for (int i=0; i < children.length && !hasSubdirs; i++) {
    if (children[i].isDirectory() && !pfi.isIgnored(children[i])) {
      hasSubdirs=true;
    }
  }
  cbSubdirs.setVisible(hasSubdirs);
  if (!hasSubdirs) {
    cbSubdirs.setEnabled(false);
    mainPanel.remove(cbSubdirs);
  }
  ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (cbSubdirs.isVisible()) {
        cbSubdirs.setEnabled(rbAll.isSelected());
      }
    }
  }
;
  rbFile.addActionListener(listener);
  rbAll.addActionListener(listener);
}
