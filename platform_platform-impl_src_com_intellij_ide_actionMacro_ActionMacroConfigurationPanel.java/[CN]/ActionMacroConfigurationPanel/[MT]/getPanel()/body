{
  if (mySplitter == null) {
    mySplitter=new Splitter(false,0.5f);
    final String value=PropertiesComponent.getInstance().getValue(SPLITTER_PROPORTION);
    if (value != null) {
      mySplitter.setProportion(Float.parseFloat(value));
    }
    mySplitter.setFirstComponent(ToolbarDecorator.createDecorator(myMacrosList).setEditAction(new AnActionButtonRunnable(){
      @Override public void run(      AnActionButton button){
        final int selIndex=myMacrosList.getSelectedIndex();
        if (selIndex == -1)         return;
        final ActionMacro macro=(ActionMacro)myMacrosModel.getElementAt(selIndex);
        final String newName=Messages.showInputDialog(mySplitter,IdeBundle.message("prompt.enter.new.name"),IdeBundle.message("title.rename.macro"),Messages.getQuestionIcon(),macro.getName(),null);
        if (newName != null) {
          macro.setName(newName);
          myMacrosList.repaint();
        }
      }
    }
).disableAddAction().disableUpDownActions().createPanel());
    mySplitter.setSecondComponent(ToolbarDecorator.createDecorator(myMacroActionsList).setRemoveAction(new AnActionButtonRunnable(){
      @Override public void run(      AnActionButton button){
        final int macrosSelectedIndex=myMacrosList.getSelectedIndex();
        if (macrosSelectedIndex != -1) {
          final ActionMacro macro=(ActionMacro)myMacrosModel.getElementAt(macrosSelectedIndex);
          macro.deleteAction(myMacroActionsList.getSelectedIndex());
        }
        ListUtil.removeSelectedItems(myMacroActionsList);
      }
    }
).disableAddAction().disableUpDownActions().createPanel());
  }
  return mySplitter;
}
