{
  if (statement == null)   return;
  int gotoOffset=instruction.offset;
  if (start > gotoOffset || gotoOffset >= end || isElementOfClass(statement,classesFilter)) {
    gotoOffset=promoteThroughGotoChain(flow,gotoOffset);
    if (!exitPoints.contains(gotoOffset) && (gotoOffset >= end || gotoOffset < start)) {
      exitPoints.add(gotoOffset);
    }
    if (gotoOffset >= end || gotoOffset < start) {
      processGotoStatement(classesFilter,exitStatements,statement);
    }
 else {
      boolean isReturn=instruction instanceof GoToInstruction && ((GoToInstruction)instruction).isReturn;
      final Instruction gotoInstruction=flow.getInstructions().get(gotoOffset);
      isReturn|=gotoInstruction instanceof GoToInstruction && ((GoToInstruction)gotoInstruction).isReturn;
      if (isReturn) {
        processGotoStatement(classesFilter,exitStatements,statement);
      }
    }
  }
}
