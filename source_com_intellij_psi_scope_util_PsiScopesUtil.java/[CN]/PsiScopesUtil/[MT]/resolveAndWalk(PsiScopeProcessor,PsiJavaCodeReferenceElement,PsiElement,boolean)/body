{
  final PsiElement qualifier=ref.getQualifier();
  final PsiElement classNameElement=ref.getReferenceNameElement();
  if (classNameElement == null)   return true;
  if (qualifier != null) {
    final PsiElementFactory factory=ref.getManager().getElementFactory();
    PsiElement target=null;
    PsiSubstitutor substitutor=PsiSubstitutor.EMPTY;
    PsiType type=null;
    if (qualifier instanceof PsiExpression || qualifier instanceof PsiJavaCodeReferenceElement) {
      if (qualifier instanceof PsiExpression) {
        type=((PsiExpression)qualifier).getType();
        if (type instanceof PsiArrayType) {
          LanguageLevel languageLevel=PsiUtil.getLanguageLevel(qualifier);
          final PsiClass arrayClass=factory.getArrayClass(languageLevel);
          target=arrayClass;
          final PsiTypeParameter[] arrayTypeParameters=arrayClass.getTypeParameters();
          if (arrayTypeParameters.length > 0) {
            substitutor=substitutor.put(arrayTypeParameters[0],((PsiArrayType)type).getComponentType());
          }
        }
 else {
          final JavaResolveResult result=PsiUtil.resolveGenericsClassInType(type);
          target=result.getElement();
          substitutor=result.getSubstitutor();
        }
      }
      if (type == null && qualifier instanceof PsiJavaCodeReferenceElement) {
        final PsiJavaCodeReferenceElement referenceElement=(PsiJavaCodeReferenceElement)qualifier;
        final JavaResolveResult result=referenceElement.advancedResolve(incompleteCode);
        target=result.getElement();
        substitutor=result.getSubstitutor();
        if (target instanceof PsiVariable) {
          type=substitutor.substitute(((PsiVariable)target).getType());
          if (type instanceof PsiClassType) {
            final JavaResolveResult typeResult=((PsiClassType)type).resolveGenerics();
            target=typeResult.getElement();
            substitutor=substitutor.putAll(typeResult.getSubstitutor());
          }
 else           target=null;
        }
 else         if (target instanceof PsiMethod) {
          type=substitutor.substitute(((PsiMethod)target).getReturnType());
          if (type instanceof PsiClassType) {
            final JavaResolveResult typeResult=((PsiClassType)type).resolveGenerics();
            target=typeResult.getElement();
            substitutor=substitutor.putAll(typeResult.getSubstitutor());
          }
 else           target=null;
        }
 else         if (target instanceof PsiClass) {
          processor.handleEvent(PsiScopeProcessor.Event.START_STATIC,null);
        }
        final PsiType[] types=referenceElement.getTypeParameters();
        if (target instanceof PsiClass) {
          substitutor=((PsiSubstitutorEx)substitutor).inplacePutAll((PsiClass)target,types);
        }
      }
    }
    if (target != null)     return processScope(target,processor,substitutor,target,ref);
  }
 else {
    return treeWalkUp(processor,ref,maxScope);
  }
  return true;
}
