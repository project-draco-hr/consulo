{
  final List exception=new ArrayList<VcsException>();
  final Map committables=getCommitables(paths);
  final SVNCommitClient committer;
  try {
    committer=mySvnVcs.createCommitClient();
  }
 catch (  SVNException e) {
    exception.add(new VcsException(e));
    return exception;
  }
  final ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
  if (progress != null) {
    committer.setEventHandler(new ISVNEventHandler(){
      public void handleEvent(      SVNEvent event,      double p){
        String path=event.getFile() != null ? event.getFile().getName() : event.getPath();
        if (path == null) {
          return;
        }
        if (event.getAction() == SVNEventAction.COMMIT_ADDED) {
          progress.setText2("Adding '" + path + "'");
        }
 else         if (event.getAction() == SVNEventAction.COMMIT_DELETED) {
          progress.setText2("Deleting '" + path + "'");
        }
 else         if (event.getAction() == SVNEventAction.COMMIT_MODIFIED) {
          progress.setText2("Sending '" + path + "'");
        }
 else         if (event.getAction() == SVNEventAction.COMMIT_REPLACED) {
          progress.setText2("Replacing '" + path + "'");
        }
 else         if (event.getAction() == SVNEventAction.COMMIT_DELTA_SENT) {
          progress.setText2("Transmitting delta for  '" + path + "'");
        }
      }
      public void checkCancelled(){
      }
    }
);
  }
  if (progress != null) {
    doCommit(committables,progress,committer,comment,force,recursive,exception);
  }
 else   if (ApplicationManager.getApplication().isDispatchThread()) {
    ApplicationManager.getApplication().runProcessWithProgressSynchronously(new Runnable(){
      public void run(){
        ProgressIndicator p=ProgressManager.getInstance().getProgressIndicator();
        doCommit(committables,p,committer,comment,force,recursive,exception);
      }
    }
,"Commit",false,mySvnVcs.getProject());
  }
 else {
    doCommit(committables,progress,committer,comment,force,recursive,exception);
  }
  return exception;
}
