{
  List<VcsException> exceptions=new ArrayList<VcsException>();
  final SVNWCClient wcClient;
  try {
    wcClient=mySvnVcs.createWCClient();
  }
 catch (  SVNException e) {
    exceptions.add(new VcsException(e));
    return exceptions;
  }
  List<File> files=ChangesUtil.filePathsToFiles(filePaths);
  for (  File file : files) {
    try {
      if (delete) {
        wcClient.doDelete(file,true,false);
      }
 else {
        SVNInfo info=wcClient.doInfo(file,SVNRevision.BASE);
        if (info != null && info.getKind() == SVNNodeKind.FILE) {
          wcClient.doRevert(file,false);
        }
 else {
          mySvnVcs.createUpdateClient().doUpdate(file,SVNRevision.HEAD,true);
        }
      }
    }
 catch (    SVNException e) {
      exceptions.add(new VcsException(e));
    }
  }
  return exceptions;
}
