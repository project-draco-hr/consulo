{
  final VcsContext context=PeerFactory.getInstance().getVcsContextFactory().createContextOn(e);
  final Refreshable refreshableDialog=context.getRefreshableDialog();
  if (refreshableDialog != null) {
    refreshableDialog.saveState();
  }
  final FilePath[] pathsArray=context.getSelectedFilePaths();
  try {
    SVNWCClient wcClient=mySvnVcs.createWCClient();
    for (    FilePath aPathsArray : pathsArray) {
      wcClient.doResolve(aPathsArray.getIOFile(),false);
    }
  }
 catch (  SVNException svnEx) {
    Messages.showErrorDialog(SvnBundle.message("cannot.mark.file.as.resolved.error.message",svnEx.getLocalizedMessage()),SvnBundle.message("mark.resolved.dialog.title"));
  }
 finally {
    FileStatusManager.getInstance(mySvnVcs.getProject()).fileStatusesChanged();
    if (refreshableDialog != null) {
      refreshableDialog.refresh();
    }
  }
}
