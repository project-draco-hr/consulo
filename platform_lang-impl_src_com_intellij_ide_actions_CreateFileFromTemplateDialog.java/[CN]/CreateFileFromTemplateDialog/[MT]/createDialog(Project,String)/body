{
  final CreateFileFromTemplateDialog dialog=new CreateFileFromTemplateDialog(project,title);
  return new Builder(){
    public Builder addKind(    @NotNull String name,    @Nullable Icon icon,    @NotNull String templateName){
      dialog.myKindCombo.addItem(new Trinity<String,Icon,String>(name,icon,templateName));
      return this;
    }
    public <T extends PsiElement>T show(    @NotNull String errorTitle,    @NotNull final FileCreator<T> creator){
      final Ref<T> created=Ref.create(null);
      dialog.myCreator=new ElementCreator(project,errorTitle){
        @Override protected void checkBeforeCreate(        String newName) throws IncorrectOperationException {
          creator.checkBeforeCreate(newName,dialog.getTemplateName());
        }
        @Override protected PsiElement[] create(        String newName) throws Exception {
          final T element=creator.createFile(dialog.getEnteredName(),dialog.getTemplateName());
          created.set(element);
          if (element != null) {
            return new PsiElement[]{element};
          }
          return PsiElement.EMPTY_ARRAY;
        }
        @Override protected String getActionName(        String newName){
          return creator.getActionName(newName,dialog.getTemplateName());
        }
      }
;
      dialog.show();
      if (dialog.getExitCode() == OK_EXIT_CODE) {
        return created.get();
      }
      return null;
    }
  }
;
}
