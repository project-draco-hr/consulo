{
  if (!(artifact.getArtifactType() instanceof JavaFxApplicationArtifactType)) {
    return;
  }
  final Project project=compileContext.getProject();
  final Set<Module> modules=ApplicationManager.getApplication().runReadAction(new Computable<Set<Module>>(){
    @Override public Set<Module> compute(){
      return ArtifactUtil.getModulesIncludedInArtifacts(Collections.singletonList(artifact),project);
    }
  }
);
  if (modules.isEmpty()) {
    return;
  }
  Sdk fxCompatibleSdk=null;
  for (  Module module : modules) {
    final Sdk sdk=ModuleRootManager.getInstance(module).getSdk();
    if (sdk != null && sdk.getSdkType() instanceof JavaSdk) {
      if (((JavaSdk)sdk.getSdkType()).isOfVersionOrHigher(sdk,JavaSdkVersion.JDK_1_7)) {
        fxCompatibleSdk=sdk;
        break;
      }
    }
  }
  if (fxCompatibleSdk == null) {
    compileContext.addMessage(CompilerMessageCategory.ERROR,"Java version 7 or higher is required to build JavaFX package",null,-1,-1);
    return;
  }
  final String binPath=((JavaSdk)fxCompatibleSdk.getSdkType()).getBinPath(fxCompatibleSdk);
  final JavaFxArtifactProperties properties=(JavaFxArtifactProperties)artifact.getProperties(JavaFxArtifactPropertiesProvider.getInstance());
  new JavaFxPackager(artifact,properties,compileContext).createJarAndDeploy(binPath);
}
