{
  if (element instanceof RegExpProperty) {
    final String s;
    if (object instanceof PresentableLookupValue) {
      s=((PresentableLookupValue)object).getPresentation();
    }
 else     if (object instanceof String) {
      s=(String)object;
    }
 else {
      return null;
    }
    final Project project=element.getProject();
    final JavaPsiFacade f=JavaPsiFacade.getInstance(project);
    if (s.startsWith("java")) {
      final PsiClass charClass=f.findClass("java.lang.Character",GlobalSearchScope.allScope(project));
      if (charClass != null) {
        final PsiMethod[] methods=charClass.findMethodsByName("is" + s.substring("java".length()),false);
        return methods.length > 0 ? methods[0] : null;
      }
    }
 else     if (s.matches("In[\\p{Upper}_]+")) {
      final PsiClass charClass=f.findClass("java.lang.Character.UnicodeBlock",GlobalSearchScope.allScope(project));
      if (charClass != null) {
        return charClass.findFieldByName(s.substring(2),false);
      }
    }
 else {
      return f.findClass("java.util.regex.Pattern",GlobalSearchScope.allScope(project));
    }
  }
  return super.getDocumentationElementForLookupItem(psiManager,object,element);
}
