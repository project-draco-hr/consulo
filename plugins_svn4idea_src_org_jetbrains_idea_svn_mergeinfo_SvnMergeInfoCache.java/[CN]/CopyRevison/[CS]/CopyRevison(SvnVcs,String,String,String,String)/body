{
  myPath=path;
  myRevision=-1;
  final TransparentlyFailedValueI<CopyData,SVNException> result=new TransparentlyFailedValue<CopyData,SVNException>(){
    @Override public void set(    CopyData copyData){
      if (copyData == null)       return;
      myRevision=copyData.getCopySourceRevision();
      if (myRevision != -1) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            if (vcs.getProject().isDisposed())             return;
            vcs.getProject().getMessageBus().syncPublisher(SVN_MERGE_INFO_CACHE).copyRevisionUpdated();
          }
        }
);
      }
    }
    @Override public void fail(    SVNException e){
      LOG.info(e);
      VcsBalloonProblemNotifier.showOverChangesView(vcs.getProject(),e.getMessage(),MessageType.ERROR);
    }
    @Override public void failRuntime(    RuntimeException e){
      LOG.info(e);
      VcsBalloonProblemNotifier.showOverChangesView(vcs.getProject(),e.getMessage(),MessageType.ERROR);
    }
  }
;
  ApplicationManager.getApplication().executeOnPooledThread(new FirstInBranch(vcs,repositoryRoot,branchUrl,trunkUrl,result));
}
