{
  myImportProcessor.commit(project,getAllProfiles());
  MavenProjectsManager.getInstance(project).setDoesNotRequireSynchronization();
  MavenProjectsManager.getInstance(project).setMavenProject();
  StartupManager.getInstance(project).registerPostStartupActivity(new Runnable(){
    public void run(){
      MavenImportToolWindow toolWindow=new MavenImportToolWindow(project,ProjectBundle.message("maven.import"));
      toolWindow.displayResolutionProblems(myResolutionProblems);
    }
  }
);
  MavenProjectsManager manager=MavenProjectsManager.getInstance(project);
  manager.setOriginalFiles(myFiles);
  if (!myFilesWithProfiles.isEmpty()) {
    for (    Map.Entry<VirtualFile,Set<String>> each : myFilesWithProfiles.entrySet()) {
      manager.setActiveProfiles(each.getKey(),each.getValue());
    }
  }
  project.getComponent(MavenWorkspaceSettingsComponent.class).getState().myImporterSettings=getImporterPreferences();
  project.getComponent(MavenWorkspaceSettingsComponent.class).getState().myArtifactSettings=getArtifactPreferences();
  project.getComponent(MavenCore.class).loadState(myCoreSettings);
  enusreRepositoryPathMacro();
}
