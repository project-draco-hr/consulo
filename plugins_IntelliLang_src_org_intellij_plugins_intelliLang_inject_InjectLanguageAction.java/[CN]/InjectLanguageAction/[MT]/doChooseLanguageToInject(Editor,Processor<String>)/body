{
  final Language[] languages=InjectedLanguage.getAvailableLanguages();
  Arrays.sort(languages,LanguageUtil.LANGUAGE_COMPARATOR);
  final JList list=new JBList(languages);
  list.setCellRenderer(new ListCellRendererWrapper<Language>(){
    @Override public void customize(    JList list,    Language language,    int index,    boolean selected,    boolean hasFocus){
      final FileType ft=language.getAssociatedFileType();
      setIcon(ft != null ? ft.getIcon() : EmptyIcon.ICON_16);
      setText(language.getDisplayName() + (ft != null ? " (" + ft.getDescription() + ")" : ""));
    }
  }
);
  new PopupChooserBuilder(list).setItemChoosenCallback(new Runnable(){
    public void run(){
      final String string=(String)list.getSelectedValue();
      onChosen.process(string);
    }
  }
).setFilteringEnabled(new Function<Object,String>(){
    @Override public String fun(    Object language){
      return ((Language)language).getDisplayName();
    }
  }
).createPopup().showInBestPositionFor(editor);
  return true;
}
