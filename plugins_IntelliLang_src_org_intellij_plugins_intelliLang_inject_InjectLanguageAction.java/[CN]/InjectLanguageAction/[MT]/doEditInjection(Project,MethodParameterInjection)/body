{
  final Configuration configuration=Configuration.getInstance();
  final MethodParameterInjection existing=configuration.findExistingInjection(injection);
  if (existing != null) {
    boolean found=false;
    final MethodParameterInjection.MethodInfo curInfo=injection.getMethodInfos().iterator().next();
    for (    MethodParameterInjection.MethodInfo info : existing.getMethodInfos()) {
      if (Comparing.equal(info.getMethodSignature(),curInfo.getMethodSignature())) {
        found=true;
        final boolean[] flags=curInfo.getParamFlags();
        for (int i=0; i < flags.length; i++) {
          if (flags[i]) {
            info.getParamFlags()[i]=true;
          }
        }
        if (!info.isReturnFlag() && curInfo.isReturnFlag())         info.setReturnFlag(true);
      }
    }
    if (!found) {
      final ArrayList<MethodParameterInjection.MethodInfo> methodInfos=new ArrayList<MethodParameterInjection.MethodInfo>(existing.getMethodInfos());
      methodInfos.add(curInfo);
      existing.setMethodInfos(methodInfos);
    }
  }
  if (doEditConfigurable(project,new MethodParameterInjectionConfigurable(existing == null ? injection : existing,null,project))) {
    if (existing == null) {
      configuration.getParameterInjections().add(injection);
    }
    configuration.configurationModified();
  }
}
