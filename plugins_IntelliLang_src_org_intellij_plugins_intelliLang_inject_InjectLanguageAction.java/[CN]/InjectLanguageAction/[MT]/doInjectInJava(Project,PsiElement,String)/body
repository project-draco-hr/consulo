{
  PsiElement target=host;
  PsiElement parent=target.getParent();
  for (; parent != null; target=parent, parent=target.getParent()) {
    if (parent instanceof PsiBinaryExpression)     continue;
    if (parent instanceof PsiParenthesizedExpression)     continue;
    if (parent instanceof PsiConditionalExpression && ((PsiConditionalExpression)parent).getCondition() != target)     continue;
    break;
  }
  if (parent instanceof PsiReturnStatement || parent instanceof PsiMethod) {
    return doInjectInJavaMethod(project,findPsiMethod(parent),-1,languageId);
  }
 else   if (parent instanceof PsiExpressionList && parent.getParent() instanceof PsiMethodCallExpression) {
    return doInjectInJavaMethod(project,findPsiMethod(parent),findParameterIndex(target,(PsiExpressionList)parent),languageId);
  }
 else   if (parent instanceof PsiAssignmentExpression) {
    final PsiExpression psiExpression=((PsiAssignmentExpression)parent).getLExpression();
    if (psiExpression instanceof PsiReferenceExpression) {
      final PsiElement element=((PsiReferenceExpression)psiExpression).resolve();
      if (element != null) {
        return doInjectInJava(project,element,languageId);
      }
    }
  }
 else   if (parent instanceof PsiVariable) {
    if (doAddLanguageAnnotation(project,(PsiModifierListOwner)parent,languageId))     return true;
  }
  return false;
}
