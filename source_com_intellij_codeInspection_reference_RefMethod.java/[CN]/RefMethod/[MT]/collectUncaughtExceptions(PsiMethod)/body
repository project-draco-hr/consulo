{
  if (isLibraryOverride())   return;
  if (getOwnerClass().isTestCase() && method.getName().startsWith("test"))   return;
  if (getSuperMethods().size() == 0) {
    PsiClassType[] throwsList=method.getThrowsList().getReferencedTypes();
    if (throwsList.length > 0) {
      EjbClassRole role=J2EERolesUtil.getEjbRole(method.getContainingClass());
      myUnThrownExceptions=new ArrayList<PsiClassType>(throwsList.length);
      for (int i=0; i < throwsList.length; i++) {
        final PsiClassType type=throwsList[i];
        String qualifiedName=type.getCanonicalText();
        if (role != null && isEjbException(qualifiedName))         continue;
        myUnThrownExceptions.add(type);
      }
    }
  }
  PsiCodeBlock body=method.getBody();
  if (body == null)   return;
  PsiClassType[] exceptionTypes=ExceptionUtil.collectUnhandledExceptions(method,body);
  if (exceptionTypes != null) {
    for (int i=0; i < exceptionTypes.length; i++) {
      final PsiClassType exceptionType=exceptionTypes[i];
      updateThrowsList(exceptionType);
    }
  }
}
