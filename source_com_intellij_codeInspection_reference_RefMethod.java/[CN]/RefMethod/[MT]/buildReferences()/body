{
  PsiMethod method=(PsiMethod)getElement();
  if (method != null) {
    PsiCodeBlock body=method.getBody();
    RefUtil.addReferences(method,this,body);
    checkForSuperCall(method);
    setOnlyCallsSuper(RefUtil.isMethodOnlyCallsSuper(method));
    setBodyEmpty(isOnlyCallsSuper() || !isLibraryOverride() && (body == null || body.getStatements().length == 0));
    EjbClassRole classRole=J2EERolesUtil.getEjbRole(method.getContainingClass());
    if (classRole != null) {
      if (!getSuperMethods().isEmpty() || isLibraryOverride()) {
        setCanBeFinal(false);
      }
      EjbMethodRole role=J2EERolesUtil.getEjbRole(method);
      if (role != null) {
        setCanBeStatic(false);
        int roleType=role.getType();
        if (role instanceof EjbDeclMethodRole) {
          setEjbDeclaration(true);
          setCanBeFinal(false);
          if (roleType == EjbDeclMethodRole.EJB_METHOD_ROLE_FINDER_DECL || roleType == EjbDeclMethodRole.EJB_METHOD_ROLE_CMP_SETTER_DECL || roleType == EjbDeclMethodRole.EJB_METHOD_ROLE_CMR_SETTER_DECL || roleType == EjbDeclMethodRole.EJB_METHOD_ROLE_CMP_GETTER_DECL || roleType == EjbDeclMethodRole.EJB_METHOD_ROLE_CMR_GETTER_DECL) {
            for (int i=0; i < myParameters.length; i++) {
              RefParameter refParameter=myParameters[i];
              refParameter.parameterReferenced(false);
              refParameter.parameterReferenced(true);
            }
          }
        }
 else         if (role instanceof EjbImplMethodRole) {
          PsiMethod[] declarations=EjbUtil.findEjbDeclarations(method);
          if (declarations.length != 0) {
            for (int i=0; i < declarations.length; i++) {
              PsiMethod psiDeclaration=declarations[i];
              if (RefUtil.belongsToScope(psiDeclaration,getRefManager())) {
                RefMethod refDeclaration=(RefMethod)getRefManager().getReference(psiDeclaration);
                if (refDeclaration != null) {
                  addSuperMethod(refDeclaration);
                  refDeclaration.markExtended(this);
                }
 else {
                  setLibraryOverride(true);
                }
              }
 else {
                setLibraryOverride(true);
              }
            }
          }
          if (roleType == EjbImplMethodRole.EJB_METHOD_ROLE_CMP_GETTER_IMPL || roleType == EjbImplMethodRole.EJB_METHOD_ROLE_CMP_SETTER_IMPL || roleType == EjbImplMethodRole.EJB_METHOD_ROLE_CMR_GETTER_IMPL || roleType == EjbImplMethodRole.EJB_METHOD_ROLE_CMR_SETTER_IMPL || roleType == EjbImplMethodRole.EJB_METHOD_ROLE_CREATE_IMPL) {
            setBodyEmpty(false);
          }
          if (roleType == EjbImplMethodRole.EJB_METHOD_ROLE_CMP_GETTER_IMPL || roleType == EjbImplMethodRole.EJB_METHOD_ROLE_CMP_SETTER_IMPL || roleType == EjbImplMethodRole.EJB_METHOD_ROLE_CMR_GETTER_IMPL || roleType == EjbImplMethodRole.EJB_METHOD_ROLE_CMR_SETTER_IMPL || roleType == EjbImplMethodRole.EJB_METHOD_ROLE_FINDER_IMPL) {
            for (int i=0; i < myParameters.length; i++) {
              RefParameter refParameter=myParameters[i];
              refParameter.parameterReferenced(false);
              refParameter.parameterReferenced(true);
            }
          }
          setCanBeFinal(false);
          setEjbImplementation(true);
        }
      }
    }
    PsiType retType=method.getReturnType();
    if (retType != null) {
      PsiType psiType=retType;
      RefClass ownerClass=RefUtil.getOwnerClass(getRefManager(),method);
      if (ownerClass != null) {
        psiType=psiType.getDeepComponentType();
        if (psiType instanceof PsiClassType) {
          PsiClass psiClass=PsiUtil.resolveClassInType(psiType);
          if (psiClass != null && RefUtil.belongsToScope(psiClass,getRefManager())) {
            RefClass refClass=(RefClass)getRefManager().getReference(psiClass);
            if (refClass != null) {
              refClass.addTypeReference(ownerClass);
              refClass.addClassExporter(this);
            }
          }
        }
      }
    }
    RefParameter[] parameters=getParameters();
    for (int i=0; i < parameters.length; i++) {
      RefParameter parameter=parameters[i];
      parameter.initializeFinalFlag();
    }
  }
}
