{
  if (node.isLeaf() || !(node instanceof XDebuggerTreeNode)) {
    return null;
  }
  LinkedList<XDebuggerTreeNode> queue=new LinkedList<XDebuggerTreeNode>();
  queue.addLast((XDebuggerTreeNode)node);
  int initialLevel=((XDebuggerTreeNode)node).getPath().getPathCount();
  while (!queue.isEmpty()) {
    XDebuggerTreeNode p=queue.removeFirst();
    if ((p.getPath().getPathCount() - initialLevel) > 3) {
      return null;
    }
    List<? extends TreeNode> children=p.getChildren();
    if (children.isEmpty()) {
      continue;
    }
    for (    TreeNode child : children) {
      if (!(child instanceof XDebuggerTreeNode)) {
        continue;
      }
      TreePath result=match(child,string);
      if (result != null) {
        return result;
      }
      if (!child.isLeaf()) {
        queue.addLast((XDebuggerTreeNode)child);
      }
    }
  }
  return null;
}
