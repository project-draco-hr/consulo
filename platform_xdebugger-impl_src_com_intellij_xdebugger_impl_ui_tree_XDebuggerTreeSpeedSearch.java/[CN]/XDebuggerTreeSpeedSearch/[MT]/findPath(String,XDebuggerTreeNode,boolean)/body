{
  TreePath path=node.getPath();
  if (isMatchingElement(path,string)) {
    return path;
  }
  XDebuggerTreeNode parent=ObjectUtil.tryCast(node.getParent(),XDebuggerTreeNode.class);
  int nodeIndex;
  List<? extends TreeNode> parentChildren;
  if (parent != null) {
    parentChildren=parent.getChildren();
    nodeIndex=parentChildren.indexOf(node);
    if (nodeIndex != -1) {
      for (int i=nodeIndex + 1; i < parentChildren.size(); i++) {
        TreePath result=match(parentChildren.get(i),string);
        if (result != null) {
          return result;
        }
      }
      for (int i=nodeIndex - 1; i >= 0; i--) {
        TreePath result=match(parentChildren.get(i),string);
        if (result != null) {
          return result;
        }
      }
    }
  }
 else {
    nodeIndex=-1;
    parentChildren=null;
  }
  if (checkChildren && !node.isLeaf()) {
    TreePath result=findInChildren(node,string);
    if (result != null) {
      return result;
    }
  }
  if (parent != null) {
    for (int i=nodeIndex + 1; i < parentChildren.size(); i++) {
      TreePath result=findInChildren(parentChildren.get(i),string);
      if (result != null) {
        return result;
      }
    }
    for (int i=nodeIndex - 1; i >= 0; i--) {
      TreePath result=findInChildren(parentChildren.get(i),string);
      if (result != null) {
        return result;
      }
    }
    return findPath(string,parent,false);
  }
  return null;
}
