{
  final JCheckBox chkFilter=new JCheckBox();
  chkFilter.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      ProjectListBuilder builder=(ProjectListBuilder)myCommanderPanel.getBuilder();
      PsiElement currentParent=null;
      if (builder != null) {
        final AbstractTreeNode parentNode=builder.getParentNode();
        final Object value=parentNode.getValue();
        if (value instanceof StructureViewTreeElement) {
          final Object elementValue=((StructureViewTreeElement)value).getValue();
          if (elementValue instanceof PsiElement) {
            currentParent=(PsiElement)elementValue;
          }
        }
      }
      myTreeActionsOwner.setFilterIncluded(fileStructureFilter,!chkFilter.isSelected());
      myTreeStructure.rebuildTree();
      if (builder != null) {
        if (currentParent != null) {
          boolean oldNarrowDown=myShouldNarrowDown;
          myShouldNarrowDown=false;
          try {
            builder.enterElement(currentParent,PsiUtilBase.getVirtualFile(currentParent));
          }
  finally {
            myShouldNarrowDown=oldNarrowDown;
          }
        }
        builder.updateList(true);
      }
      if (SpeedSearchBase.hasActiveSpeedSearch(myCommanderPanel.getList())) {
        final SpeedSearchSupply supply=SpeedSearchBase.getSupply(myCommanderPanel.getList());
        if (supply != null && supply.isPopupActive())         supply.refreshSelection();
      }
    }
  }
);
  chkFilter.setFocusable(false);
  String text=fileStructureFilter.getCheckBoxText();
  final Shortcut[] shortcuts=fileStructureFilter.getShortcut();
  if (shortcuts.length > 0) {
    text+=" (" + KeymapUtil.getShortcutText(shortcuts[0]) + ")";
    new AnAction(){
      public void actionPerformed(      final AnActionEvent e){
        chkFilter.doClick();
      }
    }
.registerCustomShortcutSet(new CustomShortcutSet(shortcuts),panel);
  }
  chkFilter.setText(text);
  panel.add(chkFilter,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,5,0,5),0,0));
}
