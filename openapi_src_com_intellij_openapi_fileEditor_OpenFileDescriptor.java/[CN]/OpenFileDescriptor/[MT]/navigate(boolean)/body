{
  FileEditor fileEditor=openFileAskingType(myProject,requestFocus);
  if (fileEditor == null) {
    final SelectInTarget projectSelector=SelectInManager.getInstance(myProject).getTarget("Project");
    if (projectSelector != null) {
      projectSelector.selectIn(new SelectInContext(){
        public Project getProject(){
          return myProject;
        }
        public VirtualFile getVirtualFile(){
          return myFile;
        }
        @Nullable public Object getSelectorInFile(){
          return PsiManager.getInstance(myProject).findFile(myFile);
        }
        @Nullable public FileEditorProvider getFileEditorProvider(){
          return null;
        }
      }
,true);
    }
    return;
  }
  if (fileEditor instanceof TextEditor) {
    Editor editor=((TextEditor)fileEditor).getEditor();
    Document document=editor.getDocument();
    LogicalPosition position;
    int offset=getOffset();
    if (offset < 0) {
      position=new LogicalPosition(Math.min(document.getLineCount() - 1,getLine()),getColumn());
    }
 else {
      position=editor.offsetToLogicalPosition(Math.min(document.getTextLength(),offset));
    }
    editor.getCaretModel().moveToLogicalPosition(position);
    editor.getScrollingModel().scrollToCaret(ScrollType.CENTER);
  }
}
