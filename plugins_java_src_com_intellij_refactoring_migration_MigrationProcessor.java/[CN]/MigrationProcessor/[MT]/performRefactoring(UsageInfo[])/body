{
  final PsiMigration psiMigration=PsiMigrationManager.getInstance(myProject).startMigration();
  LocalHistoryAction a=LocalHistory.getInstance().startAction(getCommandName());
  try {
    for (int i=0; i < myMigrationMap.getEntryCount(); i++) {
      MigrationMapEntry entry=myMigrationMap.getEntryAt(i);
      if (entry.getType() == MigrationMapEntry.PACKAGE) {
        MigrationUtil.doPackageMigration(myProject,psiMigration,entry.getNewName(),usages);
      }
      if (entry.getType() == MigrationMapEntry.CLASS) {
        MigrationUtil.doClassMigration(myProject,psiMigration,entry.getNewName(),usages);
      }
    }
    for (    RefactoringHelper helper : Extensions.getExtensions(RefactoringHelper.EP_NAME)) {
      Object preparedData=helper.prepareOperation(usages);
      helper.performOperation(myProject,preparedData);
    }
  }
  finally {
    a.finish();
    psiMigration.finish();
  }
}
