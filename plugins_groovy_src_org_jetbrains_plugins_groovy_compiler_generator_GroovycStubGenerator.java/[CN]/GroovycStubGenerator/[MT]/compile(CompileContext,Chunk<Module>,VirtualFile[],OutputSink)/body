{
  final ExcludedEntriesConfiguration excluded=GroovyCompilerConfiguration.getExcludeConfiguration(myProject);
  @SuppressWarnings("MismatchedQueryAndUpdateOfCollection") FactoryMap<Pair<Module,Boolean>,Boolean> hasJava=new FactoryMap<Pair<Module,Boolean>,Boolean>(){
    @Override protected Boolean create(    Pair<Module,Boolean> key){
      return containsJavaSources(key.first,key.second);
    }
  }
;
  ProjectFileIndex index=ProjectRootManager.getInstance(myProject).getFileIndex();
  List<VirtualFile> total=new ArrayList<VirtualFile>();
  for (  final VirtualFile virtualFile : virtualFiles) {
    if (!excluded.isExcluded(virtualFile) && GroovyNamesUtil.isIdentifier(virtualFile.getNameWithoutExtension())) {
      Module module=index.getModuleForFile(virtualFile);
      if (module == null || hasJava.get(Pair.create(module,index.isInTestSourceContent(virtualFile)))) {
        total.add(virtualFile);
      }
    }
  }
  if (total.isEmpty()) {
    return;
  }
  super.compile(compileContext,moduleChunk,VfsUtil.toVirtualFileArray(total),sink);
}
