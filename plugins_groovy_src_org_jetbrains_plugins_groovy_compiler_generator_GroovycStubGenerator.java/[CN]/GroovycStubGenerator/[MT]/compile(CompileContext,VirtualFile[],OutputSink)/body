{
  boolean hasTests=false;
  for (  final VirtualFile item : virtualFiles) {
    if (ProjectRootManager.getInstance(myProject).getFileIndex().isInTestSourceContent(item)) {
      hasTests=true;
      break;
    }
  }
  final ExcludedEntriesConfiguration excluded=GroovyCompilerConfiguration.getInstance(myProject).getState().excludeFromStubGeneration;
  List<VirtualFile> total=new ArrayList<VirtualFile>();
  for (  final VirtualFile virtualFile : virtualFiles) {
    if (!excluded.isExcluded(virtualFile)) {
      total.add(virtualFile);
    }
  }
  for (  final VirtualFile javaFile : compileContext.getCompileScope().getFiles(StdFileTypes.JAVA,!hasTests)) {
    if (isCompilableJavaFile(javaFile,compileContext)) {
      total.add(javaFile);
    }
  }
  super.compile(compileContext,total.toArray(new VirtualFile[total.size()]),sink);
}
