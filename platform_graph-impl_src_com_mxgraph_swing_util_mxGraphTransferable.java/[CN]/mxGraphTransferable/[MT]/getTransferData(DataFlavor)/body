{
  if (isRicherFlavor(flavor)) {
    return getRicherData(flavor);
  }
 else   if (isImageFlavor(flavor)) {
    if (image != null && image.getImage() instanceof RenderedImage) {
      if (flavor.equals(DataFlavor.imageFlavor)) {
        return image.getImage();
      }
 else {
        ByteArrayOutputStream stream=new ByteArrayOutputStream();
        ImageIO.write((RenderedImage)image.getImage(),"bmp",stream);
        return new ByteArrayInputStream(stream.toByteArray());
      }
    }
  }
 else   if (isHtmlFlavor(flavor)) {
    String data=getHtmlData();
    data=(data == null) ? "" : data;
    if (String.class.equals(flavor.getRepresentationClass())) {
      return data;
    }
 else     if (Reader.class.equals(flavor.getRepresentationClass())) {
      return new StringReader(data);
    }
 else     if (InputStream.class.equals(flavor.getRepresentationClass())) {
      return new ByteArrayInputStream(data.getBytes());
    }
  }
 else   if (isPlainFlavor(flavor)) {
    String data=getPlainData();
    data=(data == null) ? "" : data;
    if (String.class.equals(flavor.getRepresentationClass())) {
      return data;
    }
 else     if (Reader.class.equals(flavor.getRepresentationClass())) {
      return new StringReader(data);
    }
 else     if (InputStream.class.equals(flavor.getRepresentationClass())) {
      return new ByteArrayInputStream(data.getBytes());
    }
  }
 else   if (isStringFlavor(flavor)) {
    String data=getPlainData();
    data=(data == null) ? "" : data;
    return data;
  }
  throw new UnsupportedFlavorException(flavor);
}
