{
  VirtualFile file;
  try {
    file=patch.findFileToPatch(context);
  }
 catch (  IOException e) {
    Messages.showErrorDialog(project,"Error when searching for file to patch: " + patch.getBeforeName() + ": "+ e.getMessage(),VcsBundle.message("patch.apply.dialog.title"));
    return ApplyPatchStatus.FAILURE;
  }
  if (file == null) {
    Messages.showErrorDialog(project,"Cannot find file to patch: " + patch.getBeforeName(),VcsBundle.message("patch.apply.dialog.title"));
    return ApplyPatchStatus.FAILURE;
  }
  if (file.isDirectory() && !patch.isNewFile() && !patch.isDeletedFile()) {
    Messages.showErrorDialog(project,"Expected to find a file but found a directory: " + patch.getBeforeName(),VcsBundle.message("patch.apply.dialog.title"));
    return ApplyPatchStatus.FAILURE;
  }
  try {
    return patch.apply(file,context);
  }
 catch (  ApplyPatchException ex) {
    if (!patch.isNewFile() && !patch.isDeletedFile()) {
      FilePath pathBeforeRename=context.getPathBeforeRename(file);
      final DefaultPatchBaseVersionProvider provider=new DefaultPatchBaseVersionProvider(project);
      if (provider.canProvideContent(file,patch.getBeforeVersionId()) && patch instanceof TextFilePatch) {
        final StringBuilder newText=new StringBuilder();
        final Ref<CharSequence> contentRef=new Ref<CharSequence>();
        final Ref<ApplyPatchStatus> statusRef=new Ref<ApplyPatchStatus>();
        try {
          provider.getBaseVersionContent(file,pathBeforeRename,patch.getBeforeVersionId(),new Processor<CharSequence>(){
            public boolean process(            final CharSequence text){
              newText.setLength(0);
              try {
                statusRef.set(((TextFilePatch)patch).applyModifications(text,newText));
              }
 catch (              ApplyPatchException ex) {
                return true;
              }
              contentRef.set(text);
              return false;
            }
          }
);
        }
 catch (        VcsException vcsEx) {
          Messages.showErrorDialog(project,VcsBundle.message("patch.load.base.revision.error",patch.getBeforeName(),vcsEx.getMessage()),VcsBundle.message("patch.apply.dialog.title"));
          return ApplyPatchStatus.FAILURE;
        }
        ApplyPatchStatus status=statusRef.get();
        if (status != null) {
          if (status != ApplyPatchStatus.ALREADY_APPLIED) {
            return showMergeDialog(project,file,contentRef.get(),newText.toString());
          }
 else {
            return status;
          }
        }
      }
    }
    Messages.showErrorDialog(project,VcsBundle.message("patch.apply.error",patch.getBeforeName(),ex.getMessage()),VcsBundle.message("patch.apply.dialog.title"));
  }
catch (  Exception ex) {
    LOG.error(ex);
  }
  return ApplyPatchStatus.FAILURE;
}
