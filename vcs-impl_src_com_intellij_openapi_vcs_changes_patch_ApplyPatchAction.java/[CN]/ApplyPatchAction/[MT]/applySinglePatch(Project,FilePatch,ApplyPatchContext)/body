{
  VirtualFile file;
  try {
    file=patch.findFileToPatch(context);
  }
 catch (  IOException e) {
    Messages.showErrorDialog(project,"Error when searching for file to patch: " + patch.getBeforeName() + ": "+ e.getMessage(),VcsBundle.message("patch.apply.dialog.title"));
    return ApplyPatchStatus.FAILURE;
  }
  if (file == null) {
    Messages.showErrorDialog(project,"Cannot find file to patch: " + patch.getBeforeName(),VcsBundle.message("patch.apply.dialog.title"));
    return ApplyPatchStatus.FAILURE;
  }
  if (file.isDirectory() && !patch.isNewFile() && !patch.isDeletedFile()) {
    Messages.showErrorDialog(project,"Expected to find a file but found a directory: " + patch.getBeforeName(),VcsBundle.message("patch.apply.dialog.title"));
    return ApplyPatchStatus.FAILURE;
  }
  try {
    return patch.apply(file,context);
  }
 catch (  ApplyPatchException ex) {
    if (!patch.isNewFile() && !patch.isDeletedFile() && patch instanceof TextFilePatch) {
      ApplyPatchStatus mergeStatus=mergeAgainstBaseVersion(project,file,context,(TextFilePatch)patch,ApplyPatchMergeRequestFactory.INSTANCE);
      if (mergeStatus != null) {
        return mergeStatus;
      }
    }
    Messages.showErrorDialog(project,VcsBundle.message("patch.apply.error",patch.getBeforeName(),ex.getMessage()),VcsBundle.message("patch.apply.dialog.title"));
  }
catch (  Exception ex) {
    LOG.error(ex);
  }
  return ApplyPatchStatus.FAILURE;
}
