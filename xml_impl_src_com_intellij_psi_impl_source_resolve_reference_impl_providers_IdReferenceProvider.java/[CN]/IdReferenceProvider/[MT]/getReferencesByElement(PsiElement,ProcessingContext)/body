{
  if (element instanceof XmlAttributeValue) {
    final XmlExtension extension=XmlExtension.getExtensionByElement(element);
    if (extension != null && extension.hasDynamicComponents(element)) {
      return PsiReference.EMPTY_ARRAY;
    }
    final PsiElement parentElement=element.getParent();
    if (!(parentElement instanceof XmlAttribute))     return PsiReference.EMPTY_ARRAY;
    final String name=((XmlAttribute)parentElement).getName();
    final String ns=((XmlAttribute)parentElement).getParent().getNamespace();
    final boolean jsfNs=XmlUtil.JSF_CORE_URI.equals(ns) || XmlUtil.JSF_HTML_URI.equals(ns);
    if (FOR_ATTR_NAME.equals(name)) {
      return new PsiReference[]{jsfNs && element.getText().indexOf(':') == -1 ? new IdRefReference(element) : new IdRefReference(element){
        public boolean isSoft(){
          final XmlAttributeDescriptor descriptor=((XmlAttribute)parentElement).getDescriptor();
          return descriptor != null ? !descriptor.hasIdRefType() : false;
        }
      }
};
    }
 else {
      final boolean allowReferences=!(ourNamespacesWithoutNameReference.contains(ns));
      if ((ID_ATTR_NAME.equals(name) && allowReferences) || STYLE_ID_ATTR_NAME.equals(name) || (NAME_ATTR_NAME.equals(name) && allowReferences)) {
        final AttributeValueSelfReference attributeValueSelfReference;
        if (jsfNs) {
          attributeValueSelfReference=new AttributeValueSelfReference(element);
        }
 else {
          if (hasOuterLanguageElement(element))           return PsiReference.EMPTY_ARRAY;
          attributeValueSelfReference=new GlobalAttributeValueSelfReference(element,true);
        }
        return new PsiReference[]{attributeValueSelfReference};
      }
    }
  }
  return PsiReference.EMPTY_ARRAY;
}
