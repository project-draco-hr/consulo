{
  final MethodJavaDocHelper javaDocHelper=new MethodJavaDocHelper(methodToReplaceIn);
  PsiManager manager=methodToReplaceIn.getManager();
  PsiElementFactory factory=manager.getElementFactory();
  PsiParameter parameter=factory.createParameter(myParameterName,initializerType);
  parameter.getModifierList().setModifierProperty(PsiModifier.FINAL,myDeclareFinal);
  final PsiParameter anchorParameter=getAnchorParameter(methodToReplaceIn);
  final PsiParameterList parameterList=methodToReplaceIn.getParameterList();
  parameter=(PsiParameter)parameterList.addAfter(parameter,anchorParameter);
  manager.getCodeStyleManager().shortenClassReferences(parameter);
  final PsiDocTag tagForAnchorParameter=javaDocHelper.getTagForParameter(anchorParameter);
  javaDocHelper.addParameterAfter(myParameterName,tagForAnchorParameter);
  final PsiParameter[] parameters=methodToReplaceIn.getParameterList().getParameters();
  myParametersToRemove.forEachDescending(new TIntProcedure(){
    public boolean execute(    final int paramNum){
      try {
        PsiParameter param=parameters[paramNum];
        PsiDocTag tag=javaDocHelper.getTagForParameter(param);
        if (tag != null) {
          tag.delete();
        }
        param.delete();
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
      return true;
    }
  }
);
}
