{
  TextRange result=range;
  if (shouldProcess(element)) {
    final TextRange elementRange=element.getTextRange();
    if (range.contains(elementRange)) {
      new CommentFormatter(project).process(element);
      final TextRange newRange=element.getTextRange();
      result=new TextRange(range.getStartOffset(),range.getEndOffset() + newRange.getLength() - elementRange.getLength());
    }
    if (element.getPsi() instanceof PsiField || element.getPsi() instanceof PsiMethod || element instanceof PsiDocComment|| range.getEndOffset() < elementRange.getStartOffset()) {
      return result;
    }
  }
  if (element instanceof CompositeElement) {
    ASTNode current=element.getFirstChildNode();
    while (current != null) {
      if (current instanceof ChameleonElement) {
        ASTNode next=current.getTreeNext();
        final ASTNode astNode=ChameleonTransforming.transform((ChameleonElement)current);
        if (astNode == null)         current=next;
 else         current=astNode;
      }
      result=formatCommentsInner(project,current,result);
      current=current.getTreeNext();
    }
  }
  return result;
}
