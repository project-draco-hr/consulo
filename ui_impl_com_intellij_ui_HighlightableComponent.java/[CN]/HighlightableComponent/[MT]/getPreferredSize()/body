{
  FontMetrics defFontMetrics=getFontMetrics(getFont());
  int width=getTextOffset();
  if (myText.length() != 0) {
    if (myHighlightedRegions.size() == 0) {
      width+=defFontMetrics.stringWidth(myText);
    }
 else {
      int endIndex=0;
      for (int i=0; i < myHighlightedRegions.size(); i++) {
        HighlightedRegion hRegion=(HighlightedRegion)myHighlightedRegions.get(i);
        String text=myText.substring(endIndex,hRegion.startOffset);
        endIndex=hRegion.endOffset;
        width+=defFontMetrics.stringWidth(text);
        if (hRegion.endOffset > myText.length()) {
          if (hRegion.startOffset < myText.length()) {
            text=myText.substring(hRegion.startOffset);
          }
 else {
            text="";
          }
        }
 else {
          text=myText.substring(hRegion.startOffset,hRegion.endOffset);
        }
        FontMetrics fontMetrics=(FontMetrics)myFontMetrics.get(hRegion.textAttributes.getFontType());
        width+=fontMetrics.stringWidth(text);
      }
      width+=defFontMetrics.stringWidth(myText.substring(endIndex,myText.length()));
    }
  }
  int height=defFontMetrics.getHeight() + defFontMetrics.getLeading();
  if (myIcon != null) {
    height=Math.max(myIcon.getIconHeight() + defFontMetrics.getLeading(),height);
  }
  return new Dimension(width + 2,height);
}
