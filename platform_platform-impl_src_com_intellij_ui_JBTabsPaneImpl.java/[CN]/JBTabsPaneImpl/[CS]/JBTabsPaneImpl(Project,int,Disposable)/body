{
  myTabs=new JBEditorTabs(project,ActionManager.getInstance(),project == null ? null : IdeFocusManager.getInstance(project),parent){
    @Override public boolean isAlphabeticalMode(){
      return false;
    }
    @Override protected void doPaintBackground(    Graphics2D g2d,    Rectangle clip){
      super.doPaintBackground(g2d,clip);
      if (getTabsPosition() == JBTabsPosition.top && isSingleRow()) {
        int maxOffset=0;
        int maxLength=0;
        for (int i=getVisibleInfos().size() - 1; i >= 0; i--) {
          TabInfo visibleInfo=getVisibleInfos().get(i);
          TabLabel tabLabel=myInfo2Label.get(visibleInfo);
          Rectangle r=tabLabel.getBounds();
          if (r.width == 0 || r.height == 0)           continue;
          maxOffset=r.x + r.width;
          maxLength=r.height;
          break;
        }
        maxOffset++;
        g2d.setPaint(UIUtil.getPanelBackground());
        if (getFirstTabOffset() > 0) {
          g2d.fillRect(clip.x,clip.y,clip.x + getFirstTabOffset() - 1,clip.y + maxLength - TabsUtil.ACTIVE_TAB_UNDERLINE_HEIGHT);
        }
        g2d.fillRect(clip.x + maxOffset,clip.y,clip.width - maxOffset,clip.y + maxLength - TabsUtil.ACTIVE_TAB_UNDERLINE_HEIGHT);
        g2d.setPaint(new JBColor(Gray._181,UIUtil.getPanelBackground()));
        g2d.drawLine(clip.x + maxOffset,clip.y + maxLength - TabsUtil.ACTIVE_TAB_UNDERLINE_HEIGHT,clip.x + clip.width,clip.y + maxLength - TabsUtil.ACTIVE_TAB_UNDERLINE_HEIGHT);
        g2d.setPaint(UIUtil.getPanelBackground());
        g2d.drawLine(clip.x,clip.y + maxLength,clip.width,clip.y + maxLength);
      }
    }
    @Override protected void paintSelectionAndBorder(    Graphics2D g2d){
      super.paintSelectionAndBorder(g2d);
    }
  }
;
  myTabs.setFirstTabOffset(10);
  myTabs.addListener(new TabsListener.Adapter(){
    @Override public void selectionChanged(    TabInfo oldSelection,    TabInfo newSelection){
      fireChanged(new ChangeEvent(myTabs));
    }
  }
).getPresentation().setPaintBorder(1,1,1,1).setTabSidePaintBorder(2).setPaintFocus(UIUtil.isUnderBuildInLaF()).setAlwaysPaintSelectedTab(UIUtil.isUnderBuildInLaF()).setGhostsAlwaysVisible(true);
  setTabPlacement(tabPlacement);
}
