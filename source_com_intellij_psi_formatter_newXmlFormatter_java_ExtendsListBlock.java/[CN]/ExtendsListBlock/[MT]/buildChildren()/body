{
  ChameleonTransforming.transformChildren(myNode);
  final ArrayList<Block> result=new ArrayList<Block>();
  Alignment childAlignment=createChildAlignment();
  Wrap childWrap=createChildWrap();
  ASTNode child=myNode.getFirstChildNode();
  ArrayList<Block> syntBlock=new ArrayList<Block>();
  Alignment alignment=alignList() ? Formatter.getInstance().createAlignment() : null;
  while (child != null) {
    if (!containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {
      if (ElementType.KEYWORD_BIT_SET.isInSet(child.getElementType())) {
        if (!syntBlock.isEmpty()) {
          result.add(new SynteticCodeBlock(syntBlock,alignment,mySettings,null,null));
        }
        result.add(createJavaBlock(child,mySettings,null,arrangeChildWrap(child,childWrap),alignment));
      }
 else {
        child=processChild(syntBlock,child,childAlignment,childWrap);
      }
    }
    if (child != null) {
      child=child.getTreeNext();
    }
  }
  if (!syntBlock.isEmpty()) {
    result.add(new SynteticCodeBlock(syntBlock,alignment,mySettings,null,null));
  }
  return result;
}
