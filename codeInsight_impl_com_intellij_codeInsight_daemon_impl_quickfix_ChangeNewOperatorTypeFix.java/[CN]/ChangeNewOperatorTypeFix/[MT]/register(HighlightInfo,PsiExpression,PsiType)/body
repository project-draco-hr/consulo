{
  expression=PsiUtil.deparenthesizeExpression(expression);
  if (!(expression instanceof PsiNewExpression))   return;
  final PsiType rType=expression.getType();
  PsiType newType=lType;
  if (rType instanceof PsiClassType && newType instanceof PsiClassType) {
    final PsiClassType.ClassResolveResult rResolveResult=((PsiClassType)rType).resolveGenerics();
    final PsiClass rClass=rResolveResult.getElement();
    if (rClass != null) {
      final PsiClassType.ClassResolveResult lResolveResult=((PsiClassType)newType).resolveGenerics();
      final PsiClass lClass=lResolveResult.getElement();
      if (lClass != null) {
        PsiSubstitutor substitutor=getInheritorSubstitutorForNewExpression(lClass,rClass,lResolveResult.getSubstitutor(),expression);
        if (substitutor != null) {
          newType=lClass.getManager().getElementFactory().createType(rClass,substitutor);
        }
      }
    }
  }
  PsiNewExpression newExpression=(PsiNewExpression)expression;
  QuickFixAction.registerQuickFixAction(highlightInfo,new ChangeNewOperatorTypeFix(newType,newExpression));
}
