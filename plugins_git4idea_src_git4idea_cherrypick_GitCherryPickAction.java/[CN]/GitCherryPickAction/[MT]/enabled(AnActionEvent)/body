{
  final List<GitCommit> commits=e.getData(GitVcs.SELECTED_COMMITS);
  final Project project=e.getProject();
  if (commits == null || commits.isEmpty() || project == null) {
    return false;
  }
  for (  GitCommit commit : commits) {
    if (myIdsInProgress.contains(commit.getShortHash())) {
      return false;
    }
    GitRepository repository=myPlatformFacade.getRepositoryManager(project).getRepositoryForRoot(commit.getRoot());
    if (repository == null) {
      return false;
    }
    GitLocalBranch currentBranch=repository.getCurrentBranch();
    GitCommitDetailsProvider detailsProvider=e.getData(GitVcs.COMMIT_DETAILS_PROVIDER);
    if (currentBranch != null && detailsProvider != null && detailsProvider.getContainingBranches(repository.getRoot(),commit.getShortHash()).contains(currentBranch.getName())) {
      return false;
    }
  }
  return true;
}
