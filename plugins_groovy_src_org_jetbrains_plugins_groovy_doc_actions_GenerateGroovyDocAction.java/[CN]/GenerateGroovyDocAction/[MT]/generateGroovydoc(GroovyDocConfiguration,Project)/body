{
  Runnable groovyDocRun=new Runnable(){
    public void run(){
      Groovydoc groovydoc=new Groovydoc();
      groovydoc.setProject(new org.apache.tools.ant.Project());
      groovydoc.setDestdir(new File(configuration.OUTPUT_DIRECTORY));
      groovydoc.setPrivate(configuration.OPTION_IS_PRIVATE);
      groovydoc.setUse(configuration.OPTION_IS_USE);
      groovydoc.setWindowtitle(configuration.WINDOW_TITLE);
      final Path path=new Path(new org.apache.tools.ant.Project());
      path.setPath(configuration.INPUT_DIRECTORY);
      groovydoc.setSourcepath(path);
      String packages="";
      for (int i=0; i < configuration.PACKAGES.length; i++) {
        final String s=configuration.PACKAGES[i];
        if ("".equals(s))         continue;
        if (i > 0) {
          packages+=",";
        }
        packages+=s;
      }
      groovydoc.setPackagenames(packages);
      final ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
      progressIndicator.setIndeterminate(true);
      progressIndicator.setText(GroovyDocBundle.message("groovy.doc.progress.indication.text"));
      groovydoc.execute();
    }
  }
;
  ProgressManager.getInstance().runProcessWithProgressSynchronously(groovyDocRun,GroovyDocBundle.message("groovy.documentaion.generating"),false,project);
  if (configuration.OPEN_IN_BROWSER) {
    File url=new File(configuration.OUTPUT_DIRECTORY,INDEX_HTML);
    if (url.exists()) {
      BrowserUtil.launchBrowser(url.getPath());
    }
  }
}
