{
  settings.LINE_SEPARATOR=getSelectedLineSeparator();
  settings.USE_SAME_INDENTS=myCbUseSameIndents.isSelected();
  if (settings.USE_SAME_INDENTS) {
    IndentOptionsEditor theEditor=findEditorForSameIndents();
    theEditor.apply(settings,settings.OTHER_INDENT_OPTIONS);
  }
 else {
    myOtherIndentOptions.apply(settings,settings.OTHER_INDENT_OPTIONS);
    for (    Map.Entry<FileType,IndentOptionsEditor> entry : myAdditionalIndentOptions.entrySet()) {
      FileType fileType=entry.getKey();
      CodeStyleSettings.IndentOptions additionalIndentOptions=settings.getAdditionalIndentOptions(fileType);
      if (additionalIndentOptions == null) {
        continue;
      }
      IndentOptionsEditor editor=entry.getValue();
      editor.apply(settings,additionalIndentOptions);
    }
  }
  int rightMarginImpl=getRightMarginImpl();
  if (rightMarginImpl > 0) {
    settings.RIGHT_MARGIN=rightMarginImpl;
  }
  settings.WRAP_WHEN_TYPING_REACHES_RIGHT_MARGIN=myCbWrapWhenTypingReachesRightMargin.isSelected();
}
