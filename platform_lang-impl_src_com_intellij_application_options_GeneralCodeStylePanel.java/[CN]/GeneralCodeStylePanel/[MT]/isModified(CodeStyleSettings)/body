{
  if (!Comparing.equal(getSelectedLineSeparator(),settings.LINE_SEPARATOR)) {
    return true;
  }
  if (myCbUseSameIndents.isSelected() != settings.USE_SAME_INDENTS) {
    return true;
  }
  if (settings.USE_SAME_INDENTS) {
    final IndentOptionsEditor editor=findEditorForSameIndents();
    if (editor.isModified(settings,settings.OTHER_INDENT_OPTIONS)) {
      return true;
    }
  }
 else {
    if (myOtherIndentOptions.isModified(settings,settings.OTHER_INDENT_OPTIONS)) {
      return true;
    }
    for (    Map.Entry<FileType,IndentOptionsEditor> entry : myAdditionalIndentOptions.entrySet()) {
      FileType fileType=entry.getKey();
      CodeStyleSettings.IndentOptions additionalIndentOptions=settings.getAdditionalIndentOptions(fileType);
      if (additionalIndentOptions == null) {
        continue;
      }
      IndentOptionsEditor editor=entry.getValue();
      if (editor.isModified(settings,additionalIndentOptions)) {
        return true;
      }
    }
  }
  if (settings.WRAP_WHEN_TYPING_REACHES_RIGHT_MARGIN ^ myCbWrapWhenTypingReachesRightMargin.isSelected()) {
    return true;
  }
  return !myRightMarginField.getText().equals(String.valueOf(settings.RIGHT_MARGIN));
}
