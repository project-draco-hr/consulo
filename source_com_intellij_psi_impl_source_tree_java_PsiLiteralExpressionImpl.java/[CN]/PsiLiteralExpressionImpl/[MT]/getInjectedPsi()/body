{
  final Language language=getManager().getInjectedLanguage(this);
  if (language == null)   return null;
  final Project project=getProject();
  final ParserDefinition parserDefinition=language.getParserDefinition();
  if (parserDefinition == null)   return null;
  final PsiParser parser=parserDefinition.createParser(project);
  final IElementType root=parserDefinition.getFileNodeType();
  Object value=getValue();
  if (!(value instanceof String))   return null;
  String text=(String)value;
  final PsiBuilderImpl builder=new PsiBuilderImpl(language,project,null,text);
  final ASTNode parsedNode=parser.parse(root,builder);
  if (parsedNode instanceof FileElement) {
    parsedNode.putUserData(MANAGER_KEY,getManager());
    final VirtualFile virtualFile=new LightVirtualFile("x." + language.getAssociatedFileType().getDefaultExtension(),language,text);
    PsiFile psiFile=parserDefinition.createFile(new SingleRootFileViewProvider(getManager(),virtualFile));
    SrcRepositoryPsiElement repositoryPsiElement=(SrcRepositoryPsiElement)psiFile;
    ((FileElement)parsedNode).setPsiElement(repositoryPsiElement);
    repositoryPsiElement.setTreeElement(parsedNode);
  }
  return Pair.create(parsedNode.getPsi(),new TextRange(1,text.length() - 2));
}
