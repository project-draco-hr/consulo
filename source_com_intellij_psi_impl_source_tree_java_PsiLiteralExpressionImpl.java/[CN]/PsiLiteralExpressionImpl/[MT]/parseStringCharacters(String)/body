{
  if (chars.indexOf('\\') < 0)   return chars.intern();
  StringBuffer buffer=new StringBuffer(chars.length());
  int index=0;
  while (index < chars.length()) {
    char c=chars.charAt(index++);
    if (c != '\\') {
      buffer.append(c);
    }
 else {
      if (index == chars.length())       return null;
      c=chars.charAt(index++);
switch (c) {
case 'b':
        buffer.append('\b');
      break;
case 't':
    buffer.append('\t');
  break;
case 'n':
buffer.append('\n');
break;
case 'f':
buffer.append('\f');
break;
case 'r':
buffer.append('\r');
break;
case '"':
buffer.append('"');
break;
case '\'':
buffer.append('\'');
break;
case '\\':
buffer.append('\\');
break;
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
{
char startC=c;
int v=(int)c - '0';
if (index < chars.length()) {
c=chars.charAt(index++);
if ('0' <= c && c <= '7') {
v<<=3;
v+=c - '0';
if (startC <= '3' && index < chars.length()) {
c=chars.charAt(index++);
if ('0' <= c && c <= '7') {
v<<=3;
v+=c - '0';
}
 else {
index--;
}
}
}
 else {
index--;
}
}
buffer.append((char)v);
}
break;
case 'u':
if (index + 4 <= chars.length()) {
try {
int v=Integer.parseInt(chars.substring(index,index + 4),16);
if (v == 0x000a || v == 0x000d) return null;
c=chars.charAt(index);
if (c == '+' || c == '-') {
return null;
}
buffer.append((char)v);
index+=4;
}
 catch (Exception e) {
return null;
}
}
 else {
return null;
}
break;
default :
return null;
}
}
}
return buffer.toString().intern();
}
