{
  final Object value=getValue();
  String text=getFirstChildNode().getText();
  IElementType i=getFirstChildNode().getElementType();
  if (i == INTEGER_LITERAL) {
    text=text.toLowerCase();
    if (!(text.equals(_2_IN_31) && getParent() instanceof PsiPrefixExpression && ((PsiPrefixExpression)getParent()).getOperationSign().getTokenType() == JavaTokenType.MINUS)) {
      if (text.equals("0x"))       return "Hexadecimal numbers must contain at least one hexadecimal digit";
      if (value == null || text.equals(_2_IN_31)) {
        return "Integer number too large";
      }
    }
  }
 else   if (i == LONG_LITERAL) {
    text=text.toLowerCase();
    if (!(text.equals(_2_IN_63_L) && getParent() instanceof PsiPrefixExpression && ((PsiPrefixExpression)getParent()).getOperationSign().getTokenType() == JavaTokenType.MINUS)) {
      if (text.equals("0x") || text.equals("0xl"))       return "Hexadecimal numbers must contain at least one hexadecimal digit";
      if (value == null || text.equals(_2_IN_63_L)) {
        return "Long number too large";
      }
    }
  }
 else   if (i == FLOAT_LITERAL || i == DOUBLE_LITERAL) {
    if (value == null) {
      return "Malformed floating point literal";
    }
  }
 else   if (i == TRUE_KEYWORD || i == FALSE_KEYWORD || i == NULL_KEYWORD) {
  }
 else   if (i == CHARACTER_LITERAL) {
    if (value == null) {
      if (StringUtil.endsWithChar(text,'\'')) {
        if (text.length() == 1)         return "Illegal line end in character literal";
        text=text.substring(1,text.length() - 1);
      }
 else {
        return "Illegal line end in character literal";
      }
      String s=parseStringCharacters(text);
      if (s == null)       return "Illegal escape character in character literal";
      if (s.length() > 1) {
        return "Too many characters in character literal";
      }
 else       if (s.length() == 0)       return "Empty character literal";
    }
  }
 else   if (i == STRING_LITERAL) {
    if (value == null) {
      if (StringUtil.endsWithChar(text,'\"')) {
        if (text.length() == 1)         return "Illegal line end in string literal";
        text=text.substring(1,text.length() - 1);
      }
 else {
        return "Illegal line end in string literal";
      }
      if (parseStringCharacters(text) == null)       return "Illegal escape character in string literal";
    }
  }
  if (value instanceof Float) {
    final Float number=(Float)value;
    if (number.isInfinite())     return "Floating point number too large";
    if (number.floatValue() == 0 && !isFPZero())     return "Floating point number too small";
  }
  if (value instanceof Double) {
    final Double number=(Double)value;
    if (number.isInfinite())     return "Floating point number too large";
    if (number.doubleValue() == 0 && !isFPZero())     return "Floating point number too small";
  }
  return null;
}
