{
  final List<SimpleNode> nodes=new ArrayList<SimpleNode>();
  TreeUtil.traverseDepth(getRootNode(),new TreeUtil.Traverse(){
    public boolean accept(    Object node){
      final Object userObject=((DefaultMutableTreeNode)node).getUserObject();
      if (userObject instanceof PackagingElementNode) {
        final PackagingElementNode<?> packagingNode=(PackagingElementNode<?>)userObject;
        final List<? extends PackagingElement<?>> nodeElements=packagingNode.getPackagingElements();
        if (ContainerUtil.intersects(nodeElements,elements)) {
          nodes.add(packagingNode);
        }
      }
      return true;
    }
  }
);
  return nodes;
}
