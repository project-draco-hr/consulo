{
  ApplicationManager.getApplication().assertIsDispatchThread();
  while (true) {
    if (!myProject.isOpen())     return;
    TaskDescriptor current;
synchronized (myQueueLock) {
      if (myQueue.isEmpty())       return;
      if (myTriggerSuspend) {
        myTriggerSuspend=false;
        return;
      }
      current=myQueue.remove(0);
      if (!current.isHaveMagicCure()) {
        for (        Map.Entry<Object,Object> entry : myDisasters.entrySet()) {
          if (!entry.getValue().equals(current.hasCure(entry.getKey()))) {
            current=null;
            break;
          }
        }
      }
      if (current == null)       continue;
    }
    if (Where.AWT.equals(current.getWhere())) {
      myIndicator=null;
      current.run(this);
    }
 else {
      final TaskWrapper task=new TaskWrapper(myProject,current.getName(),myCancellable,current,this);
      myIndicator=ApplicationManager.getApplication().isUnitTestMode() ? new EmptyProgressIndicator() : new BackgroundableProcessIndicator(task);
      ProgressManagerImpl.runProcessWithProgressAsynchronously(task,myIndicator);
      return;
    }
  }
}
