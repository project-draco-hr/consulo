{
  int binaryCount=0;
  for (  Change change : changes) {
    if (ChangesUtil.isBinaryChange(change)) {
      binaryCount++;
    }
  }
  if (binaryCount == changes.size()) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        Messages.showInfoMessage(myProject,VcsBundle.message("create.patch.all.binary"),VcsBundle.message("create.patch.commit.action.title"));
      }
    }
);
    return;
  }
  try {
    final String fileName=myPanel.getFileName();
    final File file=new File(fileName).getAbsoluteFile();
    PATCH_PATH=file.getParent();
    REVERSE_PATCH=myPanel.isReversePatch();
    Writer writer=new OutputStreamWriter(new FileOutputStream(fileName));
    try {
      List<FilePatch> patches=PatchBuilder.buildPatch(changes,myProject.getBaseDir().getPresentableUrl(),false,REVERSE_PATCH);
      final String lineSeparator=CodeStyleFacade.getInstance(myProject).getLineSeparator();
      UnifiedDiffWriter.write(patches,writer,lineSeparator);
    }
  finally {
      writer.close();
    }
    if (binaryCount == 0) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          Messages.showInfoMessage(myProject,VcsBundle.message("create.patch.success.confirmation",file.getPath()),VcsBundle.message("create.patch.commit.action.title"));
        }
      }
);
    }
 else {
      final int binaryCount1=binaryCount;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          Messages.showInfoMessage(myProject,VcsBundle.message("create.patch.partial.success.confirmation",file.getPath(),binaryCount1),VcsBundle.message("create.patch.commit.action.title"));
        }
      }
);
    }
  }
 catch (  final Exception ex) {
    LOG.info(ex);
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        Messages.showErrorDialog(myProject,VcsBundle.message("create.patch.error.title",ex.getMessage()),CommonBundle.getErrorTitle());
      }
    }
);
  }
}
