{
  Caret caret=c == null ? editor.getCaretModel().getPrimaryCaret() : c;
  if (!caret.hasSelection()) {
    TextRange wordSelectionRange=getSelectionRange(editor,caret);
    if (wordSelectionRange != null) {
      setSelection(editor,caret,wordSelectionRange);
    }
  }
  String selectedText=caret.getSelectedText();
  Project project=editor.getProject();
  if (project == null || selectedText == null) {
    return;
  }
  int caretShiftFromSelectionStart=caret.getOffset() - caret.getSelectionStart();
  FindManager findManager=FindManager.getInstance(project);
  FindModel model=new FindModel();
  model.setStringToFind(selectedText);
  model.setCaseSensitive(true);
  model.setWholeWordsOnly(true);
  int searchStartOffset=0;
  FindResult findResult=findManager.findString(editor.getDocument().getCharsSequence(),searchStartOffset,model);
  while (findResult.isStringFound()) {
    int newCaretOffset=caretShiftFromSelectionStart + findResult.getStartOffset();
    EditorActionUtil.makePositionVisible(editor,newCaretOffset);
    Caret newCaret=editor.getCaretModel().addCaret(editor.offsetToVisualPosition(newCaretOffset));
    if (newCaret != null) {
      setSelection(editor,newCaret,findResult);
    }
    findResult=findManager.findString(editor.getDocument().getCharsSequence(),findResult.getEndOffset(),model);
  }
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
}
