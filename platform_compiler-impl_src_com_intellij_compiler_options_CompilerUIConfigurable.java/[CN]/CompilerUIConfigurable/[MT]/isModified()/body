{
  boolean isModified=false;
  final CompilerWorkspaceConfiguration workspaceConfiguration=CompilerWorkspaceConfiguration.getInstance(myProject);
  isModified|=ComparingUtils.isModified(myCbAutoShowFirstError,workspaceConfiguration.AUTO_SHOW_ERRORS_IN_EDITOR);
  isModified|=ComparingUtils.isModified(myCbUseExternalBuild,workspaceConfiguration.USE_COMPILE_SERVER);
  isModified|=ComparingUtils.isModified(myCbEnableAutomake,workspaceConfiguration.MAKE_PROJECT_ON_SAVE);
  isModified|=ComparingUtils.isModified(myCbParallelCompilation,workspaceConfiguration.PARALLEL_COMPILATION);
  isModified|=ComparingUtils.isModified(myCbRebuildOnDependencyChange,workspaceConfiguration.REBUILD_ON_DEPENDENCY_CHANGE);
  isModified|=ComparingUtils.isModified(myHeapSizeField,workspaceConfiguration.COMPILER_PROCESS_HEAP_SIZE);
  isModified|=ComparingUtils.isModified(myVMOptionsField,workspaceConfiguration.COMPILER_PROCESS_ADDITIONAL_VM_OPTIONS);
  final CompilerConfigurationImpl compilerConfiguration=(CompilerConfigurationImpl)CompilerConfiguration.getInstance(myProject);
  isModified|=ComparingUtils.isModified(myCbAssertNotNull,compilerConfiguration.isAddNotNullAssertions());
  isModified|=ComparingUtils.isModified(myCbClearOutputDirectory,workspaceConfiguration.CLEAR_OUTPUT_DIRECTORY);
  isModified|=ComparingUtils.isModified(myResourcePatternsField,patternsToString(compilerConfiguration.getResourceFilePatterns()));
  return isModified;
}
