{
  final Set<AntTarget> projectTargets=new LinkedHashSet<AntTarget>();
  for (  PsiElement child : antProject.getChildren()) {
    if (child instanceof AntElement) {
      if (child instanceof AntTarget) {
        final AntTarget antTarget=(AntTarget)child;
        if (antProject.equals(antTarget.getAntProject())) {
          projectTargets.add(antTarget);
        }
      }
 else {
        ((AntElement)child).acceptAntElementVisitor(this);
      }
    }
  }
  final AntTarget entryTarget=antProject.getDefaultTarget();
  if (entryTarget != null) {
    entryTarget.acceptAntElementVisitor(this);
  }
  projectTargets.removeAll(myVisitedTargets);
  for (  AntTarget antTarget : projectTargets) {
    antTarget.acceptAntElementVisitor(this);
  }
  final List<Runnable> list=myPostponedProcessing.get(antProject);
  if (list != null) {
    for (    Runnable runnable : list) {
      runnable.run();
    }
    myPostponedProcessing.remove(antProject);
  }
}
