{
{
    registrar.registerMetaData(new AndFilter(new NamespaceFilter(XmlUtil.SCHEMA_URIS),new ClassFilter(XmlDocument.class)),SchemaNSDescriptor.class);
    registrar.registerMetaData(new AndFilter(XmlTagFilter.INSTANCE,new NamespaceFilter(XmlUtil.SCHEMA_URIS),new XmlTextFilter("schema")),SchemaNSDescriptor.class);
  }
{
    registrar.registerMetaData(new OrFilter(new AndFilter(new ContentFilter(new OrFilter(new ClassFilter(XmlElementDecl.class),new ClassFilter(XmlConditionalSection.class),new ClassFilter(XmlEntityRef.class))),new ClassFilter(XmlDocument.class)),new ClassFilter(XmlMarkupDecl.class)),com.intellij.xml.impl.dtd.XmlNSDescriptorImpl.class);
  }
{
    registrar.registerMetaData(new AndFilter(XmlTagFilter.INSTANCE,new NamespaceFilter(XmlUtil.SCHEMA_URIS),new XmlTextFilter("element")),XmlElementDescriptorImpl.class);
  }
{
    registrar.registerMetaData(new AndFilter(XmlTagFilter.INSTANCE,new NamespaceFilter(XmlUtil.SCHEMA_URIS),new XmlTextFilter("attribute")),XmlAttributeDescriptorImpl.class);
  }
{
    registrar.registerMetaData(new ClassFilter(XmlElementDecl.class),com.intellij.xml.impl.dtd.XmlElementDescriptorImpl.class);
  }
{
    registrar.registerMetaData(new ClassFilter(XmlAttributeDecl.class),com.intellij.xml.impl.dtd.XmlAttributeDescriptorImpl.class);
  }
{
    registrar.registerMetaData(new AndFilter(new ClassFilter(XmlDocument.class),new TargetNamespaceFilter(XmlUtil.XHTML_URI),new NamespaceFilter(XmlUtil.SCHEMA_URIS)),RelaxedHtmlFromSchemaNSDescriptor.class);
  }
{
    registrar.registerMetaData(new AndFilter(XmlTagFilter.INSTANCE,new NamespaceFilter(XmlUtil.SCHEMA_URIS),new XmlTextFilter("complexType","simpleType","group","attributeGroup")),NamedObjectDescriptor.class);
  }
}
