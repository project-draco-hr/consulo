{
  final MyElement rootElement=createDomFile("a.xml","<root xmlns:xi=\"http://www.w3.org/2001/XInclude\">" + "<xi:include href=\"b.xml\" xpointer=\"xpointer(/xxx/*)\"/>" + "</root>");
  final PsiFile fileB=createFile("b.xml","<xxx><boy/><xi:include href=\"c.xml\" xpointer=\"xpointer(/xxx/*)\"/><child/><xi:include href=\"c.xml\" xpointer=\"xpointer(/xxx/*)\"/></xxx>");
  final PsiFile fileC=createFile("c.xml","<xxx><child/><xi:include href=\"d.xml\" xpointer=\"xpointer(/xxx/*)\"/><boy/><xi:include href=\"d.xml\" xpointer=\"xpointer(/xxx/*)\"/></xxx>");
  final PsiFile fileD=createFile("d.xml","<xxx><boy/><xi:include href=\"e.xml\" xpointer=\"xpointer(/xxx/*)\"/><child/><xi:include href=\"e.xml\" xpointer=\"xpointer(/xxx/*)\"/></xxx>");
  final PsiFile fileE=createFile("e.xml","<xxx><boy/><child/><boy/><child/><boy/><child/><boy/><child/><boy/><child/><boy/><child/></xxx>");
  final int threadCount=100;
  final int iterationCount=Timings.adjustAccordingToMySpeed(800,true);
  System.out.println("iterationCount = " + iterationCount);
  final CountDownLatch finished=new CountDownLatch(threadCount);
  final AtomicReference<Exception> ex=new AtomicReference<Exception>();
  Thread[] threads=new Thread[threadCount];
  for (int j=0; j < threadCount; j++) {
    Thread thread=new Thread(){
      @Override public void run(){
        for (int k=0; k < iterationCount; k++) {
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            public void run(){
              try {
                final List<Boy> boys=rootElement.getBoys();
                Thread.yield();
                final List<Child> children=rootElement.getChildren();
                Thread.yield();
                assertEquals(boys,rootElement.getBoys());
                assertEquals(children,rootElement.getChildren());
              }
 catch (              Exception e) {
                ex.set(e);
              }
 finally {
                finished.countDown();
              }
            }
          }
);
          Thread.yield();
        }
      }
    }
;
    threads[j]=thread;
    thread.start();
  }
  for (int i=0; i < iterationCount; i++) {
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        fileB.getViewProvider().getDocument().insertString(0," ");
        fileD.getViewProvider().getDocument().insertString(0," ");
        PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
      }
    }
);
    Thread.sleep(10);
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        fileC.getViewProvider().getDocument().insertString(0," ");
        fileE.getViewProvider().getDocument().insertString(0," ");
        PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
      }
    }
);
    Thread.sleep(10);
  }
  finished.await();
  for (  Thread thread : threads) {
    thread.join();
  }
  final Exception exception=ex.get();
  if (exception != null) {
    throw exception;
  }
}
