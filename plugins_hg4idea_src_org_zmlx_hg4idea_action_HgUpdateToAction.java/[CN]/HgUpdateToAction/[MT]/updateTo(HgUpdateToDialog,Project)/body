{
  final VirtualFile repository=dialog.getRepository();
  final HgUpdateCommand command=new HgUpdateCommand(project,repository);
  command.setClean(dialog.isRemoveLocalChanges());
  if (dialog.isRevisionSelected()) {
    command.setRevision(dialog.getRevision());
  }
  if (dialog.isBranchSelected()) {
    command.setBranch(dialog.getBranch().getName());
  }
  if (dialog.isTagSelected()) {
    command.setRevision(dialog.getTag().getName());
  }
  if (dialog.isBookmarkSelected()) {
    command.setRevision(dialog.getBookmark().getName());
  }
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    @Override public void run(){
      HgCommandResult result=command.execute();
      new HgConflictResolver(project).resolve(repository);
      if (HgErrorUtil.hasErrorsInCommandExecution(result)) {
        new HgCommandResultNotifier(project).notifyError(result,"","Update failed");
      }
      project.getMessageBus().syncPublisher(HgVcs.BRANCH_TOPIC).update(project,null);
    }
  }
);
}
