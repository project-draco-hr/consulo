{
  super.visitNewExpression(expression);
  if (!isIOResource(expression)) {
    return;
  }
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiExpressionList) {
    final PsiElement grandParent=parent.getParent();
    if (grandParent instanceof PsiNewExpression && isIOResource((PsiNewExpression)grandParent)) {
      return;
    }
  }
  if (!(parent instanceof PsiAssignmentExpression)) {
    registerError(expression);
    return;
  }
  final PsiAssignmentExpression assignment=(PsiAssignmentExpression)parent;
  final PsiExpression lhs=assignment.getLExpression();
  if (!(lhs instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiElement referent=((PsiReferenceExpression)lhs).resolve();
  if (referent == null || !(referent instanceof PsiVariable)) {
    return;
  }
  final PsiVariable boundVariable=(PsiVariable)referent;
  final PsiElement containingBlock=PsiTreeUtil.getParentOfType(expression,PsiCodeBlock.class);
  if (isArgToResourceCreation(boundVariable,containingBlock)) {
    return;
  }
  PsiElement currentContext=expression;
  while (true) {
    final PsiTryStatement tryStatement=(PsiTryStatement)PsiTreeUtil.getParentOfType(currentContext,PsiTryStatement.class);
    if (tryStatement == null) {
      registerError(expression);
      return;
    }
    if (resourceIsOpenedInTryAndClosedInFinally(tryStatement,expression,boundVariable)) {
      return;
    }
    currentContext=tryStatement;
  }
}
