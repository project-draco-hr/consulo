{
  super.visitNewExpression(expression);
  if (!isIOResource(expression)) {
    return;
  }
  final PsiElement parent=getExpressionParent(expression);
  if (parent instanceof PsiReturnStatement) {
    return;
  }
  if (parent instanceof PsiExpressionList) {
    PsiElement grandParent=parent.getParent();
    if (grandParent instanceof PsiAnonymousClass) {
      grandParent=grandParent.getParent();
    }
    if (grandParent instanceof PsiNewExpression && isIOResource((PsiNewExpression)grandParent)) {
      return;
    }
  }
  final PsiVariable boundVariable=getVariable(parent);
  final PsiElement containingBlock=PsiTreeUtil.getParentOfType(expression,PsiCodeBlock.class);
  if (isArgumentOfResourceCreation(boundVariable,containingBlock)) {
    return;
  }
  if (isSafelyClosed(boundVariable,expression)) {
    return;
  }
  if (isResourceEscapedFromMethod(boundVariable,expression)) {
    return;
  }
  registerError(expression,expression);
}
