{
  super.visitNewExpression(expression);
  if (!isIOResource(expression)) {
    return;
  }
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiExpressionList) {
    final PsiElement grandParent=parent.getParent();
    if (grandParent instanceof PsiNewExpression && isIOResource((PsiNewExpression)grandParent)) {
      return;
    }
  }
  final PsiVariable boundVariable;
  if (parent instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignment=(PsiAssignmentExpression)parent;
    final PsiExpression lhs=assignment.getLExpression();
    if (!(lhs instanceof PsiReferenceExpression)) {
      return;
    }
    final PsiElement referent=((PsiReference)lhs).resolve();
    if (!(referent instanceof PsiVariable)) {
      return;
    }
    boundVariable=(PsiVariable)referent;
  }
 else   if (parent instanceof PsiLocalVariable) {
    boundVariable=(PsiVariable)parent;
  }
 else {
    registerError(expression,expression);
    return;
  }
  final PsiElement containingBlock=PsiTreeUtil.getParentOfType(expression,PsiCodeBlock.class);
  if (isArgToResourceCreation(boundVariable,containingBlock)) {
    return;
  }
  if (!isResourceClosedInFinally(expression,boundVariable)) {
    registerError(expression,expression);
  }
}
