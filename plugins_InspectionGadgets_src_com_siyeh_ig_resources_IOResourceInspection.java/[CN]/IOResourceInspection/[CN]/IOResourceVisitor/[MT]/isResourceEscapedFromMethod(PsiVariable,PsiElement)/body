{
  PsiMethod method=PsiTreeUtil.getParentOfType(context,PsiMethod.class,true,PsiMember.class);
  if (method == null)   return false;
  PsiCodeBlock body=method.getBody();
  if (body == null)   return false;
  final boolean[] escaped=new boolean[1];
  PsiElementVisitor visitor=new PsiRecursiveElementVisitor(){
    public void visitAnonymousClass(    PsiAnonymousClass aClass){
    }
    public void visitReturnStatement(    PsiReturnStatement statement){
      PsiExpression value=statement.getReturnValue();
      value=PsiUtil.deparenthesizeExpression(value);
      if (value instanceof PsiReferenceExpression && ((PsiReferenceExpression)value).resolve() == boundVariable) {
        escaped[0]=true;
      }
    }
  }
;
  body.accept(visitor);
  return escaped[0];
}
