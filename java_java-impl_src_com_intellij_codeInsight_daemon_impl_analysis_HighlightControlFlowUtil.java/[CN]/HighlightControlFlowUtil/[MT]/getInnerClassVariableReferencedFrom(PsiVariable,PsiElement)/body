{
  PsiElement[] scope;
  if (variable instanceof PsiScopedLocalVariable) {
    scope=((PsiScopedLocalVariable)variable).getDeclarationScope();
  }
 else   if (variable instanceof PsiLocalVariable) {
    scope=new PsiElement[]{variable.getParent().getParent()};
  }
 else   if (variable instanceof PsiParameter) {
    scope=new PsiElement[]{((PsiParameter)variable).getDeclarationScope()};
  }
 else {
    scope=new PsiElement[]{variable.getParent()};
  }
  if (scope.length < 1 || scope[0].getContainingFile() != context.getContainingFile())   return null;
  PsiElement parent=context.getParent();
  PsiElement prevParent=context;
  outer:   while (parent != null) {
    for (    PsiElement scopeElement : scope) {
      if (parent.equals(scopeElement))       break outer;
    }
    if (parent instanceof PsiClass && !(prevParent instanceof PsiExpressionList && parent instanceof PsiAnonymousClass)) {
      return (PsiClass)parent;
    }
    prevParent=parent;
    parent=parent.getParent();
  }
  return null;
}
