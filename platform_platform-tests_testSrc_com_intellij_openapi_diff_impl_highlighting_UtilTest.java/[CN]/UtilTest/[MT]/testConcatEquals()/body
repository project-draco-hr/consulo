{
  Object[] left=new String[]{"a","x","a","b"};
  Object[] right=new String[]{"a","b"};
  Diff.Change change=Diff.buildChanges(left,right);
  Diff.Change newChange=Util.concatEquals(change,left,right);
  MultiCheck multiCheck=new MultiCheck();
  multiCheck.assertEquals(0,newChange.line0);
  multiCheck.assertEquals(0,newChange.line1);
  multiCheck.assertEquals(2,newChange.deleted);
  multiCheck.assertEquals(0,newChange.inserted);
  multiCheck.assertNull(newChange.link);
  multiCheck.flush();
  change=Diff.buildChanges(right,left);
  newChange=Util.concatEquals(change,right,left);
  multiCheck=new MultiCheck();
  multiCheck.assertEquals(0,newChange.line0);
  multiCheck.assertEquals(0,newChange.line1);
  multiCheck.assertEquals(0,newChange.deleted);
  multiCheck.assertEquals(2,newChange.inserted);
  multiCheck.assertNull(newChange.link);
  multiCheck.flush();
  left=new String[]{"a","x","a","1","b"};
  right=new String[]{"a","b"};
  change=Diff.buildChanges(left,right);
  newChange=Util.concatEquals(change,left,right);
  multiCheck=new MultiCheck();
  multiCheck.assertEquals(1,newChange.line0);
  multiCheck.assertEquals(1,newChange.line1);
  multiCheck.assertEquals(3,newChange.deleted);
  multiCheck.assertEquals(0,newChange.inserted);
  multiCheck.assertNull(newChange.link);
  multiCheck.flush();
  left=new String[]{"y","y","y","a","2","a","b"};
  right=new String[]{"x","a","b"};
  change=Diff.buildChanges(left,right);
  newChange=Util.concatEquals(change,left,right);
  multiCheck=new MultiCheck();
  multiCheck.assertEquals(0,newChange.line0);
  multiCheck.assertEquals(0,newChange.line1);
  multiCheck.assertEquals(5,newChange.deleted);
  multiCheck.assertEquals(1,newChange.inserted);
  multiCheck.flush();
  left=new String[]{"y","y","y","a","2","a","b","*"};
  right=new String[]{"x","a","b","@"};
  change=Diff.buildChanges(left,right);
  newChange=Util.concatEquals(change,left,right);
  multiCheck=new MultiCheck();
  multiCheck.assertEquals(0,newChange.line0);
  multiCheck.assertEquals(0,newChange.line1);
  multiCheck.assertEquals(3,newChange.deleted);
  multiCheck.assertEquals(1,newChange.inserted);
  newChange=newChange.link;
  multiCheck.assertEquals(3,newChange.line0);
  multiCheck.assertEquals(1,newChange.line1);
  multiCheck.assertEquals(2,newChange.deleted);
  multiCheck.assertEquals(0,newChange.inserted);
  newChange=newChange.link;
  multiCheck.assertEquals(7,newChange.line0);
  multiCheck.assertEquals(3,newChange.line1);
  multiCheck.assertEquals(1,newChange.deleted);
  multiCheck.assertEquals(1,newChange.inserted);
  multiCheck.assertNull(newChange.link);
  multiCheck.flush();
}
