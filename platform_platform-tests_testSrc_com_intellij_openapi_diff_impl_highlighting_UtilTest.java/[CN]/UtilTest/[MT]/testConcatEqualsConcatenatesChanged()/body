{
  String[] left=new String[]{"i1","a","i2","a","b"};
  String[] right=new String[]{"a","b"};
  Diff.Change change=Diff.buildChanges(left,right);
  MultiCheck multiCheck=new MultiCheck();
  multiCheck.assertEquals(0,change.line0);
  multiCheck.assertEquals(0,change.line1);
  multiCheck.assertEquals(3,change.deleted);
  multiCheck.assertEquals(0,change.inserted);
  multiCheck.assertNull(change.link);
  multiCheck.flush();
  left=new String[]{"i1","a","i2","a","b","*"};
  right=new String[]{"a","b","$"};
  change=Diff.buildChanges(left,right);
  assertNotNull(change.link);
  assertEquals(2,change.link.deleted);
  assertEquals(2,change.link.line0);
  Diff.Change newChange=Util.concatEquals(change,left,right);
  multiCheck.assertEquals(0,newChange.line0);
  multiCheck.assertEquals(0,newChange.line1);
  multiCheck.assertEquals(3,newChange.deleted);
  multiCheck.assertEquals(0,newChange.inserted);
  assertNotNull(newChange.link);
  newChange=newChange.link;
  multiCheck.assertEquals(5,newChange.line0);
  multiCheck.assertEquals(2,newChange.line1);
  multiCheck.assertEquals(1,newChange.deleted);
  multiCheck.assertEquals(1,newChange.inserted);
  multiCheck.assertNull(newChange.link);
  multiCheck.flush();
}
