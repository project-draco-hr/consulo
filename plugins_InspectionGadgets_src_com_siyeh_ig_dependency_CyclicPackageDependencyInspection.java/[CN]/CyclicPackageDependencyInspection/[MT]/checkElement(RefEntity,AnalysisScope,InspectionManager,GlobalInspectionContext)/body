{
  if (!(refEntity instanceof RefPackage)) {
    return null;
  }
  final RefPackage refPackage=(RefPackage)refEntity;
  if (globalInspectionContext.isSuppressed(refEntity,getShortName())) {
    return null;
  }
  final Set<RefPackage> dependencies=DependencyUtils.calculateTransitiveDependenciesForPackage(refPackage);
  final Set<RefPackage> dependents=DependencyUtils.calculateTransitiveDependentsForPackage(refPackage);
  final Set<RefPackage> mutualDependents=new HashSet<RefPackage>(dependencies);
  mutualDependents.retainAll(dependents);
  final int numMutualDependents=mutualDependents.size();
  if (numMutualDependents == 0) {
    return null;
  }
  final String packageName=refEntity.getName();
  final String errorString=InspectionGadgetsBundle.message("cyclic.package.dependency.problem.descriptor",packageName,numMutualDependents);
  return new CommonProblemDescriptor[]{inspectionManager.createProblemDescriptor(errorString)};
}
