{
  final int modelColumn=myTable.convertColumnIndexToModel(column);
  final M memberInfo=myTable.myMemberInfos.get(row);
  setToolTipText(myTable.myMemberInfoModel.getTooltipText(memberInfo));
  T member=memberInfo.getMember();
switch (modelColumn) {
case DISPLAY_NAME_COLUMN:
{
      Icon memberIcon=member.getIcon(MEMBER_ICON_POSITION);
      Icon overrideIcon=myTable.getOverrideIcon(memberInfo);
      RowIcon icon=new RowIcon(3);
      icon.setIcon(memberIcon,MEMBER_ICON_POSITION);
      myTable.setVisibilityIcon(memberInfo,icon);
      icon.setIcon(overrideIcon,OVERRIDE_ICON_POSITION);
      setIcon(icon);
      break;
    }
default :
{
    setIcon(null);
  }
}
final boolean cellEditable=myTable.myMemberInfoModel.isMemberEnabled(memberInfo);
setEnabled(cellEditable);
if (value == null) return;
final int problem=myTable.myMemberInfoModel.checkForProblems(memberInfo);
Color c=null;
if (problem == MemberInfoModel.ERROR) {
c=Color.red;
}
 else if (problem == MemberInfoModel.WARNING && !isSelected) {
c=Color.blue;
}
append((String)value,new SimpleTextAttributes(Font.PLAIN,c));
}
