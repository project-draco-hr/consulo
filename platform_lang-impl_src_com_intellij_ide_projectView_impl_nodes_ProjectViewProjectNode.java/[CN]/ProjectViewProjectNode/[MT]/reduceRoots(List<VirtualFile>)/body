{
  if (roots.isEmpty())   return Collections.emptyList();
  String userHome;
  try {
    userHome=FileUtil.toSystemIndependentName(new File(SystemProperties.getUserHome()).getCanonicalPath());
  }
 catch (  IOException e) {
    userHome=null;
  }
  Collections.sort(roots,new Comparator<VirtualFile>(){
    public int compare(    VirtualFile o1,    VirtualFile o2){
      return o1.getPath().compareTo(o2.getPath());
    }
  }
);
  Iterator<VirtualFile> it=roots.iterator();
  VirtualFile current=it.next();
  List<VirtualFile> reducedRoots=new ArrayList<VirtualFile>();
  while (it.hasNext()) {
    VirtualFile next=it.next();
    VirtualFile common=VfsUtil.getCommonAncestor(current,next);
    if (common == null || common.getParent() == null || Comparing.equal(common.getPath(),userHome)) {
      reducedRoots.add(current);
      current=next;
    }
 else {
      current=common;
    }
  }
  reducedRoots.add(current);
  return reducedRoots;
}
