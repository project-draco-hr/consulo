{
  @SuppressWarnings({"unchecked"}) final LookupItem<PsiClass> delegate=item.getDelegate();
  delegate.handleInsert(context);
  insertParentheses(context,delegate,delegate.getObject());
  final PsiElement position=SmartCompletionDecorator.getPosition(context,delegate);
  final PsiExpression enclosing=PsiTreeUtil.getContextOfType(position,PsiExpression.class,true);
  if (item.getUserData(LookupItem.BRACKETS_COUNT_ATTR) == null) {
    final PsiAnonymousClass anonymousClass=PsiTreeUtil.getParentOfType(position,PsiAnonymousClass.class);
    if (anonymousClass == null || anonymousClass.getParent() != enclosing) {
      final PsiClass psiClass=(PsiClass)item.getObject();
      if (psiClass.hasModifierProperty(PsiModifier.ABSTRACT) || psiClass.isInterface()) {
        FeatureUsageTracker.getInstance().triggerFeatureUsed("editing.completion.smarttype.anonymous");
        final Editor editor=context.getEditor();
        editor.getDocument().insertString(editor.getCaretModel().getOffset()," {}");
        editor.getCaretModel().moveToOffset(editor.getCaretModel().getOffset() + 2);
        context.setLaterRunnable(generateAnonymousBody(editor,context.getFile()));
      }
 else {
        FeatureUsageTracker.getInstance().triggerFeatureUsed("editing.completion.smarttype.afternew");
      }
    }
  }
}
