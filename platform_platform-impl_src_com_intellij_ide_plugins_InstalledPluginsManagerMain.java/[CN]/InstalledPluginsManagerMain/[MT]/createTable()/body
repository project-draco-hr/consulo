{
  myPluginsModel=new InstalledPluginsTableModel();
  myPluginTable=new PluginTable(myPluginsModel);
  myPluginTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  JScrollPane installedScrollPane=ScrollPaneFactory.createScrollPane(myPluginTable,ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  myPluginTable.registerKeyboardAction(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final int column=InstalledPluginsTableModel.getCheckboxColumn();
      final int[] selectedRows=myPluginTable.getSelectedRows();
      boolean currentlyMarked=true;
      for (      final int selectedRow : selectedRows) {
        if (selectedRow < 0 || !myPluginTable.isCellEditable(selectedRow,column)) {
          return;
        }
        final Boolean enabled=(Boolean)myPluginTable.getValueAt(selectedRow,column);
        currentlyMarked&=enabled == null || enabled.booleanValue();
      }
      final IdeaPluginDescriptor[] selected=new IdeaPluginDescriptor[selectedRows.length];
      for (int i=0, selectedLength=selected.length; i < selectedLength; i++) {
        selected[i]=myPluginsModel.getObjectAt(myPluginTable.convertRowIndexToModel(selectedRows[i]));
      }
      ((InstalledPluginsTableModel)myPluginsModel).enableRows(selected,currentlyMarked ? Boolean.FALSE : Boolean.TRUE);
      myPluginTable.repaint();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_SPACE,0),JComponent.WHEN_FOCUSED);
  myPluginTable.setExpandableItemsEnabled(false);
  return installedScrollPane;
}
