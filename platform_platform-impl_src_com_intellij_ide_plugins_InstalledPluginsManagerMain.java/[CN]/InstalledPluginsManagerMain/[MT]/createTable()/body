{
  pluginsModel=new InstalledPluginsTableModel();
  pluginTable=new PluginTable(pluginsModel);
  pluginTable.setTableHeader(null);
  JScrollPane installedScrollPane=ScrollPaneFactory.createScrollPane(pluginTable,ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  pluginTable.registerKeyboardAction(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final int column=InstalledPluginsTableModel.getCheckboxColumn();
      final int[] selectedRows=pluginTable.getSelectedRows();
      boolean currentlyMarked=true;
      for (      final int selectedRow : selectedRows) {
        if (selectedRow < 0 || !pluginTable.isCellEditable(selectedRow,column)) {
          return;
        }
        final Boolean enabled=(Boolean)pluginTable.getValueAt(selectedRow,column);
        currentlyMarked&=enabled == null || enabled.booleanValue();
      }
      final IdeaPluginDescriptor[] selected=new IdeaPluginDescriptor[selectedRows.length];
      for (int i=0, selectedLength=selected.length; i < selectedLength; i++) {
        selected[i]=pluginsModel.getObjectAt(pluginTable.convertRowIndexToModel(selectedRows[i]));
      }
      ((InstalledPluginsTableModel)pluginsModel).enableRows(selected,currentlyMarked ? Boolean.FALSE : Boolean.TRUE);
      pluginTable.repaint();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_SPACE,0),JComponent.WHEN_FOCUSED);
  pluginTable.setExpandableItemsEnabled(false);
  return installedScrollPane;
}
