{
  super(uiSettings);
  init();
  myActionsPanel.setLayout(new FlowLayout(FlowLayout.LEFT));
  final JButton button=new JButton("Browse repositories...");
  button.setMnemonic('b');
  button.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      new SingleConfigurableEditor(myActionsPanel,createAvailableConfigurable()){
        @Override protected Action[] createActions(){
          return new Action[]{getOKAction(),getCancelAction(),getHelpAction()};
        }
      }
.show();
    }
  }
);
  myActionsPanel.add(button);
  final JButton installPluginFromFileSystem=new JButton("Install plugin from disk...");
  installPluginFromFileSystem.setMnemonic('d');
  installPluginFromFileSystem.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      final FileChooserDescriptor descriptor=new FileChooserDescriptor(true,false,true,true,false,false){
        @Override public boolean isFileSelectable(        VirtualFile file){
          final String extension=file.getExtension();
          return Comparing.strEqual(extension,"jar") || Comparing.strEqual(extension,"zip");
        }
      }
;
      descriptor.setTitle("Choose Plugin File");
      final VirtualFile virtualFile=FileChooser.chooseFile(myActionsPanel,descriptor);
      if (virtualFile != null) {
        final File file=VfsUtil.virtualToIoFile(virtualFile);
        try {
          PluginDownloader.install(file,file.getName());
          setRequireShutdown(true);
        }
 catch (        IOException ex) {
          Messages.showErrorDialog(ex.getMessage(),CommonBundle.getErrorTitle());
        }
      }
    }
  }
);
  myActionsPanel.add(installPluginFromFileSystem);
}
