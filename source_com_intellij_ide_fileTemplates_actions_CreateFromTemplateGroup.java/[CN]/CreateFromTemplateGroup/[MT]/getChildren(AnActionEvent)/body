{
  FileTemplateManager manager=FileTemplateManager.getInstance();
  FileTemplate[] templates;
  templates=manager.getAllTemplates();
  List<AnAction> result=new ArrayList<AnAction>();
  boolean showAll=templates.length <= FileTemplateManager.RECENT_TEMPLATES_SIZE;
  if (!showAll) {
    List recentNames=manager.getRecentNames();
    templates=new FileTemplate[recentNames.size()];
    int i=0;
    for (Iterator iterator=recentNames.iterator(); iterator.hasNext(); i++) {
      String name=(String)iterator.next();
      templates[i]=FileTemplateManager.getInstance().getTemplate(name);
    }
  }
  Arrays.sort(templates,new Comparator<FileTemplate>(){
    public int compare(    FileTemplate template1,    FileTemplate template2){
      if (template1.isJavaClassTemplate() && !template2.isJavaClassTemplate()) {
        return -1;
      }
      if (template2.isJavaClassTemplate() && !template1.isJavaClassTemplate()) {
        return 1;
      }
      int i=template1.getExtension().compareTo(template2.getExtension());
      if (i != 0) {
        return i;
      }
      return template1.getName().compareTo(template2.getName());
    }
  }
);
  for (  FileTemplate template : templates) {
    if (canCreateFromTemplate(e,template)) {
      CreateFromTemplateAction action=new CreateFromTemplateAction(template);
      result.add(action);
    }
  }
  if (!result.isEmpty()) {
    if (!showAll) {
      result.add(new CreateFromTemplatesAction("From File Template ..."));
    }
    result.add(Separator.getInstance());
    result.add(new EditFileTemplatesAction("Edit File Templates..."));
  }
  return result.toArray(new AnAction[result.size()]);
}
