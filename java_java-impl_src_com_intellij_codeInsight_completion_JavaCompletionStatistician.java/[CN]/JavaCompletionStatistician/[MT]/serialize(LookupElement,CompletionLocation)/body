{
  Object o=element.getObject();
  if (o instanceof PsiLocalVariable || o instanceof PsiParameter || o instanceof PsiThisExpression|| o instanceof PsiKeyword) {
    return StatisticsInfo.EMPTY;
  }
  LookupItem item=element.as(LookupItem.CLASS_CONDITION_KEY);
  if (item == null)   return null;
  PsiType qualifierType=JavaCompletionUtil.getQualifierType(item);
  if (o instanceof PsiMember) {
    String key2=JavaStatisticsManager.getMemberUseKey2((PsiMember)o);
    if (o instanceof PsiClass) {
      final ExpectedTypeInfo[] infos=JavaCompletionUtil.EXPECTED_TYPES.getValue(location);
      PsiType expectedType=infos != null && infos.length > 0 ? infos[0].getDefaultType() : null;
      return new StatisticsInfo(JavaStatisticsManager.getAfterNewKey(expectedType),key2);
    }
    PsiClass containingClass=((PsiMember)o).getContainingClass();
    if (containingClass != null) {
      String context=JavaStatisticsManager.getMemberUseKey2(containingClass);
      if (o instanceof PsiMethod) {
        String memberValue=JavaStatisticsManager.getMemberUseKey2(RecursionWeigher.findDeepestSuper((PsiMethod)o));
        List<StatisticsInfo> superMethodInfos=ContainerUtil.newArrayList(new StatisticsInfo(context,memberValue));
        for (        PsiClass superClass : InheritanceUtil.getSuperClasses(containingClass)) {
          superMethodInfos.add(new StatisticsInfo(JavaStatisticsManager.getMemberUseKey2(superClass),memberValue));
        }
        return StatisticsInfo.createComposite(superMethodInfos);
      }
      return new StatisticsInfo(context,key2);
    }
  }
  if (qualifierType != null)   return StatisticsInfo.EMPTY;
  return null;
}
