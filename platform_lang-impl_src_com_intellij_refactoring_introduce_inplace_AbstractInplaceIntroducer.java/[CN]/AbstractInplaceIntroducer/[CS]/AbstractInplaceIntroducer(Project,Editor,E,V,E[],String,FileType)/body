{
  super(null,editor,project,title,occurrences,expr);
  myLocalVariable=localVariable;
  if (localVariable != null) {
    final PsiElement nameIdentifier=localVariable.getNameIdentifier();
    if (nameIdentifier != null) {
      myLocalMarker=editor.getDocument().createRangeMarker(nameIdentifier.getTextRange());
    }
  }
 else {
    myLocalMarker=null;
  }
  myExprText=expr != null ? expr.getText() : null;
  myLocalName=localVariable != null ? localVariable.getName() : null;
  myPreview=(EditorEx)EditorFactory.getInstance().createEditor(EditorFactory.getInstance().createDocument(""),project,languageFileType,true);
  myPreview.setOneLineMode(true);
  final EditorSettings settings=myPreview.getSettings();
  settings.setAdditionalLinesCount(0);
  settings.setAdditionalColumnsCount(1);
  settings.setRightMarginShown(false);
  settings.setFoldingOutlineShown(false);
  settings.setLineNumbersShown(false);
  settings.setLineMarkerAreaShown(false);
  settings.setIndentGuidesShown(false);
  settings.setVirtualSpace(false);
  myPreview.setHorizontalScrollbarVisible(false);
  myPreview.setVerticalScrollbarVisible(false);
  myPreview.setCaretEnabled(false);
  settings.setLineCursorWidth(1);
  final Color bg=myPreview.getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR);
  myPreview.setBackgroundColor(bg);
  myPreview.setBorder(BorderFactory.createCompoundBorder(new DottedBorder(Color.gray),new LineBorder(bg,2)));
  myPreviewComponent=new JPanel(new BorderLayout());
  myPreviewComponent.add(myPreview.getComponent(),BorderLayout.CENTER);
  myPreviewComponent.setBorder(new EmptyBorder(2,2,6,2));
  myWholePanel=new JPanel(new GridBagLayout());
  myWholePanel.setBorder(null);
  final Keymap keymap=KeymapManager.getInstance().getActiveKeymap();
  final Shortcut[] shortcuts=keymap.getShortcuts(getActionName());
  if (shortcuts.length > 0) {
    setAdvertisementText("Press " + shortcuts[0] + " to show dialog");
  }
}
