{
  List<Integer> things=new ArrayList<Integer>(Collections.<Integer>nCopies(10000,null));
  int sum=0;
  for (int i=0; i < things.size(); i++) {
    int v=i < 9950 ? 1 : 1000;
    things.set(i,v);
    sum+=things.get(i);
  }
  assertEquals(59950,sum);
  long start=System.currentTimeMillis();
  boolean b=JobLauncher.getInstance().invokeConcurrentlyUnderProgress(things,new ProgressIndicatorBase(),false,false,new Processor<Integer>(){
    @Override public boolean process(    Integer o){
      busySleep(o);
      return true;
    }
  }
);
  assertTrue(b);
  long elapsed=System.currentTimeMillis() - start;
  int expected=2 * (9950 + 50 * 1000) / JobSchedulerImpl.CORES_COUNT;
  String message="Elapsed: " + elapsed + "; expected: "+ expected;
  System.out.println(message);
  assertTrue(message,elapsed < expected);
}
