{
  HgStatusCommand statusCommand=new HgStatusCommand(project);
  statusCommand.setIncludeCopySource(false);
  HgRevisionNumber revNumber1=null;
  if (rev1 != null) {
    revNumber1=rev1.getRevisionNumber();
    statusCommand.setBaseRevision(revNumber1);
    statusCommand.setTargetRevision(rev2 != null ? rev2.getRevisionNumber() : null);
  }
 else {
    assert(rev2 != null);
    statusCommand.setBaseRevision(rev2.getRevisionNumber());
  }
  Collection<HgChange> hgChanges=statusCommand.execute(repository.getRoot(),Collections.singleton(path));
  List<Change> changes=new ArrayList<Change>();
  for (  HgChange hgChange : hgChanges) {
    FileStatus status=convertHgDiffStatus(hgChange.getStatus());
    if (status != null) {
      changes.add(createChange(project,repository.getRoot(),hgChange.beforeFile().getRelativePath(),revNumber1,hgChange.afterFile().getRelativePath(),rev2 != null ? rev2.getRevisionNumber() : null,status));
    }
  }
  return changes;
}
