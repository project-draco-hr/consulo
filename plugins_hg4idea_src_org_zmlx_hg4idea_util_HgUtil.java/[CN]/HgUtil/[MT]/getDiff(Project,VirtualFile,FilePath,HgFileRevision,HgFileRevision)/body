{
  HgStatusCommand statusCommand;
  HgRevisionNumber revNumber1=null;
  if (rev1 != null) {
    revNumber1=rev1.getRevisionNumber();
    statusCommand=new HgStatusCommand.Builder(true).copySource(false).baseRevision(revNumber1).targetRevision(rev2 != null ? rev2.getRevisionNumber() : null).build(project);
  }
 else {
    LOG.assertTrue(rev2 != null,"revision1 and revision2 can't both be null. Path: " + path);
    statusCommand=new HgStatusCommand.Builder(true).copySource(false).baseRevision(rev2.getRevisionNumber()).build(project);
  }
  Collection<HgChange> hgChanges=statusCommand.execute(root,Collections.singleton(path));
  List<Change> changes=new ArrayList<Change>();
  for (  HgChange hgChange : hgChanges) {
    FileStatus status=convertHgDiffStatus(hgChange.getStatus());
    if (status != FileStatus.UNKNOWN && status != FileStatus.IGNORED) {
      changes.add(createChange(project,root,hgChange.beforeFile().getRelativePath(),revNumber1,hgChange.afterFile().getRelativePath(),rev2 != null ? rev2.getRevisionNumber() : null,status));
    }
  }
  return changes;
}
