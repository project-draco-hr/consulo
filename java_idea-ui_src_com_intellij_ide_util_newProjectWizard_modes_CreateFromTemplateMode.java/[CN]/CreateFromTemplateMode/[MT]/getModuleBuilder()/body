{
  final ProjectTemplate template=mySelectTemplateStep.getSelectedTemplate();
  if (template == null) {
    return null;
  }
  final ModuleBuilder builder=template.getModuleType().createModuleBuilder();
  return new ProjectBuilder(){
    @Nullable @Override public List<Module> commit(    Project project,    ModifiableModuleModel model,    ModulesProvider modulesProvider){
      List<Module> modules=builder.commit(project,model,modulesProvider);
      if (modules != null && !modules.isEmpty()) {
        template.generateProject(modules.get(0));
      }
      return modules;
    }
  }
;
}
