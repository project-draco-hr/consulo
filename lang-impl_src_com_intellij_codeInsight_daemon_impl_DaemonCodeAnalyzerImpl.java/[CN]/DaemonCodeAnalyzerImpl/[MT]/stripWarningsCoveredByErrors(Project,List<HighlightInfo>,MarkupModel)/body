{
  final SeverityRegistrar severityRegistrar=SeverityRegistrar.getInstance(project);
  Collection<HighlightInfo> errors=new ArrayList<HighlightInfo>();
  for (  HighlightInfo highlight : highlights) {
    if (severityRegistrar.compare(highlight.getSeverity(),HighlightSeverity.ERROR) >= 0) {
      errors.add(highlight);
    }
  }
  for (Iterator<HighlightInfo> it=highlights.iterator(); it.hasNext(); ) {
    HighlightInfo highlight=it.next();
    if (severityRegistrar.compare(HighlightSeverity.ERROR,highlight.getSeverity()) > 0 && highlight.getSeverity().myVal > 0) {
      for (      HighlightInfo errorInfo : errors) {
        if (isCoveredBy(highlight,errorInfo)) {
          it.remove();
          RangeHighlighter highlighter=highlight.highlighter;
          if (highlighter != null && highlighter.isValid()) {
            markup.removeHighlighter(highlighter);
          }
          break;
        }
      }
    }
  }
}
