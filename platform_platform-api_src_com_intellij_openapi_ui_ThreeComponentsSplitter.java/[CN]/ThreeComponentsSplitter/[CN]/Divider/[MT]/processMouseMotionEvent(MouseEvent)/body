{
  super.processMouseMotionEvent(e);
  if (!isShowing())   return;
  if (MouseEvent.MOUSE_DRAGGED == e.getID() && myWasPressedOnMe) {
    myDragging=true;
    setCursor(getResizeCursor());
    if (myGlassPane != null) {
      myGlassPane.setCursor(getResizeCursor(),myListener);
    }
    myPoint=SwingUtilities.convertPoint(this,e.getPoint(),ThreeComponentsSplitter.this);
    final int size=getOrientation() ? ThreeComponentsSplitter.this.getHeight() : ThreeComponentsSplitter.this.getWidth();
    if (getOrientation()) {
      if (size > 0 || myDividerZone > 0) {
        if (myIsFirst) {
          setFirstSize(Math.min(size - myLastSize - getMinSize(myInnerComponent)- getDividerWidth() * visibleDividersCount(),Math.max(getMinSize(myFirstComponent),myPoint.y)));
        }
 else {
          setLastSize(Math.min(size - myFirstSize - getMinSize(myInnerComponent)- getDividerWidth() * visibleDividersCount(),Math.max(getMinSize(myLastComponent),size - myPoint.y - getDividerWidth())));
        }
      }
    }
 else {
      if (size > 0 || myDividerZone > 0) {
        if (myIsFirst) {
          setFirstSize(Math.min(size - myLastSize - getMinSize(myInnerComponent)- getDividerWidth() * visibleDividersCount(),Math.max(getMinSize(myFirstComponent),myPoint.x)));
        }
 else {
          setLastSize(Math.min(size - myFirstSize - getMinSize(myInnerComponent)- getDividerWidth() * visibleDividersCount(),Math.max(getMinSize(myLastComponent),size - myPoint.x - getDividerWidth())));
        }
      }
    }
    ThreeComponentsSplitter.this.doLayout();
  }
 else   if (MouseEvent.MOUSE_MOVED == e.getID()) {
    if (myGlassPane != null) {
      if (isInside(e.getPoint())) {
        myGlassPane.setCursor(getResizeCursor(),myListener);
        e.consume();
      }
 else {
        myGlassPane.setCursor(null,myListener);
      }
    }
  }
  if (myWasPressedOnMe) {
    e.consume();
  }
}
