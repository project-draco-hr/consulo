{
  final List<String> data=TestUtils.readInput(getTestDataPath() + getTestName(true) + ".test");
  String input=data.get(0);
  while (true) {
    final Matcher matcher=PATTERN.matcher(input);
    if (!matcher.find())     break;
    final String[] strings=matcher.group(1).split("=");
    String name=strings[0];
    final CodeStyleSettings settings=CodeStyleSettingsManager.getSettings(getProject());
    final Field field=CodeStyleSettings.class.getDeclaredField(name);
    final String value=strings[1];
    if ("true".equals(value) || "false".equals(value)) {
      field.set(settings,Boolean.parseBoolean(value));
    }
 else {
      try {
        field.set(settings,Integer.parseInt(value));
      }
 catch (      NumberFormatException e) {
        field.set(settings,CodeStyleSettings.class.getDeclaredField(value).get(value));
      }
    }
    input=input.substring(matcher.end());
  }
  checkFormatting(input,data.get(1));
}
