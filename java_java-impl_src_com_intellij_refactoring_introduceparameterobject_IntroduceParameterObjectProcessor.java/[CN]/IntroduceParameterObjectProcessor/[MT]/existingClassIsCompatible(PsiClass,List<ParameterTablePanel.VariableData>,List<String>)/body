{
  if (params.size() == 1) {
    final PsiType paramType=params.get(0).type;
    if (TypeConversionUtil.isPrimitiveWrapper(aClass.getQualifiedName())) {
      getterNames.add(paramType.getCanonicalText() + "Value");
      return true;
    }
  }
  final PsiMethod[] constructors=aClass.getConstructors();
  PsiMethod compatibleConstructor=null;
  for (  PsiMethod constructor : constructors) {
    if (constructorIsCompatible(constructor,params)) {
      compatibleConstructor=constructor;
      break;
    }
  }
  if (compatibleConstructor == null) {
    return false;
  }
  final PsiParameterList parameterList=compatibleConstructor.getParameterList();
  final PsiParameter[] constructorParams=parameterList.getParameters();
  for (  PsiParameter param : constructorParams) {
    final PsiField field=findFieldAssigned(param,compatibleConstructor);
    if (field == null) {
      return false;
    }
    final PsiMethod getter=PropertyUtils.findGetterForField(field);
    if (getter == null) {
      return false;
    }
    getterNames.add(getter.getName());
  }
  return true;
}
