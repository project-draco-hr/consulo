{
  MultiMap<PsiElement,String> conflicts=new MultiMap<PsiElement,String>();
  if (myUseExistingClass) {
    if (existingClass == null) {
      conflicts.putValue(null,RefactorJBundle.message("cannot.perform.the.refactoring") + "Could not find the selected class");
    }
    final String incompatibilityMessage="Selected class is not compatible with chosen parameters";
    if (!myExistingClassCompatible) {
      conflicts.putValue(existingClass,RefactorJBundle.message("cannot.perform.the.refactoring") + incompatibilityMessage);
    }
    if (!paramsNeedingSetters.isEmpty()) {
      conflicts.putValue(existingClass,RefactorJBundle.message("cannot.perform.the.refactoring") + incompatibilityMessage);
    }
  }
 else   if (existingClass != null) {
    conflicts.putValue(existingClass,RefactorJBundle.message("cannot.perform.the.refactoring") + RefactorJBundle.message("there.already.exists.a.class.with.the.chosen.name"));
  }
  return showConflicts(conflicts);
}
