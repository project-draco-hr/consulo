{
  final StringBuffer classpathBuffer=new StringBuffer();
  final Set<Module> modules=getNodes();
  final OrderedSet<VirtualFile> cpFiles=new OrderedSet<VirtualFile>((TObjectHashingStrategy<VirtualFile>)TObjectHashingStrategy.CANONICAL);
  for (Iterator<Module> it=modules.iterator(); it.hasNext(); ) {
    final Module module=it.next();
    final OrderEntry[] orderEntries=CompilerPathsEx.getOrderEntries(module);
    for (int i=0; i < orderEntries.length; i++) {
      cpFiles.addAll(Arrays.asList(orderEntries[i].getFiles(OrderRootType.COMPILATION_CLASSES)));
    }
  }
  for (Iterator<VirtualFile> it=cpFiles.iterator(); it.hasNext(); ) {
    final VirtualFile file=it.next();
    final String path=PathUtil.getLocalPath(file);
    if (path == null) {
      continue;
    }
    if (classpathBuffer.length() > 0) {
      classpathBuffer.append(File.pathSeparatorChar);
    }
    classpathBuffer.append(path);
  }
  return classpathBuffer.toString();
}
