{
  final JPanel panel=new JPanel(new GridBagLayout());
  final GridBagConstraints gbConstraints=new GridBagConstraints(0,0,1,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0);
  final JPanel mainPanel=new JPanel();
  mainPanel.setLayout(new BorderLayout());
  JPanel groupPanel=new JPanel(new GridLayout(1,2));
  final JComponent initializerPlacePanel=myInitializerPlaceChooser.createInitializerPlacePanel();
  myInitializerPlaceChooser.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      myIntroduceFieldPanel.updateTypeSelector(myTypeSelectorManager);
      myIntroduceFieldPanel.updateCbFinal(myInitializerPlaceChooser.allowFinal(myWillBeDeclaredStatic,myIsCurrentMethodConstructor));
    }
  }
);
  groupPanel.add(initializerPlacePanel);
  myVisibilityPanel=new JavaVisibilityPanel(false,false);
  groupPanel.add(myVisibilityPanel);
  mainPanel.add(groupPanel,BorderLayout.CENTER);
  final ItemListener itemListener=new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      if (myIntroduceFieldPanel.hasOccurrences()) {
        myInitializerPlaceChooser.updateInitializerPlace(myIntroduceFieldPanel.isReplaceAllOccurrences());
      }
      myIntroduceFieldPanel.updateTypeSelector(myTypeSelectorManager);
      myNameField.requestFocusInWindow();
    }
  }
;
  panel.add(mainPanel,gbConstraints);
  myIntroduceFieldPanel.appendFinalCb(panel,gbConstraints,itemListener);
  myIntroduceFieldPanel.appendOccurrencesCb(panel,gbConstraints,itemListener);
  myIntroduceFieldPanel.appendDeleteVariableDeclarationCb(panel,gbConstraints);
  myIntroduceFieldPanel.updateTypeSelector(myTypeSelectorManager);
  return panel;
}
