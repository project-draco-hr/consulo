{
  if (initializerExpression != null) {
    setEnabledInitializationPlaces(initializerExpression,initializerExpression);
    if (!myAllowInitInMethod) {
      myRbInCurrentMethod.setEnabled(false);
    }
  }
 else {
    myRbInConstructor.setEnabled(false);
    myRbInCurrentMethod.setEnabled(false);
    myRbInFieldDeclaration.setEnabled(false);
    if (myRbInSetUp != null)     myRbInSetUp.setEnabled(false);
  }
  final PsiMethod setUpMethod=TestUtil.findSetUpMethod(myParentClass);
  if (myInitializerExpression != null && PsiTreeUtil.isAncestor(setUpMethod,myInitializerExpression,false) && myRbInSetUp.isEnabled() || ourLastInitializerPlace == IN_SETUP_METHOD && TestUtil.isTestClass(myParentClass) && myRbInSetUp.isEnabled()) {
    myRbInSetUp.setSelected(true);
  }
 else   if (ourLastInitializerPlace == IN_CONSTRUCTOR) {
    if (myRbInConstructor.isEnabled()) {
      myRbInConstructor.setSelected(true);
    }
 else {
      selectInCurrentMethod();
    }
  }
 else   if (ourLastInitializerPlace == IN_FIELD_DECLARATION) {
    if (myRbInFieldDeclaration.isEnabled()) {
      myRbInFieldDeclaration.setSelected(true);
    }
 else {
      selectInCurrentMethod();
    }
  }
 else {
    selectInCurrentMethod();
  }
  String ourLastVisibility=JavaRefactoringSettings.getInstance().INTRODUCE_FIELD_VISIBILITY;
  if (PsiModifier.PUBLIC.equals(ourLastVisibility)) {
    myRbPublic.setSelected(true);
  }
 else   if (PsiModifier.PROTECTED.equals(ourLastVisibility)) {
    myRbProtected.setSelected(true);
  }
 else   if (PsiModifier.PACKAGE_LOCAL.equals(ourLastVisibility)) {
    myRbPackageLocal.setSelected(true);
  }
 else {
    myRbPrivate.setSelected(true);
  }
  myCbFinal.setSelected(myCbFinal.isEnabled() && ourLastCbFinalState);
}
