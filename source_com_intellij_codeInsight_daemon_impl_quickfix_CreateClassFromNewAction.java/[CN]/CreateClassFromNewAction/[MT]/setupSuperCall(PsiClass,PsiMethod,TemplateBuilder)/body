{
  PsiElementFactory elementFactory=targetClass.getManager().getElementFactory();
  PsiClass superClass=targetClass.getSuperClass();
  if (superClass != null && !"java.lang.Object".equals(superClass.getQualifiedName()) && !"java.lang.Enum".equals(superClass.getQualifiedName())) {
    final PsiMethod[] constructors=superClass.getConstructors();
    boolean hasDefaultConstructor=false;
    for (int i=0; i < constructors.length; i++) {
      PsiMethod superConstructor=constructors[i];
      if (superConstructor.getParameterList().getParameters().length == 0) {
        hasDefaultConstructor=true;
        break;
      }
    }
    if (!hasDefaultConstructor) {
      PsiExpressionStatement statement=(PsiExpressionStatement)elementFactory.createStatementFromText("super();",constructor);
      statement=(PsiExpressionStatement)constructor.getBody().add(statement);
      PsiMethodCallExpression call=(PsiMethodCallExpression)statement.getExpression();
      final PsiExpressionList argumentList=call.getArgumentList();
      templateBuilder.setEndVariableAfter(argumentList.getFirstChild());
    }
  }
  templateBuilder.setEndVariableAfter(constructor.getBody().getLBrace());
}
