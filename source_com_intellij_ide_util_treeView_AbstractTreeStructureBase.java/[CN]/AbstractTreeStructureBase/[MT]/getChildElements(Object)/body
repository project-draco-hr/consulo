{
  LOG.assertTrue(element instanceof AbstractTreeNode,element.getClass().getName());
  AbstractTreeNode<?> treeNode=(AbstractTreeNode)element;
  Collection<? extends AbstractTreeNode> elements=treeNode.getChildren();
  List<TreeStructureProvider> providers=getProviders();
  Collection<AbstractTreeNode> modified=new ArrayList<AbstractTreeNode>(elements);
  if (providers != null) {
    for (    TreeStructureProvider provider : providers) {
      modified=provider.modify(treeNode,modified,ViewSettings.DEFAULT);
    }
  }
  for (  AbstractTreeNode node : modified) {
    node.setParent(treeNode);
  }
  final Iterator<AbstractTreeNode> verifier=modified.iterator();
  while (verifier.hasNext()) {
    AbstractTreeNode child=verifier.next();
    if (child instanceof ProjectViewNode) {
      final ProjectViewNode projectViewNode=(ProjectViewNode)child;
      projectViewNode.update();
      if (projectViewNode.getValue() == null) {
        verifier.remove();
      }
    }
  }
  return modified.toArray(new Object[modified.size()]);
}
