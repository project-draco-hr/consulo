{
  LOG.assertTrue(element instanceof AbstractTreeNode,element.getClass().getName());
  AbstractTreeNode treeNode=((AbstractTreeNode)element);
  Collection<AbstractTreeNode> elements=treeNode.getChildren();
  List providers=getProviders();
  ArrayList<AbstractTreeNode> modified=elements != null ? new ArrayList<AbstractTreeNode>(elements) : new ArrayList<AbstractTreeNode>();
  for (Iterator iterator=providers.iterator(); iterator.hasNext(); ) {
    TreeStructureProvider provider=(TreeStructureProvider)iterator.next();
    modified=new ArrayList<AbstractTreeNode>(provider.modify(treeNode,modified,ViewSettings.DEFAULT));
  }
  elements=modified;
  for (Iterator<AbstractTreeNode> iterator=elements.iterator(); iterator.hasNext(); ) {
    AbstractTreeNode node=iterator.next();
    node.setParent(treeNode);
  }
  return (Object[])modified.toArray(new Object[modified.size()]);
}
