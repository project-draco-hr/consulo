{
  int endDocumentOffset=myEditor.getDocument().getTextLength();
  if (softWrap.getStart() >= endDocumentOffset) {
    return advanceToOffset(endDocumentOffset).build();
  }
  Context newContext=advanceToOffset(softWrap.getStart());
  if (strategy.exceeds(newContext)) {
    return strategy.build(context);
  }
  Document document=myEditor.getDocument();
  int lastUsedLogicalLine=document.getLineNumber(context.offset);
  context=newContext;
  Context afterSoftWrap=context.clone();
  int lineFeeds=StringUtil.countNewLines(softWrap.getText());
  afterSoftWrap.visualLine+=lineFeeds;
  afterSoftWrap.visualColumn=myEditor.getSoftWrapModel().getSoftWrapIndentWidthInColumns(softWrap);
  afterSoftWrap.x=myEditor.getSoftWrapModel().getSoftWrapIndentWidthInPixels(softWrap);
  if (lastUsedLogicalLine == context.logicalLine) {
    afterSoftWrap.softWrapLinesCurrent+=lineFeeds;
  }
 else {
    afterSoftWrap.softWrapLinesBefore+=context.softWrapLinesCurrent;
    afterSoftWrap.softWrapLinesCurrent=lineFeeds;
  }
  afterSoftWrap.softWrapColumnDiff=afterSoftWrap.visualColumn - afterSoftWrap.logicalColumn;
  afterSoftWrap.foldingColumnDiff=0;
  if (!strategy.exceeds(afterSoftWrap)) {
    context=afterSoftWrap;
    return null;
  }
  return strategy.build(context,softWrap);
}
