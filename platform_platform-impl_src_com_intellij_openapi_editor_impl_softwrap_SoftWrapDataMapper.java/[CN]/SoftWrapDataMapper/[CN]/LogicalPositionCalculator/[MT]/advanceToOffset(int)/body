{
  Context result=context.clone();
  if (result.offset == newOffset) {
    return result;
  }
  Document document=myEditor.getDocument();
  CharSequence text=document.getCharsSequence();
  int lastUsedLogicalLine=document.getLineNumber(context.offset);
  int currentLogicalLine=document.getLineNumber(newOffset);
  if (currentLogicalLine == lastUsedLogicalLine) {
    int width=myTextRepresentationHelper.textWidth(text,result.offset,newOffset,result.x);
    int columnDiff=myTextRepresentationHelper.toVisualColumnSymbolsNumber(width);
    result.x+=width;
    result.logicalColumn+=columnDiff;
    result.visualColumn+=columnDiff;
  }
 else {
    int lineDiff=currentLogicalLine - lastUsedLogicalLine;
    result.logicalLine+=lineDiff;
    result.visualLine+=lineDiff;
    int startLineOffset=document.getLineStartOffset(currentLogicalLine);
    result.x=myTextRepresentationHelper.textWidth(text,startLineOffset,newOffset,result.x);
    result.visualColumn=myTextRepresentationHelper.toVisualColumnSymbolsNumber(result.x);
    result.logicalColumn=result.visualColumn;
    result.onNewLine();
  }
  result.offset=newOffset;
  return result;
}
