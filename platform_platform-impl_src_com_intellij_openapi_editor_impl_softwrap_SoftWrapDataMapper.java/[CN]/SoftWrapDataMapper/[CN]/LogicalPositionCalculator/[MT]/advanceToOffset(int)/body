{
  Context result=context.clone();
  if (result.offset == newOffset) {
    return result;
  }
  Document document=myEditor.getDocument();
  CharSequence text=document.getCharsSequence();
  int lastUsedLogicalLine=document.getLineNumber(context.offset);
  int currentLogicalLine=document.getLineNumber(newOffset);
  if (currentLogicalLine == lastUsedLogicalLine) {
    int columnDiff=myTextRepresentationHelper.toVisualColumnSymbolsNumber(text,result.offset,newOffset,result.x);
    result.logicalColumn+=columnDiff;
    result.visualColumn+=columnDiff;
    if (strategy.recalculateX(result)) {
      result.x+=myTextRepresentationHelper.textWidth(text,result.offset,newOffset,Font.PLAIN,result.x);
    }
  }
 else {
    int lineDiff=currentLogicalLine - lastUsedLogicalLine;
    result.logicalLine+=lineDiff;
    result.visualLine+=lineDiff;
    int startLineOffset=document.getLineStartOffset(currentLogicalLine);
    result.visualColumn=myTextRepresentationHelper.toVisualColumnSymbolsNumber(text,startLineOffset,newOffset,0);
    result.logicalColumn=result.visualColumn;
    result.onNewLine();
    if (strategy.recalculateX(result)) {
      result.x=myTextRepresentationHelper.textWidth(text,startLineOffset,newOffset,Font.PLAIN,0);
    }
  }
  result.offset=newOffset;
  return result;
}
