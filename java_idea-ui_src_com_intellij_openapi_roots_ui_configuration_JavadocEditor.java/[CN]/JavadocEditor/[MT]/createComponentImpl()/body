{
  final JPanel mainPanel=new JPanel(new BorderLayout(5,10));
  final DefaultTableModel tableModel=createModel();
  myTable=new Table(tableModel);
  myTable.setIntercellSpacing(new Dimension(0,0));
  myTable.setDefaultRenderer(TableItem.class,new MyRenderer());
  myTable.setShowGrid(false);
  myTable.setDragEnabled(false);
  myTable.setShowHorizontalLines(false);
  myTable.setShowVerticalLines(false);
  myTable.getSelectionModel().setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
  myAddPathButton=new JButton(ProjectBundle.message("module.javadoc.add.path.button"));
  myAddPathButton.addActionListener(new AddPathActionListener());
  myAddUrlButton=new JButton(ProjectBundle.message("module.javadoc.add.url.button"));
  myAddUrlButton.addActionListener(new AddUrlActionListener());
  myRemoveButton=new JButton(ProjectBundle.message("module.javadoc.remove.button"));
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final List removedItems=TableUtil.removeSelectedItems(myTable);
      if (removedItems.size() > 0) {
        saveData();
      }
    }
  }
);
  final JPanel panel=new JPanel(new GridBagLayout());
  panel.add(myAddPathButton,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));
  panel.add(myAddUrlButton,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,new Insets(4,0,0,0),0,0));
  panel.add(myRemoveButton,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,1.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,new Insets(4,0,0,0),0,0));
  mainPanel.add(ScrollPaneFactory.createScrollPane(myTable),BorderLayout.CENTER);
  mainPanel.add(panel,BorderLayout.EAST);
  mainPanel.add(new JBLabel(ProjectBundle.message("project.roots.javadoc.tab.description"),UIUtil.ComponentStyle.SMALL,UIUtil.FontColor.BRIGHTER),BorderLayout.NORTH);
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      if (e.getValueIsAdjusting()) {
        return;
      }
      final int selectedIndex=myTable.getSelectedRow();
      myRemoveButton.setEnabled(selectedIndex >= 0);
    }
  }
);
  if (tableModel.getRowCount() > 0) {
    TableUtil.selectRows(myTable,new int[]{0});
  }
 else {
    myRemoveButton.setEnabled(false);
  }
  return mainPanel;
}
