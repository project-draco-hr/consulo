{
  Set<Change> changes=new HashSet<Change>();
  for (  ChangeList list : getSelectedChangeLists()) {
    changes.addAll(list.getChanges());
  }
  final TreePath[] paths=getSelectionPaths();
  if (paths == null)   return new Change[0];
  for (  TreePath path : paths) {
    ChangesBrowserNode node=(ChangesBrowserNode)path.getLastPathComponent();
    changes.addAll(node.getAllChangesUnder());
  }
  if (changes.size() == 0) {
    final List<VirtualFile> selectedModifiedWithoutEditing=getSelectedModifiedWithoutEditing();
    if (selectedModifiedWithoutEditing != null && selectedModifiedWithoutEditing.size() > 0) {
      for (      VirtualFile file : selectedModifiedWithoutEditing) {
        AbstractVcs vcs=ProjectLevelVcsManager.getInstance(myProject).getVcsFor(file);
        ContentRevision beforeRevision=vcs.createUpToDateRevision(file);
        if (beforeRevision != null) {
          ContentRevision afterRevision=new CurrentContentRevision(new FilePathImpl(file));
          changes.add(new Change(beforeRevision,afterRevision));
        }
      }
    }
  }
  return changes.toArray(new Change[changes.size()]);
}
