{
  super(new ListTreeTableModelOnColumns(new DefaultMutableTreeNode("root"),new ColumnInfo[]{CHANGELIST_OR_FILE,CHANGE_PATH,CHANGE_TYPE}));
  myProject=project;
  final Tree tree=getTree();
  myRoot=(DefaultMutableTreeNode)tree.getModel().getRoot();
  tree.setShowsRootHandles(false);
  tree.setRootVisible(false);
  tree.setCellRenderer(new ColoredTreeCellRenderer(){
    public void customizeCellRenderer(    JTree tree,    Object value,    boolean selected,    boolean expanded,    boolean leaf,    int row,    boolean hasFocus){
      DefaultMutableTreeNode node=(DefaultMutableTreeNode)value;
      Object object=node.getUserObject();
      if (object instanceof ChangeList) {
        append(((ChangeList)object).getDescription(),SimpleTextAttributes.SIMPLE_CELL_ATTRIBUTES);
      }
 else       if (object instanceof Change) {
        final Change change=(Change)object;
        final FilePath filePath=getFilePath(change);
        append(filePath.getName(),new SimpleTextAttributes(SimpleTextAttributes.STYLE_PLAIN,getColor(change),null));
        setIcon(filePath.getFileType().getIcon());
      }
    }
    private Color getColor(    final Change change){
      final Change.Type type=change.getType();
switch (type) {
case DELETED:
        return FileStatus.COLOR_MISSING;
case MODIFICATION:
      return FileStatus.COLOR_MODIFIED;
case MOVED:
    return FileStatus.COLOR_MODIFIED;
case NEW:
  return FileStatus.COLOR_ADDED;
}
return Color.black;
}
}
);
}
