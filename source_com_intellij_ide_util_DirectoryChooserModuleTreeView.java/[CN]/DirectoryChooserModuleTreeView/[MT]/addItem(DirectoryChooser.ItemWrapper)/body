{
  myItems.add(itemWrapper);
  final PsiDirectory directory=itemWrapper.getDirectory();
  final Module module=myFileIndex.getModuleForFile(directory.getVirtualFile());
  DefaultMutableTreeNode node=myModuleNodes.get(module);
  if (node == null) {
    node=new DefaultMutableTreeNode(module,true);
    final Enumeration enumeration=myRootNode.children();
    final int index=Collections.binarySearch(Collections.list(enumeration),node,new Comparator<DefaultMutableTreeNode>(){
      public int compare(      DefaultMutableTreeNode node1,      DefaultMutableTreeNode node2){
        return ((Module)node1.getUserObject()).getName().compareToIgnoreCase(((Module)node2.getUserObject()).getName());
      }
    }
);
    final int insertionPoint=-(index + 1);
    LOG.assertTrue(0 <= insertionPoint && insertionPoint <= myRootNode.getChildCount());
    myRootNode.insert(node,insertionPoint);
    ((DefaultTreeModel)myTree.getModel()).nodeStructureChanged(myRootNode);
    myModuleNodes.put(module,node);
  }
  final DefaultMutableTreeNode itemNode=new DefaultMutableTreeNode(itemWrapper,false);
  myItemNodes.put(itemWrapper,itemNode);
  node.add(itemNode);
  ((DefaultTreeModel)myTree.getModel()).nodeStructureChanged(node);
}
