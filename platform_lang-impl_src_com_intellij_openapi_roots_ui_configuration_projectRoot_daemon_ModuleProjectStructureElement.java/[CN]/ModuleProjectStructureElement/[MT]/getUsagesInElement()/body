{
  final List<ProjectStructureElementUsage> usages=new ArrayList<ProjectStructureElementUsage>();
  final ModuleEditor moduleEditor=myContext.getModulesConfigurator().getModuleEditor(myModule);
  if (moduleEditor != null) {
    for (    OrderEntry entry : moduleEditor.getOrderEntries()) {
      if (entry instanceof ModuleOrderEntry) {
        ModuleOrderEntry moduleOrderEntry=(ModuleOrderEntry)entry;
        final Module module=moduleOrderEntry.getModule();
        if (module != null) {
          usages.add(new UsageInModuleClasspath(myContext,this,new ModuleProjectStructureElement(myContext,module),moduleOrderEntry.getScope()));
        }
      }
 else       if (entry instanceof LibraryOrderEntry) {
        LibraryOrderEntry libraryOrderEntry=(LibraryOrderEntry)entry;
        final Library library=libraryOrderEntry.getLibrary();
        if (library != null) {
          usages.add(new UsageInModuleClasspath(myContext,this,new LibraryProjectStructureElement(myContext,library),libraryOrderEntry.getScope()));
        }
      }
 else       if (entry instanceof SdkOrderEntry) {
        final Sdk jdk=((SdkOrderEntry)entry).getSdk();
        if (jdk != null) {
          usages.add(new UsageInModuleClasspath(myContext,this,new SdkProjectStructureElement(myContext,jdk),null));
        }
      }
    }
  }
  return usages;
}
