{
  final PsiElement[] inclusion=xincludeTag.getManager().getCachedValuesManager().getCachedValue(xincludeTag,KEY_RESOLVED_XINCLUDE,new Function<XmlTag,CachedValueProvider<PsiElement[]>>(){
    public CachedValueProvider<PsiElement[]> fun(    final XmlTag xmlTag){
      return new CachedValueProvider<PsiElement[]>(){
        public Result<PsiElement[]> compute(){
          PsiElement[] result=null;
          List<Object> deps=new ArrayList<Object>();
          deps.add(xincludeTag.getContainingFile());
          final XmlFile xmlFile=XmlIncludeHandler.resolveXIncludeFile(xincludeTag);
          if (xmlFile != null) {
            deps.add(xmlFile);
            final XmlDocument document=xmlFile.getDocument();
            if (document != null) {
              XmlTag rootTag=document.getRootTag();
              if (rootTag != null) {
                final XmlTag[] includeTag=extractXpointer(rootTag,xincludeTag);
                result=ContainerUtil.map(includeTag,new Function<XmlTag,PsiElement>(){
                  public PsiElement fun(                  final XmlTag xmlTag){
                    final PsiElement psiElement=xmlTag.copy();
                    psiElement.putUserData(XmlElement.ORIGINAL_ELEMENT,xincludeTag.getParentTag());
                    return psiElement;
                  }
                }
,new PsiElement[includeTag.length]);
              }
            }
          }
          return new Result<PsiElement[]>(result,deps.toArray());
        }
      }
;
    }
  }
,false);
  if (inclusion != null) {
    for (    PsiElement psiElement : inclusion) {
      if (!processElement(psiElement,deepFlag,wideFlag))       return false;
    }
  }
  return true;
}
