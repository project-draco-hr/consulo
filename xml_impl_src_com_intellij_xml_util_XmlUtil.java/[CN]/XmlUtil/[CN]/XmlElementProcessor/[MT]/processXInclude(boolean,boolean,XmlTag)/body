{
  final PsiElement[] inclusion;
  inclusion=xincludeTag.getManager().getCachedValuesManager().getCachedValue(xincludeTag,KEY_RESOLVED_XINCLUDE,new Function<XmlTag,CachedValueProvider<PsiElement[]>>(){
    public CachedValueProvider<PsiElement[]> fun(    final XmlTag xmlTag){
      return new CachedValueProvider<PsiElement[]>(){
        public Result<PsiElement[]> compute(){
          final Result<PsiElement[]> result=computeInclusion(xincludeTag);
          result.setLockValue(true);
          return result;
        }
      }
;
    }
  }
,false);
  if (inclusion != null) {
    for (    PsiElement psiElement : inclusion) {
      if (!processElement(psiElement,deepFlag,wideFlag))       return false;
    }
  }
  return true;
}
