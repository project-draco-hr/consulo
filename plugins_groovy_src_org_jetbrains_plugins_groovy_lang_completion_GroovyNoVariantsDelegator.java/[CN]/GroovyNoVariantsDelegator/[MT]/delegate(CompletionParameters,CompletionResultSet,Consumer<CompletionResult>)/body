{
  if (parameters.getCompletionType() == CompletionType.BASIC && parameters.getInvocationCount() <= 1 && JavaCompletionContributor.mayStartClassName(result,false) && GroovyCompletionContributor.isClassNamePossible(parameters.getPosition())) {
    final ClassByNameMerger merger=new ClassByNameMerger(parameters.getInvocationCount() == 0,result);
    GroovyCompletionContributor.addAllClasses(parameters,result,new Consumer<LookupElement>(){
      @Override public void consume(      LookupElement element){
        JavaPsiClassReferenceElement classElement=element.as(JavaPsiClassReferenceElement.CLASS_CONDITION_KEY);
        if (classElement != null) {
          classElement.setAutoCompletionPolicy(AutoCompletionPolicy.NEVER_AUTOCOMPLETE);
        }
        merger.consume(classElement);
      }
    }
,new InheritorsHolder(parameters.getPosition(),result));
    merger.finishedClassProcessing();
  }
}
