{
  if (psiClass instanceof PsiAnonymousClass) {
    PsiClassType baseClassType=((PsiAnonymousClass)psiClass).getBaseClassType();
    PsiClass baseClass=baseClassType.resolve();
    if (baseClass == null || !baseClass.isInterface()) {
      return new PsiClassType[]{baseClassType};
    }
 else {
      PsiClassType objectType=PsiType.getJavaLangObject(psiClass.getManager(),psiClass.getResolveScope());
      return new PsiClassType[]{objectType,baseClassType};
    }
  }
  PsiClassType[] extendsTypes=psiClass.getExtendsListTypes();
  PsiClassType[] implementsTypes=psiClass.getImplementsListTypes();
  boolean noExtends=extendsTypes.length == 0;
  int extendsListLength=extendsTypes.length + (noExtends ? 1 : 0);
  PsiClassType[] result=new PsiClassType[extendsListLength + implementsTypes.length];
  System.arraycopy(extendsTypes,0,result,0,extendsTypes.length);
  if (noExtends) {
    if (CommonClassNames.JAVA_LANG_OBJECT.equals(psiClass.getQualifiedName())) {
      return PsiClassType.EMPTY_ARRAY;
    }
    PsiManager manager=psiClass.getManager();
    PsiClassType objectType=PsiType.getJavaLangObject(manager,psiClass.getResolveScope());
    result[0]=objectType;
  }
  System.arraycopy(implementsTypes,0,result,extendsListLength,implementsTypes.length);
  return result;
}
