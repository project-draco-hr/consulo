{
  if (psiClass instanceof PsiAnonymousClass) {
    PsiClassType baseClassType=((PsiAnonymousClass)psiClass).getBaseClassType();
    PsiClass baseClass=baseClassType.resolve();
    if (baseClass == null || !baseClass.isInterface()) {
      return new PsiClassType[]{baseClassType};
    }
 else {
      PsiClassType objectType=psiClass.getManager().getElementFactory().createTypeByFQClassName("java.lang.Object",psiClass.getResolveScope());
      return new PsiClassType[]{objectType,baseClassType};
    }
  }
  List<PsiClassType> result=new ArrayList<PsiClassType>();
  PsiClassType[] extendsTypes=psiClass.getExtendsListTypes();
  result.addAll(Arrays.asList(extendsTypes));
  boolean noExtends=extendsTypes.length == 0;
  result.addAll(Arrays.asList(psiClass.getImplementsListTypes()));
  if (noExtends) {
    PsiManager manager=psiClass.getManager();
    if (!"java.lang.Object".equals(psiClass.getQualifiedName())) {
      PsiClassType objectType=manager.getElementFactory().createTypeByFQClassName("java.lang.Object",psiClass.getResolveScope());
      result.add(0,objectType);
    }
  }
  return result.toArray(new PsiClassType[result.size()]);
}
