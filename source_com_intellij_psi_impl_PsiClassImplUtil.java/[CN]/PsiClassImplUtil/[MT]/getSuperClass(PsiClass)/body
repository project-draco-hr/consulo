{
  PsiManager manager=psiClass.getManager();
  GlobalSearchScope resolveScope=psiClass.getResolveScope();
  if (psiClass.isInterface()) {
    return manager.findClass("java.lang.Object",resolveScope);
  }
  if (psiClass.isEnum()) {
    return manager.findClass("java.lang.Enum",resolveScope);
  }
  if (psiClass instanceof PsiAnonymousClass) {
    PsiClassType baseClassReference=((PsiAnonymousClass)psiClass).getBaseClassType();
    PsiClass baseClass=baseClassReference.resolve();
    if (baseClass == null || baseClass.isInterface())     return manager.findClass("java.lang.Object",resolveScope);
    return baseClass;
  }
  if ("java.lang.Object".equals(psiClass.getQualifiedName()))   return null;
  PsiReferenceList[] introducedExtendsList=new PsiReferenceList[1];
  PsiReferenceList[] introducedImplementsList=new PsiReferenceList[1];
  manager.getAspectManager().getIntroducedParents(psiClass,introducedExtendsList,introducedImplementsList);
  final PsiClassType[] referenceElements;
  if (introducedExtendsList[0] != null) {
    referenceElements=introducedExtendsList[0].getReferencedTypes();
  }
 else {
    referenceElements=psiClass.getExtendsListTypes();
  }
  if (referenceElements.length == 0)   return manager.findClass("java.lang.Object",resolveScope);
  PsiClass psiResoved=referenceElements[0].resolve();
  return psiResoved == null ? manager.findClass("java.lang.Object",resolveScope) : psiResoved;
}
