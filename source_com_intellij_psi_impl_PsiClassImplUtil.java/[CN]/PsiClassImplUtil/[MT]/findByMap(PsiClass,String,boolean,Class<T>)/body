{
  if (name == null)   return emptyArrayByType(type);
  if (!checkBases) {
    T[] members=null;
    if (type.isAssignableFrom(PsiMethod.class)) {
      members=(T[])aClass.getMethods();
    }
 else     if (type.isAssignableFrom(PsiClass.class)) {
      members=(T[])aClass.getInnerClasses();
    }
 else     if (type.isAssignableFrom(PsiField.class)) {
      members=(T[])aClass.getFields();
    }
    if (members == null)     return emptyArrayByType(type);
    List<T> list=new ArrayList<T>();
    for (    T member : members) {
      if (name.equals(member.getName()))       list.add(member);
    }
    return list.toArray(members);
  }
 else {
    final Map<String,List<Pair<T,PsiSubstitutor>>> allMethodsMap=getMap(aClass,type);
    final List<Pair<T,PsiSubstitutor>> list=allMethodsMap.get(name);
    if (list == null)     return emptyArrayByType(type);
    final List<T> ret=new ArrayList<T>();
    for (    final Pair<T,PsiSubstitutor> info : list) {
      ret.add(info.getFirst());
    }
    return ret.toArray(emptyArrayByType(type));
  }
}
