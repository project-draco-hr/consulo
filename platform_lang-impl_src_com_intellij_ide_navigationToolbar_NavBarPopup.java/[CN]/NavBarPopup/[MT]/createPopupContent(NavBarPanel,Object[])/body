{
  final JBListWithHintProvider list=new NavbarPopupList(panel,siblings);
  list.setDataProvider(new DataProvider(){
    @Override public Object getData(    @NonNls String dataId){
      return panel.getData(dataId);
    }
  }
);
  final List<Disposable> disposables=new ArrayList<Disposable>();
  list.putClientProperty(DISPOSED_OBJECTS,disposables);
  list.installCellRenderer(new NotNullFunction<Object,JComponent>(){
    @NotNull @Override public JComponent fun(    Object obj){
      final NavBarItem navBarItem=new NavBarItem(panel,obj,null);
      disposables.add(navBarItem);
      return navBarItem;
    }
  }
);
  list.setBorder(IdeBorderFactory.createEmptyBorder(5,5,5,5));
  installMoveAction(list,panel,-1,KeyEvent.VK_LEFT);
  installMoveAction(list,panel,1,KeyEvent.VK_RIGHT);
  installEnterAction(list,panel,KeyEvent.VK_ENTER);
  installEscapeAction(list,panel,KeyEvent.VK_ESCAPE);
  final JComponent component=ListWithFilter.wrap(list,new NavBarListWrapper(list),new Function<Object,String>(){
    @Override public String fun(    Object o){
      return panel.getPresentation().getPresentableText(o);
    }
  }
);
  component.putClientProperty(JBLIST_KEY,list);
  return component;
}
