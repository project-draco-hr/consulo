def read_unified_hunk(self, lr):
    m = unidesc.match(self.desc)
    if (not m):
        raise PatchError((_('bad hunk #%d') % self.number))
    (self.starta, foo, self.lena, self.startb, foo2, self.lenb) = m.groups()
    if (self.lena is None):
        self.lena = 1
    else:
        self.lena = int(self.lena)
    if (self.lenb is None):
        self.lenb = 1
    else:
        self.lenb = int(self.lenb)
    self.starta = int(self.starta)
    self.startb = int(self.startb)
    diffhelpers.addlines(lr, self.hunk, self.lena, self.lenb, self.a, self.b)
    while (len(self.hunk[(-1)]) == 0):
        del self.hunk[(-1)]
        del self.a[(-1)]
        del self.b[(-1)]
        self.lena -= 1
        self.lenb -= 1
