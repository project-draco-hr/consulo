def extract(self, lr):
    line = lr.readline()
    self.hunk.append(line)
    while (line and (not line.startswith('literal '))):
        line = lr.readline()
        self.hunk.append(line)
    if (not line):
        raise PatchError(_('could not extract binary patch'))
    size = int(line[8:].rstrip())
    dec = []
    line = lr.readline()
    self.hunk.append(line)
    while (len(line) > 1):
        l = line[0]
        if ((l <= 'Z') and (l >= 'A')):
            l = ((ord(l) - ord('A')) + 1)
        else:
            l = ((ord(l) - ord('a')) + 27)
        dec.append(base85.b85decode(line[1:(-1)])[:l])
        line = lr.readline()
        self.hunk.append(line)
    text = zlib.decompress(''.join(dec))
    if (len(text) != size):
        raise PatchError((_('binary patch is %d bytes, not %d') % len(text)), size)
    self.text = text
