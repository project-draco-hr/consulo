def trydiff(repo, revs, ctx1, ctx2, modified, added, removed, copy, getfilectx, opts, losedatafn):
    date1 = util.datestr(ctx1.date())
    man1 = ctx1.manifest()
    gone = set()
    gitmode = {'l': '120000', 'x': '100755', '': '100644', }
    copyto = dict([(v, k) for (k, v) in copy.items()])
    if opts.git:
        revs = None
    for f in sorted(((modified + added) + removed)):
        to = None
        tn = None
        dodiff = True
        header = []
        if (f in man1):
            to = getfilectx(f, ctx1).data()
        if (f not in removed):
            tn = getfilectx(f, ctx2).data()
        (a, b) = (f, f)
        if (opts.git or losedatafn):
            if (f in added):
                mode = gitmode[ctx2.flags(f)]
                if ((f in copy) or (f in copyto)):
                    if opts.git:
                        if (f in copy):
                            a = copy[f]
                        else:
                            a = copyto[f]
                        omode = gitmode[man1.flags(a)]
                        _addmodehdr(header, omode, mode)
                        if ((a in removed) and (a not in gone)):
                            op = 'rename'
                            gone.add(a)
                        else:
                            op = 'copy'
                        header.append(('%s from %s\n' % (op, a)))
                        header.append(('%s to %s\n' % (op, f)))
                        to = getfilectx(a, ctx1).data()
                    else:
                        losedatafn(f)
                elif opts.git:
                    header.append(('new file mode %s\n' % mode))
                elif ctx2.flags(f):
                    losedatafn(f)
                if util.binary(tn):
                    if opts.git:
                        dodiff = 'binary'
                    else:
                        losedatafn(f)
                if ((not opts.git) and (not tn)):
                    losedatafn(f)
            elif (f in removed):
                if opts.git:
                    if (((f in copy) and (copy[f] in added) and (copyto[copy[f]] == f)) or ((f in copyto) and (copyto[f] in added) and (copy[copyto[f]] == f))):
                        dodiff = False
                    else:
                        header.append(('deleted file mode %s\n' % gitmode[man1.flags(f)]))
                elif (not to):
                    losedatafn(f)
            else:
                oflag = man1.flags(f)
                nflag = ctx2.flags(f)
                binary = (util.binary(to) or util.binary(tn))
                if opts.git:
                    _addmodehdr(header, gitmode[oflag], gitmode[nflag])
                    if binary:
                        dodiff = 'binary'
                elif (binary or (nflag != oflag)):
                    losedatafn(f)
            if opts.git:
                header.insert(0, mdiff.diffline(revs, a, b, opts))
        if dodiff:
            if (dodiff == 'binary'):
                text = b85diff(to, tn)
            else:
                text = mdiff.unidiff(to, date1, tn, util.datestr(ctx2.date()), a, b, revs, opts=opts)
            if (header and (text or (len(header) > 1))):
                yield ''.join(header)
            if text:
                yield text
