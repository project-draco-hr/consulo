def scangitpatch(lr, firstline):
    "\n    Git patches can emit:\n    - rename a to b\n    - change b\n    - copy a to c\n    - change c\n\n    We cannot apply this sequence as-is, the renamed 'a' could not be\n    found for it would have been renamed already. And we cannot copy\n    from 'b' instead because 'b' would have been changed already. So\n    we scan the git patch for copy and rename commands so we can\n    perform the copies ahead of time.\n    "
    pos = 0
    try:
        pos = lr.fp.tell()
        fp = lr.fp
    except IOError:
        fp = cStringIO.StringIO(lr.fp.read())
    gitlr = linereader(fp, lr.textmode)
    gitlr.push(firstline)
    (dopatch, gitpatches) = readgitpatch(gitlr)
    fp.seek(pos)
    return (dopatch, gitpatches)
