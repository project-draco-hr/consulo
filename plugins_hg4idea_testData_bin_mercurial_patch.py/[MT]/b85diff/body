def b85diff(to, tn):
    'print base85-encoded binary diff'

    def gitindex(text):
        if (not text):
            return ('0' * 40)
        l = len(text)
        s = util.sha1(('blob %d\x00' % l))
        s.update(text)
        return s.hexdigest()

    def fmtline(line):
        l = len(line)
        if (l <= 26):
            l = chr(((ord('A') + l) - 1))
        else:
            l = chr((((l - 26) + ord('a')) - 1))
        return ('%c%s\n' % (l, base85.b85encode(line, True)))

    def chunk(text, csize=52):
        l = len(text)
        i = 0
        while (i < l):
            yield text[i:(i + csize)]
            i += csize
    tohash = gitindex(to)
    tnhash = gitindex(tn)
    if (tohash == tnhash):
        return ''
    ret = [('index %s..%s\nGIT binary patch\nliteral %s\n' % (tohash, tnhash, len(tn)))]
    for l in chunk(zlib.compress(tn)):
        ret.append(fmtline(l))
    ret.append('\n')
    return ''.join(ret)
