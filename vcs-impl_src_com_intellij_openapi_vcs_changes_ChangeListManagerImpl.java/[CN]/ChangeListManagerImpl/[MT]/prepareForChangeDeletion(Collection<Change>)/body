{
  final Map<String,LocalChangeList> lists=new HashMap<String,LocalChangeList>();
  final Map<String,List<Change>> map;
synchronized (myDataLock) {
    map=myWorker.listsForChanges(changes,lists);
  }
  return new Runnable(){
    public void run(){
      final ChangeListListener multicaster=myListeners.getMulticaster();
synchronized (myDataLock) {
        for (        Map.Entry<String,List<Change>> entry : map.entrySet()) {
          final List<Change> changes=entry.getValue();
          for (Iterator<Change> iterator=changes.iterator(); iterator.hasNext(); ) {
            final Change change=iterator.next();
            if (getChangeList(change) != null) {
              iterator.remove();
            }
          }
          multicaster.changesRemoved(changes,lists.get(entry.getKey()));
        }
      }
    }
  }
;
}
