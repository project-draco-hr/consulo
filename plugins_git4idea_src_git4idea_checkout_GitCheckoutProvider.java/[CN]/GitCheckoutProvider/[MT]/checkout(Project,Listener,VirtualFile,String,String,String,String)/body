{
  final GitLineHandler handler=clone(project,sourceRepositoryURL,new File(parentDirectory),directoryName,originName);
  final int code=GitHandlerUtil.doSynchronously(handler,GitBundle.message("cloning.repository",sourceRepositoryURL),"git clone");
  destinationParent.refresh(true,true,new Runnable(){
    public void run(){
      if (project.isOpen() && (!project.isDisposed()) && (!project.isDefault())) {
        final VcsDirtyScopeManager mgr=VcsDirtyScopeManager.getInstance(project);
        mgr.fileDirty(destinationParent);
      }
    }
  }
);
  if (code == 0) {
    if (listener != null) {
      listener.directoryCheckedOut(new File(parentDirectory,directoryName));
    }
  }
  if (listener != null) {
    listener.checkoutCompleted();
  }
}
