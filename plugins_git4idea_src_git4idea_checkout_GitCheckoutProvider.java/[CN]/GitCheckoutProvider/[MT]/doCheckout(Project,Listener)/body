{
  BasicAction.saveAll();
  GitCloneDialog dialog=new GitCloneDialog(project);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  final VirtualFile destinationParent=LocalFileSystem.getInstance().findFileByIoFile(new File(dialog.getParentDirectory()));
  if (destinationParent == null) {
    return;
  }
  final String sourceRepositoryURL=dialog.getSourceRepositoryURL();
  GitLineHandler handler=GitLineHandler.clone(project,sourceRepositoryURL,new File(dialog.getParentDirectory()),dialog.getDirectoryName(),dialog.getOriginName());
  int code=GitHandlerUtil.doSynchronously(handler,GitBundle.message("cloning.repository",sourceRepositoryURL),"git clone");
  if (code == 0) {
    if (listener != null) {
      listener.directoryCheckedOut(new File(dialog.getParentDirectory(),dialog.getDirectoryName()));
    }
  }
  if (listener != null) {
    listener.checkoutCompleted();
  }
  VcsDirtyScopeManager mgr=VcsDirtyScopeManager.getInstance(project);
  mgr.fileDirty(destinationParent);
  destinationParent.refresh(true,true);
}
