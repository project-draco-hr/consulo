{
  for (Iterator<AddedFileInfo> it=myAddedFiles.iterator(); it.hasNext(); ) {
    AddedFileInfo addedFileInfo=it.next();
    if (addedFileInfo.myProject == project) {
      it.remove();
      final File ioFile=new File(getIOFile(addedFileInfo.myDir),addedFileInfo.myName);
      VirtualFile addedFile=addedFileInfo.myDir.findChild(addedFileInfo.myName);
      if (addedFile == null) {
        addedFile=myLfs.refreshAndFindFileByIoFile(ioFile);
      }
      if (addedFile != null) {
        final SVNStatus fileStatus=getFileStatus(vcs,ioFile);
        if (fileStatus == null || fileStatus.getContentsStatus() != SVNStatusType.STATUS_IGNORED) {
          boolean isIgnored=ChangeListManager.getInstance(addedFileInfo.myProject).isIgnoredFile(addedFile);
          if (!isIgnored) {
            addedVFiles.add(addedFile);
            copyFromMap.put(addedFile,addedFileInfo.myCopyFrom);
            if (addedFileInfo.myRecursive) {
              recursiveItems.add(addedFile);
            }
          }
        }
      }
    }
  }
}
