{
  return new Runnable(){
    @Override public void run(){
      final SVNWCClient wcClient=vcs.createWCClient();
      final SVNCopyClient copyClient=vcs.createCopyClient();
      for (      VirtualFile file : filesToProcess) {
        final File ioFile=new File(file.getPath());
        try {
          final File copyFrom=copyFromMap.get(file);
          if (copyFrom != null) {
            try {
              new ActionWithTempFile(ioFile){
                protected void executeInternal() throws VcsException {
                  try {
                    final SVNCopySource[] copySource={new SVNCopySource(SVNRevision.WORKING,SVNRevision.WORKING,copyFrom)};
                    new RepeatSvnActionThroughBusy(){
                      @Override protected void executeImpl() throws SVNException {
                        copyClient.doCopy(copySource,ioFile,false,true,true);
                      }
                    }
.execute();
                  }
 catch (                  SVNException e) {
                    throw new VcsException(e);
                  }
                }
              }
.execute();
            }
 catch (            VcsException e) {
              exceptions.add(e);
            }
          }
 else {
            new RepeatSvnActionThroughBusy(){
              @Override protected void executeImpl() throws SVNException {
                wcClient.doAdd(ioFile,true,false,false,true);
              }
            }
.execute();
          }
          VcsDirtyScopeManager.getInstance(project).fileDirty(file);
        }
 catch (        SVNException e) {
          exceptions.add(new VcsException(e));
        }
      }
    }
  }
;
}
