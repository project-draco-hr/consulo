{
  SvnVcs vcs=SvnVcs.getInstance(project);
  List<VirtualFile> addedVFiles=new ArrayList<VirtualFile>();
  Map<VirtualFile,File> copyFromMap=new HashMap<VirtualFile,File>();
  final Set<VirtualFile> recursiveItems=new HashSet<VirtualFile>();
  fillAddedFiles(project,vcs,addedVFiles,copyFromMap,recursiveItems);
  if (addedVFiles.isEmpty())   return;
  final VcsShowConfirmationOption.Value value=vcs.getAddConfirmation().getValue();
  if (value != VcsShowConfirmationOption.Value.DO_NOTHING_SILENTLY) {
    final AbstractVcsHelper vcsHelper=AbstractVcsHelper.getInstance(project);
    final Collection<VirtualFile> filesToProcess=promptAboutAddition(vcs,addedVFiles,value,vcsHelper);
    if (filesToProcess != null) {
      final List<VcsException> exceptions=new ArrayList<VcsException>();
      runInBackground(project,"Adding files to Subversion",createAdditionRunnable(project,vcs,copyFromMap,filesToProcess,exceptions));
      if (!exceptions.isEmpty()) {
        vcsHelper.showErrors(exceptions,SvnBundle.message("add.files.errors.title"));
      }
    }
  }
}
