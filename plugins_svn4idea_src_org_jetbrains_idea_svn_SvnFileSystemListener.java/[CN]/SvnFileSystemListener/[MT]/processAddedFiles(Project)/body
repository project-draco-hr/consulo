{
  SvnVcs vcs=SvnVcs.getInstance(project);
  List<VirtualFile> addedVFiles=new ArrayList<VirtualFile>();
  for (Iterator<AddedFileInfo> it=myAddedFiles.iterator(); it.hasNext(); ) {
    AddedFileInfo addedFileInfo=it.next();
    if (addedFileInfo.myProject == project) {
      it.remove();
      VirtualFile addedFile=addedFileInfo.myDir.findChild(addedFileInfo.myName);
      if (addedFile != null) {
        final SVNStatus fileStatus=getFileStatus(vcs,new File(getIOFile(addedFileInfo.myDir),addedFileInfo.myName));
        if (fileStatus == null || fileStatus.getContentsStatus() != SVNStatusType.STATUS_IGNORED) {
          boolean isIgnored=ChangeListManager.getInstance(addedFileInfo.myProject).isIgnoredFile(addedFile);
          if (!isIgnored) {
            addedVFiles.add(addedFile);
          }
        }
      }
    }
  }
  final VcsShowConfirmationOption.Value value=vcs.getAddConfirmation().getValue();
  if (value != VcsShowConfirmationOption.Value.DO_NOTHING_SILENTLY) {
    final AbstractVcsHelper vcsHelper=AbstractVcsHelper.getInstance(project);
    Collection<VirtualFile> filesToProcess;
    if (value == VcsShowConfirmationOption.Value.DO_ACTION_SILENTLY) {
      filesToProcess=addedVFiles;
    }
 else {
      filesToProcess=vcsHelper.selectFilesToProcess(addedVFiles,SvnBundle.message("confirmation.title.add.multiple.files"),null,SvnBundle.message("confirmation.title.add.file"),SvnBundle.message("confirmation.text.add.file"),vcs.getAddConfirmation());
    }
    if (filesToProcess != null) {
      List<VcsException> exceptions=new ArrayList<VcsException>();
      SVNWCClient wcClient=vcs.createWCClient();
      for (      VirtualFile file : filesToProcess) {
        File ioFile=new File(file.getPath());
        try {
          wcClient.doAdd(ioFile,false,false,false,false);
          VcsDirtyScopeManager.getInstance(project).fileDirty(file);
        }
 catch (        SVNException e) {
          exceptions.add(new VcsException(e));
        }
      }
      if (!exceptions.isEmpty()) {
        vcsHelper.showErrors(exceptions,"Errors Adding Files");
      }
    }
  }
}
