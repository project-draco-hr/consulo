{
  SvnVcs vcs=getVCS(file);
  if (vcs != null) {
    if (file.getName().equals(SVNFileUtil.getAdminDirectoryName())) {
      return true;
    }
    VirtualFile parent=file.getParent();
    if (parent != null) {
      if (parent.getName().equals(SVNFileUtil.getAdminDirectoryName())) {
        return true;
      }
      parent=parent.getParent();
      if (parent != null && parent.getName().equals(SVNFileUtil.getAdminDirectoryName())) {
        return true;
      }
    }
  }
  File ioFile=getIOFile(file);
  if (!SVNWCUtil.isVersionedDirectory(ioFile.getParentFile())) {
    return false;
  }
 else {
    try {
      if (SVNWCUtil.isWorkingCopyRoot(ioFile)) {
        return false;
      }
    }
 catch (    SVNException e) {
    }
  }
  SVNStatus status=getFileStatus(ioFile);
  if (status == null || status.getContentsStatus() == SVNStatusType.STATUS_UNVERSIONED || status.getContentsStatus() == SVNStatusType.STATUS_OBSTRUCTED || status.getContentsStatus() == SVNStatusType.STATUS_MISSING || status.getContentsStatus() == SVNStatusType.STATUS_EXTERNAL) {
    return false;
  }
 else   if (status.getContentsStatus() == SVNStatusType.STATUS_DELETED) {
    if (isUndo(vcs)) {
      moveToUndoStorage(file);
    }
    return true;
  }
 else {
    if (vcs != null) {
      if (status.getContentsStatus() == SVNStatusType.STATUS_ADDED) {
        try {
          final SVNWCClient wcClient=vcs.createWCClient();
          wcClient.doRevert(ioFile,false);
        }
 catch (        SVNException e) {
        }
      }
 else {
        myDeletedFiles.add(new DeletedFileInfo(vcs.getProject(),ioFile));
        if (file.isDirectory())         return true;
      }
    }
    return false;
  }
}
