{
  if (fileFilter != null && !fileFilter.accept(fromFile)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Skipping " + fromFile.getAbsolutePath() + ": it wasn't accepted by filter "+ fileFilter);
    }
    return;
  }
  checkPathDoNotNavigatesUpFromFile(fromFile);
  checkPathDoNotNavigatesUpFromFile(toFile);
  if (fromFile.isDirectory()) {
    final File[] fromFiles=fromFile.listFiles();
    toFile.mkdirs();
    for (    File file : fromFiles) {
      copyFile(file,new File(toFile,file.getName()),context,writtenPaths,fileFilter);
    }
    return;
  }
  if (toFile.isDirectory()) {
    context.addMessage(CompilerMessageCategory.ERROR,CompilerBundle.message("message.text.destination.is.directory",createCopyErrorMessage(fromFile,toFile)),null,-1,-1);
    return;
  }
  if (FileUtil.filesEqual(fromFile,toFile) || writtenPaths != null && !writtenPaths.add(toFile.getPath())) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Skipping " + fromFile.getAbsolutePath() + ": "+ toFile.getAbsolutePath()+ " is already written");
    }
    return;
  }
  if (!FileUtil.isFilePathAcceptable(toFile,fileFilter)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Skipping " + fromFile.getAbsolutePath() + ": "+ toFile.getAbsolutePath()+ " wasn't accepted by filter "+ fileFilter);
    }
    return;
  }
  context.getProgressIndicator().setText("Copying files");
  context.getProgressIndicator().setText2(fromFile.getPath());
  try {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Copy file '" + fromFile + "' to '"+ toFile+ "'");
    }
    if (toFile.exists() && !SystemInfo.isFileSystemCaseSensitive) {
      File canonicalFile=toFile.getCanonicalFile();
      if (!canonicalFile.getAbsolutePath().equals(toFile.getAbsolutePath())) {
        FileUtil.delete(toFile);
      }
    }
    FileUtil.copy(fromFile,toFile);
  }
 catch (  IOException e) {
    context.addMessage(CompilerMessageCategory.ERROR,createCopyErrorMessage(fromFile,toFile) + ": " + e.getLocalizedMessage(),null,-1,-1);
  }
}
