{
  if (!method.isConstructor()) {
    String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("method.is.not.a.constructor"));
    CommonRefactoringUtil.showErrorHint(myProject,editor,message,REFACTORING_NAME,HelpID.REPLACE_CONSTRUCTOR_WITH_FACTORY);
    return;
  }
  PsiClass aClass=method.getContainingClass();
  if (aClass == null || aClass.getQualifiedName() == null) {
    showJspOrLocalClassMessage(editor);
    return;
  }
  if (!checkAbstractClassOrInterfaceMessage(aClass,editor))   return;
  if (!CommonRefactoringUtil.checkReadOnlyStatus(myProject,method))   return;
  new ReplaceConstructorWithFactoryDialog(myProject,method,method.getContainingClass()).show();
}
