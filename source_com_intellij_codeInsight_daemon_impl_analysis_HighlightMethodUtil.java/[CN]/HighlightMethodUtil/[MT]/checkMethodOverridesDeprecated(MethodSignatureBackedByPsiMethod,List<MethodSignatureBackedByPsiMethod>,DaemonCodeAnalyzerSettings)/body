{
  if (!settings.getInspectionProfile().isToolEnabled(HighlightDisplayKey.DEPRECATED_SYMBOL))   return null;
  final PsiMethod method=methodSignature.getMethod();
  PsiElement methodName=method.getNameIdentifier();
  for (int i=0; i < superMethodSignatures.size(); i++) {
    final MethodSignatureBackedByPsiMethod superMethodSignature=superMethodSignatures.get(i);
    PsiMethod superMethod=superMethodSignature.getMethod();
    final PsiClass aClass=superMethod.getContainingClass();
    if (aClass == null)     continue;
    if (!aClass.isDeprecated() && superMethod.hasModifierProperty(PsiModifier.ABSTRACT))     continue;
    if (superMethod.isDeprecated()) {
      String description=MessageFormat.format("Overrides deprecated method in ''{0}''",new Object[]{HighlightMessageUtil.getSymbolName(aClass,PsiSubstitutor.EMPTY)});
      return HighlightInfo.createHighlightInfo(HighlightInfoType.DEPRECATED,methodName,description);
    }
  }
  return null;
}
