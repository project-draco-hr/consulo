{
  HighlightInfo errorResult=null;
  PsiClass aClass=method.getContainingClass();
  if (method.hasModifierProperty(PsiModifier.ABSTRACT) && aClass != null && !aClass.hasModifierProperty(PsiModifier.ABSTRACT) && !aClass.isEnum() && !PsiUtil.hasErrorElementChild(method)) {
    errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,elementToHighlight,"Abstract method in non-abstract class");
    if (method.getBody() != null) {
      QuickFixAction.registerQuickFixAction(errorResult,new ModifierFix(method,PsiModifier.ABSTRACT,false),null);
    }
    QuickFixAction.registerQuickFixAction(errorResult,new AddMethodBodyFix(method),null);
    QuickFixAction.registerQuickFixAction(errorResult,new ModifierFix(aClass,PsiModifier.ABSTRACT,true),null);
  }
  return errorResult;
}
