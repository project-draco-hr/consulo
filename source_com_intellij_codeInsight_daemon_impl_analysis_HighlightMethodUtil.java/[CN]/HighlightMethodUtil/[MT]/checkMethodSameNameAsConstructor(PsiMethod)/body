{
  PsiClass aClass=method.getContainingClass();
  if (aClass == null)   return null;
  if (Comparing.equal(aClass.getName(),method.getName(),true) && method.getReturnTypeElement() != null && method.getReturnType() != null && !method.hasModifierProperty(PsiModifier.STATIC) && !TypeConversionUtil.isNullType(method.getReturnType())) {
    TextRange textRange=HighlightUtil.getMethodDeclarationTextRange(method);
    HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.WARNING,textRange,JavaErrorMessages.message("method.has.same.name.as.class"));
    QuickFixAction.registerQuickFixAction(highlightInfo,new MakeMethodConstructorFix(method),null);
    return highlightInfo;
  }
  return null;
}
