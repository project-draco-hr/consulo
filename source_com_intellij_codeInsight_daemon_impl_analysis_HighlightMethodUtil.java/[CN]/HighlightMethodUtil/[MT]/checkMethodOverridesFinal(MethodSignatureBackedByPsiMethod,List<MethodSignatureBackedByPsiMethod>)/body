{
  PsiMethod method=methodSignature.getMethod();
  for (  MethodSignatureBackedByPsiMethod superMethodSignature : superMethodSignatures) {
    PsiMethod superMethod=superMethodSignature.getMethod();
    if (superMethod != null && superMethod.hasModifierProperty(PsiModifier.FINAL)) {
      String message=MessageFormat.format("''{0}'' cannot override ''{1}'' in ''{2}''; overridden method is final",new Object[]{HighlightUtil.formatMethod(method),HighlightUtil.formatMethod(superMethod),HighlightUtil.formatClass(superMethod.getContainingClass())});
      TextRange textRange=HighlightUtil.getMethodDeclarationTextRange(method);
      HighlightInfo errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,textRange,message);
      QuickFixAction.registerQuickFixAction(errorResult,new ModifierFix(superMethod,PsiModifier.FINAL,false,true),null);
      return errorResult;
    }
  }
  return null;
}
