{
  String s="<html><body><table border=0>";
  final PsiExpression[] expressions=list.getExpressions();
  int cols=Math.max(parameters.length,expressions.length);
  s+="<tr>";
  s+="<td><b>" + methodName + (parameters.length == 0 ? "(&nbsp;)&nbsp;" : "")+ "</b></td>";
  for (int i=0; i < parameters.length; i++) {
    PsiParameter parameter=parameters[i];
    final PsiType type=substitutor.substitute(parameter.getType());
    s+="<td><b>" + (i == 0 ? "(" : "") + XmlUtil.escapeString(showShortType(i,parameters,expressions,substitutor) ? type.getPresentableText() : HighlightUtil.formatType(type))+ (i == parameters.length - 1 ? ")" : ",")+ "</b></td>";
  }
  s+="<td colspan=" + (cols - parameters.length + 1) + ">"+ "in <b>"+ HighlightUtil.formatClass(aClass,false)+ "</b>"+ "&nbsp;cannot be applied</td>";
  s+="</tr>";
  s+="<tr>";
  s+="<td>to</td>";
  for (int i=0; i < expressions.length; i++) {
    PsiExpression expression=expressions[i];
    final PsiType type=expression.getType();
    String mismatchColor=showShortType(i,parameters,expressions,substitutor) ? null : "red";
    s+="<td> " + "<b>" + (i == 0 ? "(" : "") + "<font "+ (mismatchColor == null ? "" : "color=" + mismatchColor)+ ">"+ XmlUtil.escapeString(showShortType(i,parameters,expressions,substitutor) ? type.getPresentableText() : HighlightUtil.formatType(type))+ "</font>"+ (i == expressions.length - 1 ? ")" : ",")+ "</b></td>";
  }
  for (int i=expressions.length; i < cols + 1; i++) {
    s+="<td>" + (i == 0 ? "<b>()</b>" : "") + "&nbsp;</td>";
  }
  s+="</tr>";
  s+="</table></body></html>";
  return s;
}
