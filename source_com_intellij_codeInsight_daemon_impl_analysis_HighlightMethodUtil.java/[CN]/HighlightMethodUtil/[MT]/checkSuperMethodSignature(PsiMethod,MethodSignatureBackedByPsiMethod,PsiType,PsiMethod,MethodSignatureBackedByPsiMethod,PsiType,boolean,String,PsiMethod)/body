{
  if (superReturnType == null)   return null;
  PsiType substitutedSuperReturnType;
  if (!superMethodSignature.isRaw()) {
    final PsiSubstitutor unifyingSubstitutor=MethodSignatureUtil.getSuperMethodSignatureSubstitutor(methodSignature,superMethodSignature);
    substitutedSuperReturnType=unifyingSubstitutor == null ? superReturnType : unifyingSubstitutor.substitute(superMethodSignature.getSubstitutor().substitute(superReturnType));
  }
 else {
    substitutedSuperReturnType=TypeConversionUtil.erasure(superReturnType);
  }
  if (!returnType.equals(superReturnType) && (!(returnType.getDeepComponentType() instanceof PsiClassType) || !(substitutedSuperReturnType.getDeepComponentType() instanceof PsiClassType) || LanguageLevel.JDK_1_5.compareTo(method.getManager().getEffectiveLanguageLevel()) > 0 || !TypeConversionUtil.isAssignable(substitutedSuperReturnType,returnType))) {
    return createIncompatibleReturnTypeMessage(methodToHighlight,method,superMethod,includeRealPositionInfo,substitutedSuperReturnType,returnType,detailMessage);
  }
  return null;
}
