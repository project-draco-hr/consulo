{
  final PsiClass superClass=superMethod.getContainingClass();
  if (superClass == null)   return -1;
  PsiSubstitutor superClassSubstitutor=aClass.isInheritor(superClass,true) ? TypeConversionUtil.getSuperClassSubstitutor(superClass,aClass,PsiSubstitutor.EMPTY) : PsiSubstitutor.EMPTY;
  for (int i=0; i < checkedExceptions.size(); i++) {
    PsiType exception=checkedExceptions.get(i);
    if (!isMethodThrows(superMethod,superClassSubstitutor,exception)) {
      return i;
    }
  }
  return -1;
}
