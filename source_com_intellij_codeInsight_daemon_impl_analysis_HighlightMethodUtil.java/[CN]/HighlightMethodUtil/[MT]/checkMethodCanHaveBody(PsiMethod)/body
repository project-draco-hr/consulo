{
  if (method.getBody() == null)   return null;
  PsiClass aClass=method.getContainingClass();
  String message=null;
  if (aClass != null && aClass.isInterface()) {
    message=JavaErrorMessages.message("interface.methods.cannot.have.body");
  }
 else   if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {
    message=JavaErrorMessages.message("abstract.methods.cannot.have.a.body");
  }
 else   if (method.hasModifierProperty(PsiModifier.NATIVE)) {
    message=JavaErrorMessages.message("native.methods.cannot.have.a.body");
  }
  if (message != null) {
    TextRange textRange=HighlightUtil.getMethodDeclarationTextRange(method);
    HighlightInfo info=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,textRange,message);
    QuickFixAction.registerQuickFixAction(info,new DeleteMethodBodyFix(method),null);
    if (method.hasModifierProperty(PsiModifier.ABSTRACT) && aClass != null && !aClass.isInterface()) {
      QuickFixAction.registerQuickFixAction(info,new ModifierFix(method,PsiModifier.ABSTRACT,false),null);
    }
    return info;
  }
  return null;
}
