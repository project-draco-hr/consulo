{
  if (path == null)   return;
  final InspectionConfigTreeNode node=(InspectionConfigTreeNode)path.getLastPathComponent();
  final Descriptor descriptor=node.getDesriptor();
  if (descriptor != null) {
    final String description=descriptor.loadDescription();
    if (description != null) {
      try {
        myBrowser.read(new StringReader(IdeTooltipManager.formatHtml(SearchUtil.markup(description,myProfileFilter.getFilter()),new HintHint(myBrowser,new Point(0,0)))),null);
      }
 catch (      IOException e2) {
        try {
          myBrowser.read(new StringReader("<html><body><b>" + UNDER_CONSTRUCTION + "</b></body></html>"),null);
        }
 catch (        IOException e1) {
        }
      }
    }
 else {
      try {
        myBrowser.read(new StringReader(EMPTY_HTML),null);
      }
 catch (      IOException e1) {
      }
    }
    myOptionsPanel.removeAll();
    myOptionsPanel.add(SeparatorFactory.createSeparator("Options",null),BorderLayout.NORTH);
    final NamedScope scope=node.getScope();
    if (scope != null || node.isInspectionNode()) {
      final HighlightDisplayKey key=descriptor.getKey();
      final LevelChooser chooser=new LevelChooser(((SeverityProvider)mySelectedProfile.getProfileManager()).getOwnSeverityRegistrar());
      chooser.getComboBox().addActionListener(new ActionListener(){
        public void actionPerformed(        ActionEvent e){
          boolean toUpdate=mySelectedProfile.getErrorLevel(key,scope) != chooser.getLevel();
          mySelectedProfile.setErrorLevel(key,chooser.getLevel(),node.isInspectionNode() || node.isByDefault() ? -1 : node.getParent().getIndex(node));
          if (toUpdate)           node.isProperSetting=mySelectedProfile.isProperSetting(key);
        }
      }
);
      chooser.setLevel(mySelectedProfile.getErrorLevel(key,scope));
      chooser.setMinimumSize(new Dimension(150,chooser.getPreferredSize().height));
      final JPanel withSeverity=new JPanel(new GridBagLayout());
      withSeverity.add(new JLabel(InspectionsBundle.message("inspection.severity")),new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,5,5,10),0,0));
      withSeverity.add(chooser,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,1.0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,5,0),0,0));
      final JComponent comp=descriptor.getState().getAdditionalConfigPanel();
      withSeverity.add(comp != null ? comp : new JPanel(),new GridBagConstraints(0,GridBagConstraints.RELATIVE,2,1,1.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
      myOptionsPanel.add(withSeverity,BorderLayout.CENTER);
    }
    myOptionsPanel.validate();
    GuiUtils.enableChildren(myOptionsPanel,node.isChecked());
  }
 else {
    initOptionsAndDescriptionPanel();
  }
  myOptionsPanel.repaint();
}
