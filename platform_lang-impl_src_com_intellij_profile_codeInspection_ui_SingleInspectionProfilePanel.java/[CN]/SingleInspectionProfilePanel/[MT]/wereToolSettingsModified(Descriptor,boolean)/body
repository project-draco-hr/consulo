{
  if (!mySelectedProfile.isToolEnabled(descriptor.getKey(),descriptor.getScope(),myProjectProfileManager.getProject())) {
    return false;
  }
  Element oldConfig=descriptor.getConfig();
  if (oldConfig == null)   return false;
  ScopeToolState state=null;
  if (isDefault) {
    state=mySelectedProfile.getToolDefaultState(descriptor.getKey().toString(),myProjectProfileManager.getProject());
  }
 else {
    for (    ScopeToolState candidate : mySelectedProfile.getNonDefaultTools(descriptor.getKey().toString(),myProjectProfileManager.getProject())) {
      final String scope=descriptor.getScopeName();
      if (Comparing.equal(candidate.getScopeName(),scope)) {
        state=candidate;
        break;
      }
    }
  }
  if (state == null) {
    return true;
  }
  Element newConfig=Descriptor.createConfigElement(state.getTool());
  if (!JDOMUtil.areElementsEqual(oldConfig,newConfig)) {
    myAlarm.cancelAllRequests();
    myAlarm.addRequest(new Runnable(){
      @Override public void run(){
        myTreeTable.repaint();
      }
    }
,300);
    myModified=true;
    return true;
  }
  return false;
}
