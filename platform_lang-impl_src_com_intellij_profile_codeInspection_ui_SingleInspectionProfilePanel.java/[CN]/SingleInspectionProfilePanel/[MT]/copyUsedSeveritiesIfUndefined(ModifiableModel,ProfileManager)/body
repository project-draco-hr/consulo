{
  final SeverityRegistrar registrar=((SeverityProvider)profileManager).getSeverityRegistrar();
  final Set<HighlightSeverity> severities=((InspectionProfileImpl)selectedProfile).getUsedSeverities();
  for (Iterator<HighlightSeverity> iterator=severities.iterator(); iterator.hasNext(); ) {
    HighlightSeverity severity=iterator.next();
    if (registrar.isSeverityValid(severity.toString())) {
      iterator.remove();
    }
  }
  if (!severities.isEmpty()) {
    final SeverityRegistrar oppositeRegister=((SeverityProvider)selectedProfile.getProfileManager()).getSeverityRegistrar();
    for (    HighlightSeverity severity : severities) {
      final TextAttributesKey attributesKey=TextAttributesKey.find(severity.toString());
      final TextAttributes textAttributes=oppositeRegister.getTextAttributesBySeverity(severity);
      LOG.assertTrue(textAttributes != null,severity.toString());
      HighlightInfoType.HighlightInfoTypeImpl info=new HighlightInfoType.HighlightInfoTypeImpl(severity,attributesKey);
      registrar.registerSeverity(new SeverityRegistrar.SeverityBasedTextAttributes(textAttributes.clone(),info),textAttributes.getErrorStripeColor());
    }
  }
}
