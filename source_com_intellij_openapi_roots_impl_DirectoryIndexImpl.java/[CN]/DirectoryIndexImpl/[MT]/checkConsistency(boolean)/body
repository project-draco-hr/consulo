{
  Assert.assertTrue(myInitialized);
  Assert.assertTrue(!myDisposed);
  com.intellij.util.containers.HashMap<VirtualFile,DirectoryInfo> oldDirToInfoMap=myDirToInfoMap;
  myDirToInfoMap=new com.intellij.util.containers.HashMap<VirtualFile,DirectoryInfo>();
  com.intellij.util.containers.HashMap<String,VirtualFile[]> oldPackageNameToDirsMap=myPackageNameToDirsMap;
  myPackageNameToDirsMap=new com.intellij.util.containers.HashMap<String,VirtualFile[]>();
  _initialize(reverseAllSets,null);
  if (LAZY_MODE) {
    com.intellij.util.containers.HashMap<VirtualFile,DirectoryInfo> newDirToInfoMap=myDirToInfoMap;
    com.intellij.util.containers.HashMap<String,VirtualFile[]> newPackageNameToDirsMap=myPackageNameToDirsMap;
    myDirToInfoMap=oldDirToInfoMap;
    myPackageNameToDirsMap=oldPackageNameToDirsMap;
    Set<VirtualFile> allDirsSet=newDirToInfoMap.keySet();
    for (Iterator<VirtualFile> iterator=allDirsSet.iterator(); iterator.hasNext(); ) {
      VirtualFile dir=iterator.next();
      getInfoForDirectory(dir);
    }
    myDirToInfoMap=newDirToInfoMap;
    myPackageNameToDirsMap=newPackageNameToDirsMap;
  }
  Set<VirtualFile> keySet=myDirToInfoMap.keySet();
  Assert.assertEquals(keySet,oldDirToInfoMap.keySet());
  for (Iterator<VirtualFile> iterator=keySet.iterator(); iterator.hasNext(); ) {
    VirtualFile file=iterator.next();
    DirectoryInfo info1=myDirToInfoMap.get(file);
    DirectoryInfo info2=oldDirToInfoMap.get(file);
    Assert.assertEquals(info1,info2);
  }
  Assert.assertEquals(myPackageNameToDirsMap.keySet(),oldPackageNameToDirsMap.keySet());
  for (Iterator<Map.Entry<String,VirtualFile[]>> iterator=myPackageNameToDirsMap.entrySet().iterator(); iterator.hasNext(); ) {
    Map.Entry<String,VirtualFile[]> entry=iterator.next();
    String packageName=entry.getKey();
    VirtualFile[] dirs=entry.getValue();
    VirtualFile[] dirs1=oldPackageNameToDirsMap.get(packageName);
    HashSet<VirtualFile> set1=new HashSet<VirtualFile>();
    set1.addAll(Arrays.asList(dirs));
    HashSet<VirtualFile> set2=new HashSet<VirtualFile>();
    set2.addAll(Arrays.asList(dirs1));
    Assert.assertEquals(set1,set2);
  }
}
