{
  LOG.assertTrue(dir != null);
  if (!LAZY_MODE) {
    String oldPackageName=info.packageName;
    if (oldPackageName != null) {
      VirtualFile[] oldPackageDirs=myPackageNameToDirsMap.get(oldPackageName);
      LOG.assertTrue(oldPackageDirs != null);
      LOG.assertTrue(oldPackageDirs.length > 0);
      VirtualFile[] dirs;
      if (oldPackageDirs.length != 1) {
        dirs=new VirtualFile[oldPackageDirs.length - 1];
        boolean found=false;
        for (int i=0; i < oldPackageDirs.length; i++) {
          VirtualFile oldDir=oldPackageDirs[i];
          if (oldDir.equals(dir)) {
            found=true;
            continue;
          }
          dirs[found ? i - 1 : i]=oldDir;
        }
        LOG.assertTrue(found);
        myPackageNameToDirsMap.put(oldPackageName,dirs);
      }
 else {
        LOG.assertTrue(dir.equals(oldPackageDirs[0]));
        myPackageNameToDirsMap.remove(oldPackageName);
      }
    }
    if (newPackageName != null) {
      VirtualFile[] newPackageDirs=myPackageNameToDirsMap.get(newPackageName);
      VirtualFile[] dirs;
      if (newPackageDirs == null) {
        dirs=new VirtualFile[]{dir};
      }
 else {
        dirs=new VirtualFile[newPackageDirs.length + 1];
        System.arraycopy(newPackageDirs,0,dirs,0,newPackageDirs.length);
        dirs[newPackageDirs.length]=dir;
      }
      myPackageNameToDirsMap.put(newPackageName,dirs);
    }
  }
 else {
    if (info.packageName != null) {
      myPackageNameToDirsMap.remove(info.packageName);
    }
    if (newPackageName != null) {
      myPackageNameToDirsMap.remove(newPackageName);
    }
  }
  info.packageName=newPackageName;
}
