{
  if (FileTypeManager.getInstance().isFileIgnored(dir.getName()))   return;
  if (forDir != null) {
    if (!VfsUtil.isAncestor(dir,forDir,false))     return;
  }
  DirectoryInfo info=myDirToInfoMap.get(dir);
  if (info == null)   return;
  if (module != null) {
    if (info.module != module)     return;
    if (!info.isInModuleSource)     return;
  }
 else   if (libraryClassRoot != null) {
    if (info.libraryClassRoot != libraryClassRoot)     return;
    if (info.isInModuleSource)     return;
  }
 else   if (librarySourceRoot != null) {
    if (!info.isInLibrarySource)     return;
    if (info.sourceRoot != librarySourceRoot)     return;
    if (info.libraryClassRoot != null)     return;
  }
  final Collection<OrderEntry> parentEntries=parentInfo != null ? parentInfo.getOrderEntries() : null;
  info.addOrderEntries(orderEntries,parentEntries);
  final VirtualFile[] children=dir.getChildren();
  for (  VirtualFile child : children) {
    if (child.isDirectory()) {
      fillMapWithOrderEntries(child,orderEntries,module,libraryClassRoot,librarySourceRoot,forDir,info);
    }
  }
}
