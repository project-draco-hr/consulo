{
  final int insertionPoint=e.getOffset();
  final int changedLineIndex=e.getStartOldIndex();
  final int lengthDiff=e.getNewLength();
  final LineTokenizer tokenizer=new LineTokenizer(e.getNewFragment());
  SegmentArrayWithData workingCopySegmentsForTesting=null;
  SegmentArrayWithData segments;
  if (doTest) {
    segments=new SegmentArrayWithData();
    workingCopySegmentsForTesting=new SegmentArrayWithData();
    fillSegments(segments,workingCopySegmentsForTesting);
  }
 else {
    segments=mySegments;
  }
  int i;
  for (i=segments.getSegmentCount() - 1; i > changedLineIndex; --i) {
    segments.setElementAt(i + optimizedLineShift,segments.getSegmentStart(i) + lengthDiff,segments.getSegmentEnd(i) + lengthDiff,segments.getSegmentData(i));
  }
  final int oldSegmentEnd=segments.getSegmentEnd(changedLineIndex);
  final int oldSegmentStart=segments.getSegmentStart(changedLineIndex);
  final short oldSegmentData=segments.getSegmentData(changedLineIndex);
  final int newChangedLineEnd=insertionPoint + tokenizer.getLineSeparatorLength() + tokenizer.getOffset()+ tokenizer.getLength();
  segments.setElementAt(changedLineIndex,oldSegmentStart,newChangedLineEnd,tokenizer.getLineSeparatorLength() | MODIFIED_MASK);
  tokenizer.advance();
  i=1;
  int lastFragmentLength=0;
  while (!tokenizer.atEnd()) {
    lastFragmentLength=tokenizer.getLineSeparatorLength() != 0 ? 0 : tokenizer.getLength();
    segments.setElementAt(changedLineIndex + i,insertionPoint + tokenizer.getOffset(),insertionPoint + tokenizer.getOffset() + tokenizer.getLength()+ tokenizer.getLineSeparatorLength(),tokenizer.getLineSeparatorLength() | MODIFIED_MASK);
    i++;
    tokenizer.advance();
  }
  segments.setElementAt(changedLineIndex + optimizedLineShift,insertionPoint + lengthDiff - lastFragmentLength,oldSegmentEnd + lengthDiff,oldSegmentData | MODIFIED_MASK);
  if (doTest) {
    final SegmentArrayWithData data=mySegments;
    mySegments=segments;
    addEmptyLineAtEnd();
    doCheckResults(workingCopySegmentsForTesting,e,data,segments);
  }
 else {
    addEmptyLineAtEnd();
  }
}
