{
  if (isActive()) {
    if (error != null) {
      if (error.length() > 0) {
        JOptionPane.showMessageDialog(graphComponent,error);
      }
    }
 else     if (first != null) {
      mxGraph graph=graphComponent.getGraph();
      double dx=first.getX() - e.getX();
      double dy=first.getY() - e.getY();
      if (connectPreview.isActive() && (marker.hasValidState() || isCreateTarget() || graph.isAllowDanglingEdges())) {
        graph.getModel().beginUpdate();
        try {
          Object dropTarget=null;
          if (!marker.hasValidState() && isCreateTarget()) {
            Object vertex=createTargetVertex(e,source.getCell());
            dropTarget=graph.getDropTarget(new Object[]{vertex},e.getPoint(),graphComponent.getCellAt(e.getX(),e.getY()));
            if (vertex != null) {
              if (dropTarget == null || !graph.getModel().isEdge(dropTarget)) {
                mxCellState pstate=graph.getView().getState(dropTarget);
                if (pstate != null) {
                  mxGeometry geo=graph.getModel().getGeometry(vertex);
                  mxPoint origin=pstate.getOrigin();
                  geo.setX(geo.getX() - origin.getX());
                  geo.setY(geo.getY() - origin.getY());
                }
              }
 else {
                dropTarget=graph.getDefaultParent();
              }
              graph.addCells(new Object[]{vertex},dropTarget);
            }
            mxCellState targetState=graph.getView().getState(vertex,true);
            connectPreview.update(e,targetState,e.getX(),e.getY());
          }
          Object cell=connectPreview.stop(graphComponent.isSignificant(dx,dy),e);
          if (cell != null) {
            graphComponent.getGraph().setSelectionCell(cell);
            eventSource.fireEvent(new mxEventObject(mxEvent.CONNECT,"cell",cell,"event",e,"target",dropTarget));
          }
          e.consume();
        }
  finally {
          graph.getModel().endUpdate();
        }
      }
    }
  }
  reset();
}
