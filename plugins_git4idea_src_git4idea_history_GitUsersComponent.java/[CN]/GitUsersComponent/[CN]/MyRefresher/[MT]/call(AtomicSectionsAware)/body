{
  atomicSectionsAware.checkShouldExit();
  if (myIsActive) {
    try {
      final HashMap<VirtualFile,Pair<String,LowLevelAccess>> copy;
synchronized (myLock) {
        copy=new HashMap<VirtualFile,Pair<String,LowLevelAccess>>(myAccessMap);
      }
      final Map<String,UsersData> toUpdate=new HashMap<String,UsersData>();
      for (      Pair<String,LowLevelAccess> pair : copy.values()) {
        final String key=pair.getFirst();
        UsersData data=myState.get(key);
        if (data == null) {
          data=new UsersData();
          data.forceUpdate();
        }
        if (data.load(pair.getSecond())) {
          toUpdate.put(key,data);
        }
      }
      for (      String s : toUpdate.keySet()) {
        myState.put(s,toUpdate.get(s));
      }
      if (!toUpdate.isEmpty()) {
        myState.force();
      }
    }
 catch (    IOException e) {
      LOG.info(e);
    }
  }
  return myIsActive;
}
