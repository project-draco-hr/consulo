{
  return new DataExternalizer<UsersData>(){
    public void save(    DataOutput out,    UsersData value) throws IOException {
      final UpdatedReference<Long> closer=value.getCloserDate();
      out.writeLong(closer.getT());
      out.writeLong(closer.getTime());
      final UpdatedReference<Long> earlier=value.getEarlierDate();
      out.writeLong(earlier.getT());
      out.writeLong(earlier.getTime());
      final List<String> users=value.getUsers();
      out.writeInt(users.size());
      for (      String user : users) {
        out.writeUTF(user);
      }
      out.writeBoolean(value.isStartReached());
    }
    public UsersData read(    DataInput in) throws IOException {
      final UsersData data=new UsersData();
      final long closerDate=in.readLong();
      final long closerUpdate=in.readLong();
      data.setCloserDate(new UpdatedReference<Long>(closerDate,closerUpdate));
      final long earlierDate=in.readLong();
      final long earlierUpdate=in.readLong();
      data.setEarlierDate(new UpdatedReference<Long>(earlierDate,earlierUpdate));
      final List<String> users=new LinkedList<String>();
      final int size=in.readInt();
      for (int i=0; i < size; i++) {
        users.add(in.readUTF());
      }
      data.addUsers(users);
      data.setStartReached(in.readBoolean());
      return data;
    }
  }
;
}
