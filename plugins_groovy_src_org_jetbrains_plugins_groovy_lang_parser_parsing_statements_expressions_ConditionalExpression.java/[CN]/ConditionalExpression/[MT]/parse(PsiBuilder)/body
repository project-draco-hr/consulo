{
  PsiBuilder.Marker marker=builder.mark();
  if (LogicalOrExpression.parse(builder)) {
    if (ParserUtils.getToken(builder,mQUESTION)) {
      ParserUtils.getToken(builder,mNLS);
      if (!AssignmentExpression.parse(builder)) {
        builder.error(GroovyBundle.message("expression.expected"));
      }
      if (ParserUtils.getToken(builder,mCOLON,GroovyBundle.message("colon.expected"))) {
        ParserUtils.getToken(builder,mNLS);
        parse(builder);
      }
      marker.done(CONDITIONAL_EXPRESSION);
    }
 else     if (ParserUtils.getToken(builder,mELVIS)) {
      ParserUtils.getToken(builder,mNLS);
      if (!parse(builder)) {
        builder.error(GroovyBundle.message("expression.expected"));
      }
      marker.done(ELVIS_EXPRESSION);
    }
 else {
      marker.drop();
    }
    return true;
  }
 else {
    marker.drop();
    return false;
  }
}
