{
  PsiBuilder.Marker abMarker=builder.mark();
  if (!ParserUtils.getToken(builder,mLCURLY)) {
    builder.error(GroovyBundle.message("lcurly.expected"));
    abMarker.rollbackTo();
    return WRONGWAY;
  }
  AnnotationMember.parse(builder);
  IElementType sep=Separators.parse(builder);
  while (!WRONGWAY.equals(sep)) {
    AnnotationMember.parse(builder);
    sep=Separators.parse(builder);
  }
  ParserUtils.waitNextRCurly(builder);
  if (!ParserUtils.getToken(builder,mRCURLY)) {
    builder.error(GroovyBundle.message("rcurly.expected"));
  }
  abMarker.done(ANNOTATION_BLOCK);
  return ANNOTATION_BLOCK;
}
