{
  final Document document=context.getEditor().getDocument();
  document.replaceString(context.getStartOffset(),context.getTailOffset(),";");
  final InsertionContext qualifierContext=CompletionUtil.emulateInsertion(context,context.getStartOffset(),myQualifier);
  OffsetKey oldStart=context.trackOffset(context.getStartOffset(),false);
  int start=CharArrayUtil.shiftForward(context.getDocument().getCharsSequence(),context.getStartOffset()," \t\n");
  if (shouldParenthesizeQualifier(context.getFile(),start,qualifierContext.getTailOffset())) {
    final String space=CodeStyleSettingsManager.getSettings(qualifierContext.getProject()).SPACE_WITHIN_PARENTHESES ? " " : "";
    document.insertString(start,"(" + space);
    document.insertString(qualifierContext.getTailOffset(),space + ")");
  }
  final char atTail=document.getCharsSequence().charAt(context.getTailOffset() - 1);
  if (atTail != ';') {
    LOG.error(LogMessageEx.createEvent("Unexpected character","atTail=" + atTail + "\n"+ "offset="+ context.getTailOffset()+ "\n"+ DebugUtil.currentStackTrace(),new Attachment(context.getDocument())));
  }
  document.replaceString(context.getTailOffset() - 1,context.getTailOffset(),".");
  CompletionUtil.emulateInsertion(getDelegate(),context.getTailOffset(),context);
  context.commitDocument();
  int formatStart=context.getOffset(oldStart);
  int formatEnd=context.getTailOffset();
  if (formatStart >= 0 && formatEnd >= 0) {
    CodeStyleManager.getInstance(context.getProject()).reformatText(context.getFile(),formatStart,formatEnd);
  }
}
