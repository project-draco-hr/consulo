{
  List<AddPackagingElementAction> actions=new ArrayList<AddPackagingElementAction>();
  actions.add(new AddPackagingElementAction(ProjectBundle.message("action.name.packaging.add.library"),Icons.LIBRARY_ICON){
    public boolean isEnabled(    @NotNull final PackagingEditor editor){
      return !getLibrariesToAdd(editor).isEmpty();
    }
    public void perform(    final PackagingEditor packagingEditor){
      List<Library> libraries=getLibrariesToAdd(packagingEditor);
      ContainerUtil.removeDuplicates(libraries);
      ChooseLibrariesDialog dialog=new ChooseLibrariesDialog(packagingEditor.getMainPanel(),ProjectBundle.message("dialog.title.packaging.choose.library"),libraries);
      dialog.show();
      if (dialog.isOK()) {
        packagingEditor.addLibraries(dialog.getChosenElements());
      }
    }
  }
);
  actions.add(new AddPackagingElementAction(ProjectBundle.message("action.name.packaging.add.module"),StdModuleTypes.JAVA.getNodeIcon(false)){
    public boolean isEnabled(    @NotNull final PackagingEditor editor){
      return !getModulesToAdd(editor).isEmpty();
    }
    public void perform(    final PackagingEditor packagingEditor){
      List<Module> moduleList=getModulesToAdd(packagingEditor);
      ContainerUtil.removeDuplicates(moduleList);
      ChooseModulesDialog dialog=new ChooseModulesDialog(packagingEditor.getMainPanel(),moduleList,ProjectBundle.message("dialog.title.packaging.choose.module"));
      dialog.show();
      List<Module> modules=new ArrayList<Module>(dialog.getChosenElements());
      if (dialog.isOK()) {
        packagingEditor.addModules(modules);
      }
    }
  }
);
  return actions;
}
