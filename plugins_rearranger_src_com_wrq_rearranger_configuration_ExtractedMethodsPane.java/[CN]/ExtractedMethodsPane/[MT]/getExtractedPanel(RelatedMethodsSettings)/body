{
  final JPanel extractedPanel=new JPanel(new GridBagLayout());
  final Constraints constraints=new Constraints(GridBagConstraints.NORTHWEST);
  constraints.insets=new Insets(5,5,5,0);
  JLabel label=new JLabel("Consider a non-private method as an extracted method:");
  extractedPanel.add(label,constraints.weightedLastCol());
  constraints.insets=new Insets(0,15,0,0);
  final JRadioButton neverButton=new JRadioButton("never");
  constraints.newRow();
  extractedPanel.add(neverButton,constraints.weightedLastCol());
  final JRadioButton oneButton=new JRadioButton("when it is called by only one method in the class");
  constraints.newRow();
  extractedPanel.add(oneButton,constraints.weightedLastCol());
  final JRadioButton moreButton=new JRadioButton("when it has one or more callers in the class");
  constraints.weightedLastRow();
  extractedPanel.add(moreButton,constraints.weightedLastCol());
  ButtonGroup g=new ButtonGroup();
  g.add(neverButton);
  g.add(oneButton);
  g.add(moreButton);
switch (rms.getNonPrivateTreatment()) {
case RelatedMethodsSettings.NON_PRIVATE_EXTRACTED_NEVER:
    neverButton.setSelected(true);
  break;
case RelatedMethodsSettings.NON_PRIVATE_EXTRACTED_ONE_CALLER:
oneButton.setSelected(true);
break;
case RelatedMethodsSettings.NON_PRIVATE_EXTRACTED_ANY_CALLERS:
moreButton.setSelected(true);
break;
}
neverButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
if (neverButton.isSelected()) {
rms.setNonPrivateTreatment(RelatedMethodsSettings.NON_PRIVATE_EXTRACTED_NEVER);
}
}
}
);
oneButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
if (oneButton.isSelected()) {
rms.setNonPrivateTreatment(RelatedMethodsSettings.NON_PRIVATE_EXTRACTED_ONE_CALLER);
}
}
}
);
moreButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
if (moreButton.isSelected()) {
rms.setNonPrivateTreatment(RelatedMethodsSettings.NON_PRIVATE_EXTRACTED_ANY_CALLERS);
}
}
}
);
return extractedPanel;
}
