{
  final JPanel orderingPanel=new JPanel(new GridBagLayout());
  final Border border=BorderFactory.createEtchedBorder();
  final TitledBorder tb=new TitledBorder(border,"Ordering options");
  orderingPanel.setBorder(tb);
  final Constraints constraints=new Constraints(GridBagConstraints.NORTHWEST);
  final JRadioButton invocationButton=new JRadioButton("Place in order of invocation");
  final JRadioButton originalButton=new JRadioButton("Retain original order");
  final JRadioButton alphabetizeButton=new JRadioButton("Alphabetize");
  ButtonGroup group=new ButtonGroup();
  group.add(invocationButton);
  group.add(originalButton);
  group.add(alphabetizeButton);
  orderingPanel.add(invocationButton,constraints.weightedLastCol());
  constraints.newRow();
  orderingPanel.add(originalButton,constraints.weightedLastCol());
  constraints.weightedLastRow();
  orderingPanel.add(alphabetizeButton,constraints.weightedLastCol());
switch (rms.getOrdering()) {
case RelatedMethodsSettings.INVOCATION_ORDER:
    invocationButton.setSelected(true);
  break;
case RelatedMethodsSettings.RETAIN_ORIGINAL_ORDER:
originalButton.setSelected(true);
break;
case RelatedMethodsSettings.ALPHABETICAL_ORDER:
alphabetizeButton.setSelected(true);
break;
}
invocationButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
if (invocationButton.isSelected()) {
rms.setOrdering(RelatedMethodsSettings.INVOCATION_ORDER);
}
}
}
);
originalButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
if (originalButton.isSelected()) {
rms.setOrdering(RelatedMethodsSettings.RETAIN_ORIGINAL_ORDER);
}
}
}
);
alphabetizeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
if (alphabetizeButton.isSelected()) {
rms.setOrdering(RelatedMethodsSettings.ALPHABETICAL_ORDER);
}
}
}
);
return orderingPanel;
}
