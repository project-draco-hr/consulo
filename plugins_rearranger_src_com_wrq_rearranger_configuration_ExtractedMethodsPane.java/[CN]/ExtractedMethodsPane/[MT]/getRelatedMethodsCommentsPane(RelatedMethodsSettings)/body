{
  JPanel rmcPanel=new JPanel(new GridBagLayout());
  final Constraints constraints=new Constraints(GridBagConstraints.NORTHWEST);
  constraints.fill=GridBagConstraints.BOTH;
  constraints.gridwidth=1;
  constraints.gridheight=1;
  constraints.weightx=0.0d;
  constraints.weighty=0.0d;
  JLabel commentTypeLabel=new JLabel("Emit comment at");
  final JComboBox commentType=new JComboBox(new String[]{"top level","each level","each method","family change (up level, or next sibling has children)"});
  commentType.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      rms.setCommentType(commentType.getSelectedIndex());
    }
  }
);
  commentType.setSelectedIndex(rms.getCommentType());
  JLabel legendLabel=new JLabel("Comment Substitutions: use");
  JLabel legendLabel_1=new JLabel("%TL% for top level method");
  JLabel legendLabel_2=new JLabel("%MN% for method name");
  JLabel legendLabel_4=new JLabel("%LV% for level number");
  JLabel legendLabel_3=new JLabel("%AM% for all method names");
  JLabel precedingCommentLabel=new JLabel("Preceding Comment:");
  JLabel trailingCommentLabel=new JLabel("Trailing Comment:");
  JPanel precedingCommentPanel=getCommentAreaPanel(rms.getPrecedingComment());
  JPanel trailingCommentPanel=getCommentAreaPanel(rms.getTrailingComment());
  constraints.insets=new Insets(3,5,0,0);
  rmcPanel.add(commentTypeLabel,constraints.firstCol());
  rmcPanel.add(commentType,constraints.lastCol());
  JPanel legendPanel=new JPanel(new GridBagLayout());
{
    final Border border=BorderFactory.createEtchedBorder();
    legendPanel.setBorder(border);
    final Constraints legendConstraints=new Constraints(GridBagConstraints.NORTHWEST);
    legendConstraints.fill=GridBagConstraints.BOTH;
    legendConstraints.insets=new Insets(5,5,0,0);
    legendPanel.add(legendLabel,legendConstraints.firstCol());
    legendConstraints.insets=new Insets(5,5,0,5);
    legendPanel.add(legendLabel_1,legendConstraints.nextCol());
    legendPanel.add(legendLabel_2,legendConstraints.lastCol());
    legendConstraints.newRow();
    legendConstraints.firstCol();
    legendConstraints.insets=new Insets(5,5,5,5);
    legendPanel.add(legendLabel_3,legendConstraints.nextCol());
    legendPanel.add(legendLabel_4,legendConstraints.lastCol());
  }
  constraints.newRow();
  constraints.insets=new Insets(5,5,0,5);
  rmcPanel.add(legendPanel,constraints.weightedLastCol());
  constraints.newRow();
  rmcPanel.add(precedingCommentLabel,constraints.weightedLastCol());
  constraints.weightedNewRow(0.50d);
  rmcPanel.add(precedingCommentPanel,constraints.weightedLastCol());
  constraints.newRow();
  rmcPanel.add(trailingCommentLabel,constraints.weightedLastCol());
  constraints.weightedNewRow(0.50d);
  constraints.insets=new Insets(5,5,5,5);
  rmcPanel.add(trailingCommentPanel,constraints.weightedLastCol());
  constraints.lastRow();
  rmcPanel.add(rms.getCommentFillString().getCommentFillStringPanel(),constraints.weightedLastCol());
  return rmcPanel;
}
