{
  final PsiElement element=descriptor.getPsiElement();
  if (!(element instanceof PsiBinaryExpression)) {
    return;
  }
  final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)element;
  final PsiElement parent=binaryExpression.getParent();
  if (!(parent instanceof PsiExpressionList)) {
    return;
  }
  final PsiExpressionList expressionList=(PsiExpressionList)parent;
  final PsiExpression lhs=binaryExpression.getLOperand();
  final PsiExpression rhs=binaryExpression.getROperand();
  if (rhs == null) {
    return;
  }
  final PsiExpression[] expressions=expressionList.getExpressions();
  final int parameter=expressions.length - 1;
  expressionList.add(rhs);
  final Object constant=ExpressionUtils.computeConstantExpression(lhs);
  if (constant instanceof String) {
    final PsiExpression newExpression=addParameter(lhs,parameter);
    if (newExpression == null) {
      expressionList.addAfter(lhs,binaryExpression);
    }
 else {
      expressionList.addAfter(newExpression,binaryExpression);
    }
  }
 else {
    expressionList.addAfter(lhs,binaryExpression);
  }
  binaryExpression.delete();
}
