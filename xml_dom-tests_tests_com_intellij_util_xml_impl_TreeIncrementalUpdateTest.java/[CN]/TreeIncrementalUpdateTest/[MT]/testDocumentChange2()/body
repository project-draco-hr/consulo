{
  final XmlFile file=(XmlFile)createFile("file.xml","<?xml version='1.0' encoding='UTF-8'?>\n" + "<!DOCTYPE ejb-jar PUBLIC \"-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN\" \"http://java.sun.com/dtd/ejb-jar_2_0.dtd\">\n" + "<a>\n"+ " <child>\n"+ "  <child/>\n"+ " </child>\n"+ "</a>");
  final DomFileElementImpl<MyElement> fileElement=getDomManager().getFileElement(file,MyElement.class,"a");
  myCallRegistry.clear();
  final MyElement rootElement=fileElement.getRootElement();
  final MyElement oldLeaf=rootElement.getChild().getChild();
  final XmlTag oldLeafTag=oldLeaf.getXmlTag();
  new WriteCommandAction(getProject()){
    @Override protected void run(    Result result) throws Throwable {
      file.getDocument().getProlog().delete();
      final XmlTag tag=file.getDocument().getRootTag();
      tag.setAttribute("xmlns","something");
      tag.setAttribute("xmlns:xsi","something");
    }
  }
.execute();
  assertTrue(oldLeafTag.isValid());
  putExpected(new DomEvent(fileElement,false));
  putExpected(new DomEvent(rootElement,false));
  putExpected(new DomEvent(rootElement,false));
  assertResultsAndClear();
  assertEquals(fileElement.getRootElement(),rootElement);
  assertTrue(rootElement.isValid());
  assertTrue(rootElement.getChild().isValid());
  assertTrue(rootElement.getChild().getXmlTag().isValid());
  assertTrue(rootElement.getChild().getChild().getXmlTag().isValid());
}
