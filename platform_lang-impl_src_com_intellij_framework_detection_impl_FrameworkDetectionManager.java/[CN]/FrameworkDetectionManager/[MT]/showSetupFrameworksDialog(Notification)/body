{
  IdentityHashMap<DetectedFrameworkDescription,Integer> frameworksToId=new IdentityHashMap<DetectedFrameworkDescription,Integer>();
  List<? extends DetectedFrameworkDescription> descriptions;
  try {
    descriptions=getValidDetectedFrameworks(frameworksToId);
  }
 catch (  IndexNotReadyException e) {
    DumbService.getInstance(myProject).showDumbModeNotification("Information about detected frameworks is not available until indices are built");
    return;
  }
  if (descriptions.isEmpty()) {
    Messages.showInfoMessage(myProject,"No frameworks are detected","Framework Detection");
    return;
  }
  final ConfigureDetectedFrameworksDialog dialog=new ConfigureDetectedFrameworksDialog(myProject,descriptions);
  dialog.show();
  if (dialog.isOK()) {
    notification.expire();
    List<DetectedFrameworkDescription> selected=dialog.getSelectedFrameworks();
    FrameworkDetectionUtil.setupFrameworks(selected,myProject);
    for (    DetectedFrameworkDescription description : selected) {
      myDetectedFrameworksData.putExistentFrameworkFiles(frameworksToId.get(description),description.getRelatedFiles());
    }
  }
}
