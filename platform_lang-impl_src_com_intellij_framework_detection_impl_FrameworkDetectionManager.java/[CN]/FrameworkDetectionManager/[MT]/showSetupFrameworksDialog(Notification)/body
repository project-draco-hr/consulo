{
  IdentityHashMap<DetectedFrameworkDescription,Integer> frameworksToId=new IdentityHashMap<DetectedFrameworkDescription,Integer>();
  List<DetectedFrameworkDescription> descriptions=getValidDetectedFrameworks(frameworksToId);
  if (descriptions.isEmpty()) {
    Messages.showInfoMessage(myProject,"No frameworks are detected","Framework Detection");
    return;
  }
  final ConfigureDetectedFrameworksDialog dialog=new ConfigureDetectedFrameworksDialog(myProject,descriptions);
  dialog.show();
  if (dialog.isOK()) {
    notification.expire();
    List<DetectedFrameworkDescription> selected=dialog.getSelectedFrameworks();
    AccessToken token=WriteAction.start();
    try {
      final PlatformModifiableModelsProvider provider=new PlatformModifiableModelsProvider();
      for (      DetectedFrameworkDescription description : selected) {
        description.configureFramework(provider,new DefaultModulesProvider(myProject));
        myDetectedFrameworksData.putExistentFrameworkFiles(frameworksToId.get(description),description.getRelatedFiles());
      }
    }
  finally {
      token.finish();
    }
  }
}
