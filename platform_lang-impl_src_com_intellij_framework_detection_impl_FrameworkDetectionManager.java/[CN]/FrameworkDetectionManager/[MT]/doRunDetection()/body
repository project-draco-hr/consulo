{
  Set<Integer> detectorsToProcess;
synchronized (myLock) {
    detectorsToProcess=new HashSet<Integer>(myDetectorsToProcess);
    detectorsToProcess.addAll(myDetectorsToProcess);
    myDetectorsToProcess.clear();
  }
  if (detectorsToProcess.isEmpty())   return;
  if (LOG.isDebugEnabled()) {
    LOG.debug("Starting framework detectors: " + detectorsToProcess);
  }
  final FileBasedIndex index=FileBasedIndex.getInstance();
  Map<Integer,Collection<? extends DetectedFrameworkDescription>> newDescriptions=new HashMap<Integer,Collection<? extends DetectedFrameworkDescription>>();
  final DetectionExcludesConfiguration excludesConfiguration=DetectionExcludesConfiguration.getInstance(myProject);
  for (  Integer id : detectorsToProcess) {
    final List<? extends DetectedFrameworkDescription> frameworks=runDetector(id,index,excludesConfiguration,true);
    final Collection<? extends DetectedFrameworkDescription> updated=myDetectedFrameworksData.updateFrameworksList(id,frameworks);
    if (LOG.isDebugEnabled()) {
      LOG.debug(frameworks.size() + " frameworks detected, " + updated.size()+ " changed");
    }
    if (!updated.isEmpty()) {
      newDescriptions.put(id,updated);
    }
  }
  Set<String> frameworkNames=new HashSet<String>();
  for (  final Integer detectorId : newDescriptions.keySet()) {
    for (    final DetectedFrameworkDescription description : newDescriptions.get(detectorId)) {
      frameworkNames.add(description.getFrameworkType().getPresentableName());
    }
  }
  if (!frameworkNames.isEmpty()) {
    String names=StringUtil.join(frameworkNames,", ");
    final String text=ProjectBundle.message("framework.detected.info.text",names,frameworkNames.size());
    FRAMEWORK_DETECTION_NOTIFICATION.createNotification("Frameworks detected",text,NotificationType.INFORMATION,new NotificationListener(){
      @Override public void hyperlinkUpdate(      @NotNull Notification notification,      @NotNull HyperlinkEvent event){
        if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
          showSetupFrameworksDialog(notification);
        }
      }
    }
).notify(myProject);
  }
}
