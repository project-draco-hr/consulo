{
  Collection<VirtualFile> acceptedFiles=index.getContainingFiles(FrameworkDetectionIndex.NAME,detectorId,GlobalSearchScope.projectScope(myProject));
  final Collection<VirtualFile> filesToProcess;
  if (processNewFilesOnly) {
    filesToProcess=myDetectedFrameworksData.retainNewFiles(detectorId,acceptedFiles);
  }
 else {
    filesToProcess=new ArrayList<VirtualFile>(acceptedFiles);
  }
  FrameworkDetector detector=FrameworkDetectorRegistry.getInstance().getDetectorById(detectorId);
  if (detector == null) {
    LOG.info("Framework detector not found by id " + detectorId);
    return Collections.emptyList();
  }
  excludesConfiguration.removeExcluded(filesToProcess,detector);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Detector '" + detector.getDetectorId() + "': "+ acceptedFiles.size()+ " accepted files, "+ filesToProcess.size()+ " files to process");
  }
  final List<? extends DetectedFrameworkDescription> frameworks;
  if (!filesToProcess.isEmpty()) {
    frameworks=detector.detect(filesToProcess,new FrameworkDetectionContextImpl(myProject));
  }
 else {
    frameworks=Collections.emptyList();
  }
  return frameworks;
}
