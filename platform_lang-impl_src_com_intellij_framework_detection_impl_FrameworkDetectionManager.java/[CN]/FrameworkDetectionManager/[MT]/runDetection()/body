{
  Set<Integer> detectorsToProcess;
synchronized (myLock) {
    detectorsToProcess=new HashSet<Integer>(myDetectorsToProcess);
    detectorsToProcess.addAll(myDetectorsToProcess);
    myDetectorsToProcess.clear();
  }
  final FileBasedIndex index=FileBasedIndex.getInstance();
  Map<Integer,List<? extends DetectedFrameworkDescription>> newDescriptions=new HashMap<Integer,List<? extends DetectedFrameworkDescription>>();
  for (  Integer key : detectorsToProcess) {
    Collection<VirtualFile> files=index.getContainingFiles(FrameworkDetectionIndex.NAME,key,GlobalSearchScope.projectScope(myProject));
    final Collection<VirtualFile> newFiles=myDetectedFrameworksData.retainNewFiles(key,files);
    FrameworkDetector detector=FrameworkDetectorRegistry.getInstance().getDetectorById(key);
    if (detector != null) {
      final List<? extends DetectedFrameworkDescription> frameworks;
      if (!newFiles.isEmpty()) {
        frameworks=detector.detect(newFiles,new FrameworkDetectionContextImpl(myProject));
      }
 else {
        frameworks=Collections.emptyList();
      }
      final List<? extends DetectedFrameworkDescription> updated=myDetectedFrameworksData.updateFrameworksList(key,frameworks);
      if (!updated.isEmpty()) {
        newDescriptions.put(key,updated);
      }
    }
  }
  Set<String> frameworkNames=new HashSet<String>();
  for (  final Integer detectorId : newDescriptions.keySet()) {
    for (    final DetectedFrameworkDescription description : newDescriptions.get(detectorId)) {
      frameworkNames.add(description.getFrameworkType().getPresentableName());
    }
  }
  if (!frameworkNames.isEmpty()) {
    String names=StringUtil.join(frameworkNames,", ");
    final String text=ProjectBundle.message("framework.detected.info.text",names,frameworkNames.size());
    FRAMEWORK_DETECTION_NOTIFICATION.createNotification("Frameworks detected",text,NotificationType.INFORMATION,new NotificationListener(){
      @Override public void hyperlinkUpdate(      @NotNull Notification notification,      @NotNull HyperlinkEvent event){
        if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
          showSetupFrameworksDialog(notification);
        }
      }
    }
).notify(myProject);
  }
}
