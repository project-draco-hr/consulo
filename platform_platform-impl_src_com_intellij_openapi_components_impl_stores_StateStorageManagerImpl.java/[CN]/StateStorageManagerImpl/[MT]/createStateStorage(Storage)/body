{
  if (!storageSpec.storageClass().equals(StateStorage.class)) {
    String key=UUID.randomUUID().toString();
    ((MutablePicoContainer)myPicoContainer).registerComponentImplementation(key,storageSpec.storageClass());
    return (StateStorage)myPicoContainer.getComponentInstance(key);
  }
 else   if (!storageSpec.stateSplitter().equals(StateSplitter.class)) {
    StateSplitter splitter=ReflectionUtil.newInstance(storageSpec.stateSplitter());
    return new DirectoryBasedStorage(myPathMacroSubstitutor,expandMacros(storageSpec.file()),splitter,this,createStorageTopicListener());
  }
 else {
    return createFileStateStorage(storageSpec.file(),storageSpec.roamingType());
  }
}
