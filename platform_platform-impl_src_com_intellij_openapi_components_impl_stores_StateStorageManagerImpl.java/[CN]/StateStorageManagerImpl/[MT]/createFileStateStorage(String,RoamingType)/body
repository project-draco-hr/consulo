{
  String expandedFile=expandMacros(fileSpec);
  if (!ourHeadlessEnvironment && PathUtilRt.getFileName(expandedFile).lastIndexOf('.') < 0) {
    throw new IllegalArgumentException("Extension is missing for storage file: " + expandedFile);
  }
  if (roamingType == RoamingType.PER_USER && fileSpec.equals(StoragePathMacros.WORKSPACE_FILE)) {
    roamingType=RoamingType.DISABLED;
  }
  beforeFileBasedStorageCreate();
  return new FileBasedStorage(expandedFile,fileSpec,roamingType,getMacroSubstitutor(fileSpec),myRootTagName,this,createStorageTopicListener(),getStreamProvider(),this){
    @Override @NotNull protected StorageData createStorageData(){
      return StateStorageManagerImpl.this.createStorageData(myFileSpec);
    }
    @Override protected boolean isUseXmlProlog(){
      return StateStorageManagerImpl.this.isUseXmlProlog();
    }
  }
;
}
