{
  myExceptionsModel=new ExceptionsTableModel(myMethod.getMethod().getThrowsList());
  myExceptionsModel.setTypeInfos(myMethod.getMethod());
  final JBTable table=new JBTable(myExceptionsModel);
  table.setStriped(true);
  table.setRowHeight(20);
  table.getColumnModel().getColumn(0).setCellRenderer(new CodeFragmentTableCellRenderer(myProject));
  final JavaCodeFragmentTableCellEditor cellEditor=new JavaCodeFragmentTableCellEditor(myProject);
  cellEditor.addDocumentListener(new DocumentAdapter(){
    @Override public void documentChanged(    DocumentEvent e){
      final int row=table.getSelectedRow();
      final int col=table.getSelectedColumn();
      myExceptionsModel.setValueAt(cellEditor.getCellEditorValue(),row,col);
      updateSignature();
    }
  }
);
  table.getColumnModel().getColumn(0).setCellEditor(cellEditor);
  table.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  table.getSelectionModel().setSelectionInterval(0,0);
  table.setSurrendersFocusOnKeystroke(true);
  final JPanel panel=ToolbarDecorator.createDecorator(table).createPanel();
  panel.setBorder(IdeBorderFactory.createEmptyBorder(0));
  myExceptionsModel.addTableModelListener(mySignatureUpdater);
  final ArrayList<Pair<String,JPanel>> result=new ArrayList<Pair<String,JPanel>>();
  final String message=RefactoringBundle.message("changeSignature.exceptions.panel.border.title");
  result.add(Pair.create(message,panel));
  return result;
}
