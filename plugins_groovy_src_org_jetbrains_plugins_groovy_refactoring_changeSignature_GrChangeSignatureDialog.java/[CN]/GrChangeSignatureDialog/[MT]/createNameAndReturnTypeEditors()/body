{
  myNameField=new EditorTextField("",myProject,GroovyFileType.GROOVY_FILE_TYPE);
  final JavaCodeFragmentFactory factory=JavaCodeFragmentFactory.getInstance(myProject);
  myReturnTypeCodeFragment=factory.createTypeCodeFragment("",myMethod,true,JavaCodeFragmentFactory.ALLOW_VOID);
  final Document document=PsiDocumentManager.getInstance(myProject).getDocument(myReturnTypeCodeFragment);
  myReturnTypeField=new EditorTextField(document,myProject,myReturnTypeCodeFragment.getFileType());
  myNameField.setText(myMethod.getName());
  final GrTypeElement element=myMethod.getReturnTypeElementGroovy();
  if (element != null) {
    myReturnTypeField.setText(element.getText());
  }
  myReturnTypeLabel=new JLabel();
  myReturnTypeLabel.setLabelFor(myReturnTypeField);
  myNameLabel=new JLabel();
  myNameLabel.setLabelFor(myNameField);
  final DocumentListener listener=new DocumentListener(){
    @Override public void beforeDocumentChange(    DocumentEvent event){
    }
    @Override public void documentChanged(    DocumentEvent event){
      updateSignature();
    }
  }
;
  myReturnTypeField.addDocumentListener(listener);
  myNameField.addDocumentListener(listener);
}
