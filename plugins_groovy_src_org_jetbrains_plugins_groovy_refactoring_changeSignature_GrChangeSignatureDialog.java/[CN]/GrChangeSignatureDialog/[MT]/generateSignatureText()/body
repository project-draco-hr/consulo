{
  String name=getNewName();
  String type=myReturnTypeField.getText().trim();
  StringBuilder builder=new StringBuilder();
  builder.append(myVisibilityPanel.getVisibility()).append(' ');
  if (!type.isEmpty()) {
    builder.append(type).append(' ');
  }
  builder.append(name).append('(');
  final List<GrTableParameterInfo> infos=myParameterModel.getParameterInfos();
  if (infos.size() > 0) {
    final List<String> paramsText=ContainerUtil.map(infos,new Function<GrTableParameterInfo,String>(){
      public String fun(      GrTableParameterInfo grParameterInfo){
        return generateParameterText(grParameterInfo);
      }
    }
);
    builder.append("\n").append(INDENT);
    builder.append(StringUtil.join(paramsText,",\n" + INDENT));
    builder.append('\n');
  }
  builder.append(')');
  final PsiTypeCodeFragment[] exceptions=myExceptionTableModel.getTypeCodeFragments();
  if (exceptions.length > 0) {
    builder.append("\nthrows\n");
    final List<String> exceptionNames=ContainerUtil.map(exceptions,new Function<PsiTypeCodeFragment,String>(){
      public String fun(      PsiTypeCodeFragment fragment){
        return fragment.getText();
      }
    }
);
    builder.append(INDENT).append(StringUtil.join(exceptionNames,",\n" + INDENT));
  }
  return builder.toString();
}
