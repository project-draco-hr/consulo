{
  int offset=editor.getCaretModel().getOffset();
  String s=editor.getDocument().getCharsSequence().subSequence(startOffset,offset).toString();
  int index=0;
  while (index < s.length() && Character.isWhitespace(s.charAt(index))) {
    index++;
  }
  String key=s.substring(index);
  int lastWhitespaceIndex=-1;
  int lastQuoteIndex=-1;
  int lastApostropheIndex=-1;
  boolean inBrackets=false;
  int bracesStack=0;
  for (int i=0; i < key.length(); i++) {
    char c=key.charAt(i);
    if (lastQuoteIndex >= 0 || lastApostropheIndex >= 0) {
      if (c == '"') {
        lastQuoteIndex=-1;
      }
 else       if (c == '\'')       lastApostropheIndex=-1;
    }
 else     if (Character.isWhitespace(c)) {
      lastWhitespaceIndex=i;
    }
 else     if (c == '"') {
      lastQuoteIndex=i;
    }
 else     if (c == '\'') {
      lastApostropheIndex=i;
    }
 else     if (c == '[') {
      inBrackets=true;
    }
 else     if (c == ']' && inBrackets) {
      lastWhitespaceIndex=-1;
      inBrackets=false;
    }
 else     if (c == '{') {
      bracesStack++;
    }
 else     if (c == '}' && bracesStack > 0) {
      bracesStack--;
      if (bracesStack == 0) {
        lastWhitespaceIndex=-1;
      }
    }
  }
  if (lastQuoteIndex >= 0 || lastApostropheIndex >= 0) {
    int max=Math.max(lastQuoteIndex,lastApostropheIndex);
    return max < key.length() - 1 ? key.substring(max) : null;
  }
  if (lastWhitespaceIndex >= 0 && lastWhitespaceIndex < key.length() - 1) {
    return key.substring(lastWhitespaceIndex + 1);
  }
  return key;
}
