{
  final Converter<T> converter=myGenericValue.getConverter();
  if (converter instanceof ResolvingConverter) {
    final ResolvingConverter<T> resolvingConverter=(ResolvingConverter<T>)converter;
    final ConvertContext convertContext=new ConvertContextImpl(DomManagerImpl.getDomInvocationHandler(myGenericValue));
    final Collection<T> variants=resolvingConverter.getVariants(convertContext);
    if (!variants.isEmpty()) {
      final Collection<String> strings=ContainerUtil.findAll(ContainerUtil.map(variants,new Function<T,String>(){
        public String fun(        final T s){
          return converter.toString(s,convertContext);
        }
      }
),new Condition<String>(){
        public boolean value(        final String object){
          return object != null;
        }
      }
);
      if (!strings.isEmpty()) {
        return strings.toArray(new String[strings.size()]);
      }
    }
  }
  return super.getVariants();
}
