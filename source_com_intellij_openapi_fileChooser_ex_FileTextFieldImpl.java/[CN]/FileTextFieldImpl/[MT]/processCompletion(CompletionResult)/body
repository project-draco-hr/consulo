{
  result.myToComplete=new ArrayList<LookupFile>();
  String typed=result.myCompletionBase;
  final LookupFile current=getClosestParent(typed);
  result.myClosestParent=current;
  if (current == null)   return;
  if (typed == null || typed.length() == 0)   return;
  final String typedText=myFinder.normalize(typed);
  final String parentText=current.getAbsolutePath();
  if (!typedText.toUpperCase().startsWith(parentText.toUpperCase()))   return;
  String prefix=typedText.substring(parentText.length());
  if (prefix.startsWith(myFinder.getSeparator())) {
    prefix=prefix.substring(myFinder.getSeparator().length());
  }
 else   if (typed.endsWith(myFinder.getSeparator())) {
    prefix="";
  }
  final String effectivePrefix=prefix.toUpperCase();
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      final List<LookupFile> files=current.getChildren(new LookupFilter(){
        public boolean isAccepted(        final LookupFile file){
          return myFilter.isAccepted(file) && file.getName().toUpperCase().startsWith(effectivePrefix);
        }
      }
);
      for (      LookupFile each : files) {
        result.myToComplete.add(each);
      }
    }
  }
);
}
