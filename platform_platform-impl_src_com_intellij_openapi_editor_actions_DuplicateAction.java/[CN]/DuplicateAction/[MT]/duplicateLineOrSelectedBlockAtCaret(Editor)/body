{
  Document document=editor.getDocument();
  CaretModel caretModel=editor.getCaretModel();
  ScrollingModel scrollingModel=editor.getScrollingModel();
  if (editor.getSelectionModel().hasSelection()) {
    int start=editor.getSelectionModel().getSelectionStart();
    int end=editor.getSelectionModel().getSelectionEnd();
    String s=document.getCharsSequence().subSequence(start,end).toString();
    document.insertString(end,s);
    caretModel.moveToOffset(end + s.length());
    scrollingModel.scrollToCaret(ScrollType.RELATIVE);
    editor.getSelectionModel().removeSelection();
    editor.getSelectionModel().setSelection(end,end + s.length());
  }
 else {
    Pair<LogicalPosition,LogicalPosition> lines=EditorUtil.calcCaretLinesRange(editor);
    int offset=caretModel.getOffset();
    LogicalPosition lineStart=lines.first;
    LogicalPosition nextLineStart=lines.second;
    int start=editor.logicalPositionToOffset(lineStart);
    int end=editor.logicalPositionToOffset(nextLineStart);
    String s=document.getCharsSequence().subSequence(start,end).toString();
    final int lineToCheck=nextLineStart.line - 1;
    int newOffset=end + offset - start;
    if (lineToCheck == document.getLineCount() || document.getLineSeparatorLength(lineToCheck) == 0) {
      s="\n" + s;
      newOffset++;
    }
    document.insertString(end,s);
    caretModel.moveToOffset(newOffset);
    scrollingModel.scrollToCaret(ScrollType.RELATIVE);
  }
}
