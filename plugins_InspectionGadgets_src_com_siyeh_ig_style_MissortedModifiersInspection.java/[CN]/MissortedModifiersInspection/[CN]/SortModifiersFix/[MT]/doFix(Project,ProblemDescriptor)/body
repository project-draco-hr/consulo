{
  final PsiModifierList modifierList=(PsiModifierList)descriptor.getPsiElement();
  final List<String> modifiers=new ArrayList<String>();
  final PsiElement[] children=modifierList.getChildren();
  for (  final PsiElement child : children) {
    if (child instanceof PsiJavaToken) {
      modifiers.add(child.getText());
    }
    if (child instanceof PsiAnnotation) {
      modifiers.add(0,child.getText());
    }
  }
  Collections.sort(modifiers,new ModifierComparator());
  @NonNls final StringBuffer buffer=new StringBuffer();
  for (  String modifier : modifiers) {
    buffer.append(modifier);
    buffer.append(' ');
  }
  final PsiManager manager=modifierList.getManager();
  final PsiElementFactory factory=manager.getElementFactory();
  buffer.append("void x() {}");
  final String text=buffer.toString();
  final PsiMethod method=factory.createMethodFromText(text,modifierList);
  final PsiModifierList newModifierList=method.getModifierList();
  modifierList.replace(newModifierList);
}
