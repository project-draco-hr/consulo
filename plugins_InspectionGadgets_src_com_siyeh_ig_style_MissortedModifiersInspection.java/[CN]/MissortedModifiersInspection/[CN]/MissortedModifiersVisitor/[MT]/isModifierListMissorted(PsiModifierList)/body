{
  if (modifierList == null) {
    return false;
  }
  final List<PsiElement> simpleModifiers=new ArrayList<PsiElement>();
  final PsiElement[] children=modifierList.getChildren();
  for (  final PsiElement child : children) {
    if (child instanceof PsiJavaToken) {
      simpleModifiers.add(child);
    }
    if (child instanceof PsiAnnotation) {
      if (simpleModifiers.size() != 0) {
        return true;
      }
    }
  }
  int currentModifierIndex=-1;
  for (  Object simpleModifier : simpleModifiers) {
    final PsiJavaToken token=(PsiJavaToken)simpleModifier;
    final String text=token.getText();
    final Integer modifierIndex=s_modifierOrder.get(text);
    if (modifierIndex == null) {
      return false;
    }
    final int nextModifierIndex=modifierIndex;
    if (currentModifierIndex >= nextModifierIndex) {
      return true;
    }
    currentModifierIndex=nextModifierIndex;
  }
  return false;
}
