{
  final Set<ReferencerItem> set=new THashSet<ReferencerItem>();
  int classesCount=in.readInt();
  while (classesCount-- > 0) {
    set.add(new ReferencerItem(in.readInt()));
  }
  int fieldsCount=in.readInt();
  while (fieldsCount-- > 0) {
    final int fieldName=in.readInt();
    int referencersCount=in.readInt();
    while (referencersCount-- > 0) {
      set.add(new FieldReferencerItem(in.readInt(),fieldName));
    }
  }
  int methodsCount=in.readInt();
  while (methodsCount-- > 0) {
    final int methodName=in.readInt();
    final int methodDescriptor=in.readInt();
    int referensersCount=in.readInt();
    while (referensersCount-- > 0) {
      set.add(new MethodReferencerItem(in.readInt(),methodName,methodDescriptor));
    }
  }
  boolean needsCompacting=false;
  final DataInputStream _in=(DataInputStream)in;
  while (_in.available() > 0) {
    needsCompacting=true;
    final int qName=_in.readInt();
    if (qName < 0) {
      removeAllReferencerItems(set,-qName);
    }
 else {
      final byte kind=_in.readByte();
      if (kind == FIELD) {
        set.add(new FieldReferencerItem(qName,_in.readInt()));
      }
 else       if (kind == METHOD) {
        final int name=_in.readInt();
        final int descriptor=_in.readInt();
        set.add(new MethodReferencerItem(qName,name,descriptor));
      }
 else       if (kind == CLASS) {
        set.add(new ReferencerItem(qName));
      }
    }
  }
  return new DependenciesSet(set,needsCompacting);
}
