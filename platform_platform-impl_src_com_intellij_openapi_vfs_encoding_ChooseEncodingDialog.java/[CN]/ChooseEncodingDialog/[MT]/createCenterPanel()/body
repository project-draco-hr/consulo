{
  AbstractListModel model=new AbstractListModel(){
    @Override public int getSize(){
      return myCharsets.length;
    }
    @Override public Object getElementAt(    int i){
      return myCharsets[i];
    }
  }
;
  myList.setModel(model);
  TreeUIHelper.getInstance().installListSpeedSearch(myList);
  myList.setCellRenderer(new DefaultListCellRenderer(){
    @Override public Component getListCellRendererComponent(    final JList list,    final Object value,    final int index,    final boolean isSelected,    final boolean cellHasFocus){
      Component component=super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      Charset charset=(Charset)value;
      setText(charset.displayName());
      return component;
    }
  }
);
  if (myDefaultCharset != null) {
    myList.setSelectedValue(myDefaultCharset,true);
  }
  return myPanel;
}
