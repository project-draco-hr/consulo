{
  if (refElement instanceof PsiField && place instanceof PsiReferenceExpression) {
    final PsiField psiField=(PsiField)refElement;
    final PsiClass containingClass=psiField.getContainingClass();
    if (containingClass != null) {
      if (PsiUtil.isOnAssignmentLeftHand((PsiExpression)place)) {
        final PsiMethod setterPrototype=PropertyUtil.generateSetterPrototype(psiField);
        final PsiMethod setter=containingClass.findMethodBySignature(setterPrototype,true);
        if (setter != null && PsiUtil.isAccessible(setter,place,accessObjectClass)) {
          QuickFixAction.registerQuickFixAction(error,QUICK_FIX_FACTORY.createReplaceInaccessibleFieldWithGetterSetterFix(place,setter,true));
        }
      }
 else       if (PsiUtil.isAccessedForReading((PsiExpression)place)) {
        final PsiMethod getterPrototype=PropertyUtil.generateGetterPrototype(psiField);
        final PsiMethod getter=containingClass.findMethodBySignature(getterPrototype,true);
        if (getter != null && PsiUtil.isAccessible(getter,place,accessObjectClass)) {
          QuickFixAction.registerQuickFixAction(error,QUICK_FIX_FACTORY.createReplaceInaccessibleFieldWithGetterSetterFix(place,getter,false));
        }
      }
    }
  }
}
