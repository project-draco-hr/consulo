{
  PsiMethod method=null;
  PsiLambdaExpression lambda=null;
  PsiElement parent=statement.getParent();
  while (true) {
    if (parent instanceof PsiFile)     break;
    if (parent instanceof PsiClassInitializer)     break;
    if (parent instanceof PsiLambdaExpression) {
      lambda=(PsiLambdaExpression)parent;
      break;
    }
    if (parent instanceof PsiMethod) {
      method=(PsiMethod)parent;
      break;
    }
    parent=parent.getParent();
  }
  String description;
  HighlightInfo errorResult=null;
  if (method == null && lambda != null) {
  }
 else   if (method == null && !(parent instanceof ServerPageFile)) {
    description=JavaErrorMessages.message("return.outside.method");
    errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(statement).descriptionAndTooltip(description).create();
  }
 else {
    PsiType returnType=method != null ? method.getReturnType() : null;
    boolean isMethodVoid=returnType == null || PsiType.VOID.equals(returnType);
    final PsiExpression returnValue=statement.getReturnValue();
    if (returnValue != null) {
      PsiType valueType=returnValue.getType();
      if (isMethodVoid) {
        description=JavaErrorMessages.message("return.from.void.method");
        errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(statement).descriptionAndTooltip(description).create();
        if (valueType != null) {
          QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createMethodReturnFix(method,valueType,true));
        }
      }
 else {
        TextRange textRange=statement.getTextRange();
        errorResult=checkAssignability(returnType,valueType,returnValue,textRange,returnValue.getStartOffsetInParent());
        if (errorResult != null && valueType != null) {
          QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createMethodReturnFix(method,valueType,true));
          registerChangeParameterClassFix(returnType,valueType,errorResult);
          if (returnType instanceof PsiArrayType && TypeConversionUtil.isAssignable(((PsiArrayType)returnType).getComponentType(),valueType)) {
            QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createSurroundWithArrayFix(null,returnValue));
          }
        }
      }
    }
 else {
      if (!isMethodVoid) {
        description=JavaErrorMessages.message("missing.return.value");
        errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(statement).descriptionAndTooltip(description).navigationShift(PsiKeyword.RETURN.length()).create();
        QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createMethodReturnFix(method,PsiType.VOID,true));
      }
    }
  }
  return errorResult;
}
