{
  final ErrorReporter errorReporter=new ProjectBasedErrorReporter(project);
  final Style style=styleData.getStyle();
  final Map<AndroidAttributeInfo,String> attrMap=AndroidRefactoringUtil.computeAttributeMap(style,new ProjectBasedErrorReporter(project),AndroidBundle.message("android.find.style.applications.title"));
  if (attrMap == null || attrMap.size() == 0) {
    return;
  }
  final AndroidFacet facet=styleData.getFacet();
  final Module module=facet.getModule();
  final StyleRefData parentStyleRef=AndroidRefactoringUtil.getParentStyle(style);
  PsiElement parentStyleAttrName=null;
  if (parentStyleRef != null) {
    parentStyleAttrName=resolveStyleRef(parentStyleRef,facet);
    if (parentStyleAttrName == null) {
      errorReporter.report("Cannot resolve parent style '" + parentStyleRef.getStyleName() + "'",AndroidBundle.message("android.find.style.applications.title"));
      return;
    }
  }
  final AndroidFindStyleApplicationsProcessor processor=new AndroidFindStyleApplicationsProcessor(module,attrMap,styleData.getName(),tag,styleData.getNameAttrValue(),parentStyleAttrName,context);
  final VirtualFile contextVFile=context != null ? context.getVirtualFile() : null;
  if (testConfig != null) {
    processor.configureScope(testConfig.getScope(),contextVFile);
    processor.run();
    return;
  }
  processor.setPreviewUsages(true);
  final boolean showModuleRadio=AndroidFindStyleApplicationsProcessor.getAllModulesToScan(module).size() > 1;
  if (showModuleRadio || contextVFile != null) {
    final AndroidFindStyleApplicationsDialog dialog=new AndroidFindStyleApplicationsDialog(contextVFile,processor,showModuleRadio);
    dialog.show();
  }
 else {
    processor.run();
  }
}
