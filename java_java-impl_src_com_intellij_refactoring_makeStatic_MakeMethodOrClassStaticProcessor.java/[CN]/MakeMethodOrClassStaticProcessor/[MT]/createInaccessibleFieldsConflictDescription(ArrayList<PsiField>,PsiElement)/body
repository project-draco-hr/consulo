{
  if (inaccessible.size() == 1) {
    final PsiField field=inaccessible.get(0);
    return Collections.<PsiElement,String>singletonMap(field,RefactoringBundle.message("field.0.is.not.accessible",CommonRefactoringUtil.htmlEmphasize(field.getName()),RefactoringUIUtil.getDescription(container,true)));
  }
 else {
    Map<PsiElement,String> result=new HashMap<PsiElement,String>();
    for (int j=0; j < inaccessible.size(); j++) {
      PsiField field=inaccessible.get(j);
      result.put(field,RefactoringBundle.message("field.0.is.not.accessible",CommonRefactoringUtil.htmlEmphasize(field.getName()),RefactoringUIUtil.getDescription(container,true)));
    }
    return result;
  }
}
