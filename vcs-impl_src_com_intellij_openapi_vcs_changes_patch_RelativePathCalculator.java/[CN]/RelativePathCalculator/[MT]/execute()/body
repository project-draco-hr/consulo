{
  if (myShifted == null || myBase == null) {
    myResult=null;
    return;
  }
  if (myShifted.equals(myBase)) {
    myResult=".";
    myRename=false;
    return;
  }
  final String[] baseParts=split(myBase);
  final String[] shiftedParts=split(myShifted);
  myRename=checkRename(baseParts,shiftedParts);
  int cnt=0;
  while (true) {
    if ((baseParts.length <= cnt) || (shiftedParts.length <= cnt)) {
      return;
    }
    if (!baseParts[cnt].equals(shiftedParts[cnt])) {
      break;
    }
    ++cnt;
  }
  final StringBuilder sb=new StringBuilder();
  for (int i=0; i < (baseParts.length - cnt - 1); i++) {
    sb.append("../");
  }
  for (int i=cnt; i < shiftedParts.length; i++) {
    final String shiftedPart=shiftedParts[i];
    sb.append(shiftedPart);
    if (i < (shiftedParts.length - 1)) {
      sb.append('/');
    }
  }
  myResult=sb.toString();
}
