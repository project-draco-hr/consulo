{
  PostfixTemplateProvider postfixTemplateProvider=myExtensionPoint.getInstance();
  if (postfixTemplateProvider == null) {
    return null;
  }
  OnePixelSplitter splitter=new OnePixelSplitter();
  splitter.setSplitterProportionKey("PostfixTemplatesChildConfigurable.splitter");
  myCheckBoxList=new CheckBoxList<PostfixTemplate>();
  splitter.setFirstComponent(ScrollPaneFactory.createScrollPane(myCheckBoxList,true));
  myPostfixDescriptionPanel=new PostfixDescriptionPanel();
  splitter.setSecondComponent(myPostfixDescriptionPanel.getComponent());
  myCheckBoxList.setItems(postfixTemplateProvider.getTemplates(),new Function<PostfixTemplate,String>(){
    @Override public String fun(    PostfixTemplate postfixTemplate){
      return postfixTemplate.getPresentableName();
    }
  }
,new Function<PostfixTemplate,Boolean>(){
    @Override public Boolean fun(    PostfixTemplate postfixTemplate){
      return Boolean.TRUE;
    }
  }
);
  myCheckBoxList.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      PostfixTemplate itemAt=(PostfixTemplate)myCheckBoxList.getItemAt(myCheckBoxList.getSelectedIndex());
      myPostfixDescriptionPanel.reset(PostfixTemplateMetaData.createMetaData(itemAt));
    }
  }
);
  return splitter;
}
