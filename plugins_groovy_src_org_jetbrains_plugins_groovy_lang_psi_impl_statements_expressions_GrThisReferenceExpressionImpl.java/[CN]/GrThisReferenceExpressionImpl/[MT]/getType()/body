{
  final GrReferenceExpression qualifier=getQualifier();
  if (qualifier == null) {
    GroovyPsiElement context=PsiTreeUtil.getParentOfType(this,GrTypeDefinition.class,GroovyFile.class);
    if (context instanceof GrTypeDefinition) {
      return createType((PsiClass)context);
    }
 else     if (context instanceof GroovyFile) {
      return createType(((GroovyFile)context).getScriptClass());
    }
  }
 else {
    final PsiElement resolved=qualifier.resolve();
    if (resolved instanceof PsiClass) {
      return JavaPsiFacade.getElementFactory(getProject()).createType((PsiClass)resolved);
    }
 else {
      try {
        return JavaPsiFacade.getElementFactory(getProject()).createTypeFromText(qualifier.getText(),this);
      }
 catch (      IncorrectOperationException e) {
        return null;
      }
    }
  }
  return null;
}
