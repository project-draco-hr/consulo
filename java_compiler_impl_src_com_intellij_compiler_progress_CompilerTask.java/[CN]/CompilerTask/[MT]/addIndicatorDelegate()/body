{
  ((ProgressIndicatorEx)myIndicator).addStateDelegate(new ProgressIndicatorBase(){
    public void cancel(){
      super.cancel();
      closeUI();
      stopAppIconProgress();
    }
    public void stop(){
      super.stop();
      if (!isCanceled()) {
        closeUI();
      }
      stopAppIconProgress();
    }
    private void stopAppIconProgress(){
      AppIcon appIcon=AppIcon.getInstance();
      if (appIcon.hideProgress(APP_ICON_ID)) {
        if (myErrorCount > 0) {
          appIcon.setBadge(String.valueOf(myErrorCount));
          appIcon.requestAttention(true);
        }
 else {
          appIcon.setBadge(null);
        }
      }
    }
    public void setText(    final String text){
      updateProgressText();
    }
    public void setText2(    final String text){
      updateProgressText();
    }
    public void setFraction(    final double fraction){
      updateProgressText();
      AppIcon.getInstance().setProgress(APP_ICON_ID,AppIconScheme.Progress.BUILD,fraction,true);
    }
    protected void onProgressChange(){
      prepareMessageView();
    }
  }
);
}
