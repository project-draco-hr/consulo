{
  ProgressIndicator indicator=myIndicator;
  if (!(indicator instanceof ProgressIndicatorEx))   return;
  ((ProgressIndicatorEx)indicator).addStateDelegate(new ProgressIndicatorBase(){
    public void cancel(){
      super.cancel();
      closeUI();
      stopAppIconProgress();
    }
    public void stop(){
      super.stop();
      if (!isCanceled()) {
        closeUI();
      }
      stopAppIconProgress();
    }
    private void stopAppIconProgress(){
      UIUtil.invokeLaterIfNeeded(new Runnable(){
        public void run(){
          AppIcon appIcon=AppIcon.getInstance();
          if (appIcon.hideProgress(APP_ICON_ID)) {
            if (myErrorCount > 0) {
              appIcon.setErrorBadge(String.valueOf(myErrorCount));
              appIcon.requestAttention(true);
            }
 else {
              appIcon.setOkBadge(true);
              appIcon.requestAttention(false);
            }
          }
        }
      }
);
    }
    public void setText(    final String text){
      super.setText(text);
      updateProgressText();
    }
    public void setText2(    final String text){
      super.setText2(text);
      updateProgressText();
    }
    public void setFraction(    final double fraction){
      super.setFraction(fraction);
      updateProgressText();
      UIUtil.invokeLaterIfNeeded(new Runnable(){
        public void run(){
          AppIcon.getInstance().setProgress(APP_ICON_ID,AppIconScheme.Progress.BUILD,fraction,true);
        }
      }
);
    }
    protected void onProgressChange(){
      prepareMessageView();
    }
  }
);
}
