{
  ((ProgressIndicatorEx)myIndicator).addStateDelegate(new ProgressIndicatorBase(){
    public void cancel(){
      super.cancel();
      closeUI();
      stopAppIconProgress();
    }
    public void stop(){
      super.stop();
      if (!isCanceled()) {
        closeUI();
      }
      stopAppIconProgress();
    }
    private void stopAppIconProgress(){
      if (isAppIconProcess()) {
        AppIcon appIcon=AppIcon.getInstance();
        if (appIcon.hideProgress(myIdeFrame,APP_ICON_ID)) {
          if (myErrorCount > 0) {
            appIcon.setBadge(String.valueOf(myErrorCount));
            appIcon.requestAttention(true);
          }
 else {
            appIcon.setBadge(null);
          }
        }
      }
    }
    public void setText(    final String text){
      updateProgressText();
    }
    public void setText2(    final String text){
      updateProgressText();
    }
    public void setFraction(    final double fraction){
      updateProgressText();
      if (isAppIconProcess()) {
        AppIcon.getInstance().setProgress(myIdeFrame,APP_ICON_ID,getAppIconScheme(),fraction,true);
      }
    }
    protected void onProgressChange(){
      prepareMessageView();
    }
  }
);
}
