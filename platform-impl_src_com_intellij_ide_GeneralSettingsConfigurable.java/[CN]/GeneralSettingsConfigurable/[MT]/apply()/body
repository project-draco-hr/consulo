{
  GeneralSettings settings=GeneralSettings.getInstance();
  settings.setBrowserPath(myComponent.myBrowserPathField.getText());
  settings.setReopenLastProject(myComponent.myChkReopenLastProject.isSelected());
  settings.setSyncOnFrameActivation(myComponent.myChkSyncOnFrameActivation.isSelected());
  settings.setSaveOnFrameDeactivation(myComponent.myChkSaveOnFrameDeactivation.isSelected());
  settings.setUseDefaultBrowser(myComponent.myUseSystemDefaultBrowser.isSelected());
  settings.setConfirmExit(myComponent.myConfirmExit.isSelected());
  settings.setSearchInBackground(myComponent.mySearchInBackground.isSelected());
  settings.setAutoSaveIfInactive(myComponent.myChkAutoSaveIfInactive.isSelected());
  try {
    int newInactiveTimeout=Integer.parseInt(myComponent.myTfInactiveTimeout.getText());
    if (newInactiveTimeout > 0) {
      settings.setInactiveTimeout(newInactiveTimeout);
    }
  }
 catch (  NumberFormatException e) {
  }
  final Object item=myComponent.myEncodingsCombo.getSelectedItem();
  if (SYSTEM_DEFAULT_ENCODING.equals(item)) {
    EncodingManager.getInstance().setDefaultCharsetName("");
  }
 else   if (item != null) {
    EncodingManager.getInstance().setDefaultCharsetName(((Charset)item).name());
  }
}
