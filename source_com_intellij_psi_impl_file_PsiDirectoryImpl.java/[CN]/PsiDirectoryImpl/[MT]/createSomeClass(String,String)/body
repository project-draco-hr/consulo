{
  checkCreateClassOrInterface(name);
  CodeStyleManager styleManager=CodeStyleManager.getInstance(myManager.getProject());
  FileTemplate template=FileTemplateManager.getInstance().getInternalTemplate(templateName);
  boolean adjustCode=template.isAdjust();
  Properties defaultProperties=FileTemplateManager.getInstance().getDefaultProperties();
  Properties properties=new Properties(defaultProperties);
  FileTemplateUtil.setPackageNameAttribute(properties,this);
  properties.setProperty(TEMPLATE_NAME_PROPERTY,name);
  String text;
  try {
    text=template.getText(properties);
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to load template for " + FileTemplateManager.getInstance().internalTemplateToSubject(templateName),e);
  }
  PsiElementFactory factory=myManager.getElementFactory();
  String ext=StdFileTypes.JAVA.getDefaultExtension();
  final PsiJavaFile file=(PsiJavaFile)factory.createFileFromText(name + "." + ext,text);
  PsiClass[] classes=file.getClasses();
  if (classes.length != 1 || !classes[0].getName().equals(name)) {
    throw new IncorrectOperationException(getIncorrectTemplateMessage(templateName));
  }
  if (adjustCode) {
    styleManager.reformat(file);
  }
  PsiJavaFile newFile=(PsiJavaFile)add(file);
  return newFile.getClasses()[0];
}
