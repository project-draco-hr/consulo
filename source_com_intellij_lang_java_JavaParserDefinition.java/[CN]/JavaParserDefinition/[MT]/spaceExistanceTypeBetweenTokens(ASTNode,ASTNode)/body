{
  final PsiFile containingFile=left.getTreeParent().getPsi().getContainingFile();
  final Lexer lexer;
  if (containingFile instanceof PsiJavaFile)   lexer=new JavaLexer(((PsiJavaFile)containingFile).getLanguageLevel());
 else   lexer=new JavaLexer(LanguageLevel.HIGHEST);
  if (right.getElementType() == JavaDocTokenType.DOC_TAG_VALUE_SHARP_TOKEN)   return SpaceRequirements.MUST_NOT;
  final SpaceRequirements spaceRequirements=LanguageUtil.canStickTokensTogetherByLexer(left,right,lexer,0);
  if (left.getElementType() == JavaTokenType.END_OF_LINE_COMMENT)   return SpaceRequirements.MUST_LINE_BREAK;
  if (left.getElementType() == JavaDocTokenType.DOC_COMMENT_DATA) {
    String text=left.getText();
    if (text.length() > 0 && Character.isWhitespace(text.charAt(text.length() - 1))) {
      return SpaceRequirements.MAY;
    }
  }
  if (right.getElementType() == JavaDocTokenType.DOC_COMMENT_DATA) {
    String text=right.getText();
    if (text.length() > 0 && Character.isWhitespace(text.charAt(0))) {
      return SpaceRequirements.MAY;
    }
  }
  return spaceRequirements;
}
