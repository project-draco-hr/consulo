{
  if (element instanceof PsiClass) {
    final PsiClass aClass=(PsiClass)element;
    final String name=aClass.getName();
    if (myClassName.equals(name)) {
      boolean accessible;
      if (myPlace != null) {
        accessible=checkAccessibility(aClass);
      }
 else {
        accessible=true;
      }
      if (accessible) {
        myAccessibleResultsFlag=true;
        if (!myGrouped) {
          myCandidates=null;
          myResult=new JavaResolveResult[]{new CandidateInfo(aClass,substitutor,null,null,false,myCurrentFileContext)};
          return false;
        }
      }
      myResult=null;
      if (myCandidates == null) {
        myCandidates=new ArrayList<CandidateInfo>();
      }
 else {
        String fqName=aClass.getQualifiedName();
        if (fqName != null) {
          final Iterator iterator=myCandidates.iterator();
          while (iterator.hasNext()) {
            final ClassCandidateInfo info=(ClassCandidateInfo)iterator.next();
            if (fqName.equals(info.getCandidate().getQualifiedName())) {
              return true;
            }
          }
        }
      }
      myCandidates.add(new ClassCandidateInfo(aClass,substitutor,!accessible,myGrouped,myCurrentFileContext));
    }
  }
  return true;
}
