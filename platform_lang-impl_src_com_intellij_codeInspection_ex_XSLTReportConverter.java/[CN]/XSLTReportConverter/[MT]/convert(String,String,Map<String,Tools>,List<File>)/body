{
  if (outputPath == null) {
    throw new ConversionException("Output path isn't specified.");
  }
  final SAXTransformerFactory transformerFactory=(SAXTransformerFactory)TransformerFactory.newInstance();
  final Source xslSource;
  final Transformer transformer;
  try {
    final File xsltSchemeFile=new File(myXSLTSchemePath);
    if (!xsltSchemeFile.exists()) {
      throw new ConversionException("Cannot find XSLT scheme: " + myXSLTSchemePath);
    }
    xslSource=new StreamSource(xsltSchemeFile);
    transformer=transformerFactory.newTransformer(xslSource);
  }
 catch (  TransformerConfigurationException e) {
    throw new ConversionException("Fail to load XSLT scheme.");
  }
  final Writer w;
  final File outputFile=new File(outputPath);
  try {
    w=new FileWriter(outputFile);
  }
 catch (  IOException e) {
    throw new ConversionException("Cannot edit file: " + outputFile.getPath());
  }
  try {
    for (    File inspectionData : inspectionsResults) {
      if (inspectionData.isDirectory()) {
        warn("Folder isn't expected here: " + inspectionData.getName());
        continue;
      }
      final String fileNameWithoutExt=FileUtil.getNameWithoutExtension(inspectionData);
      if (InspectionApplication.DESCRIPTIONS.equals(fileNameWithoutExt)) {
        continue;
      }
      try {
        transformer.transform(new StreamSource(inspectionData),new StreamResult(w));
      }
 catch (      TransformerException e) {
        throw new ConversionException("Cannot apply XSL transformation: " + e.getMessage());
      }
    }
  }
  finally {
    try {
      w.close();
    }
 catch (    IOException e) {
      warn("Cannot save inspection results: " + e.getMessage());
    }
  }
}
