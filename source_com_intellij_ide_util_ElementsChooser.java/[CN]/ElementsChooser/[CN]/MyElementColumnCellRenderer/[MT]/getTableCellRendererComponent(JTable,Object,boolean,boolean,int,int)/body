{
  final Color color=UIUtil.getTableFocusCellBackground();
  Component component;
  T t=(T)value;
  try {
    UIManager.put(UIUtil.TABLE_FOCUS_CELL_BACKGROUND_PROPERTY,table.getSelectionBackground());
    component=super.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
    setText(getItemText(t));
    if (component instanceof JLabel) {
      ((JLabel)component).setBorder(noFocusBorder);
    }
  }
  finally {
    UIManager.put(UIUtil.TABLE_FOCUS_CELL_BACKGROUND_PROPERTY,color);
  }
  final MyTableModel model=(MyTableModel)table.getModel();
  component.setEnabled(ElementsChooser.this.isEnabled() && (myColorUnmarkedElements ? model.isElementMarked(row) : true));
  final ElementProperties properties=myElementToPropertiesMap.get(t);
  if (component instanceof JLabel) {
    ((JLabel)component).setIcon(properties != null ? properties.getIcon() : getItemIcon(t));
  }
  component.setForeground(properties != null && properties.getColor() != null ? properties.getColor() : (isSelected ? table.getSelectionForeground() : table.getForeground()));
  return component;
}
