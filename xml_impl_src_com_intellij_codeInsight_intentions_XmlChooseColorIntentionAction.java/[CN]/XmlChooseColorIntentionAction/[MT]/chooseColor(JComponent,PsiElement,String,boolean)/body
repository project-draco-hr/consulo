{
  final XmlAttributeValue literal=PsiTreeUtil.getParentOfType(element,XmlAttributeValue.class,false);
  if (literal == null)   return;
  final String text=StringUtil.unquoteString(literal.getValue());
  final String hexPrefix=text.startsWith("#") ? "#" : "";
  Color oldColor;
  try {
    oldColor=Color.decode(text);
  }
 catch (  NumberFormatException e) {
    oldColor=Color.GRAY;
  }
  Color color=ColorChooser.chooseColor(editorComponent,caption,oldColor,true);
  if (color == null)   return;
  if (!Comparing.equal(color,oldColor)) {
    if (!CodeInsightUtilBase.preparePsiElementForWrite(element))     return;
    final String newText=hexPrefix + ColorUtil.toHex(color);
    final PsiManager manager=literal.getManager();
    final XmlAttribute newAttribute=XmlElementFactory.getInstance(manager.getProject()).createXmlAttribute("name",newText);
    final Runnable replaceRunnable=new Runnable(){
      public void run(){
        literal.replace(newAttribute.getValueElement());
      }
    }
;
    if (startInWriteAction) {
      new WriteCommandAction(element.getProject(),caption){
        @Override protected void run(        Result result) throws Throwable {
          replaceRunnable.run();
        }
      }
.execute();
    }
 else {
      replaceRunnable.run();
    }
  }
}
