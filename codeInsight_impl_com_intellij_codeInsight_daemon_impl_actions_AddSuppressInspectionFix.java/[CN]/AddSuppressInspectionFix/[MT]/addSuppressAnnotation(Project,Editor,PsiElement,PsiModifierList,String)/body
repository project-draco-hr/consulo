{
  PsiAnnotation annotation=modifierList.findAnnotation(SuppressManagerImpl.SUPPRESS_INSPECTIONS_ANNOTATION_NAME);
  if (annotation != null) {
    if (annotation.getText().indexOf("{") == -1) {
      final PsiNameValuePair[] attributes=annotation.getParameterList().getAttributes();
      if (attributes.length == 1) {
        final String suppressedWarnings=attributes[0].getText();
        PsiAnnotation newAnnotation=JavaPsiFacade.getInstance(project).getElementFactory().createAnnotationFromText("@" + SuppressManagerImpl.SUPPRESS_INSPECTIONS_ANNOTATION_NAME + "({"+ suppressedWarnings+ ", \""+ id+ "\"})",container);
        annotation.replace(newAnnotation);
      }
    }
 else {
      final int curlyBraceIndex=annotation.getText().lastIndexOf("}");
      if (curlyBraceIndex > 0) {
        annotation.replace(JavaPsiFacade.getInstance(project).getElementFactory().createAnnotationFromText(annotation.getText().substring(0,curlyBraceIndex) + ", \"" + id+ "\"})",container));
      }
 else       if (!ApplicationManager.getApplication().isUnitTestMode() && editor != null) {
        Messages.showErrorDialog(editor.getComponent(),InspectionsBundle.message("suppress.inspection.annotation.syntax.error",annotation.getText()));
      }
    }
  }
 else {
    annotation=JavaPsiFacade.getInstance(project).getElementFactory().createAnnotationFromText("@" + SuppressManagerImpl.SUPPRESS_INSPECTIONS_ANNOTATION_NAME + "({\""+ id+ "\"})",container);
    modifierList.addBefore(annotation,modifierList.getFirstChild());
    JavaCodeStyleManager.getInstance(project).shortenClassReferences(modifierList);
  }
}
