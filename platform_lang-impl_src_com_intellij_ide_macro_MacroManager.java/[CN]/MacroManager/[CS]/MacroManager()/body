{
  registerMacro(new SourcepathMacro());
  registerMacro(new FileDirMacro());
  registerMacro(new FileExtMacro());
  registerMacro(new FileNameMacro());
  registerMacro(new FileNameWithoutExtension());
  registerMacro(new FilePathMacro());
  registerMacro(new FileDirRelativeToProjectRootMacro());
  registerMacro(new FilePathRelativeToProjectRootMacro());
  registerMacro(new FileDirRelativeToSourcepathMacro());
  registerMacro(new FilePathRelativeToSourcepathMacro());
  registerMacro(new JdkPathMacro());
  registerMacro(new PromptMacro());
  registerMacro(new SourcepathEntryMacro());
  registerMacro(new ProjectFileDirMacro());
  registerMacro(new ProjectNameMacro());
  registerMacro(new ProjectPathMacro());
  registerMacro(new ModuleFilePathMacro());
  registerMacro(new ModuleFileDirMacro());
  registerMacro(new ModuleNameMacro());
  registerMacro(new ModulePathMacro());
  registerMacro(new FileRelativePathMacro());
  registerMacro(new FileRelativeDirMacro());
  registerMacro(new LineNumberMacro());
  registerMacro(new ColumnNumberMacro());
  if (File.separatorChar != '/') {
    registerMacro(new FileDirRelativeToProjectRootMacro2());
    registerMacro(new FilePathRelativeToProjectRootMacro2());
    registerMacro(new FileDirRelativeToSourcepathMacro2());
    registerMacro(new FilePathRelativeToSourcepathMacro2());
    registerMacro(new FileRelativeDirMacro2());
    registerMacro(new FileRelativePathMacro2());
  }
  for (  Macro macro : Extensions.getExtensions(Macro.EP_NAME)) {
    registerMacro(macro);
  }
}
