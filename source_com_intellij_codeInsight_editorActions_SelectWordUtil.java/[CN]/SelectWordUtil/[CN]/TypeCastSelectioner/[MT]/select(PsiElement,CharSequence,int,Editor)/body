{
  List<TextRange> result=new ArrayList<TextRange>();
  result.addAll(expandToWholeLine(editorText,e.getTextRange(),false));
  PsiTypeCastExpression expression=(PsiTypeCastExpression)e;
  PsiElement[] children=expression.getChildren();
  PsiElement lParen=null;
  PsiElement rParen=null;
  for (int i=0; i < children.length; i++) {
    PsiElement child=children[i];
    if (child instanceof PsiJavaToken) {
      PsiJavaToken token=(PsiJavaToken)child;
      if (token.getTokenType() == JavaTokenType.LPARENTH)       lParen=token;
      if (token.getTokenType() == JavaTokenType.RPARENTH)       rParen=token;
    }
  }
  if (lParen != null && rParen != null) {
    result.addAll(expandToWholeLine(editorText,new TextRange(lParen.getTextRange().getStartOffset(),rParen.getTextRange().getEndOffset()),false));
  }
  return result;
}
