{
  List<PsiMethod> prototypes=ContainerUtil.newArrayList();
  for (  PsiField field : parent.getFields()) {
    if (!(field instanceof PsiEnumConstant)) {
      prototypes.add(GenerateMembersUtil.generateGetterPrototype(field));
      prototypes.add(GenerateMembersUtil.generateSetterPrototype(field));
    }
  }
  for (  final PsiMethod prototype : prototypes) {
    if (parent.findMethodBySignature(prototype,false) == null && addedSignatures.add(prototype.getSignature(PsiSubstitutor.EMPTY))) {
      Icon icon=IconDescriptorUpdaters.getIcon(prototype,Iconable.ICON_FLAG_VISIBILITY);
      result.addElement(createGenerateMethodElement(prototype,PsiSubstitutor.EMPTY,icon,"",new InsertHandler<LookupElement>(){
        @Override public void handleInsert(        InsertionContext context,        LookupElement item){
          removeLookupString(context);
          insertGenerationInfos(context,Arrays.asList(new PsiGenerationInfo<PsiMethod>(prototype)));
        }
      }
));
    }
  }
}
