{
  super.init();
  if (myTextSelected == Boolean.TRUE) {
    myRbSelectedText.setSelected(true);
  }
 else {
    if (myFile != null) {
      myRbFile.setSelected(true);
    }
 else {
      myRbDirectory.setSelected(true);
    }
  }
  myCbIncludeSubdirs.setSelected(true);
  myCbOptimizeImports.setSelected(PropertiesComponent.getInstance().getBoolean(LayoutCodeConstants.OPTIMIZE_IMPORTS_KEY,false));
  myCbArrangeEntries.setSelected(myRearrangeAlwaysEnabled || ReformatCodeAction.getLastSavedRearrangeCbState(myProject,myFile));
  myCbOnlyVcsChangedRegions.setSelected(PropertiesComponent.getInstance().getBoolean(LayoutCodeConstants.PROCESS_CHANGED_TEXT_KEY,false));
  ItemListener listener=new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      updateState();
    }
  }
;
  myRbFile.addItemListener(listener);
  myRbSelectedText.addItemListener(listener);
  myRbDirectory.addItemListener(listener);
  myCbIncludeSubdirs.addItemListener(listener);
  updateState();
}
