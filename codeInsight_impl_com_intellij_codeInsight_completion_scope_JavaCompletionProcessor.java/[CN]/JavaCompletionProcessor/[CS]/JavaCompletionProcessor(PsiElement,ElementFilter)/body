{
  mySettings=CodeInsightSettings.getInstance();
  myResults=new ArrayList<CompletionElement>();
  myElement=element;
  myFilter=filter;
  myScope=element;
  if (JavaResolveUtil.isInJavaDoc(myElement))   myMembersFlag=true;
  while (myScope != null && !(myScope instanceof PsiFile || myScope instanceof PsiClass)) {
    myScope=myScope.getContext();
  }
  if (!(element.getContainingFile() instanceof PsiJavaFile)) {
    myMembersFlag=true;
  }
  PsiElement elementParent=element.getContext();
  if (elementParent instanceof PsiReferenceExpression) {
    PsiExpression qualifier=((PsiReferenceExpression)elementParent).getQualifierExpression();
    if (qualifier instanceof PsiSuperExpression) {
      myQualifierClass=JavaResolveUtil.getContextClass(myElement);
      if (myQualifierClass != null) {
        myQualifierType=JavaPsiFacade.getInstance(myElement.getProject()).getElementFactory().createType(myQualifierClass);
      }
    }
 else     if (qualifier != null) {
      myQualifierType=qualifier.getType();
      myQualifierClass=PsiUtil.resolveClassInType(myQualifierType);
      if (myQualifierType == null && qualifier instanceof PsiJavaCodeReferenceElement) {
        final PsiElement target=((PsiJavaCodeReferenceElement)qualifier).resolve();
        if (target instanceof PsiClass) {
          myQualifierClass=(PsiClass)target;
        }
      }
    }
  }
}
