{
  return new DefaultListCellRenderer(){
    public Component getListCellRendererComponent(    final JList list,    final Object value,    final int index,    final boolean isSelected,    final boolean cellHasFocus){
      final JPanel panel=new JPanel(new BorderLayout());
      panel.setOpaque(true);
      final Color bg=isSelected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground();
      panel.setBackground(bg);
      if (value instanceof Map.Entry) {
        final Map.Entry actionWithParentGroup=(Map.Entry)value;
        final AnAction anAction=(AnAction)actionWithParentGroup.getKey();
        final Presentation templatePresentation=anAction.getTemplatePresentation();
        final Icon icon=templatePresentation.getIcon();
        final DataContext dataContext=DataManager.getInstance().getDataContext(myContextComponent);
        final AnActionEvent event=updateActionBeforeShow(anAction,dataContext);
        final Presentation presentation=event.getPresentation();
        final Color fg=defaultActionForeground(isSelected,presentation);
        final JLabel actionLabel=createActionLabel(anAction,templatePresentation.getText(),fg,bg,icon);
        panel.add(actionLabel,BorderLayout.WEST);
        final String groupName=(String)actionWithParentGroup.getValue();
        if (groupName != null) {
          final JLabel groupLabel=new JLabel(groupName);
          groupLabel.setBackground(bg);
          groupLabel.setForeground(fg);
          panel.add(groupLabel,BorderLayout.EAST);
        }
      }
 else       if (value instanceof OptionDescription) {
        String hit=((OptionDescription)value).getHit();
        if (hit == null) {
          hit=((OptionDescription)value).getOption();
        }
        if (hit.length() > 30) {
          hit=hit.substring(0,30) + "...";
        }
        final JBLabel label=new JBLabel(hit.trim());
        label.setIcon(EMPTY_ICON);
        panel.add(label,BorderLayout.WEST);
        panel.add(new JBLabel("Settings"),BorderLayout.EAST);
        if (!isSelected) {
          panel.setBackground(LightColors.SLIGHTLY_GRAY);
        }
      }
 else       if (value instanceof String) {
        final JBLabel label=new JBLabel((String)value);
        label.setIcon(EMPTY_ICON);
        panel.add(label,BorderLayout.WEST);
      }
      return panel;
    }
  }
;
}
