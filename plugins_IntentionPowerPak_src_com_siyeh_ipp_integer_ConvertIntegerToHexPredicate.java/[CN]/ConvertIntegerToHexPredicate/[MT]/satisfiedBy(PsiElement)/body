{
  if (!(element instanceof PsiLiteralExpression)) {
    return false;
  }
  final PsiLiteralExpression expression=(PsiLiteralExpression)element;
  final PsiType type=expression.getType();
  if (type.equals(PsiType.INT) || type.equals(PsiType.LONG)) {
    @NonNls final String text=expression.getText();
    return !(text.startsWith("0x") || text.startsWith("0X"));
  }
  if (type.equals(PsiType.DOUBLE) || type.equals(PsiType.FLOAT)) {
    if (!ClassUtil.classExists("javax.xml.xpath.XPath")) {
      return false;
    }
    final PsiManager manager=expression.getManager();
    final LanguageLevel languageLevel=manager.getEffectiveLanguageLevel();
    if (languageLevel.compareTo(LanguageLevel.JDK_1_5) < 0) {
      return false;
    }
    @NonNls final String text=expression.getText();
    if (text == null) {
      return false;
    }
    return !text.startsWith("0x") && !text.startsWith("0X");
  }
  return false;
}
