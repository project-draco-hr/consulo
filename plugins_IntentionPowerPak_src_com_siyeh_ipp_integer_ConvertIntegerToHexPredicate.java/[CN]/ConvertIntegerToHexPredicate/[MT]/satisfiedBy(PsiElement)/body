{
  if (!(element instanceof PsiLiteralExpression)) {
    return false;
  }
  final PsiLiteralExpression expression=(PsiLiteralExpression)element;
  final PsiType type=expression.getType();
  if (PsiType.INT.equals(type) || PsiType.LONG.equals(type)) {
    @NonNls final String text=expression.getText();
    return !(text.startsWith("0x") || text.startsWith("0X"));
  }
  if (PsiType.DOUBLE.equals(type) || PsiType.FLOAT.equals(type)) {
    if (!ClassUtil.classExists("javax.xml.xpath.XPath")) {
      return false;
    }
    final LanguageLevel languageLevel=PsiUtil.getLanguageLevel(expression);
    if (languageLevel.compareTo(LanguageLevel.JDK_1_5) < 0) {
      return false;
    }
    @NonNls final String text=expression.getText();
    if (text == null) {
      return false;
    }
    return !text.startsWith("0x") && !text.startsWith("0X");
  }
  return false;
}
