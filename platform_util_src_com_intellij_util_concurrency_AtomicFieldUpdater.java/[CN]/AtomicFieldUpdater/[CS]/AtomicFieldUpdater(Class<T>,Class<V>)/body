{
  Field[] declaredFields=ownerClass.getDeclaredFields();
  Field found=null;
  for (  Field field : declaredFields) {
    if (fieldType.isAssignableFrom(field.getType())) {
      if (found == null) {
        found=field;
      }
 else {
        throw new IllegalArgumentException("Two fields of " + fieldType + " found in the "+ ownerClass+ ": "+ found.getName()+ " and "+ field.getName());
      }
    }
  }
  if (found == null) {
    throw new IllegalArgumentException("No field of " + fieldType + " found in the "+ ownerClass);
  }
  found.setAccessible(true);
  if ((found.getModifiers() & Modifier.VOLATILE) == 0) {
    throw new IllegalArgumentException("Field " + found + " in the "+ ownerClass+ " must be volatile");
  }
  if ((found.getModifiers() & (Modifier.STATIC | Modifier.FINAL)) != 0) {
    throw new IllegalArgumentException("Field " + found + " in the "+ ownerClass+ " must be non-final non-static");
  }
  offset=unsafe.objectFieldOffset(found);
}
