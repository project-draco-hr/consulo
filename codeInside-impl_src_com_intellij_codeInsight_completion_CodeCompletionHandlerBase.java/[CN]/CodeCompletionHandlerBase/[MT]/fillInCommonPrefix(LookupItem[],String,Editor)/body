{
  String commonPrefix=null;
  boolean isStrict=false;
  for (  final LookupItem item : items) {
    final String lookupString=item.getLookupString();
    if (!lookupString.toLowerCase().startsWith(prefix.toLowerCase())) {
      return prefix;
    }
    if (commonPrefix != null) {
      int matchingRegLength=lookupString.length();
      while (!lookupString.regionMatches(0,commonPrefix,0,matchingRegLength--))       ;
      commonPrefix=lookupString.substring(0,matchingRegLength + 1);
      if (commonPrefix.length() < lookupString.length()) {
        isStrict=true;
      }
      if (commonPrefix.length() <= prefix.length()) {
        return prefix;
      }
    }
 else {
      commonPrefix=lookupString;
    }
  }
  if (!isStrict)   return prefix;
  int offset=editor.getSelectionModel().hasSelection() ? editor.getSelectionModel().getSelectionStart() : editor.getCaretModel().getOffset();
  int lookupStart=offset - prefix.length();
  editor.getDocument().replaceString(lookupStart,lookupStart + prefix.length(),commonPrefix);
  return commonPrefix;
}
