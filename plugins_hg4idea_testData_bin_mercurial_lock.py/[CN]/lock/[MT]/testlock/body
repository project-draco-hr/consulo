def testlock(self):
    'return id of locker if lock is valid, else None.\n\n        If old-style lock, we cannot tell what machine locker is on.\n        with new-style lock, if locker is on this machine, we can\n        see if locker is alive.  If locker is on this machine but\n        not alive, we can safely break lock.\n\n        The lock file is only deleted when None is returned.\n\n        '
    locker = util.readlock(self.f)
    try:
        (host, pid) = locker.split(':', 1)
    except ValueError:
        return locker
    if (host != lock._host):
        return locker
    try:
        pid = int(pid)
    except ValueError:
        return locker
    if util.testpid(pid):
        return locker
    try:
        l = lock((self.f + '.break'), timeout=0)
        os.unlink(self.f)
        l.release()
    except error.LockError:
        return locker
