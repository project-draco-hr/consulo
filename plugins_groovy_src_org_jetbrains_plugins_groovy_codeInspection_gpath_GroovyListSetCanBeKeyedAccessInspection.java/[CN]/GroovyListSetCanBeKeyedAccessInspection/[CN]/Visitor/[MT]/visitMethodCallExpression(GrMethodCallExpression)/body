{
  super.visitMethodCallExpression(grMethodCallExpression);
  final GrArgumentList args=grMethodCallExpression.getArgumentList();
  if (args == null) {
    return;
  }
  if (args.getExpressionArguments().length != 2) {
    return;
  }
  if (args.getNamedArguments().length != 0) {
    return;
  }
  final GrExpression methodExpression=grMethodCallExpression.getInvokedExpression();
  if (!(methodExpression instanceof GrReferenceExpression)) {
    return;
  }
  final GrReferenceExpression referenceExpression=(GrReferenceExpression)methodExpression;
  final String name=referenceExpression.getReferenceName();
  if (!"set".equals(name)) {
    return;
  }
  final GrExpression qualifier=referenceExpression.getQualifierExpression();
  if (qualifier == null || qualifier instanceof GrThisReferenceExpression || qualifier instanceof GrSuperReferenceExpression) {
    return;
  }
  if (referenceExpression.getDotTokenType() == GroovyTokenTypes.mOPTIONAL_DOT)   return;
  final PsiType type=qualifier.getType();
  if (!InheritanceUtil.isInheritor(type,CommonClassNames.JAVA_UTIL_LIST)) {
    return;
  }
  registerMethodCallError(grMethodCallExpression);
}
