{
  final LinkedHashSet<LookupItem> lookupSet=new LinkedHashSet<LookupItem>();
  final PsiFile file=context.file;
  final PsiManager manager=file.getManager();
  final PsiElement lastElement=file.findElementAt(context.startOffset - 1);
  final Set keywordVariants=new HashSet();
  final PsiElement insertedElement=insertDummyIdentifier(context);
  CompletionData completionData=getCompletionData(context,lastElement);
  context.prefix=findPrefix(insertedElement,context.startOffset,CompletionUtil.DUMMY_IDENTIFIER,completionData);
  if (completionData == null) {
    completionData=getCompletionData(context,lastElement);
  }
  final int dirEndIndex=Math.max(context.prefix.lastIndexOf('/'),context.prefix.lastIndexOf('\\'));
  if (dirEndIndex >= 0) {
    final int protocolIndex=context.prefix.indexOf("://");
    if (protocolIndex == -1 || dirEndIndex > protocolIndex + 2) {
      context.prefix=context.prefix.substring(dirEndIndex + 1);
    }
  }
  if (completionData == null)   return new LookupData(new LookupItem[0],context.prefix);
  complete(context,insertedElement,completionData,lookupSet);
  insertedElement.putUserData(CompletionUtil.COMPLETION_PREFIX,context.prefix);
  completionData.addKeywordVariants(keywordVariants,context,insertedElement);
  CompletionData.completeKeywordsBySet(lookupSet,keywordVariants,context,insertedElement);
  CompletionUtil.highlightMembersOfContainer(lookupSet);
  final LookupItem[] items=lookupSet.toArray(new LookupItem[lookupSet.size()]);
  final LookupData data=new LookupData(items,context.prefix);
  if (myPreferencePolicy == null) {
    myPreferencePolicy=new CompletionPreferencePolicy(manager,items,null,context.prefix);
  }
  data.itemPreferencePolicy=myPreferencePolicy;
  myPreferencePolicy=null;
  return data;
}
