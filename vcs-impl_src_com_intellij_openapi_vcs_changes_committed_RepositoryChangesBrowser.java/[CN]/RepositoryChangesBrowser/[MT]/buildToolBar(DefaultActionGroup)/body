{
  super.buildToolBar(toolBarGroup);
  toolBarGroup.add(new ShowDiffWithLocalAction());
  final Icon editSourceIcon=IconLoader.getIcon("/actions/editSource.png");
  toolBarGroup.add(new EditSourceAction(){
    public void update(    final AnActionEvent event){
      super.update(event);
      event.getPresentation().setIcon(editSourceIcon);
      event.getPresentation().setText("Edit Source");
      if (CommittedChangesBrowserUseCase.IN_AIR.equals(event.getDataContext().getData(CommittedChangesBrowserUseCase.CONTEXT_NAME))) {
        event.getPresentation().setEnabled(false);
      }
    }
    protected Navigatable[] getNavigatables(    final DataContext dataContext){
      Change[] changes=(Change[])dataContext.getData(VcsDataKeys.SELECTED_CHANGES.getName());
      if (changes != null) {
        Collection<Change> changeCollection=Arrays.asList(changes);
        return ChangesUtil.getNavigatableArray(myProject,ChangesUtil.getFilesFromChanges(changeCollection));
      }
      return null;
    }
  }
);
  OpenRepositoryVersionAction action=new OpenRepositoryVersionAction();
  toolBarGroup.add(action);
  ActionGroup group=(ActionGroup)ActionManager.getInstance().getAction("RepositoryChangesBrowserToolbar");
  final AnAction[] actions=group.getChildren(null);
  for (  AnAction anAction : actions) {
    toolBarGroup.add(anAction);
  }
}
