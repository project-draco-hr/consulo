{
  super(new Computable<Pair<CacheEntry,LogicalPosition>>(){
    @Override public Pair<CacheEntry,LogicalPosition> compute(){
      if (targetOffset >= editor.getDocument().getTextLength()) {
        if (cache.isEmpty()) {
          return new Pair<CacheEntry,LogicalPosition>(null,new LogicalPosition(0,0,0,0,0,0,0));
        }
 else {
          CacheEntry lastEntry=cache.get(cache.size() - 1);
          LogicalPosition eager=new LogicalPosition(lastEntry.endLogicalLine,lastEntry.endLogicalColumn + 1,lastEntry.endSoftWrapLinesBefore,lastEntry.endSoftWrapLinesCurrent,lastEntry.endSoftWrapColumnDiff,lastEntry.endFoldedLines,lastEntry.endFoldingColumnDiff);
          return new Pair<CacheEntry,LogicalPosition>(null,eager);
        }
      }
      int i=MappingUtil.getCacheEntryIndexForOffset(targetOffset,editor.getDocument(),cache);
      return new Pair<CacheEntry,LogicalPosition>(cache.get(i),null);
    }
  }
,editor,storage,representationHelper);
  myTargetOffset=targetOffset;
}
