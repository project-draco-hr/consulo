{
  reset();
  myTargetOffset=targetOffset;
  Document document=myEditor.getDocument();
  if (targetOffset == 0) {
    LogicalPosition eager=new LogicalPosition(0,0,0,0,0,0,0);
    setEagerMatch(eager);
    return;
  }
 else   if (targetOffset >= document.getTextLength()) {
    if (cache.isEmpty()) {
      setFirstInitialPosition();
      return;
    }
 else {
      CacheEntry lastEntry=cache.get(cache.size() - 1);
      if (lastEntry.endOffset >= targetOffset - 1) {
        EditorPosition position=lastEntry.buildEndLinePosition();
        if (document.getCharsSequence().charAt(document.getTextLength() - 1) == '\n') {
          position.onNewLineSoftWrapAware();
        }
        setEagerMatch(position.buildLogicalPosition());
        return;
      }
    }
  }
 else   if (cache.size() > 0 && cache.get(cache.size() - 1).endOffset < targetOffset) {
    EditorPosition position=cache.get(cache.size() - 1).buildEndLinePosition();
    position.onNewLineSoftWrapAware();
    setInitialPosition(position);
    return;
  }
  int i=MappingUtil.getCacheEntryIndexForOffset(targetOffset,myEditor.getDocument(),cache);
  CacheEntry cacheEntry=null;
  if (i >= 0) {
    CacheEntry candidate=cache.get(i);
    if (candidate.startOffset <= targetOffset) {
      cacheEntry=candidate;
    }
  }
 else   if (i < -1) {
    i=-i - 2;
    if (i < myCache.size()) {
      cacheEntry=myCache.get(i);
    }
  }
  if (cacheEntry == null) {
    setFirstInitialPosition();
  }
 else   if (cacheEntry.startOffset <= targetOffset && cacheEntry.endOffset >= targetOffset) {
    setTargetEntry(cacheEntry,true);
  }
 else {
    setInitialPosition(cacheEntry.buildStartLinePosition());
  }
}
