{
  setEagerMatch(null);
  myTargetOffset=targetOffset;
  Document document=myEditor.getDocument();
  if (targetOffset == 0) {
    LogicalPosition eager=new LogicalPosition(0,0,0,0,0,0,0);
    setEagerMatch(eager);
    return;
  }
 else   if (targetOffset >= document.getTextLength()) {
    if (cache.isEmpty()) {
      setEagerMatch(new LogicalPosition(0,0,0,0,0,0,0));
    }
 else {
      CacheEntry lastEntry=cache.get(cache.size() - 1);
      LogicalPosition eager=new LogicalPosition(lastEntry.endLogicalLine,lastEntry.endLogicalColumn + 1,lastEntry.endSoftWrapLinesBefore,lastEntry.endSoftWrapLinesCurrent,lastEntry.endSoftWrapColumnDiff,lastEntry.endFoldedLines,lastEntry.endFoldingColumnDiff);
      setEagerMatch(eager);
    }
    return;
  }
 else   if (!cache.isEmpty()) {
    CacheEntry lastEntry=cache.get(cache.size() - 1);
    if (targetOffset > lastEntry.endOffset) {
      LogicalPosition eager=new LogicalPosition(lastEntry.endLogicalLine + 1,0,lastEntry.endSoftWrapLinesBefore + lastEntry.endSoftWrapLinesCurrent,0,0,lastEntry.endFoldedLines,0);
      setEagerMatch(eager);
      return;
    }
  }
  int i=MappingUtil.getCacheEntryIndexForOffset(targetOffset,myEditor.getDocument(),cache);
  setCacheEntry(cache.get(i));
}
