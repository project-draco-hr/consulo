{
  if (Comparing.equal(oldValue,newValue) && FileContentUtilCore.FORCE_RELOAD_REQUESTOR != requestor) {
    throw new IllegalArgumentException("Values must be different, got the same: " + oldValue);
  }
  if (VirtualFile.PROP_NAME.equals(propertyName)) {
    if (oldValue == null)     throw new IllegalArgumentException("oldName must not be null");
    if (newValue == null)     throw new IllegalArgumentException("newName must not be null");
  }
 else   if (VirtualFile.PROP_ENCODING.equals(propertyName)) {
    if (oldValue == null)     throw new IllegalArgumentException("oldCharset must not be null");
  }
 else   if (VirtualFile.PROP_WRITABLE.equals(propertyName)) {
    if (!(oldValue instanceof Boolean))     throw new IllegalArgumentException("oldWriteable must be boolean, got " + oldValue);
    if (!(newValue instanceof Boolean))     throw new IllegalArgumentException("newWriteable must be boolean, got " + newValue);
  }
 else   if (VirtualFile.PROP_HIDDEN.equals(propertyName)) {
    if (!(oldValue instanceof Boolean))     throw new IllegalArgumentException("oldHidden must be boolean, got " + oldValue);
    if (!(newValue instanceof Boolean))     throw new IllegalArgumentException("newHidden must be boolean, got " + newValue);
  }
 else   if (VirtualFile.PROP_SYMLINK_TARGET.equals(propertyName)) {
    if (oldValue != null && !(oldValue instanceof String))     throw new IllegalArgumentException("oldSymTarget must be String, got " + oldValue);
    if (newValue != null && !(newValue instanceof String))     throw new IllegalArgumentException("newSymTarget must be String, got " + newValue);
  }
}
