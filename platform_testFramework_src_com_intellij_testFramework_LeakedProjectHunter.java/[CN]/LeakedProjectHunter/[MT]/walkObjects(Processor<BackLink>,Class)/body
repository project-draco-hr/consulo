{
  while (true) {
    if (toVisit.isEmpty())     return;
    BackLink backLink=toVisit.pop();
    Object root=backLink.value;
    if (!visited.add(root))     continue;
    Class rootClass=backLink.aClass;
    List<Field> fields=getAllFields(rootClass);
    for (    Field field : fields) {
      if (root instanceof Reference && "referent".equals(field.getName()))       continue;
      Object value=field.get(root);
      if (value == null)       continue;
      Class valueClass=value.getClass();
      if (valueClass == lookFor) {
        BackLink newBackLink=new BackLink(valueClass,value,field,backLink);
        processor.process(newBackLink);
      }
 else {
        BackLink newBackLink=new BackLink(valueClass,value,field,backLink);
        if (toFollow(valueClass)) {
          toVisit.push(newBackLink);
        }
      }
    }
    if (rootClass.isArray()) {
      if (toFollow(rootClass.getComponentType())) {
        try {
          for (          Object o : (Object[])root) {
            if (o == null)             continue;
            Class oClass=o.getClass();
            toVisit.push(new BackLink(oClass,o,null,backLink));
          }
        }
 catch (        ClassCastException ignored) {
        }
      }
    }
  }
}
