{
  for (  final RenameInputValidator validator : Extensions.getExtensions(RenameInputValidator.EP_NAME)) {
    if (!(validator instanceof RenameInputValidatorEx))     continue;
    final ProcessingContext context=new ProcessingContext();
    if (validator.getPattern().accepts(element,context)) {
      return new Function<String,String>(){
        @Override public String fun(        String newName){
          return ((RenameInputValidatorEx)validator).getErrorMessage(newName,element.getProject());
        }
      }
;
    }
  }
  return null;
}
