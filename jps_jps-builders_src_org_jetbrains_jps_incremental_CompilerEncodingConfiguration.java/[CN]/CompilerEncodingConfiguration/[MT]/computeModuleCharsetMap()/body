{
  final Map<JpsModule,Set<String>> map=new THashMap<JpsModule,Set<String>>();
  final List<ModuleLevelBuilder> builders=BuilderRegistry.getInstance().getModuleLevelBuilders();
  for (  Map.Entry<String,String> entry : myUrlToCharset.entrySet()) {
    final String fileUrl=entry.getKey();
    final String charset=entry.getValue();
    File file=JpsPathUtil.urlToFile(fileUrl);
    if (charset == null || (!file.isDirectory() && !shouldHonorEncodingForCompilation(builders,file)))     continue;
    final JavaSourceRootDescriptor rootDescriptor=myRootsIndex.getModuleAndRoot(null,file);
    if (rootDescriptor == null)     continue;
    final JpsModule module=rootDescriptor.target.getModule();
    Set<String> set=map.get(module);
    if (set == null) {
      set=new LinkedHashSet<String>();
      map.put(module,set);
      final File sourceRoot=rootDescriptor.root;
      File current=FileUtil.getParentFile(file);
      String parentCharset=null;
      while (current != null) {
        final String currentCharset=myUrlToCharset.get(FileUtil.toSystemIndependentName(current.getAbsolutePath()));
        if (currentCharset != null) {
          parentCharset=currentCharset;
        }
        if (FileUtil.filesEqual(current,sourceRoot)) {
          break;
        }
        current=FileUtil.getParentFile(current);
      }
      if (parentCharset != null) {
        set.add(parentCharset);
      }
    }
    set.add(charset);
  }
  return map;
}
