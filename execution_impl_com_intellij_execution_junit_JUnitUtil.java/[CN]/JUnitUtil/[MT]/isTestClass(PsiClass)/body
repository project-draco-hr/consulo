{
  if (!PsiClassUtil.isRunnableClass(psiClass,true))   return false;
  if (isTestCaseInheritor(psiClass))   return true;
  final PsiModifierList modifierList=psiClass.getModifierList();
  if (modifierList == null)   return false;
  if (modifierList.findAnnotation("org.junit.runner.RunWith") != null)   return true;
  for (  final PsiMethod method : psiClass.getMethods()) {
    if (isSuiteMethod(method))     return true;
    if (isTestAnnotated(method))     return true;
  }
  PsiClass superClass=psiClass.getSuperClass();
  if (superClass != null && !"java.lang.Object".equals(superClass.getQualifiedName()) && !superClass.isInterface()) {
    return isTestClass(superClass);
  }
  return false;
}
