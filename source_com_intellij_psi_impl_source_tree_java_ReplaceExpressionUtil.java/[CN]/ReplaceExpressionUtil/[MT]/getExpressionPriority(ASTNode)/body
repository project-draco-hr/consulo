{
  IElementType i=expr.getElementType();
  if (i == ASSIGNMENT_EXPRESSION) {
    return 0;
  }
 else   if (i == CONDITIONAL_EXPRESSION) {
    return 1;
  }
 else   if (i == BINARY_EXPRESSION) {
{
      IElementType opType=((PsiBinaryExpression)SourceTreeToPsiMap.treeElementToPsi(expr)).getOperationSign().getTokenType();
      if (opType == OROR) {
        return 2;
      }
 else       if (opType == ANDAND) {
        return 3;
      }
 else       if (opType == OR) {
        return 4;
      }
 else       if (opType == XOR) {
        return 5;
      }
 else       if (opType == AND) {
        return 6;
      }
 else       if (opType == EQEQ || opType == NE) {
        return 7;
      }
 else       if (opType == LT || opType == GT || opType == LE || opType == GE) {
        return 8;
      }
 else       if (opType == LTLT || opType == GTGT || opType == GTGTGT) {
        return 9;
      }
 else       if (opType == PLUS || opType == MINUS) {
        return 10;
      }
 else       if (opType == ASTERISK || opType == DIV || opType == PERC) {
        return 11;
      }
    }
    return 8;
  }
 else   if (i == INSTANCE_OF_EXPRESSION) {
    return 8;
  }
 else   if (i == PREFIX_EXPRESSION || i == TYPE_CAST_EXPRESSION) {
    return 12;
  }
 else   if (i == POSTFIX_EXPRESSION) {
    return 13;
  }
 else   if (i == LITERAL_EXPRESSION || i == REFERENCE_EXPRESSION || i == THIS_EXPRESSION || i == SUPER_EXPRESSION || i == PARENTH_EXPRESSION || i == METHOD_CALL_EXPRESSION || i == CLASS_OBJECT_ACCESS_EXPRESSION || i == NEW_EXPRESSION || i == ARRAY_ACCESS_EXPRESSION || i == ARRAY_INITIALIZER_EXPRESSION || i == JAVA_CODE_REFERENCE || i == EMPTY_EXPRESSION) {
    return 14;
  }
 else {
    LOG.assertTrue(false,"Unknown element type:" + i);
    return -1;
  }
}
