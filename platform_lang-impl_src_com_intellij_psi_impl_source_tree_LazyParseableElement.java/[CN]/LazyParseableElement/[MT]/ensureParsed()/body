{
  if (myText == null)   return;
  if (rawFirstChild() != null) {
    LOG.error("Reentrant parsing?");
  }
  if (TreeUtil.getFileElement(this) == null) {
    LOG.error("Chameleons must not be parsed till they're in file tree");
  }
  ApplicationManager.getApplication().assertReadAccessAllowed();
  ILazyParseableElementType type=(ILazyParseableElementType)getElementType();
  ASTNode parsedNode=type.parseContents(this);
  if (parsedNode == null && myText.length() > 0) {
    if (ApplicationManagerEx.getApplicationEx().isInternal() && !ApplicationManager.getApplication().isUnitTestMode()) {
      LOG.error("No parse for a non-empty string: " + myText + "; type="+ getElementType());
    }
 else {
      LOG.error("No parse for a non-empty string: type=" + getElementType());
    }
  }
  CharSequence text=myText;
  myText=null;
  if (parsedNode != null) {
    rawAddChildren((TreeElement)parsedNode);
    if (getTextLength() != text.length()) {
      if (ApplicationManagerEx.getApplicationEx().isInternal() && !ApplicationManager.getApplication().isUnitTestMode()) {
        LOG.error("Inconsistent reparse: type=" + getElementType() + "; text="+ text+ "; treeText="+ getText());
      }
 else {
        LOG.error("Inconsistent reparse: type=" + getElementType());
      }
    }
    ((TreeElement)parsedNode).acceptTree(CREATE_PSI);
    parsedNode.getTreeNext();
  }
}
