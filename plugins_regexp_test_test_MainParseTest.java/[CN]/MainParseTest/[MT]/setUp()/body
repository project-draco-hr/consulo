{
  final Document document=new SAXBuilder().build(new File(getTestDataRoot(),"/RETest.xml"));
  final List<Element> list=XPath.selectNodes(document.getRootElement(),"//test");
  int i=0;
  for (  Element element : list) {
    final String name;
    final Element parent=(Element)element.getParent();
    final String s=parent.getName();
    final String t=parent.getAttribute("id") == null ? "" : parent.getAttribute("id").getValue() + "-";
    if (!"tests".equals(s)) {
      name=s + "/test-" + t+ ++i+ ".regexp";
    }
 else {
      name="test-" + t + ++i+ ".regexp";
    }
    final Result result=Result.valueOf((String)XPath.selectSingleNode(element,"string(expected)"));
    final boolean warn=!"false".equals(element.getAttributeValue("warning"));
    final boolean info="true".equals(element.getAttributeValue("info"));
    final String pattern=(String)XPath.selectSingleNode(element,"string(pattern)");
    myMap.put(name,new Test(pattern,result,warn,info));
    if (!"false".equals(element.getAttributeValue("verify"))) {
      try {
        Pattern.compile(pattern);
        if (result == Result.ERR) {
          System.out.println("Incorrect FAIL value for " + pattern);
        }
      }
 catch (      PatternSyntaxException e) {
        if (result == Result.OK) {
          System.out.println("Incorrect OK value for " + pattern);
        }
      }
    }
  }
  super.setUp();
  myOut=new ByteArrayOutputStream();
  System.setErr(new PrintStream(myOut));
}
