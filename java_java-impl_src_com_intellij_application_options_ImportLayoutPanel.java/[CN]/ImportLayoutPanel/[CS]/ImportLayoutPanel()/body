{
  super(new BorderLayout());
  setBorder(IdeBorderFactory.createTitledBorder(ApplicationBundle.message("title.import.layout"),false,new Insets(0,0,0,0)));
  myCbLayoutStaticImportsSeparately.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (areStaticImportsEnabled()) {
        boolean found=false;
        for (int i=myImportLayoutList.getEntryCount() - 1; i >= 0; i--) {
          PackageEntry entry=myImportLayoutList.getEntryAt(i);
          if (entry == PackageEntry.ALL_OTHER_STATIC_IMPORTS_ENTRY) {
            found=true;
            break;
          }
        }
        if (!found) {
          int index=myImportLayoutList.getEntryCount();
          if (index != 0 && myImportLayoutList.getEntryAt(index - 1) != PackageEntry.BLANK_LINE_ENTRY) {
            myImportLayoutList.addEntry(PackageEntry.BLANK_LINE_ENTRY);
          }
          myImportLayoutList.addEntry(PackageEntry.ALL_OTHER_STATIC_IMPORTS_ENTRY);
        }
      }
 else {
        for (int i=myImportLayoutList.getEntryCount() - 1; i >= 0; i--) {
          PackageEntry entry=myImportLayoutList.getEntryAt(i);
          if (entry.isStatic()) {
            myImportLayoutList.removeEntryAt(i);
          }
        }
      }
      refresh();
    }
  }
);
  this.add(myCbLayoutStaticImportsSeparately,BorderLayout.NORTH);
  this.add(ToolbarDecorator.createDecorator(myImportLayoutTable=createTableForPackageEntries(myImportLayoutList,this)).addExtraAction(new AnActionButton(ApplicationBundle.message("button.add.package"),IconUtil.getAddPackageIcon()){
    @Override public void actionPerformed(    AnActionEvent e){
      addPackageToImportLayouts();
    }
  }
).addExtraAction(new AnActionButton(ApplicationBundle.message("button.add.blank"),IconUtil.getAddBlankLineIcon()){
    @Override public void actionPerformed(    AnActionEvent e){
      addBlankLine();
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      removeEntryFromImportLayouts();
    }
  }
).setMoveUpAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      moveRowUp();
    }
  }
).setMoveDownAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      moveRowDown();
    }
  }
).setRemoveActionUpdater(new AnActionButtonUpdater(){
    @Override public boolean isEnabled(    AnActionEvent e){
      int selectedImport=myImportLayoutTable.getSelectedRow();
      PackageEntry entry=selectedImport < 0 ? null : myImportLayoutList.getEntryAt(selectedImport);
      return entry != null && entry != PackageEntry.ALL_OTHER_STATIC_IMPORTS_ENTRY && entry != PackageEntry.ALL_OTHER_IMPORTS_ENTRY;
    }
  }
).setButtonComparator(ApplicationBundle.message("button.add.package"),ApplicationBundle.message("button.add.blank"),"Remove","Up","Down").setPreferredSize(new Dimension(-1,100)).createPanel(),BorderLayout.CENTER);
}
