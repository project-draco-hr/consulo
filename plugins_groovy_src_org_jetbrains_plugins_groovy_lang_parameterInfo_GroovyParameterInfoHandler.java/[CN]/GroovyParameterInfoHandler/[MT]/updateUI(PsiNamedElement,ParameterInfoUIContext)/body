{
  CodeInsightSettings settings=CodeInsightSettings.getInstance();
  if (!namedElement.isValid()) {
    context.setUIComponentEnabled(false);
    return;
  }
  int highlightStartOffset=-1;
  int highlightEndOffset=-1;
  StringBuffer buffer=new StringBuffer();
  if (namedElement instanceof PsiMethod) {
    final PsiMethod method=(PsiMethod)namedElement;
    if (settings.SHOW_FULL_SIGNATURES_IN_PARAMETER_INFO) {
      if (!method.isConstructor()) {
        PsiType returnType=method.getReturnType();
        buffer.append(returnType.getPresentableText());
        buffer.append(" ");
      }
      buffer.append(namedElement.getName());
      buffer.append("(");
    }
    final int currentParameter=context.getCurrentParameterIndex();
    PsiParameter[] parms=method.getParameterList().getParameters();
    int numParams=parms.length;
    if (numParams > 0) {
      for (int j=0; j < numParams; j++) {
        PsiParameter parm=parms[j];
        int startOffset=buffer.length();
        if (parm.isValid()) {
          PsiType paramType=parm.getType();
          buffer.append(paramType.getPresentableText());
          String name=parm.getName();
          if (name != null) {
            buffer.append(" ");
            buffer.append(name);
          }
        }
        int endOffset=buffer.length();
        if (j < numParams - 1) {
          buffer.append(", ");
        }
        if (context.isUIComponentEnabled() && (j == currentParameter || (j == numParams - 1 && parm.isVarArgs() && currentParameter >= numParams))) {
          highlightStartOffset=startOffset;
          highlightEndOffset=endOffset;
        }
      }
    }
 else {
      buffer.append("no parameters");
    }
    if (settings.SHOW_FULL_SIGNATURES_IN_PARAMETER_INFO) {
      buffer.append(")");
    }
  }
 else   if (namedElement instanceof PsiClass) {
    buffer.append("no parameters");
  }
  final boolean isDeprecated=namedElement instanceof PsiDocCommentOwner && ((PsiDocCommentOwner)namedElement).isDeprecated();
  context.setupUIComponentPresentation(buffer.toString(),highlightStartOffset,highlightEndOffset,!context.isUIComponentEnabled(),isDeprecated,false,context.getDefaultParameterColor());
}
