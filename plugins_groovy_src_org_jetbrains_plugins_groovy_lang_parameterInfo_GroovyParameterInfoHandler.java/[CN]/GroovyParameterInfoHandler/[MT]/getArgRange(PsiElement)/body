{
  PsiElement cur=arg;
  int end;
  int start;
  do {
    PsiElement sibling=cur.getNextSibling();
    if (sibling == null) {
      end=cur.getTextRange().getEndOffset();
      break;
    }
 else {
      cur=sibling;
    }
    IElementType type=cur.getNode().getElementType();
    if (GroovyTokenTypes.mCOMMA.equals(type) || GroovyTokenTypes.mRPAREN.equals(type)) {
      end=cur.getTextRange().getStartOffset();
      break;
    }
  }
 while (true);
  do {
    PsiElement sibling=cur.getPrevSibling();
    if (sibling == null) {
      start=cur.getTextRange().getStartOffset();
      break;
    }
 else {
      cur=sibling;
    }
    IElementType type=cur.getNode().getElementType();
    if (GroovyTokenTypes.mCOMMA.equals(type) || GroovyTokenTypes.mLPAREN.equals(type)) {
      start=cur.getTextRange().getEndOffset();
      break;
    }
  }
 while (true);
  return new TextRange(start,end + 1);
}
