{
  PsiElement element=file.findElementAt(offset);
  if (element != null) {
    final ASTNode node=element.getNode();
    if (node != null && node.getElementType() == GroovyTokenTypes.mNLS) {
      element=file.findElementAt(offset - 1);
    }
  }
  if (element instanceof PsiWhiteSpace)   element=element.getNextSibling();
  if (element == null)   return null;
  GroovyPsiElement argList=PsiTreeUtil.getParentOfType(element,GrArgumentList.class);
  if (argList != null)   return argList;
  final GrCall call=PsiTreeUtil.getParentOfType(element,GrCall.class);
  if (call != null) {
    argList=call.getArgumentList();
    if (argList.getTextRange().contains(element.getTextRange().getStartOffset()))     return argList;
  }
  return null;
}
