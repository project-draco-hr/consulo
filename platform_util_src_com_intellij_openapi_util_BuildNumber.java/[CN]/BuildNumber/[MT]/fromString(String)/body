{
  if (version == null)   return null;
  if (BUILD_NUMBER.equals(version))   return new BuildNumber("IU",TOP_BASELINE_VERSION,Integer.MAX_VALUE);
  String code=version;
  int productSeparator=code.indexOf('-');
  final String productCode;
  if (productSeparator > 0) {
    productCode=code.substring(0,productSeparator);
    code=code.substring(productSeparator + 1);
  }
 else {
    productCode="";
  }
  int baselineVersionSeparator=code.indexOf('.');
  int baselineVersion;
  int buildNumber;
  if (baselineVersionSeparator > 0) {
    try {
      baselineVersion=Integer.parseInt(code.substring(0,baselineVersionSeparator));
      code=code.substring(baselineVersionSeparator + 1);
    }
 catch (    NumberFormatException e) {
      throw new RuntimeException("Unparseable version number: " + version);
    }
    buildNumber=parseBuildNumber(version,code);
  }
 else {
    buildNumber=parseBuildNumber(version,code);
    if (buildNumber <= 2000) {
      return new BuildNumber(productCode,buildNumber,0);
    }
    baselineVersion=getBaseLineForHistoricBuilds(buildNumber);
  }
  return new BuildNumber(productCode,baselineVersion,buildNumber);
}
