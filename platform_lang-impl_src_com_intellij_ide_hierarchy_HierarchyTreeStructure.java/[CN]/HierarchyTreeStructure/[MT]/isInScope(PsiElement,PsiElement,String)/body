{
  if (HierarchyBrowserBaseEx.SCOPE_CLASS.equals(scopeType)) {
    if (!PsiTreeUtil.isAncestor(baseClass,srcElement,true)) {
      return false;
    }
  }
 else   if (HierarchyBrowserBaseEx.SCOPE_PROJECT.equals(scopeType)) {
    final VirtualFile virtualFile=srcElement.getContainingFile().getVirtualFile();
    if (virtualFile != null && ProjectRootManager.getInstance(myProject).getFileIndex().isInTestSourceContent(virtualFile)) {
      return false;
    }
  }
 else   if (HierarchyBrowserBaseEx.SCOPE_TEST.equals(scopeType)) {
    final VirtualFile virtualFile=srcElement.getContainingFile().getVirtualFile();
    if (virtualFile != null && !ProjectRootManager.getInstance(myProject).getFileIndex().isInTestSourceContent(virtualFile)) {
      return false;
    }
  }
 else   if (!HierarchyBrowserBaseEx.SCOPE_ALL.equals(scopeType)) {
    final NamedScope namedScope=NamedScopesHolder.getScope(myProject,scopeType);
    if (namedScope == null) {
      return false;
    }
    final PackageSet namedScopePattern=namedScope.getValue();
    if (namedScopePattern == null) {
      return false;
    }
    final PsiFile psiFile=srcElement.getContainingFile();
    if (psiFile != null && !namedScopePattern.contains(psiFile,NamedScopesHolder.getHolder(myProject,scopeType,NamedScopeManager.getInstance(myProject)))) {
      return false;
    }
  }
  return true;
}
