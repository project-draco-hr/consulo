{
  enableSilentOperation(VcsConfiguration.StandardConfirmation.ADD);
  final VcsDirtyScopeManagerImpl vcsDirtyScopeManager=(VcsDirtyScopeManagerImpl)VcsDirtyScopeManager.getInstance(myProject);
  final VirtualFile file=createFileInCommand("a.txt","old content");
  final VirtualFile fileB=createFileInCommand("b.txt","old content");
  final VirtualFile fileC=createFileInCommand("c.txt","old content");
  final VirtualFile fileD=createFileInCommand("d.txt","old content");
  waitABit();
  final List<FilePath> list=ObjectsConvertor.vf2fp(Arrays.asList(file,fileB,fileC,fileD));
  vcsDirtyScopeManager.retrieveScopes();
  vcsDirtyScopeManager.changesProcessed();
  new WriteCommandAction.Simple(myProject){
    @Override protected void run() throws Throwable {
      vcsDirtyScopeManager.fileDirty(file);
      vcsDirtyScopeManager.fileDirty(fileB);
    }
  }
.execute().throwException();
  final FilePathImpl fp=new FilePathImpl(file);
  final FilePathImpl fpB=new FilePathImpl(fileB);
  final long start=System.currentTimeMillis();
  while (System.currentTimeMillis() < (start + 3000)) {
synchronized (this) {
      try {
        wait(50);
      }
 catch (      InterruptedException e) {
      }
    }
    final Collection<FilePath> dirty1=vcsDirtyScopeManager.whatFilesDirty(list);
    if (dirty1.contains(fp) && dirty1.contains(fpB))     return;
  }
  Assert.assertTrue(false);
}
