{
  String text=getString(component,"text","");
  int start=getInteger(component,"start",0);
  int end=getInteger(component,"end",0);
  boolean editable=getBoolean(component,"editable",true);
  int istart=start;
  int iend=end;
  String insert=null;
  if (editable && (keychar != 0) && ((modifiers == 0) || (modifiers == InputEvent.SHIFT_MASK))) {
    insert=String.valueOf((char)keychar);
  }
 else   if (multiline && editable && (keycode == KeyEvent.VK_ENTER)) {
    insert="\n";
  }
 else   if (editable && (keycode == KeyEvent.VK_BACK_SPACE)) {
    insert="";
    if (start == end) {
      istart-=1;
    }
  }
 else   if (keycode == KeyEvent.VK_END) {
    iend=text.length();
    if (!shiftdown) {
      istart=iend;
    }
  }
 else   if (keycode == KeyEvent.VK_HOME) {
    iend=0;
    if (!shiftdown) {
      istart=iend;
    }
  }
 else   if (keycode == KeyEvent.VK_LEFT) {
    if (controldown) {
      for (int i=0; i < 2; i++) {
        while ((iend > 0) && ((i != 0) == Character.isLetterOrDigit(text.charAt(iend - 1)))) {
          iend--;
        }
      }
    }
 else {
      iend-=1;
    }
    if (!shiftdown) {
      istart=iend;
    }
  }
 else   if (keycode == KeyEvent.VK_RIGHT) {
    if (controldown) {
      for (int i=0; i < 2; i++) {
        while ((iend < text.length()) && ((i == 0) == Character.isLetterOrDigit(text.charAt(iend)))) {
          iend++;
        }
      }
    }
 else {
      iend+=1;
    }
    if (!shiftdown) {
      istart=iend;
    }
  }
 else   if (editable && (keycode == KeyEvent.VK_DELETE)) {
    insert="";
    if (start == end) {
      iend+=1;
    }
  }
 else   if (controldown && ((keycode == KeyEvent.VK_A) || (keycode == 0xBF))) {
    istart=0;
    iend=text.length();
  }
 else   if (controldown && (keycode == 0xDC)) {
    istart=iend=text.length();
  }
 else   if ((editable && !hidden && controldown&& (keycode == KeyEvent.VK_X)) || (!hidden && controldown && (keycode == KeyEvent.VK_C))) {
    if (start != end) {
      clipboard=text.substring(Math.min(start,end),Math.max(start,end));
      try {
        getToolkit().getSystemClipboard().setContents(new StringSelection(clipboard),null);
      }
 catch (      Exception exc) {
      }
      if (keycode == KeyEvent.VK_X) {
        insert="";
      }
    }
  }
 else   if (editable && controldown && (keycode == KeyEvent.VK_V)) {
    try {
      insert=(String)getToolkit().getSystemClipboard().getContents(this).getTransferData(DataFlavor.stringFlavor);
    }
 catch (    Exception exc) {
      insert=clipboard;
    }
    StringBuffer filtered=new StringBuffer(insert.length());
    for (int i=0; i < insert.length(); i++) {
      char ckey=insert.charAt(i);
      if (((ckey > 0x1f) && (ckey < 0x7f)) || ((ckey > 0x9f) && (ckey < 0xffff)) || (multiline && (ckey == '\n'))) {
        filtered.append(ckey);
      }
    }
    if (filtered.length() != insert.length()) {
      insert=filtered.toString();
    }
  }
  return changeField(component,text,insert,istart,iend,start,end);
}
