{
  String text=getString(component,"text",null);
  Image icon=getIcon(component,"icon",null);
  if ((text == null) && (icon == null)) {
    return;
  }
  String alignment=getString(component,"alignment",defaultalignment);
  FontMetrics fm=null;
  int tw=0, th=0;
  int ta=0;
  if (text != null) {
    fm=g.getFontMetrics();
    tw=fm.stringWidth(text);
    ta=fm.getAscent();
    th=fm.getDescent() + ta;
    g.setColor(fg);
  }
  int iw=0, ih=0;
  if (icon != null) {
    iw=icon.getWidth(this);
    ih=icon.getHeight(this);
  }
  boolean clipped=(tw + iw > width) || (th > height) || (ih > height);
  int cx=x;
  if ("center" == alignment) {
    cx+=(width - tw - iw) / 2;
  }
 else   if ("right" == alignment) {
    cx+=width - tw - iw;
  }
  if (clipped) {
    g.clipRect(x,y,width,height);
  }
  if (icon != null) {
    g.drawImage(icon,cx,y + (height - ih) / 2,this);
    cx+=iw;
  }
  if (text != null) {
    int ty=y + (height - th) / 2 + ta;
    g.drawString(text,cx,ty);
    if (checkmnemonic) {
      int mnemonic=getInteger(component,"mnemonic",-1);
      if ((mnemonic != -1) && (mnemonic < text.length())) {
        int mx=cx + fm.stringWidth(text.substring(0,mnemonic));
        g.drawLine(mx,ty + 1,mx + fm.charWidth(text.charAt(mnemonic)),ty + 1);
      }
    }
  }
  if (clipped) {
    g.setClip(clipx,clipy,clipwidth,clipheight);
  }
}
