{
  if (myEvaluationIsInProgress.get().booleanValue()) {
    return f.fun(param);
  }
synchronized (LOCK) {
    Icon result=myIconsCache.get(param);
    if (result == null) {
      final long started=myLastClearTimestamp;
      result=new DeferredIconImpl<T>(base,param,f,new DeferredIconImpl.IconListener<T>(){
        @Override public void evalDone(        T key,        @NotNull Icon r){
synchronized (LOCK) {
            if (started == myLastClearTimestamp) {
              myIconsCache.put(key,r);
            }
          }
        }
      }
,autoupdatable);
      myIconsCache.put(param,result);
    }
    return result;
  }
}
