{
  PsiBuilder.Marker sMarker=builder.mark();
  if (ParserUtils.getToken(builder,mREGEX_BEGIN)) {
    if (!regexConstructorValuePart(builder,parser)) {
      if (!ParserUtils.getToken(builder,mREGEX_END)) {
        builder.error(GroovyBundle.message("identifier.or.block.expected"));
      }
      sMarker.done(REGEX);
      return REGEX;
    }
 else {
      while (ParserUtils.getToken(builder,mREGEX_CONTENT)) {
        if (!regexConstructorValuePart(builder,parser))         break;
      }
      if (!ParserUtils.getToken(builder,mREGEX_END)) {
        builder.error(GroovyBundle.message("identifier.or.block.expected"));
      }
      sMarker.done(REGEX);
      return REGEX;
    }
  }
 else {
    sMarker.drop();
    return WRONGWAY;
  }
}
