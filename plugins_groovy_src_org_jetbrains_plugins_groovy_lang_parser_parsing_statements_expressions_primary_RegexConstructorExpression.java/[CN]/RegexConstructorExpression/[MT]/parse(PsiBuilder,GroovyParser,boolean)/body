{
  PsiBuilder.Marker marker=builder.mark();
  final PsiBuilder.Marker marker2=builder.mark();
  final boolean result=ParserUtils.getToken(builder,mREGEX_BEGIN);
  LOG.assertTrue(result);
  boolean inj=false;
  ParserUtils.getToken(builder,mREGEX_CONTENT);
  while (parseInjection(builder,parser)) {
    inj=true;
    ParserUtils.getToken(builder,mREGEX_CONTENT);
  }
  if (!ParserUtils.getToken(builder,mREGEX_END)) {
    builder.error(GroovyBundle.message("regex.end.expected"));
  }
  if (inj) {
    marker2.drop();
    marker.done(REGEX);
  }
 else {
    marker2.done(mREGEX_LITERAL);
    if (forRefExpr) {
      marker.drop();
    }
 else {
      marker.done(LITERAL);
    }
  }
  return inj;
}
