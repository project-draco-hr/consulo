{
  JPanel panel=new JPanel(new BorderLayout());
  JPanel fileTypePanel=new JPanel(new BorderLayout());
  JPanel info=FormBuilder.createFormBuilder().addLabeledComponent(IdeBundle.message("editbox.customfiletype.name"),myFileTypeName).addLabeledComponent(IdeBundle.message("editbox.customfiletype.description"),myFileTypeDescr).getPanel();
  info.setBorder(BorderFactory.createEmptyBorder(0,0,10,0));
  fileTypePanel.add(info,BorderLayout.NORTH);
  JPanel highlighterPanel=new JPanel();
  highlighterPanel.setBorder(IdeBorderFactory.createTitledBorder(IdeBundle.message("group.customfiletype.syntax.highlighting"),false));
  highlighterPanel.setLayout(new BorderLayout());
  JPanel commentsAndNumbersPanel=new JPanel();
  commentsAndNumbersPanel.setLayout(new GridBagLayout());
  JPanel _panel1=new JPanel(new BorderLayout());
  GridBag gb=new GridBag().setDefaultFill(GridBagConstraints.HORIZONTAL).setDefaultAnchor(GridBagConstraints.WEST).setDefaultInsets(1,5,1,5);
  commentsAndNumbersPanel.add(new JLabel(IdeBundle.message("editbox.customfiletype.line.comment")),gb.nextLine().next());
  commentsAndNumbersPanel.add(myLineComment,gb.next());
  commentsAndNumbersPanel.add(myCommentAtLineStart,gb.next().coverLine(2));
  commentsAndNumbersPanel.add(new JLabel(IdeBundle.message("editbox.customfiletype.block.comment.start")),gb.nextLine().next());
  commentsAndNumbersPanel.add(myBlockCommentStart,gb.next());
  commentsAndNumbersPanel.add(new JLabel(IdeBundle.message("editbox.customfiletype.block.comment.end")),gb.next());
  commentsAndNumbersPanel.add(myBlockCommentEnd,gb.next());
  commentsAndNumbersPanel.add(new JLabel(IdeBundle.message("editbox.customfiletype.hex.prefix")),gb.nextLine().next());
  commentsAndNumbersPanel.add(myHexPrefix,gb.next());
  commentsAndNumbersPanel.add(new JLabel(IdeBundle.message("editbox.customfiletype.number.postfixes")),gb.next());
  commentsAndNumbersPanel.add(myNumPostfixes,gb.next());
  commentsAndNumbersPanel.add(mySupportBraces,gb.nextLine().next().coverLine(2));
  commentsAndNumbersPanel.add(mySupportBrackets,gb.next().next().coverLine(2));
  commentsAndNumbersPanel.add(mySupportParens,gb.nextLine().next().coverLine(2));
  commentsAndNumbersPanel.add(mySupportEscapes,gb.next().next().coverLine(2));
  _panel1.add(commentsAndNumbersPanel,BorderLayout.WEST);
  highlighterPanel.add(_panel1,BorderLayout.NORTH);
  TabbedPaneWrapper tabbedPaneWrapper=new TabbedPaneWrapper(this);
  tabbedPaneWrapper.getComponent().setBorder(IdeBorderFactory.createTitledBorder(IdeBundle.message("listbox.customfiletype.keywords"),false));
  tabbedPaneWrapper.addTab(" 1 ",createKeywordsPanel(0));
  tabbedPaneWrapper.addTab(" 2 ",createKeywordsPanel(1));
  tabbedPaneWrapper.addTab(" 3 ",createKeywordsPanel(2));
  tabbedPaneWrapper.addTab(" 4 ",createKeywordsPanel(3));
  highlighterPanel.add(tabbedPaneWrapper.getComponent(),BorderLayout.CENTER);
  highlighterPanel.add(myIgnoreCase,BorderLayout.SOUTH);
  fileTypePanel.add(highlighterPanel,BorderLayout.CENTER);
  panel.add(fileTypePanel);
  for (int i=0; i < myKeywordsLists.length; i++) {
    final int idx=i;
    myKeywordsLists[i].addMouseListener(new MouseAdapter(){
      public void mouseClicked(      MouseEvent e){
        if (e.getClickCount() == 2)         edit(idx);
      }
    }
);
  }
  return panel;
}
