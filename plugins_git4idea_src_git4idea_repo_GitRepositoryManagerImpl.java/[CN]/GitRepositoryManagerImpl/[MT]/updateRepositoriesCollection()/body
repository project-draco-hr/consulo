{
  Map<VirtualFile,GitRepository> repositories;
  try {
    REPO_LOCK.readLock().lock();
    repositories=new HashMap<VirtualFile,GitRepository>(myRepositories);
  }
  finally {
    REPO_LOCK.readLock().unlock();
  }
  final VirtualFile[] roots=myVcsManager.getRootsUnderVcs(myVcs);
  for (Iterator<Map.Entry<VirtualFile,GitRepository>> iterator=repositories.entrySet().iterator(); iterator.hasNext(); ) {
    if (!ArrayUtil.contains(iterator.next().getValue().getRoot(),roots)) {
      iterator.remove();
    }
  }
  for (  VirtualFile root : roots) {
    if (!repositories.containsKey(root)) {
      if (gitRootOK(root)) {
        try {
          GitRepository repository=createGitRepository(root);
          repositories.put(root,repository);
        }
 catch (        GitRepoStateException e) {
          LOG.error("Couldn't initialize GitRepository in " + root.getPresentableUrl(),e);
        }
      }
 else {
        LOG.info("Invalid Git root: " + root);
      }
    }
  }
  REPO_LOCK.writeLock().lock();
  try {
    myRepositories.clear();
    myRepositories.putAll(repositories);
  }
  finally {
    REPO_LOCK.writeLock().unlock();
  }
}
