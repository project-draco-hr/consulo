{
  myTempScopes.add(PsiIdentifier.class);
  registerManipulator(XmlAttributeValue.class,new XmlAttributeValueManipulator());
  registerManipulator(PsiPlainTextFile.class,new PlainFileManipulator());
  registerReferenceProvider(new ScopeFilter(new ParentElementFilter(new AndFilter(new TextFilter(new String[]{"class","type"}),new ParentElementFilter(new AndFilter(new TextFilter("useBean"),new NamespaceFilter(XmlUtil.JSP_NAMESPACE)))))),XmlAttributeValue.class,new JavaClassReferenceProvider());
  RegisterInPsi.referenceProviders(this);
  registerReferenceProvider(new ScopeFilter(new ParentElementFilter(new AndFilter(new TextFilter("extends"),new ParentElementFilter(new AndFilter(new OrFilter(new AndFilter(new ClassFilter(XmlTag.class),new TextFilter("directive.page")),new AndFilter(new ClassFilter(JspDirective.class),new TextFilter("page"))),new NamespaceFilter(XmlUtil.JSP_NAMESPACE)))))),XmlAttributeValue.class,new JavaClassReferenceProvider());
  registerReferenceProvider(new ScopeFilter(new ParentElementFilter(new AndFilter(new TextFilter("import"),new ParentElementFilter(new AndFilter(new OrFilter(new AndFilter(new ClassFilter(XmlTag.class),new TextFilter("directive.page")),new AndFilter(new ClassFilter(JspDirective.class),new TextFilter("page"))),new NamespaceFilter(XmlUtil.JSP_NAMESPACE)))))),XmlAttributeValue.class,new JspImportListReferenceProvider());
  registerReferenceProvider(new ScopeFilter(new AndFilter(new ParentElementFilter(new TextFilter("file")),new ParentElementFilter(new AndFilter(new NamespaceFilter(XmlUtil.JSP_NAMESPACE),new OrFilter(new AndFilter(new ClassFilter(JspDirective.class),new TextFilter("include")),new AndFilter(new ClassFilter(XmlTag.class),new TextFilter("directive.include")))),2))),XmlAttributeValue.class,new JspxIncludePathReferenceProvider());
  registerReferenceProvider(new ScopeFilter(new AndFilter(new ParentElementFilter(new TextFilter("page")),new ParentElementFilter(new AndFilter(new NamespaceFilter(XmlUtil.JSP_NAMESPACE),new AndFilter(new ClassFilter(XmlTag.class),new TextFilter("include"))),2))),XmlAttributeValue.class,new JspxIncludePathReferenceProvider());
  registerReferenceProvider(new NotFilter(new ParentElementFilter(new NamespaceFilter(XmlUtil.ANT_URI),2)),XmlAttributeValue.class,new JavaClassListReferenceProvider());
  registerReferenceProvider(new TokenTypeFilter(XmlTokenType.XML_DATA_CHARACTERS),XmlToken.class,new JavaClassListReferenceProvider());
  HtmlUtil.HtmlReferenceProvider provider=new HtmlUtil.HtmlReferenceProvider();
  registerReferenceProvider(provider.getFilter(),XmlAttributeValue.class,provider);
}
