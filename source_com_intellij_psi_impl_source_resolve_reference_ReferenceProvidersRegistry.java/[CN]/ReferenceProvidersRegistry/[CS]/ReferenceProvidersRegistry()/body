{
{
    myTempScopes.add(JspToken.class);
    myTempScopes.add(PsiIdentifier.class);
  }
{
    registerManipulator(JspAttributeValue.class,new JspAttributeValueManipulator());
    registerManipulator(XmlAttributeValue.class,new XmlAttributeValueManipulator());
    registerManipulator(PsiPlainTextFile.class,new PlainFileManipulator());
  }
{
    registerReferenceProvider(new ScopeFilter(new AndFilter(new ParentElementFilter(new TextFilter(new String[]{"class","type"})),new ParentElementFilter(new TextFilter("useBean"),2))),JspAttributeValue.class,new JavaClassReferenceProvider());
    RegisterInPsi.referenceProviders(this);
    registerReferenceProvider(new ScopeFilter(new ParentElementFilter(new AndFilter(new TextFilter("extends"),new ParentElementFilter(new AndFilter(new ClassFilter(JspDirective.class),new TextFilter("page")))))),JspAttributeValue.class,new JavaClassReferenceProvider());
    registerReferenceProvider(JspAction.class,new JSPActionReferenceProvider());
    registerReferenceProvider(new NotFilter(new ParentElementFilter(new NamespaceFilter(XmlUtil.ANT_URI),2)),XmlAttributeValue.class,new JavaClassListReferenceProvider());
    registerReferenceProvider(new TokenTypeFilter(XmlTokenType.XML_DATA_CHARACTERS),XmlToken.class,new JavaClassListReferenceProvider());
  }
{
    registerReferenceProvider(PsiPlainTextFile.class,new JavaClassListReferenceProvider());
  }
}
