{
  final Project project=e.getProject();
  DocumentationManager documentationManager=DocumentationManager.getInstance(project);
  final DocumentationComponent component=new DocumentationComponent(documentationManager);
  final PropertyTable table=DesignerToolWindowManager.getInstance(project).getPropertyTable();
  final Property property=table.getSelectionProperty();
  PsiElement javadocElement=property.getJavadocElement();
  ActionCallback callback;
  if (javadocElement == null) {
    callback=new ActionCallback();
    component.setText(property.getJavadocText(),null,true);
  }
 else {
    callback=documentationManager.queueFetchDocInfo(javadocElement,component);
  }
  callback.doWhenProcessed(new Runnable(){
    public void run(){
      final JBPopup hint=JBPopupFactory.getInstance().createComponentPopupBuilder(component,component).setDimensionServiceKey(project,DocumentationManager.JAVADOC_LOCATION_AND_SIZE,false).setResizable(true).setMovable(true).setRequestFocus(true).setTitle(DesignerBundle.message("designer.properties.javadoc.title",property.getName())).createPopup();
      component.setHint(hint);
      Disposer.register(hint,component);
      hint.show(new RelativePoint(table.getParent(),new Point(0,0)));
    }
  }
);
  if (javadocElement == null) {
    callback.setDone();
  }
}
