{
  final PsiElement element=PsiTreeUtil.getParentOfType(expression,PsiExpressionList.class,PsiAssignmentExpression.class,PsiVariable.class,PsiReturnStatement.class);
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiExpression) {
    final PsiExpression parentExpression=(PsiExpression)parent;
    final Boolean data=parentExpression.getUserData(KEY);
    if (data != null) {
      expression.putUserData(KEY,data);
      return data.booleanValue();
    }
  }
  final boolean result;
  if (element instanceof PsiExpressionList) {
    final PsiExpressionList expressionList=(PsiExpressionList)element;
    result=isNonNlsAnnotatedParameter(expression,expressionList);
  }
 else   if (element instanceof PsiVariable) {
    result=isNonNlsAnnotatedModifierListOwner(element);
  }
 else   if (element instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)element;
    result=isAssignmentToNonNlsAnnotatedVariable(assignmentExpression);
  }
 else   if (element instanceof PsiReturnStatement) {
    final PsiMethod method=PsiTreeUtil.getParentOfType(element,PsiMethod.class);
    result=isNonNlsAnnotatedModifierListOwner(method);
  }
 else {
    result=false;
  }
  expression.putUserData(KEY,Boolean.valueOf(result));
  return result;
}
