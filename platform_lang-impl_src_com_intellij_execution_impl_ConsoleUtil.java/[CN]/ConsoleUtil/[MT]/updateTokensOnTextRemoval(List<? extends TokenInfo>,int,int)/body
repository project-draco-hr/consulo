{
  final int firstIndex=findTokenInfoIndexByOffset(tokens,startOffset);
  if (firstIndex >= tokens.size()) {
    return;
  }
  int removedSymbolsNumber=endOffset - startOffset;
  boolean updateOnly=false;
  int removeIndexStart=-1;
  int removeIndexEnd=-1;
  final TokenInfo firstToken=tokens.get(firstIndex);
  if (startOffset == firstToken.startOffset) {
    if (endOffset < firstToken.endOffset) {
      firstToken.endOffset-=removedSymbolsNumber;
      updateOnly=true;
    }
 else {
      removeIndexStart=removeIndexEnd=firstIndex;
    }
  }
 else   if (endOffset <= firstToken.endOffset) {
    firstToken.endOffset-=removedSymbolsNumber;
    updateOnly=true;
  }
  for (int i=firstIndex + 1; i < tokens.size(); i++) {
    final TokenInfo tokenInfo=tokens.get(i);
    if (updateOnly) {
      tokenInfo.startOffset-=removedSymbolsNumber;
      tokenInfo.endOffset-=removedSymbolsNumber;
      continue;
    }
    if (endOffset >= tokenInfo.endOffset) {
      if (removeIndexStart < 0) {
        removeIndexStart=i;
      }
      removeIndexEnd=i;
      continue;
    }
    tokenInfo.startOffset=startOffset;
    tokenInfo.endOffset=startOffset + (tokenInfo.endOffset - endOffset);
    updateOnly=true;
  }
  if (removeIndexStart >= 0) {
    tokens.subList(removeIndexStart,removeIndexEnd + 1).clear();
  }
}
