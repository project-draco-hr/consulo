{
  try {
    final Object pathObject=NIOReflect.ourFileToPathMethod.invoke(file);
    NIOReflect.ourFilesWalkMethod.invoke(null,pathObject,NIOReflect.ourDeletionVisitor);
  }
 catch (  InvocationTargetException e) {
    final Throwable cause=e.getCause();
    if (cause == null || !NIOReflect.ourNoSuchFileExceptionClass.isInstance(cause)) {
      logger().info(e);
      return false;
    }
  }
catch (  Exception e) {
    logger().info(e);
    return false;
  }
  return true;
}
