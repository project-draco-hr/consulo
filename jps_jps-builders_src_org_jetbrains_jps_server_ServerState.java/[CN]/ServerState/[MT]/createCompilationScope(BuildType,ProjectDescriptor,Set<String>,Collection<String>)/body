{
  final CompileScope compileScope;
  if (buildType == BuildType.PROJECT_REBUILD || (modules.isEmpty() && paths.isEmpty())) {
    compileScope=new AllProjectScope(pd.project,buildType != BuildType.MAKE);
  }
 else {
    final Set<Module> forcedModules;
    if (!modules.isEmpty()) {
      forcedModules=new HashSet<Module>();
      for (      Module m : pd.project.getModules().values()) {
        if (modules.contains(m.getName())) {
          forcedModules.add(m);
        }
      }
    }
 else {
      forcedModules=Collections.emptySet();
    }
    final TimestampStorage tsStorage=pd.timestamps.getStorage();
    final Map<Module,Set<File>> filesToCompile;
    if (!paths.isEmpty()) {
      filesToCompile=new HashMap<Module,Set<File>>();
      for (      String path : paths) {
        final File file=new File(path);
        final RootDescriptor rd=pd.rootsIndex.getModuleAndRoot(file);
        if (rd != null) {
          Set<File> files=filesToCompile.get(rd.module);
          if (files == null) {
            files=new HashSet<File>();
            filesToCompile.put(rd.module,files);
          }
          files.add(file);
          if (buildType == BuildType.FORCED_COMPILATION) {
            pd.fsState.markDirty(file,rd,tsStorage);
          }
        }
      }
    }
 else {
      filesToCompile=Collections.emptyMap();
    }
    if (filesToCompile.isEmpty()) {
      compileScope=new ModulesScope(pd.project,forcedModules,buildType != BuildType.MAKE);
    }
 else {
      compileScope=new ModulesAndFilesScope(pd.project,forcedModules,filesToCompile,buildType != BuildType.MAKE);
    }
  }
  return compileScope;
}
