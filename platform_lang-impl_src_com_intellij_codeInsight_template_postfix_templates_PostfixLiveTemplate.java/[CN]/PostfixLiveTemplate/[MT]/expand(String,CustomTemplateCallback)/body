{
  ApplicationManager.getApplication().assertIsDispatchThread();
  FeatureUsageTracker.getInstance().triggerFeatureUsed("editing.completion.postfix");
  Editor editor=callback.getEditor();
  for (  PostfixTemplateProvider provider : LanguagePostfixTemplate.LANG_EP.allForLanguage(getLanguage(callback))) {
    PostfixTemplate postfixTemplate=getTemplate(provider,key);
    if (postfixTemplate != null) {
      final PsiFile file=callback.getContext().getContainingFile();
      if (isApplicableTemplate(provider,key,file,editor)) {
        int offset=deleteTemplateKey(file,editor,key);
        try {
          provider.preExpand(file,editor);
          PsiElement context=CustomTemplateCallback.getContext(file,positiveOffset(offset));
          expandTemplate(postfixTemplate,editor,context);
        }
  finally {
          provider.afterExpand(file,editor);
        }
      }
 else       if (editor.getCaretModel().getAllCarets().size() == 1) {
        LOG.error("Template not found by key: " + key);
      }
      return;
    }
  }
  if (editor.getCaretModel().getAllCarets().size() == 1) {
    LOG.error("Template not found by key: " + key);
  }
}
