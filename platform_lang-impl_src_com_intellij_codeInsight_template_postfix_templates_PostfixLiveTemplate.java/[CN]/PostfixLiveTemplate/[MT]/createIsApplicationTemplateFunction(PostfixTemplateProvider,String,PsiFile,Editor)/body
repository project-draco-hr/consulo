{
  int currentOffset=editor.getCaretModel().getOffset();
  final int newOffset=currentOffset - key.length();
  CharSequence fileContent=editor.getDocument().getCharsSequence();
  StringBuilder fileContentWithoutKey=new StringBuilder();
  fileContentWithoutKey.append(fileContent.subSequence(0,newOffset));
  fileContentWithoutKey.append(fileContent.subSequence(currentOffset,fileContent.length()));
  PsiFile copyFile=copyFile(file,fileContentWithoutKey);
  Document copyDocument=copyFile.getViewProvider().getDocument();
  if (copyDocument == null) {
    return Condition.FALSE;
  }
  copyFile=provider.preCheck(copyFile,editor,newOffset);
  copyDocument=copyFile.getViewProvider().getDocument();
  if (copyDocument == null) {
    return Condition.FALSE;
  }
  final PsiElement context=CustomTemplateCallback.getContext(copyFile,positiveOffset(newOffset));
  final Document finalCopyDocument=copyDocument;
  return new Condition<PostfixTemplate>(){
    @Override public boolean value(    PostfixTemplate template){
      return template != null && template.isEnabled(provider) && template.isApplicable(context,finalCopyDocument,newOffset);
    }
  }
;
}
