{
  return new ProjectBuilder(){
    @Nullable @Override public List<Module> commit(    Project project,    ModifiableModuleModel model,    ModulesProvider modulesProvider){
      final String path=myContext.getProjectFileDirectory();
      String iml;
      try {
        File dir=new File(path);
        ZipInputStream zipInputStream=getStream();
        ZipUtil.unzip(null,dir,zipInputStream);
        VirtualFile virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(dir);
        RefreshQueue.getInstance().refresh(false,true,null,virtualFile);
        iml=ContainerUtil.find(dir.list(),new Condition<String>(){
          @Override public boolean value(          String s){
            return s.endsWith(".iml");
          }
        }
);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
      return ImportImlMode.setUpLoader(path + "/" + iml).commit(project,model,modulesProvider);
    }
  }
;
}
