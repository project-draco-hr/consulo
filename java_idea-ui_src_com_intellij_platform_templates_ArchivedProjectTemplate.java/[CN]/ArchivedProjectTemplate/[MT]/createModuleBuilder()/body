{
  return new ModuleBuilder(){
    @Override public void setupRootModel(    ModifiableRootModel modifiableRootModel) throws ConfigurationException {
    }
    @Override public ModuleType getModuleType(){
      return null;
    }
    @NotNull @Override public Module createModule(    @NotNull ModifiableModuleModel moduleModel) throws InvalidDataException, IOException, ModuleWithNameAlreadyExists, JDOMException, ConfigurationException {
      final String path=getContentEntryPath();
      String iml;
      try {
        File dir=new File(path);
        ZipInputStream zipInputStream=getStream();
        ZipUtil.unzip(ProgressManager.getInstance().getProgressIndicator(),dir,zipInputStream);
        VirtualFile virtualFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(dir);
        iml=ContainerUtil.find(dir.list(),new Condition<String>(){
          @Override public boolean value(          String s){
            return s.endsWith(".iml");
          }
        }
);
        new File(path,iml).renameTo(new File(getModuleFilePath()));
        RefreshQueue.getInstance().refresh(false,true,null,virtualFile);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
      return ImportImlMode.setUpLoader(getModuleFilePath()).createModule(moduleModel);
    }
  }
;
}
