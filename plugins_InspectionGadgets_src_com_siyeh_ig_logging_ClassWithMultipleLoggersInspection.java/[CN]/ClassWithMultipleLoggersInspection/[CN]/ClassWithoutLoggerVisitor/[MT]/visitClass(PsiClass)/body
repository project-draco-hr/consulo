{
  if (aClass.isInterface() || aClass.isEnum() || aClass.isAnnotationType()) {
    return;
  }
  if (aClass instanceof PsiTypeParameter || aClass instanceof PsiAnonymousClass) {
    return;
  }
  if (aClass.getContainingClass() != null) {
    return;
  }
  int numLoggers=0;
  final PsiField[] fields=aClass.getFields();
  for (  PsiField field : fields) {
    if (isLogger(field)) {
      numLoggers++;
    }
  }
  if (numLoggers <= 1) {
    return;
  }
  registerClassError(aClass);
}
