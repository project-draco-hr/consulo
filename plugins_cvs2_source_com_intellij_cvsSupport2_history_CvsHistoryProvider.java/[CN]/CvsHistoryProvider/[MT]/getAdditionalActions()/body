{
  return new AnAction[]{new AnAction("Annotate","Annotate file",IconLoader.getIcon("/actions/annotate.png")){
    public void update(    AnActionEvent e){
      DataContext dataContext=e.getDataContext();
      FilePath filePath=(FilePath)dataContext.getData(VcsDataConstants.FILE_PATH);
      if (filePath == null) {
        e.getPresentation().setEnabled(false);
        return;
      }
      VirtualFile vFile=filePath.getVirtualFile();
      FileType fileType=vFile == null ? FileTypeManager.getInstance().getFileTypeByFileName(filePath.getName()) : vFile.getFileType();
      CvsFileRevision revision=(CvsFileRevision)dataContext.getData(VcsDataConstants.VCS_FILE_REVISION);
      VirtualFile revisionVirtualFile=(VirtualFile)dataContext.getData(VcsDataConstants.VCS_VIRTUAL_FILE);
      e.getPresentation().setEnabled(revision != null && revisionVirtualFile != null && !fileType.isBinary());
    }
    public void actionPerformed(    AnActionEvent e){
      DataContext dataContext=e.getDataContext();
      FilePath filePath=(FilePath)dataContext.getData(VcsDataConstants.FILE_PATH);
      CvsFileRevision revision=(CvsFileRevision)dataContext.getData(VcsDataConstants.VCS_FILE_REVISION);
      VirtualFile revisionVirtualFile=(VirtualFile)dataContext.getData(VcsDataConstants.VCS_VIRTUAL_FILE);
      new Annotater(CvsUtil.getCvsLightweightFileForFile(filePath.getIOFile()),myProject,revisionVirtualFile,revision.getRevisionNumber().asString(),CvsEntriesManager.getInstance().getCvsConnectionSettingsFor(filePath.getVirtualFileParent())).execute();
    }
  }
};
}
