{
  List<XmlTag> ancestors=new ArrayList<XmlTag>();
  for (XmlTag t=tag; t != null; t=t.getParentTag()) {
    ancestors.add(t);
  }
  Collections.reverse(ancestors);
  XSElementDeclaration declaration=null;
  SubstitutionGroupHandler fSubGroupHandler=new SubstitutionGroupHandler(new XSGrammarBucket());
  CMBuilder cmBuilder=new CMBuilder(new CMNodeFactory());
  for (  XmlTag ancestor : ancestors) {
    if (declaration == null) {
      declaration=xsModel.getElementDeclaration(ancestor.getLocalName(),ancestor.getNamespace());
      if (declaration == null)       return null;
 else       continue;
    }
    XSTypeDefinition typeDefinition=declaration.getTypeDefinition();
    if (!(typeDefinition instanceof XSComplexTypeDecl)) {
      return null;
    }
    XSCMValidator model=((XSComplexTypeDecl)typeDefinition).getContentModel(cmBuilder);
    int[] ints=model.startContentModel();
    for (    XmlTag subTag : ancestor.getParentTag().getSubTags()) {
      QName qName=createQName(subTag);
      Object o=model.oneTransition(qName,ints,fSubGroupHandler);
      if (subTag == ancestor) {
        if (o instanceof XSElementDecl) {
          declaration=(XSElementDecl)o;
          break;
        }
 else         return null;
      }
    }
  }
  return declaration;
}
