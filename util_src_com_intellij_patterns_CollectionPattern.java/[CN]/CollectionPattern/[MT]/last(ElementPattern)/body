{
  return with(new PatternCondition<Collection<T>>("last"){
    public boolean accepts(    @NotNull final Collection<T> collection,    final MatchingContext matchingContext,    @NotNull final TraverseContext traverseContext){
      if (collection.isEmpty()) {
        return false;
      }
      T last=null;
      for (      final T t : collection) {
        last=t;
      }
      return elementPattern.getCondition().accepts(last,matchingContext,traverseContext);
    }
  }
);
}
