{
  final String apkPath=myApkPathField.getText().trim();
  if (apkPath.length() == 0) {
    throw new CommitStepException(AndroidBundle.message("android.extract.package.specify.apk.path.error"));
  }
  AndroidFacet facet=myWizard.getFacet();
  PropertiesComponent properties=PropertiesComponent.getInstance(myWizard.getProject());
  properties.setValue(ChooseModuleStep.MODULE_PROPERTY,facet != null ? facet.getModule().getName() : "");
  properties.setValue(getApkPathPropertyName(),apkPath);
  File folder=new File(apkPath).getParentFile();
  if (folder == null) {
    throw new CommitStepException(AndroidBundle.message("android.cannot.create.file.error",apkPath));
  }
  try {
    if (!folder.exists()) {
      folder.mkdirs();
    }
  }
 catch (  Exception e) {
    throw new CommitStepException(e.getMessage());
  }
  final CompilerManager manager=CompilerManager.getInstance(myWizard.getProject());
  final CompileScope compileScope=manager.createModuleCompileScope(facet.getModule(),true);
  AndroidCompileUtil.setReleaseBuild(compileScope);
  properties.setValue(RUN_PROGUARD_PROPERTY,Boolean.toString(myProguardCheckBox.isSelected()));
  if (myProguardCheckBox.isSelected()) {
    final String proguardCfgPath=myProguardConfigFilePathField.getText().trim();
    if (proguardCfgPath.length() == 0) {
      throw new CommitStepException(AndroidBundle.message("android.extract.package.specify.proguard.cfg.path.error"));
    }
    properties.setValue(PROGUARD_CFG_PATH_PROPERTY,proguardCfgPath);
    properties.setValue(INCLUDE_SYSTEM_PROGUARD_FILE_PROPERTY,Boolean.toString(myIncludeSystemProguardFileCheckBox.isSelected()));
    if (!new File(proguardCfgPath).isFile()) {
      throw new CommitStepException("Cannot find file " + proguardCfgPath);
    }
    compileScope.putUserData(AndroidProguardCompiler.PROGUARD_CFG_PATH_KEY,proguardCfgPath);
    compileScope.putUserData(AndroidProguardCompiler.INCLUDE_SYSTEM_PROGUARD_FILE,myIncludeSystemProguardFileCheckBox.isSelected());
  }
  manager.make(compileScope,new CompileStatusNotification(){
    public void finished(    boolean aborted,    int errors,    int warnings,    CompileContext compileContext){
      if (aborted || errors != 0) {
        return;
      }
      final String title=AndroidBundle.message("android.extract.package.task.title");
      ProgressManager.getInstance().run(new Task.Backgroundable(myWizard.getProject(),title,true,null){
        public void run(        @NotNull ProgressIndicator indicator){
          createAndAlignApk(apkPath);
        }
      }
);
    }
  }
);
}
