{
  commits=fixDuplicateParentCommits(commits);
  Flags simpleNodes=new BitSetFlags(commits.size());
  int longEdgesCount=0;
  int[] nodeToHashIndex=new int[commits.size()];
  for (int nodeIndex=0; nodeIndex < commits.size(); nodeIndex++) {
    GraphCommit commit=commits.get(nodeIndex);
    nodeToHashIndex[nodeIndex]=commit.getIndex();
    int nextCommitHashIndex=nextCommitHashIndex(commits,nodeIndex);
    int[] parentHashIndices=commit.getParentIndices();
    if (parentHashIndices.length == 1 && parentHashIndices[0] == nextCommitHashIndex) {
      simpleNodes.set(nodeIndex,true);
    }
 else {
      longEdgesCount+=parentHashIndices.length;
    }
  }
  PermanentGraphBuilder builder=new PermanentGraphBuilder(commits,simpleNodes,longEdgesCount,nodeToHashIndex);
  PermanentGraphImpl permanentGraph=builder.build();
  return new Pair<PermanentGraphImpl,Map<Integer,GraphCommit>>(permanentGraph,builder.commitsWithNotLoadParentMap);
}
