{
  int end=myNodeToEdgeIndex[upNodeIndex + 1];
  GraphCommit upCommit=myCommits.get(upNodeIndex);
  int[] parentHashIndices=upCommit.getParentIndices();
  for (int i=0; i < parentHashIndices.length; i++) {
    if (parentHashIndices[i] == downNodeHashIndex) {
      int offset=parentHashIndices.length - i;
      int edgeIndex=end - offset;
      if (myLongEdges[edgeIndex] == -1) {
        myLongEdges[edgeIndex]=downNodeIndex;
        return;
      }
 else {
        throw new IllegalStateException("Edge was set early!. Up node: " + upNodeIndex + ", down node: "+ downNodeIndex);
      }
    }
  }
  throw new IllegalStateException("Not found underdone edges for node: " + upNodeIndex + ". Adjacent down node: "+ downNodeIndex);
}
