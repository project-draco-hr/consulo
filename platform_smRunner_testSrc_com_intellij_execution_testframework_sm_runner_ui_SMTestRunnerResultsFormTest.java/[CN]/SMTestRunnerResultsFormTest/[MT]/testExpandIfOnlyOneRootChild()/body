{
  myEventsProcessor.onStartTesting();
  myEventsProcessor.onSuiteStarted(new TestSuiteStartedEvent("suite1",null));
  myResultsViewer.performUpdate();
  myEventsProcessor.onSuiteStarted(new TestSuiteStartedEvent("suite2",null));
  myResultsViewer.performUpdate();
  myEventsProcessor.onTestStarted(new TestStartedEvent("test_failed",null));
  myResultsViewer.performUpdate();
  myEventsProcessor.onTestFailure(new TestFailedEvent("test_failed","","",false,null,null));
  myResultsViewer.performUpdate();
  myEventsProcessor.onTestFinished(new TestFinishedEvent("test_failed",10));
  myResultsViewer.performUpdate();
  myEventsProcessor.onTestStarted(new TestStartedEvent("test",null));
  myResultsViewer.performUpdate();
  myEventsProcessor.onTestFinished(new TestFinishedEvent("test",10));
  myResultsViewer.performUpdate();
  myEventsProcessor.onSuiteFinished(new TestSuiteFinishedEvent("suite2"));
  myResultsViewer.performUpdate();
  myEventsProcessor.onSuiteFinished(new TestSuiteFinishedEvent("suite1"));
  myResultsViewer.performUpdate();
  myEventsProcessor.onFinishTesting();
  myResultsViewer.performUpdate();
  final DefaultMutableTreeNode suite1Node=(DefaultMutableTreeNode)myTreeModel.getChild(myTreeModel.getRoot(),0);
  final DefaultMutableTreeNode suite2Node=(DefaultMutableTreeNode)myTreeModel.getChild(suite1Node,0);
  assertTrue(myResultsViewer.getTreeView().isExpanded(new TreePath(suite1Node.getPath())));
  assertFalse(myResultsViewer.getTreeView().isExpanded(new TreePath(suite2Node.getPath())));
}
