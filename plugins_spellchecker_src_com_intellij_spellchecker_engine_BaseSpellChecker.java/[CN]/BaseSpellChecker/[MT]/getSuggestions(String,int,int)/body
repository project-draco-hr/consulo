{
  final String transformed=transform.transform(word);
  if (transformed == null) {
    return Collections.emptyList();
  }
  final List<Suggestion> suggestions=new ArrayList<Suggestion>();
  engineDictionary.traverse(new Action(){
    public void run(    Map.Entry<? extends String,? extends String> entry){
      if (transformed.charAt(0) == entry.getKey().charAt(0)) {
        final int distance=metrics.calculateMetrics(transformed,entry.getKey());
        suggestions.add(new Suggestion(entry.getKey(),distance));
      }
    }
  }
);
  List<String> result=new ArrayList<String>();
  if (suggestions.isEmpty()) {
    return result;
  }
  Collections.sort(suggestions);
  int bestMetrics=suggestions.get(0).getMetrics();
  for (int i=0; i < threshold; i++) {
    if (suggestions.size() < i || bestMetrics - suggestions.get(i).getMetrics() > quality) {
      break;
    }
    result.add(i,suggestions.get(i).getWord());
  }
  return result;
}
