{
  int searched=0;
  int parentAddress=0;
  final int maxHeight=btree.height + 1;
  while (true) {
    if (isFull()) {
      if (split) {
        parentAddress=splitNode(parentAddress);
        if (parentAddress != 0)         setAddress(parentAddress);
        --searched;
      }
 else {
        myHasFullPagesAlongPath=true;
      }
    }
    int i=search(valueHC);
    ++searched;
    if (searched > maxHeight)     throw new IllegalStateException();
    if (isIndexLeaf()) {
      btree.height=Math.max(btree.height,searched);
      return i;
    }
    int address=i < 0 ? addressAt(-i - 1) : addressAt(i + 1);
    parentAddress=this.address;
    setAddress(-address);
  }
}
