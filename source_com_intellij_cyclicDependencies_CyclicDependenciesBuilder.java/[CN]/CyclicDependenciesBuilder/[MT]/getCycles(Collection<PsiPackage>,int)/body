{
  final HashMap<PsiPackage,Set<ArrayList<PsiPackage>>> result=new HashMap<PsiPackage,Set<ArrayList<PsiPackage>>>();
  final List<Chunk<PsiPackage>> chunks=buildChunks();
  for (Iterator<PsiPackage> iterator=packages.iterator(); iterator.hasNext(); ) {
    PsiPackage psiPackage=iterator.next();
    final List<Chunk<PsiPackage>> chunksByPackage=findChunksByPackage(psiPackage,chunks);
    for (Iterator<Chunk<PsiPackage>> it=chunksByPackage.iterator(); it.hasNext(); ) {
      Chunk<PsiPackage> chunk=it.next();
      Set<ArrayList<PsiPackage>> paths2Pack=result.get(psiPackage);
      if (paths2Pack == null) {
        paths2Pack=new HashSet<ArrayList<PsiPackage>>();
        result.put(psiPackage,paths2Pack);
      }
      final GraphTraverser graphTraverser=new GraphTraverser(psiPackage,chunk,perPackageCycleCount);
      paths2Pack.addAll(graphTraverser.convert(graphTraverser.traverse()));
    }
  }
  return result;
}
