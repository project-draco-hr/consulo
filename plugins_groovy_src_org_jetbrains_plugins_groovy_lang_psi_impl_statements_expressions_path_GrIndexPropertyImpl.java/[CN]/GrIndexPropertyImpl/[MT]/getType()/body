{
  GrExpression selected=getSelectedExpression();
  PsiType thisType=selected.getType();
  if (thisType != null) {
    if (thisType instanceof PsiArrayType) {
      PsiType componentType=((PsiArrayType)thisType).getComponentType();
      return TypesUtil.boxPrimitiveType(componentType,getManager(),getResolveScope());
    }
    GrArgumentList argList=getArgumentList();
    if (argList != null) {
      if (thisType instanceof GrTupleType) {
        PsiType[] types=((GrTupleType)thisType).getParameters();
        return types.length == 1 ? types[0] : null;
      }
      if (InheritanceUtil.isInheritor(thisType,CommonClassNames.JAVA_UTIL_LIST)) {
        PsiType iterType=PsiUtil.extractIterableTypeParameter(thisType,true);
        if (iterType != null)         return iterType;
      }
      if (InheritanceUtil.isInheritor(thisType,CommonClassNames.JAVA_UTIL_MAP)) {
        return PsiUtil.substituteTypeParameter(thisType,CommonClassNames.JAVA_UTIL_MAP,1,true);
      }
      GrExpression[] arguments=argList.getExpressionArguments();
      PsiType[] argTypes=new PsiType[arguments.length];
      for (int i=0; i < arguments.length; i++) {
        PsiType argType=arguments[i].getType();
        if (argType == null)         argType=TypesUtil.getJavaLangObject(argList);
        argTypes[i]=argType;
      }
      return TypesUtil.getOverloadedOperatorType(thisType,"getAt",this,argTypes);
    }
  }
  return null;
}
