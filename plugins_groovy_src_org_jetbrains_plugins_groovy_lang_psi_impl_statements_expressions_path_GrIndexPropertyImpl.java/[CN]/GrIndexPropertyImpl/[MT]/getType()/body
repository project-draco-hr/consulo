{
  GrExpression selected=getSelectedExpression();
  PsiType thisType=selected.getType();
  if (thisType == null)   return null;
  GrArgumentList argList=getArgumentList();
  if (argList == null)   return null;
  PsiType[] argTypes=PsiUtil.getArgumentTypes(argList,false,null);
  final PsiManager manager=getManager();
  final GlobalSearchScope resolveScope=getResolveScope();
  if (PsiImplUtil.isSimpleArrayAccess(thisType,argTypes,manager,resolveScope)) {
    return TypesUtil.boxPrimitiveType(((PsiArrayType)thisType).getComponentType(),manager,resolveScope);
  }
  PsiType overloadedOperatorType=null;
  GroovyResolveResult candidate=PsiImplUtil.getIndexPropertyMethodCandidate(thisType,argTypes,this);
  final PsiElement element=candidate.getElement();
  if (element instanceof PsiMethod) {
    overloadedOperatorType=candidate.getSubstitutor().substitute(getSmartReturnType((PsiMethod)element));
  }
  PsiType componentType=extractMapValueType(thisType,argTypes);
  if (overloadedOperatorType != null && (componentType == null || !TypesUtil.isAssignable(overloadedOperatorType,componentType,manager,resolveScope))) {
    return TypesUtil.boxPrimitiveType(overloadedOperatorType,manager,resolveScope);
  }
  return componentType;
}
