{
  GrExpression selected=getSelectedExpression();
  PsiType thisType=selected.getType();
  if (thisType != null) {
    GrArgumentList argList=getArgumentList();
    if (argList != null) {
      GrExpression[] arguments=argList.getExpressionArguments();
      PsiType[] argTypes=new PsiType[arguments.length];
      for (int i=0; i < arguments.length; i++) {
        PsiType argType=arguments[i].getType();
        if (argType == null)         argType=TypesUtil.getJavaLangObject(argList);
        argTypes[i]=argType;
      }
      if (thisType instanceof GrTupleType) {
        PsiType[] types=((GrTupleType)thisType).getParameters();
        return types.length == 1 ? types[0] : null;
      }
      PsiType overloadedOperatorType=null;
      final GroovyResolveResult[] candidates=TypesUtil.getOverloadedOperatorCandidates(thisType,"getAt",this,argTypes);
      if (candidates.length == 1) {
        final PsiElement element=candidates[0].getElement();
        if (element instanceof PsiMethod) {
          overloadedOperatorType=candidates[0].getSubstitutor().substitute(org.jetbrains.plugins.groovy.lang.psi.util.PsiUtil.getSmartReturnType((PsiMethod)element));
          if (overloadedOperatorType != null && !(element instanceof GrGdkMethod)) {
            return overloadedOperatorType;
          }
        }
      }
      if (thisType instanceof PsiArrayType) {
        PsiType componentType=((PsiArrayType)thisType).getComponentType();
        return TypesUtil.boxPrimitiveType(componentType,getManager(),getResolveScope());
      }
      if (InheritanceUtil.isInheritor(thisType,CommonClassNames.JAVA_UTIL_LIST)) {
        PsiType iterType=PsiUtil.extractIterableTypeParameter(thisType,true);
        if (iterType != null)         return iterType;
      }
      if (InheritanceUtil.isInheritor(thisType,CommonClassNames.JAVA_UTIL_MAP)) {
        return PsiUtil.substituteTypeParameter(thisType,CommonClassNames.JAVA_UTIL_MAP,1,true);
      }
      return overloadedOperatorType;
    }
  }
  return null;
}
