{
  Map<VirtualFile,Repository> repositories;
  try {
    MODIFY_LOCK.lock();
    try {
      REPO_LOCK.readLock().lock();
      if (myRepositories.containsKey(checkedRoot))       return;
      repositories=ContainerUtil.newHashMap(myRepositories);
    }
  finally {
      REPO_LOCK.readLock().unlock();
    }
    Collection<VirtualFile> invalidRoots=findInvalidRoots(repositories.keySet());
    repositories.keySet().removeAll(invalidRoots);
    Map<VirtualFile,Repository> newRoots=findNewRoots(repositories.keySet());
    repositories.putAll(newRoots);
    REPO_LOCK.writeLock().lock();
    try {
      if (!myDisposed) {
        myRepositories.clear();
        myRepositories.putAll(repositories);
      }
    }
  finally {
      REPO_LOCK.writeLock().unlock();
    }
  }
  finally {
    MODIFY_LOCK.unlock();
  }
}
