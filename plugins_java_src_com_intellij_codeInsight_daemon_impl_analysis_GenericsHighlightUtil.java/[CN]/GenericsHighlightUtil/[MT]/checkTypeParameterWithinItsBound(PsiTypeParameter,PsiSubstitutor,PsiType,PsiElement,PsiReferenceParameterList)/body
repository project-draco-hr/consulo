{
  final PsiClass referenceClass=type instanceof PsiClassType ? ((PsiClassType)type).resolve() : null;
  final PsiType psiType=substitutor.substitute(classParameter);
  if (psiType instanceof PsiClassType && !(PsiUtil.resolveClassInType(psiType) instanceof PsiTypeParameter)) {
    if (checkNotInBounds(type,psiType,referenceParameterList)) {
      final String description="Actual type argument and inferred type contradict each other";
      return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(typeElement2Highlight).descriptionAndTooltip(description).create();
    }
  }
  final PsiClassType[] bounds=classParameter.getSuperTypes();
  for (  PsiClassType type1 : bounds) {
    PsiType bound=substitutor.substitute(type1);
    if (!bound.equalsToText(CommonClassNames.JAVA_LANG_OBJECT) && checkNotInBounds(type,bound,referenceParameterList)) {
      PsiClass boundClass=bound instanceof PsiClassType ? ((PsiClassType)bound).resolve() : null;
      @NonNls final String messageKey=boundClass == null || referenceClass == null || referenceClass.isInterface() == boundClass.isInterface() ? "generics.type.parameter.is.not.within.its.bound.extend" : "generics.type.parameter.is.not.within.its.bound.implement";
      String description=JavaErrorMessages.message(messageKey,referenceClass != null ? HighlightUtil.formatClass(referenceClass) : type.getPresentableText(),JavaHighlightUtil.formatType(bound));
      final HighlightInfo info=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(typeElement2Highlight).descriptionAndTooltip(description).create();
      if (bound instanceof PsiClassType && referenceClass != null && info != null) {
        QuickFixAction.registerQuickFixAction(info,QUICK_FIX_FACTORY.createExtendsListFix(referenceClass,(PsiClassType)bound,true),null);
      }
      return info;
    }
  }
  return null;
}
