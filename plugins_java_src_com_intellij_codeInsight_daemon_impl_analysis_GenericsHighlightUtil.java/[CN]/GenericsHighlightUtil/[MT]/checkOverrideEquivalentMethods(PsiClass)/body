{
  final Collection<HierarchicalMethodSignature> signaturesWithSupers=aClass.getVisibleSignatures();
  PsiManager manager=aClass.getManager();
  Map<MethodSignature,MethodSignatureBackedByPsiMethod> sameErasureMethods=new THashMap<MethodSignature,MethodSignatureBackedByPsiMethod>(MethodSignatureUtil.METHOD_PARAMETERS_ERASURE_EQUALITY);
  for (  HierarchicalMethodSignature signature : signaturesWithSupers) {
    HighlightInfo info=checkSameErasureNotSubSignatureInner(signature,manager,aClass,sameErasureMethods);
    if (info != null)     return info;
  }
  final PsiIdentifier classIdentifier=aClass.getNameIdentifier();
  if (PsiUtil.isLanguageLevel8OrHigher(aClass) && classIdentifier != null) {
    final HighlightInfo info=checkUnrelatedDefaultMethods(aClass,signaturesWithSupers,classIdentifier);
    if (info != null)     return info;
  }
  return null;
}
