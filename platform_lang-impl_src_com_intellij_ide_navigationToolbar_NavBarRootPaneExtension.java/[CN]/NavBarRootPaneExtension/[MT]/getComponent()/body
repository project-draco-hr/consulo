{
  if (myWrapperPanel == null) {
    myWrapperPanel=new JPanel(new BorderLayout()){
      @Override protected void paintChildren(      Graphics g){
        super.paintChildren(g);
        if (UIUtil.isUnderAquaLookAndFeel() && !UISettings.getInstance().SHOW_MAIN_TOOLBAR) {
          final Rectangle r=getBounds();
          g.setColor(new Color(255,255,255,90));
          g.drawLine(0,r.height - 4,r.width,r.height - 4);
          g.setColor(new Color(0,0,0,90));
          g.drawLine(0,r.height - 3,r.width,r.height - 3);
          g.setColor(new Color(0,0,0,20));
          g.drawLine(0,r.height - 2,r.width,r.height - 2);
        }
      }
      @Override protected void paintComponent(      Graphics g){
        if (!UIUtil.isUnderAquaLookAndFeel()) {
          super.paintComponent(g);
          return;
        }
        final Rectangle r=getBounds();
        if (UISettings.getInstance().SHOW_MAIN_TOOLBAR) {
          g.setColor(new Color(200,200,200));
          g.fillRect(0,0,r.width,r.height);
        }
 else {
          UIUtil.drawGradientHToolbarBackground(g,r.width,r.height);
        }
      }
      @Override public Insets getInsets(){
        final Insets i=super.getInsets();
        if (!UIUtil.isUnderAquaLookAndFeel()) {
          return i;
        }
        return new Insets(i.top,i.left,i.bottom + 3,i.right);
      }
    }
;
    myWrapperPanel.add(buildNavBarPanel(),BorderLayout.CENTER);
    myWrapperPanel.putClientProperty("NavBarPanel",myNavigationBar);
    toggleRunPanel(!UISettings.getInstance().SHOW_MAIN_TOOLBAR);
  }
  return myWrapperPanel;
}
