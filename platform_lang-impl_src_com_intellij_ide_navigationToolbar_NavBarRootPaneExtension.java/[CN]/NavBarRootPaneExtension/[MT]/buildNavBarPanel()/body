{
  JPanel panel=new JPanel(new BorderLayout()){
    @Override protected void paintComponent(    Graphics g){
      super.paintComponent(g);
      final Component navBar=myScrollPane;
      Insets insets=getInsets();
      Rectangle r=navBar.getBounds();
      Graphics2D g2d=(Graphics2D)g.create();
      g2d.translate(r.x,r.y);
      Rectangle rectangle=new Rectangle(0,0,r.width + insets.left + insets.right,r.height + insets.top + insets.bottom);
      NavBarUIManager.getUI().doPaintNavBarPanel(g2d,rectangle,isMainToolbarVisible(),isUndocked());
      if (UIUtil.isUnderAquaLookAndFeel() && isUndocked()) {
        Rectangle bounds=getParent().getBounds();
        NavBarUIManager.getUI().doPaintWrapperPanel(g2d,bounds,false);
      }
      g2d.dispose();
    }
    @Override public void doLayout(){
      final Rectangle r=getBounds();
      final Insets insets=getInsets();
      int x=insets.left;
      if (myScrollPane == null)       return;
      final Component navBar=myScrollPane;
      final Dimension preferredSize=navBar.getPreferredSize();
      navBar.setBounds(x,(r.height - preferredSize.height) / 2,r.width - insets.left - insets.right,preferredSize.height);
    }
  }
;
  myNavigationBar=new NavBarPanel(myProject,true);
  myWrapperPanel.putClientProperty("NavBarPanel",myNavigationBar);
  myNavigationBar.getModel().setFixedComponent(true);
  myScrollPane=ScrollPaneFactory.createScrollPane(myNavigationBar);
  myScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
  myScrollPane.setHorizontalScrollBar(null);
  myScrollPane.setBorder(new NavBarBorder(true,0));
  myScrollPane.setOpaque(false);
  myScrollPane.getViewport().setOpaque(false);
  panel.setOpaque(true);
  myNavigationBar.setBorder(null);
  panel.add(myScrollPane,BorderLayout.CENTER);
  return panel;
}
