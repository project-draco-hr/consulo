{
  final PsiClass aClass=PsiTreeUtil.getParentOfType(expression,PsiClass.class);
  if (aClass instanceof PsiAnonymousClass) {
    final PsiExpressionList args=((PsiAnonymousClass)aClass).getArgumentList();
    if (args != null && PsiTreeUtil.isAncestor(args,expression,true)) {
      return PsiTreeUtil.getParentOfType(aClass,PsiClass.class);
    }
  }
  return aClass;
}
