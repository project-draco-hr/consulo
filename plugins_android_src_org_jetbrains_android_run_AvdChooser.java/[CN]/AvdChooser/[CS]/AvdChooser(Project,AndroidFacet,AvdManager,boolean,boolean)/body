{
  super(project,true);
  myMustSelect=mustSelect;
  setTitle(AndroidBundle.message("avd.dialog.title"));
  init();
  myAvdManager=avdManager;
  myFacet=facet;
  myAvdTable.setModel(new MyAvdTableModel(myFacet.getAllAvds()));
  myAvdTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myCompatibleAvd=compatibleAvd;
  myRefreshButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateTable();
    }
  }
);
  myCreateButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      createAvd(project,facet);
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      removeSelectedAvd();
    }
  }
);
  myAvdTable.setDefaultRenderer(Boolean.class,new BooleanCellRenderer());
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      if (isOKActionEnabled()) {
        doOKAction();
        return true;
      }
      return false;
    }
  }
.installOn(myAvdTable);
  final String androidToolPath=getAndroidToolPath(facet);
  myStartAvdManagerButton.setEnabled(new File(androidToolPath).exists());
  myStartAvdManagerButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      GeneralCommandLine commandLine=new GeneralCommandLine();
      commandLine.setExePath(androidToolPath);
      AndroidUtils.runExternalToolInSeparateThread(commandLine,null);
    }
  }
);
  updateTable();
  ListSelectionModel selectionModel=myAvdTable.getSelectionModel();
  if (mustSelect) {
    if (myAvdTable.getModel().getRowCount() > 0) {
      selectionModel.setSelectionInterval(0,0);
    }
  }
  selectionModel.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateOkAction();
    }
  }
);
  updateOkAction();
  myAvdTable.requestFocus();
}
