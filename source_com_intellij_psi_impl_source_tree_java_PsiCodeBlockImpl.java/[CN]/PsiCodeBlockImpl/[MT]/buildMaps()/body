{
  Set<String> set1=myClassesSet;
  Set<String> set2=myVariablesSet;
  boolean wasConflict=myConflict;
  if (set1 == null || set2 == null) {
    final Set<String> localsSet=new THashSet<String>();
    final Set<String> classesSet=new THashSet<String>();
    final Ref<Boolean> conflict=new Ref<Boolean>(Boolean.FALSE);
    PsiScopesUtil.walkChildrenScopes(this,new BaseScopeProcessor(){
      public boolean execute(      PsiElement element,      PsiSubstitutor substitutor){
        if (element instanceof PsiLocalVariable) {
          final PsiLocalVariable variable=(PsiLocalVariable)element;
          final String name=variable.getName();
          if (!localsSet.add(name)) {
            conflict.set(Boolean.TRUE);
            localsSet.clear();
            classesSet.clear();
          }
        }
 else         if (element instanceof PsiClass) {
          final PsiClass psiClass=(PsiClass)element;
          final String name=psiClass.getName();
          if (!classesSet.add(name)) {
            conflict.set(Boolean.TRUE);
            localsSet.clear();
            classesSet.clear();
          }
        }
        return !conflict.get();
      }
    }
,PsiSubstitutor.EMPTY,this,this);
    myClassesSet=set1=classesSet;
    myVariablesSet=set2=localsSet;
    myConflict=wasConflict=conflict.get();
  }
  return wasConflict ? null : Pair.create(set1,set2);
}
