{
  processor.handleEvent(PsiScopeProcessor.Event.SET_DECLARATION_HOLDER,this);
  if (lastParent == null) {
    return true;
  }
  Pair<Set<String>,Set<String>> pair=buildMaps();
  boolean conflict=pair == null;
  final Set<String> classesSet=conflict ? null : pair.getFirst();
  final Set<String> variablesSet=conflict ? null : pair.getSecond();
  final NameHint hint=processor.getHint(NameHint.class);
  if (hint != null && !conflict) {
    final ElementClassHint elementClassHint=processor.getHint(ElementClassHint.class);
    final String name=hint.getName();
    if ((elementClassHint == null || elementClassHint.shouldProcess(PsiClass.class)) && classesSet.contains(name)) {
      return PsiScopesUtil.walkChildrenScopes(this,processor,substitutor,lastParent,place);
    }
    if ((elementClassHint == null || elementClassHint.shouldProcess(PsiVariable.class)) && variablesSet.contains(name)) {
      return PsiScopesUtil.walkChildrenScopes(this,processor,substitutor,lastParent,place);
    }
  }
 else {
    return PsiScopesUtil.walkChildrenScopes(this,processor,substitutor,lastParent,place);
  }
  return true;
}
