{
  final LightVirtualFile virtualFile=new LightVirtualFile(name,fileType,text,modificationStamp);
  final ParserDefinition parserDefinition=LanguageParserDefinitions.INSTANCE.forLanguage(language);
  final FileViewProviderFactory factory=LanguageFileViewProviders.INSTANCE.forLanguage(language);
  FileViewProvider viewProvider=factory != null ? factory.createFileViewProvider(virtualFile,language,myManager,physical) : null;
  if (viewProvider == null)   viewProvider=new SingleRootFileViewProvider(myManager,virtualFile,physical);
  if (parserDefinition != null) {
    final PsiFile psiFile=viewProvider.getPsi(targetLanguage);
    if (psiFile != null) {
      if (markAsCopy) {
        markGenerated(psiFile);
      }
      return psiFile;
    }
  }
  final SingleRootFileViewProvider singleRootFileViewProvider=new SingleRootFileViewProvider(myManager,virtualFile,physical);
  final PsiPlainTextFileImpl plainTextFile=new PsiPlainTextFileImpl(singleRootFileViewProvider);
  if (markAsCopy)   CodeEditUtil.setNodeGenerated(plainTextFile.getNode(),true);
  return plainTextFile;
}
