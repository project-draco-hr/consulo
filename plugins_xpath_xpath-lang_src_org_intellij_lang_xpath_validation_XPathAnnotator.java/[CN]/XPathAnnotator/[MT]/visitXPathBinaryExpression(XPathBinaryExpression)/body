{
  if (XPath2TokenTypes.COMP_OPS.contains(o.getOperator())) {
    if (o.getContainingFile().getLanguage() == XPathFileType.XPATH2.getLanguage()) {
      final XPathExpression operand=o.getLOperand();
      if (operand instanceof XPathBinaryExpression && XPath2TokenTypes.COMP_OPS.contains(((XPathBinaryExpression)operand).getOperator())) {
        final Annotation annotation=myHolder.createErrorAnnotation(o,"Consecutive comparison is not allowed in XPath 2");
        final XPathExpression rOperand=o.getROperand();
        if (rOperand != null) {
          final String replacement="(" + operand.getText() + ") "+ o.getOperationSign()+ " "+ rOperand.getText();
          annotation.registerFix(new ConsecutiveComparisonFix(replacement,o));
        }
      }
    }
  }
  checkExpression(myHolder,o);
  super.visitXPathBinaryExpression(o);
}
