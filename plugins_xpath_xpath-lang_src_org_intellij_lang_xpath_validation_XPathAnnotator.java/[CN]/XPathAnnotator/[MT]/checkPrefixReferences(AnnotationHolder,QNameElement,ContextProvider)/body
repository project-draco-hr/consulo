{
  final PsiReference[] references=element.getReferences();
  for (  PsiReference reference : references) {
    if (reference instanceof PrefixReference) {
      final PrefixReference pr=((PrefixReference)reference);
      if (!pr.isSoft() && pr.isUnresolved()) {
        final TextRange range=pr.getRangeInElement().shiftRight(pr.getElement().getTextRange().getStartOffset());
        final Annotation a=holder.createErrorAnnotation(range,"Unresolved namespace prefix '" + pr.getCanonicalText() + "'");
        a.setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
        final NamespaceContext namespaceContext=myProvider.getNamespaceContext();
        final PrefixedName qName=element.getQName();
        if (namespaceContext != null && qName != null) {
          final IntentionAction[] fixes=namespaceContext.getUnresolvedNamespaceFixes(reference,qName.getLocalName());
          for (          IntentionAction fix : fixes) {
            a.registerFix(fix);
          }
        }
      }
    }
  }
}
