{
  return new BaseInspectionVisitor(){
    @Override public void visitFile(    GroovyFileBase file){
      if (!(file instanceof GroovyFile))       return;
      if (!myCheckScripts && file.isScript())       return;
      String expectedPackage=ResolveUtil.inferExpectedPackageName(file);
      String actual=file.getPackageName();
      if (!expectedPackage.equals(actual)) {
        PsiElement toHighlight=getElementToHighlight((GroovyFile)file);
        if (toHighlight == null)         return;
        registerError(toHighlight,"Package name mismatch. Actual: '" + actual + "', expected: '"+ expectedPackage+ "'",new LocalQuickFix[]{new ChangePackageQuickFix(expectedPackage),new GrMoveToDirFix(actual)},ProblemHighlightType.GENERIC_ERROR_OR_WARNING);
      }
    }
  }
;
}
