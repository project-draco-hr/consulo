{
  ApplicationManager.getApplication().runWriteAction(new CommitToPsiFileAction(document){
    public void run(){
      if (isCommittingDocument(document))       return;
      document.putUserData(KEY_COMMITING,Boolean.TRUE);
      try {
        boolean hasCommits=false;
        final FileViewProvider viewProvider=getCachedViewProvider(document);
        if (viewProvider != null) {
          final List<PsiFile> psiFiles=viewProvider.getAllFiles();
          for (          PsiFile file : psiFiles) {
            if (file.isValid() && file != excludeFile) {
              hasCommits|=commit(document,file);
            }
          }
          viewProvider.contentsSynchronized();
        }
        myUncommittedDocuments.remove(document);
        if (hasCommits) {
          InjectedLanguageUtil.commitAllInjectedDocuments(document,myProject);
        }
      }
  finally {
        document.putUserData(KEY_COMMITING,null);
      }
    }
  }
);
synchronized (myListeners) {
    final List<Runnable> list=document.getUserData(ACTION_AFTER_COMMIT);
    if (list != null) {
      document.putUserData(ACTION_AFTER_COMMIT,null);
      for (      final Runnable runnable : list) {
        runnable.run();
      }
    }
  }
}
