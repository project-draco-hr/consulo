{
  String prefix=commenter.getLineCommentPrefix();
  int lineStart=myDocument.getLineStartOffset(line);
  lineStart=CharArrayUtil.shiftForward(chars,lineStart," \t");
  boolean commented;
  if (prefix != null) {
    commented=CharArrayUtil.regionMatches(chars,lineStart,prefix) || prefix.endsWith(" ") && CharArrayUtil.regionMatches(chars,lineStart,prefix.trim() + "\n");
    if (commented) {
      myStartOffsets[line - myStartLine]=lineStart;
      myEndOffsets[line - myStartLine]=-1;
    }
  }
 else {
    prefix=commenter.getBlockCommentPrefix();
    String suffix=commenter.getBlockCommentSuffix();
    final int textLength=myDocument.getTextLength();
    int lineEnd=myDocument.getLineEndOffset(line);
    if (lineEnd == textLength) {
      final int shifted=CharArrayUtil.shiftBackward(chars,textLength - 1," \t");
      if (shifted < textLength - 1)       lineEnd=shifted;
    }
 else {
      lineEnd=CharArrayUtil.shiftBackward(chars,lineEnd," \t");
    }
    commented=(lineStart == lineEnd && myStartLine != myEndLine) || (CharArrayUtil.regionMatches(chars,lineStart,prefix) && CharArrayUtil.regionMatches(chars,lineEnd - suffix.length(),suffix));
    if (commented) {
      myStartOffsets[line - myStartLine]=lineStart;
      myEndOffsets[line - myStartLine]=lineEnd;
    }
  }
  return commented;
}
