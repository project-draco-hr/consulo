{
  return new ElementToWorkOn.ElementsProcessor<ElementToWorkOn>(){
    @Override public boolean accept(    ElementToWorkOn el){
      return BaseExpressionToFieldHandler.this.accept(el);
    }
    @Override public void pass(    final ElementToWorkOn elementToWorkOn){
      if (elementToWorkOn == null)       return;
      final boolean hasRunTemplate=LookupManager.getActiveLookup(editor) == null;
      if (elementToWorkOn.getExpression() == null) {
        final PsiLocalVariable localVariable=elementToWorkOn.getLocalVariable();
        final boolean result=invokeImpl(project,localVariable,editor) && hasRunTemplate;
        if (result) {
          editor.getSelectionModel().removeSelection();
        }
      }
 else {
        if (invokeImpl(project,elementToWorkOn.getExpression(),editor) && hasRunTemplate) {
          editor.getSelectionModel().removeSelection();
        }
      }
    }
  }
;
}
