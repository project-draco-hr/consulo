{
  final FilePath nodePath=getPathForObject(change);
  ChangesBrowserNode oldNode=foldersCache.get(nodePath);
  if (oldNode != null) {
    ChangesBrowserNode node=ChangesBrowserNode.create(myProject,change);
    for (int i=oldNode.getChildCount() - 1; i >= 0; i--) {
      MutableTreeNode child=(MutableTreeNode)model.getChild(oldNode,i);
      model.removeNodeFromParent(child);
      model.insertNodeInto(child,node,model.getChildCount(node));
    }
    final MutableTreeNode parent=(MutableTreeNode)oldNode.getParent();
    int index=model.getIndexOfChild(parent,oldNode);
    model.removeNodeFromParent(oldNode);
    model.insertNodeInto(node,parent,index);
    foldersCache.put(nodePath,node);
  }
 else {
    final ChangesBrowserNode node=ChangesBrowserNode.create(myProject,change);
    ChangesBrowserNode parentNode=getParentNodeFor(node,foldersCache,policy,listNode);
    model.insertNodeInto(node,parentNode,model.getChildCount(parentNode));
    foldersCache.put(nodePath,node);
  }
}
