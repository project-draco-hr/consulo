{
  CheckUtil.checkWritable(thisElement);
  final CharTable table=findCharTableByTree(SourceTreeToPsiMap.psiElementToTree(thisElement));
  FileType fileType=thisElement.getContainingFile().getFileType();
  Project project=thisElement.getProject();
  Helper helper=new Helper(fileType,project);
  TreeElement copyFirst=null;
  ASTNode copyLast=null;
  ASTNode next=SourceTreeToPsiMap.psiElementToTree(last).getTreeNext();
  ASTNode parent=null;
  for (TreeElement element=SourceTreeToPsiMap.psiElementToTree(first); element != next; element=element.getTreeNext()) {
    TreeElement elementCopy=ChangeUtil.copyElement(element,table);
    if (element == first) {
      copyFirst=elementCopy;
    }
    if (element == last) {
      copyLast=elementCopy;
    }
    if (parent == null)     parent=elementCopy.getTreeParent();
 else {
      parent.addChild(elementCopy,null);
      helper.normalizeIndent(elementCopy);
    }
  }
  if (copyFirst == null)   return null;
  copyFirst=((CompositeElement)SourceTreeToPsiMap.psiElementToTree(thisElement)).addInternal(copyFirst,copyLast,anchor,before);
  for (TreeElement element=copyFirst; element != null; element=element.getTreeNext()) {
    element=ChangeUtil.decodeInformation(element);
    if (element.getTreePrev() == null) {
      copyFirst=element;
    }
  }
  return SourceTreeToPsiMap.treeElementToPsi(copyFirst);
}
