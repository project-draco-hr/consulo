{
  final String visibilityModifier=VisibilityUtil.getVisibilityModifier(element.getModifierList());
  if (PsiModifier.PRIVATE.equals(visibilityModifier))   return true;
  if (PsiModifier.PUBLIC.equals(visibilityModifier))   return false;
  final PsiFile containingFile=myOuterClass.getContainingFile();
  if (myTargetContainer instanceof PsiDirectory) {
    final PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage((PsiDirectory)myTargetContainer);
    return !isInPackage(containingFile,aPackage);
  }
  PsiFile targetFile=myTargetContainer.getContainingFile();
  if (targetFile != null) {
    final PsiDirectory containingDirectory=targetFile.getContainingDirectory();
    if (containingDirectory != null) {
      final PsiPackage targetPackage=JavaDirectoryService.getInstance().getPackage(containingDirectory);
      return isInPackage(containingFile,targetPackage);
    }
  }
  return false;
}
