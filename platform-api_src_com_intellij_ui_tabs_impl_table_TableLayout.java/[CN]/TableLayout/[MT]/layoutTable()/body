{
  myTabs.resetLayout(true);
  final TableLayoutData data=computeLayoutTable();
  final Insets insets=myTabs.getLayoutInsets();
  int eachY=insets.top;
  int eachX;
  for (  TableRow eachRow : data.table) {
    eachX=insets.left;
    int deltaToFit=0;
    if (eachRow.width < data.toFitRec.width && data.table.size() > 1) {
      deltaToFit=(int)Math.floor((double)(data.toFitRec.width - eachRow.width) / (double)eachRow.myColumns.size());
    }
    for (int i=0; i < eachRow.myColumns.size(); i++) {
      TabInfo tabInfo=eachRow.myColumns.get(i);
      final TabLabel label=myTabs.myInfo2Label.get(tabInfo);
      int width;
      if (i < eachRow.myColumns.size() - 1 || deltaToFit == 0) {
        width=label.getPreferredSize().width + deltaToFit;
      }
 else {
        width=data.toFitRec.width + insets.left - eachX - 1;
      }
      label.setBounds(eachX,eachY,width,myTabs.myHeaderFitSize.height);
      label.setAligmentToCenter(deltaToFit > 0);
      eachX+=width;
    }
    eachY+=myTabs.myHeaderFitSize.height - 1;
  }
  if (myTabs.getSelectedInfo() != null) {
    final JComponent selectedToolbar=myTabs.myInfo2Toolbar.get(myTabs.getSelectedInfo());
    int xAddin=0;
    if (!myTabs.myHorizontalSide && selectedToolbar != null) {
      xAddin=selectedToolbar.getPreferredSize().width + 1;
      selectedToolbar.setBounds(insets.left + 1,eachY + 1,selectedToolbar.getPreferredSize().width,myTabs.getHeight() - eachY - insets.bottom- 2);
    }
    myTabs.layoutComp(xAddin,eachY + 3,myTabs.getSelectedInfo().getComponent());
  }
  myLastTableLayout=data;
  return data;
}
