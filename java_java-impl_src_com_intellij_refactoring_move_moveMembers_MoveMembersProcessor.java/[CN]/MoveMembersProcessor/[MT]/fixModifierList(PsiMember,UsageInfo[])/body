{
  PsiModifierList modifierList=newMember.getModifierList();
  if (modifierList != null && myTargetClass.isInterface()) {
    modifierList.setModifierProperty(PsiModifier.PUBLIC,false);
    modifierList.setModifierProperty(PsiModifier.PROTECTED,false);
    modifierList.setModifierProperty(PsiModifier.PRIVATE,false);
    if (newMember instanceof PsiClass) {
      modifierList.setModifierProperty(PsiModifier.STATIC,false);
    }
    return;
  }
  if (myNewVisibility == null)   return;
  final List<UsageInfo> filtered=new ArrayList<UsageInfo>();
  for (  UsageInfo usage : usages) {
    if (usage instanceof MoveMembersUsageInfo && ((MoveMembersUsageInfo)usage).member == newMember) {
      filtered.add(usage);
    }
  }
  VisibilityUtil.fixVisibility(filtered.toArray(new UsageInfo[filtered.size()]),newMember,myNewVisibility);
}
