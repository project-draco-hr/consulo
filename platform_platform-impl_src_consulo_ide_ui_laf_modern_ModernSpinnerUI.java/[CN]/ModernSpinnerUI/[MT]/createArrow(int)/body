{
  final Color shadow=UIUtil.getPanelBackground();
  final Color darkShadow=UIUtil.getLabelForeground();
  JButton b=new BasicArrowButton(direction,shadow,shadow,darkShadow,shadow){
    @Override public void paint(    Graphics g){
      int y=direction == NORTH ? getHeight() - 6 : 2;
      paintTriangle(g,0,y,0,direction,ModernSpinnerUI.this.spinner.isEnabled());
    }
    @Override public boolean isOpaque(){
      return false;
    }
    @Override public void paintTriangle(    Graphics g,    int x,    int y,    int size,    int direction,    boolean isEnabled){
      final GraphicsConfig config=GraphicsUtil.setupAAPainting(g);
      int mid;
      final int w=8;
      final int h=6;
      mid=w / 2;
      g.setColor(isEnabled ? darkShadow : darkShadow.darker());
      g.translate(x,y);
switch (direction) {
case SOUTH:
        g.fillPolygon(new int[]{0,w,mid},new int[]{1,1,h},3);
      break;
case NORTH:
    g.fillPolygon(new int[]{0,w,mid},new int[]{h - 1,h - 1,0},3);
  break;
case WEST:
case EAST:
}
g.translate(-x,-y);
config.restore();
}
}
;
Border buttonBorder=UIManager.getBorder("Spinner.arrowButtonBorder");
if (buttonBorder instanceof UIResource) {
b.setBorder(new CompoundBorder(buttonBorder,null));
}
 else {
b.setBorder(buttonBorder);
}
b.setInheritsPopupMenu(true);
return b;
}
