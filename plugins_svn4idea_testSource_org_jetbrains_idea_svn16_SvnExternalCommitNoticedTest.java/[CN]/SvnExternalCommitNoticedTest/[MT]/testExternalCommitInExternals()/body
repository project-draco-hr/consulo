{
  prepareExternal();
  final File sourceDir=new File(myWorkingCopyDir.getPath(),"source");
  final File externalDir=new File(myWorkingCopyDir.getPath(),"source/external");
  final File file=new File(externalDir,"t11.txt");
  final VirtualFile vf=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
  final File mainFile=new File(myWorkingCopyDir.getPath(),"source/s1.txt");
  final VirtualFile vfMain=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(mainFile);
  renameFileInCommand(vf,"tt11.txt");
  renameFileInCommand(vfMain,"ss11.txt");
  myVcsDirtyScopeManager.markEverythingDirty();
  clManager.ensureUpToDate(false);
  Assert.assertEquals(2,clManager.getChangesIn(myWorkingCopyDir).size());
  try {
    Thread.sleep(100);
  }
 catch (  InterruptedException e) {
  }
  verify(runSvn("ci","-m","test",sourceDir.getPath()));
  verify(runSvn("ci","-m","test",externalDir.getPath()));
  myWorkingCopyDir.refresh(false,true);
  final LocalFileSystem lfs=LocalFileSystem.getInstance();
  imitateEvent(lfs.refreshAndFindFileByIoFile(sourceDir));
  imitateEvent(lfs.refreshAndFindFileByIoFile(externalDir));
  clManager.ensureUpToDate(false);
  Assert.assertEquals(0,clManager.getChangesIn(myWorkingCopyDir).size());
}
