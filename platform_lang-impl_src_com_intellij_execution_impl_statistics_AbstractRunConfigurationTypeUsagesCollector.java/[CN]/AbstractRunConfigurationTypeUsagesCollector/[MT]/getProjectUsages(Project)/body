{
  final Set<String> runConfigurationTypes=new HashSet<String>();
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      final RunManager runManager=RunManager.getInstance(project);
      for (      RunConfiguration runConfiguration : runManager.getAllConfigurations()) {
        if ((runConfiguration != null) && isApplicable(runManager,runConfiguration)) {
          final ConfigurationFactory configurationFactory=runConfiguration.getFactory();
          final ConfigurationType configurationType=configurationFactory.getType();
          final StringBuilder keyBuilder=new StringBuilder();
          keyBuilder.append(configurationType.getId());
          if (configurationType.getConfigurationFactories().length > 1) {
            keyBuilder.append(".").append(configurationFactory.getName());
          }
          runConfigurationTypes.add(keyBuilder.toString());
        }
      }
    }
  }
);
  return ContainerUtil.map2Set(runConfigurationTypes,new Function<String,UsageDescriptor>(){
    @Override public UsageDescriptor fun(    String runConfigurationType){
      return new UsageDescriptor(runConfigurationType,1);
    }
  }
);
}
