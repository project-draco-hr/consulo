{
  path=getLastCommitName(project,path);
  final VirtualFile root=GitUtil.getGitRoot(project,path);
  GitSimpleHandler h=new GitSimpleHandler(project,root,"log");
  h.setNoSSH(true);
  h.addParameters("-M","--follow","--name-only","--pretty=format:%H%x00%ct%x00%an%x20<%ae>%x00%cn%x20<%ce>%x00%s%n%n%b%x00");
  h.endOptions();
  h.addRelativePaths(path);
  String output=h.run();
  List<VcsFileRevision> rc=new ArrayList<VcsFileRevision>();
  StringTokenizer tk=new StringTokenizer(output,"\u0000\n",false);
  String prefix=root.getPath() + "/";
  while (tk.hasMoreTokens()) {
    final GitRevisionNumber revision=new GitRevisionNumber(tk.nextToken("\u0000\n"),GitUtil.parseTimestamp(tk.nextToken("\u0000")));
    final String author=GitUtil.adjustAuthorName(tk.nextToken("\u0000"),tk.nextToken("\u0000"));
    final String message=tk.nextToken("\u0000").trim();
    final FilePath revisionPath=VcsUtil.getFilePathForDeletedFile(prefix + GitUtil.unescapePath(tk.nextToken("\u0000\n")),false);
    rc.add(new GitFileRevision(project,revisionPath,revision,author,message,null));
  }
  return rc;
}
