{
  GitSimpleHandler h=new GitSimpleHandler(project,root,GitCommand.STASH);
  GitLogParser parser=new GitLogParser(SHORT_HASH,HASH,COMMIT_TIME,AUTHOR_NAME,AUTHOR_TIME,AUTHOR_EMAIL,COMMITTER_NAME,COMMITTER_EMAIL,SHORT_PARENTS,REF_NAMES,SHORT_REF_LOG_SELECTOR,SUBJECT,BODY,RAW_BODY);
  h.setSilent(true);
  h.setNoSSH(true);
  h.addParameters("list");
  h.addParameters(parameters);
  h.addParameters(parser.getPretty());
  parser.parseStatusBeforeName(true);
  String out;
  h.setCharset(Charset.forName(GitConfigUtil.getLogEncoding(project,root)));
  out=h.run();
  final List<GitLogRecord> gitLogRecords=parser.parse(out);
  final List<Pair<String,GitCommit>> result=new ArrayList<Pair<String,GitCommit>>();
  for (  GitLogRecord gitLogRecord : gitLogRecords) {
    ProgressManager.checkCanceled();
    final GitCommit gitCommit=createCommit(project,refs,root,gitLogRecord);
    result.add(new Pair<String,GitCommit>(gitLogRecord.getShortenedRefLog(),gitCommit));
  }
  return result;
}
