{
  final String text=sb.toString();
  sb.setLength(0);
  sb.append(line);
  if (text.length() == 0)   return;
  GitLogRecord record=parser.parseOneRecord(text);
  final GitCommit gitCommit;
  try {
    final List<String> branches=new ArrayList<String>();
    GitBranch.listAsStrings(project,root,true,true,branches,record.getHash());
    gitCommit=createCommit(project,refs,root,record,branches);
  }
 catch (  VcsException e) {
    exc[0]=e;
    h.cancel();
    return;
  }
  gitCommitConsumer.consume(gitCommit);
}
