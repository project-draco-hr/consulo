{
  final int commentStartIdx=line.indexOf(ourCommentStartMark);
  if (commentStartIdx == -1) {
    LOG.info("Git history: no comment mark in line: '" + line + "'");
    java.util.StringTokenizer tk=new java.util.StringTokenizer(line,TOKEN_DELIMITER,false);
    final List<String> result=new ArrayList<String>();
    while (tk.hasMoreElements()) {
      final String token=tk.nextToken();
      result.add(token);
    }
    return result;
  }
  final String start=line.substring(0,commentStartIdx);
  java.util.StringTokenizer tk=new java.util.StringTokenizer(start,TOKEN_DELIMITER,false);
  final List<String> result=new ArrayList<String>();
  while (tk.hasMoreElements()) {
    final String token=tk.nextToken();
    result.add(token);
  }
  final String commentAndPath=line.substring(commentStartIdx + ourCommentStartMark.length());
  final int commentEndIdx=commentAndPath.indexOf(ourCommentEndMark);
  if (commentEndIdx > -1) {
    result.add(replaceDelimitersByNewlines(commentAndPath.substring(0,commentEndIdx)));
    result.add(replaceDelimitersByNewlines(commentAndPath.substring(commentEndIdx + ourCommentEndMark.length())));
  }
 else {
    exceptions.add(new VcsException("git log output is uncomplete"));
    result.add(replaceDelimitersByNewlines(commentAndPath));
    result.add("");
  }
  return result;
}
