{
  PsiClass superClass=aClass.getSuperClass();
  if (superClass == null)   return null;
  if ("java.lang.Object".equals(aClass.getQualifiedName()))   return null;
  if (JavaPsiFacade.getInstance(aClass.getProject()).arePackagesTheSame(aClass,superClass))   return null;
  for (  HierarchicalMethodSignature methodSignature : superClass.getVisibleSignatures()) {
    PsiMethod method=methodSignature.getMethod();
    if (method.hasModifierProperty(PsiModifier.ABSTRACT) && method.hasModifierProperty(PsiModifier.PACKAGE_LOCAL))     return method;
  }
  return null;
}
