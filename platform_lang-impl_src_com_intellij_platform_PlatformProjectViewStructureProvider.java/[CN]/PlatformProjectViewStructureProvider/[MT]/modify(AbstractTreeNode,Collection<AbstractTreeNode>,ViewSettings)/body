{
  if (parent instanceof ProjectViewProjectNode) {
    int foundModules=0;
    List<AbstractTreeNode> allChildren=new ArrayList<AbstractTreeNode>();
    for (    AbstractTreeNode child : children) {
      if (child instanceof ProjectViewModuleNode) {
        foundModules++;
        allChildren.addAll(child.getChildren());
      }
 else       if (child instanceof ExternalLibrariesNode) {
        allChildren.add(child);
      }
    }
    if (foundModules == 1) {
      return allChildren;
    }
  }
 else   if (parent instanceof PsiDirectoryNode) {
    final VirtualFile vFile=((PsiDirectoryNode)parent).getVirtualFile();
    if (vFile != null && vFile.equals(myProject.getBaseDir())) {
      final Collection<AbstractTreeNode> moduleChildren=((PsiDirectoryNode)parent).getChildren();
      Collection<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
      for (      AbstractTreeNode moduleChild : moduleChildren) {
        if (moduleChild instanceof PsiDirectoryNode) {
          final PsiDirectory value=((PsiDirectoryNode)moduleChild).getValue();
          if (value.getName().equals(".idea")) {
            continue;
          }
        }
        result.add(moduleChild);
      }
      return result;
    }
  }
  return children;
}
