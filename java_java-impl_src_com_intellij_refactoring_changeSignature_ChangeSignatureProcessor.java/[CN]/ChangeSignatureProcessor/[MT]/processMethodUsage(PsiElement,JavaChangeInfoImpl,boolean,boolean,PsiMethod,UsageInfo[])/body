{
  if (changeInfo.isNameChanged) {
    if (ref instanceof PsiJavaCodeReferenceElement) {
      PsiElement last=((PsiJavaCodeReferenceElement)ref).getReferenceNameElement();
      if (last instanceof PsiIdentifier && last.getText().equals(changeInfo.oldName)) {
        last.replace(changeInfo.newNameIdentifier);
      }
    }
  }
  final PsiMethod caller=RefactoringUtil.getEnclosingMethod(ref);
  if (toChangeArguments) {
    final PsiExpressionList list=RefactoringUtil.getArgumentListByMethodReference(ref);
    boolean toInsertDefaultValue=!myChangeInfo.propagateParametersMethods.contains(caller);
    if (toInsertDefaultValue && ref instanceof PsiReferenceExpression) {
      final PsiExpression qualifierExpression=((PsiReferenceExpression)ref).getQualifierExpression();
      if (qualifierExpression instanceof PsiSuperExpression && callerSignatureIsAboutToChangeToo(caller,usages)) {
        toInsertDefaultValue=false;
      }
    }
    fixActualArgumentsList(list,changeInfo,toInsertDefaultValue);
  }
  if (toCatchExceptions) {
    if (!(ref instanceof PsiReferenceExpression && ((PsiReferenceExpression)ref).getQualifierExpression() instanceof PsiSuperExpression)) {
      if (needToCatchExceptions(caller)) {
        PsiClassType[] newExceptions=callee != null ? getCalleeChangedExceptionInfo(callee) : getPrimaryChangedExceptionInfo(changeInfo);
        fixExceptions(ref,newExceptions);
      }
    }
  }
}
