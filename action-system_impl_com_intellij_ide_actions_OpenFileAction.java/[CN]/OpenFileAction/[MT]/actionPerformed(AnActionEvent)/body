{
  final Project project=(Project)e.getDataContext().getData(DataConstants.PROJECT);
  if (project == null)   return;
  String lastFilePath=getLastFilePath(project);
  String path=lastFilePath != null ? lastFilePath : RecentProjectsManager.getInstance().getLastProjectPath();
  JFileChooser fileChooser=new JFileChooser(path);
  FileView fileView=new FileView(){
    public Icon getIcon(    File f){
      if (f.isDirectory())       return super.getIcon(f);
      FileType fileType=FileTypeManager.getInstance().getFileTypeByFileName(f.getName());
      return fileType.getIcon();
    }
  }
;
  fileChooser.setFileView(fileView);
  fileChooser.setMultiSelectionEnabled(true);
  fileChooser.setAcceptAllFileFilterUsed(false);
  fileChooser.setDialogTitle(IdeBundle.message("title.open.file"));
  FileFilter allFilesFilter=new FileFilter(){
    public boolean accept(    File f){
      return true;
    }
    public String getDescription(){
      return IdeBundle.message("filter.all.file.types");
    }
  }
;
  final FileTypeManager fileTypeManager=FileTypeManager.getInstance();
  ArrayList<FileType> list=new ArrayList<FileType>();
  for (  FileType ft : fileTypeManager.getRegisteredFileTypes()) {
    if (fileTypeManager.getAssociatedExtensions(ft).length > 0 && (ft instanceof ProjectFileType || !ft.isReadOnly())) {
      list.add(ft);
    }
  }
  Collections.sort(list,new Comparator<FileType>(){
    public int compare(    final FileType o1,    final FileType o2){
      return o1.getName().compareTo(o2.getName());
    }
  }
);
  for (  FileType ft : list) {
    fileChooser.addChoosableFileFilter(new FileTypeFilter(ft));
  }
  fileChooser.addChoosableFileFilter(allFilesFilter);
  fileChooser.setFileFilter(allFilesFilter);
  if (fileChooser.showOpenDialog(WindowManager.getInstance().suggestParentWindow(project)) != JFileChooser.APPROVE_OPTION) {
    return;
  }
  File[] files=fileChooser.getSelectedFiles();
  if (files == null)   return;
  for (  File file : files) {
    setLastFilePath(project,file.getParent());
    if (isProjectFile(file)) {
      int answer=Messages.showYesNoDialog(project,IdeBundle.message("message.open.file.is.project",file.getName(),ApplicationNamesInfo.getInstance().getProductName()),IdeBundle.message("title.open.project"),Messages.getQuestionIcon());
      if (answer == 0) {
        ProjectUtil.openProject(file.getAbsolutePath(),project,false);
        return;
      }
    }
    FileType type=FileTypeChooser.getKnownFileTypeOrAssociate(file.getName());
    if (type == null)     return;
    String absolutePath=file.getAbsolutePath();
    openFile(absolutePath,project);
  }
}
