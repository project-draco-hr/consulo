{
  if (notOptional > args.length - curArg)   return false;
  if (notOptional == args.length - curArg)   skipOptionals=true;
  while (curArg < args.length) {
    if (skipOptionals) {
      while (curParam < paramLength && params[curParam].isOptional())       curParam++;
    }
    if (curParam == paramLength)     break;
    if (params[curParam].isOptional()) {
      if (TypesUtil.isAssignable(params[curParam].getType(),args[curArg],manager,scope) && isApplicableInternal(curParam + 1,curArg + 1,false,notOptional)) {
        return true;
      }
      skipOptionals=true;
    }
 else {
      if (!TypesUtil.isAssignableByMethodCallConversion(params[curParam].getType(),args[curArg],manager,scope))       return false;
      notOptional--;
      curArg++;
      curParam++;
    }
  }
  for (; curArg < args.length; curArg++) {
    if (!TypesUtil.isAssignableByMethodCallConversion(vararg,args[curArg],manager,scope))     return false;
  }
  return true;
}
