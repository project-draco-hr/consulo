{
  if (!myCache.isEmpty()) {
    CacheEntry lastEntry=myCache.get(myCache.size() - 1);
    if (lastEntry.visualLine == visualLine) {
      if (lastEntry.locked) {
        myCache.set(myCache.size() - 1,lastEntry=lastEntry.clone());
      }
      return lastEntry;
    }
 else     if (lastEntry.visualLine < visualLine) {
      CacheEntry result=new CacheEntry(visualLine,myEditor,myRepresentationHelper,myCache);
      myCache.add(result);
      return result;
    }
  }
  mySearchKey.visualLine=visualLine;
  int start=0;
  int end=myCache.size() - 1;
  int cacheEntryIndex=-1;
  while (start <= end) {
    int i=(end + start) >>> 1;
    CacheEntry cacheEntry=myCache.get(i);
    if (cacheEntry.visualLine < visualLine) {
      start=i + 1;
      continue;
    }
    if (cacheEntry.visualLine > visualLine) {
      end=i - 1;
      continue;
    }
    cacheEntryIndex=i;
    break;
  }
  CacheEntry result;
  if (cacheEntryIndex < 0) {
    cacheEntryIndex=start;
    myCache.add(cacheEntryIndex,result=new CacheEntry(visualLine,myEditor,myRepresentationHelper,myCache));
  }
 else   if (myBeforeChangeState.valid && cacheEntryIndex > myBeforeChangeState.endCacheEntryIndex && myCache.get(cacheEntryIndex).locked) {
    myCache.set(cacheEntryIndex,result=myCache.get(cacheEntryIndex).clone());
  }
 else {
    result=myCache.get(cacheEntryIndex);
  }
  return result;
}
