{
  return new LiteLinearGraph(){
    @Override public int nodesCount(){
      return graph.nodesCount();
    }
    @NotNull @Override public List<Integer> getNodes(    final int nodeIndex,    @NotNull final NodeFilter filter){
      return ContainerUtil.mapNotNull(graph.getAdjacentEdges(nodeIndex,filter.edgeFilter),new Function<GraphEdge,Integer>(){
        @Override public Integer fun(        GraphEdge edge){
          if (isEdgeUp(edge,nodeIndex))           return edge.getUpNodeIndex();
          if (isEdgeDown(edge,nodeIndex))           return edge.getDownNodeIndex();
          return null;
        }
      }
);
    }
  }
;
}
