{
  final ProjectFileIndex index=ProjectRootManager.getInstance(project).getFileIndex();
  final VirtualFile file=getByFullPath(filePath);
  final boolean inProjectContent=file != null && (index.isInContent(file));
  if (inProjectContent) {
    return Collections.singletonList(file);
  }
  final LinkedList<String> folders=new LinkedList<String>();
  final StringTokenizer st=new StringTokenizer(filePath,"/",false);
  String fileName=null;
  while (st.hasMoreTokens()) {
    final String pathComponent=st.nextToken();
    if (st.hasMoreTokens()) {
      folders.addFirst(pathComponent);
    }
 else {
      fileName=pathComponent;
    }
  }
  if (fileName == null) {
    return Collections.emptyList();
  }
  return findFilesClosestToTarget(folders,collectCandidates(project,fileName,true),MIN_PROXIMITY_THRESHOLD);
}
