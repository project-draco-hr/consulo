{
  final List<ProcessingItem> items=new ArrayList<ProcessingItem>();
  for (  Module module : ModuleManager.getInstance(context.getProject()).getModules()) {
    AndroidFacet facet=AndroidFacet.getInstance(module);
    if (facet != null && !facet.getConfiguration().LIBRARY_PROJECT) {
      VirtualFile manifestFile=AndroidRootUtil.getManifestFileForCompiler(facet);
      final ArrayList<String> assetDirPathsList=new ArrayList<String>();
      collectAssetDirs(facet,assetDirPathsList);
      final String[] assetDirPaths=ArrayUtil.toStringArray(assetDirPathsList);
      if (manifestFile == null) {
        context.addMessage(CompilerMessageCategory.ERROR,AndroidBundle.message("android.compilation.error.manifest.not.found"),null,-1,-1);
        continue;
      }
      AndroidFacetConfiguration configuration=facet.getConfiguration();
      VirtualFile outputDir=AndroidDexCompiler.getOutputDirectoryForDex(module);
      if (outputDir != null) {
        String outputPath=getOutputFile(module,outputDir).getPath();
        final AndroidPlatform platform=configuration.getAndroidPlatform();
        if (platform != null) {
          String[] resourcesDirPaths=AndroidCompileUtil.collectResourceDirs(facet,true,context);
          final IAndroidTarget target=platform.getTarget();
          final int platformToolsRevision=platform.getSdkData().getPlatformToolsRevision();
          if (resourcesDirPaths.length == 0) {
            context.addMessage(CompilerMessageCategory.WARNING,"Resource directory not found for module " + module.getName(),null,-1,-1);
          }
          items.add(new MyItem(module,target,platformToolsRevision,manifestFile,resourcesDirPaths,assetDirPaths,outputPath,configuration.GENERATE_UNSIGNED_APK,AndroidCompileUtil.isReleaseBuild(context)));
        }
      }
    }
  }
  return items.toArray(new ProcessingItem[items.size()]);
}
