{
  final List<ReferenceType> vmClasses=myVirtualMachineProxy.classesByName(qualifiedName);
  if (vmClasses.isEmpty())   return;
  if (vmClasses.size() == 1) {
    myRedefineMap.put(vmClasses.get(0),content);
    if (myRedefineMap.size() >= CLASSES_CHUNK_SIZE) {
      processChunk();
    }
    return;
  }
  int redefinedVersionsCount=0;
  Throwable error=null;
  for (  ReferenceType vmClass : vmClasses) {
    try {
      myVirtualMachineProxy.redefineClasses(Collections.singletonMap(vmClass,content));
      redefinedVersionsCount++;
    }
 catch (    Throwable t) {
      error=t;
    }
  }
  if (redefinedVersionsCount == 0) {
    throw error;
  }
  if (redefinedVersionsCount < vmClasses.size()) {
    myPartiallyRedefinedClassesCount++;
  }
  myProcessedClassesCount++;
}
