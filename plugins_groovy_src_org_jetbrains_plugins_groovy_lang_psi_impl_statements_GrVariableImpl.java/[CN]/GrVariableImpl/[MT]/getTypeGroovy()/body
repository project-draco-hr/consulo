{
  GrTypeElement typeElement=getTypeElementGroovy();
  PsiType declaredType=null;
  if (typeElement != null) {
    declaredType=typeElement.getType();
    if (!(declaredType instanceof PsiClassType)) {
      return declaredType;
    }
  }
  GrExpression initializer=getInitializerGroovy();
  if (initializer != null) {
    if (!(initializer instanceof GrReferenceExpression) || !initializer.getText().equals(getName())) {
      PsiType initializerType=initializer.getType();
      if (initializerType != null) {
        if (declaredType != null && initializerType instanceof PsiClassType) {
          final PsiClass declaredClass=((PsiClassType)declaredType).resolve();
          if (declaredClass != null) {
            final PsiClassType.ClassResolveResult initializerResult=((PsiClassType)initializerType).resolveGenerics();
            final PsiClass initializerClass=initializerResult.getElement();
            if (initializerClass != null) {
              final PsiSubstitutor superSubstitutor=TypeConversionUtil.getClassSubstitutor(declaredClass,initializerClass,initializerResult.getSubstitutor());
              if (superSubstitutor != null) {
                return getManager().getElementFactory().createType(declaredClass,superSubstitutor);
              }
            }
          }
        }
        return initializerType;
      }
    }
  }
  return declaredType;
}
