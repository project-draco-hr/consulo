{
  PsiClass clazz=resolveQualifier();
  if (clazz == null)   return true;
  state=state.put(ResolverProcessor.RESOLVE_CONTEXT,this);
  String hintName=nameHint == null ? null : nameHint.getName(state);
  final String refName=ref.getReferenceName();
  if (hintName == null || importedName.equals(hintName)) {
    final PsiField field=clazz.findFieldByName(refName,true);
    if (field != null && field.hasModifierProperty(PsiModifier.STATIC)) {
      if (!processor.execute(field,state))       return false;
    }
    for (    PsiMethod method : clazz.findMethodsByName(refName,true)) {
      if (method.hasModifierProperty(PsiModifier.STATIC)) {
        if (!processor.execute(method,state))         return false;
      }
    }
    final PsiClass innerClass=clazz.findInnerClassByName(refName,true);
    if (innerClass != null && innerClass.hasModifierProperty(PsiModifier.STATIC) && !processor.execute(innerClass,state))     return false;
  }
  String propByGetter=hintName == null ? null : GroovyPropertyUtils.getPropertyNameByGetterName(hintName,true);
  String propBySetter=hintName == null ? null : GroovyPropertyUtils.getPropertyNameBySetterName(hintName);
  for (  PsiMember member : getAllStaticMembers(clazz)) {
    if (!(member instanceof PsiMethod)) {
      continue;
    }
    PsiMethod method=(PsiMethod)member;
    if ((propByGetter == null || importedName.equals(propByGetter)) && GroovyPropertyUtils.isSimplePropertyGetter(method,refName) || (propBySetter == null || importedName.equals(propBySetter)) && GroovyPropertyUtils.isSimplePropertySetter(method,refName)) {
      if (method.hasModifierProperty(PsiModifier.STATIC) && !processor.execute(method,state)) {
        return false;
      }
    }
  }
  return true;
}
