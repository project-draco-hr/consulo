{
  JPanel scrollablePanel=new JPanel(new GridBagLayout());
  scrollablePanel.setBackground(UIUtil.getListBackground());
  GridBagConstraints gc=new GridBagConstraints(GridBagConstraints.RELATIVE,1,1,1,0,1,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0);
  int width=0;
  int widthToTheRight=0;
  final JLabel toBeContLabel=new JLabel("...");
  clearBorder(toBeContLabel);
  final int additionalWidth=toBeContLabel.getFontMetrics(toBeContLabel.getFont()).stringWidth("...") + 6;
  int wholeWidth=getWidth() - 2 * myLeftButton.getWidth();
  if (mySelectedIndex != -1) {
    if (myFirstIndex > 0) {
      final JLabel preList=new JLabel("...");
      clearBorder(preList);
      scrollablePanel.add(preList,gc);
      wholeWidth-=additionalWidth;
    }
    for (int i=0; i < myList.size(); i++) {
      final JLabel linkLabel=myList.get(i);
      final Icon icon=linkLabel.getIcon();
      final int labelWidth=linkLabel.getFontMetrics(linkLabel.getFont()).stringWidth(linkLabel.getText()) + (icon != null ? icon.getIconWidth() + linkLabel.getIconTextGap() : 0) + 6;
      width+=labelWidth;
      if (i + 1 > myFirstIndex) {
        widthToTheRight+=labelWidth;
        if (widthToTheRight < wholeWidth) {
          scrollablePanel.add(linkLabel,gc);
        }
 else {
          scrollablePanel.add(toBeContLabel,gc);
          break;
        }
      }
    }
    gc.weightx=1;
    gc.fill=GridBagConstraints.HORIZONTAL;
    scrollablePanel.add(Box.createHorizontalBox(),gc);
  }
 else   if (!myModel.isEmpty()) {
    scrollablePanel.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
    gc.weightx=1;
    gc.fill=GridBagConstraints.HORIZONTAL;
    scrollablePanel.add(Box.createHorizontalBox(),gc);
    gc.weightx=0;
    gc.fill=GridBagConstraints.NONE;
    final JLabel preselected=myList.get(myModel.size() - 1);
    installDottedBorder(preselected);
    for (int i=myModel.size() - 1; i >= 0; i--) {
      final JLabel linkLabel=myList.get(i);
      final Icon icon=linkLabel.getIcon();
      width+=linkLabel.getFontMetrics(linkLabel.getFont()).stringWidth(linkLabel.getText()) + (icon != null ? icon.getIconWidth() + linkLabel.getIconTextGap() : 0) + 6;
      if (width + additionalWidth < wholeWidth || (i == 0 && width < wholeWidth)) {
        scrollablePanel.add(linkLabel,gc);
      }
 else {
        myFirstIndex=i + 1;
        scrollablePanel.add(toBeContLabel,gc);
        wholeWidth-=additionalWidth;
        break;
      }
    }
  }
  JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(scrollablePanel);
  scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
  scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
  removeAll();
  add(scrollPane,BorderLayout.CENTER);
  add(myLeftButton,BorderLayout.WEST);
  add(myRightButton,BorderLayout.EAST);
  revalidate();
  final boolean scrollBarVisible=width >= wholeWidth;
  myLeftButton.setVisible(scrollBarVisible);
  myRightButton.setVisible(scrollBarVisible);
  myLeftButton.setEnabled(widthToTheRight >= wholeWidth && myFirstIndex < myModel.size() - 2);
  myRightButton.setEnabled(myFirstIndex > 0);
}
