{
  JPanel mainPanel=new JPanel();
  mainPanel.setLayout(new BorderLayout());
  JPanel groupPanel=new JPanel(new GridBagLayout());
  final GridBagConstraints gridBagConstraints=new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,5,0,0),0,0);
  gridBagConstraints.insets.top=5;
  myInitialisersPlaceModel=new DefaultComboBoxModel();
  myInitialisersPlaceModel.addElement(BaseExpressionToFieldHandler.InitializationPlace.IN_CURRENT_METHOD);
  myInitialisersPlaceModel.addElement(BaseExpressionToFieldHandler.InitializationPlace.IN_FIELD_DECLARATION);
  myInitialisersPlaceModel.addElement(BaseExpressionToFieldHandler.InitializationPlace.IN_CONSTRUCTOR);
  if (TestUtil.isTestClass(myParentClass)) {
    myInitialisersPlaceModel.addElement(BaseExpressionToFieldHandler.InitializationPlace.IN_SETUP_METHOD);
  }
  initializeInitializerPlace(myInitializerExpression,InplaceIntroduceFieldPopup.ourLastInitializerPlace);
  if (myInitialisersPlaceModel.getSize() > 1) {
    final JLabel initLabel=new JLabel(RefactoringBundle.message("initialize.in.border.title") + ":");
    initLabel.setDisplayedMnemonic('i');
    groupPanel.add(initLabel,gridBagConstraints);
    JComboBox initializersCombo=new JComboBox(myInitialisersPlaceModel);
    InplaceIntroduceConstantPopup.appendActions(initializersCombo,myParentClass.getProject());
    initLabel.setLabelFor(initializersCombo);
    initializersCombo.setRenderer(new ListCellRendererWrapper<BaseExpressionToFieldHandler.InitializationPlace>(initializersCombo){
      @Override public void customize(      JList list,      BaseExpressionToFieldHandler.InitializationPlace value,      int index,      boolean selected,      boolean hasFocus){
        setText(getPresentableText(value));
      }
    }
);
    initializersCombo.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        itemListener.itemStateChanged(null);
        finalUpdater.itemStateChanged(null);
      }
    }
);
    gridBagConstraints.gridx=1;
    gridBagConstraints.insets.top=0;
    gridBagConstraints.insets.left=0;
    gridBagConstraints.fill=GridBagConstraints.HORIZONTAL;
    groupPanel.add(initializersCombo,gridBagConstraints);
    myInitializerCombo=initializersCombo;
  }
 else   if (myInitialisersPlaceModel.getSize() == 1) {
    gridBagConstraints.gridwidth=2;
    groupPanel.add(new JLabel("Initialize field in " + getPresentableText((BaseExpressionToFieldHandler.InitializationPlace)myInitialisersPlaceModel.getElementAt(0))),gridBagConstraints);
    gridBagConstraints.gridwidth=1;
  }
  gridBagConstraints.gridx=0;
  gridBagConstraints.gridy=1;
  gridBagConstraints.insets.top=8;
  gridBagConstraints.insets.left=5;
  String visibility=JavaRefactoringSettings.getInstance().INTRODUCE_FIELD_VISIBILITY;
  if (visibility == null) {
    visibility=PsiModifier.PRIVATE;
  }
  myVisibilityCombo=InplaceIntroduceConstantPopup.createVisibilityCombo(groupPanel,gridBagConstraints,myParentClass.getProject(),visibility);
  mainPanel.add(groupPanel,BorderLayout.CENTER);
  return mainPanel;
}
