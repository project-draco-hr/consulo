{
  final VirtualFile virtualFile=subclass.getContainingFile().getVirtualFile();
  if (virtualFile != null) {
    final boolean inTestSourceContent=ProjectRootManager.getInstance(subclass.getProject()).getFileIndex().isInTestSourceContent(virtualFile);
    final Module module=ModuleUtil.findModuleForFile(virtualFile,subclass.getProject());
    if (targetDirectory != null && module != null && !GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module,inTestSourceContent).contains(targetDirectory.getVirtualFile())) {
      conflicts.putValue(subclass,"Superclass won't be accessible in subclass");
    }
  }
}
