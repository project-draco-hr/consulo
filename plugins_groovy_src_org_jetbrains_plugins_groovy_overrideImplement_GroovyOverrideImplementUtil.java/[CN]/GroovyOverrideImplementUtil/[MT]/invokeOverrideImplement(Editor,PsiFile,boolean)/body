{
  final int offset=editor.getCaretModel().getOffset();
  final GrTypeDefinition aClass=PsiTreeUtil.findElementOfClassAtOffset(file,offset,GrTypeDefinition.class,false);
  if (aClass == null)   return;
  if (isImplement && aClass.isInterface())   return;
  Collection<CandidateInfo> candidates=OverrideImplementUtil.getMethodsToOverrideImplement(aClass,isImplement);
  Collection<CandidateInfo> secondary=isImplement ? Collections.<CandidateInfo>emptyList() : OverrideImplementUtil.getMethodsToOverrideImplement(aClass,!isImplement);
  final MemberChooser<PsiMethodMember> chooser=OverrideImplementUtil.showOverrideImplementChooser(editor,aClass,isImplement,candidates,secondary);
  if (chooser == null)   return;
  final List<PsiMethodMember> selectedElements=chooser.getSelectedElements();
  if (selectedElements == null || selectedElements.size() == 0)   return;
  new WriteCommandAction(aClass.getProject(),aClass.getContainingFile()){
    protected void run(    final Result result) throws Throwable {
      OverrideImplementUtil.overrideOrImplementMethodsInRightPlace(editor,aClass,selectedElements,chooser.isCopyJavadoc(),chooser.isInsertOverrideAnnotation());
    }
  }
.execute();
}
