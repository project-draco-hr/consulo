{
  final PsiType returnType=substitutor.substitute(method.getReturnType());
  String returnTypeText="";
  if (returnType != null) {
    returnTypeText=returnType.getPresentableText();
  }
  Properties properties=new Properties();
  properties.setProperty(FileTemplate.ATTRIBUTE_RETURN_TYPE,returnTypeText);
  properties.setProperty(FileTemplate.ATTRIBUTE_DEFAULT_RETURN_VALUE,PsiTypesUtil.getDefaultValueOfType(returnType));
  properties.setProperty(FileTemplate.ATTRIBUTE_CALL_SUPER,callSuper(method,resultMethod));
  JavaTemplateUtil.setClassAndMethodNameProperties(properties,method.getContainingClass(),resultMethod);
  try {
    String bodyText=template.getText(properties);
    final GrCodeBlock newBody=GroovyPsiElementFactory.getInstance(project).createMethodBodyFormText("\n" + bodyText + "\n");
    resultMethod.setBlock(newBody);
  }
 catch (  IOException e) {
    LOG.error(e);
  }
}
