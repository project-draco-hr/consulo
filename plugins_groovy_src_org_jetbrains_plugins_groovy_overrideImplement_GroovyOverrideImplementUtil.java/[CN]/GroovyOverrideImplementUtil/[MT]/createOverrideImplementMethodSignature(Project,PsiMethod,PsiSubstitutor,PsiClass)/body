{
  StringBuffer buffer=new StringBuffer();
  final boolean hasModifiers=writeMethodModifiers(buffer,superMethod.getModifierList(),GROOVY_MODIFIERS);
  final PsiType returnType=substitutor.substitute(getSuperReturnType(superMethod));
  if (!hasModifiers && returnType == null) {
    buffer.append("def ");
  }
  if (superMethod.isConstructor()) {
    buffer.append(aClass.getName());
  }
 else {
    if (returnType != null) {
      buffer.append(returnType.getCanonicalText()).append(" ");
    }
    buffer.append(superMethod.getName());
  }
  buffer.append("(");
  final PsiParameter[] parameters=superMethod.getParameterList().getParameters();
  for (int i=0; i < parameters.length; i++) {
    if (i > 0)     buffer.append(", ");
    PsiParameter parameter=parameters[i];
    final PsiType parameterType=substitutor.substitute(parameter.getType());
    buffer.append(parameterType.getCanonicalText());
    buffer.append(" ");
    final String paramName=parameter.getName();
    if (paramName != null) {
      buffer.append(paramName);
    }
 else     if (parameter instanceof PsiCompiledElement) {
      buffer.append(((PsiParameter)((PsiCompiledElement)parameter).getMirror()).getName());
    }
  }
  buffer.append(") {}");
  return (GrMethod)GroovyPsiElementFactory.getInstance(project).createTopElementFromText(buffer.toString());
}
