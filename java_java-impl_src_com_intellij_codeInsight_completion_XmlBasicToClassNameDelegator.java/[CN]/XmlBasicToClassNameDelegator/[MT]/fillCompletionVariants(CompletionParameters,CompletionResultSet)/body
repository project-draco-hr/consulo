{
  PsiElement position=parameters.getPosition();
  PsiFile file=position.getContainingFile();
  if (parameters.getCompletionType() != CompletionType.BASIC || !JavaCompletionContributor.mayStartClassName(result) || !file.getLanguage().isKindOf(StdLanguages.XML)) {
    return;
  }
  final boolean[] empty={true};
  result.runRemainingContributors(parameters,new Consumer<CompletionResult>(){
    @Override public void consume(    CompletionResult completionResult){
      empty[0]=false;
      LookupElement lookupElement=completionResult.getLookupElement();
      lookupElement.putUserData(XmlCompletionContributor.WORD_COMPLETION_COMPATIBLE,Boolean.TRUE);
      result.passResult(completionResult);
    }
  }
);
  if (!empty[0] && parameters.getInvocationCount() == 0) {
    result.restartCompletionWhenNothingMatches();
  }
  if (JavaClassReferenceCompletionContributor.findJavaClassReference(file,parameters.getOffset()) == null && parameters.isExtendedCompletion()) {
    CompletionService.getCompletionService().getVariantsFromContributors(parameters.delegateToClassName(),null,new Consumer<CompletionResult>(){
      @Override public void consume(      final CompletionResult completionResult){
        LookupElement lookupElement=completionResult.getLookupElement();
        JavaPsiClassReferenceElement classElement=lookupElement.as(JavaPsiClassReferenceElement.CLASS_CONDITION_KEY);
        if (classElement != null) {
          classElement.setAutoCompletionPolicy(AutoCompletionPolicy.NEVER_AUTOCOMPLETE);
        }
        lookupElement.putUserData(XmlCompletionContributor.WORD_COMPLETION_COMPATIBLE,Boolean.TRUE);
        result.passResult(completionResult);
      }
    }
);
  }
}
