{
  if (aClass == null) {
    return false;
  }
  if (!visitedClasses.add(aClass)) {
    return true;
  }
  final String className=aClass.getQualifiedName();
  if ("java.lang.Object".equals(className)) {
    return false;
  }
  final PsiMethod[] methods=aClass.getMethods();
  for (  PsiMethod method : methods) {
    if (isToString(method)) {
      return true;
    }
  }
  final PsiClass superClass=aClass.getSuperClass();
  return hasGoodToString(superClass,visitedClasses);
}
