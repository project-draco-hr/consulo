{
  final Runnable antAwareRunnable=new Runnable(){
    public void run(){
      if (configuration instanceof RunConfiguration) {
        final RunConfiguration runConfiguration=(RunConfiguration)configuration;
        final RunManagerImpl runManager=RunManagerImpl.getInstanceImpl(myProject);
        final Map<BeforeRunTaskProvider<BeforeRunTask>,BeforeRunTask> activeProviders=new LinkedHashMap<BeforeRunTaskProvider<BeforeRunTask>,BeforeRunTask>();
        for (        final BeforeRunTaskProvider<BeforeRunTask> provider : Extensions.getExtensions(BeforeRunTaskProvider.EXTENSION_POINT_NAME,myProject)) {
          final BeforeRunTask task=runManager.getBeforeRunTask(runConfiguration,provider.getId());
          if (task != null && task.isEnabled()) {
            activeProviders.put(provider,task);
          }
        }
        if (!activeProviders.isEmpty()) {
          ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
            public void run(){
              final DataContext dataContext=SimpleDataContext.getProjectContext(myProject);
              for (              BeforeRunTaskProvider<BeforeRunTask> provider : activeProviders.keySet()) {
                if (!provider.executeTask(dataContext,runConfiguration,activeProviders.get(provider))) {
                  return;
                }
              }
              DumbService.getInstance(myProject).smartInvokeLater(startRunnable);
            }
          }
);
        }
 else {
          startRunnable.run();
        }
      }
 else {
        startRunnable.run();
      }
    }
  }
;
  antAwareRunnable.run();
}
