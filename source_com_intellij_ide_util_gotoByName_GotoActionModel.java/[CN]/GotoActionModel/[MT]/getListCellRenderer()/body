{
  return new DefaultListCellRenderer(){
    public Component getListCellRendererComponent(    final JList list,    final Object value,    final int index,    final boolean isSelected,    final boolean cellHasFocus){
      final JPanel panel=new JPanel(new BorderLayout());
      panel.setOpaque(true);
      final Color bg=isSelected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground();
      panel.setBackground(bg);
      if (value instanceof Map.Entry) {
        final Map.Entry actionWithParentGroup=(Map.Entry)value;
        final AnAction anAction=(AnAction)actionWithParentGroup.getKey();
        final Presentation templatePresentation=anAction.getTemplatePresentation();
        final Icon icon=templatePresentation.getIcon();
        final LayeredIcon layeredIcon=new LayeredIcon(2);
        layeredIcon.setIcon(EMPTY_ICON,0);
        if (icon != null) {
          layeredIcon.setIcon(icon,1,(-icon.getIconWidth() + EMPTY_ICON.getIconWidth()) / 2,(EMPTY_ICON.getIconHeight() - icon.getIconHeight()) / 2);
        }
        final Presentation presentation=new Presentation();
        final AnActionEvent event=new AnActionEvent(null,DataManager.getInstance().getDataContext(myContextComponent),ActionPlaces.UNKNOWN,presentation,ActionManager.getInstance(),0);
        anAction.beforeActionPerformedUpdate(event);
        anAction.update(event);
        final Color fg=isSelected ? UIUtil.getListSelectionForeground() : presentation.isEnabled() && presentation.isVisible() ? UIUtil.getListForeground() : UIUtil.getInactiveTextColor();
        final Shortcut[] shortcutSet=KeymapManager.getInstance().getActiveKeymap().getShortcuts(myActionManager.getId(anAction));
        final String actionPresentation=templatePresentation.getText() + (shortcutSet != null && shortcutSet.length > 0 ? " (" + KeymapUtil.getShortcutText(shortcutSet[0]) + ")" : "");
        final JLabel actionLabel=new JLabel(actionPresentation,layeredIcon,SwingConstants.LEFT);
        actionLabel.setBackground(bg);
        actionLabel.setForeground(fg);
        panel.add(actionLabel,BorderLayout.WEST);
        final String groupName=(String)actionWithParentGroup.getValue();
        if (groupName != null) {
          final JLabel groupLabel=new JLabel(groupName);
          groupLabel.setBackground(bg);
          groupLabel.setForeground(fg);
          panel.add(groupLabel,BorderLayout.EAST);
        }
      }
      return panel;
    }
  }
;
}
