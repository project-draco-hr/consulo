{
  if (!Comparing.strEqual(pattern,myPattern)) {
    myCompiledPattern=null;
    myPattern=pattern;
  }
  if (myCompiledPattern == null) {
    boolean allowToLower=true;
    final int eol=pattern.indexOf('\n');
    if (eol != -1) {
      pattern=pattern.substring(0,eol);
    }
    if (pattern.length() >= 80) {
      pattern=pattern.substring(0,80);
    }
    final @NonNls StringBuffer buffer=new StringBuffer();
    if (containsOnlyUppercaseLetters(pattern)) {
      allowToLower=false;
    }
    boolean firstIdentifierLetter=true;
    for (int i=0; i < pattern.length(); i++) {
      final char c=pattern.charAt(i);
      if (Character.isLetterOrDigit(c)) {
        if (Character.isUpperCase(c) || Character.isDigit(c)) {
          if (!firstIdentifierLetter) {
            buffer.append("[^A-Z]*");
          }
          buffer.append("[");
          buffer.append(c);
          if (allowToLower || i == 0) {
            buffer.append('|');
            buffer.append(Character.toLowerCase(c));
          }
          buffer.append("]");
        }
 else         if (Character.isLowerCase(c)) {
          buffer.append('[');
          buffer.append(c);
          buffer.append('|');
          buffer.append(Character.toUpperCase(c));
          buffer.append(']');
        }
 else {
          buffer.append(c);
        }
        firstIdentifierLetter=false;
      }
 else       if (c == '*') {
        buffer.append(".*");
        firstIdentifierLetter=true;
      }
 else       if (c == '.') {
        buffer.append("\\.");
        firstIdentifierLetter=true;
      }
 else       if (c == ' ') {
        buffer.append("[^A-Z]*\\ ");
        firstIdentifierLetter=true;
      }
 else {
        firstIdentifierLetter=true;
        buffer.append("\\x");
        buffer.append(Integer.toHexString(c + 0x20000).substring(3));
      }
    }
    buffer.append(".*");
    try {
      myCompiledPattern=new Perl5Compiler().compile(buffer.toString());
    }
 catch (    MalformedPatternException e) {
    }
  }
  return myCompiledPattern;
}
