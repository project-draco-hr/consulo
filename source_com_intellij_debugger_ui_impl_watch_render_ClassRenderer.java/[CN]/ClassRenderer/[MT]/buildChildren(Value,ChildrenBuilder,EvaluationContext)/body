{
  DebuggerManagerThreadImpl.assertIsManagerThread();
  final ValueDescriptorImpl parentDescriptor=(ValueDescriptorImpl)builder.getParentDescriptor();
  final NodeManager nodeManager=builder.getNodeManager();
  final NodeDescriptorFactory nodeDescriptorFactory=builder.getDescriptorManager();
  List<DebuggerTreeNode> children=new ArrayList<DebuggerTreeNode>();
  if (value instanceof ObjectReference) {
    final ObjectReference objRef=(ObjectReference)value;
    final ReferenceType refType=objRef.referenceType();
    final List fields=refType.allFields();
    if (fields.size() > 0) {
      for (Iterator it=fields.iterator(); it.hasNext(); ) {
        Field jdiField=(Field)it.next();
        if (!shouldDisplay(jdiField)) {
          continue;
        }
        children.add(nodeManager.createNode(nodeDescriptorFactory.getFieldDescriptor(parentDescriptor,objRef,jdiField),evaluationContext));
      }
      if (SORT_ASCENDING) {
        Collections.sort(children,NodeManagerImpl.getNodeComparator());
      }
    }
 else {
      children.add(nodeManager.createMessageNode(MessageDescriptor.CLASS_HAS_NO_FIELDS.getLabel()));
    }
  }
  builder.setChildren(children);
}
