{
  byte[] states=_states;
  short[] set=_set;
  int length=states.length;
  int hash=val & 0x7fffffff;
  int index=hash % length;
  if (states[index] == FREE) {
    return index;
  }
 else   if (states[index] == FULL && set[index] == val) {
    return -index - 1;
  }
 else {
    int probe=1 + hash % (length - 2);
    do {
      index-=probe;
      if (index < 0) {
        index+=length;
      }
    }
 while (states[index] == FULL && set[index] != val);
    if (states[index] == REMOVED) {
      int firstRemoved=index;
      while (states[index] != FREE && (states[index] == REMOVED || set[index] != val)) {
        index-=probe;
        if (index < 0) {
          index+=length;
        }
      }
      return states[index] == FULL ? -index - 1 : firstRemoved;
    }
    return states[index] == FULL ? -index - 1 : index;
  }
}
