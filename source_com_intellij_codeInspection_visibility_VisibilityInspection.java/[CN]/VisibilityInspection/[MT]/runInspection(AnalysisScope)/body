{
  getRefManager().findAllDeclarations();
  myFilter=new WeakerAccessFilter(isPackageLocalForMembersShouldBeSuggested(),isPackageLocalForTopClassesShouldBeSuggested(),isPrivateForInnersShouldBeSuggested());
  SmartRefElementPointer[] entryPoints=EntryPointsManager.getInstance(getManager().getProject()).getEntryPoints();
  for (int i=0; i < entryPoints.length; i++) {
    RefElement refElement=entryPoints[i].getRefElement();
    if (refElement != null) {
      myFilter.addIgnoreList(refElement);
    }
  }
  EjbModel[] ejbRootDescriptors=EjbUtil.getEjbModels(getManager().getProject());
  for (int i=0; i < ejbRootDescriptors.length; i++) {
    EjbModel ejbRootDescriptor=ejbRootDescriptors[i];
    ejbRootDescriptor.getEjbs().visitAllElements(new ObjectsList.ElementVisitor<Ejb>(){
      public void acceptElement(      Ejb ejb){
        if (ejb instanceof EntityBean) {
          EntityBean entityBean=(EntityBean)ejb;
          PsiClass primaryKeyClass=entityBean.getPrimaryKeyClass().getPsiClass();
          if (primaryKeyClass != null) {
            PsiField[] fields=primaryKeyClass.getFields();
            for (int k=0; k < fields.length; k++) {
              PsiField field=fields[k];
              RefField refField=(RefField)getRefManager().getReference(field);
              if (refField != null) {
                myFilter.addIgnoreList(refField);
              }
            }
            PsiMethod[] constructors=primaryKeyClass.getConstructors();
            for (int k=0; k < constructors.length; k++) {
              PsiMethod constructor=constructors[k];
              if (constructor.getParameterList().getParameters().length == 0) {
                RefMethod refConstructor=(RefMethod)getRefManager().getReference(constructor);
                if (refConstructor != null) {
                  myFilter.addIgnoreList(refConstructor);
                }
              }
            }
          }
        }
      }
    }
);
  }
}
