{
  myIcons=icons;
  myPassiveIcon=passiveIcon;
  myPrefSize=new Dimension();
  for (  Icon each : icons) {
    myPrefSize.width=Math.max(each.getIconWidth(),myPrefSize.width);
    myPrefSize.height=Math.max(each.getIconHeight(),myPrefSize.height);
  }
  myPrefSize.width=Math.max(passiveIcon.getIconWidth(),myPrefSize.width);
  myPrefSize.height=Math.max(passiveIcon.getIconHeight(),myPrefSize.height);
  UIUtil.removeQuaquaVisualMarginsIn(this);
  myAnimator=new Animator(myName,icons.length,cycleLength,true,interCycleGap,maxRepeatCount){
    public void paintNow(    final float frame,    final float totalFrames,    final float cycle){
      myCurrentIconIndex=(int)frame;
      paintImmediately(0,0,getWidth(),getHeight());
    }
    protected void onAnimationMaxCycleReached() throws InterruptedException {
      AnimatedIcon.this.onAnimationMaxCycleReached();
    }
    public boolean isAnimated(){
      return AnimatedIcon.this.isAnimated();
    }
  }
;
  setOpaque(true);
}
