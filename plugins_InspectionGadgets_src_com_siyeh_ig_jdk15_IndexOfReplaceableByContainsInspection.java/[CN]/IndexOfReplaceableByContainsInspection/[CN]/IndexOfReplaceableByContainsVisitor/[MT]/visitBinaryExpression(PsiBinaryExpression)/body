{
  final PsiManager manager=expression.getManager();
  final LanguageLevel languageLevel=manager.getEffectiveLanguageLevel();
  if (languageLevel.equals(LanguageLevel.JDK_1_3) || languageLevel.equals(LanguageLevel.JDK_1_4)) {
    return;
  }
  super.visitBinaryExpression(expression);
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return;
  }
  if (!ComparisonUtils.isComparison(expression)) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  if (lhs instanceof PsiMethodCallExpression) {
    final PsiJavaToken sign=expression.getOperationSign();
    if (canBeReplacedByContains(lhs,sign,rhs,false)) {
      registerError(expression);
    }
  }
 else   if (rhs instanceof PsiMethodCallExpression) {
    final PsiJavaToken sign=expression.getOperationSign();
    if (canBeReplacedByContains(rhs,sign,lhs,true)) {
      registerError(expression);
    }
  }
}
