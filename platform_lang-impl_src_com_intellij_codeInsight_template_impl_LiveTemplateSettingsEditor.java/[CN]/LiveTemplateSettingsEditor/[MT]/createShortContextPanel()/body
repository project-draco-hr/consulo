{
  JPanel panel=new JPanel(new BorderLayout());
  final JLabel ctxLabel=new JLabel();
  final JLabel change=new JLabel();
  change.setForeground(Color.BLUE);
  change.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  panel.add(ctxLabel,BorderLayout.CENTER);
  panel.add(change,BorderLayout.EAST);
  final Runnable updateLabel=new Runnable(){
    public void run(){
      List<String> contexts=new ArrayList<String>();
      for (      TemplateContextType type : myContext.keySet()) {
        if (myContext.get(type).booleanValue()) {
          contexts.add(UIUtil.removeMnemonic(type.getPresentableName()));
        }
      }
      ctxLabel.setText((contexts.isEmpty() ? "No applicable contexts yet" : "Applicable in " + StringUtil.join(contexts,", ")) + ".  ");
      ctxLabel.setForeground(contexts.isEmpty() ? Color.RED : UIUtil.getLabelForeground());
      change.setText(contexts.isEmpty() ? "Define" : "Change");
    }
  }
;
  change.addMouseListener(new MouseAdapter(){
    private JBPopup myPopup;
    @Override public void mouseClicked(    MouseEvent e){
      if (myPopup != null && myPopup.isVisible()) {
        myPopup.cancel();
        myPopup=null;
        return;
      }
      JPanel content=createPopupContextPanel(updateLabel);
      myPopup=JBPopupFactory.getInstance().createComponentPopupBuilder(content,null).setResizable(true).createPopup();
      myPopup.show(new RelativePoint(change,new Point(change.getWidth(),-content.getPreferredSize().height - 10)));
    }
  }
);
  updateLabel.run();
  return panel;
}
