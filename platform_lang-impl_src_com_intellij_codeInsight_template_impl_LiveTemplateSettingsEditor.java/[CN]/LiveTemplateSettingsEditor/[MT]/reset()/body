{
  myKeyField.setText(myTemplate.getKey());
  myDescription.setText(myTemplate.getDescription());
  if (myTemplate.getShortcutChar() == TemplateSettings.DEFAULT_CHAR) {
    myExpandByCombo.setSelectedItem(myDefaultShortcutItem);
  }
 else   if (myTemplate.getShortcutChar() == TemplateSettings.TAB_CHAR) {
    myExpandByCombo.setSelectedItem(TAB);
  }
 else   if (myTemplate.getShortcutChar() == TemplateSettings.ENTER_CHAR) {
    myExpandByCombo.setSelectedItem(ENTER);
  }
 else {
    myExpandByCombo.setSelectedItem(SPACE);
  }
  CommandProcessor.getInstance().executeCommand(null,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          final Document document=myTemplateEditor.getDocument();
          document.replaceString(0,document.getTextLength(),myTemplate.getString());
        }
      }
);
    }
  }
,"",null);
  myCbReformat.setSelected(myTemplate.isToReformat());
  myCbReformat.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myTemplate.setToReformat(myCbReformat.isSelected());
    }
  }
);
  myExpandByCombo.setEnabled(isExpandableFromEditor());
  updateHighlighter();
  validateOKButton();
  validateEditVariablesButton();
}
