{
  JPanel panel=new JPanel(new BorderLayout());
  final JLabel ctxLabel=new JLabel();
  final JLabel change=new JLabel();
  change.setForeground(Color.BLUE);
  change.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  panel.add(ctxLabel,BorderLayout.CENTER);
  panel.add(change,BorderLayout.EAST);
  final Runnable updateLabel=new Runnable(){
    public void run(){
      StringBuilder sb=new StringBuilder();
      String oldPrefix="";
      for (      TemplateContextType type : getApplicableContexts()) {
        final TemplateContextType base=type.getBaseContextType();
        String ownName=UIUtil.removeMnemonic(type.getPresentableName());
        String prefix="";
        if (base != null && !(base instanceof EverywhereContextType)) {
          prefix=UIUtil.removeMnemonic(base.getPresentableName()) + ": ";
          ownName=StringUtil.decapitalize(ownName);
        }
        if (sb.length() > 0) {
          sb.append(oldPrefix.equals(prefix) ? ", " : "; ");
        }
        if (!oldPrefix.equals(prefix)) {
          sb.append(prefix);
          oldPrefix=prefix;
        }
        sb.append(ownName);
      }
      final boolean noContexts=sb.length() == 0;
      ctxLabel.setText((noContexts ? "No applicable contexts" + (allowNoContexts ? "" : " yet") : "Applicable in " + sb.toString()) + ".  ");
      ctxLabel.setForeground(noContexts ? allowNoContexts ? Color.GRAY : Color.RED : UIUtil.getLabelForeground());
      change.setText(noContexts ? "Define" : "Change");
    }
  }
;
  new ClickListener(){
    @Override public boolean onClick(    MouseEvent e,    int clickCount){
      if (disposeContextPopup())       return false;
      JPanel content=createPopupContextPanel(updateLabel);
      myContextPopup=JBPopupFactory.getInstance().createComponentPopupBuilder(content,null).setResizable(true).createPopup();
      myContextPopup.show(new RelativePoint(change,new Point(change.getWidth(),-content.getPreferredSize().height - 10)));
      return true;
    }
  }
.installOn(change);
  updateLabel.run();
  return panel;
}
