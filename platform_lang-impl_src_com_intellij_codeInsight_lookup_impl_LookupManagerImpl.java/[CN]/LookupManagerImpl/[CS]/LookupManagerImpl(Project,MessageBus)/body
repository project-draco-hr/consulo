{
  myProject=project;
  bus.connect().subscribe(EditorHintListener.TOPIC,new EditorHintListener(){
    public void hintShown(    final Project project,    final LightweightHint hint,    final int flags){
      if (project == myProject) {
        Lookup lookup=getActiveLookup();
        if (lookup != null && (flags & HintManager.HIDE_BY_LOOKUP_ITEM_CHANGE) != 0) {
          lookup.addLookupListener(new LookupAdapter(){
            public void currentItemChanged(            LookupEvent event){
              hint.hide();
            }
            public void itemSelected(            LookupEvent event){
              hint.hide();
            }
            public void lookupCanceled(            LookupEvent event){
              hint.hide();
            }
          }
);
        }
      }
    }
  }
);
  bus.connect().subscribe(DumbService.DUMB_MODE,new DumbService.DumbModeListener(){
    @Override public void enteredDumbMode(){
      hideActiveLookup();
    }
    @Override public void exitDumbMode(){
      hideActiveLookup();
    }
  }
);
  final EditorFactoryAdapter myEditorFactoryListener=new EditorFactoryAdapter(){
    public void editorReleased(    EditorFactoryEvent event){
      if (event.getEditor() == myActiveLookupEditor) {
        hideActiveLookup();
      }
    }
  }
;
  EditorFactory.getInstance().addEditorFactoryListener(myEditorFactoryListener,myProject);
}
