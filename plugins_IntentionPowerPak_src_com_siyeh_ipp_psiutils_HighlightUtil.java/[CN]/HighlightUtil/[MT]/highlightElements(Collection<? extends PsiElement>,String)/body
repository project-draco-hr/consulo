{
  if (elementCollection.isEmpty()) {
    return;
  }
  final Application application=ApplicationManager.getApplication();
  application.invokeLater(new Runnable(){
    public void run(){
      final PsiElement[] elements=elementCollection.toArray(new PsiElement[elementCollection.size()]);
      final PsiElement firstElement=elements[0];
      if (!firstElement.isValid()) {
        return;
      }
      final Project project=firstElement.getProject();
      final FileEditorManager editorManager=FileEditorManager.getInstance(project);
      final EditorColorsManager editorColorsManager=EditorColorsManager.getInstance();
      final Editor editor=editorManager.getSelectedTextEditor();
      if (editor == null) {
        return;
      }
      final EditorColorsScheme globalScheme=editorColorsManager.getGlobalScheme();
      final TextAttributes textattributes=globalScheme.getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);
      final HighlightManager highlightManager=HighlightManager.getInstance(project);
      highlightManager.addOccurrenceHighlights(editor,elements,textattributes,true,null);
      final FindManager findmanager=FindManager.getInstance(project);
      FindModel findmodel=findmanager.getFindNextModel();
      if (findmodel == null) {
        findmodel=findmanager.getFindInFileModel();
      }
      findmodel.setSearchHighlighters(true);
      findmanager.setFindWasPerformed();
      findmanager.setFindNextModel(findmodel);
      application.invokeLater(new Runnable(){
        public void run(){
          final WindowManager windowManager=WindowManager.getInstance();
          final StatusBar statusBar=windowManager.getStatusBar(project);
          statusBar.setInfo(statusBarText);
        }
      }
);
    }
  }
);
}
