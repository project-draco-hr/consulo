{
  PsiElement tmp;
  final PsiClass javaUtilCollectionClass=myManager.findClass("java.util.Collection",ref.getResolveScope());
  if (javaUtilCollectionClass == null)   return;
  tmp=newExpression.getParent();
  if (!(tmp instanceof PsiExpressionList))   return;
  tmp=tmp.getParent();
  if (!(tmp instanceof PsiMethodCallExpression))   return;
  PsiMethodCallExpression methodCall=(PsiMethodCallExpression)tmp;
  tmp=tmp.getParent();
  if (!(tmp instanceof PsiTypeCastExpression))   return;
  PsiTypeCastExpression typeCast=(PsiTypeCastExpression)tmp;
  PsiReferenceExpression methodRef=methodCall.getMethodExpression();
  if (methodRef == null)   return;
  tmp=methodRef.resolve();
  if (!(tmp instanceof PsiMethod))   return;
  PsiMethod method=(PsiMethod)tmp;
  @NonNls final String name=method.getName();
  if (!name.equals("toArray"))   return;
  PsiClass methodClass=method.getContainingClass();
  if (!methodClass.isInheritor(javaUtilCollectionClass,true))   return;
  addLink(typeCast,ref);
}
