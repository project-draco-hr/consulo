{
  Perl5Compiler compiler=new Perl5Compiler();
  try {
    if (!myCaseSensitive) {
      return compiler.compile(NameUtil.buildRegexp(myPrefix,0,true,true));
    }
    final CodeInsightSettings settings=CodeInsightSettings.getInstance();
    int variant=settings.COMPLETION_CASE_SENSITIVE;
switch (variant) {
case CodeInsightSettings.NONE:
      return compiler.compile(NameUtil.buildRegexp(myPrefix,0,true,true));
case CodeInsightSettings.FIRST_LETTER:
    return compiler.compile(NameUtil.buildRegexp(myPrefix,1,true,true));
case CodeInsightSettings.ALL:
  return compiler.compile(NameUtil.buildRegexp(myPrefix,0,false,false));
case CodeInsightSettings.UPPERCASE_LETTERS:
return compiler.compile(NameUtil.buildRegexp(myPrefix,1,true,false));
default :
return compiler.compile(NameUtil.buildRegexp(myPrefix,0,true,false));
}
}
 catch (MalformedPatternException me) {
throw new RuntimeException(me);
}
}
