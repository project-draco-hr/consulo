{
  PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
  MockProgressIndicator progress=new MockProgressIndicator();
  int[] toIgnore=doFolding() ? new int[0] : new int[]{Pass.UPDATE_FOLDING};
  Editor editor=getEditor();
  PsiFile file=getFile();
  if (editor instanceof EditorWindow) {
    editor=((EditorWindow)editor).getDelegate();
    file=InjectedLanguageUtil.getTopLevelFile(file);
  }
  TextEditorHighlightingPassRegistrarEx registrar=TextEditorHighlightingPassRegistrarEx.getInstanceEx(getProject());
  List<TextEditorHighlightingPass> passes=registrar.instantiatePasses(file,editor,toIgnore);
  for (  TextEditorHighlightingPass pass : passes) {
    pass.collectInformation(progress);
  }
  for (  TextEditorHighlightingPass pass : passes) {
    pass.applyInformationToEditor();
  }
  List<HighlightInfo> infos=DaemonCodeAnalyzerImpl.getHighlights(editor.getDocument(),getProject());
  return infos == null ? Collections.<HighlightInfo>emptyList() : new ArrayList<HighlightInfo>(infos);
}
