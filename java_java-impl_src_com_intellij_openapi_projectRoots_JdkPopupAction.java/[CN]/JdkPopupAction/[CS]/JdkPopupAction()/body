{
  super("Show Quick list","",AllIcons.General.AddJdk);
  if (SystemInfo.isWindows) {
    new SwingWorker(){
      ArrayList<Pair<File,String>> myResult=new ArrayList<Pair<File,String>>();
      @Override public Object construct(){
        Collection<String> homePaths=JavaSdk.getInstance().suggestHomePaths();
        for (        final String path : homePaths) {
          try {
            File file=new File(path);
            File javaExe=new File(new File(file,"bin"),"java.exe");
            ProcessOutput output=ExecUtil.execAndGetOutput(Arrays.asList(javaExe.getAbsolutePath(),"-version"),null);
            List<String> lines=output.getStderrLines();
            if (lines.isEmpty()) {
              lines=output.getStdoutLines();
            }
            StringBuilder stringBuilder=new StringBuilder();
            if (lines.size() == 3) {
              stringBuilder.append("JDK ");
              String line=lines.get(1);
              int pos=line.indexOf("(build ");
              if (pos != -1) {
                stringBuilder.append(line.substring(pos + 7,line.length() - 1));
              }
              line=lines.get(2);
              pos=line.indexOf(" (build");
              if (pos != -1) {
                String substring=line.substring(0,pos);
                stringBuilder.append(" (").append(substring).append(")");
              }
            }
 else {
              stringBuilder.append(file.getName());
            }
            myResult.add(Pair.create(file,stringBuilder.toString()));
          }
 catch (          ExecutionException e) {
            LOG.debug(e);
          }
        }
        return myResult;
      }
      @Override public void finished(){
        myJDKHomes.addAll(myResult);
      }
    }
.start();
  }
}
