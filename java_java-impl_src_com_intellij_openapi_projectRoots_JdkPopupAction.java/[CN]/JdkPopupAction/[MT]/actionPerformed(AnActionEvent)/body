{
  ActionPopupMenu menu=ActionManager.getInstance().createActionPopupMenu(e.getPlace(),new ActionGroup(){
    @NotNull @Override public AnAction[] getChildren(    @Nullable AnActionEvent e){
      List<AnAction> result=new ArrayList<AnAction>();
      for (      final Pair<File,String> homes : myJDKHomes) {
        result.add(new FileChooserAction("",null,null){
          @Override protected void update(          FileSystemTree fileChooser,          AnActionEvent e){
            e.getPresentation().setText(homes.getSecond(),false);
            boolean selected=false;
            VirtualFile selectedFile=fileChooser.getSelectedFile();
            if (selectedFile != null) {
              selected=homes.getFirst().getAbsolutePath().equals(VfsUtilCore.virtualToIoFile(selectedFile).getAbsolutePath());
            }
            e.getPresentation().setIcon(selected ? AllIcons.Actions.Checked_small : null);
          }
          @Override protected void actionPerformed(          FileSystemTree fileChooser,          AnActionEvent e){
            fileChooser.select(VfsUtil.findFileByIoFile(homes.getFirst(),true),null);
          }
        }
);
      }
      return result.toArray(new AnAction[result.size()]);
    }
  }
);
  JPopupMenu menuComponent=menu.getComponent();
  Object source=e.getInputEvent().getSource();
  if (source instanceof Component) {
    Component component=(Component)source;
    menuComponent.show(component,0,component.getHeight());
  }
 else {
    Component component=e.getData(PlatformDataKeys.CONTEXT_COMPONENT);
    if (component == null) {
      return;
    }
    menuComponent.show(component,(component.getWidth() - menuComponent.getWidth()) / 2,(component.getHeight() - menuComponent.getHeight()) / 2);
  }
}
