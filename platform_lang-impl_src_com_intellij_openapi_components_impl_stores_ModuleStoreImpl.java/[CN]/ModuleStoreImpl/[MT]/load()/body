{
  super.load();
  final ModuleFileData storageData=getMainStorageData();
  final String moduleTypeId=storageData.myOptions.get(ModuleImpl.ELEMENT_TYPE);
  myModule.setModuleType(ModuleTypeManager.getInstance().findByID(moduleTypeId));
  if (ApplicationManager.getApplication().isHeadlessEnvironment() || ApplicationManager.getApplication().isUnitTestMode())   return;
  final TrackingPathMacroSubstitutor substitutor=getStateStorageManager().getMacroSubstitutor();
  if (substitutor != null) {
    final Collection<String> macros=substitutor.getUnknownMacros(null);
    if (!macros.isEmpty()) {
      final Project project=myModule.getProject();
      StartupManager.getInstance(project).runWhenProjectIsInitialized(new Runnable(){
        public void run(){
          Notifications.Bus.notify(new UnknownMacroNotification("Load Error",String.format("Error loading module '%s':",myModule.getName()),String.format("<p>Undefined Path Variable(s): <i>%s</i>. <a href=\"\">Fix it!</a></p>",StringUtil.join(macros,", ")),NotificationType.ERROR,new NotificationListener(){
            public void hyperlinkUpdate(            @NotNull Notification notification,            @NotNull HyperlinkEvent event){
              ((ProjectEx)myModule.getProject()).checkUnknownMacros();
            }
          }
,macros),NotificationDisplayType.STICKY_BALLOON,project);
        }
      }
);
    }
  }
}
