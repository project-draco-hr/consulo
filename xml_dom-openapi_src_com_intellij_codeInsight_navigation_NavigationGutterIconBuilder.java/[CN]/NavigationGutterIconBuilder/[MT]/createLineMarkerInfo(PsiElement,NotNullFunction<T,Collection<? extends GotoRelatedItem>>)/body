{
  final MyNavigationGutterIconRenderer renderer=createGutterIconRenderer(element.getProject());
  final String tooltip=renderer.getTooltipText();
  NotNullLazyValue<Collection<? extends GotoRelatedItem>> gotoTargets=new NotNullLazyValue<Collection<? extends GotoRelatedItem>>(){
    @NotNull @Override protected Collection<? extends GotoRelatedItem> compute(){
      if (gotoRelatedItemProvider != null) {
        return ContainerUtil.concat(myTargets.getValue(),gotoRelatedItemProvider);
      }
      return Collections.emptyList();
    }
  }
;
  return new RelatedItemLineMarkerInfo<PsiElement>(element,element.getTextRange(),renderer.getIcon(),Pass.UPDATE_OVERRIDEN_MARKERS,tooltip == null ? null : new ConstantFunction<PsiElement,String>(tooltip),renderer.isNavigateAction() ? renderer : null,renderer.getAlignment(),gotoTargets);
}
