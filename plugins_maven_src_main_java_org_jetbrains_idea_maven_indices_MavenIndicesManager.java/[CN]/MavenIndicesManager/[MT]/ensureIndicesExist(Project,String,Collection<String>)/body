{
  List<MavenIndex> result=new ArrayList<MavenIndex>();
  List<MavenIndex> indices=getIndices();
  File localRepositoryFile=new File(localRepository);
  for (  MavenIndex each : indices) {
    if (each.getKind() == MavenIndex.Kind.LOCAL) {
      if (each.getRepositoryFile().equals(localRepositoryFile)) {
        result.add(each);
        break;
      }
    }
  }
  if (result.isEmpty()) {
    MavenIndex localIndex=getIndicesObject().add(localRepository,MavenIndex.Kind.LOCAL);
    result.add(localIndex);
  }
  if (result.get(0).getUpdateTimestamp() == -1) {
    scheduleUpdate(project,Collections.singletonList(result.get(0)));
  }
  Set<String> toCreate=new HashSet<String>();
  for (  String each : remoteRepositories) {
    toCreate.add(normalizeRemoteIndexUrl(each));
  }
  for (  MavenIndex each : indices) {
    if (toCreate.remove(normalizeRemoteIndexUrl(each.getRepositoryPathOrUrl()))) {
      result.add(each);
    }
  }
  for (  String each : toCreate) {
    result.add(getIndicesObject().add(each,MavenIndex.Kind.REMOTE));
  }
  return result;
}
