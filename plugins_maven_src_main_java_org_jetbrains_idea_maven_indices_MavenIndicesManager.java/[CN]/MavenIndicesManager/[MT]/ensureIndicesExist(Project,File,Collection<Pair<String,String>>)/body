{
  LinkedHashSet<MavenIndex> result=new LinkedHashSet<MavenIndex>();
  MavenIndices indicesObjectCache=getIndicesObject();
  if (!MavenServerManager.getInstance().isUseMaven2())   return new ArrayList<MavenIndex>(result);
  try {
    MavenIndex localIndex=indicesObjectCache.add(LOCAL_REPOSITORY_ID,localRepository.getPath(),MavenIndex.Kind.LOCAL);
    result.add(localIndex);
    if (localIndex.getUpdateTimestamp() == -1) {
      scheduleUpdate(project,Collections.singletonList(localIndex));
    }
  }
 catch (  MavenIndexException e) {
    MavenLog.LOG.warn(e);
  }
  for (  Pair<String,String> eachIdAndUrl : remoteRepositoriesIdsAndUrls) {
    try {
      result.add(indicesObjectCache.add(eachIdAndUrl.first,eachIdAndUrl.second,MavenIndex.Kind.REMOTE));
    }
 catch (    MavenIndexException e) {
      MavenLog.LOG.warn(e);
    }
  }
  return new ArrayList<MavenIndex>(result);
}
