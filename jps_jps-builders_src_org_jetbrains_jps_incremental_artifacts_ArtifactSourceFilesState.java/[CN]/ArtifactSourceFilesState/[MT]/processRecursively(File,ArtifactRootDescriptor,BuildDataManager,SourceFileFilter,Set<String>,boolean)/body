{
  final String filePath=FileUtil.toSystemIndependentName(FileUtil.toCanonicalPath(file.getPath()));
  if (!filter.accept(filePath,dataManager))   return;
  if (file.isDirectory()) {
    final File[] children=file.listFiles();
    if (children != null) {
      for (      File child : children) {
        processRecursively(child,descriptor,dataManager,filter,currentPaths,forceMarkDirty);
      }
    }
  }
 else {
    if (currentPaths != null) {
      currentPaths.add(filePath);
    }
    final ArtifactSourceTimestampStorage.PerArtifactTimestamp[] state=myTimestampStorage.getState(filePath);
    boolean upToDate=false;
    if (!forceMarkDirty && state != null) {
      for (      ArtifactSourceTimestampStorage.PerArtifactTimestamp artifactTimestamp : state) {
        if (artifactTimestamp.myArtifactId == myArtifactId && artifactTimestamp.myTimestamp == file.lastModified()) {
          upToDate=true;
          break;
        }
      }
    }
    if (!upToDate) {
      myProjectDescriptor.fsState.markDirty(descriptor,filePath,myTimestampStorage);
    }
  }
}
