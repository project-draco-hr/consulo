{
  final PsiManager manager=field.getManager();
  final PsiElementFactory factory=manager.getElementFactory();
  final String name=field.getName();
  PsiReferenceExpression ref=(PsiReferenceExpression)factory.createExpressionFromText(name,context);
  PsiElement resolved=ref.resolve();
  if (manager.areElementsEquivalent(resolved,field))   return ref;
  final PsiJavaCodeReferenceElement qualifier;
  if (field.hasModifierProperty(PsiModifier.STATIC)) {
    ref=(PsiReferenceExpression)factory.createExpressionFromText("A." + name,context);
    qualifier=(PsiReferenceExpression)ref.getQualifierExpression();
    final PsiClass containingClass=field.getContainingClass();
    final PsiReferenceExpression classReference=factory.createReferenceExpression(containingClass);
    qualifier.replace(classReference);
  }
 else {
    ref=(PsiReferenceExpression)factory.createExpressionFromText("this." + name,context);
    resolved=ref.resolve();
    if (manager.areElementsEquivalent(resolved,field))     return ref;
    ref=(PsiReferenceExpression)factory.createExpressionFromText("A.this." + name,null);
    qualifier=((PsiThisExpression)ref.getQualifierExpression()).getQualifier();
    final PsiClass containingClass=field.getContainingClass();
    final PsiJavaCodeReferenceElement classReference=factory.createClassReferenceElement(containingClass);
    qualifier.replace(classReference);
  }
  return ref;
}
