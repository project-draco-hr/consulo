{
  final SteppableSide<Left> left=new SteppableSide<Left>(myLeft);
  final SteppableSide<Right> right=new SteppableSide<Right>(myRight);
  left.init();
  right.init();
  while (!left.isEof() || !right.isEof()) {
    while (left.hasNext() && right.hasNext()) {
      Left leftItem=left.get();
      Right rightItem=right.get();
      int compare=myComparator.compare(leftItem,rightItem);
      if (compare == 0) {
        myLeft.cutTo(leftItem);
        myRight.cutTo(rightItem);
        return;
      }
 else       if (compare < 0) {
        left.step();
      }
 else {
        right.step();
      }
    }
    boolean loadLeft=!left.hasNext();
    left.loadStep(loadLeft,right.isEof());
    right.loadStep(!loadLeft,left.isEof());
  }
}
