{
  super(facet.getModule().getProject(),true);
  setTitle(AndroidBundle.message("choose.device.dialog.title"));
  myProject=facet.getModule().getProject();
  final PropertiesComponent properties=PropertiesComponent.getInstance(myProject);
  final String[] selectedSerials;
  final String serialsStr=properties.getValue(SELECTED_SERIALS_PROPERTY);
  if (serialsStr != null) {
    selectedSerials=serialsStr.split(" ");
  }
 else {
    selectedSerials=null;
  }
  getOKAction().setEnabled(false);
  myDeviceChooser=new DeviceChooser(multipleSelection,getOKAction(),facet,null);
  Disposer.register(myDisposable,myDeviceChooser);
  myDeviceChooser.addListener(new DeviceChooserListener(){
    @Override public void selectedDevicesChanged(){
      updateOkButton();
    }
  }
);
  myAvdCombo=new AvdComboBox(false,true){
    @Override public Module getModule(){
      return facet.getModule();
    }
  }
;
  Disposer.register(myDisposable,myAvdCombo);
  myAvdCombo.getComboBox().setRenderer(new ColoredListCellRenderer(){
    @Override protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      if (value == null) {
        append("[none]",myAvdCombo.getComboBox().isEnabled() ? SimpleTextAttributes.ERROR_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
 else {
        append(value.toString());
      }
    }
  }
);
  myComboBoxWrapper.add(myAvdCombo);
  myAvdLabel.setLabelFor(myAvdCombo);
  myDeviceChooserWrapper.add(myDeviceChooser.getPanel());
  final ActionListener listener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateEnabled();
    }
  }
;
  myLaunchEmulatorRadioButton.addActionListener(listener);
  myChooserRunningDeviceRadioButton.addActionListener(listener);
  myAvdCombo.getComboBox().addActionListener(listener);
  init();
  myDeviceChooser.init(selectedSerials);
  myLaunchEmulatorRadioButton.setSelected(myDeviceChooser.getDeviceTable().getRowCount() == 0);
  myChooserRunningDeviceRadioButton.setSelected(myDeviceChooser.getDeviceTable().getRowCount() > 0);
  myAvdCombo.startUpdatingAvds(ModalityState.stateForComponent(myPanel));
  final String savedAvd=properties.getValue(SELECTED_AVD_PROPERTY);
  String avdToSelect=null;
  if (savedAvd != null) {
    final ComboBoxModel model=myAvdCombo.getComboBox().getModel();
    for (int i=0, n=model.getSize(); i < n; i++) {
      final String item=(String)model.getElementAt(i);
      if (savedAvd.equals(item)) {
        avdToSelect=item;
        break;
      }
    }
  }
  if (avdToSelect != null) {
    myAvdCombo.getComboBox().setSelectedItem(avdToSelect);
  }
 else   if (myAvdCombo.getComboBox().getModel().getSize() > 0) {
    myAvdCombo.getComboBox().setSelectedIndex(0);
  }
  updateEnabled();
}
