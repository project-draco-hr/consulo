{
  if (!(usage.getElement() instanceof PsiClass) || !isJavaUsage(usage))   return true;
  PsiClass aClass=(PsiClass)usage.getElement();
  if (!(aClass instanceof PsiAnonymousClass)) {
    final PsiElementFactory factory=JavaPsiFacade.getInstance(data.getProject()).getElementFactory();
    PsiMethod constructor=factory.createMethodFromText(aClass.getName() + "(){}",aClass);
    constructor=(PsiMethod)CodeStyleManager.getInstance(data.getProject()).reformat(constructor);
    constructor=(PsiMethod)aClass.add(constructor);
    PsiUtil.setModifierProperty(constructor,VisibilityUtil.getVisibilityModifier(aClass.getModifierList()),true);
    processAddSuperCall(data,new UsageInfo(constructor),usages);
  }
 else {
    return true;
  }
  return false;
}
