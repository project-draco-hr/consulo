{
  LOG.assertTrue(expression != null || variable != null);
  GrIntroduceContext context;
  if (variable == null) {
    final PsiElement[] occurrences=findOccurrences(expression,toReplaceIn);
    context=new GrIntroduceContext(project,editor,expression,variable,occurrences,toReplaceIn);
  }
 else {
    final List<PsiElement> list=Collections.synchronizedList(new ArrayList<PsiElement>());
    ReferencesSearch.search(variable,new LocalSearchScope(toReplaceIn)).forEach(new Processor<PsiReference>(){
      @Override public boolean process(      PsiReference psiReference){
        final PsiElement element=psiReference.getElement();
        if (element != null) {
          list.add(element);
        }
        return true;
      }
    }
);
    context=new GrIntroduceContext(project,editor,variable.getInitializerGroovy(),variable,list.toArray(new PsiElement[list.size()]),toReplaceIn);
  }
  showDialog(new GrIntroduceParameterContext(context,toReplaceIn,toSearchFor));
}
