{
  try {
    PsiDocumentManager.getInstance(project).commitAllDocuments();
    if (!(file instanceof GroovyFileBase)) {
      throw new GrRefactoringError(GroovyRefactoringBundle.message("only.in.groovy.files"));
    }
    if (!CommonRefactoringUtil.checkReadOnlyStatus(project,file)) {
      throw new GrRefactoringError(RefactoringBundle.message("readonly.occurences.found"));
    }
    GrExpression selectedExpr=GrIntroduceHandlerBase.findExpression(file,startOffset,endOffset);
    final GrVariable variable=GrIntroduceHandlerBase.findVariable(file,startOffset,endOffset);
    if (variable == null && selectedExpr == null) {
      throw new GrRefactoringError(null);
    }
    findScope(selectedExpr,variable,editor,project);
  }
 catch (  GrRefactoringError e) {
    CommonRefactoringUtil.showErrorHint(project,editor,RefactoringBundle.getCannotRefactorMessage(e.getMessage()),RefactoringBundle.message("introduce.parameter.title"),GROOVY_INTRODUCE_PARAMETER);
  }
}
