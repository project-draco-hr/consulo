{
  if (element instanceof PackageElement) {
    final Set<Boolean> find=new HashSet<Boolean>();
    final ContentIterator contentIterator=new ContentIterator(){
      public boolean processFile(      VirtualFile fileOrDir){
        if (fileOrDir != null && fileOrDir.getPath().equals(vFile.getPath())) {
          find.add(Boolean.TRUE);
        }
        return true;
      }
    }
;
    final PackageElement packageElement=(PackageElement)element;
    final PsiPackage aPackage=packageElement.getPackage();
    final Project project=aPackage.getProject();
    final GlobalSearchScope scope=packageElement.getModule() != null ? GlobalSearchScope.moduleScope(packageElement.getModule()) : GlobalSearchScope.projectScope(project);
    final ProjectFileIndex projectFileIndex=ProjectRootManager.getInstance(project).getFileIndex();
    final PsiDirectory[] directories=aPackage.getDirectories(scope);
    for (    PsiDirectory directory : directories) {
      projectFileIndex.iterateContentUnderDirectory(directory.getVirtualFile(),contentIterator);
    }
    return !find.isEmpty();
  }
  return false;
}
