{
  return new AbstractAddGroup(ProjectBundle.message("add.new.header.text")){
    @Override @NotNull public AnAction[] getChildren(    @Nullable final AnActionEvent e){
      ArrayList<AnAction> result=new ArrayList<AnAction>();
      AnAction addModuleAction=new AddModuleAction(false);
      addModuleAction.getTemplatePresentation().setText("New Module");
      result.add(addModuleAction);
      AnAction importModuleAction=new AddModuleAction(true);
      importModuleAction.getTemplatePresentation().setText("Import Module");
      importModuleAction.getTemplatePresentation().setIcon(AllIcons.ToolbarDecorator.Import);
      result.add(importModuleAction);
      final NullableComputable<MyNode> selectedNodeRetriever=new NullableComputable<MyNode>(){
        @Override public MyNode compute(){
          final TreePath selectionPath=myTree.getSelectionPath();
          final Object lastPathComponent=selectionPath == null ? null : selectionPath.getLastPathComponent();
          if (lastPathComponent instanceof MyNode) {
            return (MyNode)lastPathComponent;
          }
          return null;
        }
      }
;
      return result.toArray(new AnAction[result.size()]);
    }
  }
;
}
