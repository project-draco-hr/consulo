{
  final List<PsiElement> overridingMethods=new ArrayList<PsiElement>();
  final List<UsageInfo> others=new ArrayList<UsageInfo>();
  for (  UsageInfo usage : usages) {
    if (usage instanceof SafeDeleteOverridingMethodUsageInfo) {
      overridingMethods.add(((SafeDeleteOverridingMethodUsageInfo)usage).getOverridingMethod());
    }
 else {
      others.add(usage);
    }
  }
  UsageTarget[] targets=new UsageTarget[elements.length + overridingMethods.size()];
  for (int i=0; i < targets.length; i++) {
    if (i < elements.length) {
      targets[i]=new PsiElement2UsageTargetAdapter(elements[i]);
    }
 else {
      targets[i]=new PsiElement2UsageTargetAdapter(overridingMethods.get(i - elements.length));
    }
  }
  return manager.showUsages(targets,UsageInfoToUsageConverter.convert(new UsageInfoToUsageConverter.TargetElementsDescriptor(elements),others.toArray(new UsageInfo[others.size()])),presentation);
}
