{
  if (!(element instanceof PsiPolyadicExpression)) {
    return false;
  }
  final PsiPolyadicExpression expression=(PsiPolyadicExpression)element;
  final IElementType tokenType=expression.getOperationTokenType();
  if (!tokenType.equals(JavaTokenType.PLUS)) {
    return false;
  }
  final PsiExpression[] operands=expression.getOperands();
  if (operands.length <= 1) {
    return false;
  }
  final PsiType type=expression.getType();
  if (type == null) {
    for (    PsiExpression operand : operands) {
      if (hasStringType(operand)) {
        return true;
      }
    }
    return false;
  }
  return type.equalsToText(CommonClassNames.JAVA_LANG_STRING);
}
