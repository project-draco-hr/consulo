{
  final PsiIdentifier nameIdentifier=method.getNameIdentifier();
  if (nameIdentifier == null) {
    return;
  }
  final VariableAccessVisitor visitor=new VariableAccessVisitor();
  method.accept(visitor);
  final Set<PsiField> fields=visitor.getOveraccessedFields();
  for (  PsiField field : fields) {
    if (ExpressionUtils.isConstant(field) || m_ignoreFinalFields && field.hasModifierProperty(PsiModifier.FINAL)) {
      continue;
    }
    registerError(nameIdentifier,field);
  }
}
