{
  if (getOwnerClass() != null) {
    getOwnerClass().methodRemoved(this);
  }
  super.referenceRemoved();
  for (Iterator<RefMethod> iterator=getSuperMethods().iterator(); iterator.hasNext(); ) {
    RefMethod superMethod=iterator.next();
    superMethod.getDerivedMethods().remove(this);
  }
  for (Iterator<RefMethod> iterator=getDerivedMethods().iterator(); iterator.hasNext(); ) {
    RefMethod subMethod=iterator.next();
    subMethod.getSuperMethods().remove(this);
  }
  ArrayList<RefElement> deletedRefs=new ArrayList<RefElement>();
  RefParameter[] parameters=getParameters();
  for (int i=0; i < parameters.length; i++) {
    RefParameter parameter=parameters[i];
    RefUtil.removeRefElement(parameter,deletedRefs);
  }
}
