{
  final PsiModifierList modifierList=method.getModifierList();
  if (modifierList.hasModifierProperty(PsiModifier.PROTECTED)) {
    modifierList.setModifierProperty(PsiModifier.PROTECTED,false);
  }
  if (!modifierList.hasModifierProperty(PsiModifier.PUBLIC)) {
    modifierList.setModifierProperty(PsiModifier.PUBLIC,true);
  }
  final PsiAnnotation overrideAnnotation=modifierList.findAnnotation("java.lang.Override");
  if (overrideAnnotation != null) {
    overrideAnnotation.delete();
  }
  method.accept(new SuperLifeCycleCallRemover(method.getName()));
}
