{
  final List<ModuleDescriptor> descriptors=getModuleDescriptors();
  MultiMap<ModuleDescriptor,VirtualFile> filesByModule=new MultiMap<ModuleDescriptor,VirtualFile>();
  for (  VirtualFile file : files) {
    final File ioFile=VfsUtil.virtualToIoFile(file);
    ModuleDescriptor descriptor=findDescriptorByFile(descriptors,ioFile);
    if (descriptor != null) {
      filesByModule.putValue(descriptor,file);
    }
  }
  final List<DetectedFrameworkDescription> result=new ArrayList<DetectedFrameworkDescription>();
  final FacetType<F,C> facetType=detector.getFacetType();
  for (  ModuleDescriptor module : filesByModule.keySet()) {
    if (!facetType.isSuitableModuleType(module.getModuleType())) {
      continue;
    }
    final List<Pair<C,Collection<VirtualFile>>> pairs=detector.createConfigurations(filesByModule.get(module),Collections.<C>emptyList());
    for (    Pair<C,Collection<VirtualFile>> pair : pairs) {
      result.add(new FacetBasedDetectedFrameworkDescriptionInWizard<F,C>(module,detector,pair.getFirst(),new HashSet<VirtualFile>(pair.getSecond())));
    }
  }
  return result;
}
