{
  startElement(statement);
  final PsiExpression condition=statement.getAssertCondition();
  if (condition != null) {
    myStartStatementStack.pushStatement(statement,false);
    myEndStatementStack.pushStatement(statement,false);
    myEndJumpRoles.push(BranchingInstruction.Role.END);
    myStartJumpRoles.push(BranchingInstruction.Role.END);
    condition.accept(this);
    myStartJumpRoles.pop();
    myEndJumpRoles.pop();
    myStartStatementStack.popStatement();
    myEndStatementStack.popStatement();
  }
  PsiExpression description=statement.getAssertDescription();
  if (description != null) {
    description.accept(this);
  }
  Instruction instruction=new ConditionalThrowToInstruction(0,statement.getAssertCondition());
  myCurrentFlow.addInstruction(instruction);
  addElementOffsetLater(myCodeFragment,false);
  finishElement(statement);
}
