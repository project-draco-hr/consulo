{
  File binaryPath=dependency.getFile();
  if (binaryPath == null) {
    throw new IllegalStateException(String.format("Can't parse external library dependency '%s'. Reason: it doesn't specify path to the binaries",dependency));
  }
  ExternalLibrary library=new ExternalLibrary(GradleConstants.SYSTEM_ID,FileUtil.getNameWithoutExtension(binaryPath));
  library.addPath(LibraryPathType.BINARY,binaryPath.getAbsolutePath());
  File sourcePath=dependency.getSource();
  if (sourcePath != null) {
    library.addPath(LibraryPathType.SOURCE,sourcePath.getAbsolutePath());
  }
  File javadocPath=dependency.getJavadoc();
  if (javadocPath != null) {
    library.addPath(LibraryPathType.DOC,javadocPath.getAbsolutePath());
  }
  if (!intellijProject.addLibrary(library)) {
    for (    ExternalLibrary registeredLibrary : intellijProject.getLibraries()) {
      if (registeredLibrary.equals(library)) {
        return new ExternalLibraryDependency(ownerModule,registeredLibrary);
      }
    }
  }
  return new ExternalLibraryDependency(ownerModule,library);
}
