{
  Map<String,TaskData> tasksByModule=ContainerUtilRt.newHashMap();
  for (  IdeaModule module : project.getModules()) {
    TaskData taskData=new TaskData(GradleConstants.SYSTEM_ID,module.getGradleProject().getPath());
    for (    GradleTask task : module.getGradleProject().getTasks()) {
      String name=task.getName();
      if (name == null || name.trim().isEmpty()) {
        continue;
      }
      String s=name.toLowerCase();
      if (s.contains("idea") || s.contains("eclipse")) {
        continue;
      }
      taskData.addTask(new ExternalSystemTaskDescriptor(name,task.getDescription()));
    }
    Collections.sort(taskData.getTasks());
    tasksByModule.put(module.getName(),taskData);
  }
  Collection<DataNode<ModuleData>> moduleNodes=ExternalSystemApiUtil.findAll(parent,ProjectKeys.MODULE);
  for (  DataNode<ModuleData> moduleNode : moduleNodes) {
    TaskData taskData=tasksByModule.get(moduleNode.getData().getName());
    if (taskData != null && !taskData.getTasks().isEmpty()) {
      moduleNode.createChild(ProjectKeys.TASK,taskData);
    }
  }
}
