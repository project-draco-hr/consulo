{
  IdeaModule module=dependency.getDependencyModule();
  if (module == null) {
    throw new IllegalStateException(String.format("Can't parse gradle module dependency '%s'. Reason: referenced module is null",dependency));
  }
  String moduleName=module.getName();
  if (moduleName == null) {
    throw new IllegalStateException(String.format("Can't parse gradle module dependency '%s'. Reason: referenced module name is undefined (module: '%s') ",dependency,module));
  }
  Set<String> registeredModuleNames=ContainerUtilRt.newHashSet();
  Collection<DataHolder<ModuleData>> modulesDataHolder=ideProject.getCompositeNestedData(ExternalSystemProjectKeys.MODULE);
  if (modulesDataHolder != null) {
    for (    DataHolder<ModuleData> moduleDataHolder : modulesDataHolder) {
      String name=moduleDataHolder.getData().getName();
      registeredModuleNames.add(name);
      if (name.equals(moduleName)) {
        return new ModuleDependencyData(ownerModule.getData(),moduleDataHolder.getData());
      }
    }
  }
  throw new IllegalStateException(String.format("Can't parse gradle module dependency '%s'. Reason: no module with such name (%s) is found. Registered modules: %s",dependency,moduleName,registeredModuleNames));
}
