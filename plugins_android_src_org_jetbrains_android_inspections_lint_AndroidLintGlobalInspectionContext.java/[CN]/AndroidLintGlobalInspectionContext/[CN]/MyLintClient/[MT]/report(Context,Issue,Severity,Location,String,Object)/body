{
  VirtualFile vFile=null;
  File file=null;
  if (location != null) {
    file=location.getFile();
    if (file != null) {
      vFile=LocalFileSystem.getInstance().findFileByIoFile(file);
    }
  }
 else   if (context.getProject() != null) {
    final Module module=findModuleForLintProject(myProject,context.getProject());
    if (module != null) {
      final AndroidFacet facet=AndroidFacet.getInstance(module);
      vFile=facet != null ? AndroidRootUtil.getManifestFile(facet) : null;
      if (vFile != null) {
        file=new File(vFile.getPath());
      }
    }
  }
  if (vFile != null && myScope.contains(vFile)) {
    try {
      file=file.getCanonicalFile();
    }
 catch (    IOException e) {
      LOG.error(e);
      return;
    }
    Map<File,List<ProblemData>> file2ProblemList=myProblemMap.get(issue);
    if (file2ProblemList == null) {
      file2ProblemList=new HashMap<File,List<ProblemData>>();
      myProblemMap.put(issue,file2ProblemList);
    }
    List<ProblemData> problemList=file2ProblemList.get(file);
    if (problemList == null) {
      problemList=new ArrayList<ProblemData>();
      file2ProblemList.put(file,problemList);
    }
    TextRange textRange=TextRange.EMPTY_RANGE;
    if (location != null) {
      final Position start=location.getStart();
      final Position end=location.getEnd();
      if (start != null && end != null && start.getOffset() <= end.getOffset()) {
        textRange=new TextRange(start.getOffset(),end.getOffset());
      }
    }
    problemList.add(new ProblemData(issue,message,textRange));
  }
}
