{
  Tools[] larray=localTools.toArray(new Tools[localTools.size()]);
  for (  Tools tool : larray) {
    LocalInspectionToolWrapper toolWrapper=(LocalInspectionToolWrapper)tool.getTool();
    LocalInspectionTool localTool=toolWrapper.getTool();
    if (localTool instanceof PairedUnfairLocalInspectionTool) {
      String batchShortName=((PairedUnfairLocalInspectionTool)localTool).getInspectionForBatchShortName();
      InspectionProfile currentProfile=getCurrentProfile();
      InspectionToolWrapper batchInspection;
      if (currentProfile == null) {
        batchInspection=null;
      }
 else {
        final InspectionToolWrapper pairedWrapper=currentProfile.getInspectionTool(batchShortName,getProject());
        batchInspection=pairedWrapper != null ? pairedWrapper.createCopy() : null;
      }
      if (batchInspection != null && !myTools.containsKey(batchShortName)) {
        InspectionProfileEntry batchTool=batchInspection.getTool();
        Tools newTool=new ToolsImpl(batchInspection,batchInspection.getDefaultLevel(),true,true);
        if (batchTool instanceof LocalInspectionTool) {
          localTools.add(newTool);
        }
 else         if (batchTool instanceof GlobalSimpleInspectionTool) {
          globalSimpleTools.add(newTool);
        }
 else         if (batchTool instanceof GlobalInspectionTool) {
          globalTools.add(newTool);
        }
 else {
          throw new AssertionError(batchTool);
        }
        myTools.put(batchShortName,newTool);
        batchInspection.initialize(this);
      }
    }
  }
}
