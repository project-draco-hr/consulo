{
  myUIOptions=AnalysisUIOptions.getInstance(myProject).copy();
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  LOG.info("Code inspection started");
  myView=new InspectionResultsView(myProject,getCurrentProfile(),scope,this,new InspectionRVContentProviderImpl(myProject));
  ProgressManager.getInstance().run(new Task.Backgroundable(getProject(),InspectionsBundle.message("inspection.progress.title"),true,new PerformAnalysisInBackgroundOption(myProject)){
    public void run(    @NotNull ProgressIndicator indicator){
      performInspectionsWithProgress(scope,manager);
    }
    @Override public void onSuccess(){
      UIUtil.invokeLaterIfNeeded(new Runnable(){
        public void run(){
          LOG.info("Code inspection finished");
          if (myView != null) {
            if (!myView.update() && !getUIOptions().SHOW_ONLY_DIFF) {
              NotificationGroup.toolWindowGroup("Inspection Results",ToolWindowId.INSPECTION,true).createNotification(InspectionsBundle.message("inspection.no.problems.message"),MessageType.INFO).notify(myProject);
              close(true);
            }
 else {
              addView(myView);
            }
          }
        }
      }
);
    }
  }
);
}
