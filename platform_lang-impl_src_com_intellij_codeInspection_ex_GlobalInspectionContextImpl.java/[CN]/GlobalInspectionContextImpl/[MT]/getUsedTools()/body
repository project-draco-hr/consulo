{
  InspectionProfileImpl profile=new InspectionProfileImpl((InspectionProfileImpl)getCurrentProfile());
  List<ToolsImpl> tools=profile.getAllEnabledInspectionTools(myProject);
  Set<InspectionProfileEntry> dependentTools=new LinkedHashSet<InspectionProfileEntry>();
  for (  ToolsImpl tool : tools) {
    profile.collectDependentInspections(tool.getTool(),dependentTools);
  }
  if (!dependentTools.isEmpty()) {
    THashSet<ToolsImpl> set=new THashSet<ToolsImpl>(tools,TOOLS_HASHING_STRATEGY);
    set.addAll(ContainerUtil.map(dependentTools,new Function<InspectionProfileEntry,ToolsImpl>(){
      @Override public ToolsImpl fun(      InspectionProfileEntry entry){
        return new ToolsImpl(entry,entry.getDefaultLevel(),true,true);
      }
    }
));
    return new ArrayList<ToolsImpl>(set);
  }
 else {
    return tools;
  }
}
