{
  myJobDescriptors=new ArrayList<JobDescriptor>();
  final InspectionProfile profile=getCurrentProfile();
  InspectionProfileWrapper inspectionProfile=InspectionProjectProfileManager.getInstance(myProject).getProfileWrapper(profile.getName());
  if (inspectionProfile == null) {
    inspectionProfile=new InspectionProfileWrapper(profile);
    final InspectionProfileWrapper profileWrapper=inspectionProfile;
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        profileWrapper.init(getProject());
      }
    }
);
  }
  final List<ToolsImpl> usedTools=((InspectionProfileImpl)inspectionProfile.getInspectionProfile()).getAllEnabledInspectionTools();
  for (  Tools currentTools : usedTools) {
    final String shortName=currentTools.getShortName();
    myTools.put(shortName,currentTools);
    final InspectionTool tool=(InspectionTool)currentTools.getTool();
    if (tool instanceof LocalInspectionToolWrapper) {
      localTools.add(currentTools);
      appendJobDescriptor(LOCAL_ANALYSIS);
    }
 else {
      tools.add(currentTools);
      JobDescriptor[] jobDescriptors=tool.getJobDescriptors();
      for (      JobDescriptor jobDescriptor : jobDescriptors) {
        appendJobDescriptor(jobDescriptor);
      }
    }
    for (    ScopeToolState state : currentTools.getTools()) {
      ((InspectionTool)state.getTool()).initialize(this);
    }
  }
  for (  GlobalInspectionContextExtension extension : myExtensions.values()) {
    extension.performPreRunActivities(tools,localTools,this);
  }
}
