{
  InspectionToolPresentation presentation=myPresentationMap.get(toolWrapper);
  if (presentation == null) {
    Class<?> presentationClass=null;
    if (toolWrapper.myEP != null && !StringUtil.isEmpty(toolWrapper.myEP.presentation)) {
      presentationClass=toolWrapper.myEP.findClassNoExceptions(toolWrapper.myEP.presentation);
    }
    if (presentationClass == null) {
      presentationClass=DefaultInspectionToolPresentation.class;
    }
    try {
      Constructor<?> constructor=presentationClass.getConstructor(InspectionToolWrapper.class,GlobalInspectionContextImpl.class);
      presentation=(InspectionToolPresentation)constructor.newInstance(toolWrapper,this);
    }
 catch (    Exception e) {
      LOG.error(e);
      presentation=new DefaultInspectionToolPresentation(toolWrapper,this);
    }
    presentation=ConcurrencyUtil.cacheOrGet(myPresentationMap,toolWrapper,presentation);
  }
  return presentation;
}
