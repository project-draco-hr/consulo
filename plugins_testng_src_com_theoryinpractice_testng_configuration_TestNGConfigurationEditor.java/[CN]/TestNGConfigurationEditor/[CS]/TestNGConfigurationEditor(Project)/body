{
  this.project=project;
  BrowseModuleValueActionListener[] browseListeners=new BrowseModuleValueActionListener[]{new PackageBrowser(project),new TestClassBrowser(project,this),new MethodBrowser(project,this),new GroupBrowser(project,this),new SuiteBrowser(project),new TestClassBrowser(project,this){
    @Override protected void onClassChoosen(    PsiClass psiClass){
      final JTextField textField=myPatternTextField.getTextField();
      final String text=textField.getText();
      textField.setText(text + (text.length() > 0 ? "||" : "") + psiClass.getQualifiedName());
    }
    @Override public void actionPerformed(    ActionEvent e){
      showDialog();
    }
  }
};
  model=new TestNGConfigurationModel(project);
  model.setListener(this);
  createView();
  moduleSelector=new ConfigurationModuleSelector(project,getModulesComponent());
  commonJavaParameters.setModuleContext(moduleSelector.getModule());
  moduleClasspath.getComponent().addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      commonJavaParameters.setModuleContext(moduleSelector.getModule());
    }
  }
);
  final JPanel panel=myPattern.getComponent();
  panel.setLayout(new BorderLayout());
  myPatternTextField=new TextFieldWithBrowseButton();
  myPatternTextField.setButtonIcon(IconUtil.getAddIcon());
  panel.add(myPatternTextField,BorderLayout.CENTER);
  final FixedSizeButton editBtn=new FixedSizeButton();
  editBtn.setIcon(AllIcons.Actions.ShowViewer);
  editBtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      Messages.showTextAreaDialog(myPatternTextField.getTextField(),"Configure suite tests","EditParametersPopupWindow");
    }
  }
);
  panel.add(editBtn,BorderLayout.EAST);
  registerListener(new JRadioButton[]{packageTest,classTest,methodTest,groupTest,suiteTest,patternTest},new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      ButtonModel buttonModel=(ButtonModel)e.getSource();
      if (buttonModel.isSelected()) {
        if (buttonModel == packageTest.getModel()) {
          model.setType(TestType.PACKAGE);
        }
 else         if (buttonModel == classTest.getModel()) {
          model.setType(TestType.CLASS);
        }
 else         if (buttonModel == methodTest.getModel()) {
          model.setType(TestType.METHOD);
        }
 else         if (buttonModel == groupTest.getModel()) {
          model.setType(TestType.GROUP);
        }
 else         if (buttonModel == suiteTest.getModel()) {
          model.setType(TestType.SUITE);
        }
 else         if (buttonModel == patternTest.getModel()) {
          model.setType(TestType.PATTERN);
        }
        redisplay();
      }
    }
  }
);
  registerListener(new JRadioButton[]{packagesInProject,packagesInModule,packagesAcrossModules},null);
  packagesInProject.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      evaluateModuleClassPath();
    }
  }
);
  LabeledComponent[] components=new LabeledComponent[]{packageField,classField,methodField,groupField,suiteField,myPattern};
  for (int i=0; i < components.length; i++) {
    JComponent field=components[i].getComponent();
    Object document=model.getDocument(i);
    if (field instanceof TextFieldWithBrowseButton) {
      ((TextFieldWithBrowseButton)field).getTextField().setDocument((PlainDocument)document);
    }
 else     if (field instanceof EditorTextFieldWithBrowseButton) {
      final com.intellij.openapi.editor.Document componentDocument=((EditorTextFieldWithBrowseButton)field).getChildComponent().getDocument();
      model.setDocument(i,componentDocument);
    }
 else {
      field=myPatternTextField;
      document=new PlainDocument();
      ((TextFieldWithBrowseButton)field).getTextField().setDocument((Document)document);
      model.setDocument(i,document);
    }
    browseListeners[i].setField((ComponentWithBrowseButton)field);
  }
  model.setType(TestType.CLASS);
  propertiesFile.getComponent().getTextField().setDocument(model.getPropertiesFileDocument());
  outputDirectory.getComponent().getTextField().setDocument(model.getOutputDirectoryDocument());
  commonJavaParameters.setProgramParametersLabel(ExecutionBundle.message("junit.configuration.test.runner.parameters.label"));
  setAnchor(outputDirectory.getLabel());
  alternateJDK.setAnchor(moduleClasspath.getLabel());
  commonJavaParameters.setAnchor(moduleClasspath.getLabel());
}
