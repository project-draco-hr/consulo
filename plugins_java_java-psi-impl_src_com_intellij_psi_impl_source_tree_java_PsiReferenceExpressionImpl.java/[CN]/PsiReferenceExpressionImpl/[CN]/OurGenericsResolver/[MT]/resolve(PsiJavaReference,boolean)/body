{
  PsiReferenceExpressionImpl expression=(PsiReferenceExpressionImpl)ref;
  CompositeElement treeParent=expression.getTreeParent();
  IElementType parentType=treeParent == null ? null : treeParent.getElementType();
  PsiFile file=expression.getContainingFile();
  List<PsiElement> qualifiers=resolveAllQualifiers(expression,file);
  try {
    JavaResolveResult[] result=expression.resolve(parentType,file);
    if (result.length == 0 && incompleteCode && parentType != JavaElementType.REFERENCE_EXPRESSION) {
      result=expression.resolve(JavaElementType.REFERENCE_EXPRESSION,file);
    }
    JavaResolveUtil.substituteResults(expression,result);
    return result;
  }
  finally {
    PsiElement item=qualifiers.isEmpty() ? PsiUtilCore.NULL_PSI_ELEMENT : qualifiers.get(qualifiers.size() - 1);
    qualifiers.clear();
    if (item == null) {
      throw new IncorrectOperationException();
    }
  }
}
