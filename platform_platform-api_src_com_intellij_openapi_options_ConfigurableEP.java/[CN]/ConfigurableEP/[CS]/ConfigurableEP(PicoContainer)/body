{
  myPicoContainer=picoContainer;
  myFactory=new AtomicNotNullLazyValue<NullableFactory<T>>(){
    @NotNull @Override protected NullableFactory<T> compute(){
      if (providerClass != null) {
        return new InstanceFromProviderFactory();
      }
 else       if (instanceClass != null) {
        return new NewInstanceFactory();
      }
 else       if (implementationClass != null) {
        return new ImplementationFactory();
      }
      throw new RuntimeException();
    }
  }
;
}
