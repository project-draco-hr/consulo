{
  if (!(element instanceof GrConditionalExpression)) {
    throw new IncorrectOperationException("Not invoked on a conditional");
  }
  GroovyPsiElementFactory groovyPsiElementFactory=GroovyPsiElementFactory.getInstance(project);
  GrConditionalExpression condExp=(GrConditionalExpression)element;
  GrExpression thenBranch=condExp.getThenBranch();
  GrExpression elseBranch=condExp.getElseBranch();
  Object thenVal=GroovyConstantExpressionEvaluator.evaluate(thenBranch);
  if (Boolean.TRUE.equals(thenVal) && elseBranch != null) {
    GrExpression conditionExp=condExp.getCondition();
    String conditionExpText=getStringToPutIntoOrExpression(conditionExp);
    String elseExpText=getStringToPutIntoOrExpression(elseBranch);
    String newExp=conditionExpText + "||" + elseExpText;
    int caretOffset=conditionExpText.length() + 2;
    GrExpression expressionFromText=groovyPsiElementFactory.createExpressionFromText(newExp,condExp.getContext());
    expressionFromText=(GrExpression)condExp.replace(expressionFromText);
    editor.getCaretModel().moveToOffset(expressionFromText.getTextOffset() + caretOffset);
    return;
  }
  Object elseVal=GroovyConstantExpressionEvaluator.evaluate(elseBranch);
  if (Boolean.FALSE.equals(elseVal) && thenBranch != null) {
    GrExpression conditionExp=condExp.getCondition();
    String conditionExpText=getStringToPutIntoAndExpression(conditionExp);
    String thenExpText=getStringToPutIntoAndExpression(thenBranch);
    String newExp=conditionExpText + "&&" + thenExpText;
    int caretOffset=conditionExpText.length() + 2;
    GrExpression expressionFromText=groovyPsiElementFactory.createExpressionFromText(newExp,condExp.getContext());
    expressionFromText=(GrExpression)condExp.replace(expressionFromText);
    editor.getCaretModel().moveToOffset(expressionFromText.getTextOffset() + caretOffset);
  }
}
