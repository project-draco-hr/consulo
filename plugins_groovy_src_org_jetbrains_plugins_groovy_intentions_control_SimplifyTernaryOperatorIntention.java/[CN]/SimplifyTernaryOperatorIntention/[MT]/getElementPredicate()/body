{
  return new PsiElementPredicate(){
    @Override public boolean satisfiedBy(    PsiElement element){
      if (!(element instanceof GrConditionalExpression)) {
        return false;
      }
      GrConditionalExpression condExp=(GrConditionalExpression)element;
      PsiType condType=condExp.getType();
      if (condType == null || !PsiType.BOOLEAN.isConvertibleFrom(condType)) {
        return false;
      }
      GrExpression thenBranch=condExp.getThenBranch();
      GrExpression elseBranch=condExp.getElseBranch();
      Object thenVal=GroovyConstantExpressionEvaluator.evaluate(thenBranch);
      if (Boolean.TRUE.equals(thenVal) && elseBranch != null) {
        return true;
      }
      Object elseVal=GroovyConstantExpressionEvaluator.evaluate(elseBranch);
      if (thenBranch != null && Boolean.FALSE.equals(elseVal)) {
        return true;
      }
      return false;
    }
  }
;
}
