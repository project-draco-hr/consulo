{
  myDelegate=delegate;
  myColorsProvider=colorsProvider;
  myMutexes=delegate.getMutexes();
  myDefaultSettings=delegate.getDefaultSettings();
  SimpleColoredComponent renderer=new SimpleColoredComponent();
  myGroupingTokens=delegate.getSupportedGroupingTokens();
  if (myGroupingTokens != null) {
    parseWidths(myGroupingTokens,renderer);
    buildWeights(myGroupingTokens);
  }
  myMatchingTokens=delegate.getSupportedMatchingTokens();
  if (myMatchingTokens != null) {
    parseWidths(myMatchingTokens,renderer);
    buildWeights(myMatchingTokens);
  }
  final Set<ArrangementSettingsToken> aliasTokens=ContainerUtil.newHashSet();
  aliasTokens.addAll(aliases);
  myRuleAliases=aliases;
  myRuleAliasMutex=aliasTokens;
  if (!myRuleAliases.isEmpty()) {
    myRuleAliasToken=new CompositeArrangementSettingsToken(StdArrangementTokens.General.ALIAS,aliasTokens);
  }
}
