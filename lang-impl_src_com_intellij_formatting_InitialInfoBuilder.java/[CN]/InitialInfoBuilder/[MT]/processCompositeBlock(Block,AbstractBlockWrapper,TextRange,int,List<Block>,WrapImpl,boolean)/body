{
  final CompositeBlockWrapper info=new CompositeBlockWrapper(rootBlock,myCurrentWhiteSpace,parent,textRange);
  if (index == 0) {
    info.arrangeParentTextRange();
  }
  if (myRootBlockWrapper == null)   myRootBlockWrapper=info;
  boolean blocksMayBeOfInterest=false;
  if (myPositionOfInterest != -1) {
    myResult.put(info,rootBlock);
    blocksMayBeOfInterest=true;
  }
  Block previous=null;
  final int subBlocksCount=subBlocks.size();
  List<AbstractBlockWrapper> list=new ArrayList<AbstractBlockWrapper>(subBlocksCount);
  final boolean blocksAreReadOnly=rootBlock instanceof ReadOnlyBlockContainer || blocksMayBeOfInterest;
  for (int i=0; i < subBlocksCount; i++) {
    final Block block=subBlocks.get(i);
    if (previous != null) {
      myCurrentSpaceProperty=(SpacingImpl)rootBlock.getSpacing(previous,block);
    }
    final TextRange blockRange=block.getTextRange();
    boolean childBlockIsRightBlock=false;
    if (i == subBlocksCount - 1 && rootBlockIsRightBlock) {
      childBlockIsRightBlock=true;
    }
    final AbstractBlockWrapper wrapper=buildFrom(block,i,info,currentWrapParent,blockRange,rootBlock,childBlockIsRightBlock);
    list.add(wrapper);
    if (wrapper.getIndent() == null) {
      wrapper.setIndent((IndentImpl)block.getIndent());
    }
    previous=block;
    if (!blocksAreReadOnly)     subBlocks.set(i,null);
  }
  setDefaultIndents(list);
  info.setChildren(list);
  return info;
}
