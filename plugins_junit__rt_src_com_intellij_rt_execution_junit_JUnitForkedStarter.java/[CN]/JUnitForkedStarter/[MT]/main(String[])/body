{
  final String testOutputPath=args[0];
  final int lastIdx=Integer.parseInt(args[1]);
  final boolean isJUnit4=args[2].equalsIgnoreCase("true");
  final String[] childTestDescription={args[3]};
  final ArrayList listeners=new ArrayList();
  for (int i=4, argsLength=args.length; i < argsLength; i++) {
    listeners.add(args[i]);
  }
  final File file=new File(testOutputPath);
  if (!file.exists()) {
    if (!file.createNewFile())     return;
  }
  final FileOutputStream stream=new FileOutputStream(testOutputPath);
  PrintStream oldOut=System.out;
  PrintStream oldErr=System.err;
  try {
    final PrintStream out=new PrintStream(new ForkedVMWrapper(stream,false));
    final PrintStream err=new PrintStream(new ForkedVMWrapper(stream,true));
    System.setOut(out);
    System.setErr(err);
    IdeaTestRunner testRunner=(IdeaTestRunner)JUnitStarter.getAgentClass(isJUnit4).newInstance();
    testRunner.setStreams(new SegmentedOutputStream(out,true),new SegmentedOutputStream(err,true),lastIdx);
    System.exit(testRunner.startRunnerWithArgs(childTestDescription,listeners,false));
  }
  finally {
    System.setOut(oldOut);
    System.setErr(oldErr);
    stream.close();
  }
}
