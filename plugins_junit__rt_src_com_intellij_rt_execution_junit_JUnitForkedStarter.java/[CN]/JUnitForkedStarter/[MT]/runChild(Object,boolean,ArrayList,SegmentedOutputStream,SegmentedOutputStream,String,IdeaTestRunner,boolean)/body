{
  final File tempFile=File.createTempFile("fork","test");
  final String testOutputPath=tempFile.getAbsolutePath();
  final int knownObject=testRunner.getRegistry().getKnownObject(child);
  String command=commandline + " " + JUnitForkedStarter.class.getName()+ " "+ testOutputPath+ " "+ (knownObject + (forkTillMethod ? 0 : 1))+ " "+ isJUnit4+ " "+ testRunner.getStartDescription(child);
  for (Iterator iterator=listeners.iterator(); iterator.hasNext(); ) {
    command+=" " + iterator.next();
  }
  final Process exec=Runtime.getRuntime().exec(command);
  int result=exec.waitFor();
  ForkedVMWrapper.readWrapped(testOutputPath,out.getPrintStream(),err.getPrintStream());
  return result;
}
