{
  for (int i=0; i < 420; i++) {
    getDomManager().registerFileDescription(new DomFileDescription(MyChildElement.class,"foo"){
      @Override public boolean isMyFile(      @NotNull final XmlFile file,      final Module module){
        fail();
        return super.isMyFile(file,module);
      }
    }
,getTestRootDisposable());
    getDomManager().registerFileDescription(new DomFileDescription(MyChildElement.class,"bar"){
      @Override public boolean isMyFile(      @NotNull final XmlFile file,      final Module module){
        fail();
        return super.isMyFile(file,module);
      }
    }
,getTestRootDisposable());
  }
  getDomManager().createMockElement(MyChildElement.class,null,true);
  @NotNull final VirtualFile virtualFile=createFile("a.xml","").getVirtualFile();
  new WriteCommandAction(getProject()){
    @Override protected void run(    Result result) throws Throwable {
      final BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(virtualFile.getOutputStream(this)));
      writer.write("<root>\n");
      for (int i=0; i < 23942; i++) {
        writer.write("<bar/>\n");
      }
      writer.write("</root>");
      writer.close();
      virtualFile.refresh(false,false);
    }
  }
.execute();
  ((PsiManagerImpl)getPsiManager()).getFileManager().cleanupForNextTest();
  final XmlFile file=(XmlFile)getPsiManager().findFile(virtualFile);
  assertFalse(file.getNode().isParsed());
  assertTrue(StringUtil.isNotEmpty(file.getText()));
  PlatformTestUtil.startPerformanceTest("",100,new ThrowableRunnable(){
    @Override public void run() throws Exception {
      assertNull(getDomManager().getFileElement(file));
    }
  }
).cpuBound().assertTiming();
  assertFalse(file.getNode().isParsed());
}
