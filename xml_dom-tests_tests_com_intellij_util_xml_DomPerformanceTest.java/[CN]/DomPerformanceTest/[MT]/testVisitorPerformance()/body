{
  final MyElement element=createElement("<root xmlns=\"adsf\" targetNamespace=\"adsf\"/>",MyElement.class);
  MetaRegistry.bindDataToElement(DomUtil.getFile(element).getDocument(),new XmlNSDescriptorImpl());
  final MyElement child=element.addChildElement();
  child.getAttr().setValue("239");
  child.getChild239().getAttr().setValue("42");
  child.getChild().getAttr().setValue("42xx");
  child.getChild2().getAttr().setValue("42yy");
  child.addChildElement().getChild().addFooChild().getAttr().setValue("xxx");
  child.addChildElement().addFooChild().getAttr().setValue("yyy");
  child.addChildElement().addFooChild().addBarChild().addBarChild().addChildElement().getChild().getAttr().setValue("xxx");
  child.addChildElement().addBarComposite().setValue("ssss");
  child.addBarChild().getChild2().getAttr().setValue("234178956023");
  PlatformTestUtil.startPerformanceTest(getTestName(false),30000,new ThrowableRunnable(){
    @Override public void run() throws Exception {
      for (int i=0; i < 239; i++) {
        element.addChildElement().copyFrom(child);
      }
    }
  }
).cpuBound().attempts(1).assertTiming();
  final MyElement newElement=createElement(DomUtil.getFile(element).getText(),MyElement.class);
  PlatformTestUtil.startPerformanceTest(getTestName(false),200,new ThrowableRunnable(){
    @Override public void run() throws Exception {
      newElement.acceptChildren(new DomElementVisitor(){
        @Override public void visitDomElement(        DomElement element){
          element.acceptChildren(this);
        }
      }
);
    }
  }
).cpuBound().assertTiming();
}
