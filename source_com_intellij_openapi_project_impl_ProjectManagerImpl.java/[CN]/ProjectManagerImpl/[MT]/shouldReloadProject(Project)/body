{
  if (project.isDisposed())   return false;
  List<VirtualFile> causes=myChangedProjectFiles.get(project);
  final Set<VirtualFile> liveCauses=new HashSet<VirtualFile>(causes);
  for (  VirtualFile cause : causes) {
    if (!cause.isValid())     liveCauses.remove(cause);
  }
  if (liveCauses.isEmpty())   return false;
  final boolean[] reloadOk=new boolean[]{false};
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      try {
        reloadOk[0]=((ProjectImpl)project).getStateStore().reload(liveCauses);
      }
 catch (      StateStorage.StateStorageException e) {
        Messages.showWarningDialog(ProjectBundle.message("project.reload.failed",e.getMessage()),ProjectBundle.message("project.reload.failed.title"));
      }
catch (      IOException e) {
        Messages.showWarningDialog(ProjectBundle.message("project.reload.failed",e.getMessage()),ProjectBundle.message("project.reload.failed.title"));
      }
    }
  }
);
  if (reloadOk[0])   return false;
  String message;
  if (liveCauses.size() == 1) {
    message=ProjectBundle.message("project.reload.external.change.single",causes.get(0).getPresentableUrl());
  }
 else {
    StringBuilder filesBuilder=new StringBuilder();
    boolean first=true;
    for (    VirtualFile cause : liveCauses) {
      if (!first)       filesBuilder.append("\n");
      first=false;
      filesBuilder.append(cause.getPresentableUrl());
    }
    message=ProjectBundle.message("project.reload.external.change.multiple",filesBuilder.toString());
  }
  if (Messages.showYesNoDialog(project,message,ProjectBundle.message("project.reload.external.change.title"),Messages.getQuestionIcon()) != 0) {
    return false;
  }
  return true;
}
