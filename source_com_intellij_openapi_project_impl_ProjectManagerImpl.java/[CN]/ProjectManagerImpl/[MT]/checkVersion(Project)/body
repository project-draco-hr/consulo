{
  int version=((ProjectImpl)project).getOriginalVersion();
  if (version >= 0 && version < CURRENT_FORMAT_VERSION) {
    final VirtualFile projectFile=project.getProjectFile();
    LOG.assertTrue(projectFile != null);
    String name=projectFile.getNameWithoutExtension();
    String message="The project " + projectFile.getName() + " you are about to open has an older format.\n"+ "IDEA will automatically convert it to the new format.\n"+ "You will not be able to open it by earlier versions.\n"+ "The old project file will be saved to "+ name+ "_old.ipr.\n"+ "Proceed with conversion?";
    if (Messages.showYesNoDialog(message,"Warning",Messages.getWarningIcon()) != 0)     return false;
    final ArrayList<String> conversionProblems=((ProjectImpl)project).getConversionProblemsStorage();
    if (conversionProblems.size() > 0) {
      StringBuffer buffer=new StringBuffer();
      buffer.append("During your project conversion, the following problem(s) were detected:");
      for (Iterator<String> iterator=conversionProblems.iterator(); iterator.hasNext(); ) {
        String s=iterator.next();
        buffer.append('\n');
        buffer.append(s);
      }
      buffer.append("\n\nPress 'Show Help' for more information.");
      final int result=Messages.showDialog(project,buffer.toString(),"Project Conversion Problems",new String[]{"Show Help","Close"},0,Messages.getWarningIcon());
      if (result == 0) {
        HelpManager.getInstance().invokeHelp("project.migrationProblems");
      }
    }
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        try {
          VirtualFile projectDir=projectFile.getParent();
          final String oldProjectName=projectFile.getNameWithoutExtension() + "_old." + projectFile.getExtension();
          VirtualFile oldProject=projectDir.findChild(oldProjectName);
          if (oldProject == null) {
            oldProject=projectDir.createChildData(this,oldProjectName);
          }
          Writer writer=oldProject.getWriter(this);
          writer.write(projectFile.contentsToCharArray());
          writer.close();
          VirtualFile workspaceFile=project.getWorkspaceFile();
          if (workspaceFile != null) {
            final String oldWorkspaceName=workspaceFile.getNameWithoutExtension() + "_old." + project.getWorkspaceFile().getExtension();
            VirtualFile oldWorkspace=projectDir.findChild(oldWorkspaceName);
            if (oldWorkspace == null) {
              oldWorkspace=projectDir.createChildData(this,oldWorkspaceName);
            }
            writer=oldWorkspace.getWriter(this);
            writer.write(workspaceFile.contentsToCharArray());
            writer.close();
          }
        }
 catch (        IOException e) {
          LOG.error(e);
        }
      }
    }
);
  }
  if (version > CURRENT_FORMAT_VERSION) {
    String message="The project " + project.getName() + " you are about to open "+ "has been created by a newer version of IDEA. If you open it, your project"+ " is likely to be corrupted. Continue?";
    if (Messages.showYesNoDialog(message,"Warning",Messages.getWarningIcon()) != 0)     return false;
  }
  return true;
}
