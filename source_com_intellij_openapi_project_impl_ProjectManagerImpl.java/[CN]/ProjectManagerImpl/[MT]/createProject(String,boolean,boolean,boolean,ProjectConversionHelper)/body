{
  final ProjectImpl project;
  if (isDummy) {
    throw new UnsupportedOperationException("Dummy project is deprecated and shall not be used anymore.");
  }
 else {
    project=new ProjectImpl(this,filePath,isDefault,isOptimiseTestLoadSpeed);
    if (conversionHelper != null) {
      project.getPicoContainer().registerComponentInstance(ProjectConversionHelper.class,conversionHelper);
    }
  }
  try {
    project.getStateStore().load();
  }
 catch (  IOException e) {
    LOG.info(e);
    Messages.showErrorDialog(e.getMessage(),ProjectBundle.message("project.load.default.error"));
  }
  project.loadProjectComponents();
  return project;
}
