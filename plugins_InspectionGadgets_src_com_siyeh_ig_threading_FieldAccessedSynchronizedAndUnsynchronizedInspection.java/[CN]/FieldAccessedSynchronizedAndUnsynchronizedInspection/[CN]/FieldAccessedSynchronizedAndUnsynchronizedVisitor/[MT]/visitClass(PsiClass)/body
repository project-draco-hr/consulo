{
  final VariableAccessVisitor visitor=new VariableAccessVisitor();
  aClass.accept(visitor);
  final Set<PsiElement> fields=visitor.getInappropriatelyAccessedFields();
  for (  Object field1 : fields) {
    final PsiField field=(PsiField)field1;
    if (!field.hasModifierProperty(PsiModifier.FINAL)) {
      final PsiClass containingClass=field.getContainingClass();
      if (aClass.equals(containingClass)) {
        registerFieldError(field);
      }
    }
  }
}
