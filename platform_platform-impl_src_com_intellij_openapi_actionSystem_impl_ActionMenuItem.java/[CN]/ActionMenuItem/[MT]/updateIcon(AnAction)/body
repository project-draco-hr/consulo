{
  if (isToggleable() && (myPresentation.getIcon() == null || myInsideCheckedGroup)) {
    action.update(myEvent);
    myToggled=Boolean.TRUE.equals(myEvent.getPresentation().getClientProperty(Toggleable.SELECTED_PROPERTY));
    if (ActionPlaces.MAIN_MENU.equals(myPlace) && SystemInfo.isMacSystemMenu || UIUtil.isUnderNimbusLookAndFeel() || UIUtil.isUnderWindowsLookAndFeel() && SystemInfo.isWin7OrNewer) {
      setState(myToggled);
    }
 else     if (!(getUI() instanceof GtkMenuItemUI)) {
      if (myToggled) {
        SizedIcon icon=new SizedIcon(AllIcons.Actions.Checked,JBUI.scale(outIconSize),JBUI.scale(outIconSize));
        setIcon(icon);
        setDisabledIcon(IconLoader.getDisabledIcon(icon));
      }
 else {
        EmptyIcon emptyIcon=JBUI.emptyIcon(outIconSize);
        setIcon(emptyIcon);
        setDisabledIcon(emptyIcon);
      }
    }
  }
 else {
    if (UISettings.getInstance().SHOW_ICONS_IN_MENUS) {
      Icon icon=myPresentation.getIcon();
      if (action instanceof ToggleAction && ((ToggleAction)action).isSelected(myEvent)) {
        icon=new PoppedIcon(icon,JBUI.scale(16),JBUI.scale(16));
      }
      setIcon(icon);
      if (myPresentation.getDisabledIcon() != null) {
        setDisabledIcon(myPresentation.getDisabledIcon());
      }
 else {
        setDisabledIcon(IconLoader.getDisabledIcon(icon));
      }
    }
  }
}
