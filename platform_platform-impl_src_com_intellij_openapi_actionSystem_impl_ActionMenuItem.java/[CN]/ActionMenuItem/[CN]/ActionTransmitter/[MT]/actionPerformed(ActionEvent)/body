{
  final IdeFocusManager fm=IdeFocusManager.findInstanceByContext(myContext);
  final ActionCallback typeAhead=new ActionCallback();
  fm.typeAheadUntil(typeAhead);
  fm.runOnOwnContext(myContext,new Runnable(){
    @Override public void run(){
      final AnActionEvent event=new AnActionEvent(new MouseEvent(ActionMenuItem.this,MouseEvent.MOUSE_PRESSED,0,e.getModifiers(),getWidth() / 2,getHeight() / 2,1,false),myContext,myPlace,myPresentation,ActionManager.getInstance(),e.getModifiers());
      final AnAction action=myAction.getAction();
      if (ActionUtil.lastUpdateAndCheckDumb(action,event,false)) {
        ActionManagerEx actionManager=ActionManagerEx.getInstanceEx();
        actionManager.fireBeforeActionPerformed(action,myContext,event);
        Component component=PlatformDataKeys.CONTEXT_COMPONENT.getData(event.getDataContext());
        if (component != null && !isInTree(component)) {
          typeAhead.setDone();
          return;
        }
        SimpleTimer.getInstance().setUp(new Runnable(){
          @Override public void run(){
            SwingUtilities.invokeLater(new Runnable(){
              @Override public void run(){
                fm.doWhenFocusSettlesDown(typeAhead.createSetDoneRunnable());
              }
            }
);
          }
        }
,Registry.intValue("actionSystem.typeAheadTimeAfterPopupAction"));
        ActionUtil.performActionDumbAware(action,event);
        actionManager.queueActionPerformedEvent(action,myContext,event);
      }
 else {
        typeAhead.setDone();
      }
    }
  }
);
}
