{
  PsiElement position=parameters.getPosition();
  if (!PlatformPatterns.psiElement().afterLeaf(".",".&").accepts(position)) {
    if (suggestPackage(position)) {
      result.addElement(keyword("package"));
    }
    if (suggestImport(position)) {
      result.addElement(keyword("import"));
    }
    addTypeDefinitionKeywords(result,position);
    addExtendsImplements(position,result);
    registerControlCompletion(position,result);
    if (position.getParent() instanceof GrExpression && !(position.getParent() instanceof GrLiteral)) {
      addKeywords(result,"true","false","null","super","new","this","as");
    }
    if (isInfixOperatorPosition(position)) {
      addKeywords(result,"in","instanceof");
    }
 else     if (suggestThrows(position)) {
      addKeywords(result,"throws");
    }
 else     if (suggestPrimitiveTypes(position)) {
      addKeywords(result,BUILT_IN_TYPES);
    }
  }
}
