{
  PsiElement nextNonSpace=PsiUtil.getNextNonSpace(context);
  if (nextNonSpace instanceof PsiErrorElement)   nextNonSpace=PsiUtil.getNextNonSpace(nextNonSpace);
  if (afterAbstractMethod(context,true) && nextNonSpace != null && nextNonSpace.getText().startsWith("{") || addExtendsImplements(context).length > 0) {
    return false;
  }
  PsiElement parent=context.getParent();
  if (parent instanceof GrTypeDefinitionBody) {
    return true;
  }
  if (parent instanceof GrReferenceExpression) {
    if (parent.getParent() instanceof GroovyFile) {
      return true;
    }
    if ((parent.getParent() instanceof GrApplicationStatement || parent.getParent() instanceof GrCall) && parent.getParent().getParent() instanceof GroovyFile) {
      return true;
    }
  }
  if (parent instanceof GrVariable && context == ((GrVariable)parent).getNameIdentifierGroovy()) {
    final PsiElement decl=parent.getParent();
    if (decl instanceof GrVariableDeclaration && !((GrVariableDeclaration)decl).isTuple() && ((GrVariableDeclaration)decl).getTypeElementGroovy() == null && (decl.getParent() instanceof GrTypeDefinitionBody || decl.getParent() instanceof GroovyFile)) {
      return true;
    }
  }
  final PsiElement leaf=getLeafByOffset(context.getTextRange().getStartOffset() - 1,context);
  if (leaf != null) {
    PsiElement prev=leaf;
    prev=PsiImplUtil.realPrevious(prev);
    if (prev instanceof GrModifierList && prev.getParent() != null && prev.getParent().getParent() instanceof GroovyFile) {
      return true;
    }
    if (leaf.getParent() instanceof GroovyFile) {
      return isNewStatement(context,false);
    }
  }
  return false;
}
