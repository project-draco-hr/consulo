{
  InjectedLanguageManager.ConcatenationInjector injector=new InjectedLanguageManager.ConcatenationInjector(){
    public void getLanguagesToInject(    @NotNull InjectedLanguageManager.MultiHostRegistrar injectionPlacesRegistrar,    @NotNull PsiElement... operands){
      PsiVariable variable=PsiTreeUtil.getParentOfType(operands[0],PsiVariable.class);
      if (variable == null)       return;
      String name=variable.getName();
      if (!varName.equals(name))       return;
      if (!(operands[0] instanceof PsiLiteralExpression))       return;
      injectionPlacesRegistrar.startInjecting(language);
      for (int i=0; i < operands.length; i++) {
        PsiElement operand=operands[i];
        if (!(operand instanceof PsiLanguageInjectionHost))         continue;
        TextRange textRange=new TextRange(1,operand.getTextLength() - 1);
        injectionPlacesRegistrar.addPlace(i == 0 ? null : prefix,i == operands.length - 1 ? null : suffix,(PsiLanguageInjectionHost)operand,textRange);
      }
      injectionPlacesRegistrar.doneInjecting();
    }
  }
;
  InjectedLanguageManager.getInstance(project).registerConcatenationInjector(injector);
  return injector;
}
