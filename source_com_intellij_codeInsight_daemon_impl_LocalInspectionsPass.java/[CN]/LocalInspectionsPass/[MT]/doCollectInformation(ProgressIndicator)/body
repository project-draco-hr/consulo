{
  InspectionManagerEx iManager=(InspectionManagerEx)InspectionManager.getInstance(myProject);
  PsiElement[] psiRoots=myFile.getPsiRoots();
  for (  final PsiElement psiRoot : psiRoots) {
    PsiElement[] elements=CodeInsightUtil.getElementsInRange(psiRoot,myStartOffset,myEndOffset);
    Set<PsiElement> workSet=new THashSet<PsiElement>();
    for (    PsiElement element1 : elements) {
      ProgressManager.getInstance().checkCanceled();
      PsiElement element=element1;
      element=PsiTreeUtil.getParentOfType(element,CHECKABLE,false);
      while (element != null) {
        if (!workSet.add(element))         break;
        element=PsiTreeUtil.getParentOfType(element,CHECKABLE,true);
      }
    }
    workSet.add(myFile);
    myDescriptors=new ArrayList<ProblemDescriptor>();
    myLevels=new ArrayList<HighlightInfoType>();
    myTools=new ArrayList<LocalInspectionTool>();
    LocalInspectionTool[] tools=DaemonCodeAnalyzerSettings.getInstance().getInspectionProfile().getHighlightingLocalInspectionTools();
    for (    PsiElement element : workSet) {
      ProgressManager.getInstance().checkCanceled();
      LocalInspectionTool currentTool=null;
      try {
        if (element instanceof PsiMethod) {
          PsiMethod psiMethod=(PsiMethod)element;
          for (          LocalInspectionTool tool : tools) {
            currentTool=tool;
            if (iManager.isToCheckMember(psiMethod,currentTool.getID())) {
              appendDescriptors(currentTool.checkMethod(psiMethod,iManager,true),currentTool);
            }
          }
        }
 else         if (element instanceof PsiClass && !(element instanceof PsiTypeParameter)) {
          PsiClass psiClass=(PsiClass)element;
          for (          LocalInspectionTool tool : tools) {
            currentTool=tool;
            if (iManager.isToCheckMember(psiClass,currentTool.getID())) {
              appendDescriptors(currentTool.checkClass(psiClass,iManager,true),currentTool);
            }
          }
        }
 else         if (element instanceof PsiField) {
          PsiField psiField=(PsiField)element;
          for (          LocalInspectionTool tool : tools) {
            currentTool=tool;
            if (iManager.isToCheckMember(psiField,currentTool.getID())) {
              appendDescriptors(currentTool.checkField(psiField,iManager,true),currentTool);
            }
          }
        }
 else         if (element instanceof PsiFile) {
          PsiFile psiFile=(PsiFile)element;
          for (int k=0; k < tools.length; k++) {
            currentTool=tools[k];
            appendDescriptors(currentTool.checkFile(psiFile,iManager,true),currentTool);
          }
        }
      }
 catch (      ProcessCanceledException e) {
        throw e;
      }
catch (      Exception e) {
        if (currentTool != null) {
          LOG.error("Exception happened in local inspection tool: " + currentTool.getDisplayName(),e);
        }
 else {
          LOG.error(e);
        }
      }
    }
  }
}
