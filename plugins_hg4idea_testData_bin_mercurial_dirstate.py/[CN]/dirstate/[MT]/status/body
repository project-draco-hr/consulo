def status(self, match, subrepos, ignored, clean, unknown):
    'Determine the status of the working copy relative to the\n        dirstate and return a tuple of lists (unsure, modified, added,\n        removed, deleted, unknown, ignored, clean), where:\n\n          unsure:\n            files that might have been modified since the dirstate was\n            written, but need to be read to be sure (size is the same\n            but mtime differs)\n          modified:\n            files that have definitely been modified since the dirstate\n            was written (different size or mode)\n          added:\n            files that have been explicitly added with hg add\n          removed:\n            files that have been explicitly removed with hg remove\n          deleted:\n            files that have been deleted through other means ("missing")\n          unknown:\n            files not in the dirstate that are not ignored\n          ignored:\n            files not in the dirstate that are ignored\n            (by _dirignore())\n          clean:\n            files that have definitely not been modified since the\n            dirstate was written\n        '
    (listignored, listclean, listunknown) = (ignored, clean, unknown)
    (lookup, modified, added, unknown, ignored) = ([], [], [], [], [])
    (removed, deleted, clean) = ([], [], [])
    dmap = self._map
    ladd = lookup.append
    madd = modified.append
    aadd = added.append
    uadd = unknown.append
    iadd = ignored.append
    radd = removed.append
    dadd = deleted.append
    cadd = clean.append
    for (fn, st) in self.walk(match, subrepos, listunknown, listignored).iteritems():
        if (fn not in dmap):
            if ((listignored or match.exact(fn)) and self._dirignore(fn)):
                if listignored:
                    iadd(fn)
            elif listunknown:
                uadd(fn)
            continue
        (state, mode, size, time) = dmap[fn]
        if ((not st) and (state in 'nma')):
            dadd(fn)
        elif (state == 'n'):
            if (((size >= 0) and ((size != st.st_size) or (((mode ^ st.st_mode) & 64) and self._checkexec))) or (size == (-2)) or (fn in self._copymap)):
                madd(fn)
            elif (time != int(st.st_mtime)):
                ladd(fn)
            elif listclean:
                cadd(fn)
        elif (state == 'm'):
            madd(fn)
        elif (state == 'a'):
            aadd(fn)
        elif (state == 'r'):
            radd(fn)
    return (lookup, modified, added, removed, deleted, unknown, ignored, clean)
