{
  ASTNode expressionList=node.getTreeParent();
  ASTNode firstAnonymousClassCandidate=node;
  if (expressionList == null) {
    return false;
  }
  if (expressionList.getElementType() != JavaElementType.EXPRESSION_LIST && expressionList.getElementType() == JavaElementType.NEW_EXPRESSION) {
    firstAnonymousClassCandidate=expressionList;
    expressionList=expressionList.getTreeParent();
  }
  if (expressionList == null || expressionList.getElementType() != JavaElementType.EXPRESSION_LIST) {
    return false;
  }
  ASTNode methodCallExpression=expressionList.getTreeParent();
  if (methodCallExpression == null || methodCallExpression.getElementType() != JavaElementType.METHOD_CALL_EXPRESSION) {
    return false;
  }
  ASTNode lbrace=expressionList.getFirstChildNode();
  boolean firstAnonymousClass=false;
  for (ASTNode arg=lbrace.getTreeNext(); arg != null; arg=FormattingAstUtil.getNextNonWhiteSpaceNode(arg)) {
    if (!isAnonymousClass(arg)) {
      continue;
    }
    if (firstAnonymousClass) {
      return true;
    }
 else     if (arg != firstAnonymousClassCandidate) {
      return false;
    }
 else {
      firstAnonymousClass=true;
    }
  }
  return false;
}
