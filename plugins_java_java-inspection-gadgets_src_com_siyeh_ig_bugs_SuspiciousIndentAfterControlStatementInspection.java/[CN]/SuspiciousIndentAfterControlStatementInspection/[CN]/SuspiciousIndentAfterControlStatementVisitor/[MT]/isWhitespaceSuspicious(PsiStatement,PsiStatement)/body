{
  final boolean lineBreakBeforeBody;
  PsiElement prevSibling=body.getPrevSibling();
  if (!(prevSibling instanceof PsiWhiteSpace)) {
    lineBreakBeforeBody=false;
    prevSibling=statement.getPrevSibling();
    if (!(prevSibling instanceof PsiWhiteSpace)) {
      return false;
    }
  }
 else {
    final String text=prevSibling.getText();
    final int lineBreakIndex=getLineBreakIndex(text);
    if (lineBreakIndex < 0) {
      lineBreakBeforeBody=false;
      prevSibling=statement.getPrevSibling();
      if (!(prevSibling instanceof PsiWhiteSpace)) {
        return false;
      }
    }
 else {
      lineBreakBeforeBody=true;
    }
  }
  final PsiStatement nextStatement=PsiTreeUtil.getNextSiblingOfType(statement,PsiStatement.class);
  if (nextStatement == null) {
    return false;
  }
  final String text=prevSibling.getText();
  final int index=getLineBreakIndex(text);
  if (index < 0) {
    return false;
  }
  final String indent=text.substring(index + 1);
  final PsiElement nextSibling=nextStatement.getPrevSibling();
  if (!(nextSibling instanceof PsiWhiteSpace)) {
    return false;
  }
  final String nextText=nextSibling.getText();
  final int nextIndex=getLineBreakIndex(nextText);
  if (nextIndex < 0) {
    return false;
  }
  final String nextIndent=nextText.substring(nextIndex + 1);
  if (lineBreakBeforeBody) {
    return indent.equals(nextIndent);
  }
 else {
    return !indent.equals(nextIndent);
  }
}
