{
  final SelectionModel selectionModel=editor.getSelectionModel();
  if (!selectionModel.hasSelection()) {
    return Collections.emptyList();
  }
  final TextRange selection=new TextRange(selectionModel.getSelectionStart(),selectionModel.getSelectionEnd());
  final PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
  if (file == null || file instanceof PsiCompiledElement) {
    return Collections.emptyList();
  }
  final List<T> results=new ArrayList<T>();
  final PsiElementVisitor visitor=new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitElement(    PsiElement element){
      if (!selection.intersects(element.getTextRange())) {
        return;
      }
      if (filter.isAssignableFrom(element.getClass())) {
        results.add((T)element);
        if (!searchChildrenOfFound) {
          return;
        }
      }
      super.visitElement(element);
    }
  }
;
  file.accept(visitor);
  return results;
}
