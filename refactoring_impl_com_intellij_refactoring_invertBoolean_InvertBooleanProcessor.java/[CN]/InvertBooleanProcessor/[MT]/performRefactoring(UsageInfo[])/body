{
  for (  PsiElement element : myRenameProcessor.getElements()) {
    RenameUtil.doRename(element,myNewName,extractUsagesForElement(element,usages),myProject,new RefactoringElementListener(){
      public void elementMoved(      PsiElement newElement){
      }
      public void elementRenamed(      PsiElement newElement){
      }
    }
);
  }
  for (  SmartPsiElementPointer invertUsage : myUsagesToInvert) {
    PsiExpression expression=(PsiExpression)invertUsage.getElement();
    LOG.assertTrue(expression != null);
    if (expression.getParent() instanceof PsiMethodCallExpression)     expression=(PsiExpression)expression.getParent();
    try {
      while (expression.getParent() instanceof PsiPrefixExpression && ((PsiPrefixExpression)expression.getParent()).getOperationSign().getTokenType() == JavaTokenType.EXCL) {
        expression=(PsiExpression)expression.getParent();
      }
      expression.replace(CodeInsightServicesUtil.invertCondition(expression));
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
  }
}
