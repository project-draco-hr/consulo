{
  final TreeState treeState=TreeState.createOn(this,myRoot);
  Consumer<PostfixTemplateCheckedTreeNode> consumer=new Consumer<PostfixTemplateCheckedTreeNode>(){
    @Override public void consume(    PostfixTemplateCheckedTreeNode template){
      Set<String> disabledTemplates=langToDisabledTemplates.get(template.getLang());
      String key=template.getTemplate().getKey();
      if (disabledTemplates != null && disabledTemplates.contains(key)) {
        template.setChecked(false);
        return;
      }
      template.setChecked(true);
    }
  }
;
  visit(consumer);
  myModel.nodeStructureChanged(myRoot);
  treeState.applyTo(this);
  TreeUtil.expandAll(this);
}
