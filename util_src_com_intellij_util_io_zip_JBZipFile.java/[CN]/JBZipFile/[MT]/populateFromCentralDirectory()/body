{
  positionAtCentralDirectory();
  byte[] cfh=new byte[CFH_LEN];
  byte[] signatureBytes=new byte[WORD];
  archive.readFully(signatureBytes);
  long sig=ZipLong.getValue(signatureBytes);
  final long cfhSig=ZipLong.getValue(JBZipOutputStream.CFH_SIG);
  while (sig == cfhSig) {
    archive.readFully(cfh);
    int off=0;
    JBZipEntry ze=new JBZipEntry(this);
    int versionMadeBy=ZipShort.getValue(cfh,off);
    off+=SHORT;
    ze.setPlatform((versionMadeBy >> BYTE_SHIFT) & NIBLET_MASK);
    off+=WORD;
    ze.setMethod(ZipShort.getValue(cfh,off));
    off+=SHORT;
    long time=dosToJavaTime(ZipLong.getValue(cfh,off));
    ze.setTime(time);
    off+=WORD;
    ze.setCrc(ZipLong.getValue(cfh,off));
    off+=WORD;
    ze.setCompressedSize(ZipLong.getValue(cfh,off));
    off+=WORD;
    ze.setSize(ZipLong.getValue(cfh,off));
    off+=WORD;
    int fileNameLen=ZipShort.getValue(cfh,off);
    off+=SHORT;
    int extraLen=ZipShort.getValue(cfh,off);
    off+=SHORT;
    int commentLen=ZipShort.getValue(cfh,off);
    off+=SHORT;
    off+=SHORT;
    ze.setInternalAttributes(ZipShort.getValue(cfh,off));
    off+=SHORT;
    ze.setExternalAttributes(ZipLong.getValue(cfh,off));
    off+=WORD;
    byte[] fileName=new byte[fileNameLen];
    archive.readFully(fileName);
    ze.setName(getString(fileName));
    ze.setHeaderOffset(ZipLong.getValue(cfh,off));
    nameMap.put(ze.getName(),ze);
    entries.add(ze);
    if (extraLen > 0) {
      byte[] extra=new byte[extraLen];
      archive.readFully(extra);
      ze.setExtra(extra);
    }
    byte[] comment=new byte[commentLen];
    archive.readFully(comment);
    ze.setComment(getString(comment));
    archive.readFully(signatureBytes);
    sig=ZipLong.getValue(signatureBytes);
  }
}
