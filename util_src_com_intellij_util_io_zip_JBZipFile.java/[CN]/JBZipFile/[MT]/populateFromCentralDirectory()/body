{
  positionAtCentralDirectory();
  byte[] cfh=new byte[CFH_LEN];
  byte[] signatureBytes=new byte[WORD];
  archive.readFully(signatureBytes);
  long sig=ZipLong.getValue(signatureBytes);
  final long cfhSig=ZipLong.getValue(JBZipOutputStream.CFH_SIG);
  while (sig == cfhSig) {
    archive.readFully(cfh);
    int off=0;
    int versionMadeBy=ZipShort.getValue(cfh,off);
    off+=SHORT;
    final int platform=(versionMadeBy >> BYTE_SHIFT) & NIBLET_MASK;
    off+=WORD;
    final int method=ZipShort.getValue(cfh,off);
    off+=SHORT;
    long time=DosTime.dosToJavaTime(ZipLong.getValue(cfh,off));
    off+=WORD;
    final long crc=ZipLong.getValue(cfh,off);
    off+=WORD;
    final long compressedSize=ZipLong.getValue(cfh,off);
    off+=WORD;
    final long uncompressedSize=ZipLong.getValue(cfh,off);
    off+=WORD;
    int fileNameLen=ZipShort.getValue(cfh,off);
    off+=SHORT;
    int extraLen=ZipShort.getValue(cfh,off);
    off+=SHORT;
    int commentLen=ZipShort.getValue(cfh,off);
    off+=SHORT;
    off+=SHORT;
    final int internalAttributes=ZipShort.getValue(cfh,off);
    off+=SHORT;
    final long externalAttributes=ZipLong.getValue(cfh,off);
    off+=WORD;
    long localHeaderOffset=ZipLong.getValue(cfh,off);
    String name=getString(readBytes(fileNameLen));
    byte[] extra=readBytes(extraLen);
    String comment=getString(readBytes(commentLen));
    JBZipEntry ze=new JBZipEntry(this);
    ze.setName(name);
    ze.setHeaderOffset(localHeaderOffset);
    ze.setPlatform(platform);
    ze.setMethod(method);
    ze.setTime(time);
    ze.setCrc(crc);
    ze.setCompressedSize(compressedSize);
    ze.setSize(uncompressedSize);
    ze.setInternalAttributes(internalAttributes);
    ze.setExternalAttributes(externalAttributes);
    ze.setExtra(extra);
    ze.setComment(comment);
    nameMap.put(ze.getName(),ze);
    entries.add(ze);
    archive.readFully(signatureBytes);
    sig=ZipLong.getValue(signatureBytes);
  }
}
