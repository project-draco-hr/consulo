{
  final ActionManager actionManager=ActionManager.getInstance();
  @NonNls final String actionId="BROWSER_" + family.toString();
  AnAction action=actionManager.getAction(actionId);
  if (action == null) {
    action=new AnAction(family.getName(),XmlBundle.message("browser.description",family.getName()),getBrowserIcon(family)){
      public void actionPerformed(      final AnActionEvent e){
        final VirtualFile file=PlatformDataKeys.VIRTUAL_FILE.getData(e.getDataContext());
        if (file != null) {
          launchBrowser(family,file);
        }
      }
      @Override public void update(      final AnActionEvent e){
        final Editor editor=PlatformDataKeys.EDITOR.getData(e.getDataContext());
        boolean visible=false;
        if (editor != null) {
          final Document document=editor.getDocument();
          final Project project=editor.getProject();
          if (project != null) {
            final PsiDocumentManager manager=PsiDocumentManager.getInstance(project);
            final PsiFile psiFile=manager.getPsiFile(document);
            if (psiFile != null) {
              final Language language=psiFile.getLanguage();
              if (language instanceof HTMLLanguage || language instanceof XHTMLLanguage) {
                visible=true;
              }
            }
          }
        }
        visible&=myBrowserToPathMap.get(family).second.booleanValue();
        final Presentation presentation=e.getPresentation();
        presentation.setVisible(visible);
      }
    }
;
    actionManager.registerAction(actionId,action);
    AnAction actionGroup=actionManager.getAction("EditorContextBarMenu");
    if (actionGroup == null) {
      actionGroup=new DefaultActionGroup();
      actionManager.registerAction("EditorContextBarMenu",actionGroup);
    }
    if (actionGroup instanceof DefaultActionGroup) {
      ((DefaultActionGroup)actionGroup).add(action);
    }
  }
}
