{
  myMessageLabel.setForeground(Color.black);
  myMessageLabel.setVisible(true);
  myConfigureButton.setVisible(true);
  String message="";
switch (myButtonEnumModel.getSelected()) {
case DOWNLOAD:
    final String downloadPath=mySettings.getDirectoryForDownloadedLibrariesPath();
  final String basePath=mySettings.getBaseDirectoryForDownloadedFiles();
String path;
if (FileUtil.startsWith(downloadPath,basePath)) {
path=FileUtil.getRelativePath(basePath,downloadPath,File.separatorChar);
}
 else {
path=PathUtil.getFileName(downloadPath);
}
message=MessageFormat.format("{0} jar(s) will be downloaded into <b>{1}</b> directory <br>" + "{2} library <b>{3}</b> will be created",mySettings.getLibraryInfos().length,path,mySettings.getLibraryLevel(),mySettings.getLibraryName());
break;
case PICK_FILES:
NewLibraryEditor libraryEditor=mySettings.getLibraryEditor();
if (libraryEditor == null) {
myMessageLabel.setForeground(Color.red);
message="Press Configure button to add classes to the library";
}
 else {
message=MessageFormat.format("{0} level library <b>{1}</b>" + " with {2} file(s) will be created",mySettings.getLibraryLevel(),mySettings.getLibraryName(),libraryEditor.getFiles(OrderRootType.CLASSES).length);
}
break;
default :
myMessageLabel.setVisible(false);
myConfigureButton.setVisible(false);
}
myMessageLabel.setText("<html>" + message + "</html>");
}
