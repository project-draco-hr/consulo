{
  myLibraryCompositionSettings=libraryCompositionSettings;
  ActionListener listener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateState();
    }
  }
;
  myDownloadFromMavenButton.addActionListener(listener);
  myLocateOnDiskButton.addActionListener(listener);
  myDoNotCreateButton.addActionListener(listener);
  myConfigureButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      if (myLocateOnDiskButton.isSelected()) {
        EditLibraryDialog dialog=new EditLibraryDialog(myConfigureButton,myLibraryCompositionSettings);
        if (myLibraryCompositionSettings.getAddedJars().isEmpty()) {
          VirtualFile[] files=showFileChooser();
          Library.ModifiableModel modifiableModel=dialog.getLibrary().getModifiableModel();
          for (          VirtualFile file : files) {
            modifiableModel.addRoot(file,OrderRootType.CLASSES);
          }
          modifiableModel.commit();
        }
        showDialog(dialog);
      }
 else {
        DownloadingOptionsDialog dialog=new DownloadingOptionsDialog(myConfigureButton,myLibraryCompositionSettings);
        showDialog(dialog);
      }
      updateState();
    }
  }
);
  updateState();
}
