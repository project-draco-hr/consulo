{
  Thread current=Thread.currentThread();
  for (; ; ) {
    try {
      if (current.isInterrupted())       break;
      if (getWorkerThread() != current) {
        LOG.assertTrue(false,"Expected " + current + " instead of "+ getWorkerThread());
      }
      processEvent(myEvents.get());
    }
 catch (    EventQueueClosedException e) {
      break;
    }
catch (    RuntimeException e) {
      if (e.getCause() instanceof InterruptedException) {
        break;
      }
 else {
        LOG.error(e);
      }
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Thread " + this.toString() + " exited");
  }
}
