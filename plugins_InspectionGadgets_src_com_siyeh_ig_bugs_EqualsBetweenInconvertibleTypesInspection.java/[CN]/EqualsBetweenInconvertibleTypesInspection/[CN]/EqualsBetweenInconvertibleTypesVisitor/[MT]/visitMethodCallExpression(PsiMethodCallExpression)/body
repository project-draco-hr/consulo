{
  super.visitMethodCallExpression(expression);
  if (!MethodCallUtils.isEqualsCall(expression)) {
    return;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] args=argumentList.getExpressions();
  if (args.length != 1) {
    return;
  }
  final PsiExpression expression1=args[0];
  final PsiExpression expression2=methodExpression.getQualifierExpression();
  if (expression2 == null) {
    return;
  }
  final PsiType comparedType=expression1.getType();
  if (comparedType == null) {
    return;
  }
  final PsiType comparisonType=expression2.getType();
  if (comparisonType == null) {
    return;
  }
  final PsiType comparedTypeErasure=TypeConversionUtil.erasure(comparedType);
  final PsiType comparisonTypeErasure=TypeConversionUtil.erasure(comparisonType);
  if (comparedTypeErasure == null || comparisonTypeErasure == null || TypeConversionUtil.areTypesConvertible(comparedTypeErasure,comparisonTypeErasure)) {
    return;
  }
  registerMethodCallError(expression,comparedType,comparisonType);
}
