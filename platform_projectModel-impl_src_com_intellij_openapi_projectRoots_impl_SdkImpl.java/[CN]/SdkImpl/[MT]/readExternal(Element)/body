{
  myName=element.getChild(ELEMENT_NAME).getAttributeValue(ATTRIBUTE_VALUE);
  final Element typeChild=element.getChild(ELEMENT_TYPE);
  final String sdkTypeName=typeChild != null ? typeChild.getAttributeValue(ATTRIBUTE_VALUE) : null;
  if (sdkTypeName != null) {
    mySdkType=SdkTable.getInstance().getSdkTypeByName(sdkTypeName);
  }
  final Element version=element.getChild(ELEMENT_VERSION);
  if (version != null) {
    setVersionString(version.getAttributeValue(ATTRIBUTE_VALUE));
  }
 else {
    myVersionDefined=false;
  }
  if (element.getAttribute(ELEMENT_VERSION) == null || !"2".equals(element.getAttributeValue(ELEMENT_VERSION))) {
    myRootContainer.startChange();
    myRootContainer.readOldVersion(element.getChild(ELEMENT_ROOTS));
    final List children=element.getChild(ELEMENT_ROOTS).getChildren(ELEMENT_ROOT);
    for (    final Object aChildren : children) {
      Element root=(Element)aChildren;
      for (      final Object o : root.getChildren(ELEMENT_PROPERTY)) {
        Element prop=(Element)o;
        if (ELEMENT_TYPE.equals(prop.getAttributeValue(ELEMENT_NAME)) && VALUE_JDKHOME.equals(prop.getAttributeValue(ATTRIBUTE_VALUE))) {
          myHomePath=VirtualFileManager.extractPath(root.getAttributeValue(ATTRIBUTE_FILE));
        }
      }
    }
    myRootContainer.finishChange();
  }
 else {
    myHomePath=element.getChild(ELEMENT_HOMEPATH).getAttributeValue(ATTRIBUTE_VALUE);
    myRootContainer.readExternal(element.getChild(ELEMENT_ROOTS));
  }
  final Element additional=element.getChild(ELEMENT_ADDITIONAL);
  if (additional != null) {
    SdkImpl.LOGGER.assertTrue(mySdkType != null);
    myAdditionalData=mySdkType.loadAdditionalData(this,additional);
  }
 else {
    myAdditionalData=null;
  }
}
