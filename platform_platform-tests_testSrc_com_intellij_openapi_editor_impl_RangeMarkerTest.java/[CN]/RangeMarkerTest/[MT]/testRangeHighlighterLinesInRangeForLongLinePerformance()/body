{
  final int N=50000;
  Document document=EditorFactory.getInstance().createDocument(StringUtil.repeatSymbol('x',2 * N));
  final MarkupModelEx markupModel=(MarkupModelEx)DocumentMarkupModel.forDocument(document,ourProject,true);
  for (int i=0; i < N - 1; i++) {
    markupModel.addRangeHighlighter(2 * i,2 * i + 1,0,null,HighlighterTargetArea.EXACT_RANGE);
  }
  markupModel.addRangeHighlighter(N / 2,N / 2 + 1,0,null,HighlighterTargetArea.LINES_IN_RANGE);
  PlatformTestUtil.startPerformanceTest("slow highlighters lookup",(int)(N * Math.log(N) / 1000),new ThrowableRunnable(){
    @Override public void run(){
      List<RangeHighlighterEx> list=new ArrayList<RangeHighlighterEx>();
      CommonProcessors.CollectProcessor<RangeHighlighterEx> coll=new CommonProcessors.CollectProcessor<RangeHighlighterEx>(list);
      for (int i=0; i < N - 1; i++) {
        list.clear();
        markupModel.processRangeHighlightersOverlappingWith(2 * i,2 * i + 1,coll);
        assertEquals(2,list.size());
      }
    }
  }
).assertTiming();
}
