{
  if (getTestName(false).contains("NoVerify")) {
    super.runTest();
    return;
  }
  boolean oldVerify=RedBlackTree.VERIFY;
  RedBlackTree.VERIFY=!isPerformanceTest();
  final Throwable[] ex={null};
  try {
    if (getTestName(false).contains("NoCommand")) {
      super.runTest();
      return;
    }
    WriteCommandAction.runWriteCommandAction(getProject(),new ThrowableComputable<Void,Throwable>(){
      @Override public Void compute() throws Throwable {
        RangeMarkerTest.super.runTest();
        return null;
      }
    }
);
  }
  finally {
    RedBlackTree.VERIFY=oldVerify;
  }
  if (ex[0] != null)   throw ex[0];
}
