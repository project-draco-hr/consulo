{
  final boolean childOnNewLine=child.getWhiteSpace().containsLineFeeds();
  IndentData childIndent=childOnNewLine || getWhiteSpace().containsLineFeeds() ? getIndent(options,child,tokenBlock) : new IndentData(0);
  if (childOnNewLine && getIndent().isAbsolute()) {
    myCanUseFirstChildIndentAsBlockIndent=false;
    AbstractBlockWrapper current=this;
    while (current != null && current.getStartOffset() == getStartOffset()) {
      current.myCanUseFirstChildIndentAsBlockIndent=false;
      current=current.myParent;
    }
    return childIndent;
  }
  if (child.getStartOffset() == getStartOffset()) {
    myCanUseFirstChildIndentAsBlockIndent=myCanUseFirstChildIndentAsBlockIndent && child.myCanUseFirstChildIndentAsBlockIndent && childIndent.isEmpty();
  }
  if (getStartOffset() == tokenBlock.getStartOffset()) {
    if (myParent == null) {
      return childIndent;
    }
 else {
      return childIndent.add(myParent.getChildOffset(this,tokenBlock,options));
    }
  }
 else   if (!getWhiteSpace().containsLineFeeds()) {
    return childIndent.add(myParent.getChildOffset(this,tokenBlock,options));
  }
 else {
    if (myParent == null)     return childIndent.add(getWhiteSpace());
    if (myParent.getIndent().isAbsolute())     return childIndent.add(myParent.myParent.getChildOffset(myParent,tokenBlock,options));
    if (myCanUseFirstChildIndentAsBlockIndent) {
      return childIndent.add(getWhiteSpace());
    }
 else {
      return childIndent.add(myParent.getChildOffset(this,tokenBlock,options));
    }
  }
}
