{
  final PsiElement element;
  AbstractTagInjection result;
  if (host instanceof XmlText) {
    final XmlTag xmlTag=((XmlText)host).getParentTag();
    if (xmlTag == null)     return null;
    element=xmlTag;
    result=new XmlTagInjection().copyFrom(injection);
  }
 else   if (host instanceof XmlAttributeValue) {
    final PsiElement parent=host.getParent();
    if (!(parent instanceof XmlAttribute))     return null;
    element=parent;
    result=new XmlAttributeInjection().copyFrom(injection);
  }
 else {
    result=null;
    element=null;
  }
  final Pattern pattern=Pattern.compile("withLocalName[^\"]*\"([^\"]*)\"\\)+(?:\\.withNamespace[^\"]*\"([^\"]*)\")?");
  for (  InjectionPlace place : injection.getInjectionPlaces()) {
    if (element == null || place.getElementPattern() != null && place.getElementPattern().accepts(element)) {
      final Matcher matcher=pattern.matcher(place.getText());
      if (matcher.find()) {
        final Pair<String,String> pair1=Pair.create(matcher.group(1),matcher.group(2));
        final Pair<String,String> pair2;
        if (matcher.find(Math.max(matcher.end(1),matcher.end(2)))) {
          pair2=Pair.create(matcher.group(1),matcher.group(2));
        }
 else         pair2=null;
        if (result == null) {
          if (place.getText().startsWith("xmlTag"))           result=new XmlTagInjection().copyFrom(injection);
 else           if (place.getText().startsWith("xmlAttribute"))           result=new XmlAttributeInjection().copyFrom(injection);
 else           continue;
        }
        if (result instanceof XmlAttributeInjection) {
          ((XmlAttributeInjection)result).setAttributeName(pair1.first);
          ((XmlAttributeInjection)result).setAttributeNamespace(StringUtil.notNullize(pair1.second));
          if (pair2 != null) {
            result.setTagName(pair2.first);
            result.setTagNamespace(StringUtil.notNullize(pair2.second));
          }
        }
 else         if (result instanceof XmlTagInjection) {
          result.setTagName(pair1.first);
          result.setTagNamespace(StringUtil.notNullize(pair1.second));
        }
 else         continue;
        break;
      }
    }
  }
  if (result != null)   result.getInjectionPlaces().clear();
  return result;
}
