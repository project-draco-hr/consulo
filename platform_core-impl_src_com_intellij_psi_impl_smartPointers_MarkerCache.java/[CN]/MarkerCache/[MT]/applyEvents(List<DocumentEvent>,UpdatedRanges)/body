{
  FrozenDocument frozen=struct.myResultDocument;
  ManualRangeMarker[] resultMarkers=struct.myMarkers.clone();
  for (  DocumentEvent event : events) {
    final FrozenDocument before=frozen;
    final DocumentEvent corrected;
    if ((event instanceof RetargetRangeMarkers)) {
      RetargetRangeMarkers retarget=(RetargetRangeMarkers)event;
      corrected=new RetargetRangeMarkers(frozen,retarget.getStartOffset(),retarget.getEndOffset(),retarget.getMoveDestinationOffset());
    }
 else {
      frozen=frozen.applyEvent(event,0);
      corrected=new DocumentEventImpl(frozen,event.getOffset(),event.getOldFragment(),event.getNewFragment(),event.getOldTimeStamp(),event.isWholeTextReplaced(),((DocumentEventImpl)event).getInitialStartOffset(),((DocumentEventImpl)event).getInitialOldLength());
    }
    int i=0;
    while (i < resultMarkers.length) {
      ManualRangeMarker currentRange=resultMarkers[i];
      int sameMarkersEnd=i + 1;
      while (sameMarkersEnd < resultMarkers.length && resultMarkers[sameMarkersEnd] == currentRange) {
        sameMarkersEnd++;
      }
      ManualRangeMarker updatedRange=currentRange == null ? null : currentRange.getUpdatedRange(corrected,before);
      while (i < sameMarkersEnd) {
        resultMarkers[i]=updatedRange;
        i++;
      }
    }
  }
  return new UpdatedRanges(struct.myEventCount + events.size(),frozen,struct.mySortedInfos,resultMarkers);
}
