{
  BalloonBuilder builder=JBPopupFactory.getInstance().createHtmlTextBalloonBuilder("" + "Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend " + "Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend "+ "Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend "+ "Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend "+ "Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend Load up on guns bring your friends it's fun to loose and to pretend "+ "",MessageType.INFO,null);
  JFrame wnd=(JFrame)KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow();
  JRootPane ro=wnd.getRootPane();
  Point point=new Point(ro.getWidth() - 200,ro.getHeight() - 200);
  builder.createBalloon().show(new RelativePoint(ro,point),Balloon.Position.above);
  if (true)   return;
  final Project p=PlatformDataKeys.PROJECT.getData(e.getDataContext());
  if (p != null) {
    ToolWindowManager.getInstance(p).notifyByBalloon("TODO",MessageType.INFO,"Started. <a href=\"#a\">Click me!</a>",null,new HyperlinkListener(){
      public void hyperlinkUpdate(      final HyperlinkEvent e){
        System.out.println(e);
      }
    }
);
  }
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  new Task.Backgroundable(project,"Test Process",true,PerformInBackgroundOption.DEAF){
    public void run(    @NotNull final ProgressIndicator indicator){
      try {
        indicator.setText("welcome!");
        Thread.currentThread().sleep(6000);
        countTo(1000,new Count(){
          public void onCount(          int each){
            indicator.setText("Found: " + each / 20 + 1);
            if (each / 10.0 == Math.round(each / 10.0)) {
              indicator.setText(null);
            }
            indicator.setFraction(each / 1000.0);
            try {
              Thread.currentThread().sleep(100);
            }
 catch (            InterruptedException e1) {
              e1.printStackTrace();
            }
            indicator.checkCanceled();
            indicator.setText2("bla bla bla");
          }
        }
);
        indicator.stop();
      }
 catch (      ProcessCanceledException e1) {
        try {
          Thread.currentThread().sleep(2000);
          indicator.stop();
        }
 catch (        InterruptedException e2) {
          e2.printStackTrace();
        }
        return;
      }
catch (      InterruptedException e1) {
        e1.printStackTrace();
      }
    }
  }
.queue();
}
