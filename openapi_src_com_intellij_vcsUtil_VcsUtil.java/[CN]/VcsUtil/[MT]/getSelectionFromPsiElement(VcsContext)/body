{
  PsiElement psiElement=context.getPsiElement();
  if (psiElement == null) {
    return null;
  }
  if (!psiElement.isValid()) {
    return null;
  }
  if (psiElement instanceof PsiCompiledElement) {
    return null;
  }
  final String actionName;
  if (psiElement instanceof PsiClass) {
    actionName=LocalHistoryBundle.message("action.name.show.history.for.class");
  }
 else   if (psiElement instanceof PsiField) {
    actionName=LocalHistoryBundle.message("action.name.show.history.for.field");
  }
 else   if (psiElement instanceof PsiMethod) {
    actionName=LocalHistoryBundle.message("action.name.show.history.for.method");
  }
 else   if (psiElement instanceof XmlTag) {
    actionName=LocalHistoryBundle.message("action.name.show.history.for.tag");
  }
 else   if (psiElement instanceof XmlText) {
    actionName=LocalHistoryBundle.message("action.name.show.history.for.text");
  }
 else   if (psiElement instanceof PsiCodeBlock) {
    actionName=LocalHistoryBundle.message("action.name.show.history.for.code.block");
  }
 else   if (psiElement instanceof PsiStatement) {
    actionName=LocalHistoryBundle.message("action.name.show.history.for.statement");
  }
 else {
    return null;
  }
  TextRange textRange=psiElement.getTextRange();
  if (textRange == null) {
    return null;
  }
  VirtualFile virtualFile=psiElement.getContainingFile().getVirtualFile();
  if (virtualFile == null) {
    return null;
  }
  if (!virtualFile.isValid()) {
    return null;
  }
  Document document=FileDocumentManager.getInstance().getDocument(virtualFile);
  return new VcsSelection(document,textRange,actionName);
}
