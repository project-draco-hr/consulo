{
  final Type type=getType();
  final PsiClass psiClass=getPsiClass();
  if (psiClass != null && type != null) {
    if (type == Type.DECLARED_FIELD) {
      return psiClass.getFields();
    }
 else     if (type == Type.FIELD) {
      final List<PsiField> fields=new ArrayList<PsiField>();
      for (      PsiField field : psiClass.getFields()) {
        if (isPublic(field)) {
          fields.add(field);
        }
      }
      return fields.toArray();
    }
 else     if (type == Type.DECLARED_METHOD || type == Type.METHOD) {
      final List<LookupElementBuilder> elements=new ArrayList<LookupElementBuilder>();
      for (      PsiMethod method : psiClass.getMethods()) {
        if (type == Type.DECLARED_METHOD || isPublic(method)) {
          elements.add(JavaLookupElementBuilder.forMethod(method,PsiSubstitutor.EMPTY).setInsertHandler(this));
        }
      }
      return elements.toArray();
    }
  }
  return EMPTY_ARRAY;
}
