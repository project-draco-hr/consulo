'command to send changesets as (a series of) patch emails\n\nThe series is started off with a "[PATCH 0 of N]" introduction, which\ndescribes the series as a whole.\n\nEach patch email has a Subject line of "[PATCH M of N] ...", using the\nfirst line of the changeset description as the subject text. The\nmessage contains two or three body parts:\n\n- The changeset description.\n- [Optional] The result of running diffstat on the patch.\n- The patch itself, as generated by "hg export".\n\nEach message refers to the first in the series using the In-Reply-To\nand References headers, so they will show up as a sequence in threaded\nmail and news readers, and in mail archives.\n\nWith the -d/--diffstat option, you will be prompted for each changeset\nwith a diffstat summary and the changeset summary, so you can be sure\nyou are sending the right changes.\n\nTo configure other defaults, add a section like this to your hgrc\nfile::\n\n  [email]\n  from = My Name <my@email>\n  to = recipient1, recipient2, ...\n  cc = cc1, cc2, ...\n  bcc = bcc1, bcc2, ...\n\nUse ``[patchbomb]`` as configuration section name if you need to\noverride global ``[email]`` address settings.\n\nThen you can use the "hg email" command to mail a series of changesets\nas a patchbomb.\n\nTo avoid sending patches prematurely, it is a good idea to first run\nthe "email" command with the "-n" option (test only). You will be\nprompted for an email recipient address, a subject and an introductory\nmessage describing the patches of your patchbomb. Then when all is\ndone, patchbomb messages are displayed. If the PAGER environment\nvariable is set, your pager will be fired up once for each patchbomb\nmessage, so you can verify everything is alright.\n\nThe -m/--mbox option is also very useful. Instead of previewing each\npatchbomb message in a pager or sending the messages directly, it will\ncreate a UNIX mailbox file with the patch emails. This mailbox file\ncan be previewed with any mail user agent which supports UNIX mbox\nfiles, e.g. with mutt::\n\n  % mutt -R -f mbox\n\nWhen you are previewing the patchbomb messages, you can use ``formail``\n(a utility that is commonly installed as part of the procmail\npackage), to send each message out::\n\n  % formail -s sendmail -bm -t < mbox\n\nThat should be all. Now your patchbomb is on its way out.\n\nYou can also either configure the method option in the email section\nto be a sendmail compatible mailer or fill out the [smtp] section so\nthat the patchbomb extension can automatically send patchbombs\ndirectly from the commandline. See the [email] and [smtp] sections in\nhgrc(5) for details.\n'
import os, errno, socket, tempfile, cStringIO, time
import email.MIMEMultipart, email.MIMEBase
import email.Utils, email.Encoders, email.Generator
from mercurial import cmdutil, commands, hg, mail, patch, util
from mercurial.i18n import _
from mercurial.node import bin
emailopts = [('a', 'attach', None, _('send patches as attachments')), ('i', 'inline', None, _('send patches as inline attachments')), ('', 'bcc', [], _('email addresses of blind carbon copy recipients')), ('c', 'cc', [], _('email addresses of copy recipients')), ('d', 'diffstat', None, _('add diffstat output to messages')), ('', 'date', '', _('use the given date as the sending date')), ('', 'desc', '', _('use the given file as the series description')), ('f', 'from', '', _('email address of sender')), ('n', 'test', None, _('print messages that would be sent')), ('m', 'mbox', '', _('write messages to mbox file instead of sending them')), ('s', 'subject', '', _('subject of first message (intro or single patch)')), ('', 'in-reply-to', '', _('message identifier to reply to')), ('', 'flag', [], _('flags to add in subject prefixes')), ('t', 'to', [], _('email addresses of recipients'))]
cmdtable = {'email': (patchbomb, (([('g', 'git', None, _('use git extended diff format')), ('', 'plain', None, _('omit hg patch header')), ('o', 'outgoing', None, _('send changes not found in the target repository')), ('b', 'bundle', None, _('send changes not in target as a binary bundle')), ('', 'bundlename', 'bundle', _('name of the bundle attachment file')), ('r', 'rev', [], _('a revision to send')), ('', 'force', None, _('run even when remote repository is unrelated (with -b/--bundle)')), ('', 'base', [], _('a base changeset to specify instead of a destination (with -b/--bundle)')), ('', 'intro', None, _('send an introduction email for a single patch'))] + emailopts) + commands.remoteopts), _('hg email [OPTION]... [DEST]...')), }
