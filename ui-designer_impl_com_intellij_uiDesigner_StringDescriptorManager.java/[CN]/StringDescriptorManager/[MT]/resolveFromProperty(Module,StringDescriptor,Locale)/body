{
  String propFileName=descriptor.getDottedBundleName();
  Pair<Locale,String> cacheKey=new Pair<Locale,String>(locale,propFileName);
  SoftReference<PropertiesFile> propertiesFileRef=myPropertiesFileCache.get(cacheKey);
  PropertiesFile propertiesFile=(propertiesFileRef == null) ? null : propertiesFileRef.get();
  if (propertiesFile == null || !propertiesFile.isValid()) {
    propertiesFile=PropertiesUtil.getPropertiesFile(propFileName,module,locale);
    myPropertiesFileCache.put(cacheKey,new SoftReference<PropertiesFile>(propertiesFile));
  }
  if (propertiesFile != null) {
    final Property propertyByKey=propertiesFile.findPropertyByKey(descriptor.getKey());
    if (propertyByKey != null) {
      final String value=propertyByKey.getValue();
      if (value != null) {
        return value;
      }
    }
  }
  return "[" + descriptor.getKey() + " / "+ descriptor.getBundleName()+ "]";
}
