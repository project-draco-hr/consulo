{
  if (ApplicationManager.getApplication().isUnitTestMode())   return null;
  Document document=editor.getDocument();
  int startOffset=range.getStartOffset();
  int startLine=document.getLineNumber(startOffset);
  CharSequence text=document.getCharsSequence();
  boolean incrementLine=false;
  for (int offset=startOffset, max=Math.min(range.getEndOffset(),text.length()); offset < max; offset++) {
    char c=text.charAt(offset);
    incrementLine=StringUtil.isWhiteSpace(c);
    if (!incrementLine || c == '\n') {
      break;
    }
  }
  if (incrementLine) {
    startLine++;
  }
  int endLine=Math.min(document.getLineNumber(range.getEndOffset()) + 1,document.getLineCount() - 1);
  if (startLine >= endLine)   return null;
  EditorFragmentComponent fragmentComponent=createEditorFragmentComponent(editor,startLine,endLine,showFolding,true);
  if (showUpward) {
    y-=fragmentComponent.getPreferredSize().height + 10;
    y=Math.max(0,y);
  }
  final JComponent c=editor.getComponent();
  x=SwingUtilities.convertPoint(c,new Point(-3,0),UIUtil.getRootPane(c)).x;
  Point p=new Point(x,y);
  LightweightHint hint=new MyComponentHint(fragmentComponent);
  HintManagerImpl.getInstanceImpl().showEditorHint(hint,editor,p,(hideByAnyKey ? HintManager.HIDE_BY_ANY_KEY : 0) | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_MOUSEOVER,0,false,new HintHint(editor,p));
  return hint;
}
