{
  if (ApplicationManager.getApplication().isUnitTestMode())   return null;
  int startLine=editor.offsetToLogicalPosition(range.getStartOffset()).line;
  int endLine=Math.min(editor.offsetToLogicalPosition(range.getEndOffset()).line + 1,editor.getDocument().getLineCount() - 1);
  if (editor.logicalPositionToXY(new LogicalPosition(startLine,0)).y >= editor.logicalPositionToXY(new LogicalPosition(endLine,0)).y)   return null;
  EditorFragmentComponent fragmentComponent=createEditorFragmentComponent(editor,startLine,endLine,showFolding,true);
  if (showUpward) {
    y-=fragmentComponent.getPreferredSize().height + 10;
    y=Math.max(0,y);
  }
  Point p=new Point(x,y);
  LightweightHint hint=new MyComponentHint(fragmentComponent);
  HintManagerImpl.getInstanceImpl().showEditorHint(hint,editor,p,(hideByAnyKey ? HintManagerImpl.HIDE_BY_ANY_KEY : 0) | HintManagerImpl.HIDE_BY_TEXT_CHANGE,0,false);
  return hint;
}
