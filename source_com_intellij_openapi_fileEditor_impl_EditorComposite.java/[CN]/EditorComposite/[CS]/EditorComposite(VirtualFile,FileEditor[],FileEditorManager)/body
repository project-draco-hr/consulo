{
  if (file == null) {
    throw new IllegalArgumentException("file cannot be null");
  }
  if (editors == null) {
    throw new IllegalArgumentException("editors cannot be null");
  }
  if (fileEditorManager == null) {
    throw new IllegalArgumentException("fileEditorManager cannot be null");
  }
  myFile=file;
  myEditors=editors;
  myFileEditorManager=fileEditorManager;
  myInitialFileTimeStamp=myFile.getTimeStamp();
  myInitialFileModificationStamp=myFile.getModificationStamp();
  if (editors.length > 1) {
    final TabbedPaneWrapper wrapper=new TabbedPaneWrapper(SwingConstants.BOTTOM);
    myTabbedPaneWrapper=wrapper;
    myComponent=new MyComponent(wrapper.getComponent()){
      public void requestFocus(){
        wrapper.getComponent().requestFocus();
      }
      public boolean requestDefaultFocus(){
        return wrapper.getComponent().requestDefaultFocus();
      }
    }
;
    for (    FileEditor editor : editors) {
      wrapper.addTab(editor.getName(),editor.getComponent());
    }
    myTabbedPaneWrapper.addChangeListener(new MyChangeListener());
  }
 else   if (editors.length == 1) {
    myTabbedPaneWrapper=null;
    myComponent=new MyComponent(editors[0].getComponent()){
      public void requestFocus(){
        JComponent component=editors[0].getPreferredFocusedComponent();
        LOG.assertTrue(component != null);
        component.requestFocus();
      }
      public boolean requestDefaultFocus(){
        JComponent component=editors[0].getPreferredFocusedComponent();
        LOG.assertTrue(component != null);
        return component.requestDefaultFocus();
      }
    }
;
  }
 else {
    throw new IllegalArgumentException("editors array cannot be empty");
  }
  mySelectedEditor=editors[0];
  myFocusWatcher=new FocusWatcher();
  myFocusWatcher.install(myComponent);
}
