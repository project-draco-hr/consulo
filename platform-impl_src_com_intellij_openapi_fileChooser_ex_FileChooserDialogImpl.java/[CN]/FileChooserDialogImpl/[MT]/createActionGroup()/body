{
  final DefaultActionGroup group=new DefaultActionGroup();
  addToGroup(group,new GotoHomeAction(myFileSystemTree));
  addToGroup(group,new GotoProjectDirectory(myFileSystemTree));
  addToGroup(group,new GotoModuleDirectory(myFileSystemTree,myChooserDescriptor.getContextModule()));
  group.addSeparator();
  if (myChooserDescriptor.getNewFileType() != null) {
    addToGroup(group,new NewFileAction(myFileSystemTree,myChooserDescriptor.getNewFileType(),myChooserDescriptor.getNewFileTemplateText()));
  }
  addToGroup(group,new NewFolderAction(myFileSystemTree));
  addToGroup(group,new FileDeleteAction(myFileSystemTree));
  group.addSeparator();
  final SynchronizeAction syncAction=new SynchronizeAction(){
    public void actionPerformed(    final AnActionEvent e){
      VirtualFileManager.getInstance().refresh(false);
    }
  }
;
  AnAction original=ActionManager.getInstance().getAction(IdeActions.ACTION_SYNCHRONIZE);
  syncAction.copyFrom(original);
  final JTree tree=myFileSystemTree.getTree();
  syncAction.registerCustomShortcutSet(original.getShortcutSet(),tree);
  group.add(syncAction);
  myDisposables.add(new Disposable(){
    public void dispose(){
      syncAction.unregisterCustomShortcutSet(tree);
    }
  }
);
  group.addSeparator();
  addToGroup(group,new MyShowHiddensAction());
  return group;
}
