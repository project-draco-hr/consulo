{
  UsageTarget[] usageTargets=(UsageTarget[])targets;
  PsiElement[] elements=getPsiElements(usageTargets);
  if (elements.length == 0)   return;
  final FindUsagesHandler handler=getNewFindUsagesHandler(elements[0],false);
  if (handler == null) {
    return;
  }
  final AbstractFindUsagesDialog dialog=handler.getFindUsagesDialog(false,shouldOpenInNewTab(),mustOpenInNewTab());
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  setOpenInNewTab(dialog.isShowInSeparateWindow());
  FindUsagesOptions findUsagesOptions=dialog.calcFindUsagesOptions();
  clearFindingNextUsageInFile();
  LOG.assertTrue(handler.getPsiElement().isValid());
  PsiElement[] primaryElements=handler.getPrimaryElements();
  checkNotNull(primaryElements,handler,"getPrimaryElements()");
  PsiElement[] secondaryElements=handler.getSecondaryElements();
  checkNotNull(secondaryElements,handler,"getSecondaryElements()");
  UsageInfoToUsageConverter.TargetElementsDescriptor descriptor=new UsageInfoToUsageConverter.TargetElementsDescriptor(primaryElements,secondaryElements);
  findUsages(descriptor,handler,dialog.isSkipResultsWhenOneUsage(),dialog.isShowInSeparateWindow(),findUsagesOptions);
}
