{
  FindUsagesHandler handler=getFindUsagesHandler(element,true);
  if (handler == null)   return false;
  UsageInfoToUsageConverter.TargetElementsDescriptor descriptor=new UsageInfoToUsageConverter.TargetElementsDescriptor(element);
  FindUsagesOptions findUsagesOptions=handler.getFindUsagesOptions().clone();
  findUsagesOptions.searchScope=scope;
  UsageSearcher usageSearcher=createUsageSearcher(descriptor,handler,findUsagesOptions,null);
  final AtomicBoolean used=new AtomicBoolean();
  usageSearcher.generate(new Processor<Usage>(){
    public boolean process(    final Usage usage){
      used.set(true);
      return false;
    }
  }
);
  return used.get();
}
