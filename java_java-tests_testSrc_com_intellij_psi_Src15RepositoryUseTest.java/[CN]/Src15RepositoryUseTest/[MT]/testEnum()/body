{
  setupLoadingFilter();
  final PsiClass enumClass=myJavaFacade.findClass("enums.OurEnum",GlobalSearchScope.moduleScope(myModule));
  assertNotNull(enumClass);
  assertTrue(enumClass.isEnum());
  final PsiClass superClass=enumClass.getSuperClass();
  assertNotNull(superClass);
  assertEquals("java.lang.Enum",superClass.getQualifiedName());
  assertTrue(enumClass.isInheritor(superClass,false));
  final PsiClassType[] superTypes=enumClass.getSuperTypes();
  assertEquals(1,superTypes.length);
  assertEquals("java.lang.Enum<enums.OurEnum>",superTypes[0].getCanonicalText());
  final PsiClass[] supers=enumClass.getSupers();
  assertEquals(1,supers.length);
  assertEquals("java.lang.Enum",supers[0].getQualifiedName());
  final PsiClassType[] extendsListTypes=enumClass.getExtendsListTypes();
  assertEquals(1,extendsListTypes.length);
  assertEquals("java.lang.Enum<enums.OurEnum>",extendsListTypes[0].getCanonicalText());
  final PsiSubstitutor superClassSubstitutor=TypeConversionUtil.getSuperClassSubstitutor(superClass,enumClass,PsiSubstitutor.EMPTY);
  assertEquals("java.lang.Enum<enums.OurEnum>",myJavaFacade.getElementFactory().createType(superClass,superClassSubstitutor).getCanonicalText());
  teardownLoadingFilter();
}
