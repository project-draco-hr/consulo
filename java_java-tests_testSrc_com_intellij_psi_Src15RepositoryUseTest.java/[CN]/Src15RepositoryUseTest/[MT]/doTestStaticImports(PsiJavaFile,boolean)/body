{
  final PsiImportList importList=javaFile.getImportList();
  final PsiImportStatementBase[] allImportStatements=importList.getAllImportStatements();
  assertEquals(6,allImportStatements.length);
  final PsiImportStatement[] importStatements=importList.getImportStatements();
  assertEquals(2,importStatements.length);
  final PsiImportStaticStatement[] importStaticStatements=importList.getImportStaticStatements();
  assertEquals(4,importStaticStatements.length);
  assertFalse(importStatements[0].isOnDemand());
  assertTrue(importStaticStatements[0].isOnDemand());
  assertFalse(importStatements[0].isOnDemand());
  assertTrue(importStaticStatements[1].isOnDemand());
  assertFalse(importStaticStatements[2].isOnDemand());
  assertFalse(importStaticStatements[3].isOnDemand());
  assertEquals("sort",importStaticStatements[2].getReferenceName());
  assertEquals("sort",importStaticStatements[3].getReferenceName());
  final PsiImportStaticStatement classReference1=importStaticStatements[1];
  final PsiElement element1=classReference1.resolveTargetClass();
  assertNotNull(element1);
  assertTrue(element1 instanceof PsiClass);
  assertEquals("java.util.Arrays",((PsiClass)element1).getQualifiedName());
  final PsiImportStaticStatement classReference3=importStaticStatements[3];
  final PsiElement element3=classReference3.resolveTargetClass();
  assertNotNull(element3);
  assertTrue(element3 instanceof PsiClass);
  assertEquals("java.util.Arrays",((PsiClass)element3).getQualifiedName());
  if (okToLoadTree) {
    assertEquals("java.util.Collections",importStaticStatements[0].getImportReference().getText());
    assertEquals("java.util.Arrays",importStaticStatements[1].getImportReference().getText());
    assertEquals("java.util.Collections.sort",importStaticStatements[2].getImportReference().getText());
    assertEquals("java.util.Arrays.sort",importStaticStatements[3].getImportReference().getText());
  }
}
