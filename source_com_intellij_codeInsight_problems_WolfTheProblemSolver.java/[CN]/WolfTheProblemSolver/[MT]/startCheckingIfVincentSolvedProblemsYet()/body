{
synchronized (this) {
    if (!myProblemsAreVisible) {
      myRestartOnBecomeVisible=true;
      return;
    }
  }
  long psiModificationCount=PsiManager.getInstance(myProject).getModificationTracker().getModificationCount();
  if (psiModificationCount == myPsiModificationCount)   return;
  myPsiModificationCount=psiModificationCount;
  myDaemonStopped=false;
  List<VirtualFile> toCheck;
synchronized (myProblemFiles) {
    toCheck=new ArrayList<VirtualFile>(myProblemFiles);
  }
  try {
    for (    VirtualFile virtualFile : toCheck) {
      if (myProgress.isCanceled())       break;
      orderVincentToCleanCar(virtualFile);
    }
  }
 catch (  ProcessCanceledException e) {
  }
}
