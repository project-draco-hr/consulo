{
  myProject=project;
  myProgress=new ProgressIndicatorBase(){
    public boolean isCanceled(){
      return super.isCanceled() || myDaemonStopped;
    }
    public String toString(){
      return "Progress: canceled=" + isCanceled() + "; mycanceled="+ myDaemonStopped;
    }
  }
;
  toolWindowManagerEx.addToolWindowManagerListener(new ToolWindowManagerAdapter(){
    public void stateChanged(){
      ToolWindow window=ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.MESSAGES_WINDOW);
      if (window == null)       return;
synchronized (WolfTheProblemSolver.this) {
        boolean visible=window.isVisible();
        if (myProblemsAreVisible != visible) {
          if (visible && myRestartOnBecomeVisible) {
            restartChecking();
            myRestartOnBecomeVisible=false;
          }
          myProblemsAreVisible=visible;
        }
      }
    }
  }
);
}
