{
  try {
    commit();
    myFirstErrorOffset=Integer.MAX_VALUE;
    PsiElement atCaret=getStatementAtCaret();
    if (atCaret == null) {
      if (!new CommentBreakerEnterProcessor().doEnter(myEditor,myPsiFile,false)) {
        plainEnter();
      }
      return;
    }
    List<PsiElement> queue=new ArrayList<PsiElement>();
    collectAllElements(atCaret,queue,true);
    queue.add(atCaret);
    for (int i=0; i < queue.size(); i++) {
      PsiElement psiElement=queue.get(i);
      if (StdFileTypes.JAVA.getLanguage().equals(psiElement.getLanguage())) {
        for (int j=0; j < ourFixers.size(); j++) {
          Fixer fixer=ourFixers.get(j);
          fixer.apply(myEditor,this,psiElement);
          if (myEditor.getUserData(LookupImpl.LOOKUP_IN_EDITOR_KEY) != null)           return;
          if (isUncommited() || !psiElement.isValid()) {
            moveCaretInsideBracesIfAny();
            process();
            return;
          }
        }
      }
    }
    doEnter(atCaret);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
