{
  return new MoveDirectoryWithClassesProcessor(project,dirsToRename,null,searchInComments,searchInNonJavaFiles,false,null){
    @Override public TargetDirectoryWrapper getTargetDirectory(    final PsiDirectory dir){
      return new TargetDirectoryWrapper(dir.getParentDirectory(),StringUtil.getShortName(newQName));
    }
    @Override protected String getTargetName(){
      return newQName;
    }
    @Override protected String getCommandName(){
      return RefactoringBundle.message(dirsToRename.length == 1 ? "rename.directory.command.name" : "rename.directories.command.name");
    }
  }
;
}
