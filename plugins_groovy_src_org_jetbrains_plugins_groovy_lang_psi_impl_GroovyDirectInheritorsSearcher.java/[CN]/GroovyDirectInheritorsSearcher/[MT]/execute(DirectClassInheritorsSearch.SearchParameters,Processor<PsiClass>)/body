{
  final PsiClass clazz=queryParameters.getClassToProcess();
  final SearchScope scope=queryParameters.getScope();
  if (scope instanceof GlobalSearchScope) {
    final PsiClass[] candidates=ApplicationManager.getApplication().runReadAction(new Computable<PsiClass[]>(){
      public PsiClass[] compute(){
        if (!clazz.isValid())         return PsiClass.EMPTY_ARRAY;
        return getDeriverCandidates(clazz,(GlobalSearchScope)scope);
      }
    }
);
    for (    final PsiClass candidate : candidates) {
      final boolean isInheritor;
      AccessToken accessToken=ApplicationManager.getApplication().acquireReadActionLock();
      try {
        isInheritor=candidate.isInheritor(clazz,false);
      }
  finally {
        accessToken.finish();
      }
      if (isInheritor) {
        if (!consumer.process(candidate)) {
          return false;
        }
      }
    }
    return true;
  }
  return true;
}
