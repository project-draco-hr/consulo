{
  if (!myTransitive)   return;
  Set<PsiFile> initialSearchFor=new HashSet<PsiFile>(searchFor);
  for (  DependenciesBuilder builder : myBuilders) {
    for (    PsiFile from : searchIn) {
      for (      PsiFile to : initialSearchFor) {
        final List<List<PsiFile>> paths=builder.findPaths(from,to);
        Collections.sort(paths,new Comparator<List<PsiFile>>(){
          public int compare(          final List<PsiFile> p1,          final List<PsiFile> p2){
            return p1.size() - p2.size();
          }
        }
);
        for (        List<PsiFile> path : paths) {
          if (!path.isEmpty()) {
            path.add(0,from);
            path.add(to);
            if (!processor.process(path))             return;
          }
        }
      }
    }
  }
}
