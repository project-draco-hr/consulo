{
  final PsiElement parent=element.getParent();
  if (mightBeConfusingExpression(parent)) {
    return false;
  }
  if (element instanceof PsiPolyadicExpression) {
    final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)element;
    final IElementType tokenType=polyadicExpression.getOperationTokenType();
    final PsiExpression[] operands=polyadicExpression.getOperands();
    for (    PsiExpression operand : operands) {
      if (operand instanceof PsiInstanceOfExpression) {
        return true;
      }
      if (!(operand instanceof PsiPolyadicExpression)) {
        continue;
      }
      final PsiPolyadicExpression expression=(PsiPolyadicExpression)operand;
      final IElementType otherTokenType=expression.getOperationTokenType();
      if (!tokenType.equals(otherTokenType)) {
        return true;
      }
    }
  }
 else   if (element instanceof PsiConditionalExpression) {
    final PsiConditionalExpression conditionalExpression=(PsiConditionalExpression)element;
    final PsiExpression condition=conditionalExpression.getCondition();
    if (mightBeConfusingExpression(condition)) {
      return true;
    }
    final PsiExpression thenExpression=conditionalExpression.getThenExpression();
    if (mightBeConfusingExpression(thenExpression)) {
      return true;
    }
    final PsiExpression elseExpression=conditionalExpression.getElseExpression();
    if (mightBeConfusingExpression(elseExpression)) {
      return true;
    }
  }
 else   if (element instanceof PsiInstanceOfExpression) {
    final PsiInstanceOfExpression instanceOfExpression=(PsiInstanceOfExpression)element;
    final PsiExpression operand=instanceOfExpression.getOperand();
    if (mightBeConfusingExpression(operand)) {
      return true;
    }
  }
 else   if (element instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)element;
    final PsiExpression rhs=assignmentExpression.getRExpression();
    if (!(mightBeConfusingExpression(rhs))) {
      return false;
    }
    if (rhs instanceof PsiAssignmentExpression) {
      final PsiAssignmentExpression nestedAssignment=(PsiAssignmentExpression)rhs;
      final IElementType nestedTokenType=nestedAssignment.getOperationTokenType();
      final IElementType tokenType=assignmentExpression.getOperationTokenType();
      if (nestedTokenType.equals(tokenType)) {
        return false;
      }
    }
    return true;
  }
  return false;
}
