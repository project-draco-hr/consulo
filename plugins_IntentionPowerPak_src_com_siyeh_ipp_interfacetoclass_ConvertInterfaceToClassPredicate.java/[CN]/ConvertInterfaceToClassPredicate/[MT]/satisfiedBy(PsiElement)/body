{
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiClass)) {
    return false;
  }
  final PsiClass aClass=(PsiClass)parent;
  if (!aClass.isInterface()) {
    return false;
  }
  final PsiJavaToken leftBrace=aClass.getLBrace();
  final int offsetInParent=element.getStartOffsetInParent();
  if (leftBrace == null || offsetInParent >= leftBrace.getStartOffsetInParent()) {
    return false;
  }
  if (!element.isWritable()) {
    return false;
  }
  final PsiManager manager=element.getManager();
  final PsiSearchHelper searchHelper=manager.getSearchHelper();
  final SearchScope useScope=aClass.getUseScope();
  final PsiClass[] inheritors=searchHelper.findInheritors(aClass,useScope,true);
  for (  PsiClass inheritor : inheritors) {
    if (inheritor.isInterface()) {
      return false;
    }
  }
  return true;
}
