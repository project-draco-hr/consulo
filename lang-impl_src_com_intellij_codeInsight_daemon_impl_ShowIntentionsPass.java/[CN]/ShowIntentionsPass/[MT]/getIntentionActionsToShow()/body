{
  DaemonCodeAnalyzerImpl codeAnalyzer=(DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(myProject);
  if (LookupManager.getInstance(myProject).getActiveLookup() != null)   return;
  getActionsToShow(myEditor,myFile,myIntentionsInfo,myPassIdToShowIntentionsFor);
  if (myFile instanceof IntentionFilterOwner) {
    final IntentionFilterOwner.IntentionActionsFilter actionsFilter=((IntentionFilterOwner)myFile).getIntentionActionsFilter();
    if (actionsFilter == null)     return;
    if (actionsFilter != IntentionFilterOwner.IntentionActionsFilter.EVERYTHING_AVAILABLE) {
      myIntentionsInfo.filterActions(actionsFilter);
    }
  }
  if (myIntentionsInfo.isEmpty()) {
    return;
  }
  myShowBulb=!myIntentionsInfo.guttersToShow.isEmpty();
  if (!myShowBulb) {
    for (    HighlightInfo.IntentionActionDescriptor action : ContainerUtil.concat(myIntentionsInfo.errorFixesToShow,myIntentionsInfo.inspectionFixesToShow)) {
      if (IntentionManagerSettings.getInstance().isShowLightBulb(action.getAction())) {
        myShowBulb=true;
        break;
      }
    }
  }
  if (!myShowBulb) {
    for (    HighlightInfo.IntentionActionDescriptor descriptor : myIntentionsInfo.intentionsToShow) {
      final IntentionAction action=descriptor.getAction();
      if (IntentionManagerSettings.getInstance().isShowLightBulb(action) && action.isAvailable(myProject,myEditor,myFile)) {
        myShowBulb=true;
        break;
      }
    }
  }
  IntentionHintComponent hintComponent=codeAnalyzer.getLastIntentionHint();
  if (!myShowBulb || hintComponent == null) {
    return;
  }
  Boolean result=hintComponent.updateActions(myIntentionsInfo);
  if (result == null) {
  }
 else   if (result == Boolean.FALSE) {
    myHasToRecreate=true;
  }
 else {
    myShowBulb=false;
  }
}
