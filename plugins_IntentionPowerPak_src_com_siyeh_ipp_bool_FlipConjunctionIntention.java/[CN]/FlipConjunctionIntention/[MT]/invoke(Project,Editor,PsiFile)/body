{
  if (ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(new VirtualFile[]{file.getVirtualFile()}).hasReadonlyFiles())   return;
  PsiExpression exp=(PsiExpression)findMatchingElement(file,editor);
  final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)exp;
  final PsiJavaToken sign=binaryExpression.getOperationSign();
  final IElementType conjunctionType=sign.getTokenType();
  PsiElement parent=exp.getParent();
  while (isConjunctionExpression(parent,conjunctionType)) {
    exp=(PsiExpression)parent;
    parent=exp.getParent();
  }
  final String newExpression=flipExpression(exp,conjunctionType);
  replaceExpression(project,newExpression,exp);
}
