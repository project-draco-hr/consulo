def parse_index(data, inline):

    def gettype(q):
        return int((q & 65535))

    def offset_type(offset, type):
        return long(((long(offset) << 16) | type))
    indexformatng = '>Qiiiiii20s12x'
    s = struct.calcsize(indexformatng)
    index = []
    cache = None
    nodemap = {nullid: nullrev, }
    n = off = 0
    l = (len(data) - s)
    append = index.append
    if inline:
        cache = (0, data)
        while (off <= l):
            e = _unpack(indexformatng, data[off:(off + s)])
            nodemap[e[7]] = n
            append(e)
            n += 1
            if (e[1] < 0):
                break
            off += (e[1] + s)
    else:
        while (off <= l):
            e = _unpack(indexformatng, data[off:(off + s)])
            nodemap[e[7]] = n
            append(e)
            n += 1
            off += s
    e = list(index[0])
    type = gettype(e[0])
    e[0] = offset_type(0, type)
    index[0] = tuple(e)
    index.append((0, 0, 0, (-1), (-1), (-1), (-1), nullid))
    return (index, nodemap, cache)
