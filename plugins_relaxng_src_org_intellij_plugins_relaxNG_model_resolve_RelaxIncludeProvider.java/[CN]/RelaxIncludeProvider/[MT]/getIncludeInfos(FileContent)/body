{
  final ArrayList<FileIncludeInfo> infos=new ArrayList<FileIncludeInfo>();
  if (content.getFileType() == XmlFileType.INSTANCE) {
    NanoXmlUtil.parse(new ByteArrayInputStream(content.getContent()),new RngBuilderAdapter(infos));
  }
 else   if (content.getFileType() == RncFileType.getInstance()) {
    content.getPsiFile().acceptChildren(new RncElementVisitor(){
      @Override public void visitElement(      RncElement element){
        element.acceptChildren(this);
      }
      @Override public void visitInclude(      RncInclude include){
        final String path=include.getFileReference();
        if (path != null) {
          infos.add(new FileIncludeInfo(path));
        }
      }
    }
);
  }
  return infos.toArray(new FileIncludeInfo[infos.size()]);
}
