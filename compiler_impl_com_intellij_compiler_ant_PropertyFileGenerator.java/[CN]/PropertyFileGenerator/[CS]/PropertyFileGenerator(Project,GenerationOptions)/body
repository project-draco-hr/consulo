{
  final PathMacros pathMacros=PathMacros.getInstance();
  final Set<String> macroNamesSet=pathMacros.getUserMacroNames();
  if (macroNamesSet.size() > 0) {
    final String[] macroNames=macroNamesSet.toArray(new String[macroNamesSet.size()]);
    Arrays.sort(macroNames);
    for (    final String macroName : macroNames) {
      addProperty(BuildProperties.getPathMacroProperty(macroName),pathMacros.getValue(macroName));
    }
  }
  if (genOptions.forceTargetJdk) {
    final ProjectJdk[] usedJdks=BuildProperties.getUsedJdks(project);
    for (    ProjectJdk jdk : usedJdks) {
      if (jdk.getHomeDirectory() == null) {
        continue;
      }
      final File homeDir=BuildProperties.toCanonicalFile(VfsUtil.virtualToIoFile(jdk.getHomeDirectory()));
      addProperty(BuildProperties.getJdkHomeProperty(jdk.getName()),homeDir.getPath().replace(File.separatorChar,'/'));
    }
  }
}
