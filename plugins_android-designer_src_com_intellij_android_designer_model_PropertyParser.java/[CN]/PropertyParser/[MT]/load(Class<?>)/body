{
  String component=componentClass.getSimpleName();
  List<Property> properties=myCachedProperties.get(component);
  if (properties == null) {
    properties=new ArrayList<Property>();
    StyleableDefinition definitions=myDefinitions.getStyleableByName(component);
    if (definitions != null) {
      for (      AttributeDefinition definition : definitions.getAttributes()) {
        properties.add(new AttributeProperty(null,definition));
      }
    }
    Class<?> superComponentClass=componentClass.getSuperclass();
    if (superComponentClass != null) {
      properties.addAll(load(superComponentClass));
    }
    if (!properties.isEmpty()) {
      Collections.sort(properties,new Comparator<Property>(){
        @Override public int compare(        Property p1,        Property p2){
          return p1.getName().compareTo(p2.getName());
        }
      }
);
    }
    myCachedProperties.put(component,properties);
  }
  return properties;
}
