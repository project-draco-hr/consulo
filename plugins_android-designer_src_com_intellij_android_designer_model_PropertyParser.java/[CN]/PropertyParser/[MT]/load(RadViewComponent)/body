{
  MetaModel model=component.getMetaModelForProperties();
  String target=model.getTarget();
  if (target == null) {
    ViewInfo info=component.getViewInfo();
    if (info == null) {
      component.setProperties(Collections.<Property>emptyList());
    }
 else {
      Class<?> componentClass=configureClass(myClassLoader.loadClass(info.getClassName()));
      component.setProperties(loadWidgetProperties(componentClass,model));
    }
  }
 else {
    component.setProperties(loadWidgetProperties(myClassLoader.loadClass(target),model));
  }
  RadComponent parent=component.getParent();
  if (parent != null) {
    String[] layoutParams=null;
    RadLayout layout=parent.getLayout();
    if (layout instanceof RadViewLayoutWithData) {
      layoutParams=((RadViewLayoutWithData)layout).getLayoutParams();
    }
 else     if (parent == parent.getRoot()) {
      layoutParams=DEFAULT_LAYOUT_PARAMS;
    }
    if (layoutParams != null) {
      MetaModel[] models=new MetaModel[layoutParams.length];
      models[0]=parent.getMetaModelForProperties();
      for (int i=1; i < layoutParams.length; i++) {
        if (models[i - 1] == null) {
          break;
        }
        String extendTarget=models[i - 1].getTarget();
        if (extendTarget == null) {
          break;
        }
        Class<?> superClass=myClassLoader.loadClass(extendTarget).getSuperclass();
        if (superClass != null) {
          superClass=configureClass(superClass);
          models[i]=myMetaManager.getModelByTarget(superClass.getName());
        }
      }
      List<Property> properties=loadLayoutProperties(layoutParams,0,models);
      if (!properties.isEmpty()) {
        properties=new ArrayList<Property>(properties);
        properties.addAll(component.getProperties());
        component.setProperties(properties);
      }
    }
  }
}
