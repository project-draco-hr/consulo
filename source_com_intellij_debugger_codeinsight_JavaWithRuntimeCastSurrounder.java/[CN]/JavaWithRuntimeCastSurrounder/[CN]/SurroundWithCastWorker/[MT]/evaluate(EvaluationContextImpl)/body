{
  final Project project=evaluationContext.getProject();
  ExpressionEvaluator evaluator=DebuggerInvocationUtil.commitAndRunReadAction(project,new com.intellij.debugger.EvaluatingComputable<ExpressionEvaluator>(){
    public ExpressionEvaluator compute() throws EvaluateException {
      return EvaluatorBuilderImpl.getInstance().build(myElement);
    }
  }
);
  final Value value=evaluator.evaluate(evaluationContext);
  if (value != null) {
    return ApplicationManager.getApplication().runReadAction(new Computable<String>(){
      public String compute(){
        return DebuggerUtilsEx.getQualifiedClassName(value.type().name(),project);
      }
    }
);
  }
 else {
    throw EvaluateExceptionUtil.createEvaluateException("Surrounded expression is null");
  }
}
