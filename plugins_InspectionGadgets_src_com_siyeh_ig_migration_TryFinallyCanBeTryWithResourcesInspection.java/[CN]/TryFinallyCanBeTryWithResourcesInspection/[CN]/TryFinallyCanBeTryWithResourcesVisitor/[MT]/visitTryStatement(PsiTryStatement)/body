{
  super.visitTryStatement(tryStatement);
  if (!PsiUtil.isLanguageLevel7OrHigher(tryStatement)) {
    return;
  }
  final PsiResourceList resourceList=tryStatement.getResourceList();
  if (resourceList != null) {
    return;
  }
  final Set<PsiLocalVariable> variables=collectVariables(tryStatement);
  if (variables.isEmpty()) {
    return;
  }
  final PsiCodeBlock tryBlock=tryStatement.getTryBlock();
  if (tryBlock == null) {
    return;
  }
  final PsiStatement[] tryBlockStatements=tryBlock.getStatements();
  boolean found=false;
  for (  PsiVariable variable : variables) {
    final boolean hasInitializer;
    final PsiExpression initializer=variable.getInitializer();
    if (initializer == null) {
      hasInitializer=false;
    }
 else {
      final PsiType type=initializer.getType();
      hasInitializer=!PsiType.NULL.equals(type);
    }
    final int index=findInitialization(tryBlockStatements,variable,hasInitializer);
    if (index >= 0 ^ hasInitializer) {
      found=true;
      break;
    }
  }
  if (!found) {
    return;
  }
  registerStatementError(tryStatement);
}
