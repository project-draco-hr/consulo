{
  super.visitTryStatement(tryStatement);
  if (!PsiUtil.isLanguageLevel7OrHigher(tryStatement)) {
    return;
  }
  final PsiResourceList resourceList=tryStatement.getResourceList();
  if (resourceList != null) {
    return;
  }
  final PsiCodeBlock finallyBlock=tryStatement.getFinallyBlock();
  if (finallyBlock == null) {
    return;
  }
  final PsiStatement[] statements=finallyBlock.getStatements();
  if (statements.length == 0) {
    return;
  }
  final Map<PsiVariable,PsiStatement> resourceVariables=new HashMap(2);
  for (  PsiStatement statement : statements) {
    final PsiVariable variable=findAutoCloseableVariable(statement);
    if (variable == null) {
      continue;
    }
    resourceVariables.put(variable,null);
  }
  if (resourceVariables.isEmpty()) {
    return;
  }
  final PsiCodeBlock tryBlock=tryStatement.getTryBlock();
  if (tryBlock == null) {
    return;
  }
  final PsiStatement[] tryBlockStatements=tryBlock.getStatements();
  for (  PsiVariable variable : resourceVariables.keySet()) {
    final PsiStatement initialization=findInitialization(tryBlockStatements,variable);
    if (initialization != null) {
      resourceVariables.put(variable,initialization);
    }
 else {
      final PsiExpression initializer=variable.getInitializer();
      if (initializer == null) {
        return;
      }
      final PsiType type=initializer.getType();
      if (PsiType.NULL.equals(type)) {
        return;
      }
    }
  }
  registerStatementError(tryStatement,resourceVariables);
}
