{
  int initialInsertRow=0;
  for (TreeNode n=root.getParent(); n != null; n=n.getParent()) {
    for (int i=n.getChildCount() - 1; i >= 0; i--) {
      TreeNode child=n.getChildAt(i);
      if (child != root) {
        initialInsertRow+=calculateRowsCount(child);
      }
    }
    initialInsertRow++;
  }
  initialInsertRow+=calculateRowsCount(root);
  if (!tree.isRootVisible()) {
    initialInsertRow--;
  }
  HierarchicalArrangementConditionNode grouped=grouper.group(matchCondition);
  DefaultTreeModel treeModel=(DefaultTreeModel)tree.getModel();
  Pair<ArrangementTreeNode,Integer> pair=ArrangementConfigUtil.map(root,grouped,treeModel);
  ArrangementTreeNode topMostNode=ArrangementConfigUtil.getLastBefore(pair.first,root);
  int row=initialInsertRow + pair.second - 1;
  ArrangementRuleEditingModelImpl model=new ArrangementRuleEditingModelImpl(treeModel,matchCondition,topMostNode,pair.first,grouper,row,tree.isRootVisible());
  rowMappings.put(row,model);
}
