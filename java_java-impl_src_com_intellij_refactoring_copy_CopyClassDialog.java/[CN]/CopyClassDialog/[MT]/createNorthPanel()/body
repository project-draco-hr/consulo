{
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  panel.setBorder(IdeBorderFactory.createRoundedBorder());
  gbConstraints.insets=new Insets(4,8,4,8);
  gbConstraints.weightx=1;
  gbConstraints.gridwidth=2;
  gbConstraints.fill=GridBagConstraints.HORIZONTAL;
  gbConstraints.anchor=GridBagConstraints.WEST;
  panel.add(myInformationLabel,gbConstraints);
  gbConstraints.gridwidth=1;
  gbConstraints.gridy=1;
  gbConstraints.weighty=1;
  gbConstraints.weightx=0;
  panel.add(myNameLabel,gbConstraints);
  gbConstraints.gridx=1;
  gbConstraints.weightx=1;
  myNameField=new EditorTextField("");
  panel.add(myNameField,gbConstraints);
  gbConstraints.gridx=0;
  gbConstraints.gridy=2;
  gbConstraints.weightx=0;
  panel.add(myPackageLabel,gbConstraints);
  gbConstraints.gridx=1;
  gbConstraints.weightx=1;
  String qualifiedName="";
  if (myDefaultTargetDirectory != null) {
    final PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage(myDefaultTargetDirectory);
    if (aPackage != null) {
      qualifiedName=aPackage.getQualifiedName();
    }
  }
  myTfPackage=new PackageNameReferenceEditorCombo(qualifiedName,myProject,RECENTS_KEY,RefactoringBundle.message("choose.destination.package"));
  if (qualifiedName.length() > 0) {
    myTfPackage.setTextFieldPreferredWidth(qualifiedName.length() + 5);
  }
  myPackageLabel.setText(RefactoringBundle.message("destination.package"));
  panel.add(myTfPackage,gbConstraints);
  final boolean isLibraryClass=!myClass2Copy.getManager().isInProject(myClass2Copy);
  myCbMoveToAnotherSourceFolder.setEnabled(ProjectRootManager.getInstance(myProject).getContentSourceRoots().length > 1 || isLibraryClass);
  if (isLibraryClass) {
    myCbMoveToAnotherSourceFolder.setSelected(true);
  }
  gbConstraints.gridy=3;
  gbConstraints.gridx=0;
  gbConstraints.gridwidth=2;
  gbConstraints.anchor=GridBagConstraints.EAST;
  gbConstraints.fill=GridBagConstraints.NONE;
  panel.add(myCbMoveToAnotherSourceFolder,gbConstraints);
  return panel;
}
