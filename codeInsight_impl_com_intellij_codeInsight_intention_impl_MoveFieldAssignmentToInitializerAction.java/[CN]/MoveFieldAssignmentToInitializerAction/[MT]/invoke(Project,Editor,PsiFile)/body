{
  final PsiAssignmentExpression assignment=getAssignmentUnderCaret(editor,file);
  if (assignment == null)   return;
  PsiField field=getAssignedField(assignment);
  if (field == null)   return;
  if (!CodeInsightUtil.prepareFileForWrite(file))   return;
  ArrayList<PsiAssignmentExpression> assignments=new ArrayList<PsiAssignmentExpression>();
  if (!isInitializedWithSameExpression(field,assignment,assignments))   return;
  PsiExpression initializer=assignment.getRExpression();
  field.setInitializer(initializer);
  for (  PsiAssignmentExpression assignmentExpression : assignments) {
    PsiElement statement=assignmentExpression.getParent();
    PsiElement parent=statement.getParent();
    if (parent instanceof PsiIfStatement || parent instanceof PsiWhileStatement || parent instanceof PsiForStatement|| parent instanceof PsiForeachStatement) {
      PsiStatement emptyStatement=JavaPsiFacade.getInstance(file.getProject()).getElementFactory().createStatementFromText(";",statement);
      statement.replace(emptyStatement);
    }
 else {
      statement.delete();
    }
  }
  editor.getCaretModel().moveToOffset(field.getTextOffset());
  editor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
}
