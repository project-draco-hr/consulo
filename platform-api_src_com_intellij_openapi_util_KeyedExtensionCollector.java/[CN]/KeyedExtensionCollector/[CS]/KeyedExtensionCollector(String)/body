{
  ExtensionPointName<KeyedLazyInstance<T>> typesafe=ExtensionPointName.create(epName);
  if (Extensions.getRootArea().hasExtensionPoint(epName)) {
    final ExtensionPoint<KeyedLazyInstance<T>> point=Extensions.getRootArea().getExtensionPoint(typesafe);
    point.addExtensionPointListener(new ExtensionPointListener<KeyedLazyInstance<T>>(){
      public void extensionAdded(      final KeyedLazyInstance<T> bean,      @Nullable final PluginDescriptor pluginDescriptor){
synchronized (lock) {
          List<KeyedLazyInstance<T>> beans=myRegistry.get(bean.getKey());
          if (beans == null) {
            beans=new CopyOnWriteArrayList<KeyedLazyInstance<T>>();
            myRegistry.put(bean.getKey(),beans);
          }
          beans.add(bean);
          myCache.remove(bean.getKey());
        }
      }
      public void extensionRemoved(      final KeyedLazyInstance<T> bean,      @Nullable final PluginDescriptor pluginDescriptor){
synchronized (lock) {
          List<KeyedLazyInstance<T>> beans=myRegistry.get(bean.getKey());
          if (beans != null) {
            beans.remove(bean);
          }
          myCache.remove(bean.getKey());
        }
      }
    }
);
  }
}
