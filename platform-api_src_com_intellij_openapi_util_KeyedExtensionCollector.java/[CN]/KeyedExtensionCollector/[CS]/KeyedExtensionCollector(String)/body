{
  ExtensionPointName<KeyedLazyInstance<T>> typesafe=ExtensionPointName.create(epName);
  if (Extensions.getRootArea().hasExtensionPoint(epName)) {
    myPoint=Extensions.getRootArea().getExtensionPoint(typesafe);
    myPoint.addExtensionPointListener(new ExtensionPointAndAreaListener<KeyedLazyInstance<T>>(){
      public void extensionAdded(      final KeyedLazyInstance<T> bean,      @Nullable final PluginDescriptor pluginDescriptor){
synchronized (lock) {
          myCache.remove(bean.getKey());
        }
      }
      public void extensionRemoved(      final KeyedLazyInstance<T> bean,      @Nullable final PluginDescriptor pluginDescriptor){
synchronized (lock) {
          myCache.remove(bean.getKey());
        }
      }
      public void areaReplaced(      final ExtensionsArea area){
synchronized (lock) {
          dropCaches();
        }
      }
    }
);
  }
}
