{
  ExtensionPointName<KeyedLazyInstanceEP<T>> typesafe=ExtensionPointName.create(epName);
  final ExtensionPoint<KeyedLazyInstanceEP<T>> point=Extensions.getRootArea().getExtensionPoint(typesafe);
  point.addExtensionPointListener(new ExtensionPointListener<KeyedLazyInstanceEP<T>>(){
    public void extensionAdded(    final KeyedLazyInstanceEP<T> bean,    @Nullable final PluginDescriptor pluginDescriptor){
      List<KeyedLazyInstanceEP<T>> beans=myRegistry.get(bean.key);
      if (beans == null) {
        beans=new CopyOnWriteArrayList<KeyedLazyInstanceEP<T>>();
        myRegistry.put(bean.key,beans);
      }
      beans.add(bean);
      myCache.remove(bean.key);
    }
    public void extensionRemoved(    final KeyedLazyInstanceEP<T> bean,    @Nullable final PluginDescriptor pluginDescriptor){
      List<KeyedLazyInstanceEP<T>> beans=myRegistry.get(bean.key);
      if (beans != null) {
        beans.remove(bean);
      }
      myCache.remove(bean.key);
    }
  }
);
}
