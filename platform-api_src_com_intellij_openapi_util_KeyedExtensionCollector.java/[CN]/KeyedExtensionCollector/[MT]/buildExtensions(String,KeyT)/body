{
  final List<T> explicit=myExplicitExtensions.get(stringKey);
  List<T> result=null;
  final ExtensionPoint<KeyedLazyInstance<T>> point=getPoint();
  if (point != null) {
    final KeyedLazyInstance<T>[] beans=point.getExtensions();
    for (    KeyedLazyInstance<T> bean : beans) {
      if (stringKey.equals(bean.getKey())) {
        final T instance;
        try {
          instance=bean.getInstance();
        }
 catch (        Exception e) {
          LOG.error(e);
          continue;
        }
        if (result == null) {
          result=explicit == null ? new ArrayList<T>() : new ArrayList<T>(explicit);
        }
        result.add(instance);
      }
    }
  }
  return result == null ? explicit == null ? Collections.<T>emptyList() : explicit : result;
}
