{
  super.update(e);
  e.getPresentation().setVisible(true);
  final VcsLog log=e.getData(VcsLogDataKeys.VCS_LOG);
  Project project=getEventProject(e);
  final List<VcsCherryPicker> cherryPickers=getActiveCherryPickersForProject(project);
  if (log == null || cherryPickers.isEmpty()) {
    e.getPresentation().setEnabledAndVisible(false);
    return;
  }
  final List<VcsFullCommitDetails> details=log.getSelectedDetails();
  VcsCherryPicker enabledCherryPicker=ContainerUtil.find(cherryPickers,new Condition<VcsCherryPicker>(){
    @Override public boolean value(    VcsCherryPicker picker){
      return picker.isEnabled(log,details);
    }
  }
);
  e.getPresentation().setEnabled(enabledCherryPicker != null);
  e.getPresentation().setText(enabledCherryPicker == null ? concatActionNamesForAllAvailable(cherryPickers) : enabledCherryPicker.getActionTitle());
}
