{
  if (!isValid)   return;
  if (myStart == myEnd && !isExpandToRight && !isExpandToLeft) {
    processIfOnePoint(e);
    return;
  }
  final int offset=e.getOffset();
  final int oldLength=e.getOldLength();
  final int newLength=e.getNewLength();
  if (myEnd < offset || (!isExpandToRight && myEnd == offset)) {
    return;
  }
  if (myStart > offset + oldLength || (!isExpandToLeft && myStart == offset + oldLength)) {
    myStart+=newLength - oldLength;
    myEnd+=newLength - oldLength;
    return;
  }
  if (myStart <= offset && myEnd >= offset + oldLength) {
    myEnd+=newLength - oldLength;
    return;
  }
  if (myStart >= offset && myStart <= offset + oldLength && myEnd > offset + oldLength) {
    myEnd+=newLength - oldLength;
    myStart=offset + newLength;
    return;
  }
  if (myEnd >= offset && myEnd <= offset + oldLength && myStart < offset) {
    myEnd=offset;
    return;
  }
  invalidate();
}
