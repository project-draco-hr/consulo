{
  myData=data;
  myPackageLabel.setLabelFor(myTfWithBtnChoosePackage.getTextField());
  myExistClassLabel.setLabelFor(myTfWitgBtnChooseClass.getTextField());
  final ItemListener itemListener=new ItemListener(){
    public void itemStateChanged(    final ItemEvent e){
      final boolean state=myRbBindToNewBean.isSelected();
      myTfShortClassName.setEnabled(state);
      myTfWithBtnChoosePackage.setEnabled(state);
      myTfWitgBtnChooseClass.setEnabled(!state);
    }
  }
;
  myRbBindToNewBean.addItemListener(itemListener);
  myRbBindToExistingBean.addItemListener(itemListener);
{
    final ButtonGroup buttonGroup=new ButtonGroup();
    buttonGroup.add(myRbBindToNewBean);
    buttonGroup.add(myRbBindToExistingBean);
  }
  myTfWitgBtnChooseClass.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final TreeClassChooser chooser=TreeClassChooserFactory.getInstance(myData.myProject).createWithInnerClassesScopeChooser(UIDesignerBundle.message("title.choose.bean.class"),GlobalSearchScope.projectScope(myData.myProject),new ClassFilter(){
        public boolean isAccepted(        final PsiClass aClass){
          return aClass.getParent() instanceof PsiJavaFile;
        }
      }
,null);
      chooser.showDialog();
      final PsiClass aClass=chooser.getSelected();
      if (aClass == null) {
        return;
      }
      final String fqName=aClass.getQualifiedName();
      myTfWitgBtnChooseClass.setText(fqName);
    }
  }
);
  myTfWithBtnChoosePackage.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final PackageChooserDialog dialog=new PackageChooserDialog(UIDesignerBundle.message("title.choose.package"),myData.myProject);
      dialog.selectPackage(myTfWithBtnChoosePackage.getText());
      dialog.show();
      final PsiPackage aPackage=dialog.getSelectedPackage();
      if (aPackage != null) {
        myTfWithBtnChoosePackage.setText(aPackage.getQualifiedName());
      }
    }
  }
);
}
