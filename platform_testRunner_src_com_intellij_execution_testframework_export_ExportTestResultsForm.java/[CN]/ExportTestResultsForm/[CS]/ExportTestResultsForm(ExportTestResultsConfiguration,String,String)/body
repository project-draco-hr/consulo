{
  ActionListener listener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateOnFormatChange();
    }
  }
;
  myXmlRb.addActionListener(listener);
  myBundledTemplateRb.addActionListener(listener);
  myCustomTemplateRb.addActionListener(listener);
  myOutputFolderLabel.setLabelFor(myFolderField.getChildComponent());
  myFileNameField.setText(defaultFileName);
  myCustomTemplateField.addBrowseFolderListener(ExecutionBundle.message("export.test.results.custom.template.chooser.title"),null,null,new FileChooserDescriptor(true,false,false,false,false,false){
    public boolean isFileSelectable(    VirtualFile file){
      return "xsl".equalsIgnoreCase(file.getExtension()) || "xslt".equalsIgnoreCase(file.getExtension());
    }
  }
,TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT,false);
  myFolderField.addBrowseFolderListener(ExecutionBundle.message("export.test.results.output.folder.chooser.title"),null,null,new FileChooserDescriptor(false,true,false,false,false,false),TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT,false);
  myFileNameField.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      updateOpenInLabel();
    }
  }
);
  UserActivityWatcher watcher=new UserActivityWatcher();
  watcher.register(myContentPane);
  watcher.addUserActivityListener(new UserActivityListener(){
    @Override public void stateChanged(){
      myEventDispatcher.getMulticaster().stateChanged(new ChangeEvent(this));
    }
  }
);
  myMessageLabel.setIcon(UIUtil.getBalloonWarningIcon());
  JRadioButton b;
  if (config.getExportFormat() == ExportTestResultsConfiguration.ExportFormat.Xml) {
    b=myXmlRb;
  }
 else   if (config.getExportFormat() == ExportTestResultsConfiguration.ExportFormat.BundledTemplate) {
    b=myBundledTemplateRb;
  }
 else {
    b=myCustomTemplateRb;
  }
  b.setSelected(true);
  IdeFocusManager.findInstanceByComponent(myContentPane).requestFocus(b,true);
  myFolderField.setText(defaultFolder);
  myCustomTemplateField.setText(FileUtil.toSystemDependentName(StringUtil.notNullize(config.getUserTemplatePath())));
  myOpenExportedFileCb.setSelected(config.isOpenResults());
  updateOnFormatChange();
  updateOpenInLabel();
}
