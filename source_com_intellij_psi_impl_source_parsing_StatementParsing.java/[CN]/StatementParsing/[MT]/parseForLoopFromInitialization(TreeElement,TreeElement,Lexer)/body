{
  CompositeElement element=Factory.createCompositeElement(FOR_STATEMENT);
  TreeUtil.addChildren(element,forKeyword);
  TreeUtil.addChildren(element,lparenth);
  TreeElement init=parseStatement(lexer);
  if (init == null) {
    TreeUtil.addChildren(element,Factory.createErrorElement("Statement expected"));
    if (lexer.getTokenType() != RPARENTH) {
      return element;
    }
  }
 else {
    TreeUtil.addChildren(element,init);
    CompositeElement expr=myContext.getExpressionParsing().parseExpression(lexer);
    if (expr != null) {
      TreeUtil.addChildren(element,expr);
    }
    if (lexer.getTokenType() != SEMICOLON) {
      TreeUtil.addChildren(element,Factory.createErrorElement("';' expected"));
      if (lexer.getTokenType() != RPARENTH) {
        return element;
      }
    }
 else {
      TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
      lexer.advance();
      parseExpressionOrExpressionList(lexer,element);
      if (lexer.getTokenType() != RPARENTH) {
        TreeUtil.addChildren(element,Factory.createErrorElement("')' expected"));
        return element;
      }
    }
  }
  TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  TreeElement statement=parseStatement(lexer);
  if (statement == null) {
    TreeUtil.addChildren(element,Factory.createErrorElement("Statement expected"));
    return element;
  }
  TreeUtil.addChildren(element,statement);
  return element;
}
