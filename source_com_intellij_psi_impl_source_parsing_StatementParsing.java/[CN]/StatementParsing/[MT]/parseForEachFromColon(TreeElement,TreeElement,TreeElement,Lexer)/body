{
  LOG.assertTrue(lexer.getTokenType() == COLON);
  final CompositeElement element=Factory.createCompositeElement(Factory.FOREACH_STATEMENT);
  TreeUtil.addChildren(element,forKeyword);
  TreeUtil.addChildren(element,lparenth);
  TreeUtil.addChildren(element,parameter);
  TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  final CompositeElement expr=myContext.getExpressionParsing().parseExpression(lexer);
  if (expr != null) {
    TreeUtil.addChildren(element,expr);
  }
 else {
    TreeUtil.addChildren(element,Factory.createErrorElement("Expression expected"));
  }
  if (lexer.getTokenType() == RPARENTH) {
    TreeUtil.addChildren(element,ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
    lexer.advance();
    final TreeElement body=parseStatement(lexer);
    if (body != null) {
      TreeUtil.addChildren(element,body);
    }
 else {
      TreeUtil.addChildren(element,Factory.createErrorElement("Statement expected"));
    }
  }
 else {
    TreeUtil.addChildren(element,Factory.createErrorElement("')' expected"));
  }
  return element;
}
