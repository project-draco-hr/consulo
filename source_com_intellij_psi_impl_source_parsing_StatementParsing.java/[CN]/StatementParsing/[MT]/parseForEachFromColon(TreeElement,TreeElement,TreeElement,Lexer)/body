{
  LOG.assertTrue(lexer.getTokenType() == COLON);
  final CompositeElement element=ASTFactory.composite(FOREACH_STATEMENT);
  element.rawAddChildren(forKeyword);
  element.rawAddChildren(lparenth);
  element.rawAddChildren(parameter);
  element.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  final CompositeElement expr=myContext.getExpressionParsing().parseExpression(lexer);
  if (expr != null) {
    element.rawAddChildren(expr);
  }
 else {
    element.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("expected.expression")));
  }
  if (lexer.getTokenType() == RPARENTH) {
    element.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
    lexer.advance();
    final TreeElement body=parseStatement(lexer);
    if (body != null) {
      element.rawAddChildren(body);
    }
 else {
      element.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("expected.statement")));
    }
  }
 else {
    element.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("expected.rparen")));
  }
  return element;
}
