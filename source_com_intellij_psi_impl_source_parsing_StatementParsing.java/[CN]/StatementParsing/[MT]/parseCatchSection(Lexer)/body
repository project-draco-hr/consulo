{
  CompositeElement catchSection=ASTFactory.composite(JavaElementType.CATCH_SECTION);
  catchSection.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  if (lexer.getTokenType() != JavaTokenType.LPARENTH) {
    catchSection.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("expected.lparen")));
    return catchSection;
  }
  catchSection.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  TreeElement parm=myContext.getDeclarationParsing().parseParameter(lexer,false);
  if (parm == null) {
    catchSection.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("expected.parameter")));
  }
 else {
    catchSection.rawAddChildren(parm);
  }
  if (lexer.getTokenType() != JavaTokenType.RPARENTH) {
    catchSection.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("expected.rparen")));
    return catchSection;
  }
  catchSection.rawAddChildren(ParseUtil.createTokenElement(lexer,myContext.getCharTable()));
  lexer.advance();
  TreeElement codeBlock=parseCodeBlock(lexer,DEEP_PARSE_BLOCKS_IN_STATEMENTS);
  if (codeBlock == null) {
    catchSection.rawAddChildren(Factory.createErrorElement(JavaErrorMessages.message("expected.lbrace")));
    return catchSection;
  }
  catchSection.rawAddChildren(codeBlock);
  return catchSection;
}
