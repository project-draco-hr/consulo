{
  LOG.assertTrue(lexer.getTokenType() == FOR_KEYWORD);
  final TreeElement forKeyword=ParseUtil.createTokenElement(lexer,myContext.getCharTable());
  lexer.advance();
  if (lexer.getTokenType() != LPARENTH) {
    CompositeElement errorForElement=Factory.createCompositeElement(FOR_STATEMENT);
    TreeUtil.addChildren(errorForElement,forKeyword);
    TreeUtil.addChildren(errorForElement,Factory.createErrorElement("'(' expected"));
    return errorForElement;
  }
  final TreeElement lparenth=ParseUtil.createTokenElement(lexer,myContext.getCharTable());
  lexer.advance();
  final long afterLParenth=ParseUtil.savePosition(lexer);
  final TreeElement parameter=myContext.getDeclarationParsing().parseParameter(lexer,false);
  if (parameter == null || parameter.getElementType() != PARAMETER || lexer.getTokenType() != COLON) {
    ParseUtil.restorePosition(lexer,afterLParenth);
    return parseForLoopFromInitialization(forKeyword,lparenth,lexer);
  }
 else {
    return parseForEachFromColon(forKeyword,lparenth,parameter,lexer);
  }
}
