{
  if (lexer.getTokenType() != LBRACE)   return null;
  if (lexer instanceof FilterLexer) {
    if (((FilterLexer)lexer).getOriginal() instanceof JspStep1Lexer || ((FilterLexer)lexer).getOriginal() instanceof JavaWithJspTemplateDataLexer) {
      deep=true;
    }
  }
  CompositeElement codeBlock=Factory.createCompositeElement(CODE_BLOCK);
  if (!deep) {
    int start=lexer.getTokenStart();
    lexer.advance();
    int braceCount=1;
    int end;
    while (true) {
      IElementType tokenType=lexer.getTokenType();
      if (tokenType == null) {
        end=lexer.getTokenStart();
        break;
      }
      if (tokenType == LBRACE) {
        braceCount++;
      }
 else       if (tokenType == RBRACE) {
        braceCount--;
      }
      if (braceCount == 0) {
        end=lexer.getTokenEnd();
        lexer.advance();
        break;
      }
      lexer.advance();
    }
    if (braceCount != 0) {
      codeBlock.putUserData(ParseUtil.UNCLOSED_ELEMENT_PROPERTY,"");
    }
    TreeElement chameleon=Factory.createLeafElement(CODE_BLOCK_TEXT,lexer.getBuffer(),start,end,lexer.getState(),myContext.getCharTable());
    TreeUtil.addChildren(codeBlock,chameleon);
  }
 else {
    parseCodeBlockDeep(codeBlock,lexer,false);
  }
  return codeBlock;
}
