{
  if (!method.isConstructor()) {
    String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("method.is.not.a.constructor"));
    CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME,message,HelpID.REPLACE_CONSTRUCTOR_WITH_FACTORY,myProject);
    return;
  }
  PsiClass aClass=method.getContainingClass();
  if (aClass == null || aClass.getQualifiedName() == null) {
    showJspOrLocalClassMessage();
    return;
  }
  if (!checkAbstractClassOrInterfaceMessage(aClass))   return;
  if (!CommonRefactoringUtil.checkReadOnlyStatus(myProject,method))   return;
  new ReplaceConstructorWithFactoryDialog(myProject,method,method.getContainingClass()).show();
}
