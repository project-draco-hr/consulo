{
  if (text == null || text.length() == 0)   return;
  final int physicalOffset=displayToPhysical(displayOffset);
  final PsiElement psiElement=findElementAt(physicalOffset);
  final IElementType elementType=psiElement != null ? psiElement.getNode().getElementType() : null;
  if (elementType == XmlTokenType.XML_DATA_CHARACTERS) {
    int insertOffset=physicalOffset - psiElement.getStartOffsetInParent();
    final String oldElementText=psiElement.getText();
    final String newElementText=oldElementText.substring(0,insertOffset) + text + oldElementText.substring(insertOffset);
    final PomModel model=getProject().getModel();
    final XmlAspect aspect=model.getModelAspect(XmlAspect.class);
    model.runTransaction(new PomTransactionBase(this,aspect){
      public PomModelEvent runInner(){
        final String oldText=getText();
        final ASTNode e=getPolicy().encodeXmlTextContents(newElementText,XmlTextImpl.this,SharedImplUtil.findCharTableByTree(XmlTextImpl.this));
        final ASTNode node=psiElement.getNode();
        final ASTNode treeNext=node.getTreeNext();
        addChildren(e,null,treeNext);
        deleteChildInternal(node);
        clearCaches();
        return XmlTextChangedImpl.createXmlTextChanged(model,XmlTextImpl.this,oldText);
      }
    }
);
  }
 else {
    setValue(new StringBuffer(getValue()).insert(displayOffset,text).toString());
  }
}
