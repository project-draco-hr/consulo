{
  boolean hasLocalFile=false;
  File cvsFile=new File(cvsVirtualFile.getPath());
  if (cvsFile.isAbsolute()) {
    hasLocalFile=true;
    cvsFile=new File(CvsUtil.getModuleName(cvsVirtualFile));
  }
  final AnnotateOperation annotateOperation=new AnnotateOperation(cvsFile,revision,environment);
  CvsOperationExecutor executor=new CvsOperationExecutor(myProject);
  executor.performActionSync(new CommandCvsHandler(CvsBundle.getAnnotateOperationName(),annotateOperation),CvsOperationExecutorCallback.EMPTY);
  if (executor.getResult().hasNoErrors()) {
    final List<VcsFileRevision> revisions;
    if (hasLocalFile) {
      final CvsHistoryProvider historyProvider=(CvsHistoryProvider)getVcsHistoryProvider();
      final FilePath filePath=PeerFactory.getInstance().getVcsContextFactory().createFilePathOn(cvsVirtualFile);
      revisions=historyProvider.createRevisions(filePath);
    }
 else {
      revisions=null;
    }
    return new CvsFileAnnotation(annotateOperation.getContent(),annotateOperation.getLineAnnotations(),revisions,cvsVirtualFile);
  }
 else {
    throw executor.getResult().composeError();
  }
}
