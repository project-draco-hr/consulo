{
  PsiManager manager=psiClass.getManager();
  final Project project=psiClass.getProject();
  CachedValue<Set<String>> boxedHolderTypes=project.getUserData(POSSIBLE_BOXED_HOLDER_TYPES);
  if (boxedHolderTypes == null) {
    project.putUserData(POSSIBLE_BOXED_HOLDER_TYPES,boxedHolderTypes=CachedValuesManager.getManager(manager.getProject()).createCachedValue(new CachedValueProvider<Set<String>>(){
      public Result<Set<String>> compute(){
        final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
        final Set<String> set=new THashSet<String>();
        for (        final String qname : PsiPrimitiveType.getAllBoxedTypeNames()) {
          final PsiClass boxedClass=facade.findClass(qname,GlobalSearchScope.allScope(project));
          InheritanceUtil.processSupers(boxedClass,true,new Processor<PsiClass>(){
            public boolean process(            PsiClass psiClass){
              ContainerUtil.addIfNotNull(psiClass.getQualifiedName(),set);
              return true;
            }
          }
);
        }
        return Result.create(set,ProjectRootModificationTracker.getInstance(project));
      }
    }
,false));
  }
  final Set<String> boxedHolders=boxedHolderTypes.getValue();
  return boxedHolders;
}
