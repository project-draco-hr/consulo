{
  final DependenciesBuilder builder=new BackwardDependenciesBuilder(myProject,myScope);
  final Runnable process=new Runnable(){
    public void run(){
      builder.analyze();
    }
  }
;
  final Runnable successRunnable=new Runnable(){
    public void run(){
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          DependenciesPanel panel=new DependenciesPanel(myProject,builder);
          Content content=PeerFactory.getInstance().getContentFactory().createContent(panel,AnalysisScopeBundle.message("backward.dependencies.toolwindow.title",builder.getScope().getDisplayName()),false);
          content.setDisposer(panel);
          panel.setContent(content);
          ((DependencyValidationManagerImpl)DependencyValidationManager.getInstance(myProject)).addContent(content);
        }
      }
);
    }
  }
;
  ProgressManager.getInstance().runProcessWithProgressAsynchronously(myProject,AnalysisScopeBundle.message("backward.dependencies.progress.text"),process,successRunnable,null,new PerformAnalysisInBackgroundOption(myProject));
}
