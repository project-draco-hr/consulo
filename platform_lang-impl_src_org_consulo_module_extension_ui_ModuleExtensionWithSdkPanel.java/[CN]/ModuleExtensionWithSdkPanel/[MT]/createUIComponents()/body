{
  myRoot=this;
  final Class<? extends SdkType> sdkType=myExtensionWithSdk.getSdkTypeClass();
  final ProjectSdksModel projectSdksModel=ProjectStructureConfigurable.getInstance(myExtensionWithSdk.getModule().getProject()).getProjectSdksModel();
  mySdkComboBox=new SdkComboBox(projectSdksModel,new Condition<SdkTypeId>(){
    @Override public boolean value(    SdkTypeId sdkTypeId){
      return sdkType.isAssignableFrom(sdkTypeId.getClass());
    }
  }
,true);
  mySdkComboBox.insertModuleItems(myExtensionWithSdk);
  final MutableModuleInheritableNamedPointer<Sdk> inheritableSdk=getInheritableSdk();
  if (inheritableSdk.isNull()) {
    mySdkComboBox.setSelectedNoneSdk();
  }
 else {
    final String sdkInheritModuleName=inheritableSdk.getModuleName();
    if (sdkInheritModuleName != null) {
      final Module sdkInheritModule=inheritableSdk.getModule();
      if (sdkInheritModule == null) {
        mySdkComboBox.addInvalidModuleItem(sdkInheritModuleName);
      }
      mySdkComboBox.setSelectedModule(sdkInheritModuleName);
    }
 else {
      mySdkComboBox.setSelectedSdk(inheritableSdk.getName());
    }
  }
  mySdkComboBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      inheritableSdk.set(mySdkComboBox.getSelectedModuleName(),mySdkComboBox.getSelectedSdkName());
      if (myClasspathStateUpdater != null) {
        SwingUtilities.invokeLater(myClasspathStateUpdater);
      }
    }
  }
);
}
