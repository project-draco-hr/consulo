{
class Abbreviator {
    static final int SUBPACKAGE_LIMIT=2;
    boolean shouldAbbreviateName(    PsiPackage p){
      return scanPackages(p,1);
    }
    boolean scanPackages(    PsiPackage p,    int packageNameOccurrencesFound){
      final PsiPackage[] subPackages=p.getSubPackages();
      packageNameOccurrencesFound+=subPackages.length;
      if (packageNameOccurrencesFound > SUBPACKAGE_LIMIT) {
        return true;
      }
      for (int idx=0; idx < subPackages.length; idx++) {
        if (scanPackages(subPackages[idx],packageNameOccurrencesFound)) {
          return true;
        }
      }
      return false;
    }
  }
  ;
  final Abbreviator abbreviator=new Abbreviator();
  final StringBuffer name=new StringBuffer(aPackage.getName());
  for (PsiPackage parentPackage=aPackage.getParentPackage(); parentPackage != null; parentPackage=parentPackage.getParentPackage()) {
    final String packageName=parentPackage.getName();
    if (packageName == null || packageName.length() == 0) {
      break;
    }
    name.insert(0,".");
    if (packageName.length() > 2 && abbreviator.shouldAbbreviateName(parentPackage)) {
      name.insert(0,packageName.substring(0,1));
    }
 else {
      name.insert(0,packageName);
    }
  }
  return name.toString();
}
