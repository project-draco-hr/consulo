{
  JPanel panel=new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP));
  panel.setBorder(IdeBorderFactory.createTitledBorder(RefactoringBundle.message("extract.method.method.panel.border")));
  JLabel nameLabel=new JLabel();
  nameLabel.setText(RefactoringBundle.message("name.prompt"));
  panel.add(nameLabel);
  panel.add(myNameField);
  nameLabel.setLabelFor(myNameField);
  myNameField.getDocument().addDocumentListener(new DocumentAdapter(){
    public void documentChanged(    DocumentEvent e){
      update();
    }
  }
);
  setOKActionEnabled(false);
  panel.add(myCbMakeStatic);
  if (myStaticFlag || myCanBeStatic) {
    myCbMakeStatic.setEnabled(!myStaticFlag);
    myCbMakeStatic.setSelected(myStaticFlag);
    myCbMakeStatic.addItemListener(new ItemListener(){
      public void itemStateChanged(      ItemEvent e){
        updateSignature();
      }
    }
);
  }
 else {
    myCbMakeStatic.setSelected(false);
    myCbMakeStatic.setEnabled(false);
  }
  if (myCbMakeVarargs != null) {
    updateVarargsEnabled();
    myCbMakeVarargs.setSelected(myWasStatic);
    panel.add(myCbMakeVarargs);
  }
  setOKActionEnabled(PsiManager.getInstance(myProject).getNameHelper().isIdentifier(myNameField.getText()));
  return panel;
}
