{
  JPanel panel=new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP));
  panel.setBorder(IdeBorderFactory.createTitledBorder(RefactoringBundle.message("extract.method.method.panel.border")));
  JLabel nameLabel=new JLabel();
  nameLabel.setText(RefactoringBundle.message("name.prompt"));
  panel.add(nameLabel);
  panel.add(myNameField);
  nameLabel.setLabelFor(myNameField);
  myNameField.getDocument().addDocumentListener(new DocumentAdapter(){
    public void documentChanged(    DocumentEvent e){
      update();
    }
  }
);
  setOKActionEnabled(false);
  panel.add(myCbMakeStatic);
  if (myStaticFlag || myCanBeStatic) {
    myCbMakeStatic.setEnabled(!myStaticFlag);
    myCbMakeStatic.setSelected(myStaticFlag);
    myCbMakeStatic.addItemListener(new ItemListener(){
      public void itemStateChanged(      ItemEvent e){
        updateSignature();
      }
    }
);
  }
 else {
    myCbMakeStatic.setSelected(false);
    myCbMakeStatic.setEnabled(false);
  }
  myFoldCb.setSelected(myVariableData.isFoldingSelectedByDefault());
  myFoldCb.setVisible(myVariableData.isFoldable());
  myVariableData.setFoldingAvailable(myFoldCb.isSelected());
  myFoldCb.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myVariableData.setFoldingAvailable(myFoldCb.isSelected());
      createParametersPanel();
      updateSignature();
    }
  }
);
  panel.add(myFoldCb);
  if (myCbMakeVarargs != null) {
    updateVarargsEnabled();
    myCbMakeVarargs.setSelected(false);
    panel.add(myCbMakeVarargs);
  }
  if (myCbChainedConstructor != null) {
    panel.add(myCbChainedConstructor);
    myCbChainedConstructor.addItemListener(new ItemListener(){
      public void itemStateChanged(      final ItemEvent e){
        if (myDefaultVisibility) {
          myChangingVisibility=true;
          try {
            if (isChainedConstructor()) {
              myVisibilityPanel.setVisibility(VisibilityUtil.getVisibilityModifier(myTargetClass.getModifierList()));
            }
 else {
              myVisibilityPanel.setVisibility(PsiModifier.PRIVATE);
            }
          }
  finally {
            myChangingVisibility=false;
          }
        }
        update();
      }
    }
);
  }
  setOKActionEnabled(JavaPsiFacade.getInstance(myProject).getNameHelper().isIdentifier(myNameField.getText()));
  return panel;
}
