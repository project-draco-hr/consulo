{
  PsiClass aClass=getPsiClass();
switch (random.nextInt(4)) {
case 0:
    mark("v");
  aClass.getContainingFile().accept(new PsiRecursiveElementVisitor(){
  }
);
break;
case 1:
mark("m");
for (int offset=0; offset < myFile.getTextLength(); offset++) {
myFile.findElementAt(offset);
}
break;
case 2:
mark("h");
aClass.accept(new PsiRecursiveElementVisitor(){
@Override public void visitElement(final PsiElement element){
super.visitElement(element);
final HighlightInfoHolder infoHolder=new HighlightInfoHolder(myFile,HighlightInfoFilter.EMPTY_ARRAY);
final HighlightVisitorImpl visitor=new HighlightVisitorImpl(getProject());
visitor.analyze(new Runnable(){
@Override public void run(){
visitor.visit(element,infoHolder);
}
}
,false,myFile);
}
}
);
break;
case 3:
mark("u");
for (PsiMethod method : aClass.getMethods()) {
method.getName();
}
break;
}
}
