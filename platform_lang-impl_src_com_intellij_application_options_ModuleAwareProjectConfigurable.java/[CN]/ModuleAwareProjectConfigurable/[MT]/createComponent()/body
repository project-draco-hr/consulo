{
  if (myProject.isDefault()) {
    T configurable=createDefaultProjectConfigurable();
    if (configurable != null) {
      myModuleConfigurables.put(null,configurable);
      return configurable.createComponent();
    }
  }
  final List<Module> modules=ContainerUtil.filter(ModuleAttachProcessor.getSortedModules(myProject),new Condition<Module>(){
    @Override public boolean value(    Module module){
      return isSuitableForModule(module);
    }
  }
);
  if (modules.size() == 1) {
    Module module=modules.get(0);
    final T configurable=createModuleConfigurable(module);
    myModuleConfigurables.put(module,configurable);
    return configurable.createComponent();
  }
  final Splitter splitter=new Splitter(false,0.25f);
  final JBList moduleList=new JBList(new CollectionListModel<Module>(modules));
  moduleList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  moduleList.setCellRenderer(new ModuleListCellRenderer());
  splitter.setFirstComponent(new JBScrollPane(moduleList));
  final CardLayout layout=new CardLayout();
  final JPanel cardPanel=new JPanel(layout);
  splitter.setSecondComponent(cardPanel);
  for (  Module module : modules) {
    final T configurable=createModuleConfigurable(module);
    myModuleConfigurables.put(module,configurable);
    final JComponent component=configurable.createComponent();
    cardPanel.add(component,module.getName());
  }
  moduleList.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      final Module value=(Module)moduleList.getSelectedValue();
      layout.show(cardPanel,value.getName());
    }
  }
);
  if (modules.size() > 0) {
    moduleList.setSelectedIndex(0);
    layout.show(cardPanel,modules.get(0).getName());
  }
  return splitter;
}
