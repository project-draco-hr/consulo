{
  if (file == null)   throw new DiffRequestProducerException("Can't show diff for '" + name + "'");
  if (file.getFileType().isBinary())   throw new DiffRequestProducerException("Can't show diff for binary file '" + name + "'");
  final Ref<ApplyPatchForBaseRevisionTexts> textsRef=new Ref<ApplyPatchForBaseRevisionTexts>();
  ApplicationManager.getApplication().invokeAndWait(new Runnable(){
    @Override public void run(){
      textsRef.set(textsGetter.get());
    }
  }
,indicator.getModalityState());
  ApplyPatchForBaseRevisionTexts texts=textsRef.get();
  if (texts.getLocal() == null)   throw new DiffRequestProducerException("Can't show diff for '" + file.getPresentableUrl() + "'");
  if (texts.getBase() == null) {
    String localContent=texts.getLocal().toString();
    String patchedContent=texts.getPatched();
    return createBadDiffRequest(project,file,localContent,patchedContent,null,null,null);
  }
 else {
    String localContent=texts.getLocal().toString();
    String baseContent=texts.getBase().toString();
    String patchedContent=texts.getPatched();
    return createDiffRequest(project,file,ContainerUtil.list(localContent,baseContent,patchedContent),null,ContainerUtil.list("Current Version","Base Version",afterTitle));
  }
}
