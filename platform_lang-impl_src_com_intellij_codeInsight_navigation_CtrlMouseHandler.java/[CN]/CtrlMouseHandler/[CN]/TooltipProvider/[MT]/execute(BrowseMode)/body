{
  myBrowseMode=browseMode;
  Document document=myEditor.getDocument();
  final PsiFile file=PsiDocumentManager.getInstance(myProject).getPsiFile(document);
  if (file == null)   return;
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  if (EditorUtil.inVirtualSpace(myEditor,myPosition)) {
    return;
  }
  final int offset=myEditor.logicalPositionToOffset(myPosition);
  int selStart=myEditor.getSelectionModel().getSelectionStart();
  int selEnd=myEditor.getSelectionModel().getSelectionEnd();
  if (offset >= selStart && offset < selEnd)   return;
  ProgressIndicatorUtils.scheduleWithWriteActionPriority(myProgress,new ReadTask(){
    @RequiredReadAction @Override public void computeInReadAction(    @NotNull ProgressIndicator indicator){
      doExecute(file,offset);
    }
    @Override public void onCanceled(    @NotNull ProgressIndicator indicator){
    }
  }
);
}
