{
  myBrowseMode=browseMode;
  Document document=myEditor.getDocument();
  final PsiFile file=PsiDocumentManager.getInstance(myProject).getPsiFile(document);
  if (file == null)   return;
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  if (EditorUtil.inVirtualSpace(myEditor,myPosition)) {
    return;
  }
  final int offset=myEditor.logicalPositionToOffset(myPosition);
  int selStart=myEditor.getSelectionModel().getSelectionStart();
  int selEnd=myEditor.getSelectionModel().getSelectionEnd();
  if (offset >= selStart && offset < selEnd)   return;
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    public void run(){
      final ProgressIndicator progressIndicator=new ProgressIndicatorBase();
      final ApplicationAdapter listener=new ApplicationAdapter(){
        @Override public void beforeWriteActionStart(        Object action){
          progressIndicator.cancel();
        }
      }
;
      final Application application=ApplicationManager.getApplication();
      try {
        application.addApplicationListener(listener);
        ProgressManager.getInstance().runProcess(new Runnable(){
          @Override public void run(){
            application.runReadAction(new Runnable(){
              public void run(){
                doExecute(file,offset);
              }
            }
);
          }
        }
,progressIndicator);
      }
  finally {
        application.removeApplicationListener(listener);
      }
    }
  }
);
}
