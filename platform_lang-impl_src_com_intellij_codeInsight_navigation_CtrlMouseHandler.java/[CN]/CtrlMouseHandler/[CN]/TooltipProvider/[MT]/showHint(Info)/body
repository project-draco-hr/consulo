{
  if (myDisposed || myEditor.isDisposed())   return;
  Component internalComponent=myEditor.getContentComponent();
  if (myHighlighter != null) {
    if (!info.isSimilarTo(myHighlighter.getStoredInfo())) {
      disposeHighlighter();
    }
 else {
      internalComponent.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
      return;
    }
  }
  if (!info.isValid(myEditor.getDocument())) {
    return;
  }
  myHighlighter=installHighlighterSet(info,myEditor);
  DocInfo docInfo=info.getInfo();
  if (docInfo.text == null)   return;
  if (myDocumentationManager.hasActiveDockedDocWindow()) {
    info.showDocInfo(myDocumentationManager);
  }
  HyperlinkListener hyperlinkListener=docInfo.docProvider == null ? null : new QuickDocHyperlinkListener(docInfo.docProvider,info.myElementAtPointer);
  final Ref<QuickDocInfoPane> quickDocPaneRef=new Ref<QuickDocInfoPane>();
  MouseListener mouseListener=new MouseAdapter(){
    @Override public void mouseEntered(    MouseEvent e){
      QuickDocInfoPane pane=quickDocPaneRef.get();
      if (pane != null) {
        pane.mouseEntered(e);
      }
    }
    @Override public void mouseExited(    MouseEvent e){
      QuickDocInfoPane pane=quickDocPaneRef.get();
      if (pane != null) {
        pane.mouseExited(e);
      }
    }
  }
;
  Ref<Consumer<String>> newTextConsumerRef=new Ref<Consumer<String>>();
  JComponent label=HintUtil.createInformationLabel(docInfo.text,hyperlinkListener,mouseListener,newTextConsumerRef);
  Consumer<String> newTextConsumer=newTextConsumerRef.get();
  QuickDocInfoPane quickDocPane=null;
  if (docInfo.documentationAnchor != null) {
    quickDocPane=new QuickDocInfoPane(docInfo.documentationAnchor,info.myElementAtPointer,label);
    quickDocPaneRef.set(quickDocPane);
  }
  JComponent hintContent=quickDocPane == null ? label : quickDocPane;
  final LightweightHint hint=new LightweightHint(hintContent);
  myHint=hint;
  hint.addHintListener(new HintListener(){
    @Override public void hintHidden(    EventObject event){
      myHint=null;
    }
  }
);
  myDocAlarm.cancelAllRequests();
  if (newTextConsumer != null && docInfo.docProvider != null && docInfo.documentationAnchor != null) {
    fulfillDocInfo(docInfo.text,docInfo.docProvider,info.myElementAtPointer,docInfo.documentationAnchor,newTextConsumer,hint);
  }
  showHint(hint);
}
