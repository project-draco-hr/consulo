{
  if (myDisposed || myEditor.isDisposed())   return;
  Component internalComponent=myEditor.getContentComponent();
  if (myHighlighter != null) {
    if (!info.isSimilarTo(myHighlighter.getStoredInfo())) {
      disposeHighlighter();
    }
 else {
      internalComponent.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
      return;
    }
  }
  if (!info.isValid(myEditor.getDocument())) {
    return;
  }
  myHighlighter=installHighlighterSet(info,myEditor);
  DocInfo docInfo=info.getInfo();
  if (docInfo.text == null)   return;
  if (myDocumentationManager.hasActiveDockedDocWindow()) {
    info.showDocInfo(myDocumentationManager);
  }
  HyperlinkListener hyperlinkListener=docInfo.docProvider == null ? null : new QuickDocHyperlinkListener(myProject,myDocumentationManager,docInfo.docProvider,info.myElementAtPointer);
  final Ref<QuickDocInfoPane> quickDocPaneRef=new Ref<QuickDocInfoPane>();
  MouseListener mouseListener=new MouseAdapter(){
    @Override public void mouseEntered(    MouseEvent e){
      QuickDocInfoPane pane=quickDocPaneRef.get();
      if (pane != null) {
        pane.mouseEntered(e);
      }
    }
    @Override public void mouseExited(    MouseEvent e){
      QuickDocInfoPane pane=quickDocPaneRef.get();
      if (pane != null) {
        pane.mouseExited(e);
      }
    }
  }
;
  JComponent label=HintUtil.createInformationLabel(docInfo.text,hyperlinkListener,mouseListener);
  QuickDocInfoPane quickDocPane=null;
  if (docInfo.documentationAnchor != null) {
    quickDocPane=new QuickDocInfoPane(docInfo.documentationAnchor,info.myElementAtPointer,label);
    quickDocPaneRef.set(quickDocPane);
  }
  JComponent hintContent=quickDocPane == null ? label : quickDocPane;
  final LightweightHint hint=new LightweightHint(hintContent);
  final HintManagerImpl hintManager=HintManagerImpl.getInstanceImpl();
  Point p=HintManagerImpl.getHintPosition(hint,myEditor,myPosition,HintManager.ABOVE);
  hintManager.showEditorHint(hint,myEditor,p,HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_SCROLLING,0,false,HintManagerImpl.createHintHint(myEditor,p,hint,HintManager.ABOVE).setContentActive(false));
}
