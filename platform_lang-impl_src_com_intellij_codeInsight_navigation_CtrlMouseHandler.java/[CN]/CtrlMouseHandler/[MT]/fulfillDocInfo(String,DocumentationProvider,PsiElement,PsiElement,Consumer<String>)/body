{
  myDocAlarm.cancelAllRequests();
  myDocAlarm.addRequest(new Runnable(){
    @Override public void run(){
      final Ref<String> fullTextRef=new Ref<String>();
      final Ref<String> qualifiedNameRef=new Ref<String>();
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        @Override public void run(){
          fullTextRef.set(provider.generateDoc(anchorElement,originalElement));
          if (anchorElement instanceof PsiQualifiedNamedElement) {
            qualifiedNameRef.set(((PsiQualifiedNamedElement)anchorElement).getQualifiedName());
          }
        }
      }
);
      String fullText=fullTextRef.get();
      if (fullText == null) {
        return;
      }
      final String updatedText=DocPreviewUtil.buildPreview(header,qualifiedNameRef.get(),fullText);
      UIUtil.invokeLaterIfNeeded(new Runnable(){
        @Override public void run(){
          JComponent tipComponent=null;
          Dimension oldSize=null;
          IdeTooltip tooltip=myTooltipManager.getCurrentTooltip();
          if (tooltip != null) {
            tipComponent=tooltip.getTipComponent();
            if (tipComponent != null) {
              oldSize=tipComponent.getPreferredSize();
            }
          }
          newTextConsumer.consume(updatedText);
          int widthChange=0;
          int heightChange=0;
          if (oldSize != null) {
            Dimension newSize=tipComponent.getPreferredSize();
            if (!oldSize.equals(newSize)) {
              widthChange=newSize.width - oldSize.width;
              heightChange=newSize.height - oldSize.height;
            }
          }
          if (widthChange == 0 && heightChange == 0) {
            return;
          }
          Container topLevelLayeredPaneChild=null;
          boolean adjustBounds=false;
          for (Container current=tipComponent.getParent(); current != null; current=current.getParent()) {
            if (current instanceof JLayeredPane) {
              adjustBounds=true;
              break;
            }
 else {
              topLevelLayeredPaneChild=current;
            }
          }
          if (adjustBounds && topLevelLayeredPaneChild != null) {
            Rectangle bounds=topLevelLayeredPaneChild.getBounds();
            topLevelLayeredPaneChild.setBounds(bounds.x,bounds.y,bounds.width + widthChange,bounds.height + heightChange);
          }
        }
      }
);
    }
  }
,0);
}
