{
  return new ChangesTreeList<Change>(myProject,Collections.<Change>emptyList(),false,false,null,null){
    @Override protected DefaultTreeModel buildTreeModel(    List<Change> cc,    ChangeNodeDecorator changeNodeDecorator){
      return new TreeModelBuilder(myProject,isShowFlatten()).buildModel(cc,changeNodeDecorator);
    }
    @Override protected List<Change> getSelectedObjects(    ChangesBrowserNode node){
      return node.getAllChangesUnder();
    }
    protected Change getLeadSelectedObject(    final ChangesBrowserNode node){
      final Object o=node.getUserObject();
      if (o instanceof Change) {
        return (Change)o;
      }
      return null;
    }
  }
;
}
