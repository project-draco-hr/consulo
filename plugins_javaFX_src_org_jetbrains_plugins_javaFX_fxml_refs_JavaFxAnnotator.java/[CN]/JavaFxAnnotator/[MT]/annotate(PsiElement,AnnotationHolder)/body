{
  final PsiFile containingFile=element.getContainingFile();
  if (!JavaFxFileTypeFactory.isFxml(containingFile))   return;
  if (element instanceof XmlAttributeValue) {
    final PsiReference[] references=element.getReferences();
    for (    PsiReference reference : references) {
      final PsiElement resolve=reference.resolve();
      if (resolve instanceof PsiMember) {
        if (!((PsiMember)resolve).hasModifierProperty(PsiModifier.PUBLIC) && !AnnotationUtil.isAnnotated((PsiMember)resolve,Collections.singleton(JavaFxCommonClassNames.JAVAFX_FXML_ANNOTATION))) {
          final String symbolPresentation="'" + SymbolPresentationUtil.getSymbolPresentableText(resolve) + "'";
          final Annotation annotation=holder.createErrorAnnotation(element,symbolPresentation + (resolve instanceof PsiClass ? " should be public" : " should be public or annotated with @FXML"));
          if (!(resolve instanceof PsiClass)) {
            annotation.registerUniversalFix(new AddAnnotationFix(JavaFxCommonClassNames.JAVAFX_FXML_ANNOTATION,(PsiMember)resolve,ArrayUtil.EMPTY_STRING_ARRAY),null,null);
          }
        }
      }
    }
    if (references.length == 0) {
      final String attributeValueText=StringUtil.stripQuotesAroundValue(element.getText());
      if (attributeValueText.startsWith("#")) {
        attachColorIcon(element,holder,attributeValueText);
      }
    }
  }
}
