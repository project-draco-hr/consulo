{
  if (list1.isEmpty() && list2.isEmpty()) {
    return Collections.emptyList();
  }
 else   if (list1.isEmpty()) {
    return (List<T>)list2;
  }
 else   if (list2.isEmpty()) {
    return (List<T>)list1;
  }
  final int size1=list1.size();
  final int size=size1 + list2.size();
  return new AbstractList<T>(){
    @Override public T get(    int index){
      if (index < size1) {
        return list1.get(index);
      }
      return list2.get(index - size1);
    }
    @Override public int size(){
      return size;
    }
  }
;
}
