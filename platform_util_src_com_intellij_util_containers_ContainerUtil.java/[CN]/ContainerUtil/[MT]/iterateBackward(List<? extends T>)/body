{
  return new Iterable<T>(){
    @Override public Iterator<T> iterator(){
      return new Iterator<T>(){
        ListIterator<? extends T> it=list.listIterator(list.size());
        @Override public boolean hasNext(){
          return it.hasPrevious();
        }
        @Override public T next(){
          return it.previous();
        }
        @Override public void remove(){
          it.remove();
        }
      }
;
    }
  }
;
}
