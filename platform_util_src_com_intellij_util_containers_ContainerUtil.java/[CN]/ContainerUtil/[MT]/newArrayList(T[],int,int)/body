{
  if (start < 0 || start > end || end > elements.length) {
    throw new IllegalArgumentException("start:" + start + " end:"+ end+ " length:"+ elements.length);
  }
  return new AbstractList<T>(){
    private final int size=end - start;
    @Override public T get(    final int index){
      if (index < 0 || index >= size)       throw new IndexOutOfBoundsException("index:" + index + " size:"+ size);
      return elements[start + index];
    }
    @Override public int size(){
      return size;
    }
  }
;
}
