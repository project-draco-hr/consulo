{
  int size=0;
  for (  List<? extends T> each : lists) {
    size+=each.size();
  }
  final int finalSize=size;
  return new AbstractList<T>(){
    public T get(    final int index){
      if (index >= 0 && index < finalSize) {
        int from=0;
        for (        List<? extends T> each : lists) {
          if (from <= index && index < from + each.size())           return each.get(index - from);
          from+=each.size();
        }
      }
      throw new IndexOutOfBoundsException("index: " + index + "size: "+ size());
    }
    public int size(){
      return finalSize;
    }
  }
;
}
