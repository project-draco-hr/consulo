{
  if (collection.isEmpty())   return emptyIterable();
  return new Iterable<T>(){
    public Iterator<T> iterator(){
      return new Iterator<T>(){
        Iterator<? extends T> impl=collection.iterator();
        T next=findNext();
        public boolean hasNext(){
          return next != null;
        }
        public T next(){
          T result=next;
          next=findNext();
          return result;
        }
        private T findNext(){
          while (impl.hasNext()) {
            T each=impl.next();
            if (condition.value(each)) {
              return each;
            }
          }
          return null;
        }
        public void remove(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
  }
;
}
