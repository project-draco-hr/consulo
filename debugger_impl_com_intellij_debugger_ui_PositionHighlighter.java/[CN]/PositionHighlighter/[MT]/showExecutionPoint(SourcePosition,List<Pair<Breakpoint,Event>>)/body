{
  if (myExecutionPointDescription != null) {
    myExecutionPointDescription.remove();
  }
  int lineIndex=position.getLine();
  Editor editor=getEditor(position);
  if (editor == null) {
    return;
  }
  myExecutionPointDescription=SelectionDescription.createExecutionPoint(editor,lineIndex);
  myExecutionPointDescription.select();
  RangeHighlighter highlighter=myExecutionPointDescription.getHighlighter();
  if (highlighter != null) {
    final List<Pair<Breakpoint,Event>> eventsOutOfLine=new ArrayList<Pair<Breakpoint,Event>>();
    for (Iterator<Pair<Breakpoint,Event>> iterator=events.iterator(); iterator.hasNext(); ) {
      final Pair<Breakpoint,Event> eventDescriptor=iterator.next();
      final Breakpoint breakpoint=eventDescriptor.getFirst();
      if (breakpoint instanceof MethodBreakpoint) {
        try {
          if (!((MethodBreakpoint)breakpoint).matchesEvent((LocatableEvent)eventDescriptor.getSecond(),myContext.getDebugProcess())) {
            continue;
          }
        }
 catch (        EvaluateException ignored) {
        }
      }
 else       if (breakpoint instanceof WildcardMethodBreakpoint) {
        if (!((WildcardMethodBreakpoint)breakpoint).matchesEvent((LocatableEvent)eventDescriptor.getSecond())) {
          continue;
        }
      }
      if (breakpoint instanceof BreakpointWithHighlighter) {
        breakpoint.reload();
        final SourcePosition sourcePosition=((BreakpointWithHighlighter)breakpoint).getSourcePosition();
        if (sourcePosition == null || sourcePosition.getLine() != lineIndex) {
          eventsOutOfLine.add(eventDescriptor);
        }
      }
 else {
        eventsOutOfLine.add(eventDescriptor);
      }
    }
    if (eventsOutOfLine.size() > 0) {
      highlighter.setGutterIconRenderer(new GutterIconRenderer(){
        @NotNull public Icon getIcon(){
          return eventsOutOfLine.get(0).getFirst().getIcon();
        }
        public String getTooltipText(){
          DebugProcessImpl debugProcess=myContext.getDebugProcess();
          if (debugProcess != null) {
            final StringBuilder buf=StringBuilderSpinAllocator.alloc();
            try {
              buf.append("<html><body>");
              for (Iterator<Pair<Breakpoint,Event>> iterator=eventsOutOfLine.iterator(); iterator.hasNext(); ) {
                Pair<Breakpoint,Event> eventDescriptor=iterator.next();
                buf.append(((DebugProcessEvents)debugProcess).getEventText(eventDescriptor));
                if (iterator.hasNext()) {
                  buf.append("<br>");
                }
              }
              buf.append("</body></html>");
              return buf.toString();
            }
  finally {
              StringBuilderSpinAllocator.dispose(buf);
            }
          }
 else {
            return null;
          }
        }
        public ActionGroup getPopupMenuActions(){
          DefaultActionGroup group=new DefaultActionGroup();
          for (Iterator<Pair<Breakpoint,Event>> iterator=eventsOutOfLine.iterator(); iterator.hasNext(); ) {
            Pair<Breakpoint,Event> eventDescriptor=iterator.next();
            Breakpoint breakpoint=eventDescriptor.getFirst();
            ViewBreakpointsAction viewBreakpointsAction=new ViewBreakpointsAction(breakpoint.getDisplayName());
            viewBreakpointsAction.setInitialBreakpoint(breakpoint);
            group.add(viewBreakpointsAction);
          }
          return group;
        }
      }
);
    }
  }
}
