{
  for (Iterator<Pair<Breakpoint,Event>> iterator=events.iterator(); iterator.hasNext(); ) {
    final Pair<Breakpoint,Event> eventDescriptor=iterator.next();
    final Breakpoint breakpoint=eventDescriptor.getFirst();
    if (breakpoint instanceof LineBreakpoint) {
      breakpoint.reload();
      final SourcePosition breakPosition=((BreakpointWithHighlighter)breakpoint).getSourcePosition();
      if (breakPosition != null && breakPosition.getLine() != position.getLine()) {
        position=SourcePosition.createFromLine(position.getFile(),breakPosition.getLine());
      }
    }
 else     if (breakpoint instanceof MethodBreakpoint) {
      final MethodBreakpoint methodBreakpoint=(MethodBreakpoint)breakpoint;
      methodBreakpoint.reload();
      final SourcePosition breakPosition=methodBreakpoint.getSourcePosition();
      final LocatableEvent event=(LocatableEvent)eventDescriptor.getSecond();
      if (breakPosition != null && breakPosition.getFile().equals(position.getFile()) && breakPosition.getLine() != position.getLine() && event instanceof MethodEntryEvent) {
        try {
          if (methodBreakpoint.matchesEvent(event,myContext.getDebugProcess())) {
            position=SourcePosition.createFromLine(position.getFile(),breakPosition.getLine());
          }
        }
 catch (        EvaluateException ignored) {
        }
      }
    }
  }
  return position;
}
