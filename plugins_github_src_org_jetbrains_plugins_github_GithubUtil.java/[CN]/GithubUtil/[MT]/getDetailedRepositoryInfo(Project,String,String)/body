{
  final GithubSettings settings=GithubSettings.getInstance();
  final String password=settings.getPassword();
  final Boolean validCredentials=accessToGithubWithModalProgress(project,new Computable<Boolean>(){
    @Override public Boolean compute(){
      ProgressManager.getInstance().getProgressIndicator().setText("Trying to login to GitHub");
      return testConnection(settings.getHost(),settings.getLogin(),password);
    }
  }
);
  if (validCredentials == null) {
    return null;
  }
  if (!validCredentials) {
    final GithubLoginDialog dialog=new GithubLoginDialog(project);
    dialog.show();
    if (!dialog.isOK()) {
      return null;
    }
  }
  final String validPassword=settings.getPassword();
  return accessToGithubWithModalProgress(project,new Computable<RepositoryInfo>(){
    @Nullable @Override public RepositoryInfo compute(){
      ProgressManager.getInstance().getProgressIndicator().setText("Extracting detailed info about repository ''" + name + "''");
      return getDetailedRepoInfo(settings.getHost(),settings.getLogin(),validPassword,owner,name);
    }
  }
);
}
