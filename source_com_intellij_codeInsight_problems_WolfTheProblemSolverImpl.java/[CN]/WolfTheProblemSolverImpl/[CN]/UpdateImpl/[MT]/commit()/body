{
  Set<VirtualFile> added=new THashSet<VirtualFile>();
  added.addAll(problems.keySet());
  added.removeAll(backedProblems.keySet());
  Set<VirtualFile> removed=new THashSet<VirtualFile>();
  for (  VirtualFile oldFile : backedProblems.keySet()) {
    if (scope.belongs(oldFile.getUrl())) {
      removed.add(oldFile);
    }
  }
  removed.removeAll(problems.keySet());
synchronized (myProblems) {
    for (    VirtualFile addedFile : added) {
      Collection<ProblemImpl> addedProblems=problems.get(addedFile);
      Collection<ProblemImpl> existingProblems=myProblems.get(addedFile);
      if (existingProblems == null) {
        myProblems.put(addedFile,addedProblems);
      }
 else {
        existingProblems.addAll(addedProblems);
      }
    }
    for (    VirtualFile removedFile : removed) {
      myProblems.remove(removedFile);
    }
  }
  if (!added.isEmpty() || !removed.isEmpty()) {
    fireProblemListeners.problemsChanged(added,removed);
  }
  problems.clear();
}
