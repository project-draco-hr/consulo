{
  if (!myProject.isOpen())   return;
  long psiModificationCount=PsiManager.getInstance(myProject).getModificationTracker().getOutOfCodeBlockModificationCount();
  if (psiModificationCount == myPsiModificationCount)   return;
  progressablePass.setProgressLimit(myCheckingQueue.size());
  try {
    for (    VirtualFile virtualFile : myCheckingQueue) {
      if (progress.isCanceled())       break;
      if (virtualFile.isValid()) {
        myCheckingQueue.remove(virtualFile);
        myCheckingQueue.add(virtualFile);
        orderVincentToCleanTheCar(virtualFile,progress);
        progressablePass.advanceProgress();
      }
 else {
synchronized (myProblems) {
          myProblems.remove(virtualFile);
          myCheckingQueue.remove(virtualFile);
        }
      }
    }
    myPsiModificationCount=psiModificationCount;
  }
 catch (  ProcessCanceledException e) {
  }
}
