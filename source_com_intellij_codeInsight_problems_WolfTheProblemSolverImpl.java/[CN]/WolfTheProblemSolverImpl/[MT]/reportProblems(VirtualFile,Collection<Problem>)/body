{
  if (problems.isEmpty()) {
    clearProblems(file);
    return;
  }
  if (!isToBeHighlighted(file))   return;
synchronized (myProblems) {
    boolean hasProblemsBefore=myProblems.remove(file) != null;
    ProblemFileInfo storedProblems=new ProblemFileInfo();
    myProblems.put(file,storedProblems);
    for (    Problem problem : problems) {
      storedProblems.problems.add(problem);
      storedProblems.hasSyntaxErrors|=((ProblemImpl)problem).isSyntaxOnly();
      myCheckingQueue.addIfAbsent(file);
    }
    if (!hasProblemsBefore) {
      fireProblemListeners.problemsAppeared(file);
    }
 else {
      fireProblemListeners.problemsChanged(file);
    }
  }
}
