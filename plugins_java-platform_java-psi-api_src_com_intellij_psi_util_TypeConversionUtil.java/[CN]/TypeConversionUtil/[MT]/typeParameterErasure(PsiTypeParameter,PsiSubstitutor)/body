{
  final PsiClassType[] extendsList=typeParameter.getExtendsList().getReferencedTypes();
  if (extendsList.length > 0) {
    final PsiClass psiClass=extendsList[0].resolve();
    if (psiClass instanceof PsiTypeParameter) {
      Set<PsiClass> visited=new THashSet<PsiClass>();
      visited.add(psiClass);
      final PsiTypeParameter boundTypeParameter=(PsiTypeParameter)psiClass;
      if (beforeSubstitutor.getSubstitutionMap().containsKey(boundTypeParameter)) {
        return erasure(beforeSubstitutor.substitute(boundTypeParameter));
      }
      return typeParameterErasureInner(boundTypeParameter,visited,beforeSubstitutor);
    }
 else     if (psiClass != null) {
      return JavaPsiFacade.getInstance(typeParameter.getProject()).getElementFactory().createType(psiClass);
    }
  }
  return PsiType.getJavaLangObject(typeParameter.getManager(),typeParameter.getResolveScope());
}
