{
  if (visited != null && visited.contains(derived))   return true;
  if (languageLevel.compareTo(LanguageLevel.JDK_1_5) < 0)   return true;
  PsiClass base=baseResult.getElement();
  PsiClass[] supers=derived.getSupers();
  if (manager.areElementsEquivalent(base,derived)) {
    derivedSubstitutor=getSuperClassSubstitutor(derived,derived,derivedSubstitutor);
    return areSameArgumentTypes(derived,baseResult.getSubstitutor(),derivedSubstitutor,1);
  }
 else   if (base.isInheritor(derived,true)) {
    derivedSubstitutor=getSuperClassSubstitutor(derived,derived,derivedSubstitutor);
    PsiSubstitutor baseSubstitutor=getSuperClassSubstitutor(derived,base,baseResult.getSubstitutor());
    if (!areSameArgumentTypes(derived,baseSubstitutor,derivedSubstitutor))     return false;
  }
  if (visited == null)   visited=new THashSet<PsiClass>();
  visited.add(derived);
  for (  PsiClass aSuper : supers) {
    PsiSubstitutor s=getSuperClassSubstitutor(aSuper,derived,derivedSubstitutor);
    if (!checkSuperTypesWithDifferentTypeArguments(baseResult,aSuper,manager,s,visited,languageLevel))     return false;
  }
  return true;
}
