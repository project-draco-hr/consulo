{
  if (things.isEmpty()) {
    return true;
  }
  if (things.size() == 1) {
    T t=things.get(0);
    return thingProcessor.process(t);
  }
  final ProgressWrapper wrapper=progress instanceof ProgressWrapper ? (ProgressWrapper)progress : ProgressWrapper.wrap(progress);
  return invokeConcurrentlyForAll(things,failFastOnAcquireReadAction,new Processor<T>(){
    public boolean process(    final T t){
      final boolean[] result=new boolean[1];
      ((ProgressManagerImpl)ProgressManager.getInstance()).executeProcessUnderProgress(new Runnable(){
        public void run(){
          result[0]=thingProcessor.process(t);
        }
      }
,wrapper);
      return result[0];
    }
  }
);
}
