{
  if (things.isEmpty())   return true;
  if (things.size() <= 1 || JobSchedulerImpl.CORES_COUNT <= CORES_FORK_THRESHOLD) {
    final AtomicBoolean result=new AtomicBoolean(true);
    Runnable runnable=new Runnable(){
      @Override public void run(){
        ProgressManager.getInstance().executeProcessUnderProgress(new Runnable(){
          @Override public void run(){
            for (int i=0; i < things.size(); i++) {
              T thing=things.get(i);
              if (!thingProcessor.process(thing)) {
                result.set(false);
                break;
              }
            }
          }
        }
,progress);
      }
    }
;
    if (runInReadAction) {
      if (!ApplicationManagerEx.getApplicationEx().tryRunReadAction(runnable))       return false;
    }
 else {
      runnable.run();
    }
    return result.get();
  }
  return null;
}
