{
  final Runnable buildingRunnable=new Runnable(){
    @Override public void run(){
      ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
      if (indicator != null) {
        indicator.setText(SCANNING_PACKAGES_MESSAGE);
        indicator.setIndeterminate(true);
      }
      countFiles(project);
      if (indicator != null) {
        indicator.setIndeterminate(false);
      }
      myFileIndex.iterateContent(new MyContentIterator());
    }
  }
;
  final TreeModel treeModel=new TreeModel(myRoot);
  if (showProgress) {
    final Task.Backgroundable backgroundable=new Task.Backgroundable(project,AnalysisScopeBundle.message("package.dependencies.build.process.title")){
      @Override public void run(      @NotNull ProgressIndicator indicator){
        buildingRunnable.run();
      }
      @RequiredDispatchThread @Override public void onSuccess(){
        if (project.isDisposed())         return;
        myRoot.setSorted(false);
        myRoot.sortChildren();
        treeModel.reload(myRoot);
        if (successRunnable != null) {
          successRunnable.run();
        }
      }
    }
;
    ProgressManager.getInstance().run(backgroundable);
  }
 else {
    buildingRunnable.run();
  }
  treeModel.setTotalFileCount(myTotalFileCount);
  treeModel.setMarkedFileCount(myMarkedFileCount);
  return treeModel;
}
