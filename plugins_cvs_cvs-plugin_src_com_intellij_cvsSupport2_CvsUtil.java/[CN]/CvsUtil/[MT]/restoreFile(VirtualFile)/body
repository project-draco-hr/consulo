{
  CvsEntriesManager cvsEntriesManager=CvsEntriesManager.getInstance();
  VirtualFile directory=file == null ? null : file.getParent();
  LOG.assertTrue(directory != null);
  CvsInfo cvsInfo=cvsEntriesManager.getCvsInfoFor(directory);
  Entry entry=cvsInfo.getEntryNamed(file.getName());
  LOG.assertTrue(entry != null);
  String revision=entry.getRevision();
  LOG.assertTrue(StringUtil.startsWithChar(revision,'-'));
  String originalRevision=revision.substring(1);
  String date=Entry.formatLastModifiedDate(CvsStatusProvider.createDateDiffersTo(file.getTimeStamp()));
  String kwdSubstitution=entry.getOptions() == null ? "" : entry.getOptions();
  String stickyDataString=entry.getStickyData();
  Entry newEntry=Entry.createEntryForLine("/" + file.getName() + "/"+ originalRevision+ "/"+ date+ "/"+ kwdSubstitution+ "/"+ stickyDataString);
  try {
    saveEntryForFile(CvsVfsUtil.getFileFor(file),newEntry);
    cvsEntriesManager.clearCachedEntriesFor(directory);
  }
 catch (  final IOException e) {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        Messages.showErrorDialog(CvsBundle.message("message.error.restore.entry",file.getPresentableUrl(),e.getLocalizedMessage()),CvsBundle.message("message.error.restore.entry.title"));
      }
    }
);
  }
}
