{
  final ArrayList<PomTarget> result=arrayList();
  for (  final PomReference pomReference : findReferencesAt(editor,TargetElementUtilBase.adjustOffset(editor.getDocument(),offset),false)) {
    for (    PomTarget target : pomReference.multiResolve()) {
      if (target.canNavigate()) {
        result.add(target);
      }
    }
  }
  if (!result.isEmpty()) {
    return result;
  }
  final Project project=editor.getProject();
  final TargetElementUtilBase oldStuff=TargetElementUtilBase.getInstance();
  if (project != null) {
    int flags=oldStuff.getAllAccepted() & ~TargetElementUtilBase.ELEMENT_NAME_ACCEPTED;
    PsiElement targetElement=oldStuff.findTargetElement(editor,flags,offset);
    if (targetElement != null) {
      return Arrays.<PomTarget>asList(new DelegatePsiTarget(targetElement));
    }
  }
  final PsiReference psiReference=TargetElementUtilBase.findReference(editor,offset);
  if (psiReference != null) {
    for (    PsiElement psiElement : oldStuff.getTargetCandidates(psiReference)) {
      PsiElement navElement=oldStuff.getGotoDeclarationTarget(psiElement,psiElement.getNavigationElement());
      result.add(PomReferenceUtil.convertPsi2Target(navElement));
    }
  }
  return result;
}
