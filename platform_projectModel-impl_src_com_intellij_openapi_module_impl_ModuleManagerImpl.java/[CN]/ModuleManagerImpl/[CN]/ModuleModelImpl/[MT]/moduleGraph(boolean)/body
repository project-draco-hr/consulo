{
  return GraphGenerator.create(CachingSemiGraph.create(new GraphGenerator.SemiGraph<Module>(){
    @Override public Collection<Module> getNodes(){
      return myPathToModule.values();
    }
    @Override public Iterator<Module> getIn(    Module m){
      Module[] dependentModules=ModuleRootManager.getInstance(m).getDependencies(includeTests);
      return Arrays.asList(dependentModules).iterator();
    }
  }
));
}
