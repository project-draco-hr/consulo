{
  myModuleModel.myModulesCache=null;
  myModificationCount++;
  ApplicationManager.getApplication().assertWriteAccessAllowed();
  final Collection<Module> oldModules=myModuleModel.myModules;
  final Collection<Module> newModules=moduleModel.myModules;
  final List<Module> removedModules=new ArrayList<Module>(oldModules);
  removedModules.removeAll(newModules);
  final List<Module> addedModules=new ArrayList<Module>(newModules);
  addedModules.removeAll(oldModules);
  ProjectRootManagerEx.getInstanceEx(myProject).makeRootsChange(new Runnable(){
    @Override public void run(){
      for (      Module removedModule : removedModules) {
        fireBeforeModuleRemoved(removedModule);
        cleanCachedStuff();
      }
      List<Module> neverAddedModules=new ArrayList<Module>(moduleModel.myModulesToDispose);
      neverAddedModules.removeAll(myModuleModel.myModules);
      for (      final Module neverAddedModule : neverAddedModules) {
        neverAddedModule.putUserData(DISPOSED_MODULE_NAME,neverAddedModule.getName());
        Disposer.dispose(neverAddedModule);
      }
      if (runnable != null) {
        runnable.run();
      }
      final Map<Module,String> modulesToNewNamesMap=moduleModel.myModuleToNewName;
      final Set<Module> modulesToBeRenamed=modulesToNewNamesMap.keySet();
      modulesToBeRenamed.removeAll(moduleModel.myModulesToDispose);
      final List<Module> modules=new ArrayList<Module>();
      for (      final Module moduleToBeRenamed : modulesToBeRenamed) {
        ModuleEx module=(ModuleEx)moduleToBeRenamed;
        moduleModel.myModules.remove(moduleToBeRenamed);
        modules.add(moduleToBeRenamed);
        module.rename(modulesToNewNamesMap.get(moduleToBeRenamed));
        moduleModel.myModules.add(module);
      }
      moduleModel.myIsWritable=false;
      myModuleModel=moduleModel;
      for (      Module module : removedModules) {
        fireModuleRemoved(module);
        cleanCachedStuff();
        Disposer.dispose(module);
        cleanCachedStuff();
      }
      for (      Module addedModule : addedModules) {
        ((ModuleEx)addedModule).moduleAdded();
        cleanCachedStuff();
        fireModuleAdded(addedModule);
        cleanCachedStuff();
      }
      cleanCachedStuff();
      fireModulesRenamed(modules);
      cleanCachedStuff();
    }
  }
,false,true);
}
