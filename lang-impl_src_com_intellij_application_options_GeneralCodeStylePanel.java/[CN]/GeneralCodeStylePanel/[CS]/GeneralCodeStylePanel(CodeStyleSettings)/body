{
  super(settings);
  final FileTypeIndentOptionsProvider[] indentOptionsProviders=Extensions.getExtensions(FileTypeIndentOptionsProvider.EP_NAME);
  for (  FileTypeIndentOptionsProvider indentOptionsProvider : indentOptionsProviders) {
    myIndentOptionsProviders.add(indentOptionsProvider);
    myAdditionalIndentOptions.put(indentOptionsProvider.getFileType(),indentOptionsProvider.createOptionsEditor());
  }
  myIndentPanel.setLayout(new BorderLayout());
  myIndentPanel.add(createTabOptionsPanel(),BorderLayout.CENTER);
  installPreviewPanel(myPreviewPanel);
  myLineSeparatorCombo.addItem(SYSTEM_DEPENDANT_STRING);
  myLineSeparatorCombo.addItem(UNIX_STRING);
  myLineSeparatorCombo.addItem(WINDOWS_STRING);
  myLineSeparatorCombo.addItem(MACINTOSH_STRING);
  addPanelToWatch(myPanel);
  myRightMargin=settings.RIGHT_MARGIN;
  myRightMarginField.getDocument().addDocumentListener(new DocumentListener(){
    public void insertUpdate(    DocumentEvent e){
      int valueFromControl=getRightMarginImpl();
      if (valueFromControl > 0) {
        myRightMargin=valueFromControl;
      }
    }
    public void removeUpdate(    DocumentEvent e){
      int valueFromControl=getRightMarginImpl();
      if (valueFromControl > 0) {
        myRightMargin=valueFromControl;
      }
    }
    public void changedUpdate(    DocumentEvent e){
      int valueFromControl=getRightMarginImpl();
      if (valueFromControl > 0) {
        myRightMargin=valueFromControl;
      }
    }
  }
);
}
