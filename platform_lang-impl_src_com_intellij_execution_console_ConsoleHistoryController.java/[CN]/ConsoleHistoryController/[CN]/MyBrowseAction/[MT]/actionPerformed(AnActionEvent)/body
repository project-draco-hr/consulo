{
  final ContentChooser<String> chooser=new ContentChooser<String>(myConsole.getProject(),myConsole.getTitle() + " History",true){
    @Override protected void removeContentAt(    String content){
      myModel.removeFromHistory(content);
    }
    @Override protected String getStringRepresentationFor(    String content){
      return content;
    }
    @Override protected List<String> getContents(){
      List<String> history=myModel.getHistory();
      return ContainerUtil.reverse(history);
    }
    @Override protected Editor createIdeaEditor(    String text){
      PsiFile consoleFile=myConsole.getFile();
      Language language=consoleFile.getLanguage();
      Project project=consoleFile.getProject();
      PsiFile psiFile=PsiFileFactory.getInstance(project).createFileFromText("a." + consoleFile.getFileType().getDefaultExtension(),language,StringUtil.convertLineSeparators(new String(text)),false,true);
      VirtualFile virtualFile=psiFile.getViewProvider().getVirtualFile();
      if (virtualFile instanceof LightVirtualFile)       ((LightVirtualFile)virtualFile).setWritable(false);
      Document document=FileDocumentManager.getInstance().getDocument(virtualFile);
      EditorFactory editorFactory=EditorFactory.getInstance();
      EditorEx editor=(EditorEx)editorFactory.createViewer(document,project);
      editor.getSettings().setFoldingOutlineShown(false);
      editor.getSettings().setLineMarkerAreaShown(false);
      editor.getSettings().setIndentGuidesShown(false);
      SyntaxHighlighter highlighter=SyntaxHighlighterFactory.getSyntaxHighlighter(language,project,psiFile.getViewProvider().getVirtualFile());
      editor.setHighlighter(new LexerEditorHighlighter(highlighter,editor.getColorsScheme()));
      return editor;
    }
  }
;
  chooser.setContentIcon(null);
  chooser.setSplitterOrientation(false);
  chooser.setSelectedIndex(Math.min(myModel.getHistorySize() - myModel.getHistoryCursor() - 1,myModel.getHistorySize() - 1));
  chooser.show();
  if (chooser.isOK()) {
    setConsoleText(myModel.getHistory().get(chooser.getSelectedIndex()),false,true);
  }
}
