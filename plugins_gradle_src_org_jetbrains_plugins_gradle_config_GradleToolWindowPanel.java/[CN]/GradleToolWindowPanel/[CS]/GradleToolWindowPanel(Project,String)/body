{
  super(true);
  myProject=project;
  myPlace=place;
  setContent(myContent);
  MessageBusConnection connection=project.getMessageBus().connect(project);
  connection.subscribe(GradleConfigNotifier.TOPIC,new GradleConfigNotifier(){
    private boolean myRefresh;
    private boolean myInBulk;
    @Override public void onBulkChangeStart(){
      myInBulk=true;
    }
    @Override public void onBulkChangeEnd(){
      myInBulk=false;
      if (myRefresh) {
        myRefresh=false;
        refreshAll();
      }
    }
    @Override public void onLinkedProjectPathChange(    @Nullable String oldPath,    @Nullable String newPath){
      refreshAll();
    }
    @Override public void onPreferLocalGradleDistributionToWrapperChange(    boolean preferLocalToWrapper){
      refreshAll();
    }
    @Override public void onGradleHomeChange(    @Nullable String oldPath,    @Nullable String newPath){
      refreshAll();
    }
    private void refreshAll(){
      if (myInBulk) {
        myRefresh=true;
        return;
      }
      GradleUtil.refreshProject(myProject,new Consumer<String>(){
        @Override public void consume(        String s){
          GradleConfigNotificationManager notificationManager=myProject.getComponent(GradleConfigNotificationManager.class);
          notificationManager.processRefreshError(s);
          UIUtil.invokeLaterIfNeeded(new Runnable(){
            @Override public void run(){
              update();
            }
          }
);
        }
      }
);
      update();
    }
  }
);
}
