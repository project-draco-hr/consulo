{
  final JComponent payloadControl=buildContent();
  myContent.add(ScrollPaneFactory.createScrollPane(payloadControl),CONTENT_CARD_NAME);
  myNonLinkedInfoPanel.setLayout(new GridBagLayout());
  final Color background=payloadControl.getBackground();
  myNonLinkedInfoPanel.setBackground(background);
  List<JComponent> rowComponents=new ArrayList<JComponent>();
  final String sentence=GradleBundle.message("gradle.toolwindow.text.no.linked.project");
  for (  String s : StringUtil.tokenize(new StringTokenizer(sentence," \n",true))) {
    if (s.isEmpty()) {
      continue;
    }
    if (LINK_BUTTON_MARKER.equals(s)) {
      final ActionManager actionManager=ActionManager.getInstance();
      final AnAction action=actionManager.getAction(LINK_PROJECT_ACTION_ID);
      ActionButton button=new ActionButton(action,action.getTemplatePresentation().clone(),GradleConstants.TOOL_WINDOW_TOOLBAR_PLACE,new Dimension(0,0)){
        @Override protected void paintButtonLook(        Graphics g){
          ActionButtonLook look=getButtonLook();
          look.paintBackground(g,this);
          look.paintIcon(g,this,getIcon());
        }
      }
;
      rowComponents.add(button);
    }
 else     if (s.contains("\n")) {
      addRow(rowComponents,background);
      rowComponents.clear();
    }
 else {
      final JLabel label=new JLabel(s);
      label.setForeground(payloadControl.getForeground());
      label.setBackground(background);
      label.setFont(payloadControl.getFont());
      rowComponents.add(label);
    }
  }
  if (!rowComponents.isEmpty()) {
    addRow(rowComponents,background);
  }
  GridBagConstraints constraints=new GridBagConstraints();
  constraints.weighty=1;
  constraints.fill=GridBagConstraints.VERTICAL;
  myNonLinkedInfoPanel.add(Box.createVerticalStrut(1),constraints);
  myContent.add(myNonLinkedInfoPanel,NON_LINKED_CARD_NAME);
  myLayout.show(myContent,NON_LINKED_CARD_NAME);
}
