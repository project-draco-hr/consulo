{
  super.visitMethodCallExpression(call);
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  final PsiMethod method=(PsiMethod)methodExpression.resolve();
  if (method == null) {
    return;
  }
  final PsiType returnType=method.getReturnType();
  if (returnType == null) {
    return;
  }
  final String canonicalText=returnType.getCanonicalText();
  if (!"java.lang.StringBuffer".equals(canonicalText) && !"java.lang.StringBuilder".equals(canonicalText)) {
    return;
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (!(qualifier instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression reference=(PsiReferenceExpression)qualifier;
  final PsiElement referent=reference.resolve();
  if (variable.equals(referent)) {
    appendedTo=true;
  }
}
