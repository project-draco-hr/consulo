{
  pluginTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      final IdeaPluginDescriptor[] descriptors=pluginTable.getSelectedObjects();
      pluginInfoUpdate(descriptors != null && descriptors.length == 1 ? descriptors[0] : null);
      myActionToolbar.updateActionsImmediately();
    }
  }
);
  PopupHandler.installUnknownPopupHandler(pluginTable,getActionGroup(),ActionManager.getInstance());
  myVendorEmailLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
  myVendorEmailLabel.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.isConsumed())       return;
      IdeaPluginDescriptor pluginDescriptor=getPluginTable().getSelectedObject();
      if (pluginDescriptor != null) {
        launchBrowserAction(pluginDescriptor.getVendorEmail(),"mailto:");
        e.consume();
      }
    }
  }
);
  myVendorUrlLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
  myVendorUrlLabel.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.isConsumed())       return;
      IdeaPluginDescriptor pluginDescriptor=getPluginTable().getSelectedObject();
      if (pluginDescriptor != null) {
        launchBrowserAction(pluginDescriptor.getVendorUrl(),"");
        e.consume();
      }
    }
  }
);
  myPluginUrlLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
  myPluginUrlLabel.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.isConsumed())       return;
      IdeaPluginDescriptor pluginDescriptor=getPluginTable().getSelectedObject();
      if (pluginDescriptor != null) {
        launchBrowserAction(pluginDescriptor.getUrl(),"");
        e.consume();
      }
    }
  }
);
  new MySpeedSearchBar(pluginTable);
}
