{
  if (plugin instanceof IdeaPluginDescriptor) {
    IdeaPluginDescriptor pluginDescriptor=(IdeaPluginDescriptor)plugin;
    StringBuilder sb=new StringBuilder();
    String description=pluginDescriptor.getDescription();
    if (!isEmptyOrSpaces(description)) {
      sb.append(description);
    }
    String changeNotes=pluginDescriptor.getChangeNotes();
    if (!isEmptyOrSpaces(changeNotes)) {
      sb.append("<h4>Change Notes</h4>");
      sb.append(changeNotes);
    }
    if (!pluginDescriptor.isBundled()) {
      String vendor=pluginDescriptor.getVendor();
      String vendorEmail=pluginDescriptor.getVendorEmail();
      String vendorUrl=pluginDescriptor.getVendorUrl();
      if (!isEmptyOrSpaces(vendor) || !isEmptyOrSpaces(vendorEmail) || !isEmptyOrSpaces(vendorUrl)) {
        sb.append("<h4>Vendor</h4>");
        if (!isEmptyOrSpaces(vendor)) {
          sb.append(vendor);
        }
        if (!isEmptyOrSpaces(vendorUrl)) {
          sb.append("<br>").append(composeHref(vendorUrl));
        }
        if (!isEmptyOrSpaces(vendorEmail)) {
          sb.append("<br>").append(composeHref("mailto:" + vendorEmail));
        }
      }
      String pluginDescriptorUrl=pluginDescriptor.getUrl();
      if (!isEmptyOrSpaces(pluginDescriptorUrl)) {
        sb.append("<h4>Plugin homepage</h4>").append(composeHref(pluginDescriptorUrl));
      }
      String version=pluginDescriptor.getVersion();
      if (!isEmptyOrSpaces(version)) {
        sb.append("<h4>Version</h4>").append(version);
      }
      String size=plugin instanceof PluginNode ? ((PluginNode)plugin).getSize() : null;
      if (!isEmptyOrSpaces(size)) {
        sb.append("<h4>Size</h4>").append(PluginManagerColumnInfo.getFormattedSize(size));
      }
    }
    setTextValue(sb,filter,descriptionTextArea);
  }
 else {
    setTextValue(null,filter,descriptionTextArea);
  }
}
