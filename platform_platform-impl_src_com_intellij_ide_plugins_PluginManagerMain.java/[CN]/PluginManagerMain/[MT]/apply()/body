{
  final String applyMessage=canApply();
  if (applyMessage != null)   return applyMessage;
  setRequireShutdown(true);
  for (int i=0; i < installedPluginTable.getRowCount(); i++) {
    final IdeaPluginDescriptorImpl pluginDescriptor=(IdeaPluginDescriptorImpl)installedPluginsModel.getObjectAt(i);
    final Boolean enabled=(Boolean)installedPluginsModel.getValueAt(i,InstalledPluginsTableModel.getCheckboxColumn());
    pluginDescriptor.setEnabled(enabled != null && enabled.booleanValue());
  }
  for (  IdeaPluginDescriptor descriptor : myFilter.getFilteredInstalled()) {
    ((IdeaPluginDescriptorImpl)descriptor).setEnabled(installedPluginsModel.isEnabled(descriptor.getPluginId()));
  }
  try {
    final ArrayList<String> ids=new ArrayList<String>();
    for (    Map.Entry<PluginId,Boolean> entry : installedPluginsModel.getEnabledMap().entrySet()) {
      final Boolean value=entry.getValue();
      if (value != null && !value.booleanValue()) {
        ids.add(entry.getKey().getIdString());
      }
    }
    PluginManager.saveDisabledPlugins(ids,false);
  }
 catch (  IOException e) {
    LOG.error(e);
  }
  return null;
}
