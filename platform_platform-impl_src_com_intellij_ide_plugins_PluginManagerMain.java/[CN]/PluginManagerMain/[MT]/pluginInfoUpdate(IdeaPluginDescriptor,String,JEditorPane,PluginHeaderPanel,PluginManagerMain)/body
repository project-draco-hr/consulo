{
  if (plugin == null) {
    setTextValue(null,filter,descriptionTextArea);
    header.getPanel().setVisible(false);
    return;
  }
  StringBuilder sb=new StringBuilder();
  header.setPlugin(plugin);
  String description=plugin.getDescription();
  if (!isEmptyOrSpaces(description)) {
    sb.append(description);
  }
  String changeNotes=plugin.getChangeNotes();
  if (!isEmptyOrSpaces(changeNotes)) {
    sb.append("<h4>Change Notes</h4>");
    sb.append(changeNotes);
  }
  if (!plugin.isBundled()) {
    String vendor=plugin.getVendor();
    String vendorEmail=plugin.getVendorEmail();
    String vendorUrl=plugin.getVendorUrl();
    if (!isEmptyOrSpaces(vendor) || !isEmptyOrSpaces(vendorEmail) || !isEmptyOrSpaces(vendorUrl)) {
      sb.append("<h4>Vendor</h4>");
      if (!isEmptyOrSpaces(vendor)) {
        sb.append(vendor);
      }
      if (!isEmptyOrSpaces(vendorUrl)) {
        sb.append("<br>").append(composeHref(vendorUrl));
      }
      if (!isEmptyOrSpaces(vendorEmail)) {
        sb.append("<br>").append(HTML_PREFIX).append("mailto:").append(vendorEmail).append("\">").append(vendorEmail).append(HTML_SUFFIX);
      }
    }
    String pluginDescriptorUrl=plugin.getUrl();
    if (!isEmptyOrSpaces(pluginDescriptorUrl)) {
      sb.append("<h4>Plugin homepage</h4>").append(composeHref(pluginDescriptorUrl));
    }
    String size=plugin instanceof PluginNode ? ((PluginNode)plugin).getSize() : null;
    if (!isEmptyOrSpaces(size)) {
      sb.append("<h4>Size</h4>").append(PluginManagerColumnInfo.getFormattedSize(size));
    }
  }
  setTextValue(sb,filter,descriptionTextArea);
}
