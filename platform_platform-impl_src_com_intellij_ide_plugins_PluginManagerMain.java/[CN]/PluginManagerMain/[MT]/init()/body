{
  GuiUtils.replaceJSplitPaneWithIDEASplitter(main);
  myDescriptionTextArea.setEditorKit(new HTMLEditorKit());
  myDescriptionTextArea.setEditable(false);
  myDescriptionTextArea.addHyperlinkListener(new MyHyperlinkListener());
  JScrollPane installedScrollPane=createTable();
  myPluginHeaderPanel=new PluginHeaderPanel(this,getPluginTable());
  myHeader.setBackground(UIUtil.getTextFieldBackground());
  myPluginHeaderPanel.getPanel().setBackground(UIUtil.getTextFieldBackground());
  myPluginHeaderPanel.getPanel().setOpaque(true);
  myHeader.add(myPluginHeaderPanel.getPanel(),BorderLayout.CENTER);
  installTableActions();
  myTablePanel.add(installedScrollPane,BorderLayout.CENTER);
  UIUtil.applyStyle(UIUtil.ComponentStyle.SMALL,myPanelDescription);
  myPanelDescription.setBorder(JBUI.Borders.empty(0,7,0,0));
  final JPanel header=new JPanel(new BorderLayout()){
    @Override protected void paintComponent(    Graphics g){
      super.paintComponent(g);
      final Color bg=UIUtil.getTableBackground(false);
      ((Graphics2D)g).setPaint(new GradientPaint(0,0,ColorUtil.shift(bg,1.4),0,getHeight(),ColorUtil.shift(bg,0.9)));
      g.fillRect(0,0,getWidth(),getHeight());
    }
  }
;
  header.setBorder(new CustomLineBorder(JBUI.scale(1),JBUI.scale(1),0,JBUI.scale(1)));
  final JLabel mySortLabel=new JLabel();
  mySortLabel.setForeground(UIUtil.getLabelDisabledForeground());
  mySortLabel.setBorder(JBUI.Borders.empty(1,1,1,5));
  mySortLabel.setIcon(AllIcons.General.SplitDown);
  mySortLabel.setHorizontalTextPosition(SwingConstants.LEADING);
  header.add(mySortLabel,BorderLayout.EAST);
  myTablePanel.add(header,BorderLayout.NORTH);
  myToolbarPanel.setLayout(new BorderLayout());
  myActionToolbar=ActionManager.getInstance().createActionToolbar("PluginManager",getActionGroup(true),true);
  final JComponent component=myActionToolbar.getComponent();
  myToolbarPanel.add(component,BorderLayout.CENTER);
  myToolbarPanel.add(myFilter,BorderLayout.WEST);
  new ClickListener(){
    @Override public boolean onClick(    @NotNull MouseEvent event,    int clickCount){
      JBPopupFactory.getInstance().createActionGroupPopup("Sort by:",createSortersGroup(),DataManager.getInstance().getDataContext(myPluginTable),JBPopupFactory.ActionSelectionAid.SPEEDSEARCH,true).showUnderneathOf(mySortLabel);
      return true;
    }
  }
.installOn(mySortLabel);
  final TableModelListener modelListener=new TableModelListener(){
    @Override public void tableChanged(    TableModelEvent e){
      String text="Sort by:";
      if (myPluginsModel.isSortByStatus()) {
        text+=" status,";
      }
      if (myPluginsModel.isSortByRating()) {
        text+=" rating,";
      }
      if (myPluginsModel.isSortByDownloads()) {
        text+=" downloads,";
      }
      if (myPluginsModel.isSortByUpdated()) {
        text+=" updated,";
      }
      text+=" name";
      mySortLabel.setText(text);
    }
  }
;
  myPluginTable.getModel().addTableModelListener(modelListener);
  modelListener.tableChanged(null);
  Border border=new BorderUIResource.LineBorderUIResource(new JBColor(Gray._220,Gray._55),JBUI.scale(1));
  myInfoPanel.setBorder(border);
}
