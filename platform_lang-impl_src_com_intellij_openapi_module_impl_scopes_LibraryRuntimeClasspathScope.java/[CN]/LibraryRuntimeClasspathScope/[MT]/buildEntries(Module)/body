{
  final Set<Sdk> myJDKProcessed=new THashSet<Sdk>();
  ModuleRootManager.getInstance(module).orderEntries().recursively().process(new RootPolicy<LinkedHashSet<VirtualFile>>(){
    public LinkedHashSet<VirtualFile> visitLibraryOrderEntry(    final LibraryOrderEntry libraryOrderEntry,    final LinkedHashSet<VirtualFile> value){
      value.addAll(Arrays.asList(libraryOrderEntry.getFiles(OrderRootType.CLASSES)));
      return value;
    }
    public LinkedHashSet<VirtualFile> visitModuleSourceOrderEntry(    final ModuleSourceOrderEntry moduleSourceOrderEntry,    final LinkedHashSet<VirtualFile> value){
      value.addAll(Arrays.asList(moduleSourceOrderEntry.getFiles(OrderRootType.SOURCES)));
      return value;
    }
    public LinkedHashSet<VirtualFile> visitJdkOrderEntry(    final JdkOrderEntry jdkOrderEntry,    final LinkedHashSet<VirtualFile> value){
      if (!myJDKProcessed.add(jdkOrderEntry.getJdk()))       return value;
      value.addAll(Arrays.asList(jdkOrderEntry.getFiles(OrderRootType.CLASSES)));
      return value;
    }
  }
,myEntries);
}
