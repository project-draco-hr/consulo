{
  super.visitThisExpression(expression);
  if (!isInInitializer(expression)) {
    return;
  }
  final PsiJavaCodeReferenceElement qualifier=expression.getQualifier();
  final PsiClass containingClass=ClassUtils.getContainingClass(expression);
  if (qualifier != null) {
    final PsiElement element=qualifier.resolve();
    if (!(element instanceof PsiClass)) {
      return;
    }
    final PsiClass aClass=(PsiClass)element;
    if (!aClass.equals(containingClass)) {
      return;
    }
  }
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)parent;
    if (!thisEscapesToField(expression,assignmentExpression)) {
      return;
    }
    registerError(expression);
  }
 else   if (parent instanceof PsiExpressionList) {
    final PsiElement grandParent=parent.getParent();
    if (grandParent instanceof PsiNewExpression) {
      final PsiNewExpression newExpression=(PsiNewExpression)grandParent;
      if (!thisEscapesToConstructor(expression,newExpression)) {
        return;
      }
      registerError(expression);
    }
 else     if (grandParent instanceof PsiMethodCallExpression) {
      final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
      if (!thisEscapesToMethod(expression,methodCallExpression)) {
        return;
      }
      registerError(expression);
    }
  }
}
