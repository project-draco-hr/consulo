{
  final PsiMethod method=methodCallExpression.resolveMethod();
  if (method == null) {
    return false;
  }
  final PsiClass containingClass=ClassUtils.getContainingClass(expression);
  if (containingClass == null) {
    return false;
  }
  final PsiClass methodClass=method.getContainingClass();
  if (!method.hasModifierProperty(PsiModifier.STATIC) && containingClass.isInheritor(methodClass,true)) {
    return false;
  }
  final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (!(qualifier instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression qualifiedExpression=(PsiReferenceExpression)qualifier;
  final PsiElement referent=qualifiedExpression.resolve();
  if (referent instanceof PsiField) {
    final PsiField field=(PsiField)referent;
    final PsiClass fieldClass=field.getContainingClass();
    if (containingClass.equals(fieldClass) || containingClass.isInheritor(fieldClass,true)) {
      return false;
    }
  }
  return true;
}
