{
  final PsiExpression rhs=assignmentExpression.getRExpression();
  if (!expression.equals(rhs)) {
    return false;
  }
  final PsiExpression lExpression=assignmentExpression.getLExpression();
  if (!(lExpression instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression leftExpression=(PsiReferenceExpression)lExpression;
  final PsiElement element=leftExpression.resolve();
  if (!(element instanceof PsiField)) {
    return false;
  }
  final PsiField field=(PsiField)element;
  if (field.hasModifierProperty(PsiModifier.STATIC)) {
    return true;
  }
  final PsiClass assignmentClass=ClassUtils.getContainingClass(assignmentExpression);
  final PsiClass fieldClass=field.getContainingClass();
  return !(assignmentClass == null || assignmentClass.isInheritor(fieldClass,true) || PsiTreeUtil.isAncestor(assignmentClass,fieldClass,false));
}
