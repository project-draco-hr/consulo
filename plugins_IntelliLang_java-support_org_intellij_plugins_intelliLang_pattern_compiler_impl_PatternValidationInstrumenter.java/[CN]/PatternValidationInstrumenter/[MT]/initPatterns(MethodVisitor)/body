{
  mv.visitIntInsn(BIPUSH,myPatterns.size());
  mv.visitTypeInsn(ANEWARRAY,"java/util/regex/Pattern");
  mv.visitFieldInsn(PUTSTATIC,myClassName,PATTERN_CACHE_NAME,JAVA_UTIL_REGEX_PATTERN);
  int i=0;
  for (  String pattern : myPatterns) {
    try {
      Pattern.compile(pattern);
    }
 catch (    Exception e) {
      throw new InstrumentationException("Illegal Pattern: " + pattern,e);
    }
    mv.visitFieldInsn(GETSTATIC,myClassName,PATTERN_CACHE_NAME,JAVA_UTIL_REGEX_PATTERN);
    mv.visitIntInsn(BIPUSH,i++);
    mv.visitLdcInsn(pattern);
    mv.visitMethodInsn(INVOKESTATIC,"java/util/regex/Pattern","compile","(Ljava/lang/String;)Ljava/util/regex/Pattern;");
    mv.visitInsn(AASTORE);
  }
}
