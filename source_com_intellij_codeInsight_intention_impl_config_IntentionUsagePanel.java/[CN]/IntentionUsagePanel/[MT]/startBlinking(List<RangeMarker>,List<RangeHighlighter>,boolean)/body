{
  TextAttributes attr=EditorColorsManager.getInstance().getGlobalScheme().getAttributes(CodeInsightColors.BLINKING_HIGHLIGHTS_ATTRIBUTES);
  final List<RangeHighlighter> newHighlighters=new ArrayList<RangeHighlighter>();
  if (show) {
    for (int i=0; i < markers.size(); i++) {
      final RangeMarker rangeMarker=markers.get(i);
      RangeHighlighter newRangeHighlighter=myJavaEditor.getMarkupModel().addRangeHighlighter(rangeMarker.getStartOffset(),rangeMarker.getEndOffset(),HighlighterLayer.ADDITIONAL_SYNTAX,attr,HighlighterTargetArea.EXACT_RANGE);
      newHighlighters.add(newRangeHighlighter);
    }
  }
 else {
    for (int i=0; i < oldHighlighters.size(); i++) {
      final RangeHighlighter rangeHighlighter=oldHighlighters.get(i);
      myJavaEditor.getMarkupModel().removeHighlighter(rangeHighlighter);
    }
  }
  stopBlinking();
  myBlinkingAlarm.addRequest(new Runnable(){
    public void run(){
      startBlinking(markers,newHighlighters,!show);
    }
  }
,400);
}
