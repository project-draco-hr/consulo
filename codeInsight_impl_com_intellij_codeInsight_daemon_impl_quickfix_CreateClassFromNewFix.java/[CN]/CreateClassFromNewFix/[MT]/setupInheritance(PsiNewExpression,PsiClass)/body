{
  if (element.getParent() instanceof PsiReferenceExpression)   return;
  ExpectedTypeInfo[] expectedTypes=ExpectedTypesProvider.getInstance(element.getProject()).getExpectedTypes(element,false);
  for (  ExpectedTypeInfo expectedType : expectedTypes) {
    PsiType type=expectedType.getType();
    if (!(type instanceof PsiClassType))     continue;
    final PsiClassType classType=(PsiClassType)type;
    PsiClass aClass=classType.resolve();
    if (aClass == null)     continue;
    if (aClass.equals(targetClass) || aClass.hasModifierProperty(PsiModifier.FINAL))     continue;
    PsiElementFactory factory=JavaPsiFacade.getInstance(aClass.getProject()).getElementFactory();
    if (aClass.isInterface()) {
      PsiReferenceList implementsList=targetClass.getImplementsList();
      implementsList.add(factory.createReferenceElementByType(classType));
    }
 else {
      PsiReferenceList extendsList=targetClass.getExtendsList();
      if (extendsList.getReferencedTypes().length > 0)       continue;
      extendsList.add(factory.createReferenceElementByType(classType));
    }
  }
}
