{
  try {
    SwingUtilities.invokeAndWait(new Runnable(){
      public void run(){
        containerPanel=getContainerPanel();
        LOG.debug("containerPanel.isFocusable=" + containerPanel.isFocusable());
        Border b=BorderFactory.createRaisedBevelBorder();
        containerPanel.setBorder(b);
        Dimension d=outerPanel.getSize();
        Dimension c=containerPanel.getPreferredSize();
        int x=(d.width - c.width) / 2;
        int y=(d.height - c.height) / 2;
        if (x < 0)         x=0;
        if (y < 0)         y=0;
        popup.hide();
        popup=PopupFactory.getSharedInstance().getPopup(outerPanel,containerPanel,x,y);
        LOG.debug("setCursor (original)" + oldCursor + " on "+ outerPanel);
        outerPanel.setCursor(oldCursor);
        LOG.debug("outerPanel size=" + d + ", containerPanel preferred size="+ c);
        LOG.debug("Constructing Popup at x,y=" + x + ","+ y);
        LiveRearrangerActionHandler.setInProgress(true);
        outerPanel.addWindowFocusListener(windowFocusListener=getWindowFocusListener("outerPanel"));
        outerPanel.addWindowListener(windowAdapter=getWindowAdapter("outerPanel"));
        outerPanel.addMouseListener(mouseAdapter=getMouseAdapter("outerPanel"));
        ma2=getMouseAdapter("focus owner");
        outerPanelFocusOwner=outerPanel.getFocusOwner();
        if (outerPanelFocusOwner != null) {
          outerPanelFocusOwner.addMouseListener(ma2);
        }
        outerPanel.addFocusListener(focusAdapter=getFocusAdapter("outerPanel"));
        containerPanel.addFocusListener(getFocusAdapter("containerPanel"));
        keyEventDispatcher=new KeyEventDispatcher(){
          public boolean dispatchKeyEvent(          KeyEvent e){
            LOG.debug("key event dispatcher: outerPanel isFocused=" + outerPanel.isFocused() + ", rearrangementOccurred="+ rearrangementOccurred+ " keyEvent="+ e);
            if (e.getID() == KeyEvent.KEY_RELEASED && (rearrangementOccurred || sawKeyPressed)) {
              LOG.debug("key event dispatcher: disposing popup, saw keyEvent " + e);
              finish();
            }
            if (e.getID() == KeyEvent.KEY_PRESSED) {
              sawKeyPressed=true;
            }
            return true;
          }
        }
;
        KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(keyEventDispatcher);
        popup.show();
      }
    }
);
  }
 catch (  InterruptedException ie) {
    throw new RuntimeException(ie);
  }
catch (  InvocationTargetException ite) {
    throw new RuntimeException(ite);
  }
  LOG.debug("exit liveRearranger");
}
