{
  PopupTree tree=treeComponent.createLiveRearrangerTree();
  int expandRow=-1;
  for (int i=0; i < tree.getRowCount(); i++) {
    DefaultMutableTreeNode node=(DefaultMutableTreeNode)tree.getPathForRow(i).getLastPathComponent();
    if (node.getUserObject() instanceof RangeEntry) {
      RangeEntry re=(RangeEntry)node.getUserObject();
      if (re.getStart().getTextRange().getStartOffset() <= cursorOffset && re.getEnd().getTextRange().getEndOffset() >= cursorOffset) {
        LOG.debug("node " + i + " contained cursor (offset="+ cursorOffset+ "): "+ re);
        expandRow=i;
      }
    }
 else {
      LOG.debug("expand node candidate not RangeEntry; node=" + node);
    }
  }
  if (expandRow >= 0) {
    LOG.debug("expand row " + expandRow);
    tree.expandRow(expandRow);
  }
  JScrollPane treeView=new JScrollPane(tree);
  treeView.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
  treeView.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  Dimension d=treeView.getPreferredSize();
  if (d.width < 400)   d.width=400;
  if (d.height < 300)   d.height=300;
  treeView.setPreferredSize(d);
  tdt=new TreeDropTarget(tree,this);
  tds=new TreeDragSource(tree,DnDConstants.ACTION_MOVE,tdt);
  return treeView;
}
