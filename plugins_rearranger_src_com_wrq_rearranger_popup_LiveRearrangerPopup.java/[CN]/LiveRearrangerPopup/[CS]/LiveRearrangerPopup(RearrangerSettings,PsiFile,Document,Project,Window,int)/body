{
  this.settings=settings;
  this.document=document;
  this.psiFile=psiFile;
  createFilePopupEntry(psiFile);
  this.project=project;
  this.outerPanel=outerPanel;
  this.cursorOffset=cursorOffset;
  try {
    SwingUtilities.invokeAndWait(new Runnable(){
      public void run(){
        JPanel tempPanel=new JPanel(new GridBagLayout());
        JLabel label=new JLabel("Live Rearranger parsing file...");
        Border b=BorderFactory.createRaisedBevelBorder();
        tempPanel.setBorder(b);
        GridBagConstraints constraints=new GridBagConstraints();
        constraints.insets=new Insets(5,5,5,5);
        tempPanel.add(label,constraints);
        Dimension d=outerPanel.getSize();
        Dimension c=tempPanel.getPreferredSize();
        int x=(d.width - c.width) / 2;
        int y=(d.height - c.height) / 2;
        if (x < 0)         x=0;
        if (y < 0)         y=0;
        popup=PopupFactory.getSharedInstance().getPopup(outerPanel,tempPanel,x,y);
        LOG.debug("initial outerPanel size=" + d + ", tempPanel preferred size="+ c);
        LOG.debug("Constructing initial Popup at x,y=" + x + ","+ y);
        popup.show();
        Cursor cu=Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        oldCursor=outerPanel.getCursor();
        LOG.debug("setCursor (WAIT)" + cu + " on "+ outerPanel);
        outerPanel.setCursor(cu);
      }
    }
);
  }
 catch (  InterruptedException ie) {
    throw new RuntimeException(ie);
  }
catch (  InvocationTargetException ite) {
    throw new RuntimeException(ite);
  }
}
