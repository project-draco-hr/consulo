{
  element=PsiTreeUtil.getParentOfType(element,XmlTag.class,false);
  if (element instanceof XmlTag) {
    XmlTag xmlTag=(XmlTag)element;
    XmlElementDescriptor elementDescriptor;
    try {
      @NonNls StringBuffer tagText=new StringBuffer(object.toString());
      String namespacePrefix=XmlUtil.findPrefixByQualifiedName(object.toString());
      String namespace=xmlTag.getNamespaceByPrefix(namespacePrefix);
      if (namespace != null && namespace.length() > 0) {
        tagText.append(" xmlns");
        if (namespacePrefix.length() > 0)         tagText.append(":").append(namespacePrefix);
        tagText.append("=\"").append(namespace).append("\"");
      }
      XmlTag tagFromText=xmlTag.getManager().getElementFactory().createTagFromText("<" + tagText + "/>");
      XmlElementDescriptor parentDescriptor=xmlTag.getDescriptor();
      elementDescriptor=(parentDescriptor != null) ? parentDescriptor.getElementDescriptor(tagFromText) : null;
      if (elementDescriptor == null) {
        PsiElement parent=xmlTag.getParent();
        if (parent instanceof XmlTag) {
          parentDescriptor=((XmlTag)parent).getDescriptor();
          elementDescriptor=(parentDescriptor != null) ? parentDescriptor.getElementDescriptor(tagFromText) : null;
        }
      }
      if (elementDescriptor instanceof AnyXmlElementDescriptor) {
        final XmlNSDescriptor nsDescriptor=xmlTag.getNSDescriptor(xmlTag.getNamespaceByPrefix(namespacePrefix),true);
        elementDescriptor=(nsDescriptor != null) ? nsDescriptor.getElementDescriptor(tagFromText) : null;
      }
      final PsiFile containingFile=xmlTag.getContainingFile();
      if (containingFile instanceof JspFile) {
        final XmlTag rootTag=((XmlFile)containingFile).getDocument().getRootTag();
        if (rootTag != null) {
          final XmlNSDescriptor nsDescriptor=rootTag.getNSDescriptor(rootTag.getNamespaceByPrefix(namespacePrefix),true);
          elementDescriptor=(nsDescriptor != null) ? nsDescriptor.getElementDescriptor(tagFromText) : null;
        }
      }
      if (elementDescriptor != null) {
        PsiElement declaration=elementDescriptor.getDeclaration();
        if (declaration != null)         declaration.putUserData(DESCRIPTOR_KEY,elementDescriptor);
        return declaration;
      }
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
  }
  return null;
}
