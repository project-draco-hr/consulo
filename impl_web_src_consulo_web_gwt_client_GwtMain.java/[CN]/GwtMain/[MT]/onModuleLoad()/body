{
  final VerticalPanel globalPanel=new VerticalPanel();
  globalPanel.setWidth("100%");
  globalPanel.setHeight(Window.getClientHeight() + "px");
  Window.addResizeHandler(new ResizeHandler(){
    @Override public void onResize(    ResizeEvent event){
      int height=event.getHeight();
      globalPanel.setHeight(height + "px");
    }
  }
);
  final GwtTransportServiceAsync serviceAsync=GWT.create(GwtTransportService.class);
  final com.github.gwtbootstrap.client.ui.TabPanel tabPanel=new com.github.gwtbootstrap.client.ui.TabPanel();
  HorizontalSplitPanel splitPanel=new HorizontalSplitPanel();
  splitPanel.setSplitPosition("20%");
  final Tree tree=new Tree();
  serviceAsync.getProjectDirectory(new AsyncCallback<GwtVirtualFile>(){
    @Override public void onFailure(    Throwable caught){
    }
    @Override public void onSuccess(    GwtVirtualFile result){
      addNodes(tree,result);
    }
  }
);
  splitPanel.add(tree);
  splitPanel.add(tabPanel);
  tree.addSelectionHandler(new SelectionHandler<TreeItem>(){
    @Override public void onSelection(    SelectionEvent<TreeItem> event){
      TreeItem selectedItem=event.getSelectedItem();
      final GwtVirtualFile virtualFile=(GwtVirtualFile)selectedItem.getUserObject();
      if (virtualFile.isDirectory()) {
        boolean state=selectedItem.getState();
        selectedItem.setState(!state);
        return;
      }
      Integer indexOfOpened=opened.get(virtualFile.getUrl());
      if (indexOfOpened != null) {
        tabPanel.selectTab(indexOfOpened);
        return;
      }
      serviceAsync.getContent(virtualFile.getUrl(),new AsyncCallback<String>(){
        @Override public void onFailure(        Throwable caught){
        }
        @Override public void onSuccess(        String result){
          if (result == null) {
            return;
          }
          final Editor editor=new Editor(result);
          editor.update();
          TabLink tabLink=new TabLink();
          HorizontalPanel tab=new HorizontalPanel();
          tab.add(icon(virtualFile.getIconLayers()));
          InlineHTML span=new InlineHTML(virtualFile.getName());
          span.setStyleName("textAfterIcon18");
          tab.add(span);
          tabLink.add(tab);
          tabPanel.add(tabLink);
          TabPane tabPane=tabLink.getTabPane();
          tabPane.add(editor.getComponent());
          int index=opened.size();
          tabPanel.selectTab(index);
          opened.put(virtualFile.getUrl(),index);
          serviceAsync.getLexerHighlight(virtualFile.getUrl(),new AsyncCallback<List<GwtHighlightInfo>>(){
            @Override public void onFailure(            Throwable caught){
            }
            @Override public void onSuccess(            List<GwtHighlightInfo> result){
              editor.addHighlightInfos(result);
              runHighlightPasses(serviceAsync,virtualFile,editor);
            }
          }
);
        }
      }
);
    }
  }
);
  globalPanel.add(splitPanel);
  RootPanel.get().add(globalPanel);
}
