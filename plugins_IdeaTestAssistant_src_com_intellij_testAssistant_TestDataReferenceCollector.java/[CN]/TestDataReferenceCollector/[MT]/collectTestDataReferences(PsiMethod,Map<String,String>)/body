{
  final List<String> result=new ArrayList<String>();
  method.accept(new JavaRecursiveElementVisitor(){
    @Override public void visitMethodCallExpression(    PsiMethodCallExpression expression){
      String callText=expression.getMethodExpression().getReferenceName();
      if (callText == null)       return;
      if (callText.equals("configureByFile") || callText.equals("checkResultByFile")) {
        processCallArgument(expression,argumentMap,result,0);
      }
 else       if (callText.equals("doFileTest")) {
        processCallArgument(expression,argumentMap,result,0);
        processCallArgument(expression,argumentMap,result,1);
      }
 else       if (expression.getMethodExpression().getQualifierExpression() == null) {
        final PsiMethod callee=expression.resolveMethod();
        if (callee != null) {
          result.addAll(collectTestDataReferences(callee,buildArgumentMap(expression,callee)));
        }
      }
    }
  }
);
  return result;
}
