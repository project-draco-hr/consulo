{
  super(settings);
  installPreviewPanel(myPreviewPanel);
  fillWrappingCombo(myWrapAttributes);
  fillWrappingCombo(myTextWrapping);
  customizeField("Insert New Line Before Tags",myInsertNewLineTagNames,new ValueHolder<String>(){
    public String getValue(){
      return mySettings.HTML_ELEMENTS_TO_INSERT_NEW_LINE_BEFORE;
    }
    public void setValue(    final String value){
      mySettings.HTML_ELEMENTS_TO_INSERT_NEW_LINE_BEFORE=value;
    }
  }
);
  customizeField("Remove Line Breaks Before Tags",myRemoveNewLineTagNames,new ValueHolder<String>(){
    public String getValue(){
      return mySettings.HTML_ELEMENTS_TO_REMOVE_NEW_LINE_BEFORE;
    }
    public void setValue(    final String value){
      mySettings.HTML_ELEMENTS_TO_REMOVE_NEW_LINE_BEFORE=value;
    }
  }
);
  customizeField("Do not Indent Children Of",myDoNotAlignChildrenTagNames,new ValueHolder<String>(){
    public String getValue(){
      return mySettings.HTML_DO_NOT_INDENT_CHILDREN_OF;
    }
    public void setValue(    final String value){
      mySettings.HTML_DO_NOT_INDENT_CHILDREN_OF=value;
    }
  }
);
  customizeField("Text Elements",myTextElementsTagNames,new ValueHolder<String>(){
    public String getValue(){
      return mySettings.HTML_TEXT_ELEMENTS;
    }
    public void setValue(    final String value){
      mySettings.HTML_TEXT_ELEMENTS=value;
    }
  }
);
  customizeField("Keep Whitespaces Inside",myKeepWhiteSpacesTagNames,new ValueHolder<String>(){
    public String getValue(){
      return mySettings.HTML_KEEP_WHITESPACES_INSIDE;
    }
    public void setValue(    final String value){
      mySettings.HTML_KEEP_WHITESPACES_INSIDE=value;
    }
  }
);
  addPanelToWatch(myPanel);
}
