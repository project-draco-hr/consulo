{
  super(settings);
  installPreviewPanel(myPreviewPanel);
  fillWrappingCombo(myWrapAttributes);
  customizeField(ApplicationBundle.message("title.insert.new.line.before.tags"),myInsertNewLineTagNames,new ValueHolder<String,CodeStyleSettings>(){
    public String getValue(    final CodeStyleSettings dataHolder){
      return dataHolder.HTML_ELEMENTS_TO_INSERT_NEW_LINE_BEFORE;
    }
    public void setValue(    final String value,    final CodeStyleSettings dataHolder){
      dataHolder.HTML_ELEMENTS_TO_INSERT_NEW_LINE_BEFORE=value;
    }
  }
);
  customizeField(ApplicationBundle.message("title.always.wrap.tags"),myAlwaysWrapTags,new ValueHolder<String,CodeStyleSettings>(){
    public String getValue(    final CodeStyleSettings dataHolder){
      return dataHolder.HTML_PLACE_ON_NEW_LINE;
    }
    public void setValue(    final String value,    final CodeStyleSettings dataHolder){
      dataHolder.HTML_PLACE_ON_NEW_LINE=value;
    }
  }
);
  customizeField(ApplicationBundle.message("title.remove.line.breaks.before.tags"),myRemoveNewLineTagNames,new ValueHolder<String,CodeStyleSettings>(){
    public String getValue(    final CodeStyleSettings dataHolder){
      return dataHolder.HTML_ELEMENTS_TO_REMOVE_NEW_LINE_BEFORE;
    }
    public void setValue(    final String value,    final CodeStyleSettings dataHolder){
      dataHolder.HTML_ELEMENTS_TO_REMOVE_NEW_LINE_BEFORE=value;
    }
  }
);
  customizeField(ApplicationBundle.message("title.do.not.indent.children.of"),myDoNotAlignChildrenTagNames,new ValueHolder<String,CodeStyleSettings>(){
    public String getValue(    final CodeStyleSettings dataHolder){
      return dataHolder.HTML_DO_NOT_INDENT_CHILDREN_OF;
    }
    public void setValue(    final String value,    final CodeStyleSettings dataHolder){
      dataHolder.HTML_DO_NOT_INDENT_CHILDREN_OF=value;
    }
  }
);
  customizeField(ApplicationBundle.message("title.text.elements"),myTextElementsTagNames,new ValueHolder<String,CodeStyleSettings>(){
    public String getValue(    final CodeStyleSettings dataHolder){
      return dataHolder.HTML_TEXT_ELEMENTS;
    }
    public void setValue(    final String value,    final CodeStyleSettings dataHolder){
      dataHolder.HTML_TEXT_ELEMENTS=value;
    }
  }
);
  customizeField(ApplicationBundle.message("title.keep.whitespaces.inside"),myKeepWhiteSpacesTagNames,new ValueHolder<String,CodeStyleSettings>(){
    public String getValue(    final CodeStyleSettings dataHolder){
      return dataHolder.HTML_KEEP_WHITESPACES_INSIDE;
    }
    public void setValue(    final String value,    final CodeStyleSettings dataHolder){
      dataHolder.HTML_KEEP_WHITESPACES_INSIDE=value;
    }
  }
);
  addPanelToWatch(myPanel);
}
