{
  int offset=editor.getCaretModel().getOffset();
  final PsiMethod method=findMethod(file,offset);
  if (method == null || !method.isValid())   return false;
  setText(getIntentionName(method));
  if (!method.getManager().isInProject(method))   return false;
  PsiClass containingClass=method.getContainingClass();
  if (containingClass == null)   return false;
  if (containingClass.isInterface() || method.hasModifierProperty(PsiModifier.ABSTRACT)) {
    MyElementProcessor processor=new MyElementProcessor(method);
    ClassInheritorsSearch.search(containingClass,containingClass.getUseScope(),false).forEach(new PsiElementProcessorAdapter<PsiClass>(processor));
    return isAvailable(processor);
  }
  return false;
}
