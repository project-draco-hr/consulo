{
  Map<PsiClass,Collection<PsiMethod>> results=new HashMap<PsiClass,Collection<PsiMethod>>();
  if (classes.length > 0) {
    if (includeClasses) {
      for (      PsiClass c : classes) {
        results.put(c,new HashSet<PsiMethod>());
      }
    }
    Set<String> dependencies=TestNGUtil.getAnnotationValues("dependsOnGroups",classes);
    PsiManager psiManager=PsiManager.getInstance(classes[0].getProject());
    PsiClass[] allClasses=psiManager.getSearchHelper().findAllClasses(data.getScope().getSourceScope(config).getGlobalSearchScope());
    Map<PsiClass,Collection<PsiMethod>> filteredClasses=TestNGUtil.filterAnnotations("groups",dependencies,allClasses);
    results.putAll(filteredClasses);
  }
  return results;
}
