{
  final TestNGConsoleView console=new TestNGConsoleView(config.getProject(),new TestNGConsoleProperties(config));
  ProcessHandler processHandler=startProcess();
  processHandler.addProcessListener(new ProcessAdapter(){
    @Override public void processTerminated(    final ProcessEvent event){
      client.stopTest();
      if (config.isCoverageEnabled()) {
        DefaultCoverageFileProvider fileProvider=new DefaultCoverageFileProvider(config.getCoverageFileName());
        LOGGER.info("Adding coverage data from " + fileProvider.getCoverageDataFilePath());
        CoverageSuite coverageSuite=CoverageDataManager.getInstance(config.getProject()).addCoverageSuite(config.getGeneratedName() + " Coverage Results",fileProvider,new String[]{},new Date().getTime(),!config.isMergeDataByDefault());
        LOGGER.info("Added coverage data with name '" + coverageSuite.getPresentableName() + "'");
      }
    }
    @Override public void startNotified(    final ProcessEvent event){
      TestNGRemoteListener listener=new TestNGRemoteListener(console);
      client.startListening(listener,listener,port);
    }
    @Override public void processWillTerminate(    ProcessEvent event,    boolean willBeDestroyed){
      console.getResultsView().finish();
    }
    @Override public void onTextAvailable(    final ProcessEvent event,    final Key outputType){
      console.print(event.getText(),ConsoleViewContentType.getConsoleViewType(outputType));
    }
  }
);
  console.attachToProcess(processHandler);
  return new DefaultExecutionResult(console,processHandler,createActions(console,processHandler));
}
