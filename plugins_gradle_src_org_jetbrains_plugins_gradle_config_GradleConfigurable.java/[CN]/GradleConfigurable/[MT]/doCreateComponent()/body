{
  myComponent=new JPanel(new GridBagLayout()){
    @Override public void paint(    Graphics g){
      super.paint(g);
      if (!myShowBalloonIfNecessary) {
        return;
      }
      myShowBalloonIfNecessary=false;
      MessageType messageType=null;
switch (myGradleHomeSettingType) {
case DEDUCED:
        messageType=MessageType.WARNING;
      break;
case EXPLICIT_INCORRECT:
case UNKNOWN:
    messageType=MessageType.ERROR;
  break;
default :
}
if (messageType != null) {
new DelayedBalloonInfo(messageType,myGradleHomeSettingType).run();
}
}
}
;
GridBagConstraints constraints=new GridBagConstraints();
constraints.gridwidth=GridBagConstraints.REMAINDER;
constraints.weightx=1;
constraints.weighty=1;
constraints.fill=GridBagConstraints.HORIZONTAL;
constraints.anchor=GridBagConstraints.NORTH;
myGradleHomeComponent=new NamePathComponent("",GradleBundle.message("gradle.import.text.home.path"),GradleBundle.message("gradle.import.text.home.path"),"",false,false);
myGradleHomeComponent.getPathComponent().getDocument().addDocumentListener(new DocumentListener(){
@Override public void insertUpdate(DocumentEvent e){
useNormalColorForPath();
myPathManuallyModified=true;
}
@Override public void removeUpdate(DocumentEvent e){
useNormalColorForPath();
myPathManuallyModified=true;
}
@Override public void changedUpdate(DocumentEvent e){
}
}
);
myGradleHomeComponent.setNameComponentVisible(false);
myComponent.add(myGradleHomeComponent,constraints);
myComponent.add(Box.createVerticalGlue());
}
