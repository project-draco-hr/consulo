{
  if (myProject == null) {
    return;
  }
  GradleSettings settings=myHelper.getSettings(myProject);
  String linkedProjectPath=myLinkedGradleProjectPathField.getText();
  final String gradleHomePath=getPathToUse(myGradleHomeModifiedByUser,settings.getGradleHome(),myGradleHomePathField.getText());
  final String serviceDirPath=getPathToUse(myServiceDirectoryModifiedByUser,settings.getServiceDirectoryPath(),myServiceDirectoryPathField.getText());
  boolean preferLocalToWrapper;
  if (myPreferWrapperWheneverPossibleCheckBox.isVisible()) {
    preferLocalToWrapper=!myPreferWrapperWheneverPossibleCheckBox.isSelected();
  }
 else {
    preferLocalToWrapper=myUseLocalDistributionButton.isSelected();
  }
  myHelper.applySettings(linkedProjectPath,gradleHomePath,preferLocalToWrapper,serviceDirPath,myProject);
  Project defaultProject=myHelper.getDefaultProject();
  if (myProject != defaultProject) {
    myHelper.applyPreferLocalInstallationToWrapper(preferLocalToWrapper,defaultProject);
  }
  if (isValidGradleHome(gradleHomePath)) {
    if (myGradleHomeModifiedByUser) {
      myGradleHomeSettingType=GradleHomeSettingType.EXPLICIT_CORRECT;
      if (defaultProject != myProject && !isValidGradleHome(GradleSettings.getInstance(defaultProject).getGradleHome())) {
        GradleSettings.applyGradleHome(gradleHomePath,defaultProject);
      }
    }
 else {
      myGradleHomeSettingType=GradleHomeSettingType.DEDUCED;
    }
  }
 else   if (preferLocalToWrapper) {
    if (StringUtil.isEmpty(gradleHomePath)) {
      myGradleHomeSettingType=GradleHomeSettingType.UNKNOWN;
    }
 else {
      myGradleHomeSettingType=GradleHomeSettingType.EXPLICIT_INCORRECT;
      myHelper.showBalloon(MessageType.ERROR,myGradleHomeSettingType,0);
    }
  }
}
