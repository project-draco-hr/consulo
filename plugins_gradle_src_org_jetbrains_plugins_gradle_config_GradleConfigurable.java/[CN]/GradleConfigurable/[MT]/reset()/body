{
  if (myProject == null) {
    return;
  }
  useNormalColorForPath();
  GradleSettings settings=GradleSettings.getInstance(myProject);
  String linkedProjectPath=myLinkedGradleProjectPathField.getText();
  if (StringUtil.isEmpty(linkedProjectPath)) {
    linkedProjectPath=settings.getLinkedProjectPath();
  }
  myLinkedProjectLabel.setVisible(myAlwaysShowLinkedProjectControls || !myProject.isDefault());
  myLinkedGradleProjectPathField.setVisible(myAlwaysShowLinkedProjectControls || !myProject.isDefault());
  if (linkedProjectPath != null) {
    myLinkedGradleProjectPathField.setText(linkedProjectPath);
  }
  myPreferWrapperWheneverPossibleCheckBox.setVisible(!myAlwaysShowLinkedProjectControls && myProject.isDefault());
  myPreferWrapperWheneverPossibleCheckBox.setSelected(!settings.isPreferLocalInstallationToWrapper());
  myUseWrapperButton.setVisible(myAlwaysShowLinkedProjectControls || linkedProjectPath != null);
  myUseLocalDistributionButton.setVisible(myAlwaysShowLinkedProjectControls || linkedProjectPath != null);
  if (myAlwaysShowLinkedProjectControls && linkedProjectPath == null) {
    myUseWrapperButton.setEnabled(false);
    myUseLocalDistributionButton.setSelected(true);
  }
 else   if (linkedProjectPath != null) {
    if (GradleUtil.isGradleWrapperDefined(linkedProjectPath)) {
      myUseWrapperButton.setEnabled(true);
      myUseWrapperButton.setText(GradleBundle.message("gradle.config.text.use.wrapper"));
      if (settings.isPreferLocalInstallationToWrapper()) {
        myUseLocalDistributionButton.setSelected(true);
        myGradleHomePathField.setEnabled(true);
      }
 else {
        myUseWrapperButton.setSelected(true);
        myGradleHomePathField.setEnabled(false);
      }
    }
 else {
      myUseWrapperButton.setText(GradleBundle.message("gradle.config.text.use.wrapper.disabled"));
      myUseWrapperButton.setEnabled(false);
      myUseLocalDistributionButton.setSelected(true);
    }
  }
  String localDistributionPath=settings.getGradleHome();
  if (!StringUtil.isEmpty(localDistributionPath)) {
    myGradleHomeSettingType=myInstallationManager.isGradleSdkHome(new File(localDistributionPath)) ? GradleHomeSettingType.EXPLICIT_CORRECT : GradleHomeSettingType.EXPLICIT_INCORRECT;
    myAlarm.cancelAllRequests();
    if (myGradleHomeSettingType == GradleHomeSettingType.EXPLICIT_INCORRECT && settings.isPreferLocalInstallationToWrapper()) {
      new DelayedBalloonInfo(MessageType.ERROR,myGradleHomeSettingType,0).run();
    }
    myGradleHomePathField.setText(localDistributionPath);
    return;
  }
  myGradleHomeSettingType=GradleHomeSettingType.UNKNOWN;
  deduceGradleHomeIfPossible();
}
