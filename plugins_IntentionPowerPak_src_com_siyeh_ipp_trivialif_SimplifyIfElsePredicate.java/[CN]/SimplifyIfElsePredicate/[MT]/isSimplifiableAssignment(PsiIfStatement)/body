{
  PsiStatement thenBranch=ifStatement.getThenBranch();
  thenBranch=ConditionalUtils.stripBraces(thenBranch);
  PsiStatement elseBranch=ifStatement.getElseBranch();
  elseBranch=ConditionalUtils.stripBraces(elseBranch);
  if (ConditionalUtils.isAssignment(thenBranch,"true") && ConditionalUtils.isAssignment(elseBranch,"false")) {
    final PsiExpressionStatement thenExpressionStatement=(PsiExpressionStatement)thenBranch;
    final PsiAssignmentExpression thenExpression=(PsiAssignmentExpression)thenExpressionStatement.getExpression();
    final PsiExpressionStatement elseExpressionStatement=(PsiExpressionStatement)elseBranch;
    final PsiAssignmentExpression elseExpression=(PsiAssignmentExpression)elseExpressionStatement.getExpression();
    final PsiJavaToken thenSign=thenExpression.getOperationSign();
    final PsiJavaToken elseSign=elseExpression.getOperationSign();
    final IElementType tokenType=thenSign.getTokenType();
    if (!tokenType.equals(elseSign.getTokenType())) {
      return false;
    }
    final PsiExpression thenLhs=thenExpression.getLExpression();
    final PsiExpression elseLhs=elseExpression.getLExpression();
    return EquivalenceChecker.expressionsAreEquivalent(thenLhs,elseLhs);
  }
 else {
    return false;
  }
}
