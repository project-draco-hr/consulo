{
  if (ifStatement.getElseBranch() != null) {
    return false;
  }
  PsiStatement thenBranch=ifStatement.getThenBranch();
  thenBranch=ConditionalUtils.stripBraces(thenBranch);
  final PsiElement previousStatement=PsiTreeUtil.skipSiblingsBackward(ifStatement,PsiWhiteSpace.class);
  if (!(previousStatement instanceof PsiStatement)) {
    return false;
  }
  PsiStatement elseBranch=(PsiStatement)previousStatement;
  elseBranch=ConditionalUtils.stripBraces(elseBranch);
  if (!ConditionalUtils.isAssignment(thenBranch,"false") || !ConditionalUtils.isAssignment(elseBranch,"true")) {
    return false;
  }
  final PsiExpressionStatement thenExpressionStatement=(PsiExpressionStatement)thenBranch;
  final PsiAssignmentExpression thenExpression=(PsiAssignmentExpression)thenExpressionStatement.getExpression();
  final PsiExpressionStatement elseExpressionStatement=(PsiExpressionStatement)elseBranch;
  final PsiAssignmentExpression elseExpression=(PsiAssignmentExpression)elseExpressionStatement.getExpression();
  final IElementType thenTokenType=thenExpression.getOperationTokenType();
  if (!thenTokenType.equals(elseExpression.getOperationTokenType())) {
    return false;
  }
  final PsiExpression thenLhs=thenExpression.getLExpression();
  final PsiExpression elseLhs=elseExpression.getLExpression();
  return EquivalenceChecker.expressionsAreEquivalent(thenLhs,elseLhs);
}
