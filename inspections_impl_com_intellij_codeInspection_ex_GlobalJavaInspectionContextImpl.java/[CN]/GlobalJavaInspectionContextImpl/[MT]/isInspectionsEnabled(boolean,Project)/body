{
  if (online) {
    while (JavaPsiFacade.getInstance(project).findClass("java.lang.Object",GlobalSearchScope.allScope(project)) == null) {
      if (ModuleManager.getInstance(project).getModules().length == 0) {
        Messages.showMessageDialog(project,InspectionsBundle.message("inspection.no.modules.error.message"),CommonBundle.message("title.error"),Messages.getErrorIcon());
        return false;
      }
      Messages.showMessageDialog(project,InspectionsBundle.message("inspection.no.jdk.error.message"),CommonBundle.message("title.error"),Messages.getErrorIcon());
      final ProjectJdk projectJdk=JdkChooserPanel.chooseAndSetJDK(project);
      if (projectJdk == null)       return false;
    }
  }
 else {
    PsiClass psiObjectClass=JavaPsiFacade.getInstance(project).findClass("java.lang.Object",GlobalSearchScope.allScope(project));
    if (psiObjectClass == null) {
      if (ModuleManager.getInstance(project).getModules().length == 0) {
        System.err.println(InspectionsBundle.message("inspection.no.modules.error.message"));
        return false;
      }
      System.err.println(InspectionsBundle.message("inspection.no.jdk.error.message"));
      System.err.println(InspectionsBundle.message("offline.inspections.jdk.not.found",ProjectRootManager.getInstance(project).getProjectJdkName()));
      return false;
    }
    final Module[] modules=ModuleManager.getInstance(project).getModules();
    for (    Module module : modules) {
      final ModuleRootManager rootManager=ModuleRootManager.getInstance(module);
      final ProjectJdk jdk=rootManager.getJdk();
      final OrderEntry[] entries=rootManager.getOrderEntries();
      for (      OrderEntry entry : entries) {
        if (entry instanceof JdkOrderEntry) {
          if (jdk == null) {
            System.err.println(InspectionsBundle.message("offline.inspections.module.jdk.not.found",((JdkOrderEntry)entry).getJdkName(),module.getName()));
            return false;
          }
        }
 else         if (entry instanceof LibraryOrderEntry) {
          final LibraryOrderEntry libraryOrderEntry=(LibraryOrderEntry)entry;
          final Library library=libraryOrderEntry.getLibrary();
          if (library == null || library.getFiles(OrderRootType.CLASSES).length != library.getUrls(OrderRootType.CLASSES).length) {
            System.err.println(InspectionsBundle.message("offline.inspections.library.was.not.resolved",libraryOrderEntry.getPresentableName(),module.getName()));
          }
        }
      }
    }
  }
  return true;
}
