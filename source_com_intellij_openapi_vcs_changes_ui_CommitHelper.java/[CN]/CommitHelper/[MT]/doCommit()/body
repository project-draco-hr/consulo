{
  final List<VcsException> vcsExceptions=new ArrayList<VcsException>();
  final List<Change> changesFailedToCommit=new ArrayList<Change>();
  final Runnable action=checkinAction(vcsExceptions,changesFailedToCommit,myChangeList);
  if (myForceSyncCommit) {
    ProgressManager.getInstance().runProcessWithProgressSynchronously(action,myActionName,true,myProject);
    return doesntContainErrors(vcsExceptions);
  }
 else {
    Task.Backgroundable task=new Task.Backgroundable(myProject,myActionName,true,myConfiguration.getCommitOption()){
      public void run(      final ProgressIndicator indicator){
        final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(myProject);
        vcsManager.startBackgroundVcsOperation();
        try {
          action.run();
        }
  finally {
          vcsManager.stopBackgroundVcsOperation();
        }
      }
      @Nullable public NotificationInfo getNotificationInfo(){
        String text=(myChangeList.getChanges().size() - changesFailedToCommit.size()) + " Change(s) Commited";
        if (changesFailedToCommit.size() > 0) {
          text+=", " + changesFailedToCommit.size() + " Change(s) Failed To Commit";
        }
        return new NotificationInfo("VCS Commit","VCS Commit Finished",text,true);
      }
    }
;
    ProgressManager.getInstance().run(task);
    return false;
  }
}
