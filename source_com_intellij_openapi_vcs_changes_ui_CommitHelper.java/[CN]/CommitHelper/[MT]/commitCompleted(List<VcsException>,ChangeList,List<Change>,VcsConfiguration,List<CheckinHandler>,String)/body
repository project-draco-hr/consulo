{
  final List<VcsException> errors=collectErrors(allExceptions);
  final int errorsSize=errors.size();
  final int warningsSize=allExceptions.size() - errorsSize;
  if (errorsSize == 0) {
    for (    CheckinHandler handler : checkinHandlers) {
      handler.checkinSuccessful();
    }
    final ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
    final ChangeList list=myChangeList;
    final List<Change> includedChanges=myIncludedChanges;
    if (list instanceof LocalChangeList) {
      final LocalChangeList localList=(LocalChangeList)list;
      if (includedChanges.containsAll(list.getChanges()) && !localList.isDefault() && !localList.isReadOnly()) {
        changeListManager.removeChangeList(localList);
      }
 else       if (config.OFFER_MOVE_TO_ANOTHER_CHANGELIST_ON_PARTIAL_COMMIT && !includedChanges.containsAll(list.getChanges()) && localList.isDefault()&& myAllOfDefaultChangeListChangesIncluded) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            ChangelistMoveOfferDialog dialog=new ChangelistMoveOfferDialog(config);
            dialog.show();
            if (dialog.isOK()) {
              final Collection<Change> changes=changeListManager.getDefaultChangeList().getChanges();
              MoveChangesToAnotherListAction.askAndMove(myProject,changes.toArray(new Change[changes.size()]),null);
            }
          }
        }
,ModalityState.NON_MODAL);
      }
    }
  }
 else {
    for (    CheckinHandler handler : checkinHandlers) {
      handler.checkinFailed(errors);
    }
    moveToFailedList(changeList,commitMessage,failedChanges,VcsBundle.message("commit.dialog.failed.commit.template",changeList.getName()),myProject);
  }
  if (errorsSize == 0 || warningsSize == 0) {
    final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
    if (indicator != null) {
      indicator.setText(VcsBundle.message("commit.dialog.completed.successfully"));
    }
  }
  config.ERROR_OCCURED=errorsSize > 0;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (errorsSize > 0 && warningsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.failed.with.errors.and.warnings"),VcsBundle.message("message.title.commit"));
      }
 else       if (errorsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.failed.with.errors"),VcsBundle.message("message.title.commit"));
      }
 else       if (warningsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.finished.with.warnings"),VcsBundle.message("message.title.commit"));
      }
    }
  }
,ModalityState.NON_MODAL);
}
