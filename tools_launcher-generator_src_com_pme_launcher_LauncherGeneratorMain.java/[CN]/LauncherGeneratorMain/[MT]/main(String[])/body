{
  if (args.length != 5) {
    System.err.println("Usage: LauncherGeneratorMain <template EXE file> <app info file> <resource.h file> <properties> <output>");
    System.exit(1);
  }
  File template=new File(args[0]);
  if (!template.exists()) {
    System.err.println("Launcher template EXE file " + args[0] + " not found");
    System.exit(1);
  }
  InputStream appInfoStream=LauncherGeneratorMain.class.getClassLoader().getResourceAsStream(args[1]);
  if (appInfoStream == null) {
    System.err.println("Application info file " + appInfoStream + " not found");
    System.exit(1);
  }
  Document appInfo;
  try {
    appInfo=new SAXBuilder().build(appInfoStream);
  }
 catch (  Exception e) {
    System.err.println("Error loading application info file " + appInfoStream + ": "+ e.getMessage());
    System.exit(1);
  }
  Map<String,Integer> resourceIDs;
  try {
    resourceIDs=loadResourceIDs(args[2]);
  }
 catch (  Exception e) {
    System.err.println("Error loading resource.h: " + e.getMessage());
    System.exit(1);
    return;
  }
  Properties properties=new Properties();
  try {
    FileInputStream fis=new FileInputStream(args[3]);
    try {
      properties.load(fis);
    }
  finally {
      fis.close();
    }
  }
 catch (  IOException e) {
    System.err.println("Error loading launcher properties: " + e.getMessage());
    System.exit(1);
  }
  LauncherGenerator generator=new LauncherGenerator(template,new File(args[4]));
  try {
    generator.load();
    for (    Map.Entry<Object,Object> pair : properties.entrySet()) {
      String key=(String)pair.getKey();
      Integer id=resourceIDs.get(key);
      if (id == null) {
        System.err.println("Invalid stringtable ID found: " + key);
        System.exit(1);
      }
      generator.setResourceString(id,(String)pair.getValue());
    }
    generator.generate();
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
}
