{
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    public void run(){
      myChangeManager.invokeAfterUpdate(new Runnable(){
        public void run(){
          if (myChangeLists == null) {
            return;
          }
          LOG.info("restoreChangeLists " + myChangeLists);
          for (          LocalChangeList changeList : myChangeLists) {
            final Collection<Change> changes=changeList.getChanges();
            LOG.debug("restoreProjectChangesAfterUpdate.invokeAfterUpdate changeList: " + changeList.getName() + " changes: "+ changes.size());
            if (!changes.isEmpty()) {
              LOG.debug("After restoring files: moving " + changes.size() + " changes to '"+ changeList.getName()+ "'");
              myChangeManager.moveChangesTo(changeList,changes.toArray(new Change[changes.size()]));
            }
          }
        }
      }
,InvokeAfterUpdateMode.BACKGROUND_NOT_CANCELLABLE,GitBundle.getString("update.restoring.change.lists"),ModalityState.NON_MODAL);
    }
  }
);
}
