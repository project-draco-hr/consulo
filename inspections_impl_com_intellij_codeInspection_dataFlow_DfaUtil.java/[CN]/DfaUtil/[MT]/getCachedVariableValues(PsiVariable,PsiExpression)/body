{
  if (variable == null || context == null)   return Collections.emptyList();
  PsiCodeBlock codeBlock;
  PsiElement element=context;
  while ((codeBlock=PsiTreeUtil.getParentOfType(element,PsiCodeBlock.class)) != null) {
    PsiAnonymousClass anon=PsiTreeUtil.getParentOfType(codeBlock,PsiAnonymousClass.class);
    if (anon == null)     break;
    element=anon;
  }
  if (codeBlock == null)   return Collections.emptyList();
  final PsiCodeBlock topLevelBlock=codeBlock;
  CachedValue<MultiValuesMap<PsiVariable,PsiExpression>> cachedValue=context.getUserData(DFA_VARIABLE_INFO_KEY);
  if (cachedValue == null) {
    cachedValue=context.getManager().getCachedValuesManager().createCachedValue(new CachedValueProvider<MultiValuesMap<PsiVariable,PsiExpression>>(){
      public Result<MultiValuesMap<PsiVariable,PsiExpression>> compute(){
        final ValuableDataFlowRunner runner=new ValuableDataFlowRunner(context);
        final MultiValuesMap<PsiVariable,PsiExpression> result;
        if (runner.analyzeMethod(topLevelBlock) == RunnerResult.OK) {
          result=runner.getAllVariableValues();
        }
 else {
          result=null;
        }
        return new Result<MultiValuesMap<PsiVariable,PsiExpression>>(result,topLevelBlock);
      }
    }
,false);
    context.putUserData(DFA_VARIABLE_INFO_KEY,cachedValue);
  }
  final MultiValuesMap<PsiVariable,PsiExpression> value=cachedValue.getValue();
  final Collection<PsiExpression> expressions=value == null ? null : value.get(variable);
  return expressions == null ? Collections.<PsiExpression>emptyList() : expressions;
}
