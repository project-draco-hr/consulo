{
  super.visitTryStatement(statement);
  final PsiCodeBlock tryBlock=statement.getTryBlock();
  if (tryBlock == null) {
    return;
  }
  final Set<PsiType> exceptionsThrown=ExceptionUtils.calculateExceptionsThrown(tryBlock);
  final int numExceptionsThrown=exceptionsThrown.size();
  final Set<PsiType> exceptionsCaught=new HashSet<PsiType>(numExceptionsThrown);
  final PsiParameter[] parameters=statement.getCatchBlockParameters();
  for (  final PsiParameter parameter : parameters) {
    final PsiType typeCaught=parameter.getType();
    for (    Object aExceptionsThrown : exceptionsThrown) {
      final PsiType typeThrown=(PsiType)aExceptionsThrown;
      if (exceptionsCaught.contains(typeThrown)) {
      }
 else       if (typeCaught.equals(typeThrown)) {
        exceptionsCaught.add(typeCaught);
      }
 else       if (typeCaught.isAssignableFrom(typeThrown)) {
        exceptionsCaught.add(typeCaught);
        final PsiTypeElement typeElement=parameter.getTypeElement();
        registerError(typeElement);
        return;
      }
    }
  }
}
