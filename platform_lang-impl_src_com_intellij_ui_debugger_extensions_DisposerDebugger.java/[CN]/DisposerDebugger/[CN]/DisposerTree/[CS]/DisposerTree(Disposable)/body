{
  myModificationToFilter=-1;
  final DisposerStructure structure=new DisposerStructure(this);
  final DefaultTreeModel model=new DefaultTreeModel(new DefaultMutableTreeNode());
  final Tree tree=new Tree(model);
  tree.setRootVisible(false);
  tree.setShowsRootHandles(true);
  tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  myTreeBuilder=new FilteringTreeBuilder(null,tree,DisposerTree.this,structure,AlphaComparator.INSTANCE){
    @Override public boolean isAutoExpandNode(    NodeDescriptor nodeDescriptor){
      return structure.getRootElement() == getOriginalNode(nodeDescriptor);
    }
  }
;
  myTreeBuilder.setFilteringMerge(200,MergingUpdateQueue.ANY_COMPONENT);
  Disposer.register(this,myTreeBuilder);
  myTree=tree;
  setLayout(new BorderLayout());
  add(new JBScrollPane(myTree),BorderLayout.CENTER);
  Disposer.getTree().addListener(this);
  Disposer.register(parent,this);
}
