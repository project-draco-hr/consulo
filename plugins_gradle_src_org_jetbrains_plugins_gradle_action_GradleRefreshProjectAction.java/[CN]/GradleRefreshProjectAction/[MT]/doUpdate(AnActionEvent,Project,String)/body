{
  String message=myErrorMessage.get();
  if (message != null) {
    GradleProjectStructureTreeModel model=GradleUtil.getProjectStructureTreeModel(event.getDataContext());
    if (model != null) {
      model.rebuild();
    }
    GradleConfigNotificationManager notificationManager=ServiceManager.getService(project,GradleConfigNotificationManager.class);
    notificationManager.processRefreshError(message);
    myErrorMessage.set(null);
  }
  boolean enabled=false;
  final GradleTaskManager taskManager=ServiceManager.getService(project,GradleTaskManager.class);
  if (taskManager != null) {
    enabled=!taskManager.hasTaskOfTypeInProgress(GradleTaskType.RESOLVE_PROJECT);
  }
  event.getPresentation().setEnabled(enabled);
}
