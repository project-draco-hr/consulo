{
  Map<PsiElement,String> renames=new HashMap<PsiElement,String>();
  renames.put(psiElement,newName);
  final GrField field=(GrField)psiElement;
  String fieldName=field.getName();
  for (  GrAccessorMethod getter : field.getGetters()) {
    renames.put(getter,RenamePropertyUtil.getGetterNameByOldName(newName,getter.getName()));
  }
  final GrAccessorMethod setter=field.getSetter();
  if (setter != null) {
    renames.put(setter,GroovyPropertyUtils.getSetterName(newName));
  }
  MultiMap<PsiNamedElement,UsageInfo> propertyUsages=new MultiMap<PsiNamedElement,UsageInfo>();
  MultiMap<PsiNamedElement,UsageInfo> simpleUsages=new MultiMap<PsiNamedElement,UsageInfo>();
  List<PsiReference> unknownUsages=new ArrayList<PsiReference>();
  for (  UsageInfo usage : usages) {
    final PsiReference ref=usage.getReference();
    if (ref instanceof GrReferenceExpression) {
      final GroovyResolveResult resolveResult=((GrReferenceExpression)ref).advancedResolve();
      final PsiElement element=resolveResult.getElement();
      if (resolveResult.isInvokedOnProperty()) {
        if (element == null) {
          unknownUsages.add(ref);
        }
 else {
          propertyUsages.putValue((PsiNamedElement)element,usage);
        }
      }
 else {
        simpleUsages.putValue((PsiNamedElement)element,usage);
      }
    }
 else     if (ref != null) {
      unknownUsages.add(ref);
    }
  }
  for (  PsiReference ref : unknownUsages) {
    handleElementRename(newName,ref,fieldName);
  }
  field.setName(newName);
  final GrAccessorMethod[] newGetters=field.getGetters();
  final GrAccessorMethod newSetter=field.getSetter();
  Map<String,PsiNamedElement> newElements=new HashMap<String,PsiNamedElement>();
  newElements.put(newName,field);
  for (  GrAccessorMethod newGetter : newGetters) {
    newElements.put(newGetter.getName(),newGetter);
  }
  if (newSetter != null) {
    newElements.put(newSetter.getName(),newSetter);
  }
  PsiManager manager=field.getManager();
  for (  PsiNamedElement element : simpleUsages.keySet()) {
    for (    UsageInfo info : simpleUsages.get(element)) {
      final String name=renames.get(element);
      rename(newElements.get(name),info,name == null ? newName : name,name != null,manager);
    }
  }
  for (  PsiNamedElement element : propertyUsages.keySet()) {
    for (    UsageInfo info : propertyUsages.get(element)) {
      rename(element,info,newName,true,manager);
    }
  }
  simpleUsages.clear();
  propertyUsages.clear();
  renames.clear();
  listener.elementRenamed(field);
}
