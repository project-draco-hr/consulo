{
  if (changes.size() > 0 && !ChangesUtil.hasFileChanges(changes)) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        Messages.showErrorDialog(myProject,VcsBundle.message("shelve.changes.only.directories"),VcsBundle.message("shelve.changes.action"));
      }
    }
);
    return;
  }
  try {
    final ShelvedChangeList list=ShelveChangesManager.getInstance(myProject).shelveChanges(changes,commitMessage);
    ShelvedChangesViewManager.getInstance(myProject).activateView(list);
    Change[] changesArray=changes.toArray(new Change[changes.size()]);
    ChangeList changeList=ChangesUtil.getChangeListIfOnlyOne(myProject,changesArray);
    if (changeList instanceof LocalChangeList) {
      LocalChangeList localChangeList=(LocalChangeList)changeList;
      if (localChangeList.getChanges().size() == changes.size() && !localChangeList.isReadOnly()) {
        ChangeListManager.getInstance(myProject).removeChangeList(localChangeList.getName());
      }
    }
  }
 catch (  final Exception ex) {
    LOG.info(ex);
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        Messages.showErrorDialog(myProject,VcsBundle.message("create.patch.error.title",ex.getMessage()),CommonBundle.getErrorTitle());
      }
    }
,ModalityState.NON_MODAL);
  }
}
