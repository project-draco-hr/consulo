{
  myProfileType=Profile.INSPECTION;
  mySampleProfile=new Computable<Profile>(){
    public Profile compute(){
      return new InspectionProfileImpl("Default");
    }
  }
;
  myRegistrar=registrar;
  mySeverityRegistrar=new SeverityRegistrar();
  myProcessor=new SchemeProcessor<Profile>(){
    public Profile readScheme(    final Document document) throws InvalidDataException, IOException, JDOMException {
      InspectionProfileImpl profile=new InspectionProfileImpl(getProfileName(document),myRegistrar,InspectionProfileManager.this);
      profile.load(document.getRootElement());
      return profile;
    }
    public boolean shouldBeSaved(    final Profile scheme){
      return ((InspectionProfileImpl)scheme).wasInitialized();
    }
    public void renameScheme(    final String name,    final Profile scheme){
      scheme.setName(name);
    }
    public void showWriteErrorMessage(    final Exception e,    final String schemeName,    final String filePath){
      LOG.error(e);
    }
    public Document writeScheme(    final Profile scheme) throws WriteExternalException {
      return ((InspectionProfileImpl)scheme).saveToDocument();
    }
    public void showReadErrorMessage(    final Exception e,    final String schemeName,    final String filePath){
      LOG.error(e);
    }
    public void initScheme(    final Profile scheme){
    }
  }
;
  mySchemesManager=schemesManagerFactory.createSchemesManager(FILE_SPEC,myProcessor,RoamingType.PER_USER);
}
