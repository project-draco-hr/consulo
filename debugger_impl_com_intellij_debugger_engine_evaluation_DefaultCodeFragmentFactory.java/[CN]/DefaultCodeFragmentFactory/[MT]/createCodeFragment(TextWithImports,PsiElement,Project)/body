{
  final PsiElementFactory elementFactory=PsiManager.getInstance(project).getElementFactory();
  final String text=item.getText();
  final PsiCodeFragment fragment;
  if (CodeFragmentKind.EXPRESSION == item.getKind()) {
    final String expressionText=StringUtil.endsWithChar(text,';') ? text.substring(0,text.length() - 1) : text;
    fragment=elementFactory.createExpressionCodeFragment(expressionText,context,null,true);
  }
 else   if (CodeFragmentKind.CODE_BLOCK == item.getKind()) {
    fragment=elementFactory.createCodeBlockCodeFragment(text,context,true);
  }
 else {
    fragment=null;
  }
  if (fragment != null) {
    if (item.getImports().length() > 0) {
      fragment.addImportsFromString(item.getImports());
    }
    fragment.setVisibilityChecker(PsiCodeFragment.VisibilityChecker.EVERYTHING_VISIBLE);
    fragment.putUserData(DebuggerExpressionComboBox.KEY,"DebuggerComboBoxEditor.IS_DEBUGGER_EDITOR");
  }
  return fragment;
}
