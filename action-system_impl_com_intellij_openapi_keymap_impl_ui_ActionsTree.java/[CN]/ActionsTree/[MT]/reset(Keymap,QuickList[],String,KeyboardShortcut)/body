{
  myKeymap=keymap;
  final PathsKeeper pathsKeeper=new PathsKeeper();
  pathsKeeper.storePaths();
  myRoot.removeAllChildren();
  ActionManager actionManager=ActionManager.getInstance();
  Project project=(Project)DataManager.getInstance().getDataContext(getComponent()).getData(DataConstants.PROJECT);
  Group mainGroup=ActionsTreeUtil.createMainGroup(project,myKeymap,allQuickLists,filter,true,filter != null ? ActionsTreeUtil.isActionFiltered(filter,true) : (shortcut != null ? ActionsTreeUtil.isActionFiltered(actionManager,myKeymap,shortcut) : null));
  if ((filter != null || shortcut != null) && mainGroup.initIds().isEmpty()) {
    mainGroup=ActionsTreeUtil.createMainGroup(project,myKeymap,allQuickLists,filter,false,filter != null ? ActionsTreeUtil.isActionFiltered(filter,false) : ActionsTreeUtil.isActionFiltered(actionManager,myKeymap,shortcut));
  }
  myRoot=ActionsTreeUtil.createNode(mainGroup);
  myMainGroup=mainGroup;
  MyModel model=(MyModel)myTree.getModel();
  model.setRoot(myRoot);
  model.nodeStructureChanged(myRoot);
  pathsKeeper.restorePaths();
}
