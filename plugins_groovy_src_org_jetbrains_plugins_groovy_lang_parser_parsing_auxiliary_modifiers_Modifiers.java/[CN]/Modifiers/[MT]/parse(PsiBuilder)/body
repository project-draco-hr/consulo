{
  PsiBuilder.Marker modifiersMarker=builder.mark();
  IElementType annotation=Annotation.parse(builder);
  IElementType modifier=Modifier.parse(builder);
  IElementType def=ParserUtils.lookAhead(builder,kDEF) ? kDEF : NONE;
  ParserUtils.getToken(builder,mNLS);
  if (!(ANNOTATION.equals(annotation) || MODIFIERS.equals(modifier) || kDEF.equals(def))) {
    modifiersMarker.rollbackTo();
    return WRONGWAY;
  }
  annotation=Annotation.parse(builder);
  modifier=Modifier.parse(builder);
  def=ParserUtils.lookAhead(builder,kDEF) ? kDEF : NONE;
  boolean moreThanOneModifier=false;
  while (ANNOTATION.equals(annotation) || MODIFIERS.equals(modifier) || kDEF.equals(def)) {
    annotation=Annotation.parse(builder);
    modifier=Modifier.parse(builder);
    def=ParserUtils.getToken(builder,kDEF) ? kDEF : NONE;
    ParserUtils.getToken(builder,mNLS);
    moreThanOneModifier=true;
  }
  modifiersMarker.done(MODIFIERS);
  return MODIFIERS;
}
