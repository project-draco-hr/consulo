{
  final List<String> downloaded=new ArrayList<String>();
  for (  String host : UpdateSettingsConfigurable.getInstance().getPluginHosts()) {
    try {
      final Document document=loadVersionInfo(host);
      if (document == null)       continue;
      for (      Object plugin : document.getRootElement().getChildren("plugin")) {
        Element pluginElement=(Element)plugin;
        final String pluginId=pluginElement.getAttributeValue("id");
        final String pluginUrl=pluginElement.getAttributeValue("url");
        final String pluginVersion=pluginElement.getAttributeValue("version");
        ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
          public void run(){
            try {
              final PluginUploader uploader=new PluginUploader(pluginId,pluginUrl,pluginVersion);
              if (uploader.prepareToInstall()) {
                downloaded.add(uploader.getPluginName());
              }
            }
 catch (            IOException e) {
            }
          }
        }
,IdeBundle.message("update.uploading.plugin.progress.title",pluginUrl),true,null);
      }
    }
 catch (    Exception e) {
    }
  }
  if (downloaded.isEmpty())   return null;
  return IdeBundle.message("update.plugin.upload.message",StringUtil.join(downloaded,"</li><li>"));
}
