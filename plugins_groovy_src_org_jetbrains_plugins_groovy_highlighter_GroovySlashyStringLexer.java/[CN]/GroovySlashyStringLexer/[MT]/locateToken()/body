{
  if (myEnd >= myBufferEnd)   return null;
  myStart=myEnd;
  if (checkForSlashEscape(myStart)) {
    myEnd=myStart + 2;
    return StringEscapesTokenTypes.VALID_STRING_ESCAPE_TOKEN;
  }
 else   if (checkForHexCodeStart(myStart)) {
    for (myEnd=myStart + 2; myEnd < myStart + 6; myEnd++) {
      if (myEnd >= myBufferEnd || !StringUtil.isHexDigit(myBuffer.charAt(myEnd))) {
        return StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
      }
    }
    return StringEscapesTokenTypes.VALID_STRING_ESCAPE_TOKEN;
  }
  while (myEnd < myBufferEnd && !checkForSlashEscape(myEnd) && !checkForHexCodeStart(myEnd))   myEnd++;
  return GroovyTokenTypes.mREGEX_CONTENT;
}
