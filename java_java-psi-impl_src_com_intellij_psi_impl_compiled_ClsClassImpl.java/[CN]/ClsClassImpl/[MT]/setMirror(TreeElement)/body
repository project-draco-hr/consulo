{
  setMirrorCheckingType(element,null);
  PsiClass mirror=SourceTreeToPsiMap.treeToPsiNotNull(element);
  PsiDocComment docComment=getDocComment();
  if (docComment != null) {
    ((ClsElementImpl)docComment).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirror.getDocComment()));
  }
  ((ClsElementImpl)getModifierList()).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirror.getModifierList()));
  ((ClsElementImpl)getNameIdentifier()).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirror.getNameIdentifier()));
  if (!isAnnotationType() && !isEnum()) {
    ((ClsElementImpl)getExtendsList()).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirror.getExtendsList()));
  }
  ((ClsElementImpl)getImplementsList()).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirror.getImplementsList()));
  ((ClsElementImpl)getTypeParameterList()).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirror.getTypeParameterList()));
  Ref<Boolean> extLog=Ref.create(true);
  List<PsiField> fields=getOwnFields();
  PsiField[] mirrorFields=mirror.getFields();
  if (fields.size() == mirrorFields.length) {
    for (int i=0; i < fields.size(); i++) {
      ((ClsElementImpl)fields.get(i)).setMirror(SourceTreeToPsiMap.psiToTreeNotNull(mirrorFields[i]));
    }
  }
 else {
    log(this,mirror,"fields:" + fields.size() + "!="+ mirrorFields.length,extLog);
  }
  List<PsiMethod> methods=getOwnMethods();
  PsiMethod[] mirrorMethods=mirror.getMethods();
  if (methods.size() == mirrorMethods.length) {
    for (int i=0; i < methods.size(); i++) {
      ((ClsElementImpl)methods.get(i)).setMirror(SourceTreeToPsiMap.psiToTreeNotNull(mirrorMethods[i]));
    }
  }
 else {
    log(this,mirror,"methods:" + methods.size() + "!="+ mirrorMethods.length,extLog);
  }
  List<PsiClass> classes=getOwnInnerClasses();
  PsiClass[] mirrorClasses=mirror.getInnerClasses();
  if (classes.size() == mirrorClasses.length) {
    for (int i=0; i < classes.size(); i++) {
      ((ClsElementImpl)classes.get(i)).setMirror(SourceTreeToPsiMap.psiToTreeNotNull(mirrorClasses[i]));
    }
  }
 else {
    log(this,mirror,"classes:" + classes.size() + "!="+ mirrorClasses.length,extLog);
  }
}
