{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  final PsiElement grandParent=parent.getParent();
  if (!(grandParent instanceof PsiMethodCallExpression)) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
  final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier == null) {
    return;
  }
  @NonNls final StringBuilder newExpressionText=new StringBuilder();
  if (deepHashCode) {
    newExpressionText.append("java.util.Arrays.deepHashCode(");
  }
 else {
    newExpressionText.append("java.util.Arrays.hashCode(");
  }
  newExpressionText.append(qualifier.getText());
  newExpressionText.append(')');
  replaceExpressionAndShorten(methodCallExpression,newExpressionText.toString());
}
