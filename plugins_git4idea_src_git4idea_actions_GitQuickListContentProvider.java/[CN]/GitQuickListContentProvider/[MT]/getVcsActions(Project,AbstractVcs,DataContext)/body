{
  if (activeVcs == null || !GitVcs.NAME.equals(activeVcs.getName())) {
    return null;
  }
  final ActionManager manager=ActionManager.getInstance();
  final List<AnAction> actions=new ArrayList<AnAction>();
  add("ActivateChangesToolWindow",manager,actions);
  actions.add(new Separator(activeVcs.getDisplayName()));
  add("ChangesView.AddUnversioned",manager,actions);
  add("CheckinProject",manager,actions);
  add("CheckinFiles",manager,actions);
  add("ChangesView.Rollback",manager,actions);
  addSeparator(actions);
  add("Vcs.ShowTabbedFileHistory",manager,actions);
  add("Annotate",manager,actions);
  add("Compare.SameVersion",manager,actions);
  add("Compare.LastVersion",manager,actions);
  addSeparator(actions);
  add("Git.Checkout",manager,actions);
  add("Git.Pull",manager,actions);
  add("Git.Push",manager,actions);
  add("Git.Push.Active.Branches",manager,actions);
  add("Git.Fetch",manager,actions);
  add("Vcs.UpdateProject",manager,actions);
  addSeparator(actions);
  add("Git.Stash",manager,actions);
  add("Git.Unstash",manager,actions);
  add("Git.Rebase",manager,actions);
  add("Git.Rebase.Continue",manager,actions);
  add("Git.Rebase.Abort",manager,actions);
  addSeparator(actions);
  add("CompareClipboardWithSelection",manager,actions);
  return actions;
}
