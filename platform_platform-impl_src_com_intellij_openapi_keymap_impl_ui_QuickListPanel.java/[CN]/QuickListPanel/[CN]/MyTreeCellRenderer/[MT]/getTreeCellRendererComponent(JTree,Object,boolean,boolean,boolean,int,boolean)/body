{
  super.getTreeCellRendererComponent(tree,value,sel,expanded,leaf,row,hasFocus);
  Icon icon=null;
  if (value instanceof DefaultMutableTreeNode) {
    boolean used=false;
    Object userObject=((DefaultMutableTreeNode)value).getUserObject();
    if (userObject instanceof Group) {
      Group group=(Group)userObject;
      final String name=group.getName();
      setText(name != null ? name : group.getId());
      icon=expanded ? group.getOpenIcon() : group.getIcon();
      if (icon == null) {
        icon=expanded ? getOpenIcon() : getClosedIcon();
      }
    }
 else     if (userObject instanceof String) {
      String actionId=(String)userObject;
      used=((DefaultListModel)myActionsList.getModel()).lastIndexOf(actionId) >= 0;
      AnAction action=ActionManager.getInstance().getAction(actionId);
      setText(action != null ? action.getTemplatePresentation().getText() : actionId);
      if (action != null) {
        Icon actionIcon=action.getTemplatePresentation().getIcon();
        if (actionIcon != null) {
          icon=actionIcon;
        }
      }
    }
 else     if (userObject instanceof QuickList) {
      QuickList list=(QuickList)userObject;
      icon=QUICK_LIST_ICON;
      setText(list.getDisplayName());
      used=((DefaultListModel)myActionsList.getModel()).lastIndexOf(list.getActionId()) >= 0;
    }
 else     if (userObject instanceof Separator) {
      setText("-------------");
    }
 else {
      throw new IllegalArgumentException("unknown userObject: " + userObject);
    }
    setIcon(ActionsTree.getEvenIcon(icon));
    if (sel) {
      setForeground(UIUtil.getTreeSelectionForeground());
    }
 else {
      Color foreground=used ? UIUtil.getTextInactiveTextColor() : UIUtil.getTreeForeground();
      setForeground(foreground);
    }
  }
  return this;
}
