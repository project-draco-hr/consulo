{
  myAllQuickLists=allQuickLists;
  myEditable=!QuickListsManager.getInstance().getSchemesManager().isShared(origin);
  myActionsList.setModel(new DefaultListModel());
  myActionsList.setCellRenderer(new MyListCellRenderer());
  myActionsList.getEmptyText().setText(KeyMapBundle.message("no.actions"));
  myActionsList.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2 && !e.isPopupTrigger()) {
        excludeSelectionAction();
      }
    }
  }
);
  myActionsList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      update();
    }
  }
);
  myIncludeActionButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      includeSelectedAction();
    }
  }
);
  myAddSeparatorButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      addSeparator();
    }
  }
);
  myActionsList.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      excludeSelectionAction();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myRemoveActionButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      excludeSelectionAction();
    }
  }
);
  myMoveActionUpButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int idx=myActionsList.getSelectedIndex();
      if (idx > 0) {
        DefaultListModel listModel=(DefaultListModel)myActionsList.getModel();
        Object oldValue=listModel.get(idx);
        listModel.removeElementAt(idx);
        listModel.add(--idx,oldValue);
        myActionsList.getSelectionModel().setSelectionInterval(idx,idx);
      }
    }
  }
);
  myMoveActionDownButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int idx=myActionsList.getSelectedIndex();
      DefaultListModel listModel=(DefaultListModel)myActionsList.getModel();
      if (idx < listModel.getSize() - 1) {
        Object oldValue=listModel.get(idx);
        listModel.removeElementAt(idx);
        listModel.add(++idx,oldValue);
        myActionsList.getSelectionModel().setSelectionInterval(idx,idx);
      }
    }
  }
);
  myDisplayName.setText(origin.getDisplayName());
  myDescription.setText(origin.getDescription());
  String[] ids=origin.getActionIds();
  for (  String id : ids) {
    includeActionId(id);
  }
  update();
}
