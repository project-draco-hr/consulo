{
  super(new LookAheadLexer(new AsteriskStripperLexer(new _GroovyDocLexer())){
    @Override protected void lookAhead(    Lexer baseLexer){
      if (baseLexer.getTokenType() == mGDOC_INLINE_TAG_END) {
        advanceAs(baseLexer,mGDOC_COMMENT_DATA);
        return;
      }
      if (baseLexer.getTokenType() == mGDOC_INLINE_TAG_START) {
        int depth=0;
        while (true) {
          IElementType type=baseLexer.getTokenType();
          if (type == null) {
            break;
          }
          if (type == mGDOC_INLINE_TAG_START) {
            depth++;
          }
          advanceLexer(baseLexer);
          if (type == mGDOC_INLINE_TAG_END) {
            depth--;
          }
          if (depth == 0) {
            break;
          }
        }
        return;
      }
      super.lookAhead(baseLexer);
    }
  }
,TOKENS_TO_MERGE);
}
