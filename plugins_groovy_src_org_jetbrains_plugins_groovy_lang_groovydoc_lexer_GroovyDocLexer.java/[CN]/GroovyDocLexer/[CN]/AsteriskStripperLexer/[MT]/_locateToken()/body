{
  if (myTokenEndOffset == myBufferEndOffset) {
    myTokenType=null;
    myBufferIndex=myBufferEndOffset;
    return;
  }
  myBufferIndex=myTokenEndOffset;
  if (myAfterLineBreak) {
    myAfterLineBreak=false;
    while (myTokenEndOffset < myBufferEndOffset && myBuffer.charAt(myTokenEndOffset) == '*' && (myTokenEndOffset + 1 >= myBufferEndOffset || myBuffer.charAt(myTokenEndOffset + 1) != '/')) {
      myTokenEndOffset++;
    }
    myInLeadingSpace=true;
    if (myBufferIndex < myTokenEndOffset) {
      myTokenType=mGDOC_ASTERISKS;
      return;
    }
  }
  if (myInLeadingSpace) {
    myInLeadingSpace=false;
    boolean lf=false;
    while (myTokenEndOffset < myBufferEndOffset && Character.isWhitespace(myBuffer.charAt(myTokenEndOffset))) {
      if (myBuffer.charAt(myTokenEndOffset) == '\n')       lf=true;
      myTokenEndOffset++;
    }
    final int state=myFlexLexer.yystate();
    if (state == _GroovyDocLexer.COMMENT_DATA || myTokenEndOffset < myBufferEndOffset && (myBuffer.charAt(myTokenEndOffset) == '@' || myBuffer.charAt(myTokenEndOffset) == '{' || myBuffer.charAt(myTokenEndOffset) == '\"' || myBuffer.charAt(myTokenEndOffset) == '<')) {
      myFlexLexer.yybegin(_GroovyDocLexer.COMMENT_DATA_START);
    }
    if (myBufferIndex < myTokenEndOffset) {
      myTokenType=lf || state == _GroovyDocLexer.PARAM_TAG_SPACE || state == _GroovyDocLexer.TAG_DOC_SPACE || state == _GroovyDocLexer.INLINE_TAG_NAME || state == _GroovyDocLexer.DOC_TAG_VALUE_IN_PAREN ? mGDOC_WHITESPACE : mGDOC_COMMENT_DATA;
      return;
    }
  }
  flexLocateToken();
}
