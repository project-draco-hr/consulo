{
  if (domain.length == 0) {
    if (range.length != 0) {
      LOG.error("" + range.length);
    }
    return location;
  }
  int count=getIntervals(FragmentSide.SIDE1).length;
  LOG.assertTrue(count == getIntervals(FragmentSide.SIDE2).length);
  int index=getMaxStartedIndex(domain,location);
  Interval leftInterval;
  Interval rightInterval;
  if (index == 0) {
    if (domain[0].contains(location)) {
      leftInterval=domain[0];
      rightInterval=range[0];
    }
 else {
      leftInterval=Interval.fromTo(0,domain[0].getStart());
      rightInterval=Interval.fromTo(0,range[0].getStart());
    }
  }
 else   if (index == count) {
    leftInterval=Interval.toInf(domain[count - 1].getEnd());
    rightInterval=Interval.toInf(range[count - 1].getEnd());
  }
 else {
    if (domain[index].contains(location)) {
      leftInterval=domain[index];
      rightInterval=range[index];
    }
 else {
      leftInterval=Interval.fromTo(domain[index - 1].getEnd(),domain[index].getStart());
      rightInterval=Interval.fromTo(range[index - 1].getEnd(),range[index].getStart());
    }
  }
  return LinearTransformation.oneToOne(location,leftInterval.getStart(),rightInterval);
}
