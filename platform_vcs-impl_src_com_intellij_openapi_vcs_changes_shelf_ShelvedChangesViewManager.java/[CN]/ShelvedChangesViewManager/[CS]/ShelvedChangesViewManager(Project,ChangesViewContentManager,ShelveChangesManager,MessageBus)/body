{
  myProject=project;
  myContentManager=contentManager;
  myShelveChangesManager=shelveChangesManager;
  bus.connect().subscribe(ShelveChangesManager.SHELF_TOPIC,new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      myUpdatePending=true;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          updateChangesContent();
        }
      }
,ModalityState.NON_MODAL);
    }
  }
);
  myMoveRenameInfo=new HashMap<Pair<String,String>,String>();
  myTree.setRootVisible(false);
  myTree.setShowsRootHandles(true);
  myTree.setCellRenderer(new ShelfTreeCellRenderer(project,myMoveRenameInfo));
  new TreeLinkMouseListener(new ShelfTreeCellRenderer(project,myMoveRenameInfo)).install(myTree);
  final AnAction showDiffAction=ActionManager.getInstance().getAction("ShelvedChanges.Diff");
  showDiffAction.registerCustomShortcutSet(CommonShortcuts.getDiff(),myTree);
  PopupHandler.installPopupHandler(myTree,"ShelvedChangesPopupMenu",ActionPlaces.UNKNOWN);
  myTree.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    final MouseEvent e){
      if (e.getClickCount() != 2)       return;
      DiffShelvedChangesAction.showShelvedChangesDiff(DataManager.getInstance().getDataContext(myTree));
    }
  }
);
  new TreeSpeedSearch(myTree,new Convertor<TreePath,String>(){
    public String convert(    TreePath o){
      final Object lc=o.getLastPathComponent();
      final Object lastComponent=lc == null ? null : ((DefaultMutableTreeNode)lc).getUserObject();
      if (lastComponent instanceof ShelvedChangeList) {
        return ((ShelvedChangeList)lastComponent).DESCRIPTION;
      }
 else       if (lastComponent instanceof ShelvedChange) {
        final ShelvedChange shelvedChange=(ShelvedChange)lastComponent;
        return shelvedChange.getBeforeFileName() == null ? shelvedChange.getAfterFileName() : shelvedChange.getBeforeFileName();
      }
 else       if (lastComponent instanceof ShelvedBinaryFile) {
        final ShelvedBinaryFile sbf=(ShelvedBinaryFile)lastComponent;
        final String value=sbf.BEFORE_PATH == null ? sbf.AFTER_PATH : sbf.BEFORE_PATH;
        int idx=value.lastIndexOf("/");
        idx=(idx == -1) ? value.lastIndexOf("\\") : idx;
        return idx > 0 ? value.substring(idx + 1) : value;
      }
      return null;
    }
  }
,true);
}
