{
  DefaultMutableTreeNode node=(DefaultMutableTreeNode)value;
  Object nodeValue=node.getUserObject();
  if (nodeValue instanceof ShelvedChangeList) {
    ShelvedChangeList changeListData=(ShelvedChangeList)nodeValue;
    if (changeListData.isRecycled()) {
      myIssueLinkRenderer.appendTextWithLinks(changeListData.DESCRIPTION,SimpleTextAttributes.GRAYED_BOLD_ATTRIBUTES);
    }
 else {
      myIssueLinkRenderer.appendTextWithLinks(changeListData.DESCRIPTION);
    }
    final int count=node.getChildCount();
    final String numFilesText=" (" + count + ((count == 1) ? " file) " : " files) ");
    append(numFilesText,SimpleTextAttributes.GRAY_ITALIC_ATTRIBUTES);
    final String date=DateFormatUtil.formatPrettyDateTime(changeListData.DATE);
    append(" (" + date + ")",SimpleTextAttributes.GRAYED_ATTRIBUTES);
    setIcon(PatchFileType.INSTANCE.getIcon());
  }
 else   if (nodeValue instanceof ShelvedChange) {
    ShelvedChange change=(ShelvedChange)nodeValue;
    final String movedMessage=myMoveRenameInfo.get(new Pair<String,String>(change.getBeforePath(),change.getAfterPath()));
    renderFileName(change.getBeforePath(),change.getFileStatus(),movedMessage);
  }
 else   if (nodeValue instanceof ShelvedBinaryFile) {
    ShelvedBinaryFile binaryFile=(ShelvedBinaryFile)nodeValue;
    String path=binaryFile.BEFORE_PATH;
    if (path == null) {
      path=binaryFile.AFTER_PATH;
    }
    final String movedMessage=myMoveRenameInfo.get(new Pair<String,String>(binaryFile.BEFORE_PATH,binaryFile.AFTER_PATH));
    renderFileName(path,binaryFile.getFileStatus(),movedMessage);
  }
}
