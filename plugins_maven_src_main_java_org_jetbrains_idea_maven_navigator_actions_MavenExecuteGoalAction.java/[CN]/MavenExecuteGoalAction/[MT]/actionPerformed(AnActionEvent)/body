{
  Project project=e.getRequiredData(CommonDataKeys.PROJECT);
  MavenExecuteGoalDialog dialog=new MavenExecuteGoalDialog(project,Collections.<String>emptyList());
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  MavenProjectsManager projectsManager=MavenProjectsManager.getInstance(project);
  File mavenHome=MavenUtil.resolveMavenHomeDirectory(projectsManager.getGeneralSettings().getMavenHome());
  if (mavenHome == null) {
    throw new RuntimeException();
  }
  List<String> params=Arrays.asList(ParametersList.parse(dialog.getGoals()));
  MavenRunnerParameters parameters=new MavenRunnerParameters(true,dialog.getWorkDirectory(),params,null);
  MavenGeneralSettings generalSettings=new MavenGeneralSettings();
  generalSettings.setMavenHome(mavenHome.getPath());
  MavenRunnerSettings runnerSettings=MavenRunner.getInstance(project).getSettings().clone();
  runnerSettings.setMavenProperties(new LinkedHashMap<String,String>());
  runnerSettings.setSkipTests(false);
  MavenRunConfigurationType.runConfiguration(project,parameters,generalSettings,runnerSettings,null);
}
