{
  super.visitDeclarationStatement(statement);
  final PsiElement[] declaredElements=statement.getDeclaredElements();
  if (declaredElements == null || declaredElements.length == 0) {
    return;
  }
  for (int i=0; i < declaredElements.length; i++) {
    final PsiElement declaredElement=declaredElements[i];
    if (!(declaredElement instanceof PsiLocalVariable)) {
      return;
    }
    final PsiLocalVariable variable=(PsiLocalVariable)declaredElement;
    if (!variable.hasModifierProperty(PsiModifier.FINAL)) {
      return;
    }
  }
  final PsiCodeBlock containingBlock=(PsiCodeBlock)PsiTreeUtil.getParentOfType(statement,PsiCodeBlock.class);
  if (containingBlock == null) {
    return;
  }
  for (int i=0; i < declaredElements.length; i++) {
    final PsiLocalVariable variable=(PsiLocalVariable)declaredElements[i];
    if (variableIsUsedInInnerClass(containingBlock,variable)) {
      return;
    }
  }
  final PsiLocalVariable variable1=(PsiLocalVariable)statement.getDeclaredElements()[0];
  registerModifierError(PsiModifier.FINAL,variable1);
}
