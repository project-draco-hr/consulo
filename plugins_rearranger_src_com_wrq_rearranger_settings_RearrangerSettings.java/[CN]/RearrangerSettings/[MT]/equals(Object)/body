{
  if (!(object instanceof RearrangerSettings))   return false;
  final RearrangerSettings rs=(RearrangerSettings)object;
  if (rs.getClassOrderAttributeList().size() != getClassOrderAttributeList().size())   return false;
  if (rs.getItemOrderAttributeList().size() != getItemOrderAttributeList().size())   return false;
  for (int i=0; i < getClassOrderAttributeList().size(); i++) {
    if (!getClassOrderAttributeList().get(i).equals(rs.getClassOrderAttributeList().get(i)))     return false;
  }
  for (int i=0; i < getItemOrderAttributeList().size(); i++) {
    if (!getItemOrderAttributeList().get(i).equals(rs.getItemOrderAttributeList().get(i)))     return false;
  }
  if (!rs.getExtractedMethodsSettings().equals(getExtractedMethodsSettings()))   return false;
  if (rs.isKeepGettersSettersTogether() != isKeepGettersSettersTogether())   return false;
  if (rs.isKeepGettersSettersWithProperty() != isKeepGettersSettersWithProperty())   return false;
  if (rs.isKeepOverloadedMethodsTogether() != isKeepOverloadedMethodsTogether())   return false;
  if (rs.overloadedOrder != overloadedOrder)   return false;
  if (!rs.globalCommentPattern.equals(globalCommentPattern))   return false;
  if (rs.askBeforeRearranging != askBeforeRearranging)   return false;
  if (rs.rearrangeInnerClasses != rearrangeInnerClasses)   return false;
  if (rs.showParameterTypes != showParameterTypes)   return false;
  if (rs.showParameterNames != showParameterNames)   return false;
  if (rs.showFields != showFields)   return false;
  if (rs.showTypeAfterMethod != showTypeAfterMethod)   return false;
  if (rs.showRules != showRules)   return false;
  if (rs.showMatchedRules != showMatchedRules)   return false;
  if (rs.showComments != showComments)   return false;
  if (rs.removeBlanksInsideCodeBlocks != removeBlanksInsideCodeBlocks)   return false;
  if (!rs.afterClassLBrace.equals(afterClassLBrace))   return false;
  if (!rs.afterClassRBrace.equals(afterClassRBrace))   return false;
  if (!rs.beforeClassRBrace.equals(beforeClassRBrace))   return false;
  if (!rs.beforeMethodLBrace.equals(beforeMethodLBrace))   return false;
  if (!rs.afterMethodLBrace.equals(afterMethodLBrace))   return false;
  if (!rs.afterMethodRBrace.equals(afterMethodRBrace))   return false;
  if (!rs.beforeMethodRBrace.equals(beforeMethodRBrace))   return false;
  if (!rs.newlinesAtEOF.equals(newlinesAtEOF))   return false;
  if (!rs.defaultGSDefinition.equals(defaultGSDefinition))   return false;
  if (primaryMethodList.size() != rs.primaryMethodList.size())   return false;
  for (int i=0; i < primaryMethodList.size(); i++) {
    PrimaryMethodSetting pms=primaryMethodList.get(i);
    PrimaryMethodSetting rspms=rs.primaryMethodList.get(i);
    if (!rspms.equals(pms))     return false;
  }
  return true;
}
