{
  final RearrangerSettings result=new RearrangerSettings();
  for (  AttributeGroup itemAttributes : itemOrderAttributeList) {
    result.itemOrderAttributeList.add(itemAttributes.deepCopy());
  }
  for (  AttributeGroup classAttributes : classOrderAttributeList) {
    result.classOrderAttributeList.add(classAttributes.deepCopy());
  }
  result.relatedMethodsSettings=relatedMethodsSettings.deepCopy();
  result.keepGettersSettersTogether=keepGettersSettersTogether;
  result.keepGettersSettersWithProperty=keepGettersSettersWithProperty;
  result.keepOverloadedMethodsTogether=keepOverloadedMethodsTogether;
  result.globalCommentPattern=globalCommentPattern;
  result.overloadedOrder=overloadedOrder;
  result.askBeforeRearranging=askBeforeRearranging;
  result.rearrangeInnerClasses=rearrangeInnerClasses;
  result.showParameterNames=showParameterNames;
  result.showParameterTypes=showParameterTypes;
  result.showFields=showFields;
  result.showTypeAfterMethod=showTypeAfterMethod;
  result.showRules=showRules;
  result.showMatchedRules=showMatchedRules;
  result.showComments=showComments;
  result.removeBlanksInsideCodeBlocks=removeBlanksInsideCodeBlocks;
  result.afterClassLBrace=afterClassLBrace.deepCopy();
  result.afterClassRBrace=afterClassRBrace.deepCopy();
  result.beforeClassRBrace=beforeClassRBrace.deepCopy();
  result.beforeMethodLBrace=beforeMethodLBrace.deepCopy();
  result.afterMethodLBrace=afterMethodLBrace.deepCopy();
  result.afterMethodRBrace=afterMethodRBrace.deepCopy();
  result.beforeMethodRBrace=beforeMethodRBrace.deepCopy();
  result.newlinesAtEOF=newlinesAtEOF.deepCopy();
  result.defaultGSDefinition=defaultGSDefinition.deepCopy();
  return result;
}
