{
  final RearrangerSettings result=new RearrangerSettings();
  for (  AttributeGroup itemAttributes : myItemOrderAttributeList) {
    result.myItemOrderAttributeList.add(itemAttributes.deepCopy());
  }
  for (  AttributeGroup classAttributes : myClassOrderAttributeList) {
    result.myClassOrderAttributeList.add(classAttributes.deepCopy());
  }
  result.myRelatedMethodsSettings=myRelatedMethodsSettings.deepCopy();
  result.myKeepGettersSettersTogether=myKeepGettersSettersTogether;
  result.myKeepGettersSettersWithProperty=myKeepGettersSettersWithProperty;
  result.myKeepOverloadedMethodsTogether=myKeepOverloadedMethodsTogether;
  result.myGlobalCommentPattern=myGlobalCommentPattern;
  result.myOverloadedOrder=myOverloadedOrder;
  result.myAskBeforeRearranging=myAskBeforeRearranging;
  result.myRearrangeInnerClasses=myRearrangeInnerClasses;
  result.myShowParameterNames=myShowParameterNames;
  result.myShowParameterTypes=myShowParameterTypes;
  result.myShowFields=myShowFields;
  result.myShowTypeAfterMethod=myShowTypeAfterMethod;
  result.myShowRules=myShowRules;
  result.myShowMatchedRules=myShowMatchedRules;
  result.myShowComments=myShowComments;
  result.myRemoveBlanksInsideCodeBlocks=myRemoveBlanksInsideCodeBlocks;
  result.myAfterClassLBrace=myAfterClassLBrace.deepCopy();
  result.myAfterClassRBrace=myAfterClassRBrace.deepCopy();
  result.myBeforeClassRBrace=myBeforeClassRBrace.deepCopy();
  result.beforeMethodLBrace=beforeMethodLBrace.deepCopy();
  result.myAfterMethodLBrace=myAfterMethodLBrace.deepCopy();
  result.myAfterMethodRBrace=myAfterMethodRBrace.deepCopy();
  result.myBeforeMethodRBrace=myBeforeMethodRBrace.deepCopy();
  result.myNewLinesAtEOF=myNewLinesAtEOF.deepCopy();
  result.myDefaultGSDefinition=myDefaultGSDefinition.deepCopy();
  return result;
}
