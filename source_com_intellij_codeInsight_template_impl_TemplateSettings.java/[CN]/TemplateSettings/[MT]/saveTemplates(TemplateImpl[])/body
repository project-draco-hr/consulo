{
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      List templateNames=new ArrayList();
      for (int i=0; i < templates.length; i++) {
        templateNames.add(templates[i].getKey());
      }
      myDeletedTemplates.clear();
      for (Iterator it=myDefaultTemplates.keySet().iterator(); it.hasNext(); ) {
        String defTemplateName=(String)it.next();
        if (!templateNames.contains(defTemplateName)) {
          myDeletedTemplates.add(defTemplateName);
        }
      }
      File[] files=getUserTemplateFiles();
      if (files != null) {
        for (int i=0; i < files.length; i++) {
          files[i].delete();
        }
      }
      if (templates.length == 0)       return;
      com.intellij.util.containers.HashMap groupToDocumentMap=new com.intellij.util.containers.HashMap();
      for (int i=0; i < templates.length; i++) {
        TemplateImpl template=templates[i];
        if (template.equals(myDefaultTemplates.get(template.getKey())))         continue;
        String groupName=templates[i].getGroupName();
        Element templateSetElement=(Element)groupToDocumentMap.get(groupName);
        if (templateSetElement == null) {
          templateSetElement=new Element(TEMPLATE_SET);
          templateSetElement.setAttribute(GROUP,groupName);
          groupToDocumentMap.put(groupName,templateSetElement);
        }
        try {
          saveTemplate(template,templateSetElement);
        }
 catch (        IllegalDataException e) {
        }
      }
      File dir=getTemplateDirectory(true);
      if (dir == null) {
        return;
      }
      Collection groups=groupToDocumentMap.entrySet();
      for (Iterator it=groups.iterator(); it.hasNext(); ) {
        Map.Entry entry=(Map.Entry)it.next();
        String groupName=(String)entry.getKey();
        Element templateSetElement=(Element)entry.getValue();
        String fileName=convertName(groupName);
        String filePath=findFirstNotExistingFile(dir,fileName,".xml");
        try {
          JDOMUtil.writeDocument(new Document(templateSetElement),filePath,CodeStyleSettingsManager.getSettings(null).getLineSeparator());
        }
 catch (        IOException e) {
          LOG.error(e);
        }
      }
    }
  }
);
}
