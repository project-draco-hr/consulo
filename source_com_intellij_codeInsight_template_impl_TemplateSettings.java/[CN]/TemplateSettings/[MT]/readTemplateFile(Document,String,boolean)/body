{
  if (document == null) {
    throw new InvalidDataException();
  }
  Element root=document.getRootElement();
  if (root == null || !TEMPLATE_SET.equals(root.getName())) {
    throw new InvalidDataException();
  }
  String groupName=root.getAttributeValue(GROUP);
  if (groupName == null || groupName.length() == 0)   groupName=defGroupName;
  for (  final Object o1 : root.getChildren(TEMPLATE)) {
    Element element=(Element)o1;
    String name=element.getAttributeValue(NAME);
    String value=element.getAttributeValue(VALUE);
    String description;
    String resourceBundle=element.getAttributeValue(RESOURCE_BUNDLE);
    String key=element.getAttributeValue(KEY);
    if (resourceBundle != null && key != null) {
      ResourceBundle bundle=ResourceBundle.getBundle(resourceBundle);
      description=bundle.getString(key);
    }
 else {
      description=element.getAttributeValue(DESCRIPTION);
    }
    String shortcut=element.getAttributeValue(SHORTCUT);
    if (isDefault && myDeletedTemplates.contains(name))     continue;
    TemplateImpl template=addTemplate(name,value,groupName,description,shortcut,isDefault);
    template.setToReformat(Boolean.valueOf(element.getAttributeValue(TO_REFORMAT)));
    template.setToShortenLongNames(Boolean.valueOf(element.getAttributeValue(TO_SHORTEN_FQ_NAMES)));
    template.setDeactivated(Boolean.valueOf(element.getAttributeValue(DEACTIVATED)));
    for (    final Object o : element.getChildren(VARIABLE)) {
      Element e=(Element)o;
      String variableName=e.getAttributeValue(NAME);
      String expression=e.getAttributeValue(EXPRESSION);
      String defaultValue=e.getAttributeValue(DEFAULT_VALUE);
      boolean isAlwaysStopAt=Boolean.valueOf(e.getAttributeValue(ALWAYS_STOP_AT));
      template.addVariable(variableName,expression,defaultValue,isAlwaysStopAt);
    }
    Element context=element.getChild(CONTEXT);
    if (context != null) {
      DefaultJDOMExternalizer.readExternal(template.getTemplateContext(),context);
    }
  }
}
