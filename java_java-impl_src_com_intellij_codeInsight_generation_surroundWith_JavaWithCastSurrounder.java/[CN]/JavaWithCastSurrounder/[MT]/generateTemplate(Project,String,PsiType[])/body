{
  final TemplateManager templateManager=TemplateManager.getInstance(project);
  final Template template=templateManager.createTemplate("","");
  template.setToReformat(true);
  Set<LookupElement> itemSet=new LinkedHashSet<LookupElement>();
  for (  PsiType type : suggestedTypes) {
    itemSet.add(PsiTypeLookupItem.createLookupItem(type));
  }
  final LookupElement[] lookupItems=itemSet.toArray(new LookupElement[itemSet.size()]);
  final Result result=suggestedTypes.length > 0 ? new PsiTypeResult(suggestedTypes[0],project) : null;
  Expression expr=new Expression(){
    public LookupElement[] calculateLookupItems(    ExpressionContext context){
      return lookupItems.length > 1 ? lookupItems : null;
    }
    public Result calculateResult(    ExpressionContext context){
      return result;
    }
    public Result calculateQuickResult(    ExpressionContext context){
      return null;
    }
  }
;
  template.addTextSegment("((");
  template.addVariable(TYPE_TEMPLATE_VARIABLE,expr,expr,true);
  template.addTextSegment(")" + exprText + ")");
  template.addEndVariable();
  return template;
}
