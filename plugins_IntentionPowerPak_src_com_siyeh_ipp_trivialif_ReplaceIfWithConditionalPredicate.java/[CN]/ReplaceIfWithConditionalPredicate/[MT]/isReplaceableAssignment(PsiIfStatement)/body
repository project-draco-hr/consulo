{
  final PsiStatement thenBranch=ConditionalUtils.stripBraces(ifStatement.getThenBranch());
  final PsiStatement elseBranch=ConditionalUtils.stripBraces(ifStatement.getElseBranch());
  if (thenBranch == null || elseBranch == null) {
    return false;
  }
  if (!(thenBranch instanceof PsiExpressionStatement) || !(elseBranch instanceof PsiExpressionStatement)) {
    return false;
  }
  final PsiExpressionStatement thenExpressionStatement=(PsiExpressionStatement)thenBranch;
  final PsiExpressionStatement elseExpressionStatement=(PsiExpressionStatement)elseBranch;
  final PsiExpression thenExpression=thenExpressionStatement.getExpression();
  final PsiExpression elseExpression=elseExpressionStatement.getExpression();
  if (!(thenExpression instanceof PsiAssignmentExpression) || !(elseExpression instanceof PsiAssignmentExpression)) {
    return false;
  }
  final PsiAssignmentExpression thenAssignmentExpression=(PsiAssignmentExpression)thenExpression;
  final PsiAssignmentExpression elseAssignmentExpression=(PsiAssignmentExpression)elseExpression;
  final PsiExpression thenRhs=thenAssignmentExpression.getRExpression();
  final PsiExpression elseRhs=elseAssignmentExpression.getRExpression();
  if (thenRhs == null || elseRhs == null) {
    return false;
  }
  final IElementType thenTokenType=thenAssignmentExpression.getOperationTokenType();
  final IElementType elseTokenType=elseAssignmentExpression.getOperationTokenType();
  if (!thenTokenType.equals(elseTokenType)) {
    return false;
  }
  final PsiExpression thenLhs=thenAssignmentExpression.getLExpression();
  final PsiExpression elseLhs=elseAssignmentExpression.getLExpression();
  return EquivalenceChecker.expressionsAreEquivalent(thenLhs,elseLhs);
}
