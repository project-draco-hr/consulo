{
  myProject=project;
  myChangesViewManager=myProject.isDefault() ? new DummyChangesView(myProject) : ChangesViewManager.getInstance(myProject);
  myFileStatusManager=FileStatusManager.getInstance(myProject);
  myComposite=new FileHolderComposite(project);
  myIgnoredIdeaLevel=new IgnoredFilesComponent(myProject);
  myUpdater=new UpdateRequestsQueue(myProject,ourUpdateAlarm,new ActualUpdater());
  myWorker=new ChangeListWorker(myProject,new MyChangesDeltaForwarder(myProject,ourUpdateAlarm));
  myDelayedNotificator=new DelayedNotificator(myListeners,ourUpdateAlarm);
  myModifier=new Modifier(myWorker,myDelayedNotificator);
  myConflictTracker=new ChangelistConflictTracker(project,this,myFileStatusManager,EditorNotifications.getInstance(project));
  myListeners.addListener(new ChangeListAdapter(){
    @Override public void defaultListChanged(    final ChangeList oldDefaultList,    ChangeList newDefaultList){
      if (((LocalChangeList)oldDefaultList).hasDefaultName() || oldDefaultList.equals(newDefaultList))       return;
      if (!ApplicationManager.getApplication().isUnitTestMode() && oldDefaultList.getChanges().isEmpty() && !((LocalChangeList)oldDefaultList).isReadOnly()) {
        invokeAfterUpdate(new Runnable(){
          public void run(){
            if (getChangeList(((LocalChangeList)oldDefaultList).getId()) == null) {
              return;
            }
switch (config.REMOVE_EMPTY_INACTIVE_CHANGELISTS) {
case SHOW_CONFIRMATION:
              VcsConfirmationDialog dialog=new VcsConfirmationDialog(myProject,new VcsShowConfirmationOption(){
                public Value getValue(){
                  return config.REMOVE_EMPTY_INACTIVE_CHANGELISTS;
                }
                public void setValue(                Value value){
                  config.REMOVE_EMPTY_INACTIVE_CHANGELISTS=value;
                }
                @Override public boolean isPersistent(){
                  return true;
                }
              }
,"<html>The empty changelist '" + StringUtil.first(oldDefaultList.getName(),30,true) + "' is no longer active.<br>"+ "Do you want to remove it?</html>","&Remember my choice");
            dialog.show();
          if (!dialog.isOK()) {
            return;
          }
        break;
case DO_NOTHING_SILENTLY:
      return;
case DO_ACTION_SILENTLY:
    break;
}
removeChangeList((LocalChangeList)oldDefaultList);
}
}
,InvokeAfterUpdateMode.SILENT,null,null);
}
}
}
);
}
