{
  final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(myProject);
  for (  VcsDirectoryMapping mapping : vcsManager.getDirectoryMappings()) {
    final AbstractVcs vcs=vcsManager.findVcsByName(mapping.getVcs());
    final VirtualFile file=LocalFileSystem.getInstance().findFileByPath(mapping.getDirectory());
    if (vcs != null && file != null) {
      if (indicator != null) {
        indicator.setText(mapping.getDirectory());
      }
      final VcsDirtyScopeImpl scope=new VcsDirtyScopeImpl(vcs,myProject);
      scope.addDirtyDirRecursively(new FilePathImpl(file));
      updateLastUnchangedContents(scope);
    }
  }
  for (  LocalChangeList list : getChangeListsCopy()) {
    for (    Change change : list.getChanges()) {
      final VirtualFile file=change.getVirtualFile();
      final ContentRevision before=change.getBeforeRevision();
      if (file != null && before != null && !LastUnchangedContentTracker.hasSavedContent(file)) {
        try {
          final String content=before.getContent();
          if (content != null) {
            LastUnchangedContentTracker.forceSavedContent(file,content);
          }
        }
 catch (        VcsException e) {
          LOG.info(e);
        }
      }
    }
  }
}
