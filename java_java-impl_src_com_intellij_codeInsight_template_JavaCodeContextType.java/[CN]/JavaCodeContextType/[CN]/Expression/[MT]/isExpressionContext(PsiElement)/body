{
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiJavaCodeReferenceElement)) {
    return false;
  }
  if (((PsiJavaCodeReferenceElement)parent).isQualified()) {
    return false;
  }
  if (parent.getParent() instanceof PsiMethodCallExpression) {
    return false;
  }
  if (psiElement().withParents(PsiTypeElement.class,PsiMember.class).accepts(parent)) {
    return false;
  }
  if (JavaCompletionData.INSIDE_PARAMETER_LIST.accepts(element)) {
    return false;
  }
  ProcessingContext context=new ProcessingContext();
  if (psiElement().inside(PsiExpression.class).afterLeaf(psiElement().inside(psiElement(PsiExpression.class).save("prevExpr"))).accepts(element,context)) {
    PsiExpression prevExpr=(PsiExpression)context.get("prevExpr");
    if (prevExpr.getTextRange().getEndOffset() <= element.getTextRange().getStartOffset()) {
      return false;
    }
  }
  return true;
}
