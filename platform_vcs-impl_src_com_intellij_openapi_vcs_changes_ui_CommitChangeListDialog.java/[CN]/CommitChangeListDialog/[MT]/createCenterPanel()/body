{
  JPanel rootPane=new JPanel(new BorderLayout());
  mySplitter=new Splitter(true);
  mySplitter.setHonorComponentsMinimumSize(true);
  mySplitter.setFirstComponent(myBrowser);
  mySplitter.setSecondComponent(myCommitMessageArea);
  mySplitter.setDividerWidth(3);
  rootPane.add(mySplitter,BorderLayout.CENTER);
  JComponent browserHeader=myBrowser.getHeaderPanel();
  myBrowser.remove(browserHeader);
  rootPane.add(browserHeader,BorderLayout.NORTH);
  JPanel infoPanel=new JPanel(new BorderLayout());
  myChangesInfoCalculator=new ChangeInfoCalculator();
  myLegend=new CommitLegendPanel(myChangesInfoCalculator);
  JPanel commonPanel=new JPanel(new BorderLayout());
  commonPanel.add(myLegend.getComponent());
  commonPanel.add(myCheckSpellingBox,BorderLayout.SOUTH);
  infoPanel.add(commonPanel,BorderLayout.NORTH);
  infoPanel.add(myAdditionalOptionsPanel,BorderLayout.CENTER);
  rootPane.add(infoPanel,BorderLayout.EAST);
  infoPanel.setBorder(IdeBorderFactory.createEmptyBorder(0,10,0,0));
  rootPane.add(myWarningLabel,BorderLayout.SOUTH);
  commonPanel.setBorder(IdeBorderFactory.createEmptyBorder(0,10,0,0));
  final JPanel wrapper=new JPanel(new GridBagLayout());
  final GridBagConstraints gb=new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0);
  final JPanel panel=new JPanel(new BorderLayout());
  panel.add(wrapper,BorderLayout.WEST);
  rootPane.add(panel,BorderLayout.SOUTH);
  myWarningLabel.setBorder(BorderFactory.createEmptyBorder(5,5,0,5));
  wrapper.add(myWarningLabel,gb);
  myDetailsSplitter=new SplitterWithSecondHideable(true,"Details",rootPane,new OnOffListener<Integer>(){
    @Override public void on(    Integer integer){
      if (!myAdjustWhenShown.isAdjusted())       return;
      final Dimension dialogSize=getSize();
      setSize(dialogSize.width,dialogSize.height + integer);
      repaint();
    }
    @Override public void off(    Integer integer){
      if (!myAdjustWhenShown.isAdjusted())       return;
      final Dimension dialogSize=getSize();
      setSize(dialogSize.width,dialogSize.height - integer);
      repaint();
    }
  }
){
    @Override protected RefreshablePanel createDetails(){
      initDetails();
      return myDiffDetails;
    }
    @Override protected float getSplitterInitialProportion(){
      float value=0;
      final String remembered=PropertiesComponent.getInstance().getValue(DETAILS_SPLITTER_PROPORTION_OPTION);
      if (remembered != null) {
        try {
          value=Float.valueOf(remembered);
        }
 catch (        NumberFormatException e) {
        }
      }
      if (value <= 0.05 || value >= 0.95) {
        return 0.7f;
      }
      return value;
    }
  }
;
  return myDetailsSplitter.getComponent();
}
