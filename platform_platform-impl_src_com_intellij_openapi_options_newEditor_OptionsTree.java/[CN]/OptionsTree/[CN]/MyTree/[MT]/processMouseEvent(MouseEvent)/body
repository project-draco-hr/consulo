{
  final MyTreeUi ui=(MyTreeUi)myTree.getUI();
  final boolean toggleNow=e.getID() == MouseEvent.MOUSE_RELEASED && UIUtil.isActionClick(e,MouseEvent.MOUSE_RELEASED) && !ui.isToggleEvent(e);
  final boolean toggleLater=e.getID() == MouseEvent.MOUSE_PRESSED;
  if (toggleNow || toggleLater) {
    final TreePath path=getPathForLocation(e.getX(),e.getY());
    if (path != null) {
      final Rectangle bounds=getPathBounds(path);
      if (bounds != null && path.getLastPathComponent() instanceof DefaultMutableTreeNode) {
        DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();
        final boolean selected=isPathSelected(path);
        final boolean expanded=isExpanded(path);
        final Component comp=myRendrer.getTreeCellRendererComponent(this,node,selected,expanded,node.isLeaf(),getRowForPath(path),isFocusOwner());
        comp.setBounds(bounds);
        comp.validate();
        Point point=new Point(e.getX() - bounds.x,e.getY() - bounds.y);
        if (myRendrer.isUnderHandle(point)) {
          if (toggleNow) {
            ui.toggleExpandState(path);
            e.consume();
            return;
          }
 else           if (toggleLater) {
            e.consume();
            return;
          }
        }
      }
    }
  }
  super.processMouseEvent(e);
}
