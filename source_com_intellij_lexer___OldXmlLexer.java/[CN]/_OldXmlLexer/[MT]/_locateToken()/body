{
  char yy_lookahead;
  int yy_anchor=YY_NO_ANCHOR;
  int yy_state=yy_state_dtrans[yy_lexical_state];
  int yy_next_state=YY_NO_STATE;
  int yy_last_accept_state=YY_NO_STATE;
  boolean yy_initial=true;
  int yy_this_accept;
  yy_buffer_start=yy_buffer_index;
  yy_this_accept=yy_acpt[yy_state];
  if (YY_NOT_ACCEPT != yy_this_accept) {
    yy_last_accept_state=yy_state;
    yy_buffer_end=yy_buffer_index;
  }
  while (true) {
    if (yy_buffer_index < yy_buffer_length) {
      yy_lookahead=yy_buffer[yy_buffer_index++];
      if (yy_lookahead < 0 || yy_lookahead > 127) {
        if (Character.isJavaIdentifierStart(yy_lookahead)) {
          yy_lookahead='A';
        }
 else         if (Character.isJavaIdentifierPart(yy_lookahead)) {
          yy_lookahead='9';
        }
 else {
          yy_lookahead='#';
        }
      }
    }
 else {
      yy_lookahead=YYEOF;
    }
    yy_next_state=YY_F;
    if (YYEOF != yy_lookahead) {
      yy_next_state=yy_nxt[yy_rmap[yy_state]][yy_cmap[yy_lookahead]];
    }
    if (YY_F != yy_next_state) {
      yy_state=yy_next_state;
      yy_initial=false;
      yy_this_accept=yy_acpt[yy_state];
      if (YY_NOT_ACCEPT != yy_this_accept) {
        yy_last_accept_state=yy_state;
        yy_buffer_end=yy_buffer_index;
      }
    }
 else {
      if (YYEOF == yy_lookahead && true == yy_initial) {
        myTokenType=null;
        return;
      }
 else       if (YY_NO_STATE == yy_last_accept_state) {
        throw (new Error("Lexical Error: Unmatched Input."));
      }
 else {
        yy_buffer_index=yy_buffer_end;
        yy_anchor=yy_acpt[yy_last_accept_state];
        if (0 != (YY_END & yy_anchor)) {
          --yy_buffer_end;
        }
        if (0 != (YY_START & yy_anchor)) {
          ++yy_buffer_start;
        }
switch (yy_last_accept_state) {
case 1:
{
            myTokenType=XmlTokenType.XML_DATA_CHARACTERS;
            return;
          }
case -2:
        break;
case 2:
{
        myTokenType=XmlTokenType.XML_WHITE_SPACE;
        return;
      }
case -3:
    break;
case 3:
{
    myTokenType=XmlTokenType.XML_BAD_CHARACTER;
    return;
  }
case -4:
break;
case 4:
{
myTokenType=XmlTokenType.XML_START_TAG_START;
yy_lexical_state=TAG_NAME;
return;
}
case -5:
break;
case 5:
{
myTokenType=XmlTokenType.XML_END_TAG_START;
yy_lexical_state=TAG_NAME;
return;
}
case -6:
break;
case 6:
{
myTokenType=XmlTokenType.XML_PI_START;
yy_lexical_state=PROCESSING_INSTRUCTION;
return;
}
case -7:
break;
case 7:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -8:
break;
case 8:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -9:
break;
case 9:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -10:
break;
case 10:
{
myTokenType=XmlTokenType.XML_COMMENT_START;
yy_lexical_state=COMMENT;
return;
}
case -11:
break;
case 11:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -12:
break;
case 12:
{
myTokenType=XmlTokenType.XML_DECL_START;
yy_lexical_state=DECL;
return;
}
case -13:
break;
case 13:
{
myTokenType=XmlTokenType.XML_ENTITY_DECL_START;
yy_lexical_state=DOCTYPE_MARKUP;
return;
}
case -14:
break;
case 14:
{
myTokenType=XmlTokenType.XML_ATTLIST_DECL_START;
yy_lexical_state=DOCTYPE_MARKUP;
return;
}
case -15:
break;
case 15:
{
myTokenType=XmlTokenType.XML_DOCTYPE_START;
yy_lexical_state=DOCTYPE;
return;
}
case -16:
break;
case 16:
{
myTokenType=XmlTokenType.XML_ELEMENT_DECL_START;
yy_lexical_state=DOCTYPE_MARKUP;
return;
}
case -17:
break;
case 17:
{
myTokenType=XmlTokenType.XML_CDATA_START;
yy_lexical_state=CDATA;
return;
}
case -18:
break;
case 18:
{
myTokenType=XmlTokenType.XML_NOTATION_DECL_START;
yy_lexical_state=DOCTYPE_MARKUP;
return;
}
case -19:
break;
case 19:
{
myTokenType=XmlTokenType.XML_NAME;
yy_lexical_state=DECL_ATTR;
return;
}
case -20:
break;
case 20:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
yy_lexical_state=YYINITIAL;
return;
}
case -21:
break;
case 21:
{
myTokenType=XmlTokenType.XML_DECL_END;
yy_lexical_state=YYINITIAL;
return;
}
case -22:
break;
case 22:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_START_DELIMITER;
yy_lexical_state=DECL_ATTR_VALUE_DQ;
return;
}
case -23:
break;
case 23:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_START_DELIMITER;
yy_lexical_state=DECL_ATTR_VALUE_SQ;
return;
}
case -24:
break;
case 24:
{
myTokenType=XmlTokenType.XML_EQ;
return;
}
case -25:
break;
case 25:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -26:
break;
case 26:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_END_DELIMITER;
yy_lexical_state=DECL;
return;
}
case -27:
break;
case 27:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -28:
break;
case 28:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_END_DELIMITER;
yy_lexical_state=DECL;
return;
}
case -29:
break;
case 29:
{
myTokenType=XmlTokenType.XML_TAG_NAME;
yy_lexical_state=TAG_ATTRIBUTES;
return;
}
case -30:
break;
case 30:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -31:
break;
case 31:
{
myTokenType=XmlTokenType.XML_EQ;
yy_lexical_state=ATTRIBUTE_VALUE_START;
return;
}
case -32:
break;
case 32:
{
myTokenType=XmlTokenType.XML_TAG_END;
yy_lexical_state=YYINITIAL;
return;
}
case -33:
break;
case 33:
{
myTokenType=XmlTokenType.XML_EMPTY_ELEMENT_END;
yy_lexical_state=YYINITIAL;
return;
}
case -34:
break;
case 34:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -35:
break;
case 35:
{
myTokenType=XmlTokenType.XML_COMMENT_END;
yy_lexical_state=YYINITIAL;
return;
}
case -36:
break;
case 36:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_START_DELIMITER;
yy_lexical_state=ATTRIBUTE_VALUE_DQ;
return;
}
case -37:
break;
case 37:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_START_DELIMITER;
yy_lexical_state=ATTRIBUTE_VALUE_SQ;
return;
}
case -38:
break;
case 38:
{
myTokenType=XmlTokenType.XML_TAG_END;
yy_lexical_state=YYINITIAL;
return;
}
case -39:
break;
case 39:
{
myTokenType=XmlTokenType.XML_EMPTY_ELEMENT_END;
yy_lexical_state=YYINITIAL;
return;
}
case -40:
break;
case 40:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -41:
break;
case 41:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_END_DELIMITER;
yy_lexical_state=TAG_ATTRIBUTES;
return;
}
case -42:
break;
case 42:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -43:
break;
case 43:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_END_DELIMITER;
yy_lexical_state=TAG_ATTRIBUTES;
return;
}
case -44:
break;
case 44:
{
myTokenType=XmlTokenType.XML_PI_TARGET;
return;
}
case -45:
break;
case 45:
{
myTokenType=XmlTokenType.XML_PI_END;
yy_lexical_state=YYINITIAL;
return;
}
case -46:
break;
case 46:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -47:
break;
case 47:
{
myTokenType=XmlTokenType.XML_DOCTYPE_END;
yy_lexical_state=YYINITIAL;
return;
}
case -48:
break;
case 48:
{
myTokenType=XmlTokenType.XML_MARKUP_START;
yy_lexical_state=DOCTYPE_MARKUP;
return;
}
case -49:
break;
case 49:
{
myTokenType=XmlTokenType.XML_DOCTYPE_PUBLIC;
yy_lexical_state=DOCTYPE_EXTERNAL_ID;
return;
}
case -50:
break;
case 50:
{
myTokenType=XmlTokenType.XML_DOCTYPE_SYSTEM;
yy_lexical_state=DOCTYPE_EXTERNAL_ID;
return;
}
case -51:
break;
case 51:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -52:
break;
case 52:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -53:
break;
case 53:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_START_DELIMITER;
yy_lexical_state=DOCTYPE_MARKUP_DQ;
return;
}
case -54:
break;
case 54:
{
myTokenType=XmlTokenType.XML_PERCENT;
return;
}
case -55:
break;
case 55:
{
myTokenType=XmlTokenType.XML_AMP;
return;
}
case -56:
break;
case 56:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_START_DELIMITER;
yy_lexical_state=DOCTYPE_MARKUP_SQ;
return;
}
case -57:
break;
case 57:
{
myTokenType=XmlTokenType.XML_LEFT_PAREN;
return;
}
case -58:
break;
case 58:
{
myTokenType=XmlTokenType.XML_RIGHT_PAREN;
return;
}
case -59:
break;
case 59:
{
myTokenType=XmlTokenType.XML_STAR;
return;
}
case -60:
break;
case 60:
{
myTokenType=XmlTokenType.XML_PLUS;
return;
}
case -61:
break;
case 61:
{
myTokenType=XmlTokenType.XML_COMMA;
return;
}
case -62:
break;
case 62:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -63:
break;
case 63:
{
myTokenType=XmlTokenType.XML_SEMI;
return;
}
case -64:
break;
case 64:
{
myTokenType=XmlTokenType.XML_TAG_END;
return;
}
case -65:
break;
case 65:
{
myTokenType=XmlTokenType.XML_QUESTION;
return;
}
case -66:
break;
case 66:
{
myTokenType=XmlTokenType.XML_MARKUP_END;
yy_lexical_state=DOCTYPE;
return;
}
case -67:
break;
case 67:
{
myTokenType=XmlTokenType.XML_BAR;
return;
}
case -68:
break;
case 68:
{
myTokenType=XmlTokenType.XML_CONTENT_ANY;
return;
}
case -69:
break;
case 69:
{
myTokenType=XmlTokenType.XML_CONTENT_EMPTY;
return;
}
case -70:
break;
case 70:
{
myTokenType=XmlTokenType.XML_ATT_FIXED;
return;
}
case -71:
break;
case 71:
{
myTokenType=XmlTokenType.XML_DOCTYPE_PUBLIC;
return;
}
case -72:
break;
case 72:
{
myTokenType=XmlTokenType.XML_DOCTYPE_SYSTEM;
return;
}
case -73:
break;
case 73:
{
myTokenType=XmlTokenType.XML_PCDATA;
return;
}
case -74:
break;
case 74:
{
myTokenType=XmlTokenType.XML_ATT_IMPLIED;
return;
}
case -75:
break;
case 75:
{
myTokenType=XmlTokenType.XML_ATT_REQUIRED;
return;
}
case -76:
break;
case 76:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -77:
break;
case 77:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_END_DELIMITER;
yy_lexical_state=DOCTYPE_MARKUP;
return;
}
case -78:
break;
case 78:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -79:
break;
case 79:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_END_DELIMITER;
yy_lexical_state=DOCTYPE_MARKUP;
return;
}
case -80:
break;
case 80:
{
myTokenType=XmlTokenType.XML_DATA_CHARACTERS;
return;
}
case -81:
break;
case 81:
{
myTokenType=XmlTokenType.XML_CDATA_END;
yy_lexical_state=YYINITIAL;
return;
}
case -82:
break;
case 82:
{
myTokenType=XmlTokenType.XML_DATA_CHARACTERS;
return;
}
case -83:
break;
case 84:
{
myTokenType=XmlTokenType.XML_DATA_CHARACTERS;
return;
}
case -84:
break;
case 85:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -85:
break;
case 86:
{
myTokenType=XmlTokenType.XML_START_TAG_START;
yy_lexical_state=TAG_NAME;
return;
}
case -86:
break;
case 87:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -87:
break;
case 88:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -88:
break;
case 89:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -89:
break;
case 90:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -90:
break;
case 91:
{
myTokenType=XmlTokenType.XML_CDATA_START;
yy_lexical_state=CDATA;
return;
}
case -91:
break;
case 92:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -92:
break;
case 93:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -93:
break;
case 94:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -94:
break;
case 95:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -95:
break;
case 96:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -96:
break;
case 97:
{
myTokenType=XmlTokenType.XML_PI_TARGET;
return;
}
case -97:
break;
case 98:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -98:
break;
case 99:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -99:
break;
case 100:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -100:
break;
case 101:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -101:
break;
case 102:
{
myTokenType=XmlTokenType.XML_DATA_CHARACTERS;
return;
}
case -102:
break;
case 104:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -103:
break;
case 105:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -104:
break;
case 106:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -105:
break;
case 107:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -106:
break;
case 108:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -107:
break;
case 109:
{
myTokenType=XmlTokenType.XML_CDATA_START;
yy_lexical_state=CDATA;
return;
}
case -108:
break;
case 110:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -109:
break;
case 111:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -110:
break;
case 112:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -111:
break;
case 113:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -112:
break;
case 114:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -113:
break;
case 115:
{
myTokenType=XmlTokenType.XML_PI_TARGET;
return;
}
case -114:
break;
case 116:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -115:
break;
case 117:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -116:
break;
case 118:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -117:
break;
case 119:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -118:
break;
case 120:
{
myTokenType=XmlTokenType.XML_DATA_CHARACTERS;
return;
}
case -119:
break;
case 122:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -120:
break;
case 123:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -121:
break;
case 124:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -122:
break;
case 125:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -123:
break;
case 126:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -124:
break;
case 127:
{
myTokenType=XmlTokenType.XML_CDATA_START;
yy_lexical_state=CDATA;
return;
}
case -125:
break;
case 128:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -126:
break;
case 129:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -127:
break;
case 130:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -128:
break;
case 131:
{
myTokenType=XmlTokenType.XML_PI_TARGET;
return;
}
case -129:
break;
case 132:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -130:
break;
case 133:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -131:
break;
case 134:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -132:
break;
case 135:
{
myTokenType=XmlTokenType.XML_DATA_CHARACTERS;
return;
}
case -133:
break;
case 137:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -134:
break;
case 138:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -135:
break;
case 139:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -136:
break;
case 140:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -137:
break;
case 141:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -138:
break;
case 142:
{
myTokenType=XmlTokenType.XML_CDATA_START;
yy_lexical_state=CDATA;
return;
}
case -139:
break;
case 143:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -140:
break;
case 144:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -141:
break;
case 145:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -142:
break;
case 146:
{
myTokenType=XmlTokenType.XML_PI_TARGET;
return;
}
case -143:
break;
case 147:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -144:
break;
case 148:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -145:
break;
case 149:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -146:
break;
case 150:
{
myTokenType=XmlTokenType.XML_DATA_CHARACTERS;
return;
}
case -147:
break;
case 152:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -148:
break;
case 153:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -149:
break;
case 154:
{
myTokenType=XmlTokenType.XML_ENTITY_REF_TOKEN;
return;
}
case -150:
break;
case 155:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -151:
break;
case 156:
{
myTokenType=XmlTokenType.XML_CHAR_ENTITY_REF;
return;
}
case -152:
break;
case 157:
{
myTokenType=XmlTokenType.XML_CDATA_START;
yy_lexical_state=CDATA;
return;
}
case -153:
break;
case 158:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -154:
break;
case 159:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -155:
break;
case 160:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -156:
break;
case 161:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -157:
break;
case 162:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -158:
break;
case 164:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -159:
break;
case 165:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -160:
break;
case 166:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -161:
break;
case 167:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -162:
break;
case 169:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -163:
break;
case 171:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -164:
break;
case 173:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -165:
break;
case 175:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -166:
break;
case 249:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -167:
break;
case 250:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -168:
break;
case 251:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -169:
break;
case 252:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -170:
break;
case 253:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -171:
break;
case 254:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -172:
break;
case 255:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -173:
break;
case 256:
{
myTokenType=XmlTokenType.XML_BAD_CHARACTER;
return;
}
case -174:
break;
case 259:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -175:
break;
case 260:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -176:
break;
case 261:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -177:
break;
case 262:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -178:
break;
case 263:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -179:
break;
case 264:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -180:
break;
case 265:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -181:
break;
case 267:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -182:
break;
case 268:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -183:
break;
case 269:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -184:
break;
case 270:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -185:
break;
case 271:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -186:
break;
case 272:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -187:
break;
case 274:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -188:
break;
case 275:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -189:
break;
case 276:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -190:
break;
case 277:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -191:
break;
case 278:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -192:
break;
case 279:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -193:
break;
case 281:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -194:
break;
case 282:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -195:
break;
case 283:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -196:
break;
case 284:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -197:
break;
case 285:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -198:
break;
case 287:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -199:
break;
case 291:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -200:
break;
case 292:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -201:
break;
case 293:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -202:
break;
case 294:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -203:
break;
case 295:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -204:
break;
case 296:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -205:
break;
case 297:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -206:
break;
case 299:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -207:
break;
case 300:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -208:
break;
case 301:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -209:
break;
case 303:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -210:
break;
case 304:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -211:
break;
case 305:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -212:
break;
case 306:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -213:
break;
case 307:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -214:
break;
case 308:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -215:
break;
case 309:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -216:
break;
case 310:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -217:
break;
case 311:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -218:
break;
case 312:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -219:
break;
case 313:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -220:
break;
case 314:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -221:
break;
case 315:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -222:
break;
case 316:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -223:
break;
case 317:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -224:
break;
case 318:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -225:
break;
case 319:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -226:
break;
case 320:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -227:
break;
case 321:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -228:
break;
case 322:
{
myTokenType=XmlTokenType.XML_NAME;
return;
}
case -229:
break;
case 323:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -230:
break;
case 324:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -231:
break;
case 325:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -232:
break;
case 326:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -233:
break;
case 327:
{
myTokenType=XmlTokenType.XML_COMMENT_CHARACTERS;
return;
}
case -234:
break;
case 328:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -235:
break;
case 329:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -236:
break;
case 330:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -237:
break;
case 331:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -238:
break;
case 332:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -239:
break;
case 333:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -240:
break;
case 334:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -241:
break;
case 335:
{
myTokenType=XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
return;
}
case -242:
break;
default :
yy_error(YY_E_INTERNAL,false);
case -1:
}
yy_initial=true;
yy_state=yy_state_dtrans[yy_lexical_state];
yy_next_state=YY_NO_STATE;
yy_last_accept_state=YY_NO_STATE;
yy_buffer_start=yy_buffer_index;
yy_this_accept=yy_acpt[yy_state];
if (YY_NOT_ACCEPT != yy_this_accept) {
yy_last_accept_state=yy_state;
}
}
}
}
}
