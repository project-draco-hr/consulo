{
  final CompileContext context=new CompileContext(scope,myProjectName,isMake){
    public void processMessage(    BuildMessage msg){
      for (      MessageHandler h : myMessageHandlers) {
        h.processMessage(msg);
      }
    }
  }
;
  try {
    if (!isMake) {
      context.getBuildDataManager().clean();
    }
    for (    Module module : scope.getAffectedModules()) {
    }
    runTasks(context,myBuilderRegistry.getBeforeTasks());
    context.setCompilingTests(false);
    buildChunks(context,myProductionChunks);
    context.setCompilingTests(true);
    buildChunks(context,myTestChunks);
    runTasks(context,myBuilderRegistry.getAfterTasks());
  }
 catch (  ProjectBuildException e) {
    context.processMessage(new ProgressMessage(e.getMessage()));
  }
catch (  Throwable e) {
    Throwable cause=e.getCause();
    if (cause == null) {
      cause=e;
    }
    final ByteArrayOutputStream out=new ByteArrayOutputStream();
    cause.printStackTrace(new PrintStream(out));
    final StringBuilder messageText=new StringBuilder();
    messageText.append("JPS Internal error: (").append(cause.getClass().getName()).append(") ").append(e.getMessage());
    final String trace=out.toString();
    if (!trace.isEmpty()) {
      messageText.append("\n").append(trace);
    }
    context.processMessage(new CompilerMessage("JPS Server",BuildMessage.Kind.ERROR,messageText.toString()));
  }
 finally {
    context.getBuildDataManager().close();
  }
}
