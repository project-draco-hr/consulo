{
  final int[] idxs=new int[myLists.size()];
  for (int i=0; i < myLists.size(); i++) {
    final ReadonlyList<T> member=myLists.get(i);
    idxs[i]=member.getSize() == 0 ? -1 : 0;
  }
  while (true) {
    T minValue=null;
    int minValueIdx=-1;
    for (int i=0; i < idxs.length; i++) {
      if (idxs[i] == -1)       continue;
      final ReadonlyList<T> list=myLists.get(i);
      if ((minValue == null) || (list.get(idxs[i]).compareTo(minValue) <= 0)) {
        minValue=list.get(idxs[i]);
        minValueIdx=i;
      }
    }
    if (minValueIdx == -1)     return;
    myConsumer.consume(new CompoundNumber(minValueIdx,idxs[minValueIdx]));
    idxs[minValueIdx]=(myLists.get(minValueIdx).getSize() == (idxs[minValueIdx] + 1) ? -1 : idxs[minValueIdx] + 1);
  }
}
