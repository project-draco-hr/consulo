{
  if (second.getSize() == 0)   return;
  int idx=stolenBinarySearch(first,second.get(0),comparator,0);
  if (idx < 0) {
    idx=-(idx + 1);
  }
  if (idx > 0 && (!filter.process(first.get(idx - 1)))) {
    --idx;
    if (idx > 0)     --idx;
  }
  final ReadonlyList<T> remergePart=first.cut(idx);
  merge(remergePart,second,comparator,new Consumer<T>(){
    @Override public void consume(    T t){
      if (beforeAddListener != null) {
        beforeAddListener.consume(t);
      }
      first.add(t);
    }
  }
,filter);
}
