{
  final String className=LwXmlReader.getRequiredString(itemElement,ATTRIBUTE_CLASS);
  final String iconPath=LwXmlReader.getString(itemElement,ATTRIBUTE_ICON);
  final String toolTipText=LwXmlReader.getString(itemElement,ATTRIBUTE_TOOLTIP_TEXT);
  final GridConstraints constraints;
  final Element defaultConstraints=itemElement.getChild(ELEMENT_DEFAULT_CONSTRAINTS);
  if (defaultConstraints != null) {
    constraints=processDefaultConstraintsElement(defaultConstraints);
  }
 else {
    constraints=new GridConstraints();
  }
  final HashMap<String,StringDescriptor> propertyName2intitialValue=new HashMap<String,StringDescriptor>();
{
    final Element initialValues=itemElement.getChild(ELEMENT_INITIAL_VALUES);
    if (initialValues != null) {
      for (      final Object o : initialValues.getChildren(ELEMENT_PROPERTY)) {
        final Element e=(Element)o;
        final String name=LwXmlReader.getRequiredString(e,ATTRIBUTE_NAME);
        final StringDescriptor value=StringDescriptor.create(LwXmlReader.getRequiredString(e,ATTRIBUTE_VALUE));
        propertyName2intitialValue.put(name,value);
      }
    }
  }
  final boolean removable=LwXmlReader.getOptionalBoolean(itemElement,ATTRIBUTE_REMOVABLE,true);
  final ComponentItem item=new ComponentItem(myProject,className,iconPath,toolTipText,constraints,propertyName2intitialValue,removable);
  addItem(group,item);
}
