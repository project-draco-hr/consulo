{
  if (outputType != ProcessOutputTypes.STDOUT) {
    textAvailable(text,outputType);
    return;
  }
  int pos=0;
  while (true) {
    int macroPos=text.indexOf(TEXT_ATTRS_PREFIX,pos);
    if (macroPos < 0)     break;
    if (pos != macroPos) {
      textAvailable(text.substring(pos,macroPos),getCurrentOutputAttributes());
    }
    int macroEndPos=text.indexOf('m',macroPos);
    if (macroEndPos < 0)     break;
    final ColoredOutputTypeRegistry registry=ColoredOutputTypeRegistry.getInstance();
    final String colorAttribute=text.substring(macroPos,macroEndPos + 1);
    myCurrentColor=registry.getOutputKey(colorAttribute);
    pos=macroEndPos + 1;
  }
  if (pos < text.length()) {
    textAvailable(text.substring(pos),getCurrentOutputAttributes());
  }
}
