{
  final SubTree tree=new SubTree(myWorkingCopyDir);
  checkin();
  editFileInCommand(myProject,tree.myS1File,"1\n2\n3\n4\n");
  checkin();
  editFileInCommand(myProject,tree.myS1File,"1\n2\n3**\n4\n");
  checkin();
  verify(runSvn("up","-r","2"));
  final VcsAnnotationLocalChangesListener listener=ProjectLevelVcsManager.getInstance(myProject).getAnnotationLocalChangesListener();
  final FileAnnotation annotation=myVcs.getAnnotationProvider().annotate(tree.myS1File);
  annotation.setCloser(new Runnable(){
    @Override public void run(){
      myIsClosed=true;
      listener.unregisterAnnotation(tree.myS1File,annotation);
    }
  }
);
  listener.registerAnnotation(tree.myS1File,annotation);
  editFileInCommand(myProject,tree.myS1File,"1+\n2\n3\n4\n");
  myDirtyScopeManager.markEverythingDirty();
  myChangeListManager.ensureUpToDate(false);
  Assert.assertFalse(myIsClosed);
  update();
  myWorkingCopyDir.refresh(false,true);
  imitateEvent(myWorkingCopyDir);
  myChangeListManager.ensureUpToDate(false);
  myChangeListManager.ensureUpToDate(false);
  sleep(100);
  Assert.assertTrue(myIsClosed);
}
