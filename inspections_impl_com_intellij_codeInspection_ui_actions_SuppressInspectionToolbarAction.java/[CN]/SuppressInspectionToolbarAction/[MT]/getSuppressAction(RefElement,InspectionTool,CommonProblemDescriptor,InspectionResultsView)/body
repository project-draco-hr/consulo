{
  final HighlightDisplayKey key=HighlightDisplayKey.find(tool.getShortName());
  if (key != null) {
    final PsiElement psiElement=refElement.getElement();
    if (psiElement != null && psiElement.isValid()) {
      final IntentionAction action=SuppressInspectionToolbarAction.getCorrectIntentionAction(tool,key.getID(),descriptor,psiElement);
      final PsiFile file=psiElement.getContainingFile();
      final Project project=view.getProject();
      if (action.isAvailable(project,null,file)) {
        return new AnAction(action.getText()){
          public void actionPerformed(          AnActionEvent e){
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                CommandProcessor.getInstance().executeCommand(view.getProject(),new Runnable(){
                  public void run(){
                    final InspectionTreeNode treeNode=(InspectionTreeNode)view.getTree().getSelectionPath().getLastPathComponent();
                    final List<RefElement> elementsToSuppress=InspectionTree.getElementsToSuppressInSubTree(treeNode);
                    final InspectionManagerEx managerEx=(InspectionManagerEx)InspectionManagerEx.getInstance(project);
                    for (                    RefElement element : elementsToSuppress) {
                      if (!suppress(element.getElement(),action,tool,project))                       break;
                    }
                    refreshViews(managerEx);
                  }
                }
,action.getText(),null);
              }
            }
);
          }
        }
;
      }
    }
  }
  return null;
}
