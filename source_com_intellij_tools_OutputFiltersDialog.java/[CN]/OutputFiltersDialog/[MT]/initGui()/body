{
  myFiltersList.setCellRenderer(new ColoredListCellRenderer(){
    protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      FilterInfo info=(FilterInfo)value;
      append(info.getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
    }
  }
);
  myButtonGroup.setBorder(BorderFactory.createEmptyBorder(5,5,0,0));
  myButtonGroup.addButton(myAddButton);
  myButtonGroup.addButton(myEditButton);
  myButtonGroup.addButton(myRemoveButton);
  myButtonGroup.addButton(myMoveUpButton);
  myButtonGroup.addButton(myMoveDownButton);
  myEditButton.setEnabled(false);
  myRemoveButton.setEnabled(false);
  myMoveUpButton.setEnabled(false);
  myMoveDownButton.setEnabled(false);
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      FilterInfo filterInfo=new FilterInfo();
      filterInfo.setName(suggestFilterName());
      boolean wasCreated=FilterDialog.editFilter(filterInfo,myAddButton,"Add Filter");
      if (wasCreated) {
        myFiltersModel.addElement(filterInfo);
        setModified(true);
        enableButtons();
      }
      myFiltersList.requestFocus();
    }
  }
);
  myEditButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int index=myFiltersList.getSelectedIndex();
      FilterInfo filterInfo=(FilterInfo)myFiltersModel.getElementAt(index);
      boolean wasEdited=FilterDialog.editFilter(filterInfo,myEditButton,"Edit filter");
      if (wasEdited) {
        setModified(true);
        enableButtons();
      }
      myFiltersList.requestFocus();
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (myFiltersList.getSelectedIndex() >= 0) {
        myFiltersModel.removeElementAt(myFiltersList.getSelectedIndex());
        setModified(true);
      }
      enableButtons();
      myFiltersList.requestFocus();
    }
  }
);
  myMoveUpButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int movedCount=ListUtil.moveSelectedItemsUp(myFiltersList);
      if (movedCount > 0) {
        setModified(true);
      }
      myFiltersList.requestFocus();
    }
  }
);
  myMoveDownButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int movedCount=ListUtil.moveSelectedItemsDown(myFiltersList);
      if (movedCount > 0) {
        setModified(true);
      }
      myFiltersList.requestFocus();
    }
  }
);
  myFiltersList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myFiltersList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      enableButtons();
    }
  }
);
  ListScrollingUtil.ensureSelectionExists(myFiltersList);
}
