{
  Group rootGroup=new Group("root",null,null);
  DefaultMutableTreeNode root=new DefaultMutableTreeNode(rootGroup);
  root.removeAllChildren();
  schema.fillActionGroups(root);
  final JTree defaultTree=new JTree(new DefaultTreeModel(root));
  final ArrayList<ActionUrl> addActions=new ArrayList<ActionUrl>();
  final ArrayList<ActionUrl> deleteActions=new ArrayList<ActionUrl>();
  TreeUtil.traverseDepth((TreeNode)tree.getModel().getRoot(),new TreeUtil.Traverse(){
    public boolean accept(    Object node){
      DefaultMutableTreeNode treeNode=(DefaultMutableTreeNode)node;
      if (treeNode.isLeaf()) {
        return true;
      }
      final ActionUrl url=getActionUrl(new TreePath(treeNode.getPath()),0);
      url.getGroupPath().add(((Group)treeNode.getUserObject()).getName());
      final TreePath treePath=getTreePath(defaultTree,url);
      if (treePath != null) {
        final DefaultMutableTreeNode visited=(DefaultMutableTreeNode)treePath.getLastPathComponent();
        final ActionUrl[] defaultUserObjects=getChildUserObjects(visited,url);
        final ActionUrl[] currentUserObjects=getChildUserObjects(treeNode,url);
        Diff.Change change=Diff.buildChanges(defaultUserObjects,currentUserObjects);
        int deletedLines=0;
        while (change != null) {
          for (int i=0; i < change.deleted; i++) {
            final int idx=change.line0 + i;
            ActionUrl currentUserObject=defaultUserObjects[idx];
            currentUserObject.setActionType(ActionUrl.DELETED);
            currentUserObject.setAbsolutePosition(idx - deletedLines);
            deleteActions.add(currentUserObject);
            deletedLines++;
          }
          for (int i=0; i < change.inserted; i++) {
            final int idx=change.line1 + i;
            ActionUrl currentUserObject=currentUserObjects[idx];
            currentUserObject.setActionType(ActionUrl.ADDED);
            currentUserObject.setAbsolutePosition(idx);
            addActions.add(currentUserObject);
          }
          change=change.link;
        }
      }
      return true;
    }
  }
);
  deleteActions.addAll(addActions);
  schema.setActions(deleteActions);
}
