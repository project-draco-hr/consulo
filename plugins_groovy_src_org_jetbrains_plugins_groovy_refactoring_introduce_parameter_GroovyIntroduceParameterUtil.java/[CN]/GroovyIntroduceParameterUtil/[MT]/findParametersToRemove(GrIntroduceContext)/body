{
  TObjectIntHashMap<GrParameter> toRemove=new TObjectIntHashMap<GrParameter>();
  if (context.var == null) {
    final GrMethod method=(GrMethod)context.scope;
    final GrParameter[] parameters=method.getParameters();
    final GrExpression expr=context.expression;
    for (int i=0; i < parameters.length; i++) {
      GrParameter parameter=parameters[i];
      final boolean shouldRemove=ReferencesSearch.search(parameter).forEach(new Processor<PsiReference>(){
        @Override public boolean process(        PsiReference ref){
          final PsiElement element=ref.getElement();
          if (element == null)           return false;
          return PsiTreeUtil.isAncestor(expr,element,false);
        }
      }
);
      if (shouldRemove) {
        toRemove.put(parameter,i);
      }
    }
  }
  return toRemove;
}
