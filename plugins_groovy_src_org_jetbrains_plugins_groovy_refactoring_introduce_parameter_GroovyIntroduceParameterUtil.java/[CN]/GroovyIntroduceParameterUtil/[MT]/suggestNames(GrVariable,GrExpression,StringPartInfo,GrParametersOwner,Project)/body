{
  if (expr != null) {
    final GrIntroduceContext introduceContext=new GrIntroduceContextImpl(project,null,expr,var,stringPart,PsiElement.EMPTY_ARRAY,scope);
    final GroovyFieldValidator validator=new GroovyFieldValidator(introduceContext);
    return new LinkedHashSet<String>(Arrays.asList(GroovyNameSuggestionUtil.suggestVariableNames(expr,validator,true)));
  }
 else   if (var != null) {
    final GrIntroduceContext introduceContext=new GrIntroduceContextImpl(project,null,expr,var,stringPart,PsiElement.EMPTY_ARRAY,scope);
    final GroovyFieldValidator validator=new GroovyFieldValidator(introduceContext);
    LinkedHashSet<String> names=new LinkedHashSet<String>();
    names.add(var.getName());
    ContainerUtil.addAll(names,GroovyNameSuggestionUtil.suggestVariableNameByType(var.getType(),validator));
    return names;
  }
 else {
    LinkedHashSet<String> names=new LinkedHashSet<String>();
    names.add("closure");
    return names;
  }
}
