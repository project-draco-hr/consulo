{
  if (doTasks == null)   doTasks=new ITask[]{new ITask(){
    private boolean authorized=false;
    public String getDescription(){
      return DiagnosticBundle.message("error.report.step.authorize");
    }
    public boolean isSuccessful(){
      return authorized;
    }
    public void run(){
      errorBean.setExceptionHashCode(exceptionBean.getHashCode());
      final Ref<Exception> err=new Ref<Exception>();
      Runnable runnable=new Runnable(){
        public void run(){
          try {
            HttpConfigurable.getInstance().prepareURL(PREPARE_URL);
            if (notifierBean.getItnLogin() != null && notifierBean.getItnLogin().length() > 0) {
              int threadId=ITNProxy.postNewThread(notifierBean.getItnLogin(),notifierBean.getItnPassword(),errorBean,exceptionBean,IdeaLogger.getOurCompilationTimestamp());
              exceptionBean.setItnThreadId(threadId);
              authorized=true;
            }
          }
 catch (          Exception ex) {
            err.set(ex);
          }
        }
      }
;
      if (myProject == null) {
        runnable.run();
      }
 else {
        ProgressManager.getInstance().runProcessWithProgressSynchronously(runnable,DiagnosticBundle.message("title.submitting.error.report"),false,myProject);
      }
      if (!err.isNull()) {
        throw new SendException(err.get());
      }
    }
  }
};
  return doTasks;
}
