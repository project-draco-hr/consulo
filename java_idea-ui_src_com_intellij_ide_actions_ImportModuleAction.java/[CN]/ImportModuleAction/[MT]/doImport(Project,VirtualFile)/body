{
  ProjectImportProvider[] providers=ProjectImportProvider.PROJECT_IMPORT_PROVIDER.getExtensions();
  List<ProjectImportProvider> available=ContainerUtil.filter(providers,new Condition<ProjectImportProvider>(){
    @Override public boolean value(    ProjectImportProvider provider){
      return provider.canImport(file,project);
    }
  }
);
  if (available.isEmpty()) {
    Messages.showInfoMessage(project,"Cannot import anything from " + file.getPath(),"Cannot Import");
    return Collections.emptyList();
  }
  String path;
  if (available.size() == 1) {
    path=available.get(0).getPathToBeImported(file);
  }
 else {
    path=ProjectImportProvider.getDefaultPath(file);
  }
  AddModuleWizard wizard=createWizard(project,available,path);
  if (wizard.getStepCount() > 0) {
    if (processWizard(wizard)) {
      return createFromWizard(project,wizard);
    }
    return Collections.emptyList();
  }
 else {
    ProjectImportBuilder builder=available.get(0).getBuilder();
    builder.setFileToImport(file.getPath());
    return builder.commit(project);
  }
}
