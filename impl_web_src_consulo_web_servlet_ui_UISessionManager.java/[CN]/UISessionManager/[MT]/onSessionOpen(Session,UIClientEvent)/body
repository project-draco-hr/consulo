{
  final Class<? extends UIBuilder> builderClass=myTempSessions.remove(clientEvent.getSessionId());
  if (builderClass == null) {
    return;
  }
  final UIBuilder uiBuilder=ReflectionUtil.newInstance(builderClass);
  final UIContext context=new UIContext(clientEvent.getSessionId(),session);
  myUIs.put(session.getId(),context);
  context.setSession(session);
  UIAccessHelper.ourInstance.run(context,new Runnable(){
    @Override public void run(){
      WGwtWindowImpl window=new WGwtWindowImpl();
      uiBuilder.build(window);
      window.registerComponent(context.myComponents);
      context.setWindow(window);
      AutoBean<UIServerEvent> bean=ourEventFactory.serverEvent();
      UIServerEvent serverEvent=bean.as();
      serverEvent.setSessionId(clientEvent.getSessionId());
      serverEvent.setType(UIServerEventType.createRoot);
      serverEvent.setComponents(Arrays.asList(window.convert(ourEventFactory)));
      window.visitChanges(new ArrayList<UIComponent>());
      context.send(bean);
    }
  }
);
}
