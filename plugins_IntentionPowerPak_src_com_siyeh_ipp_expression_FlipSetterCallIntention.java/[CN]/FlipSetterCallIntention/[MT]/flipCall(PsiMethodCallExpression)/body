{
  PsiExpression qualifierExpression=call.getMethodExpression().getQualifierExpression();
  if (qualifierExpression == null)   return;
  final String qualifier1=qualifierExpression.getText();
  if (qualifier1 == null || qualifier1.length() == 0)   return;
  final PsiMethodCallExpression param=(PsiMethodCallExpression)call.getArgumentList().getExpressions()[0];
  qualifierExpression=param.getMethodExpression().getQualifierExpression();
  if (qualifierExpression == null)   return;
  final String qualifier2=qualifierExpression.getText();
  final PsiMethod setter=call.resolveMethod();
  final PsiMethod getter=param.resolveMethod();
  if (getter == null || setter == null)   return;
  final PsiMethod get=PropertyUtil.findPropertyGetter(setter.getContainingClass(),PropertyUtil.getPropertyName(setter),false,true);
  final PsiMethod set=PropertyUtil.findPropertySetter(getter.getContainingClass(),PropertyUtil.getPropertyName(getter),false,true);
  if (get == null || set == null)   return;
  StringBuilder text=new StringBuilder();
  text.append(qualifier2).append(".").append(set.getName()).append("(").append(qualifier1).append(".").append(get.getName()).append("()").append(")");
  final PsiExpression newExpression=JavaPsiFacade.getElementFactory(call.getProject()).createExpressionFromText(text.toString(),call.getContext());
  call.replace(newExpression);
}
