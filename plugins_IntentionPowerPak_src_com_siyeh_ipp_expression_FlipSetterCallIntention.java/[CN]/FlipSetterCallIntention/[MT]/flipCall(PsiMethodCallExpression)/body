{
  final PsiExpression qualifierExpression1=call.getMethodExpression().getQualifierExpression();
  if (qualifierExpression1 == null) {
    return;
  }
  final PsiExpression[] arguments=call.getArgumentList().getExpressions();
  if (arguments.length != 1) {
    return;
  }
  final PsiExpression argument=arguments[0];
  if (!(argument instanceof PsiMethodCallExpression)) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)argument;
  final PsiExpression qualifierExpression2=methodCallExpression.getMethodExpression().getQualifierExpression();
  if (qualifierExpression2 == null) {
    return;
  }
  final PsiMethod setter=call.resolveMethod();
  final PsiMethod getter=methodCallExpression.resolveMethod();
  final PsiMethod get=PropertyUtils.getReversePropertyMethod(setter);
  final PsiMethod set=PropertyUtils.getReversePropertyMethod(getter);
  if (get == null || set == null) {
    return;
  }
  final String text=qualifierExpression2.getText() + "." + set.getName()+ "("+ qualifierExpression1.getText()+ "."+ get.getName()+ "())";
  final PsiExpression newExpression=JavaPsiFacade.getElementFactory(call.getProject()).createExpressionFromText(text,call);
  call.replace(newExpression);
}
