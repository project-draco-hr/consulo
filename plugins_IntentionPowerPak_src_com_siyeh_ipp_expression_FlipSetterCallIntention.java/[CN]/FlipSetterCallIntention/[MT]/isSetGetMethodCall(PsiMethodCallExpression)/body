{
  final PsiExpression[] params=call.getArgumentList().getExpressions();
  if (params.length != 1)   return false;
  if (!(params[0] instanceof PsiMethodCallExpression))   return false;
  final PsiMethodCallExpression call2=(PsiMethodCallExpression)params[0];
  final PsiElement methodElement=call.getMethodExpression().resolve();
  final PsiElement param=call2.getMethodExpression().resolve();
  if (!(methodElement instanceof PsiMethod) || !(param instanceof PsiMethod) || !PropertyUtil.isSimplePropertySetter((PsiMethod)methodElement)|| !PropertyUtil.isSimplePropertyGetter((PsiMethod)param)) {
    return false;
  }
  final PsiMethod setter1=(PsiMethod)methodElement;
  final PsiMethod getter2=(PsiMethod)param;
  if (!call.getArgumentList().getExpressionTypes()[0].equals(getter2.getReturnType()))   return false;
  final PsiMethod getter1=PropertyUtil.findPropertyGetter(setter1.getContainingClass(),PropertyUtil.getPropertyName(setter1),false,true);
  if (getter1 == null)   return false;
  final PsiMethod setter2=PropertyUtil.findPropertyGetter(getter2.getContainingClass(),PropertyUtil.getPropertyName(getter2),false,true);
  if (setter2 == null)   return false;
  return true;
}
