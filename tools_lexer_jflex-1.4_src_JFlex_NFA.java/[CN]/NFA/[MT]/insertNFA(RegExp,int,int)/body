{
switch (regExp.type) {
case sym.BAR:
    RegExp2 r=(RegExp2)regExp;
  insertNFA(r.r1,start,end);
insertNFA(r.r2,start,end);
return;
case sym.CCLASS:
insertClassNFA((Vector)((RegExp1)regExp).content,start,end);
return;
case sym.CCLASSNOT:
insertNotClassNFA((Vector)((RegExp1)regExp).content,start,end);
return;
case sym.CHAR:
insertLetterNFA(false,((Character)((RegExp1)regExp).content).charValue(),start,end);
return;
case sym.CHAR_I:
insertLetterNFA(true,((Character)((RegExp1)regExp).content).charValue(),start,end);
return;
case sym.MACROUSE:
insertNFA(macros.getDefinition((String)((RegExp1)regExp).content),start,end);
return;
}
throw new Error("Unknown expression type " + regExp.type + " in NFA construction");
}
