{
  final JavaCodeStyleManager styleManager=JavaCodeStyleManager.getInstance(aField.getProject());
  final String propertyName=styleManager.variableNameToPropertyName(aField.getName(),VariableKind.FIELD);
  if (!Comparing.strEqual(propertyName,styleManager.variableNameToPropertyName(newFieldName,VariableKind.FIELD))) {
    final String paramName=styleManager.propertyNameToVariableName(propertyName,VariableKind.PARAMETER);
    final PsiClass aClass=aField.getContainingClass();
    Set<PsiParameter> toRename=new HashSet<PsiParameter>();
    for (    PsiMethod constructor : aClass.getConstructors()) {
      if (constructor instanceof PsiMirrorElement) {
        final PsiElement prototype=((PsiMirrorElement)constructor).getPrototype();
        if (prototype instanceof PsiMethod && ((PsiMethod)prototype).isConstructor()) {
          constructor=(PsiMethod)prototype;
        }
 else {
          continue;
        }
      }
      if (constructor instanceof LightElement)       continue;
      final PsiParameter[] parameters=constructor.getParameterList().getParameters();
      for (      final PsiParameter parameter : parameters) {
        if (paramName.equals(parameter.getName())) {
          toRename.add(parameter);
        }
      }
    }
    myElements.addAll(toRename);
    suggestAllNames(aField.getName(),newFieldName);
  }
}
