{
  HgCommandResult commandResult=ensureSuccess(hgMergeCommand.execute());
  HgUtil.markDirectoryDirty(project,repo);
  HgStatusCommand hgStatusCommand=new HgStatusCommand(project);
  hgStatusCommand.setIncludeIgnored(false);
  hgStatusCommand.setIncludeUnknown(false);
  Set<HgChange> changes=hgStatusCommand.execute(repo);
  if (!changes.isEmpty()) {
    for (    HgChange change : changes) {
      HgFile afterFile=change.afterFile();
      HgFile beforeFile=change.beforeFile();
      String fileGroupId=null;
      String filePath=null;
      if (afterFile != null && beforeFile != null) {
        fileGroupId=FileGroup.MODIFIED_ID;
        filePath=afterFile.getFile().getAbsolutePath();
      }
 else       if (beforeFile != null) {
        fileGroupId=FileGroup.LOCALLY_REMOVED_ID;
        filePath=beforeFile.getFile().getAbsolutePath();
      }
 else       if (afterFile != null) {
        fileGroupId=FileGroup.LOCALLY_ADDED_ID;
        filePath=afterFile.getFile().getAbsolutePath();
      }
      if (fileGroupId != null && filePath != null) {
        updatedFiles.getGroupById(fileGroupId).add(filePath,HgVcs.VCS_NAME,revisionNumber);
      }
    }
  }
  return commandResult;
}
