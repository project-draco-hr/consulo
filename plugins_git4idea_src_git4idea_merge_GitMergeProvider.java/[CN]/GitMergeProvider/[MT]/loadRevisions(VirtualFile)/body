{
  final MergeData mergeData=new MergeData();
  if (file == null)   return mergeData;
  final FilePath path=VcsUtil.getFilePath(file.getPath());
  VcsRunnable runnable=new VcsRunnable(){
    @SuppressWarnings({"ConstantConditions"}) public void run() throws VcsException {
      GitContentRevision original=new GitContentRevision(path,new GitRevisionNumber(":" + ORIGINAL_REVNUM),myProject);
      GitContentRevision current=new GitContentRevision(path,new GitRevisionNumber(":" + YOURS_REVNUM),myProject);
      GitContentRevision last=new GitContentRevision(path,new GitRevisionNumber(":" + THEIRS_REVNUM),myProject);
      mergeData.ORIGINAL=original.getContent().getBytes();
      mergeData.CURRENT=current.getContent().getBytes();
      mergeData.LAST=last.getContent().getBytes();
      mergeData.LAST_REVISION_NUMBER=new GitRevisionNumber(THEIRS_REVISION);
    }
  }
;
  VcsUtil.runVcsProcessWithProgress(runnable,GitBundle.message("merge.load.files"),false,myProject);
  return mergeData;
}
