{
  if (child1 instanceof ReadOnlyBlock || child2 instanceof ReadOnlyBlock) {
    return getFormatter().getReadOnlySpace();
  }
  if (!(child1 instanceof AbstractXmlBlock) || !(child2 instanceof AbstractXmlBlock)) {
    return null;
  }
  final ASTNode node1=((AbstractBlock)child1).getNode();
  final ASTNode node2=((AbstractBlock)child2).getNode();
  final IElementType type1=node1.getElementType();
  final IElementType type2=node2.getElementType();
  boolean firstIsText=isTextFragment(node1);
  boolean secondIsText=isTextFragment(node2);
  boolean firstIsTag=type1 == getTagType();
  boolean secondIsTag=type2 == getTagType();
  if (isSpaceInText(firstIsTag,secondIsTag,firstIsText,secondIsText) && keepWhiteSpaces()) {
    return getFormatter().getReadOnlySpace();
  }
  if (type1 == ElementType.XML_NAME && type2 == ElementType.XML_EMPTY_ELEMENT_END && myXmlFormattingPolicy.addSpaceIntoEmptyTag()) {
    return getFormatter().createSpaceProperty(1,1,0,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
  }
  if (isXmlTagName(type1,type2)) {
    final int spaces=myXmlFormattingPolicy.getShouldAddSpaceAroundTagName() ? 1 : 0;
    return getFormatter().createSpaceProperty(spaces,spaces,0,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
  }
  if (type2 == ElementType.XML_ATTRIBUTE) {
    return getFormatter().createSpaceProperty(1,1,0,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
  }
  if (((AbstractXmlBlock)child1).isTextElement() && ((AbstractXmlBlock)child2).isTextElement()) {
    return getFormatter().createSafeSpace(myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
  }
  if ((firstIsText || firstIsTag) && secondIsTag) {
    if (((AbstractXmlBlock)child2).insertLineBreakBeforeTag()) {
      return getFormatter().createSpaceProperty(0,Integer.MAX_VALUE,2,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
    }
 else     if (((AbstractXmlBlock)child2).removeLineBreakBeforeTag()) {
      return getFormatter().createSpaceProperty(0,Integer.MAX_VALUE,0,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
    }
  }
  if (firstIsTag && secondIsText) {
    if (((AbstractXmlBlock)child1).isTextElement()) {
      return getFormatter().createSafeSpace(myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
    }
 else {
      return getFormatter().createSpaceProperty(0,0,0,true,myXmlFormattingPolicy.getKeepBlankLines());
    }
  }
  if (firstIsText && secondIsTag) {
    if (((AbstractXmlBlock)child2).isTextElement()) {
      return getFormatter().createSafeSpace(true,myXmlFormattingPolicy.getKeepBlankLines());
    }
 else {
      return getFormatter().createSpaceProperty(0,0,0,true,myXmlFormattingPolicy.getKeepBlankLines());
    }
  }
  if (firstIsTag && secondIsTag) {
    return getFormatter().createSpaceProperty(0,Integer.MAX_VALUE,0,true,myXmlFormattingPolicy.getKeepBlankLines());
  }
  return getFormatter().createSpaceProperty(0,Integer.MAX_VALUE,0,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
}
