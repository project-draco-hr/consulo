{
  if (child1 instanceof ReadOnlyBlock || child2 instanceof ReadOnlyBlock) {
    return getFormatter().getReadOnlySpace();
  }
  if (!(child1 instanceof AbstractXmlBlock) || !(child2 instanceof AbstractXmlBlock)) {
    return null;
  }
  final IElementType type1=((AbstractBlock)child1).getNode().getElementType();
  final IElementType type2=((AbstractBlock)child2).getNode().getElementType();
  if (isXmlTagName(type1,type2)) {
    final int spaces=myXmlFormattingPolicy.getShouldAddSpaceAroundTagName() ? 1 : 0;
    return getFormatter().createSpaceProperty(spaces,spaces,0,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
  }
 else   if (type2 == ElementType.XML_ATTRIBUTE) {
    return getFormatter().createSpaceProperty(1,1,0,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
  }
 else   if (((AbstractXmlBlock)child1).isTextElement() && ((AbstractXmlBlock)child2).isTextElement()) {
    return getFormatter().createSafeSpace(myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
  }
 else   if (type2 == getTagType() && (type1 == ElementType.XML_DATA_CHARACTERS || type1 == getTagType()) && ((AbstractXmlBlock)child2).insertLineBreakBeforeTag()) {
    if (myXmlFormattingPolicy.getShouldKeepWhiteSpaces() || myXmlFormattingPolicy.keepWhiteSpacesInsideTag(getTag())) {
      return getFormatter().getReadOnlySpace();
    }
 else {
      return getFormatter().createSpaceProperty(0,Integer.MAX_VALUE,2,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
    }
  }
 else   if (type2 == getTagType() && (type1 == ElementType.XML_DATA_CHARACTERS || type1 == getTagType()) && ((AbstractXmlBlock)child2).removeLineBreakBeforeTag()) {
    if (myXmlFormattingPolicy.getShouldKeepWhiteSpaces() || myXmlFormattingPolicy.keepWhiteSpacesInsideTag(getTag())) {
      return getFormatter().getReadOnlySpace();
    }
 else {
      return getFormatter().createSpaceProperty(0,Integer.MAX_VALUE,0,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
    }
  }
  if (type1 == getTagType() && type2 == ElementType.XML_DATA_CHARACTERS) {
    if (((AbstractXmlBlock)child1).isTextElement()) {
      return getFormatter().createSafeSpace(myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
    }
 else {
      return getFormatter().createSpaceProperty(0,0,0,true,myXmlFormattingPolicy.getKeepBlankLines());
    }
  }
  if (type2 == getTagType() && type1 == ElementType.XML_DATA_CHARACTERS) {
    if (((AbstractXmlBlock)child2).isTextElement()) {
      return getFormatter().createSafeSpace(true,myXmlFormattingPolicy.getKeepBlankLines());
    }
 else {
      return getFormatter().createSpaceProperty(0,0,0,true,myXmlFormattingPolicy.getKeepBlankLines());
    }
  }
  if (type2 == getTagType() && type1 == getTagType()) {
    return getFormatter().createSpaceProperty(0,Integer.MAX_VALUE,0,true,myXmlFormattingPolicy.getKeepBlankLines());
  }
  return getFormatter().createSpaceProperty(0,Integer.MAX_VALUE,0,myXmlFormattingPolicy.getShouldKeepLineBreaks(),myXmlFormattingPolicy.getKeepBlankLines());
}
