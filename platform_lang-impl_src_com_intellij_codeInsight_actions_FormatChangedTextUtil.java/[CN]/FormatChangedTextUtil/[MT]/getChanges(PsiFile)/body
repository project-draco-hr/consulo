{
  final Set<TextRange> defaultResult=Collections.singleton(file.getTextRange());
  final VirtualFile virtualFile=file.getVirtualFile();
  if (virtualFile != null) {
    final Change change=ChangeListManager.getInstance(file.getProject()).getChange(virtualFile);
    if (change != null && change.getType() == Change.Type.NEW) {
      return defaultResult;
    }
  }
  final LineStatusTrackerManagerI manager=LineStatusTrackerManager.getInstance(file.getProject());
  if (manager == null) {
    return defaultResult;
  }
  final Document document=PsiDocumentManager.getInstance(file.getProject()).getDocument(file);
  if (document == null) {
    return defaultResult;
  }
  final LineStatusTracker lineStatusTracker=manager.getLineStatusTracker(document);
  if (lineStatusTracker == null) {
    return defaultResult;
  }
  final List<Range> ranges=lineStatusTracker.getRanges();
  if (ranges == null || ranges.isEmpty()) {
    return defaultResult;
  }
  List<TextRange> result=new ArrayList<TextRange>();
  for (  Range range : ranges) {
    if (range.getType() != Range.DELETED) {
      final RangeHighlighter highlighter=range.getHighlighter();
      if (highlighter != null) {
        result.add(new TextRange(highlighter.getStartOffset(),highlighter.getEndOffset()));
      }
    }
  }
  return result;
}
