{
  final RunnableFuture<Void> deleteFilesTask=new FutureTask<Void>(new Runnable(){
    @Override public void run(){
      final Thread currentThread=Thread.currentThread();
      final int priority=currentThread.getPriority();
      currentThread.setPriority(Thread.MIN_PRIORITY);
      try {
        for (        File tempFile : tempFiles) {
          delete(tempFile);
        }
      }
  finally {
        currentThread.setPriority(priority);
      }
    }
  }
,null);
  try {
    final Class<?> aClass=Class.forName("com.intellij.openapi.application.ApplicationManager");
    final Method getApplicationMethod=aClass.getMethod("getApplication");
    final Object application=getApplicationMethod.invoke(null);
    final Method executeOnPooledThreadMethod=application.getClass().getMethod("executeOnPooledThread",Runnable.class);
    executeOnPooledThreadMethod.invoke(application,deleteFilesTask);
  }
 catch (  Exception ignored) {
    new Thread(deleteFilesTask,"File deletion thread").start();
  }
  return deleteFilesTask;
}
