{
  final PsiClass parentClass=PsiTreeUtil.getParentOfType(anchorMember,PsiClass.class);
  if (anchorMember instanceof PsiField && anchorMember.getParent() == parentClass && destClass == parentClass && ((PsiField)anchorMember).hasModifierProperty(PsiModifier.STATIC) == psiField.hasModifierProperty(PsiModifier.STATIC)) {
    return (PsiField)destClass.addBefore(psiField,anchorMember);
  }
 else   if (anchorMember instanceof PsiClassInitializer && anchorMember.getParent() == parentClass && destClass == parentClass) {
    PsiField field=(PsiField)destClass.addBefore(psiField,anchorMember);
    destClass.addBefore(CodeEditUtil.createLineFeed(field.getManager()),anchorMember);
    return field;
  }
 else {
    if (forwardReference != null) {
      return forwardReference.getParent() == destClass ? (PsiField)destClass.addAfter(psiField,forwardReference) : (PsiField)forwardReference.getParent().addAfter(psiField,forwardReference);
    }
 else {
      return (PsiField)destClass.add(psiField);
    }
  }
}
