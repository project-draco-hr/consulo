{
  final ArtifactPropertiesProvider provider;
  if (preprocessing) {
    provider=AntArtifactPreProcessingPropertiesProvider.getInstance();
  }
 else {
    provider=AntArtifactPostprocessingPropertiesProvider.getInstance();
  }
  final AntArtifactProperties properties=(AntArtifactProperties)artifact.getProperties(provider);
  if (properties != null && properties.isEnabled()) {
    final String path=VfsUtil.urlToPath(properties.getFileUrl());
    String fileName=PathUtil.getFileName(path);
    String dirPath=PathUtil.getParentPath(path);
    final String relativePath=GenerationUtils.toRelativePath(dirPath,BuildProperties.getProjectBaseDir(project),BuildProperties.getProjectBaseDirProperty(),genOptions);
    generator.add(new Tag("ant",Pair.create("antfile",fileName),Pair.create("target",properties.getTargetName()),Pair.create("dir",relativePath)));
  }
}
