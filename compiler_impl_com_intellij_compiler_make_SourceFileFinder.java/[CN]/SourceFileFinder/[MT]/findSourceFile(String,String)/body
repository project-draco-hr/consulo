{
  final int dollar=qualifiedName.indexOf('$');
  final String outerQName=(dollar >= 0) ? qualifiedName.substring(0,dollar) : qualifiedName;
  final PsiClass[] classes=JavaPsiFacade.getInstance(myProject).findClasses(outerQName,GlobalSearchScope.projectScope(myProject));
  for (  PsiClass aClass : classes) {
    final PsiFile file=aClass.getContainingFile();
    if (srcName.equals(file.getName())) {
      return file.getVirtualFile();
    }
  }
  String relativePath=MakeUtil.createRelativePathToSource(qualifiedName,srcName);
  Map<VirtualFile,String> dirs=getAllSourceRoots();
  if (!StringUtil.startsWithChar(relativePath,'/')) {
    relativePath="/" + relativePath;
  }
  LocalFileSystem fs=LocalFileSystem.getInstance();
  for (  final VirtualFile virtualFile : dirs.keySet()) {
    final String prefix=dirs.get(virtualFile);
    String path;
    if (prefix.length() > 0) {
      if (FileUtil.startsWith(relativePath,prefix)) {
        path=virtualFile.getPath() + relativePath.substring(prefix.length() - 1);
      }
 else {
        continue;
      }
    }
 else {
      path=virtualFile.getPath() + relativePath;
    }
    VirtualFile file=fs.findFileByPath(path);
    if (file != null) {
      return file;
    }
  }
  return null;
}
