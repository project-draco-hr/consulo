{
  myIndicator=indicator;
  final ProjectManager projectManager=ProjectManager.getInstance();
  CloseListener closeListener;
  projectManager.addProjectManagerListener(myProject,closeListener=new CloseListener());
  final Semaphore semaphore=((CompilerManagerImpl)CompilerManager.getInstance(myProject)).getCompilationSemaphore();
  boolean acquired=false;
  try {
    try {
      while (!acquired) {
        acquired=semaphore.tryAcquire(300,TimeUnit.MILLISECONDS);
        if (!acquired && !myWaitForPreviousSession) {
          return;
        }
        if (indicator.isCanceled()) {
          break;
        }
      }
    }
 catch (    InterruptedException ignored) {
    }
    if (!isHeadless()) {
      addIndicatorDelegate();
    }
    myCompileWork.run();
  }
  finally {
    try {
      indicator.stop();
      projectManager.removeProjectManagerListener(myProject,closeListener);
    }
  finally {
      if (acquired) {
        semaphore.release();
      }
    }
  }
}
