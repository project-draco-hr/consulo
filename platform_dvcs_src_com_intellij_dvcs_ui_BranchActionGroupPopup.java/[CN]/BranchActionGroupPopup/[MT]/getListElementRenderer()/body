{
  return new PopupListElementRenderer(this){
    private ErrorLabel myBranchLabel;
    @Override protected void customizeComponent(    JList list,    Object value,    boolean isSelected){
      super.customizeComponent(list,value,isSelected);
      RootAction rootAction=getRootAction(value);
      if (rootAction != null) {
        myBranchLabel.setVisible(true);
        myBranchLabel.setText(String.format("[%s]",rootAction.getDisplayableBranchText()));
        if (isSelected) {
          setSelected(myBranchLabel);
        }
 else {
          myBranchLabel.setBackground(getBackground());
          myBranchLabel.setForeground(JBColor.GRAY);
        }
        adjustOpacity(myBranchLabel,isSelected);
      }
 else {
        myBranchLabel.setVisible(false);
      }
    }
    @Override protected JComponent createItemComponent(){
      myTextLabel=new ErrorLabel();
      myTextLabel.setOpaque(true);
      myTextLabel.setBorder(BorderFactory.createEmptyBorder(1,1,1,1));
      myBranchLabel=new ErrorLabel();
      myBranchLabel.setOpaque(true);
      myBranchLabel.setBorder(BorderFactory.createEmptyBorder(1,UIUtil.DEFAULT_HGAP,1,1));
      JPanel compoundPanel=new OpaquePanel(new BorderLayout(),JBColor.WHITE);
      compoundPanel.add(myTextLabel,BorderLayout.CENTER);
      compoundPanel.add(myBranchLabel,BorderLayout.EAST);
      return layoutComponent(compoundPanel);
    }
  }
;
}
