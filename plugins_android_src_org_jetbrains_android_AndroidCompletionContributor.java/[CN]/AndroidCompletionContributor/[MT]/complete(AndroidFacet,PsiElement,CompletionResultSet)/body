{
  PsiElement parent=position.getParent();
  if (parent instanceof XmlTag) {
    XmlTag tag=(XmlTag)parent;
    if (tag.getParentTag() == null) {
      PsiFile file=tag.getContainingFile().getOriginalFile();
      if (file instanceof XmlFile) {
        XmlFile xmlFile=(XmlFile)file;
        if (ManifestDomFileDescription.isManifestFile(xmlFile)) {
          resultSet.addElement(LookupElementBuilder.create("manifest"));
          return false;
        }
 else         if (LayoutDomFileDescription.isLayoutFile(xmlFile)) {
          resultSet.addElement(LookupElementBuilder.create("view"));
          resultSet.addElement(LookupElementBuilder.create("merge"));
          Map<String,PsiClass> viewClassMap=AndroidDomExtender.getViewClassMap(facet);
          for (          String tagName : viewClassMap.keySet()) {
            final PsiClass viewClass=viewClassMap.get(tagName);
            if (!AndroidUtils.isAbstract(viewClass)) {
              resultSet.addElement(LookupElementBuilder.create(tagName));
            }
          }
          return false;
        }
 else         if (AnimationDomFileDescription.isAnimationFile(xmlFile)) {
          addAll(AndroidAnimationUtils.getPossibleChildren(facet),resultSet);
          return false;
        }
 else         if (XmlResourceDomFileDescription.isXmlResourceFile(xmlFile)) {
          addAll(AndroidXmlResourcesUtil.getPossibleRoots(facet),resultSet);
          return false;
        }
      }
    }
  }
  return true;
}
