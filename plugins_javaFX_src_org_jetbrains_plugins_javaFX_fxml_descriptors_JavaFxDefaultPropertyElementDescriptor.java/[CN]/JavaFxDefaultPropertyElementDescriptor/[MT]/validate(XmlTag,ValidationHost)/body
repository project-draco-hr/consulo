{
  final String contextName=context.getName();
  if (FxmlConstants.FX_ROOT.equals(contextName)) {
    if (context.getParentTag() != null) {
      host.addMessage(context.getNavigationElement(),"<fx:root> is valid only as the root node of an FXML document",ValidationHost.ERROR);
    }
  }
 else {
    final XmlTag referencedTag=getReferencedTag(context);
    if (referencedTag != null) {
      final XmlElementDescriptor descriptor=referencedTag.getDescriptor();
      if (descriptor != null) {
        final PsiElement declaration=descriptor.getDeclaration();
        if (declaration instanceof PsiClass) {
          final PsiClass psiClass=(PsiClass)declaration;
          final String canCoerceError=JavaFxPsiUtil.isClassAcceptable(context.getParentTag(),psiClass);
          if (canCoerceError != null) {
            host.addMessage(context.getNavigationElement(),canCoerceError,ValidationHost.ErrorType.ERROR);
          }
          if (FxmlConstants.FX_COPY.equals(contextName)) {
            boolean copyConstructorFound=false;
            for (            PsiMethod constructor : psiClass.getConstructors()) {
              final PsiParameter[] parameters=constructor.getParameterList().getParameters();
              if (parameters.length == 1 && psiClass == PsiUtil.resolveClassInType(parameters[0].getType())) {
                copyConstructorFound=true;
                break;
              }
            }
            if (!copyConstructorFound) {
              host.addMessage(context.getNavigationElement(),"Copy constructor not found for \'" + psiClass.getName() + "\'",ValidationHost.ERROR);
            }
          }
        }
      }
    }
  }
}
