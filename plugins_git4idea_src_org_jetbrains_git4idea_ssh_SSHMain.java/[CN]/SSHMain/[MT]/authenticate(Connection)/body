{
  boolean enableKeyboardInteractive=true;
  boolean enablePassword=true;
  boolean enableDSA=true;
  boolean enableRSA=true;
  for (int i=0; i < MAX_ATTEMPTS; i++) {
    if (c.isAuthenticationComplete()) {
      return;
    }
    if ((enableDSA || enableRSA) && c.isAuthMethodAvailable(myUsername,PUBLICKEY_METHOD)) {
      try {
        if (tryPublicKey(c,idRSAPath)) {
          return;
        }
      }
  finally {
        enableRSA=false;
      }
      try {
        if (tryPublicKey(c,idDSAPath)) {
          return;
        }
      }
  finally {
        enableDSA=false;
      }
    }
    if (enableKeyboardInteractive && c.isAuthMethodAvailable(myUsername,KEYBOARD_INTERACTIVE_METHOD)) {
      InteractiveSupport ic=new InteractiveSupport();
      if (c.authenticateWithKeyboardInteractive(myUsername,ic)) {
        myLastError="";
        return;
      }
 else {
        myLastError=GitBundle.getString("sshmain.keyboard.interactive.failed");
      }
      if (ic.myPromptCount == 0 || ic.myCancelled) {
        enableKeyboardInteractive=false;
        myLastError="";
      }
      continue;
    }
    if (enablePassword && c.isAuthMethodAvailable(myUsername,PASSWORD_METHOD)) {
      String password=myXmlRpcClient.askPassword(myHandlerNo,getUserHostString(),myLastError);
      if (password == null) {
        enablePassword=false;
      }
 else {
        if (c.authenticateWithPassword(myUsername,password)) {
          myLastError="";
          return;
        }
 else {
          myLastError=GitBundle.getString("sshmain.password.failed");
        }
      }
      continue;
    }
    throw new IOException("Authentication failed");
  }
}
