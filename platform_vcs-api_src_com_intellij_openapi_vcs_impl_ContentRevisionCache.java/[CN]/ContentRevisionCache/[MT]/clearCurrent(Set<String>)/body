{
  final HashSet<String> converted=new HashSet<String>();
  for (  String path : paths) {
    converted.add(FilePathsHelper.convertPath(path));
  }
synchronized (myLock) {
    final Set<CurrentKey> toRemove=new HashSet<CurrentKey>();
    myCurrentRevisionsCache.iterateKeys(new Consumer<CurrentKey>(){
      @Override public void consume(      CurrentKey currentKey){
        if (converted.contains(FilePathsHelper.convertPath(currentKey.getPath().getPath()))) {
          toRemove.add(currentKey);
        }
      }
    }
);
    for (    CurrentKey key : toRemove) {
      myCurrentRevisionsCache.remove(key);
    }
  }
}
