{
  final String oldRtDescriptor=CacheUtils.getMethodReturnTypeDescriptor(oldCache,oldMethod,symbolTable);
  final String newRtDescriptor=CacheUtils.getMethodReturnTypeDescriptor(newCache,newMethod,symbolTable);
  returnTypeDescriptorChanged=!oldRtDescriptor.equals(newRtDescriptor);
  final int oldGenericSignature=oldCache.getMethodGenericSignature(oldMethod);
  final int newGenericSignature=newCache.getMethodGenericSignature(newMethod);
  if (oldGenericSignature == newGenericSignature) {
    returnTypeGenericSignatureChanged=false;
  }
 else {
    if (oldGenericSignature != -1 && newGenericSignature != -1) {
      try {
        final GenericMethodSignature _oldGenericMethodSignature=GenericMethodSignature.parse(symbolTable.getSymbol(oldGenericSignature));
        final GenericMethodSignature _newGenericMethodSignature=GenericMethodSignature.parse(symbolTable.getSymbol(newGenericSignature));
        returnTypeGenericSignatureChanged=!_oldGenericMethodSignature.getReturnTypeSignature().equals(_newGenericMethodSignature.getReturnTypeSignature());
      }
 catch (      SignatureParsingException e) {
        throw new CacheCorruptedException(e);
      }
    }
 else {
      returnTypeGenericSignatureChanged=true;
    }
  }
  throwsListChanged=!CacheUtils.areArraysContentsEqual(oldCache.getMethodThrownExceptions(oldMethod),newCache.getMethodThrownExceptions(newMethod));
  final int oldFlags=oldCache.getMethodFlags(oldMethod);
  final int newFlags=newCache.getMethodFlags(newMethod);
  flagsChanged=oldFlags != newFlags;
  staticPropertyChanged=(ClsUtil.isStatic(oldFlags) && !ClsUtil.isStatic(newFlags)) || (!ClsUtil.isStatic(oldFlags) && ClsUtil.isStatic(newFlags));
  accessRestricted=MakeUtil.isMoreAccessible(oldFlags,newFlags);
  becameAbstract=!ClsUtil.isAbstract(oldFlags) && ClsUtil.isAbstract(newFlags);
  final ConstantValue oldDefault=oldCache.getAnnotationDefault(oldMethod);
  final ConstantValue newDefault=newCache.getAnnotationDefault(newMethod);
  removedAnnotationDefault=(oldDefault != null && !ConstantValue.EMPTY_CONSTANT_VALUE.equals(oldDefault)) && (newDefault == null || ConstantValue.EMPTY_CONSTANT_VALUE.equals(newDefault));
}
