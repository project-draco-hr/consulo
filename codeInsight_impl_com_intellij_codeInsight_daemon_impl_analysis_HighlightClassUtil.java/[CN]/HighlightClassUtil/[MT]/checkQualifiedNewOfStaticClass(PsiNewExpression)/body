{
  PsiExpression qualifier=expression.getQualifier();
  if (qualifier == null)   return null;
  PsiType type=expression.getType();
  PsiClass aClass=PsiUtil.resolveClassInType(type);
  if (aClass != null && aClass.hasModifierProperty(PsiModifier.STATIC)) {
    HighlightInfo highlightInfo=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,expression,JavaErrorMessages.message("qualified.new.of.static.class"));
    if (!aClass.isEnum()) {
      IntentionAction fix=QUICK_FIX_FACTORY.createModifierListFix(aClass.getModifierList(),PsiModifier.STATIC,false,false);
      QuickFixAction.registerQuickFixAction(highlightInfo,fix);
      QuickFixAction.registerQuickFixAction(highlightInfo,new RemoveNewQualifierFix(expression,aClass));
    }
    return highlightInfo;
  }
  return null;
}
