{
  if (!HighlightUtil.isSuperMethodCall(superCall))   return null;
  PsiMethod ctr=PsiTreeUtil.getParentOfType(superCall,PsiMethod.class,true,PsiMember.class);
  if (ctr == null)   return null;
  PsiClass targetClass=ctr.getContainingClass().getSuperClass();
  if (targetClass == null)   return null;
  PsiExpression qualifier=superCall.getMethodExpression().getQualifierExpression();
  if (PsiUtil.isInnerClass(targetClass)) {
    PsiClass outerClass=targetClass.getContainingClass();
    if (qualifier == null) {
      return createNotQualifiedError(outerClass,superCall.getTextRange());
    }
    PsiClassType outerType=superCall.getManager().getElementFactory().createType(outerClass);
    return HighlightUtil.checkAssignability(outerType,null,qualifier,qualifier);
  }
  return null;
}
