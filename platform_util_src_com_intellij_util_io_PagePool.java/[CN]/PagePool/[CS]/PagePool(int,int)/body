{
  myProbationalQueue=new LinkedHashMap<PoolPageKey,Page>(probationalPagesLimit * 2,1,true){
    @Override protected boolean removeEldestEntry(    final Map.Entry<PoolPageKey,Page> eldest){
      if (size() > probationalPagesLimit) {
        scheduleFinalization(eldest.getValue());
        return true;
      }
      return false;
    }
  }
;
  myProtectedQueue=new LinkedHashMap<PoolPageKey,Page>(protectedPagesLimit,1,true){
    @Override protected boolean removeEldestEntry(    final Map.Entry<PoolPageKey,Page> eldest){
      if (size() > protectedPagesLimit) {
        myProbationalQueue.put(eldest.getKey(),eldest.getValue());
        return true;
      }
      return false;
    }
  }
;
}
