{
  int modifier=originalKeyStroke.getModifiers() & ~InputEvent.BUTTON1_DOWN_MASK & ~InputEvent.BUTTON1_MASK& ~InputEvent.BUTTON2_DOWN_MASK& ~InputEvent.BUTTON2_MASK& ~InputEvent.BUTTON3_DOWN_MASK& ~InputEvent.BUTTON3_MASK;
  try {
    Method[] methods=AWTKeyStroke.class.getDeclaredMethods();
    Method getCachedStrokeMethod=null;
    for (int i=0; i < methods.length; i++) {
      Method method=methods[i];
      if ("getCachedStroke".equals(method.getName())) {
        getCachedStrokeMethod=method;
        getCachedStrokeMethod.setAccessible(true);
        break;
      }
    }
    if (getCachedStrokeMethod == null) {
      throw new IllegalStateException("not found method with name getCachedStrokeMethod");
    }
    Object[] getCachedStrokeMethodArgs=new Object[]{new Character(originalKeyStroke.getKeyChar()),new Integer(originalKeyStroke.getKeyCode()),new Integer(modifier),new Boolean(originalKeyStroke.isOnKeyRelease())};
    KeyStroke keyStroke=(KeyStroke)getCachedStrokeMethod.invoke(originalKeyStroke,getCachedStrokeMethodArgs);
    return keyStroke;
  }
 catch (  Exception exc) {
    throw new IllegalStateException(exc.getMessage());
  }
}
