{
  final int offset=editor.getCaretModel().getOffset() - 1;
  final Document document=editor.getDocument();
  CharSequence chars=document.getCharsSequence();
  if (offset < 0 || chars.charAt(offset) != braceChar)   return;
  int spaceStart=CharArrayUtil.shiftBackward(chars,offset - 1," \t");
  if (spaceStart < 0 || chars.charAt(spaceStart) == '\n' || chars.charAt(spaceStart) == '\r') {
    PsiDocumentManager.getInstance(project).commitDocument(document);
    final PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(document);
    if (file == null || !file.isWritable())     return;
    PsiElement element=file.findElementAt(offset);
    if (element == null)     return;
    IElementType braceTokenType=braceChar == '{' ? JavaTokenType.LBRACE : JavaTokenType.RBRACE;
    final Language language=element.getLanguage();
    final PairedBraceMatcher matcher=language.getPairedBraceMatcher();
    if (matcher != null) {
      final BracePair[] pairs=matcher.getPairs();
      if (pairs != null) {
        for (        BracePair pair : pairs) {
          if (pair.isStructural()) {
            if (pair.getLeftBraceChar() == braceChar) {
              braceTokenType=pair.getLeftBraceType();
              break;
            }
 else             if (pair.getRightBraceChar() == braceChar) {
              braceTokenType=pair.getRightBraceType();
              break;
            }
          }
        }
      }
    }
    if (element.getNode() != null && element.getNode().getElementType() == braceTokenType) {
      final Runnable action=new Runnable(){
        public void run(){
          try {
            int newOffset=CodeStyleManager.getInstance(project).adjustLineIndent(file,offset);
            editor.getCaretModel().moveToOffset(newOffset + 1);
            editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
            editor.getSelectionModel().removeSelection();
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
          }
        }
      }
;
      ApplicationManager.getApplication().runWriteAction(action);
    }
  }
}
