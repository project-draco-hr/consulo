{
  Collection<String> names=new HashSet<String>(currentSchemeNameList);
  final StreamProvider[] providers=((ApplicationImpl)ApplicationManager.getApplication()).getStateStore().getStateStorageManager().getStreamProviders(RoamingType.GLOBAL);
  final HashMap<String,E> result=new HashMap<String,E>();
  if (providers != null) {
    for (    StreamProvider provider : providers) {
      String[] paths=provider.listSubFiles(myFileSpec);
      for (      String subpath : paths) {
        try {
          final Document subDocument=provider.loadDocument(getFileFullPath(subpath),RoamingType.GLOBAL);
          if (subDocument != null) {
            final E scheme=myProcessor.readScheme(subDocument);
            String schemeName=scheme.getName();
            String uniqueName=UniqueNameGenerator.generateUniqueName("[shared] " + schemeName,"","",names);
            if (!uniqueName.equals(schemeName)) {
              renameScheme(scheme,uniqueName);
              schemeName=uniqueName;
            }
            scheme.getExternalInfo().setOriginalPath(getFileFullPath(subpath));
            scheme.getExternalInfo().setIsImported(true);
            result.put(schemeName,scheme);
          }
        }
 catch (        Exception e) {
          LOG.debug("Cannot load data from IDEAServer: " + e.getLocalizedMessage());
        }
      }
    }
  }
  for (  E t : result.values()) {
    myProcessor.initScheme(t);
  }
  return result.values();
}
