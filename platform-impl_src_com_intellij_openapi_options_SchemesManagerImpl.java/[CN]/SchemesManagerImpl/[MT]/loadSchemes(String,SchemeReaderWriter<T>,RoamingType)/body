{
  final String path=expandMacroses(fileSpec);
  final HashMap<String,T> result=new HashMap<String,T>();
  if (path == null)   return result.values();
  final File baseDir=new File(path);
  baseDir.mkdirs();
  final File[] files=baseDir.listFiles();
  if (files != null) {
    for (    File file : files) {
      final String name=file.getName();
      if (file.isFile() && StringUtil.endsWithIgnoreCase(name,EXT)) {
        try {
          final Document document=JDOMUtil.loadDocument(file);
          final T scheme=readerWriter.readScheme(document,file);
          if (scheme != null) {
            final String schemeName=scheme.getName();
            result.put(schemeName,scheme);
            final String schemeKey=fileSpec + "/" + schemeName;
            saveFileName(file,schemeKey);
            mySchemeNameToHashValue.put(schemeKey,computeHashValue(document));
          }
        }
 catch (        Exception e) {
          readerWriter.showReadErrorMessage(e,name,file.getPath());
        }
      }
    }
  }
 else {
    LOG.error("Cannot read directory: " + baseDir.getAbsolutePath());
  }
  final StreamProvider[] providers=((ApplicationImpl)ApplicationManager.getApplication()).getStateStore().getStateStorageManager().getStreamProviders(roamingType);
  if (providers != null) {
    for (    StreamProvider provider : providers) {
      String[] paths=provider.listSubFiles(fileSpec);
      for (      String subpath : paths) {
        try {
          final Document subDocument=provider.loadDocument(fileSpec + "/" + subpath,roamingType);
          if (subDocument != null) {
            final File file=new File(baseDir,subpath);
            JDOMUtil.writeDocument(subDocument,file,"\n");
            final T scheme=readerWriter.readScheme(subDocument,file);
            final String schemeName=scheme.getName();
            result.put(schemeName,scheme);
            final String schemeKey=fileSpec + "/" + schemeName;
            saveFileName(file,schemeKey);
            mySchemeNameToHashValue.put(schemeKey,computeHashValue(subDocument));
          }
        }
 catch (        Exception e) {
          LOG.info("Cannot load data from IDEAServer: " + e.getLocalizedMessage());
        }
      }
    }
  }
  return result.values();
}
