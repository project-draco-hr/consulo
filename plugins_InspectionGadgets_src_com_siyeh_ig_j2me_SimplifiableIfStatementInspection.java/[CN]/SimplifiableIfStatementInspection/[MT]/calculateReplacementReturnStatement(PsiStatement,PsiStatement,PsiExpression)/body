{
  final PsiReturnStatement thenReturnStatement=(PsiReturnStatement)thenBranch;
  final PsiExpression thenReturnValue=thenReturnStatement.getReturnValue();
  if (thenReturnValue == null) {
    return "";
  }
  final PsiReturnStatement elseReturnStatement=(PsiReturnStatement)elseBranch;
  final PsiExpression elseReturnValue=elseReturnStatement.getReturnValue();
  if (elseReturnValue == null) {
    return "";
  }
  if (BoolUtils.isTrue(thenReturnValue)) {
    if (ParenthesesUtils.getPrecedence(elseReturnValue) > ParenthesesUtils.OR_PRECEDENCE) {
      return "return " + condition.getText() + " || ("+ elseReturnValue.getText()+ ");";
    }
 else {
      return "return " + condition.getText() + " || "+ elseReturnValue.getText()+ ';';
    }
  }
 else   if (BoolUtils.isFalse(thenReturnValue)) {
    if (ParenthesesUtils.getPrecedence(elseReturnValue) > ParenthesesUtils.AND_PRECEDENCE) {
      return "return " + BoolUtils.getNegatedExpressionText(condition) + " && ("+ elseReturnValue.getText()+ ");";
    }
 else {
      return "return " + BoolUtils.getNegatedExpressionText(condition) + " && "+ elseReturnValue.getText()+ ';';
    }
  }
  if (BoolUtils.isTrue(elseReturnValue)) {
    if (ParenthesesUtils.getPrecedence(thenReturnValue) > ParenthesesUtils.OR_PRECEDENCE) {
      return "return " + BoolUtils.getNegatedExpressionText(condition) + " || ("+ thenReturnValue.getText()+ ");";
    }
 else {
      return "return " + BoolUtils.getNegatedExpressionText(condition) + " || "+ thenReturnValue.getText()+ ';';
    }
  }
 else {
    final String conditionText;
    if (ParenthesesUtils.getPrecedence(condition) > ParenthesesUtils.AND_PRECEDENCE) {
      conditionText='(' + condition.getText() + ')';
    }
 else {
      conditionText=condition.getText();
    }
    if (ParenthesesUtils.getPrecedence(thenReturnValue) > ParenthesesUtils.AND_PRECEDENCE) {
      return "return " + conditionText + " && ("+ thenReturnValue.getText()+ ");";
    }
 else {
      return "return " + conditionText + " && "+ thenReturnValue.getText()+ ';';
    }
  }
}
