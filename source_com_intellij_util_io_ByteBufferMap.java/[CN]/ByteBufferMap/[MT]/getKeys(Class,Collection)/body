{
  try {
    myBuffer.setPosition(myStartOffset + 4);
    int firstKeyGroupOffset=-1;
    int lastKeyGroupOffset=-1;
    for (int i=0; i < myMod; i++) {
      int value=myBuffer.readInt();
      if (value != -1) {
        int offset=value + myStartOffset;
        if (firstKeyGroupOffset == -1)         firstKeyGroupOffset=offset;
        lastKeyGroupOffset=offset;
      }
    }
    if (firstKeyGroupOffset == -1) {
      return;
    }
    LOG.assertTrue(firstKeyGroupOffset > myStartOffset);
    LOG.assertTrue(lastKeyGroupOffset > myStartOffset);
    LOG.assertTrue(lastKeyGroupOffset >= firstKeyGroupOffset);
    int firstValueOffset=-1;
    myBuffer.setPosition(firstKeyGroupOffset);
    while (myBuffer.getPosition() <= lastKeyGroupOffset) {
      int groupSize=myBuffer.readInt();
      for (int i=0; i < groupSize; i++) {
        dst.add(myKeyProvider.get(myBuffer));
        int valueOffset=myBuffer.readInt();
        if (firstValueOffset == -1)         firstValueOffset=valueOffset + myStartOffset;
      }
    }
    LOG.assertTrue(myBuffer.getPosition() == firstValueOffset);
  }
 catch (  IOException e) {
    LOG.error(e);
  }
}
