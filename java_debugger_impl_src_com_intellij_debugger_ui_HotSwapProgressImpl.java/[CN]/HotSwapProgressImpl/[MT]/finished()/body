{
  super.finished();
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      final List<String> errors=getMessages(MessageCategory.ERROR);
      final List<String> warnings=getMessages(MessageCategory.WARNING);
      if (errors.size() > 0) {
        final String message=buildMessage(errors);
        ToolWindowManager.getInstance(getProject()).notifyByBalloon(ToolWindowId.DEBUG,MessageType.ERROR,message,null,null);
        NOTIFICATION_GROUP.createNotification(DebuggerBundle.message("status.hot.swap.completed.with.errors"),message,NotificationType.ERROR,null).notify(getProject());
      }
 else       if (warnings.size() > 0) {
        final String message=buildMessage(warnings);
        ToolWindowManager.getInstance(getProject()).notifyByBalloon(ToolWindowId.DEBUG,MessageType.WARNING,message,Messages.getWarningIcon(),null);
        NOTIFICATION_GROUP.createNotification(DebuggerBundle.message("status.hot.swap.completed.with.warnings"),message,NotificationType.WARNING,null).notify(getProject());
      }
 else       if (myMessages.size() > 0) {
        final StringBuilder msg=StringBuilderSpinAllocator.alloc();
        try {
          for (          int category : myMessages.keys()) {
            if (msg.length() > 0) {
              msg.append(" \n");
            }
            final List<String> categoryMessages=getMessages(category);
            for (Iterator<String> it=categoryMessages.iterator(); it.hasNext(); ) {
              msg.append(it.next());
              if (it.hasNext()) {
                msg.append(" \n");
              }
            }
          }
          final String message=msg.toString();
          ToolWindowManager.getInstance(getProject()).notifyByBalloon(ToolWindowId.DEBUG,MessageType.INFO,message,null,null);
          NOTIFICATION_GROUP.createNotification(message,NotificationType.INFORMATION).notify(getProject());
        }
  finally {
          StringBuilderSpinAllocator.dispose(msg);
        }
      }
    }
  }
);
}
