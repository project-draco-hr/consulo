{
  super.finished();
  final List<String> errors=getMessages(MessageCategory.ERROR);
  final List<String> warnings=getMessages(MessageCategory.WARNING);
  if (errors.size() > 0) {
    NOTIFICATION_GROUP.createNotification(DebuggerBundle.message("status.hot.swap.completed.with.errors"),buildMessage(errors),NotificationType.ERROR,null).notify(getProject());
  }
 else   if (warnings.size() > 0) {
    NOTIFICATION_GROUP.createNotification(DebuggerBundle.message("status.hot.swap.completed.with.warnings"),buildMessage(warnings),NotificationType.WARNING,null).notify(getProject());
  }
 else   if (myMessages.size() > 0) {
    final StringBuilder msg=StringBuilderSpinAllocator.alloc();
    try {
      for (      int category : myMessages.keys()) {
        if (msg.length() > 0) {
          msg.append(" \n");
        }
        final List<String> categoryMessages=getMessages(category);
        for (Iterator<String> it=categoryMessages.iterator(); it.hasNext(); ) {
          msg.append(it.next());
          if (it.hasNext()) {
            msg.append(" \n");
          }
        }
      }
      NOTIFICATION_GROUP.createNotification(msg.toString(),NotificationType.INFORMATION).notify(getProject());
    }
  finally {
      StringBuilderSpinAllocator.dispose(msg);
    }
  }
}
