{
  HighlightInfo info=null;
  if (myRange != null) {
    TextAttributes attributes=new TextAttributes(null,null,myEditor.getColorsScheme().getAttributes(CodeInsightColors.WEAK_WARNING_ATTRIBUTES).getEffectColor(),null,Font.PLAIN);
    HighlightInfo.Builder builder=HighlightInfo.newHighlightInfo(HighlightInfoType.INFORMATION).range(myRange);
    builder.textAttributes(attributes);
    builder.descriptionAndTooltip(SIGNATURE_SHOULD_BE_POSSIBLY_CHANGED);
    info=builder.createUnconditionally();
    final ArrayList<IntentionAction> options=new ArrayList<IntentionAction>();
    options.add(new DismissNewSignatureIntentionAction());
    QuickFixAction.registerQuickFixAction(info,new ChangeSignatureDetectorAction(),options,null);
  }
  Collection<HighlightInfo> infos=info != null ? Collections.singletonList(info) : Collections.<HighlightInfo>emptyList();
  UpdateHighlightersUtil.setHighlightersToEditor(myProject,myDocument,0,myFile.getTextLength(),infos,getColorsScheme(),getId());
}
