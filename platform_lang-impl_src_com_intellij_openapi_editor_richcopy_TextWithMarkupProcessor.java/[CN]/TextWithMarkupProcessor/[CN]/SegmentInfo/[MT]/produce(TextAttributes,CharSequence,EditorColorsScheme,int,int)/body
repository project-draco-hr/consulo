{
  if (end <= start) {
    return Collections.emptyList();
  }
  List<SegmentInfo> result=ContainerUtilRt.newArrayList();
  int currentStart=start;
  int fontSize=colorsScheme.getEditorFontSize();
  int fontStyle=attribute.getFontType();
  String defaultFontFamily=colorsScheme.getEditorFontName();
  Font font=ComplementaryFontsRegistry.getFontAbleToDisplay(text.charAt(start),fontSize,fontStyle,defaultFontFamily).getFont();
  String currentFontFamilyName=font.getFamily();
  String candidateFontFamilyName;
  for (int i=start + 1; i < end; i++) {
    font=ComplementaryFontsRegistry.getFontAbleToDisplay(text.charAt(i),fontSize,fontStyle,defaultFontFamily).getFont();
    candidateFontFamilyName=font.getFamily();
    if (!candidateFontFamilyName.equals(currentFontFamilyName)) {
      result.add(new SegmentInfo(attribute.getForegroundColor(),attribute.getBackgroundColor(),currentFontFamilyName,fontStyle,currentStart,i));
      currentStart=i;
      currentFontFamilyName=candidateFontFamilyName;
    }
  }
  if (currentStart < end) {
    result.add(new SegmentInfo(attribute.getForegroundColor(),attribute.getBackgroundColor(),currentFontFamilyName,fontStyle,currentStart,end));
  }
  return result;
}
