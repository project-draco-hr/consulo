{
  myNextAttributes=null;
  while (myIterator.hasNext()) {
    RangeHighlighterEx highlighter=myIterator.next();
    if (highlighter == null || !highlighter.isValid() || !isInterestedInLayer(highlighter.getLayer())) {
      continue;
    }
    myNextStart=Math.max(highlighter.getStartOffset(),myStartOffset);
    myNextEnd=Math.min(highlighter.getEndOffset(),myEndOffset);
    if (myNextStart >= myEndOffset) {
      break;
    }
    if (myNextStart < myCurrentEnd) {
      continue;
    }
    TextAttributes attributes=null;
    Object tooltip=highlighter.getErrorStripeTooltip();
    if (tooltip instanceof HighlightInfo) {
      HighlightInfo info=(HighlightInfo)tooltip;
      TextAttributesKey key=info.forcedTextAttributesKey;
      if (key == null) {
        HighlightInfoType type=info.type;
        key=type.getAttributesKey();
      }
      if (key != null) {
        attributes=myColorsScheme.getAttributes(key);
      }
    }
    if (attributes == null) {
      continue;
    }
    Color foreground=attributes.getForegroundColor();
    Color background=attributes.getBackgroundColor();
    if ((foreground == null || myDefaultForeground.equals(foreground)) && (background == null || myDefaultBackground.equals(background)) && attributes.getFontType() == Font.PLAIN) {
      continue;
    }
    myNextAttributes=attributes;
    break;
  }
}
