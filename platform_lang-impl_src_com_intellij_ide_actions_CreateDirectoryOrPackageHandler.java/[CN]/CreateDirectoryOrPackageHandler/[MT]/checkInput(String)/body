{
  final StringTokenizer tokenizer=new StringTokenizer(inputString,myDelimiters);
  VirtualFile vFile=myDirectory.getVirtualFile();
  boolean firstToken=true;
  while (tokenizer.hasMoreTokens()) {
    final String token=tokenizer.nextToken();
    if (!tokenizer.hasMoreTokens() && (token.equals(".") || token.equals(".."))) {
      myErrorText="Can't create a directory with name '" + token + "'";
      return false;
    }
    if (vFile != null) {
      if (firstToken && "~".equals(token)) {
        final VirtualFile userHomeDir=VfsUtil.getUserHomeDir();
        if (userHomeDir == null) {
          myErrorText="User home directory not found";
          return false;
        }
        vFile=userHomeDir;
      }
 else       if ("..".equals(token)) {
        vFile=vFile.getParent();
        if (vFile == null) {
          myErrorText="Not a valid directory";
          return false;
        }
      }
 else       if (!".".equals(token)) {
        final VirtualFile child=vFile.findChild(token);
        if (child != null) {
          if (!child.isDirectory()) {
            myErrorText="A file with name '" + token + "' already exists";
            return false;
          }
 else           if (!tokenizer.hasMoreTokens()) {
            myErrorText="A directory with name '" + token + "' already exists";
            return false;
          }
        }
        vFile=child;
      }
    }
    if (FileTypeManager.getInstance().isFileIgnored(token)) {
      myErrorText="Trying to create a " + (myIsDirectory ? "directory" : "package") + " with an ignored name, the result will not be visible";
      return true;
    }
    if (!myIsDirectory && token.length() > 0 && !PsiPackageHelper.getInstance(myProject).isValidPackageName(token)) {
      myErrorText="Not a valid package name, it will not be possible to create a class inside";
      return true;
    }
    firstToken=false;
  }
  myErrorText=null;
  return true;
}
