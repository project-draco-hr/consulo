{
  final Project project=getProject();
  ExpectedHighlightingData data=new ExpectedHighlightingData(myEditor.getDocument(),checkWarnings,checkWeakWarnings,checkInfos,myFile);
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  ((PsiFileImpl)myFile).calcTreeElement();
  myPsiManager.getCacheManager().getFilesWithWord(XXX,UsageSearchContext.IN_COMMENTS,GlobalSearchScope.allScope(project),true);
  VirtualFileFilter javaFilesFilter=new VirtualFileFilter(){
    public boolean accept(    VirtualFile file){
      if (myAddedClasses.contains(file))       return false;
      FileType fileType=FileTypeManager.getInstance().getFileTypeByFile(file);
      return fileType == StdFileTypes.JAVA || fileType == StdFileTypes.CLASS;
    }
  }
;
  JavaPsiFacadeEx.getInstanceEx(project).setAssertOnFileLoadingFilter(javaFilesFilter);
  final long start=System.currentTimeMillis();
  Collection<HighlightInfo> infos=doHighlighting();
  duration.set(System.currentTimeMillis() - start);
  JavaPsiFacadeEx.getInstanceEx(project).setAssertOnFileLoadingFilter(VirtualFileFilter.NONE);
  data.checkResult(infos,myEditor.getDocument().getText());
}
