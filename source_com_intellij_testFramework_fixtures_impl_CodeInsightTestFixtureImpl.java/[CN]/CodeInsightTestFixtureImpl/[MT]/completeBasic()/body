{
  final Ref<Boolean> empty=Ref.create(false);
  new WriteCommandAction(getProject()){
    protected void run(    final Result result) throws Throwable {
      new CodeCompletionAction(){
        public CodeInsightActionHandler getHandler(){
          return new CodeCompletionHandler(){
            protected PsiFile createFileCopy(            final PsiFile file){
              final PsiFile copy=super.createFileCopy(file);
              if (myFileContext != null) {
                final PsiElement contextCopy=myFileContext.copy();
                final PsiFile containingFile=contextCopy.getContainingFile();
                if (containingFile instanceof PsiFileImpl) {
                  ((PsiFileImpl)containingFile).setOriginalFile(myFileContext.getContainingFile());
                }
                setContext(copy,contextCopy);
              }
              return copy;
            }
            protected void handleEmptyLookup(            final CompletionContext context,            final CompletionParameters parameters,            final CompletionProgressIndicator indicator){
              empty.set(true);
              super.handleEmptyLookup(context,parameters,indicator);
            }
          }
;
        }
      }
.actionPerformedImpl(getProject(),InjectedLanguageUtil.getEditorForInjectedLanguageNoCommit(myEditor,myFile));
    }
  }
.execute().getResultObject();
  if (empty.get().booleanValue())   return LookupItem.EMPTY_ARRAY;
  return getLookupElements();
}
