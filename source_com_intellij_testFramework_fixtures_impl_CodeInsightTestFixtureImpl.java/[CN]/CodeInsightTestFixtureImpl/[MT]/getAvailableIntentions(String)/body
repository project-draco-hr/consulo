{
  final List<IntentionAction> availableActions=new ArrayList<IntentionAction>();
  final Project project=myProjectFixture.getProject();
  new WriteCommandAction.Simple(project){
    protected void run() throws Throwable {
      final int offset=configureByFiles(filePaths);
      final Collection<HighlightInfo> infos=doHighlighting();
      for (      HighlightInfo info : infos) {
        if (info.quickFixActionRanges != null) {
          for (          Pair<HighlightInfo.IntentionActionDescriptor,TextRange> pair : info.quickFixActionRanges) {
            if (offset > 0 && !pair.getSecond().contains(offset)) {
              continue;
            }
            IntentionAction action=pair.first.getAction();
            if (action.isAvailable(project,myEditor,myFile)) {
              availableActions.add(action);
              if (pair.first.getOptions() != null) {
                for (                IntentionAction intentionAction : pair.first.getOptions()) {
                  if (intentionAction.isAvailable(project,myEditor,myFile)) {
                    availableActions.add(intentionAction);
                  }
                }
              }
            }
          }
        }
      }
      final IntentionAction[] intentionActions=IntentionManager.getInstance(getProject()).getIntentionActions();
      for (      IntentionAction intentionAction : intentionActions) {
        if (intentionAction.isAvailable(getProject(),getEditor(),getFile())) {
          availableActions.add(intentionAction);
        }
      }
    }
  }
.execute().throwException();
  return availableActions;
}
