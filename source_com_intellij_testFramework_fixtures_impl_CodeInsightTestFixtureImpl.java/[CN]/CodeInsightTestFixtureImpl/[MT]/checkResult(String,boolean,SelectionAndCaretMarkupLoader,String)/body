{
  assertInitialized();
  Project project=myProjectFixture.getProject();
  project.getComponent(PostprocessReformattingAspect.class).doPostponedFormatting();
  if (stripTrailingSpaces) {
    actualText=stripTrailingSpaces(actualText);
  }
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  String newFileText1=loader.newFileText;
  if (stripTrailingSpaces) {
    newFileText1=stripTrailingSpaces(newFileText1);
  }
  actualText=StringUtil.convertLineSeparators(actualText,"\n");
  Assert.assertEquals("Text mismatch in file " + expectedFile,newFileText1,actualText);
  if (loader.caretMarker != null) {
    int caretLine=StringUtil.offsetToLineNumber(loader.newFileText,loader.caretMarker.getStartOffset());
    int caretCol=loader.caretMarker.getStartOffset() - StringUtil.lineColToOffset(loader.newFileText,caretLine,0);
    Assert.assertEquals("caretLine",caretLine + 1,myEditor.getCaretModel().getLogicalPosition().line + 1);
    Assert.assertEquals("caretColumn",caretCol + 1,myEditor.getCaretModel().getLogicalPosition().column + 1);
  }
  if (loader.selStartMarker != null && loader.selEndMarker != null) {
    int selStartLine=StringUtil.offsetToLineNumber(loader.newFileText,loader.selStartMarker.getStartOffset());
    int selStartCol=loader.selStartMarker.getStartOffset() - StringUtil.lineColToOffset(loader.newFileText,selStartLine,0);
    int selEndLine=StringUtil.offsetToLineNumber(loader.newFileText,loader.selEndMarker.getEndOffset());
    int selEndCol=loader.selEndMarker.getEndOffset() - StringUtil.lineColToOffset(loader.newFileText,selEndLine,0);
    Assert.assertEquals("selectionStartLine",selStartLine + 1,StringUtil.offsetToLineNumber(loader.newFileText,myEditor.getSelectionModel().getSelectionStart()) + 1);
    Assert.assertEquals("selectionStartCol",selStartCol + 1,myEditor.getSelectionModel().getSelectionStart() - StringUtil.lineColToOffset(loader.newFileText,selStartLine,0) + 1);
    Assert.assertEquals("selectionEndLine",selEndLine + 1,StringUtil.offsetToLineNumber(loader.newFileText,myEditor.getSelectionModel().getSelectionEnd()) + 1);
    Assert.assertEquals("selectionEndCol",selEndCol + 1,myEditor.getSelectionModel().getSelectionEnd() - StringUtil.lineColToOffset(loader.newFileText,selEndLine,0) + 1);
  }
 else {
    Assert.assertTrue("has no selection",!myEditor.getSelectionModel().hasSelection());
  }
}
