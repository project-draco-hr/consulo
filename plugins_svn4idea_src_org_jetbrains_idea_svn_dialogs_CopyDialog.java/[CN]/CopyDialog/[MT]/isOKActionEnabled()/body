{
  myErrorLabel.setText(" ");
  if (myURL == null) {
    return false;
  }
  String url=myToURLText.getText();
  if (url != null && url.trim().length() > 0) {
    if (myRepositoryRadioButton.isSelected()) {
      SVNRevision revision;
      try {
        revision=myRevisionPanel.getRevision();
      }
 catch (      ConfigurationException e) {
        revision=SVNRevision.UNDEFINED;
      }
      if (!revision.isValid() || revision.isLocal()) {
        myErrorLabel.setText("Invalid revision '" + myRevisionPanel.getRevisionText() + "'");
        return false;
      }
      return true;
    }
 else     if (myWorkingCopyRadioButton.isSelected()) {
      File wcFile=new File(myWorkingCopyField.getText());
      if (wcFile.isFile()) {
        wcFile=wcFile.getParentFile();
      }
      try {
        SVNWCClient client=SvnVcs.getInstance(myProject).createWCClient();
        SVNInfo info=client.doInfo(mySrcFile,SVNRevision.WORKING);
        mySrcURL=info != null && info.getURL() != null ? info.getURL().toString() : null;
      }
 catch (      SVNException e) {
        mySrcURL=null;
      }
      if (mySrcURL == null) {
        myErrorLabel.setText("No working copy found at " + myWorkingCopyField.getText());
        return false;
      }
      return true;
    }
  }
  return false;
}
