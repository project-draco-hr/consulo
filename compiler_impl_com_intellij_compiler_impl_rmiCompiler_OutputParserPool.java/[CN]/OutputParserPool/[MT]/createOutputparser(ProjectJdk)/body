{
  final JavacOutputParser outputParser=new JavacOutputParser(myProject);
  final String[] setupCmdLine=ApplicationManager.getApplication().runReadAction(new Computable<String[]>(){
    public String[] compute(){
      return createParserSetupCommand(jdk);
    }
  }
);
  final Process setupProcess=Runtime.getRuntime().exec(setupCmdLine);
  final CompilerParsingThread setupProcessParsingThread=new CompilerParsingThread(setupProcess,outputParser,true){
    public void setProgressText(    String text){
    }
    public void message(    CompilerMessageCategory category,    String message,    String url,    int lineNum,    int columnNum){
      myContext.addMessage(category,message,url,lineNum,columnNum);
    }
    protected boolean isCancelled(){
      return myContext.getProgressIndicator().isCanceled();
    }
    public void fileProcessed(    String path){
    }
    protected void processCompiledClass(    String classFileToProcess){
    }
  }
;
  setupProcessParsingThread.start();
  try {
    setupProcessParsingThread.join();
  }
 catch (  InterruptedException e) {
  }
  return outputParser;
}
