{
  super(model);
  setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  ExternalSystemManager<?,?,?,?,?> manager=ExternalSystemApiUtil.getManager(externalSystemId);
  Icon icon=null;
  if (manager instanceof ExternalSystemUiAware) {
    icon=((ExternalSystemUiAware)manager).getTaskIcon();
  }
  if (icon == null) {
    icon=DefaultExternalSystemUiAware.INSTANCE.getTaskIcon();
  }
  setCellRenderer(new MyRenderer(project,icon,ExternalSystemUtil.findConfigurationType(externalSystemId)));
  setVisibleRowCount(ExternalSystemConstants.RECENT_TASKS_NUMBER);
  registerKeyboardAction(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      ExternalTaskExecutionInfo task=produce();
      if (task == null) {
        return;
      }
      ExternalSystemUtil.runTask(task.getSettings(),task.getExecutorId(),project,externalSystemId);
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() < 2) {
        return;
      }
      ExternalTaskExecutionInfo task=produce();
      if (task == null) {
        return;
      }
      ExternalSystemUtil.runTask(task.getSettings(),task.getExecutorId(),project,externalSystemId);
    }
  }
);
}
