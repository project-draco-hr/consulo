{
  final List<HierarchicalMethodSignature> superSignatures=signature.getSuperSignatures();
  final PsiResolveHelper resolveHelper=JavaPsiFacade.getInstance(place.getProject()).getResolveHelper();
  for (  final HierarchicalMethodSignature superSignature : superSignatures) {
    final PsiMethod superMethod=superSignature.getMethod();
    if (processed == null)     processed=new THashSet<PsiMethod>();
    if (!processed.add(superMethod))     continue;
    if (!resolveHelper.isAccessible(superMethod,place,null))     continue;
    PsiAnnotation direct=findAnnotation(superMethod,annotationNames);
    if (direct != null)     return direct;
    PsiAnnotation superResult=findAnnotationInHierarchy(superSignature,annotationNames,place,processed);
    if (superResult != null)     return superResult;
  }
  return null;
}
