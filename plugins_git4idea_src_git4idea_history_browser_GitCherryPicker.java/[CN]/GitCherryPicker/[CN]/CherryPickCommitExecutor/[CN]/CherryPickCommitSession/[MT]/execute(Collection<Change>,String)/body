{
  final Collection<Document> committingDocs=markCommittingDocs();
  try {
    GitCheckinEnvironment ce=ServiceManager.getService(myProject,GitCheckinEnvironment.class);
    try {
      ce.reset();
      List<VcsException> exceptions=ce.commit(myChanges,commitMessage);
      VcsDirtyScopeManager.getInstance(myProject).filePathsDirty(ChangesUtil.getPaths(myChanges),null);
      if (exceptions != null && !exceptions.isEmpty()) {
        VcsException exception=exceptions.get(0);
        handleError(exception);
      }
      myActualCommitMessage=commitMessage;
    }
 catch (    Throwable e) {
      LOG.error(e);
      handleError(e);
    }
  }
  finally {
    unmarkCommittingDocs(committingDocs);
  }
}
