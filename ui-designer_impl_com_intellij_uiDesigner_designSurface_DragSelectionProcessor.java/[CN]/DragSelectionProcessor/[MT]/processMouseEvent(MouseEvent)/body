{
  if (e.getID() == MouseEvent.MOUSE_PRESSED) {
    myPressPoint=e.getPoint();
  }
 else   if (e.getID() == MouseEvent.MOUSE_RELEASED) {
    if (!myDragStarted && e.isControlDown()) {
      RadComponent component=FormEditingUtil.getRadComponentAt(myEditor,e.getX(),e.getY());
      if (component != null) {
        component.setSelected(!component.isSelected());
      }
    }
  }
 else   if (e.getID() == MouseEvent.MOUSE_DRAGGED) {
    if (!myDragStarted) {
      if ((Math.abs(e.getX() - myPressPoint.getX()) > TREMOR || Math.abs(e.getY() - myPressPoint.getY()) > TREMOR)) {
        ArrayList<InputEvent> eventList=new ArrayList<InputEvent>();
        eventList.add(e);
        myDragGestureRecognizer.setTriggerEvent(e);
        DragGestureEvent dge=new DragGestureEvent(myDragGestureRecognizer,UIUtil.isControlKeyDown(e) ? DnDConstants.ACTION_COPY : DnDConstants.ACTION_MOVE,myPressPoint,eventList);
        myDragStarted=true;
        myUseDragDelta=true;
        dge.startDrag(null,DraggedComponentList.pickupSelection(myEditor,e.getX(),e.getY()),myDragSourceListener);
      }
    }
  }
}
