{
  myImage=image;
  setOpaque(false);
  col=Color.white;
  final ApplicationInfoImpl ideInfo=(ApplicationInfoImpl)ApplicationInfoEx.getInstanceEx();
  linkCol=ideInfo.getAboutLinkColor() != null ? ideInfo.getAboutLinkColor() : UI.getColor("link.foreground");
  setBackground(col);
  Calendar cal=ideInfo.getBuildDate();
  myLines.add(new AboutBoxLine(ideInfo.getFullApplicationName(),true,null));
  appendLast();
  String buildInfo=IdeBundle.message("aboutbox.build.number",ideInfo.getBuild().asString());
  String buildDate="";
  if (ideInfo.getBuild().isSnapshot()) {
    buildDate=new SimpleDateFormat("HH:mm, ").format(cal.getTime());
  }
  buildDate+=DateFormatUtil.formatAboutDialogDate(cal.getTime());
  buildInfo+=IdeBundle.message("aboutbox.build.date",buildDate);
  myLines.add(new AboutBoxLine(buildInfo));
  appendLast();
  myLines.add(new AboutBoxLine(""));
  LicensingFacade provider=LicensingFacade.getInstance();
  if (provider != null) {
    myLines.add(new AboutBoxLine(provider.getLicensedToMessage(),true,null));
    for (    String message : provider.getLicenseRestrictionsMessages()) {
      myLines.add(new AboutBoxLine(message));
    }
  }
  myLines.add(new AboutBoxLine(""));
  final Properties properties=System.getProperties();
  myLines.add(new AboutBoxLine(IdeBundle.message("aboutbox.jdk",properties.getProperty("java.version","unknown")),true,null));
  appendLast();
  myLines.add(new AboutBoxLine(IdeBundle.message("aboutbox.vm",properties.getProperty("java.vm.name","unknown"),properties.getProperty("java.vendor","unknown"))));
  appendLast();
  myLines.add(new AboutBoxLine(""));
  myLines.add(new AboutBoxLine("Based on ").keepWithNext());
  myLines.add(new AboutBoxLine("IntelliJ Platform",true,"http://jetbrains.org"));
  myLines.add(new AboutBoxLine(""));
  myLines.add(new AboutBoxLine(""));
  myLines.add(new AboutBoxLine("Powered by ").keepWithNext());
  myLines.add(new AboutBoxLine("Must-Be.org",true,"http://must-be.org/consulo/"));
  addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent event){
      if (myActiveLink != null) {
        event.consume();
        BrowserUtil.launchBrowser(myActiveLink.url);
      }
    }
  }
);
  addMouseMotionListener(new MouseMotionAdapter(){
    public void mouseMoved(    MouseEvent event){
      boolean hadLink=(myActiveLink != null);
      myActiveLink=null;
      for (      Link link : myLinks) {
        if (link.rectangle.contains(event.getPoint())) {
          myActiveLink=link;
          if (!hadLink) {
            setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
          }
          break;
        }
      }
      if (hadLink && myActiveLink == null) {
        setCursor(Cursor.getDefaultCursor());
      }
    }
  }
);
}
