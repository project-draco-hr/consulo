{
  myImage=image;
  setOpaque(false);
  col=Color.white;
  final ApplicationInfoEx info=ApplicationInfoEx.getInstanceEx();
  linkCol=info.getSplashTextColor();
  setBackground(col);
  ApplicationInfoEx ideInfo=(ApplicationInfoEx)ApplicationInfo.getInstance();
  Calendar cal=ideInfo.getBuildDate();
  myLines.add(new AboutBoxLine(ideInfo.getFullApplicationName(),true,false));
  appendLast();
  myLines.add(new AboutBoxLine(IdeBundle.message("aboutbox.build.number",ideInfo.getBuild().asString())));
  appendLast();
  String buildDate="";
  if (ideInfo.getBuild().isSnapshot()) {
    buildDate=new SimpleDateFormat("HH:mm, ").format(cal.getTime());
  }
  buildDate+=DateFormatUtil.formatAboutDialogDate(cal.getTime());
  myLines.add(new AboutBoxLine(IdeBundle.message("aboutbox.build.date",buildDate)));
  appendLast();
  myLines.add(new AboutBoxLine(""));
  LicensingFacade provider=LicensingFacade.getInstance();
  if (provider != null) {
    myLines.add(new AboutBoxLine(provider.getLicensedToMessage(),true,false));
    for (    String message : provider.getLicenseRestrictionsMessages()) {
      myLines.add(new AboutBoxLine(message));
    }
  }
  myLines.add(new AboutBoxLine(""));
  final Properties properties=System.getProperties();
  myLines.add(new AboutBoxLine(IdeBundle.message("aboutbox.jdk",properties.getProperty("java.version","unknown")),true,false));
  appendLast();
  myLines.add(new AboutBoxLine(IdeBundle.message("aboutbox.vm",properties.getProperty("java.vm.name","unknown"))));
  appendLast();
  myLines.add(new AboutBoxLine(IdeBundle.message("aboutbox.vendor",properties.getProperty("java.vendor","unknown"))));
  appendLast();
  myLines.add(new AboutBoxLine(""));
  myLines.add(new AboutBoxLine(info.getCompanyName(),true,false));
  myLines.add(new AboutBoxLine(info.getCompanyURL(),true,true));
  addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent event){
      if (inLink) {
        event.consume();
        BrowserUtil.launchBrowser(info.getCompanyURL());
      }
    }
  }
);
  addMouseMotionListener(new MouseMotionAdapter(){
    public void mouseMoved(    MouseEvent event){
      if (event.getPoint().x > linkX && event.getPoint().y >= linkY && event.getPoint().x < linkX + linkWidth && event.getPoint().y < linkY + 10) {
        if (!inLink) {
          setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
          inLink=true;
        }
      }
 else {
        if (inLink) {
          setCursor(Cursor.getDefaultCursor());
          inLink=false;
        }
      }
    }
  }
);
}
