{
  List<MyEntry> autoImportAware=ContainerUtilRt.newArrayList();
  Collection<ExternalSystemManager<?,?,?,?,?>> managers=ExternalSystemApiUtil.getAllManagers();
  for (  ExternalSystemManager<?,?,?,?,?> manager : managers) {
    AbstractExternalSystemSettings<?,?,?> systemSettings=manager.getSettingsProvider().fun(project);
    ExternalSystemAutoImportAware defaultImportAware=createDefault(systemSettings);
    final ExternalSystemAutoImportAware aware;
    if (manager instanceof ExternalSystemAutoImportAware) {
      aware=combine(defaultImportAware,(ExternalSystemAutoImportAware)manager);
    }
 else {
      aware=defaultImportAware;
    }
    autoImportAware.add(new MyEntry(manager.getSystemId(),systemSettings,aware));
  }
  MyEntry[] entries=autoImportAware.toArray(new MyEntry[autoImportAware.size()]);
  ExternalSystemAutoImporter autoImporter=new ExternalSystemAutoImporter(project,ServiceManager.getService(ProjectDataManager.class),entries);
  final MessageBus messageBus=project.getMessageBus();
  messageBus.connect().subscribe(VirtualFileManager.VFS_CHANGES,autoImporter);
  EditorFactory.getInstance().getEventMulticaster().addDocumentListener(autoImporter,project);
}
