{
  try {
    final byte[] byteContent1=VcsHistoryUtil.loadRevisionContent(version1);
    final byte[] byteContent2=VcsHistoryUtil.loadRevisionContent(version2);
    if (Comparing.equal(byteContent1,byteContent2)) {
      Messages.showInfoMessage(VcsBundle.message("message.text.versions.are.identical"),VcsBundle.message("message.title.diff"));
    }
    final SimpleDiffRequest request=new SimpleDiffRequest(myProject,file.getAbsolutePath());
    final FileType fileType=FileTypeManager.getInstance().getFileTypeByFileName(file.getName());
    if (fileType.isBinary()) {
      Messages.showInfoMessage(VcsBundle.message("message.text.binary.versions.differ"),VcsBundle.message("message.title.diff"));
      return;
    }
    final DiffContent content1=getContentForVersion(version1,file);
    final DiffContent content2=getContentForVersion(version2,file);
    if (version2.getRevisionNumber().compareTo(version1.getRevisionNumber()) > 0) {
      request.setContents(content2,content1);
      request.setContentTitles(version2.getRevisionNumber().asString(),version1.getRevisionNumber().asString());
    }
 else {
      request.setContents(content1,content2);
      request.setContentTitles(version1.getRevisionNumber().asString(),version2.getRevisionNumber().asString());
    }
    DiffManager.getInstance().getDiffTool().show(request);
  }
 catch (  VcsException e) {
    showError(e,VcsBundle.message("message.title.diff"));
  }
catch (  IOException e) {
    showError(new VcsException(e),VcsBundle.message("message.title.diff"));
  }
}
