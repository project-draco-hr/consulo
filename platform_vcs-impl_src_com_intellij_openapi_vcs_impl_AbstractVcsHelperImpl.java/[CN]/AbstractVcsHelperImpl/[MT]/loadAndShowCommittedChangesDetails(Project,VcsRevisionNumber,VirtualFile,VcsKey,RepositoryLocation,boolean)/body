{
  final AbstractVcs vcs=ProjectLevelVcsManager.getInstance(project).findVcsByName(vcsKey.getName());
  if (vcs == null)   return;
  final CommittedChangesProvider provider=vcs.getCommittedChangesProvider();
  if (provider == null)   return;
  if (isNonLocal && provider.getForNonLocal(virtualFile) == null)   return;
  final String title=VcsBundle.message("paths.affected.in.revision",revision instanceof ShortVcsRevisionNumber ? ((ShortVcsRevisionNumber)revision).toShortString() : revision.asString());
  final CommittedChangeList[] list=new CommittedChangeList[1];
  final FilePath[] targetPath=new FilePath[1];
  final VcsException[] exc=new VcsException[1];
  Task.Backgroundable task=new Task.Backgroundable(project,title,true,BackgroundFromStartOption.getInstance()){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      try {
        if (!isNonLocal) {
          final Pair<CommittedChangeList,FilePath> pair=provider.getOneList(virtualFile,revision);
          if (pair != null) {
            list[0]=pair.getFirst();
            targetPath[0]=pair.getSecond();
          }
        }
 else {
          if (location != null) {
            final ChangeBrowserSettings settings=provider.createDefaultSettings();
            settings.USE_CHANGE_BEFORE_FILTER=true;
            settings.CHANGE_BEFORE=revision.asString();
            final List<CommittedChangeList> changes=provider.getCommittedChanges(settings,location,1);
            if (changes != null && changes.size() == 1) {
              list[0]=changes.get(0);
            }
          }
 else {
            list[0]=getRemoteList(vcs,revision,virtualFile);
          }
        }
      }
 catch (      VcsException e) {
        exc[0]=e;
      }
    }
    @Override public void onSuccess(){
      if (exc[0] != null) {
        showError(exc[0],failedText(virtualFile,revision));
      }
 else       if (list[0] == null) {
        Messages.showErrorDialog(project,failedText(virtualFile,revision),getTitle());
      }
 else {
        VirtualFile navigateToFile=targetPath[0] != null ? new VcsVirtualFile(targetPath[0].getPath(),null,VcsFileSystem.getInstance()) : virtualFile;
        showChangesListBrowser(list[0],navigateToFile,title);
      }
    }
  }
;
  CoreProgressManager progressManager=(CoreProgressManager)ProgressManager.getInstance();
  progressManager.runProcessWithProgressAsynchronously(task,new BackgroundableProcessIndicator(task),null,ModalityState.current());
}
