{
  final AsynchConsumer<List<CommittedChangeList>> appender=myDlg.getAppender();
  final BufferedListConsumer<CommittedChangeList> bufferedListConsumer=new BufferedListConsumer<CommittedChangeList>(10,appender);
  final Application application=ApplicationManager.getApplication();
  try {
    myProvider.loadCommittedChanges(mySettings,myLocation,0,new AsynchConsumer<CommittedChangeList>(){
      public void consume(      CommittedChangeList committedChangeList){
        myRevisionsReturned=true;
        bufferedListConsumer.consumeOne(committedChangeList);
        if (myCanceled) {
          indicator.cancel();
        }
      }
      public void finished(){
        bufferedListConsumer.flush();
        appender.finished();
        if (!myRevisionsReturned) {
          application.invokeLater(new Runnable(){
            public void run(){
              myDlg.close(-1);
            }
          }
,ModalityState.stateForComponent(myDlg.getWindow()));
        }
      }
    }
);
  }
 catch (  VcsException e) {
    myExceptions.add(e);
    application.invokeLater(new Runnable(){
      public void run(){
        myDlg.close(-1);
      }
    }
,ModalityState.stateForComponent(myDlg.getWindow()));
  }
}
