{
  final Content consoleContent=layoutUi.createContent(DebuggerContentInfo.CONSOLE_CONTENT,getComponent(),XDebuggerBundle.message("debugger.session.tab.console.content.name"),AllIcons.Debugger.Console,getPreferredFocusableComponent());
  consoleContent.setCloseable(false);
  layoutUi.addContent(consoleContent,1,PlaceInGrid.bottom,false);
  final Content logcatContent=layoutUi.createContent(ANDROID_LOGCAT_CONTENT_ID,myToolWindowView.getContentPanel(),"Logcat",AndroidIcons.Android,getPreferredFocusableComponent());
  logcatContent.setCloseable(false);
  logcatContent.setSearchComponent(myToolWindowView.createSearchComponent(myProject));
  layoutUi.addContent(logcatContent,2,PlaceInGrid.bottom,false);
  final String selectedTabProperty=ANDROID_DEBUG_SELECTED_TAB_PROPERTY + myConfigurationId;
  final String tabName=PropertiesComponent.getInstance().getValue(selectedTabProperty);
  Content selectedContent=logcatContent;
  if (tabName != null) {
    for (    Content content : layoutUi.getContents()) {
      if (tabName.equals(content.getDisplayName())) {
        selectedContent=content;
      }
    }
  }
  layoutUi.getContentManager().setSelectedContent(selectedContent);
  layoutUi.addListener(new ContentManagerAdapter(){
    public void selectionChanged(    final ContentManagerEvent event){
      final Content content=event.getContent();
      if (content.isSelected()) {
        PropertiesComponent.getInstance().setValue(selectedTabProperty,content.getDisplayName());
      }
      myToolWindowView.activate();
    }
  }
,myToolWindowView);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      myToolWindowView.activate();
    }
  }
);
}
