{
  super(project,stateManager);
  myTree=createTreeView();
  final PopupHandler popupHandler=new PopupHandler(){
    public void invokePopup(    Component comp,    int x,    int y){
      ActionPopupMenu popupMenu=createPopupMenu();
      if (popupMenu != null) {
        popupMenu.getComponent().show(comp,x,y);
      }
    }
  }
;
  myTree.addMouseListener(popupHandler);
  setFocusTraversalPolicy(new IdeFocusTraversalPolicy(){
    public Component getDefaultComponentImpl(    Container focusCycleRoot){
      return myTree;
    }
  }
);
  registerDisposable(new Disposable(){
    public void dispose(){
      myTree.removeMouseListener(popupHandler);
    }
  }
);
  final Shortcut[] shortcuts=KeymapManager.getInstance().getActiveKeymap().getShortcuts("ToggleBookmark");
  final CustomShortcutSet shortcutSet=shortcuts.length > 0 ? new CustomShortcutSet(shortcuts) : new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F11,0));
  overrideShortcut(myTree,DebuggerActions.MARK_OBJECT,shortcutSet);
}
