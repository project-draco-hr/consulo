{
  final TextRange ignoreRange;
  final GrImportStatement[] imports=myFile.getImportStatements();
  if (imports.length != 0) {
    final int start=imports[0].getTextRange().getStartOffset();
    final int end=imports[imports.length - 1].getTextRange().getEndOffset();
    ignoreRange=new TextRange(start,end);
  }
 else {
    ignoreRange=new TextRange(0,0);
  }
  boolean hasErrorsExceptUnresolvedImports=!DaemonCodeAnalyzerImpl.processHighlights(myDocument,myProject,HighlightSeverity.ERROR,0,myDocument.getTextLength(),new Processor<HighlightInfo>(){
    public boolean process(    HighlightInfo error){
      int infoStart=error.getActualStartOffset();
      int infoEnd=error.getActualEndOffset();
      return ignoreRange.containsRange(infoStart,infoEnd) && error.type.equals(HighlightInfoType.WRONG_REF);
    }
  }
);
  return hasErrorsExceptUnresolvedImports;
}
