{
  try {
    final List<VirtualFile> jars=new ArrayList<VirtualFile>();
    for (    String line : myStdOut.toString().split("\n")) {
      if (line.startsWith(GrapeRunner.URL_PREFIX)) {
        try {
          final URL url=new URL(line.substring(GrapeRunner.URL_PREFIX.length()));
          final File libFile=new File(url.toURI());
          if (libFile.exists() && libFile.getName().endsWith(".jar")) {
            ContainerUtil.addIfNotNull(jars,LocalFileSystem.getInstance().refreshAndFindFileByIoFile(libFile));
          }
        }
 catch (        MalformedURLException e) {
          LOG.error(e);
        }
catch (        URISyntaxException e) {
          LOG.error(e);
        }
      }
    }
    new WriteAction(){
      protected void run(      Result result) throws Throwable {
        jarCount=jars.size();
        messages=jarCount + " jar";
        if (jarCount != 1) {
          messages+="s";
        }
        if (jarCount == 0) {
          messages+="<br>" + myStdOut.toString().replaceAll("\n","<br>") + "<p>"+ myStdErr.toString().replaceAll("\n","<br>");
        }
        if (!jars.isEmpty()) {
          addGrapeDependencies(jars);
        }
      }
    }
.execute();
  }
  finally {
    super.notifyProcessTerminated(exitCode);
  }
}
