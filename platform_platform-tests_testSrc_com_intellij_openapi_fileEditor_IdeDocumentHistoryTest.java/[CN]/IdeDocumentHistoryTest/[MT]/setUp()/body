{
  super.setUp();
  myHistory=new IdeDocumentHistoryImpl(getProject(),EditorFactory.getInstance(),new EditorManager(),VirtualFileManager.getInstance(),CommandProcessor.getInstance(),new Mock.MyToolWindowManager()){
    @Override protected Pair<FileEditor,FileEditorProvider> getSelectedEditor(){
      return Pair.create((FileEditor)mySelectedEditor,myProvider);
    }
    @Override protected void executeCommand(    Runnable runnable,    String name,    Object groupId){
      myHistory.onCommandStarted();
      runnable.run();
      myHistory.onSelectionChanged();
      myHistory.onCommandFinished(groupId);
    }
  }
;
  mySelectedEditor=new Mock.MyFileEditor(){
    @Override @NotNull public FileEditorState getState(    @NotNull FileEditorStateLevel level){
      return myEditorState;
    }
    @Override public void setState(    @NotNull FileEditorState state){
      myEditorState=state;
    }
  }
;
  mySelectedFile=new Mock.MyVirtualFile();
  myEditorState=new MyState(false,"start");
  myProvider=new Mock.MyFileEditorProvider(){
    @Override @NotNull public String getEditorTypeId(){
      return "EditorType";
    }
  }
;
}
