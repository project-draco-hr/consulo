{
  Object[] edges=graph.getChildEdges(parent);
  for (  Object edge : edges) {
    mxCell e=(mxCell)edge;
    mxCell source=(mxCell)e.getSource();
    mxCell target=(mxCell)e.getTarget();
    String sourceName="";
    String targetName="";
    String sourcePort="";
    String targetPort="";
    sourceName=source != null ? source.getId() : "";
    targetName=target != null ? target.getId() : "";
    mxGraphView view=graph.getView();
    mxPoint sourceConstraint=null;
    mxPoint targetConstraint=null;
    if (view != null) {
      mxCellState edgeState=view.getState(edge);
      mxCellState sourceState=view.getState(source);
      mxConnectionConstraint scc=graph.getConnectionConstraint(edgeState,sourceState,true);
      if (scc != null) {
        sourceConstraint=scc.getPoint();
      }
      mxCellState targetState=view.getState(target);
      mxConnectionConstraint tcc=graph.getConnectionConstraint(edgeState,targetState,false);
      if (tcc != null) {
        targetConstraint=tcc.getPoint();
      }
    }
    targetPort=pointToPortString(targetConstraint);
    sourcePort=pointToPortString(sourceConstraint);
    mxGraphMlEdge Gmledge=new mxGraphMlEdge(sourceName,targetName,sourcePort,targetPort);
    String style=e.getStyle();
    if (style == null) {
      style="horizontal";
    }
    HashMap<String,Object> styleMap=mxGraphMlUtils.getStyleMap(style,"=");
    String endArrow=(String)styleMap.get(mxConstants.STYLE_ENDARROW);
    if ((endArrow != null && !endArrow.equals(mxConstants.NONE)) || endArrow == null) {
      Gmledge.setEdgeDirected("true");
    }
 else {
      Gmledge.setEdgeDirected("false");
    }
    addEdgeData(Gmledge,e);
    Gmledges.add(Gmledge);
  }
  return Gmledges;
}
