{
  try {
    indicator.checkCanceled();
    if (revision == null)     return DiffContentFactory.getInstance().createEmpty();
    FilePath filePath=revision.getFile();
    DiffContentFactoryEx contentFactory=DiffContentFactoryEx.getInstanceEx();
    if (revision instanceof CurrentContentRevision) {
      VirtualFile vFile=((CurrentContentRevision)revision).getVirtualFile();
      if (vFile == null)       throw new DiffRequestProducerException("Can't get current revision content");
      return contentFactory.create(project,vFile);
    }
    if (revision instanceof BinaryContentRevision) {
      byte[] content=((BinaryContentRevision)revision).getBinaryContent();
      if (content == null) {
        throw new DiffRequestProducerException("Can't get binary revision content");
      }
      return contentFactory.createFromBytes(project,content,filePath);
    }
    if (revision instanceof ByteBackedContentRevision) {
      byte[] revisionContent=((ByteBackedContentRevision)revision).getContentAsBytes();
      if (revisionContent == null)       throw new DiffRequestProducerException("Can't get revision content");
      return contentFactory.createFromBytes(project,revisionContent,filePath);
    }
 else {
      String revisionContent=revision.getContent();
      if (revisionContent == null)       throw new DiffRequestProducerException("Can't get revision content");
      return contentFactory.create(project,revisionContent,filePath);
    }
  }
 catch (  IOException e) {
    LOG.info(e);
    throw new DiffRequestProducerException(e);
  }
catch (  VcsException e) {
    LOG.info(e);
    throw new DiffRequestProducerException(e);
  }
}
