{
  DiffRequestProducerException wrapperException=null;
  DiffRequestProducerException requestException=null;
  DiffViewerWrapper wrapper=null;
  try {
    for (    ChangeDiffViewerWrapperProvider provider : ChangeDiffViewerWrapperProvider.EP_NAME.getExtensions()) {
      if (provider.canCreate(myProject,myChange)) {
        wrapper=provider.process(this,context,indicator);
        break;
      }
    }
  }
 catch (  DiffRequestProducerException e) {
    wrapperException=e;
  }
  DiffRequest request=null;
  try {
    for (    ChangeDiffRequestProvider provider : ChangeDiffRequestProvider.EP_NAME.getExtensions()) {
      if (provider.canCreate(myProject,myChange)) {
        request=provider.process(this,context,indicator);
        break;
      }
    }
    if (request == null)     request=createRequest(myProject,myChange,context,indicator);
  }
 catch (  DiffRequestProducerException e) {
    requestException=e;
  }
  if (requestException != null && wrapperException != null) {
    String message=requestException.getMessage() + "\n\n" + wrapperException.getMessage();
    throw new DiffRequestProducerException(message);
  }
  if (requestException != null) {
    request=new ErrorDiffRequest(getRequestTitle(myChange),requestException);
    LOG.info("Request: " + requestException.getMessage());
  }
  if (wrapperException != null) {
    LOG.info("Wrapper: " + wrapperException.getMessage());
  }
  request.putUserData(CHANGE_KEY,myChange);
  request.putUserData(DiffViewerWrapper.KEY,wrapper);
  for (  Map.Entry<Key,Object> entry : myChangeContext.entrySet()) {
    request.putUserData(entry.getKey(),entry.getValue());
  }
  DataProvider dataProvider=request.getUserData(DiffUserDataKeys.DATA_PROVIDER);
  if (dataProvider == null) {
    dataProvider=new GenericDataProvider();
    request.putUserData(DiffUserDataKeys.DATA_PROVIDER,dataProvider);
  }
  if (dataProvider instanceof GenericDataProvider)   ((GenericDataProvider)dataProvider).putData(VcsDataKeys.CURRENT_CHANGE,myChange);
  return request;
}
