{
{
    final ElementFilter position=new LeftNeighbour(new AndFilter(new TextFilter(")"),new ParentElementFilter(new ClassFilter(PsiParameterList.class))));
    CompletionVariant variant=new CompletionVariant(PsiMethod.class,position);
    variant.includeScopeClass(PsiClass.class);
    variant.addCompletion(PsiKeyword.THROWS);
    registerVariant(variant);
    variant=new CompletionVariant(PsiAnnotationMethod.class,position);
    variant.addCompletion(PsiKeyword.DEFAULT);
    registerVariant(variant);
  }
{
    final ElementFilter position=INSTANCEOF_PLACE;
    final CompletionVariant variant=new CompletionVariant(position);
    variant.includeScopeClass(PsiExpression.class,true);
    variant.includeScopeClass(PsiMethod.class);
    variant.addCompletion(PsiKeyword.INSTANCEOF);
    registerVariant(variant);
  }
{
    final CompletionVariant variant=new CompletionVariant(PsiMethod.class,new LeftNeighbour(new TextFilter(PsiKeyword.RETURN)));
    variant.addCompletion(PsiKeyword.TRUE,TailType.NONE);
    variant.addCompletion(PsiKeyword.FALSE,TailType.NONE);
    registerVariant(variant);
  }
{
    final ElementFilter position=AFTER_TRY_BLOCK;
    final CompletionVariant variant=new CompletionVariant(position);
    variant.includeScopeClass(PsiCodeBlock.class,true);
    variant.addCompletion(PsiKeyword.CATCH,TailTypes.CATCH_LPARENTH);
    variant.addCompletion(PsiKeyword.FINALLY,TailTypes.FINALLY_LBRACE);
    registerVariant(variant);
  }
{
    final ElementFilter position=new LeftNeighbour(new AndFilter(new TextFilter("}"),new ParentElementFilter(new AndFilter(new LeftNeighbour(new NotFilter(new TextFilter(PsiKeyword.TRY))),new OrFilter(new ParentElementFilter(new ClassFilter(PsiTryStatement.class)),new ParentElementFilter(new ClassFilter(PsiCatchSection.class)))))));
    final CompletionVariant variant=new CompletionVariant(position);
    variant.includeScopeClass(PsiCodeBlock.class,false);
    variant.addCompletion(PsiKeyword.CATCH,TailTypes.CATCH_LPARENTH);
    variant.addCompletion(PsiKeyword.FINALLY,TailTypes.FINALLY_LBRACE);
    registerVariant(variant);
  }
{
    final ElementFilter position=new LeftNeighbour(new OrFilter(new AndFilter(new TextFilter("}"),new ParentElementFilter(new ClassFilter(PsiIfStatement.class),3)),new AndFilter(new TextFilter(";"),new ParentElementFilter(new ClassFilter(PsiIfStatement.class),2))));
    final CompletionVariant variant=new CompletionVariant(PsiMethod.class,position);
    variant.addCompletion(PsiKeyword.ELSE);
    registerVariant(variant);
  }
}
