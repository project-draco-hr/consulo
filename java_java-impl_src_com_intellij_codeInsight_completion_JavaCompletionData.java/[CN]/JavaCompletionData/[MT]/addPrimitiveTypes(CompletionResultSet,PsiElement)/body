{
  boolean inCast=psiElement().afterLeaf(psiElement().withText("(").withParent(psiElement(PsiParenthesizedExpression.class,PsiTypeCastExpression.class))).accepts(position);
  boolean declaration=DECLARATION_START.accepts(position);
  if (START_FOR.accepts(position) || INSIDE_PARAMETER_LIST.accepts(position) && !AFTER_DOT.accepts(position) || VARIABLE_AFTER_FINAL.accepts(position) || inCast || declaration || isStatementPosition(position)) {
    for (    String primitiveType : PRIMITIVE_TYPES) {
      LookupElement keyword=createKeyword(position,primitiveType);
      result.addElement(inCast ? keyword : new OverrideableSpace(keyword,TailType.HUMBLE_SPACE));
    }
  }
  if (declaration) {
    result.addElement(new OverrideableSpace(createKeyword(position,PsiKeyword.VOID),TailType.HUMBLE_SPACE));
  }
}
