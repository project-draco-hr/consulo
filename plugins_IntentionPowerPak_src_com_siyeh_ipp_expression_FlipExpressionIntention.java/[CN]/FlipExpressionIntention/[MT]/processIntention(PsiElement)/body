{
  final PsiBinaryExpression expression=(PsiBinaryExpression)element;
  final PsiExpression lhs=expression.getLOperand();
  final PsiExpression rhs=expression.getROperand();
  final PsiJavaToken sign=expression.getOperationSign();
  if (rhs == null) {
    return;
  }
  final String signText=sign.getText();
  final String lhsText=lhs.getText();
  final String rhsText=rhs.getText();
  final StringBuilder newExpression=new StringBuilder(rhsText);
  newExpression.append(signText);
  if (lhsText.startsWith(signText)) {
    newExpression.append(' ');
  }
  newExpression.append(lhsText);
  replaceExpression(newExpression.toString(),expression);
}
