{
  myUrlsList=new JBList(new DefaultListModel());
  myUrlsList.getEmptyText().setText(IdeBundle.message("update.no.update.hosts"));
  myUrlsList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myPanel=ToolbarDecorator.createDecorator(myUrlsList).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      final HostMessages.InputHostDialog dlg=new HostMessages.InputHostDialog(myPanel,IdeBundle.message("update.plugin.host.url.message"),IdeBundle.message("update.add.new.plugin.host.title"),Messages.getQuestionIcon(),"",new NonEmptyInputValidator());
      dlg.show();
      String input=dlg.getInputString();
      if (input != null) {
        ((DefaultListModel)myUrlsList.getModel()).addElement(correctRepositoryRule(input));
      }
    }
  }
).setEditAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      final HostMessages.InputHostDialog dlg=new HostMessages.InputHostDialog(myPanel,IdeBundle.message("update.plugin.host.url.message"),IdeBundle.message("update.edit.plugin.host.title"),Messages.getQuestionIcon(),(String)myUrlsList.getSelectedValue(),new InputValidator(){
        @Override public boolean checkInput(        final String inputString){
          return inputString.length() > 0;
        }
        @Override public boolean canClose(        final String inputString){
          return checkInput(inputString);
        }
      }
);
      dlg.show();
      final String input=dlg.getInputString();
      if (input != null) {
        ((DefaultListModel)myUrlsList.getModel()).set(myUrlsList.getSelectedIndex(),input);
      }
    }
  }
).disableUpDownActions().createPanel();
}
