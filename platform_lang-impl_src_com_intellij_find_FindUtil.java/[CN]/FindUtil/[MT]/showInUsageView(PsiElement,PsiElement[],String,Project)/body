{
  if (targets.length == 0)   return null;
  final UsageViewPresentation presentation=new UsageViewPresentation();
  presentation.setCodeUsagesString(title);
  presentation.setTabName(title);
  presentation.setTabText(title);
  final UsageTarget[] usageTargets=sourceElement == null ? UsageTarget.EMPTY_ARRAY : new UsageTarget[]{new PsiElement2UsageTargetAdapter(sourceElement)};
  final PsiElement[] primary=sourceElement == null ? PsiElement.EMPTY_ARRAY : new PsiElement[]{sourceElement};
  final Usage[] usages={UsageInfoToUsageConverter.convert(primary,new UsageInfo(targets[0]))};
  final UsageView view=UsageViewManager.getInstance(project).showUsages(usageTargets,usages,presentation);
  ProgressManager.getInstance().run(new Task.Backgroundable(project,"Updating Usage View ..."){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      for (int i=1; i < targets.length; i++) {
        if (((UsageViewImpl)view).isDisposed())         break;
        final PsiElement target=targets[i];
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          @Override public void run(){
            final Usage usage=UsageInfoToUsageConverter.convert(primary,new UsageInfo(target));
            view.appendUsage(usage);
          }
        }
);
      }
    }
  }
);
  return view;
}
