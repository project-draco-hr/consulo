{
  if (type == null) {
    return;
  }
  final PsiType baseType=type.getDeepComponentType();
  if (ClassUtils.isPrimitive(type)) {
    return;
  }
  final PsiClass containingClass=m_method.getContainingClass();
  if (containingClass == null) {
    return;
  }
  final String qualifiedName=containingClass.getQualifiedName();
  if (qualifiedName == null) {
    return;
  }
  if (baseType.equalsToText(qualifiedName)) {
    return;
  }
  @NonNls final String baseTypeName=baseType.getCanonicalText();
  if (!m_includeJavaClasses && (baseTypeName.startsWith("java.") || baseTypeName.startsWith("javax."))) {
    return;
  }
  if (baseTypeName.startsWith(qualifiedName + '.')) {
    return;
  }
  if (!m_includeLibraryClasses) {
    final PsiManager manager=m_method.getManager();
    final Project project=manager.getProject();
    final GlobalSearchScope searchScope=GlobalSearchScope.allScope(project);
    final PsiClass aClass=manager.findClass(baseTypeName,searchScope);
    if (aClass == null) {
      return;
    }
    if (LibraryUtil.classIsInLibrary(aClass)) {
      return;
    }
  }
  m_dependencies.add(baseTypeName);
}
