{
  if (backpointerRequired) {
    return;
  }
  super.visitReferenceExpression(expression);
  final PsiExpression qualifier=expression.getQualifierExpression();
  final PsiElement referent=expression.resolve();
  if (!(referent instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)referent;
  if (fields.contains(field) || innerClasses.contains(field.getContainingClass())) {
    return;
  }
  if (field.hasModifierProperty(PsiModifier.STATIC)) {
    return;
  }
  if (qualifier == null || qualifier instanceof PsiThisExpression || qualifier instanceof PsiSuperExpression) {
    backpointerRequired=true;
  }
}
