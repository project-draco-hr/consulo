{
  final Project project=aClass.getProject();
  final PsiManager manager=aClass.getManager();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
  final PsiClass serializable=JavaPsiFacade.getInstance(manager.getProject()).findClass("java.io.Serializable",scope);
  if (!InheritanceUtil.isCorrectDescendant(aClass,serializable,true)) {
    return false;
  }
  final PsiMethod[] methods=aClass.findMethodsByName("writeObject",false);
  for (  PsiMethod method : methods) {
    final PsiParameterList parameterList=method.getParameterList();
    final PsiParameter[] parameters=parameterList.getParameters();
    if (parameters.length == 1) {
      final PsiType type=parameters[0].getType();
      final String text=type.getCanonicalText();
      if ("java.io.DataOutputStream".equals(text)) {
        return false;
      }
    }
  }
  return true;
}
