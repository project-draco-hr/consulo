{
  final PsiManager psiManager=method.getManager();
  final Project project=psiManager.getProject();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(project);
  final Iterable<PsiReference> calls=SearchUtils.findAllReferences(method,scope);
  for (  PsiReference reference : calls) {
    final PsiElement referenceElement=reference.getElement();
    final PsiElement parent=referenceElement.getParent();
    if (parent instanceof PsiMethodCallExpression) {
      final PsiMethodCallExpression call=(PsiMethodCallExpression)parent;
      if (!isInMovedElement(call)) {
        final String fullyQualifiedName=StringUtil.getQualifiedName(newPackageName,newClassName);
        usages.add(new RetargetStaticMethodCall(call,fullyQualifiedName));
      }
    }
  }
  usages.add(new RemoveMethod(method));
}
