{
  final BackpointerUsageVisitor visitor=new BackpointerUsageVisitor();
  for (  PsiMethod method : methods) {
    method.accept(visitor);
    if (visitor.isBackpointerRequired()) {
      return true;
    }
  }
  for (  PsiField field : fields) {
    field.accept(visitor);
    if (visitor.isBackpointerRequired()) {
      return true;
    }
  }
  for (  PsiClass innerClass : innerClasses) {
    innerClass.accept(visitor);
    if (visitor.isBackpointerRequired()) {
      return true;
    }
  }
  return false;
}
