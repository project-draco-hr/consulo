{
  final XmlRpcClient client=getRpcClient();
  String search=myDefaultSearch + "&max=" + max;
  if (query != null) {
    search=search.replace("{query}",query);
  }
  search=search.replace("{username}",getUsername());
  XmlRpcRequest request=new XmlRpcRequest("ticket.query",new Vector<Object>(Arrays.asList(search)));
  Vector<Object> result=(Vector<Object>)client.execute(request,transport);
  if (result == null)   throw new Exception("Cannot connect to " + getUrl());
  List<Task> tasks=ContainerUtil.mapNotNull(result,new NullableFunction<Object,Task>(){
    @Override public Task fun(    Object o){
      try {
        return getTask((Integer)o,client,transport);
      }
 catch (      Exception e) {
        return null;
      }
    }
  }
);
  return tasks.toArray(new Task[tasks.size()]);
}
