{
  final XmlRpcClient client=getRpcClient();
  Vector<Object> result=null;
  String search=myDefaultSearch + "&max=" + max;
  if (myMaxSupported == null) {
    try {
      myMaxSupported=true;
      result=runQuery(query,transport,client,search);
    }
 catch (    XmlRpcException e) {
      if (e.getMessage().contains("t.max")) {
        myMaxSupported=false;
      }
 else       throw e;
    }
  }
  if (!myMaxSupported) {
    search=myDefaultSearch;
  }
  if (result == null) {
    result=runQuery(query,transport,client,search);
  }
  if (result == null)   throw new Exception("Cannot connect to " + getUrl());
  ArrayList<Task> tasks=new ArrayList<Task>(max);
  int min=Math.min(max,result.size());
  for (int i=0; i < min; i++) {
    Task task=getTask((Integer)result.get(i),client,transport);
    ContainerUtil.addIfNotNull(tasks,task);
  }
  return tasks;
}
