{
  myModel.addSorter(new Sorter(){
    @Override public Comparator getComparator(){
      return new Comparator(){
        @Override public int compare(        Object o1,        Object o2){
          if (o1 instanceof Group && !(o2 instanceof Group))           return -1;
          if (!(o1 instanceof Group) && o2 instanceof Group)           return 1;
          return 0;
        }
      }
;
    }
    @Override public boolean isVisible(){
      return true;
    }
    @Override @NotNull public ActionPresentation getPresentation(){
      throw new RuntimeException();
    }
    @Override @NotNull public String getName(){
      throw new RuntimeException();
    }
  }
);
  myModel.addSorter(new Sorter(){
    @Override public Comparator getComparator(){
      return new Comparator(){
        @Override public int compare(        Object o1,        Object o2){
          return o1.toString().compareTo(o2.toString());
        }
      }
;
    }
    @Override public boolean isVisible(){
      return true;
    }
    @Override @NotNull public ActionPresentation getPresentation(){
      throw new RuntimeException();
    }
    @Override @NotNull public String getName(){
      throw new RuntimeException();
    }
  }
);
  assertStructureEqual("root\n" + ".Group:a\n" + "..Group:d\n"+ "...ade\n"+ "....Group:a\n"+ ".....Group:d\n"+ "......aed\n"+ "..abc\n"+ "...Group:a\n"+ "....Group:d\n"+ ".....abcde\n"+ ".Group:b\n"+ "..Group:d\n"+ "...bcd\n"+ "....Group:b\n"+ ".....bhgyt\n"+ "..Group:f\n"+ "...bft\n"+ "....ttt\n"+ ".Group:d\n"+ "..eed\n"+ "...zzz\n"+ ".xxx\n"+ ".xxx\n"+ "..Group:a\n"+ "...aaa\n"+ "....Group:b\n"+ ".....bbb\n",null);
}
