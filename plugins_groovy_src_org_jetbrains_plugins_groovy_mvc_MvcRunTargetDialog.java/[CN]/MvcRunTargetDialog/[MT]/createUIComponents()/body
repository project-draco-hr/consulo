{
  myTargetField=new ComboBox(MvcRunTargetHistoryService.getInstance().getHistory(),-1);
  myTargetField.setLightWeightPopupEnabled(false);
  EditorComboBoxEditor editor=new StringComboboxEditor(myModule.getProject(),PlainTextFileType.INSTANCE,myTargetField);
  myTargetField.setRenderer(new EditorComboBoxRenderer(editor));
  myTargetField.setEditable(true);
  myTargetField.setEditor(editor);
  EditorTextField editorTextField=(EditorTextField)editor.getEditorComponent();
  myFakePanel=new JPanel(new BorderLayout());
  myFakePanel.add(myTargetField,BorderLayout.CENTER);
  TextFieldCompletionProvider vmOptionCompletionProvider=new TextFieldCompletionProviderDumbAware(){
    @NotNull @Override protected String getPrefix(    @NotNull String currentTextPrefix){
      return MvcRunTargetDialog.getPrefix(currentTextPrefix);
    }
    @Override protected void addCompletionVariants(    @NotNull String text,    int offset,    @NotNull String prefix,    @NotNull CompletionResultSet result){
      if (prefix.endsWith("-D")) {
        result.addAllElements(MvcTargetDialogCompletionUtils.getSystemPropertiesVariants());
      }
    }
  }
;
  myVmOptionsField=vmOptionCompletionProvider.createEditor(myModule.getProject());
  new TextFieldCompletionProviderDumbAware(){
    @NotNull @Override protected String getPrefix(    @NotNull String currentTextPrefix){
      return MvcRunTargetDialog.getPrefix(currentTextPrefix);
    }
    @Override protected void addCompletionVariants(    @NotNull String text,    int offset,    @NotNull String prefix,    @NotNull CompletionResultSet result){
      for (      LookupElement variant : MvcTargetDialogCompletionUtils.collectVariants(myModule,text,offset,prefix)) {
        result.addElement(variant);
      }
    }
  }
.apply(editorTextField);
  editorTextField.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override public void documentChanged(    DocumentEvent e){
      setOKActionEnabled(!StringUtil.isEmptyOrSpaces(e.getDocument().getText()));
    }
  }
);
  setOKActionEnabled(false);
}
