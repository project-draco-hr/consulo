{
  final AnAction pinAction=new AnAction("Open Find Usages Toolwindow","Show all usages in a separate toolwindow",AllIcons.General.AutohideOff){
{
      AnAction action=ActionManager.getInstance().getAction(IdeActions.ACTION_FIND_USAGES);
      setShortcutSet(action.getShortcutSet());
    }
    @Override public void actionPerformed(    @NotNull AnActionEvent e){
      hideHints();
      cancel(popup[0]);
      FindUsagesManager findUsagesManager=((FindManagerImpl)FindManager.getInstance(usageView.getProject())).getFindUsagesManager();
      findUsagesManager.findUsages(handler.getPrimaryElements(),handler.getSecondaryElements(),handler,options,FindSettings.getInstance().isSkipResultsWithOneUsage());
    }
  }
;
  pinGroup.add(pinAction);
  final ActionToolbar pinToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.USAGE_VIEW_TOOLBAR,pinGroup,true);
  pinToolbar.setReservePlaceAutoPopupIcon(false);
  final JComponent pinToolBar=pinToolbar.getComponent();
  pinToolBar.setBorder(null);
  pinToolBar.setOpaque(false);
  return new ActiveComponent.Adapter(){
    @Override public JComponent getComponent(){
      return pinToolBar;
    }
  }
;
}
