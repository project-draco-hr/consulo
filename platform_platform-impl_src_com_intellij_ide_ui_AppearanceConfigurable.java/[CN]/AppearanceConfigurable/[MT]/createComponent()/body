{
  UISettings settings=UISettings.getInstance();
  initComponent();
  DefaultComboBoxModel aModel=new DefaultComboBoxModel(UIUtil.getValidFontNames(false));
  myComponent.myFontCombo.setModel(aModel);
  myComponent.myFontSizeCombo.setModel(new DefaultComboBoxModel(UIUtil.getStandardFontSizes()));
  myComponent.myPresentationModeFontSize.setModel(new DefaultComboBoxModel(UIUtil.getStandardFontSizes()));
  myComponent.myFontSizeCombo.setEditable(true);
  myComponent.myPresentationModeFontSize.setEditable(true);
  myComponent.myLafComboBox.setModel(new DefaultComboBoxModel(LafManager.getInstance().getInstalledLookAndFeels()));
  myComponent.myLafComboBox.setRenderer(new LafComboBoxRenderer());
  myComponent.myAntialiasingInIDE.setModel(new DefaultComboBoxModel(AntialiasingType.values()));
  myComponent.myAntialiasingInEditor.setModel(new DefaultComboBoxModel(AntialiasingType.values()));
  myComponent.myAntialiasingInIDE.setSelectedItem(settings.IDE_AA_TYPE);
  myComponent.myAntialiasingInEditor.setSelectedItem(settings.EDITOR_AA_TYPE);
  myComponent.myAntialiasingInIDE.setRenderer(new AAListCellRenderer(false));
  myComponent.myAntialiasingInEditor.setRenderer(new AAListCellRenderer(true));
  Dictionary<Integer,JLabel> delayDictionary=new Hashtable<Integer,JLabel>();
  delayDictionary.put(new Integer(0),new JLabel("0"));
  delayDictionary.put(new Integer(1200),new JLabel("1200"));
  myComponent.myInitialTooltipDelaySlider.setLabelTable(delayDictionary);
  UIUtil.setSliderIsFilled(myComponent.myInitialTooltipDelaySlider,Boolean.TRUE);
  myComponent.myInitialTooltipDelaySlider.setMinimum(0);
  myComponent.myInitialTooltipDelaySlider.setMaximum(1200);
  myComponent.myInitialTooltipDelaySlider.setPaintLabels(true);
  myComponent.myInitialTooltipDelaySlider.setPaintTicks(true);
  myComponent.myInitialTooltipDelaySlider.setPaintTrack(true);
  myComponent.myInitialTooltipDelaySlider.setMajorTickSpacing(1200);
  myComponent.myInitialTooltipDelaySlider.setMinorTickSpacing(100);
  myComponent.myEnableAlphaModeCheckBox.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      boolean state=myComponent.myEnableAlphaModeCheckBox.isSelected();
      myComponent.myAlphaModeDelayTextField.setEnabled(state);
      myComponent.myAlphaModeRatioSlider.setEnabled(state);
    }
  }
);
  myComponent.myAlphaModeRatioSlider.setSize(100,50);
  @SuppressWarnings({"UseOfObsoleteCollectionType"}) Dictionary<Integer,JLabel> dictionary=new Hashtable<Integer,JLabel>();
  dictionary.put(new Integer(0),new JLabel("0%"));
  dictionary.put(new Integer(50),new JLabel("50%"));
  dictionary.put(new Integer(100),new JLabel("100%"));
  myComponent.myAlphaModeRatioSlider.setLabelTable(dictionary);
  UIUtil.setSliderIsFilled(myComponent.myAlphaModeRatioSlider,Boolean.TRUE);
  myComponent.myAlphaModeRatioSlider.setPaintLabels(true);
  myComponent.myAlphaModeRatioSlider.setPaintTicks(true);
  myComponent.myAlphaModeRatioSlider.setPaintTrack(true);
  myComponent.myAlphaModeRatioSlider.setMajorTickSpacing(50);
  myComponent.myAlphaModeRatioSlider.setMinorTickSpacing(10);
  myComponent.myAlphaModeRatioSlider.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      myComponent.myAlphaModeRatioSlider.setToolTipText(myComponent.myAlphaModeRatioSlider.getValue() + "%");
    }
  }
);
  myComponent.myTransparencyPanel.setVisible(WindowManagerEx.getInstanceEx().isAlphaModeSupported());
  return myComponent.myPanel;
}
