{
  initComponent();
  UISettings settings=UISettings.getInstance();
  myComponent.myFontCombo.setSelectedItem(settings.FONT_FACE);
  myComponent.myAntialiasingInIDE.setSelectedItem(settings.IDE_AA_TYPE);
  myComponent.myAntialiasingInEditor.setSelectedItem(settings.EDITOR_AA_TYPE);
  myComponent.myFontSizeCombo.setSelectedItem(Integer.toString(settings.FONT_SIZE));
  myComponent.myPresentationModeFontSize.setSelectedItem(Integer.toString(settings.PRESENTATION_MODE_FONT_SIZE));
  myComponent.myAnimateWindowsCheckBox.setSelected(settings.ANIMATE_WINDOWS);
  myComponent.myWindowShortcutsCheckBox.setSelected(settings.SHOW_TOOL_WINDOW_NUMBERS);
  myComponent.myShowToolStripesCheckBox.setSelected(!settings.HIDE_TOOL_STRIPES);
  myComponent.myCbDisplayIconsInMenu.setSelected(settings.SHOW_ICONS_IN_MENUS);
  myComponent.myShowMemoryIndicatorCheckBox.setSelected(settings.SHOW_MEMORY_INDICATOR);
  myComponent.myAllowMergeButtons.setSelected(settings.ALLOW_MERGE_BUTTONS);
  myComponent.myCycleScrollingCheckBox.setSelected(settings.CYCLE_SCROLLING);
  myComponent.myHideIconsInQuickNavigation.setSelected(settings.SHOW_ICONS_IN_QUICK_NAVIGATION);
  myComponent.myMoveMouseOnDefaultButtonCheckBox.setSelected(settings.MOVE_MOUSE_ON_DEFAULT_BUTTON);
  myComponent.myHideNavigationPopupsCheckBox.setSelected(settings.HIDE_NAVIGATION_ON_FOCUS_LOSS);
  myComponent.myAltDNDCheckBox.setSelected(settings.DND_WITH_PRESSED_ALT_ONLY);
  myComponent.myLafComboBox.setSelectedItem(LafManager.getInstance().getCurrentLookAndFeel());
  myComponent.myOverrideLAFFonts.setSelected(settings.OVERRIDE_NONIDEA_LAF_FONTS);
  myComponent.myDisableMnemonics.setSelected(settings.DISABLE_MNEMONICS);
  myComponent.myUseSmallLabelsOnTabs.setSelected(settings.USE_SMALL_LABELS_ON_TABS);
  myComponent.myWidescreenLayoutCheckBox.setSelected(settings.WIDESCREEN_SUPPORT);
  myComponent.myLeftLayoutCheckBox.setSelected(settings.LEFT_HORIZONTAL_SPLIT);
  myComponent.myRightLayoutCheckBox.setSelected(settings.RIGHT_HORIZONTAL_SPLIT);
  myComponent.myEditorTooltipCheckBox.setSelected(settings.SHOW_EDITOR_TOOLTIP);
  myComponent.myDisableMnemonicInControlsCheckBox.setSelected(settings.DISABLE_MNEMONICS_IN_CONTROLS);
  boolean alphaModeEnabled=WindowManagerEx.getInstanceEx().isAlphaModeSupported();
  if (alphaModeEnabled) {
    myComponent.myEnableAlphaModeCheckBox.setSelected(settings.ENABLE_ALPHA_MODE);
  }
 else {
    myComponent.myEnableAlphaModeCheckBox.setSelected(false);
  }
  myComponent.myEnableAlphaModeCheckBox.setEnabled(alphaModeEnabled);
  myComponent.myAlphaModeDelayTextField.setText(Integer.toString(settings.ALPHA_MODE_DELAY));
  myComponent.myAlphaModeDelayTextField.setEnabled(alphaModeEnabled && settings.ENABLE_ALPHA_MODE);
  int ratio=(int)(settings.ALPHA_MODE_RATIO * 100f);
  myComponent.myAlphaModeRatioSlider.setValue(ratio);
  myComponent.myAlphaModeRatioSlider.setToolTipText(ratio + "%");
  myComponent.myAlphaModeRatioSlider.setEnabled(alphaModeEnabled && settings.ENABLE_ALPHA_MODE);
  myComponent.myInitialTooltipDelaySlider.setValue(Registry.intValue("ide.tooltip.initialDelay"));
  myComponent.updateCombo();
}
