{
  final PsiManager manager=myMethod.getManager();
  final String targetClassName=dialog.getTargetClassName();
  final PsiClass targetClass=manager.findClass(targetClassName,GlobalSearchScope.allScope(myProject));
  if (targetClass == null) {
    String message="Cannot perform the refactoring.\n" + "Class " + targetClassName + " not found.";
    RefactoringMessageUtil.showErrorMessage(REFACTORING_NAME,message,null,myProject);
    return;
  }
  if (!targetClass.isWritable()) {
    RefactoringMessageUtil.showReadOnlyElementRefactoringMessage(myProject,targetClass);
    return;
  }
  new ReplaceConstructorWithFactoryProcessor(myProject,myMethod,targetClass,dialog.getName(),dialog.isPreviewUsages(),new Runnable(){
    public void run(){
      dialog.close(DialogWrapper.CANCEL_EXIT_CODE);
    }
  }
).run(null);
}
