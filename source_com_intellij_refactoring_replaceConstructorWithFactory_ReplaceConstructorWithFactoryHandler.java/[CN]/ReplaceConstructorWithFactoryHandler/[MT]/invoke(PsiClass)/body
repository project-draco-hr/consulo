{
  String qualifiedName=aClass.getQualifiedName();
  if (qualifiedName == null) {
    showJspOrLocalClassMessage();
    return;
  }
  if (!checkAbstractClassOrInterfaceMessage(aClass))   return;
  final PsiMethod[] constructors=aClass.getConstructors();
  if (constructors.length > 0) {
    String message=RefactoringBundle.message("class.does.not.have.implicit.default.consructor",aClass.getQualifiedName());
    CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME,message,null,myProject);
    return;
  }
  final int answer=Messages.showYesNoCancelDialog(myProject,RefactoringBundle.message("would.you.like.to.replace.default.constructor.of.0.with.factory.method",aClass.getQualifiedName()),REFACTORING_NAME,Messages.getQuestionIcon());
  if (answer != 0)   return;
  if (!aClass.isWritable()) {
    if (!RefactoringMessageUtil.checkReadOnlyStatus(myProject,aClass))     return;
  }
  new ReplaceConstructorWithFactoryDialog(myProject,null,aClass).show();
}
