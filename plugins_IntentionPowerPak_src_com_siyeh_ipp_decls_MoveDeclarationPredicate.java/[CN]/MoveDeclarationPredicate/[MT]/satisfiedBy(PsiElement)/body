{
  if (!(element instanceof PsiLocalVariable)) {
    return false;
  }
  final PsiLocalVariable variable=(PsiLocalVariable)element;
  final PsiExpression initializer=variable.getInitializer();
  if (initializer != null) {
    return false;
  }
  final PsiCodeBlock variableBlock=PsiTreeUtil.getParentOfType(variable,PsiCodeBlock.class);
  if (variableBlock == null) {
    return false;
  }
  final PsiManager manager=variable.getManager();
  final PsiSearchHelper searchHelper=manager.getSearchHelper();
  final PsiReference[] references=searchHelper.findReferences(variable,variable.getUseScope(),false);
  if (references.length == 0) {
    return false;
  }
  final PsiElement tightestBlock=getTightestBlock(references);
  if (tightestBlock == null) {
    return false;
  }
  if (!variableBlock.equals(tightestBlock)) {
    return true;
  }
  final PsiReference firstReference=references[0];
  final PsiElement referenceElement=firstReference.getElement();
  if (referenceElement == null) {
    return false;
  }
  final PsiElement child=getChildWhichContainsElement(variableBlock,referenceElement);
  if (child == null) {
    return false;
  }
  PsiElement prevSibling=child.getPrevSibling();
  if (prevSibling instanceof PsiWhiteSpace) {
    prevSibling=prevSibling.getPrevSibling();
  }
  if (prevSibling == null) {
    return false;
  }
  return !prevSibling.equals(variable.getParent());
}
