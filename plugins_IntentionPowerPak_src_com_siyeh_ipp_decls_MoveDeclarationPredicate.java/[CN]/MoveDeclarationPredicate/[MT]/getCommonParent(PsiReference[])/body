{
  PsiElement commonParent=null;
  for (  PsiReference reference : references) {
    final PsiElement referenceElement=reference.getElement();
    final PsiElement parent=getParentOfTypes(referenceElement,TYPES);
    if (commonParent != null && !commonParent.equals(parent)) {
      commonParent=PsiTreeUtil.findCommonParent(commonParent,parent);
      commonParent=PsiTreeUtil.getParentOfType(commonParent,PsiCodeBlock.class,false);
    }
 else {
      commonParent=parent;
    }
  }
  if (commonParent instanceof PsiForStatement) {
    final PsiForStatement forStatement=(PsiForStatement)commonParent;
    final PsiElement referenceElement=references[0].getElement();
    if (PsiTreeUtil.isAncestor(forStatement.getInitialization(),referenceElement,true)) {
      commonParent=forStatement.getInitialization();
    }
 else {
      commonParent=PsiTreeUtil.getParentOfType(commonParent,PsiCodeBlock.class);
    }
  }
  if (commonParent != null) {
    final PsiElement parent=commonParent.getParent();
    if (parent instanceof PsiSwitchStatement && references.length > 1) {
      commonParent=PsiTreeUtil.getParentOfType(parent,PsiCodeBlock.class,false);
    }
  }
  return commonParent;
}
