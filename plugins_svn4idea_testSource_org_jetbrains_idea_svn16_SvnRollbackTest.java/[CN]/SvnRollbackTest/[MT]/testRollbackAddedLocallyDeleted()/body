{
  final SubTree tree=new SubTree(myWorkingCopyDir);
  checkin();
  VirtualFile f1=createFileInCommand(tree.mySourceDir,"f1","4");
  VirtualFile dir=createDirInCommand(tree.mySourceDir,"dirrr");
  VirtualFile f2=createFileInCommand(dir,"f2","411");
  myDirtyScopeManager.markEverythingDirty();
  myChangeListManager.ensureUpToDate(false);
  assertCreatedChange(f1);
  assertCreatedChange(dir);
  assertCreatedChange(f2);
  disableSilentOperation(VcsConfiguration.StandardConfirmation.REMOVE);
  final File wasFile1=new File(f1.getPath());
  final File wasFile2=new File(dir.getPath());
  final File wasFile3=new File(f2.getPath());
  deleteFileInCommand(myProject,f1);
  deleteFileInCommand(myProject,dir);
  myDirtyScopeManager.markEverythingDirty();
  myChangeListManager.ensureUpToDate(false);
  final List<LocallyDeletedChange> deletedFiles=((ChangeListManagerImpl)myChangeListManager).getDeletedFiles();
  Assert.assertNotNull(deletedFiles);
  Assert.assertTrue(deletedFiles.size() == 3);
  final Set<File> files=new HashSet<File>();
  files.add(wasFile1);
  files.add(wasFile2);
  files.add(wasFile3);
  Assert.assertTrue(files.contains(deletedFiles.get(0).getPath().getIOFile()));
  Assert.assertTrue(files.contains(deletedFiles.get(1).getPath().getIOFile()));
  Assert.assertTrue(files.contains(deletedFiles.get(2).getPath().getIOFile()));
  rollbackLocallyDeleted(Arrays.<FilePath>asList(new FilePathImpl(wasFile2,true),new FilePathImpl(wasFile1,false)),Collections.<FilePath>emptyList());
}
