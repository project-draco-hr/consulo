{
  myName=name;
  myScope=scope;
  if (myScope == null)   return;
  JavaPsiFacade facade=JavaPsiFacade.getInstance(myScope.getProject());
  final PsiVariable oldVariable=facade.getResolveHelper().resolveReferencedVariable(myName,myScope);
  if (!(oldVariable instanceof PsiField))   return;
  myField=(PsiField)oldVariable;
  final PsiReference[] references=ReferencesSearch.search(myField,new LocalSearchScope(myScope),false).toArray(new PsiReference[0]);
  myReferenceExpressions=new ArrayList<PsiReferenceExpression>();
  for (  PsiReference reference : references) {
    final PsiElement element=reference.getElement();
    if (element instanceof PsiReferenceExpression) {
      final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)element;
      if (referenceExpression.getQualifierExpression() == null) {
        myReferenceExpressions.add(referenceExpression);
      }
    }
  }
  if (myField.hasModifierProperty(PsiModifier.STATIC)) {
    myQualifyingClass=myField.getContainingClass();
  }
}
