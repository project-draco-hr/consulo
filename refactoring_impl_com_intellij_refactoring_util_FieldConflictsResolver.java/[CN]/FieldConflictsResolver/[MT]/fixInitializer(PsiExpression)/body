{
  if (myField == null)   return initializer;
  final PsiReferenceExpression[] replacedRef=new PsiReferenceExpression[]{null};
  initializer.accept(new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitReferenceExpression(    PsiReferenceExpression expression){
      final PsiExpression qualifierExpression=expression.getQualifierExpression();
      if (qualifierExpression != null) {
        qualifierExpression.accept(this);
      }
 else {
        final PsiElement result=expression.resolve();
        if (expression.getManager().areElementsEquivalent(result,myField)) {
          try {
            replacedRef[0]=qualifyReference(expression,myField,myQualifyingClass);
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
          }
        }
      }
    }
  }
);
  if (!initializer.isValid())   return replacedRef[0];
  return initializer;
}
