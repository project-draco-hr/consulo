{
  if (builder.getTokenType() != JavaTokenType.LBRACE)   return null;
 else   if (DEEP_PARSE_BLOCKS_IN_STATEMENTS)   return parseCodeBlockDeep(builder,false);
  final PsiBuilder.Marker codeBlock=builder.mark();
  builder.advanceLexer();
  boolean greedyBlock=false;
  int braceCount=1;
  while (true) {
    final IElementType tokenType=builder.getTokenType();
    if (tokenType == null) {
      greedyBlock=true;
      break;
    }
    if (tokenType == JavaTokenType.LBRACE) {
      braceCount++;
    }
 else     if (tokenType == JavaTokenType.RBRACE) {
      braceCount--;
    }
    builder.advanceLexer();
    if (braceCount == 0) {
      break;
    }
 else     if (braceCount == 1 && (tokenType == JavaTokenType.SEMICOLON || tokenType == JavaTokenType.RBRACE)) {
      final PsiBuilder.Marker position=builder.mark();
      final List<IElementType> list=new SmartList<IElementType>();
      while (true) {
        final IElementType type=builder.getTokenType();
        if (ElementType.PRIMITIVE_TYPE_BIT_SET.contains(type) || ElementType.MODIFIER_BIT_SET.contains(type) || type == JavaTokenType.IDENTIFIER || type == JavaTokenType.LT || type == JavaTokenType.GT || type == JavaTokenType.GTGT || type == JavaTokenType.GTGTGT || type == JavaTokenType.COMMA || type == JavaTokenType.DOT || type == JavaTokenType.EXTENDS_KEYWORD || type == JavaTokenType.IMPLEMENTS_KEYWORD) {
          list.add(type);
          builder.advanceLexer();
        }
 else {
          break;
        }
      }
      if (builder.getTokenType() == JavaTokenType.LPARENTH && list.size() >= 2) {
        final IElementType last=list.get(list.size() - 1);
        final IElementType prevLast=list.get(list.size() - 2);
        if (last == JavaTokenType.IDENTIFIER && (prevLast == JavaTokenType.IDENTIFIER || ElementType.PRIMITIVE_TYPE_BIT_SET.contains(prevLast))) {
          position.rollbackTo();
          greedyBlock=true;
          break;
        }
      }
      position.drop();
    }
  }
  codeBlock.collapse(JavaElementType.CODE_BLOCK);
  if (greedyBlock) {
    codeBlock.setCustomEdgeProcessors(null,GREEDY_RIGHT_EDGE_PROCESSOR);
  }
  return codeBlock;
}
