{
  final PsiBuilder.Marker statement=builder.mark();
  builder.advanceLexer();
  if (!expect(builder,JavaTokenType.LPARENTH)) {
    error(builder,JavaErrorMessages.message("expected.lparen"));
    statement.done(JavaElementType.FOR_STATEMENT);
    return statement;
  }
  final PsiBuilder.Marker afterParenth=builder.mark();
  final PsiBuilder.Marker param=DeclarationParser.parseParameter(builder,false);
  if (param == null || builder.getTokenType() != JavaTokenType.COLON) {
    afterParenth.rollbackTo();
    return parseForLoopFromInitialization(builder,statement);
  }
 else {
    afterParenth.drop();
    return parseForEachFromColon(builder,statement);
  }
}
