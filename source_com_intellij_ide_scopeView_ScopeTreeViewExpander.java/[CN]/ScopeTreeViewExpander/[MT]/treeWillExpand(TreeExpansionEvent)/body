{
  final DefaultMutableTreeNode node=(DefaultMutableTreeNode)event.getPath().getLastPathComponent();
  if (node instanceof DirectoryNode) {
    Set<ClassNode> classNodes=null;
    for (int i=node.getChildCount() - 1; i >= 0; i--) {
      final TreeNode childNode=node.getChildAt(i);
      if (childNode instanceof FileNode) {
        final FileNode fileNode=(FileNode)childNode;
        final PsiElement file=fileNode.getPsiElement();
        if (file instanceof PsiJavaFile) {
          final PsiClass[] psiClasses=((PsiJavaFile)file).getClasses();
          if (classNodes == null) {
            classNodes=new HashSet<ClassNode>();
          }
          for (          PsiClass psiClass : psiClasses) {
            if (psiClass != null && psiClass.isValid()) {
              classNodes.add(new ClassNode(psiClass));
            }
          }
          node.remove(fileNode);
        }
      }
    }
    if (classNodes != null) {
      for (      ClassNode classNode : classNodes) {
        node.add(classNode);
      }
    }
    TreeUtil.sort(node,new DependecyNodeComparator());
    ((DefaultTreeModel)myTree.getModel()).reload(node);
  }
}
