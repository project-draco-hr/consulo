{
  final DefaultMutableTreeNode node=(PackageDependenciesNode)event.getPath().getLastPathComponent();
  if (node instanceof DirectoryNode) {
    Set<FileNode> fileNodes=null;
    for (int i=node.getChildCount() - 1; i >= 0; i--) {
      final TreeNode childNode=node.getChildAt(i);
      if (childNode instanceof ClassNode) {
        final ClassNode classNode=(ClassNode)childNode;
        final PsiElement psiElement=classNode.getPsiElement();
        if (psiElement != null && psiElement.isValid()) {
          if (fileNodes == null) {
            fileNodes=new HashSet<FileNode>();
          }
          fileNodes.add(new FileNode(psiElement.getContainingFile(),true));
        }
        node.remove(classNode);
      }
    }
    if (fileNodes != null) {
      for (      FileNode fileNode : fileNodes) {
        node.add(fileNode);
      }
    }
    TreeUtil.sort(node,new DependencyNodeComparator());
    ((DefaultTreeModel)myTree.getModel()).reload(node);
  }
}
