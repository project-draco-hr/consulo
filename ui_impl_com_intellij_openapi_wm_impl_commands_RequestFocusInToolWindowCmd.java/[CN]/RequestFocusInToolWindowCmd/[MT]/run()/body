{
  try {
    Component preferredFocusedComponent=null;
    if (myToolWindow.getContentManager().getSelectedContent() != null) {
      preferredFocusedComponent=myToolWindow.getContentManager().getSelectedContent().getPreferredFocusableComponent();
      if (preferredFocusedComponent != null) {
        preferredFocusedComponent=IdeFocusTraversalPolicy.getPreferredFocusedComponent((JComponent)preferredFocusedComponent);
      }
    }
    if (preferredFocusedComponent == null) {
      preferredFocusedComponent=myFocusWatcher.getFocusedComponent();
    }
    if (preferredFocusedComponent == null) {
      preferredFocusedComponent=myFocusWatcher.getNearestFocusableComponent();
      if (preferredFocusedComponent instanceof JComponent) {
        preferredFocusedComponent=IdeFocusTraversalPolicy.getPreferredFocusedComponent((JComponent)preferredFocusedComponent);
      }
    }
    if (preferredFocusedComponent != null) {
      if (!preferredFocusedComponent.isShowing()) {
        preferredFocusedComponent=null;
      }
    }
    if (preferredFocusedComponent == null) {
      final JComponent component=myToolWindow.getComponent();
      preferredFocusedComponent=IdeFocusTraversalPolicy.getPreferredFocusedComponent(component);
    }
    final Window owner=SwingUtilities.getWindowAncestor(myToolWindow.getComponent());
    if (owner == null) {
      return;
    }
    if (owner.getFocusOwner() == null) {
      final Window activeWindow=getActiveWindow(owner.getOwnedWindows());
      if (activeWindow == null || (activeWindow instanceof FloatingDecorator)) {
        LOG.debug("owner.toFront()");
        owner.toFront();
      }
    }
    if (preferredFocusedComponent != null) {
      requestFocus(preferredFocusedComponent);
    }
 else {
      final JComponent componentToFocus=myToolWindow.getComponent();
      requestFocus(componentToFocus);
    }
  }
  finally {
    finish();
  }
}
