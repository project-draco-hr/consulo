{
  super(new BorderLayout());
  val model=new MapComboBoxModel<String,ModuleRootLayerImpl>(((RootModelImpl)modifiableRootModel).getLayers0());
  model.setSelectedItem(modifiableRootModel.getCurrentLayerName());
  val comboBox=new ComboBox(model);
  comboBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
    }
  }
);
  val removePresentation=presentation("Remove",IconUtil.getRemoveIcon());
  val removeUpdater=new Runnable(){
    @Override public void run(){
      removePresentation.setEnabled(comboBox.getItemCount() > 1);
      comboBox.setEnabled(comboBox.getItemCount() > 1);
    }
  }
;
  removeUpdater.run();
  JPanel panel=new JPanel(new HorizontalLayout());
  panel.add(new ActionButton(new AnAction(){
    @Override public void actionPerformed(    AnActionEvent anActionEvent){
    }
  }
,presentation("Add",IconUtil.getAddIcon()),"ConfigurationProfilePanel.ComboBox",ActionToolbar.DEFAULT_MINIMUM_BUTTON_SIZE));
  panel.add(new ActionButton(new AnAction(){
    @Override public void actionPerformed(    AnActionEvent anActionEvent){
    }
  }
,removePresentation,"ConfigurationProfilePanel.ComboBox",ActionToolbar.DEFAULT_MINIMUM_BUTTON_SIZE));
  panel.add(new ActionButton(new AnAction(){
    @Override public void actionPerformed(    AnActionEvent anActionEvent){
    }
  }
,presentation("Copy",AllIcons.Actions.Copy),"ConfigurationProfilePanel.ComboBox",ActionToolbar.DEFAULT_MINIMUM_BUTTON_SIZE));
  JPanel newPanel=new JPanel(new BorderLayout());
  newPanel.add(comboBox,BorderLayout.CENTER);
  newPanel.add(panel,BorderLayout.EAST);
  add(newPanel,BorderLayout.NORTH);
}
