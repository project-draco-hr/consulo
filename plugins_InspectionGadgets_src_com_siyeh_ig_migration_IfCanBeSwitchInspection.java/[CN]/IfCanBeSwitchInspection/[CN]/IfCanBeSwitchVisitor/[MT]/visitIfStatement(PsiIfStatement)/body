{
  super.visitIfStatement(statement);
  final PsiElement parent=statement.getParent();
  if (parent instanceof PsiIfStatement) {
    return;
  }
  final PsiExpression switchExpression=SwitchUtils.getSwitchExpression(statement,minimumBranches);
  if (switchExpression == null) {
    return;
  }
  final PsiType type=switchExpression.getType();
  if (!suggestIntSwitches) {
    if (type instanceof PsiClassType) {
      if (type.equalsToText(CommonClassNames.JAVA_LANG_INTEGER) || type.equalsToText(CommonClassNames.JAVA_LANG_SHORT) || type.equalsToText(CommonClassNames.JAVA_LANG_BYTE)|| type.equalsToText(CommonClassNames.JAVA_LANG_CHARACTER)) {
        return;
      }
    }
 else     if (PsiType.INT.equals(type) || PsiType.SHORT.equals(type) || PsiType.BYTE.equals(type)|| PsiType.CHAR.equals(type)) {
      return;
    }
  }
  if (!suggestEnumSwitches && type instanceof PsiClassType) {
    final PsiClassType classType=(PsiClassType)type;
    final PsiClass aClass=classType.resolve();
    if (aClass == null || aClass.isEnum()) {
      return;
    }
  }
  registerStatementError(statement,switchExpression);
}
