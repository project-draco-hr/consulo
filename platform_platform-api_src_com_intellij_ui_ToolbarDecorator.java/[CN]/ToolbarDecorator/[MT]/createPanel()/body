{
  final CommonActionsPanel.Buttons[] buttons=getButtons();
  final JComponent contextComponent=getComponent();
  myPanel=new CommonActionsPanel(this,contextComponent,myToolbarPosition == ActionToolbarPosition.TOP || myToolbarPosition == ActionToolbarPosition.BOTTOM,myExtraActions.toArray(new AnActionButton[myExtraActions.size()]),myButtonComparator,myAddName,myRemoveName,myMoveUpName,myMoveDownName,myEditName,buttons);
  myPanel.setBorder(myBorder);
  final JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(contextComponent);
  if (myPreferredSize != null) {
    scrollPane.setPreferredSize(myPreferredSize);
  }
  scrollPane.setBorder(IdeBorderFactory.createEmptyBorder(0));
  final JPanel panel=new JPanel(new BorderLayout()){
    @Override public void addNotify(){
      super.addNotify();
      updateButtons();
    }
  }
;
  panel.add(scrollPane,BorderLayout.CENTER);
  panel.add(myPanel,getPlacement());
  updateButtons();
  installDnD();
  panel.setBorder(new LineBorder(UIUtil.getBorderColor()));
  panel.putClientProperty(ActionToolbar.ACTION_TOOLBAR_PROPERTY_KEY,myPanel.getComponent(0));
  DataManager.registerDataProvider(panel,this);
  return panel;
}
