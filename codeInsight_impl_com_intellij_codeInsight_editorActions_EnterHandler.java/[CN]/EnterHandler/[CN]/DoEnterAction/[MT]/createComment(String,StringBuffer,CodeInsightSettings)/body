{
  final int endOfLineOffset=myDocument.getLineEndOffset(myDocument.getLineNumber(myOffset));
  myDocument.insertString(endOfLineOffset,buffer);
  myDocument.insertString(myOffset,docCommentLinePrefix);
  myCaretAdvance=myOffset - endOfLineOffset;
  final int nextLineStartOffset=endOfLineOffset + docCommentLinePrefix.length() + LINE_SEPARATOR.length();
  PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
  CodeStyleManager.getInstance(getProject()).adjustLineIndent(myFile,nextLineStartOffset);
  PsiComment comment=PsiTreeUtil.getNonStrictParentOfType(myFile.findElementAt(myOffset),PsiDocComment.class,PsiComment.class);
  comment=createJavaDocStub(settings,comment,getProject());
  CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(getProject());
  comment=(PsiComment)codeStyleManager.reformat(comment);
  PsiElement next=comment.getNextSibling();
  if (!(next instanceof PsiWhiteSpace) || -1 == next.getText().indexOf(LINE_SEPARATOR)) {
    int lineBreakOffset=comment.getTextRange().getEndOffset();
    myDocument.insertString(lineBreakOffset,LINE_SEPARATOR);
    PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
    codeStyleManager.adjustLineIndent(myFile,lineBreakOffset + 1);
    comment=PsiTreeUtil.getNonStrictParentOfType(myFile.findElementAt(myOffset),PsiDocComment.class,PsiComment.class);
  }
  return comment;
}
