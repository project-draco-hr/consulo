{
  PsiElement element=myFile.findElementAt(lineStart);
  if (element.getText().equals(DOC_COMMENT_ASTERISK_STRING) || element.getText().equals(DOC_COMMENT_PREFIX)) {
    PsiDocComment comment=null;
    if (element.getParent() instanceof PsiDocComment) {
      comment=(PsiDocComment)element.getParent();
    }
 else     if (element.getParent() instanceof PsiDocTag && element.getParent().getParent() instanceof PsiDocComment) {
      comment=(PsiDocComment)element.getParent().getParent();
    }
    if (comment != null) {
      int commentEnd=comment.getTextRange().getEndOffset();
      if (myOffset >= commentEnd) {
        docAsterisk=false;
      }
 else {
        removeTrailingSpaces(myDocument,myOffset);
        myDocument.insertString(myOffset,createDocCommentLine("",getProject()));
        PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
      }
    }
 else {
      docAsterisk=false;
    }
  }
 else   if (element instanceof PsiComment && ((PsiComment)element).getTokenType() == JavaTokenType.C_STYLE_COMMENT) {
    boolean usesAstersk=false;
    int commentLine=myDocument.getLineNumber(element.getTextRange().getStartOffset());
    if (commentLine < myDocument.getLineCount() - 1) {
      int nextLineOffset=myDocument.getLineStartOffset(commentLine + 1);
      if (nextLineOffset < element.getTextRange().getEndOffset()) {
        final CharSequence chars=myDocument.getCharsSequence();
        nextLineOffset=CharArrayUtil.shiftForward(chars,nextLineOffset," \t");
        usesAstersk=chars.charAt(nextLineOffset) == '*';
      }
    }
    if (usesAstersk) {
      removeTrailingSpaces(myDocument,myOffset);
      myDocument.insertString(myOffset,"* ");
      PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
    }
    docAsterisk=usesAstersk;
  }
 else {
    docAsterisk=false;
  }
  return docAsterisk;
}
