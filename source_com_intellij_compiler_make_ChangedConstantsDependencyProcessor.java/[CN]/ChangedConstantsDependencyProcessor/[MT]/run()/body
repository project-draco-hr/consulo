{
  final PsiManager psiManager=PsiManager.getInstance(myProject);
  final CacheCorruptedException[] _ex=new CacheCorruptedException[]{null};
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      try {
        final String qName=myDependencyCache.resolve(myQName);
        PsiClass[] classes=psiManager.findClasses(qName.replace('$','.'),GlobalSearchScope.allScope(myProject));
        for (int i=0; i < classes.length; i++) {
          PsiClass aClass=classes[i];
          if (ENABLE_TRACING) {
            System.out.println("Processing PsiClass " + aClass);
          }
          PsiField[] psiFields=aClass.getFields();
          for (int idx=0; idx < psiFields.length; idx++) {
            PsiField psiField=psiFields[idx];
            final FieldChangeInfo changeInfo=findChangeInfo(psiField);
            if (changeInfo != null) {
              processFieldChanged(psiField,aClass,changeInfo.isAccessibilityChange);
            }
          }
          for (int idx=0; idx < myRemovedFields.length; idx++) {
            processFieldRemoved(myRemovedFields[idx].fieldInfo,aClass);
          }
        }
      }
 catch (      CacheCorruptedException e) {
        _ex[0]=e;
      }
    }
  }
);
  if (_ex[0] != null) {
    throw _ex[0];
  }
}
