{
  if (SystemInfo.isWindows && op == WatcherOp.RECDIRTY && path.length() == 3 && Character.isLetter(path.charAt(0))) {
    VirtualFile root=LocalFileSystem.getInstance().findFileByPath(path);
    if (root instanceof NewVirtualFile) {
      ((NewVirtualFile)root).markDirtyRecursively();
    }
    notifyOnEvent();
    return;
  }
synchronized (myLock) {
    boolean exactPath=op != WatcherOp.DIRTY && op != WatcherOp.RECDIRTY;
    Collection<String> paths=checkWatchable(path,exactPath,false);
    if (paths.isEmpty()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Not watchable, filtered: " + path);
      }
      return;
    }
switch (op) {
case STATS:
case CHANGE:
      myDirtyPaths.addAll(paths);
    break;
case CREATE:
case DELETE:
  for (  String p : paths) {
    String parent=new File(p).getParent();
    myDirtyPaths.add(parent != null ? parent : p);
  }
break;
case DIRTY:
myDirtyDirs.addAll(paths);
break;
case RECDIRTY:
myDirtyRecursivePaths.addAll(paths);
break;
default :
LOG.error("Unexpected op: " + op);
}
notifyOnEvent();
}
}
