{
  if (reportedPath == null)   return Collections.emptyList();
  myAllPaths.clear();
  myAllPaths.add(reportedPath);
  for (  Pair<String,String> map : myMapping) {
    if (FileUtil.startsWith(reportedPath,map.first)) {
      myAllPaths.add(map.second + reportedPath.substring(map.first.length()));
    }
 else     if (FileUtil.startsWith(reportedPath,map.second)) {
      myAllPaths.add(map.first + reportedPath.substring(map.second.length()));
    }
  }
  myWatchedPaths.clear();
  ext:   for (  String path : myAllPaths) {
    if (fastPath && !myWatchedPaths.isEmpty())     break;
    for (    String root : myFlatWatchRoots) {
      if (FileUtil.pathsEqual(path,root)) {
        myWatchedPaths.add(path);
        continue ext;
      }
      if (isExact) {
        String parentPath=new File(path).getParent();
        if (parentPath != null && FileUtil.pathsEqual(parentPath,root)) {
          myWatchedPaths.add(path);
          continue ext;
        }
      }
    }
    for (    String root : myRecursiveWatchRoots) {
      if (FileUtil.startsWith(path,root)) {
        myWatchedPaths.add(path);
        continue ext;
      }
      if (!isExact) {
        String parentPath=new File(root).getParent();
        if (parentPath != null && FileUtil.pathsEqual(path,parentPath)) {
          myWatchedPaths.add(root);
          continue ext;
        }
      }
    }
  }
  return myWatchedPaths;
}
