{
  if (psiElement instanceof JavaFxVariableDeclaration) {
    return ((JavaFxVariableDeclaration)psiElement).getType();
  }
  if (psiElement instanceof JavaFxParameter) {
    return ((JavaFxParameter)psiElement).getType();
  }
  if (psiElement instanceof JavaFxFunctionDefinition) {
    return new JavaFxFunctionTypeImpl((JavaFxFunction)psiElement);
  }
  if (psiElement instanceof JavaFxClassDefinition) {
    final JavaFxQualifiedName qualifiedName=((JavaFxClassDefinition)psiElement).getQualifiedName();
    if (qualifiedName != null) {
      final String qualifiedNameString=qualifiedName.toString();
      if (isPrimitiveType(qualifiedNameString)) {
        return getPrimitiveType(qualifiedName.getLastComponent());
      }
    }
    return new JavaFxClassTypeImpl((JavaFxClassDefinition)psiElement);
  }
  if (psiElement instanceof JavaFxObjectLiteral) {
    return new JavaFxClassTypeImpl(new FakeJavaFxClassDefinition((JavaFxObjectLiteral)psiElement));
  }
  if (psiElement instanceof PsiClass) {
    final String qualifiedName=((PsiClass)psiElement).getQualifiedName();
    if (isPrimitiveType(qualifiedName)) {
      return getPrimitiveType(qualifiedName);
    }
    return new JavaClassTypeImpl((PsiClass)psiElement);
  }
  if (psiElement instanceof PsiField) {
    return ((PsiField)psiElement).getType();
  }
  if (psiElement instanceof PsiMethod) {
    return new JavaFunctionTypeImpl((PsiMethod)psiElement);
  }
  if (psiElement instanceof PsiFile) {
    return new JavaFxFileTypeImpl((PsiFile)psiElement);
  }
  return null;
}
