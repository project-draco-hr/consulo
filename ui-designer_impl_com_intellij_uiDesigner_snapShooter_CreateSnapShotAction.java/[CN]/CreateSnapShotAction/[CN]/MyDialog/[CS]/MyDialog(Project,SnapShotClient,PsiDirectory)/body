{
  super(project,true);
  myProject=project;
  myClient=client;
  myDirectory=dir;
  init();
  setTitle(UIDesignerBundle.message("snapshot.title"));
  final SnapShotTreeModel model=new SnapShotTreeModel(client);
  myComponentTree.setModel(model);
  myComponentTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  myComponentTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      updateOKAction();
    }
  }
);
  for (int i=0; i < 2; i++) {
    for (int row=myComponentTree.getRowCount() - 1; row >= 0; row--) {
      myComponentTree.expandRow(row);
    }
  }
  myComponentTree.getSelectionModel().setSelectionPath(myComponentTree.getPathForRow(0));
  myFormNameTextField.setText(suggestFormName());
  final EditorColorsScheme globalScheme=EditorColorsManager.getInstance().getGlobalScheme();
  final TextAttributes attributes=globalScheme.getAttributes(HighlighterColors.JAVA_STRING);
  final SimpleTextAttributes titleAttributes=new SimpleTextAttributes(SimpleTextAttributes.STYLE_PLAIN,attributes.getForegroundColor());
  myComponentTree.setCellRenderer(new ColoredTreeCellRenderer(){
    public void customizeCellRenderer(    JTree tree,    Object value,    boolean selected,    boolean expanded,    boolean leaf,    int row,    boolean hasFocus){
      SnapShotRemoteComponent rc=(SnapShotRemoteComponent)value;
      String className=rc.getClassName();
      if (className.startsWith(SWING_PACKAGE)) {
        append(className.substring(SWING_PACKAGE.length()),SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
 else {
        append(className,SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
      if (rc.getText().length() > 0) {
        append(" \"" + rc.getText() + "\"",titleAttributes);
      }
      if (rc.getLayoutManager().length() > 0) {
        append(" (" + rc.getLayoutManager() + ")",SimpleTextAttributes.GRAY_ATTRIBUTES);
      }
      if (rc.isTopLevel()) {
        setIcon(myFormIcon);
      }
 else {
        final Palette palette=Palette.getInstance(myProject);
        final ComponentItem item=palette.getItem(rc.getClassName());
        if (item != null) {
          setIcon(item.getSmallIcon());
        }
 else {
          setIcon(myUnknownComponentIcon);
        }
      }
    }
  }
);
  myFormNameTextField.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    DocumentEvent e){
      updateOKAction();
    }
  }
);
  updateOKAction();
}
