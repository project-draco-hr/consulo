{
  final Project project=(Project)e.getDataContext().getData(DataConstants.PROJECT);
  final IdeView view=(IdeView)e.getDataContext().getData(DataConstants.IDE_VIEW);
  if (project == null || view == null) {
    return;
  }
  final PsiDirectory dir=view.getOrChooseDirectory();
  if (dir == null)   return;
  final SnapShotClient client=new SnapShotClient();
  List<RunnerAndConfigurationSettingsImpl> appConfigurations=new ArrayList<RunnerAndConfigurationSettingsImpl>();
  RunnerAndConfigurationSettingsImpl snapshotConfiguration=null;
  boolean connected=false;
  ApplicationConfigurationType cfgType=ApplicationConfigurationType.getInstance();
  RunnerAndConfigurationSettingsImpl[] racsi=RunManagerEx.getInstanceEx(project).getConfigurationSettings(cfgType);
  for (  RunnerAndConfigurationSettingsImpl config : racsi) {
    if (config.getConfiguration() instanceof ApplicationConfiguration) {
      ApplicationConfiguration appConfig=(ApplicationConfiguration)config.getConfiguration();
      appConfigurations.add(config);
      if (appConfig.ENABLE_SWING_INSPECTOR) {
        snapshotConfiguration=config;
        if (appConfig.getLastSnapShooterPort() > 0) {
          try {
            client.connect(appConfig.getLastSnapShooterPort());
            connected=true;
          }
 catch (          IOException ex) {
            connected=false;
          }
        }
      }
      if (connected)       break;
    }
  }
  if (snapshotConfiguration == null) {
    snapshotConfiguration=promptForSnapshotConfiguration(project,appConfigurations);
    if (snapshotConfiguration == null)     return;
  }
  if (!connected) {
    int rc=Messages.showYesNoDialog(project,UIDesignerBundle.message("snapshot.run.prompt"),UIDesignerBundle.message("snapshot.title"),Messages.getQuestionIcon());
    if (rc == 1)     return;
    final JavaProgramRunner runner=ExecutionRegistry.getInstance().getDefaultRunner();
    final ApplicationConfiguration appConfig=(ApplicationConfiguration)snapshotConfiguration.getConfiguration();
    appConfig.setSnapShooterNotifyRunnable(new Runnable(){
      public void run(){
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            Messages.showMessageDialog(project,UIDesignerBundle.message("snapshot.prepare.notice"),UIDesignerBundle.message("snapshot.title"),Messages.getInformationIcon());
            try {
              client.connect(appConfig.getLastSnapShooterPort());
            }
 catch (            IOException ex) {
              Messages.showMessageDialog(project,UIDesignerBundle.message("snapshot.connection.error"),UIDesignerBundle.message("snapshot.title"),Messages.getErrorIcon());
              return;
            }
            runSnapShooterSession(client,project,dir,view);
          }
        }
);
      }
    }
);
    try {
      RunStrategy.getInstance().execute(snapshotConfiguration,runner,e.getDataContext());
    }
 catch (    ExecutionException ex) {
      Messages.showMessageDialog(project,UIDesignerBundle.message("snapshot.run.error",ex.getMessage()),UIDesignerBundle.message("snapshot.title"),Messages.getErrorIcon());
    }
  }
 else {
    runSnapShooterSession(client,project,dir,view);
  }
}
