{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.introduceVariable");
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiExpression tempExpr=CodeInsightUtil.findExpressionInRange(file,startOffset,endOffset);
  if (tempExpr == null) {
    PsiElement[] statements=CodeInsightUtil.findStatementsInRange(file,startOffset,endOffset);
    if (statements.length == 1) {
      if (statements[0] instanceof PsiExpressionStatement) {
        tempExpr=((PsiExpressionStatement)statements[0]).getExpression();
      }
 else       if (statements[0] instanceof PsiReturnStatement) {
        tempExpr=((PsiReturnStatement)statements[0]).getReturnValue();
      }
    }
  }
  if (tempExpr == null) {
    tempExpr=getSelectedExpression(project,file,startOffset,endOffset);
  }
  return invokeImpl(project,tempExpr,editor);
}
