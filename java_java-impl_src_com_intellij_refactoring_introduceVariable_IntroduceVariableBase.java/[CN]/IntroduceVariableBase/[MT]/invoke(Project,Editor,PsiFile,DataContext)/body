{
  final SelectionModel selectionModel=editor.getSelectionModel();
  if (!selectionModel.hasSelection()) {
    final int offset=editor.getCaretModel().getOffset();
    final PsiElement[] statementsInRange=findStatementsAtOffset(editor,file,offset);
    if (statementsInRange.length == 1 && (PsiUtil.hasErrorElementChild(statementsInRange[0]) || isPreferStatements())) {
      selectionModel.selectLineAtCaret();
      if (findExpressionInRange(project,file,selectionModel.getSelectionStart(),selectionModel.getSelectionEnd()) == null) {
        selectionModel.removeSelection();
      }
    }
    if (!selectionModel.hasSelection()) {
      final List<PsiExpression> expressions=collectExpressions(file,editor,offset,statementsInRange);
      if (expressions.isEmpty()) {
        selectionModel.selectLineAtCaret();
      }
 else       if (expressions.size() == 1) {
        final TextRange textRange=expressions.get(0).getTextRange();
        selectionModel.setSelection(textRange.getStartOffset(),textRange.getEndOffset());
      }
 else {
        showChooser(editor,expressions,new Pass<PsiExpression>(){
          public void pass(          final PsiExpression selectedValue){
            invoke(project,editor,file,selectedValue.getTextRange().getStartOffset(),selectedValue.getTextRange().getEndOffset());
          }
        }
);
        return;
      }
    }
  }
  if (invoke(project,editor,file,selectionModel.getSelectionStart(),selectionModel.getSelectionEnd())) {
    selectionModel.removeSelection();
  }
}
