{
  final SuggestedNameInfo suggestedName=getSuggestedName(typeSelectorManager.getDefaultType(),expr);
  final String variableName=suggestedName.names[0];
  final Boolean generateFinals=JavaRefactoringSettings.getInstance().INTRODUCE_LOCAL_CREATE_FINALS;
  final boolean replaceAll=replaceChoice == OccurrencesChooser.ReplaceChoice.ALL || replaceChoice == OccurrencesChooser.ReplaceChoice.NO_WRITE;
  final boolean declareFinal=!anyAssignmentLHS && (replaceAll && declareFinalIfAll || generateFinals == null ? CodeStyleSettingsManager.getSettings(project).GENERATE_FINAL_LOCALS : generateFinals.booleanValue());
  final boolean replaceWrite=anyAssignmentLHS && replaceChoice == OccurrencesChooser.ReplaceChoice.ALL;
  return new IntroduceVariableSettings(){
    @Override public String getEnteredName(){
      return variableName;
    }
    @Override public boolean isReplaceAllOccurrences(){
      return replaceAll;
    }
    @Override public boolean isDeclareFinal(){
      return declareFinal;
    }
    @Override public boolean isReplaceLValues(){
      return replaceWrite;
    }
    @Override public PsiType getSelectedType(){
      return typeSelectorManager.getDefaultType();
    }
    @Override public boolean isOK(){
      return true;
    }
  }
;
}
