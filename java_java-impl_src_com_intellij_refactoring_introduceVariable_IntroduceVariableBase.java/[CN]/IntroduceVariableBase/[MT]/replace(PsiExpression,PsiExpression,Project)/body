{
  final PsiExpression expr2;
  if (expr1 instanceof PsiArrayInitializerExpression && expr1.getParent() instanceof PsiNewExpression) {
    expr2=(PsiNewExpression)expr1.getParent();
  }
 else {
    expr2=RefactoringUtil.outermostParenthesizedExpression(expr1);
  }
  if (expr2.isPhysical()) {
    return expr2.replace(ref);
  }
 else {
    final String prefix=expr1.getUserData(ElementToWorkOn.PREFIX);
    final String suffix=expr1.getUserData(ElementToWorkOn.SUFFIX);
    final PsiElement parent=expr1.getUserData(ElementToWorkOn.PARENT);
    final RangeMarker rangeMarker=expr1.getUserData(ElementToWorkOn.TEXT_RANGE);
    return parent.replace(createReplacement(ref.getText(),project,prefix,suffix,parent,rangeMarker,new int[1]));
  }
}
