{
  String[] args=getText().substring(PREFIX.length()).trim().split(" ");
  String syntaxText="Syntax error, expected: " + PREFIX + " "+ ON+ "|"+ OFF+ " actionName";
  if (args.length != 2) {
    context.error(syntaxText,getLine());
    return new ActionCallback.Rejected();
  }
  final boolean on;
  if (ON.equalsIgnoreCase(args[0])) {
    on=true;
  }
 else   if (OFF.equalsIgnoreCase(args[0])) {
    on=false;
  }
 else {
    context.error(syntaxText,getLine());
    return new ActionCallback.Rejected();
  }
  String actionId=args[1];
  final AnAction action=ActionManager.getInstance().getAction(actionId);
  if (action == null) {
    context.error("Unknown action id=" + actionId,getLine());
    return new ActionCallback.Rejected();
  }
  if (!(action instanceof ToggleAction)) {
    context.error("Action is not a toggle action id=" + actionId,getLine());
    return new ActionCallback.Rejected();
  }
  final InputEvent inputEvent=ActionCommand.getInputEvent(actionId);
  final ActionCallback result=new ActionCallback();
  context.getRobot().delay(Registry.intValue("actionSystem.playback.delay"));
  IdeFocusManager fm=IdeFocusManager.getGlobalInstance();
  fm.doWhenFocusSettlesDown(new Runnable(){
    @Override public void run(){
      final Presentation presentation=(Presentation)action.getTemplatePresentation().clone();
      AnActionEvent event=new AnActionEvent(inputEvent,DataManager.getInstance().getDataContext(KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()),ActionPlaces.UNKNOWN,presentation,ActionManager.getInstance(),0);
      ActionUtil.performDumbAwareUpdate(action,event,false);
      Boolean state=(Boolean)event.getPresentation().getClientProperty(ToggleAction.SELECTED_PROPERTY);
      if (state.booleanValue() != on) {
        ActionManager.getInstance().tryToExecute(action,inputEvent,null,ActionPlaces.UNKNOWN,true).doWhenProcessed(new Runnable(){
          @Override public void run(){
            result.setDone();
          }
        }
);
      }
 else {
        result.setDone();
      }
    }
  }
);
  return result;
}
