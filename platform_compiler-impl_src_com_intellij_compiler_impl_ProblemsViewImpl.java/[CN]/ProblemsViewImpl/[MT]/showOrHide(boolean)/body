{
  if (ApplicationManager.getApplication().isCompilerServerMode()) {
    CompilerClientConnector.getInstance(myProject).showOrHide(hide);
    return;
  }
  ToolWindow toolWindow=MessageView.SERVICE.getInstance(myProject).getToolWindow();
  if (hide && !toolWindow.isVisible()) {
    return;
  }
  final ContentManager contentManager=toolWindow.getContentManager();
  Content[] contents=contentManager.getContents();
  Content content=ContainerUtil.find(contents,new Condition<Content>(){
    @Override public boolean value(    Content content){
      return content.getUserData(ourViewKey) != null;
    }
  }
);
  if (content == null && hide) {
    return;
  }
  if (hide) {
    contentManager.removeContent(content,true);
  }
 else {
    if (content == null) {
      ProblemsViewPanel problemsViewPanel=new ProblemsViewPanel(myProject);
      for (      TempMessage tempMessage : myTempMessages) {
        addMessage(problemsViewPanel,tempMessage);
      }
      content=ContentFactory.SERVICE.getInstance().createContent(myPanel=problemsViewPanel,"Compilation",false);
      content.putUserData(ourViewKey,Boolean.TRUE);
      contentManager.addContent(content);
    }
    contentManager.setSelectedContent(content,true);
    toolWindow.show(EmptyRunnable.getInstance());
  }
}
