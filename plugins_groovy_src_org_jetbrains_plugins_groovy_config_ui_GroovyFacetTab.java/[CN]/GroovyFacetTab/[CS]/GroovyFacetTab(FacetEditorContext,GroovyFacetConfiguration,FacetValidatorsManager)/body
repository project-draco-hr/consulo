{
  myConfiguration=configuration;
  myManagedLibrariesEditor=new ManagedLibrariesEditor(editorContext,validatorsManager,AbstractGroovyLibraryManager.EP_NAME);
  myManagedLibrariesPanel.add(myManagedLibrariesEditor.getComponent());
  myManagedLibrariesEditor.getFacetEditorContext().addFacetContextChangeListener(new FacetContextChangeListener(){
    public void moduleRootsChanged(    ModifiableRootModel rootModel){
      final boolean hasMvc=hasMvcLibrary();
      if (!myIsMvc.isEnabled() && hasMvc) {
        myIsMvc.setEnabled(true);
        myIsMvc.setSelected(true);
      }
 else       if (!hasMvc) {
        myIsMvc.setEnabled(false);
        myIsMvc.setSelected(false);
      }
    }
    public void facetModelChanged(    @NotNull Module module){
    }
  }
);
  myManagedLibrariesEditor.shouldHaveLibrary(new Condition<LibraryManager>(){
    public boolean value(    LibraryManager libraryManager){
      return libraryManager instanceof MvcLibraryManager || libraryManager instanceof GroovyLibraryManager;
    }
  }
,"Groovy/Grails is not configured yet");
}
