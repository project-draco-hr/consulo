{
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (selectedValue instanceof ManagedLibrary) {
        final ManagedLibrary managedLibrary=(ManagedLibrary)selectedValue;
        final LibraryManager manager=managedLibrary.manager;
        for (        ManagedLibrary existing : getUsedLibraries()) {
          if (existing.manager == manager) {
            @SuppressWarnings({"NonConstantStringShouldBeStringBuffer"}) String message="There is already a " + manager.getLibraryCategoryName() + " library";
            final String version=manager.getLibraryVersion(existing.library,myLibrariesContainer);
            if (StringUtil.isNotEmpty(version)) {
              message+=" of version " + version;
            }
            message+=".\n Do you want to replace the existing one?";
            final String replace="&Replace";
            final int result=Messages.showDialog(myPanel,message,"Library already exists",new String[]{replace,"&Add","&Cancel"},0,null);
            if (result == 2 || result < 0) {
              return;
            }
            if (result == 0) {
              doRemoveLibraries(Collections.singleton(existing.library));
            }
          }
        }
        myEditorContext.getModifiableRootModel().addLibraryEntry(managedLibrary.library);
      }
 else       if (selectedValue instanceof LibraryManager) {
        final Library library=((LibraryManager)selectedValue).createLibrary(myEditorContext);
        if (library == null) {
          return;
        }
        myEditorContext.getModifiableRootModel().addLibraryEntry(library);
      }
      updateLibraryList();
    }
  }
,ModalityState.stateForComponent(myPanel));
  return FINAL_CHOICE;
}
