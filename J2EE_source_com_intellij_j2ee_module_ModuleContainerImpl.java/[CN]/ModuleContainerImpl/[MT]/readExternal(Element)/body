{
  clearContainer();
  final List children=element.getChildren(CONTAINER_ELEMENT_NAME);
  for (  Object aChildren : children) {
    Element child=(Element)aChildren;
    final String type=child.getAttributeValue(TYPE_ATTRIBUTE_NAME);
    ContainerElement containerElement=null;
    if (MODULE_TYPE.equals(type)) {
      String moduleName=child.getAttributeValue(NAME_ATTRIBUTE_NAME);
      if (moduleName != null) {
        containerElement=new ModuleLinkImpl(moduleName,getModule());
      }
    }
 else     if (LIBRARY_TYPE.equals(type)) {
      Library library=findLibrary(child);
      if (library != null) {
        containerElement=new LibraryLinkImpl(library,getModule());
      }
 else {
        String libraryLevel=child.getAttributeValue(LEVEL_ATTRIBUTE_NAME);
        if (LibraryLink.MODULE_LEVEL.equals(libraryLevel)) {
          containerElement=new LibraryLinkImpl(null,getModule());
        }
      }
    }
 else {
      throw new InvalidDataException("invalid type: " + type + " "+ child);
    }
    if (containerElement != null) {
      containerElement.readExternal(child);
      addElement(containerElement);
    }
  }
  if (children.size() == 0) {
    readPlainOldWatcherEntries(element);
  }
}
