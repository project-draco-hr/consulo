{
  DataInputStream stream=(DataInputStream)in;
  final ValueContainerImpl<T> valueContainer=new ValueContainerImpl<T>();
  while (stream.available() > 0) {
    final int valueCount=DataInputOutputUtil.readSINT(in);
    if (valueCount < 0) {
      valueContainer.removeAssociatedValue(-valueCount);
      valueContainer.setNeedsCompacting(true);
    }
 else {
      for (int valueIdx=0; valueIdx < valueCount; valueIdx++) {
        final T value=myExternalizer.read(in);
        final int idCount=DataInputOutputUtil.readSINT(in);
        for (int i=0; i < idCount; i++) {
          final int id=DataInputOutputUtil.readSINT(in);
          if (id < 0) {
            valueContainer.removeValue(-id,value);
            valueContainer.setNeedsCompacting(true);
          }
 else {
            valueContainer.addValue(id,value);
          }
        }
      }
    }
  }
  return valueContainer;
}
