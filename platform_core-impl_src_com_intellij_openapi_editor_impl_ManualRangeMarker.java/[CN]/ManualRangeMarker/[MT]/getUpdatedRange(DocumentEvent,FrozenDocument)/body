{
  if (event instanceof RetargetRangeMarkers) {
    int start=((RetargetRangeMarkers)event).getStartOffset();
    if (myStart >= start && myEnd <= ((RetargetRangeMarkers)event).getEndOffset()) {
      int delta=((RetargetRangeMarkers)event).getMoveDestinationOffset() - start;
      return new ManualRangeMarker(myStart + delta,myEnd + delta,myGreedyLeft,myGreedyRight,mySurviveOnExternalChange,null);
    }
  }
  if (mySurviveOnExternalChange && PersistentRangeMarkerUtil.shouldTranslateViaDiff(event,myStart,myEnd)) {
    PersistentRangeMarker.LinesCols linesCols=myLinesCols != null ? myLinesCols : PersistentRangeMarker.storeLinesAndCols(documentBefore,myStart,myEnd);
    Pair<TextRange,PersistentRangeMarker.LinesCols> pair=linesCols == null ? null : PersistentRangeMarker.translateViaDiff((DocumentEventImpl)event,linesCols);
    if (pair != null) {
      return new ManualRangeMarker(pair.first.getStartOffset(),pair.first.getEndOffset(),myGreedyLeft,myGreedyRight,true,pair.second);
    }
  }
  TextRange range=RangeMarkerImpl.applyChange(event,myStart,myEnd,myGreedyLeft,myGreedyRight);
  return range == null ? null : new ManualRangeMarker(range.getStartOffset(),range.getEndOffset(),myGreedyLeft,myGreedyRight,mySurviveOnExternalChange,null);
}
