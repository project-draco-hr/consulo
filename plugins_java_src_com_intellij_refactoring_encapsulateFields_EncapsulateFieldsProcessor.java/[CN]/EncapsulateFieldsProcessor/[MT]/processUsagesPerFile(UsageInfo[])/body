{
  Map<PsiFile,List<EncapsulateFieldUsageInfo>> usagesInFiles=new HashMap<PsiFile,List<EncapsulateFieldUsageInfo>>();
  for (  UsageInfo usage : usages) {
    PsiElement element=usage.getElement();
    if (element == null)     continue;
    final PsiFile file=element.getContainingFile();
    List<EncapsulateFieldUsageInfo> usagesInFile=usagesInFiles.get(file);
    if (usagesInFile == null) {
      usagesInFile=new ArrayList<EncapsulateFieldUsageInfo>();
      usagesInFiles.put(file,usagesInFile);
    }
    usagesInFile.add(((EncapsulateFieldUsageInfo)usage));
  }
  for (  List<EncapsulateFieldUsageInfo> usageInfos : usagesInFiles.values()) {
    final EncapsulateFieldUsageInfo[] infos=usageInfos.toArray(new EncapsulateFieldUsageInfo[usageInfos.size()]);
    CommonRefactoringUtil.sortDepthFirstRightLeftOrder(infos);
    for (    EncapsulateFieldUsageInfo info : infos) {
      EncapsulateFieldHelper helper=EncapsulateFieldHelper.getHelper(info.getElement().getLanguage());
      helper.processUsage(info,myDescriptor,myNameToSetter.get(info.getFieldDescriptor().getSetterName()),myNameToGetter.get(info.getFieldDescriptor().getGetterName()));
    }
  }
}
