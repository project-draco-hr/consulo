{
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiInstanceOfExpression || parent instanceof PsiConditionalExpression) {
    registerError(expression);
    return;
  }
  if (parent instanceof PsiPolyadicExpression) {
    return;
  }
  final IElementType tokenType=expression.getOperationTokenType();
  final PsiExpression[] operands=expression.getOperands();
  for (  PsiExpression operand : operands) {
    if (operand instanceof PsiInstanceOfExpression) {
      registerError(expression);
      return;
    }
    if (!(operand instanceof PsiPolyadicExpression)) {
      continue;
    }
    final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)operand;
    final IElementType childTokenType=polyadicExpression.getOperationTokenType();
    if (!tokenType.equals(childTokenType)) {
      registerError(expression);
      return;
    }
  }
  super.visitPolyadicExpression(expression);
}
