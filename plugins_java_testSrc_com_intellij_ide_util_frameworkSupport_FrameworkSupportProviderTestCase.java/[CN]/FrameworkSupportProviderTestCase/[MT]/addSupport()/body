{
  new WriteCommandAction.Simple(getProject()){
    @Override protected void run() throws Throwable {
      final VirtualFile root=getVirtualFile(createTempDir("contentRoot"));
      PsiTestUtil.addContentRoot(myModule,root);
      final ModifiableRootModel model=ModuleRootManager.getInstance(myModule).getModifiableModel();
      try {
        List<FrameworkSupportConfigurable> selectedConfigurables=new ArrayList<FrameworkSupportConfigurable>();
        final IdeaModifiableModelsProvider modelsProvider=new IdeaModifiableModelsProvider();
        for (        FrameworkSupportNode node : myNodes.values()) {
          if (node.isChecked()) {
            final FrameworkSupportInModuleConfigurable configurable=getOrCreateConfigurable(node.getProvider());
            configurable.addSupport(myModule,model,modelsProvider);
            if (configurable instanceof OldFrameworkSupportProviderWrapper.FrameworkSupportConfigurableWrapper) {
              selectedConfigurables.add(((OldFrameworkSupportProviderWrapper.FrameworkSupportConfigurableWrapper)configurable).getConfigurable());
            }
          }
        }
        for (        FrameworkSupportCommunicator communicator : FrameworkSupportCommunicator.EP_NAME.getExtensions()) {
          communicator.onFrameworkSupportAdded(myModule,model,selectedConfigurables,myFrameworkSupportModel);
        }
      }
  finally {
        model.commit();
      }
      for (      FrameworkSupportInModuleConfigurable configurable : myConfigurables.values()) {
        Disposer.dispose(configurable);
      }
    }
  }
.execute().throwException();
}
