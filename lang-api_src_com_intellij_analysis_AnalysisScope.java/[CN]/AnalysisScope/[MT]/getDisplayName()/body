{
switch (myType) {
case CUSTOM:
    return myScope.getDisplayName();
case MODULE:
  return AnalysisScopeBundle.message("scope.option.module",pathToName(myModule.getModuleFilePath()));
case MODULES:
String modules=StringUtil.join(myModules,new Function<Module,String>(){
  public String fun(  final Module module){
    return pathToName(module.getModuleFilePath());
  }
}
,", ");
return AnalysisScopeBundle.message("scope.module.list",modules,Integer.valueOf(myModules.size()));
case PROJECT:
return AnalysisScopeBundle.message("scope.project",pathToName(myProject.getPresentableUrl()));
case FILE:
final VirtualFile virtualFile=((PsiFileSystemItem)myElement).getVirtualFile();
LOG.assertTrue(virtualFile != null);
return AnalysisScopeBundle.message("scope.file",virtualFile.getPresentableUrl());
case DIRECTORY:
return AnalysisScopeBundle.message("scope.directory",((PsiFileSystemItem)myElement).getVirtualFile().getPresentableUrl());
case VIRTUAL_FILES:
return AnalysisScopeBundle.message("scope.virtual.files");
}
return "";
}
