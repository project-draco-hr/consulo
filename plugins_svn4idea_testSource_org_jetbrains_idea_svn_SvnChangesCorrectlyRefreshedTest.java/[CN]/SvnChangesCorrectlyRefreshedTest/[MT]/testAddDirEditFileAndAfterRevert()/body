{
  final SubTree subTree=new SubTree(myWorkingCopyDir);
  VcsDirtyScopeManager.getInstance(myProject).markEverythingDirty();
  clManager.ensureUpToDate(false);
  final List<VirtualFile> files=getAllFiles(subTree);
  DuringChangeListManagerUpdateTestScheme.checkFilesAreInList(files.toArray(new VirtualFile[files.size()]),clManager.getDefaultListName(),clManager);
  final Collection<Change> changes=clManager.getDefaultChangeList().getChanges();
  final RollbackWorker worker=new RollbackWorker(myProject,true);
  worker.doRollback(changes,false,null,null);
  assertVF(subTree.myRootDir,"source");
  assertVF(subTree.mySourceDir,"s1.txt");
  assertVF(subTree.myRootDir,"target");
  clManager.ensureUpToDate(false);
  DuringChangeListManagerUpdateTestScheme.checkFilesAreInList(new VirtualFile[]{},clManager.getDefaultListName(),clManager);
  for (  VirtualFile file : files) {
    Assert.assertTrue(file.getPath(),clManager.isUnversioned(file));
  }
}
