{
  final SubTree subTree=new SubTree(myWorkingCopyDir);
  checkin();
  deleteFileInCommand(subTree.myRootDir);
  sleep300();
  VcsDirtyScopeManager.getInstance(myProject).markEverythingDirty();
  clManager.ensureUpToDate(false);
  final List<VirtualFile> files=getAllFiles(subTree);
  DuringChangeListManagerUpdateTestScheme.checkDeletedFilesAreInList(VfsUtil.toVirtualFileArray(files),clManager.getDefaultListName(),clManager);
  final Collection<Change> changes=clManager.getDefaultChangeList().getChanges();
  final RollbackWorker worker=new RollbackWorker(myProject,true);
  worker.doRollback(changes,false,null,null);
  assertVF(subTree.myRootDir,"source");
  assertVF(subTree.mySourceDir,"s1.txt");
  assertVF(subTree.myRootDir,"target");
  assertVF(subTree.myTargetDir,"t11.txt");
  assertVF(subTree.myTargetDir,"t13.txt");
  assertVF(subTree.myTargetDir,"t14.txt");
  assertVF(subTree.myTargetDir,"t15.txt");
  clManager.ensureUpToDate(false);
  DuringChangeListManagerUpdateTestScheme.checkFilesAreInList(new VirtualFile[]{},clManager.getDefaultListName(),clManager);
}
