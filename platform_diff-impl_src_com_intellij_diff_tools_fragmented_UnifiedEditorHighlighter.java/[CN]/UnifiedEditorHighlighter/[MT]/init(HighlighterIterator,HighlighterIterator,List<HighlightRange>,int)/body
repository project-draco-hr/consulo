{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  int offset=0;
  for (  HighlightRange range : ranges) {
    TextRange base=range.getBase();
    TextRange changed=range.getChanged();
    if (base.isEmpty())     continue;
    if (base.getStartOffset() > offset) {
      addElement(new Element(offset,base.getStartOffset(),null,TextAttributes.ERASE_MARKER));
      offset=base.getStartOffset();
    }
    HighlighterIterator it=range.getSide().select(it1,it2);
    while (!it.atEnd() && changed.getStartOffset() >= it.getEnd()) {
      it.advance();
    }
    if (it.atEnd()) {
      LOG.error("Unexpected end of highlighter");
      break;
    }
    if (changed.getEndOffset() <= it.getStart()) {
      continue;
    }
    while (true) {
      int relativeStart=Math.max(it.getStart() - changed.getStartOffset(),0);
      int relativeEnd=Math.min(it.getEnd() - changed.getStartOffset(),changed.getLength() + 1);
      addElement(new Element(offset + relativeStart,offset + relativeEnd,it.getTokenType(),it.getTextAttributes()));
      if (changed.getEndOffset() <= it.getEnd()) {
        offset+=changed.getLength();
        break;
      }
      it.advance();
      if (it.atEnd()) {
        LOG.error("Unexpected end of highlighter");
        break;
      }
    }
  }
  if (offset < textLength) {
    addElement(new Element(offset,textLength,null,TextAttributes.ERASE_MARKER));
  }
}
