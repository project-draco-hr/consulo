{
  if (!isMine(host))   return false;
  final Configuration configuration=Configuration.getInstance();
  final ArrayList<BaseInjection> injections=collectInjections(host,configuration);
  if (injections.isEmpty())   return false;
  final Project project=host.getProject();
  final BaseInjection originalInjection=injections.get(0);
  final BaseInjection xmlInjection;
  final AbstractInjectionPanel panel;
  if (host instanceof XmlText) {
    xmlInjection=createFrom(originalInjection,(XmlText)host);
    panel=new XmlTagPanel((XmlTagInjection)xmlInjection,project);
  }
 else   if (host instanceof XmlAttributeValue) {
    xmlInjection=createFrom(originalInjection,(XmlAttributeValue)host);
    panel=new XmlAttributePanel((XmlAttributeInjection)xmlInjection,project);
  }
 else {
    return false;
  }
  if (xmlInjection == null)   return false;
  panel.reset();
  final DialogBuilder builder=new DialogBuilder(project);
  builder.addOkAction();
  builder.addCancelAction();
  builder.setCenterPanel(panel.getComponent());
  builder.setTitle(EditInjectionSettingsAction.EDIT_INJECTION_TITLE);
  builder.setOkOperation(new Runnable(){
    public void run(){
      panel.apply();
      builder.getDialogWrapper().close(DialogWrapper.OK_EXIT_CODE);
    }
  }
);
  if (builder.show() == DialogWrapper.OK_EXIT_CODE) {
    xmlInjection.initializePlaces(false);
    final AbstractTagInjection newInjection=new AbstractTagInjection().copyFrom(xmlInjection);
    newInjection.mergeOriginalPlacesFrom(originalInjection,true);
    Configuration.getInstance().replaceInjectionsWithUndo(project,Collections.singletonList(xmlInjection),Collections.singletonList(originalInjection),Collections.<PsiElement>emptyList());
  }
  return true;
}
