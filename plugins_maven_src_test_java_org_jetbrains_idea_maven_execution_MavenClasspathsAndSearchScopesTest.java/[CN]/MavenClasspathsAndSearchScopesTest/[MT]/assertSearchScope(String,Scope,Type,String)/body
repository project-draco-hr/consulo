{
  createOutputDirectories();
  Module module=getModule(moduleName);
  GlobalSearchScope searchScope=scope == Scope.COMPILE ? module.getModuleWithDependenciesAndLibrariesScope(type == Type.TESTS) : module.getModuleRuntimeScope(type == Type.TESTS);
  final List<VirtualFile> entries=new ArrayList<VirtualFile>(((ModuleWithDependenciesScope)searchScope).getRoots());
  OrderEnumerator.orderEntries(module).recursively().compileOnly().forEach(new Processor<OrderEntry>(){
    @Override public boolean process(    OrderEntry orderEntry){
      if (orderEntry instanceof JdkOrderEntry) {
        entries.removeAll(Arrays.asList(orderEntry.getFiles(OrderRootType.CLASSES)));
      }
      return true;
    }
  }
);
  List<String> actualPaths=new ArrayList<String>();
  for (  VirtualFile each : entries) {
    if (each.getFileSystem() == JarFileSystem.getInstance()) {
      actualPaths.add(JarFileSystem.getInstance().getVirtualFileForJar(each).getPath());
    }
 else {
      actualPaths.add(each.getPath());
    }
  }
  assertPaths(expectedPaths,actualPaths);
}
