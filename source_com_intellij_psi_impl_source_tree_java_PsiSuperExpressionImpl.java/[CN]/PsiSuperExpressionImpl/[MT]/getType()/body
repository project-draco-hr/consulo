{
  PsiJavaCodeReferenceElement qualifier=getQualifier();
  if (qualifier != null) {
    PsiClass aClass=(PsiClass)qualifier.resolve();
    if (aClass == null)     return null;
    return getSuperType(aClass);
  }
  for (PsiElement scope=ResolveUtil.getContext(this); scope != null; scope=ResolveUtil.getContext(scope)) {
    if (scope instanceof PsiClass) {
      PsiClass aClass=(PsiClass)scope;
      return getSuperType(aClass);
    }
 else     if (scope instanceof JspFileImpl) {
      return getManager().getElementFactory().createType(((JspFileImpl)scope).getBaseClass());
    }
    if (scope instanceof PsiExpressionList && scope.getParent() instanceof PsiAnonymousClass) {
      scope=scope.getParent();
    }
  }
  return null;
}
