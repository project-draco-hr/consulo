{
  StringBuffer buf=new StringBuffer();
  String entityType;
  if (descriptor instanceof HtmlTagDescriptor) {
    entityType="Tag";
  }
 else {
    entityType="Attribute";
  }
  JavaDocUtil.formatEntityName(entityType + " name",descriptor.getName(),buf);
  buf.append("Description").append(":&nbsp;").append(descriptor.getDescription()).append("<br>");
  if (descriptor instanceof HtmlTagDescriptor) {
    final HtmlTagDescriptor tagDescriptor=(HtmlTagDescriptor)descriptor;
    if (!ommitHtmlSpecifics) {
      boolean hasStartTag=tagDescriptor.isHasStartTag();
      if (!hasStartTag) {
        buf.append("Start tag:&nbsp;").append("could be omitted").append("<br>");
      }
      if (!tagDescriptor.isEmpty() && !tagDescriptor.isHasEndTag()) {
        buf.append("End tag:&nbsp;").append("could be omitted").append("<br>");
      }
    }
    if (tagDescriptor.isEmpty()) {
      buf.append("Is empty:&nbsp;").append("true").append("<br>");
    }
  }
 else {
    final HtmlAttributeDescriptor attributeDescriptor=(HtmlAttributeDescriptor)descriptor;
    buf.append("Attr type:&nbsp;").append(attributeDescriptor.getType()).append("<br>");
    if (!attributeDescriptor.isHasDefaultValue())     buf.append("Attr default:&nbsp;").append("required").append("<br>");
  }
  char dtdId=descriptor.getDtd();
  boolean deprecated=dtdId == HtmlTagDescriptor.LOOSE_DTD;
  if (deprecated) {
    buf.append("Deprecated ").append(":&nbsp;").append(deprecated).append("<br>");
  }
  String dtd=(dtdId == HtmlTagDescriptor.LOOSE_DTD) ? "loose" : (dtdId == HtmlTagDescriptor.FRAME_DTD) ? "frameset" : "any";
  dtd+=" dtd";
  buf.append("Defined in").append(":&nbsp;").append(dtd).append("<br>");
  return buf.toString();
}
