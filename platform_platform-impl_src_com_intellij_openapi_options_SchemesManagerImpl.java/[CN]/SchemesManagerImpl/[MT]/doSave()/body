{
  myInsideSave=true;
  try {
    ApplicationManager.getApplication().runWriteAction(new DocumentRunnable.IgnoreDocumentRunnable(){
      @Override public void run(){
        ((NewVirtualFile)myVFSBaseDir).markDirtyRecursively();
        myVFSBaseDir.refresh(false,true);
      }
    }
);
    final Collection<T> schemes=getAllSchemes();
    myBaseDir.mkdirs();
    final UniqueFileNamesProvider fileNameProvider=new UniqueFileNamesProvider();
    reserveUsingFileNames(schemes,fileNameProvider);
    final WriteExternalException[] ex=new WriteExternalException[1];
    ApplicationManager.getApplication().runWriteAction(new DocumentRunnable.IgnoreDocumentRunnable(){
      @Override public void run(){
        deleteFilesFromDeletedSchemes();
        try {
          saveSchemes(schemes,fileNameProvider);
        }
 catch (        WriteExternalException e) {
          ex[0]=e;
        }
      }
    }
);
    if (ex[0] != null) {
      throw ex[0];
    }
    if (myDeletedNames.isEmpty()) {
      deleteServerFiles(DELETED_XML);
    }
 else     if (myProvider != null && myProvider.isEnabled()) {
      StorageUtil.sendContent(myProvider,getFileFullPath(DELETED_XML),createDeletedDocument(),myRoamingType,true);
    }
  }
  finally {
    myInsideSave=false;
  }
}
