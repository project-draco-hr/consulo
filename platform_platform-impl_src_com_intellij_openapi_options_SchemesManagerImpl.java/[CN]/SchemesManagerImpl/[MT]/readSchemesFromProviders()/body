{
  Collection<E> result=new ArrayList<E>();
  for (  StreamProvider provider : getEnabledProviders()) {
    String[] paths=provider.listSubFiles(myFileSpec);
    for (    String subpath : paths) {
      if (!subpath.equals(DELETED_XML)) {
        try {
          final Document subDocument=StorageUtil.loadDocument(provider.loadContent(getFileFullPath(subpath),myRoamingType));
          if (subDocument != null) {
            E scheme=readScheme(subDocument);
            boolean fileRenamed=false;
            T existing=findSchemeByName(scheme.getName());
            if (existing != null && existing instanceof ExternalizableScheme) {
              String currentFileName=((ExternalizableScheme)existing).getExternalInfo().getCurrentFileName();
              if (currentFileName != null && !currentFileName.equals(subpath)) {
                deleteServerFiles(subpath);
                subpath=currentFileName;
                fileRenamed=true;
              }
            }
            String fileName=checkFileNameIsFree(subpath,scheme.getName());
            if (!fileRenamed && !fileName.equals(subpath)) {
              deleteServerFiles(subpath);
            }
            if (scheme != null) {
              loadScheme(scheme,false,fileName);
              result.add(scheme);
            }
          }
        }
 catch (        Exception e) {
          LOG.info("Cannot load data from IDEAServer: " + e.getLocalizedMessage());
        }
      }
    }
  }
  return result;
}
