{
  Collection<E> result=new ArrayList<E>();
  if (myProvider == null || !myProvider.isEnabled()) {
    return result;
  }
  for (  String subPath : myProvider.listSubFiles(myFileSpec,myRoamingType)) {
    if (!subPath.equals(DELETED_XML)) {
      try {
        final Document subDocument=StorageUtil.loadDocument(myProvider.loadContent(getFileFullPath(subPath),myRoamingType));
        if (subDocument != null) {
          E scheme=readScheme(subDocument);
          boolean fileRenamed=false;
          T existing=findSchemeByName(scheme.getName());
          if (existing != null && existing instanceof ExternalizableScheme) {
            String currentFileName=((ExternalizableScheme)existing).getExternalInfo().getCurrentFileName();
            if (currentFileName != null && !currentFileName.equals(subPath)) {
              deleteServerFiles(subPath);
              subPath=currentFileName;
              fileRenamed=true;
            }
          }
          String fileName=checkFileNameIsFree(subPath,scheme.getName());
          if (!fileRenamed && !fileName.equals(subPath)) {
            deleteServerFiles(subPath);
          }
          loadScheme(scheme,false,fileName);
          result.add(scheme);
        }
      }
 catch (      Exception e) {
        LOG.info("Cannot load data from IDEAServer: " + e.getLocalizedMessage());
      }
    }
  }
  return result;
}
