{
  HashMap map=new HashMap();
  for (int i=0; i < files.length; i++) {
    VirtualFile file=files[i].isDirectory() ? files[i] : files[i].getParent();
    VirtualFile[] path=getPathComponents(file);
    Set filesSet;
    if (map.containsKey(path[0])) {
      filesSet=(Set)map.get(path[0]);
    }
 else {
      map.put(path[0],filesSet=new HashSet());
    }
    filesSet.add(file);
  }
  ArrayList ancestorsList=new ArrayList();
  for (Iterator setIterator=map.values().iterator(); setIterator.hasNext(); ) {
    Set filesSet=(Set)setIterator.next();
    VirtualFile ancestor=null;
    for (Iterator fileIterator=filesSet.iterator(); fileIterator.hasNext(); ) {
      VirtualFile file=(VirtualFile)fileIterator.next();
      if (ancestor == null) {
        ancestor=file;
        continue;
      }
      ancestor=getCommonAncestor(ancestor,file);
    }
    ancestorsList.add(ancestor);
    filesSet.clear();
  }
  return (VirtualFile[])ancestorsList.toArray(new VirtualFile[ancestorsList.size()]);
}
