{
  if (base != null) {
    if (!base.isValid()) {
      LOG.assertTrue(false,"Invalid file name: " + base.getName() + ", url: "+ uri);
    }
  }
  uri=ExternalResourceManager.getInstance().getResourceLocation(uri);
  uri=uri.replace('\\','/');
  if (uri.startsWith("file:///")) {
    uri=uri.substring("file:///".length());
    if (!SystemInfo.isWindows)     uri="/" + uri;
  }
 else   if (uri.startsWith("file:/")) {
    uri=uri.substring("file:/".length());
    if (!SystemInfo.isWindows)     uri="/" + uri;
  }
 else   if (uri.startsWith("file:")) {
    uri=uri.substring("file:".length());
  }
  VirtualFile file=null;
  if (uri.startsWith("jar:file:/")) {
    uri=uri.substring("jar:file:/".length());
    if (!SystemInfo.isWindows)     uri="/" + uri;
    file=VirtualFileManager.getInstance().findFileByUrl(JarFileSystem.PROTOCOL + ":" + "//"+ uri);
  }
 else {
    if (!SystemInfo.isWindows && StringUtil.startsWithChar(uri,'/')) {
      file=LocalFileSystem.getInstance().findFileByPath(uri);
    }
 else     if (SystemInfo.isWindows && uri.length() >= 2 && Character.isLetter(uri.charAt(0)) && uri.charAt(1) == ':') {
      file=LocalFileSystem.getInstance().findFileByPath(uri);
    }
  }
  if (file == null) {
    if (base == null)     return LocalFileSystem.getInstance().findFileByPath(uri);
    if (!base.isDirectory())     base=base.getParent();
    final String url=base.getUrl() + "/" + uri;
    if (LOG.isDebugEnabled())     LOG.debug("Finding by url:" + url);
    file=VirtualFileManager.getInstance().findFileByUrl(url);
    if (file == null)     return null;
  }
  return file;
}
