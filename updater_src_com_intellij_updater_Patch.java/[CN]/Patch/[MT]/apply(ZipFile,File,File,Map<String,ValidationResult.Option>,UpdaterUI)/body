{
  List<PatchAction> actionsToProcess=new ArrayList<PatchAction>();
  for (  PatchAction each : myActions) {
    if (each.shouldApply(toDir,options))     actionsToProcess.add(each);
  }
  forEach(actionsToProcess,"Backing up files...",ui,true,new ActionsProcessor(){
    public void forEach(    PatchAction each) throws IOException {
      each.backup(toDir,backupDir);
    }
  }
);
  final List<PatchAction> appliedActions=new ArrayList<PatchAction>();
  boolean shouldRevert=false;
  boolean cancelled=false;
  try {
    forEach(actionsToProcess,"Applying patch...",ui,true,new ActionsProcessor(){
      public void forEach(      PatchAction each) throws IOException {
        appliedActions.add(each);
        each.apply(patchFile,toDir);
      }
    }
);
  }
 catch (  OperationCancelledException e) {
    shouldRevert=true;
    cancelled=true;
  }
catch (  Exception e) {
    shouldRevert=true;
    ui.showError(e);
  }
  if (shouldRevert) {
    revert(appliedActions,backupDir,toDir,ui);
    appliedActions.clear();
    if (cancelled)     throw new OperationCancelledException();
  }
  return new ApplicationResult(appliedActions);
}
