{
  return new ProjectRootsTraversing.RootTraversePolicy.Visit<T>(){
    public void visit(    T entry,    ProjectRootsTraversing.TraverseState state,    RootPolicy<ProjectRootsTraversing.TraverseState> policy){
      Module ownerModule=entry.getOwnerModule();
      if (ignoredDependencyModules && originalModule != ownerModule && manager.findProject(ownerModule) != null)       return;
      if (originalModule != ownerModule && entry instanceof ModuleSourceOrderEntry) {
        MavenProject project=manager.findProject(originalModule);
        MavenProject depProject=manager.findProject(ownerModule);
        if (project == null || depProject == null) {
          original.visit(entry,state,policy);
          return;
        }
        List<MavenArtifact> deps=project.findDependencies(depProject);
        if (hasDependency(deps,true) && original == ProjectClasspathTraversing.ALL_OUTPUTS)         addOutput(ownerModule,true,state);
        if (hasDependency(deps,false))         addOutput(ownerModule,false,state);
      }
 else {
        original.visit(entry,state,policy);
      }
    }
  }
;
}
