{
  calculateAlignment();
  whiteSpace.arrangeLineFeeds(spaceProperty);
  final int wsLineFeeds=whiteSpace.getLineFeeds();
  if (wsLineFeeds > 0) {
    myCurrentLine+=wsLineFeeds;
    myCurrentOffset=whiteSpace.getSpaces();
  }
 else {
    myCurrentOffset+=whiteSpace.getSpaces();
  }
  if (!onTheSameLine(whiteSpace)) {
    int alignOffset=getAlignOffset(info.getAlignment());
    if (alignOffset == -1) {
      int indent=calculateIndent();
      setFirstElementIsProcessed(indent);
      whiteSpace.setSpaces(indent);
    }
 else {
      setFirstElementIsProcessed(alignOffset);
      whiteSpace.setSpaces(alignOffset);
    }
  }
 else {
    setElementIsProcessed(myCurrentOffset);
    whiteSpace.arrangeSpaces(spaceProperty);
  }
  setAlignOffset(info.getAlignment(),info.getCurrentIndent(),myCurrentLine);
  final int blockLineFeeds=getLineFeeds(rootBlock.getTextRange());
  if (blockLineFeeds > 0) {
    myCurrentLine+=blockLineFeeds;
    myCurrentOffset=getLastLineLength(rootBlock.getTextRange());
  }
 else {
    myCurrentOffset+=rootBlock.getTextRange().getLength();
  }
}
