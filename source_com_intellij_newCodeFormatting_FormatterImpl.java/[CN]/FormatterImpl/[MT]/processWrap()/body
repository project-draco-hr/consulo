{
  final WhiteSpace whiteSpace=myCurrentBlock.getWhiteSpace();
  final TextRange textRange=myCurrentBlock.getTextRange();
  final Wrap wrap=myCurrentBlock.getWrap();
  boolean wrapIsPresent=whiteSpace.containsLineFeeds();
  if (wrap != null) {
    wrap.processNextEntry(textRange.getStartOffset());
  }
  if (shouldUseWrap(wrap) || wrapIsPresent) {
    if (wrap != null && wrap.getFirstEntry() >= 0) {
      myReparseFromOffset=wrap.getFirstEntry();
      wrap.markAsUsed();
      shiftToOffset(myReparseFromOffset);
      myReparseFromOffset=-1;
      return true;
    }
 else     if (wrap != null && wrapCanBeUsedInTheFuture(wrap)) {
      wrap.markAsUsed();
    }
    whiteSpace.ensureLineFeed();
  }
 else {
    if (wrap != null) {
      if (isCandidateToBeWrapped(wrap)) {
        myWrapCandidates.clear();
        myWrapCandidates.add(myCurrentBlock);
      }
      if (wrapCanBeUsedInTheFuture(wrap)) {
        wrap.saveFirstEntry(textRange.getStartOffset());
      }
    }
  }
  if (!whiteSpace.containsLineFeeds() && lineOver() && !myWrapCandidates.isEmpty()&& !whiteSpace.isReadOnly()) {
    myCurrentBlock=myWrapCandidates.get(myWrapCandidates.size() - 1);
    return true;
  }
  return false;
}
