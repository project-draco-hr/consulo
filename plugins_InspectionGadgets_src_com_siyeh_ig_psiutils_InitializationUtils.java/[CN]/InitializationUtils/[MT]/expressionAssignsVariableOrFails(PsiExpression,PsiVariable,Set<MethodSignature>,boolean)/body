{
  if (expression == null) {
    return false;
  }
  if (expression instanceof PsiThisExpression || expression instanceof PsiLiteralExpression || expression instanceof PsiSuperExpression|| expression instanceof PsiClassObjectAccessExpression) {
    return false;
  }
 else   if (expression instanceof PsiReferenceExpression) {
    return false;
  }
 else   if (expression instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)expression;
    return methodCallAssignsVariableOrFails(methodCallExpression,variable,checkedMethods,strict);
  }
 else   if (expression instanceof PsiNewExpression) {
    final PsiNewExpression newExpression=(PsiNewExpression)expression;
    return newExpressionAssignsVariableOrFails(newExpression,variable,checkedMethods,strict);
  }
 else   if (expression instanceof PsiArrayInitializerExpression) {
    final PsiArrayInitializerExpression array=(PsiArrayInitializerExpression)expression;
    final PsiExpression[] initializers=array.getInitializers();
    for (    final PsiExpression initializer : initializers) {
      if (expressionAssignsVariableOrFails(initializer,variable,checkedMethods,strict)) {
        return true;
      }
    }
    return false;
  }
 else   if (expression instanceof PsiTypeCastExpression) {
    final PsiTypeCastExpression typeCast=(PsiTypeCastExpression)expression;
    final PsiExpression operand=typeCast.getOperand();
    return expressionAssignsVariableOrFails(operand,variable,checkedMethods,strict);
  }
 else   if (expression instanceof PsiArrayAccessExpression) {
    final PsiArrayAccessExpression accessExpression=(PsiArrayAccessExpression)expression;
    final PsiExpression arrayExpression=accessExpression.getArrayExpression();
    final PsiExpression indexExpression=accessExpression.getIndexExpression();
    return expressionAssignsVariableOrFails(arrayExpression,variable,checkedMethods,strict) || expressionAssignsVariableOrFails(indexExpression,variable,checkedMethods,strict);
  }
 else   if (expression instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)expression;
    final PsiExpression operand=prefixExpression.getOperand();
    return expressionAssignsVariableOrFails(operand,variable,checkedMethods,strict);
  }
 else   if (expression instanceof PsiPostfixExpression) {
    final PsiPostfixExpression postfixExpression=(PsiPostfixExpression)expression;
    final PsiExpression operand=postfixExpression.getOperand();
    return expressionAssignsVariableOrFails(operand,variable,checkedMethods,strict);
  }
 else   if (expression instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)expression;
    final PsiExpression lhs=binaryExpression.getLOperand();
    final PsiExpression rhs=binaryExpression.getROperand();
    return expressionAssignsVariableOrFails(lhs,variable,checkedMethods,strict) || expressionAssignsVariableOrFails(rhs,variable,checkedMethods,strict);
  }
 else   if (expression instanceof PsiConditionalExpression) {
    final PsiConditionalExpression conditional=(PsiConditionalExpression)expression;
    final PsiExpression condition=conditional.getCondition();
    if (expressionAssignsVariableOrFails(condition,variable,checkedMethods,strict)) {
      return true;
    }
    final PsiExpression thenExpression=conditional.getThenExpression();
    final PsiExpression elseExpression=conditional.getElseExpression();
    return expressionAssignsVariableOrFails(thenExpression,variable,checkedMethods,strict) && expressionAssignsVariableOrFails(elseExpression,variable,checkedMethods,strict);
  }
 else   if (expression instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignment=(PsiAssignmentExpression)expression;
    final PsiExpression lhs=assignment.getLExpression();
    if (expressionAssignsVariableOrFails(lhs,variable,checkedMethods,strict)) {
      return true;
    }
    final PsiExpression rhs=assignment.getRExpression();
    if (expressionAssignsVariableOrFails(rhs,variable,checkedMethods,strict)) {
      return true;
    }
    if (lhs instanceof PsiReferenceExpression) {
      final PsiElement element=((PsiReference)lhs).resolve();
      if (element != null && element.equals(variable)) {
        return true;
      }
    }
    return false;
  }
 else {
    return false;
  }
}
