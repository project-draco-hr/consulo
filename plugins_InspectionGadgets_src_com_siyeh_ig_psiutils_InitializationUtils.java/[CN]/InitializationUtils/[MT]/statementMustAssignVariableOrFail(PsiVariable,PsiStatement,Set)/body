{
  if (statement == null) {
    return false;
  }
  if (statementMustThrowException(statement)) {
    return true;
  }
  if (statement instanceof PsiBreakStatement || statement instanceof PsiContinueStatement || statement instanceof PsiAssertStatement|| statement instanceof PsiEmptyStatement) {
    return false;
  }
 else   if (statement instanceof PsiReturnStatement) {
    final PsiReturnStatement returnStatement=(PsiReturnStatement)statement;
    final PsiExpression returnValue=returnStatement.getReturnValue();
    return expressionMustAssignVariableOrFail(field,returnValue,checkedMethods);
  }
 else   if (statement instanceof PsiThrowStatement) {
    final PsiThrowStatement throwStatement=(PsiThrowStatement)statement;
    final PsiExpression exception=throwStatement.getException();
    return expressionMustAssignVariableOrFail(field,exception,checkedMethods);
  }
 else   if (statement instanceof PsiExpressionListStatement) {
    final PsiExpressionListStatement list=(PsiExpressionListStatement)statement;
    final PsiExpressionList expressionList=list.getExpressionList();
    final PsiExpression[] expressions=expressionList.getExpressions();
    for (int i=0; i < expressions.length; i++) {
      final PsiExpression expression=expressions[i];
      if (expressionMustAssignVariableOrFail(field,expression,checkedMethods)) {
        return true;
      }
    }
    return false;
  }
 else   if (statement instanceof PsiExpressionStatement) {
    final PsiExpressionStatement expressionStatement=(PsiExpressionStatement)statement;
    final PsiExpression expression=expressionStatement.getExpression();
    return expressionMustAssignVariableOrFail(field,expression,checkedMethods);
  }
 else   if (statement instanceof PsiDeclarationStatement) {
    return declarationStatementMustAssignVariableOrFail(field,(PsiDeclarationStatement)statement,checkedMethods);
  }
 else   if (statement instanceof PsiForStatement) {
    return forStatementMustAssignVariableOrFail(field,(PsiForStatement)statement,checkedMethods);
  }
 else   if (statement instanceof PsiForeachStatement) {
    return foreachStatementMustAssignVariableOrFail(field,(PsiForeachStatement)statement);
  }
 else   if (statement instanceof PsiWhileStatement) {
    return whileStatementMustAssignVariableOrFail(field,(PsiWhileStatement)statement,checkedMethods);
  }
 else   if (statement instanceof PsiDoWhileStatement) {
    return doWhileMustAssignVariableOrFail(field,(PsiDoWhileStatement)statement,checkedMethods);
  }
 else   if (statement instanceof PsiSynchronizedStatement) {
    final PsiCodeBlock body=((PsiSynchronizedStatement)statement).getBody();
    return cachingblockMustAssignVariableOrFail(field,body,checkedMethods);
  }
 else   if (statement instanceof PsiBlockStatement) {
    final PsiCodeBlock codeBlock=((PsiBlockStatement)statement).getCodeBlock();
    return cachingblockMustAssignVariableOrFail(field,codeBlock,checkedMethods);
  }
 else   if (statement instanceof PsiLabeledStatement) {
    final PsiLabeledStatement labeledStatement=(PsiLabeledStatement)statement;
    final PsiStatement statementLabeled=labeledStatement.getStatement();
    return statementMustAssignVariableOrFail(field,statementLabeled,checkedMethods);
  }
 else   if (statement instanceof PsiIfStatement) {
    return ifStatementMustAssignVariableOrFail(field,(PsiIfStatement)statement,checkedMethods);
  }
 else   if (statement instanceof PsiTryStatement) {
    return tryStatementMustAssignVariableOrFail(field,(PsiTryStatement)statement,checkedMethods);
  }
 else   if (statement instanceof PsiSwitchStatement) {
    return false;
  }
 else {
    return false;
  }
}
