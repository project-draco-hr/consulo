{
  if (statement == null) {
    return false;
  }
  if (ExceptionUtils.statementThrowsException(statement)) {
    return true;
  }
  if (statement instanceof PsiBreakStatement || statement instanceof PsiContinueStatement || statement instanceof PsiAssertStatement|| statement instanceof PsiEmptyStatement|| statement instanceof PsiSwitchLabelStatement) {
    return false;
  }
 else   if (statement instanceof PsiReturnStatement) {
    final PsiReturnStatement returnStatement=(PsiReturnStatement)statement;
    final PsiExpression returnValue=returnStatement.getReturnValue();
    return expressionAssignsVariableOrFails(returnValue,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiThrowStatement) {
    final PsiThrowStatement throwStatement=(PsiThrowStatement)statement;
    final PsiExpression exception=throwStatement.getException();
    return expressionAssignsVariableOrFails(exception,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiExpressionListStatement) {
    final PsiExpressionListStatement list=(PsiExpressionListStatement)statement;
    final PsiExpressionList expressionList=list.getExpressionList();
    final PsiExpression[] expressions=expressionList.getExpressions();
    for (    final PsiExpression expression : expressions) {
      if (expressionAssignsVariableOrFails(expression,variable,checkedMethods,strict)) {
        return true;
      }
    }
    return false;
  }
 else   if (statement instanceof PsiExpressionStatement) {
    final PsiExpressionStatement expressionStatement=(PsiExpressionStatement)statement;
    final PsiExpression expression=expressionStatement.getExpression();
    return expressionAssignsVariableOrFails(expression,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiDeclarationStatement) {
    final PsiDeclarationStatement declarationStatement=(PsiDeclarationStatement)statement;
    return declarationStatementAssignsVariableOrFails(declarationStatement,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiForStatement) {
    final PsiForStatement forStatement=(PsiForStatement)statement;
    return forStatementAssignsVariableOrFails(forStatement,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiForeachStatement) {
    final PsiForeachStatement foreachStatement=(PsiForeachStatement)statement;
    return foreachStatementAssignsVariableOrFails(variable,foreachStatement);
  }
 else   if (statement instanceof PsiWhileStatement) {
    final PsiWhileStatement whileStatement=(PsiWhileStatement)statement;
    return whileStatementAssignsVariableOrFails(whileStatement,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiDoWhileStatement) {
    final PsiDoWhileStatement doWhileStatement=(PsiDoWhileStatement)statement;
    return doWhileAssignsVariableOrFails(doWhileStatement,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiSynchronizedStatement) {
    final PsiSynchronizedStatement synchronizedStatement=(PsiSynchronizedStatement)statement;
    final PsiCodeBlock body=synchronizedStatement.getBody();
    return blockAssignsVariableOrFails(body,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiBlockStatement) {
    final PsiBlockStatement blockStatement=(PsiBlockStatement)statement;
    final PsiCodeBlock codeBlock=blockStatement.getCodeBlock();
    return blockAssignsVariableOrFails(codeBlock,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiLabeledStatement) {
    final PsiLabeledStatement labeledStatement=(PsiLabeledStatement)statement;
    final PsiStatement statementLabeled=labeledStatement.getStatement();
    return statementAssignsVariableOrFails(statementLabeled,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiIfStatement) {
    final PsiIfStatement ifStatement=(PsiIfStatement)statement;
    return ifStatementAssignsVariableOrFails(ifStatement,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiTryStatement) {
    final PsiTryStatement tryStatement=(PsiTryStatement)statement;
    return tryStatementAssignsVariableOrFails(tryStatement,variable,checkedMethods,strict);
  }
 else   if (statement instanceof PsiSwitchStatement) {
    final PsiSwitchStatement switchStatement=(PsiSwitchStatement)statement;
    return switchStatementAssignsVariableOrFails(switchStatement,variable,checkedMethods,strict);
  }
 else {
    return false;
  }
}
