{
  if (expression == null) {
    return false;
  }
  if (expression instanceof PsiThisExpression || expression instanceof PsiLiteralExpression || expression instanceof PsiSuperExpression|| expression instanceof PsiClassObjectAccessExpression) {
    return false;
  }
 else   if (expression instanceof PsiReferenceExpression) {
    return false;
  }
 else   if (expression instanceof PsiMethodCallExpression) {
    return methodCallMustAssignVariableOrFail(expression,field,checkedMethods);
  }
 else   if (expression instanceof PsiNewExpression) {
    return newExpressionMustAssignVariableOrFail(expression,field,checkedMethods);
  }
 else   if (expression instanceof PsiArrayInitializerExpression) {
    final PsiArrayInitializerExpression array=(PsiArrayInitializerExpression)expression;
    final PsiExpression[] initializers=array.getInitializers();
    for (int i=0; i < initializers.length; i++) {
      final PsiExpression initializer=initializers[i];
      if (expressionMustAssignVariableOrFail(field,initializer,checkedMethods)) {
        return true;
      }
    }
    return false;
  }
 else   if (expression instanceof PsiTypeCastExpression) {
    final PsiTypeCastExpression typeCast=(PsiTypeCastExpression)expression;
    final PsiExpression operand=typeCast.getOperand();
    return expressionMustAssignVariableOrFail(field,operand,checkedMethods);
  }
 else   if (expression instanceof PsiArrayAccessExpression) {
    final PsiArrayAccessExpression accessExpression=(PsiArrayAccessExpression)expression;
    final PsiExpression arrayExpression=accessExpression.getArrayExpression();
    final PsiExpression indexExpression=accessExpression.getIndexExpression();
    return expressionMustAssignVariableOrFail(field,arrayExpression,checkedMethods) || expressionMustAssignVariableOrFail(field,indexExpression,checkedMethods);
  }
 else   if (expression instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)expression;
    final PsiExpression operand=prefixExpression.getOperand();
    return expressionMustAssignVariableOrFail(field,operand,checkedMethods);
  }
 else   if (expression instanceof PsiPostfixExpression) {
    final PsiPostfixExpression postfixExpression=(PsiPostfixExpression)expression;
    final PsiExpression operand=postfixExpression.getOperand();
    return expressionMustAssignVariableOrFail(field,operand,checkedMethods);
  }
 else   if (expression instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)expression;
    final PsiExpression lhs=binaryExpression.getLOperand();
    final PsiExpression rhs=binaryExpression.getROperand();
    return expressionMustAssignVariableOrFail(field,lhs,checkedMethods) || expressionMustAssignVariableOrFail(field,rhs,checkedMethods);
  }
 else   if (expression instanceof PsiConditionalExpression) {
    final PsiConditionalExpression conditional=(PsiConditionalExpression)expression;
    final PsiExpression condition=conditional.getCondition();
    if (expressionMustAssignVariableOrFail(field,condition,checkedMethods)) {
      return true;
    }
    final PsiExpression thenExpression=conditional.getThenExpression();
    final PsiExpression elseExpression=conditional.getElseExpression();
    return expressionMustAssignVariableOrFail(field,thenExpression,checkedMethods) && expressionMustAssignVariableOrFail(field,elseExpression,checkedMethods);
  }
 else   if (expression instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignment=(PsiAssignmentExpression)expression;
    final PsiExpression lhs=assignment.getLExpression();
    if (expressionMustAssignVariableOrFail(field,lhs,checkedMethods)) {
      return true;
    }
    final PsiExpression rhs=assignment.getRExpression();
    if (expressionMustAssignVariableOrFail(field,rhs,checkedMethods)) {
      return true;
    }
    if (lhs instanceof PsiReferenceExpression) {
      final PsiElement element=((PsiReferenceExpression)lhs).resolve();
      if (element != null && field != null && element.equals(field)) {
        return true;
      }
    }
    return false;
  }
 else {
    return false;
  }
}
