{
  final PsiElement refElement=queryParameters.getElementToSearch();
  if (refElement instanceof Property) {
    final String name=((Property)refElement).getName();
    if (name == null)     return true;
    final List<String> words=StringUtil.getWordsIn(name);
    if (words.isEmpty())     return true;
    final String lastWord=words.get(words.size() - 1);
    SearchScope searchScope=queryParameters.getEffectiveSearchScope();
    if (searchScope instanceof GlobalSearchScope) {
      searchScope=GlobalSearchScope.getScopeRestrictedByFileTypes((GlobalSearchScope)searchScope,StdFileTypes.JSP,StdFileTypes.JSPX);
    }
    final PsiSearchHelper helper=PsiManager.getInstance(refElement.getProject()).getSearchHelper();
    final TextOccurenceProcessor processor=new TextOccurenceProcessor(){
      public boolean execute(      PsiElement element,      int offsetInElement){
        final PsiReference[] refs=element.getReferences();
        for (        PsiReference ref : refs) {
          if (ref.getRangeInElement().contains(offsetInElement)) {
            if (ref.isReferenceTo(refElement)) {
              return consumer.process(ref);
            }
          }
        }
        return true;
      }
    }
;
    if (!helper.processElementsWithWord(processor,searchScope,lastWord,UsageSearchContext.IN_FOREIGN_LANGUAGES,false)) {
      return false;
    }
  }
  return true;
}
