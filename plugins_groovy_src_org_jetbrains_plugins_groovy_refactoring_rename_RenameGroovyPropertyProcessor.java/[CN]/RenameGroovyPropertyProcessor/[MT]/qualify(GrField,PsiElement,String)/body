{
  if (!(renamed instanceof GrReferenceExpression))   return;
  final PsiClass clazz=field.getContainingClass();
  if (clazz == null)   return;
  final GrReferenceExpression refExpr=(GrReferenceExpression)renamed;
  final PsiElement replaced;
  if (field.hasModifierProperty(GrModifier.STATIC)) {
    final GrReferenceExpression newRefExpr=GroovyPsiElementFactory.getInstance(field.getProject()).createReferenceExpressionFromText(clazz.getQualifiedName() + "." + name);
    replaced=refExpr.replace(newRefExpr);
  }
 else {
    final PsiClass containingClass=PsiTreeUtil.getParentOfType(renamed,PsiClass.class);
    if (field.getManager().areElementsEquivalent(containingClass,clazz)) {
      final GrReferenceExpression newRefExpr=GroovyPsiElementFactory.getInstance(field.getProject()).createReferenceExpressionFromText("this." + name);
      replaced=refExpr.replace(newRefExpr);
    }
 else {
      final GrReferenceExpression newRefExpr=GroovyPsiElementFactory.getInstance(field.getProject()).createReferenceExpressionFromText(clazz.getQualifiedName() + ".this." + name);
      replaced=refExpr.replace(newRefExpr);
    }
  }
  PsiUtil.shortenReferences((GroovyPsiElement)replaced);
}
