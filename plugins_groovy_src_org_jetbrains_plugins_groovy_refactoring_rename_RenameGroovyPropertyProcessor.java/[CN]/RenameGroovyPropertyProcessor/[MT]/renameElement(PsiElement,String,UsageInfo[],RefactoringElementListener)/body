{
  final GrField field=(GrField)psiElement;
  final PsiMethod getter=GroovyPropertyUtils.findGetterForField(field);
  final PsiMethod setter=GroovyPropertyUtils.findSetterForField(field);
  final String newGetterName=(getter != null && getter.getName().startsWith("is") ? "is" : "get") + StringUtil.capitalize(newName);
  final String newSetterName="set" + StringUtil.capitalize(newName);
  for (  UsageInfo usage : usages) {
    final PsiElement element=usage.getElement();
    if (element == null) {
      continue;
    }
    PsiReference ref=element.getReference();
    if (ref == null)     continue;
    PsiElement resolved=ref.resolve();
    if (resolved instanceof GrAccessorMethod) {
      GrAccessorMethod method=(GrAccessorMethod)resolved;
      if (method == getter) {
        ref.handleElementRename(newGetterName);
      }
 else {
        if (method == setter) {
          ref.handleElementRename(newSetterName);
        }
 else {
          ref.handleElementRename(newName);
        }
      }
    }
 else {
      final PsiElement renamed=ref.handleElementRename(newName);
      final PsiElement newly_resolved=ref.resolve();
      if (!field.getManager().areElementsEquivalent(newly_resolved,field)) {
        qualify(field,renamed,newName);
      }
    }
  }
  field.setName(newName);
  listener.elementRenamed(field);
}
