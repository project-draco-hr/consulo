{
  final ProjectRootManagerImpl projectRootManager=ProjectRootManagerImpl.getInstanceImpl(myProject);
  final ConfigurationException[] ex=new ConfigurationException[1];
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      try {
        myFacetsConfigurator.applyEditors();
        final List<ModifiableRootModel> models=new ArrayList<ModifiableRootModel>(myModuleEditors.size());
        for (        final ModuleEditor moduleEditor : myModuleEditors) {
          final ModifiableRootModel model=moduleEditor.apply();
          if (model != null) {
            models.add(model);
          }
        }
        final ModifiableRootModel[] rootModels=models.toArray(new ModifiableRootModel[models.size()]);
        projectRootManager.multiCommit(myModuleModel,rootModels);
        myFacetsConfigurator.commitFacets();
      }
 catch (      ConfigurationException e) {
        ex[0]=e;
      }
 finally {
        ModuleStructureConfigurable.getInstance(myProject).getFacetEditorFacade().clearMaps(false);
        for (        final ModuleEditor moduleEditor : myModuleEditors) {
          moduleEditor.removeChangeListener(myFacetsConfigurator);
        }
        myFacetsConfigurator=createFacetsConfigurator();
        myModuleModel=ModuleManager.getInstance(myProject).getModifiableModel();
        final ProjectFacetsConfigurator configurator=myFacetsConfigurator;
        for (        final ModuleEditor moduleEditor : myModuleEditors) {
          moduleEditor.addChangeListener(configurator);
          Disposer.register(moduleEditor,new Disposable(){
            public void dispose(){
              moduleEditor.removeChangeListener(configurator);
            }
          }
);
        }
      }
    }
  }
);
  if (ex[0] != null) {
    throw ex[0];
  }
  myModified=false;
}
