{
  final JPanel gcPanel=new JPanel(new GridBagLayout());
  Constraints constraints=new Constraints(GridBagConstraints.NORTHWEST);
  constraints.fill=GridBagConstraints.HORIZONTAL;
  constraints.insets=new Insets(5,5,0,5);
  final JButton clearConfig=new JButton("Clear configuration");
  final JButton loadDefaultConfig=new JButton("Load default configuration");
  final JButton readConfig=new JButton("Read configuration from file...");
  final JButton writeConfig=new JButton("Write configuration to file...");
  clearConfig.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      createSettingsPanel(new RearrangerSettings());
    }
  }
);
  loadDefaultConfig.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      RearrangerSettings defaultSettings=RearrangerSettings.getDefaultSettings();
      if (defaultSettings == null) {
        JOptionPane.showMessageDialog(null,"Could not obtain default configuration.","No default configuration available",JOptionPane.WARNING_MESSAGE);
      }
 else {
        createSettingsPanel(defaultSettings);
      }
    }
  }
);
  readConfig.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      JFileChooser fc=new JFileChooser();
      int returnVal=fc.showOpenDialog(null);
      if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file=fc.getSelectedFile();
        RearrangerSettings fileSettings=RearrangerSettings.getSettingsFromFile(file);
        if (fileSettings == null) {
          JOptionPane.showMessageDialog(null,"Could not read configuration.","File or file contents invalid",JOptionPane.WARNING_MESSAGE);
        }
 else {
          createSettingsPanel(fileSettings);
        }
      }
    }
  }
);
  writeConfig.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      JFileChooser fc=new JFileChooser();
      int returnVal=fc.showSaveDialog(null);
      if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file=fc.getSelectedFile();
        settings.writeSettingsToFile(file);
      }
    }
  }
);
  gcPanel.add(clearConfig,constraints.weightedLastCol());
  constraints.newRow();
  gcPanel.add(loadDefaultConfig,constraints.weightedLastCol());
  constraints.newRow();
  gcPanel.add(readConfig,constraints.weightedLastCol());
  constraints.newRow();
  gcPanel.add(writeConfig,constraints.weightedLastCol());
  JPanel outerPanel=new JPanel(new GridBagLayout());
  constraints=new Constraints(GridBagConstraints.NORTHWEST);
  constraints.weightedLastRow();
  outerPanel.add(gcPanel,constraints.weightedLastCol());
  JPanel extraPanel=new JPanel(new GridBagLayout());
  final Border border=BorderFactory.createEtchedBorder();
  extraPanel.setBorder(border);
  constraints=new Constraints(GridBagConstraints.SOUTHEAST);
  extraPanel.add(outerPanel,constraints.firstCol());
  constraints.weightedNewRow();
  constraints.firstCol();
  extraPanel.add(new JLabel(),constraints.weightedNextCol());
  constraints.lastRow();
  constraints.firstCol();
  constraints.nextCol();
  constraints.weightx=constraints.weighty=0;
  constraints.insets=new Insets(5,5,5,5);
  JLabel version=new JLabel("Rearranger plugin, version " + Rearranger.VERSION);
  extraPanel.add(version,constraints.lastCol());
  return extraPanel;
}
