{
  if (parent.getValue() instanceof Form)   return children;
  ArrayList<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  ProjectViewNode[] copy=children.toArray(new ProjectViewNode[children.size()]);
  for (int i=0; i < copy.length; i++) {
    ProjectViewNode element=copy[i];
    if (element.getValue() instanceof PsiClass) {
      PsiClass aClass=((PsiClass)element.getValue());
      PsiFile[] forms=aClass.getManager().getSearchHelper().findFormsBoundToClass(aClass.getQualifiedName());
      Collection<AbstractTreeNode> formNodes=findFormsIn(children,forms);
      if (formNodes.size() > 0) {
        Collection<PsiFile> formFiles=convertToFiles(formNodes);
        Collection<AbstractTreeNode> subNodes=new ArrayList<AbstractTreeNode>(formNodes);
        subNodes.add(element);
        result.add(new FormNode(myProject,new Form(aClass,formFiles),settings,subNodes));
        children.remove(element);
        children.removeAll(formNodes);
      }
    }
  }
  result.addAll(children);
  return result;
}
