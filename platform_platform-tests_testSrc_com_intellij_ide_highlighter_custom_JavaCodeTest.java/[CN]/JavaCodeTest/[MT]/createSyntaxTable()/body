{
  SyntaxTable table=new SyntaxTable();
  table.setLineComment("//");
  table.setStartComment("/*");
  table.setEndComment("*/");
  table.setHexPrefix("0x");
  table.setNumPostfixChars("cfdle");
  table.addKeyword1("package");
  table.addKeyword1("import");
  table.addKeyword1("this");
  table.addKeyword1("super");
  table.addKeyword1("public");
  table.addKeyword1("private");
  table.addKeyword1("protected");
  table.addKeyword1("null");
  table.addKeyword1("if");
  table.addKeyword1("else");
  table.addKeyword1("throws");
  table.addKeyword1("switch");
  table.addKeyword1("case");
  table.addKeyword1("break");
  table.addKeyword1("default");
  table.addKeyword1("continue");
  table.addKeyword1("goto");
  table.addKeyword1("boolean");
  table.addKeyword1("true");
  table.addKeyword1("false");
  table.addKeyword1("final");
  table.addKeyword1("class");
  table.addKeyword1("static");
  table.addKeyword1("final");
  table.addKeyword1("void");
  table.addKeyword1("int");
  table.addKeyword1("while");
  table.addKeyword1("new");
  table.addKeyword1("for");
  table.addKeyword1("byte");
  table.addKeyword1("float");
  table.addKeyword1("double");
  table.addKeyword1("short");
  table.addKeyword1("extends");
  table.addKeyword1("implements");
  table.addKeyword1("interface");
  table.addKeyword1("abstract");
  table.addKeyword1("char");
  table.addKeyword1("try");
  table.addKeyword1("catch");
  table.addKeyword1("finally");
  table.addKeyword1("synchronized");
  return table;
}
