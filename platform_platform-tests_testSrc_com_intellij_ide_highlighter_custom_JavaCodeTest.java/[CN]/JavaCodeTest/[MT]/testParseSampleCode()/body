{
  String sampleCode="private some text f b g\n\n\n//   1\n  public static void main(String[] args) {\n}\n-10 - 10\n\"dsfdfdf\"\n/* a\n *bc */";
  String sampleCode2="/*";
  String sampleCode3="//";
  String sampleCode4="";
  String sampleCode5=" ";
  checkSameText(sampleCode);
  String result;
  IElementType[] types=new IElementType[]{CustomHighlighterTokenType.KEYWORD_1,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.IDENTIFIER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.IDENTIFIER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.IDENTIFIER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.IDENTIFIER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.IDENTIFIER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.LINE_COMMENT,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.KEYWORD_1,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.KEYWORD_1,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.KEYWORD_1,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.IDENTIFIER,CustomHighlighterTokenType.CHARACTER,CustomHighlighterTokenType.IDENTIFIER,CustomHighlighterTokenType.CHARACTER,CustomHighlighterTokenType.CHARACTER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.IDENTIFIER,CustomHighlighterTokenType.CHARACTER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.CHARACTER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.CHARACTER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.CHARACTER,CustomHighlighterTokenType.NUMBER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.CHARACTER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.NUMBER,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.STRING,CustomHighlighterTokenType.WHITESPACE,CustomHighlighterTokenType.MULTI_LINE_COMMENT};
  String[] matches=new String[]{"private"," ","some"," ","text"," ","f"," ","b"," ","g","\n\n\n","//   1","\n  ","public"," ","static"," ","void"," ","main","(","String","[","]"," ","args",")"," ","{","\n","}","\n","-","10"," ","-"," ","10","\n","\"dsfdfdf\"","\n","/* a\n *bc */"};
  checkTypesAndTokens(sampleCode,types,matches);
  lexer.start(sampleCode2);
  assertEquals(CustomHighlighterTokenType.MULTI_LINE_COMMENT,lexer.getTokenType());
  assertEquals("/*",sampleCode2.substring(lexer.getTokenStart(),lexer.getTokenEnd()));
  lexer.start(sampleCode3);
  assertEquals(CustomHighlighterTokenType.LINE_COMMENT,lexer.getTokenType());
  assertEquals("//",sampleCode3.substring(lexer.getTokenStart(),lexer.getTokenEnd()));
  lexer.start(sampleCode4);
  assertEquals(null,lexer.getTokenType());
  assertEquals("",sampleCode4.substring(lexer.getTokenStart(),lexer.getTokenEnd()));
  lexer.start(sampleCode5);
  assertEquals(CustomHighlighterTokenType.WHITESPACE,lexer.getTokenType());
  assertEquals(" ",sampleCode5.substring(lexer.getTokenStart(),lexer.getTokenEnd()));
}
