{
  final VirtualFile[] sourceDir=new VirtualFile[1];
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        setupRootModel(testDir,sourceDir,jdkName);
      }
 catch (      Exception e) {
        LOG.error(e);
      }
    }
  }
);
  AnalysisScope scope=createAnalysisScope(sourceDir[0].getParent());
  InspectionManagerEx inspectionManager=(InspectionManagerEx)InspectionManager.getInstance(getProject());
  InspectionTool[] tools=runDeadCodeFirst ? new InspectionTool[]{new UnusedDeclarationInspection(),tool} : new InspectionTool[]{tool};
  final GlobalInspectionContextImpl globalContext=CodeInsightTestFixtureImpl.createGlobalContextForTool(scope,getProject(),inspectionManager,tools);
  InspectionTestUtil.runTool(tool,scope,globalContext,inspectionManager);
}
