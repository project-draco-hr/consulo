{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final String referenceName=methodExpression.getReferenceName();
  if (!logNames.contains(referenceName)) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null || !"org.slf4j.Logger".equals(containingClass.getQualifiedName())) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length == 0) {
    return;
  }
  PsiExpression argument=arguments[0];
  if (!ExpressionUtils.hasStringType(argument)) {
    if (arguments.length < 2) {
      return;
    }
    argument=arguments[1];
    if (!ExpressionUtils.hasStringType(argument)) {
      return;
    }
  }
  if (!containsNonConstantConcatenation(argument)) {
    return;
  }
  registerMethodCallError(expression,argument);
}
