{
  if (expression instanceof PsiParenthesizedExpression) {
    final PsiParenthesizedExpression parenthesizedExpression=(PsiParenthesizedExpression)expression;
    return containsNonConstantConcatenation(parenthesizedExpression.getExpression());
  }
 else   if (expression instanceof PsiPolyadicExpression) {
    final PsiPolyadicExpression polyadicExpression=(PsiPolyadicExpression)expression;
    if (!ExpressionUtils.hasStringType(polyadicExpression)) {
      return false;
    }
    if (!JavaTokenType.PLUS.equals(polyadicExpression.getOperationTokenType())) {
      return false;
    }
    final PsiExpression[] operands=polyadicExpression.getOperands();
    for (    PsiExpression operand : operands) {
      if (!ExpressionUtils.isEvaluatedAtCompileTime(operand)) {
        return true;
      }
    }
  }
  return false;
}
