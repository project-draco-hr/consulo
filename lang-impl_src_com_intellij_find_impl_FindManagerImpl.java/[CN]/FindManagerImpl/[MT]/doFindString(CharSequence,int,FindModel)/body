{
  String toFind=model.getStringToFind();
  if (toFind == null || toFind.length() == 0) {
    return NOT_FOUND_RESULT;
  }
  if (model.isRegularExpressions()) {
    return findStringByRegularExpression(text,offset,model);
  }
  StringSearcher searcher=new StringSearcher(toFind);
  searcher.setCaseSensitive(model.isCaseSensitive());
  searcher.setForwardDirection(model.isForward());
  int index;
  if (model.isForward()) {
    final int res=searcher.scan(text.subSequence(offset,text.length()));
    index=res < 0 ? -1 : res + offset;
  }
 else {
    index=searcher.scan(text.subSequence(0,offset));
  }
  if (index < 0) {
    return NOT_FOUND_RESULT;
  }
  return new FindResultImpl(index,index + toFind.length());
}
