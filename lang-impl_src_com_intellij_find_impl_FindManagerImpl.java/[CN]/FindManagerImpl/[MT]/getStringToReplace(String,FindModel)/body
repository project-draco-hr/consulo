{
  if (model == null) {
    return null;
  }
  String toReplace=model.getStringToReplace();
  if (!model.isRegularExpressions()) {
    if (model.isPreserveCase()) {
      return replaceWithCaseRespect(toReplace,foundString);
    }
    return toReplace;
  }
  String toFind=model.getStringToFind();
  Pattern pattern;
  try {
    int flags=Pattern.MULTILINE;
    if (!model.isCaseSensitive()) {
      flags|=Pattern.CASE_INSENSITIVE;
    }
    pattern=Pattern.compile(toFind,flags);
  }
 catch (  PatternSyntaxException e) {
    return toReplace;
  }
  Matcher matcher=pattern.matcher(foundString);
  if (matcher.matches()) {
    try {
      return matcher.replaceAll(StringUtil.unescapeStringCharacters(toReplace));
    }
 catch (    Exception e) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          Messages.showErrorDialog(myProject,FindBundle.message("find.replace.invalid.replacement.string"),FindBundle.message("find.replace.invalid.replacement.string.title"));
        }
      }
);
      return null;
    }
  }
 else {
    return toReplace;
  }
}
