{
  try {
    EditorColorsManager myColorsManager=EditorColorsManager.getInstance();
    myColorsManager.removeAllSchemes();
    for (    MyColorScheme scheme : mySchemes.values()) {
      if (!scheme.isDefault()) {
        scheme.apply();
        myColorsManager.addColorsScheme(scheme.getOriginalScheme());
      }
    }
    EditorColorsScheme originalScheme=mySelectedScheme.getOriginalScheme();
    myColorsManager.setGlobalScheme(originalScheme);
    myColorsManager.saveAllSchemes();
    EditorFactory.getInstance().refreshAllEditors();
    Project[] projects=ProjectManager.getInstance().getOpenProjects();
    for (    Project project1 : projects) {
      updateBreakpoints(project1);
    }
    initAll();
    myPanel.resetSchemesCombo();
    Project[] openProjects=ProjectManager.getInstance().getOpenProjects();
    for (    Project openProject : openProjects) {
      FileStatusManager.getInstance(openProject).fileStatusesChanged();
    }
    myPanel.apply();
  }
 catch (  IOException e) {
    throw new ConfigurationException(e.getMessage());
  }
}
