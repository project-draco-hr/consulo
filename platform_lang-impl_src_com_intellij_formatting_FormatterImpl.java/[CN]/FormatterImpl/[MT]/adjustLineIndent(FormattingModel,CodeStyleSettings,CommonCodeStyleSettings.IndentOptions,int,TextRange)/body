{
  disableFormatting();
  try {
    validateModel(model);
    if (model instanceof PsiBasedFormattingModel) {
      ((PsiBasedFormattingModel)model).canModifyAllWhiteSpaces();
    }
    final FormattingDocumentModel documentModel=model.getDocumentModel();
    final Block block=model.getRootBlock();
    final FormatProcessor processor=buildProcessorAndWrapBlocks(documentModel,block,settings,indentOptions,new FormatTextRanges(affectedRange,true),offset);
    final LeafBlockWrapper blockAfterOffset=processor.getBlockAfter(offset);
    if (blockAfterOffset != null && blockAfterOffset.contains(offset)) {
      return offset;
    }
    WhiteSpace whiteSpace=blockAfterOffset != null ? blockAfterOffset.getWhiteSpace() : processor.getLastWhiteSpace();
    return adjustLineIndent(offset,documentModel,processor,indentOptions,model,whiteSpace,blockAfterOffset != null ? blockAfterOffset.getNode() : null);
  }
 catch (  FormattingModelInconsistencyException e) {
    LOG.error(e);
  }
 finally {
    enableFormatting();
  }
  return offset;
}
