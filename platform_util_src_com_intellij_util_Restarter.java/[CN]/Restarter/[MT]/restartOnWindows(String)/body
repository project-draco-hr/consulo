{
  Kernel32 kernel32=(Kernel32)Native.loadLibrary("kernel32",Kernel32.class);
  Shell32 shell32=(Shell32)Native.loadLibrary("shell32",Shell32.class);
  final int pid=kernel32.GetCurrentProcessId();
  final IntByReference argc=new IntByReference();
  Pointer argv_ptr=shell32.CommandLineToArgvW(kernel32.GetCommandLineW(),argc);
  final String[] argv=argv_ptr.getWideStringArray(0,argc.getValue());
  kernel32.LocalFree(argv_ptr);
  doScheduleRestart(new File(PathManager.getBinPath(),"restarter.exe"),new Consumer<List<String>>(){
    @Override public void consume(    List<String> commands){
      Collections.addAll(commands,String.valueOf(pid),String.valueOf(beforeRestart.length));
      Collections.addAll(commands,beforeRestart);
      Collections.addAll(commands,String.valueOf(argc.getValue()));
      Collections.addAll(commands,argv);
    }
  }
);
  try {
    Thread.sleep(500);
  }
 catch (  InterruptedException ignore) {
  }
}
