{
  final SvnVcs17 vcs=SvnVcs17.getInstance(project);
  final SVNChangelistClient client=vcs.createChangelistClient();
  try {
    final Ref<String> refResult=new Ref<String>();
    final ISVNChangelistHandler handler=new ISVNChangelistHandler(){
      public void handle(      final File path,      final String changelistName){
        if (refResult.isNull() && Comparing.equal(path,file)) {
          refResult.set(changelistName);
        }
      }
    }
;
    if (file.exists()) {
      client.doGetChangeLists(file,null,SVNDepth.EMPTY,handler);
    }
 else     if (file.getParentFile() != null) {
      client.doGetChangeLists(file.getParentFile(),null,SVNDepth.IMMEDIATES,handler);
    }
    return refResult.get();
  }
 catch (  SVNException e) {
    final SVNErrorCode errorCode=e.getErrorMessage().getErrorCode();
    if (SVNErrorCode.WC_NOT_DIRECTORY.equals(errorCode) || SVNErrorCode.WC_NOT_FILE.equals(errorCode)) {
      LOG.debug("Logging only, exception is valid (caught) here",e);
    }
 else {
      LOG.info("Logging only, exception is valid (caught) here",e);
    }
  }
  return null;
}
