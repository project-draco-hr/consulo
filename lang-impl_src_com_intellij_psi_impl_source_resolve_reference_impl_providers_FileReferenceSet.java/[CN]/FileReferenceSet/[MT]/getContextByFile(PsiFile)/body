{
  final Project project=file.getProject();
  final FileContextProvider contextProvider=FileContextProvider.getProvider(file);
  if (contextProvider != null) {
    final PsiFileSystemItem item=contextProvider.getContextFolder(file);
    if (item != null) {
      return Collections.singleton(item);
    }
    if (useIncludingFileAsContext()) {
      final PsiFile contextFile=contextProvider.getContextFile(file);
      if (contextFile != null) {
        return Collections.<PsiFileSystemItem>singleton(contextFile.getParent());
      }
    }
  }
  final VirtualFile virtualFile=file.getVirtualFile();
  if (virtualFile != null) {
    final FileReferenceHelper[] helpers=FileReferenceHelperRegistrar.getHelpers();
    final ArrayList<PsiFileSystemItem> list=new ArrayList<PsiFileSystemItem>();
    for (    FileReferenceHelper helper : helpers) {
      if (helper.isMine(project,virtualFile)) {
        list.addAll(helper.getContexts(project,virtualFile));
      }
    }
    if (list.size() > 0) {
      return list;
    }
    final VirtualFile parent=virtualFile.getParent();
    if (parent != null) {
      final PsiDirectory directory=file.getManager().findDirectory(parent);
      if (directory != null) {
        return Collections.<PsiFileSystemItem>singleton(directory);
      }
    }
  }
  return Collections.emptyList();
}
