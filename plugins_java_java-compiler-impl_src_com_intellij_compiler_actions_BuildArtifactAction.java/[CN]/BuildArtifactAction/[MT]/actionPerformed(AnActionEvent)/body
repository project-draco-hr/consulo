{
  final Project project=getEventProject(e);
  if (project == null)   return;
  final List<Artifact> artifacts=ArtifactUtil.getArtifactWithOutputPaths(project);
  if (artifacts.isEmpty())   return;
  List<ArtifactPopupItem> items=new ArrayList<ArtifactPopupItem>();
  if (artifacts.size() > 1) {
    items.add(0,new ArtifactPopupItem(null,"All Artifacts",EmptyIcon.ICON_16));
  }
  Set<Artifact> selectedArtifacts=new HashSet<Artifact>(ArtifactsWorkspaceSettings.getInstance(project).getArtifactsToBuild());
  TIntArrayList selectedIndices=new TIntArrayList();
  if (Comparing.haveEqualElements(artifacts,selectedArtifacts) && selectedArtifacts.size() > 1) {
    selectedIndices.add(0);
    selectedArtifacts.clear();
  }
  for (  Artifact artifact : artifacts) {
    final ArtifactPopupItem item=new ArtifactPopupItem(artifact,artifact.getName(),artifact.getArtifactType().getIcon());
    if (selectedArtifacts.contains(artifact)) {
      selectedIndices.add(items.size());
    }
    items.add(item);
  }
  final ProjectSettingsService projectSettingsService=ProjectSettingsService.getInstance(project);
  final ArtifactAwareProjectSettingsService settingsService=projectSettingsService instanceof ArtifactAwareProjectSettingsService ? (ArtifactAwareProjectSettingsService)projectSettingsService : null;
  final ChooseArtifactStep step=new ChooseArtifactStep(items,artifacts.get(0),project,settingsService);
  step.setDefaultOptionIndices(selectedIndices.toNativeArray());
  final ListPopupImpl popup=(ListPopupImpl)JBPopupFactory.getInstance().createListPopup(step);
  final KeyStroke editKeyStroke=KeymapUtil.getKeyStroke(CommonShortcuts.getEditSource());
  if (settingsService != null && editKeyStroke != null) {
    popup.registerAction("editArtifact",editKeyStroke,new AbstractAction(){
      @Override public void actionPerformed(      ActionEvent e){
        Object[] values=popup.getSelectedValues();
        popup.cancel();
        settingsService.openArtifactSettings(values.length > 0 ? ((ArtifactPopupItem)values[0]).getArtifact() : null);
      }
    }
);
  }
  popup.showCenteredInCurrentWindow(project);
}
