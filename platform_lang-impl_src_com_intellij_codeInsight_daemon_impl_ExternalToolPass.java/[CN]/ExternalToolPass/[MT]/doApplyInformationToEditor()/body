{
  DaemonCodeAnalyzer daemonCodeAnalyzer=DaemonCodeAnalyzer.getInstance(myProject);
  ((DaemonCodeAnalyzerImpl)daemonCodeAnalyzer).getFileStatusMap().markFileUpToDate(myFile.getProject(),myDocument,getId());
  myDocumentListener=new DocumentListener(){
    @Override public void beforeDocumentChange(    DocumentEvent event){
    }
    @Override public void documentChanged(    DocumentEvent event){
      myDocumentChanged=true;
    }
  }
;
  myDocument.addDocumentListener(myDocumentListener);
  final Runnable r=new Runnable(){
    @Override public void run(){
      if (myDocumentChanged || myProject.isDisposed()) {
        doFinish();
        return;
      }
      doAnnotate();
      ApplicationManager.getApplication().runReadAction(new Runnable(){
        @Override public void run(){
          if (myDocumentChanged || myProject.isDisposed()) {
            doFinish();
            return;
          }
          collectHighlighters();
          ApplicationManager.getApplication().invokeLater(new Runnable(){
            @Override public void run(){
              if (myDocumentChanged || myProject.isDisposed()) {
                doFinish();
                return;
              }
              myDocument.removeDocumentListener(myDocumentListener);
              final List<HighlightInfo> infos=getHighlights();
              UpdateHighlightersUtil.setHighlightersToEditor(myProject,myDocument,myStartOffset,myEndOffset,infos,getColorsScheme(),getId());
            }
          }
);
        }
      }
);
    }
  }
;
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    r.run();
  }
 else {
    ApplicationManager.getApplication().executeOnPooledThread(r);
  }
}
