def _walk(self, relpath, recurse):
    'yields (unencoded, encoded, size)'
    path = self.pathjoiner(self.path, relpath)
    striplen = (len(self.path) + len(os.sep))
    l = []
    if os.path.isdir(path):
        visit = [path]
        while visit:
            p = visit.pop()
            for (f, kind, st) in osutil.listdir(p, stat=True):
                fp = self.pathjoiner(p, f)
                if ((kind == stat.S_IFREG) and (f[(-2):] in ('.d', '.i'))):
                    n = util.pconvert(fp[striplen:])
                    l.append((decodedir(n), n, st.st_size))
                elif ((kind == stat.S_IFDIR) and recurse):
                    visit.append(fp)
    return sorted(l)
