{
  super.visitNewExpression(expression);
  final PsiType type=expression.getType();
  if (!TypeUtils.isJavaLangString(type)) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  if (argumentList == null) {
    return;
  }
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length > 1) {
    return;
  }
  if (arguments.length == 1) {
    final PsiExpression argument=arguments[0];
    final PsiType parameterType=argument.getType();
    if (!TypeUtils.isJavaLangString(parameterType)) {
      return;
    }
    if (ignoreSubstringArguments && hasSubstringArgument(argument)) {
      return;
    }
  }
  registerError(expression,Boolean.valueOf(arguments.length == 0));
}
