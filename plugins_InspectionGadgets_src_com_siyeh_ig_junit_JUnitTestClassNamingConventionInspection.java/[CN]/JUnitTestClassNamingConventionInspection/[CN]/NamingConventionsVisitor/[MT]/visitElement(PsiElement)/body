{
  if (!(element instanceof PsiClass)) {
    super.visitElement(element);
    return;
  }
  PsiClass aClass=(PsiClass)element;
  if (aClass.isInterface() || aClass.isEnum() || aClass.isAnnotationType()) {
    return;
  }
  if (aClass instanceof PsiTypeParameter) {
    return;
  }
  if (aClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    return;
  }
  if (!InheritanceUtil.isInheritor(aClass,"junit.framework.TestCase")) {
    if (!hasJUnit4TestMethods(aClass)) {
      return;
    }
  }
  final String name=aClass.getName();
  if (name == null) {
    return;
  }
  if (isValid(name)) {
    return;
  }
  registerClassError(aClass,name);
}
