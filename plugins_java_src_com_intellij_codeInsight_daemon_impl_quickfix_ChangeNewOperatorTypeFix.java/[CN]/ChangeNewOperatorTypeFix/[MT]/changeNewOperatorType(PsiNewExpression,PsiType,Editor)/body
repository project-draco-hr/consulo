{
  PsiNewExpression newExpression;
  PsiElementFactory factory=JavaPsiFacade.getInstance(originalExpression.getProject()).getElementFactory();
  int caretOffset;
  TextRange selection;
  if (toType instanceof PsiArrayType) {
    final PsiExpression[] originalExpressionArrayDimensions=originalExpression.getArrayDimensions();
    caretOffset=0;
    @NonNls String text="new " + toType.getDeepComponentType().getCanonicalText() + "[";
    if (originalExpressionArrayDimensions.length > 0) {
      text+=originalExpressionArrayDimensions[0].getText();
    }
 else {
      text+="0";
      caretOffset=-2;
    }
    text+="]";
    for (int i=1; i < toType.getArrayDimensions(); i++) {
      text+="[";
      String arrayDimension="";
      if (originalExpressionArrayDimensions.length > i) {
        arrayDimension=originalExpressionArrayDimensions[i].getText();
        text+=arrayDimension;
      }
      text+="]";
      if (caretOffset < 0) {
        caretOffset-=arrayDimension.length() + 2;
      }
    }
    newExpression=(PsiNewExpression)factory.createExpressionFromText(text,originalExpression);
    if (caretOffset < 0) {
      selection=new UnfairTextRange(caretOffset,caretOffset + 1);
    }
 else {
      selection=null;
    }
  }
 else {
    final PsiAnonymousClass anonymousClass=originalExpression.getAnonymousClass();
    newExpression=(PsiNewExpression)factory.createExpressionFromText("new " + toType.getCanonicalText() + "()"+ (anonymousClass != null ? "{}" : ""),originalExpression);
    PsiExpressionList argumentList=originalExpression.getArgumentList();
    if (argumentList == null)     return;
    newExpression.getArgumentList().replace(argumentList);
    if (anonymousClass == null) {
      if (PsiDiamondTypeUtil.canCollapseToDiamond(newExpression,originalExpression,toType)) {
        final PsiElement paramList=PsiDiamondTypeUtil.replaceExplicitWithDiamond(newExpression.getClassOrAnonymousClassReference().getParameterList());
        newExpression=PsiTreeUtil.getParentOfType(paramList,PsiNewExpression.class);
      }
    }
    if (anonymousClass != null) {
      PsiAnonymousClass newAnonymousClass=newExpression.getAnonymousClass();
      final PsiElement childInside=anonymousClass.getLBrace().getNextSibling();
      if (childInside != null) {
        newAnonymousClass.addRange(childInside,anonymousClass.getRBrace().getPrevSibling());
      }
    }
    selection=null;
    caretOffset=-1;
  }
  PsiElement element=originalExpression.replace(newExpression);
  editor.getCaretModel().moveToOffset(element.getTextRange().getEndOffset() + caretOffset);
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  if (selection != null) {
    selection=selection.shiftRight(element.getTextRange().getEndOffset());
    editor.getSelectionModel().setSelection(selection.getStartOffset(),selection.getEndOffset());
  }
}
