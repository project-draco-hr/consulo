{
  if (context.getCompletionChar() == Lookup.COMPLETE_STATEMENT_SELECT_CHAR) {
    return TailType.SMART_COMPLETION;
  }
  if (LookupItem.getDefaultTailType(context.getCompletionChar()) != null) {
    return null;
  }
  LookupElement delegate=getDelegate();
  LookupItem item=as(LookupItem.CLASS_CONDITION_KEY);
  Object object=delegate.getObject();
  if (!CodeInsightSettings.getInstance().AUTOINSERT_PAIR_BRACKET && (object instanceof PsiMethod || object instanceof PsiClass)) {
    return TailType.NONE;
  }
  final PsiExpression enclosing=PsiTreeUtil.getContextOfType(myPosition,PsiExpression.class,true);
  if (enclosing != null && object instanceof PsiElement) {
    final PsiType type=JavaCompletionUtil.getLookupElementType(delegate);
    final TailType itemType=item != null ? item.getTailType() : TailType.NONE;
    TailType cached=itemType;
    int cachedPrior=0;
    if (type != null && type.isValid()) {
      for (      ExpectedTypeInfo info : myExpectedTypeInfos) {
        final PsiType infoType=info.getType();
        if (PsiType.VOID.equals(infoType)) {
          cached=info.getTailType();
          continue;
        }
        if (infoType.equals(type) && cachedPrior < 2) {
          cachedPrior=2;
          cached=info.getTailType();
        }
 else         if (cachedPrior == 2 && cached != info.getTailType()) {
          cachedPrior=3;
          cached=itemType;
        }
 else         if (((infoType.isAssignableFrom(type) && info.getKind() == ExpectedTypeInfo.TYPE_OR_SUBTYPE) || (type.isAssignableFrom(infoType) && info.getKind() == ExpectedTypeInfo.TYPE_OR_SUPERTYPE)) && cachedPrior < 1) {
          cachedPrior=1;
          cached=info.getTailType();
        }
 else         if (cachedPrior == 1 && cached != info.getTailType()) {
          cached=itemType;
        }
      }
    }
 else {
      if (myExpectedTypeInfos.size() == 1) {
        cached=myExpectedTypeInfos.iterator().next().getTailType();
      }
    }
    return cached;
  }
  return null;
}
