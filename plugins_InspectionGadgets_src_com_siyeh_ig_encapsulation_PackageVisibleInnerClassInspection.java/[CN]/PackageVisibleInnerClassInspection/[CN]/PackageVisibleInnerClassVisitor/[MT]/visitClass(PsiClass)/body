{
  if (aClass.hasModifierProperty(PsiModifier.PUBLIC) || aClass.hasModifierProperty(PsiModifier.PROTECTED) || aClass.hasModifierProperty(PsiModifier.PRIVATE)) {
    return;
  }
  if (!ClassUtils.isInnerClass(aClass)) {
    return;
  }
  if (ignoreEnums && aClass.isEnum()) {
    return;
  }
  final PsiElement parent=aClass.getParent();
  if (parent instanceof PsiTypeParameterList) {
    return;
  }
  registerClassError(aClass);
}
