{
  final PsiElement position=parameters.getPosition();
  final ExpectedTypeInfo[] expectedTypes=PsiJavaPatterns.psiElement().beforeLeaf(PsiJavaPatterns.psiElement().withText(".")).accepts(position) ? ExpectedTypeInfo.EMPTY_ARRAY : JavaSmartCompletionContributor.getExpectedTypes(parameters);
  final CompletionType type=parameters.getCompletionType();
  final boolean smart=type == CompletionType.SMART;
  CompletionSorter sorter=CompletionSorter.defaultSorter(parameters);
  if (!smart && JavaSmartCompletionContributor.AFTER_NEW.accepts(position)) {
    sorter=sorter.weighBefore("liftShorter",new LookupElementWeigher("expectedAfterNew"){
      @NotNull @Override public Comparable weigh(      @NotNull LookupElement element){
        return -((Enum)PreferExpectedTypeWeigher.weigh(element,expectedTypes)).ordinal();
      }
    }
);
  }
  sorter=sorter.weighAfter("negativeStats",new PreferLocalVariablesLiteralsAndAnnoMethodsWeigher(type));
  if (!smart) {
    sorter=preferStatics(sorter,position);
  }
  if (smart) {
    sorter=sorter.weighAfter("negativeStats",new PreferDefaultTypeWeigher(expectedTypes,parameters));
  }
  sorter=recursion(sorter,parameters,expectedTypes);
  return result.withRelevanceSorter(sorter);
}
