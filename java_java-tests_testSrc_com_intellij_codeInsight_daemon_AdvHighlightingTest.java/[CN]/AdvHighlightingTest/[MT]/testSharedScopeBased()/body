{
  NamedScope xScope=new NamedScope("xxx",new PatternPackageSet("x..*",PatternPackageSet.SCOPE_ANY,null));
  NamedScope utilScope=new NamedScope("util",new PatternPackageSet("java.util.*",PatternPackageSet.SCOPE_LIBRARY,null));
  NamedScopesHolder scopeManager=DependencyValidationManager.getInstance(getProject());
  scopeManager.addScope(xScope);
  scopeManager.addScope(utilScope);
  EditorColorsManager manager=EditorColorsManager.getInstance();
  EditorColorsScheme scheme=(EditorColorsScheme)manager.getGlobalScheme().clone();
  manager.addColorsScheme(scheme);
  EditorColorsManager.getInstance().setGlobalScheme(scheme);
  TextAttributesKey xKey=ColorAndFontOptions.getScopeTextAttributeKey(xScope.getName());
  TextAttributes xAttributes=new TextAttributes(Color.cyan,Color.darkGray,Color.blue,null,Font.ITALIC);
  scheme.setAttributes(xKey,xAttributes);
  TextAttributesKey utilKey=ColorAndFontOptions.getScopeTextAttributeKey(utilScope.getName());
  TextAttributes utilAttributes=new TextAttributes(Color.gray,Color.magenta,Color.orange,EffectType.STRIKEOUT,Font.BOLD);
  scheme.setAttributes(utilKey,utilAttributes);
  NamedScope projectScope=PackagesScopesProvider.getInstance(myProject).getProjectProductionScope();
  TextAttributesKey projectKey=ColorAndFontOptions.getScopeTextAttributeKey(projectScope.getName());
  TextAttributes projectAttributes=new TextAttributes(null,null,Color.blue,EffectType.BOXED,Font.ITALIC);
  scheme.setAttributes(projectKey,projectAttributes);
  try {
    testFile(BASE_PATH + "/scopeBased/x/Shared.java").projectRoot(BASE_PATH + "/scopeBased").checkSymbolNames().test();
  }
  finally {
    scopeManager.removeAllSets();
  }
}
