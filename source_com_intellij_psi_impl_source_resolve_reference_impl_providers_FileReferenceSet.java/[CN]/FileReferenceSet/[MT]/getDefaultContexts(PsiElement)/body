{
  Project project=element.getProject();
  PsiFile file=element.getContainingFile();
  if (file == null) {
    LOG.assertTrue(false,"Invalid element: " + element);
  }
  if (!file.isPhysical())   file=file.getOriginalFile();
  if (file == null)   return Collections.emptyList();
  if (myOptions != null) {
    final Function<PsiFile,PsiElement> value=DEFAULT_PATH_EVALUATOR_OPTION.getValue(myOptions);
    if (value != null) {
      final PsiElement result=value.fun(file);
      return result == null ? Collections.<PsiElement>emptyList() : Collections.singleton(result);
    }
  }
  PsiElement result=null;
  if (isAbsolutePathReference()) {
    result=getAbsoluteTopLevelDirLocation(file);
  }
 else {
    if (myUseIncludingJspFileAsContext) {
      JspFile jspFile=PsiUtil.getJspFile(file);
      if (jspFile != null) {
        final JspContextManager manager=JspContextManager.getInstance(project);
        JspFile contextFile=manager.getContextFile(jspFile);
        Set<JspFile> visited=new HashSet<JspFile>();
        while (contextFile != null && !visited.contains(jspFile)) {
          visited.add(jspFile);
          jspFile=contextFile;
          contextFile=manager.getContextFile(jspFile);
        }
        file=jspFile;
      }
    }
    final List<FileReferenceHelper> helpers=FileReferenceHelperRegistrar.getHelpers();
    for (    final FileReferenceHelper helper : helpers) {
      final PsiFileSystemItem item=helper.getContainingDirectory(file);
      if (item != null) {
        result=item;
        break;
      }
    }
  }
  return result == null ? Collections.<PsiElement>emptyList() : Collections.singleton(result);
}
