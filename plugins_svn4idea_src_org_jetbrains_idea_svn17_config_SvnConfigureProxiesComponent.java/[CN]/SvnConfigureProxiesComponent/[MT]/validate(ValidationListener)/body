{
  final Ref<String> errorMessageRef=new Ref<String>();
  final Set<String> checkSet=new HashSet<String>();
  final AmbiguousPatternsFinder ambiguousPatternsFinder=new AmbiguousPatternsFinder();
  for (int i=0; i < myRoot.getChildCount(); i++) {
    final MyNode node=(MyNode)myRoot.getChildAt(i);
    final GroupConfigurable groupConfigurable=(GroupConfigurable)node.getConfigurable();
    final String groupName=groupConfigurable.getEditableObject().getName();
    if (checkSet.contains(groupName)) {
      listener.onError(SvnBundle.message("dialog.edit.http.proxies.settings.error.same.group.names.text",groupName),myComponent,true);
      return false;
    }
    checkSet.add(groupName);
  }
  for (int i=0; i < myRoot.getChildCount(); i++) {
    final MyNode node=(MyNode)myRoot.getChildAt(i);
    final GroupConfigurable groupConfigurable=(GroupConfigurable)node.getConfigurable();
    groupConfigurable.applyImpl();
    if (!groupConfigurable.validate(errorMessageRef)) {
      listener.onError(errorMessageRef.get(),myComponent,false);
      return false;
    }
    if (!groupConfigurable.getEditableObject().isDefault()) {
      final String groupName=groupConfigurable.getEditableObject().getName();
      final List<String> urls=groupConfigurable.getRepositories();
      ambiguousPatternsFinder.acceptUrls(groupName,urls);
    }
  }
  if (!ambiguousPatternsFinder.isValid(errorMessageRef)) {
    listener.onError(errorMessageRef.get(),myComponent,false);
    return false;
  }
  return true;
}
