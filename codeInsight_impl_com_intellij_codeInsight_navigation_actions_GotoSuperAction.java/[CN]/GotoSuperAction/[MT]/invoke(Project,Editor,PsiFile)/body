{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  int offset=editor.getCaretModel().getOffset();
  final Language language=PsiUtilBase.getLanguageAtOffset(file,offset);
  final CodeInsightActionHandler codeInsightActionHandler=CodeInsightActions.GOTO_SUPER.forLanguage(language);
  if (codeInsightActionHandler != null) {
    codeInsightActionHandler.invoke(project,editor,file);
    return;
  }
  PsiElement[] superElements=findSuperElements(file,offset);
  if (superElements == null || superElements.length == 0)   return;
  if (superElements.length == 1) {
    PsiElement superElement=superElements[0].getNavigationElement();
    OpenFileDescriptor descriptor=new OpenFileDescriptor(project,superElement.getContainingFile().getVirtualFile(),superElement.getTextOffset());
    FileEditorManager.getInstance(project).openTextEditor(descriptor,true);
  }
 else {
    String title=superElements[0] instanceof PsiMethod ? CodeInsightBundle.message("goto.super.method.chooser.title") : CodeInsightBundle.message("goto.super.class.chooser.title");
    NavigationUtil.getPsiElementPopup(superElements,title).showInBestPositionFor(editor);
  }
}
