{
  if (myIgnoreSpecifiedFileRadioButton.isSelected()) {
    if (myFilesToIgnore == null) {
      return new IgnoredFileBean[]{IgnoredBeanFactory.ignoreFile(myIgnoreFileTextField.getText().replace(File.separatorChar,'/'))};
    }
    return getBeansFromFilesToIgnore(false);
  }
  if (myIgnoreAllFilesUnderRadioButton.isSelected()) {
    if (getDirectoriesToIgnore() > 1) {
      return getBeansFromFilesToIgnore(true);
    }
    String path=myIgnoreDirectoryTextField.getText();
    if (new File(path).isAbsolute()) {
      final String relPath=ChangesUtil.getProjectRelativePath(myProject,new File(path));
      if (relPath != null) {
        path=relPath;
      }
    }
    return new IgnoredFileBean[]{IgnoredBeanFactory.ignoreUnderDirectory(FileUtil.toSystemIndependentName(path))};
  }
  if (myIgnoreAllFilesMatchingRadioButton.isSelected()) {
    return new IgnoredFileBean[]{IgnoredBeanFactory.withMask(myIgnoreMaskTextField.getText())};
  }
  return new IgnoredFileBean[0];
}
