{
  Object obj=item.getObject();
  if (obj instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)obj;
    PsiParameter[] parameters=method.getParameterList().getParameters();
    Editor editor=context.editor;
    Document document=editor.getDocument();
    if (completionChar == Lookup.REPLACE_SELECT_CHAR) {
      handleOverwrite(editor.getCaretModel().getOffset(),document);
    }
    CaretModel caretModel=editor.getCaretModel();
    int offset=startOffset + method.getName().length();
    PsiFile file=PsiDocumentManager.getInstance(method.getProject()).getPsiFile(document);
    PsiElement elementAt=file.findElementAt(startOffset);
    PsiElement parent=elementAt != null ? elementAt.getParent() : null;
    if (parent instanceof GrReferenceExpression && ((GrReferenceExpression)parent).getDotTokenType() == GroovyElementTypes.mMEMBER_POINTER)     return;
    if (parent instanceof GrAnnotationNameValuePair || parent.getParent() instanceof GrAnnotationNameValuePair) {
      document.insertString(offset," = ");
      caretModel.moveToOffset(offset + 3);
      return;
    }
    if (parameters.length == 0) {
      if (offset == document.getTextLength() || document.getCharsSequence().charAt(offset) != '(') {
        document.insertString(offset,"()");
      }
      caretModel.moveToOffset(offset + 2);
    }
 else {
      if (parameters.length == 1 && parameters[0].getType().getCanonicalText().equals("groovy.lang.Closure")) {
        document.insertString(offset," {}");
        caretModel.moveToOffset(offset + 2);
      }
 else {
        PsiDocumentManager docManager=PsiDocumentManager.getInstance(method.getProject());
        docManager.commitDocument(document);
        PsiFile psiFile=docManager.getPsiFile(document);
        if (isExpressionStatement(psiFile,startOffset) && PsiType.VOID.equals(method.getReturnType())) {
          document.insertString(offset," ");
        }
 else {
          document.insertString(offset,"()");
        }
        caretModel.moveToOffset(offset + 1);
      }
    }
    return;
  }
 else   if (obj instanceof String && !"assert".equals(obj)) {
    Editor editor=context.editor;
    Document document=editor.getDocument();
    if (completionChar == Lookup.REPLACE_SELECT_CHAR) {
      handleOverwrite(editor.getCaretModel().getOffset(),document);
    }
    return;
  }
  addTailType(item);
  super.handleInsert(context,startOffset,data,item,signatureSelected,completionChar);
}
