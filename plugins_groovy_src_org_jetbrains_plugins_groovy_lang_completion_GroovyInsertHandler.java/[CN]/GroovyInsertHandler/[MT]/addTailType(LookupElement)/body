{
  if ("default".equals(item.toString())) {
    return TailType.CASE_COLON;
  }
  @NonNls String[] exprs={"true","false","null","super","this"};
  @NonNls String[] withSemi={"break","continue"};
  @NonNls String[] withSpace={"private","public","protected","static","transient","abstract","native","volatile","strictfp","boolean","byte","char","short","int","float","long","double","void","new","try","while","with","switch","for","return","throw","throws","assert","synchronized","package","class","interface","enum","extends","implements","case","catch","finally","else","instanceof","import","final"};
  if (Arrays.asList(withSemi).contains(item.toString())) {
    return TailType.SEMICOLON;
  }
  if (Arrays.asList(exprs).contains(item.toString())) {
    return TailType.NONE;
  }
  if (Arrays.asList(withSpace).contains(item.toString())) {
    return TailType.SPACE;
  }
  return TailType.NONE;
}
