{
  this.filePath=filePath;
  final Document document=EditorFactory.getInstance().createDocument(fileText);
  int caretIndex=fileText.indexOf(CARET_MARKER);
  int selStartIndex=fileText.indexOf(SELECTION_START_MARKER);
  int selEndIndex=fileText.indexOf(SELECTION_END_MARKER);
  int blockStartIndex=fileText.indexOf(BLOCK_START_MARKER);
  int blockEndIndex=fileText.indexOf(BLOCK_END_MARKER);
  caretMarker=caretIndex >= 0 ? document.createRangeMarker(caretIndex,caretIndex + CARET_MARKER.length()) : null;
  if (selStartIndex >= 0 || selEndIndex >= 0) {
    blockSelection=false;
    selStartMarker=selStartIndex >= 0 ? document.createRangeMarker(selStartIndex,selStartIndex + SELECTION_START_MARKER.length()) : null;
    selEndMarker=selEndIndex >= 0 ? document.createRangeMarker(selEndIndex,selEndIndex + SELECTION_END_MARKER.length()) : null;
  }
 else {
    selStartMarker=blockStartIndex >= 0 ? document.createRangeMarker(blockStartIndex,blockStartIndex + BLOCK_START_MARKER.length()) : null;
    selEndMarker=blockEndIndex >= 0 ? document.createRangeMarker(blockEndIndex,blockEndIndex + BLOCK_END_MARKER.length()) : null;
    blockSelection=selStartMarker != null || selEndMarker != null;
  }
  new WriteCommandAction(project){
    @Override protected void run(    Result result) throws Exception {
      if (caretMarker != null) {
        document.deleteString(caretMarker.getStartOffset(),caretMarker.getEndOffset());
      }
      if (selStartMarker != null) {
        document.deleteString(selStartMarker.getStartOffset(),selStartMarker.getEndOffset());
      }
      if (selEndMarker != null) {
        document.deleteString(selEndMarker.getStartOffset(),selEndMarker.getEndOffset());
      }
    }
  }
.execute();
  newFileText=document.getText();
}
