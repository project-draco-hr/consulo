{
  Project project=file.getProject();
  FileBasedIndex.getInstance().ensureUpToDate(StubUpdatingIndex.INDEX_ID,project,null);
  assertTrue(!DumbServiceImpl.getInstance(project).isDumb());
  ((DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(project)).getFileStatusMap().allowDirt(allowDirt);
  try {
    TextEditorHighlightingPassRegistrarEx registrar=TextEditorHighlightingPassRegistrarEx.getInstanceEx(project);
    final List<TextEditorHighlightingPass> passes=registrar.instantiatePasses(file,editor,toIgnore);
    final ProgressIndicator progress=new DaemonProgressIndicator();
    ProgressManager.getInstance().runProcess(new Runnable(){
      public void run(){
        for (        TextEditorHighlightingPass pass : passes) {
          pass.collectInformation(progress);
        }
        for (        TextEditorHighlightingPass pass : passes) {
          pass.applyInformationToEditor();
        }
      }
    }
,progress);
    List<HighlightInfo> infos=DaemonCodeAnalyzerImpl.getHighlights(editor.getDocument(),project);
    return infos == null ? Collections.<HighlightInfo>emptyList() : new ArrayList<HighlightInfo>(infos);
  }
  finally {
    ((DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(project)).getFileStatusMap().allowDirt(true);
  }
}
