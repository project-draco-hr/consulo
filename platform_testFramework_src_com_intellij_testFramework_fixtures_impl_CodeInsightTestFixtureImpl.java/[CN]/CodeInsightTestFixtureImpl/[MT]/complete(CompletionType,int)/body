{
  assertInitialized();
  myEmptyLookup=false;
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      CommandProcessor.getInstance().executeCommand(getProject(),new Runnable(){
        @Override public void run(){
          final CodeCompletionHandlerBase handler=new CodeCompletionHandlerBase(type){
            @Override protected PsiFile createFileCopy(            final PsiFile file){
              final PsiFile copy=super.createFileCopy(file);
              if (myFileContext != null) {
                final PsiElement contextCopy=myFileContext.copy();
                final PsiFile containingFile=contextCopy.getContainingFile();
                if (containingFile instanceof PsiFileImpl) {
                  ((PsiFileImpl)containingFile).setOriginalFile(myFileContext.getContainingFile());
                }
                setContext(copy,contextCopy);
              }
              return copy;
            }
            @Override protected void completionFinished(            int offset1,            int offset2,            CompletionProgressIndicator indicator,            LookupElement[] items,            boolean hasModifiers){
              myEmptyLookup=items.length == 0;
              super.completionFinished(offset1,offset2,indicator,items,hasModifiers);
            }
          }
;
          Editor editor=getCompletionEditor();
          handler.invokeCompletion(getProject(),editor,invocationCount,false);
          PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
        }
      }
,null,null);
    }
  }
);
  return getLookupElements();
}
