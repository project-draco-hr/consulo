{
  assertInitialized();
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      final EditorActionManager actionManager=EditorActionManager.getInstance();
      if (c == '\b') {
        performEditorAction(IdeActions.ACTION_EDITOR_BACKSPACE);
        return;
      }
      if (c == '\n') {
        if (_performEditorAction(IdeActions.ACTION_CHOOSE_LOOKUP_ITEM)) {
          return;
        }
        performEditorAction(IdeActions.ACTION_EDITOR_ENTER);
        return;
      }
      if (c == '\t') {
        if (_performEditorAction(IdeActions.ACTION_CHOOSE_LOOKUP_ITEM_REPLACE)) {
          return;
        }
        if (_performEditorAction(IdeActions.ACTION_EDITOR_TAB)) {
          return;
        }
      }
      CommandProcessor.getInstance().executeCommand(getProject(),new Runnable(){
        @Override public void run(){
          CommandProcessor.getInstance().setCurrentCommandGroupId(myEditor.getDocument());
          actionManager.getTypedAction().actionPerformed(getEditor(),c,getEditorDataContext());
        }
      }
,null,DocCommandGroupId.noneGroupId(myEditor.getDocument()));
    }
  }
);
}
