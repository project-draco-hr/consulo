{
  movedComponent.getParent().getChildren().remove(movedComponent);
  movedComponent.setParent(container);
  List<RadComponent> children=container.getChildren();
  if (insertBefore == null) {
    children.add(movedComponent);
  }
 else {
    children.add(children.indexOf(insertBefore),movedComponent);
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      XmlTag xmlTag=movedComponent.getTag();
      XmlTag parentTag=container.getTag();
      XmlTag nextTag=insertBefore == null ? null : insertBefore.getTag();
      XmlTag newXmlTag;
      if (nextTag == null) {
        newXmlTag=parentTag.addSubTag(xmlTag,false);
      }
 else {
        newXmlTag=(XmlTag)parentTag.addBefore(xmlTag,nextTag);
      }
      xmlTag.delete();
      movedComponent.setTag(newXmlTag);
    }
  }
);
  XmlFile xmlFile=container.getRoot().getClientProperty(XML_FILE_KEY);
  PsiDocumentManager psiDocumentManager=PsiDocumentManager.getInstance(xmlFile.getProject());
  psiDocumentManager.commitDocument(psiDocumentManager.getDocument(xmlFile));
  PropertyParser propertyParser=container.getRoot().getClientProperty(PropertyParser.KEY);
  propertyParser.load(movedComponent);
}
