{
  List<RadComponent> children=component.getChildren();
  int size=children.size();
  for (int componentIndex=0, viewIndex=0; componentIndex < size; componentIndex++) {
    RadViewComponent childComponent=(RadViewComponent)children.get(componentIndex);
    int childViewCount=childComponent.getViewInfoCount();
    if (childViewCount == 0) {
      if (!(childComponent instanceof RadRequestFocus)) {
        updateComponent(childComponent,new ViewInfo(childComponent.getMetaModel().getTarget(),null,0,0,0,0),nativeComponent,left,top);
      }
    }
 else     if (childViewCount == 1) {
      updateComponent(childComponent,views.get(viewIndex),nativeComponent,left,top);
    }
 else {
      Rectangle bounds=null;
      for (int subViewIndex=0; subViewIndex < childViewCount; subViewIndex++) {
        ViewInfo view=views.get(viewIndex + subViewIndex);
        Rectangle viewBounds=new Rectangle(view.getLeft(),view.getTop(),view.getRight() - view.getLeft(),view.getBottom() - view.getTop());
        if (bounds == null) {
          bounds=viewBounds;
        }
 else {
          bounds=bounds.union(viewBounds);
        }
      }
      updateComponent(childComponent,new ViewInfo(childComponent.getMetaModel().getTarget(),null,bounds.x,bounds.y,bounds.x + bounds.width,bounds.y + bounds.height),nativeComponent,left,top);
    }
    viewIndex+=childViewCount;
  }
}
