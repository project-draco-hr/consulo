{
  final Module[] allModules=ModuleManager.getInstance(myProject).getModules();
  final Set<VirtualFile> allDirs=new OrderedSet<VirtualFile>();
  final Set<VirtualFile> testOutputDirs=new java.util.HashSet<VirtualFile>();
  final Set<VirtualFile> productionOutputDirs=new java.util.HashSet<VirtualFile>();
  for (  Module module : allModules) {
    ModuleCompilerPathsManager moduleCompilerPathsManager=ModuleCompilerPathsManager.getInstance(module);
    final VirtualFile output=moduleCompilerPathsManager.getCompilerOutput(ProductionContentFolderTypeProvider.getInstance());
    if (output != null && output.isValid()) {
      allDirs.add(output);
      productionOutputDirs.add(output);
    }
    final VirtualFile testsOutput=moduleCompilerPathsManager.getCompilerOutput(TestContentFolderTypeProvider.getInstance());
    if (testsOutput != null && testsOutput.isValid()) {
      allDirs.add(testsOutput);
      testOutputDirs.add(testsOutput);
    }
  }
  myOutputDirectories=VfsUtil.toVirtualFileArray(allDirs);
  testOutputDirs.removeAll(productionOutputDirs);
  myTestOutputDirectories=Collections.unmodifiableSet(testOutputDirs);
}
