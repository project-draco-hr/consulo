{
  if (ApplicationManager.getApplication().isUnitTestMode() && !errors.isEmpty()) {
    throw new RuntimeException(errors.get(0));
  }
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (myProject.isDisposed())       return;
      if (errors.isEmpty() && warnings.isEmpty()) {
        removeContents(null,myProject,tabDisplayName);
        return;
      }
      final ErrorViewPanel errorTreeView=new ErrorViewPanel(myProject);
      try {
        openMessagesView(errorTreeView,myProject,tabDisplayName);
      }
 catch (      NullPointerException e) {
        final StringBuilder builder=new StringBuilder();
        builder.append("Exceptions occurred:");
        for (        final Exception exception : errors) {
          builder.append("\n");
          builder.append(exception.getMessage());
        }
        builder.append("Warnings occurred:");
        for (        final Exception exception : warnings) {
          builder.append("\n");
          builder.append(exception.getMessage());
        }
        Messages.showErrorDialog(builder.toString(),"Execution Error");
        return;
      }
      addMessages(MessageCategory.ERROR,errors,errorTreeView,file,"Unknown Error");
      addMessages(MessageCategory.WARNING,warnings,errorTreeView,file,"Unknown Warning");
      ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.MESSAGES_WINDOW).activate(null);
    }
  }
);
}
