{
  if (ApplicationManager.getApplication().isUnitTestMode() && !exceptionList.isEmpty()) {
    throw new RuntimeException(exceptionList.get(0));
  }
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (myProject.isDisposed())       return;
      if (exceptionList.isEmpty()) {
        removeContents(null,myProject,tabDisplayName);
        return;
      }
      final RailsErrorViewPanel errorTreeView=new RailsErrorViewPanel(myProject);
      try {
        openMessagesView(errorTreeView,myProject,tabDisplayName);
      }
 catch (      NullPointerException e) {
        final StringBuilder builder=new StringBuilder();
        builder.append("Exceptions occured:");
        for (        final Exception exception : exceptionList) {
          builder.append("\n");
          builder.append(exception.getMessage());
        }
        Messages.showErrorDialog(builder.toString(),"Execution Error");
        return;
      }
      for (      final Exception exception : exceptionList) {
        String[] messages=StringUtil.splitByLines(exception.getMessage());
        if (messages.length == 0)         messages=new String[]{"Unknown Error"};
        errorTreeView.addMessage(MessageCategory.ERROR,messages,file,-1,-1,null);
      }
      ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.MESSAGES_WINDOW).activate(null);
    }
  }
);
}
