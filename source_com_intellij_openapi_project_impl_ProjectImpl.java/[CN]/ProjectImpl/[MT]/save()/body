{
  ShutDownTracker.getInstance().registerStopperThread(Thread.currentThread());
  try {
    if (!ourSaveSettingsInProgress) {
      try {
        ourSaveSettingsInProgress=true;
        startLoggingUsedMacros();
        saveSettingsSavingComponents();
        final Module[] modules=ModuleManager.getInstance(ProjectImpl.this).getModules();
        final ReadonlyStatusHandler.OperationStatus operationStatus=ensureConfigFilesWritable(modules);
        if (operationStatus.hasReadonlyFiles()) {
          MessagesEx.error(this,"Could not save project:\n" + operationStatus.getReadonlyFilesMessage()).showLater();
          return;
        }
        final Exception[] exception=new Exception[]{null};
        CommandProcessor.getInstance().executeCommand(this,new Runnable(){
          public void run(){
            for (int i=0; i < modules.length; i++) {
              ModuleImpl module=(ModuleImpl)modules[i];
              try {
                module._save();
              }
 catch (              Exception e) {
                exception[0]=e;
                return;
              }
            }
            try {
              _save();
            }
 catch (            Exception e) {
              exception[0]=e;
              return;
            }
          }
        }
,"Save settings",null);
        if (exception[0] != null) {
          LOG.info(exception[0]);
          MessagesEx.error(this,"Could not save project:\n" + exception[0].getMessage()).showLater();
        }
      }
  finally {
        endLoggingUsedMacros();
        ourSaveSettingsInProgress=false;
      }
    }
  }
  finally {
    ShutDownTracker.getInstance().unregisterStopperThread(Thread.currentThread());
  }
}
