{
  String fieldName=getEnteredName();
  String errorString=null;
  if ("".equals(fieldName)) {
    errorString=RefactoringBundle.message("no.field.name.specified");
  }
 else   if (!JavaPsiFacade.getInstance(myProject).getNameHelper().isIdentifier(fieldName)) {
    errorString=RefactoringMessageUtil.getIncorrectIdentifierMessage(fieldName);
  }
  if (errorString != null) {
    CommonRefactoringUtil.showErrorMessage(IntroduceFieldHandler.REFACTORING_NAME,errorString,HelpID.INTRODUCE_FIELD,myProject);
    return;
  }
  PsiField oldField=myParentClass.findFieldByName(fieldName,true);
  if (oldField != null) {
    int answer=Messages.showYesNoDialog(myProject,RefactoringBundle.message("field.exists",fieldName,oldField.getContainingClass().getQualifiedName()),IntroduceFieldHandler.REFACTORING_NAME,Messages.getWarningIcon());
    if (answer != 0) {
      return;
    }
  }
  ourLastCbFinalState=myCbFinal.isSelected();
  ourLastInitializerPlace=getInitializerPlace();
  JavaRefactoringSettings.getInstance().INTRODUCE_FIELD_VISIBILITY=getFieldVisibility();
  myNameSuggestionsManager.nameSelected();
  super.doOKAction();
}
