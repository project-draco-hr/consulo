{
  super.visitNewExpression(newExpression);
  final PsiJavaCodeReferenceElement classReference=newExpression.getClassReference();
  if (classReference == null) {
    return;
  }
  final PsiElement referent=classReference.resolve();
  if (referent == null) {
    return;
  }
  if (!(referent instanceof PsiClass)) {
    return;
  }
  if (!((PsiClass)referent).hasTypeParameters()) {
    return;
  }
  if (newExpression.getTypeArgumentList() != null) {
    return;
  }
  registerError(classReference);
}
