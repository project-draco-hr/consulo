{
  int outCount=mxGraphModel.getDirectedEdgeCount(model,cell,true);
  int inCount=mxGraphModel.getDirectedEdgeCount(model,cell,false);
  StringBuffer error=new StringBuffer();
  Object value=model.getValue(cell);
  if (multiplicities != null) {
    for (int i=0; i < multiplicities.length; i++) {
      mxMultiplicity rule=multiplicities[i];
      int max=rule.getMaxValue();
      if (rule.source && mxUtils.isNode(value,rule.type,rule.attr,rule.value) && ((max == 0 && outCount > 0) || (rule.min == 1 && outCount == 0) || (max == 1 && outCount > 1))) {
        error.append(rule.countError + '\n');
      }
 else       if (!rule.source && mxUtils.isNode(value,rule.type,rule.attr,rule.value) && ((max == 0 && inCount > 0) || (rule.min == 1 && inCount == 0) || (max == 1 && inCount > 1))) {
        error.append(rule.countError + '\n');
      }
    }
  }
  return (error.length() > 0) ? error.toString() : null;
}
