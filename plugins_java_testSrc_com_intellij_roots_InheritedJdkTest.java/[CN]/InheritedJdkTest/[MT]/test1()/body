{
  final Sdk jdk=IdeaTestUtil.getMockJdk17("java 1.4");
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      ProjectSdkTable.getInstance().addSdk(jdk);
    }
  }
);
  final ModuleRootManager rootManager=ModuleRootManager.getInstance(myModule);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final ProjectRootManagerEx rootManagerEx=ProjectRootManagerEx.getInstanceEx(myProject);
      rootManagerEx.setProjectSdkName(jdk.getName());
      ModuleRootModificationUtil.setSdkInherited(myModule);
    }
  }
);
  assertTrue("JDK is inherited after explicit inheritSdk()",rootManager.isSdkInherited());
  assertEquals("Correct jdk inherited",jdk,rootManager.getSdk());
  ModuleRootModificationUtil.setModuleSdk(myModule,null);
  assertFalse("JDK is not inherited after setJdk(null)",rootManager.isSdkInherited());
  assertNull("No JDK assigned",rootManager.getSdk());
  final Sdk jdk1=IdeaTestUtil.getMockJdk17("jjj");
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      ProjectSdkTable.getInstance().addSdk(jdk1);
    }
  }
);
  ModuleRootModificationUtil.setModuleSdk(myModule,jdk1);
  assertFalse("JDK is not inherited after setJdk(jdk1)",rootManager.isSdkInherited());
  assertEquals("jdk1 is assigned",jdk1,rootManager.getSdk());
}
