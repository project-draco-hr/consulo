{
  ProjectFileIndex projectFileIndex=myProjectRootManager.getFileIndex();
  Module module=projectFileIndex.getModuleForFile(vFile);
  if (module != null) {
    boolean includeTests=projectFileIndex.isInTestSourceContent(vFile) || !projectFileIndex.isContentJavaSourceFile(vFile);
    return GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module,includeTests);
  }
 else {
    List<Module> modulesLibraryUsedIn=new ArrayList<Module>();
    List<OrderEntry> orderEntries=projectFileIndex.getOrderEntriesForFile(vFile);
    for (    OrderEntry entry : orderEntries) {
      ProgressManager.checkCanceled();
      if (entry instanceof JdkOrderEntry) {
        return ((ProjectRootManagerEx)myProjectRootManager).getScopeForJdk((JdkOrderEntry)entry);
      }
      if (entry instanceof LibraryOrderEntry || entry instanceof ModuleOrderEntry) {
        modulesLibraryUsedIn.add(entry.getOwnerModule());
      }
    }
    return ((ProjectRootManagerEx)myProjectRootManager).getScopeForLibraryUsedIn(modulesLibraryUsedIn);
  }
}
