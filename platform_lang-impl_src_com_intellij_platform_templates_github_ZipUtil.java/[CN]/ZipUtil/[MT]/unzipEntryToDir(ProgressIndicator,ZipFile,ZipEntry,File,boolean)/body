{
  final char pathDelimiterChar='/';
  String relativeExtractPath=createRelativeExtractPath(zipEntry,pathDelimiterChar,singleTopLevelDir);
  int ind=relativeExtractPath.lastIndexOf(pathDelimiterChar);
  final String relativeParentDir;
  final String name;
  if (ind != -1) {
    relativeParentDir=relativeExtractPath.substring(0,ind);
    name=relativeExtractPath.substring(ind + 1);
  }
 else {
    relativeParentDir="";
    name=relativeExtractPath;
  }
  if (zipEntry.isDirectory()) {
    return;
  }
  if (progress != null) {
    progress.setText("Extracting " + relativeExtractPath + " ...");
  }
  File parentDir=new File(extractToDir,relativeParentDir);
  if (!parentDir.exists() || !parentDir.isDirectory()) {
    boolean created=parentDir.mkdirs();
    if (!created) {
      throw new RuntimeException("Unable to create dir: '" + parentDir + "'!");
    }
  }
  File child=new File(parentDir,name);
  InputStream stream=zipFile.getInputStream(zipEntry);
  FileOutputStream fileOutputStream=new FileOutputStream(child);
  try {
    FileUtil.copy(stream,fileOutputStream);
  }
  finally {
    fileOutputStream.close();
    stream.close();
  }
  LOG.info("Extract: " + relativeExtractPath);
}
