{
  final ArrayList<AbstractTreeNode<Object>> copyChildren=new ArrayList<AbstractTreeNode<Object>>();
  AbstractTreeNode<Object> copy=new AbstractTreeNode<Object>(myProject,source.getUserObject()){
    @NotNull @Override public Collection<? extends AbstractTreeNode> getChildren(){
      return copyChildren;
    }
    @Override protected void update(    PresentationData presentation){
    }
  }
;
  for (int i=0; i < source.getChildCount(); i++) {
    final TreeNode treeNode=source.getChildAt(i);
    if (treeNode instanceof DefaultMutableTreeNode) {
      final DefaultMutableTreeNode sourceChild=(DefaultMutableTreeNode)treeNode;
      replicate(sourceChild,copy,copyChildren);
    }
  }
  if (checkNavigatable(copy)) {
    destinationChildren.add(copy);
    copy.setParent(destination);
  }
}
