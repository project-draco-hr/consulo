{
  final DefaultMutableTreeNode root=new DefaultMutableTreeNode();
  final List<DefaultMutableTreeNode> platformDeviceNodes=new ArrayList<DefaultMutableTreeNode>();
  final List<DefaultMutableTreeNode> addOnDeviceNodes=new ArrayList<DefaultMutableTreeNode>();
  final List<DefaultMutableTreeNode> customDeviceNodes=new ArrayList<DefaultMutableTreeNode>();
  final List<LayoutDevice> devices=myLayoutDeviceManager.getCombinedList();
  for (  LayoutDevice device : devices) {
    final DefaultMutableTreeNode deviceNode=new DefaultMutableTreeNode(device);
    for (    LayoutDeviceConfiguration config : device.getConfigurations()) {
      final DefaultMutableTreeNode child=new DefaultMutableTreeNode(config);
      deviceNode.add(child);
    }
switch (device.getType()) {
case PLATFORM:
      platformDeviceNodes.add(deviceNode);
    break;
case ADD_ON:
  addOnDeviceNodes.add(deviceNode);
break;
case CUSTOM:
customDeviceNodes.add(deviceNode);
break;
}
}
if (platformDeviceNodes.size() > 0) {
final DefaultMutableTreeNode platformRoot=new DefaultMutableTreeNode("Platform");
for (DefaultMutableTreeNode node : platformDeviceNodes) {
platformRoot.add(node);
}
root.add(platformRoot);
}
if (addOnDeviceNodes.size() > 0) {
final DefaultMutableTreeNode addOnRoot=new DefaultMutableTreeNode("Add-on");
for (DefaultMutableTreeNode node : addOnDeviceNodes) {
addOnRoot.add(node);
}
root.add(addOnRoot);
}
if (customDeviceNodes.size() > 0) {
myCustomCategoryRoot=new DefaultMutableTreeNode(CUSTOM_CATEGORY_NAME);
for (DefaultMutableTreeNode node : customDeviceNodes) {
myCustomCategoryRoot.add(node);
}
root.add(myCustomCategoryRoot);
}
myTable.setModel(new ListTreeTableModelOnColumns(root,new ColumnInfo[]{new ColumnInfo("Name"){
@Override public Class getColumnClass(){
return TreeTableModel.class;
}
@Override public Object valueOf(Object o){
final Object object=((DefaultMutableTreeNode)o).getUserObject();
if (object instanceof LayoutDevice || object instanceof LayoutDeviceConfiguration) {
return object;
}
return null;
}
}
,new ColumnInfo(CONFIGURATION_COLUMN_NAME){
@Override public Object valueOf(Object o){
final Object object=((DefaultMutableTreeNode)o).getUserObject();
if (object instanceof LayoutDeviceConfiguration) {
return object;
}
return null;
}
}
}));
myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
@Override public void valueChanged(ListSelectionEvent e){
updateButtons();
}
}
);
myTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
TreeUtil.expandAll(myTable.getTree());
if (selection != null) {
final Pair<Integer,DefaultMutableTreeNode> pair=findObjectInTree(root,selection);
if (pair != null) {
selectRowInTableAndScroll(pair.first);
}
}
 else if (myCustomCategoryRoot != null) {
final Pair<Integer,DefaultMutableTreeNode> pair=findObjectInTree(root,myCustomCategoryRoot.getUserObject());
if (pair != null) {
selectRowInTableAndScroll(pair.first);
}
}
}
