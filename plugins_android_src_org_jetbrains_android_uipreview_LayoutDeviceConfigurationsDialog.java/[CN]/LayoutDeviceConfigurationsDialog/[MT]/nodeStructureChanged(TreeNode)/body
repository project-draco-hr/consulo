{
  final DefaultMutableTreeNode selectedNode=getSelectedNode();
  final Object selectedObj=selectedNode != null ? selectedNode.getUserObject() : null;
  final TreeTableTree tree=myTable.getTree();
  final DefaultTreeModel model=(DefaultTreeModel)tree.getModel();
  final Set<DefaultMutableTreeNode> expandedNodes=new HashSet<DefaultMutableTreeNode>();
  final TreeNode root=(TreeNode)tree.getModel().getRoot();
  for (int i=0; i < root.getChildCount(); i++) {
    final TreeNode categoryNode=root.getChildAt(i);
    for (int j=0; j < categoryNode.getChildCount(); j++) {
      final DefaultMutableTreeNode deviceNode=(DefaultMutableTreeNode)categoryNode.getChildAt(j);
      if (tree.isExpanded(new TreePath(deviceNode.getPath()))) {
        expandedNodes.add(deviceNode);
      }
    }
  }
  model.nodeChanged(node);
  model.nodeStructureChanged(node);
  for (  DefaultMutableTreeNode expandedNode : expandedNodes) {
    tree.expandPath(new TreePath(expandedNode.getPath()));
  }
  if (selectedObj != null) {
    final Pair<Integer,DefaultMutableTreeNode> pair=findObjectInTree(root,selectedObj);
    if (pair != null) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          selectRowInTable(pair.first);
        }
      }
);
    }
  }
}
