{
  myCbUseFQClassNames.setSelected(mySettings.USE_FQ_CLASS_NAMES);
  myCbUseFQClassNamesInJavaDoc.setSelected(mySettings.USE_FQ_CLASS_NAMES_IN_JAVADOC);
  myCbUseSingleClassImports.setSelected(mySettings.USE_SINGLE_CLASS_IMPORTS);
  myCbInsertInnerClassImports.setSelected(mySettings.INSERT_INNER_CLASS_IMPORTS);
  myClassCountField.setText(Integer.toString(mySettings.CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND));
  myNamesCountField.setText(Integer.toString(mySettings.NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND));
  myCbAddUnambiguousImportsOnTheFly.setSelected(mySettings.ADD_UNAMBIGIOUS_IMPORTS_ON_THE_FLY);
  myCbOptimizeImportsOnTheFly.setSelected(mySettings.OPTIMIZE_IMPORTS_ON_THE_FLY);
  myImportLayoutList.copyFrom(mySettings.IMPORT_LAYOUT_TABLE);
  myPackageList.copyFrom(mySettings.PACKAGES_TO_USE_IMPORT_ON_DEMAND);
  myCbLayoutStaticImportsSeparately.setSelected(mySettings.LAYOUT_STATIC_IMPORTS_SEPARATELY);
  AbstractTableModel model=(AbstractTableModel)myImportLayoutTable.getModel();
  model.fireTableDataChanged();
  model=(AbstractTableModel)myPackageTable.getModel();
  model.fireTableDataChanged();
  if (myImportLayoutTable.getRowCount() > 0) {
    myImportLayoutTable.getSelectionModel().setSelectionInterval(0,0);
  }
  if (myPackageTable.getRowCount() > 0) {
    myPackageTable.getSelectionModel().setSelectionInterval(0,0);
  }
  if (mySettings.JSP_PREFER_COMMA_SEPARATED_IMPORT_LIST) {
    myJspImportCommaSeparated.doClick();
  }
 else {
    myJspOneImportPerDirective.doClick();
  }
  updateButtons();
}
