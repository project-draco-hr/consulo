{
  List<Node> runningLeaves=ContainerUtilRt.newArrayListWithExpectedSize(1);
  for (  Node node : myRunningNodes) {
    if (!node.hasRunningChildren()) {
      runningLeaves.add(node);
    }
  }
  if (runningLeaves.isEmpty()) {
    throw new RuntimeException("No running leaves found, running nodes: " + myRunningNodes);
  }
  if (runningLeaves.size() == 1) {
    return runningLeaves.iterator().next();
  }
  List<Node> commonPathToRoot=null;
  for (  Node leaf : runningLeaves) {
    List<Node> pathToRoot=leaf.getAncestorsFromParentToRoot();
    if (commonPathToRoot == null) {
      commonPathToRoot=pathToRoot;
    }
 else {
      commonPathToRoot=intersectPathsToRoot(commonPathToRoot,pathToRoot);
    }
  }
  if (commonPathToRoot == null || commonPathToRoot.isEmpty()) {
    throw new RuntimeException("Unexpected common path to root: " + commonPathToRoot + ", running leaves: "+ runningLeaves);
  }
  return commonPathToRoot.get(0);
}
