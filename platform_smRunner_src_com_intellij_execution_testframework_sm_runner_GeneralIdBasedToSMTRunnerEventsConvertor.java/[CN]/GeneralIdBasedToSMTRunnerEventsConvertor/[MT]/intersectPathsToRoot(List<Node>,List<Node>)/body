{
  final int minSize=Math.min(pathToRoot1.size(),pathToRoot2.size());
  final int shift1=pathToRoot1.size() - minSize;
  final int shift2=pathToRoot2.size() - minSize;
  int commonSize=0;
  for (int i=0; i < minSize; i++) {
    Node node1=pathToRoot1.get(i + shift1);
    Node node2=pathToRoot2.get(i + shift2);
    if (node1 == node2) {
      commonSize=minSize - i;
      break;
    }
  }
  return pathToRoot1.subList(pathToRoot1.size() - commonSize,pathToRoot1.size());
}
