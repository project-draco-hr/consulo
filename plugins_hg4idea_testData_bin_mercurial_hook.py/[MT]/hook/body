def hook(ui, repo, name, throw=False, **args):
    r = False
    oldstdout = (-1)
    if _redirect:
        stdoutno = sys.__stdout__.fileno()
        stderrno = sys.__stderr__.fileno()
        if ((stdoutno >= 0) and (stderrno >= 0)):
            oldstdout = os.dup(stdoutno)
            os.dup2(stderrno, stdoutno)
    try:
        for (hname, cmd) in ui.configitems('hooks'):
            if ((hname.split('.')[0] != name) or (not cmd)):
                continue
            if hasattr(cmd, '__call__'):
                r = (_pythonhook(ui, repo, name, hname, cmd, args, throw) or r)
            elif cmd.startswith('python:'):
                if (cmd.count(':') >= 2):
                    (path, cmd) = cmd[7:].rsplit(':', 1)
                    mod = extensions.loadpath(path, ('hghook.%s' % hname))
                    hookfn = getattr(mod, cmd)
                else:
                    hookfn = cmd[7:].strip()
                r = (_pythonhook(ui, repo, name, hname, hookfn, args, throw) or r)
            else:
                r = (_exthook(ui, repo, hname, cmd, args, throw) or r)
    finally:
        if (_redirect and (oldstdout >= 0)):
            os.dup2(oldstdout, stdoutno)
            os.close(oldstdout)
    return r
