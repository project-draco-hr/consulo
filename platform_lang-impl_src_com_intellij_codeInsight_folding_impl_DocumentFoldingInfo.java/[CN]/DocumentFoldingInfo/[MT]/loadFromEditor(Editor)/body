{
  ApplicationManager.getApplication().assertIsDispatchThread();
  LOG.assertTrue(!editor.isDisposed());
  clear();
  PsiDocumentManager documentManager=PsiDocumentManager.getInstance(myProject);
  documentManager.commitDocument(editor.getDocument());
  PsiFile file=documentManager.getPsiFile(editor.getDocument());
  SmartPointerManager smartPointerManager=SmartPointerManager.getInstance(myProject);
  EditorFoldingInfo info=EditorFoldingInfo.get(editor);
  FoldRegion[] foldRegions=editor.getFoldingModel().getAllFoldRegions();
  for (  FoldRegion region : foldRegions) {
    PsiElement element=info.getPsiElement(region);
    boolean expanded=region.isExpanded();
    boolean collapseByDefault=element != null && FoldingPolicy.isCollapseByDefault(element) && !FoldingUtil.caretInsideRange(editor,TextRange.create(region));
    if (collapseByDefault == expanded || element == null) {
      FoldingInfo fi=new FoldingInfo(region.getPlaceholderText(),expanded);
      if (element != null) {
        myPsiElements.add(smartPointerManager.createSmartPsiElementPointer(element,file));
        element.putUserData(FOLDING_INFO_KEY,fi);
      }
 else       if (region.isValid()) {
        myRangeMarkers.add(region);
        region.putUserData(FOLDING_INFO_KEY,fi);
      }
    }
  }
}
