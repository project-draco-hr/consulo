{
  if (!myNavigateToReference) {
    if (myElement instanceof Navigatable && ((Navigatable)myElement).canNavigate()) {
      ((Navigatable)myElement).navigate(requestFocus);
    }
    return;
  }
  final PsiReference firstReference=myReferences.get(0);
  final PsiElement element=firstReference.getElement();
  if (element == null)   return;
  final PsiElement callElement=element.getParent();
  if (callElement instanceof Navigatable && ((Navigatable)callElement).canNavigate()) {
    ((Navigatable)callElement).navigate(requestFocus);
  }
 else {
    final PsiFile psiFile=callElement.getContainingFile();
    if (psiFile == null || psiFile.getVirtualFile() == null)     return;
    FileEditorManager.getInstance(myProject).openFile(psiFile.getVirtualFile(),requestFocus);
  }
  Editor editor=PsiUtilBase.findEditor(callElement);
  if (editor != null) {
    HighlightManager highlightManager=HighlightManager.getInstance(myProject);
    EditorColorsManager colorManager=EditorColorsManager.getInstance();
    TextAttributes attributes=colorManager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);
    ArrayList<RangeHighlighter> highlighters=new ArrayList<RangeHighlighter>();
    for (    PsiReference psiReference : myReferences) {
      final PsiElement eachElement=psiReference.getElement();
      if (eachElement != null) {
        final PsiElement eachMethodCall=eachElement.getParent();
        if (eachMethodCall != null) {
          final TextRange textRange=eachMethodCall.getTextRange();
          highlightManager.addRangeHighlight(editor,textRange.getStartOffset(),textRange.getEndOffset(),attributes,false,highlighters);
        }
      }
    }
  }
}
