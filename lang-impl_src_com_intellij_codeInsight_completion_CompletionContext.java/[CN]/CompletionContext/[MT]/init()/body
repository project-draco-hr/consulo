{
  setIdentifierEndOffset(getSelectionEndOffset());
  PsiElement element=file.findElementAt(getSelectionEndOffset());
  if (element == null)   return;
  final PsiReference reference=file.findReferenceAt(getSelectionEndOffset());
  if (reference != null) {
    if (reference instanceof PsiJavaCodeReferenceElement) {
      setIdentifierEndOffset(element.getParent().getTextRange().getEndOffset());
    }
 else {
      setIdentifierEndOffset(reference.getElement().getTextRange().getStartOffset() + reference.getRangeInElement().getEndOffset());
    }
    element=file.findElementAt(getIdentifierEndOffset());
  }
 else   if (isWord(element)) {
    if (element instanceof PsiIdentifier && element.getParent() instanceof PsiJavaCodeReferenceElement) {
      setIdentifierEndOffset(element.getParent().getTextRange().getEndOffset());
    }
 else {
      setIdentifierEndOffset(element.getTextRange().getEndOffset());
    }
    element=file.findElementAt(getIdentifierEndOffset());
    if (element == null)     return;
  }
  if (element instanceof PsiWhiteSpace && (!element.textContains('\n') || CodeStyleSettingsManager.getInstance(project).getCurrentSettings().METHOD_PARAMETERS_LPAREN_ON_NEXT_LINE)) {
    element=file.findElementAt(element.getTextRange().getEndOffset());
  }
  if (element instanceof PsiJavaToken && ((PsiJavaToken)element).getTokenType() == JavaTokenType.LPARENTH) {
    if (element.getParent() instanceof PsiExpressionList || ".".equals(file.findElementAt(getSelectionEndOffset() - 1).getText()) || PlatformPatterns.psiElement().afterLeaf(PlatformPatterns.psiElement(JavaTokenType.NEW_KEYWORD)).accepts(element)) {
      setLparenthOffset(element.getTextRange().getStartOffset());
      PsiElement list=element.getParent();
      PsiElement last=list.getLastChild();
      if (last instanceof PsiJavaToken && ((PsiJavaToken)last).getTokenType() == JavaTokenType.RPARENTH) {
        setRparenthOffset(last.getTextRange().getStartOffset());
      }
      setArgListEndOffset(list.getTextRange().getEndOffset());
      if (element instanceof PsiExpressionList)       hasArgs=((PsiExpressionList)element).getExpressions().length > 0;
    }
  }
}
