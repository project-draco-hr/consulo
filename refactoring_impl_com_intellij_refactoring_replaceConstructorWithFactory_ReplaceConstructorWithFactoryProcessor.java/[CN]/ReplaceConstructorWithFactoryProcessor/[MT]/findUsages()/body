{
  final PsiSearchHelper searchHelper=myManager.getSearchHelper();
  final PsiReference[] references;
  GlobalSearchScope projectScope=GlobalSearchScope.projectScope(myProject);
  if (myConstructor != null) {
    references=searchHelper.findReferences(myConstructor,projectScope,false);
  }
 else {
    references=searchHelper.findReferences(myOriginalClass,projectScope,false);
  }
  ArrayList<UsageInfo> usages=new ArrayList<UsageInfo>();
  myNonNewConstructorUsages=new ArrayList<PsiElement>();
  for (  PsiReference reference : references) {
    PsiElement element=reference.getElement();
    if (element.getParent() instanceof PsiNewExpression) {
      usages.add(new UsageInfo(element.getParent()));
    }
 else     if ("super".equals(element.getText()) || "this".equals(element.getText())) {
      myNonNewConstructorUsages.add(element);
    }
 else     if (element instanceof PsiMethod && ((PsiMethod)element).isConstructor()) {
      myNonNewConstructorUsages.add(element);
    }
 else     if (element instanceof PsiClass) {
      myNonNewConstructorUsages.add(element);
    }
  }
  return usages.toArray(new UsageInfo[usages.size()]);
}
