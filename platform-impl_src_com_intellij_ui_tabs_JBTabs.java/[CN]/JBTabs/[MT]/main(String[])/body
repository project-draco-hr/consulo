{
  System.out.println("JBTabs.main");
  IconLoader.activate();
  final JFrame frame=new JFrame();
  frame.getContentPane().setLayout(new BorderLayout());
  final int[] count=new int[1];
  final JBTabs tabs=new JBTabs(null,new Disposable(){
    public void dispose(){
    }
  }
){
    protected JComponent createToolbarComponent(    final TabInfo tabInfo){
      final JLabel jLabel=new JLabel("X" + (++count[0])){
        protected void paintComponent(        final Graphics g){
          super.paintComponent(g);
          System.out.println(tabInfo.getText());
        }
      }
;
      jLabel.setBorder(new LineBorder(Color.red));
      return jLabel;
    }
  }
;
  frame.getContentPane().add(tabs,BorderLayout.CENTER);
  JPanel south=new JPanel(new FlowLayout());
  final JCheckBox f=new JCheckBox("Focused");
  f.addItemListener(new ItemListener(){
    public void itemStateChanged(    final ItemEvent e){
      tabs.setFocused(f.isSelected());
    }
  }
);
  south.add(f);
  final JCheckBox v=new JCheckBox("Vertical");
  v.addItemListener(new ItemListener(){
    public void itemStateChanged(    final ItemEvent e){
      tabs.setSideComponentVertical(v.isSelected());
    }
  }
);
  south.add(v);
  final JCheckBox row=new JCheckBox("Single row",true);
  row.addItemListener(new ItemListener(){
    public void itemStateChanged(    final ItemEvent e){
      tabs.setSingleRow(row.isSelected());
    }
  }
);
  south.add(row);
  frame.getContentPane().add(south,BorderLayout.SOUTH);
  tabs.addListener(new TabsListener(){
    public void selectionChanged(    final TabInfo oldSelection,    final TabInfo newSelection){
      System.out.println("TabsWithActions.selectionChanged old=" + oldSelection + " new="+ newSelection);
    }
  }
);
  tabs.addTab(new TabInfo(new JTree())).setText("Tree1").setActions(new DefaultActionGroup(),null).setIcon(IconLoader.getIcon("/debugger/frame.png"));
  tabs.addTab(new TabInfo(new JTree())).setText("Tree2");
  tabs.addTab(new TabInfo(new JTable())).setText("Table 1").setActions(new DefaultActionGroup(),null);
  tabs.addTab(new TabInfo(new JTable())).setText("Table 2").setActions(new DefaultActionGroup(),null);
  tabs.addTab(new TabInfo(new JTable())).setText("Table 3").setActions(new DefaultActionGroup(),null);
  tabs.addTab(new TabInfo(new JTable())).setText("Table 4").setActions(new DefaultActionGroup(),null);
  tabs.addTab(new TabInfo(new JTable())).setText("Table 5").setActions(new DefaultActionGroup(),null);
  tabs.addTab(new TabInfo(new JTable())).setText("Table 6").setActions(new DefaultActionGroup(),null);
  tabs.addTab(new TabInfo(new JTable())).setText("Table 7").setActions(new DefaultActionGroup(),null);
  tabs.addTab(new TabInfo(new JTable())).setText("Table 8").setActions(new DefaultActionGroup(),null);
  tabs.addTab(new TabInfo(new JTable())).setText("Table 9").setActions(new DefaultActionGroup(),null);
  tabs.setBorder(new EmptyBorder(6,6,20,6));
  frame.setBounds(200,200,300,200);
  frame.show();
}
