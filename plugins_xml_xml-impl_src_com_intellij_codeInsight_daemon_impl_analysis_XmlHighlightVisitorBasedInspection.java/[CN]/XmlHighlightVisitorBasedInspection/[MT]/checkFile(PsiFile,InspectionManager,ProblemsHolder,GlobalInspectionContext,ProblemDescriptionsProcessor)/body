{
  HighlightInfoHolder myHolder=new HighlightInfoHolder(file,HighlightInfoFilter.EMPTY_ARRAY){
    @Override public boolean add(    @Nullable HighlightInfo info){
      if (info != null) {
        GlobalInspectionUtil.createProblem(file,info,new TextRange(info.startOffset,info.endOffset),null,manager,problemDescriptionsProcessor,globalContext);
      }
      return true;
    }
  }
;
  final XmlHighlightVisitor highlightVisitor=new XmlHighlightVisitor();
  highlightVisitor.analyze(file,true,myHolder,new Runnable(){
    @Override public void run(){
      file.accept(new XmlRecursiveElementVisitor(){
        @Override public void visitElement(        PsiElement element){
          highlightVisitor.visit(element);
          super.visitElement(element);
        }
      }
);
    }
  }
);
}
