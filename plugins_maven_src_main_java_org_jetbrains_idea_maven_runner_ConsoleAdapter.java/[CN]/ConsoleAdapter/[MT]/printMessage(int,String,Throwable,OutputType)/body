{
  if (level == MavenLogUtil.LEVEL_AUTO) {
    level=MavenLogUtil.getLevel(string);
    if (!isSuppressed(level)) {
      doPrint(string,type);
    }
  }
 else {
    doPrint(MavenLogUtil.composeLine(level,string),type);
  }
  if (level == MavenLogUtil.LEVEL_FATAL) {
    setOutputPaused(false);
  }
  if (throwable != null) {
    String message=null;
    Throwable temp=throwable;
    while (temp != null) {
      if (temp instanceof AbstractMojoExecutionException) {
        message=appendExecutionFailureMessage(message,temp.getMessage());
        message=appendExecutionFailureMessage(message,((AbstractMojoExecutionException)temp).getLongMessage());
        if (temp.getCause() != null) {
          message=appendExecutionFailureMessage(message,temp.getCause().getMessage());
        }
        break;
      }
      temp=temp.getCause();
    }
    if (message == null)     message=throwable.getMessage();
    if (message != null) {
      message+=MavenLogUtil.LINE_SEPARATOR;
      doPrint(MavenLogUtil.LINE_SEPARATOR + MavenLogUtil.composeLine(MavenLogUtil.LEVEL_ERROR,message),type);
    }
    if (myPrintStrackTrace) {
      StringWriter writer=new StringWriter();
      PrintWriter printWriter=new PrintWriter(writer);
      try {
        throwable.printStackTrace(printWriter);
        doPrint(MavenLogUtil.LINE_SEPARATOR + writer.getBuffer().toString(),OutputType.ERROR);
      }
  finally {
        printWriter.close();
      }
    }
 else {
      doPrint(MavenLogUtil.LINE_SEPARATOR + "To view full stack traces, please go to the Maven Settings->General and check the 'Print Exception Stack Traces' box.",type);
    }
  }
}
