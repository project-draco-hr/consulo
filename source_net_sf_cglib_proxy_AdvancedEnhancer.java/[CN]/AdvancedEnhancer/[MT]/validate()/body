{
  if (classOnly ^ (callbacks == null)) {
    if (classOnly) {
      throw new IllegalStateException("createClass does not accept callbacks");
    }
 else {
      throw new IllegalStateException("Callbacks are required");
    }
  }
  if (classOnly && (callbackTypes == null)) {
    throw new IllegalStateException("Callback types are required");
  }
  if (callbacks != null && callbackTypes != null) {
    if (callbacks.length != callbackTypes.length) {
      throw new IllegalStateException("Lengths of callback and callback types array must be the same");
    }
    Type[] check=CallbackInfo.determineTypes(callbacks);
    for (int i=0; i < check.length; i++) {
      if (!check[i].equals(callbackTypes[i])) {
        throw new IllegalStateException("Callback " + check[i] + " is not assignable to "+ callbackTypes[i]);
      }
    }
  }
 else   if (callbacks != null) {
    callbackTypes=CallbackInfo.determineTypes(callbacks);
  }
  if (filter == null) {
    if (callbackTypes.length > 1) {
      throw new IllegalStateException("Multiple callback types possible but no filter specified");
    }
    filter=ALL_ZERO;
  }
  if (interfaces != null) {
    for (int i=0; i < interfaces.length; i++) {
      if (interfaces[i] == null) {
        throw new IllegalStateException("Interfaces cannot be null");
      }
      if (!interfaces[i].isInterface()) {
        throw new IllegalStateException(interfaces[i] + " is not an interface");
      }
    }
  }
}
