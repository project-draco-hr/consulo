{
  final Ref<T> result=Ref.create();
  final Ref<Throwable> error=Ref.create();
  Future<?> future=executorService.submit(new Runnable(){
    @Override public void run(){
      ProgressManager.getInstance().executeProcessUnderProgress(new Runnable(){
        @Override public void run(){
          try {
            result.set(callable.call());
          }
 catch (          Throwable t) {
            error.set(t);
          }
        }
      }
,indicator);
    }
  }
);
  while (true) {
    try {
      indicator.checkCanceled();
    }
 catch (    ProcessCanceledException e) {
      future.cancel(true);
      throw e;
    }
    try {
      future.get(200,TimeUnit.MILLISECONDS);
      ExceptionUtil.rethrowAll(error.get());
      return result.get();
    }
 catch (    TimeoutException ignored) {
    }
  }
}
