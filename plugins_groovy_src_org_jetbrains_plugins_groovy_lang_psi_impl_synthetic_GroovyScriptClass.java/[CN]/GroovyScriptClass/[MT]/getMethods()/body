{
  return CachedValuesManager.getManager(getProject()).getCachedValue(this,new CachedValueProvider<PsiMethod[]>(){
    @Nullable @Override public Result<PsiMethod[]> compute(){
      PsiMethod[] methods=myFile.getMethods();
      byte hasMain=1;
      byte hasRun=1;
      for (      PsiMethod method : methods) {
        if (method.isEquivalentTo(myMainMethod)) {
          hasMain=0;
        }
 else         if (method.isEquivalentTo(myRunMethod))         hasRun=0;
      }
      if (hasMain + hasRun == 0)       return Result.create(methods,myFile);
      PsiMethod[] result=new PsiMethod[methods.length + hasMain + hasRun];
      if (hasMain == 1)       result[0]=myMainMethod;
      if (hasRun == 1)       result[hasMain]=myRunMethod;
      System.arraycopy(methods,0,result,hasMain + hasRun,methods.length);
      return Result.create(result,myFile);
    }
  }
);
}
