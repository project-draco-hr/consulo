{
  boolean found=false;
  for (  Module module : moduleChunk.getNodes()) {
    JavaModuleExtension extension=ModuleUtilCore.getExtension(module,JavaModuleExtension.class);
    if (extension != null) {
      found=true;
      break;
    }
  }
  if (!found) {
    return;
  }
  final BackendCompiler backEndCompiler=getBackEndCompiler();
  final BackendCompilerWrapper wrapper=new BackendCompilerWrapper(moduleChunk,myProject,Arrays.asList(files),(CompileContextEx)context,backEndCompiler,sink);
  try {
    if (CompileDriver.ourDebugMode) {
      System.out.println("Starting java compiler; with backend compiler: " + backEndCompiler.getClass().getName());
    }
    wrapper.compile();
  }
 catch (  CompilerException e) {
    if (CompileDriver.ourDebugMode) {
      e.printStackTrace();
    }
    context.addMessage(CompilerMessageCategory.ERROR,ExceptionUtil.getThrowableText(e),null,-1,-1);
    LOGGER.info(e);
  }
catch (  CacheCorruptedException e) {
    if (CompileDriver.ourDebugMode) {
      e.printStackTrace();
    }
    LOGGER.info(e);
    context.requestRebuildNextTime(e.getMessage());
  }
}
