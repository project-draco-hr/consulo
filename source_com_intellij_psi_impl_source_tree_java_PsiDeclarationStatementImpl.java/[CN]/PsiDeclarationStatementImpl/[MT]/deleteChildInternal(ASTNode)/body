{
  if (DECLARED_ELEMENT_BIT_SET.isInSet(child.getElementType())) {
    PsiElement[] declaredElements=getDeclaredElements();
    int length=declaredElements.length;
    if (length > 0) {
      if (length == 1) {
        getTreeParent().deleteChildInternal(this);
        return;
      }
 else {
        if (SourceTreeToPsiMap.psiElementToTree(declaredElements[length - 1]) == child) {
          removeCommaBefore(child);
          final LeafElement semicolon=Factory.createSingleLeafElement(SEMICOLON,new char[]{';'},0,1,SharedImplUtil.findCharTableByTree(this),getManager());
          ChangeUtil.addChild((CompositeElement)SourceTreeToPsiMap.psiElementToTree(declaredElements[length - 2]),semicolon,null);
        }
 else         if (SourceTreeToPsiMap.psiElementToTree(declaredElements[0]) == child) {
          CompositeElement next=(CompositeElement)SourceTreeToPsiMap.psiElementToTree(declaredElements[1]);
          ASTNode copyChild=((TreeElement)child).copyElement();
          ASTNode nameChild=((CompositeElement)copyChild).findChildByRole(ChildRole.NAME);
          removeCommaBefore(next);
          next.addInternal((TreeElement)copyChild.getFirstChildNode(),(TreeElement)nameChild.getTreePrev(),null,Boolean.FALSE);
        }
 else {
          removeCommaBefore(child);
        }
      }
    }
  }
  super.deleteChildInternal(child);
}
