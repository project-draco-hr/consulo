{
  if (!isMine(psiElement))   return false;
  final Configuration configuration=Configuration.getInstance();
  final HashMap<MethodParameterInjection,Object> injectionsMap=new HashMap<MethodParameterInjection,Object>();
  final ArrayList<PsiAnnotation> annotations=new ArrayList<PsiAnnotation>();
  final PsiLiteralExpression host=(PsiLiteralExpression)psiElement;
  final Project project=host.getProject();
  collectInjections(host,configuration,injectionsMap,annotations);
  if (injectionsMap.isEmpty() || !annotations.isEmpty())   return false;
  final ArrayList<MethodParameterInjection> injections=new ArrayList<MethodParameterInjection>(injectionsMap.keySet());
  final MethodParameterInjection injection=injections.get(0);
  final AbstractInjectionPanel panel=new MethodParameterPanel(injection,project);
  panel.reset();
  final DialogBuilder builder=new DialogBuilder(project);
  builder.addOkAction();
  builder.addCancelAction();
  builder.setCenterPanel(panel.getComponent());
  builder.setTitle(EditInjectionSettingsAction.EDIT_INJECTION_TITLE);
  builder.setOkOperation(new Runnable(){
    public void run(){
      panel.apply();
      configuration.configurationModified();
      FileContentUtil.reparseFiles(project,Collections.<VirtualFile>emptyList(),true);
      builder.getWindow().dispose();
    }
  }
);
  builder.show();
  return true;
}
