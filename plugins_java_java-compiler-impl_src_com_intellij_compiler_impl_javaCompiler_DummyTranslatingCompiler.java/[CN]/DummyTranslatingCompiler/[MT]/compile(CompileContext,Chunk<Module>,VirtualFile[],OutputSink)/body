{
  final List<File> filesToRefresh=new ArrayList<File>();
  final Map<String,Collection<OutputItem>> outputs=new HashMap<String,Collection<OutputItem>>();
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      for (      final VirtualFile file : files) {
        final Module module=context.getModuleByFile(file);
        try {
          final VirtualFile outputDir=context.getModuleOutputDirectory(module);
          if (outputDir != null) {
            final String outputDirPath=outputDir.getPath();
            final File compiledFile=doCompile(outputDir,file);
            filesToRefresh.add(compiledFile);
            Collection<OutputItem> collection=outputs.get(outputDirPath);
            if (collection == null) {
              collection=new ArrayList<OutputItem>();
              outputs.put(outputDirPath,collection);
            }
            collection.add(new OutputItemImpl(FileUtil.toSystemIndependentName(compiledFile.getPath()),file));
          }
        }
 catch (        IOException e) {
          context.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),null,0,0);
        }
      }
    }
  }
);
  CompilerUtil.refreshIOFiles(filesToRefresh);
  for (  Map.Entry<String,Collection<OutputItem>> entry : outputs.entrySet()) {
    sink.add(entry.getKey(),entry.getValue(),VirtualFile.EMPTY_ARRAY);
  }
}
