{
  super(list);
  list.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      if (e.getValueIsAdjusting())       return;
      updateSelection(list);
    }
  }
);
  final ListDataListener l=new ListDataListener(){
    public void intervalAdded(    ListDataEvent e){
      updateSelection(list);
    }
    public void intervalRemoved(    ListDataEvent e){
      updateSelection(list);
    }
    public void contentsChanged(    ListDataEvent e){
      updateSelection(list);
    }
  }
;
  list.getModel().addListDataListener(l);
  list.addPropertyChangeListener("model",new PropertyChangeListener(){
    @Override public void propertyChange(    PropertyChangeEvent evt){
      updateSelection(list);
      if (evt.getOldValue() != null) {
        ((ListModel)evt.getOldValue()).removeListDataListener(l);
      }
      if (evt.getNewValue() != null) {
        ((ListModel)evt.getNewValue()).addListDataListener(l);
      }
    }
  }
);
}
