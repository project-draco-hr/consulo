{
  myValueExternalizer=valueExternalizer;
  myStorageFile=storageFile;
  myKeyDescriptor=keyDescriptor;
  myValueContainerExternalizer=new ValueContainerExternalizer<Value>(valueExternalizer);
  myMap=new PersistentHashMap<Key,ValueContainerImpl<Value>>(myStorageFile,myKeyDescriptor,myValueContainerExternalizer);
  myCache=new ObjectCache<Key,ValueContainerImpl<Value>>(1024);
  myCache.addDeletedPairsListener(new ObjectCache.DeletedPairsListener(){
    public void objectRemoved(    final Object key,    final Object value){
      final Key _key=(Key)key;
      if (_key.equals(myKeyBeingRemoved)) {
        return;
      }
      try {
        if (myMap != null) {
          myMap.put(_key,(ValueContainerImpl<Value>)value);
        }
      }
 catch (      IOException e) {
        LOG.error(e);
      }
    }
  }
);
}
