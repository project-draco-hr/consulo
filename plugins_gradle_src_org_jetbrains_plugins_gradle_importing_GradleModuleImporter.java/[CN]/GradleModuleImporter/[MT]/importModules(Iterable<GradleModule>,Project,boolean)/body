{
  if (!project.isInitialized()) {
    myAlarm.addRequest(new ImportModulesTask(project,modules,recursive),PROJECT_INITIALISATION_DELAY_MS);
    return;
  }
  UIUtil.invokeLaterIfNeeded(new Runnable(){
    @Override public void run(){
      removeExistingModulesConfigs(modules);
      Application application=ApplicationManager.getApplication();
      final Map<GradleModule,Module> moduleMappings=new HashMap<GradleModule,Module>();
      application.runWriteAction(new Runnable(){
        @Override public void run(){
          final ModuleManager moduleManager=ModuleManager.getInstance(project);
          for (          GradleModule module : modules) {
            final Module created=moduleManager.newModule(module.getModuleFilePath(),StdModuleTypes.JAVA);
            moduleMappings.put(module,created);
          }
        }
      }
);
      if (!recursive) {
        return;
      }
      for (      GradleModule gradleModule : modules) {
        final Module intellijModule=moduleMappings.get(gradleModule);
        myContentRootImporter.importContentRoots(gradleModule.getContentRoots(),intellijModule);
        myDependencyImporter.importDependencies(gradleModule.getDependencies(),intellijModule);
      }
    }
  }
);
}
