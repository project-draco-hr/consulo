{
  if (type.equals(ConditionChecker.Type.IS_NULL_METHOD)) {
    return InspectionsBundle.message("configure.checker.option.isNull.method.panel.title");
  }
 else   if (type.equals(ConditionChecker.Type.IS_NOT_NULL_METHOD)) {
    return InspectionsBundle.message("configure.checker.option.isNotNull.method.panel.title");
  }
 else   if (type.equals(ConditionChecker.Type.ASSERT_IS_NULL_METHOD)) {
    return InspectionsBundle.message("configure.checker.option.assert.isNull.method.panel.title");
  }
 else   if (type.equals(ConditionChecker.Type.ASSERT_IS_NOT_NULL_METHOD)) {
    return InspectionsBundle.message("configure.checker.option.assert.isNotNull.method.panel.title");
  }
 else   if (type.equals(ConditionChecker.Type.ASSERT_TRUE_METHOD)) {
    return InspectionsBundle.message("configure.checker.option.assert.true.method.panel.title");
  }
 else   if (type.equals(ConditionChecker.Type.ASSERT_FALSE_METHOD)) {
    return InspectionsBundle.message("configure.checker.option.assert.false.method.panel.title");
  }
 else {
    throw new IllegalArgumentException("MethodCheckerDetailsDialog does not support type " + type);
  }
}
