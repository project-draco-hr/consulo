{
  this.myProject=myProject;
  myList=new JBList(new CollectionListModel<ConditionChecker>(checkers));
  myPanel=new JPanel(new BorderLayout());
  myPanel.setBorder(IdeBorderFactory.createTitledBorder(initTitle(type),false,new Insets(10,0,0,0)));
  myPanel.setPreferredSize(new Dimension(400,150));
  myList.setCellRenderer(new ColoredListCellRenderer(){
    @Override protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      String s=value.toString();
      if (s.contains("*")) {
        int indexOfAsterix1=s.indexOf("*");
        int indexOfAsterix2=s.lastIndexOf("*");
        if (indexOfAsterix1 >= 0 && indexOfAsterix1 < s.length() && indexOfAsterix2 >= 0 && indexOfAsterix2 < s.length() && indexOfAsterix1 < indexOfAsterix2) {
          append(s.substring(0,indexOfAsterix1),SimpleTextAttributes.REGULAR_ATTRIBUTES);
          append(s.substring(indexOfAsterix1 + 1,indexOfAsterix2),SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);
          append(s.substring(indexOfAsterix2 + 1),SimpleTextAttributes.REGULAR_ATTRIBUTES);
        }
 else {
          append(s,SimpleTextAttributes.REGULAR_ATTRIBUTES);
        }
      }
    }
  }
);
  final ToolbarDecorator toolbarDecorator=ToolbarDecorator.createDecorator(myList).disableUpDownActions().setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      chooseMethod(null,type,myList.getModel().getSize());
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      CollectionListModel model=getCollectionListModel();
      if (myList.getSelectedIndex() >= 0 && myList.getSelectedIndex() < model.getSize()) {
        model.remove(myList.getSelectedIndex());
      }
    }
  }
);
  myList.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        int index=myList.locationToIndex(e.getPoint());
        CollectionListModel<ConditionChecker> model=getCollectionListModel();
        if (index >= 0 && model.getSize() > index) {
          chooseMethod(model.getElementAt(index),type,index);
        }
      }
    }
  }
);
  final JPanel panel=toolbarDecorator.createPanel();
  myPanel.add(panel);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
}
