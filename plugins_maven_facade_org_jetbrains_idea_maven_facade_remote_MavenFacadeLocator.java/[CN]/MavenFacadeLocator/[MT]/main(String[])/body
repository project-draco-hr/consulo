{
  final String systemPath;
  final ClassLoader loader=MavenFacadeLocator.class.getClassLoader();
  if (loader instanceof URLClassLoader) {
    final URL[] urls=((URLClassLoader)loader).getURLs();
    final StringBuilder sb=new StringBuilder();
    for (    URL url : urls) {
      if (sb.length() > 0)       sb.append(File.pathSeparator);
      sb.append(url.getFile().replace('/',File.separatorChar));
    }
    systemPath=sb.toString();
  }
 else {
    systemPath=System.getProperty("java.class.path");
  }
  final String debug1="-Xdebug";
  final String debug2="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5009";
  final Pair<MavenFacade,Process> pair=acquireFacade(new String[]{"java","-cp",systemPath,debug1,debug2,RemoteMavenServer.class.getName()},null,null);
  final MavenFacade facade=pair.first;
  final MavenFacade.MavenFacadeSettings settings=new MavenFacade.MavenFacadeSettings();
  facade.setMavenSettings(settings);
  final String lookup=args.length > 0 ? args[0] : "hibernate";
  System.out.println("Looking up: " + lookup);
  final List<ArtifactType> result=facade.findArtifacts(createTemplate(lookup),"http://oss.sonatype.org/service/local/");
  int i=1;
  for (  ArtifactType type : result) {
    System.out.println((++i) + ". " + type.getGroupId()+ ":"+ type.getArtifactId()+ ":"+ type.getVersion());
  }
  pair.second.destroy();
  System.exit(0);
}
