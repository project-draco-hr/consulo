{
  Set<VirtualFile> readOnlyFiles=null;
  for (  final Usage usage : selectedUsages) {
    final VirtualFile file=((UsageInFile)usage).getFile();
    if (file != null && !file.isWritable()) {
      if (readOnlyFiles == null)       readOnlyFiles=new HashSet<VirtualFile>();
      readOnlyFiles.add(file);
    }
  }
  if (readOnlyFiles != null) {
    ReadonlyStatusHandler.getInstance(myProject).ensureFilesWritable(VfsUtilCore.toVirtualFileArray(readOnlyFiles));
  }
  if (hasReadOnlyUsages(selectedUsages)) {
    int result=Messages.showOkCancelDialog(replaceContext.getUsageView().getComponent(),FindBundle.message("find.replace.occurrences.in.read.only.files.prompt"),FindBundle.message("find.replace.occurrences.in.read.only.files.title"),Messages.getWarningIcon());
    if (result != 0) {
      return false;
    }
  }
  return true;
}
