{
  final FindManager findManager=FindManager.getInstance(myProject);
  final FindModel findModel=(FindModel)findManager.getFindInProjectModel().clone();
  findModel.setReplaceState(true);
  FindInProjectUtil.setDirectoryName(findModel,dataContext);
  Editor editor=PlatformDataKeys.EDITOR.getData(dataContext);
  FindUtil.initStringToFindWithSelection(findModel,editor);
  findManager.showFindDialog(findModel,new Runnable(){
    @Override public void run(){
      final PsiDirectory psiDirectory=FindInProjectUtil.getPsiDirectory(findModel,myProject);
      if (!findModel.isProjectScope() && psiDirectory == null && findModel.getModuleName() == null && findModel.getCustomScope() == null) {
        return;
      }
      UsageViewManager manager=UsageViewManager.getInstance(myProject);
      if (manager == null)       return;
      findManager.getFindInProjectModel().copyFrom(findModel);
      final FindModel findModelCopy=(FindModel)findModel.clone();
      searchAndShowUsages(manager,new UsageSearcherFactory(findModelCopy,psiDirectory),findModelCopy,findManager);
    }
  }
);
}
