{
  XmlTag tag=PsiTreeUtil.getParentOfType(context,XmlTag.class,false);
  XmlElementDescriptor descriptor=tag != null ? tag.getDescriptor() : null;
  if (descriptor instanceof XmlElementDescriptorImpl) {
    final TypeDescriptor type=((XmlElementDescriptorImpl)descriptor).getType();
    if (type instanceof ComplexTypeDescriptor) {
      final XmlTag[] simpleContent=new XmlTag[1];
      XmlUtil.processXmlElements(((ComplexTypeDescriptor)type).getDeclaration(),new PsiElementProcessor(){
        public boolean execute(        final PsiElement element){
          if (element instanceof XmlTag && ((XmlTag)element).getLocalName().equals("simpleContent") && ((XmlTag)element).getNamespace().equals(XmlUtil.XML_SCHEMA_URI)) {
            simpleContent[0]=(XmlTag)element;
            return false;
          }
          return true;
        }
        public Object getHint(        final Class hintClass){
          return null;
        }
      }
,true);
      if (simpleContent[0] != null) {
        final HashSet<String> variants=new HashSet<String>();
        XmlUtil.collectEnumerationValues(simpleContent[0],variants);
        if (variants.size() > 0)         return variants.toArray(new Object[variants.size()]);
      }
    }
  }
  return new Object[0];
}
