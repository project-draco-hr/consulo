{
  super(project,true);
  myResult=new ArrayList<IgnoredFileInfo>();
  myPanel=new JPanel(new GridBagLayout());
  myTree=new CheckboxTree(new MyRenderer(),createTree(data),new CheckboxTreeBase.CheckPolicy(false,false,true,true));
  myTree.setBorder(BorderFactory.createLineBorder(UIUtil.getHeaderActiveColor(),1));
  final JLabel prompt=new JLabel(SvnBundle.message("svn.dialog.select.ignore.patterns.to.remove.prompt"));
  prompt.setUI(new MultiLineLabelUI());
  final GridBagConstraints gb=new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(1,1,1,1),0,0);
  gb.insets.bottom=5;
  myPanel.add(prompt,gb);
  gb.insets.top=5;
  ++gb.gridy;
  gb.anchor=GridBagConstraints.WEST;
  gb.fill=GridBagConstraints.BOTH;
  gb.weightx=1;
  gb.weighty=1;
  myPanel.add(myTree,gb);
  ++gb.gridx;
  gb.anchor=GridBagConstraints.EAST;
  gb.fill=GridBagConstraints.NONE;
  gb.weightx=0;
  gb.weighty=0;
  myPanel.add(createTreeToolbarPanel().getComponent(),gb);
  setTitle(SvnBundle.message("svn.dialog.select.ignore.patterns.to.remove.title"));
  init();
  TreeUtil.expandAll(myTree);
}
