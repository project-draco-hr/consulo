{
  if (!(element instanceof AntStructuredElement)) {
    return PsiReference.EMPTY_ARRAY;
  }
  final AntElementNameReference nameReference=new AntElementNameReference(this,(AntStructuredElement)element);
  if (element instanceof AntTask) {
    final AntTask task=(AntTask)element;
    if (!task.isMacroDefined()) {
      return PsiReference.EMPTY_ARRAY;
    }
    final XmlAttribute[] attrs=task.getSourceElement().getAttributes();
    if (attrs.length == 0) {
      return new PsiReference[]{nameReference};
    }
    List<PsiReference> result=new ArrayList<PsiReference>(attrs.length + 1);
    result.add(nameReference);
    for (    XmlAttribute attr : attrs) {
      result.add(new AntElementNameReference(this,task,attr));
    }
    return result.toArray(new PsiReference[result.size()]);
  }
  final AntTask task=PsiTreeUtil.getParentOfType(element,AntTask.class);
  return (task == null || !task.isMacroDefined()) ? PsiReference.EMPTY_ARRAY : new PsiReference[]{nameReference};
}
