{
  if (!(element instanceof AntStructuredElement)) {
    return PsiReference.EMPTY_ARRAY;
  }
  final AntStructuredElement se=(AntStructuredElement)element;
  final List<PsiReference> result=PsiReferenceListSpinAllocator.alloc();
  try {
    result.add(new AntElementNameReference(se));
    if (element instanceof AntTask) {
      final AntTask task=(AntTask)element;
      if (task.isMacroDefined()) {
        final XmlAttribute[] attrs=task.getSourceElement().getAttributes();
        if (attrs.length != 0) {
          for (          XmlAttribute attr : attrs) {
            result.add(new AntElementNameReference(task,attr));
          }
        }
      }
    }
    final AntElementNameReference endReference=findEndElementNameReference(se);
    if (endReference != null) {
      result.add(endReference);
    }
    return result.toArray(new PsiReference[result.size()]);
  }
  finally {
    PsiReferenceListSpinAllocator.dispose(result);
  }
}
