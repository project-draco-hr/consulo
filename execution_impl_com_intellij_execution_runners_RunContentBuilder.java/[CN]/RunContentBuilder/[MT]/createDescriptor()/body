{
  if (myExecutionResult == null) {
    throw new IllegalStateException("Missing ExecutionResult");
  }
  if (myRunProfile == null) {
    throw new IllegalStateException("Missing RunProfile");
  }
  final JPanel panel=new JPanel(new BorderLayout(2,0));
  panel.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    if (myComponent == null) {
      final ExecutionConsole console=myExecutionResult.getExecutionConsole();
      if (console != null) {
        if (myRunProfile instanceof JUnitConfiguration) {
          myComponent=console.getComponent();
        }
 else {
          if (myRunProfile instanceof RunConfigurationBase) {
            initAdditionalTabs(console);
          }
          if (myComponent == null) {
            myComponent=console.getComponent();
          }
        }
      }
    }
    MyRunContentDescriptor contentDescriptor=new MyRunContentDescriptor(myRunProfile,myExecutionResult,myReuseProhibited,panel,myDisposeables.toArray(new Disposable[myDisposeables.size()]));
    if (myComponent != null) {
      panel.add(myComponent,BorderLayout.CENTER);
    }
    panel.add(createActionToolbar(contentDescriptor,panel),BorderLayout.WEST);
    return contentDescriptor;
  }
  return new MyRunContentDescriptor(myRunProfile,myExecutionResult,myReuseProhibited,panel,myDisposeables.toArray(new Disposable[myDisposeables.size()]));
}
