{
  if (editor.isDisposed()) {
    return Collections.emptySet();
  }
  Project project=editor.getProject();
  if (project == null || project.isDisposed()) {
    return Collections.emptySet();
  }
  final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  final Document document=editor.getDocument();
  PsiFile psiFile=documentManager.getPsiFile(document);
  if (psiFile == null || psiFile instanceof PsiCompiledElement || !psiFile.isValid()) {
    return Collections.emptySet();
  }
  final Set<PsiElement> elements=Collections.newSetFromMap(new WeakHashMap<PsiElement,Boolean>());
  final int offset=editor.logicalPositionToOffset(editor.xyToLogicalPosition(point));
  if (documentManager.isCommitted(document)) {
    ContainerUtil.addIfNotNull(elements,InjectedLanguageUtil.findElementAtNoCommit(psiFile,offset));
  }
  for (  PsiFile file : psiFile.getViewProvider().getAllFiles()) {
    ContainerUtil.addIfNotNull(elements,file.findElementAt(offset));
  }
  return elements;
}
