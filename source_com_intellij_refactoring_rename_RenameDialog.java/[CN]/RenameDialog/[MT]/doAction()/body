{
  LOG.assertTrue(myPsiElement.isValid());
  final RefactoringSettings settings=RefactoringSettings.getInstance();
  if (!checkNameConflicts()) {
    myNameSuggestionsField.requestFocusInWindow();
    return;
  }
  settings.setToSearchInCommentsForRename(myPsiElement,isSearchInComments());
  if (myCbSearchInNonJavaFiles.isEnabled()) {
    settings.setToSearchInNonJavaFilesForRename(myPsiElement,isSearchInNonJavaFiles());
  }
  if (mySuggestedNameInfo != null) {
    mySuggestedNameInfo.nameChoosen(getNewName());
  }
  final RenameProcessor processor=new RenameProcessor(getProject(),myPsiElement,getNewName(),isSearchInComments(),isSearchInNonJavaFiles());
  processor.setShouldRenameInheritors(shouldRenameInheritors());
  processor.setShouldRenameVariables(shouldRenameVariables());
  processor.setShouldRenameForms(shouldRenameForms());
  invokeRefactoring(processor);
}
