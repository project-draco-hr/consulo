{
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  panel.setBorder(IdeBorderFactory.createBorder());
  gbConstraints.insets=new Insets(4,8,4,8);
  gbConstraints.weighty=1;
  gbConstraints.weightx=1;
  gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
  gbConstraints.fill=GridBagConstraints.BOTH;
  myNameLabel=new JLabel();
  panel.add(myNameLabel,gbConstraints);
  gbConstraints.insets=new Insets(4,8,4,("".equals(myNewNamePrefix.getText()) ? 0 : 1));
  gbConstraints.gridwidth=1;
  gbConstraints.fill=GridBagConstraints.NONE;
  gbConstraints.weightx=0;
  gbConstraints.gridx=0;
  gbConstraints.anchor=GridBagConstraints.WEST;
  panel.add(myNewNamePrefix,gbConstraints);
  gbConstraints.insets=new Insets(4,8,4,8);
  gbConstraints.gridwidth=2;
  gbConstraints.fill=GridBagConstraints.BOTH;
  gbConstraints.weightx=1;
  gbConstraints.gridx=0;
  panel.add(myNameSuggestionsField.getComponent(),gbConstraints);
  gbConstraints.insets=new Insets(4,8,4,8);
  gbConstraints.gridwidth=1;
  gbConstraints.gridx=0;
  gbConstraints.weightx=1;
  gbConstraints.fill=GridBagConstraints.BOTH;
  myCbSearchInComments=new NonFocusableCheckBox();
  myCbSearchInComments.setText(RefactoringBundle.getSearchInCommentsAndStringsText());
  myCbSearchInComments.setSelected(true);
  panel.add(myCbSearchInComments,gbConstraints);
  gbConstraints.insets=new Insets(4,4,4,8);
  gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
  gbConstraints.gridx=1;
  gbConstraints.weightx=1;
  gbConstraints.fill=GridBagConstraints.BOTH;
  myCbSearchTextOccurences=new NonFocusableCheckBox();
  myCbSearchTextOccurences.setText(RefactoringBundle.getSearchForTextOccurencesText());
  myCbSearchTextOccurences.setSelected(true);
  panel.add(myCbSearchTextOccurences,gbConstraints);
  if (!RefactoringUtil.isSearchTextOccurencesEnabled(myPsiElement)) {
    myCbSearchTextOccurences.setEnabled(false);
    myCbSearchTextOccurences.setSelected(false);
    myCbSearchTextOccurences.setVisible(false);
  }
  if (myPsiElement instanceof PsiClass) {
    gbConstraints.insets=new Insets(4,8,4,8);
    gbConstraints.gridwidth=1;
    gbConstraints.gridx=0;
    gbConstraints.weightx=1;
    gbConstraints.fill=GridBagConstraints.BOTH;
    myCbRenameVariables=new NonFocusableCheckBox();
    myCbRenameVariables.setText(RefactoringBundle.message("rename.variables"));
    myCbRenameVariables.setSelected(true);
    panel.add(myCbRenameVariables,gbConstraints);
    gbConstraints.insets=new Insets(4,4,4,8);
    gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
    gbConstraints.gridx=1;
    gbConstraints.weightx=1;
    gbConstraints.fill=GridBagConstraints.BOTH;
    myCbRenameInheritors=new NonFocusableCheckBox();
    myCbRenameInheritors.setText(RefactoringBundle.message("rename.inheritors"));
    myCbRenameInheritors.setSelected(true);
    panel.add(myCbRenameInheritors,gbConstraints);
    String qName=((PsiClass)myPsiElement).getQualifiedName();
    if (qName != null) {
      PsiFile[] forms=myPsiElement.getManager().getSearchHelper().findFormsBoundToClass(qName);
      if (forms.length > 0) {
        gbConstraints.insets=new Insets(4,8,4,8);
        gbConstraints.gridwidth=GridBagConstraints.REMAINDER;
        gbConstraints.gridx=0;
        gbConstraints.weightx=1;
        gbConstraints.fill=GridBagConstraints.BOTH;
        myCbRenameBoundForms=new NonFocusableCheckBox();
        myCbRenameBoundForms.setText(RefactoringBundle.message("rename.bound.forms"));
        myCbRenameBoundForms.setSelected(true);
        panel.add(myCbRenameBoundForms,gbConstraints);
      }
    }
  }
  return panel;
}
