{
  String initialName=UsageViewUtil.getShortName(myPsiElement);
  mySuggestedNameInfo=suggestNamesForElement(myPsiElement);
  String parameterName=null;
  if (myNameSuggestionContext != null) {
    final PsiElement nameSuggestionContextParent=myNameSuggestionContext.getParent();
    if (nameSuggestionContextParent.getParent() instanceof PsiExpressionList) {
      final PsiExpressionList expressionList=(PsiExpressionList)nameSuggestionContextParent.getParent();
      final PsiElement parent=expressionList.getParent();
      if (parent instanceof PsiCallExpression) {
        final PsiMethod method=((PsiCallExpression)parent).resolveMethod();
        if (method != null) {
          final PsiParameter[] parameters=method.getParameterList().getParameters();
          final PsiExpression[] expressions=expressionList.getExpressions();
          for (int i=0; i < expressions.length; i++) {
            PsiExpression expression=expressions[i];
            if (expression == nameSuggestionContextParent) {
              if (i < parameters.length) {
                parameterName=parameters[i].getName();
              }
              break;
            }
          }
        }
      }
    }
  }
  final String[] strings=mySuggestedNameInfo != null ? mySuggestedNameInfo.names : ArrayUtil.EMPTY_STRING_ARRAY;
  ArrayList<String> list=new ArrayList<String>(Arrays.asList(strings));
  final String properlyCased=suggestProperlyCasedName(myPsiElement);
  if (!list.contains(initialName)) {
    list.add(0,initialName);
  }
 else {
    int i=list.indexOf(initialName);
    list.remove(i);
    list.add(0,initialName);
  }
  if (properlyCased != null && !properlyCased.equals(initialName)) {
    list.add(1,properlyCased);
  }
  if (parameterName != null && !list.contains(parameterName)) {
    list.add(parameterName);
  }
  ContainerUtil.removeDuplicates(list);
  return list.toArray(new String[list.size()]);
}
