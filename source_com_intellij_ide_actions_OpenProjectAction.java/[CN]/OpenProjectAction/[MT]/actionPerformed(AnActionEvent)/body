{
  JFileChooser fileChooser=new JFileChooser(RecentProjectsManager.getInstance().getLastProjectPath());
  FileView fileView=new FileView(){
    public Icon getIcon(    File f){
      if (f.isDirectory())       return super.getIcon(f);
      if (f.isFile() && f.getName().toLowerCase().endsWith(ProjectFileType.DOT_DEFAULT_EXTENSION)) {
        return Icons.PROJECT_ICON;
      }
      return super.getIcon(f);
    }
  }
;
  fileChooser.setFileView(fileView);
  fileChooser.setAcceptAllFileFilterUsed(false);
  fileChooser.setDialogTitle(IdeBundle.message("title.open.project"));
  fileChooser.setFileFilter(new FileFilter(){
    public boolean accept(    File f){
      return f.isDirectory() || f.getAbsolutePath().endsWith(ProjectFileType.DOT_DEFAULT_EXTENSION);
    }
    public String getDescription(){
      return IdeBundle.message("filter.project.files");
    }
  }
);
  Project project=(Project)e.getDataContext().getData(DataConstants.PROJECT);
  Window window=WindowManager.getInstance().suggestParentWindow(project);
  if (fileChooser.showOpenDialog(window) != JFileChooser.APPROVE_OPTION)   return;
  File file=fileChooser.getSelectedFile();
  if (file == null)   return;
  ProjectUtil.openProject(file.getAbsolutePath(),project,false);
}
