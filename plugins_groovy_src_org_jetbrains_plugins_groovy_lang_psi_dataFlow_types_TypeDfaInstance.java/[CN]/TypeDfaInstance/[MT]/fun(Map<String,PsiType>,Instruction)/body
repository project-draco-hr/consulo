{
  if (instruction instanceof ReadWriteVariableInstruction && ((ReadWriteVariableInstruction)instruction).isWrite()) {
    final PsiElement element=instruction.getElement();
    if (element != null) {
      final Computable<PsiType> computation=getInitializerTypeComputation(element);
      if (computation != null) {
        final TypeInferenceHelper helper=GroovyPsiManager.getInstance(element.getProject()).getTypeInferenceHelper();
        final PsiType type=helper.doInference(computation,map);
        map.put(((ReadWriteVariableInstruction)instruction).getVariableName(),type);
      }
    }
  }
  if (instruction instanceof AssertionInstruction) {
    final AssertionInstruction assertionInstruction=(AssertionInstruction)instruction;
    final PsiElement element=assertionInstruction.getElement();
    if (element instanceof GrInstanceOfExpression && !assertionInstruction.isNegate()) {
      final GrExpression operand=((GrInstanceOfExpression)element).getOperand();
      final GrTypeElement typeElement=((GrInstanceOfExpression)element).getTypeElement();
      if (typeElement != null) {
        map.put(operand.getText(),typeElement.getType());
      }
    }
  }
}
