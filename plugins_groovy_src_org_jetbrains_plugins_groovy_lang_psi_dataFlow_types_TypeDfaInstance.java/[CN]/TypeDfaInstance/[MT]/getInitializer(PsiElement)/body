{
  if (element instanceof GrReferenceExpression && ((GrReferenceExpression)element).getQualifierExpression() == null) {
    if (element.getParent() instanceof GrAssignmentExpression) {
      return ((GrAssignmentExpression)element.getParent()).getRValue();
    }
 else     if (element.getParent() instanceof GrListOrMap) {
      GrListOrMap list=(GrListOrMap)element.getParent();
      if (list.getParent() instanceof GrAssignmentExpression) {
        GrAssignmentExpression assignment=(GrAssignmentExpression)list.getParent();
        if (assignment.getRValue() instanceof GrListOrMap) {
          GrListOrMap rList=(GrListOrMap)assignment.getRValue();
          if (rList != null && !rList.isMap()) {
            int idx=-1;
            GrExpression[] initializers=list.getInitializers();
            for (int i=0; i < initializers.length; i++) {
              GrExpression initializer=initializers[i];
              if (element == initializer) {
                idx=i;
                break;
              }
            }
            if (idx >= 0) {
              GrExpression[] rInitializers=rList.getInitializers();
              if (idx < rInitializers.length)               return rInitializers[idx];
            }
          }
        }
      }
    }
  }
 else   if (element instanceof GrVariable && !(element instanceof GrParameter)) {
    return ((GrVariable)element).getInitializerGroovy();
  }
  return null;
}
