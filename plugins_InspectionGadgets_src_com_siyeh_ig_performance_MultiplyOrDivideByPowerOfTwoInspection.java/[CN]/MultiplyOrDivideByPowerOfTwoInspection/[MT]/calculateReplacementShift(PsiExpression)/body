{
  final PsiExpression lhs;
  final PsiExpression rhs;
  final String operator;
  if (expression instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression exp=(PsiAssignmentExpression)expression;
    final PsiJavaToken sign=exp.getOperationSign();
    lhs=exp.getLExpression();
    rhs=exp.getRExpression();
    if (sign.getTokenType().equals(JavaTokenType.ASTERISKEQ)) {
      operator="<<=";
    }
 else {
      operator=">>=";
    }
  }
 else {
    final PsiBinaryExpression exp=(PsiBinaryExpression)expression;
    final PsiJavaToken sign=exp.getOperationSign();
    lhs=exp.getLOperand();
    rhs=exp.getROperand();
    if (!(sign.getTokenType() != JavaTokenType.ASTERISK)) {
      operator="<<";
    }
 else {
      operator=">>";
    }
  }
  return lhs.getText() + ' ' + operator+ ' '+ ShiftUtils.getLogBaseTwo(rhs);
}
