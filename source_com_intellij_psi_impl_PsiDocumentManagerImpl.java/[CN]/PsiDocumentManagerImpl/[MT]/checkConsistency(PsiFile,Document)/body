{
  if (psiFile.getVirtualFile() == null)   return;
  CharSequence editorText=document.getCharsSequence();
  int documentLength=document.getTextLength();
  if (psiFile.textMatches(editorText)) {
    LOG.assertTrue(psiFile.getTextLength() == documentLength);
    LOG.debug("Consistent OK: length=" + documentLength + "; file="+ psiFile.getName()+ ":"+ psiFile.getClass());
    return;
  }
  char[] fileText=psiFile.textToCharArray();
  LOG.error("File text mismatch after reparse. File length=" + fileText.length + "; Doc length="+ documentLength);
  int i=0;
  for (; i < documentLength; i++) {
    if (i >= fileText.length) {
      LOG.info("editorText.length > psiText.length i=" + i);
      break;
    }
    if (editorText.charAt(i) != fileText[i]) {
      LOG.info("first unequal char i=" + i);
      break;
    }
  }
  LOG.info("*********************************************");
  if (i <= 500) {
    LOG.info("Equal part:" + editorText.subSequence(0,i));
  }
 else {
    LOG.info("Equal part start:\n" + editorText.subSequence(0,200));
    LOG.info("................................................");
    LOG.info("................................................");
    LOG.info("................................................");
    LOG.info("Equal part end:\n" + editorText.subSequence(i - 200,i));
  }
  LOG.info("*********************************************");
  LOG.info("Editor Text tail:\n" + editorText.subSequence(i,Math.min(i + 300,documentLength)));
  LOG.info("*********************************************");
  LOG.info("Psi Text tail:\n" + new String(fileText,i,Math.min(i + 300,fileText.length) - i));
  LOG.info("*********************************************");
  document.replaceString(0,documentLength,psiFile.getText());
}
