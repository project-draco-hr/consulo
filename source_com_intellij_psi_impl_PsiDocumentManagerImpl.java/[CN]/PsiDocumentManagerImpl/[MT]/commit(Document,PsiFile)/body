{
  document.putUserData(TEMP_TREE_IN_DOCUMENT_KEY,null);
  TextBlock textBlock=getTextBlock(document);
  if (textBlock.isEmpty())   return;
  myIsCommitInProgress=true;
  document.putUserData(KEY_COMMITING,Boolean.TRUE);
  try {
    if (file.getModificationStamp() != document.getModificationStamp()) {
      if (mySmartPointerManager != null) {
        mySmartPointerManager.synchronizePointers(file);
      }
      ASTNode treeElement=((PsiFileImpl)file).calcTreeElement();
      textBlock=getTextBlock(document);
      if (textBlock.isEmpty())       return;
      char[] chars=CharArrayUtil.fromSequence(document.getCharsSequence());
      int startOffset=textBlock.getStartOffset();
      int endOffset=textBlock.getTextEndOffset();
      final int psiEndOffset=textBlock.getPsiEndOffset();
      myBlockSupport.reparseRange(file,startOffset,psiEndOffset,endOffset - psiEndOffset,chars);
      InjectedLanguageUtil.commitAllInjectedDocuments(this,document);
    }
    textBlock.clear();
  }
  finally {
    myIsCommitInProgress=false;
    document.putUserData(KEY_COMMITING,Boolean.FALSE);
  }
}
