{
  final PsiElement parent=modifierList.getParent();
  if (parent instanceof GrVariableDeclaration && parent.getParent() instanceof GrTypeDefinitionBody) {
    PsiElement pParent=parent.getParent().getParent();
    if (!modifierList.hasExplicitVisibilityModifiers()) {
      if (!(pParent instanceof PsiClass) || !((PsiClass)pParent).isInterface()) {
        if (modifier.equals(GrModifier.PRIVATE))         return true;
        if (modifier.equals(GrModifier.PROTECTED))         return false;
        if (modifier.equals(GrModifier.PUBLIC))         return false;
      }
    }
    if (pParent instanceof PsiClass && ((PsiClass)pParent).isInterface()) {
      if (modifier.equals(GrModifier.STATIC))       return true;
      if (modifier.equals(GrModifier.FINAL))       return true;
    }
    if (pParent instanceof GrTypeDefinition) {
      PsiModifierList pModifierList=((GrTypeDefinition)pParent).getModifierList();
      if (pModifierList != null && pModifierList.findAnnotation(GroovyImmutableAnnotationInspection.IMMUTABLE) != null) {
        if (modifier.equals(GrModifier.FINAL))         return true;
      }
    }
  }
  if (modifierList.hasExplicitModifier(modifier)) {
    return true;
  }
  if (modifier.equals(GrModifier.PUBLIC)) {
    return !modifierList.hasExplicitModifier(GrModifier.PRIVATE) && !modifierList.hasExplicitModifier(GrModifier.PROTECTED);
  }
  if (parent instanceof GrTypeDefinition) {
    if (modifier.equals(GrModifier.STATIC)) {
      final PsiClass containingClass=((GrTypeDefinition)parent).getContainingClass();
      return containingClass != null && containingClass.isInterface();
    }
    if (modifier.equals(GrModifier.ABSTRACT)) {
      return ((GrTypeDefinition)parent).isInterface();
    }
  }
  return false;
}
