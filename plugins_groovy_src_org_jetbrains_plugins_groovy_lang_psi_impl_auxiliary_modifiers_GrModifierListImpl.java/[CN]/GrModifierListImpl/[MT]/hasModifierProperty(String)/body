{
  final PsiElement parent=getParent();
  if (parent instanceof GrVariableDeclaration && parent.getParent() instanceof GrTypeDefinitionBody) {
    PsiElement pParent=parent.getParent().getParent();
    if (!hasExplicitVisibilityModifiers()) {
      if (!(pParent instanceof PsiClass) || !((PsiClass)pParent).isInterface()) {
        if (modifier.equals(GrModifier.PRIVATE))         return true;
        if (modifier.equals(GrModifier.PROTECTED))         return false;
        if (modifier.equals(GrModifier.PUBLIC))         return false;
      }
 else {
        if (modifier.equals(GrModifier.STATIC))         return true;
        if (modifier.equals(GrModifier.FINAL))         return true;
      }
    }
    if (pParent instanceof GrTypeDefinition) {
      PsiModifierList modifierList=((GrTypeDefinition)pParent).getModifierList();
      if (modifierList != null && modifierList.findAnnotation(GroovyImmutableAnnotationInspection.IMMUTABLE) != null) {
        if (modifier.equals(GrModifier.FINAL))         return true;
      }
    }
  }
  if (hasExplicitModifier(modifier)) {
    return true;
  }
  if (modifier.equals(GrModifier.PUBLIC)) {
    return !hasExplicitModifier(GrModifier.PRIVATE) && !hasExplicitModifier(GrModifier.PROTECTED);
  }
  if (parent instanceof GrTypeDefinition && modifier.equals(GrModifier.ABSTRACT)) {
    return ((GrTypeDefinition)parent).isInterface();
  }
  return false;
}
