{
  if (PsiModifier.PACKAGE_LOCAL.equals(name)) {
    return;
  }
  if (doSet) {
    final ASTNode modifierNode=GroovyPsiElementFactory.getInstance(getProject()).createModifierFromText(name).getNode();
    if (!"def".equals(name)) {
      final PsiElement[] modifiers=getModifiers();
      if (modifiers.length == 1 && modifiers[0].getText().equals("def")) {
        getNode().replaceChild(findChildByType(GroovyTokenTypes.kDEF).getNode(),modifierNode);
        return;
      }
    }
    addInternal(modifierNode,modifierNode,null,null);
  }
 else {
    final PsiElement[] modifiers=findChildrenByType(TokenSets.MODIFIERS,PsiElement.class);
    for (    PsiElement modifier : modifiers) {
      if (name.equals(modifier.getText())) {
        getNode().removeChild(modifier.getNode());
      }
    }
  }
}
