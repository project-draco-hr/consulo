{
  if (myTrace == null)   return;
  final File traceFile=new File(getTracesDir(),name + ".tr");
  try {
    if (!traceFile.exists()) {
      traceFile.createNewFile();
    }
    DataOutputStream os=null;
    try {
      os=new DataOutputStream(new FileOutputStream(traceFile));
      os.writeInt(myTrace.size());
      for (Iterator it=myTrace.keySet().iterator(); it.hasNext(); ) {
        final Object classData=it.next();
        os.writeUTF(classData.toString());
        final boolean[] lines=(boolean[])myTrace.get(classData);
        int numberOfTraces=0;
        for (int idx=0; idx < lines.length; idx++) {
          if (lines[idx])           numberOfTraces++;
        }
        os.writeInt(numberOfTraces);
        for (int idx=0; idx < lines.length; idx++) {
          final boolean incl=lines[idx];
          if (incl) {
            os.writeInt(idx);
          }
        }
      }
    }
  finally {
      if (os != null) {
        os.close();
      }
    }
  }
 catch (  IOException e) {
    ErrorReporter.reportError("Error writing traces to file " + traceFile.getPath(),e);
  }
 finally {
    myTrace=null;
  }
}
