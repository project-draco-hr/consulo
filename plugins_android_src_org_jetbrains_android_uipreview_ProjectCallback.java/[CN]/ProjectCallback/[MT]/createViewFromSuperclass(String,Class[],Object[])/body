{
  return ApplicationManager.getApplication().runReadAction(new Computable<Object>(){
    @Nullable @Override public Object compute(){
      final JavaPsiFacade facade=JavaPsiFacade.getInstance(myModule.getProject());
      PsiClass psiClass=facade.findClass(className,myModule.getModuleWithDependenciesAndLibrariesScope(false));
      if (psiClass == null) {
        return null;
      }
      psiClass=psiClass.getSuperClass();
      final Set<String> visited=new HashSet<String>();
      while (psiClass != null) {
        final String qName=psiClass.getQualifiedName();
        if (qName == null || !visited.add(qName) || AndroidUtils.VIEW_CLASS_NAME.equals(psiClass.getQualifiedName())) {
          break;
        }
        if (!AndroidUtils.isAbstract(psiClass)) {
          try {
            Class<?> aClass=myLoadedClasses.get(qName);
            if (aClass == null) {
              aClass=myParentClassLoader.loadClass(qName);
              if (aClass != null) {
                myLoadedClasses.put(qName,aClass);
              }
            }
            if (aClass != null) {
              final Object instance=createNewInstance(aClass,constructorSignature,constructorArgs);
              if (instance != null) {
                return instance;
              }
            }
          }
 catch (          Exception e) {
            LOG.debug(e);
          }
        }
        psiClass=psiClass.getSuperClass();
      }
      return null;
    }
  }
);
}
