{
  Constructor<?> constructor=null;
  try {
    constructor=clazz.getConstructor(constructorSignature);
  }
 catch (  NoSuchMethodException e) {
    final int paramsCount=constructorSignature.length;
    if (paramsCount == 0) {
      throw e;
    }
    for (int i=3; i >= 1; i--) {
      if (i == paramsCount) {
        continue;
      }
      final int k=paramsCount < i ? paramsCount : i;
      final Class[] sig=new Class[i];
      System.arraycopy(constructorSignature,0,sig,0,k);
      final Object[] params=new Object[i];
      System.arraycopy(constructorParameters,0,params,0,k);
      for (int j=k + 1; j <= i; j++) {
        if (j == 2) {
          sig[j - 1]=clazz.getClassLoader().loadClass("android.util.AttributeSet");
          params[j - 1]=null;
        }
 else         if (j == 3) {
          sig[j - 1]=int.class;
          params[j - 1]=0;
        }
      }
      constructorSignature=sig;
      constructorParameters=params;
      try {
        constructor=clazz.getConstructor(constructorSignature);
        if (constructor != null) {
          if (constructorSignature.length < 2) {
            LOG.info("wrong_constructor: Custom view " + clazz.getSimpleName() + " is not using the 2- or 3-argument "+ "View constructors; XML attributes will not work");
          }
          break;
        }
      }
 catch (      NoSuchMethodException ignored) {
      }
    }
    if (constructor == null) {
      throw e;
    }
  }
  constructor.setAccessible(true);
  return constructor.newInstance(constructorParameters);
}
