{
  final String pluginRepositoryUrl=FEATURE_IMPLEMENTATIONS_URL + "featureType=" + FileTypeFactory.FILE_TYPE_FACTORY_EP.getName();
  try {
    HttpURLConnection connection=HttpConfigurable.getInstance().openHttpConnection(pluginRepositoryUrl);
    connection.connect();
    final InputStreamReader streamReader=new InputStreamReader(connection.getInputStream());
    try {
      final JsonReader jsonReader=new JsonReader(streamReader);
      jsonReader.setLenient(true);
      final JsonElement jsonRootElement=new JsonParser().parse(jsonReader);
      final Map<String,Set<PluginId>> result=new HashMap<String,Set<PluginId>>();
      for (      JsonElement jsonElement : jsonRootElement.getAsJsonArray()) {
        final JsonObject jsonObject=jsonElement.getAsJsonObject();
        final JsonElement ext=jsonObject.get("implementationName");
        final String extension=StringUtil.unquoteString(ext.toString());
        Set<PluginId> pluginIds=result.get(extension);
        if (pluginIds == null) {
          pluginIds=new HashSet<PluginId>();
          result.put(extension,pluginIds);
        }
        pluginIds.add(PluginId.getId(StringUtil.unquoteString(jsonObject.get("pluginId").toString())));
      }
      saveExtensions(result);
      return result;
    }
  finally {
      streamReader.close();
    }
  }
 catch (  IOException e) {
    LOG.info(e);
    return null;
  }
}
