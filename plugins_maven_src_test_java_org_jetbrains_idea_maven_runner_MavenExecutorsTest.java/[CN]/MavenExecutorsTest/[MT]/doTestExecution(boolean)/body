{
  VfsUtil.saveText(createProjectSubFile("src/main/java/A.java"),"public class A {}");
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>");
  assertFalse(new File(getProjectPath(),"target").exists());
  MavenRunnerParameters params=new MavenRunnerParameters(true,getProjectPath(),Arrays.asList("compile"),null);
  MavenRunnerSettings settings=new MavenRunnerSettings();
  settings.setJreName(MavenRunnerSettings.USE_INTERNAL_JAVA);
  MavenExecutor e;
  if (useEmbedder) {
    e=new MavenEmbeddedExecutor(params,getMavenCoreSettings(),settings,new TestConsoleAdapter());
  }
 else {
    settings.setJreName(MavenRunnerSettings.USE_INTERNAL_JAVA);
    e=new MavenExternalExecutor(params,getMavenCoreSettings(),settings,new TestConsoleAdapter());
  }
  assertTrue(e.execute(new ArrayList<MavenProject>(),new EmptyProgressIndicator()));
  assertTrue(new File(getProjectPath(),"target").exists());
}
