{
  if (element instanceof PsiClass) {
    if (processedFile(element,iconDescriptor)) {
      return;
    }
    final PsiClass psiClass=(PsiClass)element;
    if (psiClass.isEnum()) {
      iconDescriptor.setMainIcon(AllIcons.Nodes.Enum);
    }
 else     if (psiClass.isAnnotationType()) {
      iconDescriptor.setMainIcon(AllIcons.Nodes.Annotationtype);
    }
 else     if (psiClass.isInterface()) {
      iconDescriptor.setMainIcon(AllIcons.Nodes.Interface);
    }
 else     if (psiClass instanceof PsiAnonymousClass) {
      iconDescriptor.setMainIcon(AllIcons.Nodes.AnonymousClass);
    }
 else {
      final boolean abst=psiClass.hasModifierProperty(PsiModifier.ABSTRACT);
      iconDescriptor.setMainIcon(abst ? AllIcons.Nodes.AbstractClass : AllIcons.Nodes.Class);
      if (!DumbService.getInstance(element.getProject()).isDumb()) {
        final PsiManager manager=psiClass.getManager();
        final PsiClass javaLangTrowable=JavaPsiFacade.getInstance(manager.getProject()).findClass(CommonClassNames.JAVA_LANG_THROWABLE,psiClass.getResolveScope());
        final boolean isException=javaLangTrowable != null && InheritanceUtil.isInheritorOrSelf(psiClass,javaLangTrowable,true);
        if (isException) {
          iconDescriptor.setMainIcon(abst ? AllIcons.Nodes.AbstractException : AllIcons.Nodes.ExceptionClass);
        }
        if (PsiClassUtil.isRunnableClass(psiClass,false) && PsiMethodUtil.findMainMethod(psiClass) != null) {
          iconDescriptor.addLayerIcon(AllIcons.Nodes.RunnableMark);
        }
        if (TestFrameworks.getInstance().isTestClass(psiClass)) {
          iconDescriptor.addLayerIcon(AllIcons.Nodes.JunitTestMark);
        }
      }
    }
    processModifierList(element,iconDescriptor,flags);
  }
 else   if (element instanceof PsiJavaFile) {
    if (processedFile(element,iconDescriptor)) {
      return;
    }
    final PsiClass[] classes=((PsiJavaFile)element).getClasses();
    if (classes.length == 1) {
      IconDescriptorUpdaters.processExistingDescriptor(iconDescriptor,classes[0],flags);
    }
  }
 else   if (element instanceof PsiMethod) {
    iconDescriptor.setMainIcon(((PsiMethod)element).hasModifierProperty(PsiModifier.ABSTRACT) ? AllIcons.Nodes.AbstractMethod : AllIcons.Nodes.Method);
    processModifierList(element,iconDescriptor,flags);
  }
 else   if (element instanceof PsiField) {
    iconDescriptor.setMainIcon(AllIcons.Nodes.Field);
    processModifierList(element,iconDescriptor,flags);
  }
 else   if (element instanceof PsiLocalVariable) {
    iconDescriptor.setMainIcon(AllIcons.Nodes.Variable);
    processModifierList(element,iconDescriptor,flags);
  }
}
