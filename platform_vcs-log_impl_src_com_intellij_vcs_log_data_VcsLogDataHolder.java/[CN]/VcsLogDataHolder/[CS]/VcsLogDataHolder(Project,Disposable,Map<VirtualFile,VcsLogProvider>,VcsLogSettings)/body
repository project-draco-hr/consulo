{
  Disposer.register(parentDisposable,this);
  myProject=project;
  myLogProviders=logProviders;
  myDataLoaderQueue=new BackgroundTaskQueue(project,"Loading history...");
  myMiniDetailsGetter=new MiniDetailsGetter(this,logProviders);
  myDetailsGetter=new CommitDetailsGetter(this,logProviders);
  myLogJoiner=new VcsLogJoiner();
  myMultiRepoJoiner=new VcsLogMultiRepoJoiner();
  myFactory=ServiceManager.getService(myProject,VcsLogObjectsFactory.class);
  mySettings=settings;
  myUserRegistry=new VcsUserRegistry();
  try {
    myHashMap=new VcsLogHashMap(myProject);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  myHashGetter=new NotNullFunction<Integer,Hash>(){
    @NotNull @Override public Hash fun(    Integer integer){
      return getHash(integer);
    }
  }
;
  myIndexGetter=new NotNullFunction<Hash,Integer>(){
    @NotNull @Override public Integer fun(    Hash hash){
      return getCommitIndex(hash);
    }
  }
;
  myContainingBranchesGetter=new ContainingBranchesGetter(this,this);
}
