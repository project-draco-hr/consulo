{
  if (myLoadMoreInProgress.get()) {
    return LoadingState.LOADING;
  }
  final int topCommitsCount=myLogData.getTopCommitsCount();
  int rootsCount=getRootCount();
  if (topCommitsCount >= MORE_DETAILS_LOADING_RATE_LIMIT * mySettings.getRecentCommitsCount() * rootsCount) {
    return LoadingState.LIMIT_REACHED;
  }
  if (entireLogDetailsLoaded()) {
    return LoadingState.ALL_COMMITS_LOADED;
  }
  if (myLogData.isFullLogReady()) {
    int totalSize=0;
    for (    List<TimedVcsCommit> commits : myLogData.getLogs().values()) {
      totalSize+=commits.size();
    }
    if (topCommitsCount >= totalSize) {
      return LoadingState.ALL_COMMITS_LOADED;
    }
  }
  if (myLoadMoreInProgress.compareAndSet(false,true)) {
    runInBackground(new ThrowableConsumer<ProgressIndicator,VcsException>(){
      @Override public void consume(      ProgressIndicator indicator) throws VcsException {
        loadFromVcs(topCommitsCount * MORE_DETAILS_LOADING_STEP_MULTIPLIER,indicator,new Consumer<DataPack>(){
          @Override public void consume(          DataPack dataPack){
            myLoadMoreInProgress.set(false);
            onSuccess.run();
          }
        }
);
      }
    }
,"Loading more details to filter...");
  }
  return LoadingState.LOADING;
}
