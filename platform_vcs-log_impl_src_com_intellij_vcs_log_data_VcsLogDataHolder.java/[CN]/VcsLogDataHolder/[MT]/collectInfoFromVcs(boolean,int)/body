{
  StopWatch methodTime=StopWatch.start("collectInfoFromVcs");
  Map<VirtualFile,RecentCommitsInfo> infoByRoot=ContainerUtil.newHashMap();
  for (  Map.Entry<VirtualFile,VcsLogProvider> entry : myLogProviders.entrySet()) {
    VirtualFile root=entry.getKey();
    VcsLogProvider logProvider=entry.getValue();
    StopWatch sw=StopWatch.start("readAllRefs for" + root.getName());
    Set<VcsRef> newRefs=ContainerUtil.newHashSet(logProvider.readAllRefs(root));
    sw.report();
    sw=StopWatch.start("readFirstBlock for " + root.getName());
    Set<VcsRef> previousRefs=myLogData == null ? Collections.<VcsRef>emptySet() : ContainerUtil.newHashSet(myLogData.getRefs().get(root));
    List<? extends VcsCommitMetadata> firstBlockDetails=logProvider.readFirstBlock(root,new RequirementsImpl(commitsCount,ordered,previousRefs,newRefs));
    sw.report();
    storeTopCommitsDetailsInCache(firstBlockDetails);
    storeUsers(firstBlockDetails);
    List<TimedVcsCommit> firstBlockCommits=getCommitsFromDetails(firstBlockDetails);
    infoByRoot.put(root,new RecentCommitsInfo(firstBlockCommits,newRefs));
  }
  methodTime.report();
  return infoByRoot.entrySet();
}
