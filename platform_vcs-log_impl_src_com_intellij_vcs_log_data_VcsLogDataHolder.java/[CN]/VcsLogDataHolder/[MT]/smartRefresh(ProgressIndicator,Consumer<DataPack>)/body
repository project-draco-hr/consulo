{
  if (myLogData == null || !myLogData.isFullLogReady()) {
    LOG.error("The full log is not ready!");
  }
  Map<VirtualFile,List<TimedVcsCommit>> logsToBuild=ContainerUtil.newHashMap();
  Map<VirtualFile,Collection<VcsRef>> refsByRoot=ContainerUtil.newHashMap();
  int topCommitCount=myLogData.getTopCommitsCount();
  for (  Map.Entry<VirtualFile,RecentCommitsInfo> entry : collectInfoFromVcs(false,mySettings.getRecentCommitsCount())) {
    VirtualFile root=entry.getKey();
    RecentCommitsInfo info=entry.getValue();
    Pair<List<TimedVcsCommit>,Integer> joinResult=myLogJoiner.addCommits(myLogData.getLog(root),myLogData.getRefs(root),info.firstBlockCommits,info.newRefs);
    List<TimedVcsCommit> refreshedLog=joinResult.getFirst();
    int newCommitsCount=joinResult.getSecond();
    topCommitCount+=newCommitsCount;
    logsToBuild.put(root,refreshedLog);
    refsByRoot.put(root,info.newRefs);
  }
  List<TimedVcsCommit> compoundLog=myMultiRepoJoiner.join(logsToBuild.values());
  List<TimedVcsCommit> topPartOfTheLog=compoundLog.subList(0,topCommitCount);
  List<TimedVcsCommit> logToBuild=myFullLogShowing ? compoundLog : topPartOfTheLog;
  DataPack dataPack=DataPack.build(logToBuild,collectAllRefs(refsByRoot),indicator);
  myLogData=new LogData(logsToBuild,refsByRoot,topPartOfTheLog,dataPack,true);
  handleOnSuccessInEdt(onSuccess,dataPack);
}
