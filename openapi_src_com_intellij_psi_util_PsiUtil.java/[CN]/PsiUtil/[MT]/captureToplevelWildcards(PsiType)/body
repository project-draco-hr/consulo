{
  if (type instanceof PsiClassType) {
    Map<PsiTypeParameter,PsiType> substitutionMap=null;
    final PsiClassType.ClassResolveResult result=((PsiClassType)type).resolveGenerics();
    final PsiClass aClass=result.getElement();
    if (aClass != null) {
      Iterator<PsiTypeParameter> iterator=typeParametersIterator(aClass);
      final PsiSubstitutor substitutor=result.getSubstitutor();
      while (iterator.hasNext()) {
        final PsiTypeParameter typeParameter=iterator.next();
        final PsiType substituted=substitutor.substitute(typeParameter);
        if (substituted instanceof PsiWildcardType) {
          if (substitutionMap == null)           substitutionMap=new HashMap<PsiTypeParameter,PsiType>(substitutor.getSubstitutionMap());
          substitutionMap.put(typeParameter,PsiCapturedWildcardType.create((PsiWildcardType)substituted));
        }
      }
      if (substitutionMap != null) {
        final PsiElementFactory factory=aClass.getManager().getElementFactory();
        final PsiSubstitutor newSubstitutor=factory.createSubstitutor(substitutionMap);
        return factory.createType(aClass,newSubstitutor);
      }
    }
  }
 else   if (type instanceof PsiArrayType) {
    return captureToplevelWildcards(((PsiArrayType)type).getComponentType()).createArrayType();
  }
  return type;
}
