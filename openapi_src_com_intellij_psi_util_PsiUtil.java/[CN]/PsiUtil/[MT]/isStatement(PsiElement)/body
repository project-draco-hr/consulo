{
  PsiElement parent=element.getParent();
  if (element instanceof PsiExpressionListStatement) {
    if (!(parent instanceof PsiForStatement))     return false;
    final PsiForStatement forStatement=(PsiForStatement)parent;
    if (!(element == forStatement.getInitialization() || element == forStatement.getUpdate()))     return false;
    final PsiExpressionList expressionList=((PsiExpressionListStatement)element).getExpressionList();
    final PsiExpression[] expressions=expressionList.getExpressions();
    for (int i=0; i < expressions.length; i++) {
      PsiExpression expression=expressions[i];
      if (!isStatement(expression))       return false;
    }
    return true;
  }
 else   if (element instanceof PsiExpressionStatement) {
    final PsiExpression expression=((PsiExpressionStatement)element).getExpression();
    if (expression == null)     return false;
    return isStatement(expression);
  }
  if (element instanceof PsiDeclarationStatement) {
    if (parent instanceof PsiCodeBlock || parent instanceof JspElement)     return true;
    if (parent instanceof PsiCodeFragment)     return true;
    if (!(parent instanceof PsiForStatement) || ((PsiForStatement)parent).getBody() == element) {
      return false;
    }
  }
  if (element instanceof PsiStatement)   return true;
  if (element instanceof PsiAssignmentExpression)   return true;
  if (isIncrementDecrementOperation(element))   return true;
  if (element instanceof PsiMethodCallExpression)   return true;
  if (element instanceof PsiNewExpression) {
    return !(((PsiNewExpression)element).getType() instanceof PsiArrayType);
  }
  if (element instanceof PsiCodeBlock)   return true;
  return false;
}
