{
  final Project project=getProject();
  final PsiDirectory psiDirectory=getValue();
  final VirtualFile directoryFile=psiDirectory.getVirtualFile();
  if (ProjectRootsUtil.isModuleContentRoot(directoryFile,project)) {
    ProjectFileIndex fi=ProjectRootManager.getInstance(project).getFileIndex();
    Module module=fi.getModuleForFile(directoryFile);
    data.setPresentableText(directoryFile.getName());
    if (module != null) {
      if (Comparing.equal(module.getName(),directoryFile.getName())) {
        data.addText(directoryFile.getName(),SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);
      }
 else {
        data.addText(directoryFile.getName() + " ",SimpleTextAttributes.REGULAR_ATTRIBUTES);
        data.addText("[" + module.getName() + "]",SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);
      }
      if (getParentValue() instanceof Project) {
        data.addText(" (" + directoryFile.getPresentableUrl() + ")",SimpleTextAttributes.GRAYED_ATTRIBUTES);
      }
      setupIcon(data,psiDirectory);
      return;
    }
  }
  final String name=getParentValue() instanceof Project ? psiDirectory.getVirtualFile().getPresentableUrl() : ProjectViewDirectoryHelper.getInstance(psiDirectory.getProject()).getNodeName(getSettings(),getParentValue(),psiDirectory);
  if (name == null) {
    setValue(null);
    return;
  }
  data.setPresentableText(name);
  if (ProjectRootsUtil.isModuleContentRoot(directoryFile,project) || ProjectRootsUtil.isLibraryRoot(directoryFile,project)) {
    final String locationString=directoryFile.getPresentableUrl();
    if (!locationString.equals(name)) {
      data.setLocationString(locationString);
    }
  }
 else {
    data.setLocationString(ProjectViewDirectoryHelper.getInstance(project).getLocationString(psiDirectory));
  }
  setupIcon(data,psiDirectory);
}
