{
  final TemplateManager templateManager=TemplateManager.getInstance(project);
  final Template template=templateManager.createTemplate("","");
  template.setToReformat(true);
  LinkedHashSet itemSet=new LinkedHashSet();
  for (  PsiType type : suggestedTypes) {
    LookupItemUtil.addLookupItem(itemSet,type,"");
  }
  final LookupItem[] lookupItems=(LookupItem[])itemSet.toArray(new LookupItem[itemSet.size()]);
  final Result result=suggestedTypes.length > 0 ? new PsiTypeResult(suggestedTypes[0],PsiManager.getInstance(project)) : null;
  Expression expr=new Expression(){
    public LookupItem[] calculateLookupItems(    ExpressionContext context){
      return lookupItems.length > 1 ? lookupItems : null;
    }
    public Result calculateResult(    ExpressionContext context){
      return result;
    }
    public Result calculateQuickResult(    ExpressionContext context){
      return null;
    }
  }
;
  template.addTextSegment("((");
  template.addVariable("type",expr,expr,true);
  template.addTextSegment(")" + exprText + ")");
  template.addEndVariable();
  return template;
}
