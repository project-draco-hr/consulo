{
  if (document instanceof DocumentWindow) {
    document=((DocumentWindow)document).getDelegate();
  }
  if (!(document instanceof DocumentImpl)) {
    return true;
  }
  Editor activeEditor=getActiveEditor(document);
  boolean isVirtualSpaceEnabled=activeEditor == null || activeEditor.getSettings().isVirtualSpace();
  final List<Caret> carets=activeEditor == null ? Collections.<Caret>emptyList() : activeEditor.getCaretModel().getAllCarets();
  final List<VisualPosition> visualCarets=new ArrayList<VisualPosition>(carets.size());
  int[] caretOffsets=new int[carets.size()];
  for (int i=0; i < carets.size(); i++) {
    Caret caret=carets.get(i);
    visualCarets.add(caret.getVisualPosition());
    caretOffsets[i]=caret.getOffset();
  }
  boolean markAsNeedsStrippingLater=((DocumentImpl)document).stripTrailingSpaces(activeEditor == null ? null : activeEditor.getProject(),inChangedLinesOnly,isVirtualSpaceEnabled,caretOffsets);
  if (activeEditor != null && !ShutDownTracker.isShutdownHookRunning()) {
    activeEditor.getCaretModel().runBatchCaretOperation(new Runnable(){
      @Override public void run(){
        for (int i=0; i < carets.size(); i++) {
          Caret caret=carets.get(i);
          if (caret.isValid()) {
            caret.moveToVisualPosition(visualCarets.get(i));
          }
        }
      }
    }
);
  }
  return !markAsNeedsStrippingLater;
}
