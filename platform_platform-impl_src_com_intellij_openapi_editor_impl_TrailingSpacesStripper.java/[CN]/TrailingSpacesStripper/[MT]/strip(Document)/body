{
  if (!document.isWritable())   return;
  FileDocumentManager fileDocumentManager=FileDocumentManager.getInstance();
  VirtualFile file=fileDocumentManager.getFile(document);
  if (file == null || !file.isValid() || Boolean.TRUE.equals(DISABLE_FOR_FILE_KEY.get(file)))   return;
  final EditorSettingsExternalizable settings=EditorSettingsExternalizable.getInstance();
  if (settings == null)   return;
  final String overrideStripTrailingSpacesData=file.getUserData(OVERRIDE_STRIP_TRAILING_SPACES_KEY);
  final Boolean overrideEnsureNewlineData=file.getUserData(OVERRIDE_ENSURE_NEWLINE_KEY);
  @EditorSettingsExternalizable.StripTrailingSpaces String stripTrailingSpaces=overrideStripTrailingSpacesData != null ? overrideStripTrailingSpacesData : settings.getStripTrailingSpaces();
  final boolean doStrip=!stripTrailingSpaces.equals(EditorSettingsExternalizable.STRIP_TRAILING_SPACES_NONE);
  final boolean ensureEOL=overrideEnsureNewlineData != null ? overrideEnsureNewlineData.booleanValue() : settings.isEnsureNewLineAtEOF();
  if (doStrip) {
    final boolean inChangedLinesOnly=!stripTrailingSpaces.equals(EditorSettingsExternalizable.STRIP_TRAILING_SPACES_WHOLE);
    boolean success=stripIfNotCurrentLine(document,inChangedLinesOnly);
    if (!success) {
      myDocumentsToStripLater.add(document);
    }
  }
  final int lines=document.getLineCount();
  if (ensureEOL && lines > 0) {
    final int start=document.getLineStartOffset(lines - 1);
    final int end=document.getLineEndOffset(lines - 1);
    if (start != end) {
      final CharSequence content=document.getCharsSequence();
      ApplicationManager.getApplication().runWriteAction(new DocumentRunnable(document,null){
        @Override public void run(){
          CommandProcessor.getInstance().runUndoTransparentAction(new Runnable(){
            @Override public void run(){
              if (CharArrayUtil.containsOnlyWhiteSpaces(content.subSequence(start,end)) && doStrip) {
                document.deleteString(start,end);
              }
 else {
                document.insertString(end,"\n");
              }
            }
          }
);
        }
      }
);
    }
  }
}
