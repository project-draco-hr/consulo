{
  disposeEditor();
  myContent=content;
  if (myContent != null) {
    Document document=myContent.getDocument();
    if (myContent.isBinary() || document == null) {
      final VirtualFile file=myContent.getFile();
      if (file != null) {
        final FileEditorProvider[] providers=FileEditorProviderManager.getInstance().getProviders(getProject(),file);
        if (providers.length > 0) {
          myFileEditor=providers[0].createEditor(getProject(),file);
          if (myFileEditor instanceof TextEditor) {
            myEditor=(EditorEx)((TextEditor)myFileEditor).getEditor();
            ContentDocumentListener.install(myContent,this);
          }
          myFileEditorProvider=providers[0];
          addDisposable(new Disposable(){
            @Override public void dispose(){
              myFileEditorProvider.disposeEditor(myFileEditor);
              myFileEditor=null;
              myFileEditorProvider=null;
              myEditor=null;
            }
          }
);
        }
      }
    }
 else {
      final EditorFactory editorFactory=EditorFactory.getInstance();
      myEditor=DiffUtil.createEditor(document,getProject(),false);
      addDisposable(new Disposable(){
        public void dispose(){
          editorFactory.releaseEditor(myEditor);
          myEditor=null;
        }
      }
);
      ContentDocumentListener.install(myContent,this);
    }
  }
  fireContentChanged();
}
