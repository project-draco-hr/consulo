{
  myListModel.clear();
  final Sdk[] jdks;
  if (myProject == null || myProject.isDefault()) {
    final Sdk[] allJdks=globalSdks != null ? globalSdks : SdkTable.getInstance().getAllSdks();
    jdks=getCompatibleJdks(type,Arrays.asList(allJdks));
  }
 else {
    final ProjectSdksModel projectJdksModel=ProjectStructureConfigurable.getInstance(myProject).getProjectSdksModel();
    if (!projectJdksModel.isInitialized()) {
      projectJdksModel.reset(myProject);
    }
    final Collection<Sdk> collection=projectJdksModel.getProjectSdks().values();
    jdks=getCompatibleJdks(type,collection);
  }
  Arrays.sort(jdks,new Comparator<Sdk>(){
    public int compare(    final Sdk o1,    final Sdk o2){
      return o1.getName().compareToIgnoreCase(o2.getName());
    }
  }
);
  for (  Sdk jdk : jdks) {
    myListModel.addElement(jdk);
  }
}
