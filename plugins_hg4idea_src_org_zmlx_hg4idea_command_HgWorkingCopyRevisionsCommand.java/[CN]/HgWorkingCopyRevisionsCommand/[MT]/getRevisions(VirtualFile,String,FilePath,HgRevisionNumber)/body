{
  final List<String> args=new LinkedList<String>();
  args.add("--template");
  args.add("{rev}|{node|short}\\n");
  if (revision != null) {
    args.add("-r");
    args.add(revision.getChangeset());
  }
  if (file != null) {
    args.add(HgUtil.getOriginalFileName(file,ChangeListManager.getInstance(myProject)).getPath());
  }
  final HgCommandResult result=HgCommandExecutor.getInstance(myProject).execute(repo,command,args);
  if (result == null) {
    return new ArrayList<HgRevisionNumber>(0);
  }
  final List<String> lines=result.getOutputLines();
  final List<HgRevisionNumber> revisions=new ArrayList<HgRevisionNumber>(lines.size());
  for (  String line : lines) {
    final String[] parts=StringUtils.split(line,'|');
    revisions.add(HgRevisionNumber.getInstance(parts[0],parts[1]));
  }
  return revisions;
}
