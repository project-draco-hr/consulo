{
  HgCommandExecutor commandExecutor=new HgCommandExecutor(myProject);
  commandExecutor.setSilent(true);
  HgCommandResult result=commandExecutor.executeInCurrentThread(repo,"identify",Arrays.asList("--num","--id"));
  if (result == null) {
    return Pair.create(HgRevisionNumber.NULL_REVISION_NUMBER,null);
  }
  final List<String> lines=result.getOutputLines();
  if (lines != null && !lines.isEmpty()) {
    String[] parts=StringUtils.split(lines.get(0),' ');
    String changesets=parts[0];
    String revisions=parts[1];
    if (parts.length >= 2) {
      if (changesets.indexOf('+') != changesets.lastIndexOf('+')) {
        String[] chsets=StringUtils.split(changesets,"+");
        String[] revs=StringUtils.split(revisions,"+");
        return Pair.create(HgRevisionNumber.getInstance(revs[0] + "+",chsets[0] + "+"),HgRevisionNumber.getInstance(revs[1] + "+",chsets[1] + "+"));
      }
 else {
        return Pair.create(HgRevisionNumber.getInstance(revisions,changesets),null);
      }
    }
  }
  return Pair.create(HgRevisionNumber.NULL_REVISION_NUMBER,null);
}
