{
  PsiExpressionList args=null;
  if (psiElement instanceof PsiMethodCallExpression && !(psiElement instanceof JspMethodCall)) {
    args=((PsiMethodCallExpression)psiElement).getArgumentList();
  }
 else   if (psiElement instanceof PsiNewExpression) {
    args=((PsiNewExpression)psiElement).getArgumentList();
  }
  if (args == null)   return;
  PsiElement parenth=args.getLastChild();
  if (parenth == null || !")".equals(parenth.getText())) {
    int endOffset=-1;
    PsiElement child=args.getFirstChild();
    while (child != null) {
      if (child instanceof PsiErrorElement) {
        final PsiErrorElement errorElement=(PsiErrorElement)child;
        if (errorElement.getErrorDescription().indexOf("')'") >= 0) {
          endOffset=errorElement.getTextRange().getStartOffset();
          break;
        }
      }
      child=child.getNextSibling();
    }
    if (endOffset == -1) {
      endOffset=args.getTextRange().getEndOffset();
    }
    final PsiExpression[] params=args.getExpressions();
    if (params.length > 0 && startLine(editor,args) != startLine(editor,params[0])) {
      endOffset=args.getTextRange().getStartOffset() + 1;
    }
    endOffset=CharArrayUtil.shiftBackward(editor.getDocument().getCharsSequence(),endOffset - 1," \t\n") + 1;
    editor.getDocument().insertString(endOffset,")");
  }
}
