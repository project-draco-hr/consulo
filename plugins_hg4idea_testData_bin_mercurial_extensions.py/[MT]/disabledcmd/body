def disabledcmd(cmd, strict=False):
    'import disabled extensions until cmd is found.\n    returns (cmdname, extname, doc)'
    paths = _disabledpaths(strip_init=True)
    if (not paths):
        raise error.UnknownCommand(cmd)

    def findcmd(cmd, name, path):
        try:
            mod = loadpath(path, ('hgext.%s' % name))
        except Exception:
            return
        try:
            (aliases, entry) = cmdutil.findcmd(cmd, getattr(mod, 'cmdtable', {}), strict)
        except (error.AmbiguousCommand, error.UnknownCommand):
            return
        for c in aliases:
            if c.startswith(cmd):
                cmd = c
                break
        else:
            cmd = aliases[0]
        return (cmd, name, mod)
    path = paths.pop(cmd, None)
    if path:
        ext = findcmd(cmd, cmd, path)
        if ext:
            return ext
    for (name, path) in paths.iteritems():
        ext = findcmd(cmd, name, path)
        if ext:
            return ext
    raise error.UnknownCommand(cmd)
