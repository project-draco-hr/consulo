{
  ArrayList<LogFileOptions> list=new ArrayList<LogFileOptions>();
  final ArrayList<LogFileOptions> logFiles=configuration.getLogFiles();
  for (  LogFileOptions setting : logFiles) {
    list.add(new LogFileOptions(setting.getName(),setting.getPathPattern(),setting.isEnabled(),setting.isSkipContent(),setting.isShowAll()));
  }
  myLog2Predefined.clear();
  myUnresolvedPredefined.clear();
  final ArrayList<PredefinedLogFile> predefinedLogFiles=configuration.getPredefinedLogFiles();
  for (  PredefinedLogFile predefinedLogFile : predefinedLogFiles) {
    PredefinedLogFile logFile=new PredefinedLogFile(predefinedLogFile);
    final LogFileOptions options=configuration.getOptionsForPredefinedLogFile(logFile);
    if (options != null) {
      myLog2Predefined.put(options,logFile);
      list.add(options);
    }
 else {
      myUnresolvedPredefined.add(logFile);
    }
  }
  myModel.setItems(list);
  final boolean redirectOutputToFile=configuration.isSaveOutputToFile();
  myRedirectOutputCb.setSelected(redirectOutputToFile);
  final String fileOutputPath=configuration.getOutputFilePath();
  myOutputFile.setText(fileOutputPath != null ? FileUtil.toSystemDependentName(fileOutputPath) : "");
  myOutputFile.setEnabled(redirectOutputToFile);
}
