{
  final boolean requiresEditor=requiresEditor();
  if (requiresEditor && !isOnTheFly)   return null;
  return new LocalQuickFix(){
    @NotNull public String getName(){
      return AbstractFix.this.getText();
    }
    @NotNull public String getFamilyName(){
      return AbstractFix.this.getFamilyName();
    }
    public void applyFix(    @NotNull Project project,    @NotNull ProblemDescriptor descriptor){
      Editor editor;
      if (requiresEditor) {
        editor=(Editor)DataManager.getInstance().getDataContext().getData(DataKeys.EDITOR.getName());
        if (editor == null) {
          if ((editor=FileEditorManager.getInstance(project).getSelectedTextEditor()) == null) {
            return;
          }
        }
      }
 else {
        editor=null;
      }
      final PsiFile psiFile=descriptor.getPsiElement().getContainingFile();
      if (!isAvailable(project,editor,psiFile)) {
        return;
      }
      if (!CodeInsightUtilBase.prepareFileForWrite(psiFile)) {
        return;
      }
      try {
        invoke(project,editor,psiFile);
      }
 catch (      IncorrectOperationException e) {
        Logger.getInstance(getClass().getName()).error(e);
      }
    }
  }
;
}
