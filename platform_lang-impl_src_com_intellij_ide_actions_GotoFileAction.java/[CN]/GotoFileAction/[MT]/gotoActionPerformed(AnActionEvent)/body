{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.popup.file");
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  final GotoFileModel gotoFileModel=new GotoFileModel(project);
  showNavigationPopup(e,gotoFileModel,new GotoActionCallback<FileType>(){
    @Override protected ChooseByNameFilter<FileType> createFilter(    @NotNull ChooseByNamePopup popup){
      return new GotoFileFilter(popup,gotoFileModel,project);
    }
    @Override public void elementChosen(    final ChooseByNamePopup popup,    final Object element){
      if (element == null)       return;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Override public void run(){
          Navigatable n=(Navigatable)element;
          if (element instanceof PsiFile) {
            VirtualFile vfile=((PsiFile)element).getVirtualFile();
            if (vfile == null)             return;
            n=new OpenFileDescriptor(project,vfile,popup.getLinePosition(),popup.getColumnPosition()).setUseCurrentWindow(popup.isOpenInCurrentWindowRequested());
          }
          if (!n.canNavigate())           return;
          n.navigate(true);
        }
      }
,ModalityState.NON_MODAL);
    }
  }
,"Files matching pattern",true);
}
