{
  if (myEditor != null) {
    takeFocus(hint);
    Point result;
    HintManager hintManager=HintManager.getInstance();
    Dimension hintSize=hint.getComponent().getPreferredSize();
    JComponent editorComponent=myEditor.getComponent();
    JLayeredPane layeredPane=editorComponent.getRootPane().getLayeredPane();
    Point p3=hintManager.getHintPosition(hint,myEditor,HintManager.UNDER);
    Point p4=hintManager.getHintPosition(hint,myEditor,HintManager.ABOVE);
    p3.x=Math.max(p3.x,0);
    p3.x=Math.min(p3.x,layeredPane.getWidth() - hintSize.width);
    p4.x=Math.max(p4.x,0);
    p4.x=Math.min(p4.x,layeredPane.getWidth() - hintSize.width);
    int underSpace=layeredPane.getHeight() - p3.y;
    int aboveSpace=p4.y + hintSize.height;
    p4.y=Math.max(0,p4.y);
    if (aboveSpace > underSpace) {
      result=p4;
    }
 else {
      result=p3;
    }
    return result;
  }
  if (myPreviouslyFocused != null) {
    Window window=WindowManager.getInstance().suggestParentWindow(myProject);
    JLayeredPane layeredPane;
    if (window instanceof JFrame) {
      layeredPane=((JFrame)window).getLayeredPane();
    }
 else     if (window instanceof JDialog) {
      layeredPane=((JDialog)window).getLayeredPane();
    }
 else {
      throw new IllegalStateException("cannot find parent window: project=" + myProject + "; window="+ window);
    }
    Dimension preferredTextFieldPanelSize=hint.getComponent().getPreferredSize();
    int x=(layeredPane.getWidth() - preferredTextFieldPanelSize.width) / 2;
    int y=(layeredPane.getHeight() - preferredTextFieldPanelSize.height) / 2;
    if (ChooseByNameBase.isMyComponent(myPreviouslyFocused)) {
      y=myPreviouslyFocused.getParent().getY() - preferredTextFieldPanelSize.height;
    }
    return new Point(x,y);
  }
  return null;
}
