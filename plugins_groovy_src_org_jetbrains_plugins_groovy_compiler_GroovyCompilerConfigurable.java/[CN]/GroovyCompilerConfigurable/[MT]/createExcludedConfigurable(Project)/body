{
  final ExcludedEntriesConfiguration configuration=myConfig.getExcludeFromStubGeneration();
  final ProjectFileIndex index=ProjectRootManager.getInstance(project).getFileIndex();
  final FileChooserDescriptor descriptor=new FileChooserDescriptor(true,true,false,false,false,true){
    public boolean isFileVisible(    VirtualFile file,    boolean showHiddenFiles){
      return super.isFileVisible(file,showHiddenFiles) && !index.isIgnored(file);
    }
  }
;
  descriptor.setRoots(ContainerUtil.concat(ContainerUtil.map(ModuleManager.getInstance(project).getModules(),new Function<Module,List<VirtualFile>>(){
    @Override public List<VirtualFile> fun(    final Module module){
      return Arrays.asList(ModuleRootManager.getInstance(module).getSourceRoots());
    }
  }
)));
  return new ExcludedEntriesConfigurable(project,descriptor,configuration);
}
