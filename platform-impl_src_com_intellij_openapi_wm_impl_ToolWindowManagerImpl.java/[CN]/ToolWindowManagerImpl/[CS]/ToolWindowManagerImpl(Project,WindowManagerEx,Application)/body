{
  myProject=project;
  myWindowManager=windowManagerEx;
  myListenerList=new EventListenerList();
  myLayout=new DesktopLayout();
  myLayout.copyFrom(windowManagerEx.getLayout());
  myId2InternalDecorator=new HashMap<String,InternalDecorator>();
  myId2FloatingDecorator=new HashMap<String,FloatingDecorator>();
  myId2StripeButton=new HashMap<String,StripeButton>();
  myId2FocusWatcher=new HashMap<String,FocusWatcher>();
  myEditorComponentFocusWatcher=new EditorComponentFocusWatcher();
  myToolWindowPropertyChangeListener=new MyToolWindowPropertyChangeListener();
  myInternalDecoratorListener=new MyInternalDecoratorListener();
  myUIManagerPropertyChangeListener=new MyUIManagerPropertyChangeListener();
  myLafManagerListener=new MyLafManagerListener();
  myEditorComponentActive=false;
  myActiveStack=new ActiveStack();
  mySideStack=new SideStack();
  myFocusedComponentAlaram=new Alarm(Alarm.ThreadToUse.SWING_THREAD,project);
  myForcedFocusRequestsAlarm=new Alarm(Alarm.ThreadToUse.SWING_THREAD,project);
  myIdleAlarm=new Alarm(Alarm.ThreadToUse.SWING_THREAD,project);
  myApp=app;
  myAppListener=new AppListener();
  myApp.addApplicationListener(myAppListener);
  IdeEventQueue.getInstance().addDispatcher(new IdeEventQueue.EventDispatcher(){
    public boolean dispatch(    AWTEvent e){
      if (e instanceof FocusEvent) {
        final FocusEvent fe=(FocusEvent)e;
        final Component c=fe.getComponent();
        final IdeFrameImpl frame=myWindowManager.getFrame(myProject);
        if (c instanceof Window || c == null || frame == null)         return false;
        final Component parent=UIUtil.findUltimateParent(c);
        if (parent instanceof IdeFrame) {
          final IdeFrameImpl ideFrame=(IdeFrameImpl)parent;
          if (fe.getID() == FocusEvent.FOCUS_GAINED && ideFrame != null && ideFrame == myWindowManager.getFrame(myProject)) {
            myLastFocusedProjectComponent=new WeakReference<Component>(c);
          }
        }
      }
      return false;
    }
  }
,myProject);
}
