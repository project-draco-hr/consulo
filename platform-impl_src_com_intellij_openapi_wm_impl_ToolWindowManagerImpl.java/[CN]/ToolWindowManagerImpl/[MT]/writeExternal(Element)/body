{
  if (myFrame == null) {
    return;
  }
  final String[] ids=getToolWindowIds();
  for (  final String id : ids) {
    final WindowInfoImpl info=getInfo(id);
    if (info.isVisible()) {
      final InternalDecorator decorator=getInternalDecorator(id);
      LOG.assertTrue(decorator != null);
      decorator.fireResized();
    }
  }
  final Rectangle frameBounds=myFrame.getBounds();
  final Element frameElement=new Element(FRAME_ELEMENT);
  element.addContent(frameElement);
  frameElement.setAttribute(X_ATTR,Integer.toString(frameBounds.x));
  frameElement.setAttribute(Y_ATTR,Integer.toString(frameBounds.y));
  frameElement.setAttribute(WIDTH_ATTR,Integer.toString(frameBounds.width));
  frameElement.setAttribute(HEIGHT_ATTR,Integer.toString(frameBounds.height));
  frameElement.setAttribute(EXTENDED_STATE_ATTR,Integer.toString(myFrame.getExtendedState()));
  final Element editorElement=new Element(EDITOR_ELEMENT);
  editorElement.setAttribute(ACTIVE_ATTR_VALUE,myEditorComponentActive ? Boolean.TRUE.toString() : Boolean.FALSE.toString());
  element.addContent(editorElement);
  final Element layoutElement=new Element(DesktopLayout.TAG);
  element.addContent(layoutElement);
  myLayout.writeExternal(layoutElement);
}
