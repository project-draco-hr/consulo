{
  if (checkForRejectOrByPass(command,forced,result))   return;
  restartIdleAlarm();
  myRequestFocusCmd=command;
  if (forced) {
    myForcedFocusRequestsAlarm.cancelAllRequests();
    setLastEffectiveForcedRequest(command);
  }
  fixStickingDialogs();
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      if (checkForRejectOrByPass(command,forced,result))       return;
      if (myRequestFocusCmd == command) {
        final ActionCallback.TimedOut focusTimeout=new ActionCallback.TimedOut(Registry.get("actionSystem.commandProcessingTimeout").asInteger(),"Focus command timed out, cmd=" + command,command.getAllocation()){
          @Override protected void onTimeout(){
            forceFinishFocusSettledown(command,result);
          }
        }
;
        command.run().doWhenDone(new Runnable(){
          public void run(){
            LaterInvocator.invokeLater(new Runnable(){
              public void run(){
                result.setDone();
              }
            }
);
          }
        }
).doWhenRejected(new Runnable(){
          public void run(){
            result.setRejected();
          }
        }
).doWhenProcessed(new Runnable(){
          public void run(){
            if (myRequestFocusCmd == command) {
              myRequestFocusCmd=null;
            }
            restartIdleAlarm();
            if (forced) {
              myForcedFocusRequestsAlarm.addRequest(new Runnable(){
                public void run(){
                  setLastEffectiveForcedRequest(null);
                }
              }
,250);
            }
          }
        }
).notify(focusTimeout);
      }
 else {
        rejectCommand(command,result);
      }
    }
  }
);
}
