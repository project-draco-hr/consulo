{
  ApplicationManager.getApplication().assertIsDispatchThread();
  checkId(id);
  final WindowInfoImpl info=getInfo(id);
  if (!info.isVisible())   return;
  final ArrayList<FinalizableCommand> commandList=new ArrayList<FinalizableCommand>();
  final boolean wasActive=info.isActive();
  deactivateToolWindowImpl(id,true,commandList);
  if (hideSide || info.isFloating()) {
    while (!mySideStack.isEmpty(info.getAnchor())) {
      mySideStack.pop(info.getAnchor());
    }
    final String[] all=getToolWindowIds();
    for (    String eachId : all) {
      final WindowInfoImpl eachInfo=getInfo(eachId);
      if (eachInfo.isVisible() && eachInfo.getAnchor() == info.getAnchor()) {
        deactivateToolWindowImpl(eachId,true,commandList);
      }
    }
    activateEditorComponentImpl(commandList,true);
  }
 else {
    WindowInfoImpl info2=null;
    while (!mySideStack.isEmpty(info.getAnchor())) {
      final WindowInfoImpl storedInfo=mySideStack.pop(info.getAnchor());
      final WindowInfoImpl currentInfo=getInfo(storedInfo.getId());
      LOG.assertTrue(currentInfo != null);
      if (storedInfo.getAnchor() == currentInfo.getAnchor() && storedInfo.getType() == currentInfo.getType() && storedInfo.isAutoHide() == currentInfo.isAutoHide()) {
        info2=storedInfo;
        break;
      }
    }
    if (info2 != null) {
      showToolWindowImpl(info2.getId(),false,commandList);
    }
    myActiveStack.remove(id,false);
    if (wasActive) {
      if (myActiveStack.isEmpty()) {
        activateEditorComponentImpl(commandList,false);
      }
 else {
        final String toBeActivatedId=myActiveStack.pop();
        if (toBeActivatedId != null) {
          activateToolWindowImpl(toBeActivatedId,commandList,false,true);
        }
      }
    }
  }
  execute(commandList);
}
