{
  UIManager.addPropertyChangeListener(myUIManagerPropertyChangeListener);
  LafManager.getInstance().addLafManagerListener(myLafManagerListener);
  myFrame=myWindowManager.allocateFrame(myProject);
  LOG.assertTrue(myFrame != null);
  final ArrayList<FinalizableCommand> commandsList=new ArrayList<FinalizableCommand>();
  myToolWindowsPane=new ToolWindowsPane(myFrame,this);
  ((IdeRootPane)myFrame.getRootPane()).setToolWindowsPane(myToolWindowsPane);
  appendUpdateToolWindowsPaneCmd(commandsList);
  myFrame.setTitle(FrameTitleBuilder.getInstance().getProjectTitle(myProject));
  final JComponent editorComponent=FileEditorManagerEx.getInstanceEx(myProject).getComponent();
  myEditorComponentFocusWatcher.install(editorComponent);
  appendSetEditorComponentCmd(editorComponent,commandsList);
  if (myEditorComponentActive) {
    activateEditorComponentImpl(commandsList,true);
  }
  execute(commandsList);
  StartupManager.getInstance(myProject).registerPostStartupActivity(new DumbAwareRunnable(){
    public void run(){
      registerToolWindowsFromBeans();
    }
  }
);
}
