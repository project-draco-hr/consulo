{
  final Object selectedObject=getSelectedObject();
  if (selectedObject == null)   return;
  final Set<String> dependencies=getContext().getCachedDependencies(selectedObject,true);
  if (dependencies == null || dependencies.isEmpty()) {
    Messages.showInfoMessage(myParentComponent,FindBundle.message("find.usage.view.no.usages.text"),FindBundle.message("find.pointcut.applications.not.found.title"));
    return;
  }
  RelativePoint point=getPointToShowResults();
  JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<String>(ProjectBundle.message("dependencies.used.in.popup.title"),ArrayUtil.toStringArray(dependencies)){
    public PopupStep onChosen(    final String nameToSelect,    final boolean finalChoice){
      navigateToObject(nameToSelect,selectedObject);
      return FINAL_CHOICE;
    }
    public Icon getIconFor(    String selection){
      final Module module=getContext().myModulesConfigurator.getModule(selection);
      LOG.assertTrue(module != null,selection + " was not found");
      return module.getModuleType().getNodeIcon(false);
    }
  }
).show(point);
}
