{
  final Ref<Long> nextTime=Ref.create(Long.MAX_VALUE);
synchronized (myLock) {
    if (myTimeoutHandlers.isEmpty())     return;
    myTimeoutHandlers.forEachValue(new TObjectProcedure<TimeoutHandler>(){
      public boolean execute(      TimeoutHandler handler){
        nextTime.set(Math.min(nextTime.get(),handler.myLastTime));
        return true;
      }
    }
);
  }
  final int delay=(int)(nextTime.get() - System.currentTimeMillis() + 100);
  LOG.debug("schedule timeout check in " + delay + "ms");
  if (delay > 10) {
    myTimeoutAlarm.cancelAllRequests();
    myTimeoutAlarm.addRequest(new Runnable(){
      public void run(){
        checkTimeout();
      }
    }
,delay);
  }
 else {
    checkTimeout();
  }
}
