{
  super.visitSynchronizedStatement(statement);
  final PsiExpression lockExpression=statement.getLockExpression();
  if (lockExpression == null) {
    return;
  }
  if (TypeUtils.expressionHasTypeOrSubtype(lockExpression,"java.util.concurrent.locks.Lock")) {
    registerError(lockExpression,"java.util.concurrent.locks.Lock");
  }
 else   if (TypeUtils.expressionHasTypeOrSubtype(lockExpression,"java.util.concurrent.locks.ReadWriteLock")) {
    registerError(lockExpression,"java.util.concurrent.locks.ReadWriteLock");
  }
}
