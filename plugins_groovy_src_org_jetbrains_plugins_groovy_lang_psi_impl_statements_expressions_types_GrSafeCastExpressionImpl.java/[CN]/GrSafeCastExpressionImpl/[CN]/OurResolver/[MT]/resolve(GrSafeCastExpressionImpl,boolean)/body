{
  PsiType type=cast.getOperand().getType();
  if (type == null) {
    return GroovyResolveResult.EMPTY_ARRAY;
  }
  return TypesUtil.getOverloadedOperatorCandidates(type,GroovyTokenTypes.kAS,cast,new PsiType[]{TypesUtil.createJavaLangClassType(cast.getCastTypeElement().getType(),cast.getProject(),cast.getResolveScope())});
}
