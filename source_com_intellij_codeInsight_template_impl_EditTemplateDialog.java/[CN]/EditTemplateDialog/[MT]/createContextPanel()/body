{
  ChangeListener listener=new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      myExpandByCombo.setEnabled(!isEnabledInStaticContextOnly());
    }
  }
;
  JPanel panel1=new JPanel();
  panel1.setBorder(IdeBorderFactory.createTitledBorder("Context"));
  JPanel panel=panel1;
  panel.setLayout(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  gbConstraints.fill=GridBagConstraints.BOTH;
  gbConstraints.weightx=1;
  gbConstraints.gridy=0;
  gbConstraints.weighty=1;
  gbConstraints.gridx=0;
  myCbJavaCode=new JCheckBox("Java code");
  myCbJavaCode.setMnemonic('J');
  myCbJavaCode.getModel().addChangeListener(listener);
  panel.add(myCbJavaCode,gbConstraints);
  gbConstraints.gridx=1;
  myCbHTML=new JCheckBox("HTML");
  myCbHTML.setMnemonic('H');
  panel.add(myCbHTML,gbConstraints);
  myCbHTML.getModel().addChangeListener(listener);
  gbConstraints.gridy++;
  gbConstraints.gridx=0;
  myCbJavaComment=new JCheckBox("Java comment");
  myCbJavaComment.setMnemonic('c');
  panel.add(myCbJavaComment,gbConstraints);
  myCbJavaComment.getModel().addChangeListener(listener);
  gbConstraints.gridx=1;
  myCbXML=new JCheckBox("XML");
  myCbXML.setMnemonic('x');
  panel.add(myCbXML,gbConstraints);
  myCbXML.getModel().addChangeListener(listener);
  gbConstraints.gridy++;
  gbConstraints.gridx=0;
  myCbJavaString=new JCheckBox("Java string");
  myCbJavaString.setMnemonic('s');
  panel.add(myCbJavaString,gbConstraints);
  myCbJavaString.getModel().addChangeListener(listener);
  gbConstraints.gridx=1;
  myCbJSP=new JCheckBox("JSP");
  myCbJSP.setMnemonic('P');
  panel.add(myCbJSP,gbConstraints);
  myCbJSP.getModel().addChangeListener(listener);
  gbConstraints.gridy++;
  gbConstraints.gridx=0;
  myCbCompletion=new JCheckBox("Smart type completion");
  myCbCompletion.setMnemonic('o');
  panel.add(myCbCompletion,gbConstraints);
  myCbCompletion.getModel().addChangeListener(listener);
  gbConstraints.gridx=1;
  myCbOther=new JCheckBox("Other");
  myCbOther.setMnemonic('t');
  panel.add(myCbOther,gbConstraints);
  myCbOther.getModel().addChangeListener(listener);
  addUpdateHighlighterAction(myCbJavaCode);
  addUpdateHighlighterAction(myCbJavaComment);
  addUpdateHighlighterAction(myCbJavaString);
  addUpdateHighlighterAction(myCbCompletion);
  addUpdateHighlighterAction(myCbXML);
  addUpdateHighlighterAction(myCbHTML);
  addUpdateHighlighterAction(myCbJSP);
  addUpdateHighlighterAction(myCbOther);
  return panel;
}
