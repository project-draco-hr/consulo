{
  final CommonProcessors.FindFirstProcessor<PsiMethod> processor=new CommonProcessors.FindFirstProcessor<PsiMethod>();
  processMethods(context,processor,new Function<PsiClass,PsiMethod[]>(){
    public PsiMethod[] fun(    final PsiClass s){
      final PsiMethod method=findMethod(s,methodName,getMethodParams(getParent(context)));
      if (method != null && acceptMethod(method,context)) {
        return new PsiMethod[]{method};
      }
      return PsiMethod.EMPTY_ARRAY;
    }
  }
);
  if (processor.isFound())   return processor.getFoundValue();
  processMethods(context,processor,new Function<PsiClass,PsiMethod[]>(){
    public PsiMethod[] fun(    final PsiClass s){
      return s.findMethodsByName(methodName,true);
    }
  }
);
  return processor.getFoundValue();
}
