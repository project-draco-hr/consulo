{
  int lastIndent=0;
  IndentInfo indentInfo=null;
  PsiElement leaf=PsiTreeUtil.getDeepestFirst(file);
  if (leaf == null || leaf instanceof PsiFile) {
    return;
  }
  PsiElement nextLeaf=PsiTreeUtil.nextLeaf(leaf);
  if (leaf.getNode().getElementType() == myIndentTokenType) {
    myHolder.createErrorAnnotation(leaf,"Indenting at the beginning of the document is illegal");
  }
  leaf=nextLeaf;
  nextLeaf=leaf != null ? PsiTreeUtil.nextLeaf(leaf) : null;
  while (leaf != null) {
    final IElementType leafType=leaf.getNode().getElementType();
    if (leafType == myIndentTokenType && nextLeaf != null && nextLeaf.getNode().getElementType() != myEolTokenType) {
      final String currentIndentText=leaf.getText();
      final IndentInfo currentIndent=getIndent(currentIndentText);
      final int currentIndentLength=currentIndent.length;
      if (currentIndentLength == -1) {
        myHolder.createErrorAnnotation(leaf,"Indentation can't use both tabs and spaces");
      }
 else       if (currentIndentLength > 0) {
        if (indentInfo == null) {
          indentInfo=currentIndent;
          lastIndent=currentIndentLength;
        }
 else {
          final Boolean useTab=indentInfo.useTab;
          final int indentInfoLength=indentInfo.length;
          if (useTab && currentIndentText.contains(" ") || !useTab && currentIndentText.contains("\t")) {
            final String message=useTab ? "Inconsistent indentation: " + currentIndentLength + " spaces were used for indentation, but the rest of the document was indented using "+ indentInfoLength+ " tabs" : "Inconsistent indentation: " + currentIndentLength + " tabs were used for indentation, but the rest of the document was indented using "+ indentInfoLength+ " spaces";
            myHolder.createErrorAnnotation(leaf,message);
          }
 else {
            final int delta=currentIndentLength - lastIndent;
            if (currentIndentLength % indentInfoLength != 0 || delta > indentInfoLength) {
              final String message=useTab ? currentIndentLength + " tabs were used for indentation. Must be indented using " + indentInfoLength+ " tabs" : currentIndentLength + " spaces were used for indentation. Must be indented using " + indentInfoLength+ " spaces";
              myHolder.createErrorAnnotation(leaf,message);
            }
            lastIndent=currentIndentLength / indentInfoLength * indentInfoLength;
          }
        }
      }
    }
    leaf=nextLeaf;
    nextLeaf=leaf != null ? PsiTreeUtil.nextLeaf(leaf) : null;
  }
}
