{
  super(project,true);
  myProject=project;
  myGitRoot=gitRoot;
  setTitle(GitBundle.getString("rebase.editor.title"));
  if (SystemInfo.isWindows && file.startsWith(CYGDRIVE_PREFIX)) {
    final int pfx=CYGDRIVE_PREFIX.length();
    file=file.substring(pfx,pfx + 1) + ":" + file.substring(pfx + 1);
  }
  myFile=file;
  myTableModel=new MyTableModel();
  myTableModel.load(file);
  myCommitsTable.setModel(myTableModel);
  myCommitsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  TableColumn actionColumn=myCommitsTable.getColumnModel().getColumn(MyTableModel.ACTION);
  actionColumn.setCellEditor(ComboBoxTableCellEditor.INSTANCE);
  actionColumn.setCellRenderer(ComboBoxTableCellRenderer.INSTANCE);
  myCommitsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    final ListSelectionEvent e){
      boolean selected=myCommitsTable.getSelectedRowCount() != 0;
      myMoveUpButton.setEnabled(selected);
      if (selected) {
        myViewButton.setEnabled(true);
        int row=myCommitsTable.getSelectedRow();
        myMoveUpButton.setEnabled(row != 0);
        myMoveDownButton.setEnabled(row != myTableModel.myEntries.size() - 1);
      }
 else {
        myMoveUpButton.setEnabled(false);
        myMoveDownButton.setEnabled(false);
        myViewButton.setEnabled(false);
      }
    }
  }
);
  myViewButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      int row=myCommitsTable.getSelectedRow();
      if (row < 0) {
        return;
      }
      GitRebaseEntry entry=myTableModel.myEntries.get(row);
      GitShowAllSubmittedFilesAction.showSubmittedFiles(project,entry.getCommit(),gitRoot);
    }
  }
);
  myMoveUpButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final int row=myCommitsTable.getSelectedRow();
      if (myTableModel.moveUp(row)) {
        myCommitsTable.getSelectionModel().setSelectionInterval(row - 1,row - 1);
      }
    }
  }
);
  myMoveDownButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final int row=myCommitsTable.getSelectedRow();
      if (myTableModel.moveDown(row)) {
        myCommitsTable.getSelectionModel().setSelectionInterval(row + 1,row + 1);
      }
    }
  }
);
  myTableModel.addTableModelListener(new TableModelListener(){
    public void tableChanged(    final TableModelEvent e){
      validateFields();
    }
  }
);
  init();
}
