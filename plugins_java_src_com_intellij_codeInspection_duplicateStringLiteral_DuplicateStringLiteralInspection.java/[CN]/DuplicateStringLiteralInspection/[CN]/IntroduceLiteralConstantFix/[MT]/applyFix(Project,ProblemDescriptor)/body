{
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      final List<PsiExpression> expressions=new ArrayList<PsiExpression>();
      for (      SmartPsiElementPointer ptr : myExpressions) {
        final PsiElement element=ptr.getElement();
        if (element != null) {
          expressions.add((PsiExpression)element);
        }
      }
      final PsiExpression[] expressionArray=expressions.toArray(new PsiExpression[expressions.size()]);
      final IntroduceConstantHandler handler=new IntroduceConstantHandler(){
        protected OccurenceManager createOccurenceManager(        PsiExpression selectedExpr,        PsiClass parentClass){
          final OccurenceFilter filter=new OccurenceFilter(){
            public boolean isOK(            PsiExpression occurence){
              return true;
            }
          }
;
          return new BaseOccurenceManager(filter){
            protected PsiExpression[] defaultOccurences(){
              return expressionArray;
            }
            protected PsiExpression[] findOccurences(){
              return expressionArray;
            }
          }
;
        }
      }
;
      handler.invoke(project,expressionArray);
    }
  }
);
}
