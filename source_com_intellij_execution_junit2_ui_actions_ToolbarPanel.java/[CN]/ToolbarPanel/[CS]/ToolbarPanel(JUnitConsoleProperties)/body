{
  super(new BorderLayout());
  add(new JLabel(IconLoader.getIcon("/general/inactiveSeparator.png")),BorderLayout.WEST);
  final DefaultActionGroup actionGroup=new DefaultActionGroup(null,false);
  actionGroup.addSeparator();
  actionGroup.add(new ToggleBooleanProperty("Hide Passed","Hide passed tests",TestsUIUtil.loadIcon("hidePassed"),properties,JUnitConsoleProperties.HIDE_PASSED_TESTS));
  actionGroup.add(new ToggleBooleanProperty("Track Running Test","Select currently running test in tree",TestsUIUtil.loadIcon("trackTests"),properties,JUnitConsoleProperties.TRACK_RUNNING_TEST));
  actionGroup.addSeparator();
  actionGroup.add(new CollapseAllToolbarAction(myTreeExpander,"Collapse all test suites"));
  actionGroup.add(new ExpandAllToolbarAction(myTreeExpander,"Expand all test suites"));
  actionGroup.addSeparator();
  actionGroup.add(new PreviousOccurenceToolbarAction(myOccurenceNavigator));
  actionGroup.add(new NextOccurenceToolbarAction(myOccurenceNavigator));
  actionGroup.addSeparator();
  actionGroup.add(new ToggleBooleanProperty("Select First Failed Test When Finished",null,TestsUIUtil.loadIcon("selectFirstDefect"),properties,JUnitConsoleProperties.SELECT_FIRST_DEFECT));
  actionGroup.add(new ToggleBooleanProperty("Scroll to Stacktrace","Scroll console to beginning of assertion or exception stacktrace",IconLoader.getIcon("/runConfigurations/scrollToStackTrace.png"),properties,JUnitConsoleProperties.SCROLL_TO_STACK_TRACE));
  myScrollToSource=new ScrollToTestSourceAction(properties);
  actionGroup.add(myScrollToSource);
  actionGroup.add(new ToggleBooleanProperty("Open Source at Exception","Go to line which caused exception when opening test source",IconLoader.getIcon("/runConfigurations/sourceAtException.png"),properties,JUnitConsoleProperties.OPEN_FAILURE_LINE));
  add(ActionManager.getInstance().createActionToolbar(ActionPlaces.TESTTREE_VIEW_TOOLBAR,actionGroup,true).getComponent(),BorderLayout.CENTER);
}
