{
  JUnitActions.installFilterAction(model);
  myScrollToSource.setModel(model);
  RunningTestTracker.install(model);
  myTreeExpander.setModel(model);
  myOccurenceNavigator.setModel(model);
  JUnitActions.installAutoacrollToFirstDefect(model);
  model.addListener(new LvcsLabeler(model));
  model.addListener(new JUnitAdapter(){
    public void onTestSelected(    final TestProxy test){
      if (test == null)       return;
      final Project project=model.getProject();
      if (!ScrollToTestSourceAction.isScrollEnabled(model))       return;
      final Location location=test.getInfo().getLocation(project);
      if (location != null) {
        final PsiClass aClass=PsiTreeUtil.getParentOfType(location.getPsiElement(),PsiClass.class,false);
        if (aClass != null && "junit.framework.TestSuite".equals(aClass.getQualifiedName()))         return;
      }
      final Navigatable descriptor=TestsUIUtil.getOpenFileDescriptor(test,model);
      if (descriptor == null)       return;
      descriptor.navigate(false);
    }
  }
);
}
