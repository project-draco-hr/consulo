{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("editing.completion.variable.name");
  CodeStyleManagerEx codeStyleManager=(CodeStyleManagerEx)CodeStyleManager.getInstance(project);
  SuggestedNameInfo suggestedNameInfo=codeStyleManager.suggestVariableName(varKind,null,null,varType);
  final String[] suggestedNames=suggestedNameInfo.names;
  LookupItemUtil.addLookupItems(set,suggestedNames,prefix);
  if (set.isEmpty() && PsiType.VOID != varType) {
    final String requiredSuffix=codeStyleManager.getSuffixByVariableKind(varKind);
    final boolean isMethodPrefix=prefix.startsWith(IS_PREFIX) || prefix.startsWith(GET_PREFIX) || prefix.startsWith(SET_PREFIX);
    if (varKind != VariableKind.STATIC_FINAL_FIELD || isMethodPrefix) {
      for (int i=0; i < suggestedNames.length; i++) {
        suggestedNames[i]=codeStyleManager.variableNameToPropertyName(suggestedNames[i],varKind);
      }
    }
    suggestedNameInfo=new SuggestedNameInfo(getOverlappedNameVersions(prefix,suggestedNames,requiredSuffix)){
      public void nameChoosen(      String name){
      }
    }
;
    LookupItemUtil.addLookupItems(set,suggestedNameInfo.names,prefix);
  }
  return new NamePreferencePolicy(suggestedNameInfo);
}
