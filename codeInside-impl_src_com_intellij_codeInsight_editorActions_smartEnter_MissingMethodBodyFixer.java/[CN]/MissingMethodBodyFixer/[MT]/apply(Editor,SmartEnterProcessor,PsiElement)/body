{
  if (!(psiElement instanceof PsiMethod))   return;
  PsiMethod method=(PsiMethod)psiElement;
  if (method.getContainingClass().isInterface() || method.hasModifierProperty(PsiModifier.ABSTRACT))   return;
  final PsiCodeBlock body=method.getBody();
  final Document doc=editor.getDocument();
  if (body != null) {
    String bodyText=body.getText();
    if (bodyText.startsWith("{")) {
      final PsiStatement[] statements=body.getStatements();
      if (statements.length > 0) {
        if (statements[0] instanceof PsiDeclarationStatement) {
          if (PsiTreeUtil.getDeepestLast(statements[0]) instanceof PsiErrorElement) {
            if (method.getContainingClass().getRBrace() == null) {
              doc.insertString(body.getTextRange().getStartOffset() + 1,"\n}");
            }
          }
        }
      }
    }
    return;
  }
  int endOffset=method.getTextRange().getEndOffset();
  if (StringUtil.endsWithChar(method.getText(),';')) {
    doc.deleteString(endOffset - 1,endOffset);
    endOffset--;
  }
  doc.insertString(endOffset,"{\n}");
}
