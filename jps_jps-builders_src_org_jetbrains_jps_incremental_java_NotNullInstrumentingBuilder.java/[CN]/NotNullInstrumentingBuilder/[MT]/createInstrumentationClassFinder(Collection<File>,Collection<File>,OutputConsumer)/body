{
  final URL[] platformUrls=new URL[platformCp.size()];
  int index=0;
  for (  File file : platformCp) {
    platformUrls[index++]=file.toURI().toURL();
  }
  final List<URL> urls=new ArrayList<URL>(classpath.size());
  for (  File file : classpath) {
    urls.add(file.toURI().toURL());
  }
  return new InstrumentationClassFinder(platformUrls,urls.toArray(new URL[urls.size()])){
    protected InputStream lookupClassBeforeClasspath(    String internalClassName){
      final BinaryContent content=outputConsumer.lookupClassBytes(internalClassName.replace("/","."));
      if (content != null) {
        return new ByteArrayInputStream(content.getBuffer(),content.getOffset(),content.getLength());
      }
      return null;
    }
  }
;
}
