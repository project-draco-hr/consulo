{
  boolean doneSomething=false;
  for (  final CompiledClass compiledClass : outputConsumer.getCompiledClasses().values()) {
    final BinaryContent originalContent=compiledClass.getContent();
    final ClassReader reader=new ClassReader(originalContent.getBuffer(),originalContent.getOffset(),originalContent.getLength());
    final int version=getClassFileVersion(reader);
    if (version >= Opcodes.V1_5) {
      final ClassWriter writer=new InstrumenterClassWriter(getAsmClassWriterFlags(version),finder);
      try {
        final NotNullVerifyingInstrumenter instrumenter=new NotNullVerifyingInstrumenter(writer);
        reader.accept(instrumenter,0);
        if (instrumenter.isModification()) {
          compiledClass.setContent(new BinaryContent(writer.toByteArray()));
          doneSomething=true;
        }
      }
 catch (      Throwable e) {
        doneSomething=true;
        final StringBuilder msg=new StringBuilder();
        msg.append("@NotNull instrumentation failed ");
        final File sourceFile=compiledClass.getSourceFile();
        msg.append(" for ").append(sourceFile.getName());
        msg.append(": ").append(e.getMessage());
        context.processMessage(new CompilerMessage(getPresentableName(),BuildMessage.Kind.ERROR,msg.toString(),sourceFile.getPath()));
      }
    }
  }
  return doneSomething ? ExitCode.OK : ExitCode.NOTHING_DONE;
}
