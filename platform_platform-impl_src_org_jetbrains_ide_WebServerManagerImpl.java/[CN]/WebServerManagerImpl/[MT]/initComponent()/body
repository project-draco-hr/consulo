{
  Application application=ApplicationManager.getApplication();
  if (application.isUnitTestMode()) {
    return;
  }
  application.executeOnPooledThread(new Runnable(){
    @Override public void run(){
      detectedPortNumber=server.start(getDefaultPort(),PORTS_COUNT,true,new Computable<Consumer<ChannelPipeline>[]>(){
        @Override public Consumer<ChannelPipeline>[] compute(){
          Consumer<ChannelPipeline>[] consumers=Extensions.getExtensions(EP_NAME);
          if (consumers.length == 0) {
            LOG.warn("web server will be stopped, there are no pipeline consumers");
            SimpleTimer.getInstance().setUp(server.createShutdownTask(),3000);
          }
          return consumers;
        }
      }
);
      if (detectedPortNumber != -1) {
        ShutDownTracker.getInstance().registerShutdownTask(server.createShutdownTask());
        LOG.info("web server started, port " + detectedPortNumber);
      }
 else {
        LOG.info("web server cannot be started, cannot bind to port");
      }
    }
  }
);
}
