{
  final MockAbstractVcs vcs=new MockAbstractVcs(project);
  myChangeProvider=new MockDelayingChangeProvider();
  vcs.setChangeProvider(myChangeProvider);
  final File mockVcsRoot=new File(tmpDirPath,"mock");
  mockVcsRoot.mkdir();
  final ProjectLevelVcsManagerImpl projectLevelVcsManager=(ProjectLevelVcsManagerImpl)ProjectLevelVcsManager.getInstance(project);
  projectLevelVcsManager.registerVcs(vcs);
  projectLevelVcsManager.setDirectoryMapping(mockVcsRoot.getAbsolutePath(),vcs.getName());
  projectLevelVcsManager.updateActiveVcss();
  AbstractVcs vcsFound=projectLevelVcsManager.findVcsByName(vcs.getName());
  Assert.assertEquals(1,projectLevelVcsManager.getRootsUnderVcs(vcsFound).length);
  myDirtyScopeManager=VcsDirtyScopeManager.getInstance(project);
  myClManager=ChangeListManager.getInstance(project);
}
