{
  tree.setCellRenderer(cellRenderer);
  tree.setRootVisible(false);
  tree.setShowsRootHandles(true);
  tree.setLineStyleAngled();
  TreeUtil.installActions(tree);
  new ClickListener(){
    @Override public boolean onClick(    MouseEvent e,    int clickCount){
      int row=tree.getRowForLocation(e.getX(),e.getY());
      if (row < 0)       return false;
      final Object o=tree.getPathForRow(row).getLastPathComponent();
      if (!(o instanceof CheckedTreeNode))       return false;
      Rectangle rowBounds=tree.getRowBounds(row);
      cellRenderer.setBounds(rowBounds);
      Rectangle checkBounds=cellRenderer.myCheckbox.getBounds();
      checkBounds.setLocation(rowBounds.getLocation());
      if (checkBounds.height == 0)       checkBounds.height=rowBounds.height;
      final CheckedTreeNode node=(CheckedTreeNode)o;
      if (checkBounds.contains(e.getPoint())) {
        if (node.isEnabled()) {
          toggleNode(node);
          tree.setSelectionRow(row);
          return true;
        }
      }
      return false;
    }
  }
.installOn(this);
  addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (isToggleEvent(e)) {
        TreePath treePath=tree.getLeadSelectionPath();
        if (treePath == null)         return;
        final Object o=treePath.getLastPathComponent();
        if (!(o instanceof CheckedTreeNode))         return;
        CheckedTreeNode firstNode=(CheckedTreeNode)o;
        boolean checked=toggleNode(firstNode);
        TreePath[] selectionPaths=tree.getSelectionPaths();
        for (int i=0; selectionPaths != null && i < selectionPaths.length; i++) {
          final TreePath selectionPath=selectionPaths[i];
          final Object o1=selectionPath.getLastPathComponent();
          if (!(o1 instanceof CheckedTreeNode))           continue;
          CheckedTreeNode node=(CheckedTreeNode)o1;
          checkNode(node,checked);
          ((DefaultTreeModel)tree.getModel()).nodeChanged(node);
        }
        e.consume();
      }
    }
  }
);
  tree.setSelectionRow(0);
}
