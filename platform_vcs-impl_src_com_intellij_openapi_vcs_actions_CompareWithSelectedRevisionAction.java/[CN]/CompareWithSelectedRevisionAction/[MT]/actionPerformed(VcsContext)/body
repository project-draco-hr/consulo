{
  final VirtualFile file=vcsContext.getSelectedFiles()[0];
  final Project project=vcsContext.getProject();
  final AbstractVcs vcs=ProjectLevelVcsManager.getInstance(project).getVcsFor(file);
  final VcsHistoryProvider vcsHistoryProvider=vcs.getVcsHistoryProvider();
  new VcsHistoryProviderBackgroundableProxy(project,vcsHistoryProvider).createSessionFor(new FilePathImpl(file),new Consumer<VcsHistorySession>(){
    public void consume(    VcsHistorySession session){
      if (session == null)       return;
      final List<VcsFileRevision> revisions=session.getRevisionList();
      final HistoryAsTreeProvider treeHistoryProvider=session.getHistoryAsTreeProvider();
      if (treeHistoryProvider != null) {
        showTreePopup(treeHistoryProvider.createTreeOn(revisions),file,project,vcs.getDiffProvider());
      }
 else {
        showListPopup(revisions,project,new Consumer<VcsFileRevision>(){
          public void consume(          final VcsFileRevision revision){
            DiffActionExecutor.showDiff(vcs.getDiffProvider(),revision.getRevisionNumber(),file,project,VcsBackgroundableActions.COMPARE_WITH);
          }
        }
,true);
      }
    }
  }
,VcsBackgroundableActions.COMPARE_WITH,false,null);
}
