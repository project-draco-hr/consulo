{
  StringBuilder requiresBuffer=new StringBuilder();
  for (  PluginId id : StartupWizardModel.getNonOptionalDependencies(descriptor)) {
    final IdeaPluginDescriptor dependent=findPlugin(id);
    if (dependent != null) {
      String name=getAbbreviatedName(dependent);
      if (requiresBuffer.length() == 0) {
        requiresBuffer.append("   (requires ");
      }
 else {
        requiresBuffer.append(", ");
      }
      requiresBuffer.append(name);
    }
  }
  List<IdeaPluginDescriptor> requiredBy=myModel.getDependentsOnEarlierPages(descriptor,false);
  if (requiredBy.size() > 0) {
    if (requiresBuffer.length() > 0) {
      requiresBuffer.append(", ");
    }
 else {
      requiresBuffer.append("   (");
    }
    requiresBuffer.append("required by ");
    requiresBuffer.append(StringUtil.join(requiredBy,new Function<IdeaPluginDescriptor,String>(){
      @Override public String fun(      IdeaPluginDescriptor ideaPluginDescriptor){
        return getAbbreviatedName(ideaPluginDescriptor);
      }
    }
,", "));
  }
  if (requiresBuffer.length() > 0) {
    requiresBuffer.append(")");
  }
  return requiresBuffer.toString();
}
