{
  try {
    final AtomicReference<Runnable> currentTask=new AtomicReference<Runnable>(firstTask);
    myBackendExecutor.execute(new Runnable(){
      @Override public void run(){
        Runnable task=currentTask.get();
        do {
          currentTask.set(task);
          try {
            task.run();
          }
 catch (          Error ignored) {
          }
catch (          RuntimeException ignored) {
          }
          task=pollOrGiveUp(status);
        }
 while (task != null);
      }
      @Override public String toString(){
        return String.valueOf(info(currentTask.get()));
      }
    }
);
  }
 catch (  Error e) {
    myStatus.decrementAndGet();
    throw e;
  }
catch (  RuntimeException e) {
    myStatus.decrementAndGet();
    throw e;
  }
}
