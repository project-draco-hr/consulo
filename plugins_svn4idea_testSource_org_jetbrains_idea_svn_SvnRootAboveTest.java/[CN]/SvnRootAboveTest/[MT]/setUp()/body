{
  final IdeaTestFixtureFactory fixtureFactory=IdeaTestFixtureFactory.getFixtureFactory();
  myTempDirFixture=fixtureFactory.createTempDirTestFixture();
  myTempDirFixture.setUp();
  final File svnRoot=new File(myTempDirFixture.getTempDirPath(),"svnroot");
  svnRoot.mkdir();
  File pluginRoot=new File(PathManager.getHomePath(),"svnPlugins/svn4idea");
  if (!pluginRoot.isDirectory()) {
    Class aClass=SvnTestCase.class;
    String rootPath=PathManager.getResourceRoot(aClass,"/" + aClass.getName().replace('.','/') + ".class");
    pluginRoot=new File(rootPath).getParentFile().getParentFile().getParentFile();
  }
  myClientBinaryPath=new File(pluginRoot,"testData/svn/bin");
  verify(runSvnAdmin("create",svnRoot.getPath()));
  myLocalWcRoot=new File(myTempDirFixture.getTempDirPath(),"wcroot");
  myLocalWcRoot.mkdir();
  myRepoUrl="file:///" + FileUtil.toSystemIndependentName(svnRoot.getPath());
  verify(runSvn("co",myRepoUrl,myLocalWcRoot.getAbsolutePath()));
  sleep100();
  myProjectRoot=new File(myLocalWcRoot,"projectRoot");
  myProjectRoot.mkdir();
  sleep100();
  myModuleRoot=new File(myProjectRoot,"moduleRoot");
  myModuleRoot.mkdir();
  sleep100();
  verify(runArbitrary("cd",new String[]{myProjectRoot.getAbsolutePath()}));
  initProject(myModuleRoot);
  verify(runArbitrary("cd",new String[]{myTempDirFixture.getTempDirPath()}));
  myProjectLevelVcsManager=(ProjectLevelVcsManagerImpl)ProjectLevelVcsManager.getInstance(myProject);
  myProjectLevelVcsManager.setDirectoryMapping(myLocalWcRoot.getAbsolutePath(),SvnVcs.VCS_NAME);
  myProjectLevelVcsManager.updateActiveVcss();
  final SvnVcs vcs=SvnVcs.getInstance(myProject);
  ((SvnFileUrlMappingImpl)vcs.getSvnFileUrlMapping()).realRefresh();
  myClManager=ChangeListManager.getInstance(myProject);
}
