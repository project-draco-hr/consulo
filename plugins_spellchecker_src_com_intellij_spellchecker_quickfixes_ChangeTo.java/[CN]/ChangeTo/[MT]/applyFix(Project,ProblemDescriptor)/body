{
  PsiElement element=descriptor.getPsiElement();
  if (element == null)   return;
  Navigatable navigatable=EditSourceUtil.getDescriptor(element);
  if (!(navigatable instanceof OpenFileDescriptor))   return;
  Editor editor=PsiUtilBase.findEditor(element);
  if (editor == null) {
    return;
  }
  TextRange textRange=((ProblemDescriptorImpl)descriptor).getTextRange();
  editor.getSelectionModel().setSelection(textRange.getStartOffset(),textRange.getEndOffset());
  String word=editor.getSelectionModel().getSelectedText();
  if (word == null || StringUtil.isEmpty(word)) {
    return;
  }
  List<LookupElement> lookupItems=new ArrayList<LookupElement>();
  for (  String variant : getSuggestions()) {
    lookupItems.add(LookupElementBuilder.create(variant));
  }
  LookupElement[] items=new LookupElement[lookupItems.size()];
  items=lookupItems.toArray(items);
  LookupManager lookupManager=LookupManager.getInstance(project);
  lookupManager.showLookup(editor,items);
}
