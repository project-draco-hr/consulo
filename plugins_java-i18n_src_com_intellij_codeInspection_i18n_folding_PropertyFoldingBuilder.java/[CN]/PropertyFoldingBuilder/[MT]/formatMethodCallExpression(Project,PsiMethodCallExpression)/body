{
  final PsiExpression[] args=methodCallExpression.getArgumentList().getExpressions();
  if (args.length > 0 && args[0] instanceof PsiLiteralExpression && isI18nProperty(project,(PsiLiteralExpression)args[0])) {
    final int count=JavaI18nUtil.getPropertyValueParamsMaxCount((PsiLiteralExpression)args[0]);
    if (args.length == 1 + count) {
      String text=getI18nMessage(project,(PsiLiteralExpression)args[0]);
      for (int i=1; i < count + 1; i++) {
        Object value=JavaConstantExpressionEvaluator.computeConstantExpression(args[i],false);
        if (value == null) {
          if (args[i] instanceof PsiReferenceExpression) {
            value="{" + args[i].getText() + "}";
          }
 else {
            text=null;
            break;
          }
        }
        text=text.replace("{" + (i - 1) + "}",value.toString());
      }
      if (text != null) {
        if (!text.equals(methodCallExpression.getText())) {
          text=text.replace("''","'");
        }
        return text.length() > FOLD_MAX_LENGTH ? text.substring(0,FOLD_MAX_LENGTH - 3) + "...\"" : text;
      }
    }
  }
  return methodCallExpression.getText();
}
