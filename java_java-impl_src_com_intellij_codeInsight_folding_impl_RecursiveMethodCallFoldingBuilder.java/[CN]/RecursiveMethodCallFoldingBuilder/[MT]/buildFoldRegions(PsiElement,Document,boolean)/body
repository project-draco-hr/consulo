{
  if (!(root instanceof PsiJavaFile) || quick || !JavaCodeFoldingSettings.getInstance().isCollapseRecursiveMethodCalls()) {
    return FoldingDescriptor.EMPTY;
  }
  final List<FoldingDescriptor> result=new ArrayList<FoldingDescriptor>();
  root.accept(new JavaRecursiveElementWalkingVisitor(){
    @Override public void visitMethodCallExpression(    PsiMethodCallExpression expression){
      if (RecursionUtil.isRecursiveMethodCall(expression)) {
        final PsiIdentifier identifier=PsiTreeUtil.getChildOfType(expression.getMethodExpression(),PsiIdentifier.class);
        if (identifier != null) {
          result.add(new FoldingDescriptor(identifier,identifier.getTextRange()));
        }
      }
      super.visitMethodCallExpression(expression);
    }
  }
);
  return result.toArray(new FoldingDescriptor[result.size()]);
}
