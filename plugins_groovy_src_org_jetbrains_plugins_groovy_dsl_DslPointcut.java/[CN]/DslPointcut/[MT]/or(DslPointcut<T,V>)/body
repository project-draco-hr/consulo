{
  final DslPointcut<T,V> first=this;
  return new DslPointcut<T,V>(){
    @Override List<V> matches(    T src,    ProcessingContext context){
      final List<V> vs1=first.matches(src,context);
      final List<V> vs2=next.matches(src,context);
      if (vs1 == null && vs2 == null)       return null;
      final Set<V> result=new LinkedHashSet<V>();
      if (vs1 != null) {
        result.addAll(vs1);
      }
      if (vs2 != null) {
        result.addAll(vs2);
      }
      return new ArrayList<V>(result);
    }
    @Override boolean operatesOn(    Class c){
      return first.operatesOn(c) && next.operatesOn(c);
    }
  }
;
}
