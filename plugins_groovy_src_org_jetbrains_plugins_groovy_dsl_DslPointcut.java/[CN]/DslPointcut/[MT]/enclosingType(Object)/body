{
  return new DslPointcut<GroovyClassDescriptor,GdslType>(){
    @Override List<GdslType> matches(    GroovyClassDescriptor src,    ProcessingContext context){
      List<GdslType> result=new ArrayList<GdslType>();
      PsiElement place=src.getPlace();
      while (true) {
        final PsiClass cls=PsiTreeUtil.getContextOfType(place,PsiClass.class);
        if (cls == null) {
          break;
        }
        if (arg.equals(cls.getQualifiedName())) {
          result.add(new GdslType(JavaPsiFacade.getElementFactory(cls.getProject()).createType(cls)));
        }
        place=cls;
      }
      return result.isEmpty() ? null : result;
    }
    @Override boolean operatesOn(    Class c){
      return GroovyClassDescriptor.class == c;
    }
  }
;
}
