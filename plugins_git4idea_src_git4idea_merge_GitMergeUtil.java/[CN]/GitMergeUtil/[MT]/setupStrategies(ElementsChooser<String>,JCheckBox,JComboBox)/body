{
  final ElementsChooser.ElementsMarkListener<String> listener=new ElementsChooser.ElementsMarkListener<String>(){
    private void updateStrategies(    final List<String> elements){
      strategy.removeAllItems();
      for (      String s : getMergeStrategies(elements.size())) {
        strategy.addItem(s);
      }
      strategy.setSelectedItem(DEFAULT_STRATEGY);
    }
    public void elementMarkChanged(    final String element,    final boolean isMarked){
      final List<String> elements=branchChooser.getMarkedElements();
      if (elements.size() == 0) {
        strategy.setEnabled(false);
        updateStrategies(elements);
      }
 else       if (elements.size() == 1) {
        strategy.setEnabled(true);
        updateStrategies(elements);
        noCommitCheckBox.setEnabled(true);
        noCommitCheckBox.setSelected(false);
      }
 else {
        strategy.setEnabled(true);
        updateStrategies(elements);
        noCommitCheckBox.setEnabled(false);
        noCommitCheckBox.setSelected(false);
      }
    }
  }
;
  listener.elementMarkChanged(null,true);
  branchChooser.addElementsMarkListener(listener);
}
