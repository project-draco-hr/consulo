{
  List<Object> list=new ArrayList<Object>();
  @NonNls String val=getValue();
  int hackIndex=val.indexOf(CompletionUtil.DUMMY_IDENTIFIER);
  if (hackIndex > -1) {
    val=val.substring(0,hackIndex);
  }
  final String className=StringUtil.getPackageName(val);
  PsiClass cls=getDependsClass(val);
  if (cls != null) {
    PsiMethod current=PsiTreeUtil.getParentOfType(getElement(),PsiMethod.class);
    PsiMethod[] methods=cls.getMethods();
    for (    PsiMethod method : methods) {
      if (current != null && method.getName().equals(current.getName()))       continue;
      if (TestNGUtil.hasTest(method) || TestNGUtil.hasConfig(method)) {
        list.add(LookupValueFactory.createLookupValue(StringUtil.isEmpty(className) ? method.getName() : StringUtil.getQualifiedName(cls.getQualifiedName(),method.getName()),null));
      }
    }
  }
  return list.toArray();
}
