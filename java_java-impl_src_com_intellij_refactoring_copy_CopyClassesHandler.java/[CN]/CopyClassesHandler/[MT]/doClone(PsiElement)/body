{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.copyClass");
  PsiClass[] classes=getTopLevelClasses(element);
  if (classes == null) {
    CopyFilesOrDirectoriesHandler.doCloneFile(element);
    return;
  }
  Project project=element.getProject();
  CopyClassDialog dialog=new CopyClassDialog(classes[0],null,project,true);
  dialog.setTitle(RefactoringBundle.message("copy.handler.clone.class"));
  dialog.show();
  if (dialog.isOK()) {
    String className=dialog.getClassName();
    PsiDirectory targetDirectory=element.getContainingFile().getContainingDirectory();
    copyClassesImpl(className,project,Collections.singletonMap(classes[0].getContainingFile(),classes),null,targetDirectory,targetDirectory,RefactoringBundle.message("copy.handler.clone.class"),true);
  }
}
