{
  int topOffset1=editor1.logicalPositionToXY(new LogicalPosition(startLine1,0)).y;
  int bottomOffset1=editor1.logicalPositionToXY(new LogicalPosition(endLine1 + 1,0)).y;
  int topOffset2=editor2.logicalPositionToXY(new LogicalPosition(startLine2,0)).y;
  int bottomOffset2=editor2.logicalPositionToXY(new LogicalPosition(endLine2 + 1,0)).y;
  int rangeHeight1=bottomOffset1 - topOffset1;
  int rangeHeight2=bottomOffset2 - topOffset2;
  int gapLines1=2 * editor1.getLineHeight();
  int gapLines2=2 * editor2.getLineHeight();
  int editorHeight1=editor1.getScrollingModel().getVisibleArea().height;
  int editorHeight2=editor2.getScrollingModel().getVisibleArea().height;
  int maximumOffset1=((EditorEx)editor1).getScrollPane().getVerticalScrollBar().getMaximum() - editorHeight1;
  int maximumOffset2=((EditorEx)editor2).getScrollPane().getVerticalScrollBar().getMaximum() - editorHeight2;
  boolean canShow1=2 * gapLines1 + rangeHeight1 <= editorHeight1;
  boolean canShow2=2 * gapLines2 + rangeHeight2 <= editorHeight2;
  int topShift1=canShow1 ? Math.min(editorHeight1 - gapLines1 - rangeHeight1,editorHeight1 / 3) : gapLines1;
  int topShift2=canShow2 ? Math.min(editorHeight2 - gapLines2 - rangeHeight2,editorHeight2 / 3) : gapLines2;
  int topShift=Math.min(topShift1,topShift2);
  topShift=Math.min(topShift,Math.min(topOffset1,topOffset2));
  int offset1=topOffset1 - topShift;
  int offset2=topOffset2 - topShift;
  if (maximumOffset1 > offset1 && maximumOffset2 > offset2)   return new IntPair(offset1,offset2);
  topShift=Math.max(topOffset1 - maximumOffset1,topOffset2 - maximumOffset2);
  offset1=topOffset1 - topShift + Math.max(topShift + rangeHeight1 + gapLines1 - editorHeight1,0);
  offset2=topOffset2 - topShift + Math.max(topShift + rangeHeight2 + gapLines2 - editorHeight2,0);
  offset1=Math.min(offset1,topOffset1 - gapLines1);
  offset2=Math.min(offset2,topOffset2 - gapLines2);
  return new IntPair(offset1,offset2);
}
