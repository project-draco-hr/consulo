{
  AbstractTreeNode alreadySelected=alreadySelectedNode(element);
  final Runnable onDone=new Runnable(){
    public void run(){
      if (requestFocus && virtualSelectTarget == null) {
        focusRequestor.requestFocus(getTree(),true);
      }
      result.setDone();
    }
  }
;
  final Condition<AbstractTreeNode> condition=new Condition<AbstractTreeNode>(){
    public boolean value(    AbstractTreeNode abstractTreeNode){
      if (result.isProcessed())       return false;
      return nonStopCondition.value(abstractTreeNode);
    }
  }
;
  if (alreadySelected == null) {
    expandPathTo(file,(AbstractTreeNode)getTreeStructure().getRootElement(),element,condition,indicator,virtualSelectTarget).doWhenDone(new AsyncResult.Handler<AbstractTreeNode>(){
      public void run(      AbstractTreeNode node){
        if (virtualSelectTarget == null) {
          select(node,onDone);
        }
 else         if (onDone != null) {
          onDone.run();
        }
      }
    }
).notifyWhenRejected(result);
  }
 else {
    if (virtualSelectTarget == null) {
      select(alreadySelected,onDone);
    }
 else     if (onDone != null) {
      onDone.run();
    }
  }
}
