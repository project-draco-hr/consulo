{
  saveAll();
  if (!ProjectLevelVcsManager.getInstance(project).checkAllFilesAreUnder(GitVcs.getInstance(project),affectedFiles))   return;
  final Map<VirtualFile,List<VirtualFile>> roots=GitUtil.sortFilesByVcsRoot(project,affectedFiles);
  for (  VirtualFile root : roots.keySet()) {
    GitCommand command=new GitCommand(project,vcs.getSettings(),root);
    List<VirtualFile> files=roots.get(root);
    if (files == null || files.size() == 0)     continue;
    String[] fileNames=new String[files.size()];
    int i=0;
    for (    VirtualFile file : files) {
      fileNames[i++]=GitUtil.getRelativeFilePath(file,root);
    }
    command.mergetool(fileNames);
  }
}
