{
  Map<String,PsiImportStatement> classNameToImportMap=new HashMap<String,PsiImportStatement>();
  Map<String,PsiImportStatement> packageNameToImportMap=new HashMap<String,PsiImportStatement>();
  Map<String,PsiImportStatementBase> nameToSingleImportMap=new HashMap<String,PsiImportStatementBase>();
  PsiImportStatement[] imports=getImportStatements();
  for (  PsiImportStatement anImport : imports) {
    String qName=anImport.getQualifiedName();
    if (qName == null)     continue;
    if (anImport.isOnDemand()) {
      packageNameToImportMap.put(qName,anImport);
    }
 else {
      classNameToImportMap.put(qName,anImport);
      PsiJavaCodeReferenceElement importReference=anImport.getImportReference();
      if (importReference == null)       continue;
      nameToSingleImportMap.put(importReference.getReferenceName(),anImport);
    }
  }
  PsiImportStaticStatement[] importStatics=getImportStaticStatements();
  for (  PsiImportStaticStatement importStatic : importStatics) {
    if (!importStatic.isOnDemand()) {
      String referenceName=importStatic.getReferenceName();
      if (referenceName != null) {
        nameToSingleImportMap.put(referenceName,importStatic);
      }
    }
  }
  myClassNameToImportMap=classNameToImportMap;
  myPackageNameToImportMap=packageNameToImportMap;
  myNameToSingleImportMap=nameToSingleImportMap;
}
