{
  if (myRepositoryImports == null) {
    CompositeElement treeElement=getTreeElement();
    if (treeElement != null) {
      final ASTNode[] imports=treeElement.getChildren(IMPORT_STATEMENT_BASE_BIT_SET);
      int count=imports.length;
      myRepositoryImports=new PsiImportStatementBaseImpl[count];
      for (int i=0; i < myRepositoryImports.length; i++) {
        final IElementType type=imports[i].getElementType();
        if (type == IMPORT_STATEMENT) {
          myRepositoryImports[i]=new PsiImportStatementImpl(myManager,this,i);
        }
 else         if (imports[i].getElementType() == IMPORT_STATIC_STATEMENT) {
          myRepositoryImports[i]=new PsiImportStaticStatementImpl(myManager,this,i);
        }
 else {
          LOG.assertTrue(false,"Unknown child: " + type.toString() + " "+ type);
        }
      }
    }
 else {
      final FileView fileView=getRepositoryManager().getFileView();
      final long repositoryId=getRepositoryId();
      int count=fileView.getImportStatementsCount(repositoryId);
      myRepositoryImports=new PsiImportStatementBaseImpl[count];
      for (int i=0; i < myRepositoryImports.length; i++) {
        if (fileView.isImportStatic(repositoryId,i)) {
          myRepositoryImports[i]=new PsiImportStaticStatementImpl(myManager,this,i);
        }
 else {
          myRepositoryImports[i]=new PsiImportStatementImpl(myManager,this,i);
        }
      }
    }
  }
}
