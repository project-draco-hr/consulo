{
  if (inputOptions.containsKey(COLON_REPLACEMENT)) {
    myColonReplacement.setText((String)inputOptions.get(COLON_REPLACEMENT));
  }
  myInlineAttlistCheckBox.setSelected(inputOptions.get(INLINE_ATTLIST) == Boolean.TRUE);
  if (inputOptions.containsKey(ELEMENT_DEFINE)) {
    myElementDefine.setText((String)inputOptions.get(ELEMENT_DEFINE));
  }
  if (inputOptions.containsKey(ATTLIST_DEFINE)) {
    myAttlistDefine.setText((String)inputOptions.get(ATTLIST_DEFINE));
  }
  if (inputOptions.containsKey(ANY_NAME)) {
    myAnyName.setText((String)inputOptions.get(ANY_NAME));
  }
  myStrictAnyCheckBox.setSelected(inputOptions.get(STRICT_ANY) == Boolean.TRUE);
  if (inputOptions.containsKey(ANNOTATION_PREFIX)) {
    myAnnotationPrefix.setText((String)inputOptions.get(ANNOTATION_PREFIX));
  }
  myGenerateStartCheckBox.setSelected(inputOptions.get(GENERATE_START) == Boolean.TRUE);
  if (inputOptions.containsKey(XMLNS)) {
    myDefaultNS.setText((String)inputOptions.get(XMLNS));
  }
  final NamespaceMapModel model=(NamespaceMapModel)myNamespaceMap.getModel();
  final Set<String> set=inputOptions.keySet();
  final String prefix=XMLNS + ":";
  for (  String s : set) {
    if (s.startsWith(prefix)) {
      model.addMapping(s.substring(prefix.length()),(String)inputOptions.get(s));
    }
  }
}
