{
  if (fromType == toType)   return true;
  final boolean fromIsPrimitive=isPrimitiveAndNotNull(fromType);
  final boolean toIsPrimitive=isPrimitiveAndNotNull(toType);
  if (fromIsPrimitive || toIsPrimitive) {
    if (isVoidType(fromType) || isVoidType(toType))     return false;
    final int fromTypeRank=getTypeRank(fromType);
    final int toTypeRank=getTypeRank(toType);
    if (!toIsPrimitive) {
      if (fromTypeRank == toTypeRank)       return true;
      if (!(toType instanceof PsiClassType))       return false;
      PsiClass toClass=((PsiClassType)toType).resolve();
      if (toClass == null)       return false;
      PsiClassType boxedType=((PsiPrimitiveType)fromType).getBoxedType(toClass.getManager(),toType.getResolveScope());
      return boxedType != null && areTypesConvertible(boxedType,toType);
    }
    if (!fromIsPrimitive) {
      if (fromTypeRank == toTypeRank)       return true;
      return fromTypeRank <= MAX_NUMERIC_RANK && toTypeRank <= MAX_NUMERIC_RANK && fromTypeRank < toTypeRank;
    }
    return fromTypeRank == toTypeRank || fromTypeRank <= MAX_NUMERIC_RANK && toTypeRank <= MAX_NUMERIC_RANK;
  }
  if (isAssignable(toType,fromType))   return true;
  if (isNullType(fromType) || isNullType(toType))   return true;
  return isNarrowingReferenceConversionAllowed(fromType,toType);
}
