{
  if (manager.getEffectiveLanguageLevel().compareTo(LanguageLevel.JDK_1_5) < 0)   return true;
  PsiClass base=baseResult.getElement();
  PsiClass[] supers=derived.getSupers();
  if (manager.areElementsEquivalent(base,derived)) {
    derivedSubstitutor=getSuperClassSubstitutor(derived,derived,derivedSubstitutor);
    return !areDistinctArgumentTypes(derived,baseResult.getSubstitutor(),derivedSubstitutor);
  }
 else   if (base.isInheritor(derived,true)) {
    derivedSubstitutor=getSuperClassSubstitutor(derived,derived,derivedSubstitutor);
    PsiSubstitutor baseSubstitutor=getSuperClassSubstitutor(derived,base,baseResult.getSubstitutor());
    if (areDistinctArgumentTypes(derived,baseSubstitutor,derivedSubstitutor))     return false;
  }
  for (int i=0; i < supers.length; i++) {
    PsiClass aSuper=supers[i];
    if (aSuper.isInheritor(base,true))     continue;
    PsiSubstitutor s=getSuperClassSubstitutor(aSuper,derived,derivedSubstitutor);
    if (!checkSuperTypesWithDifferentTypeArguments(baseResult,aSuper,manager,s))     return false;
  }
  return true;
}
