{
  for (  final PsiClassType type : types) {
    final PsiType substitutedType=candidateSubstitutor.substitute(type);
    LOG.assertTrue(substitutedType instanceof PsiClassType);
    final JavaResolveResult result=((PsiClassType)substitutedType).resolveGenerics();
    final PsiElement newCandidate=result.getElement();
    if (newCandidate != null) {
      final PsiSubstitutor substitutor=result.getSubstitutor();
      final PsiSubstitutor newSubstitutor=getSuperClassSubstitutorInner(base,(PsiClass)newCandidate,substitutor,set,manager);
      if (newSubstitutor != null) {
        return type.isRaw() ? JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createRawSubstitutor(base) : newSubstitutor;
      }
    }
  }
  return null;
}
