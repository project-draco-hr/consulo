{
  final List<String> words=StringUtil.getWordsIn(stringToFind);
  if (words.isEmpty())   return;
  Collections.sort(words,new Comparator<String>(){
    public int compare(    final String o1,    final String o2){
      return o2.length() - o1.length();
    }
  }
);
  for (  String word : words) {
    final Set<PsiFile> files=new THashSet<PsiFile>();
    searchHelper.processAllFilesWithWord(word,scope,new CommonProcessors.CollectProcessor<PsiFile>(files),true);
    if (resultFiles.isEmpty()) {
      resultFiles.addAll(files);
    }
 else {
      resultFiles.retainAll(files);
    }
    if (resultFiles.isEmpty())     return;
  }
}
