{
  final StackFrameDescriptorImpl descriptor=new StackFrameDescriptorImpl(myFrame,myTracker);
  descriptor.setContext(myEvaluationContext);
  descriptor.updateRepresentation(myEvaluationContext,DescriptorLabelListener.DUMMY_LISTENER);
  DebuggerInvocationUtil.invokeLater(getProject(),new Runnable(){
    public void run(){
      try {
        myFramesListener.setEnabled(false);
synchronized (myFramesList) {
          final DefaultListModel model=myFramesList.getModel();
          if (model.isEmpty() || myFramesLastUpdateTime < myTimestamp) {
            myFramesLastUpdateTime=myTimestamp;
            model.clear();
            for (int idx=0; idx < myTotalFramesCount; idx++) {
              final String label="<frame " + idx + ">";
              model.addElement(new Object(){
                public String toString(){
                  return label;
                }
              }
);
            }
          }
          if (myTimestamp != myFramesLastUpdateTime) {
            return;
          }
          model.removeElementAt(myIndexToInsert);
          model.insertElementAt(descriptor,myIndexToInsert);
          if (myIsContextFrame) {
            myFramesList.setSelectedIndex(myIndexToInsert);
          }
        }
      }
  finally {
        myFramesListener.setEnabled(true);
      }
    }
  }
);
}
