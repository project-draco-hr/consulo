{
  final ThreadReferenceProxyImpl thread=myDebuggerContext.getThreadProxy();
  try {
    if (!getSuspendContext().getDebugProcess().getSuspendManager().isSuspended(thread)) {
      return;
    }
  }
 catch (  ObjectCollectedException e) {
    return;
  }
  List<StackFrameProxyImpl> frames;
  try {
    frames=thread.frames();
  }
 catch (  EvaluateException e) {
    frames=Collections.emptyList();
  }
  final StackFrameProxyImpl contextFrame=myDebuggerContext.getFrameProxy();
  final EvaluationContextImpl evaluationContext=myDebuggerContext.createEvaluationContext();
  final DebuggerManagerThreadImpl managerThread=myDebuggerContext.getDebugProcess().getManagerThread();
  final MethodsTracker tracker=new MethodsTracker();
  final int totalFramesCount=frames.size();
  int index=0;
  final long timestamp=System.currentTimeMillis();
  for (  StackFrameProxyImpl stackFrameProxy : frames) {
    managerThread.invokeLater(new AppendFrameCommand(getSuspendContext(),stackFrameProxy,evaluationContext,tracker,index++,stackFrameProxy.equals(contextFrame),totalFramesCount,timestamp));
  }
}
