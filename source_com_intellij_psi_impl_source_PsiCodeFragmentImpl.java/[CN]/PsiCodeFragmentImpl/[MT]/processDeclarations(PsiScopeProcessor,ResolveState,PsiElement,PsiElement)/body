{
  final ElementClassHint classHint=processor.getHint(ElementClassHint.class);
  if (classHint == null || classHint.shouldProcess(PsiClass.class)) {
    final NameHint nameHint=processor.getHint(NameHint.class);
    final String name=nameHint != null ? nameHint.getName(state) : null;
    if (name != null) {
      String qNameImported=myPseudoImports.get(name);
      if (qNameImported != null) {
        PsiClass imported=JavaPsiFacade.getInstance(myManager.getProject()).findClass(qNameImported,getResolveScope());
        if (imported != null) {
          if (!processor.execute(imported,state))           return false;
        }
      }
    }
 else {
      for (      String qNameImported : myPseudoImports.values()) {
        PsiClass aClass=JavaPsiFacade.getInstance(myManager.getProject()).findClass(qNameImported,getResolveScope());
        if (aClass != null) {
          if (!processor.execute(aClass,state))           return false;
        }
      }
    }
    if (myContext == null) {
      return JavaResolveUtil.processImplicitlyImportedPackages(processor,state,place,getManager());
    }
  }
  IElementType i=myContentElementType;
  if (i == ElementType.TYPE_TEXT || i == ElementType.EXPRESSION_STATEMENT || i == ElementType.REFERENCE_TEXT) {
    return true;
  }
 else {
    processor.handleEvent(PsiScopeProcessor.Event.SET_DECLARATION_HOLDER,this);
    if (lastParent == null) {
      return true;
    }
    return PsiScopesUtil.walkChildrenScopes(this,processor,state,lastParent,place);
  }
}
