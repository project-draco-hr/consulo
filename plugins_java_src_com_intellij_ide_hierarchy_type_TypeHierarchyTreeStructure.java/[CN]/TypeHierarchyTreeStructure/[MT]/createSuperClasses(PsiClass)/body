{
  if (!aClass.isValid())   return PsiClass.EMPTY_ARRAY;
  if (aClass.isInterface())   return PsiClass.EMPTY_ARRAY;
  final ArrayList<PsiClass> superClasses=new ArrayList<PsiClass>();
  while (!CommonClassNames.JAVA_LANG_OBJECT.equals(aClass.getQualifiedName())) {
    final PsiClass aClass1=aClass;
    final PsiClass[] superTypes=aClass1.getSupers();
    PsiClass superType=null;
    for (int i=0; i < superTypes.length; i++) {
      final PsiClass type=superTypes[i];
      if (!type.isInterface()) {
        superType=type;
        break;
      }
    }
    if (superType == null)     break;
    if (superClasses.contains(superType))     break;
    superClasses.add(superType);
    aClass=superType;
  }
  return superClasses.toArray(new PsiClass[superClasses.size()]);
}
