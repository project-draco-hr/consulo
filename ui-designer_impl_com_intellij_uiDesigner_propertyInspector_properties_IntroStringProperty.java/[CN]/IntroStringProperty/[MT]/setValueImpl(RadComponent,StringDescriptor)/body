{
  if (value == null || (value.getBundleName() == null && !value.isNoI18n())) {
    getName2Descriptor(component).remove(getName());
  }
 else {
    getName2Descriptor(component).put(getName(),value);
  }
  final JComponent delegee=component.getDelegee();
  final String resolvedValue=(value != null && value.getValue() != null) ? value.getValue() : ReferenceUtil.resolve(component,value);
  if (value != null) {
    value.setResolvedValue(resolvedValue);
  }
  if (SwingProperties.TEXT.equals(getName())) {
    final SupportCode.TextWithMnemonic textWithMnemonic=SupportCode.parseText(resolvedValue);
    BindingProperty.checkCreateBindingFromText(component,textWithMnemonic.myText);
    if (delegee instanceof JLabel) {
      final JLabel label=(JLabel)delegee;
      label.setText(textWithMnemonic.myText);
      if (textWithMnemonic.myMnemonicIndex != -1) {
        label.setDisplayedMnemonic(textWithMnemonic.getMnemonicChar());
        label.setDisplayedMnemonicIndex(textWithMnemonic.myMnemonicIndex);
      }
 else {
        label.setDisplayedMnemonic(0);
      }
    }
 else     if (delegee instanceof AbstractButton) {
      final AbstractButton button=(AbstractButton)delegee;
      button.setText(textWithMnemonic.myText);
      if (textWithMnemonic.myMnemonicIndex != -1) {
        button.setMnemonic(textWithMnemonic.getMnemonicChar());
        button.setDisplayedMnemonicIndex(textWithMnemonic.myMnemonicIndex);
      }
 else {
        button.setMnemonic(0);
      }
    }
 else {
      invokeSetter(component,resolvedValue);
    }
  }
 else {
    invokeSetter(component,resolvedValue);
  }
}
