{
  final StringDescriptor descriptor=(StringDescriptor)value;
  if (descriptor == null || (descriptor.getBundleName() == null && !descriptor.isNoI18n())) {
    getName2Descriptor(component).remove(getName());
  }
 else {
    getName2Descriptor(component).put(getName(),descriptor);
  }
  final JComponent delegee=component.getDelegee();
  final String resolvedValue=ReferenceUtil.resolve(component.getModule(),descriptor);
  if (descriptor != null) {
    descriptor.setResolvedValue(resolvedValue);
  }
  if (SwingProperties.TEXT.equals(getName()) && (delegee instanceof JLabel)) {
    final JLabel label=(JLabel)delegee;
    final SupportCode.TextWithMnemonic textWithMnemonic=SupportCode.parseText(resolvedValue);
    label.setText(textWithMnemonic.myText);
    if (textWithMnemonic.myMnemonicIndex != -1) {
      label.setDisplayedMnemonic(textWithMnemonic.getMnemonicChar());
      label.setDisplayedMnemonicIndex(textWithMnemonic.myMnemonicIndex);
    }
 else {
      label.setDisplayedMnemonic(0);
    }
  }
 else   if (SwingProperties.TEXT.equals(getName()) && (delegee instanceof AbstractButton)) {
    final AbstractButton button=(AbstractButton)delegee;
    final SupportCode.TextWithMnemonic textWithMnemonic=SupportCode.parseText(resolvedValue);
    button.setText(textWithMnemonic.myText);
    if (textWithMnemonic.myMnemonicIndex != -1) {
      button.setMnemonic(textWithMnemonic.getMnemonicChar());
      button.setDisplayedMnemonicIndex(textWithMnemonic.myMnemonicIndex);
    }
 else {
      button.setMnemonic(0);
    }
  }
 else {
    super.setValueImpl(component,resolvedValue);
  }
}
