{
  final Module module=myEditor.getRootContainer().getModule();
  final GlobalSearchScope scope=GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module);
  final PsiManager psiManager=PsiManager.getInstance(myEditor.getProject());
  final Ref<IncorrectOperationException> exception=new Ref<IncorrectOperationException>();
  FormEditingUtil.iterate(myEditor.getRootContainer(),new FormEditingUtil.ComponentVisitor(){
    public boolean visit(    final IComponent component){
      if (component.getBinding() != null) {
        final PsiClass fieldClass=psiManager.findClass(component.getComponentClassName(),scope);
        if (fieldClass != null) {
          PsiType fieldType=psiManager.getElementFactory().createType(fieldClass);
          try {
            PsiField field=psiManager.getElementFactory().createField(component.getBinding(),fieldType);
            formClass.add(field);
          }
 catch (          IncorrectOperationException e) {
            exception.set(e);
            return false;
          }
        }
      }
      return true;
    }
  }
);
  if (!exception.isNull()) {
    throw exception.get();
  }
}
