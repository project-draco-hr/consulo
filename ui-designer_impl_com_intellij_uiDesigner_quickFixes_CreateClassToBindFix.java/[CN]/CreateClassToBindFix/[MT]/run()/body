{
  final Project project=myEditor.getProject();
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(project).getFileIndex();
  final VirtualFile sourceRoot=fileIndex.getSourceRootForFile(myEditor.getFile());
  if (sourceRoot == null) {
    Messages.showErrorDialog(myEditor,UIDesignerBundle.message("error.cannot.create.class.not.in.source.root"),CommonBundle.getErrorTitle());
    return;
  }
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    public void run(){
      CommandProcessor.getInstance().executeCommand(project,new Runnable(){
        public void run(){
          final int indexOfLastDot=myClassName.lastIndexOf('.');
          final String packageName=myClassName.substring(0,indexOfLastDot != -1 ? indexOfLastDot : 0);
          final PsiDirectory psiDirectory;
          if (packageName.length() > 0) {
            final PackageWrapper packageWrapper=new PackageWrapper(PsiManager.getInstance(project),packageName);
            try {
              psiDirectory=RefactoringUtil.createPackageDirectoryInSourceRoot(packageWrapper,sourceRoot);
              LOG.assertTrue(psiDirectory != null);
            }
 catch (            final IncorrectOperationException e) {
              ApplicationManager.getApplication().invokeLater(new Runnable(){
                public void run(){
                  Messages.showErrorDialog(myEditor,UIDesignerBundle.message("error.cannot.create.package",packageName,e.getMessage()),CommonBundle.getErrorTitle());
                }
              }
);
              return;
            }
          }
 else {
            psiDirectory=PsiManager.getInstance(project).findDirectory(sourceRoot);
            LOG.assertTrue(psiDirectory != null);
          }
          try {
            final String name=myClassName.substring(indexOfLastDot != -1 ? indexOfLastDot + 1 : 0);
            final PsiClass aClass=psiDirectory.createClass(name);
            createBoundFields(aClass);
          }
 catch (          final IncorrectOperationException e) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                Messages.showErrorDialog(myEditor,UIDesignerBundle.message("error.cannot.create.class",packageName,e.getMessage()),CommonBundle.getErrorTitle());
              }
            }
);
          }
        }
      }
,getName(),null);
    }
  }
);
}
