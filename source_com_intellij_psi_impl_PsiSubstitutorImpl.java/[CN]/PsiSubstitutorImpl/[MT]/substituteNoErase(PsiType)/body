{
  if (type == null)   return null;
  PsiType substituted=type.accept(new SubstitutionVisitorBase(){
    public PsiType visitClassType(    final PsiClassType classType){
      final PsiClassType.ClassResolveResult resolveResult=classType.resolveGenerics();
      final PsiClass aClass=resolveResult.getElement();
      if (aClass == null)       return classType;
      if (aClass instanceof PsiTypeParameter) {
        final PsiTypeParameter typeParameter=(PsiTypeParameter)aClass;
        PsiType t=mySubstitutionMap.get(typeParameter);
        if (t == null) {
          return null;
        }
 else {
          return addBounds(t,typeParameter);
        }
      }
      PsiElementFactory factory=JavaPsiFacade.getInstance(aClass.getProject()).getElementFactory();
      PsiSubstitutor substitutor=PsiUtil.isRawSubstitutor(aClass,PsiSubstitutorImpl.this) ? factory.createRawSubstitutor(aClass) : resolveResult.getSubstitutor();
      return factory.createType(aClass,substitutor,classType.getLanguageLevel());
    }
  }
);
  return substituted;
}
