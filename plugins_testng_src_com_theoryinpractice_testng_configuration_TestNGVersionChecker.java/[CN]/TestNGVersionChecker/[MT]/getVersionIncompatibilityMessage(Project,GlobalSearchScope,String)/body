{
  final String protocolClassMessageClass=TestResultMessage.class.getName();
  final PsiClass psiProtocolClass=JavaPsiFacade.getInstance(project).findClass(protocolClassMessageClass,scope);
  if (psiProtocolClass != null) {
    final String instanceFieldName="m_instanceName";
    try {
      final boolean userHasNewJar=psiProtocolClass.findFieldByName(instanceFieldName,false) != null;
      boolean ideaHasNewJar=true;
      final Class aClass=Class.forName(protocolClassMessageClass);
      try {
        aClass.getDeclaredField(instanceFieldName);
      }
 catch (      NoSuchFieldException e) {
        ideaHasNewJar=false;
      }
      if (userHasNewJar != ideaHasNewJar) {
        return getIncompatibilityMessage(project,scope,pathToBundledJar);
      }
    }
 catch (    Exception ignore) {
    }
  }
  return null;
}
