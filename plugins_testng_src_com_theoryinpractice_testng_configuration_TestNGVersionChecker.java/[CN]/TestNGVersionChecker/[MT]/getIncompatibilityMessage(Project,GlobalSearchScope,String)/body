{
  final String protocolClassMessageClass=TestResultMessage.class.getName();
  final PsiClass psiProtocolClass=JavaPsiFacade.getInstance(project).findClass(protocolClassMessageClass,scope);
  if (psiProtocolClass != null) {
    final ZipFile workingLibrary=getZipLibrary(project,scope);
    if (workingLibrary != null) {
      final VirtualFile bundledJar=LocalFileSystem.getInstance().findFileByPath(pathToBundledJar);
      if (bundledJar != null) {
        final String jarVersion=JarVersionDetectionUtil.detectJarVersion(workingLibrary);
        final VirtualFile bundledJarJar=JarFileSystem.getInstance().getJarRootForLocalFile(bundledJar);
        if (bundledJarJar == null)         return null;
        String bundledVersion;
        try {
          bundledVersion=JarVersionDetectionUtil.detectJarVersion(JarFileSystem.getInstance().getJarFile(bundledJarJar));
        }
 catch (        IOException e) {
          return null;
        }
        return TEST_NG_VERSIONS_INCOMPATIBILITY + "Right now " + ApplicationNamesInfo.getInstance().getFullProductName()+ " does not support testng version (v."+ jarVersion+ ") used in your project due to the protocol changes on the TestNG side.<br>"+ "Bundled jar (v."+ bundledVersion+ ") was used instead to run your tests.<br>"+ COPY_MESSAGE;
      }
    }
  }
  return null;
}
