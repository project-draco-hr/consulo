{
  if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
    final String testNGPluginLibPath=PathManager.getHomePath() + File.separator + "plugins"+ File.separator+ "testng"+ File.separator+ "lib";
    final VirtualFile library=getWorkingLibrary(myProject,myScope);
    if (library != null) {
      try {
        final String jarName=new File(PathUtil.getJarPathForClass(AfterClass.class)).getName();
        PluginDownloader.replaceLib(testNGPluginLibPath,jarName,library);
        final Application app=ApplicationManager.getApplication();
        final String updateSuccessfullyMessage="Internal testng.jar was successfully updated. ";
        if (app.isRestartCapable()) {
          final String restartMessage=updateSuccessfullyMessage + "Would you like to restart " + ApplicationNamesInfo.getInstance().getFullProductName()+ " to apply changes?";
          if (Messages.showOkCancelDialog(myProject,restartMessage,CommonBundle.getWarningTitle(),"Restart","Postpone",Messages.getWarningIcon()) == DialogWrapper.OK_EXIT_CODE) {
            ApplicationManager.getApplication().restart();
          }
        }
 else {
          final String message=updateSuccessfullyMessage + "Restart " + ApplicationNamesInfo.getInstance().getFullProductName()+ " in order to apply changes.";
          TestsUIUtil.NOTIFICATION_GROUP.createNotification(message,MessageType.INFO).notify(myProject);
        }
      }
 catch (      IOException e1) {
        LOG.info(e1);
      }
    }
  }
}
