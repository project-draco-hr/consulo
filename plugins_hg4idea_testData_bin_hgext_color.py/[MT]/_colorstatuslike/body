def _colorstatuslike(abbreviations, effectdefs, orig, ui, repo, *pats, **opts):
    'run a status-like command with colorized output'
    delimiter = ((opts.get('print0') and '\x00') or '\n')
    nostatus = opts.get('no_status')
    opts['no_status'] = False
    ui.pushbuffer()
    retval = orig(ui, repo, *pats, **opts)
    lines_with_status = [line for line in ui.popbuffer().split(delimiter) if line]
    if nostatus:
        lines = [l[2:] for l in lines_with_status]
    else:
        lines = lines_with_status
    for i in xrange(len(lines)):
        try:
            status = abbreviations[lines_with_status[i][0]]
        except KeyError:
            pass
        else:
            effects = effectdefs[status]
            if effects:
                lines[i] = render_effects(lines[i], effects)
        ui.write((lines[i] + delimiter))
    return retval
