def _setupcmd(ui, cmd, table, func, effectsmap):
    'patch in command to command table and load effect map'

    def nocolor(orig, *args, **opts):
        if (opts['no_color'] or (opts['color'] == 'never') or ((opts['color'] == 'auto') and ((os.environ.get('TERM') == 'dumb') or (not sys.__stdout__.isatty())))):
            del opts['no_color']
            del opts['color']
            return orig(*args, **opts)
        oldshowpatch = extensions.wrapfunction(cmdutil.changeset_printer, 'showpatch', colorshowpatch)
        del opts['no_color']
        del opts['color']
        try:
            if (func is not None):
                return func(orig, *args, **opts)
            return orig(*args, **opts)
        finally:
            cmdutil.changeset_printer.showpatch = oldshowpatch
    entry = extensions.wrapcommand(table, cmd, nocolor)
    entry[1].extend([('', 'color', 'auto', _('when to colorize (always, auto, or never)')), ('', 'no-color', None, _("don't colorize output (DEPRECATED)"))])
    for status in effectsmap:
        configkey = ((cmd + '.') + status)
        effects = ui.configlist('color', configkey)
        if effects:
            good = []
            for e in effects:
                if (e in _effect_params):
                    good.append(e)
                else:
                    ui.warn((_('ignoring unknown color/effect %r (configured in color.%s)\n') % (e, configkey)))
            effectsmap[status] = good
