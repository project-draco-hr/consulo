{
  final LabelRenderer labelRenderer=new LabelRenderer(){
    public String calcLabel(    ValueDescriptor descriptor,    EvaluationContext evaluationContext,    DescriptorLabelListener labelListener) throws EvaluateException {
      final String evaluated=super.calcLabel(descriptor,evaluationContext,labelListener);
      if (prefix == null && postfix == null) {
        return evaluated;
      }
      if (prefix != null && postfix != null) {
        return prefix + evaluated + postfix;
      }
      if (prefix != null) {
        return prefix + evaluated;
      }
      return evaluated + postfix;
    }
  }
;
  labelRenderer.setLabelExpression(new TextWithImportsImpl(CodeFragmentKind.EXPRESSION,expressionText));
  return labelRenderer;
}
