{
  if (editedFile instanceof XmlFile && c == '/') {
    PsiDocumentManager.getInstance(project).commitAllDocuments();
    XmlFile file=(XmlFile)PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
    FileViewProvider provider=file.getViewProvider();
    final int offset=editor.getCaretModel().getOffset();
    PsiElement element=provider.findElementAt(offset - 1,XMLLanguage.class);
    if (element == null)     return false;
    if (!(element.getLanguage() instanceof XMLLanguage))     return false;
    ASTNode prevLeaf=element.getNode();
    final String prevLeafText=prevLeaf != null ? prevLeaf.getText() : null;
    if (prevLeaf != null && !"/".equals(prevLeafText)) {
      if (!"/".equals(prevLeafText.trim()))       return false;
    }
    while ((prevLeaf=TreeUtil.prevLeaf(prevLeaf)) != null && prevLeaf.getElementType() == XmlTokenType.XML_WHITE_SPACE)     ;
    if (prevLeaf instanceof OuterLanguageElement) {
      element=file.getDocument().findElementAt(offset - 1);
      prevLeaf=element.getNode();
      while ((prevLeaf=TreeUtil.prevLeaf(prevLeaf)) != null && prevLeaf.getElementType() == XmlTokenType.XML_WHITE_SPACE)       ;
    }
    if (prevLeaf == null)     return false;
    XmlTag tag=PsiTreeUtil.getParentOfType(prevLeaf.getPsi(),XmlTag.class);
    if (tag == null) {
      PsiElement element2=provider.findElementAt(prevLeaf.getStartOffset(),XMLLanguage.class);
      tag=PsiTreeUtil.getParentOfType(element2,XmlTag.class);
      if (tag == null)       return false;
    }
    if (tag instanceof JspXmlTagBase || tag instanceof JspXmlRootTag)     return false;
    if (XmlUtil.getTokenOfType(tag,XmlTokenType.XML_TAG_END) != null)     return false;
    if (XmlUtil.getTokenOfType(tag,XmlTokenType.XML_EMPTY_ELEMENT_END) != null)     return false;
    if (PsiTreeUtil.getParentOfType(element,XmlAttributeValue.class) != null)     return false;
    EditorModificationUtil.insertStringAtCaret(editor,">");
    return true;
  }
  return false;
}
