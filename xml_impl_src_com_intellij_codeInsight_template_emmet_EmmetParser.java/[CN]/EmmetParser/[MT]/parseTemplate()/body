{
  final ZenCodingToken token=nextToken();
  String templateKey=ZenCodingUtil.isHtml(myCallback) ? suggestTagName() : null;
  boolean mustHaveSelector=true;
  if (token instanceof IdentifierToken) {
    templateKey=((IdentifierToken)token).getText();
    mustHaveSelector=false;
    myIndex++;
  }
  if (templateKey == null) {
    return null;
  }
  final TemplateImpl template=myCallback.findApplicableTemplate(templateKey);
  if (template == null && !ZenCodingUtil.isXML11ValidQName(templateKey)) {
    return null;
  }
  final List<Pair<String,String>> attrList=parseSelectors();
  if (mustHaveSelector && attrList.size() == 0) {
    return null;
  }
  final TemplateToken templateToken=new TemplateToken(templateKey,attrList);
  if (!setTemplate(templateToken,template)) {
    return null;
  }
  return new TemplateNode(templateToken);
}
