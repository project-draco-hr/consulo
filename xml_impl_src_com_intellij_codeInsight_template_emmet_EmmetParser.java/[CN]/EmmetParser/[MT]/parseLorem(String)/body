{
  Matcher matcher=LOREM_PATTERN.matcher(templateKey);
  if (matcher.matches()) {
    int loremWordsCount=DEFAULT_LOREM_LENGTH;
    if (matcher.groupCount() > 1) {
      String group=matcher.group(2);
      loremWordsCount=group.isEmpty() ? DEFAULT_LOREM_LENGTH : Integer.parseInt(group);
    }
    final List<Pair<String,String>> attrList=parseSelectors();
    ZenCodingToken token=nextToken();
    boolean isRepeating=token instanceof OperationToken && ((OperationToken)token).getSign() == '*';
    if (!attrList.isEmpty() || isRepeating) {
      String wrapTag=suggestTagName();
      TemplateImpl template=myCallback.findApplicableTemplate(templateKey);
      if (template == null && !ZenCodingUtil.isXML11ValidQName(templateKey)) {
        return null;
      }
      final TemplateToken templateToken=new TemplateToken(wrapTag,attrList);
      if (!setTemplate(templateToken,template)) {
        return null;
      }
      return new MoreOperationNode(new TemplateNode(templateToken),new LoremNode(loremWordsCount));
    }
 else {
      return new LoremNode(loremWordsCount);
    }
  }
 else {
    return null;
  }
}
