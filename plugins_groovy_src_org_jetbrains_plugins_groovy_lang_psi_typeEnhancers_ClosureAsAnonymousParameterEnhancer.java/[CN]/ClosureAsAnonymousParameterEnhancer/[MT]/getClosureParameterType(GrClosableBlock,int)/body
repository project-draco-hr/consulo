{
  Set<PsiType> expectedTypes;
  if (closure.getParent() instanceof GrSafeCastExpression) {
    GrSafeCastExpression safeCastExpression=(GrSafeCastExpression)closure.getParent();
    GrTypeElement typeElement=safeCastExpression.getCastTypeElement();
    if (typeElement != null) {
      PsiType castType=typeElement.getType();
      expectedTypes=new HashSet<PsiType>(GroovyExpectedTypesProvider.getDefaultExpectedTypes(safeCastExpression));
      for (      PsiType expected : expectedTypes) {
        if (!TypesUtil.isAssignable(expected,castType,closure,true)) {
          expectedTypes.remove(expected);
        }
      }
      if (expectedTypes.isEmpty())       expectedTypes.add(castType);
    }
 else {
      expectedTypes=GroovyExpectedTypesProvider.getDefaultExpectedTypes(closure);
    }
  }
 else {
    expectedTypes=GroovyExpectedTypesProvider.getDefaultExpectedTypes(closure);
  }
  for (  PsiType constraint : expectedTypes) {
    final PsiType suggestion=GppClosureParameterTypeProvider.getSingleMethodParameterType(constraint,index,closure);
    if (suggestion != null) {
      return suggestion;
    }
  }
  return null;
}
