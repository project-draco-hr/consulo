{
  manager.iterate(new RefJavaVisitor(){
    @Override public void visitMethod(    @NotNull final RefMethod refMethod){
      if (descriptionsProcessor.getDescriptions(refMethod) != null) {
        final GlobalJavaInspectionContext.UsagesProcessor usagesProcessor=new GlobalJavaInspectionContext.UsagesProcessor(){
          public boolean process(          PsiReference psiReference){
            final PsiElement psiReferenceExpression=psiReference.getElement();
            if (psiReferenceExpression instanceof PsiReferenceExpression && !isInvertedMethodCall((PsiReferenceExpression)psiReferenceExpression)) {
              descriptionsProcessor.ignoreElement(refMethod);
            }
            return false;
          }
        }
;
        traverseSuperMethods(refMethod,context,usagesProcessor);
      }
    }
  }
);
  return false;
}
