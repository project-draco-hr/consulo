{
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(manager.getProject());
  final PsiElementFactory factory=facade.getElementFactory();
  final PsiResolveHelper resolveHelper=facade.getResolveHelper();
  final PsiClass aClass=resolveHelper.resolveReferencedClass(myClassQName,context);
  if (aClass == null) {
    return factory.createTypeFromText(myClassQName,context);
  }
  Map<PsiTypeParameter,PsiType> substMap=new HashMap<PsiTypeParameter,PsiType>();
  for (  PsiTypeParameter typeParameter : PsiUtil.typeParametersIterable(aClass)) {
    final String name=typeParameter.getName();
    final Type type=mySubstitutor.get(name);
    if (type != null) {
      substMap.put(typeParameter,type.getType(context,manager));
    }
 else {
      substMap.put(typeParameter,null);
    }
  }
  return factory.createType(aClass,factory.createSubstitutor(substMap));
}
