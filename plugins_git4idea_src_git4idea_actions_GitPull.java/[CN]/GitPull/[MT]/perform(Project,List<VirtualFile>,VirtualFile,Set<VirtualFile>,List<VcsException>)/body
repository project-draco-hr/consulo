{
  final GitPullDialog dialog=new GitPullDialog(project,gitRoots,defaultRoot);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  final Label beforeLabel=LocalHistory.getInstance().putSystemLabel(project,"Before update");
  final GitLineHandler h=dialog.pullHandler();
  final VirtualFile root=dialog.gitRoot();
  affectedRoots.add(root);
  final GitRevisionNumber currentRev=GitRevisionNumber.resolve(project,root,"HEAD");
  GitTask pullTask=new GitTask(project,h,GitBundle.message("pulling.title",dialog.getRemote()));
  pullTask.setProgressAnalyzer(new GitStandardProgressAnalyzer());
  pullTask.execute(new GitTaskResultHandlerAdapter(){
    @Override protected void onSuccess(){
      GitMergeUtil.showUpdates(GitPull.this,project,exceptions,root,currentRev,beforeLabel,getActionName(),ActionInfo.UPDATE);
    }
    @Override protected void onFailure(){
      GitUIUtil.notifyGitErrors(project,"Error pulling " + dialog.getRemote(),"",h.errors());
    }
  }
);
}
