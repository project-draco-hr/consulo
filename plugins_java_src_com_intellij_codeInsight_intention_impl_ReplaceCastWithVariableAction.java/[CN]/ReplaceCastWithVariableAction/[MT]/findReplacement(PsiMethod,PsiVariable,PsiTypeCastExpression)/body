{
  final TextRange expressionTextRange=expression.getTextRange();
  for (  PsiExpression occurrence : CodeInsightUtil.findExpressionOccurrences(method,expression)) {
    ProgressIndicatorProvider.checkCanceled();
    final TextRange occurrenceTextRange=occurrence.getTextRange();
    if (occurrence == expression || occurrenceTextRange.getEndOffset() >= expressionTextRange.getStartOffset()) {
      continue;
    }
    final PsiLocalVariable variable=getVariable(occurrence);
    final PsiCodeBlock methodBody=method.getBody();
    if (variable != null && methodBody != null && !isChangedBetween(castedVar,methodBody,occurrence,expression) && !isChangedBetween(variable,methodBody,occurrence,expression)) {
      return variable;
    }
  }
  return null;
}
