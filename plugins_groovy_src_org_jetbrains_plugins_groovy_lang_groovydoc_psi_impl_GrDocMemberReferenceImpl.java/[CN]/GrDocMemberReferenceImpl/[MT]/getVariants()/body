{
  GrDocReferenceElement holder=getReferenceHolder();
  PsiElement resolved;
  if (holder != null) {
    GrCodeReferenceElement referenceElement=holder.getReferenceElement();
    resolved=referenceElement != null ? referenceElement.resolve() : null;
  }
 else {
    resolved=getEnclosingClass(this);
  }
  if (resolved instanceof PsiClass) {
    ResolverProcessor propertyProcessor=CompletionProcessor.createPropertyCompletionProcessor(this);
    resolved.processDeclarations(propertyProcessor,ResolveState.initial(),null,this);
    PsiElement[] propertyCandidates=ResolveUtil.mapToElements(propertyProcessor.getCandidates());
    ResolverProcessor methodProcessor=CompletionProcessor.createPropertyCompletionProcessor(this);
    resolved.processDeclarations(methodProcessor,ResolveState.initial(),null,this);
    PsiElement[] methodCandidates=ResolveUtil.mapToElements(methodProcessor.getCandidates());
    PsiElement[] elements=ArrayUtil.mergeArrays(propertyCandidates,methodCandidates);
    return ContainerUtil.map2Array(elements,new Function<PsiElement,Object>(){
      public Object fun(      PsiElement psiElement){
        LookupElement lookupItem=null;
        if (psiElement instanceof PsiNamedElement) {
          if (psiElement instanceof PsiMethod) {
            lookupItem=new LookupItem<PsiElement>(psiElement,((PsiMethod)psiElement).getName());
          }
 else {
            String string=((PsiNamedElement)psiElement).getName();
            lookupItem=new LookupItem<PsiElement>(psiElement,string == null ? "" : string);
          }
          lookupItem.putUserData(LookupItem.FORCE_SHOW_SIGNATURE_ATTR,true);
        }
        return lookupItem != null ? lookupItem : psiElement;
      }
    }
);
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
