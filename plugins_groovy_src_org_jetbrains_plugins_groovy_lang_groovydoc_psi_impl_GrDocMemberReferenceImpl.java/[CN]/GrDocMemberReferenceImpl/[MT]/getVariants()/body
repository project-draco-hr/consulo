{
  GrDocReferenceElement holder=getReferenceHolder();
  PsiElement resolved;
  if (holder != null) {
    GrCodeReferenceElement referenceElement=holder.getReferenceElement();
    resolved=referenceElement != null ? referenceElement.resolve() : null;
  }
 else {
    resolved=getEnclosingClass(this);
  }
  if (resolved instanceof PsiClass) {
    PropertyResolverProcessor propertyProcessor=new PropertyResolverProcessor(null,this,true);
    resolved.processDeclarations(propertyProcessor,PsiSubstitutor.EMPTY,null,this);
    PsiElement[] propertyCandidates=ResolveUtil.mapToElements(propertyProcessor.getCandidates());
    PsiType thisType=getManager().getElementFactory().createType((PsiClass)resolved,PsiSubstitutor.EMPTY);
    MethodResolverProcessor methodProcessor=new MethodResolverProcessor(null,this,true,false,thisType,null,PsiType.EMPTY_ARRAY);
    MethodResolverProcessor constructorProcessor=new MethodResolverProcessor(null,this,false,true,thisType,null,PsiType.EMPTY_ARRAY);
    resolved.processDeclarations(methodProcessor,PsiSubstitutor.EMPTY,null,this);
    resolved.processDeclarations(constructorProcessor,PsiSubstitutor.EMPTY,resolved,this);
    PsiElement[] methodCandidates=ResolveUtil.mapToElements(methodProcessor.getCandidates());
    PsiElement[] constructorCandidates=ResolveUtil.mapToElements(constructorProcessor.getCandidates());
    PsiElement[] elements=ArrayUtil.mergeArrays(ArrayUtil.mergeArrays(propertyCandidates,methodCandidates,PsiElement.class),constructorCandidates,PsiElement.class);
    return ContainerUtil.map2Array(elements,new Function<PsiElement,Object>(){
      public Object fun(      PsiElement psiElement){
        LookupItem<PsiElement> lookupItem=null;
        if (psiElement instanceof PsiNamedElement) {
          if (psiElement instanceof PsiMethod) {
            lookupItem=new LookupItem<PsiElement>(psiElement,((PsiMethod)psiElement).getName());
          }
 else {
            String string=((PsiNamedElement)psiElement).getName();
            lookupItem=new LookupItem<PsiElement>(psiElement,string == null ? "" : string);
          }
          lookupItem.setAttribute(LookupItem.DO_AUTOCOMPLETE_ATTR,null);
          lookupItem.setAttribute(LookupItem.FORCE_SHOW_SIGNATURE_ATTR,true);
        }
        return lookupItem != null ? lookupItem : psiElement;
      }
    }
);
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
