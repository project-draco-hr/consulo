{
  ArrayList<ResolveResult> candidates=new ArrayList<ResolveResult>();
  GrDocReferenceElement holder=getReferenceHolder();
  PsiElement resolved;
  if (holder != null) {
    GrCodeReferenceElement referenceElement=holder.getReferenceElement();
    resolved=referenceElement.resolve();
  }
 else {
    resolved=getEnclosingClassOrFile(this);
  }
  if (resolved != null) {
    PropertyResolverProcessor processor=new PropertyResolverProcessor(null,this,true);
    resolved.processDeclarations(processor,PsiSubstitutor.EMPTY,resolved,this);
    candidates.addAll(Arrays.asList(processor.getCandidates()));
  }
  if (holder != null && resolved != null) {
    MethodResolverProcessor processor=new MethodResolverProcessor(null,this,true,true,null,PsiType.EMPTY_ARRAY);
    resolved.processDeclarations(processor,PsiSubstitutor.EMPTY,resolved,this);
    candidates.addAll(Arrays.asList(processor.getCandidates()));
  }
  ArrayList<PsiElement> variants=new ArrayList<PsiElement>();
  for (  ResolveResult candidate : candidates) {
    variants.add(candidate.getElement());
  }
  return variants.toArray(new PsiElement[variants.size()]);
}
