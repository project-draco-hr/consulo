{
  if (element == myRootElement) {
    final Library[] libraries=myParentEditor.getLibraries();
    Arrays.sort(libraries,LibrariesAlphaComparator.INSTANCE);
    LibraryElement[] elements=new LibraryElement[libraries.length];
    for (int idx=0; idx < libraries.length; idx++) {
      final Library library=libraries[idx];
      boolean allPathsValid=true;
      for (      OrderRootType type : OrderRootType.getAllTypes()) {
        allPathsValid&=allPathsValid(library,type);
      }
      elements[idx]=new LibraryElement(library,myParentEditor,!allPathsValid);
    }
    return elements;
  }
  if (element instanceof LibraryElement) {
    final LibraryElement libraryItemElement=(LibraryElement)element;
    ArrayList<LibraryTableTreeContentElement> elements=new ArrayList<LibraryTableTreeContentElement>(3);
    final Library library=libraryItemElement.getLibrary();
    final LibraryEditor parentEditor=myParentEditor.getLibraryEditor(library);
    for (    OrderRootType type : OrderRootType.getAllTypes()) {
      final String[] urls=parentEditor.getUrls(type);
      if (urls.length > 0) {
        elements.add(OrderRootTypeUIFactory.FACTORY.getByKey(type).createElement(libraryItemElement));
      }
    }
    return elements.toArray();
  }
  if (element instanceof LibraryTableTreeContentElement) {
    final LibraryTableTreeContentElement contentElement=(LibraryTableTreeContentElement)element;
    final LibraryTableTreeContentElement parentElement=contentElement.getParent();
    if (parentElement instanceof LibraryElement) {
      return buildItems(contentElement,((LibraryElement)parentElement).getLibrary(),contentElement.getOrderRootType());
    }
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
