{
  myListPopup=new ListPopupWithChildPopups(null,myList,myProject,myParentListPopup,new ListPopupRunnable(),new Runnable(){
    public void run(){
      showIntentionHintImpl(false);
    }
  }
);
  final Component component=myComponentHint.getComponent();
  final EventListener[] listeners=component.getListeners(FocusListener.class);
  for (  EventListener listener : listeners) {
    ListenerUtil.addFocusListener(myListPopup.getWindow(),(FocusListener)listener);
  }
  myListPopup.getWindow().addWindowListener(new WindowAdapter(){
    public void windowClosed(    WindowEvent e){
      HintManager.getInstance().hideAllHints();
    }
  }
);
  showIntentionHintImpl(false);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      Point p;
      if (myParentListPopup != null) {
        p=new Point(myParentListPopup.getWindow().getWidth(),myParentListPopup.getSelectedHeight());
        SwingUtilities.convertPointToScreen(p,myParentListPopup.getWindow());
      }
 else {
        p=new Point(0,getHeight());
        SwingUtilities.convertPointToScreen(p,IntentionHintComponent.this);
      }
      myListPopup.show(p.x,p.y,new Runnable(){
        public void run(){
          final IntentionActionWithTextCaching action=(IntentionActionWithTextCaching)myList.getSelectedValue();
          if (action.getOptionIntentions().size() + action.getOptionFixes().size() > 0) {
            openChildPopup(action);
          }
 else {
            showIntentionHintImpl(false);
          }
        }
      }
,new Computable<Boolean>(){
        public Boolean compute(){
          final IntentionActionWithTextCaching action=(IntentionActionWithTextCaching)myList.getSelectedValue();
          return new Boolean(action.getAction() instanceof EmptyIntentionAction && action.getOptionIntentions().size() + action.getOptionFixes().size() > 0);
        }
      }
);
      myPopupShown=true;
      onMouseEnter();
    }
  }
);
}
