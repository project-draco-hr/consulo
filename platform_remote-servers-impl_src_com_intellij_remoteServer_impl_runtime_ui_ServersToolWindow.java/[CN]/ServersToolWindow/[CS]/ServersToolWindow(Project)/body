{
  myProject=project;
  for (  RemoteServersViewContributor contributor : RemoteServersViewContributor.EP_NAME.getExtensions()) {
    contributor.setupAvailabilityListener(project,new Runnable(){
      @Override public void run(){
        updateWindowAvailable(true);
      }
    }
);
  }
  myProject.getMessageBus().connect().subscribe(RemoteServerListener.TOPIC,new RemoteServerListener(){
    @Override public void serverAdded(    @NotNull RemoteServer<?> server){
      updateWindowAvailable(true);
    }
    @Override public void serverRemoved(    @NotNull RemoteServer<?> server){
      updateWindowAvailable(false);
    }
  }
);
  myToolWindow=ToolWindowManager.getInstance(project).registerToolWindow(ID,false,ToolWindowAnchor.BOTTOM);
  myToolWindow.setIcon(RemoteServersIcons.ServersToolWindow);
  final ContentFactory contentFactory=ContentFactory.SERVICE.getInstance();
  final ServersToolWindowContent serversContent=new ServersToolWindowContent(project);
  Content content=contentFactory.createContent(serversContent.getMainPanel(),null,false);
  Disposer.register(content,serversContent);
  myToolWindow.getContentManager().addContent(content);
  updateWindowAvailable(false);
}
