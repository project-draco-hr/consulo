{
  addListener(new ProcessEventListener(){
    @Override public void processTerminated(    int exitCode){
    }
    @Override public void startFailed(    Throwable exception){
synchronized (myDataLock) {
        myException=new VcsException("Process failed to start (" + myCommandLine.getCommandLineString() + "): "+ exception.toString(),exception);
      }
    }
  }
);
  start();
  if (isStarted()) {
    waitFor();
  }
synchronized (myDataLock) {
    if (myException != null)     throw myException;
    final int code=getExitCode();
    if (code == 0) {
      return myStdout.toString();
    }
 else {
      boolean stdErr=true;
      String msg=myStderr.toString();
      if (msg.length() == 0) {
        stdErr=false;
        msg=getStdout().toString();
      }
      msg=new StringBuilder("Svn process exited with error code: ").append(code).append("\n").append(stdErr ? "stderr: " : "stdout: ").append(msg).append("\nCommand was: ").append(myCommandLine.getCommandLineString()).toString();
      throw new VcsException(msg);
    }
  }
}
