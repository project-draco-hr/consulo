{
  PsiElement startElement=file.findElementAt(start);
  PsiElement parent=startElement != null ? startElement.getParent() : null;
  while (parent != null && !(parent instanceof PsiFile) && parent.getTextRange().getStartOffset() == startElement.getTextRange().getStartOffset()) {
    startElement=parent;
    parent=parent.getParent();
  }
  PsiElement endElement=file.findElementAt(end - 1);
  parent=endElement != null ? endElement.getParent() : null;
  while (parent != null && !(parent instanceof PsiFile) && parent.getTextRange().getEndOffset() == endElement.getTextRange().getEndOffset()) {
    endElement=parent;
    parent=parent.getParent();
  }
  if (startElement == null || endElement == null) {
    return null;
  }
  final PsiElement commonParent=startElement.getParent();
  if (commonParent == null || !(commonParent instanceof XmlTag) || commonParent != endElement.getParent()) {
    return null;
  }
  PsiElement e=startElement;
  boolean containTag=false;
  while (e != null) {
    if (!(e instanceof XmlText) && !(e instanceof XmlTag) && !(e instanceof PsiWhiteSpace)&& !(e instanceof PsiComment)) {
      return null;
    }
    if (e instanceof XmlTag) {
      containTag=true;
    }
    if (e == endElement) {
      break;
    }
    e=e.getNextSibling();
  }
  return e != null && containTag ? Pair.create(startElement,endElement) : null;
}
