{
  if (!myRootModel.isExcludeOutput() && !myRootModel.isExcludeExplodedDirectory()) {
    return myExcludeFolders.toArray(new ExcludeFolder[myExcludeFolders.size()]);
  }
  final ArrayList<ContentFolder> result=new ArrayList<ContentFolder>(myExcludeFolders);
  if (myRootModel.isExcludeOutput()) {
    if (!myRootModel.isCompilerOutputPathInherited()) {
      addExcludeForOutputPath(myRootModel.myCompilerOutputPath,result);
      addExcludeForOutputPath(myRootModel.myCompilerOutputPathForTests,result);
    }
 else {
      ProjectRootManagerImpl projectRootManager=ProjectRootManagerImpl.getInstanceImpl(myRootModel.getModule().getProject());
      final String outputUrl=projectRootManager.getCompilerOutputUrl();
      if (outputUrl != null) {
        if (new File(VfsUtil.urlToPath(outputUrl)).exists()) {
          addExcludeForOutputPath(projectRootManager.getCompilerOutputPointer(),result);
        }
      }
    }
  }
  if (myRootModel.isExcludeExplodedDirectory()) {
    addExcludeForOutputPath(myRootModel.myExplodedDirectory,result);
  }
  return result.toArray(new ExcludeFolder[result.size()]);
}
