{
  return new Operation(){
    @Override public boolean willHandle(    DnDAwareTree tree){
      final int count=tree.getSelectionCount();
      if (count != 1) {
        return false;
      }
      final TreePath path=tree.getSelectionPath();
      if (path.getPathCount() < 2)       return false;
      if (path.getLastPathComponent() instanceof DefaultMutableTreeNode) {
        final Object uo=((DefaultMutableTreeNode)path.getLastPathComponent()).getUserObject();
        if (uo instanceof FavoritesTreeNodeDescriptor) {
          return ((FavoritesTreeNodeDescriptor)uo).getElement() instanceof NoteProjectNode;
        }
      }
      return false;
    }
    @Override public String getCustomName(){
      return "Edit Note";
    }
    @Override public void handle(    Project project,    final DnDAwareTree tree){
      final Object component=tree.getSelectionPath().getLastPathComponent();
      if (component instanceof DefaultMutableTreeNode) {
        final Object uo=((DefaultMutableTreeNode)component).getUserObject();
        if (uo instanceof FavoritesTreeNodeDescriptor) {
          final FavoritesManager favoritesManager=FavoritesManager.getInstance(project);
          final AbstractTreeNode treeNode=((FavoritesTreeNodeDescriptor)uo).getElement();
          if (treeNode instanceof NoteProjectNode) {
            showNotePopup(project,tree,new Consumer<String>(){
              @Override public void consume(              String s){
                ((NoteProjectNode)treeNode).getValue().setText(s);
                favoritesManager.editRoot(CURRENT_TASK,FavoritesTreeUtil.getLogicalIndexPathTo(tree.getSelectionPath()),treeNode);
                favoritesManager.fireListeners(CURRENT_TASK);
              }
            }
,((NoteProjectNode)treeNode).getValue().getText());
          }
        }
      }
    }
  }
;
}
