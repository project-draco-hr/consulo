def interhg_refresh(orig, self, *args, **kwargs):
    interhg_table[:] = []
    for (key, pattern) in self.repo.ui.configitems('interhg'):
        unesc = pattern[1]
        delim = re.escape(unesc)
        match = re.match(('^s%s(.+)(?:(?<=\\\\\\\\)|(?<!\\\\))%s(.*)%s([ilmsux])*$' % (delim, delim, delim)), pattern)
        if (not match):
            self.repo.ui.warn((_('interhg: invalid pattern for %s: %s\n') % (key, pattern)))
            continue
        delim_re = re.compile(('(?<!\\\\)\\\\%s' % delim))
        regexp = delim_re.sub(unesc, match.group(1))
        format = delim_re.sub(unesc, match.group(2))
        flagin = match.group(3)
        flags = 0
        if flagin:
            for flag in flagin.upper():
                flags |= re.__dict__[flag]
        try:
            regexp = re.compile(regexp, flags)
            interhg_table.append((regexp, format))
        except re.error:
            self.repo.ui.warn((_('interhg: invalid regexp for %s: %s\n') % (key, regexp)))
    return orig(self, *args, **kwargs)
