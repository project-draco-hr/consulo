{
  final boolean[] isCopied=new boolean[1];
  final PsiElement[] elements=PsiCopyPasteManager.getInstance().getElements(isCopied);
  if (elements == null)   return;
  try {
    PsiElement target=(PsiElement)dataContext.getData(DataConstantsEx.PASTE_TARGET_PSI_ELEMENT);
    if (isCopied[0]) {
      PsiDirectory targetDirectory=target instanceof PsiDirectory ? (PsiDirectory)target : null;
      PsiPackage targetPackage=target instanceof PsiPackage ? (PsiPackage)target : null;
      if (targetDirectory == null && target instanceof PsiPackage) {
        final PsiDirectory[] directories=((PsiPackage)target).getDirectories();
        if (directories.length > 0) {
          targetDirectory=directories[0];
        }
      }
      if (CopyHandler.canCopy(elements)) {
        CopyHandler.doCopy(elements,targetPackage,targetDirectory);
      }
    }
 else {
      if (MoveHandler.canMove(elements,target)) {
        MoveHandler.doMove(myProject,elements,target,new MoveCallback(){
          public void refactoringCompleted(){
            PsiCopyPasteManager.getInstance().clear();
          }
        }
);
      }
    }
  }
 catch (  RuntimeException ex) {
    throw ex;
  }
 finally {
    updateView();
  }
}
