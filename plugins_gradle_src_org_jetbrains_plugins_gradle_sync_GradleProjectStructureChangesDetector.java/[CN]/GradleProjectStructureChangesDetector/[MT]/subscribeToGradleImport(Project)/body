{
  MessageBusConnection connection=project.getMessageBus().connect(project);
  connection.subscribe(GradleProjectEntityChangeListener.TOPIC,new GradleProjectEntityChangeListener(){
    @Override public void onChangeStart(    @NotNull Object entity){
      myImportCounter.incrementAndGet();
    }
    @Override public void onChangeEnd(    @NotNull Object entity){
      if (myImportCounter.decrementAndGet() <= 0) {
        myUserProjectChangesCalculator.updateCurrentProjectState();
        myUserProjectChangesCalculator.filterOutdatedChanges();
        GradleProject project=myChangesModel.getGradleProject();
        if (project != null) {
          myChangesModel.update(project,true);
        }
        rebuildTreeModel();
      }
    }
  }
);
}
