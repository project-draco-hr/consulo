{
  if (!myProject.isInitialized()) {
    return;
  }
  myAlarm.cancelAllRequests();
  final GradleTaskManager taskManager=ServiceManager.getService(GradleTaskManager.class);
  if (taskManager != null && taskManager.hasTaskOfTypeInProgress(GradleTaskType.RESOLVE_PROJECT)) {
    return;
  }
  final long diff=System.currentTimeMillis() - myStartRefreshTime.get();
  if (diff < 0) {
    myAlarm.cancelAllRequests();
    myAlarm.addRequest(this,(int)-diff);
    return;
  }
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      if (ModalityState.current() != ModalityState.NON_MODAL) {
        myAlarm.cancelAllRequests();
        myAlarm.addRequest(RefreshRequest.this,REFRESH_DELAY_MILLIS);
        return;
      }
      GradleUtil.refreshProject(myProject);
    }
  }
);
}
