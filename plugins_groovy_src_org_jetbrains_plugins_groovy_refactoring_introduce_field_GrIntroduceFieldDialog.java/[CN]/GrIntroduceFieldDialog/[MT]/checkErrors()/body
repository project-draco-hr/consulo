{
  List<String> errors=new ArrayList<String>();
  if (myCurrentMethodRadioButton.isSelected() && myDeclareFinalCheckBox.isSelected() && !!isInvokedInAlwaysInvokedConstructor) {
    errors.add(GroovyRefactoringBundle.message("final.field.cant.be.initialized.in.cur.method"));
  }
  if (myDeclareFinalCheckBox.isSelected() && myReplaceAllOccurencesCheckBox.isSelected() && myInvokedOnLocalVar != null && hasLHSUsages) {
    errors.add(GroovyRefactoringBundle.message("Field.cannot.be.final.because.replaced.variable.has.lhs.usages"));
  }
  if (!myCanBeInitializedOutsideBlock) {
    if (myFieldDeclarationRadioButton.isSelected()) {
      errors.add(GroovyRefactoringBundle.message("field.cannot.be.initialized.in.field.declaration"));
    }
 else     if (myClassConstructorSRadioButton.isSelected()) {
      errors.add(GroovyRefactoringBundle.message("field.cannot.be.initialized.in.constructor(s)"));
    }
  }
  if (errors.size() == 0) {
    setErrorText(null);
  }
 else {
    setErrorText(StringUtil.join(errors,"\n"));
  }
}
