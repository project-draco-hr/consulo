{
  String[] possibleNames;
  final GroovyFieldValidator validator=new GroovyFieldValidator(myContext);
  if (myContext.expression != null) {
    possibleNames=GroovyNameSuggestionUtil.suggestVariableNames(myContext.expression,validator,true);
  }
 else {
    possibleNames=GroovyNameSuggestionUtil.suggestVariableNameByType(myContext.var.getType(),validator);
  }
  if (myContext.var != null) {
    String[] arr=new String[possibleNames.length + 1];
    arr[0]=myContext.var.getName();
    System.arraycopy(possibleNames,0,arr,1,possibleNames.length);
    possibleNames=arr;
  }
  myNameSuggestionsField=new NameSuggestionsField(possibleNames,myContext.project,GroovyFileType.GROOVY_FILE_TYPE);
  if (myContext.expression == null) {
    myTypeComboBox=GrTypeComboBox.createTypeComboBoxWithDefType(myContext.var.getDeclaredType());
  }
 else {
    myTypeComboBox=GrTypeComboBox.createTypeComboBoxFromExpression(myContext.expression);
  }
}
