{
  String[] possibleNames;
  final GroovyFieldValidator validator=new GroovyFieldValidator(myContext);
  final GrExpression expression=myContext.getExpression();
  final GrVariable var=myContext.getVar();
  if (expression != null) {
    possibleNames=GroovyNameSuggestionUtil.suggestVariableNames(expression,validator,true);
  }
 else {
    possibleNames=GroovyNameSuggestionUtil.suggestVariableNameByType(var.getType(),validator);
  }
  List<String> list=new ArrayList<String>();
  if (var != null) {
    list.add(var.getName());
  }
  ContainerUtil.addAll(list,possibleNames);
  myNameField=TextFieldWithAutoCompletion.create(myContext.getProject(),list,null,true);
  if (list.size() > 0) {
    myNameField.setText(list.get(0));
    myNameField.selectAll();
  }
  if (expression == null) {
    myTypeComboBox=GrTypeComboBox.createTypeComboBoxWithDefType(var.getDeclaredType());
  }
 else {
    myTypeComboBox=GrTypeComboBox.createTypeComboBoxFromExpression(expression);
  }
  GrTypeComboBox.registerUpDownHint(myNameField,myTypeComboBox);
}
