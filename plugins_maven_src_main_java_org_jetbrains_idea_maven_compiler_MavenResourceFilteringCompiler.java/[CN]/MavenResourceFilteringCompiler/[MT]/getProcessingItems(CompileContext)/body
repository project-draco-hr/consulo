{
  MavenProjectsManager mavenProjectManager=MavenProjectsManager.getInstance(context.getProject());
  if (!mavenProjectManager.isMavenizedProject())   return ProcessingItem.EMPTY_ARRAY;
  CompilerConfiguration config=CompilerConfiguration.getInstance(context.getProject());
  List<ProcessingItem> result=new ArrayList<ProcessingItem>();
  for (  Module eachModule : context.getCompileScope().getAffectedModules()) {
    MavenProjectModel mavenProject=mavenProjectManager.findProject(eachModule);
    if (mavenProject == null)     continue;
    for (    VirtualFile eachSourceRoot : context.getSourceRoots(eachModule)) {
      VirtualFile outputDir=null;
      CompileContextEx contextEx=(CompileContextEx)context;
      if (contextEx.isInSourceContent(eachSourceRoot)) {
        outputDir=context.getModuleOutputDirectory(eachModule);
      }
      if (contextEx.isInTestSourceContent(eachSourceRoot)) {
        outputDir=context.getModuleOutputDirectoryForTests(eachModule);
      }
      if (outputDir == null)       continue;
      collectProcessingItems(eachModule,eachSourceRoot,eachSourceRoot,outputDir,config,mavenProject.isFiltered(eachSourceRoot),result,context.getProgressIndicator());
    }
  }
  return result.toArray(new ProcessingItem[result.size()]);
}
