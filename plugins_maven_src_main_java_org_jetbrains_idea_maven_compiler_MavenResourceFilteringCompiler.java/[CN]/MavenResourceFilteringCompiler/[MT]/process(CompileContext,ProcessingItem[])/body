{
  context.getProgressIndicator().setText("Filtering Maven resources...");
  final List<ProcessingItem> result=new ArrayList<ProcessingItem>(items.length);
  int count=0;
  for (  final ProcessingItem each : items) {
    context.getProgressIndicator().setFraction(((double)count) / items.length);
    context.getProgressIndicator().checkCanceled();
    final MyProcessingItem eachItem=(MyProcessingItem)each;
    final VirtualFile outputFile=each.getFile();
    final VirtualFile sourceFile=eachItem.getSourceFile();
    try {
      if (eachItem.isFiltered()) {
        File file=new File(outputFile.getPath());
        String charset=getCharsetName(sourceFile);
        String text=new String(FileUtil.loadFileBytes(file),charset);
        text=PropertyResolver.resolve(eachItem.getModule(),text,eachItem.getProperties());
        FileUtil.writeToFile(file,text.getBytes(charset));
      }
 else {
        boolean wasFiltered=outputFile.getTimeStamp() != sourceFile.getTimeStamp();
        if (wasFiltered) {
          FileUtil.copy(new File(sourceFile.getPath()),new File(outputFile.getPath()));
        }
      }
      result.add(each);
    }
 catch (    IOException e) {
      context.addMessage(CompilerMessageCategory.ERROR,"Maven: Cannot filter properties",outputFile.getUrl(),-1,-1);
    }
  }
  return result.toArray(new ProcessingItem[result.size()]);
}
