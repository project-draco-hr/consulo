{
  final GrArgumentLabel label=namedArgument.getLabel();
  if (label == null) {
    return Collections.emptyList();
  }
  final String methodName=label.getName();
  if (methodName == null) {
    return Collections.emptyList();
  }
  final PsiElement map=namedArgument.getParent();
  if (map instanceof GrListOrMap && ((GrListOrMap)map).isMap()) {
    for (    PsiType expected : GroovyExpectedTypesProvider.getDefaultExpectedTypes((GrExpression)map)) {
      if (expected instanceof PsiClassType) {
        final List<Pair<PsiMethod,PsiSubstitutor>> pairs=getMethodsToOverrideImplementInInheritor((PsiClassType)expected,false);
        return ContainerUtil.findAll(pairs,new Condition<Pair<PsiMethod,PsiSubstitutor>>(){
          public boolean value(          Pair<PsiMethod,PsiSubstitutor> pair){
            return methodName.equals(pair.first.getName());
          }
        }
);
      }
    }
  }
  return Collections.emptyList();
}
