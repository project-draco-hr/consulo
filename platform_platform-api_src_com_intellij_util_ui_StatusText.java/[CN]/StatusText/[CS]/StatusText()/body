{
  myClickListener=new ClickListener(){
    @Override public boolean onClick(    @NotNull MouseEvent e,    int clickCount){
      if (e.getButton() == MouseEvent.BUTTON1 && clickCount == 1) {
        ActionListener actionListener=findActionListenerAt(e.getPoint());
        if (actionListener != null) {
          actionListener.actionPerformed(new ActionEvent(this,0,""));
          return true;
        }
      }
      return false;
    }
  }
;
  myMouseMotionListener=new MouseAdapter(){
    private Cursor myOriginalCursor;
    @Override public void mouseMoved(    final MouseEvent e){
      if (isStatusVisible()) {
        if (findActionListenerAt(e.getPoint()) != null) {
          if (myOriginalCursor == null) {
            myOriginalCursor=myMouseTarget.getCursor();
            myMouseTarget.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
          }
        }
 else         if (myOriginalCursor != null) {
          myMouseTarget.setCursor(myOriginalCursor);
          myOriginalCursor=null;
        }
      }
    }
  }
;
  myComponent.setOpaque(false);
  myComponent.setFont(UIUtil.getLabelFont());
  setText(DEFAULT_EMPTY_TEXT,DEFAULT_ATTRIBUTES);
  myIsDefaultText=true;
}
