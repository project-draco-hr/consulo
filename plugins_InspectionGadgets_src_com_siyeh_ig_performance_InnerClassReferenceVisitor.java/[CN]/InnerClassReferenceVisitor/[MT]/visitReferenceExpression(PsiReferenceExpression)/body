{
  if (!referencesStaticallyAccessible) {
    return;
  }
  super.visitReferenceExpression(referenceExpression);
  final PsiExpression qualifier=referenceExpression.getQualifierExpression();
  if (qualifier instanceof PsiSuperExpression) {
    return;
  }
  if (qualifier instanceof PsiReferenceExpression) {
    final PsiReferenceExpression expression=(PsiReferenceExpression)qualifier;
    final PsiElement resolvedExpression=expression.resolve();
    if (!(resolvedExpression instanceof PsiField) && !(resolvedExpression instanceof PsiMethod)) {
      return;
    }
  }
  final PsiElement element=referenceExpression.resolve();
  if (element instanceof PsiMethod || element instanceof PsiField) {
    final PsiMember member=(PsiMember)element;
    if (member.hasModifierProperty(PsiModifier.STATIC)) {
      return;
    }
    final PsiClass containingClass=member.getContainingClass();
    referencesStaticallyAccessible&=isClassStaticallyAccessible(containingClass);
  }
}
