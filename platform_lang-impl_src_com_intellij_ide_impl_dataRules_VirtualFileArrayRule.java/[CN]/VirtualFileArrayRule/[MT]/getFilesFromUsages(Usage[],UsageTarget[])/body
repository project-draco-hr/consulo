{
  Set<VirtualFile> result=new HashSet<VirtualFile>();
  if (usages != null) {
    for (    Usage usage : usages) {
      if (!usage.isValid())       continue;
      if (usage instanceof UsageInFile) {
        UsageInFile usageInFile=(UsageInFile)usage;
        result.add(usageInFile.getFile());
      }
      if (usage instanceof UsageInFiles) {
        UsageInFiles usageInFiles=(UsageInFiles)usage;
        result.addAll(Arrays.asList(usageInFiles.getFiles()));
      }
    }
  }
  if (usageTargets != null) {
    for (    UsageTarget usageTarget : usageTargets) {
      if (!usageTarget.isValid())       continue;
      VirtualFile[] files=usageTarget.getFiles();
      if (files != null) {
        result.addAll(Arrays.asList(files));
      }
    }
  }
  return VfsUtil.toVirtualFileArray(result);
}
