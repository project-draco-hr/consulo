{
  super(fixes,descriptionTemplate);
  LOG.assertTrue(startElement.isValid(),"Invalid PsiElement");
  LOG.assertTrue(startElement.isPhysical(),"Non-physical PsiElement. Physical element is required to be able to anchor the problem in the source tree");
  LOG.assertTrue(endElement.isValid(),"Invalid PsiElement");
  LOG.assertTrue(endElement.isPhysical(),"Non-physical PsiElement. Physical element is required to be able to anchor the problem in the source tree");
  if (startElement.getTextRange().getStartOffset() >= endElement.getTextRange().getEndOffset() && rangeInElement.getStartOffset() >= rangeInElement.getEndOffset()) {
    LOG.error("Empty PSI elements should not be passed to createDescriptor");
  }
  myHighlightType=highlightType;
  final Project project=startElement.getProject();
  myStartSmartPointer=SmartPointerManager.getInstance(project).createLazyPointer(startElement);
  myEndSmartPointer=startElement == endElement ? null : SmartPointerManager.getInstance(project).createLazyPointer(endElement);
  myAfterEndOfLine=isAfterEndOfLine;
  myTextRangeInElement=rangeInElement;
}
