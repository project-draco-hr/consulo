{
  if (context.getProject().isDisposed()) {
    return EMPTY_GENERATION_ITEM_ARRAY;
  }
  final List<GenerationItem> results=new ArrayList<GenerationItem>(items.length);
  for (  final GenerationItem item : items) {
    if (item instanceof MyGenerationItem) {
      final MyGenerationItem genItem=(MyGenerationItem)item;
      if (!AndroidCompileUtil.isModuleAffected(context,genItem.myModule)) {
        continue;
      }
      try {
        final Map<CompilerMessageCategory,List<String>> messages=launchRenderscriptCompiler(context.getProject(),genItem.mySdkLocation,genItem.myAndroidTarget,genItem.mySourceFile,genItem.myGenRootPath,genItem.myRawDirPath);
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          public void run(){
            if (context.getProject().isDisposed()) {
              return;
            }
            addMessages(context,messages,genItem.mySourceFile.getUrl());
          }
        }
);
        if (messages.get(CompilerMessageCategory.ERROR).isEmpty()) {
          results.add(genItem);
        }
      }
 catch (      final IOException e) {
        ApplicationManager.getApplication().runReadAction(new Runnable(){
          public void run(){
            if (context.getProject().isDisposed())             return;
            context.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),genItem.mySourceFile.getUrl(),-1,-1);
          }
        }
);
      }
    }
  }
  return results.toArray(new GenerationItem[results.size()]);
}
