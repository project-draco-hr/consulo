{
  PsiElement scope=forPlace.getParent();
  PsiElement lastScope=scope;
  while (true) {
    if (scope == null || scope instanceof PsiFile)     break;
    scope=scope.getParent();
    if (scope instanceof PsiCodeBlock || scope instanceof PsiFile && PsiUtil.isInJspFile(scope)) {
      lastScope=scope;
    }
  }
  DataFlowRunner runner=new DataFlowRunner(new InstructionFactory()){
    protected DfaMemoryState createMemoryState(){
      return new ExpressionTypeMemoryState(getFactory());
    }
  }
;
  final ExpressionTypeInstructionVisitor visitor=new ExpressionTypeInstructionVisitor(forPlace);
  if (runner.analyzeMethod(lastScope,visitor) == RunnerResult.OK) {
    final Map<PsiExpression,PsiType> map=visitor.getResult();
    if (map != null) {
      return map;
    }
  }
  return Collections.emptyMap();
}
