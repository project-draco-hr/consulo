{
  String methodName=baseMethod.getName();
  String visibility=VisibilityUtil.getVisibilityModifier(baseMethod.getModifierList());
  String modifiers=(visibility == PsiModifier.PACKAGE_LOCAL ? "" : visibility + " ");
  PsiType type=substitutor.substitute(baseMethod.getReturnType());
  String signature=modifiers + (type == null ? "" : type.getPresentableText() + " ") + methodName;
  String parameters=PsiFormatUtil.formatMethod(baseMethod,substitutor,PsiFormatUtilBase.SHOW_PARAMETERS,PsiFormatUtilBase.SHOW_NAME);
  InsertHandler<LookupElement> insertHandler=new InsertHandler<LookupElement>(){
    @Override public void handleInsert(    InsertionContext context,    LookupElement item){
      context.getDocument().deleteString(context.getStartOffset(),context.getTailOffset());
      context.commitDocument();
      List<PsiMethod> prototypes=OverrideImplementUtil.overrideOrImplementMethod(parent,baseMethod,false);
      List<PsiGenerationInfo<PsiMethod>> infos=OverrideImplementUtil.convert2GenerationInfos(prototypes);
      List<PsiGenerationInfo<PsiMethod>> newInfos=GenerateMembersUtil.insertMembersAtOffset(context.getFile(),context.getStartOffset(),infos);
      if (!newInfos.isEmpty()) {
        newInfos.get(0).positionCaret(context.getEditor(),true);
      }
    }
  }
;
  RowIcon icon=new RowIcon(2);
  icon.setIcon(IconDescriptorUpdaters.getIcon(baseMethod,0),0);
  icon.setIcon(implemented ? AllIcons.Gutter.ImplementingMethod : AllIcons.Gutter.OverridingMethod,1);
  LookupElementBuilder element=LookupElementBuilder.create(baseMethod,signature).withLookupString(methodName).withLookupString(signature).withInsertHandler(insertHandler).appendTailText(parameters,false).appendTailText(" {...}",true).withTypeText(baseClass.getName()).withIcon(icon);
  element.putUserData(OVERRIDE_ELEMENT,true);
  return element;
}
