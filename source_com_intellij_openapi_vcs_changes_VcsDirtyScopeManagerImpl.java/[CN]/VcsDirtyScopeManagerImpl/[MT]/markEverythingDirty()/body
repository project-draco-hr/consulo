{
  if (!myIsInitialized || myIsDisposed || myProject.isDisposed())   return;
synchronized (myScopes) {
    myScopes.clear();
  }
  for (  Module module : ModuleManager.getInstance(myProject).getModules()) {
    final VirtualFile[] files=ModuleRootManager.getInstance(module).getContentRoots();
    for (    VirtualFile file : files) {
      final AbstractVcs vcs=myVcsManager.getVcsFor(file);
      if (vcs != null) {
        getScope(vcs).addDirtyDirRecursively(new FilePathImpl(file));
      }
    }
  }
  final AbstractVcs[] abstractVcses=myVcsManager.getAllActiveVcss();
  for (  AbstractVcs vcs : abstractVcses) {
    VcsDirtyScopeImpl scope=getScope(vcs);
    final VirtualFile[] roots=myVcsManager.getRootsUnderVcs(vcs);
    for (    VirtualFile root : roots) {
      if (root.equals(myProject.getBaseDir())) {
        scope.addDirtyFile(new FilePathImpl(root));
      }
 else {
        scope.addDirtyDirRecursively(new FilePathImpl(root));
      }
    }
  }
synchronized (myScopes) {
    myEverythingDirty=true;
  }
  myChangeListManager.scheduleUpdate();
}
