{
  JavaPsiFacade facade=JavaPsiFacade.getInstance(getProject());
  for (  final String implicitlyImported : getImplicitlyImportedPackages()) {
    PsiPackage aPackage=facade.findPackage(implicitlyImported);
    if (aPackage != null && !aPackage.processDeclarations(new DelegatingScopeProcessor(processor){
      @Override public boolean execute(      PsiElement element,      ResolveState state){
        if (element instanceof PsiPackage)         return true;
        return super.execute(element,state);
      }
    }
,state,lastParent,place)) {
      return false;
    }
  }
  for (  String implicitlyImportedClass : IMPLICITLY_IMPORTED_CLASSES) {
    PsiClass clazz=facade.findClass(implicitlyImportedClass,getResolveScope());
    if (clazz != null && !ResolveUtil.processElement(processor,clazz,state))     return false;
  }
  return true;
}
