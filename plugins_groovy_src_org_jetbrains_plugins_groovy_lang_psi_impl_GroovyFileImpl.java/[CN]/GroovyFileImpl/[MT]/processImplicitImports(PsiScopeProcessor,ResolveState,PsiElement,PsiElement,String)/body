{
  JavaPsiFacade facade=JavaPsiFacade.getInstance(getProject());
  final FactoryMap<String,Set<String>> cache=getImplicitlyImportableClassNames();
  for (  final String implicitlyImported : getImplicitlyImportedPackages()) {
    if (className != null && !cache.get(implicitlyImported).contains(className)) {
      continue;
    }
    PsiPackage aPackage=facade.findPackage(implicitlyImported);
    if (aPackage != null && !aPackage.processDeclarations(processor,state,lastParent,place))     return false;
  }
  for (  String implicitlyImportedClass : IMPLICITLY_IMPORTED_CLASSES) {
    PsiClass clazz=facade.findClass(implicitlyImportedClass,getResolveScope());
    if (clazz != null && !ResolveUtil.processElement(processor,clazz))     return false;
  }
  return true;
}
