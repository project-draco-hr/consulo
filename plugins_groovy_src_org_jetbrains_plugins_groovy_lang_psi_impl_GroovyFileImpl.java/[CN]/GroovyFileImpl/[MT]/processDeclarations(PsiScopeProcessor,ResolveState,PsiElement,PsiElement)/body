{
  PsiClass scriptClass=getScriptClass();
  if (scriptClass != null) {
    if (!scriptClass.processDeclarations(processor,state,lastParent,place))     return false;
    if (!ResolveUtil.processElement(processor,scriptClass))     return false;
  }
  for (  GrTypeDefinition definition : getTypeDefinitions()) {
    if (!ResolveUtil.processElement(processor,definition))     return false;
  }
  if (lastParent != null && !(lastParent instanceof GrTypeDefinition) && scriptClass != null) {
    if (!ResolveUtil.processElement(processor,getSyntheticArgsParameter()))     return false;
    if (!processScriptEnhancements(place,processor))     return false;
  }
  if (!processChildrenScopes(this,processor,state,lastParent,place))   return false;
  JavaPsiFacade facade=JavaPsiFacade.getInstance(getProject());
  final GrImportStatement[] imports=getImportStatements();
  final String className=getWantedClassName(processor,state);
  if (className != null) {
    final Set<String> maybeImplicit=getImplicitlyImportableClasses(facade,className);
    if (!maybeImplicit.isEmpty()) {
      if (isResolvableViaImplictImports(processor,state,lastParent,place,className,maybeImplicit,imports)) {
        if (!processImplicitImports(processor,state,lastParent,place,facade)) {
          return false;
        }
      }
    }
  }
  for (  GrImportStatement importStatement : imports) {
    if (!importStatement.processDeclarations(processor,state,lastParent,place)) {
      return false;
    }
  }
  if (!processImplicitImports(processor,state,lastParent,place,facade))   return false;
  if (StringUtil.isNotEmpty(getPackageName())) {
    PsiPackage defaultPackage=facade.findPackage("");
    if (defaultPackage != null) {
      for (      PsiPackage subpackage : defaultPackage.getSubPackages(getResolveScope())) {
        if (!ResolveUtil.processElement(processor,subpackage))         return false;
      }
    }
  }
  return true;
}
