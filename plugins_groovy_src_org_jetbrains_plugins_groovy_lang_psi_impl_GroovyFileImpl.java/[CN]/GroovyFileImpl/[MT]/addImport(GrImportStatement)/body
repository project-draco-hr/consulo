{
  PsiElement anchor=getAnchorToInsertImportAfter();
  final PsiElement result=addAfter(statement,anchor);
  if (anchor != null) {
    int lineFeedCount=0;
    if (isAddLineFeed(statement,anchor)) {
      lineFeedCount++;
    }
    final PsiElement prev=result.getPrevSibling();
    if (prev instanceof PsiWhiteSpace) {
      lineFeedCount+=StringUtil.getOccurrenceCount(prev.getText(),'\n');
    }
    if (lineFeedCount > 0) {
      getNode().addLeaf(GroovyTokenTypes.mNLS,StringUtil.repeatSymbol('\n',lineFeedCount),result.getNode());
    }
    if (prev instanceof PsiWhiteSpace) {
      prev.delete();
    }
  }
  GrImportStatement importStatement=(GrImportStatement)result;
  PsiElement next=importStatement.getNextSibling();
  if (next != null) {
    ASTNode node=next.getNode();
    if (node != null && GroovyTokenTypes.mNLS == node.getElementType()) {
      next.replace(GroovyPsiElementFactory.getInstance(statement.getProject()).createLineTerminator(2));
    }
  }
  return importStatement;
}
