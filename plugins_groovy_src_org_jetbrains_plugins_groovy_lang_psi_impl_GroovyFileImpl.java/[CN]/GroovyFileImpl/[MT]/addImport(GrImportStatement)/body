{
  PsiElement anchor=getAnchorToInsertImportAfter();
  final PsiElement result=addAfter(statement,anchor);
  boolean isAliasedImport=false;
  if (anchor instanceof GrImportStatement) {
    isAliasedImport=!((GrImportStatement)anchor).isAliasedImport() && statement.isAliasedImport() || ((GrImportStatement)anchor).isAliasedImport() && !statement.isAliasedImport();
  }
  if (anchor != null && (!(anchor instanceof GrImportStatement) || isAliasedImport)) {
    getNode().addLeaf(GroovyTokenTypes.mNLS,"\n",result.getNode());
  }
  GrImportStatement importStatement=(GrImportStatement)result;
  PsiElement next=importStatement.getNextSibling();
  if (next != null) {
    ASTNode node=next.getNode();
    if (node != null && GroovyTokenTypes.mNLS == node.getElementType()) {
      GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(statement.getProject());
      next.replace(factory.createLineTerminator(2));
    }
  }
  return importStatement;
}
