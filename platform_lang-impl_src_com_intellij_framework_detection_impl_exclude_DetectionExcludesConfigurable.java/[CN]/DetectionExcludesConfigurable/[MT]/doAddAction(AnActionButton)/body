{
  final List<FrameworkType> types=new ArrayList<FrameworkType>();
  for (  FrameworkType type : FrameworkDetectorRegistry.getInstance().getFrameworkTypes()) {
    if (!isExcluded(type)) {
      types.add(type);
    }
  }
  Collections.sort(types,new Comparator<FrameworkType>(){
    @Override public int compare(    FrameworkType o1,    FrameworkType o2){
      return o1.getPresentableName().compareToIgnoreCase(o2.getPresentableName());
    }
  }
);
  types.add(0,null);
  final ListPopup popup=JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<FrameworkType>("Framework to Exclude",types){
    @Override public Icon getIconFor(    FrameworkType value){
      return value != null ? value.getIcon() : null;
    }
    @NotNull @Override public String getTextFor(    FrameworkType value){
      return value != null ? value.getPresentableName() : "All Frameworks...";
    }
    @Override public boolean hasSubstep(    FrameworkType selectedValue){
      return selectedValue != null;
    }
    @Override public PopupStep onChosen(    final FrameworkType frameworkType,    boolean finalChoice){
      if (frameworkType == null) {
        return doFinalStep(new Runnable(){
          @Override public void run(){
            chooseDirectoryAndAdd(null);
          }
        }
);
      }
 else {
        return addExcludedFramework(frameworkType);
      }
    }
  }
);
  final RelativePoint popupPoint=button.getPreferredPopupPoint();
  if (popupPoint != null) {
    popup.show(popupPoint);
  }
 else {
    popup.showInCenterOf(myMainPanel);
  }
}
