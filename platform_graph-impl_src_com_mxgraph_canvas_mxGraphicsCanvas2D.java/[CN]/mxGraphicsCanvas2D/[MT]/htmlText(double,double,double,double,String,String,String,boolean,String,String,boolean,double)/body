{
  x+=state.dx;
  y+=state.dy;
  JLabel textRenderer=getTextRenderer();
  if (textRenderer != null && rendererPane != null) {
    AffineTransform previous=state.g.getTransform();
    state.g.scale(state.scale,state.scale);
    double rad=rotation * (Math.PI / 180);
    state.g.rotate(rad,x,y);
    boolean widthFill=false;
    boolean fill=false;
    String original=str;
    if (overflow != null) {
      widthFill=overflow.equals("width");
      fill=overflow.equals("fill");
    }
    str=createHtmlDocument(str,align,valign,(widthFill || fill) ? (int)Math.round(w * mxConstants.PX_PER_PIXEL) : 0,(fill) ? (int)Math.round(h * mxConstants.PX_PER_PIXEL) : 0,wrap,overflow,clip);
    textRenderer.setText(str);
    Dimension pref=textRenderer.getPreferredSize();
    int prefWidth=pref.width;
    int prefHeight=pref.height;
    if (((clip || wrap) && prefWidth > w && w > 0) || (clip && prefHeight > h && h > 0)) {
      int cw=(int)Math.round(w * mxConstants.PX_PER_PIXEL + ((wrap) ? 2 : 0));
      int ch=(int)Math.round(h * mxConstants.PX_PER_PIXEL);
      str=createHtmlDocument(original,align,valign,cw,ch,wrap,overflow,clip);
      textRenderer.setText(str);
      pref=textRenderer.getPreferredSize();
      prefWidth=pref.width;
      prefHeight=pref.height + 2;
    }
    if (clip && w > 0 && h > 0) {
      prefWidth=Math.min(pref.width,(int)w);
      prefHeight=Math.min(prefHeight,(int)h);
      h=prefHeight;
    }
 else     if (!clip && wrap && w > 0 && h > 0) {
      prefWidth=Math.min(pref.width,(int)w);
      w=prefWidth;
      h=prefHeight;
      prefHeight=Math.max(prefHeight,(int)h);
    }
 else     if (!clip && !wrap) {
      if (w > 0 && w < prefWidth) {
        w=prefWidth;
      }
      if (h > 0 && h < prefHeight) {
        h=prefHeight;
      }
    }
    Point2D margin=getMargin(align,valign);
    x+=margin.getX() * prefWidth;
    y+=margin.getY() * prefHeight;
    if (w == 0) {
      w=prefWidth;
    }
    if (h == 0) {
      h=prefHeight;
    }
    rendererPane.paintComponent(state.g,textRenderer,rendererPane,(int)Math.round(x),(int)Math.round(y),(int)Math.round(w),(int)Math.round(h),true);
    state.g.setTransform(previous);
  }
}
