{
  if (state.shadowColor == null) {
    state.shadowColor=parseColor(state.shadowColorValue);
  }
  if (state.shadowColor != null) {
    double rad=-state.theta * (Math.PI / 180);
    double cos=Math.cos(rad);
    double sin=Math.sin(rad);
    double dx=state.shadowOffsetX * state.scale;
    double dy=state.shadowOffsetY * state.scale;
    if (state.flipH) {
      dx*=-1;
    }
    if (state.flipV) {
      dy*=-1;
    }
    double tx=dx * cos - dy * sin;
    double ty=dx * sin + dy * cos;
    state.g.setColor(state.shadowColor);
    state.g.translate(tx,ty);
    double alpha=state.alpha * state.shadowAlpha;
    Composite comp=state.g.getComposite();
    state.g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,(float)(alpha)));
    if (filled && (state.gradientPaint != null || state.fillColor != null)) {
      state.g.fill(currentPath);
    }
    if (stroked && state.strokeColor != null) {
      state.g.draw(currentPath);
    }
    state.g.translate(-tx,-ty);
    state.g.setComposite(comp);
  }
}
