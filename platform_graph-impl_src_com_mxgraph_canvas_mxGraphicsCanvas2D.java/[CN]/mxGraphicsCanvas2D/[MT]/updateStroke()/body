{
  float sw=(float)Math.max(1,state.strokeWidth * state.scale);
  int cap=BasicStroke.CAP_BUTT;
  if (state.lineCap.equals("round")) {
    cap=BasicStroke.CAP_ROUND;
  }
 else   if (state.lineCap.equals("square")) {
    cap=BasicStroke.CAP_SQUARE;
  }
  int join=BasicStroke.JOIN_MITER;
  if (state.lineJoin.equals("round")) {
    join=BasicStroke.JOIN_ROUND;
  }
 else   if (state.lineJoin.equals("bevel")) {
    join=BasicStroke.JOIN_BEVEL;
  }
  float miterlimit=(float)state.miterLimit;
  if (lastStroke == null || lastStrokeWidth != sw || lastCap != cap || lastJoin != join || lastMiterLimit != miterlimit || lastDashed != state.dashed || (state.dashed && lastDashPattern != state.dashPattern)) {
    float[] dash=null;
    if (state.dashed) {
      dash=new float[state.dashPattern.length];
      for (int i=0; i < dash.length; i++) {
        dash[i]=(float)(state.dashPattern[i] * sw);
      }
    }
    lastStroke=new BasicStroke(sw,cap,join,miterlimit,dash,0);
    lastStrokeWidth=sw;
    lastCap=cap;
    lastJoin=join;
    lastMiterLimit=miterlimit;
    lastDashed=state.dashed;
    lastDashPattern=state.dashPattern;
  }
  state.g.setStroke(lastStroke);
}
