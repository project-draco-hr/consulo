{
  if (!CodeInsightUtil.prepareFileForWrite(myFile))   return;
  try {
    String packageName=myTargetPackage.getQualifiedName();
    PsiDirectory directory=PackageUtil.findOrCreateDirectoryForPackage(project,packageName,null,true);
    if (directory == null) {
      return;
    }
    String error=RefactoringMessageUtil.checkCanCreateFile(directory,myFile.getName());
    if (error != null) {
      Messages.showMessageDialog(project,error,CommonBundle.getErrorTitle(),Messages.getErrorIcon());
      return;
    }
    new MoveClassesOrPackagesProcessor(project,new PsiElement[]{((PsiJavaFile)myFile).getClasses()[0]},new SingleSourceRootMoveDestination(PackageWrapper.create(JavaDirectoryService.getInstance().getPackage(directory)),directory),false,false,null).run();
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
