{
synchronized (myLock) {
    while ((!myDone) && (!ProgressManager.getInstance().getProgressIndicator().isCanceled())) {
      try {
        myLock.wait();
      }
 catch (      InterruptedException e) {
      }
    }
  }
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
synchronized (myLock) {
        if (!myDone) {
          return;
        }
      }
      if (myProject.isDisposed())       return;
      myRunnable.run();
      ChangesViewManager.getInstance(myProject).refreshView();
    }
  }
);
}
