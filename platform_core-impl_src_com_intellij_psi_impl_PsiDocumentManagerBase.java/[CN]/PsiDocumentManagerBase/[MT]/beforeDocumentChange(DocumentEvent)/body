{
  final Document document=event.getDocument();
  if (!(document instanceof DocumentWindow) && !myLastCommittedTexts.containsKey(document)) {
    myLastCommittedTexts.put(document,Pair.create(document.getImmutableCharSequence(),document.getModificationStamp()));
  }
  VirtualFile virtualFile=FileDocumentManager.getInstance().getFile(document);
  boolean isBulk=document instanceof DocumentEx && ((DocumentEx)document).isInBulkUpdate();
  boolean isRelevant=virtualFile != null && isRelevant(virtualFile);
  if (!isBulk && isRelevant) {
    mySmartPointerManager.fastenBelts(virtualFile,event.getOffset(),null);
  }
  final FileViewProvider viewProvider=getCachedViewProvider(document);
  boolean inMyProject=viewProvider != null && viewProvider.getManager() == myPsiManager;
  if (!isRelevant || !inMyProject) {
    return;
  }
  final List<PsiFile> files=viewProvider.getAllFiles();
  PsiFile psiCause=null;
  for (  PsiFile file : files) {
    if (file == null) {
      throw new AssertionError("View provider " + viewProvider + " ("+ viewProvider.getClass()+ ") returned null in its files array: "+ files+ " for file "+ viewProvider.getVirtualFile());
    }
    if (mySynchronizer.isInsideAtomicChange(file)) {
      psiCause=file;
    }
  }
  if (psiCause == null) {
    beforeDocumentChangeOnUnlockedDocument(viewProvider);
  }
  ((SingleRootFileViewProvider)viewProvider).beforeDocumentChanged(psiCause);
}
