{
  boolean isInherited=false;
  if (!isDeclaration) {
    if (isCalledOnThis(elementToHighlight)) {
      PsiClass enclosingClass=PsiTreeUtil.getParentOfType(elementToHighlight,PsiClass.class);
      isInherited=enclosingClass != null && enclosingClass.isInheritor(method.getContainingClass(),true);
    }
  }
  HighlightInfoType type=getMethodNameHighlightType(method,isDeclaration,isInherited);
  if (type != null && elementToHighlight != null) {
    TextAttributes attributes=mergeWithScopeAttributes(method,type,colorsScheme);
    HighlightInfo.Builder builder=HighlightInfo.newHighlightInfo(type).range(range);
    if (attributes != null) {
      builder.textAttributes(attributes);
    }
    return builder.createUnconditionally();
  }
  return null;
}
