{
  String text=editor.getDocument().getText();
  if (text == null || text.length() == 0)   return false;
  final EditorHighlighter highlighter=((EditorEx)editor).getHighlighter();
  if (caret < 1 || caret > text.length() - 1) {
    return false;
  }
  HighlighterIterator iterator=highlighter.createIterator(caret);
  if (GroovyTokenTypes.mRCURLY == iterator.getTokenType()) {
    PsiFile file=DataKeys.PSI_FILE.getData(context);
    if (file != null) {
      final PsiElement element=file.findElementAt(caret);
      if (element != null && element.getNode().getElementType() == GroovyTokenTypes.mRCURLY && element.getParent() instanceof GrClosableBlock && text.length() > caret) {
        iterator=highlighter.createIterator(caret);
        if (GroovyTokenTypes.mRCURLY == iterator.getTokenType()) {
          myOriginalHandler.execute(editor,context);
          myOriginalHandler.execute(editor,context);
          editor.getCaretModel().moveCaretRelatively(0,-1,false,false,true);
          GroovyEditorActionUtil.insertSpacesByGroovyIndent(editor,project);
          return true;
        }
      }
    }
  }
  return false;
}
