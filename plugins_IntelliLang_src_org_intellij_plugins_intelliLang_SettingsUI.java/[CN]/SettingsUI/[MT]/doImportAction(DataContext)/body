{
  final FileChooserDescriptor descriptor=new FileChooserDescriptor(true,false,true,false,true,false){
    @Override public boolean isFileVisible(    VirtualFile file,    boolean showHiddenFiles){
      return super.isFileVisible(file,showHiddenFiles) && (file.isDirectory() || "xml".equals(file.getExtension()) || file.getFileType() == StdFileTypes.ARCHIVE);
    }
    @Override public boolean isFileSelectable(    VirtualFile file){
      return file.getFileType() == StdFileTypes.XML;
    }
  }
;
  descriptor.setDescription("Please select the configuration file (usually named IntelliLang.xml) to import.");
  descriptor.setTitle("Import Configuration");
  descriptor.putUserData(LangDataKeys.MODULE_CONTEXT,LangDataKeys.MODULE.getData(dataContext));
  final FileChooserDialog chooser=FileChooserFactory.getInstance().createFileChooser(descriptor,myProject);
  final SplitterProportionsData splitterData=PeerFactory.getInstance().getUIHelper().createSplitterProportionsData();
  splitterData.externalizeFromDimensionService("IntelliLang.ImportSettingsKey.SplitterProportions");
  final VirtualFile[] files=chooser.choose(null,myProject);
  if (files.length == 1) {
    try {
      final Configuration cfg=Configuration.load(files[0]);
      if (cfg == null) {
        Messages.showWarningDialog(myProject,"The selected file does not contain any importable configuration.","Nothing to Import");
        return;
      }
      final int n=myConfiguration.importFrom(cfg);
      if (n > 1) {
        Messages.showInfoMessage(myProject,n + " entries have been successfully imported","Import Successful");
      }
 else       if (n == 1) {
        Messages.showInfoMessage(myProject,"One entry has been successfully imported","Import Successful");
      }
 else {
        Messages.showInfoMessage(myProject,"No new entries have been imported","Import");
      }
    }
 catch (    Exception e1) {
      Configuration.LOG.error("Unable to load Settings",e1);
      final String msg=e1.getLocalizedMessage();
      Messages.showErrorDialog(myProject,msg != null && msg.length() > 0 ? msg : e1.toString(),"Could not load Settings");
    }
  }
}
