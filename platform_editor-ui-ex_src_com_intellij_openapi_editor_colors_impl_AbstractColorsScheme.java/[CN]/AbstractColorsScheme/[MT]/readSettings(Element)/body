{
  String name=childNode.getAttributeValue(NAME_ATTR);
  if (LINE_SPACING.equals(name)) {
    Float value=myValueReader.read(Float.class,childNode);
    if (value != null)     myLineSpacing=value;
  }
 else   if (EDITOR_FONT_SIZE.equals(name)) {
    Integer value=myValueReader.read(Integer.class,childNode);
    if (value != null)     setEditorFontSize(value);
  }
 else   if (EDITOR_FONT_NAME.equals(name)) {
    String value=myValueReader.read(String.class,childNode);
    if (value != null)     setEditorFontName(value);
  }
 else   if (CONSOLE_LINE_SPACING.equals(name)) {
    Float value=myValueReader.read(Float.class,childNode);
    if (value != null)     setConsoleLineSpacing(value);
  }
 else   if (CONSOLE_FONT_SIZE.equals(name)) {
    Integer value=myValueReader.read(Integer.class,childNode);
    if (value != null)     setConsoleFontSize(value);
  }
 else   if (CONSOLE_FONT_NAME.equals(name)) {
    String value=myValueReader.read(String.class,childNode);
    if (value != null)     setConsoleFontName(value);
  }
 else   if (EDITOR_QUICK_JAVADOC_FONT_SIZE.equals(name)) {
    FontSize value=myValueReader.read(FontSize.class,childNode);
    if (value != null)     myQuickDocFontSize=value;
  }
 else   if (EDITOR_LIGATURES.equals(name)) {
    Boolean value=myValueReader.read(Boolean.class,childNode);
    if (value != null)     myFontPreferences.setUseLigatures(value);
  }
 else   if (CONSOLE_LIGATURES.equals(name)) {
    Boolean value=myValueReader.read(Boolean.class,childNode);
    if (value != null)     myConsoleFontPreferences.setUseLigatures(value);
  }
}
