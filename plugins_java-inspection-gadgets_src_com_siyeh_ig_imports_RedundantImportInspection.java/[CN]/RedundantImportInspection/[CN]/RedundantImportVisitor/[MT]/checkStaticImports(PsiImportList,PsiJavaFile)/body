{
  final PsiImportStaticStatement[] importStaticStatements=importList.getImportStaticStatements();
  final Set<String> onDemandStaticImports=new HashSet();
  final Set<String> singleMemberStaticImports=new HashSet();
  for (  PsiImportStaticStatement importStaticStatement : importStaticStatements) {
    final PsiClass targetClass=importStaticStatement.resolveTargetClass();
    if (targetClass == null) {
      continue;
    }
    final String qualifiedName=targetClass.getQualifiedName();
    final String referenceName=importStaticStatement.getReferenceName();
    if (referenceName == null) {
      if (onDemandStaticImports.contains(qualifiedName)) {
        registerError(importStaticStatement);
        continue;
      }
      onDemandStaticImports.add(qualifiedName);
    }
 else {
      final String qualifiedReferenceName=qualifiedName + '.' + referenceName;
      if (singleMemberStaticImports.contains(qualifiedReferenceName)) {
        registerError(importStaticStatement);
        continue;
      }
      if (onDemandStaticImports.contains(qualifiedName)) {
        if (!ImportUtils.hasOnDemandImportConflict(qualifiedReferenceName,javaFile)) {
          registerError(importStaticStatement);
        }
      }
      singleMemberStaticImports.add(qualifiedReferenceName);
    }
  }
}
