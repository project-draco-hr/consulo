{
  myFilters=filters;
  myMemoryFilter=new MemoryFilter(){
    @Override public boolean applyInMemory(    GitHeavyCommit commit){
      for (      Filter filter : myFilters) {
        if (!filter.getMemoryFilter().applyInMemory(commit))         return false;
      }
      return true;
    }
  }
;
  myCommandParametersFilter=new CommandParametersFilter(){
    @Override public void applyToCommandLine(    List<String> sink){
      for (      Filter filter : myFilters) {
        final CommandParametersFilter commandParametersFilter=filter.getCommandParametersFilter();
        if (commandParametersFilter != null) {
          commandParametersFilter.applyToCommandLine(sink);
        }
      }
    }
    @Override public void applyToPaths(    Collection<VirtualFile> paths){
      for (      Filter filter : myFilters) {
        final CommandParametersFilter commandParametersFilter=filter.getCommandParametersFilter();
        if (commandParametersFilter != null) {
          commandParametersFilter.applyToPaths(paths);
        }
      }
    }
  }
;
}
