{
  final DataContext dataContext=e.getDataContext();
  final Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  final PsiMethod method=getMethod(dataContext);
  final MethodHierarchyBrowser hierarchyBrowser=new MethodHierarchyBrowser(project,method);
  final Content content;
  final HierarchyBrowserManager hierarchyBrowserManager=HierarchyBrowserManager.getInstance(project);
  final ContentManager contentManager=hierarchyBrowserManager.getContentManager();
  final Content selectedContent=contentManager.getSelectedContent();
  if (selectedContent != null && !selectedContent.isPinned()) {
    content=selectedContent;
    final Component component=content.getComponent();
    if (component instanceof Disposable) {
      Disposer.dispose((Disposable)component);
    }
    content.setComponent(hierarchyBrowser);
  }
 else {
    content=ContentFactory.SERVICE.getInstance().createContent(hierarchyBrowser,null,true);
    contentManager.addContent(content);
  }
  contentManager.setSelectedContent(content);
  hierarchyBrowser.setContent(content);
  final String name=method.getName();
  content.setDisplayName(name);
  final Runnable runnable=new Runnable(){
    public void run(){
      final String typeName=MethodHierarchyTreeStructure.TYPE;
      hierarchyBrowser.changeView(typeName);
    }
  }
;
  ToolWindowManager.getInstance(project).getToolWindow(ToolWindowId.HIERARCHY).activate(runnable);
}
