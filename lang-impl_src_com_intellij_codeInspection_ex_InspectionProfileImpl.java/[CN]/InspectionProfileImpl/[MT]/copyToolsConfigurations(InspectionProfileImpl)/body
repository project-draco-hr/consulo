{
  try {
    initInspectionTools();
    for (    ToolsImpl toolList : profile.myTools.values()) {
      final ToolsImpl tools=myTools.get(toolList.getShortName());
      final ScopeToolState defaultState=toolList.getDefaultState();
      tools.setDefaultState(copyToolSettings((InspectionTool)defaultState.getTool()),defaultState.isEnabled(),defaultState.getLevel());
      final List<ScopeToolState> currentNonDefault=tools.getNonDefaultTools();
      if (currentNonDefault != null) {
        final int count=currentNonDefault.size();
        for (int i=0; i < count; i++) {
          tools.removeScope(0);
        }
      }
      tools.setEnabled(toolList.isEnabled());
      final List<ScopeToolState> nonDefaultToolStates=toolList.getNonDefaultTools();
      if (nonDefaultToolStates != null) {
        for (        ScopeToolState state : nonDefaultToolStates) {
          final InspectionTool inspectionTool=copyToolSettings((InspectionTool)state.getTool());
          if (state.getScope() != null) {
            tools.addTool(state.getScope(),inspectionTool,state.isEnabled(),state.getLevel());
          }
        }
      }
    }
  }
 catch (  WriteExternalException e) {
    LOG.error(e);
  }
catch (  InvalidDataException e) {
    LOG.error(e);
  }
}
