{
  final List<JVMName> optimised=new ArrayList<JVMName>();
  for (Iterator iterator=myList.iterator(); iterator.hasNext(); ) {
    JVMName evaluator=(JVMName)iterator.next();
    if (evaluator instanceof JVMRawText && optimised.size() > 0 && optimised.get(optimised.size() - 1) instanceof JVMRawText) {
      JVMRawText nameEvaluator=(JVMRawText)optimised.get(optimised.size() - 1);
      nameEvaluator.setName(nameEvaluator.getName() + ((JVMRawText)evaluator).getName());
    }
 else {
      optimised.add(evaluator);
    }
  }
  if (optimised.size() == 1)   return optimised.get(0);
  if (optimised.size() == 0)   return new JVMRawText("");
  return new JVMName(){
    String myName=null;
    public String getName(    DebugProcessImpl process) throws EvaluateException {
      if (myName == null) {
        String name="";
        for (Iterator iterator=optimised.iterator(); iterator.hasNext(); ) {
          JVMName nameEvaluator=(JVMName)iterator.next();
          name+=nameEvaluator.getName(process);
        }
        myName=name;
      }
      return myName;
    }
    public String getDisplayName(    DebugProcessImpl debugProcess){
      if (myName == null) {
        String displayName="";
        for (Iterator iterator=optimised.iterator(); iterator.hasNext(); ) {
          JVMName nameEvaluator=(JVMName)iterator.next();
          displayName+=nameEvaluator.getDisplayName(debugProcess);
        }
        return displayName;
      }
      return myName;
    }
  }
;
}
