{
  String superClassName=null;
  final PsiElement ggParent=element.getParent().getParent();
  if (ggParent instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)ggParent;
    if (method.getThrowsList() == element.getParent()) {
      superClassName="java.lang.Exception";
    }
  }
 else   if (ggParent instanceof PsiClassObjectAccessExpression) {
    final ExpectedTypeInfo[] expectedTypes=ExpectedTypesProvider.getExpectedTypes((PsiExpression)ggParent,false);
    if (expectedTypes.length == 1) {
      final PsiClassType.ClassResolveResult classResolveResult=PsiUtil.resolveGenericsClassInType(expectedTypes[0].getType());
      final PsiClass psiClass=classResolveResult.getElement();
      if (psiClass != null && CommonClassNames.JAVA_LANG_CLASS.equals(psiClass.getQualifiedName())) {
        PsiType psiType=classResolveResult.getSubstitutor().substitute(psiClass.getTypeParameters()[0]);
        if (psiType instanceof PsiWildcardType && ((PsiWildcardType)psiType).isExtends()) {
          psiType=((PsiWildcardType)psiType).getExtendsBound();
        }
        final PsiClass aClass=PsiUtil.resolveClassInType(psiType);
        if (aClass != null)         return aClass.getQualifiedName();
      }
    }
  }
  return superClassName;
}
