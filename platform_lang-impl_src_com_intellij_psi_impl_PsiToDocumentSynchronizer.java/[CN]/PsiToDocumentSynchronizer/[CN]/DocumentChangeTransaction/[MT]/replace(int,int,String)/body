{
  int start=0;
  int end=start + length;
  final int replaceLength=replace.length();
  final String chars=getText(start + initialStart,end + initialStart);
  if (chars.equals(replace))   return;
  int newStartInReplace=0;
  int newEndInReplace=replaceLength;
  while (newStartInReplace < replaceLength && start < end && replace.charAt(newStartInReplace) == chars.charAt(start)) {
    start++;
    newStartInReplace++;
  }
  while (start < end && newStartInReplace < newEndInReplace && replace.charAt(newEndInReplace - 1) == chars.charAt(end - 1)) {
    newEndInReplace--;
    end--;
  }
  if (newStartInReplace == newEndInReplace && start > 0 && start < end && StringUtil.indexOf(chars,'\n',start,end) != -1) {
    while (start > 0 && newStartInReplace > 0 && chars.charAt(start - 1) == chars.charAt(end - 1) && chars.charAt(end - 1) != '\n') {
      start--;
      end--;
      newStartInReplace--;
      newEndInReplace--;
    }
  }
  start+=initialStart;
  end+=initialStart;
  final CharSequence charsSequence=myDocument.getCharsSequence();
  while (start < charsSequence.length() && end < charsSequence.length() && start > 0 && charsSequence.subSequence(start,end).toString().endsWith("><") && charsSequence.charAt(start - 1) == '<') {
    start--;
    newStartInReplace--;
    end--;
    newEndInReplace--;
  }
  replace=replace.substring(newStartInReplace,newEndInReplace);
  length=end - start;
  final Pair<MutableTextRange,StringBuffer> fragment=getFragmentByRange(start,length);
  final StringBuffer fragmentReplaceText=fragment.getSecond();
  final int startInFragment=start - fragment.getFirst().getStartOffset();
  final int lengthDiff=replace.length() - length;
  final Iterator<Pair<MutableTextRange,StringBuffer>> iterator=myAffectedFragments.iterator();
  boolean adjust=false;
  while (iterator.hasNext()) {
    final Pair<MutableTextRange,StringBuffer> pair=iterator.next();
    if (adjust)     pair.getFirst().shift(lengthDiff);
    if (pair == fragment)     adjust=true;
  }
  fragmentReplaceText.replace(startInFragment,startInFragment + length,replace);
}
