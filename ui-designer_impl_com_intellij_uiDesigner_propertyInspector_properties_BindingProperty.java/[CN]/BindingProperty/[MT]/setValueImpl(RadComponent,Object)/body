{
  final String newBinding=(String)value;
  if (newBinding.length() == 0) {
    component.setBinding(null);
    return;
  }
  if (!GuiEditorUtil.isBindingUnique(component,newBinding,myGuiEditor.getRootContainer())) {
    throw new Exception("binding is not unique");
  }
  final String oldBinding=(String)getValue(component);
  component.setBinding(newBinding);
  final String classToBind=myGuiEditor.getRootContainer().getClassToBind();
  if (classToBind == null) {
    return;
  }
  final Project project=myGuiEditor.getProject();
  final PsiClass aClass=PsiManager.getInstance(project).findClass(classToBind,GlobalSearchScope.allScope(project));
  if (aClass == null) {
    return;
  }
  if (oldBinding == null) {
    if (aClass.findFieldByName(newBinding,true) == null) {
      CreateFieldFix.runImpl(myGuiEditor,aClass,component.getComponentClassName(),newBinding,false);
    }
    return;
  }
  final PsiField oldField=aClass.findFieldByName(oldBinding,true);
  if (oldField == null) {
    return;
  }
  if (aClass.findFieldByName(newBinding,true) != null) {
    return;
  }
  final int option=Messages.showYesNoDialog(myGuiEditor,MessageFormat.format(UIDesignerBundle.message("message.rename.field"),oldBinding,newBinding),UIDesignerBundle.message("title.rename"),Messages.getQuestionIcon());
  if (option != 0) {
    return;
  }
  myGuiEditor.refreshAndSave(false);
  PsiDocumentManager.getInstance(myGuiEditor.getProject()).commitAllDocuments();
  final RenameProcessor processor=new RenameProcessor(project,oldField,newBinding,true,true);
  processor.run();
}
