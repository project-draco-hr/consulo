{
  ArrayList<String> words=new ArrayList<String>(StringUtil.getWordsIn(text));
  if (words.size() > 0) {
    if (words.get(0).equalsIgnoreCase(PREFIX_HTML) && words.get(words.size() - 1).equalsIgnoreCase(PREFIX_HTML)) {
      words.remove(0);
      words.remove(words.size() - 1);
    }
    if (words.get(0).equalsIgnoreCase(PREFIX_BODY) && words.get(words.size() - 1).equalsIgnoreCase(PREFIX_BODY)) {
      words.remove(0);
      words.remove(words.size() - 1);
    }
    StringBuilder nameBuilder=new StringBuilder(StringUtil.decapitalize(words.get(0)));
    for (int i=1; i < words.size() && i < 4; i++) {
      nameBuilder.append(StringUtil.capitalize(words.get(i)));
    }
    nameBuilder.append(StringUtil.capitalize(InsertComponentProcessor.getShortClassName(component.getComponentClassName())));
    RadRootContainer root=(RadRootContainer)FormEditingUtil.getRoot(component);
    Project project=root.getModule().getProject();
    String binding=CodeStyleManager.getInstance(project).propertyNameToVariableName(nameBuilder.toString(),VariableKind.FIELD);
    if (FormEditingUtil.findComponentWithBinding(root,binding,component) != null) {
      binding=InsertComponentProcessor.getUniqueBinding(root,nameBuilder.toString());
    }
    return binding;
  }
  return null;
}
