{
  final String classToBind=root.getClassToBind();
  if (classToBind == null)   return;
  final Project project=root.getProject();
  if (newName.length() == 0) {
    checkRemoveUnusedField(root,oldName,FormEditingUtil.getNextSaveUndoGroupId(project));
    return;
  }
  final PsiClass aClass=JavaPsiFacade.getInstance(project).findClass(classToBind,GlobalSearchScope.allScope(project));
  if (aClass == null) {
    return;
  }
  if (oldName == null) {
    if (aClass.findFieldByName(newName,true) == null) {
      CreateFieldFix.runImpl(project,root,aClass,fieldClassName,newName,false,FormEditingUtil.getNextSaveUndoGroupId(project));
    }
    return;
  }
  final PsiField oldField=aClass.findFieldByName(oldName,true);
  if (oldField == null) {
    return;
  }
  if (aClass.findFieldByName(newName,true) != null) {
    checkRemoveUnusedField(root,oldName,FormEditingUtil.getNextSaveUndoGroupId(project));
    return;
  }
  if (!isFieldUnreferenced(oldField)) {
    final int option=Messages.showYesNoDialog(project,MessageFormat.format(UIDesignerBundle.message("message.rename.field"),oldName,newName),UIDesignerBundle.message("title.rename"),Messages.getQuestionIcon());
    if (option != 0) {
      return;
    }
  }
  GuiEditor editor=UIDesignerToolWindowManager.getInstance(project).getActiveFormEditor();
  if (editor != null) {
    editor.refreshAndSave(false);
  }
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  if (!CommonRefactoringUtil.checkReadOnlyStatus(project,aClass)) {
    return;
  }
  final RenameProcessor processor=new RenameProcessor(project,oldField,newName,true,true);
  processor.run();
}
