{
  if (tagName.equals("set")) {
    for (    String subtagName : AndroidAnimationUtils.getPossibleChildren(facet)) {
      registerSubtags(subtagName,AnimationElement.class,registrar,registeredSubtags);
    }
  }
  final String styleableName=AndroidAnimationUtils.getStyleableNameByTagName(tagName);
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(facet.getModule().getProject());
  final PsiClass c=ApplicationManager.getApplication().runReadAction(new Computable<PsiClass>(){
    @Nullable public PsiClass compute(){
      return facade.findClass(AndroidAnimationUtils.ANIMATION_PACKAGE + '.' + styleableName,facet.getModule().getModuleWithDependenciesAndLibrariesScope(true));
    }
  }
);
  if (c != null) {
    registerAttributesForClassAndSuperclasses(facet,element,c,registrar,null,skipAttrNames);
  }
 else {
    registerAttributes(facet,element,styleableName,SYSTEM_RESOURCE_PACKAGE,registrar,skipAttrNames);
    String layoutAnim="LayoutAnimation";
    if (styleableName.endsWith(layoutAnim) && !styleableName.equals(layoutAnim)) {
      registerAttributes(facet,element,layoutAnim,SYSTEM_RESOURCE_PACKAGE,registrar,skipAttrNames);
    }
    if (styleableName.endsWith("Animation")) {
      registerAttributes(facet,element,"Animation",SYSTEM_RESOURCE_PACKAGE,registrar,skipAttrNames);
    }
  }
}
