{
  final String tagName=tag.getName();
  String styleableName=AndroidXmlResourcesUtil.SPECIAL_STYLEABLE_NAMES.get(tagName);
  if (styleableName != null) {
    String[] attrsToSkip=element instanceof Intent ? new String[]{"action"} : ArrayUtil.EMPTY_STRING_ARRAY;
    final Set<XmlName> newSkipAttrNames=new HashSet<XmlName>();
    for (    String attrName : attrsToSkip) {
      newSkipAttrNames.add(new XmlName(attrName,SdkConstants.NS_RESOURCES));
    }
    registerAttributes(facet,element,styleableName,SYSTEM_RESOURCE_PACKAGE,registrar,newSkipAttrNames);
  }
  if (tagName.equals("searchable")) {
    registerSubtags("actionkey",XmlResourceElement.class,registrar,registeredSubtags);
  }
  if (tagName.equals("Keyboard")) {
    registerSubtags("Row",XmlResourceElement.class,registrar,registeredSubtags);
  }
 else   if (tagName.equals("Row")) {
    registerSubtags("Key",XmlResourceElement.class,registrar,registeredSubtags);
  }
  if (tagName.equals("device-admin")) {
    registerSubtags("uses-policies",XmlResourceElement.class,registrar,registeredSubtags);
  }
 else   if (tagName.equals("uses-policies")) {
    registerSubtags("limit-password",XmlResourceElement.class,registrar,registeredSubtags);
    registerSubtags("watch-login",XmlResourceElement.class,registrar,registeredSubtags);
    registerSubtags("reset-password",XmlResourceElement.class,registrar,registeredSubtags);
    registerSubtags("force-lock",XmlResourceElement.class,registrar,registeredSubtags);
    registerSubtags("wipe-data",XmlResourceElement.class,registrar,registeredSubtags);
    registerSubtags("expire-password",XmlResourceElement.class,registrar,registeredSubtags);
    registerSubtags("encrypted-storage",XmlResourceElement.class,registrar,registeredSubtags);
    registerSubtags("disable-camera",XmlResourceElement.class,registrar,registeredSubtags);
  }
  if (tagName.equals("preference-headers")) {
    registerSubtags("header",PreferenceElement.class,registrar,registeredSubtags);
  }
  Map<String,PsiClass> prefClassMap=getPreferencesClassMap(facet);
  String prefClassName=element.getXmlTag().getName();
  PsiClass c=prefClassMap.get(prefClassName);
  registerAttributesForClassAndSuperclasses(facet,element,c,registrar,null,skipAttrNames);
  String suffix="Preference";
  if (prefClassName.endsWith(suffix)) {
    String widgetClassName=prefClassName.substring(0,prefClassName.length() - suffix.length());
    Map<String,PsiClass> viewClassMap=getViewClassMap(facet);
    PsiClass widgetClass=viewClassMap.get(widgetClassName);
    registerAttributesForClassAndSuperclasses(facet,element,widgetClass,registrar,null,skipAttrNames);
  }
  if (c != null && isPreference(prefClassMap,c)) {
    registerClassNameSubtags(tag,prefClassMap,PreferenceElement.class,registeredSubtags,registrar);
  }
}
