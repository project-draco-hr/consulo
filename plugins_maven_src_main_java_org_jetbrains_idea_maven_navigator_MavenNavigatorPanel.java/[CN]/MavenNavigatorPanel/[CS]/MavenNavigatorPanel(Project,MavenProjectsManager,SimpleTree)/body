{
  myProject=project;
  myProjectsManager=projectsManager;
  myTree=tree;
  setLayout(new GridLayoutManager(2,1,new Insets(0,0,0,0),-1,-1));
  add(ActionManager.getInstance().createActionToolbar("New Maven Toolbar",(ActionGroup)ActionManager.getInstance().getAction("Maven.PomTreeToolbar"),true).getComponent(),new GridConstraints(0,0,1,1,GridConstraints.ANCHOR_NORTH,GridConstraints.FILL_HORIZONTAL,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,GridConstraints.SIZEPOLICY_FIXED,null,new Dimension(-1,20),null));
  add(new JScrollPane(myTree),new GridConstraints(1,0,1,1,GridConstraints.ANCHOR_SOUTH,GridConstraints.FILL_BOTH,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW,null,null,null));
  myTree.addMouseListener(new PopupHandler(){
    public void invokePopup(    final Component comp,    final int x,    final int y){
      final String id=getMenuId(getSelectedNodes(MavenTreeStructure.CustomNode.class));
      if (id != null) {
        final ActionGroup actionGroup=(ActionGroup)ActionManager.getInstance().getAction(id);
        if (actionGroup != null) {
          ActionManager.getInstance().createActionPopupMenu("",actionGroup).getComponent().show(comp,x,y);
        }
      }
    }
    @Nullable private String getMenuId(    Collection<? extends MavenTreeStructure.CustomNode> nodes){
      String id=null;
      for (      MavenTreeStructure.CustomNode node : nodes) {
        String menuId=node.getMenuId();
        if (menuId == null) {
          return null;
        }
        if (id == null) {
          id=menuId;
        }
 else         if (!id.equals(menuId)) {
          return null;
        }
      }
      return id;
    }
  }
);
}
