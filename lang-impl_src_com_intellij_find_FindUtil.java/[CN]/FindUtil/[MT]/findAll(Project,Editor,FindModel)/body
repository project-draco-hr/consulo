{
  final Document document=editor.getDocument();
  final PsiFile psiFile=PsiDocumentManager.getInstance(project).getPsiFile(document);
  if (psiFile == null)   return;
  CharSequence text=document.getCharsSequence();
  int textLength=document.getTextLength();
  final List<Usage> usages=new ArrayList<Usage>();
  if (text != null) {
    FindManager findManager=FindManager.getInstance(project);
    findModel.setForward(true);
    int offset=0;
    VirtualFile virtualFile=getVirtualFile(editor);
    while (offset < textLength) {
      FindResult result=findManager.findString(text,offset,findModel,virtualFile);
      if (!result.isStringFound())       break;
      usages.add(new UsageInfo2UsageAdapter(new UsageInfo(psiFile,result.getStartOffset(),result.getEndOffset())));
      final int prevOffset=offset;
      offset=result.getEndOffset();
      if (prevOffset == offset) {
        ++offset;
      }
    }
  }
  final UsageTarget[] usageTargets={new FindInProjectUtil.StringUsageTarget(findModel.getStringToFind())};
  final UsageViewPresentation usageViewPresentation=FindInProjectUtil.setupViewPresentation(false,findModel);
  UsageViewManager.getInstance(project).showUsages(usageTargets,usages.toArray(new Usage[usages.size()]),usageViewPresentation);
}
