{
  FindManager findManager=FindManager.getInstance(project);
  FindModel model=(FindModel)findManager.getFindInFileModel().clone();
  String s=editor.getSelectionModel().getSelectedText();
  if (s != null) {
    if (s.indexOf('\n') >= 0) {
      model.setGlobal(false);
    }
 else {
      model.setStringToFind(s);
      model.setGlobal(true);
    }
  }
 else {
    model.setGlobal(true);
  }
  model.setReplaceState(true);
  if (!findManager.showFindDialog(model)) {
    return false;
  }
  if (!model.isGlobal() && editor.getSelectionModel().hasSelection()) {
    int offset=model.isForward() ? editor.getSelectionModel().getSelectionStart() : editor.getSelectionModel().getSelectionEnd();
    ScrollType scrollType=model.isForward() ? ScrollType.CENTER_DOWN : ScrollType.CENTER_UP;
    moveCaretAndDontChangeSelection(editor,offset,scrollType);
  }
  int offset;
  if (model.isGlobal()) {
    if (model.isFromCursor()) {
      offset=editor.getCaretModel().getOffset();
      if (!model.isForward()) {
        offset++;
      }
    }
 else {
      offset=model.isForward() ? 0 : editor.getDocument().getTextLength();
    }
  }
 else {
    if (!editor.getSelectionModel().hasSelection()) {
      findManager.setFindNextModel(null);
      return false;
    }
    offset=model.isForward() ? editor.getSelectionModel().getSelectionStart() : editor.getSelectionModel().getSelectionEnd();
  }
  if (s != null && editor.getSelectionModel().hasSelection() && s.equals(model.getStringToFind())) {
    if (model.isFromCursor() && model.isForward()) {
      offset=Math.min(editor.getSelectionModel().getSelectionStart(),offset);
    }
 else     if (model.isFromCursor() && !model.isForward()) {
      offset=Math.max(editor.getSelectionModel().getSelectionEnd(),offset);
    }
  }
  findManager.setFindNextModel(null);
  findManager.getFindInFileModel().copyFrom(model);
  return replace(project,editor,offset,model);
}
