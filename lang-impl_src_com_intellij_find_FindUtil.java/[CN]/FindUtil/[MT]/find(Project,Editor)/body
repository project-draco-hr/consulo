{
  ApplicationManager.getApplication().assertIsDispatchThread();
  FindManager findManager=FindManager.getInstance(project);
  String s=editor.getSelectionModel().getSelectedText();
  FindModel model=(FindModel)findManager.getFindInFileModel().clone();
  if (s != null) {
    if (s.indexOf('\n') >= 0) {
      model.setGlobal(false);
    }
 else {
      model.setStringToFind(s);
      model.setGlobal(true);
    }
  }
 else {
    model.setGlobal(true);
  }
  model.setReplaceState(false);
  model.setFindAllEnabled(PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument()) != null);
  if (!findManager.showFindDialog(model)) {
    return;
  }
  if (model.isFindAll()) {
    findManager.setFindNextModel(model);
    findAll(project,editor,model);
    return;
  }
  if (!model.isGlobal() && editor.getSelectionModel().hasSelection()) {
    int offset=model.isForward() ? editor.getSelectionModel().getSelectionStart() : editor.getSelectionModel().getSelectionEnd();
    ScrollType scrollType=model.isForward() ? ScrollType.CENTER_DOWN : ScrollType.CENTER_UP;
    moveCaretAndDontChangeSelection(editor,offset,scrollType);
  }
  int offset;
  if (model.isGlobal()) {
    if (model.isFromCursor()) {
      offset=editor.getCaretModel().getOffset();
    }
 else {
      offset=model.isForward() ? 0 : editor.getDocument().getTextLength();
    }
  }
 else {
    if (!editor.getSelectionModel().hasSelection()) {
      findManager.setFindNextModel(null);
      return;
    }
    offset=model.isForward() ? editor.getSelectionModel().getSelectionStart() : editor.getSelectionModel().getSelectionEnd();
  }
  findManager.setFindNextModel(null);
  findManager.getFindInFileModel().copyFrom(model);
  doSearch(project,editor,offset,true,model,true);
}
