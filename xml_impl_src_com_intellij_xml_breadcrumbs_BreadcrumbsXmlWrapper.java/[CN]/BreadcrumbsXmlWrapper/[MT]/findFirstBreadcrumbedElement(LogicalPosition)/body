{
  if (myFile == null || !myFile.isValid())   return null;
  final int offset=myEditor.logicalPositionToOffset(position);
  PriorityQueue<PsiElement> leafs=new PriorityQueue<PsiElement>(3,new Comparator<PsiElement>(){
    public int compare(    final PsiElement o1,    final PsiElement o2){
      return o2.getTextRange().getStartOffset() - o1.getTextRange().getStartOffset();
    }
  }
);
  FileViewProvider viewProvider=findViewProvider();
  if (viewProvider == null)   return null;
  for (  final Language language : viewProvider.getLanguages()) {
    ContainerUtil.addIfNotNull(viewProvider.findElementAt(offset,language),leafs);
  }
  while (!leafs.isEmpty()) {
    final PsiElement element=leafs.remove();
    if (!element.isValid())     continue;
    BreadcrumbsInfoProvider provider=findProviderForElement(element);
    if (provider != null && provider.acceptElement(element)) {
      return element;
    }
    if (!(element instanceof PsiFile)) {
      ContainerUtil.addIfNotNull(element.getParent(),leafs);
    }
  }
  return null;
}
