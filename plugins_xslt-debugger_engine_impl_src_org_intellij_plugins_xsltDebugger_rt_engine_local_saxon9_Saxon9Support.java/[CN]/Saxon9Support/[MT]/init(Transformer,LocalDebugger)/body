{
  if (transformer instanceof Controller) {
    System.out.println("SAXON 9");
    final Controller controller=(Controller)transformer;
    ((Saxon9TraceListener)controller.getConfiguration().getTraceListener()).setDebugger(dbg);
    controller.getConfiguration().setLineNumbering(true);
    controller.getConfiguration().setCompileWithTracing(true);
    controller.getConfiguration().setMultiThreading(false);
    controller.getConfiguration().setSerializerFactory(new SerializerFactory(controller.getConfiguration()){
      @Override protected Receiver createXMLSerializer(      Emitter emitter,      Properties props,      PipelineConfiguration pipe,      CharacterMapExpander characterMapExpander,      ProxyReceiver normalizer) throws XPathException {
        return super.createXMLSerializer(emitter,props,pipe,characterMapExpander,normalizer);
      }
      @Override protected Emitter newXMLEmitter(){
        return new TracingOutputter(dbg.getEventQueue(),super.newXMLEmitter());
      }
    }
);
    controller.getConfiguration().setDebugger(new Debugger(){
      public SlotManager makeSlotManager(){
        return new SlotManager(){
          @Override public int allocateSlotNumber(          StructuredQName qName){
            System.out.println("qName = " + qName);
            return super.allocateSlotNumber(qName);
          }
        }
;
      }
    }
);
    return true;
  }
  return false;
}
