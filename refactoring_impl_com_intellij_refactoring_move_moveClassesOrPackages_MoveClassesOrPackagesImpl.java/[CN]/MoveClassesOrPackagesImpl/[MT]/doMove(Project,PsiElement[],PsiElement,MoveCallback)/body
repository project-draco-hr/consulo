{
  final PsiElement[] psiElements=adjustForMove(project,elements,initialTargetElement);
  if (psiElements == null) {
    return;
  }
  if (!CommonRefactoringUtil.checkReadOnlyStatusRecursively(project,Arrays.asList(psiElements),true)) {
    return;
  }
  final String initialTargetPackageName=getInitialTargetPackageName(initialTargetElement,psiElements);
  final PsiDirectory initialTargetDirectory=getInitialTargetDirectory(initialTargetElement,psiElements);
  final boolean isTargetDirectoryFixed=getContainerDirectory(initialTargetElement) != null;
  boolean searchTextOccurences=false;
  for (int i=0; i < psiElements.length && !searchTextOccurences; i++) {
    PsiElement psiElement=psiElements[i];
    searchTextOccurences=TextOccurrencesUtil.isSearchTextOccurencesEnabled(psiElement);
  }
  final MoveClassesOrPackagesDialog moveDialog=new MoveClassesOrPackagesDialog(project,searchTextOccurences,psiElements,initialTargetElement,moveCallback);
  boolean searchInComments=JavaRefactoringSettings.getInstance().MOVE_SEARCH_IN_COMMENTS;
  boolean searchForTextOccurences=JavaRefactoringSettings.getInstance().MOVE_SEARCH_FOR_TEXT;
  moveDialog.setData(psiElements,initialTargetPackageName,initialTargetDirectory,isTargetDirectoryFixed,searchInComments,searchForTextOccurences,HelpID.getMoveHelpID(psiElements[0]));
  moveDialog.show();
}
