{
  final List<OutputItem> items=new ArrayList<OutputItem>();
  final List<File> filesToRefresh=new ArrayList<File>();
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      for (      final VirtualFile file : files) {
        final Module module=context.getModuleByFile(file);
        try {
          final VirtualFile outputDir=context.getModuleOutputDirectory(module);
          if (outputDir != null) {
            final File compiledFile=doCompile(outputDir,file);
            filesToRefresh.add(compiledFile);
            String outputDirPath=outputDir.getPath();
            items.add(new OutputItemImpl(myTrie,outputDirPath,new String(FileUtil.toSystemIndependentName(compiledFile.getPath()).substring(outputDirPath.length() + 1)),file));
          }
        }
 catch (        IOException e) {
          context.addMessage(CompilerMessageCategory.ERROR,e.getMessage(),null,0,0);
        }
      }
    }
  }
);
  CompilerUtil.refreshIOFiles(filesToRefresh);
  return new ExitStatus(){
    public OutputItem[] getSuccessfullyCompiled(){
      return items.toArray(new OutputItem[items.size()]);
    }
    public VirtualFile[] getFilesToRecompile(){
      return VirtualFile.EMPTY_ARRAY;
    }
  }
;
}
