{
  registrar.registerReferenceProvider(literalExpression(),new PropertiesReferenceProvider(true));
  registrar.registerReferenceProvider(literalExpression().withParent(psiNameValuePair().withName(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER)),new ResourceBundleReferenceProvider());
  registrar.registerReferenceProvider(PsiJavaPatterns.psiElement(PropertyValueImpl.class),new PsiReferenceProvider(){
    @NotNull @Override public PsiReference[] getReferencesByElement(    @NotNull PsiElement element,    @NotNull ProcessingContext context){
      String text=element.getText();
      String[] words=text.split("\\s");
      if (words.length != 1)       return PsiReference.EMPTY_ARRAY;
      return CLASS_REFERENCE_PROVIDER.getReferencesByString(words[0],element,0);
    }
  }
);
}
