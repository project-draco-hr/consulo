{
  myRequestFocus=false;
  final JavaDocInfoComponent component=new JavaDocInfoComponent(this);
  final LightweightHint hint=new LightweightHint(component){
    public void hide(){
      super.hide();
      if (myPreviouslyFocused != null && myPreviouslyFocused.getParent() instanceof ChooseByNameBase.JPanelProvider) {
        ((ChooseByNameBase.JPanelProvider)myPreviouslyFocused.getParent()).unregisterHint();
      }
      myEditor=null;
      myPreviouslyFocused=null;
    }
  }
;
  LightweightHint oldHint=getDocInfoHint();
  if (oldHint != null) {
    JavaDocInfoComponent oldComponent=(JavaDocInfoComponent)oldHint.getComponent();
    PsiElement element1=oldComponent.getElement();
    if (element != null && element.equals(element1)) {
      return oldHint;
    }
    oldHint.hide();
  }
  component.setHint(hint);
  fetchDocInfo(getDefaultProvider(element),component);
  myDocInfoHintRef=new WeakReference<LightweightHint>(hint);
  Window window=WindowManager.getInstance().suggestParentWindow(myProject);
  JLayeredPane layeredPane;
  if (window instanceof JFrame) {
    layeredPane=((JFrame)window).getLayeredPane();
  }
 else   if (window instanceof JDialog) {
    layeredPane=((JDialog)window).getLayeredPane();
  }
 else {
    throw new IllegalStateException("cannot find parent window: project=" + myProject + "; window="+ window);
  }
  myPreviouslyFocused=WindowManagerEx.getInstanceEx().getFocusedComponent(myProject);
  if (myPreviouslyFocused == null || !(myPreviouslyFocused.getParent() instanceof ChooseByNameBase.JPanelProvider)) {
    myRequestFocus=true;
  }
  hookFocus(hint);
  Point p=chooseBestHintPosition(hint);
  Dimension preferredTextFieldPanelSize=component.getPreferredSize();
  component.setBounds(p.x,p.y,preferredTextFieldPanelSize.width,preferredTextFieldPanelSize.height);
  final JLayeredPane _layeredPane=layeredPane;
  _layeredPane.add(component,new Integer(500));
  component.registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      _layeredPane.remove(component);
      _layeredPane.repaint(component.getBounds());
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  return hint;
}
