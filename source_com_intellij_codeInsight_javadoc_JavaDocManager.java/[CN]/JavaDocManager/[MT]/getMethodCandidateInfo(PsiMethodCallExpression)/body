{
  final PsiResolveHelper rh=expr.getManager().getResolveHelper();
  final CandidateInfo[] candidates=rh.getReferencedMethodCandidates(expr,true);
  final String text=expr.getText();
  if (candidates.length > 0) {
    final StringBuffer sb=new StringBuffer();
    for (int i=0; i < candidates.length; i++) {
      final CandidateInfo candidate=candidates[i];
      final PsiElement element=candidate.getElement();
      if (!(element instanceof PsiMethod)) {
        continue;
      }
      sb.append("&nbsp;&nbsp;<a href=\"psi_element://" + JavaDocUtil.getReferenceText(myProject,element) + "\">");
      sb.append(PsiFormatUtil.formatMethod(((PsiMethod)element),candidate.getSubstitutor(),PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE | PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE));
      sb.append("</a><br>");
    }
    return "<html>Candidates for method call <b>" + text + "</b> are:<br><br>"+ sb+ "</html>";
  }
  return "<html>No candidates found for method call <b>" + text + "</b>.</html>";
}
