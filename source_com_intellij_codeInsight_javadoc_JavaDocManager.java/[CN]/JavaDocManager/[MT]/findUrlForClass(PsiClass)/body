{
  String qName=aClass.getQualifiedName();
  if (qName == null)   return null;
  PsiFile file=aClass.getContainingFile();
  if (!(file instanceof PsiJavaFile))   return null;
  String packageName=((PsiJavaFile)file).getPackageName();
  String relPath;
  if (packageName.length() > 0) {
    relPath=packageName.replace('.','/') + '/' + qName.substring(packageName.length() + 1)+ ".html";
  }
 else {
    relPath=qName + ".html";
  }
  final PsiFile containingFile=aClass.getContainingFile();
  if (containingFile == null)   return null;
  final VirtualFile virtualFile=containingFile.getVirtualFile();
  if (virtualFile == null)   return null;
  final ProjectFileIndex fileIndex=ProjectRootManager.getInstance(myProject).getFileIndex();
  Module module=fileIndex.getModuleForFile(virtualFile);
  if (module != null) {
    VirtualFile[] javadocPaths=ModuleRootManager.getInstance(module).getJavadocPaths();
    String httpRoot=getHttpRoot(javadocPaths,relPath);
    if (httpRoot != null)     return httpRoot;
  }
  final OrderEntry[] orderEntries=fileIndex.getOrderEntriesForFile(virtualFile);
  for (  OrderEntry orderEntry : orderEntries) {
    final VirtualFile[] files=orderEntry.getFiles(OrderRootType.JAVADOC);
    final String httpRoot=getHttpRoot(files,relPath);
    if (httpRoot != null)     return httpRoot;
  }
  return null;
}
