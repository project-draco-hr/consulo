{
  final Map<VirtualFile,Set<String>> file2Types=new HashMap<VirtualFile,Set<String>>();
  final FileBasedIndex index=FileBasedIndex.getInstance();
  final GlobalSearchScope scope=GlobalSearchScope.projectScope(myModule.getProject());
  for (  ResourceType resourceType : AndroidResourceUtil.ALL_VALUE_RESOURCE_TYPES) {
    final ResourceEntry typeMarkerEntry=AndroidValueResourcesIndex.createTypeMarkerKey(resourceType.getName());
    index.processValues(AndroidValueResourcesIndex.INDEX_ID,typeMarkerEntry,null,new FileBasedIndex.ValueProcessor<Set<AndroidValueResourcesIndex.MyResourceInfo>>(){
      @Override public boolean process(      VirtualFile file,      Set<AndroidValueResourcesIndex.MyResourceInfo> infos){
        for (        AndroidValueResourcesIndex.MyResourceInfo info : infos) {
          Set<String> resourcesInFile=file2Types.get(file);
          if (resourcesInFile == null) {
            resourcesInFile=new HashSet<String>();
            file2Types.put(file,resourcesInFile);
          }
          resourcesInFile.add(info.getResourceEntry().getType());
        }
        return true;
      }
    }
,scope);
  }
  final Set<String> result=new HashSet<String>();
  for (  VirtualFile file : getAllValueResourceFiles()) {
    final Set<String> types=file2Types.get(file);
    if (types != null) {
      result.addAll(types);
    }
  }
  return result;
}
