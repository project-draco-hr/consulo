{
  final Map<VirtualFile,Set<String>> file2Types=new HashMap<VirtualFile,Set<String>>();
  final FileBasedIndex index=FileBasedIndex.getInstance();
  final GlobalSearchScope scope=GlobalSearchScope.projectScope(myModule.getProject());
  for (  ResourceType resourceType : AndroidResourceUtil.VALUE_RESOURCE_TYPES) {
    final ResourceEntry typeMarkerEntry=AndroidValueResourcesIndex.createTypeMarkerEntry(resourceType.getName());
    for (    Set<ResourceEntry> entrySet : index.getValues(AndroidValueResourcesIndex.INDEX_ID,typeMarkerEntry,scope)) {
      for (      ResourceEntry entry : entrySet) {
        final Collection<VirtualFile> files=index.getContainingFiles(AndroidValueResourcesIndex.INDEX_ID,entry,scope);
        for (        VirtualFile file : files) {
          Set<String> resourcesInFile=file2Types.get(file);
          if (resourcesInFile == null) {
            resourcesInFile=new HashSet<String>();
            file2Types.put(file,resourcesInFile);
          }
          resourcesInFile.add(entry.getType());
        }
      }
    }
  }
  final Set<String> result=new HashSet<String>();
  for (  VirtualFile file : getAllValueResourceFiles()) {
    final Set<String> types=file2Types.get(file);
    if (types != null) {
      result.addAll(types);
    }
  }
  return result;
}
