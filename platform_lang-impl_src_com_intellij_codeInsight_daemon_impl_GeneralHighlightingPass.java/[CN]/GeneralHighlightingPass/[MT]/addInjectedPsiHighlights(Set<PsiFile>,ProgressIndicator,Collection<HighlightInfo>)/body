{
  if (injectedFiles.isEmpty())   return true;
  final InjectedLanguageManager injectedLanguageManager=InjectedLanguageManager.getInstance(myProject);
  final TextAttributes injectedAttributes=myGlobalScheme.getAttributes(EditorColors.INJECTED_LANGUAGE_FRAGMENT);
  return JobUtil.invokeConcurrentlyUnderProgress(new ArrayList<PsiFile>(injectedFiles),new Processor<PsiFile>(){
    public boolean process(    final PsiFile injectedPsi){
      DocumentWindow documentWindow=(DocumentWindow)PsiDocumentManager.getInstance(myProject).getCachedDocument(injectedPsi);
      Place places=InjectedLanguageUtil.getShreds(injectedPsi);
      for (      PsiLanguageInjectionHost.Shred place : places) {
        TextRange textRange=place.getRangeInsideHost().shiftRight(place.host.getTextRange().getStartOffset());
        if (textRange.isEmpty())         continue;
        String desc=injectedPsi.getLanguage().getDisplayName() + ": " + injectedPsi.getText();
        HighlightInfo info=HighlightInfo.createHighlightInfo(HighlightInfoType.INJECTED_LANGUAGE_FRAGMENT,textRange,null,desc,injectedAttributes);
        outInfos.add(info);
      }
      HighlightInfoHolder holder=createInfoHolder(injectedPsi);
      runHighlightVisitosForInjected(injectedPsi,holder,progress);
      for (int i=0; i < holder.size(); i++) {
        HighlightInfo info=holder.get(i);
        final int startOffset=documentWindow.injectedToHost(info.startOffset);
        final TextRange fixedTextRange=getFixedTextRange(documentWindow,startOffset);
        addPatchedInfos(info,injectedPsi,documentWindow,injectedLanguageManager,fixedTextRange,outInfos);
      }
      holder.clear();
      highlightInjectedSyntax(injectedPsi,holder);
      for (int i=0; i < holder.size(); i++) {
        HighlightInfo info=holder.get(i);
        final int startOffset=info.startOffset;
        final TextRange fixedTextRange=getFixedTextRange(documentWindow,startOffset);
        if (fixedTextRange == null) {
          outInfos.add(info);
        }
 else {
          HighlightInfo patched=new HighlightInfo(info.forcedTextAttributes,info.forcedTextAttributesKey,info.type,fixedTextRange.getStartOffset(),fixedTextRange.getEndOffset(),info.description,info.toolTip,info.type.getSeverity(null),info.isAfterEndOfLine,null,false);
          outInfos.add(patched);
        }
      }
      if (!isDumbMode()) {
        List<HighlightInfo> todos=new ArrayList<HighlightInfo>();
        highlightTodos(injectedPsi,injectedPsi.getText(),0,injectedPsi.getTextLength(),progress,myPriorityRange,todos,todos);
        for (        HighlightInfo info : todos) {
          addPatchedInfos(info,injectedPsi,documentWindow,injectedLanguageManager,null,outInfos);
        }
      }
      return true;
    }
  }
,true,progress);
}
