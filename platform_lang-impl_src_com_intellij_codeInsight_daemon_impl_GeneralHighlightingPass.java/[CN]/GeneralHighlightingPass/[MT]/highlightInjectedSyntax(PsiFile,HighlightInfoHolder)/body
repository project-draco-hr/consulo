{
  List<Trinity<IElementType,PsiLanguageInjectionHost,TextRange>> tokens=InjectedLanguageUtil.getHighlightTokens(injectedPsi);
  if (tokens == null)   return;
  final Language injectedLanguage=injectedPsi.getLanguage();
  Project project=injectedPsi.getProject();
  SyntaxHighlighter syntaxHighlighter=SyntaxHighlighterFactory.getSyntaxHighlighter(injectedLanguage,project,injectedPsi.getVirtualFile());
  final TextAttributes defaultAttrs=myGlobalScheme.getAttributes(HighlighterColors.TEXT);
  for (  Trinity<IElementType,PsiLanguageInjectionHost,TextRange> token : tokens) {
    ProgressManager.checkCanceled();
    IElementType tokenType=token.getFirst();
    PsiLanguageInjectionHost injectionHost=token.getSecond();
    TextRange textRange=token.getThird();
    TextAttributesKey[] keys=syntaxHighlighter.getTokenHighlights(tokenType);
    if (textRange.getLength() == 0)     continue;
    TextRange annRange=textRange.shiftRight(injectionHost.getTextRange().getStartOffset());
    TextAttributes attributes=null;
    for (    TextAttributesKey key : keys) {
      TextAttributes attrs2=myGlobalScheme.getAttributes(key);
      if (attrs2 != null) {
        attributes=attributes == null ? attrs2 : TextAttributes.merge(attributes,attrs2);
      }
    }
    TextAttributes forcedAttributes;
    if (attributes == null || attributes.isEmpty() || attributes.equals(defaultAttrs)) {
      forcedAttributes=TextAttributes.ERASE_MARKER;
    }
 else {
      HighlightInfo info=HighlightInfo.createHighlightInfo(HighlightInfoType.INJECTED_LANGUAGE_FRAGMENT,annRange,null,null,TextAttributes.ERASE_MARKER);
      holder.add(info);
      Color back=attributes.getBackgroundColor() == null ? myGlobalScheme.getDefaultBackground() : attributes.getBackgroundColor();
      Color fore=attributes.getForegroundColor() == null ? myGlobalScheme.getDefaultForeground() : attributes.getForegroundColor();
      forcedAttributes=new TextAttributes(fore,back,attributes.getEffectColor(),attributes.getEffectType(),attributes.getFontType());
    }
    HighlightInfo info=HighlightInfo.createHighlightInfo(HighlightInfoType.INJECTED_LANGUAGE_FRAGMENT,annRange,null,null,forcedAttributes);
    holder.add(info);
  }
}
