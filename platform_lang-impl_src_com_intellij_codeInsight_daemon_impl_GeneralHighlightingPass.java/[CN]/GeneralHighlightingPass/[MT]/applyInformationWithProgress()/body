{
  myFile.putUserData(HAS_ERROR_ELEMENT,myHasErrorElement);
  TextRange range=new TextRange(myStartOffset,myEndOffset);
  Collection<HighlightInfo> collection=myInjectedPsiHighlights.get(range);
  if (collection == null) {
    collection=new ArrayList<HighlightInfo>(myHighlights.size());
  }
  collection.addAll(myHighlights);
  myInjectedPsiHighlights.put(range,collection);
  myHighlights=Collections.emptyList();
  List<GeneralHighlightingPass> updateAllFinished=myProgress.getUserData(UPDATE_ALL_FINISHED);
  if (updateAllFinished == null || !updateAllFinished.contains(this)) {
    UpdateHighlightersUtil.setHighlightersToEditor(myProject,myDocument,myInjectedPsiHighlights,Pass.UPDATE_ALL);
    if (myUpdateAll) {
      if (updateAllFinished == null) {
        updateAllFinished=new ArrayList<GeneralHighlightingPass>();
        myProgress.putUserData(UPDATE_ALL_FINISHED,updateAllFinished);
      }
      updateAllFinished.add(this);
    }
  }
  if (myUpdateAll) {
    reportErrorsToWolf();
  }
}
