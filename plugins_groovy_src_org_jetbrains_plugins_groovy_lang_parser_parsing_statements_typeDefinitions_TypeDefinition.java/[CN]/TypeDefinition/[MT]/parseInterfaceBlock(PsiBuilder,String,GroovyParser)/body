{
  PsiBuilder.Marker ibMarker=builder.mark();
  if (!ParserUtils.getToken(builder,mLCURLY)) {
    ibMarker.rollbackTo();
    return false;
  }
  Separators.parse(builder);
  while (!builder.eof() && builder.getTokenType() != mRCURLY) {
    if (!InterfaceMember.parse(builder,interfaceName,parser))     builder.advanceLexer();
    if (builder.getTokenType() == mRCURLY)     break;
    if (!Separators.parse(builder)) {
      builder.error(GroovyBundle.message("separator.or.rcurly.expected"));
    }
  }
  ParserUtils.getToken(builder,mRCURLY,GroovyBundle.message("rcurly.expected"));
  ibMarker.done(CLASS_BODY);
  return true;
}
