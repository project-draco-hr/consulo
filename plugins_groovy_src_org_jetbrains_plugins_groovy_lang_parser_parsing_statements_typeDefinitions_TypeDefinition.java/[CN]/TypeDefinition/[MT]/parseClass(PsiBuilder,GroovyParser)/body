{
  if (!ParserUtils.getToken(builder,kCLASS)) {
    return false;
  }
  if (builder.getTokenType() != mIDENT) {
    builder.error(GroovyBundle.message("identifier.expected"));
    return false;
  }
  String name=builder.getTokenText();
  builder.advanceLexer();
  ParserUtils.getToken(builder,mNLS);
  TypeParameters.parse(builder);
  ParserUtils.getToken(builder,mNLS);
  if (builder.getTokenType() == kEXTENDS) {
    ReferenceElement.parseReferenceList(builder,kEXTENDS,EXTENDS_CLAUSE);
    ParserUtils.getToken(builder,mNLS);
  }
  if (builder.getTokenType() == kIMPLEMENTS) {
    ReferenceElement.parseReferenceList(builder,kIMPLEMENTS,IMPLEMENTS_CLAUSE);
  }
  ParserUtils.getToken(builder,mNLS);
  if (builder.getTokenType() != mLCURLY) {
    builder.error(GroovyBundle.message("lcurly.expected"));
    return true;
  }
  parseClassBody(builder,name,parser);
  return true;
}
