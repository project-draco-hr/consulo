{
  if (!ParserUtils.getToken(builder,kCLASS)) {
    return false;
  }
  String name;
  if (!mIDENT.equals(builder.getTokenType())) {
    builder.error(GroovyBundle.message("identifier.expected"));
    return false;
  }
 else {
    name=builder.getTokenText();
    builder.advanceLexer();
  }
  ParserUtils.getToken(builder,mNLS);
  TypeParameters.parse(builder);
  if (kEXTENDS.equals(builder.getTokenType())) {
    ExtendsClause.parse(builder);
    ParserUtils.getToken(builder,mNLS);
  }
  if (kIMPLEMENTS.equals(builder.getTokenType())) {
    ImplementsClause.parse(builder);
  }
  ParserUtils.getToken(builder,mNLS);
  if (mLCURLY.equals(builder.getTokenType())) {
    parseClassBody(builder,name,parser);
  }
 else {
    builder.error(GroovyBundle.message("lcurly.expected"));
    return true;
  }
  return true;
}
