{
  boolean marked=false;
  final FilesDelta delta=getDelta(rd.getTarget());
  final Set<File> files=delta.clearRecompile(rd);
  if (files != null) {
    CompileScope scope=context.getScope();
    final long compilationStartStamp=context.getCompilationStartStamp();
    for (    File file : files) {
      if (scope.isAffected(rd.getTarget(),file)) {
        final long currentFileStamp=FileSystemUtil.lastModified(file);
        if (!rd.isGenerated() && (currentFileStamp > compilationStartStamp || getEventRegistrationStamp(file) > compilationStartStamp)) {
          if (Utils.IS_TEST_MODE) {
            LOG.info("Timestamp after compilation started; marking dirty again: " + file.getPath());
          }
          delta.markRecompile(rd,file);
        }
 else {
          marked=true;
          stamps.saveStamp(file,rd.getTarget(),currentFileStamp);
        }
      }
 else {
        if (Utils.IS_TEST_MODE) {
          LOG.info("Not affected by compile scope; marking dirty again: " + file.getPath());
        }
        delta.markRecompile(rd,file);
      }
    }
  }
  return marked;
}
