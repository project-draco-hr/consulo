{
  PsiBuilder.Marker internalTypeMarker=builder.mark();
  PsiBuilder.Marker secondInternalTypeMarker;
  char firstChar;
  if (builder.getTokenText() != null)   firstChar=builder.getTokenText().charAt(0);
 else   return WRONGWAY;
  if (checkUpperCase && !Character.isUpperCase(firstChar)) {
    internalTypeMarker.rollbackTo();
    return WRONGWAY;
  }
  if (!ParserUtils.getToken(builder,mIDENT)) {
    internalTypeMarker.rollbackTo();
    return WRONGWAY;
  }
  if (parseTypeArgs)   TypeArguments.parse(builder);
  secondInternalTypeMarker=internalTypeMarker.precede();
  internalTypeMarker.done(REFERENCE_ELEMENT);
  internalTypeMarker=secondInternalTypeMarker;
  while (ParserUtils.getToken(builder,mDOT)) {
    if (!ParserUtils.getToken(builder,mIDENT)) {
      internalTypeMarker.rollbackTo();
      return WRONGWAY;
    }
    if (parseTypeArgs)     TypeArguments.parse(builder);
    secondInternalTypeMarker.done(REFERENCE_ELEMENT);
    secondInternalTypeMarker=internalTypeMarker.precede();
  }
  secondInternalTypeMarker.drop();
  return REFERENCE_ELEMENT;
}
