{
  IElementType elem=node.getElementType();
  if (elem.equals(IDENTIFIER))   return new GrIdentifierImpl(node);
  if (elem.equals(IMPORT_STATEMENT))   return new GrImportStatementImpl(node);
  if (elem.equals(IMPORT_SELECTOR))   return new GrImportSelectorImpl(node);
  if (elem.equals(IMPORT_END))   return new GrImportEndImpl(node);
  if (elem.equals(IDENITFIER_STAR))   return new GrImportQualIdImpl(node);
  if (elem.equals(PACKAGE_DEFINITION))   return new GrPackageDefinitionImpl(node);
  if (elem.equals(ASSIGNMENT_EXPRESSION))   return new GrAssignmentExpressionImpl(node);
  if (elem.equals(ADDITIVE_EXXPRESSION))   return new GrAdditiveExpressionImpl(node);
  if (elem.equals(LOGICAL_OR_EXPRESSION))   return new GrLogicalOrExprImpl(node);
  if (elem.equals(LOGICAL_AND_EXPRESSION))   return new GrLogicalAndExprImpl(node);
  if (elem.equals(EXCLUSIVE_OR_EXPRESSION))   return new GrExclusiveOrExprImpl(node);
  if (elem.equals(INCLUSIVE_OR_EXPRESSION))   return new GrInclusiveOrExprImpl(node);
  if (elem.equals(AND_EXPRESSION))   return new GrAndExprImpl(node);
  if (elem.equals(REGEX_EXPRESSION))   return new GrRegexExprImpl(node);
  if (elem.equals(EQUALITY_EXPRESSION))   return new GrEqualityExprImpl(node);
  return new ASTWrapperPsiElement(node);
}
