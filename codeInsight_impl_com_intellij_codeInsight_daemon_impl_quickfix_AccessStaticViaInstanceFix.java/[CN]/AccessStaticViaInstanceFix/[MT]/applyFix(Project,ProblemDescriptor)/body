{
  if (!myExpression.isValid() || !myMember.isValid())   return;
  if (!CodeInsightUtil.prepareFileForWrite(myExpression.getContainingFile()))   return;
  PsiClass containingClass=myMember.getContainingClass();
  if (containingClass == null)   return;
  try {
    PsiExpression qualifierExpression=myExpression.getQualifierExpression();
    PsiElementFactory factory=JavaPsiFacade.getInstance(project).getElementFactory();
    if (qualifierExpression instanceof PsiThisExpression && ((PsiThisExpression)qualifierExpression).getQualifier() == null) {
      qualifierExpression.delete();
      if (myExpression.resolve() != myMember) {
        PsiReferenceExpression expr=(PsiReferenceExpression)factory.createExpressionFromText("A.foo",myExpression);
        final PsiExpression qualifierReplacement=expr.getQualifierExpression();
        LOG.assertTrue(qualifierReplacement != null);
        qualifierReplacement.replace(factory.createReferenceExpression(containingClass));
        final PsiElement referenceReplacement=expr.getReferenceNameElement();
        LOG.assertTrue(referenceReplacement != null);
        referenceReplacement.replace(myExpression);
        myExpression.replace(expr);
      }
    }
 else     if (qualifierExpression != null) {
      qualifierExpression.replace(factory.createReferenceExpression(containingClass));
    }
    UndoUtil.markPsiFileForUndo(myMember.getContainingFile());
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
