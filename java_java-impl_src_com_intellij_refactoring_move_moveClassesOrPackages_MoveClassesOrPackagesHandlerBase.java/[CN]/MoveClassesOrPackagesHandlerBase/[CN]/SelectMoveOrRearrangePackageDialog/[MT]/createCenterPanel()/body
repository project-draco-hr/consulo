{
  JPanel panel=new JPanel(new BorderLayout());
  final HashSet<String> packages=new HashSet<String>();
  for (  PsiDirectory directory : myDirectories) {
    packages.add(JavaDirectoryService.getInstance().getPackage(directory).getQualifiedName());
  }
  final String moveDescription;
  LOG.assertTrue(myDirectories.length > 0);
  LOG.assertTrue(packages.size() > 0);
  if (packages.size() > 1) {
    moveDescription=RefactoringBundle.message("move.packages.to.another.package",packages.size());
  }
 else {
    final String qName=packages.iterator().next();
    moveDescription=RefactoringBundle.message("move.package.to.another.package",qName);
  }
  myRbMovePackage=new JRadioButton();
  myRbMovePackage.setText(moveDescription);
  myRbMovePackage.setSelected(true);
  final String rearrangeDescription;
  if (myDirectories.length > 1) {
    rearrangeDescription=RefactoringBundle.message("move.directories.to.another.source.root",myDirectories.length);
  }
 else {
    rearrangeDescription=RefactoringBundle.message("move.directory.to.another.source.root",myDirectories[0].getVirtualFile().getPresentableUrl());
  }
  myRbRearrangePackage=new JRadioButton();
  myRbRearrangePackage.setText(rearrangeDescription);
  myRbRearrangePackage.setVisible(myRearrangePackagesEnabled);
  final String moveDirectoryDescription;
  if (myDirectories.length > 1) {
    moveDirectoryDescription="Move everything from " + myDirectories.length + " directories to another directory";
  }
 else {
    moveDirectoryDescription="Move everything from " + myDirectories[0].getVirtualFile().getPresentableUrl() + " to another directory";
  }
  myRbMoveDirectory=new JRadioButton();
  myRbMoveDirectory.setMnemonic('e');
  myRbMoveDirectory.setText(moveDirectoryDescription);
  ButtonGroup gr=new ButtonGroup();
  gr.add(myRbMovePackage);
  gr.add(myRbRearrangePackage);
  gr.add(myRbMoveDirectory);
  if (myRearrangePackagesEnabled) {
    new RadioUpDownListener(myRbMovePackage,myRbRearrangePackage,myRbMoveDirectory);
  }
 else {
    new RadioUpDownListener(myRbMovePackage,myRbMoveDirectory);
  }
  Box box=Box.createVerticalBox();
  box.add(Box.createVerticalStrut(5));
  box.add(myRbMovePackage);
  box.add(myRbRearrangePackage);
  box.add(myRbMoveDirectory);
  panel.add(box,BorderLayout.CENTER);
  return panel;
}
