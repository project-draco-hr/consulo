{
  final XDebuggerTree tree=valueNode.getTree();
  final Project project=tree.getProject();
  XValueModifier modifier=valueNode.getValueContainer().getModifier();
  if (modifier == null)   return;
  final XDebuggerTreeState treeState=XDebuggerTreeState.saveState(tree);
  valueNode.setValueModificationStarted();
  modifier.setValue(text,new XValueModifier.XModificationCallback(){
    @Override public void valueModified(){
      if (isDetachedTree(tree)) {
        AppUIUtil.invokeOnEdt(new Runnable(){
          @Override public void run(){
            tree.rebuildAndRestore(treeState);
          }
        }
);
      }
      XDebuggerUtilImpl.rebuildAllSessionsViews(project);
    }
    @Override public void errorOccurred(    @NotNull final String errorMessage){
      AppUIUtil.invokeOnEdt(new Runnable(){
        @Override public void run(){
          tree.rebuildAndRestore(treeState);
          errorConsumer.consume(errorMessage);
        }
      }
);
      XDebuggerUtilImpl.rebuildAllSessionsViews(project);
    }
    boolean isDetachedTree(    XDebuggerTree tree){
      return XDebugSessionTab.TAB_KEY.getData(DataManager.getInstance().getDataContext(tree)) == null;
    }
  }
);
}
