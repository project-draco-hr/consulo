{
  DefaultMutableTreeNode defaultMutableTreeNode=(DefaultMutableTreeNode)root;
  final Object userObject=defaultMutableTreeNode.getUserObject();
  String nodeText;
  if (userObject != null) {
    nodeText=toString(userObject,null);
  }
 else {
    nodeText=String.valueOf(defaultMutableTreeNode);
  }
  if (nodePrintCondition != null && !nodePrintCondition.value(nodeText))   return;
  boolean expanded=tree.isExpanded(new TreePath(defaultMutableTreeNode.getPath()));
  StringUtil.repeatSymbol(buffer,' ',level);
  if (expanded && !defaultMutableTreeNode.isLeaf()) {
    buffer.append("-");
  }
  if (!expanded && !defaultMutableTreeNode.isLeaf()) {
    buffer.append("+");
  }
  final boolean selected=tree.getSelectionModel().isPathSelected(new TreePath(defaultMutableTreeNode.getPath()));
  if (withSelection && selected) {
    buffer.append("[");
  }
  buffer.append(nodeText);
  if (withSelection && selected) {
    buffer.append("]");
  }
  buffer.append("\n");
  int childCount=tree.getModel().getChildCount(root);
  if (expanded) {
    for (int i=0; i < childCount; i++) {
      printImpl(tree,tree.getModel().getChild(root,i),buffer,level + 1,withSelection,nodePrintCondition);
    }
  }
}
