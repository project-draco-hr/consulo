{
  JarFile jarFile1=null;
  JarFile jarFile2=null;
  final File tempDirectory1;
  final File tempDirectory2;
  try {
    jarFile2=new JarFile(file2);
    jarFile1=new JarFile(file1);
    tempDirectory1=PlatformTestCase.createTempDir("tmp1");
    tempDirectory2=PlatformTestCase.createTempDir("tmp2");
    ZipUtil.extract(jarFile1,tempDirectory1,CVS_FILE_FILTER);
    ZipUtil.extract(jarFile2,tempDirectory2,CVS_FILE_FILTER);
  }
  finally {
    if (jarFile1 != null) {
      jarFile1.close();
    }
    if (jarFile2 != null) {
      jarFile2.close();
    }
  }
  final VirtualFile dirAfter=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempDirectory1);
  final VirtualFile dirBefore=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempDirectory2);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      dirAfter.refresh(false,true);
      dirBefore.refresh(false,true);
    }
  }
);
  assertDirectoriesEqual(dirAfter,dirBefore,CVS_FILE_FILTER);
}
