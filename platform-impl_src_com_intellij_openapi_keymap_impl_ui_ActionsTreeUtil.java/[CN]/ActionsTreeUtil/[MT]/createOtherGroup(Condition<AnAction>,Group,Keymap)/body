{
  addedActions.initIds();
  ArrayList<String> result=new ArrayList<String>();
  if (keymap != null) {
    String[] actionIds=keymap.getActionIds();
    for (    String id : actionIds) {
      if (id.startsWith(EDITOR_PREFIX)) {
        AnAction action=ActionManager.getInstance().getActionOrStub("$" + id.substring(6));
        if (action != null)         continue;
      }
      if (!id.startsWith(QuickList.QUICK_LIST_PREFIX) && !addedActions.containsId(id)) {
        result.add(id);
      }
    }
  }
  final ActionManagerEx actionManager=ActionManagerEx.getInstanceEx();
  final KeymapManagerEx keymapManager=KeymapManagerEx.getInstanceEx();
  String[] registeredActionIds=actionManager.getActionIds("");
  for (  String id : registeredActionIds) {
    if (actionManager.getActionOrStub(id) instanceof ActionGroup) {
      continue;
    }
    if (id.startsWith(QuickList.QUICK_LIST_PREFIX) || addedActions.containsId(id) || result.contains(id)) {
      continue;
    }
    if (keymapManager.getBoundActions().contains(id))     continue;
    result.add(id);
  }
  filterOtherActionsGroup(result);
  ContainerUtil.quickSort(result,new Comparator<String>(){
    public int compare(    String id1,    String id2){
      return getTextToCompare(id1).compareToIgnoreCase(getTextToCompare(id2));
    }
    private String getTextToCompare(    String id){
      AnAction action=actionManager.getActionOrStub(id);
      if (action == null) {
        return id;
      }
      String text=action.getTemplatePresentation().getText();
      return text != null ? text : id;
    }
  }
);
  Group group=new Group(KeyMapBundle.message("other.group.title"),OTHER_ICON,OTHER_ICON);
  for (  String id : result) {
    if (filtered == null || filtered.value(actionManager.getActionOrStub(id)))     group.addActionId(id);
  }
  return group;
}
