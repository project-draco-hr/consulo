{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  final List<FilePath> files=e.getData(ChangesListView.MISSING_FILES_DATA_KEY);
  if (files == null)   return;
  final ProgressManager progressManager=ProgressManager.getInstance();
  final Runnable action=new Runnable(){
    public void run(){
      final List<VcsException> allExceptions=new ArrayList<VcsException>();
      ChangesUtil.processFilePathsByVcs(project,files,new ChangesUtil.PerVcsProcessor<FilePath>(){
        public void process(        final AbstractVcs vcs,        final List<FilePath> items){
          final List<VcsException> exceptions=processFiles(vcs,files);
          if (exceptions != null) {
            allExceptions.addAll(exceptions);
          }
        }
      }
);
      for (      FilePath file : files) {
        VcsDirtyScopeManager.getInstance(project).fileDirty(file);
      }
      ChangesViewManager.getInstance(project).scheduleRefresh();
      if (allExceptions.size() > 0) {
        AbstractVcsHelper.getInstance(project).showErrors(allExceptions,"VCS Errors");
      }
    }
  }
;
  if (synchronously()) {
    action.run();
  }
 else {
    progressManager.runProcessWithProgressSynchronously(action,getName(),true,project);
  }
}
