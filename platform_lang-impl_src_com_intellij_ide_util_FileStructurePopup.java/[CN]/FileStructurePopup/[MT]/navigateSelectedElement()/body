{
  final AbstractTreeNode selectedNode=getSelectedNode();
  if (ApplicationManager.getApplication().isInternal()) {
    String enteredPrefix=getSpeedSearch().getEnteredPrefix();
    String itemText=getSpeedSearchText(selectedNode);
    if (StringUtil.isNotEmpty(enteredPrefix) && StringUtil.isNotEmpty(itemText)) {
      LOG.info("Chosen in file structure popup by prefix '" + enteredPrefix + "': '"+ itemText+ "'");
    }
  }
  final Ref<Boolean> succeeded=new Ref<Boolean>();
  final CommandProcessor commandProcessor=CommandProcessor.getInstance();
  commandProcessor.executeCommand(myProject,new Runnable(){
    @Override public void run(){
      if (selectedNode != null) {
        if (selectedNode.canNavigateToSource()) {
          myPopup.cancel();
          selectedNode.navigate(true);
          succeeded.set(true);
        }
 else {
          succeeded.set(false);
        }
      }
 else {
        succeeded.set(false);
      }
      IdeDocumentHistory.getInstance(myProject).includeCurrentCommandAsNavigation();
    }
  }
,"Navigate",null);
  return succeeded.get();
}
