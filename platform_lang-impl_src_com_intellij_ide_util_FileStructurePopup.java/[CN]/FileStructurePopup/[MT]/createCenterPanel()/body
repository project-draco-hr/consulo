{
  List<FileStructureFilter> fileStructureFilters=new ArrayList<FileStructureFilter>();
  List<FileStructureNodeProvider> fileStructureNodeProviders=new ArrayList<FileStructureNodeProvider>();
  if (myTreeActionsOwner != null) {
    for (    Filter filter : myBaseTreeModel.getFilters()) {
      if (filter instanceof FileStructureFilter) {
        final FileStructureFilter fsFilter=(FileStructureFilter)filter;
        myTreeActionsOwner.setActionIncluded(fsFilter,true);
        fileStructureFilters.add(fsFilter);
      }
    }
    if (myBaseTreeModel instanceof ProvidingTreeModel) {
      for (      NodeProvider provider : ((ProvidingTreeModel)myBaseTreeModel).getNodeProviders()) {
        if (provider instanceof FileStructureNodeProvider) {
          fileStructureNodeProviders.add((FileStructureNodeProvider)provider);
        }
      }
    }
  }
  JPanel panel=new JPanel(new BorderLayout());
  JPanel comboPanel=new JPanel(new GridLayout(0,2,0,0));
  addNarrowDownCheckbox(comboPanel);
  for (  FileStructureFilter filter : fileStructureFilters) {
    addCheckbox(comboPanel,filter);
  }
  for (  FileStructureNodeProvider provider : fileStructureNodeProviders) {
    addCheckbox(comboPanel,provider);
  }
  panel.add(comboPanel,BorderLayout.NORTH);
  panel.add(ScrollPaneFactory.createScrollPane(myAbstractTreeBuilder.getTree()),BorderLayout.CENTER);
  return panel;
}
