{
  String text=action instanceof FileStructureFilter ? ((FileStructureFilter)action).getCheckBoxText() : action instanceof FileStructureNodeProvider ? ((FileStructureNodeProvider)action).getCheckBoxText() : null;
  if (text == null)   return;
  Shortcut[] shortcuts=action instanceof FileStructureFilter ? ((FileStructureFilter)action).getShortcut() : ((FileStructureNodeProvider)action).getShortcut();
  final JCheckBox chkFilter=new JCheckBox();
  chkFilter.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      PsiElement currentParent=null;
      final AbstractTreeNode parentNode=null;
      final Object value=null;
      if (value instanceof StructureViewTreeElement) {
        final Object elementValue=((StructureViewTreeElement)value).getValue();
        if (elementValue instanceof PsiElement) {
          currentParent=(PsiElement)elementValue;
        }
      }
      final boolean state=chkFilter.isSelected();
      myTreeActionsOwner.setActionIncluded(action,action instanceof FileStructureFilter ? !state : state);
      mySmartTreeStructure.rebuildTree();
      myAbstractTreeBuilder.refilter();
      myAbstractTreeBuilder.queueUpdate();
      if (currentParent != null) {
        boolean oldNarrowDown=myShouldNarrowDown;
        myShouldNarrowDown=false;
        try {
        }
  finally {
          myShouldNarrowDown=oldNarrowDown;
        }
      }
      if (SpeedSearchBase.hasActiveSpeedSearch(myTree)) {
        final SpeedSearchSupply supply=SpeedSearchSupply.getSupply(myTree);
        if (supply != null && supply.isPopupActive())         supply.refreshSelection();
      }
    }
  }
);
  chkFilter.setFocusable(false);
  if (shortcuts.length > 0) {
    text+=" (" + KeymapUtil.getShortcutText(shortcuts[0]) + ")";
    new AnAction(){
      public void actionPerformed(      final AnActionEvent e){
        chkFilter.doClick();
      }
    }
.registerCustomShortcutSet(new CustomShortcutSet(shortcuts),myTree);
  }
  chkFilter.setText(text);
  panel.add(chkFilter);
}
