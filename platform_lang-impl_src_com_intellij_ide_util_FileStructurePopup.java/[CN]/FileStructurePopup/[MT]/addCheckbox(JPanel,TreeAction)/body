{
  String text=action instanceof FileStructureFilter ? ((FileStructureFilter)action).getCheckBoxText() : action instanceof FileStructureNodeProvider ? ((FileStructureNodeProvider)action).getCheckBoxText() : null;
  if (text == null)   return;
  Shortcut[] shortcuts=action instanceof FileStructureFilter ? ((FileStructureFilter)action).getShortcut() : ((FileStructureNodeProvider)action).getShortcut();
  final JCheckBox chkFilter=new JCheckBox();
  chkFilter.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final boolean state=chkFilter.isSelected();
      myTreeActionsOwner.setActionIncluded(action,action instanceof FileStructureFilter ? !state : state);
      Object selection=ContainerUtil.getFirstItem(myAbstractTreeBuilder.getSelectedElements());
      if (selection instanceof FilteringTreeStructure.FilteringNode) {
        selection=((FilteringTreeStructure.FilteringNode)selection).getDelegate();
      }
      myTreeStructure.rebuildTree();
      FilteringTreeStructure structure=(FilteringTreeStructure)myAbstractTreeBuilder.getTreeStructure();
      if (structure == null)       return;
      structure.rebuild();
      final Object sel=selection;
      myAbstractTreeBuilder.refilter(sel,true,false).doWhenProcessed(new Runnable(){
        @Override public void run(){
          if (mySpeedSearch.isPopupActive()) {
            mySpeedSearch.refreshSelection();
          }
        }
      }
);
    }
  }
);
  chkFilter.setFocusable(false);
  if (shortcuts.length > 0) {
    text+=" (" + KeymapUtil.getShortcutText(shortcuts[0]) + ")";
    new AnAction(){
      public void actionPerformed(      final AnActionEvent e){
        chkFilter.doClick();
      }
    }
.registerCustomShortcutSet(new CustomShortcutSet(shortcuts),myTree);
  }
  chkFilter.setText(text);
  panel.add(chkFilter);
}
