{
  String text=action instanceof FileStructureFilter ? ((FileStructureFilter)action).getCheckBoxText() : action instanceof FileStructureNodeProvider ? ((FileStructureNodeProvider)action).getCheckBoxText() : null;
  if (text == null)   return;
  Shortcut[] shortcuts=action instanceof FileStructureFilter ? ((FileStructureFilter)action).getShortcut() : ((FileStructureNodeProvider)action).getShortcut();
  final JCheckBox chkFilter=new JCheckBox();
  final boolean selected=getDefaultValue(action);
  chkFilter.setSelected(selected);
  myTreeActionsOwner.setActionIncluded(action,action instanceof FileStructureFilter ? !selected : selected);
  chkFilter.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final boolean state=chkFilter.isSelected();
      saveState(action,state);
      myTreeActionsOwner.setActionIncluded(action,action instanceof FileStructureFilter ? !state : state);
      Object selection=ContainerUtil.getFirstItem(myAbstractTreeBuilder.getSelectedElements());
      if (selection instanceof FilteringTreeStructure.FilteringNode) {
        selection=((FilteringTreeStructure.FilteringNode)selection).getDelegate();
      }
      myTreeStructure.rebuildTree();
      myFilteringStructure.rebuild();
      final Object sel=selection;
      final Runnable runnable=new Runnable(){
        public void run(){
          ApplicationManager.getApplication().runReadAction(new Runnable(){
            @Override public void run(){
              myAbstractTreeBuilder.refilter(sel,true,false).doWhenProcessed(new Runnable(){
                @Override public void run(){
                  if (mySpeedSearch.isPopupActive()) {
                    mySpeedSearch.refreshSelection();
                  }
                }
              }
);
            }
          }
);
        }
      }
;
      if (ApplicationManager.getApplication().isUnitTestMode()) {
        runnable.run();
      }
 else {
        ApplicationManager.getApplication().invokeLater(runnable);
      }
    }
  }
);
  chkFilter.setFocusable(false);
  if (shortcuts.length > 0) {
    text+=" (" + KeymapUtil.getShortcutText(shortcuts[0]) + ")";
    new AnAction(){
      public void actionPerformed(      final AnActionEvent e){
        chkFilter.doClick();
      }
    }
.registerCustomShortcutSet(new CustomShortcutSet(shortcuts),myTree);
  }
  chkFilter.setText(text);
  panel.add(chkFilter);
  myCheckBoxes.put(action.getClass(),chkFilter);
}
