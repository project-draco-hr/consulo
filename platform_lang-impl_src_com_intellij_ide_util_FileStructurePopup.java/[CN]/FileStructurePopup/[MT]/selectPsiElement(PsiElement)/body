{
  Set<PsiElement> parents=getAllParents(element);
  FilteringTreeStructure.FilteringNode node=(FilteringTreeStructure.FilteringNode)myAbstractTreeBuilder.getRootElement();
  if (element != null && node != null && myStructureViewDelegate instanceof StructureViewComposite) {
    parents.remove(element.getContainingFile());
    final List<FilteringTreeStructure.FilteringNode> fileNodes=node.children();
    for (    FilteringTreeStructure.FilteringNode fileNode : fileNodes) {
      final FilteringTreeStructure.FilteringNode found=findNode(parents,fileNode);
      if (found != null && found != fileNode) {
        return found;
      }
    }
  }
 else {
    final FilteringTreeStructure.FilteringNode found=findNode(parents,node);
    if (found == null) {
      TreeUtil.ensureSelection(myTree);
    }
    return found;
  }
  TreeUtil.ensureSelection(myTree);
  return null;
}
