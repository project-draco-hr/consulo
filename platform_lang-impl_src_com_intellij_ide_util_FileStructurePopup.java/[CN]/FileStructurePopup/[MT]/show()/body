{
  final JComponent panel=createCenterPanel();
  new MnemonicHelper().register(panel);
  myPopup=JBPopupFactory.getInstance().createComponentPopupBuilder(panel,null).setTitle(myTitle).setResizable(true).setFocusable(true).setMovable(true).setCancelKeyEnabled(false).setDimensionServiceKey(null,getDimensionServiceKey(),false).createPopup();
  Disposer.register(myPopup,myDisposable);
  Disposer.register(myPopup,this);
  Disposer.register(myPopup,myAbstractTreeBuilder);
  myPopup.showInCenterOf(myEditor.getComponent());
  myAbstractTreeBuilder.expandAll(new Runnable(){
    @Override public void run(){
      IdeFocusManager.getInstance(myProject).requestFocus(myTree,true);
      myAbstractTreeBuilder.queueUpdate().doWhenDone(new Runnable(){
        @Override public void run(){
          myAbstractTreeBuilder.expandAll(null);
          selectPsiElement(getCurrentElement(getPsiFile(myProject)));
        }
      }
);
    }
  }
);
  final Alarm alarm=new Alarm(myPopup);
  alarm.addRequest(new Runnable(){
    String filter="";
    @Override public void run(){
      String prefix=mySpeedSearch.getEnteredPrefix();
      if (prefix == null)       prefix="";
      if (!filter.equals(prefix)) {
        filter=prefix;
        myAbstractTreeBuilder.refilter();
      }
      alarm.addRequest(this,300);
    }
  }
,300);
}
