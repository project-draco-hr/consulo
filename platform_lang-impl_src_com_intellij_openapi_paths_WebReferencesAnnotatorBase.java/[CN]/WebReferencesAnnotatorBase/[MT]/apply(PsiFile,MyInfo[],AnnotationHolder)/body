{
  if (infos.length == 0) {
    return;
  }
  final HighlightDisplayLevel displayLevel=getHighlightDisplayLevel(file);
  for (  MyInfo info : infos) {
    if (!info.myResult) {
      final PsiElement element=info.myAnchor.retrieve();
      if (element != null) {
        final int start=element.getTextRange().getStartOffset();
        final TextRange range=new TextRange(start + info.myRangeInElement.getStartOffset(),start + info.myRangeInElement.getEndOffset());
        final String message=getErrorMessage(info.myUrl);
        final Annotation annotation;
        if (displayLevel == HighlightDisplayLevel.ERROR) {
          annotation=holder.createErrorAnnotation(range,message);
        }
 else         if (displayLevel == HighlightDisplayLevel.WARNING) {
          annotation=holder.createWarningAnnotation(range,message);
        }
 else         if (displayLevel == HighlightDisplayLevel.WEAK_WARNING) {
          annotation=holder.createInfoAnnotation(range,message);
        }
 else {
          annotation=holder.createWarningAnnotation(range,message);
        }
        for (        IntentionAction action : getQuickFixes()) {
          annotation.registerFix(action);
        }
      }
    }
  }
}
