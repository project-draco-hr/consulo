{
  if (parameters.getCompletionType() != CompletionType.BASIC)   return;
  final PsiFile file=parameters.getOriginalFile();
  final PsiElement position=parameters.getPosition();
  if (!isClassNameCompletionSupported(result,file,position))   return;
  final Ref<Boolean> empty=Ref.create(true);
  result.runRemainingContributors(parameters,new Consumer<LookupElement>(){
    public void consume(    final LookupElement lookupElement){
      empty.set(false);
      result.addElement(lookupElement);
    }
  }
);
  final CompletionParameters classParams;
  final int invocationCount=parameters.getInvocationCount();
  if (empty.get().booleanValue()) {
    classParams=parameters.withType(CompletionType.CLASS_NAME);
  }
 else   if (invocationCount > 1) {
    classParams=parameters.withType(CompletionType.CLASS_NAME).withInvocationCount(invocationCount - 1);
  }
 else {
    return;
  }
  CompletionService.getCompletionService().getVariantsFromContributors(classParams,null,new Consumer<LookupElement>(){
    public void consume(    final LookupElement lookupElement){
      updateProperties(lookupElement);
      result.addElement(lookupElement);
    }
  }
);
}
