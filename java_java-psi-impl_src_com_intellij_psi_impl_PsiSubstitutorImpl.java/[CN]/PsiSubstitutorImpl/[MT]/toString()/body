{
  @NonNls StringBuilder buffer=new StringBuilder();
  final Set<Map.Entry<PsiTypeParameter,PsiType>> set=mySubstitutionMap.entrySet();
  for (  Map.Entry<PsiTypeParameter,PsiType> entry : set) {
    final PsiTypeParameter typeParameter=entry.getKey();
    buffer.append(typeParameter.getName());
    final PsiElement owner=typeParameter.getOwner();
    if (owner instanceof PsiClass) {
      buffer.append(" of ");
      buffer.append(((PsiClass)owner).getQualifiedName());
    }
 else     if (owner instanceof PsiMethod) {
      buffer.append(" of ");
      buffer.append(((PsiMethod)owner).getName());
      buffer.append(" in ");
      buffer.append(((PsiMethod)owner).getContainingClass().getQualifiedName());
    }
    buffer.append(" -> ");
    if (entry.getValue() != null) {
      buffer.append(entry.getValue().getCanonicalText());
    }
 else {
      buffer.append("null");
    }
    buffer.append('\n');
  }
  return buffer.toString();
}
