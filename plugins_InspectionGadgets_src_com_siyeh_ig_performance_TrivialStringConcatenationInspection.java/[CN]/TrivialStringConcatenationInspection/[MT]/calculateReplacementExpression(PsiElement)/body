{
  final PsiBinaryExpression expression=(PsiBinaryExpression)location;
  final PsiExpression lOperand=expression.getLOperand();
  final PsiExpression rOperand=expression.getROperand();
  final PsiExpression replacement;
  if (isEmptyString(lOperand)) {
    replacement=rOperand;
  }
 else {
    replacement=lOperand;
  }
  final PsiType type=replacement.getType();
  final String text=type.getCanonicalText();
  if (s_typeToWrapperMap.containsKey(text)) {
    return s_typeToWrapperMap.get(text) + ".toString(" + replacement.getText()+ ')';
  }
 else   if ("java.lang.String".equals(text)) {
    return replacement.getText();
  }
 else {
    return replacement.getText() + ".toString()";
  }
}
