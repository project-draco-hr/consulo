{
  super.visitPolyadicExpression(expression);
  if (!TypeUtils.expressionHasType(expression,CommonClassNames.JAVA_LANG_STRING)) {
    return;
  }
  final PsiExpression[] operands=expression.getOperands();
  for (  PsiExpression operand : operands) {
    operand=ParenthesesUtils.stripParentheses(operand);
    if (operand == null) {
      return;
    }
    if (!ExpressionUtils.isEmptyStringLiteral(operand)) {
      continue;
    }
    if (PsiUtil.isConstantExpression(expression)) {
      return;
    }
    registerError(operand,operand);
  }
}
