{
  if (expression instanceof PsiMethodCallExpression || expression instanceof PsiTypeCastExpression || expression instanceof PsiArrayAccessExpression|| expression instanceof PsiNewExpression) {
    final String variableName=getVariableName(expression);
    return createVariable(variableName,expression,context);
  }
 else   if (expression instanceof PsiParenthesizedExpression) {
    final PsiParenthesizedExpression parenthesizedExpression=(PsiParenthesizedExpression)expression;
    final PsiExpression innerExpression=parenthesizedExpression.getExpression();
    return getReferenceToIterate(innerExpression,context);
  }
 else   if (expression instanceof PsiJavaCodeReferenceElement) {
    final PsiJavaCodeReferenceElement referenceElement=(PsiJavaCodeReferenceElement)expression;
    final String variableName=getVariableName(expression);
    if (referenceElement.isQualified()) {
      return createVariable(variableName,expression,context);
    }
    final PsiElement target=referenceElement.resolve();
    if (target instanceof PsiVariable) {
      return variableName;
    }
    return createVariable(variableName,expression,context);
  }
  return null;
}
