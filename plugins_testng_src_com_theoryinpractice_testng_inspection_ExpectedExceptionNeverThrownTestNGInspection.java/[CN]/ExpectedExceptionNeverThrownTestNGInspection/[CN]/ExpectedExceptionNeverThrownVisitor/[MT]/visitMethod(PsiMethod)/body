{
  super.visitMethod(method);
  final PsiAnnotation annotation=AnnotationUtil.findAnnotation(method,"org.testng.annotations.Test");
  if (annotation == null) {
    return;
  }
  final PsiAnnotationParameterList parameterList=annotation.getParameterList();
  final PsiNameValuePair[] attributes=parameterList.getAttributes();
  PsiAnnotationMemberValue value=null;
  for (  PsiNameValuePair attribute : attributes) {
    if ("expectedExceptions".equals(attribute.getName())) {
      value=attribute.getValue();
      break;
    }
  }
  if (!(value instanceof PsiClassObjectAccessExpression)) {
    return;
  }
  final PsiCodeBlock body=method.getBody();
  if (body == null) {
    return;
  }
  final PsiClassObjectAccessExpression classObjectAccessExpression=(PsiClassObjectAccessExpression)value;
  final PsiTypeElement operand=classObjectAccessExpression.getOperand();
  final PsiType type=operand.getType();
  if (!(type instanceof PsiClassType)) {
    return;
  }
  final PsiClassType classType=(PsiClassType)type;
  final PsiClass aClass=classType.resolve();
  if (InheritanceUtil.isInheritor(aClass,CommonClassNames.JAVA_LANG_RUNTIME_EXCEPTION)) {
    return;
  }
  final Set<PsiClassType> exceptionsThrown=calculateExceptionsThrown(body);
  if (exceptionsThrown.contains(classType)) {
    return;
  }
  myProblemsHolder.registerProblem(operand,"Expected <code>#ref</code> never thrown in body of '" + method.getName() + "()' #loc");
}
