{
  super.visitNewExpression(newExpression);
  final PsiType type=newExpression.getType();
  if (type == null) {
    return;
  }
  if (!(type instanceof PsiClassType)) {
    return;
  }
  final PsiClass resolveClass=((PsiClassType)type).resolve();
  if (resolveClass == null) {
    return;
  }
  if (resolveClass.isEnum() || resolveClass.isInterface() || resolveClass.isAnnotationType()) {
    return;
  }
  if (!ClassUtils.isSubclass(resolveClass,"java.sql.Driver")) {
    return;
  }
  final PsiJavaCodeReferenceElement classNameElement=newExpression.getClassReference();
  registerError(classNameElement);
}
