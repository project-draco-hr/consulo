{
  final VirtualFile folderFile=folder.getFile();
  final VirtualFile contentEntryFile=myContentEntry.getFile();
  final String packagePrefix=folder instanceof SourceFolder ? ((SourceFolder)folder).getPackagePrefix() : "";
  if (folderFile != null && contentEntryFile != null) {
    String path=folderFile.equals(contentEntryFile) ? "." : VfsUtil.getRelativePath(folderFile,contentEntryFile,File.separatorChar);
    if (packagePrefix.length() > 0) {
      path=path + " (" + packagePrefix+ ")";
    }
    HoverHyperlinkLabel hyperlinkLabel=new HoverHyperlinkLabel(path,foreground);
    hyperlinkLabel.setMinimumSize(new Dimension(0,0));
    hyperlinkLabel.addHyperlinkListener(new HyperlinkListener(){
      public void hyperlinkUpdate(      HyperlinkEvent e){
        myCallback.navigateFolder(myContentEntry,folder);
      }
    }
);
    registerTextComponent(hyperlinkLabel,foreground);
    return new UnderlinedPathLabel(hyperlinkLabel);
  }
 else {
    String path=toRelativeDisplayPath(folder.getUrl(),myContentEntry.getUrl());
    if (packagePrefix.length() > 0) {
      path=path + " (" + packagePrefix+ ")";
    }
    final JLabel pathLabel=new JLabel(path);
    pathLabel.setOpaque(false);
    pathLabel.setForeground(Color.RED);
    return new UnderlinedPathLabel(pathLabel);
  }
}
