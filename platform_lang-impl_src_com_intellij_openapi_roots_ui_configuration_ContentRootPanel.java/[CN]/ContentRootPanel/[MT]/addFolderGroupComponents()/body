{
  final ContentFolder[] contentFolders=getContentEntry().getFolders(ContentFolderScopes.all());
  MultiMap<ContentFolderTypeProvider,ContentFolder> folderByType=new MultiMap<ContentFolderTypeProvider,ContentFolder>();
  for (  ContentFolder folder : contentFolders) {
    if (folder.isSynthetic()) {
      continue;
    }
    final VirtualFile folderFile=folder.getFile();
    if (folderFile != null && isExcludedOrUnderExcludedDirectory(folderFile)) {
      continue;
    }
    folderByType.putValue(folder.getType(),folder);
  }
  Insets insets=new Insets(0,0,10,0);
  GridBagConstraints constraints=new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,insets,0,0);
  for (  Map.Entry<ContentFolderTypeProvider,Collection<ContentFolder>> entry : folderByType.entrySet()) {
    Collection<ContentFolder> folders=entry.getValue();
    if (folders.isEmpty())     continue;
    ContentFolderTypeProvider contentFolderTypeProvider=entry.getKey();
    ContentFolder[] foldersArray=folders.toArray(new ContentFolder[folders.size()]);
    final JComponent sourcesComponent=createFolderGroupComponent(contentFolderTypeProvider.getName(),foldersArray,contentFolderTypeProvider.getGroupColor(),contentFolderTypeProvider);
    add(sourcesComponent,constraints);
  }
}
