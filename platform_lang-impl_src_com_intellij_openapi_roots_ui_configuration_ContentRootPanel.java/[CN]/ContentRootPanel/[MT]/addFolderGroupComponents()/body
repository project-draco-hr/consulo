{
  final List<ContentFolder> sources=new ArrayList<ContentFolder>();
  final List<ContentFolder> testSources=new ArrayList<ContentFolder>();
  final List<ContentFolder> excluded=new ArrayList<ContentFolder>();
  final SourceFolder[] sourceFolders=getContentEntry().getSourceFolders();
  for (  SourceFolder folder : sourceFolders) {
    if (folder.isSynthetic()) {
      continue;
    }
    final VirtualFile folderFile=folder.getFile();
    if (folderFile != null && (isExcluded(folderFile) || isUnderExcludedDirectory(folderFile))) {
      continue;
    }
    if (folder.isTestSource()) {
      testSources.add(folder);
    }
 else {
      sources.add(folder);
    }
  }
  final ExcludeFolder[] excludeFolders=getContentEntry().getExcludeFolders();
  for (  final ExcludeFolder excludeFolder : excludeFolders) {
    if (!excludeFolder.isSynthetic()) {
      excluded.add(excludeFolder);
    }
  }
  if (sources.size() > 0 && myCanMarkSources) {
    final JComponent sourcesComponent=createFolderGroupComponent(ProjectBundle.message("module.paths.sources.group"),sources.toArray(new ContentFolder[sources.size()]),SOURCES_COLOR);
    this.add(sourcesComponent,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,new Insets(0,0,10,0),0,0));
  }
  if (testSources.size() > 0 && myCanMarkTestSources) {
    final JComponent testSourcesComponent=createFolderGroupComponent(ProjectBundle.message("module.paths.test.sources.group"),testSources.toArray(new ContentFolder[testSources.size()]),TESTS_COLOR);
    this.add(testSourcesComponent,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,new Insets(0,0,10,0),0,0));
  }
  if (excluded.size() > 0) {
    final JComponent excludedComponent=createFolderGroupComponent(ProjectBundle.message("module.paths.excluded.group"),excluded.toArray(new ContentFolder[excluded.size()]),EXCLUDED_COLOR);
    this.add(excludedComponent,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTH,GridBagConstraints.HORIZONTAL,new Insets(0,0,10,0),0,0));
  }
}
