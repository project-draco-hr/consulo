{
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<modules>"+ "  <module>m1</module>"+ "  <module>m2</module>"+ "</modules>");
  createModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>");
  VirtualFile module2Pom=createModulePom("m2","<groupId>test</groupId>" + "<artifactId>m2</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<modules>"+ "  <module>m3</module>"+ "</modules>");
  createModulePom("m2/m3","<groupId>test</groupId>" + "<artifactId>m3</artifactId>" + "<version>1</version>");
  importProject();
  assertModules("project","m1","m2","m3");
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<modules>"+ "  <module>m1</module>"+ "  <module>m2</module>"+ "  <module><caret></module>"+ "</modules>");
  assertCompletionVariants(myProjectPom,"m1","m2","m2/m3");
  createModulePom("m2","<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>"+ "<packaging>pom</packaging>"+ "<modules>"+ "  <module>m3</module>"+ "  <module><caret></module>"+ "</modules>");
  assertCompletionVariants(module2Pom,"..","../m1","m3");
}
