{
  final String className=myContainingClass.getName();
  presentation.setIcon(DefaultLookupItemRenderer.getRawIcon(this,presentation.isReal()));
  final String methodName=myMember.getName();
  if (Boolean.FALSE.equals(myShouldImport) && StringUtil.isNotEmpty(className)) {
    presentation.setItemText(className + "." + methodName);
  }
 else {
    presentation.setItemText(methodName);
  }
  final String params=myMergedOverloads ? "(...)" : myMember instanceof PsiMethod ? PsiFormatUtil.formatMethod((PsiMethod)myMember,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_TYPE) : "";
  if (Boolean.TRUE.equals(myShouldImport) && StringUtil.isNotEmpty(className)) {
    presentation.setTailText(params + " in " + className);
  }
 else {
    presentation.setTailText(params);
  }
  final PsiType type=myMember instanceof PsiMethod ? ((PsiMethod)myMember).getReturnType() : ((PsiField)myMember).getType();
  if (type != null) {
    presentation.setTypeText(type.getPresentableText());
  }
}
