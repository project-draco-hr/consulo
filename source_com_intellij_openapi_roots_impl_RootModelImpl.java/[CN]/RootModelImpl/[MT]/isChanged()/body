{
  if (!myWritable)   return false;
  if (!vptrEqual(myExplodedDirectoryPointer,getSourceModel().myExplodedDirectoryPointer)) {
    return true;
  }
  for (  ModuleExtension moduleExtension : myExtensions) {
    if (moduleExtension.isChanged())     return true;
  }
  if (myExcludeExploded != getSourceModel().myExcludeExploded)   return true;
  OrderEntry[] orderEntries=getOrderEntries();
  OrderEntry[] sourceOrderEntries=getSourceModel().getOrderEntries();
  if (orderEntries.length != sourceOrderEntries.length)   return true;
  for (int i=0; i < orderEntries.length; i++) {
    OrderEntry orderEntry=orderEntries[i];
    OrderEntry sourceOrderEntry=sourceOrderEntries[i];
    if (!orderEntriesEquals(orderEntry,sourceOrderEntry)) {
      return true;
    }
  }
  final String[] contentRootUrls=getContentRootUrls();
  final String[] thatContentRootUrls=getSourceModel().getContentRootUrls();
  if (!Arrays.equals(contentRootUrls,thatContentRootUrls))   return true;
  final String[] excludeRootUrls=getExcludeRootUrls();
  final String[] thatExcludeRootUrls=getSourceModel().getExcludeRootUrls();
  if (!Arrays.equals(excludeRootUrls,thatExcludeRootUrls))   return true;
  final String[] sourceRootForMainUrls=getSourceRootUrls(false);
  final String[] thatSourceRootForMainUrls=getSourceModel().getSourceRootUrls(false);
  if (!Arrays.equals(sourceRootForMainUrls,thatSourceRootForMainUrls))   return true;
  final String[] sourceRootForTestUrls=getSourceRootUrls(true);
  final String[] thatSourceRootForTestUrls=getSourceModel().getSourceRootUrls(true);
  if (!Arrays.equals(sourceRootForTestUrls,thatSourceRootForTestUrls))   return true;
  final ContentEntry[] contentEntries=getContentEntries();
  final ContentEntry[] thatContentEntries=getSourceModel().getContentEntries();
  if (contentEntries.length != thatContentEntries.length)   return true;
  for (int i=0; i < contentEntries.length; i++) {
    final ContentEntry contentEntry=contentEntries[i];
    final ContentEntry thatContentEntry=thatContentEntries[i];
    final SourceFolder[] sourceFolders=contentEntry.getSourceFolders();
    final SourceFolder[] thatSourceFolders=thatContentEntry.getSourceFolders();
    if (sourceFolders.length != thatSourceFolders.length)     return true;
    for (int j=0; j < sourceFolders.length; j++) {
      final SourceFolder sourceFolder=sourceFolders[j];
      final SourceFolder thatSourceFolder=thatSourceFolders[j];
      if (!sourceFolder.getUrl().equals(thatSourceFolder.getUrl()) || !sourceFolder.getPackagePrefix().equals(thatSourceFolder.getPackagePrefix())) {
        return true;
      }
    }
  }
  return !myOrderRootPointerContainers.equals(getSourceModel().myOrderRootPointerContainers);
}
