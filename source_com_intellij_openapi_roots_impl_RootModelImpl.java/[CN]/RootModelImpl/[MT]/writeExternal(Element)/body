{
  if (myLanguageLevel != null) {
    element.setAttribute(LANGUAGE_LEVEL_ELEMENT_NAME,myLanguageLevel.toString());
  }
  element.setAttribute(INHERIT_COMPILER_OUTPUT,String.valueOf(myInheritedCompilerOutput));
  if (myCompilerOutput != null) {
    final Element pathElement=new Element(OUTPUT_TAG);
    pathElement.setAttribute(URL_ATTR,myCompilerOutput);
    element.addContent(pathElement);
  }
  if (myExcludeOutput) {
    element.addContent(new Element(EXCLUDE_OUTPUT_TAG));
  }
  if (myExplodedDirectory != null) {
    final Element pathElement=new Element(EXPLODED_TAG);
    pathElement.setAttribute(URL_ATTR,myExplodedDirectory);
    element.addContent(pathElement);
  }
  if (myExcludeExploded) {
    element.addContent(new Element(EXCLUDE_EXPLODED_TAG));
  }
  if (myCompilerOutputForTests != null) {
    final Element pathElement=new Element(TEST_OUTPUT_TAG);
    pathElement.setAttribute(ATTRIBUTE_URL,myCompilerOutputForTests);
    element.addContent(pathElement);
  }
  for (  ContentEntry contentEntry : myContent) {
    if (contentEntry instanceof ContentEntryImpl) {
      final Element subElement=new Element(ContentEntryImpl.ELEMENT_NAME);
      ((ContentEntryImpl)contentEntry).writeExternal(subElement);
      element.addContent(subElement);
    }
  }
  for (  OrderEntry orderEntry : getOrderEntries()) {
    if (orderEntry instanceof WritableOrderEntry) {
      ((WritableOrderEntry)orderEntry).writeExternal(element);
    }
  }
  final Element propertiesChild=new Element(PROPERTIES_CHILD_NAME);
  myOrderEntryProperties.writeExternal(propertiesChild,this);
  element.addContent(propertiesChild);
  for (  OrderRootType orderRootType : myOrderRootPointerContainers.keySet()) {
    VirtualFilePointerContainer container=myOrderRootPointerContainers.get(orderRootType);
    if (container != null && container.size() > 0) {
      final Element javaDocPaths=new Element(orderRootType.getModulePathsName());
      container.writeExternal(javaDocPaths,ROOT_ELEMENT);
      element.addContent(javaDocPaths);
    }
  }
}
