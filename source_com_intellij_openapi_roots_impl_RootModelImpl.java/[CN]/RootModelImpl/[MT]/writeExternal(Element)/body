{
  if (myCompilerOutputPath != null) {
    final Element pathElement=new Element(OUTPUT_TAG);
    pathElement.setAttribute(URL_ATTR,myCompilerOutputPath.getUrl());
    element.addContent(pathElement);
  }
  if (myExcludeOutput) {
    element.addContent(new Element(EXCLUDE_OUTPUT_TAG));
  }
  if (myExplodedDirectory != null) {
    final Element pathElement=new Element(EXPLODED_TAG);
    pathElement.setAttribute(URL_ATTR,myExplodedDirectory.getUrl());
    element.addContent(pathElement);
  }
  if (myExcludeExploded) {
    element.addContent(new Element(EXCLUDE_EXPLODED_TAG));
  }
  if (myCompilerOutputPathForTests != null) {
    final Element pathElement=new Element(TEST_OUTPUT_TAG);
    pathElement.setAttribute("url",myCompilerOutputPathForTests.getUrl());
    element.addContent(pathElement);
  }
  for (Iterator<ContentEntry> iterator=myContent.iterator(); iterator.hasNext(); ) {
    ContentEntry contentEntry=iterator.next();
    if (contentEntry instanceof ContentEntryImpl) {
      final Element subElement=new Element(ContentEntryImpl.ELEMENT_NAME);
      ((ContentEntryImpl)contentEntry).writeExternal(subElement);
      element.addContent(subElement);
    }
  }
  for (int i=0; i < myOrder.size(); i++) {
    OrderEntry orderEntry=myOrder.get(i);
    if (orderEntry instanceof WritableOrderEntry) {
      ((WritableOrderEntry)orderEntry).writeExternal(element);
    }
  }
  final Element propertiesChild=new Element(PROPERTIES_CHILD_NAME);
  myOrderEntryProperties.writeExternal(propertiesChild,this);
  element.addContent(propertiesChild);
  if (myJavadocPointerContainer.size() > 0) {
    final Element javaDocPaths=new Element(JAVADOC_PATHS_NAME);
    myJavadocPointerContainer.writeExternal(javaDocPaths,JAVADOC_ROOT_ELEMENT);
    element.addContent(javaDocPaths);
  }
}
