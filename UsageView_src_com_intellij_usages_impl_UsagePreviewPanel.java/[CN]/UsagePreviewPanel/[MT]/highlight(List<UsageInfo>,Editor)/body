{
  if (editor != myEditor)   return;
  myEditor.getMarkupModel().removeAllHighlighters();
  for (int i=infos.size() - 1; i >= 0; i--) {
    UsageInfo info=infos.get(i);
    PsiElement psiElement=info.getElement();
    if (psiElement == null || !psiElement.isValid())     continue;
    int offsetInFile=psiElement.getTextOffset();
    EditorColorsManager colorManager=EditorColorsManager.getInstance();
    TextAttributes attributes=colorManager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);
    TextRange elementRange=psiElement.getTextRange();
    TextRange infoRange=info.getRange();
    TextRange textRange=elementRange.contains(infoRange) ? elementRange.cutOut(infoRange) : elementRange;
    if (psiElement instanceof PsiNamedElement && !(psiElement instanceof PsiFile)) {
      PsiFile psiFile=psiElement.getContainingFile();
      PsiElement nameElement=psiFile.findElementAt(offsetInFile);
      if (nameElement != null) {
        textRange=nameElement.getTextRange();
      }
      PsiElement hostElement=psiFile.getContext();
      if (hostElement != null) {
        textRange=textRange.shiftRight(hostElement.getTextRange().getStartOffset());
      }
    }
    myEditor.getMarkupModel().addRangeHighlighter(textRange.getStartOffset(),textRange.getEndOffset(),HighlighterLayer.ADDITIONAL_SYNTAX,attributes,HighlighterTargetArea.EXACT_RANGE);
    myEditor.getCaretModel().moveToOffset(textRange.getEndOffset());
  }
  myEditor.getScrollingModel().scrollToCaret(ScrollType.CENTER);
}
