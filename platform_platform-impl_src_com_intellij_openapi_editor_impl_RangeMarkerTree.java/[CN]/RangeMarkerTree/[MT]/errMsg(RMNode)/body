{
  final StringBuilder msg=new StringBuilder();
  final AtomicInteger alive=new AtomicInteger();
  node.processAliveKeys(new Processor<Object>(){
    @Override public boolean process(    Object t){
      msg.append(t).append("\n");
      alive.incrementAndGet();
      return true;
    }
  }
);
  if (alive.get() > DUPLICATE_LIMIT) {
    msg.insert(0,"Too many range markers (" + alive + ") registered in "+ this+ ":\n");
    return msg.toString();
  }
  return null;
}
