{
  if (JspPsiUtil.isInJspFile(this)) {
    if (getTreeParent().getElementType() == JavaElementType.DECLARATION_STATEMENT && getTreeParent().getTreeParent() instanceof JspCodeBlock && getTreeParent().getTreeParent().getTreeParent().getElementType() == JspElementType.HOLDER_METHOD) {
      final JspFile jspFile=JspPsiUtil.getJspFile(this);
      final JspContextManager contextManager=JspContextManager.getInstance(getProject());
      if (contextManager == null) {
        return super.getUseScope();
      }
      final Set<PsiFile> allIncluded=new THashSet<PsiFile>(10);
      final BaseJspFile rootContext=contextManager.getRootContextFile(jspFile);
      allIncluded.add(rootContext);
      JspSpiUtil.visitAllIncludedFilesRecursively(rootContext,new Processor<BaseJspFile>(){
        public boolean process(        final BaseJspFile file){
          allIncluded.add(file);
          return true;
        }
      }
);
      return new LocalSearchScope(PsiUtilBase.toPsiFileArray(allIncluded));
    }
  }
  final PsiElement parentElement=getParent();
  if (parentElement instanceof PsiDeclarationStatement) {
    return new LocalSearchScope(parentElement.getParent());
  }
 else   if (parentElement instanceof PsiResourceList) {
    final PsiElement tryStatement=parentElement.getParent();
    final PsiCodeBlock tryBlock=((PsiTryStatement)tryStatement).getTryBlock();
    return new LocalSearchScope(tryBlock != null ? tryBlock : tryStatement);
  }
 else {
    return getManager().getFileManager().getUseScope(this);
  }
}
