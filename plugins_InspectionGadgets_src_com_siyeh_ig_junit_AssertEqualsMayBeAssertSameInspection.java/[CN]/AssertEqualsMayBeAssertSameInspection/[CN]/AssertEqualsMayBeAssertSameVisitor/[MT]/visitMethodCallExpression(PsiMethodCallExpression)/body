{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  final String name=methodExpression.getReferenceName();
  if (!"assertEquals".equals(name)) {
    return;
  }
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length == 3 && arguments.length == 2) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiClass aClass=method.getContainingClass();
  final String qualifiedName=aClass.getQualifiedName();
  if (!"org.junit.Assert".equals(qualifiedName) && !"junit.framework.Assert".equals(qualifiedName)) {
    return;
  }
  final PsiExpression argument1=arguments[arguments.length - 2];
  if (!couldBeAssertSameArgument(argument1)) {
    return;
  }
  final PsiExpression argument2=arguments[arguments.length - 1];
  if (!couldBeAssertSameArgument(argument2)) {
    return;
  }
  registerMethodCallError(expression);
}
