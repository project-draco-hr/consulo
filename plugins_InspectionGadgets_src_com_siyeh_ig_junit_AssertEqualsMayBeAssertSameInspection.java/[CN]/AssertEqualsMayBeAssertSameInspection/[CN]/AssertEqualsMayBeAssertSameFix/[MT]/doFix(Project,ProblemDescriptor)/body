{
  final PsiElement element=descriptor.getPsiElement();
  final PsiElement parent=element.getParent();
  if (!(parent instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression methodExpression=(PsiReferenceExpression)parent;
  final PsiElement grandParent=methodExpression.getParent();
  if (!(grandParent instanceof PsiMethodCallExpression)) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
  final PsiMethod method=methodCallExpression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiClass containingClass=method.getContainingClass();
  if (containingClass == null) {
    return;
  }
  final String className=containingClass.getQualifiedName();
  if (className == null) {
    return;
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier == null && ImportUtils.addStaticImport(className,"assertSame",methodExpression)) {
    replaceExpression(methodExpression,"assertSame");
  }
 else {
    replaceExpression(methodExpression,className + ".assertSame");
  }
}
