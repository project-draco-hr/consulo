{
  DefaultActionGroup actionGroup=new DefaultActionGroup();
  actionGroup.add(addShortcut(IdeActions.ACTION_EDIT_SOURCE,new ManagedLibraryAction("&Edit library...",false){
    @Override public void actionPerformed(    AnActionEvent e){
      final Object value=myLibraryList.getSelectedValue();
      if (value instanceof ManagedLibrary) {
        final Library library=((ManagedLibrary)value).library;
        final LibraryTable table=library.getTable();
        if (table == null) {
          return;
        }
        final LibraryTableModifiableModelProvider provider=ProjectStructureConfigurable.getInstance(myModule.getProject()).getContext().createModifiableModelProvider(table.getTableLevel(),false);
        LibraryTableEditor.editLibrary(provider,library,myModule.getProject()).openDialog(myComponent,Collections.singletonList(library),true);
      }
    }
  }
));
  actionGroup.add(addShortcut(IdeActions.ACTION_GOTO_DECLARATION,new ManagedLibraryAction("&Show in module dependencies",false){
    @Override public void actionPerformed(    AnActionEvent e){
      final Object value=myLibraryList.getSelectedValue();
      if (value instanceof ManagedLibrary) {
        for (        OrderEntry entry : myEditorContext.getModifiableRootModel().getOrderEntries()) {
          if (entry instanceof LibraryOrderEntry) {
            final LibraryOrderEntry orderEntry=(LibraryOrderEntry)entry;
            if (((ManagedLibrary)value).library.equals(orderEntry.getLibrary())) {
              ModuleStructureConfigurable.getInstance(myEditorContext.getProject()).selectOrderEntry(myModule,orderEntry);
              return;
            }
          }
        }
      }
    }
  }
));
  actionGroup.add(addShortcut(IdeActions.ACTION_DELETE,new ManagedLibraryAction("R&emove...",true){
    @Override public void actionPerformed(    AnActionEvent e){
      deleteSelectedLibraries();
    }
  }
));
  PopupHandler.installPopupHandler(myLibraryList,actionGroup,ActionPlaces.UNKNOWN,ActionManager.getInstance());
}
