{
  final MyEmptyProcessHandler handler=new MyEmptyProcessHandler();
  final SMTRunnerConsoleProperties properties=myRunProfile.getProperties();
  RunProfile configuration;
  final String frameworkName;
  if (properties != null) {
    configuration=properties.getConfiguration();
    frameworkName=properties.getTestFrameworkName();
  }
 else {
    configuration=myRunProfile;
    frameworkName="Import Test Results";
  }
  final ImportedTestConsoleProperties consoleProperties=new ImportedTestConsoleProperties(properties,myFile,handler,myRunProfile.getProject(),configuration,frameworkName,executor);
  final BaseTestsOutputConsoleView console=SMTestRunnerConnectionUtil.createConsole(consoleProperties.getTestFrameworkName(),consoleProperties);
  final JComponent component=console.getComponent();
  AbstractRerunFailedTestsAction rerunFailedTestsAction=null;
  if (component instanceof TestFrameworkRunningModel) {
    rerunFailedTestsAction=consoleProperties.createRerunFailedTestsAction(console);
    if (rerunFailedTestsAction != null) {
      rerunFailedTestsAction.setModelProvider(new Getter<TestFrameworkRunningModel>(){
        @Override public TestFrameworkRunningModel get(){
          return (TestFrameworkRunningModel)component;
        }
      }
);
    }
  }
  console.attachToProcess(handler);
  final DefaultExecutionResult result=new DefaultExecutionResult(console,handler);
  if (rerunFailedTestsAction != null) {
    result.setRestartActions(rerunFailedTestsAction);
  }
  return result;
}
