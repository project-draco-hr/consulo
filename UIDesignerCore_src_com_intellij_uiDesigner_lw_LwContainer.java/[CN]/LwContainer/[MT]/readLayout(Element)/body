{
  if ("xy".equals(element.getName())) {
    setLayout(new XYLayoutManager());
  }
 else   if ("grid".equals(element.getName())) {
    final int rowCount=LwXmlReader.getRequiredInt(element,"row-count");
    final int columnCount=LwXmlReader.getRequiredInt(element,"column-count");
    final int hGap=LwXmlReader.getRequiredInt(element,"hgap");
    final int vGap=LwXmlReader.getRequiredInt(element,"vgap");
    final boolean sameSizeHorizontally=LwXmlReader.getOptionalBoolean(element,"same-size-horizontally",false);
    final boolean sameSizeVertically=LwXmlReader.getOptionalBoolean(element,"same-size-vertically",false);
    final Element marginElement=LwXmlReader.getRequiredChild(element,"margin");
    final Insets margin=new Insets(LwXmlReader.getRequiredInt(marginElement,"top"),LwXmlReader.getRequiredInt(marginElement,"left"),LwXmlReader.getRequiredInt(marginElement,"bottom"),LwXmlReader.getRequiredInt(marginElement,"right"));
    final GridLayoutManager layout=new GridLayoutManager(rowCount,columnCount);
    layout.setMargin(margin);
    layout.setVGap(vGap);
    layout.setHGap(hGap);
    layout.setSameSizeHorizontally(sameSizeHorizontally);
    layout.setSameSizeVertically(sameSizeVertically);
    setLayout(layout);
  }
 else {
    throw new IllegalArgumentException("unexpected element: " + element);
  }
}
