{
  final String name=child.getName();
  final LwComponent component;
  if ("component".equals(name)) {
    final String className=LwXmlReader.getRequiredString(child,UIFormXmlConstants.ATTRIBUTE_CLASS);
    component=new LwAtomicComponent(className);
  }
 else   if (UIFormXmlConstants.ELEMENT_NESTED_FORM.equals(name)) {
    component=new LwNestedForm();
  }
 else   if ("vspacer".equals(name)) {
    component=new LwVSpacer();
  }
 else   if ("hspacer".equals(name)) {
    component=new LwHSpacer();
  }
 else   if ("xy".equals(name) || "grid".equals(name)) {
    String className=LwXmlReader.getString(child,UIFormXmlConstants.ATTRIBUTE_CLASS);
    if (className == null) {
      className=JPanel.class.getName();
    }
    component=new LwContainer(className);
  }
 else   if ("scrollpane".equals(name)) {
    component=new LwScrollPane();
  }
 else   if ("tabbedpane".equals(name)) {
    component=new LwTabbedPane();
  }
 else   if ("splitpane".equals(name)) {
    component=new LwSplitPane();
  }
 else   if (UIFormXmlConstants.ELEMENT_TOOLBAR.equals(name)) {
    component=new LwToolBar();
  }
 else {
    throw new UnexpectedFormElementException("unexpected element: " + child);
  }
  return component;
}
