{
  extend(CompletionType.SMART,and(JavaSmartCompletionContributor.INSIDE_EXPRESSION,not(psiElement().afterLeaf("."))),new ExpectedTypeBasedCompletionProvider(){
    protected void addCompletions(    final CompletionParameters parameters,    final CompletionResultSet result,    final Collection<ExpectedTypeInfo> infos){
      final Ref<Boolean> empty=Ref.create(true);
      result.runRemainingContributors(parameters,new Consumer<LookupElement>(){
        public void consume(        final LookupElement lookupElement){
          empty.set(false);
          result.addElement(lookupElement);
        }
      }
);
      @NonNls final String prefix=result.getPrefixMatcher().getPrefix();
      if (empty.get().booleanValue() && prefix.startsWith("n")) {
        for (        final ExpectedTypeInfo info : infos) {
          if (!(info.getType() instanceof PsiPrimitiveType)) {
            final LookupItem item=(LookupItem)BasicExpressionCompletionContributor.createKeywordLookupItem(parameters.getPosition(),PsiKeyword.NULL);
            item.setAttribute(LookupItem.TYPE,PsiType.NULL);
            result.addElement(JavaSmartCompletionContributor.decorate(item,infos));
            return;
          }
        }
      }
    }
  }
);
}
