{
  if (visited.contains(tag))   return;
  visited.add(tag);
  if (XmlNSDescriptorImpl.equalsToSchemaName(tag,"element")) {
    String nameAttr=tag.getAttributeValue("name");
    if (nameAttr != null) {
      addElementDescriptor(result,new XmlElementDescriptorImpl(tag));
    }
 else {
      String ref=tag.getAttributeValue("ref");
      if (ref != null) {
        final String local=XmlUtil.findLocalNameByQualifiedName(ref);
        final String namespacePrefix=XmlUtil.findPrefixByQualifiedName(ref);
        final String namespace="".equals(namespacePrefix) ? myDocumentDescriptor.getDefaultNamespace() : tag.getNamespaceByPrefix(namespacePrefix);
        final XmlElementDescriptor element=myDocumentDescriptor.getElementDescriptor(local,namespace);
        if (element != null) {
          addElementDescriptor(result,element);
        }
      }
    }
  }
 else   if (XmlNSDescriptorImpl.equalsToSchemaName(tag,"group")) {
    String ref=tag.getAttributeValue("ref");
    if (ref != null) {
      XmlTag groupTag=myDocumentDescriptor.findGroup(ref);
      if (groupTag != null) {
        XmlTag[] tags=groupTag.getSubTags();
        for (int i=0; i < tags.length; i++) {
          XmlTag subTag=tags[i];
          collectElements(result,subTag,visited);
        }
      }
    }
  }
 else   if (XmlNSDescriptorImpl.equalsToSchemaName(tag,"restriction") || XmlNSDescriptorImpl.equalsToSchemaName(tag,"extension")) {
    String base=tag.getAttributeValue("base");
    if (base != null) {
      TypeDescriptor descriptor=myDocumentDescriptor.findTypeDescriptor(myDocumentDescriptor.myFile.getDocument().getRootTag(),base);
      if (descriptor instanceof ComplexTypeDescriptor) {
        ComplexTypeDescriptor complexTypeDescriptor=(ComplexTypeDescriptor)descriptor;
        complexTypeDescriptor.collectElements(result,complexTypeDescriptor.myTag,visited);
      }
      XmlTag[] tags=tag.getSubTags();
      for (int i=0; i < tags.length; i++) {
        XmlTag subTag=tags[i];
        collectElements(result,subTag,visited);
      }
    }
  }
 else {
    XmlTag[] tags=tag.getSubTags();
    for (int i=0; i < tags.length; i++) {
      XmlTag subTag=tags[i];
      collectElements(result,subTag,visited);
    }
  }
}
