{
  final DirectoryProjectGenerator[] extensions=DirectoryProjectGenerator.EP_NAME.getExtensions();
  myTemplatesList.setModel(new CollectionListModel<DirectoryProjectGenerator>(extensions));
  myTemplatesList.setCellRenderer(new ColoredListCellRenderer(){
    @Override protected void customizeCellRenderer(    JList list,    Object value,    int index,    boolean selected,    boolean hasFocus){
      append(((DirectoryProjectGenerator)value).getName());
    }
  }
);
  myTemplatesList.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      if (mySettingsPanel.getComponentCount() > 0) {
        mySettingsPanel.remove(0);
      }
      DirectoryProjectGenerator generator=getSelectedGenerator();
      if (generator instanceof WebProjectGenerator) {
        WebProjectGenerator.GeneratorPeer peer=myPeers.get(generator);
        mySettingsPanel.add(peer.getComponent(),BorderLayout.NORTH);
      }
      mySettingsPanel.revalidate();
    }
  }
);
  if (myTemplatesList.getModel().getSize() > 0) {
    myTemplatesList.setSelectedIndex(0);
  }
  mySearchField.addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      final MinusculeMatcher matcher=NameUtil.buildMatcher(mySearchField.getText(),NameUtil.MatchingCaseSensitivity.NONE);
      DirectoryProjectGenerator generator=getSelectedGenerator();
      List<DirectoryProjectGenerator> list=ContainerUtil.filter(extensions,new Condition<DirectoryProjectGenerator>(){
        @Override public boolean value(        DirectoryProjectGenerator generator){
          String name=generator.getName();
          String[] words=NameUtil.nameToWords(name);
          for (          String word : words) {
            if (matcher.matches(word))             return true;
          }
          return false;
        }
      }
);
      myTemplatesList.setModel(new CollectionListModel<DirectoryProjectGenerator>(list));
      if (!list.isEmpty()) {
        if (list.contains(generator)) {
          myTemplatesList.setSelectedValue(generator,true);
        }
 else {
          myTemplatesList.setSelectedIndex(0);
        }
      }
    }
  }
);
}
