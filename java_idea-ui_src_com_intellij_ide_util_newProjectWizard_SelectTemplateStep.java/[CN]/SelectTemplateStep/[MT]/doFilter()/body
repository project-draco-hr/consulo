{
  buildMatcher();
  SimpleNode selectedNode=myTemplatesTree.getSelectedNode();
  final Ref<SimpleNode> node=new Ref<SimpleNode>();
  if (!(selectedNode instanceof TemplateNode) || !matches((TemplateNode)selectedNode)) {
    myTemplatesTree.accept(myTreeBuilder,new SimpleNodeVisitor(){
      @Override public boolean accept(      SimpleNode simpleNode){
        FilteringTreeStructure.FilteringNode wrapper=(FilteringTreeStructure.FilteringNode)simpleNode;
        Object delegate=wrapper.getDelegate();
        if (delegate instanceof TemplateNode && matches((TemplateNode)delegate)) {
          node.set((SimpleNode)delegate);
          return true;
        }
        return false;
      }
    }
);
  }
  myFilter.fireUpdate(node.get(),true,false);
}
