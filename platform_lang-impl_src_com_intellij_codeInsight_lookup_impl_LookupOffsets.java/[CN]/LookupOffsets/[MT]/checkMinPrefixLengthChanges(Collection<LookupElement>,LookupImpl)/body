{
  if (myStableStart)   return;
  if (!lookup.isCalculating() && !items.isEmpty()) {
    myStableStart=true;
  }
  int minPrefixLength=items.isEmpty() ? 0 : Integer.MAX_VALUE;
  for (  final LookupElement item : items) {
    if (!(item instanceof EmptyLookupItem)) {
      minPrefixLength=Math.min(lookup.itemMatcher(item).getPrefix().length(),minPrefixLength);
    }
  }
  int start=getPivotOffset() - minPrefixLength - myAdditionalPrefix.length() + myRemovedPrefix;
  start=Math.max(Math.min(start,myEditor.getDocument().getTextLength()),0);
  if (myLookupStartMarker.isValid() && myLookupStartMarker.getStartOffset() == start && myLookupStartMarker.getEndOffset() == start) {
    return;
  }
  myLookupStartMarker.dispose();
  myLookupStartMarker=createLeftGreedyMarker(start);
  myStartDisposeTrace=null;
}
