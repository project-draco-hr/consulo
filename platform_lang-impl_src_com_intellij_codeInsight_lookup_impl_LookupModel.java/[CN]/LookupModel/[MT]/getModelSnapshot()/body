{
synchronized (lock) {
    final LinkedHashSet<LookupElement> sorted=new LinkedHashSet<LookupElement>(mySortedItems);
    final List<List<LookupElement>> relevanceGroups=ContainerUtil.map(myRelevanceGroups.values(),new Function<SortedList<LookupElement>,List<LookupElement>>(){
      @Override public List<LookupElement> fun(      SortedList<LookupElement> lookupElements){
        return new ArrayList<LookupElement>(lookupElements);
      }
    }
);
    return Pair.create(sorted,relevanceGroups);
  }
}
