{
  try {
    doTest(new PerformAction(){
      public void performAction(      final VirtualFile rootDir,      final VirtualFile rootAfter) throws Exception {
        final PsiClass srcClass=myJavaFacade.findClass("a.A",GlobalSearchScope.allScope(myProject));
        assertTrue("Source class not found",srcClass != null);
        final PsiClass targetClass=myJavaFacade.findClass("b.B",GlobalSearchScope.allScope(myProject));
        assertTrue("Target class not found",targetClass != null);
        final PsiField[] fields=srcClass.getFields();
        assertTrue("No methods found",fields.length > 0);
        final MemberInfo[] membersToMove=new MemberInfo[1];
        final MemberInfo memberInfo=new MemberInfo(fields[0]);
        memberInfo.setChecked(true);
        membersToMove[0]=memberInfo;
        new PushDownProcessor(getProject(),membersToMove,srcClass,new DocCommentPolicy(DocCommentPolicy.ASIS)).run();
      }
    }
);
  }
 catch (  BaseRefactoringProcessor.ConflictsInTestsException e) {
    assertEquals(e.getMessage(),"Class <b><code>b.B</code></b> is package local and will not be accessible from file <b><code>A.form</code></b>.");
    return;
  }
  fail("Conflict was not detected");
}
