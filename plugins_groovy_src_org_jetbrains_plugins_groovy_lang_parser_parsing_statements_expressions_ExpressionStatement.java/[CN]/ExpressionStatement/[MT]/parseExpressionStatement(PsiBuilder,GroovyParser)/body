{
  if (checkForTypeCast(builder,parser))   return CAST_EXPRESSION;
  PsiBuilder.Marker marker=builder.mark();
  final PathExpression.Result result=PathExpression.parseForExprStatement(builder,parser);
  if (result != PathExpression.Result.WRONG_WAY && !TokenSets.SEPARATORS.contains(builder.getTokenType()) && !TokenSets.BINARY_OP_SET.contains(builder.getTokenType()) && !TokenSets.POSTFIX_UNARY_OP_SET.contains(builder.getTokenType())) {
    if (result == PathExpression.Result.CALL_WITH_CLOSURE) {
      marker.drop();
      return PATH_METHOD_CALL;
    }
 else     if (CommandArguments.parseCommandArguments(builder,parser)) {
      marker.done(CALL_EXPRESSION);
      return CALL_EXPRESSION;
    }
  }
  marker.drop();
  return WRONGWAY;
}
