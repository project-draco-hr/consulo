{
  LOG.debug("updateCurrentEvent: " + aComponentOverDragging);
  if (myCurrentDragContext == null)   return;
  myCurrentEvent.updateAction(getDnDActionForPlatformAction(nativeAction));
  myCurrentEvent.setPoint(aPoint);
  myCurrentEvent.setHandlerComponent(aComponentOverDragging);
  boolean samePoint=myCurrentEvent.getPoint().equals(myLastProcessedPoint);
  boolean sameComponent=myCurrentEvent.getCurrentOverComponent().equals(myLastProcessedOverComponent);
  boolean sameAction=(nativeAction == myLastProcessedAction);
  LOG.debug("updateCurrentEvent: point:" + aPoint);
  LOG.debug("updateCurrentEvent: action:" + nativeAction);
  if (samePoint && sameComponent && sameAction) {
    return;
  }
  DnDTarget target=getTarget(aComponentOverDragging);
  DnDTarget immediateTarget=target;
  Component eachParent=aComponentOverDragging;
  final Pair<Image,Point> pair=myCurrentEvent.getUserData(DRAGGED_IMAGE_KEY);
  if (pair != null) {
    target.updateDraggedImage(pair.first,aPoint,pair.second);
  }
  LOG.debug("updateCurrentEvent: action:" + nativeAction);
  while (true) {
    boolean canGoToParent=update(target);
    if (myCurrentEvent.isDropPossible()) {
      if (myCurrentEvent.wasDelegated()) {
        target=myCurrentEvent.getDelegatedTarget();
      }
      break;
    }
    if (!canGoToParent) {
      break;
    }
    eachParent=findAllowedParentComponent(eachParent);
    if (eachParent == null) {
      break;
    }
    target=getTarget(eachParent);
  }
  LOG.debug("updateCurrentEvent: target:" + target);
  LOG.debug("updateCurrentEvent: immediateTarget:" + immediateTarget);
  if (!myCurrentEvent.isDropPossible() && !immediateTarget.equals(target)) {
    update(immediateTarget);
  }
  updateCursor();
  final Container current=(Container)myCurrentEvent.getCurrentOverComponent();
  final Point point=myCurrentEvent.getPointOn(getLayeredPane(current));
  Rectangle inPlaceRect=new Rectangle(point.x - 5,point.y - 5,5,5);
  if (!myCurrentEvent.equals(myLastProcessedEvent)) {
    hideCurrentHighlighter();
  }
  boolean sameTarget=getLastProcessedTarget().equals(target);
  if (sameTarget) {
    if (myCurrentEvent.isDropPossible()) {
      if (!myLastProcessedPoint.equals(myCurrentEvent.getPoint())) {
        if (!Highlighters.isVisibleExcept(TEXT | ERROR_TEXT)) {
          hideCurrentHighlighter();
          restartTimer();
          queueTooltip(myCurrentEvent,getLayeredPane(current),inPlaceRect);
        }
      }
    }
 else {
      if (!myLastProcessedPoint.equals(myCurrentEvent.getPoint())) {
        hideCurrentHighlighter();
        restartTimer();
        queueTooltip(myCurrentEvent,getLayeredPane(current),inPlaceRect);
      }
    }
  }
 else {
    hideCurrentHighlighter();
    getLastProcessedTarget().cleanUpOnLeave();
    myCurrentEvent.clearDropHandler();
    restartTimer();
    if (!myCurrentEvent.isDropPossible()) {
      queueTooltip(myCurrentEvent,getLayeredPane(current),inPlaceRect);
    }
  }
  myLastProcessedTarget=new WeakReference<DnDTarget>(target);
  myLastProcessedPoint=myCurrentEvent.getPoint();
  myLastProcessedOverComponent=myCurrentEvent.getCurrentOverComponent();
  myLastProcessedAction=myCurrentEvent.getAction().getActionId();
  myLastProcessedEvent=(DnDEvent)myCurrentEvent.clone();
}
