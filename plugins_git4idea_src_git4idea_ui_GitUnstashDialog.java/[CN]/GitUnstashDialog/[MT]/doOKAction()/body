{
  VirtualFile root=getGitRoot();
  GitLineHandler h=handler();
  final AtomicBoolean conflict=new AtomicBoolean();
  h.addLineListener(new GitLineHandlerAdapter(){
    public void onLineAvailable(    String line,    Key outputType){
      if (line.contains("Merge conflict")) {
        conflict.set(true);
      }
    }
  }
);
  int rc=GitHandlerUtil.doSynchronously(h,GitBundle.getString("unstash.unstashing"),h.printableCommandLine(),false);
  GitUtil.hardRefresh(root);
  if (conflict.get()) {
    boolean conflictsResolved=new UnstashConflictResolver(myProject,root,getSelectedStash()).merge();
    LOG.info("loadRoot " + root + ", conflictsResolved: "+ conflictsResolved);
  }
 else   if (rc != 0) {
    GitUIUtil.showOperationErrors(myProject,h.errors(),h.printableCommandLine());
  }
  super.doOKAction();
}
