{
  final PsiJavaToken sign=binaryExpression.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  final PsiType type=binaryExpression.getType();
  if (TypeUtils.isJavaLangString(type)) {
    expectedType=null;
  }
 else   if (isArithmeticOperation(tokenType)) {
    expectedType=type;
  }
 else   if (isComparisonOperation(tokenType)) {
    final PsiExpression lhs=binaryExpression.getLOperand();
    final PsiType lhsType=lhs.getType();
    if (ClassUtils.isPrimitive(lhsType)) {
      expectedType=lhsType;
      return;
    }
    final PsiExpression rhs=binaryExpression.getROperand();
    if (rhs == null) {
      expectedType=null;
      return;
    }
    final PsiType rhsType=rhs.getType();
    if (ClassUtils.isPrimitive(rhsType)) {
      expectedType=rhsType;
      return;
    }
    expectedType=null;
  }
 else   if (isBooleanOperation(tokenType)) {
    expectedType=type;
  }
 else {
    expectedType=null;
  }
}
