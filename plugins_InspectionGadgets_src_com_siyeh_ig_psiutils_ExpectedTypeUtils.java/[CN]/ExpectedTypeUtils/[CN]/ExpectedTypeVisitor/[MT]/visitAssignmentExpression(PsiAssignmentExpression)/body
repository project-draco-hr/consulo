{
  final PsiExpression rExpression=assignment.getRExpression();
  final PsiJavaToken operationSign=assignment.getOperationSign();
  final IElementType tokenType=operationSign.getTokenType();
  final PsiExpression lExpression=assignment.getLExpression();
  final PsiType lType=lExpression.getType();
  if (rExpression != null && wrappedExpression.equals(rExpression)) {
    if (lType == null) {
      expectedType=null;
    }
 else     if (TypeUtils.isJavaLangString(lType)) {
      if (JavaTokenType.PLUSEQ.equals(tokenType)) {
        expectedType=rExpression.getType();
      }
 else {
        expectedType=lType;
      }
    }
 else     if (isOperatorAssignmentOperation(tokenType)) {
      if (lType instanceof PsiPrimitiveType) {
        expectedType=lType;
      }
 else {
        expectedType=PsiPrimitiveType.getUnboxedType(lType);
      }
    }
 else {
      expectedType=lType;
    }
  }
 else {
    if (isOperatorAssignmentOperation(tokenType) && !(lType instanceof PsiPrimitiveType)) {
      expectedType=PsiPrimitiveType.getUnboxedType(lType);
    }
 else {
      expectedType=lType;
    }
  }
}
