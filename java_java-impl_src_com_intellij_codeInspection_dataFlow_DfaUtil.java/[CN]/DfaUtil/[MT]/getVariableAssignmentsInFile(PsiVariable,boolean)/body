{
  final Ref<Boolean> modificationRef=Ref.create(Boolean.FALSE);
  final List<PsiExpression> list=ContainerUtil.mapNotNull(ReferencesSearch.search(psiVariable,new LocalSearchScope(new PsiElement[]{psiVariable.getContainingFile()},null,true)).findAll(),new NullableFunction<PsiReference,PsiExpression>(){
    public PsiExpression fun(    final PsiReference psiReference){
      if (modificationRef.get())       return null;
      final PsiElement parent=psiReference.getElement().getParent();
      if (parent instanceof PsiAssignmentExpression) {
        final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)parent;
        final IElementType operation=assignmentExpression.getOperationTokenType();
        if (assignmentExpression.getLExpression() == psiReference) {
          if (JavaTokenType.EQ.equals(operation)) {
            if (!literalsOnly || allOperandsAreLiterals(assignmentExpression.getRExpression())) {
              return assignmentExpression.getRExpression();
            }
 else {
              modificationRef.set(Boolean.TRUE);
            }
          }
 else           if (JavaTokenType.PLUSEQ.equals(operation)) {
            modificationRef.set(Boolean.TRUE);
          }
        }
      }
      return null;
    }
  }
);
  if (modificationRef.get())   return Collections.emptyList();
  if (!literalsOnly || allOperandsAreLiterals(psiVariable.getInitializer())) {
    ContainerUtil.addIfNotNull(psiVariable.getInitializer(),list);
  }
  return list;
}
