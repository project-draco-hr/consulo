{
  Field[] fields=data.getClass().getFields();
  for (  Field field : fields) {
    if (field.getName().indexOf('$') >= 0)     continue;
    int modifiers=field.getModifiers();
    if ((modifiers & Modifier.PUBLIC) == 0 || (modifiers & Modifier.STATIC) != 0)     continue;
    field.setAccessible(true);
    Class type=field.getType();
    if (filter != null && !filter.isAccept(field)) {
      continue;
    }
    String value=null;
    try {
      if (type.isPrimitive()) {
        if (type.equals(byte.class)) {
          value=Byte.toString(field.getByte(data));
        }
 else         if (type.equals(short.class)) {
          value=Short.toString(field.getShort(data));
        }
 else         if (type.equals(int.class)) {
          value=Integer.toString(field.getInt(data));
        }
 else         if (type.equals(long.class)) {
          value=Long.toString(field.getLong(data));
        }
 else         if (type.equals(float.class)) {
          value=Float.toString(field.getFloat(data));
        }
 else         if (type.equals(double.class)) {
          value=Double.toString(field.getDouble(data));
        }
 else         if (type.equals(char.class)) {
          value=String.valueOf(field.getChar(data));
        }
 else         if (type.equals(boolean.class)) {
          value=Boolean.toString(field.getBoolean(data));
        }
 else {
          continue;
        }
      }
 else       if (type.equals(String.class)) {
        value=filterXMLCharacters((String)field.get(data));
      }
 else       if (type.equals(Color.class)) {
        Color color=(Color)field.get(data);
        if (color != null) {
          value=Integer.toString(color.getRGB() & 0xFFFFFF,16);
        }
      }
 else       if (ReflectionUtil.isAssignable(JDOMExternalizable.class,type)) {
        Element element=new Element("option");
        parentNode.addContent(element);
        element.setAttribute("name",field.getName());
        JDOMExternalizable domValue=(JDOMExternalizable)field.get(data);
        if (domValue != null) {
          Element valueElement=new Element("value");
          element.addContent(valueElement);
          domValue.writeExternal(valueElement);
        }
        continue;
      }
 else {
        LOG.debug("Wrong field type: " + type);
        continue;
      }
    }
 catch (    IllegalAccessException e) {
      continue;
    }
    Element element=new Element("option");
    parentNode.addContent(element);
    element.setAttribute("name",field.getName());
    if (value != null) {
      element.setAttribute("value",value);
    }
  }
}
