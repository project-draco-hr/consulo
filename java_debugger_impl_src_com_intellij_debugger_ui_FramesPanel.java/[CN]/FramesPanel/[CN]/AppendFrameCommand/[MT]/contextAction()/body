{
  final StackFrameDescriptorImpl descriptor=new StackFrameDescriptorImpl(myFrame,myTracker);
  descriptor.setContext(myEvaluationContext);
  descriptor.updateRepresentation(myEvaluationContext,DescriptorLabelListener.DUMMY_LISTENER);
  final Project project=getProject();
  DebuggerInvocationUtil.swingInvokeLater(project,new Runnable(){
    public void run(){
      try {
        myFramesListener.setEnabled(false);
synchronized (myFramesList) {
          final DefaultListModel model=myFramesList.getModel();
          if (myFramesLastUpdateTime < myTimestamp) {
            myFramesLastUpdateTime=myTimestamp;
            model.clear();
          }
          if (myTimestamp != myFramesLastUpdateTime) {
            return;
          }
          final boolean shouldHide=!myShowLibraryFrames && !myIsContextFrame && myIndexToInsert != 0 && (descriptor.isSynthetic() || descriptor.isInLibraryContent());
          if (!shouldHide) {
            myCounter.markCalculated(myIndexToInsert);
            final int actualIndex=myCounter.getActualIndex(myIndexToInsert);
            model.insertElementAt(descriptor,actualIndex);
            if (myIsContextFrame) {
              myFramesList.setSelectedIndex(actualIndex);
            }
          }
        }
      }
  finally {
        myFramesListener.setEnabled(true);
      }
    }
  }
);
}
