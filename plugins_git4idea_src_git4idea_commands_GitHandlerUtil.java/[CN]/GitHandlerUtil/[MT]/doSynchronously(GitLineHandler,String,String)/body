{
  final ProgressManager manager=ProgressManager.getInstance();
  final ArrayList<String> errorLines=new ArrayList<String>();
  handler.addLineListener(new GitLineHandlerListenerBase(handler,operationName){
    protected String getErrorText(){
      StringBuilder builder=new StringBuilder();
      for (      String l : errorLines) {
        if (builder.length() > 0) {
          builder.append('\n');
        }
        builder.append(l);
      }
      return builder.toString().trim();
    }
    public void onLineAvaiable(    final String line,    final Key outputType){
      if (isErrorLine(line.trim())) {
        errorLines.add(line);
      }
      final ProgressIndicator pi=manager.getProgressIndicator();
      if (pi != null) {
        pi.setText(line);
      }
    }
  }
);
  runHandlerSynchronously(handler,operationTitle,manager);
  if (!handler.isStarted()) {
    return -1;
  }
  return handler.getExitCode();
}
