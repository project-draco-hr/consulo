{
  super.visitBinaryExpression(expression);
  final PsiJavaToken sign=expression.getOperationSign();
  if (sign == null) {
    return;
  }
  final String operator=sign.getText();
  if (!ComparisonUtils.isComparison(operator)) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  if (lhs == null) {
    return;
  }
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return;
  }
  if (!PsiUtil.isConstantExpression(rhs) || PsiUtil.isConstantExpression(lhs)) {
    return;
  }
  registerError(expression);
}
