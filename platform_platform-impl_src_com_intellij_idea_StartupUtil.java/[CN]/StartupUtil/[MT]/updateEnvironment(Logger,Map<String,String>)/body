{
  try {
    Class<?> envClass=Class.forName("java.lang.ProcessEnvironment");
    Field theEnvironment=envClass.getDeclaredField("theEnvironment");
    theEnvironment.setAccessible(true);
    Class<?> varClass=Class.forName("java.lang.ProcessEnvironment$Variable");
    Method makeVar=varClass.getDeclaredMethod("valueOf",byte[].class);
    makeVar.setAccessible(true);
    Class<?> valClass=Class.forName("java.lang.ProcessEnvironment$Value");
    Method makeVal=valClass.getDeclaredMethod("valueOf",byte[].class);
    makeVal.setAccessible(true);
    Map envMap=(Map)theEnvironment.get(null);
    for (    Map.Entry<String,String> entry : envDiff.entrySet()) {
      Object name=makeVar.invoke(null,entry.getKey().getBytes());
      Object value=makeVal.invoke(null,entry.getValue().getBytes());
      envMap.put(name,value);
    }
  }
 catch (  Throwable t) {
    log.warn("can't update environment",t);
  }
}
