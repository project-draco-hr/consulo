{
  File ideTempDir=new File(PathManager.getTempPath());
  if (!(ideTempDir.mkdirs() || ideTempDir.exists())) {
    throw new RuntimeException("Unable to create temp directory '" + ideTempDir + "'");
  }
  String javaTempDir=System.getProperty(JAVA_IO_TEMP_DIR);
  try {
    System.setProperty(JAVA_IO_TEMP_DIR,ideTempDir.getPath());
    if (System.getProperty("jna.nosys") == null && System.getProperty("jna.nounpack") == null) {
      System.setProperty("jna.nosys","true");
      System.setProperty("jna.nounpack","false");
    }
    try {
      final long t=System.currentTimeMillis();
      log.info("JNA library loaded (" + (Native.POINTER_SIZE * 8) + "-bit) in "+ (System.currentTimeMillis() - t)+ " ms");
    }
 catch (    Throwable t) {
      logError(log,"Unable to load JNA library",t);
    }
  }
  finally {
    System.setProperty(JAVA_IO_TEMP_DIR,javaTempDir);
  }
  if (SystemInfo.isWin2kOrNewer) {
    IdeaWin32.isAvailable();
  }
  if (SystemInfo.isWin2kOrNewer && !Main.isHeadless()) {
    try {
      UrlClassLoader.loadPlatformLibrary("focusKiller");
      log.info("Using \"FocusKiller\" library to prevent focus stealing.");
    }
 catch (    Throwable t) {
      log.info("\"FocusKiller\" library not found or there were problems loading it.",t);
    }
  }
}
