{
  String configPath=PathManager.getConfigPath();
  PathManager.ensureConfigFolderExists();
  if (!new File(configPath).isDirectory()) {
    String message="Config path '" + configPath + "' is invalid.\n"+ "If you have modified the '"+ PathManager.PROPERTY_CONFIG_PATH+ "' property please make sure it is correct,\n"+ "otherwise please re-install the IDE.";
    Main.showMessage("Invalid Config Path",message,true);
    return false;
  }
  String systemPath=PathManager.getSystemPath();
  if (!new File(systemPath).isDirectory()) {
    String message="System path '" + systemPath + "' is invalid.\n"+ "If you have modified the '"+ PathManager.PROPERTY_SYSTEM_PATH+ "' property please make sure it is correct,\n"+ "otherwise please re-install the IDE.";
    Main.showMessage("Invalid System Path",message,true);
    return false;
  }
  boolean tempAccessible=false;
  File ideTempDir=new File(PathManager.getTempPath());
  if (ideTempDir.isDirectory() || ideTempDir.mkdirs()) {
    File ideTempFile=new File(ideTempDir,"idea_tmp_check.sh");
    try {
      FileUtil.writeToFile(ideTempFile,"#!/bin/sh\nexit 0");
      boolean tempExecutable=!SystemInfo.isUnix || SystemInfo.isMac;
      if (!tempExecutable) {
        tempExecutable=ideTempFile.setExecutable(true,true) && ideTempDir.canExecute() && new ProcessBuilder(ideTempFile.getAbsolutePath()).start().waitFor() == 0;
      }
      tempAccessible=tempExecutable && ideTempFile.delete();
    }
 catch (    Exception ignored) {
    }
  }
  if (!tempAccessible) {
    String message="Temp directory '" + ideTempDir + "' is inaccessible.\n"+ "If you have modified the '"+ PathManager.PROPERTY_SYSTEM_PATH+ "' property please make sure it is correct,\n"+ "otherwise please re-install the IDE.";
    Main.showMessage("Invalid System Path",message,true);
    return false;
  }
  return true;
}
