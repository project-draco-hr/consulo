{
  PsiMethod prototype;
  try {
    PsiElementFactory factory=PsiManager.getInstance(myProject).getElementFactory();
    prototype=factory.createMethod(myNameField.getText().trim(),myReturnType);
    if (myTypeParameterList != null)     prototype.getTypeParameterList().replace(myTypeParameterList);
    for (int idx=0; idx < myVariableData.length; idx++) {
      ParameterTablePanel.VariableData data=myVariableData[idx];
      if (data.passAsParameter) {
        prototype.getParameterList().add(factory.createParameter(data.name,data.variable.getType()));
      }
    }
    prototype.getModifierList().setModifierProperty(PsiModifier.PRIVATE,true);
  }
 catch (  IncorrectOperationException e) {
    prototype=null;
  }
  return RefactoringMessageUtil.checkMethodConflicts(myTargetClass,null,prototype);
}
