{
  if (myConsoleView == null) {
    return;
  }
  if (level == MavenLogUtil.LEVEL_AUTO) {
    level=MavenLogUtil.getLevel(string);
    if (isNotSuppressed(level)) {
      myConsoleView.print(string,output);
    }
  }
 else {
    myConsoleView.print(MavenLogUtil.composeLine(level,string),output);
  }
  if (level == MavenLogUtil.LEVEL_FATAL) {
    myConsoleView.setOutputPaused(false);
  }
  if (throwable != null) {
    String message=throwable.getMessage();
    if (throwable instanceof AbstractMojoExecutionException) {
      String longMessage=((AbstractMojoExecutionException)throwable).getLongMessage();
      if (longMessage != null) {
        if (message == null) {
          message=longMessage;
        }
 else {
          message+=MavenLogUtil.LINE_SEPARATOR + MavenLogUtil.LINE_SEPARATOR + longMessage;
        }
      }
    }
    if (message != null) {
      message+=MavenLogUtil.LINE_SEPARATOR;
      myConsoleView.print(MavenLogUtil.LINE_SEPARATOR + MavenLogUtil.composeLine(MavenLogUtil.LEVEL_INFO,message),output);
    }
    if (myPrintStrackTrace) {
      StringWriter writer=new StringWriter();
      PrintWriter printWriter=new PrintWriter(writer);
      try {
        throwable.printStackTrace(printWriter);
        myConsoleView.print(writer.getBuffer().toString(),ConsoleViewContentType.ERROR_OUTPUT);
      }
  finally {
        printWriter.close();
      }
    }
  }
}
