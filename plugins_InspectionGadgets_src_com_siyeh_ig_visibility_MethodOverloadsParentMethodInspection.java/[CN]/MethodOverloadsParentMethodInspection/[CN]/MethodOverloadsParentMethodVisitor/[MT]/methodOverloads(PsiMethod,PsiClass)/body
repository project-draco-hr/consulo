{
  if (methodOverrides(method,ancestorClass)) {
    return false;
  }
  final String methName=method.getName();
  final PsiParameterList parameterList=method.getParameterList();
  final PsiParameter[] parameters=parameterList.getParameters();
  final PsiMethod[] methods=ancestorClass.findMethodsByName(methName,false);
  for (  final PsiMethod testMethod : methods) {
    if (!testMethod.hasModifierProperty(PsiModifier.PRIVATE) && !testMethod.hasModifierProperty(PsiModifier.STATIC) && !isOverriddenInClass(testMethod,method.getContainingClass())) {
      final PsiParameterList testParameterList=testMethod.getParameterList();
      final PsiParameter[] testParameters=testParameterList.getParameters();
      if (testParameters.length == parameters.length && !parametersAreCompatible(parameters,testParameters)) {
        return true;
      }
    }
  }
  return false;
}
