{
  super(project,true);
  myProject=project;
  myParentClass=parentClass;
  myInitializerExpression=initializerExpression;
  myLocalVariable=localVariable;
  myInvokedOnDeclaration=isInvokedOnDeclaration;
  myOccurrences=occurrences;
  myOccurrencesCount=occurrences.length;
  myTargetClass=targetClass;
  myTypeSelectorManager=typeSelectorManager;
  myDestinationClass=null;
  setTitle(IntroduceConstantHandler.REFACTORING_NAME);
  myCodeStyleManager=JavaCodeStyleManager.getInstance(myProject);
  init();
  final String ourLastVisibility=RefactoringSettings.getInstance().INTRODUCE_CONSTANT_VISIBILITY;
  if (PsiModifier.PUBLIC.equals(ourLastVisibility)) {
    myRbPublic.setSelected(true);
  }
 else   if (PsiModifier.PROTECTED.equals(ourLastVisibility)) {
    myRbProtected.setSelected(true);
  }
 else   if (PsiModifier.PACKAGE_LOCAL.equals(ourLastVisibility)) {
    myRbpackageLocal.setSelected(true);
  }
 else   if (PsiModifier.PRIVATE.equals(ourLastVisibility)) {
    myRbPrivate.setSelected(true);
  }
 else {
    myRbPrivate.setSelected(true);
  }
  updateVisibilityPanel();
}
