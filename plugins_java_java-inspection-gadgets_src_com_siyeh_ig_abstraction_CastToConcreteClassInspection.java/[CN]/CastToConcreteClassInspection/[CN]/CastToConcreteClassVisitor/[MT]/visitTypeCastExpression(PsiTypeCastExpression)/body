{
  super.visitTypeCastExpression(expression);
  final PsiTypeElement typeElement=expression.getCastType();
  if (typeElement == null) {
    return;
  }
  if (!ConcreteClassUtil.typeIsConcreteClass(typeElement,ignoreAbstractClasses)) {
    return;
  }
  if (ignoreInEquals) {
    final PsiMethod method=PsiTreeUtil.getParentOfType(expression,PsiMethod.class,true,PsiClass.class);
    if (MethodUtils.isEquals(method)) {
      return;
    }
  }
  registerError(typeElement,typeElement.getType());
}
