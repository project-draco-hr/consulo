{
  final Module intellijOwnerModule=findIntellijModule(ownerModuleName);
  if (intellijOwnerModule == null) {
    return null;
  }
  RootPolicy<ModuleOrderEntry> visitor=new RootPolicy<ModuleOrderEntry>(){
    @Override public ModuleOrderEntry visitModuleOrderEntry(    ModuleOrderEntry intellijDependency,    ModuleOrderEntry value){
      if (dependencyModuleName.equals(intellijDependency.getModuleName())) {
        return intellijDependency;
      }
      return value;
    }
  }
;
  for (  OrderEntry orderEntry : myFacade.getOrderEntries(intellijOwnerModule)) {
    final ModuleOrderEntry result=orderEntry.accept(visitor,null);
    if (result != null) {
      return result;
    }
  }
  return null;
}
