{
  if (branchConfig == null) {
    return null;
  }
  String branchName=branchConfig.getName();
  String remoteName=branchConfig.getBean().getRemote();
  String mergeName=branchConfig.getBean().getMerge();
  String rebaseName=branchConfig.getBean().getRebase();
  if (StringUtil.isEmptyOrSpaces(mergeName) && StringUtil.isEmptyOrSpaces(rebaseName)) {
    LOG.info("No branch." + branchName + ".merge/rebase item in the .git/config");
    return null;
  }
  if (StringUtil.isEmptyOrSpaces(remoteName)) {
    LOG.info("No branch." + branchName + ".remote item in the .git/config");
    return null;
  }
  boolean merge=mergeName != null;
  String remoteBranch=(merge ? mergeName : rebaseName);
  GitRemote branchRemote=null;
  for (  GitRemote remote : remotes) {
    if (remote.getName().equals(remoteName)) {
      branchRemote=remote;
      break;
    }
  }
  if (branchRemote == null) {
    LOG.info("No remote found with name " + remoteName);
    return null;
  }
  return new GitBranchTrackInfo(branchName,branchRemote,remoteBranch,merge);
}
