{
  Collection<String> urls=new ArrayList<String>(remote.getUrls().size());
  Collection<String> pushUrls=new ArrayList<String>();
  for (  final String remoteUrl : remote.getUrls()) {
    boolean substituted=false;
    for (    Url url : urlSections) {
      String insteadOf=url.getInsteadOf();
      String pushInsteadOf=url.getPushInsteadOf();
      if (insteadOf != null && remoteUrl.startsWith(insteadOf)) {
        urls.add(substituteUrl(remoteUrl,url,insteadOf));
        substituted=true;
        break;
      }
 else       if (pushInsteadOf != null && remoteUrl.startsWith(pushInsteadOf)) {
        if (remote.getPushUrls().isEmpty()) {
          pushUrls.add(substituteUrl(remoteUrl,url,pushInsteadOf));
        }
        urls.add(remoteUrl);
        substituted=true;
        break;
      }
    }
    if (!substituted) {
      urls.add(remoteUrl);
    }
  }
  for (  final String remotePushUrl : remote.getPushUrls()) {
    boolean substituted=false;
    for (    Url url : urlSections) {
      String insteadOf=url.getInsteadOf();
      if (insteadOf != null && remotePushUrl.startsWith(insteadOf)) {
        pushUrls.add(substituteUrl(remotePushUrl,url,insteadOf));
        substituted=true;
        break;
      }
    }
    if (!substituted) {
      pushUrls.add(remotePushUrl);
    }
  }
  return new UrlsAndPushUrls(urls,pushUrls);
}
