{
  Ini ini=new Ini();
  ini.getConfig().setMultiOption(true);
  ini.getConfig().setTree(false);
  try {
    ini.load(configFile);
  }
 catch (  IOException e) {
    throw new GitRepoStateException("Couldn't load .git/config file at " + configFile.getPath(),e);
  }
  IdeaPluginDescriptor plugin=PluginManager.getPlugin(PluginManager.getPluginByClassName(GitConfig.class.getName()));
  ClassLoader classLoader=plugin == null ? null : plugin.getPluginClassLoader();
  Collection<Remote> remotes=new ArrayList<Remote>();
  Collection<Url> urls=new ArrayList<Url>();
  for (  Map.Entry<String,Profile.Section> stringSectionEntry : ini.entrySet()) {
    String sectionName=stringSectionEntry.getKey();
    Profile.Section section=stringSectionEntry.getValue();
    if (sectionName.startsWith("remote")) {
      Remote remote=parseRemoteSection(sectionName,section,classLoader);
      if (remote != null) {
        remotes.add(remote);
      }
    }
 else     if (sectionName.startsWith("url")) {
      Url url=parseUrlSection(sectionName,section,classLoader);
      if (url != null) {
        urls.add(url);
      }
    }
  }
  Collection<GitRemote> gitRemotes=makeGitRemotes(remotes,urls);
  return new GitConfig(gitRemotes);
}
