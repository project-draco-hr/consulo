{
  XmlNSDescriptorImpl responsibleDescriptor=this;
  if (namespace != null && namespace.length() != 0 && !namespace.equals(getDefaultNamespace())) {
    final XmlNSDescriptor nsDescriptor=rootTag.getNSDescriptor(namespace,true);
    if (nsDescriptor instanceof XmlNSDescriptorImpl) {
      responsibleDescriptor=(XmlNSDescriptorImpl)nsDescriptor;
    }
  }
  if (responsibleDescriptor != this) {
    return responsibleDescriptor.findTypeDescriptor(XmlUtil.findLocalNameByQualifiedName(name));
  }
  if (rootTag == null)   return null;
  if (visited != null) {
    if (visited.contains(rootTag))     return null;
    visited.add(rootTag);
  }
  final Pair<QNameKey,XmlTag> pair=new Pair<QNameKey,XmlTag>(new QNameKey(name,namespace),rootTag);
  final CachedValue<TypeDescriptor> descriptor=myTypesMap.get(pair);
  if (descriptor != null) {
    TypeDescriptor value=descriptor.getValue();
    if (value == null || (value instanceof ComplexTypeDescriptor && ((ComplexTypeDescriptor)value).getDeclaration().isValid()))     return value;
  }
  XmlTag[] tags=rootTag.getSubTags();
  if (visited == null) {
    visited=new HashSet<XmlTag>(1);
    visited.add(rootTag);
  }
  return doFindIn(tags,name,namespace,pair,rootTag,visited);
}
