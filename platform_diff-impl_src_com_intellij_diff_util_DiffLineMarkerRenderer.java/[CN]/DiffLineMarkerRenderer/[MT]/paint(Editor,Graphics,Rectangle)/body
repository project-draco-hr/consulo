{
  EditorGutterComponentEx gutter=((EditorEx)editor).getGutterComponentEx();
  Graphics2D g2=(Graphics2D)g;
  int x1=0;
  int x2=x1 + gutter.getWidth();
  int y1, y2;
  if (myEmptyRange && myLastLine) {
    y1=DiffDrawUtil.lineToY(editor,DiffUtil.getLineCount(editor.getDocument()));
    y2=y1;
  }
 else {
    int startLine=editor.getDocument().getLineNumber(myHighlighter.getStartOffset());
    int endLine=editor.getDocument().getLineNumber(myHighlighter.getEndOffset()) + 1;
    y1=DiffDrawUtil.lineToY(editor,startLine);
    y2=myEmptyRange ? y1 : DiffDrawUtil.lineToY(editor,endLine);
  }
  if (myHideWithoutLineNumbers && !editor.getSettings().isLineNumbersShown()) {
    x1=gutter.getWhitespaceSeparatorOffset();
  }
 else {
    int annotationsOffset=gutter.getAnnotationsAreaOffset();
    int annotationsWidth=gutter.getAnnotationsAreaWidth();
    if (annotationsWidth != 0) {
      drawMarker(editor,g2,x1,annotationsOffset,y1,y2,false);
      x1=annotationsOffset + annotationsWidth;
    }
  }
  if (myIgnoredFoldingOutline) {
    int xOutline=gutter.getWhitespaceSeparatorOffset();
    drawMarker(editor,g2,xOutline,x2,y1,y2,true);
    drawMarker(editor,g2,x1,xOutline,y1,y2,false);
  }
 else {
    drawMarker(editor,g2,x1,x2,y1,y2,false);
  }
}
