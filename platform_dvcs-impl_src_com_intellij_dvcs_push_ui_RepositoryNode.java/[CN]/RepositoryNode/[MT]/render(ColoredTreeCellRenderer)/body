{
  int repoFixedWidth=120;
  int borderHOffset=myRepositoryPanel.getHBorderOffset(renderer);
  if (myLoading.get()) {
    renderer.setIcon(myLoadingIcon);
    renderer.setIconOnTheRight(false);
    int checkBoxWidth=myRepositoryPanel.getCheckBoxWidth();
    repoFixedWidth+=checkBoxWidth;
    if (myCheckBoxHGap > 0) {
      renderer.append("");
      renderer.appendFixedTextFragmentWidth(checkBoxWidth + renderer.getIconTextGap() + borderHOffset);
    }
  }
 else {
    if (myCheckBoxHGap <= 0) {
      renderer.append("");
      renderer.appendFixedTextFragmentWidth(myRepositoryPanel.calculateRendererShiftH(renderer));
    }
  }
  SimpleTextAttributes repositoryDetailsTextAttributes=PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.REGULAR_ATTRIBUTES,isChecked());
  renderer.append(getRepoName(renderer,repoFixedWidth),repositoryDetailsTextAttributes);
  renderer.appendFixedTextFragmentWidth(repoFixedWidth);
  renderer.append(myRepositoryPanel.getSourceName(),repositoryDetailsTextAttributes);
  renderer.append(myRepositoryPanel.getArrow(),repositoryDetailsTextAttributes);
  PushTargetPanel pushTargetPanel=myRepositoryPanel.getTargetPanel();
  pushTargetPanel.render(renderer,renderer.getTree().isPathSelected(TreeUtil.getPathFromRoot(this)),isChecked());
  int maxSize=Math.max(myRepositoryPanel.getCheckBoxHeight(),myLoadingIcon.getIconHeight());
  int rendererHeight=renderer.getPreferredSize().height;
  if (maxSize > rendererHeight) {
    if (myCheckBoxVGap > 0 && isLoading() || myCheckBoxVGap < 0 && !isLoading()) {
      int vShift=maxSize - rendererHeight;
      renderer.setBorder(new EmptyBorder((vShift + 1) / 2,0,(vShift) / 2,0));
    }
  }
}
