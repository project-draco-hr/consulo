{
  super(model);
  JTableHeader tableHeader=getTableHeader();
  tableHeader.setDefaultRenderer(new TableHeaderRenderer(model));
  tableHeader.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      int column=getTableHeader().getColumnModel().getColumnIndexAtX(e.getX());
      if (model.sortableProvider.getSortColumn() == column) {
        if (model.sortableProvider.getSortOrder() == SortableColumnModel.SORT_DESCENDING)         model.sortableProvider.setSortOrder(SortableColumnModel.SORT_ASCENDING);
 else         model.sortableProvider.setSortOrder(SortableColumnModel.SORT_DESCENDING);
      }
 else {
        model.sortableProvider.setSortOrder(SortableColumnModel.SORT_ASCENDING);
        model.sortableProvider.setSortColumn(column);
      }
      model.sortByColumn(column);
      getTableHeader().updateUI();
    }
  }
);
  tableHeader.setReorderingAllowed(false);
  for (int i=0; i < model.getColumnCount(); i++) {
    TableColumn column=getColumnModel().getColumn(i);
    column.setCellRenderer(model.getColumnInfos()[i].getRenderer(null));
  }
  setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  setShowGrid(false);
}
