{
  if (LOG.isDebugEnabled()) {
    LOG.debug("enter: unregisterToolWindow(" + id + ")");
  }
  ApplicationManager.getApplication().assertIsDispatchThread();
  if (!myLayout.isToolWindowRegistered(id)) {
    throw new IllegalArgumentException("window with id=\"" + id + "\" isn't registered");
  }
  final WindowInfo info=getInfo(id);
  final ToolWindowEx toolWindow=(ToolWindowEx)getToolWindow(id);
  myLayout.unregister(id);
  final ArrayList commandsList=new ArrayList();
  if (info.isVisible()) {
    info.setVisible(false);
    if (info.isFloating()) {
      appendRemoveFloatingDecoratorCmd(info,commandsList);
    }
 else {
      appendRemoveDecoratorCmd(id,false,commandsList);
    }
  }
  appendRemoveButtonCmd(id,commandsList);
  appendApplyWindowInfoCmd(info,commandsList);
  execute(commandsList);
  toolWindow.removePropertyChangeListener(myToolWindowPropertyChangeListener);
  myActiveStack.remove(id,true);
  mySideStack.remove(id);
  final StripeButton button=getStripeButton(id);
  button.dispose();
  myId2StripeButton.remove(id);
  myId2FocusWatcher.remove(id);
  final InternalDecorator decorator=getInternalDecorator(id);
  decorator.dispose();
  decorator.removeInternalDecoratorListener(myInternalDecoratorListener);
  myId2InternalDecorator.remove(id);
}
