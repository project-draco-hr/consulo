{
  if (LOG.isDebugEnabled()) {
    LOG.debug("enter: installToolWindow(" + id + ","+ component+ ","+ anchor+ "\")");
  }
  ApplicationManager.getApplication().assertIsDispatchThread();
  if (id == null) {
    throw new IllegalArgumentException("window id cannot be null");
  }
  if (component == null) {
    throw new IllegalArgumentException("component cannot be null");
  }
  if (anchor == null) {
    throw new IllegalArgumentException("anchor cannot be null");
  }
  if (myLayout.isToolWindowRegistered(id)) {
    throw new IllegalArgumentException("window with id=\"" + id + "\" is already registered");
  }
  final WindowInfo info=myLayout.register(id,anchor);
  final boolean wasActive=info.isActive();
  final boolean wasVisible=info.isVisible();
  info.setActive(false);
  info.setVisible(false);
  final ToolWindowImpl toolWindow=new ToolWindowImpl(this,id,component);
  final InternalDecorator decorator=new InternalDecorator(myProject,info.copy(),toolWindow);
  myId2InternalDecorator.put(id,decorator);
  decorator.addInternalDecoratorListener(myInternalDecoratorListener);
  toolWindow.addPropertyChangeListener(myToolWindowPropertyChangeListener);
  myId2FocusWatcher.put(id,new ToolWindowFocusWatcher(toolWindow));
  final StripeButton button=new StripeButton(decorator);
  myId2StripeButton.put(id,button);
  final ArrayList<FinalizableCommand> commandsList=new ArrayList<FinalizableCommand>();
  appendAddButtonCmd(button,info,commandsList);
  if (!info.isAutoHide() && (info.isDocked() || info.isFloating())) {
    if (wasActive) {
      activateToolWindowImpl(info.getId(),commandsList);
    }
 else     if (wasVisible) {
      showToolWindowImpl(info.getId(),false,commandsList);
    }
  }
 else   if (wasActive) {
    activateEditorComponentImpl(commandsList);
  }
  execute(commandsList);
  fireToolWindowRegistered(id);
  return toolWindow;
}
