{
  if (myFrame == null) {
    return;
  }
  final String[] ids=getToolWindowIds();
  for (int i=0; i < ids.length; i++) {
    final String id=ids[i];
    final WindowInfo info=getInfo(id);
    if (info.isVisible()) {
      final InternalDecorator decorator=getInternalDecorator(id);
      LOG.assertTrue(decorator != null);
      decorator.fireResized();
    }
  }
  final Rectangle frameBounds=myFrame.getBounds();
  final Element frameElement=new Element("frame");
  element.addContent(frameElement);
  frameElement.setAttribute("x",Integer.toString(frameBounds.x));
  frameElement.setAttribute("y",Integer.toString(frameBounds.y));
  frameElement.setAttribute("width",Integer.toString(frameBounds.width));
  frameElement.setAttribute("height",Integer.toString(frameBounds.height));
  frameElement.setAttribute("extended-state",Integer.toString(myFrame.getExtendedState()));
  final Element editorElement=new Element("editor");
  editorElement.setAttribute("active",myEditorComponentActive ? Boolean.TRUE.toString() : Boolean.FALSE.toString());
  element.addContent(editorElement);
  final Element layoutElement=new Element(DesktopLayout.TAG);
  element.addContent(layoutElement);
  myLayout.writeExternal(layoutElement);
}
