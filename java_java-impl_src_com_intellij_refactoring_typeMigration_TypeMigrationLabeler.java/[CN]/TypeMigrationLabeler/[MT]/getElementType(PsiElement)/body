{
  if (resolved instanceof PsiVariable) {
    return ((PsiVariable)resolved).getType();
  }
 else {
    if (resolved instanceof PsiMethod) {
      return (((PsiMethod)resolved).getReturnType());
    }
 else     if (resolved instanceof PsiExpression) {
      return (((PsiExpression)resolved).getType());
    }
 else     if (resolved instanceof PsiReferenceParameterList) {
      final PsiElement parent=resolved.getParent();
      LOG.assertTrue(parent instanceof PsiJavaCodeReferenceElement);
      final PsiClass psiClass=(PsiClass)((PsiJavaCodeReferenceElement)parent).resolve();
      return JavaPsiFacade.getElementFactory(parent.getProject()).createType(psiClass,TypeConversionUtil.getSuperClassSubstitutor(psiClass,PsiTreeUtil.getParentOfType(parent,PsiClass.class),PsiSubstitutor.EMPTY));
    }
 else     if (resolved instanceof PsiClass) {
      return JavaPsiFacade.getElementFactory(resolved.getProject()).createType((PsiClass)resolved,PsiSubstitutor.EMPTY);
    }
  }
  LOG.error("should not happen: " + resolved.getClass());
  return null;
}
