{
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<packaging>pom</packaging>"+ "<version>1</version>"+ "<modules>"+ "  <module>m1</module>"+ "  <module>m2</module>"+ "</modules>");
  createModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>"+ "<build>"+ " <extensions>"+ "   <extension>"+ "     <groupId>xxx</groupId>"+ "     <artifactId>xxx</artifactId>"+ "     <version>1</version>"+ "    </extension>"+ "  </extensions>"+ "</build>");
  createModulePom("m2","<groupId>test</groupId>" + "<artifactId>m2</artifactId>" + "<version>1</version>"+ "<build>"+ " <extensions>"+ "   <extension>"+ "     <groupId>yyy</groupId>"+ "     <artifactId>yyy</artifactId>"+ "     <version>1</version>"+ "    </extension>"+ "   <extension>"+ "     <groupId>zzz</groupId>"+ "     <artifactId>zzz</artifactId>"+ "     <version>1</version>"+ "    </extension>"+ "  </extensions>"+ "</build>");
  importProject();
  assertEquals(myResolutionProblems.toString(),3,myResolutionProblems.size());
  File f1=myResolutionProblems.get(0).first;
  File f2=myResolutionProblems.get(1).first;
  File f3=myResolutionProblems.get(2).first;
  assertEquals(new File(myProjectPom.getPath()),f1);
  assertTrue(f2.toString(),f2.getPath().endsWith("m1\\pom.xml"));
  assertTrue(f3.toString(),f3.getPath().endsWith("m2\\pom.xml"));
  assertOrderedElementsAreEqual(myResolutionProblems.get(0).second,"Unresolved build extension: xxx:xxx:jar:1","Unresolved build extension: yyy:yyy:jar:1","Unresolved build extension: zzz:zzz:jar:1");
  assertOrderedElementsAreEqual(myResolutionProblems.get(1).second,"Unresolved build extension: xxx:xxx:jar:1");
  assertOrderedElementsAreEqual(myResolutionProblems.get(2).second,"Unresolved build extension: yyy:yyy:jar:1","Unresolved build extension: zzz:zzz:jar:1");
}
