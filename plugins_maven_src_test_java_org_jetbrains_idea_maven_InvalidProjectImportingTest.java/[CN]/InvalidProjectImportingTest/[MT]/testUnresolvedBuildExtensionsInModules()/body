{
  createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<packaging>pom</packaging>"+ "<version>1</version>"+ "<modules>"+ "  <module>m1</module>"+ "  <module>m2</module>"+ "</modules>");
  createModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>"+ "<build>"+ " <extensions>"+ "   <extension>"+ "     <groupId>xxx</groupId>"+ "     <artifactId>xxx</artifactId>"+ "     <version>1</version>"+ "    </extension>"+ "  </extensions>"+ "</build>");
  createModulePom("m2","<groupId>test</groupId>" + "<artifactId>m2</artifactId>" + "<version>1</version>"+ "<build>"+ " <extensions>"+ "   <extension>"+ "     <groupId>yyy</groupId>"+ "     <artifactId>yyy</artifactId>"+ "     <version>1</version>"+ "    </extension>"+ "   <extension>"+ "     <groupId>zzz</groupId>"+ "     <artifactId>zzz</artifactId>"+ "     <version>1</version>"+ "    </extension>"+ "  </extensions>"+ "</build>");
  importProject();
  MavenProjectModel.Node root=getRootProjects().get(0);
  assertTrue(root.isValid());
  assertProblems(root);
  assertProblems(root.getSubProjects().get(0),"Unresolved build extension: xxx:xxx:jar:1:runtime");
  assertProblems(root.getSubProjects().get(1),"Unresolved build extension: yyy:yyy:jar:1:runtime","Unresolved build extension: zzz:zzz:jar:1:runtime");
}
