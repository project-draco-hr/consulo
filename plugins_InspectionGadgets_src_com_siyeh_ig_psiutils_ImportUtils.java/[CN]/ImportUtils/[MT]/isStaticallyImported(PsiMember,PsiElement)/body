{
  final PsiClass memberClass=member.getContainingClass();
  if (memberClass == null) {
    return false;
  }
  final PsiClass containingClass=PsiTreeUtil.getParentOfType(context,PsiClass.class);
  if (InheritanceUtil.isInheritorOrSelf(containingClass,memberClass,true)) {
    return false;
  }
  final PsiFile psiFile=context.getContainingFile();
  if (!(psiFile instanceof PsiJavaFile)) {
    return false;
  }
  final PsiJavaFile javaFile=(PsiJavaFile)psiFile;
  final PsiImportList importList=javaFile.getImportList();
  if (importList == null) {
    return false;
  }
  final String memberName=member.getName();
  final PsiImportStatementBase existingImportStatement=importList.findSingleImportStatement(memberName);
  if (existingImportStatement instanceof PsiImportStaticStatement) {
    final PsiClass importClass=((PsiImportStaticStatement)existingImportStatement).resolveTargetClass();
    if (InheritanceUtil.isInheritorOrSelf(importClass,memberClass,true)) {
      return true;
    }
  }
  final String memberClassName=memberClass.getQualifiedName();
  final PsiImportStaticStatement onDemandImportStatement=findOnDemandImportStaticStatement(importList,memberClassName);
  if (onDemandImportStatement != null) {
    if (!hasOnDemandImportStaticConflict(memberClassName,memberName,context)) {
      return true;
    }
  }
  return false;
}
