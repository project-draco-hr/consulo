{
  final PsiImportList imports=file.getImportList();
  if (imports == null) {
    return false;
  }
  final PsiImportStatement[] importStatements=imports.getImportStatements();
  final int lastDotIndex=fqName.lastIndexOf((int)'.');
  final String shortName=fqName.substring(lastDotIndex + 1);
  final String packageName=fqName.substring(0,lastDotIndex);
  for (  final PsiImportStatement importStatement : importStatements) {
    if (importStatement.isOnDemand()) {
      final PsiJavaCodeReferenceElement ref=importStatement.getImportReference();
      if (ref == null) {
        continue;
      }
      final String packageText=ref.getText();
      if (packageText.equals(packageName)) {
        continue;
      }
      final PsiElement element=ref.resolve();
      if (element != null && element instanceof PsiPackage) {
        final PsiPackage aPackage=(PsiPackage)element;
        final PsiClass[] classes=aPackage.getClasses();
        for (        final PsiClass aClass : classes) {
          final String className=aClass.getName();
          if (shortName.equals(className)) {
            return true;
          }
        }
      }
    }
  }
  if (!"java.lang".equals(packageName)) {
    final PsiManager manager=file.getManager();
    final PsiPackage javaLangPackage=manager.findPackage("java.lang");
    if (javaLangPackage == null) {
      return false;
    }
    final PsiClass[] classes=javaLangPackage.getClasses();
    for (    final PsiClass aClass : classes) {
      final String className=aClass.getName();
      if (shortName.equals(className)) {
        return true;
      }
    }
  }
  return false;
}
