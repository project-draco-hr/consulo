{
  myList=new JBList();
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  rebuildListContent();
  myList.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.isConsumed() || e.getClickCount() != 2 || e.isPopupTrigger())       return;
      close(OK_EXIT_CODE);
    }
  }
);
  myList.setCellRenderer(new MyListCellRenderer());
  if (myAllContents.size() > 0) {
    myList.setSelectedIndex(0);
  }
  myList.addKeyListener(new KeyAdapter(){
    public void keyReleased(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_DELETE) {
        int selectedIndex=getSelectedIndex();
        int size=myAllContents.size();
        removeContentAt(myAllContents.get(selectedIndex));
        rebuildListContent();
        if (size == 1) {
          close(CANCEL_EXIT_CODE);
          return;
        }
        myList.setSelectedIndex(Math.min(selectedIndex,myAllContents.size() - 1));
      }
 else       if (e.getKeyCode() == KeyEvent.VK_ENTER) {
        close(OK_EXIT_CODE);
      }
 else {
        final char aChar=e.getKeyChar();
        if (aChar >= '0' && aChar <= '9') {
          int idx=aChar == '0' ? 9 : aChar - '1';
          if (idx < myAllContents.size()) {
            myList.setSelectedIndex(idx);
          }
        }
      }
    }
  }
);
  mySplitter=new Splitter(true);
  mySplitter.setFirstComponent(new JScrollPane(myList));
  mySplitter.setSecondComponent(new JPanel());
  updateViewerForSelection();
  myList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateViewerForSelection();
    }
  }
);
  mySplitter.setPreferredSize(new Dimension(500,500));
  return mySplitter;
}
