{
  if (!element1.getClass().equals(element2.getClass()))   return false;
  PsiElement[] children1=getFilteredChildren(element1);
  PsiElement[] children2=getFilteredChildren(element2);
  if (children1.length != children2.length)   return false;
  for (int i=0; i < children1.length; i++) {
    PsiElement child1=children1[i];
    PsiElement child2=children2[i];
    if (!areElementsEquivalent(child1,child2))     return false;
  }
  if (children1.length == 0) {
    if (!element1.textMatches(element2))     return false;
  }
  PsiReference ref1=element1.getReference();
  if (ref1 != null) {
    PsiReference ref2=element2.getReference();
    if (ref2 == null)     return false;
    if (!Comparing.equal(ref1.resolve(),ref2.resolve()))     return false;
  }
  return true;
}
