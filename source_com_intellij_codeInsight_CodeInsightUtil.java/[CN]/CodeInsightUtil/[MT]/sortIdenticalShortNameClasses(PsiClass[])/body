{
  if (classes.length <= 1)   return;
  final StatisticsManager statisticsManager=StatisticsManager.getInstance();
  Comparator<PsiClass> comparator=new Comparator<PsiClass>(){
    public int compare(    PsiClass aClass,    PsiClass bClass){
      int count1=statisticsManager.getMemberUseCount(null,aClass,null);
      int count2=statisticsManager.getMemberUseCount(null,bClass,null);
      if (count1 != count2)       return count2 - count1;
      boolean inProject1=aClass.getManager().isInProject(aClass);
      boolean inProject2=bClass.getManager().isInProject(aClass);
      if (inProject1 != inProject2)       return inProject1 ? -1 : 1;
      String qName1=aClass.getQualifiedName();
      boolean isJdk1=qName1 != null && (qName1.startsWith("java.") || qName1.startsWith("javax."));
      String qName2=bClass.getQualifiedName();
      boolean isJdk2=qName2 != null && (qName2.startsWith("java.") || qName2.startsWith("javax."));
      if (isJdk1 != isJdk2)       return isJdk1 ? -1 : 1;
      return 0;
    }
  }
;
  Arrays.sort(classes,comparator);
}
