{
  final PsiLiteralExpression exp=(PsiLiteralExpression)element;
  final PsiType type=exp.getType();
  if (type.equals(PsiType.INT) || type.equals(PsiType.LONG)) {
    String textString=exp.getText();
    final int textLength=textString.length();
    final char lastChar=textString.charAt(textLength - 1);
    final boolean isLong=lastChar == 'l' || lastChar == 'L';
    if (isLong) {
      textString=textString.substring(0,textLength - 1);
    }
    final BigInteger val;
    if (textString.charAt(0) == '0') {
      val=new BigInteger(textString,8);
    }
 else {
      val=new BigInteger(textString,10);
    }
    String hexString="0x" + val.toString(16);
    if (isLong) {
      hexString+='L';
    }
    replaceExpression(hexString,exp);
  }
 else {
    String textString=exp.getText();
    final int textLength=textString.length();
    final char lastChar=textString.charAt(textLength - 1);
    final boolean isFloat=lastChar == 'f' || lastChar == 'F';
    if (isFloat) {
      textString=textString.substring(0,textLength - 1);
    }
    if (isFloat) {
      final float floatValue=Float.parseFloat(textString);
      final String floatString=floatToHexString(floatValue) + lastChar;
      replaceExpression(floatString,exp);
    }
 else {
      final double doubleValue=Double.parseDouble(textString);
      final String floatString=doubleToHexString(doubleValue);
      replaceExpression(floatString,exp);
    }
  }
}
