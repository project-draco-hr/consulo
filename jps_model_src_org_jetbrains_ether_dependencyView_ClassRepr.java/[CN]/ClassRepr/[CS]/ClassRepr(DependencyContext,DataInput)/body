{
  super(in);
  try {
    this.myContext=context;
    myFileName=in.readInt();
    mySuperClass=TypeRepr.externalizer(context).read(in);
    myInterfaces=(Set<TypeRepr.AbstractType>)RW.read(TypeRepr.externalizer(context),new HashSet<TypeRepr.AbstractType>(),in);
    myFields=(Set<FieldRepr>)RW.read(FieldRepr.externalizer(context),new HashSet<FieldRepr>(),in);
    myMethods=(Set<MethodRepr>)RW.read(MethodRepr.externalizer(context),new HashSet<MethodRepr>(),in);
    myAnnotationTargets=(Set<ElemType>)RW.read(UsageRepr.AnnotationUsage.elementTypeExternalizer,EnumSet.noneOf(ElemType.class),in);
    final String s=in.readUTF();
    myRetentionPolicy=s.length() == 0 ? null : RetentionPolicy.valueOf(s);
    myOuterClassName=in.readInt();
    myIsLocal=in.readBoolean();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
