{
  final Runnable antAwareRunnable=new Runnable(){
    public void run(){
      final AntConfiguration antConfiguration=AntConfiguration.getInstance(myProject);
      if (configuration instanceof RunConfiguration) {
        final RunConfiguration runConfiguration=(RunConfiguration)configuration;
        final RunManagerImpl runManager=RunManagerImpl.getInstanceImpl(myProject);
        final Map<String,Boolean> beforeRun=runManager.getStepsBeforeLaunch(runConfiguration);
        final Boolean enabled=beforeRun.get(AntConfiguration.ANT);
        if (enabled != null && enabled.booleanValue() && antConfiguration != null && antConfiguration.hasTasksToExecuteBeforeRun(runConfiguration)) {
          ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
            public void run(){
              final DataContext dataContext=SimpleDataContext.getProjectContext(myProject);
              if (antConfiguration.executeTaskBeforeRun(dataContext,runConfiguration)) {
                ApplicationManager.getApplication().invokeLater(startRunnable);
              }
            }
          }
);
        }
 else {
          startRunnable.run();
        }
      }
 else {
        startRunnable.run();
      }
    }
  }
;
  Module[] modulesToCompile=state.getModulesToCompile();
  if (modulesToCompile == null)   modulesToCompile=Module.EMPTY_ARRAY;
  if (getConfig().isCompileBeforeRunning(configuration) && modulesToCompile.length > 0) {
    final CompileStatusNotification callback=new CompileStatusNotification(){
      public void finished(      final boolean aborted,      final int errors,      final int warnings,      CompileContext compileContext){
        if (errors == 0 && !aborted) {
          ApplicationManager.getApplication().invokeLater(antAwareRunnable);
        }
      }
    }
;
    CompileScope scope;
    if (Boolean.valueOf(System.getProperty(MAKE_PROJECT_ON_RUN_KEY,Boolean.FALSE.toString())).booleanValue()) {
      scope=new ProjectCompileScope(myProject);
    }
 else {
      scope=new ModuleCompileScope(myProject,modulesToCompile,true);
    }
    scope.putUserData(RUN_PROFILE_STATE_KEY,state);
    CompilerManager.getInstance(myProject).make(scope,callback);
  }
 else {
    antAwareRunnable.run();
  }
}
