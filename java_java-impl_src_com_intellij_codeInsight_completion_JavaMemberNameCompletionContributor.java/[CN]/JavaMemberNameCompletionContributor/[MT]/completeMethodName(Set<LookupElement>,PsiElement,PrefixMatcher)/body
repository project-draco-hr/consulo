{
  if (element instanceof PsiMethod) {
    final PsiMethod method=(PsiMethod)element;
    if (method.isConstructor()) {
      final PsiClass containingClass=method.getContainingClass();
      if (containingClass != null) {
        final String name=containingClass.getName();
        if (StringUtil.isNotEmpty(name)) {
          addLookupItems(set,null,matcher,name);
        }
      }
      return;
    }
  }
  PsiClass ourClassParent=PsiTreeUtil.getParentOfType(element,PsiClass.class);
  if (ourClassParent == null)   return;
  addLookupItems(set,null,matcher,getUnresolvedReferences(ourClassParent,true));
  addLookupItems(set,null,matcher,getPropertiesHandlersNames(ourClassParent,((PsiModifierListOwner)element).hasModifierProperty(PsiModifier.STATIC),PsiUtil.getTypeByPsiElement(element),element));
}
