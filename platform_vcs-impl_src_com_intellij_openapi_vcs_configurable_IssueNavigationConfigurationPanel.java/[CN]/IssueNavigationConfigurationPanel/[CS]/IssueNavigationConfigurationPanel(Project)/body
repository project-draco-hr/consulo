{
  super(new BorderLayout());
  myProject=project;
  myLinkTable=new JBTable();
  myLinkTable.getEmptyText().setText(VcsBundle.message("issue.link.no.patterns"));
  reset();
  add(new JLabel("<html>" + ApplicationNamesInfo.getInstance().getFullProductName() + " will search for the specified patterns in "+ "checkin comments and link them to issues in your issue tracker:</html>"),BorderLayout.NORTH);
  add(ToolbarDecorator.createDecorator(myLinkTable).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      IssueLinkConfigurationDialog dlg=new IssueLinkConfigurationDialog(myProject);
      dlg.setTitle(VcsBundle.message("issue.link.add.title"));
      dlg.show();
      if (dlg.isOK()) {
        myLinks.add(dlg.getLink());
        myModel.fireTableDataChanged();
      }
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      if (Messages.showOkCancelDialog(myProject,VcsBundle.message("issue.link.delete.prompt"),VcsBundle.message("issue.link.delete.title"),Messages.getQuestionIcon()) == 0) {
        int selRow=myLinkTable.getSelectedRow();
        myLinks.remove(selRow);
        myModel.fireTableDataChanged();
        if (myLinkTable.getRowCount() > 0) {
          if (selRow >= myLinkTable.getRowCount()) {
            selRow--;
          }
          myLinkTable.getSelectionModel().setSelectionInterval(selRow,selRow);
        }
      }
    }
  }
).setEditAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      IssueNavigationLink link=(IssueNavigationLink)myModel.getItem(myLinkTable.getSelectedRow());
      IssueLinkConfigurationDialog dlg=new IssueLinkConfigurationDialog(myProject);
      dlg.setTitle(VcsBundle.message("issue.link.edit.title"));
      dlg.setLink(link);
      dlg.show();
      if (dlg.isOK()) {
        final IssueNavigationLink editedLink=dlg.getLink();
        link.setIssueRegexp(editedLink.getIssueRegexp());
        link.setLinkRegexp(editedLink.getLinkRegexp());
        myModel.fireTableDataChanged();
      }
    }
  }
).addExtraAction(new AnActionButton("Add JIRA Pattern",IconUtil.getAddJiraPatternIcon()){
    @Override public void actionPerformed(    AnActionEvent e){
      String s=Messages.showInputDialog(IssueNavigationConfigurationPanel.this,"Enter JIRA installation URL:","Add JIRA Issue Navigation Pattern",Messages.getQuestionIcon());
      if (s == null) {
        return;
      }
      if (!s.endsWith("/")) {
        s+="/";
      }
      myLinks.add(new IssueNavigationLink("[A-Z]+\\-\\d+",s + "browse/$0"));
      myModel.fireTableDataChanged();
    }
  }
).addExtraAction(new AnActionButton("Add YouTrack Pattern",IconUtil.getAddYouTrackPatternIcon()){
    @Override public void actionPerformed(    AnActionEvent e){
      String s=Messages.showInputDialog(IssueNavigationConfigurationPanel.this,"Enter YouTrack installation URL:","Add YouTrack Issue Navigation Pattern",Messages.getQuestionIcon());
      if (s == null) {
        return;
      }
      if (!s.endsWith("/")) {
        s+="/";
      }
      myLinks.add(new IssueNavigationLink("[A-Z]+\\-\\d+",s + "issue/$0"));
      myModel.fireTableDataChanged();
    }
  }
).setButtonComparator("Add","Add JIRA Pattern","Add YouTrack Pattern","Edit","Remove").disableUpDownActions().createPanel(),BorderLayout.CENTER);
}
