{
  final Set<String> notMerged=new HashSet<String>();
  boolean somethingMerged=false;
  final long number=list.getNumber();
  final Set<String> paths=new HashSet<String>(list.getAddedPaths());
  paths.addAll(list.getDeletedPaths());
  paths.addAll(list.getChangedPaths());
  for (  String path : paths) {
    final SvnMergeInfoCache.MergeCheckResult pathResult=myWorker.isMerged(path,number);
    if (SvnMergeInfoCache.MergeCheckResult.MERGED.equals(pathResult)) {
      somethingMerged=true;
    }
 else     if (SvnMergeInfoCache.MergeCheckResult.NOT_MERGED.equals(pathResult)) {
      notMerged.add(path);
    }
  }
  if (somethingMerged && (!notMerged.isEmpty())) {
    myPartiallyMerged.put(number,notMerged);
  }
  if ((!somethingMerged) && notMerged.isEmpty())   return SvnMergeInfoCache.MergeCheckResult.NOT_EXISTS;
  return SvnMergeInfoCache.MergeCheckResult.getInstance(somethingMerged && notMerged.isEmpty());
}
