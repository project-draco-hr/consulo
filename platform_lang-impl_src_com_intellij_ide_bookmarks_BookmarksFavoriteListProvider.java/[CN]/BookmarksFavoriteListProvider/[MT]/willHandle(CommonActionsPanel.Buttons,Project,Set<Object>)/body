{
switch (type) {
case EDIT:
    if (selectedObjects.size() != 1) {
      return false;
    }
  Object toEdit=selectedObjects.iterator().next();
return toEdit instanceof AbstractTreeNode && ((AbstractTreeNode)toEdit).getValue() instanceof Bookmark;
case REMOVE:
for (Object toRemove : selectedObjects) {
if (!(toRemove instanceof AbstractTreeNode && ((AbstractTreeNode)toRemove).getValue() instanceof Bookmark)) {
  return false;
}
}
return true;
default :
return false;
}
}
