{
  final boolean isScript=typeDefinition instanceof GroovyScriptClass;
  final GroovyFile containingFile=(GroovyFile)typeDefinition.getContainingFile();
  if (insertPackageSmst) {
    writePackageStatement(text,containingFile.getPackageDefinition());
  }
  boolean isEnum=typeDefinition.isEnum();
  boolean isAnnotationType=typeDefinition.isAnnotationType();
  boolean isInterface=!isAnnotationType && typeDefinition.isInterface();
  boolean isClassDef=!isInterface && !isEnum && !isAnnotationType&& !isScript;
  ModifierListGenerator.writeClassModifiers(text,typeDefinition.getModifierList(),typeDefinition.isInterface(),toplevel,classItemGenerator.generateAnnotations());
  if (isInterface) {
    text.append("interface");
  }
 else   if (isEnum) {
    text.append("enum");
  }
 else   if (isAnnotationType) {
    text.append("@interface");
  }
 else {
    text.append("class");
  }
  text.append(' ').append(typeDefinition.getName());
  GenerationUtil.writeTypeParameters(text,typeDefinition,classNameProvider);
  text.append(' ');
  if (isScript) {
    text.append("extends ").append(GroovyCommonClassNames.GROOVY_LANG_SCRIPT).append(' ');
  }
 else   if (!isEnum && !isAnnotationType) {
    writeExtendsList(text,typeDefinition);
    writeImplementsList(text,typeDefinition,isInterface);
  }
  text.append("{\n");
  writeMembers(text,typeDefinition,isClassDef);
  text.append('}');
}
