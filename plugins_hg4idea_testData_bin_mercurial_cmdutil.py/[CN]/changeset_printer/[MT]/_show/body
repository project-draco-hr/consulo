def _show(self, ctx, copies, props):
    'show a single changeset or file revision'
    changenode = ctx.node()
    rev = ctx.rev()
    if self.ui.quiet:
        self.ui.write(('%d:%s\n' % (rev, short(changenode))))
        return
    log = self.repo.changelog
    date = util.datestr(ctx.date())
    hexfunc = ((self.ui.debugflag and hex) or short)
    parents = [(p, hexfunc(log.node(p))) for p in self._meaningful_parentrevs(log, rev)]
    self.ui.write((_('changeset:   %d:%s\n') % (rev, hexfunc(changenode))))
    branch = ctx.branch()
    if (branch != 'default'):
        branch = encoding.tolocal(branch)
        self.ui.write((_('branch:      %s\n') % branch))
    for tag in self.repo.nodetags(changenode):
        self.ui.write((_('tag:         %s\n') % tag))
    for parent in parents:
        self.ui.write((_('parent:      %d:%s\n') % parent))
    if self.ui.debugflag:
        mnode = ctx.manifestnode()
        self.ui.write((_('manifest:    %d:%s\n') % (self.repo.manifest.rev(mnode), hex(mnode))))
    self.ui.write((_('user:        %s\n') % ctx.user()))
    self.ui.write((_('date:        %s\n') % date))
    if self.ui.debugflag:
        files = self.repo.status(log.parents(changenode)[0], changenode)[:3]
        for (key, value) in zip([_('files:'), _('files+:'), _('files-:')], files):
            if value:
                self.ui.write(('%-12s %s\n' % (key, ' '.join(value))))
    elif (ctx.files() and self.ui.verbose):
        self.ui.write((_('files:       %s\n') % ' '.join(ctx.files())))
    if (copies and self.ui.verbose):
        copies = [('%s (%s)' % c) for c in copies]
        self.ui.write((_('copies:      %s\n') % ' '.join(copies)))
    extra = ctx.extra()
    if (extra and self.ui.debugflag):
        for (key, value) in sorted(extra.items()):
            self.ui.write((_('extra:       %s=%s\n') % (key, value.encode('string_escape'))))
    description = ctx.description().strip()
    if description:
        if self.ui.verbose:
            self.ui.write(_('description:\n'))
            self.ui.write(description)
            self.ui.write('\n\n')
        else:
            self.ui.write((_('summary:     %s\n') % description.splitlines()[0]))
    self.ui.write('\n')
    self.showpatch(changenode)
