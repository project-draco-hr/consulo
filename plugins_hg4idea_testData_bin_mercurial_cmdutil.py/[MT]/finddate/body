def finddate(ui, repo, date):
    'Find the tipmost changeset that matches the given date spec'
    df = util.matchdate(date)
    m = matchall(repo)
    results = {}

    def prep(ctx, fns):
        d = ctx.date()
        if df(d[0]):
            results[ctx.rev()] = d
    for ctx in walkchangerevs(repo, m, {'rev': None, }, prep):
        rev = ctx.rev()
        if (rev in results):
            ui.status((_('Found revision %s from %s\n') % (rev, util.datestr(results[rev]))))
            return str(rev)
    raise util.Abort(_('revision matching date not found'))
