def show_changeset(ui, repo, opts, buffered=False, matchfn=False):
    "show one changeset using template or regular display.\n\n    Display format will be the first non-empty hit of:\n    1. option 'template'\n    2. option 'style'\n    3. [ui] setting 'logtemplate'\n    4. [ui] setting 'style'\n    If all of these values are either the unset or the empty string,\n    regular display via changeset_printer() is done.\n    "
    patch = False
    if opts.get('patch'):
        patch = (matchfn or matchall(repo))
    tmpl = opts.get('template')
    style = None
    if tmpl:
        tmpl = templater.parsestring(tmpl, quoted=False)
    else:
        style = opts.get('style')
    if (not (tmpl or style)):
        tmpl = ui.config('ui', 'logtemplate')
        if tmpl:
            tmpl = templater.parsestring(tmpl)
        else:
            style = util.expandpath(ui.config('ui', 'style', ''))
    if (not (tmpl or style)):
        return changeset_printer(ui, repo, patch, opts, buffered)
    mapfile = None
    if (style and (not tmpl)):
        mapfile = style
        if (not os.path.split(mapfile)[0]):
            mapname = (templater.templatepath(('map-cmdline.' + mapfile)) or templater.templatepath(mapfile))
            if mapname:
                mapfile = mapname
    try:
        t = changeset_templater(ui, repo, patch, opts, mapfile, buffered)
    except SyntaxError as inst:
        raise util.Abort(inst.args[0])
    if tmpl:
        t.use_template(tmpl)
    return t
