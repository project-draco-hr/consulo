def findrenames(repo, added, removed, threshold):
    'find renamed files -- yields (before, after, score) tuples'
    copies = {}
    ctx = repo['.']
    for r in removed:
        if (r not in ctx):
            continue
        fctx = ctx.filectx(r)

        def score(text):
            if (not len(text)):
                return 0.0
            if (not fctx.cmp(text)):
                return 1.0
            if (threshold == 1.0):
                return 0.0
            orig = fctx.data()
            equal = 0
            alines = mdiff.splitnewlines(text)
            matches = bdiff.blocks(text, orig)
            for (x1, x2, y1, y2) in matches:
                for line in alines[x1:x2]:
                    equal += len(line)
            lengths = (len(text) + len(orig))
            return ((equal * 2.0) / lengths)
        for a in added:
            bestscore = copies.get(a, (None, threshold))[1]
            myscore = score(repo.wread(a))
            if (myscore >= bestscore):
                copies[a] = (r, myscore)
    for (dest, v) in copies.iteritems():
        (source, score) = v
        yield (source, dest, score)
