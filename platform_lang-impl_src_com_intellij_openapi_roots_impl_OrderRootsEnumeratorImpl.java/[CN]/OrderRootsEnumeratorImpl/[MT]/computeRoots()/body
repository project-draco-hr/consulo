{
  final Collection<VirtualFile> result=new LinkedHashSet<VirtualFile>();
  myOrderEnumerator.forEach(new Processor<OrderEntry>(){
    @Override public boolean process(    OrderEntry orderEntry){
      OrderRootType type=getRootType(orderEntry);
      if (orderEntry instanceof ModuleSourceOrderEntry) {
        collectModuleRoots(type,((ModuleSourceOrderEntry)orderEntry).getRootModel(),result);
      }
 else       if (orderEntry instanceof ModuleOrderEntry) {
        ModuleOrderEntry moduleOrderEntry=(ModuleOrderEntry)orderEntry;
        final Module module=moduleOrderEntry.getModule();
        if (module != null) {
          ModuleRootModel rootModel=myOrderEnumerator.getRootModel(module);
          if (myOrderEnumerator.addCustomOutput(orderEntry.getOwnerModule(),rootModel,type,result)) {
            return true;
          }
          collectModuleRoots(type,rootModel,result);
        }
      }
 else {
        if (myCustomRootProvider != null) {
          Collections.addAll(result,myCustomRootProvider.fun(orderEntry));
          return true;
        }
        if (myOrderEnumerator.addCustomRootsForLibrary(orderEntry,type,result)) {
          return true;
        }
        Collections.addAll(result,orderEntry.getFiles(type));
      }
      return true;
    }
  }
);
  myOrderEnumerator.processRootModules(new Processor<Module>(){
    @Override public boolean process(    Module module){
      myOrderEnumerator.addAdditionalRoots(module,result);
      return true;
    }
  }
);
  return result;
}
