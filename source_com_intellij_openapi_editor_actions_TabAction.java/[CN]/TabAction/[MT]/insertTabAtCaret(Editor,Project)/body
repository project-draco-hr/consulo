{
  int columnNumber=editor.getCaretModel().getLogicalPosition().column;
  CodeStyleSettings settings=CodeStyleSettingsManager.getSettings(project);
  VirtualFile vFile=FileDocumentManager.getInstance().getFile(editor.getDocument());
  final FileType fileType=vFile == null ? null : FileTypeManager.getInstance().getFileTypeByFile(vFile);
  int tabSize=settings.getIndentSize(fileType);
  int spacesToAddCount=tabSize - columnNumber % tabSize;
  boolean useTab=editor.getSettings().isUseTabCharacter(project);
  CharSequence chars=editor.getDocument().getCharsSequence();
  if (useTab && settings.isSmartTabs(fileType)) {
    int offset=editor.getCaretModel().getOffset();
    while (offset > 0) {
      offset--;
      if (chars.charAt(offset) == '\t')       continue;
      if (chars.charAt(offset) == '\n')       break;
      useTab=false;
      break;
    }
  }
  if (useTab) {
    EditorModificationUtil.insertStringAtCaret(editor,"\t");
  }
 else {
    StringBuffer buffer=new StringBuffer();
    for (int i=0; i < spacesToAddCount; i++) {
      buffer.append(' ');
    }
    EditorModificationUtil.insertStringAtCaret(editor,buffer.toString());
  }
}
