{
  int width=getSize().width;
  FontMetrics fontMetrics=getFontMetrics(getFont());
  int charWidth=fontMetrics.charWidth('a');
  int firstLineSize=Math.max(0,width / charWidth);
  if (myAllText.length() <= firstLineSize) {
    setText(myAllText);
    setToolTipText(null);
  }
 else {
    String firstLine=myAllText.substring(0,firstLineSize);
    String remainPart=myAllText.substring(firstLineSize);
    int lastWhitespace=firstLine.lastIndexOf(' ');
    if (lastWhitespace > -1) {
      remainPart=firstLine.substring(lastWhitespace) + remainPart;
      firstLine=firstLine.substring(0,lastWhitespace);
    }
    String visibleText=firstLine + "\n";
    int secondLineSize=Math.max(0,(width - 3 * fontMetrics.charWidth('.')) / charWidth);
    if (remainPart.length() <= secondLineSize) {
      setText(visibleText + remainPart.trim());
      setToolTipText(null);
    }
 else {
      setText(visibleText + remainPart.trim().substring(0,secondLineSize) + "...");
      setToolTipText("..." + remainPart.substring(secondLineSize));
    }
  }
  super.paintComponent(g);
}
