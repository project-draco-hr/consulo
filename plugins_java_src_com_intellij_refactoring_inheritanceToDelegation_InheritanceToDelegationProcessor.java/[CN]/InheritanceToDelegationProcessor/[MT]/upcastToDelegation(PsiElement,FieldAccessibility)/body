{
  final PsiExpression expression=(PsiExpression)element;
  final PsiExpression newExpr;
  final PsiReferenceExpression ref;
  @NonNls final String delegateQualifier;
  if (!(expression instanceof PsiThisExpression || expression instanceof PsiSuperExpression)) {
    delegateQualifier="a.";
  }
 else {
    PsiResolveHelper resolveHelper=JavaPsiFacade.getInstance(myProject).getResolveHelper();
    final PsiVariable psiVariable=resolveHelper.resolveReferencedVariable(myFieldName,element);
    if (psiVariable == null) {
      delegateQualifier="";
    }
 else {
      delegateQualifier="a.";
    }
  }
  if (!fieldAccessibility.isAccessible() && myGenerateGetter) {
    newExpr=myFactory.createExpressionFromText(delegateQualifier + myGetterName + "()",expression);
    ref=(PsiReferenceExpression)((PsiMethodCallExpression)newExpr).getMethodExpression().getQualifierExpression();
  }
 else {
    newExpr=myFactory.createExpressionFromText(delegateQualifier + myFieldName,expression);
    ref=(PsiReferenceExpression)((PsiReferenceExpression)newExpr).getQualifierExpression();
  }
  if (ref != null) {
    ref.replace(expression);
  }
  expression.replace(newExpr);
}
