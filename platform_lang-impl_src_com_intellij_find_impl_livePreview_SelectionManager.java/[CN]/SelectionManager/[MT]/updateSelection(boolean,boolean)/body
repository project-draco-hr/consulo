{
  Editor editor=mySearchResults.getEditor();
  if (removeAllPreviousSelections) {
    editor.getCaretModel().removeSecondaryCarets();
  }
  final FindResult cursor=mySearchResults.getCursor();
  if (cursor == null) {
    return;
  }
  if (mySearchResults.getFindModel().isGlobal()) {
    if (removePreviousSelection || removeAllPreviousSelections) {
      FoldingModel foldingModel=editor.getFoldingModel();
      final FoldRegion[] allRegions=editor.getFoldingModel().getAllFoldRegions();
      foldingModel.runBatchFoldingOperation(new Runnable(){
        @Override public void run(){
          for (          FoldRegion region : allRegions) {
            if (!region.isValid())             continue;
            if (cursor.intersects(TextRange.create(region))) {
              region.setExpanded(true);
            }
          }
        }
      }
);
      editor.getSelectionModel().setSelection(cursor.getStartOffset(),cursor.getEndOffset());
      editor.getCaretModel().moveToOffset(cursor.getEndOffset());
    }
 else {
      FindUtil.selectSearchResultInEditor(editor,cursor,-1);
    }
    editor.getScrollingModel().scrollToCaret(ScrollType.CENTER);
  }
 else {
    if (!SearchResults.insideVisibleArea(editor,cursor)) {
      LogicalPosition pos=editor.offsetToLogicalPosition(cursor.getStartOffset());
      editor.getScrollingModel().scrollTo(pos,ScrollType.CENTER);
    }
  }
}
