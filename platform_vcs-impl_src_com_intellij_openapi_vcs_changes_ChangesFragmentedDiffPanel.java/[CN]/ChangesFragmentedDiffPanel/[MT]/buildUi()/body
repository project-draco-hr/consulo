{
  myTopPanel=new JPanel(new BorderLayout());
  final JPanel wrapper=new JPanel();
  wrapper.setLayout(new BorderLayout());
  final JLabel titleLabel=new JLabel(myFilePath);
  titleLabel.setBorder(BorderFactory.createEmptyBorder(1,2,0,0));
  wrapper.add(titleLabel,BorderLayout.WEST);
  DefaultActionGroup dag=new DefaultActionGroup();
  boolean navigationEnabled=!myFragmentedContent.isOneSide() && myFragmentedContent.getSize() > 1;
  myNextDiff.setEnabled(navigationEnabled);
  myPreviousDiff.setEnabled(navigationEnabled);
  myPreviousDiff.copyShortcutFrom(ActionManager.getInstance().getAction("PreviousDiff"));
  myNextDiff.copyShortcutFrom(ActionManager.getInstance().getAction("NextDiff"));
  dag.add(myPreviousDiff);
  dag.add(myNextDiff);
  myPreviousDiff.registerCustomShortcutSet(myPreviousDiff.getShortcutSet(),myPanel);
  myNextDiff.registerCustomShortcutSet(myNextDiff.getShortcutSet(),myPanel);
  dag.add(new PopupAction());
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,dag,true);
  wrapper.add(toolbar.getComponent(),BorderLayout.EAST);
  myTopPanel.add(wrapper,BorderLayout.CENTER);
  final JPanel wrapperDiffs=new JPanel(new GridBagLayout());
  final JPanel oneMore=new JPanel(new BorderLayout());
  oneMore.add(wrapperDiffs,BorderLayout.NORTH);
  final LineNumberConvertor oldConvertor=new LineNumberConvertor();
  final LineNumberConvertor newConvertor=new LineNumberConvertor();
  final StringBuilder sbOld=new StringBuilder();
  final StringBuilder sbNew=new StringBuilder();
  final List<BeforeAfter<Integer>> ranges=new ArrayList<BeforeAfter<Integer>>();
  BeforeAfter<Integer> lines=new BeforeAfter<Integer>(0,0);
  for (  BeforeAfter<TextRange> lineNumbers : myFragmentedContent.getRanges()) {
    ranges.add(lines);
    oldConvertor.put(lines.getBefore(),lineNumbers.getBefore().getStartOffset());
    newConvertor.put(lines.getAfter(),lineNumbers.getAfter().getStartOffset());
    final Document document=myFragmentedContent.getBefore();
    if (sbOld.length() > 0) {
      sbOld.append('\n');
    }
    sbOld.append(document.getText(new TextRange(document.getLineStartOffset(lineNumbers.getBefore().getStartOffset()),document.getLineEndOffset(lineNumbers.getBefore().getEndOffset()))));
    final Document document1=myFragmentedContent.getAfter();
    if (sbNew.length() > 0) {
      sbNew.append('\n');
    }
    sbNew.append(document1.getText(new TextRange(document1.getLineStartOffset(lineNumbers.getAfter().getStartOffset()),document1.getLineEndOffset(lineNumbers.getAfter().getEndOffset()))));
    int before=lines.getBefore() + lineNumbers.getBefore().getEndOffset() - lineNumbers.getBefore().getStartOffset() + 1;
    int after=lines.getAfter() + lineNumbers.getAfter().getEndOffset() - lineNumbers.getAfter().getStartOffset() + 1;
    lines=new BeforeAfter<Integer>(before,after);
  }
  ranges.add(new BeforeAfter<Integer>(lines.getBefore() == 0 ? 0 : lines.getBefore() - 1,lines.getAfter() == 0 ? 0 : lines.getAfter() - 1));
  final DiffPanel diffPanel=createPanel(oldConvertor,newConvertor,sbOld,sbNew,ranges);
  myCurrentHorizontal=myConfiguration.SHORT_DIFF_HORISONTALLY;
  savePanel(diffPanel);
  titleLabel.setText(titleText((DiffPanelImpl)diffPanel));
  FragmentedDiffPanelState state=(FragmentedDiffPanelState)((DiffPanelImpl)diffPanel).getDiffPanelState();
  myLeftLines=state.getLeftLines();
  myRightLines=state.getRightLines();
  myConfiguration.SHORT_DIFF_HORISONTALLY=!myConfiguration.SHORT_DIFF_HORISONTALLY;
  final DiffPanel diffPanel2=createPanel(oldConvertor,newConvertor,sbOld,sbNew,ranges);
  savePanel(diffPanel2);
  myConfiguration.SHORT_DIFF_HORISONTALLY=!myConfiguration.SHORT_DIFF_HORISONTALLY;
  myPanel.add(myTopPanel,BorderLayout.NORTH);
  myPanel.add(diffPanel.getComponent(),BorderLayout.CENTER);
}
