{
  DataContext dataContext=e.getDataContext();
  final Project project=(Project)dataContext.getData(DataConstants.PROJECT);
  final Module module=(Module)dataContext.getData(DataConstants.MODULE);
  if (project != null) {
    PsiFile psiFile=(PsiFile)dataContext.getData(DataConstants.PSI_FILE);
    if (psiFile != null && !(psiFile instanceof PsiJavaFile)) {
      return;
    }
    AnalysisScope scope=getInspectionScope(dataContext);
    boolean showChooseScope=true;
    if (scope.getScopeType() == AnalysisScope.MODULES) {
      showChooseScope=false;
    }
    ProjectModuleOrPackageDialog dlg=new ProjectModuleOrPackageDialog(dataContext,module != null ? ModuleUtil.getModuleNameInReadAction(module) : null,showChooseScope);
    dlg.show();
    if (!dlg.isOK())     return;
    if (showChooseScope) {
      if (dlg.isProjectScopeSelected()) {
        scope=getProjectScope(dataContext);
      }
 else {
        if (dlg.isModuleScopeSelected()) {
          scope=getModuleScope(dataContext);
        }
      }
    }
    FileDocumentManager.getInstance().saveAllDocuments();
    new CyclicDependenciesHandler(project,scope,dlg.getMaxPerPackageCycleCount()).analyze();
  }
}
