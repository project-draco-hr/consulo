{
  super(project,list,model,treeStructure,AlphaComparator.INSTANCE,false);
  myTable=table;
  ProgressManager.getInstance().run(new Task.Backgroundable(project,"Building coverage report..."){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      buildRoot();
    }
    @RequiredDispatchThread @Override public void onSuccess(){
      ensureSelectionExist();
      updateParentTitle();
    }
  }
);
  myFileStatusListener=new FileStatusListener(){
    @Override public void fileStatusesChanged(){
      table.repaint();
    }
    @Override public void fileStatusChanged(    @NotNull VirtualFile virtualFile){
      table.repaint();
    }
  }
;
  myCoverageViewExtension=((CoverageViewTreeStructure)myTreeStructure).myData.getCoverageEngine().createCoverageViewExtension(myProject,((CoverageViewTreeStructure)myTreeStructure).myData,((CoverageViewTreeStructure)myTreeStructure).myStateBean);
  FileStatusManager.getInstance(myProject).addFileStatusListener(myFileStatusListener);
}
