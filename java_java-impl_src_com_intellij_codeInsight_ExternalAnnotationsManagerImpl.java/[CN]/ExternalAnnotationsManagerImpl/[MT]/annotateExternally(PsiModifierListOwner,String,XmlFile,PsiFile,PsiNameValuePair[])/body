{
  if (xmlFile == null) {
    notifyAfterAnnotationChanging(listOwner,annotationFQName,false);
    return;
  }
  CommandProcessor.getInstance().executeCommand(myPsiManager.getProject(),new Runnable(){
    @Override public void run(){
      try {
        final XmlDocument document=xmlFile.getDocument();
        if (document != null) {
          final XmlTag rootTag=document.getRootTag();
          final String externalName=getExternalName(listOwner,false);
          if (rootTag != null) {
            for (            XmlTag item : rootTag.getSubTags()) {
              if (Comparing.strEqual(StringUtil.unescapeXml(item.getAttributeValue("name")),externalName)) {
                for (                XmlTag annotation : item.getSubTags()) {
                  if (Comparing.strEqual(annotation.getAttributeValue("name"),annotationFQName)) {
                    annotation.delete();
                    break;
                  }
                }
                XmlTag newTag=XmlElementFactory.getInstance(myPsiManager.getProject()).createTagFromText(createAnnotationTag(annotationFQName,values));
                item.add(newTag);
                commitChanges(xmlFile);
                notifyAfterAnnotationChanging(listOwner,annotationFQName,true);
                return;
              }
            }
            @NonNls String text="<item name=\'" + StringUtil.escapeXml(externalName) + "\'>\n";
            text+=createAnnotationTag(annotationFQName,values);
            text+="</item>";
            rootTag.add(XmlElementFactory.getInstance(myPsiManager.getProject()).createTagFromText(text));
          }
        }
        commitChanges(xmlFile);
        notifyAfterAnnotationChanging(listOwner,annotationFQName,true);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
        notifyAfterAnnotationChanging(listOwner,annotationFQName,false);
      }
 finally {
        dropCache();
        if (codeUsageFile.getVirtualFile().isInLocalFileSystem()) {
          UndoUtil.markPsiFileForUndo(codeUsageFile);
        }
      }
    }
  }
,ExternalAnnotationsManagerImpl.class.getName(),null);
}
