{
  if (xmlFile == null)   return;
  try {
    final XmlDocument document=xmlFile.getDocument();
    if (document != null) {
      final XmlTag rootTag=document.getRootTag();
      final String externalName=getExternalName(listOwner,false);
      if (rootTag != null) {
        for (        XmlTag tag : rootTag.getSubTags()) {
          if (Comparing.strEqual(tag.getAttributeValue("name"),externalName)) {
            for (            XmlTag annTag : tag.getSubTags()) {
              if (Comparing.strEqual(annTag.getAttributeValue("name"),annotationFQName)) {
                annTag.delete();
                break;
              }
            }
            tag.add(XmlElementFactory.getInstance(xmlFile.getProject()).createTagFromText(createAnnotationTag(annotationFQName,values)));
            return;
          }
        }
        @NonNls String text="<item name=\'" + externalName + "\'>\n";
        text+=createAnnotationTag(annotationFQName,values);
        text+="</item>";
        rootTag.add(XmlElementFactory.getInstance(xmlFile.getProject()).createTagFromText(text));
      }
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
 finally {
    if (codeUsageFile.getVirtualFile().isInLocalFileSystem()) {
      UndoUtil.markPsiFileForUndo(codeUsageFile);
    }
  }
}
