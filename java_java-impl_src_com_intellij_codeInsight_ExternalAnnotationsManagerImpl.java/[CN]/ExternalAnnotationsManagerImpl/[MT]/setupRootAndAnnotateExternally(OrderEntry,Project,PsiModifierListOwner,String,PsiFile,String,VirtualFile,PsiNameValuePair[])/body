{
  final FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
  descriptor.setTitle(ProjectBundle.message("external.annotations.root.chooser.title",entry.getPresentableName()));
  descriptor.setDescription(ProjectBundle.message("external.annotations.root.chooser.description"));
  final VirtualFile file=FileChooser.chooseFile(descriptor,project,null);
  if (file == null) {
    return;
  }
  new WriteCommandAction(project){
    @Override protected void run(    final Result result) throws Throwable {
      appendChosenAnnotationsRoot(entry,file);
      final List<XmlFile> xmlFiles=findExternalAnnotationsXmlFiles(listOwner);
      if (xmlFiles != null) {
        if (!CodeInsightUtilBase.preparePsiElementForWrite(xmlFiles.get(0)))         return;
        annotateExternally(listOwner,annotationFQName,xmlFiles.get(0),fromFile,value);
      }
 else {
        final XmlFile annotationsXml=createAnnotationsXml(file,packageName);
        if (annotationsXml != null) {
          final List<PsiFile> createdFiles=new ArrayList<PsiFile>();
          createdFiles.add(annotationsXml);
          String fqn=getFQN(packageName,virtualFile);
          if (fqn != null) {
            myExternalAnnotations.put(fqn,createdFiles);
          }
        }
        annotateExternally(listOwner,annotationFQName,annotationsXml,fromFile,value);
      }
    }
  }
.execute();
}
