{
  if (!CodeInsightUtil.prepareFileForWrite(file))   return;
  int col=editor.getCaretModel().getLogicalPosition().column;
  int line=editor.getCaretModel().getLogicalPosition().line;
  LogicalPosition pos=new LogicalPosition(0,0);
  editor.getCaretModel().moveToLogicalPosition(pos);
  TextRange range=null;
  if (myStatement.getParent() instanceof PsiForStatement) {
    PsiForStatement forStatement=(PsiForStatement)myStatement.getParent();
    if (myStatement.equals(forStatement.getInitialization()) || myStatement.equals(forStatement.getUpdate())) {
      myStatement=forStatement;
    }
  }
  try {
    JavaWithTryCatchSurrounder handler=new JavaWithTryCatchSurrounder();
    range=handler.surroundElements(project,editor,new PsiElement[]{myStatement});
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
  LogicalPosition pos1=new LogicalPosition(line,col);
  editor.getCaretModel().moveToLogicalPosition(pos1);
  if (range != null) {
    int offset=range.getStartOffset();
    editor.getCaretModel().moveToOffset(offset);
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    editor.getSelectionModel().setSelection(range.getStartOffset(),range.getEndOffset());
  }
}
