{
  int offset=editor.getCaretModel().getOffset();
  final PsiMethod method=findMethod(file,offset);
  if (method == null || !method.isValid())   return false;
  setText(getIntentionName(method));
  if (!method.getManager().isInProject(method))   return false;
  PsiClass containingClass=method.getContainingClass();
  if (containingClass == null)   return false;
  if (method.hasModifierProperty(PsiModifier.ABSTRACT) || !method.hasModifierProperty(PsiModifier.PRIVATE)) {
    MyElementProcessor processor=new MyElementProcessor(method);
    if (containingClass.isEnum()) {
      for (      PsiField field : containingClass.getFields()) {
        if (field instanceof PsiEnumConstant) {
          final PsiEnumConstantInitializer initializingClass=((PsiEnumConstant)field).getInitializingClass();
          if (initializingClass == null) {
            processor.myHasMissingImplementations=true;
          }
 else {
            if (!processor.execute(initializingClass)) {
              break;
            }
          }
        }
      }
    }
    ClassInheritorsSearch.search(containingClass,false).forEach(new PsiElementProcessorAdapter<PsiClass>(processor));
    return isAvailable(processor);
  }
  return false;
}
