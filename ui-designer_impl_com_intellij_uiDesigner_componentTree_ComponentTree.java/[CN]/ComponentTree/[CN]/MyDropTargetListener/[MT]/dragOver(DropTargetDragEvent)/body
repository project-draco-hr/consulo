{
  RadComponent dropTargetComponent=null;
  final DraggedComponentList dcl=DraggedComponentList.fromTransferable(dtde.getTransferable());
  if (dcl != null) {
    final TreePath path=getPathForLocation((int)dtde.getLocation().getX(),(int)dtde.getLocation().getY());
    final RadComponent targetComponent=getComponentFromPath(path);
    if (path != null && targetComponent != null && targetComponent.canDrop(null,dcl.getComponents().size())) {
      dropTargetComponent=targetComponent;
      dtde.acceptDrag(dtde.getDropAction());
    }
 else {
      dtde.rejectDrag();
    }
  }
 else {
    dtde.rejectDrag();
  }
  if (dropTargetComponent != myDropTargetComponent) {
    myDropTargetComponent=dropTargetComponent;
    repaint();
  }
}
