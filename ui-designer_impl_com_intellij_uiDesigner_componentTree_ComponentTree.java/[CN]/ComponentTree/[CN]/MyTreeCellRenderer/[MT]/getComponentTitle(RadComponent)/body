{
  IntrospectedProperty[] props=myPalette.getIntrospectedProperties(component.getComponentClass());
  for (  IntrospectedProperty prop : props) {
    if (prop.getName().equals(SwingProperties.TEXT) && prop instanceof IntroStringProperty) {
      StringDescriptor value=(StringDescriptor)prop.getValue(component);
      if (value != null) {
        return "\"" + value.getResolvedValue() + "\"";
      }
    }
  }
  if (component instanceof RadContainer) {
    RadContainer container=(RadContainer)component;
    StringDescriptor descriptor=container.getBorderTitle();
    if (descriptor != null) {
      if (descriptor.getResolvedValue() == null) {
        descriptor.setResolvedValue(ReferenceUtil.resolve(component.getModule(),descriptor));
      }
      return "\"" + descriptor.getResolvedValue() + "\"";
    }
  }
  if (component.getParent() instanceof RadTabbedPane) {
    RadTabbedPane parentTabbedPane=(RadTabbedPane)component.getParent();
    final StringDescriptor descriptor=parentTabbedPane.getChildTitle(component);
    if (descriptor != null) {
      if (descriptor.getResolvedValue() == null) {
        descriptor.setResolvedValue(ReferenceUtil.resolve(component.getModule(),descriptor));
      }
      return "\"" + descriptor.getResolvedValue() + "\"";
    }
  }
  return null;
}
