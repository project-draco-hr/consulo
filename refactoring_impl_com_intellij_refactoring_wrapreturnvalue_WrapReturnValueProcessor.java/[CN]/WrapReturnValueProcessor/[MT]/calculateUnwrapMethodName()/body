{
  final String existingClassName=existingClass.getQualifiedName();
  if (specialNames.containsKey(existingClassName)) {
    return specialNames.get(existingClassName);
  }
  PsiField instanceField=null;
  final PsiField[] fields=existingClass.getFields();
  for (  PsiField field : fields) {
    if (!field.hasModifierProperty(PsiModifier.STATIC)) {
      instanceField=field;
      break;
    }
  }
  final PsiMethod getter=PropertyUtils.findGetterForField(instanceField);
  return getter.getName();
}
