{
  for (  GitRepository repository : repositories) {
    GitSimpleEventDetector mergeConflict=new GitSimpleEventDetector(GitSimpleEventDetector.Event.MERGE_CONFLICT);
    GitCommandResult result=myGit.merge(repository,myBranchToMerge,Collections.<String>emptyList(),mergeConflict);
    if (!result.success()) {
      if (mergeConflict.hasHappened()) {
        myConflictedRepositories.put(repository,Boolean.TRUE);
        refresh(repository);
        markSuccessful(repository);
      }
 else {
        fatalError(getCommonErrorTitle(),result.getErrorOutputAsJoinedString());
        return false;
      }
    }
 else {
      refresh(repository);
      markSuccessful(repository);
    }
  }
  return true;
}
