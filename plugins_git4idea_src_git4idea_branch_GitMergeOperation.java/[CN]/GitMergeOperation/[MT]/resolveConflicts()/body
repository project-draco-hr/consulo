{
  if (!myConflictedRepositories.isEmpty()) {
    GitMerger merger=new GitMerger(myProject);
    GitConflictResolver.Params params=new GitConflictResolver.Params();
    GitMergeCommittingConflictResolver conflictResolver=new GitMergeCommittingConflictResolver(myProject,merger,GitUtil.getRoots(myConflictedRepositories.keySet()),params,true){
      @Override protected void notifyUnresolvedRemain(){
        NotificationManager.getInstance(myProject).notify(GitVcs.IMPORTANT_ERROR_NOTIFICATION,"Merged branch " + myBranchToMerge + " with conflicts","Unresolved conflicts remain in the project. <a href='resolve'>Resolve now.</a>",NotificationType.WARNING,getResolveLinkListener());
      }
    }
;
    return conflictResolver.merge();
  }
  return true;
}
