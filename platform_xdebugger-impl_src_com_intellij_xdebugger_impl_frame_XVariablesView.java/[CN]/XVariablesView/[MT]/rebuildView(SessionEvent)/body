{
  XStackFrame stackFrame=mySession.getCurrentStackFrame();
  XDebuggerTree tree=myDebuggerTreePanel.getTree();
  if (event == SessionEvent.BEFORE_RESUME || event == SessionEvent.SETTINGS_CHANGED) {
    disposeTreeRestorer();
    myFrameEqualityObject=stackFrame != null ? stackFrame.getEqualityObject() : null;
    myTreeState=XDebuggerTreeState.saveState(tree);
    if (event == SessionEvent.BEFORE_RESUME) {
      return;
    }
  }
  tree.markNodesObsolete();
  if (stackFrame != null) {
    tree.setSourcePosition(stackFrame.getSourcePosition());
    tree.setRoot(new XStackFrameNode(tree,stackFrame),false);
    Object newEqualityObject=stackFrame.getEqualityObject();
    if (myFrameEqualityObject != null && newEqualityObject != null && myFrameEqualityObject.equals(newEqualityObject) && myTreeState != null) {
      disposeTreeRestorer();
      myTreeRestorer=myTreeState.restoreState(tree);
    }
  }
 else {
    tree.setSourcePosition(null);
    String message=!mySession.isStopped() && mySession.isPaused() ? "Frame is not available" : mySession.getDebugProcess().getCurrentStateMessage();
    tree.setRoot(MessageTreeNode.createInfoMessage(tree,null,message),true);
  }
}
