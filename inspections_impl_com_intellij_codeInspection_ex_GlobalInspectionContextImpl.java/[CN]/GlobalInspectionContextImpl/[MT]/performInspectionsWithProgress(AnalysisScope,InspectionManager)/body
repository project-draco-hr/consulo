{
  final PsiManager psiManager=PsiManager.getInstance(myProject);
  myProgressIndicator=ProgressManager.getInstance().getProgressIndicator();
  RefManagerImpl refManager=(RefManagerImpl)ApplicationManager.getApplication().runReadAction(new Computable<RefManager>(){
    public RefManager compute(){
      return getRefManager();
    }
  }
);
  try {
    psiManager.startBatchFilesProcessingMode();
    refManager.inspectionReadActionStarted();
    refManager.getEntryPointsManager().resolveEntryPoints(refManager);
    BUILD_GRAPH.setTotalAmount(scope.getFileCount());
    LOCAL_ANALYSIS.setTotalAmount(scope.getFileCount());
    final List<InspectionTool> needRepeatSearchRequest=new ArrayList<InspectionTool>();
    ((ProgressManagerImpl)ProgressManager.getInstance()).executeProcessUnderProgress(new Runnable(){
      public void run(){
        runTools(needRepeatSearchRequest,scope,manager);
      }
    }
,myProgressIndicator != null ? new ProgressWrapper(myProgressIndicator) : null);
  }
 catch (  ProcessCanceledException e) {
    cleanup((InspectionManagerEx)manager);
    throw e;
  }
catch (  Exception e) {
    LOG.error(e);
  }
 finally {
    refManager.inspectionReadActionFinished();
    psiManager.finishBatchFilesProcessingMode();
  }
}
