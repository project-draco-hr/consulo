{
  final String idString=descriptor.getPluginId().getIdString();
  if (idString.equals(CORE_PLUGIN_ID)) {
    return false;
  }
  if (!shouldLoadPlugins())   return true;
  boolean shouldLoad;
  final String loadPluginCategory=System.getProperty("idea.load.plugins.category");
  if (loadPluginCategory != null) {
    shouldLoad=loadPluginCategory.equals(descriptor.getCategory());
  }
 else {
    final String pluginId=System.getProperty("idea.load.plugins.id");
    shouldLoad=pluginId == null || (descriptor.getPluginId() != null && pluginId.equals(idString));
    final File file=new File(PathManager.getConfigPath(),DISABLED_PLUGINS_FILENAME);
    if (shouldLoad && file.isFile()) {
      if (ourDisabledPlugins == null) {
        ourDisabledPlugins=new ArrayList<String>();
        FileReader fileReader=null;
        BufferedReader reader=null;
        try {
          fileReader=new FileReader(file);
          reader=new BufferedReader(fileReader);
          String id;
          while ((id=reader.readLine()) != null) {
            ourDisabledPlugins.add(id.trim());
          }
        }
 catch (        IOException e) {
          return false;
        }
 finally {
          try {
            if (reader != null) {
              reader.close();
            }
            if (fileReader != null) {
              fileReader.close();
            }
          }
 catch (          IOException e) {
          }
        }
      }
      shouldLoad=!ourDisabledPlugins.contains(idString);
    }
  }
  return !shouldLoad;
}
