{
  for (  PsiElement newClass : oldToNewElementMap.values()) {
    newClass.accept(new PsiRecursiveElementVisitor(){
      @Override public void visitElement(      final PsiElement element){
        super.visitElement(element);
        List<NonCodeUsageInfo> list=element.getCopyableUserData(ourNonCodeUsageKey);
        if (list != null) {
          for (          NonCodeUsageInfo info : list) {
            for (int i=0; i < myNonCodeUsages.length; i++) {
              if (myNonCodeUsages[i] == info) {
                myNonCodeUsages[i]=info.replaceElement(element);
                break;
              }
            }
          }
          element.putCopyableUserData(ourNonCodeUsageKey,null);
        }
      }
    }
);
  }
}
