{
  PsiElement[] members=collectPackageLocalMembers(collector.getClassToMove());
  for (  PsiElement member : members) {
    ReferencesSearch.search(member).forEach(new Processor<PsiReference>(){
      public boolean process(      final PsiReference psiReference){
        PsiElement element=psiReference.getElement();
        if (isInaccessibleFromTarget(element,PsiModifier.PACKAGE_LOCAL)) {
          collector.addConflict(psiReference.resolve(),element);
        }
        return true;
      }
    }
);
  }
}
