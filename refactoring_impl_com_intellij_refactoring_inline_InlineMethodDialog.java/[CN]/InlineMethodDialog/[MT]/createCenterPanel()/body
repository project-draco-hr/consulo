{
  JPanel optionsPanel=new JPanel();
  optionsPanel.setBorder(IdeBorderFactory.createTitledBorder(RefactoringBundle.message("inline.method.border.title")));
  optionsPanel.setLayout(new BoxLayout(optionsPanel,BoxLayout.Y_AXIS));
  final String inlineAllText=myMethod.isWritable() ? RefactoringBundle.message("all.invocations.and.remove.the.method") : RefactoringBundle.message("all.invocations.in.project");
  myRbInlineAll=new JRadioButton();
  myRbInlineAll.setText(inlineAllText);
  myRbInlineAll.setSelected(true);
  myRbInlineThisOnly=new JRadioButton();
  myRbInlineThisOnly.setText(RefactoringBundle.message("this.invocation.only.and.keep.the.method"));
  optionsPanel.add(myRbInlineAll);
  optionsPanel.add(myRbInlineThisOnly);
  ButtonGroup bg=new ButtonGroup();
  bg.add(myRbInlineAll);
  bg.add(myRbInlineThisOnly);
  myRbInlineThisOnly.setEnabled(myInvokedOnReference);
  final boolean writable=myMethod.isWritable();
  if (myInvokedOnReference) {
    if (writable) {
      final boolean inline_method_this=RefactoringSettings.getInstance().INLINE_METHOD_THIS;
      myRbInlineThisOnly.setSelected(inline_method_this);
      myRbInlineAll.setSelected(!inline_method_this);
    }
 else {
      myRbInlineAll.setSelected(false);
      myRbInlineThisOnly.setSelected(true);
    }
  }
 else {
    myRbInlineAll.setSelected(true);
    myRbInlineThisOnly.setSelected(false);
  }
  getPreviewAction().setEnabled(myRbInlineAll.isSelected());
  myRbInlineAll.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      boolean enabled=myRbInlineAll.isSelected();
      getPreviewAction().setEnabled(enabled);
    }
  }
);
  return optionsPanel;
}
