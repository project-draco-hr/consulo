{
  if (file.isDirectory()) {
    final VirtualFile[] files=file.getChildren();
    for (    VirtualFile child : files) {
      collectItems(child,StringUtil.getQualifiedName(fullName,child.getName()));
    }
    return;
  }
  if (StdFileTypes.CLASS.equals(file.getFileType())) {
    final VirtualFile sourceFile=myContext.getSourceFileByOutputFile(file);
    if (sourceFile != null && myFacet.shouldRunEnhancerFor(sourceFile)) {
      String className=StringUtil.trimEnd(fullName,".class");
      int classId=mySymbolTable.getId(className);
      List<VirtualFile> dependencies=new SmartList<VirtualFile>();
      while (classId != Cache.UNKNOWN) {
        final String path=myCache.getPath(classId);
        if (!StringUtil.isEmpty(path)) {
          final VirtualFile classFile=myLocalFileSystem.findFileByPath(FileUtil.toSystemIndependentName(path));
          if (classFile != null) {
            dependencies.add(classFile);
          }
        }
        classId=myCache.getSuperQualifiedName(classId);
      }
      myItems.add(new ClassFileItem(file,sourceFile,myFacet,dependencies));
    }
  }
}
