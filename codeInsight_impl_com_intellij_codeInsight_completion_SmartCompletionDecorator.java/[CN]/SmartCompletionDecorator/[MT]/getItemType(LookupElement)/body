{
  final TypedLookupItem typed=element.as(TypedLookupItem.class);
  if (typed != null) {
    return typed.getType();
  }
  final LookupItem item=element.as(LookupItem.class);
  if (item == null) {
    return null;
  }
  final PsiType attrType=(PsiType)item.getAttribute(LookupItem.TYPE);
  if (attrType != null) {
    return attrType;
  }
  PsiSubstitutor substitutor=(PsiSubstitutor)item.getAttribute(LookupItem.SUBSTITUTOR);
  if (element.getObject() instanceof PsiMethod) {
    final PsiMethod method=(PsiMethod)element.getObject();
    for (    final ExpectedTypeInfo _type : myExpectedTypeInfos) {
      if (hasUnboundTypeParams(method)) {
        PsiSubstitutor retSubstitutor=calculateMethodReturnTypeSubstitutor(method,_type.getType());
        if (substitutor == null) {
          substitutor=retSubstitutor;
        }
 else {
          substitutor=substitutor.putAll(retSubstitutor);
        }
        break;
      }
    }
  }
  final PsiType byElement=FilterUtil.getTypeByElement((PsiElement)element.getObject(),myPosition);
  if (substitutor != null) {
    return substitutor.substitute(byElement);
  }
  return byElement;
}
