{
  super(table,property);
  myProperty=property;
  myComponents.add(table);
  final JTableHeader header=table.getTableHeader();
  header.setReorderingAllowed(false);
  header.setResizingAllowed(false);
  TableColumnModel columnModel=table.getColumnModel();
  myModel=new ListTableModel<T>(columns);
  myModel.setSortable(false);
  table.setModel(myModel);
  for (int i=0; i < columns.length; i++) {
    ColumnInfo column=columns[i];
    TableColumn tableColumn=columnModel.getColumn(i);
    TableCellEditor editor=column.getEditor(null);
    if (editor != null) {
      tableColumn.setCellEditor(editor);
    }
    int wight=column.getWidth(table);
    if (wight > 0) {
      tableColumn.setMinWidth(wight);
      tableColumn.setMaxWidth(wight);
    }
  }
  table.setSurrendersFocusOnKeystroke(true);
  header.setDefaultRenderer(new TableHeaderRenderer(myModel));
  header.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    final MouseEvent e){
      if (myModel.isSortable()) {
        final int column=table.convertColumnIndexToModel(header.columnAtPoint(e.getPoint()));
        myModel.sortByColumn(column);
      }
    }
  }
);
  myModel.addTableModelListener(new TableModelListener(){
    public void tableChanged(    final TableModelEvent e){
      final JTableHeader header=getComponent().getTableHeader();
      if (header != null) {
        header.repaint();
      }
    }
  }
);
}
