{
  myAbstractEnabled=abstractColumnHeader != null;
  myAbstractColumnHeader=abstractColumnHeader;
  myTableModel=new MyTableModel<T,M>(this);
  myMemberInfos=new ArrayList<M>(memberInfos);
  if (memberInfoModel != null) {
    myMemberInfoModel=memberInfoModel;
  }
 else {
    myMemberInfoModel=new DefaultMemberInfoModel<T,M>();
  }
  setModel(myTableModel);
  TableColumnModel model=getColumnModel();
  model.getColumn(DISPLAY_NAME_COLUMN).setCellRenderer(new MyTableRenderer<T,M>(this));
  model.getColumn(CHECKED_COLUMN).setCellRenderer(new MyBooleanRenderer<T,M>(this));
  final int checkBoxWidth=new JCheckBox().getPreferredSize().width;
  model.getColumn(CHECKED_COLUMN).setMaxWidth(checkBoxWidth);
  model.getColumn(CHECKED_COLUMN).setMinWidth(checkBoxWidth);
  if (myAbstractEnabled) {
    int width=(int)(1.3 * getFontMetrics(getFont()).charsWidth(myAbstractColumnHeader.toCharArray(),0,myAbstractColumnHeader.length()));
    model.getColumn(ABSTRACT_COLUMN).setMaxWidth(width);
    model.getColumn(ABSTRACT_COLUMN).setPreferredWidth(width);
    model.getColumn(ABSTRACT_COLUMN).setCellRenderer(new MyBooleanRenderer<T,M>(this));
  }
  setPreferredScrollableViewportSize(new Dimension(400,getRowHeight() * 12));
  getSelectionModel().setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
  setShowGrid(false);
  setIntercellSpacing(new Dimension(0,0));
  new MyEnableDisableAction().register();
  new TableSpeedSearch(this);
}
