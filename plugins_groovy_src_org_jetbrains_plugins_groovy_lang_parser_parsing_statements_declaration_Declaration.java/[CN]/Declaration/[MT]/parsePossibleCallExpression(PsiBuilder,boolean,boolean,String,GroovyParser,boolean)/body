{
  if (isCall(builder)) {
    return WRONGWAY;
  }
  boolean typeParsed=false;
  if (!ParserUtils.lookAhead(builder,mIDENT,mLPAREN)) {
    typeParsed=TypeSpec.parse(builder,true,expressionPossible) != FAIL;
    if (!typeParsed) {
      return WRONGWAY;
    }
  }
  IElementType varDef=VariableDefinitions.parseDefinitions(builder,isInClass,isInAnnotation,typeDefinitionName,typeParsed,false,parser);
  if (varDef != WRONGWAY) {
    return varDef;
  }
  if (isInClass && typeParsed) {
    return null;
  }
  return WRONGWAY;
}
