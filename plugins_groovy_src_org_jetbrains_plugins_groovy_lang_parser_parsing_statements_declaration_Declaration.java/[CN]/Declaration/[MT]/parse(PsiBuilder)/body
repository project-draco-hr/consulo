{
  IElementType modifiers=Modifiers.parse(builder);
  if (!tWRONG_SET.contains(modifiers)) {
    TypeSpec.parse(builder);
    if (tWRONG_SET.contains(VariableDefinitions.parse(builder))) {
      builder.error(GroovyBundle.message("variable.definitions.expected"));
      return WRONGWAY;
    }
  }
 else {
    if (tWRONG_SET.contains(TypeSpec.parse(builder))) {
      builder.error(GroovyBundle.message("type.specification.expected"));
      return WRONGWAY;
    }
    if (tWRONG_SET.contains(VariableDefinitions.parse(builder))) {
      builder.error(GroovyBundle.message("variable.definitions.expected"));
      return WRONGWAY;
    }
  }
  return DECLARATION;
}
