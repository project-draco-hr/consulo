{
  PsiBuilder.Marker declMarker=builder.mark();
  boolean modifiersParsed=Modifiers.parse(builder,parser);
  final boolean methodStart=mLT == builder.getTokenType();
  final IElementType type=parseAfterModifiers(builder,isInClass,isInAnnotation,parser,declMarker,modifiersParsed);
  if (type == WRONGWAY) {
    if (modifiersParsed && methodStart) {
      declMarker.error(GroovyBundle.message("method.definitions.expected"));
      return false;
    }
    declMarker.rollbackTo();
    if (modifiersParsed) {
      builder.error(GroovyBundle.message("variable.definitions.expected"));
    }
    return false;
  }
  if (type != null) {
    declMarker.done(type);
  }
 else {
    declMarker.drop();
  }
  return true;
}
