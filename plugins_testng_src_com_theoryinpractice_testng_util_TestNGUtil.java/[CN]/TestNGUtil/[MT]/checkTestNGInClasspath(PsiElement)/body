{
  final Project project=psiElement.getProject();
  final PsiManager manager=PsiManager.getInstance(project);
  if (manager.findClass(TestNG.class.getName(),psiElement.getResolveScope()) == null) {
    if (!ApplicationManager.getApplication().isUnitTestMode()) {
      if (Messages.showOkCancelDialog(psiElement.getProject(),"TestNG will be added to module classpath","Unable to convert.",Messages.getWarningIcon()) != DialogWrapper.OK_EXIT_CODE) {
        return false;
      }
    }
    final Module module=ModuleUtil.findModuleForPsiElement(psiElement);
    final ModifiableRootModel model=ModuleRootManager.getInstance(module).getModifiableModel();
    final Library.ModifiableModel libraryModel=model.getModuleLibraryTable().createLibrary().getModifiableModel();
    String url=VfsUtil.getUrlForLibraryRoot(new File(PathUtil.getJarPathForClass(Assert.class)));
    VirtualFile libVirtFile=VirtualFileManager.getInstance().findFileByUrl(url);
    libraryModel.addRoot(libVirtFile,OrderRootType.CLASSES);
    libraryModel.commit();
    model.commit();
  }
  return true;
}
