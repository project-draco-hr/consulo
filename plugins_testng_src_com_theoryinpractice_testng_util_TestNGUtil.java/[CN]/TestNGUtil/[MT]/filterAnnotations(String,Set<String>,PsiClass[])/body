{
  Map<PsiClass,Collection<PsiMethod>> results=new HashMap<PsiClass,Collection<PsiMethod>>();
  Set<String> test=new HashSet<String>(1);
  test.add(TEST_ANNOTATION_FQN);
  test.addAll(Arrays.asList(CONFIG_ANNOTATIONS_FQN));
  for (  PsiClass psiClass : classes) {
    PsiAnnotation annotation=AnnotationUtil.findAnnotation(psiClass,test);
    if (annotation != null) {
      PsiNameValuePair[] pair=annotation.getParameterList().getAttributes();
      OUTER:       for (      PsiNameValuePair aPair : pair) {
        if (parameter.equals(aPair.getName())) {
          Collection<String> matches=extractValuesFromParameter(aPair);
          for (          String s : matches) {
            if (values.contains(s)) {
              results.put(psiClass,new HashSet<PsiMethod>());
              break OUTER;
            }
          }
        }
      }
    }
 else {
      Collection<String> matches=extractAnnotationValuesFromJavaDoc(getTextJavaDoc(psiClass),parameter);
      for (      String s : matches) {
        if (values.contains(s)) {
          results.put(psiClass,new HashSet<PsiMethod>());
          break;
        }
      }
    }
    PsiMethod[] methods=psiClass.getMethods();
    for (    PsiMethod method : methods) {
      annotation=AnnotationUtil.findAnnotation(method,test);
      if (annotation != null) {
        PsiNameValuePair[] pair=annotation.getParameterList().getAttributes();
        OUTER:         for (        PsiNameValuePair aPair : pair) {
          if (parameter.equals(aPair.getName())) {
            Collection<String> matches=extractValuesFromParameter(aPair);
            for (            String s : matches) {
              if (values.contains(s)) {
                if (results.get(psiClass) == null)                 results.put(psiClass,new HashSet<PsiMethod>());
                results.get(psiClass).add(method);
                break OUTER;
              }
            }
          }
        }
      }
 else {
        Collection<String> matches=extractAnnotationValuesFromJavaDoc(getTextJavaDoc(psiClass),parameter);
        for (        String s : matches) {
          if (values.contains(s)) {
            results.get(psiClass).add(method);
          }
        }
      }
    }
  }
  return results;
}
