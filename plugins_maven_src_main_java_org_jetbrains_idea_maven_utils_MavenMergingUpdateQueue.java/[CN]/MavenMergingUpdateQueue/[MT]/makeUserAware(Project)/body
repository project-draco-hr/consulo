{
  new ReadAction(){
    protected void run(    Result result) throws Throwable {
      EditorEventMulticaster multicaster=EditorFactory.getInstance().getEventMulticaster();
      multicaster.addCaretListener(new CaretListener(){
        public void caretPositionChanged(        CaretEvent e){
          MavenMergingUpdateQueue.this.restartTimer();
        }
      }
,MavenMergingUpdateQueue.this);
      multicaster.addDocumentListener(new DocumentAdapter(){
        public void documentChanged(        DocumentEvent event){
          MavenMergingUpdateQueue.this.restartTimer();
        }
      }
,MavenMergingUpdateQueue.this);
      project.getMessageBus().connect(MavenMergingUpdateQueue.this).subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootListener(){
        int beforeCalled;
        public void beforeRootsChange(        ModuleRootEvent event){
          if (beforeCalled++ == 0) {
            suspend();
          }
        }
        public void rootsChanged(        ModuleRootEvent event){
          if (beforeCalled == 0)           return;
          if (--beforeCalled == 0) {
            resume();
            MavenMergingUpdateQueue.this.restartTimer();
          }
        }
      }
);
    }
  }
.execute();
}
