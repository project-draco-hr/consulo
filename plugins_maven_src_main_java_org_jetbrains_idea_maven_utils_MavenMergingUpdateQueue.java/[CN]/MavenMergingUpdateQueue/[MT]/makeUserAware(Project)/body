{
  new ReadAction(){
    protected void run(    Result result) throws Throwable {
      EditorEventMulticaster multicaster=EditorFactory.getInstance().getEventMulticaster();
      multicaster.addCaretListener(new CaretListener(){
        public void caretPositionChanged(        CaretEvent e){
          MavenMergingUpdateQueue.this.restartTimer();
        }
      }
,MavenMergingUpdateQueue.this);
      multicaster.addDocumentListener(new DocumentAdapter(){
        public void documentChanged(        DocumentEvent event){
          MavenMergingUpdateQueue.this.restartTimer();
        }
      }
,MavenMergingUpdateQueue.this);
      ProjectRootManager.getInstance(project).addModuleRootListener(new ModuleRootListener(){
        boolean beforeCalled=false;
        public void beforeRootsChange(        ModuleRootEvent event){
          suspend();
          beforeCalled=true;
        }
        public void rootsChanged(        ModuleRootEvent event){
          if (!beforeCalled)           return;
          beforeCalled=false;
          resume();
          MavenMergingUpdateQueue.this.restartTimer();
        }
      }
,MavenMergingUpdateQueue.this);
    }
  }
.execute();
}
