{
  MavenUtil.invokeAndWait(project,new Runnable(){
    public void run(){
      final ModalityStateListener listener=new ModalityStateListener(){
        public void beforeModalityStateChanged(        boolean entering){
          if (entering) {
            suspend();
          }
 else {
            resume();
          }
        }
      }
;
      LaterInvocator.addModalityStateListener(listener);
      if (MavenUtil.isInModalContext()) {
        suspend();
      }
      Disposer.register(MavenMergingUpdateQueue.this,new Disposable(){
        public void dispose(){
          LaterInvocator.removeModalityStateListener(listener);
        }
      }
);
    }
  }
);
}
