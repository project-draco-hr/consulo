{
  final IdeaTestFixtureFactory fixtureFactory=IdeaTestFixtureFactory.getFixtureFactory();
  myTempDirFixture=fixtureFactory.createTempDirTestFixture();
  myTempDirFixture.setUp();
  final File svnRoot=new File(myTempDirFixture.getTempDirPath(),"svnroot");
  svnRoot.mkdir();
  File pluginRoot=new File(PathManager.getHomePath(),"svnPlugins/svn4idea");
  if (!pluginRoot.isDirectory()) {
    Class aClass=SvnTestCase.class;
    String rootPath=PathManager.getResourceRoot(aClass,"/" + aClass.getName().replace('.','/') + ".class");
    pluginRoot=new File(rootPath).getParentFile().getParentFile().getParentFile();
  }
  myClientBinaryPath=new File(pluginRoot,"testData/svn/bin");
  verify(runSvnAdmin("create",svnRoot.getPath()));
  myWcRoot=new File(myTempDirFixture.getTempDirPath(),"wcroot");
  myWcRoot.mkdir();
  myRepoUrl="file:///" + FileUtil.toSystemIndependentName(svnRoot.getPath());
  verify(runSvn("co",myRepoUrl,"."));
  initProject(myWcRoot);
  activateVCS(SvnVcs.VCS_NAME);
  myGate=new MockChangeListManagerGate(ChangeListManager.getInstance(myProject));
  SvnVcs.getInstance(myProject).invokeRefreshSvnRoots(true);
  try {
    Thread.sleep(300);
  }
 catch (  InterruptedException e) {
  }
}
