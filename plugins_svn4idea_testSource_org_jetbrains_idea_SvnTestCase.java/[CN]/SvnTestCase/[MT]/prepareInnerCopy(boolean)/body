{
  final String mainUrl=myRepoUrl + "/root/source";
  final String externalURL;
  if (anotherRepository) {
    createAnotherRepo();
    externalURL=myAnotherRepoUrl + "/root/target";
  }
 else {
    externalURL=myRepoUrl + "/root/target";
  }
  final ChangeListManagerImpl clManager=(ChangeListManagerImpl)ChangeListManager.getInstance(myProject);
  final SubTree subTree=new SubTree(myWorkingCopyDir);
  checkin();
  clManager.stopEveryThingIfInTestMode();
  sleep(100);
  final File rootFile=new File(subTree.myRootDir.getPath());
  FileUtil.delete(rootFile);
  FileUtil.delete(new File(myWorkingCopyDir.getPath() + File.separator + ".svn"));
  Assert.assertTrue(!rootFile.exists());
  sleep(200);
  myWorkingCopyDir.refresh(false,true);
  runInAndVerifyIgnoreOutput("co",mainUrl);
  final File sourceDir=new File(myWorkingCopyDir.getPath(),"source");
  final File innerDir=new File(sourceDir,"inner1/inner2/inner");
  runInAndVerifyIgnoreOutput("co",externalURL,innerDir.getPath());
  sleep(100);
  myWorkingCopyDir.refresh(false,true);
  clManager.forceGoInTestMode();
  refreshSvnMappingsSynchronously();
}
