{
  final ChangeListManagerImpl clManager=(ChangeListManagerImpl)ChangeListManager.getInstance(myProject);
  final SvnVcs vcs=SvnVcs.getInstance(myProject);
  final String mainUrl=myRepoUrl + "/root/source";
  final String externalURL=myRepoUrl + "/root/target";
  final SubTree subTree=new SubTree(myWorkingCopyDir);
  checkin();
  clManager.stopEveryThingIfInTestMode();
  sleep(100);
  final File rootFile=new File(subTree.myRootDir.getPath());
  FileUtil.delete(rootFile);
  FileUtil.delete(new File(myWorkingCopyDir.getPath() + File.separator + ".svn"));
  Assert.assertTrue(!rootFile.exists());
  sleep(200);
  myWorkingCopyDir.refresh(false,true);
  final File sourceDir=new File(myWorkingCopyDir.getPath(),"source");
  verify(runSvn("co",mainUrl,sourceDir.getPath()));
  CreateExternalAction.addToExternalProperty(vcs,sourceDir,"external",externalURL);
  sleep(100);
  verify(runSvn("up",sourceDir.getPath()));
  verify(runSvn("ci","-m","test",sourceDir.getPath()));
  sleep(100);
  myWorkingCopyDir.refresh(false,true);
  Assert.assertTrue(new File(sourceDir,"external").exists());
  clManager.forceGoInTestMode();
  vcs.invokeRefreshSvnRoots(false);
  clManager.ensureUpToDate(false);
  clManager.ensureUpToDate(false);
}
