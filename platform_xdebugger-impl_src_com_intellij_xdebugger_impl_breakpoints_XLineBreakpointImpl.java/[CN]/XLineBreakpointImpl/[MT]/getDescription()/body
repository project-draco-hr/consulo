{
  @NonNls StringBuilder builder=StringBuilderSpinAllocator.alloc();
  try {
    builder.append("<html><body>");
    builder.append(myType.getDisplayText(this));
    String errorMessage=getErrorMessage();
    if (errorMessage != null) {
      builder.append(BR_NBSP);
      builder.append("<font color=\"red\">");
      builder.append(errorMessage);
      builder.append("</font>");
    }
    SuspendPolicy suspendPolicy=getSuspendPolicy();
    if (suspendPolicy == SuspendPolicy.THREAD) {
      builder.append(BR_NBSP).append(XDebuggerBundle.message("xbreakpoint.tooltip.suspend.policy.thread"));
    }
 else     if (suspendPolicy == SuspendPolicy.NONE) {
      builder.append(BR_NBSP).append(XDebuggerBundle.message("xbreakpoint.tooltip.suspend.policy.none"));
    }
    String condition=getCondition();
    if (condition != null) {
      builder.append(BR_NBSP);
      builder.append(XDebuggerBundle.message("xbreakpoint.tooltip.condition"));
      builder.append("&nbsp;");
      builder.append(condition);
    }
    if (isLogMessage()) {
      builder.append(BR_NBSP).append(XDebuggerBundle.message("xbreakpoint.tooltip.log.message"));
    }
    String logExpression=getLogExpression();
    if (logExpression != null) {
      builder.append(BR_NBSP);
      builder.append(XDebuggerBundle.message("xbreakpoint.tooltip.log.expression"));
      builder.append("&nbsp;");
      builder.append(logExpression);
    }
    XBreakpoint<?> masterBreakpoint=getBreakpointManager().getDependentBreakpointManager().getMasterBreakpoint(this);
    if (masterBreakpoint != null) {
      builder.append(BR_NBSP);
      String str=XDebuggerBundle.message("xbreakpoint.tooltip.depends.on");
      builder.append(str);
      builder.append("&nbsp;");
      builder.append(XBreakpointUtil.getDisplayText(masterBreakpoint));
    }
    builder.append("</body><html");
    return builder.toString();
  }
  finally {
    StringBuilderSpinAllocator.dispose(builder);
  }
}
