{
  final FilePath filePath=new FilePathImpl(file);
  final VcsRevisionNumber currentRevisionNumber=GitHistoryUtils.getCurrentRevision(project,filePath,currentBranch);
  final VcsRevisionNumber compareRevisionNumber=GitHistoryUtils.getCurrentRevision(project,filePath,compareBranch);
  if (compareRevisionNumber == null) {
    GitVcs.IMPORTANT_ERROR_NOTIFICATION.createNotification("File doesn't exist in branch","File " + file.getPresentableUrl() + " doesn't exist in branch ["+ compareBranch+ "]",NotificationType.INFORMATION,null).notify(project);
    return;
  }
  final VcsFileRevision compareRevision=new GitFileRevision(project,filePath,(GitRevisionNumber)compareRevisionNumber);
  final String currentTitle=currentRevisionNumber != null ? ((GitRevisionNumber)currentRevisionNumber).getShortRev() + " on " + currentBranch : "Local changes on " + currentBranch;
  final String compareTitle=((GitRevisionNumber)compareRevisionNumber).getShortRev() + " on " + compareBranch;
  VcsHistoryUtil.showDiff(project,filePath,new CurrentRevision(file,currentRevisionNumber),compareRevision,currentTitle,compareTitle);
}
