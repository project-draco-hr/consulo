{
  if (!(qualifierType instanceof PsiClassType))   return;
  final PsiClassType.ClassResolveResult resolveResult=((PsiClassType)qualifierType).resolveGenerics();
  final PsiClass psiClass=resolveResult.getElement();
  if (!(psiClass instanceof GrTypeDefinition) || ((GrTypeDefinition)psiClass).isAnonymous() || psiClass.isInterface()|| psiClass.isEnum()) {
    return;
  }
  if (!hasInheritConstructorsAnnotation(psiClass))   return;
  final PsiClass superClass=psiClass.getSuperClass();
  if (superClass == null)   return;
  final PsiSubstitutor substitutor=state.get(PsiSubstitutor.KEY);
  final PsiSubstitutor superClassSubstitutor=TypeConversionUtil.getSuperClassSubstitutor(superClass,psiClass,substitutor);
  final ResolveState currentState=state.put(PsiSubstitutor.KEY,superClassSubstitutor);
  final PsiMethod[] constructors=superClass.getConstructors();
  for (  PsiMethod constructor : constructors) {
    if (!processor.execute(constructor,currentState))     return;
  }
}
