{
  super(new ANDCombinedMemberInfoModel<PsiMember,MemberInfo>(new UsesDependencyMemberInfoModel<PsiMember,PsiClass,MemberInfo>(aClass,superClass,recursive){
    public int checkForProblems(    @NotNull MemberInfo memberInfo){
      final int problem=super.checkForProblems(memberInfo);
      if (problem == OK)       return OK;
      final PsiMember member=memberInfo.getMember();
      if (member instanceof PsiMethod) {
        if (interfaceContainmentVerifier.checkedInterfacesContain((PsiMethod)member))         return OK;
      }
      return problem;
    }
  }
,new InterfaceDependencyMemberInfoModel(aClass)));
}
