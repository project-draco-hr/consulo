{
  Map<String,CachedValue<XmlNSDescriptor>> map=null;
  final String noNamespaceDeclaration=getAttributeValue("noNamespaceSchemaLocation",XmlUtil.XML_SCHEMA_INSTANCE_URI);
  final String schemaLocationDeclaration=getAttributeValue("schemaLocation",XmlUtil.XML_SCHEMA_INSTANCE_URI);
  if (noNamespaceDeclaration != null) {
    map=initializeSchema(XmlUtil.EMPTY_URI,null,noNamespaceDeclaration,map);
  }
  if (schemaLocationDeclaration != null) {
    final StringTokenizer tokenizer=new StringTokenizer(schemaLocationDeclaration);
    while (tokenizer.hasMoreTokens()) {
      final String uri=tokenizer.nextToken();
      if (tokenizer.hasMoreTokens()) {
        map=initializeSchema(uri,null,tokenizer.nextToken(),map);
      }
    }
  }
  if (hasNamespaceDeclarations()) {
    for (    final XmlAttribute attribute : getAttributes()) {
      if (attribute.isNamespaceDeclaration()) {
        String ns=attribute.getValue();
        if (ns == null)         ns=XmlUtil.EMPTY_URI;
        ns=getRealNs(ns);
        if (map == null || !map.containsKey(ns)) {
          map=initializeSchema(ns,getNSVersion(ns,this),getNsLocation(ns),map);
        }
      }
    }
  }
  return map == null ? Collections.<String,CachedValue<XmlNSDescriptor>>emptyMap() : map;
}
