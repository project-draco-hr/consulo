{
  final PsiElement parentElement=getParent();
  BidirectionalMap<String,String> map=initNamespaceMaps(parentElement);
  Set<String> known=Collections.emptySet();
  if (map != null) {
    known=new HashSet<String>(map.values());
  }
  if (parentElement instanceof XmlTag) {
    if (known.isEmpty())     return ((XmlTag)parentElement).knownNamespaces();
    ContainerUtil.addAll(known,((XmlTag)parentElement).knownNamespaces());
  }
 else {
    XmlExtension xmlExtension=XmlExtension.getExtensionByElement(this);
    if (xmlExtension != null) {
      final XmlFile xmlFile=xmlExtension.getContainingFile(this);
      if (xmlFile != null) {
        final XmlTag rootTag=xmlFile.getRootTag();
        if (rootTag != null && rootTag != this) {
          if (known.isEmpty())           return rootTag.knownNamespaces();
          ContainerUtil.addAll(known,rootTag.knownNamespaces());
        }
      }
    }
  }
  return ArrayUtil.toStringArray(known);
}
