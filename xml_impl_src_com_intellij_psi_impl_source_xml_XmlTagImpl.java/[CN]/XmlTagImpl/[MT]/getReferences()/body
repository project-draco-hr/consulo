{
  ProgressManager.checkCanceled();
  final ASTNode startTagName=XmlChildRole.START_TAG_NAME_FINDER.findChild(this);
  if (startTagName == null)   return PsiReference.EMPTY_ARRAY;
  final ASTNode endTagName=XmlChildRole.CLOSING_TAG_NAME_FINDER.findChild(this);
  List<PsiReference> refs=new ArrayList<PsiReference>();
  String prefix=getNamespacePrefix();
  TagNameReference startTagRef=TagNameReference.createTagNameReference(this,startTagName,true);
  if (startTagRef != null) {
    refs.add(startTagRef);
  }
  if (prefix.length() > 0) {
    refs.add(createPrefixReference(startTagName,prefix,startTagRef));
  }
  if (endTagName != null) {
    TagNameReference endTagRef=TagNameReference.createTagNameReference(this,endTagName,false);
    if (endTagRef != null) {
      refs.add(endTagRef);
    }
    prefix=XmlUtil.findPrefixByQualifiedName(endTagName.getText());
    if (StringUtil.isNotEmpty(prefix)) {
      refs.add(createPrefixReference(endTagName,prefix,endTagRef));
    }
  }
  for (  PsiReference ref : ReferenceProvidersRegistry.getReferencesFromProviders(this,XmlTag.class)) {
    refs.add(ref);
  }
  return ContainerUtil.toArray(refs,new PsiReference[refs.size()]);
}
