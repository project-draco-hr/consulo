{
  Map<String,CachedValue<XmlNSDescriptor>> map=myNSDescriptorsMap;
  if (map == null) {
    boolean exceptionOccurred=false;
    try {
      final String noNamespaceDeclaration=getAttributeValue("noNamespaceSchemaLocation",XmlUtil.XML_SCHEMA_INSTANCE_URI);
      final String schemaLocationDeclaration=getAttributeValue("schemaLocation",XmlUtil.XML_SCHEMA_INSTANCE_URI);
      if (noNamespaceDeclaration != null) {
        map=initializeSchema(XmlUtil.EMPTY_URI,null,noNamespaceDeclaration,map);
      }
      if (schemaLocationDeclaration != null) {
        final StringTokenizer tokenizer=new StringTokenizer(schemaLocationDeclaration);
        while (tokenizer.hasMoreTokens()) {
          final String uri=tokenizer.nextToken();
          if (tokenizer.hasMoreTokens()) {
            map=initializeSchema(uri,null,tokenizer.nextToken(),map);
          }
        }
      }
      if (hasNamespaceDeclarations()) {
        for (        final XmlAttribute attribute : getAttributes()) {
          if (attribute.isNamespaceDeclaration()) {
            String ns=attribute.getValue();
            if (ns == null)             ns=XmlUtil.EMPTY_URI;
            if (map == null || !map.containsKey(ns)) {
              map=initializeSchema(ns,getNSVersion(ns,this),ns,map);
            }
          }
        }
      }
    }
 catch (    RuntimeException e) {
      myNSDescriptorsMap=null;
      exceptionOccurred=true;
      throw e;
    }
 finally {
      if (map == null && !exceptionOccurred) {
        map=Collections.emptyMap();
      }
    }
    myNSDescriptorsMap=map;
  }
  return map;
}
