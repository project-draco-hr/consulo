{
  for (  XmlElementDescriptorProvider provider : Extensions.getExtensions(XmlElementDescriptorProvider.EP_NAME)) {
    XmlElementDescriptor elementDescriptor=provider.getDescriptor(this);
    if (elementDescriptor != null) {
      return elementDescriptor;
    }
  }
  final String namespace=getNamespace();
  if (XmlUtil.EMPTY_URI.equals(namespace)) {
    final XmlTag parent=getParentTag();
    if (parent != null) {
      final XmlElementDescriptor descriptor=parent.getDescriptor();
      if (descriptor != null) {
        XmlElementDescriptor fromParent=descriptor.getElementDescriptor(this,parent);
        if (fromParent != null && !(fromParent instanceof AnyXmlElementDescriptor)) {
          return fromParent;
        }
      }
    }
  }
  XmlElementDescriptor elementDescriptor=null;
  final XmlNSDescriptor nsDescriptor=getNSDescriptor(namespace,false);
  LOG.debug("Descriptor for namespace " + namespace + " is "+ (nsDescriptor != null ? nsDescriptor.getClass().getCanonicalName() : "NULL"));
  if (nsDescriptor != null) {
    if (!DumbService.getInstance(getProject()).isDumb() || DumbService.isDumbAware(nsDescriptor)) {
      elementDescriptor=nsDescriptor.getElementDescriptor(this);
    }
  }
  if (elementDescriptor == null) {
    return XmlUtil.findXmlDescriptorByType(this);
  }
  return elementDescriptor;
}
