{
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  final PsiExpression qualifierExpression=methodExpression.getQualifierExpression();
  final String qualifierText;
  if (qualifierExpression == null) {
    qualifierText="";
  }
 else {
    qualifierText=qualifierExpression.getText();
  }
  final PsiExpressionList argumentList=call.getArgumentList();
  final PsiExpression expression=argumentList.getExpressions()[0];
  @NonNls final String newExpressionText=qualifierText + ".contains(" + expression.getText()+ ')';
  if (tokenType.equals(JavaTokenType.EQEQ)) {
    return '!' + newExpressionText;
  }
 else   if (!flipped && (tokenType.equals(JavaTokenType.LT) || tokenType.equals(JavaTokenType.LE))) {
    return '!' + newExpressionText;
  }
 else   if (flipped && (tokenType.equals(JavaTokenType.GT) || tokenType.equals(JavaTokenType.GE))) {
    return '!' + newExpressionText;
  }
  return newExpressionText;
}
