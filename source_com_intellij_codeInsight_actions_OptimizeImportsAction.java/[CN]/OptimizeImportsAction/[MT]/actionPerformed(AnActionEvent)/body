{
  DataContext dataContext=event.getDataContext();
  final Project project=(Project)dataContext.getData(DataConstants.PROJECT);
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  Editor editor=(Editor)dataContext.getData(DataConstants.EDITOR);
  PsiFile file=null;
  PsiDirectory dir;
  if (editor != null) {
    file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
    if (file == null)     return;
    dir=file.getContainingDirectory();
  }
 else {
    Project projectContext=(Project)dataContext.getData(DataConstantsEx.PROJECT_CONTEXT);
    Module moduleContext=(Module)dataContext.getData(DataConstantsEx.MODULE_CONTEXT);
    if (projectContext != null || moduleContext != null) {
      final String text;
      if (moduleContext != null) {
        text="Module '" + moduleContext.getName() + "'";
      }
 else {
        text="Project '" + projectContext.getProjectFilePath() + "'";
      }
      LayoutProjectCodeDialog dialog=new LayoutProjectCodeDialog(project,"Optimize Imports",text,false);
      dialog.show();
      if (!dialog.isOK())       return;
      if (moduleContext != null) {
        new OptimizeImportsProcessor(project,moduleContext).run();
      }
 else {
        new OptimizeImportsProcessor(projectContext).run();
      }
      return;
    }
    PsiElement element=(PsiElement)dataContext.getData(DataConstants.PSI_ELEMENT);
    if (element == null)     return;
    if (element instanceof PsiDirectory) {
      dir=(PsiDirectory)element;
    }
 else {
      file=element.getContainingFile();
      if (file == null)       return;
      dir=file.getContainingDirectory();
    }
  }
  final LayoutCodeDialog dialog=new LayoutCodeDialog(project,"Optimize Imports",file,dir,null,HELP_ID);
  dialog.show();
  if (!dialog.isOK())   return;
  String commandName=getTemplatePresentation().getText();
  if (dialog.isProcessDirectory()) {
    new OptimizeImportsProcessor(project,dir,dialog.isIncludeSubdirectories()).run();
  }
 else {
    new OptimizeImportsProcessor(project,file).run();
  }
}
