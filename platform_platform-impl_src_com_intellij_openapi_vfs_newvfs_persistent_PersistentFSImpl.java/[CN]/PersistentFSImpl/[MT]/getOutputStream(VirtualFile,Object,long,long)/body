{
  final VFileContentChangeEvent event=new VFileContentChangeEvent(requestor,file,file.getModificationStamp(),modStamp,false);
  final List<VFileContentChangeEvent> events=Collections.singletonList(event);
  final BulkFileListener publisher=myEventsBus.syncPublisher(VirtualFileManager.VFS_CHANGES);
  publisher.before(events);
  return new ByteArrayOutputStream(){
    private boolean closed;
    @Override public void close() throws IOException {
      if (closed)       return;
      super.close();
      NewVirtualFileSystem delegate=getDelegate(file);
      OutputStream ioFileStream=delegate.getOutputStream(file,requestor,modStamp,timeStamp);
      OutputStream persistenceStream=writeContent(file,delegate.isReadOnly());
      try {
        persistenceStream.write(buf,0,count);
      }
  finally {
        try {
          ioFileStream.write(buf,0,count);
        }
  finally {
          closed=true;
          persistenceStream.close();
          ioFileStream.close();
          executeTouch(file,false,event.getModificationStamp());
          publisher.after(events);
        }
      }
    }
  }
;
}
