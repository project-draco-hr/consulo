{
  String idRef=XmlHighlightVisitor.getUnquotedValue(value,tag);
  if (tag instanceof HtmlTag) {
    idRef=idRef.toLowerCase();
  }
  if (XmlUtil.isSimpleXmlAttributeValue(idRef,value) && refHolder.isIdReferenceValue(value)) {
    boolean hasIdDeclaration=refHolder.hasIdDeclaration(idRef);
    if (!hasIdDeclaration && tag instanceof HtmlTag) {
      hasIdDeclaration=refHolder.hasIdDeclaration(value.getValue());
    }
    if (!hasIdDeclaration) {
      for (      XmlIdContributor contributor : Extensions.getExtensions(XmlIdContributor.EP_NAME)) {
        if (contributor.suppressExistingIdValidation(file)) {
          return;
        }
      }
      final FileViewProvider viewProvider=tag.getContainingFile().getViewProvider();
      if (viewProvider instanceof MultiplePsiFilesPerDocumentFileViewProvider) {
        holder.registerProblem(value,XmlErrorMessages.message("invalid.id.reference"),ProblemHighlightType.LIKE_UNKNOWN_SYMBOL,new XmlDeclareIdInCommentAction(idRef));
      }
 else {
        holder.registerProblem(value,XmlErrorMessages.message("invalid.id.reference"),ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
      }
    }
  }
}
