{
  super(new BreakpointTableModel(project));
  setColumnSelectionAllowed(false);
  InputMap inputMap=getInputMap();
  ActionMap actionMap=getActionMap();
  Object o=inputMap.get(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE,0));
  if (o == null) {
    o="enable_disable";
    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE,0),o);
  }
  actionMap.put(o,new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      if (isEditing())       return;
      int[] indices=getSelectedRows();
      boolean currentlyMarked=true;
      for (int i=0; i < indices.length; i++) {
        final Boolean isMarked=(Boolean)getValueAt(indices[i],BreakpointTableModel.ENABLED_STATE);
        currentlyMarked=isMarked != null ? isMarked.booleanValue() : false;
        if (!currentlyMarked) {
          break;
        }
      }
      final Boolean valueToSet=currentlyMarked ? Boolean.FALSE : Boolean.TRUE;
      for (int i=0; i < indices.length; i++) {
        setValueAt(valueToSet,indices[i],BreakpointTableModel.ENABLED_STATE);
      }
    }
  }
);
  setShowGrid(false);
  setIntercellSpacing(new Dimension(0,0));
  setTableHeader(null);
  setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
  setColumnSelectionAllowed(false);
  int width=new JCheckBox().getPreferredSize().width;
  TableColumnModel columnModel=getColumnModel();
  TableColumn enabledStateColumn=columnModel.getColumn(BreakpointTableModel.ENABLED_STATE);
  enabledStateColumn.setPreferredWidth(width);
  enabledStateColumn.setMaxWidth(width);
  final Class enabledStateColumnClass=getModel().getColumnClass(BreakpointTableModel.ENABLED_STATE);
  final TableCellRenderer delegateRenderer=getDefaultRenderer(enabledStateColumnClass);
  setDefaultRenderer(enabledStateColumnClass,new DefaultTableCellRenderer(){
    public Component getTableCellRendererComponent(    JTable table,    Object value,    boolean isSelected,    boolean hasFocus,    int row,    int column){
      final Component component=delegateRenderer.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
      if (component instanceof JComponent) {
        ((JComponent)component).setBorder(null);
      }
      return component;
    }
  }
);
  columnModel.getColumn(BreakpointTableModel.NAME).setCellRenderer(new BreakpointNameCellRenderer());
}
