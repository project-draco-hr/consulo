{
  Object[] propertyVariants=getVariantsImpl(refExpr,GrReferenceExpressionImpl.getMethodOrPropertyResolveProcessor(refExpr,null,true));
  PsiType type=null;
  final GrExpression qualifier=refExpr.getQualifierExpression();
  if (qualifier == null) {
    PsiElement parent=refExpr.getParent();
    if (parent instanceof GrArgumentList) {
      final PsiElement pparent=parent.getParent();
      if (pparent instanceof GrExpression) {
        GrExpression call=(GrExpression)pparent;
        type=call.getType();
      }
    }
  }
 else {
    type=qualifier.getType();
  }
  if (type instanceof PsiClassType) {
    PsiClass clazz=((PsiClassType)type).resolve();
    if (clazz != null) {
      List<LookupElement> props=getPropertyVariants(refExpr,clazz);
      if (props.size() > 0) {
        propertyVariants=ArrayUtil.mergeArrays(propertyVariants,props.toArray(new Object[props.size()]),Object.class);
      }
      propertyVariants=ArrayUtil.mergeArrays(propertyVariants,clazz.getFields(),Object.class);
    }
  }
  if (refExpr.getKind() == GrReferenceExpressionImpl.Kind.TYPE_OR_PROPERTY) {
    ResolverProcessor classVariantsCollector=new ClassResolverProcessor(null,refExpr,true);
    final Object[] classVariants=getVariantsImpl(refExpr,classVariantsCollector);
    return ArrayUtil.mergeArrays(propertyVariants,classVariants,Object.class);
  }
 else {
    return propertyVariants;
  }
}
