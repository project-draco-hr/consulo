{
  List<String> namedArgsVariants=new LinkedList<String>();
  if (refParent instanceof GrArgumentList) {
    PsiElement refPParent=refParent.getParent();
    if (refPParent instanceof GrCall) {
      GroovyResolveResult[] results=new GroovyResolveResult[0];
      if (refPParent instanceof GrConstructorCall) {
        GrConstructorCall constructorCall=(GrConstructorCall)refPParent;
        results=ArrayUtil.mergeArrays(results,constructorCall.multiResolveConstructor(),GroovyResolveResult.class);
      }
 else       if (refPParent instanceof GrCallExpression) {
        GrCallExpression constructorCall=(GrCallExpression)refPParent;
        results=ArrayUtil.mergeArrays(results,constructorCall.getMethodVariants(),GroovyResolveResult.class);
      }
 else       if (refPParent instanceof GrApplicationStatementImpl) {
        final GrExpression element=((GrApplicationStatementImpl)refPParent).getFunExpression();
        if (element instanceof GrReferenceElement) {
          results=ArrayUtil.mergeArrays(results,((GrReferenceElement)element).multiResolve(true),GroovyResolveResult.class);
        }
      }
      for (      GroovyResolveResult result : results) {
        PsiElement element=result.getElement();
        if (element instanceof GrMethod) {
          Set<String>[] parametersArray=((GrMethod)element).getNamedParametersArray();
          for (          Set<String> namedParameters : parametersArray) {
            namedArgsVariants.addAll(namedParameters);
          }
        }
      }
    }
  }
  return namedArgsVariants;
}
