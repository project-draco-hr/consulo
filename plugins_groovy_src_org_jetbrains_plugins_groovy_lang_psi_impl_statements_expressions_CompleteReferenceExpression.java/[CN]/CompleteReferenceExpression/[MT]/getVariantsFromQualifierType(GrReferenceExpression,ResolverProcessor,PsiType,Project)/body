{
  final ResolveState state=ResolveState.initial();
  if (qualifierType instanceof PsiClassType) {
    PsiClassType.ClassResolveResult result=((PsiClassType)qualifierType).resolveGenerics();
    PsiClass qualifierClass=result.getElement();
    if (qualifierClass != null) {
      qualifierClass.processDeclarations(processor,state.put(PsiSubstitutor.KEY,result.getSubstitutor()),null,refExpr);
    }
  }
 else   if (qualifierType instanceof PsiArrayType) {
    final GrTypeDefinition arrayClass=GroovyPsiManager.getInstance(project).getArrayClass();
    if (!arrayClass.processDeclarations(processor,state,null,refExpr))     return;
  }
 else   if (qualifierType instanceof PsiIntersectionType) {
    for (    PsiType conjunct : ((PsiIntersectionType)qualifierType).getConjuncts()) {
      getVariantsFromQualifierType(refExpr,processor,conjunct,project);
    }
    return;
  }
  ResolveUtil.processNonCodeMembers(qualifierType,processor,refExpr,state);
}
