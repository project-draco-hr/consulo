{
  super(null,EnumSet.allOf(ResolveKind.class),place,PsiType.EMPTY_ARRAY);
  myConsumer=consumer;
  myMatcher=matcher;
  myParameters=parameters;
  myPreferredFieldNames=addAllRestrictedProperties(place);
  mySkipPackages=shouldSkipPackages(place);
  myEventListener=JavaPsiFacade.getInstance(place.getProject()).findClass("java.util.EventListener",place.getResolveScope());
  myPropertyNames.addAll(myPreferredFieldNames);
  myFieldPointerOperator=place.hasAt();
  myMethodPointerOperator=place.getDotTokenType() == GroovyTokenTypes.mMEMBER_POINTER;
  myIsMap=isMap(place);
  final PsiType thisType=GrReferenceResolveUtil.getQualifierType(place);
  mySubstitutorComputer=new SubstitutorComputer(thisType,PsiType.EMPTY_ARRAY,PsiType.EMPTY_ARRAY,true,place,place.getParent());
}
