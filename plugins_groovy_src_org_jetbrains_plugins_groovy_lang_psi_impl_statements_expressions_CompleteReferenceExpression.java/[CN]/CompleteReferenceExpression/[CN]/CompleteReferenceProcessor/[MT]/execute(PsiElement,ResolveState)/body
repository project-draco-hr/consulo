{
  if (element instanceof PsiMethod && ((PsiMethod)element).isConstructor())   return true;
  PsiNamedElement namedElement=(PsiNamedElement)element;
  boolean isAccessible=isAccessible(namedElement);
  final GroovyPsiElement resolveContext=state.get(RESOLVE_CONTEXT);
  boolean isStaticsOK=isStaticsOK(namedElement,resolveContext,myParameters.getInvocationCount() <= 1);
  PsiSubstitutor substitutor=state.get(PsiSubstitutor.KEY);
  if (substitutor == null)   substitutor=PsiSubstitutor.EMPTY;
  consume(new GroovyResolveResultImpl(namedElement,resolveContext,substitutor,isAccessible,isStaticsOK));
  return true;
}
