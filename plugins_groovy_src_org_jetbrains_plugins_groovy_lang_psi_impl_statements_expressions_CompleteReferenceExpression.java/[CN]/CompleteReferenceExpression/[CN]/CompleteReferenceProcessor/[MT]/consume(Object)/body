{
  if (!(o instanceof GroovyResolveResult)) {
    myConsumer.consume(o);
    return;
  }
  final GroovyResolveResult result=(GroovyResolveResult)o;
  if (!result.isStaticsOK() || !result.isAccessible())   return;
  if (mySkipPackages && result.getElement() instanceof PsiPackage)   return;
  final PsiElement element=result.getElement();
  if (element instanceof PsiVariable && !myMatcher.prefixMatches(((PsiVariable)element).getName())) {
    return;
  }
  addCandidate(result);
  if (element instanceof PsiMethod) {
    processProperty((PsiMethod)element,result);
  }
 else   if (element instanceof GrField) {
    if (((GrField)element).isProperty()) {
      processPropertyFromField((GrField)element,result);
    }
  }
 else   if (element instanceof GrVariable && ((GrVariable)element).getName() != null) {
    myLocalVars.add(((GrVariable)element).getName());
  }
}
