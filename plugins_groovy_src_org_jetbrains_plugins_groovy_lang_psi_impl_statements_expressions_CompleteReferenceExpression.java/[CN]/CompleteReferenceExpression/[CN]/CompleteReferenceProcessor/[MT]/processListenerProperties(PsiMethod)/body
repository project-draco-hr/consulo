{
  if (method.getName().startsWith("add") && method.getParameterList().getParametersCount() == 1) {
    final PsiParameter parameter=method.getParameterList().getParameters()[0];
    final PsiType type=parameter.getType();
    if (type instanceof PsiClassType) {
      final PsiClassType classType=(PsiClassType)type;
      final PsiClass listenerClass=classType.resolve();
      if (listenerClass != null) {
        final PsiMethod[] listenerMethods=listenerClass.getMethods();
        if (InheritanceUtil.isInheritorOrSelf(listenerClass,myEventListener,true)) {
          for (          PsiMethod listenerMethod : listenerMethods) {
            final String name=listenerMethod.getName();
            if (myPropertyNames.add(name)) {
              LookupElementBuilder builder=LookupElementBuilder.create(generatePropertyResolveResult(name,listenerMethod,null,null),name).setIcon(GroovyIcons.PROPERTY);
              myConsumer.consume(builder);
            }
          }
        }
      }
    }
  }
}
