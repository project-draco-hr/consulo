{
  if (condition == null) {
    return;
  }
  if (condition instanceof PsiInstanceOfExpression) {
    final PsiInstanceOfExpression instanceOfExpression=(PsiInstanceOfExpression)condition;
    final PsiExpression operand=instanceOfExpression.getOperand();
    checkCondition(operand,context);
  }
 else   if (condition instanceof PsiBinaryExpression) {
    final PsiBinaryExpression binaryExpression=(PsiBinaryExpression)condition;
    PsiExpression lhs=binaryExpression.getLOperand();
    PsiExpression rhs=binaryExpression.getROperand();
    if (rhs == null) {
      return;
    }
    lhs=ParenthesesUtils.stripParentheses(lhs);
    rhs=ParenthesesUtils.stripParentheses(rhs);
    if (ComparisonUtils.isComparison(binaryExpression)) {
      if (lhs instanceof PsiLiteralExpression) {
        checkCondition(rhs,context);
      }
 else       if (rhs instanceof PsiLiteralExpression) {
        checkCondition(lhs,context);
      }
    }
  }
 else   if (condition instanceof PsiReferenceExpression) {
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)condition;
    final PsiElement element=referenceExpression.resolve();
    if (element instanceof PsiLocalVariable) {
      final PsiLocalVariable variable=(PsiLocalVariable)element;
      if (!VariableAccessUtils.variableIsAssigned(variable,context)) {
        registerError(condition);
      }
    }
 else     if (element instanceof PsiParameter) {
      final PsiParameter parameter=(PsiParameter)element;
      if (!VariableAccessUtils.variableIsAssigned(parameter,context)) {
        registerError(condition);
      }
    }
  }
 else   if (condition instanceof PsiPrefixExpression) {
    final PsiPrefixExpression prefixExpression=(PsiPrefixExpression)condition;
    final PsiJavaToken sign=prefixExpression.getOperationSign();
    final IElementType tokenType=sign.getTokenType();
    if (JavaTokenType.EXCL.equals(tokenType)) {
      final PsiExpression operand=prefixExpression.getOperand();
      checkCondition(operand,context);
    }
  }
}
