{
  final Project project=getProject();
  final PsiManager manager=PsiManager.getInstance(project);
  final String targetClassName=getTargetClassName();
  final PsiClass targetClass=JavaPsiFacade.getInstance(manager.getProject()).findClass(targetClassName,GlobalSearchScope.allScope(project));
  if (targetClass == null) {
    String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("class.0.not.found",targetClassName));
    CommonRefactoringUtil.showErrorMessage(ReplaceConstructorWithFactoryHandler.REFACTORING_NAME,message,HelpID.REPLACE_CONSTRUCTOR_WITH_FACTORY,project);
    return;
  }
  if (!CommonRefactoringUtil.checkReadOnlyStatus(project,targetClass))   return;
  invokeRefactoring(new ReplaceConstructorWithFactoryProcessor(project,myConstructor,myContainingClass,targetClass,getName()));
}
