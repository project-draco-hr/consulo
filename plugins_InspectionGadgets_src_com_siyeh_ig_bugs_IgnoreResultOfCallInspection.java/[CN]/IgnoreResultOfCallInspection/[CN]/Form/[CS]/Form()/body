{
  super();
  table.setBorder(new EtchedBorder(EtchedBorder.LOWERED));
  table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
  table.setRowSelectionAllowed(true);
  table.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
  table.setEnabled(true);
  final ReturnCheckSpecificationTableModel model=new ReturnCheckSpecificationTableModel();
  table.setModel(model);
  addButton.setEnabled(true);
  addButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      callsToCheck.add(new ReturnCheckSpecification());
      model.fireTableStructureChanged();
    }
  }
);
  deleteButton.setEnabled(true);
  deleteButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final int[] selectedRows=table.getSelectedRows();
      Arrays.sort(selectedRows);
      for (int i=selectedRows.length - 1; i >= 0; i--) {
        callsToCheck.remove(selectedRows[i]);
      }
      model.fireTableStructureChanged();
    }
  }
);
  nonLibraryCheckbox.setEnabled(true);
  nonLibraryCheckbox.setSelected(m_reportAllNonLibraryCalls);
  final ButtonModel buttonModel=nonLibraryCheckbox.getModel();
  buttonModel.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      m_reportAllNonLibraryCalls=buttonModel.isSelected();
    }
  }
);
}
