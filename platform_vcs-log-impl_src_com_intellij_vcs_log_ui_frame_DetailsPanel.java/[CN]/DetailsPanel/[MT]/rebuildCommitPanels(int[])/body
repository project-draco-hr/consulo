{
  myEmptyText.setText("");
  int selectionLength=selection.length;
  int existingCount=(myMainContentPanel.getComponentCount() + 1) / 2;
  int requiredCount=Math.min(selectionLength,MAX_ROWS);
  for (int i=existingCount; i < requiredCount; i++) {
    if (i > 0) {
      myMainContentPanel.add(new SeparatorComponent(0,OnePixelDivider.BACKGROUND,null));
    }
    myMainContentPanel.add(new CommitPanel(myLogData,myColorManager));
  }
  while (myMainContentPanel.getComponentCount() > 2 * requiredCount - 1) {
    myMainContentPanel.remove(myMainContentPanel.getComponentCount() - 1);
  }
  if (selectionLength > MAX_ROWS) {
    myMainContentPanel.add(new SeparatorComponent(0,OnePixelDivider.BACKGROUND,null));
    JBLabel label=new JBLabel("(showing " + MAX_ROWS + " of "+ selectionLength+ " selected commits)");
    label.setFont(VcsHistoryUtil.getCommitDetailsFont());
    label.setBorder(CommitPanel.getDetailsBorder());
    myMainContentPanel.add(label);
  }
  mySelection=Ints.asList(Arrays.copyOf(selection,requiredCount));
  repaint();
}
