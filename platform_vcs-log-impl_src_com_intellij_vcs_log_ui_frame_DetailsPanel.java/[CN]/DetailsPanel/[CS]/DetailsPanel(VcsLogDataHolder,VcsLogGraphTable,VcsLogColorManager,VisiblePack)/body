{
  myLogDataHolder=logDataHolder;
  myGraphTable=graphTable;
  myColorManager=colorManager;
  myDataPack=initialDataPack;
  myRefsPanel=new RefsPanel(myColorManager);
  myCommitDetailsPanel=new DataPanel(logDataHolder.getProject(),logDataHolder.isMultiRoot());
  myScrollPane=new JBScrollPane(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
  myMainContentPanel=new JPanel(new MigLayout("flowy, ins 0, hidemode 3, gapy 0")){
    @Override public Dimension getPreferredSize(){
      Dimension size=super.getPreferredSize();
      size.width=myScrollPane.getViewport().getWidth() - 5;
      return size;
    }
  }
;
  myMainContentPanel.setOpaque(false);
  myScrollPane.setOpaque(false);
  myScrollPane.getViewport().setOpaque(false);
  myScrollPane.setViewportView(myMainContentPanel);
  myMainContentPanel.add(myRefsPanel,"");
  myMainContentPanel.add(myCommitDetailsPanel,"");
  myLoadingPanel=new JBLoadingPanel(new BorderLayout(),logDataHolder,ProgressWindow.DEFAULT_PROGRESS_DIALOG_POSTPONE_TIME_MILLIS){
    @Override public Color getBackground(){
      return getDetailsBackground();
    }
  }
;
  myLoadingPanel.add(myScrollPane);
  myMessagePanel=new MessagePanel();
  setLayout(new CardLayout());
  add(myLoadingPanel,STANDARD_LAYER);
  add(myMessagePanel,MESSAGE_LAYER);
  showMessage("No commits selected");
}
