{
  if (myBranches == null) {
    return "<i>In branches: loading...</i>";
  }
  if (myExpanded) {
    int rowCount=(int)Math.ceil((double)myBranches.size() / BRANCHES_TABLE_COLUMN_COUNT);
    HtmlTableBuilder builder=new HtmlTableBuilder();
    for (int i=0; i < rowCount; i++) {
      builder.startRow();
      if (i == 0) {
        builder.append("<i>In " + myBranches.size() + " branches, </i><a href=\""+ SHOW_OR_HIDE_BRANCHES+ "\"><i>hide</i></a>: ");
      }
 else {
        builder.append("");
      }
      for (int j=0; j < BRANCHES_TABLE_COLUMN_COUNT; j++) {
        int index=rowCount * j + i;
        if (index >= myBranches.size()) {
          builder.append("");
        }
 else         if (index != myBranches.size() - 1) {
          builder.append(myBranches.get(index) + "," + StringUtil.repeat("&nbsp;",20),LEFT_ALIGN);
        }
 else {
          builder.append(myBranches.get(index),LEFT_ALIGN);
        }
      }
      builder.endRow();
    }
    return builder.build();
  }
 else {
    String branchText;
    if (myBranches.size() <= BRANCHES_LIMIT) {
      branchText=StringUtil.join(myBranches,", ");
    }
 else {
      branchText=StringUtil.join(ContainerUtil.getFirstItems(myBranches,BRANCHES_LIMIT),", ") + ", ... <a href=\"" + SHOW_OR_HIDE_BRANCHES+ "\"><i>Show All</i></a>";
    }
    return "<i>In " + myBranches.size() + StringUtil.pluralize(" branch",myBranches.size())+ ":</i> "+ branchText;
  }
}
