{
  PsiFile psiFile=psiClass.getContainingFile();
  VirtualFile vFile=psiFile.getVirtualFile();
  final Project project=psiClass.getProject();
  final ProjectFileIndex idx=ProjectRootManager.getInstance(project).getFileIndex();
  if (vFile == null || !idx.isInLibrarySource(vFile))   return psiClass;
  final List<OrderEntry> orderEntries=idx.getOrderEntriesForFile(vFile);
  final String fqn=psiClass.getQualifiedName();
  if (fqn == null)   return psiClass;
  PsiClass original=JavaPsiFacade.getInstance(project).findClass(fqn,new GlobalSearchScope(project){
    public int compare(    VirtualFile file1,    VirtualFile file2){
      return 0;
    }
    public boolean contains(    VirtualFile file){
      List<OrderEntry> entries=idx.getOrderEntriesForFile(file);
      for (int i=0; i < entries.size(); i++) {
        final OrderEntry entry=entries.get(i);
        if (orderEntries.contains(entry))         return true;
      }
      return false;
    }
    public boolean isSearchInModuleContent(    @NotNull Module aModule){
      return false;
    }
    public boolean isSearchInLibraries(){
      return true;
    }
  }
);
  return original != null ? original : psiClass;
}
