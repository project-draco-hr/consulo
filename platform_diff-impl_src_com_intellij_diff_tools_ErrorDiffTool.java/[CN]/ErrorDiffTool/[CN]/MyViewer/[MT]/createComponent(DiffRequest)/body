{
  if (request instanceof MessageDiffRequest) {
    String message=((MessageDiffRequest)request).getMessage();
    return DiffUtil.createMessagePanel(message);
  }
  if (request instanceof ContentDiffRequest) {
    List<DiffContent> contents=((ContentDiffRequest)request).getContents();
    for (    DiffContent content : contents) {
      if (content instanceof FileContent && content.getContentType() == UnknownFileType.INSTANCE) {
        final VirtualFile file=((FileContent)content).getFile();
        final SimpleColoredComponent label=new SimpleColoredComponent();
        label.append("Can't show diff for unknown file type. ",new SimpleTextAttributes(SimpleTextAttributes.STYLE_PLAIN,UIUtil.getInactiveTextColor()));
        label.append("Associate",SimpleTextAttributes.LINK_ATTRIBUTES,new Runnable(){
          @Override public void run(){
            FileType type=FileTypeChooser.associateFileType(file.getName());
            if (type != null && myContext instanceof DiffContextEx) {
              ((DiffContextEx)myContext).reloadDiffRequest();
            }
          }
        }
);
        LinkMouseListenerBase.installSingleTagOn(label);
        return DiffUtil.createMessagePanel(label);
      }
    }
  }
  return DiffUtil.createMessagePanel("Can't show diff");
}
