{
  getOptions().onNewContent(myCurrentSide);
  final DiffNavigationContext scrollContext=(DiffNavigationContext)myDiffRequest.getGenericData().get(DiffTool.SCROLL_TO_LINE.getName());
  if (scrollContext == null) {
    scrollCurrentToFirstDiff();
  }
 else {
    final Document document=myRightSide.getEditor().getDocument();
    final FragmentList fragmentList=getFragments();
    final Application application=ApplicationManager.getApplication();
    application.executeOnPooledThread(new Runnable(){
      @Override public void run(){
        final ChangedLinesIterator changedLinesIterator=new ChangedLinesIterator(fragmentList.iterator(),document,false);
        final CacheOneStepIterator<Pair<Integer,String>> cacheOneStepIterator=new CacheOneStepIterator<Pair<Integer,String>>(changedLinesIterator);
        final NavigationContextChecker checker=new NavigationContextChecker(cacheOneStepIterator,scrollContext);
        int line=checker.contextMatchCheck();
        if (line < 0) {
          final ChangedLinesIterator changedLinesIterator2=new ChangedLinesIterator(fragmentList.iterator(),document,true);
          final CacheOneStepIterator<Pair<Integer,String>> cacheOneStepIterator2=new CacheOneStepIterator<Pair<Integer,String>>(changedLinesIterator2);
          final NavigationContextChecker checker2=new NavigationContextChecker(cacheOneStepIterator2,scrollContext);
          line=checker2.contextMatchCheck();
        }
        final int finalLine=line;
        application.invokeLater(new Runnable(){
          @Override public void run(){
            if (finalLine >= 0) {
              final int line=myLineBlocks.transform(myRightSide.getSide(),finalLine);
              myLeftSide.scrollToFirstDiff(line);
            }
 else {
              scrollCurrentToFirstDiff();
            }
          }
        }
,ModalityState.stateForComponent(myOwnerWindow));
      }
    }
);
  }
}
