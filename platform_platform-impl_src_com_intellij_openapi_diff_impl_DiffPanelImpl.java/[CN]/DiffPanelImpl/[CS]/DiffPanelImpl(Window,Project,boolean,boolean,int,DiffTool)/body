{
  myProject=project;
  myIsHorizontal=horizontal;
  myParentTool=parentTool;
  myOptions=new DiffPanelOptions(this);
  myPanel=new DiffPanelOuterComponent(TextDiffType.DIFF_TYPES,null);
  myPanel.disableToolbar(!enableToolbar);
  if (enableToolbar)   myPanel.resetToolbar();
  myOwnerWindow=owner;
  myIsSyncScroll=true;
  final boolean v=!horizontal;
  myLeftSide=new DiffSideView(this,new CustomLineBorder(1,0,v ? 0 : 1,v ? 0 : 1));
  myRightSide=new DiffSideView(this,new CustomLineBorder(v ? 0 : 1,v ? 0 : 1,1,0));
  myLeftSide.becomeMaster();
  myDiffUpdater=new Rediffers(this);
  myDiffDividerPolygonsOffset=diffDividerPolygonsOffset;
  myData=createDiffPanelState(this);
  if (horizontal) {
    mySplitter=new DiffSplitter(myLeftSide.getComponent(),myRightSide.getComponent(),new DiffDividerPaint(this,FragmentSide.SIDE1,diffDividerPolygonsOffset),myData);
  }
 else {
    mySplitter=new HorizontalDiffSplitter(myLeftSide.getComponent(),myRightSide.getComponent());
  }
  myPanel.insertDiffComponent(mySplitter.getComponent(),new MyScrollingPanel());
  myDataProvider=new MyGenericDataProvider(this);
  myPanel.setDataProvider(myDataProvider);
  final ComparisonPolicy comparisonPolicy=getComparisonPolicy();
  final ComparisonPolicy defaultComparisonPolicy=DiffManagerImpl.getInstanceEx().getComparisonPolicy();
  final HighlightMode highlightMode=getHighlightMode();
  final HighlightMode defaultHighlightMode=DiffManagerImpl.getInstanceEx().getHighlightMode();
  if (defaultComparisonPolicy != null && comparisonPolicy != defaultComparisonPolicy) {
    setComparisonPolicy(defaultComparisonPolicy);
  }
  if (defaultHighlightMode != null && highlightMode != defaultHighlightMode) {
    setHighlightMode(defaultHighlightMode);
  }
  myVisibleAreaListener=new VisibleAreaListener(){
    @Override public void visibleAreaChanged(    VisibleAreaEvent e){
      Editor editor1=getEditor1();
      if (editor1 != null) {
        editor1.getComponent().repaint();
      }
      Editor editor2=getEditor2();
      if (editor2 != null) {
        editor2.getComponent().repaint();
      }
    }
  }
;
  registerActions();
}
