{
  final ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
  changeListManager.addChangeListListener(myListener);
  Disposer.register(myProject,new Disposable(){
    public void dispose(){
      changeListManager.removeChangeListListener(myListener);
    }
  }
);
  if (ApplicationManager.getApplication().isHeadlessEnvironment())   return;
  myContent=new MyChangeViewContent(createChangeViewComponent(),ChangesViewContentManager.LOCAL_CHANGES,false);
  myContent.setCloseable(false);
  myContentManager.addContent(myContent);
  scheduleRefresh();
  myProject.getMessageBus().connect().subscribe(RemoteRevisionsCache.REMOTE_VERSION_CHANGED,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          refreshView();
        }
      }
,ModalityState.NON_MODAL,myProject.getDisposed());
    }
  }
);
  myDetailsOn=VcsConfiguration.getInstance(myProject).LOCAL_CHANGES_DETAILS_PREVIEW_SHOWN;
  changeDetails();
}
