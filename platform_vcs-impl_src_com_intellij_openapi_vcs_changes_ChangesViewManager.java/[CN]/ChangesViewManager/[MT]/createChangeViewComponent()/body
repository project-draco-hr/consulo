{
  SimpleToolWindowPanel panel=new SimpleToolWindowPanel(false,true);
  EmptyAction.registerWithShortcutSet("ChangesView.Refresh",CommonShortcuts.getRerun(),panel);
  EmptyAction.registerWithShortcutSet("ChangesView.NewChangeList",CommonShortcuts.getNew(),panel);
  EmptyAction.registerWithShortcutSet("ChangesView.RemoveChangeList",CommonShortcuts.getDelete(),panel);
  EmptyAction.registerWithShortcutSet(IdeActions.MOVE_TO_ANOTHER_CHANGE_LIST,CommonShortcuts.getMove(),panel);
  EmptyAction.registerWithShortcutSet("ChangesView.Rename",CommonShortcuts.getRename(),panel);
  EmptyAction.registerWithShortcutSet("ChangesView.SetDefault",new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_U,InputEvent.ALT_DOWN_MASK | ctrlMask())),panel);
  EmptyAction.registerWithShortcutSet("ChangesView.Diff",CommonShortcuts.getDiff(),panel);
  DefaultActionGroup group=(DefaultActionGroup)ActionManager.getInstance().getAction("ChangesViewToolbar");
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.CHANGES_VIEW_TOOLBAR,group,false);
  toolbar.setTargetComponent(myView);
  JComponent toolbarComponent=toolbar.getComponent();
  JPanel toolbarPanel=new JPanel(new BorderLayout());
  toolbarPanel.add(toolbarComponent,BorderLayout.WEST);
  DefaultActionGroup visualActionsGroup=new DefaultActionGroup();
  final Expander expander=new Expander();
  visualActionsGroup.add(CommonActionsManager.getInstance().createExpandAllAction(expander,panel));
  visualActionsGroup.add(CommonActionsManager.getInstance().createCollapseAllAction(expander,panel));
  ToggleShowFlattenAction showFlattenAction=new ToggleShowFlattenAction();
  showFlattenAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_P,ctrlMask())),panel);
  visualActionsGroup.add(showFlattenAction);
  visualActionsGroup.add(ActionManager.getInstance().getAction(IdeActions.ACTION_COPY));
  visualActionsGroup.add(new ToggleShowIgnoredAction());
  visualActionsGroup.add(new IgnoredSettingsAction());
  visualActionsGroup.add(new ToggleDetailsAction());
  visualActionsGroup.add(new ContextHelpAction(ChangesListView.ourHelpId));
  toolbarPanel.add(ActionManager.getInstance().createActionToolbar(ActionPlaces.CHANGES_VIEW_TOOLBAR,visualActionsGroup,false).getComponent(),BorderLayout.CENTER);
  myView.setMenuActions((DefaultActionGroup)ActionManager.getInstance().getAction("ChangesViewPopupMenu"));
  myView.setShowFlatten(myState.myShowFlatten);
  myProgressLabel=new JPanel(new BorderLayout());
  panel.setToolbar(toolbarPanel);
  final JPanel content=new JPanel(new BorderLayout());
  mySplitter=new JBSplitter(false,"ChangesViewManager.DETAILS_SPLITTER_PROPORTION",0.5f);
  mySplitter.setHonorComponentsMinimumSize(false);
  final JScrollPane scrollPane=ScrollPaneFactory.createScrollPane(myView);
  final JPanel wrapper=new JPanel(new BorderLayout());
  wrapper.add(scrollPane,BorderLayout.CENTER);
  mySplitter.setFirstComponent(wrapper);
  content.add(mySplitter,BorderLayout.CENTER);
  content.add(myProgressLabel,BorderLayout.SOUTH);
  panel.setContent(content);
  ChangesDnDSupport.install(myProject,myView);
  myView.addTreeSelectionListener(myTsl);
  return panel;
}
