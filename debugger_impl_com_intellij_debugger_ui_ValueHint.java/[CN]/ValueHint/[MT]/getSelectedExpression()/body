{
  final PsiExpression[] selectedExpression=new PsiExpression[]{null};
  PsiDocumentManager.getInstance(myProject).commitAndRunReadAction(new Runnable(){
    public void run(){
      final int offset=calcOffset(myEditor,myPoint);
      PsiFile psiFile=PsiDocumentManager.getInstance(myProject).getPsiFile(myEditor.getDocument());
      if (psiFile == null)       return;
      int selectionStart=myEditor.getSelectionModel().getSelectionStart();
      int selectionEnd=myEditor.getSelectionModel().getSelectionEnd();
      if (isRequestSelection() && (selectionStart <= offset && offset <= selectionEnd)) {
        PsiElement ctx=(selectionStart > 0) ? psiFile.findElementAt(selectionStart - 1) : psiFile.findElementAt(selectionStart);
        try {
          String text=myEditor.getSelectionModel().getSelectedText();
          if (text != null && ctx != null) {
            selectedExpression[0]=PsiManager.getInstance(myProject).getElementFactory().createExpressionFromText(text,ctx);
            myCurrentRange=new TextRange(myEditor.getSelectionModel().getSelectionStart(),myEditor.getSelectionModel().getSelectionEnd());
          }
        }
 catch (        IncorrectOperationException e) {
        }
      }
      if (myCurrentRange == null) {
        PsiElement elementAtCursor=psiFile.findElementAt(offset);
        if (elementAtCursor == null)         return;
        PsiExpression expression;
        expression=findExpression(elementAtCursor);
        if (expression == null)         return;
        selectedExpression[0]=expression;
      }
    }
  }
);
  return selectedExpression[0];
}
