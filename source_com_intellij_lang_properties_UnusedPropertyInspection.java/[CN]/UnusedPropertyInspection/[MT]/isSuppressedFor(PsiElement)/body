{
  Property property=PsiTreeUtil.getParentOfType(element,Property.class,false);
  if (property == null)   return false;
  PsiElement prev=property.getPrevSibling();
  while (prev instanceof PsiWhiteSpace || prev instanceof PsiComment) {
    if (prev instanceof PsiComment) {
      @NonNls String text=prev.getText();
      if (text.contains("suppress") && text.contains("\"unused property\""))       return true;
    }
    prev=prev.getPrevSibling();
  }
  final PropertiesFile file=property.getContainingFile();
  PsiElement leaf=file.findElementAt(0);
  while (leaf instanceof PsiWhiteSpace)   leaf=leaf.getNextSibling();
  while (leaf instanceof PsiComment) {
    @NonNls String text=leaf.getText();
    if (text.contains("suppress") && text.contains("\"unused property\"") && text.contains("file")) {
      return true;
    }
    leaf=leaf.getNextSibling();
  }
  return false;
}
