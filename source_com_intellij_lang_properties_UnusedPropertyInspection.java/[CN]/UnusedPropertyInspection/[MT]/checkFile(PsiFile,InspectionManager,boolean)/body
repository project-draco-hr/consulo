{
  if (!(file instanceof PropertiesFile))   return null;
  List<ProblemDescriptor> descriptors=new SmartList<ProblemDescriptor>();
  PsiSearchHelper searchHelper=file.getManager().getSearchHelper();
  List<Property> properties=((PropertiesFile)file).getProperties();
  Module module=ModuleUtil.findModuleForPsiElement(file);
  if (module == null)   return null;
  GlobalSearchScope searchScope=GlobalSearchScope.moduleWithDependenciesScope(module);
  for (  Property property : properties) {
    PsiReferenceProcessor.FindElement processor=new PsiReferenceProcessor.FindElement();
    searchHelper.processReferences(processor,property,searchScope,false);
    if (!processor.isFound()) {
      ProblemDescriptor descriptor=manager.createProblemDescriptor(property,"Unused property",QUICK_FIX,ProblemHighlightType.LIKE_UNUSED_SYMBOL);
      descriptors.add(descriptor);
    }
  }
  return descriptors.toArray(new ProblemDescriptor[descriptors.size()]);
}
