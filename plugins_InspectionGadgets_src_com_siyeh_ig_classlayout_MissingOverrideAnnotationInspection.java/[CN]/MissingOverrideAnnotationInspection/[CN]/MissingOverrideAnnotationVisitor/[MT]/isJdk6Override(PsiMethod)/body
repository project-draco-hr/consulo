{
  final PsiClass methodClass=method.getContainingClass();
  if (methodClass == null) {
    return false;
  }
  final PsiMethod[] superMethods=getSuperMethodsInJavaSense(method,methodClass);
  if (superMethods.length <= 0) {
    return false;
  }
  if (!methodClass.isInterface()) {
    return true;
  }
  for (  PsiMethod superMethod : superMethods) {
    if (!superMethod.hasModifierProperty(PsiModifier.PROTECTED)) {
      return true;
    }
  }
  return false;
}
