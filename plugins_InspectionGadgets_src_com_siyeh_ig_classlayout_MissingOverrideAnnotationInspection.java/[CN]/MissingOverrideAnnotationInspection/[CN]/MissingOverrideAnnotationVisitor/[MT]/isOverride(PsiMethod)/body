{
  final PsiMethod[] superMethods=method.findSuperMethods();
  for (  PsiMethod superMethod : superMethods) {
    final PsiClass superContainingClass=superMethod.getContainingClass();
    if (superContainingClass != null) {
      final PsiClass containingClass=method.getContainingClass();
      if (!containingClass.isInterface() || superContainingClass.isInterface()) {
        return true;
      }
    }
  }
  return false;
}
