{
  final PsiMethod[] superMethods=method.findSuperMethods();
  List<PsiMethod> toExclude=new SmartList<PsiMethod>();
  for (  PsiMethod superMethod : superMethods) {
    final PsiClass superClass=superMethod.getContainingClass();
    if (!InheritanceUtil.isCorrectDescendant(methodClass,superClass,true)) {
      toExclude.add(superMethod);
    }
  }
  if (!toExclude.isEmpty()) {
    List<PsiMethod> result=new ArrayList<PsiMethod>(Arrays.asList(superMethods));
    result.removeAll(toExclude);
    return result.toArray(new PsiMethod[result.size()]);
  }
  return superMethods;
}
