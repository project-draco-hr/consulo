{
  return new ExpressionContext(){
    @Override public Project getProject(){
      return myProject;
    }
    @Override public Editor getEditor(){
      return myEditor;
    }
    @Override public int getStartOffset(){
      return start;
    }
    @Override public int getTemplateStartOffset(){
      if (myTemplateRange == null) {
        return -1;
      }
      return myTemplateRange.getStartOffset();
    }
    @Override public int getTemplateEndOffset(){
      if (myTemplateRange == null) {
        return -1;
      }
      return myTemplateRange.getEndOffset();
    }
    @Override public <T>T getProperty(    Key<T> key){
      return (T)myProperties.get(key);
    }
    @Nullable @Override public PsiElement getPsiElementAtStartOffset(){
      Project project=getProject();
      int templateStartOffset=getTemplateStartOffset();
      int offset=templateStartOffset > 0 ? getTemplateStartOffset() - 1 : getTemplateStartOffset();
      PsiDocumentManager.getInstance(project).commitAllDocuments();
      PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(getEditor().getDocument());
      return file == null ? null : file.findElementAt(offset);
    }
  }
;
}
