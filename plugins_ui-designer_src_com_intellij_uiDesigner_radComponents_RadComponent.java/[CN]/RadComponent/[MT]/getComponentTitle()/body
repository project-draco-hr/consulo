{
  Palette palette=Palette.getInstance(getModule().getProject());
  IntrospectedProperty[] props=palette.getIntrospectedProperties(this);
  for (  IntrospectedProperty prop : props) {
    if (prop.getName().equals(SwingProperties.TEXT) && prop instanceof IntroStringProperty) {
      StringDescriptor value=(StringDescriptor)prop.getValue(this);
      if (value != null) {
        return "\"" + value.getResolvedValue() + "\"";
      }
    }
  }
  if (this instanceof RadContainer) {
    RadContainer container=(RadContainer)this;
    StringDescriptor descriptor=container.getBorderTitle();
    if (descriptor != null) {
      if (descriptor.getResolvedValue() == null) {
        descriptor.setResolvedValue(StringDescriptorManager.getInstance(getModule()).resolve(this,descriptor));
      }
      return "\"" + descriptor.getResolvedValue() + "\"";
    }
  }
  if (getParent() instanceof RadTabbedPane) {
    RadTabbedPane parentTabbedPane=(RadTabbedPane)getParent();
    final StringDescriptor descriptor=parentTabbedPane.getChildTitle(this);
    if (descriptor != null) {
      if (descriptor.getResolvedValue() == null) {
        descriptor.setResolvedValue(StringDescriptorManager.getInstance(getModule()).resolve(this,descriptor));
      }
      return "\"" + descriptor.getResolvedValue() + "\"";
    }
 else {
      parentTabbedPane.getChildTitle(this);
    }
  }
  return null;
}
