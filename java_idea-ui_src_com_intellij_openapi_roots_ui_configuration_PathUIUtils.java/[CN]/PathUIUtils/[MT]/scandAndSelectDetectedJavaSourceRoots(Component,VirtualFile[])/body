{
  final Set<VirtualFile> result=new HashSet<VirtualFile>();
  final Map<VirtualFile,List<VirtualFile>> detectedRootsMap=new LinkedHashMap<VirtualFile,List<VirtualFile>>();
  ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      for (      final VirtualFile candidate : rootCandidates) {
        List<VirtualFile> detectedRoots=JavaUtilForVfs.suggestRoots(candidate);
        if (!detectedRoots.isEmpty() && (detectedRoots.size() > 1 || detectedRoots.get(0) != candidate)) {
          detectedRootsMap.put(candidate,detectedRoots);
        }
 else {
          result.add(candidate);
        }
      }
    }
  }
,"Scanning for source roots",true,null);
  if (!detectedRootsMap.isEmpty()) {
    DetectedSourceRootsDialog dlg=new DetectedSourceRootsDialog(component,detectedRootsMap);
    dlg.show();
    if (dlg.isOK()) {
      result.addAll(dlg.getChosenRoots());
    }
 else {
      result.clear();
    }
  }
  return VfsUtil.toVirtualFileArray(result);
}
