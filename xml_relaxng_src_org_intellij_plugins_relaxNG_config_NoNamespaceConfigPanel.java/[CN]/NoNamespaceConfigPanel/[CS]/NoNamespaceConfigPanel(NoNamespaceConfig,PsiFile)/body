{
  myConfig=noNamespaceConfig;
  myFile=file;
  myMapping=myConfig.getMapping(file);
  final FileChooserDescriptor descriptor=new FileChooserDescriptor(true,false,false,false,false,false){
    public boolean isFileSelectable(    VirtualFile file){
      final boolean b=super.isFileSelectable(file);
      if (b) {
        final FileType type=file.getFileType();
        if (type != StdFileTypes.XML) {
          return type == RncFileType.getInstance();
        }
      }
      return b;
    }
  }
;
  final Project project=file.getProject();
  final VirtualFile virtualFile=file.getVirtualFile();
  if (virtualFile != null) {
    final Module module=ProjectRootManager.getInstance(project).getFileIndex().getModuleForFile(virtualFile);
    descriptor.putUserData(LangDataKeys.MODULE_CONTEXT,module);
  }
  final ComponentWithBrowseButton.BrowseFolderActionListener<JTextField> actionListener=new ComponentWithBrowseButton.BrowseFolderActionListener<JTextField>("Select Schema","Select a RELAX-NG file to associate with the document",mySchemaFile,project,descriptor,TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT){
    public void actionPerformed(    ActionEvent e){
      myDialogOpen=true;
      try {
        super.actionPerformed(e);
      }
  finally {
        myDialogOpen=false;
      }
    }
  }
;
  mySchemaFile.addActionListener(actionListener);
}
