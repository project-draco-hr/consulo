{
  myOriginalDocument=getOriginalDocument();
  if (myOriginalDocument != null) {
    final Editor editor=getEditor();
    LOG.assertTrue(editor != null);
    final Document document=editor.getDocument();
    final int caretOffset=editor.getCaretModel().getOffset();
    if (caretOffset > -1) {
      int line=document.getLineNumber(caretOffset);
      if (line > -1 && line < document.getLineCount()) {
        final int startOffset=document.getLineStartOffset(line);
        myLineUnderSelection=document.getText().substring(startOffset,document.getLineEndOffset(line));
        myLineOffset=caretOffset - startOffset;
      }
    }
    myConsole.clear();
    final String[] lines=myOriginalDocument.toString().split("\n");
    int offset=0;
    boolean caretPositioned=false;
    for (    String line : lines) {
      final String contentType=LogConsolePreferences.getType(line);
      if (isApplicable.value(line)) {
        myConsole.print(line + "\n",contentType != null ? LogConsolePreferences.getContentType(contentType) : (myPrevType == LogConsolePreferences.ERROR ? ConsoleViewContentType.ERROR_OUTPUT : ConsoleViewContentType.NORMAL_OUTPUT));
        if (!caretPositioned) {
          if (Comparing.strEqual(myLineUnderSelection,line)) {
            caretPositioned=true;
            offset+=myLineOffset != -1 ? myLineOffset : 0;
          }
 else {
            offset+=line.length() + 1;
          }
        }
      }
      if (contentType != null) {
        myPrevType=contentType;
      }
    }
    myConsole.scrollTo(offset);
  }
}
