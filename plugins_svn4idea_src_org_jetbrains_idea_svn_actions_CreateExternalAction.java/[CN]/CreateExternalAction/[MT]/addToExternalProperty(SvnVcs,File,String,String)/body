{
  final SVNWCClient wcClient=vcs.createWCClient();
  final SVNPropertyData propertyData=wcClient.doGetProperty(ioFile,SvnPropertyKeys.SVN_EXTERNALS,SVNRevision.UNDEFINED,SVNRevision.UNDEFINED);
  String newValue;
  if (propertyData != null && propertyData.getValue() != null && !StringUtil.isEmptyOrSpaces(propertyData.getValue().getString())) {
    final SVNExternal[] externals=SVNExternal.parseExternals("Create External",propertyData.getValue().getString());
    for (    SVNExternal external : externals) {
      if (Comparing.equal(external.getPath(),target)) {
        AbstractVcsHelper.getInstance(vcs.getProject()).showError(new VcsException("Selected destination conflicts with existing: " + external.toString()),"Create External");
        return true;
      }
    }
    final String string=createExternalDefinitionString(url,target);
    newValue=propertyData.getValue().getString() + "\n" + string;
  }
 else {
    newValue=createExternalDefinitionString(url,target);
  }
  wcClient.doSetProperty(ioFile,SvnPropertyKeys.SVN_EXTERNALS,SVNPropertyValue.create(newValue),false,SVNDepth.EMPTY,null,null);
  return false;
}
