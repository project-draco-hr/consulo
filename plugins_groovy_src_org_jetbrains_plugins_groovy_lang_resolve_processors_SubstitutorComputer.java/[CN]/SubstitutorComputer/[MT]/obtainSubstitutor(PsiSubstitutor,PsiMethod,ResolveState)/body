{
  final PsiTypeParameter[] typeParameters=method.getTypeParameters();
  if (myTypeArguments.length == typeParameters.length) {
    for (int i=0; i < typeParameters.length; i++) {
      PsiTypeParameter typeParameter=typeParameters[i];
      final PsiType typeArgument=myTypeArguments[i];
      substitutor=substitutor.put(typeParameter,typeArgument);
    }
    return substitutor;
  }
  if (myArgumentTypes != null && method.hasTypeParameters()) {
    PsiType[] argTypes=myArgumentTypes;
    final GroovyPsiElement resolveContext=state.get(ResolverProcessor.RESOLVE_CONTEXT);
    if (method instanceof GrGdkMethod) {
      PsiType[] newArgTypes=new PsiType[argTypes.length + 1];
      if (GdkMethodUtil.isInWithContext(resolveContext)) {
        newArgTypes[0]=((GrExpression)resolveContext).getType();
      }
 else {
        newArgTypes[0]=myThisType;
      }
      System.arraycopy(argTypes,0,newArgTypes,1,argTypes.length);
      argTypes=newArgTypes;
      method=((GrGdkMethod)method).getStaticMethod();
      LOG.assertTrue(method.isValid());
    }
    return inferMethodTypeParameters(method,substitutor,typeParameters,argTypes);
  }
  return substitutor;
}
