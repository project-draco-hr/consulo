{
  if (myState.get() != State.CONNECTED) {
    return null;
  }
  final UUID uuid=UUID.randomUUID();
  final JpsRemoteProto.Message.Request request=rebuild ? ProtoUtil.createRebuildRequest(projectId,modules) : ProtoUtil.createMakeRequest(projectId,modules);
  final RequestFuture requestFuture=new RequestFuture(handler);
  myHandlers.put(uuid,requestFuture);
  boolean success=false;
  try {
    final ChannelFuture future=Channels.write(myConnectFuture.getChannel(),ProtoUtil.toMessage(uuid,request));
    future.awaitUninterruptibly();
    success=future.isSuccess();
    return success ? requestFuture : null;
  }
  finally {
    if (!success) {
      requestFuture.setDone();
      myHandlers.remove(uuid);
      handler.sessionTerminated();
    }
  }
}
