{
  if (myState.compareAndSet(State.DISCONNECTED,State.CONNECTING)) {
    boolean success=false;
    try {
      final ClientBootstrap bootstrap=new ClientBootstrap(myChannelFactory);
      bootstrap.setPipelineFactory(myPipelineFactory);
      bootstrap.setOption("tcpNoDelay",true);
      bootstrap.setOption("keepAlive",true);
      final ChannelFuture future=bootstrap.connect(new InetSocketAddress(host,port));
      future.awaitUninterruptibly();
      success=future.isSuccess();
      if (success) {
        myConnectFuture=future;
      }
 else {
        final Throwable reason=future.getCause();
        if (reason != null) {
          throw reason;
        }
      }
      return success;
    }
  finally {
      myState.compareAndSet(State.CONNECTING,success ? State.CONNECTED : State.DISCONNECTED);
    }
  }
  return false;
}
