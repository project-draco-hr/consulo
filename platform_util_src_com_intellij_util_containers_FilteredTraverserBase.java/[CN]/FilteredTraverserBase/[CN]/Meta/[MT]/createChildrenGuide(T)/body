{
  final Condition<? super T> expand=buildExpandConditionForChildren(parent);
class G implements Consumer<TreeTraversal.GuidedIt<T>>, Function.Mono<TreeTraversal.GuidedIt<T>> {
    @Override public TreeTraversal.GuidedIt<T> fun(    TreeTraversal.GuidedIt<T> it){
      return it.setGuide(this);
    }
    @Override public void consume(    TreeTraversal.GuidedIt<T> it){
      doPerformChildrenGuidance(it,expand);
    }
  }
  return new G();
}
