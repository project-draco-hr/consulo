{
  myProgramParametersComponent=LabeledComponent.create(new RawCommandLineEditor(),ExecutionBundle.message("run.configuration.program.parameters"));
  final JPanel panel=new JPanel(new BorderLayout());
  myWorkingDirectoryField=new TextFieldWithBrowseButton(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      FileChooserDescriptor fileChooserDescriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
      fileChooserDescriptor.setTitle(ExecutionBundle.message("select.working.directory.message"));
      fileChooserDescriptor.putUserData(LangDataKeys.MODULE_CONTEXT,myModuleContext);
      Project project=myModuleContext != null ? myModuleContext.getProject() : null;
      VirtualFile file=FileChooser.chooseFile(fileChooserDescriptor,myWorkingDirectoryComponent,project,null);
      if (file != null) {
        setWorkingDirectory(file.getPresentableUrl());
      }
    }
  }
){
    @Override protected void installPathCompletion(    FileChooserDescriptor fileChooserDescriptor){
      super.installPathCompletion(FileChooserDescriptorFactory.createSingleFolderDescriptor());
    }
  }
;
  panel.add(myWorkingDirectoryField,BorderLayout.CENTER);
  final FixedSizeButton button=new FixedSizeButton(myWorkingDirectoryField);
  button.setIcon(ICON);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final List<String> macros=new ArrayList<String>(PathMacros.getInstance().getUserMacroNames());
      if (myHaveModuleContext)       macros.add("MODULE_DIR");
      final JList list=new JBList(ArrayUtil.toStringArray(macros));
      final JBPopup popup=JBPopupFactory.getInstance().createListPopupBuilder(list).setItemChoosenCallback(new Runnable(){
        public void run(){
          final Object value=list.getSelectedValue();
          if (value instanceof String) {
            setWorkingDirectory("$" + value + "$");
          }
        }
      }
).setMovable(false).setResizable(false).createPopup();
      popup.showUnderneathOf(button);
    }
  }
);
  panel.add(button,BorderLayout.EAST);
  myWorkingDirectoryComponent=LabeledComponent.create(panel,ExecutionBundle.message("run.configuration.working.directory.label"));
  myEnvVariablesComponent=new EnvironmentVariablesComponent();
  myEnvVariablesComponent.setLabelLocation(BorderLayout.WEST);
  myProgramParametersComponent.setLabelLocation(BorderLayout.WEST);
  myWorkingDirectoryComponent.setLabelLocation(BorderLayout.WEST);
  addComponents();
  setPreferredSize(new Dimension(10,10));
  setAnchor(myEnvVariablesComponent.getLabel());
}
