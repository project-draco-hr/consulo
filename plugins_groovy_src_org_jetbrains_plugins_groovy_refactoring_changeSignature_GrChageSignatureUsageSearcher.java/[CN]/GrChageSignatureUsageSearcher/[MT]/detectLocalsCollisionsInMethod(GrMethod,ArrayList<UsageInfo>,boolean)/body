{
  if (!GroovyFileType.GROOVY_LANGUAGE.equals(method.getLanguage()))   return;
  final PsiParameter[] parameters=method.getParameterList().getParameters();
  final Set<PsiParameter> deletedOrRenamedParameters=new HashSet<PsiParameter>();
  if (isOriginal) {
    ContainerUtil.addAll(deletedOrRenamedParameters,parameters);
    for (    ParameterInfo parameterInfo : myChangeInfo.getNewParameters()) {
      if (parameterInfo.getOldIndex() >= 0) {
        final PsiParameter parameter=parameters[parameterInfo.getOldIndex()];
        if (parameterInfo.getName().equals(parameter.getName())) {
          deletedOrRenamedParameters.remove(parameter);
        }
      }
    }
  }
  final GrOpenBlock block=method.getBlock();
  for (  ParameterInfo parameterInfo : myChangeInfo.getNewParameters()) {
    final int oldParameterIndex=parameterInfo.getOldIndex();
    final String newName=parameterInfo.getName();
    if (oldParameterIndex >= 0) {
      if (isOriginal) {
        final PsiParameter parameter=parameters[oldParameterIndex];
        if (!newName.equals(parameter.getName())) {
          final GrUnresolvableLocalCollisionDetector.CollidingVariableVisitor collidingVariableVisitor=new GrUnresolvableLocalCollisionDetector.CollidingVariableVisitor(){
            public void visitCollidingVariable(            final PsiVariable collidingVariable){
              if (!deletedOrRenamedParameters.contains(collidingVariable)) {
                result.add(new RenamedParameterCollidesWithLocalUsageInfo(parameter,collidingVariable,method));
              }
            }
          }
;
          if (block != null) {
            GrUnresolvableLocalCollisionDetector.visitLocalsCollisions(parameter,newName,block,collidingVariableVisitor);
          }
        }
      }
    }
 else {
      final GrUnresolvableLocalCollisionDetector.CollidingVariableVisitor variableVisitor=new GrUnresolvableLocalCollisionDetector.CollidingVariableVisitor(){
        public void visitCollidingVariable(        PsiVariable collidingVariable){
          if (!deletedOrRenamedParameters.contains(collidingVariable)) {
            result.add(new NewParameterCollidesWithLocalUsageInfo(collidingVariable,collidingVariable,method));
          }
        }
      }
;
      if (block != null) {
        GrUnresolvableLocalCollisionDetector.visitLocalsCollisions(method,newName,block,variableVisitor);
      }
    }
  }
}
