{
  final String url=libraryInfo.getDownloadingUrl();
  if (url == null)   return null;
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  indicator.setText2(J2EEBundle.message("progress.download.jar.text",libraryInfo.getExpectedJarName(),libraryInfo.getPresentableUrl()));
  final File tempFile=FileUtil.createTempFile("downloaded","jar");
  HttpURLConnection connection=(HttpURLConnection)new URL(url).openConnection();
  InputStream input=null;
  BufferedOutputStream output=null;
  boolean deleteFile=true;
  try {
    final int responseCode=connection.getResponseCode();
    if (responseCode != HttpURLConnection.HTTP_OK) {
      throw new IOException(IdeBundle.message("error.connection.failed.with.http.code.N",responseCode));
    }
    indicator.setIndeterminate(true);
    input=UrlConnectionUtil.getConnectionInputStreamWithException(connection,indicator);
    output=new BufferedOutputStream(new FileOutputStream(tempFile));
    final int size=connection.getContentLength();
    indicator.setIndeterminate(size == -1);
    int len;
    final byte[] buf=new byte[1024];
    int count=0;
    while ((len=input.read(buf)) > 0) {
      indicator.checkCanceled();
      count+=len;
      if (size > 0) {
        indicator.setFraction((double)count / size);
      }
      output.write(buf,0,len);
    }
    deleteFile=false;
    return tempFile;
  }
  finally {
    if (input != null) {
      input.close();
    }
    if (output != null) {
      output.close();
    }
    if (deleteFile) {
      FileUtil.delete(tempFile);
    }
    connection.disconnect();
  }
}
