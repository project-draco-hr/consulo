{
  final Project project=PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myMainPanel));
  super.doOKAction();
  ((KeymapManagerImpl)KeymapManager.getInstance()).setActiveKeymap((Keymap)myKeymapComboBox.getSelectedItem());
  EditorColorsManager.getInstance().setGlobalScheme((EditorColorsScheme)myColorSchemeComboBox.getSelectedItem());
  TodoConfiguration.getInstance().resetToDefaultTodoPatterns();
  final boolean createScript=myCreateScriptCheckbox.isSelected();
  final boolean createEntry=myCreateEntryCheckBox.isSelected();
  if (createScript || createEntry) {
    final String pathName=myScriptPathTextField.getText();
    final boolean globalEntry=myGlobalEntryCheckBox.isSelected();
    ProgressManager.getInstance().run(new Task.Backgroundable(project,getTitle()){
      @Override public void run(      @NotNull final ProgressIndicator indicator){
        indicator.setFraction(0.0);
        if (createScript) {
          indicator.setText("Creating launcher script...");
          CreateLauncherScriptAction.createLauncherScript(project,pathName);
          indicator.setFraction(0.5);
        }
        if (createEntry) {
          CreateDesktopEntryAction.createDesktopEntry(project,indicator,globalEntry);
        }
        indicator.setFraction(1.0);
      }
    }
);
  }
  UIManager.LookAndFeelInfo info=(UIManager.LookAndFeelInfo)myAppearanceComboBox.getSelectedItem();
  LafManagerImpl lafManager=(LafManagerImpl)LafManager.getInstance();
  if (info.getName().contains("Darcula") != (LafManager.getInstance().getCurrentLookAndFeel() instanceof DarculaLookAndFeelInfo)) {
    lafManager.setLookAndFeelAfterRestart(info);
    int rc=Messages.showYesNoDialog(project,"IDE appearance settings will be applied after restart. Would you like to restart now?","IDE Appearance",Messages.getQuestionIcon());
    if (rc == Messages.YES) {
      ((ApplicationImpl)ApplicationManager.getApplication()).restart(true);
    }
  }
 else   if (!info.equals(lafManager.getCurrentLookAndFeel())) {
    lafManager.setCurrentLookAndFeel(info);
    lafManager.updateUI();
  }
}
