{
  final Color bg=myComboBox.getBackground();
  final Color fg=myComboBox.getForeground();
  JButton button=new BasicArrowButton(SwingConstants.SOUTH,bg,fg,fg,fg){
    @Override public void paint(    Graphics g2){
      final Graphics2D g=(Graphics2D)g2;
      final GraphicsConfig config=new GraphicsConfig(g);
      final int w=getWidth();
      final int h=getHeight();
      g.setColor(UIUtil.getControlColor());
      g.fillRect(0,0,w,h);
      g.setColor(myComboBox.isEnabled() ? getForeground() : getForeground().darker());
      g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
      g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL,RenderingHints.VALUE_STROKE_NORMALIZE);
      g.setStroke(new BasicStroke(1.0f,BasicStroke.CAP_BUTT,BasicStroke.JOIN_BEVEL));
      final int xU=w / 4;
      final int yU=h / 4;
      final Path2D.Double path=new Path2D.Double();
      g.translate(JBUI.scale(2),0);
      path.moveTo(xU + JBUI.scale(1),yU + JBUI.scale(2));
      path.lineTo(3 * xU + JBUI.scale(1),yU + JBUI.scale(2));
      path.lineTo(2 * xU + JBUI.scale(1),3 * yU);
      path.lineTo(xU + JBUI.scale(1),yU + JBUI.scale(2));
      path.closePath();
      g.fill(path);
      g.translate(-JBUI.scale(2),0);
      g.setColor(getBorderColor());
      g.drawLine(0,-JBUI.scale(1),0,h);
      config.restore();
    }
    @Override public Dimension getPreferredSize(){
      int size=getFont().getSize() + 4;
      if (size % 2 == 1)       size++;
      return new DimensionUIResource(size,size);
    }
  }
;
  button.setBorder(BorderFactory.createEmptyBorder());
  button.setOpaque(false);
  return button;
}
