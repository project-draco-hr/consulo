{
  Dimension display=new Dimension();
  ListCellRenderer renderer=comboBox.getRenderer();
  if (renderer == null) {
    renderer=new DefaultListCellRenderer();
  }
  boolean sameBaseline=true;
  Object prototypeValue=comboBox.getPrototypeDisplayValue();
  if (prototypeValue != null) {
    display=getSizeForComponent(renderer.getListCellRendererComponent(listBox,prototypeValue,-1,false,false));
  }
 else {
    final ComboBoxModel model=comboBox.getModel();
    int baseline=-1;
    Dimension d;
    if (model.getSize() > 0) {
      for (int i=0; i < model.getSize(); i++) {
        Object value=model.getElementAt(i);
        Component rendererComponent=renderer.getListCellRendererComponent(listBox,value,-1,false,false);
        d=getSizeForComponent(rendererComponent);
        if (sameBaseline && value != null && (!(value instanceof String) || !"".equals(value))) {
          int newBaseline=rendererComponent.getBaseline(d.width,d.height);
          if (newBaseline == -1) {
            sameBaseline=false;
          }
 else           if (baseline == -1) {
            baseline=newBaseline;
          }
 else           if (baseline != newBaseline) {
            sameBaseline=false;
          }
        }
        display.width=Math.max(display.width,d.width);
        display.height=Math.max(display.height,d.height);
      }
    }
 else {
      display=getDefaultSize();
      if (comboBox.isEditable()) {
        display.width=100;
      }
    }
  }
  if (myPadding != null) {
    display.width+=myPadding.left + myPadding.right;
    display.height+=myPadding.top + myPadding.bottom;
  }
  myDisplaySizeCache.setSize(display.width,display.height);
  myDisplaySizeDirty=false;
  return display;
}
