{
  final Project project=file.getProject();
  final XmlTag rootTag=ApplicationManager.getApplication().runReadAction(new Computable<XmlTag>(){
    public XmlTag compute(){
      final XmlFile xmlFile=(XmlFile)PsiFileFactory.getInstance(project).createFileFromText("a.xml",file.getText());
      final XmlDocument document=xmlFile.getDocument();
      return document.getRootTag();
    }
  }
);
  if (rootTag == null || !Utils.FORM_NAMESPACE.equals(rootTag.getNamespace())) {
    return;
  }
  @NonNls final String name=rootTag.getName();
  if (!"form".equals(name)) {
    return;
  }
  PsiReference classReference=null;
  final XmlAttribute classToBind=rootTag.getAttribute("bind-to-class",null);
  if (classToBind != null) {
    final XmlAttributeValue valueElement=classToBind.getValueElement();
    if (valueElement == null) {
      return;
    }
    final String className=valueElement.getValue().replace('$','.');
    final PsiReference[] referencesByString=new JavaClassReferenceProvider().getReferencesByString(className,file,valueElement.getTextRange().getStartOffset() + 1);
    if (referencesByString.length < 1) {
      return;
    }
    for (    PsiReference aReferencesByString : referencesByString) {
      processor.execute(aReferencesByString);
    }
    classReference=referencesByString[referencesByString.length - 1];
  }
  final PsiReference finalClassReference=classReference;
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      processReferences(rootTag,finalClassReference,file,processor);
    }
  }
);
}
