{
  myAddButton=new JButton("Add");
  myAddButton.setMnemonic('d');
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      TableUtil.stopEditing(myScopeMappingTable);
      List<ScopeSetting> newList=new ArrayList<ScopeSetting>(myScopeMappingModel.getItems());
      newList.add(new ScopeSetting(DefaultScopesProvider.getInstance(myProject).getAllScope(),myProfilesModel.getAllProfiles().values().iterator().next()));
      myScopeMappingModel.setItems(newList);
      TableUtil.editCellAt(myScopeMappingTable,myScopeMappingModel.getRowCount() - 1,0);
    }
  }
);
  myRemoveButton=new JButton("Remove");
  myRemoveButton.setMnemonic('R');
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      TableUtil.stopEditing(myScopeMappingTable);
      int index=myScopeMappingTable.getSelectedRow();
      if (0 <= index && index < myScopeMappingModel.getRowCount()) {
        myScopeMappingModel.removeRow(index);
        if (index < myScopeMappingModel.getRowCount()) {
          myScopeMappingTable.setRowSelectionInterval(index,index);
        }
 else {
          if (index > 0) {
            myScopeMappingTable.setRowSelectionInterval(index - 1,index - 1);
          }
        }
        updateButtons();
      }
      myScopeMappingTable.requestFocus();
    }
  }
);
  myMoveUpButton=new JButton("Move Up");
  myMoveUpButton.setMnemonic('U');
  myMoveUpButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      TableUtil.moveSelectedItemsUp(myScopeMappingTable);
    }
  }
);
  myMoveDownButton=new JButton("Move Down");
  myMoveDownButton.setMnemonic('D');
  myMoveDownButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      TableUtil.moveSelectedItemsDown(myScopeMappingTable);
    }
  }
);
  return new JButton[]{myAddButton,myRemoveButton,myMoveUpButton,myMoveDownButton};
}
