{
  final IElementType lType=left.getElementType();
  final IElementType rType=right.getElementType();
  if (rType == kIMPORT && lType != TokenType.WHITE_SPACE) {
    return MUST_LINE_BREAK;
  }
 else   if (lType == MODIFIERS && rType == MODIFIERS) {
    return MUST;
  }
  if (lType == mSEMI || lType == mSL_COMMENT) {
    return MUST_LINE_BREAK;
  }
  if (lType == mNLS || lType == mGDOC_COMMENT_START) {
    return MAY;
  }
  final IElementType parentType=left.getTreeParent().getElementType();
  if (parentType == GSTRING || parentType == REGEX || parentType == GSTRING_INJECTION)   return MUST_NOT;
  return LanguageUtil.canStickTokensTogetherByLexer(left,right,new GroovyLexer());
}
