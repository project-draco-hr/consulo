{
  if (!(element instanceof GenericDomValue))   return null;
  if (element instanceof GenericAttributeValue) {
    if (((GenericAttributeValue)element).getXmlAttributeValue() == null)     return null;
  }
 else   if (element.getXmlTag().getValue().getTextElements().length == 0)   return null;
  GenericDomValue domElement=(GenericDomValue)element;
  final Class parameter=DomUtil.getGenericValueType(domElement.getDomElementType());
  if (PsiType.class.isAssignableFrom(parameter)) {
    return new PsiTypeReference(this,(GenericDomValue<PsiType>)domElement);
  }
  if (PsiClass.class.isAssignableFrom(parameter)) {
    return new PsiClassReference(this,(GenericDomValue<PsiClass>)domElement);
  }
  if (Integer.class.isAssignableFrom(parameter)) {
    return new GenericDomValueReference(this,domElement){
      public Object[] getVariants(){
        return new Object[]{"239","42"};
      }
    }
;
  }
  if (!String.class.isAssignableFrom(parameter)) {
    return new GenericDomValueReference(this,domElement);
  }
  return null;
}
