{
  if (changes.isEmpty()) {
    final String text=SvnBundle.message("repository.browser.compare.no.difference.message",sourceTitle,targetTitle);
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        Messages.showInfoMessage(myProject,text,SvnBundle.message("repository.browser.compare.no.difference.title"));
      }
    }
);
    return;
  }
  final Collection<Change> changesList=changes.values();
  final String title=SvnBundle.message("repository.browser.compare.title",sourceTitle,targetTitle);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      final ChangeListViewerDialog dlg=new ChangeListViewerDialog(myRepositoryBrowser,myProject,changesList,true);
      dlg.setTitle(title);
      dlg.setConvertor(new NotNullFunction<Change,Change>(){
        @NotNull public Change fun(        final Change change){
          final FilePath path=ChangesUtil.getFilePath(change);
          return new Change(new UrlContentRevision(change.getBeforeRevision(),FilePathImpl.createNonLocal(SVNPathUtil.append(sourceUrl.toString(),path.getPath()),path.isDirectory()),revision),new UrlContentRevision(change.getAfterRevision(),FilePathImpl.createNonLocal(SVNPathUtil.append(targetUrl.toString(),path.getPath()),path.isDirectory()),revision));
        }
      }
);
      dlg.show();
    }
  }
);
}
