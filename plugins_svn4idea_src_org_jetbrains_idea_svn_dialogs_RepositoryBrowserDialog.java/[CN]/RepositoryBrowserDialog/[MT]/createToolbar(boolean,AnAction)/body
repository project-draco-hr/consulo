{
  DefaultActionGroup group=new DefaultActionGroup();
  final RepositoryBrowserComponent browser=getRepositoryBrowser();
  group.add(new AddLocationAction(browser));
  group.add(new EditLocationAction());
  group.add(new DiscardLocationAction(browser));
  group.add(new DetailsAction());
  group.addSeparator();
  final RefreshAction refreshAction=new RefreshAction(browser);
  refreshAction.registerCustomShortcutSet(CommonShortcuts.getRerun(),browser);
  group.add(refreshAction);
  copyUrlAction=new CopyUrlAction();
  copyUrlAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_INSERT,KeyEvent.CTRL_MASK | KeyEvent.CTRL_DOWN_MASK | KeyEvent.ALT_MASK| KeyEvent.ALT_DOWN_MASK)),browser);
  mkDirAction=new MkDirAction(browser);
  mkDirAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_INSERT,KeyEvent.ALT_MASK | KeyEvent.ALT_DOWN_MASK)),browser);
  AnAction action=CommonActionsManager.getInstance().createCollapseAllAction(new TreeExpander(){
    public void expandAll(){
    }
    public boolean canExpand(){
      return false;
    }
    public void collapseAll(){
      JTree tree=browser.getRepositoryTree();
      int row=tree.getRowCount() - 1;
      while (row >= 0) {
        tree.collapseRow(row);
        row--;
      }
    }
    public boolean canCollapse(){
      return true;
    }
  }
,browser);
  group.add(action);
  if ((additionalActions != null) || (!horizontal)) {
    group.addSeparator();
  }
  if (additionalActions != null) {
    for (    AnAction anAction : additionalActions) {
      group.add(anAction);
    }
  }
  if (!horizontal) {
    group.add(new CloseToolWindowAction());
  }
  return ActionManager.getInstance().createActionToolbar(PLACE_TOOLBAR,group,horizontal).getComponent();
}
