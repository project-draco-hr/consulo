{
  SVNRepository repository=myVCS.createRepository(sourceURL.toString());
  repository.setCanceller(new SvnProgressCanceller());
  SvnDiffEditor diffEditor;
  try {
    final long rev=repository.getLatestRevision();
    diffEditor=new SvnDiffEditor(myVCS.createRepository(sourceURL.toString()),myVCS.createRepository(targetURL.toString()));
    final ISVNEditor cancellableEditor=SVNCancellableEditor.newInstance(diffEditor,new SvnProgressCanceller(),null);
    repository.diff(targetURL,rev,rev,null,true,true,false,new ISVNReporterBaton(){
      public void report(      ISVNReporter reporter) throws SVNException {
        reporter.setPath("",null,rev,false);
        reporter.finishReport();
      }
    }
,cancellableEditor);
  }
  finally {
    repository.closeSession();
  }
  Map<String,Change> changes=diffEditor.getChangesMap();
  if (changes.isEmpty()) {
    final String text=SvnBundle.message("repository.browser.compare.no.difference.message",SVNPathUtil.tail(sourceURL.toString()),SVNPathUtil.tail(targetURL.toString()));
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        Messages.showInfoMessage(myProject,text,SvnBundle.message("repository.browser.compare.no.difference.title"));
      }
    }
);
    return;
  }
  final Collection<Change> changesList=changes.values();
  final String title=SvnBundle.message("repository.browser.compare.title",SVNPathUtil.tail(sourceURL.toString()),SVNPathUtil.tail(targetURL.toString()));
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      AbstractVcsHelper.getInstance(myProject).showChangesBrowser(myRepositoryBrowser,changesList,title);
    }
  }
);
}
