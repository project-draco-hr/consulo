{
  SVNRepository repository=myVCS.createRepository(sourceURL.toString());
  final long rev=repository.getLatestRevision();
  SvnDiffEditor diffEditor=new SvnDiffEditor(myVCS.createRepository(sourceURL.toString()),myVCS.createRepository(targetURL.toString()));
  repository.diff(targetURL,rev,rev,null,true,true,new ISVNReporterBaton(){
    public void report(    ISVNReporter reporter) throws SVNException {
      reporter.setPath("",null,rev,false);
      reporter.finishReport();
    }
  }
,diffEditor);
  Map<String,Change> changes=diffEditor.getChangesMap();
  final Collection<Change> changesList=changes.values();
  CommittedChangeList changeList=new CommittedChangeList(){
    public String getCommitterName(){
      return "";
    }
    public Date getCommitDate(){
      return new Date(0);
    }
    public Collection<Change> getChanges(){
      return changesList;
    }
    public String getName(){
      return "";
    }
    public String getComment(){
      return "";
    }
  }
;
  String title="Compare of '" + SVNPathUtil.tail(sourceURL.toString()) + " and '"+ SVNPathUtil.tail(targetURL.toString())+ "'";
  AbstractVcsHelper.getInstance(myProject).showChangesBrowser(changeList,title);
}
