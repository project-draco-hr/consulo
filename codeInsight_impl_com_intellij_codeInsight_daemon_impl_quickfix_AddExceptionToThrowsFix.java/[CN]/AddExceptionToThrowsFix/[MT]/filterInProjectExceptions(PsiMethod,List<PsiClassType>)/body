{
  if (targetMethod == null)   return Collections.emptySet();
  Set<PsiClassType> result=new HashSet<PsiClassType>();
  if (!targetMethod.getManager().isInProject(targetMethod)) {
    PsiClassType[] referencedTypes=targetMethod.getThrowsList().getReferencedTypes();
    for (    PsiClassType referencedType : referencedTypes) {
      PsiClass psiClass=referencedType.resolve();
      if (psiClass == null)       continue;
      for (      PsiClassType exception : unhandledExceptions) {
        if (referencedType.isAssignableFrom(exception))         result.add(exception);
      }
    }
  }
 else {
    PsiMethod[] superMethods=targetMethod.findSuperMethods();
    for (    PsiMethod superMethod : superMethods) {
      Set<PsiClassType> classTypes=filterInProjectExceptions(superMethod,unhandledExceptions);
      result.addAll(classTypes);
    }
    if (superMethods.length == 0) {
      result.addAll(unhandledExceptions);
    }
  }
  return result;
}
