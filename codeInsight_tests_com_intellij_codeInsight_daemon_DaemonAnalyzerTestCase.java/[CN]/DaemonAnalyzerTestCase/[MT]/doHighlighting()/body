{
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  List<HighlightInfo> result=new ArrayList<HighlightInfo>();
  Document document=myEditor.getDocument();
  GeneralHighlightingPass action1=new GeneralHighlightingPass(myProject,myFile,document,0,myFile.getTextLength(),false,true);
  action1.doCollectInformation(new MockProgressIndicator());
  result.addAll(action1.getHighlights());
  PostHighlightingPass action2=new PostHighlightingPass(myProject,myFile,myEditor,0,myFile.getTextLength(),false);
  action2.doCollectInformation(new MockProgressIndicator());
  result.addAll(action2.getHighlights());
  if (!myAvailableTools.isEmpty()) {
    LocalInspectionsPass inspectionsPass=new LocalInspectionsPass(myProject,myFile,myEditor.getDocument(),0,myFile.getTextLength());
    inspectionsPass.doCollectInformation(new MockProgressIndicator());
    result.addAll(inspectionsPass.getHighlights());
  }
  boolean isToLaunchExternal=true;
  for (  HighlightInfo info : result) {
    if (info.getSeverity() == HighlightSeverity.ERROR) {
      isToLaunchExternal=false;
      break;
    }
  }
  if (isToLaunchExternal && doExternalValidation()) {
    ExternalToolPass action3=new ExternalToolPass(myFile,myEditor,0,myEditor.getDocument().getTextLength());
    action3.doCollectInformation(new MockProgressIndicator());
    result.addAll(action3.getHighlights());
  }
  return result;
}
