{
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  TIntArrayList toIgnore=new TIntArrayList();
  if (!doTestLineMarkers()) {
    toIgnore.add(Pass.UPDATE_OVERRIDEN_MARKERS);
    toIgnore.add(Pass.VISIBLE_LINE_MARKERS);
    toIgnore.add(Pass.LINE_MARKERS);
  }
  MockProgressIndicator progress=new MockProgressIndicator();
  List<TextEditorHighlightingPass> passes=TextEditorHighlightingPassRegistrarEx.getInstanceEx(getProject()).instantiatePasses(getFile(),getEditor(),toIgnore.toNativeArray());
  for (  TextEditorHighlightingPass pass : passes) {
    pass.collectInformation(progress);
  }
  for (  TextEditorHighlightingPass pass : passes) {
    pass.applyInformationToEditor();
  }
  if (doTestLineMarkers()) {
    Document document=getDocument(getFile());
    assertTrue(((DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(getProject())).getFileStatusMap().allDirtyScopesAreNull(document));
  }
  List<HighlightInfo> infos=DaemonCodeAnalyzerImpl.getHighlights(getEditor().getDocument(),getProject());
  return infos == null ? Collections.<HighlightInfo>emptyList() : new ArrayList<HighlightInfo>(infos);
}
