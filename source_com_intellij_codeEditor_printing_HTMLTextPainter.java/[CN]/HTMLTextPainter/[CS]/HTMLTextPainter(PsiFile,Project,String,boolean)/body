{
  myProject=project;
  myPsiFile=psiFile;
  myPrintLineNumbers=printLineNumbers;
  myHighlighter=HighlighterFactory.createHighlighter(project,psiFile.getVirtualFile());
  myText=psiFile.getText();
  myHighlighter.setText(myText);
  mySegmentEnd=myText.length();
  myFileName=psiFile.getVirtualFile().getPresentableUrl();
  myHTMLFileName=dirName + File.separator + ExportToHTMLManager.getHTMLFileName(psiFile);
  PsiDocumentManager psiDocumentManager=PsiDocumentManager.getInstance(project);
  psiDocumentManager.commitAllDocuments();
  Document document=psiDocumentManager.getDocument(psiFile);
  GeneralHighlightingPass action=new GeneralHighlightingPass(myProject,psiFile,document,0,psiFile.getTextLength(),false,true);
  Collection<LineMarkerInfo> lineMarkerInfos=action.queryLineMarkers();
  ArrayList<LineMarkerInfo> methodSeparators=new ArrayList<LineMarkerInfo>();
  for (  LineMarkerInfo lineMarkerInfo : lineMarkerInfos) {
    if (lineMarkerInfo.separatorColor != null) {
      methodSeparators.add(lineMarkerInfo);
    }
  }
  Collections.sort(methodSeparators,new Comparator<LineMarkerInfo>(){
    public int compare(    LineMarkerInfo o1,    LineMarkerInfo o2){
      return o1.startOffset - o2.startOffset;
    }
  }
);
  myMethodSeparators=methodSeparators.toArray(new LineMarkerInfo[methodSeparators.size()]);
  myCurrentMethodSeparator=0;
}
