{
  if (start == 0 && end == length())   return this;
  if (myOriginalSequence != null) {
    return myOriginalSequence.subSequence(start,end);
  }
  if (hasDeferredChanges()) {
    return new CharArray(myBufferSize,myDeferredChangesStorage,myArray,myStart + start,myStart + end){
      @Override protected DocumentEvent beforeChangedUpdate(      DocumentImpl subj,      int offset,      CharSequence oldString,      CharSequence newString,      boolean wholeTextReplaced){
        return new DocumentEventImpl(subj,offset,oldString,newString,LocalTimeCounter.currentTime(),wholeTextReplaced);
      }
      @Override protected void afterChangedUpdate(      DocumentEvent event,      long newModificationStamp){
      }
    }
;
  }
 else {
    return new CharArrayCharSequence(myArray,start,end);
  }
}
