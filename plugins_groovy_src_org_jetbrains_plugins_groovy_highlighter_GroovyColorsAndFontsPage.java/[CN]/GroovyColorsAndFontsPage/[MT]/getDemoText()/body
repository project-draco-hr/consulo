{
  return "import <classref>javax.swing.JPanel</classref>\n" + "  ### \n" + "<gdoc>/**\n"+ " * This is Groovydoc comment\n"+ " * <doctag>@see</doctag> <classref>java.lang.String</classref>#equals\n"+ " */</gdoc>\n"+ "<annotation>@SpecialBean</annotation> \n"+ "class <classref>Demo</classref> {\n"+ "  def <instfield>property</instfield>\n"+ "//This is a line comment\n"+ "/* This is a block comment */\n"+ "  static def <method>foo</method>(int <param>i</param>, int <reParam>j</reParam>) {\n"+ "    <classref>Map</classref> map = [<mapkey>key</mapkey>:1, <mapkey>b</mapkey>:2]\n"+ "    <reParam>j</reParam>++\n"+ "    print map.<mapkey>key</mapkey>\n"+ "    return [<param>i</param>, <instfield>property</instfield>]\n"+ "  }\n"+ "  static def <statfield>panel</statfield> = new <classref>JPanel</classref>()\n"+ "  def <<typeparam>T</typeparam>> foo() {"+ "    <typeparam>T</typeparam> list = null"+ "  }\n"+ "}\n"+ "\n"+ "<classref>Demo</classref>.<statfield>panel</statfield>.size = "+ "<classref>Demo</classref>.<statmet>foo</statmet>(\"123${456}789\".toInteger()) \n"+ "'JetBrains'.matches(/Jw+Bw+/) \n"+ "def <local>x</local>=1 + <unresolved>unresolved</unresolved>\n"+ "<label>label</label>:def <reLocal>f1</reLocal> = []\n"+ "<reLocal>f1</reLocal> = [2]\n"+ "<classref>File</classref> f=<literal>[</literal>'path'<literal>]</literal>\n"+ "print new <classref>Demo</classref>().<prop>property</prop>\n"+ "print '<validescape>\\n</validescape> <invalidescape>\\x</invalidescape>'";
}
