{
  final PsiCodeBlock body=method.getBody();
  if (body != null) {
    final List<PsiReturnStatement> returnStatements=new ArrayList<PsiReturnStatement>();
    body.accept(new JavaRecursiveElementWalkingVisitor(){
      @Override public void visitReturnStatement(      final PsiReturnStatement statement){
        super.visitReturnStatement(statement);
        returnStatements.add(statement);
      }
    }
);
    final PsiStatement[] psiStatements=body.getStatements();
    final PsiStatement lastStatement=psiStatements[psiStatements.length - 1];
    for (    PsiReturnStatement returnStatement : returnStatements) {
      try {
        final PsiExpression expression=returnStatement.getReturnValue();
        if (expression instanceof PsiLiteralExpression || expression instanceof PsiThisExpression) {
          if (returnStatement == lastStatement) {
            returnStatement.delete();
          }
 else {
            returnStatement.replace(JavaPsiFacade.getInstance(method.getProject()).getElementFactory().createStatementFromText("return;",returnStatement));
          }
        }
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
}
