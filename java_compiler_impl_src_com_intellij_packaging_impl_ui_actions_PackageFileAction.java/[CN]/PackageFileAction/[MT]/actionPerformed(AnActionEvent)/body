{
  final Project project=event.getData(PlatformDataKeys.PROJECT);
  if (project == null)   return;
  FileDocumentManager.getInstance().saveAllDocuments();
  final List<VirtualFile> files=getFilesToPackage(event,project);
  ProgressManager.getInstance().run(new Task.Backgroundable(project,"Packaging Files"){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      for (      final VirtualFile file : files) {
        indicator.checkCanceled();
        new ReadAction(){
          protected void run(          final Result result){
            try {
              PackageFileWorker.packageFile(file,project);
            }
 catch (            IOException e) {
              Notifications.Bus.notify(new Notification("Package File","Cannot package file",CompilerBundle.message("message.tect.package.file.io.error",e.toString()),NotificationType.ERROR));
            }
          }
        }
.execute();
      }
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          setStatusText(project,files);
        }
      }
);
    }
  }
);
}
