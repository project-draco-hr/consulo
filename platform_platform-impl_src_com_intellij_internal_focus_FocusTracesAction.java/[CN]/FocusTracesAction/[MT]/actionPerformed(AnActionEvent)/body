{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  final IdeFocusManager manager=IdeFocusManager.getGlobalInstance();
  if (!(manager instanceof FocusManagerImpl))   return;
  final FocusManagerImpl focusManager=(FocusManagerImpl)manager;
  myActive=!myActive;
  if (myActive) {
    myFocusTracker=new AWTEventListener(){
      @Override public void eventDispatched(      AWTEvent event){
        if (event instanceof FocusEvent && event.getID() == FocusEvent.FOCUS_GAINED) {
          focusManager.getRequests().add(new FocusRequestInfo(((FocusEvent)event).getComponent(),new Throwable(),false));
        }
      }
    }
;
    Toolkit.getDefaultToolkit().addAWTEventListener(myFocusTracker,AWTEvent.FOCUS_EVENT_MASK);
  }
  if (!myActive) {
    final List<FocusRequestInfo> requests=focusManager.getRequests();
    new FocusTracesDialog(project,new ArrayList<FocusRequestInfo>(requests)).show();
    Toolkit.getDefaultToolkit().removeAWTEventListener(myFocusTracker);
    myFocusTracker=null;
    requests.clear();
  }
}
