{
  final JavaParameters parameters=new JavaParameters();
  parameters.getClassPath().add(tempPath);
  final List<String> paths=sources.getPathList();
  for (Iterator<String> it=paths.iterator(); it.hasNext(); ) {
    parameters.getClassPath().add(it.next());
  }
  try {
    parameters.configureByModule(module,JavaParameters.JDK_AND_CLASSES);
  }
 catch (  CantRunException e) {
    Messages.showErrorDialog(module.getProject(),UIDesignerBundle.message("error.cannot.preview.form",formFile.getPath().replace('/',File.separatorChar),e.getMessage()),CommonBundle.getErrorTitle());
    return;
  }
  parameters.setMainClass("FormPreviewFrame");
  parameters.setWorkingDirectory(tempPath);
  try {
    JavaProgramRunner defaultRunner=ExecutionRegistry.getInstance().getDefaultRunner();
    RunStrategy.getInstance().execute(new MyRunProfile(module,parameters,UIDesignerBundle.message("progress.preview.started",formFile.getPresentableUrl())),dataContext,defaultRunner,null,null);
  }
 catch (  ExecutionException e) {
    Messages.showErrorDialog(module.getProject(),UIDesignerBundle.message("error.cannot.preview.form",formFile.getPath().replace('/',File.separatorChar),e.getMessage()),CommonBundle.getErrorTitle());
    return;
  }
}
