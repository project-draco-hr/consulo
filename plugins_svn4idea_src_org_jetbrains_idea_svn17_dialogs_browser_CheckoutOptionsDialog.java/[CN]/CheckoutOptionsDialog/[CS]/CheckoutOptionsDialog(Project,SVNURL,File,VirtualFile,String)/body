{
  super(project,true);
  myRelativePath=relativePath;
  final String urlText=url.toString();
  myUrlLabel.setText(urlText);
  fillTargetList(target);
  validateTargetSelected();
  mySelectTarget.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      FileChooserDescriptor fcd=FileChooserDescriptorFactory.createSingleFolderDescriptor();
      fcd.setShowFileSystemRoots(true);
      fcd.setTitle(SvnBundle.message("checkout.directory.chooser.title"));
      fcd.setDescription(SvnBundle.message("checkout.directory.chooser.prompt"));
      fcd.setHideIgnored(false);
      VirtualFile file=FileChooser.chooseFile(getContentPane(),fcd,null);
      if (file == null) {
        return;
      }
      fillTargetList(new File(file.getPath()));
      validateTargetSelected();
    }
  }
);
  myLocalTargetList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    final ListSelectionEvent e){
      validateTargetSelected();
    }
  }
);
  svnSelectRevisionPanel.setRoot(root);
  svnSelectRevisionPanel.setProject(project);
  svnSelectRevisionPanel.setUrlProvider(new SvnRevisionPanel.UrlProvider(){
    public String getUrl(){
      return urlText;
    }
  }
);
  setTitle(SvnBundle.message("checkout.options.dialog.title"));
  myDepthLabel.setLabelFor(myDepthCombo);
  init();
}
