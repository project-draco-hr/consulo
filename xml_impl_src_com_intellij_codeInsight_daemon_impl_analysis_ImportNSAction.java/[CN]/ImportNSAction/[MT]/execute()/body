{
  final Object[] objects=myNamespaces.toArray();
  Arrays.sort(objects);
  final JList list=new JBList(objects);
  list.setCellRenderer(XmlNSRenderer.INSTANCE);
  list.setSelectedIndex(0);
  final Runnable runnable=new Runnable(){
    public void run(){
      final String namespace=(String)list.getSelectedValue();
      if (namespace != null) {
        final Project project=myFile.getProject();
        new WriteCommandAction.Simple(project,myFile){
          protected void run() throws Throwable {
            final XmlExtension extension=XmlExtension.getExtension(myFile);
            final String prefix=extension.getNamespacePrefix(myElement);
            extension.insertNamespaceDeclaration(myFile,myEditor,Collections.singleton(namespace),prefix,new XmlExtension.Runner<String,IncorrectOperationException>(){
              public void run(              final String s) throws IncorrectOperationException {
                PsiDocumentManager.getInstance(myFile.getProject()).doPostponedOperationsAndUnblockDocument(myEditor.getDocument());
                extension.qualifyWithPrefix(s,myElement,myEditor.getDocument());
              }
            }
);
          }
        }
.execute();
      }
    }
  }
;
  if (list.getModel().getSize() == 1) {
    runnable.run();
  }
 else {
    new PopupChooserBuilder(list).setTitle(myTitle).setItemChoosenCallback(runnable).createPopup().showInBestPositionFor(myEditor);
  }
  return true;
}
