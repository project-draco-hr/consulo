{
  myReachable.add(instruction);
  DfaValue dfaRight=memState.pop();
  DfaValue dfaLeft=memState.pop();
  final IElementType opSign=instruction.getOperationSign();
  if (opSign != null) {
    DfaInstructionState[] states=handleConstantComparison(instruction,runner,memState,dfaRight,dfaLeft);
    if (states == null) {
      states=handleRelationBinop(instruction,runner,memState,dfaRight,dfaLeft);
    }
    if (states != null) {
      return states;
    }
    if (JavaTokenType.PLUS == opSign) {
      memState.push(instruction.getNonNullStringValue(runner.getFactory()));
    }
 else {
      if (instruction instanceof InstanceofInstruction) {
        handleInstanceof((InstanceofInstruction)instruction,dfaRight,dfaLeft);
      }
      memState.push(DfaUnknownValue.getInstance());
    }
  }
 else {
    memState.push(DfaUnknownValue.getInstance());
  }
  instruction.setTrueReachable();
  instruction.setFalseReachable();
  return nextInstruction(instruction,runner,memState);
}
