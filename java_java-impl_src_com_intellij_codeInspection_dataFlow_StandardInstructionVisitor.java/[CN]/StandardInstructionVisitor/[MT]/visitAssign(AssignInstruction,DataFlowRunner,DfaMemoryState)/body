{
  DfaValue dfaSource=memState.pop();
  DfaValue dfaDest=memState.pop();
  if (dfaDest instanceof DfaVariableValue) {
    DfaVariableValue var=(DfaVariableValue)dfaDest;
    final PsiVariable psiVariable=var.getPsiVariable();
    final NullableNotNullManager nullableManager=NullableNotNullManager.getInstance(psiVariable.getProject());
    if (nullableManager.isNotNull(psiVariable,false)) {
      if (!memState.applyNotNull(dfaSource)) {
        onAssigningToNotNullableVariable(instruction,runner);
      }
    }
    if (!(psiVariable instanceof PsiField) || !psiVariable.hasModifierProperty(PsiModifier.VOLATILE)) {
      memState.setVarValue(var,dfaSource);
    }
  }
  memState.push(dfaDest);
  return nextInstruction(instruction,runner,memState);
}
