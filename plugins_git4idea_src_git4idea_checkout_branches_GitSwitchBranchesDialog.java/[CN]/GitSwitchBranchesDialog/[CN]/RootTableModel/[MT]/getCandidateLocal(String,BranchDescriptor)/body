{
  if (StringUtil.isEmpty(value) || !value.startsWith(REMOTES_PREFIX)) {
    return null;
  }
  int p=value.indexOf('/',REMOTES_PREFIX.length() + 1);
  String candidate=null;
  if (p != -1) {
    String c=value.substring(p + 1);
    if (!d.existingBranches.contains(c)) {
      candidate=c;
    }
 else {
      for (int i=2; i < Integer.MAX_VALUE; i++) {
        String cn=c + i;
        if (!d.existingBranches.contains(cn)) {
          candidate=cn;
          break;
        }
      }
    }
    if ("HEAD".equals(candidate)) {
      try {
        final String refText=new String(FileUtil.loadFileText(new File(d.root.getPath(),".git/refs/" + value),GitUtil.UTF8_ENCODING)).trim();
        String refsPrefix="ref: refs/";
        if (refText.endsWith("/HEAD") || !refText.startsWith(refsPrefix)) {
          candidate=null;
        }
 else {
          candidate=getCandidateLocal(refText.substring(refsPrefix.length()),d);
        }
      }
 catch (      Exception e) {
        candidate=null;
      }
    }
  }
  return candidate;
}
