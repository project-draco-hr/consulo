{
  BranchDescriptor d=myBranches.get(rowIndex);
switch (columnIndex) {
case ROOT_COLUMN:
    return Pair.create(d.getRoot(),d.root != null);
case REVISION_COLUMN:
  return Pair.create(d.referenceToCheckout,d.isReferenceValid);
case NEW_BRANCH_COLUMN:
return Pair.create(d.newBranchName == null ? "" : d.newBranchName,d.isNewBranchValid);
case STATUS_COLUMN:
switch (d.status) {
case INVALID_BRANCH_NAME:
return Pair.create("Invalid new branch name",false);
case BAD_REVISION:
return Pair.create("Invalid revision",false);
case MISSING_REVISION:
return Pair.create("Missing revision",false);
case CHECKOUT_NEEDED:
return Pair.create("Checkout",true);
case REMOVED_ROOT:
return Pair.create("Removed root",true);
case NO_ACTION:
return Pair.create("",true);
case BRANCH_NAME_EXISTS:
return Pair.create("Branch name exists",false);
default :
throw new IllegalStateException("Unknown status:" + d.status);
}
default :
throw new IllegalStateException("Unknown column: " + columnIndex);
}
}
