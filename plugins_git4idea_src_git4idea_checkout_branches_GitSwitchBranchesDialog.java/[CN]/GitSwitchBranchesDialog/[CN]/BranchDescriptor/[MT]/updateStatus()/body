{
  if (root == null) {
    status=RootStatus.REMOVED_ROOT;
    return;
  }
  status=branchNameStatus(newBranchName);
  isNewBranchValid=status == null;
  isReferenceValid=true;
  if (referenceToCheckout == null) {
    status=RootStatus.MISSING_REVISION;
    isReferenceValid=false;
    return;
  }
  try {
    GitRevisionNumber.resolve(myProject,root,referenceToCheckout);
    if (status == null) {
      status=StringUtil.isEmpty(newBranchName) && currentReference.equals(storedReference) ? RootStatus.NO_ACTION : RootStatus.CHECKOUT_NEEDED;
    }
  }
 catch (  VcsException e) {
    isReferenceValid=false;
    status=RootStatus.BAD_REVISION;
  }
}
