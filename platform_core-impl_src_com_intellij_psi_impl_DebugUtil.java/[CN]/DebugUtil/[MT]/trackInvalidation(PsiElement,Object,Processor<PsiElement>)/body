{
synchronized (element) {
    final ASTNode node=element.getNode();
    if (node == null)     return;
    List<Pair<Object,Processor<PsiElement>>> callbacks=node.getUserData(TRACK_INVALIDATION_KEY);
    if (callbacks == null) {
      callbacks=new SmartList<Pair<Object,Processor<PsiElement>>>();
      node.putUserData(TRACK_INVALIDATION_KEY,callbacks);
    }
    for (int i=0; i < callbacks.size(); i++) {
      Pair<Object,Processor<PsiElement>> pair=callbacks.get(i);
      Object callbackRequestor=pair.first;
      if (callbackRequestor.equals(requestor)) {
        callbacks.set(i,Pair.create(requestor,callback));
        return;
      }
    }
    callbacks.add(Pair.create(requestor,callback));
  }
}
