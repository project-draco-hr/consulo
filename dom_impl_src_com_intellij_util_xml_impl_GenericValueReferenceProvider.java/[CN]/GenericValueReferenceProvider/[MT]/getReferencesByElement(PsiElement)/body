{
  if (!(psiElement instanceof XmlTag || psiElement instanceof XmlAttributeValue)) {
    return PsiReference.EMPTY_ARRAY;
  }
  PsiElement originalElement=psiElement.getUserData(PsiUtil.ORIGINAL_KEY);
  if (originalElement != null) {
    psiElement=originalElement;
  }
  final XmlTag tag=PsiTreeUtil.getParentOfType(psiElement,XmlTag.class,false);
  DomElement domElement=DomManager.getDomManager(psiElement.getManager().getProject()).getDomElement(tag);
  if (domElement == null) {
    return PsiReference.EMPTY_ARRAY;
  }
  if (psiElement instanceof XmlAttributeValue) {
    final XmlAttribute parent=(XmlAttribute)psiElement.getParent();
    final String name=parent.getLocalName();
    final DomAttributeChildDescription childDescription=domElement.getGenericInfo().getAttributeChildDescription(name);
    if (childDescription != null) {
      domElement=childDescription.getDomAttributeValue(domElement);
    }
  }
  if (!(domElement instanceof GenericDomValue)) {
    return PsiReference.EMPTY_ARRAY;
  }
  GenericDomValue domValue=(GenericDomValue)domElement;
  boolean soft=false;
  final Converter converter=domValue.getConverter();
  if (converter instanceof ResolvingConverter) {
    final Set additionalVariants=((ResolvingConverter)converter).getAdditionalVariants();
    if (additionalVariants.contains(domValue.getStringValue())) {
      soft=true;
    }
  }
  PsiReference[] references=createReferences(domValue,(XmlElement)psiElement,soft,converter);
  DomElement parent=domElement.getParent();
  if (references.length == 0) {
    final NameValue nameValue=domElement.getAnnotation(NameValue.class);
    if (nameValue != null && nameValue.referencable()) {
      references=ArrayUtil.append(references,PsiReferenceBase.createSelfReference(psiElement,parent.getXmlElement()),PsiReference.class);
    }
  }
  return references;
}
