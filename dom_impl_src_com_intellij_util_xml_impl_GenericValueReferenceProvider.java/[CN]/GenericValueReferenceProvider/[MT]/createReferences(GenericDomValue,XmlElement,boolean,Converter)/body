{
  if (converter instanceof PsiReferenceConverter) {
    final Convert annotation=domValue.getAnnotation(Convert.class);
    return ((PsiReferenceConverter)converter).createReferences(psiElement,annotation != null && annotation.soft());
  }
  final DomInvocationHandler invocationHandler=getInvocationHandler(domValue);
  final Class clazz=DomUtil.getGenericValueParameter(invocationHandler.getDomElementType());
  if (clazz == null)   return PsiReference.EMPTY_ARRAY;
  if (ReflectionCache.isAssignable(PsiType.class,clazz)) {
    return new PsiReference[]{new PsiTypeReference((GenericDomValue<PsiType>)domValue)};
  }
  if (ReflectionCache.isAssignable(PsiClass.class,clazz)) {
    ExtendClass extendClass=invocationHandler.getAnnotation(ExtendClass.class);
    JavaClassReferenceProvider provider;
    if (extendClass == null) {
      provider=new JavaClassReferenceProvider();
    }
 else {
      provider=new JavaClassReferenceProvider(extendClass.value(),extendClass.instantiatable());
    }
    final boolean isResolvingConverter=converter instanceof ResolvingConverter;
    provider.setSoft(soft || isResolvingConverter);
    final PsiReference[] references=provider.getReferencesByElement(psiElement);
    return isResolvingConverter ? ArrayUtil.append(references,new GenericDomValueReference(domValue,soft),PsiReference.class) : references;
  }
  if (ReflectionCache.isAssignable(Integer.class,clazz)) {
    return new PsiReference[]{new GenericDomValueReference<Integer>((GenericDomValue<Integer>)domValue,true){
      public Object[] getVariants(){
        return new Object[]{"239","42"};
      }
    }
};
  }
  if (ReflectionCache.isAssignable(String.class,clazz)) {
    return PsiReference.EMPTY_ARRAY;
  }
  PsiReferenceFactory provider=myProviders.get(clazz);
  if (provider != null) {
    return provider.getReferencesByElement(psiElement);
  }
  return new PsiReference[]{new GenericDomValueReference(domValue,soft)};
}
