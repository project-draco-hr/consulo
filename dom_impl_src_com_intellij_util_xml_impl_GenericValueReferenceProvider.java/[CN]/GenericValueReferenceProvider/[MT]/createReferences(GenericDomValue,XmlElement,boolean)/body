{
  Converter converter=domValue.getConverter();
  if (converter instanceof PsiReferenceConverter) {
    return ((PsiReferenceConverter)converter).createReferences(psiElement,false);
  }
  final Class clazz=DomUtil.getGenericValueParameter(domValue.getDomElementType());
  if (clazz == null)   return PsiReference.EMPTY_ARRAY;
  if (PsiType.class.isAssignableFrom(clazz)) {
    return new PsiReference[]{new PsiTypeReference((GenericDomValue<PsiType>)domValue)};
  }
  if (PsiClass.class.isAssignableFrom(clazz)) {
    ExtendClass extendClass=((DomElement)domValue).getAnnotation(ExtendClass.class);
    JavaClassReferenceProvider provider;
    if (extendClass == null) {
      provider=new JavaClassReferenceProvider();
    }
 else {
      provider=new JavaClassReferenceProvider(extendClass.value(),extendClass.instantiatable());
    }
    return provider.getReferencesByElement(psiElement);
  }
  if (Integer.class.isAssignableFrom(clazz)) {
    return new PsiReference[]{new GenericDomValueReference<Integer>((GenericDomValue<Integer>)domValue,true){
      public Object[] getVariants(){
        return new Object[]{"239","42"};
      }
    }
};
  }
  if (String.class.isAssignableFrom(clazz)) {
    return PsiReference.EMPTY_ARRAY;
  }
  PsiReferenceFactory provider=myProviders.get(clazz);
  if (provider != null) {
    return provider.getReferencesByElement(psiElement);
  }
  return new PsiReference[]{new GenericDomValueReference(domValue,soft)};
}
