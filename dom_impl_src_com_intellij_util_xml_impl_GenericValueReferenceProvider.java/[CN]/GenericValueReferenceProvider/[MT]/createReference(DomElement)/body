{
  if (!(element instanceof GenericDomValue))   return PsiReference.EMPTY_ARRAY;
  PsiElement psiElement;
  if (element instanceof GenericAttributeValue) {
    psiElement=((GenericAttributeValue)element).getXmlAttributeValue();
    if (psiElement == null)     return PsiReference.EMPTY_ARRAY;
  }
 else {
    if (element.getXmlTag().getValue().getTextElements().length == 0)     return PsiReference.EMPTY_ARRAY;
    psiElement=element.getXmlElement();
  }
  Converter converter=((GenericDomValue)element).getConverter();
  if (converter instanceof PsiReferenceConverter) {
    return ((PsiReferenceConverter)converter).createReferences(psiElement,false);
  }
  GenericDomValue domElement=(GenericDomValue)element;
  final Class clazz=DomUtil.getGenericValueParameter(domElement.getDomElementType());
  if (PsiType.class.isAssignableFrom(clazz)) {
    return new PsiReference[]{new PsiTypeReference(this,(GenericDomValue<PsiType>)domElement)};
  }
  if (PsiClass.class.isAssignableFrom(clazz)) {
    JavaClassReferenceProvider provider=new JavaClassReferenceProvider();
    return provider.getReferencesByElement(psiElement);
  }
  if (Integer.class.isAssignableFrom(clazz)) {
    return new PsiReference[]{new GenericDomValueReference(this,domElement){
      public Object[] getVariants(){
        return new Object[]{"239","42"};
      }
    }
};
  }
  if (String.class.isAssignableFrom(clazz)) {
    return PsiReference.EMPTY_ARRAY;
  }
  PsiReferenceFactory provider=myProviders.get(clazz);
  if (provider != null) {
    return provider.getReferencesByElement(psiElement);
  }
  return new PsiReference[]{new GenericDomValueReference(this,domElement)};
}
