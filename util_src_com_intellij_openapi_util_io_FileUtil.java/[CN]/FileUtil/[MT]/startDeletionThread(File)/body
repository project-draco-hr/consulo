{
  final Runnable deleteFilesTask=new Runnable(){
    public void run(){
      final Thread currentThread=Thread.currentThread();
      currentThread.setPriority(Thread.MIN_PRIORITY);
      ShutDownTracker.getInstance().registerStopperThread(currentThread);
      try {
        for (        File tempFile : tempFiles) {
          delete(tempFile);
        }
      }
  finally {
        ShutDownTracker.getInstance().unregisterStopperThread(currentThread);
        currentThread.setPriority(Thread.NORM_PRIORITY);
      }
    }
  }
;
  try {
    final Class<?> aClass=Class.forName("com.intellij.openapi.application.ApplicationManager");
    final Method getApplicationMethod=aClass.getMethod("getApplication");
    final Object application=getApplicationMethod.invoke(null);
    final Method executeOnPooledThreadMethod=application.getClass().getMethod("executeOnPooledThread",Runnable.class);
    executeOnPooledThreadMethod.invoke(application,deleteFilesTask);
  }
 catch (  Exception e) {
    Thread t=new Thread(deleteFilesTask,"File deletion thread");
    t.start();
  }
}
