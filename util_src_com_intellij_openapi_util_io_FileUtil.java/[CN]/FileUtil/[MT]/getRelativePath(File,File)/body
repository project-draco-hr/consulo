{
  if (base == null || file == null)   return null;
  if (!base.isDirectory()) {
    base=base.getParentFile();
    if (base == null)     return null;
  }
  if (base.equals(file))   return ".";
  String basePath=base.getAbsolutePath();
  if (!basePath.endsWith(File.separator))   basePath+=File.separatorChar;
  final String filePath=file.getAbsolutePath();
  int len=0;
  int lastSeparatorIndex=0;
  while (len < filePath.length() && len < basePath.length() && filePath.charAt(len) == basePath.charAt(len)) {
    if (basePath.charAt(len) == File.separatorChar) {
      lastSeparatorIndex=len;
    }
    len++;
  }
  if (len == 0)   return null;
  StringBuilder relativePath=new StringBuilder();
  for (int i=len; i < basePath.length(); i++) {
    if (basePath.charAt(i) == File.separatorChar) {
      relativePath.append("..");
      relativePath.append(File.separatorChar);
    }
  }
  relativePath.append(filePath.substring(lastSeparatorIndex + 1));
  return relativePath.toString();
}
