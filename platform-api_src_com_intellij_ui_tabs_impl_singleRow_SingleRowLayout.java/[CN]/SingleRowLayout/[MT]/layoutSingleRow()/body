{
  final TabInfo selected=myTabs.getSelectedInfo();
  final JComponent selectedToolbar=myTabs.myInfo2Toolbar.get(selected);
  SingleRowPassInfo data=new SingleRowPassInfo(this);
  boolean layoutLabels=true;
  if (!myTabs.myForcedRelayout && myLastSingRowLayout != null && myLastSingRowLayout.contentCount == myTabs.getTabCount() && myLastSingRowLayout.laayoutSize.equals(myTabs.getSize())) {
    for (    TabInfo each : myTabs.myVisibleInfos) {
      final TabLabel eachLabel=myTabs.myInfo2Label.get(each);
      if (!eachLabel.isValid()) {
        break;
      }
      if (myTabs.getSelectedInfo() == each) {
        if (eachLabel.getBounds().width != 0) {
          data=myLastSingRowLayout;
          layoutLabels=false;
        }
      }
    }
  }
  data.insets=myTabs.getLayoutInsets();
  myTabs.resetLayout(layoutLabels || myTabs.isHideTabs());
  if (myTabs.isSideComponentVertical() && selectedToolbar != null) {
    data.xAddin=selectedToolbar.getPreferredSize().width + 1;
  }
  if (layoutLabels && !myTabs.isHideTabs()) {
    data.eachX=data.insets.left;
    recomputeToLayout(selectedToolbar,data);
    layoutLabelsAndGhosts(data);
    if (data.toDrop.size() > 0) {
      data.moreRect=new Rectangle(myTabs.getWidth() - data.insets.right - data.moreRectWidth,data.insets.top + myTabs.getSelectionTabVShift(),data.moreRectWidth - 1,myTabs.myHeaderFitSize.height - 1);
    }
  }
  data.yComp=myTabs.isHideTabs() ? data.insets.top : myTabs.myHeaderFitSize.height + data.insets.top + (myTabs.isStealthModeEffective() ? 0 : 1);
  if (selectedToolbar != null) {
    if (!myTabs.isSideComponentVertical() && !myTabs.isHideTabs()) {
      int toolbarX=data.eachX + myTabs.getToolbarInset() + (data.moreRect != null ? data.moreRect.width : 0);
      myTabs.layout(selectedToolbar,toolbarX,data.insets.top,myTabs.getSize().width - data.insets.left - toolbarX,myTabs.myHeaderFitSize.height - 1);
    }
 else     if (myTabs.isSideComponentVertical()) {
      myTabs.layout(selectedToolbar,data.insets.left + 1,data.yComp + 1,selectedToolbar.getPreferredSize().width,myTabs.getSize().height - data.yComp - data.insets.bottom- 2);
    }
  }
  if (selected != null) {
    final JComponent comp=selected.getComponent();
    myTabs.layoutComp(data.xAddin,data.yComp,comp);
  }
  if (data.toLayout.size() > 0 && myTabs.myVisibleInfos.size() > 0) {
    final int left=myTabs.myVisibleInfos.indexOf(data.toLayout.get(0));
    final int right=myTabs.myVisibleInfos.indexOf(data.toLayout.get(data.toLayout.size() - 1));
    myMoreIcon.setPaintedIcons(left > 0,right < myTabs.myVisibleInfos.size() - 1);
  }
 else {
    myMoreIcon.setPaintedIcons(false,false);
  }
  myLastSingRowLayout=data;
  return data;
}
