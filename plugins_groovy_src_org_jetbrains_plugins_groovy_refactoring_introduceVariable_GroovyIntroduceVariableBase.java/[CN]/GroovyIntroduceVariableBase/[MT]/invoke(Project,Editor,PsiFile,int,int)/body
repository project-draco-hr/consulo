{
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  if (!(file instanceof GroovyFileBase || file instanceof GspFile)) {
    String message=RefactoringBundle.getCannotRefactorMessage(GroovyRefactoringBundle.message("only.in.groovy.files"));
    showErrorMessage(message,project);
    return false;
  }
  GroovyFileBase fileBase=file instanceof GspFile ? ((GspFile)file).getGroovyLanguageRoot() : ((GroovyFileBase)file);
  GrExpression tempExpr=GroovyRefactoringUtil.findElementInRange(fileBase,startOffset,endOffset,GrExpression.class);
  if (tempExpr != null) {
    PsiElement parent=tempExpr.getParent();
    if (parent instanceof GrMethodCallExpression || parent instanceof GrIndexProperty) {
      tempExpr=((GrExpression)tempExpr.getParent());
      SelectionModel model=editor.getSelectionModel();
      model.setSelection(model.getSelectionStart(),tempExpr.getTextRange().getEndOffset());
    }
  }
  return invokeImpl(project,tempExpr,editor);
}
