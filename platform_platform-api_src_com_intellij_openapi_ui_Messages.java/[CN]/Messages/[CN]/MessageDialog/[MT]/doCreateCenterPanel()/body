{
  JPanel panel=new JPanel(new BorderLayout(15,0));
  if (myIcon != null) {
    JLabel iconLabel=new JLabel(myIcon);
    Container container=new Container();
    container.setLayout(new BorderLayout());
    container.add(iconLabel,BorderLayout.NORTH);
    panel.add(container,BorderLayout.WEST);
  }
  if (myMessage != null) {
    final JTextPane messageComponent=createMessageComponent(myMessage);
    final Dimension screenSize=messageComponent.getToolkit().getScreenSize();
    final Dimension textSize=messageComponent.getPreferredSize();
    if (textSize.width > screenSize.width * 4 / 5 || textSize.height > screenSize.height / 2) {
      final JScrollPane pane=ScrollPaneFactory.createScrollPane(messageComponent);
      pane.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
      pane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
      pane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
      final int scrollSize=(int)new JScrollBar(JScrollBar.VERTICAL).getPreferredSize().getWidth();
      final Dimension preferredSize=new Dimension(Math.min(textSize.width,screenSize.width * 4 / 5) + scrollSize,Math.min(textSize.height,screenSize.height / 2) + scrollSize);
      pane.setPreferredSize(preferredSize);
      panel.add(pane,BorderLayout.CENTER);
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          final Dimension textSize=messageComponent.getPreferredSize();
          final Dimension preferredSize=new Dimension(Math.min(textSize.width,screenSize.width * 4 / 5) + scrollSize,Math.min(textSize.height,screenSize.height / 2) + scrollSize);
          pane.setPreferredSize(preferredSize);
          SwingUtilities.getWindowAncestor(pane).pack();
        }
      }
);
    }
 else {
      panel.add(messageComponent,BorderLayout.CENTER);
    }
  }
  return panel;
}
