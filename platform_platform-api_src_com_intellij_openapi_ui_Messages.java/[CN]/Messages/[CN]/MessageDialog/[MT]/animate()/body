{
  final int height=getPreferredSize().height;
  final int frameCount=10;
  final boolean toClose=isShowing();
  final AtomicInteger i=new AtomicInteger(-1);
  final Alarm animator=new Alarm(myDisposable);
  final Runnable runnable=new Runnable(){
    @Override public void run(){
      int state=i.addAndGet(1);
      double linearProgress=(double)state / frameCount;
      if (toClose) {
        linearProgress=1 - linearProgress;
      }
      myLayout.myPhase=(1 - Math.cos(Math.PI * linearProgress)) / 2;
      Window window=getPeer().getWindow();
      Rectangle bounds=window.getBounds();
      bounds.height=(int)(height * myLayout.myPhase);
      window.setBounds(bounds);
      if (state == 0 && !toClose && window.getOwner() instanceof IdeFrame) {
        WindowManager.getInstance().requestUserAttention((IdeFrame)window.getOwner(),true);
      }
      if (state < frameCount) {
        animator.addRequest(this,10);
      }
 else       if (toClose) {
        MessageDialog.super.dispose();
      }
    }
  }
;
  animator.addRequest(runnable,10,ModalityState.stateForComponent(getRootPane()));
}
