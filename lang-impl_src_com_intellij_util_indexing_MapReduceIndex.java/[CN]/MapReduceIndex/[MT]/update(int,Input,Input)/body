{
  final Map<Key,Value> oldData=oldContent != null ? myIndexer.map(oldContent) : Collections.<Key,Value>emptyMap();
  final Map<Key,Value> data=content != null ? myIndexer.map(content) : Collections.<Key,Value>emptyMap();
  final Set<Key> allKeys=new HashSet<Key>(oldData.size() + data.size());
  allKeys.addAll(oldData.keySet());
  allKeys.addAll(data.keySet());
  if (allKeys.size() > 0) {
    for (    Key key : allKeys) {
      final Lock writeLock=getWriteLock();
      if (oldData.containsKey(key)) {
        final Value oldValue=oldData.get(key);
        writeLock.lock();
        try {
          myStorage.removeValue(key,inputId,oldValue);
        }
  finally {
          writeLock.unlock();
        }
      }
      if (data.containsKey(key)) {
        final Value newValue=data.get(key);
        writeLock.lock();
        try {
          myStorage.addValue(key,inputId,newValue);
        }
  finally {
          writeLock.unlock();
        }
      }
    }
    scheduleFlush();
  }
}
