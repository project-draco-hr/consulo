{
  final Set<Key> allKeys=new HashSet<Key>(oldData.size() + newData.size());
  allKeys.addAll(oldData.keySet());
  allKeys.addAll(newData.keySet());
  if (allKeys.size() > 0) {
    final Lock writeLock=getWriteLock();
    for (    Key key : allKeys) {
      writeLock.lock();
      try {
        if (oldData.containsKey(key)) {
          final Value oldValue=oldData.get(key);
          myStorage.removeValue(key,inputId,oldValue);
        }
        if (newData.containsKey(key)) {
          final Value newValue=newData.get(key);
          myStorage.addValue(key,inputId,newValue);
        }
      }
  finally {
        writeLock.unlock();
      }
    }
    scheduleFlush();
  }
}
