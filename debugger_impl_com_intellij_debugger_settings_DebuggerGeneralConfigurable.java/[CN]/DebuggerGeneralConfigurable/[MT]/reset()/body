{
  myBaseRenderersConfigurable.reset();
  final DebuggerSettings settings=DebuggerSettings.getInstance();
  if (!SystemInfo.isWindows) {
    myRbSocket.setSelected(true);
    myRbShmem.setEnabled(false);
  }
 else {
    if (settings.DEBUGGER_TRANSPORT == DebuggerSettings.SHMEM_TRANSPORT) {
      myRbShmem.setSelected(true);
    }
 else {
      myRbSocket.setSelected(true);
    }
    myRbShmem.setEnabled(true);
  }
  myCbSkipSimpleGetters.setSelected(settings.SKIP_GETTERS);
  myCbSkipSyntheticMethods.setSelected(settings.SKIP_SYNTHETIC_METHODS);
  myCbSkipConstructors.setSelected(settings.SKIP_CONSTRUCTORS);
  myCbSkipClassLoaders.setSelected(settings.SKIP_CLASSLOADERS);
  myValueTooltipDelayField.setText(Integer.toString(settings.VALUE_LOOKUP_DELAY));
  myHideDebuggerCheckBox.setSelected(settings.HIDE_DEBUGGER_ON_PROCESS_TERMINATION);
  myHotswapInBackground.setSelected(settings.HOTSWAP_IN_BACKGROUND);
  myCbCompileBeforeHotswap.setSelected(settings.COMPILE_BEFORE_HOTSWAP);
  myCbForceClassicVM.setSelected(settings.FORCE_CLASSIC_VM);
  myCbDisableJIT.setSelected(settings.DISABLE_JIT);
  myCbStepInfoFiltersEnabled.setSelected(settings.TRACING_FILTERS_ENABLED);
  mySteppingFilterEditor.setFilters(settings.getSteppingFilters());
  mySteppingFilterEditor.setEnabled(settings.TRACING_FILTERS_ENABLED);
  if (DebuggerSettings.RUN_HOTSWAP_ALWAYS.equals(settings.RUN_HOTSWAP_AFTER_COMPILE)) {
    myRbAlways.setSelected(true);
  }
 else   if (DebuggerSettings.RUN_HOTSWAP_NEVER.equals(settings.RUN_HOTSWAP_AFTER_COMPILE)) {
    myRbNever.setSelected(true);
  }
 else {
    myRbAsk.setSelected(true);
  }
}
