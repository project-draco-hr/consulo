{
  final JPanel panel=new JPanel(new GridBagLayout());
  panel.setBorder(IdeBorderFactory.createTitledBorder(DebuggerBundle.message("label.debugger.general.configurable.group.launching")));
  myCbForceClassicVM=new StateRestoringCheckBox(DebuggerBundle.message("label.debugger.general.configurable.force.classic.vm"));
  panel.add(myCbForceClassicVM,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  myCbDisableJIT=new JCheckBox(DebuggerBundle.message("label.debugger.general.configurable.disable.jit"));
  panel.add(myCbDisableJIT,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  myRbSocket=new JRadioButton(DebuggerBundle.message("label.debugger.general.configurable.socket"));
  myRbShmem=new JRadioButton(DebuggerBundle.message("label.debugger.general.configurable.shmem"));
  final ButtonGroup gr=new ButtonGroup();
  gr.add(myRbSocket);
  gr.add(myRbShmem);
  final Box box=Box.createHorizontalBox();
  box.add(myRbSocket);
  box.add(myRbShmem);
  final JPanel transportPanel=new JPanel(new BorderLayout());
  transportPanel.add(new JLabel(DebuggerBundle.message("label.debugger.general.configurable.debugger.transport")),BorderLayout.WEST);
  transportPanel.add(box,BorderLayout.CENTER);
  panel.add(transportPanel,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,6,0,0),0,0));
  return panel;
}
