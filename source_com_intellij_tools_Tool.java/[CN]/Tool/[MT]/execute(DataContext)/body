{
  final Project project=DataKeys.PROJECT.getData(dataContext);
  if (project == null) {
    return;
  }
  FileDocumentManager.getInstance().saveAllDocuments();
  try {
    if (isUseConsole()) {
      RunStrategy.getInstance().executeDefault(new ToolRunProfile(this,dataContext),dataContext);
    }
 else {
      GeneralCommandLine commandLine=createCommandLine(dataContext);
      if (commandLine == null) {
        return;
      }
      OSProcessHandler handler=new DefaultJavaProcessHandler(commandLine);
      handler.addProcessListener(new ToolProcessAdapter(project,synchronizeAfterExecution(),getName()));
      handler.startNotify();
    }
  }
 catch (  ExecutionException ex) {
    ExecutionErrorDialog.show(ex,ToolsBundle.message("tools.process.start.error"),project);
  }
}
