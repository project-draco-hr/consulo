{
  final Set<String> result=ContainerUtil.newHashSet();
  PsiTreeUtil.processElements(scope,new PsiElementProcessor(){
    @Override public boolean execute(    @NotNull PsiElement element){
      if (!(element instanceof GrReferenceExpression) || !((GrReferenceExpression)element).isQualified()) {
        return true;
      }
      GrReferenceExpression ref=(GrReferenceExpression)element;
      if (isWriteAccess(ref)) {
        String varName=ref.getReferenceName();
        if (!result.contains(varName)) {
          PsiElement target=ref.resolve();
          if (target instanceof GrVariable && ((GrVariable)target).getInitializerGroovy() != null || target instanceof GrParameter) {
            result.add(varName);
          }
        }
      }
      return true;
    }
  }
);
  return result;
}
