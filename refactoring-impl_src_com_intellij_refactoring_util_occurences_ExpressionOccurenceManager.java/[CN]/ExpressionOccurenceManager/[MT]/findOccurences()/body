{
  if ("null".equals(myMainOccurence.getText())) {
    return defaultOccurences();
  }
  if (myFilter != null && !myFilter.isOK(myMainOccurence)) {
    return defaultOccurences();
  }
  final PsiExpression[] expressionOccurrences=CodeInsightUtil.findExpressionOccurrences(myScope,myMainOccurence);
  if (myMaintainStaticContext && expressionOccurrences.length > 1 && !RefactoringUtil.isInStaticContext(myMainOccurence)) {
    final ArrayList<PsiExpression> expressions=new ArrayList<PsiExpression>(Arrays.asList(expressionOccurrences));
    for (Iterator<PsiExpression> iterator=expressions.iterator(); iterator.hasNext(); ) {
      final PsiExpression expression=iterator.next();
      if (RefactoringUtil.isInStaticContext(expression)) {
        iterator.remove();
      }
    }
    return expressions.toArray(new PsiExpression[expressions.size()]);
  }
 else {
    return expressionOccurrences;
  }
}
