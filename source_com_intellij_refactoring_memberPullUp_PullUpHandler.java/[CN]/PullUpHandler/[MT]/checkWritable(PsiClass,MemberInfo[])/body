{
  if (!superClass.isWritable()) {
    if (!RefactoringMessageUtil.checkReadOnlyStatus(myProject,superClass))     return false;
  }
  for (int i=0; i < infos.length; i++) {
    MemberInfo info=infos[i];
    if (info.getMember() instanceof PsiClass && info.getOverrides() != null)     continue;
    if (!info.getMember().isWritable()) {
      if (!RefactoringMessageUtil.checkReadOnlyStatus(myProject,info.getMember()))       return false;
    }
  }
  return true;
}
