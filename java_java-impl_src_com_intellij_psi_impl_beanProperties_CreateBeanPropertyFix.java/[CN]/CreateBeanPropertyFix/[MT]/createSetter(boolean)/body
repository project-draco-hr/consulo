{
  final PsiElementFactory elementFactory=JavaPsiFacade.getInstance(myPsiClass.getProject()).getElementFactory();
  final String methodName=PropertyUtil.suggestSetterName(myPropertyName);
  final String typeName=myType.getCanonicalText();
  @NonNls final String text;
  if (createField) {
    @NonNls String fieldName=getFieldName();
    if (fieldName.equals(myPropertyName)) {
      fieldName="this." + fieldName;
    }
    text="public void " + methodName + "("+ typeName+ " "+ myPropertyName+ ") {"+ fieldName+ "="+ myPropertyName+ ";}";
  }
 else {
    text="public void " + methodName + "("+ typeName+ " "+ myPropertyName+ ") {}";
  }
  final PsiMethod method=elementFactory.createMethodFromText(text,null);
  final PsiMethod psiElement=(PsiMethod)myPsiClass.add(method);
  if (!createField) {
    CreateFromUsageUtils.setupMethodBody(psiElement);
  }
  return psiElement;
}
