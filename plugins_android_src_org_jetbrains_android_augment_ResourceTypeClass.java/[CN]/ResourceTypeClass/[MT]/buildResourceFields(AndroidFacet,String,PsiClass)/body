{
  final Module circularDepLibWithSamePackage=AndroidCompileUtil.findCircularDependencyOnLibraryWithSamePackage(facet);
  final boolean generateNonFinalFields=facet.getConfiguration().LIBRARY_PROJECT || circularDepLibWithSamePackage != null;
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(facet.getModule().getProject());
  final Collection<String> resNames=facet.getLocalResourceManager().getResourceNames(resClassName);
  final PsiField[] result=new PsiField[resNames.size()];
  int i=0;
  for (  String resName : resNames) {
    final PsiType type=ResourceType.STYLEABLE.getName().equals(resClassName) ? PsiType.INT.createArrayType() : PsiType.INT;
    final AndroidLightField field=new AndroidLightField(AndroidResourceUtil.getFieldNameByResourceName(resName),context,type,!generateNonFinalFields,generateNonFinalFields ? null : 0);
    field.setInitializer(factory.createExpressionFromText("0",field));
    result[i++]=field;
  }
  return result;
}
