{
  final JComponent secondComponent=myConfigurablePanelExtension != extension ? null : mySplitter.getSecondComponent();
  if (secondComponent == null && extension.isEnabled() || secondComponent != null && !extension.isEnabled()) {
    if (!extension.isEnabled()) {
      mySplitter.setSecondComponent(null);
    }
 else {
      mySplitter.setSecondComponent(createConfigurationPanel(extension));
    }
  }
  if (extension instanceof ModuleExtensionWithSdk) {
    ModifiableModuleRootLayer moduleRootLayer=extension.getModuleRootLayer();
    final ModuleExtensionWithSdkOrderEntry sdkOrderEntry=moduleRootLayer.findModuleExtensionSdkEntry(extension);
    if (!extension.isEnabled() && sdkOrderEntry != null) {
      moduleRootLayer.removeOrderEntry(sdkOrderEntry);
    }
    if (extension.isEnabled()) {
      final ModuleExtensionWithSdk sdkExtension=(ModuleExtensionWithSdk)extension;
      if (!sdkExtension.getInheritableSdk().isNull()) {
        if (sdkOrderEntry == null) {
          moduleRootLayer.addModuleExtensionSdkEntry(sdkExtension);
        }
 else {
          final ModuleExtensionWithSdk<?> moduleExtension=sdkOrderEntry.getModuleExtension();
          if (moduleExtension != null && !Comparing.equal(sdkExtension.getInheritableSdk(),moduleExtension.getInheritableSdk())) {
            moduleRootLayer.addModuleExtensionSdkEntry(sdkExtension);
          }
        }
      }
 else       if (sdkOrderEntry != null) {
        moduleRootLayer.removeOrderEntry(sdkOrderEntry);
      }
    }
  }
  for (  PsiPackageSupportProvider supportProvider : PsiPackageSupportProvider.EP_NAME.getExtensions()) {
    final Module module=extension.getModule();
    if (supportProvider.isSupported(extension)) {
      PsiPackageManager.getInstance(module.getProject()).dropCache(extension.getClass());
    }
  }
  myClasspathEditor.moduleStateChanged();
  myContentEntriesEditor.moduleStateChanged();
  myOutputEditor.moduleStateChanged();
}
