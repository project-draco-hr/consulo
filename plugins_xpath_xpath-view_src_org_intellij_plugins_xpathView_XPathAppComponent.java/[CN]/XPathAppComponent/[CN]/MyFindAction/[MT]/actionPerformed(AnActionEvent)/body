{
  final Editor editor=DataKeys.EDITOR.getData(event.getDataContext());
  if (editor != null) {
    if (HighlighterUtil.hasHighlighters(editor)) {
      final int offset=editor.getCaretModel().getOffset();
      final List<RangeHighlighter> hl=HighlighterUtil.getHighlighters(editor);
      int diff=Integer.MAX_VALUE;
      RangeHighlighter next=null;
      for (      RangeHighlighter highlighter : hl) {
        if (isPrev) {
          if (highlighter.getStartOffset() < offset && offset - highlighter.getStartOffset() < diff) {
            diff=offset - highlighter.getStartOffset();
            next=highlighter;
          }
        }
 else {
          if (highlighter.getStartOffset() > offset && highlighter.getStartOffset() - offset < diff) {
            diff=highlighter.getStartOffset() - offset;
            next=highlighter;
          }
        }
      }
      final int startOffset;
      if (next != null) {
        startOffset=next.getStartOffset();
      }
 else       if (wrapAround) {
        startOffset=hl.get(isPrev ? hl.size() - 1 : 0).getStartOffset();
      }
 else {
        final String info=(isPrev ? "First" : "Last") + " XPath match reached. Press " + (isPrev ? getShortcutText(prevAction) : getShortcutText(nextAction))+ " to search from the "+ (isPrev ? "bottom" : "top");
        showEditorHint(info,editor);
        wrapAround=true;
        return;
      }
      editor.getScrollingModel().scrollTo(editor.offsetToLogicalPosition(startOffset),ScrollType.MAKE_VISIBLE);
      editor.getCaretModel().moveToOffset(startOffset);
      wrapAround=false;
      return;
    }
  }
  origAction.actionPerformed(event);
}
