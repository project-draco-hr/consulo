def getchanges(self, rev):
    revision = self.mtnrun('get_revision', rev).split('\n\n')
    files = {}
    ignoremove = {}
    renameddirs = []
    copies = {}
    for e in revision:
        m = self.add_file_re.match(e)
        if m:
            files[m.group(1)] = rev
            ignoremove[m.group(1)] = rev
        m = self.patch_re.match(e)
        if m:
            files[m.group(1)] = rev
        m = self.delete_re.match(e)
        if m:
            files[m.group(1)] = rev
        m = self.rename_re.match(e)
        if m:
            toname = m.group(2)
            fromname = m.group(1)
            if self.mtnisfile(toname, rev):
                ignoremove[toname] = 1
                copies[toname] = fromname
                files[toname] = rev
                files[fromname] = rev
            elif self.mtnisdir(toname, rev):
                renameddirs.append((fromname, toname))
    for (fromdir, todir) in renameddirs:
        renamed = {}
        for tofile in self.files:
            if (tofile in ignoremove):
                continue
            if tofile.startswith((todir + '/')):
                renamed[tofile] = (fromdir + tofile[len(todir):])
                ignoremove[tofile] = 1
        for (tofile, fromfile) in renamed.items():
            self.ui.debug((_("copying file in renamed directory from '%s' to '%s'") % (fromfile, tofile)), '\n')
            files[tofile] = rev
            copies[tofile] = fromfile
        for fromfile in renamed.values():
            files[fromfile] = rev
    return (files.items(), copies)
