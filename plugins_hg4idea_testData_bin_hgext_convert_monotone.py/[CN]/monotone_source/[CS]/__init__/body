def __init__(self, ui, path=None, rev=None):
    converter_source.__init__(self, ui, path, rev)
    commandline.__init__(self, ui, 'mtn')
    self.ui = ui
    self.path = path
    norepo = NoRepo((_('%s does not look like a monotone repository') % path))
    if (not os.path.exists(os.path.join(path, '_MTN'))):
        try:
            header = file(path, 'rb').read(16)
        except:
            header = ''
        if (header != 'SQLite format 3\x00'):
            raise norepo
    space = '\\s*'
    name = '\\s+"((?:\\\\"|[^"])*)"\\s*'
    value = name
    revision = '\\s+\\[(\\w+)\\]\\s*'
    lines = '(?:.|\\n)+'
    self.dir_re = re.compile(((space + 'dir') + name))
    self.file_re = re.compile(((((space + 'file') + name) + 'content') + revision))
    self.add_file_re = re.compile(((((space + 'add_file') + name) + 'content') + revision))
    self.patch_re = re.compile(((((((space + 'patch') + name) + 'from') + revision) + 'to') + revision))
    self.rename_re = re.compile(((((space + 'rename') + name) + 'to') + name))
    self.delete_re = re.compile(((space + 'delete') + name))
    self.tag_re = re.compile(((((space + 'tag') + name) + 'revision') + revision))
    self.cert_re = re.compile((((((lines + space) + 'name') + name) + 'value') + value))
    attr = (((((space + 'file') + lines) + space) + 'attr') + space)
    self.attr_execute_re = re.compile((((attr + '"mtn:execute"') + space) + '"true"'))
    self.manifest_rev = None
    self.manifest = None
    self.files = None
    self.dirs = None
    checktool('mtn', abort=False)
    self.rev = None
    try:
        self.getheads()
    except:
        raise norepo
    self.rev = rev
