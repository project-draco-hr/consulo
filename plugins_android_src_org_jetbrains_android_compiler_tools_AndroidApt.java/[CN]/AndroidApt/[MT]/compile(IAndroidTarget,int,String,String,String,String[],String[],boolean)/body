{
  final String packageFolderOsPath=FileUtil.toSystemDependentName(outDirOsPath + '/' + aPackage.replace('.','/'));
  final File manifestJavaFile=new File(packageFolderOsPath + File.separatorChar + AndroidUtils.MANIFEST_JAVA_FILE_NAME);
  if (manifestJavaFile.exists()) {
    if (!manifestJavaFile.delete()) {
      LOG.error("Unable to delete " + manifestJavaFile.getPath());
    }
  }
  final File rJavaFile=new File(packageFolderOsPath + File.separatorChar + AndroidUtils.R_JAVA_FILENAME);
  if (rJavaFile.exists()) {
    if (!rJavaFile.delete()) {
      LOG.error("Unable to delete " + rJavaFile.getPath());
    }
  }
  for (  String libPackage : libPackages) {
    final String libPackageFolderOsPath=FileUtil.toSystemDependentName(outDirOsPath + '/' + libPackage.replace('.','/'));
    final File libRJavaFile=new File(libPackageFolderOsPath + File.separatorChar + AndroidUtils.R_JAVA_FILENAME);
    if (libRJavaFile.exists()) {
      if (!libRJavaFile.delete()) {
        LOG.error("Unable to delete " + libRJavaFile.getPath());
      }
    }
  }
  if (platformToolsRevision < 0 || platformToolsRevision > 7) {
    return doCompile(target,manifestFileOsPath,outDirOsPath,resourceDirsOsPaths,libPackages,null,isLibrary);
  }
 else {
    final Map<CompilerMessageCategory,List<String>> fullMap=new HashMap<CompilerMessageCategory,List<String>>();
    Map<CompilerMessageCategory,List<String>> map;
    map=doCompile(target,manifestFileOsPath,outDirOsPath,resourceDirsOsPaths,ArrayUtil.EMPTY_STRING_ARRAY,null,false);
    AndroidCompileUtil.addMessages(fullMap,map);
    for (    String libPackage : libPackages) {
      map=doCompile(target,manifestFileOsPath,outDirOsPath,resourceDirsOsPaths,ArrayUtil.EMPTY_STRING_ARRAY,libPackage,false);
      AndroidCompileUtil.addMessages(fullMap,map);
    }
    return map;
  }
}
