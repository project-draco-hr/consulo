{
  if (e.getKeyCode() == KeyEvent.VK_SHIFT) {
    if (e.getID() == KeyEvent.KEY_PRESSED) {
      if ((myCurrentProcessor != null && myCurrentProcessor.isDragActive()) || (PaletteManager.getInstance(myEditor.getProject()).getActiveItem(ComponentItem.class) != null && myCurrentProcessor != myInsertComponentProcessor)) {
        myEditor.setDesignTimeInsets(12);
      }
    }
 else {
      myEditor.setDesignTimeInsets(2);
    }
  }
  if (myCurrentProcessor != null) {
    myCurrentProcessor.processKeyEvent(e);
  }
 else   if (e.getID() == KeyEvent.KEY_PRESSED && Character.isLetterOrDigit(e.getKeyChar()) && (e.getModifiers() & (KeyEvent.ALT_MASK | KeyEvent.CTRL_MASK)) == 0) {
    final ArrayList<RadComponent> selection=FormEditingUtil.getAllSelectedComponents(myEditor);
    if (selection.size() > 0) {
      final RadComponent component=selection.get(0);
      final InplaceEditingLayer inplaceLayer=myEditor.getInplaceEditingLayer();
      inplaceLayer.startInplaceEditing(component,component.getDefaultInplaceProperty(),component.getDefaultInplaceEditorBounds(),false);
      try {
        new Robot().keyPress(e.getKeyCode());
      }
 catch (      AWTException e1) {
        LOG.error(e1);
      }
    }
  }
}
