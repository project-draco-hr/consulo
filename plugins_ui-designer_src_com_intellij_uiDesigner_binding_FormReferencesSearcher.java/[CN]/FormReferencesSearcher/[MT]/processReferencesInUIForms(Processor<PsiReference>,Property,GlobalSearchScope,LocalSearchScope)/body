{
  final Project project=property.getProject();
  final GlobalSearchScope scope=GlobalSearchScope.projectScope(project).intersectWith(globalSearchScope);
  final PsiManagerImpl manager=(PsiManagerImpl)property.getManager();
  String name=ApplicationManager.getApplication().runReadAction(new Computable<String>(){
    @Override public String compute(){
      return property.getName();
    }
  }
);
  if (name == null)   return true;
  manager.startBatchFilesProcessingMode();
  try {
    CommonProcessors.CollectProcessor<VirtualFile> collector=new CommonProcessors.CollectProcessor<VirtualFile>(){
      @Override protected boolean accept(      VirtualFile virtualFile){
        return virtualFile.getFileType() == StdFileTypes.GUI_DESIGNER_FORM;
      }
    }
;
    ((PsiSearchHelperImpl)PsiSearchHelper.SERVICE.getInstance(project)).processFilesWithText(scope,UsageSearchContext.IN_PLAIN_TEXT,true,name,collector,null);
    for (    final VirtualFile vfile : collector.getResults()) {
      ProgressManager.checkCanceled();
      PsiFile file=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile>(){
        @Override public PsiFile compute(){
          return PsiManager.getInstance(project).findFile(vfile);
        }
      }
);
      if (!processReferences(processor,file,name,property,filterScope))       return false;
    }
  }
  finally {
    manager.finishBatchFilesProcessingMode();
  }
  return true;
}
