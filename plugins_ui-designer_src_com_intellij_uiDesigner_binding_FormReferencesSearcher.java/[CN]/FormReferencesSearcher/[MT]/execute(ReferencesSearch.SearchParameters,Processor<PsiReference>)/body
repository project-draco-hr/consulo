{
  if (!scopeCanContainForms(p.getScope()))   return true;
  final PsiElement refElement=p.getElementToSearch();
  final PsiFile psiFile=ApplicationManager.getApplication().runReadAction(new Computable<PsiFile>(){
    public PsiFile compute(){
      if (!refElement.isValid())       return null;
      return refElement.getContainingFile();
    }
  }
);
  if (psiFile == null)   return true;
  final VirtualFile virtualFile=psiFile.getVirtualFile();
  if (virtualFile == null)   return true;
  Module module=ProjectRootManager.getInstance(refElement.getProject()).getFileIndex().getModuleForFile(virtualFile);
  if (module == null)   return true;
  final GlobalSearchScope scope=GlobalSearchScope.moduleWithDependenciesScope(module);
  final LocalSearchScope filterScope=p.getScope() instanceof LocalSearchScope ? (LocalSearchScope)p.getScope() : null;
  if (refElement instanceof PsiPackage) {
  }
 else   if (refElement instanceof PsiClass) {
    if (!processReferencesInUIForms(consumer,(PsiClass)refElement,scope,filterScope))     return false;
  }
 else   if (refElement instanceof PsiEnumConstant) {
    if (!processReferencesInUIForms(consumer,(PsiEnumConstant)refElement,scope,filterScope))     return false;
  }
 else   if (refElement instanceof PsiField) {
    if (!processReferencesInUIForms(consumer,(PsiField)refElement,scope,filterScope))     return false;
  }
 else   if (refElement instanceof Property) {
    if (!processReferencesInUIForms(consumer,(Property)refElement,scope,filterScope))     return false;
  }
 else   if (refElement instanceof PropertiesFile) {
    if (!processReferencesInUIForms(consumer,(PropertiesFile)refElement,scope,filterScope))     return false;
  }
  return true;
}
