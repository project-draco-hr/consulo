{
  List<TextRange> toCheck=new ArrayList<TextRange>();
  int from=range.getStartOffset();
  int till;
  boolean addLast=true;
  Matcher matcher=toExclude.matcher(text.substring(range.getStartOffset(),range.getEndOffset()));
  while (matcher.find()) {
    TextRange found=matcherRange(range,matcher);
    till=found.getStartOffset() - 1;
    if (range.getEndOffset() - found.getEndOffset() < MIN_RANGE_LENGTH) {
      addLast=false;
    }
    if (!tooSmall(from,till)) {
      toCheck.add(new TextRange(from,till));
    }
    if (groupToInclude > 0) {
      TextRange contentFound=matcherRange(range,matcher,groupToInclude);
      if (tooSmall(contentFound.getEndOffset(),contentFound.getStartOffset())) {
        toCheck.add(new TextRange(contentFound.getStartOffset(),contentFound.getEndOffset()));
      }
    }
    from=found.getEndOffset();
  }
  till=range.getEndOffset();
  if (tooSmall(from,till)) {
    return null;
  }
  if (addLast) {
    toCheck.add(new TextRange(from,till));
  }
  return toCheck;
}
