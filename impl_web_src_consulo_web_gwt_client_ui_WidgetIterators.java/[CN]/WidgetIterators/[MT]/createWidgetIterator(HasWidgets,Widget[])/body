{
  return new Iterator<Widget>(){
    int index=-1, last=-1;
    boolean widgetsWasCopied=false;
    Widget[] widgets=contained;
{
      gotoNextIndex();
    }
    private void gotoNextIndex(){
      ++index;
      while (index < contained.length) {
        if (contained[index] != null) {
          return;
        }
        ++index;
      }
    }
    public boolean hasNext(){
      return (index < contained.length);
    }
    public Widget next(){
      if (!hasNext()) {
        throw new NoSuchElementException();
      }
      last=index;
      final Widget w=contained[index];
      gotoNextIndex();
      return w;
    }
    public void remove(){
      if (last < 0) {
        throw new IllegalStateException();
      }
      if (!widgetsWasCopied) {
        widgets=copyWidgetArray(widgets);
        widgetsWasCopied=true;
      }
      container.remove(contained[last]);
      last=-1;
    }
  }
;
}
