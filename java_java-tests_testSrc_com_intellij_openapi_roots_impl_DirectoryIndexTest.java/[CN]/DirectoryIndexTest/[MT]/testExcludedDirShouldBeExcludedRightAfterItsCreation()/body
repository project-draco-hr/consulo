{
  VirtualFile excluded=myModule1Dir.createChildDirectory(this,"excluded");
  VirtualFile projectOutput=myModule1Dir.createChildDirectory(this,"projectOutput");
  VirtualFile module2Output=myModule1Dir.createChildDirectory(this,"module2Output");
  VirtualFile module2TestOutput=myModule2Dir.createChildDirectory(this,"module2TestOutput");
  assertNotNull(myIndex.getInfoForDirectory(excluded));
  assertNotNull(myIndex.getInfoForDirectory(projectOutput));
  assertNotNull(myIndex.getInfoForDirectory(module2Output));
  assertNotNull(myIndex.getInfoForDirectory(module2TestOutput));
  getCompilerProjectExtension().setCompilerOutputUrl(projectOutput.getUrl());
  PsiTestUtil.addExcludedRoot(myModule,excluded);
  PsiTestUtil.setCompilerOutputPath(myModule2,module2Output.getUrl(),false);
  PsiTestUtil.setCompilerOutputPath(myModule2,module2TestOutput.getUrl(),true);
  PsiTestUtil.setExcludeCompileOutput(myModule2,true);
  assertNull(myIndex.getInfoForDirectory(excluded));
  assertNull(myIndex.getInfoForDirectory(projectOutput));
  assertNull(myIndex.getInfoForDirectory(module2Output));
  assertNull(myIndex.getInfoForDirectory(module2TestOutput));
  excluded.delete(this);
  projectOutput.delete(this);
  module2Output.delete(this);
  module2TestOutput.delete(this);
  final List<Boolean> isExcluded=new ArrayList<Boolean>();
  VirtualFileListener l=new VirtualFileAdapter(){
    @Override public void fileCreated(    VirtualFileEvent e){
      isExcluded.add(myIndex.getInfoForDirectory(e.getFile()) == null);
    }
  }
;
  VirtualFileManager.getInstance().addVirtualFileListener(l);
  try {
    excluded=myModule1Dir.createChildDirectory(this,excluded.getName());
    projectOutput=myModule1Dir.createChildDirectory(this,projectOutput.getName());
    module2Output=myModule1Dir.createChildDirectory(this,module2Output.getName());
    module2TestOutput=myModule2Dir.createChildDirectory(this,module2TestOutput.getName());
  }
  finally {
    VirtualFileManager.getInstance().removeVirtualFileListener(l);
  }
  assertNull(myIndex.getInfoForDirectory(excluded));
  assertNull(myIndex.getInfoForDirectory(projectOutput));
  assertNull(myIndex.getInfoForDirectory(module2Output));
  assertNull(myIndex.getInfoForDirectory(module2TestOutput));
  assertEquals(4,isExcluded.size());
  assertTrue(isExcluded.get(0));
  assertTrue(isExcluded.get(1));
  assertTrue(isExcluded.get(2));
  assertTrue(isExcluded.get(3));
}
