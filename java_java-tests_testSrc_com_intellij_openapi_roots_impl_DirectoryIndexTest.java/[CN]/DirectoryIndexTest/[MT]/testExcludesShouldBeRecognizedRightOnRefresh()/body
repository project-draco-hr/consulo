{
  final VirtualFile dir=myModule1Dir.createChildDirectory(this,"dir");
  final VirtualFile excluded=dir.createChildDirectory(this,"excluded");
  PsiTestUtil.addExcludedRoot(myModule,excluded);
  new WriteCommandAction.Simple(getProject()){
    @Override protected void run() throws Throwable {
      dir.delete(DirectoryIndexTest.this);
    }
  }
.execute().throwException();
  boolean created=new File(myModule1Dir.getPath(),"dir/excluded/foo").mkdirs();
  assertTrue(created);
  final List<Boolean> toAssert=new ArrayList<Boolean>();
  VirtualFileListener l=new VirtualFileAdapter(){
    @Override public void fileCreated(    VirtualFileEvent e){
      assertEquals("dir",e.getFileName());
      VirtualFile file=e.getFile();
      toAssert.add(myIndex.getInfoForDirectory(file) != null);
      toAssert.add(myIndex.getInfoForDirectory(file.findFileByRelativePath("excluded")) == null);
      toAssert.add(myIndex.getInfoForDirectory(file.findFileByRelativePath("excluded/foo")) == null);
    }
  }
;
  VirtualFileManager.getInstance().addVirtualFileListener(l);
  try {
    VirtualFileManager.getInstance().refresh(false);
  }
  finally {
    VirtualFileManager.getInstance().removeVirtualFileListener(l);
  }
  assertEquals(Arrays.asList(true,true,true),toAssert);
}
