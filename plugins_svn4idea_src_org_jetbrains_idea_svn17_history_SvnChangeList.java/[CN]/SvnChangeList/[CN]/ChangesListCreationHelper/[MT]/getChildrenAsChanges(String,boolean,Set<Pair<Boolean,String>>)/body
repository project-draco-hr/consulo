{
  final List<Change> result=new ArrayList<Change>();
  final SVNLogClient client=myVcs.createLogClient();
  final long revision=getRevision(isBefore);
  client.doList(myRepository.getLocation().appendPath(path,true),SVNRevision.create(revision),SVNRevision.create(revision),true,new ISVNDirEntryHandler(){
    public void handleDirEntry(    final SVNDirEntry dirEntry) throws SVNException {
      final String childPath=path + '/' + dirEntry.getRelativePath();
      if (!duplicateControl.contains(new Pair<Boolean,String>(isBefore,childPath))) {
        final ContentRevision contentRevision=createRevision(childPath,isBefore,SVNNodeKind.DIR.equals(dirEntry.getKind()));
        result.add(new Change(isBefore ? contentRevision : null,isBefore ? null : contentRevision));
      }
    }
  }
);
  return result;
}
