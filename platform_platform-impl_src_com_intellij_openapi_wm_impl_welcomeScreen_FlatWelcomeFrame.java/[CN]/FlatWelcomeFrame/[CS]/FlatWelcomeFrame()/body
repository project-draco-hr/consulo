{
  final JRootPane rootPane=getRootPane();
  myScreen=new FlatWelcomeScreen();
  final IdeGlassPaneImpl glassPane=new IdeGlassPaneImpl(rootPane);
  setGlassPane(glassPane);
  glassPane.setVisible(false);
  setContentPane(myScreen.getWelcomePanel());
  setTitle(getWelcomeFrameTitle());
  AppUIUtil.updateWindowIcon(this);
  final int width=RecentProjectsManager.getInstance().getRecentProjectsActions(false).length == 0 ? 666 : 777;
  setSize(JBUI.size(width,460));
  setResizable(false);
  Point location=DimensionService.getInstance().getLocation(WelcomeFrame.DIMENSION_KEY,null);
  Rectangle screenBounds=ScreenUtil.getScreenRectangle(location != null ? location : new Point(0,0));
  setLocation(new Point(screenBounds.x + (screenBounds.width - getWidth()) / 2,screenBounds.y + (screenBounds.height - getHeight()) / 3));
  ProjectManager.getInstance().addProjectManagerListener(new ProjectManagerAdapter(){
    @Override public void projectOpened(    Project project){
      dispose();
    }
  }
);
  if (NotificationsManagerImpl.newEnabled()) {
    myBalloonLayout=new WelcomeBalloonLayoutImpl(rootPane,JBUI.insets(8),myScreen.myEventListener,myScreen.myEventLocation);
  }
 else {
    myBalloonLayout=new BalloonLayoutImpl(rootPane,JBUI.insets(8));
  }
  WelcomeFrame.setupCloseAction(this);
  MnemonicHelper.init(this);
  Disposer.register(ApplicationManager.getApplication(),new Disposable(){
    @Override public void dispose(){
      FlatWelcomeFrame.this.dispose();
    }
  }
);
}
