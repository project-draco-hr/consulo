{
  super(new BorderLayout());
  mySlidingPanel.add("root",this);
  setBackground(getMainBackground());
  if (RecentProjectsManager.getInstance().getRecentProjectsActions(false,isUseProjectGroups()).length > 0) {
    final JComponent recentProjects=createRecentProjects();
    add(recentProjects,BorderLayout.WEST);
    final JList projectsList=UIUtil.findComponentOfType(recentProjects,JList.class);
    if (projectsList != null) {
      projectsList.getModel().addListDataListener(new ListDataListener(){
        @Override public void intervalAdded(        ListDataEvent e){
        }
        @Override public void intervalRemoved(        ListDataEvent e){
          removeIfNeeded();
        }
        private void removeIfNeeded(){
          if (RecentProjectsManager.getInstance().getRecentProjectsActions(false,isUseProjectGroups()).length == 0) {
            FlatWelcomeScreen.this.remove(recentProjects);
            FlatWelcomeScreen.this.revalidate();
            FlatWelcomeScreen.this.repaint();
          }
        }
        @Override public void contentsChanged(        ListDataEvent e){
          removeIfNeeded();
        }
      }
);
      projectsList.addFocusListener(new FocusListener(){
        @Override public void focusGained(        FocusEvent e){
          projectsList.repaint();
        }
        @Override public void focusLost(        FocusEvent e){
          projectsList.repaint();
        }
      }
);
    }
  }
  add(createBody(),BorderLayout.CENTER);
}
