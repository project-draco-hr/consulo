{
  PsiType type=myCalculatedTypes.get(element);
  if (type == null) {
    try {
      boolean locked=lock(element);
      type=calculator.fun(element);
      if (type == null) {
        type=PsiType.NULL;
      }
      if (locked) {
        final PsiType alreadyInferred=myCalculatedTypes.get(element);
        if (alreadyInferred != null) {
          type=alreadyInferred;
        }
      }
 else {
        type=ConcurrencyUtil.cacheOrGet(myCalculatedTypes,element,type);
      }
    }
  finally {
      unlock(element);
    }
  }
  if (!type.isValid()) {
    LOG.error("Type is invalid: " + type + "; element: "+ element+ " of class "+ element.getClass());
  }
  return PsiType.NULL.equals(type) ? null : type;
}
