{
  if (aClass.isInterface() || aClass.isAnnotationType()) {
    return;
  }
  if (SerializationUtils.isSerializable(aClass)) {
    return;
  }
  final PsiMethod[] methods=aClass.getMethods();
  boolean hasReadObject=false;
  boolean hasWriteObject=false;
  for (int i=0; i < methods.length; i++) {
    final PsiMethod method=methods[i];
    if (SerializationUtils.isReadObject(method)) {
      hasReadObject=true;
    }
 else     if (SerializationUtils.isWriteObject(method)) {
      hasWriteObject=true;
    }
  }
  if (!hasWriteObject && !hasReadObject) {
    return;
  }
  registerClassError(aClass);
}
