{
  GrTypeElement typeElement=variableDeclaration.getTypeElementGroovy();
  final GrModifierList modifierList=variableDeclaration.getModifierList();
  final PsiNameHelper nameHelper=JavaPsiFacade.getInstance(variableDeclaration.getProject()).getNameHelper();
  for (  final GrVariable variable : variableDeclaration.getVariables()) {
    String name=variable.getName();
    if (!nameHelper.isIdentifier(name)) {
      continue;
    }
    ModifierListGenerator.writeModifiers(text,modifierList,ModifierListGenerator.JAVA_MODIFIERS,false);
    PsiType declaredType=typeElement == null ? PsiType.getJavaLangObject(variable.getManager(),variable.getResolveScope()) : typeElement.getType();
    final String initializer=GroovyToJavaGenerator.getDefaultValueText(declaredType.getCanonicalText());
    writeType(text,declaredType,variableDeclaration,classNameProvider);
    text.append(" ").append(name).append(" = ").append(initializer);
    text.append(";\n");
  }
}
