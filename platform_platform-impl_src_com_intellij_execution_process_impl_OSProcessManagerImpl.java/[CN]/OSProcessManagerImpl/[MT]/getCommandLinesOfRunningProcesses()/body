{
  try {
    if (SystemInfo.isWindows) {
      List<String> commandLines=new ArrayList<String>();
      Iterable<WinProcess> processes=WinProcess.all();
      for (      WinProcess process : processes) {
        try {
          commandLines.add(process.getCommandLine());
        }
 catch (        WinpException ignored) {
        }
      }
      return commandLines;
    }
 else {
      String[] cmd=UnixProcessManager.getPSCmd(true);
      Process process=Runtime.getRuntime().exec(cmd);
      List<String> outputLines=readLines(process.getInputStream(),false);
      List<String> errorLines=readLines(process.getErrorStream(),false);
      if (!errorLines.isEmpty()) {
        throw new IOException(Arrays.toString(cmd) + " failed: " + StringUtil.join(errorLines,"\n"));
      }
      return outputLines.subList(1,outputLines.size());
    }
  }
 catch (  Throwable e) {
    LOG.info("Cannot collect command lines");
    LOG.info(e);
    return null;
  }
}
