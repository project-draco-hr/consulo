{
  final String shortName=tool.getShortName();
  final HighlightDisplayKey key=HighlightDisplayKey.find(shortName);
  if (key == null) {
    HighlightDisplayKey.register(shortName);
  }
  globalContext.getTools().put(tool.getShortName(),new ToolsImpl(tool,tool.getDefaultLevel(),true));
  tool.initialize(globalContext);
  ((RefManagerImpl)globalContext.getRefManager()).initializeAnnotators();
  if (tool.isGraphNeeded()) {
    ((RefManagerImpl)tool.getRefManager()).findAllDeclarations();
  }
  tool.runInspection(scope,inspectionManager);
  if (tool instanceof LocalInspectionToolWrapper) {
    scope.accept(new PsiRecursiveElementVisitor(){
      @Override public void visitElement(      PsiElement element){
        InjectedLanguageUtil.enumerate(element,new PsiLanguageInjectionHost.InjectedPsiVisitor(){
          public void visit(          @NotNull PsiFile injectedPsi,          @NotNull List<PsiLanguageInjectionHost.Shred> places){
            tool.runInspection(new AnalysisScope(injectedPsi),inspectionManager);
          }
        }
);
        super.visitElement(element);
      }
    }
);
  }
  tool.queryExternalUsagesRequests(inspectionManager);
}
