{
  Object descriptor=((PluginTable)table).getObjectAt(row);
  setForeground(Color.black);
  if (column == 0) {
    if (descriptor instanceof IdeaPluginDescriptorImpl) {
      final IdeaPluginDescriptorImpl ideaPluginDescriptor=(IdeaPluginDescriptorImpl)descriptor;
      if (ideaPluginDescriptor.isDeleted()) {
        setIcon(null);
      }
 else       if (InstalledPluginsTableModel.hasNewerVersion(ideaPluginDescriptor.getPluginId())) {
        setIcon(IconLoader.getIcon("/nodes/pluginobsolete.png"));
      }
 else {
        setIcon(IconLoader.getIcon("/nodes/plugin.png"));
      }
    }
 else {
      setIcon(IconLoader.getIcon("/nodes/pluginnotinstalled.png"));
    }
  }
  if (!isSelected) {
    if (column == 1) {
      setHorizontalAlignment(SwingConstants.RIGHT);
    }
    if (descriptor instanceof IdeaPluginDescriptorImpl) {
      final IdeaPluginDescriptorImpl ideaPluginDescriptor=(IdeaPluginDescriptorImpl)descriptor;
      setEnabled(!ideaPluginDescriptor.isDeleted());
      if (ideaPluginDescriptor.isDeleted()) {
        setForeground(Color.lightGray);
      }
      if (InstalledPluginsTableModel.hasNewerVersion(ideaPluginDescriptor.getPluginId())) {
        setForeground(Color.blue);
      }
    }
 else     if (descriptor instanceof PluginNode) {
      final PluginNode pluginNode=(PluginNode)descriptor;
      if (pluginNode.getStatus() == PluginNode.STATUS_DOWNLOADED) {
        setForeground(Color.blue);
      }
    }
  }
  return super.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
}
