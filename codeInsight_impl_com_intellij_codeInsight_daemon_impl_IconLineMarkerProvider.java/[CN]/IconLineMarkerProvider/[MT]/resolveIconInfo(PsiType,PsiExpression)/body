{
  if (initializer != null && isIconClassType(type)) {
    final List<FileReference> refs=new ArrayList<FileReference>();
    initializer.accept(new JavaRecursiveElementWalkingVisitor(){
      @Override public void visitElement(      PsiElement element){
        if (element instanceof PsiLiteralExpression) {
          for (          PsiReference ref : element.getReferences()) {
            if (ref instanceof FileReference) {
              refs.add((FileReference)ref);
            }
          }
        }
        super.visitElement(element);
      }
    }
);
    for (    FileReference ref : refs) {
      final PsiFileSystemItem psiFileSystemItem=ref.resolve();
      VirtualFile file=null;
      if (psiFileSystemItem == null) {
        final ResolveResult[] results=ref.multiResolve(false);
        for (        ResolveResult result : results) {
          final PsiElement element=result.getElement();
          if (element instanceof PsiBinaryFile) {
            file=((PsiFile)element).getVirtualFile();
            break;
          }
        }
      }
 else {
        file=psiFileSystemItem.getVirtualFile();
      }
      if (file == null || file.isDirectory() || !isIconFileExtension(file.getExtension()))       continue;
      final Icon icon=getIcon(file);
      if (icon != null) {
        final GutterIconNavigationHandler<PsiElement> navHandler=new GutterIconNavigationHandler<PsiElement>(){
          public void navigate(          MouseEvent e,          PsiElement elt){
            psiFileSystemItem.navigate(true);
          }
        }
;
        return new LineMarkerInfo<PsiElement>(initializer,initializer.getTextRange(),icon,Pass.UPDATE_ALL,null,navHandler,GutterIconRenderer.Alignment.LEFT);
      }
    }
  }
  return null;
}
