{
  myOptions=options;
  myPage=page;
  String text=page.getDemoText();
  HighlightsExtractor extractant2=new HighlightsExtractor(page.getAdditionalHighlightingTagToDescriptorMap());
  myHighlightData=extractant2.extractHighlights(text);
  myEditor=(EditorEx)createEditor(extractant2.cutDefinedTags(text),10,3,-1);
  ErrorStripeRenderer renderer=new TrafficLightRenderer(null,null,null,null){
    protected DaemonCodeAnalyzerStatus getDaemonCodeAnalyzerStatus(    boolean fillErrorsCount){
      DaemonCodeAnalyzerStatus status=new DaemonCodeAnalyzerStatus();
      status.errorAnalyzingFinished=true;
      status.passStati=new ArrayList<DaemonCodeAnalyzerStatus.PassStatus>();
      status.errorCount=new int[]{1,2};
      return status;
    }
  }
;
  ((EditorMarkupModel)myEditor.getMarkupModel()).setErrorStripeRenderer(renderer);
  ((EditorMarkupModel)myEditor.getMarkupModel()).setErrorStripeVisible(true);
  myBlinkingAlarm=new Alarm().setActivationComponent(myEditor.getComponent());
  addMouseMotionListener(myEditor,page.getHighlighter(),myHighlightData,false);
  CaretListener listener=new CaretListener(){
    public void caretPositionChanged(    CaretEvent e){
      navigate(myEditor,true,e.getNewPosition(),page.getHighlighter(),myHighlightData,false);
    }
  }
;
  myEditor.getCaretModel().addCaretListener(listener);
}
