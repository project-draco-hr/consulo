{
class StopIterationException extends RuntimeException {
  }
  try {
    VfsUtilCore.visitChildrenRecursively(myRoot,new VirtualFileVisitor(false){
      @Override public void afterChildrenVisited(      @NotNull VirtualFile file){
        if (myDirectoryFilter != null) {
          myDirectoryFilter.afterChildrenVisited(file);
        }
      }
      @Override public boolean visitFile(      @NotNull VirtualFile file){
        if (isExcluded(myExcludedFileIndex,file))         return false;
        if (myRootPresentFilter != null && !myRootPresentFilter.accept(file))         return false;
        if (myProject.isDisposed() || !process(file))         throw new StopIterationException();
        if (myDirectoryFilter != null && file.isDirectory() && !myDirectoryFilter.shouldGoIntoDirectory(file))         return false;
        return true;
      }
    }
);
  }
 catch (  StopIterationException e) {
  }
}
