{
  final JavacFileManager fileManager=new JavacFileManager(new FileManagerContext(outConsumer));
  if (!fileManager.setLocation(StandardLocation.CLASS_OUTPUT,Collections.singleton(outputDir))) {
    return false;
  }
  final LineOutputWriter out=new LineOutputWriter(){
    protected void lineAvailable(    String line){
      outConsumer.outputLineAvailable(line);
    }
  }
;
  final List<String> _options=new ArrayList<String>();
  boolean skip=false;
  for (  String option : options) {
    if ("-d".equals(option)) {
      skip=true;
      continue;
    }
    if (!skip) {
      _options.add(option);
    }
    skip=false;
  }
  final JavaCompiler.CompilationTask task=myCompiler.getTask(out,fileManager,outConsumer,_options,null,fileManager.toJavaFileObjects(sources));
  return task.call();
}
