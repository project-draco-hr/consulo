{
  super.visitMethodCallExpression(call);
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  final String methodName=methodExpression.getReferenceName();
  if (!STARTS_WITH_METHOD.equals(methodName) && !ENDS_WITH_METHOD.equals(methodName)) {
    return;
  }
  final PsiExpressionList argumentList=call.getArgumentList();
  if (argumentList == null) {
    return;
  }
  final PsiExpression[] args=argumentList.getExpressions();
  if (args.length != 1 && args.length != 2) {
    return;
  }
  if (!isSingleCharacterStringLiteral(args[0])) {
    return;
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier == null) {
    return;
  }
  final PsiType type=qualifier.getType();
  if (!TypeUtils.isJavaLangString(type)) {
    return;
  }
  registerMethodCallError(call);
}
