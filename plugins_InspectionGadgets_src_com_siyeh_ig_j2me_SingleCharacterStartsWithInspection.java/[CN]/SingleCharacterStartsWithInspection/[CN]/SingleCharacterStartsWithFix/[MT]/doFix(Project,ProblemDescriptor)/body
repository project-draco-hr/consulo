{
  final PsiElement element=descriptor.getPsiElement();
  final PsiReferenceExpression methodExpression=(PsiReferenceExpression)element.getParent();
  final PsiMethodCallExpression methodCall=(PsiMethodCallExpression)methodExpression.getParent();
  final PsiElement qualifier=methodExpression.getQualifier();
  final PsiExpressionList argumentList=methodCall.getArgumentList();
  final PsiExpression[] expressions=argumentList.getExpressions();
  final PsiExpression expression=expressions[0];
  final String expressionText=expression.getText();
  final String character=expressionText.substring(1,expressionText.length() - 1);
  if (qualifier == null) {
    return;
  }
  final String qualifierText=qualifier.getText();
  @NonNls final String newExpression;
  final String referenceName=methodExpression.getReferenceName();
  if (HardcodedMethodConstants.STARTS_WITH.equals(referenceName)) {
    newExpression=qualifierText + ".length() > 0 && " + qualifierText+ ".charAt(0) == '"+ character+ '\'';
  }
 else {
    newExpression=qualifierText + ".length() > 0 && " + qualifierText+ ".charAt("+ qualifierText+ ".length() - 1) == '"+ character+ '\'';
  }
  replaceExpression(methodCall,newExpression);
}
