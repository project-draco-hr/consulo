{
  if (block == null) {
    if (myLastTokenBlock.isIncomplete()) {
      return myLastTokenBlock;
    }
 else {
      return null;
    }
  }
  AbstractBlockWrapper current=block;
  while (current.getParent() != null && current.getParent().getStartOffset() > offset) {
    current=current.getParent();
  }
  if (current.getParent() == null)   return null;
  if (current.getEndOffset() <= offset) {
    while (!current.isIncomplete() && current.getParent() != null && current.getParent().getEndOffset() <= offset) {
      current=current.getParent();
    }
    if (current.isIncomplete())     return current;
  }
  if (current.getParent() == null)   return null;
  final List<AbstractBlockWrapper> subBlocks=((CompositeBlockWrapper)current.getParent()).getChildren();
  final int index=subBlocks.indexOf(current);
  if (index < 0) {
    LOG.assertTrue(false);
  }
  if (index == 0)   return null;
  AbstractBlockWrapper currentResult=subBlocks.get(index - 1);
  if (!currentResult.isIncomplete())   return null;
  AbstractBlockWrapper lastChild=getLastChildOf(currentResult);
  while (lastChild != null && lastChild.isIncomplete()) {
    currentResult=lastChild;
    lastChild=getLastChildOf(currentResult);
  }
  return currentResult;
}
