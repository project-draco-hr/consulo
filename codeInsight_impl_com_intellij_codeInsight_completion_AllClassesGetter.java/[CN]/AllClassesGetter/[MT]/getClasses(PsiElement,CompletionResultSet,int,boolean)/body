{
  if (context == null || !context.isValid())   return;
  final String packagePrefix=getPackagePrefix(context,offset);
  final Set<String> qnames=new THashSet<String>();
  final GlobalSearchScope scope=filterByScope ? context.getContainingFile().getResolveScope() : GlobalSearchScope.allScope(context.getProject());
  final PrefixMatcher prefixMatcher=set.getPrefixMatcher();
  final boolean lookingForAnnotations=PsiJavaPatterns.psiElement().afterLeaf("@").accepts(context);
  AllClassesSearch.search(scope,context.getProject(),new Condition<String>(){
    public boolean value(    String s){
      return prefixMatcher.prefixMatches(s);
    }
  }
).forEach(new Processor<PsiClass>(){
    public boolean process(    PsiClass psiClass){
      if (isSuitable(context,packagePrefix,qnames,lookingForAnnotations,psiClass,filterByScope)) {
        set.addElement(createLookupItem(psiClass));
      }
      return true;
    }
  }
);
}
