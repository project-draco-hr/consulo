{
  super.visitReferenceExpression(expression);
  final PsiExpression qualifierExpression=expression.getQualifierExpression();
  if (qualifierExpression != null) {
    return;
  }
  final PsiReferenceParameterList parameterList=expression.getParameterList();
  if (parameterList == null) {
    return;
  }
  if (parameterList.getTypeArguments().length > 0) {
    return;
  }
  final PsiElement element=expression.resolve();
  if (!(element instanceof PsiField)) {
    return;
  }
  final PsiField field=(PsiField)element;
  if (field.hasModifierProperty(PsiModifier.STATIC)) {
    return;
  }
  final PsiClass containingClass=field.getContainingClass();
  if (containingClass instanceof PsiAnonymousClass) {
    return;
  }
  registerError(expression);
}
