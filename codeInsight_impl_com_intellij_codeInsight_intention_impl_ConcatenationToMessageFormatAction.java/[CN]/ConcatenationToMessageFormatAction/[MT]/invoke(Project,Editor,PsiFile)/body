{
  if (!CodeInsightUtil.prepareFileForWrite(file))   return;
  PsiBinaryExpression concatenation=getEnclosingConcatenation(file,editor);
  PsiManager manager=concatenation.getManager();
  StringBuffer formatString=new StringBuffer();
  List<PsiExpression> args=new ArrayList<PsiExpression>();
  ArrayList<PsiExpression> argsToCombine=new ArrayList<PsiExpression>();
  calculateFormatAndArguments(concatenation,formatString,args,argsToCombine,false);
  appendArgument(args,argsToCombine,formatString);
  PsiMethodCallExpression call=(PsiMethodCallExpression)manager.getElementFactory().createExpressionFromText("java.text.MessageFormat.format()",concatenation);
  PsiExpressionList argumentList=call.getArgumentList();
  String format=prepareString(formatString.toString());
  PsiExpression formatArgument=manager.getElementFactory().createExpressionFromText("\"" + format + "\"",null);
  argumentList.add(formatArgument);
  for (  PsiExpression arg : args) {
    argumentList.add(arg);
  }
  call=(PsiMethodCallExpression)manager.getCodeStyleManager().shortenClassReferences(call);
  call=(PsiMethodCallExpression)manager.getCodeStyleManager().reformat(call);
  concatenation.replace(call);
}
