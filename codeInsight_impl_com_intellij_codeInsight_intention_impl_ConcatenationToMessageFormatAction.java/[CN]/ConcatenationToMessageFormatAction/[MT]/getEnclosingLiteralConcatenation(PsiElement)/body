{
  PsiBinaryExpression parent=PsiTreeUtil.getParentOfType(psiElement,PsiBinaryExpression.class,false,PsiMember.class);
  if (parent == null)   return null;
  PsiBinaryExpression concatenation=null;
  while (true) {
    if (!(parent.getLOperand() instanceof PsiLiteralExpression && ((PsiLiteralExpression)parent.getLOperand()).getValue() instanceof String) && !(parent.getROperand() instanceof PsiLiteralExpression && ((PsiLiteralExpression)parent.getROperand()).getValue() instanceof String))     return concatenation;
    if (parent.getOperationSign().getTokenType() != JavaTokenType.PLUS)     return concatenation;
    concatenation=parent;
    PsiElement element=concatenation.getParent();
    if (!(element instanceof PsiBinaryExpression))     return concatenation;
    parent=(PsiBinaryExpression)element;
  }
}
