{
  FilePath path=getSelectedFiles(context)[0];
  Project project=context.getProject();
  VirtualFile someVFile=path.getVirtualFile() != null ? path.getVirtualFile() : path.getVirtualFileParent();
  AbstractVcs activeVcs=ProjectLevelVcsManager.getInstance(project).getVcsFor(someVFile);
  VcsHistoryProvider vcsHistoryProvider=getProvider(activeVcs);
  try {
    VcsHistorySession session=vcsHistoryProvider.createSessionFor(path);
    List<VcsFileRevision> revisionsList=session.getRevisionList();
    if (revisionsList.isEmpty())     return;
    String actionName=VcsBundle.message("action.name.file.history",path.getName());
    ContentManager contentManager=ProjectLevelVcsManagerEx.getInstanceEx(project).getContentManager();
    FileHistoryPanelImpl fileHistoryPanel=new FileHistoryPanelImpl(project,path,session,activeVcs,contentManager);
    Content content=PeerFactory.getInstance().getContentFactory().createContent(fileHistoryPanel,actionName,true);
    ContentsUtil.addOrReplaceContent(contentManager,content,true);
    ToolWindow toolWindow=ToolWindowManager.getInstance(project).getToolWindow(ToolWindowId.VCS);
    toolWindow.activate(null);
  }
 catch (  Exception exception) {
    reportError(exception);
  }
}
