{
  JPanel panel=new JPanel(new BorderLayout());
  final MemberSelectionPanel memberSelectionPanel=new MemberSelectionPanel("Members to Form Superclass",myMemberInfos,"Make abstract");
  panel.add(memberSelectionPanel,BorderLayout.CENTER);
  final MemberInfoModel memberInfoModel=new UsesAndInterfacesDependencyMemberInfoModel(mySourceClass,null,false,myContainmentVerifier){
    public Boolean isFixedAbstract(    MemberInfo member){
      return Boolean.TRUE;
    }
  }
;
  memberInfoModel.memberInfoChanged(new MemberInfoChange(myMemberInfos));
  memberSelectionPanel.getTable().setMemberInfoModel(memberInfoModel);
  memberSelectionPanel.getTable().addMemberInfoChangeListener(memberInfoModel);
  myJavaDocPanel=new JavaDocPanel("JavaDoc for abstracts");
  myJavaDocPanel.setPolicy(RefactoringSettings.getInstance().EXTRACT_SUPERCLASS_JAVADOC);
  panel.add(myJavaDocPanel,BorderLayout.EAST);
  return panel;
}
