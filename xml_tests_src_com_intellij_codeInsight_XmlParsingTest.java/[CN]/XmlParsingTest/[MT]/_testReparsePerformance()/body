{
  final String text=loadFile("performance2.xml");
  final PsiFile file=createFile("test.xml",text);
  transformAllChildren(file.getNode());
  final Document doc=PsiDocumentManager.getInstance(getProject()).getDocument(file);
  System.gc();
  System.gc();
  new WriteCommandAction(getProject(),file){
    @Override protected void run(    final Result result) throws Throwable {
      PlatformTestUtil.startPerformanceTest("XML reparse using PsiBuilder",2500,new ThrowableRunnable(){
        @Override public void run() throws Exception {
          for (int i=0; i < 10; i++) {
            final long tm=System.currentTimeMillis();
            doc.insertString(0,"<additional root=\"tag\"/>");
            PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
            System.out.println("Reparsed for: " + (System.currentTimeMillis() - tm));
          }
        }
      }
).cpuBound().assertTiming();
    }
  }
.execute();
}
