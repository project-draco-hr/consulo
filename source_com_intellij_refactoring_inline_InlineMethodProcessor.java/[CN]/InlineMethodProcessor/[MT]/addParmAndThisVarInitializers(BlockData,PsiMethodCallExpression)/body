{
  PsiExpression[] args=methodCall.getArgumentList().getExpressions();
  for (int i=0; i < blockData.parmVars.length; i++) {
    if (i >= args.length)     break;
    blockData.parmVars[i].getInitializer().replace(args[i]);
  }
  if (blockData.thisVar != null) {
    PsiExpression qualifier=methodCall.getMethodExpression().getQualifierExpression();
    if (qualifier == null) {
      PsiElement parent=methodCall.getParent();
      while (true) {
        if (parent instanceof PsiClass)         break;
        if (parent instanceof PsiFile)         break;
        parent=parent.getParent();
      }
      if (parent instanceof PsiClass) {
        final PsiClass parentClass=(PsiClass)parent;
        final PsiClass containingClass=myMethod.getContainingClass();
        if (InheritanceUtil.isInheritorOrSelf(parentClass,containingClass,true)) {
          qualifier=myFactory.createExpressionFromText("this",null);
        }
 else {
          String name=containingClass.getName();
          if (name != null) {
            qualifier=myFactory.createExpressionFromText(name + ".this",null);
          }
 else {
            qualifier=myFactory.createExpressionFromText("this",null);
          }
        }
      }
 else {
        qualifier=myFactory.createExpressionFromText("this",null);
      }
    }
 else     if (qualifier instanceof PsiSuperExpression) {
      qualifier=myFactory.createExpressionFromText("this",null);
    }
    blockData.thisVar.getInitializer().replace(qualifier);
  }
}
