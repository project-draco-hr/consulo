{
  for (  ParameterTablePanel.VariableData data : myInputVariables) {
    final PsiElement element=reference.resolve();
    if (data.variable.equals(element)) {
      PsiType type=data.variable.getType();
      final PsiMethodCallExpression methodCallExpression=PsiTreeUtil.getParentOfType(reference,PsiMethodCallExpression.class);
      if (methodCallExpression != null) {
        int idx=ArrayUtil.find(methodCallExpression.getArgumentList().getExpressions(),reference);
        if (idx > -1) {
          final PsiMethod psiMethod=methodCallExpression.resolveMethod();
          if (psiMethod != null) {
            final PsiParameter[] parameters=psiMethod.getParameterList().getParameters();
            if (idx >= parameters.length) {
              idx=parameters.length - 1;
              if (idx >= 0) {
                type=parameters[idx].getType();
              }
            }
            if (type instanceof PsiEllipsisType) {
              type=((PsiEllipsisType)type).getComponentType();
            }
          }
        }
      }
      if (!myFoldingAvailable || !myFolding.annotateWithParameter(data,reference)) {
        reference.putUserData(DuplicatesFinder.PARAMETER,Pair.create(data.variable,type));
      }
    }
  }
}
