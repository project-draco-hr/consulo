{
  final List<File> outputDirectories=new ArrayList<File>(_outputDirectories);
  for (  Pair<IntermediateOutputCompiler,Module> pair : myGenerationCompilerModuleToOutputDirMap.keySet()) {
    outputDirectories.add(new File(CompilerPaths.getGenerationOutputPath(pair.getFirst(),pair.getSecond(),false)));
    outputDirectories.add(new File(CompilerPaths.getGenerationOutputPath(pair.getFirst(),pair.getSecond(),true)));
  }
  Collection<File> filesToDelete=new ArrayList<File>(outputDirectories.size() * 2);
  for (  File outputDirectory : outputDirectories) {
    File[] files=outputDirectory.listFiles();
    if (files != null) {
      filesToDelete.addAll(Arrays.asList(files));
    }
  }
  FileUtil.asyncDelete(filesToDelete);
  final List<File> createdFiles=new ArrayList<File>(outputDirectories.size());
  for (  final File file : outputDirectories) {
    if (file.mkdirs()) {
      createdFiles.add(file);
    }
  }
  CompilerUtil.refreshIOFiles(createdFiles);
}
