{
  CompileScope scope=originalScope;
  for (  final Pair<Compiler,Module> pair : myGenerationCompilerModuleToOutputDirMap.keySet()) {
    final VirtualFile outputDir=myGenerationCompilerModuleToOutputDirMap.get(pair);
    scope=new CompositeScope(scope,new FileSetCompileScope(new VirtualFile[]{outputDir},new Module[]{pair.getSecond()}));
  }
  final AdditionalCompileScopeProvider[] scopeProviders=Extensions.getExtensions(AdditionalCompileScopeProvider.EXTENSION_POINT_NAME);
  CompileScope baseScope=scope;
  for (  AdditionalCompileScopeProvider scopeProvider : scopeProviders) {
    final CompileScope additionalScope=scopeProvider.getAdditionalScope(baseScope);
    if (additionalScope != null) {
      scope=new CompositeScope(scope,additionalScope);
    }
  }
  return scope;
}
