{
  try {
    if (isRebuild) {
      deleteAll(context,outputDirectories);
      if (context.getMessageCount(CompilerMessageCategory.ERROR) > 0) {
        return ExitStatus.ERRORS;
      }
    }
    try {
      context.getProgressIndicator().pushState();
      if (!executeCompileTasks(context,true)) {
        return ExitStatus.CANCELLED;
      }
    }
  finally {
      context.getProgressIndicator().popState();
    }
    if (context.getMessageCount(CompilerMessageCategory.ERROR) > 0) {
      return ExitStatus.ERRORS;
    }
    if (!isRebuild) {
      context.getProgressIndicator().setText(CompilerBundle.message("progress.scanning.output"));
      myOutputFilesOnDisk=CompilerPathsEx.getOutputFiles(myProject);
    }
    boolean didSomething=false;
    final CompilerManager compilerManager=CompilerManager.getInstance(myProject);
    didSomething|=generateSources(compilerManager,context,forceCompile);
    if (myExitStatus != null) {
      return myExitStatus;
    }
    didSomething|=invokeFileProcessingCompilers(compilerManager,context,SourceInstrumentingCompiler.class,myProcessingCompilerAdapterFactory,forceCompile,true);
    if (myExitStatus != null) {
      return myExitStatus;
    }
    try {
      didSomething|=translate(context,compilerManager,forceCompile,isRebuild,trackDependencies,outputDirectories);
      if (myExitStatus != null) {
        return myExitStatus;
      }
      didSomething|=invokeFileProcessingCompilers(compilerManager,context,ClassInstrumentingCompiler.class,myProcessingCompilerAdapterFactory,isRebuild,false);
      if (myExitStatus != null) {
        return myExitStatus;
      }
      didSomething|=invokeFileProcessingCompilers(compilerManager,context,ClassPostProcessingCompiler.class,myProcessingCompilerAdapterFactory,isRebuild,false);
      if (myExitStatus != null) {
        return myExitStatus;
      }
      didSomething|=invokeFileProcessingCompilers(compilerManager,context,PackagingCompiler.class,myPackagingCompilerAdapterFactory,isRebuild,true);
      if (myExitStatus != null) {
        return myExitStatus;
      }
      didSomething|=invokeFileProcessingCompilers(compilerManager,context,Validator.class,myProcessingCompilerAdapterFactory,forceCompile,true);
      if (myExitStatus != null) {
        return myExitStatus;
      }
      buildJars(context);
    }
  finally {
      dropDependencyCache(context);
    }
    try {
      context.getProgressIndicator().pushState();
      if (!executeCompileTasks(context,false)) {
        return ExitStatus.CANCELLED;
      }
    }
  finally {
      context.getProgressIndicator().popState();
    }
    if (context.getMessageCount(CompilerMessageCategory.ERROR) > 0) {
      return ExitStatus.ERRORS;
    }
    if (!didSomething) {
      return ExitStatus.UP_TO_DATE;
    }
    return ExitStatus.SUCCESS;
  }
 catch (  ProcessCanceledException e) {
    return ExitStatus.CANCELLED;
  }
}
