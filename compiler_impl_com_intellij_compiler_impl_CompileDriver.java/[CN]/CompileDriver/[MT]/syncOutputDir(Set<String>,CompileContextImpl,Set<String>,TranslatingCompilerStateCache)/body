{
  DeleteHelper deleteHelper=new DeleteHelper(myProject);
  int total=toDelete.size();
  final DependencyCache dependencyCache=context.getDependencyCache();
  final boolean isTestMode=ApplicationManager.getApplication().isUnitTestMode();
  context.getProgressIndicator().pushState();
  try {
    context.getProgressIndicator().setText(CompilerBundle.message("progress.synchronizing.output.directory"));
    int current=0;
    boolean wereFilesDeleted=false;
    for (    final String outputPath : toDelete) {
      context.getProgressIndicator().setFraction(((double)(++current)) / total);
      if (deleteHelper.delete(outputPath)) {
        wereFilesDeleted=true;
        String qName=cache.getClassName(outputPath);
        if (qName != null) {
          final int id=dependencyCache.getSymbolTable().getId(qName);
          dependencyCache.addTraverseRoot(id);
          if (urlsWithSourceRemoved.contains(outputPath)) {
            dependencyCache.markSourceRemoved(id);
          }
        }
        if (isTestMode) {
          CompilerManagerImpl.addDeletedPath(outputPath);
        }
        cache.remove(outputPath);
      }
    }
    deleteHelper.finish();
    return wereFilesDeleted;
  }
  finally {
    context.getProgressIndicator().popState();
  }
}
