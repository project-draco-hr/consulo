{
  LOG.assertTrue(FileProcessingCompiler.class.isAssignableFrom(fileProcessingCompilerClass));
  boolean didSomething=false;
  final FileProcessingCompiler[] compilers=compilerManager.getCompilers(fileProcessingCompilerClass);
  if (compilers.length > 0) {
    try {
      for (      final FileProcessingCompiler compiler : compilers) {
        if (context.getProgressIndicator().isCanceled()) {
          throw new ExitException(ExitStatus.CANCELLED);
        }
        final boolean processedSomething=processFiles(factory.create(context,compiler),forceCompile,checkScope);
        dropInternalCache(compiler);
        if (context.getMessageCount(CompilerMessageCategory.ERROR) > 0) {
          throw new ExitException(ExitStatus.ERRORS);
        }
        didSomething|=processedSomething;
      }
    }
 catch (    ProcessCanceledException e) {
      throw e;
    }
catch (    Exception e) {
      context.addMessage(CompilerMessageCategory.ERROR,CompilerBundle.message("compiler.error.exception",e.getMessage()),null,-1,-1);
      LOG.error(e);
    }
  }
  return didSomething;
}
