{
  final LinkedHashSet<String> conflicts=new LinkedHashSet<String>();
  for (  final PsiMember member : membersToMove) {
    if (member instanceof PsiMethod) {
      PsiMethod method=(PsiMethod)member;
      if (hasMethod(targetClass,method)) {
        String message=RefactoringBundle.message("0.already.exists.in.the.target.class",ConflictsUtil.getDescription(method,false));
        message=ConflictsUtil.capitalize(message);
        conflicts.add(message);
      }
    }
 else     if (member instanceof PsiField) {
      PsiField field=(PsiField)member;
      if (hasField(targetClass,field)) {
        String message=RefactoringBundle.message("0.already.exists.in.the.target.class",ConflictsUtil.getDescription(field,false));
        message=ConflictsUtil.capitalize(message);
        conflicts.add(message);
      }
    }
  }
  return analyzeAccessibilityConflicts(membersToMove,targetClass,conflicts,newVisibility);
}
