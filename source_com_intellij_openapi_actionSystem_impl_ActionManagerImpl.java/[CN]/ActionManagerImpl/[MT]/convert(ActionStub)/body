{
synchronized (myLock) {
    LOG.assertTrue(myAction2Id.contains(stub));
    myAction2Id.remove(stub);
    LOG.assertTrue(myId2Action.contains(stub.getId()));
    AnAction action=(AnAction)myId2Action.remove(stub.getId());
    LOG.assertTrue(action != null);
    LOG.assertTrue(action.equals(stub));
    Object obj;
    String className=stub.getClassName();
    try {
      obj=Class.forName(className,true,stub.getLoader()).newInstance();
    }
 catch (    ClassNotFoundException e) {
      throw new IllegalStateException("class with name \"" + className + "\" not found");
    }
catch (    Exception e) {
      throw new IllegalStateException("cannot create class \"" + className + "\"");
    }
    if (!(obj instanceof AnAction)) {
      throw new IllegalStateException("class with name \"" + className + "\" should be instance of "+ AnAction.class.getName());
    }
    stub.initAction((AnAction)obj);
    ((AnAction)obj).getTemplatePresentation().setText(stub.getText());
    myId2Action.put(stub.getId(),obj);
    myAction2Id.put(obj,stub.getId());
    return (AnAction)obj;
  }
}
