{
  IElementType parentType=parent.getElementType();
  IElementType nodeType=node.getElementType();
  if (nodeType == JavaElementType.PARAMETER && parentType != JavaElementType.PARAMETER_LIST) {
    return true;
  }
  if (nodeType == JavaElementType.PARAMETER_LIST && parentType == JavaElementType.LAMBDA_EXPRESSION) {
    return true;
  }
  if (nodeType == JavaElementType.CODE_BLOCK && node instanceof TreeElement) {
    final Ref<Boolean> skip=Ref.create(true);
    ((TreeElement)node).acceptTree(new RecursiveTreeElementWalkingVisitor(){
      @Override protected void visitNode(      TreeElement element){
        if (BLOCK_ELEMENTS.contains(element.getElementType())) {
          skip.set(false);
          stopWalking();
          return;
        }
        super.visitNode(element);
      }
    }
);
    return skip.get();
  }
  return false;
}
