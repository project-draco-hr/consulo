{
  final Sdk jdk=JavaSdkImpl.getMockJdk17("java 1.4");
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      ProjectJdkTable.getInstance().addJdk(jdk);
    }
  }
);
  final ModuleRootManager rootManager=ModuleRootManager.getInstance(myModule);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final ProjectRootManagerEx rootManagerEx=ProjectRootManagerEx.getInstanceEx(myProject);
      rootManagerEx.setProjectJdkName(jdk.getName());
      final ModifiableRootModel rootModel=rootManager.getModifiableModel();
      rootModel.inheritSdk();
      rootModel.commit();
    }
  }
);
  assertTrue("JDK is inherited after explicit inheritSdk()",rootManager.isSdkInherited());
  assertEquals("Correct jdk inherited",jdk,rootManager.getSdk());
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final ModifiableRootModel rootModel=rootManager.getModifiableModel();
      rootModel.setSdk(null);
      rootModel.commit();
    }
  }
);
  assertFalse("JDK is not inherited after setJdk(null)",rootManager.isSdkInherited());
  assertNull("No JDK assigned",rootManager.getSdk());
  final Sdk jdk1=JavaSdkImpl.getMockJdk17("jjj");
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      ProjectJdkTable.getInstance().addJdk(jdk1);
    }
  }
);
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      final ModifiableRootModel rootModel=rootManager.getModifiableModel();
      rootModel.setSdk(jdk1);
      rootModel.commit();
    }
  }
);
  assertFalse("JDK is not inherited after setJdk(jdk1)",rootManager.isSdkInherited());
  assertEquals("jdk1 is assigned",jdk1,rootManager.getSdk());
}
