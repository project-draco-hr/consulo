{
  ArrangementSectionNode result=new ArrangementSectionNode(ApplicationBundle.message("arrangement.settings.section.groups"));
  String orderLabel=ApplicationBundle.message("arrangement.settings.label.order") + ":";
  for (  ArrangementGroupingType groupingType : ArrangementGroupingType.values()) {
    if (!settingsFilter.isEnabled(groupingType,null)) {
      continue;
    }
    final ArrangementCheckBoxNode<ArrangementGroupingType> groupingNode=new ArrangementCheckBoxNode<ArrangementGroupingType>(displayManager,groupingType);
    result.add(groupingNode);
    List<ArrangementEntryOrderType> supportedOrderTypes=new ArrayList<ArrangementEntryOrderType>();
    for (    ArrangementEntryOrderType orderType : ArrangementEntryOrderType.values()) {
      if (settingsFilter.isEnabled(groupingType,orderType)) {
        supportedOrderTypes.add(orderType);
      }
    }
    if (supportedOrderTypes.isEmpty()) {
      continue;
    }
    final ArrangementComboBoxNode<ArrangementEntryOrderType> orderTypeNode=new ArrangementComboBoxNode<ArrangementEntryOrderType>(displayManager,orderLabel,supportedOrderTypes);
    groupingNode.add(orderTypeNode);
    groupingNode.setChangeCallback(new Consumer<ArrangementCheckBoxNode<ArrangementGroupingType>>(){
      @Override public void consume(      ArrangementCheckBoxNode<ArrangementGroupingType> node){
        orderTypeNode.setEnabled(groupingNode.isSelected());
      }
    }
);
    groupingNode.setSelected(true);
  }
  return result;
}
