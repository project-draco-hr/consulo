{
  if (node instanceof ModuleGroupNode) {
    if (!recursively)     return null;
    @NonNls final String modulePattern="group:" + ((ModuleGroupNode)node).getModuleGroup().toString();
    return scope == FilePatternPackageSet.SCOPE_FILE ? new FilePatternPackageSet(modulePattern,"*//*") : new PatternPackageSet("*..*",scope,modulePattern);
  }
 else   if (node instanceof ModuleNode) {
    if (!recursively)     return null;
    final String modulePattern=((ModuleNode)node).getModuleName();
    return scope == FilePatternPackageSet.SCOPE_FILE ? new FilePatternPackageSet(modulePattern,"*//*") : new PatternPackageSet("*..*",scope,modulePattern);
  }
 else   if (node instanceof PackageNode) {
    String pattern=((PackageNode)node).getPackageQName();
    if (pattern != null) {
      pattern+=recursively ? "..*" : ".*";
    }
 else {
      pattern=recursively ? "*..*" : ".*";
    }
    return getPatternSet(node,pattern,scope);
  }
 else   if (node instanceof DirectoryNode) {
    String pattern=((DirectoryNode)node).getFQName();
    if (pattern != null) {
      if (pattern.length() > 0) {
        pattern+=recursively ? "/*" : "*";
      }
 else {
        pattern+=recursively ? "*/" : "*";
      }
    }
    return getPatternSet(node,pattern,scope);
  }
 else   if (node instanceof FileNode) {
    if (recursively)     return null;
    FileNode fNode=(FileNode)node;
    String fqName=fNode.getFQName(scope == FilePatternPackageSet.SCOPE_FILE);
    if (fqName != null)     return getPatternSet(node,fqName,scope);
  }
 else   if (node instanceof GeneralGroupNode) {
    return new PatternPackageSet("*..*",scope,null);
  }
  return null;
}
