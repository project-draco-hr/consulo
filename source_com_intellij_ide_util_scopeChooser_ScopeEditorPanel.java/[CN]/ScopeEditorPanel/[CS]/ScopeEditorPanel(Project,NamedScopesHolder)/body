{
  myProject=project;
  myHolder=holder;
  myButtonsPanel.add(createActionsPanel());
  myPackageTree=new Tree(new RootNode());
  myTreePanel.setLayout(new BorderLayout());
  myTreePanel.add(ScrollPaneFactory.createScrollPane(myPackageTree),BorderLayout.CENTER);
  myTreeToolbar.setLayout(new BorderLayout());
  myTreeToolbar.add(createTreeToolbar(),BorderLayout.WEST);
  myTreeExpansionMonitor=TreeExpansionMonitor.install(myPackageTree,myProject);
  myTreeMarker=new TreeModelBuilder.Marker(){
    public boolean isMarked(    PsiFile file){
      return myCurrentScope != null && myCurrentScope.contains(file,getHolder());
    }
  }
;
  myPatternField.getDocument().addDocumentListener(new DocumentAdapter(){
    public void textChanged(    DocumentEvent event){
      onTextChange();
    }
  }
);
  myPatternField.addCaretListener(new CaretListener(){
    public void caretUpdate(    CaretEvent e){
      myCaretPosition=e.getDot();
      updateCaretPositionText();
    }
  }
);
  myPatternField.addFocusListener(new FocusListener(){
    public void focusGained(    FocusEvent e){
      myCaretPositionLabel.setVisible(true);
    }
    public void focusLost(    FocusEvent e){
      myCaretPositionLabel.setVisible(false);
    }
  }
);
  initTree(myPackageTree);
}
