{
  RecentsManager.getInstance(myProject).registerRecentEntry(RECENT_KEYS,myTargetDirectoryField.getChildComponent().getText());
  RefactoringSettings.getInstance().MOVE_SEARCH_FOR_REFERENCES_FOR_FILE=myCbSearchForReferences.isSelected();
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    @Override public void run(){
      final Runnable action=new Runnable(){
        @Override public void run(){
          String directoryName=myTargetDirectoryField.getChildComponent().getText().replace(File.separatorChar,'/');
          try {
            myTargetDirectory=DirectoryUtil.mkdirs(PsiManager.getInstance(myProject),directoryName);
          }
 catch (          IncorrectOperationException e) {
          }
        }
      }
;
      ApplicationManager.getApplication().runWriteAction(action);
      if (myTargetDirectory == null) {
        CommonRefactoringUtil.showErrorMessage(getTitle(),RefactoringBundle.message("cannot.create.directory"),myHelpID,myProject);
        return;
      }
      myCallback.run(MoveFilesOrDirectoriesDialog.this);
    }
  }
,RefactoringBundle.message("move.title"),null);
}
