{
  JPanel panel=new JPanel(new GridBagLayout());
  final GridBagConstraints c=new GridBagConstraints();
  c.gridx=0;
  c.gridy=0;
  c.fill=GridBagConstraints.HORIZONTAL;
  c.insets=new Insets(0,2,0,0);
  myNameLabel=new JLabel();
  panel.add(myNameLabel,c);
  c.insets.top=10;
  c.gridy++;
  panel.add(new JLabel(RefactoringBundle.message("move.files.to.directory.label")),c);
  c.insets.top=0;
  myTargetDirectoryField=new ComponentWithBrowseButton<JTextField>(new JTextField(),null);
  final FileChooserDescriptor descriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
  myTargetDirectoryField.addBrowseFolderListener(RefactoringBundle.message("select.target.directory"),RefactoringBundle.message("the.file.will.be.moved.to.this.directory"),myProject,descriptor,TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT);
  final JTextField textField=myTargetDirectoryField.getChildComponent();
  FileChooserFactory.getInstance().installFileCompletion(textField,descriptor,true,getDisposable());
  myTargetDirectoryField.setTextFieldPreferredWidth(60);
  c.insets.left=0;
  c.gridy++;
  panel.add(myTargetDirectoryField,c);
  final JLabel label=new JLabel(RefactoringBundle.message("path.completion.shortcut"));
  UIUtil.applyStyle(UIUtil.ComponentStyle.MINI,label);
  c.insets.left=6;
  c.gridy++;
  panel.add(label,c);
  myCbSearchForReferences=new NonFocusableCheckBox(RefactoringBundle.message("search.for.references"));
  myCbSearchForReferences.setSelected(RefactoringSettings.getInstance().MOVE_SEARCH_FOR_REFERENCES_FOR_FILE);
  c.insets.top=10;
  c.insets.left=0;
  c.gridy++;
  panel.add(myCbSearchForReferences,c);
  textField.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override protected void textChanged(    DocumentEvent e){
      validateOKButton();
    }
  }
);
  Disposer.register(getDisposable(),myTargetDirectoryField);
  return panel;
}
