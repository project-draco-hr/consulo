{
  boolean hasStatements=false;
  PsiCodeBlock body=method.getBody();
  if (body != null) {
    PsiStatement[] statements=body.getStatements();
    for (    PsiStatement statement : statements) {
      boolean isCallToSameSuper=false;
      if (statement instanceof PsiExpressionStatement) {
        isCallToSameSuper=isCallToSuperMethod(((PsiExpressionStatement)statement).getExpression(),method);
      }
 else       if (statement instanceof PsiReturnStatement) {
        PsiExpression expression=((PsiReturnStatement)statement).getReturnValue();
        isCallToSameSuper=expression == null || isCallToSuperMethod(expression,method);
      }
      hasStatements=true;
      if (isCallToSameSuper)       continue;
      return false;
    }
  }
  if (hasStatements) {
    final PsiMethod[] superMethods=method.findSuperMethods();
    for (    PsiMethod superMethod : superMethods) {
      if (VisibilityUtil.compare(VisibilityUtil.getVisibilityModifier(superMethod.getModifierList()),VisibilityUtil.getVisibilityModifier(method.getModifierList())) > 0)       return false;
    }
  }
  return hasStatements;
}
