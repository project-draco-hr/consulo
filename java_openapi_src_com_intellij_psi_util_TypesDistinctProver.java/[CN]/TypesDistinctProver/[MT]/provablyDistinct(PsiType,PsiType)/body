{
  if (type1 instanceof PsiWildcardType) {
    if (type2 instanceof PsiWildcardType) {
      return provablyDistinct((PsiWildcardType)type1,(PsiWildcardType)type2);
    }
    if (type2 instanceof PsiCapturedWildcardType) {
      return provablyDistinct((PsiWildcardType)type1,((PsiCapturedWildcardType)type2).getWildcard());
    }
    if (type2 instanceof PsiClassType) {
      final PsiClass psiClass2=PsiUtil.resolveClassInType(type2);
      if (psiClass2 == null)       return false;
      if (((PsiWildcardType)type1).isExtends()) {
        final PsiType extendsBound=((PsiWildcardType)type1).getExtendsBound();
        if (extendsBound.getArrayDimensions() > 0)         return true;
        final PsiClass boundClass1=PsiUtil.resolveClassInType(TypeConversionUtil.erasure(extendsBound));
        if (boundClass1 == null)         return false;
        return proveExtendsBoundsDistinct(type1,type2,boundClass1,psiClass2);
      }
      if (((PsiWildcardType)type1).isSuper()) {
        final PsiType superBound=((PsiWildcardType)type1).getSuperBound();
        if (superBound.getArrayDimensions() > 0)         return true;
        final PsiClass boundClass1=PsiUtil.resolveClassInType(TypeConversionUtil.erasure(superBound));
        if (boundClass1 == null || boundClass1 instanceof PsiTypeParameter)         return false;
        return !boundClass1.isInheritor(psiClass2,true);
      }
      final PsiType bound=((PsiWildcardType)type1).getBound();
      return bound != null && !bound.equals(psiClass2);
    }
  }
  if (type1 instanceof PsiCapturedWildcardType)   return provablyDistinct(((PsiCapturedWildcardType)type1).getWildcard(),type2);
  if (type2 instanceof PsiWildcardType || type2 instanceof PsiCapturedWildcardType)   return provablyDistinct(type2,type1);
  if (type1 instanceof PsiClassType && ((PsiClassType)type1).resolve() instanceof PsiTypeParameter)   return false;
  if (type2 instanceof PsiClassType && ((PsiClassType)type2).resolve() instanceof PsiTypeParameter)   return false;
  return !type1.equals(type2);
}
