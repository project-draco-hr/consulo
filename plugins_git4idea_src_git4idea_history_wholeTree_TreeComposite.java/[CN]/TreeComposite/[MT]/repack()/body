{
  final BigArray<CompoundNumber> combinedList=new BigArray<CompoundNumber>(myPackSize2Power);
  final SmartList<BigArray<Integer>> backIndex=new SmartList<BigArray<Integer>>();
  for (int i=0; i < myMembers.size(); i++) {
    backIndex.add(new BigArray<Integer>(myPackSize2Power));
  }
  ReadonlyListsMerger.merge(myMembers,new Consumer<CompoundNumber>(){
    @Override public void consume(    final CompoundNumber compoundNumber){
      combinedList.add(compoundNumber);
      backIndex.get(compoundNumber.getMemberNumber()).add(compoundNumber.getIdx());
    }
  }
,myComparator);
synchronized (myLock) {
    myCombinedList=combinedList;
    myBackIndex=backIndex;
  }
}
