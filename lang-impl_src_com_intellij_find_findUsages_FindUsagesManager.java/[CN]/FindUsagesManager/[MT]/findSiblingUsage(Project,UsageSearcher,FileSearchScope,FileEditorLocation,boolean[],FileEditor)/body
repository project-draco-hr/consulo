{
  if (fileEditor.getUserData(KEY_START_USAGE_AGAIN) != null) {
    dir=dir == FileSearchScope.AFTER_CARET ? FileSearchScope.FROM_START : FileSearchScope.FROM_END;
  }
  final FileSearchScope direction=dir;
  final com.intellij.usages.UsageViewManager usageViewManager=com.intellij.usages.UsageViewManager.getInstance(project);
  usageViewManager.setCurrentSearchCancelled(false);
  final Usage[] foundUsage={null};
  usageSearcher.generate(new Processor<Usage>(){
    public boolean process(    Usage usage){
      if (usageViewManager.searchHasBeenCancelled())       return false;
      usagesWereFound[0]=true;
      if (direction == FileSearchScope.FROM_START) {
        foundUsage[0]=usage;
        return false;
      }
 else       if (direction == FileSearchScope.FROM_END) {
        foundUsage[0]=usage;
      }
 else       if (direction == FileSearchScope.AFTER_CARET) {
        if (Comparing.compare(usage.getLocation(),currentLocation) > 0) {
          foundUsage[0]=usage;
          return false;
        }
      }
 else       if (direction == FileSearchScope.BEFORE_CARET) {
        if (Comparing.compare(usage.getLocation(),currentLocation) < 0) {
          if (foundUsage[0] != null) {
            if (foundUsage[0].getLocation().compareTo(usage.getLocation()) < 0) {
              foundUsage[0]=usage;
            }
          }
 else {
            foundUsage[0]=usage;
          }
        }
 else {
          return false;
        }
      }
      return true;
    }
  }
);
  fileEditor.putUserData(KEY_START_USAGE_AGAIN,null);
  return foundUsage[0];
}
