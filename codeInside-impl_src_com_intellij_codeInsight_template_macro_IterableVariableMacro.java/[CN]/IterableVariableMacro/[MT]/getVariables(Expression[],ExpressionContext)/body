{
  if (params.length != 0)   return null;
  Project project=context.getProject();
  final int offset=context.getStartOffset();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  final ArrayList<PsiVariable> array=new ArrayList<PsiVariable>();
  PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());
  PsiElement place=file.findElementAt(offset);
  PsiVariable[] variables=MacroUtil.getVariablesVisibleAt(place,"");
  PsiType iterableType=PsiManager.getInstance(project).getElementFactory().createTypeByFQClassName("java.lang.Iterable",file.getResolveScope());
  for (  PsiVariable var : variables) {
    if (var.getParent() instanceof PsiForeachStatement && var.getParent() == PsiTreeUtil.getParentOfType(place,PsiForeachStatement.class)) {
      continue;
    }
    PsiType type=var.getType();
    if (type instanceof PsiArrayType || iterableType.isAssignableFrom(type)) {
      array.add(var);
    }
  }
  return array.toArray(new PsiVariable[array.size()]);
}
