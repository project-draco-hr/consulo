{
  super(new BorderLayout());
  myProject=project;
  myFileEditor=editor;
  myTreeModel=structureViewModel;
  myTreeModelWrapper=new TreeModelWrapper(myTreeModel,this);
  SmartTreeStructure treeStructure=new SmartTreeStructure(project,myTreeModelWrapper){
    public void rebuildTree(){
      storeState();
      super.rebuildTree();
      restoreState();
    }
  }
;
  JTree tree=new Tree(new DefaultTreeModel(new DefaultMutableTreeNode(treeStructure.getRootElement())));
  myAbstractTreeBuilder=new StructureTreeBuilder(project,tree,(DefaultTreeModel)tree.getModel(),treeStructure,myTreeModelWrapper);
  myAbstractTreeBuilder.updateFromRoot();
  Disposer.register(myProject,myAbstractTreeBuilder);
  add(new JScrollPane(myAbstractTreeBuilder.getTree()),BorderLayout.CENTER);
  myAbstractTreeBuilder.getTree().setCellRenderer(new NodeRenderer());
  myAutoScrollToSourceHandler=new MyAutoScrollToSourceHandler();
  myAutoScrollFromSourceHandler=new MyAutoScrollFromSourceHandler(myProject);
  JComponent toolbarComponent=ActionManager.getInstance().createActionToolbar(ActionPlaces.STRUCTURE_VIEW_TOOLBAR,createActionGroup(),true).getComponent();
  add(toolbarComponent,BorderLayout.NORTH);
  installTree();
  myCopyPasteDelegator=new CopyPasteManagerEx.CopyPasteDelegator(myProject,getTree()){
    protected PsiElement[] getSelectedElements(){
      return StructureViewComponent.this.getSelectedPsiElements();
    }
  }
;
}
