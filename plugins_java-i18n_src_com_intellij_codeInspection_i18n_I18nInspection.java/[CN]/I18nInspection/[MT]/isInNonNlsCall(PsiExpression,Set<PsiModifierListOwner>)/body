{
  expression=JavaI18nUtil.getToplevelExpression(expression);
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiExpressionList) {
    final PsiElement grParent=parent.getParent();
    if (grParent instanceof PsiMethodCallExpression) {
      return isNonNlsCall((PsiMethodCallExpression)grParent,nonNlsTargets);
    }
 else     if (grParent instanceof PsiNewExpression) {
      final PsiElement parentOfNew=grParent.getParent();
      if (parentOfNew instanceof PsiLocalVariable) {
        final PsiLocalVariable newVariable=(PsiLocalVariable)parentOfNew;
        if (annotatedAsNonNls(newVariable)) {
          return true;
        }
        nonNlsTargets.add(newVariable);
        return false;
      }
 else       if (parentOfNew instanceof PsiAssignmentExpression) {
        final PsiExpression lExpression=((PsiAssignmentExpression)parentOfNew).getLExpression();
        if (lExpression instanceof PsiReferenceExpression) {
          final PsiElement resolved=((PsiReferenceExpression)lExpression).resolve();
          if (resolved instanceof PsiModifierListOwner) {
            final PsiModifierListOwner modifierListOwner=(PsiModifierListOwner)resolved;
            if (annotatedAsNonNls(modifierListOwner)) {
              return true;
            }
            nonNlsTargets.add(modifierListOwner);
            return false;
          }
        }
      }
    }
  }
  return false;
}
