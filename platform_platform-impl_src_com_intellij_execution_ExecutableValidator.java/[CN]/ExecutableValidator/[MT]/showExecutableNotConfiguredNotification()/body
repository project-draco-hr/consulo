{
  if (ApplicationManager.getApplication().isUnitTestMode() || ApplicationManager.getApplication().isHeadlessEnvironment()) {
    return;
  }
  final String description=prepareDescription();
  final Notification newNotification=myNotificationGroup.createNotification("",description,NotificationType.ERROR,new NotificationListener(){
    public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      showSettingsAndExpireIfFixed(notification);
    }
  }
);
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      if (myNotification != null && !myNotification.isExpired()) {
        myNotification.expire();
      }
      myNotification=newNotification;
      Notifications.Bus.notify(myNotification,myProject.isDefault() ? null : myProject);
    }
  }
);
}
