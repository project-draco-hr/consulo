{
  if (elements.length == 1) {
    String name=ElementDescriptionUtil.getElementDescription(elements[0],DeleteNameDescriptionLocation.INSTANCE);
    String type=ElementDescriptionUtil.getElementDescription(elements[0],DeleteTypeDescriptionLocation.SINGULAR);
    return MessageFormat.format(messageTemplate,type + " \"" + name+ "\"");
  }
  FactoryMap<String,Integer> countMap=new FactoryMap<String,Integer>(){
    protected Integer create(    final String key){
      return 0;
    }
  }
;
  Map<String,String> pluralToSingular=new HashMap<String,String>();
  int directoryCount=0;
  String containerType=null;
  for (  final PsiElement elementToDelete : elements) {
    String type=ElementDescriptionUtil.getElementDescription(elementToDelete,DeleteTypeDescriptionLocation.PLURAL);
    pluralToSingular.put(type,ElementDescriptionUtil.getElementDescription(elementToDelete,DeleteTypeDescriptionLocation.SINGULAR));
    int oldCount=countMap.get(type).intValue();
    countMap.put(type,oldCount + 1);
    if (elementToDelete instanceof PsiDirectoryContainer) {
      containerType=type;
      directoryCount+=((PsiDirectoryContainer)elementToDelete).getDirectories().length;
    }
  }
  StringBuffer buffer=new StringBuffer();
  for (  Map.Entry<String,Integer> entry : countMap.entrySet()) {
    if (buffer.length() > 0) {
      if (buffer.length() > 0) {
        buffer.append(" ").append(IdeBundle.message("prompt.delete.and")).append(" ");
      }
    }
    final int count=entry.getValue().intValue();
    buffer.append(count).append(" ");
    if (count == 1) {
      buffer.append(pluralToSingular.get(entry.getKey()));
    }
 else {
      buffer.append(entry.getKey());
    }
    if (entry.getKey().equals(containerType)) {
      buffer.append(" ").append(IdeBundle.message("prompt.delete.directory.paren",directoryCount));
    }
  }
  return MessageFormat.format(messageTemplate,buffer.toString());
}
