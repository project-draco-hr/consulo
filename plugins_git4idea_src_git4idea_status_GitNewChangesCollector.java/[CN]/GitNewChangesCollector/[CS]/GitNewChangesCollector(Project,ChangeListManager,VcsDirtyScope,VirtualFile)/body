{
  super(project,changeListManager,dirtyScope,vcsRoot);
  Collection<FilePath> dirtyPaths=dirtyPaths(true);
  if (dirtyPaths.isEmpty()) {
    return;
  }
  GitSimpleHandler handler=new GitSimpleHandler(myProject,myVcsRoot,GitCommand.STATUS);
  final String[] params={"--porcelain","-z","--untracked-files=all"};
  handler.addParameters(params);
  handler.setNoSSH(true);
  handler.setSilent(true);
  handler.setStdoutSuppressed(true);
  handler.endOptions();
  handler.addRelativePaths(dirtyPaths);
  if (handler.isLargeCommandLine()) {
    handler=new GitSimpleHandler(myProject,myVcsRoot,GitCommand.STATUS);
    handler.addParameters(params);
    handler.setNoSSH(true);
    handler.setSilent(true);
    handler.setStdoutSuppressed(true);
    handler.endOptions();
  }
  String output=handler.run();
  parseOutput(output,handler);
}
