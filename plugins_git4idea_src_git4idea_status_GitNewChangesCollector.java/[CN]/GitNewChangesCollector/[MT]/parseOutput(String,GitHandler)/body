{
  VcsRevisionNumber head=getHead();
  final String[] split=output.split("\u0000");
  for (int pos=0; pos < split.length; pos++) {
    String line=split[pos];
    if (StringUtil.isEmptyOrSpaces(line)) {
      continue;
    }
    if (line.length() < 4) {
      throwGFE("Line is too short.",handler,output,line,'0','0');
    }
    final String xyStatus=line.substring(0,2);
    final String filepath=line.substring(3);
    final char xStatus=xyStatus.charAt(0);
    final char yStatus=xyStatus.charAt(1);
switch (xStatus) {
case ' ':
      if (yStatus == 'M') {
        reportModified(filepath,head);
      }
 else       if (yStatus == 'D') {
        reportDeleted(filepath,head);
      }
 else {
        throwYStatus(output,handler,line,xStatus,yStatus);
      }
    break;
case 'M':
  if (yStatus == ' ' || yStatus == 'M') {
    reportModified(filepath,head);
  }
 else   if (yStatus == 'D') {
    reportDeleted(filepath,head);
  }
 else {
    throwYStatus(output,handler,line,xStatus,yStatus);
  }
break;
case 'C':
pos+=1;
case 'A':
if (yStatus == 'M' || yStatus == ' ') {
reportAdded(filepath);
}
 else if (yStatus == 'D') {
}
 else if (yStatus == 'U' || yStatus == 'A') {
reportConflict(head,filepath);
}
 else {
throwYStatus(output,handler,line,xStatus,yStatus);
}
break;
case 'D':
if (yStatus == 'M' || yStatus == ' ') {
reportDeleted(filepath,head);
}
 else if (yStatus == 'U') {
reportConflict(head,filepath);
}
 else if (yStatus == 'D') {
}
 else {
throwYStatus(output,handler,line,xStatus,yStatus);
}
break;
case 'U':
if (yStatus == 'U' || yStatus == 'A' || yStatus == 'D') {
reportConflict(head,filepath);
}
 else {
throwYStatus(output,handler,line,xStatus,yStatus);
}
break;
case 'R':
pos+=1;
String oldFilename=split[pos];
if (yStatus == 'D') {
reportDeleted(filepath,head);
}
 else if (yStatus == ' ' || yStatus == 'M') {
reportRename(head,filepath,oldFilename);
}
 else {
throwYStatus(output,handler,line,xStatus,yStatus);
}
break;
case '?':
throwGFE("Unexpected unversioned file flag.",handler,output,line,xStatus,yStatus);
break;
case '!':
throwGFE("Unexpected ignored file flag.",handler,output,line,xStatus,yStatus);
default :
throwGFE("Unexpected symbol as xStatus.",handler,output,line,xStatus,yStatus);
}
}
}
