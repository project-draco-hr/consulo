{
  final GradleTaskNotificationListener progressManager=myNotificationListener.get();
  progressManager.onStart(id);
  ProjectConnection connection=getConnection(projectPath);
  ModelBuilder<? extends IdeaProject> modelBuilder=connection.model(downloadLibraries ? IdeaProject.class : BasicIdeaProject.class);
  modelBuilder.addProgressListener(new ProgressListener(){
    @Override public void statusChanged(    ProgressEvent event){
      progressManager.onStatusChange(new GradleTaskNotificationEvent(id,event.getDescription()));
    }
  }
);
  IdeaProject project=modelBuilder.get();
  progressManager.onEnd(id);
  GradleProject result=populateProject(project,projectPath);
  Map<String,Pair<GradleModule,IdeaModule>> modules=createModules(project,result);
  populateModules(modules.values(),result);
  myLibraryNamesMixer.mixNames(result.getLibraries());
  return result;
}
