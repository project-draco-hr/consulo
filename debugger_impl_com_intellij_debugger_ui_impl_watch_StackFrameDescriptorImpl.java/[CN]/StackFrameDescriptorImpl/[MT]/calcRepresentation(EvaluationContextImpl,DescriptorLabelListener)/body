{
  DebuggerManagerThreadImpl.assertIsManagerThread();
  ThreadsViewSettings settings=ThreadsViewSettings.getInstance();
  final StringBuilder label=StringBuilderSpinAllocator.alloc();
  try {
    Location location=myFrame.location();
    Method method=location.method();
    if (method != null) {
      myName=method.name();
      label.append(myName);
      label.append("()");
    }
    if (settings.SHOW_LINE_NUMBER) {
      String lineNumber=null;
      try {
        lineNumber=Integer.toString(location.lineNumber());
      }
 catch (      InternalError e) {
        lineNumber=e.toString();
      }
      if (lineNumber != null) {
        label.append(':');
        label.append(lineNumber);
      }
    }
    if (settings.SHOW_CLASS_NAME) {
      String name=null;
      try {
        ReferenceType refType=location.declaringType();
        name=refType != null ? refType.name() : null;
      }
 catch (      InternalError e) {
        name=e.toString();
      }
      if (name != null) {
        label.append(", ");
        int dotIndex=name.lastIndexOf('.');
        if (dotIndex < 0) {
          label.append(name);
        }
 else {
          label.append(name.substring(dotIndex + 1));
          label.append(" {");
          label.append(name.substring(0,dotIndex));
          label.append("}");
        }
      }
    }
    if (settings.SHOW_SOURCE_NAME) {
      try {
        String sourceName;
        try {
          sourceName=location.sourceName();
        }
 catch (        InternalError e) {
          sourceName=e.toString();
        }
        label.append(", ");
        label.append(sourceName);
      }
 catch (      AbsentInformationException exception) {
      }
    }
    return label.toString();
  }
  finally {
    StringBuilderSpinAllocator.dispose(label);
  }
}
