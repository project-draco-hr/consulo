{
  final Project project=field.getProject();
  if (!DelegationUtils.fieldUsedAsDelegate(field)) {
    final String message=RefactorJBundle.message("cannot.perform.the.refactoring") + RefactorJBundle.message("field.selected.is.not.used.as.a.delegate");
    CommonRefactoringUtil.showErrorMessage(null,message,this.getHelpID(),project);
    return;
  }
  final RefactorJConfig config=RefactorJConfig.getInstance();
  final RemoveMiddlemanDialog dialog=new RemoveMiddlemanDialog(field,config.REMOVE_MIDDLEMAN_DELETE_METHODS);
  dialog.show();
  if (!dialog.isOK()) {
    return;
  }
  final boolean previewUsages=dialog.isPreviewUsages();
  final boolean removeMethods=dialog.removeMethods();
  config.REMOVE_MIDDLEMAN_DELETE_METHODS=removeMethods;
}
