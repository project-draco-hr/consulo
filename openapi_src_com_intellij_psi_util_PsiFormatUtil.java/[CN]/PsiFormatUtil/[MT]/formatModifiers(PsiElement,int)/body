{
  PsiModifierList list;
  if (element instanceof PsiVariable) {
    list=((PsiVariable)element).getModifierList();
  }
 else   if (element instanceof PsiMethod) {
    list=((PsiMethod)element).getModifierList();
  }
 else   if (element instanceof PsiClass) {
    list=((PsiClass)element).getModifierList();
    if (list == null)     return "";
  }
 else   if (element instanceof PsiClassInitializer) {
    list=((PsiClassInitializer)element).getModifierList();
    if (list == null)     return "";
  }
 else {
    throw new IllegalArgumentException();
  }
  if (list == null)   return "";
  PsiClass parentClass=element.getParent() instanceof PsiClass ? (PsiClass)element.getParent() : null;
  StringBuffer buffer=new StringBuffer();
  if (list.hasModifierProperty(PsiModifier.PUBLIC)) {
    if ((options & SHOW_REDUNDANT_MODIFIERS) != 0 || parentClass == null || !parentClass.isInterface()) {
      appendModifier(buffer,PsiModifier.PUBLIC);
    }
  }
  if (list.hasModifierProperty(PsiModifier.PROTECTED)) {
    appendModifier(buffer,PsiModifier.PROTECTED);
  }
  if (list.hasModifierProperty(PsiModifier.PRIVATE)) {
    appendModifier(buffer,PsiModifier.PRIVATE);
  }
  if (list.hasModifierProperty(PsiModifier.PACKAGE_LOCAL) && (options & SHOW_PACKAGE_LOCAL) != 0) {
    if (element instanceof PsiClass || element instanceof PsiMethod || element instanceof PsiField) {
      if (element instanceof PsiClass && element.getParent() instanceof PsiDeclarationStatement) {
        appendModifier(buffer,PsiBundle.message("local.class.preposition"));
      }
 else {
        appendModifier(buffer,PsiBundle.message("package.local.visibility"));
      }
    }
  }
  if (list.hasModifierProperty(PsiModifier.STATIC)) {
    if ((options & SHOW_REDUNDANT_MODIFIERS) != 0 || !(element instanceof PsiField && parentClass != null && parentClass.isInterface())) {
      appendModifier(buffer,PsiModifier.STATIC);
    }
  }
  if (list.hasModifierProperty(PsiModifier.ABSTRACT)) {
    if ((options & SHOW_REDUNDANT_MODIFIERS) != 0 || !(element instanceof PsiClass && ((PsiClass)element).isInterface() || element instanceof PsiMethod && parentClass != null && parentClass.isInterface())) {
      appendModifier(buffer,PsiModifier.ABSTRACT);
    }
  }
  if (list.hasModifierProperty(PsiModifier.FINAL)) {
    if ((options & SHOW_REDUNDANT_MODIFIERS) != 0 || !(element instanceof PsiField && parentClass != null && parentClass.isInterface())) {
      appendModifier(buffer,PsiModifier.FINAL);
    }
  }
  if (list.hasModifierProperty(PsiModifier.NATIVE) && (options & JAVADOC_MODIFIERS_ONLY) == 0) {
    appendModifier(buffer,PsiModifier.NATIVE);
  }
  if (list.hasModifierProperty(PsiModifier.SYNCHRONIZED) && (options & JAVADOC_MODIFIERS_ONLY) == 0) {
    appendModifier(buffer,PsiModifier.SYNCHRONIZED);
  }
  if (list.hasModifierProperty(PsiModifier.STRICTFP) && (options & JAVADOC_MODIFIERS_ONLY) == 0) {
    appendModifier(buffer,PsiModifier.STRICTFP);
  }
  if (list.hasModifierProperty(PsiModifier.TRANSIENT) && element instanceof PsiVariable) {
    appendModifier(buffer,PsiModifier.TRANSIENT);
  }
  if (list.hasModifierProperty(PsiModifier.VOLATILE)) {
    appendModifier(buffer,PsiModifier.VOLATILE);
  }
  if (buffer.length() > 0) {
    buffer.setLength(buffer.length() - 1);
  }
  return buffer.toString();
}
