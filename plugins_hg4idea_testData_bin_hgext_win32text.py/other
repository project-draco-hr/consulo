'perform automatic newline conversion\n\nTo perform automatic newline conversion, use::\n\n  [extensions]\n  win32text =\n  [encode]\n  ** = cleverencode:\n  # or ** = macencode:\n\n  [decode]\n  ** = cleverdecode:\n  # or ** = macdecode:\n\nIf not doing conversion, to make sure you do not commit CRLF/CR by accident::\n\n  [hooks]\n  pretxncommit.crlf = python:hgext.win32text.forbidcrlf\n  # or pretxncommit.cr = python:hgext.win32text.forbidcr\n\nTo do the same check on a server to prevent CRLF/CR from being\npushed or pulled::\n\n  [hooks]\n  pretxnchangegroup.crlf = python:hgext.win32text.forbidcrlf\n  # or pretxnchangegroup.cr = python:hgext.win32text.forbidcr\n'
from mercurial.i18n import _
from mercurial.node import short
from mercurial import util
import re
re_single_lf = re.compile('(^|[^\r])\n', re.MULTILINE)
newlinestr = {'\r\n': 'CRLF', '\r': 'CR', }
filterstr = {'\r\n': 'clever', '\r': 'mac', }
_filters = {'dumbdecode:': dumbdecode, 'dumbencode:': dumbencode, 'cleverdecode:': cleverdecode, 'cleverencode:': cleverencode, 'macdumbdecode:': macdumbdecode, 'macdumbencode:': macdumbencode, 'macdecode:': macdecode, 'macencode:': macencode, }
