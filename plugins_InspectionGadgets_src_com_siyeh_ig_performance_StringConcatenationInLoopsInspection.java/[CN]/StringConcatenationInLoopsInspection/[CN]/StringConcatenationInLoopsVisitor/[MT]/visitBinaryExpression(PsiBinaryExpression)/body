{
  super.visitBinaryExpression(expression);
  if (expression.getROperand() == null) {
    return;
  }
  final PsiJavaToken sign=expression.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  if (!tokenType.equals(JavaTokenType.PLUS)) {
    return;
  }
  final PsiType type=expression.getType();
  if (type == null) {
    return;
  }
  if (!TypeUtils.isJavaLangString(type)) {
    return;
  }
  if (!ControlFlowUtils.isInLoop(expression)) {
    return;
  }
  if (ControlFlowUtils.isInExitStatement(expression)) {
    return;
  }
  if (isEvaluatedAtCompileTime(expression)) {
    return;
  }
  if (containingStatementExits(expression)) {
    return;
  }
  if (m_ignoreUnlessAssigned && !isOnRHSOfAssignment(expression)) {
    return;
  }
  registerError(sign);
}
