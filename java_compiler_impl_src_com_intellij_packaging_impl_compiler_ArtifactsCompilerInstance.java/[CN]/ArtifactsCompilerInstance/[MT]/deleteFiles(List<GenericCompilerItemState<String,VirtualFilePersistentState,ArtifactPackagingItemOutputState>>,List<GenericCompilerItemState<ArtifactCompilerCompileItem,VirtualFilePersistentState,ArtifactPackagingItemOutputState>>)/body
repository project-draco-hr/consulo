{
  myContext.getProgressIndicator().setText(CompilerBundle.message("packaging.compiler.message.deleting.outdated.files"));
  final boolean testMode=ApplicationManager.getApplication().isUnitTestMode();
  final THashSet<String> deletedJars=new THashSet<String>();
  final THashSet<String> notDeletedJars=new THashSet<String>();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Deleting outdated files...");
  }
  Set<String> pathToDelete=new THashSet<String>();
  for (  GenericCompilerItemState<ArtifactCompilerCompileItem,VirtualFilePersistentState,ArtifactPackagingItemOutputState> item : changedItems) {
    final ArtifactPackagingItemOutputState cached=item.getOutputState();
    if (cached != null) {
      for (      Pair<String,Long> destination : cached.myDestinations) {
        pathToDelete.add(destination.getFirst());
      }
    }
  }
  for (  GenericCompilerItemState<ArtifactCompilerCompileItem,VirtualFilePersistentState,ArtifactPackagingItemOutputState> item : changedItems) {
    for (    DestinationInfo destination : item.getItem().getDestinations()) {
      pathToDelete.remove(destination.getOutputPath());
    }
  }
  for (  GenericCompilerItemState<String,VirtualFilePersistentState,ArtifactPackagingItemOutputState> item : obsoleteItems) {
    for (    Pair<String,Long> destination : item.getOutputState().myDestinations) {
      pathToDelete.add(destination.getFirst());
    }
  }
  int notDeletedFilesCount=0;
  List<File> filesToRefresh=new ArrayList<File>();
  for (  String fullPath : pathToDelete) {
    int end=fullPath.indexOf(JarFileSystem.JAR_SEPARATOR);
    boolean isJar=end != -1;
    String filePath=isJar ? fullPath.substring(0,end) : fullPath;
    boolean deleted=false;
    if (isJar) {
      if (notDeletedJars.contains(filePath)) {
        continue;
      }
      deleted=deletedJars.contains(filePath);
    }
    File file=new File(FileUtil.toSystemDependentName(filePath));
    if (!deleted) {
      filesToRefresh.add(file);
      deleted=FileUtil.delete(file);
    }
    if (deleted) {
      if (isJar) {
        deletedJars.add(filePath);
      }
      if (testMode) {
        CompilerManagerImpl.addDeletedPath(file.getAbsolutePath());
      }
    }
 else {
      if (isJar) {
        notDeletedJars.add(filePath);
      }
      if (notDeletedFilesCount++ > 50) {
        myContext.addMessage(CompilerMessageCategory.WARNING,"Deletion of outdated files stopped because too many files cannot be deleted",null,-1,-1);
        break;
      }
      myContext.addMessage(CompilerMessageCategory.WARNING,"Cannot delete file '" + filePath + "'",null,-1,-1);
      if (LOG.isDebugEnabled()) {
        LOG.debug("Cannot delete file " + file);
      }
    }
  }
  CompilerUtil.refreshIOFiles(filesToRefresh);
  return deletedJars;
}
