{
  if (!visitedModules.add(module)) {
    return;
  }
  if (packageName != null) {
    ModulePackageIndex.getInstance(module).getDirsByPackageName(packageName,false).forEach(new Processor<VirtualFile>(){
      public boolean process(      final VirtualFile directory){
        dirs.add(PsiManager.getInstance(project).findDirectory(directory));
        return true;
      }
    }
);
  }
  final AndroidFacet ownFacet=AndroidFacet.getInstance(module);
  String ownPackageName=null;
  if (ownFacet != null) {
    final Manifest ownManifest=ownFacet.getManifest();
    ownPackageName=ownManifest != null ? ownManifest.getPackage().getValue() : null;
    if (ownPackageName != null && !ownPackageName.equals(packageName)) {
      ModulePackageIndex.getInstance(module).getDirsByPackageName(ownPackageName,false).forEach(new Processor<VirtualFile>(){
        public boolean process(        final VirtualFile directory){
          dirs.add(PsiManager.getInstance(project).findDirectory(directory));
          return true;
        }
      }
);
    }
  }
  for (  Module otherModule : ModuleManager.getInstance(project).getModules()) {
    if (ModuleRootManager.getInstance(otherModule).isDependsOn(module)) {
      collectDirsForPackage(otherModule,project,packageName != null || onlyInOwnPackages ? packageName : ownPackageName,dirs,visitedModules,onlyInOwnPackages);
    }
  }
}
