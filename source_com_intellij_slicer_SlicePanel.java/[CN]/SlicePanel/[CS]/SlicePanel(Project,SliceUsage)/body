{
  super(new BorderLayout());
  myProject=project;
  myTree=createTree();
  Map<SliceUsage,List<SliceNode>> targetEqualUsages=new DuplicateMap();
  myBuilder=new SliceTreeBuilder(myTree,project);
  myBuilder.setCanYieldUpdate(true);
  Disposer.register(this,myBuilder);
  final SliceNode rootNode=new SliceRootNode(project,root,targetEqualUsages,myBuilder);
  myBuilder.setRoot(rootNode);
  layoutPanel();
  myBuilder.addSubtreeToUpdate((DefaultMutableTreeNode)myTree.getModel().getRoot(),new Runnable(){
    public void run(){
      myBuilder.expand(rootNode,new Runnable(){
        public void run(){
          myBuilder.select(rootNode.myCachedChildren.get(0));
        }
      }
);
      treeSelectionChanged();
    }
  }
);
}
