{
  final LocalFileSystem fs=LocalFileSystem.getInstance();
  if (myWatchRequests.size() > 0) {
    fs.removeWatchedRoots(myWatchRequests);
    myWatchRequests.clear();
  }
  final VirtualFileManager fm=VirtualFileManager.getInstance();
  for (  String url : myJarDirectories.keySet()) {
    if (fm.getFileSystem(VirtualFileManager.extractProtocol(url)) instanceof LocalFileSystem) {
      final boolean watchRecursively=myJarDirectories.get(url).booleanValue();
      final LocalFileSystem.WatchRequest request=fs.addRootToWatch(VirtualFileManager.extractPath(url),watchRecursively);
      myWatchRequests.add(request);
    }
  }
  if (myJarDirectories.size() > 0) {
    if (myVfsListener == null) {
      final VirtualFileAdapter listener=new VFSChangesListsner();
      myVfsListener=listener;
      VirtualFileManager.getInstance().addVirtualFileListener(listener,this);
    }
  }
 else {
    final VirtualFileListener listener=myVfsListener;
    if (listener != null) {
      myVfsListener=null;
      VirtualFileManager.getInstance().removeVirtualFileListener(listener);
    }
  }
}
