{
  myDesigner=designer;
  myComponent=component;
  myViewPort=viewPort;
  myShowHintRequest=new Runnable(){
    @Override public void run(){
      showHint();
    }
  }
;
  new VisibilityWatcher(){
    @Override public void visibilityChanged(){
      if (myComponent.isShowing()) {
        updateHintVisibility();
      }
 else {
        hideHint();
      }
    }
  }
.install(component);
  component.addFocusListener(new FocusListener(){
    @Override public void focusGained(    FocusEvent e){
      if (!e.isTemporary()) {
        updateHintVisibility();
      }
    }
    @Override public void focusLost(    FocusEvent e){
      if (!(e.isTemporary())) {
        hideHint();
      }
    }
  }
);
  AnAction showHintAction=new AnAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      if (myDesigner != null) {
        showHint();
        showPopup();
      }
    }
    @Override public void update(    AnActionEvent e){
      e.getPresentation().setEnabled(e.getData(PlatformDataKeys.EDITOR) == null);
    }
  }
;
  showHintAction.registerCustomShortcutSet(ActionManager.getInstance().getAction(IdeActions.ACTION_SHOW_INTENTION_ACTIONS).getShortcutSet(),component);
  viewPort.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      updateHintPosition();
    }
  }
);
}
