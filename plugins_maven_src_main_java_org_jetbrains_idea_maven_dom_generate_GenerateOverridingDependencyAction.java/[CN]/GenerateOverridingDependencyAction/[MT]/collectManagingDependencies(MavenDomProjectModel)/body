{
  final Set<MavenDomDependency> dependencies=new HashSet<MavenDomDependency>();
  final List<MavenDomDependency> existingDependencies=model.getDependencies().getDependencies();
  Processor<MavenDomDependencies> collectProcessor=new Processor<MavenDomDependencies>(){
    public boolean process(    MavenDomDependencies mavenDomDependencies){
      for (      MavenDomDependency dependency : mavenDomDependencies.getDependencies()) {
        String groupId=dependency.getGroupId().getStringValue();
        String artifactId=dependency.getArtifactId().getStringValue();
        if (StringUtil.isEmptyOrSpaces(groupId) || StringUtil.isEmptyOrSpaces(artifactId))         continue;
        if (!isDependencyExist(groupId,artifactId,existingDependencies)) {
          dependencies.add(dependency);
        }
      }
      return false;
    }
  }
;
  MavenDomProjectProcessorUtils.processDependenciesInDependencyManagement(model,collectProcessor,model.getManager().getProject());
  return dependencies;
}
