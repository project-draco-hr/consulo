{
  int caretOffset=editor.getCaretModel().getOffset();
  final CharSequence chars=editor.getDocument().getCharsSequence();
  if (CharArrayUtil.regionMatches(chars,caretOffset,"{}")) {
    caretOffset+=2;
  }
 else   if (CharArrayUtil.regionMatches(chars,caretOffset,"{\n}")) {
    caretOffset+=3;
  }
  caretOffset=CharArrayUtil.shiftBackward(chars,caretOffset - 1," \t") + 1;
  if (CharArrayUtil.regionMatches(chars,caretOffset - "{}".length(),"{}") || CharArrayUtil.regionMatches(chars,caretOffset - "{\n}".length(),"{\n}")) {
    commit(editor);
    final CodeStyleSettings settings=CodeStyleSettingsManager.getSettings(file.getProject());
    final boolean old=settings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE;
    settings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE=false;
    PsiElement elt=PsiTreeUtil.getParentOfType(file.findElementAt(caretOffset - 1),PsiCodeBlock.class);
    reformat(elt);
    settings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE=old;
    editor.getCaretModel().moveToOffset(caretOffset - 1);
  }
}
