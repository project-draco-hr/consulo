{
  CodeInsightSettings settings=CodeInsightSettings.getInstance();
  StringBuilder buffer=new StringBuilder();
  final String docCommentLinePrefix=commenter.getDocumentationCommentLinePrefix();
  if (docCommentLinePrefix == null) {
    return;
  }
  boolean leadingAsterisksEnabled=CodeStyleSettingsManager.getSettings(getProject()).JD_LEADING_ASTERISKS_ARE_ENABLED;
  buffer.append(docCommentLinePrefix);
  if (leadingAsterisksEnabled) {
    buffer.append(" ");
  }
  myDocument.insertString(myOffset,buffer);
  int caretOffset=myOffset + buffer.length();
  buffer=new StringBuilder(LINE_SEPARATOR).append(commenter.getDocumentationCommentSuffix());
  int line=myDocument.getLineNumber(myOffset);
  myOffset=myDocument.getLineEndOffset(line);
  PsiComment comment=createComment(buffer,settings);
  if (comment == null) {
    return;
  }
  myOffset=comment.getTextRange().getStartOffset();
  CharSequence text=myDocument.getCharsSequence();
  myOffset=CharArrayUtil.shiftForwardUntil(text,myOffset,LINE_SEPARATOR);
  myOffset=CharArrayUtil.shiftForward(text,myOffset,LINE_SEPARATOR);
  myOffset=CharArrayUtil.shiftForwardUntil(text,myOffset,LINE_SEPARATOR);
  removeTrailingSpaces(myDocument,myOffset);
  myOffset=caretOffset;
  PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
}
