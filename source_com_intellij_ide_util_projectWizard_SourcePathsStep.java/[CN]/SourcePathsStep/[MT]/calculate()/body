{
  String contentEntryPath=myBuilder.getContentEntryPath();
  if (contentEntryPath == null) {
    return EMPTY_STRING_STRING_ARRAY;
  }
  final File entryFile=new File(contentEntryPath);
  if (!entryFile.exists()) {
    return EMPTY_STRING_STRING_ARRAY;
  }
  final File[] children=entryFile.listFiles();
  if (children == null || children.length == 0) {
    return EMPTY_STRING_STRING_ARRAY;
  }
  final List<Pair<File,String>> suggestedRoots=JavaUtil.suggestRoots(entryFile);
  final List<Pair<String,String>> paths=new ArrayList<Pair<String,String>>();
  for (  final Pair<File,String> suggestedRoot : suggestedRoots) {
    try {
      if (FileUtil.isAncestor(entryFile,suggestedRoot.first,false)) {
        final String path=FileUtil.resolveShortWindowsName(suggestedRoot.first.getPath());
        paths.add(Pair.create(path,suggestedRoot.second));
      }
    }
 catch (    IOException e) {
      LOG.info(e);
    }
  }
  return paths;
}
