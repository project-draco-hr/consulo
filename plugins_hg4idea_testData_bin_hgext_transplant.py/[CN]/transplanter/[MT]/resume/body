def resume(self, repo, source, opts=None):
    'recover last transaction and apply remaining changesets'
    if os.path.exists(os.path.join(self.path, 'journal')):
        (n, node) = self.recover(repo)
        self.ui.status((_('%s transplanted as %s\n') % (revlog.short(node), revlog.short(n))))
    seriespath = os.path.join(self.path, 'series')
    if (not os.path.exists(seriespath)):
        self.transplants.write()
        return
    (nodes, merges) = self.readseries()
    revmap = {}
    for n in nodes:
        revmap[source.changelog.rev(n)] = n
    os.unlink(seriespath)
    self.apply(repo, source, revmap, merges, opts)
