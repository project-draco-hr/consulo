def filter(self, filter, changelog, patchfile):
    'arbitrarily rewrite changeset before applying it'
    self.ui.status((_('filtering %s\n') % patchfile))
    (user, date, msg) = (changelog[1], changelog[2], changelog[4])
    (fd, headerfile) = tempfile.mkstemp(prefix='hg-transplant-')
    fp = os.fdopen(fd, 'w')
    fp.write('# HG changeset patch\n')
    fp.write(('# User %s\n' % user))
    fp.write(('# Date %d %d\n' % date))
    fp.write((msg + '\n'))
    fp.close()
    try:
        util.system(('%s %s %s' % (filter, util.shellquote(headerfile), util.shellquote(patchfile))), environ={'HGUSER': changelog[1], }, onerr=util.Abort, errprefix=_('filter failed'))
        (user, date, msg) = self.parselog(file(headerfile))[1:4]
    finally:
        os.unlink(headerfile)
    return (user, date, msg)
