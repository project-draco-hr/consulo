def recover(self, repo):
    'commit working directory using journal metadata'
    (node, user, date, message, parents) = self.readlog()
    merge = (len(parents) == 2)
    if ((not user) or (not date) or (not message) or (not parents[0])):
        raise util.Abort(_('transplant log file is corrupt'))
    extra = {'transplant_source': node, }
    wlock = repo.wlock()
    try:
        (p1, p2) = repo.dirstate.parents()
        if (p1 != parents[0]):
            raise util.Abort((_('working dir not at transplant parent %s') % revlog.hex(parents[0])))
        if merge:
            repo.dirstate.setparents(p1, parents[1])
        n = repo.commit(message, user, date, extra=extra)
        if (not n):
            raise util.Abort(_('commit failed'))
        if (not merge):
            self.transplants.set(n, node)
        self.unlog()
        return (n, node)
    finally:
        wlock.release()
