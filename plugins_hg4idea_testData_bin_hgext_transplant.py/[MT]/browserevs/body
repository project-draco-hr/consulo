def browserevs(ui, repo, nodes, opts):
    'interactively transplant changesets'

    def browsehelp(ui):
        ui.write(_('y: transplant this changeset\nn: skip this changeset\nm: merge at this changeset\np: show patch\nc: commit selected changesets\nq: cancel transplant\n?: show this help\n'))
    displayer = cmdutil.show_changeset(ui, repo, opts)
    transplants = []
    merges = []
    for node in nodes:
        displayer.show(repo[node])
        action = None
        while (not action):
            action = ui.prompt(_('apply changeset? [ynmpcq?]:'))
            if (action == '?'):
                browsehelp(ui)
                action = None
            elif (action == 'p'):
                parent = repo.changelog.parents(node)[0]
                for chunk in patch.diff(repo, parent, node):
                    ui.write(chunk)
                action = None
            elif (action not in ('y', 'n', 'm', 'c', 'q')):
                ui.write(_('no such option\n'))
                action = None
        if (action == 'y'):
            transplants.append(node)
        elif (action == 'm'):
            merges.append(node)
        elif (action == 'c'):
            break
        elif (action == 'q'):
            transplants = ()
            merges = ()
            break
    displayer.close()
    return (transplants, merges)
