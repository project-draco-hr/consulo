{
  if (!method.hasModifierProperty(PsiModifier.FINAL)) {
    PsiManager manager=method.getManager();
    PsiSearchHelper helper=manager.getSearchHelper();
    GlobalSearchScope scope=GlobalSearchScope.allScope(manager.getProject());
    PsiMethod[] methods=helper.findOverridingMethods(method,scope,true);
    AddMethodLoop:     for (int i=0; i < methods.length; i++) {
      PsiMethod m=methods[i];
      PsiClass aClass=m.getContainingClass();
      if (aClass != null) {
        for (int j=0; j < methods.length; j++) {
          if (j == i)           continue;
          PsiMethod method1=methods[j];
          PsiClass aClass1=method1.getContainingClass();
          if (aClass1 != null) {
            if (aClass.isInheritor(aClass1,true))             continue AddMethodLoop;
          }
        }
      }
      if (!list.contains(m)) {
        list.add(m);
        getOverridingMethods(m,list);
      }
    }
  }
}
