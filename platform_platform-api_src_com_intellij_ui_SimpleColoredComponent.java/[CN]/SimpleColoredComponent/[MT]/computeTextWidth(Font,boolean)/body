{
  int result=0;
  int baseSize=font.getSize();
  boolean wasSmaller=false;
  for (int i=0; i < myAttributes.size(); i++) {
    SimpleTextAttributes attributes=myAttributes.get(i);
    boolean isSmaller=attributes.isSmaller();
    if (font.getStyle() != attributes.getFontStyle() || isSmaller != wasSmaller) {
      font=font.deriveFont(attributes.getFontStyle(),isSmaller ? UIUtil.getFontSize(UIUtil.FontSize.SMALL) : baseSize);
    }
    wasSmaller=isSmaller;
    final String text=myFragments.get(i);
    result+=isOracleRetina ? GraphicsUtil.stringWidth(text,font) : getFontMetrics(font).stringWidth(text);
    final int fixedWidth=myFixedWidths.get(i);
    if (fixedWidth > 0 && result < fixedWidth) {
      result=fixedWidth;
    }
    if (mainTextOnly && myMainTextLastIndex >= 0 && i == myMainTextLastIndex)     break;
  }
  return result;
}
