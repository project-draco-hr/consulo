{
  int curX=myIpad.left;
  if (myIcon != null && !myIconOnTheRight) {
    final int iconRight=myIcon.getIconWidth() + myIconTextGap;
    if (x < iconRight) {
      return FRAGMENT_ICON;
    }
    curX+=iconRight;
  }
  Font font=getFont();
  if (font == null) {
    font=UIUtil.getLabelFont();
  }
  int baseSize=font.getSize();
  boolean wasSmaller=false;
  for (int i=0; i < myAttributes.size(); i++) {
    SimpleTextAttributes attributes=myAttributes.get(i);
    boolean isSmaller=attributes.isSmaller();
    if (font.getStyle() != attributes.getFontStyle() || isSmaller != wasSmaller) {
      font=font.deriveFont(attributes.getFontStyle(),isSmaller ? UIUtil.getFontSize(UIUtil.FontSize.SMALL) : baseSize);
    }
    wasSmaller=isSmaller;
    final FontMetrics metrics=getFontMetrics(font);
    final int curWidth=metrics.stringWidth(myFragments.get(i));
    if (x >= curX && x < curX + curWidth) {
      return i;
    }
    curX+=curWidth;
    final int fixedWidth=myFixedWidths.get(i);
    if (fixedWidth > 0 && curX < fixedWidth) {
      curX=fixedWidth;
    }
  }
  if (myIcon != null && myIconOnTheRight) {
    curX+=myIconTextGap;
    if (x >= curX && x < curX + myIcon.getIconWidth()) {
      return FRAGMENT_ICON;
    }
  }
  return -1;
}
