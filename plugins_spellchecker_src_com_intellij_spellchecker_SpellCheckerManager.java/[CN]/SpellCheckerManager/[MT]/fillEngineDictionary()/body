{
  spellChecker.reset();
  final StateLoader stateLoader=new StateLoader(project);
  final List<Loader> loaders=new ArrayList<Loader>();
  for (  String dictionary : getBundledDictionaries()) {
    if (this.settings == null || !this.settings.getBundledDisabledDictionariesPaths().contains(dictionary)) {
      loaders.add(new StreamLoader(SpellCheckerManager.class.getResourceAsStream(dictionary)));
    }
  }
  if (this.settings != null && this.settings.getDictionaryFoldersPaths() != null) {
    final Set<String> disabledDictionaries=settings.getDisabledDictionariesPaths();
    for (    String folder : this.settings.getDictionaryFoldersPaths()) {
      SPFileUtil.processFilesRecursively(folder,new Consumer<String>(){
        public void consume(        final String s){
          if (!disabledDictionaries.contains(s)) {
            loaders.add(new FileLoader(s));
          }
        }
      }
);
    }
  }
  loaders.add(stateLoader);
  for (  Loader loader : loaders) {
    spellChecker.loadDictionary(loader);
  }
  userDictionary=stateLoader.getDictionary();
}
