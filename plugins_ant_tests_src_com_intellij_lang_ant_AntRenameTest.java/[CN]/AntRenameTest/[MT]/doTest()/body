{
  final String filename=getTestName(true) + ".xml";
  VirtualFile vfile=VirtualFileManager.getInstance().findFileByUrl("file://" + getTestDataPath() + filename);
  String text=FileDocumentManager.getInstance().getDocument(vfile).getText();
  int off=text.indexOf("<ren>");
  text=text.replace("<ren>","");
  configureFromFileText(filename,text);
  myFile=AntSupport.getAntFile(myFile);
  assertNotNull(myFile);
  assertTrue(myFile instanceof AntFile);
  PsiElement element=myFile.findElementAt(off);
  final PsiReference[] refs=element.getReferences();
  if (refs.length > 0) {
    int i=0;
    element=refs[0].resolve();
    while (element != null && !text.substring(off).trim().startsWith(((PsiNamedElement)element).getName())) {
      element=refs[++i].resolve();
    }
  }
 else {
    element=element.getParent();
  }
  assertNotNull(element);
  assertTrue(element instanceof PsiNamedElement);
  final RenameRefactoring rename=RefactoringFactory.getInstance(getProject()).createRename(element,((PsiNamedElement)element).getName() + "-after");
  rename.setSearchInComments(false);
  rename.setSearchInNonJavaFiles(false);
  rename.run();
  checkResultByFile(filename + "-after");
}
