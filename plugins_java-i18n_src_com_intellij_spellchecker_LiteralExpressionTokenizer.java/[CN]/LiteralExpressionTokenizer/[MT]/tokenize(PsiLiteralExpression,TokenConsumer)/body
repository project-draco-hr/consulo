{
  if (!(element.getType() instanceof PsiClassType)) {
    return;
  }
  final PsiModifierListOwner listOwner=PsiTreeUtil.getParentOfType(element,PsiModifierListOwner.class);
  if (listOwner != null && AnnotationUtil.isAnnotated(listOwner,Collections.singleton(AnnotationUtil.NON_NLS))) {
    return;
  }
  consumer.consumeToken(element,SplitterFactory.getInstance().getStringLiteralSplitter());
}
