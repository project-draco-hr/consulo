{
  final AbstractVcs vcs=ProjectLevelVcsManager.getInstance(myProject).getVcsFor(filePath);
  if (vcs == null) {
    return;
  }
  VcsRevisionNumber revision=null;
  final Matcher matcher=ourRevisionPattern.matcher(versionId);
  if (matcher.find()) {
    revision=vcs.parseRevisionNumber(matcher.group(1));
  }
  Date versionDate=null;
  if (revision == null) {
    try {
      versionDate=new Date(versionId);
    }
 catch (    IllegalArgumentException ex) {
      return;
    }
  }
  try {
    final VcsHistorySession session=vcs.getVcsHistoryProvider().createSessionFor(filePath);
    if (session == null)     return;
    final List<VcsFileRevision> list=session.getRevisionList();
    for (    VcsFileRevision fileRevision : list) {
      boolean found;
      if (revision != null) {
        found=fileRevision.getRevisionNumber().compareTo(revision) <= 0;
      }
 else {
        found=fileRevision.getRevisionDate().before(versionDate);
      }
      if (found) {
        fileRevision.loadContent();
        processor.process(LoadTextUtil.getTextByBinaryPresentation(fileRevision.getContent(),virtualFile,false));
        break;
      }
    }
  }
 catch (  IOException e) {
    LOG.error(e);
  }
}
