{
  super.visitBinaryExpression(expression);
  if (!(expression.getROperand() != null)) {
    return;
  }
  final PsiJavaToken sign=expression.getOperationSign();
  final IElementType tokenType=sign.getTokenType();
  if (!tokenType.equals(JavaTokenType.ASTERISK) && !tokenType.equals(JavaTokenType.LTLT)) {
    return;
  }
  final PsiType type=expression.getType();
  if (!isNonLongInteger(type)) {
    return;
  }
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return;
  }
  final PsiType rhsType=rhs.getType();
  if (!isNonLongInteger(rhsType)) {
    return;
  }
  final PsiExpression context=getContainingExpression(expression);
  if (context == null) {
    return;
  }
  final PsiType contextType=ExpectedTypeUtils.findExpectedType(context,true);
  if (contextType == null) {
    return;
  }
  if (!contextType.equals(PsiType.LONG)) {
    return;
  }
  registerError(expression);
}
