{
  PsiUtil.checkIsIdentifier(myManager,name);
  if (PsiType.NULL.equals(returnType)) {
    throw new IncorrectOperationException("Cannot create method with type \"null\".");
  }
  final String canonicalText=returnType.getCanonicalText();
  final PsiJavaFile aFile=createDummyJavaFile(StringUtil.join("class _Dummy_ { public " + canonicalText," ",name,"() {} }"));
  final PsiClass[] classes=aFile.getClasses();
  if (classes.length < 1) {
    throw new IncorrectOperationException("Class was not created. Method name: " + name + "; return type: "+ canonicalText);
  }
  final PsiMethod[] methods=classes[0].getMethods();
  if (methods.length < 1) {
    throw new IncorrectOperationException("Method was not created. Method name: " + name + "; return type: "+ canonicalText);
  }
  PsiMethod method=methods[0];
  method=(PsiMethod)JavaCodeStyleManager.getInstance(myManager.getProject()).shortenClassReferences(method);
  return (PsiMethod)CodeStyleManager.getInstance(myManager.getProject()).reformat(method);
}
