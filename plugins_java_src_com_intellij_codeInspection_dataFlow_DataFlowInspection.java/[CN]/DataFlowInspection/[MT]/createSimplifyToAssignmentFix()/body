{
  return new LocalQuickFix(){
    @NotNull @Override public String getName(){
      return InspectionsBundle.message("inspection.data.flow.simplify.to.assignment.quickfix.name");
    }
    @NotNull @Override public String getFamilyName(){
      return InspectionsBundle.message("inspection.data.flow.simplify.boolean.expression.quickfix");
    }
    @Override public void applyFix(    @NotNull Project project,    @NotNull ProblemDescriptor descriptor){
      final PsiElement psiElement=descriptor.getPsiElement();
      if (psiElement == null)       return;
      final PsiAssignmentExpression assignmentExpression=PsiTreeUtil.getParentOfType(psiElement,PsiAssignmentExpression.class);
      if (assignmentExpression == null) {
        return;
      }
      final PsiElementFactory factory=JavaPsiFacade.getElementFactory(project);
      final String lExpressionText=assignmentExpression.getLExpression().getText();
      final PsiExpression rExpression=assignmentExpression.getRExpression();
      final String rExpressionText=rExpression != null ? rExpression.getText() : "";
      assignmentExpression.replace(factory.createExpressionFromText(lExpressionText + " = " + rExpressionText,psiElement));
    }
  }
;
}
