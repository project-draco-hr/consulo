{
  myServerListModel=new SortedComboBoxModel<String>(String.CASE_INSENSITIVE_ORDER);
  for (  RemoteServer<? extends ServerConfiguration> server : RemoteServersManager.getInstance().getServers(type)) {
    myServerListModel.add(server.getName());
  }
  myServerComboBox=new ComboBox(myServerListModel);
  myServerComboBox.setRenderer(new ColoredListCellRendererWrapper<String>(){
    @Override protected void doCustomize(    JList list,    String value,    int index,    boolean selected,    boolean hasFocus){
      if (value == null)       return;
      SimpleTextAttributes attributes=RemoteServersManager.getInstance().findByName(value,type) == null ? SimpleTextAttributes.ERROR_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES;
      append(value,attributes);
    }
  }
);
  mySourceListModel=new SortedComboBoxModel<DeploymentSource>(new Comparator<DeploymentSource>(){
    @Override public int compare(    DeploymentSource o1,    DeploymentSource o2){
      return o1.getPresentableName().compareToIgnoreCase(o2.getPresentableName());
    }
  }
);
  mySourceListModel.addAll(deployer.getAvailableDeploymentSources());
  mySourceComboBox=new ComboBox(mySourceListModel);
  mySourceComboBox.setRenderer(new ListCellRendererWrapper<DeploymentSource>(){
    @Override public void customize(    JList list,    DeploymentSource value,    int index,    boolean selected,    boolean hasFocus){
      if (value == null)       return;
      setIcon(value.getIcon());
      setText(value.getPresentableName());
    }
  }
);
}
