{
  super(project,false);
  myProject=project;
  myTask=task;
  TaskManagerImpl taskManager=(TaskManagerImpl)TaskManager.getManager(myProject);
  setTitle("Open Task");
  myTaskNameLabel.setText(TaskUtil.getTrimmedSummary(task));
  myTaskNameLabel.setIcon(task.getIcon());
  TaskManagerImpl manager=(TaskManagerImpl)TaskManager.getManager(project);
  ControlBinder binder=new ControlBinder(manager.getState());
  binder.bindAnnotations(this);
  binder.reset();
  TaskRepository repository=task.getRepository();
  myMarkAsInProgressBox.setSelected(manager.getState().markAsInProgress);
  if (repository == null || !repository.getRepositoryType().getPossibleTaskStates().contains(TaskState.IN_PROGRESS)) {
    myMarkAsInProgressBox.setVisible(false);
  }
  TaskManagerImpl.Config state=taskManager.getState();
  myClearContext.setSelected(state.clearContext);
  AbstractVcs vcs=manager.getActiveVcs();
  if (vcs == null) {
    myVcsPanel.setVisible(false);
  }
 else {
    ActionListener listener=new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        updateFields();
      }
    }
;
    myCreateChangelist.addActionListener(listener);
    myCreateBranch.addActionListener(listener);
    myCreateChangelist.setSelected(manager.getState().createChangelist);
    myCreateBranch.setSelected(manager.getState().createBranch);
    if (vcs.getType() != VcsType.distributed) {
      myCreateBranch.setSelected(false);
      myCreateBranch.setVisible(false);
      myBranchName.setVisible(false);
    }
    myBranchName.setText(taskManager.suggestBranchName(task));
    myChangelistName.setText(taskManager.getChangelistName(task));
    updateFields();
  }
  init();
}
