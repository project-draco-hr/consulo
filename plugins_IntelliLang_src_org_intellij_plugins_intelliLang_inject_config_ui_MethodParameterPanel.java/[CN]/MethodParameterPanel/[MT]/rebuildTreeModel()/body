{
  myData.clear();
  final PsiClass psiClass=findClass(getClassType());
  if (psiClass == null)   return;
  final List<PsiMethod> methods=ContainerUtil.findAll(psiClass.getMethods(),new Condition<PsiMethod>(){
    public boolean value(    final PsiMethod method){
      final PsiModifierList modifiers=method.getModifierList();
      if (modifiers.hasModifierProperty(PsiModifier.PRIVATE) || modifiers.hasModifierProperty(PsiModifier.PACKAGE_LOCAL)) {
        return false;
      }
      final PsiParameter[] parameters=method.getParameterList().getParameters();
      return null != ContainerUtil.find(parameters,new Condition<PsiParameter>(){
        public boolean value(        PsiParameter p){
          return isInjectable(p.getType());
        }
      }
);
    }
  }
);
  for (  PsiMethod method : methods) {
    final String signature=buildSignature(method);
    myData.put(method,new MethodParameterInjection.MethodInfo(signature,new boolean[method.getParameterList().getParametersCount()]));
  }
}
