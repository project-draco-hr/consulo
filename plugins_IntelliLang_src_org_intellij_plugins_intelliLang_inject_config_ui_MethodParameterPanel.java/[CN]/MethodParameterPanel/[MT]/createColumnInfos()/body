{
  return new ColumnInfo[]{new ColumnInfo<DefaultMutableTreeNode,Boolean>(" "){
    final BooleanTableCellRenderer myRenderer=new BooleanTableCellRenderer();
    public Boolean valueOf(    DefaultMutableTreeNode o){
      final Object userObject=o.getUserObject();
      if (userObject instanceof PsiMethod) {
        final PsiMethod method=(PsiMethod)userObject;
        return isInjectable(method.getReturnType(),method.getProject()) ? myData.get(method).isReturnFlag() : null;
      }
 else       if (userObject instanceof PsiParameter) {
        final PsiMethod method=getMethod(o);
        final PsiParameter parameter=(PsiParameter)userObject;
        final int index=method.getParameterList().getParameterIndex(parameter);
        return isInjectable(parameter.getType(),method.getProject()) ? myData.get(method).getParamFlags()[index] : null;
      }
      return null;
    }
    public int getWidth(    JTable table){
      return myRenderer.getPreferredSize().width;
    }
    public TableCellEditor getEditor(    DefaultMutableTreeNode o){
      return new DefaultCellEditor(new JCheckBox());
    }
    public TableCellRenderer getRenderer(    DefaultMutableTreeNode o){
      myRenderer.setEnabled(isCellEditable(o));
      return myRenderer;
    }
    public void setValue(    DefaultMutableTreeNode o,    Boolean value){
      final Object userObject=o.getUserObject();
      if (userObject instanceof PsiMethod) {
        myData.get((PsiMethod)userObject).setReturnFlag(Boolean.TRUE.equals(value));
      }
 else       if (userObject instanceof PsiParameter) {
        final PsiMethod method=getMethod(o);
        final int index=method.getParameterList().getParameterIndex((PsiParameter)userObject);
        myData.get(method).getParamFlags()[index]=Boolean.TRUE.equals(value);
      }
    }
    public Class<Boolean> getColumnClass(){
      return Boolean.class;
    }
    public boolean isCellEditable(    DefaultMutableTreeNode o){
      return valueOf(o) != null;
    }
    private PsiMethod getMethod(    final DefaultMutableTreeNode o){
      return (PsiMethod)((DefaultMutableTreeNode)o.getParent()).getUserObject();
    }
  }
,new TreeColumnInfo("Method/Parameters")};
}
