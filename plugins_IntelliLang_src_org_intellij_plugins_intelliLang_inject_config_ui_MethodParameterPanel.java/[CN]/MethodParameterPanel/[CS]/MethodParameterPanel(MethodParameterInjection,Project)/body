{
  super(injection,project);
  $$$setupUI$$$();
  myParamModel=(ParamModel)myParamsTable.getModel();
  myParamModel.setSortable(false);
  myParamModel.setItems(Collections.<Param>emptyList());
  final TreeUpdateListener updateListener=new TreeUpdateListener();
  myClassField=new ReferenceEditorWithBrowseButton(new BrowseClassListener(project),project,new Function<String,Document>(){
    public Document fun(    String s){
      final Document document=ReferenceEditorWithBrowseButton.createTypeDocument(s,PsiManager.getInstance(project));
      document.addDocumentListener(updateListener);
      return document;
    }
  }
,"");
  myClassPanel.add(myClassField,BorderLayout.CENTER);
  myMethodField=new ReferenceEditorWithBrowseButton(new BrowseMethodListener(project),project,new Function<String,Document>(){
    public Document fun(    String s){
      final Document document=EditorFactory.getInstance().createDocument(s);
      document.setReadOnly(true);
      document.addDocumentListener(updateListener);
      return document;
    }
  }
,"");
  myMethodPanel.add(myMethodField,BorderLayout.CENTER);
  init(injection.copy());
}
