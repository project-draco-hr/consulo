{
  final LinkedList<RefPackage> pendingPackages=new LinkedList<RefPackage>();
  final Set<RefPackage> processedPackages=new HashSet<RefPackage>();
  pendingPackages.addLast(refPackage);
  while (!pendingPackages.isEmpty()) {
    final RefPackage packageToProcess=pendingPackages.removeFirst();
    newDependencies.add(packageToProcess);
    processedPackages.add(packageToProcess);
    final Set<RefPackage> dependencies=calculateDependenciesForPackage(packageToProcess);
    for (    RefPackage dependency : dependencies) {
      if (!pendingPackages.contains(dependency) && !processedPackages.contains(dependency)) {
        pendingPackages.addLast(dependency);
      }
    }
  }
  newDependencies.remove(refPackage);
}
