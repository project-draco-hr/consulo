{
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    final Project currentTestProject=myCurrentTestProject;
    if (myOpenProjects.isEmpty() && currentTestProject != null && !currentTestProject.isDisposed()) {
      return new Project[]{currentTestProject};
    }
  }
  if (myOpenProjectsArrayCache.length != myOpenProjects.size()) {
    LOG.error("Open projects: " + myOpenProjects + "; cache: "+ Arrays.asList(myOpenProjectsArrayCache));
  }
  if (myOpenProjectsArrayCache.length > 0 && myOpenProjectsArrayCache[0] != myOpenProjects.get(0)) {
    LOG.error("Open projects cache corrupted. Open projects: " + myOpenProjects + "; cache: "+ Arrays.asList(myOpenProjectsArrayCache));
  }
  return myOpenProjectsArrayCache;
}
