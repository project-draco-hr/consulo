{
  if (myOpenProjects.contains(project))   return false;
  if (!ApplicationManager.getApplication().isUnitTestMode() && !((ProjectEx)project).getStateStore().checkVersion())   return false;
  myOpenProjects.add(project);
  fireProjectOpened(project);
  final StartupManagerImpl startupManager=(StartupManagerImpl)StartupManager.getInstance(project);
  boolean ok=ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      startupManager.runStartupActivities();
    }
  }
,ProjectBundle.message("project.load.progress"),true,project);
  if (!ok) {
    closeProject(project,false);
    notifyProjectOpenFailed();
    return false;
  }
  startupManager.runPostStartupActivities();
  if (!ApplicationManager.getApplication().isHeadlessEnvironment() && !ApplicationManager.getApplication().isUnitTestMode()) {
    StartupManager.getInstance(project).runWhenProjectIsInitialized(new Runnable(){
      public void run(){
        final TrackingPathMacroSubstitutor macroSubstitutor=((ProjectEx)project).getStateStore().getStateStorageManager().getMacroSubstitutor();
        if (macroSubstitutor != null) {
          final Collection<String> macros=macroSubstitutor.getUnknownMacros(null);
          if (!macros.isEmpty()) {
            Notifications.Bus.notify(new Notification("Load Error","Project loading error: undefined path variables!",String.format("<p><i>%s</i> %s undefined. <a href=\"\">Fix it!</a></p>",StringUtil.join(macros,", "),macros.size() == 1 ? "is" : "are"),NotificationType.ERROR,new NotificationListener(){
              public void hyperlinkUpdate(              @NotNull Notification notification,              @NotNull HyperlinkEvent event){
                ((ProjectEx)project).checkUnknownMacros();
              }
            }
),NotificationDisplayType.STICKY_BALLOON,project);
          }
        }
      }
    }
);
  }
  return true;
}
