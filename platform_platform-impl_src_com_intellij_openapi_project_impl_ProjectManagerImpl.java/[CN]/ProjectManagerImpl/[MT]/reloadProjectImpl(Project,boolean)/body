{
  if (clearCopyToRestore) {
    mySavedCopies.clear();
    mySavedTimestamps.clear();
  }
  final Project[] project={p};
  ProjectReloadState.getInstance(project[0]).onBeforeAutomaticProjectReload();
  final Application application=ApplicationManager.getApplication();
  application.invokeLater(new Runnable(){
    @Override public void run(){
      LOG.debug("Reloading project.");
      ProjectImpl projectImpl=(ProjectImpl)project[0];
      if (projectImpl.isDisposed()) {
        return;
      }
      final String location=projectImpl.getPresentableUrl();
      final List<VirtualFile> original=new SmartList<VirtualFile>();
      try {
        ComponentSaveSession saveSession=projectImpl.getStateStore().startSave();
        saveSession.collectAllStorageFiles(true,original);
        saveSession.finishSave();
      }
 catch (      Exception e) {
        LOG.error(e);
        return;
      }
      if (project[0].isDisposed() || ProjectUtil.closeAndDispose(project[0])) {
        application.runWriteAction(new Runnable(){
          @Override public void run(){
            for (            VirtualFile originalFile : original) {
              restoreCopy(originalFile);
            }
          }
        }
);
        project[0]=null;
        ProjectUtil.openOrImport(location,null,true);
      }
    }
  }
,ModalityState.NON_MODAL);
}
