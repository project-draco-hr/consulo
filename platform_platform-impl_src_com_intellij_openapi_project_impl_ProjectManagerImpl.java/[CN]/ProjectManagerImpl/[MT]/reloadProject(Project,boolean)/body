{
  final Project[] project={p};
  ProjectReloadState.getInstance(project[0]).onBeforeAutomaticProjectReload();
  final Application application=ApplicationManager.getApplication();
  application.invokeLater(new Runnable(){
    @Override public void run(){
      LOG.debug("Reloading project.");
      ProjectImpl projectImpl=(ProjectImpl)project[0];
      if (projectImpl.isDisposed())       return;
      IProjectStore projectStore=projectImpl.getStateStore();
      final String location=projectImpl.getLocation();
      final List<IFile> original;
      try {
        final IComponentStore.SaveSession saveSession=projectStore.startSave();
        original=saveSession.getAllStorageFiles(true);
        saveSession.finishSave();
      }
 catch (      IOException e) {
        LOG.error(e);
        return;
      }
      if (project[0].isDisposed() || ProjectUtil.closeAndDispose(project[0])) {
        application.runWriteAction(new Runnable(){
          @Override public void run(){
            for (            final IFile originalFile : original) {
              restoreCopy(LocalFileSystem.getInstance().refreshAndFindFileByIoFile(originalFile));
            }
          }
        }
);
        project[0]=null;
        ProjectUtil.openProject(location,null,true);
      }
    }
  }
,ModalityState.NON_MODAL);
}
