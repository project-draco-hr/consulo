{
  if (project.isDisposed())   return false;
  final HashSet<Pair<VirtualFile,StateStorage>> causes=new HashSet<Pair<VirtualFile,StateStorage>>();
synchronized (myChangedProjectFiles) {
    final List<Pair<VirtualFile,StateStorage>> changes=myChangedProjectFiles.remove(project);
    if (changes != null) {
      causes.addAll(changes);
    }
    if (causes.isEmpty())     return false;
  }
  final boolean[] reloadOk={false};
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      try {
        LOG.debug("[RELOAD] Reloading project/components...");
        reloadOk[0]=((ProjectEx)project).getStateStore().reload(causes);
      }
 catch (      StateStorageException e) {
        Messages.showWarningDialog(ProjectBundle.message("project.reload.failed",e.getMessage()),ProjectBundle.message("project.reload.failed.title"));
      }
catch (      IOException e) {
        Messages.showWarningDialog(ProjectBundle.message("project.reload.failed",e.getMessage()),ProjectBundle.message("project.reload.failed.title"));
      }
    }
  }
);
  if (reloadOk[0])   return false;
  String message;
  if (causes.size() == 1) {
    message=ProjectBundle.message("project.reload.external.change.single",causes.iterator().next().first.getPresentableUrl());
  }
 else {
    StringBuilder filesBuilder=new StringBuilder();
    boolean first=true;
    Set<String> alreadyShown=new HashSet<String>();
    for (    Pair<VirtualFile,StateStorage> cause : causes) {
      String url=cause.first.getPresentableUrl();
      if (!alreadyShown.contains(url)) {
        if (alreadyShown.size() > 10) {
          filesBuilder.append("\n" + "and ").append(causes.size() - alreadyShown.size()).append(" more");
          break;
        }
        if (!first)         filesBuilder.append("\n");
        first=false;
        filesBuilder.append(url);
        alreadyShown.add(url);
      }
    }
    message=ProjectBundle.message("project.reload.external.change.multiple",filesBuilder.toString());
  }
  return Messages.showTwoStepConfirmationDialog(message,ProjectBundle.message("project.reload.external.change.title"),"Reload project",Messages.getQuestionIcon()) == 0;
}
