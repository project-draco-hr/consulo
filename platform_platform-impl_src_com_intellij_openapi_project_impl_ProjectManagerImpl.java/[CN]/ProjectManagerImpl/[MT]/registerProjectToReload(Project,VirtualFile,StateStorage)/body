{
  if (LOG.isDebugEnabled()) {
    LOG.debug("[RELOAD] Registering project to reload: " + cause,new Exception());
  }
  if (project != null) {
synchronized (myChangedProjectFiles) {
      List<Pair<VirtualFile,StateStorage>> changedProjectFiles=myChangedProjectFiles.get(project);
      if (changedProjectFiles == null) {
        changedProjectFiles=new ArrayList<Pair<VirtualFile,StateStorage>>();
        myChangedProjectFiles.put(project,changedProjectFiles);
      }
      changedProjectFiles.add(new Pair<VirtualFile,StateStorage>(cause,storage));
    }
  }
 else {
    myChangedApplicationFiles.add(new Pair<VirtualFile,StateStorage>(cause,storage));
  }
  myChangedFilesAlarm.cancelAllRequests();
  myChangedFilesAlarm.addRequest(new Runnable(){
    @Override public void run(){
      LOG.debug("[RELOAD] Scheduling reload application & project, myReloadBlockCount = " + myReloadBlockCount);
      if (myReloadBlockCount.get() == 0) {
        scheduleReloadApplicationAndProject();
      }
    }
  }
,444);
}
