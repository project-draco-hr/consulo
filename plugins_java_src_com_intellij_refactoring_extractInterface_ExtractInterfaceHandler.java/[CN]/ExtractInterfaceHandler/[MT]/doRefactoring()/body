{
  LocalHistoryAction a=LocalHistory.getInstance().startAction(getCommandName());
  final PsiClass anInterface;
  try {
    anInterface=extractInterface(myTargetDir,myClass,myInterfaceName,mySelectedMembers,myJavaDocPolicy);
  }
  finally {
    a.finish();
  }
  if (anInterface != null) {
    final SmartPsiElementPointer<PsiClass> classPointer=SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(myClass);
    final SmartPsiElementPointer<PsiClass> interfacePointer=SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(anInterface);
    final Runnable turnRefsToSuperRunnable=new Runnable(){
      @Override public void run(){
        ExtractClassUtil.askAndTurnRefsToSuper(myProject,classPointer,interfacePointer);
      }
    }
;
    SwingUtilities.invokeLater(turnRefsToSuperRunnable);
  }
}
