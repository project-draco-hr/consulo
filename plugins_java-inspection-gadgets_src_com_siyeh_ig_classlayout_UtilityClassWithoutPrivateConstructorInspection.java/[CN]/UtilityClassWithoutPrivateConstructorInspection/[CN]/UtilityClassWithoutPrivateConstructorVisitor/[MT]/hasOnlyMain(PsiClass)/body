{
  final PsiMethod[] methods=aClass.getMethods();
  if (methods.length == 0) {
    return false;
  }
  for (  PsiMethod method : methods) {
    if (method.isConstructor()) {
      continue;
    }
    if (!method.hasModifierProperty(PsiModifier.STATIC)) {
      return false;
    }
    if (method.hasModifierProperty(PsiModifier.PRIVATE)) {
      continue;
    }
    if (!method.hasModifierProperty(PsiModifier.PUBLIC)) {
      return false;
    }
    final String name=method.getName();
    if (!name.equals(HardcodedMethodConstants.MAIN)) {
      return false;
    }
    final PsiType returnType=method.getReturnType();
    if (!PsiType.VOID.equals(returnType)) {
      return false;
    }
    final PsiParameterList parameterList=method.getParameterList();
    if (parameterList.getParametersCount() != 1) {
      return false;
    }
    final PsiParameter[] parameters=parameterList.getParameters();
    final PsiParameter parameter=parameters[0];
    final PsiType type=parameter.getType();
    if (!type.equalsToText("java.lang.String[]")) {
      return false;
    }
  }
  return true;
}
