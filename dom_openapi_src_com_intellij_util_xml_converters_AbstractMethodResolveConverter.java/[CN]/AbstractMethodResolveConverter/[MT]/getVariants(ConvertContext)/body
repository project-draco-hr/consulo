{
  LinkedHashSet<PsiMethod> methodList=new LinkedHashSet<PsiMethod>();
  processMethods(context,new CommonProcessors.CollectProcessor<PsiMethod>(methodList),new Function<PsiClass,PsiMethod[]>(){
    public PsiMethod[] fun(    final PsiClass s){
      final List<PsiMethod> list=ContainerUtil.findAll(AbstractMethodResolveConverter.this.getVariants(s),new Condition<PsiMethod>(){
        public boolean value(        final PsiMethod object){
          return acceptMethod(object,context);
        }
      }
);
      return list.toArray(new PsiMethod[list.size()]);
    }
  }
);
  return methodList;
}
