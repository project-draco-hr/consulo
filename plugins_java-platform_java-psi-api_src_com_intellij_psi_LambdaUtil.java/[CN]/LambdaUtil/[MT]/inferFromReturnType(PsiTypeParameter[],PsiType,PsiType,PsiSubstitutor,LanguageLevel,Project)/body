{
  if (interfaceMethodReturnType == null)   return psiSubstitutor;
  final PsiResolveHelper resolveHelper=JavaPsiFacade.getInstance(project).getResolveHelper();
  for (  PsiTypeParameter typeParameter : typeParameters) {
    final PsiType constraint=resolveHelper.getSubstitutionForTypeParameter(typeParameter,returnType,interfaceMethodReturnType,false,languageLevel);
    if (constraint != PsiType.NULL) {
      PsiType inferredType=null;
      final PsiClassType[] bounds=typeParameter.getExtendsListTypes();
      for (      PsiClassType classTypeBound : bounds) {
        if (TypeConversionUtil.isAssignable(classTypeBound,constraint)) {
          inferredType=constraint;
          break;
        }
      }
      if (bounds.length == 0) {
        inferredType=constraint;
      }
      if (inferredType != null) {
        psiSubstitutor=psiSubstitutor.put(typeParameter,inferredType);
      }
    }
  }
  return psiSubstitutor;
}
