{
  XmlElementDescriptor[] elementDescriptors=myElementDescriptors;
  if (elementDescriptors == null) {
synchronized (PsiLock.LOCK) {
      elementDescriptors=myElementDescriptors;
      if (elementDescriptors == null) {
        final List<XmlElementDescriptor> result=new ArrayList<XmlElementDescriptor>();
        final XmlElementContentSpec contentSpecElement=myElementDecl.getContentSpecElement();
        final XmlNSDescriptor nsDescriptor=getNSDescriptor();
        final XmlNSDescriptor NSDescriptor=nsDescriptor != null ? nsDescriptor : getNsDescriptorFrom(context);
        contentSpecElement.processElements(new PsiElementProcessor(){
          public boolean execute(          PsiElement child){
            if (child instanceof XmlToken) {
              final XmlToken token=(XmlToken)child;
              if (token.getTokenType() == XmlTokenType.XML_NAME) {
                final String text=child.getText();
                XmlElementDescriptor element=getElementDescriptor(text,NSDescriptor);
                if (element != null) {
                  result.add(element);
                }
              }
 else               if (token.getTokenType() == XmlTokenType.XML_CONTENT_ANY) {
                if (NSDescriptor instanceof XmlNSDescriptorImpl) {
                  result.addAll(Arrays.asList(((XmlNSDescriptorImpl)NSDescriptor).getElements()));
                }
 else                 if (NSDescriptor instanceof XmlNSDescriptorSequence) {
                  for (                  XmlNSDescriptor xmlNSDescriptor : ((XmlNSDescriptorSequence)NSDescriptor).getSequence()) {
                    if (xmlNSDescriptor instanceof XmlNSDescriptorImpl) {
                      result.addAll(Arrays.asList(((XmlNSDescriptorImpl)xmlNSDescriptor).getElements()));
                    }
                  }
                }
              }
            }
            return true;
          }
        }
,getDeclaration());
        myElementDescriptors=elementDescriptors=result.toArray(new XmlElementDescriptor[result.size()]);
      }
    }
  }
  return elementDescriptors;
}
