{
  int line=EditorUtil.yPositionToLogicalLine(editor,e.getPoint());
  if (line == lastGutterToolTipLine) {
    return;
  }
  TooltipController controller=TooltipController.getInstance();
  if (lastGutterToolTipLine != -1) {
    controller.cancelTooltip(TOOLTIP_GROUP,e,true);
  }
  String toolTip=gutterContentProvider.getToolTip(line,editor);
  setCursor(toolTip == null ? Cursor.getDefaultCursor() : Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  if (toolTip == null) {
    lastGutterToolTipLine=-1;
    controller.cancelTooltip(TOOLTIP_GROUP,e,false);
  }
 else {
    lastGutterToolTipLine=line;
    RelativePoint showPoint=new RelativePoint(this,e.getPoint());
    controller.showTooltipByMouseMove(editor,showPoint,((EditorMarkupModel)editor.getMarkupModel()).getErrorStripTooltipRendererProvider().calcTooltipRenderer(toolTip),false,TOOLTIP_GROUP,new HintHint(this,e.getPoint()).setAwtTooltip(true));
  }
}
