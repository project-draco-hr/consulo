{
  MemberInfo[] infos=new MemberInfo[membersToFind.length];
  for (int i=0; i < membersToFind.length; i++) {
    final Class<? extends PsiMember> clazz=membersToFind[i].getSecond();
    final String name=membersToFind[i].getFirst();
    PsiMember member=null;
    if (PsiClass.class.isAssignableFrom(clazz)) {
      member=sourceClass.findInnerClassByName(name,false);
    }
 else     if (PsiMethod.class.isAssignableFrom(clazz)) {
      final PsiMethod[] methods=sourceClass.findMethodsByName(name,false);
      assertEquals(1,methods.length);
      member=methods[0];
    }
 else     if (PsiField.class.isAssignableFrom(clazz)) {
      member=sourceClass.findFieldByName(name,false);
    }
    assertNotNull(member);
    infos[i]=new MemberInfo(member);
  }
  return infos;
}
