{
  builder.append(variable.getName());
  final GrExpression initializer=variable.getInitializerGroovy();
  if (initializer != null) {
    builder.append(" = ");
    if (wrapped) {
      builder.append("new ").append(GroovyCommonClassNames.GROOVY_LANG_REFERENCE);
      if (original != null) {
        builder.append('<');
        writeType(builder,original,variable,new GeneratorClassNameProvider());
        builder.append('>');
      }
      builder.append('(');
    }
    final PsiType iType=getDeclaredType(initializer,expressionContext);
    if (original != null && iType != null && !TypesUtil.isAssignable(original,iType,initializer)) {
      builder.append('(');
      writeType(builder,original,initializer);
      builder.append(')');
    }
    initializer.accept(new ExpressionGenerator(builder,expressionContext));
    if (wrapped) {
      builder.append(')');
    }
  }
}
