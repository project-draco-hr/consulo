{
  GroovyResolveResult call=GroovyResolveResult.EMPTY_RESULT;
  final PsiType type;
  if (caller == null) {
    type=GroovyPsiElementFactory.getInstance(psiContext.getProject()).createExpressionFromText("this",psiContext).getType();
  }
 else {
    type=caller.getType();
  }
  if (type != null) {
    final PsiType[] argumentTypes=PsiUtil.getArgumentTypes(namedArgs,exprs,closureArgs,false,null);
    final GroovyResolveResult[] candidates=ResolveUtil.getMethodCandidates(type,methodName,psiContext,argumentTypes);
    call=PsiImplUtil.extractUniqueResult(candidates);
  }
  invokeMethodByResolveResult(caller,call,methodName,exprs,namedArgs,closureArgs,expressionGenerator,psiContext);
}
