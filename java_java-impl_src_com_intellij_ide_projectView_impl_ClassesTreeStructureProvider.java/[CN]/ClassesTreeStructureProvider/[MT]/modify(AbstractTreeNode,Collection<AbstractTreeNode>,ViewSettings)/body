{
  final ProjectFileIndex index=ProjectRootManager.getInstance(myProject).getFileIndex();
  ArrayList<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  for (  final AbstractTreeNode child : children) {
    Object o=child.getValue();
    if (o instanceof PsiClassOwner) {
      final ViewSettings settings1=((ProjectViewNode)parent).getSettings();
      final PsiClassOwner classOwner=(PsiClassOwner)o;
      PsiClass[] classes=classOwner.getClasses();
      final VirtualFile file=classOwner.getVirtualFile();
      if (classes.length == 1 && !(classes[0] instanceof SyntheticElement) && file != null && (index.isInSourceContent(file) || index.isInLibraryClasses(file) || index.isInLibrarySource(file))) {
        result.add(new ClassTreeNode(myProject,classes[0],settings1));
      }
 else {
        result.add(new PsiClassOwnerTreeNode(classOwner,settings1));
      }
      continue;
    }
    result.add(child);
  }
  return result;
}
