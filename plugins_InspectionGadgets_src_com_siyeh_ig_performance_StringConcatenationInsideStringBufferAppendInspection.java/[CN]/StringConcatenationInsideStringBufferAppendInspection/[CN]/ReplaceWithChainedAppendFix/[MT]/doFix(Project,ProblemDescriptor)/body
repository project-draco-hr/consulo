{
  final PsiElement methodNameElement=descriptor.getPsiElement();
  final PsiReferenceExpression methodExpression=(PsiReferenceExpression)methodNameElement.getParent();
  if (methodExpression == null) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)methodExpression.getParent();
  if (methodCallExpression == null) {
    return;
  }
  final PsiExpressionList argList=methodCallExpression.getArgumentList();
  final PsiExpression[] args=argList.getExpressions();
  final PsiExpression arg=args[0];
  final List<String> expressions=findConcatenationComponents(arg);
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier == null) {
    return;
  }
  @NonNls final StringBuffer newExpressionBuffer=new StringBuffer();
  newExpressionBuffer.append(qualifier.getText());
  for (  String expression : expressions) {
    newExpressionBuffer.append(".append(");
    newExpressionBuffer.append(expression);
    newExpressionBuffer.append(')');
  }
  final String newExpression=newExpressionBuffer.toString();
  replaceExpression(methodCallExpression,newExpression);
}
