{
  settings.getAppSettings().setPathToGit(getCurrentExecutablePath());
  myVcs.checkVersion();
  settings.getAppSettings().setIdeaSsh(IDEA_SSH.equals(mySSHExecutableComboBox.getSelectedItem()) ? GitVcsApplicationSettings.SshExecutable.IDEA_SSH : GitVcsApplicationSettings.SshExecutable.NATIVE_SSH);
  settings.setAutoUpdateIfPushRejected(myAutoUpdateIfPushRejected.isSelected());
  Object policyItem=myConvertTextFilesComboBox.getSelectedItem();
  GitVcsSettings.ConversionPolicy conversionPolicy;
  if (CRLF_DO_NOT_CONVERT.equals(policyItem)) {
    conversionPolicy=GitVcsSettings.ConversionPolicy.NONE;
  }
 else   if (CRLF_CONVERT_TO_PROJECT.equals(policyItem)) {
    conversionPolicy=GitVcsSettings.ConversionPolicy.CONVERT;
  }
 else   if (CRLF_ASK.equals(policyItem)) {
    conversionPolicy=GitVcsSettings.ConversionPolicy.ASK;
  }
 else {
    throw new IllegalStateException("Unknown selected CRLF policy: " + policyItem);
  }
  settings.setLineSeparatorsConversion(conversionPolicy);
  settings.setSyncSetting(mySyncBranchControl.isSelected() ? GitBranchSyncSetting.SYNC : GitBranchSyncSetting.DONT);
  settings.setAutoCommitOnCherryPick(myAutoCommitOnCherryPick.isSelected());
}
