{
  myVcs=GitVcs.getInstance(project);
  myAppSettings=GitVcsApplicationSettings.getInstance();
  mySSHExecutableComboBox.addItem(IDEA_SSH);
  mySSHExecutableComboBox.addItem(NATIVE_SSH);
  mySSHExecutableComboBox.setSelectedItem(IDEA_SSH);
  mySSHExecutableComboBox.setToolTipText(GitBundle.message("git.vcs.config.ssh.mode.tooltip",ApplicationNamesInfo.getInstance().getFullProductName()));
  myTestButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      testConnection();
    }
  }
);
  myGitField.addBrowseFolderListener(GitBundle.getString("find.git.title"),GitBundle.getString("find.git.description"),project,FileChooserDescriptorFactory.createSingleFileNoJarsDescriptor());
  final GitRepositoryManager repositoryManager=ServiceManager.getService(project,GitRepositoryManager.class);
  mySyncBranchControl.setVisible(repositoryManager != null && repositoryManager.moreThanOneRoot());
}
