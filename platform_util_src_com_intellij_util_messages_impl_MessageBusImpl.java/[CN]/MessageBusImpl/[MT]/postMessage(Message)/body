{
  checkNotDisposed();
  final Topic topic=message.getTopic();
  List<MessageBusConnectionImpl> topicSubscribers=mySubscriberCache.get(topic);
  if (topicSubscribers == null) {
    topicSubscribers=new SmartList<MessageBusConnectionImpl>();
    calcSubscribers(topic,topicSubscribers);
    mySubscriberCache.put(topic,topicSubscribers);
  }
  if (!topicSubscribers.isEmpty()) {
    for (    MessageBusConnectionImpl subscriber : topicSubscribers) {
      subscriber.getBus().myMessageQueue.get().offer(new DeliveryJob(subscriber,message));
      subscriber.getBus().notifyPendingJobChange(1);
      subscriber.scheduleMessageDelivery(message);
    }
  }
}
