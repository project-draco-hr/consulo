{
  myShouldSynchronize=false;
  mySyncAlarm=new Alarm();
  KeyboardFocusManager focusManager=KeyboardFocusManager.getCurrentKeyboardFocusManager();
  focusManager.addPropertyChangeListener("activeWindow",this);
  focusManager.addPropertyChangeListener("focusedWindow",this);
  focusManager.addPropertyChangeListener("focusOwner",this);
  myIdleListener=new Runnable(){
    public void run(){
      if (generalSettings.isAutoSaveIfInactive() && canSyncOrSave()) {
        fileDocumentManager.saveAllDocuments();
      }
    }
  }
;
  IdeEventQueue.getInstance().addIdleListener(myIdleListener,generalSettings.getInactiveTimeout() * 1000);
  myGeneralSettingsListener=new PropertyChangeListener(){
    public void propertyChange(    PropertyChangeEvent e){
      if (GeneralSettings.PROP_INACTIVE_TIMEOUT.equals(e.getPropertyName())) {
        IdeEventQueue eventQueue=IdeEventQueue.getInstance();
        eventQueue.removeIdleListener(myIdleListener);
        Integer timeout=(Integer)e.getNewValue();
        eventQueue.addIdleListener(myIdleListener,timeout.intValue() * 1000);
      }
    }
  }
;
  generalSettings.addPropertyChangeListener(myGeneralSettingsListener);
  registerActivationAction(new Runnable(){
    public void run(){
      refreshFiles();
    }
  }
,true);
  registerActivationAction(new Runnable(){
    public void run(){
      saveProjectsAndDocuments();
    }
  }
,false);
}
