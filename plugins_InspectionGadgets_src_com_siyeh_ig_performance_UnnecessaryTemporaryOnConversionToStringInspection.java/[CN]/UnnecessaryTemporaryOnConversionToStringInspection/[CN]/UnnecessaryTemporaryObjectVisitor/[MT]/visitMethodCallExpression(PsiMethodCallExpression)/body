{
  super.visitMethodCallExpression(expression);
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  @NonNls final String methodName=methodExpression.getReferenceName();
  if (!HardcodedMethodConstants.TO_STRING.equals(methodName)) {
    return;
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (!(qualifier instanceof PsiNewExpression)) {
    return;
  }
  final PsiNewExpression newExpression=(PsiNewExpression)qualifier;
  final PsiExpressionList argumentList=newExpression.getArgumentList();
  if (argumentList == null) {
    return;
  }
  final PsiExpression[] expressions=argumentList.getExpressions();
  if (expressions.length < 1) {
    return;
  }
  final PsiType type=qualifier.getType();
  if (type == null) {
    return;
  }
  final String typeName=type.getCanonicalText();
  if (!s_basicTypes.contains(typeName)) {
    return;
  }
  registerError(expression);
}
