{
  if (myChild1 instanceof JspJavaComment || myChild2 instanceof JspJavaComment) {
    myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,0);
  }
 else   if (processMethod()) {
  }
 else   if (myRole2 == ChildRole.CLASS_INITIALIZER) {
    if (myRole1 == ChildRole.LBRACE) {
      myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
    }
 else     if (myRole1 == ChildRole.FIELD) {
      int lines=Math.max(getLinesAroundField(),getLinesAroundMethod()) + 1;
      myResult=Spacing.createSpacing(0,mySettings.SPACE_BEFORE_CLASS_LBRACE ? 1 : 0,0,true,mySettings.KEEP_BLANK_LINES_BEFORE_RBRACE,lines);
    }
 else {
      final int blankLines=getLinesAroundMethod() + 1;
      myResult=Spacing.createSpacing(0,0,blankLines,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    }
  }
 else   if (myRole1 == ChildRole.CLASS_INITIALIZER) {
    if (myRole2 == ChildRole.RBRACE) {
      int minLineFeeds=getMinLineFeedsBetweenRBraces(myChild1);
      myResult=Spacing.createSpacing(0,Integer.MAX_VALUE,minLineFeeds,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_BEFORE_RBRACE);
    }
 else {
      final int blankLines=getLinesAroundMethod() + 1;
      myResult=Spacing.createSpacing(0,Integer.MAX_VALUE,blankLines,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    }
  }
 else   if (myRole1 == ChildRole.CLASS) {
    if (myRole2 == ChildRole.RBRACE) {
      myResult=Spacing.createSpacing(0,Integer.MAX_VALUE,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_BEFORE_RBRACE);
    }
 else {
      final int blankLines=mySettings.BLANK_LINES_AROUND_CLASS + 1;
      myResult=Spacing.createSpacing(0,Integer.MAX_VALUE,blankLines,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    }
  }
 else   if (myRole2 == ChildRole.CLASS) {
    if (myRole1 == ChildRole.LBRACE) {
      myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,0);
    }
 else {
      final int blankLines=mySettings.BLANK_LINES_AROUND_CLASS + 1;
      myResult=Spacing.createSpacing(0,Integer.MAX_VALUE,blankLines,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    }
  }
 else   if (myRole2 == ChildRole.FIELD) {
    if (myRole1 == ChildRole.COMMA) {
      createSpaceProperty(true,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
    }
 else     if (myRole1 == ChildRole.LBRACE) {
      myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,0);
    }
 else {
      final int blankLines=getLinesAroundField() + 1;
      myResult=Spacing.createSpacing(0,Integer.MAX_VALUE,blankLines,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    }
  }
 else   if (myRole1 == ChildRole.FIELD) {
    if (myRole2 == ChildRole.COMMA) {
      ASTNode lastChildNode=myChild1.getLastChildNode();
      if (lastChildNode != null && lastChildNode.getElementType() == JavaTokenType.SEMICOLON) {
        myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
      }
 else {
        createSpaceProperty(false,false,0);
      }
    }
 else     if (myRole2 == ChildRole.RBRACE) {
      myResult=Spacing.createSpacing(0,Integer.MAX_VALUE,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_BEFORE_RBRACE);
    }
 else {
      final int blankLines=getLinesAroundField() + 1;
      myResult=Spacing.createSpacing(0,Integer.MAX_VALUE,blankLines,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    }
  }
 else   if (myRole2 == ChildRole.COMMA || myChild2.getElementType() == JavaTokenType.SEMICOLON) {
    createSpaceProperty(false,false,0);
  }
 else   if (myRole1 == ChildRole.COMMA) {
    createSpaceProperty(mySettings.SPACE_AFTER_COMMA,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
  }
 else   if (myRole1 == ChildRole.MODIFIER_LIST) {
    processModifierList();
  }
 else   if (myRole1 == ChildRole.LBRACE && myRole2 == ChildRole.RBRACE) {
    myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_BEFORE_RBRACE);
  }
 else   if (myRole2 == ChildRole.EXTENDS_LIST || myRole2 == ChildRole.IMPLEMENTS_LIST) {
    createSpaceInCode(true);
  }
 else   if (myRole2 == ChildRole.TYPE_PARAMETER_LIST) {
    createSpaceInCode(mySettings.SPACE_BEFORE_TYPE_PARAMETER_LIST);
  }
 else   if (myRole2 == ChildRole.ARGUMENT_LIST) {
    createSpaceInCode(false);
  }
 else   if (myRole2 == ChildRole.RBRACE) {
    myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_BEFORE_RBRACE);
  }
}
