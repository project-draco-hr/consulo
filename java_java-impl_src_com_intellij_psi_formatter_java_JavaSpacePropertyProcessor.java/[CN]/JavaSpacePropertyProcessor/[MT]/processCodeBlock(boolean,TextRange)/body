{
  if (myParent instanceof JspCodeBlock) {
    myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
  }
 else   if (myRole1 == ChildRoleBase.NONE || myRole2 == ChildRoleBase.NONE) {
    final IElementType firstElementType=myChild1.getElementType();
    if (firstElementType == JavaTokenType.END_OF_LINE_COMMENT || firstElementType == JavaTokenType.C_STYLE_COMMENT) {
      myResult=Spacing.createDependentLFSpacing(0,1,myParent.getTextRange(),mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
    }
 else {
      myResult=null;
    }
  }
 else   if (myRole1 == ChildRole.LBRACE) {
    if (!keepInOneLine) {
      myResult=Spacing.createSpacing(0,0,mySettings.BLANK_LINES_BEFORE_METHOD_BODY + 1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
    }
 else {
      myResult=Spacing.createDependentLFSpacing(0,1,textRange,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
    }
  }
 else   if (myRole2 == ChildRole.RBRACE) {
    if (!keepInOneLine) {
      myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_BEFORE_RBRACE);
    }
 else {
      myResult=Spacing.createDependentLFSpacing(0,1,textRange,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_BEFORE_RBRACE);
    }
  }
 else   if (myChild1.getElementType() == JavaElementType.SWITCH_LABEL_STATEMENT && myChild2.getElementType() == JavaElementType.BLOCK_STATEMENT) {
    myResult=getSpaceBeforeLBrace(mySettings.SPACE_BEFORE_SWITCH_LBRACE,mySettings.BRACE_STYLE,null,false);
  }
 else   if (myRole1 == ChildRole.STATEMENT_IN_BLOCK && myRole2 == ChildRole.STATEMENT_IN_BLOCK) {
    myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
  }
}
