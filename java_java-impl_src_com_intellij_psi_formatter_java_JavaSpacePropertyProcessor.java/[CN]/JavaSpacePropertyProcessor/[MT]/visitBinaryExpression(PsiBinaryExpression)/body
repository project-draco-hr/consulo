{
  PsiJavaToken sign=expression.getOperationSign();
  IElementType i=sign.getTokenType();
  if (myRole1 == ChildRole.OPERATION_SIGN || myRole2 == ChildRole.OPERATION_SIGN) {
    if (i == JavaTokenType.OROR || i == JavaTokenType.ANDAND) {
      createSpaceInCode(mySettings.SPACE_AROUND_LOGICAL_OPERATORS);
    }
 else     if (i == JavaTokenType.OR || i == JavaTokenType.AND || i == JavaTokenType.XOR) {
      createSpaceInCode(mySettings.SPACE_AROUND_BITWISE_OPERATORS);
    }
 else     if (i == JavaTokenType.EQEQ || i == JavaTokenType.NE) {
      createSpaceInCode(mySettings.SPACE_AROUND_EQUALITY_OPERATORS);
    }
 else     if (i == JavaTokenType.GT || i == JavaTokenType.LT || i == JavaTokenType.GE || i == JavaTokenType.LE) {
      createSpaceInCode(mySettings.SPACE_AROUND_RELATIONAL_OPERATORS);
    }
 else     if (i == JavaTokenType.PLUS || i == JavaTokenType.MINUS) {
      createSpaceInCode(mySettings.SPACE_AROUND_ADDITIVE_OPERATORS);
    }
 else     if (i == JavaTokenType.ASTERISK || i == JavaTokenType.DIV || i == JavaTokenType.PERC) {
      createSpaceInCode(mySettings.SPACE_AROUND_MULTIPLICATIVE_OPERATORS);
    }
 else     if (i == JavaTokenType.LTLT || i == JavaTokenType.GTGT || i == JavaTokenType.GTGTGT) {
      createSpaceInCode(mySettings.SPACE_AROUND_SHIFT_OPERATORS);
    }
 else {
      createSpaceInCode(false);
    }
  }
}
