{
  if (myChild1.getElementType() == JavaDocElementType.DOC_COMMENT) {
    myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    return;
  }
  if (myRole2 == ChildRole.LBRACE) {
    PsiIdentifier nameIdentifier=aClass.getNameIdentifier();
    int dependanceStart=nameIdentifier == null ? myParent.getTextRange().getStartOffset() : nameIdentifier.getTextRange().getStartOffset();
    myResult=getSpaceBeforeLBrace(mySettings.SPACE_BEFORE_CLASS_LBRACE,mySettings.CLASS_BRACE_STYLE,new TextRange(dependanceStart,myChild1.getTextRange().getEndOffset()),false,true);
  }
 else   if (myRole1 == ChildRole.LBRACE) {
    if (aClass.isEnum()) {
      createParenthSpace(true,false);
    }
 else     if (myRole2 == ChildRole.RBRACE && mySettings.KEEP_SIMPLE_CLASSES_IN_ONE_LINE) {
      int spaces=mySettings.SPACE_WITHIN_BRACES ? 1 : 0;
      myResult=Spacing.createSpacing(spaces,spaces,0,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    }
 else     if (aClass instanceof PsiAnonymousClass) {
      if (myRole2 == ChildRole.CLASS_INITIALIZER && isTheOnlyClassMember(myChild2)) {
        myResult=Spacing.createSpacing(0,0,0,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
      }
 else {
        myResult=Spacing.createSpacing(0,0,mySettings.BLANK_LINES_AFTER_ANONYMOUS_CLASS_HEADER + 1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
      }
    }
 else {
      myResult=Spacing.createSpacing(0,0,mySettings.BLANK_LINES_AFTER_CLASS_HEADER + 1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    }
  }
 else   if (myRole2 == ChildRole.RBRACE && aClass.isEnum()) {
    createParenthSpace(true,false);
  }
 else   if (aClass instanceof PsiAnonymousClass && ElementType.JAVA_PLAIN_COMMENT_BIT_SET.contains(myChild1.getElementType())) {
    ASTNode prev=myChild1.getTreePrev();
    if (prev.getElementType() == JavaTokenType.WHITE_SPACE && !StringUtil.containsLineBreak(prev.getChars())) {
      prev=prev.getTreePrev();
    }
    if (prev.getElementType() == JavaTokenType.LBRACE) {
      myResult=Spacing.createSpacing(0,0,mySettings.BLANK_LINES_AFTER_ANONYMOUS_CLASS_HEADER + 1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS);
    }
 else {
      processClassBody();
    }
  }
 else   processClassBody();
}
