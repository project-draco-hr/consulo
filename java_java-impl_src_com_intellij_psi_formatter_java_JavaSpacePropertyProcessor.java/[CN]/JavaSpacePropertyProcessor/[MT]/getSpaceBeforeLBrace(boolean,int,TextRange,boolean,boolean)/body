{
  int space=spaceBeforeLbrace ? 1 : 0;
  if (dependantRange != null && braceStyle == CommonCodeStyleSettings.NEXT_LINE_IF_WRAPPED) {
    return createNonLFSpace(space,dependantRange,false);
  }
 else   if (braceStyle == CommonCodeStyleSettings.END_OF_LINE || braceStyle == CommonCodeStyleSettings.NEXT_LINE_IF_WRAPPED) {
    return createNonLFSpace(space,null,false);
  }
 else   if (braceStyle == CommonCodeStyleSettings.NEXT_LINE && !mySettings.KEEP_SIMPLE_METHODS_IN_ONE_LINE) {
    return Spacing.createSpacing(0,0,keepOneLine ? 0 : 1,false,mySettings.KEEP_BLANK_LINES_IN_CODE);
  }
 else   if (keepOneLine) {
    TextRange dependencyRangeToUse=dependantRange == null || useParentBlockAsDependencyAllTheTime ? myParent.getTextRange() : dependantRange;
    return Spacing.createDependentLFSpacing(space,space,dependencyRangeToUse,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
  }
 else {
    return Spacing.createSpacing(0,0,1,false,mySettings.KEEP_BLANK_LINES_IN_CODE);
  }
}
