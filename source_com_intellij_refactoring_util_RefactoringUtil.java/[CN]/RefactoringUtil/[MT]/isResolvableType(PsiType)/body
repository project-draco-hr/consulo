{
  return type.accept(new PsiTypeVisitor<Boolean>(){
    public Boolean visitPrimitiveType(    PsiPrimitiveType primitiveType){
      return Boolean.TRUE;
    }
    public Boolean visitArrayType(    PsiArrayType arrayType){
      return arrayType.getComponentType().accept(this);
    }
    public Boolean visitClassType(    PsiClassType classType){
      if (classType.resolve() == null)       return Boolean.FALSE;
      PsiType[] parameters=classType.getParameters();
      for (int i=0; i < parameters.length; i++) {
        PsiType parameter=parameters[i];
        if (parameter != null && !parameter.accept(this).booleanValue())         return Boolean.FALSE;
      }
      return Boolean.TRUE;
    }
    public Boolean visitWildcardType(    PsiWildcardType wildcardType){
      if (wildcardType.getBound() != null)       return wildcardType.getBound().accept(this);
      return Boolean.TRUE;
    }
  }
).booleanValue();
}
