{
  PsiManager manager=element.getManager();
  PsiSearchHelper helper=manager.getSearchHelper();
  SearchScope scope=helper.getAccessScope(element);
  scope=scope.intersectWith(GlobalSearchScope.projectScope(manager.getProject()));
  int index=stringToSearch.lastIndexOf('.');
  String identifierToSearch=index >= 0 ? stringToSearch.substring(index + 1) : stringToSearch;
  PsiLiteralExpression[] literals=helper.findStringLiteralsContainingIdentifier(identifierToSearch,scope);
  for (int i=0; i < literals.length; i++) {
    processStringOrComment(literals[i],stringToSearch,results,factory);
  }
  PsiElement[] comments=helper.findCommentsContainingIdentifier(identifierToSearch,scope);
  for (int i=0; i < comments.length; i++) {
    processStringOrComment(comments[i],stringToSearch,results,factory);
  }
}
