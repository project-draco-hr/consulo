{
  final Document document=editor.getDocument();
  PsiDocumentManager.getInstance(project).commitDocument(document);
  final SelectionModel selectionModel=editor.getSelectionModel();
  final int selectionStart=selectionModel.getSelectionStart();
  final int selectionEnd=selectionModel.getSelectionEnd();
  PsiElement token=findLiteralTokenType(file,selectionStart,selectionEnd);
  if (token == null) {
    return text;
  }
  if (isStringLiteral(token)) {
    boolean escapeSlashes=true;
    if (rawText != null && rawText.rawText != null) {
      escapeSlashes=false;
      text=rawText.rawText;
    }
    StringBuilder buffer=new StringBuilder(text.length());
    @NonNls String breaker=getLineBreaker(token);
    final String[] lines=LineTokenizer.tokenize(text.toCharArray(),false,true);
    for (int i=0; i < lines.length; i++) {
      String line=lines[i];
      buffer.append(escapeCharCharacters(line,token,escapeSlashes));
      if (i != lines.length - 1)       buffer.append(breaker);
    }
    text=buffer.toString();
  }
 else   if (isCharLiteral(token)) {
    if (rawText != null && rawText.rawText != null) {
      return escapeCharCharacters(rawText.rawText,token,false);
    }
 else {
      return escapeCharCharacters(text,token,true);
    }
  }
  return text;
}
