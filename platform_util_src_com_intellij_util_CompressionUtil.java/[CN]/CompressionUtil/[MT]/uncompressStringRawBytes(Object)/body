{
  if (compressed instanceof CharSequence)   return (CharSequence)compressed;
  byte[] b=(byte[])compressed;
  try {
    int uncompressedLength=Snappy.getUncompressedLength(b,0);
    byte[] bytes=spareBufferLocal.getBuffer(uncompressedLength);
    int bytesLength=Snappy.uncompress(b,0,b.length,bytes,0);
    ByteArrayInputStream byteStream=new ByteArrayInputStream(bytes,0,bytesLength);
    @NotNull DataInput in=new DataInputStream(byteStream);
    int len=DataInputOutputUtil.readINT(in);
    char[] chars=new char[len];
    for (int i=0; i < len; i++) {
      int c=DataInputOutputUtil.readINT(in);
      chars[i]=(char)c;
    }
    return StringFactory.createShared(chars);
  }
 catch (  CorruptionException ex) {
    throw new RuntimeException(ex);
  }
catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
