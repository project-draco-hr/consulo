{
  final Set variablesInCurrentBranch=new HashSet(10);
  final Set variablesInPreviousBranches=new HashSet(10);
  final PsiCodeBlock body=statement.getBody();
  if (body == null) {
    return;
  }
  final PsiStatement[] statements=body.getStatements();
  for (int i=0; i < statements.length; i++) {
    final PsiStatement child=statements[i];
    if (child instanceof PsiDeclarationStatement) {
      final PsiDeclarationStatement declaration=(PsiDeclarationStatement)child;
      final PsiElement[] declaredElements=declaration.getDeclaredElements();
      for (int j=0; j < declaredElements.length; j++) {
        final PsiElement declaredElement=declaredElements[j];
        if (declaredElement instanceof PsiLocalVariable) {
          final PsiLocalVariable localVar=(PsiLocalVariable)declaredElement;
          variablesInCurrentBranch.add(localVar);
        }
      }
    }
    if (child instanceof PsiBreakStatement) {
      variablesInPreviousBranches.addAll(variablesInCurrentBranch);
      variablesInCurrentBranch.clear();
    }
    final LocalVariableAccessVisitor visitor=new LocalVariableAccessVisitor();
    child.accept(visitor);
    final Set accessedVariables=visitor.getAccessedVariables();
    for (Iterator iterator=accessedVariables.iterator(); iterator.hasNext(); ) {
      final PsiLocalVariable localVar=(PsiLocalVariable)iterator.next();
      if (variablesInPreviousBranches.contains(localVar)) {
        variablesInPreviousBranches.remove(localVar);
        registerVariableError(localVar);
      }
    }
  }
}
