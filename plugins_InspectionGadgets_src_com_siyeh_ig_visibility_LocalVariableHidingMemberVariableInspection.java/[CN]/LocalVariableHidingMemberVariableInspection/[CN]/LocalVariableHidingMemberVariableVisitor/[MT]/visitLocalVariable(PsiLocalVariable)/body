{
  super.visitLocalVariable(variable);
  if (m_ignoreStaticMethods) {
    final PsiMember member=PsiTreeUtil.getParentOfType(variable,PsiMethod.class,PsiClassInitializer.class);
    if (member != null && member.hasModifierProperty(PsiModifier.STATIC)) {
      return;
    }
  }
  final PsiClass aClass=checkFieldNames(variable);
  if (aClass == null) {
    return;
  }
  registerVariableError(variable,aClass);
}
