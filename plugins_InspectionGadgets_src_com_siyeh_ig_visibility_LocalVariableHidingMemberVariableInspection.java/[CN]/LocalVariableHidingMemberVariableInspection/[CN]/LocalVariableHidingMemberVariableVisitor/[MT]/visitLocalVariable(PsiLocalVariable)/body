{
  super.visitLocalVariable(variable);
  if (m_ignoreStaticMethods) {
    final PsiMethod aMethod=PsiTreeUtil.getParentOfType(variable,PsiMethod.class);
    if (aMethod == null) {
      return;
    }
    if (aMethod.hasModifierProperty(PsiModifier.STATIC)) {
      return;
    }
  }
  final PsiClass aClass=ClassUtils.getContainingClass(variable);
  if (aClass == null) {
    return;
  }
  final String variableName=variable.getName();
  final PsiField[] fields=aClass.getAllFields();
  for (  final PsiField field : fields) {
    if (checkFieldName(field,variableName,aClass)) {
      registerVariableError(variable);
    }
  }
}
