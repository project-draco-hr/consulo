{
  final String outFilePath=getPutRootPath(myFile);
  final List<Pair<SHAHash,Date>> pairs=GitHistoryUtils.onlyHashesHistory(myProject,new FilePathImpl(myFile),"--all","--date-order","--full-history","--sparse","--after=" + (since / 1000));
  if (pairs.isEmpty())   return;
  final String startAsString=hash.getString();
  Iterator<Pair<SHAHash,Date>> iterator=pairs.iterator();
  while (iterator.hasNext()) {
    Pair<SHAHash,Date> next=iterator.next();
    if (next.getFirst().getValue().equals(startAsString)) {
      break;
    }
  }
  OutputStream stream=null;
  try {
    stream=new BufferedOutputStream(new FileOutputStream(new File(outFilePath),true));
    while (iterator.hasNext()) {
      Pair<SHAHash,Date> next=iterator.next();
      stream.write(new StringBuilder().append(next.getFirst().getValue()).append(" ").append(next.getSecond().getTime()).append('\n').toString().getBytes(CharsetToolkit.UTF8_CHARSET));
    }
  }
 catch (  FileNotFoundException e) {
    throw new VcsException(e);
  }
catch (  IOException e) {
    throw new VcsException(e);
  }
 finally {
    try {
      if (stream != null) {
        stream.close();
      }
    }
 catch (    IOException e) {
      throw new VcsException(e);
    }
  }
}
