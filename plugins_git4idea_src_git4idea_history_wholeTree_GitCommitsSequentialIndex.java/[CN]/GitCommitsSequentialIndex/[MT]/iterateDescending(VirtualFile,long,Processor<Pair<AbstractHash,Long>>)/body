{
  final String key=FilePathsHelper.convertPath(file);
synchronized (myLock) {
    String pathToFile=myState.get(key);
    if (pathToFile == null || !new File(pathToFile).exists())     return;
    int idx;
    if (commitTime == -1) {
      idx=0;
    }
 else {
      idx=findLineTroughPacks(file,pathToFile,commitTime);
      if (idx == -1)       return;
    }
    List<Long> packs=getPacksWithLoad(file,pathToFile);
    final MyIterator iterator=new MyIterator(file,idx,packs.size());
    if (commitTime != -1) {
      while (iterator.hasNext()) {
        final Pair<AbstractHash,Long> next=iterator.next();
        if (next.getSecond() <= commitTime) {
          if (!consumer.process(next)) {
            return;
          }
          break;
        }
      }
    }
    while (iterator.hasNext()) {
      final Pair<AbstractHash,Long> next=iterator.next();
      if (!consumer.process(next))       break;
    }
  }
}
