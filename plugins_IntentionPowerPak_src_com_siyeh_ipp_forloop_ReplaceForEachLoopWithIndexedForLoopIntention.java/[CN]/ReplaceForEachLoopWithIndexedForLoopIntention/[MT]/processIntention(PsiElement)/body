{
  final PsiForeachStatement statement=(PsiForeachStatement)element.getParent();
  if (statement == null) {
    return;
  }
  final PsiExpression iteratedValue=statement.getIteratedValue();
  if (iteratedValue == null) {
    return;
  }
  final PsiParameter iterationParameter=statement.getIterationParameter();
  final PsiType type=iterationParameter.getType();
  final PsiType iteratedValueType=iteratedValue.getType();
  if (iteratedValueType == null) {
    return;
  }
  final boolean isArray=iteratedValueType instanceof PsiArrayType;
  final String iteratedValueText=getReferenceToIterate(iteratedValue,statement);
  final String lengthText;
  if (isArray) {
    lengthText=createVariableName(iteratedValueText + "Length",PsiType.INT,statement);
  }
 else {
    lengthText=createVariableName(iteratedValueText + "Size",PsiType.INT,statement);
  }
  @NonNls final StringBuilder newStatement=new StringBuilder();
  newStatement.append("for(int ");
  final String indexText=createVariableName("i",PsiType.INT,statement);
  newStatement.append(indexText);
  newStatement.append(" = 0, ");
  newStatement.append(lengthText);
  newStatement.append(" = ");
  if (iteratedValue instanceof PsiTypeCastExpression) {
    newStatement.append('(');
    newStatement.append(iteratedValueText);
    newStatement.append(')');
  }
 else {
    newStatement.append(iteratedValueText);
  }
  if (isArray) {
    newStatement.append(".length;");
  }
 else {
    newStatement.append(".size();");
  }
  newStatement.append(indexText);
  newStatement.append('<');
  newStatement.append(lengthText);
  newStatement.append(';');
  newStatement.append(indexText);
  newStatement.append("++)");
  newStatement.append("{ ");
  final Project project=statement.getProject();
  final CodeStyleSettings codeStyleSettings=CodeStyleSettingsManager.getSettings(project);
  if (codeStyleSettings.GENERATE_FINAL_LOCALS) {
    newStatement.append("final ");
  }
  newStatement.append(type.getCanonicalText());
  newStatement.append(' ');
  newStatement.append(iterationParameter.getName());
  newStatement.append(" = ");
  newStatement.append(iteratedValueText);
  if (isArray) {
    newStatement.append('[');
    newStatement.append(indexText);
    newStatement.append("];");
  }
 else {
    newStatement.append(".get(");
    newStatement.append(indexText);
    newStatement.append(");");
  }
  final PsiStatement body=statement.getBody();
  if (body == null) {
    return;
  }
  if (body instanceof PsiBlockStatement) {
    final PsiCodeBlock block=((PsiBlockStatement)body).getCodeBlock();
    final PsiElement[] children=block.getChildren();
    for (int i=1; i < children.length - 1; i++) {
      newStatement.append(children[i].getText());
    }
  }
 else {
    newStatement.append(body.getText());
  }
  newStatement.append('}');
  replaceStatementAndShorten(newStatement.toString(),statement);
}
