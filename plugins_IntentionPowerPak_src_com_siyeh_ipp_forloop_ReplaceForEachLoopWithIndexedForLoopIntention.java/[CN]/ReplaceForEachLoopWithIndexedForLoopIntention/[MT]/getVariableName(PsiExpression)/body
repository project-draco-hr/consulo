{
  if (expression instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)expression;
    final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
    final String name=methodExpression.getReferenceName();
    if (name == null) {
      return null;
    }
    if (name.startsWith("to") && name.length() > 2) {
      return StringUtil.decapitalize(name.substring(2));
    }
 else     if (name.startsWith("get") && name.length() > 3) {
      return StringUtil.decapitalize(name.substring(3));
    }
 else {
      return name;
    }
  }
 else   if (expression instanceof PsiTypeCastExpression) {
    final PsiTypeCastExpression castExpression=(PsiTypeCastExpression)expression;
    final PsiExpression operand=castExpression.getOperand();
    return getVariableName(operand);
  }
 else   if (expression instanceof PsiArrayAccessExpression) {
    final PsiArrayAccessExpression arrayAccessExpression=(PsiArrayAccessExpression)expression;
    final PsiExpression arrayExpression=arrayAccessExpression.getArrayExpression();
    return StringUtil.unpluralize(getVariableName(arrayExpression));
  }
 else   if (expression instanceof PsiParenthesizedExpression) {
    final PsiParenthesizedExpression parenthesizedExpression=(PsiParenthesizedExpression)expression;
    final PsiExpression innerExpression=parenthesizedExpression.getExpression();
    return getVariableName(innerExpression);
  }
 else   if (expression instanceof PsiJavaCodeReferenceElement) {
    final PsiJavaCodeReferenceElement referenceElement=(PsiJavaCodeReferenceElement)expression;
    final String referenceName=referenceElement.getReferenceName();
    if (referenceName == null) {
      return expression.getText();
    }
    return referenceName;
  }
  return null;
}
