{
  if (!(item instanceof MutableLookupElement))   return MyResult.normal;
  final Object object=((MutableLookupElement)item).getObject();
  final ExpectedTypeInfo[] expectedInfos=JavaCompletionUtil.EXPECTED_TYPES.getValue(location);
  if (expectedInfos == null)   return MyResult.normal;
  final PsiType itemType=JavaCompletionUtil.getPsiType(object);
  if (itemType == null)   return MyResult.normal;
  if (object instanceof PsiClass) {
    for (    final ExpectedTypeInfo info : expectedInfos) {
      if (TypeConversionUtil.erasure(info.getType().getDeepComponentType()).equals(TypeConversionUtil.erasure(itemType))) {
        return SkipAbstractExpectedTypeWeigher.getSkippingStatus(item,location) != SkipAbstractExpectedTypeWeigher.Result.ACCEPT ? MyResult.expectedNoSelect : MyResult.expected;
      }
    }
  }
  for (  final ExpectedTypeInfo expectedInfo : expectedInfos) {
    final PsiType defaultType=expectedInfo.getDefaultType();
    if (defaultType != expectedInfo.getType() && defaultType.isAssignableFrom(itemType)) {
      return MyResult.ofDefaultType;
    }
  }
  return MyResult.normal;
}
