{
  final Object object=item.getObject();
  if (object instanceof PsiClass && location.getCompletionType() != CompletionType.SMART)   return MyResult.normal;
  if (object instanceof PsiClass) {
    final PsiTypeParameter parameter=TYPE_PARAMETER.getValue(location);
    if (parameter != null && object.equals(PsiUtil.resolveClassInType(TypeConversionUtil.typeParameterErasure(parameter)))) {
      return MyResult.expected;
    }
  }
  ExpectedTypeInfo[] expectedInfos=JavaCompletionUtil.EXPECTED_TYPES.getValue(location);
  if (expectedInfos == null)   return MyResult.normal;
  PsiType itemType=JavaCompletionUtil.getPsiType(object);
  if (itemType == null)   return MyResult.normal;
  if (item instanceof LookupItem) {
    final LookupItem lookupItem=(LookupItem)item;
    final PsiSubstitutor substitutor=(PsiSubstitutor)lookupItem.getAttribute(LookupItem.SUBSTITUTOR);
    if (substitutor != null) {
      itemType=substitutor.substitute(itemType);
    }
  }
  if (object instanceof PsiClass) {
    for (    final ExpectedTypeInfo info : expectedInfos) {
      if (TypeConversionUtil.erasure(info.getType().getDeepComponentType()).equals(TypeConversionUtil.erasure(itemType))) {
        return SkipAbstractExpectedTypeWeigher.getSkippingStatus(item,location) != SkipAbstractExpectedTypeWeigher.Result.ACCEPT ? MyResult.expectedNoSelect : MyResult.expected;
      }
    }
  }
  for (  final ExpectedTypeInfo expectedInfo : expectedInfos) {
    final PsiType defaultType=expectedInfo.getDefaultType();
    final PsiType expectedType=expectedInfo.getType();
    if (defaultType != expectedType && defaultType.isAssignableFrom(itemType)) {
      return MyResult.ofDefaultType;
    }
    if (location.getCompletionType() == CompletionType.BASIC && expectedType.isAssignableFrom(itemType)) {
      return MyResult.expected;
    }
  }
  return MyResult.normal;
}
