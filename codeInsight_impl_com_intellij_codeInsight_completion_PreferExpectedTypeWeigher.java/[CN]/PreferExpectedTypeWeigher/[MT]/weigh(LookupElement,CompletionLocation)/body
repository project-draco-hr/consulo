{
  final Object object=item.getObject();
  if (object instanceof PsiClass && location.getCompletionType() != CompletionType.SMART)   return MyResult.normal;
  ExpectedTypeInfo[] expectedInfos=JavaCompletionUtil.EXPECTED_TYPES.getValue(location);
  if (expectedInfos == null) {
    if (object instanceof PsiClass) {
      final PsiTypeParameter parameter=TYPE_PARAMETER.getValue(location);
      if (parameter != null) {
        final PsiClassType[] types=parameter.getExtendsListTypes();
        if (types.length > 0) {
          if (object.equals(PsiUtil.resolveClassInType(types[0]))) {
            return MyResult.expected;
          }
        }
      }
    }
    return MyResult.normal;
  }
  final PsiType itemType=JavaCompletionUtil.getPsiType(object);
  if (itemType == null)   return MyResult.normal;
  if (object instanceof PsiClass) {
    for (    final ExpectedTypeInfo info : expectedInfos) {
      if (TypeConversionUtil.erasure(info.getType().getDeepComponentType()).equals(TypeConversionUtil.erasure(itemType))) {
        return SkipAbstractExpectedTypeWeigher.getSkippingStatus(item,location) != SkipAbstractExpectedTypeWeigher.Result.ACCEPT ? MyResult.expectedNoSelect : MyResult.expected;
      }
    }
  }
  for (  final ExpectedTypeInfo expectedInfo : expectedInfos) {
    final PsiType defaultType=expectedInfo.getDefaultType();
    if (defaultType != expectedInfo.getType() && defaultType.isAssignableFrom(itemType)) {
      return MyResult.ofDefaultType;
    }
  }
  return MyResult.normal;
}
