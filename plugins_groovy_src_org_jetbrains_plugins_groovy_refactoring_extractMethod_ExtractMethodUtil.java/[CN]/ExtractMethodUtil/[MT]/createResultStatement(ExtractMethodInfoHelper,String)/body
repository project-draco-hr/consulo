{
  String name=helper.getOutputName();
  PsiType type=helper.getOutputType();
  GrStatement[] statements=helper.getStatements();
  GrMethodCallExpression callExpression=createMethodCallByHelper(methodName,helper);
  if ((name == null || type == PsiType.VOID) && !helper.isReturnStatement())   return callExpression;
  GroovyElementFactory factory=GroovyElementFactory.getInstance(helper.getProject());
  if (helper.isReturnStatement()) {
    return factory.createStatementFromText("return " + callExpression.getText());
  }
 else   if (name != null && mustAddVariableDeclaration(statements,name)) {
    return factory.createVariableDeclaration(new String[0],name,callExpression,type.equalsToText("java.lang.Object") ? null : type,false);
  }
 else {
    return factory.createExpressionFromText(name + "= " + callExpression.getText(),null);
  }
}
