{
  super.visitMethodCallExpression(expression);
  if (!isChannelFactoryMethod(expression)) {
    return;
  }
  final PsiElement parent=expression.getParent();
  final PsiVariable boundVariable;
  if (parent instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignment=(PsiAssignmentExpression)parent;
    final PsiExpression lhs=assignment.getLExpression();
    if (!(lhs instanceof PsiReferenceExpression)) {
      return;
    }
    final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)lhs;
    final PsiElement referent=referenceExpression.resolve();
    if (referent == null || !(referent instanceof PsiVariable)) {
      return;
    }
    boundVariable=(PsiVariable)referent;
  }
 else   if (parent instanceof PsiVariable) {
    boundVariable=(PsiVariable)parent;
  }
 else {
    boundVariable=null;
  }
  final PsiStatement statement=PsiTreeUtil.getParentOfType(expression,PsiStatement.class);
  if (statement == null) {
    return;
  }
  PsiStatement nextStatement=PsiTreeUtil.getNextSiblingOfType(statement,PsiStatement.class);
  while (!(nextStatement instanceof PsiTryStatement)) {
    if (!(nextStatement instanceof PsiDeclarationStatement)) {
      registerError(expression,expression);
      return;
    }
    if (boundVariable != null) {
      if (VariableAccessUtils.variableIsUsed(boundVariable,nextStatement)) {
        registerError(expression,expression);
        return;
      }
    }
    nextStatement=PsiTreeUtil.getNextSiblingOfType(nextStatement,PsiStatement.class);
  }
  PsiTryStatement tryStatement=(PsiTryStatement)nextStatement;
  if (boundVariable != null && resourceIsClosedInFinally(tryStatement,boundVariable)) {
    return;
  }
  if (isChannelFactoryClosedInFinally(expression,tryStatement)) {
    return;
  }
  registerError(expression,expression);
}
