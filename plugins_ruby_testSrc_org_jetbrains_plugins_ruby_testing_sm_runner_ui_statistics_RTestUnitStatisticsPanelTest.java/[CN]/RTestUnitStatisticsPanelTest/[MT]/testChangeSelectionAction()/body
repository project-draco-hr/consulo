{
  final Marker onSelectedHappend=new Marker();
  final Ref<SMTestProxy> proxyRef=new Ref<SMTestProxy>();
  final Ref<Boolean> focusRequestedRef=new Ref<Boolean>();
  myStatisticsPanel.addChangeSelectionListener(new TestProxySelectionChangedListener(){
    public void onChangeSelection(    @Nullable final SMTestProxy selectedTestProxy,    @NotNull final Object sender,    final boolean requestFocus){
      onSelectedHappend.set();
      proxyRef.set(selectedTestProxy);
      focusRequestedRef.set(requestFocus);
    }
  }
);
  final SMTestProxy rootSuite=createSuiteProxy("rootSuite");
  final SMTestProxy suite1=createSuiteProxy("suite1",rootSuite);
  final SMTestProxy test1=createTestProxy("test1",suite1);
  myStatisticsPanel.selectProxy(suite1);
  myStatisticsPanel.selectRow(1);
  assertEquals(test1,myStatisticsPanel.getSelectedItem());
  myStatisticsPanel.createChangeSelectionAction().run();
  assertTrue(onSelectedHappend.isSet());
  assertEquals(test1,proxyRef.get());
  assertTrue(focusRequestedRef.get());
  onSelectedHappend.reset();
  proxyRef.set(null);
  focusRequestedRef.set(null);
  myStatisticsPanel.selectProxy(rootSuite);
  myStatisticsPanel.selectRow(1);
  assertEquals(suite1,myStatisticsPanel.getSelectedItem());
  myStatisticsPanel.createChangeSelectionAction().run();
  assertTrue(onSelectedHappend.isSet());
  assertEquals(suite1,proxyRef.get());
  assertTrue(focusRequestedRef.get());
  onSelectedHappend.reset();
  proxyRef.set(null);
  focusRequestedRef.set(null);
  myStatisticsPanel.selectProxy(rootSuite);
  myStatisticsPanel.selectRow(0);
  assertEquals(rootSuite,myStatisticsPanel.getSelectedItem());
  myStatisticsPanel.createChangeSelectionAction().run();
  assertTrue(onSelectedHappend.isSet());
  assertEquals(rootSuite,proxyRef.get());
  assertTrue(focusRequestedRef.get());
}
