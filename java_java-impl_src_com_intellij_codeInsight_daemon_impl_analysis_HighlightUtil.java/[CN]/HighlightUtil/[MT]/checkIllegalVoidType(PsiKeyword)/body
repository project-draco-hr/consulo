{
  if (!PsiKeyword.VOID.equals(type.getText()))   return null;
  PsiElement parent=type.getParent();
  if (parent instanceof PsiTypeElement) {
    PsiElement typeOwner=parent.getParent();
    if (typeOwner instanceof PsiMethod) {
      if (((PsiMethod)typeOwner).getReturnTypeElement() == parent)       return null;
    }
 else     if (typeOwner instanceof PsiClassObjectAccessExpression && TypeConversionUtil.isVoidType(((PsiClassObjectAccessExpression)typeOwner).getOperand().getType()) || typeOwner != null && PsiUtilCore.hasErrorElementChild(typeOwner)) {
      return null;
    }
 else     if (typeOwner instanceof JavaCodeFragment) {
      if (typeOwner.getUserData(PsiUtil.VALID_VOID_TYPE_IN_CODE_FRAGMENT) != null)       return null;
    }
  }
  String description=JavaErrorMessages.message("illegal.type.void");
  return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(type).descriptionAndTooltip(description).create();
}
