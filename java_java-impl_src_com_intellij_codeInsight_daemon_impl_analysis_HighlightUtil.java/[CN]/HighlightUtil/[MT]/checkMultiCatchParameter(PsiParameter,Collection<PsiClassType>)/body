{
  for (  PsiTypeElement typeElement : PsiTreeUtil.getChildrenOfTypeAsList(parameter.getTypeElement(),PsiTypeElement.class)) {
    final PsiType catchType=typeElement.getType();
    if (catchType instanceof PsiClassType && ExceptionUtil.isUncheckedExceptionOrSuperclass((PsiClassType)catchType))     continue;
    boolean used=false;
    for (    PsiClassType exceptionType : thrownTypes) {
      if (exceptionType.isAssignableFrom(catchType) || catchType.isAssignableFrom(exceptionType)) {
        used=true;
        break;
      }
    }
    if (used)     continue;
    final String description=JavaErrorMessages.message("exception.never.thrown.try",formatType(catchType));
    final HighlightInfo errorResult=HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,typeElement,description);
    QuickFixAction.registerQuickFixAction(errorResult,new DeleteMultiCatchFix(typeElement));
    return errorResult;
  }
  return null;
}
