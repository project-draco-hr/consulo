{
  PsiExpression operand=expression.getOperand();
  PsiTypeElement typeElement=expression.getCheckType();
  if (typeElement == null)   return null;
  PsiType checkType=typeElement.getType();
  PsiType operandType=operand.getType();
  if (operandType == null)   return null;
  if (operandType instanceof PsiLambdaExpressionType) {
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,expression,"Lambda expression is not expected here");
  }
  if (TypeConversionUtil.isPrimitiveAndNotNull(operandType) || TypeConversionUtil.isPrimitiveAndNotNull(checkType) || !TypeConversionUtil.areTypesConvertible(operandType,checkType)) {
    String message=JavaErrorMessages.message("inconvertible.type.cast",formatType(operandType),formatType(checkType));
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,expression,message);
  }
  return null;
}
