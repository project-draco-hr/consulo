{
  PsiElement parent=expr.getParent();
  if (parent instanceof PsiIfStatement || parent instanceof PsiWhileStatement || parent instanceof PsiForStatement && expr.equals(((PsiForStatement)parent).getCondition()) || parent instanceof PsiDoWhileStatement && expr.equals(((PsiDoWhileStatement)parent).getCondition())) {
    if (expr.getNextSibling() instanceof PsiErrorElement)     return null;
    PsiType type=expr.getType();
    if (!TypeConversionUtil.isBooleanType(type)) {
      final HighlightInfo info=createIncompatibleTypeHighlightInfo(PsiType.BOOLEAN,type,expr.getTextRange());
      if (expr instanceof PsiMethodCallExpression) {
        final PsiMethodCallExpression methodCall=(PsiMethodCallExpression)expr;
        final PsiMethod method=methodCall.resolveMethod();
        if (method != null && PsiType.VOID.equals(method.getReturnType())) {
          IntentionAction fix=QUICK_FIX_FACTORY.createMethodReturnFix(method,PsiType.BOOLEAN,true);
          QuickFixAction.registerQuickFixAction(info,fix);
        }
      }
      return info;
    }
  }
  return null;
}
