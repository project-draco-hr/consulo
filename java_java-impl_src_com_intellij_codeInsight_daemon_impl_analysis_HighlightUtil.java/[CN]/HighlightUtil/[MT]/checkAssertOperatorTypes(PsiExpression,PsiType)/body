{
  if (type == null)   return null;
  if (!(expression.getParent() instanceof PsiAssertStatement)) {
    return null;
  }
  PsiAssertStatement assertStatement=(PsiAssertStatement)expression.getParent();
  if (expression == assertStatement.getAssertCondition() && !TypeConversionUtil.isBooleanType(type)) {
    return createIncompatibleTypeHighlightInfo(PsiType.BOOLEAN,type,expression.getTextRange(),0);
  }
  if (expression == assertStatement.getAssertDescription() && TypeConversionUtil.isVoidType(type)) {
    String description=JavaErrorMessages.message("void.type.is.not.allowed");
    return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(expression).descriptionAndTooltip(description).create();
  }
  return null;
}
