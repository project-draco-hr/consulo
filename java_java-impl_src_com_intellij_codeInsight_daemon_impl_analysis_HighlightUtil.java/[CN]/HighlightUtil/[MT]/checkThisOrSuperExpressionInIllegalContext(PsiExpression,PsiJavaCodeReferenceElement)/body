{
  if (expr instanceof PsiSuperExpression && !(expr.getParent() instanceof PsiReferenceExpression)) {
    final int o=expr.getTextRange().getEndOffset();
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,o,o + 1,JavaErrorMessages.message("dot.expected.after.super.or.this"));
  }
  final PsiClass aClass;
  if (qualifier != null) {
    final PsiElement resolved=qualifier.resolve();
    if (resolved != null && !(resolved instanceof PsiClass)) {
      return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,qualifier,JavaErrorMessages.message("class.expected"));
    }
    aClass=(PsiClass)resolved;
  }
 else {
    aClass=PsiTreeUtil.getParentOfType(expr,PsiClass.class);
  }
  if (aClass == null)   return null;
  if (!HighlightClassUtil.hasEnclosingInstanceInScope(aClass,expr,false) && !resolvesToImmediateSuperInterface(expr,qualifier,aClass)) {
    return HighlightClassUtil.reportIllegalEnclosingUsage(expr,null,aClass,expr);
  }
  return null;
}
