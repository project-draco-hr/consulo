{
  if (PsiTreeUtil.getParentOfType(expression,PsiReferenceParameterList.class) != null)   return null;
  PsiElement element=expression.getParent();
  while (element != null) {
    if (isSuperOrThisMethodCall(element)) {
      PsiElement parentClass=new PsiMatcherImpl(element).parent(PsiMatchers.hasClass(PsiExpressionStatement.class)).parent(PsiMatchers.hasClass(PsiCodeBlock.class)).parent(PsiMatchers.hasClass(PsiMethod.class)).dot(PsiMatchers.isConstructor(true)).parent(PsiMatchers.hasClass(PsiClass.class)).getElement();
      if (parentClass == null) {
        return null;
      }
      PsiClass aClass=(PsiClass)parentClass;
      if (PsiUtil.isInnerClass(aClass) && referencedClass == aClass.getContainingClass())       return null;
      if (!InheritanceUtil.isInheritorOrSelf(aClass,referencedClass,true))       return null;
      if (expression instanceof PsiReferenceExpression && !thisOrSuperReference(((PsiReferenceExpression)expression).getQualifierExpression(),aClass)) {
        return null;
      }
      return createMemberReferencedError(resolvedName,expression.getTextRange());
    }
    element=element.getParent();
  }
  return null;
}
