{
  if (!(initializer instanceof PsiArrayInitializerExpression))   return null;
  final PsiType arrayInitializerType=initializer.getType();
  if (!(arrayInitializerType instanceof PsiArrayType))   return null;
  final PsiType componentType=((PsiArrayType)arrayInitializerType).getComponentType();
  final PsiArrayInitializerExpression arrayInitializer=(PsiArrayInitializerExpression)initializer;
  boolean arrayTypeFixChecked=false;
  VariableArrayTypeFix fix=null;
  final Collection<HighlightInfo> result=Lists.newArrayList();
  final PsiExpression[] initializers=arrayInitializer.getInitializers();
  for (  PsiExpression expression : initializers) {
    final HighlightInfo info=checkArrayInitializerCompatibleTypes(expression,componentType);
    if (info != null) {
      result.add(info);
      if (!arrayTypeFixChecked) {
        final PsiType checkResult=sameType(initializers);
        fix=checkResult != null ? new VariableArrayTypeFix(arrayInitializer,checkResult) : null;
        arrayTypeFixChecked=true;
      }
      if (fix != null) {
        QuickFixAction.registerQuickFixAction(info,fix);
      }
    }
  }
  return result;
}
