{
  final PsiManager psiManager=PsiManager.getInstance(myProject);
  final FileIndex projectFileIndex=ProjectRootManager.getInstance(myProject).getFileIndex();
  projectFileIndex.iterateContent(new ContentIterator(){
    public boolean processFile(    VirtualFile fileOrDir){
      if (fileOrDir.isDirectory() && projectFileIndex.isInSourceContent(fileOrDir)) {
        PsiPackage aPackage=psiManager.findDirectory(fileOrDir).getPackage();
        if (aPackage != null) {
          addPackage(aPackage);
        }
      }
      return true;
    }
  }
);
  TreeUtil.sort(myModel,new Comparator(){
    public int compare(    Object o1,    Object o2){
      DefaultMutableTreeNode n1=(DefaultMutableTreeNode)o1;
      DefaultMutableTreeNode n2=(DefaultMutableTreeNode)o2;
      PsiNamedElement element1=(PsiNamedElement)n1.getUserObject();
      PsiNamedElement element2=(PsiNamedElement)n2.getUserObject();
      return element1.getName().compareToIgnoreCase(element2.getName());
    }
  }
);
}
