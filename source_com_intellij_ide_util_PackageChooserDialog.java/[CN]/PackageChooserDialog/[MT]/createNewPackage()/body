{
  final PsiPackage selectedPackage=getTreeSelection();
  if (selectedPackage == null)   return;
  final String newPackageName=Messages.showInputDialog(myProject,IdeBundle.message("prompt.enter.a.new.package.name"),IdeBundle.message("title.new.package"),Messages.getQuestionIcon(),"",new InputValidator(){
    public boolean checkInput(    final String inputString){
      return inputString != null && inputString.length() > 0;
    }
    public boolean canClose(    final String inputString){
      return checkInput(inputString);
    }
  }
);
  if (newPackageName == null)   return;
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    public void run(){
      final Runnable action=new Runnable(){
        public void run(){
          try {
            String newQualifiedName=selectedPackage.getQualifiedName();
            if (!Comparing.strEqual(newQualifiedName,""))             newQualifiedName+=".";
            newQualifiedName+=newPackageName;
            final PsiDirectory dir=PackageUtil.findOrCreateDirectoryForPackage(myProject,newQualifiedName,null,false);
            if (dir == null)             return;
            final PsiPackage newPackage=dir.getPackage();
            DefaultMutableTreeNode node=(DefaultMutableTreeNode)myTree.getSelectionPath().getLastPathComponent();
            final DefaultMutableTreeNode newChild=new DefaultMutableTreeNode();
            newChild.setUserObject(newPackage);
            node.add(newChild);
            final DefaultTreeModel model=(DefaultTreeModel)myTree.getModel();
            model.nodeStructureChanged(node);
            final TreePath selectionPath=myTree.getSelectionPath();
            TreePath path;
            if (selectionPath == null) {
              path=new TreePath(newChild.getPath());
            }
 else {
              path=selectionPath.pathByAddingChild(newChild);
            }
            myTree.setSelectionPath(path);
            myTree.scrollPathToVisible(path);
            myTree.expandPath(path);
          }
 catch (          IncorrectOperationException e) {
            Messages.showMessageDialog(getContentPane(),StringUtil.getMessage(e),CommonBundle.getErrorTitle(),Messages.getErrorIcon());
            if (LOG.isDebugEnabled()) {
              LOG.debug(e);
            }
          }
        }
      }
;
      ApplicationManager.getApplication().runReadAction(action);
    }
  }
,IdeBundle.message("command.create.new.package"),null);
}
