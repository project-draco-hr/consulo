{
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  if (!isValidBase())   return;
  final Object[] storedInfo=new Object[1];
  if (myCurrentViewName != null) {
    final HierarchyTreeBuilder builder=myBuilders.get(myCurrentViewName);
    storedInfo[0]=builder.storeExpandedAndSelectedInfo();
  }
  final PsiElement base=mySmartPsiElementPointer.getElement();
  final String[] name=new String[]{myCurrentViewName};
  dispose();
  setHierarchyBase(base);
  getComponent().validate();
  if (myIsInterface && TYPE_HIERARCHY_TYPE.equals(name[0])) {
    name[0]=SUBTYPES_HIERARCHY_TYPE;
  }
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      changeView(name[0]);
      if (storedInfo != null) {
        final HierarchyTreeBuilder builder=myBuilders.get(myCurrentViewName);
        builder.restoreExpandedAndSelectedInfo(storedInfo[0]);
      }
    }
  }
);
}
