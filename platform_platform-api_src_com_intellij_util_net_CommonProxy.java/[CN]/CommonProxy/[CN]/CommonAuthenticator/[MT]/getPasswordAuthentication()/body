{
  String host=getRequestingHost();
  if (host == null) {
    final InetAddress site=getRequestingSite();
    host=site.getHostName();
  }
  final int port=getRequestingPort();
  final Map<Pair<String,Integer>,NonStaticAuthenticator> copy;
synchronized (myLock) {
    if (myNoProxy.contains(new HostInfo(getRequestingProtocol(),host,port)))     return null;
    copy=new HashMap<Pair<String,Integer>,NonStaticAuthenticator>(myCustomAuth);
  }
  if (!copy.isEmpty()) {
    final Pair<String,Integer> hostInfo=Pair.create(getRequestingHost(),getRequestingPort());
    final NonStaticAuthenticator authenticator1=copy.get(hostInfo);
    if (authenticator1 != null) {
      prepareAuthenticator(authenticator1);
      return authenticator1.getPasswordAuthentication();
    }
  }
  if (myHttpConfigurable.USE_HTTP_PROXY) {
    return myHttpConfigurable.getPromptedAuthentication(getRequestingHost() + ":" + getRequestingPort(),getRequestingPrompt());
  }
 else   if (myHttpConfigurable.USE_PROXY_PAC) {
    final PasswordAuthentication password=myHttpConfigurable.getGenericPassword(getRequestingHost(),getRequestingPort());
    if (password != null) {
      return password;
    }
    return myHttpConfigurable.getGenericPromptedAuthentication(getRequestingHost(),getRequestingPrompt(),getRequestingPort(),true);
  }
 else {
    return myHttpConfigurable.getGenericPromptedAuthentication(getRequestingHost(),getRequestingPrompt(),getRequestingPort(),false);
  }
}
