{
  final String siteStr=getRequestingSite() == null ? null : getRequestingSite().toString();
  LOG.debug("CommonAuthenticator.getPasswordAuthentication called for " + siteStr);
  String host=getRequestingHost();
  if (host == null) {
    final InetAddress site=getRequestingSite();
    if (site != null) {
      host=site.getHostName();
    }
 else     if (getRequestingURL() != null) {
      host=getRequestingURL().getHost();
    }
  }
  host=host == null ? "" : host;
  final int port=getRequestingPort();
  final Map<Pair<String,Integer>,NonStaticAuthenticator> copy;
synchronized (myLock) {
    if (myNoProxy.contains(new HostInfo(getRequestingProtocol(),host,port))) {
      LOG.debug("CommonAuthenticator.getPasswordAuthentication found host in no proxies list (" + siteStr + ")");
      return null;
    }
    copy=new HashMap<Pair<String,Integer>,NonStaticAuthenticator>(myCustomAuth);
  }
  if (!copy.isEmpty()) {
    final Pair<String,Integer> hostInfo=Pair.create(host,getRequestingPort());
    final NonStaticAuthenticator authenticator1=copy.get(hostInfo);
    if (authenticator1 != null) {
      prepareAuthenticator(authenticator1);
      LOG.debug("CommonAuthenticator.getPasswordAuthentication found custom authenticator for " + siteStr + ", "+ authenticator1.toString());
      final PasswordAuthentication authentication=authenticator1.getPasswordAuthentication();
      logAuthentication(authentication);
      return authentication;
    }
  }
  if (myHttpConfigurable.USE_HTTP_PROXY) {
    LOG.debug("CommonAuthenticator.getPasswordAuthentication will return common defined proxy");
    final PasswordAuthentication authentication=myHttpConfigurable.getPromptedAuthentication(host + ":" + getRequestingPort(),getRequestingPrompt());
    logAuthentication(authentication);
    return authentication;
  }
 else   if (myHttpConfigurable.USE_PROXY_PAC) {
    LOG.debug("CommonAuthenticator.getPasswordAuthentication will return autodetected proxy");
    final PasswordAuthentication password=myHttpConfigurable.getGenericPassword(getRequestingHost(),getRequestingPort());
    if (password != null) {
      logAuthentication(password);
      return password;
    }
    final PasswordAuthentication authentication=myHttpConfigurable.getGenericPromptedAuthentication(host,getRequestingPrompt(),getRequestingPort(),true);
    logAuthentication(authentication);
    return authentication;
  }
 else {
    LOG.debug("CommonAuthenticator.getPasswordAuthentication generic authentication will be asked");
    final PasswordAuthentication authentication=myHttpConfigurable.getGenericPromptedAuthentication(host,getRequestingPrompt(),getRequestingPort(),false);
    logAuthentication(authentication);
    return authentication;
  }
}
