{
  ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
  GraphicsEnvironment graphicsEnvironment=GraphicsEnvironment.getLocalGraphicsEnvironment();
  String[] fontNames=graphicsEnvironment.getAvailableFontFamilyNames();
  for (  final String fontName : fontNames) {
    if (fontName.endsWith(".bold") || fontName.endsWith(".italic")) {
      continue;
    }
    try {
      Font plainFont=new Font(fontName,Font.PLAIN,OptionsConstants.DEFAULT_EDITOR_FONT_SIZE);
      if (plainFont.canDisplay('W')) {
        Font boldFont=plainFont.deriveFont(Font.BOLD);
        if (progress != null) {
          progress.setText(ApplicationBundle.message("progress.analysing.font",fontName));
        }
        FontMetrics plainMetrics=getFontMetrics(plainFont);
        FontMetrics boldMetrics=getFontMetrics(boldFont);
        if (plainMetrics.getDescent() < 0 || boldMetrics.getDescent() < 0 || plainMetrics.getAscent() < 0 || boldMetrics.getAscent() < 0) {
          continue;
        }
        int plainL=plainMetrics.charWidth('l');
        int boldL=boldMetrics.charWidth('l');
        int plainW=plainMetrics.charWidth('W');
        int boldW=boldMetrics.charWidth('W');
        int plainSpace=plainMetrics.charWidth(' ');
        int boldSpace=boldMetrics.charWidth(' ');
        if (plainL <= 0 || boldL <= 0 || plainW <= 0 || boldW <= 0 || plainSpace <= 0 || boldSpace <= 0) {
          continue;
        }
        myFontNames.add(fontName);
        if (plainL == plainW && plainL == boldL && plainW == boldW && plainSpace == boldSpace) {
          myMonospacedFontNames.add(fontName);
        }
      }
    }
 catch (    Throwable e) {
    }
  }
}
