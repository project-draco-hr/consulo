{
  final GenericElementSignatureProvider provider=new GenericElementSignatureProvider();
  final String path=readNext(false);
  if (path == null)   return null;
  final VirtualFile file=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(path));
  if (file == null)   return null;
  PsiFile psiFile=PsiManager.getInstance(project).findFile(file);
  if (psiFile == null)   return null;
  final String signature=readNext(false);
  final PsiElement element=provider.restoreBySignature(psiFile,signature,new StringBuilder());
  if (element == null)   return null;
  final String startStr=readNext(false);
  if (startStr == null)   return null;
  final int start=Integer.parseInt(startStr);
  final String endStr=readNext(false);
  if (endStr == null)   return null;
  final int end=Integer.parseInt(endStr);
  final String nonCodeUsageStr=readNext(false);
  if (nonCodeUsageStr == null)   return null;
  final boolean nonCodeUsage=Boolean.parseBoolean(nonCodeUsageStr);
  final String dynamicUsageStr=readNext(false);
  if (dynamicUsageStr == null)   return null;
  final boolean dynamicUsage=Boolean.parseBoolean(dynamicUsageStr);
  final String text=readNext(true);
  if (text == null)   return null;
  final UsageInfo info=new UsageInfo(element,start,end,nonCodeUsage);
  info.setDynamicUsage(dynamicUsage);
  return info;
}
