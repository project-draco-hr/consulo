{
  if (aClass instanceof PsiAnonymousClass) {
    final PsiAnonymousClass anAnonymousClass=(PsiAnonymousClass)aClass;
    final InnerClassReferenceVisitor visitor=new InnerClassReferenceVisitor(anAnonymousClass);
    anAnonymousClass.accept(visitor);
    if (!visitor.canInnerClassBeStatic()) {
      return;
    }
    final PsiJavaCodeReferenceElement classNameIdentifier=anAnonymousClass.getBaseClassReference();
    registerError(classNameIdentifier);
  }
}
