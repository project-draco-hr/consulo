{
  final CommittedChangesCache cache=CommittedChangesCache.getInstance(myProject);
  if (!cache.hasCachesForAllRoots()) {
    if (cacheOnly)     return;
    if (!CacheSettingsDialog.showSettingsDialog(myProject))     return;
  }
  cache.getProjectChangesAsync(mySettings,myMaxCount,cacheOnly,new Consumer<List<CommittedChangeList>>(){
    public void consume(    final List<CommittedChangeList> committedChangeLists){
      myChangesFromProvider=committedChangeLists;
      updateFilteredModel(false);
    }
  }
,new Consumer<List<VcsException>>(){
    public void consume(    final List<VcsException> vcsExceptions){
      AbstractVcsHelper.getInstance(myProject).showErrors(vcsExceptions,"Error refreshing VCS history");
    }
  }
);
}
