{
  scope.accept(new PsiRecursiveElementVisitor(){
    @Override public void visitErrorElement(    PsiErrorElement element){
      super.visitErrorElement(element);
      CommonProblemDescriptor descriptor;
      final TextRange textRange=element.getTextRange();
      if (textRange.getLength() > 0) {
        descriptor=manager.createProblemDescriptor(element,element.getErrorDescription(),ProblemHighlightType.ERROR,null);
      }
 else {
        descriptor=manager.createProblemDescriptor(element.getParent(),new TextRange(element.getStartOffsetInParent(),element.getStartOffsetInParent() + 1),element.getErrorDescription(),ProblemHighlightType.ERROR);
      }
      final RefElement refElement=globalContext.getRefManager().getReference(element.getContainingFile());
      problemDescriptionsProcessor.addProblemElement(refElement,descriptor);
    }
  }
);
}
