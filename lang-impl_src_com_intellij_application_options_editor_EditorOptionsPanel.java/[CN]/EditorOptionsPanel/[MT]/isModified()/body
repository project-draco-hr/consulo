{
  EditorSettingsExternalizable editorSettings=EditorSettingsExternalizable.getInstance();
  CodeInsightSettings codeInsightSettings=CodeInsightSettings.getInstance();
  UISettings uiSettings=UISettings.getInstance();
  boolean isModified=isModified(myCbSmoothScrolling,editorSettings.isSmoothScrolling());
  isModified|=isModified(myCbHighlightBraces,codeInsightSettings.HIGHLIGHT_BRACES);
  isModified|=isModified(myCbHighlightScope,codeInsightSettings.HIGHLIGHT_SCOPE);
  isModified|=isModified(myCbHighlightIdentifierUnderCaret,codeInsightSettings.HIGHLIGHT_IDENTIFIER_UNDER_CARET);
  isModified|=isModified(myCbVirtualSpace,editorSettings.isVirtualSpace());
  isModified|=isModified(myCbCaretInsideTabs,editorSettings.isCaretInsideTabs());
  isModified|=isModified(myCbVirtualPageAtBottom,editorSettings.isAdditionalPageAtBottom());
  isModified|=getMaxClipboardContents() != uiSettings.MAX_CLIPBOARD_CONTENTS;
  isModified|=!getStripTrailingSpacesValue().equals(editorSettings.getStripTrailingSpaces());
  isModified|=isModified(myCbEnableDnD,editorSettings.isDndEnabled());
  isModified|=isModified(myCbEnableWheelFontChange,editorSettings.isWheelFontChangeEnabled());
  isModified|=isModified(myCbHonorCamelHumpsWhenSelectingByClicking,editorSettings.isMouseClickSelectionHonorsCamelWords());
  isModified|=myRbPreferMovingCaret.isSelected() != editorSettings.isRefrainFromScrolling();
  isModified|=isModified(myRecentFilesLimitField,UISettings.getInstance().RECENT_FILES_LIMIT);
  isModified|=isModified(myCbRenameLocalVariablesInplace,editorSettings.isVariableInplaceRenameEnabled());
  isModified|=myErrorHighlightingPanel.isModified();
  return isModified;
}
