{
  EditorSettingsExternalizable editorSettings=EditorSettingsExternalizable.getInstance();
  CodeInsightSettings codeInsightSettings=CodeInsightSettings.getInstance();
  UISettings uiSettings=UISettings.getInstance();
  boolean isModified=isModified(myCbModifiedTabsMarkedWithAsterisk,uiSettings.MARK_MODIFIED_TABS_WITH_ASTERISK);
  isModified|=isModified(myCbBlinkCaret,editorSettings.isBlinkCaret());
  isModified|=isModified(myBlinkIntervalField,editorSettings.getBlinkPeriod());
  isModified|=isModified(myCbBlockCursor,editorSettings.isBlockCursor());
  isModified|=isModified(myCbRightMargin,editorSettings.isRightMarginShown());
  isModified|=isModified(myCbShowLineNumbers,editorSettings.isLineNumbersShown());
  isModified|=isModified(myCbShowWhitespaces,editorSettings.isWhitespacesShown());
  isModified|=isModified(myCbSmoothScrolling,editorSettings.isSmoothScrolling());
  isModified|=isModified(myCbHighlightBraces,codeInsightSettings.HIGHLIGHT_BRACES);
  isModified|=isModified(myCbHighlightScope,codeInsightSettings.HIGHLIGHT_SCOPE);
  isModified|=isModified(myCbVirtualSpace,editorSettings.isVirtualSpace());
  isModified|=isModified(myCbCaretInsideTabs,editorSettings.isCaretInsideTabs());
  isModified|=isModified(myCbVirtualPageAtBottom,editorSettings.isAdditionalPageAtBottom());
  isModified|=getMaxClipboardContents() != uiSettings.MAX_CLIPBOARD_CONTENTS;
  isModified|=getReformatPastedBlockValue() != codeInsightSettings.REFORMAT_ON_PASTE;
  isModified|=!getStripTrailingSpacesValue().equals(editorSettings.getStripTrailingSpaces());
  isModified|=isModified(myCbSmartHome,editorSettings.isSmartHome());
  isModified|=isModified(myCbSmartEnd,codeInsightSettings.SMART_END_ACTION);
  isModified|=isModified(myCbSmartIndentOnEnter,codeInsightSettings.SMART_INDENT_ON_ENTER);
  isModified|=isModified(myCbInsertPairBracket,codeInsightSettings.AUTOINSERT_PAIR_BRACKET);
  isModified|=isModified(myCbInsertPairQuote,codeInsightSettings.AUTOINSERT_PAIR_QUOTE);
  isModified|=isModified(myCbCamelWords,editorSettings.isCamelWords());
  isModified|=isModified(myCbFolding,editorSettings.isFoldingOutlineShown());
  isModified|=isModified(myCbEnableDnD,editorSettings.isDndEnabled());
  isModified|=isModified(myCbEnableWheelFontChange,editorSettings.isWheelFontChangeEnabled());
  isModified|=isModified(myCbHonorCamelHumpsWhenSelectingByClicking,editorSettings.isMouseClickSelectionHonorsCamelWords());
  isModified|=myRbPreferMovingCaret.isSelected() != editorSettings.isRefrainFromScrolling();
  isModified|=isModified(myCloseNonModifiedFilesFirstRadio,uiSettings.CLOSE_NON_MODIFIED_FILES_FIRST);
  isModified|=isModified(myActivateMRUEditorOnCloseRadio,uiSettings.ACTIVATE_MRU_EDITOR_ON_CLOSE);
  isModified|=isModified(myEditorTabLimitField,UISettings.getInstance().EDITOR_TAB_LIMIT);
  isModified|=isModified(myRecentFilesLimitField,UISettings.getInstance().RECENT_FILES_LIMIT);
  int tabPlacement=((Integer)myEditorTabPlacement.getSelectedItem()).intValue();
  isModified|=tabPlacement != uiSettings.EDITOR_TAB_PLACEMENT;
  isModified|=myHideKnownExtensions.isSelected() != uiSettings.HIDE_KNOWN_EXTENSION_IN_TABS;
  isModified|=myScrollTabLayoutInEditorCheckBox.isSelected() != uiSettings.SCROLL_TAB_LAYOUT_IN_EDITOR;
  isModified|=myErrorHighlightingPanel.isModified();
  for (  EditorOptionsProvider provider : Extensions.getExtensions(EditorOptionsProvider.EP_NAME)) {
    isModified|=provider.isModified();
  }
  for (  CodeFoldingOptionsProvider provider : Extensions.getExtensions(CodeFoldingOptionsProvider.EP_NAME)) {
    isModified|=provider.isModified();
  }
  return isModified;
}
