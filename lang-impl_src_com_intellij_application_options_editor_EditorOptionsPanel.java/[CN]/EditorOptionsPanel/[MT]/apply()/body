{
  EditorSettingsExternalizable editorSettings=EditorSettingsExternalizable.getInstance();
  CodeInsightSettings codeInsightSettings=CodeInsightSettings.getInstance();
  UISettings uiSettings=UISettings.getInstance();
  editorSettings.setSmoothScrolling(myCbSmoothScrolling.isSelected());
  codeInsightSettings.HIGHLIGHT_BRACES=myCbHighlightBraces.isSelected();
  codeInsightSettings.HIGHLIGHT_SCOPE=myCbHighlightScope.isSelected();
  editorSettings.setVirtualSpace(myCbVirtualSpace.isSelected());
  editorSettings.setCaretInsideTabs(myCbCaretInsideTabs.isSelected());
  editorSettings.setAdditionalPageAtBottom(myCbVirtualPageAtBottom.isSelected());
  boolean uiSettingsChanged=false;
  int maxClipboardContents=getMaxClipboardContents();
  if (uiSettings.MAX_CLIPBOARD_CONTENTS != maxClipboardContents) {
    uiSettings.MAX_CLIPBOARD_CONTENTS=maxClipboardContents;
    uiSettingsChanged=true;
  }
  if (uiSettingsChanged) {
    uiSettings.fireUISettingsChanged();
  }
  if (STRIP_NONE.equals(myStripTrailingSpacesCombo.getSelectedItem())) {
    editorSettings.setStripTrailingSpaces(EditorSettingsExternalizable.STRIP_TRAILING_SPACES_NONE);
  }
 else   if (STRIP_CHANGED.equals(myStripTrailingSpacesCombo.getSelectedItem())) {
    editorSettings.setStripTrailingSpaces(EditorSettingsExternalizable.STRIP_TRAILING_SPACES_CHANGED);
  }
 else {
    editorSettings.setStripTrailingSpaces(EditorSettingsExternalizable.STRIP_TRAILING_SPACES_WHOLE);
  }
  editorSettings.setDndEnabled(myCbEnableDnD.isSelected());
  editorSettings.setWheelFontChangeEnabled(myCbEnableWheelFontChange.isSelected());
  editorSettings.setMouseClickSelectionHonorsCamelWords(myCbHonorCamelHumpsWhenSelectingByClicking.isSelected());
  editorSettings.setRefrainFromScrolling(myRbPreferMovingCaret.isSelected());
  Editor[] editors=EditorFactory.getInstance().getAllEditors();
  for (  Editor editor : editors) {
    ((EditorEx)editor).reinitSettings();
  }
  String temp=myRecentFilesLimitField.getText();
  if (temp.trim().length() > 0) {
    try {
      int newRecentFilesLimit=Integer.parseInt(temp);
      if (newRecentFilesLimit > 0 && uiSettings.RECENT_FILES_LIMIT != newRecentFilesLimit) {
        uiSettings.RECENT_FILES_LIMIT=newRecentFilesLimit;
        uiSettingsChanged=true;
      }
    }
 catch (    NumberFormatException ignored) {
    }
  }
  if (uiSettingsChanged) {
    uiSettings.fireUISettingsChanged();
  }
  myErrorHighlightingPanel.apply();
  for (  EditorOptionsProvider provider : Extensions.getExtensions(EditorOptionsProvider.EP_NAME)) {
    provider.apply();
  }
  Project[] projects=ProjectManager.getInstance().getOpenProjects();
  for (  Project project : projects) {
    DaemonCodeAnalyzer.getInstance(project).settingsChanged();
  }
}
