{
  try {
    final File file=new File(path);
    final int newClassQName=myCompileContext.getDependencyCache().reparseClassFile(file);
    final Cache newClassesCache=myCompileContext.getDependencyCache().getNewClassesCache();
    final String sourceFileName=newClassesCache.getSourceFileName(newClassesCache.getClassId(newClassQName));
    String relativePathToSource="/" + MakeUtil.createRelativePathToSource(myCompileContext.getDependencyCache().resolve(newClassQName),sourceFileName);
    putName(sourceFileName,relativePathToSource,path);
  }
 catch (  ClsFormatException e) {
    String message;
    final String m=e.getMessage();
    if (m == null || "".equals(m)) {
      message="Bad class file format:\n" + path;
    }
 else {
      message="Bad class file format: " + m + "\n"+ path;
    }
    myCompileContext.addMessage(CompilerMessageCategory.ERROR,message,null,-1,-1);
  }
 finally {
    myClassesCount+=1;
    updateStatistics();
  }
}
