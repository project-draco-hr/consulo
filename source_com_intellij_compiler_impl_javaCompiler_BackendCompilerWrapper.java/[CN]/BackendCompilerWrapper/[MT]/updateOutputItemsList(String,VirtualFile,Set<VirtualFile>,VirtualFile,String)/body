{
  final Set<Pair<String,String>> paths=myFileNameToSourceMap.get(javaFile.getName());
  if (LOG.isDebugEnabled()) {
    LOG.debug("Checking java file " + javaFile.getPresentableUrl());
    LOG.debug("myFileNameToSourceMap contains: " + paths);
  }
  if (paths != null && paths.size() > 0) {
    final String prefix=packagePrefix != null && packagePrefix.length() > 0 ? packagePrefix.replace('.','/') + "/" : "";
    final String filePath="/" + prefix + VfsUtil.getRelativePath(javaFile,sourceRoot,'/');
    for (Iterator<Pair<String,String>> it=paths.iterator(); it.hasNext(); ) {
      final Pair<String,String> pair=it.next();
      if (LOG.isDebugEnabled()) {
        LOG.debug("Checking pair [pathToClass; relPathToSource] = [" + pair.getFirst() + "; "+ pair.getSecond()+ "]");
      }
      if (CompilerUtil.pathsEqual(filePath,pair.getSecond())) {
        final String outputPath=pair.getFirst().replace(File.separatorChar,'/');
        final Pair<String,String> realLocation=moveToRealLocation(outputDir,outputPath,javaFile);
        if (realLocation != null) {
          myOutputItems.add(new OutputItemImpl(realLocation.getFirst(),realLocation.getSecond(),javaFile));
          if (LOG.isDebugEnabled()) {
            LOG.debug("Added output item: [outputDir; outputPath; sourceFile]  = [" + realLocation.getFirst() + "; "+ realLocation.getSecond()+ "; "+ javaFile.getPresentableUrl()+ "]");
          }
          if (!compiledWithErrors.contains(javaFile)) {
            mySuccesfullyCompiledJavaFiles.add(javaFile);
          }
        }
 else {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Failed to move to real location: " + outputPath + "; from "+ outputDir);
          }
        }
      }
    }
  }
}
