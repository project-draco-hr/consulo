{
  String name=javaFile.getName();
  if (myFileNameToSourceMap.containsKey(name)) {
    Set<Pair<String,String>> paths=myFileNameToSourceMap.get(name);
    if (paths != null && paths.size() > 0) {
      final String prefix=packagePrefix != null && packagePrefix.length() > 0 ? packagePrefix.replace('.','/') + "/" : "";
      final String filePath=!SystemInfo.isFileSystemCaseSensitive ? "/" + CompilerUtil.normalizePath(prefix + VfsUtil.getRelativePath(javaFile,sourceRoot,'/'),'/') : "/" + prefix + VfsUtil.getRelativePath(javaFile,sourceRoot,'/');
      for (Iterator<Pair<String,String>> it=paths.iterator(); it.hasNext(); ) {
        final Pair<String,String> pair=it.next();
        if (filePath.equals(pair.getSecond())) {
          final String outputPath=pair.getFirst().replace(File.separatorChar,'/');
          final Pair<String,String> realLocation=moveToRealLocation(outputDir,outputPath,javaFile);
          if (realLocation != null) {
            myOutputItems.add(new OutputItemImpl(realLocation.getFirst(),realLocation.getSecond(),javaFile));
            if (!compiledWithErrors.contains(javaFile)) {
              mySuccesfullyCompiledJavaFiles.add(javaFile);
            }
          }
        }
      }
    }
  }
}
