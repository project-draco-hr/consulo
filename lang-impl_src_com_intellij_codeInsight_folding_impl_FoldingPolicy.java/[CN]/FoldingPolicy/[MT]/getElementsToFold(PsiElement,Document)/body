{
  TreeMap<PsiElement,FoldingDescriptor> map=new TreeMap<PsiElement,FoldingDescriptor>(new Comparator<PsiElement>(){
    public int compare(    PsiElement element,    PsiElement element1){
      int startOffsetDiff=element.getTextRange().getStartOffset() - element1.getTextRange().getStartOffset();
      return startOffsetDiff == 0 ? element.getTextRange().getEndOffset() - element1.getTextRange().getEndOffset() : startOffsetDiff;
    }
  }
);
  final Language lang=file.getLanguage();
  final FoldingBuilder foldingBuilder=LanguageFolding.INSTANCE.forLanguage(lang);
  if (foldingBuilder != null) {
    final ASTNode node=file.getNode();
    final FoldingDescriptor[] foldingDescriptors=foldingBuilder.buildFoldRegions(node,document);
    for (    FoldingDescriptor descriptor : foldingDescriptors) {
      ASTNode descriptorNode=descriptor.getElement();
      map.put(SourceTreeToPsiMap.treeElementToPsi(descriptorNode),descriptor);
    }
  }
  return map;
}
