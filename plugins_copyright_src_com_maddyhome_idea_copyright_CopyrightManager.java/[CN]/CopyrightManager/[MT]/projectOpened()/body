{
  if (myProject != null) {
    final FileDocumentManager fileDocumentManager=FileDocumentManager.getInstance();
    DocumentListener listener=new DocumentAdapter(){
      @Override public void documentChanged(      DocumentEvent e){
        final Document document=e.getDocument();
        final VirtualFile virtualFile=fileDocumentManager.getFile(document);
        if (virtualFile != null && NewFileTracker.getInstance().contains(virtualFile)) {
          NewFileTracker.getInstance().remove(virtualFile);
          if (FileTypeUtil.getInstance().isSupportedFile(virtualFile)) {
            final Module module=ProjectRootManager.getInstance(myProject).getFileIndex().getModuleForFile(virtualFile);
            if (module != null) {
              final PsiFile file=PsiManager.getInstance(myProject).findFile(virtualFile);
              if (file != null) {
                ApplicationManager.getApplication().invokeLater(new Runnable(){
                  public void run(){
                    if (myProject.isDisposed())                     return;
                    if (file.isValid() && file.isWritable()) {
                      final CopyrightProfile opts=getCopyrightOptions(file);
                      if (opts != null) {
                        new UpdateCopyrightProcessor(myProject,module,file).run();
                      }
                    }
                  }
                }
,ModalityState.NON_MODAL,myProject.getDisposed());
              }
            }
          }
        }
      }
    }
;
    final EditorFactory factory=EditorFactory.getInstance();
    if (factory != null) {
      factory.getEventMulticaster().addDocumentListener(listener,myProject);
    }
  }
}
