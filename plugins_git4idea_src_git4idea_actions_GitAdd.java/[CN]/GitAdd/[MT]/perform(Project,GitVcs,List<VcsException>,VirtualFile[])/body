{
  saveAll();
  if (!ProjectLevelVcsManager.getInstance(project).checkAllFilesAreUnder(GitVcs.getInstance(project),affectedFiles))   return;
  final Map<VirtualFile,List<VirtualFile>> roots=GitUtil.sortFilesByVcsRoot(project,affectedFiles);
  for (  VirtualFile root : roots.keySet()) {
    GitCommand command=new GitCommand(project,vcs.getSettings(),root);
    List<VirtualFile> list=roots.get(root);
    VirtualFile[] vfiles=list.toArray(new VirtualFile[list.size()]);
    command.add(vfiles);
  }
  VcsDirtyScopeManager mgr=VcsDirtyScopeManager.getInstance(project);
  for (  VirtualFile file : affectedFiles) {
    mgr.fileDirty(file);
    file.refresh(true,true);
  }
}
