{
  try {
    waitUntilIndicesAreInitialized();
    final UpdatableIndex<K,V,FileContent> index=getIndex(indexId);
    if (index == null) {
      return null;
    }
    final Project project=filter.getProject();
    ensureUpToDate(indexId,project,filter,restrictToFile);
    myAccessValidator.checkAccessingIndexDuringOtherIndexProcessing(indexId);
    try {
      index.getReadLock().lock();
      myAccessValidator.startedProcessingActivityForIndex(indexId);
      return computable.convert(index);
    }
  finally {
      myAccessValidator.stoppedProcessingActivityForIndex(indexId);
      index.getReadLock().unlock();
    }
  }
 catch (  StorageException e) {
    scheduleRebuild(indexId,e);
  }
catch (  RuntimeException e) {
    final Throwable cause=getCauseToRebuildIndex(e);
    if (cause != null) {
      scheduleRebuild(indexId,cause);
    }
 else {
      throw e;
    }
  }
catch (  AssertionError ae) {
    scheduleRebuild(indexId,ae);
  }
  return null;
}
