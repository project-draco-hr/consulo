{
  myIndexableSets.add(set);
  myIndexableSetToProjectMap.put(set,project);
  if (project != null) {
    ((PsiManagerImpl)PsiManager.getInstance(project)).addTreeChangePreprocessor(new PsiTreeChangePreprocessor(){
      @Override public void treeChanged(      @NotNull PsiTreeChangeEventImpl event){
        if (event.isGenericChange() && event.getCode() == PsiTreeChangeEventImpl.PsiEventType.CHILDREN_CHANGED) {
          PsiFile file=event.getFile();
          if (file != null) {
            VirtualFile virtualFile=file.getVirtualFile();
            if (!clearUpToDateStateForPsiIndicesOfUnsavedDocuments(virtualFile)) {
              if (virtualFile instanceof VirtualFileWithId) {
                int fileId=((VirtualFileWithId)virtualFile).getId();
                boolean wasIndexed=false;
                List<ID<?,?>> candidates=getAffectedIndexCandidates(virtualFile);
                for (                ID<?,?> psiBackedIndex : myPsiDependentIndices) {
                  if (!candidates.contains(psiBackedIndex))                   continue;
                  if (getInputFilter(psiBackedIndex).acceptInput(project,virtualFile)) {
                    getIndex(psiBackedIndex).resetIndexedStateForFile(fileId);
                    wasIndexed=true;
                  }
                }
                if (wasIndexed) {
                  myChangedFilesCollector.scheduleForUpdate(virtualFile);
                  IndexingStamp.flushCache(fileId);
                }
              }
            }
          }
        }
      }
    }
);
  }
}
