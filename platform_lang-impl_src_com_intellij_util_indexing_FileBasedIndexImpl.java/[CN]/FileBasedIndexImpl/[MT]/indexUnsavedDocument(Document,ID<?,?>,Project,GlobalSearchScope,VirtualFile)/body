{
  final VirtualFile vFile=myFileDocumentManager.getFile(document);
  if (!(vFile instanceof VirtualFileWithId) || !vFile.isValid()) {
    return true;
  }
  if (restrictedFile != null) {
    if (!Comparing.equal(vFile,restrictedFile)) {
      return false;
    }
  }
 else   if (filter != null && !filter.accept(vFile)) {
    return false;
  }
  final PsiFile dominantContentFile=findDominantPsiForDocument(document,project);
  final DocumentContent content;
  if (dominantContentFile != null && dominantContentFile.getViewProvider().getModificationStamp() != document.getModificationStamp()) {
    content=new PsiContent(document,dominantContentFile);
  }
 else {
    content=new AuthenticContent(document);
  }
  final long currentDocStamp=content.getModificationStamp();
  if (currentDocStamp != myLastIndexedDocStamps.getAndSet(document,requestedIndexId,currentDocStamp)) {
    final Ref<StorageException> exRef=new Ref<StorageException>(null);
    ProgressManager.getInstance().executeNonCancelableSection(new Runnable(){
      @Override public void run(){
        try {
          final String contentText=content.getText();
          if (isTooLarge(vFile,contentText.length())) {
            return;
          }
          WeakReference<FileContentImpl> previousContentRef=document.getUserData(ourFileContentKey);
          FileContentImpl previousContent=previousContentRef != null ? previousContentRef.get() : null;
          final FileContentImpl newFc;
          if (previousContent != null && previousContent.getStamp() == currentDocStamp) {
            newFc=previousContent;
          }
 else {
            newFc=new FileContentImpl(vFile,contentText,vFile.getCharset(),currentDocStamp);
            document.putUserData(ourFileContentKey,new WeakReference<FileContentImpl>(newFc));
          }
          if (dominantContentFile != null) {
            dominantContentFile.putUserData(PsiFileImpl.BUILDING_STUB,true);
            newFc.putUserData(IndexingDataKeys.PSI_FILE,dominantContentFile);
          }
          if (content instanceof AuthenticContent) {
            newFc.putUserData(EDITOR_HIGHLIGHTER,EditorHighlighterCache.getEditorHighlighterForCachesBuilding(document));
          }
          if (getInputFilter(requestedIndexId).acceptInput(vFile)) {
            newFc.putUserData(IndexingDataKeys.PROJECT,project);
            final int inputId=Math.abs(getFileId(vFile));
            getIndex(requestedIndexId).update(inputId,newFc);
          }
          if (dominantContentFile != null) {
            dominantContentFile.putUserData(PsiFileImpl.BUILDING_STUB,null);
          }
        }
 catch (        StorageException e) {
          exRef.set(e);
        }
      }
    }
);
    final StorageException storageException=exRef.get();
    if (storageException != null) {
      throw storageException;
    }
  }
  return true;
}
