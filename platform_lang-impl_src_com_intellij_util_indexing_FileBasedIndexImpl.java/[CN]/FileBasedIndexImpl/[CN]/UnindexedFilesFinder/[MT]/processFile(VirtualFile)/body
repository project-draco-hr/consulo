{
  if (!file.isValid()) {
    return true;
  }
  if (!file.isDirectory()) {
    if (file instanceof NewVirtualFile && ((NewVirtualFile)file).getFlag(ALREADY_PROCESSED)) {
      return true;
    }
    if (file instanceof VirtualFileWithId) {
      try {
        FileTypeManagerImpl.cacheFileType(file,file.getFileType());
        boolean oldStuff=true;
        if (!isTooLarge(file)) {
          for (          ID<?,?> indexId : myIndices.keySet()) {
            try {
              if (needsFileContentLoading(indexId) && shouldIndexFile(file,indexId)) {
                myFiles.add(file);
                oldStuff=false;
                break;
              }
            }
 catch (            RuntimeException e) {
              final Throwable cause=e.getCause();
              if (cause instanceof IOException || cause instanceof StorageException) {
                LOG.info(e);
                requestRebuild(indexId);
              }
 else {
                throw e;
              }
            }
          }
        }
        FileContent fileContent=null;
        for (        ID<?,?> indexId : myNotRequiringContentIndices) {
          if (shouldIndexFile(file,indexId)) {
            oldStuff=false;
            try {
              if (fileContent == null) {
                fileContent=new FileContentImpl(file);
              }
              updateSingleIndex(indexId,file,fileContent);
            }
 catch (            StorageException e) {
              LOG.info(e);
              requestRebuild(indexId);
            }
          }
        }
        IndexingStamp.flushCache(file);
        if (oldStuff && file instanceof NewVirtualFile) {
          ((NewVirtualFile)file).setFlag(ALREADY_PROCESSED,true);
        }
      }
  finally {
        FileTypeManagerImpl.cacheFileType(file,null);
      }
    }
  }
 else {
    if (myProgressIndicator != null) {
      myProgressIndicator.setText("Scanning files to index");
      myProgressIndicator.setText2(file.getPresentableUrl());
    }
  }
  return true;
}
