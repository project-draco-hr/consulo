{
  myModificationCount=modificationCount;
  final int[] minMax=new int[2];
  if (!set.isEmpty()) {
    minMax[0]=minMax[1]=set.get(0);
  }
  set.forEach(new TIntProcedure(){
    @Override public boolean execute(    int value){
      minMax[0]=Math.min(minMax[0],value);
      minMax[1]=Math.max(minMax[1],value);
      return true;
    }
  }
);
  myMaxId=minMax[1];
  myMinId=minMax[0];
  myBitMask=new long[((myMaxId - myMinId) >> SHIFT) + 1];
  set.forEach(new TIntProcedure(){
    @Override public boolean execute(    int value){
      value-=myMinId;
      myBitMask[value >> SHIFT]|=(1L << (value & MASK));
      return true;
    }
  }
);
}
