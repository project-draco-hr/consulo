{
  final VirtualFile eventFile=event.getFile();
  cleanProcessedFlag(eventFile);
  if (!contentChange) {
    myUpdatingFiles.incrementAndGet();
  }
  iterateIndexableFiles(eventFile,new Processor<VirtualFile>(){
    @Override public boolean process(    @NotNull final VirtualFile file){
      FileContent fileContent=null;
      for (      ID<?,?> indexId : myNotRequiringContentIndices) {
        if (getInputFilter(indexId).acceptInput(file)) {
          try {
            if (fileContent == null) {
              fileContent=new FileContentImpl(file);
            }
            updateSingleIndex(indexId,file,fileContent);
          }
 catch (          StorageException e) {
            LOG.info(e);
            requestRebuild(indexId);
          }
        }
      }
      if (!isTooLarge(file)) {
        for (        ID<?,?> indexId : myIndices.keySet()) {
          if (needsFileContentLoading(indexId) && getInputFilter(indexId).acceptInput(file)) {
            scheduleForUpdate(file);
            break;
          }
        }
      }
      return true;
    }
  }
);
  IndexingStamp.flushCache(null);
  if (!contentChange) {
    if (myUpdatingFiles.decrementAndGet() == 0) {
      ++myFilesModCount;
    }
  }
}
