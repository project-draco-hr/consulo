{
  for (  final FileBasedIndexExtension<?,?> extension : extensions) {
    ID<?,?> name=extension.getName();
    ourRebuildStatus.put(name,new AtomicInteger(OK));
    myUnsavedDataUpdateTasks.put(name,new DocumentUpdateTask(name));
    if (!extension.dependsOnFileContent()) {
      if (extension.indexDirectories())       myIndicesForDirectories.add(name);
      myNotRequiringContentIndices.add(name);
    }
 else {
      myRequiringContentIndices.add(name);
    }
    if (extension instanceof PsiDependentIndex)     myPsiDependentIndices.add(name);
    myNoLimitCheckTypes.addAll(extension.getFileTypesWithSizeLimitNotApplicable());
    addNestedInitializationTask(new ThrowableRunnable(){
      @Override public void run() throws Throwable {
        try {
          versionChanged.compareAndSet(false,registerIndexer(extension,state));
        }
 catch (        IOException io) {
          throw io;
        }
catch (        Throwable t) {
          PluginManager.handleComponentError(t,extension.getClass().getName(),null);
        }
      }
    }
);
  }
}
