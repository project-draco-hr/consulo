{
  final CheckinProjectDialogImplementer dialog=AbstractVcsHelper.getInstance(project).createCheckinProjectDialog(getActionName(context),true,asPathList(roots));
  final Refreshable refreshablePanel=context.getRefreshableDialog();
  final List<VcsException> vcsExceptions=new ArrayList<VcsException>();
  Runnable actionAfterDialogWasShown=new Runnable(){
    public void run(){
      try {
        if (!shouldCheckin(dialog,project)) {
          return;
        }
        final Runnable checkinAction=new Runnable(){
          public void run(){
            CheckinProjectPanelImpl checkinProjectPanel=(CheckinProjectPanelImpl)dialog.getCheckinProjectPanel();
            final Map<CheckinEnvironment,List<VcsOperation>> checkinOperations=checkinProjectPanel.getCheckinOperations();
            Runnable checkinAction=new Runnable(){
              public void run(){
                for (Iterator<CheckinEnvironment> iterator=checkinOperations.keySet().iterator(); iterator.hasNext(); ) {
                  CheckinEnvironment checkinEnvironment=iterator.next();
                  vcsExceptions.addAll(checkinEnvironment.commit(dialog,project));
                }
                final LvcsAction lvcsAction=LocalVcs.getInstance(project).startAction(getActionName(context),"",true);
                VirtualFileManager.getInstance().refresh(true,new Runnable(){
                  public void run(){
                    lvcsAction.finish();
                    FileStatusManager.getInstance(project).fileStatusesChanged();
                    if (refreshablePanel != null) {
                      refreshablePanel.refresh();
                    }
                    refreshFileView(project);
                  }
                }
);
                AbstractVcsHelper.getInstance(project).showErrors(vcsExceptions,getActionName(context));
              }
            }
;
            ApplicationManager.getApplication().runProcessWithProgressSynchronously(checkinAction,getActionName(context),true,project);
          }
        }
;
        AbstractVcsHelper.getInstance(project).optimizeImportsAndReformatCode(dialog.getCheckinProjectPanel().getVirtualFiles(),VcsConfiguration.getInstance(project),checkinAction,true);
      }
  finally {
        dialog.dispose();
      }
    }
  }
;
  try {
    dialog.analyzeChanges(true,actionAfterDialogWasShown);
  }
 catch (  VcsException e) {
    Messages.showErrorDialog("Cannot analyze changes: " + e.getLocalizedMessage(),"Analizing Changes");
  }
  processErrors(vcsExceptions,VcsConfiguration.getInstance(project));
}
