{
class CollectElementsProcessor implements PsiElementProcessor<XmlTag> {
    final List<XmlElementDescriptor> result=new ArrayList<XmlElementDescriptor>();
    public boolean execute(    @NotNull final XmlTag element){
      ContainerUtil.addIfNotNull(result,getElementDescriptor(element.getAttributeValue("name"),getDefaultNamespace()));
      return true;
    }
  }
  CollectElementsProcessor processor=new CollectElementsProcessor(){
    public boolean execute(    @NotNull final XmlTag element){
      if (!XmlElementDescriptorImpl.isAbstractDeclaration(element))       return super.execute(element);
      return true;
    }
  }
;
  processTagsInNamespace(myTag,new String[]{ELEMENT_TAG_NAME},processor);
  return processor.result.toArray(new XmlElementDescriptor[processor.result.size()]);
}
