{
  Presentation presentation=presentationFactory.getPresentation(group);
  AnActionEvent e=new AnActionEvent(null,context,place,presentation,actionManager,0);
  try {
    group.update(e);
  }
 catch (  Throwable exc) {
    handleUpdateException(group,presentation,exc);
    return;
  }
  if (!presentation.isVisible()) {
    return;
  }
  AnAction[] children=group.getChildren(e);
  for (int i=0; i < children.length; i++) {
    AnAction child=children[i];
    if (child == null) {
      String groupId=ActionManager.getInstance().getId(group);
      LOG.assertTrue(false,"action is null: i=" + i + " group="+ group+ " group id="+ groupId);
      continue;
    }
    presentation=presentationFactory.getPresentation(child);
    AnActionEvent e1=new AnActionEvent(null,context,place,presentation,actionManager,0);
    e1.setInjectedContext(child.isInInjectedContext());
    try {
      child.update(e1);
    }
 catch (    Throwable exc) {
      handleUpdateException(child,presentation,exc);
      continue;
    }
    if (!presentation.isVisible()) {
      continue;
    }
    if (child instanceof ActionGroup) {
      ActionGroup actionGroup=(ActionGroup)child;
      if (actionGroup.isPopup()) {
        final boolean enabled=hasVisibleChildren(actionGroup,presentationFactory,context,place);
        presentation.setEnabled(enabled);
        list.add(child);
      }
 else {
        expandActionGroup((ActionGroup)child,list,presentationFactory,context,place,actionManager);
      }
    }
 else     if (child instanceof Separator) {
      if (list.size() > 0 && !(list.get(list.size() - 1) instanceof Separator)) {
        list.add(child);
      }
    }
 else {
      list.add(child);
    }
  }
}
