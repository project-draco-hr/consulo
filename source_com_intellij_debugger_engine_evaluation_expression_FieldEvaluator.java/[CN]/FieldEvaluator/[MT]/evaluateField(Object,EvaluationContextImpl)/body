{
  if (object instanceof ReferenceType) {
    ReferenceType refType=(ReferenceType)object;
    Field field=findField(refType);
    if (field == null || !field.isStatic()) {
      field=refType.fieldByName(myFieldName);
    }
    if (field == null || !field.isStatic()) {
      throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.no.static.field",myFieldName));
    }
    myEvaluatedField=field;
    myEvaluatedQualifier=refType;
    return refType.getValue(field);
  }
  if (object instanceof ObjectReference) {
    ObjectReference objRef=(ObjectReference)object;
    ReferenceType refType=objRef.referenceType();
    if (!(refType instanceof ClassType || refType instanceof ArrayType)) {
      throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.class.or.array.expected",myFieldName));
    }
    if (objRef instanceof ArrayReference && "length".equals(myFieldName)) {
      return DebuggerUtilsEx.createValue(context.getDebugProcess().getVirtualMachineProxy(),"int",((ArrayReference)objRef).length());
    }
    Field field=findField(refType);
    if (field == null) {
      field=refType.fieldByName(myFieldName);
    }
    if (field == null) {
      throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.no.instance.field",myFieldName));
    }
    myEvaluatedQualifier=field.isStatic() ? (Object)refType : (Object)objRef;
    myEvaluatedField=field;
    return field.isStatic() ? refType.getValue(field) : objRef.getValue(field);
  }
  if (object == null) {
    throw EvaluateExceptionUtil.createEvaluateException(new NullPointerException());
  }
  throw EvaluateExceptionUtil.createEvaluateException(DebuggerBundle.message("evaluation.error.evaluating.field",myFieldName));
}
