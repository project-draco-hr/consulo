{
  if (!(element instanceof PsiMethodCallExpression)) {
    return false;
  }
  final PsiMethodCallExpression call1=(PsiMethodCallExpression)element;
  final PsiExpression[] arguments=call1.getArgumentList().getExpressions();
  if (arguments.length != 1) {
    return false;
  }
  final PsiExpression argument=arguments[0];
  if (!(argument instanceof PsiMethodCallExpression)) {
    return false;
  }
  final PsiMethodCallExpression call2=(PsiMethodCallExpression)argument;
  final PsiMethod setter=call1.resolveMethod();
  final PsiMethod getter=call2.resolveMethod();
  final PsiMethod get=PropertyUtils.getReversePropertyMethod(setter);
  final PsiMethod set=PropertyUtils.getReversePropertyMethod(getter);
  if (setter == null || getter == null || get == null || set == null) {
    return false;
  }
  final PsiParameter[] parameters=setter.getParameterList().getParameters();
  if (parameters.length != 1) {
    return false;
  }
  final PsiParameter parameter=parameters[0];
  return parameter.getType().equals(getter.getReturnType());
}
