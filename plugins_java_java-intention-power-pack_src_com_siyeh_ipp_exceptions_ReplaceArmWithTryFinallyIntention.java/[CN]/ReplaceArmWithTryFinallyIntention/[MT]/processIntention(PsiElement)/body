{
  final PsiJavaToken token=(PsiJavaToken)element;
  final PsiTryStatement tryStatement=(PsiTryStatement)token.getParent();
  if (tryStatement == null) {
    return;
  }
  final boolean replaceAll=tryStatement.getCatchBlocks().length == 0;
  final PsiResourceList resourceList=tryStatement.getResourceList();
  if (resourceList == null) {
    return;
  }
  final List<PsiResourceVariable> resourceVariables=resourceList.getResourceVariables();
  final StringBuilder newTryStatement=new StringBuilder("{");
  for (  PsiResourceVariable resourceVariable : resourceVariables) {
    newTryStatement.append(resourceVariable.getText());
    newTryStatement.append(";\ntry {");
  }
  final PsiCodeBlock tryBlock=tryStatement.getTryBlock();
  if (tryBlock == null) {
    return;
  }
  final PsiElement[] children=tryBlock.getChildren();
  for (int i=1; i < children.length - 1; i++) {
    final PsiElement child=children[i];
    newTryStatement.append(child.getText());
  }
  final int resourceVariablesSize=resourceVariables.size();
  for (int i=resourceVariablesSize - 1; i >= 0; i--) {
    final PsiResourceVariable resourceVariable=resourceVariables.get(i);
    newTryStatement.append("} finally {\n");
    newTryStatement.append(resourceVariable.getName());
    newTryStatement.append(".close();\n}");
  }
  newTryStatement.append('}');
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(element.getProject());
  final PsiCodeBlock newCodeBlock=factory.createCodeBlockFromText(newTryStatement.toString(),element);
  if (replaceAll) {
    for (    PsiStatement newStatement : newCodeBlock.getStatements()) {
      tryStatement.getParent().addBefore(newStatement,tryStatement);
    }
    tryStatement.delete();
  }
 else {
    resourceList.delete();
    tryBlock.replace(newCodeBlock);
  }
}
