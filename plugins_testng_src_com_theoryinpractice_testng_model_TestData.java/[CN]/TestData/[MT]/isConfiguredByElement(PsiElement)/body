{
  if (TEST_OBJECT.equals(TestType.PACKAGE.getType())) {
    if (element instanceof PsiPackage) {
      return Comparing.strEqual(PACKAGE_NAME,((PsiPackage)element).getQualifiedName());
    }
 else     if (element instanceof PsiDirectory) {
      final PsiPackage psiPackage=JavaDirectoryService.getInstance().getPackage(((PsiDirectory)element));
      return psiPackage != null && Comparing.strEqual(PACKAGE_NAME,psiPackage.getQualifiedName());
    }
  }
  element=PsiTreeUtil.getParentOfType(element,PsiModifierListOwner.class,false);
  if (element instanceof PsiMethod && TEST_OBJECT.equals(TestType.METHOD.getType())) {
    final PsiClass aClass=((PsiMethod)element).getContainingClass();
    return aClass != null && Comparing.strEqual(MAIN_CLASS_NAME,JavaExecutionUtil.getRuntimeQualifiedName(aClass)) && Comparing.strEqual(METHOD_NAME,((PsiMethod)element).getName());
  }
 else   if (element instanceof PsiClass && TEST_OBJECT.equals(TestType.CLASS.getType())) {
    return Comparing.strEqual(MAIN_CLASS_NAME,JavaExecutionUtil.getRuntimeQualifiedName((PsiClass)element));
  }
  return false;
}
