{
  final JPanel panel=new JPanel(new GridBagLayout());
  myTable=new Table(new DefaultTableModel());
  getModel().addColumn(NAME_TABLE_COLUMN,(Object[])null);
  getModel().addColumn(EXPRESSION_TABLE_COLUMN,(Object[])null);
  myListChildrenEditor=new DebuggerExpressionTextField(myProject,null,"NamedChildrenConfigurable");
  myTable.setDragEnabled(false);
  myTable.setIntercellSpacing(new Dimension(0,0));
  myTable.getColumn(EXPRESSION_TABLE_COLUMN).setCellEditor(new AbstractTableCellEditor(){
    public Object getCellEditorValue(){
      return myListChildrenEditor.getText();
    }
    public Component getTableCellEditorComponent(    JTable table,    Object value,    boolean isSelected,    int row,    int column){
      myListChildrenEditor.setText((TextWithImports)value);
      return myListChildrenEditor;
    }
  }
);
  myAddButton=new JButton("Add");
  myAddButton.setMnemonic('A');
  myRemoveButton=new JButton("Remove");
  myRemoveButton.setMnemonic('R');
  myUpButton=new JButton("Move Up");
  myUpButton.setMnemonic('U');
  myDownButton=new JButton("Move Down");
  myDownButton.setMnemonic('D');
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      getModel().addRow(new Object[]{"",DebuggerUtils.getInstance().createExpressionWithImports("")});
    }
  }
);
  myRemoveButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int selectedRow=myTable.getSelectedRow();
      if (selectedRow >= 0 && selectedRow < myTable.getRowCount()) {
        getModel().removeRow(selectedRow);
      }
    }
  }
);
  myDownButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      TableUtil.moveSelectedItemsDown(myTable);
    }
  }
);
  myUpButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      TableUtil.moveSelectedItemsUp(myTable);
    }
  }
);
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      updateButtons();
    }
  }
);
  final JScrollPane scrollPane=new JScrollPane(myTable);
  panel.add(scrollPane,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,4,1.0,1.0,GridBagConstraints.CENTER,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
  panel.add(myAddButton,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,4,0,0),0,0));
  panel.add(myRemoveButton,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,4,0,0),0,0));
  panel.add(myUpButton,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,4,0,0),0,0));
  panel.add(myDownButton,new GridBagConstraints(1,GridBagConstraints.RELATIVE,1,1,0.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,4,0,0),0,0));
  return panel;
}
