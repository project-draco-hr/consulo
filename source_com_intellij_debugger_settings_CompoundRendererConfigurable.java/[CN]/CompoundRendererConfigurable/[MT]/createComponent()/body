{
  final JPanel panel=new JPanel(new GridBagLayout());
  myClassNameField=new TextFieldWithBrowseButton(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      PsiClass psiClass=DebuggerUtils.getInstance().chooseClassDialog("Renderer reference type",myProject);
      if (psiClass != null) {
        myClassNameField.setText(psiClass.getQualifiedName());
      }
    }
  }
);
  myClassNameField.getTextField().addFocusListener(new FocusAdapter(){
    public void focusLost(    FocusEvent e){
      final String qName=myClassNameField.getText();
      updateContext(qName);
    }
  }
);
  myRbDefaultLabel=new JRadioButton("Use default renderer");
  myRbExpressionLabel=new JRadioButton("Use following expression:");
  final ButtonGroup labelButtonsGroup=new ButtonGroup();
  labelButtonsGroup.add(myRbDefaultLabel);
  labelButtonsGroup.add(myRbExpressionLabel);
  myRbDefaultChildrenRenderer=new JRadioButton("Use default renderer");
  myRbExpressionChildrenRenderer=new JRadioButton("Use following expression:");
  myRbListChildrenRenderer=new JRadioButton("Use list of expressions:");
  final ButtonGroup childrenButtonGroup=new ButtonGroup();
  childrenButtonGroup.add(myRbDefaultChildrenRenderer);
  childrenButtonGroup.add(myRbExpressionChildrenRenderer);
  childrenButtonGroup.add(myRbListChildrenRenderer);
  myLabelEditor=new DebuggerExpressionTextField(myProject,null,"ClassLabelExpression");
  myChildrenEditor=new DebuggerExpressionTextField(myProject,null,"ClassChildrenExpression");
  myChildrenExpandedEditor=new DebuggerExpressionTextField(myProject,null,"ClassChildrenExpression");
  myChildrenListEditor=createChildrenListEditor();
  final ItemListener updateListener=new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      updateEnabledState();
    }
  }
;
  myRbExpressionLabel.addItemListener(updateListener);
  myRbListChildrenRenderer.addItemListener(updateListener);
  myRbExpressionChildrenRenderer.addItemListener(updateListener);
  panel.add(new JLabel("Apply renderer to objects of type (fully-qualified name):"),new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  panel.add(myClassNameField,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(4,0,0,0),0,0));
  panel.add(new JLabel("When rendering the node"),new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(20,0,0,0),0,0));
  panel.add(myRbDefaultLabel,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,10,0,0),0,0));
  panel.add(myRbExpressionLabel,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,10,0,0),0,0));
  panel.add(myLabelEditor,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,30,0,0),0,0));
  panel.add(new JLabel("When expanding the node"),new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(20,0,0,0),0,0));
  panel.add(myRbDefaultChildrenRenderer,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,10,0,0),0,0));
  panel.add(myRbExpressionChildrenRenderer,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(0,10,0,0),0,0));
  panel.add(myChildrenEditor,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,30,0,0),0,0));
  myExpandedLabel=new JLabel("Test if the node can be expanded (optional):");
  panel.add(myExpandedLabel,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(4,30,0,0),0,0));
  panel.add(myChildrenExpandedEditor,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,30,0,0),0,0));
  panel.add(myRbListChildrenRenderer,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0.0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,10,0,0),0,0));
  panel.add(myChildrenListEditor,new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,1.0,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(4,30,0,0),0,0));
  myMainPanel=new JPanel(new CardLayout());
  myMainPanel.add(new JPanel(),EMPTY_PANEL_ID);
  myMainPanel.add(panel,DATA_PANEL_ID);
  return myMainPanel;
}
