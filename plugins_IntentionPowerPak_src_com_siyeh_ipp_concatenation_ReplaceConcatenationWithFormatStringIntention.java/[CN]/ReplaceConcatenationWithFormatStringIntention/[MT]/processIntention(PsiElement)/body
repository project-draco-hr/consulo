{
  PsiBinaryExpression expression=(PsiBinaryExpression)element;
  PsiElement parent=expression.getParent();
  while (ConcatenationUtils.isConcatenation(parent)) {
    expression=(PsiBinaryExpression)parent;
    if (expression == null) {
      return;
    }
    parent=expression.getParent();
  }
  final StringBuilder formatString=new StringBuilder();
  final List<PsiExpression> formatParameters=new ArrayList();
  buildFormatString(expression,formatString,formatParameters);
  if (replaceWithPrintfExpression(expression,formatString,formatParameters)) {
    return;
  }
  final StringBuilder newExpression=new StringBuilder();
  newExpression.append("java.lang.String.format(\"");
  newExpression.append(formatString);
  newExpression.append('\"');
  for (  PsiExpression formatParameter : formatParameters) {
    newExpression.append(", ");
    newExpression.append(formatParameter.getText());
  }
  newExpression.append(')');
  replaceExpression(newExpression.toString(),expression);
}
