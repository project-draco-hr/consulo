{
  while (myLineIndex < myLines.length) {
    String curLine=myLines[myLineIndex];
    if (curLine.startsWith("--- ")) {
      return null;
    }
    if (curLine.startsWith("@@ ")) {
      break;
    }
    myLineIndex++;
  }
  if (myLineIndex == myLines.length) {
    return null;
  }
  Matcher m=ourUnifiedHunkStartPattern.matcher(myLines[myLineIndex]);
  if (!m.matches()) {
    throw new PatchSyntaxException(myLineIndex,"Unknown hunk start syntax");
  }
  int startLineBefore=Integer.parseInt(m.group(1));
  int linesBefore=Integer.parseInt(m.group(2));
  int startLineAfter=Integer.parseInt(m.group(3));
  int linesAfter=Integer.parseInt(m.group(4));
  PatchHunk hunk=new PatchHunk(startLineBefore - 1,startLineBefore + linesBefore - 1,startLineAfter - 1,startLineAfter + linesAfter - 1);
  myLineIndex++;
  PatchLine lastLine=null;
  while (myLineIndex < myLines.length) {
    String curLine=myLines[myLineIndex];
    if (lastLine != null && curLine.startsWith(NO_NEWLINE_SIGNATURE)) {
      lastLine.setSuppressNewLine(true);
      myLineIndex++;
      continue;
    }
    if (curLine.startsWith("--- ")) {
      break;
    }
    lastLine=parsePatchLine(curLine,1);
    if (lastLine == null) {
      break;
    }
    hunk.addLine(lastLine);
    myLineIndex++;
  }
  return hunk;
}
