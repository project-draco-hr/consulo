{
  while (myLineIndex < myLines.length) {
    String curLine=myLines[myLineIndex];
    if (curLine.startsWith(CONTEXT_FILE_PREFIX)) {
      return null;
    }
    if (curLine.startsWith(CONTEXT_HUNK_PREFIX)) {
      break;
    }
    myLineIndex++;
  }
  if (myLineIndex == myLines.length) {
    return null;
  }
  myLineIndex++;
  Matcher beforeMatcher=ourContextBeforeHunkStartPattern.matcher(myLines[myLineIndex]);
  if (!beforeMatcher.matches()) {
    throw new PatchSyntaxException(myLineIndex,"Unknown before hunk start syntax");
  }
  myLineIndex++;
  List<String> beforeLines=readContextDiffLines();
  if (myLineIndex == myLines.length) {
    throw new PatchSyntaxException(myLineIndex,"Missing after hunk");
  }
  Matcher afterMatcher=ourContextAfterHunkStartPattern.matcher(myLines[myLineIndex]);
  if (!afterMatcher.matches()) {
    throw new PatchSyntaxException(myLineIndex,"Unknown after hunk start syntax");
  }
  myLineIndex++;
  List<String> afterLines=readContextDiffLines();
  int startLineBefore=Integer.parseInt(beforeMatcher.group(1));
  int endLineBefore=Integer.parseInt(beforeMatcher.group(2));
  int startLineAfter=Integer.parseInt(afterMatcher.group(1));
  int endLineAfter=Integer.parseInt(afterMatcher.group(2));
  PatchHunk hunk=new PatchHunk(startLineBefore,endLineBefore,startLineAfter,endLineAfter);
  int beforeLineIndex=0;
  int afterLineIndex=0;
  if (beforeLines.size() == 0) {
    for (    String line : afterLines) {
      hunk.addLine(parsePatchLine(line,2));
    }
  }
 else   if (afterLines.size() == 0) {
    for (    String line : beforeLines) {
      hunk.addLine(parsePatchLine(line,2));
    }
  }
 else {
    while (beforeLineIndex < beforeLines.size() && afterLineIndex < afterLines.size()) {
      String beforeLine=beforeLines.get(beforeLineIndex);
      String afterLine=afterLines.get(afterLineIndex);
      if (beforeLine.startsWith(" ") && afterLine.startsWith(" ")) {
        addContextDiffLine(hunk,beforeLine,PatchLine.Type.CONTEXT);
        beforeLineIndex++;
        afterLineIndex++;
      }
 else       if (beforeLine.startsWith("-")) {
        addContextDiffLine(hunk,beforeLine,PatchLine.Type.REMOVE);
        beforeLineIndex++;
      }
 else       if (afterLine.startsWith("+")) {
        addContextDiffLine(hunk,afterLine,PatchLine.Type.ADD);
        afterLineIndex++;
      }
 else       if (beforeLine.startsWith("!") && afterLine.startsWith("!")) {
        while (beforeLineIndex < beforeLines.size() && beforeLines.get(beforeLineIndex).startsWith("! ")) {
          addContextDiffLine(hunk,beforeLines.get(beforeLineIndex),PatchLine.Type.REMOVE);
          beforeLineIndex++;
        }
        while (afterLineIndex < afterLines.size() && afterLines.get(afterLineIndex).startsWith("! ")) {
          addContextDiffLine(hunk,afterLines.get(afterLineIndex),PatchLine.Type.ADD);
          afterLineIndex++;
        }
      }
 else {
        throw new PatchSyntaxException(-1,"Unknown line prefix");
      }
    }
  }
  return hunk;
}
