{
  final boolean shouldTranslateViaDiff=PersistentRangeMarkerUtil.shouldTranslateViaDiff(event,range);
  Pair<ProperTextRange,LinesCols> translated=null;
  if (shouldTranslateViaDiff) {
    translated=translateViaDiff((DocumentEventImpl)event,linesCols);
  }
  if (translated == null) {
    ProperTextRange fallback=applyChange(event,intervalStart,intervalEnd,greedyLeft,greedyRight);
    if (fallback == null)     return null;
    LinesCols lc=storeLinesAndCols(fallback,event.getDocument());
    if (lc == null)     return null;
    translated=Pair.create(fallback,lc);
  }
  if (translated.first.getEndOffset() > event.getDocument().getTextLength() || translated.second.myEndLine < translated.second.myStartLine || translated.second.myStartLine == translated.second.myEndLine && translated.second.myEndColumn < translated.second.myStartColumn || event.getDocument().getLineCount() < translated.second.myEndLine) {
    return null;
  }
  return translated;
}
