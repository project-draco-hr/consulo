{
  GrCodeReferenceElement ref=getReferenceElement();
  if (ref == null)   return null;
  final GroovyResolveResult[] classResults=ref.multiResolve(false);
  if (classResults.length == 0)   return GroovyResolveResult.EMPTY_ARRAY;
  final PsiType[] argTypes=PsiUtil.getArgumentTypes(ref,true);
  List<GroovyResolveResult> constructorResults=new ArrayList<GroovyResolveResult>();
  for (  GroovyResolveResult classResult : classResults) {
    final PsiElement element=classResult.getElement();
    if (element instanceof PsiClass) {
      final GrImportStatement statement=classResult.getImportStatementContext();
      String className=((PsiClass)element).getName();
      final MethodResolverProcessor processor=new MethodResolverProcessor(className,ref,false,true,argTypes);
      processor.setImportStatementContext(statement);
      final boolean toBreak=element.processDeclarations(processor,PsiSubstitutor.EMPTY,null,ref);
      constructorResults.addAll(Arrays.asList(processor.getCandidates()));
      if (!toBreak)       break;
    }
  }
  return constructorResults.toArray(new GroovyResolveResult[constructorResults.size()]);
}
