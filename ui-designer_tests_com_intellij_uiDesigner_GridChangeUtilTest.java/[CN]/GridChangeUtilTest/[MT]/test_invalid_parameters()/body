{
  final RadContainer grid=SampleGrid.create();
  try {
    GridChangeUtil.splitRow(grid,-1);
    assertTrue(false);
  }
 catch (  IllegalArgumentException ok) {
  }
  try {
    GridChangeUtil.splitRow(grid,SampleGrid.ORIGINAL_ROWS);
    assertTrue(false);
  }
 catch (  IllegalArgumentException ok) {
  }
  GridChangeUtil.splitRow(grid,SampleGrid.ORIGINAL_ROWS - 1);
  assertGridDimensions(grid,SampleGrid.ORIGINAL_ROWS + 1,SampleGrid.ORIGINAL_COLUMNS);
  try {
    GridChangeUtil.splitColumn(grid,-1);
    assertTrue(false);
  }
 catch (  IllegalArgumentException ok) {
  }
  try {
    GridChangeUtil.splitColumn(grid,SampleGrid.ORIGINAL_COLUMNS);
    assertTrue(false);
  }
 catch (  IllegalArgumentException ok) {
  }
  GridChangeUtil.splitColumn(grid,SampleGrid.ORIGINAL_COLUMNS - 1);
  assertGridDimensions(grid,SampleGrid.ORIGINAL_ROWS + 1,SampleGrid.ORIGINAL_COLUMNS + 1);
  try {
    GridChangeUtil.canDeleteCell(grid,-1,false);
    assertTrue(false);
  }
 catch (  IllegalArgumentException ok) {
  }
  try {
    GridChangeUtil.canDeleteCell(grid,((GridLayoutManager)grid.getLayout()).getColumnCount(),false);
    assertTrue(false);
  }
 catch (  IllegalArgumentException ok) {
  }
}
