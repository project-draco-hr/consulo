{
{
    final RadContainer grid=SampleGrid.create();
    assertFalse(GridChangeUtil.canDeleteColumn(grid,0));
    assertFalse(GridChangeUtil.canDeleteColumn(grid,1));
    assertTrue(GridChangeUtil.canDeleteColumn(grid,2));
    assertTrue(GridChangeUtil.canDeleteColumn(grid,3));
    assertTrue(GridChangeUtil.canDeleteColumn(grid,4));
  }
  for (int i=0; i < SampleGrid.ORIGINAL_COLUMNS; i++) {
    final RadContainer grid=SampleGrid.create();
    if (GridChangeUtil.canDeleteColumn(grid,i)) {
      GridChangeUtil.deleteCell(grid,i,false);
      assertGridDimensions(grid,SampleGrid.ORIGINAL_ROWS,SampleGrid.ORIGINAL_COLUMNS - 1);
    }
 else {
      try {
        GridChangeUtil.deleteCell(grid,i,false);
        assertTrue(false);
      }
 catch (      IllegalArgumentException ok) {
      }
    }
  }
{
    final RadContainer grid=SampleGrid.create();
    for (int i=0; i < SampleGrid.ORIGINAL_ROWS; i++) {
      assertFalse(GridChangeUtil.canDeleteRow(grid,i));
    }
  }
}
