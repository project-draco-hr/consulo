{
  return new ConcurrentWeakKeySoftValueHashMap<K,V>(100,0.75f,Runtime.getRuntime().availableProcessors(),ContainerUtil.<K>canonicalStrategy()){
    @NotNull @Override protected ValueReference<K,V> createValueReference(    @NotNull final V value,    @NotNull ReferenceQueue<V> queue){
      ValueReference<K,V> result;
      if (value == NULL_RESULT || value instanceof Object[] && ((Object[])value).length == 0) {
        result=createStrongReference(value);
      }
 else {
        result=super.createValueReference(value,queue);
      }
      return result;
    }
    @Override public V get(    @NotNull Object key){
      V v=super.get(key);
      return v == NULL_RESULT ? null : v;
    }
  }
;
}
