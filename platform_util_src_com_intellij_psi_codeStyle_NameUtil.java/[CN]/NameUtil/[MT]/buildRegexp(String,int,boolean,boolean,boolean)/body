{
  final int eol=pattern.indexOf('\n');
  if (eol != -1) {
    pattern=pattern.substring(0,eol);
  }
  if (pattern.length() >= MAX_LENGTH) {
    pattern=pattern.substring(0,MAX_LENGTH);
  }
  @NonNls final StringBuffer buffer=new StringBuffer();
  boolean lastIsUppercase=false;
  boolean prevIsUppercase=false;
  final boolean endsWithSpace=StringUtil.endsWithChar(pattern,' ');
  pattern=pattern.trim();
  exactPrefixLen=Math.min(exactPrefixLen,pattern.length());
  if (exactPrefixLen > 0) {
    char c=pattern.charAt(exactPrefixLen - 1);
    prevIsUppercase=Character.isUpperCase(c) || Character.isDigit(c);
  }
  for (int i=0; i != exactPrefixLen; ++i) {
    final char c=pattern.charAt(i);
    if (Character.isLetterOrDigit(c)) {
      buffer.append(c);
    }
 else {
      buffer.append("\\").append(c);
    }
  }
  if (exactPrefixLen == 0) {
    buffer.append("_*");
  }
  boolean firstIdentifierLetter=(exactPrefixLen == 0);
  for (int i=exactPrefixLen; i < pattern.length(); i++) {
    final char c=pattern.charAt(i);
    lastIsUppercase=false;
    if (Character.isLetterOrDigit(c)) {
      prevIsUppercase=false;
      if (Character.isUpperCase(c) || Character.isDigit(c)) {
        prevIsUppercase=true;
        lastIsUppercase=true;
        buffer.append('(');
        if (!firstIdentifierLetter) {
          buffer.append("[a-z\\s0-9\\$]*");
        }
        buffer.append(c);
        if (allowToLower) {
          buffer.append('|');
          buffer.append(Character.toLowerCase(c));
        }
        if (!firstIdentifierLetter) {
          buffer.append("|[A-Za-z\\s0-9\\$]*[_-]+[");
          buffer.append(c);
          buffer.append(Character.toLowerCase(c));
          buffer.append("]");
        }
        buffer.append(')');
      }
 else       if (Character.isLowerCase(c) && allowToUpper) {
        buffer.append('[');
        buffer.append(c);
        buffer.append(Character.toUpperCase(c));
        buffer.append(']');
        if (lowerCaseWords) {
          buffer.append("([a-z\\s0-9\\$]*[-_]+)?");
        }
      }
 else {
        buffer.append(c);
      }
      firstIdentifierLetter=false;
    }
 else     if (c == '*') {
      buffer.append(".*");
      firstIdentifierLetter=true;
    }
 else     if (c == '.') {
      if (!firstIdentifierLetter) {
        buffer.append("[a-z\\s0-9\\$]*\\.");
      }
 else {
        buffer.append("\\.");
      }
      firstIdentifierLetter=true;
    }
 else     if (c == ' ') {
      buffer.append("([a-z\\s0-9\\$_-]*[\\ _-]+)+");
      firstIdentifierLetter=true;
    }
 else {
      if (c == ':' || prevIsUppercase) {
        buffer.append("[A-Za-z\\s0-9\\$]*");
      }
      firstIdentifierLetter=true;
      buffer.append("\\").append(c);
    }
  }
  if (!endsWithSpace) {
    buffer.append(".*");
  }
 else   if (lastIsUppercase) {
    buffer.append("[a-z\\s0-9\\$]*");
  }
  return buffer.toString();
}
