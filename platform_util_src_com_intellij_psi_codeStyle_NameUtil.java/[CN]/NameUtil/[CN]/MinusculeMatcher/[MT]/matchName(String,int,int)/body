{
  if (patternIndex == myPattern.length) {
    return FList.emptyList();
  }
  if ('*' == myPattern[patternIndex]) {
    return skipChars(name,patternIndex,nameIndex,true);
  }
  if (nameIndex == name.length()) {
    return null;
  }
  if ('.' == myPattern[patternIndex] && name.charAt(nameIndex) != '.') {
    return skipChars(name,patternIndex,nameIndex,false);
  }
  if (patternIndex == 0 && myOptions != MatchingCaseSensitivity.NONE && name.charAt(nameIndex) != myPattern[0]) {
    return null;
  }
  if (' ' == myPattern[patternIndex] && patternIndex != myPattern.length - 1) {
    return skipWords(name,patternIndex,nameIndex);
  }
  if (isWordSeparator(name.charAt(nameIndex))) {
    return skipSeparators(name,patternIndex,nameIndex);
  }
  if (StringUtil.toLowerCase(name.charAt(nameIndex)) != StringUtil.toLowerCase(myPattern[patternIndex])) {
    if (Character.isDigit(name.charAt(nameIndex)) || (name.charAt(nameIndex) == '.' && name.indexOf('.',nameIndex + 1) > 0)) {
      return matchName(name,patternIndex,nameIndex + 1);
    }
    return null;
  }
  if (myOptions == MatchingCaseSensitivity.ALL && name.charAt(nameIndex) != myPattern[patternIndex]) {
    return null;
  }
  int nextStart=NameUtil.nextWord(name,nameIndex);
  int lastUpper=isWordStart(myPattern[patternIndex]) ? 0 : -1;
  int i=1;
  while (true) {
    if (patternIndex + i == myPattern.length || i + nameIndex == nextStart) {
      break;
    }
    char p=myPattern[patternIndex + i];
    char w=name.charAt(i + nameIndex);
    if (lastUpper == i - 1 && isWordStart(p) && myOptions != MatchingCaseSensitivity.ALL) {
      if (p == w) {
        lastUpper=i;
      }
      p=StringUtil.toLowerCase(p);
    }
    if (myOptions != MatchingCaseSensitivity.ALL) {
      w=StringUtil.toLowerCase(w);
    }
    if (w != p) {
      break;
    }
    i++;
  }
  if (isFinalSpaceMatch(name,patternIndex,nameIndex,nextStart,i)) {
    return FList.<TextRange>emptyList().prepend(TextRange.from(nameIndex,i));
  }
  return matchAfterFragment(name,patternIndex,nameIndex,nextStart,lastUpper,i);
}
