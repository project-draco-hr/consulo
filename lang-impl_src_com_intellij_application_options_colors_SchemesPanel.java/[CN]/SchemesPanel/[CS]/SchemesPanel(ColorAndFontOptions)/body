{
  super(new BorderLayout());
  myOptions=options;
  JPanel schemesGroup=new JPanel(new BorderLayout());
  JPanel panel=new JPanel(new BorderLayout());
  schemesGroup.add(createSchemePanel(),BorderLayout.NORTH);
  schemesGroup.add(panel,BorderLayout.CENTER);
  add(schemesGroup,BorderLayout.CENTER);
  mySchemeComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (mySchemeComboBox.getSelectedIndex() != -1) {
        EditorColorsScheme selected=myOptions.selectScheme((String)mySchemeComboBox.getSelectedItem());
        if (ColorAndFontOptions.isDefault(selected)) {
          myDeleteButton.setEnabled(false);
          if (myExportButton != null) {
            myExportButton.setEnabled(false);
          }
        }
 else         if (ColorSettingsUtil.isSharedScheme(selected)) {
          myDeleteButton.setEnabled(true);
          if (myExportButton != null) {
            myExportButton.setEnabled(false);
          }
        }
 else {
          myDeleteButton.setEnabled(true);
          if (myExportButton != null) {
            myExportButton.setEnabled(true);
          }
        }
        if (areSchemesLoaded()) {
          myDispatcher.getMulticaster().schemeChanged(SchemesPanel.this);
        }
      }
    }
  }
);
}
