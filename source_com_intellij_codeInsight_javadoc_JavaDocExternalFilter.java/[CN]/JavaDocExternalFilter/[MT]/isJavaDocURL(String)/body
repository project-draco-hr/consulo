{
  final InputStream stream=getStreamByUrl(url);
  if (stream == null) {
    return false;
  }
  final Waiter waiter=new Waiter(){
    Boolean key=new Boolean(false);
    Object LOCK=new Object();
    public void sayYes(){
      key=new Boolean(true);
synchronized (LOCK) {
        LOCK.notify();
      }
    }
    public boolean runMe(){
      try {
synchronized (LOCK) {
          LOCK.wait(600);
        }
      }
 catch (      InterruptedException e) {
        return false;
      }
      return key.booleanValue();
    }
  }
;
  new Thread(new Runnable(){
    public void run(){
      try {
        BufferedReader reader=new BufferedReader(new InputStreamReader(stream));
        int lookUp=6;
        while (lookUp > 0) {
          if (reader.readLine().indexOf("Generated by javadoc") != -1) {
            waiter.sayYes();
          }
          lookUp--;
        }
        reader.close();
      }
 catch (      final Exception e) {
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            Messages.showMessageDialog("Cannot fetch remote source: " + e,"IO Error",Messages.getErrorIcon());
          }
        }
);
      }
    }
  }
).start();
  return waiter.runMe();
}
