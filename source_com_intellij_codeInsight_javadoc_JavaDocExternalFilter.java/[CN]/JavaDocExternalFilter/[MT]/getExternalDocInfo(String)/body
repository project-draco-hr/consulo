{
  if (surl == null) {
    return null;
  }
  Matcher anchorMatcher=ourAnchorsuffix.matcher(surl);
  String startSection="<!-- ======== START OF CLASS DATA ======== -->";
  String endSection="SUMMARY ======== -->";
  boolean isClassDoc=true;
  if (anchorMatcher.find()) {
    isClassDoc=false;
    startSection="<A NAME=\"" + anchorMatcher.group(1).toUpperCase() + "\"";
    endSection="<A NAME=";
  }
  final String root=ourAnchorsuffix.matcher(surl).replaceAll("");
  InputStream stream=getStreamByUrl(surl);
  if (stream == null) {
    return null;
  }
  BufferedReader buf=new BufferedReader(new InputStreamReader(stream));
  StringBuffer data=new StringBuffer();
  data.append("<HTML>\n");
  String read;
  try {
    while (((read=buf.readLine()) != null) && read.toUpperCase().indexOf(startSection) == -1)     ;
    if (read == null) {
      return null;
    }
    data.append(read);
    if (isClassDoc) {
      boolean skip=false;
      while (((read=buf.readLine()) != null) && !read.toUpperCase().equals("<DL>")) {
        if (read.toUpperCase().indexOf("</H2>") != -1) {
          data.append("</H2>\n");
          skip=true;
        }
 else         if (!skip)         data.append(read);
      }
      data.append("<DL>\n");
      StringBuffer classDetails=new StringBuffer();
      while (((read=buf.readLine()) != null) && !read.toUpperCase().equals("<HR>")) {
        classDetails.append(read);
        classDetails.append("\n");
      }
      while (((read=buf.readLine()) != null) && !read.toUpperCase().equals("<P>")) {
        data.append(read);
        data.append("\n");
      }
      data.append(classDetails);
      data.append("<P>\n");
    }
    while (((read=buf.readLine()) != null) && read.indexOf(endSection) == -1) {
      if (read.toUpperCase().indexOf("<HR>") == -1) {
        data.append(read);
        data.append("\n");
      }
    }
    data.append("</HTML>\n");
    buf.close();
  }
 catch (  final IOException e) {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        Messages.showMessageDialog("Cannot fetch remote JavaDocs: " + e,"IO Error",Messages.getErrorIcon());
      }
    }
);
  }
  String docText=correctRefs(root,data.toString());
  if (LOG.isDebugEnabled()) {
    LOG.debug("Filtered JavaDoc: " + docText + "\n");
  }
  return JavaDocUtil.fixupText(docText);
}
