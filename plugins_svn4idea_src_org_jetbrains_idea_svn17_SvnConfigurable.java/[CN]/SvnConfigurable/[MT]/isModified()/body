{
  if (myComponent == null) {
    return false;
  }
  SvnConfiguration17 configuration=SvnConfiguration17.getInstance(myProject);
  if (configuration.isUseDefaultConfiguation() != myUseDefaultCheckBox.isSelected()) {
    return true;
  }
  if (configuration.isIsUseDefaultProxy() != myUseCommonProxy.isSelected()) {
    return true;
  }
  if (configuration.UPDATE_LOCK_ON_DEMAND != myLockOnDemand.isSelected()) {
    return true;
  }
  if (configuration.DETECT_NESTED_COPIES != myDetectNestedWorkingCopiesCheckBox.isSelected()) {
    return true;
  }
  if (configuration.CHECK_NESTED_FOR_QUICK_MERGE != myCheckNestedInQuickMerge.isSelected()) {
    return true;
  }
  if (configuration.IGNORE_SPACES_IN_ANNOTATE != myIgnoreWhitespaceDifferenciesInCheckBox.isSelected()) {
    return true;
  }
  if (configuration.SHOW_MERGE_SOURCES_IN_ANNOTATE != myShowMergeSourceInAnnotate.isSelected()) {
    return true;
  }
  if (!configuration.myUseAcceleration.equals(acceleration()))   return true;
  final int annotateRevisions=configuration.getMaxAnnotateRevisions();
  final boolean useMaxInAnnot=annotateRevisions != -1;
  if (useMaxInAnnot != myMaximumNumberOfRevisionsCheckBox.isSelected()) {
    return true;
  }
  if (myMaximumNumberOfRevisionsCheckBox.isSelected()) {
    if (annotateRevisions != ((SpinnerNumberModel)myNumRevsInAnnotations.getModel()).getNumber().intValue()) {
      return true;
    }
  }
  if (configuration.mySSHConnectionTimeout / 1000 != ((SpinnerNumberModel)mySSHConnectionTimeout.getModel()).getNumber().longValue()) {
    return true;
  }
  if (configuration.mySSHReadTimeout / 1000 != ((SpinnerNumberModel)mySSHReadTimeout.getModel()).getNumber().longValue()) {
    return true;
  }
  return !configuration.getConfigurationDirectory().equals(myConfigurationDirectoryText.getText().trim());
}
