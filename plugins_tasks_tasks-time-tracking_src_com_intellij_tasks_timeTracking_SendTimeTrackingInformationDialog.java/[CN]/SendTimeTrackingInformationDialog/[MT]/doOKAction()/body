{
  final Matcher matcher=PATTERN.matcher(myTimeSpentField.getText());
  if (matcher.matches()) {
    final int timeSpent=Integer.valueOf(matcher.group(1)) * 24 * 60 + Integer.valueOf(matcher.group(2)) * 60 + Integer.valueOf(matcher.group(3));
    final TaskRepository repository=myTask.getRepository();
    if (repository != null && repository.isSupported(TaskRepository.TIME_MANAGEMENT)) {
      try {
        repository.updateTimeSpent(myTask,timeSpent,myCommentField.getText());
      }
 catch (      Exception e1) {
        Messages.showErrorDialog(myProject,"<html>Could not send information for " + myTask.getPresentableName() + "<br/>"+ e1.getMessage(),"Error");
        LOG.warn(e1);
      }
    }
  }
  super.doOKAction();
}
