{
  Project project=PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(editor.getContentComponent()));
  if (project == null) {
    if (myOriginalHandler != null) {
      myOriginalHandler.execute(editor,dataContext);
    }
    return;
  }
  final PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());
  if (file == null) {
    if (myOriginalHandler != null) {
      myOriginalHandler.execute(editor,dataContext);
    }
    return;
  }
  VisualPosition positionToRestore=null;
  SelectionModel selectionModel=editor.getSelectionModel();
  if (!selectionModel.hasSelection() && !selectionModel.hasBlockSelection()) {
    positionToRestore=editor.getCaretModel().getVisualPosition();
    selectionModel.selectLineAtCaret();
    if (!selectionModel.hasSelection())     return;
  }
  int start=selectionModel.getSelectionStart();
  int end=selectionModel.getSelectionEnd();
  EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_COPY).execute(editor,dataContext);
  if (start != end) {
    editor.getDocument().deleteString(start,end);
  }
 else {
    EditorModificationUtil.deleteSelectedText(editor);
  }
  if (positionToRestore != null) {
    editor.getCaretModel().moveToVisualPosition(positionToRestore);
  }
}
