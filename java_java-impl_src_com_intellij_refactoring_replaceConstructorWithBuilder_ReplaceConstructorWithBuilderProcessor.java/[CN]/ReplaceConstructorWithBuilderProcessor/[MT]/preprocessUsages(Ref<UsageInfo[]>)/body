{
  final MultiMap<PsiElement,String> conflicts=new MultiMap<PsiElement,String>();
  final JavaPsiFacade psiFacade=JavaPsiFacade.getInstance(myProject);
  final PsiClass builderClass=psiFacade.findClass(StringUtil.getQualifiedName(myPackageName,myClassName),GlobalSearchScope.projectScope(myProject));
  if (builderClass == null) {
    if (!myCreateNewBuilderClass) {
      conflicts.putValue(null,"Selected class was not found.");
    }
  }
 else   if (myCreateNewBuilderClass) {
    conflicts.putValue(builderClass,"Class with chosen name already exist.");
  }
  final PsiMethod commonConstructor=getMostCommonConstructor();
  if (commonConstructor == null) {
    conflicts.putValue(null,"Found constructors are not reducible to simple chain");
  }
  return showConflicts(conflicts,refUsages.get());
}
