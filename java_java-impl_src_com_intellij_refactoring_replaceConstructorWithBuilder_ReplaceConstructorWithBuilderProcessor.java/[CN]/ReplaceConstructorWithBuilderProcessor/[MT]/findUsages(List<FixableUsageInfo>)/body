{
  final String builderQualifiedName=StringUtil.getQualifiedName(myPackageName,myClassName);
  final PsiClass builderClass=JavaPsiFacade.getInstance(myProject).findClass(builderQualifiedName,GlobalSearchScope.projectScope(myProject));
  for (  PsiMethod constructor : myConstructors) {
    for (    PsiReference reference : ReferencesSearch.search(constructor)) {
      final PsiElement element=reference.getElement();
      final PsiNewExpression newExpression=PsiTreeUtil.getParentOfType(element,PsiNewExpression.class);
      if (newExpression != null && !PsiTreeUtil.isAncestor(builderClass,element,false)) {
        usages.add(new ReplaceConstructorWithSettersChainInfo(newExpression,StringUtil.getQualifiedName(myPackageName,myClassName),myParametersMap));
      }
    }
  }
}
