{
  JavaCodeStyleManager styleManager=JavaCodeStyleManager.getInstance(myProject);
  final StringBuffer buf=new StringBuffer();
  PsiMethod constructor=getMostCommonConstructor();
  if (constructor == null) {
    constructor=myConstructors[0];
    if (constructor.getParameterList().getParametersCount() == 0) {
      constructor=myConstructors[1];
    }
  }
  for (  PsiParameter parameter : constructor.getParameterList().getParameters()) {
    final String pureParamName=styleManager.variableNameToPropertyName(parameter.getName(),VariableKind.PARAMETER);
    if (buf.length() > 0)     buf.append(", ");
    buf.append(myParametersMap.get(pureParamName).getFieldName());
  }
  return myElementFactory.createMethodFromText("public " + constructor.getName() + " "+ createMethodName+ "(){\n return new "+ constructor.getName()+ "("+ buf.toString()+ ")"+ ";\n}",constructor);
}
