{
  if (returnStatus == ReturnStatus.shouldNotReturnValue) {
    return false;
  }
  final Ref<Boolean> alwaysHaveReturn=new Ref<Boolean>(true);
  final Ref<Boolean> sometimesHaveReturn=new Ref<Boolean>(false);
  final Ref<Boolean> hasExplicitReturn=new Ref<Boolean>(false);
  ControlFlowUtils.visitAllExitPoints(block,new ControlFlowUtils.ExitPointVisitor(){
    @Override public boolean visitExitPoint(    Instruction instruction,    @Nullable GrExpression returnValue){
      if (instruction instanceof ThrowingInstruction)       return true;
      if (instruction instanceof MaybeReturnInstruction && ((MaybeReturnInstruction)instruction).mayReturnValue()) {
        sometimesHaveReturn.set(true);
        return true;
      }
      if (instruction.getElement() instanceof GrReturnStatement && returnValue != null) {
        sometimesHaveReturn.set(true);
        hasExplicitReturn.set(true);
        return true;
      }
      alwaysHaveReturn.set(false);
      return true;
    }
  }
);
  if (returnStatus == ReturnStatus.mustReturnValue && !sometimesHaveReturn.get()) {
    return true;
  }
  return sometimesHaveReturn.get() && !alwaysHaveReturn.get();
}
