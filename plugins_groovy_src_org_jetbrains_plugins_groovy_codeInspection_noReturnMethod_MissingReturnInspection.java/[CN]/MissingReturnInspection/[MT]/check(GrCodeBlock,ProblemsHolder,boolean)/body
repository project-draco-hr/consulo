{
  final Ref<Boolean> always=new Ref<Boolean>(true);
  final Ref<Boolean> hasExplicitReturn=new Ref<Boolean>(false);
  final Ref<Boolean> sometimes=new Ref<Boolean>(false);
  ControlFlowUtils.visitAllExitPoints(block,new ControlFlowUtils.ExitPointVisitor(){
    public boolean visit(    Instruction instruction){
      if (instruction instanceof MaybeReturnInstruction) {
        if (((MaybeReturnInstruction)instruction).mayReturnValue()) {
          sometimes.set(true);
        }
 else {
          always.set(false);
        }
        return true;
      }
      final PsiElement element=instruction.getElement();
      if (element instanceof GrReturnStatement) {
        sometimes.set(true);
        hasExplicitReturn.set(true);
      }
 else       if (element instanceof GrThrowStatement || element instanceof GrAssertStatement) {
        sometimes.set(true);
      }
 else {
        always.set(false);
      }
      return true;
    }
  }
);
  if (!hasExplicitReturn.get()) {
    if (!mustReturnValue) {
      return;
    }
    mustReturnValue=true;
  }
  if ((mustReturnValue && !sometimes.get()) || (sometimes.get() && !always.get())) {
    addNoReturnMessage(block,holder);
  }
}
