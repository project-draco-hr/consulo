{
  LookupItem ret=LookupItemUtil.objectToLookupItem(completion);
  if (ret == null)   return null;
  if (getInsertHandler() != null) {
    ret.setAttribute(LookupItem.INSERT_HANDLER_ATTR,getInsertHandler());
    ret.setTailType(TailType.UNKNOWN);
  }
 else {
    ret.setTailType(element.myTailType);
  }
  for (  final Object key : myItemProperties.keySet()) {
    if (key == LookupItem.FORCE_SHOW_FQN_ATTR && ret.getObject() instanceof PsiClass) {
      @NonNls String packageName=((PsiClass)ret.getObject()).getQualifiedName();
      if (packageName != null && packageName.lastIndexOf('.') > 0) {
        packageName=packageName.substring(0,packageName.lastIndexOf('.'));
      }
 else {
        packageName="";
      }
      if (packageName.length() == 0) {
        packageName="default package";
      }
      ret.setAttribute(LookupItem.TAIL_TEXT_ATTR," (" + packageName + ")");
      ret.setAttribute(LookupItem.TAIL_TEXT_SMALL_ATTR,"");
    }
 else {
      if (completion instanceof PsiMember && key == LookupItem.FORCE_QUALIFY) {
        final PsiMember completionElement=(PsiMember)completion;
        final PsiClass containingClass=completionElement.getContainingClass();
        if (containingClass != null) {
          final String className=containingClass.getName();
          ret.setLookupString(className + "." + ret.getLookupString());
          ret.setAttribute(key,myItemProperties.get(key));
        }
      }
      ret.setAttribute(key,myItemProperties.get(key));
    }
  }
  final Pattern pattern=CompletionUtil.createCampelHumpsMatcher(prefix);
  PatternMatcher matcher=new Perl5Matcher();
  final String lookupString=ret.getLookupString();
  if (CompletionUtil.checkName(lookupString,prefix,caseInsensitive) || matcher.matches(lookupString,pattern)) {
    set.add(ret);
    return ret;
  }
  return null;
}
