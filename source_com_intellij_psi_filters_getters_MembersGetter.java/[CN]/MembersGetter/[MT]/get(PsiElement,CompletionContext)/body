{
  final FilterScopeProcessor processor=new FilterScopeProcessor(new OrFilter(new ClassFilter(PsiCompiledElement.class,false),new ModifierFilter(PsiModifier.PRIVATE,false)));
  final Object[] elements=myBaseGetter.get(context,completionContext);
  for (  final Object element : elements) {
    final PsiClass psiClass;
    if (element instanceof PsiClass) {
      psiClass=(PsiClass)context;
      psiClass.processDeclarations(processor,ResolveState.initial(),null,context);
    }
 else     if (element instanceof PsiType) {
      psiClass=PsiUtil.resolveClassInType((PsiType)element);
      if (psiClass != null) {
        psiClass.processDeclarations(processor,ResolveState.initial(),null,context);
      }
    }
 else {
      ((PsiElement)element).processDeclarations(processor,ResolveState.initial(),null,context);
    }
  }
  final List<PsiElement> results=processor.getResults();
  return results.toArray(new PsiElement[results.size()]);
}
