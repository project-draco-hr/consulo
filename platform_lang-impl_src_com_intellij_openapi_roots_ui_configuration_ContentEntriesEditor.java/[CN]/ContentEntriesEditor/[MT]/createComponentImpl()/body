{
  final Module module=getModule();
  final Project project=module.getProject();
  myContentEntryEditorListener=new MyContentEntryEditorListener();
  final JPanel mainPanel=new JPanel(new BorderLayout());
  final JPanel entriesPanel=new JPanel(new BorderLayout());
  final DefaultActionGroup group=new DefaultActionGroup();
  final AddContentEntryAction action=new AddContentEntryAction();
  action.registerCustomShortcutSet(KeyEvent.VK_C,InputEvent.ALT_DOWN_MASK,mainPanel);
  group.add(action);
  myEditorsPanel=new ScrollablePanel(new VerticalStackLayout());
  myEditorsPanel.setBackground(BACKGROUND_COLOR);
  JScrollPane myScrollPane=ScrollPaneFactory.createScrollPane(myEditorsPanel,true);
  entriesPanel.add(new ToolbarPanel(myScrollPane,group),BorderLayout.CENTER);
  final JBSplitter splitter=new OnePixelSplitter(false);
  splitter.setProportion(0.6f);
  splitter.setHonorComponentsMinimumSize(true);
  myRootTreeEditor=new ContentEntryTreeEditor(project,myState);
  JComponent component=myRootTreeEditor.createComponent();
  component.setBorder(new CustomLineBorder(1,0,0,0));
  splitter.setFirstComponent(component);
  splitter.setSecondComponent(entriesPanel);
  JPanel contentPanel=new JPanel(new GridBagLayout());
  final ActionToolbar actionToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,myRootTreeEditor.getEditingActionsGroup(),true);
  contentPanel.add(new JLabel("Mark as:"),new GridBagConstraints(0,0,1,1,0,0,GridBagConstraints.WEST,0,new Insets(0,5,0,5),0,0));
  contentPanel.add(actionToolbar.getComponent(),new GridBagConstraints(1,0,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));
  contentPanel.add(splitter,new GridBagConstraints(0,GridBagConstraints.RELATIVE,2,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
  mainPanel.add(contentPanel,BorderLayout.CENTER);
  final ModifiableRootModel model=getModel();
  if (model != null) {
    final ContentEntry[] contentEntries=model.getContentEntries();
    if (contentEntries.length > 0) {
      for (      final ContentEntry contentEntry : contentEntries) {
        addContentEntryPanel(contentEntry);
      }
      selectContentEntry(contentEntries[0]);
    }
  }
  return mainPanel;
}
