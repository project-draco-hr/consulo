{
  final GridInsertLocation insertLocation=getGridInsertLocation(myEditor,x,y,dragColumnDelta);
  if (insertLocation.getContainer() != null) {
    if (isDropInsertAllowed(insertLocation,componentCount)) {
      placeInsertFeedbackPainter(insertLocation,componentCount);
      return copyOnDrop ? DnDConstants.ACTION_COPY : DnDConstants.ACTION_MOVE;
    }
  }
  if (componentCount > 0) {
    final RadContainer containerAt=FormEditingUtil.getRadContainerAt(myEditor,x,y,0);
    if (containerAt != null) {
      final Point targetPoint=SwingUtilities.convertPoint(myEditor.getDragLayer(),x,y,containerAt.getDelegee());
      if (containerAt.canDrop(targetPoint,componentCount)) {
        Rectangle feedbackRect=containerAt.getDropFeedbackRectangle(targetPoint.x,targetPoint.y,componentCount);
        if (feedbackRect != null) {
          final Rectangle rc=SwingUtilities.convertRectangle(containerAt.getDelegee(),feedbackRect,myEditor.getActiveDecorationLayer());
          myEditor.getActiveDecorationLayer().putFeedback(rc);
        }
 else {
          myEditor.getActiveDecorationLayer().removeFeedback();
        }
        return copyOnDrop ? DnDConstants.ACTION_COPY : DnDConstants.ACTION_MOVE;
      }
 else {
        myEditor.getActiveDecorationLayer().removeFeedback();
      }
    }
  }
  return DnDConstants.ACTION_NONE;
}
