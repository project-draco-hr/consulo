{
  myFeatures=features;
  myProject=project;
  myCurrentFeature=0;
  final HTMLEditorKit editorKit=new HTMLEditorKit();
  myBrowser.setEditorKit(editorKit);
  myBrowser.setContentType(UIUtil.HTML_MIME);
  myBrowser.setBackground(Color.white);
  myScrollPane.setPreferredSize(new Dimension(600,200));
  myBrowser.setEditable(false);
  if (UIUtil.isUnderGTKLookAndFeel()) {
    myBrowser.setEnabled(true);
  }
  myPanel.setBorder(BorderFactory.createEmptyBorder(5,0,0,0));
  myLabel.setIcon(IconLoader.getIcon("/general/tip.png"));
  Font font=myLabel.getFont();
  myLabel.setFont(font.deriveFont(Font.PLAIN,font.getSize() + 4));
  update();
  myCloseButton.setVisible(false);
  myPanel.addAncestorListener(new AncestorListener(){
    public void ancestorAdded(    AncestorEvent event){
    }
    public void ancestorRemoved(    AncestorEvent event){
      boolean shouldKeep=myKeepOpen.isSelected();
      PropertiesComponent.getInstance().setValue(KEEP_OPTION_NAME,String.valueOf(shouldKeep));
      if (shouldKeep)       persist();
    }
    public void ancestorMoved(    AncestorEvent event){
    }
  }
);
  if (myFeatures.length > 1) {
    myNextHintButton.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        if (myCurrentFeature < myFeatures.length - 1) {
          myCurrentFeature++;
        }
        update();
      }
    }
);
    myPrevHintButton.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        if (myCurrentFeature > 0) {
          myCurrentFeature--;
        }
        update();
      }
    }
);
  }
 else {
    myNextHintButton.setVisible(false);
    myPrevHintButton.setVisible(false);
  }
  myKeepOpen.setSelected(PropertiesComponent.getInstance().isTrueValue(KEEP_OPTION_NAME));
}
