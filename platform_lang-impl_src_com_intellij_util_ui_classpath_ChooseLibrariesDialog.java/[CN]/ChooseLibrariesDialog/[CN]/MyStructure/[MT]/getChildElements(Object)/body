{
  final ArrayList<Object> result=new ArrayList<Object>();
  if (element instanceof Application) {
    Collections.addAll(result,ProjectManager.getInstance().getOpenProjects());
    final LibraryTablesRegistrar instance=LibraryTablesRegistrar.getInstance();
    result.add(instance.getLibraryTable());
    result.addAll(instance.getCustomLibraryTables());
  }
 else   if (element instanceof Project) {
    Collections.addAll(result,ModuleManager.getInstance((Project)element).getModules());
    result.add(LibraryTablesRegistrar.getInstance().getLibraryTable((Project)element));
  }
 else   if (element instanceof LibraryTable) {
    Collections.addAll(result,((LibraryTable)element).getLibraries());
  }
 else   if (element instanceof Module) {
    for (    OrderEntry entry : ModuleRootManager.getInstance((Module)element).getOrderEntries()) {
      if (entry instanceof LibraryOrderEntry) {
        final LibraryOrderEntry libraryOrderEntry=(LibraryOrderEntry)entry;
        if (LibraryTableImplUtil.MODULE_LEVEL.equals(libraryOrderEntry.getLibraryLevel())) {
          final Library library=libraryOrderEntry.getLibrary();
          result.add(library);
        }
      }
    }
  }
  final Iterator<Object> it=result.iterator();
  while (it.hasNext()) {
    if (!acceptsElement(it.next()))     it.remove();
  }
  for (  Object o : result) {
    myLibraryMap.put(o,element);
  }
  return result.toArray();
}
