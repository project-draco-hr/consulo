{
  Modifier modifier=null;
  if (myEvaluatedVariable != null && myContext != null) {
    modifier=new Modifier(){
      public boolean canInspect(){
        return true;
      }
      public boolean canSetValue(){
        return true;
      }
      public void setValue(      Value value) throws ClassNotLoadedException, InvalidTypeException {
        StackFrameProxyImpl frameProxy=myContext.getFrameProxy();
        try {
          frameProxy.setValue(myEvaluatedVariable,value);
        }
 catch (        EvaluateException e) {
          LOG.error(e);
        }
      }
      public Type getExpectedType() throws ClassNotLoadedException {
        try {
          return myEvaluatedVariable.getVariable().type();
        }
 catch (        EvaluateException e) {
          LOG.error(e);
          return null;
        }
      }
      public NodeDescriptorImpl getInspectItem(      Project project){
        return new LocalVariableDescriptorImpl(project,myEvaluatedVariable);
      }
    }
;
  }
  return modifier;
}
