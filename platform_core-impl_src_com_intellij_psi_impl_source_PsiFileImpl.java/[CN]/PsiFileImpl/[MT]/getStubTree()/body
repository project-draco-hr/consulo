{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  if (Boolean.TRUE.equals(getUserData(BUILDING_STUB)))   return null;
  final StubTree derefd=derefStub();
  if (derefd != null)   return derefd;
  if (getTreeElement() != null)   return null;
  if (!(getContentElementType() instanceof IStubFileElementType))   return null;
  final VirtualFile vFile=getVirtualFile();
  if (!(vFile instanceof VirtualFileWithId))   return null;
  ObjectStubTree tree=StubTreeLoader.getInstance().readOrBuild(getProject(),vFile,this);
  if (!(tree instanceof StubTree))   return null;
  StubTree stubHolder=(StubTree)tree;
  final List<Pair<IStubFileElementType,PsiFile>> roots=StubTreeBuilder.getStubbedRoots(getViewProvider());
synchronized (PsiLock.LOCK) {
    if (getTreeElement() != null)     return null;
    final StubTree derefdOnLock=derefStub();
    if (derefdOnLock != null)     return derefdOnLock;
    final PsiFileStub[] stubRoots=stubHolder.getRoot().getStubRoots();
    int matchingRoot=0;
    for (    Pair<IStubFileElementType,PsiFile> root : roots) {
      final PsiFileStub matchingStub=stubRoots[matchingRoot++];
      ((StubBase)matchingStub).setPsi(root.second);
      final StubTree stubTree=new StubTree(matchingStub);
      stubTree.setDebugInfo("created in getStubTree()");
      if (root.second == this)       stubHolder=stubTree;
      ((PsiFileImpl)root.second).myStub=new SoftReference<StubTree>(stubTree);
    }
    return stubHolder;
  }
}
