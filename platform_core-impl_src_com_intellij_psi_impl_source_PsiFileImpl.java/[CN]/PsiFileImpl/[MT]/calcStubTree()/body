{
synchronized (myStubLock) {
    final FileElement fileElement=calcTreeElement();
    StubTree tree=fileElement.getUserData(STUB_TREE_IN_PARSED_TREE);
    if (tree == null) {
      IElementType contentElementType=getContentElementType();
      if (!(contentElementType instanceof IStubFileElementType)) {
        final StringBuilder builder=new StringBuilder();
        builder.append("ContentElementType: ").append(contentElementType).append("; file: ").append(this);
        builder.append("\n\t").append("Boolean.TRUE.equals(getUserData(BUILDING_STUB)) = ").append(Boolean.TRUE.equals(getUserData(BUILDING_STUB)));
        builder.append("\n\t").append("getTreeElementNoLock() = ").append(getTreeElementNoLock());
        final VirtualFile vFile=getVirtualFile();
        builder.append("\n\t").append("vFile instanceof VirtualFileWithId = ").append(vFile instanceof VirtualFileWithId);
        builder.append("\n\t").append("StubUpdatingIndex.canHaveStub(vFile) = ").append(StubTreeLoader.getInstance().canHaveStub(vFile));
        LOG.error(builder.toString());
      }
      final StubElement currentStubTree=((IStubFileElementType)contentElementType).getBuilder().buildStubTree(this);
      tree=new StubTree((PsiFileStub)currentStubTree);
      bindFakeStubsToTree(tree);
      fileElement.putUserData(STUB_TREE_IN_PARSED_TREE,tree);
    }
    return tree;
  }
}
