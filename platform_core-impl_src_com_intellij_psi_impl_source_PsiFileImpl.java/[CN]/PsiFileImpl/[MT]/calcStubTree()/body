{
  FileElement fileElement=calcTreeElement();
synchronized (myStubFromTreeLock) {
    StubTree tree=fileElement.getUserData(STUB_TREE_IN_PARSED_TREE);
    if (tree == null) {
      ApplicationManager.getApplication().assertReadAccessAllowed();
      IElementType contentElementType=getContentElementType();
      if (!(contentElementType instanceof IStubFileElementType)) {
        VirtualFile vFile=getVirtualFile();
        LOG.error("ContentElementType: " + contentElementType + "; file: "+ this+ "\n\t"+ "Boolean.TRUE.equals(getUserData(BUILDING_STUB)) = "+ Boolean.TRUE.equals(getUserData(BUILDING_STUB))+ "\n\t"+ "getTreeElement() = "+ getTreeElement()+ "\n\t"+ "vFile instanceof VirtualFileWithId = "+ (vFile instanceof VirtualFileWithId)+ "\n\t"+ "StubUpdatingIndex.canHaveStub(vFile) = "+ StubTreeLoader.getInstance().canHaveStub(vFile));
      }
      StubElement currentStubTree=((IStubFileElementType)contentElementType).getBuilder().buildStubTree(this);
      tree=new StubTree((PsiFileStub)currentStubTree);
      try {
        TreeUtil.bindStubsToTree(this,tree);
      }
 catch (      TreeUtil.StubBindingException e) {
        rebuildStub();
        LOG.error("Stub and PSI element type mismatch in " + getName() + ": "+ e.getMessage());
      }
      fileElement.putUserData(STUB_TREE_IN_PARSED_TREE,tree);
    }
    return tree;
  }
}
