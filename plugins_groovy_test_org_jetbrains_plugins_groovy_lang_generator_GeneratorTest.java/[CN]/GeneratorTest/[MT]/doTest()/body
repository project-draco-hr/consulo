{
  final String relTestPath=getTestName(true) + ".test";
  final List<String> data=SimpleGroovyFileSetTestCase.readInput(getTestDataPath() + "/" + relTestPath);
  final TempDirTestFixture tempDirFixture=myFixture.getTempDirFixture();
  final StringBuffer buffer=new StringBuffer();
  final GroovyToJavaGeneratorTester groovyToJavaGeneratorTester=new GroovyToJavaGeneratorTester(relTestPath,data.get(0),getProject());
  final GeneratingCompiler.GenerationItem[][] generatedItems=new GeneratingCompiler.GenerationItem[1][1];
  GeneratingCompiler.GenerationItem[] generationItems=groovyToJavaGeneratorTester.getGenerationItems(null);
  VirtualFile outputDirVirtualFile=tempDirFixture.getFile("");
  generatedItems[0]=groovyToJavaGeneratorTester.generate(null,generationItems,outputDirVirtualFile);
  for (  GeneratingCompiler.GenerationItem generatedItem : generatedItems[0]) {
    final String path=tempDirFixture.getTempDirPath() + File.separator + generatedItem.getPath();
    BufferedReader reader=new BufferedReader(new FileReader(path));
    int ch=reader.read();
    while (ch != -1) {
      buffer.append((char)ch);
      ch=reader.read();
    }
    reader.close();
    buffer.append("\n");
    buffer.append("---");
    buffer.append("\n");
  }
  assertEquals(data.get(1).trim(),buffer.toString().trim());
}
