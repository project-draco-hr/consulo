{
  final TempDirTestFixture tempDirFixture=new TempDirTestFixtureImpl();
  tempDirFixture.setUp();
  final StringBuffer buffer=new StringBuffer();
  try {
    final GroovyToJavaGeneratorTester groovyToJavaGeneratorTester=new GroovyToJavaGeneratorTester(relTestPath,data[0],myProject);
    final GeneratingCompiler.GenerationItem[][] generatedItems=new GeneratingCompiler.GenerationItem[1][1];
    GeneratingCompiler.GenerationItem[] generationItems=groovyToJavaGeneratorTester.getGenerationItems(null);
    myOutputDirVirtualFile=tempDirFixture.getFile("");
    generatedItems[0]=groovyToJavaGeneratorTester.generate(null,generationItems,myOutputDirVirtualFile);
    for (    GeneratingCompiler.GenerationItem generatedItem : generatedItems[0]) {
      final String path=tempDirFixture.getTempDirPath() + File.separator + generatedItem.getPath();
      BufferedReader reader=new BufferedReader(new FileReader(path));
      int ch=reader.read();
      while (ch != -1) {
        buffer.append((char)ch);
        ch=reader.read();
      }
      reader.close();
      buffer.append("\n");
      buffer.append("---");
      buffer.append("\n");
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
 finally {
    System.out.println("----------" + relTestPath + "----------");
    System.out.println(buffer);
    tempDirFixture.tearDown();
  }
  return buffer.toString();
}
