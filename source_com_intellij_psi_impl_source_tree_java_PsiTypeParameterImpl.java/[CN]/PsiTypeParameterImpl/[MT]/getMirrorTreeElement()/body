{
synchronized (PsiLock.LOCK) {
    CompositeElement actualTree=getTreeElement();
    if (actualTree != null) {
      myParsedFromRepository=null;
      return actualTree;
    }
    if (myParsedFromRepository != null)     return myParsedFromRepository;
    long repositoryId=getRepositoryId();
    if (repositoryId >= 0) {
      String text;
      PsiElement owner=myOwner.getParent();
      if (owner instanceof PsiClass) {
        text=getRepositoryManager().getClassView().getParameterText(repositoryId,getIndex());
      }
 else       if (owner instanceof PsiMethod) {
        text=getRepositoryManager().getMethodView().getTypeParameterText(repositoryId,getIndex());
      }
 else {
        LOG.error("Wrong owner");
        text="";
      }
      try {
        PsiTypeParameter typeParameter=myManager.getElementFactory().createTypeParameterFromText(text,this);
        myParsedFromRepository=(CompositeElement)SourceTreeToPsiMap.psiElementToTree(typeParameter);
        new DummyHolder(myManager,myParsedFromRepository,this);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
      return myParsedFromRepository;
    }
    return calcTreeElement();
  }
}
