{
  myTabbedPane=new TabbedPaneWrapper();
  myPanel=new JPanel(new BorderLayout());
  for (  BreakpointPanelProvider panelProvider : myBreakpointPanelProviders) {
    AbstractBreakpointPanel[] panels=panelProvider.getBreakpointPanels(myProject,this);
    for (    AbstractBreakpointPanel breakpointPanel : panels) {
      myPanels.add(breakpointPanel);
      addPanel(breakpointPanel,breakpointPanel.getTabTitle());
    }
  }
  final ChangeListener tabPaneChangeListener=new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      AbstractBreakpointPanel panel=getSelectedPanel();
      if (panel != null) {
        panel.ensureSelectionExists();
      }
    }
  }
;
  myTabbedPane.addChangeListener(tabPaneChangeListener);
  myDisposeActions.add(new Runnable(){
    public void run(){
      myTabbedPane.removeChangeListener(tabPaneChangeListener);
    }
  }
);
  myPanel.add(myTabbedPane.getComponent(),BorderLayout.CENTER);
  ActionListener closeAction=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      close(CANCEL_EXIT_CODE);
    }
  }
;
  myPanel.registerKeyboardAction(closeAction,KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myPanel.setPreferredSize(new Dimension(600,500));
  return myPanel;
}
