{
  super.visitLiteralExpression(expression);
  final PsiType type=expression.getType();
  if (!ClassUtils.isPrimitiveNumericType(type)) {
    return;
  }
  if (PsiType.CHAR.equals(type)) {
    return;
  }
  if (isSpecialCaseLiteral(expression)) {
    return;
  }
  if (ExpressionUtils.isDeclaredConstant(expression)) {
    return;
  }
  if (ignoreInHashCode) {
    final PsiMethod containingMethod=PsiTreeUtil.getParentOfType(expression,PsiMethod.class);
    if (MethodUtils.isHashCode(containingMethod)) {
      return;
    }
  }
  if (ignoreInTestCode && TestUtils.isInTestCode(expression)) {
    return;
  }
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiPrefixExpression) {
    registerError(parent);
  }
 else {
    registerError(expression);
  }
}
