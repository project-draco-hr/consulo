{
  super.visitLiteralExpression(expression);
  final PsiType type=expression.getType();
  if (!ClassUtils.isPrimitiveNumericType(type) || PsiType.CHAR.equals(type)) {
    return;
  }
  if (isSpecialCaseLiteral(expression) || ExpressionUtils.isDeclaredConstant(expression)) {
    return;
  }
  if (ignoreInHashCode) {
    final PsiMethod containingMethod=PsiTreeUtil.getParentOfType(expression,PsiMethod.class);
    if (MethodUtils.isHashCode(containingMethod)) {
      return;
    }
  }
  if (ignoreInTestCode && TestUtils.isInTestCode(expression)) {
    return;
  }
  if (ignoreInAnnotations) {
    final boolean insideAnnotation=AnnotationUtil.isInsideAnnotation(expression);
    if (insideAnnotation) {
      return;
    }
  }
  if (ignoreInitialCapacity) {
    final PsiExpressionList expressionList=PsiTreeUtil.getParentOfType(expression,PsiExpressionList.class,true,PsiMember.class);
    if (expressionList != null) {
      final PsiElement parent=expressionList.getParent();
      if (parent instanceof PsiNewExpression) {
        final PsiNewExpression newExpression=(PsiNewExpression)parent;
        if (TypeUtils.expressionHasTypeOrSubtype(newExpression,CommonClassNames.JAVA_LANG_ABSTRACT_STRING_BUILDER,CommonClassNames.JAVA_UTIL_MAP,CommonClassNames.JAVA_UTIL_COLLECTION) != null) {
          return;
        }
      }
    }
  }
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiPrefixExpression) {
    registerError(parent);
  }
 else {
    registerError(expression);
  }
}
