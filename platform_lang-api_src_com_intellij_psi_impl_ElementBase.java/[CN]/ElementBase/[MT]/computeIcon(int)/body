{
  PsiElement psiElement=(PsiElement)this;
  if (!psiElement.isValid())   return null;
  if (Registry.is("psi.deferIconLoading")) {
    Icon baseIcon=LastComputedIcon.get(psiElement,flags);
    if (baseIcon == null) {
      TIntObjectHashMap<Icon> cache=getUserData(BASE_ICONS);
      if (cache == null) {
        cache=putUserDataIfAbsent(BASE_ICONS,new TIntObjectHashMap<Icon>());
      }
synchronized (cache) {
        if (!cache.containsKey(flags)) {
          cache.put(flags,computeBaseIcon(flags));
        }
        baseIcon=cache.get(flags);
      }
    }
    return IconDeferrer.getInstance().defer(baseIcon,new ElementIconRequest(psiElement,flags),ICON_COMPUTE);
  }
  return computeIconNow(psiElement,flags);
}
