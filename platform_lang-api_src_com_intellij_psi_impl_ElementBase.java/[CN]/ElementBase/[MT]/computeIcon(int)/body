{
  PsiElement psiElement=(PsiElement)this;
  Icon baseIcon=LastComputedIcon.get(psiElement,flags);
  if (baseIcon == null) {
    if (myBaseIcon == null) {
      myBaseIcon=new TIntObjectHashMap<Icon>(3);
    }
    if (!myBaseIcon.containsKey(flags)) {
      myBaseIcon.put(flags,computeBaseIcon(flags));
    }
    baseIcon=myBaseIcon.get(flags);
  }
  final Project project=psiElement.getProject();
  if (isToDeferIconLoading()) {
    return IconDeferrer.getInstance().defer(baseIcon,new ElementIconRequest(psiElement,flags),new NullableFunction<ElementIconRequest,Icon>(){
      public Icon fun(      ElementIconRequest request){
        if (project.isDisposed())         return null;
        final PsiElement element=request.getElement();
        if (!element.isValid())         return null;
        if (element.getProject().isDisposed())         return null;
        return computeIconNow(element,request.getFlags());
      }
    }
);
  }
 else {
    if (!psiElement.isValid())     return null;
    return computeIconNow(psiElement,flags);
  }
}
