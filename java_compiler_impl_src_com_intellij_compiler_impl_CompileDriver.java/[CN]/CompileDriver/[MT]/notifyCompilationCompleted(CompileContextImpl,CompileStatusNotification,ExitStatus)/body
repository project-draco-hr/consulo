{
  final long duration=System.currentTimeMillis() - compileContext.getStartCompilationStamp();
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (myProject.isDisposed()) {
        return;
      }
      final int errorCount=compileContext.getMessageCount(CompilerMessageCategory.ERROR);
      final int warningCount=compileContext.getMessageCount(CompilerMessageCategory.WARNING);
      final String statusMessage=createStatusMessage(_status,warningCount,errorCount);
      final MessageType messageType=errorCount > 0 ? MessageType.ERROR : warningCount > 0 ? MessageType.WARNING : MessageType.INFO;
      if (duration > ONE_MINUTE_MS) {
        ToolWindowManager.getInstance(myProject).notifyByBalloon(ToolWindowId.MESSAGES_WINDOW,messageType,statusMessage);
      }
      NOTIFICATION_GROUP.createNotification(_status == ExitStatus.UP_TO_DATE ? "Compilation: all files are up to date" : statusMessage,messageType).notify(myProject);
      if (_status != ExitStatus.UP_TO_DATE && compileContext.getMessageCount(null) > 0) {
        compileContext.addMessage(CompilerMessageCategory.INFORMATION,statusMessage,null,-1,-1);
      }
      if (callback != null) {
        callback.finished(_status == ExitStatus.CANCELLED,errorCount,warningCount,compileContext);
      }
    }
  }
,ModalityState.NON_MODAL);
}
