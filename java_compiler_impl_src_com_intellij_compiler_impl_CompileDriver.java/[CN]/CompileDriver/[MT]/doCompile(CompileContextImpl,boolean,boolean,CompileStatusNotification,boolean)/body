{
  ExitStatus status=ExitStatus.ERRORS;
  boolean wereExceptions=false;
  final long vfsTimestamp=((PersistentFS)ManagingFS.getInstance()).getCreationTimestamp();
  try {
    if (checkCachesVersion) {
      checkCachesVersion(compileContext,vfsTimestamp);
      if (compileContext.isRebuildRequested()) {
        return;
      }
    }
    writeStatus(new CompileStatus(CompilerConfigurationImpl.DEPENDENCY_FORMAT_VERSION,true,vfsTimestamp),compileContext);
    if (compileContext.getMessageCount(CompilerMessageCategory.ERROR) > 0) {
      return;
    }
    myAllOutputDirectories=getAllOutputDirectories(compileContext);
    status=doCompile(compileContext,isRebuild,forceCompile,false);
  }
 catch (  Throwable ex) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      throw new RuntimeException(ex);
    }
    wereExceptions=true;
    final PluginId pluginId=IdeErrorsDialog.findPluginId(ex);
    final StringBuilder message=new StringBuilder();
    message.append("Internal error");
    if (pluginId != null) {
      message.append(" (Plugin: ").append(pluginId).append(")");
    }
    message.append(": ").append(ex.getMessage());
    compileContext.addMessage(CompilerMessageCategory.ERROR,message.toString(),null,-1,-1);
    if (pluginId != null) {
      throw new PluginException(ex,pluginId);
    }
    throw new RuntimeException(ex);
  }
 finally {
    dropDependencyCache(compileContext);
    final ExitStatus _status=status;
    if (compileContext.isRebuildRequested()) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          final CompilerMessageImpl msg=new CompilerMessageImpl(myProject,CompilerMessageCategory.INFORMATION,compileContext.getRebuildReason());
          doRebuild(callback,msg,false,compileContext.getCompileScope());
        }
      }
,ModalityState.NON_MODAL);
    }
 else {
      if (!myProject.isDisposed()) {
        writeStatus(new CompileStatus(CompilerConfigurationImpl.DEPENDENCY_FORMAT_VERSION,wereExceptions,vfsTimestamp),compileContext);
      }
      notifyCompilationCompleted(compileContext,callback,_status);
    }
  }
}
