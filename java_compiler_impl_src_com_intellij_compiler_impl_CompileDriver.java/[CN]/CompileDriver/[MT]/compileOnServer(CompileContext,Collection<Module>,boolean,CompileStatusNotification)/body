{
  final Client client=JpsServerManager.getInstance().getClient();
  if (client == null) {
    return null;
  }
  List<String> moduleNames=Collections.emptyList();
  if (modules != null && modules.size() > 0) {
    moduleNames=new ArrayList<String>(modules.size());
    for (    Module module : modules) {
      moduleNames.add(module.getName());
    }
  }
  compileContext.getProgressIndicator().setIndeterminate(true);
  return client.sendCompileRequest(myProject.getLocation(),moduleNames,!isMake,new JpsServerResponseHandlerAdapter(){
    public void handleCompileMessage(    JpsRemoteProto.Message.Response.CompileMessage compilerMessage){
      final JpsRemoteProto.Message.Response.CompileMessage.Kind kind=compilerMessage.getKind();
      if (kind == JpsRemoteProto.Message.Response.CompileMessage.Kind.PROGRESS) {
        compileContext.getProgressIndicator().setText(compilerMessage.getText());
      }
 else {
        final CompilerMessageCategory category=kind == JpsRemoteProto.Message.Response.CompileMessage.Kind.ERROR ? CompilerMessageCategory.ERROR : kind == JpsRemoteProto.Message.Response.CompileMessage.Kind.WARNING ? CompilerMessageCategory.WARNING : CompilerMessageCategory.INFORMATION;
        compileContext.addMessage(category,compilerMessage.getText(),compilerMessage.getSourceFilePath(),compilerMessage.getLine(),compilerMessage.getColumn());
      }
    }
    @Override public boolean handleBuildEvent(    JpsRemoteProto.Message.Response.BuildEvent event){
      final JpsRemoteProto.Message.Response.BuildEvent.Type eventType=event.getEventType();
switch (eventType) {
case BUILD_STARTED:
        compileContext.getProgressIndicator().setText("Compilation started");
      break;
case BUILD_COMPLETED:
    compileContext.getProgressIndicator().setText("Compilation completed");
  break;
case BUILD_CANCELED:
compileContext.getProgressIndicator().setText("Compilation cancelled");
break;
}
return eventType == JpsRemoteProto.Message.Response.BuildEvent.Type.BUILD_COMPLETED || eventType == JpsRemoteProto.Message.Response.BuildEvent.Type.BUILD_CANCELED;
}
public void handleFailure(JpsRemoteProto.Message.Failure failure){
compileContext.addMessage(CompilerMessageCategory.ERROR,failure.getDescription(),null,-1,-1);
final String trace=failure.getStacktrace();
if (trace != null) {
LOG.info(trace);
System.out.println(trace);
}
}
public void sessionTerminated(){
if (callback != null) {
callback.finished(false,compileContext.getMessageCount(CompilerMessageCategory.ERROR),compileContext.getMessageCount(CompilerMessageCategory.WARNING),compileContext);
}
}
}
);
}
