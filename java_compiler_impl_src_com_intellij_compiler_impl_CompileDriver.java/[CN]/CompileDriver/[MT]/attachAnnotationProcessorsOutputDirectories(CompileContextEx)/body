{
  final LocalFileSystem lfs=LocalFileSystem.getInstance();
  final CompilerConfiguration config=CompilerConfiguration.getInstance(myProject);
  final Set<Module> affected=new HashSet<Module>(Arrays.asList(context.getCompileScope().getAffectedModules()));
  for (  Module module : affected) {
    if (!config.isAnnotationProcessingEnabled(module)) {
      continue;
    }
    final String path=CompilerPaths.getAnnotationProcessorsGenerationPath(module);
    if (path == null) {
      continue;
    }
    final VirtualFile vFile=lfs.findFileByPath(path);
    if (vFile == null) {
      continue;
    }
    if (ModuleRootManager.getInstance(module).getFileIndex().isInSourceContent(vFile)) {
      continue;
    }
    context.addScope(new FileSetCompileScope(Collections.singletonList(vFile),new Module[]{module}));
    context.assignModule(vFile,module,false);
  }
}
