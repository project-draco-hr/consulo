{
  ExitStatus status=ExitStatus.ERRORS;
  boolean wereExceptions=false;
  try {
    if (checkCachesVersion) {
      checkCachesVersion(compileContext);
      if (compileContext.isRebuildRequested()) {
        return;
      }
    }
    writeStatus(new CompileStatus(CompilerConfigurationImpl.DEPENDENCY_FORMAT_VERSION,true),compileContext);
    if (compileContext.getMessageCount(CompilerMessageCategory.ERROR) > 0) {
      return;
    }
    myAllOutputDirectories=getAllOutputDirectories();
    status=doCompile(compileContext,isRebuild,forceCompile,trackDependencies,false);
  }
 catch (  Throwable ex) {
    wereExceptions=true;
    PluginId pluginId=IdeErrorsDialog.findPluginId(ex);
    if (pluginId != null) {
      throw new PluginException(ex,pluginId);
    }
    throw new RuntimeException(ex);
  }
 finally {
    dropDependencyCache(compileContext);
    final ExitStatus _status=status;
    if (compileContext.isRebuildRequested()) {
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          doRebuild(callback,new CompilerMessageImpl(myProject,CompilerMessageCategory.INFORMATION,compileContext.getRebuildReason(),null,-1,-1,null),false,compileContext.getCompileScope());
        }
      }
,ModalityState.NON_MODAL);
    }
 else {
      writeStatus(new CompileStatus(CompilerConfigurationImpl.DEPENDENCY_FORMAT_VERSION,wereExceptions),compileContext);
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          final int errorCount=compileContext.getMessageCount(CompilerMessageCategory.ERROR);
          final int warningCount=compileContext.getMessageCount(CompilerMessageCategory.WARNING);
          final String statusMessage=createStatusMessage(_status,warningCount,errorCount);
          final StatusBar statusBar=WindowManager.getInstance().getStatusBar(myProject);
          if (statusBar != null) {
            statusBar.setInfo(statusMessage);
          }
          if (_status != ExitStatus.UP_TO_DATE && compileContext.getMessageCount(null) > 0) {
            compileContext.addMessage(CompilerMessageCategory.INFORMATION,statusMessage,null,-1,-1);
          }
          if (callback != null) {
            callback.finished(_status == ExitStatus.CANCELLED,errorCount,warningCount,compileContext);
          }
        }
      }
,ModalityState.NON_MODAL);
    }
  }
}
