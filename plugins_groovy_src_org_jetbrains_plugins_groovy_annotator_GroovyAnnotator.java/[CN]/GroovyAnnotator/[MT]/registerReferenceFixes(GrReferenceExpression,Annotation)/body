{
  PsiClass targetClass=QuickfixUtil.findTargetClass(refExpr);
  if (targetClass != null && isNeedsDynamic(refExpr,targetClass) && refExpr.resolve() == null) {
    addDynamicAnnotation(annotation,refExpr);
  }
  if (targetClass != null && targetClass instanceof GrMemberOwner && !(targetClass instanceof GroovyScriptClass)) {
    annotation.registerFix(new CreateFieldFromUsageFix(refExpr,(GrMemberOwner)targetClass));
  }
  if (!refExpr.isQualified()) {
    GrVariableDeclarationOwner owner=PsiTreeUtil.getParentOfType(refExpr,GrVariableDeclarationOwner.class);
    if (!(owner instanceof GroovyFileBase) || ((GroovyFileBase)owner).isScript()) {
      annotation.registerFix(new CreateLocalVariableFromUsageFix(refExpr,owner));
    }
  }
}
