{
  final PsiFile containingFile=referenceExpression.getContainingFile();
  VirtualFile file;
  if (containingFile != null) {
    file=containingFile.getVirtualFile();
    if (file == null)     return;
  }
 else   return;
  Module module=ProjectRootManager.getInstance(referenceExpression.getProject()).getFileIndex().getModuleForFile(file);
  PsiClass dynamicValueTypeDefinition=DynamicReferenceUtils.findDynamicValueContainingClass(referenceExpression);
  if (module == null)   return;
  DynamicPropertyReal dynamicPropertyReal=new DynamicPropertyRealBase(referenceExpression.getName(),dynamicValueTypeDefinition,module.getName());
  annotation.registerFix(new DynamicPropertyIntention(dynamicPropertyReal,referenceExpression));
}
