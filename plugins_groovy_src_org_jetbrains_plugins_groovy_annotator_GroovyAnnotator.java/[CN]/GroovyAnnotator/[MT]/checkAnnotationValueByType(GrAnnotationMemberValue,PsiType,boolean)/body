{
  final GlobalSearchScope resolveScope=value.getResolveScope();
  final PsiManager manager=value.getManager();
  if (value instanceof GrExpression && !(value instanceof GrClosableBlock)) {
    final PsiType rtype=((GrExpression)value).getType();
    if (rtype != null && !checkAnnoTypeAssignable(ltype,resolveScope,manager,rtype,skipArrays)) {
      myHolder.createErrorAnnotation(value,GroovyBundle.message("cannot.assign",rtype.getPresentableText(),ltype.getPresentableText()));
    }
  }
 else   if (value instanceof GrAnnotation) {
    final PsiElement resolved=((GrAnnotation)value).getClassReference().resolve();
    if (resolved instanceof PsiClass) {
      final PsiClassType rtype=JavaPsiFacade.getElementFactory(value.getProject()).createType((PsiClass)resolved,PsiSubstitutor.EMPTY);
      if (!checkAnnoTypeAssignable(ltype,resolveScope,manager,rtype,skipArrays)) {
        myHolder.createErrorAnnotation(value,GroovyBundle.message("cannot.assign",rtype.getPresentableText(),ltype.getPresentableText()));
      }
    }
  }
 else   if (value instanceof GrAnnotationArrayInitializer) {
    if (ltype instanceof PsiArrayType) {
      final PsiType componentType=((PsiArrayType)ltype).getComponentType();
      final GrAnnotationMemberValue[] initializers=((GrAnnotationArrayInitializer)value).getInitializers();
      for (      GrAnnotationMemberValue initializer : initializers) {
        checkAnnotationValueByType(initializer,componentType,false);
      }
    }
 else {
      final PsiType rtype=TypesUtil.getTupleByAnnotationArrayInitializer((GrAnnotationArrayInitializer)value);
      if (!checkAnnoTypeAssignable(ltype,resolveScope,manager,rtype,skipArrays)) {
        myHolder.createErrorAnnotation(value,GroovyBundle.message("cannot.assign",rtype.getPresentableText(),ltype.getPresentableText()));
      }
    }
  }
}
