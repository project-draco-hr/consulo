{
  PsiMethod method=PsiTreeUtil.getParentOfType(var,PsiMethod.class);
  PsiNamedElement scope=method == null ? var.getContainingFile() : method;
  if (scope == null) {
    return false;
  }
  boolean hasAssignment=var.getInitializerGroovy() != null || var instanceof GrParameter;
  for (  PsiReference reference : ReferencesSearch.search(var,new LocalSearchScope(scope)).findAll()) {
    if (reference instanceof GrReferenceExpression && (PsiUtil.isLValue((GrReferenceExpression)reference) || ((GrReferenceExpression)reference).getParent() instanceof GrPostfixExpression)) {
      if (hasAssignment) {
        return true;
      }
      hasAssignment=true;
    }
  }
  return false;
}
