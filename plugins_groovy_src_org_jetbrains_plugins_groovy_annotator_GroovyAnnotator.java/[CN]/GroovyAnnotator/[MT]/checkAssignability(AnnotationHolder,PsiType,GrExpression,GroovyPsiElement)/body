{
  if (PsiUtil.isRawClassMemberAccess(expression))   return;
  final PsiType rType=expression.getType();
  if (!TypesUtil.isAssignable(expectedType,rType,element.getManager(),element.getResolveScope())) {
    holder.createWarningAnnotation(element,GroovyBundle.message("cannot.assign",rType.getInternalCanonicalText(),expectedType.getInternalCanonicalText()));
  }
}
