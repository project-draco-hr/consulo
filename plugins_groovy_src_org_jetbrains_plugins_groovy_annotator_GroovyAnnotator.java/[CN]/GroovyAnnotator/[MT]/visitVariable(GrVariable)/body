{
  if (variable instanceof GrMember) {
    highlightMember(myHolder,((GrMember)variable));
    checkStaticDeclarationsInInnerClass((GrMember)variable,myHolder);
  }
  GroovyPsiElement duplicate=ResolveUtil.resolveExistingElement(variable,new DuplicateVariablesProcessor(variable),GrVariable.class,GrReferenceExpression.class);
  if (duplicate == null) {
    PsiElement context=variable;
    if (variable instanceof GrParameter) {
      final PsiElement parent=context.getContext().getContext();
      if (parent instanceof GrClosableBlock) {
        context=parent;
        duplicate=ResolveUtil.resolveExistingElement((GrClosableBlock)parent,new DuplicateVariablesProcessor(variable),GrVariable.class,GrReferenceExpression.class);
      }
    }
  }
  if (duplicate instanceof GrVariable) {
    if (duplicate instanceof GrField && !(variable instanceof GrField)) {
      myHolder.createWarningAnnotation(variable.getNameIdentifierGroovy(),GroovyBundle.message("field.already.defined",variable.getName()));
    }
 else {
      final String key=duplicate instanceof GrField ? "field.already.defined" : "variable.already.defined";
      myHolder.createErrorAnnotation(variable.getNameIdentifierGroovy(),GroovyBundle.message(key,variable.getName()));
    }
  }
}
