{
  checkName(variable);
  if (variable instanceof GrMember) {
    highlightMember(myHolder,((GrMember)variable));
  }
  PsiNamedElement duplicate=ResolveUtil.resolveExistingElement(variable,new DuplicateVariablesProcessor(variable),GrReferenceExpression.class,GrVariable.class);
  if (duplicate == null) {
    if (variable instanceof GrParameter) {
      @SuppressWarnings({"ConstantConditions"}) final PsiElement parent=variable.getContext().getContext();
      if (parent instanceof GrClosableBlock) {
        duplicate=ResolveUtil.resolveExistingElement((GrClosableBlock)parent,new DuplicateVariablesProcessor(variable),GrVariable.class,GrReferenceExpression.class);
      }
    }
  }
  if (duplicate instanceof GrLightParameter && "args".equals(duplicate.getName())) {
    duplicate=null;
  }
  if (duplicate instanceof GrVariable) {
    if (variable instanceof GrField || !(duplicate instanceof GrField)) {
      final String key=duplicate instanceof GrField ? "field.already.defined" : "variable.already.defined";
      myHolder.createErrorAnnotation(variable.getNameIdentifierGroovy(),GroovyBundle.message(key,variable.getName()));
    }
  }
}
