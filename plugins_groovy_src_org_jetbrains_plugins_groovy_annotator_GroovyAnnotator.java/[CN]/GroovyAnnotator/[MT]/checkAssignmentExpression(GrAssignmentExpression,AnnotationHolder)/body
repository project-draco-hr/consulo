{
  GrExpression lValue=assignment.getLValue();
  if (!PsiUtil.mightBeLVlaue(lValue)) {
    holder.createErrorAnnotation(lValue,GroovyBundle.message("invalid.lvalue"));
  }
 else {
    IElementType opToken=assignment.getOperationToken();
    if (opToken == GroovyTokenTypes.mASSIGN) {
      GrExpression rValue=assignment.getRValue();
      if (rValue != null) {
        PsiType lType=lValue.getNominalType();
        PsiType rType=rValue.getType();
        if (isListAssignment(lValue) && lType != null && lType instanceof PsiClassType) {
          final PsiClassType pct=(PsiClassType)lType;
          final PsiClass clazz=pct.resolve();
          if (clazz != null && "java.util.List".equals(clazz.getQualifiedName())) {
            final PsiType[] types=pct.getParameters();
            if (types.length == 1 && types[0] != null && rType != null) {
              checkAssignability(holder,types[0],rType,rValue);
            }
          }
          return;
        }
        if (lType != null && rType != null) {
          checkAssignability(holder,lType,rType,rValue);
        }
      }
    }
  }
}
