{
  final PsiElement resolved=ref.resolve();
  if (resolved instanceof GrField && resolved.isPhysical() && ((GrField)resolved).hasModifierProperty(FINAL)&& PsiUtil.isLValue(ref)) {
    final GrField field=(GrField)resolved;
    final PsiClass containingClass=field.getContainingClass();
    if (containingClass != null && PsiTreeUtil.isAncestor(containingClass,ref,true)) {
      GrMember container=GrHighlightUtil.findClassMemberContainer(ref,containingClass);
      if (field.hasModifierProperty(STATIC)) {
        if (container instanceof GrClassInitializer && ((GrClassInitializer)container).isStatic()) {
          return;
        }
      }
 else {
        if (container instanceof GrMethod && ((GrMethod)container).isConstructor() || container instanceof GrClassInitializer && !((GrClassInitializer)container).isStatic()) {
          return;
        }
      }
      myHolder.createErrorAnnotation(ref,GroovyBundle.message("cannot.assign.a.value.to.final.field.0",field.getName()));
    }
  }
}
