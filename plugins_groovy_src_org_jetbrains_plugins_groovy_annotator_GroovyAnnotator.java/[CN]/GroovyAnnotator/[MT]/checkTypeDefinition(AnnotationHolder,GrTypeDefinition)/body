{
  if (typeDefinition.isAnnotationType()) {
    Annotation annotation=holder.createInfoAnnotation(typeDefinition.getNameIdentifierGroovy(),null);
    annotation.setTextAttributes(DefaultHighlighter.ANNOTATION);
  }
  if (GroovyElementTypes.CLASS_BODY.equals(typeDefinition.getNode().getTreeParent().getElementType())) {
    holder.createErrorAnnotation(typeDefinition.getNameIdentifierGroovy(),"Inner classes are not supported in Groovy");
  }
  Annotation annotation;
  final GrImplementsClause implementsClause=typeDefinition.getImplementsClause();
  final GrExtendsClause extendsClause=typeDefinition.getExtendsClause();
  if (implementsClause != null) {
    annotation=checkForImplementingInterface(holder,implementsClause);
    if (annotation != null) {
      annotation.registerFix(new ChangeExtendsImplementsQuickFix(extendsClause,implementsClause));
    }
  }
  if (extendsClause != null) {
    annotation=checkForExtendingClass(holder,extendsClause);
    if (annotation != null) {
      annotation.registerFix(new ChangeExtendsImplementsQuickFix(extendsClause,implementsClause));
    }
  }
}
