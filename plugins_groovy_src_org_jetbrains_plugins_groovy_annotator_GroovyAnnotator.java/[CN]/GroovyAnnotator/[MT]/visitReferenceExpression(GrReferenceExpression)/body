{
  checkStringNameIdentifier(referenceExpression);
  GroovyResolveResult resolveResult=referenceExpression.advancedResolve();
  GroovyResolveResult[] results=referenceExpression.multiResolve(false);
  PsiElement resolved=resolveResult.getElement();
  final PsiElement parent=referenceExpression.getParent();
  if (resolved != null) {
    if (resolved instanceof PsiMember) {
      highlightMemberResolved(myHolder,referenceExpression,((PsiMember)resolved));
    }
    if (!resolveResult.isStaticsOK() && resolved instanceof PsiModifierListOwner) {
      if (!((PsiModifierListOwner)resolved).hasModifierProperty(PsiModifier.STATIC)) {
        Annotation annotation=myHolder.createInfoAnnotation(referenceExpression,GroovyBundle.message("cannot.reference.nonstatic",referenceExpression.getReferenceName()));
        annotation.setTextAttributes(DefaultHighlighter.UNRESOLVED_ACCESS);
      }
    }
  }
 else {
    GrExpression qualifier=referenceExpression.getQualifierExpression();
    if (qualifier == null && isDeclarationAssignment(referenceExpression))     return;
    if (!(parent instanceof GrCall) && ResolveUtil.isKeyOfMap(referenceExpression)) {
      PsiElement refNameElement=referenceExpression.getReferenceNameElement();
      PsiElement elt=refNameElement == null ? referenceExpression : refNameElement;
      Annotation annotation=myHolder.createInfoAnnotation(elt,null);
      annotation.setTextAttributes(DefaultHighlighter.MAP_KEY);
      return;
    }
    if (parent instanceof GrReferenceExpression && "class".equals(((GrReferenceExpression)parent).getReferenceName())) {
      checkSingleResolvedElement(myHolder,referenceExpression,resolveResult,false);
    }
  }
  if (parent instanceof GrCall) {
    if (resolved == null && results.length > 0) {
      resolved=results[0].getElement();
    }
  }
  if (isDeclarationAssignment(referenceExpression) || resolved instanceof PsiPackage)   return;
  if (resolved == null && shouldHighlightAsUnresolved(referenceExpression)) {
    PsiElement refNameElement=referenceExpression.getReferenceNameElement();
    PsiElement elt=refNameElement == null ? referenceExpression : refNameElement;
    Annotation annotation=myHolder.createInfoAnnotation(elt,null);
    final GrExpression qualifier=referenceExpression.getQualifierExpression();
    if (qualifier == null) {
      if (parent instanceof GrMethodCall) {
        registerStaticImportFix(referenceExpression,annotation);
      }
 else {
        registerCreateClassByTypeFix(referenceExpression,annotation);
        registerAddImportFixes(referenceExpression,annotation);
      }
    }
 else {
      if (qualifier.getType() == null) {
        return;
      }
    }
    registerReferenceFixes(referenceExpression,annotation);
    UnresolvedReferenceQuickFixProvider.registerReferenceFixes(referenceExpression,new QuickFixActionRegistrarAdapter(annotation));
    annotation.setTextAttributes(DefaultHighlighter.UNRESOLVED_ACCESS);
  }
}
