{
  PsiClass targetClass=QuickfixUtil.findTargetClass(refExpr,compileStatic);
  if (targetClass == null)   return;
  if (!compileStatic) {
    addDynamicAnnotation(annotation,refExpr);
  }
  if (targetClass.isWritable()) {
    if (!(targetClass instanceof GroovyScriptClass)) {
      annotation.registerFix(new CreateFieldFromUsageFix(refExpr,targetClass));
    }
    if (refExpr.getParent() instanceof GrCall && refExpr.getParent() instanceof GrExpression) {
      annotation.registerFix(new CreateMethodFromUsageFix(refExpr,targetClass));
    }
  }
  if (!refExpr.isQualified()) {
    GrVariableDeclarationOwner owner=PsiTreeUtil.getParentOfType(refExpr,GrVariableDeclarationOwner.class);
    if (!(owner instanceof GroovyFileBase) || ((GroovyFileBase)owner).isScript()) {
      annotation.registerFix(new CreateLocalVariableFromUsageFix(refExpr,owner));
    }
    if (PsiTreeUtil.getParentOfType(refExpr,GrMethod.class) != null) {
      annotation.registerFix(new CreateParameterFromUsageFix(refExpr));
    }
  }
}
