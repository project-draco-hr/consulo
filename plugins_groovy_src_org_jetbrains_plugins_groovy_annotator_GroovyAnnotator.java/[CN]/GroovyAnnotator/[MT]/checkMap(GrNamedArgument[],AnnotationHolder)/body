{
  final Map<GrNamedArgument,List<GrNamedArgument>> map=DuplicatesUtil.factorDuplicates(namedArguments,new TObjectHashingStrategy<GrNamedArgument>(){
    public int computeHashCode(    GrNamedArgument arg){
      final GrArgumentLabel label=arg.getLabel();
      if (label == null)       return 0;
      final String name=label.getName();
      if (name == null)       return 0;
      return name.hashCode();
    }
    public boolean equals(    GrNamedArgument arg1,    GrNamedArgument arg2){
      final GrArgumentLabel label1=arg1.getLabel();
      final GrArgumentLabel label2=arg2.getLabel();
      if (label1 == null || label2 == null) {
        return label1 == null && label2 == null;
      }
      final String name1=label1.getName();
      final String name2=label2.getName();
      if (name1 == null || name2 == null) {
        return name1 == null && name2 == null;
      }
      return name1.equals(name2);
    }
  }
);
  processDuplicates(map,holder);
}
