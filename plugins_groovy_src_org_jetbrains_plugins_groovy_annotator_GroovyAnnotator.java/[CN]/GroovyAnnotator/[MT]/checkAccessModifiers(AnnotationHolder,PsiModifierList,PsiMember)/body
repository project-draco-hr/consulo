{
  boolean hasPrivate=modifierList.hasExplicitModifier(GrModifier.PRIVATE);
  boolean hasPublic=modifierList.hasExplicitModifier(GrModifier.PUBLIC);
  boolean hasProtected=modifierList.hasExplicitModifier(GrModifier.PROTECTED);
  if (hasPrivate && hasPublic || hasPrivate && hasProtected || hasPublic && hasProtected) {
    final Annotation annotation=holder.createErrorAnnotation(modifierList,GroovyBundle.message("illegal.combination.of.modifiers"));
    if (hasPrivate) {
      annotation.registerFix(new GrModifierFix(member,modifierList,GrModifier.PRIVATE,false,false));
    }
    if (hasProtected) {
      annotation.registerFix(new GrModifierFix(member,modifierList,GrModifier.PROTECTED,false,false));
    }
    if (hasPublic) {
      annotation.registerFix(new GrModifierFix(member,modifierList,GrModifier.PUBLIC,false,false));
    }
  }
}
