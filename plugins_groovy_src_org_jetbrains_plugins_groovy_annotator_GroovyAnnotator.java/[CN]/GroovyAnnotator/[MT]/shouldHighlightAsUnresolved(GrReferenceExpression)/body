{
  PsiElement refNameElement=referenceExpression.getReferenceNameElement();
  if (refNameElement != null && referenceExpression.getQualifier() == null) {
    final IElementType type=refNameElement.getNode().getElementType();
    if (type == GroovyTokenTypes.mGSTRING_LITERAL || type == GroovyTokenTypes.mSTRING_LITERAL)     return false;
  }
  if (!GroovyUnresolvedHighlightFilter.shouldHighlight(referenceExpression))   return false;
  CollectConsumer<PomTarget> consumer=new CollectConsumer<PomTarget>();
  for (  PomDeclarationSearcher searcher : PomDeclarationSearcher.EP_NAME.getExtensions()) {
    searcher.findDeclarationsAt(referenceExpression,0,consumer);
    if (consumer.getResult().size() > 0)     return false;
  }
  return true;
}
