{
  GroovyResolveResult resolveResult=refExpr.advancedResolve();
  registerUsedImport(refExpr,resolveResult);
  PsiElement resolved=resolveResult.getElement();
  if (resolved != null) {
    if (resolved instanceof PsiMember) {
      highlightMemberResolved(holder,refExpr,((PsiMember)resolved));
    }
    if (!resolveResult.isAccessible()) {
      String message=GroovyBundle.message("cannot.access",refExpr.getReferenceName());
      holder.createWarningAnnotation(refExpr,message);
    }
    if (!resolveResult.isStaticsOK() && resolved instanceof PsiModifierListOwner) {
      final String key=((PsiModifierListOwner)resolved).hasModifierProperty(PsiModifier.STATIC) ? "cannot.reference.static" : "cannot.reference.nonstatic";
      String message=GroovyBundle.message(key,refExpr.getReferenceName());
      holder.createWarningAnnotation(refExpr,message);
    }
 else     if (refExpr.getParent() instanceof GrMethodCallExpression) {
      if (resolved instanceof PsiMethod && resolved.getUserData(GrMethod.BUILDER_METHOD) == null) {
        checkMethodApplicability(resolveResult,refExpr,holder);
      }
 else {
        checkClosureApplicability(resolveResult,refExpr,holder);
      }
    }
    if (isAssignmentLHS(refExpr) || resolved instanceof PsiPackage)     return;
  }
 else {
    if (isAssignmentLHS(refExpr))     return;
    GrExpression qualifier=refExpr.getQualifierExpression();
    if (qualifier == null) {
      GroovyPsiElement context=PsiTreeUtil.getParentOfType(refExpr,GrMethod.class,GrField.class,GrClosableBlock.class);
      if (context instanceof PsiModifierListOwner && ((PsiModifierListOwner)context).hasModifierProperty(PsiModifier.STATIC)) {
        Annotation annotation=holder.createErrorAnnotation(refExpr,GroovyBundle.message("cannot.resolve",refExpr.getReferenceName()));
        annotation.setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
        return;
      }
    }
  }
  if (refExpr.getType() == null) {
    PsiElement refNameElement=refExpr.getReferenceNameElement();
    PsiElement elt=refNameElement == null ? refExpr : refNameElement;
    Annotation annotation=holder.createInfoAnnotation(elt,null);
    if (resolved == null && refExpr.getQualifierExpression() == null) {
      if (!(refExpr.getParent() instanceof GrCallExpression)) {
        registerCreateClassByTypeFix(refExpr,annotation,false);
      }
      registerAddImportFixes(refExpr,annotation);
    }
    annotation.setTextAttributes(DefaultHighlighter.UNTYPED_ACCESS);
  }
}
