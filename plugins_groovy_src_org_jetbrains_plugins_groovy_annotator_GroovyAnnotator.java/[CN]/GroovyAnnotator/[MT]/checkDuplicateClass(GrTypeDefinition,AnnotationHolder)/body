{
  final PsiClass containingClass=typeDefinition.getContainingClass();
  if (containingClass != null) {
    final String containingClassName=containingClass.getName();
    if (containingClassName != null && containingClassName.equals(typeDefinition.getName())) {
      holder.createErrorAnnotation(typeDefinition.getNameIdentifierGroovy(),GroovyBundle.message("duplicate.inner.class",typeDefinition.getName()));
    }
  }
  final String qName=typeDefinition.getQualifiedName();
  if (qName != null) {
    final PsiClass[] classes=JavaPsiFacade.getInstance(typeDefinition.getProject()).findClasses(qName,typeDefinition.getResolveScope());
    if (classes.length > 1) {
      String packageName=getPackageName(typeDefinition);
      if (!isScriptGeneratedClass(classes)) {
        holder.createErrorAnnotation(typeDefinition.getNameIdentifierGroovy(),GroovyBundle.message("duplicate.class",typeDefinition.getName(),packageName));
      }
 else {
        holder.createErrorAnnotation(typeDefinition.getNameIdentifierGroovy(),GroovyBundle.message("script.generated.with.same.name",qName));
      }
    }
  }
}
