{
  final String qName=typeDefinition.getQualifiedName();
  if (qName != null) {
    final PsiClass[] classes=typeDefinition.getManager().findClasses(qName,typeDefinition.getResolveScope());
    if (classes.length > 1) {
      final PsiFile file=typeDefinition.getContainingFile();
      String packageName="<default package>";
      if (file instanceof GroovyFile) {
        final String name=((GroovyFile)file).getPackageName();
        if (name.length() > 0)         packageName=name;
      }
      if (!isScriptGeneratedClass(classes)) {
        holder.createErrorAnnotation(typeDefinition.getNameIdentifierGroovy(),GroovyBundle.message("duplicate.class",typeDefinition.getName(),packageName));
      }
 else {
        holder.createErrorAnnotation(typeDefinition.getNameIdentifierGroovy(),GroovyBundle.message("script.generated.with.same.name",qName));
      }
    }
  }
}
