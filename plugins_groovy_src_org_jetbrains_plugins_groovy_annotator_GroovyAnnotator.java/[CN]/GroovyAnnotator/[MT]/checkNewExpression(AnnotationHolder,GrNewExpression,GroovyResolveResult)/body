{
  GrCodeReferenceElement refElement=newExpression.getReferenceElement();
  LOG.assertTrue(refElement != null);
  final PsiElement resolved=resolveResult.getElement();
  if (resolved instanceof PsiMethod) {
    checkMethodApplicability((PsiMethod)resolved,refElement,holder);
  }
 else   if (resolved instanceof PsiClass) {
    PsiType[] argumentTypes=PsiUtil.getArgumentTypes(refElement,true);
    if (argumentTypes != null && argumentTypes.length > 0) {
      String message=GroovyBundle.message("cannot.find.default.constructor",((PsiClass)resolved).getName());
      holder.createWarningAnnotation(refElement.getReferenceNameElement(),message);
    }
  }
 else   if (resolved == null && refElement.multiResolve(false).length > 0) {
    final GrArgumentList argList=newExpression.getArgumentList();
    PsiElement toHighlight=argList != null ? argList : refElement.getReferenceNameElement();
    String message=GroovyBundle.message("ambiguous.constructor.call");
    holder.createWarningAnnotation(toHighlight,message);
  }
 else {
    checkSingleResolvedElement(holder,refElement,resolveResult);
  }
}
