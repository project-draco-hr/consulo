{
  myFacetListenersRegistry.registerListener(new ProjectWideFacetAdapter<Facet>(){
    @Override public void facetAdded(    Facet facet){
      for (      FacetDependentToolWindow extension : getDependentExtensions(facet)) {
        ensureToolWindowExists(extension);
      }
    }
    @Override public void facetRemoved(    Facet facet){
      if (!myFacetManager.hasFacets(facet.getTypeId())) {
        for (        FacetDependentToolWindow extension : getDependentExtensions(facet)) {
          ToolWindow toolWindow=myToolWindowManager.getToolWindow(extension.id);
          if (toolWindow != null) {
            List<FacetType> facetTypes=extension.getFacetTypes();
            for (            FacetType facetType : facetTypes) {
              if (myFacetManager.hasFacets(facetType.getId()))               return;
            }
            myToolWindowManager.unregisterToolWindow(extension.id);
          }
        }
      }
    }
  }
);
  FacetDependentToolWindow[] extensions=Extensions.getExtensions(FacetDependentToolWindow.EXTENSION_POINT_NAME);
  loop:   for (  FacetDependentToolWindow extension : extensions) {
    for (    FacetType type : extension.getFacetTypes()) {
      if (myFacetManager.hasFacets(type.getId())) {
        ensureToolWindowExists(extension);
        continue loop;
      }
    }
  }
}
