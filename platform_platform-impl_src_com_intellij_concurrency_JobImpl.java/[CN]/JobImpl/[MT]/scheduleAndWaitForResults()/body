{
  checkCanSchedule();
  final Application application=ApplicationManager.getApplication();
  boolean callerHasReadAccess=application != null && application.isReadAccessAllowed();
  boolean reallySchedule;
  PrioritizedFutureTask[] tasks=getTasks();
synchronized (myFutures) {
    reallySchedule=JobSchedulerImpl.CORES_COUNT >= 2 && myFutures.size() >= 2;
  }
  scheduled=true;
  if (!reallySchedule) {
    for (    PrioritizedFutureTask future : tasks) {
      future.run();
    }
    return null;
  }
  submitTasks(tasks,callerHasReadAccess,false);
  while (!isDone() && JobSchedulerImpl.stealAndRunTask()) {
    int i=0;
  }
  waitForTermination(tasks);
  return null;
}
