{
  @NonNls Map<String,String> params=new HashMap<String,String>();
  params.put("username",userName);
  params.put("pwd",password);
  params.put("_title",MessageFormat.format(THREAD_SUBJECT,error.getLastAction() == null ? e.getExceptionClass() : error.getLastAction() + ", " + e.getExceptionClass()));
  ApplicationInfoEx appInfo=(ApplicationInfoEx)ApplicationManager.getApplication().getComponent(ApplicationInfo.class);
  params.put("_build",appInfo.getBuild().asString());
  params.put("_description",(compilationTimestamp != null ? ("Build time: " + compilationTimestamp + "\n") : "") + error.getDescription() + "\n\n"+ e.getStackTrace());
  String jdkVersion=SystemProperties.getJavaVersion();
  String jdkVendor=SystemProperties.getJavaVmVendor();
  if (jdkVendor.indexOf(SUN) != -1) {
    if (jdkVersion.equals(JDK_1_4_2))     jdkVersion="10";
 else     if (jdkVersion.equals(JDK_1_4_1))     jdkVersion="7";
 else     if (jdkVersion.equals(JDK_1_4_0_02))     jdkVersion="9";
 else     if (jdkVersion.equals(JDK_1_4_0_01))     jdkVersion="8";
 else     if (jdkVersion.equals(JDK_1_4_0))     jdkVersion="6";
 else     if (jdkVersion.equals(JDK_1_3_1_01))     jdkVersion="5";
 else     if (jdkVersion.equals(JDK_1_3_1))     jdkVersion="4";
 else     if (jdkVersion.equals(JDK_1_3_0))     jdkVersion="3";
 else     if (jdkVersion.equals(JDK_1_2_2))     jdkVersion="2";
 else     jdkVersion="1";
  }
 else   jdkVersion="1";
  params.put("_jdk",jdkVersion);
  String os=error.getOs();
  if (os == null)   os="";
  if (os.indexOf(WINDOWS_XP) != -1)   os="4";
 else   if (os.indexOf(WINDOWS_2000) != -1 || os.indexOf(WINDOWS_NT) != -1)   os="3";
 else   if (os.indexOf(WINDOWS_95) != -1 || os.indexOf(WINDOWS_98) != -1 || os.indexOf(WINDOWS_ME) != -1)   os="2";
 else   if (os.indexOf(SOLARIS) != -1)   os="7";
 else   if (os.indexOf(MAC_OS_X) != -1)   os="6";
 else   if (os.indexOf(LINUX) != -1)   os="5";
 else   os="1";
  params.put("_os",os);
  params.put("_product",ApplicationNamesInfo.getInstance().getProductName());
  HttpURLConnection connection=post(NEW_THREAD_URL,params);
  int responce=connection.getResponseCode();
switch (responce) {
case HttpURLConnection.HTTP_OK:
    break;
case HttpURLConnection.HTTP_BAD_REQUEST:
case HttpURLConnection.HTTP_NOT_FOUND:
  throw new NoSuchEAPUserException(userName);
default :
throw new InternalEAPException(DiagnosticBundle.message("error.http.result.code",responce));
}
ByteArrayOutputStream baos=new ByteArrayOutputStream();
InputStream is=connection.getInputStream();
int c;
while ((c=is.read()) != -1) {
baos.write(c);
}
int threadId;
try {
threadId=Integer.valueOf(baos.toString().trim()).intValue();
}
 catch (NumberFormatException ex) {
throw new InternalEAPException(DiagnosticBundle.message("error.itn.returns.wrong.data"));
}
return threadId;
}
