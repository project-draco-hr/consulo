{
  if (!(comment instanceof PsiDocComment)) {
    return;
  }
  PsiDocCommentOwner owner=((PsiDocComment)comment).getOwner();
  if (owner == null) {
    return;
  }
  JavaDocReferenceInspection referenceInspection=new JavaDocReferenceInspection();
  JavaDocLocalInspection localInspection=getDocLocalInspection();
  InspectionManager inspectionManager=InspectionManager.getInstance(project);
  ProblemDescriptor[] referenceProblems=null;
  ProblemDescriptor[] otherProblems=null;
  if (owner instanceof PsiClass) {
    referenceProblems=referenceInspection.checkClass(((PsiClass)owner),inspectionManager,false);
    otherProblems=localInspection.checkClass(((PsiClass)owner),inspectionManager,false);
  }
 else   if (owner instanceof PsiField) {
    referenceProblems=referenceInspection.checkField(((PsiField)owner),inspectionManager,false);
    otherProblems=localInspection.checkField(((PsiField)owner),inspectionManager,false);
  }
 else   if (owner instanceof PsiMethod) {
    referenceProblems=referenceInspection.checkMethod((PsiMethod)owner,inspectionManager,false);
    otherProblems=localInspection.checkMethod((PsiMethod)owner,inspectionManager,false);
  }
  if (referenceProblems != null) {
    fixReferenceProblems(referenceProblems,project);
  }
  if (otherProblems != null) {
    fixCommonProblems(otherProblems,comment,editor.getDocument(),project);
  }
  PsiDocumentManager.getInstance(project).doPostponedOperationsAndUnblockDocument(editor.getDocument());
  locateCaret((PsiDocComment)comment,editor);
}
