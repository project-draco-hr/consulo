{
  CharSequence chars=((DocumentImpl)myEditor.getDocument()).getCharsNoThreadCheck();
  int result=0;
  int processedLinesNumber=0;
  FoldingModel foldingModel=myEditor.getFoldingModel();
  int maxLinesToCheck=position.line - myFirstVisibleLine;
  int charsInRow=0;
  for (int i=myFirstVisibleSymbolOffset, max=chars.length(); i < max && processedLinesNumber < maxLinesToCheck; i++) {
    if (processedLinesNumber == maxLinesToCheck && charsInRow >= position.column) {
      break;
    }
    TextChange softWrap=myWraps.get(i);
    if (softWrap != null) {
      CharSequence softWrapText=softWrap.getText();
      for (int j=0; j < softWrapText.length(); j++) {
        if (softWrapText.charAt(j) == '\n') {
          processedLinesNumber++;
          charsInRow=-1;
          continue;
        }
        charsInRow+=charToVisibleSymbolsNumber(softWrapText.charAt(j));
      }
      continue;
    }
    char c=chars.charAt(i);
    if (c == '\n') {
      processedLinesNumber++;
      charsInRow=-1;
      continue;
    }
    FoldRegion region=foldingModel.getCollapsedRegionAtOffset(i);
    if (region != null && !region.isExpanded()) {
      i=region.getEndOffset();
      charsInRow+=region.getPlaceholderText().length() - 1;
      continue;
    }
    charsInRow+=charToVisibleSymbolsNumber(c);
  }
  return result;
}
