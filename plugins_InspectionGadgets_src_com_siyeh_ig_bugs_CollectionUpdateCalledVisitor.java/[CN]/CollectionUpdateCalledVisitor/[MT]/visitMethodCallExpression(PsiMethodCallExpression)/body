{
  super.visitMethodCallExpression(call);
  if (updated) {
    return;
  }
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  final String methodName=methodExpression.getReferenceName();
  if (methodName == null) {
    return;
  }
  if (!updateNames.contains(methodName)) {
    boolean found=false;
    for (    String updateName : updateNames) {
      if (!methodName.startsWith(updateName)) {
        continue;
      }
      found=true;
      break;
    }
    if (!found) {
      return;
    }
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier == null || qualifier instanceof PsiThisExpression) {
    final PsiMethod method=call.resolveMethod();
    if (method == null) {
      return;
    }
    final PsiClass aClass=method.getContainingClass();
    if (CollectionUtils.isCollectionClassOrInterface(aClass)) {
      updated=true;
    }
  }
 else {
    checkQualifier(qualifier);
  }
}
