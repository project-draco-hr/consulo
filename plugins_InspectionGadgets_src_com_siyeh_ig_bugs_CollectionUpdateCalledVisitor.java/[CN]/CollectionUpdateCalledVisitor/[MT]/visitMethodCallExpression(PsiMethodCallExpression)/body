{
  super.visitMethodCallExpression(call);
  if (updated) {
    return;
  }
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  final String methodName=methodExpression.getReferenceName();
  if (!updateNames.contains(methodName)) {
    return;
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  if (qualifier == null || qualifier instanceof PsiThisExpression) {
    final PsiMethod method=call.resolveMethod();
    if (method == null) {
      return;
    }
    final PsiClass aClass=method.getContainingClass();
    if (CollectionUtils.isCollectionClassOrInterface(aClass)) {
      updated=true;
    }
  }
 else {
    if (!(qualifier instanceof PsiReferenceExpression)) {
      return;
    }
    final PsiElement referent=((PsiReference)qualifier).resolve();
    if (referent == null) {
      return;
    }
    if (referent.equals(variable)) {
      updated=true;
    }
  }
}
