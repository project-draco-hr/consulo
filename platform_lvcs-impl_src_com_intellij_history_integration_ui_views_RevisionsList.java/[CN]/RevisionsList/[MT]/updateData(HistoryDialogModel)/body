{
  Set<Long> sel=new THashSet<Long>();
  MyModel m=(MyModel)table.getModel();
  for (  int i : table.getSelectedRows()) {
    sel.add(m.getValueAt(i,0).getChangeSetId());
  }
  List<Revision> newRevs=model.getRevisions();
  Date today=new Date();
  Date yesterday=DateUtils.addDays(new Date(),-1);
  Map<Revision,Period> periods=new THashMap<Revision,Period>();
  Date prev=null;
  Date currentDate=new Date();
  List<Integer> indices=new ArrayList<Integer>();
  for (int i=0; i < newRevs.size(); i++) {
    Revision each=newRevs.get(i);
    currentDate.setTime(each.getTimestamp());
    if (prev == null || !DateUtils.isSameDay(currentDate,prev)) {
      indices.add(i);
      if (DateUtils.isSameDay(currentDate,today)) {
        periods.put(each,Period.TODAY);
      }
 else       if (DateUtils.isSameDay(currentDate,yesterday)) {
        periods.put(each,Period.YESTERDAY);
      }
 else {
        periods.put(each,Period.OLDER);
        break;
      }
      prev=new Date(currentDate.getTime());
    }
  }
  table.setModel(new MyModel(newRevs,periods));
  final MyCellRenderer template=new MyCellRenderer();
  table.setRowHeight(template.getPrefHeight());
  for (  Integer each : indices) {
    table.setRowHeight(each,template.getPrefHeightWithPeriod());
  }
  for (int i=0; i < newRevs.size(); i++) {
    Revision r=newRevs.get(i);
    if (sel.contains(r.getChangeSetId())) {
      table.getSelectionModel().addSelectionInterval(i,i);
    }
  }
}
