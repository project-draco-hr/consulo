{
  Set<Long> sel=new THashSet<Long>();
  MyModel m=(MyModel)table.getModel();
  for (  int i : table.getSelectedRows()) {
    sel.add(m.getValueAt(i,0).getChangeSetId());
  }
  List<Revision> newRevs=model.getRevisions();
  Date today=new Date();
  Map<Revision,Period> periods=new THashMap<Revision,Period>();
  List<Integer> indices=new ArrayList<Integer>();
  for (int i=0; i < newRevs.size(); i++) {
    Revision each=newRevs.get(i);
    boolean recent=today.getTime() - each.getTimestamp() < 1000 * 60 * 60* RECENT_PERIOD;
    if (recent) {
      if (i == 0) {
        periods.put(each,Period.RECENT);
        indices.add(i);
      }
    }
 else {
      periods.put(each,periods.isEmpty() ? Period.OLD : Period.OLDER);
      indices.add(i);
      break;
    }
  }
  table.setModel(new MyModel(newRevs,periods));
  final MyCellRenderer template=new MyCellRenderer();
  table.setRowHeight(template.getPrefHeight());
  for (  Integer each : indices) {
    table.setRowHeight(each,template.getPrefHeightWithPeriod());
  }
  for (int i=0; i < newRevs.size(); i++) {
    Revision r=newRevs.get(i);
    if (sel.contains(r.getChangeSetId())) {
      table.getSelectionModel().addSelectionInterval(i,i);
    }
  }
  if (table.getSelectionModel().isSelectionEmpty()) {
    table.getSelectionModel().addSelectionInterval(0,0);
  }
}
