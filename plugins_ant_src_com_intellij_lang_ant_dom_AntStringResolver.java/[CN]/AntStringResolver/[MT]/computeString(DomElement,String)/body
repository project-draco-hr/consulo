{
  PropertyExpander expander=new PropertyExpander(valueString);
  if (!expander.hasPropertiesToExpand()) {
    return valueString;
  }
  AntDomProject project=context.getParentOfType(AntDomProject.class,false);
  if (project == null) {
    return valueString;
  }
  project=project.getContextAntProject();
  Map<String,String> cached=context.getUserData(RESOLVED_STRINGS_MAP_KEY);
  if (cached != null) {
    final String resolvedFromCache=cached.get(valueString);
    if (resolvedFromCache != null) {
      return resolvedFromCache;
    }
  }
 else {
    cached=Collections.synchronizedMap(new HashMap<String,String>());
    context.putUserData(RESOLVED_STRINGS_MAP_KEY,cached);
  }
  new AntStringResolver(context,expander).execute(project,project.getDefaultTarget().getRawText());
  final String result=expander.getResult();
  cached.put(valueString,result);
  return result;
}
