{
  final MemberInfo[] infos=ArrayUtil.toObjectArray(dialog.getSelectedMemberInfos(),MemberInfo.class);
  final PsiDirectory targetDirectory=dialog.getTargetDirectory();
  final PsiJavaPackage targetPackage;
  if (targetDirectory != null) {
    targetPackage=JavaDirectoryService.getInstance().getPackage(targetDirectory);
  }
 else {
    targetPackage=null;
  }
  final MultiMap<PsiElement,String> conflicts=new MultiMap<PsiElement,String>();
  if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      final PsiClass superClass=mySubclass.getExtendsListTypes().length > 0 ? mySubclass.getSuperClass() : null;
      conflicts.putAllValues(PullUpConflictsUtil.checkConflicts(infos,mySubclass,superClass,targetPackage,targetDirectory,dialog.getContainmentVerifier(),false));
    }
  }
,RefactoringBundle.message("detecting.possible.conflicts"),true,myProject))   return false;
  ExtractSuperClassUtil.checkSuperAccessible(targetDirectory,conflicts,mySubclass);
  return ExtractSuperClassUtil.showConflicts(dialog,conflicts,myProject);
}
