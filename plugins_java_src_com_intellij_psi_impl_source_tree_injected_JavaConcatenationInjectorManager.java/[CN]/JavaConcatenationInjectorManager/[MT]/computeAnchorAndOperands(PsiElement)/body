{
  PsiElement element=context;
  PsiElement parent=context.getParent();
  while (parent instanceof PsiPolyadicExpression && ((PsiPolyadicExpression)parent).getOperationTokenType() == JavaTokenType.PLUS || parent instanceof PsiAssignmentExpression && ((PsiAssignmentExpression)parent).getOperationTokenType() == JavaTokenType.PLUSEQ || parent instanceof PsiConditionalExpression && ((PsiConditionalExpression)parent).getCondition() != element || parent instanceof PsiTypeCastExpression || parent instanceof PsiParenthesizedExpression) {
    element=parent;
    parent=parent.getParent();
  }
  PsiElement[] operands;
  PsiElement anchor;
  if (element instanceof PsiPolyadicExpression) {
    operands=((PsiPolyadicExpression)element).getOperands();
    anchor=element;
  }
 else   if (element instanceof PsiAssignmentExpression) {
    PsiExpression rExpression=((PsiAssignmentExpression)element).getRExpression();
    operands=new PsiElement[]{rExpression == null ? element : rExpression};
    anchor=element;
  }
 else {
    operands=new PsiElement[]{context};
    anchor=context;
  }
  return Pair.create(anchor,operands);
}
