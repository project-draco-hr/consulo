{
  if (myManager.myConcatenationInjectors.isEmpty())   return;
  Project project=context.getProject();
  long modificationCount=PsiManager.getInstance(project).getModificationTracker().getModificationCount();
  Pair<PsiElement,PsiElement[]> pair=computeAnchorAndOperands(context);
  PsiElement anchor=pair.first;
  PsiElement[] operands=pair.second;
  Integer noInjectionTimestamp=anchor.getUserData(NO_CONCAT_INJECTION_TIMESTAMP);
  MultiHostRegistrarImpl result;
  ParameterizedCachedValue<MultiHostRegistrarImpl,PsiElement> data=null;
  if (noInjectionTimestamp != null && noInjectionTimestamp == modificationCount) {
    result=null;
  }
 else {
    data=anchor.getUserData(INJECTED_PSI_IN_CONCATENATION);
    if (data == null) {
      result=doCompute(context,project,anchor,operands);
    }
 else {
      result=data.getValue(context);
    }
  }
  if (result != null && result.getResult() != null) {
    for (    Pair<Place,PsiFile> p : result.getResult()) {
      ((MultiHostRegistrarImpl)registrar).addToResults(p.first,p.second);
    }
    if (data == null) {
      CachedValueProvider.Result<MultiHostRegistrarImpl> cachedResult=CachedValueProvider.Result.create(result,PsiModificationTracker.MODIFICATION_COUNT,getInstance(project));
      data=CachedValuesManager.getManager(project).createParameterizedCachedValue(CONCATENATION_PSI_CACHED_VALUE_PROVIDER,false);
      ((PsiParameterizedCachedValue<MultiHostRegistrarImpl,PsiElement>)data).setValue(cachedResult);
      anchor.putUserData(INJECTED_PSI_IN_CONCATENATION,data);
      if (anchor.getUserData(NO_CONCAT_INJECTION_TIMESTAMP) != null) {
        anchor.putUserData(NO_CONCAT_INJECTION_TIMESTAMP,null);
      }
    }
  }
 else {
    if (anchor.getUserData(INJECTED_PSI_IN_CONCATENATION) != null) {
      anchor.putUserData(INJECTED_PSI_IN_CONCATENATION,null);
    }
    anchor.putUserData(NO_CONCAT_INJECTION_TIMESTAMP,(int)modificationCount);
  }
}
