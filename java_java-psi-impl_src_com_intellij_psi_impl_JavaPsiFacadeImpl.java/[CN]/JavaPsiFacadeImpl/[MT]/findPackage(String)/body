{
  PsiPackage aPackage=myPackageCache.get(qualifiedName);
  if (aPackage != null) {
    return aPackage;
  }
  DumbService dumbService=DumbService.getInstance(getProject());
  List<PsiElementFinder> finders=Arrays.asList(myElementFinders);
  if (dumbService.isDumb()) {
    finders=dumbService.filterByDumbAwareness(finders);
  }
  for (  PsiElementFinder finder : finders) {
    aPackage=finder.findPackage(qualifiedName);
    if (aPackage != null) {
      return ConcurrencyUtil.cacheOrGet(myPackageCache,qualifiedName,aPackage);
    }
  }
  return null;
}
