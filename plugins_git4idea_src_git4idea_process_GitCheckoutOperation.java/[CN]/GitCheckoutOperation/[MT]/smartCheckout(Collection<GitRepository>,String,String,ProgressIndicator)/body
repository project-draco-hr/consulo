{
  final GitChangesSaver saver=configureSaver(reference,indicator);
  final AtomicReference<GitBranchOperationResult> result=new AtomicReference<GitBranchOperationResult>();
  GitComplexProcess.Operation checkoutOperation=new GitComplexProcess.Operation(){
    @Override public void run(    ContinuationContext context){
      GitBranchOperationResult saveResult=save(repositories,saver);
      if (saveResult.isSuccess()) {
        try {
          result.set(justCheckout(repositories,reference,newBranch));
        }
  finally {
          saver.restoreLocalChanges(context);
        }
      }
    }
  }
;
  GitComplexProcess.execute(myProject,"checkout",checkoutOperation);
  return result.get();
}
