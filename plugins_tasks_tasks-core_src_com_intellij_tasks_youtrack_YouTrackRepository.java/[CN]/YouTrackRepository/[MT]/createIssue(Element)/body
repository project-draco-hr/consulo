{
  String id=element.getAttributeValue("id");
  if (id == null) {
    return null;
  }
  String summary=element.getAttributeValue("summary");
  if (summary == null) {
    return null;
  }
  final String description=element.getAttributeValue("description");
  LocalTaskImpl task=new LocalTaskImpl(id,summary){
    @Override public boolean isIssue(){
      return true;
    }
    @Override public String getIssueUrl(){
      return getUrl() + "/issue/" + getId();
    }
    public String getDescription(){
      return description;
    }
    @Override public TaskRepository getRepository(){
      return YouTrackRepository.this;
    }
  }
;
  String type=element.getAttributeValue("type");
  if (type != null) {
    try {
      task.setType(TaskType.valueOf(type.toUpperCase()));
    }
 catch (    IllegalArgumentException e) {
    }
  }
  task.setUpdated(new Date(Long.parseLong(element.getAttributeValue("updated"))));
  task.setCreated(new Date(Long.parseLong(element.getAttributeValue("created"))));
  return task;
}
