{
  final List<ResolveResult> result=new ArrayList<ResolveResult>();
  final AntDomProject project=antDomPropertyReference.myInvocationContextElement.getParentOfType(AntDomProject.class,true);
  if (project != null) {
    final AntDomProject contextAntProject=project.getContextAntProject();
    final String propertyName=antDomPropertyReference.getCanonicalText();
    final PsiElement mainDeclaration=PropertyResolver.resolve(contextAntProject,propertyName,antDomPropertyReference.myInvocationContextElement).getFirst();
    if (mainDeclaration != null) {
      result.add(new MyResolveResult(mainDeclaration));
    }
    final List<PsiElement> antCallParams=AntCallParamsFinder.resolve(project,propertyName);
    for (    PsiElement param : antCallParams) {
      result.add(new MyResolveResult(param));
    }
  }
  return ContainerUtil.toArray(result,new ResolveResult[result.size()]);
}
