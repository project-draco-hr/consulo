{
  if (parameters.getCompletionType() != CompletionType.CLASS_NAME) {
    return;
  }
  final PrefixMatcher matcher=result.getPrefixMatcher();
  final String prefix=matcher.getPrefix();
  if (prefix.length() == 0 || !Character.isLowerCase(prefix.charAt(0))) {
    return;
  }
  final PsiElement position=parameters.getPosition();
  final PsiElement parent=position.getParent();
  if (!(parent instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)parent;
  if (referenceExpression.isQualified()) {
    return;
  }
  final StaticMemberProcessor processor=new StaticMemberProcessor();
  final PsiFile file=position.getContainingFile();
  if (file instanceof PsiJavaFile) {
    final PsiImportList importList=((PsiJavaFile)file).getImportList();
    if (importList != null) {
      for (      PsiImportStaticStatement statement : importList.getImportStaticStatements()) {
        processor.importMembersOf(statement.resolveTargetClass());
      }
    }
  }
  processor.processStaticMethods(result,position,QUALIFIED_METHOD_INSERT_HANDLER,STATIC_METHOD_INSERT_HANDLER);
}
