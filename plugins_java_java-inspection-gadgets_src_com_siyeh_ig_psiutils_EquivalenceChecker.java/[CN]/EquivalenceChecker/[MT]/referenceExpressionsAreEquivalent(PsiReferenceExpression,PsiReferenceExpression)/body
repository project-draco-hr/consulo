{
  final PsiElement element1=referenceExpression1.resolve();
  final PsiElement element2=referenceExpression2.resolve();
  if (element1 != null) {
    if (!element1.equals(element2)) {
      return false;
    }
  }
 else {
    return element2 == null;
  }
  if (element1 instanceof PsiMember) {
    final PsiMember member1=(PsiMember)element1;
    if (member1.hasModifierProperty(PsiModifier.STATIC)) {
      return true;
    }
 else     if (member1 instanceof PsiClass) {
      return true;
    }
  }
 else {
    return true;
  }
  final PsiExpression qualifier1=referenceExpression1.getQualifierExpression();
  final PsiExpression qualifier2=referenceExpression2.getQualifierExpression();
  if (qualifier1 != null && !(qualifier1 instanceof PsiThisExpression || qualifier1 instanceof PsiSuperExpression)) {
    if (qualifier2 == null) {
      return false;
    }
 else     if (!expressionsAreEquivalent(qualifier1,qualifier2)) {
      return false;
    }
  }
 else {
    if (qualifier2 != null && !(qualifier2 instanceof PsiThisExpression || qualifier2 instanceof PsiSuperExpression)) {
      return false;
    }
  }
  final String text1=referenceExpression1.getText();
  final String text2=referenceExpression2.getText();
  return text1.equals(text2);
}
