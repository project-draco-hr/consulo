{
  Document document=PsiDocumentManager.getInstance(myProject).getDocument(file);
  if (document == null) {
    return;
  }
  if (!FileDocumentManager.getInstance().requestWriting(document,myProject)) {
    Messages.showMessageDialog(myProject,PsiBundle.message("cannot.modify.a.read.only.file",file.getName()),CodeInsightBundle.message("error.dialog.readonly.file.title"),Messages.getErrorIcon());
    return;
  }
  final Ref<FutureTask<Boolean>> writeActionRunnable=new Ref<FutureTask<Boolean>>();
  Runnable readAction=new Runnable(){
    @Override public void run(){
      if (!checkFileWritable(file))       return;
      try {
        FutureTask<Boolean> writeTask=preprocessFile(file,myProcessChangedTextOnly);
        writeActionRunnable.set(writeTask);
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
  }
;
  Runnable writeAction=new Runnable(){
    @Override public void run(){
      if (writeActionRunnable.isNull())       return;
      FutureTask<Boolean> task=writeActionRunnable.get();
      task.run();
      try {
        task.get();
      }
 catch (      CancellationException ignored) {
      }
catch (      Exception e) {
        LOG.error(e);
      }
    }
  }
;
  runLayoutCodeProcess(readAction,writeAction,false);
}
