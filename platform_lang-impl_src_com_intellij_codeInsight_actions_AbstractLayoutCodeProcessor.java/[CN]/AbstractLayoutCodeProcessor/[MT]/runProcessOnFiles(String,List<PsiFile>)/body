{
  boolean success=CodeInsightUtilBase.preparePsiElementsForWrite(array);
  if (!success) {
    List<PsiFile> writeables=new ArrayList<PsiFile>();
    for (    PsiFile file : array) {
      if (file.isWritable()) {
        writeables.add(file);
      }
    }
    if (writeables.isEmpty())     return;
    int res=Messages.showOkCancelDialog(myProject,CodeInsightBundle.message("error.dialog.readonly.files.message",where),CodeInsightBundle.message("error.dialog.readonly.files.title"),Messages.getQuestionIcon());
    if (res != 0) {
      return;
    }
    array.clear();
    array.addAll(writeables);
  }
  final Runnable[] resultRunnable=new Runnable[1];
  try {
    runLayoutCodeProcess(new Runnable(){
      public void run(){
        resultRunnable[0]=preprocessFiles(array);
      }
    }
,new Runnable(){
      public void run(){
        if (resultRunnable[0] != null) {
          resultRunnable[0].run();
        }
      }
    }
,array.size() > 1);
  }
 catch (  Throwable e) {
    e.printStackTrace();
  }
}
