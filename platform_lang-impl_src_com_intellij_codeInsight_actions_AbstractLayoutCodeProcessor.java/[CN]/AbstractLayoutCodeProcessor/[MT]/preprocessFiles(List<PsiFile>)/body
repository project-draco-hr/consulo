{
  ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
  String oldText=null;
  double oldFraction=0;
  if (progress != null) {
    oldText=progress.getText();
    oldFraction=progress.getFraction();
    progress.setText(myProgressText);
  }
  final List<FutureTask<Boolean>> tasks=new ArrayList<FutureTask<Boolean>>(files.size());
  for (int i=0; i < files.size(); i++) {
    PsiFile file=files.get(i);
    if (progress != null) {
      if (progress.isCanceled())       return null;
      progress.setFraction((double)i / files.size());
    }
    if (file.isWritable()) {
      try {
        tasks.add(preprocessFile(file));
      }
 catch (      IncorrectOperationException e) {
        LOG.error(e);
      }
    }
    files.set(i,null);
  }
  if (progress != null) {
    progress.setText(oldText);
    progress.setFraction(oldFraction);
  }
  return new Runnable(){
    public void run(){
      for (      FutureTask<Boolean> task : tasks) {
        if (task == null) {
          continue;
        }
        task.run();
        try {
          if (!task.get() || task.isCancelled()) {
            break;
          }
        }
 catch (        InterruptedException e) {
          LOG.error("Got unexpected during formatting",e);
          break;
        }
catch (        ExecutionException e) {
          LOG.error("Got unexpected during formatting",e);
          break;
        }
      }
    }
  }
;
}
