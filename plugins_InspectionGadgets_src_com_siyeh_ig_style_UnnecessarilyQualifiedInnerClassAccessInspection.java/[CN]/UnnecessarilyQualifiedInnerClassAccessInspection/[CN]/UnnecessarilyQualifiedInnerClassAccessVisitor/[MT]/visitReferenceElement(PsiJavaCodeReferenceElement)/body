{
  super.visitReferenceElement(reference);
  final PsiElement parent=reference.getParent();
  if (parent instanceof PsiImportStatement) {
    return;
  }
  final PsiElement qualifier=reference.getQualifier();
  if (!(qualifier instanceof PsiJavaCodeReferenceElement)) {
    return;
  }
  final PsiJavaCodeReferenceElement referenceElement=(PsiJavaCodeReferenceElement)qualifier;
  final PsiElement qualifierTarget=referenceElement.resolve();
  if (!(qualifierTarget instanceof PsiClass)) {
    return;
  }
  final PsiElement target=reference.resolve();
  if (!(target instanceof PsiClass)) {
    return;
  }
  final PsiClass aClass=(PsiClass)target;
  final PsiClass containingClass=aClass.getContainingClass();
  if (containingClass == null) {
    return;
  }
  if (!containingClass.equals(qualifierTarget)) {
    return;
  }
  final String shortName=aClass.getName();
  if (!isReferenceToTargetClass(shortName,aClass,reference)) {
    return;
  }
  registerError(qualifier,aClass);
}
