{
  if (!recursionGuard.add(projectDom))   return null;
  if (!schemaHasProperty(MavenSchemaProvider.MAVEN_PROJECT_SCHEMA_URL,path))   return null;
  PsiElement result=MavenDomUtil.findTag(projectDom,path);
  if (result != null)   return result;
  if (path.equals("project.groupId") || path.equals("project.version")) {
    return MavenDomUtil.findTag(projectDom,"project.parent." + path.substring("project.".length()));
  }
  result=new MavenDomProjectProcessorUtils.DomParentProjectFileProcessor<PsiElement>(myProjectsManager){
    protected PsiElement doProcessParent(    VirtualFile parentFile){
      MavenDomProjectModel parentProjectDom=MavenDomUtil.getMavenDomProjectModel(myProject,parentFile);
      if (parentProjectDom == null)       return null;
      return resolveModelProperty(parentProjectDom,path,recursionGuard);
    }
  }
.process(projectDom);
  if (result != null)   return result;
  return myElement;
}
