{
  final Project project=e.getProject();
  if (project == null)   return;
  final Ref<Boolean> shiftPressed=Ref.create(false);
  ChooseByNamePopup popup=ChooseByNamePopup.createPopup(project,new GotoTaskPopupModel(project),new ChooseByNameItemProvider(){
    @Override public List<String> filterNames(    ChooseByNameBase base,    String[] names,    String pattern){
      return ContainerUtil.emptyList();
    }
    @Override public void filterElements(    @NotNull ChooseByNameBase base,    @NotNull String pattern,    boolean everywhere,    @NotNull ProgressIndicator cancelled,    @NotNull Processor<Object> consumer){
      Object[] elements=base.getModel().getElementsByName("",false,pattern);
      for (      Object element : elements) {
        cancelled.checkCanceled();
        if (!consumer.process(element))         return;
      }
    }
  }
,"",false,0);
  popup.setShowListForEmptyPattern(true);
  popup.setSearchInAnyPlace(true);
  popup.setAdText("<html>Press SHIFT to merge with current context<br/>Pressing " + KeymapUtil.getFirstKeyboardShortcutText(ActionManager.getInstance().getAction(IdeActions.ACTION_QUICK_JAVADOC)) + " would show task description and comments</html>");
  popup.registerAction("shiftPressed",KeyStroke.getKeyStroke("shift pressed SHIFT"),new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      shiftPressed.set(true);
    }
  }
);
  popup.registerAction("shiftReleased",KeyStroke.getKeyStroke("released SHIFT"),new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      shiftPressed.set(false);
    }
  }
);
  showNavigationPopup(new GotoActionCallback<Object>(){
    @Override public void elementChosen(    ChooseByNamePopup popup,    Object element){
      TaskManager taskManager=TaskManager.getManager(project);
      if (element instanceof TaskPsiElement) {
        Task task=((TaskPsiElement)element).getTask();
        LocalTask localTask=taskManager.findTask(task.getId());
        if (localTask != null) {
          final boolean createChangelist=taskManager.isVcsEnabled() && !taskManager.getOpenChangelists(localTask).isEmpty();
          taskManager.activateTask(localTask,!shiftPressed.get(),createChangelist);
        }
 else {
          (new SimpleOpenTaskDialog(project,task)).show();
        }
      }
 else       if (element == CREATE_NEW_TASK_ACTION) {
        popup.close(false);
        Task task=taskManager.createLocalTask(CREATE_NEW_TASK_ACTION.getTaskName());
        SimpleOpenTaskDialog simpleOpenTaskDialog=new SimpleOpenTaskDialog(project,task);
        simpleOpenTaskDialog.showAndGetOk();
      }
    }
  }
,null,popup);
}
