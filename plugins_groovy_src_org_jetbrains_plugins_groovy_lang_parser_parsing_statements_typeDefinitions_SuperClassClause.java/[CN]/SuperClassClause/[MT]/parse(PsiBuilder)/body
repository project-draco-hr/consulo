{
  PsiBuilder.Marker sccMarker=builder.mark();
  if (!ParserUtils.getToken(builder,kEXTENDS)) {
    sccMarker.rollbackTo();
    return NONE;
  }
  ParserUtils.getToken(builder,mNLS);
  if (tWRONG_SET.contains(ClassOrInterfaceType.parse(builder))) {
    sccMarker.rollbackTo();
    builder.error(GroovyBundle.message("class.or.interface.type.expected"));
    return WRONGWAY;
  }
  ParserUtils.getToken(builder,mNLS);
  sccMarker.done(SUPER_CLASS_CLAUSE);
  return SUPER_CLASS_CLAUSE;
}
