{
  super.visitTypeCastExpression(expression);
  final PsiTypeElement castType=expression.getCastType();
  if (castType == null) {
    return;
  }
  final PsiType type=castType.getType();
  final PsiExpression operand=expression.getOperand();
  if (!(operand instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)operand;
  final PsiInstanceOfExpression conflictingInstanceof=InstanceOfUtils.getConflictingInstanceof(type,referenceExpression,expression);
  if (conflictingInstanceof == null) {
    return;
  }
  final PsiTypeElement instanceofTypeElement=conflictingInstanceof.getCheckType();
  if (instanceofTypeElement == null) {
    return;
  }
  registerError(expression,referenceExpression,castType,instanceofTypeElement);
}
