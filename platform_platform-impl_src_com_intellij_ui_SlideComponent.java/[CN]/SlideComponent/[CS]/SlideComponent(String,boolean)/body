{
  myTitle=title;
  myVertical=vertical;
  addMouseMotionListener(new MouseAdapter(){
    @Override public void mouseDragged(    MouseEvent e){
      processMouse(e);
    }
  }
);
  addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      processMouse(e);
    }
    @Override public void mouseEntered(    MouseEvent e){
      updateBalloonText();
    }
    @Override public void mouseMoved(    MouseEvent e){
      updateBalloonText();
    }
    @Override public void mouseExited(    MouseEvent e){
      if (myTooltipHint != null) {
        myTooltipHint.hide();
        myTooltipHint=null;
      }
    }
  }
);
  addMouseWheelListener(new MouseWheelListener(){
    @Override public void mouseWheelMoved(    MouseWheelEvent e){
      final int amount=e.getScrollType() == MouseWheelEvent.WHEEL_UNIT_SCROLL ? e.getUnitsToScroll() * e.getScrollAmount() : e.getWheelRotation() < 0 ? -e.getScrollAmount() : e.getScrollAmount();
      int pointerValue=myPointerValue + amount;
      pointerValue=pointerValue < getPointerOffset() ? getPointerOffset() : pointerValue;
      int size=myVertical ? getHeight() : getWidth();
      pointerValue=pointerValue > (size - JBUI.scale(12)) ? size - JBUI.scale(12) : pointerValue;
      myPointerValue=pointerValue;
      myValue=pointerValueToValue(myPointerValue);
      repaint();
      fireValueChanged();
    }
  }
);
  addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      setValue(getValue());
      fireValueChanged();
      repaint();
    }
  }
);
}
