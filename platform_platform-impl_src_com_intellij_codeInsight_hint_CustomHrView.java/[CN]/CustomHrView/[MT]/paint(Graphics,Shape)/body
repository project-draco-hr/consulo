{
  Rectangle alloc=(a instanceof Rectangle) ? (Rectangle)a : a.getBounds();
  int x=0;
  int y=alloc.y + SPACE_ABOVE + (int)topMargin;
  int width=alloc.width - (int)(leftMargin + rightMargin);
  int height=1;
  if (size > 0)   height=size;
switch (alignment) {
case StyleConstants.ALIGN_CENTER:
    x=alloc.x + (alloc.width / 2) - (width / 2);
  break;
case StyleConstants.ALIGN_RIGHT:
x=alloc.x + alloc.width - width - (int)rightMargin;
break;
case StyleConstants.ALIGN_LEFT:
default :
x=alloc.x + (int)leftMargin;
break;
}
if (noshade != null) {
g.setColor(myColor);
g.fillRect(x,y,width,height);
}
 else {
Color bg=getContainer().getBackground();
Color bottom, top;
if (bg == null || bg.equals(Color.white)) {
top=Color.darkGray;
bottom=Color.lightGray;
}
 else {
top=Color.darkGray;
bottom=Color.white;
}
g.setColor(bottom);
g.drawLine(x + width - 1,y,x + width - 1,y + height - 1);
g.drawLine(x,y + height - 1,x + width - 1,y + height - 1);
g.setColor(top);
g.drawLine(x,y,x + width - 1,y);
g.drawLine(x,y,x,y + height - 1);
}
}
