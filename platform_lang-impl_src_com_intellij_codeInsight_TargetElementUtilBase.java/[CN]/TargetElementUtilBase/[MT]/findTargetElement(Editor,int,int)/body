{
  Project project=editor.getProject();
  if (project == null)   return null;
  Lookup activeLookup=LookupManager.getInstance(project).getActiveLookup();
  if (activeLookup != null && (flags & LOOKUP_ITEM_ACCEPTED) != 0) {
    LookupElement item=activeLookup.getCurrentItem();
    final PsiElement psi=item == null ? null : CompletionUtil.getTargetElement(item);
    if (psi != null && psi.isValid()) {
      return psi;
    }
  }
  Document document=editor.getDocument();
  if (ApplicationManager.getApplication().isDispatchThread()) {
    PsiDocumentManager.getInstance(project).commitAllDocuments();
  }
  PsiFile file=PsiDocumentManager.getInstance(project).getPsiFile(document);
  if (file == null)   return null;
  offset=adjustOffset(document,offset);
  if (file instanceof PsiCompiledFile) {
    file=((PsiCompiledFile)file).getDecompiledPsiFile();
  }
  PsiElement element=file.findElementAt(offset);
  if ((flags & REFERENCED_ELEMENT_ACCEPTED) != 0) {
    final PsiElement referenceOrReferencedElement=getReferenceOrReferencedElement(file,editor,flags,offset);
    if (isAcceptableReferencedElement(element,referenceOrReferencedElement)) {
      return referenceOrReferencedElement;
    }
  }
  if (element == null)   return null;
  if ((flags & ELEMENT_NAME_ACCEPTED) != 0) {
    if (element instanceof PsiNamedElement)     return element;
    return getNamedElement(element,offset - element.getTextRange().getStartOffset());
  }
  return null;
}
