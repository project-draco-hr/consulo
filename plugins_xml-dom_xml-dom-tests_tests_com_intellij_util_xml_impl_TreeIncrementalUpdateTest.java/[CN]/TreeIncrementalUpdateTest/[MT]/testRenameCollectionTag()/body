{
  final MyElement rootElement=createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n"+ " </boy>\n"+ " <girl/>\n"+ "</a>");
  myCallRegistry.clear();
  assertEquals(1,rootElement.getBoys().size());
  assertEquals(1,rootElement.getGirls().size());
  final MyElement oldBoy=rootElement.getBoys().get(0);
  final XmlTag tag=oldBoy.getXmlTag();
  assertNotNull(tag);
  final int offset=tag.getTextOffset();
  final int endoffset=offset + tag.getTextLength();
  new WriteCommandAction(getProject()){
    @Override protected void run(    Result result) throws Throwable {
      rootElement.getGirls().get(0).undefine();
      final Document document=getDocument(DomUtil.getFile(rootElement));
      PsiDocumentManager.getInstance(getProject()).doPostponedOperationsAndUnblockDocument(document);
      document.replaceString(offset + 1,offset + 1 + "boy".length(),"girl");
      commitDocument(document);
    }
  }
.execute();
  assertFalse(oldBoy.isValid());
  assertEquals(0,rootElement.getBoys().size());
  assertEquals(1,rootElement.getGirls().size());
  new WriteCommandAction(getProject()){
    @Override protected void run(    Result result) throws Throwable {
      final Document document=getDocument(DomUtil.getFile(rootElement));
      document.replaceString(endoffset - "boy".length(),endoffset,"girl");
      commitDocument(document);
    }
  }
.execute();
  assertEquals(0,rootElement.getBoys().size());
  assertEquals(1,rootElement.getGirls().size());
}
