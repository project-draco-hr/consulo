{
  if (myIdx == -1)   return;
  Integer lastKey=myIndexOfGrey.isEmpty() ? null : myIndexOfGrey.lastKey();
  final WireEventsIterator eventsIterator;
  final Set<Integer> firstUsed;
  if (lastKey == null) {
    final CommitI initCommit=myModel.getCommitAt(myInitIdx);
    final Map<VirtualFile,WireEventsIterator> groupIterators=myModel.getAllGroupIterators(myInitIdx);
    eventsIterator=groupIterators.get(myRoot);
    firstUsed=new HashSet<Integer>();
    final Integer floor=eventsIterator.getFloor();
    if (floor == null)     return;
    myIndexOfGrey.put(floor,new HashSet<Integer>(firstUsed));
    lastKey=floor;
  }
 else {
    if (lastKey.intValue() + ourIndexInterval > myModel.getRowCount())     return;
    final Map<VirtualFile,WireEventsIterator> groupIterators=myModel.getAllGroupIterators(lastKey);
    eventsIterator=groupIterators.get(myRoot);
    firstUsed=new HashSet<Integer>(myIndexOfGrey.get(lastKey));
  }
  final Iterator<WireEventI> iterator=eventsIterator.getWireEventsIterator();
  myIndexOfGreyNotReady.clear();
  boolean isCompletePart=true;
  while (iterator.hasNext()) {
    final WireEventI event=iterator.next();
    if (event.getCommitIdx() >= (ourIndexInterval + lastKey)) {
      if (isCompletePart) {
        myIndexOfGrey.put(event.getCommitIdx(),new HashSet<Integer>(firstUsed));
      }
 else {
        myIndexOfGreyNotReady.put(event.getCommitIdx(),new HashSet<Integer>(firstUsed));
      }
      lastKey=event.getCommitIdx();
    }
    applyEventToGrey(firstUsed,event,null);
    isCompletePart=isCompletePart && event.getWaitStartsNumber() == 0;
  }
  myIndexOfGreyNotReady.putAll(myIndexOfGrey);
}
