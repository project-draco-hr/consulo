{
  final IndexPatternProvider patternProvider=queryParameters.getPatternProvider();
  final PsiFile file=queryParameters.getFile();
  TIntArrayList commentStarts=new TIntArrayList();
  TIntArrayList commentEnds=new TIntArrayList();
  final CharSequence chars=file.getViewProvider().getContents();
  findCommentTokenRanges(file,chars,queryParameters.getRange(),commentStarts,commentEnds);
  for (int i=0; i < commentStarts.size(); i++) {
    int commentStart=commentStarts.get(i);
    int commentEnd=commentEnds.get(i);
    if (patternProvider != null) {
      for (      final IndexPattern pattern : patternProvider.getIndexPatterns()) {
        if (!collectPatternMatches(pattern,chars,commentStart,commentEnd,file,queryParameters.getRange(),consumer)) {
          return false;
        }
      }
    }
 else {
      if (!collectPatternMatches(queryParameters.getPattern(),chars,commentStart,commentEnd,file,queryParameters.getRange(),consumer)) {
        return false;
      }
    }
  }
  return true;
}
