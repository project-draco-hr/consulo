{
  myProject=project;
  myGitRoot=gitRoot;
  myTextField=textField;
  myButton=button;
  myGitRoot.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      myLastResult=false;
      myLastResultText=null;
    }
  }
);
  myTextField.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    final DocumentEvent e){
      myButton.setEnabled(myTextField.getText().trim().length() != 0);
    }
  }
);
  myButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final String revisionExpression=myTextField.getText();
      myLastResultText=revisionExpression;
      myLastResult=false;
      try {
        GitRevisionNumber revision=GitRevisionNumber.resolve(myProject,gitRoot(),revisionExpression);
        GitUtil.showSubmittedFiles(myProject,revision.asString(),gitRoot(),false,false);
        myLastResult=true;
      }
 catch (      VcsException ex) {
        GitUIUtil.showOperationError(myProject,ex,"Validating revision: " + revisionExpression);
      }
      if (statusChanged != null) {
        statusChanged.run();
      }
    }
  }
);
  myButton.setEnabled(myTextField.getText().length() != 0);
}
