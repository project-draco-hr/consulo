{
  if (StringUtil.isEmptyOrSpaces(name)) {
    return;
  }
 else {
    name=name.trim();
  }
  final int y=myPluginsIdx+=2;
  Icon logoImage;
  if (StringUtil.isEmptyOrSpaces(iconPath)) {
    logoImage=EmptyIcon.create(PLUGIN_LOGO_SIZE.width,PLUGIN_LOGO_SIZE.height);
  }
 else {
    logoImage=IconLoader.getIcon(iconPath);
    if (logoImage == null)     logoImage=EmptyIcon.create(PLUGIN_LOGO_SIZE.width,PLUGIN_LOGO_SIZE.height);
  }
  JLabel imageLabel=new JLabel(logoImage);
  GridBagConstraints gBC=new GridBagConstraints(0,y,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(15,20,0,0),0,0);
  panel.add(imageLabel,gBC);
  String shortenedName=adjustStringBreaksByWidth(name,LINK_FONT,false,PLUGIN_NAME_MAX_WIDTH,PLUGIN_NAME_MAX_ROWS);
  JLabel logoName=new JLabel(shortenedName);
  logoName.setFont(LINK_FONT);
  logoName.setForeground(CAPTION_COLOR);
  if (shortenedName.endsWith("...</html>")) {
    logoName.setToolTipText(adjustStringBreaksByWidth(name,UIManager.getFont("ToolTip.font"),false,MAX_TOOLTIP_WIDTH,0));
  }
  gBC=new GridBagConstraints(1,y,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(15,7,0,0),0,0);
  panel.add(logoName,gBC);
  if (!StringUtil.isEmpty(description)) {
    description=description.trim();
    if (description.startsWith("<html>")) {
      description=description.replaceAll("<html>","");
      if (description.endsWith("</html>")) {
        description=description.replaceAll("</html>","");
      }
    }
    description=description.replaceAll("\\n","");
    String shortenedDcs=adjustStringBreaksByWidth(description,TEXT_FONT,false,PLUGIN_DSC_MAX_WIDTH,PLUGIN_DSC_MAX_ROWS);
    JLabel pluginDescription=new JLabel(shortenedDcs);
    pluginDescription.setFont(TEXT_FONT);
    if (shortenedDcs.endsWith("...</html>")) {
      pluginDescription.setToolTipText(adjustStringBreaksByWidth(description,UIManager.getFont("ToolTip.font"),false,MAX_TOOLTIP_WIDTH,0));
    }
    gBC=new GridBagConstraints(1,y + 1,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(5,7,0,0),5,0);
    panel.add(pluginDescription,gBC);
  }
  if (!StringUtil.isEmptyOrSpaces(url)) {
    gBC=new GridBagConstraints(2,y,1,2,0,0,GridBagConstraints.EAST,GridBagConstraints.NONE,new Insets(0,7,0,0),0,0);
    JLabel label=new JLabel("<html><nobr><u>Learn More...</u></nobr></html>");
    label.setFont(TEXT_FONT);
    label.setForeground(CAPTION_COLOR);
    label.setToolTipText(url);
    label.addMouseListener(new MouseAdapter(){
      public void mouseClicked(      MouseEvent e){
        try {
          BrowserUtil.launchBrowser(url);
        }
 catch (        IllegalThreadStateException ex) {
        }
      }
    }
);
    label.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    panel.add(label,gBC);
    gBC=new GridBagConstraints(3,y,1,2,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,7,0,10),0,0);
    MyActionButton learnMore=new PluginsActionButton(null,LEARN_MORE_ICON,null){
      protected void onPress(      InputEvent e){
        try {
          BrowserUtil.launchBrowser(url);
        }
 catch (        IllegalThreadStateException ex) {
        }
      }
    }
;
    learnMore.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    panel.add(learnMore,gBC);
    learnMore.setupWithinPanel(myPluginsPanel,PLUGINS_GROUP,myPluginsButtonsCount,0);
    myPluginsButtonsCount++;
  }
 else {
    gBC=new GridBagConstraints(2,y,2,2,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,10),0,0);
    JPanel emptyPane=new JPanel();
    emptyPane.setBackground(PLUGINS_PANEL_COLOR);
    panel.add(emptyPane,gBC);
  }
}
