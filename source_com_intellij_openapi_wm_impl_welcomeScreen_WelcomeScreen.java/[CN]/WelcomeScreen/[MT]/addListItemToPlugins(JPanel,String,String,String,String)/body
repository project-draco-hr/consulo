{
  if (name == null || name.trim() == "")   return;
  final int y=myPluginsIdx+=2;
  GridBagConstraints gBC=new GridBagConstraints(0,y,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.NONE,new Insets(15,20,0,0),0,0);
  Icon logoImage;
  if (iconPath == null || iconPath.trim() == "") {
    logoImage=EmptyIcon.create(PLUGIN_LOGO_SIZE.width,PLUGIN_LOGO_SIZE.height);
  }
 else {
    logoImage=IconLoader.getIcon(iconPath);
  }
  JLabel logoName=new JLabel(name,logoImage,SwingConstants.LEFT);
  logoName.setFont(LINK_FONT);
  logoName.setForeground(CAPTION_COLOR);
  panel.add(logoName,gBC);
  String dsc=description;
  if (dsc != null && dsc.trim() != "") {
    if (dsc.length() > 35) {
      String substring_1;
      String substring_2;
      int maxLength=70;
      for (int i=34; i >= 0; i--) {
        if (dsc.charAt(i) == ' ') {
          substring_1=dsc.substring(0,i) + "<br>";
          if (dsc.length() <= maxLength) {
            substring_2=dsc.substring(i + 1,dsc.length());
          }
 else {
            maxLength=i + 33;
            substring_2=dsc.substring(i + 1,maxLength) + "...";
          }
          dsc=substring_1 + substring_2;
          break;
        }
      }
    }
    gBC=new GridBagConstraints(0,y + 1,1,1,0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(5,PLUGIN_LOGO_SIZE.width + 25,0,0),5,0);
    JLabel pluginDescription=new JLabel("<html>" + dsc + "</html>");
    pluginDescription.setToolTipText(description);
    pluginDescription.setFont(TEXT_FONT);
    panel.add(pluginDescription,gBC);
  }
  if (url != null && url.trim() != "") {
    gBC=new GridBagConstraints(1,y,1,2,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,15,0,0),0,0);
    JLabel label=new JLabel("<html><nobr><u>Learn More...</u></nobr></html>");
    label.setFont(TEXT_FONT);
    label.setForeground(CAPTION_COLOR);
    label.addMouseListener(new MouseAdapter(){
      public void mouseClicked(      MouseEvent e){
        try {
          BrowserUtil.launchBrowser(url);
        }
 catch (        IllegalThreadStateException ex) {
        }
      }
    }
);
    label.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    panel.add(label,gBC);
    gBC=new GridBagConstraints(2,y,1,2,0,0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,15,0,10),0,0);
    MyActionButton learnMore=new PluginsActionButton(null,LEARN_MORE_ICON,null){
      protected void onPress(      InputEvent e){
        try {
          BrowserUtil.launchBrowser(url);
        }
 catch (        IllegalThreadStateException ex) {
        }
      }
    }
;
    learnMore.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    panel.add(learnMore,gBC);
    learnMore.setupWithinPanel(myPluginsPanel,PLUGINS_GROUP,myPluginsButtonsCount,0);
    myPluginsButtonsCount++;
  }
 else {
    gBC=new GridBagConstraints(1,y,2,2,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,15,0,10),0,0);
    JPanel emptyPane=new JPanel();
    emptyPane.setBackground(PLUGINS_PANEL_COLOR);
    panel.add(emptyPane,gBC);
  }
}
