{
  if (myFlatWatchRoots.isEmpty() && myRecursiveWatchRoots.isEmpty())   return Collections.emptyList();
  Collection<String> affectedPaths=applyMapping(reportedPath);
  Collection<String> changedPaths=ContainerUtil.newSmartList();
  ext:   for (  String path : affectedPaths) {
    for (    String root : myFlatWatchRoots) {
      if (FileUtil.namesEqual(path,root)) {
        changedPaths.add(path);
        continue ext;
      }
      if (isExact) {
        String parentPath=new File(path).getParent();
        if (parentPath != null && FileUtil.namesEqual(parentPath,root)) {
          changedPaths.add(path);
          continue ext;
        }
      }
    }
    for (    String root : myRecursiveWatchRoots) {
      if (FileUtil.startsWith(path,root)) {
        changedPaths.add(path);
        continue ext;
      }
      if (!isExact) {
        String parentPath=new File(root).getParent();
        if (parentPath != null && FileUtil.namesEqual(path,parentPath)) {
          changedPaths.add(root);
          continue ext;
        }
      }
    }
  }
  if (changedPaths.isEmpty() && LOG.isDebugEnabled()) {
    LOG.debug("Not watchable, filtered: " + reportedPath);
  }
  return changedPaths;
}
