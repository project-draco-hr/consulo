{
  PsiBuilder.Marker marker=builder.mark();
  ParserUtils.getToken(builder,mLPAREN,GroovyBundle.message("lparen.expected"));
  if (TokenSets.BUILT_IN_TYPE.contains(builder.getTokenType())) {
    PsiBuilder.Marker arrMarker=builder.mark();
    ParserUtils.getToken(builder,TokenSets.BUILT_IN_TYPE);
    if (mLBRACK.equals(builder.getTokenType())) {
      declarationBracketsParse(builder,arrMarker);
    }
 else {
      arrMarker.done(BUILT_IN_TYPE);
    }
    ParserUtils.getToken(builder,mRPAREN,GroovyBundle.message("rparen.expected"));
    marker.drop();
    return TYPE_CAST;
  }
 else {
    marker.rollbackTo();
    return WRONGWAY;
  }
}
