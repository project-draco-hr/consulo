{
  GroovyElementType result;
  PsiBuilder.Marker marker=builder.mark();
  if (ParserUtils.lookAhead(builder,mLPAREN)) {
    if (!parseTypeCast(builder).equals(WRONGWAY)) {
      result=UnaryExpression.parse(builder);
      if (!result.equals(WRONGWAY)) {
        marker.done(CAST_EXPRESSION);
      }
 else {
        marker.drop();
        result=PostfixExpression.parse(builder);
      }
    }
 else {
      marker.drop();
      result=PostfixExpression.parse(builder);
    }
  }
 else {
    marker.drop();
    result=PostfixExpression.parse(builder);
  }
  return result;
}
