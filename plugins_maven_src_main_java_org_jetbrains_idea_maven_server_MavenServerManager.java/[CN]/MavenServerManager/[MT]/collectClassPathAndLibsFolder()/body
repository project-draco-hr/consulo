{
  File pluginFileOrDir=new File(PathUtil.getJarPathForClass(MavenServerManager.class));
  List<File> classpath=new ArrayList<File>();
  String root=pluginFileOrDir.getParent();
  if (pluginFileOrDir.isDirectory()) {
    classpath.add(new File(root,"maven-server-api"));
    File luceneLib=new File(PathUtil.getJarPathForClass(Query.class));
    if (getInstance().isUseMaven2()) {
      classpath.add(new File(root,"maven2-server-impl"));
      addDir(classpath,new File(luceneLib.getParentFile().getParentFile().getParentFile(),"maven2-server-impl/lib"));
    }
 else {
      classpath.add(new File(root,"maven3-server-impl"));
      File maven3Module_Lib=new File(luceneLib.getParentFile().getParentFile().getParentFile(),"maven3-server-impl/lib");
      addDir(classpath,maven3Module_Lib);
      File maven3Home=new File(maven3Module_Lib,"maven3");
      addDir(classpath,new File(maven3Home,"lib"));
      classpath.add(new File(maven3Home,"boot/plexus-classworlds-2.4.jar"));
    }
  }
 else {
    classpath.add(new File(root,"maven-server-api.jar"));
    if (getInstance().isUseMaven2()) {
      classpath.add(new File(root,"maven2-server-impl.jar"));
      addDir(classpath,new File(root,"maven2"));
    }
 else {
      classpath.add(new File(root,"maven3-server-impl.jar"));
      addDir(classpath,new File(root,"maven3"));
    }
  }
  return classpath;
}
