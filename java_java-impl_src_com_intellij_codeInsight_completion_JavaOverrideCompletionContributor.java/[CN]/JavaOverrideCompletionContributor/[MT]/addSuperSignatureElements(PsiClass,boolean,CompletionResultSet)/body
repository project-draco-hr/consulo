{
  for (  CandidateInfo candidate : OverrideImplementExploreUtil.getMethodsToOverrideImplement(parent,implemented)) {
    PsiMethod baseMethod=(PsiMethod)candidate.getElement();
    if (!baseMethod.isConstructor()) {
      PsiClass baseClass=baseMethod.getContainingClass();
      List<PsiMethod> prototypes=OverrideImplementUtil.overrideOrImplementMethod(parent,baseMethod,candidate.getSubstitutor(),new Consumer<PsiMethod>(){
        @Override public void consume(        PsiMethod method){
          OverrideImplementUtil.deleteDocComment(method);
        }
      }
);
      if (!prototypes.isEmpty() && baseClass != null) {
        result.addElement(createOverridingLookupElement(parent,implemented,baseMethod,baseClass,prototypes.get(0)));
      }
    }
  }
}
