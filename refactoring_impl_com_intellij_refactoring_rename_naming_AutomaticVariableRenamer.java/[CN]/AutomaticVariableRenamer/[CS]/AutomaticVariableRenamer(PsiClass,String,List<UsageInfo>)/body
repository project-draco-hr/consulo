{
  for (  final UsageInfo info : usages) {
    final PsiElement element=info.getElement();
    if (!(element instanceof PsiJavaCodeReferenceElement))     continue;
    final PsiVariable variable=PsiTreeUtil.getParentOfType(element,PsiVariable.class);
    if (variable == null)     continue;
    final PsiTypeElement typeElement=variable.getTypeElement();
    if (typeElement == null)     continue;
    final PsiJavaCodeReferenceElement ref=typeElement.getInnermostComponentReferenceElement();
    if (ref == null)     continue;
    if (ref.equals(element)) {
      myElements.add(variable);
      if (variable.getType() instanceof PsiArrayType) {
        myToUnpluralize.add(variable);
      }
    }
 else {
      PsiType collectionType=JavaPsiFacade.getInstance(variable.getProject()).getElementFactory().createTypeByFQClassName("java.util.Collection",variable.getResolveScope());
      if (!collectionType.isAssignableFrom(variable.getType()))       continue;
      final PsiTypeElement[] typeParameterElements=ref.getParameterList().getTypeParameterElements();
      for (      PsiTypeElement typeParameterElement : typeParameterElements) {
        final PsiJavaCodeReferenceElement parameterRef=typeParameterElement.getInnermostComponentReferenceElement();
        if (parameterRef != null && parameterRef.equals(element)) {
          myElements.add(variable);
          myToUnpluralize.add(variable);
          break;
        }
      }
    }
  }
  suggestAllNames(aClass.getName(),newClassName);
}
