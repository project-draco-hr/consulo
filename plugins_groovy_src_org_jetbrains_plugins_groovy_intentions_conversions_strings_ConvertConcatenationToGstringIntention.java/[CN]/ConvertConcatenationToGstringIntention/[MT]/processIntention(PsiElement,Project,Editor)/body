{
  final PsiFile file=element.getContainingFile();
  final int offset=editor.getCaretModel().getOffset();
  final AccessToken accessToken=ReadAction.start();
  final List<GrExpression> expressions;
  try {
    expressions=collectExpressions(file,offset);
  }
  finally {
    accessToken.finish();
  }
  final Document document=editor.getDocument();
  if (expressions.size() == 1) {
    invokeImpl(expressions.get(0),document);
  }
 else   if (expressions.size() > 0) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      invokeImpl(expressions.get(expressions.size() - 1),document);
      return;
    }
    IntroduceTargetChooser.showChooser(editor,expressions,new Pass<GrExpression>(){
      public void pass(      final GrExpression selectedValue){
        invokeImpl(selectedValue,document);
      }
    }
,new Function<GrExpression,String>(){
      @Override public String fun(      GrExpression grExpression){
        return grExpression.getText();
      }
    }
);
  }
}
