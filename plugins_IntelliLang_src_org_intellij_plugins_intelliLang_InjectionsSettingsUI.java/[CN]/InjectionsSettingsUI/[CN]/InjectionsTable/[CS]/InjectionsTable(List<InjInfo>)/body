{
  super(new ListTableModel<InjInfo>(createInjectionColumnInfos(),injections,1));
  setAutoResizeMode(AUTO_RESIZE_LAST_COLUMN);
  getColumnModel().getColumn(2).setCellRenderer(createLanguageCellRenderer());
  getColumnModel().getColumn(1).setCellRenderer(createDisplayNameCellRenderer());
  getColumnModel().getColumn(0).setResizable(false);
  setShowGrid(false);
  setShowVerticalLines(false);
  setGridColor(getForeground());
  getColumnModel().getColumn(0).setMaxWidth(new JCheckBox().getPreferredSize().width);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      final int row=rowAtPoint(e.getPoint());
      if (row < 0)       return false;
      if (columnAtPoint(e.getPoint()) <= 0)       return false;
      myInjectionsTable.getSelectionModel().setSelectionInterval(row,row);
      performEditAction(new AnActionEvent(e,DataManager.getInstance().getDataContext(InjectionsTable.this),ActionPlaces.UNKNOWN,new Presentation(""),ActionManager.getInstance(),0));
      return true;
    }
  }
.installOn(this);
  final String[] maxName=new String[]{""};
  ContainerUtil.process(injections,new Processor<InjInfo>(){
    public boolean process(    final InjInfo injection){
      String languageId=injection.injection.getInjectedLanguageId();
      Language language=InjectedLanguage.findLanguageById(languageId);
      String displayName=language == null ? languageId : language.getDisplayName();
      if (maxName[0].length() < displayName.length())       maxName[0]=displayName;
      return true;
    }
  }
);
  ContainerUtil.process(InjectedLanguage.getAvailableLanguages(),new Processor<Language>(){
    public boolean process(    final Language language){
      String displayName=language.getDisplayName();
      if (maxName[0].length() < displayName.length())       maxName[0]=displayName;
      return true;
    }
  }
);
  Icon icon=FileTypes.PLAIN_TEXT.getIcon();
  int preferred=(int)(new JLabel(maxName[0],icon,SwingConstants.LEFT).getPreferredSize().width * 1.1);
  getColumnModel().getColumn(2).setMinWidth(preferred);
  getColumnModel().getColumn(2).setPreferredWidth(preferred);
  getColumnModel().getColumn(2).setMaxWidth(preferred);
  new TableViewSpeedSearch(this){
    @Override protected String getElementText(    final Object element){
      final BaseInjection injection=((InjInfo)element).injection;
      return injection.getSupportId() + " " + injection.getInjectedLanguageId()+ " "+ injection.getDisplayName();
    }
  }
;
}
