{
  super(new ListTableModel<InjInfo>(createInjectionColumnInfos(),injections,1));
  setAutoResizeMode(AUTO_RESIZE_LAST_COLUMN);
  getColumnModel().getColumn(2).setCellRenderer(createLanguageCellRenderer());
  getColumnModel().getColumn(1).setCellRenderer(createDisplayNameCellRenderer());
  getColumnModel().getColumn(0).setResizable(false);
  setShowGrid(false);
  setShowVerticalLines(false);
  setGridColor(getForeground());
  getColumnModel().getColumn(0).setMaxWidth(new JCheckBox().getPreferredSize().width);
  final int[] preffered=new int[]{0};
  ContainerUtil.process(injections,new Processor<InjInfo>(){
    public boolean process(    final InjInfo injection){
      final String languageId=injection.injection.getInjectedLanguageId();
      if (preffered[0] < languageId.length())       preffered[0]=languageId.length();
      return true;
    }
  }
);
  final int[] max=new int[]{0};
  addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() != 2)       return;
      final int row=rowAtPoint(e.getPoint());
      if (row < 0)       return;
      if (columnAtPoint(e.getPoint()) <= 0)       return;
      myInjectionsTable.getSelectionModel().setSelectionInterval(row,row);
      performEditAction(new AnActionEvent(e,DataManager.getInstance().getDataContext(InjectionsTable.this),ActionPlaces.UNKNOWN,new Presentation(""),ActionManager.getInstance(),0));
    }
  }
);
  ContainerUtil.process(InjectedLanguage.getAvailableLanguageIDs(),new Processor<String>(){
    public boolean process(    final String languageId){
      if (max[0] < languageId.length())       max[0]=languageId.length();
      return true;
    }
  }
);
  getColumnModel().getColumn(2).setResizable(false);
  final Icon icon=StdFileTypes.PLAIN_TEXT.getIcon();
  final int preferred=new JLabel(StringUtil.repeatSymbol('m',preffered[0]),icon,SwingConstants.LEFT).getPreferredSize().width;
  getColumnModel().getColumn(2).setMinWidth(preferred);
  getColumnModel().getColumn(2).setPreferredWidth(preferred);
  getColumnModel().getColumn(2).setMaxWidth(new JLabel(StringUtil.repeatSymbol('m',max[0]),icon,SwingConstants.LEFT).getPreferredSize().width);
  new TableViewSpeedSearch(this){
    @Override protected String getElementText(    final Object element){
      final BaseInjection injection=((InjInfo)element).injection;
      return injection.getSupportId() + " " + injection.getInjectedLanguageId()+ " "+ injection.getDisplayName();
    }
  }
;
}
