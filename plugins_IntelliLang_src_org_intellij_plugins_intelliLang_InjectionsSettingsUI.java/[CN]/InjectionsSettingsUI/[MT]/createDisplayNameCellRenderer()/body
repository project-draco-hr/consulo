{
  return new TableCellRenderer(){
    final SimpleColoredComponent myLabel=new SimpleColoredComponent();
    final SimpleColoredText myText=new SimpleColoredText();
    public Component getTableCellRendererComponent(    final JTable table,    final Object value,    final boolean isSelected,    final boolean hasFocus,    final int row,    final int column){
      myLabel.clear();
      final InjInfo info=(InjInfo)value;
      if (info == null)       return myLabel;
      final boolean projectLevel=myInfos.length > 1 && info.cfgInfo != myInfos[0];
      final SimpleTextAttributes grayAttrs=isSelected ? SimpleTextAttributes.REGULAR_ATTRIBUTES : SimpleTextAttributes.GRAY_ATTRIBUTES;
      final String supportId=info.injection.getSupportId();
      myText.append(supportId + ": ",grayAttrs);
      mySupports.get(supportId).setupPresentation(info.injection,myText,isSelected);
      if (projectLevel) {
        for (ListIterator<SimpleTextAttributes> it=myText.getAttributes().listIterator(); it.hasNext(); ) {
          final SimpleTextAttributes attributes=it.next();
          it.set(attributes.derive(SimpleTextAttributes.STYLE_BOLD,null,null,null));
        }
      }
      myText.appendToComponent(myLabel);
      myText.clear();
      setLabelColors(myLabel,table,isSelected,row);
      return myLabel;
    }
  }
;
}
