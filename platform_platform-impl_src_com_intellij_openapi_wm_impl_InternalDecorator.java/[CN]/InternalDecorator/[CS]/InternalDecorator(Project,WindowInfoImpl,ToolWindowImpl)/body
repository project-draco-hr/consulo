{
  super(new BorderLayout());
  myProject=project;
  myToolWindow=toolWindow;
  myToolWindow.setDecorator(this);
  myDivider=new MyDivider();
  myTitlePanel=new TitlePanel(){
    @Override public boolean isActive(){
      return isFocused();
    }
  }
;
  myTitleTabs=toolWindow.getContentUI().getTabComponent();
  myToggleFloatingModeAction=new ToggleFloatingModeAction();
  myToggleSideModeAction=new ToggleSideModeAction();
  myToggleDockModeAction=new ToggleDockModeAction();
  myToggleAutoHideModeAction=new TogglePinnedModeAction();
  myToggleContentUiTypeAction=new ToggleContentUiTypeAction();
  myGearButton=new MyTitleButton(new AnAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      final InputEvent inputEvent=e.getInputEvent();
      final ActionPopupMenu popupMenu=ActionManager.getInstance().createActionPopupMenu(ToolWindowContentUi.POPUP_PLACE,createGearPopupGroup());
      int x=0;
      int y=0;
      if (inputEvent instanceof MouseEvent) {
        x=((MouseEvent)inputEvent).getX();
        y=((MouseEvent)inputEvent).getY();
      }
      popupMenu.getComponent().show(inputEvent.getComponent(),x,y);
    }
  }
);
  myHideAction=new HideAction();
  final HideSideAction hideSideAction=new HideSideAction();
  AnAction hide=new AnAction(){
    @Override public void actionPerformed(    AnActionEvent e){
      if ((e.getModifiers() & InputEvent.ALT_MASK) != 0) {
        myHideAction.actionPerformed(e);
      }
 else {
        hideSideAction.actionPerformed(e);
      }
    }
  }
;
  myHideSideButton=new MyTitleButton(hide);
  myListenerList=new EventListenerList();
  MyKeymapManagerListener keymapManagerListener=new MyKeymapManagerListener();
  final KeymapManagerEx keymapManager=KeymapManagerEx.getInstanceEx();
  myWeakKeymapManagerListener=new WeakKeymapManagerListener(keymapManager,keymapManagerListener);
  keymapManager.addKeymapManagerListener(myWeakKeymapManagerListener);
  init();
  myToolWindowHandler=new ToolWindowHandler();
  myToolWindow.addPropertyChangeListener(myToolWindowHandler);
  apply(info);
}
