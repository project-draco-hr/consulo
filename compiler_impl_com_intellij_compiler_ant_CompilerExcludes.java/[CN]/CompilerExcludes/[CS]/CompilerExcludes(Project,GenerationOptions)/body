{
  final CompilerConfigurationImpl compilerConfiguration=(CompilerConfigurationImpl)CompilerConfiguration.getInstance(project);
  final ExcludeEntryDescription[] excludeEntryDescriptions=compilerConfiguration.getExcludedEntriesConfiguration().getExcludeEntryDescriptions();
  myPatternSet=new PatternSet(BuildProperties.PROPERTY_COMPILER_EXCLUDES);
  for (  final ExcludeEntryDescription entry : excludeEntryDescriptions) {
    final boolean relative=project instanceof ProjectEx && ((ProjectEx)project).isSavePathsRelative();
    final String path=GenerationUtils.toRelativePath(entry.getVirtualFile(),BuildProperties.getProjectBaseDir(project),BuildProperties.getProjectBaseDirProperty(),genOptions,!relative);
    if (entry.isFile()) {
      myPatternSet.add(new Exclude(path));
    }
 else {
      if (entry.isIncludeSubdirectories()) {
        myPatternSet.add(new Exclude(path + "/**"));
      }
 else {
        myPatternSet.add(new Exclude(path + "/*"));
      }
    }
  }
}
