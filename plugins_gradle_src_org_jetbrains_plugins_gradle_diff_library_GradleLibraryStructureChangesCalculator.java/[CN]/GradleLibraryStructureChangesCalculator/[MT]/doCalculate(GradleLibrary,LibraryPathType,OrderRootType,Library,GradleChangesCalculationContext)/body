{
  final Set<String> gradleBinaryPaths=new HashSet<String>(gradleEntity.getPaths(gradleType));
  final Set<String> ideBinaryPaths=new HashSet<String>();
  for (  VirtualFile file : ideEntity.getFiles(ideType)) {
    final String path=myPlatformFacade.getLocalFileSystemPath(file);
    if (!gradleBinaryPaths.remove(path)) {
      ideBinaryPaths.add(path);
    }
  }
  if (!gradleBinaryPaths.isEmpty()) {
    GradleLibraryId libraryId=new GradleLibraryId(GradleEntityOwner.GRADLE,gradleEntity.getName());
    for (    String path : gradleBinaryPaths) {
      context.register(new GradleJarPresenceChange(new GradleJarId(path,gradleType,libraryId),null));
    }
  }
  if (!ideBinaryPaths.isEmpty()) {
    GradleLibraryId libraryId=new GradleLibraryId(GradleEntityOwner.IDE,GradleUtil.getLibraryName(ideEntity));
    for (    String path : ideBinaryPaths) {
      context.register(new GradleJarPresenceChange(null,new GradleJarId(path,gradleType,libraryId)));
    }
  }
}
