{
  myScanner.processWords(new CharArrayCharSequence(chars,0,length),new Processor<WordOccurrence>(){
    public boolean process(    final WordOccurrence t){
      IdCacheUtil.addOccurrence(wordsTable,t.getText(),convertToMask(t.getKind()));
      return true;
    }
    private int convertToMask(    final WordOccurrence.Kind kind){
      if (kind == null)       return UsageSearchContext.ANY;
      if (kind == WordOccurrence.Kind.CODE)       return UsageSearchContext.IN_CODE;
      if (kind == WordOccurrence.Kind.COMMENTS)       return UsageSearchContext.IN_COMMENTS;
      if (kind == WordOccurrence.Kind.LITERALS)       return UsageSearchContext.IN_STRINGS;
      if (kind == WordOccurrence.Kind.FOREIGN_LANGUAGE)       return UsageSearchContext.IN_FOREIGN_LANGUAGES;
      return 0;
    }
  }
);
  if (myHighlightingLexer != null && myCommentTokens != null && todoCounts != null) {
    BaseFilterLexer filterLexer=new BaseFilterLexer(myHighlightingLexer,wordsTable,todoCounts){
      private Language myJavaLanguage=StdLanguages.JAVA;
      private Language myXmlLanguage=StdLanguages.XML;
      private Language myELLanguage=StdLanguages.EL;
      private Language myAnyLanguage=Language.ANY;
      public void advance(){
        IElementType tokenType=myOriginalLexer.getTokenType();
        if (tokenType instanceof CopyCreatorLexer.HighlightingCopyElementType) {
          final CopyCreatorLexer.HighlightingCopyElementType scriptletJavaElementTypeToken=(CopyCreatorLexer.HighlightingCopyElementType)tokenType;
          tokenType=scriptletJavaElementTypeToken.getBase();
        }
        if (myCommentTokens.contains(tokenType)) {
          advanceTodoItemCounts(getBuffer(),getTokenStart(),getTokenEnd());
        }
 else         if (tokenType.getLanguage() != myXmlLanguage && tokenType.getLanguage() != myJavaLanguage && tokenType.getLanguage() != myELLanguage && tokenType.getLanguage() != myAnyLanguage) {
          if (IdCacheUtil.isInComments(tokenType)) {
            advanceTodoItemCounts(getBuffer(),getTokenStart(),getTokenEnd());
          }
        }
        myOriginalLexer.advance();
      }
    }
;
    filterLexer.start(chars);
    while (filterLexer.getTokenType() != null)     filterLexer.advance();
  }
}
