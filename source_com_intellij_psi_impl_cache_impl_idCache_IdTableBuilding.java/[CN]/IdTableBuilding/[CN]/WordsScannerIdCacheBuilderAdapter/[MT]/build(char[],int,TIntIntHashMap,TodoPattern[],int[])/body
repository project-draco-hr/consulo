{
  myScanner.processWords(new CharArrayCharSequence(chars,0,length),new Processor<WordOccurence>(){
    public boolean process(    final WordOccurence t){
      IdCacheUtil.addOccurrence(wordsTable,StringUtil.stringHashCode(t.getText()),convertToMask(t.getKind()));
      if (t.getKind() == WordOccurence.Kind.COMMENTS) {
        if (todoCounts != null) {
          for (int index=0; index < todoPatterns.length; index++) {
            Pattern pattern=todoPatterns[index].getPattern();
            if (pattern != null) {
              CharSequence input=t.getText();
              Matcher matcher=pattern.matcher(input);
              while (matcher.find()) {
                if (matcher.start() != matcher.end()) {
                  todoCounts[index]++;
                }
              }
            }
          }
        }
      }
      return true;
    }
    private int convertToMask(    final WordOccurence.Kind kind){
      if (kind == WordOccurence.Kind.CODE)       return UsageSearchContext.IN_CODE;
      if (kind == WordOccurence.Kind.COMMENTS)       return UsageSearchContext.IN_COMMENTS;
      if (kind == WordOccurence.Kind.LITERALS)       return UsageSearchContext.IN_STRINGS;
      return 0;
    }
  }
);
}
