{
  final PsiJavaCodeReferenceElement ref=PsiTreeUtil.getParentOfType(position,PsiJavaCodeReferenceElement.class);
  final PsiElement prevElement=FilterPositionUtil.searchNonSpaceNonCommentBack(ref);
  if (prevElement != null && prevElement.getParent() instanceof PsiNewExpression) {
    Set<PsiType> expectedTypes=new HashSet<PsiType>();
    for (    ExpectedTypeInfo info : ExpectedTypesProvider.getExpectedTypes((PsiExpression)prevElement.getParent(),true)) {
      expectedTypes.add(info.getType());
    }
    return JavaCompletionUtil.isDefinitelyExpected(psiClass,expectedTypes,position);
  }
  return false;
}
