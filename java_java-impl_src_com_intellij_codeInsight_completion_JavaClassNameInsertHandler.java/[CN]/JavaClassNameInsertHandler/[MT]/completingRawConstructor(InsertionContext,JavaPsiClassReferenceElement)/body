{
  final PsiJavaCodeReferenceElement ref=PsiTreeUtil.findElementOfClassAtOffset(context.getFile(),context.getStartOffset(),PsiJavaCodeReferenceElement.class,false);
  final PsiElement prevElement=FilterPositionUtil.searchNonSpaceNonCommentBack(ref);
  if (prevElement != null && prevElement.getParent() instanceof PsiNewExpression) {
    PsiTypeParameter[] typeParameters=item.getObject().getTypeParameters();
    for (    ExpectedTypeInfo info : ExpectedTypesProvider.getExpectedTypes((PsiExpression)prevElement.getParent(),true)) {
      final PsiType type=info.getType();
      if (info.isArrayTypeInfo()) {
        return false;
      }
      if (typeParameters.length > 0 && type instanceof PsiClassType && !((PsiClassType)type).isRaw()) {
        return false;
      }
    }
    return true;
  }
  return false;
}
