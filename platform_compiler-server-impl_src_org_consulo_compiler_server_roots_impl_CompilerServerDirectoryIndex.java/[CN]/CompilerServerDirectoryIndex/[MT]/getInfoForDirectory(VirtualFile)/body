{
  Module module=null;
  VirtualFile contentRoot=null;
  VirtualFile sourceRoot=null;
  byte flags=0;
  for (  Module moduleIter : myModuleManager.getModules()) {
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(moduleIter);
    for (    ContentEntry contentEntry : moduleRootManager.getContentEntries()) {
      if (VfsUtilCore.isAncestor(contentEntry.getFile(),fileForInfo,false)) {
        contentRoot=contentEntry.getFile();
        module=moduleIter;
        for (        ContentFolder contentFolder : contentEntry.getFolders()) {
          if (VfsUtilCore.isAncestor(contentFolder.getFile(),fileForInfo,false)) {
            sourceRoot=contentFolder.getFile();
            flags|=DirectoryInfo.MODULE_SOURCE_FLAG;
switch (contentFolder.getType()) {
case TEST:
              flags|=DirectoryInfo.MODULE_TEST_FLAG;
            break;
case RESOURCE:
          flags|=DirectoryInfo.MODULE_RESOURCE_FLAG;
        break;
    }
  }
}
break;
}
}
}
DirectoryInfo directoryInfo=DirectoryInfo.createNew();
directoryInfo=directoryInfo.with(module,contentRoot,sourceRoot,null,flags,OrderEntry.EMPTY_ARRAY);
return directoryInfo;
}
