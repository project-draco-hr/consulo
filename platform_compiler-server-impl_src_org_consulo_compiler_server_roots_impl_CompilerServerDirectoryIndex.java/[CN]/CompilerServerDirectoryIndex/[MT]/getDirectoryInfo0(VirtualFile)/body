{
  Module module=null;
  VirtualFile contentRoot=null;
  VirtualFile sourceRoot=null;
  VirtualFile libraryRoot=null;
  ContentFolderTypeProvider provider=null;
  for (  Module moduleIter : myModuleManager.getModules()) {
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(moduleIter);
    for (    ContentEntry contentEntry : moduleRootManager.getContentEntries()) {
      VirtualFile temp=contentEntry.getFile();
      if (temp != null && VfsUtilCore.isAncestor(temp,fileForInfo,false)) {
        contentRoot=temp;
        module=moduleIter;
        for (        ContentFolder contentFolder : contentEntry.getFolders(ContentFolderScopes.all(false))) {
          temp=contentFolder.getFile();
          if (temp != null && VfsUtilCore.isAncestor(temp,fileForInfo,false)) {
            sourceRoot=temp;
            provider=contentFolder.getType();
            if (!myTypes.contains(provider)) {
              myTypes.add(provider);
            }
          }
        }
        break;
      }
    }
  }
  VirtualFile original=fileForInfo instanceof ChildArchiveNewVirtualFile ? ((ChildArchiveNewVirtualFile)fileForInfo).getArchiveFile() : fileForInfo;
  loop:   for (  Module moduleIter : myModuleManager.getModules()) {
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(moduleIter);
    for (    OrderEntry contentEntry : moduleRootManager.getOrderEntries()) {
      if (contentEntry instanceof LibraryOrSdkOrderEntry) {
        VirtualFile[] files=ArrayUtil.mergeArrays(contentEntry.getFiles(OrderRootType.CLASSES),contentEntry.getFiles(OrderRootType.SOURCES));
        for (        VirtualFile file : files) {
          if (file.equals(original)) {
            module=moduleIter;
            libraryRoot=original;
            break loop;
          }
        }
      }
    }
  }
  int flags=DirectoryInfo.createSourceRootTypeData(provider != null,false,myTypes.indexOf(provider));
  DirectoryInfo directoryInfo=DirectoryInfo.createNew();
  directoryInfo=directoryInfo.with(module,contentRoot,sourceRoot,libraryRoot,flags,OrderEntry.EMPTY_ARRAY);
  return new Pair<DirectoryInfo,ContentFolderTypeProvider>(directoryInfo,provider);
}
