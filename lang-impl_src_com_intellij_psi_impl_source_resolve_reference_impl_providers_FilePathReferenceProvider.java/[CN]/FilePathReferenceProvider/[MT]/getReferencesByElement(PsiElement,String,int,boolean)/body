{
  return new FileReferenceSet(text,element,offset,this,true){
    protected boolean isSoft(){
      return soft;
    }
    public boolean isAbsolutePathReference(){
      return true;
    }
    @NotNull public Collection<PsiFileSystemItem> computeDefaultContexts(){
      final Module module=ModuleUtil.findModuleForPsiElement(getElement());
      return getRoots(module,true);
    }
    public FileReference createFileReference(    final TextRange range,    final int index,    final String text){
      return FilePathReferenceProvider.this.createFileReference(this,range,index,text);
    }
    @Override protected Condition<PsiElement> createCondition(){
      return new Condition<PsiElement>(){
        public boolean value(        final PsiElement element){
          return isPsiElementAccepted(element);
        }
      }
;
    }
  }
.getAllReferences();
}
