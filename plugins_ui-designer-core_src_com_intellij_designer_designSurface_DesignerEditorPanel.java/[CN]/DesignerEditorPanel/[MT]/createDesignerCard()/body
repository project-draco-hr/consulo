{
  JPanel panel=new JPanel(new FillLayout());
  myContentSplitter.setInnerComponent(panel);
  myLayeredPane=new MyLayeredPane();
  mySurfaceArea=createEditableArea();
  myToolProvider=createToolProvider();
  myGlassLayer=new GlassLayer(myToolProvider,mySurfaceArea);
  myLayeredPane.add(myGlassLayer,LAYER_GLASS);
  myDecorationLayer=createDecorationLayer();
  myLayeredPane.add(myDecorationLayer,LAYER_DECORATION);
  myFeedbackLayer=createFeedbackLayer();
  myLayeredPane.add(myFeedbackLayer,LAYER_FEEDBACK);
  myInplaceEditingLayer=createInplaceEditingLayer();
  myLayeredPane.add(myInplaceEditingLayer,LAYER_INPLACE_EDITING);
  JPanel content=new JPanel(new GridBagLayout());
  GridBagConstraints gbc=new GridBagConstraints();
  gbc.gridx=0;
  gbc.gridy=1;
  gbc.fill=GridBagConstraints.VERTICAL;
  myVerticalCaption=createCaptionPanel(false);
  content.add(myVerticalCaption,gbc);
  gbc.gridx=1;
  gbc.gridy=0;
  gbc.fill=GridBagConstraints.HORIZONTAL;
  myHorizontalCaption=createCaptionPanel(true);
  content.add(myHorizontalCaption,gbc);
  gbc.gridx=1;
  gbc.gridy=1;
  gbc.weightx=1;
  gbc.weighty=1;
  gbc.fill=GridBagConstraints.BOTH;
  myScrollPane=createScrollPane(myLayeredPane);
  content.add(myScrollPane,gbc);
  myHorizontalCaption.attachToScrollPane(myScrollPane);
  myVerticalCaption.attachToScrollPane(myScrollPane);
  myQuickFixManager=new QuickFixManager(this,myGlassLayer,myScrollPane.getViewport());
  myActionPanel=createActionPanel();
  myWarnAction=new FixableMessageAction();
  panel.add(myActionPanel.getToolbarComponent());
  panel.add(myPanel);
  myDesignerCard=content;
  myPanel.add(myDesignerCard,DESIGNER_CARD);
  mySurfaceArea.addSelectionListener(new ComponentSelectionListener(){
    @Override public void selectionChanged(    EditableArea area){
      storeSourceSelectionState();
    }
  }
);
}
