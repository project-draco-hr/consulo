{
  final Set<VirtualFile> allToCompile=new LinkedHashSet<VirtualFile>(toCompile);
  if (toCompile.size() > 1 && !"false".equals(System.getProperty("compile.groovy.dependencies","true"))) {
    context.getProgressIndicator().checkCanceled();
    context.getProgressIndicator().setText("Enumerating Groovy classes...");
    final Map<PsiClass,VirtualFile> moduleClasses=new THashMap<PsiClass,VirtualFile>();
    int groovyFiles=enumerateGroovyClasses(module,moduleClasses);
    if (toCompile.size() < groovyFiles) {
      context.getProgressIndicator().checkCanceled();
      context.getProgressIndicator().setText("Processing Groovy dependencies...");
      addIntermediateGroovyClasses(allToCompile,moduleClasses);
    }
  }
  context.getProgressIndicator().checkCanceled();
  context.getProgressIndicator().setText(GroovycOSProcessHandler.GROOVY_COMPILER_IN_OPERATION);
  runGroovycCompiler(context,module,new ArrayList<VirtualFile>(allToCompile),false,getMainOutput(context,module,tests),sink,tests);
}
