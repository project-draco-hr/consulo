{
  final PsiFile psi=PsiManager.getInstance(myProject).findFile(vfile);
  if (!(psi instanceof GroovyFile))   return Collections.emptySet();
  final Set<VirtualFile> deps=new THashSet<VirtualFile>();
  psi.acceptChildren(new PsiElementVisitor(){
    @Override public void visitElement(    PsiElement element){
      if (element instanceof GrCodeReferenceElement) {
        GrCodeReferenceElement referenceElement=(GrCodeReferenceElement)element;
        try {
          final PsiElement target=referenceElement.resolve();
          if (target instanceof GrTypeDefinition || target instanceof GroovyScriptClass) {
            final VirtualFile targetFile=target.getContainingFile().getViewProvider().getVirtualFile();
            if (moduleFiles.contains(targetFile)) {
              deps.add(targetFile);
            }
          }
        }
 catch (        ProcessCanceledException ignored) {
        }
catch (        Exception e) {
          LOG.error(e);
        }
catch (        AssertionError e) {
          LOG.error(e);
        }
      }
      element.acceptChildren(this);
    }
  }
);
  return deps;
}
