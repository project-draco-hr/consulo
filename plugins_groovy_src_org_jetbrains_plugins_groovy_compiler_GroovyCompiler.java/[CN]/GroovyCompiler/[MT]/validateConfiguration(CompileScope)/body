{
  if (compileScope.getFiles(GroovyFileType.GROOVY_FILE_TYPE,true).length == 0)   return true;
  final String groovyInstallPath=GroovyGrailsConfiguration.getInstance().getGroovyInstallPath();
  if (groovyInstallPath == null || groovyInstallPath.length() == 0) {
    Messages.showErrorDialog(myProject,GroovyBundle.message("cannot.compile.groovy.files.no.facet"),GroovyBundle.message("cannot.compile"));
    return false;
  }
  Set<Module> nojdkModules=new HashSet<Module>();
  for (  Module module : compileScope.getAffectedModules()) {
    final ProjectJdk jdk=ModuleRootManager.getInstance(module).getJdk();
    if (jdk == null)     nojdkModules.add(module);
  }
  if (!nojdkModules.isEmpty()) {
    final Module[] modules=nojdkModules.toArray(new Module[nojdkModules.size()]);
    if (modules.length == 1) {
      Messages.showErrorDialog(myProject,GroovyBundle.message("cannot.compile.groovy.files.no.sdk",modules[0].getName()),GroovyBundle.message("cannot.compile"));
    }
 else {
      StringBuffer modulesList=new StringBuffer();
      for (int i=0; i < modules.length; i++) {
        if (i > 0)         modulesList.append(", ");
        modulesList.append(modules[i].getName());
      }
      Messages.showErrorDialog(myProject,GroovyBundle.message("cannot.compile.groovy.files.no.sdk.mult",modulesList.toString()),GroovyBundle.message("cannot.compile"));
    }
    return false;
  }
  return true;
}
