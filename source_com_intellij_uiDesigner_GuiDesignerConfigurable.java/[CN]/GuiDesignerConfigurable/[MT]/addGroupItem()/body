{
  final String groupName=Messages.showInputDialog(myPaletteUI.myPanel,"Enter a new group name:","Add Group",Messages.getQuestionIcon());
  if (groupName == null) {
    return;
  }
  final ArrayList<GroupItem> groups=getGroupsFromTree();
  for (int i=groups.size() - 1; i >= 0; i--) {
    if (groupName.equals(groups.get(i).getName())) {
      Messages.showErrorDialog(myPaletteUI.myPanel,"Group name should be unique","Error");
      return;
    }
  }
  final GroupItem groupToBeAdded=new GroupItem(groupName);
  final DefaultMutableTreeNode nodeToBeAdded=new DefaultMutableTreeNode(groupToBeAdded);
  final ArrayList<TreePath> expandedPaths=new ArrayList<TreePath>();
  TreeUtil.collectExpandedPaths(myPaletteUI.myTree,expandedPaths);
  final DefaultTreeModel model=(DefaultTreeModel)myPaletteUI.myTree.getModel();
  final DefaultMutableTreeNode root=(DefaultMutableTreeNode)model.getRoot();
  final DefaultMutableTreeNode lastSelectedNode=(DefaultMutableTreeNode)myPaletteUI.myTree.getLastSelectedPathComponent();
  if (lastSelectedNode != null) {
    final DefaultMutableTreeNode selectedGroupNode;
    if (lastSelectedNode.getUserObject() instanceof GroupItem) {
      selectedGroupNode=lastSelectedNode;
    }
 else     if (lastSelectedNode.getUserObject() instanceof ComponentItem) {
      selectedGroupNode=(DefaultMutableTreeNode)lastSelectedNode.getParent();
    }
 else {
      throw new RuntimeException("unknown userObject: " + lastSelectedNode.getUserObject());
    }
    final int index=root.getIndex(selectedGroupNode);
    LOG.assertTrue(index != -1);
    root.insert(nodeToBeAdded,index + 1);
  }
 else {
    root.add(nodeToBeAdded);
  }
  model.nodeStructureChanged(root);
  TreeUtil.restoreExpandedPaths(myPaletteUI.myTree,expandedPaths);
  TreeUtil.selectNode(myPaletteUI.myTree,nodeToBeAdded);
}
