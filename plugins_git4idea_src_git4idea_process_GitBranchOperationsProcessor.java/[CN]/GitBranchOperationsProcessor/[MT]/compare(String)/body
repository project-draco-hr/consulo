{
  final List<GitCommit> headToBranch;
  final List<GitCommit> branchToHead;
  try {
    headToBranch=GitHistoryUtils.history(myProject,myRepository.getRoot(),".." + branchName);
    branchToHead=GitHistoryUtils.history(myProject,myRepository.getRoot(),branchName + "..");
  }
 catch (  VcsException e) {
    throw new GitExecutionException("Couldn't get [git log .." + branchName + "] on repository ["+ myRepository.getRoot()+ "]",e);
  }
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      if (headToBranch.isEmpty() && branchToHead.isEmpty()) {
        String currentBranch=GitBranchUiUtil.getBranchNameOrRev(myRepository);
        Messages.showInfoMessage(myProject,String.format("There are no changes in the Git log between <code>%s</code> and <code>%s</code>",currentBranch,branchName),"No Changes Detected");
      }
 else {
        new GitCompareBranchesDialog(myRepository,branchName,headToBranch,branchToHead).show();
      }
    }
  }
);
}
