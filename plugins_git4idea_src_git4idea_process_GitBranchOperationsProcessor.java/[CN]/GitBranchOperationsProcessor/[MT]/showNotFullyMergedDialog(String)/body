{
  final List<String> mergedToBranches=getMergedToBranches(branchName);
  final List<GitCommit> history;
  try {
    history=GitHistoryUtils.history(myProject,myRepository.getRoot(),".." + branchName);
  }
 catch (  VcsException e) {
    throw new GitExecutionException("Couldn't get [git log .." + branchName + "] on repository ["+ myRepository.getRoot()+ "]",e);
  }
  final AtomicBoolean forceDelete=new AtomicBoolean();
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      forceDelete.set(GitBranchIsNotFullyMergedDialog.showAndGetAnswer(myProject,history,myRepository,branchName,mergedToBranches));
    }
  }
);
  return forceDelete.get();
}
