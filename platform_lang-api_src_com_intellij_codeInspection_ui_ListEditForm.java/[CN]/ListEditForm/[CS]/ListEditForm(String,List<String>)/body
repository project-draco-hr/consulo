{
  table=new ListTable(new ListWrappingTableModel(stringList,title));
  contentPanel=ToolbarDecorator.createDecorator(table).setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      final ListWrappingTableModel tableModel=table.getModel();
      tableModel.addRow();
      EventQueue.invokeLater(new Runnable(){
        @Override public void run(){
          final int lastRowIndex=tableModel.getRowCount() - 1;
          final Rectangle rectangle=table.getCellRect(lastRowIndex,0,true);
          table.scrollRectToVisible(rectangle);
          table.editCellAt(lastRowIndex,0);
          final ListSelectionModel selectionModel=table.getSelectionModel();
          selectionModel.setSelectionInterval(lastRowIndex,lastRowIndex);
          final TableCellEditor editor=table.getCellEditor();
          final Component component=editor.getTableCellEditorComponent(table,null,true,lastRowIndex,0);
          component.requestFocus();
        }
      }
);
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      final ListSelectionModel selectionModel=table.getSelectionModel();
      final int minIndex=selectionModel.getMinSelectionIndex();
      final int maxIndex=selectionModel.getMaxSelectionIndex();
      if (minIndex == -1 || maxIndex == -1) {
        return;
      }
      final ListWrappingTableModel tableModel=table.getModel();
      for (int i=minIndex; i <= maxIndex; i++) {
        if (selectionModel.isSelectedIndex(i)) {
          tableModel.removeRow(i);
        }
      }
      final int count=tableModel.getRowCount();
      if (count <= minIndex) {
        selectionModel.setSelectionInterval(count - 1,count - 1);
      }
 else       if (minIndex <= 0) {
        if (count > 0) {
          selectionModel.setSelectionInterval(0,0);
        }
      }
 else {
        selectionModel.setSelectionInterval(minIndex - 1,minIndex - 1);
      }
    }
  }
).disableUpDownActions().createPanel();
}
