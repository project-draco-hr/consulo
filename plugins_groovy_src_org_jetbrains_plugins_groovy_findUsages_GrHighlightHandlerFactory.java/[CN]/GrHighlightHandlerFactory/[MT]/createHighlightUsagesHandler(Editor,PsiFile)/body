{
  int offset=TargetElementUtilBase.adjustOffset(file,editor.getDocument(),editor.getCaretModel().getOffset());
  final PsiElement target=file.findElementAt(offset);
  if (target == null)   return null;
  ASTNode node=target.getNode();
  if (node == null)   return null;
  IElementType type=node.getElementType();
  if (type == GroovyTokenTypes.kIMPLEMENTS || type == GroovyTokenTypes.kEXTENDS) {
    PsiElement parent=target.getParent();
    if (!(parent instanceof GrReferenceList))     return null;
    PsiElement grand=parent.getParent();
    if (!(grand instanceof GrTypeDefinition))     return null;
    return new GrHighlightOverridingMethodsHandler(editor,file,target,(GrTypeDefinition)grand);
  }
 else   if (type == GroovyTokenTypes.kRETURN || type == GroovyTokenTypes.kTHROW) {
    return new GrHighlightExitPointHandler(editor,file,target);
  }
  return null;
}
