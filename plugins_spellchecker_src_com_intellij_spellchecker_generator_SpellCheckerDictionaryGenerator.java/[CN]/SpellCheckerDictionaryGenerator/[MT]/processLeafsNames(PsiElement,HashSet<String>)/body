{
  final Token[] tokens=SpellCheckingInspection.tokenize(leafElement,leafElement.getLanguage());
  if (tokens != null) {
    for (    Token token : tokens) {
      final List<CheckArea> areas=token.getAreas();
      if (areas == null) {
        continue;
      }
      for (      CheckArea area : areas) {
        boolean ignored=area.isIgnored();
        final TextRange textRange=area.getTextRange();
        if (ignored || textRange == null) {
          continue;
        }
        final String word=area.getWord();
        if (word == null) {
          continue;
        }
        final String lowerWord=word.toLowerCase();
        if (globalSeenNames.contains(lowerWord)) {
          continue;
        }
        boolean keyword=SpellCheckingInspection.isKeyword(myNamesValidators,token.getElement(),word);
        if (keyword) {
          continue;
        }
        globalSeenNames.add(lowerWord);
        if (mySpellCheckerManager.hasProblem(lowerWord)) {
          seenNames.add(lowerWord);
        }
      }
    }
  }
}
