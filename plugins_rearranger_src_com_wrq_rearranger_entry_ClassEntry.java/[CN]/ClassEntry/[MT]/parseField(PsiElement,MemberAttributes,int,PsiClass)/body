{
  attributes.field=(PsiField)child;
  LOG.debug("enter parseField: child=" + (child == null ? "null" : child.toString()));
  attributes.name=attributes.field.getName();
  if (attributes.field.getTypeElement() == null) {
    attributes.type=attributes.field.getContainingClass().getName();
  }
 else {
    attributes.type=attributes.field.getTypeElement().getText();
  }
  attributes.modifierString=attributes.field.getModifierList().getText();
  attributes.modifiers=ModifierUtils.getModifierMask(attributes.modifierString);
  if (attributes.field.getContainingClass().isInterface()) {
    attributes.modifiers|=Modifier.PUBLIC | Modifier.STATIC | Modifier.FINAL;
  }
  if (attributes.field.getInitializer() instanceof PsiNewExpression) {
    final PsiElement lc=attributes.field.getInitializer().getLastChild();
    if (lc instanceof PsiAnonymousClass) {
      attributes.modifiers|=ModifierConstants.INIT_TO_ANON_CLASS;
    }
  }
  LOG.debug("parseField: name=" + attributes.name + ", modifiers="+ Integer.toHexString(attributes.modifiers));
  PsiElement myChild=child;
  boolean done=false;
  while (!done) {
    PsiElement lastElement=myChild.getLastChild();
    LOG.debug("parseField: getLastChild=" + (lastElement == null ? "null" : lastElement.toString()));
    if (lastElement == null)     break;
    if (lastElement instanceof PsiErrorElement)     break;
    if (lastElement instanceof PsiJavaToken && ((PsiJavaToken)lastElement).getTokenType() == JavaTokenType.SEMICOLON) {
      break;
    }
    if (lastElement instanceof PsiComment) {
      break;
    }
    LOG.debug("parseField:skipping to next field, i=" + i + ", psiClass="+ psiClass.getName());
    LOG.debug("parseField: psiClass children array length=" + psiClass.getChildren().length);
    while (++i < psiClass.getChildren().length) {
      myChild=psiClass.getChildren()[i];
      LOG.debug("parseField: myChild=" + myChild.toString());
      if (myChild instanceof PsiField) {
        done=true;
        break;
      }
    }
  }
  return i;
}
