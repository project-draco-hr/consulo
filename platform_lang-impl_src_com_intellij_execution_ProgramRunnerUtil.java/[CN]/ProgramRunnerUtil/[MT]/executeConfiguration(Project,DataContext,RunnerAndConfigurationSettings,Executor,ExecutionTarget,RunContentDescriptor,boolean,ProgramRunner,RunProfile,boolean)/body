{
  if (ExecutorRegistry.getInstance().isStarting(project,executor.getId(),runner.getRunnerId())) {
    return;
  }
  if (configuration != null && !ExecutionTargetManager.canRun(configuration,target)) {
    ExecutionUtil.handleExecutionError(project,executor.getToolWindowId(),configuration.getConfiguration(),new ExecutionException(StringUtil.escapeXml("Cannot run '" + configuration.getName() + "' on '"+ target.getDisplayName()+ "'")));
    return;
  }
  if (configuration != null && (!RunManagerImpl.canRunConfiguration(configuration,executor) || (showSettings && configuration.isEditBeforeRun()))) {
    if (!RunDialog.editConfiguration(project,configuration,"Edit configuration",executor)) {
      return;
    }
    while (!RunManagerImpl.canRunConfiguration(configuration,executor)) {
      if (Messages.YES == Messages.showYesNoDialog(project,"Configuration is still incorrect. Do you want to edit it again?","Change Configuration Settings","Edit","Continue Anyway",Messages.getErrorIcon())) {
        if (!RunDialog.editConfiguration(project,configuration,"Edit configuration",executor)) {
          return;
        }
      }
 else {
        break;
      }
    }
  }
  final ConfigurationType configurationType=configuration != null ? configuration.getType() : null;
  if (configurationType != null) {
    UsageTrigger.trigger("execute." + ConvertUsagesUtil.ensureProperKey(configurationType.getId()) + "."+ executor.getId());
  }
  try {
    ExecutionEnvironmentBuilder builder=new ExecutionEnvironmentBuilder(project,executor);
    if (configuration != null) {
      builder.setRunnerAndSettings(runner,configuration);
    }
 else {
      builder.setRunnerId(runner.getRunnerId());
    }
    builder.setTarget(target).setContentToReuse(contentToReuse).setDataContext(context);
    if (assignNewId) {
      builder.assignNewId();
    }
    if (runProfile != null) {
      builder.setRunProfile(runProfile);
    }
    runner.execute(builder.build());
  }
 catch (  ExecutionException e) {
    String name=configuration != null ? configuration.getName() : null;
    if (name == null && runProfile != null)     name=runProfile.getName();
    if (name == null && contentToReuse != null)     name=contentToReuse.getDisplayName();
    if (name == null)     name="<Unknown>";
    ExecutionUtil.handleExecutionError(project,executor.getToolWindowId(),name,e);
  }
}
