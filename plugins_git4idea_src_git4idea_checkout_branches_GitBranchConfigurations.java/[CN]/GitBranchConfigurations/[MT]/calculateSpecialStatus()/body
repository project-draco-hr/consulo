{
synchronized (myStateLock) {
    if (myCheckoutIsInProgress) {
      return SpecialStatus.CHECKOUT_IN_PROGRESS;
    }
    for (    VirtualFile root : myGitRoots) {
      if (GitRebaseUtils.isRebaseInTheProgress(root)) {
        return SpecialStatus.REBASING;
      }
      if (GitMergeUtil.isMergeInTheProgress(root)) {
        return SpecialStatus.MERGING;
      }
    }
    for (    LocalChangeList changeList : myChangeManager.getChangeListsCopy()) {
      for (      Change change : changeList.getChanges()) {
        if (change.getFileStatus() == FileStatus.MERGED_WITH_CONFLICTS) {
          return SpecialStatus.MERGING;
        }
      }
    }
    return myGitRoots.size() == 0 ? SpecialStatus.NON_GIT : SpecialStatus.NORMAL;
  }
}
