{
synchronized (myStateLock) {
    HashMap<VirtualFile,String> currents=new HashMap<VirtualFile,String>();
    for (    VirtualFile root : myGitRoots) {
      GitBranch current=GitBranch.current(myProject,root);
      currents.put(root,current == null ? "" : current.getName());
    }
    if (myConfigurations.isEmpty()) {
      detectLocalConfigurations(true);
      for (      GitBranchConfiguration configuration : myConfigurations.values()) {
        boolean currentsMatched=true;
        for (        VirtualFile root : myGitRoots) {
          currentsMatched&=currents.get(root).equals(configuration.getReference(root.getPath()));
        }
        if (currentsMatched) {
          myCurrentConfiguration=configuration;
          break;
        }
      }
      if (myCurrentConfiguration == null) {
        String name="untitled";
        if (myConfigurations.containsKey(name)) {
          String p=name;
          name=null;
          for (int i=0; i < Integer.MAX_VALUE; i++) {
            final String c=p + i;
            if (!myConfigurations.containsKey(c)) {
              name=c;
              break;
            }
          }
          if (name == null) {
            name="untitled 1";
          }
        }
        GitBranchConfiguration c=createConfiguration(name);
        for (        VirtualFile root : myGitRoots) {
          c.setReference(root.getPath(),describeRoot(root));
        }
      }
    }
    fireCurrentConfigurationChanged();
    fireConfigurationsChanged();
  }
}
