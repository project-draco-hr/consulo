{
synchronized (myStateLock) {
    if (complete) {
      List<String> locals=detectConfigurations(true,myGitRoots);
      if (locals.isEmpty()) {
        locals.add("master");
      }
      locals.removeAll(myConfigurations.keySet());
      for (      String localName : locals) {
        GitBranchConfiguration c=createConfiguration(localName);
        c.setAutoDetected(true);
        for (        VirtualFile root : myGitRoots) {
          c.setBranch(root.getPath(),localName);
        }
      }
    }
 else {
      HashSet<String> detected=new HashSet<String>();
      HashSet<String> forRoot=new HashSet<String>();
      for (      VirtualFile root : myGitRoots) {
        forRoot.clear();
        GitBranch.listAsStrings(myProject,root,false,true,forRoot,null);
        for (        String b : forRoot) {
          GitBranchConfiguration c;
          if (detected.contains(b)) {
            c=myConfigurations.get(b);
          }
 else           if (!myConfigurations.containsKey(b)) {
            detected.add(b);
            c=createConfiguration(b);
            c.setAutoDetected(true);
          }
 else {
            continue;
          }
          c.setBranch(root.getPath(),b);
        }
      }
    }
  }
}
