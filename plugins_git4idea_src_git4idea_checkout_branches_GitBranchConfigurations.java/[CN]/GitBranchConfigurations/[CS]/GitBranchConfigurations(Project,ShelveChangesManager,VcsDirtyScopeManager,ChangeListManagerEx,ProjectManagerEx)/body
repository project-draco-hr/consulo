{
  myProject=project;
  myVcs=GitVcs.getInstance(project);
  myShelveManager=shelveManager;
  myDirtyScopeManager=dirtyScopeManager;
  myChangeManager=changeManager;
  myProjectManager=projectManager;
  myReferenceListener=new GitReferenceListener(){
    /** 
 * The background checkout process is in progress
 */
    @Override public void referencesChanged(    VirtualFile root){
      GitBranchConfigurations.this.referencesChanged();
    }
  }
;
  Disposer.register(myProject,this);
  myChangesListener=new ChangeListAdapter(){
    @Override public void changesRemoved(    Collection<Change> changes,    ChangeList fromList){
      GitBranchConfigurations.this.referencesChanged();
    }
    @Override public void changesAdded(    Collection<Change> changes,    ChangeList toList){
      GitBranchConfigurations.this.referencesChanged();
    }
  }
;
}
