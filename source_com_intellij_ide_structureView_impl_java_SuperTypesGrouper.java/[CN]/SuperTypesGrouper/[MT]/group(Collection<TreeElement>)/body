{
  Collection<Group> groups=new HashSet<Group>();
  for (Iterator<TreeElement> iterator=children.iterator(); iterator.hasNext(); ) {
    Object child=iterator.next();
    if (child instanceof PsiMethodTreeElement) {
      PsiMethod method=((PsiMethodTreeElement)child).getMethod();
      PsiMethod[] superMethods=PsiSuperMethodUtil.findSuperMethods(method);
      if (superMethods.length > 0) {
        PsiMethod superMethod=superMethods[0];
        method.putUserData(SUPER_METHOD_KEY,new WeakReference<PsiMethod>(superMethod));
        PsiClass superClass=superMethod.getContainingClass();
        boolean overrides=methodOverridesSuper(method,superMethod);
        groups.add(new SuperTypeGroup(superClass,overrides));
      }
    }
  }
  return groups;
}
