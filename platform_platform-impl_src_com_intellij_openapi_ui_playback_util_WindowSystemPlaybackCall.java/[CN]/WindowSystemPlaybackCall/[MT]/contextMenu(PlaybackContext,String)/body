{
  final AsyncResult<String> result=new AsyncResult<String>();
  final IdeFocusManager fm=IdeFocusManager.getGlobalInstance();
  fm.doWhenFocusSettlesDown(new Runnable(){
    @Override public void run(){
      Component owner=fm.getFocusOwner();
      if (owner == null) {
        result.setRejected("No component focused");
        return;
      }
      ActionManager am=ActionManager.getInstance();
      AnAction showPopupMenu=am.getAction("ShowPopupMenu");
      if (showPopupMenu == null) {
        result.setRejected("Cannot find action: ShowPopupMenu");
        return;
      }
      am.tryToExecute(showPopupMenu,new MouseEvent(owner,MouseEvent.MOUSE_PRESSED,System.currentTimeMillis(),0,0,0,1,true),null,null,false).doWhenDone(new Runnable(){
        @Override public void run(){
          SwingUtilities.invokeLater(new Runnable(){
            @Override public void run(){
              MenuElement[] selectedPath=MenuSelectionManager.defaultManager().getSelectedPath();
              if (selectedPath.length == 0) {
                result.setRejected("Failed to find active popup menu");
                return;
              }
              selectNext(context,path.split("\\|"),0,selectedPath[0].getSubElements(),result);
            }
          }
);
        }
      }
).doWhenRejected(new Runnable(){
        @Override public void run(){
          result.setRejected("Cannot invoke popup menu from the ShowPopupMenu action, action call rejected");
        }
      }
);
    }
  }
);
  return result;
}
