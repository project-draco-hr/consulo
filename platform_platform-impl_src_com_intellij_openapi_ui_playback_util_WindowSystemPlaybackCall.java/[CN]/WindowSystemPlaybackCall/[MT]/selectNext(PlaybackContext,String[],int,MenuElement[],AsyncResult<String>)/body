{
  if (menuElements == null || menuElements.length == 0) {
    result.setDone();
  }
  if (toSelectIndex > toSelect.length - 1) {
    result.setDone();
    return;
  }
  String target=toSelect[toSelectIndex];
  for (  final MenuElement each : menuElements) {
    if (each.getComponent() instanceof AbstractButton) {
      final AbstractButton eachButton=(AbstractButton)each.getComponent();
      if (eachButton.getText() != null && eachButton.getText().startsWith(target)) {
        activateItem(context,each).doWhenDone(new AsyncResult.Handler<MenuElement[]>(){
          @Override public void run(          MenuElement[] menuElements){
            selectNext(context,toSelect,toSelectIndex + 1,menuElements,result);
          }
        }
).doWhenRejected(new Runnable(){
          @Override public void run(){
            result.setRejected("Cannot activate menu element: " + eachButton.getText());
            return;
          }
        }
);
        return;
      }
    }
 else {
      result.setRejected("Unknown class for context menu item: " + each.getComponent());
      return;
    }
  }
  result.setRejected("Failed to find menu item: " + target);
}
