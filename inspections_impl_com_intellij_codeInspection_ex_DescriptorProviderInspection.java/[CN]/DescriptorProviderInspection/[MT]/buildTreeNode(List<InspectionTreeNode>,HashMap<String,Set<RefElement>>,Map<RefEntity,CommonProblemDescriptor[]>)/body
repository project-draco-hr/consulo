{
  final GlobalInspectionContextImpl context=getContext();
  Set<String> packages=packageContents.keySet();
  for (  String p : packages) {
    InspectionPackageNode pNode=new InspectionPackageNode(p);
    Set<RefElement> elements=packageContents.get(p);
    for (    RefElement refElement : elements) {
      if (context != null && context.getUIOptions().SHOW_ONLY_DIFF && getElementStatus(refElement) == FileStatus.NOT_CHANGED)       continue;
      final RefElementNode elemNode=addNodeToParent(refElement,pNode);
      final CommonProblemDescriptor[] problems=problemElements.get(refElement);
      if (problems != null) {
        for (        CommonProblemDescriptor problem : problems) {
          if (context != null && context.getUIOptions().SHOW_ONLY_DIFF && getProblemStatus(problem) == FileStatus.NOT_CHANGED)           continue;
          elemNode.add(new ProblemDescriptionNode(refElement,problem,!(this instanceof DuplicatePropertyInspection),this));
        }
        if (problems.length == 1) {
          elemNode.setProblem(problems[0]);
        }
      }
    }
    content.add(pNode);
  }
}
