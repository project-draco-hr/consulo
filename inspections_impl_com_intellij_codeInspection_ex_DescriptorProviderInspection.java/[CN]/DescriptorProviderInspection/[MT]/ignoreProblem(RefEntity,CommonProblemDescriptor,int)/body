{
  if (refEntity == null)   return;
  final Set<QuickFix> localQuickFixes=myQuickFixActions.get(refEntity);
  final QuickFix[] fixes=problem.getFixes();
  if (isIgnoreProblem(fixes,localQuickFixes,idx)) {
    myProblemToElements.remove(problem);
    CommonProblemDescriptor[] descriptors=myProblemElements.get(refEntity);
    if (descriptors != null) {
      ArrayList<CommonProblemDescriptor> newDescriptors=new ArrayList<CommonProblemDescriptor>(Arrays.asList(descriptors));
      newDescriptors.remove(problem);
      myQuickFixActions.put(refEntity,null);
      if (newDescriptors.size() > 0) {
        myProblemElements.put(refEntity,newDescriptors.toArray(new ProblemDescriptor[newDescriptors.size()]));
        for (        CommonProblemDescriptor descriptor : newDescriptors) {
          collectQuickFixes(descriptor.getFixes(),refEntity);
        }
      }
 else {
        myProblemElements.remove(refEntity);
      }
    }
  }
}
