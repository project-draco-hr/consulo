{
  List<InspectionTreeNode> content=new ArrayList<InspectionTreeNode>();
  Set<String> packages=myPackageContents.keySet();
  for (  String p : packages) {
    InspectionPackageNode pNode=new InspectionPackageNode(p);
    Set<RefElement> elements=myPackageContents.get(p);
    for (    RefElement refElement : elements) {
      final RefElementNode elemNode=addNodeToParent(refElement,pNode);
      final CommonProblemDescriptor[] problems=myProblemElements.get(refElement);
      for (      CommonProblemDescriptor problem : problems) {
        elemNode.add(new ProblemDescriptionNode(refElement,problem,!(this instanceof DuplicatePropertyInspection),this));
      }
      if (problems.length == 1) {
        elemNode.setProblem(problems[0]);
      }
    }
    content.add(pNode);
  }
  for (  RefModule refModule : myModulesProblems) {
    InspectionModuleNode moduleNode=new InspectionModuleNode(refModule.getModule());
    final CommonProblemDescriptor[] problems=myProblemElements.get(refModule);
    for (    CommonProblemDescriptor problem : problems) {
      moduleNode.add(new ProblemDescriptionNode(refModule,problem,!(this instanceof DuplicatePropertyInspection),this));
    }
    content.add(moduleNode);
  }
  return content.toArray(new InspectionTreeNode[content.size()]);
}
