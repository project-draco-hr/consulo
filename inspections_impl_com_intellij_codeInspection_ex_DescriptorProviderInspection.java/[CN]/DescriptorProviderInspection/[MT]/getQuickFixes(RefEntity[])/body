{
  if (refElements == null)   return null;
  Map<Class,QuickFixAction> result=new java.util.HashMap<Class,QuickFixAction>();
  for (  RefEntity refElement : refElements) {
    final Set<QuickFix> localQuickFixes=myQuickFixActions.get(refElement);
    if (localQuickFixes != null) {
      for (      QuickFix fix : localQuickFixes) {
        final Class klass=fix.getClass();
        final QuickFixAction quickFixAction=result.get(klass);
        if (quickFixAction != null) {
          try {
            String familyName=fix.getFamilyName();
            familyName=familyName != null && familyName.length() > 0 ? "\'" + familyName + "\'" : familyName;
            ((LocalQuickFixWrapper)quickFixAction).setText(InspectionsBundle.message("inspection.descriptor.provider.apply.fix",familyName));
          }
 catch (          AbstractMethodError e) {
            ((LocalQuickFixWrapper)quickFixAction).setText(InspectionsBundle.message("inspection.descriptor.provider.apply.fix",""));
          }
        }
 else {
          LocalQuickFixWrapper quickFixWrapper=new LocalQuickFixWrapper(fix,this);
          result.put(fix.getClass(),quickFixWrapper);
        }
      }
    }
  }
  return result.values().isEmpty() ? null : result.values().toArray(new QuickFixAction[result.size()]);
}
