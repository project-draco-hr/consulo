{
  return new MyIterator<Range>(){
    @NotNull private final ChangeIterable myIterable=createChangeIterable();
    @Override public boolean hasNext(){
      return myIterable.valid();
    }
    @Override public Range next(){
      Range range=new Range(myIterable.getStart1(),myIterable.getEnd1(),myIterable.getStart2(),myIterable.getEnd2());
      myIterable.next();
      return range;
    }
  }
;
}
