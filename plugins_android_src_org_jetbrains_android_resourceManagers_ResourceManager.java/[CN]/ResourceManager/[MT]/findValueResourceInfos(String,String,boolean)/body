{
  final ResourceType type=ResourceType.getEnum(resourceType);
  if (type == null || !AndroidResourceUtil.VALUE_RESOURCE_TYPES.contains(type)) {
    return Collections.emptyList();
  }
  new HashMap<VirtualFile,Set<AndroidValueResourcesIndex.MyResourceInfo>>();
  final GlobalSearchScope scope=GlobalSearchScope.allScope(myModule.getProject());
  final List<ValueResourceInfoImpl> result=new ArrayList<ValueResourceInfoImpl>();
  final Set<VirtualFile> valueResourceFiles=getAllValueResourceFiles();
  FileBasedIndex.getInstance().processValues(AndroidValueResourcesIndex.INDEX_ID,AndroidValueResourcesIndex.createTypeNameMarkerKey(resourceType,resourceName),null,new FileBasedIndex.ValueProcessor<Set<AndroidValueResourcesIndex.MyResourceInfo>>(){
    @Override public boolean process(    VirtualFile file,    Set<AndroidValueResourcesIndex.MyResourceInfo> infos){
      for (      AndroidValueResourcesIndex.MyResourceInfo info : infos) {
        final String name=info.getResourceEntry().getName();
        if (AndroidUtils.equal(resourceName,name,distinguishDelimetersInName)) {
          if (valueResourceFiles.contains(file)) {
            result.add(new ValueResourceInfoImpl(info.getResourceEntry().getName(),type,file,myModule,info.getOffset()));
          }
        }
      }
      return true;
    }
  }
,scope);
  return result;
}
