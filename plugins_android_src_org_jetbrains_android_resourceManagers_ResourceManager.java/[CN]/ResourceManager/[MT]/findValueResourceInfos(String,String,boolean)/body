{
  final ResourceType type=ResourceType.getEnum(resourceType);
  if (type == null) {
    return Collections.emptyList();
  }
  final GlobalSearchScope scope=GlobalSearchScope.allScope(myModule.getProject());
  final List<Set<ResourceEntry>> values=FileBasedIndex.getInstance().getValues(AndroidValueResourcesIndex.INDEX_ID,AndroidValueResourcesIndex.createTypeNameMarkerKey(resourceType,resourceName),scope);
  final Set<VirtualFile> valueResourceFiles=getAllValueResourceFiles();
  final List<ValueResourceInfoImpl> result=new ArrayList<ValueResourceInfoImpl>();
  for (  Set<ResourceEntry> entrySet : values) {
    for (    ResourceEntry entry : entrySet) {
      final String name=entry.getName();
      if (AndroidUtils.equal(resourceName,name,distinguishDelimetersInName)) {
        final Collection<VirtualFile> files=FileBasedIndex.getInstance().getContainingFiles(AndroidValueResourcesIndex.INDEX_ID,entry,scope);
        for (        VirtualFile file : files) {
          if (valueResourceFiles.contains(file)) {
            result.add(new ValueResourceInfoImpl(name,type,file,myModule));
          }
        }
      }
    }
  }
  return result;
}
