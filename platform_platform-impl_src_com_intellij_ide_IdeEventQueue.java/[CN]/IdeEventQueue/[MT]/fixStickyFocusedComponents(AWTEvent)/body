{
  if (!(e instanceof InputEvent))   return;
  final KeyboardFocusManager mgr=KeyboardFocusManager.getCurrentKeyboardFocusManager();
  if (Registry.is("actionSystem.fixStickyFocusedWindows")) {
    fixStickyWindow(mgr,mgr.getActiveWindow(),"setGlobalActiveWindow");
    fixStickyWindow(mgr,mgr.getFocusedWindow(),"setGlobalFocusedWindow");
  }
  if (Registry.is("actionSystem.fixNullFocusedComponent")) {
    final Component focusOwner=mgr.getFocusOwner();
    if (focusOwner == null) {
      IdeEventQueue queue=IdeEventQueue.getInstance();
      boolean mouseEventsAhead=e instanceof MouseEvent || queue.peekEvent(MouseEvent.MOUSE_PRESSED) != null || queue.peekEvent(MouseEvent.MOUSE_RELEASED) != null || queue.peekEvent(MouseEvent.MOUSE_CLICKED) != null;
      if (!mouseEventsAhead) {
        Window showingWindow=mgr.getActiveWindow();
        if (showingWindow != null) {
          final IdeFocusManager fm=IdeFocusManager.findInstanceByComponent(showingWindow);
          fm.doWhenFocusSettlesDown(new Runnable(){
            public void run(){
              if (mgr.getFocusOwner() == null) {
                final Application app=ApplicationManager.getApplication();
                if (app != null && app.isActive()) {
                  fm.requestDefaultFocus(false);
                }
              }
            }
          }
);
        }
      }
    }
  }
}
