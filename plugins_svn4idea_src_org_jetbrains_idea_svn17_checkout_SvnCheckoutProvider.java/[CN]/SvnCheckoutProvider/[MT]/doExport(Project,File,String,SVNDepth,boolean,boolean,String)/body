{
  try {
    final SVNException[] exception=new SVNException[1];
    final SVNUpdateClient client=SvnVcs17.getInstance(project).createUpdateClient();
    ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
      public void run(){
        ProgressIndicator progressIndicator=ProgressManager.getInstance().getProgressIndicator();
        client.setEventHandler(new CheckoutEventHandler(SvnVcs17.getInstance(project),true,progressIndicator));
        client.setIgnoreExternals(ignoreExternals);
        try {
          progressIndicator.setText(SvnBundle.message("progress.text.export",target.getAbsolutePath()));
          client.doExport(SVNURL.parseURIEncoded(url),target,SVNRevision.UNDEFINED,SVNRevision.HEAD,eolStyle,force,depth);
        }
 catch (        SVNException e) {
          exception[0]=e;
        }
 finally {
          client.setIgnoreExternals(false);
          client.setEventHandler(null);
        }
      }
    }
,SvnBundle.message("message.title.export"),true,project);
    if (exception[0] != null) {
      throw exception[0];
    }
  }
 catch (  SVNException e1) {
    Messages.showErrorDialog(SvnBundle.message("message.text.cannot.export",e1.getMessage()),SvnBundle.message("message.title.export"));
  }
}
