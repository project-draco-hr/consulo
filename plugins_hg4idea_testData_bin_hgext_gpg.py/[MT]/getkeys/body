def getkeys(ui, repo, mygpg, sigdata, context):
    'get the keys who signed a data'
    (fn, ln) = context
    (node, version, sig) = sigdata
    prefix = ('%s:%d' % (fn, ln))
    node = hgnode.bin(node)
    data = node2txt(repo, node, version)
    sig = binascii.a2b_base64(sig)
    (err, keys) = mygpg.verify(data, sig)
    if err:
        ui.warn(('%s:%d %s\n' % (fn, ln, err)))
        return None
    validkeys = []
    for key in keys:
        if (key[0] == 'BADSIG'):
            ui.write((_('%s Bad signature from "%s"\n') % (prefix, key[2])))
            continue
        if (key[0] == 'EXPSIG'):
            ui.write((_('%s Note: Signature has expired (signed by: "%s")\n') % (prefix, key[2])))
        elif (key[0] == 'EXPKEYSIG'):
            ui.write((_('%s Note: This key has expired (signed by: "%s")\n') % (prefix, key[2])))
        validkeys.append((key[1], key[2], key[3]))
    return validkeys
