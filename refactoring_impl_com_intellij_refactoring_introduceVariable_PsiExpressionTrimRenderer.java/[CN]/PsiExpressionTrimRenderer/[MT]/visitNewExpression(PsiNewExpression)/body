{
  final PsiAnonymousClass anonymousClass=expr.getAnonymousClass();
  final PsiExpressionList argumentList=expr.getArgumentList();
  if (anonymousClass != null) {
    myBuf.append(PsiKeyword.NEW).append(" ").append(anonymousClass.getBaseClassType().getPresentableText());
    if (argumentList != null)     argumentList.accept(this);
    myBuf.append(" {...}");
  }
 else {
    final PsiJavaCodeReferenceElement reference=expr.getClassReference();
    if (reference != null) {
      myBuf.append(PsiKeyword.NEW).append(" ").append(reference.getText());
      final PsiExpression[] arrayDimensions=expr.getArrayDimensions();
      if (arrayDimensions.length > 0)       myBuf.append("[");
      boolean first=true;
      for (      PsiExpression dimension : arrayDimensions) {
        if (!first)         myBuf.append(", ");
        first=false;
        dimension.accept(this);
      }
      if (arrayDimensions.length > 0)       myBuf.append("]");
      if (argumentList != null) {
        argumentList.accept(this);
      }
      final PsiArrayInitializerExpression arrayInitializer=expr.getArrayInitializer();
      if (arrayInitializer != null) {
        arrayInitializer.accept(this);
      }
    }
 else {
      myBuf.append(expr.getText());
    }
  }
}
