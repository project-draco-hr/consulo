{
  final PsiModifierListOwner listOwner=getContainer(editor,file);
  LOG.assertTrue(listOwner != null);
  final ExternalAnnotationsManager annotationsManager=ExternalAnnotationsManager.getInstance(project);
  final PsiAnnotation[] externalAnnotations=annotationsManager.findExternalAnnotations(listOwner);
  LOG.assertTrue(externalAnnotations != null && externalAnnotations.length > 0);
  if (externalAnnotations.length == 1) {
    deannotate(externalAnnotations[0],project,file,annotationsManager,listOwner);
    return;
  }
  JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<PsiAnnotation>(CodeInsightBundle.message("deannotate.intention.chooser.title"),externalAnnotations){
    @Override public PopupStep onChosen(    final PsiAnnotation selectedValue,    final boolean finalChoice){
      deannotate(selectedValue,project,file,annotationsManager,listOwner);
      return PopupStep.FINAL_CHOICE;
    }
    @Override @NotNull public String getTextFor(    final PsiAnnotation value){
      final String qualifiedName=value.getQualifiedName();
      LOG.assertTrue(qualifiedName != null);
      return qualifiedName;
    }
  }
).showInBestPositionFor(editor);
}
