{
  final List<List<InferenceVariable>> independentVars=InferenceVariablesOrder.resolveOrder(inferenceVariables,this);
  for (  List<InferenceVariable> variables : independentVars) {
    for (    InferenceVariable inferenceVariable : variables) {
      if (inferenceVariable.isCaptured() || inferenceVariable.getInstantiation() != PsiType.NULL)       continue;
      final PsiTypeParameter typeParameter=inferenceVariable.getParameter();
      try {
        final List<PsiType> eqBounds=inferenceVariable.getBounds(InferenceBound.EQ);
        final List<PsiType> lowerBounds=inferenceVariable.getBounds(InferenceBound.LOWER);
        final List<PsiType> upperBounds=inferenceVariable.getBounds(InferenceBound.UPPER);
        if (upperBounds.contains(null)) {
          inferenceVariable.setInstantiation(null);
          continue;
        }
        PsiType bound=null;
        for (        PsiType eqBound : eqBounds) {
          if (eqBound == null)           continue;
          bound=acceptBoundsWithRecursiveDependencies(typeParameter,eqBound);
          if (bound != null)           break;
        }
        if (bound != null) {
          if (bound instanceof PsiCapturedWildcardType && eqBounds.size() > 1) {
            continue;
          }
          inferenceVariable.setInstantiation(bound);
        }
 else {
          PsiType lub=null;
          for (          PsiType lowerBound : lowerBounds) {
            lowerBound=acceptBoundsWithRecursiveDependencies(typeParameter,lowerBound);
            if (isProperType(lowerBound,false)) {
              if (lub == null) {
                lub=lowerBound;
              }
 else {
                lub=GenericsUtil.getLeastUpperBound(lub,lowerBound,myManager);
              }
            }
          }
          if (lub != null) {
            inferenceVariable.setInstantiation(lub instanceof PsiCapturedWildcardType ? ((PsiCapturedWildcardType)lub).getWildcard() : lub);
          }
 else {
            PsiType glb=null;
            for (            PsiType upperBound : upperBounds) {
              upperBound=acceptBoundsWithRecursiveDependencies(typeParameter,upperBound);
              if (isProperType(upperBound,false)) {
                if (glb == null) {
                  glb=upperBound;
                }
 else {
                  glb=GenericsUtil.getGreatestLowerBound(glb,upperBound);
                }
              }
            }
            if (glb != null) {
              inferenceVariable.setInstantiation(glb);
            }
          }
        }
      }
  finally {
        final PsiType instantiation=inferenceVariable.getInstantiation();
        if (instantiation != PsiType.NULL) {
          substitutor=substitutor.put(typeParameter,instantiation);
        }
      }
    }
  }
  return substitutor;
}
