{
  final PsiClassType.ClassResolveResult resolveResult=PsiUtil.resolveGenericsClassInType(targetType);
  final PsiMethod method=LambdaUtil.getFunctionalInterfaceMethod(resolveResult);
  if (method != null) {
    final PsiSubstitutor substitutor=LambdaUtil.getSubstitutor(method,resolveResult);
    for (    PsiParameter parameter : method.getParameterList().getParameters()) {
      if (!session.isProperType(siteSubstitutor.substitute(substitutor.substitute(parameter.getType()))))       return false;
    }
    return true;
  }
  return false;
}
