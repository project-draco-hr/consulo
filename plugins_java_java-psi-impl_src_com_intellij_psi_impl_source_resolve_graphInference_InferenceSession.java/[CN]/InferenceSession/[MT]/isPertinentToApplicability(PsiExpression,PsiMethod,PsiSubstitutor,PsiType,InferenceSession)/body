{
  if (expr instanceof PsiLambdaExpression) {
    if (!((PsiLambdaExpression)expr).hasFormalParameterTypes() && (session == null || !areLambdaParameterTypesKnown(siteSubstitutor,targetType,session))) {
      return false;
    }
    for (    PsiExpression expression : LambdaUtil.getReturnExpressions((PsiLambdaExpression)expr)) {
      if (!isPertinentToApplicability(expression,method,siteSubstitutor,targetType,session))       return false;
    }
    if (method.getTypeParameters().length > 0) {
      final PsiElement parent=PsiUtil.skipParenthesizedExprUp(expr.getParent());
      if (parent instanceof PsiExpressionList) {
        final PsiElement gParent=parent.getParent();
        if (gParent instanceof PsiCallExpression && ((PsiCallExpression)gParent).getTypeArgumentList().getTypeParameterElements().length == 0) {
          final int idx=LambdaUtil.getLambdaIdx(((PsiExpressionList)parent),expr);
          final PsiParameter[] parameters=method.getParameterList().getParameters();
          PsiType paramType;
          if (idx > parameters.length - 1) {
            final PsiType lastParamType=parameters[parameters.length - 1].getType();
            paramType=parameters[parameters.length - 1].isVarArgs() ? ((PsiEllipsisType)lastParamType).getComponentType() : lastParamType;
          }
 else {
            paramType=parameters[idx].getType();
          }
          final PsiClass psiClass=PsiUtil.resolveClassInClassTypeOnly(paramType);
          if (psiClass instanceof PsiTypeParameter && ((PsiTypeParameter)psiClass).getOwner() == method)           return false;
        }
      }
    }
    return true;
  }
  if (expr instanceof PsiMethodReferenceExpression) {
    return ((PsiMethodReferenceExpression)expr).isExact();
  }
  if (expr instanceof PsiParenthesizedExpression) {
    return isPertinentToApplicability(((PsiParenthesizedExpression)expr).getExpression(),method,siteSubstitutor,targetType,session);
  }
  if (expr instanceof PsiConditionalExpression) {
    final PsiExpression thenExpression=((PsiConditionalExpression)expr).getThenExpression();
    if (!isPertinentToApplicability(thenExpression,method,siteSubstitutor,targetType,session))     return false;
    final PsiExpression elseExpression=((PsiConditionalExpression)expr).getElseExpression();
    if (!isPertinentToApplicability(elseExpression,method,siteSubstitutor,targetType,session))     return false;
  }
  return true;
}
