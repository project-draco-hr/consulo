{
  final LinearGraph linearGraph=myDelegateInfo.getPermanentLinearGraph();
  return new LinearGraph(){
    @Override public int nodesCount(){
      return linearGraph.nodesCount();
    }
    @NotNull private List<Integer> convertToBekIndexes(    @NotNull List<Integer> usualIndexes){
      return ContainerUtil.map(usualIndexes,new Function<Integer,Integer>(){
        @Override public Integer fun(        Integer integer){
          return myBekIntMap.getBekIndex(integer);
        }
      }
);
    }
    @NotNull @Override public List<Integer> getUpNodes(    int nodeIndex){
      return convertToBekIndexes(linearGraph.getUpNodes(myBekIntMap.getUsualIndex(nodeIndex)));
    }
    @NotNull @Override public List<Integer> getDownNodes(    int nodeIndex){
      return convertToBekIndexes(linearGraph.getDownNodes(myBekIntMap.getUsualIndex(nodeIndex)));
    }
  }
;
}
