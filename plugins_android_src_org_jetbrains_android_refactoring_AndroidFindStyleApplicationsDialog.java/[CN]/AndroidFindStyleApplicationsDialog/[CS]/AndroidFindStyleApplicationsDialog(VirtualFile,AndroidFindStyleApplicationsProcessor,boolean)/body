{
  super(processor.getModule().getProject(),true);
  myFile=file;
  myProcessor=processor;
  final Module module=processor.getModule();
  myModuleScopeRadio.setText(AnalysisScopeBundle.message("scope.option.module.with.mnemonic",module.getName()));
  myModuleScopeRadio.setVisible(showModuleRadio);
  if (file != null) {
    myFileScopeRadio.setText("File '" + file.getName() + "'");
  }
 else {
    myFileScopeRadio.setVisible(false);
  }
  final String scopeValue=PropertiesComponent.getInstance().getValue(FIND_STYLE_APPLICATIONS_SCOPE_PROPERTY);
  AndroidFindStyleApplicationsProcessor.MyScope scope;
  try {
    scope=Enum.valueOf(AndroidFindStyleApplicationsProcessor.MyScope.class,scopeValue);
  }
 catch (  IllegalArgumentException e) {
    scope=null;
  }
  if (scope == null) {
    scope=AndroidFindStyleApplicationsProcessor.MyScope.FILE;
  }
switch (scope) {
case PROJECT:
    myProjectScopeRadio.setSelected(true);
  break;
case MODULE:
myModuleScopeRadio.setSelected(true);
break;
case FILE:
myFileScopeRadio.setSelected(true);
break;
}
if (myModuleScopeRadio.isSelected() && !myModuleScopeRadio.isVisible() || myFileScopeRadio.isSelected() && !myFileScopeRadio.isVisible()) {
myProjectScopeRadio.setSelected(true);
}
myCaptionLabel.setText("Choose a scope where to search possible applications of style '" + myProcessor.getStyleName() + "'");
setTitle(AndroidBundle.message("android.find.style.applications.title"));
init();
}
