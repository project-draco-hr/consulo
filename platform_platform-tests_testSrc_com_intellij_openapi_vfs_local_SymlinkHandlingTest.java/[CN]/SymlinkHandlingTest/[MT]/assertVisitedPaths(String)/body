{
  final VirtualFile vDir=myFileSystem.findFileByIoFile(myTempDir);
  assertNotNull(vDir);
  final Set<String> expectedSet=new HashSet<String>(expected.length + 1,1);
  ContainerUtil.addAll(expectedSet,FileUtil.toSystemIndependentName(myTempDir.getPath()));
  ContainerUtil.addAll(expectedSet,ContainerUtil.map(expected,new Function<String,String>(){
    @Override public String fun(    String path){
      return FileUtil.toSystemIndependentName(path);
    }
  }
));
  final Set<String> actualSet=new HashSet<String>();
  VfsUtilCore.visitChildrenRecursively(vDir,new VirtualFileVisitor(true){
    @Override public boolean visitFile(    @NotNull VirtualFile file){
      actualSet.add(file.getPath());
      return true;
    }
  }
);
  assertEquals(expectedSet,actualSet);
}
