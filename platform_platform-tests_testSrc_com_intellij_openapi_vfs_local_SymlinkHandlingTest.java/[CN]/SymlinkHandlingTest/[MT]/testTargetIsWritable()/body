{
  final File targetFile=createTempFile(myTempDir,"target","");
  final File linkFile=createTempLink(targetFile.getPath(),myTempDir + "/link");
  final VirtualFile linkVFile=refreshAndFind(linkFile);
  assertTrue("link=" + linkFile + ", vLink="+ linkVFile,linkVFile != null && !linkVFile.isDirectory() && linkVFile.isSymLink());
  assertTrue(targetFile.getPath(),targetFile.setWritable(true,false) && targetFile.canWrite());
  refresh();
  assertTrue(linkVFile.getPath(),linkVFile.isWritable());
  assertTrue(targetFile.getPath(),targetFile.setWritable(false,false) && !targetFile.canWrite());
  refresh();
  assertFalse(linkVFile.getPath(),linkVFile.isWritable());
  final File targetDir=createTempDirectory(myTempDir,"targetDir","");
  final File linkDir=createTempLink(targetDir.getPath(),myTempDir + "/linkDir");
  final VirtualFile linkVDir=refreshAndFind(linkDir);
  assertTrue("link=" + linkDir + ", vLink="+ linkVDir,linkVDir != null && linkVDir.isDirectory() && linkVDir.isSymLink());
  if (!SystemInfo.isWindows) {
    assertTrue(targetDir.getPath(),targetDir.setWritable(true,false) && targetDir.canWrite());
    refresh();
    assertTrue(linkVDir.getPath(),linkVDir.isWritable());
    assertTrue(targetDir.getPath(),targetDir.setWritable(false,false) && !targetDir.canWrite());
    refresh();
    assertFalse(linkVDir.getPath(),linkVDir.isWritable());
  }
 else {
    assertEquals(linkVDir.getPath(),targetDir.canWrite(),linkVDir.isWritable());
  }
}
