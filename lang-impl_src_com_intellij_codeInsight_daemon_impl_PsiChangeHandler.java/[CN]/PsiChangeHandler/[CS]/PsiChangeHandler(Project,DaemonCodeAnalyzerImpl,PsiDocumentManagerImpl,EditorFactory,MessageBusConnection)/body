{
  myProject=project;
  myDaemonCodeAnalyzer=daemonCodeAnalyzer;
  myFileStatusMap=daemonCodeAnalyzer.getFileStatusMap();
  editorFactory.getEventMulticaster().addDocumentListener(new DocumentAdapter(){
    @Override public void beforeDocumentChange(    DocumentEvent e){
      final Document document=e.getDocument();
      if (documentManager.getSynchronizer().isInSynchronization(document))       return;
      if (myCommittingDocuments.add(document)) {
        documentManager.addRunOnCommit(document,new Runnable(){
          public void run(){
            updateChangesForDocument(document);
            myCommittingDocuments.remove(document);
          }
        }
);
      }
    }
  }
,this);
  connection.subscribe(PsiDocumentTransactionListener.TOPIC,new PsiDocumentTransactionListener(){
    public void transactionStarted(    final Document doc,    final PsiFile file){
    }
    public void transactionCompleted(    final Document doc,    final PsiFile file){
      updateChangesForDocument(doc);
    }
  }
);
}
