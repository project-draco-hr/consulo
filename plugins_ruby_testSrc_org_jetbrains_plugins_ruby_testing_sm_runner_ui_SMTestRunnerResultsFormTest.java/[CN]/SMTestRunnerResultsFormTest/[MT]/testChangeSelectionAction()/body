{
  final Marker onSelectedHappend=new Marker();
  final Ref<SMTestProxy> proxyRef=new Ref<SMTestProxy>();
  final Ref<Boolean> focusRequestedRef=new Ref<Boolean>();
  myResultsViewer.addChangeSelectionListener(new TestProxySelectionChangedListener(){
    public void onChangeSelection(    @Nullable final SMTestProxy selectedTestProxy,    final boolean requestFocus){
      onSelectedHappend.set();
      proxyRef.set(selectedTestProxy);
      focusRequestedRef.set(requestFocus);
    }
  }
);
  final SMTestProxy suite=createSuiteProxy("suite",myTestsRootNode);
  final SMTestProxy test=createTestProxy("test",myTestsRootNode);
  myResultsViewer.onSuiteStarted(suite);
  myResultsViewer.onTestStarted(test);
  myResultsViewer.selectAndNotify(test);
  myResultsViewer.createChangeSelectionAction().run();
  assertTrue(onSelectedHappend.isSet());
  assertEquals(test,proxyRef.get());
  assertTrue(focusRequestedRef.get());
  onSelectedHappend.reset();
  proxyRef.set(null);
  focusRequestedRef.set(null);
  myResultsViewer.selectAndNotify(suite);
  myResultsViewer.createChangeSelectionAction().run();
  assertTrue(onSelectedHappend.isSet());
  assertEquals(suite,proxyRef.get());
  assertTrue(focusRequestedRef.get());
}
