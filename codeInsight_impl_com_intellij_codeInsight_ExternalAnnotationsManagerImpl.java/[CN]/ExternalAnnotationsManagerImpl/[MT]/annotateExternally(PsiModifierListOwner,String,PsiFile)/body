{
  final Project project=listOwner.getProject();
  final PsiFile containingFile=listOwner.getContainingFile();
  if (containingFile instanceof PsiJavaFile) {
    final String packageName=((PsiJavaFile)containingFile).getPackageName();
    final VirtualFile virtualFile=containingFile.getVirtualFile();
    LOG.assertTrue(virtualFile != null);
    final List<OrderEntry> entries=ProjectRootManager.getInstance(project).getFileIndex().getOrderEntriesForFile(virtualFile);
    if (!entries.isEmpty()) {
      for (      final OrderEntry entry : entries) {
        if (!(entry instanceof ModuleOrderEntry)) {
          final VirtualFile[] virtualFiles=AnnotationOrderRootType.getFiles(entry);
          if (virtualFiles.length > 0) {
            chooseRootAndAnnotateExternally(listOwner,annotationFQName,fromFile,project,packageName,virtualFile,virtualFiles);
          }
 else {
            if (ApplicationManager.getApplication().isUnitTestMode() || ApplicationManager.getApplication().isHeadlessEnvironment()) {
              return;
            }
            SwingUtilities.invokeLater(new Runnable(){
              public void run(){
                setupRootAndAnnotateExternally(entry,project,listOwner,annotationFQName,fromFile,packageName,virtualFile);
              }
            }
);
          }
          break;
        }
      }
    }
  }
}
