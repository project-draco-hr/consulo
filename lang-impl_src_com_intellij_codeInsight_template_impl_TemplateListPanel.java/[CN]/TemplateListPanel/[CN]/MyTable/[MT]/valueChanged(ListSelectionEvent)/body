{
  super.valueChanged(event);
  boolean enableEditButton=false;
  boolean enableRemoveButton=false;
  boolean enableCopyButton=false;
  boolean enableExportButton=false;
  int selected=getSelectedRow();
  if (selected >= 0 && selected < myTreeTable.getRowCount()) {
    TemplateSettings templateSettings=TemplateSettings.getInstance();
    TemplateImpl template=getTemplate(selected);
    if (template != null) {
      templateSettings.setLastSelectedTemplateKey(template.getKey());
    }
 else {
      templateSettings.setLastSelectedTemplateKey(null);
    }
    DefaultMutableTreeNode node=(DefaultMutableTreeNode)myTreeTable.getTree().getPathForRow(selected).getLastPathComponent();
    enableExportButton=false;
    enableEditButton=false;
    enableCopyButton=false;
    if (node.getUserObject() instanceof TemplateImpl) {
      enableCopyButton=true;
      TemplateGroup group=getSchemesManager().findSchemeByName(((TemplateImpl)node.getUserObject()).getGroupName());
      if (group != null && !getSchemesManager().isShared(group)) {
        enableEditButton=true;
        enableRemoveButton=true;
      }
    }
    if (node.getUserObject() instanceof TemplateGroup) {
      enableRemoveButton=true;
      TemplateGroup group=(TemplateGroup)node.getUserObject();
      enableExportButton=!getSchemesManager().isShared(group);
    }
  }
  updateTemplateTextArea();
  myEditor.getComponent().setEnabled(enableEditButton);
  myExpandByCombo.setEnabled(enableEditButton);
  if (myCopyButton != null) {
    myCopyButton.setEnabled(enableCopyButton);
    myEditButton.setEnabled(enableEditButton);
    myRemoveButton.setEnabled(enableRemoveButton);
  }
  if (myExportButton != null) {
    myExportButton.setEnabled(enableExportButton);
    myImportButton.setEnabled(true);
  }
}
