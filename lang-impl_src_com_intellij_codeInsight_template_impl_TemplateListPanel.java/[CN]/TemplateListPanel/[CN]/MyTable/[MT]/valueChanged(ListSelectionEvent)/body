{
  super.valueChanged(event);
  boolean enableEditButtons=false;
  boolean enableCopyButton=false;
  boolean enableExportButtons=false;
  int selected=getSelectedRow();
  if (selected >= 0 && selected < myTreeTable.getRowCount()) {
    TemplateSettings templateSettings=TemplateSettings.getInstance();
    TemplateKey templateKey=getTemplateKey(selected);
    if (templateKey != null) {
      TemplateImpl template=myTemplates.get(templateKey);
      if (template != null) {
        templateSettings.setLastSelectedTemplateKey(template.getKey());
      }
    }
 else {
      templateSettings.setLastSelectedTemplateKey(null);
    }
    DefaultMutableTreeNode node=(DefaultMutableTreeNode)myTreeTable.getTree().getPathForRow(selected).getLastPathComponent();
    enableExportButtons=false;
    enableEditButtons=false;
    enableCopyButton=false;
    if (node.getUserObject() instanceof TemplateImpl) {
      enableCopyButton=true;
      TemplateGroup group=getSchemesManager().findSchemeByName(((TemplateImpl)node.getUserObject()).getGroupName());
      if (group != null && !getSchemesManager().isShared(group)) {
        enableEditButtons=true;
      }
    }
    if (node.getUserObject() instanceof String) {
      String groupName=(String)node.getUserObject();
      TemplateGroup group=getSchemesManager().findSchemeByName(groupName);
      if (group != null) {
        enableExportButtons=!getSchemesManager().isShared(group);
      }
    }
  }
  updateTemplateTextArea();
  myEditor.getComponent().setEnabled(enableEditButtons);
  myExpandByCombo.setEnabled(enableEditButtons);
  if (myCopyButton != null) {
    myCopyButton.setEnabled(enableCopyButton);
    myEditButton.setEnabled(enableEditButtons);
    myRemoveButton.setEnabled(enableEditButtons);
  }
  if (myExportButton != null) {
    myExportButton.setEnabled(enableExportButtons);
    myImportButton.setEnabled(true);
  }
}
