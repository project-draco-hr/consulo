{
  ColumnInfo[] columnInfos={new MyColumnInfo(myColumnNames[0]){
    public Class getColumnClass(){
      return TreeTableModel.class;
    }
    public boolean isCellEditable(    Object o){
      return true;
    }
  }
,new MyColumnInfo(myColumnNames[1]),new ActivationStateColumnInfo(myColumnNames[2])};
  myTreeRoot=new DefaultMutableTreeNode();
  myTreeTableModel=new ListTreeTableModelOnColumns(myTreeRoot,columnInfos);
  myTreeTable=new MyTable((ListTreeTableModelOnColumns)myTreeTableModel);
  myTreeTable.setRootVisible(false);
  myTreeTable.setDefaultRenderer(Boolean.class,new BooleanTableCellRenderer());
  myTreeTable.getTree().setShowsRootHandles(true);
  myTreeTable.getTableHeader().setReorderingAllowed(false);
  myTreeTable.setTreeCellRenderer(new ColoredTreeCellRenderer(){
    public void customizeCellRenderer(    JTree tree,    Object value,    boolean selected,    boolean expanded,    boolean leaf,    int row,    boolean hasFocus){
      value=((DefaultMutableTreeNode)value).getUserObject();
      setPaintFocusBorder(false);
      if (value instanceof TemplateImpl) {
        setIcon(TEMPLATE_ICON);
        append(((TemplateImpl)value).getKey(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
 else       if (value instanceof TemplateGroup) {
        setIcon(TEMPLATE_GROUP_ICON);
        append(((TemplateGroup)value).getName(),SimpleTextAttributes.REGULAR_ATTRIBUTES);
      }
    }
  }
);
  myTreeTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myTreeTable.setPreferredScrollableViewportSize(new Dimension(300,myTreeTable.getRowHeight() * 10));
  myTreeTable.getColumn(myColumnNames[0]).setPreferredWidth(80);
  myTreeTable.getColumn(myColumnNames[1]).setPreferredWidth(260);
  myTreeTable.getColumn(myColumnNames[2]).setPreferredWidth(12);
  myTreeTable.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      addRow();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_INSERT,0),JComponent.WHEN_FOCUSED);
  myTreeTable.registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      removeRow();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0),JComponent.WHEN_FOCUSED);
  myTreeTable.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2 && myTreeTable.columnAtPoint(e.getPoint()) != 2) {
        edit();
      }
    }
  }
);
  JScrollPane scrollpane=ScrollPaneFactory.createScrollPane(myTreeTable);
  if (myTemplateGroups.size() > 0) {
    myTreeTable.setRowSelectionInterval(0,0);
  }
  scrollpane.setPreferredSize(new Dimension(600,400));
  return scrollpane;
}
