{
  super.visitLiteralExpression(expression);
  final PsiType type=expression.getType();
  if (type == null) {
    return;
  }
  if (TypeUtils.isJavaLangString(type)) {
    final String value=(String)expression.getValue();
    if (value == null) {
      return;
    }
    if (value.indexOf(NEW_LINE_CHAR) >= 0 || value.indexOf(RETURN_CHAR) >= 0) {
      registerError(expression);
    }
  }
 else   if (type.equals(PsiType.CHAR)) {
    final Character value=(Character)expression.getValue();
    if (value == null) {
      return;
    }
    if (value == NEW_LINE_CHAR || value == RETURN_CHAR) {
      registerError(expression);
    }
  }
}
