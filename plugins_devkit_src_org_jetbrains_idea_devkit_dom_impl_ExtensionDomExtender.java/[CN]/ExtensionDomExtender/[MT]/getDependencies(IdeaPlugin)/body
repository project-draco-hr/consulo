{
  Set<String> result=new HashSet<String>();
  result.add(PluginManager.CORE_PLUGIN_ID);
  for (  Dependency dependency : ideaPlugin.getDependencies()) {
    ContainerUtil.addIfNotNull(dependency.getStringValue(),result);
  }
  if (ideaPlugin.getPluginId() == null) {
    final VirtualFile file=DomUtil.getFile(ideaPlugin).getOriginalFile().getVirtualFile();
    if (file != null) {
      final String fileName=file.getName();
      if (!"plugin.xml".equals(fileName)) {
        final VirtualFile mainPluginXml=file.findFileByRelativePath("../plugin.xml");
        if (mainPluginXml != null) {
          final PsiFile psiFile=PsiManager.getInstance(ideaPlugin.getManager().getProject()).findFile(mainPluginXml);
          if (psiFile instanceof XmlFile) {
            final XmlFile xmlFile=(XmlFile)psiFile;
            final DomFileElement<IdeaPlugin> fileElement=ideaPlugin.getManager().getFileElement(xmlFile,IdeaPlugin.class);
            if (fileElement != null) {
              final IdeaPlugin mainPlugin=fileElement.getRootElement();
              ContainerUtil.addIfNotNull(mainPlugin.getPluginId(),result);
              for (              Dependency dependency : mainPlugin.getDependencies()) {
                ContainerUtil.addIfNotNull(dependency.getStringValue(),result);
              }
            }
          }
        }
      }
    }
  }
  return result;
}
