{
  SimpleTextAttributes attributes=SimpleTextAttributes.fromTextAttributes(EditorColorsManager.getInstance().getGlobalScheme().getAttributes(DefaultLanguageHighlighterColors.STRING));
  SimpleTextAttributes escapeAttributes=null;
  int lastOffset=0;
  int length=Math.min(value.length(),maxLength);
  text.append("\"",attributes);
  for (int i=0; i < length; i++) {
    char ch=value.charAt(i);
    if (ch == '\\' || ch == '"' || ch == '\b' || ch == '\t' || ch == '\n' || ch == '\f' || ch == '\r') {
      if (i > lastOffset) {
        text.append(value.substring(lastOffset,i),attributes);
      }
      lastOffset=i + 1;
      if (escapeAttributes == null) {
        TextAttributes fromHighlighter=EditorColorsManager.getInstance().getGlobalScheme().getAttributes(DefaultLanguageHighlighterColors.VALID_STRING_ESCAPE);
        if (fromHighlighter != null) {
          escapeAttributes=SimpleTextAttributes.fromTextAttributes(fromHighlighter);
        }
 else {
          escapeAttributes=new SimpleTextAttributes(SimpleTextAttributes.STYLE_BOLD,JBColor.GRAY);
        }
      }
      if (ch != '\\' && ch != '"') {
        text.append("\\",escapeAttributes);
      }
      String string;
switch (ch) {
case '\b':
        string="b";
      break;
case '\t':
    string="t";
  break;
case '\n':
string="n";
break;
case '\f':
string="f";
break;
case '\r':
string="r";
break;
case '"':
string="\"";
break;
case '\\':
string="\\";
break;
default :
throw new IllegalStateException();
}
text.append(string,escapeAttributes);
}
}
if (lastOffset < length) {
text.append(value.substring(lastOffset,length),attributes);
}
text.append("\"",attributes);
}
