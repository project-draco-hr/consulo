{
  ArrayList<TextEditorHighlightingPass> passes=new ArrayList<TextEditorHighlightingPass>();
  renewFile();
  if (myFile == null)   return new TextEditorHighlightingPass[0];
  if (DaemonCodeAnalyzer.getInstance(myProject).isHighlightingAvailable(myFile)) {
    PsiDocumentManager.getInstance(myProject).commitAllDocuments();
    for (    int aPassesToPerform : passesToPerform) {
      appendPass(passes,aPassesToPerform);
    }
  }
  final TextEditorHighlitingPassRegistrarEx passRegistrar=TextEditorHighlitingPassRegistrarEx.getInstanceEx();
  TextEditorHighlightingPass[] highlightingPasses=passRegistrar.modifyHighlightingPasses(passes,myFile,myEditor);
  if (passRegistrar.needAdditionalIntentionsPass()) {
    TextRange range=calculateRangeToProcess(myEditor,Pass.POPUP_HINTS2);
    int startOffset=range.getStartOffset();
    int endOffset=range.getEndOffset();
    highlightingPasses=ArrayUtil.append(highlightingPasses,createDaemonPass(startOffset,endOffset,Pass.POPUP_HINTS2));
  }
  return highlightingPasses;
}
