{
  HighlightInfo errorResult=null;
  if (aClass.hasModifierProperty(PsiModifier.ABSTRACT)) {
    String baseClassName=aClass.getName();
    String message=JavaErrorMessages.message("abstract.cannot.be.instantiated",baseClassName);
    PsiElement parent=highlightElement.getParent();
    if (parent instanceof PsiNewExpression) {
      errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(parent).descriptionAndTooltip(message).create();
    }
 else {
      errorResult=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(highlightElement).descriptionAndTooltip(message).create();
    }
    final PsiMethod anyAbstractMethod=ClassUtil.getAnyAbstractMethod(aClass);
    if (!aClass.isInterface() && anyAbstractMethod == null) {
      QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createModifierListFix(aClass,PsiModifier.ABSTRACT,false,false));
    }
    if (anyAbstractMethod != null && parent instanceof PsiNewExpression && ((PsiNewExpression)parent).getClassReference() != null) {
      QuickFixAction.registerQuickFixAction(errorResult,QUICK_FIX_FACTORY.createImplementAbstractClassMethodsFix(parent));
    }
  }
  return errorResult;
}
