{
  if (outerClass != null && !PsiTreeUtil.isContextAncestor(outerClass,place,false)) {
    String description=JavaErrorMessages.message("is.not.an.enclosing.class",HighlightUtil.formatClass(outerClass));
    return HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(elementToHighlight).descriptionAndTooltip(description).create();
  }
  PsiModifierListOwner staticParent=PsiUtil.getEnclosingStaticElement(place,outerClass);
  if (staticParent != null) {
    String element=outerClass == null ? "" : HighlightUtil.formatClass(outerClass) + "." + (place instanceof PsiSuperExpression ? PsiKeyword.SUPER : PsiKeyword.THIS);
    String description=JavaErrorMessages.message("cannot.be.referenced.from.static.context",element);
    HighlightInfo highlightInfo=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(elementToHighlight).descriptionAndTooltip(description).create();
    QuickFixAction.registerQuickFixAction(highlightInfo,QUICK_FIX_FACTORY.createModifierListFix(staticParent,PsiModifier.STATIC,false,false));
    if (aClass != null && HighlightUtil.getIncompatibleModifier(PsiModifier.STATIC,aClass.getModifierList()) == null) {
      QuickFixAction.registerQuickFixAction(highlightInfo,QUICK_FIX_FACTORY.createModifierListFix(aClass,PsiModifier.STATIC,true,false));
    }
    return highlightInfo;
  }
  return null;
}
