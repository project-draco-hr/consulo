{
  HttpConfigurable.getInstance().setAuthenticator();
  final List<Pair<DownloadableFileDescription,File>> downloadedFiles=new ArrayList<Pair<DownloadableFileDescription,File>>();
  final List<VirtualFile> existingFiles=new ArrayList<VirtualFile>();
  final Ref<Exception> exceptionRef=Ref.create(null);
  final Ref<DownloadableFileDescription> currentFile=new Ref<DownloadableFileDescription>();
  ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){
    public void run(){
      final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
      try {
        for (int i=0; i < myFileDescriptions.size(); i++) {
          DownloadableFileDescription description=myFileDescriptions.get(i);
          currentFile.set(description);
          if (indicator != null) {
            indicator.checkCanceled();
            indicator.setText(IdeBundle.message("progress.0.of.1.file.downloaded.text",i,myFileDescriptions.size()));
          }
          final VirtualFile existing=dir.findChild(description.getDefaultFileName());
          long size=existing != null ? existing.getLength() : -1;
          if (!download(description,size,downloadedFiles)) {
            existingFiles.add(existing);
          }
        }
      }
 catch (      ProcessCanceledException e) {
        exceptionRef.set(e);
      }
catch (      IOException e) {
        exceptionRef.set(e);
      }
    }
  }
,myDialogTitle,true,myProject,myParent);
  Exception exception=exceptionRef.get();
  if (exception == null) {
    try {
      return moveToDir(existingFiles,downloadedFiles,dir);
    }
 catch (    IOException e) {
      if (myProject != null) {
        Messages.showErrorDialog(myProject,myDialogTitle,e.getMessage());
      }
 else {
        Messages.showErrorDialog(myParent,myDialogTitle,e.getMessage());
      }
      return VirtualFile.EMPTY_ARRAY;
    }
  }
  deleteFiles(downloadedFiles);
  if (exception instanceof IOException) {
    String message=IdeBundle.message("error.library.download.failed",exception.getMessage());
    if (currentFile.get() != null) {
      message+=": " + currentFile.get().getDownloadUrl();
    }
    final boolean tryAgain=IOExceptionDialog.showErrorDialog(myDialogTitle,message);
    if (tryAgain) {
      return doDownload(dir);
    }
  }
  return VirtualFile.EMPTY_ARRAY;
}
