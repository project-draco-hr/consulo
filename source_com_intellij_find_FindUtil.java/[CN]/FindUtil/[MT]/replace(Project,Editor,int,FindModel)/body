{
  Document document=editor.getDocument();
  int caretOffset=offset;
  if (!document.isWritable()) {
    if (!FileDocumentManager.fileForDocumentCheckedOutSuccessfully(document,project)) {
      return false;
    }
  }
  document.startGuardedBlockChecking();
  FindManager findManager=FindManager.getInstance(project);
  boolean toPrompt=model.isPromptOnReplace();
  if (!toPrompt) {
    ((DocumentEx)document).setInBulkUpdate(true);
  }
  boolean isReplaced=false;
  int occurrences=0;
  try {
    model=(FindModel)model.clone();
    while (offset >= 0 && offset < editor.getDocument().getTextLength()) {
      caretOffset=offset;
      FindResult result=doSearch(project,editor,offset,!isReplaced,model,toPrompt);
      if (result == null) {
        break;
      }
      int startResultOffset=result.getStartOffset();
      model.setFromCursor(true);
      if (toPrompt) {
        int promptResult=findManager.showPromptDialog(model,FindBundle.message("find.replace.dialog.title"));
        if (promptResult == FindManager.PromptResult.SKIP) {
          offset=model.isForward() ? result.getEndOffset() : startResultOffset;
          continue;
        }
        if (promptResult == FindManager.PromptResult.CANCEL) {
          break;
        }
        if (promptResult == FindManager.PromptResult.ALL) {
          toPrompt=false;
          ((DocumentEx)document).setInBulkUpdate(true);
        }
      }
      int startOffset=result.getStartOffset();
      int endOffset=result.getEndOffset();
      String foundString=document.getCharsSequence().subSequence(startOffset,endOffset).toString();
      String toReplace=findManager.getStringToReplace(foundString,model);
      if (model.isForward()) {
        offset=doReplace(document,model,result,toReplace).getEndOffset();
      }
 else {
        offset=doReplace(document,model,result,toReplace).getStartOffset();
      }
      occurrences++;
      if (!isReplaced) {
        editor.getCaretModel().moveToOffset(0);
      }
      isReplaced=true;
    }
  }
 catch (  ReadOnlyFragmentModificationException e) {
    EditorActionManager.getInstance().getReadonlyFragmentModificationHandler().handle(e);
  }
 finally {
    if (!toPrompt) {
      ((DocumentEx)document).setInBulkUpdate(false);
    }
    document.stopGuardedBlockChecking();
  }
  if (isReplaced) {
    editor.getCaretModel().moveToOffset(caretOffset);
  }
  ReplaceInProjectManager.reportNumberReplacedOccurences(project,occurrences);
  return isReplaced;
}
