{
  VirtualFile parent1=createModulePom("parent1","<groupId>test</groupId>" + "<artifactId>parent1</artifactId>" + "<version>1</version>"+ "<properties>"+ "  <childName>child1</childName>"+ "</properties>");
  VirtualFile parent2=createModulePom("parent2","<groupId>test</groupId>" + "<artifactId>parent2</artifactId>" + "<version>1</version>"+ "<properties>"+ "  <childName>child2</childName>"+ "</properties>");
  VirtualFile child=createModulePom("child","<groupId>test</groupId>" + "<artifactId>${childName}</artifactId>" + "<version>1</version>"+ "<parent>"+ "  <groupId>test</groupId>"+ "  <artifactId>parent1</artifactId>"+ "  <version>1</version>"+ "</parent>");
  readModel(parent1,parent2,child);
  assertEquals("child1",myTree.findProject(child).getMavenId().artifactId);
  createModulePom("child","<groupId>test</groupId>" + "<artifactId>${childName}</artifactId>" + "<version>1</version>"+ "<parent>"+ "  <groupId>test</groupId>"+ "  <artifactId>parent2</artifactId>"+ "  <version>1</version>"+ "</parent>");
  update(child);
  assertEquals("child2",myTree.findProject(child).getMavenId().artifactId);
}
