{
  if (content instanceof EmptyContent) {
    return new DiffElement(){
      @Override public String getPath(){
        return "";
      }
      @NotNull @Override public String getName(){
        return "Nothing";
      }
      @Override public long getSize(){
        return -1;
      }
      @Override public long getTimeStamp(){
        return -1;
      }
      @Override public boolean isContainer(){
        return true;
      }
      @Override public DiffElement[] getChildren() throws IOException {
        return EMPTY_ARRAY;
      }
      @Nullable @Override public byte[] getContent() throws IOException {
        return null;
      }
      @Override public Object getValue(){
        return null;
      }
    }
;
  }
  if (content instanceof DirectoryContent) {
    return new VirtualFileDiffElement(((DirectoryContent)content).getFile());
  }
  if (content instanceof FileContent && content.getContentType() instanceof ArchiveFileType) {
    return new ArchiveFileDiffElement(((FileContent)content).getFile());
  }
  throw new IllegalArgumentException(content.getClass() + " " + content.getContentType());
}
