{
  Map<JavaResolveResult,PsiSubstitutor> map=ourResults.get().get(contextCall);
  if (map != null) {
    final Set<JavaResolveResult> results=map.keySet();
    return results.toArray(new JavaResolveResult[results.size()]);
  }
  final MethodCandidatesProcessor processor=new MethodCandidatesProcessor(contextCall){
    @Override protected PsiType[] getExpressionTypes(    PsiExpressionList argumentList){
      if (argumentList != null) {
        final PsiExpression[] expressions=argumentList.getExpressions();
        final PsiType[] types=new PsiType[expressions.length];
        for (int i=0; i < expressions.length; i++) {
          if (i != exprIdx) {
            types[i]=expressions[i].getType();
          }
 else {
            types[i]=PsiType.NULL;
          }
        }
        return types;
      }
 else {
        return null;
      }
    }
  }
;
  PsiScopesUtil.setupAndRunProcessor(processor,contextCall,false);
  final JavaResolveResult[] results=processor.getResult();
  map=new WeakHashMap<JavaResolveResult,PsiSubstitutor>();
  ourResults.get().put(contextCall,map);
  for (  JavaResolveResult result : results) {
    map.put(result,PsiSubstitutor.UNKNOWN);
  }
  return results;
}
