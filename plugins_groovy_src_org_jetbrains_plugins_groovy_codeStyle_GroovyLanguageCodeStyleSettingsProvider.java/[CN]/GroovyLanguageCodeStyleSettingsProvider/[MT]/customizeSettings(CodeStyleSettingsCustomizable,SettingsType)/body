{
  if (settingsType == SettingsType.WRAPPING_AND_BRACES_SETTINGS) {
    consumer.showStandardOptions("KEEP_LINE_BREAKS","KEEP_FIRST_COLUMN_COMMENT","KEEP_CONTROL_STATEMENT_IN_ONE_LINE","KEEP_MULTIPLE_EXPRESSIONS_IN_ONE_LINE","KEEP_SIMPLE_BLOCKS_IN_ONE_LINE","KEEP_SIMPLE_METHODS_IN_ONE_LINE","KEEP_SIMPLE_CLASSES_IN_ONE_LINE","WRAP_LONG_LINES","CLASS_BRACE_STYLE","METHOD_BRACE_STYLE","BRACE_STYLE","EXTENDS_LIST_WRAP","ALIGN_MULTILINE_EXTENDS_LIST","EXTENDS_KEYWORD_WRAP","THROWS_LIST_WRAP","ALIGN_MULTILINE_THROWS_LIST","ALIGN_THROWS_KEYWORD","THROWS_KEYWORD_WRAP","METHOD_PARAMETERS_WRAP","ALIGN_MULTILINE_PARAMETERS","METHOD_PARAMETERS_LPAREN_ON_NEXT_LINE","METHOD_PARAMETERS_RPAREN_ON_NEXT_LINE","CALL_PARAMETERS_WRAP","ALIGN_MULTILINE_PARAMETERS_IN_CALLS","PREFER_PARAMETERS_WRAP","CALL_PARAMETERS_LPAREN_ON_NEXT_LINE","CALL_PARAMETERS_RPAREN_ON_NEXT_LINE","ALIGN_MULTILINE_METHOD_BRACKETS","METHOD_CALL_CHAIN_WRAP","ALIGN_MULTILINE_CHAINED_METHODS","ALIGN_GROUP_FIELD_DECLARATIONS","IF_BRACE_FORCE","ELSE_ON_NEW_LINE","SPECIAL_ELSE_IF_TREATMENT","FOR_STATEMENT_WRAP","ALIGN_MULTILINE_FOR","FOR_STATEMENT_LPAREN_ON_NEXT_LINE","FOR_STATEMENT_RPAREN_ON_NEXT_LINE","FOR_BRACE_FORCE","WHILE_BRACE_FORCE","INDENT_CASE_FROM_SWITCH","CATCH_ON_NEW_LINE","FINALLY_ON_NEW_LINE","BINARY_OPERATION_WRAP","ALIGN_MULTILINE_BINARY_OPERATION","PARENTHESES_EXPRESSION_LPAREN_WRAP","PARENTHESES_EXPRESSION_RPAREN_WRAP","ASSIGNMENT_WRAP","ALIGN_MULTILINE_ASSIGNMENT","TERNARY_OPERATION_WRAP","ALIGN_MULTILINE_TERNARY_OPERATION","MODIFIER_LIST_WRAP","ASSERT_STATEMENT_WRAP","CLASS_ANNOTATION_WRAP","METHOD_ANNOTATION_WRAP","FIELD_ANNOTATION_WRAP","PARAMETER_ANNOTATION_WRAP","VARIABLE_ANNOTATION_WRAP","ENUM_CONSTANTS_WRAP");
    consumer.showCustomOption(GroovyCodeStyleSettings.class,"USE_FLYING_GEESE_BRACES","Use flying geese braces",CodeStyleSettingsCustomizable.WRAPPING_BRACES);
    consumer.showCustomOption(GroovyCodeStyleSettings.class,"ALIGN_MULTILINE_LIST_OR_MAP","Align when multiple","List and map literals");
    consumer.showCustomOption(GroovyCodeStyleSettings.class,"ALIGN_NAMED_ARGS_IN_MAP","Align multiline named arguments","List and map literals");
    consumer.showCustomOption(GroovyCodeStyleSettings.class,"IMPORT_ANNOTATION_WRAP","Import annotations",null,CodeStyleSettingsCustomizable.OptionAnchor.AFTER,"VARIABLE_ANNOTATION_WRAP",CodeStyleSettingsCustomizable.WRAP_OPTIONS,CodeStyleSettingsCustomizable.WRAP_VALUES);
    return;
  }
  if (settingsType == SettingsType.SPACING_SETTINGS) {
    consumer.showStandardOptions("INSERT_FIRST_SPACE_IN_LINE","SPACE_AROUND_ASSIGNMENT_OPERATORS","SPACE_AROUND_LOGICAL_OPERATORS","SPACE_AROUND_EQUALITY_OPERATORS","SPACE_AROUND_RELATIONAL_OPERATORS","SPACE_AROUND_BITWISE_OPERATORS","SPACE_AROUND_ADDITIVE_OPERATORS","SPACE_AROUND_MULTIPLICATIVE_OPERATORS","SPACE_AROUND_SHIFT_OPERATORS","SPACE_AROUND_UNARY_OPERATOR","SPACE_AFTER_COMMA","SPACE_AFTER_COMMA_IN_TYPE_ARGUMENTS","SPACE_BEFORE_COMMA","SPACE_AFTER_SEMICOLON","SPACE_BEFORE_SEMICOLON","SPACE_WITHIN_PARENTHESES","SPACE_WITHIN_EMPTY_METHOD_CALL_PARENTHESES","SPACE_WITHIN_METHOD_CALL_PARENTHESES","SPACE_WITHIN_METHOD_PARENTHESES","SPACE_WITHIN_IF_PARENTHESES","SPACE_WITHIN_WHILE_PARENTHESES","SPACE_WITHIN_FOR_PARENTHESES","SPACE_WITHIN_CATCH_PARENTHESES","SPACE_WITHIN_SWITCH_PARENTHESES","SPACE_WITHIN_SYNCHRONIZED_PARENTHESES","SPACE_WITHIN_CAST_PARENTHESES","SPACE_WITHIN_BRACKETS","SPACE_WITHIN_BRACES","SPACE_AFTER_TYPE_CAST","SPACE_BEFORE_METHOD_CALL_PARENTHESES","SPACE_BEFORE_METHOD_PARENTHESES","SPACE_BEFORE_IF_PARENTHESES","SPACE_BEFORE_WHILE_PARENTHESES","SPACE_BEFORE_FOR_PARENTHESES","SPACE_BEFORE_CATCH_PARENTHESES","SPACE_BEFORE_SWITCH_PARENTHESES","SPACE_BEFORE_SYNCHRONIZED_PARENTHESES","SPACE_BEFORE_CLASS_LBRACE","SPACE_BEFORE_METHOD_LBRACE","SPACE_BEFORE_IF_LBRACE","SPACE_BEFORE_ELSE_LBRACE","SPACE_BEFORE_WHILE_LBRACE","SPACE_BEFORE_FOR_LBRACE","SPACE_BEFORE_SWITCH_LBRACE","SPACE_BEFORE_TRY_LBRACE","SPACE_BEFORE_CATCH_LBRACE","SPACE_BEFORE_FINALLY_LBRACE","SPACE_BEFORE_SYNCHRONIZED_LBRACE","SPACE_BEFORE_ELSE_KEYWORD","SPACE_BEFORE_CATCH_KEYWORD","SPACE_BEFORE_FINALLY_KEYWORD","SPACE_BEFORE_QUEST","SPACE_AFTER_QUEST","SPACE_BEFORE_COLON","SPACE_AFTER_COLON","SPACE_BEFORE_TYPE_PARAMETER_LIST","SPACE_BEFORE_ANOTATION_PARAMETER_LIST","SPACE_WITHIN_ANNOTATION_PARENTHESES");
    consumer.showCustomOption(GroovyCodeStyleSettings.class,"SPACE_IN_NAMED_ARGUMENT","In named argument after ':'",CodeStyleSettingsCustomizable.SPACES_OTHER);
    consumer.showCustomOption(GroovyCodeStyleSettings.class,"SPACE_WITHIN_LIST_OR_MAP","List and maps literals",CodeStyleSettingsCustomizable.SPACES_WITHIN);
    consumer.showCustomOption(GroovyCodeStyleSettings.class,"SPACE_BEFORE_CLOSURE_LBRACE","Closure left brace in method calls",CodeStyleSettingsCustomizable.SPACES_BEFORE_LEFT_BRACE);
    consumer.showCustomOption(GroovyCodeStyleSettings.class,"SPACE_WITHIN_GSTRING_INJECTION_BRACES","GString injection braces",CodeStyleSettingsCustomizable.SPACES_WITHIN);
    consumer.showCustomOption(GroovyCodeStyleSettings.class,"SPACE_WITHIN_TUPLE_EXPRESSION","Tuple assignment expression",CodeStyleSettingsCustomizable.SPACES_WITHIN);
    return;
  }
  if (settingsType == SettingsType.BLANK_LINES_SETTINGS) {
    consumer.showStandardOptions("KEEP_BLANK_LINES_IN_DECLARATIONS","KEEP_BLANK_LINES_IN_CODE","KEEP_BLANK_LINES_BEFORE_RBRACE","BLANK_LINES_BEFORE_PACKAGE","BLANK_LINES_AFTER_PACKAGE","BLANK_LINES_BEFORE_IMPORTS","BLANK_LINES_AFTER_IMPORTS","BLANK_LINES_AROUND_CLASS","BLANK_LINES_AFTER_CLASS_HEADER","BLANK_LINES_AROUND_FIELD_IN_INTERFACE","BLANK_LINES_AROUND_FIELD","BLANK_LINES_AROUND_METHOD_IN_INTERFACE","BLANK_LINES_AROUND_METHOD","BLANK_LINES_BEFORE_METHOD_BODY");
    return;
  }
  consumer.showAllStandardOptions();
}
