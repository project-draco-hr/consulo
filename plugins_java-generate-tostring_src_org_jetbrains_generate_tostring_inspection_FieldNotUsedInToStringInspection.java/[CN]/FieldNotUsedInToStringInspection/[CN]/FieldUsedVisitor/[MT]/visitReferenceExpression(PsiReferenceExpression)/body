{
  if (myUnusedFields.isEmpty() && myUnusedMethods.isEmpty()) {
    return;
  }
  super.visitReferenceExpression(expression);
  final PsiElement target=expression.resolve();
  if (target instanceof PsiField) {
    final PsiField field=(PsiField)target;
    myUnusedFields.remove(field);
  }
 else   if (target instanceof PsiMethod) {
    final PsiMethod method=(PsiMethod)target;
    if (usesReflection(method)) {
      myUnusedFields.clear();
      myUnusedMethods.clear();
    }
 else {
      myUnusedMethods.remove(method);
      final PsiField field=PropertyUtil.findPropertyFieldByMember(method);
      myUnusedFields.remove(field);
    }
  }
}
