{
  int id=e.getID();
  if ((id >= MouseEvent.MOUSE_FIRST) && (id <= MouseEvent.MOUSE_LAST)) {
    MouseEvent me=(MouseEvent)e;
    int x=me.getX();
    int y=me.getY();
    int clickcount=me.getClickCount();
    boolean shiftdown=me.isShiftDown();
    boolean controldown=me.isControlDown();
    boolean popuptrigger=me.isPopupTrigger();
    if (id == MouseEvent.MOUSE_ENTERED) {
      if (mousepressed == null) {
        findComponent(content,x,y);
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_ENTERED,mouseinside,insidepart);
      }
    }
 else     if (id == MouseEvent.MOUSE_MOVED) {
      Object previnside=mouseinside;
      Object prevpart=insidepart;
      findComponent(content,x,y);
      if ((previnside == mouseinside) && (prevpart == insidepart)) {
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_MOVED,mouseinside,insidepart);
      }
 else {
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_EXITED,previnside,prevpart);
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_ENTERED,mouseinside,insidepart);
      }
    }
 else     if (id == MouseEvent.MOUSE_EXITED) {
      if (mousepressed == null) {
        Object mouseexit=mouseinside;
        Object exitpart=insidepart;
        mouseinside=insidepart=null;
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_EXITED,mouseexit,exitpart);
      }
    }
 else     if (id == MouseEvent.MOUSE_PRESSED) {
      if (popupowner != null) {
        String classname=getClass(mouseinside);
        if ((popupowner != mouseinside) && (classname != "popupmenu") && (classname != "combolist")) {
          closeup();
        }
      }
      mousepressed=mouseinside;
      pressedpart=insidepart;
      handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_PRESSED,mousepressed,pressedpart);
    }
 else     if (id == MouseEvent.MOUSE_DRAGGED) {
      Object previnside=mouseinside;
      Object prevpart=insidepart;
      findComponent(content,x,y);
      boolean same=(previnside == mouseinside) && (prevpart == insidepart);
      boolean isin=(mousepressed == mouseinside) && (pressedpart == insidepart);
      boolean wasin=(mousepressed == previnside) && (pressedpart == prevpart);
      if (wasin && !isin) {
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_EXITED,mousepressed,pressedpart);
      }
 else       if (!same && (popupowner != null) && !wasin) {
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,DRAG_EXITED,previnside,prevpart);
      }
      if (isin && !wasin) {
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_ENTERED,mousepressed,pressedpart);
      }
 else       if (!same && (popupowner != null) && !isin) {
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,DRAG_ENTERED,mouseinside,insidepart);
      }
      if (isin == wasin) {
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_DRAGGED,mousepressed,pressedpart);
      }
    }
 else     if (id == MouseEvent.MOUSE_RELEASED) {
      Object mouserelease=mousepressed;
      Object releasepart=pressedpart;
      mousepressed=pressedpart=null;
      handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_RELEASED,mouserelease,releasepart);
      if ((mouseinside != null) && ((mouserelease != mouseinside) || (releasepart != insidepart))) {
        handleMouseEvent(x,y,clickcount,shiftdown,controldown,popuptrigger,MouseEvent.MOUSE_ENTERED,mouseinside,insidepart);
      }
    }
  }
 else   if (id == MOUSE_WHEEL) {
    Rectangle port=getRectangle(mouseinside,":port");
    if (port != null) {
      Rectangle bounds=getRectangle(mouseinside,"bounds");
      try {
        if (wheelrotation == null) {
          wheelrotation=e.getClass().getMethod("getWheelRotation",null);
        }
        int rotation=((Integer)wheelrotation.invoke(e,null)).intValue();
        if (port.x + port.width < bounds.width) {
          processScroll(mouseinside,(rotation > 0) ? "down" : "up");
        }
 else         if (port.y + port.height < bounds.height) {
          processScroll(mouseinside,(rotation > 0) ? "right" : "left");
        }
      }
 catch (      Exception exc) {
      }
    }
  }
 else   if ((id == KeyEvent.KEY_PRESSED) || (id == KeyEvent.KEY_TYPED)) {
    if (focusinside && ((popupowner != null) || (focusowner != null))) {
      hideTip();
      KeyEvent ke=(KeyEvent)e;
      int keychar=ke.getKeyChar();
      boolean control=(keychar <= 0x1f) || ((keychar >= 0x7f) && (keychar <= 0x9f)) || (keychar >= 0xffff)|| ke.isControlDown();
      if (control == (id == KeyEvent.KEY_PRESSED)) {
        int keycode=control ? ke.getKeyCode() : 0;
        if (!processKeyPress((popupowner != null) ? popupowner : focusowner,ke.isShiftDown(),ke.isControlDown(),ke.getModifiers(),control ? 0 : keychar,keycode)) {
          if ((keycode == KeyEvent.VK_TAB) || ((keycode == KeyEvent.VK_F6) && (ke.isAltDown() || ke.isControlDown()))) {
            boolean outgo=(keycode == KeyEvent.VK_F6);
            if (!ke.isShiftDown() ? setNextFocusable(focusowner,outgo) : setPreviousFocusable(focusowner,outgo)) {
              ke.consume();
            }
 else             if (MOUSE_WHEEL != 0) {
              if (!ke.isShiftDown()) {
                transferFocus();
              }
 else {
                try {
                  getClass().getMethod("transferFocusBackward",null).invoke(this,null);
                }
 catch (                Exception exc) {
                }
              }
            }
            repaint(focusowner);
            closeup();
          }
 else           if (keycode == KeyEvent.VK_F8) {
            for (Object splitpane=focusowner; splitpane != null; splitpane=getParent(splitpane)) {
              if (getClass(splitpane) == "splitpane") {
                setFocus(splitpane);
                repaint(splitpane);
                break;
              }
            }
          }
        }
 else         ke.consume();
      }
    }
  }
 else   if (id == FocusEvent.FOCUS_LOST) {
    focusinside=false;
    if (focusowner != null) {
      repaint(focusowner);
    }
    closeup();
  }
 else   if (id == FocusEvent.FOCUS_GAINED) {
    focusinside=true;
    if (focusowner == null) {
      setFocus(content);
    }
 else {
      repaint(focusowner);
    }
  }
 else   if ((id == ComponentEvent.COMPONENT_RESIZED) || (id == ComponentEvent.COMPONENT_SHOWN)) {
    Dimension d=getSize();
    setRectangle(content,"bounds",0,0,d.width,d.height);
    validate(content);
    closeup();
    if (!focusinside) {
      requestFocus();
    }
  }
}
