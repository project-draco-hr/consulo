{
  if (id == MouseEvent.MOUSE_ENTERED) {
    setTimer(750L);
  }
 else   if (id == MouseEvent.MOUSE_EXITED) {
    hideTip();
  }
  if (!getBoolean(component,"enabled",true)) {
    return;
  }
  String classname=getClass(component);
  if (("button" == classname) || ("checkbox" == classname)) {
    if ((id == MouseEvent.MOUSE_ENTERED) || (id == MouseEvent.MOUSE_EXITED) || (id == MouseEvent.MOUSE_PRESSED)|| (id == MouseEvent.MOUSE_RELEASED)) {
      if (id == MouseEvent.MOUSE_PRESSED) {
        setFocus(component);
      }
 else       if ((id == MouseEvent.MOUSE_RELEASED) && (mouseinside == component)) {
        if ("checkbox" == classname) {
          changeCheck(component,true);
        }
 else         invoke(component,"action");
      }
      repaint(component);
    }
  }
 else   if ("combobox" == classname) {
    boolean editable=getBoolean(component,"editable",true);
    if (editable && (part == null)) {
      Image icon=null;
      int left=((id == MouseEvent.MOUSE_PRESSED) && ((icon=getIcon(component,"icon",null)) != null)) ? icon.getWidth(this) : 0;
      processField(x,y,clickcount,id,component,part,false,false,left);
    }
 else     if (part != "icon") {
      if (((id == MouseEvent.MOUSE_ENTERED) || (id == MouseEvent.MOUSE_EXITED)) && (mousepressed == null)) {
        if (editable) {
          repaint(component,"combobox",part);
        }
 else {
          repaint(component);
        }
      }
 else       if (id == MouseEvent.MOUSE_PRESSED) {
        Object combolist=get(component,"combolist");
        if (combolist == null) {
          setFocus(component);
          repaint(component);
          popup(component,classname);
        }
 else {
          closeup(component,combolist,null);
        }
      }
 else       if (id == MouseEvent.MOUSE_RELEASED) {
        if (mouseinside != component) {
          Object combolist=get(component,"combolist");
          closeup(component,combolist,(mouseinside == combolist) ? insidepart : null);
        }
 else {
          repaint(component);
        }
      }
    }
  }
 else   if ("combolist" == classname) {
    if (!processScroll(x,y,id,component,part)) {
      if ((id == MouseEvent.MOUSE_ENTERED) || (id == DRAG_ENTERED)) {
        if (part != null) {
          set(component,"inside",part);
          repaint(component,classname,part);
        }
      }
 else       if ((id == MouseEvent.MOUSE_EXITED) || (id == DRAG_EXITED)) {
        if (part != null) {
          set(component,"inside",null);
          repaint(component,classname,part);
        }
      }
 else       if (id == MouseEvent.MOUSE_RELEASED) {
        closeup(get(component,"combobox"),component,part);
      }
    }
  }
 else   if (("textfield" == classname) || ("passwordfield" == classname)) {
    processField(x,y,clickcount,id,component,part,false,("passwordfield" == classname),0);
  }
 else   if ("textarea" == classname) {
    if (!processScroll(x,y,id,component,part)) {
      processField(x,y,clickcount,id,component,part,true,false,0);
    }
  }
 else   if ("desktop" == classname) {
    if (id == MouseEvent.MOUSE_ENTERED) {
      setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    }
 else     if (id == MouseEvent.MOUSE_EXITED) {
      setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }
  }
 else   if ("spinbox" == classname) {
    if (part == null) {
      processField(x,y,clickcount,id,component,part,false,false,0);
    }
 else {
      if ((id == MouseEvent.MOUSE_ENTERED) || (id == MouseEvent.MOUSE_EXITED) || (id == MouseEvent.MOUSE_PRESSED)|| (id == MouseEvent.MOUSE_RELEASED)) {
        if (id == MouseEvent.MOUSE_PRESSED) {
          setFocus(component);
          if (processSpin(component,part)) {
            setTimer(375L);
          }
        }
 else {
          if (id == MouseEvent.MOUSE_RELEASED) {
            setTimer(0L);
          }
        }
        repaint(component,classname,part);
      }
    }
  }
 else   if ("tabbedpane" == classname) {
    if ((id == MouseEvent.MOUSE_ENTERED) || (id == MouseEvent.MOUSE_EXITED)) {
      if ((part != null) && getBoolean(part,"enabled",true) && (getInteger(component,"selected",0) != getIndex(component,"tab",part))) {
        repaint(component,"tabbedpane",part);
      }
    }
 else     if ((part != null) && (id == MouseEvent.MOUSE_PRESSED) && getBoolean(part,"enabled",true)) {
      int selected=getInteger(component,"selected",0);
      int current=getIndex(component,"tab",part);
      if (selected == current) {
        setFocus(component);
        repaint(component,"tabbedpane",part);
      }
 else {
        setInteger(component,"selected",current,0);
        setNextFocusable(component,false);
        repaint(component);
        invoke(component,"action");
      }
    }
  }
 else   if ("slider" == classname) {
    if ((id == MouseEvent.MOUSE_PRESSED) || (id == MouseEvent.MOUSE_DRAGGED)) {
      if (id == MouseEvent.MOUSE_PRESSED) {
        setReference(component,block / 2,block / 2);
        setFocus(component);
      }
      int minimum=getInteger(component,"minimum",0);
      int maximum=getInteger(component,"maximum",100);
      int value=getInteger(component,"value",50);
      Rectangle bounds=getRectangle(component,"bounds");
      boolean horizontal=("vertical" != get(component,"orientation"));
      int newvalue=minimum + (horizontal ? (mousex - referencex) : (mousey - referencey)) * (maximum - minimum) / ((horizontal ? bounds.width : bounds.height) - block);
      newvalue=Math.max(minimum,Math.min(newvalue,maximum));
      if (value != newvalue) {
        setInteger(component,"value",newvalue,50);
        invoke(component,"action");
      }
      if ((value != newvalue) || (id == MouseEvent.MOUSE_PRESSED)) {
        repaint(component);
      }
    }
  }
 else   if ("splitpane" == classname) {
    if (id == MouseEvent.MOUSE_PRESSED) {
      setReference(component,2,2);
    }
 else     if (id == MouseEvent.MOUSE_DRAGGED) {
      int divider=getInteger(component,"divider",-1);
      boolean horizontal=("vertical" != get(component,"orientation"));
      int moveto=horizontal ? (mousex - referencex) : (mousey - referencey);
      Rectangle bounds=getRectangle(component,"bounds");
      moveto=Math.max(0,Math.min(moveto,Math.abs(horizontal ? bounds.width : bounds.height) - 5));
      if (divider != moveto) {
        setInteger(component,"divider",moveto,-1);
        validate(component);
      }
    }
 else     if ((id == MouseEvent.MOUSE_ENTERED) && (mousepressed == null)) {
      boolean horizontal=("vertical" != get(component,"orientation"));
      setCursor(Cursor.getPredefinedCursor(horizontal ? Cursor.E_RESIZE_CURSOR : Cursor.S_RESIZE_CURSOR));
    }
 else     if (((id == MouseEvent.MOUSE_EXITED) && (mousepressed == null)) || ((id == MouseEvent.MOUSE_RELEASED) && (mouseinside != component))) {
      setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }
  }
 else   if (("list" == classname) || ("table" == classname) || ("tree" == classname)) {
    if (!processScroll(x,y,id,component,part)) {
      if (((id == MouseEvent.MOUSE_PRESSED) || ((id == MouseEvent.MOUSE_DRAGGED) && !shiftdown && !controldown)) && !popuptrigger) {
        Rectangle view=getRectangle(component,":view");
        Rectangle viewport=getRectangle(component,":port");
        int my=mousey + view.y - referencey;
        String itemname=("list" == classname) ? "item" : (("table" == classname) ? "row" : "node");
        String subitem=("tree" == classname) ? "node" : null;
        for (Object item=get(component,itemname); item != null; ) {
          Rectangle r=getRectangle(item,"bounds");
          if (my < r.y + r.height) {
            if (id == MouseEvent.MOUSE_DRAGGED) {
              scrollToVisible(component,r.x,r.y,0,r.height - 1);
            }
 else             if ("tree" == classname) {
              int mx=mousex + view.x - referencex;
              if (mx < r.x) {
                if ((mx >= r.x - block) && (get(item,"node") != null)) {
                  boolean expanded=getBoolean(item,"expanded",true);
                  setBoolean(item,"expanded",!expanded,true);
                  selectItem(component,item,"node","node");
                  setLead(component,get(component,"lead"),item);
                  setFocus(component);
                  validate(component);
                  invoke(component,expanded ? "collapse" : "expand");
                }
                break;
              }
            }
            if ((id != MouseEvent.MOUSE_DRAGGED) || !getBoolean(item,"selected",false)) {
              select(component,item,itemname,subitem,shiftdown,controldown);
              if (id != MouseEvent.MOUSE_DRAGGED) {
                if (setFocus(component)) {
                  repaint(component,classname,item);
                }
              }
            }
            break;
          }
          item=getNextItem(component,item,subitem);
        }
      }
    }
  }
 else   if ("menubar" == classname) {
    Object selected=get(component,"selected");
    if (((id == MouseEvent.MOUSE_ENTERED) || (id == MouseEvent.MOUSE_EXITED)) && (part != null) && (selected == null)) {
      repaint(component,classname,part);
    }
 else     if ((part != null) && ((selected == null) ? (id == MouseEvent.MOUSE_PRESSED) : ((id == MouseEvent.MOUSE_ENTERED) || (id == DRAG_ENTERED)))) {
      set(component,"selected",part);
      popup(component,classname);
      repaint(component,classname,part);
    }
 else     if ((id == MouseEvent.MOUSE_PRESSED) && (selected != null)) {
      closeup(component);
    }
 else     if (id == MouseEvent.MOUSE_RELEASED) {
      if ((part != insidepart) && ((insidepart == null) || (getClass(insidepart) != "menu"))) {
        if ((insidepart != null) && getBoolean(insidepart,"enabled",true)) {
          if (getClass(insidepart) == "checkboxmenuitem") {
            changeCheck(insidepart,false);
          }
 else           invoke(insidepart,"action");
        }
        closeup(component);
      }
    }
  }
 else   if ("popupmenu" == classname) {
    if (part != null) {
      if ((id == MouseEvent.MOUSE_ENTERED) || (id == DRAG_ENTERED)) {
        set(component,"selected",part);
        popup(component,classname);
        repaint(component,classname,part);
      }
 else       if (id == MouseEvent.MOUSE_RELEASED) {
        if ((insidepart == null) || (getClass(insidepart) != "menu")) {
          Object menubar=part;
          do {
            menubar=getParent(menubar);
          }
 while (getClass(menubar) != "menubar");
          if ((insidepart != null) && getBoolean(insidepart,"enabled",true)) {
            if (getClass(insidepart) == "checkboxmenuitem") {
              changeCheck(insidepart,false);
            }
 else             invoke(insidepart,"action");
          }
          closeup(menubar);
        }
      }
 else       if ((id == MouseEvent.MOUSE_EXITED) || (id == DRAG_EXITED)) {
        if (getClass(part) != "menu") {
          set(component,"selected",null);
        }
        repaint(component,classname,part);
      }
    }
  }
 else   if ("dialog" == classname) {
    if (part == "header") {
      if (id == MouseEvent.MOUSE_PRESSED) {
        referencex=mousex;
        referencey=mousey;
        if (!getBoolean(component,"modal",false) && (get(content,"component") != component)) {
          removeItemImpl(content,"component",component);
          insertItem(content,"component",component,0);
          set(component,":parent",content);
          repaint(component);
        }
      }
 else       if (id == MouseEvent.MOUSE_DRAGGED) {
        Rectangle bounds=getRectangle(component,"bounds");
        int dx=mousex - referencex;
        int dy=mousey - referencey;
        repaint(component,bounds.x + Math.min(0,dx),bounds.y + Math.min(0,dy),bounds.width + Math.abs(dx),bounds.height + Math.abs(dy));
        bounds.x+=dx;
        bounds.y+=dy;
        referencex=mousex;
        referencey=mousey;
      }
    }
  }
}
