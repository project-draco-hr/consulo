{
  final PsiBinaryExpression exp=(PsiBinaryExpression)element;
  final PsiExpression lhs=exp.getLOperand();
  final PsiExpression rhs=exp.getROperand();
  final PsiExpression strippedLhs=ParenthesesUtils.stripParentheses(lhs);
  final PsiExpression strippedRhs=ParenthesesUtils.stripParentheses(rhs);
  final String lhsText=strippedLhs.getText();
  final String rhsText=strippedRhs.getText();
  final String expString;
  if (ParenthesesUtils.getPrecendence(strippedLhs) > ParenthesesUtils.METHOD_CALL_PRECEDENCE) {
    expString=lhsText + "==null?" + rhsText+ " == null:("+ lhsText+ ").equals("+ rhsText+ ')';
  }
 else {
    expString=lhsText + "==null?" + rhsText+ " == null:"+ lhsText+ ".equals("+ rhsText+ ')';
  }
  replaceExpression(expString,exp);
}
