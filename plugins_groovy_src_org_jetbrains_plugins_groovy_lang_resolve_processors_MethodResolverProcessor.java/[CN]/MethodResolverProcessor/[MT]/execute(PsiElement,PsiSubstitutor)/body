{
  if (element instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)element;
    if (method.isConstructor() != myIsConstructor)     return true;
    if (!isAccessible((PsiNamedElement)element))     return true;
    if (myForCompletion || PsiUtil.isApplicable(myArgumentTypes,method)) {
      myCandidates.add(new GroovyResolveResultImpl(method,true,myImportStatementContext,substitutor));
    }
 else {
      myInapplicableCandidates.add(new GroovyResolveResultImpl(method,true,myImportStatementContext,substitutor));
    }
    return true;
  }
 else   if (myForCompletion || myCandidates.isEmpty()) {
    return super.execute(element,substitutor);
  }
  return true;
}
