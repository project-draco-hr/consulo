{
  if (element instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)element;
    if (method.isConstructor() != myIsConstructor)     return true;
    if (!isAccessible((PsiNamedElement)element))     return true;
    substitutor=inferMethodTypeParameters(method,substitutor);
    if (myForCompletion || PsiUtil.isApplicable(myArgumentTypes,method,substitutor,myCurrentFileResolveContext instanceof GrMethodCallExpression)) {
      myCandidates.add(new GroovyResolveResultImpl(method,true,myCurrentFileResolveContext,substitutor));
    }
 else {
      myInapplicableCandidates.add(new GroovyResolveResultImpl(method,true,myCurrentFileResolveContext,substitutor));
    }
    return true;
  }
 else   if (element instanceof PsiVariable) {
    if (myForCompletion || element instanceof GrField && ((GrField)element).isProperty() || ((PsiVariable)element).getType().equalsToText("groovy.lang.Closure")) {
      return super.execute(element,substitutor);
    }
  }
  return true;
}
