{
  if (element instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)element;
    if (method.isConstructor() != myIsConstructor)     return true;
    if (!isAccessible((PsiNamedElement)element))     return true;
    if (myForCompletion || PsiUtil.isApplicable(myArgumentTypes,method)) {
      myCandidates.add(new GroovyResolveResultImpl(method,true,myImportStatementContext,substitutor));
    }
 else {
      myInapplicableCandidates.add(new GroovyResolveResultImpl(method,true,myImportStatementContext,substitutor));
    }
    return true;
  }
 else   if (element instanceof PsiVariable) {
    final PsiType type=((PsiVariable)element).getType();
    if (type.equalsToText("groovy.lang.Closure")) {
      return super.execute(element,substitutor);
    }
  }
  return true;
}
