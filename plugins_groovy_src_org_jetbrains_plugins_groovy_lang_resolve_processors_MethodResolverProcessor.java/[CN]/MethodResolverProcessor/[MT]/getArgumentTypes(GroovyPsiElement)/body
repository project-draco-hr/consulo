{
  PsiElementFactory factory=place.getManager().getElementFactory();
  PsiElement parent=place.getParent();
  if (parent instanceof GrMethodCall) {
    List<PsiType> result=new ArrayList<PsiType>();
    GrMethodCall methodCall=(GrMethodCall)parent;
    GrNamedArgument[] namedArgs=methodCall.getNamedArguments();
    if (namedArgs.length > 0) {
      result.add(factory.createTypeByFQClassName("java.util.HashMap",place.getResolveScope()));
    }
    GrExpression[] expressions=methodCall.getExpressionArguments();
    for (    GrExpression expression : expressions) {
      PsiType type=expression.getType();
      if (type == null) {
        result.add(PsiType.NULL);
      }
 else {
        result.add(type);
      }
    }
    return result.toArray(new PsiType[result.size()]);
  }
 else   if (parent instanceof GrApplicationExpression) {
    GrExpression[] args=((GrApplicationExpression)parent).getArguments();
    PsiType[] result=new PsiType[args.length];
    for (int i=0; i < result.length; i++) {
      PsiType argType=args[i].getType();
      if (argType == null) {
        result[i]=PsiType.NULL;
      }
 else {
        result[i]=argType;
      }
    }
    return result;
  }
  return PsiType.EMPTY_ARRAY;
}
