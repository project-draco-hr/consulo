{
  if (typeParameters.length == 0)   return partialSubstitutor;
  if (argumentsSupplied()) {
    final PsiParameter[] parameters=method.getParameterList().getParameters();
    final int max=Math.max(parameters.length,argTypes.length);
    PsiType[] parameterTypes=new PsiType[max];
    PsiType[] argumentTypes=new PsiType[max];
    for (int i=0; i < parameterTypes.length; i++) {
      if (i < parameters.length) {
        final PsiType type=parameters[i].getType();
        if (argTypes.length == parameters.length && type instanceof PsiEllipsisType && !(argTypes[argTypes.length - 1] instanceof PsiArrayType)) {
          parameterTypes[i]=((PsiEllipsisType)type).getComponentType();
        }
 else {
          parameterTypes[i]=type;
        }
      }
 else {
        if (parameters.length > 0) {
          final PsiType lastParameterType=parameters[parameters.length - 1].getType();
          if (argTypes.length > parameters.length && lastParameterType instanceof PsiEllipsisType) {
            parameterTypes[i]=((PsiEllipsisType)lastParameterType).getComponentType();
          }
 else {
            parameterTypes[i]=lastParameterType;
          }
        }
 else {
          parameterTypes[i]=PsiType.NULL;
        }
      }
      argumentTypes[i]=i < argTypes.length ? argTypes[i] : PsiType.NULL;
    }
    final PsiResolveHelper helper=JavaPsiFacade.getInstance(method.getProject()).getResolveHelper();
    PsiSubstitutor substitutor=helper.inferTypeArguments(typeParameters,parameterTypes,argumentTypes,LanguageLevel.HIGHEST);
    for (    PsiTypeParameter typeParameter : typeParameters) {
      if (!substitutor.getSubstitutionMap().containsKey(typeParameter)) {
        substitutor=inferFromContext(typeParameter,method.getReturnType(),substitutor,helper);
      }
    }
    return partialSubstitutor.putAll(substitutor);
  }
  return partialSubstitutor;
}
