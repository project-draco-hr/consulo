{
  final PsiElement parent=element.getParent();
  if (parent instanceof PsiVariable) {
    final PsiVariable variable=(PsiVariable)parent;
    final PsiType variableType=variable.getType();
    if (isObsoleteCollectionType(variableType)) {
      return true;
    }
  }
 else   if (parent instanceof PsiReturnStatement) {
    final PsiMethod method=PsiTreeUtil.getParentOfType(parent,PsiMethod.class);
    if (method != null) {
      final PsiType returnType=method.getReturnType();
      if (isObsoleteCollectionType(returnType)) {
        return true;
      }
    }
  }
 else   if (parent instanceof PsiAssignmentExpression) {
    final PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)parent;
    final PsiExpression lhs=assignmentExpression.getLExpression();
    final PsiType lhsType=lhs.getType();
    if (isObsoleteCollectionType(lhsType)) {
      return true;
    }
  }
  if (!(parent instanceof PsiExpressionList)) {
    return false;
  }
  final PsiExpressionList argumentList=(PsiExpressionList)parent;
  final PsiElement grandParent=parent.getParent();
  if (!(grandParent instanceof PsiCallExpression)) {
    return false;
  }
  final PsiCallExpression callExpression=(PsiCallExpression)grandParent;
  final int index=getIndexOfArgument(argumentList,element);
  final PsiMethod method=callExpression.resolveMethod();
  if (method == null) {
    return false;
  }
  final PsiParameterList parameterList=method.getParameterList();
  final PsiParameter[] parameters=parameterList.getParameters();
  if (index >= parameters.length) {
    final PsiParameter lastParameter=parameters[parameters.length - 1];
    if (!lastParameter.isVarArgs()) {
      return false;
    }
    final PsiType type=lastParameter.getType();
    if (!(type instanceof PsiEllipsisType)) {
      return false;
    }
    final PsiEllipsisType ellipsisType=(PsiEllipsisType)type;
    final PsiType componentType=ellipsisType.getComponentType();
    return isObsoleteCollectionType(componentType);
  }
  final PsiParameter parameter=parameters[index];
  final PsiType type=parameter.getType();
  return isObsoleteCollectionType(type);
}
