{
  StringBuilder sb=new StringBuilder();
  if (myShowSettingsBeforeRunCheckBox.isSelected()) {
    sb.append(ExecutionBundle.message("configuration.edit.before.run"));
  }
  List<BeforeRunTask> tasks=myModel.getItems();
  if (!tasks.isEmpty()) {
    LinkedHashMap<BeforeRunTaskProvider,Integer> counter=new LinkedHashMap<BeforeRunTaskProvider,Integer>();
    for (    BeforeRunTask task : tasks) {
      BeforeRunTaskProvider<BeforeRunTask> provider=BeforeRunTaskProvider.getProvider(myRunConfiguration.getProject(),task.getProviderId());
      if (provider != null) {
        Integer count=counter.get(provider);
        if (count == null) {
          count=task.getItemsCount();
        }
 else {
          count+=task.getItemsCount();
        }
        counter.put(provider,count);
      }
    }
    for (Iterator<Map.Entry<BeforeRunTaskProvider,Integer>> iterator=counter.entrySet().iterator(); iterator.hasNext(); ) {
      Map.Entry<BeforeRunTaskProvider,Integer> entry=iterator.next();
      BeforeRunTaskProvider provider=entry.getKey();
      String name=provider.getName();
      if (name.startsWith("Run ")) {
        name=name.substring(4);
      }
      if (sb.length() > 0) {
        sb.append(", ");
      }
      sb.append(name);
      if (entry.getValue() > 1) {
        sb.append(" (").append(entry.getValue().intValue()).append(")");
      }
    }
  }
  if (sb.length() > 0) {
    sb.insert(0,": ");
  }
  sb.insert(0,ExecutionBundle.message("before.launch.panel.title"));
  myListener.titleChanged(sb.toString());
}
