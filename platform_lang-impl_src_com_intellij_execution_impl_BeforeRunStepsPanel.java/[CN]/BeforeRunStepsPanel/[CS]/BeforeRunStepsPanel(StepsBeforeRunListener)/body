{
  myListener=listener;
  myModel=new CollectionListModel<BeforeRunTask>();
  myList=new JBList(myModel);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setCellRenderer(new MyListCellRenderer());
  ToolbarDecorator myDecorator=ToolbarDecorator.createDecorator(myList);
  myDecorator.setEditAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      int index=myList.getSelectedIndex();
      if (index == -1)       return;
      Pair<BeforeRunTask,BeforeRunTaskProvider<BeforeRunTask>> selection=getSelection();
      if (selection == null)       return;
      BeforeRunTask task=selection.getFirst();
      BeforeRunTaskProvider<BeforeRunTask> provider=selection.getSecond();
      if (provider.configureTask(myRunConfiguration,task)) {
        myModel.setElementAt(task,index);
      }
    }
  }
);
  myDecorator.setEditActionUpdater(new AnActionButtonUpdater(){
    @Override public boolean isEnabled(    AnActionEvent e){
      Pair<BeforeRunTask,BeforeRunTaskProvider<BeforeRunTask>> selection=getSelection();
      return selection != null && selection.getSecond().isConfigurable();
    }
  }
);
  myDecorator.setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      doAddAction(button);
    }
  }
);
  myShowSettingsBeforeRunCheckBox=new JCheckBox(ExecutionBundle.message("configuration.edit.before.run"));
  setLayout(new MigLayout("fill, ins 0, gap 10"));
  add(myShowSettingsBeforeRunCheckBox,"shrinky, wrap");
  add(myDecorator.createPanel(),"grow, push");
}
