{
  myListener=listener;
  myModel=new CollectionListModel<BeforeRunTask>();
  myList=new JBList(myModel);
  myList.getEmptyText().setText(ExecutionBundle.message("before.launch.panel.empty"));
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setCellRenderer(new MyListCellRenderer());
  myModel.addListDataListener(new ListDataListener(){
    @Override public void intervalAdded(    ListDataEvent e){
      adjustVisibleRowCount();
    }
    @Override public void intervalRemoved(    ListDataEvent e){
      adjustVisibleRowCount();
    }
    @Override public void contentsChanged(    ListDataEvent e){
    }
    private void adjustVisibleRowCount(){
      myList.setVisibleRowCount(Math.max(4,Math.min(8,myModel.getSize())));
    }
  }
);
  ToolbarDecorator myDecorator=ToolbarDecorator.createDecorator(myList);
  if (!SystemInfo.isMac) {
    myDecorator.setAsUsualTopToolbar();
  }
  myDecorator.setEditAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      int index=myList.getSelectedIndex();
      if (index == -1)       return;
      Pair<BeforeRunTask,BeforeRunTaskProvider<BeforeRunTask>> selection=getSelection();
      if (selection == null)       return;
      BeforeRunTask task=selection.getFirst();
      BeforeRunTaskProvider<BeforeRunTask> provider=selection.getSecond();
      if (provider.configureTask(myRunConfiguration,task)) {
        myModel.setElementAt(task,index);
      }
    }
  }
);
  myDecorator.setEditActionUpdater(new AnActionButtonUpdater(){
    @Override public boolean isEnabled(    AnActionEvent e){
      Pair<BeforeRunTask,BeforeRunTaskProvider<BeforeRunTask>> selection=getSelection();
      return selection != null && selection.getSecond().isConfigurable();
    }
  }
);
  myDecorator.setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton button){
      doAddAction(button);
    }
  }
);
  myDecorator.setAddActionUpdater(new AnActionButtonUpdater(){
    @Override public boolean isEnabled(    AnActionEvent e){
      return checkBeforeRunTasksAbility(true);
    }
  }
);
  myShowSettingsBeforeRunCheckBox=new JCheckBox(ExecutionBundle.message("configuration.edit.before.run"));
  mySingletonCheckBox=new JCheckBox(ExecutionBundle.message("configuration.singleton"));
  myPanel=myDecorator.createPanel();
  setLayout(new MigLayout("fill, ins 0, gap 10, hidemode 3"));
  add(myShowSettingsBeforeRunCheckBox,"shrink, split 2");
  add(mySingletonCheckBox,"shrink");
  add(Box.createHorizontalGlue(),"push, grow, wrap");
  add(myPanel,"grow, push, spanx 2");
}
