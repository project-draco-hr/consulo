{
  if (!initialized)   return false;
  boolean hasProperty=false;
  try {
    long data=unsafe.allocateMemory(64);
    awtLock.invoke(null);
    try {
      unsafe.setMemory(data,64,(byte)0);
      @SuppressWarnings("deprecation") ComponentPeer peer=frame.getPeer();
      long window=(Long)getWindow.invoke(peer);
      int result=(Integer)XGetWindowProperty.invoke(null,display,window,propertyName,0,1024,False,XA_ATOM,data,data + 8,data + 16,data + 24,data + 32);
      if (result == 0) {
        int format=unsafe.getInt(data + 8);
        long atoms=SystemInfo.is64Bit ? unsafe.getLong(data + 32) : unsafe.getInt(data + 32);
        if (format == LONG_FORMAT) {
          long items=SystemInfo.is64Bit ? unsafe.getLong(data + 16) : unsafe.getInt(data + 16);
          for (int i=0; i < items; i++) {
            long atom=SystemInfo.is64Bit ? unsafe.getLong(atoms + 8 * i) : unsafe.getInt(atoms + 4 * i);
            if (atom == propertyValue) {
              hasProperty=true;
              break;
            }
          }
        }
        XFree.invoke(null,atoms);
      }
    }
  finally {
      awtUnlock.invoke(null);
      unsafe.freeMemory(data);
    }
  }
 catch (  Throwable t) {
    LOG.info("cannot check property",t);
  }
  return hasProperty;
}
