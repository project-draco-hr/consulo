{
  ApplicationManager.getApplication().assertIsDispatchThread();
  final Collection<GroupNode> groupNodes=mySubgroupNodes.values();
  for (Iterator<GroupNode> iterator=groupNodes.iterator(); iterator.hasNext(); ) {
    final GroupNode groupNode=iterator.next();
    if (groupNode.removeUsage(usage)) {
      doUpdate();
      if (groupNode.getRecursiveUsageCount() == 0) {
        myTreeModel.removeNodeFromParent(groupNode);
        iterator.remove();
      }
      return true;
    }
  }
  boolean removed;
synchronized (lock) {
    removed=myUsageNodes.remove(usage);
  }
  if (removed) {
    doUpdate();
    return true;
  }
  return false;
}
