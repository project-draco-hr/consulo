def b85decode(text):
    'decode base85-encoded text'
    if (not _b85dec):
        _mkb85dec()
    l = len(text)
    out = []
    for i in range(0, len(text), 5):
        chunk = text[i:(i + 5)]
        acc = 0
        for (j, c) in enumerate(chunk):
            try:
                acc = ((acc * 85) + _b85dec[c])
            except KeyError:
                raise TypeError(('Bad base85 character at byte %d' % (i + j)))
        if (acc > 4294967295):
            raise OverflowError(('Base85 overflow in hunk starting at byte %d' % i))
        out.append(acc)
    cl = (l % 5)
    if cl:
        acc *= (85 ** (5 - cl))
        if (cl > 1):
            acc += (16777215 >> ((cl - 2) * 8))
        out[(-1)] = acc
    out = struct.pack(('>%dL' % len(out)), *out)
    if cl:
        out = out[:(- (5 - cl))]
    return out
