{
  final Project project=CommonDataKeys.PROJECT.getData(dataContext);
  final IdeView ideView=LangDataKeys.IDE_VIEW.getData(dataContext);
  if (project == null || ideView == null)   return;
  if (!FileCopyPasteUtil.isFileListFlavorAvailable())   return;
  final Transferable contents=CopyPasteManager.getInstance().getContents();
  if (contents == null)   return;
  final List<File> fileList=FileCopyPasteUtil.getFileList(contents);
  if (fileList == null)   return;
  final List<PsiElement> elements=new ArrayList<PsiElement>();
  for (  File file : fileList) {
    final VirtualFile vFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
    if (vFile != null) {
      final PsiManager instance=PsiManager.getInstance(project);
      PsiFileSystemItem item=vFile.isDirectory() ? instance.findDirectory(vFile) : instance.findFile(vFile);
      if (item != null) {
        elements.add(item);
      }
    }
  }
  if (elements.size() > 0) {
    final PsiDirectory dir=ideView.getOrChooseDirectory();
    if (dir != null) {
      final boolean move=LinuxDragAndDropSupport.isMoveOperation(contents);
      if (move) {
        new MoveFilesOrDirectoriesHandler().doMove(PsiUtilCore.toPsiElementArray(elements),dir);
      }
 else {
        new CopyFilesOrDirectoriesHandler().doCopy(PsiUtilCore.toPsiElementArray(elements),dir);
      }
    }
  }
}
