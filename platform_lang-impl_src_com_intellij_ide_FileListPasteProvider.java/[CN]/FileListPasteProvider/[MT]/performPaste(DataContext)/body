{
  Project project=LangDataKeys.PROJECT.getData(dataContext);
  final IdeView ideView=LangDataKeys.IDE_VIEW.getData(dataContext);
  if (project == null || ideView == null)   return;
  List<File> fileList;
  try {
    final Transferable contents=CopyPasteManager.getInstance().getContents();
    fileList=(List<File>)contents.getTransferData(DataFlavor.javaFileListFlavor);
  }
 catch (  UnsupportedFlavorException e) {
    return;
  }
catch (  IOException e) {
    return;
  }
  List<PsiElement> elements=new ArrayList<PsiElement>();
  for (  File file : fileList) {
    final VirtualFile vFile=LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
    if (vFile != null) {
      final PsiManager instance=PsiManager.getInstance(project);
      PsiFileSystemItem item=vFile.isDirectory() ? instance.findDirectory(vFile) : instance.findFile(vFile);
      if (item != null) {
        elements.add(item);
      }
    }
  }
  if (elements.size() > 0) {
    final PsiDirectory dir=ideView.getOrChooseDirectory();
    if (dir != null) {
      new CopyFilesOrDirectoriesHandler().doCopy(elements.toArray(new PsiElement[elements.size()]),dir);
    }
  }
}
