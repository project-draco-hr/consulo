{
  int offsetBefore=editor.getCaretModel().getOffset();
  myJavaLTTyped='<' == c && file instanceof GroovyFile && CodeInsightSettings.getInstance().AUTOINSERT_PAIR_BRACKET && isAfterClassLikeIdentifier(offsetBefore,editor);
  if ('>' == c) {
    if (file instanceof GroovyFile && CodeInsightSettings.getInstance().AUTOINSERT_PAIR_BRACKET) {
      if (JavaTypedHandler.handleJavaGT(editor,GroovyTokenTypes.mLT,GroovyTokenTypes.mGT,INVALID_INSIDE_REFERENCE))       return Result.STOP;
    }
  }
  if (c == '@' && file instanceof GroovyFile) {
    autoPopupMemberLookup(project,editor,new Condition<PsiFile>(){
      public boolean value(      final PsiFile file){
        int offset=editor.getCaretModel().getOffset();
        PsiElement lastElement=file.findElementAt(offset - 1);
        if (lastElement == null)         return false;
        final PsiElement prevSibling=PsiTreeUtil.prevVisibleLeaf(lastElement);
        return prevSibling != null && ".".equals(prevSibling.getText());
      }
    }
);
  }
  if (c == '&' && file instanceof GroovyFile) {
    autoPopupMemberLookup(project,editor,new Condition<PsiFile>(){
      public boolean value(      final PsiFile file){
        int offset=editor.getCaretModel().getOffset();
        PsiElement lastElement=file.findElementAt(offset - 1);
        return lastElement != null && ".&".equals(lastElement.getText());
      }
    }
);
  }
  return Result.CONTINUE;
}
