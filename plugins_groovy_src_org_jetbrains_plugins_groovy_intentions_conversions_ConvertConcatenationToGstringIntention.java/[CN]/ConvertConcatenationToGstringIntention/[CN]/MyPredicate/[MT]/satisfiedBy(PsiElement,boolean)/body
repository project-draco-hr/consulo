{
  if (!(element instanceof GrBinaryExpression))   return false;
  GrBinaryExpression binaryExpression=(GrBinaryExpression)element;
  if (!GroovyTokenTypes.mPLUS.equals(binaryExpression.getOperationTokenType()))   return false;
  if (checkForParent) {
    PsiElement parent=skipParentheses(binaryExpression,true);
    if (parent instanceof GrBinaryExpression && GroovyTokenTypes.mPLUS.equals(((GrBinaryExpression)parent).getOperationTokenType())) {
      return false;
    }
  }
  if (ErrorUtil.containsError(element))   return false;
  final PsiType type=binaryExpression.getType();
  if (type == null)   return false;
  final PsiElementFactory factory=JavaPsiFacade.getElementFactory(element.getProject());
  final PsiClassType stringType=factory.createTypeByFQClassName(CommonClassNames.JAVA_LANG_STRING,element.getResolveScope());
  final PsiClassType gstringType=factory.createTypeByFQClassName(GrStringUtil.GROOVY_LANG_GSTRING,element.getResolveScope());
  if (!(TypeConversionUtil.isAssignable(stringType,type) || TypeConversionUtil.isAssignable(gstringType,type)))   return false;
  return true;
}
