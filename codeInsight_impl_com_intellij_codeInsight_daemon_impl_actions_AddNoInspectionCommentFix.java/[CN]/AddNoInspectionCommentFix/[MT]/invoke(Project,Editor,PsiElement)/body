{
  PsiStatement container=getContainer(element);
  if (container == null)   return;
  final ReadonlyStatusHandler.OperationStatus status=ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(container.getContainingFile().getVirtualFile());
  if (status.hasReadonlyFiles())   return;
  PsiElement prev=PsiTreeUtil.skipSiblingsBackward(container,PsiWhiteSpace.class);
  PsiElementFactory factory=JavaPsiFacade.getInstance(project).getElementFactory();
  if (prev instanceof PsiComment) {
    String text=prev.getText();
    if (text.startsWith(COMMENT_START_TEXT)) {
      prev.replace(factory.createCommentFromText(text + "," + myID,null));
      return;
    }
  }
  boolean caretWasBeforeStatement=editor != null && editor.getCaretModel().getOffset() == container.getTextRange().getStartOffset();
  boolean added=false;
  if (container instanceof PsiDeclarationStatement && SuppressManager.getInstance().canHave15Suppressions(element)) {
    final PsiDeclarationStatement declarationStatement=(PsiDeclarationStatement)container;
    final PsiElement[] declaredElements=declarationStatement.getDeclaredElements();
    for (    PsiElement declaredElement : declaredElements) {
      if (declaredElement instanceof PsiLocalVariable) {
        final PsiModifierList modifierList=((PsiLocalVariable)declaredElement).getModifierList();
        if (modifierList != null) {
          AddSuppressInspectionFix.addSuppressAnnotation(project,editor,container,modifierList,myID);
          added=true;
          break;
        }
      }
    }
  }
  if (!added) {
    container.getParent().addBefore(factory.createCommentFromText(COMMENT_START_TEXT + myID,null),container);
  }
  if (caretWasBeforeStatement) {
    editor.getCaretModel().moveToOffset(container.getTextRange().getStartOffset());
  }
  UndoUtil.markPsiFileForUndo(element.getContainingFile());
}
