{
  LocalFileSystem.getInstance().refreshFiles(files);
  if (true)   return;
  ThrowableRunnable<RuntimeException> runnable=new ThrowableRunnable<RuntimeException>(){
    public void run() throws RuntimeException {
      boolean async=!ApplicationManager.getApplication().isDispatchThread();
      final CountDownLatch latch=new CountDownLatch(files.size());
      final int[] i={0};
      for (      final VirtualFile virtualFile : files) {
        context.getProgressIndicator().checkCanceled();
        virtualFile.refresh(async,true,new Runnable(){
          public void run(){
            latch.countDown();
            context.getProgressIndicator().setFraction(++i[0] * 1.0 / files.size());
            context.getProgressIndicator().setText2(virtualFile.getPath());
          }
        }
);
      }
      try {
        while (true) {
          latch.await(100,TimeUnit.MILLISECONDS);
          if (latch.getCount() == 0)           break;
          context.getProgressIndicator().checkCanceled();
        }
      }
 catch (      InterruptedException ignored) {
      }
    }
  }
;
  if (title != null) {
    CompileDriver.runInContext(context,title,runnable);
  }
 else {
    runnable.run();
  }
}
