{
  final AntProject project=element.getAntProject();
  final String value=attr.getValue();
  final XmlAttributeValue xmlAttributeValue=attr.getValueElement();
  if (xmlAttributeValue != null && value.indexOf("@{") < 0) {
    final int offsetInPosition=xmlAttributeValue.getTextRange().getStartOffset() - element.getTextRange().getStartOffset() + 1;
    int startIndex;
    int endIndex=-1;
    while ((startIndex=value.indexOf("${",endIndex + 1)) > endIndex) {
      startIndex+=2;
      endIndex=startIndex;
      int nestedBrackets=0;
      while (value.length() > endIndex) {
        final char ch=value.charAt(endIndex);
        if (ch == '}') {
          if (nestedBrackets == 0) {
            break;
          }
          --nestedBrackets;
        }
 else         if (ch == '{') {
          ++nestedBrackets;
        }
        ++endIndex;
      }
      if (nestedBrackets > 0 || endIndex == value.length())       return;
      if (endIndex >= startIndex) {
        final String propName=value.substring(startIndex,endIndex);
        if (project.isEnvironmentProperty(propName) && AntElementImpl.resolveProperty(element,propName) == null) {
          continue;
        }
        refs.add(new AntPropertyReference(this,element,propName,new TextRange(offsetInPosition + startIndex,offsetInPosition + endIndex),attr));
      }
      endIndex=startIndex;
    }
  }
}
