{
  final Map<String,DiffRequest> requestMap=myRequest.discloseRequest(request);
  final HashMap<String,DiffViewer> copy=new HashMap<String,DiffViewer>(myMap);
  for (  Map.Entry<String,DiffRequest> entry : requestMap.entrySet()) {
    final String key=entry.getKey();
    final DiffRequest diffRequest=entry.getValue();
    final DiffViewer viewer=copy.remove(key);
    if (viewer != null) {
      viewer.setDiffRequest(diffRequest);
    }
 else {
      final DiffViewer newViewer=myRequest.viewerForRequest(myWindow,myParentDisposable,key,diffRequest);
      if (newViewer == null)       continue;
      myMap.put(key,newViewer);
      final Content content=myUi.createContent(key,newViewer.getComponent(),key,null,newViewer.getPreferredFocusedComponent());
      content.setCloseable(false);
      content.setPinned(true);
      content.setDisposer(myParentDisposable);
      myUi.addContent(content);
    }
  }
  final Content[] contents=myUi.getContentManager().getContents();
  for (  String s : copy.keySet()) {
    myMap.remove(s);
    for (    Content content : contents) {
      if (s.equals(content.getTabName())) {
        myUi.getContentManager().removeContent(content,false);
        break;
      }
    }
  }
}
