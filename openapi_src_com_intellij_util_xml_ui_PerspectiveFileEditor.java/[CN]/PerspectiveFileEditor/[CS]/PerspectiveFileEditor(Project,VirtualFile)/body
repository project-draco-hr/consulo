{
  myProject=project;
  myFile=file;
  myIsValid=true;
  myFileEditorManagerAdapter=new FileEditorManagerAdapter(){
    public void selectionChanged(    FileEditorManagerEvent event){
      checkIsValid();
      if (PerspectiveFileEditor.this.equals(event.getOldEditor())) {
        deselectNotify();
        if (event.getNewEditor() instanceof TextEditor) {
          setSelectionInTextEditor((TextEditor)event.getNewEditor(),getSelectedDomElement());
        }
      }
 else       if (PerspectiveFileEditor.this.equals(event.getNewEditor())) {
        selectNotify();
        if (event.getOldEditor() instanceof TextEditor) {
          final DomElement element=getSelectedDomElementFromTextEditor((TextEditor)event.getOldEditor());
          if (element != null) {
            setSelectedDomElement(element);
          }
        }
 else         if (event.getOldEditor() instanceof PerspectiveFileEditor) {
          setSelectedDomElement(((PerspectiveFileEditor)event.getOldEditor()).getSelectedDomElement());
        }
      }
    }
  }
;
  FileEditorManager.getInstance(myProject).addFileEditorManagerListener(myFileEditorManagerAdapter);
  startListeningDocuments();
  final PsiFile psiFile=getPsiFile();
  if (psiFile != null) {
    final Document document=PsiDocumentManager.getInstance(getProject()).getDocument(psiFile);
    if (document != null) {
      addWatchedDocument(document);
    }
  }
}
