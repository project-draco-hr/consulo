{
  if (!CodeInsightSettings.getInstance().AUTO_POPUP_COMPLETION_LOOKUP)   return Result.CONTINUE;
  if (!Character.isLetter(charTyped) && charTyped != '_') {
    finishAutopopupCompletion(editor,false);
    return Result.CONTINUE;
  }
  if (getAutoPopupState(editor) != null || LookupManager.getActiveLookup(editor) != null) {
    return Result.CONTINUE;
  }
  if (!CompletionServiceImpl.isPhase(CompletionPhase.AutoPopupAlarm.class,CompletionPhase.NoCompletion.getClass())) {
    return Result.CONTINUE;
  }
  final boolean isMainEditor=FileEditorManager.getInstance(project).getSelectedTextEditor() == editor;
  final CompletionPhase.AutoPopupAlarm phase=new CompletionPhase.AutoPopupAlarm();
  CompletionServiceImpl.setCompletionPhase(phase);
  final Runnable request=new Runnable(){
    @Override public void run(){
      if (CompletionServiceImpl.getCompletionPhase() != phase)       return;
      if (project.isDisposed() || !file.isValid())       return;
      if (editor.isDisposed() || isMainEditor && FileEditorManager.getInstance(project).getSelectedTextEditor() != editor)       return;
      if (ApplicationManager.getApplication().isWriteAccessAllowed())       return;
      if (DumbService.getInstance(project).isDumb())       return;
      invokeAutoPopupCompletion(project,editor);
    }
  }
;
  AutoPopupController.getInstance(project).invokeAutoPopupRunnable(request,CodeInsightSettings.getInstance().AUTO_LOOKUP_DELAY);
  return Result.STOP;
}
