{
  if (!CodeInsightSettings.getInstance().AUTO_POPUP_COMPLETION_LOOKUP)   return Result.CONTINUE;
  if (!Character.isLetter(charTyped)) {
    finishAutopopupCompletion();
    return Result.CONTINUE;
  }
  if (myEditor != null) {
    if (editor != myEditor || editor.getCaretModel().getOffset() != myLastOffset + 1) {
      finishAutopopupCompletion();
      return Result.CONTINUE;
    }
  }
  myEditor=editor;
  myLastOffset=editor.getCaretModel().getOffset();
  final MessageBusConnection connection=project.getMessageBus().connect();
  connection.subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,new FileEditorManagerAdapter(){
    @Override public void selectionChanged(    FileEditorManagerEvent event){
      finishAutopopupCompletion();
      connection.disconnect();
    }
  }
);
  editor.addEditorMouseListener(new EditorMouseAdapter(){
    @Override public void mouseClicked(    EditorMouseEvent e){
      editor.removeEditorMouseListener(this);
      finishAutopopupCompletion();
    }
  }
);
  editor.getDocument().addDocumentListener(new DocumentAdapter(){
    @Override public void documentChanged(    DocumentEvent e){
      if (StringUtil.containsLineBreak(e.getNewFragment())) {
        finishAutopopupCompletion();
        editor.getDocument().removeDocumentListener(this);
      }
    }
  }
);
  final boolean isMainEditor=FileEditorManager.getInstance(project).getSelectedTextEditor() == editor;
  AutoPopupController.getInstance(project).invokeAutoPopupRunnable(new Runnable(){
    @Override public void run(){
      if (project.isDisposed() || !file.isValid())       return;
      if (editor.isDisposed() || isMainEditor && FileEditorManager.getInstance(project).getSelectedTextEditor() != editor)       return;
      new CodeCompletionHandlerBase(CompletionType.BASIC,false,false).invoke(project,editor);
      final Lookup lookup=LookupManager.getActiveLookup(editor);
      if (lookup != null) {
        lookup.addLookupListener(new LookupAdapter(){
          @Override public void itemSelected(          LookupEvent event){
            myEditor=null;
          }
          @Override public void lookupCanceled(          LookupEvent event){
            myEditor=null;
          }
        }
);
      }
    }
  }
,CodeInsightSettings.getInstance().AUTO_LOOKUP_DELAY);
  return Result.STOP;
}
