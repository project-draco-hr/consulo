{
  final boolean isMainEditor=FileEditorManager.getInstance(project).getSelectedTextEditor() == editor;
  final CompletionPhase.AutoPopupAlarm phase=new CompletionPhase.AutoPopupAlarm();
  CompletionServiceImpl.setCompletionPhase(phase);
  final Runnable request=new Runnable(){
    @Override public void run(){
      if (CompletionServiceImpl.getCompletionPhase() != phase)       return;
      if (project.isDisposed() || !file.isValid())       return;
      if (editor.isDisposed() || isMainEditor && FileEditorManager.getInstance(project).getSelectedTextEditor() != editor)       return;
      if (ApplicationManager.getApplication().isWriteAccessAllowed())       return;
      if (DumbService.getInstance(project).isDumb())       return;
      Editor topLevelEditor=InjectedLanguageUtil.getTopLevelEditor(editor);
      PsiFile topLevelFile=InjectedLanguageUtil.getTopLevelFile(file);
      PsiDocumentManager.getInstance(project).commitAllDocuments();
      Editor newEditor=InjectedLanguageUtil.getEditorForInjectedLanguageNoCommit(topLevelEditor,topLevelFile);
      invokeAutoPopupCompletion(project,newEditor);
    }
  }
;
  AutoPopupController.getInstance(project).invokeAutoPopupRunnable(request,CodeInsightSettings.getInstance().AUTO_LOOKUP_DELAY);
}
