{
  for (  PsiElement element : refsToInline) {
    if (element.getParent() instanceof PsiAssignmentExpression) {
      PsiAssignmentExpression assignmentExpression=(PsiAssignmentExpression)element.getParent();
      if (element == assignmentExpression.getLExpression()) {
        EditorColorsManager manager=EditorColorsManager.getInstance();
        final TextAttributes writeAttributes=manager.getGlobalScheme().getAttributes(EditorColors.WRITE_SEARCH_RESULT_ATTRIBUTES);
        HighlightManager.getInstance(project).addOccurrenceHighlights(editor,new PsiElement[]{element},writeAttributes,true,null);
        String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("variable.is.accessed.for.writing",localName));
        CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME,message,HelpID.INLINE_VARIABLE,project);
        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message("press.escape.to.remove.the.highlighting"));
        return true;
      }
    }
  }
  return false;
}
