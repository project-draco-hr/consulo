def qimport(ui, repo, *filename, **opts):
    'import a patch\n\n    The patch is inserted into the series after the last applied\n    patch. If no patches have been applied, qimport prepends the patch\n    to the series.\n\n    The patch will have the same name as its source file unless you\n    give it a new one with -n/--name.\n\n    You can register an existing patch inside the patch directory with\n    the -e/--existing flag.\n\n    With -f/--force, an existing patch of the same name will be\n    overwritten.\n\n    An existing changeset may be placed under mq control with -r/--rev\n    (e.g. qimport --rev tip -n patch will place tip under mq control).\n    With -g/--git, patches imported with --rev will use the git diff\n    format. See the diffs help topic for information on why this is\n    important for preserving rename/copy information and permission\n    changes.\n\n    To import a patch from standard input, pass - as the patch file.\n    When importing from standard input, a patch name must be specified\n    using the --name flag.\n    '
    q = repo.mq
    q.qimport(repo, filename, patchname=opts['name'], existing=opts['existing'], force=opts['force'], rev=opts['rev'], git=opts['git'])
    q.save_dirty()
    if (opts.get('push') and (not opts.get('rev'))):
        return q.push(repo, None)
    return 0
