def applied(ui, repo, patch=None, **opts):
    'print the patches already applied'
    q = repo.mq
    l = len(q.applied)
    if patch:
        if (patch not in q.series):
            raise util.Abort((_('patch %s is not in series file') % patch))
        end = (q.series.index(patch) + 1)
    else:
        end = q.series_end(True)
    if (opts.get('last') and (not end)):
        ui.write(_('no patches applied\n'))
        return 1
    elif (opts.get('last') and (end == 1)):
        ui.write(_('only one patch applied\n'))
        return 1
    elif opts.get('last'):
        start = (end - 2)
        end = 1
    else:
        start = 0
    return q.qseries(repo, length=end, start=start, status='A', summary=opts.get('summary'))
