def delete(self, repo, patches, opts):
    if ((not patches) and (not opts.get('rev'))):
        raise util.Abort(_('qdelete requires at least one revision or patch name'))
    realpatches = []
    for patch in patches:
        patch = self.lookup(patch, strict=True)
        info = self.isapplied(patch)
        if info:
            raise util.Abort((_('cannot delete applied patch %s') % patch))
        if (patch not in self.series):
            raise util.Abort((_('patch %s not in series file') % patch))
        realpatches.append(patch)
    numrevs = 0
    if opts.get('rev'):
        if (not self.applied):
            raise util.Abort(_('no patches applied'))
        revs = cmdutil.revrange(repo, opts['rev'])
        if ((len(revs) > 1) and (revs[0] > revs[1])):
            revs.reverse()
        revpatches = self._revpatches(repo, revs)
        realpatches += revpatches
        numrevs = len(revpatches)
    self._cleanup(realpatches, numrevs, opts.get('keep'))
