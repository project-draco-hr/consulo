def qseries(self, repo, missing=None, start=0, length=None, status=None, summary=False):

    def displayname(pfx, patchname):
        if summary:
            ph = patchheader(self.join(patchname), self.plainmode)
            msg = ((ph.message and ph.message[0]) or '')
            if (not self.ui.plain()):
                width = (((util.termwidth() - len(pfx)) - len(patchname)) - 2)
                if (width > 0):
                    msg = util.ellipsis(msg, width)
                else:
                    msg = ''
            msg = ('%s%s: %s' % (pfx, patchname, msg))
        else:
            msg = (pfx + patchname)
        self.ui.write((msg + '\n'))
    applied = set([p.name for p in self.applied])
    if (length is None):
        length = (len(self.series) - start)
    if (not missing):
        if self.ui.verbose:
            idxwidth = len(str(((start + length) - 1)))
        for i in xrange(start, (start + length)):
            patch = self.series[i]
            if (patch in applied):
                stat = 'A'
            elif self.pushable(i)[0]:
                stat = 'U'
            else:
                stat = 'G'
            pfx = ''
            if self.ui.verbose:
                pfx = ('%*d %s ' % (idxwidth, i, stat))
            elif (status and (status != stat)):
                continue
            displayname(pfx, patch)
    else:
        msng_list = []
        for (root, dirs, files) in os.walk(self.path):
            d = root[(len(self.path) + 1):]
            for f in files:
                fl = os.path.join(d, f)
                if ((fl not in self.series) and (fl not in (self.status_path, self.series_path, self.guards_path)) and (not fl.startswith('.'))):
                    msng_list.append(fl)
        for x in sorted(msng_list):
            pfx = ((self.ui.verbose and 'D ') or '')
            displayname(pfx, x)
