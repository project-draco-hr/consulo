@propertycache
def _manifest(self):
    'generate a manifest corresponding to the working directory'
    man = self._parents[0].manifest().copy()
    copied = self._repo.dirstate.copies()
    if (len(self._parents) > 1):
        man2 = self.p2().manifest()

        def getman(f):
            if (f in man):
                return man
            return man2
    else:
        getman = (lambda f: man)

    def cf(f):
        f = copied.get(f, f)
        return getman(f).flags(f)
    ff = self._repo.dirstate.flagfunc(cf)
    (modified, added, removed, deleted, unknown) = self._status[:5]
    for (i, l) in (('a', added), ('m', modified), ('u', unknown)):
        for f in l:
            orig = copied.get(f, f)
            man[f] = (getman(orig).get(orig, nullid) + i)
            try:
                man.set(f, ff(f))
            except OSError:
                pass
    for f in (deleted + removed):
        if (f in man):
            del man[f]
    return man
