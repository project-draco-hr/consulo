{
  final InjectedLanguageManager manager=InjectedLanguageManager.getInstance(file.getProject());
  final List<LineMarkerInfo> injectedMarkers=new ArrayList<LineMarkerInfo>();
  for (  PsiElement element : elements) {
    InjectedLanguageUtil.enumerate(element,file,new PsiLanguageInjectionHost.InjectedPsiVisitor(){
      public void visit(      @NotNull final PsiFile injectedPsi,      @NotNull List<PsiLanguageInjectionHost.Shred> places){
        Document document=PsiDocumentManager.getInstance(injectedPsi.getProject()).getCachedDocument(injectedPsi);
        if (!(document instanceof DocumentWindow))         return;
        List<PsiElement> injElements=CollectHighlightsUtil.getElementsInRange(injectedPsi,0,injectedPsi.getTextLength());
        final List<LineMarkerProvider> providers=LineMarkerProviders.INSTANCE.allForLanguage(injectedPsi.getLanguage());
        processor.addLineMarkers(injElements,providers,injectedMarkers);
        for (        final LineMarkerInfo injectedMarker : injectedMarkers) {
          GutterIconRenderer gutterRenderer=injectedMarker.createGutterRenderer();
          TextRange injectedRange=new TextRange(injectedMarker.startOffset,injectedMarker.endOffset);
          List<TextRange> editables=manager.intersectWithAllEditableFragments(injectedPsi,injectedRange);
          for (          TextRange editable : editables) {
            TextRange hostRange=manager.injectedToHost(injectedPsi,editable);
            Icon icon=gutterRenderer == null ? null : gutterRenderer.getIcon();
            LineMarkerInfo converted=new LineMarkerInfo<PsiElement>(injectedMarker.getElement(),hostRange.getStartOffset(),icon,injectedMarker.updatePass,new Function<PsiElement,String>(){
              public String fun(              PsiElement element){
                return injectedMarker.getLineMarkerTooltip();
              }
            }
,injectedMarker.getNavigationHandler());
            converted.textAttributesKey=injectedMarker.textAttributesKey;
            converted.endOffset=hostRange.getEndOffset();
            result.add(converted);
          }
        }
        injectedMarkers.clear();
      }
    }
,false);
  }
}
