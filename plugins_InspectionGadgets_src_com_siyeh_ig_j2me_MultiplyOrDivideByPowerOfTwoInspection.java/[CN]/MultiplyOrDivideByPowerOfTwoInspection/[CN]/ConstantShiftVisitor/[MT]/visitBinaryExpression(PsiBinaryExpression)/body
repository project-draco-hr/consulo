{
  super.visitBinaryExpression(expression);
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return;
  }
  final IElementType tokenType=expression.getOperationTokenType();
  if (!tokenType.equals(JavaTokenType.ASTERISK)) {
    if (!checkDivision || !tokenType.equals(JavaTokenType.DIV)) {
      return;
    }
  }
  if (!ShiftUtils.isPowerOfTwo(rhs)) {
    return;
  }
  final PsiType type=expression.getType();
  if (type == null) {
    return;
  }
  if (!ClassUtils.isIntegral(type)) {
    return;
  }
  registerError(expression,expression);
}
