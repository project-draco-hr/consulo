{
  if (PATCH_PATH.length() == 0) {
    VcsApplicationSettings settings=VcsApplicationSettings.getInstance();
    PATCH_PATH=settings.PATCH_STORAGE_LOCATION;
    if (PATCH_PATH == null) {
      PATCH_PATH=myProject.getBaseDir() == null ? PathManager.getHomePath() : myProject.getBaseDir().getPresentableUrl();
    }
  }
  myPanel.setFileName(ShelveChangesManager.suggestPatchName(myProject,commitMessage,new File(PATCH_PATH),null));
  myPanel.setReversePatch(false);
  boolean dvcsIsUsed=false;
  if (ProjectLevelVcsManager.getInstance(myProject).dvcsUsedInProject()) {
    for (    Change change : changes) {
      final AbstractVcs vcs=ChangesUtil.getVcsForChange(change,myProject);
      if (vcs != null && VcsType.distibuted.equals(vcs.getType())) {
        dvcsIsUsed=true;
        break;
      }
    }
  }
  final List<Change> modified=new ArrayList<Change>();
  for (  Change change : changes) {
    if (change.getBeforeRevision() == null || change.getAfterRevision() == null)     continue;
    modified.add(change);
  }
  myPanel.setChanges(modified);
  myPanel.showTextStoreOption(dvcsIsUsed);
  return myPanel.getPanel();
}
