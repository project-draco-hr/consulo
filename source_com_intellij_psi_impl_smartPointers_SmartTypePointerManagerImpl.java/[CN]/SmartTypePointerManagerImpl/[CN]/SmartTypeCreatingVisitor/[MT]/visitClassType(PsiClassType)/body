{
  final PsiClassType.ClassResolveResult resolveResult=classType.resolveGenerics();
  final PsiClass aClass=resolveResult.getElement();
  if (aClass == null) {
    LOG.assertTrue(classType instanceof PsiClassReferenceType);
    return new ClassReferenceTypePointer((PsiClassReferenceType)classType);
  }
  if (classType instanceof PsiClassReferenceType) {
    classType=((PsiClassReferenceType)classType).createImmediateCopy();
  }
  final PsiSubstitutor substitutor=resolveResult.getSubstitutor();
  final HashMap<SmartPsiElementPointer,SmartTypePointer> map=new HashMap<SmartPsiElementPointer,SmartTypePointer>();
  for (  PsiTypeParameter typeParameter : PsiUtil.typeParametersIterable(aClass)) {
    final PsiType substitutionResult=substitutor.substitute(typeParameter);
    if (substitutionResult != null) {
      final SmartPsiElementPointer pointer=myPsiPointerManager.createSmartPsiElementPointer(typeParameter);
      map.put(pointer,substitutionResult.accept(this));
    }
  }
  return new ClassTypePointer(classType,myPsiPointerManager.createSmartPsiElementPointer(aClass),map);
}
