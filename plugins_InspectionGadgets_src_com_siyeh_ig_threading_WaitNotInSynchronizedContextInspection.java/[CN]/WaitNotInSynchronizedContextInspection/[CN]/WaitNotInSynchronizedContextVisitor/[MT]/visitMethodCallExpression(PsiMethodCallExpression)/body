{
  super.visitMethodCallExpression(expression);
  if (m_inSynchronizedContext) {
    return;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  if (methodExpression == null) {
    return;
  }
  @NonNls final String methodName=methodExpression.getReferenceName();
  if (!"wait".equals(methodName)) {
    return;
  }
  final PsiMethod method=expression.resolveMethod();
  if (method == null) {
    return;
  }
  final PsiParameterList paramList=method.getParameterList();
  if (paramList == null) {
    return;
  }
  final PsiParameter[] parameters=paramList.getParameters();
  final int numParams=parameters.length;
  if (numParams > 2) {
    return;
  }
  if (numParams > 0) {
    final PsiType parameterType=parameters[0].getType();
    if (!parameterType.equals(PsiType.LONG)) {
      return;
    }
  }
  if (numParams > 1) {
    final PsiType parameterType=parameters[1].getType();
    if (!parameterType.equals(PsiType.INT)) {
      return;
    }
  }
  registerMethodCallError(expression);
}
