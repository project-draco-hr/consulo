{
  editor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
  final int offset=TargetElementUtilBase.adjustOffset(file,editor.getDocument(),editor.getCaretModel().getOffset());
  final PsiElement element=file.findElementAt(offset);
  PsiTypeElement typeElement=PsiTreeUtil.getParentOfType(element,PsiTypeElement.class);
  while (typeElement != null) {
    final PsiElement parent=typeElement.getParent();
    if (parent instanceof PsiVariable || parent instanceof PsiMember || (parent instanceof PsiReferenceParameterList && PsiTreeUtil.getParentOfType(parent,PsiMember.class) instanceof PsiClass)) {
      invoke(project,parent,null,editor);
      return;
    }
    typeElement=PsiTreeUtil.getParentOfType(parent,PsiTypeElement.class,false);
  }
  CommonRefactoringUtil.showErrorHint(project,editor,"The caret should be positioned on type of field, variable, method or method parameter to be refactored",REFACTORING_NAME,"refactoring.migrateType");
}
