{
  super(model);
  myProject=project;
  myTipManager=new TipManager(this,new TipManager.TipFactory(){
    @Override public JComponent createToolTip(    MouseEvent e){
      return DebuggerTreeBase.this.createToolTip(e);
    }
    @Override public MouseEvent createTooltipEvent(    MouseEvent candidateEvent){
      return DebuggerTreeBase.this.createTooltipEvent(candidateEvent);
    }
    @Override public boolean isFocusOwner(){
      return DebuggerTreeBase.this.isFocusOwner();
    }
  }
);
  Disposer.register(this,myTipManager);
  UIUtil.setLineStyleAngled(this);
  setRootVisible(false);
  setShowsRootHandles(true);
  setCellRenderer(new DebuggerTreeRenderer());
  updateUI();
  TreeUtil.installActions(this);
}
