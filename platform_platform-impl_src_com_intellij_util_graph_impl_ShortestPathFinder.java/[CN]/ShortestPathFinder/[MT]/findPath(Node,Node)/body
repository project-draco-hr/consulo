{
  Map<Node,Node> nextNodes=new HashMap<Node,Node>();
  Deque<Node> queue=new ArrayDeque<Node>();
  queue.addLast(finish);
  boolean found=false;
  while (!queue.isEmpty()) {
    final Node node=queue.removeFirst();
    if (node.equals(start)) {
      found=true;
      break;
    }
    final Iterator<Node> in=myGraph.getIn(node);
    while (in.hasNext()) {
      Node prev=in.next();
      if (!nextNodes.containsKey(prev)) {
        nextNodes.put(prev,node);
        queue.addLast(prev);
      }
    }
  }
  if (!found) {
    return null;
  }
  List<Node> path=new ArrayList<Node>();
  Node current=start;
  while (!current.equals(finish)) {
    path.add(current);
    current=nextNodes.get(current);
  }
  path.add(finish);
  return path;
}
