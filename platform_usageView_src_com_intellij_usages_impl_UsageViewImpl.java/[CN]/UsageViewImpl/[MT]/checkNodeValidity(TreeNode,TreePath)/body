{
  boolean shouldCheckChildren=true;
  if (myTree.isCollapsed(path)) {
    if (node instanceof Node) {
      ((Node)node).markNeedUpdate();
    }
    shouldCheckChildren=false;
  }
  UsageViewTreeCellRenderer.RowLocation isVisible=myUsageViewTreeCellRenderer.isRowVisible(myTree.getRowForPath(new TreePath(((DefaultMutableTreeNode)node).getPath())),myTree.getVisibleRect());
  if (shouldCheckChildren && isVisible != UsageViewTreeCellRenderer.RowLocation.AFTER_VISIBLE_RECT) {
    for (int i=0; i < node.getChildCount(); i++) {
      TreeNode child=node.getChildAt(i);
      checkNodeValidity(child,path.pathByAddingChild(child));
    }
  }
  if (node instanceof Node && node != getModelRoot() && isVisible == UsageViewTreeCellRenderer.RowLocation.INSIDE_VISIBLE_RECT) {
    ((Node)node).update(this);
  }
}
