{
  myCentralPanel.removeAll();
  disposeUsageContextPanels();
  JScrollPane treePane=ScrollPaneFactory.createScrollPane(myTree);
  myTreeSplitter=new Splitter();
  myTreeSplitter.setFirstComponent(treePane);
  myCentralPanel.add(myTreeSplitter,BorderLayout.CENTER);
  if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) {
    myTreeSplitter.setProportion(UsageViewSettings.getInstance().PREVIEW_USAGES_SPLITTER_PROPORTIONS);
    treePane.putClientProperty(UIUtil.KEEP_BORDER_SIDES,SideBorder.RIGHT);
    final JBTabbedPane tabbedPane=new JBTabbedPane(SwingConstants.BOTTOM){
      @NotNull @Override protected Insets getInsetsForTabComponent(){
        return new Insets(0,0,0,0);
      }
    }
;
    UsageContextPanel.Provider[] extensions=Extensions.getExtensions(UsageContextPanel.Provider.EP_NAME,myProject);
    myUsageContextPanelProviders=ContainerUtil.filter(extensions,new Condition<UsageContextPanel.Provider>(){
      @Override public boolean value(      UsageContextPanel.Provider provider){
        return provider.isAvailableFor(UsageViewImpl.this);
      }
    }
);
    for (    UsageContextPanel.Provider provider : myUsageContextPanelProviders) {
      JComponent component;
      if (myCurrentUsageContextProvider == null || myCurrentUsageContextProvider == provider) {
        myCurrentUsageContextProvider=provider;
        myCurrentUsageContextPanel=provider.create(this);
        component=myCurrentUsageContextPanel.createComponent();
      }
 else {
        component=new JLabel();
      }
      tabbedPane.addTab(provider.getTabTitle(),component);
    }
    int index=myUsageContextPanelProviders.indexOf(myCurrentUsageContextProvider);
    tabbedPane.setSelectedIndex(index);
    tabbedPane.addChangeListener(new ChangeListener(){
      @Override public void stateChanged(      ChangeEvent e){
        int currentIndex=tabbedPane.getSelectedIndex();
        UsageContextPanel.Provider selectedProvider=myUsageContextPanelProviders.get(currentIndex);
        if (selectedProvider != myCurrentUsageContextProvider) {
          tabSelected(selectedProvider);
        }
      }
    }
);
    tabbedPane.setBorder(IdeBorderFactory.createBorder(SideBorder.LEFT));
    myTreeSplitter.setSecondComponent(tabbedPane);
  }
 else {
    myTreeSplitter.setProportion(1);
  }
  myCentralPanel.add(myButtonPanel,BorderLayout.SOUTH);
  myRootPanel.revalidate();
  myRootPanel.repaint();
}
