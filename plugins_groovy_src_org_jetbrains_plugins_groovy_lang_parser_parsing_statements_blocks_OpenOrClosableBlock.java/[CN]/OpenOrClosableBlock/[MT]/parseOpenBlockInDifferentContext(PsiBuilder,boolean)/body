{
  PsiBuilder.Marker blockStatementMarker=builder.mark();
  PsiBuilder.Marker marker=builder.mark();
  if (!ParserUtils.getToken(builder,mLCURLY)) {
    marker.drop();
    blockStatementMarker.drop();
    return WRONGWAY;
  }
  ParserUtils.getToken(builder,mNLS);
  parseBlockBody(builder);
  while (!builder.eof() && !mRCURLY.equals(builder.getTokenType())) {
    builder.error(GroovyBundle.message("expression.expected"));
    builder.advanceLexer();
  }
  ParserUtils.getToken(builder,mRCURLY,GroovyBundle.message("rcurly.expected"));
  marker.done(OPEN_BLOCK);
  if (isBlockStatement) {
    blockStatementMarker.done(BLOCK_STATEMENT);
  }
 else {
    blockStatementMarker.drop();
  }
  return OPEN_BLOCK;
}
