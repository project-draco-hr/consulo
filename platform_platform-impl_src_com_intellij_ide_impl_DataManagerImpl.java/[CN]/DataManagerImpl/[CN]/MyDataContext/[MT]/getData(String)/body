{
  int currentEventCount=IdeEventQueue.getInstance().getEventCount();
  if (myEventCount != -1 && myEventCount != currentEventCount) {
    LOG.assertTrue(false,"cannot share data context between Swing events; initial event count = " + myEventCount + "; current event count = "+ currentEventCount);
  }
  Component _component=myRef.get();
  if (PlatformDataKeys.IS_MODAL_CONTEXT.is(dataId)) {
    if (_component != null) {
      return IdeKeyEventDispatcher.isModalContext(_component) ? Boolean.TRUE : Boolean.FALSE;
    }
 else {
      return null;
    }
  }
 else   if (PlatformDataKeys.CONTEXT_COMPONENT.is(dataId)) {
    return _component;
  }
 else   if (PlatformDataKeys.MODALITY_STATE.is(dataId)) {
    return _component != null ? ModalityState.stateForComponent(_component) : ModalityState.NON_MODAL;
  }
 else   if (PlatformDataKeys.EDITOR.is(dataId)) {
    Editor editor=(Editor)DataManagerImpl.this.getData(dataId,_component);
    return validateEditor(editor);
  }
 else {
    return DataManagerImpl.this.getData(dataId,_component);
  }
}
