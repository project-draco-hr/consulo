{
synchronized (lock) {
    if (ourUndisplayableChars.contains(codePoint))     return ourSharedDefaultFont;
    final Collection<FontInfo> descriptors=ourUsedFonts.values();
    for (    FontInfo font : descriptors) {
      if (font.getSize() == size && font.getStyle() == style && font.areLigaturesEnabled() == useLigatures && font.canDisplay(codePoint)) {
        return font;
      }
    }
    for (int i=0; i < ourFontNames.size(); i++) {
      String name=ourFontNames.get(i);
      FontInfo font=new FontInfo(name,size,style,style,useLigatures);
      if (font.canDisplay(codePoint)) {
        ourUsedFonts.put(new FontKey(name,size,style,useLigatures),font);
        ourFontNames.remove(i);
        return font;
      }
    }
    ourUndisplayableChars.add(codePoint);
    return ourSharedDefaultFont;
  }
}
