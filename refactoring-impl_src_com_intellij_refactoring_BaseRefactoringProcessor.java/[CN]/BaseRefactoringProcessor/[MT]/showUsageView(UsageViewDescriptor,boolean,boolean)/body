{
  UsageViewManager viewManager=myProject.getComponent(UsageViewManager.class);
  final PsiElement[] initialElements=viewDescriptor.getElements();
  final UsageTarget[] targets=PsiElement2UsageTargetAdapter.convert(initialElements);
  final Usage[] usages=UsageInfo2UsageAdapter.convert(viewDescriptor.getUsages());
  final UsageViewPresentation presentation=createPresentation(viewDescriptor,usages);
  final UsageView usageView=viewManager.showUsages(targets,usages,presentation);
  final Runnable refactoringRunnable=new Runnable(){
    public void run(){
      final Set<UsageInfo> excludedUsageInfos=getExcludedUsages(usageView);
      doRefactoring(viewDescriptor.getUsages(),excludedUsageInfos);
    }
  }
;
  String canNotMakeString=RefactoringBundle.message("usageView.need.reRun");
  usageView.addPerformOperationAction(refactoringRunnable,getCommandName(),canNotMakeString,RefactoringBundle.message("usageView.doAction"));
}
