{
  super(project,editor,initializerExpression,localVariable,occurrences,typeSelectorManager,IntroduceFieldHandler.REFACTORING_NAME);
  myParentClass=parentClass;
  myStatic=aStatic;
  myAnchorElement=anchorElement;
  myAnchorElementIfAll=anchorElementIfAll;
  for (int i=0, occurrencesLength=occurrences.length; i < occurrencesLength; i++) {
    PsiExpression occurrence=occurrences[i];
    PsiElement parent=occurrence.getParent();
    if (parent == myAnchorElement) {
      myAnchorIdx=i;
    }
    if (parent == anchorElementIfAll) {
      myAnchorIdxIfAll=i;
    }
  }
  myOccurenceManager=occurenceManager;
  myProject=myLocalVariable != null ? myLocalVariable.getProject() : initializerExpression.getProject();
  myEditor=editor;
  myIntroduceFieldPanel=new IntroduceFieldPopupPanel(parentClass,initializerExpression,localVariable,currentMethodConstructor,localVariable != null,aStatic,myOccurrences,allowInitInMethod,allowInitInMethodIfAll,typeSelectorManager);
  final GridBagConstraints constraints=new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0);
  myWholePanel.add(myLabel,constraints);
  final JComponent centerPanel=myIntroduceFieldPanel.createCenterPanel();
  myWholePanel.add(centerPanel,constraints);
  myIntroduceFieldPanel.initializeControls(initializerExpression,ourLastInitializerPlace);
}
