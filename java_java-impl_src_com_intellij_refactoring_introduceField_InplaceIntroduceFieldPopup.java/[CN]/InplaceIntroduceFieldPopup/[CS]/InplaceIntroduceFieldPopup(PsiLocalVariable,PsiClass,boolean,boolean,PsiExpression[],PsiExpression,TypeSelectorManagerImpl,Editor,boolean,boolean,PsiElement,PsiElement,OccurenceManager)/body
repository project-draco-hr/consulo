{
  myLocalVariable=localVariable;
  myParentClass=parentClass;
  myStatic=aStatic;
  myOccurrences=occurrences;
  myInitializerExpression=initializerExpression;
  myExprText=myInitializerExpression != null ? myInitializerExpression.getText() : null;
  myExprMarker=myInitializerExpression != null ? editor.getDocument().createRangeMarker(myInitializerExpression.getTextRange()) : null;
  myTypeSelectorManager=typeSelectorManager;
  myAnchorElement=anchorElement;
  myAnchorElementIfAll=anchorElementIfAll;
  myOccurenceManager=occurenceManager;
  myProject=myLocalVariable != null ? myLocalVariable.getProject() : myInitializerExpression.getProject();
  myEditor=editor;
  myIntroduceFieldPanel=new IntroduceFieldCentralPanel(parentClass,initializerExpression,localVariable,currentMethodConstructor,localVariable != null,aStatic,myOccurrences.length,allowInitInMethod,allowInitInMethodIfAll,typeSelectorManager);
  myWholePanel=new JPanel(new GridBagLayout());
  myWholePanel.setBorder(null);
  final TitlePanel titlePanel=new TitlePanel();
  titlePanel.setBorder(null);
  titlePanel.setText(IntroduceFieldHandler.REFACTORING_NAME);
  GridBagConstraints gc=new GridBagConstraints(0,0,1,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0);
  myWholePanel.add(titlePanel,gc);
  gc.gridy++;
  gc.insets.top=5;
  myWholePanel.add(myIntroduceFieldPanel.createCenterPanel(),gc);
  myIntroduceFieldPanel.initializeControls(initializerExpression);
  myIntroduceFieldPanel.addOccurrenceListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      final TemplateState templateState=TemplateManagerImpl.getTemplateState(myEditor);
      if (templateState != null) {
        templateState.gotoEnd(true);
        startTemplate(myIntroduceFieldPanel.isReplaceAllOccurrences());
      }
    }
  }
);
}
