{
  final VisibilityListener visibilityListener=new VisibilityListener(myEditor){
    @Override protected String getVisibility(){
      return myIntroduceFieldPanel.getFieldVisibility();
    }
  }
;
  myIntroduceFieldPanel.addVisibilityListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      new WriteCommandAction(myProject,getCommandName(),getCommandName()){
        @Override protected void run(        Result result) throws Throwable {
          PsiDocumentManager.getInstance(myProject).commitDocument(myEditor.getDocument());
          visibilityListener.perform(getVariable());
          updateTitle(getVariable());
        }
      }
.execute();
    }
  }
);
  final FinalListener finalListener=new FinalListener(myEditor);
  myIntroduceFieldPanel.addFinalListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      new WriteCommandAction(myProject,getCommandName(),getCommandName()){
        @Override protected void run(        Result result) throws Throwable {
          PsiDocumentManager.getInstance(myProject).commitDocument(myEditor.getDocument());
          finalListener.perform(myIntroduceFieldPanel.isDeclareFinal(),getVariable());
          updateTitle(getVariable());
        }
      }
.execute();
    }
  }
);
  myIntroduceFieldPanel.addOccurrenceListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      restartInplaceIntroduceTemplate();
    }
  }
);
  return myWholePanel;
}
