{
  final PsiElementFactory elementFactory=JavaPsiFacade.getElementFactory(myProject);
  return ApplicationManager.getApplication().runWriteAction(new Computable<PsiField>(){
    @Override public PsiField compute(){
      final Ref<PsiField> ref=new Ref<PsiField>();
      PostprocessReformattingAspect.getInstance(myProject).postponeFormattingInside(new Runnable(){
        @Override public void run(){
          PsiField field=elementFactory.createField(myFieldName != null ? myFieldName : names[0],defaultType);
          field=(PsiField)myParentClass.add(field);
          PsiUtil.setModifierProperty(field,PsiModifier.FINAL,myIntroduceFieldPanel.isDeclareFinal());
          final String visibility=myIntroduceFieldPanel.getFieldVisibility();
          if (visibility != null) {
            PsiUtil.setModifierProperty(field,visibility,true);
          }
          ref.set(field);
        }
      }
);
      return ref.get();
    }
  }
);
}
