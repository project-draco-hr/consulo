{
  ourLastInitializerPlace=myIntroduceFieldPanel.getInitializerPlace();
  myIntroduceFieldPanel.saveFinalState();
  final BaseExpressionToFieldHandler.Settings settings=new BaseExpressionToFieldHandler.Settings(getInputName(),myIntroduceFieldPanel.isReplaceAllOccurrences(),myStatic,myIntroduceFieldPanel.isDeclareFinal(),myIntroduceFieldPanel.getInitializerPlace(),myIntroduceFieldPanel.getFieldVisibility(),myLocalVariable,myTypePointer.getType(),myIntroduceFieldPanel.isDeleteVariable(),myParentClass,false,false);
  new WriteCommandAction(myProject,getCommandName(),getCommandName()){
    @Override protected void run(    Result result) throws Throwable {
      if (myLocalVariable != null) {
        final LocalToFieldHandler.IntroduceFieldRunnable fieldRunnable=new LocalToFieldHandler.IntroduceFieldRunnable(false,myLocalVariable,myParentClass,settings,myStatic,myOccurrences);
        fieldRunnable.run();
      }
 else {
        final BaseExpressionToFieldHandler.ConvertToFieldRunnable convertToFieldRunnable=new BaseExpressionToFieldHandler.ConvertToFieldRunnable(myExpr,settings,settings.getForcedType(),myOccurrences,myOccurenceManager,myAnchorIdxIfAll != -1 && myOccurrences[myAnchorIdxIfAll] != null ? myOccurrences[myAnchorIdxIfAll].getParent() : myAnchorElementIfAll,myAnchorIdx != -1 && myOccurrences[myAnchorIdx] != null ? myOccurrences[myAnchorIdx].getParent() : myAnchorElement,myEditor,myParentClass);
        convertToFieldRunnable.run();
      }
    }
  }
.execute();
}
