{
  if (!myInitListeners) {
    myInitListeners=true;
    myIntroduceFieldPanel.addVisibilityListener(new VisibilityListener(myProject,IntroduceFieldHandler.REFACTORING_NAME,myEditor){
      @Override protected String getVisibility(){
        return myIntroduceFieldPanel.getFieldVisibility();
      }
    }
);
    final FinalListener finalListener=new FinalListener(myProject,IntroduceFieldHandler.REFACTORING_NAME);
    myIntroduceFieldPanel.addFinalListener(new ItemListener(){
      @Override public void itemStateChanged(      ItemEvent e){
        finalListener.perform(myIntroduceFieldPanel.isDeclareFinal());
      }
    }
);
    myIntroduceFieldPanel.addOccurrenceListener(new ItemListener(){
      @Override public void itemStateChanged(      ItemEvent e){
        final TemplateState templateState=TemplateManagerImpl.getTemplateState(myEditor);
        if (templateState != null) {
          templateState.gotoEnd(true);
          myTypeSelectorManager=new TypeSelectorManagerImpl(myProject,myFieldTypePointer.getType(),null,myInitializerExpression,myOccurrences);
          startTemplate(myIntroduceFieldPanel.isReplaceAllOccurrences());
        }
      }
    }
);
  }
  return myWholePanel;
}
