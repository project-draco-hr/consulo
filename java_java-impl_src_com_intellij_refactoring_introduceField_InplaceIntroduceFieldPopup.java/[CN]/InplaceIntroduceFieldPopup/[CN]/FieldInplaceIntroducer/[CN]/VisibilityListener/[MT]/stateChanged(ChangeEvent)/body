{
  new WriteCommandAction(myProject){
    @Override protected void run(    Result result) throws Throwable {
      final PsiVariable variable=getVariable();
      LOG.assertTrue(variable != null);
      final PsiModifierList modifierList=variable.getModifierList();
      LOG.assertTrue(modifierList != null);
      int textOffset=modifierList.getTextOffset();
      final Document document=myEditor.getDocument();
      String visibility=myIntroduceFieldPanel.getFieldVisibility();
      if (visibility == PsiModifier.PACKAGE_LOCAL) {
        visibility="";
      }
      final String modifierListText=modifierList.getText();
      int length=PsiModifier.PUBLIC.length();
      int idx=modifierListText.indexOf(PsiModifier.PUBLIC);
      if (idx == -1) {
        idx=modifierListText.indexOf(PsiModifier.PROTECTED);
        length=PsiModifier.PROTECTED.length();
      }
      if (idx == -1) {
        idx=modifierListText.indexOf(PsiModifier.PRIVATE);
        length=PsiModifier.PRIVATE.length();
      }
      final int startOffset=textOffset + Math.max(idx,0);
      final int endOffset=textOffset + (idx > -1 ? length : 0);
      document.replaceString(startOffset,endOffset,visibility + (startOffset == endOffset ? " " : ""));
    }
  }
.execute();
}
