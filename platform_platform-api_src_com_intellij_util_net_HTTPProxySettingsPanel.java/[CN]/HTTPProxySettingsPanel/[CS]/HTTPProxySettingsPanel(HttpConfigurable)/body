{
  final ButtonGroup group=new ButtonGroup();
  group.add(myUseHTTPProxyRb);
  group.add(myAutoDetectProxyRb);
  group.add(myNoProxyRb);
  myNoProxyRb.setSelected(true);
  final ButtonGroup proxyTypeGroup=new ButtonGroup();
  proxyTypeGroup.add(myHTTP);
  proxyTypeGroup.add(mySocks);
  myHTTP.setSelected(true);
  final Boolean property=Boolean.getBoolean("java.net.useSystemProxies");
  mySystemProxyDefined.setVisible(Boolean.TRUE.equals(property));
  if (Boolean.TRUE.equals(property)) {
    mySystemProxyDefined.setIcon(Messages.getWarningIcon());
    mySystemProxyDefined.setFont(mySystemProxyDefined.getFont().deriveFont(Font.BOLD));
    mySystemProxyDefined.setUI(new MultiLineLabelUI());
  }
  myProxyAuthCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      enableProxyAuthentication(myProxyAuthCheckBox.isSelected());
    }
  }
);
  final ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      enableProxy(myUseHTTPProxyRb.isSelected());
    }
  }
;
  myUseHTTPProxyRb.addActionListener(listener);
  myAutoDetectProxyRb.addActionListener(listener);
  myNoProxyRb.addActionListener(listener);
  myHttpConfigurable=httpConfigurable;
  myClearPasswordsButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myHttpConfigurable.clearGenericPasswords();
      Messages.showMessageDialog(myMainPanel,"Proxy passwords were cleared.","Auto-detected proxy",Messages.getInformationIcon());
    }
  }
);
  if (HttpConfigurable.getInstance() != null) {
    myCheckButton.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        final String title="Check Proxy Settings";
        final String answer=Messages.showInputDialog(myMainPanel,"Warning: your settings will be saved.\n\nEnter any URL to check connection to:",title,Messages.getQuestionIcon());
        if (!StringUtil.isEmptyOrSpaces(answer)) {
          apply();
          final HttpConfigurable instance=HttpConfigurable.getInstance();
          final IOException exc[]=new IOException[1];
          myCheckButton.setEnabled(false);
          myCheckButton.setText("Check connection (in progress...)");
          myConnectionCheckInProgress=true;
          final Application application=ApplicationManager.getApplication();
          application.executeOnPooledThread(new Runnable(){
            @Override public void run(){
              HttpURLConnection connection=null;
              try {
                connection=instance.openHttpConnection(answer);
                connection.setReadTimeout(3 * 1000);
                connection.setConnectTimeout(3 * 1000);
                connection.connect();
              }
 catch (              IOException e1) {
                exc[0]=e1;
              }
 finally {
                if (connection != null) {
                  connection.disconnect();
                }
              }
              SwingUtilities.invokeLater(new Runnable(){
                @Override public void run(){
                  myConnectionCheckInProgress=false;
                  Component parent=null;
                  if (myMainPanel.isShowing()) {
                    parent=myMainPanel;
                    myCheckButton.setText("Check connection");
                    myCheckButton.setEnabled(canEnableConnectionCheck());
                  }
 else {
                    final IdeFrame frame=IdeFocusManager.findInstance().getLastFocusedFrame();
                    if (frame == null) {
                      return;
                    }
                    parent=frame.getComponent();
                  }
                  if (exc[0] == null) {
                    Messages.showMessageDialog(parent,"Connection successful",title,Messages.getInformationIcon());
                  }
 else {
                    if (instance.USE_HTTP_PROXY) {
                      instance.LAST_ERROR=exc[0].getMessage();
                    }
                    Messages.showErrorDialog(parent,errorText(exc[0].getMessage()));
                  }
                }
              }
);
            }
          }
);
        }
      }
    }
);
  }
 else {
    myCheckButton.setVisible(false);
  }
}
