{
  myComponent=new JPanel(new BorderLayout());
  final DocumentListener docListener=new DocumentListener(){
    public void insertUpdate(    DocumentEvent e){
      myChanged=true;
    }
    public void removeUpdate(    DocumentEvent e){
      myChanged=true;
    }
    public void changedUpdate(    DocumentEvent e){
      myChanged=true;
    }
  }
;
  myState=ServiceManager.getService(PlaybackDebuggerState.class);
  final DefaultActionGroup controlGroup=new DefaultActionGroup();
  controlGroup.add(new RunOnFameActivationAction());
  controlGroup.add(new ActivateFrameAndRun());
  controlGroup.addSeparator();
  controlGroup.add(new StopAction());
  controlGroup.addSeparator();
  controlGroup.add(new SaveAction());
  JPanel north=new JPanel(new BorderLayout());
  north.add(ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,controlGroup,true).getComponent(),BorderLayout.WEST);
  final JPanel right=new JPanel(new BorderLayout());
  right.add(myCurrentScript,BorderLayout.CENTER);
  myCurrentScript.setText(myState.currentScript);
  myCurrentScript.setEditable(false);
  myCurrentScript.getDocument().addDocumentListener(docListener);
  final DefaultActionGroup loadGroup=new DefaultActionGroup();
  loadGroup.add(new SetScriptFileAction());
  final ActionToolbar tb=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,loadGroup,true);
  tb.setLayoutPolicy(ActionToolbar.NOWRAP_LAYOUT_POLICY);
  right.add(tb.getComponent(),BorderLayout.EAST);
  north.add(right,BorderLayout.CENTER);
  myComponent.add(north,BorderLayout.NORTH);
  myDocument=EditorFactory.getInstance().createDocument("");
  myEditor=EditorFactory.getInstance().createEditor(myDocument);
  myDocument.addDocumentListener(new DocumentAdapter(){
    @Override public void documentChanged(    com.intellij.openapi.editor.event.DocumentEvent e){
      myChanged=true;
    }
  }
);
  VirtualFile scriptFile=VirtualFileManager.getInstance().getFileSystem(LocalFileSystem.PROTOCOL).findFileByPath(myState.currentScript);
  if (scriptFile != null) {
    loadFrom(scriptFile);
  }
  final Splitter script2Log=new Splitter(true);
  script2Log.setFirstComponent(new JScrollPane(myEditor.getComponent()));
  myList=new JList(myMessage);
  myList.setCellRenderer(new MyListRenderer());
  script2Log.setSecondComponent(new JScrollPane(myList));
  myComponent.add(script2Log,BorderLayout.CENTER);
  myVfsListener=new VirtualFileAdapter(){
    @Override public void contentsChanged(    VirtualFileEvent event){
      final VirtualFile file=getCurrentScriptFile();
      if (file != null && file.equals(event.getFile())) {
        loadFrom(event.getFile());
      }
    }
  }
;
  LocalFileSystem.getInstance().addVirtualFileListener(myVfsListener);
}
