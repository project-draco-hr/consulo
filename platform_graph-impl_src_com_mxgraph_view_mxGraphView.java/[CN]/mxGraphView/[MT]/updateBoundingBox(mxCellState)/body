{
  mxRectangle rect=new mxRectangle(state);
  Map<String,Object> style=state.getStyle();
  double strokeWidth=Math.max(1,Math.round(mxUtils.getInt(style,mxConstants.STYLE_STROKEWIDTH,1) * scale));
  strokeWidth-=Math.max(1,strokeWidth / 2);
  if (graph.getModel().isEdge(state.getCell())) {
    int ms=0;
    if (style.containsKey(mxConstants.STYLE_ENDARROW) || style.containsKey(mxConstants.STYLE_STARTARROW)) {
      ms=(int)Math.round(mxConstants.DEFAULT_MARKERSIZE * scale);
    }
    rect.grow(ms + strokeWidth);
    if (mxUtils.getString(style,mxConstants.STYLE_SHAPE,"").equals(mxConstants.SHAPE_ARROW)) {
      rect.grow(mxConstants.ARROW_WIDTH / 2);
    }
  }
 else {
    rect.grow(strokeWidth);
  }
  if (mxUtils.isTrue(style,mxConstants.STYLE_SHADOW)) {
    rect.setWidth(rect.getWidth() + mxConstants.SHADOW_OFFSETX);
    rect.setHeight(rect.getHeight() + mxConstants.SHADOW_OFFSETY);
  }
  if (mxUtils.getString(style,mxConstants.STYLE_SHAPE,"").equals(mxConstants.SHAPE_LABEL)) {
    if (mxUtils.getString(style,mxConstants.STYLE_IMAGE) != null) {
      double w=mxUtils.getInt(style,mxConstants.STYLE_IMAGE_WIDTH,mxConstants.DEFAULT_IMAGESIZE) * scale;
      double h=mxUtils.getInt(style,mxConstants.STYLE_IMAGE_HEIGHT,mxConstants.DEFAULT_IMAGESIZE) * scale;
      double x=state.getX();
      double y=0;
      String imgAlign=mxUtils.getString(style,mxConstants.STYLE_IMAGE_ALIGN,mxConstants.ALIGN_LEFT);
      String imgValign=mxUtils.getString(style,mxConstants.STYLE_IMAGE_VERTICAL_ALIGN,mxConstants.ALIGN_MIDDLE);
      if (imgAlign.equals(mxConstants.ALIGN_RIGHT)) {
        x+=state.getWidth() - w;
      }
 else       if (imgAlign.equals(mxConstants.ALIGN_CENTER)) {
        x+=(state.getWidth() - w) / 2;
      }
      if (imgValign.equals(mxConstants.ALIGN_TOP)) {
        y=state.getY();
      }
 else       if (imgValign.equals(mxConstants.ALIGN_BOTTOM)) {
        y=state.getY() + state.getHeight() - h;
      }
 else {
        y=state.getY() + (state.getHeight() - h) / 2;
      }
      rect.add(new mxRectangle(x,y,w,h));
    }
  }
  double rotation=mxUtils.getDouble(style,mxConstants.STYLE_ROTATION);
  mxRectangle bbox=mxUtils.getBoundingBox(rect,rotation);
  rect.add(bbox);
  if (!graph.isLabelClipped(state.getCell())) {
    rect.add(state.getLabelBounds());
  }
  state.setBoundingBox(rect);
  return rect;
}
