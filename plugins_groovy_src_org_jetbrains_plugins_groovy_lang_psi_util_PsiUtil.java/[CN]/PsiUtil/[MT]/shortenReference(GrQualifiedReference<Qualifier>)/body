{
  final Qualifier qualifier=ref.getQualifier();
  if (qualifier != null && (PsiTreeUtil.getParentOfType(ref,GrDocMemberReference.class) != null || PsiTreeUtil.getParentOfType(ref,GrDocComment.class) == null) && PsiTreeUtil.getParentOfType(ref,GrImportStatement.class) == null && PsiTreeUtil.getParentOfType(ref,GroovyCodeFragment.class) == null) {
    final PsiElement resolved=ref.resolve();
    if (resolved != null) {
      ref.setQualifier(null);
      if (ref.isReferenceTo(resolved))       return true;
      if (resolved instanceof PsiClass) {
        final GroovyFileBase file=(GroovyFileBase)ref.getContainingFile();
        final PsiClass clazz=(PsiClass)resolved;
        final String qName=clazz.getQualifiedName();
        if (qName != null) {
          if (mayInsertImport(ref)) {
            final GrImportStatement added=file.addImportForClass(clazz);
            if (!ref.isReferenceTo(resolved)) {
              file.removeImport(added);
            }
          }
        }
      }
      if (!ref.isReferenceTo(resolved)) {
        ref.setQualifier((Qualifier)qualifier.copy());
        return false;
      }
 else {
        return true;
      }
    }
  }
  return false;
}
