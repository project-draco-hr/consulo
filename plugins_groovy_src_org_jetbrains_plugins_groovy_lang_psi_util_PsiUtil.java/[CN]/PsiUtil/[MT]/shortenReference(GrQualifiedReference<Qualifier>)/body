{
  final Qualifier qualifier=ref.getQualifier();
  if (qualifier == null || qualifier instanceof GrSuperReferenceExpression || cannotShortenInContext(ref)) {
    return false;
  }
  if (!canShorten(qualifier))   return false;
  final PsiElement resolved=ref.resolve();
  if (resolved == null)   return false;
  ref.setQualifier(null);
  if (ref.isReferenceTo(resolved))   return true;
  if (resolved instanceof PsiClass) {
    final GroovyFileBase file=(GroovyFileBase)ref.getContainingFile();
    final PsiClass clazz=(PsiClass)resolved;
    final String qName=clazz.getQualifiedName();
    if (qName != null) {
      if (mayInsertImport(ref)) {
        final GrImportStatement added=file.addImportForClass(clazz);
        if (!ref.isReferenceTo(resolved)) {
          file.removeImport(added);
        }
      }
    }
  }
  if (!ref.isReferenceTo(resolved)) {
    ref.setQualifier((Qualifier)qualifier.copy());
    return false;
  }
 else {
    return true;
  }
}
