{
  final Qualifier qualifier=ref.getQualifier();
  if (qualifier == null || qualifier instanceof GrSuperReferenceExpression || cannotShortenInContext(ref)) {
    return false;
  }
  if (!canShorten(qualifier))   return false;
  final PsiElement resolved=ref.resolve();
  if (resolved == null)   return false;
  final GrQualifiedReference<Qualifier> copy=getCopy(ref);
  copy.setQualifier(null);
  if (!copy.isReferenceTo(resolved)) {
    if (resolved instanceof PsiClass) {
      final GroovyFileBase file=(GroovyFileBase)ref.getContainingFile();
      final PsiClass clazz=(PsiClass)resolved;
      final String qName=clazz.getQualifiedName();
      if (qName != null) {
        if (mayInsertImport(ref)) {
          final GrImportStatement added=file.addImportForClass(clazz);
          if (!copy.isReferenceTo(resolved)) {
            file.removeImport(added);
            return false;
          }
        }
      }
    }
 else {
      return false;
    }
  }
  ref.setQualifier(null);
  return true;
}
