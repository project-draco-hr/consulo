{
  if (argumentTypes == null)   return true;
  PsiParameter[] parameters=method.getParameterList().getParameters();
  if (isInUseCategory && method.hasModifierProperty(PsiModifier.STATIC) && parameters.length > 0) {
    parameters=ArrayUtil.remove(parameters,0);
  }
  if (parameters.length == 0)   return argumentTypes.length == 0;
  final PsiParameter lastParameter=parameters[parameters.length - 1];
  boolean hasVarArgs=lastParameter.isVarArgs() || lastParameter.getType() instanceof PsiArrayType;
  if (!hasVarArgs && argumentTypes.length > parameters.length)   return false;
  int allOptionalParameterCount=0;
  for (  PsiParameter parameter : parameters) {
    if (isOptionalParameter(parameter)) {
      allOptionalParameterCount++;
    }
  }
  int optionalParameterCount;
  if (hasVarArgs) {
    optionalParameterCount=allOptionalParameterCount - (parameters.length - 1) + argumentTypes.length;
    if (optionalParameterCount < 0)     return false;
    for (int i=optionalParameterCount; i >= 0; i--) {
      if (checkMethodApplicability(parameters,argumentTypes,i,hasVarArgs,substitutor,method.getResolveScope(),method.getManager())) {
        return true;
      }
    }
    return false;
  }
 else {
    optionalParameterCount=allOptionalParameterCount - parameters.length + argumentTypes.length;
    if (optionalParameterCount < 0)     return false;
    return checkMethodApplicability(parameters,argumentTypes,optionalParameterCount,hasVarArgs,substitutor,method.getResolveScope(),method.getManager());
  }
}
