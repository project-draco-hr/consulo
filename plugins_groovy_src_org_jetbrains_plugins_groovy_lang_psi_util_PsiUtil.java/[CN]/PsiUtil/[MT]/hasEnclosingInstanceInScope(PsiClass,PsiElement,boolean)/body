{
  PsiElement place=scope;
  while (place != null && place != clazz && !(place instanceof PsiFile)) {
    if (place instanceof PsiClass) {
      if (isSuperClassAccepted) {
        if (InheritanceUtil.isInheritorOrSelf((PsiClass)place,clazz,true))         return true;
      }
 else {
        if (clazz.getManager().areElementsEquivalent(place,clazz))         return true;
      }
    }
    if (place instanceof PsiModifierListOwner && ((PsiModifierListOwner)place).hasModifierProperty(PsiModifier.STATIC))     return false;
    place=place.getParent();
  }
  return place == clazz;
}
