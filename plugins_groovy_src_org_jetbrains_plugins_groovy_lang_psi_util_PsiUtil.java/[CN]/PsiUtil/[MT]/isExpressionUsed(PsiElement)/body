{
  while (expr.getParent() instanceof GrParenthesizedExpression)   expr=expr.getParent();
  final PsiElement parent=expr.getParent();
  if (parent instanceof GrBinaryExpression || parent instanceof GrUnaryExpression || parent instanceof GrConditionalExpression|| parent instanceof GrAssignmentExpression|| parent instanceof GrInstanceOfExpression|| parent instanceof GrSafeCastExpression|| parent instanceof GrTupleExpression|| parent instanceof GrArgumentList|| parent instanceof GrReturnStatement|| parent instanceof GrAssertStatement|| parent instanceof GrThrowStatement|| parent instanceof GrSwitchStatement|| parent instanceof GrVariable) {
    return true;
  }
  final GrControlFlowOwner controlFlowOwner=ControlFlowUtils.findControlFlowOwner(expr);
  if (controlFlowOwner instanceof GrOpenBlock) {
    final PsiElement controlFlowOwnerParent=controlFlowOwner.getParent();
    if (controlFlowOwnerParent instanceof GrMethod && ((GrMethod)controlFlowOwnerParent).isConstructor()) {
      return false;
    }
 else     if (controlFlowOwnerParent instanceof PsiMethod && ((PsiMethod)controlFlowOwnerParent).getReturnType() == PsiType.VOID) {
      return false;
    }
  }
  return ControlFlowUtils.collectReturns(controlFlowOwner,true).contains(expr);
}
