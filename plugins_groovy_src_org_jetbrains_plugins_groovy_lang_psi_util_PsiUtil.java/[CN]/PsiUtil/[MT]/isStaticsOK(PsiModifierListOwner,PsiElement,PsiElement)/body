{
  if (!(member instanceof PsiMember))   return true;
  if (!(place instanceof GrReferenceExpression))   return true;
  GrExpression qualifier=((GrReferenceExpression)place).getQualifierExpression();
  final PsiClass containingClass=((PsiMember)member).getContainingClass();
  if (qualifier != null) {
    final boolean isStatic=member.hasModifierProperty(PsiModifier.STATIC) && !(ResolveUtil.isInUseScope(resolveContext,member));
    if (qualifier instanceof GrReferenceExpression) {
      if ("class".equals(((GrReferenceExpression)qualifier).getReferenceName())) {
        final PsiType type=qualifier.getType();
        if (type instanceof PsiClassType) {
          final PsiClass psiClass=((PsiClassType)type).resolve();
          if (psiClass != null && CommonClassNames.JAVA_LANG_CLASS.equals(psiClass.getQualifiedName())) {
            final PsiType[] params=((PsiClassType)type).getParameters();
            if (params.length == 1 && params[0] instanceof PsiClassType) {
              if (place.getManager().areElementsEquivalent(containingClass,((PsiClassType)params[0]).resolve())) {
                return member.hasModifierProperty(GrModifier.STATIC);
              }
            }
          }
        }
      }
      PsiElement qualifierResolved=((GrReferenceExpression)qualifier).resolve();
      if (qualifierResolved instanceof PsiClass || qualifierResolved instanceof PsiPackage) {
        if (member instanceof PsiClass) {
          return true;
        }
        if (containingClass == null) {
          return true;
        }
        if (isStatic) {
          return true;
        }
        final String qname=containingClass.getQualifiedName();
        if (qname != null && qname.startsWith("java.")) {
          if (CommonClassNames.JAVA_LANG_OBJECT.equals(qname) || CommonClassNames.JAVA_LANG_CLASS.equals(qname)) {
            return true;
          }
          if (containingClass.isInterface()) {
            PsiClass javaLangClass=JavaPsiFacade.getInstance(place.getProject()).findClass(CommonClassNames.JAVA_LANG_CLASS,place.getResolveScope());
            if (javaLangClass != null && javaLangClass.isInheritor(containingClass,true)) {
              return true;
            }
          }
        }
        return false;
      }
    }
 else     if (qualifier instanceof GrThisReferenceExpression && ((GrThisReferenceExpression)qualifier).getQualifier() == null) {
      final boolean isInStatic=isInStaticContext((GrThisReferenceExpression)qualifier);
      if (containingClass != null && CommonClassNames.JAVA_LANG_CLASS.equals(containingClass.getQualifiedName())) {
        return !(member.hasModifierProperty(GrModifier.STATIC) && !CodeInsightSettings.getInstance().SHOW_STATIC_AFTER_INSTANCE);
      }
 else       if (isInStatic)       return member.hasModifierProperty(GrModifier.STATIC);
    }
    if (member instanceof PsiClass) {
      return false;
    }
    return !(isStatic && !CodeInsightSettings.getInstance().SHOW_STATIC_AFTER_INSTANCE);
  }
 else {
    if (containingClass == null)     return true;
    if (member instanceof GrVariable && !(member instanceof GrField))     return true;
    if (member.hasModifierProperty(GrModifier.STATIC))     return true;
    if (resolveContext != null) {
      PsiElement stopAt=PsiTreeUtil.findCommonParent(place,resolveContext);
      while (place != null && place != stopAt && !(place instanceof GrMember)) {
        if (place instanceof PsiFile)         break;
        place=place.getParent();
      }
      if (place == null || place instanceof PsiFile || place == stopAt)       return true;
      if (place instanceof GrTypeDefinition) {
        return !(((GrTypeDefinition)place).hasModifierProperty(GrModifier.STATIC) || ((GrTypeDefinition)place).getContainingClass() == null);
      }
      return !((GrMember)place).hasModifierProperty(GrModifier.STATIC);
    }
 else {
      while (place != null) {
        place=place.getParent();
        if (place instanceof PsiClass && InheritanceUtil.isInheritorOrSelf((PsiClass)place,containingClass,true))         return true;
        if (place instanceof PsiMember && ((PsiMember)place).hasModifierProperty(PsiModifier.STATIC)) {
          return false;
        }
      }
      return true;
    }
  }
}
