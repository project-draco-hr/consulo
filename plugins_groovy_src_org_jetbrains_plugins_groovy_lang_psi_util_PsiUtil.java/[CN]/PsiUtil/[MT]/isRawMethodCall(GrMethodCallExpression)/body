{
  final GroovyResolveResult result=call.advancedResolve();
  final PsiElement element=result.getElement();
  if (element == null)   return false;
  if (element instanceof PsiMethod) {
    PsiType returnType=getSmartReturnType((PsiMethod)element);
    final GrExpression expression=call.getInvokedExpression();
    if (expression instanceof GrReferenceExpression && result.isInvokedOnProperty()) {
      if (returnType instanceof GrClosureType) {
        final GrClosureSignature signature=((GrClosureType)returnType).getSignature();
        return isRawType(signature.getReturnType(),signature.getSubstitutor());
      }
    }
 else {
      return isRawType(returnType,result.getSubstitutor());
    }
  }
  if (element instanceof PsiVariable) {
    final PsiType type=call.getInvokedExpression().getType();
    if (type instanceof GrClosureType) {
      final GrClosureSignature signature=((GrClosureType)type).getSignature();
      return isRawType(signature.getReturnType(),signature.getSubstitutor());
    }
  }
  return false;
}
