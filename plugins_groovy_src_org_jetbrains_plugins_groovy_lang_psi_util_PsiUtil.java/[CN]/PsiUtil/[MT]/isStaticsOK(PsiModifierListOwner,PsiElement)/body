{
  if (owner instanceof PsiMember) {
    if (place instanceof GrReferenceExpression) {
      GrExpression qualifier=((GrReferenceExpression)place).getQualifierExpression();
      if (qualifier != null) {
        PsiClass containingClass=((PsiMember)owner).getContainingClass();
        if (qualifier instanceof GrReferenceExpression) {
          if ("class".equals(((GrReferenceExpression)qualifier).getReferenceName())) {
            final PsiType type=qualifier.getType();
            if (type instanceof PsiClassType) {
              final PsiClass psiClass=((PsiClassType)type).resolve();
              if (psiClass != null && CommonClassNames.JAVA_LANG_CLASS.equals(psiClass.getQualifiedName())) {
                final PsiType[] params=((PsiClassType)type).getParameters();
                if (params.length == 1 && params[0] instanceof PsiClassType) {
                  if (place.getManager().areElementsEquivalent(containingClass,((PsiClassType)params[0]).resolve())) {
                    return owner.hasModifierProperty(GrModifier.STATIC);
                  }
                }
              }
            }
          }
          PsiElement qualifierResolved=((GrReferenceExpression)qualifier).resolve();
          if (qualifierResolved instanceof PsiClass || qualifierResolved instanceof PsiPackage) {
            if (owner instanceof PsiClass) {
              return true;
            }
            PsiClass javaLangClass=JavaPsiFacade.getInstance(place.getProject()).findClass(CommonClassNames.JAVA_LANG_CLASS,place.getResolveScope());
            if (javaLangClass != null) {
              if ((containingClass == null) || InheritanceUtil.isInheritorOrSelf(javaLangClass,containingClass,true)) {
                return true;
              }
            }
            return owner.hasModifierProperty(PsiModifier.STATIC);
          }
        }
 else         if (qualifier instanceof GrThisReferenceExpression && ((GrThisReferenceExpression)qualifier).getQualifier() == null) {
          final boolean isInStatic=isThisReferenceInStaticContext((GrThisReferenceExpression)qualifier);
          if (containingClass != null && CommonClassNames.JAVA_LANG_CLASS.equals(containingClass.getQualifiedName())) {
            return !(owner.hasModifierProperty(GrModifier.STATIC) && !CodeInsightSettings.getInstance().SHOW_STATIC_AFTER_INSTANCE);
          }
 else           if (isInStatic)           return owner.hasModifierProperty(GrModifier.STATIC);
        }
        if (owner instanceof PsiClass) {
          return false;
        }
        return !(owner.hasModifierProperty(PsiModifier.STATIC) && !CodeInsightSettings.getInstance().SHOW_STATIC_AFTER_INSTANCE);
      }
 else {
        if (((PsiMember)owner).getContainingClass() == null)         return true;
        if (owner instanceof GrVariable && !(owner instanceof GrField))         return true;
        if (owner.hasModifierProperty(GrModifier.STATIC))         return true;
        final GrMember placeOwner=PsiTreeUtil.getParentOfType(place,GrMember.class);
        if (placeOwner == null)         return true;
        return !placeOwner.hasModifierProperty(GrModifier.STATIC);
      }
    }
  }
  return true;
}
