{
  if (argumentTypes == null)   return true;
  PsiParameter[] parameters=method.getParameterList().getParameters();
  if (parameters.length - 1 > argumentTypes.length)   return false;
  if (parameters.length == 0 && argumentTypes.length > 0)   return false;
  if (parameters.length - 1 == argumentTypes.length) {
    final PsiType firstType=parameters[0].getType();
    final PsiClassType mapType=method.getManager().getElementFactory().createTypeByFQClassName("java.util.Map",method.getResolveScope());
    if (mapType.isAssignableFrom(firstType)) {
      final PsiParameter[] trimmed=new PsiParameter[parameters.length - 1];
      System.arraycopy(parameters,1,trimmed,0,trimmed.length);
      parameters=trimmed;
    }
 else     return false;
  }
  PsiManager manager=method.getManager();
  GlobalSearchScope scope=method.getResolveScope();
  for (int i=0; i < argumentTypes.length; i++) {
    PsiType argType=argumentTypes[i];
    PsiType parameterTypeToCheck;
    if (i < parameters.length - 1) {
      parameterTypeToCheck=parameters[i].getType();
    }
 else {
      PsiType lastParameterType=parameters[parameters.length - 1].getType();
      if (lastParameterType instanceof PsiArrayType && !(argType instanceof PsiArrayType)) {
        parameterTypeToCheck=((PsiArrayType)lastParameterType).getComponentType();
      }
 else       if (parameters.length == argumentTypes.length) {
        parameterTypeToCheck=lastParameterType;
      }
 else {
        return false;
      }
    }
    if (!TypesUtil.isAssignableByMethodCallConversion(parameterTypeToCheck,argType,manager,scope))     return false;
  }
  return true;
}
