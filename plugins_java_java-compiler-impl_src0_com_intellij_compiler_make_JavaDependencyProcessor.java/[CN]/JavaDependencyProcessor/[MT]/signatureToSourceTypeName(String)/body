{
  try {
switch (signature.charAt(0)) {
case 'B':
      return "byte";
case 'C':
    return "char";
case 'D':
  return "double";
case 'F':
return "float";
case 'I':
return "int";
case 'J':
return "long";
case 'L':
{
int index=signature.indexOf(';');
if (index < 0) throw new RuntimeException("Invalid signature: " + signature);
return signature.substring(1,index).replace('/','.');
}
case 'S':
return "short";
case 'Z':
return "boolean";
case '[':
{
int n;
StringBuffer brackets;
String type;
brackets=new StringBuffer();
for (n=0; signature.charAt(n) == '['; n++) brackets.append("[]");
type=signatureToSourceTypeName(signature.substring(n));
return type + brackets.toString();
}
case 'V':
return "void";
default :
throw new RuntimeException("Invalid signature: `" + signature + "'");
}
}
 catch (StringIndexOutOfBoundsException e) {
throw new RuntimeException("Invalid signature: " + e + ":"+ signature);
}
}
