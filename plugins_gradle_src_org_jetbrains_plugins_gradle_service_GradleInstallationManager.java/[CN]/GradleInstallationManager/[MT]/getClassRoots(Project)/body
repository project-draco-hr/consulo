{
  if (project == null) {
    project=ProjectManager.getInstance().getDefaultProject();
  }
  for (  Module module : myPlatformFacade.getModules(project)) {
    String path=module.getOptionValue(ExternalSystemConstants.LINKED_PROJECT_PATH_KEY);
    if (StringUtil.isEmpty(path)) {
      continue;
    }
    final Collection<File> libraries=getAllLibraries(project,path);
    if (libraries == null) {
      continue;
    }
    final LocalFileSystem localFileSystem=LocalFileSystem.getInstance();
    List<VirtualFile> result=new ArrayList<VirtualFile>();
    for (    File file : libraries) {
      if (ANY_GRADLE_JAR_FILE_PATTERN.matcher(file.getName()).matches() || GroovyConfigUtils.matchesGroovyAll(file.getName())) {
        final VirtualFile virtualFile=localFileSystem.refreshAndFindFileByIoFile(file);
        if (virtualFile != null) {
          ContainerUtil.addIfNotNull(result,ArchiveVfsUtil.getJarRootForLocalFile(virtualFile));
        }
      }
    }
    return result;
  }
  return null;
}
