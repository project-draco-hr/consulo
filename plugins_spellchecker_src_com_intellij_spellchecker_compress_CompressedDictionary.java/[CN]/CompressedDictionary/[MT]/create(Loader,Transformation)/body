{
  Alphabet alphabet=new Alphabet();
  final Encoder encoder=new Encoder(alphabet);
  final CompressedDictionary dictionary=new CompressedDictionary(alphabet,encoder,loader.getName());
  final List<UnitBitSet> bss=new ArrayList<UnitBitSet>();
  loader.load(new Consumer<String>(){
    @Override public void consume(    String s){
      String transformed=transform.transform(s);
      if (transformed != null) {
        UnitBitSet bs=encoder.encode(transformed,true);
        if (bs == null)         return;
        bss.add(bs);
      }
    }
  }
);
  for (  UnitBitSet bs : bss) {
    byte[] compressed=bs.pack();
    dictionary.addToDictionary(compressed);
  }
  dictionary.pack();
  return dictionary;
}
