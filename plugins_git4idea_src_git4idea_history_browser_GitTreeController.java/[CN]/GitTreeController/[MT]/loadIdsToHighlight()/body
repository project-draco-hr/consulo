{
  final Portion highlighted;
  final Date point=myFilterHolder.getCurrentPoint() == null ? null : myFilterHolder.getCurrentPoint().getFirst();
  highlighted=loadPortion(myHighlightingHolder.getStartingPoints(),point,myTravelDate,Collections.<ChangesFilter.Filter>emptyList(),-1);
  final Collection<ChangesFilter.Filter> filters=myHighlightingHolder.getFilters();
  final List<ChangesFilter.MemoryFilter> combined=ChangesFilter.combineFilters(filters);
  final Set<SHAHash> highlightedIds=new HashSet<SHAHash>();
  highlighted.iterateFrom(0,new Processor<GitCommit>(){
    public boolean process(    GitCommit gitCommit){
      for (      ChangesFilter.MemoryFilter filter : combined) {
        if (!filter.applyInMemory(gitCommit)) {
          return false;
        }
      }
      highlightedIds.add(gitCommit.getHash());
      return false;
    }
  }
);
  return highlightedIds;
}
