{
  final List<VcsException> errors=collectErrors(allExceptions);
  final int errorsSize=errors.size();
  final int warningsSize=allExceptions.size() - errorsSize;
  if (errorsSize == 0) {
    for (    CheckinHandler handler : checkinHandlers) {
      handler.checkinSuccessful();
    }
  }
 else {
    for (    CheckinHandler handler : checkinHandlers) {
      handler.checkinFailed(errors);
    }
    final ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
    final ChangeList failedList=changeListManager.addChangeList(VcsBundle.message("commit.dialog.failed.commit.template",changeList.getName()));
    failedList.setComment(commitMessage);
    changeListManager.moveChangesTo(failedList,failedChanges.toArray(new Change[failedChanges.size()]));
  }
  config.ERROR_OCCURED=errorsSize > 0;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (errorsSize > 0 && warningsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.failed.with.errors.and.warnings"),VcsBundle.message("message.title.commit"));
      }
 else       if (errorsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.failed.with.errors"),VcsBundle.message("message.title.commit"));
      }
 else       if (warningsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.finished.with.warnings"),VcsBundle.message("message.title.commit"));
      }
    }
  }
,ModalityState.NON_MMODAL);
}
