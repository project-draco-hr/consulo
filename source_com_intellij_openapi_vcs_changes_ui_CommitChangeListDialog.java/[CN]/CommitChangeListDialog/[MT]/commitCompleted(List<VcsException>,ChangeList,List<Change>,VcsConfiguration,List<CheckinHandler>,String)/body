{
  final List<VcsException> errors=collectErrors(allExceptions);
  final int errorsSize=errors.size();
  final int warningsSize=allExceptions.size() - errorsSize;
  if (errorsSize == 0) {
    for (    CheckinHandler handler : checkinHandlers) {
      handler.checkinSuccessful();
    }
    final ChangeListManager changeListManager=ChangeListManager.getInstance(myProject);
    final ChangeList list=myBrowser.getSelectedChangeList();
    final List<Change> includedChanges=getIncludedChanges();
    if (list instanceof LocalChangeList) {
      final LocalChangeList localList=(LocalChangeList)list;
      if (includedChanges.containsAll(list.getChanges()) && !localList.isDefault()) {
        changeListManager.removeChangeList(localList);
      }
 else       if (!includedChanges.containsAll(list.getChanges()) && localList.isDefault() && myAllOfDefaultChangeListChangesIncluded) {
        ApplicationManager.getApplication().invokeLater(new Runnable(){
          public void run(){
            final int rc=Messages.showYesNoDialog(myProject,"You have exluded some files from default change list when commiting.\n" + "Would you like remaining work to be moved to another change list?","Partial Default Change List Commit",Messages.getQuestionIcon());
            if (rc == 0) {
              final Collection<Change> changes=changeListManager.getDefaultChangelist().getChanges();
              MoveChangesToAnotherListAction.askAndMove(myProject,changes.toArray(new Change[changes.size()]));
            }
          }
        }
,ModalityState.NON_MMODAL);
      }
    }
  }
 else {
    for (    CheckinHandler handler : checkinHandlers) {
      handler.checkinFailed(errors);
    }
    moveToFailedList(changeList,commitMessage,failedChanges,VcsBundle.message("commit.dialog.failed.commit.template",changeList.getName()));
  }
  config.ERROR_OCCURED=errorsSize > 0;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      if (errorsSize > 0 && warningsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.failed.with.errors.and.warnings"),VcsBundle.message("message.title.commit"));
      }
 else       if (errorsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.failed.with.errors"),VcsBundle.message("message.title.commit"));
      }
 else       if (warningsSize > 0) {
        Messages.showErrorDialog(VcsBundle.message("message.text.commit.finished.with.warnings"),VcsBundle.message("message.title.commit"));
      }
    }
  }
,ModalityState.NON_MMODAL);
}
