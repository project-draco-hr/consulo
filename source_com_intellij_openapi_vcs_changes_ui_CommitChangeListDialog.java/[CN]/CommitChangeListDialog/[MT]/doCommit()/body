{
  final Runnable checkinAction=new Runnable(){
    public void run(){
      final List<VcsException> vcsExceptions=new ArrayList<VcsException>();
      Runnable checkinAction=new Runnable(){
        public void run(){
          try {
            Map<AbstractVcs,List<Change>> changesByVcs=new HashMap<AbstractVcs,List<Change>>();
            for (            Change change : myIncludedChanges) {
              final AbstractVcs vcs=getVcsForChange(change);
              if (vcs != null) {
                List<Change> vcsChanges=changesByVcs.get(vcs);
                if (vcsChanges == null) {
                  vcsChanges=new ArrayList<Change>();
                  changesByVcs.put(vcs,vcsChanges);
                }
                vcsChanges.add(change);
              }
            }
            for (            AbstractVcs vcs : changesByVcs.keySet()) {
              final CheckinEnvironment environment=vcs.getCheckinEnvironment();
              if (environment != null) {
                final List<Change> vcsChanges=changesByVcs.get(vcs);
                List<FilePath> paths=new ArrayList<FilePath>();
                for (                Change change : vcsChanges) {
                  paths.add(getFilePath(change));
                }
                vcsExceptions.addAll(environment.commit(paths.toArray(new FilePath[paths.size()]),myProject,getCommitMessage()));
              }
            }
            final LvcsAction lvcsAction=LocalVcs.getInstance(myProject).startAction(myActionName,"",true);
            VirtualFileManager.getInstance().refresh(true,new Runnable(){
              public void run(){
                lvcsAction.finish();
                FileStatusManager.getInstance(myProject).fileStatusesChanged();
              }
            }
);
            AbstractVcsHelper.getInstance(myProject).showErrors(vcsExceptions,myActionName);
          }
  finally {
            commitCompleted(vcsExceptions,VcsConfiguration.getInstance(myProject),myHandlers);
          }
        }
      }
;
      ProgressManager.getInstance().runProcessWithProgressSynchronously(checkinAction,myActionName,true,myProject);
    }
  }
;
  AbstractVcsHelper.getInstance(myProject).optimizeImportsAndReformatCode(getVirtualFiles(),VcsConfiguration.getInstance(myProject),checkinAction,true);
}
