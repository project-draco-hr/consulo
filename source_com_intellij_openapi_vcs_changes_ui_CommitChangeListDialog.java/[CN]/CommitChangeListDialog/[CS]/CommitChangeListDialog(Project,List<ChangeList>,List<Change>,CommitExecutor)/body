{
  super(project,true);
  myProject=project;
  myExecutor=executor;
  myBrowser=new ChangesBrowser(project,changeLists,changes);
  myActionName=myExecutor != null ? myExecutor.getActionDescription() : VcsBundle.message("commit.dialog.title");
  myAdditionalOptionsPanel=new JPanel();
  myCommitMessageArea=new CommitMessage();
  setCommitMessage(CheckinDialog.getInitialMessage(getPaths(),project));
  myCommitMessageArea.init();
  myAdditionalOptionsPanel.setLayout(new BorderLayout());
  Box optionsBox=Box.createVerticalBox();
  boolean hasVcsOptions=false;
  Box vcsCommitOptions=Box.createVerticalBox();
  if (myExecutor == null) {
    hasVcsOptions=false;
    final List<AbstractVcs> vcses=getAffectedVcses();
    for (    AbstractVcs vcs : vcses) {
      final CheckinEnvironment checkinEnvironment=vcs.getCheckinEnvironment();
      if (checkinEnvironment != null) {
        final RefreshableOnComponent options=checkinEnvironment.createAdditionalOptionsPanelForCheckinProject(this);
        if (options != null) {
          JPanel vcsOptions=new JPanel(new BorderLayout());
          vcsOptions.add(options.getComponent());
          vcsOptions.setBorder(IdeBorderFactory.createTitledHeaderBorder(vcs.getDisplayName()));
          vcsCommitOptions.add(vcsOptions);
          myAdditionalComponents.add(options);
          hasVcsOptions=true;
        }
      }
    }
  }
 else {
    final JComponent ui=myExecutor.getAdditionalConfigurationUI();
    if (ui != null) {
      vcsCommitOptions.add(ui);
      hasVcsOptions=true;
    }
  }
  if (hasVcsOptions) {
    vcsCommitOptions.add(Box.createVerticalGlue());
    optionsBox.add(vcsCommitOptions);
  }
  boolean beforeVisible=false;
  boolean afterVisible=false;
  Box beforeBox=Box.createVerticalBox();
  Box afterBox=Box.createVerticalBox();
  final List<CheckinHandlerFactory> handlerFactories=ProjectLevelVcsManager.getInstance(project).getRegisteredCheckinHandlerFactories();
  for (  CheckinHandlerFactory factory : handlerFactories) {
    final CheckinHandler handler=factory.createHandler(this);
    myHandlers.add(handler);
    final RefreshableOnComponent beforePanel=handler.getBeforeCheckinConfigurationPanel();
    if (beforePanel != null) {
      beforeBox.add(beforePanel.getComponent());
      beforeVisible=true;
      myAdditionalComponents.add(beforePanel);
    }
    final RefreshableOnComponent afterPanel=handler.getAfterCheckinConfigurationPanel();
    if (afterPanel != null) {
      afterBox.add(afterPanel.getComponent());
      afterVisible=true;
      myAdditionalComponents.add(afterPanel);
    }
  }
  if (beforeVisible) {
    beforeBox.add(Box.createVerticalGlue());
    beforeBox.setBorder(IdeBorderFactory.createTitledHeaderBorder(VcsBundle.message("border.standard.checkin.options.group")));
    optionsBox.add(beforeBox);
  }
  if (afterVisible) {
    afterBox.add(Box.createVerticalGlue());
    afterBox.setBorder(IdeBorderFactory.createTitledHeaderBorder(VcsBundle.message("border.standard.after.checkin.options.group")));
    optionsBox.add(afterBox);
  }
  if (hasVcsOptions || beforeVisible || afterVisible) {
    optionsBox.add(Box.createVerticalGlue());
    myAdditionalOptionsPanel.add(optionsBox,BorderLayout.NORTH);
  }
  setOKButtonText(getCommitActionName());
  setTitle(myActionName);
  restoreState();
  init();
}
