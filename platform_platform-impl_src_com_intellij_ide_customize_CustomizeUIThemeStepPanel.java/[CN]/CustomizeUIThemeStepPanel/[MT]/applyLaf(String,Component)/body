{
  UIManager.LookAndFeelInfo info=getLookAndFeelInfo(lafName);
  if (info == null)   return;
  try {
    UIManager.setLookAndFeel(info.getClassName());
    if (!myInitial) {
      LafManager.getInstance().setCurrentLookAndFeel(info);
      if (info instanceof LafWithColorScheme) {
        EditorColorsManager editorColorsManager=EditorColorsManager.getInstance();
        EditorColorsScheme scheme=editorColorsManager.getScheme(((LafWithColorScheme)info).getColorSchemeName());
        if (scheme != null) {
          editorColorsManager.setGlobalScheme(scheme);
        }
      }
    }
    Window window=SwingUtilities.getWindowAncestor(component);
    if (window != null) {
      window.setBackground(new Color(UIUtil.getPanelBackground().getRGB()));
      SwingUtilities.updateComponentTreeUI(window);
    }
    if (myColumnMode) {
      myPreviewLabel.setIcon(myLafNames.get(lafName));
      myPreviewLabel.setBorder(BorderFactory.createLineBorder(UIManager.getColor("Label.foreground")));
    }
  }
 catch (  ClassNotFoundException e) {
    e.printStackTrace();
  }
catch (  InstantiationException e) {
    e.printStackTrace();
  }
catch (  IllegalAccessException e) {
    e.printStackTrace();
  }
catch (  UnsupportedLookAndFeelException e) {
    e.printStackTrace();
  }
}
