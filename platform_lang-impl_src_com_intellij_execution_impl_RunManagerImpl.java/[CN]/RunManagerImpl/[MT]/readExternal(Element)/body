{
  clear();
  final Comparator<Element> comparator=new Comparator<Element>(){
    public int compare(    Element a,    Element b){
      final boolean aDefault=Boolean.valueOf(a.getAttributeValue("default","false"));
      final boolean bDefault=Boolean.valueOf(b.getAttributeValue("default","false"));
      return aDefault == bDefault ? 0 : aDefault ? -1 : 1;
    }
  }
;
  final List children=parentNode.getChildren();
  final List<Element> sortedElements=new ArrayList<Element>();
  for (  final Object aChildren : children) {
    final Element element=(Element)aChildren;
    if (Comparing.strEqual(element.getName(),CONFIGURATION)) {
      sortedElements.add(element);
    }
  }
  Collections.sort(sortedElements,comparator);
  for (  final Element element : sortedElements) {
    if (loadConfiguration(element,false) == null) {
      if (myUnknownElements == null)       myUnknownElements=new ArrayList<Element>(2);
      myUnknownElements.add(element);
    }
  }
  myOrder.readExternal(parentNode);
  myOrdered=false;
  myLoadedSelectedConfigurationUniqueName=parentNode.getAttributeValue(SELECTED_ATTR);
  setSelectedConfigurationId(findConfigurationIdByUniqueName(myLoadedSelectedConfigurationUniqueName));
  fireBeforeRunTasksUpdated();
  fireRunConfigurationSelected();
}
