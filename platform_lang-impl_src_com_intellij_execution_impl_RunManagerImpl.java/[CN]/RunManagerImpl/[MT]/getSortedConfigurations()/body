{
  if (!myOrdered) {
    List<Pair<String,RunnerAndConfigurationSettings>> order=new ArrayList<Pair<String,RunnerAndConfigurationSettings>>(myConfigurations.size());
    final List<String> folderNames=new ArrayList<String>();
    for (    RunnerAndConfigurationSettings each : myConfigurations.values()) {
      order.add(Pair.create(getUniqueName(each.getConfiguration()),each));
      String folderName=each.getFolderName();
      if (folderName != null && !folderNames.contains(folderName)) {
        folderNames.add(folderName);
      }
    }
    folderNames.add(null);
    myConfigurations.clear();
    if (myOrder.isEmpty()) {
      Collections.sort(order,new Comparator<Pair<String,RunnerAndConfigurationSettings>>(){
        @Override public int compare(        Pair<String,RunnerAndConfigurationSettings> o1,        Pair<String,RunnerAndConfigurationSettings> o2){
          boolean temporary1=o1.getSecond().isTemporary();
          boolean temporary2=o2.getSecond().isTemporary();
          if (temporary1 == temporary2) {
            return o1.first.compareTo(o2.first);
          }
 else {
            return temporary1 ? 1 : -1;
          }
        }
      }
);
    }
 else {
      Collections.sort(order,new Comparator<Pair<String,RunnerAndConfigurationSettings>>(){
        @Override public int compare(        Pair<String,RunnerAndConfigurationSettings> o1,        Pair<String,RunnerAndConfigurationSettings> o2){
          int i1=folderNames.indexOf(o1.getSecond().getFolderName());
          int i2=folderNames.indexOf(o2.getSecond().getFolderName());
          if (i1 != i2) {
            return i1 - i2;
          }
          boolean temporary1=o1.getSecond().isTemporary();
          boolean temporary2=o2.getSecond().isTemporary();
          if (temporary1 == temporary2) {
            return myOrder.indexOf(o1.first) - myOrder.indexOf(o2.first);
          }
 else {
            return temporary1 ? 1 : -1;
          }
        }
      }
);
    }
    for (    Pair<String,RunnerAndConfigurationSettings> each : order) {
      RunnerAndConfigurationSettings setting=each.second;
      myConfigurations.put(setting.getConfiguration().getUniqueID(),setting);
    }
    myOrdered=true;
  }
  return myConfigurations.values();
}
