{
  final Element configurationElement=new Element(elementType);
  parentNode.addContent(configurationElement);
  settings.writeExternal(configurationElement);
  if (!(settings.getConfiguration() instanceof UnknownRunConfiguration)) {
    final Map<Key<? extends BeforeRunTask>,BeforeRunTask> tasks=getBeforeRunTasks(settings.getConfiguration());
    Map<Key<? extends BeforeRunTask>,BeforeRunTask> templateTasks;
    if (!settings.isTemplate()) {
      final RunnerAndConfigurationSettingsImpl templateSettings=getConfigurationTemplate(settings.getFactory());
      templateTasks=getBeforeRunTasks(templateSettings.getConfiguration());
    }
 else {
      templateTasks=null;
    }
    final List<Key<? extends BeforeRunTask>> order=new ArrayList<Key<? extends BeforeRunTask>>(tasks.keySet());
    Collections.sort(order,new Comparator<Key<? extends BeforeRunTask>>(){
      public int compare(      Key<? extends BeforeRunTask> o1,      Key<? extends BeforeRunTask> o2){
        return o1.toString().compareToIgnoreCase(o2.toString());
      }
    }
);
    final Element methodsElement=new Element(METHOD);
    for (    Key<? extends BeforeRunTask> providerID : order) {
      final BeforeRunTask beforeRunTask=tasks.get(providerID);
      if (templateTasks != null) {
        final BeforeRunTask templateTask=templateTasks.get(providerID);
        if (beforeRunTask.equals(templateTask)) {
          continue;
        }
      }
      final Element child=new Element(OPTION);
      child.setAttribute(NAME_ATTR,providerID.toString());
      beforeRunTask.writeExternal(child);
      methodsElement.addContent(child);
    }
    configurationElement.addContent(methodsElement);
  }
}
