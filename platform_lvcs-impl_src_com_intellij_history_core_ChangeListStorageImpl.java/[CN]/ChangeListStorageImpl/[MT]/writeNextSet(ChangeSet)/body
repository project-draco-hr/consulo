{
  if (isCompletelyBroken)   return;
  try {
    int id=myStorage.createNextRecord();
    byte[] writtenBytes=changeSetToBytes(changeSet);
    assertCorrectlyWritten(writtenBytes);
    AbstractStorage.StorageDataOutput out=myStorage.writeStream(id,true);
    try {
      out.write(writtenBytes);
    }
  finally {
      out.close();
    }
    myStorage.setLastId(myLastId);
    myStorage.force();
    Pair<Long,Integer> os=myStorage.getOffsetAndSize(id);
    String message="Block was written: " + id + " offset: "+ os.first+ " size: "+ os.second+ " real bytes size: "+ writtenBytes.length;
    LocalHistoryLog.LOG.info(message);
    if (os.second != writtenBytes.length)     throw new IOException("wrong space was allocated for the record!\n" + message);
    if (ApplicationManagerEx.getApplicationEx().isInternal()) {
      try {
        byte[] readBytes=myStorage.readBytes(id);
        assertCorrectlyWritten(readBytes);
      }
 catch (      IOException e) {
        handleError(e,"failed to check the just-written block: " + id);
      }
    }
  }
 catch (  IOException e) {
    handleError(e,null);
  }
}
