{
  return new Function<Project,GradleExecutionSettings>(){
    private final GradleJavaHelper myJavaHelper=new GradleJavaHelper();
    @Override public GradleExecutionSettings fun(    Project project){
      GradleSettings settings=GradleSettings.getInstance(project);
      File gradleHome=myInstallationManager.getGradleHome(project);
      String localGradlePath=null;
      if (gradleHome != null) {
        try {
          localGradlePath=gradleHome.getCanonicalPath();
        }
 catch (        IOException e) {
          localGradlePath=gradleHome.getAbsolutePath();
        }
      }
      GradleExecutionSettings result=new GradleExecutionSettings(localGradlePath,settings.getServiceDirectoryPath(),settings.isPreferLocalInstallationToWrapper());
      String javaHome=myJavaHelper.getJdkHome(project);
      if (!StringUtil.isEmpty(javaHome)) {
        LOG.info("Instructing gradle to use java from " + javaHome);
      }
      result.setJavaHome(javaHome);
      return result;
    }
  }
;
}
