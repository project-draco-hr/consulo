{
  ExternalSystemUtil.addBundle(parameters.getClassPath(),GradleBundle.PATH_TO_BUNDLE,GradleBundle.class);
  String toolingApiPath=PathManager.getJarPathForClass(ProjectConnection.class);
  if (toolingApiPath == null) {
    LOG.warn(GradleBundle.message("gradle.generic.text.error.jar.not.found"));
    throw new ExecutionException("Can't find gradle libraries");
  }
  File gradleJarsDir=new File(toolingApiPath).getParentFile();
  String[] gradleJars=gradleJarsDir.list(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(".jar");
    }
  }
);
  if (gradleJars == null) {
    LOG.warn(GradleBundle.message("gradle.generic.text.error.jar.not.found"));
    throw new ExecutionException("Can't find gradle libraries at " + gradleJarsDir.getAbsolutePath());
  }
  for (  String jar : gradleJars) {
    parameters.getClassPath().add(new File(gradleJarsDir,jar).getAbsolutePath());
  }
}
