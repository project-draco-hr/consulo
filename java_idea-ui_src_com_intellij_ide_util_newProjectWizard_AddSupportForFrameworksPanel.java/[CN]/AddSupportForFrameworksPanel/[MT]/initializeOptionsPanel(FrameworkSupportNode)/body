{
  final String id=node.getProvider().getId();
  if (!myInitializedOptionsPanelIds.contains(id)) {
    VerticalFlowLayout layout=new VerticalFlowLayout();
    layout.setVerticalFill(true);
    final JPanel optionsPanel=new JPanel(layout);
    JComponent separator=SeparatorFactory.createSeparator(node.getTitle() + " Settings",null);
    separator.setBorder(IdeBorderFactory.createEmptyBorder(0,0,5,5));
    optionsPanel.add(separator);
    final FrameworkSupportConfigurable configurable=node.getConfigurable();
    final JComponent component=configurable.getComponent();
    if (component != null) {
      optionsPanel.add(component);
    }
    final boolean addSeparator=component != null;
    final JPanel librariesOptionsPanelWrapper=new JPanel(new BorderLayout());
    optionsPanel.add(librariesOptionsPanelWrapper);
    configurable.addListener(new FrameworkSupportConfigurableListener(){
      public void frameworkVersionChanged(){
        updateLibrariesPanel(librariesOptionsPanelWrapper,node,addSeparator);
      }
    }
);
    myModel.addFrameworkListener(new FrameworkSupportModelAdapter(){
      @Override public void wizardStepUpdated(){
        if (node.isSettingsObsolete()) {
          updateLibrariesPanel(librariesOptionsPanelWrapper,node,addSeparator);
        }
      }
    }
,this);
    addLibrariesOptionsPanel(node,librariesOptionsPanelWrapper,addSeparator);
    myOptionsPanel.add(id,optionsPanel);
    myInitializedOptionsPanelIds.add(id);
  }
}
