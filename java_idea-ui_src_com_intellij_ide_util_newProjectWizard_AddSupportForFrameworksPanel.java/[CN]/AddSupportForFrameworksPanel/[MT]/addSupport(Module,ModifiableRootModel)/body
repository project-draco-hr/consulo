{
  List<Library> addedLibraries=new ArrayList<Library>();
  List<FrameworkSupportNode> selectedFrameworks=getFrameworkNodes(true);
  sortFrameworks(selectedFrameworks);
  List<FrameworkSupportConfigurable> selectedConfigurables=new ArrayList<FrameworkSupportConfigurable>();
  for (  FrameworkSupportNode node : selectedFrameworks) {
    FrameworkSupportConfigurable configurable=node.getConfigurable();
    selectedConfigurables.add(configurable);
    final LibraryCompositionSettings settings=node.getLibraryCompositionSettings(false);
    Library library=settings != null ? settings.addLibraries(rootModel,addedLibraries,myLibrariesContainer) : null;
    configurable.addSupport(module,rootModel,library);
  }
  for (  FrameworkSupportNode node : selectedFrameworks) {
    FrameworkSupportProvider provider=node.getProvider();
    if (provider instanceof FacetBasedFrameworkSupportProvider && !addedLibraries.isEmpty()) {
      ((FacetBasedFrameworkSupportProvider)provider).processAddedLibraries(module,addedLibraries);
    }
  }
  for (  FrameworkSupportCommunicator communicator : FrameworkSupportCommunicator.EP_NAME.getExtensions()) {
    communicator.onFrameworkSupportAdded(module,rootModel,selectedConfigurables,myModel);
  }
}
