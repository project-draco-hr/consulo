{
  PsiElement parent=position.getParent();
  if (!(parent instanceof PsiJavaCodeReferenceElement)) {
    return;
  }
  PsiElement qualifier=((PsiJavaCodeReferenceElement)parent).getQualifier();
  if (!(qualifier instanceof PsiJavaCodeReferenceElement) || ((PsiJavaCodeReferenceElement)qualifier).isQualified()) {
    return;
  }
  PsiElement target=((PsiJavaCodeReferenceElement)qualifier).resolve();
  if (target != null && !(target instanceof PsiPackage)) {
    return;
  }
  String fullPrefix=position.getContainingFile().getText().substring(parent.getTextRange().getStartOffset(),parameters.getOffset());
  CompletionResultSet qualifiedCollector=result.withPrefixMatcher(fullPrefix);
  ElementFilter filter=JavaCompletionContributor.getReferenceFilter(position);
  for (  LookupElement base : suggestQualifierItems(parameters,(PsiJavaCodeReferenceElement)qualifier,filter)) {
    PsiType type=JavaCompletionUtil.getLookupElementType(base);
    if (type != null && !PsiType.VOID.equals(type)) {
      PsiReferenceExpression ref=ReferenceExpressionCompletionContributor.createMockReference(position,type,base);
      for (      final LookupElement item : JavaSmartCompletionContributor.completeReference(position,ref,filter,true,true,parameters,result.getPrefixMatcher())) {
        qualifiedCollector.addElement(new JavaChainLookupElement(base,item));
      }
    }
  }
}
