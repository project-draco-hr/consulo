{
  VirtualFile m1=createModulePom("m1","<groupId>test</groupId>" + "<artifactId>m1</artifactId>" + "<version>1</version>"+ "<dependencies>"+ "  <dependency>"+ "    <groupId>test</groupId>"+ "    <artifactId>m2</artifactId>"+ "    <version>1</version>"+ "    <optional>true</optional>"+ "  </dependency>"+ "  <dependency>"+ "    <groupId>junit</groupId>"+ "    <artifactId>junit</artifactId>"+ "    <version>4.0</version>"+ "    <optional>true</optional>"+ "  </dependency>"+ "</dependencies>");
  VirtualFile m2=createModulePom("m2","<groupId>test</groupId>" + "<artifactId>m2</artifactId>" + "<version>1</version>");
  importProjects(m1,m2);
  assertModules("m1","m2");
  Module user=createModule("user");
  ModifiableRootModel model=ModuleRootManager.getInstance(user).getModifiableModel();
  model.addModuleOrderEntry(getModule("m1"));
  VirtualFile out=user.getModuleFile().getParent().createChildDirectory(this,"output");
  model.getModuleExtension(CompilerModuleExtension.class).setCompilerOutputPath(out);
  model.getModuleExtension(CompilerModuleExtension.class).inheritCompilerOutputPath(false);
  model.commit();
  assertModuleModuleDeps("m1","m2");
  assertModuleLibDeps("m1","Maven: junit:junit:4.0");
  assertModuleModuleDeps("user","m1");
  assertModuleLibDeps("user");
  setupJdkForModule("user");
  setupJdkForModule("m1");
  setupJdkForModule("m2");
  assertModuleClasspath("user",getProjectPath() + "/user/output",getProjectPath() + "/m1/target/classes",getProjectPath() + "/m2/target/classes",getRepositoryPath() + "/junit/junit/4.0/junit-4.0.jar");
  assertModuleClasspath("m1",getProjectPath() + "/m1/target/classes",getProjectPath() + "/m2/target/classes",getRepositoryPath() + "/junit/junit/4.0/junit-4.0.jar");
}
