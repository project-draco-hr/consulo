{
  reset();
  myTargetVisual=targetVisual;
  SEARCH_KEY.visualLine=targetVisual.line;
  int i=Collections.binarySearch(cache,SEARCH_KEY);
  if (i >= 0) {
    CacheEntry cacheEntry=cache.get(i);
    if (cacheEntry.visualLine == targetVisual.line) {
      if (targetVisual.column == 0) {
        setEagerMatch(cacheEntry.buildStartLinePosition().buildLogicalPosition());
      }
 else       if (targetVisual.column == cacheEntry.endVisualColumn) {
        setEagerMatch(cacheEntry.buildEndLinePosition().buildLogicalPosition());
      }
 else       if (targetVisual.column > cacheEntry.endVisualColumn) {
        EditorPosition position=cacheEntry.buildEndLinePosition();
        int columnsDiff=targetVisual.column - cacheEntry.endVisualColumn;
        position.visualColumn+=columnsDiff;
        if (myStorage.getSoftWrap(cacheEntry.endOffset) == null) {
          position.logicalColumn+=columnsDiff;
        }
 else {
          position.softWrapColumnDiff+=columnsDiff;
        }
        setEagerMatch(position.buildLogicalPosition());
      }
 else {
        setTargetEntry(cacheEntry,true);
      }
    }
 else {
      setInitialPosition(cacheEntry.buildStartLinePosition());
    }
    return;
  }
  i=-i - 1;
  if (i > 0 && i <= cache.size()) {
    CacheEntry entry=cache.get(i - 1);
    EditorPosition position=entry.buildEndLinePosition();
    position.onNewLine(true);
    setInitialPosition(position);
  }
 else {
    setFirstInitialPosition();
  }
}
