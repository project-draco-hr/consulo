{
  Document document=myEditor.getDocument();
  CacheEntry targetEntry=getTargetEntry();
  if (targetEntry != null && targetEntry.startOffset == offset && myStorage.getSoftWrap(offset) != null) {
    return null;
  }
  int i=MappingUtil.getCacheEntryIndexForOffset(offset,document,myCache);
  if (i < 0) {
    return null;
  }
  CacheEntry cacheEntry=myCache.get(i);
  if (cacheEntry.visualLine < myTargetVisual.line) {
    return null;
  }
  if (offset < cacheEntry.startOffset || myTargetVisual.line < cacheEntry.visualLine || (position.visualColumn + offset - position.offset >= myTargetVisual.column)) {
    int linesDiff=myTargetVisual.line - position.visualLine;
    if (linesDiff > 0) {
      position.logicalColumn=myTargetVisual.column;
      position.offset=document.getLineStartOffset(position.logicalLine + linesDiff);
      position.offset+=myTargetVisual.column;
    }
 else {
      int columnsDiff=myTargetVisual.column - position.visualColumn;
      position.logicalColumn+=columnsDiff;
      position.offset+=columnsDiff;
    }
    position.offset=Math.min(position.offset,document.getLineEndOffset(position.logicalLine));
    position.visualLine+=linesDiff;
    position.visualColumn=myTargetVisual.column;
    position.logicalLine+=linesDiff;
    return position.buildLogicalPosition();
  }
  return null;
}
