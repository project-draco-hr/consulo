{
  final PsiClass aClass=p.getClassToProcess();
  PsiManagerImpl psiManager=(PsiManagerImpl)PsiManager.getInstance(aClass.getProject());
  RepositoryManager repositoryManager=psiManager.getRepositoryManager();
  RepositoryElementsManager repositoryElementsManager=psiManager.getRepositoryElementsManager();
  RepositoryIndex repositoryIndex=repositoryManager.getIndex();
  final SearchScope useScope=aClass.getUseScope();
  final VirtualFileFilter rootFilter;
  if (useScope instanceof GlobalSearchScope) {
    rootFilter=repositoryIndex.rootFilterBySearchScope((GlobalSearchScope)useScope);
  }
 else {
    rootFilter=null;
  }
  long[] candidateIds=repositoryIndex.getNameOccurrencesInExtendsLists(aClass.getName(),rootFilter);
  for (  long candidateId : candidateIds) {
    PsiClass candidate=(PsiClass)repositoryElementsManager.findOrCreatePsiElementById(candidateId);
    LOG.assertTrue(candidate.isValid());
    if (!consumer.process(candidate)) {
      return false;
    }
  }
  return true;
}
