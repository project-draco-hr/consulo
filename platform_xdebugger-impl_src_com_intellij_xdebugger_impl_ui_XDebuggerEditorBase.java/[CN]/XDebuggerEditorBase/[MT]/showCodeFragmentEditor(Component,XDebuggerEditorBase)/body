{
  DialogWrapper dialog=new DialogWrapper(parent,true){
    CodeFragmentInputComponent inputComponent=new CodeFragmentInputComponent(baseEditor.getProject(),baseEditor.getEditorsProvider(),mySourcePosition,XExpressionImpl.changeMode(baseEditor.getExpression(),EvaluationMode.CODE_FRAGMENT),null,null);
{
      setTitle("Edit");
      init();
    }
    @Nullable @Override protected String getDimensionServiceKey(){
      return "#xdebugger.code.fragment.editor";
    }
    @Nullable @Override protected JComponent createCenterPanel(){
      JPanel component=inputComponent.getMainComponent();
      component.setPreferredSize(JBUI.size(300,200));
      return component;
    }
    @Override protected void doOKAction(){
      super.doOKAction();
      baseEditor.setExpression(inputComponent.getInputEditor().getExpression());
      JComponent component=baseEditor.getPreferredFocusedComponent();
      if (component != null) {
        IdeFocusManager.findInstance().requestFocus(component,false);
      }
    }
    @Nullable @Override public JComponent getPreferredFocusedComponent(){
      return inputComponent.getInputEditor().getPreferredFocusedComponent();
    }
  }
;
  dialog.show();
}
