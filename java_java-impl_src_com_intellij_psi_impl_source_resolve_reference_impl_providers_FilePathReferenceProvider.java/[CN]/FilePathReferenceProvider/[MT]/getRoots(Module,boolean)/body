{
  if (thisModule == null)   return Collections.emptyList();
  List<Module> modules=new ArrayList<Module>();
  modules.add(thisModule);
  ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(thisModule);
  modules.addAll(Arrays.asList(moduleRootManager.getDependencies()));
  List<PsiFileSystemItem> result=new ArrayList<PsiFileSystemItem>();
  final PsiManager psiManager=PsiManager.getInstance(thisModule.getProject());
  if (includingClasses) {
    VirtualFile[] libraryUrls=moduleRootManager.getFiles(OrderRootType.CLASSES);
    for (    VirtualFile file : libraryUrls) {
      PsiDirectory directory=psiManager.findDirectory(file);
      if (directory != null) {
        result.add(directory);
      }
    }
  }
  for (  Module module : modules) {
    moduleRootManager=ModuleRootManager.getInstance(module);
    VirtualFile[] sourceRoots=moduleRootManager.getSourceRoots();
    for (    VirtualFile root : sourceRoots) {
      final PsiDirectory directory=psiManager.findDirectory(root);
      if (directory != null) {
        final PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage(directory);
        if (aPackage != null && aPackage.getName() != null) {
          result.add(PackagePrefixFileSystemItem.create(directory));
        }
 else {
          result.add(directory);
        }
      }
    }
  }
  return result;
}
