{
  final StringBuilder b=new StringBuilder();
  b.append("default colors: foreground=").append(myDefaultForeground).append(", background=").append(myDefaultBackground).append("; output infos: ");
  boolean first=true;
  MarkupIterator it=new MarkupIterator();
  try {
    while (it.hasNext()) {
      if (first) {
        b.append(',');
      }
      it.processNext(new MarkupHandler(){
        @Override public void handleText(        int startOffset,        int endOffset) throws Exception {
          b.append("text(").append(startOffset).append(",").append(endOffset).append(")");
        }
        @Override public void handleForeground(        int foregroundId) throws Exception {
          b.append("foreground(").append(foregroundId).append(")");
        }
        @Override public void handleBackground(        int backgroundId) throws Exception {
          b.append("background(").append(backgroundId).append(")");
        }
        @Override public void handleFont(        int fontNameId) throws Exception {
          b.append("font(").append(fontNameId).append(")");
        }
        @Override public void handleStyle(        int style) throws Exception {
          b.append("style(").append(style).append(")");
        }
        @Override public boolean canHandleMore(){
          return true;
        }
      }
);
      first=false;
    }
    return b.toString();
  }
  finally {
    it.dispose();
  }
}
