{
  final GlobalSearchScope scope=GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module);
  final PsiManager psiManager=PsiManager.getInstance(module.getProject());
  final PsiClass aClass=JavaPsiFacade.getInstance(psiManager.getProject()).findClass(component.getComponentClassName(),scope);
  if (aClass == null) {
    return;
  }
  for (  final IProperty prop : component.getModifiedProperties()) {
    final PsiMethod getter=PropertyUtil.findPropertyGetter(aClass,prop.getName(),false,true);
    if (getter == null)     continue;
    final LanguageLevel languageLevel=LanguageLevelUtil.getEffectiveLanguageLevel(module);
    if (Java15APIUsageInspection.isForbiddenApiUsage(getter,languageLevel)) {
      registerError(component,collector,prop,"@since " + Java15APIUsageInspection.getShortName(languageLevel));
    }
  }
}
