{
  try {
    Object[] resultMembers;
    int offset=editor.getCaretModel().getOffset();
    int lbraceOffset=aClass.getLBrace().getTextOffset();
    if (offset <= lbraceOffset || aClass.isEnum()) {
      ArrayList<PsiElement> list=new ArrayList<PsiElement>();
      for (      CandidateInfo candidate : candidates) {
        PsiMethod[] prototypes=overrideOrImplementMethod(aClass,(PsiMethod)candidate.getElement(),candidate.getSubstitutor(),copyJavadoc,insertAtOverride);
        for (        PsiMethod prototype : prototypes) {
          PsiElement anchor=getDefaultAnchorToOverrideOrImplement(aClass,(PsiMethod)candidate.getElement(),candidate.getSubstitutor());
          PsiElement result;
          if (anchor != null) {
            result=aClass.addBefore(prototype,anchor);
          }
 else {
            result=aClass.add(prototype);
          }
          list.add(result);
        }
      }
      resultMembers=list.toArray(new Object[list.size()]);
    }
 else {
      PsiMethod[] prototypes=overrideOrImplementMethods(aClass,candidates,copyJavadoc,insertAtOverride);
      resultMembers=GenerateMembersUtil.insertMembersAtOffset(project,editor.getDocument(),aClass.getContainingFile(),offset,prototypes);
    }
    GenerateMembersUtil.positionCaret(editor,(PsiElement)resultMembers[0],true);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
