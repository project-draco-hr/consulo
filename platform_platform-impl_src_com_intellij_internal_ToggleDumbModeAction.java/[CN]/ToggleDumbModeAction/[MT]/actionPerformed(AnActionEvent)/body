{
  if (myDumb) {
    myDumb=false;
  }
 else {
    myDumb=true;
    final Project project=PlatformDataKeys.PROJECT.getData(e.getDataContext());
    if (project == null)     return;
    CacheUpdater updater=new CacheUpdater(){
      public int getNumberOfPendingUpdateJobs(){
        return 0;
      }
      public VirtualFile[] queryNeededFiles(      ProgressIndicator indicator){
        while (myDumb) {
          TimeoutUtil.sleep(100);
        }
        return VirtualFile.EMPTY_ARRAY;
      }
      public void processFile(      FileContent fileContent){
      }
      public void updatingDone(){
      }
      public void canceled(){
      }
    }
;
    DumbServiceImpl.getInstance(project).queueCacheUpdateInDumbMode(Arrays.asList(updater));
  }
}
