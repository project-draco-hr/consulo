{
  int poundIndex=refText.indexOf('#');
  if (poundIndex < 0) {
    PsiClass aClass=manager.getResolveHelper().resolveReferencedClass(refText,context);
    if (aClass == null)     aClass=manager.findClass(refText,context.getResolveScope());
    if (aClass != null)     return aClass.getNavigationElement();
    PsiPackage aPackage=manager.findPackage(refText);
    if (aPackage != null)     return aPackage;
    JavaDocManager.DocumentationProvider provider=JavaDocManager.getInstance(manager.getProject()).getProviderFromElement(context);
    if (provider != null) {
      return provider.getDocumentationElementForLink(refText,context);
    }
    return null;
  }
 else {
    String classRef=refText.substring(0,poundIndex).trim();
    if (classRef.length() > 0) {
      PsiClass aClass=manager.getResolveHelper().resolveReferencedClass(classRef,context);
      if (aClass == null)       aClass=manager.findClass(classRef,context.getResolveScope());
      if (aClass == null)       return null;
      return findReferencedMember(aClass,refText.substring(poundIndex + 1),context);
    }
 else {
      String memberRefText=refText.substring(1);
      PsiElement scope=context;
      while (true) {
        if (scope instanceof PsiFile)         break;
        if (scope instanceof PsiClass) {
          PsiElement member=findReferencedMember((PsiClass)scope,memberRefText,context);
          if (member != null)           return member;
        }
        scope=scope.getParent();
      }
      return null;
    }
  }
}
