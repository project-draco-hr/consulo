{
  List<LookupFile> result=new ArrayList<LookupFile>();
  LookupFile current=getClosestParent(typed);
  if (current == null)   return result;
  if (typed == null || typed.length() == 0)   return result;
  final String typedText=myFinder.normalize(typed);
  final String parentText=current.getAbsolutePath();
  if (!typedText.startsWith(parentText))   return result;
  String prefix=typedText.substring(parentText.length());
  if (prefix.startsWith(myFinder.getSeparator())) {
    prefix=prefix.substring(myFinder.getSeparator().length());
  }
 else   if (typed.endsWith(myFinder.getSeparator())) {
    prefix="";
  }
  final String effectivePrefix=prefix.toUpperCase();
  final List<LookupFile> files=current.getChildren(new LookupFilter(){
    public boolean isAccepted(    final LookupFile file){
      return myFilter.isAccepted(file) && file.getName().toUpperCase().startsWith(effectivePrefix);
    }
  }
);
  for (  LookupFile each : files) {
    result.add(each);
  }
  return result;
}
