{
  if (language == null) {
    return;
  }
  boolean injectionStarted=false;
  for (  Trinity<PsiLanguageInjectionHost,InjectedLanguage,TextRange> trinity : list) {
    final PsiLanguageInjectionHost host=trinity.first;
    if (host.getContainingFile() != containingFile)     continue;
    final TextRange textRange=trinity.third;
    final InjectedLanguage injectedLanguage=trinity.second;
    if (!injectionStarted) {
      registrar.startInjecting(language);
      injectionStarted=true;
    }
    registrar.addPlace(injectedLanguage.getPrefix(),injectedLanguage.getSuffix(),host,textRange);
  }
  if (injectionStarted) {
    registrar.doneInjecting();
  }
}
