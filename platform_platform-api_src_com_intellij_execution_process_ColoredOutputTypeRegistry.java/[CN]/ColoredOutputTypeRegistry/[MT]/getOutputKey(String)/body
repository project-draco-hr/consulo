{
  final Key key=myRegisteredKeys.get(attribute);
  if (key != null) {
    return key;
  }
  final String completeAttribute=attribute;
  if (attribute.startsWith("\u001B[")) {
    attribute=attribute.substring(2);
  }
 else   if (attribute.startsWith("[")) {
    attribute=attribute.substring(1);
  }
  if (attribute.endsWith("m")) {
    attribute=attribute.substring(0,attribute.length() - 1);
  }
  if (attribute.equals("0")) {
    return ProcessOutputTypes.STDOUT;
  }
  TextAttributes attrs=new TextAttributes();
  final String[] strings=attribute.split(";");
  for (  String string : strings) {
    int value;
    try {
      value=Integer.parseInt(string);
    }
 catch (    NumberFormatException e) {
      continue;
    }
    if (value == 4) {
      attrs.setEffectType(EffectType.LINE_UNDERSCORE);
    }
 else     if (value == 1) {
      attrs.setFontType(Font.BOLD);
    }
 else     if (value >= 30 && value <= 37) {
      attrs.setForegroundColor(getAnsiColor(value - 30));
    }
 else     if (value >= 40 && value <= 47) {
      attrs.setBackgroundColor(getAnsiColor(value - 40));
    }
 else     if (value == 90) {
      attrs.setForegroundColor(EditorColorsManager.getInstance().getGlobalScheme().getAttributes(ConsoleHighlighter.GRAY).getForegroundColor());
    }
 else     if (value >= 91 && value < 96) {
      attrs.setForegroundColor(EditorColorsManager.getInstance().getGlobalScheme().getAttributes(myAnsiColorKeys[value - 90]).getForegroundColor());
    }
  }
  if (attrs.getEffectType() == EffectType.LINE_UNDERSCORE) {
    attrs.setEffectColor(attrs.getForegroundColor());
  }
  Key newKey=new Key(completeAttribute);
  ConsoleViewContentType contentType=new ConsoleViewContentType(completeAttribute,attrs);
  ConsoleViewContentType.registerNewConsoleViewType(newKey,contentType);
  myRegisteredKeys.put(completeAttribute,newKey);
  return newKey;
}
