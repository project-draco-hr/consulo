{
  myModel=model;
  myDialog=dirDiffDialog;
  myTable.setModel(myModel);
  final DirDiffTableCellRenderer renderer=new DirDiffTableCellRenderer(myTable);
  myTable.setDefaultRenderer(Object.class,renderer);
  myTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      final DirDiffElement last=myModel.getElementAt(e.getLastIndex());
      final DirDiffElement first=myModel.getElementAt(e.getFirstIndex());
      if (last.isSeparator()) {
        myTable.getSelectionModel().setLeadSelectionIndex(e.getFirstIndex());
      }
 else       if (first.isSeparator()) {
        myTable.getSelectionModel().setLeadSelectionIndex(e.getLastIndex());
      }
 else {
        final DirDiffElement element=myModel.getElementAt(myTable.getSelectedRow());
        final Project project=myModel.getProject();
        if (element.getType() == DirDiffElement.ElementType.CHANGED) {
          final DiffRequest request=SimpleDiffRequest.compareFiles(element.getSource(),element.getTarget(),project);
          final DiffPanelImpl panel=(DiffPanelImpl)DiffManager.getInstance().createDiffPanel(myDialog.getWindow(),project);
          panel.setIsRequestFocus(false);
          panel.setDiffRequest(request);
          clearDiffPanel();
          myDiffPanelComponent=panel;
          myDiffPanel.add(panel.getComponent(),BorderLayout.CENTER);
        }
 else {
          clearDiffPanel();
          final VirtualFile file=element.getType() == DirDiffElement.ElementType.SOURCE ? element.getSource() : element.getTarget();
          final Document document=FileDocumentManager.getInstance().getDocument(file);
          myEditor=(EditorEx)EditorFactory.getInstance().createEditor(document,project,file,true);
          myEditor.getSettings().setFoldingOutlineShown(false);
          myDiffPanel.add(myEditor.getComponent(),BorderLayout.CENTER);
          myDiffPanel.revalidate();
        }
      }
    }
  }
);
  myTable.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      final int keyCode=e.getKeyCode();
      final int rows=myTable.getRowCount();
      int row=myTable.getSelectedRow();
      if (keyCode == KeyEvent.VK_DOWN && row != rows - 1) {
        row++;
        if (myModel.getElementAt(row).isSeparator()) {
          row++;
        }
      }
 else       if (keyCode == KeyEvent.VK_UP && row != 0) {
        row--;
        if (myModel.getElementAt(row).isSeparator()) {
          row--;
        }
      }
 else {
        return;
      }
      if (0 <= row && row < rows && !myModel.getElementAt(row).isSeparator()) {
        e.consume();
        myTable.changeSelection(row,3,false,false);
      }
    }
  }
);
}
