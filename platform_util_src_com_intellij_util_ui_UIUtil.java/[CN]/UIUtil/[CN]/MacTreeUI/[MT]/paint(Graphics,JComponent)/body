{
  final TreeSelectionModel selectionModel=getSelectionModel();
  final int[] selectedRows=selectionModel.getSelectionRows();
  if (selectedRows != null) {
    int containerWidth;
    int xOffset;
    if (tree.getParent() instanceof JViewport) {
      final JViewport viewport=(JViewport)tree.getParent();
      containerWidth=viewport.getWidth();
      xOffset=viewport.getViewPosition().x;
    }
 else {
      containerWidth=tree.getWidth();
      xOffset=0;
    }
    for (    final int row : selectedRows) {
      Rectangle bounds=tree.getRowBounds(row);
      Graphics2D selectionBackgroundGraphics=(Graphics2D)g.create();
      final Shape oldClip=selectionBackgroundGraphics.getClip();
      final Rectangle clip=new Rectangle(xOffset,bounds.y,containerWidth,bounds.height);
      if (oldClip.getBounds().height == getRowHeight()) {
        selectionBackgroundGraphics.setClip(clip);
      }
      selectionBackgroundGraphics.setColor(tree.hasFocus() ? getTreeSelectionBackground() : UNFOCUSED_SELECTION_COLOR);
      selectionBackgroundGraphics.fillRect(0,bounds.y,c.getWidth(),bounds.height - 1);
      final TreePath path=getPathForRow(tree,row);
      final boolean expanded=tree.isExpanded(row);
      final boolean beenExpanded=tree.hasBeenExpanded(path);
      final boolean leaf=isLeaf(row);
      if (shouldPaintExpandControl(path,row,expanded,beenExpanded,leaf)) {
        paintExpandControl(selectionBackgroundGraphics,clip,c.getInsets(),bounds,path,row,expanded,beenExpanded,leaf);
      }
      selectionBackgroundGraphics.dispose();
    }
  }
  super.paint(g,c);
}
