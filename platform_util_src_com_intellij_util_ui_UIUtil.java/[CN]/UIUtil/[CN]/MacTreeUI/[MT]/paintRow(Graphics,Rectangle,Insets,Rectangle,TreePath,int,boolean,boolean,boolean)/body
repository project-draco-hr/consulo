{
  final int containerWidth=tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth();
  final int xOffset=tree.getParent() instanceof JViewport ? ((JViewport)tree.getParent()).getViewPosition().x : 0;
  if (path != null && tree.isPathSelected(path)) {
    Graphics2D rowGraphics=(Graphics2D)g.create();
    rowGraphics.setClip(xOffset,bounds.y,containerWidth,bounds.height);
    final Object sourceList=tree.getClientProperty(SOURCE_LIST_CLIENT_PROPERTY);
    if (sourceList != null && ((Boolean)sourceList)) {
      if (tree.hasFocus()) {
        LIST_FOCUSED_SELECTION_BACKGROUND_PAINTER.paintBorder(tree,rowGraphics,xOffset,bounds.y,containerWidth,bounds.height);
      }
 else {
        LIST_SELECTION_BACKGROUND_PAINTER.paintBorder(tree,rowGraphics,xOffset,bounds.y,containerWidth,bounds.height);
      }
    }
 else {
      if (tree.hasFocus()) {
        rowGraphics.setColor(getTreeSelectionBackground());
        rowGraphics.fillRect(xOffset,bounds.y,containerWidth,bounds.height - 1);
      }
 else {
        rowGraphics.setColor(UNFOCUSED_SELECTION_COLOR);
        rowGraphics.fillRect(xOffset,bounds.y,containerWidth,bounds.height - 1);
      }
    }
    if (shouldPaintExpandControl(path,row,isExpanded,hasBeenExpanded,isLeaf)) {
      paintExpandControl(rowGraphics,bounds,insets,bounds,path,row,isExpanded,hasBeenExpanded,isLeaf);
    }
    rowGraphics.dispose();
  }
  super.paintRow(g,clipBounds,insets,bounds,path,row,isExpanded,hasBeenExpanded,isLeaf);
}
