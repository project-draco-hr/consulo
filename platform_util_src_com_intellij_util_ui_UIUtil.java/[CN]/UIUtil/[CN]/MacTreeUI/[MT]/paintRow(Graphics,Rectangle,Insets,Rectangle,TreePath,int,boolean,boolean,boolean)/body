{
  final int containerWidth=tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth();
  final int xOffset=tree.getParent() instanceof JViewport ? ((JViewport)tree.getParent()).getViewPosition().x : 0;
  if (path != null) {
    boolean selected=tree.isPathSelected(path);
    Graphics2D rowGraphics=(Graphics2D)g.create();
    Rectangle visible=tree.getVisibleRect();
    Rectangle2D union=visible.createIntersection(bounds);
    Rectangle clip=new Rectangle(visible.x,(int)union.getY(),visible.width,(int)union.getHeight());
    rowGraphics.setClip(clip);
    final Object sourceList=tree.getClientProperty(SOURCE_LIST_CLIENT_PROPERTY);
    if (sourceList != null && ((Boolean)sourceList)) {
      if (selected) {
        if (tree.hasFocus()) {
          LIST_FOCUSED_SELECTION_BACKGROUND_PAINTER.paintBorder(tree,rowGraphics,xOffset,bounds.y,containerWidth,bounds.height);
        }
 else {
          LIST_SELECTION_BACKGROUND_PAINTER.paintBorder(tree,rowGraphics,xOffset,bounds.y,containerWidth,bounds.height);
        }
      }
 else {
        rowGraphics.setColor(tree.getBackground());
        rowGraphics.fillRect(xOffset,bounds.y,containerWidth,bounds.height);
      }
    }
 else {
      Color bg=tree.hasFocus() ? getTreeSelectionBackground() : getListUnfocusedSelectionBackground();
      if (!selected) {
        bg=tree.getBackground();
      }
      rowGraphics.setColor(bg);
      rowGraphics.fillRect(xOffset,bounds.y,containerWidth,bounds.height - 1);
    }
    if (shouldPaintExpandControl(path,row,isExpanded,hasBeenExpanded,isLeaf)) {
      paintExpandControl(rowGraphics,bounds,insets,bounds,path,row,isExpanded,hasBeenExpanded,isLeaf);
    }
    super.paintRow(rowGraphics,clip,insets,bounds,path,row,isExpanded,hasBeenExpanded,isLeaf);
    rowGraphics.dispose();
  }
 else {
    super.paintRow(g,clipBounds,insets,bounds,path,row,isExpanded,hasBeenExpanded,isLeaf);
  }
}
