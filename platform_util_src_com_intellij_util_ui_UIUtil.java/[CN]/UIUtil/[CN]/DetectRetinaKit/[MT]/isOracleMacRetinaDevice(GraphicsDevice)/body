{
  if (SystemInfo.isAppleJvm)   return false;
  Boolean isRetina=devicesToRetinaSupportCacheMap.get(device);
  if (isRetina != null) {
    return isRetina;
  }
  Method getScaleFactorMethod=null;
  try {
    getScaleFactorMethod=Class.forName("sun.awt.CGraphicsDevice").getMethod("getScaleFactor");
  }
 catch (  ClassNotFoundException e) {
    LOG.debug("CGraphicsDevice.getScaleFactor(): not an Oracle Mac JDK or API has been changed");
  }
catch (  NoSuchMethodException e) {
    LOG.debug("CGraphicsDevice.getScaleFactor(): not an Oracle Mac JDK or API has been changed");
  }
  try {
    isRetina=getScaleFactorMethod == null || (Integer)getScaleFactorMethod.invoke(device) != 1;
  }
 catch (  IllegalAccessException e) {
    LOG.debug("CGraphicsDevice.getScaleFactor(): Access issue");
    isRetina=false;
  }
catch (  InvocationTargetException e) {
    LOG.debug("CGraphicsDevice.getScaleFactor(): Invocation issue");
    isRetina=false;
  }
catch (  IllegalArgumentException e) {
    LOG.debug("object is not an instance of declaring class: " + device.getClass().getName());
    isRetina=false;
  }
  devicesToRetinaSupportCacheMap.put(device,isRetina);
  return isRetina;
}
