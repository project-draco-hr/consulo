{
  final List<PsiCodeBlock> followingBlocks=new ArrayList();
  collectFollowingBlocks(block.getParent().getNextSibling(),followingBlocks);
  final PsiStatement[] statements=block.getStatements();
  final Project project=block.getProject();
  final JavaPsiFacade facade=JavaPsiFacade.getInstance(project);
  final PsiResolveHelper resolveHelper=facade.getResolveHelper();
  for (  final PsiStatement statement : statements) {
    if (!(statement instanceof PsiDeclarationStatement)) {
      continue;
    }
    final PsiDeclarationStatement declaration=(PsiDeclarationStatement)statement;
    final PsiElement[] variables=declaration.getDeclaredElements();
    for (    PsiElement variable : variables) {
      if (!(variable instanceof PsiLocalVariable)) {
        continue;
      }
      final PsiLocalVariable localVariable=(PsiLocalVariable)variable;
      final String variableName=localVariable.getName();
      final PsiVariable target=resolveHelper.resolveAccessibleReferencedVariable(variableName,parentBlock);
      if (target != null) {
        return true;
      }
      for (      PsiCodeBlock codeBlock : followingBlocks) {
        final PsiVariable target1=resolveHelper.resolveAccessibleReferencedVariable(variableName,codeBlock);
        if (target1 != null) {
          return true;
        }
      }
    }
  }
  return false;
}
