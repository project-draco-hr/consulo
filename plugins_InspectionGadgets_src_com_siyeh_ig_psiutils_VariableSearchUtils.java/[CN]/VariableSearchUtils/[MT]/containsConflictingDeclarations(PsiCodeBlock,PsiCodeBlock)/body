{
  final PsiStatement[] statements=block.getStatements();
  final Set<String> variableNames=new HashSet<String>();
  for (  final PsiStatement statement : statements) {
    if (!(statement instanceof PsiDeclarationStatement)) {
      continue;
    }
    final PsiDeclarationStatement declaration=(PsiDeclarationStatement)statement;
    final PsiElement[] declaredElements=declaration.getDeclaredElements();
    for (    PsiElement declaredElement : declaredElements) {
      if (!(declaredElement instanceof PsiLocalVariable)) {
        continue;
      }
      final PsiLocalVariable variable=(PsiLocalVariable)declaredElement;
      final String variableName=variable.getName();
      if (variableName == null) {
        continue;
      }
      variableNames.add(variableName);
    }
  }
  final ConflictingDeclarationVisitor visitor=new ConflictingDeclarationVisitor(variableNames,block);
  parentBlock.accept(visitor);
  return visitor.hasConflictingDeclaration();
}
