{
  int adjustedFramesForThisCall=framesToSkip;
  StackTraceElement[] stackTrace=new Throwable().getStackTrace();
  String className=null;
  for (int i=1; i <= adjustedFramesForThisCall; i++) {
    if (i >= stackTrace.length) {
      break;
    }
    StackTraceElement element=stackTrace[i];
    className=element.getClassName();
    if (className.equals("java.lang.reflect.Method") || className.equals("sun.reflect.NativeMethodAccessorImpl") || className.equals("sun.reflect.DelegatingMethodAccessorImpl")) {
      adjustedFramesForThisCall++;
      continue;
    }
    if (i == adjustedFramesForThisCall) {
      break;
    }
  }
  if (className == null) {
    className=ReflectionUtil.class.getName();
  }
  try {
    return Class.forName(className);
  }
 catch (  ClassNotFoundException ignored) {
  }
  return null;
}
