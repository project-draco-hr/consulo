{
  for (  final PsiElement result : declarations) {
    if (result instanceof PsiMember && !(result instanceof PsiClass)) {
      final PsiMember member=(PsiMember)result;
      if (!member.hasModifierProperty(PsiModifier.STATIC))       continue;
      if (result instanceof PsiField && !member.hasModifierProperty(PsiModifier.FINAL))       continue;
      if (result instanceof PsiMethod && (!acceptMethods || myPlaceMethods.contains(result)))       continue;
      if (JavaCompletionUtil.isInExcludedPackage(member,false) || myImportedStatically.contains(member))       continue;
      if (!JavaPsiFacade.getInstance(myPlace.getProject()).getResolveHelper().isAccessible(member,myPlace,null)) {
        continue;
      }
      final LookupElement item=result instanceof PsiMethod ? createMethodElement((PsiMethod)result) : createFieldElement((PsiField)result);
      if (item != null) {
        item.putUserData(EXPECTED_TYPE_INHERITOR_MEMBER,isInheritor);
        results.consume(AutoCompletionPolicy.NEVER_AUTOCOMPLETE.applyPolicy(item));
      }
    }
  }
}
