{
  myModuleName=module.getName();
  final BuildJarSettings jarSettings=BuildJarSettings.getInstance(module);
  outputJarUrl=jarSettings.getJarUrl();
  outputJarTimestamp=new File(VfsUtil.urlToPath(outputJarUrl)).lastModified();
  final TObjectLongHashMap<String> url2Timestamps=new TObjectLongHashMap<String>();
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      BuildRecipe buildRecipe=BuildJarProjectSettings.getBuildRecipe(module,jarSettings);
      buildRecipe.visitInstructions(new BuildInstructionVisitor(){
        public boolean visitFileCopyInstruction(        FileCopyInstruction instruction) throws Exception {
          File source=instruction.getFile();
          VirtualFile virtualFile=LocalFileSystem.getInstance().findFileByPath(FileUtil.toSystemIndependentName(source.getPath()));
          if (virtualFile != null) {
            addFilesToMap(virtualFile,url2Timestamps);
          }
          return true;
        }
      }
,false);
    }
  }
);
  sourceUrls=ArrayUtil.newStringArray(url2Timestamps.size());
  timestamps=new long[url2Timestamps.size()];
  TObjectLongProcedure<String> iterator=new TObjectLongProcedure<String>(){
    int i=0;
    public boolean execute(    final String url,    final long timestamp){
      sourceUrls[i]=url;
      timestamps[i]=timestamp;
      i++;
      return true;
    }
  }
;
  url2Timestamps.forEachEntry(iterator);
}
