{
  final SymbolTable symbolTable=myJavaDependencyCache.getSymbolTable();
  final Cache oldCache=myJavaDependencyCache.getCache();
  final Cache newCache=myJavaDependencyCache.getNewClassesCache();
  final Cache cache=newCache.containsClass(qName) ? newCache : oldCache;
  for (Iterator it=methodsToCheck.iterator(); it.hasNext(); ) {
    final MethodInfo methodInfo=(MethodInfo)it.next();
    final MethodInfo superMethod=cache.findMethodsBySignature(qName,methodInfo.getDescriptor(symbolTable),symbolTable);
    if (superMethod != null) {
      if (ClsUtil.isAbstract(superMethod.getFlags())) {
        return true;
      }
      it.remove();
    }
  }
  return false;
}
