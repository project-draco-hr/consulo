{
  for (  Dependency.MethodRef ref : dependency.getMethodRefs()) {
    final MethodInfo usedMethod=myRefToMethodMap.get(ref);
    if (usedMethod == null) {
      continue;
    }
    if (usedMethod.isConstructor()) {
      if (myJavaDependencyCache.markTargetClassInfo(dependency)) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Mark dependent class " + myJavaDependencyCache.resolve(dependency.getClassQualifiedName()) + "; reason: "+ myJavaDependencyCache.resolve(myQName)+ " made abstract");
        }
      }
      return true;
    }
  }
  return false;
}
