{
  final TIntObjectHashMap<AnnotationConstantValue> oldAnnotations=fetchAllAnnotations(oldCache);
  final TIntObjectHashMap<AnnotationConstantValue> newAnnotations=fetchAllAnnotations(newCache);
  final int retentionAnnotation=myJavaDependencyCache.getSymbolTable().getId("java.lang.annotation.Retention");
  final int targetAnnotation=myJavaDependencyCache.getSymbolTable().getId("java.lang.annotation.Target");
  oldAnnotations.remove(retentionAnnotation);
  oldAnnotations.remove(targetAnnotation);
  newAnnotations.remove(retentionAnnotation);
  newAnnotations.remove(targetAnnotation);
  if (oldAnnotations.size() != newAnnotations.size()) {
    return true;
  }
  for (  int annotName : oldAnnotations.keys()) {
    if (!newAnnotations.contains(annotName)) {
      return true;
    }
    final AnnotationNameValuePair[] oldValues=oldAnnotations.get(annotName).getMemberValues();
    final AnnotationNameValuePair[] newValues=newAnnotations.get(annotName).getMemberValues();
    if (annotationValuesDiffer(oldValues,newValues)) {
      return true;
    }
  }
  return false;
}
