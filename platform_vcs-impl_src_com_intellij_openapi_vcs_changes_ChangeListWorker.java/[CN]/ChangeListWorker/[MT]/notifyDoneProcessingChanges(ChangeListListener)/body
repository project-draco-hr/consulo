{
  List<ChangeList> changedLists=new ArrayList<ChangeList>();
  final Map<LocalChangeListImpl,List<Change>> removedChanges=new HashMap<LocalChangeListImpl,List<Change>>();
  for (  LocalChangeList list : myMap.values()) {
    final List<Change> removed=new ArrayList<Change>();
    final LocalChangeListImpl listImpl=(LocalChangeListImpl)list;
    if (listImpl.doneProcessingChanges(removed)) {
      changedLists.add(list);
    }
    if (!removed.isEmpty()) {
      removedChanges.put(listImpl,removed);
    }
  }
  for (  Map.Entry<LocalChangeListImpl,List<Change>> entry : removedChanges.entrySet()) {
    dispatcher.changesRemoved(entry.getValue(),entry.getKey());
  }
  for (  ChangeList changeList : changedLists) {
    dispatcher.changeListChanged(changeList);
  }
  mySwitchedHolder.calculateChildren();
  for (  String name : myListsToDisappear) {
    final LocalChangeList changeList=myMap.get(name);
    if (changeList.getChanges().isEmpty() && (!changeList.isReadOnly()) && (!changeList.isDefault())) {
      removeChangeList(name);
    }
  }
  myListsToDisappear.clear();
}
