{
  myGroup=group;
  setModel(new AbstractListModel(){
    public int getSize(){
      return myGroup.getItemCount();
    }
    public Object getElementAt(    int index){
      return myGroup.getItemAt(index);
    }
  }
);
  addMouseListener(new MouseAdapter(){
    @Override public void mouseEntered(    MouseEvent e){
      setHoverIndex(locationToIndex(e.getPoint()));
    }
    @Override public void mouseExited(    MouseEvent e){
      setHoverIndex(-1);
    }
  }
);
  addMouseMotionListener(new MouseMotionAdapter(){
    public void mouseMoved(    MouseEvent e){
      setHoverIndex(locationToIndex(e.getPoint()));
    }
  }
);
  setCellRenderer(new ComponentCellRenderer());
  setVisibleRowCount(0);
  setLayoutOrientation(HORIZONTAL_WRAP);
  setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  setDragEnabled(true);
  setTransferHandler(new TransferHandler(){
    public int getSourceActions(    JComponent c){
      return DnDConstants.ACTION_MOVE;
    }
    protected Transferable createTransferable(    JComponent c){
      final Object selectedValue=getSelectedValue();
      if (selectedValue != null) {
        PaletteItem paletteItem=(PaletteItem)selectedValue;
        return paletteItem.createTransferable();
      }
      return null;
    }
  }
);
  new DropTarget(this,DnDConstants.ACTION_MOVE,new MyDropTargetAdapter());
  initActions();
}
