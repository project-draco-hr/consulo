{
  ourProjectsLock.lock();
  try {
    for (Iterator<SoftReference<Pair<ReflectedProject,ClassLoader>>> iterator=ourProjects.iterator(); iterator.hasNext(); ) {
      final SoftReference<Pair<ReflectedProject,ClassLoader>> ref=iterator.next();
      final Pair<ReflectedProject,ClassLoader> pair=ref.get();
      if (pair == null) {
        iterator.remove();
      }
 else {
        if (pair.first != null && pair.first.getProject() == null) {
          iterator.remove();
        }
        if (pair.second == classLoader) {
          return pair.first;
        }
      }
    }
  }
  finally {
    ourProjectsLock.unlock();
  }
  final ReflectedProject project=new ReflectedProject(classLoader);
  if (project.getProject() != null) {
    ourProjectsLock.lock();
    try {
      ourProjects.add(new SoftReference<Pair<ReflectedProject,ClassLoader>>(new Pair<ReflectedProject,ClassLoader>(project,classLoader)));
    }
  finally {
      ourProjectsLock.unlock();
    }
  }
  return project;
}
