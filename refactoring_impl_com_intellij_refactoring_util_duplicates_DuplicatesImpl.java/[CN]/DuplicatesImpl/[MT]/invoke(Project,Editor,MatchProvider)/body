{
  final List<Match> duplicates=provider.getDuplicates();
  for (  final Match match : duplicates) {
    final ArrayList<RangeHighlighter> highlighters=new ArrayList<RangeHighlighter>();
    highlightMatch(project,editor,match,highlighters);
    final TextRange textRange=match.getTextRange();
    final LogicalPosition logicalPosition=editor.offsetToLogicalPosition(textRange.getStartOffset());
    expandAllRegionsCoveringRange(project,editor,textRange);
    editor.getScrollingModel().scrollTo(logicalPosition,ScrollType.MAKE_VISIBLE);
    String prompt=provider.getConfirmDuplicatePrompt(match);
    final int matchAnswer=Messages.showYesNoCancelDialog(project,prompt,RefactoringBundle.message("process.duplicates.title"),Messages.getQuestionIcon());
    HighlightManager.getInstance(project).removeSegmentHighlighter(editor,highlighters.get(0));
    if (matchAnswer == 0) {
      final Runnable action=new Runnable(){
        public void run(){
          try {
            provider.processMatch(match);
          }
 catch (          IncorrectOperationException e) {
            LOG.error(e);
          }
        }
      }
;
      ApplicationManager.getApplication().runWriteAction(action);
    }
 else     if (matchAnswer == 2) {
      break;
    }
  }
}
