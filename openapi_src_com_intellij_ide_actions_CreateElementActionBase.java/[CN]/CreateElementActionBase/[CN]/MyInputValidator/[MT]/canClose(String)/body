{
  if (inputString.length() == 0) {
    Messages.showMessageDialog(myProject,IdeBundle.message("error.name.should.be.specified"),CommonBundle.getErrorTitle(),Messages.getErrorIcon());
    return false;
  }
  try {
    checkBeforeCreate(inputString,myDirectory);
  }
 catch (  IncorrectOperationException e) {
    Messages.showMessageDialog(myProject,filterMessage(e.getMessage()),getErrorTitle(),Messages.getErrorIcon());
    return false;
  }
  final LocalVcs lvcs=LocalVcs.getInstance(myProject);
  final Exception[] exception=new Exception[1];
  final Runnable command=new Runnable(){
    public void run(){
      final Runnable run=new Runnable(){
        public void run(){
          LvcsAction action=LvcsAction.EMPTY;
          try {
            action=lvcs.startAction(getActionName(myDirectory,inputString),"",false);
            myCreatedElements=create(inputString,myDirectory);
          }
 catch (          Exception ex) {
            exception[0]=ex;
          }
 finally {
            action.finish();
          }
        }
      }
;
      ApplicationManager.getApplication().runWriteAction(run);
    }
  }
;
  CommandProcessor.getInstance().executeCommand(myProject,command,getCommandName(),null);
  if (exception[0] != null) {
    Messages.showMessageDialog(myProject,filterMessage(exception[0].getMessage()),getErrorTitle(),Messages.getErrorIcon());
  }
  return myCreatedElements.length != 0;
}
