{
  if (e.isConsumed() || e.isPopupTrigger() || MouseEvent.MOUSE_RELEASED != e.getID() || e.getClickCount() < 1 || e.getButton() == MouseEvent.NOBUTTON) {
    return false;
  }
  Component component=e.getComponent();
  if (component == null) {
    throw new IllegalStateException("component cannot be null");
  }
  component=SwingUtilities.getDeepestComponentAt(component,e.getX(),e.getY());
  if (component == null) {
    return false;
  }
  if (component instanceof IdeGlassPaneImpl) {
    component=((IdeGlassPaneImpl)component).getTargetComponentFor(e);
  }
  MouseShortcut shortcut=new MouseShortcut(e.getButton(),e.getModifiersEx(),e.getClickCount());
  fillActionsList(component,shortcut,IdeKeyEventDispatcher.isModalContext(component));
  ActionManagerEx actionManager=ActionManagerEx.getInstanceEx();
  for (int i=0; i < myActions.size(); i++) {
    AnAction action=myActions.get(i);
    DataContext dataContext=DataManager.getInstance().getDataContext(component);
    Presentation presentation=myPresentationFactory.getPresentation(action);
    AnActionEvent actionEvent=new AnActionEvent(e,dataContext,ActionPlaces.MAIN_MENU,presentation,ActionManager.getInstance(),e.getModifiers());
    action.beforeActionPerformedUpdate(actionEvent);
    if (presentation.isEnabled()) {
      actionManager.fireBeforeActionPerformed(action,dataContext);
      Component c=(Component)dataContext.getData(DataConstants.CONTEXT_COMPONENT);
      if (c != null && !c.isShowing()) {
        continue;
      }
      action.actionPerformed(actionEvent);
      e.consume();
    }
  }
  return false;
}
