{
  PsiAnnotation[] annotations=getAnnotations();
  for (  PsiAnnotation annotation : annotations) {
    ((ClsAnnotationImpl)annotation).appendMirrorText(indentLevel,buffer);
    buffer.append(' ');
  }
  boolean isInterface=myParent instanceof PsiClass && ((PsiClass)myParent).isInterface();
  boolean isInterfaceMethod=myParent instanceof PsiMethod && myParent.getParent() instanceof PsiClass && ((PsiClass)myParent.getParent()).isInterface();
  boolean isInterfaceField=myParent instanceof PsiField && myParent.getParent() instanceof PsiClass && ((PsiClass)myParent.getParent()).isInterface();
  boolean isInterfaceClass=myParent instanceof PsiClass && myParent.getParent() instanceof PsiClass && ((PsiClass)myParent.getParent()).isInterface();
  if (hasModifierProperty(PsiModifier.PUBLIC)) {
    if (!isInterfaceMethod && !isInterfaceField && !isInterfaceClass) {
      buffer.append(PsiModifier.PUBLIC);
      buffer.append(' ');
    }
  }
  if (hasModifierProperty(PsiModifier.PROTECTED)) {
    buffer.append(PsiModifier.PROTECTED);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.PRIVATE)) {
    buffer.append(PsiModifier.PRIVATE);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.STATIC)) {
    if (!isInterfaceField) {
      buffer.append(PsiModifier.STATIC);
      buffer.append(' ');
    }
  }
  if (hasModifierProperty(PsiModifier.ABSTRACT)) {
    if (!isInterface && !isInterfaceMethod) {
      buffer.append(PsiModifier.ABSTRACT);
      buffer.append(' ');
    }
  }
  if (hasModifierProperty(PsiModifier.FINAL)) {
    if (!isInterfaceField) {
      buffer.append(PsiModifier.FINAL);
      buffer.append(' ');
    }
  }
  if (hasModifierProperty(PsiModifier.NATIVE)) {
    buffer.append(PsiModifier.NATIVE);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.SYNCHRONIZED)) {
    buffer.append(PsiModifier.SYNCHRONIZED);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.TRANSIENT)) {
    buffer.append(PsiModifier.TRANSIENT);
    buffer.append(' ');
  }
  if (hasModifierProperty(PsiModifier.VOLATILE)) {
    buffer.append(PsiModifier.VOLATILE);
    buffer.append(' ');
  }
}
