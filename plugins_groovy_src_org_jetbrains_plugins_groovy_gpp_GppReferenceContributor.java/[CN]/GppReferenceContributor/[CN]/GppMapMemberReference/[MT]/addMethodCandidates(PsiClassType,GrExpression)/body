{
  PsiType valueType=value == null ? null : value.getType();
  final List<ResolveResult> applicable=ContainerUtil.newArrayList();
  if (value == null || GroovyPsiManager.isInheritorCached(valueType,GroovyCommonClassNames.GROOVY_LANG_CLOSURE)) {
    final List<ResolveResult> byName=ContainerUtil.newArrayList();
    for (    Pair<PsiMethod,PsiSubstitutor> variant : GppClosureParameterTypeProvider.getMethodsToOverrideImplementInInheritor(classType,false)) {
      final PsiMethod method=variant.first;
      if (getValue().equals(method.getName())) {
        final ResolveResult resolveResult=new PsiElementResolveResult(method);
        byName.add(resolveResult);
        if (valueType instanceof GrClosureType) {
          final PsiType[] psiTypes=GppClosureParameterTypeProvider.getParameterTypes(variant);
          if (GppTypeConverter.isClosureOverride(psiTypes,(GrClosureType)valueType,myElement)) {
            applicable.add(resolveResult);
          }
        }
      }
    }
    if (applicable.isEmpty()) {
      return byName;
    }
  }
  return applicable;
}
