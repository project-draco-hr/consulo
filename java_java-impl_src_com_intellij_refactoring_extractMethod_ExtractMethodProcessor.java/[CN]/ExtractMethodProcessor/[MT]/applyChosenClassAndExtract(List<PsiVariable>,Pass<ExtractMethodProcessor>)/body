{
  myStatic=shouldBeStatic();
  if (myTargetClass.getContainingClass() == null || myTargetClass.hasModifierProperty(PsiModifier.STATIC)) {
    ElementNeedsThis needsThis=new ElementNeedsThis(myTargetClass);
    for (int i=0; i < myElements.length && !needsThis.usesMembers(); i++) {
      PsiElement element=myElements[i];
      element.accept(needsThis);
    }
    myCanBeStatic=!needsThis.usesMembers();
  }
 else {
    myCanBeStatic=false;
  }
  myInputVariables=new InputVariables(inputVariables,myProject,new LocalSearchScope(myElements),true);
  if (!checkExitPoints()) {
    return false;
  }
  if (extractPass != null) {
    extractPass.pass(this);
  }
  return true;
}
