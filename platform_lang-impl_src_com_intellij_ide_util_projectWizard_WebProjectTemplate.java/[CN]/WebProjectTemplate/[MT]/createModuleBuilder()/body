{
  final ModuleBuilder builder=WebModuleType.getInstance().createModuleBuilder();
  return new ModuleBuilder(){
    @Override public void setupRootModel(    ModifiableRootModel modifiableRootModel) throws ConfigurationException {
      builder.setupRootModel(modifiableRootModel);
    }
    @Override public ModuleType getModuleType(){
      return builder.getModuleType();
    }
    @Override public List<Module> commit(    Project project,    ModifiableModuleModel model,    ModulesProvider modulesProvider){
      List<Module> modules=builder.commit(project,model,modulesProvider);
      if (modules != null && !modules.isEmpty()) {
        Module module=modules.get(0);
        generateProject(module.getProject(),module.getProject().getBaseDir(),myPeer.getValue().getSettings(),module);
      }
      return modules;
    }
    @Nullable @Override public ModuleWizardStep modifySettingsStep(    SettingsStep settingsStep){
      GeneratorPeer<T> peer=myPeer.getValue();
      peer.buildUI(settingsStep);
      return new ModuleWizardStep(){
        @Override public JComponent getComponent(){
          return null;
        }
        @Override public void updateDataModel(){
        }
      }
;
    }
  }
;
}
