{
  final ModuleBuilder builder=WebModuleType.getInstance().createModuleBuilder();
  return new ProjectBuilder(){
    @Nullable @Override public List<Module> commit(    Project project,    ModifiableModuleModel model,    ModulesProvider modulesProvider){
      List<Module> modules=builder.commit(project,model,modulesProvider);
      if (modules != null && !modules.isEmpty()) {
        Module module=modules.get(0);
        generateProject(module.getProject(),module.getProject().getBaseDir(),myPeer.getValue().getSettings(),module);
      }
      return modules;
    }
  }
;
}
