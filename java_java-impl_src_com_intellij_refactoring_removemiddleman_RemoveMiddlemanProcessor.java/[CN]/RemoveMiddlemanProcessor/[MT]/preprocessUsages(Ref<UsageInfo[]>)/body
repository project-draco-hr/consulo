{
  final Map<PsiElement,String> conflicts=new HashMap<PsiElement,String>();
  for (  MemberInfo memberInfo : myDelegateMethodInfos) {
    if (memberInfo.isChecked() && memberInfo.isToAbstract()) {
      final PsiMember psiMember=memberInfo.getMember();
      if (psiMember instanceof PsiMethod && ((PsiMethod)psiMember).findDeepestSuperMethods().length > 0) {
        conflicts.put(psiMember,SymbolPresentationUtil.getSymbolPresentableText(psiMember) + " will be deleted. Hierarchy will be broken");
      }
    }
  }
  return showConflicts(conflicts);
}
