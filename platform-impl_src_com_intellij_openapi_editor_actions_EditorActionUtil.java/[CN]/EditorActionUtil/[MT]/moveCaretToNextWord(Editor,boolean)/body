{
  Document document=editor.getDocument();
  SelectionModel selectionModel=editor.getSelectionModel();
  int selectionStart=selectionModel.getLeadSelectionOffset();
  CaretModel caretModel=editor.getCaretModel();
  LogicalPosition blockSelectionStart=selectionModel.hasBlockSelection() ? selectionModel.getBlockStart() : caretModel.getLogicalPosition();
  int offset=caretModel.getOffset();
  CharSequence text=document.getCharsSequence();
  if (offset == document.getTextLength() - 1) {
    return;
  }
  int newOffset=offset + 1;
  int lineNumber=caretModel.getLogicalPosition().line;
  if (lineNumber >= document.getLineCount())   return;
  int maxOffset=document.getLineEndOffset(lineNumber);
  if (newOffset > maxOffset) {
    if (lineNumber + 1 >= document.getLineCount()) {
      return;
    }
    maxOffset=document.getLineEndOffset(lineNumber + 1);
  }
  boolean camel=editor.getSettings().isCamelWords();
  for (; newOffset < maxOffset; newOffset++) {
    if (isWordStart(text,newOffset,camel)) {
      break;
    }
  }
  caretModel.moveToOffset(newOffset);
  editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
  setupSelection(editor,isWithSelection,selectionStart,blockSelectionStart);
}
