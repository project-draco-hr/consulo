{
  final Set<String> defined=getDefinedMacros();
  usedMacros.removeAll(defined);
  @NonNls final String pathMacroSystemPrefix="path.macro.";
  for (Iterator it=usedMacros.iterator(); it.hasNext(); ) {
    final String macro=(String)it.next();
    final String value=System.getProperty(pathMacroSystemPrefix + macro,null);
    if (value != null) {
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          PathMacros.getInstance().setMacro(macro,value);
        }
      }
);
      it.remove();
    }
  }
  if (usedMacros.isEmpty()) {
    return true;
  }
  final boolean[] result=new boolean[1];
  try {
    final Runnable r=new Runnable(){
      public void run(){
        result[0]=showMacrosConfigurationDialog(project,usedMacros);
      }
    }
;
    if (!ApplicationManager.getApplication().isDispatchThread()) {
      SwingUtilities.invokeAndWait(r);
    }
 else {
      r.run();
    }
  }
 catch (  InterruptedException e) {
    LOG.error(e);
  }
catch (  InvocationTargetException e) {
    LOG.error(e);
  }
  return result[0];
}
