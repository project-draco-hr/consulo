{
  final SeverityRegistrar severityRegistrar=SeverityRegistrar.getInstance(myProject);
  List<HighlightInfo> highlights=DaemonCodeAnalyzerImpl.getHighlights(myDocument,myProject);
  if (highlights == null)   highlights=Arrays.asList(HighlightInfo.EMPTY_ARRAY);
  if (fillErrorsCount) {
    highlights=new ArrayList<HighlightInfo>(highlights);
    Collections.sort(highlights,new Comparator<HighlightInfo>(){
      public int compare(      HighlightInfo o1,      HighlightInfo o2){
        return o1.getSeverity().myVal - o2.getSeverity().myVal;
      }
    }
);
    int severityIdx=0;
    int currentSeverity=severityRegistrar.getSeverityByIndex(0).myVal;
    int currentSeverityCount=0;
    for (    HighlightInfo highlight : highlights) {
      final HighlightSeverity severity=highlight.getSeverity();
      if (severity.myVal == currentSeverity) {
        currentSeverityCount++;
      }
 else       if (severity.myVal > currentSeverity) {
        status.errorCount[severityIdx]=currentSeverityCount;
        currentSeverityCount=1;
        severityIdx=severityRegistrar.getSeverityIdx(severity);
        currentSeverity=severityRegistrar.getSeverityByIndex(severityIdx).myVal;
      }
    }
    status.errorCount[severityIdx]=currentSeverityCount;
  }
 else {
    HighlightSeverity severity=null;
    final int count=severityRegistrar.getSeveritiesCount() - 1;
    HighlightSeverity maxSeverity=severityRegistrar.getSeverityByIndex(count);
    for (    HighlightInfo info : highlights) {
      if (info.getSeverity() == maxSeverity) {
        status.errorCount[count]=1;
        return;
      }
      if (severity == null || severityRegistrar.compare(severity,info.getSeverity()) <= 0) {
        severity=info.getSeverity();
      }
    }
    if (severity != null) {
      final int severityIdx=severityRegistrar.getSeverityIdx(severity);
      if (severityIdx != -1) {
        status.errorCount[severityIdx]=1;
      }
    }
  }
}
