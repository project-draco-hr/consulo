{
  add(mainPanel,0,0);
  add(myIconPanel,42,0);
  add(mySortingLabel,10,0);
  setLayout(new AbstractLayoutManager(){
    @Override public Dimension preferredLayoutSize(    @Nullable Container parent){
      int maxCellWidth=myLookupTextWidth + myCellRenderer.getIconIndent();
      int scrollBarWidth=myScrollPane.getPreferredSize().width - myScrollPane.getViewport().getPreferredSize().width;
      int listWidth=Math.min(scrollBarWidth + maxCellWidth,UISettings.getInstance().MAX_LOOKUP_WIDTH);
      int adWidth=myAdComponent.getAdComponent().getPreferredSize().width;
      return new Dimension(Math.max(listWidth,adWidth),Math.min(mainPanel.getPreferredSize().height,myMaximumHeight));
    }
    @Override public void layoutContainer(    Container parent){
      Dimension size=getSize();
      mainPanel.setSize(size);
      mainPanel.validate();
      if (!myResizePending) {
        Dimension preferredSize=preferredLayoutSize(null);
        if (preferredSize.width != size.width) {
          UISettings.getInstance().MAX_LOOKUP_WIDTH=Math.max(500,size.width);
        }
        int listHeight=myList.getLastVisibleIndex() - myList.getFirstVisibleIndex() + 1;
        if (listHeight != myList.getModel().getSize() && listHeight != myList.getVisibleRowCount() && preferredSize.height != size.height) {
          UISettings.getInstance().MAX_LOOKUP_LIST_HEIGHT=Math.max(5,listHeight);
        }
      }
      myList.setFixedCellWidth(myScrollPane.getViewport().getWidth());
      layoutStatusIcons();
      layoutHint();
    }
  }
);
}
