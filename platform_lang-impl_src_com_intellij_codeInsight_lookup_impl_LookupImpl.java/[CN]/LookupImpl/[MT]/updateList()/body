{
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    ApplicationManager.getApplication().assertIsDispatchThread();
  }
  final List<LookupElement> items=myModel.getSortedItems();
  SortedMap<Comparable,List<LookupElement>> itemsMap=new TreeMap<Comparable,List<LookupElement>>();
  int minPrefixLength=items.isEmpty() ? 0 : Integer.MAX_VALUE;
  for (  final LookupElement item : items) {
    minPrefixLength=Math.min(item.getPrefixMatcher().getPrefix().length(),minPrefixLength);
    final Comparable relevance=myArranger.getRelevance(item);
    List<LookupElement> list=itemsMap.get(relevance);
    if (list == null) {
      itemsMap.put(relevance,list=new ArrayList<LookupElement>());
    }
    list.add(item);
  }
  if (myReused) {
    myModel.collectGarbage();
    myReused=false;
  }
  if (myMinPrefixLength != minPrefixLength) {
    myLookupStartMarker=null;
  }
  myMinPrefixLength=minPrefixLength;
  LookupElement oldSelected=mySelectionTouched ? (LookupElement)myList.getSelectedValue() : null;
  String oldInvariant=mySelectionInvariant;
  boolean hasExactPrefixes;
  final boolean hasPreselectedItem;
  final boolean hasItems;
  DefaultListModel model=(DefaultListModel)myList.getModel();
  final LookupElement preselectedItem=myPreselectedItem;
synchronized (myList) {
    model.clear();
    Set<LookupElement> firstItems=new THashSet<LookupElement>();
    hasExactPrefixes=addExactPrefixItems(model,firstItems,items);
    addMostRelevantItems(model,firstItems,itemsMap.values());
    hasPreselectedItem=addPreselectedItem(model,firstItems,preselectedItem);
    myPreferredItemsCount=firstItems.size();
    addRemainingItemsLexicographically(model,firstItems,items);
    hasItems=model.getSize() != 0;
    if (!hasItems) {
      addEmptyItem(model);
    }
  }
  updateListHeight(model);
  myAdComponent.setPreferredSize(null);
  myAdComponent.setText(myAdText);
  if (myAdText != null) {
    myAdComponent.setPreferredSize(new Dimension(myAdComponent.getPreferredSize().width,myProcessIcon.getPreferredSize().height));
  }
  if (hasItems) {
    myList.setFixedCellWidth(Math.max(myLookupWidth,myAdComponent.getPreferredSize().width));
    if (isFocused() && !hasExactPrefixes) {
      restoreSelection(oldSelected,hasPreselectedItem,oldInvariant);
    }
 else {
      ListScrollingUtil.selectItem(myList,0);
    }
  }
}
