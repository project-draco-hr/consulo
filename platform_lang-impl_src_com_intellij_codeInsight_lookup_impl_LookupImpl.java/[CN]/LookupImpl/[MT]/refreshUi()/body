{
  final boolean reused=checkReused();
  updateList();
  final Editor editor=myEditor;
  if (isVisible()) {
    LOG.assertTrue(!ApplicationManager.getApplication().isUnitTestMode());
    if (editor.getComponent().getRootPane() == null) {
      LOG.error("Null root pane");
    }
    updateScrollbarVisibility();
    HintManagerImpl.adjustEditorHintPosition(this,editor,calculatePosition());
    layoutStatusIcons();
    if (reused) {
      ensureSelectionVisible();
    }
  }
 else   if (myHintMode) {
    hideAutopopupHint();
    final int itemTextPadding=2;
    final int borderWidth=1;
    Point bestPoint=calculatePosition();
    bestPoint.x+=myCellRenderer.getIconIndent() - itemTextPadding - borderWidth;
    Point editorPoint=SwingUtilities.convertPoint(editor.getComponent().getRootPane().getLayeredPane(),bestPoint,editor.getContentComponent());
    final HintHint hintHint=new HintHint(editor,editorPoint).setHighlighterType(true).setContentActive(true);
    final HintManagerImpl hintManager=HintManagerImpl.getInstanceImpl();
    myAutopopupHint=new LightweightHint(createAutopopupHintComponent(itemTextPadding,borderWidth));
    hintManager.showEditorHint(myAutopopupHint,editor,bestPoint,HintManagerImpl.HIDE_BY_ESCAPE | HintManagerImpl.UPDATE_BY_SCROLLING,0,false,hintHint);
  }
}
