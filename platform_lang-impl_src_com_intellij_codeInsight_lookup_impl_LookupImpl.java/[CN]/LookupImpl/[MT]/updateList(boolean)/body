{
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    ApplicationManager.getApplication().assertIsDispatchThread();
  }
  checkValid();
  CollectionListModel<LookupElement> listModel=getListModel();
synchronized (myList) {
    Pair<List<LookupElement>,Integer> pair=myPresentableArranger.arrangeItems(this,onExplicitAction);
    List<LookupElement> items=pair.first;
    Integer toSelect=pair.second;
    if (toSelect == null || toSelect < 0 || items.size() > 0 && toSelect >= items.size()) {
      LOG.error("Arranger " + myPresentableArranger + " returned invalid selection index="+ toSelect+ "; items="+ items);
    }
    checkMinPrefixLengthChanges(items);
    List<LookupElement> oldModel=listModel.toList();
    listModel.removeAll();
    if (!items.isEmpty()) {
      listModel.add(items);
    }
 else {
      addEmptyItem(listModel);
    }
    updateListHeight(listModel);
    myList.setSelectedIndex(toSelect);
    if (onExplicitAction && myShown) {
      myList.ensureIndexIsVisible(toSelect);
    }
    return !oldModel.equals(items);
  }
}
