{
  Dimension dim=getComponent().getPreferredSize();
  int lookupStart=getLookupStart();
  if (lookupStart < 0 || lookupStart > myEditor.getDocument().getTextLength()) {
    LOG.error(lookupStart + "; offset=" + myEditor.getCaretModel().getOffset()+ "; element="+ getPsiElement());
  }
  LogicalPosition pos=myEditor.offsetToLogicalPosition(lookupStart);
  Point location=myEditor.logicalPositionToXY(pos);
  location.y+=myEditor.getLineHeight();
  location.x-=myCellRenderer.getIconIndent() + getComponent().getInsets().left;
  SwingUtilities.convertPointToScreen(location,myEditor.getContentComponent());
  final Rectangle screenRectangle=ScreenUtil.getScreenRectangle(location);
  if (!isPositionedAboveCaret()) {
    int shiftLow=screenRectangle.height - (location.y + dim.height);
    myPositionedAbove=shiftLow < 0 && shiftLow < location.y - dim.height && location.y >= dim.height;
  }
  if (isPositionedAboveCaret()) {
    location.y-=dim.height + myEditor.getLineHeight();
    if (pos.line == 0) {
      location.y+=1;
    }
  }
  if (!screenRectangle.contains(location)) {
    location=ScreenUtil.findNearestPointOnBorder(screenRectangle,location);
  }
  final JRootPane rootPane=myEditor.getComponent().getRootPane();
  if (rootPane == null) {
    LOG.error(myEditor.isDisposed() + "; shown=" + myShown+ "; disposed="+ myDisposed+ "; editorShowing="+ myEditor.getContentComponent().isShowing());
  }
  Rectangle candidate=new Rectangle(location,dim);
  ScreenUtil.cropRectangleToFitTheScreen(candidate);
  SwingUtilities.convertPointFromScreen(location,rootPane.getLayeredPane());
  return new Rectangle(location.x,location.y,dim.width,candidate.height);
}
