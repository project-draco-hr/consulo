{
  Dimension dim=getComponent().getPreferredSize();
  int lookupStart=getLookupStart();
  if (lookupStart < 0) {
    LOG.assertTrue(false,lookupStart + "; minprefix=" + myMinPrefixLength+ "; offset="+ myEditor.getCaretModel().getOffset()+ "; element="+ getPsiElement());
  }
  LogicalPosition pos=myEditor.offsetToLogicalPosition(lookupStart);
  Point location=myEditor.logicalPositionToXY(pos);
  location.y+=myEditor.getLineHeight();
  JComponent editorComponent=myEditor.getComponent();
  JComponent internalComponent=myEditor.getContentComponent();
  final JRootPane rootPane=editorComponent.getRootPane();
  if (rootPane == null) {
synchronized (myItems) {
      LOG.assertTrue(false,myItems);
    }
  }
  JLayeredPane layeredPane=rootPane.getLayeredPane();
  Point layeredPanePoint=SwingUtilities.convertPoint(internalComponent,location,layeredPane);
  layeredPanePoint.x-=myCellRenderer.getIconIndent();
  if (dim.width > layeredPane.getWidth()) {
    dim.width=layeredPane.getWidth();
  }
  int wshift=layeredPane.getWidth() - (layeredPanePoint.x + dim.width);
  if (wshift < 0) {
    layeredPanePoint.x+=wshift;
  }
  int shiftLow=layeredPane.getHeight() - (layeredPanePoint.y + dim.height);
  int shiftHigh=layeredPanePoint.y - dim.height;
  myPositionedAbove=shiftLow < 0 && shiftLow < shiftHigh ? Boolean.TRUE : Boolean.FALSE;
  if (myPositionedAbove.booleanValue()) {
    layeredPanePoint.y-=dim.height + myEditor.getLineHeight();
  }
  return layeredPanePoint;
}
