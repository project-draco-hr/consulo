{
  super(new JPanel(new BorderLayout()));
  setForceShowAsPopup(true);
  myProject=project;
  myEditor=editor;
  myIconPanel.setVisible(false);
  myCellRenderer=new LookupCellRenderer(this);
  myList.setCellRenderer(myCellRenderer);
  myList.setFocusable(false);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setBackground(LookupCellRenderer.BACKGROUND_COLOR);
  myScrollPane=ScrollPaneFactory.createScrollPane(myList);
  myScrollPane.setViewportBorder(new EmptyBorder(0,0,0,0));
  myScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
  myScrollPane.getVerticalScrollBar().setPreferredSize(new Dimension(13,-1));
  getComponent().add(myScrollPane,BorderLayout.NORTH);
  myScrollPane.setBorder(null);
  myAdComponent=new Advertiser(this);
  JComponent adComponent=myAdComponent.getAdComponent();
  adComponent.setBorder(new EmptyBorder(0,1,1,2 + relevanceSortIcon.getIconWidth()));
  getComponent().add(adComponent,BorderLayout.SOUTH);
  getComponent().setBorder(new BegPopupMenuBorder());
  myIconPanel.setBackground(Color.LIGHT_GRAY);
  myIconPanel.add(myProcessIcon);
  updateLookupStart(0);
  final ListModel model=myList.getModel();
  addEmptyItem((DefaultListModel)model);
  updateListHeight(model);
  setArranger(arranger);
  addListeners();
  mySortingLabel=new JLabel();
  mySortingLabel.setBorder(new LineBorder(Color.LIGHT_GRAY));
  mySortingLabel.setOpaque(true);
  mySortingLabel.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      UISettings.getInstance().SORT_LOOKUP_ELEMENTS_LEXICOGRAPHICALLY=!UISettings.getInstance().SORT_LOOKUP_ELEMENTS_LEXICOGRAPHICALLY;
      updateSorting();
    }
  }
);
  updateSorting();
}
