{
  final long oldMoment=System.currentTimeMillis() - EMPTY_CONNECTION_ALLOWED_FOR;
synchronized (myLock) {
    SshLogger.debug("shared connection: control self: queue size " + myQueue.size() + " repo "+ myRepository);
    for (Iterator<Cell> iterator=myQueue.iterator(); iterator.hasNext(); ) {
      final Cell cell=iterator.next();
      if (cell.isClosed()) {
        SshLogger.debug("shared connection: control self: closed, removing");
        iterator.remove();
        continue;
      }
      if (cell.isEmptyAndOlderThen(oldMoment)) {
        SshLogger.debug("shared connection: control self: is empty and old, closing");
        cell.closeSelf();
        iterator.remove();
      }
    }
    if (myQueue.isEmpty()) {
      SshLogger.debug("shared connection: control self: unregister from socks proxy authenticator");
      SocksAuthenticatorManager.getInstance().unregister(myConnectionSettings);
    }
  }
}
