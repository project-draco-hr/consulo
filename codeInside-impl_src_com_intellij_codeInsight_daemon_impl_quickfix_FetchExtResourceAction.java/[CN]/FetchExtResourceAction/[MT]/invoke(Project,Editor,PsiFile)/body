{
  int offset=editor.getCaretModel().getOffset();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  final String uri=findUri(file,offset);
  if (uri == null)   return;
  final ProgressWindow progressWindow=new ProgressWindow(true,project);
  progressWindow.setTitle(QuickFixBundle.message("fetching.resource.title"));
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    new Thread(new Runnable(){
      public void run(){
        ProgressManager.getInstance().runProcess(new Runnable(){
          public void run(){
            do {
              try {
                HttpConfigurable.getInstance().prepareURL(uri);
                fetchDtd(project,uri);
                break;
              }
 catch (              IOException ex) {
                String uriWithProblems=uri;
                String message=QuickFixBundle.message("error.fetching.title");
                IOException cause=ex;
                if (ex instanceof FetchingResourceIOException) {
                  uriWithProblems=((FetchingResourceIOException)ex).url;
                  cause=(IOException)ex.getCause();
                  if (!uri.equals(uriWithProblems))                   message=QuickFixBundle.message("error.fetching.dependent.resource.title");
                }
                if (!IOExceptionDialog.showErrorDialog(cause,message,QuickFixBundle.message("error.fetching.resource",uriWithProblems))) {
                  break;
                }
 else {
                  continue;
                }
              }
            }
 while (true);
          }
        }
,progressWindow);
      }
    }
,FETCHING_THREAD_ID).start();
  }
}
