{
  JSplitPane splitPane=new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);
  final JBList generatorList=new JBList();
  DirectoryProjectGenerator[] generators=Extensions.getExtensions(DirectoryProjectGenerator.EP_NAME);
  DefaultListModel listModel=new DefaultListModel();
  EmptyProjectGenerator emptyProjectGenerator=new EmptyProjectGenerator();
  listModel.addElement(emptyProjectGenerator);
  for (  DirectoryProjectGenerator generator : generators) {
    if (generator instanceof WebProjectGenerator) {
      listModel.addElement(generator);
    }
  }
  generatorList.setModel(listModel);
  generatorList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  generatorList.getExpandableItemsHandler().setEnabled(false);
  generatorList.setCellRenderer(new ListCellRendererWrapper<DirectoryProjectGenerator>(generatorList.getCellRenderer()){
    @Override public void customize(    JList list,    DirectoryProjectGenerator value,    int index,    boolean selected,    boolean hasFocus){
      setText(" " + value.getName());
    }
  }
);
  generatorList.addListSelectionListener(new ListSelectionListener(){
    @SuppressWarnings({"HardCodedStringLiteral"}) public void valueChanged(    ListSelectionEvent e){
      if (e.getValueIsAdjusting()) {
        return;
      }
      @SuppressWarnings("unchecked") WebProjectGenerator<Object> selectedGenerator=(WebProjectGenerator<Object>)generatorList.getSelectedValue();
      myCurrentGenerator=selectedGenerator;
      showGenerator(selectedGenerator);
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          generatorList.requestFocusInWindow();
        }
      }
);
    }
  }
);
  JPanel leftPanel=createLeftPanel(generatorList);
  splitPane.setLeftComponent(leftPanel);
  myRightPanel=new JPanel(new CardLayout());
  splitPane.setRightComponent(myRightPanel);
  generatorList.setSelectedValue(emptyProjectGenerator,true);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      generatorList.requestFocusInWindow();
    }
  }
,ModalityState.any());
  return splitPane;
}
