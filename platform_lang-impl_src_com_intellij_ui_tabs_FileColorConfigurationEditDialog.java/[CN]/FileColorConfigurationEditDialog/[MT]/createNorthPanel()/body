{
  final JPanel result=new JPanel();
  result.setLayout(new BoxLayout(result,BoxLayout.Y_AXIS));
  final NamedScopesHolder[] scopeHolders=NamedScopeManager.getAllNamedScopeHolders(myManager.getProject());
  for (  final NamedScopesHolder scopeHolder : scopeHolders) {
    final NamedScope[] scopes=scopeHolder.getScopes();
    for (    final NamedScope scope : scopes) {
      myScopeNames.put(scope.getName(),scope);
    }
  }
  myScopeComboBox=new JComboBox(ArrayUtil.toStringArray(myScopeNames.keySet()));
  myScopeComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateCustomButton();
      updateOKButton();
    }
  }
);
  final JPanel pathPanel=new JPanel();
  pathPanel.setLayout(new BorderLayout());
  final JLabel pathLabel=new JLabel("Scope:");
  pathLabel.setDisplayedMnemonic('S');
  pathLabel.setLabelFor(myScopeComboBox);
  pathPanel.add(pathLabel,BorderLayout.WEST);
  pathPanel.add(myScopeComboBox,BorderLayout.CENTER);
  result.add(pathPanel);
  final JPanel colorPanel=new JPanel();
  colorPanel.setBorder(BorderFactory.createEmptyBorder(5,0,5,0));
  colorPanel.setLayout(new BoxLayout(colorPanel,BoxLayout.X_AXIS));
  final JLabel colorLabel=new JLabel("Color:");
  colorPanel.add(colorLabel);
  colorPanel.add(createColorButtonsPanel(myConfiguration));
  colorPanel.add(Box.createHorizontalGlue());
  result.add(colorPanel);
  return result;
}
