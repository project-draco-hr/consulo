{
  expression=PsiUtil.deparenthesizeExpression(expression);
  if (expression == null) {
    return null;
  }
  if (!(expression instanceof PsiReferenceExpression)) {
    return null;
  }
  final PsiReferenceExpression reference=(PsiReferenceExpression)expression;
  final PsiExpression qualifierExpression=reference.getQualifierExpression();
  if (qualifierExpression != null) {
    return null;
  }
  final PsiElement referent=reference.resolve();
  if (!(referent instanceof PsiField)) {
    return null;
  }
  final PsiField field=(PsiField)referent;
  if (field.hasModifierProperty(PsiModifier.VOLATILE)) {
    return null;
  }
 else {
    return field;
  }
}
