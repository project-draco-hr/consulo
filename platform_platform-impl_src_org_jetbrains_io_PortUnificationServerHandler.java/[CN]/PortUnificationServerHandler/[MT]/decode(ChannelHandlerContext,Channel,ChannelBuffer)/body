{
  if (buffer.readableBytes() < 5) {
    return null;
  }
  ChannelPipeline pipeline=context.getPipeline();
  if (detectSsl && SslHandler.isEncrypted(buffer)) {
    SSLEngine engine=SSL_SERVER_CONTEXT.getValue().createSSLEngine();
    engine.setUseClientMode(false);
    pipeline.addLast("ssl",new SslHandler(engine));
    pipeline.addLast("streamer",new ChunkedWriteHandler());
    pipeline.addLast("unificationWOSsl",new PortUnificationServerHandler(delegatingHttpRequestHandler,null,false,detectGzip));
  }
 else {
    int magic1=buffer.getUnsignedByte(buffer.readerIndex());
    int magic2=buffer.getUnsignedByte(buffer.readerIndex() + 1);
    if (detectGzip && magic1 == 31 && magic2 == 139) {
      pipeline.addLast("gzipDeflater",new ZlibEncoder(ZlibWrapper.GZIP));
      pipeline.addLast("gzipInflater",new ZlibDecoder(ZlibWrapper.GZIP));
      pipeline.addLast("unificationWOGzip",new PortUnificationServerHandler(delegatingHttpRequestHandler,null,detectSsl,false));
    }
 else {
      pipeline.addLast("decoder",new HttpRequestDecoder());
      pipeline.addLast("aggregator",new HttpChunkAggregator(1048576));
      pipeline.addLast("encoder",new HttpResponseEncoder());
      pipeline.addLast("deflater",new HttpContentCompressor());
      pipeline.addLast("handler",delegatingHttpRequestHandler);
    }
  }
  pipeline.remove(this);
  return buffer.readBytes(buffer.readableBytes());
}
