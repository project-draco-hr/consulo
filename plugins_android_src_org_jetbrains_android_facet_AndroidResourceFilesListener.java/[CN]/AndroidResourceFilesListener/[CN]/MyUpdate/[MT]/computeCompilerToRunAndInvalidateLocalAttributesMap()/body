{
  if (myFacet.isDisposed()) {
    return null;
  }
  final Module myModule=myFacet.getModule();
  final Project project=myModule.getProject();
  if (project.isDisposed()) {
    return null;
  }
  final VirtualFile file=myEvent.getFile();
  final Module module=ModuleUtil.findModuleForFile(file,project);
  if (module != myModule) {
    return null;
  }
  VirtualFile parent=myEvent.getParent();
  if (parent == null) {
    return null;
  }
  final VirtualFile gp=parent.getParent();
  final VirtualFile resourceDir=AndroidRootUtil.getResourceDir(module);
  if (gp == resourceDir && ResourceFolderType.VALUES.getName().equals(AndroidResourceUtil.getResourceTypeByDirName(parent.getName()))) {
    myFacet.getLocalResourceManager().invalidateAttributeDefinitions();
  }
  if (AndroidAptCompiler.isToCompileModule(module,myFacet.getConfiguration()) && (myFacet.getConfiguration().REGENERATE_R_JAVA && (gp == resourceDir || AndroidRootUtil.getManifestFile(module) == file))) {
    final Manifest manifest=myFacet.getManifest();
    final String aPackage=manifest != null ? manifest.getPackage().getValue() : null;
    if (myCachedPackage != null && !myCachedPackage.equals(aPackage)) {
      String aptGenDirPath=myFacet.getAptGenSourceRootPath();
      AndroidCompileUtil.removeDuplicatingClasses(myModule,myCachedPackage,AndroidUtils.R_CLASS_NAME,null,aptGenDirPath);
    }
    myCachedPackage=aPackage;
    return AndroidAutogeneratorMode.AAPT;
  }
  if (myFacet.getConfiguration().REGENERATE_JAVA_BY_AIDL && file.getFileType() == AndroidIdlFileType.ourFileType) {
    VirtualFile sourceRoot=findSourceRoot(myModule,file);
    if (sourceRoot != null && AndroidRootUtil.getAidlGenDir(module,myFacet) != sourceRoot) {
      return AndroidAutogeneratorMode.AIDL;
    }
  }
  if (file.getFileType() == AndroidRenderscriptFileType.INSTANCE) {
    final VirtualFile sourceRoot=findSourceRoot(myModule,file);
    if (sourceRoot != null && AndroidRootUtil.getRenderscriptGenDir(myModule) != sourceRoot) {
      return AndroidAutogeneratorMode.RENDERSCRIPT;
    }
  }
  return null;
}
