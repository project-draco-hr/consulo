{
  myProject=project;
  myAutoScrollToSourceHandler=new AutoScrollToSourceHandler(){
    protected boolean isAutoScrollMode(){
      return HierarchyBrowserManager.getInstance(myProject).IS_AUTOSCROLL_TO_SOURCE;
    }
    protected void setAutoScrollMode(    final boolean state){
      HierarchyBrowserManager.getInstance(myProject).IS_AUTOSCROLL_TO_SOURCE=state;
    }
  }
;
  setHierarchyBase(method);
  setLayout(new BorderLayout());
  final ActionToolbar toolbar=createToolbar();
  add(toolbar.getComponent(),BorderLayout.NORTH);
  myCardLayout=new CardLayout();
  myTreePanel=new JPanel(myCardLayout);
  myTrees.put(MethodHierarchyTreeStructure.TYPE,createTree());
  final Enumeration<String> keys=myTrees.keys();
  while (keys.hasMoreElements()) {
    final String key=keys.nextElement();
    final JTree tree=myTrees.get(key);
    myOccurrenceNavigators.put(key,new OccurenceNavigatorSupport(tree){
      @Nullable protected Navigatable createDescriptorForNode(      DefaultMutableTreeNode node){
        final Object userObject=node.getUserObject();
        if (userObject instanceof MethodHierarchyNodeDescriptor) {
          MethodHierarchyNodeDescriptor nodeDescriptor=(MethodHierarchyNodeDescriptor)userObject;
          final PsiElement psiElement=nodeDescriptor.getTargetElement();
          if (psiElement == null || !psiElement.isValid())           return null;
          final VirtualFile virtualFile=psiElement.getContainingFile().getVirtualFile();
          if (virtualFile != null) {
            return new OpenFileDescriptor(psiElement.getProject(),virtualFile,psiElement.getTextOffset());
          }
        }
        return null;
      }
      public String getNextOccurenceActionName(){
        return IdeBundle.message("hierarchy.method.next.occurence.name");
      }
      public String getPreviousOccurenceActionName(){
        return IdeBundle.message("hierarchy.method.prev.occurence.name");
      }
    }
);
    myTreePanel.add(new JScrollPane(tree),key);
  }
  add(myTreePanel,BorderLayout.CENTER);
  add(createLegendPanel(),BorderLayout.SOUTH);
}
