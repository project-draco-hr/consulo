{
  if (!(owner instanceof PsiClass)) {
    return true;
  }
  final PsiClass aClass=(PsiClass)owner;
  final PsiElement parent=aClass.getParent();
  if (!(parent instanceof PsiJavaFile)) {
    return true;
  }
  final PsiJavaFile javaFile=(PsiJavaFile)parent;
  final String name=FileUtil.getNameWithoutExtension(javaFile.getName());
  final String className=aClass.getName();
  if (name.equals(className)) {
    return true;
  }
  final MultiMap<PsiElement,String> conflicts=new MultiMap();
  conflicts.putValue(aClass,"The " + RefactoringUIUtil.getDescription(aClass,false) + " is declared in "+ RefactoringUIUtil.getDescription(javaFile,false)+ " but when public should be declared in a file named '"+ className+ '\'');
  final ConflictsDialog conflictsDialog=new ConflictsDialog(owner.getProject(),conflicts);
  conflictsDialog.show();
  return conflictsDialog.isOK();
}
