{
  final boolean isInterface=typeDefinitionBody != null && ((GrTypeDefinition)typeDefinitionBody.getParent()).isInterface();
  if (myType2 == mSEMI)   return;
  if (typeDefinitionBody != null) {
    if ((myType1 == VARIABLE_DEFINITION || isSemiAfter(VARIABLE_DEFINITION)) && METHOD_DEFS.contains(myType2)) {
      final int minBlankLines=Math.max(isInterface ? mySettings.BLANK_LINES_AROUND_METHOD_IN_INTERFACE : mySettings.BLANK_LINES_AROUND_METHOD,isInterface ? mySettings.BLANK_LINES_AROUND_FIELD_IN_INTERFACE : mySettings.BLANK_LINES_AROUND_FIELD);
      myResult=Spacing.createSpacing(0,0,minBlankLines + 1,mySettings.KEEP_LINE_BREAKS,keepBlankLines());
      return;
    }
 else     if (myType1 == VARIABLE_DEFINITION || isSemiAfter(VARIABLE_DEFINITION) || myType2 == VARIABLE_DEFINITION) {
      final int minBlankLines=isInterface ? mySettings.BLANK_LINES_AROUND_FIELD_IN_INTERFACE : mySettings.BLANK_LINES_AROUND_FIELD;
      myResult=Spacing.createSpacing(0,0,minBlankLines + 1,mySettings.KEEP_LINE_BREAKS,keepBlankLines());
      return;
    }
  }
  if (METHOD_DEFS.contains(myType1) || isSemiAfter(METHOD_DEFS) || METHOD_DEFS.contains((myType2))) {
    if (myType1 == GROOVY_DOC_COMMENT) {
      createLF(true);
    }
 else {
      final int minBlankLines=isInterface ? mySettings.BLANK_LINES_AROUND_METHOD_IN_INTERFACE : mySettings.BLANK_LINES_AROUND_METHOD;
      myResult=Spacing.createSpacing(0,0,minBlankLines + 1,mySettings.KEEP_LINE_BREAKS,keepBlankLines());
    }
  }
}
