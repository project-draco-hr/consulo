{
  if (myChild2.getElementType() == mLPAREN) {
    createSpaceInCode(mySettings.SPACE_BEFORE_METHOD_PARENTHESES);
  }
 else   if (myChild2.getElementType() == mRPAREN && myChild2.getElementType() == THROW_CLAUSE) {
    createSpaceInCode(true);
  }
 else   if (myChild2.getElementType() == OPEN_BLOCK) {
    PsiElement methodName=method.getNameIdentifier();
    int dependancyStart=methodName == null ? myParent.getTextRange().getStartOffset() : methodName.getTextRange().getStartOffset();
    myResult=getSpaceBeforeLBrace(mySettings.SPACE_BEFORE_METHOD_LBRACE,mySettings.METHOD_BRACE_STYLE,new TextRange(dependancyStart,myChild1.getTextRange().getEndOffset()),mySettings.KEEP_SIMPLE_METHODS_IN_ONE_LINE);
  }
 else   if (myChild1.getElementType() == MODIFIERS) {
    processModifierList(myChild1);
  }
 else   if (COMMENT_SET.contains(myChild1.getElementType()) && (myChild2.getElementType() == MODIFIERS || myChild2.getElementType() == REFERENCE_ELEMENT)) {
    myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,0);
  }
}
