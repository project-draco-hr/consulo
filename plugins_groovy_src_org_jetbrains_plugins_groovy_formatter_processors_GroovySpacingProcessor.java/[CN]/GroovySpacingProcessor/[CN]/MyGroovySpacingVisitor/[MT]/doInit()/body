{
  if (myChild1.getPsi().getLanguage() != GROOVY_LANGUAGE || myChild2.getPsi().getLanguage() != GROOVY_LANGUAGE) {
    return;
  }
  if (myChild2 != null && mySettings.KEEP_FIRST_COLUMN_COMMENT && SpacingUtil.COMMENT_BIT_SET.contains(myChild2.getElementType())) {
    myResult=Spacing.createKeepingFirstColumnSpacing(0,Integer.MAX_VALUE,true,1);
  }
 else {
    if (myParent instanceof GroovyPsiElement) {
      ((GroovyPsiElement)myParent).accept(this);
      if (myResult == null) {
        final ASTNode prev=SpacingUtil.getPrevElementType(myChild2);
        if (prev != null && prev.getElementType() == GroovyTokenTypes.mSL_COMMENT) {
          myResult=Spacing.createSpacing(0,0,1,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
        }
 else         if (!CodeEditUtil.canStickChildrenTogether(myChild1,myChild2)) {
          myResult=Spacing.createSpacing(1,Integer.MIN_VALUE,0,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE);
        }
 else         if (myChild1.getElementType() == GroovyTokenTypes.mML_COMMENT) {
          myResult=null;
        }
 else         if (!SpacingUtil.shouldKeepSpace(myParent)) {
          myResult=Spacing.createSpacing(0,0,0,true,mySettings.KEEP_BLANK_LINES_IN_CODE);
        }
      }
    }
  }
}
