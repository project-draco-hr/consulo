{
  if (myChild2.getElementType() == mLPAREN) {
    createSpaceInCode(mySettings.SPACE_BEFORE_FOR_PARENTHESES);
  }
 else   if (myChild1.getElementType() == mLPAREN) {
    ASTNode rparenth=findFrom(myChild2,mRPAREN,true);
    if (rparenth == null) {
      createSpaceInCode(mySettings.SPACE_WITHIN_FOR_PARENTHESES);
    }
 else {
      createParenSpace(mySettings.FOR_STATEMENT_LPAREN_ON_NEXT_LINE,mySettings.SPACE_WITHIN_FOR_PARENTHESES,new TextRange(myChild1.getTextRange().getStartOffset(),rparenth.getTextRange().getEndOffset()));
    }
  }
 else   if (myChild2.getElementType() == mRPAREN) {
    ASTNode lparenth=findFrom(myChild2,mLPAREN,false);
    if (lparenth == null) {
      createSpaceInCode(mySettings.SPACE_WITHIN_FOR_PARENTHESES);
    }
 else {
      createParenSpace(mySettings.FOR_STATEMENT_RPAREN_ON_NEXT_LINE,mySettings.SPACE_WITHIN_FOR_PARENTHESES,new TextRange(lparenth.getTextRange().getStartOffset(),myChild2.getTextRange().getEndOffset()));
    }
  }
 else   if (myChild2.getElementType() == BLOCK_STATEMENT || myChild2.getElementType() == OPEN_BLOCK) {
    if (myChild2.getElementType() == BLOCK_STATEMENT) {
      myResult=getSpaceBeforeLBrace(mySettings.SPACE_BEFORE_FOR_LBRACE,mySettings.BRACE_STYLE,new TextRange(myParent.getTextRange().getStartOffset(),myChild1.getTextRange().getEndOffset()),mySettings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE);
    }
 else     if (mySettings.KEEP_CONTROL_STATEMENT_IN_ONE_LINE) {
      myResult=Spacing.createDependentLFSpacing(1,1,myParent.getTextRange(),false,mySettings.KEEP_BLANK_LINES_IN_CODE);
    }
 else {
      myResult=Spacing.createSpacing(0,0,1,false,mySettings.KEEP_BLANK_LINES_IN_CODE);
    }
  }
}
