{
  if (usedFormNames.contains(formName)) {
    throw new RecursiveFormNestingException();
  }
  usedFormNames.add(formName);
  final LwRootContainer rootContainer;
  try {
    rootContainer=nestedFormLoader.loadForm(formName);
  }
 catch (  Exception e) {
    throw new CodeGenerationException(null,"Error loading nested form: " + e.getMessage(),e);
  }
  final Set thisFormNestedForms=new HashSet();
  final CodeGenerationException[] validateExceptions=new CodeGenerationException[1];
  final RecursiveFormNestingException[] recursiveNestingExceptions=new RecursiveFormNestingException[1];
  rootContainer.accept(new ComponentVisitor(){
    public boolean visit(    final IComponent component){
      if (component instanceof LwNestedForm) {
        LwNestedForm nestedForm=(LwNestedForm)component;
        if (!thisFormNestedForms.contains(nestedForm.getFormFileName())) {
          thisFormNestedForms.add(nestedForm.getFormFileName());
          try {
            validateNestedFormLoop(usedFormNames,nestedForm.getFormFileName(),nestedFormLoader);
          }
 catch (          RecursiveFormNestingException e) {
            recursiveNestingExceptions[0]=e;
            return false;
          }
catch (          CodeGenerationException e) {
            validateExceptions[0]=e;
            return false;
          }
        }
      }
      return true;
    }
  }
);
  if (recursiveNestingExceptions[0] != null) {
    throw recursiveNestingExceptions[0];
  }
  if (validateExceptions[0] != null) {
    throw validateExceptions[0];
  }
}
