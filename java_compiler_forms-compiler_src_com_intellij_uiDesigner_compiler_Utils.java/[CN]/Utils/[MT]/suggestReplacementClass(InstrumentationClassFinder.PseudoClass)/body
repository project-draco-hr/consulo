{
  final InstrumentationClassFinder.PseudoClass jComponentClass=componentClass.getFinder().loadClass(JComponent.class.getName());
  while (true) {
    componentClass=componentClass.getSuperClass();
    if (componentClass.equals(jComponentClass)) {
      return componentClass.getFinder().loadClass(JPanel.class.getName());
    }
    if ((componentClass.getModifiers() & (Modifier.ABSTRACT | Modifier.PRIVATE)) != 0) {
      continue;
    }
    if (!componentClass.hasDefaultPublicConstructor()) {
      continue;
    }
    return componentClass;
  }
}
