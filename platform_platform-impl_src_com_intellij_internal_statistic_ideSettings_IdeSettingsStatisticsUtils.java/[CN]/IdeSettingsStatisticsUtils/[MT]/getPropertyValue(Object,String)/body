{
  final Class<? extends Object> componentInstanceClass=componentInstance.getClass();
  Object propertyValue=null;
  try {
    Field field=componentInstanceClass.getDeclaredField(propertyName);
    propertyValue=field.get(componentInstance);
  }
 catch (  NoSuchFieldException ignored) {
  }
catch (  IllegalAccessException ignored) {
  }
  if (propertyValue == null) {
    Method method=getMethod(componentInstanceClass,"get" + StringUtil.capitalize(propertyName));
    if (method == null) {
      method=getMethod(componentInstanceClass,"is" + StringUtil.capitalize(propertyName));
    }
    if (method != null) {
      try {
        propertyValue=method.invoke(componentInstance);
      }
 catch (      Exception ignored) {
      }
    }
  }
  return propertyValue;
}
