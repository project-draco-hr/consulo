{
  MoveClassUsageCollector collector=new MoveClassUsageCollector(myElementsToMove,mySearchInComments,mySearchInNonJavaFiles){
    protected String getNewName(    final PsiElement element){
      return getNewQName(element);
    }
  }
;
  List<UsageInfo> allUsages=collector.collectUsages();
  ArrayList<String> conflicts=new ArrayList<String>();
  myMoveDestination.analyzeModuleConflicts(Arrays.asList(myElementsToMove),conflicts,allUsages.toArray(new UsageInfo[allUsages.size()]));
  final UsageInfo[] usageInfos=allUsages.toArray(new UsageInfo[allUsages.size()]);
  detectPackageLocalsMoved(usageInfos,conflicts);
  detectPackageLocalsUsed(conflicts);
  if (!conflicts.isEmpty()) {
    allUsages.add(new ConflictsUsageInfo(myElementsToMove[0],conflicts));
  }
  return UsageViewUtil.removeDuplicatedUsages(allUsages.toArray(new UsageInfo[allUsages.size()]));
}
