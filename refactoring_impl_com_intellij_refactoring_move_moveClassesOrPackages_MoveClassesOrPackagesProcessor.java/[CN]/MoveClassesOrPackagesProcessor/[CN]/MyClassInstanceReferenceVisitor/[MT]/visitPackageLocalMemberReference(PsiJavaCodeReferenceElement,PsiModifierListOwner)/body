{
  PsiElement container=ConflictsUtil.getContainer(qualified);
  HashSet<PsiElement> reportedContainers=myReportedElementToContainer.get(member);
  if (reportedContainers == null) {
    reportedContainers=new HashSet<PsiElement>();
    myReportedElementToContainer.put(member,reportedContainers);
  }
  if (!reportedContainers.contains(container)) {
    reportedContainers.add(container);
    if (!isInsideMoved(container)) {
      PsiFile containingFile=container.getContainingFile();
      if (containingFile != null) {
        PsiDirectory directory=containingFile.getContainingDirectory();
        if (directory != null) {
          PsiPackage aPackage=JavaDirectoryService.getInstance().getPackage(directory);
          if (!myTargetPackage.equalToPackage(aPackage)) {
            String message=RefactoringBundle.message("0.will.be.inaccessible.from.1",RefactoringUIUtil.getDescription(member,true),RefactoringUIUtil.getDescription(container,true));
            myConflicts.add(ConflictsUtil.capitalize(message));
          }
        }
      }
    }
  }
}
