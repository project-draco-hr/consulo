{
  if (member instanceof PsiField && member.hasModifierProperty(PsiModifier.STATIC)) {
    final List<PsiField> referencedFields=new ArrayList<PsiField>();
    final PsiExpression psiExpression=((PsiField)member).getInitializer();
    if (psiExpression != null) {
      psiExpression.accept(new JavaRecursiveElementWalkingVisitor(){
        @Override public void visitReferenceExpression(        final PsiReferenceExpression expression){
          super.visitReferenceExpression(expression);
          final PsiElement psiElement=expression.resolve();
          if (psiElement instanceof PsiField) {
            final PsiField psiField=(PsiField)psiElement;
            if (psiField.getContainingClass() == targetClass && !referencedFields.contains(psiField)) {
              referencedFields.add(psiField);
            }
          }
        }
      }
);
    }
    if (!referencedFields.isEmpty()) {
      Collections.sort(referencedFields,new Comparator<PsiField>(){
        public int compare(        final PsiField o1,        final PsiField o2){
          return -PsiUtilBase.compareElementsByPosition(o1,o2);
        }
      }
);
      return referencedFields.get(0);
    }
  }
  return null;
}
