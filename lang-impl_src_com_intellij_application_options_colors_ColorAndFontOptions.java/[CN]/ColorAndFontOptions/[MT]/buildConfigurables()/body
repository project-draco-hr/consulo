{
  myDisposeCompleted=false;
  initAll();
  List<NewColorAndFontPanel> panels=createSubPanels();
  for (  NewColorAndFontPanel partialConfigurable : panels) {
    partialConfigurable.addSchemesListener(new ColorAndFontSettingsListener.Abstract(){
      public void schemeChanged(      final Object source){
        if (!myIsReset) {
          resetSchemesCombo(source);
        }
      }
    }
);
    partialConfigurable.addDescriptionListener(new ColorAndFontSettingsListener.Abstract(){
      @Override public void fontChanged(){
        for (        NewColorAndFontPanel panel : getPanels()) {
          panel.updatePreview();
        }
      }
    }
);
  }
  List<Configurable> result=new ArrayList<Configurable>();
  mySubPanels=new LinkedHashMap<NewColorAndFontPanel,SearchableConfigurable>(panels.size());
  for (  final NewColorAndFontPanel subPanel : panels) {
    mySubPanels.put(subPanel,new InnerSearchableConfigurable(subPanel));
  }
  result.addAll(new ArrayList<SearchableConfigurable>(mySubPanels.values()));
  return result.toArray(new Configurable[result.size()]);
}
