{
  ASTNode astNode=getNode();
  final PsiElement psiParent=astNode.getPsi();
  if (psiParent instanceof GroovyFileBase) {
    return new ChildAttributes(Indent.getNoneIndent(),null);
  }
  if (psiParent instanceof GrSwitchStatement) {
    List<Block> subBlocks=getSubBlocks();
    if (newChildIndex > 0) {
      Block block=subBlocks.get(newChildIndex - 1);
      if (block instanceof GroovyBlock) {
        PsiElement anchorPsi=((GroovyBlock)block).getNode().getPsi();
        if (anchorPsi instanceof GrCaseSection) {
          for (          GrStatement statement : ((GrCaseSection)anchorPsi).getStatements()) {
            if (statement instanceof GrBreakStatement || statement instanceof GrContinueStatement || statement instanceof GrReturnStatement|| statement instanceof GrThrowStatement) {
              return new ChildAttributes(GroovyIndentProcessor.getSwitchCaseIndent(anchorPsi),null);
            }
          }
          @SuppressWarnings("ConstantConditions") int indentSize=mySettings.getIndentOptions().INDENT_SIZE;
          return new ChildAttributes(Indent.getSpaceIndent(mySettings.INDENT_CASE_FROM_SWITCH ? 2 * indentSize : indentSize),null);
        }
      }
    }
  }
  if (BLOCK_SET.contains(astNode.getElementType()) || SWITCH_STATEMENT.equals(astNode.getElementType())) {
    return new ChildAttributes(Indent.getNormalIndent(),null);
  }
  if (CASE_SECTION.equals(astNode.getElementType())) {
    return new ChildAttributes(Indent.getNormalIndent(),null);
  }
  if (psiParent instanceof GrBinaryExpression || psiParent instanceof GrCommandArgumentList || psiParent instanceof GrArgumentList) {
    return new ChildAttributes(Indent.getContinuationWithoutFirstIndent(),null);
  }
  if (psiParent instanceof GrParameterList) {
    return new ChildAttributes(this.getIndent(),this.getAlignment());
  }
  if (psiParent instanceof GrListOrMap) {
    return new ChildAttributes(Indent.getContinuationIndent(),null);
  }
  if (psiParent instanceof GrDocComment || psiParent instanceof GrDocTag) {
    return new ChildAttributes(Indent.getSpaceIndent(GroovyIndentProcessor.GDOC_COMMENT_INDENT),null);
  }
  if (psiParent instanceof GrVariable || psiParent instanceof GrAssignmentExpression) {
    return new ChildAttributes(Indent.getNormalIndent(),null);
  }
  return new ChildAttributes(Indent.getNoneIndent(),null);
}
