{
  final RadComponent[][] components=((RadTableLayoutComponent)component).getGridComponents(false);
  return new ComponentMorphingTool(component,new RadGridLayoutComponent(),target,new RadGridLayout()){
    @Override protected void convertChildren() throws Exception {
      for (      final RadComponent rowComponent : new ArrayList<RadComponent>(myOldComponent.getChildren())) {
        if (RadTableRowLayout.is(rowComponent)) {
          for (          RadComponent cellComponent : new ArrayList<RadComponent>(rowComponent.getChildren())) {
            ModelParser.moveComponent(myOldComponent,(RadViewComponent)cellComponent,(RadViewComponent)rowComponent);
          }
          rowComponent.delete();
        }
 else {
          rowComponent.setClientProperty(TABLE_ROW_KEY,Boolean.TRUE);
        }
      }
      super.convertChildren();
    }
    @Override protected void convertTag(){
      XmlTag tag=myNewComponent.getTag();
      if (components.length > 0) {
        String columnCount=Integer.toString(components[0].length);
        tag.setAttribute("rowCount",SdkConstants.NS_RESOURCES,Integer.toString(components.length));
        tag.setAttribute("columnCount",SdkConstants.NS_RESOURCES,columnCount);
        for (int i=0; i < components.length; i++) {
          RadComponent[] rowComponents=components[i];
          RadComponent firstCellComponent=rowComponents[0];
          if (firstCellComponent != null && firstCellComponent.extractClientProperty(TABLE_ROW_KEY) == Boolean.TRUE) {
            XmlTag cellTag=((RadViewComponent)firstCellComponent).getTag();
            ModelParser.deleteAttribute(cellTag,"layout_span");
            cellTag.setAttribute("layout_column",SdkConstants.NS_RESOURCES,"0");
            cellTag.setAttribute("layout_columnSpan",SdkConstants.NS_RESOURCES,columnCount);
            cellTag.setAttribute("layout_gravity",SdkConstants.NS_RESOURCES,"fill_horizontal");
          }
          for (          RadComponent cellComponent : rowComponents) {
            if (cellComponent != null) {
              XmlTag cellTag=((RadViewComponent)cellComponent).getTag();
              cellTag.setAttribute("layout_row",SdkConstants.NS_RESOURCES,Integer.toString(i));
              break;
            }
          }
        }
        for (        RadComponent childComponent : myNewComponent.getChildren()) {
          XmlAttribute attribute=((RadViewComponent)childComponent).getTag().getAttribute("layout_span",SdkConstants.NS_RESOURCES);
          if (attribute != null) {
            attribute.setName(attribute.getNamespacePrefix() + ":layout_columnSpan");
          }
        }
      }
    }
  }
.result();
}
