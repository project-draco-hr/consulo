{
  RefMethod refMethod=null;
  int spaceIdx=externalName.indexOf(' ');
  int lastDotIdx=externalName.lastIndexOf('.');
  boolean notype=false;
  int parenIndex=externalName.indexOf('(');
  while (lastDotIdx > parenIndex)   lastDotIdx=externalName.lastIndexOf('.',lastDotIdx - 1);
  if (spaceIdx < 0 || spaceIdx > lastDotIdx || spaceIdx > parenIndex) {
    notype=true;
  }
  String className=externalName.substring(notype ? 0 : spaceIdx + 1,lastDotIdx);
  String methodSignature=notype ? externalName.substring(lastDotIdx + 1) : externalName.substring(0,spaceIdx) + ' ' + externalName.substring(lastDotIdx + 1);
  if (RefClassImpl.classFromExternalName(manager,className) == null)   return null;
  try {
    PsiClass psiClass=PsiManager.getInstance(manager.getProject()).findClass(className);
    PsiElementFactory factory=psiClass.getManager().getElementFactory();
    PsiMethod patternMethod=factory.createMethodFromText(methodSignature,psiClass);
    PsiMethod psiMethod=psiClass.findMethodBySignature(patternMethod,false);
    if (psiMethod != null) {
      refMethod=(RefMethod)manager.getReference(psiMethod);
    }
  }
 catch (  IncorrectOperationException e) {
    return null;
  }
  return refMethod;
}
