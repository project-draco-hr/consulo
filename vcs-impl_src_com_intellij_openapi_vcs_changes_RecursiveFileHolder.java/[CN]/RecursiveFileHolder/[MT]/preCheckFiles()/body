{
  for (int i=0; i < (mySwitchRoots.size() - 1); i++) {
    final VirtualFile switchRoot=mySwitchRoots.get(i);
    final String parentUrl=myFiles.get(switchRoot);
    for (Iterator<VirtualFile> iterator=mySwitchRoots.listIterator(i + 1); iterator.hasNext(); ) {
      final VirtualFile file=iterator.next();
      final String childUrl=myFiles.get(file);
      if (VfsUtil.isAncestor(switchRoot,file,true) && childUrl.startsWith(parentUrl)) {
        if (childUrl.length() > parentUrl.length()) {
          String subUrl=childUrl.substring(parentUrl.length());
          subUrl=subUrl.startsWith("/") ? subUrl.substring(1) : subUrl;
          String relativePath=VfsUtil.getRelativePath(file,switchRoot,'/');
          if (relativePath != null) {
            relativePath=relativePath.startsWith("/") ? relativePath.substring(1) : relativePath;
            if (relativePath.equals(subUrl)) {
              iterator.remove();
            }
          }
        }
 else         if (childUrl.length() == parentUrl.length()) {
          iterator.remove();
        }
      }
    }
  }
  for (Iterator<Map.Entry<VirtualFile,String>> iterator=myFiles.entrySet().iterator(); iterator.hasNext(); ) {
    final Map.Entry<VirtualFile,String> entry=iterator.next();
    if (!mySwitchRoots.contains(entry.getKey())) {
      iterator.remove();
    }
  }
}
