{
  final GrQualifiedReference<Qualifier> copy=getCopy(ref);
  if (copy == null)   return false;
  copy.setQualifier(null);
  final PsiElement resolvedCopy=copy.resolve();
  if (ref.getManager().areElementsEquivalent(resolved,resolvedCopy)) {
    return true;
  }
 else   if (resolvedCopy != null) {
    return false;
  }
  if (resolved instanceof PsiClass) {
    final PsiClass clazz=(PsiClass)resolved;
    final String qName=clazz.getQualifiedName();
    if (qName != null && addImports && checkIsInnerClass(clazz,ref) && mayInsertImport(ref)) {
      final GroovyFileBase file=(GroovyFileBase)ref.getContainingFile();
      final GrImportStatement added=file.addImportForClass(clazz);
      if (copy.isReferenceTo(resolved))       return true;
      file.removeImport(added);
    }
  }
  return false;
}
