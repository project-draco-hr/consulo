{
  ArrayList<UsageInfo> usagesVector=new ArrayList<UsageInfo>();
  PsiManager psiManager=PsiManager.getInstance(myProject);
  PsiMigration psiMigration=startMigration(psiManager);
  try {
    if (myMigrationMap == null) {
      return null;
    }
    for (int i=0; i < myMigrationMap.getEntryCount(); i++) {
      MigrationMapEntry entry=myMigrationMap.getEntryAt(i);
      UsageInfo[] usages;
      if (entry.getType() == MigrationMapEntry.PACKAGE) {
        usages=MigrationUtil.findPackageUsages(psiManager,psiMigration,entry.getOldName());
      }
 else {
        usages=MigrationUtil.findClassUsages(psiManager,psiMigration,entry.getOldName());
      }
      for (int j=0; j < usages.length; j++) {
        usagesVector.add(new MigrationUsageInfo(usages[j],entry));
      }
    }
  }
  finally {
    psiMigration.finish();
  }
  return usagesVector.toArray(new MigrationUsageInfo[usagesVector.size()]);
}
