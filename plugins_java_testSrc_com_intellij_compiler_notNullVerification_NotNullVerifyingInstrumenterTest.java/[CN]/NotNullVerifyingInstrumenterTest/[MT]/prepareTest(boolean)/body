{
  String base=JavaTestUtil.getJavaTestDataPath() + "/compiler/notNullVerification/";
  final String baseClassName=getTestName(false);
  String path=base + baseClassName;
  String javaPath=path + ".java";
  File classesDir=FileUtil.createTempDirectory(baseClassName,"output");
  try {
    List<String> cmdLine=ContainerUtil.newArrayList("-classpath",base + "annotations.jar","-d",classesDir.getAbsolutePath());
    if (withDebugInfo) {
      cmdLine.add("-g");
    }
    cmdLine.add(javaPath);
    com.sun.tools.javac.Main.compile(ArrayUtil.toStringArray(cmdLine));
    Class mainClass=null;
    final File[] files=classesDir.listFiles();
    assertNotNull(files);
    boolean modified=false;
    MyClassLoader classLoader=new MyClassLoader(getClass().getClassLoader());
    for (    File file : files) {
      final String fileName=file.getName();
      byte[] content=FileUtil.loadFileBytes(file);
      ClassReader reader=new ClassReader(content,0,content.length);
      ClassWriter writer=new PsiClassWriter(myFixture.getProject(),myJava6);
      modified|=NotNullVerifyingInstrumenter.processClassFile(reader,writer);
      byte[] instrumented=writer.toByteArray();
      final String className=FileUtil.getNameWithoutExtension(fileName);
      final Class aClass=classLoader.doDefineClass(className,instrumented);
      if (className.equals(baseClassName)) {
        mainClass=aClass;
      }
    }
    assertTrue(modified);
    assertNotNull("Class " + baseClassName + " not found!",mainClass);
    return mainClass;
  }
  finally {
    FileUtil.delete(classesDir);
  }
}
