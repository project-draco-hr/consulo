{
  final Cache cache=getCache();
  for (  final FieldInfo field : cache.getFields(qName)) {
    final int oldFlags=field.getFlags();
    if (ClsUtil.isStatic(oldFlags) && ClsUtil.isFinal(oldFlags)) {
      final Cache newClassesCache=getNewClassesCache();
      FieldInfo newField=newClassesCache.findFieldByName(qName,field.getName());
      if (newField == null) {
        if (!ConstantValue.EMPTY_CONSTANT_VALUE.equals(field.getConstantValue())) {
          removedConstants.add(new ChangedConstantsDependencyProcessor.FieldChangeInfo(field));
        }
      }
 else {
        final boolean visibilityRestricted=JavaMakeUtil.isMoreAccessible(oldFlags,newField.getFlags());
        if (!field.getConstantValue().equals(newField.getConstantValue()) || visibilityRestricted) {
          changedConstants.add(new ChangedConstantsDependencyProcessor.FieldChangeInfo(field,visibilityRestricted));
        }
      }
    }
  }
}
