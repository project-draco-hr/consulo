{
  final Pair<int[],Set<VirtualFile>> deps=findDependentClasses(context,context.getProject(),compiledWithErrors);
  final Pair<int[],Set<VirtualFile>> filteredDeps=filter != null ? filter.fun(deps) : deps;
  final CacheCorruptedException[] _ex={null};
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      try {
        CompilerManager compilerConfiguration=CompilerManager.getInstance(context.getProject());
        SourceFileFinder sourceFileFinder=new SourceFileFinder(context.getProject(),context);
        final Cache cache=getCache();
        for (        final int infoQName : filteredDeps.getFirst()) {
          final String qualifiedName=resolve(infoQName);
          final String sourceFileName=cache.getSourceFileName(infoQName);
          final VirtualFile file=sourceFileFinder.findSourceFile(qualifiedName,sourceFileName,true);
          if (file != null) {
            dependentFiles.add(file);
          }
 else {
            LOG.info("No source file for " + resolve(infoQName) + " found; source file name="+ sourceFileName);
          }
        }
        for (        final VirtualFile file : filteredDeps.getSecond()) {
          if (!compilerConfiguration.isExcludedFromCompilation(file)) {
            dependentFiles.add(file);
          }
        }
      }
 catch (      CacheCorruptedException e) {
        _ex[0]=e;
      }
    }
  }
);
}
