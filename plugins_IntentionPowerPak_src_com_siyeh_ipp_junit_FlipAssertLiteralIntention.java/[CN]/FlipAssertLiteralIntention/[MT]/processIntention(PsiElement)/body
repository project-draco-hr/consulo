{
  final PsiMethodCallExpression call=(PsiMethodCallExpression)element;
  final PsiReferenceExpression methodExpression=call.getMethodExpression();
  @NonNls final String fromMethodName=methodExpression.getReferenceName();
  @NonNls final String toMethodName;
  if ("assertTrue".equals(fromMethodName)) {
    toMethodName="assertFalse";
  }
 else {
    toMethodName="assertTrue";
  }
  final PsiElement qualifier=methodExpression.getQualifier();
  final String qualifierText;
  if (qualifier == null) {
    qualifierText="";
  }
 else {
    qualifierText=qualifier.getText() + '.';
  }
  final PsiExpressionList argumentList=call.getArgumentList();
  final PsiExpression[] args=argumentList.getExpressions();
  final String callString;
  if (args.length == 1) {
    final PsiExpression arg=args[0];
    callString=qualifierText + toMethodName + '('+ BoolUtils.getNegatedExpressionText(arg)+ ')';
  }
 else {
    final PsiExpression arg=args[1];
    callString=qualifierText + toMethodName + '('+ args[0].getText()+ ','+ BoolUtils.getNegatedExpressionText(arg)+ ')';
  }
  replaceExpression(callString,call);
}
