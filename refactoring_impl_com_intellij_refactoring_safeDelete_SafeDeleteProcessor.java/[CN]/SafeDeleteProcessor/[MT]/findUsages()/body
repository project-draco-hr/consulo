{
  List<UsageInfo> usages=Collections.synchronizedList(new ArrayList<UsageInfo>());
  for (  PsiElement element : myElements) {
    boolean handled=false;
    for (    SafeDeleteProcessorDelegate delegate : Extensions.getExtensions(SafeDeleteProcessorDelegate.EP_NAME)) {
      if (delegate.handlesElement(element)) {
        final Condition<PsiElement> filter=delegate.findUsages(element,myElements,usages);
        if (filter != null) {
          addNonCodeUsages(element,usages,filter);
        }
        handled=true;
        break;
      }
    }
    if (!handled) {
      if (element instanceof PsiFile) {
        findFileUsages((PsiFile)element,usages);
      }
 else       if (element instanceof PsiNamedElement) {
        findGenericElementUsages(element,usages);
      }
    }
  }
  final UsageInfo[] result=usages.toArray(new UsageInfo[usages.size()]);
  return UsageViewUtil.removeDuplicatedUsages(result);
}
