{
  final PsiMethod method=(PsiMethod)parameter.getDeclarationScope();
  final int index=method.getParameterList().getParameterIndex(parameter);
  for (  PsiReference ref : ReferencesSearch.search(method).findAll()) {
    final PsiElement element=ref.getElement();
    if (element.getParent() instanceof PsiCall) {
      final PsiExpressionList argList=((PsiCall)element.getParent()).getArgumentList();
      if (argList != null) {
        final PsiExpression[] args=argList.getExpressions();
        if (index < args.length) {
          usages.add(new SafeDeleteReferenceSimpleDeleteUsageInfo(args[index],parameter,true));
        }
      }
    }
  }
  for (  PsiReference ref : ReferencesSearch.search(parameter).findAll()) {
    PsiElement element=ref.getElement();
    boolean isSafeDelete=false;
    if (element.getParent().getParent() instanceof PsiMethodCallExpression) {
      PsiMethodCallExpression call=(PsiMethodCallExpression)element.getParent().getParent();
      PsiReferenceExpression methodExpression=call.getMethodExpression();
      if (methodExpression.getText().equals("super") || methodExpression.getQualifierExpression() instanceof PsiSuperExpression) {
        final PsiMethod superMethod=call.resolveMethod();
        if (superMethod != null && MethodSignatureUtil.isSuperMethod(superMethod,method)) {
          isSafeDelete=true;
        }
      }
    }
    usages.add(new SafeDeleteReferenceSimpleDeleteUsageInfo(element,parameter,isSafeDelete));
  }
  addNonCodeUsages(parameter,usages,myInsideDeletedElements);
}
