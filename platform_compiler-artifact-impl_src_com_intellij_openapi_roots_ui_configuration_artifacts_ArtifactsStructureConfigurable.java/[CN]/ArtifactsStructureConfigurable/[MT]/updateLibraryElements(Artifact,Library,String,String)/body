{
  if (ArtifactUtil.processPackagingElements(myPackagingEditorContext.getRootElement(artifact),LibraryElementType.getInstance(),new PackagingElementProcessor<LibraryPackagingElement>(){
    @Override public boolean process(    @NotNull LibraryPackagingElement element,    @NotNull PackagingElementPath path){
      return !isResolvedToLibrary(element,library,oldName);
    }
  }
,myPackagingEditorContext,false,artifact.getArtifactType())) {
    return;
  }
  myPackagingEditorContext.editLayout(artifact,new Runnable(){
    @Override public void run(){
      final ModifiableArtifact modifiableArtifact=myPackagingEditorContext.getOrCreateModifiableArtifactModel().getOrCreateModifiableArtifact(artifact);
      ArtifactUtil.processPackagingElements(modifiableArtifact,LibraryElementType.getInstance(),new PackagingElementProcessor<LibraryPackagingElement>(){
        @Override public boolean process(        @NotNull LibraryPackagingElement element,        @NotNull PackagingElementPath path){
          if (isResolvedToLibrary(element,library,oldName)) {
            element.setLibraryName(newName);
          }
          return true;
        }
      }
,myPackagingEditorContext,false);
    }
  }
);
  final ArtifactEditorImpl artifactEditor=myPackagingEditorContext.getArtifactEditor(artifact);
  if (artifactEditor != null) {
    artifactEditor.rebuildTries();
  }
}
