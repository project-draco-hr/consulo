{
  final Ref<ArrangementNodeComponent> ref=new Ref<ArrangementNodeComponent>();
  node.invite(new ArrangementMatchConditionVisitor(){
    @Override public void visit(    @NotNull ArrangementAtomMatchCondition condition){
      ArrangementNodeComponent component;
      if (myGroupingConditions.contains(condition)) {
        component=new ArrangementGroupingNodeComponent(myDisplayManager,condition);
      }
 else {
        component=new ArrangementAtomNodeComponent(myDisplayManager,condition,prepareRemoveCallback(condition,model));
      }
      ref.set(component);
    }
    @Override public void visit(    @NotNull ArrangementCompositeMatchCondition condition){
switch (condition.getOperator()) {
case AND:
        ref.set(new ArrangementAndNodeComponent(condition,ArrangementNodeComponentFactory.this,myDisplayManager,model));
      break;
case OR:
  }
}
}
);
return ref.get();
}
