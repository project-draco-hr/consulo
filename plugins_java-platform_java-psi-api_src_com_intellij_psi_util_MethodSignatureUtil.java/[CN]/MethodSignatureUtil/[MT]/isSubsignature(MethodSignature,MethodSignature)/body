{
  if (subSignature == superSignature)   return true;
  if (!areSignaturesEqualLightweight(superSignature,subSignature))   return false;
  PsiSubstitutor unifyingSubstitutor=getSuperMethodSignatureSubstitutor(subSignature,superSignature);
  if (checkSignaturesEqualInner(superSignature,subSignature,unifyingSubstitutor))   return true;
  if (subSignature.getTypeParameters().length > 0)   return false;
  final PsiType[] subParameterTypes=subSignature.getParameterTypes();
  final PsiType[] superParameterTypes=superSignature.getParameterTypes();
  for (int i=0; i < subParameterTypes.length; i++) {
    PsiType type1=subParameterTypes[i];
    PsiType type2=TypeConversionUtil.erasure(superParameterTypes[i],superSignature.getSubstitutor());
    if (!Comparing.equal(type1,type2))     return false;
  }
  return true;
}
