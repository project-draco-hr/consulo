{
  final String name=signature.getName();
  final PsiMethod[] methods=superClass.findMethodsByName(name,false);
  for (  final PsiMethod method : methods) {
    if (isSubsignature(method.getSignature(superSubstitutor),signature)) {
      return method;
    }
  }
  if (checkDeep) {
    final PsiClass clazz=superClass.getSuperClass();
    if (clazz != null && clazz != superClass) {
      PsiSubstitutor substitutor1=TypeConversionUtil.getSuperClassSubstitutor(clazz,superClass,superSubstitutor);
      return doFindMethodInSuperClassBySignatureInDerived(clazz,substitutor1,signature,true);
    }
  }
  return null;
}
