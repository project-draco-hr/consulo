{
  rankTopY=new double[model.ranks.size()];
  rankBottomY=new double[model.ranks.size()];
  for (int i=0; i < model.ranks.size(); i++) {
    rankTopY[i]=Double.MAX_VALUE;
    rankBottomY[i]=0.0;
  }
  Set<Object> parentsChanged=null;
  if (layout.isResizeParent()) {
    parentsChanged=new HashSet<Object>();
  }
  Map<Object,mxGraphHierarchyEdge> edges=model.getEdgeMapper();
  Map<Object,mxGraphHierarchyNode> vertices=model.getVertexMapper();
  for (  mxGraphHierarchyNode cell : vertices.values()) {
    setVertexLocation(cell);
    if (layout.isResizeParent()) {
      parentsChanged.add(graph.getModel().getParent(cell.cell));
    }
  }
  if (layout.isResizeParent()) {
    adjustParents(parentsChanged);
  }
  if (this.edgeStyle == HierarchicalEdgeStyle.ORTHOGONAL || this.edgeStyle == HierarchicalEdgeStyle.POLYLINE) {
    localEdgeProcessing(model);
  }
  for (  mxGraphAbstractHierarchyCell cell : edges.values()) {
    setEdgePosition(cell);
  }
}
