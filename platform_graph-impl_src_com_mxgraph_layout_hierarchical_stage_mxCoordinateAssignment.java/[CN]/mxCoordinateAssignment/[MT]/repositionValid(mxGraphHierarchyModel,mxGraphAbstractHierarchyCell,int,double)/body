{
  mxGraphHierarchyRank rankSet=model.ranks.get(new Integer(rank));
  mxGraphAbstractHierarchyCell[] rankArray=rankSet.toArray(new mxGraphAbstractHierarchyCell[rankSet.size()]);
  int rankIndex=-1;
  for (int i=0; i < rankArray.length; i++) {
    if (cell == rankArray[i]) {
      rankIndex=i;
      break;
    }
  }
  if (rankIndex < 0) {
    return false;
  }
  int currentX=cell.getGeneralPurposeVariable(rank);
  if (position < currentX) {
    if (rankIndex == 0) {
      return true;
    }
    mxGraphAbstractHierarchyCell leftCell=rankArray[rankIndex - 1];
    int leftLimit=leftCell.getGeneralPurposeVariable(rank);
    leftLimit=leftLimit + (int)leftCell.width / 2 + (int)intraCellSpacing + (int)cell.width / 2;
    if (leftLimit <= position) {
      return true;
    }
 else {
      return false;
    }
  }
 else   if (position > currentX) {
    if (rankIndex == rankArray.length - 1) {
      return true;
    }
    mxGraphAbstractHierarchyCell rightCell=rankArray[rankIndex + 1];
    int rightLimit=rightCell.getGeneralPurposeVariable(rank);
    rightLimit=rightLimit - (int)rightCell.width / 2 - (int)intraCellSpacing - (int)cell.width / 2;
    if (rightLimit >= position) {
      return true;
    }
 else {
      return false;
    }
  }
  return true;
}
