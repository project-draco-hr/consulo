{
  Map<Object,mxGraphHierarchyEdge> edges=model.getEdgeMapper();
  for (  mxGraphAbstractHierarchyCell cell : edges.values()) {
    if (cell.maxRank > cell.minRank + 2) {
      int numEdgeLayers=cell.maxRank - cell.minRank - 1;
      int referenceX=cell.getGeneralPurposeVariable(cell.minRank + 1);
      boolean edgeStraight=true;
      int refSegCount=0;
      for (int i=cell.minRank + 2; i < cell.maxRank; i++) {
        int x=cell.getGeneralPurposeVariable(i);
        if (referenceX != x) {
          edgeStraight=false;
          referenceX=x;
        }
 else {
          refSegCount++;
        }
      }
      if (edgeStraight) {
        continue;
      }
      int upSegCount=0;
      int downSegCount=0;
      double upXPositions[]=new double[numEdgeLayers - 1];
      double downXPositions[]=new double[numEdgeLayers - 1];
      double currentX=cell.getX(cell.minRank + 1);
      for (int i=cell.minRank + 1; i < cell.maxRank - 1; i++) {
        double nextX=cell.getX(i + 1);
        if (currentX == nextX) {
          upXPositions[i - cell.minRank - 1]=currentX;
          upSegCount++;
        }
 else         if (repositionValid(model,cell,i + 1,currentX)) {
          upXPositions[i - cell.minRank - 1]=currentX;
          upSegCount++;
        }
 else {
          upXPositions[i - cell.minRank - 1]=nextX;
          currentX=nextX;
        }
      }
      currentX=cell.getX(cell.maxRank - 1);
      for (int i=cell.maxRank - 1; i > cell.minRank + 1; i--) {
        double nextX=cell.getX(i - 1);
        if (currentX == nextX) {
          downXPositions[i - cell.minRank - 2]=currentX;
          downSegCount++;
        }
 else         if (repositionValid(model,cell,i - 1,currentX)) {
          downXPositions[i - cell.minRank - 2]=currentX;
          downSegCount++;
        }
 else {
          downXPositions[i - cell.minRank - 2]=cell.getX(i - 1);
          currentX=nextX;
        }
      }
      if (downSegCount <= refSegCount && upSegCount <= refSegCount) {
        continue;
      }
      if (downSegCount >= upSegCount) {
        for (int i=cell.maxRank - 2; i > cell.minRank; i--) {
          cell.setX(i,(int)downXPositions[i - cell.minRank - 1]);
        }
      }
 else       if (upSegCount > downSegCount) {
        for (int i=cell.minRank + 2; i < cell.maxRank; i++) {
          cell.setX(i,(int)upXPositions[i - cell.minRank - 2]);
        }
      }
 else {
      }
    }
  }
}
