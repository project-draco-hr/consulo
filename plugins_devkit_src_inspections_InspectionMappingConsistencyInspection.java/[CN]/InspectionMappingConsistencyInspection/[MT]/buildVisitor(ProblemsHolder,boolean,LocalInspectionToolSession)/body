{
  return new XmlElementVisitor(){
    @Override public void visitXmlTag(    XmlTag tag){
      DomElement element=DomUtil.getDomElement(tag);
      if (element instanceof Extension) {
        ExtensionPoint target=((Extension)element).getExtensionPoint();
        if (target != null && InheritanceUtil.isInheritor(target.getBeanClass().getValue(),"com.intellij.codeInspection.InspectionEP")) {
          boolean key=tag.getAttribute("key") != null;
          boolean groupKey=tag.getAttribute("groupKey") != null;
          if (key) {
            if (tag.getAttribute("bundle") == null) {
              checkDefaultBundle(element,holder);
            }
          }
          if (groupKey) {
            if (tag.getAttribute("bundle") == null && tag.getAttribute("groupBundle") == null) {
              checkDefaultBundle(element,holder);
            }
          }
        }
      }
    }
  }
;
}
