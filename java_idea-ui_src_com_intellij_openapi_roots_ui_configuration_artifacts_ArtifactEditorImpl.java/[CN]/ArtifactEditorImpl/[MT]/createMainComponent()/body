{
  mySourceItemsTree.initTree();
  myLayoutTreeComponent.initTree();
  myMainPanel.putClientProperty(DataManager.CLIENT_PROPERTY_DATA_PROVIDER,new TypeSafeDataProviderAdapter(new MyDataProvider()));
  myErrorPanelPlace.add(myValidationManager.getMainErrorPanel(),BorderLayout.CENTER);
  mySplitter=new Splitter(false);
  final JPanel leftPanel=new JPanel(new BorderLayout());
  leftPanel.add(myLayoutTreeComponent.getTreePanel(),BorderLayout.CENTER);
  final Border border=BorderFactory.createEmptyBorder(3,3,3,3);
  leftPanel.setBorder(border);
  mySplitter.setFirstComponent(leftPanel);
  final JPanel rightPanel=new JPanel(new BorderLayout());
  final JPanel rightTopPanel=new JPanel(new BorderLayout());
  rightTopPanel.add(new JLabel("Available Elements (drag'n'drop to layout tree)"),BorderLayout.SOUTH);
  rightPanel.add(rightTopPanel,BorderLayout.NORTH);
  rightPanel.add(ScrollPaneFactory.createScrollPane(mySourceItemsTree.getTree()),BorderLayout.CENTER);
  rightPanel.add(new JPanel(),BorderLayout.SOUTH);
  rightPanel.setBorder(border);
  mySplitter.setSecondComponent(rightPanel);
  myShowIncludedCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (myShowIncludedCheckBox.isSelected()) {
        mySubstitutionParameters.setSubstituteAll();
      }
 else {
        mySubstitutionParameters.setSubstituteNone();
      }
      rebuildTries();
    }
  }
);
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,createToolbarActionGroup(),true);
  leftPanel.add(toolbar.getComponent(),BorderLayout.NORTH);
  rightTopPanel.setPreferredSize(new Dimension(-1,toolbar.getComponent().getPreferredSize().height));
  myTabbedPane=new TabbedPaneWrapper(this);
  myTabbedPane.addTab("Output Layout",mySplitter);
  myPropertiesEditors.addTabs(myTabbedPane);
  myEditorPanel.add(myTabbedPane.getComponent(),BorderLayout.CENTER);
  PopupHandler.installPopupHandler(myLayoutTreeComponent.getLayoutTree(),createPopupActionGroup(),ActionPlaces.UNKNOWN,ActionManager.getInstance());
  TreeToolTipHandler.install(myLayoutTreeComponent.getLayoutTree());
  ToolTipManager.sharedInstance().registerComponent(myLayoutTreeComponent.getLayoutTree());
  rebuildTries();
  return getMainComponent();
}
