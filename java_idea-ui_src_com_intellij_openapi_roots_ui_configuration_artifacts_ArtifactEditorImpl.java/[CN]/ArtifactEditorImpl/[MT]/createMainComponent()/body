{
  mySourceItemsTree.initTree();
  myLayoutTreeComponent.initTree();
  myMainPanel.putClientProperty(DataManager.CLIENT_PROPERTY_DATA_PROVIDER,new TypeSafeDataProviderAdapter(new MyDataProvider()));
  myErrorPanelPlace.add(myValidationManager.getMainErrorPanel(),BorderLayout.CENTER);
  Splitter splitter=new Splitter(false);
  final JPanel leftPanel=new JPanel(new BorderLayout());
  leftPanel.add(myLayoutTreeComponent.getTreePanel(),BorderLayout.CENTER);
  final Border border=BorderFactory.createEmptyBorder(3,3,3,3);
  leftPanel.setBorder(border);
  splitter.setFirstComponent(leftPanel);
  final JPanel rightPanel=new JPanel(new BorderLayout());
  final JPanel rightTopPanel=new JPanel(new BorderLayout());
  rightTopPanel.add(new JLabel("Available Elements (drag'n'drop to layout tree)"),BorderLayout.SOUTH);
  rightPanel.add(rightTopPanel,BorderLayout.NORTH);
  rightPanel.add(ScrollPaneFactory.createScrollPane(mySourceItemsTree),BorderLayout.CENTER);
  rightPanel.setBorder(border);
  splitter.setSecondComponent(rightPanel);
  myShowContentCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final ThreeStateCheckBox.State state=myShowContentCheckBox.getState();
      if (state == ThreeStateCheckBox.State.SELECTED) {
        mySubstitutionParameters.setSubstituteAll();
      }
 else       if (state == ThreeStateCheckBox.State.NOT_SELECTED) {
        mySubstitutionParameters.setSubstituteNone();
      }
      myShowContentCheckBox.setThirdStateEnabled(false);
      myLayoutTreeComponent.rebuildTree();
      onShowContentSettingsChanged();
    }
  }
);
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,createToolbarActionGroup(),true);
  leftPanel.add(toolbar.getComponent(),BorderLayout.NORTH);
  rightTopPanel.setPreferredSize(new Dimension(-1,toolbar.getComponent().getPreferredSize().height));
  myTabbedPane=new TabbedPaneWrapper(this);
  myTabbedPane.addTab("Output Layout",splitter);
  myPropertiesEditors.addTabs(myTabbedPane);
  myEditorPanel.add(myTabbedPane.getComponent(),BorderLayout.CENTER);
  final LayoutTree tree=myLayoutTreeComponent.getLayoutTree();
  new ShowAddPackagingElementPopupAction(this).registerCustomShortcutSet(CommonShortcuts.getNew(),tree);
  PopupHandler.installPopupHandler(tree,createPopupActionGroup(),ActionPlaces.UNKNOWN,ActionManager.getInstance());
  TreeToolTipHandler.install(tree);
  ToolTipManager.sharedInstance().registerComponent(tree);
  rebuildTries();
  return getMainComponent();
}
