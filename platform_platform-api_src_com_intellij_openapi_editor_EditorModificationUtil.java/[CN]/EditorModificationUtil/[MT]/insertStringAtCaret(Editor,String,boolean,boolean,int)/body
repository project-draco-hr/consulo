{
  final SelectionModel selectionModel=editor.getSelectionModel();
  if (selectionModel.hasSelection()) {
    editor.getCaretModel().moveToOffset(selectionModel.getSelectionStart(),true);
  }
  editor.getSoftWrapModel().beforeDocumentChangeAtCaret();
  int oldOffset=editor.getCaretModel().getOffset();
  String filler=calcStringToFillVirtualSpace(editor);
  if (filler.length() > 0) {
    s=filler + s;
  }
  Document document=editor.getDocument();
  if (editor.isInsertMode() || !toProcessOverwriteMode) {
    if (selectionModel.hasSelection()) {
      oldOffset=selectionModel.getSelectionStart();
      document.replaceString(selectionModel.getSelectionStart(),selectionModel.getSelectionEnd(),s);
    }
 else {
      document.insertString(oldOffset,s);
    }
  }
 else {
    deleteSelectedText(editor);
    int lineNumber=editor.getCaretModel().getLogicalPosition().line;
    if (lineNumber >= document.getLineCount()) {
      return insertStringAtCaret(editor,s,false,toMoveCaret);
    }
    int endOffset=document.getLineEndOffset(lineNumber);
    document.replaceString(oldOffset,Math.min(endOffset,oldOffset + s.length()),s);
  }
  int offset=oldOffset + filler.length() + caretShift;
  if (toMoveCaret) {
    editor.getCaretModel().moveToOffset(offset,true);
    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);
    selectionModel.removeSelection();
  }
 else   if (editor.getCaretModel().getOffset() != oldOffset) {
    editor.getCaretModel().moveToOffset(oldOffset);
  }
  return offset;
}
