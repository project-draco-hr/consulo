{
  Document document=editor.getDocument();
  CaretModel caretModel=editor.getCaretModel();
  LogicalPosition logicalPosition=caretModel.getLogicalPosition();
  int lineNumber=logicalPosition.line;
  int columnNumber=logicalPosition.column;
  if (lineNumber >= document.getLineCount()) {
    return columnNumber;
  }
  int caretOffset=caretModel.getOffset();
  int anchorLineEndOffset=document.getLineEndOffset(lineNumber);
  List<? extends TextChange> softWraps=editor.getSoftWrapModel().getSoftWrapsForLine(logicalPosition.line);
  for (  TextChange softWrap : softWraps) {
    if (!editor.getSoftWrapModel().isVisible(softWrap)) {
      continue;
    }
    if (softWrap.getStart() == caretOffset) {
      VisualPosition position=editor.offsetToVisualPosition(caretOffset - 1);
      VisualPosition visualCaret=caretModel.getVisualPosition();
      if (position.line == visualCaret.line) {
        return visualCaret.column - position.column - 1;
      }
    }
    if (softWrap.getStart() > caretOffset) {
      anchorLineEndOffset=softWrap.getStart();
      break;
    }
    if (softWrap.getStart() == caretOffset) {
      boolean visuallyBeforeSoftWrap=caretModel.getVisualPosition().line < editor.offsetToVisualPosition(caretOffset).line;
      if (visuallyBeforeSoftWrap) {
        anchorLineEndOffset=softWrap.getStart();
        break;
      }
    }
  }
  int lineEndColumnNumber=editor.offsetToLogicalPosition(anchorLineEndOffset).column;
  return columnNumber - lineEndColumnNumber;
}
