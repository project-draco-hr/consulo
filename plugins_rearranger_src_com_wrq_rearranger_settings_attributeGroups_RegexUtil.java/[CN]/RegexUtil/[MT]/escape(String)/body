{
  StringBuffer sb=new StringBuffer(in.length() * 2);
  for (int i=0; i < in.length(); i++) {
    char c=in.charAt(i);
switch (c) {
case '\t':
      sb.append("\\t");
    break;
case '\n':
  sb.append("\\n");
break;
case '\\':
case '[':
case ']':
case '(':
case ')':
case '.':
case '^':
case '$':
case '?':
case '*':
case '+':
sb.append('\\');
sb.append(c);
break;
default :
sb.append(c);
}
}
final int MIN_REPEAT=4;
for (int i=0; i < sb.length() - MIN_REPEAT; i++) {
boolean escaped=sb.charAt(i) == '\\';
int escapeBias=(escaped ? 1 : 0);
char match=sb.charAt(i + escapeBias);
int sequenceCount=1;
for (int j=i + 1 + escapeBias; j < sb.length() - escapeBias; j+=1 + escapeBias) {
if (escaped) {
if (sb.charAt(j) == '\\' && sb.charAt(j + 1) == match) {
sequenceCount++;
continue;
}
}
 else if (sb.charAt(j) == match) {
sequenceCount++;
continue;
}
break;
}
if (sequenceCount >= MIN_REPEAT) {
int startOffset=i;
int endOffset=i + sequenceCount * (1 + escapeBias);
sb.delete(startOffset,endOffset);
final String s=(escaped ? "\\" : "") + match + "{"+ sequenceCount+ "}";
sb.insert(startOffset,s);
i+=s.length() - 1;
}
}
return sb.toString();
}
