{
  final String firstString=((java.lang.String)expressionList.get(0));
  int commonStart=0;
  boolean matching=true;
  while (matching && commonStart < maxCommonStart) {
    if (commonStart == firstString.length()) {
      break;
    }
    commonStart++;
    String match=firstString.substring(0,commonStart);
    for (int i=1; i < expressionList.size(); i++) {
      if (!(((java.lang.String)expressionList.get(i))).startsWith(match)) {
        matching=false;
        commonStart--;
        break;
      }
    }
  }
  if (commonStart > 0) {
    if (!checkSubstringPatternValidity(firstString.substring(0,commonStart)) || !checkRemainderPatternValidity(firstString.substring(commonStart))) {
      return calculateCommonStart(expressionList,commonStart - 1);
    }
  }
  return commonStart;
}
