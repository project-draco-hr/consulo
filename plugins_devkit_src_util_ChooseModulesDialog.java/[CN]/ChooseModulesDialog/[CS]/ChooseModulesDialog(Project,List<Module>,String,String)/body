{
  super(project,false);
  setTitle(title);
  myCandidateModules=candidateModules;
  myIcon=Messages.getQuestionIcon();
  myMessage=message;
  myView=new JBTable(new AbstractTableModel(){
    public int getRowCount(){
      return myCandidateModules.size();
    }
    public int getColumnCount(){
      return 2;
    }
    public boolean isCellEditable(    int rowIndex,    int columnIndex){
      return columnIndex == 0;
    }
    public void setValueAt(    Object aValue,    int rowIndex,    int columnIndex){
      myStates[rowIndex]=(Boolean)aValue;
      fireTableCellUpdated(rowIndex,columnIndex);
    }
    public Class<?> getColumnClass(    int columnIndex){
      return columnIndex == 0 ? Boolean.class : Module.class;
    }
    public Object getValueAt(    int rowIndex,    int columnIndex){
      return columnIndex == 0 ? myStates[rowIndex] : myCandidateModules.get(rowIndex);
    }
  }
);
  myView.setShowGrid(false);
  myView.setTableHeader(null);
  myView.setIntercellSpacing(new Dimension(0,0));
  myView.getColumnModel().getColumn(0).setMaxWidth(new JCheckBox().getPreferredSize().width);
  myView.getModel().addTableModelListener(new TableModelListener(){
    public void tableChanged(    TableModelEvent e){
      getOKAction().setEnabled(getSelectedModules().size() > 0);
    }
  }
);
  myView.addKeyListener(new KeyAdapter(){
    public void keyTyped(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ENTER || e.getKeyChar() == '\n') {
        doOKAction();
      }
    }
  }
);
  myView.setDefaultRenderer(Module.class,new MyTableCellRenderer(project));
  myStates=new boolean[candidateModules.size()];
  Arrays.fill(myStates,true);
  init();
}
