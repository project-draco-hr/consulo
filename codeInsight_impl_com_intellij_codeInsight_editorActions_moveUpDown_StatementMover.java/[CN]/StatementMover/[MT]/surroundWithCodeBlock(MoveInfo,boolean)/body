{
  try {
    final Document document=PsiDocumentManager.getInstance(statementToSurroundWithCodeBlock.getProject()).getDocument(statementToSurroundWithCodeBlock.getContainingFile());
    int startOffset=document.getLineStartOffset(info.toMove.startLine);
    int endOffset=getLineStartSafeOffset(document,info.toMove.endLine);
    if (document.getText().charAt(endOffset - 1) == '\n')     endOffset--;
    final RangeMarker lineRangeMarker=document.createRangeMarker(startOffset,endOffset);
    final PsiElementFactory factory=JavaPsiFacade.getInstance(statementToSurroundWithCodeBlock.getProject()).getElementFactory();
    PsiCodeBlock codeBlock=factory.createCodeBlock();
    codeBlock.add(statementToSurroundWithCodeBlock);
    final PsiBlockStatement blockStatement=(PsiBlockStatement)factory.createStatementFromText("{}",statementToSurroundWithCodeBlock);
    blockStatement.getCodeBlock().replace(codeBlock);
    PsiBlockStatement newStatement=(PsiBlockStatement)statementToSurroundWithCodeBlock.replace(blockStatement);
    newStatement=CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(newStatement);
    info.toMove=new LineRange(document.getLineNumber(lineRangeMarker.getStartOffset()),document.getLineNumber(lineRangeMarker.getEndOffset()) + 1);
    PsiCodeBlock newCodeBlock=newStatement.getCodeBlock();
    if (down) {
      PsiElement blockChild=firstNonWhiteElement(newCodeBlock.getFirstBodyElement(),true);
      if (blockChild == null)       blockChild=newCodeBlock.getRBrace();
      info.toMove2=new LineRange(info.toMove2.startLine,document.getLineNumber(blockChild.getTextRange().getStartOffset()));
    }
 else {
      int start=document.getLineNumber(newCodeBlock.getRBrace().getTextRange().getStartOffset());
      int end=info.toMove.startLine;
      if (start > end)       end=start;
      info.toMove2=new LineRange(start,end);
    }
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
