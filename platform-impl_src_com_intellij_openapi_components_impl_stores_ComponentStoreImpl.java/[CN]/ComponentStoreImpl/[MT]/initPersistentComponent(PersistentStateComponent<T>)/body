{
  final String name=getComponentName(component);
  RoamingType roamingTypeFromComponent=getRoamingType(component);
  ComponentRoamingManager roamingManager=ComponentRoamingManager.getInstance();
  if (!roamingManager.typeSpecified(name)) {
    roamingManager.setRoamingType(name,roamingTypeFromComponent);
  }
  myComponents.put(name,component);
  if (optimizeTestLoading())   return;
  Class<T> stateClass=getComponentStateClass(component);
  T state=null;
  final StateStorage defaultsStorage=getDefaultsStorage();
  if (defaultsStorage != null) {
    state=defaultsStorage.getState(component,name,stateClass,null);
  }
  Storage[] storageSpecs=getComponentStorageSpecs(component,StateStorageOperation.READ);
  for (  Storage storageSpec : storageSpecs) {
    StateStorage stateStorage=getStateStorage(storageSpec);
    if (stateStorage == null || !stateStorage.hasState(component,name,stateClass))     continue;
    state=stateStorage.getState(component,name,stateClass,state);
  }
  if (state != null) {
    component.loadState(state);
  }
}
