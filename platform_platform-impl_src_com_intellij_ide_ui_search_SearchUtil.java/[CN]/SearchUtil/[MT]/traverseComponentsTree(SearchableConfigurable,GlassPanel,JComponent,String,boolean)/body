{
  rootComponent.putClientProperty(HIGHLIGHT_WITH_BORDER,null);
  if (option == null || option.trim().length() == 0)   return false;
  boolean highlight=false;
  if (rootComponent instanceof JCheckBox) {
    final JCheckBox checkBox=((JCheckBox)rootComponent);
    if (isComponentHighlighted(checkBox.getText(),option,force,configurable)) {
      highlight=true;
      glassPanel.addSpotlight(checkBox);
    }
  }
 else   if (rootComponent instanceof JRadioButton) {
    final JRadioButton radioButton=((JRadioButton)rootComponent);
    if (isComponentHighlighted(radioButton.getText(),option,force,configurable)) {
      highlight=true;
      glassPanel.addSpotlight(radioButton);
    }
  }
 else   if (rootComponent instanceof JLabel) {
    final JLabel label=((JLabel)rootComponent);
    if (isComponentHighlighted(label.getText(),option,force,configurable)) {
      highlight=true;
      glassPanel.addSpotlight(label);
    }
  }
 else   if (rootComponent instanceof JButton) {
    final JButton button=((JButton)rootComponent);
    if (isComponentHighlighted(button.getText(),option,force,configurable)) {
      highlight=true;
      glassPanel.addSpotlight(button);
    }
  }
 else   if (rootComponent instanceof JTabbedPane) {
    final JTabbedPane tabbedPane=(JTabbedPane)rootComponent;
    final String path=SearchableOptionsRegistrarImpl.getInstance().getInnerPath(configurable,option);
    if (path != null) {
      final int index=getSelection(path,tabbedPane);
      if (index > -1 && index < tabbedPane.getTabCount()) {
        if (tabbedPane.getTabComponentAt(index) instanceof JComponent) {
          glassPanel.addSpotlight((JComponent)tabbedPane.getTabComponentAt(index));
        }
      }
    }
  }
  final Component[] components=rootComponent.getComponents();
  for (  Component component : components) {
    if (component instanceof JComponent) {
      final boolean innerHighlight=traverseComponentsTree(configurable,glassPanel,(JComponent)component,option,force);
      if (!highlight && !innerHighlight) {
        final Border border=rootComponent.getBorder();
        if (border instanceof TitledBorder) {
          final String title=((TitledBorder)border).getTitle();
          if (isComponentHighlighted(title,option,force,configurable)) {
            highlight=true;
            glassPanel.addSpotlight(rootComponent);
            rootComponent.putClientProperty(HIGHLIGHT_WITH_BORDER,Boolean.TRUE);
          }
        }
      }
      if (innerHighlight) {
        highlight=true;
      }
    }
  }
  return highlight;
}
