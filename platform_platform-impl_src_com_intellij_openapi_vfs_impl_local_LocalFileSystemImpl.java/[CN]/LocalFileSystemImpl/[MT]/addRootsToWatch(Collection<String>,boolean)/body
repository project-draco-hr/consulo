{
  if (!myWatcher.isOperational())   return Collections.emptySet();
  final Set<WatchRequest> result=new HashSet<WatchRequest>();
  final Set<VirtualFile> filesToSynchronize=new HashSet<VirtualFile>();
  Application application=ApplicationManager.getApplication();
  application.runReadAction(new Runnable(){
    public void run(){
synchronized (myLock) {
        for (        String rootPath : rootPaths) {
          LOG.assertTrue(rootPath != null);
          if (rootPath.length() > 0) {
            final WatchRequestImpl request=new WatchRequestImpl(rootPath,toWatchRecursively);
            final VirtualFile existingFile=findFileByPathIfCached(rootPath);
            if (existingFile != null) {
              if (!isAlreadyWatched(request)) {
                filesToSynchronize.add(existingFile);
              }
            }
            result.add(request);
            myRootsToWatch.add(request);
          }
        }
        myCachedNormalizedRequests=null;
        setUpFileWatcher();
      }
    }
  }
);
  if (!application.isUnitTestMode() && !filesToSynchronize.isEmpty()) {
    for (    VirtualFile file : filesToSynchronize) {
      if (file instanceof NewVirtualFile && file.getFileSystem() instanceof LocalFileSystem) {
        ((NewVirtualFile)file).markDirtyRecursively();
      }
    }
    refreshFiles(filesToSynchronize,true,toWatchRecursively,null);
  }
  return result;
}
