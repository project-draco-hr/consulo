{
  if (myCachedNormalizedRequests != null)   return myCachedNormalizedRequests;
  List<WatchRequest> result=new ArrayList<WatchRequest>();
  WRITE_LOCK.lock();
  try {
    NextRoot:     for (    WatchRequest request : myRootsToWatch) {
      String rootPath=request.getRootPath();
      boolean recursively=request.isToWatchRecursively();
      for (Iterator<WatchRequest> iterator1=result.iterator(); iterator1.hasNext(); ) {
        final WatchRequest otherRequest=iterator1.next();
        final String otherRootPath=otherRequest.getRootPath();
        final boolean otherRecursively=otherRequest.isToWatchRecursively();
        if ((rootPath.equals(otherRootPath) && (!recursively || otherRecursively)) || (FileUtil.startsWith(rootPath,otherRootPath) && otherRecursively)) {
          continue NextRoot;
        }
 else         if (FileUtil.startsWith(otherRootPath,rootPath) && (recursively || !otherRecursively)) {
          iterator1.remove();
        }
      }
      result.add(request);
    }
  }
  finally {
    WRITE_LOCK.unlock();
  }
  myCachedNormalizedRequests=result.toArray(new WatchRequest[result.size()]);
  return myCachedNormalizedRequests;
}
