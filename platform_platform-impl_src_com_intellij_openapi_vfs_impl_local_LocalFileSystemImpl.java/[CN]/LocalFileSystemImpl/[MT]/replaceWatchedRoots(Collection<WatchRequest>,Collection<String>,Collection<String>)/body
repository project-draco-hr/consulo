{
  final Collection<String> recursiveRoots=_recursiveRoots != null ? _recursiveRoots : Collections.<String>emptyList();
  final Collection<String> flatRoots=_flatRoots != null ? _flatRoots : Collections.<String>emptyList();
  if (recursiveRoots.isEmpty() && flatRoots.isEmpty() || !myWatcher.isOperational()) {
    removeWatchedRoots(watchRequests);
    return Collections.emptySet();
  }
  final Set<WatchRequest> result=new HashSet<WatchRequest>();
  final Set<VirtualFile> filesToSync=new HashSet<VirtualFile>();
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    @Override public void run(){
synchronized (myLock) {
        final boolean update=doAddRootsToWatch(recursiveRoots,flatRoots,result,filesToSync) || doRemoveWatchedRoots(watchRequests);
        if (update) {
          myNormalizedTree=null;
          setUpFileWatcher();
        }
      }
    }
  }
);
  syncFiles(filesToSync);
  return result;
}
