{
  ActionManagerEx actionManager=ActionManagerEx.getInstanceEx();
  final boolean dumb=DumbServiceImpl.getInstance().isDumb();
  List<AnActionEvent> nonDumbAwareAction=new ArrayList<AnActionEvent>();
  for (  final AnAction action : myContext.getActions()) {
    final Presentation presentation=myPresentationFactory.getPresentation(action);
    final AnActionEvent actionEvent=processor.createEvent(e,myContext.getDataContext(),ActionPlaces.MAIN_MENU,presentation,ActionManager.getInstance());
    ActionUtil.performDumbAwareUpdate(action,actionEvent,true);
    if (dumb && !(action instanceof DumbAware)) {
      if (Boolean.FALSE.equals(presentation.getClientProperty(ActionUtil.WOULD_BE_ENABLED_IF_NOT_DUMB_MODE))) {
        continue;
      }
      nonDumbAwareAction.add(actionEvent);
      continue;
    }
    if (!presentation.isEnabled()) {
      continue;
    }
    processor.onUpdatePassed(e,action,actionEvent);
    ((DataManagerImpl.MyDataContext)myContext.getDataContext()).setEventCount(IdeEventQueue.getInstance().getEventCount());
    actionManager.fireBeforeActionPerformed(action,actionEvent.getDataContext(),actionEvent);
    Component component=(Component)actionEvent.getDataContext().getData(DataConstantsEx.CONTEXT_COMPONENT);
    if (component != null && !component.isShowing()) {
      return true;
    }
    processor.performAction(e,action,actionEvent);
    return true;
  }
  if (!nonDumbAwareAction.isEmpty()) {
    showDumbModeWarningLaterIfNobodyConsumesEvent(e,nonDumbAwareAction.toArray(new AnActionEvent[nonDumbAwareAction.size()]));
  }
  return false;
}
