{
  final GrMethodCallExpression expression=(GrMethodCallExpression)element;
  final StringBuilder newStatementText=new StringBuilder();
  newStatementText.append(expression.getInvokedExpression().getText());
  final GrArgumentList argumentList=expression.getArgumentList();
  if (argumentList != null) {
    final GrExpression[] arguments=argumentList.getExpressionArguments();
    if (arguments.length > 0) {
      newStatementText.append(" ");
      newStatementText.append(arguments[0].getText());
      for (int i=1; i < arguments.length; i++) {
        newStatementText.append(",");
        final GrExpression argument=arguments[i];
        newStatementText.append(argument.getText());
      }
    }
  }
  final GroovyPsiElementFactory factory=GroovyPsiElementFactory.getInstance(element.getProject());
  final GrStatement newStatement=factory.createStatementFromText(newStatementText.toString());
  expression.replaceWithStatement(newStatement);
}
