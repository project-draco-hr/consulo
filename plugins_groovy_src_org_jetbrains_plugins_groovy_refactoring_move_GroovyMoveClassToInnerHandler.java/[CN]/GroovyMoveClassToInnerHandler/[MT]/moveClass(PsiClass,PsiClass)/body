{
  if (!(aClass instanceof GrTypeDefinition))   return null;
  GroovyChangeContextUtil.encodeContextInfo(aClass);
  PsiDocComment doc=aClass.getDocComment();
  PsiClass newClass=(PsiClass)targetClass.addBefore(aClass,targetClass.getRBrace());
  if (doc != null) {
    targetClass.addBefore(doc,newClass);
  }
  if (targetClass.isInterface()) {
    PsiUtil.setModifierProperty(newClass,PsiModifier.PUBLIC,true);
  }
 else {
    PsiUtil.setModifierProperty(newClass,PsiModifier.STATIC,true);
  }
  GroovyChangeContextUtil.decodeContextInfo(newClass,null,null);
  return newClass;
}
