{
  CmdlineRemoteProto.Message message=(CmdlineRemoteProto.Message)e.getMessage();
  final CmdlineRemoteProto.Message.Type type=message.getType();
  if (type == CmdlineRemoteProto.Message.Type.CONTROLLER_MESSAGE) {
    final CmdlineRemoteProto.Message.ControllerMessage controllerMessage=message.getControllerMessage();
switch (controllerMessage.getType()) {
case BUILD_PARAMETERS:
{
        if (mySession == null) {
          final CmdlineRemoteProto.Message.ControllerMessage.FSEvent delta=controllerMessage.hasFsEvent() ? controllerMessage.getFsEvent() : null;
          final BuildSession session=new BuildSession(mySessionId,ctx.getChannel(),controllerMessage.getParamsMessage(),delta);
          mySession=session;
          SharedThreadPool.INSTANCE.submit(session);
        }
 else {
          LOG.info("Cannot start another build session because one is already running");
        }
        return;
      }
case FS_EVENT:
{
      final BuildSession session=mySession;
      if (session != null) {
        session.processFSEvent(controllerMessage.getFsEvent());
      }
      return;
    }
case CONSTANT_SEARCH_RESULT:
{
    final BuildSession session=mySession;
    if (session != null) {
      session.processConstantSearchResult(controllerMessage.getConstantSearchResult());
    }
    return;
  }
case CANCEL_BUILD_COMMAND:
{
  final BuildSession session=mySession;
  if (session != null) {
    session.cancel();
  }
 else {
    LOG.info("Cannot cancel build: no build session is running");
    closeChannel(ctx.getChannel());
  }
  return;
}
}
}
Channels.write(ctx.getChannel(),CmdlineProtoUtil.toMessage(mySessionId,CmdlineProtoUtil.createFailure("Unsupported message type: " + type.name(),null)));
}
