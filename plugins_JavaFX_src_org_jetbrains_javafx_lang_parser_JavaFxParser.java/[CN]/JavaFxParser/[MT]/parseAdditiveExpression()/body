{
  PsiBuilder.Marker marker=myBuilder.mark();
  if (!parseMultiplicativeExpression()) {
    marker.drop();
    return false;
  }
  while (atToken(JavaFxTokenTypes.PLUS) || atToken(JavaFxTokenTypes.MINUS)) {
    nextToken();
    if (!parseMultiplicativeExpression()) {
      myBuilder.error(JavaFxBundle.message("expression.expected"));
    }
    marker.done(JavaFxElementTypes.BINARY_EXPRESSION);
    marker=marker.precede();
  }
  marker.drop();
  return true;
}
