{
  LOG.assertTrue(atToken(JavaFxTokenTypes.AT_KEYWORD));
  final PsiBuilder.Marker marker=myBuilder.mark();
  nextToken();
  checkMatches(JavaFxTokenTypes.LPAREN,JavaFxBundle.message("lparen.expected"));
  checkMatches(JavaFxTokenTypes.DURATION_LITERAL,JavaFxBundle.message("time.literal.expected"));
  checkMatches(JavaFxTokenTypes.RPAREN,JavaFxBundle.message("rparen.expected"));
  checkMatches(JavaFxTokenTypes.LBRACE,JavaFxBundle.message("lbrace.expected"));
  do {
    if (myBuilder.eof()) {
      myBuilder.error(JavaFxBundle.message("rbrace.expected"));
      marker.done(JavaFxElementTypes.TIMELINE_EXPRESSION);
      return;
    }
    if (atToken(JavaFxTokenTypes.SEMICOLON)) {
      nextToken();
    }
 else {
      parseValueExpression();
    }
  }
 while (!atToken(JavaFxTokenTypes.RBRACE));
  nextToken();
  marker.done(JavaFxElementTypes.TIMELINE_EXPRESSION);
}
