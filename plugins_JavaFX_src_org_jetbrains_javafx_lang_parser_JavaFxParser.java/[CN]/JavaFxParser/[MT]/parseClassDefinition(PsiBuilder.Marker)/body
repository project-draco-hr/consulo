{
  LOG.assertTrue(atToken(JavaFxTokenTypes.CLASS_KEYWORD));
  nextToken();
  checkMatches(JavaFxTokenTypes.NAME,JavaFxBundle.message("name.expected"));
  final PsiBuilder.Marker extendsListMarker=myBuilder.mark();
  if (atToken(JavaFxTokenTypes.EXTENDS_KEYWORD)) {
    nextToken();
    parseQualifiedName(JavaFxElementTypes.REFERENCE_ELEMENT);
    while (atToken(JavaFxTokenTypes.COMMA)) {
      nextToken();
      parseQualifiedName(JavaFxElementTypes.REFERENCE_ELEMENT);
    }
  }
  extendsListMarker.done(JavaFxElementTypes.REFERENCE_LIST);
  checkMatches(JavaFxTokenTypes.LBRACE,JavaFxBundle.message("lbrace.expected"));
  while (!atToken(JavaFxTokenTypes.RBRACE)) {
    if (myBuilder.eof()) {
      myBuilder.error(JavaFxBundle.message("rbrace.expected"));
      marker.done(JavaFxElementTypes.CLASS_DEFINITION);
      return;
    }
    parseClassMember();
    checkForSemicolon();
  }
  nextToken();
  marker.done(JavaFxElementTypes.CLASS_DEFINITION);
}
