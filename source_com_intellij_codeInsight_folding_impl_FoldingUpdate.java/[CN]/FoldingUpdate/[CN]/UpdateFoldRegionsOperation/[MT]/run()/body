{
  EditorFoldingInfo info=EditorFoldingInfo.get(myEditor);
  FoldingModelEx foldingModel=(FoldingModelEx)myEditor.getFoldingModel();
  FoldRegion[] foldRegions=foldingModel.getAllFoldRegions();
  HashMap<TextRange,Boolean> rangeToExpandStatusMap=new HashMap<TextRange,Boolean>();
  for (int i=0; i < foldRegions.length; i++) {
    FoldRegion region=foldRegions[i];
    PsiElement element=info.getPsiElement(region);
    if (element != null && myElementsToFoldMap.containsKey(element)) {
      TextRange range=(TextRange)myElementsToFoldMap.get(element);
      boolean toRemove=!region.isValid() || region.getStartOffset() != range.getStartOffset() || region.getEndOffset() != range.getEndOffset();
      if (toRemove) {
        boolean isExpanded=region.isExpanded();
        rangeToExpandStatusMap.put(range,isExpanded ? Boolean.TRUE : Boolean.FALSE);
        foldingModel.removeFoldRegion(region);
        info.removeRegion(region);
      }
 else {
        myElementsToFoldMap.remove(element);
      }
    }
 else {
      if (region.isValid() && info.isLightRegion(region)) {
        boolean isExpanded=region.isExpanded();
        rangeToExpandStatusMap.put(new TextRange(region.getStartOffset(),region.getEndOffset()),isExpanded ? Boolean.TRUE : Boolean.FALSE);
      }
 else {
        foldingModel.removeFoldRegion(region);
        info.removeRegion(region);
      }
    }
  }
  for (Iterator<Map.Entry> iterator=myElementsToFoldMap.entrySet().iterator(); iterator.hasNext(); ) {
    ProgressManager.getInstance().checkCanceled();
    Map.Entry entry=iterator.next();
    PsiElement element=(PsiElement)entry.getKey();
    TextRange range=(TextRange)entry.getValue();
    String foldingText=FoldingPolicy.getFoldingText(element);
    FoldRegion region=foldingModel.addFoldRegion(range.getStartOffset(),range.getEndOffset(),foldingText);
    if (region == null)     continue;
    info.addRegion(region,element);
    if (myApplyDefaultState) {
      region.setExpanded(!FoldingPolicy.isCollapseByDefault(element));
    }
 else {
      Boolean status=rangeToExpandStatusMap.get(range);
      if (status != null) {
        region.setExpanded(status.booleanValue());
      }
    }
  }
}
