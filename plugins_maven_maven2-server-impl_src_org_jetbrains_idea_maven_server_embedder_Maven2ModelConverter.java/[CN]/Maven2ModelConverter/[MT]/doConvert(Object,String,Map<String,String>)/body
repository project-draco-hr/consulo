{
  for (  Field each : ReflectionUtil.collectFields(object.getClass())) {
    Class<?> type=each.getType();
    if (shouldSkip(type))     continue;
    each.setAccessible(true);
    Object value=each.get(object);
    String name=prefix + each.getName();
    result.put(name,String.valueOf(value));
    if (value != null) {
      Package pack=type.getPackage();
      if (pack != null && Model.class.getPackage().getName().equals(pack.getName())) {
        doConvert(value,name + ".",result);
      }
    }
  }
}
