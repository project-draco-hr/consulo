{
  HighlightManager highlightManager=HighlightManager.getInstance(mySearchResults.getProject());
  final ArrayList<RangeHighlighter> dummy=new ArrayList<RangeHighlighter>();
  highlightManager.addRangeHighlight(mySearchResults.getEditor(),textRange.getStartOffset(),textRange.getEndOffset(),attributes,false,dummy);
  final RangeHighlighter h=dummy.get(0);
  MarkupModelEx markupModel=(MarkupModelEx)mySearchResults.getEditor().getMarkupModel();
  final RangeHighlighter[] candidate=new RangeHighlighter[1];
  boolean notFound=markupModel.processRangeHighlightersOverlappingWith(h.getStartOffset(),h.getEndOffset(),new Processor<RangeHighlighterEx>(){
    @Override public boolean process(    RangeHighlighterEx highlighter){
      TextAttributes textAttributes=highlighter.getTextAttributes();
      if (highlighter.getUserData(SEARCH_MARKER) != null && textAttributes != null && textAttributes.equals(h.getTextAttributes())) {
        candidate[0]=highlighter;
        return false;
      }
      return true;
    }
  }
);
  if (!notFound && highlighters.contains(candidate[0])) {
    return candidate[0];
  }
  highlighters.add(h);
  h.putUserData(SEARCH_MARKER,YES);
  return h;
}
