{
  ActionListener l=new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      try {
        List<String> branchesAndTags=new ArrayList<String>();
        GitBranch.listAsStrings(myProject,gitRoot(),true,true,branchesAndTags,null);
        existingBranches.clear();
        existingBranches.addAll(branchesAndTags);
        Collections.sort(branchesAndTags);
        if (myIncludeTagsCheckBox.isSelected()) {
          int mark=branchesAndTags.size();
          GitTag.listAsStrings(myProject,gitRoot(),branchesAndTags,null);
          Collections.sort(branchesAndTags.subList(mark,branchesAndTags.size()));
        }
        ((ComboBoxWithHistory)myBranchToCkeckout).setModelFrom(branchesAndTags.toArray());
        myBranchToCkeckout.setSelectedItem("");
      }
 catch (      VcsException ex) {
        GitVcs.getInstance(myProject).showErrors(Collections.singletonList(ex),GitBundle.getString("checkout.retrieving.branches.and.tags"));
      }
    }
  }
;
  myGitRoot.addActionListener(l);
  l.actionPerformed(null);
  myIncludeTagsCheckBox.addActionListener(l);
}
