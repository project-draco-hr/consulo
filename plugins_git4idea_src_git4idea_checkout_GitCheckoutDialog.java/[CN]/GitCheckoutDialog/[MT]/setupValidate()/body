{
  final JTextField text=(JTextField)myBranchToCkeckout.getEditor().getEditorComponent();
  text.getDocument().addDocumentListener(new DocumentAdapter(){
    protected void textChanged(    final DocumentEvent e){
      myValidateButton.setEnabled(text.getText().trim().length() != 0);
    }
  }
);
  myValidateButton.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final String revisionExpression=getSourceBranch();
      myValidationText=revisionExpression;
      myValidationResult=false;
      try {
        GitRevisionNumber revision=GitRevisionNumber.resolve(myProject,gitRoot(),revisionExpression);
        GitShowAllSubmittedFilesAction.showSubmittedFiles(myProject,mySettings,revision.asString(),gitRoot());
        myValidationResult=true;
      }
 catch (      VcsException ex) {
        GitUIUtil.showOperationError(myProject,ex,"Validating revision: " + revisionExpression);
      }
      checkOkButton();
    }
  }
);
  myValidateButton.setEnabled(false);
}
