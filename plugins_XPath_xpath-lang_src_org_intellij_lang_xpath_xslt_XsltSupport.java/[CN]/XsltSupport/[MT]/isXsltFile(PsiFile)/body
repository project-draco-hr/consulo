{
  if (psiFile.getFileType() != StdFileTypes.XML)   return false;
  if (!(psiFile instanceof XmlFile))   return false;
  final Boolean cached=psiFile.getUserData(FORCE_XSLT_KEY);
  if (cached != null) {
    return cached == Boolean.TRUE;
  }
  final DomManager manager=DomManager.getDomManager(psiFile.getProject());
  final DomFileElement<Stylesheet> element=manager.getFileElement((XmlFile)psiFile,Stylesheet.class);
  if (element == null) {
    return false;
  }
 else {
    final GenericAttributeValue<String> version=element.getRootElement().getVersion();
    if (version == null || version.getValue() == null) {
      final VirtualFile vFile=psiFile.getVirtualFile();
      final String name=vFile != null ? vFile.getPresentableUrl() : psiFile.getName();
      Logger.getInstance(XsltSupport.class.getName()).info("Unsupported XSLT file: Attribute 'version' is missing. (" + name + ")");
      return false;
    }
 else {
      final String value=version.getValue();
      if (!("1.0".equals(value) || "1.1".equals(value))) {
        Logger.getInstance(XsltSupport.class.getName()).info("Unsupported XSLT version: " + value);
        return false;
      }
    }
  }
  final XmlDocument document=((XmlFile)psiFile).getDocument();
  if (document == null) {
    return false;
  }
  final XmlTag rootTag=document.getRootTag();
  final boolean _b=rootTag != null && XSLT_NS.equals(rootTag.getNamespace());
  if (_b) {
    psiFile.putUserData(FORCE_XSLT_KEY,Boolean.TRUE);
  }
  return _b;
}
