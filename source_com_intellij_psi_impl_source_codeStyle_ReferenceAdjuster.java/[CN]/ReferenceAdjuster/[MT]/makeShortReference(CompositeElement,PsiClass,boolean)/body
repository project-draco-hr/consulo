{
  PsiClass parentClass=refClass.getContainingClass();
  if (parentClass != null) {
    PsiJavaCodeReferenceElement psiReference=(PsiJavaCodeReferenceElement)SourceTreeToPsiMap.treeElementToPsi(reference);
    PsiManager manager=parentClass.getManager();
    final PsiResolveHelper resolveHelper=manager.getResolveHelper();
    if (resolveHelper.isAccessible(refClass,psiReference,null)) {
      final PsiClass resolved=resolveHelper.resolveReferencedClass(psiReference.getReferenceName(),reference.getPsi());
      if (manager.areElementsEquivalent(resolved,refClass)) {
        return replaceReferenceWithShort(reference);
      }
    }
    if (!mySettings.INSERT_INNER_CLASS_IMPORTS) {
      final ASTNode qualifier=reference.findChildByRole(ChildRole.QUALIFIER);
      if (qualifier != null) {
        makeShortReference((CompositeElement)qualifier,parentClass,addImports);
      }
      return reference;
    }
  }
  PsiImportHolder file=(PsiImportHolder)SourceTreeToPsiMap.treeElementToPsi(reference).getContainingFile();
  PsiManager manager=file.getManager();
  PsiResolveHelper helper=manager.getResolveHelper();
  if (addImports) {
    if (!file.importClass(refClass)) {
      return reference;
    }
    if (isSafeToShortenReference(reference,refClass,helper)) {
      reference=replaceReferenceWithShort(reference);
    }
  }
 else {
    PsiClass curRefClass=helper.resolveReferencedClass(refClass.getName(),SourceTreeToPsiMap.treeElementToPsi(reference));
    if (manager.areElementsEquivalent(refClass,curRefClass)) {
      reference=replaceReferenceWithShort(reference);
    }
  }
  return reference;
}
