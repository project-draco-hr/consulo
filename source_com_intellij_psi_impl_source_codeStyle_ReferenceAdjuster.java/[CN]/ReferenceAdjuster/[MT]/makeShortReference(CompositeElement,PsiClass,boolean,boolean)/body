{
  if (refClass.getContainingClass() != null) {
    PsiClass parentClass=refClass.getContainingClass();
    PsiJavaCodeReferenceElement psiReference=(PsiJavaCodeReferenceElement)SourceTreeToPsiMap.treeElementToPsi(reference);
    PsiManager manager=parentClass.getManager();
    if (manager.getResolveHelper().isAccessible(refClass,psiReference,null)) {
      for (TreeElement parent=reference.getTreeParent(); parent != null; parent=parent.getTreeParent()) {
        PsiElement parentPsi=SourceTreeToPsiMap.treeElementToPsi(parent);
        if (parentPsi instanceof PsiClass) {
          PsiClass inner=((PsiClass)parentPsi).findInnerClassByName(psiReference.getReferenceName(),true);
          if (inner != null) {
            if (inner == refClass)             return replaceReferenceWithShort(reference);
            return reference;
          }
          if (InheritanceUtil.isInheritorOrSelf((PsiClass)parentPsi,parentClass,true)) {
            return replaceReferenceWithShort(reference);
          }
        }
      }
    }
    if (!mySettings.INSERT_INNER_CLASS_IMPORTS) {
      final TreeElement qualifier=reference.findChildByRole(ChildRole.QUALIFIER);
      if (qualifier != null) {
        makeShortReference((CompositeElement)qualifier,parentClass,addImports,uncompleteCode);
      }
      return reference;
    }
  }
  PsiFile file=SourceTreeToPsiMap.treeElementToPsi(reference).getContainingFile();
  PsiManager manager=file.getManager();
  PsiResolveHelper helper=manager.getResolveHelper();
  if (addImports) {
    if (!myImportHelper.addImport(file,refClass)) {
      return reference;
    }
    if (isSafeToShortenReference(reference,refClass,helper)) {
      reference=replaceReferenceWithShort(reference);
    }
  }
 else {
    PsiClass curRefClass=helper.resolveReferencedClass(refClass.getName(),SourceTreeToPsiMap.treeElementToPsi(reference));
    if (manager.areElementsEquivalent(refClass,curRefClass)) {
      reference=replaceReferenceWithShort(reference);
    }
  }
  return reference;
}
