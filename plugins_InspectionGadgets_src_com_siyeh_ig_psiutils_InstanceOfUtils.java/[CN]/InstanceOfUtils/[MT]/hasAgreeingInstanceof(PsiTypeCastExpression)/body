{
  final PsiType castType=expression.getType();
  final PsiExpression operand=expression.getOperand();
  if (!(operand instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)operand;
  final InstanceofChecker checker=new InstanceofChecker(referenceExpression,castType,false);
  PsiElement parent=PsiTreeUtil.getParentOfType(expression,PsiBinaryExpression.class,PsiIfStatement.class,PsiConditionalExpression.class);
  while (parent != null) {
    parent.accept(checker);
    if (checker.hasAgreeingInstanceof()) {
      return true;
    }
    parent=PsiTreeUtil.getParentOfType(parent,PsiBinaryExpression.class,PsiIfStatement.class,PsiConditionalExpression.class);
  }
  return false;
}
