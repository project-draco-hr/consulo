{
  if (findLaf(lookAndFeelInfo.getClassName()) == null) {
    LOG.error("unknown LookAndFeel : " + lookAndFeelInfo);
    return;
  }
  if (IDEA_LAF_CLASSNAME.equals(lookAndFeelInfo.getClassName())) {
    IdeaLaf laf=new IdeaLaf();
    MetalLookAndFeel.setCurrentTheme(new IdeaBlueMetalTheme());
    try {
      UIManager.setLookAndFeel(laf);
    }
 catch (    Exception exc) {
      Messages.showMessageDialog(IdeBundle.message("error.cannot.set.look.and.feel",lookAndFeelInfo.getName()),CommonBundle.getErrorTitle(),Messages.getErrorIcon());
      return;
    }
  }
 else {
    try {
      LookAndFeel laf=((LookAndFeel)Class.forName(lookAndFeelInfo.getClassName()).newInstance());
      if (laf instanceof MetalLookAndFeel) {
        MetalLookAndFeel.setCurrentTheme(new DefaultMetalTheme());
      }
      UIManager.setLookAndFeel(laf);
    }
 catch (    Exception exc) {
      Messages.showMessageDialog(IdeBundle.message("error.cannot.set.look.and.feel",lookAndFeelInfo.getName()),CommonBundle.getErrorTitle(),Messages.getErrorIcon());
      return;
    }
  }
  myCurrentLaf=lookAndFeelInfo;
  checkLookAndFeel(lookAndFeelInfo,false);
  int popupWeight=OurPopupFactory.WEIGHT_MEDIUM;
  String property=System.getProperty("idea.popup.weight");
  if (property != null)   property=property.toLowerCase().trim();
  if (SystemInfo.isMacOSLeopard) {
    popupWeight=OurPopupFactory.WEIGHT_HEAVY;
  }
 else   if (property == null) {
    if (SystemInfo.isWindows) {
      popupWeight=OurPopupFactory.WEIGHT_HEAVY;
    }
  }
 else {
    if ("light".equals(property)) {
      popupWeight=OurPopupFactory.WEIGHT_LIGHT;
    }
 else     if ("medium".equals(property)) {
      popupWeight=OurPopupFactory.WEIGHT_MEDIUM;
    }
 else     if ("heavy".equals(property)) {
      popupWeight=OurPopupFactory.WEIGHT_HEAVY;
    }
 else {
      LOG.error("Illegal value of property \"idea.popup.weight\": " + property);
    }
  }
  PopupFactory factory=PopupFactory.getSharedInstance();
  if (!(factory instanceof OurPopupFactory)) {
    factory=new OurPopupFactory(factory);
    PopupFactory.setSharedInstance(factory);
  }
  PopupUtil.setPopupType(factory,popupWeight);
  if (UIUtil.isUnderAquaLookAndFeel()) {
    @SuppressWarnings("MismatchedQueryAndUpdateOfCollection") final UIDefaults uiDefaults=UIManager.getLookAndFeelDefaults();
    uiDefaults.put("PopupMenuUI",MacPopupMenuUI.class.getCanonicalName());
    uiDefaults.put("Menu.invertedArrowIcon",getAquaMenuInvertedIcon());
    uiDefaults.put("Menu.disabledArrowIcon",getAquaMenuDisabledIcon());
  }
}
