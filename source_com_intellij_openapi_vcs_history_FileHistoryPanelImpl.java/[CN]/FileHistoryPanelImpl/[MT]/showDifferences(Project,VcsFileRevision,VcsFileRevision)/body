{
  try {
    revision1.loadContent();
    revision2.loadContent();
    VcsFileRevision left=revision1;
    VcsFileRevision right=revision2;
    if (VcsHistoryUtil.compare(revision1,revision2) > 0) {
      left=revision2;
      right=revision1;
    }
    final byte[] content1=left.getContent();
    if (content1 == null)     throw new VcsException("Failed to load content for revision " + left.getRevisionNumber().asString());
    final byte[] content2=right.getContent();
    if (content2 == null)     throw new VcsException("Failed to load content for revision " + right.getRevisionNumber().asString());
    SimpleDiffRequest diffData=new SimpleDiffRequest(myProject,myFilePath.getPresentableUrl());
    diffData.addHint(DiffTool.HINT_SHOW_FRAME);
    Document doc=myFilePath.getDocument();
    String charset=myFilePath.getCharset().name();
    FileType fileType=myFilePath.getFileType();
    diffData.setContentTitles(left.getRevisionNumber().asString(),right.getRevisionNumber().asString());
    diffData.setContents(createContent(project,content1,left,doc,charset,fileType),createContent(project,content2,right,doc,charset,fileType));
    DiffManager.getInstance().getDiffTool().show(diffData);
  }
 catch (  final VcsException e) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        Messages.showErrorDialog(VcsBundle.message("message.text.cannot.show.differences",e.getLocalizedMessage()),VcsBundle.message("message.title.show.differences"));
      }
    }
);
  }
catch (  IOException e) {
    LOG.error(e);
  }
catch (  ProcessCanceledException ex) {
    return;
  }
}
