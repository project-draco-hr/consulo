{
  if (popup) {
    result.add(ActionManager.getInstance().getAction(IdeActions.ACTION_EDIT_SOURCE));
  }
  final MyDiffAction diffAction=new MyDiffAction();
  diffAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_D,KeyEvent.CTRL_DOWN_MASK)),this);
  result.add(diffAction);
  MyDiffWithCurrentAction diffWithCurrent=new MyDiffWithCurrentAction();
  if (!popup) {
    myDualView.installDoubleClickHandler(diffWithCurrent);
  }
  result.add(diffWithCurrent);
  result.add(new MyGetVersionAction());
  AnAction[] additionalActions=getHistoryProvider().getAdditionalActions(this);
  if (additionalActions != null) {
    for (    AnAction additionalAction : additionalActions) {
      result.add(additionalAction);
    }
  }
  result.add(new AnAction(VcsBundle.message("action.name.refresh"),VcsBundle.message("action.desctiption.refresh"),IconLoader.getIcon("/actions/sync.png")){
    public void actionPerformed(    AnActionEvent e){
      refresh();
    }
  }
);
  if (!popup && supportsTree()) {
    result.add(new MyShowAsTreeAction());
  }
  return result;
}
