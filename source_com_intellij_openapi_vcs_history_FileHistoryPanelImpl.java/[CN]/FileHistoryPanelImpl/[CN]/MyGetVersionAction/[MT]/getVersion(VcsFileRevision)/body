{
  final VirtualFile file=getVirtualFile();
  if ((file != null) && !file.isWritable()) {
    if (ReadonlyStatusHandler.getInstance(myProject).ensureFilesWritable(file).hasReadonlyFiles()) {
      return;
    }
  }
  LocalHistoryAction action=file != null ? startLocalHistoryAction(revision) : LocalHistoryAction.NULL;
  final byte[] revisionContent;
  try {
    revision.loadContent();
    revisionContent=revision.getContent();
  }
 catch (  IOException e) {
    LOG.error(e);
    return;
  }
catch (  VcsException e) {
    Messages.showMessageDialog(VcsBundle.message("message.text.cannot.load.revision",e.getLocalizedMessage()),VcsBundle.message("message.title.get.revision.content"),Messages.getInformationIcon());
    return;
  }
catch (  ProcessCanceledException ex) {
    return;
  }
  final byte[] finalRevisionContent=revisionContent;
  try {
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        CommandProcessor.getInstance().executeCommand(myProject,getVersionRunnable(finalRevisionContent),createGetActionTitle(revision),null);
      }
    }
);
    if (file != null) {
      FileStatusManager.getInstance(myProject).fileStatusChanged(file);
      VcsDirtyScopeManager.getInstance(myProject).fileDirty(file);
    }
  }
  finally {
    action.finish();
  }
}
