{
  final PsiExpression initializer=variable.getInitializer();
  if (initializer == null) {
    return false;
  }
  if (!(initializer instanceof PsiReferenceExpression)) {
    return false;
  }
  final PsiElement referent=((PsiReference)initializer).resolve();
  if (referent == null) {
    return false;
  }
  if (!(referent instanceof PsiLocalVariable || referent instanceof PsiParameter)) {
    return false;
  }
  final PsiCodeBlock containingScope=(PsiCodeBlock)PsiTreeUtil.getParentOfType(variable,PsiCodeBlock.class);
  if (containingScope == null) {
    return false;
  }
  final VariableAssignedVisitor visitor=new VariableAssignedVisitor(variable);
  containingScope.accept(visitor);
  if (visitor.isAssigned()) {
    return false;
  }
  final PsiVariable initialization=(PsiVariable)referent;
  final VariableAssignedVisitor visitor2=new VariableAssignedVisitor(initialization);
  containingScope.accept(visitor2);
  if (visitor2.isAssigned()) {
    return false;
  }
  if (!initialization.hasModifierProperty(PsiModifier.FINAL) && variable.hasModifierProperty(PsiModifier.FINAL)) {
    if (variableIsUsedInInnerClass(containingScope,variable)) {
      return false;
    }
  }
  return true;
}
