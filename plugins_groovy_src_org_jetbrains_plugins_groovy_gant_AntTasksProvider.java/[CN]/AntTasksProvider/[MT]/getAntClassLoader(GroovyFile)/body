{
  return CachedValuesManager.getManager(groovyFile.getProject()).getCachedValue(groovyFile,CLASS_LOADER,new CachedValueProvider<ClassLoader>(){
    @Override public Result<ClassLoader> compute(){
      final Module module=ModuleUtil.findModuleForPsiElement(groovyFile);
      Set<VirtualFile> jars=new HashSet<VirtualFile>();
      if (module != null) {
        jars.addAll(Arrays.asList(ModuleRootManager.getInstance(module).getFiles(OrderRootType.CLASSES)));
      }
      if (groovyFile.isScript() && GroovyScriptType.getScriptType(groovyFile) instanceof GantScriptType) {
        jars.addAll(GantScriptType.additionalScopeFiles(groovyFile));
      }
      final ArrayList<URL> urls=new ArrayList<URL>();
      for (      VirtualFile jar : jars) {
        urls.add(VfsUtil.convertToURL(PathUtil.getLocalFile(jar).getUrl()));
      }
      final ClassLoader loader=new UrlClassLoader(urls,null);
      return Result.create(loader,ProjectRootManager.getInstance(groovyFile.getProject()));
    }
  }
,false);
}
