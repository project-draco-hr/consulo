{
  ExpectedTypesProvider typesProvider=ExpectedTypesProvider.getInstance(context.getProject());
  PsiExpression expression=PsiTreeUtil.getContextOfType(context,PsiExpression.class,true);
  if (expression == null)   return PsiType.EMPTY_ARRAY;
  ExpectedTypeInfo[] infos=typesProvider.getExpectedTypes(expression,true);
  List<PsiType> result=new ArrayList<PsiType>(infos.length);
  for (  ExpectedTypeInfo info : infos) {
    final PsiType type=info.getType();
    result.add(type);
    final PsiType defaultType=info.getDefaultType();
    if (!defaultType.equals(type)) {
      result.add(defaultType);
    }
  }
  return result.toArray(new PsiType[result.size()]);
}
