{
  final List result=new ArrayList();
  final PsiExpression expression=PsiTreeUtil.getContextOfType(context,PsiExpression.class,true);
  if (expression == null)   return ArrayUtil.EMPTY_OBJECT_ARRAY;
  ExpectedTypesProvider typesProvider=ExpectedTypesProvider.getInstance(expression.getProject());
  ExpectedTypeInfo[] infos=typesProvider.getExpectedTypes(expression,true);
  infos=extractUnique(infos,typesProvider);
  if (expression instanceof PsiNewExpression) {
    for (int i=0; i < infos.length; i++) {
      result.add(CompletionUtil.eliminateWildcards(infos[i].getType()));
    }
  }
 else {
    for (int i=0; i < infos.length; i++) {
      result.add(infos[i].getType());
    }
  }
  return (PsiType[])result.toArray(new PsiType[result.size()]);
}
