{
  myActive=new AtomicBoolean(false);
  myRunnable=new Runnable(){
    boolean shouldBeContinued=true;
    public void run(){
      try {
        shouldBeContinued=Boolean.TRUE.equals(runnable.get());
      }
 catch (      ProcessCanceledException e) {
      }
catch (      RuntimeException e) {
        LOG.info(e);
      }
      if (!shouldBeContinued) {
        myActive.set(false);
      }
 else {
        mySimpleAlarm.addRequest(ControlledCycle.this,ourRefreshInterval);
      }
    }
  }
;
  mySimpleAlarm=new Alarm(Alarm.ThreadToUse.SHARED_THREAD,project);
  myControlledAlarm=ControlledAlarmFactory.createOnApplicationPooledThread(project);
}
