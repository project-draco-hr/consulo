{
  final Rectangle selectionRectangle=getSelectionRectangle();
  final List<RadComponent> newSelection=new ArrayList<RadComponent>();
  myArea.getRootComponent().accept(new RadComponentVisitor(){
    @Override public void endVisit(    RadComponent component){
      Rectangle bounds=component.getBounds();
      Point location=component.convertPoint(bounds.x,bounds.y,myArea.getNativeComponent());
      if (selectionRectangle.contains(location) && selectionRectangle.contains(location.x + bounds.width,location.y + bounds.height)) {
        newSelection.add(component);
      }
    }
  }
,true);
  if (mySelectionMode == TOGGLE_MODE) {
    List<RadComponent> selection=new ArrayList<RadComponent>(myArea.getSelection());
    for (    RadComponent component : newSelection) {
      int index=selection.indexOf(component);
      if (index == -1) {
        selection.add(component);
      }
 else {
        selection.remove(index);
      }
    }
    myArea.setSelection(selection);
  }
 else   if (mySelectionMode == APPEND_MODE) {
    for (    RadComponent component : newSelection) {
      myArea.appendSelection(component);
    }
  }
 else {
    myArea.setSelection(newSelection);
  }
}
