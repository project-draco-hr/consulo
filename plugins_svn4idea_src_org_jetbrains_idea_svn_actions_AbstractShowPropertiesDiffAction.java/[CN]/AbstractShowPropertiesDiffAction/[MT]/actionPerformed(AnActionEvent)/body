{
  final DataContext dataContext=e.getDataContext();
  final Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  final Change[] changes=e.getData(getChangesKey());
  if ((project == null) || (changes == null) || (changes.length != 1)|| (!SvnVcs.VCS_NAME.equals(ChangesUtil.getVcsForFile(ChangesUtil.getFilePath(changes[0]).getVirtualFile(),project).getName()))) {
    return;
  }
  final Change change=changes[0];
  final SvnVcs vcs=SvnVcs.getInstance(project);
  final SVNWCClient client=vcs.createWCClient();
  try {
    final SVNRevision beforeRevisionValue=getBeforeRevisionValue(change,vcs);
    final SVNRevision afterRevision=getAfterRevisionValue(change,vcs);
    final String beforeContent=getPropertyList(change.getBeforeRevision(),beforeRevisionValue,client);
    final String afterContent=getPropertyList(change.getAfterRevision(),afterRevision,client);
    final SimpleDiffRequest diffRequest=new SimpleDiffRequest(project,getDiffWindowTitle(change));
    if (compareRevisions(beforeRevisionValue,afterRevision) >= 0) {
      diffRequest.setContents(new SimpleContent(afterContent),new SimpleContent(beforeContent));
      diffRequest.setContentTitles(revisionToString(afterRevision),revisionToString(beforeRevisionValue));
    }
 else {
      diffRequest.setContents(new SimpleContent(beforeContent),new SimpleContent(afterContent));
      diffRequest.setContentTitles(revisionToString(beforeRevisionValue),revisionToString(afterRevision));
    }
    DiffManager.getInstance().getDiffTool().show(diffRequest);
  }
 catch (  SVNException exc) {
    Messages.showErrorDialog(exc.getMessage(),e.getPresentation().getText());
  }
}
