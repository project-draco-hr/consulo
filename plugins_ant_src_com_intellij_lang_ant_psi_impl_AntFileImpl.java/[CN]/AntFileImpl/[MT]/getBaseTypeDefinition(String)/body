{
synchronized (PsiLock.LOCK) {
    if (myTypeDefinitions == null) {
      myTypeDefinitions=new HashMap<String,AntTypeDefinition>();
      myProjectElements=new HashMap<AntTypeId,String>();
      final ReflectedProject reflectedProject=ReflectedProject.geProject(getClassLoader());
      if (reflectedProject.myProject != null) {
        final IntrospectionHelper projectHelper=getHelperExceptionSafe(reflectedProject.myProject.getClass());
        try {
          updateTypeDefinitions(reflectedProject.myTaskDefinitions,true);
          updateTypeDefinitions(reflectedProject.myDataTypeDefinitions,false);
          myProjectProperties=reflectedProject.myProperties;
        }
  finally {
          if (projectHelper != null) {
            projectHelper.buildFinished(null);
          }
        }
      }
    }
    return myTypeDefinitions.get(className);
  }
}
