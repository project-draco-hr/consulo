{
  getBaseTypeDefinition(null);
synchronized (PsiLock.LOCK) {
    if (myTargetDefinition == null) {
      final Class targetClass=ReflectedProject.getProject(getClassLoader()).myTargetClass;
      final AntTypeDefinition targetDef=createTypeDefinition(new AntTypeId(TARGET_TAG),targetClass,false);
      for (      final AntTypeDefinition def : getBaseTypeDefinitions()) {
        final AntTypeId id=def.getTypeId();
        if ((def.isTask() || isDataDype(def)) && isProjectNestedElement(def)) {
          targetDef.registerNestedType(id,def.getClassName());
        }
      }
      myTargetDefinition=targetDef;
      registerCustomType(targetDef);
    }
    return myTargetDefinition;
  }
}
