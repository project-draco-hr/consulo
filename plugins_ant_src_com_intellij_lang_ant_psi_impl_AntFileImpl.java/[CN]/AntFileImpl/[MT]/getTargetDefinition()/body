{
  getBaseTypeDefinition(null);
synchronized (PsiLock.LOCK) {
    if (myTargetDefinition == null) {
      final Class targetClass=ReflectedProject.getProject(getClassLoader()).myTargetClass;
      final AntTypeDefinition targetDef=createTypeDefinition(new AntTypeId(TARGET_TAG),targetClass,false);
      if (targetDef != null) {
        for (        final AntTypeDefinition def : getBaseTypeDefinitions()) {
          final AntTypeId id=def.getTypeId();
          if (canBeUsedInTarget(def)) {
            targetDef.registerNestedType(id,def.getClassName());
          }
        }
        myTargetDefinition=targetDef;
        registerCustomType(targetDef);
      }
    }
    return myTargetDefinition;
  }
}
