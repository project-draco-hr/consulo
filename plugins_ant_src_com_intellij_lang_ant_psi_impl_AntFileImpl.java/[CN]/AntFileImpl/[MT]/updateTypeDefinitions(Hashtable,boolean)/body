{
  if (ht == null)   return;
  final Enumeration types=ht.keys();
  while (types.hasMoreElements()) {
    String typeName=(String)types.nextElement();
    if (isTask && typeName.equals(JAVADOC2_TAG)) {
      typeName=JAVADOC_TAG;
    }
    if (isTask && (typeName.equals(UNWAR_TAG) || typeName.equals(UNJAR_TAG))) {
      typeName=UNZIP_TAG;
    }
    typeName=AntStringInterner.intern(typeName);
    final Class typeClass=(Class)ht.get(typeName);
    final AntTypeId typeId=new AntTypeId(typeName);
    final AntTypeDefinition def=createTypeDefinition(typeId,typeClass,isTask);
    if (def != null) {
      final String className=def.getClassName();
      myTypeDefinitions.put(className,def);
      myProjectElements.put(typeId,className);
      final IntrospectionHelper helper=getHelperExceptionSafe(typeClass);
      if (helper != null) {
        final Enumeration nestedEnum=helper.getNestedElements();
        while (nestedEnum.hasMoreElements()) {
          final String nestedElement=(String)nestedEnum.nextElement();
          final Class clazz=(Class)helper.getNestedElementMap().get(nestedElement);
          if (myTypeDefinitions.get(clazz.getName()) == null) {
            final AntTypeDefinition nestedDef=createTypeDefinition(new AntTypeId(AntStringInterner.intern(nestedElement)),clazz,false);
            if (nestedDef != null) {
              myTypeDefinitions.put(nestedDef.getClassName(),nestedDef);
            }
          }
        }
      }
    }
  }
}
