{
  if (ht == null)   return;
  final Enumeration types=ht.keys();
  while (types.hasMoreElements()) {
    String typeName=(String)types.nextElement();
    if (isTask && typeName.equals("javadoc2")) {
      typeName="javadoc";
    }
    if (isTask && (typeName.equals("unwar") || typeName.equals("unjar"))) {
      typeName="unzip";
    }
    final Class typeClass=(Class)ht.get(typeName);
    final AntTypeId typeId=new AntTypeId(typeName);
    final AntTypeDefinition def=createTypeDefinition(typeId,typeClass,isTask);
    if (def != null) {
      final String className=def.getClassName();
      myTypeDefinitions.put(className,def);
      myProjectElements.put(typeId,className);
      final IntrospectionHelper helper=getHelperExceptionSafe(typeClass);
      if (helper != null) {
        try {
          final Enumeration nestedEnum=helper.getNestedElements();
          while (nestedEnum.hasMoreElements()) {
            final String nestedElement=(String)nestedEnum.nextElement();
            final Class clazz=(Class)helper.getNestedElementMap().get(nestedElement);
            if (myTypeDefinitions.get(clazz.getName()) == null) {
              final AntTypeDefinition nestedDef=createTypeDefinition(new AntTypeId(nestedElement),clazz,false);
              if (nestedDef != null) {
                myTypeDefinitions.put(nestedDef.getClassName(),nestedDef);
              }
            }
          }
        }
  finally {
          helper.buildFinished(null);
        }
      }
    }
  }
}
