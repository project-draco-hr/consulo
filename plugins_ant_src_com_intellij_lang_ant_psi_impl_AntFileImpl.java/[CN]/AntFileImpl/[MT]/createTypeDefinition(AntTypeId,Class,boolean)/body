{
  final IntrospectionHelper helper=getHelperExceptionSafe(taskClass);
  if (helper == null)   return null;
  final HashMap<String,AntAttributeType> attributes=new HashMap<String,AntAttributeType>();
  final Enumeration attrEnum=helper.getAttributes();
  while (attrEnum.hasMoreElements()) {
    String attr=(String)attrEnum.nextElement();
    final Class attrClass=helper.getAttributeType(attr);
    if (int.class.equals(attrClass)) {
      attributes.put(attr,AntAttributeType.INTEGER);
    }
 else     if (boolean.class.equals(attrClass)) {
      attributes.put(attr,AntAttributeType.BOOLEAN);
    }
 else {
      attributes.put(attr,AntAttributeType.STRING);
    }
  }
  final HashMap<AntTypeId,String> nestedDefinitions=new HashMap<AntTypeId,String>();
  final Enumeration nestedEnum=helper.getNestedElements();
  while (nestedEnum.hasMoreElements()) {
    final String nestedElement=(String)nestedEnum.nextElement();
    final String className=((Class)helper.getNestedElementMap().get(nestedElement)).getName();
    nestedDefinitions.put(new AntTypeId(nestedElement),className);
  }
  return new AntTypeDefinitionImpl(id,taskClass.getName(),isTask,attributes,nestedDefinitions);
}
