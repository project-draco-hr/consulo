{
  try {
synchronized (ourProjects) {
      for (      final SoftReference<Pair<ReflectedProject,AntClassLoader>> ref : ourProjects) {
        final Pair<ReflectedProject,AntClassLoader> pair=ref.get();
        if (pair != null && pair.second == classLoader) {
          return pair.first;
        }
      }
      ReflectedProject project=new ReflectedProject(classLoader);
      final SoftReference<Pair<ReflectedProject,AntClassLoader>> ref=new SoftReference<Pair<ReflectedProject,AntClassLoader>>(new Pair<ReflectedProject,AntClassLoader>(project,classLoader));
      for (int i=0; i < ourProjects.size(); ++i) {
        final Pair<ReflectedProject,AntClassLoader> pair=ourProjects.get(i).get();
        if (pair == null) {
          ourProjects.set(i,ref);
          return project;
        }
      }
      ourProjects.add(ref);
      return project;
    }
  }
  finally {
    ourAlarm.cancelAllRequests();
    ourAlarm.addRequest(new Runnable(){
      public void run(){
synchronized (ourProjects) {
          ourProjects.clear();
        }
      }
    }
,30000,ModalityState.NON_MODAL);
  }
}
