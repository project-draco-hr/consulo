{
  final Project project=module.getProject();
  final PsiDirectory domains=findDirectory(project,root,"griffon-app/models");
  if (domains != null) {
    result.add(new TopLevelDirectoryNode(module,domains,viewSettings,"Model classes",MvcIcons.DOMAIN_CLASSES_FOLDER,AbstractMvcPsiNodeDescriptor.DOMAIN_CLASSES_FOLDER){
      @Override protected AbstractTreeNode createClassNode(      final GrTypeDefinition typeDefinition){
        return new DomainClassNode(getModule(),typeDefinition,getSettings());
      }
    }
);
  }
  final PsiDirectory conf=findDirectory(project,root,"griffon-app/conf");
  if (conf != null) {
    result.add(new TopLevelDirectoryNode(module,conf,viewSettings,"Configuration",MvcIcons.CONFIG_FOLDER,AbstractMvcPsiNodeDescriptor.CONFIG_FOLDER));
  }
  final PsiDirectory controllers=findDirectory(project,root,"griffon-app/controllers");
  if (controllers != null) {
    result.add(new TopLevelDirectoryNode(module,controllers,viewSettings,"Controllers",MvcIcons.CONTROLLERS_FOLDER,AbstractMvcPsiNodeDescriptor.CONTROLLERS_FOLDER));
  }
  final PsiDirectory views=findDirectory(project,root,"griffon-app/views");
  if (views != null) {
    result.add(new TopLevelDirectoryNode(module,views,viewSettings,"Views",GroovyIcons.GROOVY_ICON_16x16,AbstractMvcPsiNodeDescriptor.VIEWS_FOLDER));
  }
  final PsiDirectory srcMain=findDirectory(project,root,"src/main");
  if (srcMain != null) {
    result.add(new TopLevelDirectoryNode(module,srcMain,viewSettings,"Project Sources",GroovyIcons.GROOVY_ICON_16x16,AbstractMvcPsiNodeDescriptor.SRC_FOLDERS));
  }
  final PsiDirectory testsUnit=findDirectory(project,root,"test/unit");
  if (testsUnit != null) {
    result.add(new TestsTopLevelDirectoryNode(module,testsUnit,viewSettings,"Unit Tests",PlatformIcons.TEST_SOURCE_FOLDER,PlatformIcons.TEST_SOURCE_FOLDER));
  }
  final PsiDirectory testsIntegration=findDirectory(project,root,"test/integration");
  if (testsIntegration != null) {
    result.add(new TestsTopLevelDirectoryNode(module,testsIntegration,viewSettings,"Integration Tests",PlatformIcons.TEST_SOURCE_FOLDER,PlatformIcons.TEST_SOURCE_FOLDER));
  }
}
