{
  final Project project=module.getProject();
  for (  VirtualFile file : ModuleRootManager.getInstance(module).getSourceRoots()) {
    PsiDirectory sourceRoot=PsiManager.getInstance(project).findDirectory(file);
    if (sourceRoot != null) {
      if ("griffon-app".equals(file.getParent().getName())) {
        GriffonDirectoryMetadata metadata=DIRECTORY_METADATA.get(file.getName());
        if (metadata == null)         continue;
        result.add(new TopLevelDirectoryNode(module,sourceRoot,viewSettings,metadata.description,metadata.icon,metadata.weight));
      }
    }
  }
  final PsiDirectory srcMain=findDirectory(project,root,"src/main");
  if (srcMain != null) {
    result.add(new TopLevelDirectoryNode(module,srcMain,viewSettings,"Project Sources",GroovyIcons.GROOVY_ICON_16x16,AbstractMvcPsiNodeDescriptor.SRC_FOLDERS));
  }
  final PsiDirectory srcCli=findDirectory(project,root,"src/cli");
  if (srcCli != null) {
    result.add(new TopLevelDirectoryNode(module,srcCli,viewSettings,"Build Sources",GroovyIcons.GROOVY_ICON_16x16,AbstractMvcPsiNodeDescriptor.SRC_FOLDERS));
  }
  final PsiDirectory testsUnit=findDirectory(project,root,"test/unit");
  if (testsUnit != null) {
    result.add(new TestsTopLevelDirectoryNode(module,testsUnit,viewSettings,"Unit Tests",PlatformIcons.TEST_SOURCE_FOLDER,PlatformIcons.TEST_SOURCE_FOLDER));
  }
  final PsiDirectory testsIntegration=findDirectory(project,root,"test/integration");
  if (testsIntegration != null) {
    result.add(new TestsTopLevelDirectoryNode(module,testsIntegration,viewSettings,"Integration Tests",PlatformIcons.TEST_SOURCE_FOLDER,PlatformIcons.TEST_SOURCE_FOLDER));
  }
  final PsiDirectory testsShared=findDirectory(project,root,"test/shared");
  if (testsShared != null) {
    result.add(new TestsTopLevelDirectoryNode(module,testsShared,viewSettings,"Shared Test Sources",PlatformIcons.TEST_SOURCE_FOLDER,PlatformIcons.TEST_SOURCE_FOLDER));
  }
  for (  VirtualFile file : ModuleRootManager.getInstance(module).getContentRoots()) {
    List<GriffonSourceInspector.GriffonSource> sources=GriffonSourceInspector.processModuleMetadata(module);
    for (    GriffonSourceInspector.GriffonSource source : sources) {
      final PsiDirectory dir=findDirectory(project,file,source.getPath());
      if (dir != null) {
        result.add(new TopLevelDirectoryNode(module,dir,viewSettings,source.getNavigation().getDescription(),source.getNavigation().getIcon(),source.getNavigation().getWeight()));
      }
    }
  }
  final VirtualFile applicationPropertiesFile=GriffonFramework.getInstance().getApplicationPropertiesFile(module);
  if (applicationPropertiesFile != null) {
    PsiFile appProperties=PsiManager.getInstance(module.getProject()).findFile(applicationPropertiesFile);
    if (appProperties != null) {
      result.add(new FileNode(module,appProperties,null,viewSettings));
    }
  }
}
