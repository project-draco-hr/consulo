{
  if (myComputing || myDomManager.getProject().isDisposed())   return Collections.emptyList();
  myComputing=true;
  try {
    if (!myXmlFile.isValid()) {
      if (fireEvents && myLastResult != null) {
        return Arrays.<DomEvent>asList(new ElementUndefinedEvent(myLastResult));
      }
      return Collections.emptyList();
    }
    final Module module=ModuleUtil.findModuleForPsiElement(myXmlFile);
    final String rootTagName=getRootTagName();
    if (myLastResult != null && myFileDescription.getRootTagName().equals(rootTagName) && myFileDescription.isMyFile(myXmlFile,module)) {
      List<DomEvent> list=new SmartList<DomEvent>();
      setInModel(changedRoot,list,myLastResult,fireEvents);
      return list;
    }
    final XmlFile originalFile=(XmlFile)myXmlFile.getOriginalFile();
    final DomFileDescription<T> description=originalFile != null ? myDomManager.getOrCreateCachedValueProvider(originalFile).getFileDescription() : findFileDescription(rootTagName,module);
    return saveResult(description,fireEvents,changedRoot);
  }
  finally {
    myComputing=false;
  }
}
