{
  if (myComputing || myDomManager.getProject().isDisposed())   return Collections.emptyList();
  myComputing=true;
  try {
    if (!myXmlFile.isValid()) {
      myModCount++;
      computeCachedValue(ArrayUtil.EMPTY_OBJECT_ARRAY);
      if (fireEvents && myLastResult != null) {
        myDomManager.getFileDescriptions().get(myFileDescription).remove(myLastResult);
        myLastResult.resetRoot(true);
        return Arrays.<DomEvent>asList(new ElementUndefinedEvent(myLastResult));
      }
      return Collections.emptyList();
    }
    final Module module=ModuleUtil.findModuleForPsiElement(myXmlFile);
    if (myLastResult != null && myFileDescription.getRootTagName().equals(rootTagName) && myFileDescription.isMyFile(myXmlFile,module)) {
      List<DomEvent> list=new SmartList<DomEvent>();
      if (fireEvents) {
        list.add(new ElementChangedEvent(myLastResult));
      }
      myCachedValue.getValue();
      return list;
    }
    myModCount++;
    final DomFileDescription<T> description=findFileDescription(module,rootTagName);
    return saveResult(description,fireEvents);
  }
  finally {
    myComputing=false;
  }
}
