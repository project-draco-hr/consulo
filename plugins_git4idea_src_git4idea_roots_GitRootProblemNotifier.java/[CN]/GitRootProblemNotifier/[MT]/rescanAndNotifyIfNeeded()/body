{
  Collection<VcsRootError> errors=scan();
  if (errors.isEmpty()) {
    return;
  }
  Collection<VirtualFile> unregisteredRoots=getUnregisteredRoots(errors);
  Collection<VirtualFile> invalidRoots=getInvalidRoots(errors);
  String title=makeTitle(unregisteredRoots,invalidRoots);
  String description=makeDescription(unregisteredRoots,invalidRoots);
  myPlatformFacade.getNotificator(myProject).notify(GitVcs.IMPORTANT_ERROR_NOTIFICATION,title,description,NotificationType.ERROR,new NotificationListener(){
    @Override public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED && event.getDescription().equals("configure")) {
        ShowSettingsUtil.getInstance().showSettingsDialog(myProject,ActionsBundle.message("group.VcsGroup.text"));
        Collection<VcsRootError> errorsAfterPossibleFix=scan();
        if (errorsAfterPossibleFix.isEmpty() && !notification.isExpired()) {
          notification.expire();
        }
      }
    }
  }
);
}
