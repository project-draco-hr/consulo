{
  Function<VirtualFile,String> rootToString=new Function<VirtualFile,String>(){
    @Override public String fun(    VirtualFile virtualFile){
      return FileUtil.toSystemDependentName(virtualFile.getPath());
    }
  }
;
  StringBuilder description=new StringBuilder();
  if (!invalidRoots.isEmpty()) {
    if (invalidRoots.size() == 1) {
      description.append("The directory " + invalidRoots.iterator().next() + " is registered as a Git root, "+ "but it doesn't have .git directory inside.");
    }
 else {
      description.append("The following directories are registered as Git roots, but they don't have .git directotires inside: <br/>" + StringUtil.join(invalidRoots,rootToString,", "));
    }
    description.append("<br/>");
  }
  if (!unregisteredRoots.isEmpty()) {
    if (unregisteredRoots.size() == 1) {
      description.append("The directory " + unregisteredRoots.iterator().next() + " is under Git, "+ "but is not registered in the Settings.");
    }
 else {
      description.append("The following directories are roots of Git repositories, but they are not registered in the Settings: <br/>" + StringUtil.join(unregisteredRoots,rootToString,", "));
    }
    description.append("<br/>");
  }
  description.append("<a href='configure'>Configure</a>");
  return description.toString();
}
