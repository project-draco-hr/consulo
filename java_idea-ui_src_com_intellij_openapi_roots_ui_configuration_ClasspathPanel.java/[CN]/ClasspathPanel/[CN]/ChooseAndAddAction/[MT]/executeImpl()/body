{
  final ChooserDialog<ItemType> dialog=createChooserDialog();
  if (dialog == null) {
    return;
  }
  try {
    dialog.doChoose();
    if (!dialog.isOK()) {
      return;
    }
    final List<ItemType> chosen=dialog.getChosenElements();
    if (chosen.isEmpty()) {
      return;
    }
    final ModuleStructureConfigurable rootConfigurable=ModuleStructureConfigurable.getInstance(myState.getProject());
    for (    ItemType item : chosen) {
      final TableItem tableItem=createTableItem(item);
      if (tableItem != null) {
        myModel.addItem(tableItem);
      }
    }
    myModel.fireTableDataChanged();
    final ListSelectionModel selectionModel=myEntryTable.getSelectionModel();
    selectionModel.setSelectionInterval(myModel.getRowCount() - chosen.size(),myModel.getRowCount() - 1);
    TableUtil.scrollSelectionToVisible(myEntryTable);
    final StructureConfigurableContext context=rootConfigurable.getContext();
    context.getDaemonAnalyzer().queueUpdate(new ModuleProjectStructureElement(context,getRootModel().getModule()));
  }
  finally {
    if (dialog instanceof ChooseNamedLibraryAction.MyChooserDialog) {
      Disposer.dispose(dialog);
    }
  }
}
