{
  final LibraryTable.ModifiableModel libraryModifiableModel=myLibraryTable.getModifiableModel();
  final LibraryTableModifiableModelProvider provider=new LibraryTableModifiableModelProvider(){
    public LibraryTable.ModifiableModel getModifiableModel(){
      return libraryModifiableModel;
    }
    public String getTableLevel(){
      return myLibraryTable.getTableLevel();
    }
    public LibraryTablePresentation getLibraryTablePresentation(){
      return myLibraryTable.getPresentation();
    }
    public boolean isLibraryTableEditable(){
      return false;
    }
  }
;
  final Library library=myLibraryTable.createLibrary();
  final LibraryTableEditor editor=LibraryTableEditor.editLibrary(provider,library,myParent.myState.getProject());
  final Module contextModule=DataKeys.MODULE_CONTEXT.getData(DataManager.getInstance().getDataContext(myParent));
  editor.addFileChooserContext(LangDataKeys.MODULE_CONTEXT,contextModule);
  myIsOk=editor.openDialog(myParent,Collections.singletonList(library),true) != null;
  if (myIsOk) {
    myChosenLibrary=library;
  }
 else {
    myChosenLibrary=null;
    libraryModifiableModel.removeLibrary(library);
  }
}
