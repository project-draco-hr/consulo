{
  final Project project=getProject();
  final PsiManager manager=PsiManager.getInstance(project);
  final String targetClassName=getTargetClassName();
  final PsiClass targetClass=manager.findClass(targetClassName,GlobalSearchScope.allScope(project));
  if (targetClass == null) {
    String message="Cannot perform the refactoring.\n" + "Class " + targetClassName + " not found.";
    RefactoringMessageUtil.showErrorMessage(ReplaceConstructorWithFactoryHandler.REFACTORING_NAME,message,null,project);
    return;
  }
  if (!targetClass.isWritable()) {
    if (!RefactoringMessageUtil.checkReadOnlyStatus(project,targetClass))     return;
  }
  invokeRefactoring(new ReplaceConstructorWithFactoryProcessor(project,myConstructor,myContainingClass,targetClass,getName()));
}
