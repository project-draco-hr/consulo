{
  if (!WorkingCopyFormat.ONE_DOT_FIVE.equals(info.getFormat())) {
    return null;
  }
  final String url=info.getUrl().toString();
  if ((myLocation != null) && (!myLocation.toPresentableString().startsWith(url)) && (!url.startsWith(myLocation.toPresentableString()))) {
    return null;
  }
  if (!SvnUtil.checkRepositoryVersion15(vcs,url)) {
    return null;
  }
  final RootMixedInfo rootForUrl=urlMapping.getWcRootForUrl(url);
  if (rootForUrl == null) {
    return null;
  }
  final VirtualFile root=rootForUrl.getParentVcsRoot();
  final VirtualFile wcRoot=rootForUrl.getFile();
  if (wcRoot == null) {
    return null;
  }
  final SvnBranchConfiguration configuration;
  try {
    configuration=SvnBranchConfigurationManager.getInstance(myProject).get(wcRoot);
  }
 catch (  VcsException e) {
    LOG.info(e);
    return null;
  }
  if (configuration == null) {
    return null;
  }
  final List<WCInfoWithBranches.Branch> items=createBranchesList(url,configuration);
  return new WCInfoWithBranches(info.getPath(),info.getUrl(),info.getFormat(),info.getRepositoryRoot(),info.isIsWcRoot(),items,root,configuration.getTrunkUrl());
}
