{
  if (myProject.isDisposed())   return;
  Window mywindow=SwingUtilities.windowForComponent(myPanel);
  if (mywindow != null && !mywindow.isActive())   return;
  final KeyboardFocusManager focusManager=KeyboardFocusManager.getCurrentKeyboardFocusManager();
  final Window focusWindow=focusManager.getFocusedWindow();
  if (focusWindow == mywindow) {
    final Component owner=focusManager.getFocusOwner();
    if (owner == null || SwingUtilities.isDescendingFrom(owner,myPanel))     return;
    final DataContext dataContext=DataManager.getInstance().getDataContext(owner);
    final FileEditor fileEditor=PlatformDataKeys.FILE_EDITOR.getData(dataContext);
    if (fileEditor != null) {
      if (Arrays.asList(FileEditorManager.getInstance(myProject).getSelectedEditors()).contains(fileEditor)) {
        setFileEditor(fileEditor);
        return;
      }
    }
    final VirtualFile[] files=PlatformDataKeys.VIRTUAL_FILE_ARRAY.getData(dataContext);
    if (files != null && files.length == 1) {
      FileEditorProviderManager editorProviderManager=FileEditorProviderManager.getInstance();
      final FileEditorProvider[] providers=editorProviderManager.getProviders(myProject,files[0]);
      for (      FileEditorProvider provider : providers) {
        FileEditor tempFileEditor=provider.createEditor(myProject,files[0]);
        setFileEditor(tempFileEditor);
        return;
      }
    }
    setModule(LangDataKeys.MODULE_CONTEXT.getData(dataContext));
  }
}
