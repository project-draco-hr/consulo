{
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  boolean hadFocus=ToolWindowId.STRUCTURE_VIEW.equals(ToolWindowManager.getInstance(myProject).getActiveToolWindowId());
  if (myStructureView != null) {
    myStructureView.storeState();
    Disposer.dispose(myStructureView);
    myStructureView=null;
  }
  if (myModuleStructureComponent != null) {
    Disposer.dispose(myModuleStructureComponent);
    myModuleStructureComponent=null;
  }
  myPanel.removeAll();
  if (!isStructureViewShowing()) {
    return;
  }
  VirtualFile file=myFile;
  if (file == null) {
    final VirtualFile[] selectedFiles=FileEditorManager.getInstance(myProject).getSelectedFiles();
    if (selectedFiles.length > 0) {
      file=selectedFiles[0];
    }
  }
  if (file != null) {
    if (file.isDirectory()) {
      if (ProjectRootsUtil.isModuleContentRoot(file,myProject)) {
        Module module=ModuleUtil.findModuleForFile(file,myProject);
        if (module != null) {
          myModuleStructureComponent=new ModuleStructureComponent(module);
          myPanel.add(myModuleStructureComponent,BorderLayout.CENTER);
          if (hadFocus) {
            JComponent focusedComponent=IdeFocusTraversalPolicy.getPreferredFocusedComponent(myModuleStructureComponent);
            if (focusedComponent != null) {
              IdeFocusManager.getInstance(myProject).requestFocus(focusedComponent,true);
            }
          }
        }
      }
    }
 else {
      FileEditor editor=FileEditorManager.getInstance(myProject).getSelectedEditor(file);
      if (editor == null)       editor=crteateTempFileEditor(file);
      if (editor != null && editor.isValid()) {
        final StructureViewBuilder structureViewBuilder=editor.getStructureViewBuilder();
        if (structureViewBuilder != null) {
          myStructureView=structureViewBuilder.createStructureView(editor,myProject);
          myPanel.add(myStructureView.getComponent(),BorderLayout.CENTER);
          if (hadFocus) {
            JComponent focusedComponent=IdeFocusTraversalPolicy.getPreferredFocusedComponent(myStructureView.getComponent());
            if (focusedComponent != null) {
              IdeFocusManager.getInstance(myProject).requestFocus(focusedComponent,true);
            }
          }
          myStructureView.restoreState();
          myStructureView.centerSelectedRow();
        }
      }
    }
  }
  if (myModuleStructureComponent == null && myStructureView == null) {
    myPanel.add(new JLabel(IdeBundle.message("message.nothing.to.show.in.structure.view"),SwingConstants.CENTER),BorderLayout.CENTER);
  }
  myPanel.validate();
  myPanel.repaint();
}
