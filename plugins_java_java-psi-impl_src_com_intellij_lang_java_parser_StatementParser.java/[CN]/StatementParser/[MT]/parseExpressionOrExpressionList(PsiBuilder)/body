{
  final PsiBuilder.Marker expr=myParser.getExpressionParser().parse(builder);
  if (expr == null)   return;
  final PsiBuilder.Marker expressionStatement;
  if (builder.getTokenType() != JavaTokenType.COMMA) {
    expressionStatement=expr.precede();
    done(expressionStatement,JavaElementType.EXPRESSION_STATEMENT);
  }
 else {
    final PsiBuilder.Marker expressionList=expr.precede();
    expressionStatement=expressionList.precede();
    do {
      builder.advanceLexer();
      final PsiBuilder.Marker nextExpression=myParser.getExpressionParser().parse(builder);
      if (nextExpression == null) {
        error(builder,JavaErrorMessages.message("expected.expression"));
      }
    }
 while (builder.getTokenType() == JavaTokenType.COMMA);
    done(expressionList,JavaElementType.EXPRESSION_LIST);
    done(expressionStatement,JavaElementType.EXPRESSION_LIST_STATEMENT);
  }
}
