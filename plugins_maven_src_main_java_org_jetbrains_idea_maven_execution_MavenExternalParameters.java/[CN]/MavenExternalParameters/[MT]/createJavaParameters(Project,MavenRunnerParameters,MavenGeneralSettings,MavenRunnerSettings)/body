{
  final JavaParameters params=new JavaParameters();
  ApplicationManager.getApplication().assertReadAccessAllowed();
  if (coreSettings == null) {
    coreSettings=project == null ? new MavenGeneralSettings() : MavenProjectsManager.getInstance(project).getGeneralSettings();
  }
  if (runnerSettings == null) {
    runnerSettings=project == null ? new MavenRunnerSettings() : MavenRunner.getInstance(project).getState();
  }
  params.setWorkingDirectory(parameters.getWorkingDirFile());
  params.setJdk(getJdk(runnerSettings,project != null && MavenRunner.getInstance(project).getState() == runnerSettings));
  final String mavenHome=resolveMavenHome(coreSettings);
  addVMParameters(params.getVMParametersList(),mavenHome,runnerSettings);
  for (  String path : getMavenClasspathEntries(mavenHome)) {
    params.getClassPath().add(path);
  }
  params.setMainClass(MAVEN_LAUNCHER_CLASS);
  EncodingManager encodingManager=project == null ? EncodingProjectManager.getInstance() : EncodingProjectManager.getInstance(project);
  params.setCharset(encodingManager.getDefaultCharset());
  addMavenParameters(params.getProgramParametersList(),coreSettings,runnerSettings,parameters);
  return params;
}
