{
  ClassFilter.ClassFilterWithScope filter;
  try {
    filter=getFilter();
  }
 catch (  MessageInfoException e) {
    MessagesEx.MessageInfo message=e.getMessageInfo();
    message.showNow();
    return null;
  }
  TreeClassChooser chooser=TreeClassChooserFactory.getInstance(getProject()).createWithInnerClassesScopeChooser("Choose Test Class",filter.getScope(),filter,null);
  init(chooser);
  chooser.showDialog();
  PsiClass psiclass=chooser.getSelected();
  if (psiclass == null) {
    return null;
  }
 else {
    onClassChoosen(psiclass);
    return JavaExecutionUtil.getRuntimeQualifiedName(psiclass);
  }
}
