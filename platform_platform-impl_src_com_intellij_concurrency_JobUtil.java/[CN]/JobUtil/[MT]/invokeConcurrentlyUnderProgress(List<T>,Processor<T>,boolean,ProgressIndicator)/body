{
  if (things.isEmpty()) {
    return true;
  }
  if (things.size() == 1) {
    T t=things.get(0);
    return thingProcessor.process(t);
  }
  boolean result;
  if (progress instanceof ProgressWrapper) {
    result=invokeConcurrentlyForAll(things,thingProcessor,failFastOnAcquireReadAction);
  }
 else {
    final ProgressWrapper wrapper=ProgressWrapper.wrap(progress);
    result=invokeConcurrentlyForAll(things,new Processor<T>(){
      public boolean process(      final T t){
        final boolean[] result=new boolean[1];
        ((ProgressManagerImpl)ProgressManager.getInstance()).executeProcessUnderProgress(new Runnable(){
          public void run(){
            result[0]=thingProcessor.process(t);
          }
        }
,wrapper);
        return result[0];
      }
    }
,failFastOnAcquireReadAction);
  }
  return result;
}
