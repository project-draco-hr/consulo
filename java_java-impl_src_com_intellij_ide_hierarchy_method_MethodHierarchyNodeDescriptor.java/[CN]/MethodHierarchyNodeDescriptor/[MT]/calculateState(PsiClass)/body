{
  final PsiMethod method=getMethod(psiClass,false);
  if (method != null) {
    if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {
      return null;
    }
    return METHOD_DEFINED_ICON;
  }
  if (myTreeStructure.isSuperClassForBaseClass(psiClass)) {
    return METHOD_NOT_DEFINED_ICON;
  }
  final boolean isAbstractClass=psiClass.hasModifierProperty(PsiModifier.ABSTRACT);
  final PsiMethod baseClassMethod=getMethod(psiClass,true);
  final boolean hasBaseImplementation=baseClassMethod != null && !baseClassMethod.hasModifierProperty(PsiModifier.ABSTRACT);
  if (hasBaseImplementation || isAbstractClass) {
    return METHOD_NOT_DEFINED_ICON;
  }
 else {
    return SHOULD_DEFINE_METHOD_ICON;
  }
}
