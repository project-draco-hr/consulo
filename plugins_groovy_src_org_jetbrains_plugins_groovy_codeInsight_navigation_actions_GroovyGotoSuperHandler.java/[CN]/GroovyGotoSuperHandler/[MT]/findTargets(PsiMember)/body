{
  if (e instanceof PsiClass) {
    PsiClass aClass=(PsiClass)e;
    List<PsiClass> allSupers=new ArrayList<PsiClass>(Arrays.asList(aClass.getSupers()));
    for (Iterator<PsiClass> iterator=allSupers.iterator(); iterator.hasNext(); ) {
      PsiClass superClass=iterator.next();
      if (CommonClassNames.JAVA_LANG_OBJECT.equals(superClass.getQualifiedName()))       iterator.remove();
    }
    return ContainerUtil.toArray(allSupers,new PsiClass[allSupers.size()]);
  }
 else   if (e instanceof PsiMethod) {
    return getSupers((PsiMethod)e);
  }
 else {
    LOG.assertTrue(e instanceof GrField);
    List<PsiMethod> supers=new ArrayList<PsiMethod>();
    for (    GrAccessorMethod method : GroovyPropertyUtils.getFieldAccessors((GrField)e)) {
      supers.addAll(Arrays.asList(getSupers(method)));
    }
    return ContainerUtil.toArray(supers,new PsiMethod[supers.size()]);
  }
}
