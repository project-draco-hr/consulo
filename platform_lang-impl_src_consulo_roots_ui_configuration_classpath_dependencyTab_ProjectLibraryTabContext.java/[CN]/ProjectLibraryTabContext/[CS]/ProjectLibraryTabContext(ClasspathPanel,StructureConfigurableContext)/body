{
  super(classpathPanel,context);
  StructureLibraryTableModifiableModelProvider projectLibrariesProvider=context.getProjectLibrariesProvider();
  Library[] libraries=projectLibrariesProvider.getModifiableModel().getLibraries();
  final Condition<Library> condition=LibraryEditingUtil.getNotAddedLibrariesCondition(myClasspathPanel.getRootModel());
  myItems=ContainerUtil.filter(libraries,condition);
  ContainerUtil.sort(myItems,new Comparator<Library>(){
    @Override public int compare(    Library o1,    Library o2){
      return StringUtil.compare(o1.getName(),o2.getName(),false);
    }
  }
);
  myLibraryList=new JBList(myItems);
  myLibraryList.setCellRenderer(new ColoredListCellRendererWrapper<Library>(){
    @Override protected void doCustomize(    JList list,    Library value,    int index,    boolean selected,    boolean hasFocus){
      final CellAppearanceEx appearance=OrderEntryAppearanceService.getInstance().forLibrary(classpathPanel.getProject(),value,false);
      appearance.customize(this);
    }
  }
);
  new ListSpeedSearch(myLibraryList);
}
