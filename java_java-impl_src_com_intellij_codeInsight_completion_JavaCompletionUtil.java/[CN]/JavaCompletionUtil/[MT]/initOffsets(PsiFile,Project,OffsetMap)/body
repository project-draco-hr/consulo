{
  int selectionEndOffset=offsetMap.getOffset(CompletionInitializationContext.SELECTION_END_OFFSET);
  PsiElement element=file.findElementAt(selectionEndOffset);
  if (element == null)   return;
  if (LEFT_PAREN.accepts(element)) {
    selectionEndOffset--;
    element=file.findElementAt(selectionEndOffset);
    if (element == null)     return;
  }
  final PsiReference reference=file.findReferenceAt(selectionEndOffset);
  if (reference != null) {
    offsetMap.addOffset(CompletionInitializationContext.IDENTIFIER_END_OFFSET,reference.getElement().getTextRange().getStartOffset() + reference.getRangeInElement().getEndOffset());
    element=file.findElementAt(offsetMap.getOffset(CompletionInitializationContext.IDENTIFIER_END_OFFSET));
  }
 else   if (isWord(element)) {
    offsetMap.addOffset(CompletionInitializationContext.IDENTIFIER_END_OFFSET,element.getTextRange().getEndOffset());
    element=file.findElementAt(offsetMap.getOffset(CompletionInitializationContext.IDENTIFIER_END_OFFSET));
    if (element == null)     return;
  }
  if (element instanceof PsiWhiteSpace && (!element.textContains('\n') || CodeStyleSettingsManager.getInstance(project).getCurrentSettings().METHOD_PARAMETERS_LPAREN_ON_NEXT_LINE)) {
    element=file.findElementAt(element.getTextRange().getEndOffset());
  }
  if (LEFT_PAREN.accepts(element)) {
    offsetMap.addOffset(LPAREN_OFFSET,element.getTextRange().getStartOffset());
    PsiElement list=element.getParent();
    PsiElement last=list.getLastChild();
    if (last instanceof PsiJavaToken && ((PsiJavaToken)last).getTokenType() == JavaTokenType.RPARENTH) {
      offsetMap.addOffset(RPAREN_OFFSET,last.getTextRange().getStartOffset());
    }
    offsetMap.addOffset(ARG_LIST_END_OFFSET,list.getTextRange().getEndOffset());
  }
}
