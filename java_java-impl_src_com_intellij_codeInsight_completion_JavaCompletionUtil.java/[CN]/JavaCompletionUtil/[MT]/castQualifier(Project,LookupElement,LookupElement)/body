{
  return LookupElementDecorator.withInsertHandler(item,new InsertHandlerDecorator<LookupElement>(){
    public void handleInsert(    InsertionContext context,    LookupElementDecorator<LookupElement> item){
      final Document document=context.getEditor().getDocument();
      PsiDocumentManager.getInstance(project).commitDocument(document);
      final PsiFile file=context.getFile();
      final PsiReferenceExpression ref=PsiTreeUtil.findElementOfClassAtOffset(file,context.getStartOffset(),PsiReferenceExpression.class,false);
      if (ref != null) {
        final PsiElement qualifier=ref.getQualifier();
        if (qualifier != null) {
          final CodeStyleSettings settings=CodeStyleSettingsManager.getSettings(project);
          final String parenSpace=settings.SPACE_WITHIN_PARENTHESES ? " " : "";
          document.insertString(qualifier.getTextRange().getEndOffset(),parenSpace + ")");
          final String spaceWithin=settings.SPACE_WITHIN_CAST_PARENTHESES ? " " : "";
          final String prefix="(" + parenSpace + "("+ spaceWithin;
          final String spaceAfter=settings.SPACE_AFTER_TYPE_CAST ? " " : "";
          final int exprStart=qualifier.getTextRange().getStartOffset();
          document.insertString(exprStart,prefix + spaceWithin + ")"+ spaceAfter);
          CompletionUtil.emulateInsertion(context,exprStart + prefix.length(),to);
        }
      }
      item.getDelegate().handleInsert(context);
    }
  }
);
}
