{
  TailType toInsert=tailType;
  LookupItem<?> lookupItem=item.as(LookupItem.CLASS_CONDITION_KEY);
  if (lookupItem == null || lookupItem.getAttribute(LookupItem.TAIL_TYPE_ATTR) != TailType.UNKNOWN) {
    if (!hasTail && item.getObject() instanceof PsiMethod && ((PsiMethod)item.getObject()).getReturnType() == PsiType.VOID) {
      PsiDocumentManager.getInstance(context.getProject()).commitAllDocuments();
      if (psiElement().beforeLeaf(psiElement().withText(".")).accepts(context.getFile().findElementAt(context.getTailOffset() - 1))) {
        return false;
      }
      boolean insertAdditionalSemicolon=true;
      final PsiReferenceExpression referenceExpression=PsiTreeUtil.getTopmostParentOfType(context.getFile().findElementAt(context.getStartOffset()),PsiReferenceExpression.class);
      if (referenceExpression instanceof PsiMethodReferenceExpression && LambdaUtil.insertSemicolon(referenceExpression.getParent())) {
        insertAdditionalSemicolon=false;
      }
 else       if (referenceExpression != null) {
        PsiElement parent=referenceExpression.getParent();
        if (parent instanceof PsiMethodCallExpression) {
          parent=parent.getParent();
        }
        if (parent instanceof PsiLambdaExpression && !LambdaUtil.insertSemicolonAfter((PsiLambdaExpression)parent)) {
          insertAdditionalSemicolon=false;
        }
      }
      if (insertAdditionalSemicolon) {
        toInsert=TailType.SEMICOLON;
      }
    }
  }
  toInsert.processTail(context.getEditor(),context.getTailOffset());
  return true;
}
