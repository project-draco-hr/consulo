{
  if (castTypeItem == null) {
    return item;
  }
  if (plainQualifier != null) {
    Object o=item.getObject();
    if (o instanceof PsiMethod) {
      PsiType castType=castTypeItem.getPsiType();
      if (plainQualifier instanceof PsiClassType && castType instanceof PsiClassType) {
        PsiMethod method=(PsiMethod)o;
        PsiClassType.ClassResolveResult plainResult=((PsiClassType)plainQualifier).resolveGenerics();
        PsiClass plainClass=plainResult.getElement();
        if (plainClass != null && plainClass.findMethodBySignature(method,true) != null) {
          PsiClass castClass=((PsiClassType)castType).resolveGenerics().getElement();
          if (castClass == null || !castClass.isInheritor(plainClass,true)) {
            return item;
          }
          PsiSubstitutor plainSub=plainResult.getSubstitutor();
          PsiSubstitutor castSub=TypeConversionUtil.getSuperClassSubstitutor(plainClass,(PsiClassType)castType);
          if (method.getSignature(plainSub).equals(method.getSignature(castSub)) && plainSub.substitute(method.getReturnType()).equals(castSub.substitute(method.getReturnType()))) {
            return item;
          }
        }
      }
    }
 else     if (containsMember(plainQualifier,o)) {
      return item;
    }
  }
  return LookupElementDecorator.withInsertHandler(item,new InsertHandlerDecorator<LookupElement>(){
    public void handleInsert(    InsertionContext context,    LookupElementDecorator<LookupElement> item){
      final Document document=context.getEditor().getDocument();
      context.commitDocument();
      final PsiFile file=context.getFile();
      final PsiJavaCodeReferenceElement ref=PsiTreeUtil.findElementOfClassAtOffset(file,context.getStartOffset(),PsiJavaCodeReferenceElement.class,false);
      if (ref != null) {
        final PsiElement qualifier=ref.getQualifier();
        if (qualifier != null) {
          final CommonCodeStyleSettings settings=context.getCodeStyleSettings();
          final String parenSpace=settings.SPACE_WITHIN_PARENTHESES ? " " : "";
          document.insertString(qualifier.getTextRange().getEndOffset(),parenSpace + ")");
          final String spaceWithin=settings.SPACE_WITHIN_CAST_PARENTHESES ? " " : "";
          final String prefix="(" + parenSpace + "("+ spaceWithin;
          final String spaceAfter=settings.SPACE_AFTER_TYPE_CAST ? " " : "";
          final int exprStart=qualifier.getTextRange().getStartOffset();
          document.insertString(exprStart,prefix + spaceWithin + ")"+ spaceAfter);
          CompletionUtil.emulateInsertion(context,exprStart + prefix.length(),castTypeItem);
          context.getEditor().getCaretModel().moveToOffset(context.getTailOffset());
        }
      }
      item.getDelegate().handleInsert(context);
    }
  }
);
}
