{
  final Editor editor=context.getEditor();
  final char completionChar=context.getCompletionChar();
  final PsiFile file=context.getFile();
  final TailType tailType=completionChar == '(' ? TailType.NONE : LookupItem.handleCompletionChar(context.getEditor(),item,completionChar);
  final boolean hasTail=tailType != TailType.NONE && tailType != TailType.UNKNOWN;
  final boolean smart=completionChar == Lookup.COMPLETE_STATEMENT_SELECT_CHAR;
  final boolean addCompletionChar=context.shouldAddCompletionChar();
  context.setAddCompletionChar(false);
  final boolean needLeftParenth=isToInsertParenth(file.findElementAt(context.getStartOffset()));
  final boolean needRightParenth=!smart && (CodeInsightSettings.getInstance().AUTOINSERT_PAIR_BRACKET || hasTail);
  if (hasTail) {
    hasParams=false;
  }
  if (needLeftParenth) {
    final CodeStyleSettings styleSettings=CodeStyleSettingsManager.getSettings(context.getProject());
    ParenthesesInsertHandler.getInstance(hasParams,styleSettings.SPACE_BEFORE_METHOD_CALL_PARENTHESES,styleSettings.SPACE_WITHIN_METHOD_CALL_PARENTHESES && hasParams,needRightParenth,styleSettings.METHOD_PARAMETERS_LPAREN_ON_NEXT_LINE).handleInsert(context,item);
  }
  if (needLeftParenth && hasParams) {
    AutoPopupController.getInstance(file.getProject()).autoPopupParameterInfo(editor,overloadsMatter ? null : (PsiElement)item.getObject());
  }
  if (smart || needLeftParenth && needRightParenth && addCompletionChar) {
    TailType toInsert=tailType;
    LookupItem lookupItem=item.as(LookupItem.class);
    if (lookupItem == null || lookupItem.getAttribute(LookupItem.TAIL_TYPE_ATTR) != TailType.UNKNOWN) {
      if (!hasTail && item.getObject() instanceof PsiMethod && ((PsiMethod)item.getObject()).getReturnType() == PsiType.VOID) {
        PsiDocumentManager.getInstance(file.getProject()).commitAllDocuments();
        if (psiElement().beforeLeaf(psiElement().withText(".")).accepts(file.findElementAt(context.getTailOffset() - 1))) {
          return;
        }
        toInsert=TailType.SEMICOLON;
      }
    }
    toInsert.processTail(editor,context.getTailOffset());
  }
}
