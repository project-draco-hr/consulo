{
  String message;
  if (e instanceof VMStartException) {
    VMStartException e1=(VMStartException)e;
    message=e1.getLocalizedMessage();
  }
 else   if (e instanceof IllegalConnectorArgumentsException) {
    IllegalConnectorArgumentsException e1=(IllegalConnectorArgumentsException)e;
    final List<String> invalidArgumentNames=e1.argumentNames();
    message=formatMessage(DebuggerBundle.message("error.invalid.argument",invalidArgumentNames.size()) + ": " + e1.getLocalizedMessage()) + invalidArgumentNames;
    if (LOG.isDebugEnabled()) {
      LOG.debug(e1);
    }
  }
 else   if (e instanceof CantRunException) {
    message=e.getLocalizedMessage();
  }
 else   if (e instanceof VMDisconnectedException) {
    message=DebuggerBundle.message("error.vm.disconnected");
  }
 else   if (e instanceof UnknownHostException) {
    message=DebuggerBundle.message("error.unknown.host") + ":\n" + e.getLocalizedMessage();
  }
 else   if (e instanceof IOException) {
    IOException e1=(IOException)e;
    StringBuffer buf=new StringBuffer();
    buf.append(DebuggerBundle.message("error.cannot.open.debugger.port")).append(" : ");
    buf.append(e1.getClass().getName() + " ");
    final String localizedMessage=e1.getLocalizedMessage();
    if (localizedMessage != null && localizedMessage.length() > 0) {
      buf.append('"');
      buf.append(localizedMessage);
      buf.append('"');
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug(e1);
    }
    message=buf.toString();
  }
 else   if (e instanceof ExecutionException) {
    message=e.getLocalizedMessage();
  }
 else {
    message=DebuggerBundle.message("error.exception.while.connecting",e.getClass().getName(),e.getLocalizedMessage());
    if (LOG.isDebugEnabled()) {
      LOG.debug(e);
    }
  }
  return message;
}
