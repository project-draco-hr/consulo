{
  if (myModulePaths != null && myModulePaths.length > 0) {
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        for (int idx=0; idx < myModulePaths.length; idx++) {
          final ModulePath modulePath=myModulePaths[idx];
          try {
            final Module module=myModuleModel.loadModuleInternal(modulePath.getPath());
            final String groupPathString=modulePath.getModuleGroup();
            if (groupPathString != null) {
              final String[] groupPath=groupPathString.split(MODULE_GROUP_SEPARATOR);
              setModuleGroupPath(module,groupPath);
            }
          }
 catch (          final IOException e) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                Messages.showMessageDialog("Cannot load module: " + e.getMessage(),"Cannot Load Module",Messages.getErrorIcon());
              }
            }
);
          }
catch (          JDOMException e) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                Messages.showMessageDialog("Corruped module file: " + modulePath,"Cannot Load Module",Messages.getErrorIcon());
              }
            }
);
          }
catch (          InvalidDataException e) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                Messages.showMessageDialog("Corruped module data at: " + modulePath,"Cannot Load Module",Messages.getErrorIcon());
              }
            }
);
          }
catch (          final ModuleWithNameAlreadyExists moduleWithNameAlreadyExists) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                Messages.showMessageDialog(moduleWithNameAlreadyExists.getMessage(),"Cannot Load Module",Messages.getErrorIcon());
              }
            }
);
          }
catch (          final LoadCancelledException e) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                int response=Messages.showDialog("Cancelled loading of module from:" + modulePath.getPath() + "\n"+ "Cancelled by component: "+ e.getIssuer().getComponentName()+ "\n"+ "Reason is: "+ e.getMessage(),"Module Loading Cancelled",new String[]{"Try to load &later","&Remove from project"},0,Messages.getErrorIcon());
                if (response == 1) {
                  myModuleModel.myPath2CancelledModelMap.remove(modulePath.getPath());
                }
              }
            }
);
          }
        }
      }
    }
);
  }
}
