{
  PsiBuilder.Marker marker=builder.mark();
  ParserUtils.getToken(builder,GroovyTokenTypes.kWHILE);
  if (!ParserUtils.getToken(builder,GroovyTokenTypes.mLPAREN,GroovyBundle.message("lparen.expected"))) {
    marker.done(WHILE_STATEMENT);
    return true;
  }
  if (!StrictContextExpression.parse(builder,this)) {
    builder.error(GroovyBundle.message("expression.expected"));
  }
  ParserUtils.getToken(builder,GroovyTokenTypes.mNLS);
  if (!ParserUtils.getToken(builder,GroovyTokenTypes.mRPAREN,GroovyBundle.message("rparen.expected"))) {
    marker.done(WHILE_STATEMENT);
    return true;
  }
  parseBranch(builder);
  marker.done(WHILE_STATEMENT);
  return true;
}
