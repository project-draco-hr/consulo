{
  GspTemplateStmtParsing.parseGspTemplateStmt(builder);
  if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {
    Separators.parse(builder);
  }
  while (GspTemplateStmtParsing.parseGspTemplateStmt(builder)) {
    Separators.parse(builder);
  }
  boolean result=parseStatement(builder,false);
  while (result && (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType()) || GspTemplateStmtParsing.parseGspTemplateStmt(builder))) {
    Separators.parse(builder);
    while (GspTemplateStmtParsing.parseGspTemplateStmt(builder)) {
      Separators.parse(builder);
    }
    result=parseStatement(builder,false);
    if (!GspTokenTypesEx.GSP_GROOVY_SEPARATORS.contains(builder.getTokenType())) {
      cleanAfterError(builder);
    }
  }
  cleanAfterError(builder);
  Separators.parse(builder);
  while (GspTemplateStmtParsing.parseGspTemplateStmt(builder)) {
    Separators.parse(builder);
  }
}
