{
  if (GroovyTokenTypes.kCASE.equals(builder.getTokenType()) || GroovyTokenTypes.kDEFAULT.equals(builder.getTokenType()) || GroovyTokenTypes.mRCURLY.equals(builder.getTokenType())) {
    return;
  }
  if (!parseStatement(builder,false) && !parseExtendedStatement(builder)) {
    builder.error(GroovyBundle.message("wrong.statement"));
    return;
  }
  while (parseExtendedStatement(builder)) {
    if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {
      Separators.parse(builder);
    }
  }
  if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {
    Separators.parse(builder);
  }
  if (GroovyTokenTypes.kCASE.equals(builder.getTokenType()) || GroovyTokenTypes.kDEFAULT.equals(builder.getTokenType()) || GroovyTokenTypes.mRCURLY.equals(builder.getTokenType())) {
    return;
  }
  boolean result=parseStatement(builder,false);
  while (result && (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) || parseExtendedStatement(builder)) {
    if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {
      Separators.parse(builder);
    }
    while (parseExtendedStatement(builder)) {
      if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {
        Separators.parse(builder);
      }
    }
    if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {
      Separators.parse(builder);
    }
    if (GroovyTokenTypes.kCASE.equals(builder.getTokenType()) || GroovyTokenTypes.kDEFAULT.equals(builder.getTokenType()) || GroovyTokenTypes.mRCURLY.equals(builder.getTokenType())) {
      break;
    }
    result=parseStatement(builder,false);
    if (!isExtendedSeparator(builder.getTokenType())) {
      cleanAfterError(builder);
    }
  }
  Separators.parse(builder);
}
