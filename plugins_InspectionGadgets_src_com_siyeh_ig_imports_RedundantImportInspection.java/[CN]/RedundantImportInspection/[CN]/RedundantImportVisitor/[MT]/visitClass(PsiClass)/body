{
  if (aClass.getContainingFile() instanceof JspFile) {
    return;
  }
  if (!(aClass.getParent() instanceof PsiJavaFile)) {
    return;
  }
  final PsiJavaFile file=(PsiJavaFile)aClass.getParent();
  if (file == null) {
    return;
  }
  if (!file.getClasses()[0].equals(aClass)) {
    return;
  }
  final PsiImportList importList=file.getImportList();
  final PsiImportStatement[] importStatements=importList.getImportStatements();
  final Set<String> imports=new HashSet<String>(importStatements.length);
  for (  final PsiImportStatement importStatement : importStatements) {
    final String text=importStatement.getQualifiedName();
    if (text == null) {
      return;
    }
    if (imports.contains(text)) {
      registerError(importStatement);
    }
    if (!importStatement.isOnDemand()) {
      final int classNameIndex=text.lastIndexOf((int)'.');
      if (classNameIndex < 0) {
        return;
      }
      final String parentName=text.substring(0,classNameIndex);
      if (imports.contains(parentName)) {
        if (!ImportUtils.hasOnDemandImportConflict(text,file)) {
          registerError(importStatement);
        }
      }
    }
    imports.add(text);
  }
}
