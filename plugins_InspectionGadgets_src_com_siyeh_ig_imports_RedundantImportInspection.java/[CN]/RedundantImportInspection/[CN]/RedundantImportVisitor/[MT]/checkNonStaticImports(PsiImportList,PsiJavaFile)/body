{
  final PsiImportStatement[] importStatements=importList.getImportStatements();
  final Set<String> imports=new HashSet<String>(importStatements.length);
  for (  final PsiImportStatement importStatement : importStatements) {
    final String text=importStatement.getQualifiedName();
    if (text == null) {
      continue;
    }
    if (imports.contains(text)) {
      registerError(importStatement);
      continue;
    }
    if (!importStatement.isOnDemand()) {
      final PsiElement element=importStatement.resolve();
      if (!(element instanceof PsiClass)) {
        continue;
      }
      final PsiClass targetClass=(PsiClass)element;
      final PsiJavaFile targetFile=PsiTreeUtil.getParentOfType(targetClass,PsiJavaFile.class);
      if (targetFile == null) {
        continue;
      }
      final String parentName=targetFile.getPackageName();
      if (imports.contains(parentName)) {
        if (!ImportUtils.hasOnDemandImportConflict(text,javaFile)) {
          registerError(importStatement);
        }
      }
    }
    imports.add(text);
  }
}
