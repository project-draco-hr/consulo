{
  final JpsRemoteProto.Message message=(JpsRemoteProto.Message)e.getMessage();
  final UUID sessionId=ProtoUtil.fromProtoUUID(message.getSessionId());
  final JpsRemoteProto.Message.Type messageType=message.getMessageType();
  final JpsServerResponseHandler handler=getHandler(sessionId);
  if (handler == null) {
    terminateSession(sessionId);
    return;
  }
  boolean terminateSession=false;
  try {
    if (messageType == JpsRemoteProto.Message.Type.FAILURE) {
      terminateSession=true;
      handler.handleFailure(message.getFailure());
    }
 else     if (messageType == JpsRemoteProto.Message.Type.RESPONSE) {
      final JpsRemoteProto.Message.Response response=message.getResponse();
      final JpsRemoteProto.Message.Response.Type responseType=response.getResponseType();
switch (responseType) {
case BUILD_EVENT:
{
          terminateSession=handler.handleBuildEvent(response.getBuildEvent());
        }
      break;
case COMPILE_MESSAGE:
    handler.handleCompileMessage(response.getCompileMessage());
  break;
default :
terminateSession=true;
throw new Exception("Unknown response: " + response);
}
}
 else {
terminateSession=true;
throw new Exception("Unknown message received: " + message);
}
}
  finally {
if (terminateSession) {
terminateSession(sessionId);
}
}
}
