{
  if (positions.size() == 0) {
    innerLen-=count;
    realLength-=count;
    return this;
  }
  final int lastIndex=positions.size() - 1;
  final int lastPos=positions.getQuick(lastIndex);
  if (lastPos == innerLen) {
    final CharSequence last=builders.get(lastIndex);
    final int lastLength=last.length();
    if (lastLength <= count) {
      positions.remove(lastIndex);
      builders.remove(lastIndex);
      realLength-=lastLength;
      count-=lastLength;
      if (count > 0)       removeFromTheEnd(count);
    }
 else {
      if (last instanceof MyStringBuilder) {
        ((MyStringBuilder)last).removeFromTheEnd(count);
        realLength-=count;
      }
 else {
        positions.remove(lastIndex);
        builders.remove(lastIndex);
        realLength-=lastLength;
        int toAppend=lastLength - count;
        for (int i=0; i < toAppend; i++) {
          append(last.charAt(i));
        }
      }
    }
  }
 else {
    if (lastPos + count <= innerLen) {
      innerLen-=count;
      realLength-=count;
    }
 else {
      final int removed=innerLen - lastPos;
      innerLen-=removed;
      realLength-=removed;
      count-=removed;
      if (count > 0)       removeFromTheEnd(count);
    }
  }
  return this;
}
