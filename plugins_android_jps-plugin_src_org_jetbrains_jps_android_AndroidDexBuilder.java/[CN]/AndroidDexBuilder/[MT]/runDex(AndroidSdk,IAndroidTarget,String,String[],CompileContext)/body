{
  @SuppressWarnings("deprecation") final String dxJarPath=FileUtil.toSystemDependentName(target.getPath(IAndroidTarget.DX_JAR));
  final File dxJar=new File(dxJarPath);
  if (!dxJar.isFile()) {
    context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.ERROR,"Cannot find file " + dxJarPath));
    return false;
  }
  final String outFilePath=outputDir + File.separatorChar + AndroidCommonUtils.CLASSES_FILE_NAME;
  final List<String> programParamList=new ArrayList<String>();
  programParamList.add(dxJarPath);
  programParamList.add(outFilePath);
  programParamList.addAll(Arrays.asList(compileTargets));
  programParamList.add("--exclude");
  final List<String> classPath=new ArrayList<String>();
  classPath.add(ClasspathBootstrap.getResourcePath(AndroidDxRunner.class).getPath());
  classPath.add(ClasspathBootstrap.getResourcePath(FileUtil.class).getPath());
  final File outFile=new File(outFilePath);
  if (outFile.exists() && !outFile.delete()) {
    context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.WARNING,AndroidJpsBundle.message("android.jps.errors.cannot.delete.file",outFilePath)));
  }
  final List<String> commandLine=ExternalProcessUtil.buildJavaCommandLine(sdk.getJavaExecutable(),AndroidDxRunner.class.getName(),Collections.<String>emptyList(),classPath,Arrays.asList("-Xmx1024M"),programParamList);
  LOG.info(AndroidCommonUtils.command2string(commandLine));
  try {
    final Process process=Runtime.getRuntime().exec(ArrayUtil.toStringArray(commandLine));
    final HashMap<AndroidCompilerMessageKind,List<String>> messages=new HashMap<AndroidCompilerMessageKind,List<String>>(3);
    messages.put(AndroidCompilerMessageKind.ERROR,new ArrayList<String>());
    messages.put(AndroidCompilerMessageKind.WARNING,new ArrayList<String>());
    messages.put(AndroidCompilerMessageKind.INFORMATION,new ArrayList<String>());
    AndroidCommonUtils.handleDexCompilationResult(process,outFilePath,messages);
    AndroidJpsUtil.addMessages(context,messages,null,BUILDER_NAME);
    return messages.get(AndroidCompilerMessageKind.ERROR).size() == 0;
  }
 catch (  IOException e) {
    AndroidJpsUtil.reportExceptionError(context,null,e,BUILDER_NAME);
    return false;
  }
}
