{
  @SuppressWarnings("deprecation") final String dxJarPath=FileUtil.toSystemDependentName(platform.getTarget().getPath(IAndroidTarget.DX_JAR));
  final File dxJar=new File(dxJarPath);
  if (!dxJar.isFile()) {
    context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.ERROR,AndroidJpsBundle.message("android.jps.cannot.find.file",dxJarPath)));
    return false;
  }
  final String outFilePath=outputDir + File.separatorChar + AndroidCommonUtils.CLASSES_FILE_NAME;
  final List<String> programParamList=new ArrayList<String>();
  programParamList.add(dxJarPath);
  programParamList.add(outFilePath);
  programParamList.addAll(Arrays.asList(compileTargets));
  programParamList.add("--exclude");
  final List<String> classPath=new ArrayList<String>();
  classPath.add(ClasspathBootstrap.getResourcePath(AndroidDxRunner.class).getPath());
  classPath.add(ClasspathBootstrap.getResourcePath(FileUtilRt.class).getPath());
  final File outFile=new File(outFilePath);
  if (outFile.exists() && !outFile.delete()) {
    context.processMessage(new CompilerMessage(BUILDER_NAME,BuildMessage.Kind.WARNING,AndroidJpsBundle.message("android.jps.cannot.delete.file",outFilePath)));
  }
  final List<String> commandLine=ExternalProcessUtil.buildJavaCommandLine(platform.getSdk().getJavaExecutable(),AndroidDxRunner.class.getName(),Collections.<String>emptyList(),classPath,Arrays.asList("-Xmx1024M"),programParamList);
  LOG.info(AndroidCommonUtils.command2string(commandLine));
  final Process process=Runtime.getRuntime().exec(ArrayUtil.toStringArray(commandLine));
  final HashMap<AndroidCompilerMessageKind,List<String>> messages=new HashMap<AndroidCompilerMessageKind,List<String>>(3);
  messages.put(AndroidCompilerMessageKind.ERROR,new ArrayList<String>());
  messages.put(AndroidCompilerMessageKind.WARNING,new ArrayList<String>());
  messages.put(AndroidCompilerMessageKind.INFORMATION,new ArrayList<String>());
  AndroidCommonUtils.handleDexCompilationResult(process,outFilePath,messages);
  AndroidJpsUtil.addMessages(context,messages,BUILDER_NAME,moduleName);
  return messages.get(AndroidCompilerMessageKind.ERROR).size() == 0;
}
