{
  final List<Pair<Instruction,String>> result=ContainerUtil.newArrayList();
  scope.accept(new PsiRecursiveElementWalkingVisitor(){
    @Override public void visitElement(    PsiElement element){
      if (element instanceof GrReferenceExpression && !((GrReferenceExpression)element).isQualified()) {
        String varName=((GrReferenceExpression)element).getReferenceName();
        if (varName != null) {
          for (          Instruction dependency : ControlFlowUtils.findAllInstructions(element,flow)) {
            result.add(Pair.create(dependency,varName));
          }
        }
      }
      super.visitElement(element);
    }
  }
);
  return result;
}
