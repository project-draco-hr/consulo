{
  final TypeDfaInstance dfaInstance=new TypeDfaInstance(owner);
  final TypesSemilattice semilattice=new TypesSemilattice(owner.getManager());
  List<TypeDfaState> states=new DFAEngine<TypeDfaState>(flow,dfaInstance,semilattice).performDFAWithTimeout();
  return states == null ? null : ContainerUtil.map(states,new Function<TypeDfaState,Map<String,PsiType>>(){
    @Override public Map<String,PsiType> fun(    TypeDfaState state){
      return state.getBindings();
    }
  }
);
}
