{
  PsiClass psiClass=null;
  PsiExpression qualifier=null;
  if (element instanceof PsiNewExpression) {
    PsiJavaCodeReferenceElement ref=((PsiNewExpression)element).getClassReference();
    if (ref instanceof PsiReferenceExpression) {
      qualifier=((PsiReferenceExpression)ref).getQualifierExpression();
    }
 else     if (ref != null) {
      PsiElement refElement=ref.resolve();
      if (refElement instanceof PsiClass)       psiClass=(PsiClass)refElement;
    }
  }
 else   if (element instanceof PsiReferenceExpression) {
    qualifier=((PsiReferenceExpression)element).getQualifierExpression();
  }
 else   if (element instanceof PsiMethodCallExpression) {
    qualifier=((PsiMethodCallExpression)element).getMethodExpression().getQualifierExpression();
  }
  if (qualifier != null) {
    PsiType type=qualifier.getType();
    if (type instanceof PsiClassType) {
      psiClass=PsiUtil.resolveClassInType(type);
    }
 else     if (qualifier instanceof PsiReferenceExpression) {
      PsiElement refElement=((PsiReferenceExpression)qualifier).resolve();
      if (refElement instanceof PsiClass) {
        psiClass=(PsiClass)refElement;
      }
    }
  }
 else   if (psiClass == null) {
    psiClass=PsiTreeUtil.getParentOfType(element,PsiClass.class);
  }
  if (!(element instanceof PsiMethodCallExpression)) {
    while (psiClass instanceof PsiAnonymousClass) {
      psiClass=PsiTreeUtil.getParentOfType(psiClass,PsiClass.class);
    }
  }
  if (psiClass instanceof PsiTypeParameter) {
    PsiClass[] supers=psiClass.getSupers();
    List<PsiClass> filtered=new ArrayList<PsiClass>();
    for (int i=0; i < supers.length; i++) {
      PsiClass aSuper=supers[i];
      if (!aSuper.isWritable() || !aSuper.getManager().isInProject(aSuper))       continue;
      if (!(aSuper instanceof PsiTypeParameter))       filtered.add(aSuper);
    }
    return filtered.size() > 0 ? filtered.toArray(new PsiClass[filtered.size()]) : null;
  }
 else {
    return psiClass != null && psiClass.getManager().isInProject(psiClass) && psiClass.isWritable() ? new PsiClass[]{psiClass} : null;
  }
}
