{
  final Project project=classes[0].getProject();
  final JList list=new JList(classes);
  PsiElementListCellRenderer renderer=new PsiClassListCellRenderer();
  list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  list.setCellRenderer(renderer);
  renderer.installSpeedSearch(list);
  Runnable runnable=new Runnable(){
    public void run(){
      int index=list.getSelectedIndex();
      if (index < 0)       return;
      final PsiClass aClass=(PsiClass)list.getSelectedValue();
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          doInvoke(project,aClass);
        }
      }
);
    }
  }
;
  ListPopup listPopup=new ListPopup(QuickFixBundle.message("target.class.chooser.title"),list,runnable,project);
  LogicalPosition caretPosition=editor.getCaretModel().getLogicalPosition();
  Point caretLocation=editor.logicalPositionToXY(caretPosition);
  int x=caretLocation.x;
  int y=caretLocation.y;
  Point location=editor.getContentComponent().getLocationOnScreen();
  x+=location.x;
  y+=location.y;
  listPopup.show(x,y);
}
