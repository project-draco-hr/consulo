{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  if (!boundClass.isValid()) {
    return;
  }
  if (!boundClass.isWritable()) {
    if (showErrors) {
      if (!CommonRefactoringUtil.checkReadOnlyStatus(boundClass,project,UIDesignerBundle.message("error.cannot.create.field",fieldClassName))) {
        return;
      }
    }
 else     return;
  }
  final PsiClass fieldClass=PsiManager.getInstance(project).findClass(fieldClassName,GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(rootContainer.getModule()));
  if (fieldClass == null) {
    if (showErrors) {
      Messages.showErrorDialog(project,UIDesignerBundle.message("error.cannot.create.field.no.class",fieldName,fieldClassName),CommonBundle.getErrorTitle());
    }
    return;
  }
  CommandProcessor.getInstance().executeCommand(project,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          createField(project,fieldClass,fieldName,boundClass,showErrors,rootContainer);
        }
      }
);
    }
  }
,UIDesignerBundle.message("command.create.field"),undoGroupId);
}
