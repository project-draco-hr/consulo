{
  final GrClosableBlock closure=(GrClosableBlock)element;
  final GrParameterList parameterList=closure.getParameterList();
  final GrParameter parameter=parameterList.getParameters()[0];
  final Set<GrReferenceExpression> referencesToChange=new HashSet<GrReferenceExpression>();
  final GroovyRecursiveElementVisitor visitor=new GroovyRecursiveElementVisitor(){
    public void visitReferenceExpression(    GrReferenceExpression referenceExpression){
      super.visitReferenceExpression(referenceExpression);
      if (!referenceExpression.getText().equals(parameter.getName())) {
        return;
      }
      final PsiElement referent=referenceExpression.resolve();
      if (parameter.equals(referent)) {
        referencesToChange.add(referenceExpression);
      }
    }
  }
;
  closure.accept(visitor);
  parameter.delete();
  for (  GrReferenceExpression referenceExpression : referencesToChange) {
    replaceExpression("it",referenceExpression);
  }
}
