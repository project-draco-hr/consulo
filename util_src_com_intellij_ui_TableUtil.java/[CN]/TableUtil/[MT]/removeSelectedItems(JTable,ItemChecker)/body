{
  if (table.isEditing()) {
    table.getCellEditor().stopCellEditing();
  }
  TableModel model=table.getModel();
  if (!(model instanceof ItemRemovable)) {
    throw new RuntimeException("model must be instance of ItemRemovable");
  }
  ListSelectionModel selectionModel=table.getSelectionModel();
  int minSelectionIndex=selectionModel.getMinSelectionIndex();
  if (minSelectionIndex == -1)   return new ArrayList(0);
  ArrayList removedItems=new ArrayList();
  for (int idx=0; idx < table.getRowCount(); idx++) {
    if (selectionModel.isSelectedIndex(idx) && (applyable == null || applyable.isOperationApplyable(model,idx))) {
      int columnCount=model.getColumnCount();
      Object[] row=new Object[columnCount];
      for (int column=0; column < columnCount; column++) {
        row[column]=model.getValueAt(idx,column);
      }
      removedItems.add(row);
      ((ItemRemovable)model).removeRow(idx);
      idx--;
    }
  }
  int count=model.getRowCount();
  if (count == 0) {
    table.clearSelection();
  }
 else   if (selectionModel.getMinSelectionIndex() == -1) {
    if (minSelectionIndex >= count) {
      selectionModel.setSelectionInterval(count - 1,count - 1);
    }
 else {
      selectionModel.setSelectionInterval(minSelectionIndex,minSelectionIndex);
    }
  }
  return removedItems;
}
