{
  int idx1=0;
  int idx2=0;
  while (idx1 < one.getSize() && idx2 < two.getSize()) {
    final T firstOne=one.get(idx1);
    if (!filter(firstOne)) {
      ++idx1;
      continue;
    }
    final int comp=comparator.compare(firstOne,two.get(idx2));
    if (comp <= 0) {
      oldAdder.consume(firstOne,idx1);
      ++idx1;
      if (comp == 0) {
        ++idx2;
      }
    }
 else {
      newAdder.consume(two.get(idx2));
      ++idx2;
    }
  }
  while (idx1 < one.getSize()) {
    final T firstOne=one.get(idx1);
    if (!filter(firstOne)) {
      ++idx1;
      continue;
    }
    oldAdder.consume(one.get(idx1),idx1);
    ++idx1;
  }
  while (idx2 < two.getSize()) {
    newAdder.consume(two.get(idx2));
    ++idx2;
  }
}
