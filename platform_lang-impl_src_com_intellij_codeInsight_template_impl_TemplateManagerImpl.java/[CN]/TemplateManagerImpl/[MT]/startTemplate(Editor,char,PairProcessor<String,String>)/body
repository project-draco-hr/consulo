{
  PsiFile file=PsiUtilBase.getPsiFileInEditor(editor,myProject);
  if (file == null)   return false;
  TemplateSettings templateSettings=TemplateSettings.getInstance();
  Map<TemplateImpl,String> template2argument=findMatchingTemplates(file,editor,shortcutChar,templateSettings);
  for (  final CustomLiveTemplate customLiveTemplate : CustomLiveTemplate.EP_NAME.getExtensions()) {
    if (shortcutChar == customLiveTemplate.getShortcut()) {
      if (isApplicable(customLiveTemplate,editor,file)) {
        final CustomTemplateCallback callback=new CustomTemplateCallback(editor,file,false);
        String key=customLiveTemplate.computeTemplateKey(callback);
        if (key != null) {
          int caretOffset=editor.getCaretModel().getOffset();
          int offsetBeforeKey=caretOffset - key.length();
          CharSequence text=editor.getDocument().getCharsSequence();
          if (template2argument == null || !containsTemplateStartingBefore(template2argument,offsetBeforeKey,caretOffset,text)) {
            customLiveTemplate.expand(key,callback);
            return true;
          }
        }
      }
    }
  }
  return startNonCustomTemplates(template2argument,editor,processor);
}
