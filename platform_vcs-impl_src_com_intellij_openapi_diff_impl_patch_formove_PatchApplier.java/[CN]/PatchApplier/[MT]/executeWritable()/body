{
  final ReadonlyStatusHandler.OperationStatus readOnlyFilesStatus=getReadOnlyFilesStatus(myVerifier.getWritableFiles());
  if (readOnlyFilesStatus.hasReadonlyFiles()) {
    showError(myProject,readOnlyFilesStatus.getReadonlyFilesMessage(),true);
    return ApplyPatchStatus.ABORT;
  }
  myFailedPatches.addAll(myVerifier.filterBadFileTypePatches());
  ApplyPatchStatus result=myFailedPatches.isEmpty() ? null : ApplyPatchStatus.FAILURE;
  final List<Pair<VirtualFile,ApplyTextFilePatch>> textPatches=myVerifier.getTextPatches();
  try {
    markInternalOperation(textPatches,true);
    return ApplyPatchStatus.and(result,actualApply(textPatches,myVerifier.getBinaryPatches(),myCommitContext));
  }
  finally {
    markInternalOperation(textPatches,false);
  }
}
