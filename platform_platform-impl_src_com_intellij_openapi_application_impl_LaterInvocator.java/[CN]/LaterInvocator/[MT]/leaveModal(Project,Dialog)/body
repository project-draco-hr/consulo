{
  LOG.assertTrue(isDispatchThread(),"leaveModal() should be invoked in event-dispatch thread");
  if (LOG.isDebugEnabled()) {
    LOG.debug("leaveModal:" + dialog.getName() + " ; for project: "+ project.getName());
  }
  ourModalityStateMulticaster.getMulticaster().beforeModalityStateChanged(false);
  int index=ourModalEntities.indexOf(dialog);
  if (index != -1) {
    ourModalEntities.remove(index);
    ourModalityStack.remove(index + 1);
    for (int i=1; i < ourModalityStack.size(); i++) {
      ((ModalityStateEx)ourModalityStack.get(i)).removeModality(dialog);
    }
  }
 else   if (project != null) {
    List<Dialog> dialogs=projectToModalEntities.get(project);
    int perProjectIndex=dialogs.indexOf(dialog);
    LOG.assertTrue(perProjectIndex >= 0);
    dialogs.remove(perProjectIndex);
    Stack<ModalityState> states=projectToModalEntitiesStack.get(project);
    states.remove(perProjectIndex + 1);
    for (int i=1; i < states.size(); i++) {
      ((ModalityStateEx)states.get(i)).removeModality(dialog);
    }
  }
  ourQueueSkipCount=0;
  requestFlush();
}
