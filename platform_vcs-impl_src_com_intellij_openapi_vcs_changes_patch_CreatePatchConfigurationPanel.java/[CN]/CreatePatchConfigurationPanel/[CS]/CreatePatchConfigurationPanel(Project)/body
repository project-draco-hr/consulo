{
  myFileNameField.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      final FileSaverDialog dialog=FileChooserFactory.getInstance().createSaveFileDialog(new FileSaverDescriptor("Save patch to",""),myPanel);
      final String path=FileUtil.toSystemIndependentName(myFileNameField.getText().trim());
      final int idx=path.lastIndexOf("/");
      VirtualFile baseDir=idx == -1 ? project.getBaseDir() : (LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(path.substring(0,idx))));
      baseDir=baseDir == null ? project.getBaseDir() : baseDir;
      final String name=idx == -1 ? path : path.substring(idx + 1);
      final VirtualFileWrapper fileWrapper=dialog.save(baseDir,name);
      if (fileWrapper != null) {
        myFileNameField.setText(fileWrapper.getFile().getPath());
      }
    }
  }
);
  myFileNameField.getTextField().addInputMethodListener(new InputMethodListener(){
    public void inputMethodTextChanged(    final InputMethodEvent event){
      checkName();
    }
    public void caretPositionChanged(    final InputMethodEvent event){
    }
  }
);
  myFileNameField.getTextField().addKeyListener(new KeyListener(){
    public void keyTyped(    final KeyEvent e){
      checkName();
    }
    public void keyPressed(    final KeyEvent e){
      checkName();
    }
    public void keyReleased(    final KeyEvent e){
      checkName();
    }
  }
);
  myErrorLabel.setForeground(Color.RED);
  checkName();
}
