{
  mySelectFilesToAddTextsToPatchPanel=new SelectFilesToAddTextsToPatchPanel(myProject,myChanges,myIncludedChanges,inclusionListener);
  final Dimension preferredSize=myPanel.getPreferredSize();
  final JPanel wrapper=new JPanel(new BorderLayout()){
    @Override public Dimension getPreferredSize(){
      return preferredSize;
    }
    @Override public Dimension getMaximumSize(){
      return preferredSize;
    }
    @Override public Dimension getMinimumSize(){
      return preferredSize;
    }
  }
;
  wrapper.add(myPanel,BorderLayout.NORTH);
  mySplitterWithSecondHideable=new SplitterWithSecondHideable(true,ALL,wrapper,new OnOffListener<Integer>(){
    @Override public void on(    Integer integer){
      VcsConfiguration.getInstance(myProject).CREATE_PATCH_EXPAND_DETAILS_DEFAULT=true;
      final JDialog dialog=getParentDialog();
      final Dimension dialogSize=dialog.getSize();
      dialog.setSize(dialogSize.width,dialogSize.height + integer);
      dialog.repaint();
    }
    @Override public void off(    Integer integer){
      VcsConfiguration.getInstance(myProject).CREATE_PATCH_EXPAND_DETAILS_DEFAULT=false;
      final JDialog dialog=getParentDialog();
      final Dimension dialogSize=dialog.getSize();
      dialog.setSize(dialogSize.width,dialogSize.height - integer);
      dialog.repaint();
    }
  }
,false){
    @Override protected RefreshablePanel createDetails(){
      return mySelectFilesToAddTextsToPatchPanel;
    }
    @Override protected float getSplitterInitialProportion(){
      return 0.4f;
    }
  }
;
}
