{
  super(new BorderLayout());
  myProject=project;
  add(myPanel,BorderLayout.CENTER);
  reset();
  myAddButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      IssueLinkConfigurationDialog dlg=new IssueLinkConfigurationDialog(myProject);
      dlg.setTitle("Add Issue Navigation Link");
      dlg.show();
      if (dlg.isOK()) {
        myLinks.add(dlg.getLink());
        myModel.fireTableDataChanged();
      }
    }
  }
);
  myEditButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      IssueNavigationLink link=(IssueNavigationLink)myModel.getItem(myLinkTable.getSelectedRow());
      IssueLinkConfigurationDialog dlg=new IssueLinkConfigurationDialog(myProject);
      dlg.setTitle("Edit Issue Navigation Link");
      dlg.setLink(link);
      dlg.show();
      if (dlg.isOK()) {
        final IssueNavigationLink editedLink=dlg.getLink();
        link.setIssueRegexp(editedLink.getIssueRegexp());
        link.setLinkRegexp(editedLink.getLinkRegexp());
        myModel.fireTableDataChanged();
      }
    }
  }
);
  myDeleteButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (Messages.showOkCancelDialog(myProject,"Delete selected navigation link?","Delete Issue Navigation Link",Messages.getQuestionIcon()) == 0) {
        int selRow=myLinkTable.getSelectedRow();
        myLinks.remove(selRow);
        myModel.fireTableDataChanged();
        if (myLinkTable.getRowCount() > 0) {
          if (selRow >= myLinkTable.getRowCount()) {
            selRow--;
          }
          myLinkTable.getSelectionModel().setSelectionInterval(selRow,selRow);
        }
      }
    }
  }
);
  myLinkTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    final ListSelectionEvent e){
      updateButtons();
    }
  }
);
  updateButtons();
}
