{
  final PsiPackage bPackage=myPsiManager.findPackage("com.b");
  final DependenciesBuilder builder=new ForwardDependenciesBuilder(myProject,new AnalysisScope(bPackage));
  builder.analyze();
  final Set<PsiFile> searchFor=new HashSet<PsiFile>();
  searchFor.add(myJavaFacade.findClass("com.a.A",GlobalSearchScope.allScope(myProject)).getContainingFile());
  final Set<PsiFile> searchIn=new HashSet<PsiFile>();
  final PsiClass bClass=myJavaFacade.findClass("com.b.B",GlobalSearchScope.allScope(myProject));
  searchIn.add(bClass.getContainingFile());
  final PsiClass cClass=myJavaFacade.findClass("com.b.C",GlobalSearchScope.allScope(myProject));
  searchIn.add(cClass.getContainingFile());
  final UsageInfo[] usagesInfos=FindDependencyUtil.findDependencies(builder,searchIn,searchFor);
  final UsageInfo2UsageAdapter[] usages=UsageInfo2UsageAdapter.convert(usagesInfos);
  final String[] psiUsages=new String[usagesInfos.length];
  for (int i=0; i < usagesInfos.length; i++) {
    psiUsages[i]=toString(usages[i]);
  }
  checkResult(new String[]{"(2, 14) import com.a.A;","(4, 3) A myA = new A();","(4, 15) A myA = new A();","(6, 9) myA.aa();","(2, 14) import com.a.A;","(4, 3) A myA = new A();","(4, 15) A myA = new A();","(6, 9) myA.aa();"},psiUsages);
}
