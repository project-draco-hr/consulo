{
  final DependenciesBuilder builder=new ForwardDependenciesBuilder(myProject,new AnalysisScope(myProject));
  builder.analyze();
  final Set<PsiFile> searchIn=new HashSet<PsiFile>();
  final PsiClass aClass=myJavaFacade.findClass("A",GlobalSearchScope.allScope(myProject));
  searchIn.add(aClass.getContainingFile());
  final Set<PsiFile> searchFor=new HashSet<PsiFile>();
  final PsiClass bClass=myJavaFacade.findClass("B",GlobalSearchScope.allScope(myProject));
  searchFor.add(bClass.getContainingFile());
  final UsageInfo[] usagesInfos=FindDependencyUtil.findDependencies(builder,searchIn,searchFor);
  final UsageInfo2UsageAdapter[] usages=UsageInfo2UsageAdapter.convert(usagesInfos);
  final String[] psiUsages=new String[usagesInfos.length];
  for (int i=0; i < usagesInfos.length; i++) {
    psiUsages[i]=toString(usages[i]);
  }
  checkResult(new String[]{"(2, 3) B myB = new B();","(2, 15) B myB = new B();","(4, 9) myB.bb();"},psiUsages);
}
