{
  final TestProxy testProxy=reader.readObject();
  if (testProxy.getParent() == null) {
    getDynamicParent(myModel,testProxy).addChild(testProxy);
  }
  final int state=reader.readInt();
  final StateChanger stateChanger=STATE_CLASSES.get(new Integer(state));
  stateChanger.changeStateOf(testProxy,reader);
synchronized (myCurrentTests) {
    if (stateChanger instanceof RunningStateSetter) {
      myCurrentTests.add(testProxy);
    }
 else {
      myCurrentTests.remove(testProxy);
    }
  }
}
