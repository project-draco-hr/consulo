{
  final VcsContext vcsContext=createVcsContext(e);
  final VirtualFile file=vcsContext.getSelectedFiles()[0];
  final Project project=vcsContext.getProject();
  final AbstractVcs vcs=ProjectLevelVcsManager.getInstance(project).getVcsFor(file);
  final VcsHistoryProvider vcsHistoryProvider=vcs.getVcsHistoryProvider();
  final ArrayList<AnAction> actions=new ArrayList<AnAction>();
  try {
    final VcsHistorySession session=vcsHistoryProvider.createSessionFor(new FilePathImpl(file));
    final List<VcsFileRevision> revisions=session.getRevisionList();
    for (Iterator<VcsFileRevision> iterator=revisions.iterator(); iterator.hasNext(); ) {
      final VcsFileRevision vcsFileRevision=iterator.next();
      actions.add(new AbstractShowDiffAction(){
        protected VcsRevisionNumber getRevisionNumber(        DiffProvider diffProvider,        VirtualFile file){
          return vcsFileRevision.getRevisionNumber();
        }
        protected void update(        VcsContext vcsContext,        Presentation presentation){
          presentation.setText(vcsFileRevision.getRevisionNumber().asString() + " " + DATE_FORMAT.format(vcsFileRevision.getRevisionDate())+ " "+ vcsFileRevision.getAuthor());
          super.update(vcsContext,presentation);
        }
      }
);
    }
  }
 catch (  VcsException e1) {
  }
  return actions.toArray(new AnAction[actions.size()]);
}
