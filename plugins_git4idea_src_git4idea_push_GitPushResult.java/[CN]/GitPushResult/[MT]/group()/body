{
  final Map<GitRepository,GitPushRepoResult> successfulResults=new HashMap<GitRepository,GitPushRepoResult>();
  final Map<GitRepository,GitPushRepoResult> errorResults=new HashMap<GitRepository,GitPushRepoResult>();
  final Map<GitRepository,GitPushRepoResult> rejectedResults=new HashMap<GitRepository,GitPushRepoResult>();
  for (  Map.Entry<GitRepository,GitPushRepoResult> entry : myResults.entrySet()) {
    GitRepository repository=entry.getKey();
    GitPushRepoResult repoResult=entry.getValue();
switch (repoResult.getType()) {
case SUCCESS:
      successfulResults.put(repository,repoResult);
    break;
case ERROR:
case CANCEL:
case NOT_AUTHORIZED:
  errorResults.put(repository,repoResult);
break;
case NOT_PUSHING:
break;
case SOME_REJECTED:
rejectedResults.put(repository,repoResult);
break;
}
}
return new GroupedResult(successfulResults,errorResults,rejectedResults);
}
