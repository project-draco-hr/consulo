{
  final PsiFile[] files=new PsiFile[fileNames.length];
  for (int i=0; i < files.length; i++) {
    String fileName=fileNames[i];
    final VirtualFile file=myFixture.getTempDirFixture().getFile(dir + "/" + fileName);
    assertNotNull("File " + fileName + " not found",file);
    files[i]=PsiManager.getInstance(getProject()).findFile(file);
    assertNotNull("File " + fileName + " not found",files[i]);
  }
  final VirtualFile virDir=myFixture.getTempDirFixture().getFile(dir + "/" + newDirName);
  assertNotNull("Directory " + newDirName + " not found",virDir);
  final PsiDirectory psiDirectory=PsiManager.getInstance(getProject()).findDirectory(virDir);
  assertNotNull("Directory " + newDirName + " not found",psiDirectory);
  final PsiPackage pkg=JavaDirectoryService.getInstance().getPackage(psiDirectory);
  final SingleSourceRootMoveDestination destination=new SingleSourceRootMoveDestination(PackageWrapper.create(pkg),psiDirectory);
  new WriteCommandAction(myFixture.getProject()){
    @Override protected void run(    Result result) throws Throwable {
      new MoveGroovyScriptProcessor(getProject(),files,destination,false,false,null).run();
    }
  }
.execute();
  PsiDocumentManager.getInstance(getProject()).commitAllDocuments();
  FileDocumentManager.getInstance().saveAllDocuments();
}
