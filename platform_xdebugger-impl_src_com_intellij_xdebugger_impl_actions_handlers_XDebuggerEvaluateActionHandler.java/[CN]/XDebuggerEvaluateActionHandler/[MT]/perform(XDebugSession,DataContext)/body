{
  XDebuggerEditorsProvider editorsProvider=session.getDebugProcess().getEditorsProvider();
  XStackFrame stackFrame=session.getCurrentStackFrame();
  final XDebuggerEvaluator evaluator=session.getDebugProcess().getEvaluator();
  if (evaluator == null) {
    return;
  }
  Editor editor=CommonDataKeys.EDITOR.getData(dataContext);
  String selectedText=editor != null ? editor.getSelectionModel().getSelectedText() : null;
  if (selectedText != null) {
    selectedText=evaluator.formatTextForEvaluation(selectedText);
  }
  String text=selectedText;
  if (text == null && editor != null) {
    text=getExpressionText(evaluator,CommonDataKeys.PROJECT.getData(dataContext),editor);
  }
  if (text == null) {
    XValue value=XDebuggerTreeActionBase.getSelectedValue(dataContext);
    if (value != null) {
      text=value.getEvaluationExpression();
    }
  }
  Language language=null;
  if (stackFrame != null) {
    XSourcePosition position=stackFrame.getSourcePosition();
    if (position != null) {
      language=XDebuggerEditorBase.getFileTypeLanguage(position.getFile().getFileType());
    }
  }
  if (language == null) {
    VirtualFile file=CommonDataKeys.VIRTUAL_FILE.getData(dataContext);
    if (file != null) {
      language=XDebuggerEditorBase.getFileTypeLanguage(file.getFileType());
    }
  }
  XExpression expression=new XExpressionImpl(StringUtil.notNullize(text),language,null);
  new XDebuggerEvaluationDialog(session,editorsProvider,evaluator,expression,stackFrame == null ? null : stackFrame.getSourcePosition()).show();
}
