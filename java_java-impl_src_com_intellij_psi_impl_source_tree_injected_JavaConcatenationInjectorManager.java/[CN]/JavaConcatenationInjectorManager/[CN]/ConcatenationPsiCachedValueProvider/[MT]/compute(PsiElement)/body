{
  PsiElement element=context;
  PsiElement parent=context.getParent();
  while (parent instanceof PsiBinaryExpression && ((PsiBinaryExpression)parent).getOperationSign().getTokenType() == JavaTokenType.PLUS || parent instanceof PsiAssignmentExpression && ((PsiAssignmentExpression)parent).getOperationSign().getTokenType() == JavaTokenType.PLUSEQ || parent instanceof PsiConditionalExpression && ((PsiConditionalExpression)parent).getCondition() != element || parent instanceof PsiTypeCastExpression || parent instanceof PsiParenthesizedExpression) {
    element=parent;
    parent=parent.getParent();
  }
  PsiElement[] operands;
  PsiElement anchor;
  if (element instanceof PsiBinaryExpression || element instanceof PsiAssignmentExpression) {
    List<PsiElement> operandList=new ArrayList<PsiElement>();
    collectOperands(element,operandList);
    operands=operandList.toArray(new PsiElement[operandList.size()]);
    anchor=element;
  }
 else {
    operands=new PsiElement[]{context};
    anchor=context;
  }
  Project project=context.getProject();
  MultiHostRegistrarImpl registrar=new MultiHostRegistrarImpl(project,context.getContainingFile(),anchor);
  JavaConcatenationInjectorManager concatenationInjectorManager=getInstance(project);
  for (  ConcatenationAwareInjector concatenationInjector : concatenationInjectorManager.myConcatenationInjectors) {
    concatenationInjector.getLanguagesToInject(registrar,operands);
  }
  CachedValueProvider.Result<MultiHostRegistrarImpl> result=CachedValueProvider.Result.create(registrar,PsiModificationTracker.MODIFICATION_COUNT,concatenationInjectorManager);
  if (registrar.result != null) {
    ParameterizedCachedValue<MultiHostRegistrarImpl,PsiElement> cachedValue=CachedValuesManager.getManager(context.getProject()).createParameterizedCachedValue(this,false);
    ((PsiParameterizedCachedValue<MultiHostRegistrarImpl,PsiElement>)cachedValue).setValue(result);
    for (    PsiElement operand : operands) {
      operand.putUserData(INJECTED_PSI_IN_CONCATENATION,cachedValue);
    }
    anchor.putUserData(INJECTED_PSI_IN_CONCATENATION,cachedValue);
    context.putUserData(INJECTED_PSI_IN_CONCATENATION,cachedValue);
  }
  return result;
}
