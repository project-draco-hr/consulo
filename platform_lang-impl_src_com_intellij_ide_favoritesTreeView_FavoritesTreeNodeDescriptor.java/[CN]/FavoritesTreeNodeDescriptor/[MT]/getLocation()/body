{
  Object nodeElement=myElement.getValue();
  if (nodeElement instanceof SmartPsiElementPointer) {
    nodeElement=((SmartPsiElementPointer)nodeElement).getElement();
  }
  if (nodeElement instanceof PsiElement) {
    if (nodeElement instanceof PsiDirectory) {
      return ((PsiDirectory)nodeElement).getVirtualFile().getPresentableUrl();
    }
    if (nodeElement instanceof PsiFile) {
      final PsiFile containingFile=(PsiFile)nodeElement;
      final VirtualFile virtualFile=containingFile.getVirtualFile();
      return virtualFile != null ? virtualFile.getPresentableUrl() : "";
    }
  }
  if (nodeElement instanceof LibraryGroupElement) {
    return ((LibraryGroupElement)nodeElement).getModule().getName();
  }
  if (nodeElement instanceof NamedLibraryElement) {
    final NamedLibraryElement namedLibraryElement=((NamedLibraryElement)nodeElement);
    final LibraryGroupElement parent=namedLibraryElement.getParent();
    return parent.getModule().getName() + ":" + namedLibraryElement.getOrderEntry().getPresentableName();
  }
  final FavoriteNodeProvider[] nodeProviders=Extensions.getExtensions(FavoriteNodeProvider.EP_NAME,myProject);
  for (  FavoriteNodeProvider provider : nodeProviders) {
    String location=provider.getElementLocation(nodeElement);
    if (location != null)     return location;
  }
  return null;
}
