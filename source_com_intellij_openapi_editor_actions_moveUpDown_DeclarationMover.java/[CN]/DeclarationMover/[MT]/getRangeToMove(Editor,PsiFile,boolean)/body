{
  LineRange lineRange=super.getRangeToMove(editor,file,isDown);
  if (!(file instanceof PsiJavaFile)) {
    return null;
  }
  final Pair<PsiElement,PsiElement> psiRange=getElementRange(editor,file,lineRange);
  if (psiRange == null)   return null;
  final PsiMember firstMember=PsiTreeUtil.getParentOfType(psiRange.getFirst(),PsiMember.class,false);
  final PsiMember lastMember=PsiTreeUtil.getParentOfType(psiRange.getSecond(),PsiMember.class,false);
  if (firstMember != null && firstMember == lastMember) {
    final LineRange newRange=memberRange(firstMember,editor,lineRange);
    newRange.firstElement=firstMember;
    newRange.lastElement=lastMember;
    return newRange;
  }
  final PsiElement parent=PsiTreeUtil.findCommonParent(firstMember,lastMember);
  if (parent == null)   return null;
  final Pair<PsiElement,PsiElement> combinedRange=getElementRange(parent,firstMember,lastMember);
  if (combinedRange == null)   return null;
  final LineRange lineRange1=memberRange(combinedRange.getFirst(),editor,lineRange);
  if (lineRange1 == null)   return null;
  final LineRange lineRange2=memberRange(combinedRange.getSecond(),editor,lineRange);
  if (lineRange2 == null)   return null;
  final LineRange newRange=new LineRange(lineRange1.startLine,lineRange2.endLine);
  newRange.firstElement=combinedRange.getFirst();
  newRange.lastElement=combinedRange.getSecond();
  return newRange;
}
