{
  PsiDirectory psiDirectory=null;
  if (!"".equals(packageName)) {
    PsiPackage rootPackage=findLongestExistingPackage(project,packageName);
    if (rootPackage != null) {
      int beginIndex=rootPackage.getQualifiedName().length() + 1;
      packageName=beginIndex < packageName.length() ? packageName.substring(beginIndex) : "";
      String postfixToShow=packageName.replace('.',File.separatorChar);
      if (packageName.length() > 0) {
        postfixToShow=File.separatorChar + postfixToShow;
      }
      psiDirectory=selectDirectory(project,rootPackage.getDirectories(),baseDir,postfixToShow);
      if (psiDirectory == null)       return null;
    }
  }
  if (psiDirectory == null) {
    PsiDirectory[] sourceDirectories=PsiManager.getInstance(project).getRootDirectories(PsiRootPackageType.SOURCE_PATH);
    psiDirectory=selectDirectory(project,sourceDirectories,baseDir,File.separatorChar + packageName.replace('.',File.separatorChar));
    if (psiDirectory == null)     return null;
  }
  String restOfName=packageName;
  boolean askedToCreate=false;
  while (restOfName.length() > 0) {
    final String name=getLeftPart(restOfName);
    PsiDirectory foundExistingDirectory=psiDirectory.findSubdirectory(name);
    if (foundExistingDirectory == null) {
      if (!askedToCreate && askUserToCreate) {
        int toCreate=Messages.showYesNoDialog(project,"Package " + packageName + " does not exist.\nDo you want to create it?","Package Not Found",Messages.getQuestionIcon());
        if (toCreate != 0) {
          return null;
        }
        askedToCreate=true;
      }
      psiDirectory=createSubdirectory(psiDirectory,name,project);
    }
 else {
      psiDirectory=foundExistingDirectory;
    }
    restOfName=cutLeftPart(restOfName);
  }
  return psiDirectory;
}
