{
  Set<String> conflicts=new HashSet<String>();
  if (myCreateInnerClassRb.isSelected()) {
    if (myTargetClass.findInnerClassByName(myInnerClassName.getText(),false) != null) {
      conflicts.add("Inner class " + myInnerClassName.getText() + " already defined in class "+ myTargetClass.getName());
    }
  }
  if (conflicts.size() > 0) {
    final ConflictsDialog conflictsDialog=new ConflictsDialog(myProject,conflicts);
    conflictsDialog.show();
    if (!conflictsDialog.isOK())     return;
  }
  final JCheckBox makeVarargsCb=myCreateInnerClassRb.isSelected() ? myCbMakeVarargs : myCbMakeVarargsAnonymous;
  if (makeVarargsCb != null && makeVarargsCb.isSelected()) {
    final ParameterTablePanel.VariableData data=myVariableData.getInputVariables().get(myVariableData.getInputVariables().size() - 1);
    if (data.type instanceof PsiArrayType) {
      data.type=new PsiEllipsisType(((PsiArrayType)data.type).getComponentType());
    }
  }
  super.doOKAction();
}
