{
  PsiModifierList modifierListCopy=member.getModifierList();
  if (modifierListCopy != null) {
    modifierListCopy=(PsiModifierList)modifierListCopy.copy();
    final PsiClass containingClass=member.getContainingClass();
    if (containingClass != null && containingClass.isInterface()) {
      VisibilityUtil.setVisibility(modifierListCopy,PsiModifier.PUBLIC);
    }
  }
  if (newVisibility != null && modifierListCopy != null) {
    try {
      VisibilityUtil.setVisibility(modifierListCopy,newVisibility);
    }
 catch (    IncorrectOperationException ignore) {
    }
  }
  checkAccessibilityConflicts(member,modifierListCopy,targetClass,membersToMove,conflicts);
}
