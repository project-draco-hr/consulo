{
  LocalFileSystem.getInstance().removeWatchedRoots(myRootsToWatch);
  myRootsToWatch.clear();
  Module[] modules=ModuleManager.getInstance(myProject).getModules();
  Set<VirtualFile> contentRoots=new HashSet<VirtualFile>();
  for (  Module module : modules) {
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
    contentRoots.addAll(Arrays.asList(moduleRootManager.getContentRoots()));
  }
  myRootsToWatch.addAll(LocalFileSystem.getInstance().addRootsToWatch(contentRoots,true));
  Set<VirtualFile> libraryRoots=new HashSet<VirtualFile>();
  for (  Module module : modules) {
    final ModuleRootManager moduleRootManager=ModuleRootManager.getInstance(module);
    final OrderEntry[] orderEntries=moduleRootManager.getOrderEntries();
    for (    OrderEntry entry : orderEntries) {
      if (entry instanceof LibraryOrderEntry) {
        final Library library=((LibraryOrderEntry)entry).getLibrary();
        libraryRoots.addAll(getRootsToTrack(library,OrderRootType.CLASSES));
        libraryRoots.addAll(getRootsToTrack(library,OrderRootType.SOURCES));
        libraryRoots.addAll(getRootsToTrack(library,OrderRootType.JAVADOC));
      }
    }
  }
  myRootsToWatch.addAll(LocalFileSystem.getInstance().addRootsToWatch(libraryRoots,false));
}
