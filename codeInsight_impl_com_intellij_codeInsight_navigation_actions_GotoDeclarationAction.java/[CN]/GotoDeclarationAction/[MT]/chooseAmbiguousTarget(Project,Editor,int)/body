{
  final Collection<PsiElement> candidates=suggestCandidates(project,editor,offset);
  if (candidates.size() == 1) {
    Navigatable navigatable=EditSourceUtil.getDescriptor(candidates.iterator().next());
    if (navigatable != null && navigatable.canNavigate()) {
      navigatable.navigate(true);
    }
  }
 else   if (candidates.size() > 1) {
    PsiElement[] elements=candidates.toArray(new PsiElement[candidates.size()]);
    String title=CodeInsightBundle.message("declaration.navigation.title",elements[0] instanceof PsiNamedElement ? ((PsiNamedElement)elements[0]).getName() : elements[0].getText());
    ListPopup listPopup=NavigationUtil.getPsiElementPopup(elements,title,project);
    LogicalPosition caretPosition=editor.getCaretModel().getLogicalPosition();
    Point caretLocation=editor.logicalPositionToXY(caretPosition);
    int x=caretLocation.x;
    int y=caretLocation.y;
    Point location=editor.getContentComponent().getLocationOnScreen();
    x+=location.x;
    y+=location.y;
    listPopup.show(x,y);
  }
}
