{
  super.visitErrorElement(element);
  for (  final HighlightErrorFilter errorFilter : errorFilters) {
    if (!errorFilter.shouldHighlightErrorElement(element))     return;
  }
  CommonProblemDescriptor descriptor;
  final TextRange textRange=element.getTextRange();
  if (textRange.getLength() > 0) {
    descriptor=manager.createProblemDescriptor(element,GlobalInspectionUtil.createInspectionMessage(element.getErrorDescription()),ProblemHighlightType.ERROR,null);
  }
 else {
    PsiElement parent=element;
    while (true) {
      parent=parent.getParent();
      if (parent == null)       break;
      TextRange r=parent.getTextRange();
      if (r == null)       return;
      if (r.getLength() > 0) {
        break;
      }
    }
    if (parent == null)     return;
    int offset=element.getTextRange().getStartOffset() - parent.getTextRange().getStartOffset();
    descriptor=manager.createProblemDescriptor(parent,new TextRange(offset,offset + 1),GlobalInspectionUtil.createInspectionMessage(element.getErrorDescription()),ProblemHighlightType.ERROR);
  }
  problemDescriptionsProcessor.addProblemElement(GlobalInspectionUtil.retrieveRefElement(element,globalContext),descriptor);
}
