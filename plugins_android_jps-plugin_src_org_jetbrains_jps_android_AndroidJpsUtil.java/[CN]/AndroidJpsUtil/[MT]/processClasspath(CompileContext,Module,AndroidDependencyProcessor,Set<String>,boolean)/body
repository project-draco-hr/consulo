{
  if (!visitedModules.add(module.getName())) {
    return;
  }
  final ProjectPaths paths=context.getProjectPaths();
  if (processor.isToProcess(AndroidDependencyType.EXTERNAL_LIBRARY)) {
    for (    ClasspathItem item : module.getClasspath(ClasspathKind.PRODUCTION_RUNTIME,exportedLibrariesOnly)) {
      if (item instanceof Library && !(item instanceof Sdk)) {
        for (        Object filePathObj : ((Library)item).getClasspath()) {
          final String filePath=(String)filePathObj;
          final File file=new File(filePath);
          if (file.exists()) {
            processClassFilesAndJarsRecursively(filePath,new Processor<File>(){
              @Override public boolean process(              File file){
                processor.processExternalLibrary(file);
                return true;
              }
            }
);
          }
        }
      }
    }
  }
  for (  ClasspathItem item : module.getClasspath(ClasspathKind.PRODUCTION_RUNTIME,false)) {
    if (item instanceof Module) {
      final Module depModule=(Module)item;
      final AndroidFacet depFacet=getFacet(depModule);
      final boolean depLibrary=depFacet != null && depFacet.isLibrary();
      final File depClassDir=paths.getModuleOutputDir(depModule,false);
      if (depLibrary) {
        if (processor.isToProcess(AndroidDependencyType.ANDROID_LIBRARY_PACKAGE)) {
          final File intArtifactsDir=getDirectoryForIntermediateArtifacts(context,depModule);
          final File packagedClassesJar=new File(intArtifactsDir,AndroidCommonUtils.CLASSES_JAR_FILE_NAME);
          if (packagedClassesJar.isFile()) {
            processor.processAndroidLibraryPackage(packagedClassesJar);
          }
        }
        if (processor.isToProcess(AndroidDependencyType.ANDROID_LIBRARY_OUTPUT_DIRECTORY)) {
          if (depClassDir != null && depClassDir.isDirectory()) {
            processor.processAndroidLibraryOutputDirectory(depClassDir);
          }
        }
      }
 else       if (processor.isToProcess(AndroidDependencyType.JAVA_MODULE_OUTPUT_DIR) && depFacet == null && depClassDir != null && depClassDir.isDirectory()) {
        processor.processJavaModuleOutputDirectory(depClassDir);
      }
      processClasspath(context,depModule,processor,visitedModules,!depLibrary || exportedLibrariesOnly);
    }
  }
}
