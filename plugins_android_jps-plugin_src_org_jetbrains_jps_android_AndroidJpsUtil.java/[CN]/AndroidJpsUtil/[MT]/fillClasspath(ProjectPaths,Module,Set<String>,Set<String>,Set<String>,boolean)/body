{
  if (!visitedModules.add(module.getName())) {
    return;
  }
  if (libraries != null) {
    for (    ClasspathItem item : module.getClasspath(ClasspathKind.PRODUCTION_COMPILE,exportedLibrariesOnly)) {
      if (item instanceof Library && !(item instanceof Sdk)) {
        for (        String filePath : item.getClasspathRoots(ClasspathKind.PRODUCTION_COMPILE)) {
          final File file=new File(filePath);
          if (file.exists()) {
            processClassFilesAndJarsRecursively(filePath,new Processor<File>(){
              @Override public boolean process(              File file){
                libraries.add(file.getPath());
                return true;
              }
            }
);
          }
        }
      }
    }
  }
  for (  ClasspathItem item : module.getClasspath(ClasspathKind.PRODUCTION_COMPILE,false)) {
    if (item instanceof Module) {
      final Module depModule=(Module)item;
      final AndroidFacet depFacet=getFacet(depModule);
      final boolean depLibrary=depFacet != null && depFacet.isLibrary();
      final File depClassDir=paths.getModuleOutputDir(depModule,false);
      if (outputDirs != null && depClassDir != null) {
        if (depLibrary) {
          final File packagedClassesJar=new File(depClassDir,AndroidCommonUtils.CLASSES_JAR_FILE_NAME);
          if (packagedClassesJar.isDirectory()) {
            outputDirs.add(packagedClassesJar.getPath());
          }
        }
 else         if (depFacet == null && depClassDir.isDirectory()) {
          outputDirs.add(depClassDir.getPath());
        }
      }
      fillClasspath(paths,depModule,outputDirs,libraries,visitedModules,!depLibrary || exportedLibrariesOnly);
    }
  }
}
