{
  if (!visitedModules.add(module.getName())) {
    return;
  }
  if (processor.isToProcess(AndroidDependencyType.EXTERNAL_LIBRARY)) {
    for (    JpsDependencyElement item : JpsJavaExtensionService.getInstance().getDependencies(module,JpsJavaClasspathKind.PRODUCTION_RUNTIME,exportedLibrariesOnly)) {
      if (item instanceof JpsLibraryDependency) {
        final JpsLibrary library=((JpsLibraryDependency)item).getLibrary();
        if (library != null) {
          for (          JpsLibraryRoot root : library.getRoots(JpsOrderRootType.COMPILED)) {
            final File file=JpsPathUtil.urlToFile(root.getUrl());
            if (file.exists()) {
              processClassFilesAndJarsRecursively(file,new Processor<File>(){
                @Override public boolean process(                File file){
                  processor.processExternalLibrary(file);
                  return true;
                }
              }
);
            }
          }
        }
      }
    }
  }
  for (  JpsDependencyElement item : JpsJavaExtensionService.getInstance().getDependencies(module,JpsJavaClasspathKind.PRODUCTION_RUNTIME,false)) {
    if (item instanceof JpsModuleDependency) {
      final JpsModule depModule=((JpsModuleDependency)item).getModule();
      if (depModule == null)       continue;
      final JpsAndroidModuleExtension depExtension=getExtension(depModule);
      final boolean depLibrary=depExtension != null && depExtension.isLibrary();
      final File depClassDir=new ModuleBuildTarget(depModule,JavaModuleBuildTargetType.PRODUCTION).getOutputDir();
      if (depLibrary) {
        if (processor.isToProcess(AndroidDependencyType.ANDROID_LIBRARY_PACKAGE)) {
          final File intArtifactsDir=getDirectoryForIntermediateArtifacts(paths,depModule);
          final File packagedClassesJar=new File(intArtifactsDir,AndroidCommonUtils.CLASSES_JAR_FILE_NAME);
          processor.processAndroidLibraryPackage(packagedClassesJar);
        }
        if (processor.isToProcess(AndroidDependencyType.ANDROID_LIBRARY_OUTPUT_DIRECTORY)) {
          if (depClassDir != null) {
            processor.processAndroidLibraryOutputDirectory(depClassDir);
          }
        }
      }
 else       if (processor.isToProcess(AndroidDependencyType.JAVA_MODULE_OUTPUT_DIR) && depExtension == null && depClassDir != null) {
        processor.processJavaModuleOutputDirectory(depClassDir);
      }
      if (recursive) {
        processClasspath(paths,depModule,processor,visitedModules,!depLibrary || exportedLibrariesOnly,recursive);
      }
    }
  }
}
