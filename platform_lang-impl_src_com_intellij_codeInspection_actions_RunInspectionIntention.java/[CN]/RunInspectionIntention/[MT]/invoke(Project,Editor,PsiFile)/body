{
  final InspectionManagerEx managerEx=(InspectionManagerEx)InspectionManager.getInstance(project);
  final Module module=ModuleUtil.findModuleForPsiElement(file);
  AnalysisScope analysisScope=new AnalysisScope(file);
  final VirtualFile virtualFile=file.getVirtualFile();
  if (file.isPhysical() || virtualFile == null || !virtualFile.isInLocalFileSystem()) {
    analysisScope=new AnalysisScope(project);
  }
  final BaseAnalysisActionDialog dlg=new BaseAnalysisActionDialog(AnalysisScopeBundle.message("specify.analysis.scope",InspectionsBundle.message("inspection.action.title")),AnalysisScopeBundle.message("analysis.scope.title",InspectionsBundle.message("inspection.action.noun")),project,analysisScope,module != null ? module.getName() : null,true,AnalysisUIOptions.getInstance(project),file);
  dlg.show();
  if (!dlg.isOK())   return;
  final AnalysisUIOptions uiOptions=AnalysisUIOptions.getInstance(project);
  analysisScope=dlg.getScope(uiOptions,analysisScope,project,module);
  final InspectionProfileEntry baseTool=InspectionProjectProfileManager.getInstance(project).getInspectionProfile().getInspectionTool(myShortName,file);
  rerunInspection(baseTool.getDisplayName(),Collections.singletonList(baseTool),managerEx,analysisScope,file);
}
