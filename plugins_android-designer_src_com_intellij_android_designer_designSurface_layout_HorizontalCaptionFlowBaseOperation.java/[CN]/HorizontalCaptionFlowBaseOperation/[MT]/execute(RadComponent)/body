{
  List<RadComponent> rows=myTableComponent.getChildren();
  RadComponent[][] components=myTableComponent.getGridComponents(false);
  for (int i=0; i < components.length; i++) {
    RadViewComponent container=(RadViewComponent)rows.get(i);
    if (RadTableRowLayout.is(container)) {
      RadComponent[] rowComponents=components[i];
      List<RadViewComponent> editComponents=new ArrayList<RadViewComponent>();
      for (      RadComponent component : myComponents) {
        int column=((RadCaptionTableColumn)component).getColumnIndex();
        RadViewComponent editComponent=(RadViewComponent)rowComponents[column];
        if (editComponent != null) {
          editComponents.add(editComponent);
        }
      }
      if (editComponents.isEmpty()) {
        continue;
      }
      RadViewComponent insertBeforeColumn=null;
      if (insertBefore != null) {
        int column=((RadCaptionTableColumn)insertBefore).getColumnIndex();
        for (int j=column; j < rowComponents.length; j++) {
          insertBeforeColumn=(RadViewComponent)rowComponents[j];
          if (insertBeforeColumn != null) {
            if (!editComponents.isEmpty() && insertBeforeColumn == editComponents.get(0)) {
              editComponents.remove(0);
              insertBeforeColumn=null;
              continue;
            }
            break;
          }
        }
      }
      if (insertBefore == null || insertBeforeColumn != null) {
        for (        RadViewComponent component : editComponents) {
          if (component != insertBeforeColumn) {
            ModelParser.moveComponent(container,component,insertBeforeColumn);
          }
        }
      }
    }
  }
  for (  RadComponent component : myComponents) {
    component.removeFromParent();
    myContainer.add(component,insertBefore);
  }
  List<RadComponent> columns=myContainer.getChildren();
  int size=columns.size();
  for (int i=0; i < size; i++) {
    int index=((RadCaptionTableColumn)columns.get(i)).getColumnIndex();
    for (int j=0; j < components.length; j++) {
      if (RadTableRowLayout.is(rows.get(j))) {
        RadComponent cellComponent=components[j][index];
        if (cellComponent != null) {
          RadTableLayoutComponent.setCellIndex(cellComponent,i);
        }
      }
    }
  }
}
