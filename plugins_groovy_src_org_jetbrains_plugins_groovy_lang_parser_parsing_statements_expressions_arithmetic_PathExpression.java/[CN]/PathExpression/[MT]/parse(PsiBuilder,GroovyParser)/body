{
  PsiBuilder.Marker marker=builder.mark();
  if (PrimaryExpression.parse(builder,parser)) {
    if (isPathElementStart(builder)) {
      PsiBuilder.Marker newMarker=marker.precede();
      marker.drop();
      if (mLCURLY.equals(builder.getTokenType())) {
        PsiBuilder.Marker argsMarker=builder.mark();
        argsMarker.done(ARGUMENTS);
      }
      pathElementParse(builder,newMarker,parser);
    }
 else {
      marker.drop();
    }
    return true;
  }
 else {
    marker.drop();
    return false;
  }
}
