{
  PsiBuilder.Marker marker=builder.mark();
  final GroovyElementType qualifierType=PrimaryExpression.parse(builder,parser);
  if (qualifierType != WRONGWAY) {
    Result result=OK;
    if (isPathElementStart(builder)) {
      PsiBuilder.Marker newMarker=marker.precede();
      marker.drop();
      final boolean lCurly=mLCURLY.equals(builder.getTokenType());
      if (lCurly) {
        PsiBuilder.Marker argsMarker=builder.mark();
        argsMarker.done(ARGUMENTS);
      }
      result=pathElementParse(builder,newMarker,parser,qualifierType,lCurly ? CALL_WITH_CLOSURE : OK);
    }
 else {
      marker.drop();
    }
    return result;
  }
 else {
    marker.drop();
    return WRONG_WAY;
  }
}
