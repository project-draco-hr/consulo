{
  myTargetDirectory=myClass.getContainingFile().getContainingDirectory();
  myMemberInfos=MemberInfo.extractClassMembers(myClass,new MemberInfo.Filter(){
    public boolean includeMember(    PsiMember element){
      if (element instanceof PsiMethod) {
        return !((PsiMethod)element).isConstructor() && element.hasModifierProperty(PsiModifier.PUBLIC) && !element.hasModifierProperty(PsiModifier.STATIC);
      }
 else       if (element instanceof PsiField) {
        return element.hasModifierProperty(PsiModifier.FINAL) && element.hasModifierProperty(PsiModifier.STATIC) && element.hasModifierProperty(PsiModifier.PUBLIC);
      }
 else       if (element instanceof PsiClass && ((PsiClass)element).isInterface()) {
        return true;
      }
      return false;
    }
  }
);
  super.init();
  mySourceClassField.setText(myClass.getQualifiedName());
  PsiFile file=myClass.getContainingFile();
  if (file instanceof PsiJavaFile) {
    myTfPackageName.setText(((PsiJavaFile)file).getPackageName());
  }
  updateDialogForExtractSuperclass();
}
