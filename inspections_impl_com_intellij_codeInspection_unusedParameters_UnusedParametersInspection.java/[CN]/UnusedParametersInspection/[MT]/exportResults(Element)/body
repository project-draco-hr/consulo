{
  final UnusedParametersFilter filter=getFilter();
  getRefManager().iterate(new RefVisitor(){
    public void visitElement(    RefEntity refEntity){
      if (refEntity instanceof RefElement && filter.accepts((RefElement)refEntity)) {
        ArrayList<RefParameter> unusedParameters=UnusedParametersFilter.getUnusedParameters((RefMethod)refEntity);
        for (        RefParameter unusedParameter : unusedParameters) {
          Element element=XMLExportUtl.createElement(refEntity,parentNode,-1);
          @NonNls Element problemClassElement=new Element(InspectionsBundle.message("inspection.export.results.problem.element.tag"));
          problemClassElement.addContent(InspectionsBundle.message("inspection.unused.parameter.export.results"));
          final HighlightSeverity severity=getCurrentSeverity(unusedParameter);
          final String attributeKey=getTextAttributeKey(unusedParameter,severity,ProblemHighlightType.LIKE_UNUSED_SYMBOL);
          problemClassElement.setAttribute("severity",severity.myName);
          problemClassElement.setAttribute("attribute_key",attributeKey);
          element.addContent(problemClassElement);
          Element descriptionElement=new Element(InspectionsBundle.message("inspection.export.results.description.tag"));
          descriptionElement.addContent(InspectionsBundle.message("inspection.unused.parameter.export.results.description",unusedParameter.getName()));
          element.addContent(descriptionElement);
        }
      }
    }
  }
);
}
