{
  int lastPosition=-1;
  while (true) {
    if (lexer.getTokenType() == XML_ENTITY_REF_TOKEN) {
      TreeUtil.addChildren(tag,parseEntityRef(lexer));
      continue;
    }
    if (lexer.getTokenType() != XML_NAME) {
      return;
    }
    if (lastPosition != -1) {
      if (lastPosition == lexer.getTokenStart()) {
        TreeUtil.addChildren(tag,Factory.createErrorElement("Whitespace expected"));
        lastPosition=-1;
      }
    }
    CompositeElement attribute=Factory.createCompositeElement(XML_ATTRIBUTE);
    TreeUtil.addChildren(tag,attribute);
    addToken(attribute,lexer);
    if (lexer.getTokenType() != XML_EQ) {
      TreeUtil.addChildren(attribute,Factory.createErrorElement("'=' expected"));
      continue;
    }
    addToken(attribute,lexer);
    CompositeElement attributeValue=Factory.createCompositeElement(XML_ATTRIBUTE_VALUE);
    TreeUtil.addChildren(attribute,attributeValue);
    if (lexer.getTokenType() != XML_ATTRIBUTE_VALUE_START_DELIMITER) {
      return;
    }
    addToken(attributeValue,lexer);
    if (lexer.getTokenType() == XML_ATTRIBUTE_VALUE_TOKEN) {
      addToken(attributeValue,lexer);
      if (lexer.getTokenType() == XML_ATTRIBUTE_VALUE_END_DELIMITER) {
        lastPosition=lexer.getTokenEnd();
        addToken(attributeValue,lexer);
      }
 else {
        lastPosition=-1;
      }
    }
 else {
      lastPosition=-1;
    }
  }
}
