{
  ArrayList<UsageInfo> postponedCollisions=new ArrayList<UsageInfo>();
  for (  final UsageInfo usage : usages) {
    if (!(usage instanceof ResolvableCollisionUsageInfo)) {
      rename(usage,newName);
    }
 else {
      if (usage instanceof CollidingClassImportUsageInfo) {
        ((CollidingClassImportUsageInfo)usage).getImportStatement().delete();
      }
 else {
        postponedCollisions.add(usage);
      }
    }
  }
  aClass.setName(newName);
  for (int i=0; i < postponedCollisions.size(); i++) {
    ClassHidesImportedClassUsageInfo collision=(ClassHidesImportedClassUsageInfo)postponedCollisions.get(i);
    collision.resolveCollision();
  }
  listener.elementRenamed(aClass);
}
