{
  for (int i=0; i < usages.length; i++) {
    UsageInfo usage=usages[i];
    if (!usage.getElement().isValid()) {
      continue;
    }
    if (!(usage instanceof LocalHidesFieldUsageInfo)) {
      final PsiReference ref;
      if (!(usage instanceof MoveRenameUsageInfo)) {
        ref=usage.getElement().getReference();
      }
 else {
        ref=((MoveRenameUsageInfo)usage).reference;
      }
      if (ref != null) {
        PsiElement newElem=ref.handleElementRename(newName);
        if (variable instanceof PsiField) {
          fixPossibleNameCollisionsForFieldRenaming((PsiField)variable,newName,newElem);
        }
      }
    }
 else {
      PsiJavaCodeReferenceElement collidingRef=(PsiJavaCodeReferenceElement)usage.getElement();
      PsiElement resolved=collidingRef.resolve();
      if (resolved instanceof PsiField) {
        qualifyField((PsiField)resolved,collidingRef,newName);
      }
 else {
      }
    }
  }
  variable.setName(newName);
  listener.elementRenamed(variable);
}
