{
  try {
    if (element instanceof PsiDirectory) {
      doRenameDirectory((PsiDirectory)element,newName,usages,listener);
    }
 else     if (element instanceof PsiClass) {
      doRenameClass((PsiClass)element,newName,usages,listener);
    }
 else     if (element instanceof PsiMethod) {
      doRenameMethod((PsiMethod)element,newName,usages,listener);
    }
 else     if (element instanceof PsiVariable) {
      doRenameVariable((PsiVariable)element,newName,usages,listener);
    }
 else     if (element instanceof XmlTag) {
      doRenameXmlTag((XmlTag)element,newName,listener);
    }
 else     if (element instanceof XmlAttribute) {
      doRenameXmlAttribute((XmlAttribute)element,newName,listener);
    }
 else     if (element instanceof XmlAttributeValue) {
      doRenameXmlAttributeValue((XmlAttributeValue)element,newName,usages,listener);
    }
 else     if (element instanceof PsiPointcutDef) {
      doRenamePointcutDef((PsiPointcutDef)element,newName,usages,listener);
    }
 else     if (element instanceof PsiPackage) {
      final PsiPackage psiPackage=(PsiPackage)element;
      psiPackage.handleQualifiedNameChange(getQualifiedNameAfterRename(psiPackage.getQualifiedName(),newName));
    }
 else     if (element instanceof PsiNamedElement) {
      doRenameGenericNamedElement((PsiNamedElement)element,newName,usages,listener);
    }
 else {
      LOG.error("Unknown element type");
    }
  }
 catch (  final IncorrectOperationException e) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      LOG.error(e);
      return;
    }
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        RefactoringMessageUtil.showErrorMessage("Rename",e.getMessage(),HelpID.getRenameHelpID(element),project);
      }
    }
);
  }
}
