{
  if (!(element instanceof PsiLocalVariable) && !(element instanceof PsiParameter))   return;
  PsiClass containingClass=PsiTreeUtil.getParentOfType(ref,PsiClass.class);
  if (containingClass == null)   return;
  PsiElement scopeElement;
  if (element instanceof PsiLocalVariable) {
    scopeElement=RefactoringUtil.getVariableScope((PsiLocalVariable)element);
  }
 else {
    scopeElement=((PsiParameter)element).getDeclarationScope();
  }
  LOG.assertTrue(scopeElement != null);
  PsiField field=findFieldByName(containingClass,newName,allRenames);
  if (field == null)   return;
  PsiSearchHelper helper=ref.getManager().getSearchHelper();
  PsiReference[] collidingRefs=helper.findReferences(field,new LocalSearchScope(scopeElement),false);
  for (int i=0; i < collidingRefs.length; i++) {
    PsiElement collidingRef=collidingRefs[i].getElement();
    if (collidingRef instanceof PsiReferenceExpression && ((PsiReferenceExpression)collidingRef).getQualifierExpression() == null) {
      results.add(new LocalHidesFieldUsageInfo(collidingRef,element));
    }
  }
}
