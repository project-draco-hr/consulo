{
  boolean flattenPackages=true;
  TestProxy classNode;
  if (flattenPackages) {
    classNode=getPackageClassNodeFor(result);
  }
 else {
    classNode=getClassNodeFor(result);
  }
  if (result.getResult() == MessageHelper.TEST_STARTED) {
    TestProxy proxy=new TestProxy();
    proxy.setParent(classNode);
    proxy.setResultMessage(result);
    animator.setCurrentTestCase(proxy);
    treeBuilder.addItem(classNode,proxy);
    treeBuilder.repaintWithParents(proxy);
    count++;
    if (count > total)     total=count;
    if (TestNGConsoleProperties.TRACK_RUNNING_TEST.value(consoleProperties)) {
      selectTest(proxy);
    }
  }
 else {
    model.addTestResult(result);
    animator.setCurrentTestCase(null);
    Object[] children=treeBuilder.getTreeStructure().getChildElements(classNode);
    for (    Object child : children) {
      TestProxy proxy=(TestProxy)child;
      if (result.equals(proxy.getResultMessage())) {
        proxy.setResultMessage(result);
        proxy.setOutput(output);
        proxy.setExceptionMark(exceptionMark);
        treeBuilder.repaintWithParents(proxy);
      }
    }
  }
  if (result.getResult() == MessageHelper.PASSED_TEST) {
  }
 else   if (result.getResult() == MessageHelper.FAILED_TEST) {
    failed++;
    progress.setColor(ColorProgressBar.RED);
  }
  progress.setFraction((double)count / total);
  updateLabel(statusLabel);
}
