{
  boolean flattenPackages=true;
  TestProxy classNode;
  if (flattenPackages) {
    classNode=getPackageClassNodeFor(result);
  }
 else {
    classNode=getClassNodeFor(result);
  }
  if (!started.containsKey(result) || !Comparing.strEqual(started.get(result).getResultMessage().getTestDescription(),result.getTestDescription())) {
    TestProxy proxy=new TestProxy();
    proxy.setParent(classNode);
    proxy.setResultMessage(result);
    started.put(result,proxy);
    animator.setCurrentTestCase(proxy);
    treeBuilder.addItem(classNode,proxy);
    treeBuilder.repaintWithParents(proxy);
    count++;
    if (count > total)     total=count;
    if (TestNGConsoleProperties.TRACK_RUNNING_TEST.value(consoleProperties)) {
      selectTest(proxy);
    }
  }
  final TestProxy testCase=started.get(result);
  if (testCase != null) {
    testCase.setResultMessage(result);
    testCase.setOutput(output);
    testCase.setExceptionMark(exceptionMark);
  }
  if (result.getResult() != MessageHelper.TEST_STARTED) {
    model.addTestResult(result);
  }
  if (result.getResult() == MessageHelper.PASSED_TEST) {
  }
 else   if (result.getResult() == MessageHelper.FAILED_TEST) {
    failed.add(started.get(result));
    progress.setColor(ColorProgressBar.RED);
  }
  progress.setFraction((double)count / total);
  updateLabel(statusLabel);
}
