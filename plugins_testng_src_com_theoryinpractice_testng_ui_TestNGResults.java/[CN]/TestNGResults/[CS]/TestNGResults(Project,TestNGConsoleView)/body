{
  this.project=project;
  model=new TestNGResultsTableModel();
  this.consoleProperties=console.getConsoleProperties();
  resultsTable=new TableView(model);
  rootNode=new TreeRootNode();
  final TestTreeStructure structure=new TestTreeStructure(project,rootNode);
  tree.attachToModel(project,structure.getRootElement(),console.getConsoleProperties());
  treeBuilder=new TestTreeBuilder(tree,structure);
  toolbarPanel.setLayout(new BorderLayout());
  toolbarPanel.add(new ToolbarPanel(console.getConsoleProperties(),this));
  animator=new Animator(treeBuilder);
  tree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      TreePath path=e.getPath();
      if (path == null)       return;
      TestProxy proxy=TestTreeView.getObject(path);
      if (proxy == null)       return;
      if (ScrollToTestSourceAction.isScrollEnabled(TestNGResults.this)) {
        OpenSourceUtil.openSourcesFrom(tree,false);
      }
      if (proxy == structure.getRootElement()) {
        console.reset();
      }
 else {
        List<TestNGConsoleView.Chunk> output=proxy.getOutput();
        console.setView(output);
      }
    }
  }
);
  progress.setColor(ColorProgressBar.GREEN);
  GuiUtils.replaceJSplitPaneWithIDEASplitter(splitPane);
}
