{
  super(component,console.createConsoleActions(),console.getProperties(),runnerSettings,configurationSettings,TESTNG_SPLITTER_PROPERTY,0.5f);
  myConsole=console;
  this.project=configuration.getProject();
  model=new TestNGResultsTableModel();
  resultsTable=new TableView(model);
  resultsTable.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        final Object result=resultsTable.getSelectedObject();
        if (result instanceof TestResultMessage) {
          final String testClass=((TestResultMessage)result).getTestClass();
          final PsiClass psiClass=ClassUtil.findPsiClass(PsiManager.getInstance(project),testClass);
          if (psiClass != null) {
            final String method=((TestResultMessage)result).getMethod();
            if (method != null) {
              final PsiMethod[] psiMethods=psiClass.findMethodsByName(method,false);
              for (              PsiMethod psiMethod : psiMethods) {
                psiMethod.navigate(true);
                return;
              }
            }
            psiClass.navigate(true);
          }
        }
      }
    }
  }
);
  rootNode=new TreeRootNode();
}
