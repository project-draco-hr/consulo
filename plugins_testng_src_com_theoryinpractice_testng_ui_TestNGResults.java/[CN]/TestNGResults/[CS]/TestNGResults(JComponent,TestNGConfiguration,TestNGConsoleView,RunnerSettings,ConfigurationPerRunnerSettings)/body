{
  super(component,console.getConsole().createConsoleActions(),console.getProperties(),runnerSettings,configurationSettings,TESTNG_SPLITTER_PROPERTY,0.5f);
  this.project=configuration.getProject();
  model=new TestNGResultsTableModel(project);
  resultsTable=new TableView(model);
  new DoubleClickListener(){
    @Override protected boolean onDoubleClick(    MouseEvent e){
      final Object result=resultsTable.getSelectedObject();
      if (result instanceof TestResultMessage) {
        final String testClass=((TestResultMessage)result).getTestClass();
        final PsiClass psiClass=ClassUtil.findPsiClass(PsiManager.getInstance(project),testClass);
        if (psiClass != null) {
          final String method=((TestResultMessage)result).getMethod();
          if (method != null) {
            final PsiMethod[] psiMethods=psiClass.findMethodsByName(method,false);
            if (psiMethods.length > 0) {
              psiMethods[0].navigate(true);
            }
          }
          psiClass.navigate(true);
          return true;
        }
      }
      return false;
    }
  }
.installOn(resultsTable);
  rootNode=new TreeRootNode();
  console.getUnboundOutput().addChild(rootNode);
}
