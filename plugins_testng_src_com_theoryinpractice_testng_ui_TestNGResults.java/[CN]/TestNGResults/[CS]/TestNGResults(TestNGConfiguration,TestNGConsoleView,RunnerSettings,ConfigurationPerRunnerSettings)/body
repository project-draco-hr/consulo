{
  myConfiguration=configuration;
  this.project=myConfiguration.getProject();
  myLogFilesManager=new LogFilesManager(project,this);
  model=new TestNGResultsTableModel();
  consoleProperties=console.getConsoleProperties();
  resultsTable=new TableView(model);
  resultsTable.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        final Object result=resultsTable.getSelectedObject();
        if (result instanceof TestResultMessage) {
          final String testClass=((TestResultMessage)result).getTestClass();
          final PsiClass psiClass=ClassUtil.findPsiClass(PsiManager.getInstance(project),testClass);
          if (psiClass != null) {
            psiClass.navigate(true);
          }
        }
      }
    }
  }
);
  rootNode=new TreeRootNode();
  final TestTreeStructure structure=new TestTreeStructure(project,rootNode);
  tree.attachToModel(this);
  treeBuilder=new TestTreeBuilder(tree,structure);
  toolbarPanel.setLayout(new BorderLayout());
  toolbar=new TestNGToolbarPanel(console.getConsoleProperties(),this,runnerSettings,configurationSettings);
  toolbarPanel.add(toolbar);
  animator=new Animator(treeBuilder);
  openSourceListener=new OpenSourceSelectionListener(structure,console);
  tree.getSelectionModel().addTreeSelectionListener(openSourceListener);
  progress.setColor(ColorProgressBar.GREEN);
  splitterProportions.externalizeFromDimensionService(TESTNG_SPLITTER_PROPERTY);
  final Container container=splitPane.getParent();
  GuiUtils.replaceJSplitPaneWithIDEASplitter(splitPane);
  final Splitter splitter=(Splitter)container.getComponent(0);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      splitterProportions.restoreSplitterProportions(container);
      splitter.addPropertyChangeListener(new PropertyChangeListener(){
        public void propertyChange(        final PropertyChangeEvent evt){
          if (evt.getPropertyName().equals(Splitter.PROP_PROPORTION)) {
            splitterProportions.saveSplitterProportions(container);
            splitterProportions.externalizeToDimensionService(TESTNG_SPLITTER_PROPERTY);
          }
        }
      }
);
    }
  }
);
  Disposer.register(this,new Disposable(){
    public void dispose(){
      splitter.dispose();
    }
  }
);
}
