{
  for (  MethodSignature signature : signatures) {
    boolean subsignature=true;
    for (    MethodSignature methodSignature : signatures) {
      if (!signature.equals(methodSignature)) {
        if (!MethodSignatureUtil.isSubsignature(signature,methodSignature)) {
          subsignature=false;
          break;
        }
      }
    }
    if (subsignature)     return null;
  }
  if (signatures.isEmpty())   return "No target method found";
  return signatures.size() == 1 ? null : "Multiple non-overriding abstract methods found";
}
