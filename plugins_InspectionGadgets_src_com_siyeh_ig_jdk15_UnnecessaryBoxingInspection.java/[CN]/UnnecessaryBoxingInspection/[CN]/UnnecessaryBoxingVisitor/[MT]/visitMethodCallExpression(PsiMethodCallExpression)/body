{
  final PsiManager manager=expression.getManager();
  final LanguageLevel languageLevel=manager.getEffectiveLanguageLevel();
  if (languageLevel.compareTo(LanguageLevel.JDK_1_5) < 0) {
    return;
  }
  super.visitMethodCallExpression(expression);
  final PsiExpressionList argumentList=expression.getArgumentList();
  final PsiExpression[] expressions=argumentList.getExpressions();
  if (expressions.length != 1) {
    return;
  }
  if (!(expressions[0].getType() instanceof PsiPrimitiveType)) {
    return;
  }
  final PsiReferenceExpression methodExpression=expression.getMethodExpression();
  @NonNls final String referenceName=methodExpression.getReferenceName();
  if (referenceName == null || !referenceName.equals("valueOf")) {
    return;
  }
  final PsiExpression qualifierExpression=methodExpression.getQualifierExpression();
  if (!(qualifierExpression instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)qualifierExpression;
  final String canonicalText=referenceExpression.getCanonicalText();
  if (s_boxingArgs.get(canonicalText) == null) {
    return;
  }
  if (!canBeUnboxed(expression)) {
    return;
  }
  registerError(expression);
}
