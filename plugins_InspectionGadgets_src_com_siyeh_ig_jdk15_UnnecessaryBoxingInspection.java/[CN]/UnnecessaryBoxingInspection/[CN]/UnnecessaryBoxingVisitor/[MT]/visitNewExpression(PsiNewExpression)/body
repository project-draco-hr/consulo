{
  if (!PsiUtil.isLanguageLevel5OrHigher(expression)) {
    return;
  }
  super.visitNewExpression(expression);
  final PsiType constructorType=expression.getType();
  if (constructorType == null) {
    return;
  }
  final String constructorTypeText=constructorType.getCanonicalText();
  if (!s_boxingArgs.containsKey(constructorTypeText)) {
    return;
  }
  final PsiMethod constructor=expression.resolveConstructor();
  if (constructor == null) {
    return;
  }
  final PsiParameterList parameterList=constructor.getParameterList();
  if (parameterList.getParametersCount() != 1) {
    return;
  }
  final PsiParameter[] parameters=parameterList.getParameters();
  final PsiParameter arg=parameters[0];
  final PsiType argumentType=arg.getType();
  final String argumentTypeText=argumentType.getCanonicalText();
  final String boxableConstructorType=s_boxingArgs.get(constructorTypeText);
  if (!boxableConstructorType.equals(argumentTypeText)) {
    return;
  }
  if (!canBeUnboxed(expression)) {
    return;
  }
  registerError(expression);
}
