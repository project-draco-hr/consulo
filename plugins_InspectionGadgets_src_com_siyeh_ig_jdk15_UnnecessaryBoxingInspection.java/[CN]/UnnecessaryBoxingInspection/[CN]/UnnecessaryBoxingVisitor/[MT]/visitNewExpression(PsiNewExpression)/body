{
  if (!PsiUtil.isLanguageLevel5OrHigher(expression)) {
    return;
  }
  super.visitNewExpression(expression);
  final PsiType constructorType=expression.getType();
  if (constructorType == null) {
    return;
  }
  final String constructorTypeText=constructorType.getCanonicalText();
  if (!boxedPrimitiveMap.containsKey(constructorTypeText)) {
    return;
  }
  final PsiMethod constructor=expression.resolveConstructor();
  if (constructor == null) {
    return;
  }
  final PsiParameterList parameterList=constructor.getParameterList();
  if (parameterList.getParametersCount() != 1) {
    return;
  }
  final PsiParameter[] parameters=parameterList.getParameters();
  final PsiParameter parameter=parameters[0];
  final PsiType parameterType=parameter.getType();
  final String parameterTypeText=parameterType.getCanonicalText();
  final String boxableConstructorType=boxedPrimitiveMap.get(constructorTypeText);
  if (!boxableConstructorType.equals(parameterTypeText)) {
    return;
  }
  if (!canBeUnboxed(expression)) {
    return;
  }
  registerError(expression);
}
