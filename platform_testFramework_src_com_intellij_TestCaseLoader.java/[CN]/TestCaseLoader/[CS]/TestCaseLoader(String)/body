{
  InputStream excludedStream=getClass().getClassLoader().getResourceAsStream(classFilterName);
  String preconfiguredGroup=System.getProperty(TARGET_TEST_GROUP);
  if (preconfiguredGroup == null || "".equals(preconfiguredGroup.trim())) {
    myTestGroupName="";
  }
 else {
    myTestGroupName=preconfiguredGroup.trim();
  }
  if (excludedStream != null) {
    try {
      myTestClassesFilter=TestClassesFilter.createOn(new InputStreamReader(excludedStream));
    }
  finally {
      try {
        excludedStream.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
 else {
    String patterns=System.getProperty(TARGET_TEST_PATTERNS);
    if (patterns != null) {
      myTestClassesFilter=new TestClassesFilter(StringUtil.split(patterns,";"));
    }
 else {
      myTestClassesFilter=TestClassesFilter.EMPTY_CLASSES_FILTER;
    }
  }
  if (Comparing.equal(System.getProperty(FAST_TESTS_ONLY_FLAG),"true")) {
    BufferedReader reader=new BufferedReader(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("tests/slowTests.txt")));
    try {
      String testName;
      while ((testName=reader.readLine()) != null) {
        blockedTests.add(testName);
      }
    }
 catch (    IOException e) {
    }
 finally {
      try {
        reader.close();
      }
 catch (      IOException e) {
      }
    }
  }
  System.out.println("Using test group: [" + (myTestGroupName == null ? "" : myTestGroupName) + "]");
}
