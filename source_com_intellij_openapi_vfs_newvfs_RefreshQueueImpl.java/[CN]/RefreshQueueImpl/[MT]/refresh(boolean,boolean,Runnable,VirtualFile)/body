{
  final List<RefreshResult> resultsQueue=async ? myAsyncRefreshResultsQueue : new ArrayList<RefreshResult>();
  if (async) {
    startIndicator();
  }
  final Runnable task=new Runnable(){
    public void run(){
      ((LocalFileSystemImpl)LocalFileSystem.getInstance()).markSuspicousFilesDirty(files);
      try {
        for (        final VirtualFile file : files) {
          final NewVirtualFile nvf=(NewVirtualFile)file;
          if (!async && !recursive) {
            nvf.markDirty();
          }
          final RefreshRequest request=new RefreshRequest(file,recursive);
          request.scan();
          final List<VFileEvent> events=request.getEvents();
          if (events.size() > 0) {
synchronized (resultsQueue) {
              resultsQueue.add(new RefreshResult(events,null));
            }
          }
        }
synchronized (resultsQueue) {
          resultsQueue.add(new RefreshResult(Collections.<VFileEvent>emptyList(),finishRunnable));
        }
      }
  finally {
        if (async) {
          stopInidcator();
        }
      }
    }
  }
;
  if (async) {
    myQueue.submit(task);
  }
 else {
    task.run();
    flushResultsQueue(resultsQueue,false);
  }
}
