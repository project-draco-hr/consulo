{
  final RepositoryAttachDialog dialog=new RepositoryAttachDialog(project,false,initialFilter);
  dialog.setTitle("Attach Classes from Repository...");
  dialog.show();
  if (dialog.getExitCode() != DialogWrapper.OK_EXIT_CODE) {
    return null;
  }
  final String copyTo=dialog.getDirectoryPath();
  final String coord=dialog.getCoordinateText();
  final boolean attachJavaDoc=dialog.getAttachJavaDoc();
  final boolean attachSources=dialog.getAttachSources();
  final SmartList<MavenExtraArtifactType> extraTypes=new SmartList<MavenExtraArtifactType>();
  if (attachSources)   extraTypes.add(MavenExtraArtifactType.SOURCES);
  if (attachJavaDoc)   extraTypes.add(MavenExtraArtifactType.DOCS);
  final Ref<NewLibraryConfiguration> result=Ref.create(null);
  resolveLibrary(project,coord,extraTypes,dialog.getRepositories(),new Processor<List<MavenArtifact>>(){
    public boolean process(    final List<MavenArtifact> artifacts){
      final boolean nothingRetrieved=artifacts.isEmpty();
      if (!nothingRetrieved) {
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            final List<OrderRoot> roots=createRoots(artifacts,copyTo);
            result.set(new NewLibraryConfiguration(coord,RepositoryLibraryType.getInstance(),new RepositoryLibraryProperties(coord)){
              @Override public void addRoots(              @NotNull LibraryEditor editor){
                editor.addRoots(roots);
              }
            }
);
          }
        }
);
      }
      final StringBuilder sb=new StringBuilder();
      final String title;
      if (nothingRetrieved) {
        title="No files were downloaded";
        sb.append("for ").append(coord);
      }
 else {
        title="The following files were downloaded:";
        sb.append("<ol>");
        for (        MavenArtifact each : artifacts) {
          sb.append("<li>");
          sb.append(each.getFile().getName());
          final String scope=each.getScope();
          if (scope != null) {
            sb.append(" (");
            sb.append(scope);
            sb.append(")");
          }
          sb.append("</li>");
        }
        sb.append("</ol>");
      }
      if (nothingRetrieved && ModalityState.current().dominates(ModalityState.NON_MODAL)) {
        Messages.showErrorDialog(project,sb.toString(),title);
      }
 else {
        Notifications.Bus.notify(new Notification("Repository",title,sb.toString(),nothingRetrieved ? NotificationType.WARNING : NotificationType.INFORMATION),project);
      }
      return true;
    }
  }
);
  return result.get();
}
