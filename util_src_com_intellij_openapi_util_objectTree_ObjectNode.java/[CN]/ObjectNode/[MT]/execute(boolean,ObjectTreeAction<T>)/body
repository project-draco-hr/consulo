{
  ObjectTree.executeActionWithRecursiveGuard(this,new ObjectTreeAction<ObjectNode<T>>(){
    public void execute(    ObjectNode<T> each){
      action.beforeTreeExecution(myObject);
      ObjectNode<T>[] childrenArray=getChildrenArray();
      for (int i=childrenArray.length - 1; i >= 0; i--) {
        childrenArray[i].execute(disposeTree,action);
      }
      if (disposeTree) {
synchronized (myTree.treeLock) {
          myChildren=null;
        }
      }
      try {
        action.execute(myObject);
      }
 catch (      Throwable e) {
        LOG.error(e);
      }
      if (disposeTree) {
        myTree.putNode(myObject,null);
synchronized (myTree.treeLock) {
          if (myParent != null) {
            myParent.removeChild(ObjectNode.this);
          }
 else {
            myTree.removeRootObject(myObject);
          }
        }
      }
    }
    public void beforeTreeExecution(    ObjectNode<T> parent){
    }
  }
,myTree.getNodesInExecution());
  return true;
}
