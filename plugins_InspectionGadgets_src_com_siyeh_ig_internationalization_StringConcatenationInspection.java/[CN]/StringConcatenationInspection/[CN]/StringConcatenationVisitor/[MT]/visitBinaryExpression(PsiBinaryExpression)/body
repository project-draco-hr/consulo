{
  super.visitBinaryExpression(expression);
  final PsiJavaToken sign=expression.getOperationSign();
  if (sign == null) {
    return;
  }
  if (sign.getTokenType() != JavaTokenType.PLUS) {
    return;
  }
  final PsiExpression lhs=expression.getLOperand();
  if (lhs == null) {
    return;
  }
  final PsiType lhsType=lhs.getType();
  if (TypeUtils.isJavaLangString(lhsType)) {
    registerError(sign);
    return;
  }
  final PsiExpression rhs=expression.getROperand();
  if (rhs == null) {
    return;
  }
  final PsiType rhsType=rhs.getType();
  if (TypeUtils.isJavaLangString(rhsType)) {
    registerError(sign);
    return;
  }
}
