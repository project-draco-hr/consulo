{
  PsiFile file=context.file;
  int offset=context.getStartOffset();
  PsiElement lastElement=file.findElementAt(offset - 1);
  if (lastElement == null)   return LookupData.EMPTY;
  final Ref<Boolean> isRelevantLanguage=new Ref<Boolean>();
  final Ref<Boolean> isAnt=new Ref<Boolean>();
  String text=lastElement.getText();
  final int len=context.getStartOffset() - lastElement.getTextRange().getStartOffset();
  if (len < text.length()) {
    text=text.substring(0,len);
  }
  if (text.equals("<") && isLanguageRelevant(lastElement,file,isRelevantLanguage,isAnt)) {
    return super.getLookupData(context,dummyIdentifier);
  }
 else   if (text.equals(" ") && isLanguageRelevant(lastElement,file,isRelevantLanguage,isAnt)) {
    return super.getLookupData(context,dummyIdentifier);
  }
 else   if (text.endsWith("${") && isLanguageRelevant(lastElement,file,isRelevantLanguage,isAnt) && isAnt.get().booleanValue()) {
    return super.getLookupData(context,dummyIdentifier);
  }
 else   if (text.endsWith("@{") && isLanguageRelevant(lastElement,file,isRelevantLanguage,isAnt) && isAnt.get().booleanValue()) {
    return super.getLookupData(context,dummyIdentifier);
  }
 else   if (text.endsWith("</") && isLanguageRelevant(lastElement,file,isRelevantLanguage,isAnt)) {
    return super.getLookupData(context,dummyIdentifier);
  }
  return LookupData.EMPTY;
}
