{
  enableEvents(ComponentEvent.COMPONENT_EVENT_MASK);
  final Component strut=Box.createHorizontalStrut(3);
  myTitlePanel.add(strut,BorderLayout.WEST);
  myTitleLabel.setForeground(Color.white);
  myTitlePanel.add(myTitleLabel,BorderLayout.CENTER);
  final JPanel buttonPanel=new JPanel(new GridBagLayout());
  buttonPanel.setOpaque(false);
  buttonPanel.setBorder(BorderFactory.createEmptyBorder(0,0,0,2));
  buttonPanel.add(myToggleFloatingModeButton,new GridBagConstraints(0,0,1,1,1,0,GridBagConstraints.EAST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  buttonPanel.add(myFloatingDockSeparator,new GridBagConstraints(1,0,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  buttonPanel.add(myToggleDockModeButton,new GridBagConstraints(2,0,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  buttonPanel.add(myDockAutoHideSeparator,new GridBagConstraints(3,0,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  buttonPanel.add(myToggleAutoHideModeButton,new GridBagConstraints(4,0,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  buttonPanel.add(myAutoHideHideSeparator,new GridBagConstraints(5,0,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  buttonPanel.add(myHideButton,new GridBagConstraints(6,0,1,1,0,0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));
  myTitlePanel.add(buttonPanel,BorderLayout.EAST);
  final JPanel contentPane=new JPanel(new BorderLayout());
  contentPane.setBorder(myToolWindowBorder);
  contentPane.add(myTitlePanel,BorderLayout.NORTH);
  JPanel innerPanel=new JPanel(new BorderLayout());
  innerPanel.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  JComponent toolWindowComponent=myToolWindow.getComponent();
  innerPanel.add(toolWindowComponent,BorderLayout.CENTER);
  contentPane.add(innerPanel,BorderLayout.CENTER);
  add(contentPane,BorderLayout.CENTER);
  myToggleFloatingModeButton.addActionListener(myToggleFloatingModeAction);
  myToggleDockModeButton.addActionListener(myToggleDockModeAction);
  myToggleAutoHideModeButton.addActionListener(myToggleAutoHideModeAction);
  myHideButton.addActionListener(myHideAction);
  myTitleLabel.addMouseListener(new PopupHandler(){
    public void invokePopup(    final Component comp,    final int x,    final int y){
      final ActionGroup group=createPopupGroup();
      final ActionPopupMenu popupMenu=ActionManager.getInstance().createActionPopupMenu(ActionPlaces.UNKNOWN,group);
      popupMenu.getComponent().show(comp,x,y);
    }
  }
);
  myTitleLabel.addMouseListener(new MouseAdapter(){
    public void mousePressed(    final MouseEvent e){
      if (!e.isPopupTrigger()) {
        fireActivated();
      }
    }
  }
);
  registerKeyboardAction(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      ToolWindowManager.getInstance(myProject).activateEditorComponent();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
}
