{
  final VirtualFile virtualFile=copyFileToProject(getTestName(true) + ".xml");
  myFixture.configureFromExistingVirtualFile(virtualFile);
  final List<HighlightInfo> infos=myFixture.doHighlighting();
  final List<IntentionAction> actions=new ArrayList<IntentionAction>();
  for (  HighlightInfo info : infos) {
    final List<Pair<HighlightInfo.IntentionActionDescriptor,TextRange>> ranges=info.quickFixActionRanges;
    if (ranges != null) {
      for (      Pair<HighlightInfo.IntentionActionDescriptor,TextRange> pair : ranges) {
        final HighlightInfo.IntentionActionDescriptor descriptor=pair.getFirst();
        if (descriptor.getAction() instanceof ResourceReferenceConverter.MyCreateValueResourceQuickFix) {
          final List<IntentionAction> options=descriptor.getOptions(myFixture.getFile(),myFixture.getEditor());
          if (options != null) {
            for (            IntentionAction option : options) {
              if (option instanceof CleanupInspectionIntention) {
                actions.add(option);
              }
            }
          }
        }
      }
    }
  }
  assertEquals(1,actions.size());
  new WriteCommandAction.Simple(getProject()){
    @Override protected void run() throws Throwable {
      actions.get(0).invoke(getProject(),myFixture.getEditor(),myFixture.getFile());
    }
  }
.execute();
  myFixture.checkResultByFile("res/values/drawables.xml",testFolder + '/' + getTestName(true)+ "_drawable_after.xml",true);
}
