{
  final Set<ExternalModule> modules=ContainerUtilRt.newHashSet();
  final Map<ExternalModule,Collection<ExternalContentRoot>> contentRoots=ContainerUtilRt.newHashMap();
  final Set<ExternalLibrary> libraries=ContainerUtilRt.newHashSet();
  final Set<Jar> jars=ContainerUtilRt.newHashSet();
  final Map<ExternalModule,Collection<ExternalDependency>> dependencies=ContainerUtilRt.newHashMap();
  ExternalEntityVisitor visitor=new ExternalEntityVisitor(){
    @Override public void visit(    @NotNull ExternalProject project){
    }
    @Override public void visit(    @NotNull ExternalModule module){
      modules.add(module);
    }
    @Override public void visit(    @NotNull ExternalLibrary library){
      libraries.add(library);
    }
    @Override public void visit(    @NotNull Jar jar){
      jars.add(jar);
    }
    @Override public void visit(    @NotNull ExternalModuleDependency dependency){
      addDependency(dependency);
    }
    @Override public void visit(    @NotNull ExternalLibraryDependency dependency){
      addDependency(dependency);
    }
    @Override public void visit(    @NotNull ExternalCompositeLibraryDependency dependency){
    }
    @Override public void visit(    @NotNull ExternalContentRoot contentRoot){
      Collection<ExternalContentRoot> roots=contentRoots.get(contentRoot.getOwnerModule());
      if (roots == null) {
        contentRoots.put(contentRoot.getOwnerModule(),roots=ContainerUtilRt.<ExternalContentRoot>newHashSet());
      }
      roots.add(contentRoot);
    }
    private void addDependency(    @NotNull ExternalDependency dependency){
      Collection<ExternalDependency> d=dependencies.get(dependency.getOwnerModule());
      if (d == null) {
        dependencies.put(dependency.getOwnerModule(),d=ContainerUtilRt.<ExternalDependency>newHashSet());
      }
      d.add(dependency);
    }
  }
;
  for (  ExternalEntity entity : entities) {
    entity.invite(visitor);
  }
  myModuleManager.importModules(modules,project,false,synchronous);
  for (  Map.Entry<ExternalModule,Collection<ExternalContentRoot>> entry : contentRoots.entrySet()) {
    Module module=myProjectStructureHelper.findIdeModule(entry.getKey(),project);
    if (module != null) {
      myContentRootManager.importContentRoots(entry.getValue(),module,synchronous);
    }
  }
  myLibraryManager.importLibraries(libraries,project,synchronous);
  myJarManager.importJars(jars,project,synchronous);
  for (  Map.Entry<ExternalModule,Collection<ExternalDependency>> entry : dependencies.entrySet()) {
    Module module=myProjectStructureHelper.findIdeModule(entry.getKey(),project);
    if (module != null) {
      myDependencyManager.importDependencies(entry.getValue(),module,synchronous);
    }
  }
}
