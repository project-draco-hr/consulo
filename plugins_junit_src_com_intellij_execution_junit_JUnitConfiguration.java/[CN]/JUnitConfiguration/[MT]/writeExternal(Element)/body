{
  super.writeExternal(element);
  RunConfigurationExtension.writeSettings(this,element);
  writeModule(element);
  DefaultJDOMExternalizer.writeExternal(this,element);
  final Data persistentData=getPersistentData();
  DefaultJDOMExternalizer.writeExternal(persistentData,element);
  EnvironmentVariablesComponent.writeExternal(element,persistentData.getEnvs());
  final String dirName=persistentData.getDirName();
  if (!dirName.isEmpty()) {
    final Element dirNameElement=new Element("dir");
    dirNameElement.setAttribute("value",FileUtil.toSystemIndependentName(dirName));
    element.addContent(dirNameElement);
  }
  final Element patternsElement=new Element(PATTERNS_EL_NAME);
  for (  String o : persistentData.getPatterns()) {
    final Element patternElement=new Element(PATTERN_EL_NAME);
    patternElement.setAttribute(TEST_CLASS_ATT_NAME,o);
    patternsElement.addContent(patternElement);
  }
  final String forkMode=getForkMode();
  if (!forkMode.equals("none")) {
    final Element forkModeElement=new Element("fork_mode");
    forkModeElement.setAttribute("value",forkMode);
    element.addContent(forkModeElement);
  }
  element.addContent(patternsElement);
  PathMacroManager.getInstance(getProject()).collapsePathsRecursively(element);
}
