{
  if (isQuickFixOnReadOnlyFile(project,descriptor))   return;
  final PsiExpression expression=(PsiExpression)descriptor.getPsiElement();
  final PsiType expectedType=ExpectedTypeUtils.findExpectedType(expression);
  final String newExpression;
  if (expectedType.equals(PsiType.BOOLEAN)) {
    newExpression="Boolean.valueOf(" + expression.getText() + ')';
  }
 else   if (s_boxingClasses.containsValue(expectedType.getPresentableText())) {
    final String classToConstruct=expectedType.getPresentableText();
    newExpression="new " + classToConstruct + '('+ expression.getText()+ ')';
  }
 else {
    final String classToConstruct=s_boxingClasses.get(expression.getType().getPresentableText());
    newExpression="new " + classToConstruct + '('+ expression.getText()+ ')';
  }
  replaceExpression(project,expression,newExpression);
}
