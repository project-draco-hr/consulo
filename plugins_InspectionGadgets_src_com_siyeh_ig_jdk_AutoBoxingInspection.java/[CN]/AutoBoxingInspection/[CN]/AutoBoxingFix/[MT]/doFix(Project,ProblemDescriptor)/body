{
  final PsiExpression expression=(PsiExpression)descriptor.getPsiElement();
  final PsiType expectedType=ExpectedTypeUtils.findExpectedType(expression,false);
  if (expectedType == null) {
    return;
  }
  final String expectedTypeText=expectedType.getCanonicalText();
  final String classToConstruct;
  if (s_boxingClasses.containsValue(expectedTypeText)) {
    classToConstruct=expectedTypeText;
  }
 else {
    final PsiType type=expression.getType();
    if (type == null) {
      return;
    }
    final String expressionTypeText=type.getCanonicalText();
    classToConstruct=s_boxingClasses.get(expressionTypeText);
  }
  if (shortcutReplace(expression,classToConstruct)) {
    return;
  }
  @NonNls final String expressionText=expression.getText();
  @NonNls final String newExpression;
  if ("true".equals(expressionText)) {
    newExpression="java.lang.Boolean.TRUE";
  }
 else   if ("false".equals(expressionText)) {
    newExpression="java.lang.Boolean.FALSE";
  }
 else {
    newExpression=classToConstruct + ".valueOf(" + expressionText+ ')';
  }
  replaceExpression(expression,newExpression);
}
