{
  final PsiElement parent=expression.getParent();
  if (!(parent instanceof PsiExpressionList)) {
    return false;
  }
  final PsiExpressionList expressionList=(PsiExpressionList)parent;
  final PsiElement grandParent=expressionList.getParent();
  if (!(grandParent instanceof PsiMethodCallExpression)) {
    return false;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
  final PsiReferenceExpression methodExpression=methodCallExpression.getMethodExpression();
  @NonNls final String methodName=methodExpression.getReferenceName();
  if (!"put".equals(methodName) && !"set".equals(methodName) && !"add".equals(methodName)) {
    return false;
  }
  final PsiExpression qualifier=methodExpression.getQualifierExpression();
  return TypeUtils.expressionHasTypeOrSubtype(qualifier,CommonClassNames.JAVA_UTIL_COLLECTION,CommonClassNames.JAVA_UTIL_MAP) != null;
}
