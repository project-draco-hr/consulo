{
  Widget widget=UIUtil.loadingPanel();
  final RootPanel rootPanel=RootPanel.get();
  rootPanel.add(widget);
  final String consuloSessionId=Cookies.getCookie("ConsuloSessionId");
  if (consuloSessionId == null) {
    return;
  }
  String url="ws://" + Window.Location.getHost() + "/ws";
  final Websocket websocket=new Websocket(url);
  final WebSocketProxy proxy=new WebSocketProxy(websocket);
  proxy.setSessionId(consuloSessionId);
  websocket.addListener(new WebsocketListener(){
    @Override public void onClose(){
    }
    @Override public void onMessage(    String msg){
      AutoBean<UIServerEvent> bean=AutoBeanCodex.decode(ourEventFactory,UIServerEvent.class,msg);
      final UIServerEvent event=bean.as();
switch (event.getType()) {
case createRoot:
        rootPanel.clear();
      final List<UIComponent> components=event.getComponents();
    if (components != null) {
      for (      UIComponent component : components) {
        rootPanel.add(UIConverter.create(proxy,event.getSessionId(),component));
      }
    }
  break;
}
}
@Override public void onOpen(){
proxy.send(UIClientEventType.sessionOpen,new WebSocketProxy.Consumer<UIClientEvent>(){
@Override public void consume(UIClientEvent value){
}
}
);
}
}
);
websocket.open();
}
