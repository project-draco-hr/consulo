{
  if (!disabled.isEmpty() || !disabledDependants.isEmpty()) {
    String message="";
    if (disabled.size() == 1) {
      message+="Updated plugin '" + disabled.iterator().next().getName() + "' is disabled.";
    }
 else     if (!disabled.isEmpty()) {
      message+="Updated plugins " + StringUtil.join(disabled,new Function<IdeaPluginDescriptor,String>(){
        @Override public String fun(        IdeaPluginDescriptor pluginDescriptor){
          return pluginDescriptor.getName();
        }
      }
,", ") + " are disabled.";
    }
    if (!disabledDependants.isEmpty()) {
      message+="<br>";
      message+="Updated plugin" + (list.size() > 1 ? "s depend " : " depends ") + "on disabled";
      if (disabledDependants.size() == 1) {
        message+=" plugin '" + disabledDependants.iterator().next().getName() + "'.";
      }
 else {
        message+=" plugins " + StringUtil.join(disabledDependants,new Function<IdeaPluginDescriptor,String>(){
          @Override public String fun(          IdeaPluginDescriptor pluginDescriptor){
            return pluginDescriptor.getName();
          }
        }
,", ") + ".";
      }
    }
    message+=" Disabled plugins and plugins which depends on disabled plugins won't be activated after restart.";
    int result;
    if (!disabled.isEmpty() && !disabledDependants.isEmpty()) {
      result=Messages.showYesNoCancelDialog(XmlStringUtil.wrapInHtml(message),CommonBundle.getWarningTitle(),"Enable all","Enable updated plugin" + (disabled.size() > 1 ? "s" : ""),CommonBundle.getCancelButtonText(),Messages.getQuestionIcon());
      if (result == Messages.CANCEL)       return false;
    }
 else {
      message+="<br>Would you like to enable ";
      if (!disabled.isEmpty()) {
        message+="updated plugin" + (disabled.size() > 1 ? "s" : "");
      }
 else {
        message+="plugin dependenc" + (disabledDependants.size() > 1 ? "ies" : "y");
      }
      message+="?</body></html>";
      result=Messages.showYesNoDialog(message,CommonBundle.getWarningTitle(),Messages.getQuestionIcon());
      if (result == Messages.NO)       return false;
    }
    if (result == Messages.YES) {
      disabled.addAll(disabledDependants);
      pluginsModel.enableRows(disabled.toArray(new IdeaPluginDescriptor[disabled.size()]),true);
    }
 else     if (result == Messages.NO && !disabled.isEmpty()) {
      pluginsModel.enableRows(disabled.toArray(new IdeaPluginDescriptor[disabled.size()]),true);
    }
    return true;
  }
  return false;
}
