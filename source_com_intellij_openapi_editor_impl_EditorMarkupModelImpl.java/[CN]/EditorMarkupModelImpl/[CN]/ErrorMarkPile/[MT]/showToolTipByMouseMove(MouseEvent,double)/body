{
  if (!inside(e,width)) {
    return false;
  }
  List<HighlightInfo> infos=new SmartList<HighlightInfo>();
  for (int i=0; i < markers.size(); i++) {
    RangeHighlighter marker=markers.get(i);
    if (marker.getErrorStripeTooltip() instanceof HighlightInfo) {
      infos.add((HighlightInfo)marker.getErrorStripeTooltip());
    }
  }
  if (infos.size() == 0) {
    RangeHighlighter marker=markers.get(0);
    showTooltip(e,marker.getErrorStripeTooltip());
  }
 else {
    final int oldSize=infos.size();
    int moreErrors=0;
    int moreWarnings=0;
    if (oldSize > MAX_TOOLTIP_LINES) {
      for (int i=MAX_TOOLTIP_LINES; i < infos.size(); i++) {
        HighlightInfo info=infos.get(i);
        final HighlightSeverity severity=info.getSeverity();
        if (severity == HighlightSeverity.ERROR) {
          moreErrors++;
        }
 else {
          moreWarnings++;
        }
      }
      infos=infos.subList(0,MAX_TOOLTIP_LINES);
    }
    final HighlightInfoComposite composite=new HighlightInfoComposite(infos);
    if (moreErrors + moreWarnings != 0) {
      String line="&nbsp;&nbsp;&nbsp;...";
      if (moreErrors != 0) {
        line+=" and " + moreErrors + " more error"+ (moreErrors == 1 ? "" : "s");
      }
      if (moreWarnings != 0) {
        line+=" and " + moreWarnings + " more warning"+ (moreWarnings == 1 ? "" : "s");
      }
      line+="...";
      composite.addToolTipLine(line);
    }
    showTooltip(e,composite);
  }
  return true;
}
