{
  int y=yStart;
  for (int i=0; i < markers.size(); i++) {
    RangeHighlighter mark=markers.get(i);
    int yEndPosition;
    if (i == markers.size() - 1) {
      yEndPosition=yEnd;
    }
 else {
      int visEndLine=myEditor.logicalToVisualPosition(new LogicalPosition(mark.getDocument().getLineNumber(mark.getEndOffset()),0)).line;
      yEndPosition=visibleLineToYPosition(visEndLine,myScrollBarHeight);
    }
    final int height=yEndPosition - y;
    final Color color=mark.getErrorStripeMarkColor();
    g.setColor(color);
    int x=1;
    if (mark.isThinErrorStripeMark()) {
      width/=2;
      x+=width / 2;
    }
    g.fillRect(x,y,width - 1,height);
    Color brighter=color.brighter();
    Color darker=color.darker();
    g.setColor(brighter);
    g.drawLine(x,y,x,y + height);
    if (i == 0) {
      g.drawLine(x + 1,y,x + width - 1,y);
    }
    g.setColor(darker);
    if (i == markers.size() - 1) {
      g.drawLine(x + 1,y + height,x + width,y + height);
    }
    g.drawLine(x + width,y,x + width,y + height - 1);
    y=yEndPosition;
  }
}
