{
  EditorImpl.MyScrollBar scrollBar=myEditor.getVerticalScrollBar();
  int scrollBarHeight=scrollBar.getSize().height;
  int buttonHeight=scrollBar.getDecScrollButtonHeight();
  int lineCount=getDocument().getLineCount() + myEditor.getSettings().getAdditionalLinesCount();
  if (lineCount == 0) {
    return;
  }
  if (e.getY() < buttonHeight && myErrorStripeRenderer != null) {
    String tooltipMessage=myErrorStripeRenderer.getTooltipMessage();
    if (tooltipMessage != null) {
      TooltipController tooltipController=HintManager.getInstance().getTooltipController();
      tooltipController.showTooltipByMouseMove(myEditor,e,tooltipMessage,myEditor.getVerticalScrollbarOrientation() == EditorEx.VERTICAL_SCROLLBAR_RIGHT,ERROR_STRIPE_TOOLTIP_GROUP);
    }
    return;
  }
  ArrayList<RangeHighlighter> sortedHighlighters=getSortedHighlighters();
  RangeHighlighter highlighterForTooltip=null;
  ArrayList<RangeHighlighter> highlightersForTooltip=null;
  for (int i=sortedHighlighters.size() - 1; i >= 0; i--) {
    RangeHighlighter marker=sortedHighlighters.get(i);
    if (checkLineMarker(marker,scrollBarHeight,e.getX(),e.getY())) {
      if (highlighterForTooltip == null) {
        highlighterForTooltip=marker;
      }
 else {
        if (highlightersForTooltip == null) {
          highlightersForTooltip=new ArrayList<RangeHighlighter>();
          highlightersForTooltip.add(highlighterForTooltip);
        }
        highlightersForTooltip.add(marker);
      }
    }
  }
  if (highlightersForTooltip != null) {
    highlighterForTooltip=highlightersForTooltip.get(0);
    final ArrayList<HighlightInfo> infos=new ArrayList<HighlightInfo>();
    for (int i=0; i < highlightersForTooltip.size(); i++) {
      RangeHighlighter marker=highlightersForTooltip.get(i);
      if (marker.getErrorStripeTooltip() instanceof HighlightInfo) {
        infos.add((HighlightInfo)marker.getErrorStripeTooltip());
      }
    }
    if (highlightersForTooltip.size() == infos.size()) {
      final HighlightInfoComposite composite=new HighlightInfoComposite(infos);
      setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
      showTooltip(e,composite);
      return;
    }
  }
  if (highlighterForTooltip != null) {
    setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    showTooltip(e,highlighterForTooltip.getErrorStripeTooltip());
    return;
  }
  cancelMyToolTips();
  if (getCursor().equals(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR))) {
    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
  }
}
