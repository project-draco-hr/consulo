{
  if (myCachedSortedHighlighters == null) {
    myCachedSortedHighlighters=new ArrayList<RangeHighlighter>();
    RangeHighlighter[] highlighters=getAllHighlighters();
    for (int i=0; i < highlighters.length; i++) {
      if (highlighters[i].getErrorStripeMarkColor() != null) {
        myCachedSortedHighlighters.add(highlighters[i]);
      }
    }
    final MarkupModel docMarkup=getDocument().getMarkupModel(myEditor.myProject);
    if (docMarkup != null) {
      highlighters=docMarkup.getAllHighlighters();
      for (int i=0; i < highlighters.length; i++) {
        if (highlighters[i].getErrorStripeMarkColor() != null) {
          myCachedSortedHighlighters.add(highlighters[i]);
        }
      }
    }
    Collections.sort(myCachedSortedHighlighters,new Comparator(){
      public int compare(      Object o1,      Object o2){
        RangeHighlighter h1=(RangeHighlighter)o1;
        RangeHighlighter h2=(RangeHighlighter)o2;
        if (h1.getLayer() != h2.getLayer()) {
          return h2.getLayer() - h1.getLayer();
        }
        return h1.getStartOffset() - h2.getEndOffset();
      }
    }
);
  }
  return myCachedSortedHighlighters;
}
