{
  if (myInternalJdk == null) {
    String jreHome;
    myToolsPath=null;
    if (SystemInfo.isLinux || SystemInfo.isWindows) {
      jreHome=sdkHome + File.separator + "jre";
      if (!new File(jreHome).exists()) {
        jreHome=System.getProperty("java.home");
        final File tools=new File(new File(jreHome,"lib"),"tools.jar");
        if (tools.exists()) {
          myToolsPath=tools.getPath();
          jreHome=jreHome + File.separator + "jre";
        }
 else {
          myToolsPath=new File(jreHome).getParent() + File.separator + "lib"+ File.separator+ "tools.jar";
        }
      }
    }
 else {
      jreHome=System.getProperty("java.home");
    }
    myInternalJdk=JavaSdk.getInstance().createJdk("",jreHome);
    if (myInternalJdk.getVersionString() != null) {
      myToolsPath=myToolsPath != null ? myToolsPath : myInternalJdk.getToolsPath();
      myRtPath=jreHome + File.separator + "lib"+ File.separator+ "rt.jar";
      final VirtualFile tools=LocalFileSystem.getInstance().findFileByPath(myToolsPath.replace(File.separatorChar,'/'));
      if (tools != null) {
        final SdkModificator sdkModificator=myInternalJdk.getSdkModificator();
        sdkModificator.addRoot(tools,ProjectRootType.CLASS);
        sdkModificator.commitChanges();
      }
    }
 else {
      myToolsPath=null;
      myRtPath=null;
    }
  }
  return myInternalJdk;
}
