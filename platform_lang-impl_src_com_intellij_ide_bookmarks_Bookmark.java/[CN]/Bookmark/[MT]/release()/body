{
  int line=getLine();
  if (line < 0) {
    return;
  }
  final Document document=getDocument();
  if (document == null)   return;
  MarkupModelEx markup=(MarkupModelEx)DocumentMarkupModel.forDocument(document,myProject,true);
  final Document markupDocument=markup.getDocument();
  if (markupDocument.getLineCount() <= line)   return;
  final int startOffset=markupDocument.getLineStartOffset(line);
  final int endOffset=markupDocument.getLineEndOffset(line);
  final RangeHighlighterEx[] found=new RangeHighlighterEx[1];
  markup.processRangeHighlightersOverlappingWith(startOffset,endOffset,new Processor<RangeHighlighterEx>(){
    @Override public boolean process(    RangeHighlighterEx highlighter){
      GutterIconRenderer renderer=highlighter.getGutterIconRenderer();
      if (renderer instanceof MyGutterIconRenderer && ((MyGutterIconRenderer)renderer).myBookmark == Bookmark.this) {
        found[0]=highlighter;
        return false;
      }
      return true;
    }
  }
);
  if (found[0] != null)   found[0].dispose();
}
