{
  String presentableUrl=myFile.getPresentableUrl();
  if (myFile.isDirectory() || myHighlighter == null)   return presentableUrl;
  PsiDocumentManager.getInstance(myProject).commitAllDocuments();
  final PsiFile psiFile=PsiManager.getInstance(myProject).findFile(myFile);
  if (psiFile == null)   return presentableUrl;
  StructureViewBuilder builder=LanguageStructureViewBuilder.INSTANCE.getStructureViewBuilder(psiFile);
  if (builder instanceof TreeBasedStructureViewBuilder) {
    StructureViewModel model=((TreeBasedStructureViewBuilder)builder).createStructureViewModel();
    Object element=model.getCurrentEditorElement();
    if (element instanceof NavigationItem) {
      ItemPresentation presentation=((NavigationItem)element).getPresentation();
      if (presentation != null) {
        presentableUrl=((NavigationItem)element).getName() + " " + presentation.getLocationString();
      }
    }
  }
  return IdeBundle.message("bookmark.file.X.line.Y",presentableUrl,(myHighlighter.getDocument().getLineNumber(myHighlighter.getStartOffset()) + 1));
}
