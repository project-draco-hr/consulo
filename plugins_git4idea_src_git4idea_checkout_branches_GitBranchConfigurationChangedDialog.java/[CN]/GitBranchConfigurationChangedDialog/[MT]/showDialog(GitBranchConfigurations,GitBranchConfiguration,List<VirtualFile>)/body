{
  final Set<String> names=settings.getConfigurationNames();
  final Ref<String> name=new Ref<String>();
  final Ref<Integer> code=new Ref<Integer>();
  final List<BranchDescriptor> list=prepareBranchDescriptors(settings,config,roots);
  UIUtil.invokeAndWaitIfNeeded(new Runnable(){
    @Override public void run(){
      GitBranchConfigurationChangedDialog d=new GitBranchConfigurationChangedDialog(settings.getProject(),config,list,names);
      d.show();
      code.set(d.getExitCode());
      name.set(d.myNameTextField.getText());
    }
  }
);
  if (code.get() == CANCEL_EXIT_CODE) {
    return null;
  }
  GitBranchConfiguration updateConfig;
synchronized (settings.getStateLock()) {
    if (code.get() == OK_EXIT_CODE) {
      updateConfig=config;
      updateConfig.setName(name.get());
    }
 else     if (code.get() == NEW_CONFIGURATION) {
      updateConfig=settings.createConfiguration(name.get());
    }
 else {
      throw new RuntimeException("Unexpected exit code: " + code.get());
    }
    updateConfig.clearReferences();
    for (    BranchDescriptor d : list) {
      if (d.root != null) {
        updateConfig.setBranch(d.root.getPath(),d.actualRef);
      }
    }
  }
  return updateConfig;
}
