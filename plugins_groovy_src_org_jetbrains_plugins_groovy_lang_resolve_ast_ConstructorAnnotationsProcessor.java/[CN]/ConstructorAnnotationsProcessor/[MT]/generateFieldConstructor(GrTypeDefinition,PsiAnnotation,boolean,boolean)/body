{
  final GrLightMethodBuilder fieldsConstructor=new GrLightMethodBuilder(typeDefinition.getManager(),typeDefinition.getName());
  fieldsConstructor.setConstructor(true);
  fieldsConstructor.setNavigationElement(typeDefinition);
  fieldsConstructor.setContainingClass(typeDefinition);
  Set<String> excludes=new HashSet<String>();
  if (tupleConstructor != null) {
    for (    String s : PsiUtil.getAnnoAttributeValue(tupleConstructor,"excludes","").split(",")) {
      final String name=s.trim();
      if (StringUtil.isNotEmpty(name)) {
        excludes.add(name);
      }
    }
  }
  if (tupleConstructor != null) {
    final boolean superFields=PsiUtil.getAnnoAttributeValue(tupleConstructor,"includeSuperFields",false);
    final boolean superProperties=PsiUtil.getAnnoAttributeValue(tupleConstructor,"includeSuperProperties",false);
    if (superFields || superProperties) {
      addParametersForSuper(typeDefinition,fieldsConstructor,superFields,superProperties,new HashSet<PsiClass>(),excludes);
    }
  }
  addParameters(typeDefinition,fieldsConstructor,tupleConstructor == null || PsiUtil.getAnnoAttributeValue(tupleConstructor,"includeProperties",true),tupleConstructor != null ? PsiUtil.getAnnoAttributeValue(tupleConstructor,"includeFields",false) : !canonical,!immutable,excludes);
  if (immutable) {
    fieldsConstructor.setOriginInfo("created by @Immutable");
  }
 else   if (tupleConstructor != null) {
    fieldsConstructor.setOriginInfo("created by @TupleConstructor");
  }
 else {
    fieldsConstructor.setOriginInfo("created by @Canonical");
  }
  return fieldsConstructor;
}
