{
  if (file.isDirectory()) {
    throw new VcsException("Cannot annotate a directory");
  }
  final FileAnnotation[] annotation=new FileAnnotation[1];
  final Exception[] exception=new Exception[1];
  Runnable command=new Runnable(){
    public void run(){
      final ProgressIndicator progress=ProgressManager.getInstance().getProgressIndicator();
      try {
        GitCommand command=new GitCommand(myProject,mySettings,GitUtil.getVcsRoot(myProject,file));
        FilePath filePath=VcsUtil.getFilePath(file.getPath());
        if (progress != null) {
          progress.setText(GitBundle.message("computing.annotation",file.getName()));
        }
        final GitFileAnnotation result=command.annotate(filePath);
        if (progress != null) {
          progress.setText(GitBundle.message("getting.history",file.getName()));
        }
        final List<VcsFileRevision> revisions=GitHistoryUtils.history(myProject,filePath);
        result.addLogEntries(revisions);
        annotation[0]=result;
      }
 catch (      Exception e) {
        exception[0]=e;
      }
    }
  }
;
  if (ApplicationManager.getApplication().isDispatchThread()) {
    ProgressManager.getInstance().runProcessWithProgressSynchronously(command,GitBundle.getString("annotate.action.name"),false,myProject);
  }
 else {
    command.run();
  }
  if (exception[0] != null) {
    throw new VcsException("Failed to annotate: " + exception[0],exception[0]);
  }
  return annotation[0];
}
