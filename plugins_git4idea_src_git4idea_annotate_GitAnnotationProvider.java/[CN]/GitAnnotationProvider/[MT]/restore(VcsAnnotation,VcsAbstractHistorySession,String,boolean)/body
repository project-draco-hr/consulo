{
  final GitFileAnnotation gitFileAnnotation=new GitFileAnnotation(myProject,vcsAnnotation.getFilePath().getVirtualFile(),forCurrentRevision);
  gitFileAnnotation.addLogEntries(session.getRevisionList());
  final VcsLineAnnotationData basicAnnotation=vcsAnnotation.getBasicAnnotation();
  final int size=basicAnnotation.getNumLines();
  final Map<VcsRevisionNumber,VcsFileRevision> historyAsMap=session.getHistoryAsMap();
  final List<String> lines=StringUtil.split(StringUtil.convertLineSeparators(annotatedContent),"\n",true,false);
  for (int i=0; i < size; i++) {
    final VcsRevisionNumber revision=basicAnnotation.getRevision(i);
    final VcsFileRevision vcsFileRevision=historyAsMap.get(revision);
    if (vcsFileRevision == null) {
      return null;
    }
    try {
      gitFileAnnotation.appendLineInfo(vcsFileRevision.getRevisionDate(),(GitRevisionNumber)revision,vcsFileRevision.getAuthor(),lines.get(i),i + 1);
    }
 catch (    VcsException e) {
      return null;
    }
  }
  return gitFileAnnotation;
}
