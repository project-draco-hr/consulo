{
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      final VirtualFile vcsRoot=myVcsManager.getVcsRootFor(newcomer);
      if (vcsRoot == null)       return;
      myAffectedContentRoots.add(vcsRoot);
      for (      Map.Entry<VirtualFile,THashSet<FilePath>> entry : myDirtyFiles.entrySet()) {
        final VirtualFile groupRoot=entry.getKey();
        if (VfsUtilCore.isAncestor(vcsRoot,groupRoot,false)) {
          final THashSet<FilePath> files=entry.getValue();
          if (files != null) {
            for (Iterator<FilePath> it=files.iterator(); it.hasNext(); ) {
              FilePath oldBoy=it.next();
              if (oldBoy.isUnder(newcomer,false)) {
                it.remove();
              }
            }
          }
        }
      }
      THashSet<FilePath> dirsByRoot=myDirtyDirectoriesRecursively.get(vcsRoot);
      if (dirsByRoot == null) {
        dirsByRoot=new THashSet<FilePath>();
        myDirtyDirectoriesRecursively.put(vcsRoot,dirsByRoot);
      }
 else {
        for (Iterator<FilePath> it=dirsByRoot.iterator(); it.hasNext(); ) {
          FilePath oldBoy=it.next();
          if (newcomer.isUnder(oldBoy,false)) {
            return;
          }
          if (oldBoy.isUnder(newcomer,false)) {
            it.remove();
          }
        }
      }
      dirsByRoot.add(newcomer);
    }
  }
);
}
