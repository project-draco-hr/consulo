{
  myUpdater.execute(new Runnable(){
    @Override public void run(){
      if (myProject.isDisposed())       return;
      if (!initializedExternalSystem.contains(externalSystemId)) {
        final Application app=ApplicationManager.getApplication();
        Runnable action=new Runnable(){
          @Override public void run(){
            app.runWriteAction(new Runnable(){
              @Override public void run(){
                if (myProject.isDisposed())                 return;
                ExternalSystemUtil.ensureToolWindowContentInitialized(myProject,externalSystemId);
                initializedExternalSystem.add(externalSystemId);
              }
            }
);
          }
        }
;
        if (app.isDispatchThread()) {
          action.run();
        }
 else {
          app.invokeAndWait(action,ModalityState.defaultModalityState());
        }
      }
      final NotificationGroup group=ExternalSystemUtil.getToolWindowElement(NotificationGroup.class,myProject,ExternalSystemDataKeys.NOTIFICATION_GROUP,externalSystemId);
      if (group == null)       return;
      final Notification notification=group.createNotification(notificationData.getTitle(),notificationData.getMessage(),notificationData.getNotificationCategory().getNotificationType(),notificationData.getListener());
      myNotifications.add(notification);
      if (notificationData.isBalloonNotification()) {
        applyNotification(notification);
      }
 else {
        addMessage(notification,externalSystemId,notificationData);
      }
    }
  }
);
}
