{
  final List<VcsException> errors=collectErrors(allExceptions);
  final int errorsSize=errors.size();
  final int warningsSize=allExceptions.size() - errorsSize;
  if (errorsSize == 0) {
    for (    CheckinHandler handler : myHandlers) {
      handler.checkinSuccessful();
    }
    processor.afterSuccessfulCheckIn();
  }
 else {
    for (    CheckinHandler handler : myHandlers) {
      handler.checkinFailed(errors);
    }
  }
  if ((errorsSize == 0) && (warningsSize == 0)) {
    final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
    if (indicator != null) {
      indicator.setText(VcsBundle.message("commit.dialog.completed.successfully"));
    }
  }
 else {
    WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable(){
      public void run(){
        final String message;
        if (errorsSize > 0 && warningsSize > 0) {
          message=VcsBundle.message("message.text.commit.failed.with.errors.and.warnings");
        }
 else         if (errorsSize > 0) {
          message=VcsBundle.message("message.text.commit.failed.with.errors");
        }
 else {
          message=VcsBundle.message("message.text.commit.finished.with.warnings");
        }
        Messages.showErrorDialog(message,VcsBundle.message("message.title.commit"));
        if (errorsSize > 0) {
          processor.afterFailedCheckIn();
        }
      }
    }
,null,myProject);
  }
}
