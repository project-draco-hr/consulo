{
  final Runnable action=new Runnable(){
    public void run(){
      generalCommit(processor);
    }
  }
;
  if (myForceSyncCommit) {
    ProgressManager.getInstance().runProcessWithProgressSynchronously(action,myActionName,true,myProject);
    return doesntContainErrors(processor.getVcsExceptions());
  }
 else {
    Task.Backgroundable task=new Task.Backgroundable(myProject,myActionName,true,myConfiguration.getCommitOption()){
      public void run(      @NotNull final ProgressIndicator indicator){
        final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(myProject);
        vcsManager.startBackgroundVcsOperation();
        try {
          action.run();
        }
  finally {
          vcsManager.stopBackgroundVcsOperation();
        }
      }
      @Override public NotificationInfo notifyFinished(){
        final List<Change> changesFailedToCommit=processor.getChangesFailedToCommit();
        String text=(myIncludedChanges.size() - changesFailedToCommit.size()) + " Change(s) Commited";
        if (changesFailedToCommit.size() > 0) {
          text+=", " + changesFailedToCommit.size() + " Change(s) Failed To Commit";
        }
        final String title="VCS Commit Finished";
        Notifications.Bus.notify(new Notification(Notifications.LOG_ONLY_GROUP_ID,title + ", " + text,myCommitMessage,NotificationType.INFORMATION),myProject);
        return new NotificationInfo("VCS Commit",title,text,true);
      }
    }
;
    ProgressManager.getInstance().run(task);
    return false;
  }
}
