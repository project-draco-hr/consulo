{
  validateRecentProjects();
  Project[] openProjects=ProjectManager.getInstance().getOpenProjects();
  ArrayList<AnAction> actions=new ArrayList<AnAction>();
  final Map<String,Integer> map=new LinkedHashMap<String,Integer>();
  final List<String> paths=new ArrayList<String>();
synchronized (myState) {
    outer:     for (    String recentPath : myState.recentPaths) {
      for (      Project openProject : openProjects) {
        final String path=getProjectPath(openProject);
        if (path == null || recentPath.equals(path)) {
          continue outer;
        }
      }
      final String projectName=getProjectName(recentPath);
      map.put(projectName,map.containsKey(projectName) ? map.get(projectName) + 1 : 1);
      paths.add(recentPath);
    }
  }
  for (  final String path : paths) {
    final String projectName=getProjectName(path);
    boolean needShowPath=false;
    String displayName=myState.names.get(path);
    if (displayName == null) {
      if (map.get(projectName) > 1) {
        displayName=path;
      }
 else {
        displayName=projectName;
        needShowPath=true;
      }
    }
    actions.add(new ReopenProjectAction(path,displayName,needShowPath));
  }
  if (actions.isEmpty()) {
    return AnAction.EMPTY_ARRAY;
  }
  ArrayList<AnAction> list=new ArrayList<AnAction>();
  for (  AnAction action : actions) {
    list.add(action);
  }
  if (addClearListItem) {
    AnAction clearListAction=new AnAction(IdeBundle.message("action.clear.list")){
      public void actionPerformed(      AnActionEvent e){
        final int rc=Messages.showOkCancelDialog(e.getData(PlatformDataKeys.PROJECT),"Would you like to clear the list of recent projects?","Clear Recent Projects List",Messages.getQuestionIcon());
        if (rc == 0) {
synchronized (myState) {
            myState.recentPaths.clear();
          }
          IdeFrame frame=e.getData(IdeFrame.KEY);
          if (frame != null) {
            IdeRootPane rootPane=(IdeRootPane)frame.getComponent();
            WelcomeScreen welcomeScreen=rootPane.getWelcomeScreen();
            if (welcomeScreen != null) {
              welcomeScreen.hideRecentProjectsPanel();
            }
          }
        }
      }
    }
;
    list.add(Separator.getInstance());
    list.add(clearListAction);
  }
  return list.toArray(new AnAction[list.size()]);
}
