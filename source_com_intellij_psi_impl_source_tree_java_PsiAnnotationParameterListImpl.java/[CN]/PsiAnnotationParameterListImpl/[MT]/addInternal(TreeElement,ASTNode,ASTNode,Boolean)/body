{
  if (first.getElementType() == NAME_VALUE_PAIR && last.getElementType() == NAME_VALUE_PAIR) {
    final CharTable treeCharTab=SharedImplUtil.findCharTableByTree(this);
    ASTNode lparenth=findChildByRole(ChildRole.LPARENTH);
    if (lparenth == null) {
      LeafElement created=Factory.createSingleLeafElement(LPARENTH,new char[]{'('},0,1,treeCharTab,getManager());
      super.addInternal(created,created,getFirstChildNode(),true);
    }
    ASTNode rparenth=findChildByRole(ChildRole.RPARENTH);
    if (rparenth == null) {
      LeafElement created=Factory.createSingleLeafElement(RPARENTH,new char[]{')'},0,1,treeCharTab,getManager());
      super.addInternal(created,created,getLastChildNode(),false);
    }
    if (anchor == null) {
      if (before == null || before.booleanValue()) {
        anchor=findChildByRole(ChildRole.LPARENTH);
        before=Boolean.FALSE;
      }
 else {
        anchor=findChildByRole(ChildRole.RPARENTH);
        before=Boolean.TRUE;
      }
    }
    final TreeElement firstAdded=super.addInternal(first,last,anchor,before);
    for (ASTNode child=((ASTNode)first).getTreeNext(); child != null; child=child.getTreeNext()) {
      if (child.getElementType() == COMMA)       break;
      if (child.getElementType() == NAME_VALUE_PAIR) {
        TreeElement comma=Factory.createSingleLeafElement(COMMA,new char[]{','},0,1,treeCharTab,getManager());
        super.addInternal(comma,comma,first,Boolean.FALSE);
        break;
      }
    }
    for (ASTNode child=((ASTNode)first).getTreePrev(); child != null; child=child.getTreePrev()) {
      if (child.getElementType() == COMMA)       break;
      if (child.getElementType() == NAME_VALUE_PAIR) {
        TreeElement comma=Factory.createSingleLeafElement(COMMA,new char[]{','},0,1,treeCharTab,getManager());
        super.addInternal(comma,comma,child,Boolean.FALSE);
        break;
      }
    }
    return firstAdded;
  }
  return super.addInternal(first,last,anchor,before);
}
