{
switch (myType) {
case CUSTOM:
    return myScope.getDisplayName();
case MODULE:
  return AnalysisScopeBundle.message("scope.option.module",myModule.getName());
case MODULES:
String modules=StringUtil.join(myModules,new Function<Module,String>(){
  public String fun(  final Module module){
    return module.getName();
  }
}
,", ");
return AnalysisScopeBundle.message("scope.module.list",modules,Integer.valueOf(myModules.size()));
case PROJECT:
return AnalysisScopeBundle.message("scope.project",myProject.getName());
case FILE:
final String relativePath=getRelativePath();
return relativePath != null ? AnalysisScopeBundle.message("scope.file",relativePath) : "Current File";
case DIRECTORY:
final String relativeDirPath=getRelativePath();
return relativeDirPath != null ? AnalysisScopeBundle.message("scope.directory",relativeDirPath) : "Current Directory";
case VIRTUAL_FILES:
return AnalysisScopeBundle.message("scope.selected.files");
}
return "";
}
