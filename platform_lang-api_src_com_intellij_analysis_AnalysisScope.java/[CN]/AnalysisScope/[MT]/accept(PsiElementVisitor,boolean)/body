{
  if (myType == VIRTUAL_FILES) {
    final PsiManager psiManager=PsiManager.getInstance(myProject);
    final FileIndex index=ProjectRootManager.getInstance(myProject).getFileIndex();
    for (    final VirtualFile file : myFilesSet) {
      if (!myIncludeTestSource && index.isInTestSourceContent(file))       continue;
      if (!processFile(file,visitor,psiManager,needReadAction))       return;
    }
  }
 else   if (myScope instanceof GlobalSearchScope) {
    final PsiManager psiManager=PsiManager.getInstance(myProject);
    final FileIndex projectFileIndex=ProjectRootManager.getInstance(myProject).getFileIndex();
    final ContentIterator contentIterator=new ContentIterator(){
      public boolean processFile(      final VirtualFile fileOrDir){
        final boolean isInScope=ApplicationManager.getApplication().runReadAction(new Computable<Boolean>(){
          public Boolean compute(){
            if (!myIncludeTestSource && projectFileIndex.isInTestSourceContent(fileOrDir))             return false;
            return ((GlobalSearchScope)myScope).contains(fileOrDir);
          }
        }
).booleanValue();
        return !isInScope || AnalysisScope.this.processFile(fileOrDir,visitor,psiManager,needReadAction);
      }
    }
;
    projectFileIndex.iterateContent(contentIterator);
    if (mySearchInLibraries) {
      final VirtualFile[] libraryRoots=LibraryUtil.getLibraryRoots(myProject,false,false);
      for (      VirtualFile libraryRoot : libraryRoots) {
        FileIndexImplUtil.iterateRecursively(libraryRoot,VirtualFileFilter.ALL,contentIterator);
      }
    }
  }
 else   if (myScope instanceof LocalSearchScope) {
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        final PsiElement[] psiElements=((LocalSearchScope)myScope).getScope();
        for (        PsiElement element : psiElements) {
          element.accept(visitor);
        }
      }
    }
);
  }
 else   if (myModule != null) {
    final FileIndex moduleFileIndex=ModuleRootManager.getInstance(myModule).getFileIndex();
    final PsiManager psiManager=PsiManager.getInstance(myModule.getProject());
    moduleFileIndex.iterateContent(new ContentIterator(){
      public boolean processFile(      VirtualFile fileOrDir){
        return AnalysisScope.this.processFile(fileOrDir,visitor,moduleFileIndex,psiManager,needReadAction);
      }
    }
);
  }
 else   if (myModules != null) {
    for (    final Module module : myModules) {
      final PsiManager psiManager=PsiManager.getInstance(module.getProject());
      final FileIndex moduleFileIndex=ModuleRootManager.getInstance(module).getFileIndex();
      moduleFileIndex.iterateContent(new ContentIterator(){
        public boolean processFile(        VirtualFile fileOrDir){
          return AnalysisScope.this.processFile(fileOrDir,visitor,moduleFileIndex,psiManager,needReadAction);
        }
      }
);
    }
  }
 else   if (myElement instanceof PsiDirectory) {
    accept((PsiDirectory)myElement,visitor,needReadAction);
  }
 else   if (myElement != null) {
    ApplicationManager.getApplication().runReadAction(new Runnable(){
      public void run(){
        myElement.accept(visitor);
      }
    }
);
  }
 else   if (myProject != null) {
    final PsiManager psiManager=PsiManager.getInstance(myProject);
    final FileIndex projectFileIndex=ProjectRootManager.getInstance(myProject).getFileIndex();
    projectFileIndex.iterateContent(new ContentIterator(){
      public boolean processFile(      final VirtualFile fileOrDir){
        return AnalysisScope.this.processFile(fileOrDir,visitor,projectFileIndex,psiManager,needReadAction);
      }
    }
);
  }
}
