{
  FilePath path=VcsUtil.getFilePath(file.getPath());
  VirtualFile vfile=VcsUtil.getVirtualFile(file.getPath());
  ContentRevision beforeRev=new GitContentRevision(VcsUtil.getFilePath(file.getBeforePath()),new GitRevisionNumber(GitRevisionNumber.TIP,new Date(file.getModificationStamp())),project);
  ContentRevision afterRev=CurrentContentRevision.create(path);
switch (file.getStatus()) {
case UNMERGED:
{
      builder.processChange(new Change(beforeRev,afterRev,FileStatus.MERGED_WITH_CONFLICTS));
      break;
    }
case ADDED:
{
    builder.processChange(new Change(null,afterRev,FileStatus.ADDED));
    break;
  }
case DELETED:
{
  builder.processChange(new Change(beforeRev,afterRev,FileStatus.DELETED));
  break;
}
case COPY:
{
builder.processChange(new Change(null,afterRev,FileStatus.ADDED));
break;
}
case RENAME:
{
builder.processChange(new Change(beforeRev,afterRev,FileStatus.MODIFIED));
break;
}
case MODIFIED:
{
builder.processChange(new Change(beforeRev,afterRev,FileStatus.MODIFIED));
break;
}
case UNMODIFIED:
{
break;
}
case UNVERSIONED:
{
builder.processUnversionedFile(vfile);
break;
}
default :
{
builder.processChange(new Change(null,afterRev,FileStatus.UNKNOWN));
}
}
}
