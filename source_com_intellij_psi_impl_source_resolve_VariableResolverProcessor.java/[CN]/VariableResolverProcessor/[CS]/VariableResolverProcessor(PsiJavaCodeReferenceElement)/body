{
  super(fromElement.getText(),null,ourFilter,new PsiConflictResolver[]{new JavaVariableConflictResolver()},new ArrayList());
  myFromElement=fromElement;
  PsiElement qualifier=fromElement.getQualifier();
  PsiElement referenceName=fromElement.getReferenceNameElement();
  if (referenceName instanceof PsiIdentifier) {
    setName(referenceName.getText());
  }
  if (qualifier instanceof PsiExpression) {
    final JavaResolveResult accessClass=PsiUtil.getAccessObjectMember((PsiExpression)qualifier);
    final PsiElement element=accessClass.getElement();
    if (element instanceof PsiTypeParameter) {
      final PsiManager manager=element.getManager();
      final PsiClassType type=manager.getElementFactory().createType((PsiTypeParameter)element);
      final PsiType accessType=accessClass.getSubstitutor().substitute(type);
      if (accessType instanceof PsiArrayType)       myAccessMember=manager.getElementFactory().getArrayClass();
 else       if (accessType instanceof PsiClassType)       myAccessMember=((PsiClassType)accessType).resolve();
    }
 else     if (element instanceof PsiClass)     myAccessMember=(PsiClass)element;
  }
}
