{
  if (forcedTextAttributes != null) {
    return forcedTextAttributes.getErrorStripeColor();
  }
  EditorColorsScheme scheme=getColorsScheme(colorsScheme);
  if (forcedTextAttributesKey != null) {
    TextAttributes forcedTextAttributes=scheme.getAttributes(forcedTextAttributesKey);
    if (forcedTextAttributes != null) {
      final Color errorStripeColor=forcedTextAttributes.getErrorStripeColor();
      if (errorStripeColor != null) {
        return errorStripeColor;
      }
    }
  }
  if (getSeverity() == HighlightSeverity.ERROR) {
    return scheme.getAttributes(CodeInsightColors.ERRORS_ATTRIBUTES).getErrorStripeColor();
  }
  if (getSeverity() == HighlightSeverity.WARNING) {
    return scheme.getAttributes(CodeInsightColors.WARNINGS_ATTRIBUTES).getErrorStripeColor();
  }
  if (getSeverity() == HighlightSeverity.INFO) {
    return scheme.getAttributes(CodeInsightColors.INFO_ATTRIBUTES).getErrorStripeColor();
  }
  if (getSeverity() == HighlightSeverity.WEAK_WARNING) {
    return scheme.getAttributes(CodeInsightColors.WEAK_WARNING_ATTRIBUTES).getErrorStripeColor();
  }
  if (getSeverity() == HighlightSeverity.GENERIC_SERVER_ERROR_OR_WARNING) {
    return scheme.getAttributes(CodeInsightColors.GENERIC_SERVER_ERROR_OR_WARNING).getErrorStripeColor();
  }
  TextAttributes attributes=getAttributesByType(element,type,scheme);
  return attributes == null ? null : attributes.getErrorStripeColor();
}
