{
  final TreeNode[] sourceNodes=getSourceNodes(dtde.getTransferable());
  final TreeNode targetNode=getTargetNode(dtde.getLocation());
  final int dropAction=dtde.getDropAction();
  if (targetNode == null || (dropAction & DnDConstants.ACTION_COPY_OR_MOVE) == 0) {
    dtde.rejectDrop();
  }
 else   if (sourceNodes == null) {
    if (dtde.getTransferable().isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {
      dtde.acceptDrop(dropAction);
      List<File> fileList;
      try {
        fileList=(List<File>)dtde.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
      }
 catch (      Exception e) {
        dtde.rejectDrop();
        return;
      }
      getDropHandler(dropAction).doDropFiles(fileList,targetNode);
    }
 else {
      dtde.rejectDrop();
    }
  }
 else   if (!doDrop(sourceNodes,targetNode,dropAction,dtde)) {
    dtde.rejectDrop();
  }
}
