{
  if (oldIndent == newIndent)   return;
  for (TreeElement son=tree.firstChild; son != null; ) {
    if (son.getElementType() == ElementType.WHITE_SPACE) {
      final int indentLevelsDiff=newIndent / Helper.INDENT_FACTOR - oldIndent / Helper.INDENT_FACTOR;
      final int indentSpacesDiff=newIndent % Helper.INDENT_FACTOR - oldIndent % Helper.INDENT_FACTOR;
      final String ws=son.getText();
      String newIndentString=indentWhitespace(ws,indentLevelsDiff,indentSpacesDiff);
      if (!ws.equals(newIndentString)) {
        TreeElement newWSElem=Factory.createSingleLeafElement(ElementType.WHITE_SPACE,newIndentString.toCharArray(),0,newIndentString.length(),table,null);
        ChangeUtil.replaceChild(tree,son,newWSElem);
        son=newWSElem;
      }
    }
 else     if (son instanceof CompositeElement) {
      indentSubtree((CompositeElement)son,oldIndent,newIndent,table);
    }
    son=son.getTreeNext();
  }
}
