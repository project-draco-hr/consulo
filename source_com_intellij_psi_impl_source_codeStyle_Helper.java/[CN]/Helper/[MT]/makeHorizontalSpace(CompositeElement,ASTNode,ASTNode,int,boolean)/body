{
  if (soft) {
    int lineBreaks=getLineBreakCount(parent,child1,child2);
    if (lineBreaks > 0) {
      boolean inCode=parent.getElementType() != ElementType.JAVA_FILE && parent.getElementType() != ElementType.CLASS;
      int maxKeep=inCode ? mySettings.KEEP_BLANK_LINES_IN_CODE : mySettings.KEEP_BLANK_LINES_IN_DECLARATIONS;
      lineBreaks=Math.min(lineBreaks,maxKeep + 1);
      if (lineBreaks == 1) {
        lineBreaks=mySettings.KEEP_LINE_BREAKS ? 1 : 0;
      }
      if (lineBreaks > 0) {
        return makeLineBreaks(parent,child1,child2,lineBreaks);
      }
    }
  }
  ASTNode leaf=child1;
  if (child1 instanceof CompositeElement) {
    ChameleonTransforming.transformChildren((CompositeElement)child1,true);
    leaf=TreeUtil.findLastLeaf(child1);
  }
  if (leaf != null && leaf.getElementType() == ElementType.END_OF_LINE_COMMENT) {
    return makeLineBreaks(parent,child1,child2,1);
  }
  String text;
  if (size == 0) {
    text="";
  }
 else {
    if (size == 1) {
      text=" ";
    }
 else {
      text="";
      for (int i=0; i < size; i++) {
        text+=" ";
      }
    }
  }
  return makeSpace(parent,child1,child2,text);
}
