{
  super(new GridBagLayout());
  myCbEnabled=new JCheckBox(ExecutionBundle.message("run.configuration.use.alternate.jre.checkbox"));
  final GridBagConstraints gc=new GridBagConstraints(0,GridBagConstraints.RELATIVE,1,1,1.0,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(2,-2,2,2),0,0);
  add(myCbEnabled,gc);
  final TextFieldWithHistory fieldWithHistory=new TextFieldWithHistory();
  fieldWithHistory.setBorder(BorderFactory.createEtchedBorder());
  final ArrayList<String> foundJdks=new ArrayList<String>();
  final ProjectJdk[] allJdks=ProjectJdkTable.getInstance().getAllJdks();
  for (  ProjectJdk jdk : allJdks) {
    foundJdks.add(jdk.getHomePath());
  }
  fieldWithHistory.setHistory(foundJdks);
  myPathField=new ComponentWithBrowseButton<TextFieldWithHistory>(fieldWithHistory,null);
  myPathField.addBrowseFolderListener(ExecutionBundle.message("run.configuration.select.alternate.jre.label"),ExecutionBundle.message("run.configuration.select.jre.dir.label"),null,BrowseFilesListener.SINGLE_DIRECTORY_DESCRIPTOR,TextComponentAccessor.TEXT_FIELD_WITH_HISTORY_WHOLE_TEXT);
  gc.insets.left=20;
  add(myPathField,gc);
  InsertPathAction.addTo(fieldWithHistory.getTextEditor());
  gc.weighty=1;
  add(Box.createVerticalBox(),gc);
  myCbEnabled.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      enabledChanged();
    }
  }
);
  enabledChanged();
}
