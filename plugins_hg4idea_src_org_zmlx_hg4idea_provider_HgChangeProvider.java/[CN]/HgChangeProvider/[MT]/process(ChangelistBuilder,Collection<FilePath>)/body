{
  final Set<HgChange> hgChanges=new HashSet<HgChange>();
  for (  Map.Entry<VirtualFile,Collection<FilePath>> entry : HgUtil.groupFilePathsByHgRoots(myProject,files).entrySet()) {
    VirtualFile repo=entry.getKey();
    final HgRevisionNumber workingRevision=new HgWorkingCopyRevisionsCommand(myProject).identify(repo).getFirst();
    final HgRevisionNumber parentRevision=new HgWorkingCopyRevisionsCommand(myProject).firstParent(repo);
    final Map<HgFile,HgResolveStatusEnum> list=new HgResolveCommand(myProject).getListSynchronously(repo);
    hgChanges.addAll(new HgStatusCommand.Builder(true).build(myProject).execute(repo,entry.getValue()));
    sendChanges(builder,hgChanges,list,workingRevision,parentRevision);
  }
  return hgChanges;
}
