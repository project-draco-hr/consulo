{
  for (  HgChange c : alreadyProcessed) {
    dirtyFiles.remove(c.beforeFile().toFilePath());
    dirtyFiles.remove(c.afterFile().toFilePath());
  }
  final ProjectLevelVcsManager vcsManager=ProjectLevelVcsManager.getInstance(myProject);
  final FileDocumentManager fileDocumentManager=FileDocumentManager.getInstance();
  for (  FilePath filePath : dirtyFiles) {
    final VirtualFile vf=filePath.getVirtualFile();
    if (vf != null && fileDocumentManager.isFileModifiedAndDocumentUnsaved(vf)) {
      final VirtualFile root=vcsManager.getVcsRootFor(vf);
      if (root != null) {
        final HgRevisionNumber beforeRevisionNumber=new HgWorkingCopyRevisionsCommand(myProject).identify(root);
        builder.processChange(new Change(new HgContentRevision(myProject,new HgFile(myProject,vf),beforeRevisionNumber),CurrentContentRevision.create(filePath),FileStatus.MODIFIED),myVcsKey);
      }
    }
  }
}
