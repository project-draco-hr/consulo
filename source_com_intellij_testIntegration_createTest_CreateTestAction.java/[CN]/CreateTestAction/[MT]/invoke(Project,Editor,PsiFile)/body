{
  PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
  final Module srcModule=ModuleUtil.findModuleForPsiElement(file);
  final PsiClass srcClass=PsiTreeUtil.getParentOfType(element,PsiClass.class,false);
  if (srcClass == null)   return;
  PsiDirectory srcDir=file.getContainingDirectory();
  PsiPackage srcPackage=JavaDirectoryService.getInstance().getPackage(srcDir);
  final CreateTestDialog d=new CreateTestDialog(project,getText(),srcClass,srcPackage,srcModule);
  d.show();
  if (!d.isOK())   return;
  PostprocessReformattingAspect.getInstance(project).postponeFormattingInside(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          try {
            IdeDocumentHistory.getInstance(project).includeCurrentPlaceAsChangePlace();
            PsiClass targetClass=JavaDirectoryService.getInstance().createClass(d.getTargetDirectory(),d.getClassName());
            addSuperClass(targetClass,project,d.getSuperClassName());
            addTestMethods(targetClass,d.getSelectedTestProvider(),d.getSelectedMethods(),d.shouldGeneratedBefore(),d.shouldGeneratedAfter());
            CodeInsightUtil.positionCursor(project,targetClass.getContainingFile(),targetClass.getLBrace());
          }
 catch (          IncorrectOperationException e) {
            showErrorLater(project,d.getClassName());
          }
        }
      }
);
    }
  }
);
}
