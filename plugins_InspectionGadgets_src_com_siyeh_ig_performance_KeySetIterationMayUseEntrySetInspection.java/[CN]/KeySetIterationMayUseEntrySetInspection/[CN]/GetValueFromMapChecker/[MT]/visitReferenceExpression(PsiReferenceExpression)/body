{
  if (assigned) {
    return;
  }
  super.visitReferenceExpression(expression);
  final PsiElement parent=expression.getParent();
  if (parent instanceof PsiAssignmentExpression) {
    final PsiElement target=expression.resolve();
    if (key.equals(target) || map.equals(target)) {
      assigned=true;
    }
  }
 else   if (!(parent instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiElement grandParent=parent.getParent();
  if (!(grandParent instanceof PsiMethodCallExpression)) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)grandParent;
  final PsiReferenceExpression methodExpression=(PsiReferenceExpression)parent;
  final PsiElement target=expression.resolve();
  if (!map.equals(target)) {
    return;
  }
  @NonNls final String methodName=methodExpression.getReferenceName();
  if (!"get".equals(methodName)) {
    return;
  }
  final PsiExpressionList argumentList=methodCallExpression.getArgumentList();
  final PsiExpression[] arguments=argumentList.getExpressions();
  if (arguments.length != 1) {
    return;
  }
  final PsiExpression argument=arguments[0];
  if (!(argument instanceof PsiReferenceExpression)) {
    return;
  }
  final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)argument;
  final PsiElement argumentTarget=referenceExpression.resolve();
  if (!key.equals(argumentTarget)) {
    return;
  }
  getValueFromMap=true;
}
