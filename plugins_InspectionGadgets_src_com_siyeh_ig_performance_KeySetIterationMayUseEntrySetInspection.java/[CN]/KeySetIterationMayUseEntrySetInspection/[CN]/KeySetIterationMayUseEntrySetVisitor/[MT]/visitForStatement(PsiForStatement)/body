{
  super.visitForStatement(statement);
  final PsiExpression condition=statement.getCondition();
  if (!(condition instanceof PsiMethodCallExpression)) {
    return;
  }
  final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)condition;
  if (!IteratorUtils.isCallToHasNext(methodCallExpression)) {
    return;
  }
  final PsiStatement initialization=statement.getInitialization();
  if (!(initialization instanceof PsiDeclarationStatement)) {
    return;
  }
  final PsiDeclarationStatement declarationStatement=(PsiDeclarationStatement)initialization;
  final PsiElement[] declaredElements=declarationStatement.getDeclaredElements();
  if (declaredElements.length != 1) {
    return;
  }
  final PsiElement element=declaredElements[0];
  if (!(element instanceof PsiLocalVariable)) {
    return;
  }
  final PsiVariable variable=(PsiVariable)element;
  final PsiExpression initializer=variable.getInitializer();
  if (!TypeUtils.expressionHasType("java.util.Iterator",initializer)) {
    return;
  }
  if (initializer instanceof PsiMethodCallExpression) {
    final PsiMethodCallExpression expression=(PsiMethodCallExpression)initializer;
    final PsiReferenceExpression methodExpression=expression.getMethodExpression();
    final String name=methodExpression.getReferenceName();
    if (!"iterator".equals(name)) {
      return;
    }
  }
}
