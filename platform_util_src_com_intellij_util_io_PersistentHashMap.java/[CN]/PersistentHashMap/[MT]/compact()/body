{
  final long now=System.currentTimeMillis();
  final String newPath=getDataFile(myFile).getPath() + ".new";
  final PersistentHashMapValueStorage newStorage=PersistentHashMapValueStorage.create(newPath);
  myValueStorage.switchToCompactionMode();
  traverseAllRecords(new RecordsProcessor(){
    public boolean process(    final int keyId) throws IOException {
      final HeaderRecord record=readValueId(keyId);
      if (record.address != NULL_ADDR) {
        byte[] bytes=new byte[record.size];
        myValueStorage.readBytes(record.address,bytes);
        record.address=newStorage.appendBytes(bytes,0);
        updateValueId(keyId,record);
      }
      return true;
    }
  }
);
  myValueStorage.dispose();
  newStorage.dispose();
  FileUtil.rename(new File(newPath),getDataFile(myFile));
  myValueStorage=PersistentHashMapValueStorage.create(getDataFile(myFile).getPath());
  LOG.info("Compacted " + myFile.getPath() + " in "+ (System.currentTimeMillis() - now)+ "ms.");
  myGarbageSize=0;
}
