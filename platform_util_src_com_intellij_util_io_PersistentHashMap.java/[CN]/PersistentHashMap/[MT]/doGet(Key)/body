{
synchronized (PersistentEnumerator.ourLock) {
    myAppendCache.remove(key);
    final int id=tryEnumerate(key);
    if (id == PersistentEnumerator.NULL_ID) {
      return null;
    }
    final long oldHeader=readValueId(id);
    if (oldHeader == PersistentEnumerator.NULL_ID) {
      return null;
    }
    Pair<Long,byte[]> readResult=myValueStorage.readBytes(oldHeader);
    if (readResult.first != null && readResult.first != oldHeader) {
      myEnumerator.markDirty(true);
      updateValueId(id,readResult.first,oldHeader,key,0);
      myLiveAndGarbageKeysCounter++;
    }
    final DataInputStream input=new DataInputStream(new UnsyncByteArrayInputStream(readResult.second));
    try {
      return myValueExternalizer.read(input);
    }
  finally {
      input.close();
    }
  }
}
