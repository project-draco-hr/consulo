{
  WeighingComparable<LookupElement,CompletionLocation> w=WeighingService.weigh(CompletionService.SORTING_KEY,element,myLocation);
  w.force();
  mySortingWeights.put(element,w);
  Object old=mySortedByWeight.put(element,element);
  if (old != null) {
    List<LookupElement> list=new SmartList<LookupElement>();
    if (old instanceof List) {
      list.addAll((List<LookupElement>)old);
    }
 else {
      list.add((LookupElement)old);
    }
    list.add(element);
    mySortedByWeight.put(element,list);
  }
  CompletionSorterImpl sorter=obtainSorter(element);
  Classifier<LookupElement> classifier=myClassifiers.get(sorter);
  if (classifier == null) {
    myClassifiers.put(sorter,classifier=sorter.buildClassifier());
  }
  classifier.addElement(element);
  final String invariant=presentation.getItemText() + "###" + presentation.getTailText()+ "###"+ presentation.getTypeText();
  element.putUserData(PRESENTATION_INVARIANT,invariant);
  super.addElement(lookup,element,presentation);
}
