{
  if (myItems.size() < myLimit)   return;
  List<LookupElement> items=getMatchingItems();
  Iterator<LookupElement> iterator=sortByRelevance(groupItemsBySorter(items)).iterator();
  final Set<LookupElement> retainedSet=ContainerUtil.newIdentityTroveSet();
  retainedSet.addAll(getPrefixItems(true));
  retainedSet.addAll(getPrefixItems(false));
  retainedSet.addAll(myFrozenItems);
  while (retainedSet.size() < myLimit / 2 && iterator.hasNext()) {
    retainedSet.add(iterator.next());
  }
  if (!iterator.hasNext())   return;
  List<LookupElement> removed=retainItems(retainedSet);
  for (  LookupElement element : removed) {
    removeItem(element,context);
  }
  if (!myOverflow) {
    myOverflow=true;
    myProcess.addAdvertisement("Not all variants are shown, please type more letters to see the rest",null);
    myProcess.addWatchedPrefix(0,StandardPatterns.string());
  }
}
