{
  if (items.isEmpty() || !lookup.isFocused() && !lookup.isSemiFocused()) {
    return 0;
  }
  if (lookup.isSelectionTouched() || !onExplicitAction) {
    final LookupElement lastSelection=lookup.getCurrentItem();
    int old=ContainerUtil.indexOfIdentity(items,lastSelection);
    if (old >= 0) {
      return old;
    }
    Object selectedValue=((LookupImpl)lookup).getList().getSelectedValue();
    if (selectedValue instanceof EmptyLookupItem && ((EmptyLookupItem)selectedValue).isLoading()) {
      int index=((LookupImpl)lookup).getList().getSelectedIndex();
      if (index >= 0 && index < items.size()) {
        return index;
      }
    }
    for (int i=0; i < items.size(); i++) {
      String invariant=PRESENTATION_INVARIANT.get(items.get(i));
      if (invariant != null && invariant.equals(PRESENTATION_INVARIANT.get(lastSelection))) {
        return i;
      }
    }
  }
  String selectedText=lookup.getEditor().getSelectionModel().getSelectedText();
  for (int i=0; i < items.size(); i++) {
    LookupElement item=items.get(i);
    if (isPrefixItem(lookup,item,true) && !isLiveTemplate(item) || item.getLookupString().equals(selectedText)) {
      return i;
    }
  }
  return Math.max(0,ContainerUtil.indexOfIdentity(items,mostRelevant));
}
