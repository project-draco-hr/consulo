{
  if (ourPendingUpdate != update) {
    return;
  }
  final Document document=context.getDocument();
  int startOffset=context.getStartOffset();
  int tailOffset=context.getEditor().getCaretModel().getOffset();
  if (startOffset < 0 || tailOffset <= startOffset) {
    return;
  }
  final RangeMarker marker=document.createRangeMarker(startOffset,tailOffset);
  final DocumentAdapter listener=new DocumentAdapter(){
    @Override public void beforeDocumentChange(    DocumentEvent e){
      if (!marker.isValid() || e.getOffset() > marker.getStartOffset() && e.getOffset() < marker.getEndOffset()) {
        cancelLastCompletionStatisticsUpdate();
      }
    }
  }
;
  ourStatsAlarm.addRequest(new Runnable(){
    @Override public void run(){
      if (ourPendingUpdate == update) {
        applyLastCompletionStatisticsUpdate();
      }
    }
  }
,20 * 1000);
  document.addDocumentListener(listener);
  Disposer.register(update,new Disposable(){
    @Override public void dispose(){
      document.removeDocumentListener(listener);
      marker.dispose();
      ourStatsAlarm.cancelAllRequests();
    }
  }
);
}
