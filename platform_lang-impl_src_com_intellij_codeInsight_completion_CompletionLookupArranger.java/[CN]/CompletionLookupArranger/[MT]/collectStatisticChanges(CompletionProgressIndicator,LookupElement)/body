{
  LookupImpl lookupImpl=indicator.getLookup();
  applyLastCompletionStatisticsUpdate();
  CompletionLocation myLocation=new CompletionLocation(indicator.getParameters());
  final StatisticsInfo main=StatisticsManager.serialize(CompletionService.STATISTICS_KEY,item,myLocation);
  final List<LookupElement> items=lookupImpl.getItems();
  final int count=Math.min(lookupImpl.getPreferredItemsCount(),lookupImpl.getList().getSelectedIndex());
  final List<StatisticsInfo> ignored=new ArrayList<StatisticsInfo>();
  for (int i=0; i < count; i++) {
    final LookupElement element=items.get(i);
    StatisticsInfo baseInfo=StatisticsManager.serialize(CompletionService.STATISTICS_KEY,element,myLocation);
    if (baseInfo != null && baseInfo != StatisticsInfo.EMPTY && StatisticsManager.getInstance().getUseCount(baseInfo) == 0) {
      ignored.add(new StatisticsInfo(composeContextWithValue(baseInfo),IGNORED));
    }
  }
  StatisticsInfo info=StatisticsManager.serialize(CompletionService.STATISTICS_KEY,item,myLocation);
  final StatisticsInfo selected=info != null && info != StatisticsInfo.EMPTY ? new StatisticsInfo(composeContextWithValue(info),SELECTED) : null;
  StatisticsUpdate update=new StatisticsUpdate(ignored,selected,main);
  ourPendingUpdate=update;
  return update;
}
