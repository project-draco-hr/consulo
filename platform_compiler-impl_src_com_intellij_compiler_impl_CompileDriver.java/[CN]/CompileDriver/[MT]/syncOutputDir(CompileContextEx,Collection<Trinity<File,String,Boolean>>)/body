{
  final DependencyCache dependencyCache=context.getDependencyCache();
  final boolean isTestMode=ApplicationManager.getApplication().isUnitTestMode();
  final List<File> filesToRefresh=new ArrayList<File>();
  final boolean[] wereFilesDeleted={false};
  CompilerUtil.runInContext(context,CompilerBundle.message("progress.synchronizing.output.directory"),new ThrowableRunnable<CacheCorruptedException>(){
    @Override public void run() throws CacheCorruptedException {
      final long start=System.currentTimeMillis();
      try {
        for (        final Trinity<File,String,Boolean> trinity : toDelete) {
          final File outputPath=trinity.getFirst();
          context.getProgressIndicator().checkCanceled();
          context.getProgressIndicator().setText2(outputPath.getPath());
          filesToRefresh.add(outputPath);
          if (isTestMode) {
            LOG.assertTrue(outputPath.exists());
          }
          if (!deleteFile(outputPath)) {
            continue;
          }
          wereFilesDeleted[0]=true;
          dependencyCache.syncOutDir(trinity);
        }
      }
  finally {
        CompilerUtil.logDuration("Sync output directory",System.currentTimeMillis() - start);
        CompilerUtil.refreshIOFiles(filesToRefresh);
      }
    }
  }
);
  return wereFilesDeleted[0];
}
