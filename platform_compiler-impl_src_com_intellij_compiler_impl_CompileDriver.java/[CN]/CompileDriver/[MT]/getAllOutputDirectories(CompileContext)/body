{
  final Set<File> outputDirs=new OrderedSet<File>();
  final Module[] modules=ModuleManager.getInstance(myProject).getModules();
  for (  final String path : CompilerPathsImpl.getOutputPaths(modules)) {
    outputDirs.add(new File(path));
  }
  for (  Pair<IntermediateOutputCompiler,Module> pair : myGenerationCompilerModuleToOutputDirMap.keySet()) {
    outputDirs.add(new File(CompilerPaths.getGenerationOutputPath(pair.getFirst(),pair.getSecond(),false)));
    outputDirs.add(new File(CompilerPaths.getGenerationOutputPath(pair.getFirst(),pair.getSecond(),true)));
  }
  for (  AdditionalOutputDirectoriesProvider provider : AdditionalOutputDirectoriesProvider.EP_NAME.getExtensions()) {
    for (    Module module : modules) {
      for (      String path : provider.getOutputDirectories(myProject,module)) {
        outputDirs.add(new File(path));
      }
    }
  }
  for (  Artifact artifact : ArtifactManager.getInstance(myProject).getArtifacts()) {
    final String path=((ArtifactImpl)artifact).getOutputDirectoryPathToCleanOnRebuild();
    if (path != null) {
      outputDirs.add(new File(FileUtil.toSystemDependentName(path)));
    }
  }
  return outputDirs;
}
