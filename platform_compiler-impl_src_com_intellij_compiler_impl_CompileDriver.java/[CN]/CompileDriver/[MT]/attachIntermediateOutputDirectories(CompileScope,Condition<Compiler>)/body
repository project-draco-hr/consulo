{
  CompileScope scope=originalScope;
  final Set<Module> affected=new HashSet<>(Arrays.asList(originalScope.getAffectedModules()));
  for (  Map.Entry<Pair<IntermediateOutputCompiler,Module>,Pair<VirtualFile,VirtualFile>> entry : myGenerationCompilerModuleToOutputDirMap.entrySet()) {
    final Module module=entry.getKey().getSecond();
    if (affected.contains(module) && filter.value(entry.getKey().getFirst())) {
      final Pair<VirtualFile,VirtualFile> outputs=entry.getValue();
      scope=new CompositeScope(scope,new FileSetCompileScope(Arrays.asList(outputs.getFirst(),outputs.getSecond()),new Module[]{module}));
    }
  }
  return scope;
}
