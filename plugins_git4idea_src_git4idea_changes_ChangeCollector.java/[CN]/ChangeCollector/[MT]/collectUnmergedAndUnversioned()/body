{
  GitSimpleHandler handler=new GitSimpleHandler(myProject,myVcsRoot,"ls-files");
  handler.addParameters("-v","--others","--unmerged","--exclude-standard");
  handler.setSilent(true);
  handler.setNoSSH(true);
  String list=handler.run();
  for (  String line : list.split("\n")) {
    if (line.length() == 0) {
      continue;
    }
    String[] tokens=line.split("[\t ]+");
    String file=GitUtil.unescapePath(tokens[tokens.length - 1]);
    if ("?".equals(tokens[0])) {
      myUnversioned.add(myVcsRoot.findFileByRelativePath(file));
    }
 else     if ("M".equals(tokens[0])) {
      if (!myUnmergedNames.add(file)) {
        continue;
      }
      ContentRevision before=GitContentRevision.createRevision(myVcsRoot,file,new GitRevisionNumber("orig_head"),myProject,false);
      ContentRevision after=GitContentRevision.createRevision(myVcsRoot,file,null,myProject,false);
      myChanges.add(new Change(before,after,FileStatus.MERGED_WITH_CONFLICTS));
    }
 else {
      throw new VcsException("Unsupported type of the merge conflict detected: " + line);
    }
  }
}
