{
  final String path=StringUtil.trimStart(outputPath,"/");
  if (path.length() == 0) {
    return Collections.emptyList();
  }
  int i=path.indexOf('/');
  final String firstName=i != -1 ? path.substring(0,i) : path;
  final String tail=i != -1 ? path.substring(i + 1) : "";
  final List<VirtualFile> result=new SmartList<VirtualFile>();
  processElementsWithSubstitutions(parent.getChildren(),context,artifactType,PackagingElementPath.EMPTY,new PackagingElementProcessor<PackagingElement<?>>(){
    @Override public boolean process(    @NotNull PackagingElement<?> element,    @NotNull PackagingElementPath elementPath){
      if (element instanceof CompositePackagingElement) {
        final CompositePackagingElement<?> compositeElement=(CompositePackagingElement<?>)element;
        if (firstName.equals(compositeElement.getName())) {
          result.addAll(findSourceFilesByOutputPath(compositeElement,tail,context,artifactType));
        }
      }
 else       if (element instanceof FileCopyPackagingElement) {
        final FileCopyPackagingElement fileCopyElement=(FileCopyPackagingElement)element;
        if (firstName.equals(fileCopyElement.getOutputFileName()) && tail.length() == 0) {
          ContainerUtil.addIfNotNull(fileCopyElement.findFile(),result);
        }
      }
 else       if (element instanceof DirectoryCopyPackagingElement || element instanceof ExtractedDirectoryPackagingElement) {
        final VirtualFile sourceRoot=((FileOrDirectoryCopyPackagingElement<?>)element).findFile();
        if (sourceRoot != null) {
          ContainerUtil.addIfNotNull(sourceRoot.findFileByRelativePath(path),result);
        }
      }
 else       if (element instanceof ModuleOutputPackagingElement) {
        for (        VirtualFile sourceRoot : ((ModuleOutputPackagingElement)element).getSourceRoots(context)) {
          final VirtualFile sourceFile=sourceRoot.findFileByRelativePath(path);
          if (sourceFile != null && ResourceCompilerConfiguration.getInstance(context.getProject()).isResourceFile(sourceFile)) {
            result.add(sourceFile);
          }
        }
      }
      return true;
    }
  }
);
  return result;
}
