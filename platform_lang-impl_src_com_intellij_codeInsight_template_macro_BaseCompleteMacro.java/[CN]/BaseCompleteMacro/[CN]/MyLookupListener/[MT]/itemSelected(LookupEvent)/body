{
  LookupElement item=event.getItem();
  if (item == null)   return;
  char c=event.getCompletionChar();
  if (!LookupEvent.isSpecialCompletionChar(c)) {
    return;
  }
  for (  TemplateCompletionProcessor processor : Extensions.getExtensions(TemplateCompletionProcessor.EP_NAME)) {
    if (!processor.nextTabOnItemSelected(myContext,item)) {
      return;
    }
  }
  final Project project=myContext.getProject();
  Runnable runnable=new Runnable(){
    @Override public void run(){
      new WriteCommandAction(project){
        @Override protected void run(        com.intellij.openapi.application.Result result) throws Throwable {
          Editor editor=myContext.getEditor();
          if (editor != null) {
            considerNextTab(editor);
          }
        }
      }
.execute();
    }
  }
;
  if (ApplicationManager.getApplication().isUnitTestMode()) {
    runnable.run();
  }
 else {
    ApplicationManager.getApplication().invokeLater(runnable,ModalityState.current(),project.getDisposed());
  }
}
