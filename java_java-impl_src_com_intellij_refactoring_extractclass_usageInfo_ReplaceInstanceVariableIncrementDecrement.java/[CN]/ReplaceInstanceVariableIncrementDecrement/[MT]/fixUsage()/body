{
  final PsiReferenceExpression lhs;
  final PsiJavaToken sign;
  if (reference instanceof PsiPrefixExpression) {
    lhs=(PsiReferenceExpression)((PsiPrefixExpression)reference).getOperand();
    sign=((PsiPrefixExpression)reference).getOperationSign();
  }
 else {
    lhs=(PsiReferenceExpression)((PsiPostfixExpression)reference).getOperand();
    sign=((PsiPostfixExpression)reference).getOperationSign();
  }
  final PsiElement qualifier=lhs.getQualifier();
  final String operator=sign.getText();
  final String newExpression;
  if (qualifier != null) {
    final String qualifierText=qualifier.getText();
    final String strippedOperator=getStrippedOperator(operator);
    newExpression=qualifierText + '.' + delegateName+ '.'+ setterName+ '('+ qualifierText+ '.'+ delegateName+ '.'+ getterName+ "()"+ strippedOperator+ "1)";
  }
 else {
    final String strippedOperator=getStrippedOperator(operator);
    newExpression=delegateName + '.' + setterName+ '('+ delegateName+ '.'+ getterName+ "()"+ strippedOperator+ "1)";
  }
  MutationUtils.replaceExpression(newExpression,reference);
}
