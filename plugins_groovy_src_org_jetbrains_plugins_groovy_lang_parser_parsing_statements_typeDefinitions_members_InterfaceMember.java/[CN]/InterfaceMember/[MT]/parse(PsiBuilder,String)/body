{
  if (ConstructorDefinition.parse(builder,interfaceName))   return true;
  PsiBuilder.Marker declMarker=builder.mark();
  if (Declaration.parse(builder,true)) {
    declMarker.drop();
    return true;
  }
 else {
    declMarker.rollbackTo();
  }
  PsiBuilder.Marker typeDeclStartMarker=builder.mark();
  if (TypeDeclarationStart.parse(builder)) {
    typeDeclStartMarker.rollbackTo();
    return TypeDefinition.parse(builder);
  }
  typeDeclStartMarker.rollbackTo();
  if (ParserUtils.getToken(builder,kSTATIC)) {
    if (OpenOrClosableBlock.parseOpenBlock(builder)) {
      builder.error(GroovyBundle.message("interface.must.has.no.static.compound.statemenet"));
      return true;
    }
 else {
      builder.error(GroovyBundle.message("compound.statemenet.expected"));
      return false;
    }
  }
  if (OpenOrClosableBlock.parseOpenBlock(builder)) {
    builder.error(GroovyBundle.message("interface.must.has.no.compound.statemenet"));
    return true;
  }
  return false;
}
