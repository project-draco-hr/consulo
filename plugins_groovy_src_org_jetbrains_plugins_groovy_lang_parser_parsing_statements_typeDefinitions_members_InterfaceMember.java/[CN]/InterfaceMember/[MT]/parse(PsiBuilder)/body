{
  PsiBuilder.Marker ifMarker=builder.mark();
  PsiBuilder.Marker typeDeclStartMarker=builder.mark();
  if (TypeDeclarationStart.parse(builder)) {
    typeDeclStartMarker.rollbackTo();
    if (tWRONG_SET.contains(ModifiersOptional.parse(builder))) {
      ifMarker.rollbackTo();
      return WRONGWAY;
    }
    IElementType typeDef=TypeDefinitionInternal.parse(builder);
    if (tWRONG_SET.contains(typeDef)) {
      ifMarker.rollbackTo();
      return WRONGWAY;
    }
    ifMarker.done(typeDef);
    return typeDef;
  }
  typeDeclStartMarker.rollbackTo();
  ifMarker.rollbackTo();
  PsiBuilder.Marker declStartMarker=builder.mark();
  if (DeclarationStart.parse(builder)) {
    declStartMarker.rollbackTo();
    return Declaration.parse(builder);
  }
  declStartMarker.rollbackTo();
  return WRONGWAY;
}
