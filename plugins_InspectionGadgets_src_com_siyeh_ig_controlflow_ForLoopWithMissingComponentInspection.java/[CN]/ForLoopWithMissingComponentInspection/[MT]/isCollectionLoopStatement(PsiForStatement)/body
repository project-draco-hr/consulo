{
  final PsiStatement initialization=forStatement.getInitialization();
  if (!(initialization instanceof PsiDeclarationStatement)) {
    return false;
  }
  final PsiDeclarationStatement declaration=(PsiDeclarationStatement)initialization;
  if (declaration.getDeclaredElements().length != 1) {
    return false;
  }
  final PsiLocalVariable declaredVar=(PsiLocalVariable)declaration.getDeclaredElements()[0];
  if (declaredVar == null) {
    return false;
  }
  final PsiType declaredVarType=declaredVar.getType();
  if (!(declaredVarType instanceof PsiClassType)) {
    return false;
  }
  final PsiClassType classType=(PsiClassType)declaredVarType;
  final PsiClass declaredClass=classType.resolve();
  if (declaredClass == null) {
    return false;
  }
  if (!ClassUtils.isSubclass(declaredClass,"java.util.Iterator")) {
    return false;
  }
  final PsiExpression initialValue=declaredVar.getInitializer();
  if (initialValue == null) {
    return false;
  }
  if (!(initialValue instanceof PsiMethodCallExpression)) {
    return false;
  }
  final PsiMethodCallExpression initialCall=(PsiMethodCallExpression)initialValue;
  final PsiReferenceExpression initialMethodExpression=initialCall.getMethodExpression();
  final String initialCallName=initialMethodExpression.getReferenceName();
  if (!HardcodedMethodConstants.ITERATOR.equals(initialCallName)) {
    return false;
  }
  final String iteratorName=declaredVar.getName();
  final PsiExpression condition=forStatement.getCondition();
  return isHasNext(condition,iteratorName);
}
