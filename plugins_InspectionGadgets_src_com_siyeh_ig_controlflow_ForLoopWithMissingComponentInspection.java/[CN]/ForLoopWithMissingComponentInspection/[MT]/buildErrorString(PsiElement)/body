{
  final PsiJavaToken forToken=(PsiJavaToken)location;
  final PsiForStatement forStatement=(PsiForStatement)forToken.getParent();
  boolean hasInitializer=false;
  boolean hasCondition=false;
  boolean hasUpdate=false;
  int count=0;
  if (!hasInitializer(forStatement)) {
    hasInitializer=true;
    count++;
  }
  if (!hasCondition(forStatement)) {
    hasCondition=true;
    count++;
  }
  if (!hasUpdate(forStatement)) {
    hasUpdate=true;
    count++;
  }
  if (count == 1) {
    if (hasInitializer) {
      return InspectionGadgetsBundle.message("for.loop.with.missing.component.problem.descriptor1");
    }
 else     if (hasCondition) {
      return InspectionGadgetsBundle.message("for.loop.with.missing.component.problem.descriptor2");
    }
 else {
      return InspectionGadgetsBundle.message("for.loop.with.missing.component.problem.descriptor3");
    }
  }
 else   if (count == 2) {
    if (hasInitializer) {
      if (hasCondition) {
        return InspectionGadgetsBundle.message("for.loop.with.missing.component.problem.descriptor4");
      }
 else {
        return InspectionGadgetsBundle.message("for.loop.with.missing.component.problem.descriptor5");
      }
    }
 else {
      return InspectionGadgetsBundle.message("for.loop.with.missing.component.problem.descriptor6");
    }
  }
 else {
    return InspectionGadgetsBundle.message("for.loop.with.missing.component.problem.descriptor7");
  }
}
