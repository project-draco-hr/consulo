{
  final TextRange textRange=el.getTextRange();
  final AntFile file=(AntFile)el.getContainingFile().getViewProvider().getPsi(AntSupport.getLanguage());
  if (file == null)   return;
  AntElement element=file.lightFindElementAt(textRange.getStartOffset());
  while (element != null && !(element instanceof AntFile) && (element.getTextLength() < textRange.getLength() || element instanceof AntOuterProjectElement)) {
    element=element.getAntParent();
  }
  if (element == null) {
    element=file;
  }
  element.clearCaches();
  AntMacroDef macrodef=PsiTreeUtil.getParentOfType(element,AntMacroDef.class);
  if (macrodef != null) {
    macrodef.clearCaches();
  }
  AntPresetDef presetdef=PsiTreeUtil.getParentOfType(element,AntPresetDef.class);
  if (presetdef != null) {
    presetdef.clearCaches();
  }
  AntTypeDef typeDef=PsiTreeUtil.getParentOfType(element,AntTypeDef.class);
  if (typeDef != null) {
    typeDef.clearCaches();
  }
  updateBuildFile(file);
}
