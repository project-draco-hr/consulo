{
  if (!myModified) {
    if (!myRenamed) {
      return;
    }
  }
  if (myRenamed) {
    LOG.assertTrue(myTemplateFile != null);
    LOG.assertTrue(myTemplateFile.delete());
    myTemplateFile=null;
    myRenamed=false;
  }
  File templateFile=myReadOnly ? null : myTemplateFile;
  if (templateFile == null) {
    LOG.assertTrue(defaultDir.isDirectory());
    templateFile=new File(defaultDir,myName + "." + myExtension);
  }
  FileOutputStream fileOutputStream=new FileOutputStream(templateFile);
  OutputStreamWriter outputStreamWriter;
  try {
    outputStreamWriter=new OutputStreamWriter(fileOutputStream,ourEncoding);
  }
 catch (  UnsupportedEncodingException e) {
    Messages.showMessageDialog("Unable to save File Template \"" + getName() + "\" using "+ ourEncoding,"Error",Messages.getErrorIcon());
    outputStreamWriter=new OutputStreamWriter(fileOutputStream);
  }
  String content=getContent();
  Project project=ProjectManagerEx.getInstanceEx().getDefaultProject();
  String lineSeparator=CodeStyleSettingsManager.getSettings(project).getLineSeparator();
  if (!lineSeparator.equals("\n")) {
    content=StringUtil.convertLineSeparators(content,lineSeparator);
  }
  outputStreamWriter.write(content);
  outputStreamWriter.close();
  fileOutputStream.close();
  myModified=false;
  myTemplateFile=templateFile;
}
