{
  if (DomUtil.isDomElement(method.getReturnType())) {
    final String qname=getSubTagName(method,file);
    if (qname != null) {
      int index=0;
      final SubTag subTagAnnotation=method.getAnnotation(SubTag.class);
      if (subTagAnnotation != null && subTagAnnotation.index() != 0) {
        index=subTagAnnotation.index();
      }
      myFixedChildrenMethods.put(method,new Pair<String,Integer>(qname,index));
      final Integer integer=myFixedChildrenCounts.get(qname);
      if (integer == null || integer < index + 1) {
        myFixedChildrenCounts.put(qname,index + 1);
      }
      return;
    }
  }
  final Type type=DomUtil.extractCollectionElementType(method.getGenericReturnType());
  if (type != null) {
    final String qname=getSubTagNameForCollection(method,file);
    if (qname != null) {
      myCollectionChildrenClasses.put(qname,type);
      myCollectionChildrenGetterMethods.put(method,qname);
    }
  }
}
