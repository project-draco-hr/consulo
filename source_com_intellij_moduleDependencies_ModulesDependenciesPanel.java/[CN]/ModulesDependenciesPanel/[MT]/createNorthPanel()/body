{
  DefaultActionGroup group=new DefaultActionGroup();
  group.add(new AnAction(CommonBundle.message("action.close"),AnalysisScopeBundle.message("action.close.modules.dependencies.description"),IconLoader.getIcon("/actions/cancel.png")){
    public void actionPerformed(    AnActionEvent e){
      DependenciesAnalyzeManager.getInstance(myProject).closeContent(myContent);
    }
  }
);
  appendDependenciesAction(group);
  group.add(new ToggleAction(AnalysisScopeBundle.message("action.module.dependencies.direction"),"",isForwardDirection() ? IconLoader.getIcon("/actions/sortAsc.png") : IconLoader.getIcon("/actions/sortDesc.png")){
    public boolean isSelected(    AnActionEvent e){
      return isForwardDirection();
    }
    public void setSelected(    AnActionEvent e,    boolean state){
      PropertiesComponent.getInstance(myProject).setValue(DIRECTION,String.valueOf(state));
      initLeftTreeModel();
    }
    public void update(    final AnActionEvent e){
      e.getPresentation().setIcon(isForwardDirection() ? IconLoader.getIcon("/actions/sortAsc.png") : IconLoader.getIcon("/actions/sortDesc.png"));
    }
  }
);
  group.add(new ContextHelpAction(ourHelpID));
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,group,true);
  return toolbar.getComponent();
}
