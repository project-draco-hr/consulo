{
  final Document document=editor.getDocument();
  PsiDocumentManager.getInstance(project).commitDocument(document);
  int caretOffset=editor.getCaretModel().getOffset();
  PsiElement elementAtCaret=file.findElementAt(caretOffset);
  if (elementAtCaret instanceof PsiJavaToken && ((PsiJavaToken)elementAtCaret).getTokenType() == JavaTokenType.STRING_LITERAL && caretOffset > elementAtCaret.getTextOffset()) {
    if (rawText != null && rawText.rawText != null)     return rawText.rawText;
    StringBuffer buffer=new StringBuffer(text.length());
    CodeStyleSettings codeStyleSettings=CodeStyleSettingsManager.getSettings(project);
    @NonNls String breaker=codeStyleSettings.BINARY_OPERATION_SIGN_ON_NEXT_LINE ? "\\n\"\n+ \"" : "\\n\" +\n\"";
    final String[] lines=LineTokenizer.tokenize(text.toCharArray(),false,true);
    for (int i=0; i < lines.length; i++) {
      String line=lines[i];
      buffer.append(StringUtil.escapeStringCharacters(line));
      if (i != lines.length - 1)       buffer.append(breaker);
    }
    text=buffer.toString();
  }
  return text;
}
