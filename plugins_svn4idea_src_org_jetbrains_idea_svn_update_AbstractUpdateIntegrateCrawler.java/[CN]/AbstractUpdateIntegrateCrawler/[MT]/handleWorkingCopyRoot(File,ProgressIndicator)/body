{
  final Collection<File> result=new HashSet<File>();
  if (progress != null) {
    showProgressMessage(progress,root);
  }
  try {
    SVNUpdateClient client=myVcs.createUpdateClient();
    client.setEventHandler(myHandler);
    long rev=doUpdate(root,client);
    if (rev < 0 && !isMerge()) {
      throw new SVNException(SVNErrorMessage.create(SVNErrorCode.UNKNOWN,SvnBundle.message("exception.text.root.was.not.properly.updated",root)));
    }
  }
 catch (  SVNException e) {
    myExceptions.add(new VcsException(e));
  }
  if (!SvnConfiguration.getInstanceChecked(myVcs.getProject()).UPDATE_RUN_STATUS) {
    return result;
  }
  final SvnStatusWorker statusWorker=new SvnStatusWorker(myVcs,result,root,myPostUpdateFiles,myIsTotalUpdate,myExceptions);
  statusWorker.doStatus();
  return result;
}
