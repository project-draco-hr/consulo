{
  List<SimpleNode> children=new ArrayList();
  final Collection<Method> methods=myDomlElement.getMethodsInfo().getFixedChildrenGetterMethods();
  for (  Method method : methods) {
    try {
      final Object result=method.invoke(myDomlElement,new Object[0]);
      if (result instanceof DomElement) {
        final String tagName=myDomlElement.getMethodsInfo().getTagName(method);
        if (showGenericValues() && result instanceof GenericValue) {
          children.add(new GenericValueNode((GenericValue)result,tagName,this));
        }
 else {
          children.add(getDomElementNode((DomElement)result,tagName,this));
        }
      }
    }
 catch (    Throwable e) {
      LOG.error(e);
    }
  }
  final Collection<Method> collectionMethods=myDomlElement.getMethodsInfo().getCollectionChildrenGetterMethods();
  for (  Method method : collectionMethods) {
    children.add(getDomElementsGroupNode(myDomlElement,method));
  }
  AbstractDomElementNode[] childrenNodes=children.toArray(new AbstractDomElementNode[children.size()]);
  if (showOrdered()) {
    Arrays.sort(childrenNodes,getComparator());
  }
  return childrenNodes;
}
