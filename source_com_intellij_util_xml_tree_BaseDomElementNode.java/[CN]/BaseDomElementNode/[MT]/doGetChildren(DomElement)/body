{
  if (!element.isValid())   return NO_CHILDREN;
  List<SimpleNode> children=new ArrayList<SimpleNode>();
  for (  DomFixedChildDescription description : element.getGenericInfo().getFixedChildrenDescriptions()) {
    final List<? extends DomElement> values=description.getValues(element);
    if (DomUtil.isGenericValueType(description.getType())) {
      if (showGenericValues()) {
        for (        DomElement domElement : values) {
          children.add(new GenericValueNode((GenericValue)domElement,this));
        }
      }
    }
 else {
      for (      DomElement domElement : values) {
        children.add(new BaseDomElementNode(domElement,this));
      }
    }
  }
  final List<DomCollectionChildDescription> collectionChildrenDescriptions=element.getGenericInfo().getCollectionChildrenDescriptions();
  for (  DomCollectionChildDescription description : collectionChildrenDescriptions) {
    children.add(new DomElementsGroupNode(element,description));
  }
  AbstractDomElementNode[] childrenNodes=children.toArray(new AbstractDomElementNode[children.size()]);
  final Comparator<AbstractDomElementNode> comparator=myDomElement.getRoot().getUserData(COMPARATOR_KEY);
  if (comparator != null) {
    Arrays.sort(childrenNodes,comparator);
  }
  return childrenNodes;
}
