{
  if (!GroovyPsiManager.isInheritorCached(qualifier.getType(),GroovyCommonClassNames.GROOVY_UTIL_CONFIG_OBJECT)) {
    return null;
  }
  GrExpression resolvedQualifier=qualifier;
  PsiElement resolveResult=resolve;
  List<String> path=new ArrayList<String>();
  while (resolveResult == null) {
    if (!(resolvedQualifier instanceof GrReferenceExpression))     return null;
    GrReferenceExpression expr=(GrReferenceExpression)resolvedQualifier;
    path.add(expr.getReferenceName());
    resolvedQualifier=expr.getQualifierExpression();
    if (resolvedQualifier instanceof GrReferenceExpression) {
      resolveResult=((GrReferenceExpression)resolvedQualifier).resolve();
    }
 else     if (resolvedQualifier instanceof GrMethodCall) {
      resolveResult=((GrMethodCall)resolvedQualifier).resolveMethod();
    }
 else {
      return null;
    }
  }
  Collections.reverse(path);
  ConfigSlurperSupport.PropertiesProvider propertiesProvider=null;
  for (  ConfigSlurperSupport slurperSupport : ConfigSlurperSupport.EP_NAME.getExtensions()) {
    propertiesProvider=slurperSupport.getConfigSlurperInfo(resolvedQualifier,resolveResult);
    if (propertiesProvider != null)     break;
  }
  if (propertiesProvider == null)   return null;
  return Pair.create(propertiesProvider,path);
}
