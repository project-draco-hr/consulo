{
  if (refEntity == null || refEntity instanceof RefElement && !((RefElement)refEntity).isValid())   return "invalid";
  if (refEntity instanceof RefPackage) {
    return ((RefPackage)refEntity).getQualifiedName();
  }
 else   if (refEntity.getOwner() == null) {
    return refEntity.getName();
  }
 else   if (refEntity instanceof RefFile) {
    return refEntity.getName();
  }
 else   if (refEntity instanceof RefClass && ((RefClass)refEntity).isAnonymous()) {
    return refEntity.getName() + " in " + getQualifiedName(refEntity.getOwner());
  }
 else   if (refEntity instanceof RefMethod && ((RefMethod)refEntity).getOwnerClass().isAnonymous()) {
    return "anonymous." + refEntity.getName();
  }
 else {
    StringBuffer result=new StringBuffer(refEntity.getName());
    RefEntity refParent=refEntity.getOwner();
    while (refParent != null && !(refParent instanceof RefProject) && !(refParent instanceof RefPackage)) {
      result.insert(0,'.');
      result.insert(0,refParent.getName());
      refParent=refParent.getOwner();
    }
    return result.toString();
  }
}
