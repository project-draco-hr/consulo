{
  if (info.useAnySingleVariable) {
    final PsiResolveHelper resolveHelper=list.getManager().getResolveHelper();
    final PsiType type=info.getTypeWrapper().getType(myChangeInfo.getMethod());
    final VariablesProcessor processor=new VariablesProcessor(false){
      protected boolean check(      PsiVariable var,      PsiSubstitutor substitutor){
        if (var instanceof PsiField && !resolveHelper.isAccessible((PsiField)var,list,null))         return false;
        final PsiType varType=substitutor.substitute(var.getType());
        return type.isAssignableFrom(varType);
      }
      public boolean execute(      PsiElement pe,      PsiSubstitutor substitutor){
        super.execute(pe,substitutor);
        return size() < 2;
      }
    }
;
    PsiScopesUtil.treeWalkUp(processor,list,null);
    if (processor.size() == 1) {
      final PsiVariable result=processor.getResult(0);
      return factory.createExpressionFromText(result.getName(),list);
    }
  }
  return factory.createExpressionFromText(info.defaultValue,list);
}
