{
  Set<String> conflictDescriptions=new HashSet<String>();
  conflictDescriptions.addAll(Arrays.asList(RenameUtil.getConflictDescriptions(usages[0])));
  Set<UsageInfo> usagesSet=new HashSet<UsageInfo>(Arrays.asList(usages[0]));
  RenameUtil.removeConflictUsages(usagesSet);
  if (myChangeInfo.isVisibilityChanged) {
    try {
      addInaccessibilityDescriptions(usagesSet,conflictDescriptions);
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
  }
  if (myPrepareSuccessfulSwingThreadCallback != null && conflictDescriptions.size() > 0) {
    ConflictsDialog dialog=new ConflictsDialog(conflictDescriptions.toArray(new String[conflictDescriptions.size()]),myProject);
    dialog.show();
    if (!dialog.isOK())     return false;
  }
  if (myChangeInfo.isReturnTypeChanged) {
    askToRemoveCovariantOverriders(usagesSet);
  }
  usages[0]=usagesSet.toArray(new UsageInfo[usagesSet.size()]);
  prepareSuccessful();
  return true;
}
