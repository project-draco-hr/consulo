{
  final PsiCodeBlock body=subConstructor.getBody();
  if (body != null) {
    PsiMethodCallExpression superCall=null;
    final PsiStatement[] statements=body.getStatements();
    if (statements.length > 0) {
      if (statements[0] instanceof PsiExpressionStatement) {
        final PsiExpression expression=((PsiExpressionStatement)statements[0]).getExpression();
        if (expression instanceof PsiMethodCallExpression) {
          final PsiMethodCallExpression methodCall=(PsiMethodCallExpression)expression;
          if ("super".equals(methodCall.getMethodExpression().getText())) {
            superCall=methodCall;
          }
        }
      }
    }
    final PsiElementFactory factory=JavaPsiFacade.getInstance(subConstructor.getProject()).getElementFactory();
    try {
      if (superCall == null) {
        PsiExpressionStatement statement=(PsiExpressionStatement)factory.createStatementFromText("super();",null);
        statement=(PsiExpressionStatement)body.addAfter(statement,null);
        superCall=(PsiMethodCallExpression)statement.getExpression();
      }
      final PsiExpressionList argList=superCall.getArgumentList();
      for (      final PsiParameter parameter : parametersToPassToSuper) {
        argList.add(factory.createExpressionFromText(parameter.getName(),null));
      }
    }
 catch (    IncorrectOperationException e) {
      LOG.error(e);
    }
  }
}
