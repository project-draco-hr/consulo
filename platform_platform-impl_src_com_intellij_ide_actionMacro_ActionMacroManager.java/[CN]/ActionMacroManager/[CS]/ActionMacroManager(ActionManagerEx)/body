{
  myActionManager=actionManagerEx;
  myActionManager.addAnActionListener(new AnActionListener(){
    public void beforeActionPerformed(    AnAction action,    DataContext dataContext,    final AnActionEvent event){
      String id=myActionManager.getId(action);
      if (id == null)       return;
      if ("StartStopMacroRecording".equals(id)) {
        myLastActionInputEvent.add(event.getInputEvent());
      }
 else       if (myIsRecording) {
        myRecordingMacro.appendAction(id);
        String shortcut=null;
        if (event.getInputEvent() instanceof KeyEvent) {
          shortcut=KeymapUtil.getKeystrokeText(KeyStroke.getKeyStrokeForEvent((KeyEvent)event.getInputEvent()));
        }
        notifyUser(id + (shortcut != null ? " (" + shortcut + ")" : ""),false);
        myLastActionInputEvent.add(event.getInputEvent());
      }
    }
    public void beforeEditorTyping(    char c,    DataContext dataContext){
    }
    public void afterActionPerformed(    final AnAction action,    final DataContext dataContext,    final AnActionEvent event){
    }
  }
);
  myKeyProcessor=new MyKeyPostpocessor();
  IdeEventQueue.getInstance().addPostprocessor(myKeyProcessor,null);
}
