{
  final boolean isChar=e.getKeyChar() != KeyEvent.CHAR_UNDEFINED;
  boolean hasActionModifiers=e.isAltDown() | e.isControlDown() | e.isMetaDown();
  boolean plainType=isChar && !hasActionModifiers;
  final boolean isEnter=e.getKeyCode() == KeyEvent.VK_ENTER;
  boolean noModifierKeyIsPressed=e.getKeyCode() != KeyEvent.VK_CONTROL && e.getKeyCode() != KeyEvent.VK_ALT && e.getKeyCode() != KeyEvent.VK_META && e.getKeyCode() != KeyEvent.VK_SHIFT;
  if (e.getID() == KeyEvent.KEY_PRESSED && plainType && !isEnter) {
    myRecordingMacro.appendKeytyped(e.getKeyChar(),e.getKeyCode(),e.getModifiers());
  }
 else   if (e.getID() == KeyEvent.KEY_PRESSED && noModifierKeyIsPressed && (!plainType || isEnter)) {
    final boolean waiting=IdeEventQueue.getInstance().getKeyEventDispatcher().isWaitingForSecondKeyStroke();
    if (!e.equals(myLastActionInputEvent) && !waiting) {
      final String stroke=KeyStroke.getKeyStrokeForEvent(e).toString();
      final int pressed=stroke.indexOf("pressed");
      String key=stroke.substring(pressed + "pressed".length());
      String modifiers=stroke.substring(0,pressed);
      String ready=(modifiers.replaceAll("ctrl","control").trim() + " " + key.trim()).trim();
      myRecordingMacro.appendShortuct(ready);
      myLastActionInputEvent=null;
    }
  }
}
