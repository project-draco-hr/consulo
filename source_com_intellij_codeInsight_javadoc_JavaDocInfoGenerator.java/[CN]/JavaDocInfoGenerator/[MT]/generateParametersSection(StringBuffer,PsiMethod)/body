{
  PsiDocComment comment=method.getDocComment();
  PsiParameter[] params=method.getParameterList().getParameters();
  PsiDocTag[] localTags=comment != null ? localTags=comment.findTagsByName("param") : PsiDocTag.EMPTY_ARRAY;
  LinkedList<Pair<PsiDocTag,InheritDocProvider<PsiDocTag>>> collectedTags=new LinkedList<Pair<PsiDocTag,InheritDocProvider<PsiDocTag>>>();
  for (int i=0; i < params.length; i++) {
    final String paramName=params[i].getName();
    Pair<PsiDocTag,InheritDocProvider<PsiDocTag>> parmTag=null;
    for (int j=0; j < localTags.length; j++) {
      PsiDocTag localTag=localTags[j];
      PsiDocTagValue value=localTag.getValueElement();
      if (value != null) {
        String tagName=value.getText();
        if (tagName != null && tagName.equals(paramName)) {
          parmTag=new Pair<PsiDocTag,InheritDocProvider<PsiDocTag>>(localTag,new InheritDocProvider<PsiDocTag>(){
            public Pair<PsiDocTag,InheritDocProvider<PsiDocTag>> getInheritDoc(){
              return findInheritDocTag(method,parameterLocator(paramName));
            }
            public PsiClass getElement(){
              return method.getContainingClass();
            }
          }
);
          break;
        }
      }
    }
    if (parmTag == null) {
      parmTag=findInheritDocTag(method,parameterLocator(paramName));
    }
    if (parmTag != null) {
      collectedTags.addLast(parmTag);
    }
  }
  if (collectedTags.size() > 0) {
    buffer.append("<DD><DL>");
    buffer.append("<DT><b>Parameters:</b>");
    for (Iterator<Pair<PsiDocTag,InheritDocProvider<PsiDocTag>>> i=collectedTags.iterator(); i.hasNext(); ) {
      Pair<PsiDocTag,InheritDocProvider<PsiDocTag>> tag=i.next();
      PsiElement[] elements=tag.first.getDataElements();
      if (elements.length == 0)       continue;
      String text=elements[0].getText();
      buffer.append("<DD>");
      int spaceIndex=text.indexOf(' ');
      if (spaceIndex < 0) {
        spaceIndex=text.length();
      }
      String parmName=text.substring(0,spaceIndex);
      buffer.append("<code>");
      buffer.append(parmName);
      buffer.append("</code>");
      buffer.append(" - ");
      buffer.append(text.substring(spaceIndex));
      generateValue(buffer,elements,1,mapProvider(tag.second,true));
    }
    buffer.append("</DD></DL></DD>");
  }
}
