{
  RootInfo moduleContentInfo=findModuleRootInfo(hierarchy);
  RootInfo libraryClassInfo=findLibraryRootInfo(hierarchy,false);
  RootInfo librarySourceInfo=findLibraryRootInfo(hierarchy,true);
  if (moduleContentInfo == null && libraryClassInfo == null && librarySourceInfo == null) {
    return new Pair<DirectoryInfo,String>(null,null);
  }
  RootInfo sourceRootInfo=findPackageRootInfo(hierarchy,moduleContentInfo,null,librarySourceInfo);
  VirtualFile sourceRoot=sourceRootInfo != null ? sourceRootInfo.root : null;
  RootInfo moduleSourceRootInfo=findPackageRootInfo(hierarchy,moduleContentInfo,null,null);
  boolean inModuleSources=moduleSourceRootInfo != null;
  boolean inLibrarySource=librarySourceInfo != null;
  int rootTypeId=moduleSourceRootInfo != null ? moduleSourceRootInfo.rootTypeId : 0;
  OrderEntry[] entries=getOrderEntries(hierarchy,moduleContentInfo,libraryClassInfo,librarySourceInfo);
  DirectoryInfo directoryInfo=new DirectoryInfo(moduleContentInfo != null ? moduleContentInfo.contentRootOf : null,moduleContentInfo != null ? moduleContentInfo.root : null,sourceRoot,libraryClassInfo != null ? libraryClassInfo.root : null,(byte)DirectoryInfo.createSourceRootTypeData(inModuleSources,inLibrarySource,rootTypeId),entries);
  String packagePrefix=calcPackagePrefix(info,hierarchy,moduleContentInfo,libraryClassInfo,librarySourceInfo);
  return Pair.create(directoryInfo,packagePrefix);
}
