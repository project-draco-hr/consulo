{
  Map<String,List<VirtualFile>> cacheMap=includeLibrarySources ? myDirectoriesByPackageNameCacheWithLibSrc : myDirectoriesByPackageNameCache;
  final List<VirtualFile> cachedResult=cacheMap.get(packageName);
  if (cachedResult != null) {
    return cachedResult;
  }
  final ArrayList<VirtualFile> result=ContainerUtil.newArrayList();
  Set<VirtualFile> packagePrefixRoots=myPackagePrefixRoots.get(packageName);
  if (packagePrefixRoots != null) {
    for (    VirtualFile file : packagePrefixRoots) {
      if (isValidPackageDirectory(includeLibrarySources,file)) {
        result.add(file);
      }
    }
  }
  if (StringUtil.isNotEmpty(packageName)) {
    String parentPackage=StringUtil.getPackageName(packageName);
    String shortName=StringUtil.getShortName(packageName);
    for (    VirtualFile parentDir : getDirectoriesByPackageName(parentPackage,includeLibrarySources)) {
      VirtualFile child=parentDir.findChild(shortName);
      if (isValidPackageDirectory(includeLibrarySources,child)) {
        result.add(child);
      }
    }
  }
  if (!result.isEmpty()) {
    cacheMap.put(packageName,result);
  }
  return result;
}
