{
  for (  Map.Entry<VirtualFile,DirectoryInfo> entry : myRoots.entrySet()) {
    DirectoryInfo info=entry.getValue();
    Module module=info.getModule();
    VirtualFile contentRoot=info.getContentRoot();
    VirtualFile libraryClassRoot=info.getLibraryClassRoot();
    boolean inModuleSource=info.isInModuleSource();
    boolean inLibrarySource=info.isInLibrarySource();
    OrderEntry[] orderEntries=info.getOrderEntries();
    boolean nested=false;
    VirtualFile eachFile=entry.getKey().getParent();
    while (eachFile != null) {
      DirectoryInfo eachInfo=myRoots.get(eachFile);
      if (eachInfo != null) {
        nested=true;
        if (eachInfo.getLibraryClassRoot() != null && libraryClassRoot == null && !info.isInModuleSource()) {
          orderEntries=eachInfo.getOrderEntries();
        }
        if (module == null) {
          module=eachInfo.getModule();
        }
        if (libraryClassRoot == null) {
          libraryClassRoot=eachInfo.getLibraryClassRoot();
        }
        if (contentRoot == null) {
          contentRoot=eachInfo.getContentRoot();
        }
        inModuleSource|=eachInfo.isInModuleSource();
        inLibrarySource|=eachInfo.isInLibrarySource();
      }
      if (isAnyExcludeRoot(eachFile)) {
        break;
      }
      eachFile=eachFile.getParent();
    }
    if (nested) {
      int sourceRootTypeData=DirectoryInfo.createSourceRootTypeData(inModuleSource,inLibrarySource,info.getSourceRootTypeId());
      if (orderEntries.length == 0)       orderEntries=null;
      entry.setValue(info.with(module,contentRoot,info.getSourceRoot(),libraryClassRoot,sourceRootTypeData,orderEntries));
    }
  }
}
