{
  myNameField=new NameSuggestionsField(myProject);
  myNameField.addDataChangedListener(new NameSuggestionsField.DataChanged(){
    public void dataChanged(){
      updateOkStatus();
    }
  }
);
  JPanel panel=new JPanel(new GridBagLayout());
  GridBagConstraints gbConstraints=new GridBagConstraints();
  gbConstraints.insets=new Insets(4,4,4,4);
  gbConstraints.anchor=GridBagConstraints.WEST;
  gbConstraints.fill=GridBagConstraints.BOTH;
  gbConstraints.gridwidth=1;
  gbConstraints.weightx=0;
  gbConstraints.weighty=0;
  gbConstraints.gridx=0;
  gbConstraints.gridy=0;
  JLabel type=new JLabel(RefactoringBundle.message("variable.of.type"));
  panel.add(type,gbConstraints);
  gbConstraints.gridx++;
  myTypeSelector=myTypeSelectorManager.getTypeSelector();
  panel.add(myTypeSelector.getComponent(),gbConstraints);
  gbConstraints.gridwidth=1;
  gbConstraints.weightx=0;
  gbConstraints.weighty=0;
  gbConstraints.gridx=0;
  gbConstraints.gridy=1;
  JLabel namePrompt=new JLabel(RefactoringBundle.message("name.prompt"));
  namePrompt.setLabelFor(myNameField.getComponent());
  panel.add(namePrompt,gbConstraints);
  gbConstraints.gridwidth=1;
  gbConstraints.weightx=1;
  gbConstraints.gridx=1;
  gbConstraints.gridy=1;
  panel.add(myNameField.getComponent(),gbConstraints);
  myNameSuggestionsManager=new NameSuggestionsManager(myTypeSelector,myNameField,new NameSuggestionsGenerator(){
    public SuggestedNameInfo getSuggestedNameInfo(    PsiType type){
      final CodeStyleManager codeStyleManager=CodeStyleManager.getInstance(myProject);
      final SuggestedNameInfo nameInfo=codeStyleManager.suggestVariableName(VariableKind.LOCAL_VARIABLE,null,myExpression,type);
      return codeStyleManager.suggestUniqueVariableName(nameInfo,myExpression,false);
    }
    public Pair<LookupItemPreferencePolicy,Set<LookupItem>> completeVariableName(    String prefix,    PsiType type){
      LinkedHashSet<LookupItem> set=new LinkedHashSet<LookupItem>();
      LookupItemPreferencePolicy policy=CompletionUtil.completeVariableNameForRefactoring(myProject,set,prefix,type,VariableKind.LOCAL_VARIABLE);
      return new Pair<LookupItemPreferencePolicy,Set<LookupItem>>(policy,set);
    }
  }
,myProject);
  myNameSuggestionsManager.setLabelsFor(type,namePrompt);
  return panel;
}
