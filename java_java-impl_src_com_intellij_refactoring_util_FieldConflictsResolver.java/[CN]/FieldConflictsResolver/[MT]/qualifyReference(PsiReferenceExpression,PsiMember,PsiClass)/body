{
  PsiManager manager=referenceExpression.getManager();
  PsiReferenceExpression expressionFromText;
  final PsiElementFactory factory=JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();
  if (qualifyingClass == null) {
    final PsiClass parentClass=PsiTreeUtil.getParentOfType(referenceExpression,PsiClass.class);
    final PsiClass containingClass=member.getContainingClass();
    if (parentClass != null && !InheritanceUtil.isInheritorOrSelf(parentClass,containingClass,true)) {
      expressionFromText=(PsiReferenceExpression)factory.createExpressionFromText("A.this." + member.getName(),null);
      final PsiJavaCodeReferenceElement classQualifier=((PsiThisExpression)expressionFromText.getQualifierExpression()).getQualifier();
      classQualifier.replace(factory.createClassReferenceElement(containingClass));
    }
 else {
      expressionFromText=(PsiReferenceExpression)factory.createExpressionFromText("this." + member.getName(),null);
    }
  }
 else {
    expressionFromText=(PsiReferenceExpression)factory.createExpressionFromText("A." + member.getName(),null);
    final PsiReferenceExpression qualifier=factory.createReferenceExpression(qualifyingClass);
    expressionFromText.getQualifierExpression().replace(qualifier);
  }
  CodeStyleManager codeStyleManager=manager.getCodeStyleManager();
  expressionFromText=(PsiReferenceExpression)codeStyleManager.reformat(expressionFromText);
  return (PsiReferenceExpression)referenceExpression.replace(expressionFromText);
}
