{
  final SelectionResult<Long> selected=myWiseSelection.getSelected();
  final SelectionResult<Long> unselected=myWiseSelection.getUnselected();
  final List<CommittedChangeList> result=new LinkedList<CommittedChangeList>();
  result.addAll(myListsEngine.getCurrent());
  while (myListsEngine.hasNext()) {
    result.addAll(myListsEngine.next());
  }
  if (selected.isAll()) {
    final Set<Long> excluded=unselected.getMarked();
    for (Iterator<CommittedChangeList> iterator=result.iterator(); iterator.hasNext(); ) {
      final CommittedChangeList list=iterator.next();
      if (excluded.contains(list.getNumber()))       iterator.remove();
    }
  }
 else {
    final Set<Long> included=selected.getMarked();
    for (Iterator<CommittedChangeList> iterator=result.iterator(); iterator.hasNext(); ) {
      final CommittedChangeList list=iterator.next();
      if (!included.contains(list.getNumber()))       iterator.remove();
    }
  }
  return result;
}
