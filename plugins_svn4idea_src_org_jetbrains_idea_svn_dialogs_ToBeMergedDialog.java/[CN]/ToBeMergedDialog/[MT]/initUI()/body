{
  final JTabbedPane pane=new JTabbedPane();
  myRevisionsList=new JList();
  final PagedListWithActions.InnerComponentManager<CommittedChangeList> listsManager=new PagedListWithActions.InnerComponentManager<CommittedChangeList>(){
    public Component getComponent(){
      return myRevisionsList;
    }
    public void setData(    List<CommittedChangeList> committedChangeLists){
      myRevisionsList.setListData(ArrayUtil.toObjectArray(committedChangeLists));
    }
    public void refresh(){
      myRevisionsList.revalidate();
      myRevisionsList.repaint();
    }
  }
;
  final PagedListWithActions<CommittedChangeList> byRevisions=new PagedListWithActions<CommittedChangeList>(myListsEngine,listsManager,new MySelectAll(),new MyUnselectAll());
  mySplitter=new Splitter(false,0.7f);
  mySplitter.setFirstComponent(byRevisions.getComponent());
  myRevisionsList.setListData(ArrayUtil.toObjectArray(myListsEngine.getCurrent()));
  myRevisionsList.setCellRenderer(new MyListCellRenderer());
  myRepositoryChangesBrowser=new RepositoryChangesBrowser(myProject,Collections.<CommittedChangeList>emptyList(),Collections.<Change>emptyList(),null);
  myRepositoryChangesBrowser.getDiffAction().registerCustomShortcutSet(CommonShortcuts.getDiff(),myRevisionsList);
  setChangesDecorator();
  mySplitter.setSecondComponent(myRepositoryChangesBrowser);
  mySplitter.setDividerWidth(2);
  addRevisionListListeners();
  pane.add("Revisions",mySplitter);
  final RepositoryChangesBrowser browser=new RepositoryChangesBrowser(myProject,Collections.<CommittedChangeList>emptyList(),Collections.<Change>emptyList(),null);
  browser.setChangesToDisplay(myChanges);
  pane.add("Files",browser);
  myPanel.add(pane,BorderLayout.CENTER);
}
