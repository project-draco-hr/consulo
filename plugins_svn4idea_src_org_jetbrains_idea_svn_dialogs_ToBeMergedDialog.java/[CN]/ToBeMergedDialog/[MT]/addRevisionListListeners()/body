{
  final int checkboxWidth=new JCheckBox().getPreferredSize().width;
  new ClickListener(){
    @Override public boolean onClick(    MouseEvent e,    int clickCount){
      final int idx=myRevisionsList.rowAtPoint(e.getPoint());
      if (idx >= 0) {
        final Rectangle baseRect=myRevisionsList.getCellRect(idx,0,false);
        baseRect.setSize(checkboxWidth,baseRect.height);
        if (baseRect.contains(e.getPoint())) {
          final SvnChangeList changeList=(SvnChangeList)myRevisionsList.getModel().getValueAt(idx,0);
          final long number=changeList.getNumber();
          toggleInclusion(number);
          myRevisionsList.repaint(baseRect);
        }
      }
      return true;
    }
  }
.installOn(myRevisionsList);
  myRevisionsList.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    KeyEvent e){
      if (KeyEvent.VK_SPACE == e.getKeyCode()) {
        final List selected=myRevisionsList.getSelectedObjects();
        if (selected == null || selected.isEmpty())         return;
        for (        Object o : selected) {
          if (o instanceof SvnChangeList) {
            final SvnChangeList changeList=(SvnChangeList)o;
            toggleInclusion(changeList.getNumber());
          }
        }
        myRevisionsList.repaint();
        e.consume();
      }
    }
  }
);
}
