{
  final File archiveFile=new File(FileUtil.toSystemDependentName(archivePath));
  if (parents.isEmpty()) {
    LOG.debug("  adding to archive " + archivePath);
    JBZipFile file=getOrCreateZipFile(archiveFile);
    try {
      final String fullPathInArchive=DeploymentUtil.trimForwardSlashes(DeploymentUtil.appendToPath(pathInArchive,myRelativeOutputPath));
      final JBZipEntry entry=file.getOrCreateEntry(fullPathInArchive);
      entry.setData(FileUtil.loadFileBytes(myFile));
    }
  finally {
      file.close();
    }
    return;
  }
  final CompositePackagingElement<?> element=parents.get(0);
  final String nextPathInArchive=DeploymentUtil.trimForwardSlashes(DeploymentUtil.appendToPath(pathInArchive,element.getName()));
  final List<CompositePackagingElement<?>> parentsTrail=parents.subList(1,parents.size());
  if (element instanceof ArchivePackagingElement) {
    JBZipFile zipFile=getOrCreateZipFile(archiveFile);
    try {
      final JBZipEntry entry=zipFile.getOrCreateEntry(nextPathInArchive);
      LOG.debug("  extracting to temp file: " + nextPathInArchive + " from "+ archivePath);
      final File tempFile=FileUtil.createTempFile("packageFile" + FileUtil.sanitizeFileName(nextPathInArchive),FileUtilRt.getExtension(PathUtil.getFileName(nextPathInArchive)));
      if (entry.getSize() != -1) {
        FileUtil.writeToFile(tempFile,entry.getData());
      }
      packFile(FileUtil.toSystemIndependentName(tempFile.getAbsolutePath()),"",parentsTrail);
      entry.setData(FileUtil.loadFileBytes(tempFile));
      FileUtil.delete(tempFile);
    }
  finally {
      zipFile.close();
    }
  }
 else {
    packFile(archivePath,nextPathInArchive,parentsTrail);
  }
}
