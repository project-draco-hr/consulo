{
  LOG.debug("Start packaging file: " + file.getPath());
  final Collection<Trinity<Artifact,PackagingElementPath,String>> items=ArtifactUtil.findContainingArtifactsWithOutputPaths(file,project);
  File ioFile=VfsUtil.virtualToIoFile(file);
  for (  Trinity<Artifact,PackagingElementPath,String> item : items) {
    final Artifact artifact=item.getFirst();
    final String outputPath=artifact.getOutputPath();
    if (!StringUtil.isEmpty(outputPath)) {
      PackageFileWorker worker=new PackageFileWorker(ioFile,item.getThird());
      LOG.debug(" package to " + outputPath);
      worker.packageFile(outputPath,item.getSecond().getParents());
    }
  }
}
