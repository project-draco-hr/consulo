{
  final ActionCallback callback=new ActionCallback();
  ProgressManager.getInstance().run(new Task.Backgroundable(project,"Packaging Files"){
    @Override public void run(    @NotNull ProgressIndicator indicator){
      try {
        for (        final VirtualFile file : files) {
          indicator.checkCanceled();
          new ReadAction(){
            protected void run(            final Result result){
              try {
                packageFile(file,project,artifacts);
              }
 catch (              IOException e) {
                String message=CompilerBundle.message("message.tect.package.file.io.error",e.toString());
                Notifications.Bus.notify(new Notification("Package File","Cannot package file",message,NotificationType.ERROR));
              }
            }
          }
.execute();
          callback.setDone();
        }
      }
  finally {
        if (!callback.isDone()) {
          callback.setRejected();
        }
      }
    }
  }
);
  return callback;
}
