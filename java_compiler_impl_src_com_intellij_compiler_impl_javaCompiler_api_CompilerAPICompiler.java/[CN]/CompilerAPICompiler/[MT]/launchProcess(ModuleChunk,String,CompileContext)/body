{
  final IOException[] ex={null};
  @NonNls final List<String> commandLine=ApplicationManager.getApplication().runReadAction(new Computable<List<String>>(){
    public List<String> compute(){
      try {
        List<String> commandLine=new ArrayList<String>();
        JavacSettings javacSettings=CompilerAPIConfiguration.getSettings(myProject,CompilerAPIConfiguration.class);
        final List<String> additionalOptions=JavacCompiler.addAdditionalSettings(commandLine,javacSettings,false,JavaSdkVersion.JDK_1_6,chunk,compileContext.isAnnotationProcessorsEnabled());
        JavacCompiler.addCommandLineOptions(chunk,commandLine,outputDir,chunk.getJdk(),false,false,null,false,false,false);
        commandLine.addAll(additionalOptions);
        return commandLine;
      }
 catch (      IOException e) {
        ex[0]=e;
      }
      return null;
    }
  }
);
  if (ex[0] != null) {
    throw ex[0];
  }
  return new MyProcess(commandLine,chunk,outputDir,compileContext);
}
