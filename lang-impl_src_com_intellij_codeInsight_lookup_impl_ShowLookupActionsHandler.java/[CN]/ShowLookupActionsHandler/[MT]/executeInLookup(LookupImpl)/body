{
  final LookupElement element=lookup.getCurrentItem();
  if (element == null) {
    return;
  }
  final Collection<LookupElementAction> actions=lookup.getActionsFor(element);
  if (actions.isEmpty()) {
    return;
  }
  final BaseListPopupStep<LookupElementAction> step=new BaseListPopupStep<LookupElementAction>(null,new ArrayList<LookupElementAction>(actions)){
    @Override public PopupStep onChosen(    LookupElementAction selectedValue,    boolean finalChoice){
      selectedValue.performLookupAction();
      lookup.hide();
      return FINAL_CHOICE;
    }
    @Override public Icon getIconFor(    LookupElementAction aValue){
      return aValue.getIcon();
    }
    @NotNull @Override public String getTextFor(    LookupElementAction value){
      return value.getText();
    }
  }
;
  final Rectangle bounds=lookup.getCurrentItemBounds();
  final ListPopup popup=JBPopupFactory.getInstance().createListPopup(step);
  final JComponent component=lookup.getComponent();
  popup.show(new RelativePoint(component,new Point(bounds.x + bounds.width,bounds.y)));
}
