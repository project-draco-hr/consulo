{
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  if (project == null)   return;
  if (ProjectLevelVcsManager.getInstance(project).isBackgroundVcsOperationRunning()) {
    return;
  }
  final Change[] changes=e.getData(VcsDataKeys.CHANGES);
  final ChangeList list=ChangesUtil.getChangeListIfOnlyOne(project,changes);
  if ((list == null) || (!(list instanceof LocalChangeList)))   return;
  ChangeListManager.getInstance(project).invokeAfterUpdate(new Runnable(){
    public void run(){
      final List<Change> changesList=Arrays.asList(changes);
      final List<CommitExecutor> executors=CommitChangeListDialog.collectExecutors(project,changesList);
      CommitChangeListDialog.commitChanges(project,changesList,(LocalChangeList)list,executors,true,null);
    }
  }
,InvokeAfterUpdateMode.SYNCHRONOUS_CANCELLABLE,VcsBundle.message("waiting.changelists.update.for.show.commit.dialog.message"),null);
}
