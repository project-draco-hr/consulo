{
  final ModifiableModuleModel modifiableModel=ModuleManager.getInstance(myProject).getModifiableModel();
  try {
    modifiableModel.renameModule(myModule,inputString);
  }
 catch (  ModuleWithNameAlreadyExists moduleWithNameAlreadyExists) {
    Messages.showErrorDialog(myProject,"Module named '" + inputString + "' already exists","Rename Module");
    return false;
  }
  final Ref<Boolean> success=Ref.create(Boolean.TRUE);
  CommandProcessor.getInstance().executeCommand(myProject,new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          try {
            modifiableModel.commit();
          }
 catch (          final ModuleCircularDependencyException e) {
            ApplicationManager.getApplication().invokeLater(new Runnable(){
              public void run(){
                Messages.showErrorDialog(myProject,"Renaming module '" + myModule.getName() + "' to '"+ inputString+ "'\n"+ "will introduce circular dependency between \n"+ "modules '"+ e.getModuleName1()+ "' and '"+ e.getModuleName2()+ "'","Rename Module");
              }
            }
);
            modifiableModel.dispose();
            success.set(Boolean.FALSE);
            return;
          }
        }
      }
);
    }
  }
,"Renaming module " + myModule.getName(),null);
  return success.get().booleanValue();
}
