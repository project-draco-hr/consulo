{
  myProject=project;
  myGuard=new ApplicationLevelNumberConnectionsGuardImpl();
  myCancelHelper=CancelHelper.getInstance(project);
  mySvnLog=new ProxySvnLog(SVNDebugLog.getDefaultLog(),myCancelHelper);
  myCanceller=SvnIdeaRepositoryPoolManager.createCanceller(myCancelHelper);
  myListener=new ISVNConnectionListener(){
    @Override public void connectionOpened(    SVNRepository repository){
      myGuard.connectionOpened();
    }
    @Override public void connectionClosed(    SVNRepository repository){
      repository.removeConnectionListener(myListener);
      myGuard.connectionClosed();
    }
  }
;
  final ThrowableConvertor<SVNURL,SVNRepository,SVNException> creator=new ThrowableConvertor<SVNURL,SVNRepository,SVNException>(){
    @Override public SVNRepository convert(    SVNURL svnurl) throws SVNException {
      MockSvnRepository repository=new MockSvnRepository(svnurl,ISVNSession.DEFAULT);
      repository.setDebugLog(mySvnLog);
      repository.setCanceller(myCanceller);
      repository.addConnectionListener(myListener);
      return repository;
    }
  }
;
}
