{
  final ID autoReleasePool=Foundation.invoke("NSAutoreleasePool","new");
  final ID app=Foundation.invoke("NSRunningApplication","currentApplication");
  final ID executableURL=Foundation.invoke(app,Foundation.createSelector("executableURL"));
  final ID stringURL=Foundation.invoke(executableURL,Foundation.createSelector("absoluteString"));
  try {
    final String executablePath=Foundation.toStringViaUTF8(stringURL);
    final URL url=new URL(executablePath);
    final String path=url.getPath();
    if (path.contains(".app")) {
      final int appIndex=path.indexOf(".app");
      final String appPath=path.substring(0,appIndex + 4);
      final String relaunchPath=path.substring(0,path.lastIndexOf('/')) + "/../../bin/relaunch";
      final long processId=Foundation.invoke(app,Foundation.createSelector("processIdentifier")).longValue();
      final ID args=Foundation.invoke(Foundation.getClass("NSArray"),Foundation.createSelector("arrayWithObjects:"),new Object[]{Foundation.cfString(appPath),Foundation.cfString(String.valueOf(processId))});
      Foundation.invoke(Foundation.getClass("NSTask"),Foundation.createSelector("launchedTaskWithLaunchPath:arguments:"),Foundation.cfString(relaunchPath),args);
    }
  }
 catch (  MalformedURLException e) {
    LOG.error(e);
  }
 finally {
    Foundation.invoke(autoReleasePool,Foundation.createSelector("release"));
    ((ApplicationEx)ApplicationManager.getApplication()).exit(true);
  }
}
