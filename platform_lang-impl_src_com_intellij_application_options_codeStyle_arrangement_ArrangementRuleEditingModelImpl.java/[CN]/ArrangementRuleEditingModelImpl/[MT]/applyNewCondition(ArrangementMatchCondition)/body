{
  myMatchCondition=newNode;
  HierarchicalArrangementConditionNode grouped=myGrouper.group(newNode);
  Pair<ArrangementTreeNode,Integer> replacement=ArrangementConfigUtil.map(null,grouped,null);
  ArrangementTreeNode newBottom=replacement.first;
  ArrangementTreeNode newTop=ArrangementConfigUtil.getRoot(newBottom);
  final TIntIntHashMap rowChanges=ArrangementConfigUtil.replace(myTopMost,myBottomMost,newTop,myTreeModel,myRootVisible);
  myBottomMost=newBottom;
  for (ArrangementTreeNode node=myBottomMost.getParent(); node != null; node=node.getParent()) {
    ArrangementMatchCondition condition=node.getBackingCondition();
    if (condition != null && condition.equals(newTop.getBackingCondition())) {
      newTop=node;
    }
  }
  myTopMost=newTop;
  rowChanges.remove(myRow);
  int newRow=ArrangementConfigUtil.getRow(myBottomMost,myRootVisible);
  rowChanges.put(myRow,newRow);
  myRow=newRow;
  refreshConditions();
  notifyListeners(rowChanges);
}
