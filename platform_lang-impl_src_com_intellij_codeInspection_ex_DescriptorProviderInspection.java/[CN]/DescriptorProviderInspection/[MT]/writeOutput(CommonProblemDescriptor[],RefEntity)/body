{
  final Element parentNode=new Element(InspectionsBundle.message("inspection.problems"));
  exportResults(descriptions,refElement,parentNode);
  final List list=parentNode.getChildren();
  @NonNls final String ext=".xml";
  final String fileName=ourOutputPath + File.separator + getShortName()+ ext;
  final PathMacroManager pathMacroManager=PathMacroManager.getInstance(getContext().getProject());
  PrintWriter printWriter=null;
  try {
    new File(ourOutputPath).mkdirs();
    final File file=new File(fileName);
    final CharArrayWriter writer=new CharArrayWriter();
    if (!file.exists()) {
      writer.append("<").append(InspectionsBundle.message("inspection.problems")).append(" " + GlobalInspectionContextImpl.LOCAL_TOOL_ATTRIBUTE + "=\"").append(Boolean.toString(this instanceof LocalInspectionToolWrapper)).append("\">\n");
    }
    for (    Object o : list) {
      final Element element=(Element)o;
      pathMacroManager.collapsePaths(element);
      JDOMUtil.writeElement(element,writer,"\n");
    }
    printWriter=new PrintWriter(new BufferedWriter(new OutputStreamWriter(new FileOutputStream(fileName,true),"UTF-8")));
    printWriter.append("\n");
    printWriter.append(writer.toString());
  }
 catch (  IOException e) {
    LOG.error(e);
  }
 finally {
    if (printWriter != null) {
      printWriter.close();
    }
  }
}
