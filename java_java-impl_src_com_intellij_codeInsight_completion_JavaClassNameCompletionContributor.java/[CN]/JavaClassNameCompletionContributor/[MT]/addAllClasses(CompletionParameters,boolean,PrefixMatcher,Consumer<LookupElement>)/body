{
  final PsiElement insertedElement=parameters.getPosition();
  final ElementFilter filter;
  if (JavaSmartCompletionContributor.AFTER_THROW_NEW.accepts(insertedElement) || JavaCompletionContributor.INSIDE_METHOD_THROWS_CLAUSE.accepts(insertedElement) || JavaCompletionContributor.IN_CATCH_TYPE.accepts(insertedElement)|| JavaCompletionContributor.IN_MULTI_CATCH_TYPE.accepts(insertedElement)) {
    filter=new AssignableFromFilter(CommonClassNames.JAVA_LANG_THROWABLE);
  }
 else   if (JavaCompletionContributor.IN_RESOURCE_TYPE.accepts(insertedElement)) {
    filter=new AssignableFromFilter(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE);
  }
 else   if (IN_TYPE_PARAMETER.accepts(insertedElement)) {
    filter=new ExcludeDeclaredFilter(new ClassFilter(PsiTypeParameter.class));
  }
 else {
    filter=TrueFilter.INSTANCE;
  }
  final boolean inJavaContext=parameters.getPosition() instanceof PsiIdentifier;
  if (AFTER_NEW.accepts(insertedElement)) {
    final PsiExpression expr=PsiTreeUtil.getContextOfType(insertedElement,PsiExpression.class,true);
    for (    final ExpectedTypeInfo info : ExpectedTypesProvider.getExpectedTypes(expr,true)) {
      final PsiType type=info.getType();
      final PsiClass psiClass=PsiUtil.resolveClassInType(type);
      if (psiClass != null) {
        consumer.consume(createClassLookupItem(psiClass,inJavaContext));
      }
      final PsiType defaultType=info.getDefaultType();
      if (!defaultType.equals(type)) {
        final PsiClass defClass=PsiUtil.resolveClassInType(defaultType);
        if (defClass != null) {
          consumer.consume(createClassLookupItem(defClass,inJavaContext));
        }
      }
    }
  }
  final boolean lookingForAnnotations=PsiJavaPatterns.psiElement().afterLeaf("@").accepts(insertedElement);
  AllClassesGetter.processJavaClasses(parameters,matcher,filterByScope,new Consumer<PsiClass>(){
    @Override public void consume(    PsiClass psiClass){
      if (lookingForAnnotations && !psiClass.isAnnotationType())       return;
      if (filter.isAcceptable(psiClass,insertedElement)) {
        consumer.consume(createClassLookupItem(psiClass,inJavaContext));
      }
    }
  }
);
}
