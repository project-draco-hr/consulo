{
  int N=100;
  for (int ti=0; ; ti++) {
    if (ti % 10000 == 0)     System.out.println(ti);
    DocumentEx document=(DocumentEx)EditorFactory.getInstance().createDocument(StringUtil.repeatSymbol(' ',N));
    Random gen=new Random();
    List<Pair<RangeMarker,TextRange>> adds=new ArrayList<Pair<RangeMarker,TextRange>>();
    List<Pair<RangeMarker,TextRange>> dels=new ArrayList<Pair<RangeMarker,TextRange>>();
    try {
      for (int i=0; i < 30; i++) {
        int x=gen.nextInt(N);
        int y=x + gen.nextInt(N - x);
        if (gen.nextBoolean()) {
          x=0;
          y=document.getTextLength();
        }
        RangeMarkerEx r=(RangeMarkerEx)document.createRangeMarker(x,y);
        adds.add(Pair.create((RangeMarker)r,TextRange.create(r)));
      }
      List<Pair<RangeMarker,TextRange>> candidates=new ArrayList<Pair<RangeMarker,TextRange>>(adds);
      while (!candidates.isEmpty()) {
        int size=candidates.size();
        int x=gen.nextInt(size);
        Pair<RangeMarker,TextRange> c=candidates.remove(x);
        RangeMarkerEx r=(RangeMarkerEx)c.first;
        assertEquals(size - 1,candidates.size());
        dels.add(c);
        r.dispose();
      }
    }
 catch (    AssertionError e) {
      String s="adds: ";
      for (      Pair<RangeMarker,TextRange> c : adds) {
        TextRange t=c.second;
        s+=t.getStartOffset() + "," + t.getEndOffset()+ ", ";
      }
      s+="\ndels: ";
      for (      Pair<RangeMarker,TextRange> c : dels) {
        int index=adds.indexOf(c);
        assertSame(c,adds.get(index));
        s+=index + ", ";
      }
      System.err.println(s);
      throw e;
    }
  }
}
