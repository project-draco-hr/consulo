{
  getDomManager().registerFileDescription(new DomFileDescription<MyBeans>(MyBeans.class,"beans","beans","util"){
    @Override protected void initializeFileDescription(){
      super.initializeFileDescription();
      registerNamespacePolicy("beans","beans");
      registerNamespacePolicy("util","util");
    }
  }
,getTestRootDisposable());
  final XmlFile psiFile=createXmlFile("<beans xmlns=\"beans\" xmlns:util=\"util\">" + "<util:list>" + "<ref>aaa</ref>"+ "<util:child>bbb</util:child>"+ "</util:list></beans>");
  final MyList listOrSet=assertInstanceOf(getDomManager().getFileElement(psiFile,MyBeans.class).getRootElement().getList(),MyList.class);
  assertNotNull(listOrSet.getXmlTag());
  final XmlTag listTag=psiFile.getDocument().getRootTag().findFirstSubTag("util:list");
  assertNotNull(getDomManager().getDomElement(listTag.findFirstSubTag("ref")));
  assertNotNull(getDomManager().getDomElement(listTag.findFirstSubTag("util:child")));
  assertEquals("aaa",listOrSet.getRef().getValue());
  assertEquals("bbb",listOrSet.getChild().getValue());
}
