{
  builder.advanceLexer();
  if (getTokenType(builder) != JavaDocTokenType.DOC_TAG_VALUE_TOKEN) {
    refStart.done(JavaDocElementType.DOC_METHOD_OR_FIELD_REF);
    return;
  }
  builder.advanceLexer();
  if (getTokenType(builder) == JavaDocTokenType.DOC_TAG_VALUE_LPAREN) {
    builder.advanceLexer();
    final PsiBuilder.Marker subValue=builder.mark();
    IElementType tokenType;
    while (TAG_VALUES_SET.contains(tokenType=getTokenType(builder))) {
      if (tokenType == JavaDocTokenType.DOC_TAG_VALUE_TOKEN) {
        builder.remapCurrentToken(JavaDocElementType.DOC_TYPE_HOLDER);
        builder.advanceLexer();
        while (TAG_VALUES_SET.contains(tokenType=getTokenType(builder)) && tokenType != JavaDocTokenType.DOC_TAG_VALUE_COMMA && tokenType != JavaDocTokenType.DOC_TAG_VALUE_RPAREN) {
          builder.advanceLexer();
        }
      }
 else       if (tokenType == JavaDocTokenType.DOC_TAG_VALUE_RPAREN) {
        subValue.done(JavaDocTokenType.DOC_TAG_VALUE_TOKEN);
        builder.advanceLexer();
        refStart.done(JavaDocElementType.DOC_METHOD_OR_FIELD_REF);
        return;
      }
 else {
        builder.advanceLexer();
      }
    }
    subValue.done(JavaDocTokenType.DOC_TAG_VALUE_TOKEN);
  }
  refStart.done(JavaDocElementType.DOC_METHOD_OR_FIELD_REF);
}
