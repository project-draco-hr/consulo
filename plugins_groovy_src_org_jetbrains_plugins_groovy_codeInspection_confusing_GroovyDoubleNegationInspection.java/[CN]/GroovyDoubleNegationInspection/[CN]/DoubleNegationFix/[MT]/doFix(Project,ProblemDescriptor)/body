{
  final GrUnaryExpression expression=(GrUnaryExpression)descriptor.getPsiElement();
  GrExpression operand=expression.getOperand();
  while (operand instanceof GrParenthesizedExpression) {
    final GrParenthesizedExpression parenthesizedExpression=(GrParenthesizedExpression)operand;
    operand=parenthesizedExpression.getOperand();
  }
  if (operand instanceof GrUnaryExpression) {
    final GrUnaryExpression prefixExpression=(GrUnaryExpression)operand;
    final GrExpression innerOperand=prefixExpression.getOperand();
    if (innerOperand == null) {
      return;
    }
    replaceExpression(expression,innerOperand.getText());
  }
 else   if (operand instanceof GrBinaryExpression) {
    final GrBinaryExpression binaryExpression=(GrBinaryExpression)operand;
    final GrExpression lhs=binaryExpression.getLeftOperand();
    final String lhsText=lhs.getText();
    final StringBuilder builder=new StringBuilder(lhsText);
    builder.append("==");
    final GrExpression rhs=binaryExpression.getRightOperand();
    if (rhs != null) {
      final String rhsText=rhs.getText();
      builder.append(rhsText);
    }
    replaceExpression(expression,builder.toString());
  }
}
