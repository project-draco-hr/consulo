{
  FindModel model=normalizeIfMultilined(findmodel);
  String toFind=model.getStringToFind();
  if (toFind.length() == 0) {
    return NOT_FOUND_RESULT;
  }
  if (model.isInCommentsOnly() || model.isInStringLiteralsOnly()) {
    return findInCommentsAndLiterals(text,textArray,offset,model,file);
  }
  if (model.isRegularExpressions()) {
    return findStringByRegularExpression(text,offset,model);
  }
  final StringSearcher searcher=createStringSearcher(model);
  int index;
  if (model.isForward()) {
    final int res=searcher.scan(text,textArray,offset,text.length());
    index=res < 0 ? -1 : res;
  }
 else {
    index=searcher.scan(text,textArray,0,offset);
  }
  if (index < 0) {
    return NOT_FOUND_RESULT;
  }
  return new FindResultImpl(index,index + toFind.length());
}
