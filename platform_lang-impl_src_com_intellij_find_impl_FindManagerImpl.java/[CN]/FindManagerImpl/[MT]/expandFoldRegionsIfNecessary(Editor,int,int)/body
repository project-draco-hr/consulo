{
  final FoldingModel foldingModel=editor.getFoldingModel();
  final FoldRegion[] regions;
  if (foldingModel instanceof FoldingModelEx) {
    regions=((FoldingModelEx)foldingModel).fetchTopLevel();
  }
 else {
    regions=foldingModel.getAllFoldRegions();
  }
  if (regions == null) {
    return;
  }
  int i=Arrays.binarySearch(regions,null,new Comparator<FoldRegion>(){
    @Override public int compare(    FoldRegion o1,    FoldRegion o2){
      if (o1 == null) {
        return startOffset - o2.getEndOffset();
      }
 else {
        return o1.getEndOffset() - startOffset;
      }
    }
  }
);
  if (i < 0) {
    i=-i - 1;
  }
 else {
    i++;
  }
  if (i >= regions.length) {
    return;
  }
  final List<FoldRegion> toExpand=new ArrayList<FoldRegion>();
  for (; i < regions.length; i++) {
    final FoldRegion region=regions[i];
    if (region.getStartOffset() >= endOffset) {
      break;
    }
    if (!region.isExpanded()) {
      toExpand.add(region);
    }
  }
  if (toExpand.isEmpty()) {
    return;
  }
  foldingModel.runBatchFoldingOperation(new Runnable(){
    @Override public void run(){
      for (      FoldRegion region : toExpand) {
        region.setExpanded(true);
      }
    }
  }
);
}
