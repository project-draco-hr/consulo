{
  final PsiElement resolved=ref.resolve();
  if (resolved instanceof PsiTypeParameter) {
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,ref,JavaErrorMessages.message("generics.cannot.instanceof.type.parameters"));
  }
  if (resolved instanceof PsiClass) {
    final PsiClass containingClass=((PsiClass)resolved).getContainingClass();
    if (containingClass != null && ref.getQualifier() == null && containingClass.getTypeParameters().length > 0) {
      return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,typeElement,JavaErrorMessages.message("illegal.generic.type.for.instanceof"));
    }
  }
  final PsiType[] parameters=ref.getTypeParameters();
  for (  PsiType parameterType : parameters) {
    if (parameterType != null && !(parameterType instanceof PsiWildcardType && ((PsiWildcardType)parameterType).getBound() == null)) {
      return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,typeElement,JavaErrorMessages.message("illegal.generic.type.for.instanceof"));
    }
  }
  return null;
}
