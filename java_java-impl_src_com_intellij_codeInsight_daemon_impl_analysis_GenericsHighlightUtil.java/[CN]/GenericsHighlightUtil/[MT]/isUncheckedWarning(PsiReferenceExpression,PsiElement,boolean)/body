{
  if (resolve instanceof PsiMethod) {
    final PsiMethod psiMethod=(PsiMethod)resolve;
    final LanguageLevel languageLevel=PsiUtil.getLanguageLevel(expression);
    if (!ignoreSuppressed) {
      if (SuppressManager.getInstance().isSuppressedFor(expression,"unchecked"))       return false;
    }
    if (psiMethod.isVarArgs()) {
      if (!languageLevel.isAtLeast(LanguageLevel.JDK_1_7) || !AnnotationUtil.isAnnotated(psiMethod,"java.lang.SafeVarargs",false)) {
        final int parametersCount=psiMethod.getParameterList().getParametersCount();
        final PsiParameter varargParameter=psiMethod.getParameterList().getParameters()[parametersCount - 1];
        final PsiType componentType=((PsiEllipsisType)varargParameter.getType()).getComponentType();
        if (!isReifiableType(componentType)) {
          final PsiElement parent=expression.getParent();
          if (parent instanceof PsiMethodCallExpression) {
            final PsiExpression[] args=((PsiMethodCallExpression)parent).getArgumentList().getExpressions();
            for (int i=parametersCount - 1; i < args.length; i++) {
              if (!isReifiableType(args[i].getType())) {
                return true;
              }
            }
          }
        }
      }
    }
  }
  return false;
}
