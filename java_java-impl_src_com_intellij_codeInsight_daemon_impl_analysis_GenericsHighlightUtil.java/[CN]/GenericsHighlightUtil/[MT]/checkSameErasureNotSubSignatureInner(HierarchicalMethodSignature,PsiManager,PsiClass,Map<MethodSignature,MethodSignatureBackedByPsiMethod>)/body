{
  PsiMethod method=signature.getMethod();
  JavaPsiFacade facade=JavaPsiFacade.getInstance(manager.getProject());
  if (!facade.getResolveHelper().isAccessible(method,aClass,null))   return null;
  MethodSignature signatureToErase=method.getSignature(PsiSubstitutor.EMPTY);
  MethodSignatureBackedByPsiMethod sameErasure=sameErasureMethods.get(signatureToErase);
  HighlightInfo info;
  if (sameErasure != null) {
    if (aClass instanceof PsiTypeParameter || MethodSignatureUtil.findMethodBySuperMethod(aClass,sameErasure.getMethod(),false) != null || !(InheritanceUtil.isInheritorOrSelf(sameErasure.getMethod().getContainingClass(),method.getContainingClass(),true) || InheritanceUtil.isInheritorOrSelf(method.getContainingClass(),sameErasure.getMethod().getContainingClass(),true))) {
      info=checkSameErasureNotSubSignatureOrSameClass(sameErasure,signature,aClass,method);
      if (info != null)       return info;
    }
  }
 else {
    sameErasureMethods.put(signatureToErase,signature);
  }
  List<HierarchicalMethodSignature> supers=signature.getSuperSignatures();
  for (  HierarchicalMethodSignature superSignature : supers) {
    info=checkSameErasureNotSubSignatureInner(superSignature,manager,aClass,sameErasureMethods);
    if (info != null)     return info;
  }
  return null;
}
