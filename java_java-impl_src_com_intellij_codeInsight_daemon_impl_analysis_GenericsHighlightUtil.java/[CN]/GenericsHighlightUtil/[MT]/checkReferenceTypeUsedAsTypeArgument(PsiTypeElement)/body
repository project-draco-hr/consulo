{
  final PsiType type=typeElement.getType();
  if (type != PsiType.NULL && type instanceof PsiPrimitiveType || type instanceof PsiWildcardType && ((PsiWildcardType)type).getBound() instanceof PsiPrimitiveType) {
    final PsiElement element=new PsiMatcherImpl(typeElement).parent(PsiMatchers.hasClass(PsiReferenceParameterList.class)).parent(PsiMatchers.hasClass(PsiJavaCodeReferenceElement.class,PsiNewExpression.class)).getElement();
    if (element == null)     return null;
    String description=JavaErrorMessages.message("generics.type.argument.cannot.be.of.primitive.type");
    return HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,typeElement,description);
  }
  return null;
}
