{
  final PsiType type=typeElement.getType();
  if (type != PsiType.NULL && type instanceof PsiPrimitiveType || type instanceof PsiWildcardType && ((PsiWildcardType)type).getBound() instanceof PsiPrimitiveType) {
    final PsiElement element=new PsiMatcherImpl(typeElement).parent(PsiMatchers.hasClass(PsiReferenceParameterList.class)).parent(PsiMatchers.hasClass(PsiJavaCodeReferenceElement.class,PsiNewExpression.class)).getElement();
    if (element == null)     return null;
    String description=JavaErrorMessages.message("generics.type.argument.cannot.be.of.primitive.type");
    final HighlightInfo highlightInfo=HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(typeElement).descriptionAndTooltip(description).create();
    PsiType toConvert=type;
    if (type instanceof PsiWildcardType) {
      toConvert=((PsiWildcardType)type).getBound();
    }
    if (toConvert instanceof PsiPrimitiveType) {
      final PsiClassType boxedType=((PsiPrimitiveType)toConvert).getBoxedType(typeElement);
      if (boxedType != null) {
        QuickFixAction.registerQuickFixAction(highlightInfo,new ReplacePrimitiveWithBoxedTypeAction(typeElement,toConvert.getPresentableText(),((PsiPrimitiveType)toConvert).getBoxedTypeName()));
      }
    }
    return highlightInfo;
  }
  return null;
}
