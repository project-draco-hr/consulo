{
  List<DiffContent> contents=request.getContents();
  List<String> titles=request.getContentTitles();
  List<Charset> charsets=ContainerUtil.map(contents,new Function<DiffContent,Charset>(){
    @Override public Charset fun(    DiffContent content){
      if (content instanceof EmptyContent)       return null;
      return ((DocumentContent)content).getCharset();
    }
  }
);
  List<LineSeparator> separators=ContainerUtil.map(contents,new Function<DiffContent,LineSeparator>(){
    @Override public LineSeparator fun(    DiffContent content){
      if (content instanceof EmptyContent)       return null;
      return ((DocumentContent)content).getLineSeparator();
    }
  }
);
  boolean equalCharsets=isEqualElements(charsets);
  boolean equalSeparators=isEqualElements(separators);
  List<JComponent> result=new ArrayList<JComponent>(contents.size());
  if (equalCharsets && equalSeparators && !ContainerUtil.exists(titles,Condition.NOT_NULL)) {
    return Collections.nCopies(titles.size(),null);
  }
  for (int i=0; i < contents.size(); i++) {
    JComponent title=createTitle(StringUtil.notNullize(titles.get(i)),contents.get(i),equalCharsets,equalSeparators,editors.get(i));
    title=createTitleWithNotifications(title,contents.get(i));
    result.add(title);
  }
  return result;
}
