{
  final Set<Module> dependentModules=new THashSet<Module>();
  ModuleUtil.getDependencies(module,dependentModules);
  if (PropertyFileIndex.DEBUG) {
    System.out.println("PropertiesReferenceManager.processPropertiesFiles");
    System.out.println("PropertiesFileType.FILE_TYPE = " + PropertiesFileType.FILE_TYPE);
  }
  for (  VirtualFile file : PropertiesFilesManager.getAllPropertiesFiles(myProject)) {
    if (PropertyFileIndex.DEBUG) {
      System.out.println("file = " + file.getPath());
    }
    if (!dependentModules.contains(ModuleUtil.findModuleForFile(file,myProject))) {
      continue;
    }
    PsiFile psiFile=myPsiManager.findFile(file);
    if (!(psiFile instanceof PropertiesFile))     continue;
    PsiDirectory directory=psiFile.getParent();
    String packageQualifiedName=PropertiesUtil.getPackageQualifiedName(directory);
    if (packageQualifiedName != null) {
      StringBuilder qName=new StringBuilder(packageQualifiedName);
      if (qName.length() > 0) {
        qName.append(".");
      }
      qName.append(PropertiesUtil.getBaseName(file));
      processor.process(qName.toString(),(PropertiesFile)psiFile);
    }
  }
}
