{
  PsiExpression oldInitializer=variable.getInitializer();
  if (oldInitializer != null) {
    oldInitializer.delete();
  }
  if (initializer == null) {
    return;
  }
  CompositeElement variableElement=(CompositeElement)variable.getNode();
  ASTNode eq=variableElement.findChildByRole(ChildRole.INITIALIZER_EQ);
  if (eq == null) {
    final CharTable charTable=SharedImplUtil.findCharTableByTree(variableElement);
    eq=Factory.createSingleLeafElement(JavaTokenType.EQ,"=",0,1,charTable,variable.getManager());
    PsiElement element=variable.getNameIdentifier();
    final ASTNode node=PsiImplUtil.skipWhitespaceCommentsAndTokens(element.getNode().getTreeNext(),TokenSet.create(JavaTokenType.LBRACKET,JavaTokenType.RBRACKET));
    variableElement.addInternal((TreeElement)eq,eq,node,Boolean.TRUE);
    eq=variableElement.findChildByRole(ChildRole.INITIALIZER_EQ);
  }
  variable.addAfter(initializer,eq.getPsi());
}
