{
  final Map<String,XmlElementDescriptor> map=new LinkedHashMap<String,XmlElementDescriptor>(5);
  Processor<XmlTag> processor=new Processor<XmlTag>(){
    @Override public boolean process(    XmlTag xmlTag){
      if ("element".equals(xmlTag.getLocalName()) && xmlTag.getAttribute("name") != null) {
        XmlNSDescriptor nsDescriptor=xmlTag.getNSDescriptor(xmlTag.getNamespace(),false);
        if (nsDescriptor instanceof XmlNSDescriptorImpl) {
          addElementDescriptor(map,((XmlNSDescriptorImpl)nsDescriptor).createElementDescriptor(xmlTag));
        }
      }
      return true;
    }
  }
;
  new XmlSchemaTagsProcessor(myDocumentDescriptor).processTags(myTag,processor);
  addSubstitutionGroups(map);
  filterAbstractElements(map);
  return map.values().toArray(new XmlElementDescriptor[map.values().size()]);
}
