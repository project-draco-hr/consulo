{
  final PsiElement element=getElement();
  if (element instanceof GrInstanceOfExpression) {
    GrExpression operand=((GrInstanceOfExpression)element).getOperand();
    final GrTypeElement typeElement=((GrInstanceOfExpression)element).getTypeElement();
    if (operand instanceof GrReferenceExpression && ((GrReferenceExpression)operand).getQualifier() == null && typeElement != null) {
      return new Pair<GrExpression,PsiType>(((GrInstanceOfExpression)element).getOperand(),typeElement.getType());
    }
  }
 else   if (element instanceof GrBinaryExpression && ControlFlowBuilderUtil.isInstanceOfBinary((GrBinaryExpression)element)) {
    GrExpression left=((GrBinaryExpression)element).getLeftOperand();
    GrExpression right=((GrBinaryExpression)element).getRightOperand();
    GroovyResolveResult result=((GrReferenceExpression)right).advancedResolve();
    PsiClass resolved=(PsiClass)result.getElement();
    PsiClassType type=JavaPsiFacade.getElementFactory(element.getProject()).createType(resolved,result.getSubstitutor());
    return new Pair<GrExpression,PsiType>(left,type);
  }
  return null;
}
