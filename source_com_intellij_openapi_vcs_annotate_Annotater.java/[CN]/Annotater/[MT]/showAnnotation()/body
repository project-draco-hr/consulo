{
  OpenFileDescriptor openFileDescriptor=new OpenFileDescriptor(myProject,myVirtualFile);
  Editor editor=FileEditorManager.getInstance(myProject).openTextEditor(openFileDescriptor,true);
  if (editor == null) {
    Messages.showMessageDialog(VcsBundle.message("message.text.cannot.open.editor",myVirtualFile.getPresentableUrl()),VcsBundle.message("message.title.cannot.open.editor"),Messages.getInformationIcon());
    return;
  }
  EditorGutter gutterComponent=editor.getGutter();
  gutterComponent.closeAllAnnotations();
  final LineAnnotationAspect[] aspects=myFileAnnotation.getAspects();
  for (int i=0; i < aspects.length; i++) {
    final LineAnnotationAspect aspect=aspects[i];
    final TextAnnotationGutterProvider provider=new TextAnnotationGutterProvider(){
      public String getLineText(      int line,      Editor editor){
        return aspect.getValue(line);
      }
      @Nullable public String getToolTip(      final int line,      final Editor editor){
        return myFileAnnotation.getToolTip(line);
      }
      public void gutterClosed(){
      }
    }
;
    if (aspect instanceof EditorGutterAction) {
      gutterComponent.registerTextAnnotation(provider,(EditorGutterAction)aspect);
    }
 else {
      gutterComponent.registerTextAnnotation(provider);
    }
  }
}
