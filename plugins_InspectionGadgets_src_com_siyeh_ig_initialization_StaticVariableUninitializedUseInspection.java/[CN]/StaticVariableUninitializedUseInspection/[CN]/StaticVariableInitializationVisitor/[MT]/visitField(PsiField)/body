{
  if (!field.hasModifierProperty(PsiModifier.STATIC)) {
    return;
  }
  if (field.getInitializer() != null) {
    return;
  }
  final PsiClass containingClass=field.getContainingClass();
  if (containingClass == null) {
    return;
  }
  if (containingClass.isEnum()) {
    return;
  }
  if (m_ignorePrimitives) {
    final PsiType type=field.getType();
    if (ClassUtils.isPrimitive(type)) {
      return;
    }
  }
  final PsiClassInitializer[] initializers=containingClass.getInitializers();
  final InitializationReadUtils iru;
  iru=new InitializationReadUtils();
  for (  final PsiClassInitializer initializer : initializers) {
    if (initializer.hasModifierProperty(PsiModifier.STATIC)) {
      final PsiCodeBlock body=initializer.getBody();
      if (iru.blockMustAssignVariable(field,body)) {
        break;
      }
    }
  }
  final List<PsiExpression> badReads=iru.getUninitializedReads();
  for (  PsiExpression badRead : badReads) {
    registerError(badRead);
  }
}
