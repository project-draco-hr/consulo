{
  if (myImports == null) {
    myImports=AntFile.NO_FILES;
    final XmlTag se=getSourceElement();
    final PsiFile psiFile=se.getContainingFile();
    final List<AntFile> imports=new ArrayList<AntFile>();
    final StringBuilder builder=StringBuilderSpinAllocator.alloc();
    try {
      for (      final XmlTag tag : se.getSubTags()) {
        if (!psiFile.equals(tag.getContainingFile())) {
          buildTagText(tag,builder);
        }
 else         if (AntFileImpl.IMPORT_TAG.equals(tag.getName())) {
          final AntFile imported=AntImportImpl.getImportedFile(tag.getAttributeValue(AntFileImpl.FILE_ATTR),this);
          if (imported != null) {
            imports.add(imported);
          }
        }
      }
      if (builder.length() > 0) {
        builder.insert(0,"\">");
        builder.insert(0,getBaseDir());
        builder.insert(0,"<project basedir=\"");
        builder.append("</project>");
        final PsiElementFactory elementFactory=getManager().getElementFactory();
        final XmlFile xmlFile=(XmlFile)elementFactory.createFileFromText("dummyEntities.xml",StdFileTypes.XML,builder.toString(),LocalTimeCounter.currentTime(),false,false);
        imports.add(new AntFileImpl(xmlFile.getViewProvider()){
          public VirtualFile getContainingPath(){
            return AntProjectImpl.this.getAntFile().getContainingPath();
          }
        }
);
      }
    }
  finally {
      StringBuilderSpinAllocator.dispose(builder);
    }
    final int importedFiles=imports.size();
    if (importedFiles > 0) {
      myImports=imports.toArray(new AntFile[importedFiles]);
    }
  }
  return myImports;
}
