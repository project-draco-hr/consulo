{
  boolean toEnable=false;
  PlaceInDocument place=getPlace(event);
  if (place != null) {
    final Project project=event.getData(PlatformDataKeys.PROJECT);
    final Document document=place.getDocument();
    final int offset=place.getOffset();
    int line=document.getLineNumber(offset);
    VirtualFile file=FileDocumentManager.getInstance().getFile(document);
    XLineBreakpointType<?>[] breakpointTypes=XDebuggerUtil.getInstance().getLineBreakpointTypes();
    for (    XLineBreakpointType<?> breakpointType : breakpointTypes) {
      if (breakpointType.canPutAt(file,line)) {
        toEnable=true;
        break;
      }
    }
    if (!toEnable && DebuggerUtils.supportsJVMDebugging(file.getFileType())) {
      final BreakpointManager breakpointManager=DebuggerManagerEx.getInstanceEx(project).getBreakpointManager();
      toEnable=breakpointManager.findBreakpoint(document,offset,LineBreakpoint.CATEGORY) != null || LineBreakpoint.canAddLineBreakpoint(project,document,line);
    }
  }
  final Presentation presentation=event.getPresentation();
  if (ActionPlaces.isPopupPlace(event.getPlace())) {
    presentation.setVisible(toEnable);
  }
 else {
    presentation.setEnabled(toEnable);
  }
}
