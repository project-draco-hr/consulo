{
  if (!CommonRefactoringUtil.checkReadOnlyStatus(project,method))   return;
  PsiMethod newMethod=SuperMethodWarningUtil.checkSuperMethod(method,RefactoringBundle.message("to.refactor"));
  if (newMethod == null)   return;
  if (!newMethod.equals(method)) {
    invoke(newMethod,project,editor);
    return;
  }
  if (!CommonRefactoringUtil.checkReadOnlyStatus(project,method))   return;
  final PsiClass containingClass=method.getContainingClass();
  final PsiReferenceExpression refExpr=editor != null ? TargetElementUtil.findReferenceExpression(editor) : null;
  final DialogWrapper dialog=new JavaChangeSignatureDialog(project,method,containingClass != null && !containingClass.isInterface(),refExpr);
  dialog.show();
}
