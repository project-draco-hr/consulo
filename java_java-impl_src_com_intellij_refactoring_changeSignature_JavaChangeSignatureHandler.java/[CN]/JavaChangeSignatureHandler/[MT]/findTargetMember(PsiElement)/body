{
  if (PsiTreeUtil.getParentOfType(element,PsiParameterList.class) != null) {
    return PsiTreeUtil.getParentOfType(element,PsiMethod.class);
  }
  final PsiElement elementParent=element.getParent();
  if (elementParent instanceof PsiMethod && ((PsiMethod)elementParent).getNameIdentifier() == element) {
    return elementParent;
  }
  if (elementParent instanceof PsiClass && ((PsiClass)elementParent).getNameIdentifier() == element) {
    return elementParent;
  }
  final PsiCallExpression expression=PsiTreeUtil.getParentOfType(element,PsiCallExpression.class);
  if (expression != null) {
    final PsiExpression qualifierExpression;
    if (expression instanceof PsiMethodCallExpression) {
      qualifierExpression=((PsiMethodCallExpression)expression).getMethodExpression().getQualifierExpression();
    }
 else     if (expression instanceof PsiNewExpression) {
      qualifierExpression=((PsiNewExpression)expression).getQualifier();
    }
 else {
      qualifierExpression=null;
    }
    if (PsiTreeUtil.isAncestor(qualifierExpression,element,false)) {
      final PsiExpressionList expressionList=PsiTreeUtil.getParentOfType(qualifierExpression,PsiExpressionList.class);
      if (expressionList != null) {
        final PsiElement parent=expressionList.getParent();
        if (parent instanceof PsiCallExpression) {
          return ((PsiCallExpression)parent).resolveMethod();
        }
      }
    }
 else {
      return expression.resolveMethod();
    }
  }
  final PsiTypeParameterList typeParameterList=PsiTreeUtil.getParentOfType(element,PsiTypeParameterList.class);
  if (typeParameterList != null) {
    return PsiTreeUtil.getParentOfType(typeParameterList,PsiMember.class);
  }
  final PsiReferenceParameterList referenceParameterList=PsiTreeUtil.getParentOfType(element,PsiReferenceParameterList.class);
  if (referenceParameterList != null) {
    final PsiJavaCodeReferenceElement referenceElement=PsiTreeUtil.getParentOfType(referenceParameterList,PsiJavaCodeReferenceElement.class);
    if (referenceElement != null) {
      final PsiElement resolved=referenceElement.resolve();
      if (resolved instanceof PsiClass) {
        return resolved;
      }
 else       if (resolved instanceof PsiMethod) {
        return resolved;
      }
    }
  }
  return null;
}
