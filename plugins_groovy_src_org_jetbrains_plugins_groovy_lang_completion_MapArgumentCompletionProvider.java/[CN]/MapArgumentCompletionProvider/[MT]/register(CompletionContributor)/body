{
  MapArgumentCompletionProvider instance=new MapArgumentCompletionProvider();
  ElementPattern<PsiElement> inArgumentListOfCall=psiElement().withParent(psiElement(GrReferenceExpression.class).withParent(StandardPatterns.or(psiElement(GrArgumentList.class).withParent(GrCall.class),new GroovyElementPattern.Capture<GrListOrMap>(new InitialPatternCondition<GrListOrMap>(GrListOrMap.class){
    @Override public boolean accepts(    @Nullable Object o,    ProcessingContext context){
      if (!(o instanceof GrListOrMap))       return false;
      PsiElement parent=((GrListOrMap)o).getParent();
      if (!(parent instanceof GrArgumentList))       return false;
      GrArgumentList argumentList=(GrArgumentList)parent;
      if (argumentList.getNamedArguments().length > 0)       return false;
      if (argumentList.getExpressionArgumentIndex((GrListOrMap)o) > 0)       return false;
      if (!(argumentList.getParent() instanceof GrCall))       return false;
      return true;
    }
  }
))));
  contributor.extend(CompletionType.BASIC,inArgumentListOfCall,instance);
  contributor.extend(CompletionType.BASIC,psiElement(GroovyTokenTypes.mIDENT).withParent(psiElement(GrArgumentLabel.class).withParent(GroovyPatterns.methodNamedParameter(null))),instance);
}
