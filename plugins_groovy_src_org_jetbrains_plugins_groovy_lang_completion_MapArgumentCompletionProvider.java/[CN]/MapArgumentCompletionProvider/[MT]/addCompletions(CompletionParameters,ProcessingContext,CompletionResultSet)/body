{
  PsiElement mapOrArgumentList=findMapOrArgumentList(parameters);
  if (mapOrArgumentList == null) {
    return;
  }
  if (isMapKeyCompletion(parameters)) {
    result.stopHere();
  }
  Map<String,NamedArgumentDescriptor> map=calcNamedArgumentsForCall(mapOrArgumentList);
  if (map == null) {
    return;
  }
  if (map.isEmpty()) {
    map=findOtherNamedArgumentsInFile(mapOrArgumentList);
  }
  for (  GrNamedArgument argument : getSiblingNamedArguments(mapOrArgumentList)) {
    map.remove(argument.getLabelName());
  }
  for (  Map.Entry<String,NamedArgumentDescriptor> entry : map.entrySet()) {
    LookupElementBuilder lookup=LookupElementBuilder.create(entry.getValue(),entry.getKey()).setInsertHandler(NamedArgumentInsertHandler.INSTANCE).setTailText(":");
    if (entry.getValue().getPriority() == Priority.UNLIKELY) {
      lookup.setItemTextForeground(DefaultHighlighter.MAP_KEY_COLOR);
    }
 else {
      lookup=lookup.setIcon(GroovyIcons.DYNAMIC);
    }
    result.addElement(lookup);
  }
}
