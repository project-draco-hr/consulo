{
  Icon icon=baseIcon;
  if (project != null) {
    final boolean isUnderSource=FileIndexUtil.isJavaSourceFile(project,file);
    FileType fileType=FileTypeManager.getInstance().getFileTypeByFile(file);
    if (fileType == StdFileTypes.JAVA) {
      if (!isUnderSource) {
        icon=Icons.JAVA_OUTSIDE_SOURCE_ICON;
      }
 else {
        PsiFile psiFile=PsiManager.getInstance(project).findFile(file);
        if (psiFile instanceof PsiClassOwner) {
          PsiClass[] classes=((PsiClassOwner)psiFile).getClasses();
          if (classes.length > 0) {
            final String fileName=file.getNameWithoutExtension();
            Icon classIcon=null;
            for (            PsiClass aClass : classes) {
              if (Comparing.strEqual(aClass.getName(),fileName)) {
                classIcon=aClass.getIcon(flags);
                break;
              }
            }
            if (classIcon == null)             classIcon=classes[classes.length - 1].getIcon(flags);
            icon=classIcon;
          }
        }
      }
    }
  }
  Icon excludedIcon=null;
  if (project != null) {
    final ProjectFileIndex projectFileIndex=ProjectRootManager.getInstance(project).getFileIndex();
    if (projectFileIndex.isInSource(file) && CompilerManager.getInstance(project).isExcludedFromCompilation(file)) {
      excludedIcon=Icons.EXCLUDED_FROM_COMPILE_ICON;
    }
  }
  Icon lockedIcon=null;
  if ((flags & Iconable.ICON_FLAG_READ_STATUS) != 0 && !file.isWritable()) {
    lockedIcon=Icons.LOCKED_ICON;
  }
  if (excludedIcon != null || lockedIcon != null) {
    LayeredIcon layeredIcon=new LayeredIcon(1 + (lockedIcon != null ? 1 : 0) + (excludedIcon != null ? 1 : 0));
    int layer=0;
    layeredIcon.setIcon(icon,layer++);
    if (lockedIcon != null) {
      layeredIcon.setIcon(lockedIcon,layer++);
    }
    if (excludedIcon != null) {
      layeredIcon.setIcon(excludedIcon,layer);
    }
    icon=layeredIcon;
  }
  return icon;
}
