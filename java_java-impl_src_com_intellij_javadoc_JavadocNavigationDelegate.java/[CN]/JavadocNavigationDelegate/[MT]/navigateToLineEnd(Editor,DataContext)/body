{
  if (!CodeInsightSettings.getInstance().SMART_END_ACTION) {
    return Result.CONTINUE;
  }
  final Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  if (project == null) {
    return Result.CONTINUE;
  }
  final Document document=editor.getDocument();
  PsiFile psiFile=LangDataKeys.PSI_FILE.getData(dataContext);
  if (psiFile == null) {
    psiFile=PsiDocumentManager.getInstance(project).getPsiFile(document);
  }
  if (psiFile == null) {
    return Result.CONTINUE;
  }
  final CaretModel caretModel=editor.getCaretModel();
  final int offset=caretModel.getOffset();
  final CharSequence text=document.getCharsSequence();
  int line=caretModel.getLogicalPosition().line;
  final int endLineOffset=document.getLineEndOffset(line);
  final LogicalPosition endLineLogicalPosition=editor.offsetToLogicalPosition(endLineOffset);
  final int lastNonWsSymbolOffset=CharArrayUtil.shiftBackward(text,endLineOffset," \t");
  if (lastNonWsSymbolOffset > offset || caretModel.getLogicalPosition().column > endLineLogicalPosition.column) {
    return Result.CONTINUE;
  }
  final Pair<JavadocHelper.JavadocParameterInfo,List<JavadocHelper.JavadocParameterInfo>> pair=myHelper.parse(psiFile,editor,offset);
  if (pair.first == null) {
    return Result.CONTINUE;
  }
  int descriptionStartColumn=-1;
  int parameterNameEndColumn=-1;
  for (  JavadocHelper.JavadocParameterInfo parameterInfo : pair.second) {
    parameterNameEndColumn=Math.max(parameterNameEndColumn,parameterInfo.parameterNameEndPosition.column);
    if (parameterInfo.parameterDescriptionStartPosition != null) {
      descriptionStartColumn=Math.max(descriptionStartColumn,parameterInfo.parameterDescriptionStartPosition.column);
    }
  }
  if (pair.first.parameterDescriptionStartPosition != null) {
    return Result.CONTINUE;
  }
  final CodeStyleSettings codeStyleSettings=CodeStyleSettingsManager.getInstance(project).getCurrentSettings();
  final int indentSize=codeStyleSettings.getIndentSize(psiFile.getFileType());
  int column;
  if (codeStyleSettings.JD_ALIGN_PARAM_COMMENTS) {
    column=Math.max(descriptionStartColumn,parameterNameEndColumn);
    if (column <= parameterNameEndColumn) {
      column=parameterNameEndColumn + indentSize;
    }
  }
 else {
    column=pair.first.parameterNameEndPosition.column + indentSize;
  }
  myHelper.navigate(new LogicalPosition(line,column),editor,psiFile.getProject());
  return Result.STOP;
}
