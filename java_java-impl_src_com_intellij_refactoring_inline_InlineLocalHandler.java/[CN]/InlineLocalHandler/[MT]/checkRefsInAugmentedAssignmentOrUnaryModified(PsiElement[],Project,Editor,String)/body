{
  for (  PsiElement element : refsToInline) {
    final PsiElement parent=element.getParent();
    if (parent instanceof PsiAssignmentExpression && element == ((PsiAssignmentExpression)parent).getLExpression() || parent instanceof PsiPrefixExpression || parent instanceof PsiPostfixExpression) {
      EditorColorsManager manager=EditorColorsManager.getInstance();
      final TextAttributes writeAttributes=manager.getGlobalScheme().getAttributes(EditorColors.WRITE_SEARCH_RESULT_ATTRIBUTES);
      HighlightManager.getInstance(project).addOccurrenceHighlights(editor,new PsiElement[]{element},writeAttributes,true,null);
      String message=RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message("variable.is.accessed.for.writing",localName));
      CommonRefactoringUtil.showErrorHint(project,editor,message,REFACTORING_NAME,HelpID.INLINE_VARIABLE);
      WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message("press.escape.to.remove.the.highlighting"));
      return true;
    }
  }
  return false;
}
