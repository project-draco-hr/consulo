{
  int result=0;
  result=31 * result + (myStringToFind != null ? myStringToFind.hashCode() : 0);
  result=31 * result + (myStringToReplace != null ? myStringToReplace.hashCode() : 0);
  result=31 * result + (isSearchHighlighters ? 1 : 0);
  result=31 * result + (isReplaceState ? 1 : 0);
  result=31 * result + (isWholeWordsOnly ? 1 : 0);
  result=31 * result + (isInCommentsOnly ? 1 : 0);
  result=31 * result + (isInStringLiteralsOnly ? 1 : 0);
  result=31 * result + (isFromCursor ? 1 : 0);
  result=31 * result + (isForward ? 1 : 0);
  result=31 * result + (isGlobal ? 1 : 0);
  result=31 * result + (isRegularExpressions ? 1 : 0);
  result=31 * result + (isCaseSensitive ? 1 : 0);
  result=31 * result + (isMultipleFiles ? 1 : 0);
  result=31 * result + (isPromptOnReplace ? 1 : 0);
  result=31 * result + (isReplaceAll ? 1 : 0);
  result=31 * result + (isOpenNewTab ? 1 : 0);
  result=31 * result + (isOpenInNewTabEnabled ? 1 : 0);
  result=31 * result + (isOpenNewTabVisible ? 1 : 0);
  result=31 * result + (isProjectScope ? 1 : 0);
  result=31 * result + (isFindAll ? 1 : 0);
  result=31 * result + (isFindAllEnabled ? 1 : 0);
  result=31 * result + (moduleName != null ? moduleName.hashCode() : 0);
  result=31 * result + (directoryName != null ? directoryName.hashCode() : 0);
  result=31 * result + (isWithSubdirectories ? 1 : 0);
  result=31 * result + (fileFilter != null ? fileFilter.hashCode() : 0);
  result=31 * result + (customScopeName != null ? customScopeName.hashCode() : 0);
  result=31 * result + (customScope != null ? customScope.hashCode() : 0);
  result=31 * result + (isCustomScope ? 1 : 0);
  result=31 * result + (isMultiline ? 1 : 0);
  result=31 * result + (isPreserveCase ? 1 : 0);
  result=31 * result + (myPattern != null ? myPattern.hashCode() : 0);
  return result;
}
