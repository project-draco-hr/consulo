{
  TestFrameworkActions.installFilterAction(model);
  myScrollToSource.setModel(model);
  myTreeExpander.setModel(model);
  myOccurenceNavigator.setModel(model);
  if (myExportAction != null) {
    myExportAction.setModel(model);
  }
  for (  ToggleModelAction action : myActions) {
    action.setModel(model);
  }
  TestFrameworkActions.addPropertyListener(TestConsoleProperties.SORT_ALPHABETICALLY,new TestFrameworkPropertyListener<Boolean>(){
    @Override public void onChanged(    Boolean value){
      final AbstractTestTreeBuilder builder=model.getTreeBuilder();
      if (builder != null) {
        builder.setTestsComparator(value);
      }
    }
  }
,model,true);
  TestFrameworkActions.addPropertyListener(TestConsoleProperties.SORT_BY_DURATION,new TestFrameworkPropertyListener<Boolean>(){
    @Override public void onChanged(    Boolean value){
      final AbstractTestTreeBuilder builder=model.getTreeBuilder();
      if (builder != null) {
        builder.setStatisticsComparator(model.getProperties(),value);
      }
    }
  }
,model,true);
}
