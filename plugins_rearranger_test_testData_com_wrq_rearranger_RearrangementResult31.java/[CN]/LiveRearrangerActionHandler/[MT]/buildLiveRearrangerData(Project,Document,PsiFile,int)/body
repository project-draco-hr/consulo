{
  final PsiDocumentManager documentManager=PsiDocumentManager.getInstance(project);
  documentManager.commitDocument(document);
  final RearrangerSettings settings=new RearrangerSettings();
  settings.setAskBeforeRearranging(true);
  final Runnable task=new Runnable(){
    public void run(){
      logger.debug("liveRearrangeDocument task started");
      liveRearrangeDocument(project,psiFile,settings,document,cursorOffset);
    }
  }
;
  Thread t=new Thread(new Runnable(){
    public void run(){
      logger.debug("started thread " + Thread.currentThread().getName());
      final Application application=ApplicationManager.getApplication();
      application.runReadAction(new Runnable(){
        public void run(){
          logger.debug("enter application.runReadAction() on thread " + Thread.currentThread().getName());
          task.run();
          logger.debug("exit application.runReadAction() on thread " + Thread.currentThread().getName());
        }
      }
);
    }
  }
,"Live Rearranger parser");
  t.start();
  logger.debug("exit buildLiveRearrangerData on thread " + Thread.currentThread().getName());
}
