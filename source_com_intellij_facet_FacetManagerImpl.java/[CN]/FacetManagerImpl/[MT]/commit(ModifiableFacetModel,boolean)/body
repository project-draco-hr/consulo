{
  LOG.assertTrue(!myInsideCommit,"Recursive commit");
  Set<Facet> toRemove=new HashSet<Facet>(Arrays.asList(getAllFacets()));
  List<Facet> toAdd=new ArrayList<Facet>();
  List<FacetRenameInfo> toRename=new ArrayList<FacetRenameInfo>();
  final FacetManagerListener publisher=myMessageBus.syncPublisher(FACETS_TOPIC);
  try {
    myInsideCommit=true;
    for (    Facet facet : model.getAllFacets()) {
      boolean isNew=!toRemove.remove(facet);
      if (isNew) {
        toAdd.add(facet);
      }
    }
    List<Facet> newFacets=new ArrayList<Facet>();
    for (    Facet facet : getAllFacets()) {
      if (!toRemove.contains(facet)) {
        newFacets.add(facet);
      }
    }
    newFacets.addAll(toAdd);
    for (    Facet facet : newFacets) {
      final String newName=model.getNewName(facet);
      if (newName != null && !newName.equals(facet.getName())) {
        toRename.add(new FacetRenameInfo(facet,facet.getName(),newName));
      }
    }
    if (fireEvents) {
      for (      Facet facet : toAdd) {
        publisher.beforeFacetAdded(facet);
      }
      for (      Facet facet : toRemove) {
        publisher.beforeFacetRemoved(facet);
      }
      for (      FacetRenameInfo info : toRename) {
        publisher.beforeFacetRenamed(info.myFacet);
      }
    }
    for (    FacetRenameInfo info : toRename) {
      info.myFacet.setName(info.myNewName);
    }
    myModel.setAllFacets(newFacets.toArray(new Facet[newFacets.size()]));
  }
  finally {
    myInsideCommit=false;
  }
  if (myModuleAdded) {
    for (    Facet facet : toAdd) {
      facet.initFacet();
    }
  }
  for (  Facet facet : toRemove) {
    Disposer.dispose(facet);
  }
  if (fireEvents) {
    for (    Facet facet : toAdd) {
      publisher.facetAdded(facet);
    }
    for (    Facet facet : toRemove) {
      publisher.facetRemoved(facet);
    }
    for (    FacetRenameInfo info : toRename) {
      publisher.facetRenamed(info.myFacet,info.myOldName);
    }
  }
}
