{
  final PsiElement element=descriptor.getPsiElement();
  final PsiMethod method=(PsiMethod)element.getParent();
  final PsiParameterList parameterList=method.getParameterList();
  final PsiParameter[] parameters=parameterList.getParameters();
  final Query<PsiReference> query=ReferencesSearch.search(method);
  query.forEach(new Processor<PsiReference>(){
    public boolean process(    PsiReference reference){
      final PsiReferenceExpression referenceExpression=(PsiReferenceExpression)reference.getElement();
      final PsiMethodCallExpression methodCallExpression=(PsiMethodCallExpression)referenceExpression.getParent();
      final PsiExpressionList argumentList=methodCallExpression.getArgumentList();
      final PsiExpression[] arguments=argumentList.getExpressions();
      for (      PsiExpression argument : arguments) {
        System.out.println(argument);
      }
      return true;
    }
  }
);
  final PsiParameter lastParameter=parameters[parameters.length - 1];
  if (lastParameter.isVarArgs()) {
    final PsiEllipsisType type=(PsiEllipsisType)lastParameter.getType();
    final PsiType arrayType=type.toArrayType();
    final PsiManager psiManager=lastParameter.getManager();
    final PsiElementFactory factory=psiManager.getElementFactory();
    final PsiTypeElement newTypeElement=factory.createTypeElement(arrayType);
    final PsiTypeElement typeElement=lastParameter.getTypeElement();
    typeElement.replace(newTypeElement);
  }
}
