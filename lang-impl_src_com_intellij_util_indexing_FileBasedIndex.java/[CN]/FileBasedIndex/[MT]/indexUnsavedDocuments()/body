{
  myChangedFilesUpdater.forceUpdate();
  final FileDocumentManager fdManager=FileDocumentManager.getInstance();
  final Document[] documents=fdManager.getUnsavedDocuments();
  if (documents.length > 0) {
    setDataBufferingEnabled(true);
    for (    Document document : documents) {
      final VirtualFile vFile=fdManager.getFile(document);
      if (!vFile.isValid()) {
        continue;
      }
      final Pair<CharSequence,Long> indexingInfo=myIndexingHistory.get(document);
      final long documentStamp=document.getModificationStamp();
      if (indexingInfo == null || documentStamp != indexingInfo.getSecond().longValue()) {
        final FileContent oldFc=new FileContent(vFile,indexingInfo != null ? indexingInfo.getFirst() : loadContent(vFile));
        final FileContent newFc=new FileContent(vFile,document.getText());
        for (        String indexId : myIndices.keySet()) {
          if (getInputFilter(indexId).acceptInput(vFile)) {
            final int inputId=Math.abs(getFileId(vFile));
            getIndex(indexId).update(inputId,newFc,oldFc);
          }
        }
        myIndexingHistory.put(document,new Pair<CharSequence,Long>(newFc.content,documentStamp));
      }
    }
  }
}
