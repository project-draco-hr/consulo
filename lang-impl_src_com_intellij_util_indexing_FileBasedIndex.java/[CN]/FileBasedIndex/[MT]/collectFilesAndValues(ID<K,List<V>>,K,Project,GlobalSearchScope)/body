{
  final List<Pair<VirtualFile,V>> result=new ArrayList<Pair<VirtualFile,V>>();
  final DataFilter<K,List<V>> filter=new DataFilter<K,List<V>>(){
    public List<List<V>> process(    final K key,    final ValueContainer<List<V>> listValueContainer){
      final Iterator<List<V>> listIterator=listValueContainer.getValueIterator();
      while (listIterator.hasNext()) {
        final List<V> entryList=listIterator.next();
        final ValueContainer.IntIterator idIterator=listValueContainer.getInputIdsIterator(entryList);
        while (idIterator.hasNext()) {
          final int id=idIterator.next();
          VirtualFile file=findFileById(project,id);
          if (file != null && (scope == null || scope.contains(file))) {
            for (            V e : entryList) {
              result.add(new Pair<VirtualFile,V>(file,e));
            }
          }
        }
      }
      return Collections.emptyList();
    }
  }
;
  getInstance().getContainingFiles(indexId,key,project,filter);
  return result;
}
