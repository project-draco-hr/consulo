{
  try {
    checkRebuild(indexId);
    indexUnsavedDocuments();
    final UpdatableIndex<K,V,FileContent> index=getIndex(indexId);
    if (index == null) {
      return Collections.emptyList();
    }
    final Lock readLock=index.getReadLock();
    readLock.lock();
    try {
      final ValueContainer<V> container=index.getData(dataKey);
      final List<V> valueList=filter != null ? filter.process(dataKey,container) : container.toValueList();
      if (project != null) {
        final DirectoryIndex dirIndex=DirectoryIndex.getInstance(project);
        final PersistentFS fs=(PersistentFS)PersistentFS.getInstance();
        for (Iterator<V> it=valueList.iterator(); it.hasNext(); ) {
          final V value=it.next();
          if (!belongsToProject(container.getInputIdsIterator(value),dirIndex,fs)) {
            it.remove();
          }
        }
      }
      return valueList;
    }
  finally {
      readLock.unlock();
    }
  }
 catch (  StorageException e) {
    LOG.error(e);
  }
  return Collections.emptyList();
}
