{
  if (myRebuildStatus.get(indexId).compareAndSet(REQUIRES_REBUILD,REBUILD_IN_PROGRESS)) {
    final FileSystemSynchronizer synchronizer=new FileSystemSynchronizer();
    synchronizer.setCancelable(false);
    for (    Project project : ProjectManager.getInstance().getOpenProjects()) {
      synchronizer.registerCacheUpdater(new UnindexedFilesUpdater(project,ProjectRootManager.getInstance(project),this));
    }
    final Runnable rebuildRunnable=new Runnable(){
      public void run(){
        try {
          clearIndex(indexId);
          synchronizer.execute();
        }
 catch (        StorageException e) {
          requestRebuild(indexId);
          LOG.info(e);
        }
 finally {
          myRebuildStatus.get(indexId).compareAndSet(REBUILD_IN_PROGRESS,OK);
        }
      }
    }
;
    final Application application=ApplicationManager.getApplication();
    if (application.isUnitTestMode()) {
      rebuildRunnable.run();
    }
 else {
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          new Task.Modal(null,"Updating index",false){
            public void run(            @NotNull final ProgressIndicator indicator){
              rebuildRunnable.run();
            }
          }
.queue();
        }
      }
);
    }
  }
  if (myRebuildStatus.get(indexId).get() == REBUILD_IN_PROGRESS) {
    throw new ProcessCanceledException();
  }
}
