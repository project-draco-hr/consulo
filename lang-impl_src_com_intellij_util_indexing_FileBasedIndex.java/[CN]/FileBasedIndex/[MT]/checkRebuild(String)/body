{
  final boolean reallyRemoved=myRequiresRebuild.remove(indexId);
  if (!reallyRemoved) {
    return;
  }
  dropIndex(indexId);
  try {
    rewriteVersion(getVersionFile(indexId),myIndexIdToVersionMap.get(indexId));
  }
 catch (  IOException e) {
    LOG.error(e);
  }
  final Project[] projects=ProjectManager.getInstance().getOpenProjects();
  final FileSystemSynchronizer synchronizer=new FileSystemSynchronizer();
  synchronizer.setCancelable(false);
  for (  Project project : projects) {
    synchronizer.registerCacheUpdater(new UnindexedFilesUpdater(project,ProjectRootManager.getInstance(project),this));
  }
  new Task.Modal(null,"Updating index",false){
    public void run(    @NotNull final ProgressIndicator indicator){
      synchronizer.execute();
    }
  }
.queue();
}
