{
  checkRebuild(indexId);
  try {
    indexUnsavedDocuments();
    final UpdatableIndex<K,?,FileContent> index=getIndex(indexId);
    if (index == null) {
      return Collections.emptyList();
    }
    final List<VirtualFile> files=new ArrayList<VirtualFile>();
    final TIntHashSet processedIds=new TIntHashSet();
    final DirectoryIndex dirIndex=DirectoryIndex.getInstance(project);
    final PersistentFS fs=(PersistentFS)PersistentFS.getInstance();
    final Lock readLock=index.getReadLock();
    readLock.lock();
    try {
      final ValueContainer container=index.getData(dataKey);
      for (Iterator it=container.getValueIterator(); it.hasNext(); ) {
        final Object value=it.next();
        final ValueContainer.IntIterator inputIdsIterator=container.getInputIdsIterator(value);
        while (inputIdsIterator.hasNext()) {
          final int id=inputIdsIterator.next();
          if (!processedIds.contains(id)) {
            processedIds.add(id);
            VirtualFile file=findFileById(dirIndex,fs,id);
            if (file != null) {
              files.add(file);
            }
          }
        }
      }
    }
  finally {
      readLock.unlock();
    }
    return files;
  }
 catch (  StorageException e) {
    LOG.error(e);
  }
  return Collections.emptyList();
}
