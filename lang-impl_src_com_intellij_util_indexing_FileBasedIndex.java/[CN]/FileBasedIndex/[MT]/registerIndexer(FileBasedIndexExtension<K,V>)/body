{
  final ID<K,V> name=extension.getName();
  final int version=extension.getVersion();
  if (extension.dependsOnFileContent()) {
    myNeedContentLoading.add(name);
  }
  myIndexIdToVersionMap.put(name,version);
  final File versionFile=IndexInfrastructure.getVersionFile(name);
  if (IndexInfrastructure.versionDiffers(versionFile,version)) {
    FileUtil.delete(IndexInfrastructure.getIndexRootDir(name));
    IndexInfrastructure.rewriteVersion(versionFile,version);
  }
  for (int attempt=0; attempt < 2; attempt++) {
    try {
      final MapIndexStorage<K,V> storage=new MapIndexStorage<K,V>(IndexInfrastructure.getStorageFile(name),extension.getKeyDescriptor(),extension.getValueExternalizer());
      final IndexStorage<K,V> memStorage=new MemoryIndexStorage<K,V>(storage);
      final UpdatableIndex<K,V,FileContent> index=createIndex(extension,memStorage);
      myIndices.put(name,new Pair<UpdatableIndex<?,?,FileContent>,InputFilter>(index,extension.getInputFilter()));
      break;
    }
 catch (    IOException e) {
      FileUtil.delete(IndexInfrastructure.getIndexRootDir(name));
      IndexInfrastructure.rewriteVersion(versionFile,version);
    }
  }
}
