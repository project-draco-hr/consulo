{
  try {
    ensureUpToDate(indexId);
    final UpdatableIndex<K,V,FileContent> index=getIndex(indexId);
    if (index == null) {
      return;
    }
    final Lock readLock=index.getReadLock();
    readLock.lock();
    try {
      for (      K dataKey : index.getAllKeys()) {
        final ValueContainer<V> container=index.getData(dataKey);
        for (final Iterator<V> it=container.getValueIterator(); it.hasNext(); ) {
          final V value=it.next();
          for (final ValueContainer.IntIterator inputsIt=container.getInputIdsIterator(value); inputsIt.hasNext(); ) {
            processor.process(inputsIt.next(),value);
          }
        }
      }
    }
  finally {
      readLock.unlock();
    }
  }
 catch (  StorageException e) {
    scheduleRebuild(indexId,e);
  }
catch (  RuntimeException e) {
    final Throwable cause=e.getCause();
    if (cause instanceof StorageException || cause instanceof IOException) {
      scheduleRebuild(indexId,e);
    }
 else {
      throw e;
    }
  }
}
