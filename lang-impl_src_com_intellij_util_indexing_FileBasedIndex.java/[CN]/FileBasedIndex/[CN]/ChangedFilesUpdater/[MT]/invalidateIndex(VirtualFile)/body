{
  if (file.isDirectory()) {
    if (!(file instanceof NewVirtualFile) || ManagingFS.getInstance().areChildrenLoaded(file)) {
      for (      VirtualFile child : file.getChildren()) {
        invalidateIndex(child);
      }
    }
  }
 else {
    final List<String> toUpdate=new ArrayList<String>(myIndices.size());
    for (    String indexId : myIndices.keySet()) {
      if (getInputFilter(indexId).acceptInput(file) && IndexingStamp.isFileIndexed(file,indexId,getIndexCreationStamp(indexId))) {
        toUpdate.add(indexId);
      }
    }
    if (toUpdate.size() > 0) {
      includeToUpdateSet(file);
      final FileContent fc=new FileContent(file,loadContent(file));
      final RunnableFuture<?> future=(RunnableFuture<?>)myInvalidationService.submit(new Runnable(){
        public void run(){
          for (          String indexId : toUpdate) {
            try {
              updateSingleIndex(indexId,file,null,fc);
            }
 catch (            StorageException e) {
              LOG.error(e);
            }
          }
        }
      }
);
      myFutureInvalidations.offer(future);
    }
  }
}
