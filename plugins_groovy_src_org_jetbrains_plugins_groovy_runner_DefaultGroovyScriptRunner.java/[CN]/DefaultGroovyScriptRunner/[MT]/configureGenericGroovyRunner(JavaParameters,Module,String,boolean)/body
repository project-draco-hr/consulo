{
  final VirtualFile groovyJar=findGroovyJar(module);
  if (groovyJar != null) {
    params.getClassPath().add(groovyJar);
  }
 else   if (mayUseBundled) {
    params.getClassPath().add(GroovyUtils.getBundledGroovyJar());
  }
  setToolsJar(params);
  String groovyHome=LibrariesUtil.getGroovyHomePath(module);
  if (groovyHome != null) {
    groovyHome=FileUtil.toSystemDependentName(groovyHome);
  }
 else   if (mayUseBundled) {
    groovyHome=FileUtil.toCanonicalPath(GroovyUtils.getBundledGroovyJar().getParentFile().getParent());
  }
  setGroovyHome(params,groovyHome);
  final String confPath=getConfPath(groovyHome);
  params.getVMParametersList().add("-Dgroovy.starter.conf=" + confPath);
  params.setMainClass("org.codehaus.groovy.tools.GroovyStarter");
  params.getProgramParametersList().add("--conf");
  params.getProgramParametersList().add(confPath);
  params.getProgramParametersList().add("--main");
  params.getProgramParametersList().add(mainClass);
}
