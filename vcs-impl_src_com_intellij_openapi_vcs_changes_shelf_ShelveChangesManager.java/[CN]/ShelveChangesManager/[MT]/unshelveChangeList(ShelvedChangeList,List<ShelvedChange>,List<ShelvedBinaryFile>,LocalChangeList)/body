{
  List<FilePatch> remainingPatches=new ArrayList<FilePatch>();
  final List<TextFilePatch> textFilePatches;
  try {
    textFilePatches=loadTextPatches(changeList,changes,remainingPatches);
  }
 catch (  IOException e) {
    LOG.info(e);
    PatchApplier.showError(myProject,"Cannot load patch(es): " + e.getMessage(),true);
    return;
  }
catch (  PatchSyntaxException e) {
    PatchApplier.showError(myProject,"Cannot load patch(es): " + e.getMessage(),true);
    LOG.info(e);
    return;
  }
  final List<FilePatch> patches=new ArrayList<FilePatch>(textFilePatches);
  final List<ShelvedBinaryFile> remainingBinaries=new ArrayList<ShelvedBinaryFile>();
  final List<ShelvedBinaryFile> binaryFilesToUnshelve=getBinaryFilesToUnshelve(changeList,binaryFiles,remainingBinaries);
  for (  final ShelvedBinaryFile shelvedBinaryFile : binaryFilesToUnshelve) {
    patches.add(new ShelvedBinaryFilePatch(shelvedBinaryFile));
  }
  final BinaryPatchApplier binaryPatchApplier=new BinaryPatchApplier(binaryFilesToUnshelve.size());
  final PatchApplier patchApplier=new PatchApplier(myProject,myProject.getBaseDir(),patches,targetChangeList,binaryPatchApplier);
  patchApplier.execute();
  remainingPatches.addAll(patchApplier.getRemainingPatches());
  if ((remainingPatches.size() == 0) && remainingBinaries.isEmpty()) {
    deleteChangeList(changeList);
  }
 else {
    saveRemainingPatches(changeList,remainingPatches);
  }
}
