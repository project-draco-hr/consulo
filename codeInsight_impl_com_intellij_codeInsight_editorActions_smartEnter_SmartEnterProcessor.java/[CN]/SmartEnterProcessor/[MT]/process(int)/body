{
  if (attempt > MAX_ATTEMPTS)   throw new TooManyAttemptsException();
  try {
    commit();
    if (myFirstErrorOffset != Integer.MAX_VALUE) {
      myEditor.getCaretModel().moveToOffset(myFirstErrorOffset);
    }
    myFirstErrorOffset=Integer.MAX_VALUE;
    PsiElement atCaret=getStatementAtCaret();
    if (atCaret == null) {
      if (!new CommentBreakerEnterProcessor().doEnter(myEditor,myPsiFile,false)) {
        plainEnter();
      }
      return;
    }
    List<PsiElement> queue=new ArrayList<PsiElement>();
    collectAllElements(atCaret,queue,true);
    queue.add(atCaret);
    for (    PsiElement psiElement : queue) {
      final Language language=psiElement.getLanguage();
      if (isEnabledForLanguage(language)) {
        for (        Fixer fixer : ourFixers) {
          fixer.apply(myEditor,this,psiElement);
          if (myEditor.getUserData(LookupImpl.LOOKUP_IN_EDITOR_KEY) != null) {
            return;
          }
          if (isUncommited() || !psiElement.isValid()) {
            moveCaretInsideBracesIfAny();
            process(attempt + 1);
            return;
          }
        }
      }
    }
    doEnter(atCaret);
  }
 catch (  IncorrectOperationException e) {
    LOG.error(e);
  }
}
